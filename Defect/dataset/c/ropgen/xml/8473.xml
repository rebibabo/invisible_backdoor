<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8473.c" pos:tabs="8"><function pos:start="1:1" pos:end="301:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">vc1_decode_b_mb_intfi</name><parameter_list pos:start="1:34" pos:end="1:48">(<parameter pos:start="1:35" pos:end="1:47"><decl pos:start="1:35" pos:end="1:47"><type pos:start="1:35" pos:end="1:46"><name pos:start="1:35" pos:end="1:44">VC1Context</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">v</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="301:1">{<block_content pos:start="5:5" pos:end="299:5">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MpegEncContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:29">= <expr pos:start="5:25" pos:end="5:29"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:29"><name pos:start="5:26" pos:end="5:26">v</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:29">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">GetBitContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">gb</name> <init pos:start="7:23" pos:end="7:30">= <expr pos:start="7:25" pos:end="7:30"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:30"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:30">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:50"><decl pos:start="11:5" pos:end="11:49"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">mb_pos</name> <init pos:start="11:16" pos:end="11:49">= <expr pos:start="11:18" pos:end="11:49"><name pos:start="11:18" pos:end="11:24"><name pos:start="11:18" pos:end="11:18">s</name><operator pos:start="11:19" pos:end="11:20">-&gt;</operator><name pos:start="11:21" pos:end="11:24">mb_x</name></name> <operator pos:start="11:26" pos:end="11:26">+</operator> <name pos:start="11:28" pos:end="11:34"><name pos:start="11:28" pos:end="11:28">s</name><operator pos:start="11:29" pos:end="11:30">-&gt;</operator><name pos:start="11:31" pos:end="11:34">mb_y</name></name> <operator pos:start="11:36" pos:end="11:36">*</operator> <name pos:start="11:38" pos:end="11:49"><name pos:start="11:38" pos:end="11:38">s</name><operator pos:start="11:39" pos:end="11:40">-&gt;</operator><name pos:start="11:41" pos:end="11:49">mb_stride</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">cbp</name> <init pos:start="13:13" pos:end="13:15">= <expr pos:start="13:15" pos:end="13:15"><literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="13:18" pos:end="13:41">/* cbp decoding stuff */</comment>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:14">mqdiff</name></decl>, <decl pos:start="15:17" pos:end="15:22"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:17" pos:end="15:22">mquant</name></decl>;</decl_stmt> <comment type="block" pos:start="15:25" pos:end="15:45">/* MB quantization */</comment>

    <decl_stmt pos:start="17:5" pos:end="17:24"><decl pos:start="17:5" pos:end="17:23"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:12">ttmb</name> <init pos:start="17:14" pos:end="17:23">= <expr pos:start="17:16" pos:end="17:23"><name pos:start="17:16" pos:end="17:23"><name pos:start="17:16" pos:end="17:16">v</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:23">ttfrm</name></name></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="17:26" pos:end="17:48">/* MB Transform type */</comment>

    <decl_stmt pos:start="19:5" pos:end="19:26"><decl pos:start="19:5" pos:end="19:25"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:21">mb_has_coeffs</name> <init pos:start="19:23" pos:end="19:25">= <expr pos:start="19:25" pos:end="19:25"><literal type="number" pos:start="19:25" pos:end="19:25">0</literal></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="19:28" pos:end="19:42">/* last_flag */</comment>

    <decl_stmt pos:start="21:5" pos:end="21:12"><decl pos:start="21:5" pos:end="21:11"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:11">val</name></decl>;</decl_stmt> <comment type="block" pos:start="21:14" pos:end="21:29">/* temp value */</comment>

    <decl_stmt pos:start="23:5" pos:end="23:24"><decl pos:start="23:5" pos:end="23:23"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:19">first_block</name> <init pos:start="23:21" pos:end="23:23">= <expr pos:start="23:23" pos:end="23:23"><literal type="number" pos:start="23:23" pos:end="23:23">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:21"><decl pos:start="25:5" pos:end="25:15"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:15">dst_idx</name></decl>, <decl pos:start="25:18" pos:end="25:20"><type ref="prev" pos:start="25:5" pos:end="25:7"/><name pos:start="25:18" pos:end="25:20">off</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:12"><decl pos:start="27:5" pos:end="27:11"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:11">fwd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:41"><decl pos:start="29:5" pos:end="29:16"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:16"><name pos:start="29:9" pos:end="29:13">dmv_x</name><index pos:start="29:14" pos:end="29:16">[<expr pos:start="29:15" pos:end="29:15"><literal type="number" pos:start="29:15" pos:end="29:15">2</literal></expr>]</index></name></decl>, <decl pos:start="29:19" pos:end="29:26"><type ref="prev" pos:start="29:5" pos:end="29:7"/><name pos:start="29:19" pos:end="29:26"><name pos:start="29:19" pos:end="29:23">dmv_y</name><index pos:start="29:24" pos:end="29:26">[<expr pos:start="29:25" pos:end="29:25"><literal type="number" pos:start="29:25" pos:end="29:25">2</literal></expr>]</index></name></decl>, <decl pos:start="29:29" pos:end="29:40"><type ref="prev" pos:start="29:5" pos:end="29:7"/><name pos:start="29:29" pos:end="29:40"><name pos:start="29:29" pos:end="29:37">pred_flag</name><index pos:start="29:38" pos:end="29:40">[<expr pos:start="29:39" pos:end="29:39"><literal type="number" pos:start="29:39" pos:end="29:39">2</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:36"><decl pos:start="31:5" pos:end="31:35"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:15">bmvtype</name> <init pos:start="31:17" pos:end="31:35">= <expr pos:start="31:19" pos:end="31:35"><name pos:start="31:19" pos:end="31:35">BMV_TYPE_BACKWARD</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:19"><decl pos:start="33:5" pos:end="33:18"><type pos:start="33:5" pos:end="33:7"><name pos:start="33:5" pos:end="33:7">int</name></type> <name pos:start="33:9" pos:end="33:18">idx_mbmode</name></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:29"><decl pos:start="35:5" pos:end="35:28"><type pos:start="35:5" pos:end="35:7"><name pos:start="35:5" pos:end="35:7">int</name></type> <name pos:start="35:9" pos:end="35:17">av_uninit</name><argument_list pos:start="35:18" pos:end="35:28">(<argument pos:start="35:19" pos:end="35:27"><expr pos:start="35:19" pos:end="35:27"><name pos:start="35:19" pos:end="35:27">interpmvp</name></expr></argument>)</argument_list></decl>;</decl_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:24"><expr pos:start="39:5" pos:end="39:23"><name pos:start="39:5" pos:end="39:10">mquant</name>      <operator pos:start="39:17" pos:end="39:17">=</operator> <name pos:start="39:19" pos:end="39:23"><name pos:start="39:19" pos:end="39:19">v</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:23">pq</name></name></expr>;</expr_stmt> <comment type="block" pos:start="39:26" pos:end="39:51">/* Lossy initialization */</comment>

    <expr_stmt pos:start="41:5" pos:end="41:20"><expr pos:start="41:5" pos:end="41:19"><name pos:start="41:5" pos:end="41:15"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:15">mb_intra</name></name> <operator pos:start="41:17" pos:end="41:17">=</operator> <literal type="number" pos:start="41:19" pos:end="41:19">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:79"><expr pos:start="45:5" pos:end="45:78"><name pos:start="45:5" pos:end="45:14">idx_mbmode</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <call pos:start="45:18" pos:end="45:78"><name pos:start="45:18" pos:end="45:25">get_vlc2</name><argument_list pos:start="45:26" pos:end="45:78">(<argument pos:start="45:27" pos:end="45:28"><expr pos:start="45:27" pos:end="45:28"><name pos:start="45:27" pos:end="45:28">gb</name></expr></argument>, <argument pos:start="45:31" pos:end="45:50"><expr pos:start="45:31" pos:end="45:50"><name pos:start="45:31" pos:end="45:50"><name pos:start="45:31" pos:end="45:31">v</name><operator pos:start="45:32" pos:end="45:33">-&gt;</operator><name pos:start="45:34" pos:end="45:43">mbmode_vlc</name><operator pos:start="45:44" pos:end="45:45">-&gt;</operator><name pos:start="45:46" pos:end="45:50">table</name></name></expr></argument>, <argument pos:start="45:53" pos:end="45:74"><expr pos:start="45:53" pos:end="45:74"><name pos:start="45:53" pos:end="45:74">VC1_IF_MBMODE_VLC_BITS</name></expr></argument>, <argument pos:start="45:77" pos:end="45:77"><expr pos:start="45:77" pos:end="45:77"><literal type="number" pos:start="45:77" pos:end="45:77">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="299:5"><if pos:start="47:5" pos:end="123:5">if <condition pos:start="47:8" pos:end="47:24">(<expr pos:start="47:9" pos:end="47:23"><name pos:start="47:9" pos:end="47:18">idx_mbmode</name> <operator pos:start="47:20" pos:end="47:21">&lt;=</operator> <literal type="number" pos:start="47:23" pos:end="47:23">1</literal></expr>)</condition> <block pos:start="47:26" pos:end="123:5">{<block_content pos:start="49:9" pos:end="121:9"> <comment type="line" pos:start="47:28" pos:end="47:38">// intra MB</comment>

        <expr_stmt pos:start="49:9" pos:end="49:47"><expr pos:start="49:9" pos:end="49:46"><name pos:start="49:9" pos:end="49:19"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:19">mb_intra</name></name> <operator pos:start="49:21" pos:end="49:21">=</operator> <name pos:start="49:23" pos:end="49:42"><name pos:start="49:23" pos:end="49:23">v</name><operator pos:start="49:24" pos:end="49:25">-&gt;</operator><name pos:start="49:26" pos:end="49:33">is_intra</name><index pos:start="49:34" pos:end="49:42">[<expr pos:start="49:35" pos:end="49:41"><name pos:start="49:35" pos:end="49:41"><name pos:start="49:35" pos:end="49:35">s</name><operator pos:start="49:36" pos:end="49:37">-&gt;</operator><name pos:start="49:38" pos:end="49:41">mb_x</name></name></expr>]</index></name> <operator pos:start="49:44" pos:end="49:44">=</operator> <literal type="number" pos:start="49:46" pos:end="49:46">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:67"><expr pos:start="51:9" pos:end="51:66"><name pos:start="51:9" pos:end="51:62"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:26">current_picture</name><operator pos:start="51:27" pos:end="51:27">.</operator><name pos:start="51:28" pos:end="51:37">motion_val</name><index pos:start="51:38" pos:end="51:40">[<expr pos:start="51:39" pos:end="51:39"><literal type="number" pos:start="51:39" pos:end="51:39">1</literal></expr>]</index><index pos:start="51:41" pos:end="51:59">[<expr pos:start="51:42" pos:end="51:58"><name pos:start="51:42" pos:end="51:58"><name pos:start="51:42" pos:end="51:42">s</name><operator pos:start="51:43" pos:end="51:44">-&gt;</operator><name pos:start="51:45" pos:end="51:55">block_index</name><index pos:start="51:56" pos:end="51:58">[<expr pos:start="51:57" pos:end="51:57"><literal type="number" pos:start="51:57" pos:end="51:57">0</literal></expr>]</index></name></expr>]</index><index pos:start="51:60" pos:end="51:62">[<expr pos:start="51:61" pos:end="51:61"><literal type="number" pos:start="51:61" pos:end="51:61">0</literal></expr>]</index></name> <operator pos:start="51:64" pos:end="51:64">=</operator> <literal type="number" pos:start="51:66" pos:end="51:66">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:67"><expr pos:start="53:9" pos:end="53:66"><name pos:start="53:9" pos:end="53:62"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:26">current_picture</name><operator pos:start="53:27" pos:end="53:27">.</operator><name pos:start="53:28" pos:end="53:37">motion_val</name><index pos:start="53:38" pos:end="53:40">[<expr pos:start="53:39" pos:end="53:39"><literal type="number" pos:start="53:39" pos:end="53:39">1</literal></expr>]</index><index pos:start="53:41" pos:end="53:59">[<expr pos:start="53:42" pos:end="53:58"><name pos:start="53:42" pos:end="53:58"><name pos:start="53:42" pos:end="53:42">s</name><operator pos:start="53:43" pos:end="53:44">-&gt;</operator><name pos:start="53:45" pos:end="53:55">block_index</name><index pos:start="53:56" pos:end="53:58">[<expr pos:start="53:57" pos:end="53:57"><literal type="number" pos:start="53:57" pos:end="53:57">0</literal></expr>]</index></name></expr>]</index><index pos:start="53:60" pos:end="53:62">[<expr pos:start="53:61" pos:end="53:61"><literal type="number" pos:start="53:61" pos:end="53:61">1</literal></expr>]</index></name> <operator pos:start="53:64" pos:end="53:64">=</operator> <literal type="number" pos:start="53:66" pos:end="53:66">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:79"><expr pos:start="55:9" pos:end="55:78"><name pos:start="55:9" pos:end="55:54"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:26">current_picture</name><operator pos:start="55:27" pos:end="55:27">.</operator><name pos:start="55:28" pos:end="55:34">mb_type</name><index pos:start="55:35" pos:end="55:54">[<expr pos:start="55:36" pos:end="55:53"><name pos:start="55:36" pos:end="55:41">mb_pos</name> <operator pos:start="55:43" pos:end="55:43">+</operator> <name pos:start="55:45" pos:end="55:53"><name pos:start="55:45" pos:end="55:45">v</name><operator pos:start="55:46" pos:end="55:47">-&gt;</operator><name pos:start="55:48" pos:end="55:53">mb_off</name></name></expr>]</index></name>         <operator pos:start="55:64" pos:end="55:64">=</operator> <name pos:start="55:66" pos:end="55:78">MB_TYPE_INTRA</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:21"><expr pos:start="57:9" pos:end="57:20"><call pos:start="57:9" pos:end="57:20"><name pos:start="57:9" pos:end="57:18">GET_MQUANT</name><argument_list pos:start="57:19" pos:end="57:20">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:57"><expr pos:start="59:9" pos:end="59:56"><name pos:start="59:9" pos:end="59:47"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:26">current_picture</name><operator pos:start="59:27" pos:end="59:27">.</operator><name pos:start="59:28" pos:end="59:39">qscale_table</name><index pos:start="59:40" pos:end="59:47">[<expr pos:start="59:41" pos:end="59:46"><name pos:start="59:41" pos:end="59:46">mb_pos</name></expr>]</index></name> <operator pos:start="59:49" pos:end="59:49">=</operator> <name pos:start="59:51" pos:end="59:56">mquant</name></expr>;</expr_stmt>

        <comment type="block" pos:start="61:9" pos:end="61:78">/* Set DC scale - y and c use the same (not sure if necessary here) */</comment>

        <expr_stmt pos:start="63:9" pos:end="63:52"><expr pos:start="63:9" pos:end="63:51"><name pos:start="63:9" pos:end="63:21"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:21">y_dc_scale</name></name> <operator pos:start="63:23" pos:end="63:23">=</operator> <name pos:start="63:25" pos:end="63:51"><name pos:start="63:25" pos:end="63:25">s</name><operator pos:start="63:26" pos:end="63:27">-&gt;</operator><name pos:start="63:28" pos:end="63:43">y_dc_scale_table</name><index pos:start="63:44" pos:end="63:51">[<expr pos:start="63:45" pos:end="63:50"><name pos:start="63:45" pos:end="63:50">mquant</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:52"><expr pos:start="65:9" pos:end="65:51"><name pos:start="65:9" pos:end="65:21"><name pos:start="65:9" pos:end="65:9">s</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:21">c_dc_scale</name></name> <operator pos:start="65:23" pos:end="65:23">=</operator> <name pos:start="65:25" pos:end="65:51"><name pos:start="65:25" pos:end="65:25">s</name><operator pos:start="65:26" pos:end="65:27">-&gt;</operator><name pos:start="65:28" pos:end="65:43">c_dc_scale_table</name><index pos:start="65:44" pos:end="65:51">[<expr pos:start="65:45" pos:end="65:50"><name pos:start="65:45" pos:end="65:50">mquant</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:64"><expr pos:start="67:9" pos:end="67:63"><name pos:start="67:9" pos:end="67:20"><name pos:start="67:9" pos:end="67:9">v</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:12">s</name><operator pos:start="67:13" pos:end="67:13">.</operator><name pos:start="67:14" pos:end="67:20">ac_pred</name></name>  <operator pos:start="67:23" pos:end="67:23">=</operator> <name pos:start="67:25" pos:end="67:47"><name pos:start="67:25" pos:end="67:25">v</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:39">acpred_plane</name><index pos:start="67:40" pos:end="67:47">[<expr pos:start="67:41" pos:end="67:46"><name pos:start="67:41" pos:end="67:46">mb_pos</name></expr>]</index></name> <operator pos:start="67:49" pos:end="67:49">=</operator> <call pos:start="67:51" pos:end="67:63"><name pos:start="67:51" pos:end="67:59">get_bits1</name><argument_list pos:start="67:60" pos:end="67:63">(<argument pos:start="67:61" pos:end="67:62"><expr pos:start="67:61" pos:end="67:62"><name pos:start="67:61" pos:end="67:62">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:39"><expr pos:start="69:9" pos:end="69:38"><name pos:start="69:9" pos:end="69:21">mb_has_coeffs</name> <operator pos:start="69:23" pos:end="69:23">=</operator> <name pos:start="69:25" pos:end="69:34">idx_mbmode</name> <operator pos:start="69:36" pos:end="69:36">&amp;</operator> <literal type="number" pos:start="69:38" pos:end="69:38">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="71:9" pos:end="73:86"><if pos:start="71:9" pos:end="73:86">if <condition pos:start="71:12" pos:end="71:26">(<expr pos:start="71:13" pos:end="71:25"><name pos:start="71:13" pos:end="71:25">mb_has_coeffs</name></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:86"><block_content pos:start="73:13" pos:end="73:86">

            <expr_stmt pos:start="73:13" pos:end="73:86"><expr pos:start="73:13" pos:end="73:85"><name pos:start="73:13" pos:end="73:15">cbp</name> <operator pos:start="73:17" pos:end="73:17">=</operator> <literal type="number" pos:start="73:19" pos:end="73:21">1</literal> <operator pos:start="73:21" pos:end="73:21">+</operator> <call pos:start="73:23" pos:end="73:85"><name pos:start="73:23" pos:end="73:30">get_vlc2</name><argument_list pos:start="73:31" pos:end="73:85">(<argument pos:start="73:32" pos:end="73:39"><expr pos:start="73:32" pos:end="73:39"><operator pos:start="73:32" pos:end="73:32">&amp;</operator><name pos:start="73:33" pos:end="73:39"><name pos:start="73:33" pos:end="73:33">v</name><operator pos:start="73:34" pos:end="73:35">-&gt;</operator><name pos:start="73:36" pos:end="73:36">s</name><operator pos:start="73:37" pos:end="73:37">.</operator><name pos:start="73:38" pos:end="73:39">gb</name></name></expr></argument>, <argument pos:start="73:42" pos:end="73:60"><expr pos:start="73:42" pos:end="73:60"><name pos:start="73:42" pos:end="73:60"><name pos:start="73:42" pos:end="73:42">v</name><operator pos:start="73:43" pos:end="73:44">-&gt;</operator><name pos:start="73:45" pos:end="73:53">cbpcy_vlc</name><operator pos:start="73:54" pos:end="73:55">-&gt;</operator><name pos:start="73:56" pos:end="73:60">table</name></name></expr></argument>, <argument pos:start="73:63" pos:end="73:81"><expr pos:start="73:63" pos:end="73:81"><name pos:start="73:63" pos:end="73:81">VC1_ICBPCY_VLC_BITS</name></expr></argument>, <argument pos:start="73:84" pos:end="73:84"><expr pos:start="73:84" pos:end="73:84"><literal type="number" pos:start="73:84" pos:end="73:84">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:20"><expr pos:start="75:9" pos:end="75:19"><name pos:start="75:9" pos:end="75:15">dst_idx</name> <operator pos:start="75:17" pos:end="75:17">=</operator> <literal type="number" pos:start="75:19" pos:end="75:19">0</literal></expr>;</expr_stmt>

        <for pos:start="77:9" pos:end="121:9">for <control pos:start="77:13" pos:end="77:31">(<init pos:start="77:14" pos:end="77:19"><expr pos:start="77:14" pos:end="77:18"><name pos:start="77:14" pos:end="77:14">i</name> <operator pos:start="77:16" pos:end="77:16">=</operator> <literal type="number" pos:start="77:18" pos:end="77:18">0</literal></expr>;</init> <condition pos:start="77:21" pos:end="77:26"><expr pos:start="77:21" pos:end="77:25"><name pos:start="77:21" pos:end="77:21">i</name> <operator pos:start="77:23" pos:end="77:23">&lt;</operator> <literal type="number" pos:start="77:25" pos:end="77:25">6</literal></expr>;</condition> <incr pos:start="77:28" pos:end="77:30"><expr pos:start="77:28" pos:end="77:30"><name pos:start="77:28" pos:end="77:28">i</name><operator pos:start="77:29" pos:end="77:30">++</operator></expr></incr>)</control> <block pos:start="77:33" pos:end="121:9">{<block_content pos:start="79:13" pos:end="117:121">

            <expr_stmt pos:start="79:13" pos:end="79:48"><expr pos:start="79:13" pos:end="79:47"><name pos:start="79:13" pos:end="79:43"><name pos:start="79:13" pos:end="79:13">s</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:21">dc_val</name><index pos:start="79:22" pos:end="79:24">[<expr pos:start="79:23" pos:end="79:23"><literal type="number" pos:start="79:23" pos:end="79:23">0</literal></expr>]</index><index pos:start="79:25" pos:end="79:43">[<expr pos:start="79:26" pos:end="79:42"><name pos:start="79:26" pos:end="79:42"><name pos:start="79:26" pos:end="79:26">s</name><operator pos:start="79:27" pos:end="79:28">-&gt;</operator><name pos:start="79:29" pos:end="79:39">block_index</name><index pos:start="79:40" pos:end="79:42">[<expr pos:start="79:41" pos:end="79:41"><name pos:start="79:41" pos:end="79:41">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="79:45" pos:end="79:45">=</operator> <literal type="number" pos:start="79:47" pos:end="79:47">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:30"><expr pos:start="81:13" pos:end="81:29"><name pos:start="81:13" pos:end="81:19">dst_idx</name> <operator pos:start="81:21" pos:end="81:22">+=</operator> <name pos:start="81:24" pos:end="81:24">i</name> <operator pos:start="81:26" pos:end="81:27">&gt;&gt;</operator> <literal type="number" pos:start="81:29" pos:end="81:29">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:41"><expr pos:start="83:13" pos:end="83:40"><name pos:start="83:13" pos:end="83:15">val</name> <operator pos:start="83:17" pos:end="83:17">=</operator> <operator pos:start="83:19" pos:end="83:19">(</operator><operator pos:start="83:20" pos:end="83:20">(</operator><name pos:start="83:21" pos:end="83:23">cbp</name> <operator pos:start="83:25" pos:end="83:26">&gt;&gt;</operator> <operator pos:start="83:28" pos:end="83:28">(</operator><literal type="number" pos:start="83:29" pos:end="83:31">5</literal> <operator pos:start="83:31" pos:end="83:31">-</operator> <name pos:start="83:33" pos:end="83:33">i</name><operator pos:start="83:34" pos:end="83:34">)</operator><operator pos:start="83:35" pos:end="83:35">)</operator> <operator pos:start="83:37" pos:end="83:37">&amp;</operator> <literal type="number" pos:start="83:39" pos:end="83:39">1</literal><operator pos:start="83:40" pos:end="83:40">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:59"><expr pos:start="85:13" pos:end="85:58"><name pos:start="85:13" pos:end="85:44"><name pos:start="85:13" pos:end="85:13">v</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:22">mb_type</name><index pos:start="85:23" pos:end="85:25">[<expr pos:start="85:24" pos:end="85:24"><literal type="number" pos:start="85:24" pos:end="85:24">0</literal></expr>]</index><index pos:start="85:26" pos:end="85:44">[<expr pos:start="85:27" pos:end="85:43"><name pos:start="85:27" pos:end="85:43"><name pos:start="85:27" pos:end="85:27">s</name><operator pos:start="85:28" pos:end="85:29">-&gt;</operator><name pos:start="85:30" pos:end="85:40">block_index</name><index pos:start="85:41" pos:end="85:43">[<expr pos:start="85:42" pos:end="85:42"><name pos:start="85:42" pos:end="85:42">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="85:46" pos:end="85:46">=</operator> <name pos:start="85:48" pos:end="85:58"><name pos:start="85:48" pos:end="85:48">s</name><operator pos:start="85:49" pos:end="85:50">-&gt;</operator><name pos:start="85:51" pos:end="85:58">mb_intra</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:62"><expr pos:start="87:13" pos:end="87:61"><name pos:start="87:13" pos:end="87:22"><name pos:start="87:13" pos:end="87:13">v</name><operator pos:start="87:14" pos:end="87:15">-&gt;</operator><name pos:start="87:16" pos:end="87:22">a_avail</name></name>                       <operator pos:start="87:46" pos:end="87:46">=</operator> <name pos:start="87:48" pos:end="87:57"><name pos:start="87:48" pos:end="87:48">v</name><operator pos:start="87:49" pos:end="87:50">-&gt;</operator><name pos:start="87:51" pos:end="87:57">c_avail</name></name> <operator pos:start="87:59" pos:end="87:59">=</operator> <literal type="number" pos:start="87:61" pos:end="87:61">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="89:13" pos:end="91:81"><if pos:start="89:13" pos:end="91:81">if <condition pos:start="89:16" pos:end="89:57">(<expr pos:start="89:17" pos:end="89:56"><name pos:start="89:17" pos:end="89:17">i</name> <operator pos:start="89:19" pos:end="89:20">==</operator> <literal type="number" pos:start="89:22" pos:end="89:22">2</literal> <operator pos:start="89:24" pos:end="89:25">||</operator> <name pos:start="89:27" pos:end="89:27">i</name> <operator pos:start="89:29" pos:end="89:30">==</operator> <literal type="number" pos:start="89:32" pos:end="89:32">3</literal> <operator pos:start="89:34" pos:end="89:35">||</operator> <operator pos:start="89:37" pos:end="89:37">!</operator><name pos:start="89:38" pos:end="89:56"><name pos:start="89:38" pos:end="89:38">s</name><operator pos:start="89:39" pos:end="89:40">-&gt;</operator><name pos:start="89:41" pos:end="89:56">first_slice_line</name></name></expr>)</condition><block type="pseudo" pos:start="91:17" pos:end="91:81"><block_content pos:start="91:17" pos:end="91:81">

                <expr_stmt pos:start="91:17" pos:end="91:81"><expr pos:start="91:17" pos:end="91:80"><name pos:start="91:17" pos:end="91:26"><name pos:start="91:17" pos:end="91:17">v</name><operator pos:start="91:18" pos:end="91:19">-&gt;</operator><name pos:start="91:20" pos:end="91:26">a_avail</name></name> <operator pos:start="91:28" pos:end="91:28">=</operator> <name pos:start="91:30" pos:end="91:80"><name pos:start="91:30" pos:end="91:30">v</name><operator pos:start="91:31" pos:end="91:32">-&gt;</operator><name pos:start="91:33" pos:end="91:39">mb_type</name><index pos:start="91:40" pos:end="91:42">[<expr pos:start="91:41" pos:end="91:41"><literal type="number" pos:start="91:41" pos:end="91:41">0</literal></expr>]</index><index pos:start="91:43" pos:end="91:80">[<expr pos:start="91:44" pos:end="91:79"><name pos:start="91:44" pos:end="91:60"><name pos:start="91:44" pos:end="91:44">s</name><operator pos:start="91:45" pos:end="91:46">-&gt;</operator><name pos:start="91:47" pos:end="91:57">block_index</name><index pos:start="91:58" pos:end="91:60">[<expr pos:start="91:59" pos:end="91:59"><name pos:start="91:59" pos:end="91:59">i</name></expr>]</index></name> <operator pos:start="91:62" pos:end="91:62">-</operator> <name pos:start="91:64" pos:end="91:79"><name pos:start="91:64" pos:end="91:64">s</name><operator pos:start="91:65" pos:end="91:66">-&gt;</operator><name pos:start="91:67" pos:end="91:76">block_wrap</name><index pos:start="91:77" pos:end="91:79">[<expr pos:start="91:78" pos:end="91:78"><name pos:start="91:78" pos:end="91:78">i</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="93:13" pos:end="95:66"><if pos:start="93:13" pos:end="95:66">if <condition pos:start="93:16" pos:end="93:44">(<expr pos:start="93:17" pos:end="93:43"><name pos:start="93:17" pos:end="93:17">i</name> <operator pos:start="93:19" pos:end="93:20">==</operator> <literal type="number" pos:start="93:22" pos:end="93:22">1</literal> <operator pos:start="93:24" pos:end="93:25">||</operator> <name pos:start="93:27" pos:end="93:27">i</name> <operator pos:start="93:29" pos:end="93:30">==</operator> <literal type="number" pos:start="93:32" pos:end="93:32">3</literal> <operator pos:start="93:34" pos:end="93:35">||</operator> <name pos:start="93:37" pos:end="93:43"><name pos:start="93:37" pos:end="93:37">s</name><operator pos:start="93:38" pos:end="93:39">-&gt;</operator><name pos:start="93:40" pos:end="93:43">mb_x</name></name></expr>)</condition><block type="pseudo" pos:start="95:17" pos:end="95:66"><block_content pos:start="95:17" pos:end="95:66">

                <expr_stmt pos:start="95:17" pos:end="95:66"><expr pos:start="95:17" pos:end="95:65"><name pos:start="95:17" pos:end="95:26"><name pos:start="95:17" pos:end="95:17">v</name><operator pos:start="95:18" pos:end="95:19">-&gt;</operator><name pos:start="95:20" pos:end="95:26">c_avail</name></name> <operator pos:start="95:28" pos:end="95:28">=</operator> <name pos:start="95:30" pos:end="95:65"><name pos:start="95:30" pos:end="95:30">v</name><operator pos:start="95:31" pos:end="95:32">-&gt;</operator><name pos:start="95:33" pos:end="95:39">mb_type</name><index pos:start="95:40" pos:end="95:42">[<expr pos:start="95:41" pos:end="95:41"><literal type="number" pos:start="95:41" pos:end="95:41">0</literal></expr>]</index><index pos:start="95:43" pos:end="95:65">[<expr pos:start="95:44" pos:end="95:64"><name pos:start="95:44" pos:end="95:60"><name pos:start="95:44" pos:end="95:44">s</name><operator pos:start="95:45" pos:end="95:46">-&gt;</operator><name pos:start="95:47" pos:end="95:57">block_index</name><index pos:start="95:58" pos:end="95:60">[<expr pos:start="95:59" pos:end="95:59"><name pos:start="95:59" pos:end="95:59">i</name></expr>]</index></name> <operator pos:start="95:62" pos:end="95:62">-</operator> <literal type="number" pos:start="95:64" pos:end="95:64">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="99:13" pos:end="101:75"><expr pos:start="99:13" pos:end="101:74"><call pos:start="99:13" pos:end="101:74"><name pos:start="99:13" pos:end="99:34">vc1_decode_intra_block</name><argument_list pos:start="99:35" pos:end="101:74">(<argument pos:start="99:36" pos:end="99:36"><expr pos:start="99:36" pos:end="99:36"><name pos:start="99:36" pos:end="99:36">v</name></expr></argument>, <argument pos:start="99:39" pos:end="99:49"><expr pos:start="99:39" pos:end="99:49"><name pos:start="99:39" pos:end="99:49"><name pos:start="99:39" pos:end="99:39">s</name><operator pos:start="99:40" pos:end="99:41">-&gt;</operator><name pos:start="99:42" pos:end="99:46">block</name><index pos:start="99:47" pos:end="99:49">[<expr pos:start="99:48" pos:end="99:48"><name pos:start="99:48" pos:end="99:48">i</name></expr>]</index></name></expr></argument>, <argument pos:start="99:52" pos:end="99:52"><expr pos:start="99:52" pos:end="99:52"><name pos:start="99:52" pos:end="99:52">i</name></expr></argument>, <argument pos:start="99:55" pos:end="99:57"><expr pos:start="99:55" pos:end="99:57"><name pos:start="99:55" pos:end="99:57">val</name></expr></argument>, <argument pos:start="99:60" pos:end="99:65"><expr pos:start="99:60" pos:end="99:65"><name pos:start="99:60" pos:end="99:65">mquant</name></expr></argument>,

                                   <argument pos:start="101:36" pos:end="101:73"><expr pos:start="101:36" pos:end="101:73"><ternary pos:start="101:36" pos:end="101:73"><condition pos:start="101:36" pos:end="101:44"><expr pos:start="101:36" pos:end="101:42"><operator pos:start="101:36" pos:end="101:36">(</operator><name pos:start="101:37" pos:end="101:37">i</name> <operator pos:start="101:39" pos:end="101:39">&amp;</operator> <literal type="number" pos:start="101:41" pos:end="101:41">4</literal><operator pos:start="101:42" pos:end="101:42">)</operator></expr> ?</condition><then pos:start="101:46" pos:end="101:58"> <expr pos:start="101:46" pos:end="101:58"><name pos:start="101:46" pos:end="101:58"><name pos:start="101:46" pos:end="101:46">v</name><operator pos:start="101:47" pos:end="101:48">-&gt;</operator><name pos:start="101:49" pos:end="101:58">codingset2</name></name></expr> </then><else pos:start="101:60" pos:end="101:73">: <expr pos:start="101:62" pos:end="101:73"><name pos:start="101:62" pos:end="101:73"><name pos:start="101:62" pos:end="101:62">v</name><operator pos:start="101:63" pos:end="101:64">-&gt;</operator><name pos:start="101:65" pos:end="101:73">codingset</name></name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="103:13" pos:end="105:25"><if pos:start="103:13" pos:end="105:25">if <condition pos:start="103:16" pos:end="103:54">(<expr pos:start="103:17" pos:end="103:53"><operator pos:start="103:17" pos:end="103:17">(</operator><name pos:start="103:18" pos:end="103:18">i</name><operator pos:start="103:19" pos:end="103:19">&gt;</operator><literal type="number" pos:start="103:20" pos:end="103:20">3</literal><operator pos:start="103:21" pos:end="103:21">)</operator> <operator pos:start="103:23" pos:end="103:24">&amp;&amp;</operator> <operator pos:start="103:26" pos:end="103:26">(</operator><name pos:start="103:27" pos:end="103:34"><name pos:start="103:27" pos:end="103:27">s</name><operator pos:start="103:28" pos:end="103:29">-&gt;</operator><name pos:start="103:30" pos:end="103:34">flags</name></name> <operator pos:start="103:36" pos:end="103:36">&amp;</operator> <name pos:start="103:38" pos:end="103:52">CODEC_FLAG_GRAY</name><operator pos:start="103:53" pos:end="103:53">)</operator></expr>)</condition><block type="pseudo" pos:start="105:17" pos:end="105:25"><block_content pos:start="105:17" pos:end="105:25">

                <continue pos:start="105:17" pos:end="105:25">continue;</continue></block_content></block></if></if_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:53"><expr pos:start="107:13" pos:end="107:52"><call pos:start="107:13" pos:end="107:52"><name pos:start="107:13" pos:end="107:39"><name pos:start="107:13" pos:end="107:13">v</name><operator pos:start="107:14" pos:end="107:15">-&gt;</operator><name pos:start="107:16" pos:end="107:21">vc1dsp</name><operator pos:start="107:22" pos:end="107:22">.</operator><name pos:start="107:23" pos:end="107:39">vc1_inv_trans_8x8</name></name><argument_list pos:start="107:40" pos:end="107:52">(<argument pos:start="107:41" pos:end="107:51"><expr pos:start="107:41" pos:end="107:51"><name pos:start="107:41" pos:end="107:51"><name pos:start="107:41" pos:end="107:41">s</name><operator pos:start="107:42" pos:end="107:43">-&gt;</operator><name pos:start="107:44" pos:end="107:48">block</name><index pos:start="107:49" pos:end="107:51">[<expr pos:start="107:50" pos:end="107:50"><name pos:start="107:50" pos:end="107:50">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="109:13" pos:end="113:41"><if pos:start="109:13" pos:end="113:41">if <condition pos:start="109:16" pos:end="109:31">(<expr pos:start="109:17" pos:end="109:30"><name pos:start="109:17" pos:end="109:30"><name pos:start="109:17" pos:end="109:17">v</name><operator pos:start="109:18" pos:end="109:19">-&gt;</operator><name pos:start="109:20" pos:end="109:30">rangeredfrm</name></name></expr>)</condition><block type="pseudo" pos:start="111:17" pos:end="113:41"><block_content pos:start="111:17" pos:end="113:41">

                <for pos:start="111:17" pos:end="113:41">for <control pos:start="111:21" pos:end="111:40">(<init pos:start="111:22" pos:end="111:27"><expr pos:start="111:22" pos:end="111:26"><name pos:start="111:22" pos:end="111:22">j</name> <operator pos:start="111:24" pos:end="111:24">=</operator> <literal type="number" pos:start="111:26" pos:end="111:26">0</literal></expr>;</init> <condition pos:start="111:29" pos:end="111:35"><expr pos:start="111:29" pos:end="111:34"><name pos:start="111:29" pos:end="111:29">j</name> <operator pos:start="111:31" pos:end="111:31">&lt;</operator> <literal type="number" pos:start="111:33" pos:end="111:34">64</literal></expr>;</condition> <incr pos:start="111:37" pos:end="111:39"><expr pos:start="111:37" pos:end="111:39"><name pos:start="111:37" pos:end="111:37">j</name><operator pos:start="111:38" pos:end="111:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="113:21" pos:end="113:41"><block_content pos:start="113:21" pos:end="113:41">

                    <expr_stmt pos:start="113:21" pos:end="113:41"><expr pos:start="113:21" pos:end="113:40"><name pos:start="113:21" pos:end="113:34"><name pos:start="113:21" pos:end="113:21">s</name><operator pos:start="113:22" pos:end="113:23">-&gt;</operator><name pos:start="113:24" pos:end="113:28">block</name><index pos:start="113:29" pos:end="113:31">[<expr pos:start="113:30" pos:end="113:30"><name pos:start="113:30" pos:end="113:30">i</name></expr>]</index><index pos:start="113:32" pos:end="113:34">[<expr pos:start="113:33" pos:end="113:33"><name pos:start="113:33" pos:end="113:33">j</name></expr>]</index></name> <operator pos:start="113:36" pos:end="113:38">&lt;&lt;=</operator> <literal type="number" pos:start="113:40" pos:end="113:40">1</literal></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:75"><expr pos:start="115:13" pos:end="115:74"><name pos:start="115:13" pos:end="115:15">off</name>  <operator pos:start="115:18" pos:end="115:18">=</operator> <ternary pos:start="115:20" pos:end="115:74"><condition pos:start="115:20" pos:end="115:28"><expr pos:start="115:20" pos:end="115:26"><operator pos:start="115:20" pos:end="115:20">(</operator><name pos:start="115:21" pos:end="115:21">i</name> <operator pos:start="115:23" pos:end="115:23">&amp;</operator> <literal type="number" pos:start="115:25" pos:end="115:25">4</literal><operator pos:start="115:26" pos:end="115:26">)</operator></expr> ?</condition><then pos:start="115:30" pos:end="115:30"> <expr pos:start="115:30" pos:end="115:30"><literal type="number" pos:start="115:30" pos:end="115:30">0</literal></expr> </then><else pos:start="115:32" pos:end="115:74">: <expr pos:start="115:34" pos:end="115:74"><operator pos:start="115:34" pos:end="115:34">(</operator><operator pos:start="115:35" pos:end="115:35">(</operator><name pos:start="115:36" pos:end="115:36">i</name> <operator pos:start="115:38" pos:end="115:38">&amp;</operator> <literal type="number" pos:start="115:40" pos:end="115:40">1</literal><operator pos:start="115:41" pos:end="115:41">)</operator> <operator pos:start="115:43" pos:end="115:43">*</operator> <literal type="number" pos:start="115:45" pos:end="115:47">8</literal> <operator pos:start="115:47" pos:end="115:47">+</operator> <operator pos:start="115:49" pos:end="115:49">(</operator><name pos:start="115:50" pos:end="115:50">i</name> <operator pos:start="115:52" pos:end="115:52">&amp;</operator> <literal type="number" pos:start="115:54" pos:end="115:54">2</literal><operator pos:start="115:55" pos:end="115:55">)</operator> <operator pos:start="115:57" pos:end="115:57">*</operator> <literal type="number" pos:start="115:59" pos:end="115:59">4</literal> <operator pos:start="115:61" pos:end="115:61">*</operator> <name pos:start="115:63" pos:end="115:73"><name pos:start="115:63" pos:end="115:63">s</name><operator pos:start="115:64" pos:end="115:65">-&gt;</operator><name pos:start="115:66" pos:end="115:73">linesize</name></name><operator pos:start="115:74" pos:end="115:74">)</operator></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:121"><expr pos:start="117:13" pos:end="117:120"><call pos:start="117:13" pos:end="117:120"><name pos:start="117:13" pos:end="117:44"><name pos:start="117:13" pos:end="117:13">s</name><operator pos:start="117:14" pos:end="117:15">-&gt;</operator><name pos:start="117:16" pos:end="117:18">dsp</name><operator pos:start="117:19" pos:end="117:19">.</operator><name pos:start="117:20" pos:end="117:44">put_signed_pixels_clamped</name></name><argument_list pos:start="117:45" pos:end="117:120">(<argument pos:start="117:46" pos:end="117:56"><expr pos:start="117:46" pos:end="117:56"><name pos:start="117:46" pos:end="117:56"><name pos:start="117:46" pos:end="117:46">s</name><operator pos:start="117:47" pos:end="117:48">-&gt;</operator><name pos:start="117:49" pos:end="117:53">block</name><index pos:start="117:54" pos:end="117:56">[<expr pos:start="117:55" pos:end="117:55"><name pos:start="117:55" pos:end="117:55">i</name></expr>]</index></name></expr></argument>, <argument pos:start="117:59" pos:end="117:80"><expr pos:start="117:59" pos:end="117:80"><name pos:start="117:59" pos:end="117:74"><name pos:start="117:59" pos:end="117:59">s</name><operator pos:start="117:60" pos:end="117:61">-&gt;</operator><name pos:start="117:62" pos:end="117:65">dest</name><index pos:start="117:66" pos:end="117:74">[<expr pos:start="117:67" pos:end="117:73"><name pos:start="117:67" pos:end="117:73">dst_idx</name></expr>]</index></name> <operator pos:start="117:76" pos:end="117:76">+</operator> <name pos:start="117:78" pos:end="117:80">off</name></expr></argument>, <argument pos:start="117:83" pos:end="117:119"><expr pos:start="117:83" pos:end="117:119"><ternary pos:start="117:83" pos:end="117:119"><condition pos:start="117:83" pos:end="117:91"><expr pos:start="117:83" pos:end="117:89"><operator pos:start="117:83" pos:end="117:83">(</operator><name pos:start="117:84" pos:end="117:84">i</name> <operator pos:start="117:86" pos:end="117:86">&amp;</operator> <literal type="number" pos:start="117:88" pos:end="117:88">4</literal><operator pos:start="117:89" pos:end="117:89">)</operator></expr> ?</condition><then pos:start="117:93" pos:end="117:105"> <expr pos:start="117:93" pos:end="117:105"><name pos:start="117:93" pos:end="117:105"><name pos:start="117:93" pos:end="117:93">s</name><operator pos:start="117:94" pos:end="117:95">-&gt;</operator><name pos:start="117:96" pos:end="117:105">uvlinesize</name></name></expr> </then><else pos:start="117:107" pos:end="117:119">: <expr pos:start="117:109" pos:end="117:119"><name pos:start="117:109" pos:end="117:119"><name pos:start="117:109" pos:end="117:109">s</name><operator pos:start="117:110" pos:end="117:111">-&gt;</operator><name pos:start="117:112" pos:end="117:119">linesize</name></name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:start="119:13" pos:end="119:47">// TODO: yet to perform loop filter</comment>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="123:7" pos:end="299:5">else <block pos:start="123:12" pos:end="299:5">{<block_content pos:start="125:9" pos:end="297:9">

        <expr_stmt pos:start="125:9" pos:end="125:47"><expr pos:start="125:9" pos:end="125:46"><name pos:start="125:9" pos:end="125:19"><name pos:start="125:9" pos:end="125:9">s</name><operator pos:start="125:10" pos:end="125:11">-&gt;</operator><name pos:start="125:12" pos:end="125:19">mb_intra</name></name> <operator pos:start="125:21" pos:end="125:21">=</operator> <name pos:start="125:23" pos:end="125:42"><name pos:start="125:23" pos:end="125:23">v</name><operator pos:start="125:24" pos:end="125:25">-&gt;</operator><name pos:start="125:26" pos:end="125:33">is_intra</name><index pos:start="125:34" pos:end="125:42">[<expr pos:start="125:35" pos:end="125:41"><name pos:start="125:35" pos:end="125:41"><name pos:start="125:35" pos:end="125:35">s</name><operator pos:start="125:36" pos:end="125:37">-&gt;</operator><name pos:start="125:38" pos:end="125:41">mb_x</name></name></expr>]</index></name> <operator pos:start="125:44" pos:end="125:44">=</operator> <literal type="number" pos:start="125:46" pos:end="125:46">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:71"><expr pos:start="127:9" pos:end="127:70"><name pos:start="127:9" pos:end="127:54"><name pos:start="127:9" pos:end="127:9">s</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:26">current_picture</name><operator pos:start="127:27" pos:end="127:27">.</operator><name pos:start="127:28" pos:end="127:34">mb_type</name><index pos:start="127:35" pos:end="127:54">[<expr pos:start="127:36" pos:end="127:53"><name pos:start="127:36" pos:end="127:41">mb_pos</name> <operator pos:start="127:43" pos:end="127:43">+</operator> <name pos:start="127:45" pos:end="127:53"><name pos:start="127:45" pos:end="127:45">v</name><operator pos:start="127:46" pos:end="127:47">-&gt;</operator><name pos:start="127:48" pos:end="127:53">mb_off</name></name></expr>]</index></name> <operator pos:start="127:56" pos:end="127:56">=</operator> <name pos:start="127:58" pos:end="127:70">MB_TYPE_16x16</name></expr>;</expr_stmt>

        <for pos:start="129:9" pos:end="129:69">for <control pos:start="129:13" pos:end="129:31">(<init pos:start="129:14" pos:end="129:19"><expr pos:start="129:14" pos:end="129:18"><name pos:start="129:14" pos:end="129:14">i</name> <operator pos:start="129:16" pos:end="129:16">=</operator> <literal type="number" pos:start="129:18" pos:end="129:18">0</literal></expr>;</init> <condition pos:start="129:21" pos:end="129:26"><expr pos:start="129:21" pos:end="129:25"><name pos:start="129:21" pos:end="129:21">i</name> <operator pos:start="129:23" pos:end="129:23">&lt;</operator> <literal type="number" pos:start="129:25" pos:end="129:25">6</literal></expr>;</condition> <incr pos:start="129:28" pos:end="129:30"><expr pos:start="129:28" pos:end="129:30"><name pos:start="129:28" pos:end="129:28">i</name><operator pos:start="129:29" pos:end="129:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="129:33" pos:end="129:69"><block_content pos:start="129:33" pos:end="129:69"> <expr_stmt pos:start="129:33" pos:end="129:69"><expr pos:start="129:33" pos:end="129:68"><name pos:start="129:33" pos:end="129:64"><name pos:start="129:33" pos:end="129:33">v</name><operator pos:start="129:34" pos:end="129:35">-&gt;</operator><name pos:start="129:36" pos:end="129:42">mb_type</name><index pos:start="129:43" pos:end="129:45">[<expr pos:start="129:44" pos:end="129:44"><literal type="number" pos:start="129:44" pos:end="129:44">0</literal></expr>]</index><index pos:start="129:46" pos:end="129:64">[<expr pos:start="129:47" pos:end="129:63"><name pos:start="129:47" pos:end="129:63"><name pos:start="129:47" pos:end="129:47">s</name><operator pos:start="129:48" pos:end="129:49">-&gt;</operator><name pos:start="129:50" pos:end="129:60">block_index</name><index pos:start="129:61" pos:end="129:63">[<expr pos:start="129:62" pos:end="129:62"><name pos:start="129:62" pos:end="129:62">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="129:66" pos:end="129:66">=</operator> <literal type="number" pos:start="129:68" pos:end="129:68">0</literal></expr>;</expr_stmt></block_content></block></for>

        <if_stmt pos:start="131:9" pos:end="137:46"><if pos:start="131:9" pos:end="133:62">if <condition pos:start="131:12" pos:end="131:26">(<expr pos:start="131:13" pos:end="131:25"><name pos:start="131:13" pos:end="131:25"><name pos:start="131:13" pos:end="131:13">v</name><operator pos:start="131:14" pos:end="131:15">-&gt;</operator><name pos:start="131:16" pos:end="131:25">fmb_is_raw</name></name></expr>)</condition><block type="pseudo" pos:start="133:13" pos:end="133:62"><block_content pos:start="133:13" pos:end="133:62">

            <expr_stmt pos:start="133:13" pos:end="133:62"><expr pos:start="133:13" pos:end="133:61"><name pos:start="133:13" pos:end="133:15">fwd</name> <operator pos:start="133:17" pos:end="133:17">=</operator> <name pos:start="133:19" pos:end="133:45"><name pos:start="133:19" pos:end="133:19">v</name><operator pos:start="133:20" pos:end="133:21">-&gt;</operator><name pos:start="133:22" pos:end="133:37">forward_mb_plane</name><index pos:start="133:38" pos:end="133:45">[<expr pos:start="133:39" pos:end="133:44"><name pos:start="133:39" pos:end="133:44">mb_pos</name></expr>]</index></name> <operator pos:start="133:47" pos:end="133:47">=</operator> <call pos:start="133:49" pos:end="133:61"><name pos:start="133:49" pos:end="133:57">get_bits1</name><argument_list pos:start="133:58" pos:end="133:61">(<argument pos:start="133:59" pos:end="133:60"><expr pos:start="133:59" pos:end="133:60"><name pos:start="133:59" pos:end="133:60">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="135:9" pos:end="137:46">else<block type="pseudo" pos:start="137:13" pos:end="137:46"><block_content pos:start="137:13" pos:end="137:46">

            <expr_stmt pos:start="137:13" pos:end="137:46"><expr pos:start="137:13" pos:end="137:45"><name pos:start="137:13" pos:end="137:15">fwd</name> <operator pos:start="137:17" pos:end="137:17">=</operator> <name pos:start="137:19" pos:end="137:45"><name pos:start="137:19" pos:end="137:19">v</name><operator pos:start="137:20" pos:end="137:21">-&gt;</operator><name pos:start="137:22" pos:end="137:37">forward_mb_plane</name><index pos:start="137:38" pos:end="137:45">[<expr pos:start="137:39" pos:end="137:44"><name pos:start="137:39" pos:end="137:44">mb_pos</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="139:9" pos:end="247:9"><if pos:start="139:9" pos:end="205:9">if <condition pos:start="139:12" pos:end="139:28">(<expr pos:start="139:13" pos:end="139:27"><name pos:start="139:13" pos:end="139:22">idx_mbmode</name> <operator pos:start="139:24" pos:end="139:25">&lt;=</operator> <literal type="number" pos:start="139:27" pos:end="139:27">5</literal></expr>)</condition> <block pos:start="139:30" pos:end="205:9">{<block_content pos:start="141:13" pos:end="203:46"> <comment type="line" pos:start="139:32" pos:end="139:38">// 1-MV</comment>

            <expr_stmt pos:start="141:13" pos:end="141:62"><expr pos:start="141:13" pos:end="141:61"><name pos:start="141:13" pos:end="141:20"><name pos:start="141:13" pos:end="141:17">dmv_x</name><index pos:start="141:18" pos:end="141:20">[<expr pos:start="141:19" pos:end="141:19"><literal type="number" pos:start="141:19" pos:end="141:19">0</literal></expr>]</index></name>     <operator pos:start="141:26" pos:end="141:26">=</operator> <name pos:start="141:28" pos:end="141:35"><name pos:start="141:28" pos:end="141:32">dmv_x</name><index pos:start="141:33" pos:end="141:35">[<expr pos:start="141:34" pos:end="141:34"><literal type="number" pos:start="141:34" pos:end="141:34">1</literal></expr>]</index></name> <operator pos:start="141:37" pos:end="141:37">=</operator> <name pos:start="141:39" pos:end="141:46"><name pos:start="141:39" pos:end="141:43">dmv_y</name><index pos:start="141:44" pos:end="141:46">[<expr pos:start="141:45" pos:end="141:45"><literal type="number" pos:start="141:45" pos:end="141:45">0</literal></expr>]</index></name> <operator pos:start="141:48" pos:end="141:48">=</operator> <name pos:start="141:50" pos:end="141:57"><name pos:start="141:50" pos:end="141:54">dmv_y</name><index pos:start="141:55" pos:end="141:57">[<expr pos:start="141:56" pos:end="141:56"><literal type="number" pos:start="141:56" pos:end="141:56">1</literal></expr>]</index></name> <operator pos:start="141:59" pos:end="141:59">=</operator> <literal type="number" pos:start="141:61" pos:end="141:61">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:44"><expr pos:start="143:13" pos:end="143:43"><name pos:start="143:13" pos:end="143:24"><name pos:start="143:13" pos:end="143:21">pred_flag</name><index pos:start="143:22" pos:end="143:24">[<expr pos:start="143:23" pos:end="143:23"><literal type="number" pos:start="143:23" pos:end="143:23">0</literal></expr>]</index></name> <operator pos:start="143:26" pos:end="143:26">=</operator> <name pos:start="143:28" pos:end="143:39"><name pos:start="143:28" pos:end="143:36">pred_flag</name><index pos:start="143:37" pos:end="143:39">[<expr pos:start="143:38" pos:end="143:38"><literal type="number" pos:start="143:38" pos:end="143:38">1</literal></expr>]</index></name> <operator pos:start="143:41" pos:end="143:41">=</operator> <literal type="number" pos:start="143:43" pos:end="143:43">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="145:13" pos:end="175:13"><if pos:start="145:13" pos:end="147:43">if <condition pos:start="145:16" pos:end="145:20">(<expr pos:start="145:17" pos:end="145:19"><name pos:start="145:17" pos:end="145:19">fwd</name></expr>)</condition><block type="pseudo" pos:start="147:17" pos:end="147:43"><block_content pos:start="147:17" pos:end="147:43">

                <expr_stmt pos:start="147:17" pos:end="147:43"><expr pos:start="147:17" pos:end="147:42"><name pos:start="147:17" pos:end="147:23">bmvtype</name> <operator pos:start="147:25" pos:end="147:25">=</operator> <name pos:start="147:27" pos:end="147:42">BMV_TYPE_FORWARD</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="149:13" pos:end="175:13">else <block pos:start="149:18" pos:end="175:13">{<block_content pos:start="151:17" pos:end="173:17">

                <expr_stmt pos:start="151:17" pos:end="151:40"><expr pos:start="151:17" pos:end="151:39"><name pos:start="151:17" pos:end="151:23">bmvtype</name> <operator pos:start="151:25" pos:end="151:25">=</operator> <call pos:start="151:27" pos:end="151:39"><name pos:start="151:27" pos:end="151:35">decode012</name><argument_list pos:start="151:36" pos:end="151:39">(<argument pos:start="151:37" pos:end="151:38"><expr pos:start="151:37" pos:end="151:38"><name pos:start="151:37" pos:end="151:38">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <switch pos:start="153:17" pos:end="173:17">switch <condition pos:start="153:24" pos:end="153:32">(<expr pos:start="153:25" pos:end="153:31"><name pos:start="153:25" pos:end="153:31">bmvtype</name></expr>)</condition> <block pos:start="153:34" pos:end="173:17">{<block_content pos:start="155:17" pos:end="171:46">

                <case pos:start="155:17" pos:end="155:23">case <expr pos:start="155:22" pos:end="155:22"><literal type="number" pos:start="155:22" pos:end="155:22">0</literal></expr>:</case>

                    <expr_stmt pos:start="157:21" pos:end="157:48"><expr pos:start="157:21" pos:end="157:47"><name pos:start="157:21" pos:end="157:27">bmvtype</name> <operator pos:start="157:29" pos:end="157:29">=</operator> <name pos:start="157:31" pos:end="157:47">BMV_TYPE_BACKWARD</name></expr>;</expr_stmt>

                    <break pos:start="159:21" pos:end="159:26">break;</break>

                <case pos:start="161:17" pos:end="161:23">case <expr pos:start="161:22" pos:end="161:22"><literal type="number" pos:start="161:22" pos:end="161:22">1</literal></expr>:</case>

                    <expr_stmt pos:start="163:21" pos:end="163:46"><expr pos:start="163:21" pos:end="163:45"><name pos:start="163:21" pos:end="163:27">bmvtype</name> <operator pos:start="163:29" pos:end="163:29">=</operator> <name pos:start="163:31" pos:end="163:45">BMV_TYPE_DIRECT</name></expr>;</expr_stmt>

                    <break pos:start="165:21" pos:end="165:26">break;</break>

                <case pos:start="167:17" pos:end="167:23">case <expr pos:start="167:22" pos:end="167:22"><literal type="number" pos:start="167:22" pos:end="167:22">2</literal></expr>:</case>

                    <expr_stmt pos:start="169:21" pos:end="169:54"><expr pos:start="169:21" pos:end="169:53"><name pos:start="169:21" pos:end="169:27">bmvtype</name>   <operator pos:start="169:31" pos:end="169:31">=</operator> <name pos:start="169:33" pos:end="169:53">BMV_TYPE_INTERPOLATED</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="171:21" pos:end="171:46"><expr pos:start="171:21" pos:end="171:45"><name pos:start="171:21" pos:end="171:29">interpmvp</name> <operator pos:start="171:31" pos:end="171:31">=</operator> <call pos:start="171:33" pos:end="171:45"><name pos:start="171:33" pos:end="171:41">get_bits1</name><argument_list pos:start="171:42" pos:end="171:45">(<argument pos:start="171:43" pos:end="171:44"><expr pos:start="171:43" pos:end="171:44"><name pos:start="171:43" pos:end="171:44">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></switch>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="177:13" pos:end="177:33"><expr pos:start="177:13" pos:end="177:32"><name pos:start="177:13" pos:end="177:22"><name pos:start="177:13" pos:end="177:13">v</name><operator pos:start="177:14" pos:end="177:15">-&gt;</operator><name pos:start="177:16" pos:end="177:22">bmvtype</name></name> <operator pos:start="177:24" pos:end="177:24">=</operator> <name pos:start="177:26" pos:end="177:32">bmvtype</name></expr>;</expr_stmt>

            <if_stmt pos:start="179:13" pos:end="183:13"><if pos:start="179:13" pos:end="183:13">if <condition pos:start="179:16" pos:end="179:61">(<expr pos:start="179:17" pos:end="179:60"><name pos:start="179:17" pos:end="179:23">bmvtype</name> <operator pos:start="179:25" pos:end="179:26">!=</operator> <name pos:start="179:28" pos:end="179:42">BMV_TYPE_DIRECT</name> <operator pos:start="179:44" pos:end="179:45">&amp;&amp;</operator> <name pos:start="179:47" pos:end="179:56">idx_mbmode</name> <operator pos:start="179:58" pos:end="179:58">&amp;</operator> <literal type="number" pos:start="179:60" pos:end="179:60">1</literal></expr>)</condition> <block pos:start="179:63" pos:end="183:13">{<block_content pos:start="181:17" pos:end="181:159">

                <expr_stmt pos:start="181:17" pos:end="181:159"><expr pos:start="181:17" pos:end="181:158"><call pos:start="181:17" pos:end="181:158"><name pos:start="181:17" pos:end="181:37">get_mvdata_interlaced</name><argument_list pos:start="181:38" pos:end="181:158">(<argument pos:start="181:39" pos:end="181:39"><expr pos:start="181:39" pos:end="181:39"><name pos:start="181:39" pos:end="181:39">v</name></expr></argument>, <argument pos:start="181:42" pos:end="181:77"><expr pos:start="181:42" pos:end="181:77"><operator pos:start="181:42" pos:end="181:42">&amp;</operator><name pos:start="181:43" pos:end="181:77"><name pos:start="181:43" pos:end="181:47">dmv_x</name><index pos:start="181:48" pos:end="181:77">[<expr pos:start="181:49" pos:end="181:76"><name pos:start="181:49" pos:end="181:55">bmvtype</name> <operator pos:start="181:57" pos:end="181:58">==</operator> <name pos:start="181:60" pos:end="181:76">BMV_TYPE_BACKWARD</name></expr>]</index></name></expr></argument>, <argument pos:start="181:80" pos:end="181:115"><expr pos:start="181:80" pos:end="181:115"><operator pos:start="181:80" pos:end="181:80">&amp;</operator><name pos:start="181:81" pos:end="181:115"><name pos:start="181:81" pos:end="181:85">dmv_y</name><index pos:start="181:86" pos:end="181:115">[<expr pos:start="181:87" pos:end="181:114"><name pos:start="181:87" pos:end="181:93">bmvtype</name> <operator pos:start="181:95" pos:end="181:96">==</operator> <name pos:start="181:98" pos:end="181:114">BMV_TYPE_BACKWARD</name></expr>]</index></name></expr></argument>, <argument pos:start="181:118" pos:end="181:157"><expr pos:start="181:118" pos:end="181:157"><operator pos:start="181:118" pos:end="181:118">&amp;</operator><name pos:start="181:119" pos:end="181:157"><name pos:start="181:119" pos:end="181:127">pred_flag</name><index pos:start="181:128" pos:end="181:157">[<expr pos:start="181:129" pos:end="181:156"><name pos:start="181:129" pos:end="181:135">bmvtype</name> <operator pos:start="181:137" pos:end="181:138">==</operator> <name pos:start="181:140" pos:end="181:156">BMV_TYPE_BACKWARD</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="185:13" pos:end="189:13"><if pos:start="185:13" pos:end="189:13">if <condition pos:start="185:16" pos:end="185:62">(<expr pos:start="185:17" pos:end="185:61"><name pos:start="185:17" pos:end="185:23">bmvtype</name> <operator pos:start="185:25" pos:end="185:26">==</operator> <name pos:start="185:28" pos:end="185:48">BMV_TYPE_INTERPOLATED</name> <operator pos:start="185:50" pos:end="185:51">&amp;&amp;</operator> <name pos:start="185:53" pos:end="185:61">interpmvp</name></expr>)</condition> <block pos:start="185:64" pos:end="189:13">{<block_content pos:start="187:17" pos:end="187:78">

                <expr_stmt pos:start="187:17" pos:end="187:78"><expr pos:start="187:17" pos:end="187:77"><call pos:start="187:17" pos:end="187:77"><name pos:start="187:17" pos:end="187:37">get_mvdata_interlaced</name><argument_list pos:start="187:38" pos:end="187:77">(<argument pos:start="187:39" pos:end="187:39"><expr pos:start="187:39" pos:end="187:39"><name pos:start="187:39" pos:end="187:39">v</name></expr></argument>, <argument pos:start="187:42" pos:end="187:50"><expr pos:start="187:42" pos:end="187:50"><operator pos:start="187:42" pos:end="187:42">&amp;</operator><name pos:start="187:43" pos:end="187:50"><name pos:start="187:43" pos:end="187:47">dmv_x</name><index pos:start="187:48" pos:end="187:50">[<expr pos:start="187:49" pos:end="187:49"><literal type="number" pos:start="187:49" pos:end="187:49">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="187:53" pos:end="187:61"><expr pos:start="187:53" pos:end="187:61"><operator pos:start="187:53" pos:end="187:53">&amp;</operator><name pos:start="187:54" pos:end="187:61"><name pos:start="187:54" pos:end="187:58">dmv_y</name><index pos:start="187:59" pos:end="187:61">[<expr pos:start="187:60" pos:end="187:60"><literal type="number" pos:start="187:60" pos:end="187:60">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="187:64" pos:end="187:76"><expr pos:start="187:64" pos:end="187:76"><operator pos:start="187:64" pos:end="187:64">&amp;</operator><name pos:start="187:65" pos:end="187:76"><name pos:start="187:65" pos:end="187:73">pred_flag</name><index pos:start="187:74" pos:end="187:76">[<expr pos:start="187:75" pos:end="187:75"><literal type="number" pos:start="187:75" pos:end="187:75">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="191:13" pos:end="197:13"><if pos:start="191:13" pos:end="197:13">if <condition pos:start="191:16" pos:end="191:43">(<expr pos:start="191:17" pos:end="191:42"><name pos:start="191:17" pos:end="191:23">bmvtype</name> <operator pos:start="191:25" pos:end="191:26">==</operator> <name pos:start="191:28" pos:end="191:42">BMV_TYPE_DIRECT</name></expr>)</condition> <block pos:start="191:45" pos:end="197:13">{<block_content pos:start="193:17" pos:end="195:55">

                <expr_stmt pos:start="193:17" pos:end="193:55"><expr pos:start="193:17" pos:end="193:54"><name pos:start="193:17" pos:end="193:24"><name pos:start="193:17" pos:end="193:21">dmv_x</name><index pos:start="193:22" pos:end="193:24">[<expr pos:start="193:23" pos:end="193:23"><literal type="number" pos:start="193:23" pos:end="193:23">0</literal></expr>]</index></name> <operator pos:start="193:26" pos:end="193:26">=</operator> <name pos:start="193:28" pos:end="193:35"><name pos:start="193:28" pos:end="193:32">dmv_y</name><index pos:start="193:33" pos:end="193:35">[<expr pos:start="193:34" pos:end="193:34"><literal type="number" pos:start="193:34" pos:end="193:34">0</literal></expr>]</index></name> <operator pos:start="193:37" pos:end="193:37">=</operator> <name pos:start="193:39" pos:end="193:50"><name pos:start="193:39" pos:end="193:47">pred_flag</name><index pos:start="193:48" pos:end="193:50">[<expr pos:start="193:49" pos:end="193:49"><literal type="number" pos:start="193:49" pos:end="193:49">0</literal></expr>]</index></name> <operator pos:start="193:52" pos:end="193:52">=</operator> <literal type="number" pos:start="193:54" pos:end="193:54">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="195:17" pos:end="195:55"><expr pos:start="195:17" pos:end="195:54"><name pos:start="195:17" pos:end="195:24"><name pos:start="195:17" pos:end="195:21">dmv_x</name><index pos:start="195:22" pos:end="195:24">[<expr pos:start="195:23" pos:end="195:23"><literal type="number" pos:start="195:23" pos:end="195:23">1</literal></expr>]</index></name> <operator pos:start="195:26" pos:end="195:26">=</operator> <name pos:start="195:28" pos:end="195:35"><name pos:start="195:28" pos:end="195:32">dmv_y</name><index pos:start="195:33" pos:end="195:35">[<expr pos:start="195:34" pos:end="195:34"><literal type="number" pos:start="195:34" pos:end="195:34">1</literal></expr>]</index></name> <operator pos:start="195:37" pos:end="195:37">=</operator> <name pos:start="195:39" pos:end="195:50"><name pos:start="195:39" pos:end="195:47">pred_flag</name><index pos:start="195:48" pos:end="195:50">[<expr pos:start="195:49" pos:end="195:49"><literal type="number" pos:start="195:49" pos:end="195:49">0</literal></expr>]</index></name> <operator pos:start="195:52" pos:end="195:52">=</operator> <literal type="number" pos:start="195:54" pos:end="195:54">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="199:13" pos:end="199:66"><expr pos:start="199:13" pos:end="199:65"><call pos:start="199:13" pos:end="199:65"><name pos:start="199:13" pos:end="199:31">vc1_pred_b_mv_intfi</name><argument_list pos:start="199:32" pos:end="199:65">(<argument pos:start="199:33" pos:end="199:33"><expr pos:start="199:33" pos:end="199:33"><name pos:start="199:33" pos:end="199:33">v</name></expr></argument>, <argument pos:start="199:36" pos:end="199:36"><expr pos:start="199:36" pos:end="199:36"><literal type="number" pos:start="199:36" pos:end="199:36">0</literal></expr></argument>, <argument pos:start="199:39" pos:end="199:43"><expr pos:start="199:39" pos:end="199:43"><name pos:start="199:39" pos:end="199:43">dmv_x</name></expr></argument>, <argument pos:start="199:46" pos:end="199:50"><expr pos:start="199:46" pos:end="199:50"><name pos:start="199:46" pos:end="199:50">dmv_y</name></expr></argument>, <argument pos:start="199:53" pos:end="199:53"><expr pos:start="199:53" pos:end="199:53"><literal type="number" pos:start="199:53" pos:end="199:53">1</literal></expr></argument>, <argument pos:start="199:56" pos:end="199:64"><expr pos:start="199:56" pos:end="199:64"><name pos:start="199:56" pos:end="199:64">pred_flag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="201:13" pos:end="201:77"><expr pos:start="201:13" pos:end="201:76"><call pos:start="201:13" pos:end="201:76"><name pos:start="201:13" pos:end="201:20">vc1_b_mc</name><argument_list pos:start="201:21" pos:end="201:76">(<argument pos:start="201:22" pos:end="201:22"><expr pos:start="201:22" pos:end="201:22"><name pos:start="201:22" pos:end="201:22">v</name></expr></argument>, <argument pos:start="201:25" pos:end="201:29"><expr pos:start="201:25" pos:end="201:29"><name pos:start="201:25" pos:end="201:29">dmv_x</name></expr></argument>, <argument pos:start="201:32" pos:end="201:36"><expr pos:start="201:32" pos:end="201:36"><name pos:start="201:32" pos:end="201:36">dmv_y</name></expr></argument>, <argument pos:start="201:39" pos:end="201:66"><expr pos:start="201:39" pos:end="201:66"><operator pos:start="201:39" pos:end="201:39">(</operator><name pos:start="201:40" pos:end="201:46">bmvtype</name> <operator pos:start="201:48" pos:end="201:49">==</operator> <name pos:start="201:51" pos:end="201:65">BMV_TYPE_DIRECT</name><operator pos:start="201:66" pos:end="201:66">)</operator></expr></argument>, <argument pos:start="201:69" pos:end="201:75"><expr pos:start="201:69" pos:end="201:75"><name pos:start="201:69" pos:end="201:75">bmvtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="203:13" pos:end="203:46"><expr pos:start="203:13" pos:end="203:45"><name pos:start="203:13" pos:end="203:25">mb_has_coeffs</name> <operator pos:start="203:27" pos:end="203:27">=</operator> <operator pos:start="203:29" pos:end="203:29">!</operator><operator pos:start="203:30" pos:end="203:30">(</operator><name pos:start="203:31" pos:end="203:40">idx_mbmode</name> <operator pos:start="203:42" pos:end="203:42">&amp;</operator> <literal type="number" pos:start="203:44" pos:end="203:44">2</literal><operator pos:start="203:45" pos:end="203:45">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="205:11" pos:end="247:9">else <block pos:start="205:16" pos:end="247:9">{<block_content pos:start="207:13" pos:end="245:43"> <comment type="line" pos:start="205:18" pos:end="205:24">// 4-MV</comment>

            <if_stmt pos:start="207:13" pos:end="209:43"><if pos:start="207:13" pos:end="209:43">if <condition pos:start="207:16" pos:end="207:20">(<expr pos:start="207:17" pos:end="207:19"><name pos:start="207:17" pos:end="207:19">fwd</name></expr>)</condition><block type="pseudo" pos:start="209:17" pos:end="209:43"><block_content pos:start="209:17" pos:end="209:43">

                <expr_stmt pos:start="209:17" pos:end="209:43"><expr pos:start="209:17" pos:end="209:42"><name pos:start="209:17" pos:end="209:23">bmvtype</name> <operator pos:start="209:25" pos:end="209:25">=</operator> <name pos:start="209:27" pos:end="209:42">BMV_TYPE_FORWARD</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="211:13" pos:end="211:34"><expr pos:start="211:13" pos:end="211:33"><name pos:start="211:13" pos:end="211:22"><name pos:start="211:13" pos:end="211:13">v</name><operator pos:start="211:14" pos:end="211:15">-&gt;</operator><name pos:start="211:16" pos:end="211:22">bmvtype</name></name>  <operator pos:start="211:25" pos:end="211:25">=</operator> <name pos:start="211:27" pos:end="211:33">bmvtype</name></expr>;</expr_stmt>

            <expr_stmt pos:start="213:13" pos:end="213:98"><expr pos:start="213:13" pos:end="213:97"><name pos:start="213:13" pos:end="213:23"><name pos:start="213:13" pos:end="213:13">v</name><operator pos:start="213:14" pos:end="213:15">-&gt;</operator><name pos:start="213:16" pos:end="213:23">fourmvbp</name></name> <operator pos:start="213:25" pos:end="213:25">=</operator> <call pos:start="213:27" pos:end="213:97"><name pos:start="213:27" pos:end="213:34">get_vlc2</name><argument_list pos:start="213:35" pos:end="213:97">(<argument pos:start="213:36" pos:end="213:37"><expr pos:start="213:36" pos:end="213:37"><name pos:start="213:36" pos:end="213:37">gb</name></expr></argument>, <argument pos:start="213:40" pos:end="213:61"><expr pos:start="213:40" pos:end="213:61"><name pos:start="213:40" pos:end="213:61"><name pos:start="213:40" pos:end="213:40">v</name><operator pos:start="213:41" pos:end="213:42">-&gt;</operator><name pos:start="213:43" pos:end="213:54">fourmvbp_vlc</name><operator pos:start="213:55" pos:end="213:56">-&gt;</operator><name pos:start="213:57" pos:end="213:61">table</name></name></expr></argument>, <argument pos:start="213:64" pos:end="213:93"><expr pos:start="213:64" pos:end="213:93"><name pos:start="213:64" pos:end="213:93">VC1_4MV_BLOCK_PATTERN_VLC_BITS</name></expr></argument>, <argument pos:start="213:96" pos:end="213:96"><expr pos:start="213:96" pos:end="213:96"><literal type="number" pos:start="213:96" pos:end="213:96">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="215:13" pos:end="243:13">for <control pos:start="215:17" pos:end="215:35">(<init pos:start="215:18" pos:end="215:23"><expr pos:start="215:18" pos:end="215:22"><name pos:start="215:18" pos:end="215:18">i</name> <operator pos:start="215:20" pos:end="215:20">=</operator> <literal type="number" pos:start="215:22" pos:end="215:22">0</literal></expr>;</init> <condition pos:start="215:25" pos:end="215:30"><expr pos:start="215:25" pos:end="215:29"><name pos:start="215:25" pos:end="215:25">i</name> <operator pos:start="215:27" pos:end="215:27">&lt;</operator> <literal type="number" pos:start="215:29" pos:end="215:29">6</literal></expr>;</condition> <incr pos:start="215:32" pos:end="215:34"><expr pos:start="215:32" pos:end="215:34"><name pos:start="215:32" pos:end="215:32">i</name><operator pos:start="215:33" pos:end="215:34">++</operator></expr></incr>)</control> <block pos:start="215:37" pos:end="243:13">{<block_content pos:start="217:17" pos:end="241:71">

                <if_stmt pos:start="217:17" pos:end="241:71"><if pos:start="217:17" pos:end="239:17">if <condition pos:start="217:20" pos:end="217:26">(<expr pos:start="217:21" pos:end="217:25"><name pos:start="217:21" pos:end="217:21">i</name> <operator pos:start="217:23" pos:end="217:23">&lt;</operator> <literal type="number" pos:start="217:25" pos:end="217:25">4</literal></expr>)</condition> <block pos:start="217:28" pos:end="239:17">{<block_content pos:start="219:21" pos:end="237:75">

                    <expr_stmt pos:start="219:21" pos:end="219:59"><expr pos:start="219:21" pos:end="219:58"><name pos:start="219:21" pos:end="219:28"><name pos:start="219:21" pos:end="219:25">dmv_x</name><index pos:start="219:26" pos:end="219:28">[<expr pos:start="219:27" pos:end="219:27"><literal type="number" pos:start="219:27" pos:end="219:27">0</literal></expr>]</index></name> <operator pos:start="219:30" pos:end="219:30">=</operator> <name pos:start="219:32" pos:end="219:39"><name pos:start="219:32" pos:end="219:36">dmv_y</name><index pos:start="219:37" pos:end="219:39">[<expr pos:start="219:38" pos:end="219:38"><literal type="number" pos:start="219:38" pos:end="219:38">0</literal></expr>]</index></name> <operator pos:start="219:41" pos:end="219:41">=</operator> <name pos:start="219:43" pos:end="219:54"><name pos:start="219:43" pos:end="219:51">pred_flag</name><index pos:start="219:52" pos:end="219:54">[<expr pos:start="219:53" pos:end="219:53"><literal type="number" pos:start="219:53" pos:end="219:53">0</literal></expr>]</index></name> <operator pos:start="219:56" pos:end="219:56">=</operator> <literal type="number" pos:start="219:58" pos:end="219:58">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="221:21" pos:end="221:59"><expr pos:start="221:21" pos:end="221:58"><name pos:start="221:21" pos:end="221:28"><name pos:start="221:21" pos:end="221:25">dmv_x</name><index pos:start="221:26" pos:end="221:28">[<expr pos:start="221:27" pos:end="221:27"><literal type="number" pos:start="221:27" pos:end="221:27">1</literal></expr>]</index></name> <operator pos:start="221:30" pos:end="221:30">=</operator> <name pos:start="221:32" pos:end="221:39"><name pos:start="221:32" pos:end="221:36">dmv_y</name><index pos:start="221:37" pos:end="221:39">[<expr pos:start="221:38" pos:end="221:38"><literal type="number" pos:start="221:38" pos:end="221:38">1</literal></expr>]</index></name> <operator pos:start="221:41" pos:end="221:41">=</operator> <name pos:start="221:43" pos:end="221:54"><name pos:start="221:43" pos:end="221:51">pred_flag</name><index pos:start="221:52" pos:end="221:54">[<expr pos:start="221:53" pos:end="221:53"><literal type="number" pos:start="221:53" pos:end="221:53">1</literal></expr>]</index></name> <operator pos:start="221:56" pos:end="221:56">=</operator> <literal type="number" pos:start="221:58" pos:end="221:58">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="223:21" pos:end="223:57"><expr pos:start="223:21" pos:end="223:56"><name pos:start="223:21" pos:end="223:23">val</name> <operator pos:start="223:25" pos:end="223:25">=</operator> <operator pos:start="223:27" pos:end="223:27">(</operator><operator pos:start="223:28" pos:end="223:28">(</operator><name pos:start="223:29" pos:end="223:39"><name pos:start="223:29" pos:end="223:29">v</name><operator pos:start="223:30" pos:end="223:31">-&gt;</operator><name pos:start="223:32" pos:end="223:39">fourmvbp</name></name> <operator pos:start="223:41" pos:end="223:42">&gt;&gt;</operator> <operator pos:start="223:44" pos:end="223:44">(</operator><literal type="number" pos:start="223:45" pos:end="223:47">3</literal> <operator pos:start="223:47" pos:end="223:47">-</operator> <name pos:start="223:49" pos:end="223:49">i</name><operator pos:start="223:50" pos:end="223:50">)</operator><operator pos:start="223:51" pos:end="223:51">)</operator> <operator pos:start="223:53" pos:end="223:53">&amp;</operator> <literal type="number" pos:start="223:55" pos:end="223:55">1</literal><operator pos:start="223:56" pos:end="223:56">)</operator></expr>;</expr_stmt>

                    <if_stmt pos:start="225:21" pos:end="233:21"><if pos:start="225:21" pos:end="233:21">if <condition pos:start="225:24" pos:end="225:28">(<expr pos:start="225:25" pos:end="225:27"><name pos:start="225:25" pos:end="225:27">val</name></expr>)</condition> <block pos:start="225:30" pos:end="233:21">{<block_content pos:start="227:25" pos:end="231:87">

                        <expr_stmt pos:start="227:25" pos:end="231:87"><expr pos:start="227:25" pos:end="231:86"><call pos:start="227:25" pos:end="231:86"><name pos:start="227:25" pos:end="227:45">get_mvdata_interlaced</name><argument_list pos:start="227:46" pos:end="231:86">(<argument pos:start="227:47" pos:end="227:47"><expr pos:start="227:47" pos:end="227:47"><name pos:start="227:47" pos:end="227:47">v</name></expr></argument>, <argument pos:start="227:50" pos:end="227:85"><expr pos:start="227:50" pos:end="227:85"><operator pos:start="227:50" pos:end="227:50">&amp;</operator><name pos:start="227:51" pos:end="227:85"><name pos:start="227:51" pos:end="227:55">dmv_x</name><index pos:start="227:56" pos:end="227:85">[<expr pos:start="227:57" pos:end="227:84"><name pos:start="227:57" pos:end="227:63">bmvtype</name> <operator pos:start="227:65" pos:end="227:66">==</operator> <name pos:start="227:68" pos:end="227:84">BMV_TYPE_BACKWARD</name></expr>]</index></name></expr></argument>,

                                                 <argument pos:start="229:50" pos:end="229:85"><expr pos:start="229:50" pos:end="229:85"><operator pos:start="229:50" pos:end="229:50">&amp;</operator><name pos:start="229:51" pos:end="229:85"><name pos:start="229:51" pos:end="229:55">dmv_y</name><index pos:start="229:56" pos:end="229:85">[<expr pos:start="229:57" pos:end="229:84"><name pos:start="229:57" pos:end="229:63">bmvtype</name> <operator pos:start="229:65" pos:end="229:66">==</operator> <name pos:start="229:68" pos:end="229:84">BMV_TYPE_BACKWARD</name></expr>]</index></name></expr></argument>,

                                             <argument pos:start="231:46" pos:end="231:85"><expr pos:start="231:46" pos:end="231:85"><operator pos:start="231:46" pos:end="231:46">&amp;</operator><name pos:start="231:47" pos:end="231:85"><name pos:start="231:47" pos:end="231:55">pred_flag</name><index pos:start="231:56" pos:end="231:85">[<expr pos:start="231:57" pos:end="231:84"><name pos:start="231:57" pos:end="231:63">bmvtype</name> <operator pos:start="231:65" pos:end="231:66">==</operator> <name pos:start="231:68" pos:end="231:84">BMV_TYPE_BACKWARD</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="235:21" pos:end="235:74"><expr pos:start="235:21" pos:end="235:73"><call pos:start="235:21" pos:end="235:73"><name pos:start="235:21" pos:end="235:39">vc1_pred_b_mv_intfi</name><argument_list pos:start="235:40" pos:end="235:73">(<argument pos:start="235:41" pos:end="235:41"><expr pos:start="235:41" pos:end="235:41"><name pos:start="235:41" pos:end="235:41">v</name></expr></argument>, <argument pos:start="235:44" pos:end="235:44"><expr pos:start="235:44" pos:end="235:44"><name pos:start="235:44" pos:end="235:44">i</name></expr></argument>, <argument pos:start="235:47" pos:end="235:51"><expr pos:start="235:47" pos:end="235:51"><name pos:start="235:47" pos:end="235:51">dmv_x</name></expr></argument>, <argument pos:start="235:54" pos:end="235:58"><expr pos:start="235:54" pos:end="235:58"><name pos:start="235:54" pos:end="235:58">dmv_y</name></expr></argument>, <argument pos:start="235:61" pos:end="235:61"><expr pos:start="235:61" pos:end="235:61"><literal type="number" pos:start="235:61" pos:end="235:61">0</literal></expr></argument>, <argument pos:start="235:64" pos:end="235:72"><expr pos:start="235:64" pos:end="235:72"><name pos:start="235:64" pos:end="235:72">pred_flag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="237:21" pos:end="237:75"><expr pos:start="237:21" pos:end="237:74"><call pos:start="237:21" pos:end="237:74"><name pos:start="237:21" pos:end="237:35">vc1_mc_4mv_luma</name><argument_list pos:start="237:36" pos:end="237:74">(<argument pos:start="237:37" pos:end="237:37"><expr pos:start="237:37" pos:end="237:37"><name pos:start="237:37" pos:end="237:37">v</name></expr></argument>, <argument pos:start="237:40" pos:end="237:40"><expr pos:start="237:40" pos:end="237:40"><name pos:start="237:40" pos:end="237:40">i</name></expr></argument>, <argument pos:start="237:43" pos:end="237:70"><expr pos:start="237:43" pos:end="237:70"><name pos:start="237:43" pos:end="237:49">bmvtype</name> <operator pos:start="237:51" pos:end="237:52">==</operator> <name pos:start="237:54" pos:end="237:70">BMV_TYPE_BACKWARD</name></expr></argument>, <argument pos:start="237:73" pos:end="237:73"><expr pos:start="237:73" pos:end="237:73"><literal type="number" pos:start="237:73" pos:end="237:73">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="239:19" pos:end="241:71">else if <condition pos:start="239:27" pos:end="239:34">(<expr pos:start="239:28" pos:end="239:33"><name pos:start="239:28" pos:end="239:28">i</name> <operator pos:start="239:30" pos:end="239:31">==</operator> <literal type="number" pos:start="239:33" pos:end="239:33">4</literal></expr>)</condition><block type="pseudo" pos:start="241:21" pos:end="241:71"><block_content pos:start="241:21" pos:end="241:71">

                    <expr_stmt pos:start="241:21" pos:end="241:71"><expr pos:start="241:21" pos:end="241:70"><call pos:start="241:21" pos:end="241:70"><name pos:start="241:21" pos:end="241:37">vc1_mc_4mv_chroma</name><argument_list pos:start="241:38" pos:end="241:70">(<argument pos:start="241:39" pos:end="241:39"><expr pos:start="241:39" pos:end="241:39"><name pos:start="241:39" pos:end="241:39">v</name></expr></argument>, <argument pos:start="241:42" pos:end="241:69"><expr pos:start="241:42" pos:end="241:69"><name pos:start="241:42" pos:end="241:48">bmvtype</name> <operator pos:start="241:50" pos:end="241:51">==</operator> <name pos:start="241:53" pos:end="241:69">BMV_TYPE_BACKWARD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="245:13" pos:end="245:43"><expr pos:start="245:13" pos:end="245:42"><name pos:start="245:13" pos:end="245:25">mb_has_coeffs</name> <operator pos:start="245:27" pos:end="245:27">=</operator> <name pos:start="245:29" pos:end="245:38">idx_mbmode</name> <operator pos:start="245:40" pos:end="245:40">&amp;</operator> <literal type="number" pos:start="245:42" pos:end="245:42">1</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="249:9" pos:end="251:87"><if pos:start="249:9" pos:end="251:87">if <condition pos:start="249:12" pos:end="249:26">(<expr pos:start="249:13" pos:end="249:25"><name pos:start="249:13" pos:end="249:25">mb_has_coeffs</name></expr>)</condition><block type="pseudo" pos:start="251:13" pos:end="251:87"><block_content pos:start="251:13" pos:end="251:87">

            <expr_stmt pos:start="251:13" pos:end="251:87"><expr pos:start="251:13" pos:end="251:86"><name pos:start="251:13" pos:end="251:15">cbp</name> <operator pos:start="251:17" pos:end="251:17">=</operator> <literal type="number" pos:start="251:19" pos:end="251:21">1</literal> <operator pos:start="251:21" pos:end="251:21">+</operator> <call pos:start="251:23" pos:end="251:86"><name pos:start="251:23" pos:end="251:30">get_vlc2</name><argument_list pos:start="251:31" pos:end="251:86">(<argument pos:start="251:32" pos:end="251:39"><expr pos:start="251:32" pos:end="251:39"><operator pos:start="251:32" pos:end="251:32">&amp;</operator><name pos:start="251:33" pos:end="251:39"><name pos:start="251:33" pos:end="251:33">v</name><operator pos:start="251:34" pos:end="251:35">-&gt;</operator><name pos:start="251:36" pos:end="251:36">s</name><operator pos:start="251:37" pos:end="251:37">.</operator><name pos:start="251:38" pos:end="251:39">gb</name></name></expr></argument>, <argument pos:start="251:42" pos:end="251:60"><expr pos:start="251:42" pos:end="251:60"><name pos:start="251:42" pos:end="251:60"><name pos:start="251:42" pos:end="251:42">v</name><operator pos:start="251:43" pos:end="251:44">-&gt;</operator><name pos:start="251:45" pos:end="251:53">cbpcy_vlc</name><operator pos:start="251:54" pos:end="251:55">-&gt;</operator><name pos:start="251:56" pos:end="251:60">table</name></name></expr></argument>, <argument pos:start="251:63" pos:end="251:82"><expr pos:start="251:63" pos:end="251:82"><name pos:start="251:63" pos:end="251:82">VC1_CBPCY_P_VLC_BITS</name></expr></argument>, <argument pos:start="251:85" pos:end="251:85"><expr pos:start="251:85" pos:end="251:85"><literal type="number" pos:start="251:85" pos:end="251:85">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="253:9" pos:end="257:9"><if pos:start="253:9" pos:end="257:9">if <condition pos:start="253:12" pos:end="253:16">(<expr pos:start="253:13" pos:end="253:15"><name pos:start="253:13" pos:end="253:15">cbp</name></expr>)</condition> <block pos:start="253:18" pos:end="257:9">{<block_content pos:start="255:13" pos:end="255:25">

            <expr_stmt pos:start="255:13" pos:end="255:25"><expr pos:start="255:13" pos:end="255:24"><call pos:start="255:13" pos:end="255:24"><name pos:start="255:13" pos:end="255:22">GET_MQUANT</name><argument_list pos:start="255:23" pos:end="255:24">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="259:9" pos:end="259:57"><expr pos:start="259:9" pos:end="259:56"><name pos:start="259:9" pos:end="259:47"><name pos:start="259:9" pos:end="259:9">s</name><operator pos:start="259:10" pos:end="259:11">-&gt;</operator><name pos:start="259:12" pos:end="259:26">current_picture</name><operator pos:start="259:27" pos:end="259:27">.</operator><name pos:start="259:28" pos:end="259:39">qscale_table</name><index pos:start="259:40" pos:end="259:47">[<expr pos:start="259:41" pos:end="259:46"><name pos:start="259:41" pos:end="259:46">mb_pos</name></expr>]</index></name> <operator pos:start="259:49" pos:end="259:49">=</operator> <name pos:start="259:51" pos:end="259:56">mquant</name></expr>;</expr_stmt>

        <if_stmt pos:start="261:9" pos:end="265:9"><if pos:start="261:9" pos:end="265:9">if <condition pos:start="261:12" pos:end="261:29">(<expr pos:start="261:13" pos:end="261:28"><operator pos:start="261:13" pos:end="261:13">!</operator><name pos:start="261:14" pos:end="261:21"><name pos:start="261:14" pos:end="261:14">v</name><operator pos:start="261:15" pos:end="261:16">-&gt;</operator><name pos:start="261:17" pos:end="261:21">ttmbf</name></name> <operator pos:start="261:23" pos:end="261:24">&amp;&amp;</operator> <name pos:start="261:26" pos:end="261:28">cbp</name></expr>)</condition> <block pos:start="261:31" pos:end="265:9">{<block_content pos:start="263:13" pos:end="263:90">

            <expr_stmt pos:start="263:13" pos:end="263:90"><expr pos:start="263:13" pos:end="263:89"><name pos:start="263:13" pos:end="263:16">ttmb</name> <operator pos:start="263:18" pos:end="263:18">=</operator> <call pos:start="263:20" pos:end="263:89"><name pos:start="263:20" pos:end="263:27">get_vlc2</name><argument_list pos:start="263:28" pos:end="263:89">(<argument pos:start="263:29" pos:end="263:30"><expr pos:start="263:29" pos:end="263:30"><name pos:start="263:29" pos:end="263:30">gb</name></expr></argument>, <argument pos:start="263:33" pos:end="263:66"><expr pos:start="263:33" pos:end="263:66"><name pos:start="263:33" pos:end="263:60"><name pos:start="263:33" pos:end="263:47">ff_vc1_ttmb_vlc</name><index pos:start="263:48" pos:end="263:60">[<expr pos:start="263:49" pos:end="263:59"><name pos:start="263:49" pos:end="263:59"><name pos:start="263:49" pos:end="263:49">v</name><operator pos:start="263:50" pos:end="263:51">-&gt;</operator><name pos:start="263:52" pos:end="263:59">tt_index</name></name></expr>]</index></name><operator pos:start="263:61" pos:end="263:61">.</operator><name pos:start="263:62" pos:end="263:66">table</name></expr></argument>, <argument pos:start="263:69" pos:end="263:85"><expr pos:start="263:69" pos:end="263:85"><name pos:start="263:69" pos:end="263:85">VC1_TTMB_VLC_BITS</name></expr></argument>, <argument pos:start="263:88" pos:end="263:88"><expr pos:start="263:88" pos:end="263:88"><literal type="number" pos:start="263:88" pos:end="263:88">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="267:9" pos:end="267:20"><expr pos:start="267:9" pos:end="267:19"><name pos:start="267:9" pos:end="267:15">dst_idx</name> <operator pos:start="267:17" pos:end="267:17">=</operator> <literal type="number" pos:start="267:19" pos:end="267:19">0</literal></expr>;</expr_stmt>

        <for pos:start="269:9" pos:end="297:9">for <control pos:start="269:13" pos:end="269:31">(<init pos:start="269:14" pos:end="269:19"><expr pos:start="269:14" pos:end="269:18"><name pos:start="269:14" pos:end="269:14">i</name> <operator pos:start="269:16" pos:end="269:16">=</operator> <literal type="number" pos:start="269:18" pos:end="269:18">0</literal></expr>;</init> <condition pos:start="269:21" pos:end="269:26"><expr pos:start="269:21" pos:end="269:25"><name pos:start="269:21" pos:end="269:21">i</name> <operator pos:start="269:23" pos:end="269:23">&lt;</operator> <literal type="number" pos:start="269:25" pos:end="269:25">6</literal></expr>;</condition> <incr pos:start="269:28" pos:end="269:30"><expr pos:start="269:28" pos:end="269:30"><name pos:start="269:28" pos:end="269:28">i</name><operator pos:start="269:29" pos:end="269:30">++</operator></expr></incr>)</control> <block pos:start="269:33" pos:end="297:9">{<block_content pos:start="271:13" pos:end="295:13">

            <expr_stmt pos:start="271:13" pos:end="271:48"><expr pos:start="271:13" pos:end="271:47"><name pos:start="271:13" pos:end="271:43"><name pos:start="271:13" pos:end="271:13">s</name><operator pos:start="271:14" pos:end="271:15">-&gt;</operator><name pos:start="271:16" pos:end="271:21">dc_val</name><index pos:start="271:22" pos:end="271:24">[<expr pos:start="271:23" pos:end="271:23"><literal type="number" pos:start="271:23" pos:end="271:23">0</literal></expr>]</index><index pos:start="271:25" pos:end="271:43">[<expr pos:start="271:26" pos:end="271:42"><name pos:start="271:26" pos:end="271:42"><name pos:start="271:26" pos:end="271:26">s</name><operator pos:start="271:27" pos:end="271:28">-&gt;</operator><name pos:start="271:29" pos:end="271:39">block_index</name><index pos:start="271:40" pos:end="271:42">[<expr pos:start="271:41" pos:end="271:41"><name pos:start="271:41" pos:end="271:41">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="271:45" pos:end="271:45">=</operator> <literal type="number" pos:start="271:47" pos:end="271:47">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="273:13" pos:end="273:30"><expr pos:start="273:13" pos:end="273:29"><name pos:start="273:13" pos:end="273:19">dst_idx</name> <operator pos:start="273:21" pos:end="273:22">+=</operator> <name pos:start="273:24" pos:end="273:24">i</name> <operator pos:start="273:26" pos:end="273:27">&gt;&gt;</operator> <literal type="number" pos:start="273:29" pos:end="273:29">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="275:13" pos:end="275:41"><expr pos:start="275:13" pos:end="275:40"><name pos:start="275:13" pos:end="275:15">val</name> <operator pos:start="275:17" pos:end="275:17">=</operator> <operator pos:start="275:19" pos:end="275:19">(</operator><operator pos:start="275:20" pos:end="275:20">(</operator><name pos:start="275:21" pos:end="275:23">cbp</name> <operator pos:start="275:25" pos:end="275:26">&gt;&gt;</operator> <operator pos:start="275:28" pos:end="275:28">(</operator><literal type="number" pos:start="275:29" pos:end="275:31">5</literal> <operator pos:start="275:31" pos:end="275:31">-</operator> <name pos:start="275:33" pos:end="275:33">i</name><operator pos:start="275:34" pos:end="275:34">)</operator><operator pos:start="275:35" pos:end="275:35">)</operator> <operator pos:start="275:37" pos:end="275:37">&amp;</operator> <literal type="number" pos:start="275:39" pos:end="275:39">1</literal><operator pos:start="275:40" pos:end="275:40">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="277:13" pos:end="277:72"><expr pos:start="277:13" pos:end="277:71"><name pos:start="277:13" pos:end="277:15">off</name> <operator pos:start="277:17" pos:end="277:17">=</operator> <ternary pos:start="277:19" pos:end="277:71"><condition pos:start="277:19" pos:end="277:27"><expr pos:start="277:19" pos:end="277:25"><operator pos:start="277:19" pos:end="277:19">(</operator><name pos:start="277:20" pos:end="277:20">i</name> <operator pos:start="277:22" pos:end="277:22">&amp;</operator> <literal type="number" pos:start="277:24" pos:end="277:24">4</literal><operator pos:start="277:25" pos:end="277:25">)</operator></expr> ?</condition><then pos:start="277:29" pos:end="277:29"> <expr pos:start="277:29" pos:end="277:29"><literal type="number" pos:start="277:29" pos:end="277:29">0</literal></expr> </then><else pos:start="277:31" pos:end="277:71">: <expr pos:start="277:33" pos:end="277:71"><operator pos:start="277:33" pos:end="277:33">(</operator><name pos:start="277:34" pos:end="277:34">i</name> <operator pos:start="277:36" pos:end="277:36">&amp;</operator> <literal type="number" pos:start="277:38" pos:end="277:38">1</literal><operator pos:start="277:39" pos:end="277:39">)</operator> <operator pos:start="277:41" pos:end="277:41">*</operator> <literal type="number" pos:start="277:43" pos:end="277:45">8</literal> <operator pos:start="277:45" pos:end="277:45">+</operator> <operator pos:start="277:47" pos:end="277:47">(</operator><name pos:start="277:48" pos:end="277:48">i</name> <operator pos:start="277:50" pos:end="277:50">&amp;</operator> <literal type="number" pos:start="277:52" pos:end="277:52">2</literal><operator pos:start="277:53" pos:end="277:53">)</operator> <operator pos:start="277:55" pos:end="277:55">*</operator> <literal type="number" pos:start="277:57" pos:end="277:57">4</literal> <operator pos:start="277:59" pos:end="277:59">*</operator> <name pos:start="277:61" pos:end="277:71"><name pos:start="277:61" pos:end="277:61">s</name><operator pos:start="277:62" pos:end="277:63">-&gt;</operator><name pos:start="277:64" pos:end="277:71">linesize</name></name></expr></else></ternary></expr>;</expr_stmt>

            <if_stmt pos:start="279:13" pos:end="295:13"><if pos:start="279:13" pos:end="295:13">if <condition pos:start="279:16" pos:end="279:20">(<expr pos:start="279:17" pos:end="279:19"><name pos:start="279:17" pos:end="279:19">val</name></expr>)</condition> <block pos:start="279:22" pos:end="295:13">{<block_content pos:start="281:17" pos:end="293:32">

                <expr_stmt pos:start="281:17" pos:end="287:82"><expr pos:start="281:17" pos:end="287:81"><call pos:start="281:17" pos:end="287:81"><name pos:start="281:17" pos:end="281:34">vc1_decode_p_block</name><argument_list pos:start="281:35" pos:end="287:81">(<argument pos:start="281:36" pos:end="281:36"><expr pos:start="281:36" pos:end="281:36"><name pos:start="281:36" pos:end="281:36">v</name></expr></argument>, <argument pos:start="281:39" pos:end="281:49"><expr pos:start="281:39" pos:end="281:49"><name pos:start="281:39" pos:end="281:49"><name pos:start="281:39" pos:end="281:39">s</name><operator pos:start="281:40" pos:end="281:41">-&gt;</operator><name pos:start="281:42" pos:end="281:46">block</name><index pos:start="281:47" pos:end="281:49">[<expr pos:start="281:48" pos:end="281:48"><name pos:start="281:48" pos:end="281:48">i</name></expr>]</index></name></expr></argument>, <argument pos:start="281:52" pos:end="281:52"><expr pos:start="281:52" pos:end="281:52"><name pos:start="281:52" pos:end="281:52">i</name></expr></argument>, <argument pos:start="281:55" pos:end="281:60"><expr pos:start="281:55" pos:end="281:60"><name pos:start="281:55" pos:end="281:60">mquant</name></expr></argument>, <argument pos:start="281:63" pos:end="281:66"><expr pos:start="281:63" pos:end="281:66"><name pos:start="281:63" pos:end="281:66">ttmb</name></expr></argument>,

                                   <argument pos:start="283:36" pos:end="283:46"><expr pos:start="283:36" pos:end="283:46"><name pos:start="283:36" pos:end="283:46">first_block</name></expr></argument>, <argument pos:start="283:49" pos:end="283:70"><expr pos:start="283:49" pos:end="283:70"><name pos:start="283:49" pos:end="283:64"><name pos:start="283:49" pos:end="283:49">s</name><operator pos:start="283:50" pos:end="283:51">-&gt;</operator><name pos:start="283:52" pos:end="283:55">dest</name><index pos:start="283:56" pos:end="283:64">[<expr pos:start="283:57" pos:end="283:63"><name pos:start="283:57" pos:end="283:63">dst_idx</name></expr>]</index></name> <operator pos:start="283:66" pos:end="283:66">+</operator> <name pos:start="283:68" pos:end="283:70">off</name></expr></argument>,

                                   <argument pos:start="285:36" pos:end="285:72"><expr pos:start="285:36" pos:end="285:72"><ternary pos:start="285:36" pos:end="285:72"><condition pos:start="285:36" pos:end="285:44"><expr pos:start="285:36" pos:end="285:42"><operator pos:start="285:36" pos:end="285:36">(</operator><name pos:start="285:37" pos:end="285:37">i</name> <operator pos:start="285:39" pos:end="285:39">&amp;</operator> <literal type="number" pos:start="285:41" pos:end="285:41">4</literal><operator pos:start="285:42" pos:end="285:42">)</operator></expr> ?</condition><then pos:start="285:46" pos:end="285:58"> <expr pos:start="285:46" pos:end="285:58"><name pos:start="285:46" pos:end="285:58"><name pos:start="285:46" pos:end="285:46">s</name><operator pos:start="285:47" pos:end="285:48">-&gt;</operator><name pos:start="285:49" pos:end="285:58">uvlinesize</name></name></expr> </then><else pos:start="285:60" pos:end="285:72">: <expr pos:start="285:62" pos:end="285:72"><name pos:start="285:62" pos:end="285:72"><name pos:start="285:62" pos:end="285:62">s</name><operator pos:start="285:63" pos:end="285:64">-&gt;</operator><name pos:start="285:65" pos:end="285:72">linesize</name></name></expr></else></ternary></expr></argument>,

                                   <argument pos:start="287:36" pos:end="287:74"><expr pos:start="287:36" pos:end="287:74"><operator pos:start="287:36" pos:end="287:36">(</operator><name pos:start="287:37" pos:end="287:37">i</name> <operator pos:start="287:39" pos:end="287:39">&amp;</operator> <literal type="number" pos:start="287:41" pos:end="287:41">4</literal><operator pos:start="287:42" pos:end="287:42">)</operator> <operator pos:start="287:44" pos:end="287:45">&amp;&amp;</operator> <operator pos:start="287:47" pos:end="287:47">(</operator><name pos:start="287:48" pos:end="287:55"><name pos:start="287:48" pos:end="287:48">s</name><operator pos:start="287:49" pos:end="287:50">-&gt;</operator><name pos:start="287:51" pos:end="287:55">flags</name></name> <operator pos:start="287:57" pos:end="287:57">&amp;</operator> <name pos:start="287:59" pos:end="287:73">CODEC_FLAG_GRAY</name><operator pos:start="287:74" pos:end="287:74">)</operator></expr></argument>, <argument pos:start="287:77" pos:end="287:80"><expr pos:start="287:77" pos:end="287:80"><name pos:start="287:77" pos:end="287:80">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="289:17" pos:end="291:30"><if pos:start="289:17" pos:end="291:30">if <condition pos:start="289:20" pos:end="289:42">(<expr pos:start="289:21" pos:end="289:41"><operator pos:start="289:21" pos:end="289:21">!</operator><name pos:start="289:22" pos:end="289:29"><name pos:start="289:22" pos:end="289:22">v</name><operator pos:start="289:23" pos:end="289:24">-&gt;</operator><name pos:start="289:25" pos:end="289:29">ttmbf</name></name> <operator pos:start="289:31" pos:end="289:32">&amp;&amp;</operator> <name pos:start="289:34" pos:end="289:37">ttmb</name> <operator pos:start="289:39" pos:end="289:39">&lt;</operator> <literal type="number" pos:start="289:41" pos:end="289:41">8</literal></expr>)</condition><block type="pseudo" pos:start="291:21" pos:end="291:30"><block_content pos:start="291:21" pos:end="291:30">

                    <expr_stmt pos:start="291:21" pos:end="291:30"><expr pos:start="291:21" pos:end="291:29"><name pos:start="291:21" pos:end="291:24">ttmb</name> <operator pos:start="291:26" pos:end="291:26">=</operator> <operator pos:start="291:28" pos:end="291:28">-</operator><literal type="number" pos:start="291:29" pos:end="291:29">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="293:17" pos:end="293:32"><expr pos:start="293:17" pos:end="293:31"><name pos:start="293:17" pos:end="293:27">first_block</name> <operator pos:start="293:29" pos:end="293:29">=</operator> <literal type="number" pos:start="293:31" pos:end="293:31">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
