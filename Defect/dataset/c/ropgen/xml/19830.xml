<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19830.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">mm_decode_inter</name><parameter_list pos:start="1:27" pos:end="1:72">(<parameter pos:start="1:28" pos:end="1:40"><decl pos:start="1:28" pos:end="1:40"><type pos:start="1:28" pos:end="1:40"><name pos:start="1:28" pos:end="1:36">MmContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type> <name pos:start="1:40" pos:end="1:40">s</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:56"><decl pos:start="1:43" pos:end="1:56"><type pos:start="1:43" pos:end="1:56"><name pos:start="1:43" pos:end="1:45">int</name></type> <name pos:start="1:47" pos:end="1:56">half_horiz</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:71"><decl pos:start="1:59" pos:end="1:71"><type pos:start="1:59" pos:end="1:71"><name pos:start="1:59" pos:end="1:61">int</name></type> <name pos:start="1:63" pos:end="1:71">half_vert</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="93:1">{<block_content pos:start="5:5" pos:end="91:13">

    <decl_stmt pos:start="5:5" pos:end="5:51"><decl pos:start="5:5" pos:end="5:47"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:16">data_off</name> <init pos:start="5:18" pos:end="5:47">= <expr pos:start="5:20" pos:end="5:47"><call pos:start="5:20" pos:end="5:47"><name pos:start="5:20" pos:end="5:39">bytestream2_get_le16</name><argument_list pos:start="5:40" pos:end="5:47">(<argument pos:start="5:41" pos:end="5:46"><expr pos:start="5:41" pos:end="5:46"><operator pos:start="5:41" pos:end="5:41">&amp;</operator><name pos:start="5:42" pos:end="5:46"><name pos:start="5:42" pos:end="5:42">s</name><operator pos:start="5:43" pos:end="5:44">-&gt;</operator><name pos:start="5:45" pos:end="5:46">gb</name></name></expr></argument>)</argument_list></call></expr></init></decl>, <decl pos:start="5:50" pos:end="5:50"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:50" pos:end="5:50">y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:18">GetByteContext</name></type> <name pos:start="7:20" pos:end="7:27">data_ptr</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:35"><if pos:start="11:5" pos:end="13:35">if <condition pos:start="11:8" pos:end="11:54">(<expr pos:start="11:9" pos:end="11:53"><call pos:start="11:9" pos:end="11:42"><name pos:start="11:9" pos:end="11:34">bytestream2_get_bytes_left</name><argument_list pos:start="11:35" pos:end="11:42">(<argument pos:start="11:36" pos:end="11:41"><expr pos:start="11:36" pos:end="11:41"><operator pos:start="11:36" pos:end="11:36">&amp;</operator><name pos:start="11:37" pos:end="11:41"><name pos:start="11:37" pos:end="11:37">s</name><operator pos:start="11:38" pos:end="11:39">-&gt;</operator><name pos:start="11:40" pos:end="11:41">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="11:44" pos:end="11:44">&lt;</operator> <name pos:start="11:46" pos:end="11:53">data_off</name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:35"><block_content pos:start="13:9" pos:end="13:35">

        <return pos:start="13:9" pos:end="13:35">return <expr pos:start="13:16" pos:end="13:34"><name pos:start="13:16" pos:end="13:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:104"><expr pos:start="17:5" pos:end="17:103"><call pos:start="17:5" pos:end="17:103"><name pos:start="17:5" pos:end="17:20">bytestream2_init</name><argument_list pos:start="17:21" pos:end="17:103">(<argument pos:start="17:22" pos:end="17:30"><expr pos:start="17:22" pos:end="17:30"><operator pos:start="17:22" pos:end="17:22">&amp;</operator><name pos:start="17:23" pos:end="17:30">data_ptr</name></expr></argument>, <argument pos:start="17:33" pos:end="17:55"><expr pos:start="17:33" pos:end="17:55"><name pos:start="17:33" pos:end="17:44"><name pos:start="17:33" pos:end="17:33">s</name><operator pos:start="17:34" pos:end="17:35">-&gt;</operator><name pos:start="17:36" pos:end="17:37">gb</name><operator pos:start="17:38" pos:end="17:38">.</operator><name pos:start="17:39" pos:end="17:44">buffer</name></name> <operator pos:start="17:46" pos:end="17:46">+</operator> <name pos:start="17:48" pos:end="17:55">data_off</name></expr></argument>, <argument pos:start="17:58" pos:end="17:102"><expr pos:start="17:58" pos:end="17:102"><call pos:start="17:58" pos:end="17:91"><name pos:start="17:58" pos:end="17:83">bytestream2_get_bytes_left</name><argument_list pos:start="17:84" pos:end="17:91">(<argument pos:start="17:85" pos:end="17:90"><expr pos:start="17:85" pos:end="17:90"><operator pos:start="17:85" pos:end="17:85">&amp;</operator><name pos:start="17:86" pos:end="17:90"><name pos:start="17:86" pos:end="17:86">s</name><operator pos:start="17:87" pos:end="17:88">-&gt;</operator><name pos:start="17:89" pos:end="17:90">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="17:93" pos:end="17:93">-</operator> <name pos:start="17:95" pos:end="17:102">data_off</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="19:5" pos:end="87:5">while <condition pos:start="19:11" pos:end="19:48">(<expr pos:start="19:12" pos:end="19:47"><name pos:start="19:12" pos:end="19:23"><name pos:start="19:12" pos:end="19:12">s</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:16">gb</name><operator pos:start="19:17" pos:end="19:17">.</operator><name pos:start="19:18" pos:end="19:23">buffer</name></name> <operator pos:start="19:25" pos:end="19:25">&lt;</operator> <name pos:start="19:27" pos:end="19:47"><name pos:start="19:27" pos:end="19:34">data_ptr</name><operator pos:start="19:35" pos:end="19:35">.</operator><name pos:start="19:36" pos:end="19:47">buffer_start</name></name></expr>)</condition> <block pos:start="19:50" pos:end="87:5">{<block_content pos:start="21:9" pos:end="85:27">

        <decl_stmt pos:start="21:9" pos:end="21:17"><decl pos:start="21:9" pos:end="21:13"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:13">i</name></decl>, <decl pos:start="21:16" pos:end="21:16"><type ref="prev" pos:start="21:9" pos:end="21:11"/><name pos:start="21:16" pos:end="21:16">j</name></decl>;</decl_stmt>

        <decl_stmt pos:start="23:9" pos:end="23:50"><decl pos:start="23:9" pos:end="23:49"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:18">length</name> <init pos:start="23:20" pos:end="23:49">= <expr pos:start="23:22" pos:end="23:49"><call pos:start="23:22" pos:end="23:49"><name pos:start="23:22" pos:end="23:41">bytestream2_get_byte</name><argument_list pos:start="23:42" pos:end="23:49">(<argument pos:start="23:43" pos:end="23:48"><expr pos:start="23:43" pos:end="23:48"><operator pos:start="23:43" pos:end="23:43">&amp;</operator><name pos:start="23:44" pos:end="23:48"><name pos:start="23:44" pos:end="23:44">s</name><operator pos:start="23:45" pos:end="23:46">-&gt;</operator><name pos:start="23:47" pos:end="23:48">gb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:70"><decl pos:start="25:9" pos:end="25:69"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:13">x</name> <init pos:start="25:15" pos:end="25:69">= <expr pos:start="25:17" pos:end="25:69"><call pos:start="25:17" pos:end="25:44"><name pos:start="25:17" pos:end="25:36">bytestream2_get_byte</name><argument_list pos:start="25:37" pos:end="25:44">(<argument pos:start="25:38" pos:end="25:43"><expr pos:start="25:38" pos:end="25:43"><operator pos:start="25:38" pos:end="25:38">&amp;</operator><name pos:start="25:39" pos:end="25:43"><name pos:start="25:39" pos:end="25:39">s</name><operator pos:start="25:40" pos:end="25:41">-&gt;</operator><name pos:start="25:42" pos:end="25:43">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="25:46" pos:end="25:46">+</operator> <operator pos:start="25:48" pos:end="25:48">(</operator><operator pos:start="25:49" pos:end="25:49">(</operator><name pos:start="25:50" pos:end="25:55">length</name> <operator pos:start="25:57" pos:end="25:57">&amp;</operator> <literal type="number" pos:start="25:59" pos:end="25:62">0x80</literal><operator pos:start="25:63" pos:end="25:63">)</operator> <operator pos:start="25:65" pos:end="25:66">&lt;&lt;</operator> <literal type="number" pos:start="25:68" pos:end="25:68">1</literal><operator pos:start="25:69" pos:end="25:69">)</operator></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:23"><expr pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:14">length</name> <operator pos:start="27:16" pos:end="27:17">&amp;=</operator> <literal type="number" pos:start="27:19" pos:end="27:22">0x7F</literal></expr>;</expr_stmt>



        <if_stmt pos:start="31:9" pos:end="37:9"><if pos:start="31:9" pos:end="37:9">if <condition pos:start="31:12" pos:end="31:22">(<expr pos:start="31:13" pos:end="31:21"><name pos:start="31:13" pos:end="31:18">length</name><operator pos:start="31:19" pos:end="31:20">==</operator><literal type="number" pos:start="31:21" pos:end="31:21">0</literal></expr>)</condition> <block pos:start="31:24" pos:end="37:9">{<block_content pos:start="33:13" pos:end="35:21">

            <expr_stmt pos:start="33:13" pos:end="33:19"><expr pos:start="33:13" pos:end="33:18"><name pos:start="33:13" pos:end="33:13">y</name> <operator pos:start="33:15" pos:end="33:16">+=</operator> <name pos:start="33:18" pos:end="33:18">x</name></expr>;</expr_stmt>

            <continue pos:start="35:13" pos:end="35:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="41:9" pos:end="43:21"><if pos:start="41:9" pos:end="43:21">if <condition pos:start="41:12" pos:end="41:46">(<expr pos:start="41:13" pos:end="41:45"><name pos:start="41:13" pos:end="41:13">y</name> <operator pos:start="41:15" pos:end="41:15">+</operator> <name pos:start="41:17" pos:end="41:25">half_vert</name> <operator pos:start="41:27" pos:end="41:28">&gt;=</operator> <name pos:start="41:30" pos:end="41:45"><name pos:start="41:30" pos:end="41:30">s</name><operator pos:start="41:31" pos:end="41:32">-&gt;</operator><name pos:start="41:33" pos:end="41:37">avctx</name><operator pos:start="41:38" pos:end="41:39">-&gt;</operator><name pos:start="41:40" pos:end="41:45">height</name></name></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:21"><block_content pos:start="43:13" pos:end="43:21">

            <return pos:start="43:13" pos:end="43:21">return <expr pos:start="43:20" pos:end="43:20"><literal type="number" pos:start="43:20" pos:end="43:20">0</literal></expr>;</return></block_content></block></if></if_stmt>



        <for pos:start="47:9" pos:end="81:9">for<control pos:start="47:12" pos:end="47:31">(<init pos:start="47:13" pos:end="47:16"><expr pos:start="47:13" pos:end="47:15"><name pos:start="47:13" pos:end="47:13">i</name><operator pos:start="47:14" pos:end="47:14">=</operator><literal type="number" pos:start="47:15" pos:end="47:15">0</literal></expr>;</init> <condition pos:start="47:18" pos:end="47:26"><expr pos:start="47:18" pos:end="47:25"><name pos:start="47:18" pos:end="47:18">i</name><operator pos:start="47:19" pos:end="47:19">&lt;</operator><name pos:start="47:20" pos:end="47:25">length</name></expr>;</condition> <incr pos:start="47:28" pos:end="47:30"><expr pos:start="47:28" pos:end="47:30"><name pos:start="47:28" pos:end="47:28">i</name><operator pos:start="47:29" pos:end="47:30">++</operator></expr></incr>)</control> <block pos:start="47:33" pos:end="81:9">{<block_content pos:start="49:13" pos:end="79:13">

            <decl_stmt pos:start="49:13" pos:end="49:61"><decl pos:start="49:13" pos:end="49:60"><type pos:start="49:13" pos:end="49:15"><name pos:start="49:13" pos:end="49:15">int</name></type> <name pos:start="49:17" pos:end="49:29">replace_array</name> <init pos:start="49:31" pos:end="49:60">= <expr pos:start="49:33" pos:end="49:60"><call pos:start="49:33" pos:end="49:60"><name pos:start="49:33" pos:end="49:52">bytestream2_get_byte</name><argument_list pos:start="49:53" pos:end="49:60">(<argument pos:start="49:54" pos:end="49:59"><expr pos:start="49:54" pos:end="49:59"><operator pos:start="49:54" pos:end="49:54">&amp;</operator><name pos:start="49:55" pos:end="49:59"><name pos:start="49:55" pos:end="49:55">s</name><operator pos:start="49:56" pos:end="49:57">-&gt;</operator><name pos:start="49:58" pos:end="49:59">gb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <for pos:start="51:13" pos:end="79:13">for<control pos:start="51:16" pos:end="51:30">(<init pos:start="51:17" pos:end="51:20"><expr pos:start="51:17" pos:end="51:19"><name pos:start="51:17" pos:end="51:17">j</name><operator pos:start="51:18" pos:end="51:18">=</operator><literal type="number" pos:start="51:19" pos:end="51:19">0</literal></expr>;</init> <condition pos:start="51:22" pos:end="51:25"><expr pos:start="51:22" pos:end="51:24"><name pos:start="51:22" pos:end="51:22">j</name><operator pos:start="51:23" pos:end="51:23">&lt;</operator><literal type="number" pos:start="51:24" pos:end="51:24">8</literal></expr>;</condition> <incr pos:start="51:27" pos:end="51:29"><expr pos:start="51:27" pos:end="51:29"><name pos:start="51:27" pos:end="51:27">j</name><operator pos:start="51:28" pos:end="51:29">++</operator></expr></incr>)</control> <block pos:start="51:32" pos:end="79:13">{<block_content pos:start="53:17" pos:end="77:36">

                <decl_stmt pos:start="53:17" pos:end="53:59"><decl pos:start="53:17" pos:end="53:58"><type pos:start="53:17" pos:end="53:19"><name pos:start="53:17" pos:end="53:19">int</name></type> <name pos:start="53:21" pos:end="53:27">replace</name> <init pos:start="53:29" pos:end="53:58">= <expr pos:start="53:31" pos:end="53:58"><operator pos:start="53:31" pos:end="53:31">(</operator><name pos:start="53:32" pos:end="53:44">replace_array</name> <operator pos:start="53:46" pos:end="53:47">&gt;&gt;</operator> <operator pos:start="53:49" pos:end="53:49">(</operator><literal type="number" pos:start="53:50" pos:end="53:51">7</literal><operator pos:start="53:51" pos:end="53:51">-</operator><name pos:start="53:52" pos:end="53:52">j</name><operator pos:start="53:53" pos:end="53:53">)</operator><operator pos:start="53:54" pos:end="53:54">)</operator> <operator pos:start="53:56" pos:end="53:56">&amp;</operator> <literal type="number" pos:start="53:58" pos:end="53:58">1</literal></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="55:17" pos:end="75:17"><if pos:start="55:17" pos:end="75:17">if <condition pos:start="55:20" pos:end="55:28">(<expr pos:start="55:21" pos:end="55:27"><name pos:start="55:21" pos:end="55:27">replace</name></expr>)</condition> <block pos:start="55:30" pos:end="75:17">{<block_content pos:start="57:21" pos:end="73:21">

                    <decl_stmt pos:start="57:21" pos:end="57:64"><decl pos:start="57:21" pos:end="57:63"><type pos:start="57:21" pos:end="57:23"><name pos:start="57:21" pos:end="57:23">int</name></type> <name pos:start="57:25" pos:end="57:29">color</name> <init pos:start="57:31" pos:end="57:63">= <expr pos:start="57:33" pos:end="57:63"><call pos:start="57:33" pos:end="57:63"><name pos:start="57:33" pos:end="57:52">bytestream2_get_byte</name><argument_list pos:start="57:53" pos:end="57:63">(<argument pos:start="57:54" pos:end="57:62"><expr pos:start="57:54" pos:end="57:62"><operator pos:start="57:54" pos:end="57:54">&amp;</operator><name pos:start="57:55" pos:end="57:62">data_ptr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="59:21" pos:end="59:73"><expr pos:start="59:21" pos:end="59:72"><name pos:start="59:21" pos:end="59:64"><name pos:start="59:21" pos:end="59:21">s</name><operator pos:start="59:22" pos:end="59:23">-&gt;</operator><name pos:start="59:24" pos:end="59:28">frame</name><operator pos:start="59:29" pos:end="59:29">.</operator><name pos:start="59:30" pos:end="59:33">data</name><index pos:start="59:34" pos:end="59:36">[<expr pos:start="59:35" pos:end="59:35"><literal type="number" pos:start="59:35" pos:end="59:35">0</literal></expr>]</index><index pos:start="59:37" pos:end="59:64">[<expr pos:start="59:38" pos:end="59:63"><name pos:start="59:38" pos:end="59:38">y</name><operator pos:start="59:39" pos:end="59:39">*</operator><name pos:start="59:40" pos:end="59:59"><name pos:start="59:40" pos:end="59:40">s</name><operator pos:start="59:41" pos:end="59:42">-&gt;</operator><name pos:start="59:43" pos:end="59:47">frame</name><operator pos:start="59:48" pos:end="59:48">.</operator><name pos:start="59:49" pos:end="59:56">linesize</name><index pos:start="59:57" pos:end="59:59">[<expr pos:start="59:58" pos:end="59:58"><literal type="number" pos:start="59:58" pos:end="59:58">0</literal></expr>]</index></name> <operator pos:start="59:61" pos:end="59:61">+</operator> <name pos:start="59:63" pos:end="59:63">x</name></expr>]</index></name> <operator pos:start="59:66" pos:end="59:66">=</operator> <name pos:start="59:68" pos:end="59:72">color</name></expr>;</expr_stmt>

                    <if_stmt pos:start="61:21" pos:end="63:81"><if pos:start="61:21" pos:end="63:81">if <condition pos:start="61:24" pos:end="61:35">(<expr pos:start="61:25" pos:end="61:34"><name pos:start="61:25" pos:end="61:34">half_horiz</name></expr>)</condition><block type="pseudo" pos:start="63:25" pos:end="63:81"><block_content pos:start="63:25" pos:end="63:81">

                        <expr_stmt pos:start="63:25" pos:end="63:81"><expr pos:start="63:25" pos:end="63:80"><name pos:start="63:25" pos:end="63:72"><name pos:start="63:25" pos:end="63:25">s</name><operator pos:start="63:26" pos:end="63:27">-&gt;</operator><name pos:start="63:28" pos:end="63:32">frame</name><operator pos:start="63:33" pos:end="63:33">.</operator><name pos:start="63:34" pos:end="63:37">data</name><index pos:start="63:38" pos:end="63:40">[<expr pos:start="63:39" pos:end="63:39"><literal type="number" pos:start="63:39" pos:end="63:39">0</literal></expr>]</index><index pos:start="63:41" pos:end="63:72">[<expr pos:start="63:42" pos:end="63:71"><name pos:start="63:42" pos:end="63:42">y</name><operator pos:start="63:43" pos:end="63:43">*</operator><name pos:start="63:44" pos:end="63:63"><name pos:start="63:44" pos:end="63:44">s</name><operator pos:start="63:45" pos:end="63:46">-&gt;</operator><name pos:start="63:47" pos:end="63:51">frame</name><operator pos:start="63:52" pos:end="63:52">.</operator><name pos:start="63:53" pos:end="63:60">linesize</name><index pos:start="63:61" pos:end="63:63">[<expr pos:start="63:62" pos:end="63:62"><literal type="number" pos:start="63:62" pos:end="63:62">0</literal></expr>]</index></name> <operator pos:start="63:65" pos:end="63:65">+</operator> <name pos:start="63:67" pos:end="63:67">x</name> <operator pos:start="63:69" pos:end="63:69">+</operator> <literal type="number" pos:start="63:71" pos:end="63:71">1</literal></expr>]</index></name> <operator pos:start="63:74" pos:end="63:74">=</operator> <name pos:start="63:76" pos:end="63:80">color</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="65:21" pos:end="73:21"><if pos:start="65:21" pos:end="73:21">if <condition pos:start="65:24" pos:end="65:34">(<expr pos:start="65:25" pos:end="65:33"><name pos:start="65:25" pos:end="65:33">half_vert</name></expr>)</condition> <block pos:start="65:36" pos:end="73:21">{<block_content pos:start="67:25" pos:end="71:89">

                        <expr_stmt pos:start="67:25" pos:end="67:81"><expr pos:start="67:25" pos:end="67:80"><name pos:start="67:25" pos:end="67:72"><name pos:start="67:25" pos:end="67:25">s</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:32">frame</name><operator pos:start="67:33" pos:end="67:33">.</operator><name pos:start="67:34" pos:end="67:37">data</name><index pos:start="67:38" pos:end="67:40">[<expr pos:start="67:39" pos:end="67:39"><literal type="number" pos:start="67:39" pos:end="67:39">0</literal></expr>]</index><index pos:start="67:41" pos:end="67:72">[<expr pos:start="67:42" pos:end="67:71"><operator pos:start="67:42" pos:end="67:42">(</operator><name pos:start="67:43" pos:end="67:43">y</name><operator pos:start="67:44" pos:end="67:44">+</operator><literal type="number" pos:start="67:45" pos:end="67:45">1</literal><operator pos:start="67:46" pos:end="67:46">)</operator><operator pos:start="67:47" pos:end="67:47">*</operator><name pos:start="67:48" pos:end="67:67"><name pos:start="67:48" pos:end="67:48">s</name><operator pos:start="67:49" pos:end="67:50">-&gt;</operator><name pos:start="67:51" pos:end="67:55">frame</name><operator pos:start="67:56" pos:end="67:56">.</operator><name pos:start="67:57" pos:end="67:64">linesize</name><index pos:start="67:65" pos:end="67:67">[<expr pos:start="67:66" pos:end="67:66"><literal type="number" pos:start="67:66" pos:end="67:66">0</literal></expr>]</index></name> <operator pos:start="67:69" pos:end="67:69">+</operator> <name pos:start="67:71" pos:end="67:71">x</name></expr>]</index></name> <operator pos:start="67:74" pos:end="67:74">=</operator> <name pos:start="67:76" pos:end="67:80">color</name></expr>;</expr_stmt>

                        <if_stmt pos:start="69:25" pos:end="71:89"><if pos:start="69:25" pos:end="71:89">if <condition pos:start="69:28" pos:end="69:39">(<expr pos:start="69:29" pos:end="69:38"><name pos:start="69:29" pos:end="69:38">half_horiz</name></expr>)</condition><block type="pseudo" pos:start="71:29" pos:end="71:89"><block_content pos:start="71:29" pos:end="71:89">

                            <expr_stmt pos:start="71:29" pos:end="71:89"><expr pos:start="71:29" pos:end="71:88"><name pos:start="71:29" pos:end="71:80"><name pos:start="71:29" pos:end="71:29">s</name><operator pos:start="71:30" pos:end="71:31">-&gt;</operator><name pos:start="71:32" pos:end="71:36">frame</name><operator pos:start="71:37" pos:end="71:37">.</operator><name pos:start="71:38" pos:end="71:41">data</name><index pos:start="71:42" pos:end="71:44">[<expr pos:start="71:43" pos:end="71:43"><literal type="number" pos:start="71:43" pos:end="71:43">0</literal></expr>]</index><index pos:start="71:45" pos:end="71:80">[<expr pos:start="71:46" pos:end="71:79"><operator pos:start="71:46" pos:end="71:46">(</operator><name pos:start="71:47" pos:end="71:47">y</name><operator pos:start="71:48" pos:end="71:48">+</operator><literal type="number" pos:start="71:49" pos:end="71:49">1</literal><operator pos:start="71:50" pos:end="71:50">)</operator><operator pos:start="71:51" pos:end="71:51">*</operator><name pos:start="71:52" pos:end="71:71"><name pos:start="71:52" pos:end="71:52">s</name><operator pos:start="71:53" pos:end="71:54">-&gt;</operator><name pos:start="71:55" pos:end="71:59">frame</name><operator pos:start="71:60" pos:end="71:60">.</operator><name pos:start="71:61" pos:end="71:68">linesize</name><index pos:start="71:69" pos:end="71:71">[<expr pos:start="71:70" pos:end="71:70"><literal type="number" pos:start="71:70" pos:end="71:70">0</literal></expr>]</index></name> <operator pos:start="71:73" pos:end="71:73">+</operator> <name pos:start="71:75" pos:end="71:75">x</name> <operator pos:start="71:77" pos:end="71:77">+</operator> <literal type="number" pos:start="71:79" pos:end="71:79">1</literal></expr>]</index></name> <operator pos:start="71:82" pos:end="71:82">=</operator> <name pos:start="71:84" pos:end="71:88">color</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="77:17" pos:end="77:36"><expr pos:start="77:17" pos:end="77:35"><name pos:start="77:17" pos:end="77:17">x</name> <operator pos:start="77:19" pos:end="77:20">+=</operator> <literal type="number" pos:start="77:22" pos:end="77:24">1</literal> <operator pos:start="77:24" pos:end="77:24">+</operator> <name pos:start="77:26" pos:end="77:35">half_horiz</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>



        <expr_stmt pos:start="85:9" pos:end="85:27"><expr pos:start="85:9" pos:end="85:26"><name pos:start="85:9" pos:end="85:9">y</name> <operator pos:start="85:11" pos:end="85:12">+=</operator> <literal type="number" pos:start="85:14" pos:end="85:16">1</literal> <operator pos:start="85:16" pos:end="85:16">+</operator> <name pos:start="85:18" pos:end="85:26">half_vert</name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <return pos:start="91:5" pos:end="91:13">return <expr pos:start="91:12" pos:end="91:12"><literal type="number" pos:start="91:12" pos:end="91:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
