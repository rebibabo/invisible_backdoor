<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15738.c" pos:tabs="8"><function pos:start="1:1" pos:end="155:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:27">ff_hcscale_fast_mmxext</name><parameter_list pos:start="1:28" pos:end="5:73">(<parameter pos:start="1:29" pos:end="1:41"><decl pos:start="1:29" pos:end="1:41"><type pos:start="1:29" pos:end="1:41"><name pos:start="1:29" pos:end="1:38">SwsContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">c</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:56"><decl pos:start="1:44" pos:end="1:56"><type pos:start="1:44" pos:end="1:56"><name pos:start="1:44" pos:end="1:50">int16_t</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:56">dst1</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:71"><decl pos:start="1:59" pos:end="1:71"><type pos:start="1:59" pos:end="1:71"><name pos:start="1:59" pos:end="1:65">int16_t</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:71">dst2</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:45"><decl pos:start="3:34" pos:end="3:45"><type pos:start="3:34" pos:end="3:45"><name pos:start="3:34" pos:end="3:36">int</name></type> <name pos:start="3:38" pos:end="3:45">dstWidth</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:66"><decl pos:start="3:48" pos:end="3:66"><type pos:start="3:48" pos:end="3:66"><specifier pos:start="3:48" pos:end="3:52">const</specifier> <name pos:start="3:54" pos:end="3:60">uint8_t</name> <modifier pos:start="3:62" pos:end="3:62">*</modifier></type><name pos:start="3:63" pos:end="3:66">src1</name></decl></parameter>,

                                 <parameter pos:start="5:34" pos:end="5:52"><decl pos:start="5:34" pos:end="5:52"><type pos:start="5:34" pos:end="5:52"><specifier pos:start="5:34" pos:end="5:38">const</specifier> <name pos:start="5:40" pos:end="5:46">uint8_t</name> <modifier pos:start="5:48" pos:end="5:48">*</modifier></type><name pos:start="5:49" pos:end="5:52">src2</name></decl></parameter>, <parameter pos:start="5:55" pos:end="5:62"><decl pos:start="5:55" pos:end="5:62"><type pos:start="5:55" pos:end="5:62"><name pos:start="5:55" pos:end="5:57">int</name></type> <name pos:start="5:59" pos:end="5:62">srcW</name></decl></parameter>, <parameter pos:start="5:65" pos:end="5:72"><decl pos:start="5:65" pos:end="5:72"><type pos:start="5:65" pos:end="5:72"><name pos:start="5:65" pos:end="5:67">int</name></type> <name pos:start="5:69" pos:end="5:72">xInc</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="155:1">{<block_content pos:start="9:5" pos:end="153:5">

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:41"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">int32_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:22">filterPos</name> <init pos:start="9:24" pos:end="9:41">= <expr pos:start="9:26" pos:end="9:41"><name pos:start="9:26" pos:end="9:41"><name pos:start="9:26" pos:end="9:26">c</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:41">hChrFilterPos</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:39"><decl pos:start="11:5" pos:end="11:38"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">int16_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:19">filter</name>    <init pos:start="11:24" pos:end="11:38">= <expr pos:start="11:26" pos:end="11:38"><name pos:start="11:26" pos:end="11:38"><name pos:start="11:26" pos:end="11:26">c</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:38">hChrFilter</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:55"><decl pos:start="13:5" pos:end="13:54"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:8">void</name>    <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:29">mmxextFilterCode</name> <init pos:start="13:31" pos:end="13:54">= <expr pos:start="13:33" pos:end="13:54"><name pos:start="13:33" pos:end="13:54"><name pos:start="13:33" pos:end="13:33">c</name><operator pos:start="13:34" pos:end="13:35">-&gt;</operator><name pos:start="13:36" pos:end="13:54">chrMmxextFilterCode</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="18:0"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>;</decl_stmt>

<cpp:if pos:start="17:1" pos:end="17:15">#<cpp:directive pos:start="17:2" pos:end="17:3">if</cpp:directive> <expr pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:15">ARCH_X86_64</name></expr></cpp:if>

    <expr_stmt pos:start="19:5" pos:end="24:0"><expr pos:start="19:5" pos:end="19:41"><call pos:start="19:5" pos:end="19:41"><name pos:start="19:5" pos:end="19:19">DECLARE_ALIGNED</name><argument_list pos:start="19:20" pos:end="19:41">(<argument pos:start="19:21" pos:end="19:21"><expr pos:start="19:21" pos:end="19:21"><literal type="number" pos:start="19:21" pos:end="19:21">8</literal></expr></argument>, <argument pos:start="19:24" pos:end="19:31"><expr pos:start="19:24" pos:end="19:31"><name pos:start="19:24" pos:end="19:31">uint64_t</name></expr></argument>, <argument pos:start="19:34" pos:end="19:40"><expr pos:start="19:34" pos:end="19:40"><name pos:start="19:34" pos:end="19:40">retsave</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="21:1" pos:end="21:5">#<cpp:directive pos:start="21:2" pos:end="21:5">else</cpp:directive></cpp:else>

<cpp:if pos:start="23:1" pos:end="23:16">#<cpp:directive pos:start="23:2" pos:end="23:3">if</cpp:directive> <expr pos:start="23:5" pos:end="23:16"><call pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:11">defined</name><argument_list pos:start="23:12" pos:end="23:16">(<argument pos:start="23:13" pos:end="23:15"><expr pos:start="23:13" pos:end="23:15"><name pos:start="23:13" pos:end="23:15">PIC</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="25:5" pos:end="30:0"><expr pos:start="25:5" pos:end="25:41"><call pos:start="25:5" pos:end="25:41"><name pos:start="25:5" pos:end="25:19">DECLARE_ALIGNED</name><argument_list pos:start="25:20" pos:end="25:41">(<argument pos:start="25:21" pos:end="25:21"><expr pos:start="25:21" pos:end="25:21"><literal type="number" pos:start="25:21" pos:end="25:21">8</literal></expr></argument>, <argument pos:start="25:24" pos:end="25:31"><expr pos:start="25:24" pos:end="25:31"><name pos:start="25:24" pos:end="25:31">uint64_t</name></expr></argument>, <argument pos:start="25:34" pos:end="25:40"><expr pos:start="25:34" pos:end="25:40"><name pos:start="25:34" pos:end="25:40">ebxsave</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="27:1" pos:end="27:6">#<cpp:directive pos:start="27:2" pos:end="27:6">endif</cpp:directive></cpp:endif>

<cpp:endif pos:start="29:1" pos:end="29:6">#<cpp:directive pos:start="29:2" pos:end="29:6">endif</cpp:directive></cpp:endif>

    <asm pos:start="31:5" pos:end="143:6">__asm__ <specifier pos:start="31:13" pos:end="31:20">volatile</specifier>(

<cpp:if pos:start="33:1" pos:end="33:15">#<cpp:directive pos:start="33:2" pos:end="33:3">if</cpp:directive> <expr pos:start="33:5" pos:end="33:15"><name pos:start="33:5" pos:end="33:15">ARCH_X86_64</name></expr></cpp:if>

        "mov          -8(%%rsp), %%"FF_REG_a"    \n\t"

        "mov       %%"FF_REG_a", %7              \n\t"  <comment type="line" pos:start="37:57" pos:end="37:66">// retsave</comment>

<cpp:else pos:start="39:1" pos:end="39:5">#<cpp:directive pos:start="39:2" pos:end="39:5">else</cpp:directive></cpp:else>

<cpp:if pos:start="41:1" pos:end="41:16">#<cpp:directive pos:start="41:2" pos:end="41:3">if</cpp:directive> <expr pos:start="41:5" pos:end="41:16"><call pos:start="41:5" pos:end="41:16"><name pos:start="41:5" pos:end="41:11">defined</name><argument_list pos:start="41:12" pos:end="41:16">(<argument pos:start="41:13" pos:end="41:15"><expr pos:start="41:13" pos:end="41:15"><name pos:start="41:13" pos:end="41:15">PIC</name></expr></argument>)</argument_list></call></expr></cpp:if>

        "mov       %%"FF_REG_b", %7              \n\t"  <comment type="line" pos:start="43:57" pos:end="43:66">// ebxsave</comment>

<cpp:endif pos:start="45:1" pos:end="45:6">#<cpp:directive pos:start="45:2" pos:end="45:6">endif</cpp:directive></cpp:endif>

<cpp:endif pos:start="47:1" pos:end="47:6">#<cpp:directive pos:start="47:2" pos:end="47:6">endif</cpp:directive></cpp:endif>

        "pxor             %%mm7, %%mm7           \n\t"

        "mov                 %0, %%"FF_REG_c"    \n\t"

        "mov                 %1, %%"FF_REG_D"    \n\t"

        "mov                 %2, %%"FF_REG_d"    \n\t"

        "mov                 %3, %%"FF_REG_b"    \n\t"

        "xor          %%"FF_REG_a", %%"FF_REG_a" \n\t" <comment type="line" pos:start="59:56" pos:end="59:59">// i</comment>

        PREFETCH"   (%%"FF_REG_c")               \n\t"

        PREFETCH" 32(%%"FF_REG_c")               \n\t"

        PREFETCH" 64(%%"FF_REG_c")               \n\t"



        CALL_MMXEXT_FILTER_CODE

        CALL_MMXEXT_FILTER_CODE

        CALL_MMXEXT_FILTER_CODE

        CALL_MMXEXT_FILTER_CODE

        "xor          %%"FF_REG_a", %%"FF_REG_a" \n\t" <comment type="line" pos:start="77:56" pos:end="77:59">// i</comment>

        "mov                    %5, %%"FF_REG_c" \n\t" <comment type="line" pos:start="79:56" pos:end="79:62">// src2</comment>

        "mov                    %6, %%"FF_REG_D" \n\t" <comment type="line" pos:start="81:56" pos:end="81:62">// dst2</comment>

        PREFETCH"   (%%"FF_REG_c")               \n\t"

        PREFETCH" 32(%%"FF_REG_c")               \n\t"

        PREFETCH" 64(%%"FF_REG_c")               \n\t"



        CALL_MMXEXT_FILTER_CODE

        CALL_MMXEXT_FILTER_CODE

        CALL_MMXEXT_FILTER_CODE

        CALL_MMXEXT_FILTER_CODE



<cpp:if pos:start="101:1" pos:end="101:15">#<cpp:directive pos:start="101:2" pos:end="101:3">if</cpp:directive> <expr pos:start="101:5" pos:end="101:15"><name pos:start="101:5" pos:end="101:15">ARCH_X86_64</name></expr></cpp:if>

        "mov                    %7, %%"FF_REG_a" \n\t"

        "mov          %%"FF_REG_a", -8(%%rsp)    \n\t"

<cpp:else pos:start="107:1" pos:end="107:5">#<cpp:directive pos:start="107:2" pos:end="107:5">else</cpp:directive></cpp:else>

<cpp:if pos:start="109:1" pos:end="109:16">#<cpp:directive pos:start="109:2" pos:end="109:3">if</cpp:directive> <expr pos:start="109:5" pos:end="109:16"><call pos:start="109:5" pos:end="109:16"><name pos:start="109:5" pos:end="109:11">defined</name><argument_list pos:start="109:12" pos:end="109:16">(<argument pos:start="109:13" pos:end="109:15"><expr pos:start="109:13" pos:end="109:15"><name pos:start="109:13" pos:end="109:15">PIC</name></expr></argument>)</argument_list></call></expr></cpp:if>

        "mov %7, %%"FF_REG_b"    \n\t"

<cpp:endif pos:start="113:1" pos:end="113:6">#<cpp:directive pos:start="113:2" pos:end="113:6">endif</cpp:directive></cpp:endif>

<cpp:endif pos:start="115:1" pos:end="115:6">#<cpp:directive pos:start="115:2" pos:end="115:6">endif</cpp:directive></cpp:endif>

        :: "m" (src1), "m" (dst1), "m" (filter), "m" (filterPos),

           "m" (mmxextFilterCode), "m" (src2), "m"(dst2)

<cpp:if pos:start="121:1" pos:end="121:15">#<cpp:directive pos:start="121:2" pos:end="121:3">if</cpp:directive> <expr pos:start="121:5" pos:end="121:15"><name pos:start="121:5" pos:end="121:15">ARCH_X86_64</name></expr></cpp:if>

          ,"m"(retsave)

<cpp:else pos:start="125:1" pos:end="125:5">#<cpp:directive pos:start="125:2" pos:end="125:5">else</cpp:directive></cpp:else>

<cpp:if pos:start="127:1" pos:end="127:16">#<cpp:directive pos:start="127:2" pos:end="127:3">if</cpp:directive> <expr pos:start="127:5" pos:end="127:16"><call pos:start="127:5" pos:end="127:16"><name pos:start="127:5" pos:end="127:11">defined</name><argument_list pos:start="127:12" pos:end="127:16">(<argument pos:start="127:13" pos:end="127:15"><expr pos:start="127:13" pos:end="127:15"><name pos:start="127:13" pos:end="127:15">PIC</name></expr></argument>)</argument_list></call></expr></cpp:if>

          ,"m" (ebxsave)

<cpp:endif pos:start="131:1" pos:end="131:6">#<cpp:directive pos:start="131:2" pos:end="131:6">endif</cpp:directive></cpp:endif>

<cpp:endif pos:start="133:1" pos:end="133:6">#<cpp:directive pos:start="133:2" pos:end="133:6">endif</cpp:directive></cpp:endif>

        : "%"FF_REG_a, "%"FF_REG_c, "%"FF_REG_d, "%"FF_REG_S, "%"FF_REG_D

<cpp:if pos:start="137:1" pos:end="137:32">#<cpp:directive pos:start="137:2" pos:end="137:3">if</cpp:directive> <expr pos:start="137:5" pos:end="137:32"><name pos:start="137:5" pos:end="137:15">ARCH_X86_64</name> <operator pos:start="137:17" pos:end="137:18">||</operator> <operator pos:start="137:20" pos:end="137:20">!</operator><call pos:start="137:21" pos:end="137:32"><name pos:start="137:21" pos:end="137:27">defined</name><argument_list pos:start="137:28" pos:end="137:32">(<argument pos:start="137:29" pos:end="137:31"><expr pos:start="137:29" pos:end="137:31"><name pos:start="137:29" pos:end="137:31">PIC</name></expr></argument>)</argument_list></call></expr></cpp:if>

         ,"%"FF_REG_b

<cpp:endif pos:start="141:1" pos:end="141:6">#<cpp:directive pos:start="141:2" pos:end="141:6">endif</cpp:directive></cpp:endif>

    );</asm>



    <for pos:start="147:5" pos:end="153:5">for <control pos:start="147:9" pos:end="147:50">(<init pos:start="147:10" pos:end="147:22"><expr pos:start="147:10" pos:end="147:21"><name pos:start="147:10" pos:end="147:10">i</name><operator pos:start="147:11" pos:end="147:11">=</operator><name pos:start="147:12" pos:end="147:19">dstWidth</name><operator pos:start="147:20" pos:end="147:20">-</operator><literal type="number" pos:start="147:21" pos:end="147:21">1</literal></expr>;</init> <condition pos:start="147:24" pos:end="147:45"><expr pos:start="147:24" pos:end="147:44"><operator pos:start="147:24" pos:end="147:24">(</operator><name pos:start="147:25" pos:end="147:25">i</name><operator pos:start="147:26" pos:end="147:26">*</operator><name pos:start="147:27" pos:end="147:30">xInc</name><operator pos:start="147:31" pos:end="147:31">)</operator><operator pos:start="147:32" pos:end="147:33">&gt;&gt;</operator><literal type="number" pos:start="147:34" pos:end="147:35">16</literal> <operator pos:start="147:37" pos:end="147:38">&gt;=</operator><name pos:start="147:39" pos:end="147:42">srcW</name><operator pos:start="147:43" pos:end="147:43">-</operator><literal type="number" pos:start="147:44" pos:end="147:44">1</literal></expr>;</condition> <incr pos:start="147:47" pos:end="147:49"><expr pos:start="147:47" pos:end="147:49"><name pos:start="147:47" pos:end="147:47">i</name><operator pos:start="147:48" pos:end="147:49">--</operator></expr></incr>)</control> <block pos:start="147:52" pos:end="153:5">{<block_content pos:start="149:9" pos:end="151:35">

        <expr_stmt pos:start="149:9" pos:end="149:35"><expr pos:start="149:9" pos:end="149:34"><name pos:start="149:9" pos:end="149:15"><name pos:start="149:9" pos:end="149:12">dst1</name><index pos:start="149:13" pos:end="149:15">[<expr pos:start="149:14" pos:end="149:14"><name pos:start="149:14" pos:end="149:14">i</name></expr>]</index></name> <operator pos:start="149:17" pos:end="149:17">=</operator> <name pos:start="149:19" pos:end="149:30"><name pos:start="149:19" pos:end="149:22">src1</name><index pos:start="149:23" pos:end="149:30">[<expr pos:start="149:24" pos:end="149:29"><name pos:start="149:24" pos:end="149:27">srcW</name><operator pos:start="149:28" pos:end="149:28">-</operator><literal type="number" pos:start="149:29" pos:end="149:29">1</literal></expr>]</index></name><operator pos:start="149:31" pos:end="149:31">*</operator><literal type="number" pos:start="149:32" pos:end="149:34">128</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:35"><expr pos:start="151:9" pos:end="151:34"><name pos:start="151:9" pos:end="151:15"><name pos:start="151:9" pos:end="151:12">dst2</name><index pos:start="151:13" pos:end="151:15">[<expr pos:start="151:14" pos:end="151:14"><name pos:start="151:14" pos:end="151:14">i</name></expr>]</index></name> <operator pos:start="151:17" pos:end="151:17">=</operator> <name pos:start="151:19" pos:end="151:30"><name pos:start="151:19" pos:end="151:22">src2</name><index pos:start="151:23" pos:end="151:30">[<expr pos:start="151:24" pos:end="151:29"><name pos:start="151:24" pos:end="151:27">srcW</name><operator pos:start="151:28" pos:end="151:28">-</operator><literal type="number" pos:start="151:29" pos:end="151:29">1</literal></expr>]</index></name><operator pos:start="151:31" pos:end="151:31">*</operator><literal type="number" pos:start="151:32" pos:end="151:34">128</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
