<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16865.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:18">usb_claim_port</name><parameter_list pos:start="1:19" pos:end="1:34">(<parameter pos:start="1:20" pos:end="1:33"><decl pos:start="1:20" pos:end="1:33"><type pos:start="1:20" pos:end="1:30"><name pos:start="1:20" pos:end="1:28">USBDevice</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:33">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:5" pos:end="81:13">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:10">USBBus</name> <modifier pos:start="5:12" pos:end="5:12">*</modifier></type><name pos:start="5:13" pos:end="5:15">bus</name> <init pos:start="5:17" pos:end="5:42">= <expr pos:start="5:19" pos:end="5:42"><call pos:start="5:19" pos:end="5:42"><name pos:start="5:19" pos:end="5:37">usb_bus_from_device</name><argument_list pos:start="5:38" pos:end="5:42">(<argument pos:start="5:39" pos:end="5:41"><expr pos:start="5:39" pos:end="5:41"><name pos:start="5:39" pos:end="5:41">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">USBPort</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:17">port</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:30"><expr pos:start="11:5" pos:end="11:29"><call pos:start="11:5" pos:end="11:29"><name pos:start="11:5" pos:end="11:10">assert</name><argument_list pos:start="11:11" pos:end="11:29">(<argument pos:start="11:12" pos:end="11:28"><expr pos:start="11:12" pos:end="11:28"><name pos:start="11:12" pos:end="11:20"><name pos:start="11:12" pos:end="11:14">dev</name><operator pos:start="11:15" pos:end="11:16">-&gt;</operator><name pos:start="11:17" pos:end="11:20">port</name></name> <operator pos:start="11:22" pos:end="11:23">==</operator> <name pos:start="11:25" pos:end="11:28">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="59:5"><if pos:start="15:5" pos:end="37:5">if <condition pos:start="15:8" pos:end="15:23">(<expr pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:11">dev</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:22">port_path</name></name></expr>)</condition> <block pos:start="15:25" pos:end="37:5">{<block_content pos:start="17:9" pos:end="35:9">

        <macro pos:start="17:9" pos:end="17:46"><name pos:start="17:9" pos:end="17:22">QTAILQ_FOREACH</name><argument_list pos:start="17:23" pos:end="17:46">(<argument pos:start="17:24" pos:end="17:27">port</argument>, <argument pos:start="17:30" pos:end="17:39">&amp;bus-&gt;free</argument>, <argument pos:start="17:42" pos:end="17:45">next</argument>)</argument_list></macro> <block pos:start="17:48" pos:end="25:9">{<block_content pos:start="19:13" pos:end="23:13">

            <if_stmt pos:start="19:13" pos:end="23:13"><if pos:start="19:13" pos:end="23:13">if <condition pos:start="19:16" pos:end="19:56">(<expr pos:start="19:17" pos:end="19:55"><call pos:start="19:17" pos:end="19:50"><name pos:start="19:17" pos:end="19:22">strcmp</name><argument_list pos:start="19:23" pos:end="19:50">(<argument pos:start="19:24" pos:end="19:33"><expr pos:start="19:24" pos:end="19:33"><name pos:start="19:24" pos:end="19:33"><name pos:start="19:24" pos:end="19:27">port</name><operator pos:start="19:28" pos:end="19:29">-&gt;</operator><name pos:start="19:30" pos:end="19:33">path</name></name></expr></argument>, <argument pos:start="19:36" pos:end="19:49"><expr pos:start="19:36" pos:end="19:49"><name pos:start="19:36" pos:end="19:49"><name pos:start="19:36" pos:end="19:38">dev</name><operator pos:start="19:39" pos:end="19:40">-&gt;</operator><name pos:start="19:41" pos:end="19:49">port_path</name></name></expr></argument>)</argument_list></call> <operator pos:start="19:52" pos:end="19:53">==</operator> <literal type="number" pos:start="19:55" pos:end="19:55">0</literal></expr>)</condition> <block pos:start="19:58" pos:end="23:13">{<block_content pos:start="21:17" pos:end="21:22">

                <break pos:start="21:17" pos:end="21:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <if_stmt pos:start="27:9" pos:end="35:9"><if pos:start="27:9" pos:end="35:9">if <condition pos:start="27:12" pos:end="27:25">(<expr pos:start="27:13" pos:end="27:24"><name pos:start="27:13" pos:end="27:16">port</name> <operator pos:start="27:18" pos:end="27:19">==</operator> <name pos:start="27:21" pos:end="27:24">NULL</name></expr>)</condition> <block pos:start="27:27" pos:end="35:9">{<block_content pos:start="29:13" pos:end="33:22">

            <expr_stmt pos:start="29:13" pos:end="31:57"><expr pos:start="29:13" pos:end="31:56"><call pos:start="29:13" pos:end="31:56"><name pos:start="29:13" pos:end="29:24">error_report</name><argument_list pos:start="29:25" pos:end="31:56">(<argument pos:start="29:26" pos:end="29:74"><expr pos:start="29:26" pos:end="29:74"><literal type="string" pos:start="29:26" pos:end="29:74">"Error: usb port %s (bus %s) not found (in use?)"</literal></expr></argument>,

                         <argument pos:start="31:26" pos:end="31:39"><expr pos:start="31:26" pos:end="31:39"><name pos:start="31:26" pos:end="31:39"><name pos:start="31:26" pos:end="31:28">dev</name><operator pos:start="31:29" pos:end="31:30">-&gt;</operator><name pos:start="31:31" pos:end="31:39">port_path</name></name></expr></argument>, <argument pos:start="31:42" pos:end="31:55"><expr pos:start="31:42" pos:end="31:55"><name pos:start="31:42" pos:end="31:55"><name pos:start="31:42" pos:end="31:44">bus</name><operator pos:start="31:45" pos:end="31:46">-&gt;</operator><name pos:start="31:47" pos:end="31:50">qbus</name><operator pos:start="31:51" pos:end="31:51">.</operator><name pos:start="31:52" pos:end="31:55">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="33:13" pos:end="33:22">return <expr pos:start="33:20" pos:end="33:21"><operator pos:start="33:20" pos:end="33:20">-</operator><literal type="number" pos:start="33:21" pos:end="33:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="37:7" pos:end="59:5">else <block pos:start="37:12" pos:end="59:5">{<block_content pos:start="39:9" pos:end="57:40">

        <if_stmt pos:start="39:9" pos:end="45:9"><if pos:start="39:9" pos:end="45:9">if <condition pos:start="39:12" pos:end="39:88">(<expr pos:start="39:13" pos:end="39:87"><name pos:start="39:13" pos:end="39:22"><name pos:start="39:13" pos:end="39:15">bus</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:22">nfree</name></name> <operator pos:start="39:24" pos:end="39:25">==</operator> <literal type="number" pos:start="39:27" pos:end="39:27">1</literal> <operator pos:start="39:29" pos:end="39:30">&amp;&amp;</operator> <call pos:start="39:32" pos:end="39:82"><name pos:start="39:32" pos:end="39:37">strcmp</name><argument_list pos:start="39:38" pos:end="39:82">(<argument pos:start="39:39" pos:end="39:70"><expr pos:start="39:39" pos:end="39:70"><call pos:start="39:39" pos:end="39:70"><name pos:start="39:39" pos:end="39:57">object_get_typename</name><argument_list pos:start="39:58" pos:end="39:70">(<argument pos:start="39:59" pos:end="39:69"><expr pos:start="39:59" pos:end="39:69"><call pos:start="39:59" pos:end="39:69"><name pos:start="39:59" pos:end="39:64">OBJECT</name><argument_list pos:start="39:65" pos:end="39:69">(<argument pos:start="39:66" pos:end="39:68"><expr pos:start="39:66" pos:end="39:68"><name pos:start="39:66" pos:end="39:68">dev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="39:73" pos:end="39:81"><expr pos:start="39:73" pos:end="39:81"><literal type="string" pos:start="39:73" pos:end="39:81">"usb-hub"</literal></expr></argument>)</argument_list></call> <operator pos:start="39:84" pos:end="39:85">!=</operator> <literal type="number" pos:start="39:87" pos:end="39:87">0</literal></expr>)</condition> <block pos:start="39:90" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:46">

            <comment type="block" pos:start="41:13" pos:end="41:50">/* Create a new hub and chain it on */</comment>

            <expr_stmt pos:start="43:13" pos:end="43:46"><expr pos:start="43:13" pos:end="43:45"><call pos:start="43:13" pos:end="43:45"><name pos:start="43:13" pos:end="43:29">usb_create_simple</name><argument_list pos:start="43:30" pos:end="43:45">(<argument pos:start="43:31" pos:end="43:33"><expr pos:start="43:31" pos:end="43:33"><name pos:start="43:31" pos:end="43:33">bus</name></expr></argument>, <argument pos:start="43:36" pos:end="43:44"><expr pos:start="43:36" pos:end="43:44"><literal type="string" pos:start="43:36" pos:end="43:44">"usb-hub"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="47:9" pos:end="55:9"><if pos:start="47:9" pos:end="55:9">if <condition pos:start="47:12" pos:end="47:28">(<expr pos:start="47:13" pos:end="47:27"><name pos:start="47:13" pos:end="47:22"><name pos:start="47:13" pos:end="47:15">bus</name><operator pos:start="47:16" pos:end="47:17">-&gt;</operator><name pos:start="47:18" pos:end="47:22">nfree</name></name> <operator pos:start="47:24" pos:end="47:25">==</operator> <literal type="number" pos:start="47:27" pos:end="47:27">0</literal></expr>)</condition> <block pos:start="47:30" pos:end="55:9">{<block_content pos:start="49:13" pos:end="53:22">

            <expr_stmt pos:start="49:13" pos:end="51:66"><expr pos:start="49:13" pos:end="51:65"><call pos:start="49:13" pos:end="51:65"><name pos:start="49:13" pos:end="49:24">error_report</name><argument_list pos:start="49:25" pos:end="51:65">(<argument pos:start="49:26" pos:end="51:45"><expr pos:start="49:26" pos:end="51:45"><literal type="string" pos:start="49:26" pos:end="49:73">"Error: tried to attach usb device %s to a bus "</literal>

                         <literal type="string" pos:start="51:26" pos:end="51:45">"with no free ports"</literal></expr></argument>, <argument pos:start="51:48" pos:end="51:64"><expr pos:start="51:48" pos:end="51:64"><name pos:start="51:48" pos:end="51:64"><name pos:start="51:48" pos:end="51:50">dev</name><operator pos:start="51:51" pos:end="51:52">-&gt;</operator><name pos:start="51:53" pos:end="51:64">product_desc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="53:13" pos:end="53:22">return <expr pos:start="53:20" pos:end="53:21"><operator pos:start="53:20" pos:end="53:20">-</operator><literal type="number" pos:start="53:21" pos:end="53:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:40"><expr pos:start="57:9" pos:end="57:39"><name pos:start="57:9" pos:end="57:12">port</name> <operator pos:start="57:14" pos:end="57:14">=</operator> <call pos:start="57:16" pos:end="57:39"><name pos:start="57:16" pos:end="57:27">QTAILQ_FIRST</name><argument_list pos:start="57:28" pos:end="57:39">(<argument pos:start="57:29" pos:end="57:38"><expr pos:start="57:29" pos:end="57:38"><operator pos:start="57:29" pos:end="57:29">&amp;</operator><name pos:start="57:30" pos:end="57:38"><name pos:start="57:30" pos:end="57:32">bus</name><operator pos:start="57:33" pos:end="57:34">-&gt;</operator><name pos:start="57:35" pos:end="57:38">free</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:49"><expr pos:start="61:5" pos:end="61:48"><call pos:start="61:5" pos:end="61:48"><name pos:start="61:5" pos:end="61:24">trace_usb_port_claim</name><argument_list pos:start="61:25" pos:end="61:48">(<argument pos:start="61:26" pos:end="61:35"><expr pos:start="61:26" pos:end="61:35"><name pos:start="61:26" pos:end="61:35"><name pos:start="61:26" pos:end="61:28">bus</name><operator pos:start="61:29" pos:end="61:30">-&gt;</operator><name pos:start="61:31" pos:end="61:35">busnr</name></name></expr></argument>, <argument pos:start="61:38" pos:end="61:47"><expr pos:start="61:38" pos:end="61:47"><name pos:start="61:38" pos:end="61:47"><name pos:start="61:38" pos:end="61:41">port</name><operator pos:start="61:42" pos:end="61:43">-&gt;</operator><name pos:start="61:44" pos:end="61:47">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:42"><expr pos:start="65:5" pos:end="65:41"><call pos:start="65:5" pos:end="65:41"><name pos:start="65:5" pos:end="65:17">QTAILQ_REMOVE</name><argument_list pos:start="65:18" pos:end="65:41">(<argument pos:start="65:19" pos:end="65:28"><expr pos:start="65:19" pos:end="65:28"><operator pos:start="65:19" pos:end="65:19">&amp;</operator><name pos:start="65:20" pos:end="65:28"><name pos:start="65:20" pos:end="65:22">bus</name><operator pos:start="65:23" pos:end="65:24">-&gt;</operator><name pos:start="65:25" pos:end="65:28">free</name></name></expr></argument>, <argument pos:start="65:31" pos:end="65:34"><expr pos:start="65:31" pos:end="65:34"><name pos:start="65:31" pos:end="65:34">port</name></expr></argument>, <argument pos:start="65:37" pos:end="65:40"><expr pos:start="65:37" pos:end="65:40"><name pos:start="65:37" pos:end="65:40">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:17"><expr pos:start="67:5" pos:end="67:16"><name pos:start="67:5" pos:end="67:14"><name pos:start="67:5" pos:end="67:7">bus</name><operator pos:start="67:8" pos:end="67:9">-&gt;</operator><name pos:start="67:10" pos:end="67:14">nfree</name></name><operator pos:start="67:15" pos:end="67:16">--</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:21"><expr pos:start="71:5" pos:end="71:20"><name pos:start="71:5" pos:end="71:13"><name pos:start="71:5" pos:end="71:7">dev</name><operator pos:start="71:8" pos:end="71:9">-&gt;</operator><name pos:start="71:10" pos:end="71:13">port</name></name> <operator pos:start="71:15" pos:end="71:15">=</operator> <name pos:start="71:17" pos:end="71:20">port</name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:20"><expr pos:start="73:5" pos:end="73:19"><name pos:start="73:5" pos:end="73:13"><name pos:start="73:5" pos:end="73:8">port</name><operator pos:start="73:9" pos:end="73:10">-&gt;</operator><name pos:start="73:11" pos:end="73:13">dev</name></name> <operator pos:start="73:15" pos:end="73:15">=</operator> <name pos:start="73:17" pos:end="73:19">dev</name></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:47"><expr pos:start="77:5" pos:end="77:46"><call pos:start="77:5" pos:end="77:46"><name pos:start="77:5" pos:end="77:22">QTAILQ_INSERT_TAIL</name><argument_list pos:start="77:23" pos:end="77:46">(<argument pos:start="77:24" pos:end="77:33"><expr pos:start="77:24" pos:end="77:33"><operator pos:start="77:24" pos:end="77:24">&amp;</operator><name pos:start="77:25" pos:end="77:33"><name pos:start="77:25" pos:end="77:27">bus</name><operator pos:start="77:28" pos:end="77:29">-&gt;</operator><name pos:start="77:30" pos:end="77:33">used</name></name></expr></argument>, <argument pos:start="77:36" pos:end="77:39"><expr pos:start="77:36" pos:end="77:39"><name pos:start="77:36" pos:end="77:39">port</name></expr></argument>, <argument pos:start="77:42" pos:end="77:45"><expr pos:start="77:42" pos:end="77:45"><name pos:start="77:42" pos:end="77:45">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:17"><expr pos:start="79:5" pos:end="79:16"><name pos:start="79:5" pos:end="79:14"><name pos:start="79:5" pos:end="79:7">bus</name><operator pos:start="79:8" pos:end="79:9">-&gt;</operator><name pos:start="79:10" pos:end="79:14">nused</name></name><operator pos:start="79:15" pos:end="79:16">++</operator></expr>;</expr_stmt>

    <return pos:start="81:5" pos:end="81:13">return <expr pos:start="81:12" pos:end="81:12"><literal type="number" pos:start="81:12" pos:end="81:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
