<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13830.c" pos:tabs="8"><function pos:start="1:1" pos:end="237:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">vp8_decode_frame_header</name><parameter_list pos:start="1:35" pos:end="1:83">(<parameter pos:start="1:36" pos:end="1:48"><decl pos:start="1:36" pos:end="1:48"><type pos:start="1:36" pos:end="1:48"><name pos:start="1:36" pos:end="1:45">VP8Context</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:68"><decl pos:start="1:51" pos:end="1:68"><type pos:start="1:51" pos:end="1:68"><specifier pos:start="1:51" pos:end="1:55">const</specifier> <name pos:start="1:57" pos:end="1:63">uint8_t</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:68">buf</name></decl></parameter>, <parameter pos:start="1:71" pos:end="1:82"><decl pos:start="1:71" pos:end="1:82"><type pos:start="1:71" pos:end="1:82"><name pos:start="1:71" pos:end="1:73">int</name></type> <name pos:start="1:75" pos:end="1:82">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="237:1">{<block_content pos:start="5:5" pos:end="235:13">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">VP56RangeCoder</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">c</name> <init pos:start="5:23" pos:end="5:29">= <expr pos:start="5:25" pos:end="5:29"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:29"><name pos:start="5:26" pos:end="5:26">s</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:29">c</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:19">header_size</name></decl>, <decl pos:start="7:22" pos:end="7:27"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:22" pos:end="7:27">hscale</name></decl>, <decl pos:start="7:30" pos:end="7:35"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:30" pos:end="7:35">vscale</name></decl>, <decl pos:start="7:38" pos:end="7:40"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:38" pos:end="7:40">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">width</name>  <init pos:start="9:16" pos:end="9:32">= <expr pos:start="9:18" pos:end="9:32"><name pos:start="9:18" pos:end="9:32"><name pos:start="9:18" pos:end="9:18">s</name><operator pos:start="9:19" pos:end="9:20">-&gt;</operator><name pos:start="9:21" pos:end="9:25">avctx</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:32">width</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">height</name> <init pos:start="11:16" pos:end="11:33">= <expr pos:start="11:18" pos:end="11:33"><name pos:start="11:18" pos:end="11:33"><name pos:start="11:18" pos:end="11:18">s</name><operator pos:start="11:19" pos:end="11:20">-&gt;</operator><name pos:start="11:21" pos:end="11:25">avctx</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:33">height</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:33"><expr pos:start="15:5" pos:end="15:32"><name pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:15">keyframe</name></name>  <operator pos:start="15:18" pos:end="15:18">=</operator> <operator pos:start="15:20" pos:end="15:20">!</operator><operator pos:start="15:21" pos:end="15:21">(</operator><name pos:start="15:22" pos:end="15:27"><name pos:start="15:22" pos:end="15:24">buf</name><index pos:start="15:25" pos:end="15:27">[<expr pos:start="15:26" pos:end="15:26"><literal type="number" pos:start="15:26" pos:end="15:26">0</literal></expr>]</index></name> <operator pos:start="15:29" pos:end="15:29">&amp;</operator> <literal type="number" pos:start="15:31" pos:end="15:31">1</literal><operator pos:start="15:32" pos:end="15:32">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:36"><expr pos:start="17:5" pos:end="17:35"><name pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:14">profile</name></name>   <operator pos:start="17:18" pos:end="17:18">=</operator>  <operator pos:start="17:21" pos:end="17:21">(</operator><name pos:start="17:22" pos:end="17:27"><name pos:start="17:22" pos:end="17:24">buf</name><index pos:start="17:25" pos:end="17:27">[<expr pos:start="17:26" pos:end="17:26"><literal type="number" pos:start="17:26" pos:end="17:26">0</literal></expr>]</index></name><operator pos:start="17:28" pos:end="17:29">&gt;&gt;</operator><literal type="number" pos:start="17:30" pos:end="17:30">1</literal><operator pos:start="17:31" pos:end="17:31">)</operator> <operator pos:start="17:33" pos:end="17:33">&amp;</operator> <literal type="number" pos:start="17:35" pos:end="17:35">7</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:36"><expr pos:start="19:5" pos:end="19:35"><name pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:16">invisible</name></name> <operator pos:start="19:18" pos:end="19:18">=</operator> <operator pos:start="19:20" pos:end="19:20">!</operator><operator pos:start="19:21" pos:end="19:21">(</operator><name pos:start="19:22" pos:end="19:27"><name pos:start="19:22" pos:end="19:24">buf</name><index pos:start="19:25" pos:end="19:27">[<expr pos:start="19:26" pos:end="19:26"><literal type="number" pos:start="19:26" pos:end="19:26">0</literal></expr>]</index></name> <operator pos:start="19:29" pos:end="19:29">&amp;</operator> <literal type="number" pos:start="19:31" pos:end="19:34">0x10</literal><operator pos:start="19:35" pos:end="19:35">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:37"><expr pos:start="21:5" pos:end="21:36"><name pos:start="21:5" pos:end="21:15">header_size</name>  <operator pos:start="21:18" pos:end="21:18">=</operator> <call pos:start="21:20" pos:end="21:31"><name pos:start="21:20" pos:end="21:26">AV_RL24</name><argument_list pos:start="21:27" pos:end="21:31">(<argument pos:start="21:28" pos:end="21:30"><expr pos:start="21:28" pos:end="21:30"><name pos:start="21:28" pos:end="21:30">buf</name></expr></argument>)</argument_list></call> <operator pos:start="21:33" pos:end="21:34">&gt;&gt;</operator> <literal type="number" pos:start="21:36" pos:end="21:36">5</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:18"><expr pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:7">buf</name>      <operator pos:start="23:14" pos:end="23:15">+=</operator> <literal type="number" pos:start="23:17" pos:end="23:17">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:18"><expr pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:12">buf_size</name> <operator pos:start="25:14" pos:end="25:15">-=</operator> <literal type="number" pos:start="25:17" pos:end="25:17">3</literal></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="31:77"><if pos:start="29:5" pos:end="31:77">if <condition pos:start="29:8" pos:end="29:23">(<expr pos:start="29:9" pos:end="29:22"><name pos:start="29:9" pos:end="29:18"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:18">profile</name></name> <operator pos:start="29:20" pos:end="29:20">&gt;</operator> <literal type="number" pos:start="29:22" pos:end="29:22">3</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:77"><block_content pos:start="31:9" pos:end="31:77">

        <expr_stmt pos:start="31:9" pos:end="31:77"><expr pos:start="31:9" pos:end="31:76"><call pos:start="31:9" pos:end="31:76"><name pos:start="31:9" pos:end="31:14">av_log</name><argument_list pos:start="31:15" pos:end="31:76">(<argument pos:start="31:16" pos:end="31:23"><expr pos:start="31:16" pos:end="31:23"><name pos:start="31:16" pos:end="31:23"><name pos:start="31:16" pos:end="31:16">s</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:23">avctx</name></name></expr></argument>, <argument pos:start="31:26" pos:end="31:39"><expr pos:start="31:26" pos:end="31:39"><name pos:start="31:26" pos:end="31:39">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="31:42" pos:end="31:63"><expr pos:start="31:42" pos:end="31:63"><literal type="string" pos:start="31:42" pos:end="31:63">"Unknown profile %d\n"</literal></expr></argument>, <argument pos:start="31:66" pos:end="31:75"><expr pos:start="31:66" pos:end="31:75"><name pos:start="31:66" pos:end="31:75"><name pos:start="31:66" pos:end="31:66">s</name><operator pos:start="31:67" pos:end="31:68">-&gt;</operator><name pos:start="31:69" pos:end="31:75">profile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="45:42"><if pos:start="35:5" pos:end="39:42">if <condition pos:start="35:8" pos:end="35:20">(<expr pos:start="35:9" pos:end="35:19"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:19"><name pos:start="35:10" pos:end="35:10">s</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:19">profile</name></name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="39:42"><block_content pos:start="37:9" pos:end="39:42">

        <expr_stmt pos:start="37:9" pos:end="39:42"><expr pos:start="37:9" pos:end="39:41"><call pos:start="37:9" pos:end="39:41"><name pos:start="37:9" pos:end="37:14">memcpy</name><argument_list pos:start="37:15" pos:end="39:41">(<argument pos:start="37:16" pos:end="37:32"><expr pos:start="37:16" pos:end="37:32"><name pos:start="37:16" pos:end="37:32"><name pos:start="37:16" pos:end="37:16">s</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:32">put_pixels_tab</name></name></expr></argument>, <argument pos:start="37:35" pos:end="37:67"><expr pos:start="37:35" pos:end="37:67"><name pos:start="37:35" pos:end="37:67"><name pos:start="37:35" pos:end="37:35">s</name><operator pos:start="37:36" pos:end="37:37">-&gt;</operator><name pos:start="37:38" pos:end="37:43">vp8dsp</name><operator pos:start="37:44" pos:end="37:44">.</operator><name pos:start="37:45" pos:end="37:67">put_vp8_epel_pixels_tab</name></name></expr></argument>,

               <argument pos:start="39:16" pos:end="39:40"><expr pos:start="39:16" pos:end="39:40"><sizeof pos:start="39:16" pos:end="39:40">sizeof<argument_list pos:start="39:22" pos:end="39:40">(<argument pos:start="39:23" pos:end="39:39"><expr pos:start="39:23" pos:end="39:39"><name pos:start="39:23" pos:end="39:39"><name pos:start="39:23" pos:end="39:23">s</name><operator pos:start="39:24" pos:end="39:25">-&gt;</operator><name pos:start="39:26" pos:end="39:39">put_pixels_tab</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="41:5" pos:end="45:42">else<block type="pseudo" pos:start="43:9" pos:end="45:42"><block_content pos:start="43:9" pos:end="45:42">    <comment type="line" pos:start="41:13" pos:end="41:70">// profile 1-3 use bilinear, 4+ aren't defined so whatever</comment>

        <expr_stmt pos:start="43:9" pos:end="45:42"><expr pos:start="43:9" pos:end="45:41"><call pos:start="43:9" pos:end="45:41"><name pos:start="43:9" pos:end="43:14">memcpy</name><argument_list pos:start="43:15" pos:end="45:41">(<argument pos:start="43:16" pos:end="43:32"><expr pos:start="43:16" pos:end="43:32"><name pos:start="43:16" pos:end="43:32"><name pos:start="43:16" pos:end="43:16">s</name><operator pos:start="43:17" pos:end="43:18">-&gt;</operator><name pos:start="43:19" pos:end="43:32">put_pixels_tab</name></name></expr></argument>, <argument pos:start="43:35" pos:end="43:71"><expr pos:start="43:35" pos:end="43:71"><name pos:start="43:35" pos:end="43:71"><name pos:start="43:35" pos:end="43:35">s</name><operator pos:start="43:36" pos:end="43:37">-&gt;</operator><name pos:start="43:38" pos:end="43:43">vp8dsp</name><operator pos:start="43:44" pos:end="43:44">.</operator><name pos:start="43:45" pos:end="43:71">put_vp8_bilinear_pixels_tab</name></name></expr></argument>,

               <argument pos:start="45:16" pos:end="45:40"><expr pos:start="45:16" pos:end="45:40"><sizeof pos:start="45:16" pos:end="45:40">sizeof<argument_list pos:start="45:22" pos:end="45:40">(<argument pos:start="45:23" pos:end="45:39"><expr pos:start="45:23" pos:end="45:39"><name pos:start="45:23" pos:end="45:39"><name pos:start="45:23" pos:end="45:23">s</name><operator pos:start="45:24" pos:end="45:25">-&gt;</operator><name pos:start="45:26" pos:end="45:39">put_pixels_tab</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:49">(<expr pos:start="49:9" pos:end="49:48"><name pos:start="49:9" pos:end="49:19">header_size</name> <operator pos:start="49:21" pos:end="49:21">&gt;</operator> <name pos:start="49:23" pos:end="49:30">buf_size</name> <operator pos:start="49:32" pos:end="49:32">-</operator> <literal type="number" pos:start="49:34" pos:end="49:34">7</literal> <operator pos:start="49:36" pos:end="49:36">*</operator> <name pos:start="49:38" pos:end="49:48"><name pos:start="49:38" pos:end="49:38">s</name><operator pos:start="49:39" pos:end="49:40">-&gt;</operator><name pos:start="49:41" pos:end="49:48">keyframe</name></name></expr>)</condition> <block pos:start="49:51" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:35">

        <expr_stmt pos:start="51:9" pos:end="51:82"><expr pos:start="51:9" pos:end="51:81"><call pos:start="51:9" pos:end="51:81"><name pos:start="51:9" pos:end="51:14">av_log</name><argument_list pos:start="51:15" pos:end="51:81">(<argument pos:start="51:16" pos:end="51:23"><expr pos:start="51:16" pos:end="51:23"><name pos:start="51:16" pos:end="51:23"><name pos:start="51:16" pos:end="51:16">s</name><operator pos:start="51:17" pos:end="51:18">-&gt;</operator><name pos:start="51:19" pos:end="51:23">avctx</name></name></expr></argument>, <argument pos:start="51:26" pos:end="51:37"><expr pos:start="51:26" pos:end="51:37"><name pos:start="51:26" pos:end="51:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="51:40" pos:end="51:80"><expr pos:start="51:40" pos:end="51:80"><literal type="string" pos:start="51:40" pos:end="51:80">"Header size larger than data provided\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:35">return <expr pos:start="53:16" pos:end="53:34"><name pos:start="53:16" pos:end="53:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="59:5" pos:end="111:5"><if pos:start="59:5" pos:end="111:5">if <condition pos:start="59:8" pos:end="59:20">(<expr pos:start="59:9" pos:end="59:19"><name pos:start="59:9" pos:end="59:19"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:19">keyframe</name></name></expr>)</condition> <block pos:start="59:22" pos:end="111:5">{<block_content pos:start="61:9" pos:end="109:53">

        <if_stmt pos:start="61:9" pos:end="69:9"><if pos:start="61:9" pos:end="69:9">if <condition pos:start="61:12" pos:end="61:37">(<expr pos:start="61:13" pos:end="61:36"><call pos:start="61:13" pos:end="61:24"><name pos:start="61:13" pos:end="61:19">AV_RL24</name><argument_list pos:start="61:20" pos:end="61:24">(<argument pos:start="61:21" pos:end="61:23"><expr pos:start="61:21" pos:end="61:23"><name pos:start="61:21" pos:end="61:23">buf</name></expr></argument>)</argument_list></call> <operator pos:start="61:26" pos:end="61:27">!=</operator> <literal type="number" pos:start="61:29" pos:end="61:36">0x2a019d</literal></expr>)</condition> <block pos:start="61:39" pos:end="69:9">{<block_content pos:start="63:13" pos:end="67:39">

            <expr_stmt pos:start="63:13" pos:end="65:62"><expr pos:start="63:13" pos:end="65:61"><call pos:start="63:13" pos:end="65:61"><name pos:start="63:13" pos:end="63:18">av_log</name><argument_list pos:start="63:19" pos:end="65:61">(<argument pos:start="63:20" pos:end="63:27"><expr pos:start="63:20" pos:end="63:27"><name pos:start="63:20" pos:end="63:27"><name pos:start="63:20" pos:end="63:20">s</name><operator pos:start="63:21" pos:end="63:22">-&gt;</operator><name pos:start="63:23" pos:end="63:27">avctx</name></name></expr></argument>, <argument pos:start="63:30" pos:end="63:41"><expr pos:start="63:30" pos:end="63:41"><name pos:start="63:30" pos:end="63:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="65:20" pos:end="65:46"><expr pos:start="65:20" pos:end="65:46"><literal type="string" pos:start="65:20" pos:end="65:46">"Invalid start code 0x%x\n"</literal></expr></argument>, <argument pos:start="65:49" pos:end="65:60"><expr pos:start="65:49" pos:end="65:60"><call pos:start="65:49" pos:end="65:60"><name pos:start="65:49" pos:end="65:55">AV_RL24</name><argument_list pos:start="65:56" pos:end="65:60">(<argument pos:start="65:57" pos:end="65:59"><expr pos:start="65:57" pos:end="65:59"><name pos:start="65:57" pos:end="65:59">buf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="67:13" pos:end="67:39">return <expr pos:start="67:20" pos:end="67:38"><name pos:start="67:20" pos:end="67:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:46"><expr pos:start="71:9" pos:end="71:45"><name pos:start="71:9" pos:end="71:13">width</name>     <operator pos:start="71:19" pos:end="71:19">=</operator> <call pos:start="71:21" pos:end="71:36"><name pos:start="71:21" pos:end="71:27">AV_RL16</name><argument_list pos:start="71:28" pos:end="71:36">(<argument pos:start="71:29" pos:end="71:35"><expr pos:start="71:29" pos:end="71:35"><name pos:start="71:29" pos:end="71:31">buf</name> <operator pos:start="71:33" pos:end="71:33">+</operator> <literal type="number" pos:start="71:35" pos:end="71:35">3</literal></expr></argument>)</argument_list></call> <operator pos:start="71:38" pos:end="71:38">&amp;</operator> <literal type="number" pos:start="71:40" pos:end="71:45">0x3fff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:46"><expr pos:start="73:9" pos:end="73:45"><name pos:start="73:9" pos:end="73:14">height</name>    <operator pos:start="73:19" pos:end="73:19">=</operator> <call pos:start="73:21" pos:end="73:36"><name pos:start="73:21" pos:end="73:27">AV_RL16</name><argument_list pos:start="73:28" pos:end="73:36">(<argument pos:start="73:29" pos:end="73:35"><expr pos:start="73:29" pos:end="73:35"><name pos:start="73:29" pos:end="73:31">buf</name> <operator pos:start="73:33" pos:end="73:33">+</operator> <literal type="number" pos:start="73:35" pos:end="73:35">5</literal></expr></argument>)</argument_list></call> <operator pos:start="73:38" pos:end="73:38">&amp;</operator> <literal type="number" pos:start="73:40" pos:end="73:45">0x3fff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:32"><expr pos:start="75:9" pos:end="75:31"><name pos:start="75:9" pos:end="75:14">hscale</name>    <operator pos:start="75:19" pos:end="75:19">=</operator> <name pos:start="75:21" pos:end="75:26"><name pos:start="75:21" pos:end="75:23">buf</name><index pos:start="75:24" pos:end="75:26">[<expr pos:start="75:25" pos:end="75:25"><literal type="number" pos:start="75:25" pos:end="75:25">4</literal></expr>]</index></name> <operator pos:start="75:28" pos:end="75:29">&gt;&gt;</operator> <literal type="number" pos:start="75:31" pos:end="75:31">6</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:32"><expr pos:start="77:9" pos:end="77:31"><name pos:start="77:9" pos:end="77:14">vscale</name>    <operator pos:start="77:19" pos:end="77:19">=</operator> <name pos:start="77:21" pos:end="77:26"><name pos:start="77:21" pos:end="77:23">buf</name><index pos:start="77:24" pos:end="77:26">[<expr pos:start="77:25" pos:end="77:25"><literal type="number" pos:start="77:25" pos:end="77:25">6</literal></expr>]</index></name> <operator pos:start="77:28" pos:end="77:29">&gt;&gt;</operator> <literal type="number" pos:start="77:31" pos:end="77:31">6</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:22"><expr pos:start="79:9" pos:end="79:21"><name pos:start="79:9" pos:end="79:11">buf</name>      <operator pos:start="79:18" pos:end="79:19">+=</operator> <literal type="number" pos:start="79:21" pos:end="79:21">7</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:22"><expr pos:start="81:9" pos:end="81:21"><name pos:start="81:9" pos:end="81:16">buf_size</name> <operator pos:start="81:18" pos:end="81:19">-=</operator> <literal type="number" pos:start="81:21" pos:end="81:21">7</literal></expr>;</expr_stmt>



        <if_stmt pos:start="85:9" pos:end="87:57"><if pos:start="85:9" pos:end="87:57">if <condition pos:start="85:12" pos:end="85:29">(<expr pos:start="85:13" pos:end="85:28"><name pos:start="85:13" pos:end="85:18">hscale</name> <operator pos:start="85:20" pos:end="85:21">||</operator> <name pos:start="85:23" pos:end="85:28">vscale</name></expr>)</condition><block type="pseudo" pos:start="87:13" pos:end="87:57"><block_content pos:start="87:13" pos:end="87:57">

            <expr_stmt pos:start="87:13" pos:end="87:57"><expr pos:start="87:13" pos:end="87:56"><call pos:start="87:13" pos:end="87:56"><name pos:start="87:13" pos:end="87:33">avpriv_request_sample</name><argument_list pos:start="87:34" pos:end="87:56">(<argument pos:start="87:35" pos:end="87:42"><expr pos:start="87:35" pos:end="87:42"><name pos:start="87:35" pos:end="87:42"><name pos:start="87:35" pos:end="87:35">s</name><operator pos:start="87:36" pos:end="87:37">-&gt;</operator><name pos:start="87:38" pos:end="87:42">avctx</name></name></expr></argument>, <argument pos:start="87:45" pos:end="87:55"><expr pos:start="87:45" pos:end="87:55"><literal type="string" pos:start="87:45" pos:end="87:55">"Upscaling"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="91:9" pos:end="91:65"><expr pos:start="91:9" pos:end="91:64"><name pos:start="91:9" pos:end="91:24"><name pos:start="91:9" pos:end="91:9">s</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:24">update_golden</name></name> <operator pos:start="91:26" pos:end="91:26">=</operator> <name pos:start="91:28" pos:end="91:43"><name pos:start="91:28" pos:end="91:28">s</name><operator pos:start="91:29" pos:end="91:30">-&gt;</operator><name pos:start="91:31" pos:end="91:43">update_altref</name></name> <operator pos:start="91:45" pos:end="91:45">=</operator> <name pos:start="91:47" pos:end="91:64">VP56_FRAME_CURRENT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:41"><expr pos:start="93:9" pos:end="93:40"><call pos:start="93:9" pos:end="93:40"><name pos:start="93:9" pos:end="93:37">vp78_reset_probability_tables</name><argument_list pos:start="93:38" pos:end="93:40">(<argument pos:start="93:39" pos:end="93:39"><expr pos:start="93:39" pos:end="93:39"><name pos:start="93:39" pos:end="93:39">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="97:43"><expr pos:start="95:9" pos:end="97:42"><call pos:start="95:9" pos:end="97:42"><name pos:start="95:9" pos:end="95:14">memcpy</name><argument_list pos:start="95:15" pos:end="97:42">(<argument pos:start="95:16" pos:end="95:33"><expr pos:start="95:16" pos:end="95:33"><name pos:start="95:16" pos:end="95:33"><name pos:start="95:16" pos:end="95:16">s</name><operator pos:start="95:17" pos:end="95:18">-&gt;</operator><name pos:start="95:19" pos:end="95:22">prob</name><operator pos:start="95:23" pos:end="95:24">-&gt;</operator><name pos:start="95:25" pos:end="95:33">pred16x16</name></name></expr></argument>, <argument pos:start="95:36" pos:end="95:59"><expr pos:start="95:36" pos:end="95:59"><name pos:start="95:36" pos:end="95:59">vp8_pred16x16_prob_inter</name></expr></argument>,

               <argument pos:start="97:16" pos:end="97:41"><expr pos:start="97:16" pos:end="97:41"><sizeof pos:start="97:16" pos:end="97:41">sizeof<argument_list pos:start="97:22" pos:end="97:41">(<argument pos:start="97:23" pos:end="97:40"><expr pos:start="97:23" pos:end="97:40"><name pos:start="97:23" pos:end="97:40"><name pos:start="97:23" pos:end="97:23">s</name><operator pos:start="97:24" pos:end="97:25">-&gt;</operator><name pos:start="97:26" pos:end="97:29">prob</name><operator pos:start="97:30" pos:end="97:31">-&gt;</operator><name pos:start="97:32" pos:end="97:40">pred16x16</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="101:42"><expr pos:start="99:9" pos:end="101:41"><call pos:start="99:9" pos:end="101:41"><name pos:start="99:9" pos:end="99:14">memcpy</name><argument_list pos:start="99:15" pos:end="101:41">(<argument pos:start="99:16" pos:end="99:32"><expr pos:start="99:16" pos:end="99:32"><name pos:start="99:16" pos:end="99:32"><name pos:start="99:16" pos:end="99:16">s</name><operator pos:start="99:17" pos:end="99:18">-&gt;</operator><name pos:start="99:19" pos:end="99:22">prob</name><operator pos:start="99:23" pos:end="99:24">-&gt;</operator><name pos:start="99:25" pos:end="99:32">pred8x8c</name></name></expr></argument>, <argument pos:start="99:35" pos:end="99:57"><expr pos:start="99:35" pos:end="99:57"><name pos:start="99:35" pos:end="99:57">vp8_pred8x8c_prob_inter</name></expr></argument>,

               <argument pos:start="101:16" pos:end="101:40"><expr pos:start="101:16" pos:end="101:40"><sizeof pos:start="101:16" pos:end="101:40">sizeof<argument_list pos:start="101:22" pos:end="101:40">(<argument pos:start="101:23" pos:end="101:39"><expr pos:start="101:23" pos:end="101:39"><name pos:start="101:23" pos:end="101:39"><name pos:start="101:23" pos:end="101:23">s</name><operator pos:start="101:24" pos:end="101:25">-&gt;</operator><name pos:start="101:26" pos:end="101:29">prob</name><operator pos:start="101:30" pos:end="101:31">-&gt;</operator><name pos:start="101:32" pos:end="101:39">pred8x8c</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="105:37"><expr pos:start="103:9" pos:end="105:36"><call pos:start="103:9" pos:end="105:36"><name pos:start="103:9" pos:end="103:14">memcpy</name><argument_list pos:start="103:15" pos:end="105:36">(<argument pos:start="103:16" pos:end="103:27"><expr pos:start="103:16" pos:end="103:27"><name pos:start="103:16" pos:end="103:27"><name pos:start="103:16" pos:end="103:16">s</name><operator pos:start="103:17" pos:end="103:18">-&gt;</operator><name pos:start="103:19" pos:end="103:22">prob</name><operator pos:start="103:23" pos:end="103:24">-&gt;</operator><name pos:start="103:25" pos:end="103:27">mvc</name></name></expr></argument>, <argument pos:start="103:30" pos:end="103:48"><expr pos:start="103:30" pos:end="103:48"><name pos:start="103:30" pos:end="103:48">vp8_mv_default_prob</name></expr></argument>,

               <argument pos:start="105:16" pos:end="105:35"><expr pos:start="105:16" pos:end="105:35"><sizeof pos:start="105:16" pos:end="105:35">sizeof<argument_list pos:start="105:22" pos:end="105:35">(<argument pos:start="105:23" pos:end="105:34"><expr pos:start="105:23" pos:end="105:34"><name pos:start="105:23" pos:end="105:34"><name pos:start="105:23" pos:end="105:23">s</name><operator pos:start="105:24" pos:end="105:25">-&gt;</operator><name pos:start="105:26" pos:end="105:29">prob</name><operator pos:start="105:30" pos:end="105:31">-&gt;</operator><name pos:start="105:32" pos:end="105:34">mvc</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:61"><expr pos:start="107:9" pos:end="107:60"><call pos:start="107:9" pos:end="107:60"><name pos:start="107:9" pos:end="107:14">memset</name><argument_list pos:start="107:15" pos:end="107:60">(<argument pos:start="107:16" pos:end="107:31"><expr pos:start="107:16" pos:end="107:31"><operator pos:start="107:16" pos:end="107:16">&amp;</operator><name pos:start="107:17" pos:end="107:31"><name pos:start="107:17" pos:end="107:17">s</name><operator pos:start="107:18" pos:end="107:19">-&gt;</operator><name pos:start="107:20" pos:end="107:31">segmentation</name></name></expr></argument>, <argument pos:start="107:34" pos:end="107:34"><expr pos:start="107:34" pos:end="107:34"><literal type="number" pos:start="107:34" pos:end="107:34">0</literal></expr></argument>, <argument pos:start="107:37" pos:end="107:59"><expr pos:start="107:37" pos:end="107:59"><sizeof pos:start="107:37" pos:end="107:59">sizeof<argument_list pos:start="107:43" pos:end="107:59">(<argument pos:start="107:44" pos:end="107:58"><expr pos:start="107:44" pos:end="107:58"><name pos:start="107:44" pos:end="107:58"><name pos:start="107:44" pos:end="107:44">s</name><operator pos:start="107:45" pos:end="107:46">-&gt;</operator><name pos:start="107:47" pos:end="107:58">segmentation</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:53"><expr pos:start="109:9" pos:end="109:52"><call pos:start="109:9" pos:end="109:52"><name pos:start="109:9" pos:end="109:14">memset</name><argument_list pos:start="109:15" pos:end="109:52">(<argument pos:start="109:16" pos:end="109:27"><expr pos:start="109:16" pos:end="109:27"><operator pos:start="109:16" pos:end="109:16">&amp;</operator><name pos:start="109:17" pos:end="109:27"><name pos:start="109:17" pos:end="109:17">s</name><operator pos:start="109:18" pos:end="109:19">-&gt;</operator><name pos:start="109:20" pos:end="109:27">lf_delta</name></name></expr></argument>, <argument pos:start="109:30" pos:end="109:30"><expr pos:start="109:30" pos:end="109:30"><literal type="number" pos:start="109:30" pos:end="109:30">0</literal></expr></argument>, <argument pos:start="109:33" pos:end="109:51"><expr pos:start="109:33" pos:end="109:51"><sizeof pos:start="109:33" pos:end="109:51">sizeof<argument_list pos:start="109:39" pos:end="109:51">(<argument pos:start="109:40" pos:end="109:50"><expr pos:start="109:40" pos:end="109:50"><name pos:start="109:40" pos:end="109:50"><name pos:start="109:40" pos:end="109:40">s</name><operator pos:start="109:41" pos:end="109:42">-&gt;</operator><name pos:start="109:43" pos:end="109:50">lf_delta</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="115:5" pos:end="115:52"><expr pos:start="115:5" pos:end="115:51"><call pos:start="115:5" pos:end="115:51"><name pos:start="115:5" pos:end="115:30">ff_vp56_init_range_decoder</name><argument_list pos:start="115:31" pos:end="115:51">(<argument pos:start="115:32" pos:end="115:32"><expr pos:start="115:32" pos:end="115:32"><name pos:start="115:32" pos:end="115:32">c</name></expr></argument>, <argument pos:start="115:35" pos:end="115:37"><expr pos:start="115:35" pos:end="115:37"><name pos:start="115:35" pos:end="115:37">buf</name></expr></argument>, <argument pos:start="115:40" pos:end="115:50"><expr pos:start="115:40" pos:end="115:50"><name pos:start="115:40" pos:end="115:50">header_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:28"><expr pos:start="117:5" pos:end="117:27"><name pos:start="117:5" pos:end="117:7">buf</name>      <operator pos:start="117:14" pos:end="117:15">+=</operator> <name pos:start="117:17" pos:end="117:27">header_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:28"><expr pos:start="119:5" pos:end="119:27"><name pos:start="119:5" pos:end="119:12">buf_size</name> <operator pos:start="119:14" pos:end="119:15">-=</operator> <name pos:start="119:17" pos:end="119:27">header_size</name></expr>;</expr_stmt>



    <if_stmt pos:start="123:5" pos:end="131:5"><if pos:start="123:5" pos:end="131:5">if <condition pos:start="123:8" pos:end="123:20">(<expr pos:start="123:9" pos:end="123:19"><name pos:start="123:9" pos:end="123:19"><name pos:start="123:9" pos:end="123:9">s</name><operator pos:start="123:10" pos:end="123:11">-&gt;</operator><name pos:start="123:12" pos:end="123:19">keyframe</name></name></expr>)</condition> <block pos:start="123:22" pos:end="131:5">{<block_content pos:start="125:9" pos:end="129:23">

        <if_stmt pos:start="125:9" pos:end="127:73"><if pos:start="125:9" pos:end="127:73">if <condition pos:start="125:12" pos:end="125:27">(<expr pos:start="125:13" pos:end="125:26"><call pos:start="125:13" pos:end="125:26"><name pos:start="125:13" pos:end="125:23">vp8_rac_get</name><argument_list pos:start="125:24" pos:end="125:26">(<argument pos:start="125:25" pos:end="125:25"><expr pos:start="125:25" pos:end="125:25"><name pos:start="125:25" pos:end="125:25">c</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="127:13" pos:end="127:73"><block_content pos:start="127:13" pos:end="127:73">

            <expr_stmt pos:start="127:13" pos:end="127:73"><expr pos:start="127:13" pos:end="127:72"><call pos:start="127:13" pos:end="127:72"><name pos:start="127:13" pos:end="127:18">av_log</name><argument_list pos:start="127:19" pos:end="127:72">(<argument pos:start="127:20" pos:end="127:27"><expr pos:start="127:20" pos:end="127:27"><name pos:start="127:20" pos:end="127:27"><name pos:start="127:20" pos:end="127:20">s</name><operator pos:start="127:21" pos:end="127:22">-&gt;</operator><name pos:start="127:23" pos:end="127:27">avctx</name></name></expr></argument>, <argument pos:start="127:30" pos:end="127:43"><expr pos:start="127:30" pos:end="127:43"><name pos:start="127:30" pos:end="127:43">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="127:46" pos:end="127:71"><expr pos:start="127:46" pos:end="127:71"><literal type="string" pos:start="127:46" pos:end="127:71">"Unspecified colorspace\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:23"><expr pos:start="129:9" pos:end="129:22"><call pos:start="129:9" pos:end="129:22"><name pos:start="129:9" pos:end="129:19">vp8_rac_get</name><argument_list pos:start="129:20" pos:end="129:22">(<argument pos:start="129:21" pos:end="129:21"><expr pos:start="129:21" pos:end="129:21"><name pos:start="129:21" pos:end="129:21">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="129:25" pos:end="129:72">// whether we can skip clamping in dsp functions</comment>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="135:5" pos:end="141:39"><if pos:start="135:5" pos:end="137:30">if <condition pos:start="135:8" pos:end="135:51">(<expr pos:start="135:9" pos:end="135:50"><operator pos:start="135:9" pos:end="135:9">(</operator><name pos:start="135:10" pos:end="135:32"><name pos:start="135:10" pos:end="135:10">s</name><operator pos:start="135:11" pos:end="135:12">-&gt;</operator><name pos:start="135:13" pos:end="135:24">segmentation</name><operator pos:start="135:25" pos:end="135:25">.</operator><name pos:start="135:26" pos:end="135:32">enabled</name></name> <operator pos:start="135:34" pos:end="135:34">=</operator> <call pos:start="135:36" pos:end="135:49"><name pos:start="135:36" pos:end="135:46">vp8_rac_get</name><argument_list pos:start="135:47" pos:end="135:49">(<argument pos:start="135:48" pos:end="135:48"><expr pos:start="135:48" pos:end="135:48"><name pos:start="135:48" pos:end="135:48">c</name></expr></argument>)</argument_list></call><operator pos:start="135:50" pos:end="135:50">)</operator></expr>)</condition><block type="pseudo" pos:start="137:9" pos:end="137:30"><block_content pos:start="137:9" pos:end="137:30">

        <expr_stmt pos:start="137:9" pos:end="137:30"><expr pos:start="137:9" pos:end="137:29"><call pos:start="137:9" pos:end="137:29"><name pos:start="137:9" pos:end="137:26">parse_segment_info</name><argument_list pos:start="137:27" pos:end="137:29">(<argument pos:start="137:28" pos:end="137:28"><expr pos:start="137:28" pos:end="137:28"><name pos:start="137:28" pos:end="137:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="139:5" pos:end="141:39">else<block type="pseudo" pos:start="141:9" pos:end="141:39"><block_content pos:start="141:9" pos:end="141:39">

        <expr_stmt pos:start="141:9" pos:end="141:39"><expr pos:start="141:9" pos:end="141:38"><name pos:start="141:9" pos:end="141:34"><name pos:start="141:9" pos:end="141:9">s</name><operator pos:start="141:10" pos:end="141:11">-&gt;</operator><name pos:start="141:12" pos:end="141:23">segmentation</name><operator pos:start="141:24" pos:end="141:24">.</operator><name pos:start="141:25" pos:end="141:34">update_map</name></name> <operator pos:start="141:36" pos:end="141:36">=</operator> <literal type="number" pos:start="141:38" pos:end="141:38">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="line" pos:start="141:41" pos:end="141:82">// FIXME: move this to some init function?</comment>



    <expr_stmt pos:start="145:5" pos:end="145:41"><expr pos:start="145:5" pos:end="145:40"><name pos:start="145:5" pos:end="145:20"><name pos:start="145:5" pos:end="145:5">s</name><operator pos:start="145:6" pos:end="145:7">-&gt;</operator><name pos:start="145:8" pos:end="145:13">filter</name><operator pos:start="145:14" pos:end="145:14">.</operator><name pos:start="145:15" pos:end="145:20">simple</name></name>    <operator pos:start="145:25" pos:end="145:25">=</operator> <call pos:start="145:27" pos:end="145:40"><name pos:start="145:27" pos:end="145:37">vp8_rac_get</name><argument_list pos:start="145:38" pos:end="145:40">(<argument pos:start="145:39" pos:end="145:39"><expr pos:start="145:39" pos:end="145:39"><name pos:start="145:39" pos:end="145:39">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:49"><expr pos:start="147:5" pos:end="147:48"><name pos:start="147:5" pos:end="147:19"><name pos:start="147:5" pos:end="147:5">s</name><operator pos:start="147:6" pos:end="147:7">-&gt;</operator><name pos:start="147:8" pos:end="147:13">filter</name><operator pos:start="147:14" pos:end="147:14">.</operator><name pos:start="147:15" pos:end="147:19">level</name></name>     <operator pos:start="147:25" pos:end="147:25">=</operator> <call pos:start="147:27" pos:end="147:48"><name pos:start="147:27" pos:end="147:42">vp8_rac_get_uint</name><argument_list pos:start="147:43" pos:end="147:48">(<argument pos:start="147:44" pos:end="147:44"><expr pos:start="147:44" pos:end="147:44"><name pos:start="147:44" pos:end="147:44">c</name></expr></argument>, <argument pos:start="147:47" pos:end="147:47"><expr pos:start="147:47" pos:end="147:47"><literal type="number" pos:start="147:47" pos:end="147:47">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:49"><expr pos:start="149:5" pos:end="149:48"><name pos:start="149:5" pos:end="149:23"><name pos:start="149:5" pos:end="149:5">s</name><operator pos:start="149:6" pos:end="149:7">-&gt;</operator><name pos:start="149:8" pos:end="149:13">filter</name><operator pos:start="149:14" pos:end="149:14">.</operator><name pos:start="149:15" pos:end="149:23">sharpness</name></name> <operator pos:start="149:25" pos:end="149:25">=</operator> <call pos:start="149:27" pos:end="149:48"><name pos:start="149:27" pos:end="149:42">vp8_rac_get_uint</name><argument_list pos:start="149:43" pos:end="149:48">(<argument pos:start="149:44" pos:end="149:44"><expr pos:start="149:44" pos:end="149:44"><name pos:start="149:44" pos:end="149:44">c</name></expr></argument>, <argument pos:start="149:47" pos:end="149:47"><expr pos:start="149:47" pos:end="149:47"><literal type="number" pos:start="149:47" pos:end="149:47">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="153:5" pos:end="157:32"><if pos:start="153:5" pos:end="157:32">if <condition pos:start="153:8" pos:end="153:47">(<expr pos:start="153:9" pos:end="153:46"><operator pos:start="153:9" pos:end="153:9">(</operator><name pos:start="153:10" pos:end="153:28"><name pos:start="153:10" pos:end="153:10">s</name><operator pos:start="153:11" pos:end="153:12">-&gt;</operator><name pos:start="153:13" pos:end="153:20">lf_delta</name><operator pos:start="153:21" pos:end="153:21">.</operator><name pos:start="153:22" pos:end="153:28">enabled</name></name> <operator pos:start="153:30" pos:end="153:30">=</operator> <call pos:start="153:32" pos:end="153:45"><name pos:start="153:32" pos:end="153:42">vp8_rac_get</name><argument_list pos:start="153:43" pos:end="153:45">(<argument pos:start="153:44" pos:end="153:44"><expr pos:start="153:44" pos:end="153:44"><name pos:start="153:44" pos:end="153:44">c</name></expr></argument>)</argument_list></call><operator pos:start="153:46" pos:end="153:46">)</operator></expr>)</condition><block type="pseudo" pos:start="155:9" pos:end="157:32"><block_content pos:start="155:9" pos:end="157:32">

        <if_stmt pos:start="155:9" pos:end="157:32"><if pos:start="155:9" pos:end="157:32">if <condition pos:start="155:12" pos:end="155:27">(<expr pos:start="155:13" pos:end="155:26"><call pos:start="155:13" pos:end="155:26"><name pos:start="155:13" pos:end="155:23">vp8_rac_get</name><argument_list pos:start="155:24" pos:end="155:26">(<argument pos:start="155:25" pos:end="155:25"><expr pos:start="155:25" pos:end="155:25"><name pos:start="155:25" pos:end="155:25">c</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="157:13" pos:end="157:32"><block_content pos:start="157:13" pos:end="157:32">

            <expr_stmt pos:start="157:13" pos:end="157:32"><expr pos:start="157:13" pos:end="157:31"><call pos:start="157:13" pos:end="157:31"><name pos:start="157:13" pos:end="157:28">update_lf_deltas</name><argument_list pos:start="157:29" pos:end="157:31">(<argument pos:start="157:30" pos:end="157:30"><expr pos:start="157:30" pos:end="157:30"><name pos:start="157:30" pos:end="157:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="161:5" pos:end="167:5"><if pos:start="161:5" pos:end="167:5">if <condition pos:start="161:8" pos:end="161:43">(<expr pos:start="161:9" pos:end="161:42"><call pos:start="161:9" pos:end="161:42"><name pos:start="161:9" pos:end="161:24">setup_partitions</name><argument_list pos:start="161:25" pos:end="161:42">(<argument pos:start="161:26" pos:end="161:26"><expr pos:start="161:26" pos:end="161:26"><name pos:start="161:26" pos:end="161:26">s</name></expr></argument>, <argument pos:start="161:29" pos:end="161:31"><expr pos:start="161:29" pos:end="161:31"><name pos:start="161:29" pos:end="161:31">buf</name></expr></argument>, <argument pos:start="161:34" pos:end="161:41"><expr pos:start="161:34" pos:end="161:41"><name pos:start="161:34" pos:end="161:41">buf_size</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="161:45" pos:end="167:5">{<block_content pos:start="163:9" pos:end="165:35">

        <expr_stmt pos:start="163:9" pos:end="163:63"><expr pos:start="163:9" pos:end="163:62"><call pos:start="163:9" pos:end="163:62"><name pos:start="163:9" pos:end="163:14">av_log</name><argument_list pos:start="163:15" pos:end="163:62">(<argument pos:start="163:16" pos:end="163:23"><expr pos:start="163:16" pos:end="163:23"><name pos:start="163:16" pos:end="163:23"><name pos:start="163:16" pos:end="163:16">s</name><operator pos:start="163:17" pos:end="163:18">-&gt;</operator><name pos:start="163:19" pos:end="163:23">avctx</name></name></expr></argument>, <argument pos:start="163:26" pos:end="163:37"><expr pos:start="163:26" pos:end="163:37"><name pos:start="163:26" pos:end="163:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="163:40" pos:end="163:61"><expr pos:start="163:40" pos:end="163:61"><literal type="string" pos:start="163:40" pos:end="163:61">"Invalid partitions\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="165:9" pos:end="165:35">return <expr pos:start="165:16" pos:end="165:34"><name pos:start="165:16" pos:end="165:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="171:5" pos:end="177:23"><if pos:start="171:5" pos:end="177:23">if <condition pos:start="171:8" pos:end="173:63">(<expr pos:start="171:9" pos:end="173:62"><operator pos:start="171:9" pos:end="171:9">!</operator><name pos:start="171:10" pos:end="171:28"><name pos:start="171:10" pos:end="171:10">s</name><operator pos:start="171:11" pos:end="171:12">-&gt;</operator><name pos:start="171:13" pos:end="171:28">macroblocks_base</name></name> <operator pos:start="171:30" pos:end="171:31">||</operator> <comment type="block" pos:start="171:33" pos:end="171:49">/* first frame */</comment>

        <name pos:start="173:9" pos:end="173:13">width</name> <operator pos:start="173:15" pos:end="173:16">!=</operator> <name pos:start="173:18" pos:end="173:32"><name pos:start="173:18" pos:end="173:18">s</name><operator pos:start="173:19" pos:end="173:20">-&gt;</operator><name pos:start="173:21" pos:end="173:25">avctx</name><operator pos:start="173:26" pos:end="173:27">-&gt;</operator><name pos:start="173:28" pos:end="173:32">width</name></name> <operator pos:start="173:34" pos:end="173:35">||</operator> <name pos:start="173:37" pos:end="173:42">height</name> <operator pos:start="173:44" pos:end="173:45">!=</operator> <name pos:start="173:47" pos:end="173:62"><name pos:start="173:47" pos:end="173:47">s</name><operator pos:start="173:48" pos:end="173:49">-&gt;</operator><name pos:start="173:50" pos:end="173:54">avctx</name><operator pos:start="173:55" pos:end="173:56">-&gt;</operator><name pos:start="173:57" pos:end="173:62">height</name></name></expr>)</condition><block type="pseudo" pos:start="175:9" pos:end="177:23"><block_content pos:start="175:9" pos:end="177:23">

        <if_stmt pos:start="175:9" pos:end="177:23"><if pos:start="175:9" pos:end="177:23">if <condition pos:start="175:12" pos:end="175:64">(<expr pos:start="175:13" pos:end="175:63"><operator pos:start="175:13" pos:end="175:13">(</operator><name pos:start="175:14" pos:end="175:16">ret</name> <operator pos:start="175:18" pos:end="175:18">=</operator> <call pos:start="175:20" pos:end="175:58"><name pos:start="175:20" pos:end="175:40">vp8_update_dimensions</name><argument_list pos:start="175:41" pos:end="175:58">(<argument pos:start="175:42" pos:end="175:42"><expr pos:start="175:42" pos:end="175:42"><name pos:start="175:42" pos:end="175:42">s</name></expr></argument>, <argument pos:start="175:45" pos:end="175:49"><expr pos:start="175:45" pos:end="175:49"><name pos:start="175:45" pos:end="175:49">width</name></expr></argument>, <argument pos:start="175:52" pos:end="175:57"><expr pos:start="175:52" pos:end="175:57"><name pos:start="175:52" pos:end="175:57">height</name></expr></argument>)</argument_list></call><operator pos:start="175:59" pos:end="175:59">)</operator> <operator pos:start="175:61" pos:end="175:61">&lt;</operator> <literal type="number" pos:start="175:63" pos:end="175:63">0</literal></expr>)</condition><block type="pseudo" pos:start="177:13" pos:end="177:23"><block_content pos:start="177:13" pos:end="177:23">

            <return pos:start="177:13" pos:end="177:23">return <expr pos:start="177:20" pos:end="177:22"><name pos:start="177:20" pos:end="177:22">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="181:5" pos:end="181:18"><expr pos:start="181:5" pos:end="181:17"><call pos:start="181:5" pos:end="181:17"><name pos:start="181:5" pos:end="181:14">get_quants</name><argument_list pos:start="181:15" pos:end="181:17">(<argument pos:start="181:16" pos:end="181:16"><expr pos:start="181:16" pos:end="181:16"><name pos:start="181:16" pos:end="181:16">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="185:5" pos:end="193:5"><if pos:start="185:5" pos:end="193:5">if <condition pos:start="185:8" pos:end="185:21">(<expr pos:start="185:9" pos:end="185:20"><operator pos:start="185:9" pos:end="185:9">!</operator><name pos:start="185:10" pos:end="185:20"><name pos:start="185:10" pos:end="185:10">s</name><operator pos:start="185:11" pos:end="185:12">-&gt;</operator><name pos:start="185:13" pos:end="185:20">keyframe</name></name></expr>)</condition> <block pos:start="185:23" pos:end="193:5">{<block_content pos:start="187:9" pos:end="191:71">

        <expr_stmt pos:start="187:9" pos:end="187:23"><expr pos:start="187:9" pos:end="187:22"><call pos:start="187:9" pos:end="187:22"><name pos:start="187:9" pos:end="187:19">update_refs</name><argument_list pos:start="187:20" pos:end="187:22">(<argument pos:start="187:21" pos:end="187:21"><expr pos:start="187:21" pos:end="187:21"><name pos:start="187:21" pos:end="187:21">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:71"><expr pos:start="189:9" pos:end="189:70"><name pos:start="189:9" pos:end="189:39"><name pos:start="189:9" pos:end="189:9">s</name><operator pos:start="189:10" pos:end="189:11">-&gt;</operator><name pos:start="189:12" pos:end="189:20">sign_bias</name><index pos:start="189:21" pos:end="189:39">[<expr pos:start="189:22" pos:end="189:38"><name pos:start="189:22" pos:end="189:38">VP56_FRAME_GOLDEN</name></expr>]</index></name>               <operator pos:start="189:55" pos:end="189:55">=</operator> <call pos:start="189:57" pos:end="189:70"><name pos:start="189:57" pos:end="189:67">vp8_rac_get</name><argument_list pos:start="189:68" pos:end="189:70">(<argument pos:start="189:69" pos:end="189:69"><expr pos:start="189:69" pos:end="189:69"><name pos:start="189:69" pos:end="189:69">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="191:9" pos:end="191:71"><expr pos:start="191:9" pos:end="191:70"><name pos:start="191:9" pos:end="191:53"><name pos:start="191:9" pos:end="191:9">s</name><operator pos:start="191:10" pos:end="191:11">-&gt;</operator><name pos:start="191:12" pos:end="191:20">sign_bias</name><index pos:start="191:21" pos:end="191:53">[<expr pos:start="191:22" pos:end="191:39"><name pos:start="191:22" pos:end="191:39">VP56_FRAME_GOLDEN2</name></expr> <comment type="block" pos:start="191:41" pos:end="191:52">/* altref */</comment>]</index></name> <operator pos:start="191:55" pos:end="191:55">=</operator> <call pos:start="191:57" pos:end="191:70"><name pos:start="191:57" pos:end="191:67">vp8_rac_get</name><argument_list pos:start="191:68" pos:end="191:70">(<argument pos:start="191:69" pos:end="191:69"><expr pos:start="191:69" pos:end="191:69"><name pos:start="191:69" pos:end="191:69">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="197:5" pos:end="197:72">// if we aren't saving this frame's probabilities for future frames,</comment>

    <comment type="line" pos:start="199:5" pos:end="199:47">// make a copy of the current probabilities</comment>

    <if_stmt pos:start="201:5" pos:end="203:32"><if pos:start="201:5" pos:end="203:32">if <condition pos:start="201:8" pos:end="201:52">(<expr pos:start="201:9" pos:end="201:51"><operator pos:start="201:9" pos:end="201:9">!</operator><operator pos:start="201:10" pos:end="201:10">(</operator><name pos:start="201:11" pos:end="201:33"><name pos:start="201:11" pos:end="201:11">s</name><operator pos:start="201:12" pos:end="201:13">-&gt;</operator><name pos:start="201:14" pos:end="201:33">update_probabilities</name></name> <operator pos:start="201:35" pos:end="201:35">=</operator> <call pos:start="201:37" pos:end="201:50"><name pos:start="201:37" pos:end="201:47">vp8_rac_get</name><argument_list pos:start="201:48" pos:end="201:50">(<argument pos:start="201:49" pos:end="201:49"><expr pos:start="201:49" pos:end="201:49"><name pos:start="201:49" pos:end="201:49">c</name></expr></argument>)</argument_list></call><operator pos:start="201:51" pos:end="201:51">)</operator></expr>)</condition><block type="pseudo" pos:start="203:9" pos:end="203:32"><block_content pos:start="203:9" pos:end="203:32">

        <expr_stmt pos:start="203:9" pos:end="203:32"><expr pos:start="203:9" pos:end="203:31"><name pos:start="203:9" pos:end="203:18"><name pos:start="203:9" pos:end="203:9">s</name><operator pos:start="203:10" pos:end="203:11">-&gt;</operator><name pos:start="203:12" pos:end="203:15">prob</name><index pos:start="203:16" pos:end="203:18">[<expr pos:start="203:17" pos:end="203:17"><literal type="number" pos:start="203:17" pos:end="203:17">1</literal></expr>]</index></name> <operator pos:start="203:20" pos:end="203:20">=</operator> <name pos:start="203:22" pos:end="203:31"><name pos:start="203:22" pos:end="203:22">s</name><operator pos:start="203:23" pos:end="203:24">-&gt;</operator><name pos:start="203:25" pos:end="203:28">prob</name><index pos:start="203:29" pos:end="203:31">[<expr pos:start="203:30" pos:end="203:30"><literal type="number" pos:start="203:30" pos:end="203:30">0</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="207:5" pos:end="207:51"><expr pos:start="207:5" pos:end="207:50"><name pos:start="207:5" pos:end="207:18"><name pos:start="207:5" pos:end="207:5">s</name><operator pos:start="207:6" pos:end="207:7">-&gt;</operator><name pos:start="207:8" pos:end="207:18">update_last</name></name> <operator pos:start="207:20" pos:end="207:20">=</operator> <name pos:start="207:22" pos:end="207:32"><name pos:start="207:22" pos:end="207:22">s</name><operator pos:start="207:23" pos:end="207:24">-&gt;</operator><name pos:start="207:25" pos:end="207:32">keyframe</name></name> <operator pos:start="207:34" pos:end="207:35">||</operator> <call pos:start="207:37" pos:end="207:50"><name pos:start="207:37" pos:end="207:47">vp8_rac_get</name><argument_list pos:start="207:48" pos:end="207:50">(<argument pos:start="207:49" pos:end="207:49"><expr pos:start="207:49" pos:end="207:49"><name pos:start="207:49" pos:end="207:49">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="211:5" pos:end="211:38"><expr pos:start="211:5" pos:end="211:37"><call pos:start="211:5" pos:end="211:37"><name pos:start="211:5" pos:end="211:34">vp78_update_probability_tables</name><argument_list pos:start="211:35" pos:end="211:37">(<argument pos:start="211:36" pos:end="211:36"><expr pos:start="211:36" pos:end="211:36"><name pos:start="211:36" pos:end="211:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="215:5" pos:end="217:49"><if pos:start="215:5" pos:end="217:49">if <condition pos:start="215:8" pos:end="215:45">(<expr pos:start="215:9" pos:end="215:44"><operator pos:start="215:9" pos:end="215:9">(</operator><name pos:start="215:10" pos:end="215:26"><name pos:start="215:10" pos:end="215:10">s</name><operator pos:start="215:11" pos:end="215:12">-&gt;</operator><name pos:start="215:13" pos:end="215:26">mbskip_enabled</name></name> <operator pos:start="215:28" pos:end="215:28">=</operator> <call pos:start="215:30" pos:end="215:43"><name pos:start="215:30" pos:end="215:40">vp8_rac_get</name><argument_list pos:start="215:41" pos:end="215:43">(<argument pos:start="215:42" pos:end="215:42"><expr pos:start="215:42" pos:end="215:42"><name pos:start="215:42" pos:end="215:42">c</name></expr></argument>)</argument_list></call><operator pos:start="215:44" pos:end="215:44">)</operator></expr>)</condition><block type="pseudo" pos:start="217:9" pos:end="217:49"><block_content pos:start="217:9" pos:end="217:49">

        <expr_stmt pos:start="217:9" pos:end="217:49"><expr pos:start="217:9" pos:end="217:48"><name pos:start="217:9" pos:end="217:23"><name pos:start="217:9" pos:end="217:9">s</name><operator pos:start="217:10" pos:end="217:11">-&gt;</operator><name pos:start="217:12" pos:end="217:15">prob</name><operator pos:start="217:16" pos:end="217:17">-&gt;</operator><name pos:start="217:18" pos:end="217:23">mbskip</name></name> <operator pos:start="217:25" pos:end="217:25">=</operator> <call pos:start="217:27" pos:end="217:48"><name pos:start="217:27" pos:end="217:42">vp8_rac_get_uint</name><argument_list pos:start="217:43" pos:end="217:48">(<argument pos:start="217:44" pos:end="217:44"><expr pos:start="217:44" pos:end="217:44"><name pos:start="217:44" pos:end="217:44">c</name></expr></argument>, <argument pos:start="217:47" pos:end="217:47"><expr pos:start="217:47" pos:end="217:47"><literal type="number" pos:start="217:47" pos:end="217:47">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="221:5" pos:end="231:5"><if pos:start="221:5" pos:end="231:5">if <condition pos:start="221:8" pos:end="221:21">(<expr pos:start="221:9" pos:end="221:20"><operator pos:start="221:9" pos:end="221:9">!</operator><name pos:start="221:10" pos:end="221:20"><name pos:start="221:10" pos:end="221:10">s</name><operator pos:start="221:11" pos:end="221:12">-&gt;</operator><name pos:start="221:13" pos:end="221:20">keyframe</name></name></expr>)</condition> <block pos:start="221:23" pos:end="231:5">{<block_content pos:start="223:9" pos:end="229:73">

        <expr_stmt pos:start="223:9" pos:end="223:49"><expr pos:start="223:9" pos:end="223:48"><name pos:start="223:9" pos:end="223:22"><name pos:start="223:9" pos:end="223:9">s</name><operator pos:start="223:10" pos:end="223:11">-&gt;</operator><name pos:start="223:12" pos:end="223:15">prob</name><operator pos:start="223:16" pos:end="223:17">-&gt;</operator><name pos:start="223:18" pos:end="223:22">intra</name></name>  <operator pos:start="223:25" pos:end="223:25">=</operator> <call pos:start="223:27" pos:end="223:48"><name pos:start="223:27" pos:end="223:42">vp8_rac_get_uint</name><argument_list pos:start="223:43" pos:end="223:48">(<argument pos:start="223:44" pos:end="223:44"><expr pos:start="223:44" pos:end="223:44"><name pos:start="223:44" pos:end="223:44">c</name></expr></argument>, <argument pos:start="223:47" pos:end="223:47"><expr pos:start="223:47" pos:end="223:47"><literal type="number" pos:start="223:47" pos:end="223:47">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="225:9" pos:end="225:49"><expr pos:start="225:9" pos:end="225:48"><name pos:start="225:9" pos:end="225:21"><name pos:start="225:9" pos:end="225:9">s</name><operator pos:start="225:10" pos:end="225:11">-&gt;</operator><name pos:start="225:12" pos:end="225:15">prob</name><operator pos:start="225:16" pos:end="225:17">-&gt;</operator><name pos:start="225:18" pos:end="225:21">last</name></name>   <operator pos:start="225:25" pos:end="225:25">=</operator> <call pos:start="225:27" pos:end="225:48"><name pos:start="225:27" pos:end="225:42">vp8_rac_get_uint</name><argument_list pos:start="225:43" pos:end="225:48">(<argument pos:start="225:44" pos:end="225:44"><expr pos:start="225:44" pos:end="225:44"><name pos:start="225:44" pos:end="225:44">c</name></expr></argument>, <argument pos:start="225:47" pos:end="225:47"><expr pos:start="225:47" pos:end="225:47"><literal type="number" pos:start="225:47" pos:end="225:47">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="227:9" pos:end="227:49"><expr pos:start="227:9" pos:end="227:48"><name pos:start="227:9" pos:end="227:23"><name pos:start="227:9" pos:end="227:9">s</name><operator pos:start="227:10" pos:end="227:11">-&gt;</operator><name pos:start="227:12" pos:end="227:15">prob</name><operator pos:start="227:16" pos:end="227:17">-&gt;</operator><name pos:start="227:18" pos:end="227:23">golden</name></name> <operator pos:start="227:25" pos:end="227:25">=</operator> <call pos:start="227:27" pos:end="227:48"><name pos:start="227:27" pos:end="227:42">vp8_rac_get_uint</name><argument_list pos:start="227:43" pos:end="227:48">(<argument pos:start="227:44" pos:end="227:44"><expr pos:start="227:44" pos:end="227:44"><name pos:start="227:44" pos:end="227:44">c</name></expr></argument>, <argument pos:start="227:47" pos:end="227:47"><expr pos:start="227:47" pos:end="227:47"><literal type="number" pos:start="227:47" pos:end="227:47">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="229:9" pos:end="229:73"><expr pos:start="229:9" pos:end="229:72"><call pos:start="229:9" pos:end="229:72"><name pos:start="229:9" pos:end="229:55">vp78_update_pred16x16_pred8x8_mvc_probabilities</name><argument_list pos:start="229:56" pos:end="229:72">(<argument pos:start="229:57" pos:end="229:57"><expr pos:start="229:57" pos:end="229:57"><name pos:start="229:57" pos:end="229:57">s</name></expr></argument>, <argument pos:start="229:60" pos:end="229:71"><expr pos:start="229:60" pos:end="229:71"><name pos:start="229:60" pos:end="229:71">VP8_MVC_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="235:5" pos:end="235:13">return <expr pos:start="235:12" pos:end="235:12"><literal type="number" pos:start="235:12" pos:end="235:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
