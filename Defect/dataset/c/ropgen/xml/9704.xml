<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9704.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">timerblock_write</name><parameter_list pos:start="1:29" pos:end="3:59">(<parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:33">void</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:41">opaque</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:66"><decl pos:start="1:44" pos:end="1:66"><type pos:start="1:44" pos:end="1:66"><name pos:start="1:44" pos:end="1:61">target_phys_addr_t</name></type> <name pos:start="1:63" pos:end="1:66">addr</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:43"><decl pos:start="3:30" pos:end="3:43"><type pos:start="3:30" pos:end="3:43"><name pos:start="3:30" pos:end="3:37">uint64_t</name></type> <name pos:start="3:39" pos:end="3:43">value</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:58"><decl pos:start="3:46" pos:end="3:58"><type pos:start="3:46" pos:end="3:58"><name pos:start="3:46" pos:end="3:53">unsigned</name></type> <name pos:start="3:55" pos:end="3:58">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="69:1">{<block_content pos:start="7:5" pos:end="67:5">

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">timerblock</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:18">tb</name> <init pos:start="7:20" pos:end="7:41">= <expr pos:start="7:22" pos:end="7:41"><operator pos:start="7:22" pos:end="7:22">(</operator><name pos:start="7:23" pos:end="7:32">timerblock</name> <operator pos:start="7:34" pos:end="7:34">*</operator><operator pos:start="7:35" pos:end="7:35">)</operator><name pos:start="7:36" pos:end="7:41">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:15">old</name></decl>;</decl_stmt>

    <switch pos:start="11:5" pos:end="67:5">switch <condition pos:start="11:12" pos:end="11:17">(<expr pos:start="11:13" pos:end="11:16"><name pos:start="11:13" pos:end="11:16">addr</name></expr>)</condition> <block pos:start="11:19" pos:end="67:5">{<block_content pos:start="13:5" pos:end="65:14">

    <case pos:start="13:5" pos:end="13:11">case <expr pos:start="13:10" pos:end="13:10"><literal type="number" pos:start="13:10" pos:end="13:10">0</literal></expr>:</case> <comment type="block" pos:start="13:13" pos:end="13:22">/* Load */</comment>

        <expr_stmt pos:start="15:9" pos:end="15:25"><expr pos:start="15:9" pos:end="15:24"><name pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:10">tb</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:16">load</name></name> <operator pos:start="15:18" pos:end="15:18">=</operator> <name pos:start="15:20" pos:end="15:24">value</name></expr>;</expr_stmt>

        <comment type="block" pos:start="17:9" pos:end="17:28">/* Fall through.  */</comment>

    <case pos:start="19:5" pos:end="19:11">case <expr pos:start="19:10" pos:end="19:10"><literal type="number" pos:start="19:10" pos:end="19:10">4</literal></expr>:</case> <comment type="block" pos:start="19:13" pos:end="19:27">/* Counter.  */</comment>

        <if_stmt pos:start="21:9" pos:end="27:9"><if pos:start="21:9" pos:end="27:9">if <condition pos:start="21:12" pos:end="21:43">(<expr pos:start="21:13" pos:end="21:42"><operator pos:start="21:13" pos:end="21:13">(</operator><name pos:start="21:14" pos:end="21:24"><name pos:start="21:14" pos:end="21:15">tb</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:24">control</name></name> <operator pos:start="21:26" pos:end="21:26">&amp;</operator> <literal type="number" pos:start="21:28" pos:end="21:28">1</literal><operator pos:start="21:29" pos:end="21:29">)</operator> <operator pos:start="21:31" pos:end="21:32">&amp;&amp;</operator> <name pos:start="21:34" pos:end="21:42"><name pos:start="21:34" pos:end="21:35">tb</name><operator pos:start="21:36" pos:end="21:37">-&gt;</operator><name pos:start="21:38" pos:end="21:42">count</name></name></expr>)</condition> <block pos:start="21:45" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:38">

            <comment type="block" pos:start="23:13" pos:end="23:45">/* Cancel the previous timer.  */</comment>

            <expr_stmt pos:start="25:13" pos:end="25:38"><expr pos:start="25:13" pos:end="25:37"><call pos:start="25:13" pos:end="25:37"><name pos:start="25:13" pos:end="25:26">qemu_del_timer</name><argument_list pos:start="25:27" pos:end="25:37">(<argument pos:start="25:28" pos:end="25:36"><expr pos:start="25:28" pos:end="25:36"><name pos:start="25:28" pos:end="25:36"><name pos:start="25:28" pos:end="25:29">tb</name><operator pos:start="25:30" pos:end="25:31">-&gt;</operator><name pos:start="25:32" pos:end="25:36">timer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:26"><expr pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:10">tb</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:17">count</name></name> <operator pos:start="29:19" pos:end="29:19">=</operator> <name pos:start="29:21" pos:end="29:25">value</name></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="35:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:28">(<expr pos:start="31:13" pos:end="31:27"><name pos:start="31:13" pos:end="31:23"><name pos:start="31:13" pos:end="31:14">tb</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:23">control</name></name> <operator pos:start="31:25" pos:end="31:25">&amp;</operator> <literal type="number" pos:start="31:27" pos:end="31:27">1</literal></expr>)</condition> <block pos:start="31:30" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:37">

            <expr_stmt pos:start="33:13" pos:end="33:37"><expr pos:start="33:13" pos:end="33:36"><call pos:start="33:13" pos:end="33:36"><name pos:start="33:13" pos:end="33:29">timerblock_reload</name><argument_list pos:start="33:30" pos:end="33:36">(<argument pos:start="33:31" pos:end="33:32"><expr pos:start="33:31" pos:end="33:32"><name pos:start="33:31" pos:end="33:32">tb</name></expr></argument>, <argument pos:start="33:35" pos:end="33:35"><expr pos:start="33:35" pos:end="33:35"><literal type="number" pos:start="33:35" pos:end="33:35">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    <case pos:start="39:5" pos:end="39:11">case <expr pos:start="39:10" pos:end="39:10"><literal type="number" pos:start="39:10" pos:end="39:10">8</literal></expr>:</case> <comment type="block" pos:start="39:13" pos:end="39:27">/* Control.  */</comment>

        <expr_stmt pos:start="41:9" pos:end="41:26"><expr pos:start="41:9" pos:end="41:25"><name pos:start="41:9" pos:end="41:11">old</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <name pos:start="41:15" pos:end="41:25"><name pos:start="41:15" pos:end="41:16">tb</name><operator pos:start="41:17" pos:end="41:18">-&gt;</operator><name pos:start="41:19" pos:end="41:25">control</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:28"><expr pos:start="43:9" pos:end="43:27"><name pos:start="43:9" pos:end="43:19"><name pos:start="43:9" pos:end="43:10">tb</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:19">control</name></name> <operator pos:start="43:21" pos:end="43:21">=</operator> <name pos:start="43:23" pos:end="43:27">value</name></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="55:9"><if pos:start="45:9" pos:end="55:9">if <condition pos:start="45:12" pos:end="45:44">(<expr pos:start="45:13" pos:end="45:43"><operator pos:start="45:13" pos:end="45:13">(</operator><operator pos:start="45:14" pos:end="45:14">(</operator><name pos:start="45:15" pos:end="45:17">old</name> <operator pos:start="45:19" pos:end="45:19">&amp;</operator> <literal type="number" pos:start="45:21" pos:end="45:21">1</literal><operator pos:start="45:22" pos:end="45:22">)</operator> <operator pos:start="45:24" pos:end="45:25">==</operator> <literal type="number" pos:start="45:27" pos:end="45:27">0</literal><operator pos:start="45:28" pos:end="45:28">)</operator> <operator pos:start="45:30" pos:end="45:31">&amp;&amp;</operator> <operator pos:start="45:33" pos:end="45:33">(</operator><name pos:start="45:34" pos:end="45:38">value</name> <operator pos:start="45:40" pos:end="45:40">&amp;</operator> <literal type="number" pos:start="45:42" pos:end="45:42">1</literal><operator pos:start="45:43" pos:end="45:43">)</operator></expr>)</condition> <block pos:start="45:46" pos:end="55:9">{<block_content pos:start="47:13" pos:end="53:37">

            <if_stmt pos:start="47:13" pos:end="51:13"><if pos:start="47:13" pos:end="51:13">if <condition pos:start="47:16" pos:end="47:52">(<expr pos:start="47:17" pos:end="47:51"><name pos:start="47:17" pos:end="47:25"><name pos:start="47:17" pos:end="47:18">tb</name><operator pos:start="47:19" pos:end="47:20">-&gt;</operator><name pos:start="47:21" pos:end="47:25">count</name></name> <operator pos:start="47:27" pos:end="47:28">==</operator> <literal type="number" pos:start="47:30" pos:end="47:30">0</literal> <operator pos:start="47:32" pos:end="47:33">&amp;&amp;</operator> <operator pos:start="47:35" pos:end="47:35">(</operator><name pos:start="47:36" pos:end="47:46"><name pos:start="47:36" pos:end="47:37">tb</name><operator pos:start="47:38" pos:end="47:39">-&gt;</operator><name pos:start="47:40" pos:end="47:46">control</name></name> <operator pos:start="47:48" pos:end="47:48">&amp;</operator> <literal type="number" pos:start="47:50" pos:end="47:50">2</literal><operator pos:start="47:51" pos:end="47:51">)</operator></expr>)</condition> <block pos:start="47:54" pos:end="51:13">{<block_content pos:start="49:17" pos:end="49:37">

                <expr_stmt pos:start="49:17" pos:end="49:37"><expr pos:start="49:17" pos:end="49:36"><name pos:start="49:17" pos:end="49:25"><name pos:start="49:17" pos:end="49:18">tb</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:25">count</name></name> <operator pos:start="49:27" pos:end="49:27">=</operator> <name pos:start="49:29" pos:end="49:36"><name pos:start="49:29" pos:end="49:30">tb</name><operator pos:start="49:31" pos:end="49:32">-&gt;</operator><name pos:start="49:33" pos:end="49:36">load</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:37"><expr pos:start="53:13" pos:end="53:36"><call pos:start="53:13" pos:end="53:36"><name pos:start="53:13" pos:end="53:29">timerblock_reload</name><argument_list pos:start="53:30" pos:end="53:36">(<argument pos:start="53:31" pos:end="53:32"><expr pos:start="53:31" pos:end="53:32"><name pos:start="53:31" pos:end="53:32">tb</name></expr></argument>, <argument pos:start="53:35" pos:end="53:35"><expr pos:start="53:35" pos:end="53:35"><literal type="number" pos:start="53:35" pos:end="53:35">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="57:9" pos:end="57:14">break;</break>

    <case pos:start="59:5" pos:end="59:12">case <expr pos:start="59:10" pos:end="59:11"><literal type="number" pos:start="59:10" pos:end="59:11">12</literal></expr>:</case> <comment type="block" pos:start="59:14" pos:end="59:37">/* Interrupt status.  */</comment>

        <expr_stmt pos:start="61:9" pos:end="61:29"><expr pos:start="61:9" pos:end="61:28"><name pos:start="61:9" pos:end="61:18"><name pos:start="61:9" pos:end="61:10">tb</name><operator pos:start="61:11" pos:end="61:12">-&gt;</operator><name pos:start="61:13" pos:end="61:18">status</name></name> <operator pos:start="61:20" pos:end="61:21">&amp;=</operator> <operator pos:start="61:23" pos:end="61:23">~</operator><name pos:start="61:24" pos:end="61:28">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:34"><expr pos:start="63:9" pos:end="63:33"><call pos:start="63:9" pos:end="63:33"><name pos:start="63:9" pos:end="63:29">timerblock_update_irq</name><argument_list pos:start="63:30" pos:end="63:33">(<argument pos:start="63:31" pos:end="63:32"><expr pos:start="63:31" pos:end="63:32"><name pos:start="63:31" pos:end="63:32">tb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="65:9" pos:end="65:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
