<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1664.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">alloc_picture</name><parameter_list pos:start="1:25" pos:end="1:54">(<parameter pos:start="1:26" pos:end="1:39"><decl pos:start="1:26" pos:end="1:39"><type pos:start="1:26" pos:end="1:39"><name pos:start="1:26" pos:end="1:36">H264Context</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">h</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:53"><decl pos:start="1:42" pos:end="1:53"><type pos:start="1:42" pos:end="1:53"><name pos:start="1:42" pos:end="1:48">Picture</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:53">pic</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="107:1">{<block_content pos:start="5:5" pos:end="105:45">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:18"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:14">ret</name> <init pos:start="5:16" pos:end="5:18">= <expr pos:start="5:18" pos:end="5:18"><literal type="number" pos:start="5:18" pos:end="5:18">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:32"><expr pos:start="9:5" pos:end="9:31"><call pos:start="9:5" pos:end="9:31"><name pos:start="9:5" pos:end="9:14">av_assert0</name><argument_list pos:start="9:15" pos:end="9:31">(<argument pos:start="9:16" pos:end="9:30"><expr pos:start="9:16" pos:end="9:30"><operator pos:start="9:16" pos:end="9:16">!</operator><name pos:start="9:17" pos:end="9:30"><name pos:start="9:17" pos:end="9:19">pic</name><operator pos:start="9:20" pos:end="9:21">-&gt;</operator><name pos:start="9:22" pos:end="9:22">f</name><operator pos:start="9:23" pos:end="9:23">.</operator><name pos:start="9:24" pos:end="9:27">data</name><index pos:start="9:28" pos:end="9:30">[<expr pos:start="9:29" pos:end="9:29"><literal type="number" pos:start="9:29" pos:end="9:29">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="13:5" pos:end="31:5"><if pos:start="13:5" pos:end="31:5">if <condition pos:start="13:8" pos:end="13:26">(<expr pos:start="13:9" pos:end="13:25"><name pos:start="13:9" pos:end="13:25"><name pos:start="13:9" pos:end="13:9">h</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:16">avctx</name><operator pos:start="13:17" pos:end="13:18">-&gt;</operator><name pos:start="13:19" pos:end="13:25">hwaccel</name></name></expr>)</condition> <block pos:start="13:28" pos:end="31:5">{<block_content pos:start="15:9" pos:end="29:9">

        <decl_stmt pos:start="15:9" pos:end="15:53"><decl pos:start="15:9" pos:end="15:52"><type pos:start="15:9" pos:end="15:25"><specifier pos:start="15:9" pos:end="15:13">const</specifier> <name pos:start="15:15" pos:end="15:23">AVHWAccel</name> <modifier pos:start="15:25" pos:end="15:25">*</modifier></type><name pos:start="15:26" pos:end="15:32">hwaccel</name> <init pos:start="15:34" pos:end="15:52">= <expr pos:start="15:36" pos:end="15:52"><name pos:start="15:36" pos:end="15:52"><name pos:start="15:36" pos:end="15:36">h</name><operator pos:start="15:37" pos:end="15:38">-&gt;</operator><name pos:start="15:39" pos:end="15:43">avctx</name><operator pos:start="15:44" pos:end="15:45">-&gt;</operator><name pos:start="15:46" pos:end="15:52">hwaccel</name></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:50"><expr pos:start="17:9" pos:end="17:49"><call pos:start="17:9" pos:end="17:49"><name pos:start="17:9" pos:end="17:18">av_assert0</name><argument_list pos:start="17:19" pos:end="17:49">(<argument pos:start="17:20" pos:end="17:48"><expr pos:start="17:20" pos:end="17:48"><operator pos:start="17:20" pos:end="17:20">!</operator><name pos:start="17:21" pos:end="17:48"><name pos:start="17:21" pos:end="17:23">pic</name><operator pos:start="17:24" pos:end="17:25">-&gt;</operator><name pos:start="17:26" pos:end="17:48">hwaccel_picture_private</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="29:9"><if pos:start="19:9" pos:end="29:9">if <condition pos:start="19:12" pos:end="19:36">(<expr pos:start="19:13" pos:end="19:35"><name pos:start="19:13" pos:end="19:35"><name pos:start="19:13" pos:end="19:19">hwaccel</name><operator pos:start="19:20" pos:end="19:21">-&gt;</operator><name pos:start="19:22" pos:end="19:35">priv_data_size</name></name></expr>)</condition> <block pos:start="19:38" pos:end="29:9">{<block_content pos:start="21:13" pos:end="27:71">

            <expr_stmt pos:start="21:13" pos:end="21:78"><expr pos:start="21:13" pos:end="21:77"><name pos:start="21:13" pos:end="21:33"><name pos:start="21:13" pos:end="21:15">pic</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:33">hwaccel_priv_buf</name></name> <operator pos:start="21:35" pos:end="21:35">=</operator> <call pos:start="21:37" pos:end="21:77"><name pos:start="21:37" pos:end="21:52">av_buffer_allocz</name><argument_list pos:start="21:53" pos:end="21:77">(<argument pos:start="21:54" pos:end="21:76"><expr pos:start="21:54" pos:end="21:76"><name pos:start="21:54" pos:end="21:76"><name pos:start="21:54" pos:end="21:60">hwaccel</name><operator pos:start="21:61" pos:end="21:62">-&gt;</operator><name pos:start="21:63" pos:end="21:76">priv_data_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="23:13" pos:end="25:39"><if pos:start="23:13" pos:end="25:39">if <condition pos:start="23:16" pos:end="23:39">(<expr pos:start="23:17" pos:end="23:38"><operator pos:start="23:17" pos:end="23:17">!</operator><name pos:start="23:18" pos:end="23:38"><name pos:start="23:18" pos:end="23:20">pic</name><operator pos:start="23:21" pos:end="23:22">-&gt;</operator><name pos:start="23:23" pos:end="23:38">hwaccel_priv_buf</name></name></expr>)</condition><block type="pseudo" pos:start="25:17" pos:end="25:39"><block_content pos:start="25:17" pos:end="25:39">

                <return pos:start="25:17" pos:end="25:39">return <expr pos:start="25:24" pos:end="25:38"><call pos:start="25:24" pos:end="25:38"><name pos:start="25:24" pos:end="25:30">AVERROR</name><argument_list pos:start="25:31" pos:end="25:38">(<argument pos:start="25:32" pos:end="25:37"><expr pos:start="25:32" pos:end="25:37"><name pos:start="25:32" pos:end="25:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:71"><expr pos:start="27:13" pos:end="27:70"><name pos:start="27:13" pos:end="27:40"><name pos:start="27:13" pos:end="27:15">pic</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:40">hwaccel_picture_private</name></name> <operator pos:start="27:42" pos:end="27:42">=</operator> <name pos:start="27:44" pos:end="27:70"><name pos:start="27:44" pos:end="27:46">pic</name><operator pos:start="27:47" pos:end="27:48">-&gt;</operator><name pos:start="27:49" pos:end="27:64">hwaccel_priv_buf</name><operator pos:start="27:65" pos:end="27:66">-&gt;</operator><name pos:start="27:67" pos:end="27:70">data</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:24"><expr pos:start="33:5" pos:end="33:23"><name pos:start="33:5" pos:end="33:13"><name pos:start="33:5" pos:end="33:7">pic</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:11">tf</name><operator pos:start="33:12" pos:end="33:12">.</operator><name pos:start="33:13" pos:end="33:13">f</name></name> <operator pos:start="33:15" pos:end="33:15">=</operator> <operator pos:start="33:17" pos:end="33:17">&amp;</operator><name pos:start="33:18" pos:end="33:23"><name pos:start="33:18" pos:end="33:20">pic</name><operator pos:start="33:21" pos:end="33:22">-&gt;</operator><name pos:start="33:23" pos:end="33:23">f</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="37:79"><expr pos:start="35:5" pos:end="37:78"><name pos:start="35:5" pos:end="35:7">ret</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <call pos:start="35:11" pos:end="37:78"><name pos:start="35:11" pos:end="35:30">ff_thread_get_buffer</name><argument_list pos:start="35:31" pos:end="37:78">(<argument pos:start="35:32" pos:end="35:39"><expr pos:start="35:32" pos:end="35:39"><name pos:start="35:32" pos:end="35:39"><name pos:start="35:32" pos:end="35:32">h</name><operator pos:start="35:33" pos:end="35:34">-&gt;</operator><name pos:start="35:35" pos:end="35:39">avctx</name></name></expr></argument>, <argument pos:start="35:42" pos:end="35:49"><expr pos:start="35:42" pos:end="35:49"><operator pos:start="35:42" pos:end="35:42">&amp;</operator><name pos:start="35:43" pos:end="35:49"><name pos:start="35:43" pos:end="35:45">pic</name><operator pos:start="35:46" pos:end="35:47">-&gt;</operator><name pos:start="35:48" pos:end="35:49">tf</name></name></expr></argument>, <argument pos:start="35:52" pos:end="37:77"><expr pos:start="35:52" pos:end="37:77"><ternary pos:start="35:52" pos:end="37:77"><condition pos:start="35:52" pos:end="35:67"><expr pos:start="35:52" pos:end="35:65"><name pos:start="35:52" pos:end="35:65"><name pos:start="35:52" pos:end="35:54">pic</name><operator pos:start="35:55" pos:end="35:56">-&gt;</operator><name pos:start="35:57" pos:end="35:65">reference</name></name></expr> ?</condition><then pos:start="37:52" pos:end="37:73">

                                                   <expr pos:start="37:52" pos:end="37:73"><name pos:start="37:52" pos:end="37:73">AV_GET_BUFFER_FLAG_REF</name></expr> </then><else pos:start="37:75" pos:end="37:77">: <expr pos:start="37:77" pos:end="37:77"><literal type="number" pos:start="37:77" pos:end="37:77">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="41:18"><if pos:start="39:5" pos:end="41:18">if <condition pos:start="39:8" pos:end="39:16">(<expr pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:11">ret</name> <operator pos:start="39:13" pos:end="39:13">&lt;</operator> <literal type="number" pos:start="39:15" pos:end="39:15">0</literal></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:18"><block_content pos:start="41:9" pos:end="41:18">

        <goto pos:start="41:9" pos:end="41:18">goto <name pos:start="41:14" pos:end="41:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:39"><expr pos:start="45:5" pos:end="45:38"><name pos:start="45:5" pos:end="45:15"><name pos:start="45:5" pos:end="45:5">h</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:15">linesize</name></name>   <operator pos:start="45:19" pos:end="45:19">=</operator> <name pos:start="45:21" pos:end="45:38"><name pos:start="45:21" pos:end="45:23">pic</name><operator pos:start="45:24" pos:end="45:25">-&gt;</operator><name pos:start="45:26" pos:end="45:26">f</name><operator pos:start="45:27" pos:end="45:27">.</operator><name pos:start="45:28" pos:end="45:35">linesize</name><index pos:start="45:36" pos:end="45:38">[<expr pos:start="45:37" pos:end="45:37"><literal type="number" pos:start="45:37" pos:end="45:37">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:39"><expr pos:start="47:5" pos:end="47:38"><name pos:start="47:5" pos:end="47:17"><name pos:start="47:5" pos:end="47:5">h</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:17">uvlinesize</name></name> <operator pos:start="47:19" pos:end="47:19">=</operator> <name pos:start="47:21" pos:end="47:38"><name pos:start="47:21" pos:end="47:23">pic</name><operator pos:start="47:24" pos:end="47:25">-&gt;</operator><name pos:start="47:26" pos:end="47:26">f</name><operator pos:start="47:27" pos:end="47:27">.</operator><name pos:start="47:28" pos:end="47:35">linesize</name><index pos:start="47:36" pos:end="47:38">[<expr pos:start="47:37" pos:end="47:37"><literal type="number" pos:start="47:37" pos:end="47:37">1</literal></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="51:5" pos:end="59:5"><if pos:start="51:5" pos:end="59:5">if <condition pos:start="51:8" pos:end="51:30">(<expr pos:start="51:9" pos:end="51:29"><operator pos:start="51:9" pos:end="51:9">!</operator><name pos:start="51:10" pos:end="51:29"><name pos:start="51:10" pos:end="51:10">h</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:29">qscale_table_pool</name></name></expr>)</condition> <block pos:start="51:32" pos:end="59:5">{<block_content pos:start="53:9" pos:end="57:22">

        <expr_stmt pos:start="53:9" pos:end="53:34"><expr pos:start="53:9" pos:end="53:33"><name pos:start="53:9" pos:end="53:11">ret</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <call pos:start="53:15" pos:end="53:33"><name pos:start="53:15" pos:end="53:30">init_table_pools</name><argument_list pos:start="53:31" pos:end="53:33">(<argument pos:start="53:32" pos:end="53:32"><expr pos:start="53:32" pos:end="53:32"><name pos:start="53:32" pos:end="53:32">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="57:22"><if pos:start="55:9" pos:end="57:22">if <condition pos:start="55:12" pos:end="55:20">(<expr pos:start="55:13" pos:end="55:19"><name pos:start="55:13" pos:end="55:15">ret</name> <operator pos:start="55:17" pos:end="55:17">&lt;</operator> <literal type="number" pos:start="55:19" pos:end="55:19">0</literal></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:22"><block_content pos:start="57:13" pos:end="57:22">

            <goto pos:start="57:13" pos:end="57:22">goto <name pos:start="57:18" pos:end="57:21">fail</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:69"><expr pos:start="63:5" pos:end="63:68"><name pos:start="63:5" pos:end="63:25"><name pos:start="63:5" pos:end="63:7">pic</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:25">qscale_table_buf</name></name> <operator pos:start="63:27" pos:end="63:27">=</operator> <call pos:start="63:29" pos:end="63:68"><name pos:start="63:29" pos:end="63:46">av_buffer_pool_get</name><argument_list pos:start="63:47" pos:end="63:68">(<argument pos:start="63:48" pos:end="63:67"><expr pos:start="63:48" pos:end="63:67"><name pos:start="63:48" pos:end="63:67"><name pos:start="63:48" pos:end="63:48">h</name><operator pos:start="63:49" pos:end="63:50">-&gt;</operator><name pos:start="63:51" pos:end="63:67">qscale_table_pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:64"><expr pos:start="65:5" pos:end="65:63"><name pos:start="65:5" pos:end="65:20"><name pos:start="65:5" pos:end="65:7">pic</name><operator pos:start="65:8" pos:end="65:9">-&gt;</operator><name pos:start="65:10" pos:end="65:20">mb_type_buf</name></name>      <operator pos:start="65:27" pos:end="65:27">=</operator> <call pos:start="65:29" pos:end="65:63"><name pos:start="65:29" pos:end="65:46">av_buffer_pool_get</name><argument_list pos:start="65:47" pos:end="65:63">(<argument pos:start="65:48" pos:end="65:62"><expr pos:start="65:48" pos:end="65:62"><name pos:start="65:48" pos:end="65:62"><name pos:start="65:48" pos:end="65:48">h</name><operator pos:start="65:49" pos:end="65:50">-&gt;</operator><name pos:start="65:51" pos:end="65:62">mb_type_pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="67:5" pos:end="69:18"><if pos:start="67:5" pos:end="69:18">if <condition pos:start="67:8" pos:end="67:52">(<expr pos:start="67:9" pos:end="67:51"><operator pos:start="67:9" pos:end="67:9">!</operator><name pos:start="67:10" pos:end="67:30"><name pos:start="67:10" pos:end="67:12">pic</name><operator pos:start="67:13" pos:end="67:14">-&gt;</operator><name pos:start="67:15" pos:end="67:30">qscale_table_buf</name></name> <operator pos:start="67:32" pos:end="67:33">||</operator> <operator pos:start="67:35" pos:end="67:35">!</operator><name pos:start="67:36" pos:end="67:51"><name pos:start="67:36" pos:end="67:38">pic</name><operator pos:start="67:39" pos:end="67:40">-&gt;</operator><name pos:start="67:41" pos:end="67:51">mb_type_buf</name></name></expr>)</condition><block type="pseudo" pos:start="69:9" pos:end="69:18"><block_content pos:start="69:9" pos:end="69:18">

        <goto pos:start="69:9" pos:end="69:18">goto <name pos:start="69:14" pos:end="69:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:81"><expr pos:start="73:5" pos:end="73:80"><name pos:start="73:5" pos:end="73:16"><name pos:start="73:5" pos:end="73:7">pic</name><operator pos:start="73:8" pos:end="73:9">-&gt;</operator><name pos:start="73:10" pos:end="73:16">mb_type</name></name>      <operator pos:start="73:23" pos:end="73:23">=</operator> <operator pos:start="73:25" pos:end="73:25">(</operator><name pos:start="73:26" pos:end="73:33">uint32_t</name><operator pos:start="73:34" pos:end="73:34">*</operator><operator pos:start="73:35" pos:end="73:35">)</operator><name pos:start="73:36" pos:end="73:57"><name pos:start="73:36" pos:end="73:38">pic</name><operator pos:start="73:39" pos:end="73:40">-&gt;</operator><name pos:start="73:41" pos:end="73:51">mb_type_buf</name><operator pos:start="73:52" pos:end="73:53">-&gt;</operator><name pos:start="73:54" pos:end="73:57">data</name></name> <operator pos:start="73:59" pos:end="73:59">+</operator> <literal type="number" pos:start="73:61" pos:end="73:61">2</literal> <operator pos:start="73:63" pos:end="73:63">*</operator> <name pos:start="73:65" pos:end="73:76"><name pos:start="73:65" pos:end="73:65">h</name><operator pos:start="73:66" pos:end="73:67">-&gt;</operator><name pos:start="73:68" pos:end="73:76">mb_stride</name></name> <operator pos:start="73:78" pos:end="73:78">+</operator> <literal type="number" pos:start="73:80" pos:end="73:80">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:75"><expr pos:start="75:5" pos:end="75:74"><name pos:start="75:5" pos:end="75:21"><name pos:start="75:5" pos:end="75:7">pic</name><operator pos:start="75:8" pos:end="75:9">-&gt;</operator><name pos:start="75:10" pos:end="75:21">qscale_table</name></name> <operator pos:start="75:23" pos:end="75:23">=</operator> <name pos:start="75:25" pos:end="75:51"><name pos:start="75:25" pos:end="75:27">pic</name><operator pos:start="75:28" pos:end="75:29">-&gt;</operator><name pos:start="75:30" pos:end="75:45">qscale_table_buf</name><operator pos:start="75:46" pos:end="75:47">-&gt;</operator><name pos:start="75:48" pos:end="75:51">data</name></name> <operator pos:start="75:53" pos:end="75:53">+</operator> <literal type="number" pos:start="75:55" pos:end="75:55">2</literal> <operator pos:start="75:57" pos:end="75:57">*</operator> <name pos:start="75:59" pos:end="75:70"><name pos:start="75:59" pos:end="75:59">h</name><operator pos:start="75:60" pos:end="75:61">-&gt;</operator><name pos:start="75:62" pos:end="75:70">mb_stride</name></name> <operator pos:start="75:72" pos:end="75:72">+</operator> <literal type="number" pos:start="75:74" pos:end="75:74">1</literal></expr>;</expr_stmt>



    <for pos:start="79:5" pos:end="95:5">for <control pos:start="79:9" pos:end="79:27">(<init pos:start="79:10" pos:end="79:15"><expr pos:start="79:10" pos:end="79:14"><name pos:start="79:10" pos:end="79:10">i</name> <operator pos:start="79:12" pos:end="79:12">=</operator> <literal type="number" pos:start="79:14" pos:end="79:14">0</literal></expr>;</init> <condition pos:start="79:17" pos:end="79:22"><expr pos:start="79:17" pos:end="79:21"><name pos:start="79:17" pos:end="79:17">i</name> <operator pos:start="79:19" pos:end="79:19">&lt;</operator> <literal type="number" pos:start="79:21" pos:end="79:21">2</literal></expr>;</condition> <incr pos:start="79:24" pos:end="79:26"><expr pos:start="79:24" pos:end="79:26"><name pos:start="79:24" pos:end="79:24">i</name><operator pos:start="79:25" pos:end="79:26">++</operator></expr></incr>)</control> <block pos:start="79:29" pos:end="95:5">{<block_content pos:start="81:9" pos:end="93:57">

        <expr_stmt pos:start="81:9" pos:end="81:72"><expr pos:start="81:9" pos:end="81:71"><name pos:start="81:9" pos:end="81:30"><name pos:start="81:9" pos:end="81:11">pic</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:27">motion_val_buf</name><index pos:start="81:28" pos:end="81:30">[<expr pos:start="81:29" pos:end="81:29"><name pos:start="81:29" pos:end="81:29">i</name></expr>]</index></name> <operator pos:start="81:32" pos:end="81:32">=</operator> <call pos:start="81:34" pos:end="81:71"><name pos:start="81:34" pos:end="81:51">av_buffer_pool_get</name><argument_list pos:start="81:52" pos:end="81:71">(<argument pos:start="81:53" pos:end="81:70"><expr pos:start="81:53" pos:end="81:70"><name pos:start="81:53" pos:end="81:70"><name pos:start="81:53" pos:end="81:53">h</name><operator pos:start="81:54" pos:end="81:55">-&gt;</operator><name pos:start="81:56" pos:end="81:70">motion_val_pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:71"><expr pos:start="83:9" pos:end="83:70"><name pos:start="83:9" pos:end="83:29"><name pos:start="83:9" pos:end="83:11">pic</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:26">ref_index_buf</name><index pos:start="83:27" pos:end="83:29">[<expr pos:start="83:28" pos:end="83:28"><name pos:start="83:28" pos:end="83:28">i</name></expr>]</index></name>  <operator pos:start="83:32" pos:end="83:32">=</operator> <call pos:start="83:34" pos:end="83:70"><name pos:start="83:34" pos:end="83:51">av_buffer_pool_get</name><argument_list pos:start="83:52" pos:end="83:70">(<argument pos:start="83:53" pos:end="83:69"><expr pos:start="83:53" pos:end="83:69"><name pos:start="83:53" pos:end="83:69"><name pos:start="83:53" pos:end="83:53">h</name><operator pos:start="83:54" pos:end="83:55">-&gt;</operator><name pos:start="83:56" pos:end="83:69">ref_index_pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="85:9" pos:end="87:22"><if pos:start="85:9" pos:end="87:22">if <condition pos:start="85:12" pos:end="85:62">(<expr pos:start="85:13" pos:end="85:61"><operator pos:start="85:13" pos:end="85:13">!</operator><name pos:start="85:14" pos:end="85:35"><name pos:start="85:14" pos:end="85:16">pic</name><operator pos:start="85:17" pos:end="85:18">-&gt;</operator><name pos:start="85:19" pos:end="85:32">motion_val_buf</name><index pos:start="85:33" pos:end="85:35">[<expr pos:start="85:34" pos:end="85:34"><name pos:start="85:34" pos:end="85:34">i</name></expr>]</index></name> <operator pos:start="85:37" pos:end="85:38">||</operator> <operator pos:start="85:40" pos:end="85:40">!</operator><name pos:start="85:41" pos:end="85:61"><name pos:start="85:41" pos:end="85:43">pic</name><operator pos:start="85:44" pos:end="85:45">-&gt;</operator><name pos:start="85:46" pos:end="85:58">ref_index_buf</name><index pos:start="85:59" pos:end="85:61">[<expr pos:start="85:60" pos:end="85:60"><name pos:start="85:60" pos:end="85:60">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="87:13" pos:end="87:22"><block_content pos:start="87:13" pos:end="87:22">

            <goto pos:start="87:13" pos:end="87:22">goto <name pos:start="87:18" pos:end="87:21">fail</name>;</goto></block_content></block></if></if_stmt>



        <expr_stmt pos:start="91:9" pos:end="91:78"><expr pos:start="91:9" pos:end="91:77"><name pos:start="91:9" pos:end="91:26"><name pos:start="91:9" pos:end="91:11">pic</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:23">motion_val</name><index pos:start="91:24" pos:end="91:26">[<expr pos:start="91:25" pos:end="91:25"><name pos:start="91:25" pos:end="91:25">i</name></expr>]</index></name> <operator pos:start="91:28" pos:end="91:28">=</operator> <operator pos:start="91:30" pos:end="91:30">(</operator><call pos:start="91:31" pos:end="91:41"><name pos:start="91:31" pos:end="91:37">int16_t</name> <argument_list pos:start="91:39" pos:end="91:41">(<argument pos:start="91:40" pos:end="91:40"><expr pos:start="91:40" pos:end="91:40"><operator pos:start="91:40" pos:end="91:40">*</operator></expr></argument>)</argument_list></call><index pos:start="91:42" pos:end="91:44">[<expr pos:start="91:43" pos:end="91:43"><literal type="number" pos:start="91:43" pos:end="91:43">2</literal></expr>]</index><operator pos:start="91:45" pos:end="91:45">)</operator><name pos:start="91:46" pos:end="91:67"><name pos:start="91:46" pos:end="91:48">pic</name><operator pos:start="91:49" pos:end="91:50">-&gt;</operator><name pos:start="91:51" pos:end="91:64">motion_val_buf</name><index pos:start="91:65" pos:end="91:67">[<expr pos:start="91:66" pos:end="91:66"><name pos:start="91:66" pos:end="91:66">i</name></expr>]</index></name><operator pos:start="91:68" pos:end="91:69">-&gt;</operator><name pos:start="91:70" pos:end="91:73">data</name> <operator pos:start="91:75" pos:end="91:75">+</operator> <literal type="number" pos:start="91:77" pos:end="91:77">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:57"><expr pos:start="93:9" pos:end="93:56"><name pos:start="93:9" pos:end="93:25"><name pos:start="93:9" pos:end="93:11">pic</name><operator pos:start="93:12" pos:end="93:13">-&gt;</operator><name pos:start="93:14" pos:end="93:22">ref_index</name><index pos:start="93:23" pos:end="93:25">[<expr pos:start="93:24" pos:end="93:24"><name pos:start="93:24" pos:end="93:24">i</name></expr>]</index></name>  <operator pos:start="93:28" pos:end="93:28">=</operator> <name pos:start="93:30" pos:end="93:50"><name pos:start="93:30" pos:end="93:32">pic</name><operator pos:start="93:33" pos:end="93:34">-&gt;</operator><name pos:start="93:35" pos:end="93:47">ref_index_buf</name><index pos:start="93:48" pos:end="93:50">[<expr pos:start="93:49" pos:end="93:49"><name pos:start="93:49" pos:end="93:49">i</name></expr>]</index></name><operator pos:start="93:51" pos:end="93:52">-&gt;</operator><name pos:start="93:53" pos:end="93:56">data</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="99:5" pos:end="99:13">return <expr pos:start="99:12" pos:end="99:12"><literal type="number" pos:start="99:12" pos:end="99:12">0</literal></expr>;</return>

<label pos:start="101:1" pos:end="101:5"><name pos:start="101:1" pos:end="101:4">fail</name>:</label>

    <expr_stmt pos:start="103:5" pos:end="103:26"><expr pos:start="103:5" pos:end="103:25"><call pos:start="103:5" pos:end="103:25"><name pos:start="103:5" pos:end="103:17">unref_picture</name><argument_list pos:start="103:18" pos:end="103:25">(<argument pos:start="103:19" pos:end="103:19"><expr pos:start="103:19" pos:end="103:19"><name pos:start="103:19" pos:end="103:19">h</name></expr></argument>, <argument pos:start="103:22" pos:end="103:24"><expr pos:start="103:22" pos:end="103:24"><name pos:start="103:22" pos:end="103:24">pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="105:5" pos:end="105:45">return <expr pos:start="105:12" pos:end="105:44"><ternary pos:start="105:12" pos:end="105:44"><condition pos:start="105:12" pos:end="105:22"><expr pos:start="105:12" pos:end="105:20"><operator pos:start="105:12" pos:end="105:12">(</operator><name pos:start="105:13" pos:end="105:15">ret</name> <operator pos:start="105:17" pos:end="105:17">&lt;</operator> <literal type="number" pos:start="105:19" pos:end="105:19">0</literal><operator pos:start="105:20" pos:end="105:20">)</operator></expr> ?</condition><then pos:start="105:24" pos:end="105:26"> <expr pos:start="105:24" pos:end="105:26"><name pos:start="105:24" pos:end="105:26">ret</name></expr> </then><else pos:start="105:28" pos:end="105:44">: <expr pos:start="105:30" pos:end="105:44"><call pos:start="105:30" pos:end="105:44"><name pos:start="105:30" pos:end="105:36">AVERROR</name><argument_list pos:start="105:37" pos:end="105:44">(<argument pos:start="105:38" pos:end="105:43"><expr pos:start="105:38" pos:end="105:43"><name pos:start="105:38" pos:end="105:43">ENOMEM</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</return>

</block_content>}</block></function>
</unit>
