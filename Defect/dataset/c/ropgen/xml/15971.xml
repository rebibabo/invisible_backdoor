<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15971.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:22">cpu_signal_handler</name><parameter_list pos:start="1:23" pos:end="3:37">(<parameter pos:start="1:24" pos:end="1:38"><decl pos:start="1:24" pos:end="1:38"><type pos:start="1:24" pos:end="1:38"><name pos:start="1:24" pos:end="1:26">int</name></type> <name pos:start="1:28" pos:end="1:38">host_signum</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:51"><decl pos:start="1:41" pos:end="1:51"><type pos:start="1:41" pos:end="1:51"><name pos:start="1:41" pos:end="1:44">void</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">pinfo</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:36"><decl pos:start="3:28" pos:end="3:36"><type pos:start="3:28" pos:end="3:36"><name pos:start="3:28" pos:end="3:31">void</name> <modifier pos:start="3:33" pos:end="3:33">*</modifier></type><name pos:start="3:34" pos:end="3:36">puc</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="55:1">{<block_content pos:start="7:5" pos:end="53:56">

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">siginfo_t</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:19">info</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27">pinfo</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">ucontext_t</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:18">uc</name> <init pos:start="9:20" pos:end="9:24">= <expr pos:start="9:22" pos:end="9:24"><name pos:start="9:22" pos:end="9:24">puc</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:41"><decl pos:start="11:5" pos:end="11:40"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">uint32_t</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:16">pc</name> <init pos:start="11:18" pos:end="11:40">= <expr pos:start="11:20" pos:end="11:40"><name pos:start="11:20" pos:end="11:40"><name pos:start="11:20" pos:end="11:21">uc</name><operator pos:start="11:22" pos:end="11:23">-&gt;</operator><name pos:start="11:24" pos:end="11:34">uc_mcontext</name><operator pos:start="11:35" pos:end="11:35">.</operator><name pos:start="11:36" pos:end="11:40">sc_pc</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:17">insn</name> <init pos:start="13:19" pos:end="13:23">= <expr pos:start="13:21" pos:end="13:23"><operator pos:start="13:21" pos:end="13:21">*</operator><name pos:start="13:22" pos:end="13:23">pc</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:16">is_write</name> <init pos:start="15:18" pos:end="15:20">= <expr pos:start="15:20" pos:end="15:20"><literal type="number" pos:start="15:20" pos:end="15:20">0</literal></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:57">/* XXX: need kernel patch to get write flag faster */</comment>

    <switch pos:start="21:5" pos:end="47:5">switch <condition pos:start="21:12" pos:end="21:23">(<expr pos:start="21:13" pos:end="21:22"><name pos:start="21:13" pos:end="21:16">insn</name> <operator pos:start="21:18" pos:end="21:19">&gt;&gt;</operator> <literal type="number" pos:start="21:21" pos:end="21:22">26</literal></expr>)</condition> <block pos:start="21:25" pos:end="47:5">{<block_content pos:start="23:5" pos:end="45:21">

    <case pos:start="23:5" pos:end="23:14">case <expr pos:start="23:10" pos:end="23:13"><literal type="number" pos:start="23:10" pos:end="23:13">0x0d</literal></expr>:</case> <comment type="block" pos:start="23:16" pos:end="23:24">/* stw */</comment>

    <case pos:start="25:5" pos:end="25:14">case <expr pos:start="25:10" pos:end="25:13"><literal type="number" pos:start="25:10" pos:end="25:13">0x0e</literal></expr>:</case> <comment type="block" pos:start="25:16" pos:end="25:24">/* stb */</comment>

    <case pos:start="27:5" pos:end="27:14">case <expr pos:start="27:10" pos:end="27:13"><literal type="number" pos:start="27:10" pos:end="27:13">0x0f</literal></expr>:</case> <comment type="block" pos:start="27:16" pos:end="27:26">/* stq_u */</comment>

    <case pos:start="29:5" pos:end="29:14">case <expr pos:start="29:10" pos:end="29:13"><literal type="number" pos:start="29:10" pos:end="29:13">0x24</literal></expr>:</case> <comment type="block" pos:start="29:16" pos:end="29:24">/* stf */</comment>

    <case pos:start="31:5" pos:end="31:14">case <expr pos:start="31:10" pos:end="31:13"><literal type="number" pos:start="31:10" pos:end="31:13">0x25</literal></expr>:</case> <comment type="block" pos:start="31:16" pos:end="31:24">/* stg */</comment>

    <case pos:start="33:5" pos:end="33:14">case <expr pos:start="33:10" pos:end="33:13"><literal type="number" pos:start="33:10" pos:end="33:13">0x26</literal></expr>:</case> <comment type="block" pos:start="33:16" pos:end="33:24">/* sts */</comment>

    <case pos:start="35:5" pos:end="35:14">case <expr pos:start="35:10" pos:end="35:13"><literal type="number" pos:start="35:10" pos:end="35:13">0x27</literal></expr>:</case> <comment type="block" pos:start="35:16" pos:end="35:24">/* stt */</comment>

    <case pos:start="37:5" pos:end="37:14">case <expr pos:start="37:10" pos:end="37:13"><literal type="number" pos:start="37:10" pos:end="37:13">0x2c</literal></expr>:</case> <comment type="block" pos:start="37:16" pos:end="37:24">/* stl */</comment>

    <case pos:start="39:5" pos:end="39:14">case <expr pos:start="39:10" pos:end="39:13"><literal type="number" pos:start="39:10" pos:end="39:13">0x2d</literal></expr>:</case> <comment type="block" pos:start="39:16" pos:end="39:24">/* stq */</comment>

    <case pos:start="41:5" pos:end="41:14">case <expr pos:start="41:10" pos:end="41:13"><literal type="number" pos:start="41:10" pos:end="41:13">0x2e</literal></expr>:</case> <comment type="block" pos:start="41:16" pos:end="41:26">/* stl_c */</comment>

    <case pos:start="43:5" pos:end="43:14">case <expr pos:start="43:10" pos:end="43:13"><literal type="number" pos:start="43:10" pos:end="43:13">0x2f</literal></expr>:</case> <comment type="block" pos:start="43:16" pos:end="43:26">/* stq_c */</comment>

        <expr_stmt pos:start="45:9" pos:end="45:21"><expr pos:start="45:9" pos:end="45:20"><name pos:start="45:9" pos:end="45:16">is_write</name> <operator pos:start="45:18" pos:end="45:18">=</operator> <literal type="number" pos:start="45:20" pos:end="45:20">1</literal></expr>;</expr_stmt>

    </block_content>}</block></switch>



    <return pos:start="51:5" pos:end="53:56">return <expr pos:start="51:12" pos:end="53:55"><call pos:start="51:12" pos:end="53:55"><name pos:start="51:12" pos:end="51:28">handle_cpu_signal</name><argument_list pos:start="51:29" pos:end="53:55">(<argument pos:start="51:30" pos:end="51:31"><expr pos:start="51:30" pos:end="51:31"><name pos:start="51:30" pos:end="51:31">pc</name></expr></argument>, <argument pos:start="51:34" pos:end="51:61"><expr pos:start="51:34" pos:end="51:61"><operator pos:start="51:34" pos:end="51:34">(</operator><name pos:start="51:35" pos:end="51:42">unsigned</name> <name pos:start="51:44" pos:end="51:47">long</name><operator pos:start="51:48" pos:end="51:48">)</operator><name pos:start="51:49" pos:end="51:61"><name pos:start="51:49" pos:end="51:52">info</name><operator pos:start="51:53" pos:end="51:54">-&gt;</operator><name pos:start="51:55" pos:end="51:61">si_addr</name></name></expr></argument>,

                             <argument pos:start="53:30" pos:end="53:37"><expr pos:start="53:30" pos:end="53:37"><name pos:start="53:30" pos:end="53:37">is_write</name></expr></argument>, <argument pos:start="53:40" pos:end="53:54"><expr pos:start="53:40" pos:end="53:54"><operator pos:start="53:40" pos:end="53:40">&amp;</operator><name pos:start="53:41" pos:end="53:54"><name pos:start="53:41" pos:end="53:42">uc</name><operator pos:start="53:43" pos:end="53:44">-&gt;</operator><name pos:start="53:45" pos:end="53:54">uc_sigmask</name></name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
