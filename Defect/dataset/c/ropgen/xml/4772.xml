<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4772.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">encode_exponents_blk_ch</name><parameter_list pos:start="1:36" pos:end="5:60">(<parameter pos:start="1:37" pos:end="1:48"><decl pos:start="1:37" pos:end="1:48"><type pos:start="1:37" pos:end="1:48"><name pos:start="1:37" pos:end="1:43">uint8_t</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">exp</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:47"><decl pos:start="3:37" pos:end="3:47"><type pos:start="3:37" pos:end="3:47"><name pos:start="3:37" pos:end="3:39">int</name></type> <name pos:start="3:41" pos:end="3:47">nb_exps</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:65"><decl pos:start="3:50" pos:end="3:65"><type pos:start="3:50" pos:end="3:65"><name pos:start="3:50" pos:end="3:52">int</name></type> <name pos:start="3:54" pos:end="3:65">exp_strategy</name></decl></parameter>,

                                    <parameter pos:start="5:37" pos:end="5:59"><decl pos:start="5:37" pos:end="5:59"><type pos:start="5:37" pos:end="5:59"><name pos:start="5:37" pos:end="5:43">uint8_t</name> <modifier pos:start="5:45" pos:end="5:45">*</modifier></type><name pos:start="5:46" pos:end="5:59">num_exp_groups</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="91:1">{<block_content pos:start="9:5" pos:end="89:5">

    <decl_stmt pos:start="9:5" pos:end="9:48"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:18">group_size</name></decl>, <decl pos:start="9:21" pos:end="9:29"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:21" pos:end="9:29">nb_groups</name></decl>, <decl pos:start="9:32" pos:end="9:32"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:32" pos:end="9:32">i</name></decl>, <decl pos:start="9:35" pos:end="9:35"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:35" pos:end="9:35">j</name></decl>, <decl pos:start="9:38" pos:end="9:38"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:38" pos:end="9:38">k</name></decl>, <decl pos:start="9:41" pos:end="9:47"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:41" pos:end="9:47">exp_min</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:58"><expr pos:start="13:5" pos:end="13:57"><name pos:start="13:5" pos:end="13:14">group_size</name> <operator pos:start="13:16" pos:end="13:16">=</operator> <name pos:start="13:18" pos:end="13:29">exp_strategy</name> <operator pos:start="13:31" pos:end="13:31">+</operator> <operator pos:start="13:33" pos:end="13:33">(</operator><name pos:start="13:34" pos:end="13:45">exp_strategy</name> <operator pos:start="13:47" pos:end="13:48">==</operator> <name pos:start="13:50" pos:end="13:56">EXP_D45</name><operator pos:start="13:57" pos:end="13:57">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:74"><expr pos:start="15:5" pos:end="15:73"><operator pos:start="15:5" pos:end="15:5">*</operator><name pos:start="15:6" pos:end="15:19">num_exp_groups</name> <operator pos:start="15:21" pos:end="15:21">=</operator> <operator pos:start="15:23" pos:end="15:23">(</operator><name pos:start="15:24" pos:end="15:30">nb_exps</name> <operator pos:start="15:32" pos:end="15:32">+</operator> <operator pos:start="15:34" pos:end="15:34">(</operator><name pos:start="15:35" pos:end="15:44">group_size</name> <operator pos:start="15:46" pos:end="15:46">*</operator> <literal type="number" pos:start="15:48" pos:end="15:48">3</literal><operator pos:start="15:49" pos:end="15:49">)</operator> <operator pos:start="15:51" pos:end="15:51">-</operator> <literal type="number" pos:start="15:53" pos:end="15:53">4</literal><operator pos:start="15:54" pos:end="15:54">)</operator> <operator pos:start="15:56" pos:end="15:56">/</operator> <operator pos:start="15:58" pos:end="15:58">(</operator><literal type="number" pos:start="15:59" pos:end="15:59">3</literal> <operator pos:start="15:61" pos:end="15:61">*</operator> <name pos:start="15:63" pos:end="15:72">group_size</name><operator pos:start="15:73" pos:end="15:73">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:36"><expr pos:start="17:5" pos:end="17:35"><name pos:start="17:5" pos:end="17:13">nb_groups</name> <operator pos:start="17:15" pos:end="17:15">=</operator> <operator pos:start="17:17" pos:end="17:17">*</operator><name pos:start="17:18" pos:end="17:31">num_exp_groups</name> <operator pos:start="17:33" pos:end="17:33">*</operator> <literal type="number" pos:start="17:35" pos:end="17:35">3</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:54">/* for each group, compute the minimum exponent */</comment>

    <if_stmt pos:start="23:5" pos:end="47:5"><if pos:start="23:5" pos:end="47:5">if <condition pos:start="23:8" pos:end="23:31">(<expr pos:start="23:9" pos:end="23:30"><name pos:start="23:9" pos:end="23:20">exp_strategy</name> <operator pos:start="23:22" pos:end="23:22">&gt;</operator> <name pos:start="23:24" pos:end="23:30">EXP_D15</name></expr>)</condition> <block pos:start="23:33" pos:end="47:5">{<block_content pos:start="25:5" pos:end="45:5">

    <expr_stmt pos:start="25:5" pos:end="25:10"><expr pos:start="25:5" pos:end="25:9"><name pos:start="25:5" pos:end="25:5">k</name> <operator pos:start="25:7" pos:end="25:7">=</operator> <literal type="number" pos:start="25:9" pos:end="25:9">1</literal></expr>;</expr_stmt>

    <for pos:start="27:5" pos:end="45:5">for <control pos:start="27:9" pos:end="27:36">(<init pos:start="27:10" pos:end="27:15"><expr pos:start="27:10" pos:end="27:14"><name pos:start="27:10" pos:end="27:10">i</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <literal type="number" pos:start="27:14" pos:end="27:14">1</literal></expr>;</init> <condition pos:start="27:17" pos:end="27:31"><expr pos:start="27:17" pos:end="27:30"><name pos:start="27:17" pos:end="27:17">i</name> <operator pos:start="27:19" pos:end="27:20">&lt;=</operator> <name pos:start="27:22" pos:end="27:30">nb_groups</name></expr>;</condition> <incr pos:start="27:33" pos:end="27:35"><expr pos:start="27:33" pos:end="27:35"><name pos:start="27:33" pos:end="27:33">i</name><operator pos:start="27:34" pos:end="27:35">++</operator></expr></incr>)</control> <block pos:start="27:38" pos:end="45:5">{<block_content pos:start="29:9" pos:end="43:24">

        <expr_stmt pos:start="29:9" pos:end="29:25"><expr pos:start="29:9" pos:end="29:24"><name pos:start="29:9" pos:end="29:15">exp_min</name> <operator pos:start="29:17" pos:end="29:17">=</operator> <name pos:start="29:19" pos:end="29:24"><name pos:start="29:19" pos:end="29:21">exp</name><index pos:start="29:22" pos:end="29:24">[<expr pos:start="29:23" pos:end="29:23"><name pos:start="29:23" pos:end="29:23">k</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:46"><expr pos:start="31:9" pos:end="31:45"><call pos:start="31:9" pos:end="31:45"><name pos:start="31:9" pos:end="31:14">assert</name><argument_list pos:start="31:15" pos:end="31:45">(<argument pos:start="31:16" pos:end="31:44"><expr pos:start="31:16" pos:end="31:44"><name pos:start="31:16" pos:end="31:22">exp_min</name> <operator pos:start="31:24" pos:end="31:25">&gt;=</operator> <literal type="number" pos:start="31:27" pos:end="31:27">0</literal> <operator pos:start="31:29" pos:end="31:30">&amp;&amp;</operator> <name pos:start="31:32" pos:end="31:38">exp_min</name> <operator pos:start="31:40" pos:end="31:41">&lt;=</operator> <literal type="number" pos:start="31:43" pos:end="31:44">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="33:9" pos:end="39:9">for <control pos:start="33:13" pos:end="33:40">(<init pos:start="33:14" pos:end="33:19"><expr pos:start="33:14" pos:end="33:18"><name pos:start="33:14" pos:end="33:14">j</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <literal type="number" pos:start="33:18" pos:end="33:18">1</literal></expr>;</init> <condition pos:start="33:21" pos:end="33:35"><expr pos:start="33:21" pos:end="33:34"><name pos:start="33:21" pos:end="33:21">j</name> <operator pos:start="33:23" pos:end="33:23">&lt;</operator> <name pos:start="33:25" pos:end="33:34">group_size</name></expr>;</condition> <incr pos:start="33:37" pos:end="33:39"><expr pos:start="33:37" pos:end="33:39"><name pos:start="33:37" pos:end="33:37">j</name><operator pos:start="33:38" pos:end="33:39">++</operator></expr></incr>)</control> <block pos:start="33:42" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:35">

            <if_stmt pos:start="35:13" pos:end="37:35"><if pos:start="35:13" pos:end="37:35">if <condition pos:start="35:16" pos:end="35:35">(<expr pos:start="35:17" pos:end="35:34"><name pos:start="35:17" pos:end="35:24"><name pos:start="35:17" pos:end="35:19">exp</name><index pos:start="35:20" pos:end="35:24">[<expr pos:start="35:21" pos:end="35:23"><name pos:start="35:21" pos:end="35:21">k</name><operator pos:start="35:22" pos:end="35:22">+</operator><name pos:start="35:23" pos:end="35:23">j</name></expr>]</index></name> <operator pos:start="35:26" pos:end="35:26">&lt;</operator> <name pos:start="35:28" pos:end="35:34">exp_min</name></expr>)</condition><block type="pseudo" pos:start="37:17" pos:end="37:35"><block_content pos:start="37:17" pos:end="37:35">

                <expr_stmt pos:start="37:17" pos:end="37:35"><expr pos:start="37:17" pos:end="37:34"><name pos:start="37:17" pos:end="37:23">exp_min</name> <operator pos:start="37:25" pos:end="37:25">=</operator> <name pos:start="37:27" pos:end="37:34"><name pos:start="37:27" pos:end="37:29">exp</name><index pos:start="37:30" pos:end="37:34">[<expr pos:start="37:31" pos:end="37:33"><name pos:start="37:31" pos:end="37:31">k</name><operator pos:start="37:32" pos:end="37:32">+</operator><name pos:start="37:33" pos:end="37:33">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="41:9" pos:end="41:25"><expr pos:start="41:9" pos:end="41:24"><name pos:start="41:9" pos:end="41:14"><name pos:start="41:9" pos:end="41:11">exp</name><index pos:start="41:12" pos:end="41:14">[<expr pos:start="41:13" pos:end="41:13"><name pos:start="41:13" pos:end="41:13">i</name></expr>]</index></name> <operator pos:start="41:16" pos:end="41:16">=</operator> <name pos:start="41:18" pos:end="41:24">exp_min</name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:24"><expr pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:9">k</name> <operator pos:start="43:11" pos:end="43:12">+=</operator> <name pos:start="43:14" pos:end="43:23">group_size</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="51:5" pos:end="51:36">/* constraint for DC exponent */</comment>

    <if_stmt pos:start="53:5" pos:end="55:20"><if pos:start="53:5" pos:end="55:20">if <condition pos:start="53:8" pos:end="53:20">(<expr pos:start="53:9" pos:end="53:19"><name pos:start="53:9" pos:end="53:14"><name pos:start="53:9" pos:end="53:11">exp</name><index pos:start="53:12" pos:end="53:14">[<expr pos:start="53:13" pos:end="53:13"><literal type="number" pos:start="53:13" pos:end="53:13">0</literal></expr>]</index></name> <operator pos:start="53:16" pos:end="53:16">&gt;</operator> <literal type="number" pos:start="53:18" pos:end="53:19">15</literal></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:20"><block_content pos:start="55:9" pos:end="55:20">

        <expr_stmt pos:start="55:9" pos:end="55:20"><expr pos:start="55:9" pos:end="55:19"><name pos:start="55:9" pos:end="55:14"><name pos:start="55:9" pos:end="55:11">exp</name><index pos:start="55:12" pos:end="55:14">[<expr pos:start="55:13" pos:end="55:13"><literal type="number" pos:start="55:13" pos:end="55:13">0</literal></expr>]</index></name> <operator pos:start="55:16" pos:end="55:16">=</operator> <literal type="number" pos:start="55:18" pos:end="55:19">15</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="59:5" pos:end="61:32">/* decrease the delta between each groups to within 2 so that they can be

       differentially encoded */</comment>

    <for pos:start="63:5" pos:end="65:45">for <control pos:start="63:9" pos:end="63:36">(<init pos:start="63:10" pos:end="63:15"><expr pos:start="63:10" pos:end="63:14"><name pos:start="63:10" pos:end="63:10">i</name> <operator pos:start="63:12" pos:end="63:12">=</operator> <literal type="number" pos:start="63:14" pos:end="63:14">1</literal></expr>;</init> <condition pos:start="63:17" pos:end="63:31"><expr pos:start="63:17" pos:end="63:30"><name pos:start="63:17" pos:end="63:17">i</name> <operator pos:start="63:19" pos:end="63:20">&lt;=</operator> <name pos:start="63:22" pos:end="63:30">nb_groups</name></expr>;</condition> <incr pos:start="63:33" pos:end="63:35"><expr pos:start="63:33" pos:end="63:35"><name pos:start="63:33" pos:end="63:33">i</name><operator pos:start="63:34" pos:end="63:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="65:9" pos:end="65:45"><block_content pos:start="65:9" pos:end="65:45">

        <expr_stmt pos:start="65:9" pos:end="65:45"><expr pos:start="65:9" pos:end="65:44"><name pos:start="65:9" pos:end="65:14"><name pos:start="65:9" pos:end="65:11">exp</name><index pos:start="65:12" pos:end="65:14">[<expr pos:start="65:13" pos:end="65:13"><name pos:start="65:13" pos:end="65:13">i</name></expr>]</index></name> <operator pos:start="65:16" pos:end="65:16">=</operator> <call pos:start="65:18" pos:end="65:44"><name pos:start="65:18" pos:end="65:22">FFMIN</name><argument_list pos:start="65:23" pos:end="65:44">(<argument pos:start="65:24" pos:end="65:29"><expr pos:start="65:24" pos:end="65:29"><name pos:start="65:24" pos:end="65:29"><name pos:start="65:24" pos:end="65:26">exp</name><index pos:start="65:27" pos:end="65:29">[<expr pos:start="65:28" pos:end="65:28"><name pos:start="65:28" pos:end="65:28">i</name></expr>]</index></name></expr></argument>, <argument pos:start="65:32" pos:end="65:43"><expr pos:start="65:32" pos:end="65:43"><name pos:start="65:32" pos:end="65:39"><name pos:start="65:32" pos:end="65:34">exp</name><index pos:start="65:35" pos:end="65:39">[<expr pos:start="65:36" pos:end="65:38"><name pos:start="65:36" pos:end="65:36">i</name><operator pos:start="65:37" pos:end="65:37">-</operator><literal type="number" pos:start="65:38" pos:end="65:38">1</literal></expr>]</index></name> <operator pos:start="65:41" pos:end="65:41">+</operator> <literal type="number" pos:start="65:43" pos:end="65:43">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <for pos:start="67:5" pos:end="69:45">for <control pos:start="67:9" pos:end="67:38">(<init pos:start="67:10" pos:end="67:25"><expr pos:start="67:10" pos:end="67:24"><name pos:start="67:10" pos:end="67:10">i</name> <operator pos:start="67:12" pos:end="67:12">=</operator> <name pos:start="67:14" pos:end="67:22">nb_groups</name><operator pos:start="67:23" pos:end="67:23">-</operator><literal type="number" pos:start="67:24" pos:end="67:24">1</literal></expr>;</init> <condition pos:start="67:27" pos:end="67:33"><expr pos:start="67:27" pos:end="67:32"><name pos:start="67:27" pos:end="67:27">i</name> <operator pos:start="67:29" pos:end="67:30">&gt;=</operator> <literal type="number" pos:start="67:32" pos:end="67:32">0</literal></expr>;</condition> <incr pos:start="67:35" pos:end="67:37"><expr pos:start="67:35" pos:end="67:37"><name pos:start="67:35" pos:end="67:35">i</name><operator pos:start="67:36" pos:end="67:37">--</operator></expr></incr>)</control><block type="pseudo" pos:start="69:9" pos:end="69:45"><block_content pos:start="69:9" pos:end="69:45">

        <expr_stmt pos:start="69:9" pos:end="69:45"><expr pos:start="69:9" pos:end="69:44"><name pos:start="69:9" pos:end="69:14"><name pos:start="69:9" pos:end="69:11">exp</name><index pos:start="69:12" pos:end="69:14">[<expr pos:start="69:13" pos:end="69:13"><name pos:start="69:13" pos:end="69:13">i</name></expr>]</index></name> <operator pos:start="69:16" pos:end="69:16">=</operator> <call pos:start="69:18" pos:end="69:44"><name pos:start="69:18" pos:end="69:22">FFMIN</name><argument_list pos:start="69:23" pos:end="69:44">(<argument pos:start="69:24" pos:end="69:29"><expr pos:start="69:24" pos:end="69:29"><name pos:start="69:24" pos:end="69:29"><name pos:start="69:24" pos:end="69:26">exp</name><index pos:start="69:27" pos:end="69:29">[<expr pos:start="69:28" pos:end="69:28"><name pos:start="69:28" pos:end="69:28">i</name></expr>]</index></name></expr></argument>, <argument pos:start="69:32" pos:end="69:43"><expr pos:start="69:32" pos:end="69:43"><name pos:start="69:32" pos:end="69:39"><name pos:start="69:32" pos:end="69:34">exp</name><index pos:start="69:35" pos:end="69:39">[<expr pos:start="69:36" pos:end="69:38"><name pos:start="69:36" pos:end="69:36">i</name><operator pos:start="69:37" pos:end="69:37">+</operator><literal type="number" pos:start="69:38" pos:end="69:38">1</literal></expr>]</index></name> <operator pos:start="69:41" pos:end="69:41">+</operator> <literal type="number" pos:start="69:43" pos:end="69:43">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <comment type="block" pos:start="73:5" pos:end="73:62">/* now we have the exponent values the decoder will see */</comment>

    <if_stmt pos:start="75:5" pos:end="89:5"><if pos:start="75:5" pos:end="89:5">if <condition pos:start="75:8" pos:end="75:31">(<expr pos:start="75:9" pos:end="75:30"><name pos:start="75:9" pos:end="75:20">exp_strategy</name> <operator pos:start="75:22" pos:end="75:22">&gt;</operator> <name pos:start="75:24" pos:end="75:30">EXP_D15</name></expr>)</condition> <block pos:start="75:33" pos:end="89:5">{<block_content pos:start="77:5" pos:end="87:5">

    <expr_stmt pos:start="77:5" pos:end="77:31"><expr pos:start="77:5" pos:end="77:30"><name pos:start="77:5" pos:end="77:5">k</name> <operator pos:start="77:7" pos:end="77:7">=</operator> <name pos:start="77:9" pos:end="77:17">nb_groups</name> <operator pos:start="77:19" pos:end="77:19">*</operator> <name pos:start="77:21" pos:end="77:30">group_size</name></expr>;</expr_stmt>

    <for pos:start="79:5" pos:end="87:5">for <control pos:start="79:9" pos:end="79:35">(<init pos:start="79:10" pos:end="79:23"><expr pos:start="79:10" pos:end="79:22"><name pos:start="79:10" pos:end="79:10">i</name> <operator pos:start="79:12" pos:end="79:12">=</operator> <name pos:start="79:14" pos:end="79:22">nb_groups</name></expr>;</init> <condition pos:start="79:25" pos:end="79:30"><expr pos:start="79:25" pos:end="79:29"><name pos:start="79:25" pos:end="79:25">i</name> <operator pos:start="79:27" pos:end="79:27">&gt;</operator> <literal type="number" pos:start="79:29" pos:end="79:29">0</literal></expr>;</condition> <incr pos:start="79:32" pos:end="79:34"><expr pos:start="79:32" pos:end="79:34"><name pos:start="79:32" pos:end="79:32">i</name><operator pos:start="79:33" pos:end="79:34">--</operator></expr></incr>)</control> <block pos:start="79:37" pos:end="87:5">{<block_content pos:start="81:9" pos:end="85:24">

        <for pos:start="81:9" pos:end="83:30">for <control pos:start="81:13" pos:end="81:40">(<init pos:start="81:14" pos:end="81:19"><expr pos:start="81:14" pos:end="81:18"><name pos:start="81:14" pos:end="81:14">j</name> <operator pos:start="81:16" pos:end="81:16">=</operator> <literal type="number" pos:start="81:18" pos:end="81:18">0</literal></expr>;</init> <condition pos:start="81:21" pos:end="81:35"><expr pos:start="81:21" pos:end="81:34"><name pos:start="81:21" pos:end="81:21">j</name> <operator pos:start="81:23" pos:end="81:23">&lt;</operator> <name pos:start="81:25" pos:end="81:34">group_size</name></expr>;</condition> <incr pos:start="81:37" pos:end="81:39"><expr pos:start="81:37" pos:end="81:39"><name pos:start="81:37" pos:end="81:37">j</name><operator pos:start="81:38" pos:end="81:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="83:13" pos:end="83:30"><block_content pos:start="83:13" pos:end="83:30">

            <expr_stmt pos:start="83:13" pos:end="83:30"><expr pos:start="83:13" pos:end="83:29"><name pos:start="83:13" pos:end="83:20"><name pos:start="83:13" pos:end="83:15">exp</name><index pos:start="83:16" pos:end="83:20">[<expr pos:start="83:17" pos:end="83:19"><name pos:start="83:17" pos:end="83:17">k</name><operator pos:start="83:18" pos:end="83:18">-</operator><name pos:start="83:19" pos:end="83:19">j</name></expr>]</index></name> <operator pos:start="83:22" pos:end="83:22">=</operator> <name pos:start="83:24" pos:end="83:29"><name pos:start="83:24" pos:end="83:26">exp</name><index pos:start="83:27" pos:end="83:29">[<expr pos:start="83:28" pos:end="83:28"><name pos:start="83:28" pos:end="83:28">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="85:9" pos:end="85:24"><expr pos:start="85:9" pos:end="85:23"><name pos:start="85:9" pos:end="85:9">k</name> <operator pos:start="85:11" pos:end="85:12">-=</operator> <name pos:start="85:14" pos:end="85:23">group_size</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
