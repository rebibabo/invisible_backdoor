<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1886.c" pos:tabs="8"><function pos:start="1:1" pos:end="400:42"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">ioport_write</name><parameter_list pos:start="1:25" pos:end="3:53">(<parameter pos:start="1:26" pos:end="1:37"><decl pos:start="1:26" pos:end="1:37"><type pos:start="1:26" pos:end="1:37"><name pos:start="1:26" pos:end="1:29">void</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:37">opaque</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:62"><decl pos:start="1:40" pos:end="1:62"><type pos:start="1:40" pos:end="1:62"><name pos:start="1:40" pos:end="1:57">target_phys_addr_t</name></type> <name pos:start="1:59" pos:end="1:62">addr</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:37"><decl pos:start="3:26" pos:end="3:37"><type pos:start="3:26" pos:end="3:37"><name pos:start="3:26" pos:end="3:33">uint64_t</name></type> <name pos:start="3:35" pos:end="3:37">val</name></decl></parameter>, <parameter pos:start="3:40" pos:end="3:52"><decl pos:start="3:40" pos:end="3:52"><type pos:start="3:40" pos:end="3:52"><name pos:start="3:40" pos:end="3:47">unsigned</name></type> <name pos:start="3:49" pos:end="3:52">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="400:42">{<block_content pos:start="7:5" pos:end="400:42">

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">PCIQXLDevice</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:19">d</name> <init pos:start="7:21" pos:end="7:28">= <expr pos:start="7:23" pos:end="7:28"><name pos:start="7:23" pos:end="7:28">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:20">io_port</name> <init pos:start="9:22" pos:end="9:27">= <expr pos:start="9:24" pos:end="9:27"><name pos:start="9:24" pos:end="9:27">addr</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:16">qxl_async_io</name></type> <name pos:start="11:18" pos:end="11:22">async</name> <init pos:start="11:24" pos:end="11:33">= <expr pos:start="11:26" pos:end="11:33"><name pos:start="11:26" pos:end="11:33">QXL_SYNC</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:36"><decl pos:start="13:5" pos:end="13:35"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:25">orig_io_port</name> <init pos:start="13:27" pos:end="13:35">= <expr pos:start="13:29" pos:end="13:35"><name pos:start="13:29" pos:end="13:35">io_port</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="400:42"><if pos:start="17:5" pos:end="400:42">if <condition pos:start="17:8" pos:end="17:49">(<expr pos:start="17:9" pos:end="17:48"><name pos:start="17:9" pos:end="17:20"><name pos:start="17:9" pos:end="17:9">d</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:20">guest_bug</name></name> <operator pos:start="17:22" pos:end="17:23">&amp;&amp;</operator> <operator pos:start="17:25" pos:end="17:25">!</operator><name pos:start="17:26" pos:end="17:32">io_port</name> <operator pos:start="17:34" pos:end="17:35">==</operator> <name pos:start="17:37" pos:end="17:48">QXL_IO_RESET</name></expr>)</condition> <block pos:start="17:51" pos:end="400:42">{<block_content pos:start="19:9" pos:end="400:42">

        <return pos:start="19:9" pos:end="19:15">return;</return>




    <if_stmt pos:start="24:5" pos:end="400:42"><if pos:start="24:5" pos:end="400:42">if <condition pos:start="24:8" pos:end="26:47">(<expr pos:start="24:9" pos:end="26:46"><name pos:start="24:9" pos:end="24:19"><name pos:start="24:9" pos:end="24:9">d</name><operator pos:start="24:10" pos:end="24:11">-&gt;</operator><name pos:start="24:12" pos:end="24:19">revision</name></name> <operator pos:start="24:21" pos:end="24:22">&lt;=</operator> <name pos:start="24:24" pos:end="24:46">QXL_REVISION_STABLE_V10</name> <operator pos:start="24:48" pos:end="24:49">&amp;&amp;</operator>

        <name pos:start="26:9" pos:end="26:15">io_port</name> <operator pos:start="26:17" pos:end="26:18">&gt;=</operator> <name pos:start="26:20" pos:end="26:46">QXL_IO_FLUSH_SURFACES_ASYNC</name></expr>)</condition> <block pos:start="26:49" pos:end="400:42">{<block_content pos:start="28:9" pos:end="400:42">

        <expr_stmt pos:start="28:9" pos:end="30:34"><expr pos:start="28:9" pos:end="30:33"><call pos:start="28:9" pos:end="30:33"><name pos:start="28:9" pos:end="28:25">qxl_set_guest_bug</name><argument_list pos:start="28:26" pos:end="30:33">(<argument pos:start="28:27" pos:end="28:27"><expr pos:start="28:27" pos:end="28:27"><name pos:start="28:27" pos:end="28:27">d</name></expr></argument>, <argument pos:start="28:30" pos:end="28:66"><expr pos:start="28:30" pos:end="28:66"><literal type="string" pos:start="28:30" pos:end="28:66">"unsupported io %d for revision %d\n"</literal></expr></argument>,

            <argument pos:start="30:13" pos:end="30:19"><expr pos:start="30:13" pos:end="30:19"><name pos:start="30:13" pos:end="30:19">io_port</name></expr></argument>, <argument pos:start="30:22" pos:end="30:32"><expr pos:start="30:22" pos:end="30:32"><name pos:start="30:22" pos:end="30:32"><name pos:start="30:22" pos:end="30:22">d</name><operator pos:start="30:23" pos:end="30:24">-&gt;</operator><name pos:start="30:25" pos:end="30:32">revision</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="32:9" pos:end="32:15">return;</return>




    <switch pos:start="37:5" pos:end="400:42">switch <condition pos:start="37:12" pos:end="37:20">(<expr pos:start="37:13" pos:end="37:19"><name pos:start="37:13" pos:end="37:19">io_port</name></expr>)</condition> <block pos:start="37:22" pos:end="400:42">{<block_content pos:start="39:5" pos:end="400:42">

    <case pos:start="39:5" pos:end="39:22">case <expr pos:start="39:10" pos:end="39:21"><name pos:start="39:10" pos:end="39:21">QXL_IO_RESET</name></expr>:</case>

    <case pos:start="41:5" pos:end="41:25">case <expr pos:start="41:10" pos:end="41:24"><name pos:start="41:10" pos:end="41:24">QXL_IO_SET_MODE</name></expr>:</case>

    <case pos:start="43:5" pos:end="43:28">case <expr pos:start="43:10" pos:end="43:27"><name pos:start="43:10" pos:end="43:27">QXL_IO_MEMSLOT_ADD</name></expr>:</case>

    <case pos:start="45:5" pos:end="45:28">case <expr pos:start="45:10" pos:end="45:27"><name pos:start="45:10" pos:end="45:27">QXL_IO_MEMSLOT_DEL</name></expr>:</case>

    <case pos:start="47:5" pos:end="47:31">case <expr pos:start="47:10" pos:end="47:30"><name pos:start="47:10" pos:end="47:30">QXL_IO_CREATE_PRIMARY</name></expr>:</case>

    <case pos:start="49:5" pos:end="49:27">case <expr pos:start="49:10" pos:end="49:26"><name pos:start="49:10" pos:end="49:26">QXL_IO_UPDATE_IRQ</name></expr>:</case>

    <case pos:start="51:5" pos:end="51:20">case <expr pos:start="51:10" pos:end="51:19"><name pos:start="51:10" pos:end="51:19">QXL_IO_LOG</name></expr>:</case>

    <case pos:start="53:5" pos:end="53:34">case <expr pos:start="53:10" pos:end="53:33"><name pos:start="53:10" pos:end="53:33">QXL_IO_MEMSLOT_ADD_ASYNC</name></expr>:</case>

    <case pos:start="55:5" pos:end="55:37">case <expr pos:start="55:10" pos:end="55:36"><name pos:start="55:10" pos:end="55:36">QXL_IO_CREATE_PRIMARY_ASYNC</name></expr>:</case>


    <default pos:start="58:5" pos:end="58:12">default:</default>

        <if_stmt pos:start="60:9" pos:end="400:42"><if pos:start="60:9" pos:end="400:42">if <condition pos:start="60:12" pos:end="60:36">(<expr pos:start="60:13" pos:end="60:35"><name pos:start="60:13" pos:end="60:19"><name pos:start="60:13" pos:end="60:13">d</name><operator pos:start="60:14" pos:end="60:15">-&gt;</operator><name pos:start="60:16" pos:end="60:19">mode</name></name> <operator pos:start="60:21" pos:end="60:22">!=</operator> <name pos:start="60:24" pos:end="60:35">QXL_MODE_VGA</name></expr>)</condition> <block pos:start="60:38" pos:end="400:42">{<block_content pos:start="64:9" pos:end="400:42">



        <expr_stmt pos:start="64:9" pos:end="66:49"><expr pos:start="64:9" pos:end="66:48"><call pos:start="64:9" pos:end="66:48"><name pos:start="64:9" pos:end="64:40">trace_qxl_io_unexpected_vga_mode</name><argument_list pos:start="64:41" pos:end="66:48">(<argument pos:start="64:42" pos:end="64:46"><expr pos:start="64:42" pos:end="64:46"><name pos:start="64:42" pos:end="64:46"><name pos:start="64:42" pos:end="64:42">d</name><operator pos:start="64:43" pos:end="64:44">-&gt;</operator><name pos:start="64:45" pos:end="64:46">id</name></name></expr></argument>,

            <argument pos:start="66:13" pos:end="66:19"><expr pos:start="66:13" pos:end="66:19"><name pos:start="66:13" pos:end="66:19">io_port</name></expr></argument>, <argument pos:start="66:22" pos:end="66:47"><expr pos:start="66:22" pos:end="66:47"><call pos:start="66:22" pos:end="66:47"><name pos:start="66:22" pos:end="66:38">io_port_to_string</name><argument_list pos:start="66:39" pos:end="66:47">(<argument pos:start="66:40" pos:end="66:46"><expr pos:start="66:40" pos:end="66:46"><name pos:start="66:40" pos:end="66:46">io_port</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="68:9" pos:end="68:44">/* be nice to buggy guest drivers */</comment>

        <if_stmt pos:start="70:9" pos:end="400:42"><if pos:start="70:9" pos:end="400:42">if <condition pos:start="70:12" pos:end="72:40">(<expr pos:start="70:13" pos:end="72:39"><name pos:start="70:13" pos:end="70:19">io_port</name> <operator pos:start="70:21" pos:end="70:22">&gt;=</operator> <name pos:start="70:24" pos:end="70:47">QXL_IO_UPDATE_AREA_ASYNC</name> <operator pos:start="70:49" pos:end="70:50">&amp;&amp;</operator>

            <name pos:start="72:13" pos:end="72:19">io_port</name> <operator pos:start="72:21" pos:end="72:21">&lt;</operator> <name pos:start="72:23" pos:end="72:39">QXL_IO_RANGE_SIZE</name></expr>)</condition> <block pos:start="72:42" pos:end="400:42">{<block_content pos:start="74:13" pos:end="400:42">

            <expr_stmt pos:start="74:13" pos:end="74:53"><expr pos:start="74:13" pos:end="74:52"><call pos:start="74:13" pos:end="74:52"><name pos:start="74:13" pos:end="74:27">qxl_send_events</name><argument_list pos:start="74:28" pos:end="74:52">(<argument pos:start="74:29" pos:end="74:29"><expr pos:start="74:29" pos:end="74:29"><name pos:start="74:29" pos:end="74:29">d</name></expr></argument>, <argument pos:start="74:32" pos:end="74:51"><expr pos:start="74:32" pos:end="74:51"><name pos:start="74:32" pos:end="74:51">QXL_INTERRUPT_IO_CMD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


        <return pos:start="77:9" pos:end="77:15">return;</return>




    <comment type="block" pos:start="82:5" pos:end="82:69">/* we change the io_port to avoid ifdeffery in the main switch */</comment>

    <expr_stmt pos:start="84:5" pos:end="84:27"><expr pos:start="84:5" pos:end="84:26"><name pos:start="84:5" pos:end="84:16">orig_io_port</name> <operator pos:start="84:18" pos:end="84:18">=</operator> <name pos:start="84:20" pos:end="84:26">io_port</name></expr>;</expr_stmt>

    <switch pos:start="86:5" pos:end="400:42">switch <condition pos:start="86:12" pos:end="86:20">(<expr pos:start="86:13" pos:end="86:19"><name pos:start="86:13" pos:end="86:19">io_port</name></expr>)</condition> <block pos:start="86:22" pos:end="400:42">{<block_content pos:start="88:5" pos:end="400:42">

    <case pos:start="88:5" pos:end="88:34">case <expr pos:start="88:10" pos:end="88:33"><name pos:start="88:10" pos:end="88:33">QXL_IO_UPDATE_AREA_ASYNC</name></expr>:</case>

        <expr_stmt pos:start="90:9" pos:end="90:37"><expr pos:start="90:9" pos:end="90:36"><name pos:start="90:9" pos:end="90:15">io_port</name> <operator pos:start="90:17" pos:end="90:17">=</operator> <name pos:start="90:19" pos:end="90:36">QXL_IO_UPDATE_AREA</name></expr>;</expr_stmt>

        <goto pos:start="92:9" pos:end="92:26">goto <name pos:start="92:14" pos:end="92:25">async_common</name>;</goto>

    <case pos:start="94:5" pos:end="94:34">case <expr pos:start="94:10" pos:end="94:33"><name pos:start="94:10" pos:end="94:33">QXL_IO_MEMSLOT_ADD_ASYNC</name></expr>:</case>

        <expr_stmt pos:start="96:9" pos:end="96:37"><expr pos:start="96:9" pos:end="96:36"><name pos:start="96:9" pos:end="96:15">io_port</name> <operator pos:start="96:17" pos:end="96:17">=</operator> <name pos:start="96:19" pos:end="96:36">QXL_IO_MEMSLOT_ADD</name></expr>;</expr_stmt>

        <goto pos:start="98:9" pos:end="98:26">goto <name pos:start="98:14" pos:end="98:25">async_common</name>;</goto>

    <case pos:start="100:5" pos:end="100:37">case <expr pos:start="100:10" pos:end="100:36"><name pos:start="100:10" pos:end="100:36">QXL_IO_CREATE_PRIMARY_ASYNC</name></expr>:</case>

        <expr_stmt pos:start="102:9" pos:end="102:40"><expr pos:start="102:9" pos:end="102:39"><name pos:start="102:9" pos:end="102:15">io_port</name> <operator pos:start="102:17" pos:end="102:17">=</operator> <name pos:start="102:19" pos:end="102:39">QXL_IO_CREATE_PRIMARY</name></expr>;</expr_stmt>

        <goto pos:start="104:9" pos:end="104:26">goto <name pos:start="104:14" pos:end="104:25">async_common</name>;</goto>

    <case pos:start="106:5" pos:end="106:38">case <expr pos:start="106:10" pos:end="106:37"><name pos:start="106:10" pos:end="106:37">QXL_IO_DESTROY_PRIMARY_ASYNC</name></expr>:</case>

        <expr_stmt pos:start="108:9" pos:end="108:41"><expr pos:start="108:9" pos:end="108:40"><name pos:start="108:9" pos:end="108:15">io_port</name> <operator pos:start="108:17" pos:end="108:17">=</operator> <name pos:start="108:19" pos:end="108:40">QXL_IO_DESTROY_PRIMARY</name></expr>;</expr_stmt>

        <goto pos:start="110:9" pos:end="110:26">goto <name pos:start="110:14" pos:end="110:25">async_common</name>;</goto>

    <case pos:start="112:5" pos:end="112:38">case <expr pos:start="112:10" pos:end="112:37"><name pos:start="112:10" pos:end="112:37">QXL_IO_DESTROY_SURFACE_ASYNC</name></expr>:</case>

        <expr_stmt pos:start="114:9" pos:end="114:46"><expr pos:start="114:9" pos:end="114:45"><name pos:start="114:9" pos:end="114:15">io_port</name> <operator pos:start="114:17" pos:end="114:17">=</operator> <name pos:start="114:19" pos:end="114:45">QXL_IO_DESTROY_SURFACE_WAIT</name></expr>;</expr_stmt>

        <goto pos:start="116:9" pos:end="116:26">goto <name pos:start="116:14" pos:end="116:25">async_common</name>;</goto>

    <case pos:start="118:5" pos:end="118:43">case <expr pos:start="118:10" pos:end="118:42"><name pos:start="118:10" pos:end="118:42">QXL_IO_DESTROY_ALL_SURFACES_ASYNC</name></expr>:</case>

        <expr_stmt pos:start="120:9" pos:end="120:46"><expr pos:start="120:9" pos:end="120:45"><name pos:start="120:9" pos:end="120:15">io_port</name> <operator pos:start="120:17" pos:end="120:17">=</operator> <name pos:start="120:19" pos:end="120:45">QXL_IO_DESTROY_ALL_SURFACES</name></expr>;</expr_stmt>

        <goto pos:start="122:9" pos:end="122:26">goto <name pos:start="122:14" pos:end="122:25">async_common</name>;</goto>

    <case pos:start="124:5" pos:end="124:37">case <expr pos:start="124:10" pos:end="124:36"><name pos:start="124:10" pos:end="124:36">QXL_IO_FLUSH_SURFACES_ASYNC</name></expr>:</case>

    <case pos:start="126:5" pos:end="126:38">case <expr pos:start="126:10" pos:end="126:37"><name pos:start="126:10" pos:end="126:37">QXL_IO_MONITORS_CONFIG_ASYNC</name></expr>:</case>

<label pos:start="128:1" pos:end="128:13"><name pos:start="128:1" pos:end="128:12">async_common</name>:</label>

        <expr_stmt pos:start="130:9" pos:end="130:26"><expr pos:start="130:9" pos:end="130:25"><name pos:start="130:9" pos:end="130:13">async</name> <operator pos:start="130:15" pos:end="130:15">=</operator> <name pos:start="130:17" pos:end="130:25">QXL_ASYNC</name></expr>;</expr_stmt>

        <expr_stmt pos:start="132:9" pos:end="132:40"><expr pos:start="132:9" pos:end="132:39"><call pos:start="132:9" pos:end="132:39"><name pos:start="132:9" pos:end="132:23">qemu_mutex_lock</name><argument_list pos:start="132:24" pos:end="132:39">(<argument pos:start="132:25" pos:end="132:38"><expr pos:start="132:25" pos:end="132:38"><operator pos:start="132:25" pos:end="132:25">&amp;</operator><name pos:start="132:26" pos:end="132:38"><name pos:start="132:26" pos:end="132:26">d</name><operator pos:start="132:27" pos:end="132:28">-&gt;</operator><name pos:start="132:29" pos:end="132:38">async_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="134:9" pos:end="400:42"><if pos:start="134:9" pos:end="400:42">if <condition pos:start="134:12" pos:end="134:49">(<expr pos:start="134:13" pos:end="134:48"><name pos:start="134:13" pos:end="134:28"><name pos:start="134:13" pos:end="134:13">d</name><operator pos:start="134:14" pos:end="134:15">-&gt;</operator><name pos:start="134:16" pos:end="134:28">current_async</name></name> <operator pos:start="134:30" pos:end="134:31">!=</operator> <name pos:start="134:33" pos:end="134:48">QXL_UNDEFINED_IO</name></expr>)</condition> <block pos:start="134:51" pos:end="400:42">{<block_content pos:start="136:13" pos:end="400:42">

            <expr_stmt pos:start="136:13" pos:end="138:43"><expr pos:start="136:13" pos:end="138:42"><call pos:start="136:13" pos:end="138:42"><name pos:start="136:13" pos:end="136:29">qxl_set_guest_bug</name><argument_list pos:start="136:30" pos:end="138:42">(<argument pos:start="136:31" pos:end="136:31"><expr pos:start="136:31" pos:end="136:31"><name pos:start="136:31" pos:end="136:31">d</name></expr></argument>, <argument pos:start="136:34" pos:end="136:77"><expr pos:start="136:34" pos:end="136:77"><literal type="string" pos:start="136:34" pos:end="136:77">"%d async started before last (%d) complete"</literal></expr></argument>,

                <argument pos:start="138:17" pos:end="138:23"><expr pos:start="138:17" pos:end="138:23"><name pos:start="138:17" pos:end="138:23">io_port</name></expr></argument>, <argument pos:start="138:26" pos:end="138:41"><expr pos:start="138:26" pos:end="138:41"><name pos:start="138:26" pos:end="138:41"><name pos:start="138:26" pos:end="138:26">d</name><operator pos:start="138:27" pos:end="138:28">-&gt;</operator><name pos:start="138:29" pos:end="138:41">current_async</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="140:13" pos:end="140:46"><expr pos:start="140:13" pos:end="140:45"><call pos:start="140:13" pos:end="140:45"><name pos:start="140:13" pos:end="140:29">qemu_mutex_unlock</name><argument_list pos:start="140:30" pos:end="140:45">(<argument pos:start="140:31" pos:end="140:44"><expr pos:start="140:31" pos:end="140:44"><operator pos:start="140:31" pos:end="140:31">&amp;</operator><name pos:start="140:32" pos:end="140:44"><name pos:start="140:32" pos:end="140:32">d</name><operator pos:start="140:33" pos:end="140:34">-&gt;</operator><name pos:start="140:35" pos:end="140:44">async_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="142:13" pos:end="142:19">return;</return>


        <expr_stmt pos:start="145:9" pos:end="145:40"><expr pos:start="145:9" pos:end="145:39"><name pos:start="145:9" pos:end="145:24"><name pos:start="145:9" pos:end="145:9">d</name><operator pos:start="145:10" pos:end="145:11">-&gt;</operator><name pos:start="145:12" pos:end="145:24">current_async</name></name> <operator pos:start="145:26" pos:end="145:26">=</operator> <name pos:start="145:28" pos:end="145:39">orig_io_port</name></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:42"><expr pos:start="147:9" pos:end="147:41"><call pos:start="147:9" pos:end="147:41"><name pos:start="147:9" pos:end="147:25">qemu_mutex_unlock</name><argument_list pos:start="147:26" pos:end="147:41">(<argument pos:start="147:27" pos:end="147:40"><expr pos:start="147:27" pos:end="147:40"><operator pos:start="147:27" pos:end="147:27">&amp;</operator><name pos:start="147:28" pos:end="147:40"><name pos:start="147:28" pos:end="147:28">d</name><operator pos:start="147:29" pos:end="147:30">-&gt;</operator><name pos:start="147:31" pos:end="147:40">async_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <default pos:start="150:5" pos:end="150:12">default:</default>



    <expr_stmt pos:start="154:5" pos:end="156:30"><expr pos:start="154:5" pos:end="156:29"><call pos:start="154:5" pos:end="156:29"><name pos:start="154:5" pos:end="154:22">trace_qxl_io_write</name><argument_list pos:start="154:23" pos:end="156:29">(<argument pos:start="154:24" pos:end="154:28"><expr pos:start="154:24" pos:end="154:28"><name pos:start="154:24" pos:end="154:28"><name pos:start="154:24" pos:end="154:24">d</name><operator pos:start="154:25" pos:end="154:26">-&gt;</operator><name pos:start="154:27" pos:end="154:28">id</name></name></expr></argument>, <argument pos:start="154:31" pos:end="154:57"><expr pos:start="154:31" pos:end="154:57"><call pos:start="154:31" pos:end="154:57"><name pos:start="154:31" pos:end="154:48">qxl_mode_to_string</name><argument_list pos:start="154:49" pos:end="154:57">(<argument pos:start="154:50" pos:end="154:56"><expr pos:start="154:50" pos:end="154:56"><name pos:start="154:50" pos:end="154:56"><name pos:start="154:50" pos:end="154:50">d</name><operator pos:start="154:51" pos:end="154:52">-&gt;</operator><name pos:start="154:53" pos:end="154:56">mode</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="154:60" pos:end="154:63"><expr pos:start="154:60" pos:end="154:63"><name pos:start="154:60" pos:end="154:63">addr</name></expr></argument>, <argument pos:start="154:66" pos:end="154:68"><expr pos:start="154:66" pos:end="154:68"><name pos:start="154:66" pos:end="154:68">val</name></expr></argument>, <argument pos:start="154:71" pos:end="154:74"><expr pos:start="154:71" pos:end="154:74"><name pos:start="154:71" pos:end="154:74">size</name></expr></argument>,

                       <argument pos:start="156:24" pos:end="156:28"><expr pos:start="156:24" pos:end="156:28"><name pos:start="156:24" pos:end="156:28">async</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="160:5" pos:end="400:42">switch <condition pos:start="160:12" pos:end="160:20">(<expr pos:start="160:13" pos:end="160:19"><name pos:start="160:13" pos:end="160:19">io_port</name></expr>)</condition> <block pos:start="160:22" pos:end="400:42">{<block_content pos:start="162:5" pos:end="400:42">

    <case pos:start="162:5" pos:end="162:28">case <expr pos:start="162:10" pos:end="162:27"><name pos:start="162:10" pos:end="162:27">QXL_IO_UPDATE_AREA</name></expr>:</case>

    <block pos:start="164:5" pos:end="400:42">{<block_content pos:start="166:9" pos:end="400:42">

        <decl_stmt pos:start="166:9" pos:end="166:33"><decl pos:start="166:9" pos:end="166:32"><type pos:start="166:9" pos:end="166:19"><name pos:start="166:9" pos:end="166:17">QXLCookie</name> <modifier pos:start="166:19" pos:end="166:19">*</modifier></type><name pos:start="166:20" pos:end="166:25">cookie</name> <init pos:start="166:27" pos:end="166:32">= <expr pos:start="166:29" pos:end="166:32"><name pos:start="166:29" pos:end="166:32">NULL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="168:9" pos:end="168:45"><decl pos:start="168:9" pos:end="168:44"><type pos:start="168:9" pos:end="168:15"><name pos:start="168:9" pos:end="168:15">QXLRect</name></type> <name pos:start="168:17" pos:end="168:22">update</name> <init pos:start="168:24" pos:end="168:44">= <expr pos:start="168:26" pos:end="168:44"><name pos:start="168:26" pos:end="168:44"><name pos:start="168:26" pos:end="168:26">d</name><operator pos:start="168:27" pos:end="168:28">-&gt;</operator><name pos:start="168:29" pos:end="168:31">ram</name><operator pos:start="168:32" pos:end="168:33">-&gt;</operator><name pos:start="168:34" pos:end="168:44">update_area</name></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="172:9" pos:end="400:42"><if pos:start="172:9" pos:end="400:42">if <condition pos:start="172:12" pos:end="172:57">(<expr pos:start="172:13" pos:end="172:56"><name pos:start="172:13" pos:end="172:34"><name pos:start="172:13" pos:end="172:13">d</name><operator pos:start="172:14" pos:end="172:15">-&gt;</operator><name pos:start="172:16" pos:end="172:18">ram</name><operator pos:start="172:19" pos:end="172:20">-&gt;</operator><name pos:start="172:21" pos:end="172:34">update_surface</name></name> <operator pos:start="172:36" pos:end="172:36">&gt;</operator> <name pos:start="172:38" pos:end="172:56"><name pos:start="172:38" pos:end="172:38">d</name><operator pos:start="172:39" pos:end="172:40">-&gt;</operator><name pos:start="172:41" pos:end="172:43">ssd</name><operator pos:start="172:44" pos:end="172:44">.</operator><name pos:start="172:45" pos:end="172:56">num_surfaces</name></name></expr>)</condition> <block pos:start="172:59" pos:end="400:42">{<block_content pos:start="174:13" pos:end="400:42">

            <expr_stmt pos:start="174:13" pos:end="176:54"><expr pos:start="174:13" pos:end="176:53"><call pos:start="174:13" pos:end="176:53"><name pos:start="174:13" pos:end="174:29">qxl_set_guest_bug</name><argument_list pos:start="174:30" pos:end="176:53">(<argument pos:start="174:31" pos:end="174:31"><expr pos:start="174:31" pos:end="174:31"><name pos:start="174:31" pos:end="174:31">d</name></expr></argument>, <argument pos:start="174:34" pos:end="174:78"><expr pos:start="174:34" pos:end="174:78"><literal type="string" pos:start="174:34" pos:end="174:78">"QXL_IO_UPDATE_AREA: invalid surface id %d\n"</literal></expr></argument>,

                              <argument pos:start="176:31" pos:end="176:52"><expr pos:start="176:31" pos:end="176:52"><name pos:start="176:31" pos:end="176:52"><name pos:start="176:31" pos:end="176:31">d</name><operator pos:start="176:32" pos:end="176:33">-&gt;</operator><name pos:start="176:34" pos:end="176:36">ram</name><operator pos:start="176:37" pos:end="176:38">-&gt;</operator><name pos:start="176:39" pos:end="176:52">update_surface</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="178:13" pos:end="178:19">return;</return>


        <if_stmt pos:start="181:9" pos:end="400:42"><if pos:start="181:9" pos:end="400:42">if <condition pos:start="181:12" pos:end="181:71">(<expr pos:start="181:13" pos:end="181:70"><name pos:start="181:13" pos:end="181:23"><name pos:start="181:13" pos:end="181:18">update</name><operator pos:start="181:19" pos:end="181:19">.</operator><name pos:start="181:20" pos:end="181:23">left</name></name> <operator pos:start="181:25" pos:end="181:26">&gt;=</operator> <name pos:start="181:28" pos:end="181:39"><name pos:start="181:28" pos:end="181:33">update</name><operator pos:start="181:34" pos:end="181:34">.</operator><name pos:start="181:35" pos:end="181:39">right</name></name> <operator pos:start="181:41" pos:end="181:42">||</operator> <name pos:start="181:44" pos:end="181:53"><name pos:start="181:44" pos:end="181:49">update</name><operator pos:start="181:50" pos:end="181:50">.</operator><name pos:start="181:51" pos:end="181:53">top</name></name> <operator pos:start="181:55" pos:end="181:56">&gt;=</operator> <name pos:start="181:58" pos:end="181:70"><name pos:start="181:58" pos:end="181:63">update</name><operator pos:start="181:64" pos:end="181:64">.</operator><name pos:start="181:65" pos:end="181:70">bottom</name></name></expr>)</condition> <block pos:start="181:73" pos:end="400:42">{<block_content pos:start="183:13" pos:end="400:42">

            <expr_stmt pos:start="183:13" pos:end="187:74"><expr pos:start="183:13" pos:end="187:73"><call pos:start="183:13" pos:end="187:73"><name pos:start="183:13" pos:end="183:29">qxl_set_guest_bug</name><argument_list pos:start="183:30" pos:end="187:73">(<argument pos:start="183:31" pos:end="183:31"><expr pos:start="183:31" pos:end="183:31"><name pos:start="183:31" pos:end="183:31">d</name></expr></argument>,

                    <argument pos:start="185:21" pos:end="185:72"><expr pos:start="185:21" pos:end="185:72"><literal type="string" pos:start="185:21" pos:end="185:72">"QXL_IO_UPDATE_AREA: invalid area (%ux%u)x(%ux%u)\n"</literal></expr></argument>,

                    <argument pos:start="187:21" pos:end="187:31"><expr pos:start="187:21" pos:end="187:31"><name pos:start="187:21" pos:end="187:31"><name pos:start="187:21" pos:end="187:26">update</name><operator pos:start="187:27" pos:end="187:27">.</operator><name pos:start="187:28" pos:end="187:31">left</name></name></expr></argument>, <argument pos:start="187:34" pos:end="187:43"><expr pos:start="187:34" pos:end="187:43"><name pos:start="187:34" pos:end="187:43"><name pos:start="187:34" pos:end="187:39">update</name><operator pos:start="187:40" pos:end="187:40">.</operator><name pos:start="187:41" pos:end="187:43">top</name></name></expr></argument>, <argument pos:start="187:46" pos:end="187:57"><expr pos:start="187:46" pos:end="187:57"><name pos:start="187:46" pos:end="187:57"><name pos:start="187:46" pos:end="187:51">update</name><operator pos:start="187:52" pos:end="187:52">.</operator><name pos:start="187:53" pos:end="187:57">right</name></name></expr></argument>, <argument pos:start="187:60" pos:end="187:72"><expr pos:start="187:60" pos:end="187:72"><name pos:start="187:60" pos:end="187:72"><name pos:start="187:60" pos:end="187:65">update</name><operator pos:start="187:66" pos:end="187:66">.</operator><name pos:start="187:67" pos:end="187:72">bottom</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="189:13" pos:end="189:19">return;</return>











        <if_stmt pos:start="201:9" pos:end="400:42"><if pos:start="201:9" pos:end="400:42">if <condition pos:start="201:12" pos:end="201:31">(<expr pos:start="201:13" pos:end="201:30"><name pos:start="201:13" pos:end="201:17">async</name> <operator pos:start="201:19" pos:end="201:20">==</operator> <name pos:start="201:22" pos:end="201:30">QXL_ASYNC</name></expr>)</condition> <block pos:start="201:33" pos:end="400:42">{<block_content pos:start="203:13" pos:end="400:42">

            <expr_stmt pos:start="203:13" pos:end="205:62"><expr pos:start="203:13" pos:end="205:61"><name pos:start="203:13" pos:end="203:18">cookie</name> <operator pos:start="203:20" pos:end="203:20">=</operator> <call pos:start="203:22" pos:end="205:61"><name pos:start="203:22" pos:end="203:35">qxl_cookie_new</name><argument_list pos:start="203:36" pos:end="205:61">(<argument pos:start="203:37" pos:end="203:54"><expr pos:start="203:37" pos:end="203:54"><name pos:start="203:37" pos:end="203:54">QXL_COOKIE_TYPE_IO</name></expr></argument>,

                                    <argument pos:start="205:37" pos:end="205:60"><expr pos:start="205:37" pos:end="205:60"><name pos:start="205:37" pos:end="205:60">QXL_IO_UPDATE_AREA_ASYNC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:36"><expr pos:start="207:13" pos:end="207:35"><name pos:start="207:13" pos:end="207:26"><name pos:start="207:13" pos:end="207:18">cookie</name><operator pos:start="207:19" pos:end="207:20">-&gt;</operator><name pos:start="207:21" pos:end="207:21">u</name><operator pos:start="207:22" pos:end="207:22">.</operator><name pos:start="207:23" pos:end="207:26">area</name></name> <operator pos:start="207:28" pos:end="207:28">=</operator> <name pos:start="207:30" pos:end="207:35">update</name></expr>;</expr_stmt>


        <expr_stmt pos:start="210:9" pos:end="214:57"><expr pos:start="210:9" pos:end="214:56"><call pos:start="210:9" pos:end="214:56"><name pos:start="210:9" pos:end="210:29">qxl_spice_update_area</name><argument_list pos:start="210:30" pos:end="214:56">(<argument pos:start="210:31" pos:end="210:31"><expr pos:start="210:31" pos:end="210:31"><name pos:start="210:31" pos:end="210:31">d</name></expr></argument>, <argument pos:start="210:34" pos:end="210:55"><expr pos:start="210:34" pos:end="210:55"><name pos:start="210:34" pos:end="210:55"><name pos:start="210:34" pos:end="210:34">d</name><operator pos:start="210:35" pos:end="210:36">-&gt;</operator><name pos:start="210:37" pos:end="210:39">ram</name><operator pos:start="210:40" pos:end="210:41">-&gt;</operator><name pos:start="210:42" pos:end="210:55">update_surface</name></name></expr></argument>,

                              <argument pos:start="212:31" pos:end="212:64"><expr pos:start="212:31" pos:end="212:64"><ternary pos:start="212:31" pos:end="212:64"><condition pos:start="212:31" pos:end="212:38"><expr pos:start="212:31" pos:end="212:36"><name pos:start="212:31" pos:end="212:36">cookie</name></expr> ?</condition><then pos:start="212:40" pos:end="212:54"> <expr pos:start="212:40" pos:end="212:54"><operator pos:start="212:40" pos:end="212:40">&amp;</operator><name pos:start="212:41" pos:end="212:54"><name pos:start="212:41" pos:end="212:46">cookie</name><operator pos:start="212:47" pos:end="212:48">-&gt;</operator><name pos:start="212:49" pos:end="212:49">u</name><operator pos:start="212:50" pos:end="212:50">.</operator><name pos:start="212:51" pos:end="212:54">area</name></name></expr> </then><else pos:start="212:56" pos:end="212:64">: <expr pos:start="212:58" pos:end="212:64"><operator pos:start="212:58" pos:end="212:58">&amp;</operator><name pos:start="212:59" pos:end="212:64">update</name></expr></else></ternary></expr></argument>,

                              <argument pos:start="214:31" pos:end="214:34"><expr pos:start="214:31" pos:end="214:34"><name pos:start="214:31" pos:end="214:34">NULL</name></expr></argument>, <argument pos:start="214:37" pos:end="214:37"><expr pos:start="214:37" pos:end="214:37"><literal type="number" pos:start="214:37" pos:end="214:37">0</literal></expr></argument>, <argument pos:start="214:40" pos:end="214:40"><expr pos:start="214:40" pos:end="214:40"><literal type="number" pos:start="214:40" pos:end="214:40">0</literal></expr></argument>, <argument pos:start="214:43" pos:end="214:47"><expr pos:start="214:43" pos:end="214:47"><name pos:start="214:43" pos:end="214:47">async</name></expr></argument>, <argument pos:start="214:50" pos:end="214:55"><expr pos:start="214:50" pos:end="214:55"><name pos:start="214:50" pos:end="214:55">cookie</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <case pos:start="218:5" pos:end="218:27">case <expr pos:start="218:10" pos:end="218:26"><name pos:start="218:10" pos:end="218:26">QXL_IO_NOTIFY_CMD</name></expr>:</case>

        <expr_stmt pos:start="220:9" pos:end="220:35"><expr pos:start="220:9" pos:end="220:34"><call pos:start="220:9" pos:end="220:34"><name pos:start="220:9" pos:end="220:25">qemu_spice_wakeup</name><argument_list pos:start="220:26" pos:end="220:34">(<argument pos:start="220:27" pos:end="220:33"><expr pos:start="220:27" pos:end="220:33"><operator pos:start="220:27" pos:end="220:27">&amp;</operator><name pos:start="220:28" pos:end="220:33"><name pos:start="220:28" pos:end="220:28">d</name><operator pos:start="220:29" pos:end="220:30">-&gt;</operator><name pos:start="220:31" pos:end="220:33">ssd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <case pos:start="223:5" pos:end="223:30">case <expr pos:start="223:10" pos:end="223:29"><name pos:start="223:10" pos:end="223:29">QXL_IO_NOTIFY_CURSOR</name></expr>:</case>

        <expr_stmt pos:start="225:9" pos:end="225:35"><expr pos:start="225:9" pos:end="225:34"><call pos:start="225:9" pos:end="225:34"><name pos:start="225:9" pos:end="225:25">qemu_spice_wakeup</name><argument_list pos:start="225:26" pos:end="225:34">(<argument pos:start="225:27" pos:end="225:33"><expr pos:start="225:27" pos:end="225:33"><operator pos:start="225:27" pos:end="225:27">&amp;</operator><name pos:start="225:28" pos:end="225:33"><name pos:start="225:28" pos:end="225:28">d</name><operator pos:start="225:29" pos:end="225:30">-&gt;</operator><name pos:start="225:31" pos:end="225:33">ssd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <case pos:start="228:5" pos:end="228:27">case <expr pos:start="228:10" pos:end="228:26"><name pos:start="228:10" pos:end="228:26">QXL_IO_UPDATE_IRQ</name></expr>:</case>

        <expr_stmt pos:start="230:9" pos:end="230:26"><expr pos:start="230:9" pos:end="230:25"><call pos:start="230:9" pos:end="230:25"><name pos:start="230:9" pos:end="230:22">qxl_update_irq</name><argument_list pos:start="230:23" pos:end="230:25">(<argument pos:start="230:24" pos:end="230:24"><expr pos:start="230:24" pos:end="230:24"><name pos:start="230:24" pos:end="230:24">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <case pos:start="233:5" pos:end="233:27">case <expr pos:start="233:10" pos:end="233:26"><name pos:start="233:10" pos:end="233:26">QXL_IO_NOTIFY_OOM</name></expr>:</case>

        <if_stmt pos:start="235:9" pos:end="400:42"><if pos:start="235:9" pos:end="400:42">if <condition pos:start="235:12" pos:end="235:56">(<expr pos:start="235:13" pos:end="235:55"><operator pos:start="235:13" pos:end="235:13">!</operator><call pos:start="235:14" pos:end="235:55"><name pos:start="235:14" pos:end="235:32">SPICE_RING_IS_EMPTY</name><argument_list pos:start="235:33" pos:end="235:55">(<argument pos:start="235:34" pos:end="235:54"><expr pos:start="235:34" pos:end="235:54"><operator pos:start="235:34" pos:end="235:34">&amp;</operator><name pos:start="235:35" pos:end="235:54"><name pos:start="235:35" pos:end="235:35">d</name><operator pos:start="235:36" pos:end="235:37">-&gt;</operator><name pos:start="235:38" pos:end="235:40">ram</name><operator pos:start="235:41" pos:end="235:42">-&gt;</operator><name pos:start="235:43" pos:end="235:54">release_ring</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="235:58" pos:end="400:42">{<block_content pos:start="239:9" pos:end="400:42">



        <expr_stmt pos:start="239:9" pos:end="239:27"><expr pos:start="239:9" pos:end="239:26"><name pos:start="239:9" pos:end="239:22"><name pos:start="239:9" pos:end="239:9">d</name><operator pos:start="239:10" pos:end="239:11">-&gt;</operator><name pos:start="239:12" pos:end="239:22">oom_running</name></name> <operator pos:start="239:24" pos:end="239:24">=</operator> <literal type="number" pos:start="239:26" pos:end="239:26">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="241:9" pos:end="241:25"><expr pos:start="241:9" pos:end="241:24"><call pos:start="241:9" pos:end="241:24"><name pos:start="241:9" pos:end="241:21">qxl_spice_oom</name><argument_list pos:start="241:22" pos:end="241:24">(<argument pos:start="241:23" pos:end="241:23"><expr pos:start="241:23" pos:end="241:23"><name pos:start="241:23" pos:end="241:23">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="243:9" pos:end="243:27"><expr pos:start="243:9" pos:end="243:26"><name pos:start="243:9" pos:end="243:22"><name pos:start="243:9" pos:end="243:9">d</name><operator pos:start="243:10" pos:end="243:11">-&gt;</operator><name pos:start="243:12" pos:end="243:22">oom_running</name></name> <operator pos:start="243:24" pos:end="243:24">=</operator> <literal type="number" pos:start="243:26" pos:end="243:26">0</literal></expr>;</expr_stmt>


    <case pos:start="246:5" pos:end="246:25">case <expr pos:start="246:10" pos:end="246:24"><name pos:start="246:10" pos:end="246:24">QXL_IO_SET_MODE</name></expr>:</case>

        <expr_stmt pos:start="248:9" pos:end="248:32"><expr pos:start="248:9" pos:end="248:31"><call pos:start="248:9" pos:end="248:31"><name pos:start="248:9" pos:end="248:20">qxl_set_mode</name><argument_list pos:start="248:21" pos:end="248:31">(<argument pos:start="248:22" pos:end="248:22"><expr pos:start="248:22" pos:end="248:22"><name pos:start="248:22" pos:end="248:22">d</name></expr></argument>, <argument pos:start="248:25" pos:end="248:27"><expr pos:start="248:25" pos:end="248:27"><name pos:start="248:25" pos:end="248:27">val</name></expr></argument>, <argument pos:start="248:30" pos:end="248:30"><expr pos:start="248:30" pos:end="248:30"><literal type="number" pos:start="248:30" pos:end="248:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <case pos:start="251:5" pos:end="251:20">case <expr pos:start="251:10" pos:end="251:19"><name pos:start="251:10" pos:end="251:19">QXL_IO_LOG</name></expr>:</case>

        <if_stmt pos:start="253:9" pos:end="400:42"><if pos:start="253:9" pos:end="400:42">if <condition pos:start="253:12" pos:end="253:26">(<expr pos:start="253:13" pos:end="253:25"><name pos:start="253:13" pos:end="253:25"><name pos:start="253:13" pos:end="253:13">d</name><operator pos:start="253:14" pos:end="253:15">-&gt;</operator><name pos:start="253:16" pos:end="253:25">guestdebug</name></name></expr>)</condition> <block pos:start="253:28" pos:end="400:42">{<block_content pos:start="255:13" pos:end="400:42">

            <expr_stmt pos:start="255:13" pos:end="257:66"><expr pos:start="255:13" pos:end="257:65"><call pos:start="255:13" pos:end="257:65"><name pos:start="255:13" pos:end="255:19">fprintf</name><argument_list pos:start="255:20" pos:end="257:65">(<argument pos:start="255:21" pos:end="255:26"><expr pos:start="255:21" pos:end="255:26"><name pos:start="255:21" pos:end="255:26">stderr</name></expr></argument>, <argument pos:start="255:29" pos:end="255:59"><expr pos:start="255:29" pos:end="255:59"><literal type="string" pos:start="255:29" pos:end="255:45">"qxl/guest-%d: %"</literal> <name pos:start="255:47" pos:end="255:52">PRId64</name> <literal type="string" pos:start="255:54" pos:end="255:59">": %s"</literal></expr></argument>, <argument pos:start="255:62" pos:end="255:66"><expr pos:start="255:62" pos:end="255:66"><name pos:start="255:62" pos:end="255:66"><name pos:start="255:62" pos:end="255:62">d</name><operator pos:start="255:63" pos:end="255:64">-&gt;</operator><name pos:start="255:65" pos:end="255:66">id</name></name></expr></argument>,

                    <argument pos:start="257:21" pos:end="257:47"><expr pos:start="257:21" pos:end="257:47"><call pos:start="257:21" pos:end="257:47"><name pos:start="257:21" pos:end="257:37">qemu_get_clock_ns</name><argument_list pos:start="257:38" pos:end="257:47">(<argument pos:start="257:39" pos:end="257:46"><expr pos:start="257:39" pos:end="257:46"><name pos:start="257:39" pos:end="257:46">vm_clock</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="257:50" pos:end="257:64"><expr pos:start="257:50" pos:end="257:64"><name pos:start="257:50" pos:end="257:64"><name pos:start="257:50" pos:end="257:50">d</name><operator pos:start="257:51" pos:end="257:52">-&gt;</operator><name pos:start="257:53" pos:end="257:55">ram</name><operator pos:start="257:56" pos:end="257:57">-&gt;</operator><name pos:start="257:58" pos:end="257:64">log_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <case pos:start="261:5" pos:end="261:22">case <expr pos:start="261:10" pos:end="261:21"><name pos:start="261:10" pos:end="261:21">QXL_IO_RESET</name></expr>:</case>

        <expr_stmt pos:start="263:9" pos:end="263:29"><expr pos:start="263:9" pos:end="263:28"><call pos:start="263:9" pos:end="263:28"><name pos:start="263:9" pos:end="263:22">qxl_hard_reset</name><argument_list pos:start="263:23" pos:end="263:28">(<argument pos:start="263:24" pos:end="263:24"><expr pos:start="263:24" pos:end="263:24"><name pos:start="263:24" pos:end="263:24">d</name></expr></argument>, <argument pos:start="263:27" pos:end="263:27"><expr pos:start="263:27" pos:end="263:27"><literal type="number" pos:start="263:27" pos:end="263:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <case pos:start="266:5" pos:end="266:28">case <expr pos:start="266:10" pos:end="266:27"><name pos:start="266:10" pos:end="266:27">QXL_IO_MEMSLOT_ADD</name></expr>:</case>

        <if_stmt pos:start="268:9" pos:end="400:42"><if pos:start="268:9" pos:end="400:42">if <condition pos:start="268:12" pos:end="268:32">(<expr pos:start="268:13" pos:end="268:31"><name pos:start="268:13" pos:end="268:15">val</name> <operator pos:start="268:17" pos:end="268:18">&gt;=</operator> <name pos:start="268:20" pos:end="268:31">NUM_MEMSLOTS</name></expr>)</condition> <block pos:start="268:34" pos:end="400:42">{<block_content pos:start="270:13" pos:end="400:42">

            <expr_stmt pos:start="270:13" pos:end="270:73"><expr pos:start="270:13" pos:end="270:72"><call pos:start="270:13" pos:end="270:72"><name pos:start="270:13" pos:end="270:29">qxl_set_guest_bug</name><argument_list pos:start="270:30" pos:end="270:72">(<argument pos:start="270:31" pos:end="270:31"><expr pos:start="270:31" pos:end="270:31"><name pos:start="270:31" pos:end="270:31">d</name></expr></argument>, <argument pos:start="270:34" pos:end="270:71"><expr pos:start="270:34" pos:end="270:71"><literal type="string" pos:start="270:34" pos:end="270:71">"QXL_IO_MEMSLOT_ADD: val out of range"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="274:9" pos:end="400:42"><if pos:start="274:9" pos:end="400:42">if <condition pos:start="274:12" pos:end="274:39">(<expr pos:start="274:13" pos:end="274:38"><name pos:start="274:13" pos:end="274:31"><name pos:start="274:13" pos:end="274:13">d</name><operator pos:start="274:14" pos:end="274:15">-&gt;</operator><name pos:start="274:16" pos:end="274:26">guest_slots</name><index pos:start="274:27" pos:end="274:31">[<expr pos:start="274:28" pos:end="274:30"><name pos:start="274:28" pos:end="274:30">val</name></expr>]</index></name><operator pos:start="274:32" pos:end="274:32">.</operator><name pos:start="274:33" pos:end="274:38">active</name></expr>)</condition> <block pos:start="274:41" pos:end="400:42">{<block_content pos:start="276:13" pos:end="400:42">

            <expr_stmt pos:start="276:13" pos:end="278:74"><expr pos:start="276:13" pos:end="278:73"><call pos:start="276:13" pos:end="278:73"><name pos:start="276:13" pos:end="276:29">qxl_set_guest_bug</name><argument_list pos:start="276:30" pos:end="278:73">(<argument pos:start="276:31" pos:end="276:31"><expr pos:start="276:31" pos:end="276:31"><name pos:start="276:31" pos:end="276:31">d</name></expr></argument>,

                        <argument pos:start="278:25" pos:end="278:72"><expr pos:start="278:25" pos:end="278:72"><literal type="string" pos:start="278:25" pos:end="278:72">"QXL_IO_MEMSLOT_ADD: memory slot already active"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="282:9" pos:end="282:52"><expr pos:start="282:9" pos:end="282:51"><name pos:start="282:9" pos:end="282:27"><name pos:start="282:9" pos:end="282:9">d</name><operator pos:start="282:10" pos:end="282:11">-&gt;</operator><name pos:start="282:12" pos:end="282:22">guest_slots</name><index pos:start="282:23" pos:end="282:27">[<expr pos:start="282:24" pos:end="282:26"><name pos:start="282:24" pos:end="282:26">val</name></expr>]</index></name><operator pos:start="282:28" pos:end="282:28">.</operator><name pos:start="282:29" pos:end="282:32">slot</name> <operator pos:start="282:34" pos:end="282:34">=</operator> <name pos:start="282:36" pos:end="282:51"><name pos:start="282:36" pos:end="282:36">d</name><operator pos:start="282:37" pos:end="282:38">-&gt;</operator><name pos:start="282:39" pos:end="282:41">ram</name><operator pos:start="282:42" pos:end="282:43">-&gt;</operator><name pos:start="282:44" pos:end="282:51">mem_slot</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="284:9" pos:end="284:42"><expr pos:start="284:9" pos:end="284:41"><call pos:start="284:9" pos:end="284:41"><name pos:start="284:9" pos:end="284:23">qxl_add_memslot</name><argument_list pos:start="284:24" pos:end="284:41">(<argument pos:start="284:25" pos:end="284:25"><expr pos:start="284:25" pos:end="284:25"><name pos:start="284:25" pos:end="284:25">d</name></expr></argument>, <argument pos:start="284:28" pos:end="284:30"><expr pos:start="284:28" pos:end="284:30"><name pos:start="284:28" pos:end="284:30">val</name></expr></argument>, <argument pos:start="284:33" pos:end="284:33"><expr pos:start="284:33" pos:end="284:33"><literal type="number" pos:start="284:33" pos:end="284:33">0</literal></expr></argument>, <argument pos:start="284:36" pos:end="284:40"><expr pos:start="284:36" pos:end="284:40"><name pos:start="284:36" pos:end="284:40">async</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <case pos:start="287:5" pos:end="287:28">case <expr pos:start="287:10" pos:end="287:27"><name pos:start="287:10" pos:end="287:27">QXL_IO_MEMSLOT_DEL</name></expr>:</case>

        <if_stmt pos:start="289:9" pos:end="400:42"><if pos:start="289:9" pos:end="400:42">if <condition pos:start="289:12" pos:end="289:32">(<expr pos:start="289:13" pos:end="289:31"><name pos:start="289:13" pos:end="289:15">val</name> <operator pos:start="289:17" pos:end="289:18">&gt;=</operator> <name pos:start="289:20" pos:end="289:31">NUM_MEMSLOTS</name></expr>)</condition> <block pos:start="289:34" pos:end="400:42">{<block_content pos:start="291:13" pos:end="400:42">

            <expr_stmt pos:start="291:13" pos:end="291:73"><expr pos:start="291:13" pos:end="291:72"><call pos:start="291:13" pos:end="291:72"><name pos:start="291:13" pos:end="291:29">qxl_set_guest_bug</name><argument_list pos:start="291:30" pos:end="291:72">(<argument pos:start="291:31" pos:end="291:31"><expr pos:start="291:31" pos:end="291:31"><name pos:start="291:31" pos:end="291:31">d</name></expr></argument>, <argument pos:start="291:34" pos:end="291:71"><expr pos:start="291:34" pos:end="291:71"><literal type="string" pos:start="291:34" pos:end="291:71">"QXL_IO_MEMSLOT_DEL: val out of range"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="295:9" pos:end="295:32"><expr pos:start="295:9" pos:end="295:31"><call pos:start="295:9" pos:end="295:31"><name pos:start="295:9" pos:end="295:23">qxl_del_memslot</name><argument_list pos:start="295:24" pos:end="295:31">(<argument pos:start="295:25" pos:end="295:25"><expr pos:start="295:25" pos:end="295:25"><name pos:start="295:25" pos:end="295:25">d</name></expr></argument>, <argument pos:start="295:28" pos:end="295:30"><expr pos:start="295:28" pos:end="295:30"><name pos:start="295:28" pos:end="295:30">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <case pos:start="298:5" pos:end="298:31">case <expr pos:start="298:10" pos:end="298:30"><name pos:start="298:10" pos:end="298:30">QXL_IO_CREATE_PRIMARY</name></expr>:</case>

        <if_stmt pos:start="300:9" pos:end="400:42"><if pos:start="300:9" pos:end="400:42">if <condition pos:start="300:12" pos:end="300:21">(<expr pos:start="300:13" pos:end="300:20"><name pos:start="300:13" pos:end="300:15">val</name> <operator pos:start="300:17" pos:end="300:18">!=</operator> <literal type="number" pos:start="300:20" pos:end="300:20">0</literal></expr>)</condition> <block pos:start="300:23" pos:end="400:42">{<block_content pos:start="302:13" pos:end="400:42">

            <expr_stmt pos:start="302:13" pos:end="304:33"><expr pos:start="302:13" pos:end="304:32"><call pos:start="302:13" pos:end="304:32"><name pos:start="302:13" pos:end="302:29">qxl_set_guest_bug</name><argument_list pos:start="302:30" pos:end="304:32">(<argument pos:start="302:31" pos:end="302:31"><expr pos:start="302:31" pos:end="302:31"><name pos:start="302:31" pos:end="302:31">d</name></expr></argument>, <argument pos:start="302:34" pos:end="302:77"><expr pos:start="302:34" pos:end="302:77"><literal type="string" pos:start="302:34" pos:end="302:77">"QXL_IO_CREATE_PRIMARY (async=%d): val != 0"</literal></expr></argument>,

                          <argument pos:start="304:27" pos:end="304:31"><expr pos:start="304:27" pos:end="304:31"><name pos:start="304:27" pos:end="304:31">async</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="306:13" pos:end="306:30">goto <name pos:start="306:18" pos:end="306:29">cancel_async</name>;</goto>


        <expr_stmt pos:start="309:9" pos:end="309:58"><expr pos:start="309:9" pos:end="309:57"><name pos:start="309:9" pos:end="309:32"><name pos:start="309:9" pos:end="309:9">d</name><operator pos:start="309:10" pos:end="309:11">-&gt;</operator><name pos:start="309:12" pos:end="309:24">guest_primary</name><operator pos:start="309:25" pos:end="309:25">.</operator><name pos:start="309:26" pos:end="309:32">surface</name></name> <operator pos:start="309:34" pos:end="309:34">=</operator> <name pos:start="309:36" pos:end="309:57"><name pos:start="309:36" pos:end="309:36">d</name><operator pos:start="309:37" pos:end="309:38">-&gt;</operator><name pos:start="309:39" pos:end="309:41">ram</name><operator pos:start="309:42" pos:end="309:43">-&gt;</operator><name pos:start="309:44" pos:end="309:57">create_surface</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="311:9" pos:end="311:46"><expr pos:start="311:9" pos:end="311:45"><call pos:start="311:9" pos:end="311:45"><name pos:start="311:9" pos:end="311:32">qxl_create_guest_primary</name><argument_list pos:start="311:33" pos:end="311:45">(<argument pos:start="311:34" pos:end="311:34"><expr pos:start="311:34" pos:end="311:34"><name pos:start="311:34" pos:end="311:34">d</name></expr></argument>, <argument pos:start="311:37" pos:end="311:37"><expr pos:start="311:37" pos:end="311:37"><literal type="number" pos:start="311:37" pos:end="311:37">0</literal></expr></argument>, <argument pos:start="311:40" pos:end="311:44"><expr pos:start="311:40" pos:end="311:44"><name pos:start="311:40" pos:end="311:44">async</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <case pos:start="314:5" pos:end="314:32">case <expr pos:start="314:10" pos:end="314:31"><name pos:start="314:10" pos:end="314:31">QXL_IO_DESTROY_PRIMARY</name></expr>:</case>

        <if_stmt pos:start="316:9" pos:end="400:42"><if pos:start="316:9" pos:end="400:42">if <condition pos:start="316:12" pos:end="316:21">(<expr pos:start="316:13" pos:end="316:20"><name pos:start="316:13" pos:end="316:15">val</name> <operator pos:start="316:17" pos:end="316:18">!=</operator> <literal type="number" pos:start="316:20" pos:end="316:20">0</literal></expr>)</condition> <block pos:start="316:23" pos:end="400:42">{<block_content pos:start="318:13" pos:end="400:42">

            <expr_stmt pos:start="318:13" pos:end="320:33"><expr pos:start="318:13" pos:end="320:32"><call pos:start="318:13" pos:end="320:32"><name pos:start="318:13" pos:end="318:29">qxl_set_guest_bug</name><argument_list pos:start="318:30" pos:end="320:32">(<argument pos:start="318:31" pos:end="318:31"><expr pos:start="318:31" pos:end="318:31"><name pos:start="318:31" pos:end="318:31">d</name></expr></argument>, <argument pos:start="318:34" pos:end="318:78"><expr pos:start="318:34" pos:end="318:78"><literal type="string" pos:start="318:34" pos:end="318:78">"QXL_IO_DESTROY_PRIMARY (async=%d): val != 0"</literal></expr></argument>,

                          <argument pos:start="320:27" pos:end="320:31"><expr pos:start="320:27" pos:end="320:31"><name pos:start="320:27" pos:end="320:31">async</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="322:13" pos:end="322:30">goto <name pos:start="322:18" pos:end="322:29">cancel_async</name>;</goto>


        <if_stmt pos:start="325:9" pos:end="400:42"><if pos:start="325:9" pos:end="400:42">if <condition pos:start="325:12" pos:end="325:43">(<expr pos:start="325:13" pos:end="325:42"><operator pos:start="325:13" pos:end="325:13">!</operator><call pos:start="325:14" pos:end="325:42"><name pos:start="325:14" pos:end="325:32">qxl_destroy_primary</name><argument_list pos:start="325:33" pos:end="325:42">(<argument pos:start="325:34" pos:end="325:34"><expr pos:start="325:34" pos:end="325:34"><name pos:start="325:34" pos:end="325:34">d</name></expr></argument>, <argument pos:start="325:37" pos:end="325:41"><expr pos:start="325:37" pos:end="325:41"><name pos:start="325:37" pos:end="325:41">async</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="325:45" pos:end="400:42">{<block_content pos:start="327:13" pos:end="400:42">

            <expr_stmt pos:start="327:13" pos:end="329:78"><expr pos:start="327:13" pos:end="329:77"><call pos:start="327:13" pos:end="329:77"><name pos:start="327:13" pos:end="327:48">trace_qxl_io_destroy_primary_ignored</name><argument_list pos:start="327:49" pos:end="329:77">(<argument pos:start="327:50" pos:end="327:54"><expr pos:start="327:50" pos:end="327:54"><name pos:start="327:50" pos:end="327:54"><name pos:start="327:50" pos:end="327:50">d</name><operator pos:start="327:51" pos:end="327:52">-&gt;</operator><name pos:start="327:53" pos:end="327:54">id</name></name></expr></argument>,

                                                 <argument pos:start="329:50" pos:end="329:76"><expr pos:start="329:50" pos:end="329:76"><call pos:start="329:50" pos:end="329:76"><name pos:start="329:50" pos:end="329:67">qxl_mode_to_string</name><argument_list pos:start="329:68" pos:end="329:76">(<argument pos:start="329:69" pos:end="329:75"><expr pos:start="329:69" pos:end="329:75"><name pos:start="329:69" pos:end="329:75"><name pos:start="329:69" pos:end="329:69">d</name><operator pos:start="329:70" pos:end="329:71">-&gt;</operator><name pos:start="329:72" pos:end="329:75">mode</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="331:13" pos:end="331:30">goto <name pos:start="331:18" pos:end="331:29">cancel_async</name>;</goto>



    <case pos:start="335:5" pos:end="335:37">case <expr pos:start="335:10" pos:end="335:36"><name pos:start="335:10" pos:end="335:36">QXL_IO_DESTROY_SURFACE_WAIT</name></expr>:</case>

        <if_stmt pos:start="337:9" pos:end="400:42"><if pos:start="337:9" pos:end="400:42">if <condition pos:start="337:12" pos:end="337:39">(<expr pos:start="337:13" pos:end="337:38"><name pos:start="337:13" pos:end="337:15">val</name> <operator pos:start="337:17" pos:end="337:18">&gt;=</operator> <name pos:start="337:20" pos:end="337:38"><name pos:start="337:20" pos:end="337:20">d</name><operator pos:start="337:21" pos:end="337:22">-&gt;</operator><name pos:start="337:23" pos:end="337:25">ssd</name><operator pos:start="337:26" pos:end="337:26">.</operator><name pos:start="337:27" pos:end="337:38">num_surfaces</name></name></expr>)</condition> <block pos:start="337:41" pos:end="400:42">{<block_content pos:start="339:13" pos:end="400:42">

            <expr_stmt pos:start="339:13" pos:end="341:72"><expr pos:start="339:13" pos:end="341:71"><call pos:start="339:13" pos:end="341:71"><name pos:start="339:13" pos:end="339:29">qxl_set_guest_bug</name><argument_list pos:start="339:30" pos:end="341:71">(<argument pos:start="339:31" pos:end="339:31"><expr pos:start="339:31" pos:end="339:31"><name pos:start="339:31" pos:end="339:31">d</name></expr></argument>, <argument pos:start="339:34" pos:end="341:58"><expr pos:start="339:34" pos:end="341:58"><literal type="string" pos:start="339:34" pos:end="339:69">"QXL_IO_DESTROY_SURFACE (async=%d):"</literal>

                             <literal type="string" pos:start="341:30" pos:end="341:32">"%"</literal> <name pos:start="341:34" pos:end="341:39">PRIu64</name> <literal type="string" pos:start="341:41" pos:end="341:58">" &gt;= NUM_SURFACES"</literal></expr></argument>, <argument pos:start="341:61" pos:end="341:65"><expr pos:start="341:61" pos:end="341:65"><name pos:start="341:61" pos:end="341:65">async</name></expr></argument>, <argument pos:start="341:68" pos:end="341:70"><expr pos:start="341:68" pos:end="341:70"><name pos:start="341:68" pos:end="341:70">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="343:13" pos:end="343:30">goto <name pos:start="343:18" pos:end="343:29">cancel_async</name>;</goto>


        <expr_stmt pos:start="346:9" pos:end="346:54"><expr pos:start="346:9" pos:end="346:53"><call pos:start="346:9" pos:end="346:53"><name pos:start="346:9" pos:end="346:38">qxl_spice_destroy_surface_wait</name><argument_list pos:start="346:39" pos:end="346:53">(<argument pos:start="346:40" pos:end="346:40"><expr pos:start="346:40" pos:end="346:40"><name pos:start="346:40" pos:end="346:40">d</name></expr></argument>, <argument pos:start="346:43" pos:end="346:45"><expr pos:start="346:43" pos:end="346:45"><name pos:start="346:43" pos:end="346:45">val</name></expr></argument>, <argument pos:start="346:48" pos:end="346:52"><expr pos:start="346:48" pos:end="346:52"><name pos:start="346:48" pos:end="346:52">async</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <case pos:start="349:5" pos:end="349:30">case <expr pos:start="349:10" pos:end="349:29"><name pos:start="349:10" pos:end="349:29">QXL_IO_FLUSH_RELEASE</name></expr>:</case> <block pos:start="349:32" pos:end="400:42">{<block_content pos:start="351:9" pos:end="400:42">

        <decl_stmt pos:start="351:9" pos:end="351:53"><decl pos:start="351:9" pos:end="351:52"><type pos:start="351:9" pos:end="351:24"><name pos:start="351:9" pos:end="351:22">QXLReleaseRing</name> <modifier pos:start="351:24" pos:end="351:24">*</modifier></type><name pos:start="351:25" pos:end="351:28">ring</name> <init pos:start="351:30" pos:end="351:52">= <expr pos:start="351:32" pos:end="351:52"><operator pos:start="351:32" pos:end="351:32">&amp;</operator><name pos:start="351:33" pos:end="351:52"><name pos:start="351:33" pos:end="351:33">d</name><operator pos:start="351:34" pos:end="351:35">-&gt;</operator><name pos:start="351:36" pos:end="351:38">ram</name><operator pos:start="351:39" pos:end="351:40">-&gt;</operator><name pos:start="351:41" pos:end="351:52">release_ring</name></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="353:9" pos:end="400:42"><if pos:start="353:9" pos:end="400:42">if <condition pos:start="353:12" pos:end="353:59">(<expr pos:start="353:13" pos:end="353:58"><name pos:start="353:13" pos:end="353:22"><name pos:start="353:13" pos:end="353:16">ring</name><operator pos:start="353:17" pos:end="353:18">-&gt;</operator><name pos:start="353:19" pos:end="353:22">prod</name></name> <operator pos:start="353:24" pos:end="353:24">-</operator> <name pos:start="353:26" pos:end="353:35"><name pos:start="353:26" pos:end="353:29">ring</name><operator pos:start="353:30" pos:end="353:31">-&gt;</operator><name pos:start="353:32" pos:end="353:35">cons</name></name> <operator pos:start="353:37" pos:end="353:37">+</operator> <literal type="number" pos:start="353:39" pos:end="353:39">1</literal> <operator pos:start="353:41" pos:end="353:42">==</operator> <name pos:start="353:44" pos:end="353:58"><name pos:start="353:44" pos:end="353:47">ring</name><operator pos:start="353:48" pos:end="353:49">-&gt;</operator><name pos:start="353:50" pos:end="353:58">num_items</name></name></expr>)</condition> <block pos:start="353:61" pos:end="400:42">{<block_content pos:start="355:13" pos:end="400:42">

            <expr_stmt pos:start="355:13" pos:end="359:40"><expr pos:start="355:13" pos:end="359:39"><call pos:start="355:13" pos:end="359:39"><name pos:start="355:13" pos:end="355:19">fprintf</name><argument_list pos:start="355:20" pos:end="359:39">(<argument pos:start="355:21" pos:end="355:26"><expr pos:start="355:21" pos:end="355:26"><name pos:start="355:21" pos:end="355:26">stderr</name></expr></argument>,

                <argument pos:start="357:17" pos:end="357:64"><expr pos:start="357:17" pos:end="357:64"><literal type="string" pos:start="357:17" pos:end="357:64">"ERROR: no flush, full release ring [p%d,%dc]\n"</literal></expr></argument>,

                <argument pos:start="359:17" pos:end="359:26"><expr pos:start="359:17" pos:end="359:26"><name pos:start="359:17" pos:end="359:26"><name pos:start="359:17" pos:end="359:20">ring</name><operator pos:start="359:21" pos:end="359:22">-&gt;</operator><name pos:start="359:23" pos:end="359:26">prod</name></name></expr></argument>, <argument pos:start="359:29" pos:end="359:38"><expr pos:start="359:29" pos:end="359:38"><name pos:start="359:29" pos:end="359:38"><name pos:start="359:29" pos:end="359:32">ring</name><operator pos:start="359:33" pos:end="359:34">-&gt;</operator><name pos:start="359:35" pos:end="359:38">cons</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


        <expr_stmt pos:start="362:9" pos:end="362:44"><expr pos:start="362:9" pos:end="362:43"><call pos:start="362:9" pos:end="362:43"><name pos:start="362:9" pos:end="362:25">qxl_push_free_res</name><argument_list pos:start="362:26" pos:end="362:43">(<argument pos:start="362:27" pos:end="362:27"><expr pos:start="362:27" pos:end="362:27"><name pos:start="362:27" pos:end="362:27">d</name></expr></argument>, <argument pos:start="362:30" pos:end="362:30"><expr pos:start="362:30" pos:end="362:30"><literal type="number" pos:start="362:30" pos:end="362:30">1</literal></expr></argument> <comment type="block" pos:start="362:32" pos:end="362:42">/* flush */</comment>)</argument_list></call></expr>;</expr_stmt>



    <case pos:start="366:5" pos:end="366:37">case <expr pos:start="366:10" pos:end="366:36"><name pos:start="366:10" pos:end="366:36">QXL_IO_FLUSH_SURFACES_ASYNC</name></expr>:</case>

        <expr_stmt pos:start="368:9" pos:end="368:42"><expr pos:start="368:9" pos:end="368:41"><call pos:start="368:9" pos:end="368:41"><name pos:start="368:9" pos:end="368:38">qxl_spice_flush_surfaces_async</name><argument_list pos:start="368:39" pos:end="368:41">(<argument pos:start="368:40" pos:end="368:40"><expr pos:start="368:40" pos:end="368:40"><name pos:start="368:40" pos:end="368:40">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <case pos:start="371:5" pos:end="371:37">case <expr pos:start="371:10" pos:end="371:36"><name pos:start="371:10" pos:end="371:36">QXL_IO_DESTROY_ALL_SURFACES</name></expr>:</case>

        <expr_stmt pos:start="373:9" pos:end="373:37"><expr pos:start="373:9" pos:end="373:36"><name pos:start="373:9" pos:end="373:15"><name pos:start="373:9" pos:end="373:9">d</name><operator pos:start="373:10" pos:end="373:11">-&gt;</operator><name pos:start="373:12" pos:end="373:15">mode</name></name> <operator pos:start="373:17" pos:end="373:17">=</operator> <name pos:start="373:19" pos:end="373:36">QXL_MODE_UNDEFINED</name></expr>;</expr_stmt>

        <expr_stmt pos:start="375:9" pos:end="375:45"><expr pos:start="375:9" pos:end="375:44"><call pos:start="375:9" pos:end="375:44"><name pos:start="375:9" pos:end="375:34">qxl_spice_destroy_surfaces</name><argument_list pos:start="375:35" pos:end="375:44">(<argument pos:start="375:36" pos:end="375:36"><expr pos:start="375:36" pos:end="375:36"><name pos:start="375:36" pos:end="375:36">d</name></expr></argument>, <argument pos:start="375:39" pos:end="375:43"><expr pos:start="375:39" pos:end="375:43"><name pos:start="375:39" pos:end="375:43">async</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <case pos:start="378:5" pos:end="378:38">case <expr pos:start="378:10" pos:end="378:37"><name pos:start="378:10" pos:end="378:37">QXL_IO_MONITORS_CONFIG_ASYNC</name></expr>:</case>

        <expr_stmt pos:start="380:9" pos:end="380:46"><expr pos:start="380:9" pos:end="380:45"><call pos:start="380:9" pos:end="380:45"><name pos:start="380:9" pos:end="380:39">qxl_spice_monitors_config_async</name><argument_list pos:start="380:40" pos:end="380:45">(<argument pos:start="380:41" pos:end="380:41"><expr pos:start="380:41" pos:end="380:41"><name pos:start="380:41" pos:end="380:41">d</name></expr></argument>, <argument pos:start="380:44" pos:end="380:44"><expr pos:start="380:44" pos:end="380:44"><literal type="number" pos:start="380:44" pos:end="380:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <default pos:start="383:5" pos:end="383:12">default:</default>

        <expr_stmt pos:start="385:9" pos:end="385:80"><expr pos:start="385:9" pos:end="385:79"><call pos:start="385:9" pos:end="385:79"><name pos:start="385:9" pos:end="385:25">qxl_set_guest_bug</name><argument_list pos:start="385:26" pos:end="385:79">(<argument pos:start="385:27" pos:end="385:27"><expr pos:start="385:27" pos:end="385:27"><name pos:start="385:27" pos:end="385:27">d</name></expr></argument>, <argument pos:start="385:30" pos:end="385:59"><expr pos:start="385:30" pos:end="385:59"><literal type="string" pos:start="385:30" pos:end="385:59">"%s: unexpected ioport=0x%x\n"</literal></expr></argument>, <argument pos:start="385:62" pos:end="385:69"><expr pos:start="385:62" pos:end="385:69"><name pos:start="385:62" pos:end="385:69">__func__</name></expr></argument>, <argument pos:start="385:72" pos:end="385:78"><expr pos:start="385:72" pos:end="385:78"><name pos:start="385:72" pos:end="385:78">io_port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <return pos:start="388:5" pos:end="388:11">return;</return>

<label pos:start="390:1" pos:end="390:13"><name pos:start="390:1" pos:end="390:12">cancel_async</name>:</label>

    <if_stmt pos:start="392:5" pos:end="400:42"><if pos:start="392:5" pos:end="400:42">if <condition pos:start="392:8" pos:end="392:14">(<expr pos:start="392:9" pos:end="392:13"><name pos:start="392:9" pos:end="392:13">async</name></expr>)</condition> <block pos:start="392:16" pos:end="400:42">{<block_content pos:start="394:9" pos:end="400:42">

        <expr_stmt pos:start="394:9" pos:end="394:49"><expr pos:start="394:9" pos:end="394:48"><call pos:start="394:9" pos:end="394:48"><name pos:start="394:9" pos:end="394:23">qxl_send_events</name><argument_list pos:start="394:24" pos:end="394:48">(<argument pos:start="394:25" pos:end="394:25"><expr pos:start="394:25" pos:end="394:25"><name pos:start="394:25" pos:end="394:25">d</name></expr></argument>, <argument pos:start="394:28" pos:end="394:47"><expr pos:start="394:28" pos:end="394:47"><name pos:start="394:28" pos:end="394:47">QXL_INTERRUPT_IO_CMD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="396:9" pos:end="396:40"><expr pos:start="396:9" pos:end="396:39"><call pos:start="396:9" pos:end="396:39"><name pos:start="396:9" pos:end="396:23">qemu_mutex_lock</name><argument_list pos:start="396:24" pos:end="396:39">(<argument pos:start="396:25" pos:end="396:38"><expr pos:start="396:25" pos:end="396:38"><operator pos:start="396:25" pos:end="396:25">&amp;</operator><name pos:start="396:26" pos:end="396:38"><name pos:start="396:26" pos:end="396:26">d</name><operator pos:start="396:27" pos:end="396:28">-&gt;</operator><name pos:start="396:29" pos:end="396:38">async_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="398:9" pos:end="398:44"><expr pos:start="398:9" pos:end="398:43"><name pos:start="398:9" pos:end="398:24"><name pos:start="398:9" pos:end="398:9">d</name><operator pos:start="398:10" pos:end="398:11">-&gt;</operator><name pos:start="398:12" pos:end="398:24">current_async</name></name> <operator pos:start="398:26" pos:end="398:26">=</operator> <name pos:start="398:28" pos:end="398:43">QXL_UNDEFINED_IO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="400:9" pos:end="400:42"><expr pos:start="400:9" pos:end="400:41"><call pos:start="400:9" pos:end="400:41"><name pos:start="400:9" pos:end="400:25">qemu_mutex_unlock</name><argument_list pos:start="400:26" pos:end="400:41">(<argument pos:start="400:27" pos:end="400:40"><expr pos:start="400:27" pos:end="400:40"><operator pos:start="400:27" pos:end="400:27">&amp;</operator><name pos:start="400:28" pos:end="400:40"><name pos:start="400:28" pos:end="400:28">d</name><operator pos:start="400:29" pos:end="400:30">-&gt;</operator><name pos:start="400:31" pos:end="400:40">async_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></block_content></block></switch></block_content></block></if></if_stmt></block_content></block></switch></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></switch></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>

</unit>
