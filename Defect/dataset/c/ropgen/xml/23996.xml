<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23996.c" pos:tabs="8"><function pos:start="1:1" pos:end="411:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:25">ff_MPV_encode_picture</name><parameter_list pos:start="1:26" pos:end="3:66">(<parameter pos:start="1:27" pos:end="1:47"><decl pos:start="1:27" pos:end="1:47"><type pos:start="1:27" pos:end="1:47"><name pos:start="1:27" pos:end="1:40">AVCodecContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:47">avctx</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:62"><decl pos:start="1:50" pos:end="1:62"><type pos:start="1:50" pos:end="1:62"><name pos:start="1:50" pos:end="1:57">AVPacket</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:62">pkt</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:48"><decl pos:start="3:27" pos:end="3:48"><type pos:start="3:27" pos:end="3:48"><specifier pos:start="3:27" pos:end="3:31">const</specifier> <name pos:start="3:33" pos:end="3:39">AVFrame</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:48">pic_arg</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:65"><decl pos:start="3:51" pos:end="3:65"><type pos:start="3:51" pos:end="3:65"><name pos:start="3:51" pos:end="3:53">int</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:65">got_packet</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="411:1">{<block_content pos:start="7:5" pos:end="409:13">

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">MpegEncContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:40">= <expr pos:start="7:25" pos:end="7:40"><name pos:start="7:25" pos:end="7:40"><name pos:start="7:25" pos:end="7:29">avctx</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:25">stuffing_count</name></decl>, <decl pos:start="9:28" pos:end="9:30"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:28" pos:end="9:30">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:47"><decl pos:start="11:5" pos:end="11:46"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:21">context_count</name> <init pos:start="11:23" pos:end="11:46">= <expr pos:start="11:25" pos:end="11:46"><name pos:start="11:25" pos:end="11:46"><name pos:start="11:25" pos:end="11:25">s</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:46">slice_context_count</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:31"><expr pos:start="15:5" pos:end="15:30"><name pos:start="15:5" pos:end="15:28"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:28">picture_in_gop_number</name></name><operator pos:start="15:29" pos:end="15:30">++</operator></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="21:18"><if pos:start="19:5" pos:end="21:18">if <condition pos:start="19:8" pos:end="19:43">(<expr pos:start="19:9" pos:end="19:42"><call pos:start="19:9" pos:end="19:38"><name pos:start="19:9" pos:end="19:26">load_input_picture</name><argument_list pos:start="19:27" pos:end="19:38">(<argument pos:start="19:28" pos:end="19:28"><expr pos:start="19:28" pos:end="19:28"><name pos:start="19:28" pos:end="19:28">s</name></expr></argument>, <argument pos:start="19:31" pos:end="19:37"><expr pos:start="19:31" pos:end="19:37"><name pos:start="19:31" pos:end="19:37">pic_arg</name></expr></argument>)</argument_list></call> <operator pos:start="19:40" pos:end="19:40">&lt;</operator> <literal type="number" pos:start="19:42" pos:end="19:42">0</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:18"><block_content pos:start="21:9" pos:end="21:18">

        <return pos:start="21:9" pos:end="21:18">return <expr pos:start="21:16" pos:end="21:17"><operator pos:start="21:16" pos:end="21:16">-</operator><literal type="number" pos:start="21:17" pos:end="21:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:36">(<expr pos:start="25:9" pos:end="25:35"><call pos:start="25:9" pos:end="25:31"><name pos:start="25:9" pos:end="25:28">select_input_picture</name><argument_list pos:start="25:29" pos:end="25:31">(<argument pos:start="25:30" pos:end="25:30"><expr pos:start="25:30" pos:end="25:30"><name pos:start="25:30" pos:end="25:30">s</name></expr></argument>)</argument_list></call> <operator pos:start="25:33" pos:end="25:33">&lt;</operator> <literal type="number" pos:start="25:35" pos:end="25:35">0</literal></expr>)</condition> <block pos:start="25:38" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:18">

        <return pos:start="27:9" pos:end="27:18">return <expr pos:start="27:16" pos:end="27:17"><operator pos:start="27:16" pos:end="27:16">-</operator><literal type="number" pos:start="27:17" pos:end="27:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:17">/* output? */</comment>

    <if_stmt pos:start="35:5" pos:end="399:5"><if pos:start="35:5" pos:end="393:5">if <condition pos:start="35:8" pos:end="35:33">(<expr pos:start="35:9" pos:end="35:32"><name pos:start="35:9" pos:end="35:32"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:22">new_picture</name><operator pos:start="35:23" pos:end="35:23">.</operator><name pos:start="35:24" pos:end="35:24">f</name><operator pos:start="35:25" pos:end="35:25">.</operator><name pos:start="35:26" pos:end="35:29">data</name><index pos:start="35:30" pos:end="35:32">[<expr pos:start="35:31" pos:end="35:31"><literal type="number" pos:start="35:31" pos:end="35:31">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="35:35" pos:end="393:5">{<block_content pos:start="37:9" pos:end="391:87">

        <if_stmt pos:start="37:9" pos:end="41:23"><if pos:start="37:9" pos:end="41:23">if <condition pos:start="37:12" pos:end="39:84">(<expr pos:start="37:13" pos:end="39:83"><operator pos:start="37:13" pos:end="37:13">!</operator><name pos:start="37:14" pos:end="37:22"><name pos:start="37:14" pos:end="37:16">pkt</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:22">data</name></name> <operator pos:start="37:24" pos:end="37:25">&amp;&amp;</operator>

            <operator pos:start="39:13" pos:end="39:13">(</operator><name pos:start="39:14" pos:end="39:16">ret</name> <operator pos:start="39:18" pos:end="39:18">=</operator> <call pos:start="39:20" pos:end="39:78"><name pos:start="39:20" pos:end="39:34">ff_alloc_packet</name><argument_list pos:start="39:35" pos:end="39:78">(<argument pos:start="39:36" pos:end="39:38"><expr pos:start="39:36" pos:end="39:38"><name pos:start="39:36" pos:end="39:38">pkt</name></expr></argument>, <argument pos:start="39:41" pos:end="39:77"><expr pos:start="39:41" pos:end="39:77"><name pos:start="39:41" pos:end="39:51"><name pos:start="39:41" pos:end="39:41">s</name><operator pos:start="39:42" pos:end="39:43">-&gt;</operator><name pos:start="39:44" pos:end="39:51">mb_width</name></name><operator pos:start="39:52" pos:end="39:52">*</operator><name pos:start="39:53" pos:end="39:64"><name pos:start="39:53" pos:end="39:53">s</name><operator pos:start="39:54" pos:end="39:55">-&gt;</operator><name pos:start="39:56" pos:end="39:64">mb_height</name></name><operator pos:start="39:65" pos:end="39:65">*</operator><name pos:start="39:66" pos:end="39:77">MAX_MB_BYTES</name></expr></argument>)</argument_list></call><operator pos:start="39:79" pos:end="39:79">)</operator> <operator pos:start="39:81" pos:end="39:81">&lt;</operator> <literal type="number" pos:start="39:83" pos:end="39:83">0</literal></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:23"><block_content pos:start="41:13" pos:end="41:23">

            <return pos:start="41:13" pos:end="41:23">return <expr pos:start="41:20" pos:end="41:22"><name pos:start="41:20" pos:end="41:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="43:9" pos:end="53:9"><if pos:start="43:9" pos:end="53:9">if <condition pos:start="43:12" pos:end="43:23">(<expr pos:start="43:13" pos:end="43:22"><name pos:start="43:13" pos:end="43:22"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:22">mb_info</name></name></expr>)</condition> <block pos:start="43:25" pos:end="53:9">{<block_content pos:start="45:13" pos:end="51:68">

            <expr_stmt pos:start="45:13" pos:end="49:62"><expr pos:start="45:13" pos:end="49:61"><name pos:start="45:13" pos:end="45:26"><name pos:start="45:13" pos:end="45:13">s</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:26">mb_info_ptr</name></name> <operator pos:start="45:28" pos:end="45:28">=</operator> <call pos:start="45:30" pos:end="49:61"><name pos:start="45:30" pos:end="45:52">av_packet_new_side_data</name><argument_list pos:start="45:53" pos:end="49:61">(<argument pos:start="45:54" pos:end="45:56"><expr pos:start="45:54" pos:end="45:56"><name pos:start="45:54" pos:end="45:56">pkt</name></expr></argument>,

                                 <argument pos:start="47:34" pos:end="47:57"><expr pos:start="47:34" pos:end="47:57"><name pos:start="47:34" pos:end="47:57">AV_PKT_DATA_H263_MB_INFO</name></expr></argument>,

                                 <argument pos:start="49:34" pos:end="49:60"><expr pos:start="49:34" pos:end="49:60"><name pos:start="49:34" pos:end="49:44"><name pos:start="49:34" pos:end="49:34">s</name><operator pos:start="49:35" pos:end="49:36">-&gt;</operator><name pos:start="49:37" pos:end="49:44">mb_width</name></name><operator pos:start="49:45" pos:end="49:45">*</operator><name pos:start="49:46" pos:end="49:57"><name pos:start="49:46" pos:end="49:46">s</name><operator pos:start="49:47" pos:end="49:48">-&gt;</operator><name pos:start="49:49" pos:end="49:57">mb_height</name></name><operator pos:start="49:58" pos:end="49:58">*</operator><literal type="number" pos:start="49:59" pos:end="49:60">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:68"><expr pos:start="51:13" pos:end="51:67"><name pos:start="51:13" pos:end="51:27"><name pos:start="51:13" pos:end="51:13">s</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:27">prev_mb_info</name></name> <operator pos:start="51:29" pos:end="51:29">=</operator> <name pos:start="51:31" pos:end="51:45"><name pos:start="51:31" pos:end="51:31">s</name><operator pos:start="51:32" pos:end="51:33">-&gt;</operator><name pos:start="51:34" pos:end="51:45">last_mb_info</name></name> <operator pos:start="51:47" pos:end="51:47">=</operator> <name pos:start="51:49" pos:end="51:63"><name pos:start="51:49" pos:end="51:49">s</name><operator pos:start="51:50" pos:end="51:51">-&gt;</operator><name pos:start="51:52" pos:end="51:63">mb_info_size</name></name> <operator pos:start="51:65" pos:end="51:65">=</operator> <literal type="number" pos:start="51:67" pos:end="51:67">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <for pos:start="57:9" pos:end="73:9">for <control pos:start="57:13" pos:end="57:43">(<init pos:start="57:14" pos:end="57:19"><expr pos:start="57:14" pos:end="57:18"><name pos:start="57:14" pos:end="57:14">i</name> <operator pos:start="57:16" pos:end="57:16">=</operator> <literal type="number" pos:start="57:18" pos:end="57:18">0</literal></expr>;</init> <condition pos:start="57:21" pos:end="57:38"><expr pos:start="57:21" pos:end="57:37"><name pos:start="57:21" pos:end="57:21">i</name> <operator pos:start="57:23" pos:end="57:23">&lt;</operator> <name pos:start="57:25" pos:end="57:37">context_count</name></expr>;</condition> <incr pos:start="57:40" pos:end="57:42"><expr pos:start="57:40" pos:end="57:42"><name pos:start="57:40" pos:end="57:40">i</name><operator pos:start="57:41" pos:end="57:42">++</operator></expr></incr>)</control> <block pos:start="57:45" pos:end="73:9">{<block_content pos:start="59:13" pos:end="71:73">

            <decl_stmt pos:start="59:13" pos:end="59:59"><decl pos:start="59:13" pos:end="59:58"><type pos:start="59:13" pos:end="59:15"><name pos:start="59:13" pos:end="59:15">int</name></type> <name pos:start="59:17" pos:end="59:23">start_y</name> <init pos:start="59:25" pos:end="59:58">= <expr pos:start="59:27" pos:end="59:58"><name pos:start="59:27" pos:end="59:46"><name pos:start="59:27" pos:end="59:27">s</name><operator pos:start="59:28" pos:end="59:29">-&gt;</operator><name pos:start="59:30" pos:end="59:43">thread_context</name><index pos:start="59:44" pos:end="59:46">[<expr pos:start="59:45" pos:end="59:45"><name pos:start="59:45" pos:end="59:45">i</name></expr>]</index></name><operator pos:start="59:47" pos:end="59:48">-&gt;</operator><name pos:start="59:49" pos:end="59:58">start_mb_y</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="61:13" pos:end="61:59"><decl pos:start="61:13" pos:end="61:58"><type pos:start="61:13" pos:end="61:15"><name pos:start="61:13" pos:end="61:15">int</name></type>   <name pos:start="61:19" pos:end="61:23">end_y</name> <init pos:start="61:25" pos:end="61:58">= <expr pos:start="61:27" pos:end="61:58"><name pos:start="61:27" pos:end="61:46"><name pos:start="61:27" pos:end="61:27">s</name><operator pos:start="61:28" pos:end="61:29">-&gt;</operator><name pos:start="61:30" pos:end="61:43">thread_context</name><index pos:start="61:44" pos:end="61:46">[<expr pos:start="61:45" pos:end="61:45"><name pos:start="61:45" pos:end="61:45">i</name></expr>]</index></name><operator pos:start="61:47" pos:end="61:48">-&gt;</operator>  <name pos:start="61:51" pos:end="61:58">end_mb_y</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="63:13" pos:end="63:39"><decl pos:start="63:13" pos:end="63:38"><type pos:start="63:13" pos:end="63:15"><name pos:start="63:13" pos:end="63:15">int</name></type> <name pos:start="63:17" pos:end="63:17">h</name>       <init pos:start="63:25" pos:end="63:38">= <expr pos:start="63:27" pos:end="63:38"><name pos:start="63:27" pos:end="63:38"><name pos:start="63:27" pos:end="63:27">s</name><operator pos:start="63:28" pos:end="63:29">-&gt;</operator><name pos:start="63:30" pos:end="63:38">mb_height</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="65:13" pos:end="65:87"><decl pos:start="65:13" pos:end="65:86"><type pos:start="65:13" pos:end="65:21"><name pos:start="65:13" pos:end="65:19">uint8_t</name> <modifier pos:start="65:21" pos:end="65:21">*</modifier></type><name pos:start="65:22" pos:end="65:26">start</name> <init pos:start="65:28" pos:end="65:86">= <expr pos:start="65:30" pos:end="65:86"><name pos:start="65:30" pos:end="65:38"><name pos:start="65:30" pos:end="65:32">pkt</name><operator pos:start="65:33" pos:end="65:34">-&gt;</operator><name pos:start="65:35" pos:end="65:38">data</name></name> <operator pos:start="65:40" pos:end="65:40">+</operator> <operator pos:start="65:42" pos:end="65:42">(</operator><name pos:start="65:43" pos:end="65:48">size_t</name><operator pos:start="65:49" pos:end="65:49">)</operator><operator pos:start="65:50" pos:end="65:50">(</operator><operator pos:start="65:51" pos:end="65:51">(</operator><operator pos:start="65:52" pos:end="65:52">(</operator><name pos:start="65:53" pos:end="65:59">int64_t</name><operator pos:start="65:60" pos:end="65:60">)</operator> <name pos:start="65:62" pos:end="65:70"><name pos:start="65:62" pos:end="65:64">pkt</name><operator pos:start="65:65" pos:end="65:66">-&gt;</operator><name pos:start="65:67" pos:end="65:70">size</name></name><operator pos:start="65:71" pos:end="65:71">)</operator> <operator pos:start="65:73" pos:end="65:73">*</operator> <name pos:start="65:75" pos:end="65:81">start_y</name> <operator pos:start="65:83" pos:end="65:83">/</operator> <name pos:start="65:85" pos:end="65:85">h</name><operator pos:start="65:86" pos:end="65:86">)</operator></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="67:13" pos:end="67:87"><decl pos:start="67:13" pos:end="67:86"><type pos:start="67:13" pos:end="67:21"><name pos:start="67:13" pos:end="67:19">uint8_t</name> <modifier pos:start="67:21" pos:end="67:21">*</modifier></type><name pos:start="67:22" pos:end="67:24">end</name>   <init pos:start="67:28" pos:end="67:86">= <expr pos:start="67:30" pos:end="67:86"><name pos:start="67:30" pos:end="67:38"><name pos:start="67:30" pos:end="67:32">pkt</name><operator pos:start="67:33" pos:end="67:34">-&gt;</operator><name pos:start="67:35" pos:end="67:38">data</name></name> <operator pos:start="67:40" pos:end="67:40">+</operator> <operator pos:start="67:42" pos:end="67:42">(</operator><name pos:start="67:43" pos:end="67:48">size_t</name><operator pos:start="67:49" pos:end="67:49">)</operator><operator pos:start="67:50" pos:end="67:50">(</operator><operator pos:start="67:51" pos:end="67:51">(</operator><operator pos:start="67:52" pos:end="67:52">(</operator><name pos:start="67:53" pos:end="67:59">int64_t</name><operator pos:start="67:60" pos:end="67:60">)</operator> <name pos:start="67:62" pos:end="67:70"><name pos:start="67:62" pos:end="67:64">pkt</name><operator pos:start="67:65" pos:end="67:66">-&gt;</operator><name pos:start="67:67" pos:end="67:70">size</name></name><operator pos:start="67:71" pos:end="67:71">)</operator> <operator pos:start="67:73" pos:end="67:73">*</operator>   <name pos:start="67:77" pos:end="67:81">end_y</name> <operator pos:start="67:83" pos:end="67:83">/</operator> <name pos:start="67:85" pos:end="67:85">h</name><operator pos:start="67:86" pos:end="67:86">)</operator></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="71:13" pos:end="71:73"><expr pos:start="71:13" pos:end="71:72"><call pos:start="71:13" pos:end="71:72"><name pos:start="71:13" pos:end="71:25">init_put_bits</name><argument_list pos:start="71:26" pos:end="71:72">(<argument pos:start="71:27" pos:end="71:51"><expr pos:start="71:27" pos:end="71:51"><operator pos:start="71:27" pos:end="71:27">&amp;</operator><name pos:start="71:28" pos:end="71:47"><name pos:start="71:28" pos:end="71:28">s</name><operator pos:start="71:29" pos:end="71:30">-&gt;</operator><name pos:start="71:31" pos:end="71:44">thread_context</name><index pos:start="71:45" pos:end="71:47">[<expr pos:start="71:46" pos:end="71:46"><name pos:start="71:46" pos:end="71:46">i</name></expr>]</index></name><operator pos:start="71:48" pos:end="71:49">-&gt;</operator><name pos:start="71:50" pos:end="71:51">pb</name></expr></argument>, <argument pos:start="71:54" pos:end="71:58"><expr pos:start="71:54" pos:end="71:58"><name pos:start="71:54" pos:end="71:58">start</name></expr></argument>, <argument pos:start="71:61" pos:end="71:71"><expr pos:start="71:61" pos:end="71:71"><name pos:start="71:61" pos:end="71:63">end</name> <operator pos:start="71:65" pos:end="71:65">-</operator> <name pos:start="71:67" pos:end="71:71">start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="77:9" pos:end="77:50"><expr pos:start="77:9" pos:end="77:49"><name pos:start="77:9" pos:end="77:20"><name pos:start="77:9" pos:end="77:9">s</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:20">pict_type</name></name> <operator pos:start="77:22" pos:end="77:22">=</operator> <name pos:start="77:24" pos:end="77:49"><name pos:start="77:24" pos:end="77:24">s</name><operator pos:start="77:25" pos:end="77:26">-&gt;</operator><name pos:start="77:27" pos:end="77:37">new_picture</name><operator pos:start="77:38" pos:end="77:38">.</operator><name pos:start="77:39" pos:end="77:39">f</name><operator pos:start="77:40" pos:end="77:40">.</operator><name pos:start="77:41" pos:end="77:49">pict_type</name></name></expr>;</expr_stmt>

        <comment type="line" pos:start="79:9" pos:end="79:19">//emms_c();</comment>

        <comment type="line" pos:start="81:9" pos:end="81:57">//printf("qs:%f %f %d\n", s-&gt;new_picture.quality,</comment>

        <comment type="line" pos:start="83:9" pos:end="83:56">//       s-&gt;current_picture.quality, s-&gt;qscale);</comment>

        <expr_stmt pos:start="85:9" pos:end="85:37"><expr pos:start="85:9" pos:end="85:36"><call pos:start="85:9" pos:end="85:36"><name pos:start="85:9" pos:end="85:26">ff_MPV_frame_start</name><argument_list pos:start="85:27" pos:end="85:36">(<argument pos:start="85:28" pos:end="85:28"><expr pos:start="85:28" pos:end="85:28"><name pos:start="85:28" pos:end="85:28">s</name></expr></argument>, <argument pos:start="85:31" pos:end="85:35"><expr pos:start="85:31" pos:end="85:35"><name pos:start="85:31" pos:end="85:35">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="87:1" pos:end="87:10"><name pos:start="87:1" pos:end="87:9">vbv_retry</name>:</label>

        <if_stmt pos:start="89:9" pos:end="91:22"><if pos:start="89:9" pos:end="91:22">if <condition pos:start="89:12" pos:end="89:53">(<expr pos:start="89:13" pos:end="89:52"><call pos:start="89:13" pos:end="89:48"><name pos:start="89:13" pos:end="89:26">encode_picture</name><argument_list pos:start="89:27" pos:end="89:48">(<argument pos:start="89:28" pos:end="89:28"><expr pos:start="89:28" pos:end="89:28"><name pos:start="89:28" pos:end="89:28">s</name></expr></argument>, <argument pos:start="89:31" pos:end="89:47"><expr pos:start="89:31" pos:end="89:47"><name pos:start="89:31" pos:end="89:47"><name pos:start="89:31" pos:end="89:31">s</name><operator pos:start="89:32" pos:end="89:33">-&gt;</operator><name pos:start="89:34" pos:end="89:47">picture_number</name></name></expr></argument>)</argument_list></call> <operator pos:start="89:50" pos:end="89:50">&lt;</operator> <literal type="number" pos:start="89:52" pos:end="89:52">0</literal></expr>)</condition><block type="pseudo" pos:start="91:13" pos:end="91:22"><block_content pos:start="91:13" pos:end="91:22">

            <return pos:start="91:13" pos:end="91:22">return <expr pos:start="91:20" pos:end="91:21"><operator pos:start="91:20" pos:end="91:20">-</operator><literal type="number" pos:start="91:21" pos:end="91:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="95:9" pos:end="95:44"><expr pos:start="95:9" pos:end="95:43"><name pos:start="95:9" pos:end="95:26"><name pos:start="95:9" pos:end="95:13">avctx</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:26">header_bits</name></name> <operator pos:start="95:28" pos:end="95:28">=</operator> <name pos:start="95:30" pos:end="95:43"><name pos:start="95:30" pos:end="95:30">s</name><operator pos:start="95:31" pos:end="95:32">-&gt;</operator><name pos:start="95:33" pos:end="95:43">header_bits</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:40"><expr pos:start="97:9" pos:end="97:39"><name pos:start="97:9" pos:end="97:22"><name pos:start="97:9" pos:end="97:13">avctx</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:22">mv_bits</name></name>     <operator pos:start="97:28" pos:end="97:28">=</operator> <name pos:start="97:30" pos:end="97:39"><name pos:start="97:30" pos:end="97:30">s</name><operator pos:start="97:31" pos:end="97:32">-&gt;</operator><name pos:start="97:33" pos:end="97:39">mv_bits</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:42"><expr pos:start="99:9" pos:end="99:41"><name pos:start="99:9" pos:end="99:24"><name pos:start="99:9" pos:end="99:13">avctx</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:24">misc_bits</name></name>   <operator pos:start="99:28" pos:end="99:28">=</operator> <name pos:start="99:30" pos:end="99:41"><name pos:start="99:30" pos:end="99:30">s</name><operator pos:start="99:31" pos:end="99:32">-&gt;</operator><name pos:start="99:33" pos:end="99:41">misc_bits</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:43"><expr pos:start="101:9" pos:end="101:42"><name pos:start="101:9" pos:end="101:25"><name pos:start="101:9" pos:end="101:13">avctx</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:25">i_tex_bits</name></name>  <operator pos:start="101:28" pos:end="101:28">=</operator> <name pos:start="101:30" pos:end="101:42"><name pos:start="101:30" pos:end="101:30">s</name><operator pos:start="101:31" pos:end="101:32">-&gt;</operator><name pos:start="101:33" pos:end="101:42">i_tex_bits</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:43"><expr pos:start="103:9" pos:end="103:42"><name pos:start="103:9" pos:end="103:25"><name pos:start="103:9" pos:end="103:13">avctx</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:25">p_tex_bits</name></name>  <operator pos:start="103:28" pos:end="103:28">=</operator> <name pos:start="103:30" pos:end="103:42"><name pos:start="103:30" pos:end="103:30">s</name><operator pos:start="103:31" pos:end="103:32">-&gt;</operator><name pos:start="103:33" pos:end="103:42">p_tex_bits</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:40"><expr pos:start="105:9" pos:end="105:39"><name pos:start="105:9" pos:end="105:22"><name pos:start="105:9" pos:end="105:13">avctx</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:22">i_count</name></name>     <operator pos:start="105:28" pos:end="105:28">=</operator> <name pos:start="105:30" pos:end="105:39"><name pos:start="105:30" pos:end="105:30">s</name><operator pos:start="105:31" pos:end="105:32">-&gt;</operator><name pos:start="105:33" pos:end="105:39">i_count</name></name></expr>;</expr_stmt>

        <comment type="line" pos:start="107:9" pos:end="107:35">// FIXME f/b_count in avctx</comment>

        <expr_stmt pos:start="109:9" pos:end="109:68"><expr pos:start="109:9" pos:end="109:67"><name pos:start="109:9" pos:end="109:22"><name pos:start="109:9" pos:end="109:13">avctx</name><operator pos:start="109:14" pos:end="109:15">-&gt;</operator><name pos:start="109:16" pos:end="109:22">p_count</name></name>     <operator pos:start="109:28" pos:end="109:28">=</operator> <name pos:start="109:30" pos:end="109:38"><name pos:start="109:30" pos:end="109:30">s</name><operator pos:start="109:31" pos:end="109:32">-&gt;</operator><name pos:start="109:33" pos:end="109:38">mb_num</name></name> <operator pos:start="109:40" pos:end="109:40">-</operator> <name pos:start="109:42" pos:end="109:51"><name pos:start="109:42" pos:end="109:42">s</name><operator pos:start="109:43" pos:end="109:44">-&gt;</operator><name pos:start="109:45" pos:end="109:51">i_count</name></name> <operator pos:start="109:53" pos:end="109:53">-</operator> <name pos:start="109:55" pos:end="109:67"><name pos:start="109:55" pos:end="109:55">s</name><operator pos:start="109:56" pos:end="109:57">-&gt;</operator><name pos:start="109:58" pos:end="109:67">skip_count</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:43"><expr pos:start="111:9" pos:end="111:42"><name pos:start="111:9" pos:end="111:25"><name pos:start="111:9" pos:end="111:13">avctx</name><operator pos:start="111:14" pos:end="111:15">-&gt;</operator><name pos:start="111:16" pos:end="111:25">skip_count</name></name>  <operator pos:start="111:28" pos:end="111:28">=</operator> <name pos:start="111:30" pos:end="111:42"><name pos:start="111:30" pos:end="111:30">s</name><operator pos:start="111:31" pos:end="111:32">-&gt;</operator><name pos:start="111:33" pos:end="111:42">skip_count</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="115:9" pos:end="115:28"><expr pos:start="115:9" pos:end="115:27"><call pos:start="115:9" pos:end="115:27"><name pos:start="115:9" pos:end="115:24">ff_MPV_frame_end</name><argument_list pos:start="115:25" pos:end="115:27">(<argument pos:start="115:26" pos:end="115:26"><expr pos:start="115:26" pos:end="115:26"><name pos:start="115:26" pos:end="115:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="119:9" pos:end="121:47"><if pos:start="119:9" pos:end="121:47">if <condition pos:start="119:12" pos:end="119:63">(<expr pos:start="119:13" pos:end="119:62"><name pos:start="119:13" pos:end="119:32">CONFIG_MJPEG_ENCODER</name> <operator pos:start="119:34" pos:end="119:35">&amp;&amp;</operator> <name pos:start="119:37" pos:end="119:49"><name pos:start="119:37" pos:end="119:37">s</name><operator pos:start="119:38" pos:end="119:39">-&gt;</operator><name pos:start="119:40" pos:end="119:49">out_format</name></name> <operator pos:start="119:51" pos:end="119:52">==</operator> <name pos:start="119:54" pos:end="119:62">FMT_MJPEG</name></expr>)</condition><block type="pseudo" pos:start="121:13" pos:end="121:47"><block_content pos:start="121:13" pos:end="121:47">

            <expr_stmt pos:start="121:13" pos:end="121:47"><expr pos:start="121:13" pos:end="121:46"><call pos:start="121:13" pos:end="121:46"><name pos:start="121:13" pos:end="121:43">ff_mjpeg_encode_picture_trailer</name><argument_list pos:start="121:44" pos:end="121:46">(<argument pos:start="121:45" pos:end="121:45"><expr pos:start="121:45" pos:end="121:45"><name pos:start="121:45" pos:end="121:45">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="125:9" pos:end="199:9"><if pos:start="125:9" pos:end="199:9">if <condition pos:start="125:12" pos:end="125:34">(<expr pos:start="125:13" pos:end="125:33"><name pos:start="125:13" pos:end="125:33"><name pos:start="125:13" pos:end="125:17">avctx</name><operator pos:start="125:18" pos:end="125:19">-&gt;</operator><name pos:start="125:20" pos:end="125:33">rc_buffer_size</name></name></expr>)</condition> <block pos:start="125:36" pos:end="199:9">{<block_content pos:start="127:13" pos:end="197:42">

            <decl_stmt pos:start="127:13" pos:end="127:53"><decl pos:start="127:13" pos:end="127:52"><type pos:start="127:13" pos:end="127:32"><name pos:start="127:13" pos:end="127:30">RateControlContext</name> <modifier pos:start="127:32" pos:end="127:32">*</modifier></type><name pos:start="127:33" pos:end="127:35">rcc</name> <init pos:start="127:37" pos:end="127:52">= <expr pos:start="127:39" pos:end="127:52"><operator pos:start="127:39" pos:end="127:39">&amp;</operator><name pos:start="127:40" pos:end="127:52"><name pos:start="127:40" pos:end="127:40">s</name><operator pos:start="127:41" pos:end="127:42">-&gt;</operator><name pos:start="127:43" pos:end="127:52">rc_context</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="129:13" pos:end="129:79"><decl pos:start="129:13" pos:end="129:78"><type pos:start="129:13" pos:end="129:15"><name pos:start="129:13" pos:end="129:15">int</name></type> <name pos:start="129:17" pos:end="129:24">max_size</name> <init pos:start="129:26" pos:end="129:78">= <expr pos:start="129:28" pos:end="129:78"><name pos:start="129:28" pos:end="129:44"><name pos:start="129:28" pos:end="129:30">rcc</name><operator pos:start="129:31" pos:end="129:32">-&gt;</operator><name pos:start="129:33" pos:end="129:44">buffer_index</name></name> <operator pos:start="129:46" pos:end="129:46">*</operator> <name pos:start="129:48" pos:end="129:78"><name pos:start="129:48" pos:end="129:52">avctx</name><operator pos:start="129:53" pos:end="129:54">-&gt;</operator><name pos:start="129:55" pos:end="129:78">rc_max_available_vbv_use</name></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="133:13" pos:end="193:13"><if pos:start="133:13" pos:end="193:13">if <condition pos:start="133:16" pos:end="135:43">(<expr pos:start="133:17" pos:end="135:42"><call pos:start="133:17" pos:end="133:38"><name pos:start="133:17" pos:end="133:30">put_bits_count</name><argument_list pos:start="133:31" pos:end="133:38">(<argument pos:start="133:32" pos:end="133:37"><expr pos:start="133:32" pos:end="133:37"><operator pos:start="133:32" pos:end="133:32">&amp;</operator><name pos:start="133:33" pos:end="133:37"><name pos:start="133:33" pos:end="133:33">s</name><operator pos:start="133:34" pos:end="133:35">-&gt;</operator><name pos:start="133:36" pos:end="133:37">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="133:40" pos:end="133:40">&gt;</operator> <name pos:start="133:42" pos:end="133:49">max_size</name> <operator pos:start="133:51" pos:end="133:52">&amp;&amp;</operator>

                <name pos:start="135:17" pos:end="135:25"><name pos:start="135:17" pos:end="135:17">s</name><operator pos:start="135:18" pos:end="135:19">-&gt;</operator><name pos:start="135:20" pos:end="135:25">lambda</name></name> <operator pos:start="135:27" pos:end="135:27">&lt;</operator> <name pos:start="135:29" pos:end="135:42"><name pos:start="135:29" pos:end="135:29">s</name><operator pos:start="135:30" pos:end="135:31">-&gt;</operator><name pos:start="135:32" pos:end="135:36">avctx</name><operator pos:start="135:37" pos:end="135:38">-&gt;</operator><name pos:start="135:39" pos:end="135:42">lmax</name></name></expr>)</condition> <block pos:start="135:45" pos:end="193:13">{<block_content pos:start="137:17" pos:end="191:31">

                <expr_stmt pos:start="137:17" pos:end="139:68"><expr pos:start="137:17" pos:end="139:67"><name pos:start="137:17" pos:end="137:30"><name pos:start="137:17" pos:end="137:17">s</name><operator pos:start="137:18" pos:end="137:19">-&gt;</operator><name pos:start="137:20" pos:end="137:30">next_lambda</name></name> <operator pos:start="137:32" pos:end="137:32">=</operator> <call pos:start="137:34" pos:end="139:67"><name pos:start="137:34" pos:end="137:38">FFMAX</name><argument_list pos:start="137:39" pos:end="139:67">(<argument pos:start="137:40" pos:end="137:52"><expr pos:start="137:40" pos:end="137:52"><name pos:start="137:40" pos:end="137:48"><name pos:start="137:40" pos:end="137:40">s</name><operator pos:start="137:41" pos:end="137:42">-&gt;</operator><name pos:start="137:43" pos:end="137:48">lambda</name></name> <operator pos:start="137:50" pos:end="137:50">+</operator> <literal type="number" pos:start="137:52" pos:end="137:52">1</literal></expr></argument>, <argument pos:start="137:55" pos:end="139:66"><expr pos:start="137:55" pos:end="139:66"><name pos:start="137:55" pos:end="137:63"><name pos:start="137:55" pos:end="137:55">s</name><operator pos:start="137:56" pos:end="137:57">-&gt;</operator><name pos:start="137:58" pos:end="137:63">lambda</name></name> <operator pos:start="137:65" pos:end="137:65">*</operator>

                                       <operator pos:start="139:40" pos:end="139:40">(</operator><name pos:start="139:41" pos:end="139:49"><name pos:start="139:41" pos:end="139:41">s</name><operator pos:start="139:42" pos:end="139:43">-&gt;</operator><name pos:start="139:44" pos:end="139:49">qscale</name></name> <operator pos:start="139:51" pos:end="139:51">+</operator> <literal type="number" pos:start="139:53" pos:end="139:53">1</literal><operator pos:start="139:54" pos:end="139:54">)</operator> <operator pos:start="139:56" pos:end="139:56">/</operator> <name pos:start="139:58" pos:end="139:66"><name pos:start="139:58" pos:end="139:58">s</name><operator pos:start="139:59" pos:end="139:60">-&gt;</operator><name pos:start="139:61" pos:end="139:66">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="141:17" pos:end="155:17"><if pos:start="141:17" pos:end="155:17">if <condition pos:start="141:20" pos:end="141:38">(<expr pos:start="141:21" pos:end="141:37"><name pos:start="141:21" pos:end="141:37"><name pos:start="141:21" pos:end="141:21">s</name><operator pos:start="141:22" pos:end="141:23">-&gt;</operator><name pos:start="141:24" pos:end="141:37">adaptive_quant</name></name></expr>)</condition> <block pos:start="141:40" pos:end="155:17">{<block_content pos:start="143:21" pos:end="153:45">

                    <decl_stmt pos:start="143:21" pos:end="143:26"><decl pos:start="143:21" pos:end="143:25"><type pos:start="143:21" pos:end="143:23"><name pos:start="143:21" pos:end="143:23">int</name></type> <name pos:start="143:25" pos:end="143:25">i</name></decl>;</decl_stmt>

                    <for pos:start="145:21" pos:end="153:45">for <control pos:start="145:25" pos:end="145:69">(<init pos:start="145:26" pos:end="145:31"><expr pos:start="145:26" pos:end="145:30"><name pos:start="145:26" pos:end="145:26">i</name> <operator pos:start="145:28" pos:end="145:28">=</operator> <literal type="number" pos:start="145:30" pos:end="145:30">0</literal></expr>;</init> <condition pos:start="145:33" pos:end="145:64"><expr pos:start="145:33" pos:end="145:63"><name pos:start="145:33" pos:end="145:33">i</name> <operator pos:start="145:35" pos:end="145:35">&lt;</operator> <name pos:start="145:37" pos:end="145:48"><name pos:start="145:37" pos:end="145:37">s</name><operator pos:start="145:38" pos:end="145:39">-&gt;</operator><name pos:start="145:40" pos:end="145:48">mb_height</name></name> <operator pos:start="145:50" pos:end="145:50">*</operator> <name pos:start="145:52" pos:end="145:63"><name pos:start="145:52" pos:end="145:52">s</name><operator pos:start="145:53" pos:end="145:54">-&gt;</operator><name pos:start="145:55" pos:end="145:63">mb_stride</name></name></expr>;</condition> <incr pos:start="145:66" pos:end="145:68"><expr pos:start="145:66" pos:end="145:68"><name pos:start="145:66" pos:end="145:66">i</name><operator pos:start="145:67" pos:end="145:68">++</operator></expr></incr>)</control><block type="pseudo" pos:start="147:25" pos:end="153:45"><block_content pos:start="147:25" pos:end="153:45">

                        <expr_stmt pos:start="147:25" pos:end="153:45"><expr pos:start="147:25" pos:end="153:44"><name pos:start="147:25" pos:end="147:42"><name pos:start="147:25" pos:end="147:25">s</name><operator pos:start="147:26" pos:end="147:27">-&gt;</operator><name pos:start="147:28" pos:end="147:39">lambda_table</name><index pos:start="147:40" pos:end="147:42">[<expr pos:start="147:41" pos:end="147:41"><name pos:start="147:41" pos:end="147:41">i</name></expr>]</index></name> <operator pos:start="147:44" pos:end="147:44">=</operator>

                            <call pos:start="149:29" pos:end="153:44"><name pos:start="149:29" pos:end="149:33">FFMAX</name><argument_list pos:start="149:34" pos:end="153:44">(<argument pos:start="149:35" pos:end="149:56"><expr pos:start="149:35" pos:end="149:56"><name pos:start="149:35" pos:end="149:52"><name pos:start="149:35" pos:end="149:35">s</name><operator pos:start="149:36" pos:end="149:37">-&gt;</operator><name pos:start="149:38" pos:end="149:49">lambda_table</name><index pos:start="149:50" pos:end="149:52">[<expr pos:start="149:51" pos:end="149:51"><name pos:start="149:51" pos:end="149:51">i</name></expr>]</index></name> <operator pos:start="149:54" pos:end="149:54">+</operator> <literal type="number" pos:start="149:56" pos:end="149:56">1</literal></expr></argument>,

                                  <argument pos:start="151:35" pos:end="153:43"><expr pos:start="151:35" pos:end="153:43"><name pos:start="151:35" pos:end="151:52"><name pos:start="151:35" pos:end="151:35">s</name><operator pos:start="151:36" pos:end="151:37">-&gt;</operator><name pos:start="151:38" pos:end="151:49">lambda_table</name><index pos:start="151:50" pos:end="151:52">[<expr pos:start="151:51" pos:end="151:51"><name pos:start="151:51" pos:end="151:51">i</name></expr>]</index></name> <operator pos:start="151:54" pos:end="151:54">*</operator> <operator pos:start="151:56" pos:end="151:56">(</operator><name pos:start="151:57" pos:end="151:65"><name pos:start="151:57" pos:end="151:57">s</name><operator pos:start="151:58" pos:end="151:59">-&gt;</operator><name pos:start="151:60" pos:end="151:65">qscale</name></name> <operator pos:start="151:67" pos:end="151:67">+</operator> <literal type="number" pos:start="151:69" pos:end="151:69">1</literal><operator pos:start="151:70" pos:end="151:70">)</operator> <operator pos:start="151:72" pos:end="151:72">/</operator>

                                  <name pos:start="153:35" pos:end="153:43"><name pos:start="153:35" pos:end="153:35">s</name><operator pos:start="153:36" pos:end="153:37">-&gt;</operator><name pos:start="153:38" pos:end="153:43">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="157:17" pos:end="157:34"><expr pos:start="157:17" pos:end="157:33"><name pos:start="157:17" pos:end="157:29"><name pos:start="157:17" pos:end="157:17">s</name><operator pos:start="157:18" pos:end="157:19">-&gt;</operator><name pos:start="157:20" pos:end="157:29">mb_skipped</name></name> <operator pos:start="157:31" pos:end="157:31">=</operator> <literal type="number" pos:start="157:33" pos:end="157:33">0</literal></expr>;</expr_stmt>        <comment type="line" pos:start="157:43" pos:end="157:70">// done in MPV_frame_start()</comment>

                <comment type="line" pos:start="159:17" pos:end="159:62">// done in encode_picture() so we must undo it</comment>

                <if_stmt pos:start="161:17" pos:end="171:17"><if pos:start="161:17" pos:end="171:17">if <condition pos:start="161:20" pos:end="161:54">(<expr pos:start="161:21" pos:end="161:53"><name pos:start="161:21" pos:end="161:32"><name pos:start="161:21" pos:end="161:21">s</name><operator pos:start="161:22" pos:end="161:23">-&gt;</operator><name pos:start="161:24" pos:end="161:32">pict_type</name></name> <operator pos:start="161:34" pos:end="161:35">==</operator> <name pos:start="161:37" pos:end="161:53">AV_PICTURE_TYPE_P</name></expr>)</condition> <block pos:start="161:56" pos:end="171:17">{<block_content pos:start="163:21" pos:end="169:44">

                    <if_stmt pos:start="163:21" pos:end="169:44"><if pos:start="163:21" pos:end="169:44">if <condition pos:start="163:24" pos:end="167:57">(<expr pos:start="163:25" pos:end="167:56"><name pos:start="163:25" pos:end="163:44"><name pos:start="163:25" pos:end="163:25">s</name><operator pos:start="163:26" pos:end="163:27">-&gt;</operator><name pos:start="163:28" pos:end="163:44">flipflop_rounding</name></name>          <operator pos:start="163:55" pos:end="163:56">||</operator>

                        <name pos:start="165:25" pos:end="165:35"><name pos:start="165:25" pos:end="165:25">s</name><operator pos:start="165:26" pos:end="165:27">-&gt;</operator><name pos:start="165:28" pos:end="165:35">codec_id</name></name> <operator pos:start="165:37" pos:end="165:38">==</operator> <name pos:start="165:40" pos:end="165:56">AV_CODEC_ID_H263P</name> <operator pos:start="165:58" pos:end="165:59">||</operator>

                        <name pos:start="167:25" pos:end="167:35"><name pos:start="167:25" pos:end="167:25">s</name><operator pos:start="167:26" pos:end="167:27">-&gt;</operator><name pos:start="167:28" pos:end="167:35">codec_id</name></name> <operator pos:start="167:37" pos:end="167:38">==</operator> <name pos:start="167:40" pos:end="167:56">AV_CODEC_ID_MPEG4</name></expr>)</condition><block type="pseudo" pos:start="169:25" pos:end="169:44"><block_content pos:start="169:25" pos:end="169:44">

                        <expr_stmt pos:start="169:25" pos:end="169:44"><expr pos:start="169:25" pos:end="169:43"><name pos:start="169:25" pos:end="169:38"><name pos:start="169:25" pos:end="169:25">s</name><operator pos:start="169:26" pos:end="169:27">-&gt;</operator><name pos:start="169:28" pos:end="169:38">no_rounding</name></name> <operator pos:start="169:40" pos:end="169:41">^=</operator> <literal type="number" pos:start="169:43" pos:end="169:43">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="173:17" pos:end="179:17"><if pos:start="173:17" pos:end="179:17">if <condition pos:start="173:20" pos:end="173:54">(<expr pos:start="173:21" pos:end="173:53"><name pos:start="173:21" pos:end="173:32"><name pos:start="173:21" pos:end="173:21">s</name><operator pos:start="173:22" pos:end="173:23">-&gt;</operator><name pos:start="173:24" pos:end="173:32">pict_type</name></name> <operator pos:start="173:34" pos:end="173:35">!=</operator> <name pos:start="173:37" pos:end="173:53">AV_PICTURE_TYPE_B</name></expr>)</condition> <block pos:start="173:56" pos:end="179:17">{<block_content pos:start="175:21" pos:end="177:62">

                    <expr_stmt pos:start="175:21" pos:end="175:59"><expr pos:start="175:21" pos:end="175:58"><name pos:start="175:21" pos:end="175:32"><name pos:start="175:21" pos:end="175:21">s</name><operator pos:start="175:22" pos:end="175:23">-&gt;</operator><name pos:start="175:24" pos:end="175:32">time_base</name></name>       <operator pos:start="175:40" pos:end="175:40">=</operator> <name pos:start="175:42" pos:end="175:58"><name pos:start="175:42" pos:end="175:42">s</name><operator pos:start="175:43" pos:end="175:44">-&gt;</operator><name pos:start="175:45" pos:end="175:58">last_time_base</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="177:21" pos:end="177:62"><expr pos:start="177:21" pos:end="177:61"><name pos:start="177:21" pos:end="177:38"><name pos:start="177:21" pos:end="177:21">s</name><operator pos:start="177:22" pos:end="177:23">-&gt;</operator><name pos:start="177:24" pos:end="177:38">last_non_b_time</name></name> <operator pos:start="177:40" pos:end="177:40">=</operator> <name pos:start="177:42" pos:end="177:48"><name pos:start="177:42" pos:end="177:42">s</name><operator pos:start="177:43" pos:end="177:44">-&gt;</operator><name pos:start="177:45" pos:end="177:48">time</name></name> <operator pos:start="177:50" pos:end="177:50">-</operator> <name pos:start="177:52" pos:end="177:61"><name pos:start="177:52" pos:end="177:52">s</name><operator pos:start="177:53" pos:end="177:54">-&gt;</operator><name pos:start="177:55" pos:end="177:61">pp_time</name></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <comment type="line" pos:start="181:17" pos:end="181:70">//av_log(NULL, AV_LOG_ERROR, "R:%d ", s-&gt;next_lambda);</comment>

                <for pos:start="183:17" pos:end="189:17">for <control pos:start="183:21" pos:end="183:51">(<init pos:start="183:22" pos:end="183:27"><expr pos:start="183:22" pos:end="183:26"><name pos:start="183:22" pos:end="183:22">i</name> <operator pos:start="183:24" pos:end="183:24">=</operator> <literal type="number" pos:start="183:26" pos:end="183:26">0</literal></expr>;</init> <condition pos:start="183:29" pos:end="183:46"><expr pos:start="183:29" pos:end="183:45"><name pos:start="183:29" pos:end="183:29">i</name> <operator pos:start="183:31" pos:end="183:31">&lt;</operator> <name pos:start="183:33" pos:end="183:45">context_count</name></expr>;</condition> <incr pos:start="183:48" pos:end="183:50"><expr pos:start="183:48" pos:end="183:50"><name pos:start="183:48" pos:end="183:48">i</name><operator pos:start="183:49" pos:end="183:50">++</operator></expr></incr>)</control> <block pos:start="183:53" pos:end="189:17">{<block_content pos:start="185:21" pos:end="187:70">

                    <decl_stmt pos:start="185:21" pos:end="185:66"><decl pos:start="185:21" pos:end="185:65"><type pos:start="185:21" pos:end="185:35"><name pos:start="185:21" pos:end="185:33">PutBitContext</name> <modifier pos:start="185:35" pos:end="185:35">*</modifier></type><name pos:start="185:36" pos:end="185:37">pb</name> <init pos:start="185:39" pos:end="185:65">= <expr pos:start="185:41" pos:end="185:65"><operator pos:start="185:41" pos:end="185:41">&amp;</operator><name pos:start="185:42" pos:end="185:61"><name pos:start="185:42" pos:end="185:42">s</name><operator pos:start="185:43" pos:end="185:44">-&gt;</operator><name pos:start="185:45" pos:end="185:58">thread_context</name><index pos:start="185:59" pos:end="185:61">[<expr pos:start="185:60" pos:end="185:60"><name pos:start="185:60" pos:end="185:60">i</name></expr>]</index></name><operator pos:start="185:62" pos:end="185:63">-&gt;</operator><name pos:start="185:64" pos:end="185:65">pb</name></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="187:21" pos:end="187:70"><expr pos:start="187:21" pos:end="187:69"><call pos:start="187:21" pos:end="187:69"><name pos:start="187:21" pos:end="187:33">init_put_bits</name><argument_list pos:start="187:34" pos:end="187:69">(<argument pos:start="187:35" pos:end="187:36"><expr pos:start="187:35" pos:end="187:36"><name pos:start="187:35" pos:end="187:36">pb</name></expr></argument>, <argument pos:start="187:39" pos:end="187:45"><expr pos:start="187:39" pos:end="187:45"><name pos:start="187:39" pos:end="187:45"><name pos:start="187:39" pos:end="187:40">pb</name><operator pos:start="187:41" pos:end="187:42">-&gt;</operator><name pos:start="187:43" pos:end="187:45">buf</name></name></expr></argument>, <argument pos:start="187:48" pos:end="187:68"><expr pos:start="187:48" pos:end="187:68"><name pos:start="187:48" pos:end="187:58"><name pos:start="187:48" pos:end="187:49">pb</name><operator pos:start="187:50" pos:end="187:51">-&gt;</operator><name pos:start="187:52" pos:end="187:58">buf_end</name></name> <operator pos:start="187:60" pos:end="187:60">-</operator> <name pos:start="187:62" pos:end="187:68"><name pos:start="187:62" pos:end="187:63">pb</name><operator pos:start="187:64" pos:end="187:65">-&gt;</operator><name pos:start="187:66" pos:end="187:68">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

                <goto pos:start="191:17" pos:end="191:31">goto <name pos:start="191:22" pos:end="191:30">vbv_retry</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="197:13" pos:end="197:42"><expr pos:start="197:13" pos:end="197:41"><call pos:start="197:13" pos:end="197:41"><name pos:start="197:13" pos:end="197:18">assert</name><argument_list pos:start="197:19" pos:end="197:41">(<argument pos:start="197:20" pos:end="197:40"><expr pos:start="197:20" pos:end="197:40"><name pos:start="197:20" pos:end="197:40"><name pos:start="197:20" pos:end="197:20">s</name><operator pos:start="197:21" pos:end="197:22">-&gt;</operator><name pos:start="197:23" pos:end="197:27">avctx</name><operator pos:start="197:28" pos:end="197:29">-&gt;</operator><name pos:start="197:30" pos:end="197:40">rc_max_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="203:9" pos:end="205:36"><if pos:start="203:9" pos:end="205:36">if <condition pos:start="203:12" pos:end="203:40">(<expr pos:start="203:13" pos:end="203:39"><name pos:start="203:13" pos:end="203:20"><name pos:start="203:13" pos:end="203:13">s</name><operator pos:start="203:14" pos:end="203:15">-&gt;</operator><name pos:start="203:16" pos:end="203:20">flags</name></name> <operator pos:start="203:22" pos:end="203:22">&amp;</operator> <name pos:start="203:24" pos:end="203:39">CODEC_FLAG_PASS1</name></expr>)</condition><block type="pseudo" pos:start="205:13" pos:end="205:36"><block_content pos:start="205:13" pos:end="205:36">

            <expr_stmt pos:start="205:13" pos:end="205:36"><expr pos:start="205:13" pos:end="205:35"><call pos:start="205:13" pos:end="205:35"><name pos:start="205:13" pos:end="205:32">ff_write_pass1_stats</name><argument_list pos:start="205:33" pos:end="205:35">(<argument pos:start="205:34" pos:end="205:34"><expr pos:start="205:34" pos:end="205:34"><name pos:start="205:34" pos:end="205:34">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <for pos:start="209:9" pos:end="215:9">for <control pos:start="209:13" pos:end="209:31">(<init pos:start="209:14" pos:end="209:19"><expr pos:start="209:14" pos:end="209:18"><name pos:start="209:14" pos:end="209:14">i</name> <operator pos:start="209:16" pos:end="209:16">=</operator> <literal type="number" pos:start="209:18" pos:end="209:18">0</literal></expr>;</init> <condition pos:start="209:21" pos:end="209:26"><expr pos:start="209:21" pos:end="209:25"><name pos:start="209:21" pos:end="209:21">i</name> <operator pos:start="209:23" pos:end="209:23">&lt;</operator> <literal type="number" pos:start="209:25" pos:end="209:25">4</literal></expr>;</condition> <incr pos:start="209:28" pos:end="209:30"><expr pos:start="209:28" pos:end="209:30"><name pos:start="209:28" pos:end="209:28">i</name><operator pos:start="209:29" pos:end="209:30">++</operator></expr></incr>)</control> <block pos:start="209:33" pos:end="215:9">{<block_content pos:start="211:13" pos:end="213:66">

            <expr_stmt pos:start="211:13" pos:end="211:79"><expr pos:start="211:13" pos:end="211:78"><name pos:start="211:13" pos:end="211:46"><name pos:start="211:13" pos:end="211:13">s</name><operator pos:start="211:14" pos:end="211:15">-&gt;</operator><name pos:start="211:16" pos:end="211:34">current_picture_ptr</name><operator pos:start="211:35" pos:end="211:36">-&gt;</operator><name pos:start="211:37" pos:end="211:37">f</name><operator pos:start="211:38" pos:end="211:38">.</operator><name pos:start="211:39" pos:end="211:43">error</name><index pos:start="211:44" pos:end="211:46">[<expr pos:start="211:45" pos:end="211:45"><name pos:start="211:45" pos:end="211:45">i</name></expr>]</index></name> <operator pos:start="211:48" pos:end="211:48">=</operator> <name pos:start="211:50" pos:end="211:78"><name pos:start="211:50" pos:end="211:50">s</name><operator pos:start="211:51" pos:end="211:52">-&gt;</operator><name pos:start="211:53" pos:end="211:67">current_picture</name><operator pos:start="211:68" pos:end="211:68">.</operator><name pos:start="211:69" pos:end="211:69">f</name><operator pos:start="211:70" pos:end="211:70">.</operator><name pos:start="211:71" pos:end="211:75">error</name><index pos:start="211:76" pos:end="211:78">[<expr pos:start="211:77" pos:end="211:77"><name pos:start="211:77" pos:end="211:77">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="213:13" pos:end="213:66"><expr pos:start="213:13" pos:end="213:65"><name pos:start="213:13" pos:end="213:27"><name pos:start="213:13" pos:end="213:17">avctx</name><operator pos:start="213:18" pos:end="213:19">-&gt;</operator><name pos:start="213:20" pos:end="213:24">error</name><index pos:start="213:25" pos:end="213:27">[<expr pos:start="213:26" pos:end="213:26"><name pos:start="213:26" pos:end="213:26">i</name></expr>]</index></name> <operator pos:start="213:29" pos:end="213:30">+=</operator> <name pos:start="213:32" pos:end="213:65"><name pos:start="213:32" pos:end="213:32">s</name><operator pos:start="213:33" pos:end="213:34">-&gt;</operator><name pos:start="213:35" pos:end="213:53">current_picture_ptr</name><operator pos:start="213:54" pos:end="213:55">-&gt;</operator><name pos:start="213:56" pos:end="213:56">f</name><operator pos:start="213:57" pos:end="213:57">.</operator><name pos:start="213:58" pos:end="213:62">error</name><index pos:start="213:63" pos:end="213:65">[<expr pos:start="213:64" pos:end="213:64"><name pos:start="213:64" pos:end="213:64">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="219:9" pos:end="225:47"><if pos:start="219:9" pos:end="225:47">if <condition pos:start="219:12" pos:end="219:40">(<expr pos:start="219:13" pos:end="219:39"><name pos:start="219:13" pos:end="219:20"><name pos:start="219:13" pos:end="219:13">s</name><operator pos:start="219:14" pos:end="219:15">-&gt;</operator><name pos:start="219:16" pos:end="219:20">flags</name></name> <operator pos:start="219:22" pos:end="219:22">&amp;</operator> <name pos:start="219:24" pos:end="219:39">CODEC_FLAG_PASS1</name></expr>)</condition><block type="pseudo" pos:start="221:13" pos:end="225:47"><block_content pos:start="221:13" pos:end="225:47">

            <expr_stmt pos:start="221:13" pos:end="225:47"><expr pos:start="221:13" pos:end="225:46"><call pos:start="221:13" pos:end="225:46"><name pos:start="221:13" pos:end="221:18">assert</name><argument_list pos:start="221:19" pos:end="225:46">(<argument pos:start="221:20" pos:end="225:45"><expr pos:start="221:20" pos:end="225:45"><name pos:start="221:20" pos:end="221:37"><name pos:start="221:20" pos:end="221:24">avctx</name><operator pos:start="221:25" pos:end="221:26">-&gt;</operator><name pos:start="221:27" pos:end="221:37">header_bits</name></name> <operator pos:start="221:39" pos:end="221:39">+</operator> <name pos:start="221:41" pos:end="221:54"><name pos:start="221:41" pos:end="221:45">avctx</name><operator pos:start="221:46" pos:end="221:47">-&gt;</operator><name pos:start="221:48" pos:end="221:54">mv_bits</name></name> <operator pos:start="221:56" pos:end="221:56">+</operator> <name pos:start="221:58" pos:end="221:73"><name pos:start="221:58" pos:end="221:62">avctx</name><operator pos:start="221:63" pos:end="221:64">-&gt;</operator><name pos:start="221:65" pos:end="221:73">misc_bits</name></name> <operator pos:start="221:75" pos:end="221:75">+</operator>

                   <name pos:start="223:20" pos:end="223:36"><name pos:start="223:20" pos:end="223:24">avctx</name><operator pos:start="223:25" pos:end="223:26">-&gt;</operator><name pos:start="223:27" pos:end="223:36">i_tex_bits</name></name> <operator pos:start="223:38" pos:end="223:38">+</operator> <name pos:start="223:40" pos:end="223:56"><name pos:start="223:40" pos:end="223:44">avctx</name><operator pos:start="223:45" pos:end="223:46">-&gt;</operator><name pos:start="223:47" pos:end="223:56">p_tex_bits</name></name> <operator pos:start="223:58" pos:end="223:59">==</operator>

                       <call pos:start="225:24" pos:end="225:45"><name pos:start="225:24" pos:end="225:37">put_bits_count</name><argument_list pos:start="225:38" pos:end="225:45">(<argument pos:start="225:39" pos:end="225:44"><expr pos:start="225:39" pos:end="225:44"><operator pos:start="225:39" pos:end="225:39">&amp;</operator><name pos:start="225:40" pos:end="225:44"><name pos:start="225:40" pos:end="225:40">s</name><operator pos:start="225:41" pos:end="225:42">-&gt;</operator><name pos:start="225:43" pos:end="225:44">pb</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="227:9" pos:end="227:31"><expr pos:start="227:9" pos:end="227:30"><call pos:start="227:9" pos:end="227:30"><name pos:start="227:9" pos:end="227:22">flush_put_bits</name><argument_list pos:start="227:23" pos:end="227:30">(<argument pos:start="227:24" pos:end="227:29"><expr pos:start="227:24" pos:end="227:29"><operator pos:start="227:24" pos:end="227:24">&amp;</operator><name pos:start="227:25" pos:end="227:29"><name pos:start="227:25" pos:end="227:25">s</name><operator pos:start="227:26" pos:end="227:27">-&gt;</operator><name pos:start="227:28" pos:end="227:29">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="229:9" pos:end="229:48"><expr pos:start="229:9" pos:end="229:47"><name pos:start="229:9" pos:end="229:21"><name pos:start="229:9" pos:end="229:9">s</name><operator pos:start="229:10" pos:end="229:11">-&gt;</operator><name pos:start="229:12" pos:end="229:21">frame_bits</name></name>  <operator pos:start="229:24" pos:end="229:24">=</operator> <call pos:start="229:26" pos:end="229:47"><name pos:start="229:26" pos:end="229:39">put_bits_count</name><argument_list pos:start="229:40" pos:end="229:47">(<argument pos:start="229:41" pos:end="229:46"><expr pos:start="229:41" pos:end="229:46"><operator pos:start="229:41" pos:end="229:41">&amp;</operator><name pos:start="229:42" pos:end="229:46"><name pos:start="229:42" pos:end="229:42">s</name><operator pos:start="229:43" pos:end="229:44">-&gt;</operator><name pos:start="229:45" pos:end="229:46">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="233:9" pos:end="233:57"><expr pos:start="233:9" pos:end="233:56"><name pos:start="233:9" pos:end="233:22">stuffing_count</name> <operator pos:start="233:24" pos:end="233:24">=</operator> <call pos:start="233:26" pos:end="233:56"><name pos:start="233:26" pos:end="233:38">ff_vbv_update</name><argument_list pos:start="233:39" pos:end="233:56">(<argument pos:start="233:40" pos:end="233:40"><expr pos:start="233:40" pos:end="233:40"><name pos:start="233:40" pos:end="233:40">s</name></expr></argument>, <argument pos:start="233:43" pos:end="233:55"><expr pos:start="233:43" pos:end="233:55"><name pos:start="233:43" pos:end="233:55"><name pos:start="233:43" pos:end="233:43">s</name><operator pos:start="233:44" pos:end="233:45">-&gt;</operator><name pos:start="233:46" pos:end="233:55">frame_bits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="235:9" pos:end="289:9"><if pos:start="235:9" pos:end="289:9">if <condition pos:start="235:12" pos:end="235:27">(<expr pos:start="235:13" pos:end="235:26"><name pos:start="235:13" pos:end="235:26">stuffing_count</name></expr>)</condition> <block pos:start="235:29" pos:end="289:9">{<block_content pos:start="237:13" pos:end="287:52">

            <if_stmt pos:start="237:13" pos:end="245:13"><if pos:start="237:13" pos:end="245:13">if <condition pos:start="237:16" pos:end="239:40">(<expr pos:start="237:17" pos:end="239:39"><name pos:start="237:17" pos:end="237:29"><name pos:start="237:17" pos:end="237:17">s</name><operator pos:start="237:18" pos:end="237:19">-&gt;</operator><name pos:start="237:20" pos:end="237:21">pb</name><operator pos:start="237:22" pos:end="237:22">.</operator><name pos:start="237:23" pos:end="237:29">buf_end</name></name> <operator pos:start="237:31" pos:end="237:31">-</operator> <name pos:start="237:33" pos:end="237:41"><name pos:start="237:33" pos:end="237:33">s</name><operator pos:start="237:34" pos:end="237:35">-&gt;</operator><name pos:start="237:36" pos:end="237:37">pb</name><operator pos:start="237:38" pos:end="237:38">.</operator><name pos:start="237:39" pos:end="237:41">buf</name></name> <operator pos:start="237:43" pos:end="237:43">-</operator> <operator pos:start="237:45" pos:end="237:45">(</operator><call pos:start="237:46" pos:end="237:67"><name pos:start="237:46" pos:end="237:59">put_bits_count</name><argument_list pos:start="237:60" pos:end="237:67">(<argument pos:start="237:61" pos:end="237:66"><expr pos:start="237:61" pos:end="237:66"><operator pos:start="237:61" pos:end="237:61">&amp;</operator><name pos:start="237:62" pos:end="237:66"><name pos:start="237:62" pos:end="237:62">s</name><operator pos:start="237:63" pos:end="237:64">-&gt;</operator><name pos:start="237:65" pos:end="237:66">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="237:69" pos:end="237:70">&gt;&gt;</operator> <literal type="number" pos:start="237:72" pos:end="237:72">3</literal><operator pos:start="237:73" pos:end="237:73">)</operator> <operator pos:start="237:75" pos:end="237:75">&lt;</operator>

                    <name pos:start="239:21" pos:end="239:34">stuffing_count</name> <operator pos:start="239:36" pos:end="239:36">+</operator> <literal type="number" pos:start="239:38" pos:end="239:39">50</literal></expr>)</condition> <block pos:start="239:42" pos:end="245:13">{<block_content pos:start="241:17" pos:end="243:26">

                <expr_stmt pos:start="241:17" pos:end="241:71"><expr pos:start="241:17" pos:end="241:70"><call pos:start="241:17" pos:end="241:70"><name pos:start="241:17" pos:end="241:22">av_log</name><argument_list pos:start="241:23" pos:end="241:70">(<argument pos:start="241:24" pos:end="241:31"><expr pos:start="241:24" pos:end="241:31"><name pos:start="241:24" pos:end="241:31"><name pos:start="241:24" pos:end="241:24">s</name><operator pos:start="241:25" pos:end="241:26">-&gt;</operator><name pos:start="241:27" pos:end="241:31">avctx</name></name></expr></argument>, <argument pos:start="241:34" pos:end="241:45"><expr pos:start="241:34" pos:end="241:45"><name pos:start="241:34" pos:end="241:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="241:48" pos:end="241:69"><expr pos:start="241:48" pos:end="241:69"><literal type="string" pos:start="241:48" pos:end="241:69">"stuffing too large\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="243:17" pos:end="243:26">return <expr pos:start="243:24" pos:end="243:25"><operator pos:start="243:24" pos:end="243:24">-</operator><literal type="number" pos:start="243:25" pos:end="243:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <switch pos:start="249:13" pos:end="283:13">switch <condition pos:start="249:20" pos:end="249:32">(<expr pos:start="249:21" pos:end="249:31"><name pos:start="249:21" pos:end="249:31"><name pos:start="249:21" pos:end="249:21">s</name><operator pos:start="249:22" pos:end="249:23">-&gt;</operator><name pos:start="249:24" pos:end="249:31">codec_id</name></name></expr>)</condition> <block pos:start="249:34" pos:end="283:13">{<block_content pos:start="251:13" pos:end="281:72">

            <case pos:start="251:13" pos:end="251:40">case <expr pos:start="251:18" pos:end="251:39"><name pos:start="251:18" pos:end="251:39">AV_CODEC_ID_MPEG1VIDEO</name></expr>:</case>

            <case pos:start="253:13" pos:end="253:40">case <expr pos:start="253:18" pos:end="253:39"><name pos:start="253:18" pos:end="253:39">AV_CODEC_ID_MPEG2VIDEO</name></expr>:</case>

                <while pos:start="255:17" pos:end="259:17">while <condition pos:start="255:23" pos:end="255:40">(<expr pos:start="255:24" pos:end="255:39"><name pos:start="255:24" pos:end="255:37">stuffing_count</name><operator pos:start="255:38" pos:end="255:39">--</operator></expr>)</condition> <block pos:start="255:42" pos:end="259:17">{<block_content pos:start="257:21" pos:end="257:43">

                    <expr_stmt pos:start="257:21" pos:end="257:43"><expr pos:start="257:21" pos:end="257:42"><call pos:start="257:21" pos:end="257:42"><name pos:start="257:21" pos:end="257:28">put_bits</name><argument_list pos:start="257:29" pos:end="257:42">(<argument pos:start="257:30" pos:end="257:35"><expr pos:start="257:30" pos:end="257:35"><operator pos:start="257:30" pos:end="257:30">&amp;</operator><name pos:start="257:31" pos:end="257:35"><name pos:start="257:31" pos:end="257:31">s</name><operator pos:start="257:32" pos:end="257:33">-&gt;</operator><name pos:start="257:34" pos:end="257:35">pb</name></name></expr></argument>, <argument pos:start="257:38" pos:end="257:38"><expr pos:start="257:38" pos:end="257:38"><literal type="number" pos:start="257:38" pos:end="257:38">8</literal></expr></argument>, <argument pos:start="257:41" pos:end="257:41"><expr pos:start="257:41" pos:end="257:41"><literal type="number" pos:start="257:41" pos:end="257:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></while>

            <break pos:start="261:13" pos:end="261:18">break;</break>

            <case pos:start="263:13" pos:end="263:35">case <expr pos:start="263:18" pos:end="263:34"><name pos:start="263:18" pos:end="263:34">AV_CODEC_ID_MPEG4</name></expr>:</case>

                <expr_stmt pos:start="265:17" pos:end="265:40"><expr pos:start="265:17" pos:end="265:39"><call pos:start="265:17" pos:end="265:39"><name pos:start="265:17" pos:end="265:24">put_bits</name><argument_list pos:start="265:25" pos:end="265:39">(<argument pos:start="265:26" pos:end="265:31"><expr pos:start="265:26" pos:end="265:31"><operator pos:start="265:26" pos:end="265:26">&amp;</operator><name pos:start="265:27" pos:end="265:31"><name pos:start="265:27" pos:end="265:27">s</name><operator pos:start="265:28" pos:end="265:29">-&gt;</operator><name pos:start="265:30" pos:end="265:31">pb</name></name></expr></argument>, <argument pos:start="265:34" pos:end="265:35"><expr pos:start="265:34" pos:end="265:35"><literal type="number" pos:start="265:34" pos:end="265:35">16</literal></expr></argument>, <argument pos:start="265:38" pos:end="265:38"><expr pos:start="265:38" pos:end="265:38"><literal type="number" pos:start="265:38" pos:end="265:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="267:17" pos:end="267:44"><expr pos:start="267:17" pos:end="267:43"><call pos:start="267:17" pos:end="267:43"><name pos:start="267:17" pos:end="267:24">put_bits</name><argument_list pos:start="267:25" pos:end="267:43">(<argument pos:start="267:26" pos:end="267:31"><expr pos:start="267:26" pos:end="267:31"><operator pos:start="267:26" pos:end="267:26">&amp;</operator><name pos:start="267:27" pos:end="267:31"><name pos:start="267:27" pos:end="267:27">s</name><operator pos:start="267:28" pos:end="267:29">-&gt;</operator><name pos:start="267:30" pos:end="267:31">pb</name></name></expr></argument>, <argument pos:start="267:34" pos:end="267:35"><expr pos:start="267:34" pos:end="267:35"><literal type="number" pos:start="267:34" pos:end="267:35">16</literal></expr></argument>, <argument pos:start="267:38" pos:end="267:42"><expr pos:start="267:38" pos:end="267:42"><literal type="number" pos:start="267:38" pos:end="267:42">0x1C3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="269:17" pos:end="269:36"><expr pos:start="269:17" pos:end="269:35"><name pos:start="269:17" pos:end="269:30">stuffing_count</name> <operator pos:start="269:32" pos:end="269:33">-=</operator> <literal type="number" pos:start="269:35" pos:end="269:35">4</literal></expr>;</expr_stmt>

                <while pos:start="271:17" pos:end="275:17">while <condition pos:start="271:23" pos:end="271:40">(<expr pos:start="271:24" pos:end="271:39"><name pos:start="271:24" pos:end="271:37">stuffing_count</name><operator pos:start="271:38" pos:end="271:39">--</operator></expr>)</condition> <block pos:start="271:42" pos:end="275:17">{<block_content pos:start="273:21" pos:end="273:46">

                    <expr_stmt pos:start="273:21" pos:end="273:46"><expr pos:start="273:21" pos:end="273:45"><call pos:start="273:21" pos:end="273:45"><name pos:start="273:21" pos:end="273:28">put_bits</name><argument_list pos:start="273:29" pos:end="273:45">(<argument pos:start="273:30" pos:end="273:35"><expr pos:start="273:30" pos:end="273:35"><operator pos:start="273:30" pos:end="273:30">&amp;</operator><name pos:start="273:31" pos:end="273:35"><name pos:start="273:31" pos:end="273:31">s</name><operator pos:start="273:32" pos:end="273:33">-&gt;</operator><name pos:start="273:34" pos:end="273:35">pb</name></name></expr></argument>, <argument pos:start="273:38" pos:end="273:38"><expr pos:start="273:38" pos:end="273:38"><literal type="number" pos:start="273:38" pos:end="273:38">8</literal></expr></argument>, <argument pos:start="273:41" pos:end="273:44"><expr pos:start="273:41" pos:end="273:44"><literal type="number" pos:start="273:41" pos:end="273:44">0xFF</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></while>

            <break pos:start="277:13" pos:end="277:18">break;</break>

            <default pos:start="279:13" pos:end="279:20">default:</default>

                <expr_stmt pos:start="281:17" pos:end="281:72"><expr pos:start="281:17" pos:end="281:71"><call pos:start="281:17" pos:end="281:71"><name pos:start="281:17" pos:end="281:22">av_log</name><argument_list pos:start="281:23" pos:end="281:71">(<argument pos:start="281:24" pos:end="281:31"><expr pos:start="281:24" pos:end="281:31"><name pos:start="281:24" pos:end="281:31"><name pos:start="281:24" pos:end="281:24">s</name><operator pos:start="281:25" pos:end="281:26">-&gt;</operator><name pos:start="281:27" pos:end="281:31">avctx</name></name></expr></argument>, <argument pos:start="281:34" pos:end="281:45"><expr pos:start="281:34" pos:end="281:45"><name pos:start="281:34" pos:end="281:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="281:48" pos:end="281:70"><expr pos:start="281:48" pos:end="281:70"><literal type="string" pos:start="281:48" pos:end="281:70">"vbv buffer overflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></switch>

            <expr_stmt pos:start="285:13" pos:end="285:35"><expr pos:start="285:13" pos:end="285:34"><call pos:start="285:13" pos:end="285:34"><name pos:start="285:13" pos:end="285:26">flush_put_bits</name><argument_list pos:start="285:27" pos:end="285:34">(<argument pos:start="285:28" pos:end="285:33"><expr pos:start="285:28" pos:end="285:33"><operator pos:start="285:28" pos:end="285:28">&amp;</operator><name pos:start="285:29" pos:end="285:33"><name pos:start="285:29" pos:end="285:29">s</name><operator pos:start="285:30" pos:end="285:31">-&gt;</operator><name pos:start="285:32" pos:end="285:33">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="287:13" pos:end="287:52"><expr pos:start="287:13" pos:end="287:51"><name pos:start="287:13" pos:end="287:25"><name pos:start="287:13" pos:end="287:13">s</name><operator pos:start="287:14" pos:end="287:15">-&gt;</operator><name pos:start="287:16" pos:end="287:25">frame_bits</name></name>  <operator pos:start="287:28" pos:end="287:28">=</operator> <call pos:start="287:30" pos:end="287:51"><name pos:start="287:30" pos:end="287:43">put_bits_count</name><argument_list pos:start="287:44" pos:end="287:51">(<argument pos:start="287:45" pos:end="287:50"><expr pos:start="287:45" pos:end="287:50"><operator pos:start="287:45" pos:end="287:45">&amp;</operator><name pos:start="287:46" pos:end="287:50"><name pos:start="287:46" pos:end="287:46">s</name><operator pos:start="287:47" pos:end="287:48">-&gt;</operator><name pos:start="287:49" pos:end="287:50">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="293:9" pos:end="293:46">/* update mpeg1/2 vbv_delay for CBR */</comment>

        <if_stmt pos:start="295:9" pos:end="359:9"><if pos:start="295:9" pos:end="359:9">if <condition pos:start="295:12" pos:end="303:49">(<expr pos:start="295:13" pos:end="303:48"><name pos:start="295:13" pos:end="295:33"><name pos:start="295:13" pos:end="295:13">s</name><operator pos:start="295:14" pos:end="295:15">-&gt;</operator><name pos:start="295:16" pos:end="295:20">avctx</name><operator pos:start="295:21" pos:end="295:22">-&gt;</operator><name pos:start="295:23" pos:end="295:33">rc_max_rate</name></name>                          <operator pos:start="295:60" pos:end="295:61">&amp;&amp;</operator>

            <name pos:start="297:13" pos:end="297:33"><name pos:start="297:13" pos:end="297:13">s</name><operator pos:start="297:14" pos:end="297:15">-&gt;</operator><name pos:start="297:16" pos:end="297:20">avctx</name><operator pos:start="297:21" pos:end="297:22">-&gt;</operator><name pos:start="297:23" pos:end="297:33">rc_min_rate</name></name> <operator pos:start="297:35" pos:end="297:36">==</operator> <name pos:start="297:38" pos:end="297:58"><name pos:start="297:38" pos:end="297:38">s</name><operator pos:start="297:39" pos:end="297:40">-&gt;</operator><name pos:start="297:41" pos:end="297:45">avctx</name><operator pos:start="297:46" pos:end="297:47">-&gt;</operator><name pos:start="297:48" pos:end="297:58">rc_max_rate</name></name> <operator pos:start="297:60" pos:end="297:61">&amp;&amp;</operator>

            <name pos:start="299:13" pos:end="299:25"><name pos:start="299:13" pos:end="299:13">s</name><operator pos:start="299:14" pos:end="299:15">-&gt;</operator><name pos:start="299:16" pos:end="299:25">out_format</name></name> <operator pos:start="299:27" pos:end="299:28">==</operator> <name pos:start="299:30" pos:end="299:38">FMT_MPEG1</name>                     <operator pos:start="299:60" pos:end="299:61">&amp;&amp;</operator>

            <literal type="number" pos:start="301:13" pos:end="301:19">90000LL</literal> <operator pos:start="301:21" pos:end="301:21">*</operator> <operator pos:start="301:23" pos:end="301:23">(</operator><name pos:start="301:24" pos:end="301:44"><name pos:start="301:24" pos:end="301:28">avctx</name><operator pos:start="301:29" pos:end="301:30">-&gt;</operator><name pos:start="301:31" pos:end="301:44">rc_buffer_size</name></name> <operator pos:start="301:46" pos:end="301:46">-</operator> <literal type="number" pos:start="301:48" pos:end="301:48">1</literal><operator pos:start="301:49" pos:end="301:49">)</operator> <operator pos:start="301:51" pos:end="301:52">&lt;=</operator>

                <name pos:start="303:17" pos:end="303:37"><name pos:start="303:17" pos:end="303:17">s</name><operator pos:start="303:18" pos:end="303:19">-&gt;</operator><name pos:start="303:20" pos:end="303:24">avctx</name><operator pos:start="303:25" pos:end="303:26">-&gt;</operator><name pos:start="303:27" pos:end="303:37">rc_max_rate</name></name> <operator pos:start="303:39" pos:end="303:39">*</operator> <literal type="number" pos:start="303:41" pos:end="303:48">0xFFFFLL</literal></expr>)</condition> <block pos:start="303:51" pos:end="359:9">{<block_content pos:start="305:13" pos:end="357:51">

            <decl_stmt pos:start="305:13" pos:end="305:37"><decl pos:start="305:13" pos:end="305:25"><type pos:start="305:13" pos:end="305:15"><name pos:start="305:13" pos:end="305:15">int</name></type> <name pos:start="305:17" pos:end="305:25">vbv_delay</name></decl>, <decl pos:start="305:28" pos:end="305:36"><type ref="prev" pos:start="305:13" pos:end="305:15"/><name pos:start="305:28" pos:end="305:36">min_delay</name></decl>;</decl_stmt>

            <decl_stmt pos:start="307:13" pos:end="309:57"><decl pos:start="307:13" pos:end="309:56"><type pos:start="307:13" pos:end="307:18"><name pos:start="307:13" pos:end="307:18">double</name></type> <name pos:start="307:20" pos:end="307:25">inbits</name>  <init pos:start="307:28" pos:end="309:56">= <expr pos:start="307:30" pos:end="309:56"><name pos:start="307:30" pos:end="307:50"><name pos:start="307:30" pos:end="307:30">s</name><operator pos:start="307:31" pos:end="307:32">-&gt;</operator><name pos:start="307:33" pos:end="307:37">avctx</name><operator pos:start="307:38" pos:end="307:39">-&gt;</operator><name pos:start="307:40" pos:end="307:50">rc_max_rate</name></name> <operator pos:start="307:52" pos:end="307:52">*</operator>

                             <call pos:start="309:30" pos:end="309:56"><name pos:start="309:30" pos:end="309:35">av_q2d</name><argument_list pos:start="309:36" pos:end="309:56">(<argument pos:start="309:37" pos:end="309:55"><expr pos:start="309:37" pos:end="309:55"><name pos:start="309:37" pos:end="309:55"><name pos:start="309:37" pos:end="309:37">s</name><operator pos:start="309:38" pos:end="309:39">-&gt;</operator><name pos:start="309:40" pos:end="309:44">avctx</name><operator pos:start="309:45" pos:end="309:46">-&gt;</operator><name pos:start="309:47" pos:end="309:55">time_base</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="311:13" pos:end="313:64"><decl pos:start="311:13" pos:end="313:63"><type pos:start="311:13" pos:end="311:15"><name pos:start="311:13" pos:end="311:15">int</name></type>    <name pos:start="311:20" pos:end="311:26">minbits</name> <init pos:start="311:28" pos:end="313:63">= <expr pos:start="311:30" pos:end="313:63"><name pos:start="311:30" pos:end="311:42"><name pos:start="311:30" pos:end="311:30">s</name><operator pos:start="311:31" pos:end="311:32">-&gt;</operator><name pos:start="311:33" pos:end="311:42">frame_bits</name></name> <operator pos:start="311:44" pos:end="311:44">-</operator> <literal type="number" pos:start="311:46" pos:end="311:46">8</literal> <operator pos:start="311:48" pos:end="311:48">*</operator>

                             <operator pos:start="313:30" pos:end="313:30">(</operator><name pos:start="313:31" pos:end="313:46"><name pos:start="313:31" pos:end="313:31">s</name><operator pos:start="313:32" pos:end="313:33">-&gt;</operator><name pos:start="313:34" pos:end="313:46">vbv_delay_ptr</name></name> <operator pos:start="313:48" pos:end="313:48">-</operator> <name pos:start="313:50" pos:end="313:58"><name pos:start="313:50" pos:end="313:50">s</name><operator pos:start="313:51" pos:end="313:52">-&gt;</operator><name pos:start="313:53" pos:end="313:54">pb</name><operator pos:start="313:55" pos:end="313:55">.</operator><name pos:start="313:56" pos:end="313:58">buf</name></name> <operator pos:start="313:60" pos:end="313:60">-</operator> <literal type="number" pos:start="313:62" pos:end="313:62">1</literal><operator pos:start="313:63" pos:end="313:63">)</operator></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="315:13" pos:end="315:75"><decl pos:start="315:13" pos:end="315:74"><type pos:start="315:13" pos:end="315:18"><name pos:start="315:13" pos:end="315:18">double</name></type> <name pos:start="315:20" pos:end="315:23">bits</name>    <init pos:start="315:28" pos:end="315:74">= <expr pos:start="315:30" pos:end="315:74"><name pos:start="315:30" pos:end="315:55"><name pos:start="315:30" pos:end="315:30">s</name><operator pos:start="315:31" pos:end="315:32">-&gt;</operator><name pos:start="315:33" pos:end="315:42">rc_context</name><operator pos:start="315:43" pos:end="315:43">.</operator><name pos:start="315:44" pos:end="315:55">buffer_index</name></name> <operator pos:start="315:57" pos:end="315:57">+</operator> <name pos:start="315:59" pos:end="315:65">minbits</name> <operator pos:start="315:67" pos:end="315:67">-</operator> <name pos:start="315:69" pos:end="315:74">inbits</name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="319:13" pos:end="323:58"><if pos:start="319:13" pos:end="323:58">if <condition pos:start="319:16" pos:end="319:25">(<expr pos:start="319:17" pos:end="319:24"><name pos:start="319:17" pos:end="319:20">bits</name> <operator pos:start="319:22" pos:end="319:22">&lt;</operator> <literal type="number" pos:start="319:24" pos:end="319:24">0</literal></expr>)</condition><block type="pseudo" pos:start="321:17" pos:end="323:58"><block_content pos:start="321:17" pos:end="323:58">

                <expr_stmt pos:start="321:17" pos:end="323:58"><expr pos:start="321:17" pos:end="323:57"><call pos:start="321:17" pos:end="323:57"><name pos:start="321:17" pos:end="321:22">av_log</name><argument_list pos:start="321:23" pos:end="323:57">(<argument pos:start="321:24" pos:end="321:31"><expr pos:start="321:24" pos:end="321:31"><name pos:start="321:24" pos:end="321:31"><name pos:start="321:24" pos:end="321:24">s</name><operator pos:start="321:25" pos:end="321:26">-&gt;</operator><name pos:start="321:27" pos:end="321:31">avctx</name></name></expr></argument>, <argument pos:start="321:34" pos:end="321:45"><expr pos:start="321:34" pos:end="321:45"><name pos:start="321:34" pos:end="321:45">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="323:24" pos:end="323:56"><expr pos:start="323:24" pos:end="323:56"><literal type="string" pos:start="323:24" pos:end="323:56">"Internal error, negative bits\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="327:13" pos:end="327:47"><expr pos:start="327:13" pos:end="327:46"><call pos:start="327:13" pos:end="327:46"><name pos:start="327:13" pos:end="327:18">assert</name><argument_list pos:start="327:19" pos:end="327:46">(<argument pos:start="327:20" pos:end="327:45"><expr pos:start="327:20" pos:end="327:45"><name pos:start="327:20" pos:end="327:40"><name pos:start="327:20" pos:end="327:20">s</name><operator pos:start="327:21" pos:end="327:22">-&gt;</operator><name pos:start="327:23" pos:end="327:40">repeat_first_field</name></name> <operator pos:start="327:42" pos:end="327:43">==</operator> <literal type="number" pos:start="327:45" pos:end="327:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="331:13" pos:end="331:61"><expr pos:start="331:13" pos:end="331:60"><name pos:start="331:13" pos:end="331:21">vbv_delay</name> <operator pos:start="331:23" pos:end="331:23">=</operator> <name pos:start="331:25" pos:end="331:28">bits</name> <operator pos:start="331:30" pos:end="331:30">*</operator> <literal type="number" pos:start="331:32" pos:end="331:36">90000</literal> <operator pos:start="331:38" pos:end="331:38">/</operator> <name pos:start="331:40" pos:end="331:60"><name pos:start="331:40" pos:end="331:40">s</name><operator pos:start="331:41" pos:end="331:42">-&gt;</operator><name pos:start="331:43" pos:end="331:47">avctx</name><operator pos:start="331:48" pos:end="331:49">-&gt;</operator><name pos:start="331:50" pos:end="331:60">rc_max_rate</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="333:13" pos:end="335:46"><expr pos:start="333:13" pos:end="335:45"><name pos:start="333:13" pos:end="333:21">min_delay</name> <operator pos:start="333:23" pos:end="333:23">=</operator> <operator pos:start="333:25" pos:end="333:25">(</operator><name pos:start="333:26" pos:end="333:32">minbits</name> <operator pos:start="333:34" pos:end="333:34">*</operator> <literal type="number" pos:start="333:36" pos:end="333:44">90000LL</literal> <operator pos:start="333:44" pos:end="333:44">+</operator> <name pos:start="333:46" pos:end="333:66"><name pos:start="333:46" pos:end="333:46">s</name><operator pos:start="333:47" pos:end="333:48">-&gt;</operator><name pos:start="333:49" pos:end="333:53">avctx</name><operator pos:start="333:54" pos:end="333:55">-&gt;</operator><name pos:start="333:56" pos:end="333:66">rc_max_rate</name></name> <operator pos:start="333:68" pos:end="333:68">-</operator> <literal type="number" pos:start="333:70" pos:end="333:70">1</literal><operator pos:start="333:71" pos:end="333:71">)</operator> <operator pos:start="333:73" pos:end="333:73">/</operator>

                        <name pos:start="335:25" pos:end="335:45"><name pos:start="335:25" pos:end="335:25">s</name><operator pos:start="335:26" pos:end="335:27">-&gt;</operator><name pos:start="335:28" pos:end="335:32">avctx</name><operator pos:start="335:33" pos:end="335:34">-&gt;</operator><name pos:start="335:35" pos:end="335:45">rc_max_rate</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="339:13" pos:end="339:52"><expr pos:start="339:13" pos:end="339:51"><name pos:start="339:13" pos:end="339:21">vbv_delay</name> <operator pos:start="339:23" pos:end="339:23">=</operator> <call pos:start="339:25" pos:end="339:51"><name pos:start="339:25" pos:end="339:29">FFMAX</name><argument_list pos:start="339:30" pos:end="339:51">(<argument pos:start="339:31" pos:end="339:39"><expr pos:start="339:31" pos:end="339:39"><name pos:start="339:31" pos:end="339:39">vbv_delay</name></expr></argument>, <argument pos:start="339:42" pos:end="339:50"><expr pos:start="339:42" pos:end="339:50"><name pos:start="339:42" pos:end="339:50">min_delay</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="343:13" pos:end="343:39"><expr pos:start="343:13" pos:end="343:38"><call pos:start="343:13" pos:end="343:38"><name pos:start="343:13" pos:end="343:18">assert</name><argument_list pos:start="343:19" pos:end="343:38">(<argument pos:start="343:20" pos:end="343:37"><expr pos:start="343:20" pos:end="343:37"><name pos:start="343:20" pos:end="343:28">vbv_delay</name> <operator pos:start="343:30" pos:end="343:30">&lt;</operator> <literal type="number" pos:start="343:32" pos:end="343:37">0xFFFF</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="347:13" pos:end="347:40"><expr pos:start="347:13" pos:end="347:39"><name pos:start="347:13" pos:end="347:31"><name pos:start="347:13" pos:end="347:13">s</name><operator pos:start="347:14" pos:end="347:15">-&gt;</operator><name pos:start="347:16" pos:end="347:28">vbv_delay_ptr</name><index pos:start="347:29" pos:end="347:31">[<expr pos:start="347:30" pos:end="347:30"><literal type="number" pos:start="347:30" pos:end="347:30">0</literal></expr>]</index></name> <operator pos:start="347:33" pos:end="347:34">&amp;=</operator> <literal type="number" pos:start="347:36" pos:end="347:39">0xF8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="349:13" pos:end="349:51"><expr pos:start="349:13" pos:end="349:50"><name pos:start="349:13" pos:end="349:31"><name pos:start="349:13" pos:end="349:13">s</name><operator pos:start="349:14" pos:end="349:15">-&gt;</operator><name pos:start="349:16" pos:end="349:28">vbv_delay_ptr</name><index pos:start="349:29" pos:end="349:31">[<expr pos:start="349:30" pos:end="349:30"><literal type="number" pos:start="349:30" pos:end="349:30">0</literal></expr>]</index></name> <operator pos:start="349:33" pos:end="349:34">|=</operator> <name pos:start="349:36" pos:end="349:44">vbv_delay</name> <operator pos:start="349:46" pos:end="349:47">&gt;&gt;</operator> <literal type="number" pos:start="349:49" pos:end="349:50">13</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="351:13" pos:end="351:50"><expr pos:start="351:13" pos:end="351:49"><name pos:start="351:13" pos:end="351:31"><name pos:start="351:13" pos:end="351:13">s</name><operator pos:start="351:14" pos:end="351:15">-&gt;</operator><name pos:start="351:16" pos:end="351:28">vbv_delay_ptr</name><index pos:start="351:29" pos:end="351:31">[<expr pos:start="351:30" pos:end="351:30"><literal type="number" pos:start="351:30" pos:end="351:30">1</literal></expr>]</index></name>  <operator pos:start="351:34" pos:end="351:34">=</operator> <name pos:start="351:36" pos:end="351:44">vbv_delay</name> <operator pos:start="351:46" pos:end="351:47">&gt;&gt;</operator> <literal type="number" pos:start="351:49" pos:end="351:49">5</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="353:13" pos:end="353:40"><expr pos:start="353:13" pos:end="353:39"><name pos:start="353:13" pos:end="353:31"><name pos:start="353:13" pos:end="353:13">s</name><operator pos:start="353:14" pos:end="353:15">-&gt;</operator><name pos:start="353:16" pos:end="353:28">vbv_delay_ptr</name><index pos:start="353:29" pos:end="353:31">[<expr pos:start="353:30" pos:end="353:30"><literal type="number" pos:start="353:30" pos:end="353:30">2</literal></expr>]</index></name> <operator pos:start="353:33" pos:end="353:34">&amp;=</operator> <literal type="number" pos:start="353:36" pos:end="353:39">0x07</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="355:13" pos:end="355:50"><expr pos:start="355:13" pos:end="355:49"><name pos:start="355:13" pos:end="355:31"><name pos:start="355:13" pos:end="355:13">s</name><operator pos:start="355:14" pos:end="355:15">-&gt;</operator><name pos:start="355:16" pos:end="355:28">vbv_delay_ptr</name><index pos:start="355:29" pos:end="355:31">[<expr pos:start="355:30" pos:end="355:30"><literal type="number" pos:start="355:30" pos:end="355:30">2</literal></expr>]</index></name> <operator pos:start="355:33" pos:end="355:34">|=</operator> <name pos:start="355:36" pos:end="355:44">vbv_delay</name> <operator pos:start="355:46" pos:end="355:47">&lt;&lt;</operator> <literal type="number" pos:start="355:49" pos:end="355:49">3</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="357:13" pos:end="357:51"><expr pos:start="357:13" pos:end="357:50"><name pos:start="357:13" pos:end="357:28"><name pos:start="357:13" pos:end="357:17">avctx</name><operator pos:start="357:18" pos:end="357:19">-&gt;</operator><name pos:start="357:20" pos:end="357:28">vbv_delay</name></name>     <operator pos:start="357:34" pos:end="357:34">=</operator> <name pos:start="357:36" pos:end="357:44">vbv_delay</name> <operator pos:start="357:46" pos:end="357:46">*</operator> <literal type="number" pos:start="357:48" pos:end="357:50">300</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="361:9" pos:end="361:43"><expr pos:start="361:9" pos:end="361:42"><name pos:start="361:9" pos:end="361:21"><name pos:start="361:9" pos:end="361:9">s</name><operator pos:start="361:10" pos:end="361:11">-&gt;</operator><name pos:start="361:12" pos:end="361:21">total_bits</name></name>     <operator pos:start="361:27" pos:end="361:28">+=</operator> <name pos:start="361:30" pos:end="361:42"><name pos:start="361:30" pos:end="361:30">s</name><operator pos:start="361:31" pos:end="361:32">-&gt;</operator><name pos:start="361:33" pos:end="361:42">frame_bits</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="363:9" pos:end="363:43"><expr pos:start="363:9" pos:end="363:42"><name pos:start="363:9" pos:end="363:25"><name pos:start="363:9" pos:end="363:13">avctx</name><operator pos:start="363:14" pos:end="363:15">-&gt;</operator><name pos:start="363:16" pos:end="363:25">frame_bits</name></name>  <operator pos:start="363:28" pos:end="363:28">=</operator> <name pos:start="363:30" pos:end="363:42"><name pos:start="363:30" pos:end="363:30">s</name><operator pos:start="363:31" pos:end="363:32">-&gt;</operator><name pos:start="363:33" pos:end="363:42">frame_bits</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="367:9" pos:end="367:44"><expr pos:start="367:9" pos:end="367:43"><name pos:start="367:9" pos:end="367:16"><name pos:start="367:9" pos:end="367:11">pkt</name><operator pos:start="367:12" pos:end="367:13">-&gt;</operator><name pos:start="367:14" pos:end="367:16">pts</name></name> <operator pos:start="367:18" pos:end="367:18">=</operator> <name pos:start="367:20" pos:end="367:43"><name pos:start="367:20" pos:end="367:20">s</name><operator pos:start="367:21" pos:end="367:22">-&gt;</operator><name pos:start="367:23" pos:end="367:37">current_picture</name><operator pos:start="367:38" pos:end="367:38">.</operator><name pos:start="367:39" pos:end="367:39">f</name><operator pos:start="367:40" pos:end="367:40">.</operator><name pos:start="367:41" pos:end="367:43">pts</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="369:9" pos:end="383:32"><if pos:start="369:9" pos:end="381:9">if <condition pos:start="369:12" pos:end="369:26">(<expr pos:start="369:13" pos:end="369:25"><operator pos:start="369:13" pos:end="369:13">!</operator><name pos:start="369:14" pos:end="369:25"><name pos:start="369:14" pos:end="369:14">s</name><operator pos:start="369:15" pos:end="369:16">-&gt;</operator><name pos:start="369:17" pos:end="369:25">low_delay</name></name></expr>)</condition> <block pos:start="369:28" pos:end="381:9">{<block_content pos:start="371:13" pos:end="379:58">

            <if_stmt pos:start="371:13" pos:end="377:44"><if pos:start="371:13" pos:end="373:51">if <condition pos:start="371:16" pos:end="371:59">(<expr pos:start="371:17" pos:end="371:58"><operator pos:start="371:17" pos:end="371:17">!</operator><name pos:start="371:18" pos:end="371:58"><name pos:start="371:18" pos:end="371:18">s</name><operator pos:start="371:19" pos:end="371:20">-&gt;</operator><name pos:start="371:21" pos:end="371:35">current_picture</name><operator pos:start="371:36" pos:end="371:36">.</operator><name pos:start="371:37" pos:end="371:37">f</name><operator pos:start="371:38" pos:end="371:38">.</operator><name pos:start="371:39" pos:end="371:58">coded_picture_number</name></name></expr>)</condition><block type="pseudo" pos:start="373:17" pos:end="373:51"><block_content pos:start="373:17" pos:end="373:51">

                <expr_stmt pos:start="373:17" pos:end="373:51"><expr pos:start="373:17" pos:end="373:50"><name pos:start="373:17" pos:end="373:24"><name pos:start="373:17" pos:end="373:19">pkt</name><operator pos:start="373:20" pos:end="373:21">-&gt;</operator><name pos:start="373:22" pos:end="373:24">dts</name></name> <operator pos:start="373:26" pos:end="373:26">=</operator> <name pos:start="373:28" pos:end="373:35"><name pos:start="373:28" pos:end="373:30">pkt</name><operator pos:start="373:31" pos:end="373:32">-&gt;</operator><name pos:start="373:33" pos:end="373:35">pts</name></name> <operator pos:start="373:37" pos:end="373:37">-</operator> <name pos:start="373:39" pos:end="373:50"><name pos:start="373:39" pos:end="373:39">s</name><operator pos:start="373:40" pos:end="373:41">-&gt;</operator><name pos:start="373:42" pos:end="373:50">dts_delta</name></name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="375:13" pos:end="377:44">else<block type="pseudo" pos:start="377:17" pos:end="377:44"><block_content pos:start="377:17" pos:end="377:44">

                <expr_stmt pos:start="377:17" pos:end="377:44"><expr pos:start="377:17" pos:end="377:43"><name pos:start="377:17" pos:end="377:24"><name pos:start="377:17" pos:end="377:19">pkt</name><operator pos:start="377:20" pos:end="377:21">-&gt;</operator><name pos:start="377:22" pos:end="377:24">dts</name></name> <operator pos:start="377:26" pos:end="377:26">=</operator> <name pos:start="377:28" pos:end="377:43"><name pos:start="377:28" pos:end="377:28">s</name><operator pos:start="377:29" pos:end="377:30">-&gt;</operator><name pos:start="377:31" pos:end="377:43">reordered_pts</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="379:13" pos:end="379:58"><expr pos:start="379:13" pos:end="379:57"><name pos:start="379:13" pos:end="379:28"><name pos:start="379:13" pos:end="379:13">s</name><operator pos:start="379:14" pos:end="379:15">-&gt;</operator><name pos:start="379:16" pos:end="379:28">reordered_pts</name></name> <operator pos:start="379:30" pos:end="379:30">=</operator> <name pos:start="379:32" pos:end="379:50"><name pos:start="379:32" pos:end="379:32">s</name><operator pos:start="379:33" pos:end="379:34">-&gt;</operator><name pos:start="379:35" pos:end="379:47">input_picture</name><index pos:start="379:48" pos:end="379:50">[<expr pos:start="379:49" pos:end="379:49"><literal type="number" pos:start="379:49" pos:end="379:49">0</literal></expr>]</index></name><operator pos:start="379:51" pos:end="379:52">-&gt;</operator><name pos:start="379:53" pos:end="379:57"><name pos:start="379:53" pos:end="379:53">f</name><operator pos:start="379:54" pos:end="379:54">.</operator><name pos:start="379:55" pos:end="379:57">pts</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="381:11" pos:end="383:32">else<block type="pseudo" pos:start="383:13" pos:end="383:32"><block_content pos:start="383:13" pos:end="383:32">

            <expr_stmt pos:start="383:13" pos:end="383:32"><expr pos:start="383:13" pos:end="383:31"><name pos:start="383:13" pos:end="383:20"><name pos:start="383:13" pos:end="383:15">pkt</name><operator pos:start="383:16" pos:end="383:17">-&gt;</operator><name pos:start="383:18" pos:end="383:20">dts</name></name> <operator pos:start="383:22" pos:end="383:22">=</operator> <name pos:start="383:24" pos:end="383:31"><name pos:start="383:24" pos:end="383:26">pkt</name><operator pos:start="383:27" pos:end="383:28">-&gt;</operator><name pos:start="383:29" pos:end="383:31">pts</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="385:9" pos:end="387:42"><if pos:start="385:9" pos:end="387:42">if <condition pos:start="385:12" pos:end="385:43">(<expr pos:start="385:13" pos:end="385:42"><name pos:start="385:13" pos:end="385:42"><name pos:start="385:13" pos:end="385:13">s</name><operator pos:start="385:14" pos:end="385:15">-&gt;</operator><name pos:start="385:16" pos:end="385:30">current_picture</name><operator pos:start="385:31" pos:end="385:31">.</operator><name pos:start="385:32" pos:end="385:32">f</name><operator pos:start="385:33" pos:end="385:33">.</operator><name pos:start="385:34" pos:end="385:42">key_frame</name></name></expr>)</condition><block type="pseudo" pos:start="387:13" pos:end="387:42"><block_content pos:start="387:13" pos:end="387:42">

            <expr_stmt pos:start="387:13" pos:end="387:42"><expr pos:start="387:13" pos:end="387:41"><name pos:start="387:13" pos:end="387:22"><name pos:start="387:13" pos:end="387:15">pkt</name><operator pos:start="387:16" pos:end="387:17">-&gt;</operator><name pos:start="387:18" pos:end="387:22">flags</name></name> <operator pos:start="387:24" pos:end="387:25">|=</operator> <name pos:start="387:27" pos:end="387:41">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="389:9" pos:end="391:87"><if pos:start="389:9" pos:end="391:87">if <condition pos:start="389:12" pos:end="389:23">(<expr pos:start="389:13" pos:end="389:22"><name pos:start="389:13" pos:end="389:22"><name pos:start="389:13" pos:end="389:13">s</name><operator pos:start="389:14" pos:end="389:15">-&gt;</operator><name pos:start="389:16" pos:end="389:22">mb_info</name></name></expr>)</condition><block type="pseudo" pos:start="391:13" pos:end="391:87"><block_content pos:start="391:13" pos:end="391:87">

            <expr_stmt pos:start="391:13" pos:end="391:87"><expr pos:start="391:13" pos:end="391:86"><call pos:start="391:13" pos:end="391:86"><name pos:start="391:13" pos:end="391:38">av_packet_shrink_side_data</name><argument_list pos:start="391:39" pos:end="391:86">(<argument pos:start="391:40" pos:end="391:42"><expr pos:start="391:40" pos:end="391:42"><name pos:start="391:40" pos:end="391:42">pkt</name></expr></argument>, <argument pos:start="391:45" pos:end="391:68"><expr pos:start="391:45" pos:end="391:68"><name pos:start="391:45" pos:end="391:68">AV_PKT_DATA_H263_MB_INFO</name></expr></argument>, <argument pos:start="391:71" pos:end="391:85"><expr pos:start="391:71" pos:end="391:85"><name pos:start="391:71" pos:end="391:85"><name pos:start="391:71" pos:end="391:71">s</name><operator pos:start="391:72" pos:end="391:73">-&gt;</operator><name pos:start="391:74" pos:end="391:85">mb_info_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="393:7" pos:end="399:5">else <block pos:start="393:12" pos:end="399:5">{<block_content pos:start="395:9" pos:end="397:26">

        <expr_stmt pos:start="395:9" pos:end="395:52"><expr pos:start="395:9" pos:end="395:51"><call pos:start="395:9" pos:end="395:51"><name pos:start="395:9" pos:end="395:14">assert</name><argument_list pos:start="395:15" pos:end="395:51">(<argument pos:start="395:16" pos:end="395:50"><expr pos:start="395:16" pos:end="395:50"><operator pos:start="395:16" pos:end="395:16">(</operator><call pos:start="395:17" pos:end="395:36"><name pos:start="395:17" pos:end="395:28">put_bits_ptr</name><argument_list pos:start="395:29" pos:end="395:36">(<argument pos:start="395:30" pos:end="395:35"><expr pos:start="395:30" pos:end="395:35"><operator pos:start="395:30" pos:end="395:30">&amp;</operator><name pos:start="395:31" pos:end="395:35"><name pos:start="395:31" pos:end="395:31">s</name><operator pos:start="395:32" pos:end="395:33">-&gt;</operator><name pos:start="395:34" pos:end="395:35">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="395:38" pos:end="395:39">==</operator> <name pos:start="395:41" pos:end="395:49"><name pos:start="395:41" pos:end="395:41">s</name><operator pos:start="395:42" pos:end="395:43">-&gt;</operator><name pos:start="395:44" pos:end="395:45">pb</name><operator pos:start="395:46" pos:end="395:46">.</operator><name pos:start="395:47" pos:end="395:49">buf</name></name><operator pos:start="395:50" pos:end="395:50">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="397:9" pos:end="397:26"><expr pos:start="397:9" pos:end="397:25"><name pos:start="397:9" pos:end="397:21"><name pos:start="397:9" pos:end="397:9">s</name><operator pos:start="397:10" pos:end="397:11">-&gt;</operator><name pos:start="397:12" pos:end="397:21">frame_bits</name></name> <operator pos:start="397:23" pos:end="397:23">=</operator> <literal type="number" pos:start="397:25" pos:end="397:25">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="401:5" pos:end="401:37"><expr pos:start="401:5" pos:end="401:36"><call pos:start="401:5" pos:end="401:36"><name pos:start="401:5" pos:end="401:10">assert</name><argument_list pos:start="401:11" pos:end="401:36">(<argument pos:start="401:12" pos:end="401:35"><expr pos:start="401:12" pos:end="401:35"><operator pos:start="401:12" pos:end="401:12">(</operator><name pos:start="401:13" pos:end="401:25"><name pos:start="401:13" pos:end="401:13">s</name><operator pos:start="401:14" pos:end="401:15">-&gt;</operator><name pos:start="401:16" pos:end="401:25">frame_bits</name></name> <operator pos:start="401:27" pos:end="401:27">&amp;</operator> <literal type="number" pos:start="401:29" pos:end="401:29">7</literal><operator pos:start="401:30" pos:end="401:30">)</operator> <operator pos:start="401:32" pos:end="401:33">==</operator> <literal type="number" pos:start="401:35" pos:end="401:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="405:5" pos:end="405:34"><expr pos:start="405:5" pos:end="405:33"><name pos:start="405:5" pos:end="405:13"><name pos:start="405:5" pos:end="405:7">pkt</name><operator pos:start="405:8" pos:end="405:9">-&gt;</operator><name pos:start="405:10" pos:end="405:13">size</name></name> <operator pos:start="405:15" pos:end="405:15">=</operator> <name pos:start="405:17" pos:end="405:29"><name pos:start="405:17" pos:end="405:17">s</name><operator pos:start="405:18" pos:end="405:19">-&gt;</operator><name pos:start="405:20" pos:end="405:29">frame_bits</name></name> <operator pos:start="405:31" pos:end="405:31">/</operator> <literal type="number" pos:start="405:33" pos:end="405:33">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="407:5" pos:end="407:30"><expr pos:start="407:5" pos:end="407:29"><operator pos:start="407:5" pos:end="407:5">*</operator><name pos:start="407:6" pos:end="407:15">got_packet</name> <operator pos:start="407:17" pos:end="407:17">=</operator> <operator pos:start="407:19" pos:end="407:19">!</operator><operator pos:start="407:20" pos:end="407:20">!</operator><name pos:start="407:21" pos:end="407:29"><name pos:start="407:21" pos:end="407:23">pkt</name><operator pos:start="407:24" pos:end="407:25">-&gt;</operator><name pos:start="407:26" pos:end="407:29">size</name></name></expr>;</expr_stmt>

    <return pos:start="409:5" pos:end="409:13">return <expr pos:start="409:12" pos:end="409:12"><literal type="number" pos:start="409:12" pos:end="409:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
