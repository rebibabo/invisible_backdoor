<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26589.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">decode_wdlt</name><parameter_list pos:start="1:23" pos:end="3:66">(<parameter pos:start="1:24" pos:end="1:37"><decl pos:start="1:24" pos:end="1:37"><type pos:start="1:24" pos:end="1:37"><name pos:start="1:24" pos:end="1:30">uint8_t</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:37">frame</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:48"><decl pos:start="1:40" pos:end="1:48"><type pos:start="1:40" pos:end="1:48"><name pos:start="1:40" pos:end="1:42">int</name></type> <name pos:start="1:44" pos:end="1:48">width</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:60"><decl pos:start="1:51" pos:end="1:60"><type pos:start="1:51" pos:end="1:60"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:60">height</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:41"><decl pos:start="3:24" pos:end="3:41"><type pos:start="3:24" pos:end="3:41"><specifier pos:start="3:24" pos:end="3:28">const</specifier> <name pos:start="3:30" pos:end="3:36">uint8_t</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:41">src</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:65"><decl pos:start="3:44" pos:end="3:65"><type pos:start="3:44" pos:end="3:65"><specifier pos:start="3:44" pos:end="3:48">const</specifier> <name pos:start="3:50" pos:end="3:56">uint8_t</name> <modifier pos:start="3:58" pos:end="3:58">*</modifier></type><name pos:start="3:59" pos:end="3:65">src_end</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="101:1">{<block_content pos:start="7:5" pos:end="99:13">

    <decl_stmt pos:start="7:5" pos:end="7:56"><decl pos:start="7:5" pos:end="7:55"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:28">frame_end</name>   <init pos:start="7:32" pos:end="7:55">= <expr pos:start="7:34" pos:end="7:55"><name pos:start="7:34" pos:end="7:38">frame</name> <operator pos:start="7:40" pos:end="7:40">+</operator> <name pos:start="7:42" pos:end="7:46">width</name> <operator pos:start="7:48" pos:end="7:48">*</operator> <name pos:start="7:50" pos:end="7:55">height</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:21">line_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">count</name></decl>, <decl pos:start="11:16" pos:end="11:16"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:16" pos:end="11:16">i</name></decl>, <decl pos:start="11:19" pos:end="11:19"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:19" pos:end="11:19">v</name></decl>, <decl pos:start="11:22" pos:end="11:26"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:22" pos:end="11:26">lines</name></decl>, <decl pos:start="11:29" pos:end="11:36"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:29" pos:end="11:36">segments</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:38"><expr pos:start="15:5" pos:end="15:37"><name pos:start="15:5" pos:end="15:9">lines</name> <operator pos:start="15:11" pos:end="15:11">=</operator> <call pos:start="15:13" pos:end="15:37"><name pos:start="15:13" pos:end="15:31">bytestream_get_le16</name><argument_list pos:start="15:32" pos:end="15:37">(<argument pos:start="15:33" pos:end="15:36"><expr pos:start="15:33" pos:end="15:36"><operator pos:start="15:33" pos:end="15:33">&amp;</operator><name pos:start="15:34" pos:end="15:36">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="19:18"><if pos:start="17:5" pos:end="19:18">if <condition pos:start="17:8" pos:end="17:41">(<expr pos:start="17:9" pos:end="17:40"><name pos:start="17:9" pos:end="17:13">lines</name> <operator pos:start="17:15" pos:end="17:15">&gt;</operator> <name pos:start="17:17" pos:end="17:22">height</name> <operator pos:start="17:24" pos:end="17:25">||</operator> <name pos:start="17:27" pos:end="17:29">src</name> <operator pos:start="17:31" pos:end="17:32">&gt;=</operator> <name pos:start="17:34" pos:end="17:40">src_end</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:18"><block_content pos:start="19:9" pos:end="19:18">

        <return pos:start="19:9" pos:end="19:18">return <expr pos:start="19:16" pos:end="19:17"><operator pos:start="19:16" pos:end="19:16">-</operator><literal type="number" pos:start="19:17" pos:end="19:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <while pos:start="23:5" pos:end="95:5">while <condition pos:start="23:11" pos:end="23:19">(<expr pos:start="23:12" pos:end="23:18"><name pos:start="23:12" pos:end="23:16">lines</name><operator pos:start="23:17" pos:end="23:18">--</operator></expr>)</condition> <block pos:start="23:21" pos:end="95:5">{<block_content pos:start="25:9" pos:end="93:9">

        <expr_stmt pos:start="25:9" pos:end="25:45"><expr pos:start="25:9" pos:end="25:44"><name pos:start="25:9" pos:end="25:16">segments</name> <operator pos:start="25:18" pos:end="25:18">=</operator> <call pos:start="25:20" pos:end="25:44"><name pos:start="25:20" pos:end="25:38">bytestream_get_le16</name><argument_list pos:start="25:39" pos:end="25:44">(<argument pos:start="25:40" pos:end="25:43"><expr pos:start="25:40" pos:end="25:43"><operator pos:start="25:40" pos:end="25:40">&amp;</operator><name pos:start="25:41" pos:end="25:43">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <while pos:start="27:9" pos:end="39:9">while <condition pos:start="27:15" pos:end="27:45">(<expr pos:start="27:16" pos:end="27:44"><operator pos:start="27:16" pos:end="27:16">(</operator><name pos:start="27:17" pos:end="27:24">segments</name> <operator pos:start="27:26" pos:end="27:26">&amp;</operator> <literal type="number" pos:start="27:28" pos:end="27:33">0xC000</literal><operator pos:start="27:34" pos:end="27:34">)</operator> <operator pos:start="27:36" pos:end="27:37">==</operator> <literal type="number" pos:start="27:39" pos:end="27:44">0xC000</literal></expr>)</condition> <block pos:start="27:47" pos:end="39:9">{<block_content pos:start="29:13" pos:end="37:49">

            <decl_stmt pos:start="29:13" pos:end="29:58"><decl pos:start="29:13" pos:end="29:57"><type pos:start="29:13" pos:end="29:20"><name pos:start="29:13" pos:end="29:20">unsigned</name></type> <name pos:start="29:22" pos:end="29:26">delta</name> <init pos:start="29:28" pos:end="29:57">= <expr pos:start="29:30" pos:end="29:57"><operator pos:start="29:30" pos:end="29:30">-</operator><operator pos:start="29:31" pos:end="29:31">(</operator><operator pos:start="29:32" pos:end="29:32">(</operator><name pos:start="29:33" pos:end="29:39">int16_t</name><operator pos:start="29:40" pos:end="29:40">)</operator><name pos:start="29:41" pos:end="29:48">segments</name> <operator pos:start="29:50" pos:end="29:50">*</operator> <name pos:start="29:52" pos:end="29:56">width</name><operator pos:start="29:57" pos:end="29:57">)</operator></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="31:13" pos:end="33:26"><if pos:start="31:13" pos:end="33:26">if <condition pos:start="31:16" pos:end="31:43">(<expr pos:start="31:17" pos:end="31:42"><name pos:start="31:17" pos:end="31:25">frame_end</name> <operator pos:start="31:27" pos:end="31:27">-</operator> <name pos:start="31:29" pos:end="31:33">frame</name> <operator pos:start="31:35" pos:end="31:36">&lt;=</operator> <name pos:start="31:38" pos:end="31:42">delta</name></expr>)</condition><block type="pseudo" pos:start="33:17" pos:end="33:26"><block_content pos:start="33:17" pos:end="33:26">

                <return pos:start="33:17" pos:end="33:26">return <expr pos:start="33:24" pos:end="33:25"><operator pos:start="33:24" pos:end="33:24">-</operator><literal type="number" pos:start="33:25" pos:end="33:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:30"><expr pos:start="35:13" pos:end="35:29"><name pos:start="35:13" pos:end="35:17">frame</name>    <operator pos:start="35:22" pos:end="35:23">+=</operator> <name pos:start="35:25" pos:end="35:29">delta</name></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:49"><expr pos:start="37:13" pos:end="37:48"><name pos:start="37:13" pos:end="37:20">segments</name> <operator pos:start="37:22" pos:end="37:22">=</operator> <call pos:start="37:24" pos:end="37:48"><name pos:start="37:24" pos:end="37:42">bytestream_get_le16</name><argument_list pos:start="37:43" pos:end="37:48">(<argument pos:start="37:44" pos:end="37:47"><expr pos:start="37:44" pos:end="37:47"><operator pos:start="37:44" pos:end="37:44">&amp;</operator><name pos:start="37:45" pos:end="37:47">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></while>

        <if_stmt pos:start="41:9" pos:end="47:9"><if pos:start="41:9" pos:end="47:9">if <condition pos:start="41:12" pos:end="41:30">(<expr pos:start="41:13" pos:end="41:29"><name pos:start="41:13" pos:end="41:20">segments</name> <operator pos:start="41:22" pos:end="41:22">&amp;</operator> <literal type="number" pos:start="41:24" pos:end="41:29">0x8000</literal></expr>)</condition> <block pos:start="41:32" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:49">

            <expr_stmt pos:start="43:13" pos:end="43:47"><expr pos:start="43:13" pos:end="43:46"><name pos:start="43:13" pos:end="43:28"><name pos:start="43:13" pos:end="43:17">frame</name><index pos:start="43:18" pos:end="43:28">[<expr pos:start="43:19" pos:end="43:27"><name pos:start="43:19" pos:end="43:23">width</name> <operator pos:start="43:25" pos:end="43:25">-</operator> <literal type="number" pos:start="43:27" pos:end="43:27">1</literal></expr>]</index></name> <operator pos:start="43:30" pos:end="43:30">=</operator> <name pos:start="43:32" pos:end="43:39">segments</name> <operator pos:start="43:41" pos:end="43:41">&amp;</operator> <literal type="number" pos:start="43:43" pos:end="43:46">0xFF</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:49"><expr pos:start="45:13" pos:end="45:48"><name pos:start="45:13" pos:end="45:20">segments</name> <operator pos:start="45:22" pos:end="45:22">=</operator> <call pos:start="45:24" pos:end="45:48"><name pos:start="45:24" pos:end="45:42">bytestream_get_le16</name><argument_list pos:start="45:43" pos:end="45:48">(<argument pos:start="45:44" pos:end="45:47"><expr pos:start="45:44" pos:end="45:47"><operator pos:start="45:44" pos:end="45:44">&amp;</operator><name pos:start="45:45" pos:end="45:47">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:25"><expr pos:start="49:9" pos:end="49:24"><name pos:start="49:9" pos:end="49:16">line_ptr</name> <operator pos:start="49:18" pos:end="49:18">=</operator> <name pos:start="49:20" pos:end="49:24">frame</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:23"><expr pos:start="51:9" pos:end="51:22"><name pos:start="51:9" pos:end="51:13">frame</name> <operator pos:start="51:15" pos:end="51:16">+=</operator> <name pos:start="51:18" pos:end="51:22">width</name></expr>;</expr_stmt>

        <while pos:start="53:9" pos:end="93:9">while <condition pos:start="53:15" pos:end="53:26">(<expr pos:start="53:16" pos:end="53:25"><name pos:start="53:16" pos:end="53:23">segments</name><operator pos:start="53:24" pos:end="53:25">--</operator></expr>)</condition> <block pos:start="53:28" pos:end="93:9">{<block_content pos:start="55:13" pos:end="91:13">

            <if_stmt pos:start="55:13" pos:end="57:26"><if pos:start="55:13" pos:end="57:26">if <condition pos:start="55:16" pos:end="55:34">(<expr pos:start="55:17" pos:end="55:33"><name pos:start="55:17" pos:end="55:23">src_end</name> <operator pos:start="55:25" pos:end="55:25">-</operator> <name pos:start="55:27" pos:end="55:29">src</name> <operator pos:start="55:31" pos:end="55:31">&lt;</operator> <literal type="number" pos:start="55:33" pos:end="55:33">2</literal></expr>)</condition><block type="pseudo" pos:start="57:17" pos:end="57:26"><block_content pos:start="57:17" pos:end="57:26">

                <return pos:start="57:17" pos:end="57:26">return <expr pos:start="57:24" pos:end="57:25"><operator pos:start="57:24" pos:end="57:24">-</operator><literal type="number" pos:start="57:25" pos:end="57:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="59:13" pos:end="61:26"><if pos:start="59:13" pos:end="61:26">if <condition pos:start="59:16" pos:end="59:41">(<expr pos:start="59:17" pos:end="59:40"><name pos:start="59:17" pos:end="59:21">frame</name> <operator pos:start="59:23" pos:end="59:23">-</operator> <name pos:start="59:25" pos:end="59:32">line_ptr</name> <operator pos:start="59:34" pos:end="59:35">&lt;=</operator> <operator pos:start="59:37" pos:end="59:37">*</operator><name pos:start="59:38" pos:end="59:40">src</name></expr>)</condition><block type="pseudo" pos:start="61:17" pos:end="61:26"><block_content pos:start="61:17" pos:end="61:26">

                <return pos:start="61:17" pos:end="61:26">return <expr pos:start="61:24" pos:end="61:25"><operator pos:start="61:24" pos:end="61:24">-</operator><literal type="number" pos:start="61:25" pos:end="61:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:31"><expr pos:start="63:13" pos:end="63:30"><name pos:start="63:13" pos:end="63:20">line_ptr</name> <operator pos:start="63:22" pos:end="63:23">+=</operator> <operator pos:start="63:25" pos:end="63:25">*</operator><name pos:start="63:26" pos:end="63:28">src</name><operator pos:start="63:29" pos:end="63:30">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:35"><expr pos:start="65:13" pos:end="65:34"><name pos:start="65:13" pos:end="65:17">count</name> <operator pos:start="65:19" pos:end="65:19">=</operator> <operator pos:start="65:21" pos:end="65:21">(</operator><name pos:start="65:22" pos:end="65:27">int8_t</name><operator pos:start="65:28" pos:end="65:28">)</operator><operator pos:start="65:29" pos:end="65:29">*</operator><name pos:start="65:30" pos:end="65:32">src</name><operator pos:start="65:33" pos:end="65:34">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="67:13" pos:end="91:13"><if pos:start="67:13" pos:end="77:13">if <condition pos:start="67:16" pos:end="67:27">(<expr pos:start="67:17" pos:end="67:26"><name pos:start="67:17" pos:end="67:21">count</name> <operator pos:start="67:23" pos:end="67:24">&gt;=</operator> <literal type="number" pos:start="67:26" pos:end="67:26">0</literal></expr>)</condition> <block pos:start="67:29" pos:end="77:13">{<block_content pos:start="69:17" pos:end="75:38">

                <if_stmt pos:start="69:17" pos:end="71:30"><if pos:start="69:17" pos:end="71:30">if <condition pos:start="69:20" pos:end="69:74">(<expr pos:start="69:21" pos:end="69:73"><name pos:start="69:21" pos:end="69:25">frame</name> <operator pos:start="69:27" pos:end="69:27">-</operator> <name pos:start="69:29" pos:end="69:36">line_ptr</name> <operator pos:start="69:38" pos:end="69:38">&lt;</operator> <name pos:start="69:40" pos:end="69:44">count</name><operator pos:start="69:45" pos:end="69:45">*</operator><literal type="number" pos:start="69:46" pos:end="69:46">2</literal> <operator pos:start="69:48" pos:end="69:49">||</operator> <name pos:start="69:51" pos:end="69:57">src_end</name> <operator pos:start="69:59" pos:end="69:59">-</operator> <name pos:start="69:61" pos:end="69:63">src</name> <operator pos:start="69:65" pos:end="69:65">&lt;</operator> <name pos:start="69:67" pos:end="69:71">count</name><operator pos:start="69:72" pos:end="69:72">*</operator><literal type="number" pos:start="69:73" pos:end="69:73">2</literal></expr>)</condition><block type="pseudo" pos:start="71:21" pos:end="71:30"><block_content pos:start="71:21" pos:end="71:30">

                    <return pos:start="71:21" pos:end="71:30">return <expr pos:start="71:28" pos:end="71:29"><operator pos:start="71:28" pos:end="71:28">-</operator><literal type="number" pos:start="71:29" pos:end="71:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="73:17" pos:end="73:63"><expr pos:start="73:17" pos:end="73:62"><call pos:start="73:17" pos:end="73:62"><name pos:start="73:17" pos:end="73:37">bytestream_get_buffer</name><argument_list pos:start="73:38" pos:end="73:62">(<argument pos:start="73:39" pos:end="73:42"><expr pos:start="73:39" pos:end="73:42"><operator pos:start="73:39" pos:end="73:39">&amp;</operator><name pos:start="73:40" pos:end="73:42">src</name></expr></argument>, <argument pos:start="73:45" pos:end="73:52"><expr pos:start="73:45" pos:end="73:52"><name pos:start="73:45" pos:end="73:52">line_ptr</name></expr></argument>, <argument pos:start="73:55" pos:end="73:61"><expr pos:start="73:55" pos:end="73:61"><name pos:start="73:55" pos:end="73:59">count</name><operator pos:start="73:60" pos:end="73:60">*</operator><literal type="number" pos:start="73:61" pos:end="73:61">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="75:17" pos:end="75:38"><expr pos:start="75:17" pos:end="75:37"><name pos:start="75:17" pos:end="75:24">line_ptr</name> <operator pos:start="75:26" pos:end="75:27">+=</operator> <name pos:start="75:29" pos:end="75:33">count</name> <operator pos:start="75:35" pos:end="75:35">*</operator> <literal type="number" pos:start="75:37" pos:end="75:37">2</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="77:15" pos:end="91:13">else <block pos:start="77:20" pos:end="91:13">{<block_content pos:start="79:17" pos:end="89:54">

                <expr_stmt pos:start="79:17" pos:end="79:31"><expr pos:start="79:17" pos:end="79:30"><name pos:start="79:17" pos:end="79:21">count</name> <operator pos:start="79:23" pos:end="79:23">=</operator> <operator pos:start="79:25" pos:end="79:25">-</operator><name pos:start="79:26" pos:end="79:30">count</name></expr>;</expr_stmt>

                <if_stmt pos:start="81:17" pos:end="83:30"><if pos:start="81:17" pos:end="83:30">if <condition pos:start="81:20" pos:end="81:68">(<expr pos:start="81:21" pos:end="81:67"><name pos:start="81:21" pos:end="81:25">frame</name> <operator pos:start="81:27" pos:end="81:27">-</operator> <name pos:start="81:29" pos:end="81:36">line_ptr</name> <operator pos:start="81:38" pos:end="81:38">&lt;</operator> <name pos:start="81:40" pos:end="81:44">count</name><operator pos:start="81:45" pos:end="81:45">*</operator><literal type="number" pos:start="81:46" pos:end="81:46">2</literal> <operator pos:start="81:48" pos:end="81:49">||</operator> <name pos:start="81:51" pos:end="81:57">src_end</name> <operator pos:start="81:59" pos:end="81:59">-</operator> <name pos:start="81:61" pos:end="81:63">src</name> <operator pos:start="81:65" pos:end="81:65">&lt;</operator> <literal type="number" pos:start="81:67" pos:end="81:67">2</literal></expr>)</condition><block type="pseudo" pos:start="83:21" pos:end="83:30"><block_content pos:start="83:21" pos:end="83:30">

                    <return pos:start="83:21" pos:end="83:30">return <expr pos:start="83:28" pos:end="83:29"><operator pos:start="83:28" pos:end="83:28">-</operator><literal type="number" pos:start="83:29" pos:end="83:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="85:17" pos:end="85:46"><expr pos:start="85:17" pos:end="85:45"><name pos:start="85:17" pos:end="85:17">v</name> <operator pos:start="85:19" pos:end="85:19">=</operator> <call pos:start="85:21" pos:end="85:45"><name pos:start="85:21" pos:end="85:39">bytestream_get_le16</name><argument_list pos:start="85:40" pos:end="85:45">(<argument pos:start="85:41" pos:end="85:44"><expr pos:start="85:41" pos:end="85:44"><operator pos:start="85:41" pos:end="85:41">&amp;</operator><name pos:start="85:42" pos:end="85:44">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="87:17" pos:end="89:54">for <control pos:start="87:21" pos:end="87:43">(<init pos:start="87:22" pos:end="87:27"><expr pos:start="87:22" pos:end="87:26"><name pos:start="87:22" pos:end="87:22">i</name> <operator pos:start="87:24" pos:end="87:24">=</operator> <literal type="number" pos:start="87:26" pos:end="87:26">0</literal></expr>;</init> <condition pos:start="87:29" pos:end="87:38"><expr pos:start="87:29" pos:end="87:37"><name pos:start="87:29" pos:end="87:29">i</name> <operator pos:start="87:31" pos:end="87:31">&lt;</operator> <name pos:start="87:33" pos:end="87:37">count</name></expr>;</condition> <incr pos:start="87:40" pos:end="87:42"><expr pos:start="87:40" pos:end="87:42"><name pos:start="87:40" pos:end="87:40">i</name><operator pos:start="87:41" pos:end="87:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="89:21" pos:end="89:54"><block_content pos:start="89:21" pos:end="89:54">

                    <expr_stmt pos:start="89:21" pos:end="89:54"><expr pos:start="89:21" pos:end="89:53"><call pos:start="89:21" pos:end="89:53"><name pos:start="89:21" pos:end="89:39">bytestream_put_le16</name><argument_list pos:start="89:40" pos:end="89:53">(<argument pos:start="89:41" pos:end="89:49"><expr pos:start="89:41" pos:end="89:49"><operator pos:start="89:41" pos:end="89:41">&amp;</operator><name pos:start="89:42" pos:end="89:49">line_ptr</name></expr></argument>, <argument pos:start="89:52" pos:end="89:52"><expr pos:start="89:52" pos:end="89:52"><name pos:start="89:52" pos:end="89:52">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></while>

    </block_content>}</block></while>



    <return pos:start="99:5" pos:end="99:13">return <expr pos:start="99:12" pos:end="99:12"><literal type="number" pos:start="99:12" pos:end="99:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
