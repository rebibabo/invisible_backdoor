<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12564.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:31">avfilter_graph_send_command</name><parameter_list pos:start="1:32" pos:end="1:142">(<parameter pos:start="1:33" pos:end="1:52"><decl pos:start="1:33" pos:end="1:52"><type pos:start="1:33" pos:end="1:52"><name pos:start="1:33" pos:end="1:45">AVFilterGraph</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:52">graph</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:72"><decl pos:start="1:55" pos:end="1:72"><type pos:start="1:55" pos:end="1:72"><specifier pos:start="1:55" pos:end="1:59">const</specifier> <name pos:start="1:61" pos:end="1:64">char</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:72">target</name></decl></parameter>, <parameter pos:start="1:75" pos:end="1:89"><decl pos:start="1:75" pos:end="1:89"><type pos:start="1:75" pos:end="1:89"><specifier pos:start="1:75" pos:end="1:79">const</specifier> <name pos:start="1:81" pos:end="1:84">char</name> <modifier pos:start="1:86" pos:end="1:86">*</modifier></type><name pos:start="1:87" pos:end="1:89">cmd</name></decl></parameter>, <parameter pos:start="1:92" pos:end="1:106"><decl pos:start="1:92" pos:end="1:106"><type pos:start="1:92" pos:end="1:106"><specifier pos:start="1:92" pos:end="1:96">const</specifier> <name pos:start="1:98" pos:end="1:101">char</name> <modifier pos:start="1:103" pos:end="1:103">*</modifier></type><name pos:start="1:104" pos:end="1:106">arg</name></decl></parameter>, <parameter pos:start="1:109" pos:end="1:117"><decl pos:start="1:109" pos:end="1:117"><type pos:start="1:109" pos:end="1:117"><name pos:start="1:109" pos:end="1:112">char</name> <modifier pos:start="1:114" pos:end="1:114">*</modifier></type><name pos:start="1:115" pos:end="1:117">res</name></decl></parameter>, <parameter pos:start="1:120" pos:end="1:130"><decl pos:start="1:120" pos:end="1:130"><type pos:start="1:120" pos:end="1:130"><name pos:start="1:120" pos:end="1:122">int</name></type> <name pos:start="1:124" pos:end="1:130">res_len</name></decl></parameter>, <parameter pos:start="1:133" pos:end="1:141"><decl pos:start="1:133" pos:end="1:141"><type pos:start="1:133" pos:end="1:141"><name pos:start="1:133" pos:end="1:135">int</name></type> <name pos:start="1:137" pos:end="1:141">flags</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:13">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:30"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">r</name> <init pos:start="5:14" pos:end="5:30">= <expr pos:start="5:16" pos:end="5:30"><call pos:start="5:16" pos:end="5:30"><name pos:start="5:16" pos:end="5:22">AVERROR</name><argument_list pos:start="5:23" pos:end="5:30">(<argument pos:start="5:24" pos:end="5:29"><expr pos:start="5:24" pos:end="5:29"><name pos:start="5:24" pos:end="5:29">ENOSYS</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:17"><if pos:start="9:5" pos:end="11:17">if<condition pos:start="9:7" pos:end="9:14">(<expr pos:start="9:8" pos:end="9:13"><operator pos:start="9:8" pos:end="9:8">!</operator><name pos:start="9:9" pos:end="9:13">graph</name></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:17"><block_content pos:start="11:9" pos:end="11:17">

        <return pos:start="11:9" pos:end="11:17">return <expr pos:start="11:16" pos:end="11:16"><name pos:start="11:16" pos:end="11:16">r</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="15:5" pos:end="23:5"><if pos:start="15:5" pos:end="23:5">if<condition pos:start="15:7" pos:end="15:76">(<expr pos:start="15:8" pos:end="15:75"><operator pos:start="15:8" pos:end="15:8">(</operator><name pos:start="15:9" pos:end="15:13">flags</name> <operator pos:start="15:15" pos:end="15:15">&amp;</operator> <name pos:start="15:17" pos:end="15:37">AVFILTER_CMD_FLAG_ONE</name><operator pos:start="15:38" pos:end="15:38">)</operator> <operator pos:start="15:40" pos:end="15:41">&amp;&amp;</operator> <operator pos:start="15:43" pos:end="15:43">!</operator><operator pos:start="15:44" pos:end="15:44">(</operator><name pos:start="15:45" pos:end="15:49">flags</name> <operator pos:start="15:51" pos:end="15:51">&amp;</operator> <name pos:start="15:53" pos:end="15:74">AVFILTER_CMD_FLAG_FAST</name><operator pos:start="15:75" pos:end="15:75">)</operator></expr>)</condition> <block pos:start="15:78" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:21">

        <expr_stmt pos:start="17:9" pos:end="17:109"><expr pos:start="17:9" pos:end="17:108"><name pos:start="17:9" pos:end="17:9">r</name><operator pos:start="17:10" pos:end="17:10">=</operator><call pos:start="17:11" pos:end="17:108"><name pos:start="17:11" pos:end="17:37">avfilter_graph_send_command</name><argument_list pos:start="17:38" pos:end="17:108">(<argument pos:start="17:39" pos:end="17:43"><expr pos:start="17:39" pos:end="17:43"><name pos:start="17:39" pos:end="17:43">graph</name></expr></argument>, <argument pos:start="17:46" pos:end="17:51"><expr pos:start="17:46" pos:end="17:51"><name pos:start="17:46" pos:end="17:51">target</name></expr></argument>, <argument pos:start="17:54" pos:end="17:56"><expr pos:start="17:54" pos:end="17:56"><name pos:start="17:54" pos:end="17:56">cmd</name></expr></argument>, <argument pos:start="17:59" pos:end="17:61"><expr pos:start="17:59" pos:end="17:61"><name pos:start="17:59" pos:end="17:61">arg</name></expr></argument>, <argument pos:start="17:64" pos:end="17:66"><expr pos:start="17:64" pos:end="17:66"><name pos:start="17:64" pos:end="17:66">res</name></expr></argument>, <argument pos:start="17:69" pos:end="17:75"><expr pos:start="17:69" pos:end="17:75"><name pos:start="17:69" pos:end="17:75">res_len</name></expr></argument>, <argument pos:start="17:78" pos:end="17:107"><expr pos:start="17:78" pos:end="17:107"><name pos:start="17:78" pos:end="17:82">flags</name> <operator pos:start="17:84" pos:end="17:84">|</operator> <name pos:start="17:86" pos:end="17:107">AVFILTER_CMD_FLAG_FAST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="21:21"><if pos:start="19:9" pos:end="21:21">if<condition pos:start="19:11" pos:end="19:32">(<expr pos:start="19:12" pos:end="19:31"><name pos:start="19:12" pos:end="19:12">r</name> <operator pos:start="19:14" pos:end="19:15">!=</operator> <call pos:start="19:17" pos:end="19:31"><name pos:start="19:17" pos:end="19:23">AVERROR</name><argument_list pos:start="19:24" pos:end="19:31">(<argument pos:start="19:25" pos:end="19:30"><expr pos:start="19:25" pos:end="19:30"><name pos:start="19:25" pos:end="19:30">ENOSYS</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:21"><block_content pos:start="21:13" pos:end="21:21">

            <return pos:start="21:13" pos:end="21:21">return <expr pos:start="21:20" pos:end="21:20"><name pos:start="21:20" pos:end="21:20">r</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="29:18"><if pos:start="27:5" pos:end="29:18">if<condition pos:start="27:7" pos:end="27:22">(<expr pos:start="27:8" pos:end="27:21"><name pos:start="27:8" pos:end="27:14">res_len</name> <operator pos:start="27:16" pos:end="27:17">&amp;&amp;</operator> <name pos:start="27:19" pos:end="27:21">res</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:18"><block_content pos:start="29:9" pos:end="29:18">

        <expr_stmt pos:start="29:9" pos:end="29:18"><expr pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:14"><name pos:start="29:9" pos:end="29:11">res</name><index pos:start="29:12" pos:end="29:14">[<expr pos:start="29:13" pos:end="29:13"><literal type="number" pos:start="29:13" pos:end="29:13">0</literal></expr>]</index></name><operator pos:start="29:15" pos:end="29:15">=</operator> <literal type="number" pos:start="29:17" pos:end="29:17">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <for pos:start="33:5" pos:end="51:5">for <control pos:start="33:9" pos:end="33:45">(<init pos:start="33:10" pos:end="33:15"><expr pos:start="33:10" pos:end="33:14"><name pos:start="33:10" pos:end="33:10">i</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <literal type="number" pos:start="33:14" pos:end="33:14">0</literal></expr>;</init> <condition pos:start="33:17" pos:end="33:40"><expr pos:start="33:17" pos:end="33:39"><name pos:start="33:17" pos:end="33:17">i</name> <operator pos:start="33:19" pos:end="33:19">&lt;</operator> <name pos:start="33:21" pos:end="33:39"><name pos:start="33:21" pos:end="33:25">graph</name><operator pos:start="33:26" pos:end="33:27">-&gt;</operator><name pos:start="33:28" pos:end="33:39">filter_count</name></name></expr>;</condition> <incr pos:start="33:42" pos:end="33:44"><expr pos:start="33:42" pos:end="33:44"><name pos:start="33:42" pos:end="33:42">i</name><operator pos:start="33:43" pos:end="33:44">++</operator></expr></incr>)</control> <block pos:start="33:47" pos:end="51:5">{<block_content pos:start="35:9" pos:end="49:9">

        <decl_stmt pos:start="35:9" pos:end="35:52"><decl pos:start="35:9" pos:end="35:51"><type pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:23">AVFilterContext</name> <modifier pos:start="35:25" pos:end="35:25">*</modifier></type><name pos:start="35:26" pos:end="35:31">filter</name> <init pos:start="35:33" pos:end="35:51">= <expr pos:start="35:35" pos:end="35:51"><name pos:start="35:35" pos:end="35:51"><name pos:start="35:35" pos:end="35:39">graph</name><operator pos:start="35:40" pos:end="35:41">-&gt;</operator><name pos:start="35:42" pos:end="35:48">filters</name><index pos:start="35:49" pos:end="35:51">[<expr pos:start="35:50" pos:end="35:50"><name pos:start="35:50" pos:end="35:50">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="37:9" pos:end="49:9"><if pos:start="37:9" pos:end="49:9">if<condition pos:start="37:11" pos:end="37:108">(<expr pos:start="37:12" pos:end="37:107"><operator pos:start="37:12" pos:end="37:12">!</operator><call pos:start="37:13" pos:end="37:33"><name pos:start="37:13" pos:end="37:18">strcmp</name><argument_list pos:start="37:19" pos:end="37:33">(<argument pos:start="37:20" pos:end="37:25"><expr pos:start="37:20" pos:end="37:25"><name pos:start="37:20" pos:end="37:25">target</name></expr></argument>, <argument pos:start="37:28" pos:end="37:32"><expr pos:start="37:28" pos:end="37:32"><literal type="string" pos:start="37:28" pos:end="37:32">"all"</literal></expr></argument>)</argument_list></call> <operator pos:start="37:35" pos:end="37:36">||</operator> <operator pos:start="37:38" pos:end="37:38">!</operator><call pos:start="37:39" pos:end="37:66"><name pos:start="37:39" pos:end="37:44">strcmp</name><argument_list pos:start="37:45" pos:end="37:66">(<argument pos:start="37:46" pos:end="37:51"><expr pos:start="37:46" pos:end="37:51"><name pos:start="37:46" pos:end="37:51">target</name></expr></argument>, <argument pos:start="37:54" pos:end="37:65"><expr pos:start="37:54" pos:end="37:65"><name pos:start="37:54" pos:end="37:65"><name pos:start="37:54" pos:end="37:59">filter</name><operator pos:start="37:60" pos:end="37:61">-&gt;</operator><name pos:start="37:62" pos:end="37:65">name</name></name></expr></argument>)</argument_list></call> <operator pos:start="37:68" pos:end="37:69">||</operator> <operator pos:start="37:71" pos:end="37:71">!</operator><call pos:start="37:72" pos:end="37:107"><name pos:start="37:72" pos:end="37:77">strcmp</name><argument_list pos:start="37:78" pos:end="37:107">(<argument pos:start="37:79" pos:end="37:84"><expr pos:start="37:79" pos:end="37:84"><name pos:start="37:79" pos:end="37:84">target</name></expr></argument>, <argument pos:start="37:87" pos:end="37:106"><expr pos:start="37:87" pos:end="37:106"><name pos:start="37:87" pos:end="37:106"><name pos:start="37:87" pos:end="37:92">filter</name><operator pos:start="37:93" pos:end="37:94">-&gt;</operator><name pos:start="37:95" pos:end="37:100">filter</name><operator pos:start="37:101" pos:end="37:102">-&gt;</operator><name pos:start="37:103" pos:end="37:106">name</name></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="37:109" pos:end="49:9">{<block_content pos:start="39:13" pos:end="47:13">

            <expr_stmt pos:start="39:13" pos:end="39:80"><expr pos:start="39:13" pos:end="39:79"><name pos:start="39:13" pos:end="39:13">r</name> <operator pos:start="39:15" pos:end="39:15">=</operator> <call pos:start="39:17" pos:end="39:79"><name pos:start="39:17" pos:end="39:40">avfilter_process_command</name><argument_list pos:start="39:41" pos:end="39:79">(<argument pos:start="39:42" pos:end="39:47"><expr pos:start="39:42" pos:end="39:47"><name pos:start="39:42" pos:end="39:47">filter</name></expr></argument>, <argument pos:start="39:50" pos:end="39:52"><expr pos:start="39:50" pos:end="39:52"><name pos:start="39:50" pos:end="39:52">cmd</name></expr></argument>, <argument pos:start="39:55" pos:end="39:57"><expr pos:start="39:55" pos:end="39:57"><name pos:start="39:55" pos:end="39:57">arg</name></expr></argument>, <argument pos:start="39:60" pos:end="39:62"><expr pos:start="39:60" pos:end="39:62"><name pos:start="39:60" pos:end="39:62">res</name></expr></argument>, <argument pos:start="39:65" pos:end="39:71"><expr pos:start="39:65" pos:end="39:71"><name pos:start="39:65" pos:end="39:71">res_len</name></expr></argument>, <argument pos:start="39:74" pos:end="39:78"><expr pos:start="39:74" pos:end="39:78"><name pos:start="39:74" pos:end="39:78">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="41:13" pos:end="47:13"><if pos:start="41:13" pos:end="47:13">if<condition pos:start="41:15" pos:end="41:36">(<expr pos:start="41:16" pos:end="41:35"><name pos:start="41:16" pos:end="41:16">r</name> <operator pos:start="41:18" pos:end="41:19">!=</operator> <call pos:start="41:21" pos:end="41:35"><name pos:start="41:21" pos:end="41:27">AVERROR</name><argument_list pos:start="41:28" pos:end="41:35">(<argument pos:start="41:29" pos:end="41:34"><expr pos:start="41:29" pos:end="41:34"><name pos:start="41:29" pos:end="41:34">ENOSYS</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:38" pos:end="47:13">{<block_content pos:start="43:17" pos:end="45:29">

                <if_stmt pos:start="43:17" pos:end="45:29"><if pos:start="43:17" pos:end="45:29">if<condition pos:start="43:19" pos:end="43:58">(<expr pos:start="43:20" pos:end="43:57"><operator pos:start="43:20" pos:end="43:20">(</operator><name pos:start="43:21" pos:end="43:25">flags</name> <operator pos:start="43:27" pos:end="43:27">&amp;</operator> <name pos:start="43:29" pos:end="43:49">AVFILTER_CMD_FLAG_ONE</name><operator pos:start="43:50" pos:end="43:50">)</operator> <operator pos:start="43:52" pos:end="43:53">||</operator> <name pos:start="43:55" pos:end="43:55">r</name><operator pos:start="43:56" pos:end="43:56">&lt;</operator><literal type="number" pos:start="43:57" pos:end="43:57">0</literal></expr>)</condition><block type="pseudo" pos:start="45:21" pos:end="45:29"><block_content pos:start="45:21" pos:end="45:29">

                    <return pos:start="45:21" pos:end="45:29">return <expr pos:start="45:28" pos:end="45:28"><name pos:start="45:28" pos:end="45:28">r</name></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <return pos:start="55:5" pos:end="55:13">return <expr pos:start="55:12" pos:end="55:12"><name pos:start="55:12" pos:end="55:12">r</name></expr>;</return>

</block_content>}</block></function>
</unit>
