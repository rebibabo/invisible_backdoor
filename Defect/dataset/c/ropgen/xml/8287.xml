<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8287.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:10"><name pos:start="1:1" pos:end="1:10">ram_addr_t</name></type> <name pos:start="1:12" pos:end="1:34">qemu_ram_alloc_from_ptr</name><parameter_list pos:start="1:35" pos:end="3:52">(<parameter pos:start="1:36" pos:end="1:51"><decl pos:start="1:36" pos:end="1:51"><type pos:start="1:36" pos:end="1:51"><name pos:start="1:36" pos:end="1:46">DeviceState</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">dev</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:69"><decl pos:start="1:54" pos:end="1:69"><type pos:start="1:54" pos:end="1:69"><specifier pos:start="1:54" pos:end="1:58">const</specifier> <name pos:start="1:60" pos:end="1:63">char</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:69">name</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:39"><decl pos:start="3:25" pos:end="3:39"><type pos:start="3:25" pos:end="3:39"><name pos:start="3:25" pos:end="3:34">ram_addr_t</name></type> <name pos:start="3:36" pos:end="3:39">size</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:51"><decl pos:start="3:42" pos:end="3:51"><type pos:start="3:42" pos:end="3:51"><name pos:start="3:42" pos:end="3:45">void</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:51">host</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="83:1">{<block_content pos:start="7:5" pos:end="81:29">

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">RAMBlock</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:23">new_block</name></decl>, <decl pos:start="7:26" pos:end="7:31"><type ref="prev" pos:start="7:5" pos:end="7:14"><modifier pos:start="7:26" pos:end="7:26">*</modifier></type><name pos:start="7:27" pos:end="7:31">block</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:35"><expr pos:start="11:5" pos:end="11:34"><name pos:start="11:5" pos:end="11:8">size</name> <operator pos:start="11:10" pos:end="11:10">=</operator> <call pos:start="11:12" pos:end="11:34"><name pos:start="11:12" pos:end="11:28">TARGET_PAGE_ALIGN</name><argument_list pos:start="11:29" pos:end="11:34">(<argument pos:start="11:30" pos:end="11:33"><expr pos:start="11:30" pos:end="11:33"><name pos:start="11:30" pos:end="11:33">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:49"><expr pos:start="13:5" pos:end="13:48"><name pos:start="13:5" pos:end="13:13">new_block</name> <operator pos:start="13:15" pos:end="13:15">=</operator> <call pos:start="13:17" pos:end="13:48"><name pos:start="13:17" pos:end="13:28">qemu_mallocz</name><argument_list pos:start="13:29" pos:end="13:48">(<argument pos:start="13:30" pos:end="13:47"><expr pos:start="13:30" pos:end="13:47"><sizeof pos:start="13:30" pos:end="13:47">sizeof<argument_list pos:start="13:36" pos:end="13:47">(<argument pos:start="13:37" pos:end="13:46"><expr pos:start="13:37" pos:end="13:46"><operator pos:start="13:37" pos:end="13:37">*</operator><name pos:start="13:38" pos:end="13:46">new_block</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="29:5"><if pos:start="17:5" pos:end="29:5">if <condition pos:start="17:8" pos:end="17:70">(<expr pos:start="17:9" pos:end="17:69"><name pos:start="17:9" pos:end="17:11">dev</name> <operator pos:start="17:13" pos:end="17:14">&amp;&amp;</operator> <name pos:start="17:16" pos:end="17:30"><name pos:start="17:16" pos:end="17:18">dev</name><operator pos:start="17:19" pos:end="17:20">-&gt;</operator><name pos:start="17:21" pos:end="17:30">parent_bus</name></name> <operator pos:start="17:32" pos:end="17:33">&amp;&amp;</operator> <name pos:start="17:35" pos:end="17:69"><name pos:start="17:35" pos:end="17:37">dev</name><operator pos:start="17:38" pos:end="17:39">-&gt;</operator><name pos:start="17:40" pos:end="17:49">parent_bus</name><operator pos:start="17:50" pos:end="17:51">-&gt;</operator><name pos:start="17:52" pos:end="17:55">info</name><operator pos:start="17:56" pos:end="17:57">-&gt;</operator><name pos:start="17:58" pos:end="17:69">get_dev_path</name></name></expr>)</condition> <block pos:start="17:72" pos:end="29:5">{<block_content pos:start="19:9" pos:end="27:9">

        <decl_stmt pos:start="19:9" pos:end="19:60"><decl pos:start="19:9" pos:end="19:59"><type pos:start="19:9" pos:end="19:14"><name pos:start="19:9" pos:end="19:12">char</name> <modifier pos:start="19:14" pos:end="19:14">*</modifier></type><name pos:start="19:15" pos:end="19:16">id</name> <init pos:start="19:18" pos:end="19:59">= <expr pos:start="19:20" pos:end="19:59"><call pos:start="19:20" pos:end="19:59"><name pos:start="19:20" pos:end="19:54"><name pos:start="19:20" pos:end="19:22">dev</name><operator pos:start="19:23" pos:end="19:24">-&gt;</operator><name pos:start="19:25" pos:end="19:34">parent_bus</name><operator pos:start="19:35" pos:end="19:36">-&gt;</operator><name pos:start="19:37" pos:end="19:40">info</name><operator pos:start="19:41" pos:end="19:42">-&gt;</operator><name pos:start="19:43" pos:end="19:54">get_dev_path</name></name><argument_list pos:start="19:55" pos:end="19:59">(<argument pos:start="19:56" pos:end="19:58"><expr pos:start="19:56" pos:end="19:58"><name pos:start="19:56" pos:end="19:58">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="21:9" pos:end="27:9"><if pos:start="21:9" pos:end="27:9">if <condition pos:start="21:12" pos:end="21:15">(<expr pos:start="21:13" pos:end="21:14"><name pos:start="21:13" pos:end="21:14">id</name></expr>)</condition> <block pos:start="21:17" pos:end="27:9">{<block_content pos:start="23:13" pos:end="25:26">

            <expr_stmt pos:start="23:13" pos:end="23:76"><expr pos:start="23:13" pos:end="23:75"><call pos:start="23:13" pos:end="23:75"><name pos:start="23:13" pos:end="23:20">snprintf</name><argument_list pos:start="23:21" pos:end="23:75">(<argument pos:start="23:22" pos:end="23:37"><expr pos:start="23:22" pos:end="23:37"><name pos:start="23:22" pos:end="23:37"><name pos:start="23:22" pos:end="23:30">new_block</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name pos:start="23:33" pos:end="23:37">idstr</name></name></expr></argument>, <argument pos:start="23:40" pos:end="23:63"><expr pos:start="23:40" pos:end="23:63"><sizeof pos:start="23:40" pos:end="23:63">sizeof<argument_list pos:start="23:46" pos:end="23:63">(<argument pos:start="23:47" pos:end="23:62"><expr pos:start="23:47" pos:end="23:62"><name pos:start="23:47" pos:end="23:62"><name pos:start="23:47" pos:end="23:55">new_block</name><operator pos:start="23:56" pos:end="23:57">-&gt;</operator><name pos:start="23:58" pos:end="23:62">idstr</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="23:66" pos:end="23:70"><expr pos:start="23:66" pos:end="23:70"><literal type="string" pos:start="23:66" pos:end="23:70">"%s/"</literal></expr></argument>, <argument pos:start="23:73" pos:end="23:74"><expr pos:start="23:73" pos:end="23:74"><name pos:start="23:73" pos:end="23:74">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:26"><expr pos:start="25:13" pos:end="25:25"><call pos:start="25:13" pos:end="25:25"><name pos:start="25:13" pos:end="25:21">qemu_free</name><argument_list pos:start="25:22" pos:end="25:25">(<argument pos:start="25:23" pos:end="25:24"><expr pos:start="25:23" pos:end="25:24"><name pos:start="25:23" pos:end="25:24">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:62"><expr pos:start="31:5" pos:end="31:61"><call pos:start="31:5" pos:end="31:61"><name pos:start="31:5" pos:end="31:11">pstrcat</name><argument_list pos:start="31:12" pos:end="31:61">(<argument pos:start="31:13" pos:end="31:28"><expr pos:start="31:13" pos:end="31:28"><name pos:start="31:13" pos:end="31:28"><name pos:start="31:13" pos:end="31:21">new_block</name><operator pos:start="31:22" pos:end="31:23">-&gt;</operator><name pos:start="31:24" pos:end="31:28">idstr</name></name></expr></argument>, <argument pos:start="31:31" pos:end="31:54"><expr pos:start="31:31" pos:end="31:54"><sizeof pos:start="31:31" pos:end="31:54">sizeof<argument_list pos:start="31:37" pos:end="31:54">(<argument pos:start="31:38" pos:end="31:53"><expr pos:start="31:38" pos:end="31:53"><name pos:start="31:38" pos:end="31:53"><name pos:start="31:38" pos:end="31:46">new_block</name><operator pos:start="31:47" pos:end="31:48">-&gt;</operator><name pos:start="31:49" pos:end="31:53">idstr</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="31:57" pos:end="31:60"><expr pos:start="31:57" pos:end="31:60"><name pos:start="31:57" pos:end="31:60">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <macro pos:start="35:5" pos:end="35:48"><name pos:start="35:5" pos:end="35:17">QLIST_FOREACH</name><argument_list pos:start="35:18" pos:end="35:48">(<argument pos:start="35:19" pos:end="35:23">block</argument>, <argument pos:start="35:26" pos:end="35:41">&amp;ram_list.blocks</argument>, <argument pos:start="35:44" pos:end="35:47">next</argument>)</argument_list></macro> <block pos:start="35:50" pos:end="47:5">{<block_content pos:start="37:9" pos:end="45:9">

        <if_stmt pos:start="37:9" pos:end="45:9"><if pos:start="37:9" pos:end="45:9">if <condition pos:start="37:12" pos:end="37:52">(<expr pos:start="37:13" pos:end="37:51"><operator pos:start="37:13" pos:end="37:13">!</operator><call pos:start="37:14" pos:end="37:51"><name pos:start="37:14" pos:end="37:19">strcmp</name><argument_list pos:start="37:20" pos:end="37:51">(<argument pos:start="37:21" pos:end="37:32"><expr pos:start="37:21" pos:end="37:32"><name pos:start="37:21" pos:end="37:32"><name pos:start="37:21" pos:end="37:25">block</name><operator pos:start="37:26" pos:end="37:27">-&gt;</operator><name pos:start="37:28" pos:end="37:32">idstr</name></name></expr></argument>, <argument pos:start="37:35" pos:end="37:50"><expr pos:start="37:35" pos:end="37:50"><name pos:start="37:35" pos:end="37:50"><name pos:start="37:35" pos:end="37:43">new_block</name><operator pos:start="37:44" pos:end="37:45">-&gt;</operator><name pos:start="37:46" pos:end="37:50">idstr</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:54" pos:end="45:9">{<block_content pos:start="39:13" pos:end="43:20">

            <expr_stmt pos:start="39:13" pos:end="41:38"><expr pos:start="39:13" pos:end="41:37"><call pos:start="39:13" pos:end="41:37"><name pos:start="39:13" pos:end="39:19">fprintf</name><argument_list pos:start="39:20" pos:end="41:37">(<argument pos:start="39:21" pos:end="39:26"><expr pos:start="39:21" pos:end="39:26"><name pos:start="39:21" pos:end="39:26">stderr</name></expr></argument>, <argument pos:start="39:29" pos:end="39:74"><expr pos:start="39:29" pos:end="39:74"><literal type="string" pos:start="39:29" pos:end="39:74">"RAMBlock \"%s\" already registered, abort!\n"</literal></expr></argument>,

                    <argument pos:start="41:21" pos:end="41:36"><expr pos:start="41:21" pos:end="41:36"><name pos:start="41:21" pos:end="41:36"><name pos:start="41:21" pos:end="41:29">new_block</name><operator pos:start="41:30" pos:end="41:31">-&gt;</operator><name pos:start="41:32" pos:end="41:36">idstr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:20"><expr pos:start="43:13" pos:end="43:19"><call pos:start="43:13" pos:end="43:19"><name pos:start="43:13" pos:end="43:17">abort</name><argument_list pos:start="43:18" pos:end="43:19">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>



    <expr_stmt pos:start="51:5" pos:end="51:27"><expr pos:start="51:5" pos:end="51:26"><name pos:start="51:5" pos:end="51:19"><name pos:start="51:5" pos:end="51:13">new_block</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:19">host</name></name> <operator pos:start="51:21" pos:end="51:21">=</operator> <name pos:start="51:23" pos:end="51:26">host</name></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:46"><expr pos:start="55:5" pos:end="55:45"><name pos:start="55:5" pos:end="55:21"><name pos:start="55:5" pos:end="55:13">new_block</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:21">offset</name></name> <operator pos:start="55:23" pos:end="55:23">=</operator> <call pos:start="55:25" pos:end="55:45"><name pos:start="55:25" pos:end="55:39">find_ram_offset</name><argument_list pos:start="55:40" pos:end="55:45">(<argument pos:start="55:41" pos:end="55:44"><expr pos:start="55:41" pos:end="55:44"><name pos:start="55:41" pos:end="55:44">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:29"><expr pos:start="57:5" pos:end="57:28"><name pos:start="57:5" pos:end="57:21"><name pos:start="57:5" pos:end="57:13">new_block</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:21">length</name></name> <operator pos:start="57:23" pos:end="57:23">=</operator> <name pos:start="57:25" pos:end="57:28">size</name></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:57"><expr pos:start="61:5" pos:end="61:56"><call pos:start="61:5" pos:end="61:56"><name pos:start="61:5" pos:end="61:21">QLIST_INSERT_HEAD</name><argument_list pos:start="61:22" pos:end="61:56">(<argument pos:start="61:23" pos:end="61:38"><expr pos:start="61:23" pos:end="61:38"><operator pos:start="61:23" pos:end="61:23">&amp;</operator><name pos:start="61:24" pos:end="61:38"><name pos:start="61:24" pos:end="61:31">ram_list</name><operator pos:start="61:32" pos:end="61:32">.</operator><name pos:start="61:33" pos:end="61:38">blocks</name></name></expr></argument>, <argument pos:start="61:41" pos:end="61:49"><expr pos:start="61:41" pos:end="61:49"><name pos:start="61:41" pos:end="61:49">new_block</name></expr></argument>, <argument pos:start="61:52" pos:end="61:55"><expr pos:start="61:52" pos:end="61:55"><name pos:start="61:52" pos:end="61:55">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="67:78"><expr pos:start="65:5" pos:end="67:77"><name pos:start="65:5" pos:end="65:23"><name pos:start="65:5" pos:end="65:12">ram_list</name><operator pos:start="65:13" pos:end="65:13">.</operator><name pos:start="65:14" pos:end="65:23">phys_dirty</name></name> <operator pos:start="65:25" pos:end="65:25">=</operator> <call pos:start="65:27" pos:end="67:77"><name pos:start="65:27" pos:end="65:38">qemu_realloc</name><argument_list pos:start="65:39" pos:end="67:77">(<argument pos:start="65:40" pos:end="65:58"><expr pos:start="65:40" pos:end="65:58"><name pos:start="65:40" pos:end="65:58"><name pos:start="65:40" pos:end="65:47">ram_list</name><operator pos:start="65:48" pos:end="65:48">.</operator><name pos:start="65:49" pos:end="65:58">phys_dirty</name></name></expr></argument>,

                                       <argument pos:start="67:40" pos:end="67:76"><expr pos:start="67:40" pos:end="67:76"><call pos:start="67:40" pos:end="67:56"><name pos:start="67:40" pos:end="67:54">last_ram_offset</name><argument_list pos:start="67:55" pos:end="67:56">()</argument_list></call> <operator pos:start="67:58" pos:end="67:59">&gt;&gt;</operator> <name pos:start="67:61" pos:end="67:76">TARGET_PAGE_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="71:43"><expr pos:start="69:5" pos:end="71:42"><call pos:start="69:5" pos:end="71:42"><name pos:start="69:5" pos:end="69:10">memset</name><argument_list pos:start="69:11" pos:end="71:42">(<argument pos:start="69:12" pos:end="69:72"><expr pos:start="69:12" pos:end="69:72"><name pos:start="69:12" pos:end="69:30"><name pos:start="69:12" pos:end="69:19">ram_list</name><operator pos:start="69:20" pos:end="69:20">.</operator><name pos:start="69:21" pos:end="69:30">phys_dirty</name></name> <operator pos:start="69:32" pos:end="69:32">+</operator> <operator pos:start="69:34" pos:end="69:34">(</operator><name pos:start="69:35" pos:end="69:51"><name pos:start="69:35" pos:end="69:43">new_block</name><operator pos:start="69:44" pos:end="69:45">-&gt;</operator><name pos:start="69:46" pos:end="69:51">offset</name></name> <operator pos:start="69:53" pos:end="69:54">&gt;&gt;</operator> <name pos:start="69:56" pos:end="69:71">TARGET_PAGE_BITS</name><operator pos:start="69:72" pos:end="69:72">)</operator></expr></argument>,

           <argument pos:start="71:12" pos:end="71:15"><expr pos:start="71:12" pos:end="71:15"><literal type="number" pos:start="71:12" pos:end="71:15">0xff</literal></expr></argument>, <argument pos:start="71:18" pos:end="71:41"><expr pos:start="71:18" pos:end="71:41"><name pos:start="71:18" pos:end="71:21">size</name> <operator pos:start="71:23" pos:end="71:24">&gt;&gt;</operator> <name pos:start="71:26" pos:end="71:41">TARGET_PAGE_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="75:5" pos:end="77:54"><if pos:start="75:5" pos:end="77:54">if <condition pos:start="75:8" pos:end="75:22">(<expr pos:start="75:9" pos:end="75:21"><call pos:start="75:9" pos:end="75:21"><name pos:start="75:9" pos:end="75:19">kvm_enabled</name><argument_list pos:start="75:20" pos:end="75:21">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="77:9" pos:end="77:54"><block_content pos:start="77:9" pos:end="77:54">

        <expr_stmt pos:start="77:9" pos:end="77:54"><expr pos:start="77:9" pos:end="77:53"><call pos:start="77:9" pos:end="77:53"><name pos:start="77:9" pos:end="77:30">kvm_setup_guest_memory</name><argument_list pos:start="77:31" pos:end="77:53">(<argument pos:start="77:32" pos:end="77:46"><expr pos:start="77:32" pos:end="77:46"><name pos:start="77:32" pos:end="77:46"><name pos:start="77:32" pos:end="77:40">new_block</name><operator pos:start="77:41" pos:end="77:42">-&gt;</operator><name pos:start="77:43" pos:end="77:46">host</name></name></expr></argument>, <argument pos:start="77:49" pos:end="77:52"><expr pos:start="77:49" pos:end="77:52"><name pos:start="77:49" pos:end="77:52">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="81:5" pos:end="81:29">return <expr pos:start="81:12" pos:end="81:28"><name pos:start="81:12" pos:end="81:28"><name pos:start="81:12" pos:end="81:20">new_block</name><operator pos:start="81:21" pos:end="81:22">-&gt;</operator><name pos:start="81:23" pos:end="81:28">offset</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
