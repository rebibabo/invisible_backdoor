<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5325.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">quorum_aio_finalize</name><parameter_list pos:start="1:32" pos:end="1:49">(<parameter pos:start="1:33" pos:end="1:48"><decl pos:start="1:33" pos:end="1:48"><type pos:start="1:33" pos:end="1:45"><name pos:start="1:33" pos:end="1:43">QuorumAIOCB</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">acb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:26">

    <decl_stmt pos:start="5:5" pos:end="5:48"><decl pos:start="5:5" pos:end="5:47"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">BDRVQuorumState</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:22">s</name> <init pos:start="5:24" pos:end="5:47">= <expr pos:start="5:26" pos:end="5:47"><name pos:start="5:26" pos:end="5:47"><name pos:start="5:26" pos:end="5:28">acb</name><operator pos:start="5:29" pos:end="5:30">-&gt;</operator><name pos:start="5:31" pos:end="5:36">common</name><operator pos:start="5:37" pos:end="5:37">.</operator><name pos:start="5:38" pos:end="5:39">bs</name><operator pos:start="5:40" pos:end="5:41">-&gt;</operator><name pos:start="5:42" pos:end="5:47">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:14">ret</name> <init pos:start="7:16" pos:end="7:18">= <expr pos:start="7:18" pos:end="7:18"><literal type="number" pos:start="7:18" pos:end="7:18">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:22">(<expr pos:start="11:9" pos:end="11:21"><name pos:start="11:9" pos:end="11:21"><name pos:start="11:9" pos:end="11:11">acb</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:21">vote_ret</name></name></expr>)</condition> <block pos:start="11:24" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:28">

        <expr_stmt pos:start="13:9" pos:end="13:28"><expr pos:start="13:9" pos:end="13:27"><name pos:start="13:9" pos:end="13:11">ret</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <name pos:start="13:15" pos:end="13:27"><name pos:start="13:15" pos:end="13:17">acb</name><operator pos:start="13:18" pos:end="13:19">-&gt;</operator><name pos:start="13:20" pos:end="13:27">vote_ret</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:44"><expr pos:start="19:5" pos:end="19:43"><call pos:start="19:5" pos:end="19:43"><name pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:7">acb</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:15">common</name><operator pos:start="19:16" pos:end="19:16">.</operator><name pos:start="19:17" pos:end="19:18">cb</name></name><argument_list pos:start="19:19" pos:end="19:43">(<argument pos:start="19:20" pos:end="19:37"><expr pos:start="19:20" pos:end="19:37"><name pos:start="19:20" pos:end="19:37"><name pos:start="19:20" pos:end="19:22">acb</name><operator pos:start="19:23" pos:end="19:24">-&gt;</operator><name pos:start="19:25" pos:end="19:30">common</name><operator pos:start="19:31" pos:end="19:31">.</operator><name pos:start="19:32" pos:end="19:37">opaque</name></name></expr></argument>, <argument pos:start="19:40" pos:end="19:42"><expr pos:start="19:40" pos:end="19:42"><name pos:start="19:40" pos:end="19:42">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="33:5"><if pos:start="23:5" pos:end="33:5">if <condition pos:start="23:8" pos:end="23:21">(<expr pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:11">acb</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:20">is_read</name></name></expr>)</condition> <block pos:start="23:23" pos:end="33:5">{<block_content pos:start="25:9" pos:end="31:9">

        <for pos:start="25:9" pos:end="31:9">for <control pos:start="25:13" pos:end="25:45">(<init pos:start="25:14" pos:end="25:19"><expr pos:start="25:14" pos:end="25:18"><name pos:start="25:14" pos:end="25:14">i</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <literal type="number" pos:start="25:18" pos:end="25:18">0</literal></expr>;</init> <condition pos:start="25:21" pos:end="25:40"><expr pos:start="25:21" pos:end="25:39"><name pos:start="25:21" pos:end="25:21">i</name> <operator pos:start="25:23" pos:end="25:23">&lt;</operator> <name pos:start="25:25" pos:end="25:39"><name pos:start="25:25" pos:end="25:25">s</name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:39">num_children</name></name></expr>;</condition> <incr pos:start="25:42" pos:end="25:44"><expr pos:start="25:42" pos:end="25:44"><name pos:start="25:42" pos:end="25:42">i</name><operator pos:start="25:43" pos:end="25:44">++</operator></expr></incr>)</control> <block pos:start="25:47" pos:end="31:9">{<block_content pos:start="27:13" pos:end="29:51">

            <expr_stmt pos:start="27:13" pos:end="27:41"><expr pos:start="27:13" pos:end="27:40"><call pos:start="27:13" pos:end="27:40"><name pos:start="27:13" pos:end="27:22">qemu_vfree</name><argument_list pos:start="27:23" pos:end="27:40">(<argument pos:start="27:24" pos:end="27:39"><expr pos:start="27:24" pos:end="27:39"><name pos:start="27:24" pos:end="27:35"><name pos:start="27:24" pos:end="27:26">acb</name><operator pos:start="27:27" pos:end="27:28">-&gt;</operator><name pos:start="27:29" pos:end="27:32">qcrs</name><index pos:start="27:33" pos:end="27:35">[<expr pos:start="27:34" pos:end="27:34"><name pos:start="27:34" pos:end="27:34">i</name></expr>]</index></name><operator pos:start="27:36" pos:end="27:36">.</operator><name pos:start="27:37" pos:end="27:39">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:51"><expr pos:start="29:13" pos:end="29:50"><call pos:start="29:13" pos:end="29:50"><name pos:start="29:13" pos:end="29:30">qemu_iovec_destroy</name><argument_list pos:start="29:31" pos:end="29:50">(<argument pos:start="29:32" pos:end="29:49"><expr pos:start="29:32" pos:end="29:49"><operator pos:start="29:32" pos:end="29:32">&amp;</operator><name pos:start="29:33" pos:end="29:44"><name pos:start="29:33" pos:end="29:35">acb</name><operator pos:start="29:36" pos:end="29:37">-&gt;</operator><name pos:start="29:38" pos:end="29:41">qcrs</name><index pos:start="29:42" pos:end="29:44">[<expr pos:start="29:43" pos:end="29:43"><name pos:start="29:43" pos:end="29:43">i</name></expr>]</index></name><operator pos:start="29:45" pos:end="29:45">.</operator><name pos:start="29:46" pos:end="29:49">qiov</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:22"><expr pos:start="37:5" pos:end="37:21"><call pos:start="37:5" pos:end="37:21"><name pos:start="37:5" pos:end="37:10">g_free</name><argument_list pos:start="37:11" pos:end="37:21">(<argument pos:start="37:12" pos:end="37:20"><expr pos:start="37:12" pos:end="37:20"><name pos:start="37:12" pos:end="37:20"><name pos:start="37:12" pos:end="37:14">acb</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:20">qcrs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:26"><expr pos:start="39:5" pos:end="39:25"><call pos:start="39:5" pos:end="39:25"><name pos:start="39:5" pos:end="39:20">qemu_aio_release</name><argument_list pos:start="39:21" pos:end="39:25">(<argument pos:start="39:22" pos:end="39:24"><expr pos:start="39:22" pos:end="39:24"><name pos:start="39:22" pos:end="39:24">acb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
