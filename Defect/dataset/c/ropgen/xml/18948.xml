<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18948.c" pos:tabs="8"><function pos:start="1:1" pos:end="461:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">pflash_write</name> <parameter_list pos:start="1:26" pos:end="3:36">(<parameter pos:start="1:27" pos:end="1:39"><decl pos:start="1:27" pos:end="1:39"><type pos:start="1:27" pos:end="1:39"><name pos:start="1:27" pos:end="1:34">pflash_t</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">pfl</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:60"><decl pos:start="1:42" pos:end="1:60"><type pos:start="1:42" pos:end="1:60"><name pos:start="1:42" pos:end="1:53">target_ulong</name></type> <name pos:start="1:55" pos:end="1:60">offset</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:76"><decl pos:start="1:63" pos:end="1:76"><type pos:start="1:63" pos:end="1:76"><name pos:start="1:63" pos:end="1:70">uint32_t</name></type> <name pos:start="1:72" pos:end="1:76">value</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:35"><decl pos:start="3:27" pos:end="3:35"><type pos:start="3:27" pos:end="3:35"><name pos:start="3:27" pos:end="3:29">int</name></type> <name pos:start="3:31" pos:end="3:35">width</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="461:1">{<block_content pos:start="7:5" pos:end="459:11">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:16">target_ulong</name></type> <name pos:start="7:18" pos:end="7:21">boff</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:14">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:15">cmd</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="17:44">/* WARNING: when the memory area is in ROMD mode, the offset is a

       ram offset, not a physical address */</comment>

    <if_stmt pos:start="19:5" pos:end="25:28"><if pos:start="19:5" pos:end="21:51">if <condition pos:start="19:8" pos:end="19:25">(<expr pos:start="19:9" pos:end="19:24"><name pos:start="19:9" pos:end="19:19"><name pos:start="19:9" pos:end="19:11">pfl</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:19">wcycle</name></name> <operator pos:start="19:21" pos:end="19:22">==</operator> <literal type="number" pos:start="19:24" pos:end="19:24">0</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:51"><block_content pos:start="21:9" pos:end="21:51">

        <expr_stmt pos:start="21:9" pos:end="21:51"><expr pos:start="21:9" pos:end="21:50"><name pos:start="21:9" pos:end="21:14">offset</name> <operator pos:start="21:16" pos:end="21:17">-=</operator> <operator pos:start="21:19" pos:end="21:19">(</operator><name pos:start="21:20" pos:end="21:31">target_ulong</name><operator pos:start="21:32" pos:end="21:32">)</operator><operator pos:start="21:33" pos:end="21:33">(</operator><name pos:start="21:34" pos:end="21:37">long</name><operator pos:start="21:38" pos:end="21:38">)</operator><name pos:start="21:39" pos:end="21:50"><name pos:start="21:39" pos:end="21:41">pfl</name><operator pos:start="21:42" pos:end="21:43">-&gt;</operator><name pos:start="21:44" pos:end="21:50">storage</name></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="23:5" pos:end="25:28">else<block type="pseudo" pos:start="25:9" pos:end="25:28"><block_content pos:start="25:9" pos:end="25:28">

        <expr_stmt pos:start="25:9" pos:end="25:28"><expr pos:start="25:9" pos:end="25:27"><name pos:start="25:9" pos:end="25:14">offset</name> <operator pos:start="25:16" pos:end="25:17">-=</operator> <name pos:start="25:19" pos:end="25:27"><name pos:start="25:19" pos:end="25:21">pfl</name><operator pos:start="25:22" pos:end="25:23">-&gt;</operator><name pos:start="25:24" pos:end="25:27">base</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        

    <expr_stmt pos:start="29:5" pos:end="29:16"><expr pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:7">cmd</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <name pos:start="29:11" pos:end="29:15">value</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="33:34"><expr pos:start="31:5" pos:end="33:33"><call pos:start="31:5" pos:end="33:33"><name pos:start="31:5" pos:end="31:11">DPRINTF</name><argument_list pos:start="31:12" pos:end="33:33">(<argument pos:start="31:13" pos:end="31:52"><expr pos:start="31:13" pos:end="31:52"><literal type="string" pos:start="31:13" pos:end="31:25">"%s: offset "</literal> <name pos:start="31:27" pos:end="31:39">TARGET_FMT_lx</name> <literal type="string" pos:start="31:41" pos:end="31:52">" %08x %d\n"</literal></expr></argument>, <argument pos:start="31:55" pos:end="31:62"><expr pos:start="31:55" pos:end="31:62"><name pos:start="31:55" pos:end="31:62">__func__</name></expr></argument>,

            <argument pos:start="33:13" pos:end="33:18"><expr pos:start="33:13" pos:end="33:18"><name pos:start="33:13" pos:end="33:18">offset</name></expr></argument>, <argument pos:start="33:21" pos:end="33:25"><expr pos:start="33:21" pos:end="33:25"><name pos:start="33:21" pos:end="33:25">value</name></expr></argument>, <argument pos:start="33:28" pos:end="33:32"><expr pos:start="33:28" pos:end="33:32"><name pos:start="33:28" pos:end="33:32">width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="43:5"><if pos:start="35:5" pos:end="43:5">if <condition pos:start="35:8" pos:end="35:40">(<expr pos:start="35:9" pos:end="35:39"><name pos:start="35:9" pos:end="35:16"><name pos:start="35:9" pos:end="35:11">pfl</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:16">cmd</name></name> <operator pos:start="35:18" pos:end="35:19">!=</operator> <literal type="number" pos:start="35:21" pos:end="35:24">0xA0</literal> <operator pos:start="35:26" pos:end="35:27">&amp;&amp;</operator> <name pos:start="35:29" pos:end="35:31">cmd</name> <operator pos:start="35:33" pos:end="35:34">==</operator> <literal type="number" pos:start="35:36" pos:end="35:39">0xF0</literal></expr>)</condition> <block pos:start="35:42" pos:end="43:5">{<block_content pos:start="37:9" pos:end="41:25">

        <expr_stmt pos:start="37:9" pos:end="39:41"><expr pos:start="37:9" pos:end="39:40"><call pos:start="37:9" pos:end="39:40"><name pos:start="37:9" pos:end="37:15">DPRINTF</name><argument_list pos:start="37:16" pos:end="39:40">(<argument pos:start="37:17" pos:end="37:53"><expr pos:start="37:17" pos:end="37:53"><literal type="string" pos:start="37:17" pos:end="37:53">"%s: flash reset asked (%02x %02x)\n"</literal></expr></argument>,

                <argument pos:start="39:17" pos:end="39:24"><expr pos:start="39:17" pos:end="39:24"><name pos:start="39:17" pos:end="39:24">__func__</name></expr></argument>, <argument pos:start="39:27" pos:end="39:34"><expr pos:start="39:27" pos:end="39:34"><name pos:start="39:27" pos:end="39:34"><name pos:start="39:27" pos:end="39:29">pfl</name><operator pos:start="39:30" pos:end="39:31">-&gt;</operator><name pos:start="39:32" pos:end="39:34">cmd</name></name></expr></argument>, <argument pos:start="39:37" pos:end="39:39"><expr pos:start="39:37" pos:end="39:39"><name pos:start="39:37" pos:end="39:39">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="41:9" pos:end="41:25">goto <name pos:start="41:14" pos:end="41:24">reset_flash</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="45:5" pos:end="45:43">/* Set the device in I/O access mode */</comment>

    <expr_stmt pos:start="47:5" pos:end="47:73"><expr pos:start="47:5" pos:end="47:72"><call pos:start="47:5" pos:end="47:72"><name pos:start="47:5" pos:end="47:32">cpu_register_physical_memory</name><argument_list pos:start="47:33" pos:end="47:72">(<argument pos:start="47:34" pos:end="47:42"><expr pos:start="47:34" pos:end="47:42"><name pos:start="47:34" pos:end="47:42"><name pos:start="47:34" pos:end="47:36">pfl</name><operator pos:start="47:37" pos:end="47:38">-&gt;</operator><name pos:start="47:39" pos:end="47:42">base</name></name></expr></argument>, <argument pos:start="47:45" pos:end="47:58"><expr pos:start="47:45" pos:end="47:58"><name pos:start="47:45" pos:end="47:58"><name pos:start="47:45" pos:end="47:47">pfl</name><operator pos:start="47:48" pos:end="47:49">-&gt;</operator><name pos:start="47:50" pos:end="47:58">total_len</name></name></expr></argument>, <argument pos:start="47:61" pos:end="47:71"><expr pos:start="47:61" pos:end="47:71"><name pos:start="47:61" pos:end="47:71"><name pos:start="47:61" pos:end="47:63">pfl</name><operator pos:start="47:64" pos:end="47:65">-&gt;</operator><name pos:start="47:66" pos:end="47:71">fl_mem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:42"><expr pos:start="49:5" pos:end="49:41"><name pos:start="49:5" pos:end="49:8">boff</name> <operator pos:start="49:10" pos:end="49:10">=</operator> <name pos:start="49:12" pos:end="49:17">offset</name> <operator pos:start="49:19" pos:end="49:19">&amp;</operator> <operator pos:start="49:21" pos:end="49:21">(</operator><name pos:start="49:22" pos:end="49:36"><name pos:start="49:22" pos:end="49:24">pfl</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:36">sector_len</name></name> <operator pos:start="49:38" pos:end="49:38">-</operator> <literal type="number" pos:start="49:40" pos:end="49:40">1</literal><operator pos:start="49:41" pos:end="49:41">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="57:25"><if pos:start="51:5" pos:end="53:25">if <condition pos:start="51:8" pos:end="51:24">(<expr pos:start="51:9" pos:end="51:23"><name pos:start="51:9" pos:end="51:18"><name pos:start="51:9" pos:end="51:11">pfl</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:18">width</name></name> <operator pos:start="51:20" pos:end="51:21">==</operator> <literal type="number" pos:start="51:23" pos:end="51:23">2</literal></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:25"><block_content pos:start="53:9" pos:end="53:25">

        <expr_stmt pos:start="53:9" pos:end="53:25"><expr pos:start="53:9" pos:end="53:24"><name pos:start="53:9" pos:end="53:12">boff</name> <operator pos:start="53:14" pos:end="53:14">=</operator> <name pos:start="53:16" pos:end="53:19">boff</name> <operator pos:start="53:21" pos:end="53:22">&gt;&gt;</operator> <literal type="number" pos:start="53:24" pos:end="53:24">1</literal></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="55:5" pos:end="57:25">else if <condition pos:start="55:13" pos:end="55:29">(<expr pos:start="55:14" pos:end="55:28"><name pos:start="55:14" pos:end="55:23"><name pos:start="55:14" pos:end="55:16">pfl</name><operator pos:start="55:17" pos:end="55:18">-&gt;</operator><name pos:start="55:19" pos:end="55:23">width</name></name> <operator pos:start="55:25" pos:end="55:26">==</operator> <literal type="number" pos:start="55:28" pos:end="55:28">4</literal></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:25"><block_content pos:start="57:9" pos:end="57:25">

        <expr_stmt pos:start="57:9" pos:end="57:25"><expr pos:start="57:9" pos:end="57:24"><name pos:start="57:9" pos:end="57:12">boff</name> <operator pos:start="57:14" pos:end="57:14">=</operator> <name pos:start="57:16" pos:end="57:19">boff</name> <operator pos:start="57:21" pos:end="57:22">&gt;&gt;</operator> <literal type="number" pos:start="57:24" pos:end="57:24">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <switch pos:start="59:5" pos:end="421:5">switch <condition pos:start="59:12" pos:end="59:24">(<expr pos:start="59:13" pos:end="59:23"><name pos:start="59:13" pos:end="59:23"><name pos:start="59:13" pos:end="59:15">pfl</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:23">wcycle</name></name></expr>)</condition> <block pos:start="59:26" pos:end="421:5">{<block_content pos:start="61:5" pos:end="419:25">

    <case pos:start="61:5" pos:end="61:11">case <expr pos:start="61:10" pos:end="61:10"><literal type="number" pos:start="61:10" pos:end="61:10">0</literal></expr>:</case>

        <comment type="block" pos:start="63:9" pos:end="63:32">/* We're in read mode */</comment>

    <label pos:start="65:5" pos:end="65:18"><name pos:start="65:5" pos:end="65:17">check_unlock0</name>:</label>

        <if_stmt pos:start="67:9" pos:end="79:9"><if pos:start="67:9" pos:end="79:9">if <condition pos:start="67:12" pos:end="67:40">(<expr pos:start="67:13" pos:end="67:39"><name pos:start="67:13" pos:end="67:16">boff</name> <operator pos:start="67:18" pos:end="67:19">==</operator> <literal type="number" pos:start="67:21" pos:end="67:24">0x55</literal> <operator pos:start="67:26" pos:end="67:27">&amp;&amp;</operator> <name pos:start="67:29" pos:end="67:31">cmd</name> <operator pos:start="67:33" pos:end="67:34">==</operator> <literal type="number" pos:start="67:36" pos:end="67:39">0x98</literal></expr>)</condition> <block pos:start="67:42" pos:end="79:9">{<block_content pos:start="69:9" pos:end="77:19">

        <label pos:start="69:9" pos:end="69:23"><name pos:start="69:9" pos:end="69:22">enter_CFI_mode</name>:</label>

            <comment type="block" pos:start="71:13" pos:end="71:38">/* Enter CFI query mode */</comment>

            <expr_stmt pos:start="73:13" pos:end="73:28"><expr pos:start="73:13" pos:end="73:27"><name pos:start="73:13" pos:end="73:23"><name pos:start="73:13" pos:end="73:15">pfl</name><operator pos:start="73:16" pos:end="73:17">-&gt;</operator><name pos:start="73:18" pos:end="73:23">wcycle</name></name> <operator pos:start="73:25" pos:end="73:25">=</operator> <literal type="number" pos:start="73:27" pos:end="73:27">7</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:28"><expr pos:start="75:13" pos:end="75:27"><name pos:start="75:13" pos:end="75:20"><name pos:start="75:13" pos:end="75:15">pfl</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:20">cmd</name></name> <operator pos:start="75:22" pos:end="75:22">=</operator> <literal type="number" pos:start="75:24" pos:end="75:27">0x98</literal></expr>;</expr_stmt>

            <return pos:start="77:13" pos:end="77:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="81:9" pos:end="89:9"><if pos:start="81:9" pos:end="89:9">if <condition pos:start="81:12" pos:end="81:41">(<expr pos:start="81:13" pos:end="81:40"><name pos:start="81:13" pos:end="81:16">boff</name> <operator pos:start="81:18" pos:end="81:19">!=</operator> <literal type="number" pos:start="81:21" pos:end="81:25">0x555</literal> <operator pos:start="81:27" pos:end="81:28">||</operator> <name pos:start="81:30" pos:end="81:32">cmd</name> <operator pos:start="81:34" pos:end="81:35">!=</operator> <literal type="number" pos:start="81:37" pos:end="81:40">0xAA</literal></expr>)</condition> <block pos:start="81:43" pos:end="89:9">{<block_content pos:start="83:13" pos:end="87:29">

            <expr_stmt pos:start="83:13" pos:end="85:48"><expr pos:start="83:13" pos:end="85:47"><call pos:start="83:13" pos:end="85:47"><name pos:start="83:13" pos:end="83:19">DPRINTF</name><argument_list pos:start="83:20" pos:end="85:47">(<argument pos:start="83:21" pos:end="83:70"><expr pos:start="83:21" pos:end="83:70"><literal type="string" pos:start="83:21" pos:end="83:41">"%s: unlock0 failed "</literal> <name pos:start="83:43" pos:end="83:55">TARGET_FMT_lx</name> <literal type="string" pos:start="83:57" pos:end="83:70">" %02x %04x\n"</literal></expr></argument>,

                    <argument pos:start="85:21" pos:end="85:28"><expr pos:start="85:21" pos:end="85:28"><name pos:start="85:21" pos:end="85:28">__func__</name></expr></argument>, <argument pos:start="85:31" pos:end="85:34"><expr pos:start="85:31" pos:end="85:34"><name pos:start="85:31" pos:end="85:34">boff</name></expr></argument>, <argument pos:start="85:37" pos:end="85:39"><expr pos:start="85:37" pos:end="85:39"><name pos:start="85:37" pos:end="85:39">cmd</name></expr></argument>, <argument pos:start="85:42" pos:end="85:46"><expr pos:start="85:42" pos:end="85:46"><literal type="number" pos:start="85:42" pos:end="85:46">0x555</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="87:13" pos:end="87:29">goto <name pos:start="87:18" pos:end="87:28">reset_flash</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:59"><expr pos:start="91:9" pos:end="91:58"><call pos:start="91:9" pos:end="91:58"><name pos:start="91:9" pos:end="91:15">DPRINTF</name><argument_list pos:start="91:16" pos:end="91:58">(<argument pos:start="91:17" pos:end="91:47"><expr pos:start="91:17" pos:end="91:47"><literal type="string" pos:start="91:17" pos:end="91:47">"%s: unlock sequence started\n"</literal></expr></argument>, <argument pos:start="91:50" pos:end="91:57"><expr pos:start="91:50" pos:end="91:57"><name pos:start="91:50" pos:end="91:57">__func__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="93:9" pos:end="93:14">break;</break>

    <case pos:start="95:5" pos:end="95:11">case <expr pos:start="95:10" pos:end="95:10"><literal type="number" pos:start="95:10" pos:end="95:10">1</literal></expr>:</case>

        <comment type="block" pos:start="97:9" pos:end="97:43">/* We started an unlock sequence */</comment>

    <label pos:start="99:5" pos:end="99:18"><name pos:start="99:5" pos:end="99:17">check_unlock1</name>:</label>

        <if_stmt pos:start="101:9" pos:end="109:9"><if pos:start="101:9" pos:end="109:9">if <condition pos:start="101:12" pos:end="101:41">(<expr pos:start="101:13" pos:end="101:40"><name pos:start="101:13" pos:end="101:16">boff</name> <operator pos:start="101:18" pos:end="101:19">!=</operator> <literal type="number" pos:start="101:21" pos:end="101:25">0x2AA</literal> <operator pos:start="101:27" pos:end="101:28">||</operator> <name pos:start="101:30" pos:end="101:32">cmd</name> <operator pos:start="101:34" pos:end="101:35">!=</operator> <literal type="number" pos:start="101:37" pos:end="101:40">0x55</literal></expr>)</condition> <block pos:start="101:43" pos:end="109:9">{<block_content pos:start="103:13" pos:end="107:29">

            <expr_stmt pos:start="103:13" pos:end="105:31"><expr pos:start="103:13" pos:end="105:30"><call pos:start="103:13" pos:end="105:30"><name pos:start="103:13" pos:end="103:19">DPRINTF</name><argument_list pos:start="103:20" pos:end="105:30">(<argument pos:start="103:21" pos:end="103:65"><expr pos:start="103:21" pos:end="103:65"><literal type="string" pos:start="103:21" pos:end="103:41">"%s: unlock1 failed "</literal> <name pos:start="103:43" pos:end="103:55">TARGET_FMT_lx</name> <literal type="string" pos:start="103:57" pos:end="103:65">" %02x\n"</literal></expr></argument>, <argument pos:start="103:68" pos:end="103:75"><expr pos:start="103:68" pos:end="103:75"><name pos:start="103:68" pos:end="103:75">__func__</name></expr></argument>,

                    <argument pos:start="105:21" pos:end="105:24"><expr pos:start="105:21" pos:end="105:24"><name pos:start="105:21" pos:end="105:24">boff</name></expr></argument>, <argument pos:start="105:27" pos:end="105:29"><expr pos:start="105:27" pos:end="105:29"><name pos:start="105:27" pos:end="105:29">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="107:13" pos:end="107:29">goto <name pos:start="107:18" pos:end="107:28">reset_flash</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:56"><expr pos:start="111:9" pos:end="111:55"><call pos:start="111:9" pos:end="111:55"><name pos:start="111:9" pos:end="111:15">DPRINTF</name><argument_list pos:start="111:16" pos:end="111:55">(<argument pos:start="111:17" pos:end="111:44"><expr pos:start="111:17" pos:end="111:44"><literal type="string" pos:start="111:17" pos:end="111:44">"%s: unlock sequence done\n"</literal></expr></argument>, <argument pos:start="111:47" pos:end="111:54"><expr pos:start="111:47" pos:end="111:54"><name pos:start="111:47" pos:end="111:54">__func__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="113:9" pos:end="113:14">break;</break>

    <case pos:start="115:5" pos:end="115:11">case <expr pos:start="115:10" pos:end="115:10"><literal type="number" pos:start="115:10" pos:end="115:10">2</literal></expr>:</case>

        <comment type="block" pos:start="117:9" pos:end="117:44">/* We finished an unlock sequence */</comment>

        <if_stmt pos:start="119:9" pos:end="127:9"><if pos:start="119:9" pos:end="127:9">if <condition pos:start="119:12" pos:end="119:42">(<expr pos:start="119:13" pos:end="119:41"><operator pos:start="119:13" pos:end="119:13">!</operator><name pos:start="119:14" pos:end="119:24"><name pos:start="119:14" pos:end="119:16">pfl</name><operator pos:start="119:17" pos:end="119:18">-&gt;</operator><name pos:start="119:19" pos:end="119:24">bypass</name></name> <operator pos:start="119:26" pos:end="119:27">&amp;&amp;</operator> <name pos:start="119:29" pos:end="119:32">boff</name> <operator pos:start="119:34" pos:end="119:35">!=</operator> <literal type="number" pos:start="119:37" pos:end="119:41">0x555</literal></expr>)</condition> <block pos:start="119:44" pos:end="127:9">{<block_content pos:start="121:13" pos:end="125:29">

            <expr_stmt pos:start="121:13" pos:end="123:31"><expr pos:start="121:13" pos:end="123:30"><call pos:start="121:13" pos:end="123:30"><name pos:start="121:13" pos:end="121:19">DPRINTF</name><argument_list pos:start="121:20" pos:end="123:30">(<argument pos:start="121:21" pos:end="121:65"><expr pos:start="121:21" pos:end="121:65"><literal type="string" pos:start="121:21" pos:end="121:41">"%s: command failed "</literal> <name pos:start="121:43" pos:end="121:55">TARGET_FMT_lx</name> <literal type="string" pos:start="121:57" pos:end="121:65">" %02x\n"</literal></expr></argument>, <argument pos:start="121:68" pos:end="121:75"><expr pos:start="121:68" pos:end="121:75"><name pos:start="121:68" pos:end="121:75">__func__</name></expr></argument>,

                    <argument pos:start="123:21" pos:end="123:24"><expr pos:start="123:21" pos:end="123:24"><name pos:start="123:21" pos:end="123:24">boff</name></expr></argument>, <argument pos:start="123:27" pos:end="123:29"><expr pos:start="123:27" pos:end="123:29"><name pos:start="123:27" pos:end="123:29">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="125:13" pos:end="125:29">goto <name pos:start="125:18" pos:end="125:28">reset_flash</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <switch pos:start="129:9" pos:end="155:9">switch <condition pos:start="129:16" pos:end="129:20">(<expr pos:start="129:17" pos:end="129:19"><name pos:start="129:17" pos:end="129:19">cmd</name></expr>)</condition> <block pos:start="129:22" pos:end="155:9">{<block_content pos:start="131:9" pos:end="153:29">

        <case pos:start="131:9" pos:end="131:18">case <expr pos:start="131:14" pos:end="131:17"><literal type="number" pos:start="131:14" pos:end="131:17">0x20</literal></expr>:</case>

            <expr_stmt pos:start="133:13" pos:end="133:28"><expr pos:start="133:13" pos:end="133:27"><name pos:start="133:13" pos:end="133:23"><name pos:start="133:13" pos:end="133:15">pfl</name><operator pos:start="133:16" pos:end="133:17">-&gt;</operator><name pos:start="133:18" pos:end="133:23">bypass</name></name> <operator pos:start="133:25" pos:end="133:25">=</operator> <literal type="number" pos:start="133:27" pos:end="133:27">1</literal></expr>;</expr_stmt>

            <goto pos:start="135:13" pos:end="135:27">goto <name pos:start="135:18" pos:end="135:26">do_bypass</name>;</goto>

        <case pos:start="137:9" pos:end="137:18">case <expr pos:start="137:14" pos:end="137:17"><literal type="number" pos:start="137:14" pos:end="137:17">0x80</literal></expr>:</case>

        <case pos:start="139:9" pos:end="139:18">case <expr pos:start="139:14" pos:end="139:17"><literal type="number" pos:start="139:14" pos:end="139:17">0x90</literal></expr>:</case>

        <case pos:start="141:9" pos:end="141:18">case <expr pos:start="141:14" pos:end="141:17"><literal type="number" pos:start="141:14" pos:end="141:17">0xA0</literal></expr>:</case>

            <expr_stmt pos:start="143:13" pos:end="143:27"><expr pos:start="143:13" pos:end="143:26"><name pos:start="143:13" pos:end="143:20"><name pos:start="143:13" pos:end="143:15">pfl</name><operator pos:start="143:16" pos:end="143:17">-&gt;</operator><name pos:start="143:18" pos:end="143:20">cmd</name></name> <operator pos:start="143:22" pos:end="143:22">=</operator> <name pos:start="143:24" pos:end="143:26">cmd</name></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:66"><expr pos:start="145:13" pos:end="145:65"><call pos:start="145:13" pos:end="145:65"><name pos:start="145:13" pos:end="145:19">DPRINTF</name><argument_list pos:start="145:20" pos:end="145:65">(<argument pos:start="145:21" pos:end="145:49"><expr pos:start="145:21" pos:end="145:49"><literal type="string" pos:start="145:21" pos:end="145:49">"%s: starting command %02x\n"</literal></expr></argument>, <argument pos:start="145:52" pos:end="145:59"><expr pos:start="145:52" pos:end="145:59"><name pos:start="145:52" pos:end="145:59">__func__</name></expr></argument>, <argument pos:start="145:62" pos:end="145:64"><expr pos:start="145:62" pos:end="145:64"><name pos:start="145:62" pos:end="145:64">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="147:13" pos:end="147:18">break;</break>

        <default pos:start="149:9" pos:end="149:16">default:</default>

            <expr_stmt pos:start="151:13" pos:end="151:65"><expr pos:start="151:13" pos:end="151:64"><call pos:start="151:13" pos:end="151:64"><name pos:start="151:13" pos:end="151:19">DPRINTF</name><argument_list pos:start="151:20" pos:end="151:64">(<argument pos:start="151:21" pos:end="151:48"><expr pos:start="151:21" pos:end="151:48"><literal type="string" pos:start="151:21" pos:end="151:48">"%s: unknown command %02x\n"</literal></expr></argument>, <argument pos:start="151:51" pos:end="151:58"><expr pos:start="151:51" pos:end="151:58"><name pos:start="151:51" pos:end="151:58">__func__</name></expr></argument>, <argument pos:start="151:61" pos:end="151:63"><expr pos:start="151:61" pos:end="151:63"><name pos:start="151:61" pos:end="151:63">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="153:13" pos:end="153:29">goto <name pos:start="153:18" pos:end="153:28">reset_flash</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="157:9" pos:end="157:14">break;</break>

    <case pos:start="159:5" pos:end="159:11">case <expr pos:start="159:10" pos:end="159:10"><literal type="number" pos:start="159:10" pos:end="159:10">3</literal></expr>:</case>

        <switch pos:start="161:9" pos:end="273:9">switch <condition pos:start="161:16" pos:end="161:25">(<expr pos:start="161:17" pos:end="161:24"><name pos:start="161:17" pos:end="161:24"><name pos:start="161:17" pos:end="161:19">pfl</name><operator pos:start="161:20" pos:end="161:21">-&gt;</operator><name pos:start="161:22" pos:end="161:24">cmd</name></name></expr>)</condition> <block pos:start="161:27" pos:end="273:9">{<block_content pos:start="163:9" pos:end="271:29">

        <case pos:start="163:9" pos:end="163:18">case <expr pos:start="163:14" pos:end="163:17"><literal type="number" pos:start="163:14" pos:end="163:17">0x80</literal></expr>:</case>

            <comment type="block" pos:start="165:13" pos:end="165:49">/* We need another unlock sequence */</comment>

            <goto pos:start="167:13" pos:end="167:31">goto <name pos:start="167:18" pos:end="167:30">check_unlock0</name>;</goto>

        <case pos:start="169:9" pos:end="169:18">case <expr pos:start="169:14" pos:end="169:17"><literal type="number" pos:start="169:14" pos:end="169:17">0xA0</literal></expr>:</case>

            <expr_stmt pos:start="171:13" pos:end="173:52"><expr pos:start="171:13" pos:end="173:51"><call pos:start="171:13" pos:end="173:51"><name pos:start="171:13" pos:end="171:19">DPRINTF</name><argument_list pos:start="171:20" pos:end="173:51">(<argument pos:start="171:21" pos:end="171:71"><expr pos:start="171:21" pos:end="171:71"><literal type="string" pos:start="171:21" pos:end="171:44">"%s: write data offset "</literal> <name pos:start="171:46" pos:end="171:58">TARGET_FMT_lx</name> <literal type="string" pos:start="171:60" pos:end="171:71">" %08x %d\n"</literal></expr></argument>,

                    <argument pos:start="173:21" pos:end="173:28"><expr pos:start="173:21" pos:end="173:28"><name pos:start="173:21" pos:end="173:28">__func__</name></expr></argument>, <argument pos:start="173:31" pos:end="173:36"><expr pos:start="173:31" pos:end="173:36"><name pos:start="173:31" pos:end="173:36">offset</name></expr></argument>, <argument pos:start="173:39" pos:end="173:43"><expr pos:start="173:39" pos:end="173:43"><name pos:start="173:39" pos:end="173:43">value</name></expr></argument>, <argument pos:start="173:46" pos:end="173:50"><expr pos:start="173:46" pos:end="173:50"><name pos:start="173:46" pos:end="173:50">width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="175:13" pos:end="175:29"><expr pos:start="175:13" pos:end="175:28"><name pos:start="175:13" pos:end="175:13">p</name> <operator pos:start="175:15" pos:end="175:15">=</operator> <name pos:start="175:17" pos:end="175:28"><name pos:start="175:17" pos:end="175:19">pfl</name><operator pos:start="175:20" pos:end="175:21">-&gt;</operator><name pos:start="175:22" pos:end="175:28">storage</name></name></expr>;</expr_stmt>

            <switch pos:start="177:13" pos:end="235:13">switch <condition pos:start="177:20" pos:end="177:26">(<expr pos:start="177:21" pos:end="177:25"><name pos:start="177:21" pos:end="177:25">width</name></expr>)</condition> <block pos:start="177:28" pos:end="235:13">{<block_content pos:start="179:13" pos:end="233:22">

            <case pos:start="179:13" pos:end="179:19">case <expr pos:start="179:18" pos:end="179:18"><literal type="number" pos:start="179:18" pos:end="179:18">1</literal></expr>:</case>

                <expr_stmt pos:start="181:17" pos:end="181:35"><expr pos:start="181:17" pos:end="181:34"><name pos:start="181:17" pos:end="181:25"><name pos:start="181:17" pos:end="181:17">p</name><index pos:start="181:18" pos:end="181:25">[<expr pos:start="181:19" pos:end="181:24"><name pos:start="181:19" pos:end="181:24">offset</name></expr>]</index></name> <operator pos:start="181:27" pos:end="181:28">&amp;=</operator> <name pos:start="181:30" pos:end="181:34">value</name></expr>;</expr_stmt>

                <expr_stmt pos:start="183:17" pos:end="183:46"><expr pos:start="183:17" pos:end="183:45"><call pos:start="183:17" pos:end="183:45"><name pos:start="183:17" pos:end="183:29">pflash_update</name><argument_list pos:start="183:30" pos:end="183:45">(<argument pos:start="183:31" pos:end="183:33"><expr pos:start="183:31" pos:end="183:33"><name pos:start="183:31" pos:end="183:33">pfl</name></expr></argument>, <argument pos:start="183:36" pos:end="183:41"><expr pos:start="183:36" pos:end="183:41"><name pos:start="183:36" pos:end="183:41">offset</name></expr></argument>, <argument pos:start="183:44" pos:end="183:44"><expr pos:start="183:44" pos:end="183:44"><literal type="number" pos:start="183:44" pos:end="183:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="185:17" pos:end="185:22">break;</break>

            <case pos:start="187:13" pos:end="190:0">case <expr pos:start="187:18" pos:end="187:18"><literal type="number" pos:start="187:18" pos:end="187:18">2</literal></expr>:</case>

<cpp:if pos:start="189:1" pos:end="189:35">#<cpp:directive pos:start="189:2" pos:end="189:3">if</cpp:directive> <expr pos:start="189:5" pos:end="189:35"><call pos:start="189:5" pos:end="189:35"><name pos:start="189:5" pos:end="189:11">defined</name><argument_list pos:start="189:12" pos:end="189:35">(<argument pos:start="189:13" pos:end="189:34"><expr pos:start="189:13" pos:end="189:34"><name pos:start="189:13" pos:end="189:34">TARGET_WORDS_BIGENDIAN</name></expr></argument>)</argument_list></call></expr></cpp:if>

                <expr_stmt pos:start="191:17" pos:end="191:40"><expr pos:start="191:17" pos:end="191:39"><name pos:start="191:17" pos:end="191:25"><name pos:start="191:17" pos:end="191:17">p</name><index pos:start="191:18" pos:end="191:25">[<expr pos:start="191:19" pos:end="191:24"><name pos:start="191:19" pos:end="191:24">offset</name></expr>]</index></name> <operator pos:start="191:27" pos:end="191:28">&amp;=</operator> <name pos:start="191:30" pos:end="191:34">value</name> <operator pos:start="191:36" pos:end="191:37">&gt;&gt;</operator> <literal type="number" pos:start="191:39" pos:end="191:39">8</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="193:17" pos:end="196:0"><expr pos:start="193:17" pos:end="193:38"><name pos:start="193:17" pos:end="193:29"><name pos:start="193:17" pos:end="193:17">p</name><index pos:start="193:18" pos:end="193:29">[<expr pos:start="193:19" pos:end="193:28"><name pos:start="193:19" pos:end="193:24">offset</name> <operator pos:start="193:26" pos:end="193:26">+</operator> <literal type="number" pos:start="193:28" pos:end="193:28">1</literal></expr>]</index></name> <operator pos:start="193:31" pos:end="193:32">&amp;=</operator> <name pos:start="193:34" pos:end="193:38">value</name></expr>;</expr_stmt>

<cpp:else pos:start="195:1" pos:end="195:5">#<cpp:directive pos:start="195:2" pos:end="195:5">else</cpp:directive></cpp:else>

                <expr_stmt pos:start="197:17" pos:end="197:35"><expr pos:start="197:17" pos:end="197:34"><name pos:start="197:17" pos:end="197:25"><name pos:start="197:17" pos:end="197:17">p</name><index pos:start="197:18" pos:end="197:25">[<expr pos:start="197:19" pos:end="197:24"><name pos:start="197:19" pos:end="197:24">offset</name></expr>]</index></name> <operator pos:start="197:27" pos:end="197:28">&amp;=</operator> <name pos:start="197:30" pos:end="197:34">value</name></expr>;</expr_stmt>

                <expr_stmt pos:start="199:17" pos:end="202:0"><expr pos:start="199:17" pos:end="199:43"><name pos:start="199:17" pos:end="199:29"><name pos:start="199:17" pos:end="199:17">p</name><index pos:start="199:18" pos:end="199:29">[<expr pos:start="199:19" pos:end="199:28"><name pos:start="199:19" pos:end="199:24">offset</name> <operator pos:start="199:26" pos:end="199:26">+</operator> <literal type="number" pos:start="199:28" pos:end="199:28">1</literal></expr>]</index></name> <operator pos:start="199:31" pos:end="199:32">&amp;=</operator> <name pos:start="199:34" pos:end="199:38">value</name> <operator pos:start="199:40" pos:end="199:41">&gt;&gt;</operator> <literal type="number" pos:start="199:43" pos:end="199:43">8</literal></expr>;</expr_stmt>

<cpp:endif pos:start="201:1" pos:end="201:6">#<cpp:directive pos:start="201:2" pos:end="201:6">endif</cpp:directive></cpp:endif>

                <expr_stmt pos:start="203:17" pos:end="203:46"><expr pos:start="203:17" pos:end="203:45"><call pos:start="203:17" pos:end="203:45"><name pos:start="203:17" pos:end="203:29">pflash_update</name><argument_list pos:start="203:30" pos:end="203:45">(<argument pos:start="203:31" pos:end="203:33"><expr pos:start="203:31" pos:end="203:33"><name pos:start="203:31" pos:end="203:33">pfl</name></expr></argument>, <argument pos:start="203:36" pos:end="203:41"><expr pos:start="203:36" pos:end="203:41"><name pos:start="203:36" pos:end="203:41">offset</name></expr></argument>, <argument pos:start="203:44" pos:end="203:44"><expr pos:start="203:44" pos:end="203:44"><literal type="number" pos:start="203:44" pos:end="203:44">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="205:17" pos:end="205:22">break;</break>

            <case pos:start="207:13" pos:end="210:0">case <expr pos:start="207:18" pos:end="207:18"><literal type="number" pos:start="207:18" pos:end="207:18">4</literal></expr>:</case>

<cpp:if pos:start="209:1" pos:end="209:35">#<cpp:directive pos:start="209:2" pos:end="209:3">if</cpp:directive> <expr pos:start="209:5" pos:end="209:35"><call pos:start="209:5" pos:end="209:35"><name pos:start="209:5" pos:end="209:11">defined</name><argument_list pos:start="209:12" pos:end="209:35">(<argument pos:start="209:13" pos:end="209:34"><expr pos:start="209:13" pos:end="209:34"><name pos:start="209:13" pos:end="209:34">TARGET_WORDS_BIGENDIAN</name></expr></argument>)</argument_list></call></expr></cpp:if>

                <expr_stmt pos:start="211:17" pos:end="211:41"><expr pos:start="211:17" pos:end="211:40"><name pos:start="211:17" pos:end="211:25"><name pos:start="211:17" pos:end="211:17">p</name><index pos:start="211:18" pos:end="211:25">[<expr pos:start="211:19" pos:end="211:24"><name pos:start="211:19" pos:end="211:24">offset</name></expr>]</index></name> <operator pos:start="211:27" pos:end="211:28">&amp;=</operator> <name pos:start="211:30" pos:end="211:34">value</name> <operator pos:start="211:36" pos:end="211:37">&gt;&gt;</operator> <literal type="number" pos:start="211:39" pos:end="211:40">24</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="213:17" pos:end="213:45"><expr pos:start="213:17" pos:end="213:44"><name pos:start="213:17" pos:end="213:29"><name pos:start="213:17" pos:end="213:17">p</name><index pos:start="213:18" pos:end="213:29">[<expr pos:start="213:19" pos:end="213:28"><name pos:start="213:19" pos:end="213:24">offset</name> <operator pos:start="213:26" pos:end="213:26">+</operator> <literal type="number" pos:start="213:28" pos:end="213:28">1</literal></expr>]</index></name> <operator pos:start="213:31" pos:end="213:32">&amp;=</operator> <name pos:start="213:34" pos:end="213:38">value</name> <operator pos:start="213:40" pos:end="213:41">&gt;&gt;</operator> <literal type="number" pos:start="213:43" pos:end="213:44">16</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="215:17" pos:end="215:44"><expr pos:start="215:17" pos:end="215:43"><name pos:start="215:17" pos:end="215:29"><name pos:start="215:17" pos:end="215:17">p</name><index pos:start="215:18" pos:end="215:29">[<expr pos:start="215:19" pos:end="215:28"><name pos:start="215:19" pos:end="215:24">offset</name> <operator pos:start="215:26" pos:end="215:26">+</operator> <literal type="number" pos:start="215:28" pos:end="215:28">2</literal></expr>]</index></name> <operator pos:start="215:31" pos:end="215:32">&amp;=</operator> <name pos:start="215:34" pos:end="215:38">value</name> <operator pos:start="215:40" pos:end="215:41">&gt;&gt;</operator> <literal type="number" pos:start="215:43" pos:end="215:43">8</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="217:17" pos:end="220:0"><expr pos:start="217:17" pos:end="217:38"><name pos:start="217:17" pos:end="217:29"><name pos:start="217:17" pos:end="217:17">p</name><index pos:start="217:18" pos:end="217:29">[<expr pos:start="217:19" pos:end="217:28"><name pos:start="217:19" pos:end="217:24">offset</name> <operator pos:start="217:26" pos:end="217:26">+</operator> <literal type="number" pos:start="217:28" pos:end="217:28">3</literal></expr>]</index></name> <operator pos:start="217:31" pos:end="217:32">&amp;=</operator> <name pos:start="217:34" pos:end="217:38">value</name></expr>;</expr_stmt>

<cpp:else pos:start="219:1" pos:end="219:5">#<cpp:directive pos:start="219:2" pos:end="219:5">else</cpp:directive></cpp:else>

                <expr_stmt pos:start="221:17" pos:end="221:35"><expr pos:start="221:17" pos:end="221:34"><name pos:start="221:17" pos:end="221:25"><name pos:start="221:17" pos:end="221:17">p</name><index pos:start="221:18" pos:end="221:25">[<expr pos:start="221:19" pos:end="221:24"><name pos:start="221:19" pos:end="221:24">offset</name></expr>]</index></name> <operator pos:start="221:27" pos:end="221:28">&amp;=</operator> <name pos:start="221:30" pos:end="221:34">value</name></expr>;</expr_stmt>

                <expr_stmt pos:start="223:17" pos:end="223:44"><expr pos:start="223:17" pos:end="223:43"><name pos:start="223:17" pos:end="223:29"><name pos:start="223:17" pos:end="223:17">p</name><index pos:start="223:18" pos:end="223:29">[<expr pos:start="223:19" pos:end="223:28"><name pos:start="223:19" pos:end="223:24">offset</name> <operator pos:start="223:26" pos:end="223:26">+</operator> <literal type="number" pos:start="223:28" pos:end="223:28">1</literal></expr>]</index></name> <operator pos:start="223:31" pos:end="223:32">&amp;=</operator> <name pos:start="223:34" pos:end="223:38">value</name> <operator pos:start="223:40" pos:end="223:41">&gt;&gt;</operator> <literal type="number" pos:start="223:43" pos:end="223:43">8</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="225:17" pos:end="225:45"><expr pos:start="225:17" pos:end="225:44"><name pos:start="225:17" pos:end="225:29"><name pos:start="225:17" pos:end="225:17">p</name><index pos:start="225:18" pos:end="225:29">[<expr pos:start="225:19" pos:end="225:28"><name pos:start="225:19" pos:end="225:24">offset</name> <operator pos:start="225:26" pos:end="225:26">+</operator> <literal type="number" pos:start="225:28" pos:end="225:28">2</literal></expr>]</index></name> <operator pos:start="225:31" pos:end="225:32">&amp;=</operator> <name pos:start="225:34" pos:end="225:38">value</name> <operator pos:start="225:40" pos:end="225:41">&gt;&gt;</operator> <literal type="number" pos:start="225:43" pos:end="225:44">16</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="227:17" pos:end="230:0"><expr pos:start="227:17" pos:end="227:44"><name pos:start="227:17" pos:end="227:29"><name pos:start="227:17" pos:end="227:17">p</name><index pos:start="227:18" pos:end="227:29">[<expr pos:start="227:19" pos:end="227:28"><name pos:start="227:19" pos:end="227:24">offset</name> <operator pos:start="227:26" pos:end="227:26">+</operator> <literal type="number" pos:start="227:28" pos:end="227:28">3</literal></expr>]</index></name> <operator pos:start="227:31" pos:end="227:32">&amp;=</operator> <name pos:start="227:34" pos:end="227:38">value</name> <operator pos:start="227:40" pos:end="227:41">&gt;&gt;</operator> <literal type="number" pos:start="227:43" pos:end="227:44">24</literal></expr>;</expr_stmt>

<cpp:endif pos:start="229:1" pos:end="229:6">#<cpp:directive pos:start="229:2" pos:end="229:6">endif</cpp:directive></cpp:endif>

                <expr_stmt pos:start="231:17" pos:end="231:46"><expr pos:start="231:17" pos:end="231:45"><call pos:start="231:17" pos:end="231:45"><name pos:start="231:17" pos:end="231:29">pflash_update</name><argument_list pos:start="231:30" pos:end="231:45">(<argument pos:start="231:31" pos:end="231:33"><expr pos:start="231:31" pos:end="231:33"><name pos:start="231:31" pos:end="231:33">pfl</name></expr></argument>, <argument pos:start="231:36" pos:end="231:41"><expr pos:start="231:36" pos:end="231:41"><name pos:start="231:36" pos:end="231:41">offset</name></expr></argument>, <argument pos:start="231:44" pos:end="231:44"><expr pos:start="231:44" pos:end="231:44"><literal type="number" pos:start="231:44" pos:end="231:44">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="233:17" pos:end="233:22">break;</break>

            </block_content>}</block></switch>

            <expr_stmt pos:start="237:13" pos:end="237:49"><expr pos:start="237:13" pos:end="237:48"><name pos:start="237:13" pos:end="237:23"><name pos:start="237:13" pos:end="237:15">pfl</name><operator pos:start="237:16" pos:end="237:17">-&gt;</operator><name pos:start="237:18" pos:end="237:23">status</name></name> <operator pos:start="237:25" pos:end="237:25">=</operator> <literal type="number" pos:start="237:27" pos:end="237:30">0x00</literal> <operator pos:start="237:32" pos:end="237:32">|</operator> <operator pos:start="237:34" pos:end="237:34">~</operator><operator pos:start="237:35" pos:end="237:35">(</operator><name pos:start="237:36" pos:end="237:40">value</name> <operator pos:start="237:42" pos:end="237:42">&amp;</operator> <literal type="number" pos:start="237:44" pos:end="237:47">0x80</literal><operator pos:start="237:48" pos:end="237:48">)</operator></expr>;</expr_stmt>

            <comment type="block" pos:start="239:13" pos:end="239:50">/* Let's pretend write is immediate */</comment>

            <if_stmt pos:start="241:13" pos:end="243:31"><if pos:start="241:13" pos:end="243:31">if <condition pos:start="241:16" pos:end="241:28">(<expr pos:start="241:17" pos:end="241:27"><name pos:start="241:17" pos:end="241:27"><name pos:start="241:17" pos:end="241:19">pfl</name><operator pos:start="241:20" pos:end="241:21">-&gt;</operator><name pos:start="241:22" pos:end="241:27">bypass</name></name></expr>)</condition><block type="pseudo" pos:start="243:17" pos:end="243:31"><block_content pos:start="243:17" pos:end="243:31">

                <goto pos:start="243:17" pos:end="243:31">goto <name pos:start="243:22" pos:end="243:30">do_bypass</name>;</goto></block_content></block></if></if_stmt>

            <goto pos:start="245:13" pos:end="245:29">goto <name pos:start="245:18" pos:end="245:28">reset_flash</name>;</goto>

        <case pos:start="247:9" pos:end="247:18">case <expr pos:start="247:14" pos:end="247:17"><literal type="number" pos:start="247:14" pos:end="247:17">0x90</literal></expr>:</case>

            <if_stmt pos:start="249:13" pos:end="255:13"><if pos:start="249:13" pos:end="255:13">if <condition pos:start="249:16" pos:end="249:43">(<expr pos:start="249:17" pos:end="249:42"><name pos:start="249:17" pos:end="249:27"><name pos:start="249:17" pos:end="249:19">pfl</name><operator pos:start="249:20" pos:end="249:21">-&gt;</operator><name pos:start="249:22" pos:end="249:27">bypass</name></name> <operator pos:start="249:29" pos:end="249:30">&amp;&amp;</operator> <name pos:start="249:32" pos:end="249:34">cmd</name> <operator pos:start="249:36" pos:end="249:37">==</operator> <literal type="number" pos:start="249:39" pos:end="249:42">0x00</literal></expr>)</condition> <block pos:start="249:45" pos:end="255:13">{<block_content pos:start="253:17" pos:end="253:33">

                <comment type="block" pos:start="251:17" pos:end="251:41">/* Unlock bypass reset */</comment>

                <goto pos:start="253:17" pos:end="253:33">goto <name pos:start="253:22" pos:end="253:32">reset_flash</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="257:13" pos:end="257:66">/* We can enter CFI query mode from autoselect mode */</comment>

            <if_stmt pos:start="259:13" pos:end="261:36"><if pos:start="259:13" pos:end="261:36">if <condition pos:start="259:16" pos:end="259:44">(<expr pos:start="259:17" pos:end="259:43"><name pos:start="259:17" pos:end="259:20">boff</name> <operator pos:start="259:22" pos:end="259:23">==</operator> <literal type="number" pos:start="259:25" pos:end="259:28">0x55</literal> <operator pos:start="259:30" pos:end="259:31">&amp;&amp;</operator> <name pos:start="259:33" pos:end="259:35">cmd</name> <operator pos:start="259:37" pos:end="259:38">==</operator> <literal type="number" pos:start="259:40" pos:end="259:43">0x98</literal></expr>)</condition><block type="pseudo" pos:start="261:17" pos:end="261:36"><block_content pos:start="261:17" pos:end="261:36">

                <goto pos:start="261:17" pos:end="261:36">goto <name pos:start="261:22" pos:end="261:35">enter_CFI_mode</name>;</goto></block_content></block></if></if_stmt>

            <comment type="block" pos:start="263:13" pos:end="263:31">/* No break here */</comment>

        <default pos:start="265:9" pos:end="265:16">default:</default>

            <expr_stmt pos:start="267:13" pos:end="269:40"><expr pos:start="267:13" pos:end="269:39"><call pos:start="267:13" pos:end="269:39"><name pos:start="267:13" pos:end="267:19">DPRINTF</name><argument_list pos:start="267:20" pos:end="269:39">(<argument pos:start="267:21" pos:end="267:58"><expr pos:start="267:21" pos:end="267:58"><literal type="string" pos:start="267:21" pos:end="267:58">"%s: invalid write for command %02x\n"</literal></expr></argument>,

                    <argument pos:start="269:21" pos:end="269:28"><expr pos:start="269:21" pos:end="269:28"><name pos:start="269:21" pos:end="269:28">__func__</name></expr></argument>, <argument pos:start="269:31" pos:end="269:38"><expr pos:start="269:31" pos:end="269:38"><name pos:start="269:31" pos:end="269:38"><name pos:start="269:31" pos:end="269:33">pfl</name><operator pos:start="269:34" pos:end="269:35">-&gt;</operator><name pos:start="269:36" pos:end="269:38">cmd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="271:13" pos:end="271:29">goto <name pos:start="271:18" pos:end="271:28">reset_flash</name>;</goto>

        </block_content>}</block></switch>

    <case pos:start="275:5" pos:end="275:11">case <expr pos:start="275:10" pos:end="275:10"><literal type="number" pos:start="275:10" pos:end="275:10">4</literal></expr>:</case>

        <switch pos:start="277:9" pos:end="301:9">switch <condition pos:start="277:16" pos:end="277:25">(<expr pos:start="277:17" pos:end="277:24"><name pos:start="277:17" pos:end="277:24"><name pos:start="277:17" pos:end="277:19">pfl</name><operator pos:start="277:20" pos:end="277:21">-&gt;</operator><name pos:start="277:22" pos:end="277:24">cmd</name></name></expr>)</condition> <block pos:start="277:27" pos:end="301:9">{<block_content pos:start="279:9" pos:end="299:29">

        <case pos:start="279:9" pos:end="279:18">case <expr pos:start="279:14" pos:end="279:17"><literal type="number" pos:start="279:14" pos:end="279:17">0xA0</literal></expr>:</case>

            <comment type="block" pos:start="281:13" pos:end="281:66">/* Ignore writes while flash data write is occuring */</comment>

            <comment type="block" pos:start="283:13" pos:end="283:76">/* As we suppose write is immediate, this should never happen */</comment>

            <return pos:start="285:13" pos:end="285:19">return;</return>

        <case pos:start="287:9" pos:end="287:18">case <expr pos:start="287:14" pos:end="287:17"><literal type="number" pos:start="287:14" pos:end="287:17">0x80</literal></expr>:</case>

            <goto pos:start="289:13" pos:end="289:31">goto <name pos:start="289:18" pos:end="289:30">check_unlock1</name>;</goto>

        <default pos:start="291:9" pos:end="291:16">default:</default>

            <comment type="block" pos:start="293:13" pos:end="293:37">/* Should never happen */</comment>

            <expr_stmt pos:start="295:13" pos:end="297:40"><expr pos:start="295:13" pos:end="297:39"><call pos:start="295:13" pos:end="297:39"><name pos:start="295:13" pos:end="295:19">DPRINTF</name><argument_list pos:start="295:20" pos:end="297:39">(<argument pos:start="295:21" pos:end="295:61"><expr pos:start="295:21" pos:end="295:61"><literal type="string" pos:start="295:21" pos:end="295:61">"%s: invalid command state %02x (wc 4)\n"</literal></expr></argument>,

                    <argument pos:start="297:21" pos:end="297:28"><expr pos:start="297:21" pos:end="297:28"><name pos:start="297:21" pos:end="297:28">__func__</name></expr></argument>, <argument pos:start="297:31" pos:end="297:38"><expr pos:start="297:31" pos:end="297:38"><name pos:start="297:31" pos:end="297:38"><name pos:start="297:31" pos:end="297:33">pfl</name><operator pos:start="297:34" pos:end="297:35">-&gt;</operator><name pos:start="297:36" pos:end="297:38">cmd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="299:13" pos:end="299:29">goto <name pos:start="299:18" pos:end="299:28">reset_flash</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="303:9" pos:end="303:14">break;</break>

    <case pos:start="305:5" pos:end="305:11">case <expr pos:start="305:10" pos:end="305:10"><literal type="number" pos:start="305:10" pos:end="305:10">5</literal></expr>:</case>

        <switch pos:start="307:9" pos:end="371:9">switch <condition pos:start="307:16" pos:end="307:20">(<expr pos:start="307:17" pos:end="307:19"><name pos:start="307:17" pos:end="307:19">cmd</name></expr>)</condition> <block pos:start="307:22" pos:end="371:9">{<block_content pos:start="309:9" pos:end="369:29">

        <case pos:start="309:9" pos:end="309:18">case <expr pos:start="309:14" pos:end="309:17"><literal type="number" pos:start="309:14" pos:end="309:17">0x10</literal></expr>:</case>

            <if_stmt pos:start="311:13" pos:end="319:13"><if pos:start="311:13" pos:end="319:13">if <condition pos:start="311:16" pos:end="311:30">(<expr pos:start="311:17" pos:end="311:29"><name pos:start="311:17" pos:end="311:20">boff</name> <operator pos:start="311:22" pos:end="311:23">!=</operator> <literal type="number" pos:start="311:25" pos:end="311:29">0x555</literal></expr>)</condition> <block pos:start="311:32" pos:end="319:13">{<block_content pos:start="313:17" pos:end="317:33">

                <expr_stmt pos:start="313:17" pos:end="315:42"><expr pos:start="313:17" pos:end="315:41"><call pos:start="313:17" pos:end="315:41"><name pos:start="313:17" pos:end="313:23">DPRINTF</name><argument_list pos:start="313:24" pos:end="315:41">(<argument pos:start="313:25" pos:end="313:77"><expr pos:start="313:25" pos:end="313:77"><literal type="string" pos:start="313:25" pos:end="313:58">"%s: chip erase: invalid address "</literal> <name pos:start="313:60" pos:end="313:72">TARGET_FMT_lx</name> <literal type="string" pos:start="313:74" pos:end="313:77">"\n"</literal></expr></argument>,

                        <argument pos:start="315:25" pos:end="315:32"><expr pos:start="315:25" pos:end="315:32"><name pos:start="315:25" pos:end="315:32">__func__</name></expr></argument>, <argument pos:start="315:35" pos:end="315:40"><expr pos:start="315:35" pos:end="315:40"><name pos:start="315:35" pos:end="315:40">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="317:17" pos:end="317:33">goto <name pos:start="317:22" pos:end="317:32">reset_flash</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="321:13" pos:end="321:28">/* Chip erase */</comment>

            <expr_stmt pos:start="323:13" pos:end="323:56"><expr pos:start="323:13" pos:end="323:55"><call pos:start="323:13" pos:end="323:55"><name pos:start="323:13" pos:end="323:19">DPRINTF</name><argument_list pos:start="323:20" pos:end="323:55">(<argument pos:start="323:21" pos:end="323:44"><expr pos:start="323:21" pos:end="323:44"><literal type="string" pos:start="323:21" pos:end="323:44">"%s: start chip erase\n"</literal></expr></argument>, <argument pos:start="323:47" pos:end="323:54"><expr pos:start="323:47" pos:end="323:54"><name pos:start="323:47" pos:end="323:54">__func__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="325:13" pos:end="325:55"><expr pos:start="325:13" pos:end="325:54"><call pos:start="325:13" pos:end="325:54"><name pos:start="325:13" pos:end="325:18">memset</name><argument_list pos:start="325:19" pos:end="325:54">(<argument pos:start="325:20" pos:end="325:31"><expr pos:start="325:20" pos:end="325:31"><name pos:start="325:20" pos:end="325:31"><name pos:start="325:20" pos:end="325:22">pfl</name><operator pos:start="325:23" pos:end="325:24">-&gt;</operator><name pos:start="325:25" pos:end="325:31">storage</name></name></expr></argument>, <argument pos:start="325:34" pos:end="325:37"><expr pos:start="325:34" pos:end="325:37"><literal type="number" pos:start="325:34" pos:end="325:37">0xFF</literal></expr></argument>, <argument pos:start="325:40" pos:end="325:53"><expr pos:start="325:40" pos:end="325:53"><name pos:start="325:40" pos:end="325:53"><name pos:start="325:40" pos:end="325:42">pfl</name><operator pos:start="325:43" pos:end="325:44">-&gt;</operator><name pos:start="325:45" pos:end="325:53">total_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="327:13" pos:end="327:31"><expr pos:start="327:13" pos:end="327:30"><name pos:start="327:13" pos:end="327:23"><name pos:start="327:13" pos:end="327:15">pfl</name><operator pos:start="327:16" pos:end="327:17">-&gt;</operator><name pos:start="327:18" pos:end="327:23">status</name></name> <operator pos:start="327:25" pos:end="327:25">=</operator> <literal type="number" pos:start="327:27" pos:end="327:30">0x00</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="329:13" pos:end="329:50"><expr pos:start="329:13" pos:end="329:49"><call pos:start="329:13" pos:end="329:49"><name pos:start="329:13" pos:end="329:25">pflash_update</name><argument_list pos:start="329:26" pos:end="329:49">(<argument pos:start="329:27" pos:end="329:29"><expr pos:start="329:27" pos:end="329:29"><name pos:start="329:27" pos:end="329:29">pfl</name></expr></argument>, <argument pos:start="329:32" pos:end="329:32"><expr pos:start="329:32" pos:end="329:32"><literal type="number" pos:start="329:32" pos:end="329:32">0</literal></expr></argument>, <argument pos:start="329:35" pos:end="329:48"><expr pos:start="329:35" pos:end="329:48"><name pos:start="329:35" pos:end="329:48"><name pos:start="329:35" pos:end="329:37">pfl</name><operator pos:start="329:38" pos:end="329:39">-&gt;</operator><name pos:start="329:40" pos:end="329:48">total_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="331:13" pos:end="331:64">/* Let's wait 5 seconds before chip erase is done */</comment>

            <expr_stmt pos:start="333:13" pos:end="335:75"><expr pos:start="333:13" pos:end="335:74"><call pos:start="333:13" pos:end="335:74"><name pos:start="333:13" pos:end="333:26">qemu_mod_timer</name><argument_list pos:start="333:27" pos:end="335:74">(<argument pos:start="333:28" pos:end="333:37"><expr pos:start="333:28" pos:end="333:37"><name pos:start="333:28" pos:end="333:37"><name pos:start="333:28" pos:end="333:30">pfl</name><operator pos:start="333:31" pos:end="333:32">-&gt;</operator><name pos:start="333:33" pos:end="333:37">timer</name></name></expr></argument>, 

                           <argument pos:start="335:28" pos:end="335:73"><expr pos:start="335:28" pos:end="335:73"><call pos:start="335:28" pos:end="335:51"><name pos:start="335:28" pos:end="335:41">qemu_get_clock</name><argument_list pos:start="335:42" pos:end="335:51">(<argument pos:start="335:43" pos:end="335:50"><expr pos:start="335:43" pos:end="335:50"><name pos:start="335:43" pos:end="335:50">vm_clock</name></expr></argument>)</argument_list></call> <operator pos:start="335:53" pos:end="335:53">+</operator> <operator pos:start="335:55" pos:end="335:55">(</operator><name pos:start="335:56" pos:end="335:68">ticks_per_sec</name> <operator pos:start="335:70" pos:end="335:70">*</operator> <literal type="number" pos:start="335:72" pos:end="335:72">5</literal><operator pos:start="335:73" pos:end="335:73">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="337:13" pos:end="337:18">break;</break>

        <case pos:start="339:9" pos:end="339:18">case <expr pos:start="339:14" pos:end="339:17"><literal type="number" pos:start="339:14" pos:end="339:17">0x30</literal></expr>:</case>

            <comment type="block" pos:start="341:13" pos:end="341:30">/* Sector erase */</comment>

            <expr_stmt pos:start="343:13" pos:end="343:29"><expr pos:start="343:13" pos:end="343:28"><name pos:start="343:13" pos:end="343:13">p</name> <operator pos:start="343:15" pos:end="343:15">=</operator> <name pos:start="343:17" pos:end="343:28"><name pos:start="343:17" pos:end="343:19">pfl</name><operator pos:start="343:20" pos:end="343:21">-&gt;</operator><name pos:start="343:22" pos:end="343:28">storage</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="345:13" pos:end="345:45"><expr pos:start="345:13" pos:end="345:44"><name pos:start="345:13" pos:end="345:18">offset</name> <operator pos:start="345:20" pos:end="345:21">&amp;=</operator> <operator pos:start="345:23" pos:end="345:23">~</operator><operator pos:start="345:24" pos:end="345:24">(</operator><name pos:start="345:25" pos:end="345:39"><name pos:start="345:25" pos:end="345:27">pfl</name><operator pos:start="345:28" pos:end="345:29">-&gt;</operator><name pos:start="345:30" pos:end="345:39">sector_len</name></name> <operator pos:start="345:41" pos:end="345:41">-</operator> <literal type="number" pos:start="345:43" pos:end="345:43">1</literal><operator pos:start="345:44" pos:end="345:44">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="347:13" pos:end="349:28"><expr pos:start="347:13" pos:end="349:27"><call pos:start="347:13" pos:end="349:27"><name pos:start="347:13" pos:end="347:19">DPRINTF</name><argument_list pos:start="347:20" pos:end="349:27">(<argument pos:start="347:21" pos:end="347:67"><expr pos:start="347:21" pos:end="347:67"><literal type="string" pos:start="347:21" pos:end="347:48">"%s: start sector erase at "</literal> <name pos:start="347:50" pos:end="347:62">TARGET_FMT_lx</name> <literal type="string" pos:start="347:64" pos:end="347:67">"\n"</literal></expr></argument>, <argument pos:start="347:70" pos:end="347:77"><expr pos:start="347:70" pos:end="347:77"><name pos:start="347:70" pos:end="347:77">__func__</name></expr></argument>,

                    <argument pos:start="349:21" pos:end="349:26"><expr pos:start="349:21" pos:end="349:26"><name pos:start="349:21" pos:end="349:26">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="351:13" pos:end="351:54"><expr pos:start="351:13" pos:end="351:53"><call pos:start="351:13" pos:end="351:53"><name pos:start="351:13" pos:end="351:18">memset</name><argument_list pos:start="351:19" pos:end="351:53">(<argument pos:start="351:20" pos:end="351:29"><expr pos:start="351:20" pos:end="351:29"><name pos:start="351:20" pos:end="351:20">p</name> <operator pos:start="351:22" pos:end="351:22">+</operator> <name pos:start="351:24" pos:end="351:29">offset</name></expr></argument>, <argument pos:start="351:32" pos:end="351:35"><expr pos:start="351:32" pos:end="351:35"><literal type="number" pos:start="351:32" pos:end="351:35">0xFF</literal></expr></argument>, <argument pos:start="351:38" pos:end="351:52"><expr pos:start="351:38" pos:end="351:52"><name pos:start="351:38" pos:end="351:52"><name pos:start="351:38" pos:end="351:40">pfl</name><operator pos:start="351:41" pos:end="351:42">-&gt;</operator><name pos:start="351:43" pos:end="351:52">sector_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="353:13" pos:end="353:56"><expr pos:start="353:13" pos:end="353:55"><call pos:start="353:13" pos:end="353:55"><name pos:start="353:13" pos:end="353:25">pflash_update</name><argument_list pos:start="353:26" pos:end="353:55">(<argument pos:start="353:27" pos:end="353:29"><expr pos:start="353:27" pos:end="353:29"><name pos:start="353:27" pos:end="353:29">pfl</name></expr></argument>, <argument pos:start="353:32" pos:end="353:37"><expr pos:start="353:32" pos:end="353:37"><name pos:start="353:32" pos:end="353:37">offset</name></expr></argument>, <argument pos:start="353:40" pos:end="353:54"><expr pos:start="353:40" pos:end="353:54"><name pos:start="353:40" pos:end="353:54"><name pos:start="353:40" pos:end="353:42">pfl</name><operator pos:start="353:43" pos:end="353:44">-&gt;</operator><name pos:start="353:45" pos:end="353:54">sector_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="355:13" pos:end="355:31"><expr pos:start="355:13" pos:end="355:30"><name pos:start="355:13" pos:end="355:23"><name pos:start="355:13" pos:end="355:15">pfl</name><operator pos:start="355:16" pos:end="355:17">-&gt;</operator><name pos:start="355:18" pos:end="355:23">status</name></name> <operator pos:start="355:25" pos:end="355:25">=</operator> <literal type="number" pos:start="355:27" pos:end="355:30">0x00</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="357:13" pos:end="357:67">/* Let's wait 1/2 second before sector erase is done */</comment>

            <expr_stmt pos:start="359:13" pos:end="361:75"><expr pos:start="359:13" pos:end="361:74"><call pos:start="359:13" pos:end="361:74"><name pos:start="359:13" pos:end="359:26">qemu_mod_timer</name><argument_list pos:start="359:27" pos:end="361:74">(<argument pos:start="359:28" pos:end="359:37"><expr pos:start="359:28" pos:end="359:37"><name pos:start="359:28" pos:end="359:37"><name pos:start="359:28" pos:end="359:30">pfl</name><operator pos:start="359:31" pos:end="359:32">-&gt;</operator><name pos:start="359:33" pos:end="359:37">timer</name></name></expr></argument>, 

                           <argument pos:start="361:28" pos:end="361:73"><expr pos:start="361:28" pos:end="361:73"><call pos:start="361:28" pos:end="361:51"><name pos:start="361:28" pos:end="361:41">qemu_get_clock</name><argument_list pos:start="361:42" pos:end="361:51">(<argument pos:start="361:43" pos:end="361:50"><expr pos:start="361:43" pos:end="361:50"><name pos:start="361:43" pos:end="361:50">vm_clock</name></expr></argument>)</argument_list></call> <operator pos:start="361:53" pos:end="361:53">+</operator> <operator pos:start="361:55" pos:end="361:55">(</operator><name pos:start="361:56" pos:end="361:68">ticks_per_sec</name> <operator pos:start="361:70" pos:end="361:70">/</operator> <literal type="number" pos:start="361:72" pos:end="361:72">2</literal><operator pos:start="361:73" pos:end="361:73">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="363:13" pos:end="363:18">break;</break>

        <default pos:start="365:9" pos:end="365:16">default:</default>

            <expr_stmt pos:start="367:13" pos:end="367:72"><expr pos:start="367:13" pos:end="367:71"><call pos:start="367:13" pos:end="367:71"><name pos:start="367:13" pos:end="367:19">DPRINTF</name><argument_list pos:start="367:20" pos:end="367:71">(<argument pos:start="367:21" pos:end="367:55"><expr pos:start="367:21" pos:end="367:55"><literal type="string" pos:start="367:21" pos:end="367:55">"%s: invalid command %02x (wc 5)\n"</literal></expr></argument>, <argument pos:start="367:58" pos:end="367:65"><expr pos:start="367:58" pos:end="367:65"><name pos:start="367:58" pos:end="367:65">__func__</name></expr></argument>, <argument pos:start="367:68" pos:end="367:70"><expr pos:start="367:68" pos:end="367:70"><name pos:start="367:68" pos:end="367:70">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="369:13" pos:end="369:29">goto <name pos:start="369:18" pos:end="369:28">reset_flash</name>;</goto>

        </block_content>}</block></switch>

        <expr_stmt pos:start="373:9" pos:end="373:23"><expr pos:start="373:9" pos:end="373:22"><name pos:start="373:9" pos:end="373:16"><name pos:start="373:9" pos:end="373:11">pfl</name><operator pos:start="373:12" pos:end="373:13">-&gt;</operator><name pos:start="373:14" pos:end="373:16">cmd</name></name> <operator pos:start="373:18" pos:end="373:18">=</operator> <name pos:start="373:20" pos:end="373:22">cmd</name></expr>;</expr_stmt>

        <break pos:start="375:9" pos:end="375:14">break;</break>

    <case pos:start="377:5" pos:end="377:11">case <expr pos:start="377:10" pos:end="377:10"><literal type="number" pos:start="377:10" pos:end="377:10">6</literal></expr>:</case>

        <switch pos:start="379:9" pos:end="403:9">switch <condition pos:start="379:16" pos:end="379:25">(<expr pos:start="379:17" pos:end="379:24"><name pos:start="379:17" pos:end="379:24"><name pos:start="379:17" pos:end="379:19">pfl</name><operator pos:start="379:20" pos:end="379:21">-&gt;</operator><name pos:start="379:22" pos:end="379:24">cmd</name></name></expr>)</condition> <block pos:start="379:27" pos:end="403:9">{<block_content pos:start="381:9" pos:end="401:29">

        <case pos:start="381:9" pos:end="381:18">case <expr pos:start="381:14" pos:end="381:17"><literal type="number" pos:start="381:14" pos:end="381:17">0x10</literal></expr>:</case>

            <comment type="block" pos:start="383:13" pos:end="383:49">/* Ignore writes during chip erase */</comment>

            <return pos:start="385:13" pos:end="385:19">return;</return>

        <case pos:start="387:9" pos:end="387:18">case <expr pos:start="387:14" pos:end="387:17"><literal type="number" pos:start="387:14" pos:end="387:17">0x30</literal></expr>:</case>

            <comment type="block" pos:start="389:13" pos:end="389:51">/* Ignore writes during sector erase */</comment>

            <return pos:start="391:13" pos:end="391:19">return;</return>

        <default pos:start="393:9" pos:end="393:16">default:</default>

            <comment type="block" pos:start="395:13" pos:end="395:37">/* Should never happen */</comment>

            <expr_stmt pos:start="397:13" pos:end="399:40"><expr pos:start="397:13" pos:end="399:39"><call pos:start="397:13" pos:end="399:39"><name pos:start="397:13" pos:end="397:19">DPRINTF</name><argument_list pos:start="397:20" pos:end="399:39">(<argument pos:start="397:21" pos:end="397:61"><expr pos:start="397:21" pos:end="397:61"><literal type="string" pos:start="397:21" pos:end="397:61">"%s: invalid command state %02x (wc 6)\n"</literal></expr></argument>,

                    <argument pos:start="399:21" pos:end="399:28"><expr pos:start="399:21" pos:end="399:28"><name pos:start="399:21" pos:end="399:28">__func__</name></expr></argument>, <argument pos:start="399:31" pos:end="399:38"><expr pos:start="399:31" pos:end="399:38"><name pos:start="399:31" pos:end="399:38"><name pos:start="399:31" pos:end="399:33">pfl</name><operator pos:start="399:34" pos:end="399:35">-&gt;</operator><name pos:start="399:36" pos:end="399:38">cmd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="401:13" pos:end="401:29">goto <name pos:start="401:18" pos:end="401:28">reset_flash</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="405:9" pos:end="405:14">break;</break>

    <case pos:start="407:5" pos:end="407:11">case <expr pos:start="407:10" pos:end="407:10"><literal type="number" pos:start="407:10" pos:end="407:10">7</literal></expr>:</case> <comment type="block" pos:start="407:13" pos:end="407:47">/* Special value for CFI queries */</comment>

        <expr_stmt pos:start="409:9" pos:end="409:67"><expr pos:start="409:9" pos:end="409:66"><call pos:start="409:9" pos:end="409:66"><name pos:start="409:9" pos:end="409:15">DPRINTF</name><argument_list pos:start="409:16" pos:end="409:66">(<argument pos:start="409:17" pos:end="409:55"><expr pos:start="409:17" pos:end="409:55"><literal type="string" pos:start="409:17" pos:end="409:55">"%s: invalid write in CFI query mode\n"</literal></expr></argument>, <argument pos:start="409:58" pos:end="409:65"><expr pos:start="409:58" pos:end="409:65"><name pos:start="409:58" pos:end="409:65">__func__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="411:9" pos:end="411:25">goto <name pos:start="411:14" pos:end="411:24">reset_flash</name>;</goto>

    <default pos:start="413:5" pos:end="413:12">default:</default>

        <comment type="block" pos:start="415:9" pos:end="415:33">/* Should never happen */</comment>

        <expr_stmt pos:start="417:9" pos:end="417:63"><expr pos:start="417:9" pos:end="417:62"><call pos:start="417:9" pos:end="417:62"><name pos:start="417:9" pos:end="417:15">DPRINTF</name><argument_list pos:start="417:16" pos:end="417:62">(<argument pos:start="417:17" pos:end="417:50"><expr pos:start="417:17" pos:end="417:50"><literal type="string" pos:start="417:17" pos:end="417:50">"%s: invalid write state (wc 7)\n"</literal></expr></argument>,  <argument pos:start="417:54" pos:end="417:61"><expr pos:start="417:54" pos:end="417:61"><name pos:start="417:54" pos:end="417:61">__func__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="419:9" pos:end="419:25">goto <name pos:start="419:14" pos:end="419:24">reset_flash</name>;</goto>

    </block_content>}</block></switch>

    <expr_stmt pos:start="423:5" pos:end="423:18"><expr pos:start="423:5" pos:end="423:17"><name pos:start="423:5" pos:end="423:15"><name pos:start="423:5" pos:end="423:7">pfl</name><operator pos:start="423:8" pos:end="423:9">-&gt;</operator><name pos:start="423:10" pos:end="423:15">wcycle</name></name><operator pos:start="423:16" pos:end="423:17">++</operator></expr>;</expr_stmt>



    <return pos:start="427:5" pos:end="427:11">return;</return>



    <comment type="block" pos:start="431:5" pos:end="431:21">/* Reset flash */</comment>

 <label pos:start="433:2" pos:end="433:13"><name pos:start="433:2" pos:end="433:12">reset_flash</name>:</label>

    <if_stmt pos:start="435:5" pos:end="441:5"><if pos:start="435:5" pos:end="441:5">if <condition pos:start="435:8" pos:end="435:25">(<expr pos:start="435:9" pos:end="435:24"><name pos:start="435:9" pos:end="435:19"><name pos:start="435:9" pos:end="435:11">pfl</name><operator pos:start="435:12" pos:end="435:13">-&gt;</operator><name pos:start="435:14" pos:end="435:19">wcycle</name></name> <operator pos:start="435:21" pos:end="435:22">!=</operator> <literal type="number" pos:start="435:24" pos:end="435:24">0</literal></expr>)</condition> <block pos:start="435:27" pos:end="441:5">{<block_content pos:start="437:9" pos:end="439:75">

        <expr_stmt pos:start="437:9" pos:end="439:75"><expr pos:start="437:9" pos:end="439:74"><call pos:start="437:9" pos:end="439:74"><name pos:start="437:9" pos:end="437:36">cpu_register_physical_memory</name><argument_list pos:start="437:37" pos:end="439:74">(<argument pos:start="437:38" pos:end="437:46"><expr pos:start="437:38" pos:end="437:46"><name pos:start="437:38" pos:end="437:46"><name pos:start="437:38" pos:end="437:40">pfl</name><operator pos:start="437:41" pos:end="437:42">-&gt;</operator><name pos:start="437:43" pos:end="437:46">base</name></name></expr></argument>, <argument pos:start="437:49" pos:end="437:62"><expr pos:start="437:49" pos:end="437:62"><name pos:start="437:49" pos:end="437:62"><name pos:start="437:49" pos:end="437:51">pfl</name><operator pos:start="437:52" pos:end="437:53">-&gt;</operator><name pos:start="437:54" pos:end="437:62">total_len</name></name></expr></argument>,

                                     <argument pos:start="439:38" pos:end="439:73"><expr pos:start="439:38" pos:end="439:73"><name pos:start="439:38" pos:end="439:45"><name pos:start="439:38" pos:end="439:40">pfl</name><operator pos:start="439:41" pos:end="439:42">-&gt;</operator><name pos:start="439:43" pos:end="439:45">off</name></name> <operator pos:start="439:47" pos:end="439:47">|</operator> <name pos:start="439:49" pos:end="439:59">IO_MEM_ROMD</name> <operator pos:start="439:61" pos:end="439:61">|</operator> <name pos:start="439:63" pos:end="439:73"><name pos:start="439:63" pos:end="439:65">pfl</name><operator pos:start="439:66" pos:end="439:67">-&gt;</operator><name pos:start="439:68" pos:end="439:73">fl_mem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="443:5" pos:end="443:20"><expr pos:start="443:5" pos:end="443:19"><name pos:start="443:5" pos:end="443:15"><name pos:start="443:5" pos:end="443:7">pfl</name><operator pos:start="443:8" pos:end="443:9">-&gt;</operator><name pos:start="443:10" pos:end="443:15">bypass</name></name> <operator pos:start="443:17" pos:end="443:17">=</operator> <literal type="number" pos:start="443:19" pos:end="443:19">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="445:5" pos:end="445:20"><expr pos:start="445:5" pos:end="445:19"><name pos:start="445:5" pos:end="445:15"><name pos:start="445:5" pos:end="445:7">pfl</name><operator pos:start="445:8" pos:end="445:9">-&gt;</operator><name pos:start="445:10" pos:end="445:15">wcycle</name></name> <operator pos:start="445:17" pos:end="445:17">=</operator> <literal type="number" pos:start="445:19" pos:end="445:19">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="447:5" pos:end="447:17"><expr pos:start="447:5" pos:end="447:16"><name pos:start="447:5" pos:end="447:12"><name pos:start="447:5" pos:end="447:7">pfl</name><operator pos:start="447:8" pos:end="447:9">-&gt;</operator><name pos:start="447:10" pos:end="447:12">cmd</name></name> <operator pos:start="447:14" pos:end="447:14">=</operator> <literal type="number" pos:start="447:16" pos:end="447:16">0</literal></expr>;</expr_stmt>

    <return pos:start="449:5" pos:end="449:11">return;</return>



 <label pos:start="453:2" pos:end="453:11"><name pos:start="453:2" pos:end="453:10">do_bypass</name>:</label>

    <expr_stmt pos:start="455:5" pos:end="455:20"><expr pos:start="455:5" pos:end="455:19"><name pos:start="455:5" pos:end="455:15"><name pos:start="455:5" pos:end="455:7">pfl</name><operator pos:start="455:8" pos:end="455:9">-&gt;</operator><name pos:start="455:10" pos:end="455:15">wcycle</name></name> <operator pos:start="455:17" pos:end="455:17">=</operator> <literal type="number" pos:start="455:19" pos:end="455:19">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="457:5" pos:end="457:17"><expr pos:start="457:5" pos:end="457:16"><name pos:start="457:5" pos:end="457:12"><name pos:start="457:5" pos:end="457:7">pfl</name><operator pos:start="457:8" pos:end="457:9">-&gt;</operator><name pos:start="457:10" pos:end="457:12">cmd</name></name> <operator pos:start="457:14" pos:end="457:14">=</operator> <literal type="number" pos:start="457:16" pos:end="457:16">0</literal></expr>;</expr_stmt>

    <return pos:start="459:5" pos:end="459:11">return;</return>

</block_content>}</block></function>
</unit>
