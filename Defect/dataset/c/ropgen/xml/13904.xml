<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13904.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">adx_decode</name><parameter_list pos:start="1:23" pos:end="1:78">(<parameter pos:start="1:24" pos:end="1:36"><decl pos:start="1:24" pos:end="1:36"><type pos:start="1:24" pos:end="1:36"><name pos:start="1:24" pos:end="1:33">ADXContext</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">c</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:50"><decl pos:start="1:39" pos:end="1:50"><type pos:start="1:39" pos:end="1:50"><name pos:start="1:39" pos:end="1:45">int16_t</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">out</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:69"><decl pos:start="1:53" pos:end="1:69"><type pos:start="1:53" pos:end="1:69"><specifier pos:start="1:53" pos:end="1:57">const</specifier> <name pos:start="1:59" pos:end="1:65">uint8_t</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:69">in</name></decl></parameter>, <parameter pos:start="1:72" pos:end="1:77"><decl pos:start="1:72" pos:end="1:77"><type pos:start="1:72" pos:end="1:77"><name pos:start="1:72" pos:end="1:74">int</name></type> <name pos:start="1:76" pos:end="1:77">ch</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:18">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">ADXChannelState</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:25">prev</name> <init pos:start="5:27" pos:end="5:40">= <expr pos:start="5:29" pos:end="5:40"><operator pos:start="5:29" pos:end="5:29">&amp;</operator><name pos:start="5:30" pos:end="5:40"><name pos:start="5:30" pos:end="5:30">c</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:36">prev</name><index pos:start="5:37" pos:end="5:40">[<expr pos:start="5:38" pos:end="5:39"><name pos:start="5:38" pos:end="5:39">ch</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:17">GetBitContext</name></type> <name pos:start="7:19" pos:end="7:20">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">scale</name> <init pos:start="9:15" pos:end="9:27">= <expr pos:start="9:17" pos:end="9:27"><call pos:start="9:17" pos:end="9:27"><name pos:start="9:17" pos:end="9:23">AV_RB16</name><argument_list pos:start="9:24" pos:end="9:27">(<argument pos:start="9:25" pos:end="9:26"><expr pos:start="9:25" pos:end="9:26"><name pos:start="9:25" pos:end="9:26">in</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:10"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:10">s0</name></decl>, <decl pos:start="13:13" pos:end="13:14"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:13" pos:end="13:14">s1</name></decl>, <decl pos:start="13:17" pos:end="13:18"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:17" pos:end="13:18">s2</name></decl>, <decl pos:start="13:21" pos:end="13:21"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:21" pos:end="13:21">d</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:45"><expr pos:start="17:5" pos:end="17:44"><call pos:start="17:5" pos:end="17:44"><name pos:start="17:5" pos:end="17:17">init_get_bits</name><argument_list pos:start="17:18" pos:end="17:44">(<argument pos:start="17:19" pos:end="17:21"><expr pos:start="17:19" pos:end="17:21"><operator pos:start="17:19" pos:end="17:19">&amp;</operator><name pos:start="17:20" pos:end="17:21">gb</name></expr></argument>, <argument pos:start="17:24" pos:end="17:29"><expr pos:start="17:24" pos:end="17:29"><name pos:start="17:24" pos:end="17:25">in</name> <operator pos:start="17:27" pos:end="17:27">+</operator> <literal type="number" pos:start="17:29" pos:end="17:29">2</literal></expr></argument>, <argument pos:start="17:32" pos:end="17:43"><expr pos:start="17:32" pos:end="17:43"><operator pos:start="17:32" pos:end="17:32">(</operator><literal type="number" pos:start="17:33" pos:end="17:36">18</literal> <operator pos:start="17:36" pos:end="17:36">-</operator> <literal type="number" pos:start="17:38" pos:end="17:38">2</literal><operator pos:start="17:39" pos:end="17:39">)</operator> <operator pos:start="17:41" pos:end="17:41">*</operator> <literal type="number" pos:start="17:43" pos:end="17:43">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:18"><expr pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:6">s1</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <name pos:start="19:10" pos:end="19:17"><name pos:start="19:10" pos:end="19:13">prev</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:17">s1</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:18"><expr pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:6">s2</name> <operator pos:start="21:8" pos:end="21:8">=</operator> <name pos:start="21:10" pos:end="21:17"><name pos:start="21:10" pos:end="21:13">prev</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:17">s2</name></name></expr>;</expr_stmt>

    <for pos:start="23:5" pos:end="37:5">for <control pos:start="23:9" pos:end="23:28">(<init pos:start="23:10" pos:end="23:15"><expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:10">i</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</init> <condition pos:start="23:17" pos:end="23:23"><expr pos:start="23:17" pos:end="23:22"><name pos:start="23:17" pos:end="23:17">i</name> <operator pos:start="23:19" pos:end="23:19">&lt;</operator> <literal type="number" pos:start="23:21" pos:end="23:22">32</literal></expr>;</condition> <incr pos:start="23:25" pos:end="23:27"><expr pos:start="23:25" pos:end="23:27"><name pos:start="23:25" pos:end="23:25">i</name><operator pos:start="23:26" pos:end="23:27">++</operator></expr></incr>)</control> <block pos:start="23:30" pos:end="37:5">{<block_content pos:start="25:9" pos:end="35:27">

        <expr_stmt pos:start="25:9" pos:end="25:31"><expr pos:start="25:9" pos:end="25:30"><name pos:start="25:9" pos:end="25:9">d</name>  <operator pos:start="25:12" pos:end="25:12">=</operator> <call pos:start="25:14" pos:end="25:30"><name pos:start="25:14" pos:end="25:22">get_sbits</name><argument_list pos:start="25:23" pos:end="25:30">(<argument pos:start="25:24" pos:end="25:26"><expr pos:start="25:24" pos:end="25:26"><operator pos:start="25:24" pos:end="25:24">&amp;</operator><name pos:start="25:25" pos:end="25:26">gb</name></expr></argument>, <argument pos:start="25:29" pos:end="25:29"><expr pos:start="25:29" pos:end="25:29"><literal type="number" pos:start="25:29" pos:end="25:29">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:69"><expr pos:start="27:9" pos:end="27:68"><name pos:start="27:9" pos:end="27:10">s0</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <operator pos:start="27:14" pos:end="27:14">(</operator><name pos:start="27:15" pos:end="27:21">BASEVOL</name> <operator pos:start="27:23" pos:end="27:23">*</operator> <name pos:start="27:25" pos:end="27:25">d</name> <operator pos:start="27:27" pos:end="27:27">*</operator> <name pos:start="27:29" pos:end="27:33">scale</name> <operator pos:start="27:35" pos:end="27:35">+</operator> <name pos:start="27:37" pos:end="27:42">SCALE1</name> <operator pos:start="27:44" pos:end="27:44">*</operator> <name pos:start="27:46" pos:end="27:47">s1</name> <operator pos:start="27:49" pos:end="27:49">-</operator> <name pos:start="27:51" pos:end="27:56">SCALE2</name> <operator pos:start="27:58" pos:end="27:58">*</operator> <name pos:start="27:60" pos:end="27:61">s2</name><operator pos:start="27:62" pos:end="27:62">)</operator> <operator pos:start="27:64" pos:end="27:65">&gt;&gt;</operator> <literal type="number" pos:start="27:67" pos:end="27:68">14</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:16"><expr pos:start="29:9" pos:end="29:15"><name pos:start="29:9" pos:end="29:10">s2</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <name pos:start="29:14" pos:end="29:15">s1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:31"><expr pos:start="31:9" pos:end="31:30"><name pos:start="31:9" pos:end="31:10">s1</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <call pos:start="31:14" pos:end="31:30"><name pos:start="31:14" pos:end="31:26">av_clip_int16</name><argument_list pos:start="31:27" pos:end="31:30">(<argument pos:start="31:28" pos:end="31:29"><expr pos:start="31:28" pos:end="31:29"><name pos:start="31:28" pos:end="31:29">s0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:18"><expr pos:start="33:9" pos:end="33:17"><operator pos:start="33:9" pos:end="33:9">*</operator><name pos:start="33:10" pos:end="33:12">out</name> <operator pos:start="33:14" pos:end="33:14">=</operator> <name pos:start="33:16" pos:end="33:17">s1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:27"><expr pos:start="35:9" pos:end="35:26"><name pos:start="35:9" pos:end="35:11">out</name> <operator pos:start="35:13" pos:end="35:14">+=</operator> <name pos:start="35:16" pos:end="35:26"><name pos:start="35:16" pos:end="35:16">c</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:26">channels</name></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="39:5" pos:end="39:18"><expr pos:start="39:5" pos:end="39:17"><name pos:start="39:5" pos:end="39:12"><name pos:start="39:5" pos:end="39:8">prev</name><operator pos:start="39:9" pos:end="39:10">-&gt;</operator><name pos:start="39:11" pos:end="39:12">s1</name></name> <operator pos:start="39:14" pos:end="39:14">=</operator> <name pos:start="39:16" pos:end="39:17">s1</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:18"><expr pos:start="41:5" pos:end="41:17"><name pos:start="41:5" pos:end="41:12"><name pos:start="41:5" pos:end="41:8">prev</name><operator pos:start="41:9" pos:end="41:10">-&gt;</operator><name pos:start="41:11" pos:end="41:12">s2</name></name> <operator pos:start="41:14" pos:end="41:14">=</operator> <name pos:start="41:16" pos:end="41:17">s2</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
