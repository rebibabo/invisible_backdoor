<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22698.c" pos:tabs="8"><function pos:start="1:1" pos:end="183:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:39">decode_update_thread_context</name><parameter_list pos:start="1:40" pos:end="1:87">(<parameter pos:start="1:41" pos:end="1:59"><decl pos:start="1:41" pos:end="1:59"><type pos:start="1:41" pos:end="1:59"><name pos:start="1:41" pos:end="1:54">AVCodecContext</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:59">dst</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:86"><decl pos:start="1:62" pos:end="1:86"><type pos:start="1:62" pos:end="1:86"><specifier pos:start="1:62" pos:end="1:66">const</specifier> <name pos:start="1:68" pos:end="1:81">AVCodecContext</name> <modifier pos:start="1:83" pos:end="1:83">*</modifier></type><name pos:start="1:84" pos:end="1:86">src</name></decl></parameter>)</parameter_list><block pos:start="1:88" pos:end="183:1">{<block_content pos:start="3:5" pos:end="181:15">

    <decl_stmt pos:start="3:5" pos:end="3:56"><decl pos:start="3:5" pos:end="3:34"><type pos:start="3:5" pos:end="3:17"><name pos:start="3:5" pos:end="3:15">H264Context</name> <modifier pos:start="3:17" pos:end="3:17">*</modifier></type><name pos:start="3:18" pos:end="3:18">h</name><init pos:start="3:19" pos:end="3:34">= <expr pos:start="3:21" pos:end="3:34"><name pos:start="3:21" pos:end="3:34"><name pos:start="3:21" pos:end="3:23">dst</name><operator pos:start="3:24" pos:end="3:25">-&gt;</operator><name pos:start="3:26" pos:end="3:34">priv_data</name></name></expr></init></decl>, <decl pos:start="3:37" pos:end="3:55"><type ref="prev" pos:start="3:5" pos:end="3:17"><modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:39">h1</name><init pos:start="3:40" pos:end="3:55">= <expr pos:start="3:42" pos:end="3:55"><name pos:start="3:42" pos:end="3:55"><name pos:start="3:42" pos:end="3:44">src</name><operator pos:start="3:45" pos:end="3:46">-&gt;</operator><name pos:start="3:47" pos:end="3:55">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:58"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:18">MpegEncContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier> <specifier pos:start="5:22" pos:end="5:26">const</specifier></type> <name pos:start="5:28" pos:end="5:28">s</name> <init pos:start="5:30" pos:end="5:36">= <expr pos:start="5:32" pos:end="5:36"><operator pos:start="5:32" pos:end="5:32">&amp;</operator><name pos:start="5:33" pos:end="5:36"><name pos:start="5:33" pos:end="5:33">h</name><operator pos:start="5:34" pos:end="5:35">-&gt;</operator><name pos:start="5:36" pos:end="5:36">s</name></name></expr></init></decl>, <decl pos:start="5:39" pos:end="5:57"><type ref="prev" pos:start="5:5" pos:end="5:26"><modifier pos:start="5:39" pos:end="5:39">*</modifier></type> const <name pos:start="5:47" pos:end="5:48">s1</name> <init pos:start="5:50" pos:end="5:57">= <expr pos:start="5:52" pos:end="5:57"><operator pos:start="5:52" pos:end="5:52">&amp;</operator><name pos:start="5:53" pos:end="5:57"><name pos:start="5:53" pos:end="5:54">h1</name><operator pos:start="5:55" pos:end="5:56">-&gt;</operator><name pos:start="5:57" pos:end="5:57">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">inited</name> <init pos:start="7:16" pos:end="7:39">= <expr pos:start="7:18" pos:end="7:39"><name pos:start="7:18" pos:end="7:39"><name pos:start="7:18" pos:end="7:18">s</name><operator pos:start="7:19" pos:end="7:20">-&gt;</operator><name pos:start="7:21" pos:end="7:39">context_initialized</name></name></expr></init></decl>, <decl pos:start="7:42" pos:end="7:44"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:42" pos:end="7:44">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="13:56"><if pos:start="13:5" pos:end="13:56">if<condition pos:start="13:7" pos:end="13:46">(<expr pos:start="13:8" pos:end="13:45"><name pos:start="13:8" pos:end="13:10">dst</name> <operator pos:start="13:12" pos:end="13:13">==</operator> <name pos:start="13:15" pos:end="13:17">src</name> <operator pos:start="13:19" pos:end="13:20">||</operator> <operator pos:start="13:22" pos:end="13:22">!</operator><name pos:start="13:23" pos:end="13:45"><name pos:start="13:23" pos:end="13:24">s1</name><operator pos:start="13:25" pos:end="13:26">-&gt;</operator><name pos:start="13:27" pos:end="13:45">context_initialized</name></name></expr>)</condition><block type="pseudo" pos:start="13:48" pos:end="13:56"><block_content pos:start="13:48" pos:end="13:56"> <return pos:start="13:48" pos:end="13:56">return <expr pos:start="13:55" pos:end="13:55"><literal type="number" pos:start="13:55" pos:end="13:55">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:50"><expr pos:start="17:5" pos:end="17:49"><name pos:start="17:5" pos:end="17:7">err</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <call pos:start="17:11" pos:end="17:49"><name pos:start="17:11" pos:end="17:39">ff_mpeg_update_thread_context</name><argument_list pos:start="17:40" pos:end="17:49">(<argument pos:start="17:41" pos:end="17:43"><expr pos:start="17:41" pos:end="17:43"><name pos:start="17:41" pos:end="17:43">dst</name></expr></argument>, <argument pos:start="17:46" pos:end="17:48"><expr pos:start="17:46" pos:end="17:48"><name pos:start="17:46" pos:end="17:48">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="19:23"><if pos:start="19:5" pos:end="19:23">if<condition pos:start="19:7" pos:end="19:11">(<expr pos:start="19:8" pos:end="19:10"><name pos:start="19:8" pos:end="19:10">err</name></expr>)</condition><block type="pseudo" pos:start="19:13" pos:end="19:23"><block_content pos:start="19:13" pos:end="19:23"> <return pos:start="19:13" pos:end="19:23">return <expr pos:start="19:20" pos:end="19:22"><name pos:start="19:20" pos:end="19:22">err</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="line" pos:start="23:5" pos:end="23:40">//FIXME handle width/height changing</comment>

    <if_stmt pos:start="25:5" pos:end="83:5"><if pos:start="25:5" pos:end="83:5">if<condition pos:start="25:7" pos:end="25:15">(<expr pos:start="25:8" pos:end="25:14"><operator pos:start="25:8" pos:end="25:8">!</operator><name pos:start="25:9" pos:end="25:14">inited</name></expr>)</condition><block pos:start="25:16" pos:end="83:5">{<block_content pos:start="27:9" pos:end="81:59">

        <for pos:start="27:9" pos:end="29:41">for<control pos:start="27:12" pos:end="27:42">(<init pos:start="27:13" pos:end="27:18"><expr pos:start="27:13" pos:end="27:17"><name pos:start="27:13" pos:end="27:13">i</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <literal type="number" pos:start="27:17" pos:end="27:17">0</literal></expr>;</init> <condition pos:start="27:20" pos:end="27:37"><expr pos:start="27:20" pos:end="27:36"><name pos:start="27:20" pos:end="27:20">i</name> <operator pos:start="27:22" pos:end="27:22">&lt;</operator> <name pos:start="27:24" pos:end="27:36">MAX_SPS_COUNT</name></expr>;</condition> <incr pos:start="27:39" pos:end="27:41"><expr pos:start="27:39" pos:end="27:41"><name pos:start="27:39" pos:end="27:39">i</name><operator pos:start="27:40" pos:end="27:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="29:13" pos:end="29:41"><block_content pos:start="29:13" pos:end="29:41">

            <expr_stmt pos:start="29:13" pos:end="29:41"><expr pos:start="29:13" pos:end="29:40"><call pos:start="29:13" pos:end="29:40"><name pos:start="29:13" pos:end="29:20">av_freep</name><argument_list pos:start="29:21" pos:end="29:40">(<argument pos:start="29:22" pos:end="29:39"><expr pos:start="29:22" pos:end="29:39"><name pos:start="29:22" pos:end="29:35"><name pos:start="29:22" pos:end="29:22">h</name><operator pos:start="29:23" pos:end="29:24">-&gt;</operator><name pos:start="29:25" pos:end="29:35">sps_buffers</name></name> <operator pos:start="29:37" pos:end="29:37">+</operator> <name pos:start="29:39" pos:end="29:39">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



        <for pos:start="33:9" pos:end="35:41">for<control pos:start="33:12" pos:end="33:42">(<init pos:start="33:13" pos:end="33:18"><expr pos:start="33:13" pos:end="33:17"><name pos:start="33:13" pos:end="33:13">i</name> <operator pos:start="33:15" pos:end="33:15">=</operator> <literal type="number" pos:start="33:17" pos:end="33:17">0</literal></expr>;</init> <condition pos:start="33:20" pos:end="33:37"><expr pos:start="33:20" pos:end="33:36"><name pos:start="33:20" pos:end="33:20">i</name> <operator pos:start="33:22" pos:end="33:22">&lt;</operator> <name pos:start="33:24" pos:end="33:36">MAX_PPS_COUNT</name></expr>;</condition> <incr pos:start="33:39" pos:end="33:41"><expr pos:start="33:39" pos:end="33:41"><name pos:start="33:39" pos:end="33:39">i</name><operator pos:start="33:40" pos:end="33:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="35:13" pos:end="35:41"><block_content pos:start="35:13" pos:end="35:41">

            <expr_stmt pos:start="35:13" pos:end="35:41"><expr pos:start="35:13" pos:end="35:40"><call pos:start="35:13" pos:end="35:40"><name pos:start="35:13" pos:end="35:20">av_freep</name><argument_list pos:start="35:21" pos:end="35:40">(<argument pos:start="35:22" pos:end="35:39"><expr pos:start="35:22" pos:end="35:39"><name pos:start="35:22" pos:end="35:35"><name pos:start="35:22" pos:end="35:22">h</name><operator pos:start="35:23" pos:end="35:24">-&gt;</operator><name pos:start="35:25" pos:end="35:35">pps_buffers</name></name> <operator pos:start="35:37" pos:end="35:37">+</operator> <name pos:start="35:39" pos:end="35:39">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



        <expr_stmt pos:start="39:9" pos:end="39:84"><expr pos:start="39:9" pos:end="39:83"><call pos:start="39:9" pos:end="39:83"><name pos:start="39:9" pos:end="39:14">memcpy</name><argument_list pos:start="39:15" pos:end="39:83">(<argument pos:start="39:16" pos:end="39:24"><expr pos:start="39:16" pos:end="39:24"><operator pos:start="39:16" pos:end="39:16">&amp;</operator><name pos:start="39:17" pos:end="39:20"><name pos:start="39:17" pos:end="39:17">h</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:20">s</name></name> <operator pos:start="39:22" pos:end="39:22">+</operator> <literal type="number" pos:start="39:24" pos:end="39:24">1</literal></expr></argument>, <argument pos:start="39:27" pos:end="39:36"><expr pos:start="39:27" pos:end="39:36"><operator pos:start="39:27" pos:end="39:27">&amp;</operator><name pos:start="39:28" pos:end="39:32"><name pos:start="39:28" pos:end="39:29">h1</name><operator pos:start="39:30" pos:end="39:31">-&gt;</operator><name pos:start="39:32" pos:end="39:32">s</name></name> <operator pos:start="39:34" pos:end="39:34">+</operator> <literal type="number" pos:start="39:36" pos:end="39:36">1</literal></expr></argument>, <argument pos:start="39:39" pos:end="39:82"><expr pos:start="39:39" pos:end="39:82"><sizeof pos:start="39:39" pos:end="39:57">sizeof<argument_list pos:start="39:45" pos:end="39:57">(<argument pos:start="39:46" pos:end="39:56"><expr pos:start="39:46" pos:end="39:56"><name pos:start="39:46" pos:end="39:56">H264Context</name></expr></argument>)</argument_list></sizeof> <operator pos:start="39:59" pos:end="39:59">-</operator> <sizeof pos:start="39:61" pos:end="39:82">sizeof<argument_list pos:start="39:67" pos:end="39:82">(<argument pos:start="39:68" pos:end="39:81"><expr pos:start="39:68" pos:end="39:81"><name pos:start="39:68" pos:end="39:81">MpegEncContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="39:86" pos:end="39:116">//copy all fields after MpegEnc</comment>

        <expr_stmt pos:start="41:9" pos:end="41:58"><expr pos:start="41:9" pos:end="41:57"><call pos:start="41:9" pos:end="41:57"><name pos:start="41:9" pos:end="41:14">memset</name><argument_list pos:start="41:15" pos:end="41:57">(<argument pos:start="41:16" pos:end="41:29"><expr pos:start="41:16" pos:end="41:29"><name pos:start="41:16" pos:end="41:29"><name pos:start="41:16" pos:end="41:16">h</name><operator pos:start="41:17" pos:end="41:18">-&gt;</operator><name pos:start="41:19" pos:end="41:29">sps_buffers</name></name></expr></argument>, <argument pos:start="41:32" pos:end="41:32"><expr pos:start="41:32" pos:end="41:32"><literal type="number" pos:start="41:32" pos:end="41:32">0</literal></expr></argument>, <argument pos:start="41:35" pos:end="41:56"><expr pos:start="41:35" pos:end="41:56"><sizeof pos:start="41:35" pos:end="41:56">sizeof<argument_list pos:start="41:41" pos:end="41:56">(<argument pos:start="41:42" pos:end="41:55"><expr pos:start="41:42" pos:end="41:55"><name pos:start="41:42" pos:end="41:55"><name pos:start="41:42" pos:end="41:42">h</name><operator pos:start="41:43" pos:end="41:44">-&gt;</operator><name pos:start="41:45" pos:end="41:55">sps_buffers</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:58"><expr pos:start="43:9" pos:end="43:57"><call pos:start="43:9" pos:end="43:57"><name pos:start="43:9" pos:end="43:14">memset</name><argument_list pos:start="43:15" pos:end="43:57">(<argument pos:start="43:16" pos:end="43:29"><expr pos:start="43:16" pos:end="43:29"><name pos:start="43:16" pos:end="43:29"><name pos:start="43:16" pos:end="43:16">h</name><operator pos:start="43:17" pos:end="43:18">-&gt;</operator><name pos:start="43:19" pos:end="43:29">pps_buffers</name></name></expr></argument>, <argument pos:start="43:32" pos:end="43:32"><expr pos:start="43:32" pos:end="43:32"><literal type="number" pos:start="43:32" pos:end="43:32">0</literal></expr></argument>, <argument pos:start="43:35" pos:end="43:56"><expr pos:start="43:35" pos:end="43:56"><sizeof pos:start="43:35" pos:end="43:56">sizeof<argument_list pos:start="43:41" pos:end="43:56">(<argument pos:start="43:42" pos:end="43:55"><expr pos:start="43:42" pos:end="43:55"><name pos:start="43:42" pos:end="43:55"><name pos:start="43:42" pos:end="43:42">h</name><operator pos:start="43:43" pos:end="43:44">-&gt;</operator><name pos:start="43:45" pos:end="43:55">pps_buffers</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="51:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:40">(<expr pos:start="45:13" pos:end="45:39"><call pos:start="45:13" pos:end="45:35"><name pos:start="45:13" pos:end="45:32">ff_h264_alloc_tables</name><argument_list pos:start="45:33" pos:end="45:35">(<argument pos:start="45:34" pos:end="45:34"><expr pos:start="45:34" pos:end="45:34"><name pos:start="45:34" pos:end="45:34">h</name></expr></argument>)</argument_list></call> <operator pos:start="45:37" pos:end="45:37">&lt;</operator> <literal type="number" pos:start="45:39" pos:end="45:39">0</literal></expr>)</condition> <block pos:start="45:42" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:35">

            <expr_stmt pos:start="47:13" pos:end="47:78"><expr pos:start="47:13" pos:end="47:77"><call pos:start="47:13" pos:end="47:77"><name pos:start="47:13" pos:end="47:18">av_log</name><argument_list pos:start="47:19" pos:end="47:77">(<argument pos:start="47:20" pos:end="47:22"><expr pos:start="47:20" pos:end="47:22"><name pos:start="47:20" pos:end="47:22">dst</name></expr></argument>, <argument pos:start="47:25" pos:end="47:36"><expr pos:start="47:25" pos:end="47:36"><name pos:start="47:25" pos:end="47:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="47:39" pos:end="47:76"><expr pos:start="47:39" pos:end="47:76"><literal type="string" pos:start="47:39" pos:end="47:76">"Could not allocate memory for h264\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="49:13" pos:end="49:35">return <expr pos:start="49:20" pos:end="49:34"><call pos:start="49:20" pos:end="49:34"><name pos:start="49:20" pos:end="49:26">AVERROR</name><argument_list pos:start="49:27" pos:end="49:34">(<argument pos:start="49:28" pos:end="49:33"><expr pos:start="49:28" pos:end="49:33"><name pos:start="49:28" pos:end="49:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:24"><expr pos:start="53:9" pos:end="53:23"><call pos:start="53:9" pos:end="53:23"><name pos:start="53:9" pos:end="53:20">context_init</name><argument_list pos:start="53:21" pos:end="53:23">(<argument pos:start="53:22" pos:end="53:22"><expr pos:start="53:22" pos:end="53:22"><name pos:start="53:22" pos:end="53:22">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="57:9" pos:end="63:9">for<control pos:start="57:12" pos:end="57:26">(<init pos:start="57:13" pos:end="57:16"><expr pos:start="57:13" pos:end="57:15"><name pos:start="57:13" pos:end="57:13">i</name><operator pos:start="57:14" pos:end="57:14">=</operator><literal type="number" pos:start="57:15" pos:end="57:15">0</literal></expr>;</init> <condition pos:start="57:18" pos:end="57:21"><expr pos:start="57:18" pos:end="57:20"><name pos:start="57:18" pos:end="57:18">i</name><operator pos:start="57:19" pos:end="57:19">&lt;</operator><literal type="number" pos:start="57:20" pos:end="57:20">2</literal></expr>;</condition> <incr pos:start="57:23" pos:end="57:25"><expr pos:start="57:23" pos:end="57:25"><name pos:start="57:23" pos:end="57:23">i</name><operator pos:start="57:24" pos:end="57:25">++</operator></expr></incr>)</control><block pos:start="57:27" pos:end="63:9">{<block_content pos:start="59:13" pos:end="61:39">

            <expr_stmt pos:start="59:13" pos:end="59:37"><expr pos:start="59:13" pos:end="59:36"><name pos:start="59:13" pos:end="59:29"><name pos:start="59:13" pos:end="59:13">h</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:26">rbsp_buffer</name><index pos:start="59:27" pos:end="59:29">[<expr pos:start="59:28" pos:end="59:28"><name pos:start="59:28" pos:end="59:28">i</name></expr>]</index></name> <operator pos:start="59:31" pos:end="59:31">=</operator> <name pos:start="59:33" pos:end="59:36">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:39"><expr pos:start="61:13" pos:end="61:38"><name pos:start="61:13" pos:end="61:34"><name pos:start="61:13" pos:end="61:13">h</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:31">rbsp_buffer_size</name><index pos:start="61:32" pos:end="61:34">[<expr pos:start="61:33" pos:end="61:33"><name pos:start="61:33" pos:end="61:33">i</name></expr>]</index></name> <operator pos:start="61:36" pos:end="61:36">=</operator> <literal type="number" pos:start="61:38" pos:end="61:38">0</literal></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="67:9" pos:end="67:33"><expr pos:start="67:9" pos:end="67:32"><name pos:start="67:9" pos:end="67:28"><name pos:start="67:9" pos:end="67:9">h</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:25">thread_context</name><index pos:start="67:26" pos:end="67:28">[<expr pos:start="67:27" pos:end="67:27"><literal type="number" pos:start="67:27" pos:end="67:27">0</literal></expr>]</index></name> <operator pos:start="67:30" pos:end="67:30">=</operator> <name pos:start="67:32" pos:end="67:32">h</name></expr>;</expr_stmt>



        <comment type="line" pos:start="71:9" pos:end="71:94">// frame_start may not be called for the next thread (if it's decoding a bottom field)</comment>

        <comment type="line" pos:start="73:9" pos:end="73:43">// so this has to be allocated here</comment>

        <expr_stmt pos:start="75:9" pos:end="75:59"><expr pos:start="75:9" pos:end="75:58"><name pos:start="75:9" pos:end="75:28"><name pos:start="75:9" pos:end="75:9">h</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:12">s</name><operator pos:start="75:13" pos:end="75:13">.</operator><name pos:start="75:14" pos:end="75:28">obmc_scratchpad</name></name> <operator pos:start="75:30" pos:end="75:30">=</operator> <call pos:start="75:32" pos:end="75:58"><name pos:start="75:32" pos:end="75:40">av_malloc</name><argument_list pos:start="75:41" pos:end="75:58">(<argument pos:start="75:42" pos:end="75:57"><expr pos:start="75:42" pos:end="75:57"><literal type="number" pos:start="75:42" pos:end="75:43">16</literal><operator pos:start="75:44" pos:end="75:44">*</operator><literal type="number" pos:start="75:45" pos:end="75:45">6</literal><operator pos:start="75:46" pos:end="75:46">*</operator><name pos:start="75:47" pos:end="75:57"><name pos:start="75:47" pos:end="75:47">s</name><operator pos:start="75:48" pos:end="75:49">-&gt;</operator><name pos:start="75:50" pos:end="75:57">linesize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="79:9" pos:end="79:35"><expr pos:start="79:9" pos:end="79:34"><call pos:start="79:9" pos:end="79:34"><name pos:start="79:9" pos:end="79:27"><name pos:start="79:9" pos:end="79:9">s</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:14">dsp</name><operator pos:start="79:15" pos:end="79:15">.</operator><name pos:start="79:16" pos:end="79:27">clear_blocks</name></name><argument_list pos:start="79:28" pos:end="79:34">(<argument pos:start="79:29" pos:end="79:33"><expr pos:start="79:29" pos:end="79:33"><name pos:start="79:29" pos:end="79:33"><name pos:start="79:29" pos:end="79:29">h</name><operator pos:start="79:30" pos:end="79:31">-&gt;</operator><name pos:start="79:32" pos:end="79:33">mb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:59"><expr pos:start="81:9" pos:end="81:58"><call pos:start="81:9" pos:end="81:58"><name pos:start="81:9" pos:end="81:27"><name pos:start="81:9" pos:end="81:9">s</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:14">dsp</name><operator pos:start="81:15" pos:end="81:15">.</operator><name pos:start="81:16" pos:end="81:27">clear_blocks</name></name><argument_list pos:start="81:28" pos:end="81:58">(<argument pos:start="81:29" pos:end="81:57"><expr pos:start="81:29" pos:end="81:57"><name pos:start="81:29" pos:end="81:33"><name pos:start="81:29" pos:end="81:29">h</name><operator pos:start="81:30" pos:end="81:31">-&gt;</operator><name pos:start="81:32" pos:end="81:33">mb</name></name><operator pos:start="81:34" pos:end="81:34">+</operator><operator pos:start="81:35" pos:end="81:35">(</operator><literal type="number" pos:start="81:36" pos:end="81:37">24</literal><operator pos:start="81:38" pos:end="81:38">*</operator><literal type="number" pos:start="81:39" pos:end="81:40">16</literal><operator pos:start="81:41" pos:end="81:42">&lt;&lt;</operator><name pos:start="81:43" pos:end="81:56"><name pos:start="81:43" pos:end="81:43">h</name><operator pos:start="81:44" pos:end="81:45">-&gt;</operator><name pos:start="81:46" pos:end="81:56">pixel_shift</name></name><operator pos:start="81:57" pos:end="81:57">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="87:5" pos:end="87:28">//extradata/NAL handling</comment>

    <expr_stmt pos:start="89:5" pos:end="89:36"><expr pos:start="89:5" pos:end="89:35"><name pos:start="89:5" pos:end="89:13"><name pos:start="89:5" pos:end="89:5">h</name><operator pos:start="89:6" pos:end="89:7">-&gt;</operator><name pos:start="89:8" pos:end="89:13">is_avc</name></name>          <operator pos:start="89:24" pos:end="89:24">=</operator> <name pos:start="89:26" pos:end="89:35"><name pos:start="89:26" pos:end="89:27">h1</name><operator pos:start="89:28" pos:end="89:29">-&gt;</operator><name pos:start="89:30" pos:end="89:35">is_avc</name></name></expr>;</expr_stmt>



    <comment type="line" pos:start="93:5" pos:end="93:13">//SPS/PPS</comment>

    <expr_stmt pos:start="95:5" pos:end="95:100"><expr pos:start="95:5" pos:end="95:99"><call pos:start="95:5" pos:end="95:99"><name pos:start="95:5" pos:end="95:22">copy_parameter_set</name><argument_list pos:start="95:23" pos:end="95:99">(<argument pos:start="95:24" pos:end="95:45"><expr pos:start="95:24" pos:end="95:45"><operator pos:start="95:24" pos:end="95:24">(</operator><name pos:start="95:25" pos:end="95:28">void</name><operator pos:start="95:29" pos:end="95:29">*</operator><operator pos:start="95:30" pos:end="95:30">*</operator><operator pos:start="95:31" pos:end="95:31">)</operator><name pos:start="95:32" pos:end="95:45"><name pos:start="95:32" pos:end="95:32">h</name><operator pos:start="95:33" pos:end="95:34">-&gt;</operator><name pos:start="95:35" pos:end="95:45">sps_buffers</name></name></expr></argument>, <argument pos:start="95:48" pos:end="95:70"><expr pos:start="95:48" pos:end="95:70"><operator pos:start="95:48" pos:end="95:48">(</operator><name pos:start="95:49" pos:end="95:52">void</name><operator pos:start="95:53" pos:end="95:53">*</operator><operator pos:start="95:54" pos:end="95:54">*</operator><operator pos:start="95:55" pos:end="95:55">)</operator><name pos:start="95:56" pos:end="95:70"><name pos:start="95:56" pos:end="95:57">h1</name><operator pos:start="95:58" pos:end="95:59">-&gt;</operator><name pos:start="95:60" pos:end="95:70">sps_buffers</name></name></expr></argument>, <argument pos:start="95:73" pos:end="95:85"><expr pos:start="95:73" pos:end="95:85"><name pos:start="95:73" pos:end="95:85">MAX_SPS_COUNT</name></expr></argument>, <argument pos:start="95:88" pos:end="95:98"><expr pos:start="95:88" pos:end="95:98"><sizeof pos:start="95:88" pos:end="95:98">sizeof<argument_list pos:start="95:94" pos:end="95:98">(<argument pos:start="95:95" pos:end="95:97"><expr pos:start="95:95" pos:end="95:97"><name pos:start="95:95" pos:end="95:97">SPS</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:33"><expr pos:start="97:5" pos:end="97:32"><name pos:start="97:5" pos:end="97:10"><name pos:start="97:5" pos:end="97:5">h</name><operator pos:start="97:6" pos:end="97:7">-&gt;</operator><name pos:start="97:8" pos:end="97:10">sps</name></name>             <operator pos:start="97:24" pos:end="97:24">=</operator> <name pos:start="97:26" pos:end="97:32"><name pos:start="97:26" pos:end="97:27">h1</name><operator pos:start="97:28" pos:end="97:29">-&gt;</operator><name pos:start="97:30" pos:end="97:32">sps</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:100"><expr pos:start="99:5" pos:end="99:99"><call pos:start="99:5" pos:end="99:99"><name pos:start="99:5" pos:end="99:22">copy_parameter_set</name><argument_list pos:start="99:23" pos:end="99:99">(<argument pos:start="99:24" pos:end="99:45"><expr pos:start="99:24" pos:end="99:45"><operator pos:start="99:24" pos:end="99:24">(</operator><name pos:start="99:25" pos:end="99:28">void</name><operator pos:start="99:29" pos:end="99:29">*</operator><operator pos:start="99:30" pos:end="99:30">*</operator><operator pos:start="99:31" pos:end="99:31">)</operator><name pos:start="99:32" pos:end="99:45"><name pos:start="99:32" pos:end="99:32">h</name><operator pos:start="99:33" pos:end="99:34">-&gt;</operator><name pos:start="99:35" pos:end="99:45">pps_buffers</name></name></expr></argument>, <argument pos:start="99:48" pos:end="99:70"><expr pos:start="99:48" pos:end="99:70"><operator pos:start="99:48" pos:end="99:48">(</operator><name pos:start="99:49" pos:end="99:52">void</name><operator pos:start="99:53" pos:end="99:53">*</operator><operator pos:start="99:54" pos:end="99:54">*</operator><operator pos:start="99:55" pos:end="99:55">)</operator><name pos:start="99:56" pos:end="99:70"><name pos:start="99:56" pos:end="99:57">h1</name><operator pos:start="99:58" pos:end="99:59">-&gt;</operator><name pos:start="99:60" pos:end="99:70">pps_buffers</name></name></expr></argument>, <argument pos:start="99:73" pos:end="99:85"><expr pos:start="99:73" pos:end="99:85"><name pos:start="99:73" pos:end="99:85">MAX_PPS_COUNT</name></expr></argument>, <argument pos:start="99:88" pos:end="99:98"><expr pos:start="99:88" pos:end="99:98"><sizeof pos:start="99:88" pos:end="99:98">sizeof<argument_list pos:start="99:94" pos:end="99:98">(<argument pos:start="99:95" pos:end="99:97"><expr pos:start="99:95" pos:end="99:97"><name pos:start="99:95" pos:end="99:97">PPS</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:33"><expr pos:start="101:5" pos:end="101:32"><name pos:start="101:5" pos:end="101:10"><name pos:start="101:5" pos:end="101:5">h</name><operator pos:start="101:6" pos:end="101:7">-&gt;</operator><name pos:start="101:8" pos:end="101:10">pps</name></name>             <operator pos:start="101:24" pos:end="101:24">=</operator> <name pos:start="101:26" pos:end="101:32"><name pos:start="101:26" pos:end="101:27">h1</name><operator pos:start="101:28" pos:end="101:29">-&gt;</operator><name pos:start="101:30" pos:end="101:32">pps</name></name></expr>;</expr_stmt>



    <comment type="line" pos:start="105:5" pos:end="105:29">//Dequantization matrices</comment>

    <comment type="line" pos:start="107:5" pos:end="107:69">//FIXME these are big - can they be only copied when PPS changes?</comment>

    <expr_stmt pos:start="109:5" pos:end="109:56"><expr pos:start="109:5" pos:end="109:55"><call pos:start="109:5" pos:end="109:55"><name pos:start="109:5" pos:end="109:15">copy_fields</name><argument_list pos:start="109:16" pos:end="109:55">(<argument pos:start="109:17" pos:end="109:17"><expr pos:start="109:17" pos:end="109:17"><name pos:start="109:17" pos:end="109:17">h</name></expr></argument>, <argument pos:start="109:20" pos:end="109:21"><expr pos:start="109:20" pos:end="109:21"><name pos:start="109:20" pos:end="109:21">h1</name></expr></argument>, <argument pos:start="109:24" pos:end="109:38"><expr pos:start="109:24" pos:end="109:38"><name pos:start="109:24" pos:end="109:38">dequant4_buffer</name></expr></argument>, <argument pos:start="109:41" pos:end="109:54"><expr pos:start="109:41" pos:end="109:54"><name pos:start="109:41" pos:end="109:54">dequant4_coeff</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="113:5" pos:end="115:104">for<control pos:start="113:8" pos:end="113:22">(<init pos:start="113:9" pos:end="113:12"><expr pos:start="113:9" pos:end="113:11"><name pos:start="113:9" pos:end="113:9">i</name><operator pos:start="113:10" pos:end="113:10">=</operator><literal type="number" pos:start="113:11" pos:end="113:11">0</literal></expr>;</init> <condition pos:start="113:14" pos:end="113:17"><expr pos:start="113:14" pos:end="113:16"><name pos:start="113:14" pos:end="113:14">i</name><operator pos:start="113:15" pos:end="113:15">&lt;</operator><literal type="number" pos:start="113:16" pos:end="113:16">6</literal></expr>;</condition> <incr pos:start="113:19" pos:end="113:21"><expr pos:start="113:19" pos:end="113:21"><name pos:start="113:19" pos:end="113:19">i</name><operator pos:start="113:20" pos:end="113:21">++</operator></expr></incr>)</control><block type="pseudo" pos:start="115:9" pos:end="115:104"><block_content pos:start="115:9" pos:end="115:104">

        <expr_stmt pos:start="115:9" pos:end="115:104"><expr pos:start="115:9" pos:end="115:103"><name pos:start="115:9" pos:end="115:28"><name pos:start="115:9" pos:end="115:9">h</name><operator pos:start="115:10" pos:end="115:11">-&gt;</operator><name pos:start="115:12" pos:end="115:25">dequant4_coeff</name><index pos:start="115:26" pos:end="115:28">[<expr pos:start="115:27" pos:end="115:27"><name pos:start="115:27" pos:end="115:27">i</name></expr>]</index></name> <operator pos:start="115:30" pos:end="115:30">=</operator> <name pos:start="115:32" pos:end="115:52"><name pos:start="115:32" pos:end="115:32">h</name><operator pos:start="115:33" pos:end="115:34">-&gt;</operator><name pos:start="115:35" pos:end="115:49">dequant4_buffer</name><index pos:start="115:50" pos:end="115:52">[<expr pos:start="115:51" pos:end="115:51"><literal type="number" pos:start="115:51" pos:end="115:51">0</literal></expr>]</index></name> <operator pos:start="115:54" pos:end="115:54">+</operator> <operator pos:start="115:56" pos:end="115:56">(</operator><name pos:start="115:57" pos:end="115:77"><name pos:start="115:57" pos:end="115:58">h1</name><operator pos:start="115:59" pos:end="115:60">-&gt;</operator><name pos:start="115:61" pos:end="115:74">dequant4_coeff</name><index pos:start="115:75" pos:end="115:77">[<expr pos:start="115:76" pos:end="115:76"><name pos:start="115:76" pos:end="115:76">i</name></expr>]</index></name> <operator pos:start="115:79" pos:end="115:79">-</operator> <name pos:start="115:81" pos:end="115:102"><name pos:start="115:81" pos:end="115:82">h1</name><operator pos:start="115:83" pos:end="115:84">-&gt;</operator><name pos:start="115:85" pos:end="115:99">dequant4_buffer</name><index pos:start="115:100" pos:end="115:102">[<expr pos:start="115:101" pos:end="115:101"><literal type="number" pos:start="115:101" pos:end="115:101">0</literal></expr>]</index></name><operator pos:start="115:103" pos:end="115:103">)</operator></expr>;</expr_stmt></block_content></block></for>



    <for pos:start="119:5" pos:end="121:104">for<control pos:start="119:8" pos:end="119:22">(<init pos:start="119:9" pos:end="119:12"><expr pos:start="119:9" pos:end="119:11"><name pos:start="119:9" pos:end="119:9">i</name><operator pos:start="119:10" pos:end="119:10">=</operator><literal type="number" pos:start="119:11" pos:end="119:11">0</literal></expr>;</init> <condition pos:start="119:14" pos:end="119:17"><expr pos:start="119:14" pos:end="119:16"><name pos:start="119:14" pos:end="119:14">i</name><operator pos:start="119:15" pos:end="119:15">&lt;</operator><literal type="number" pos:start="119:16" pos:end="119:16">6</literal></expr>;</condition> <incr pos:start="119:19" pos:end="119:21"><expr pos:start="119:19" pos:end="119:21"><name pos:start="119:19" pos:end="119:19">i</name><operator pos:start="119:20" pos:end="119:21">++</operator></expr></incr>)</control><block type="pseudo" pos:start="121:9" pos:end="121:104"><block_content pos:start="121:9" pos:end="121:104">

        <expr_stmt pos:start="121:9" pos:end="121:104"><expr pos:start="121:9" pos:end="121:103"><name pos:start="121:9" pos:end="121:28"><name pos:start="121:9" pos:end="121:9">h</name><operator pos:start="121:10" pos:end="121:11">-&gt;</operator><name pos:start="121:12" pos:end="121:25">dequant8_coeff</name><index pos:start="121:26" pos:end="121:28">[<expr pos:start="121:27" pos:end="121:27"><name pos:start="121:27" pos:end="121:27">i</name></expr>]</index></name> <operator pos:start="121:30" pos:end="121:30">=</operator> <name pos:start="121:32" pos:end="121:52"><name pos:start="121:32" pos:end="121:32">h</name><operator pos:start="121:33" pos:end="121:34">-&gt;</operator><name pos:start="121:35" pos:end="121:49">dequant8_buffer</name><index pos:start="121:50" pos:end="121:52">[<expr pos:start="121:51" pos:end="121:51"><literal type="number" pos:start="121:51" pos:end="121:51">0</literal></expr>]</index></name> <operator pos:start="121:54" pos:end="121:54">+</operator> <operator pos:start="121:56" pos:end="121:56">(</operator><name pos:start="121:57" pos:end="121:77"><name pos:start="121:57" pos:end="121:58">h1</name><operator pos:start="121:59" pos:end="121:60">-&gt;</operator><name pos:start="121:61" pos:end="121:74">dequant8_coeff</name><index pos:start="121:75" pos:end="121:77">[<expr pos:start="121:76" pos:end="121:76"><name pos:start="121:76" pos:end="121:76">i</name></expr>]</index></name> <operator pos:start="121:79" pos:end="121:79">-</operator> <name pos:start="121:81" pos:end="121:102"><name pos:start="121:81" pos:end="121:82">h1</name><operator pos:start="121:83" pos:end="121:84">-&gt;</operator><name pos:start="121:85" pos:end="121:99">dequant8_buffer</name><index pos:start="121:100" pos:end="121:102">[<expr pos:start="121:101" pos:end="121:101"><literal type="number" pos:start="121:101" pos:end="121:101">0</literal></expr>]</index></name><operator pos:start="121:103" pos:end="121:103">)</operator></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="125:5" pos:end="125:49"><expr pos:start="125:5" pos:end="125:48"><name pos:start="125:5" pos:end="125:24"><name pos:start="125:5" pos:end="125:5">h</name><operator pos:start="125:6" pos:end="125:7">-&gt;</operator><name pos:start="125:8" pos:end="125:24">dequant_coeff_pps</name></name> <operator pos:start="125:26" pos:end="125:26">=</operator> <name pos:start="125:28" pos:end="125:48"><name pos:start="125:28" pos:end="125:29">h1</name><operator pos:start="125:30" pos:end="125:31">-&gt;</operator><name pos:start="125:32" pos:end="125:48">dequant_coeff_pps</name></name></expr>;</expr_stmt>



    <comment type="line" pos:start="129:5" pos:end="129:16">//POC timing</comment>

    <expr_stmt pos:start="131:5" pos:end="131:53"><expr pos:start="131:5" pos:end="131:52"><call pos:start="131:5" pos:end="131:52"><name pos:start="131:5" pos:end="131:15">copy_fields</name><argument_list pos:start="131:16" pos:end="131:52">(<argument pos:start="131:17" pos:end="131:17"><expr pos:start="131:17" pos:end="131:17"><name pos:start="131:17" pos:end="131:17">h</name></expr></argument>, <argument pos:start="131:20" pos:end="131:21"><expr pos:start="131:20" pos:end="131:21"><name pos:start="131:20" pos:end="131:21">h1</name></expr></argument>, <argument pos:start="131:24" pos:end="131:30"><expr pos:start="131:24" pos:end="131:30"><name pos:start="131:24" pos:end="131:30">poc_lsb</name></expr></argument>, <argument pos:start="131:33" pos:end="131:51"><expr pos:start="131:33" pos:end="131:51"><name pos:start="131:33" pos:end="131:51">redundant_pic_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="135:5" pos:end="135:21">//reference lists</comment>

    <expr_stmt pos:start="137:5" pos:end="137:46"><expr pos:start="137:5" pos:end="137:45"><call pos:start="137:5" pos:end="137:45"><name pos:start="137:5" pos:end="137:15">copy_fields</name><argument_list pos:start="137:16" pos:end="137:45">(<argument pos:start="137:17" pos:end="137:17"><expr pos:start="137:17" pos:end="137:17"><name pos:start="137:17" pos:end="137:17">h</name></expr></argument>, <argument pos:start="137:20" pos:end="137:21"><expr pos:start="137:20" pos:end="137:21"><name pos:start="137:20" pos:end="137:21">h1</name></expr></argument>, <argument pos:start="137:24" pos:end="137:32"><expr pos:start="137:24" pos:end="137:32"><name pos:start="137:24" pos:end="137:32">ref_count</name></expr></argument>, <argument pos:start="137:35" pos:end="137:44"><expr pos:start="137:35" pos:end="137:44"><name pos:start="137:35" pos:end="137:44">list_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:44"><expr pos:start="139:5" pos:end="139:43"><call pos:start="139:5" pos:end="139:43"><name pos:start="139:5" pos:end="139:15">copy_fields</name><argument_list pos:start="139:16" pos:end="139:43">(<argument pos:start="139:17" pos:end="139:17"><expr pos:start="139:17" pos:end="139:17"><name pos:start="139:17" pos:end="139:17">h</name></expr></argument>, <argument pos:start="139:20" pos:end="139:21"><expr pos:start="139:20" pos:end="139:21"><name pos:start="139:20" pos:end="139:21">h1</name></expr></argument>, <argument pos:start="139:24" pos:end="139:31"><expr pos:start="139:24" pos:end="139:31"><name pos:start="139:24" pos:end="139:31">ref_list</name></expr></argument>,  <argument pos:start="139:35" pos:end="139:42"><expr pos:start="139:35" pos:end="139:42"><name pos:start="139:35" pos:end="139:42">intra_gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:50"><expr pos:start="141:5" pos:end="141:49"><call pos:start="141:5" pos:end="141:49"><name pos:start="141:5" pos:end="141:15">copy_fields</name><argument_list pos:start="141:16" pos:end="141:49">(<argument pos:start="141:17" pos:end="141:17"><expr pos:start="141:17" pos:end="141:17"><name pos:start="141:17" pos:end="141:17">h</name></expr></argument>, <argument pos:start="141:20" pos:end="141:21"><expr pos:start="141:20" pos:end="141:21"><name pos:start="141:20" pos:end="141:21">h1</name></expr></argument>, <argument pos:start="141:24" pos:end="141:32"><expr pos:start="141:24" pos:end="141:32"><name pos:start="141:24" pos:end="141:32">short_ref</name></expr></argument>, <argument pos:start="141:35" pos:end="141:48"><expr pos:start="141:35" pos:end="141:48"><name pos:start="141:35" pos:end="141:48">cabac_init_idc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="145:5" pos:end="145:67"><expr pos:start="145:5" pos:end="145:66"><call pos:start="145:5" pos:end="145:66"><name pos:start="145:5" pos:end="145:22">copy_picture_range</name><argument_list pos:start="145:23" pos:end="145:66">(<argument pos:start="145:24" pos:end="145:35"><expr pos:start="145:24" pos:end="145:35"><name pos:start="145:24" pos:end="145:35"><name pos:start="145:24" pos:end="145:24">h</name><operator pos:start="145:25" pos:end="145:26">-&gt;</operator><name pos:start="145:27" pos:end="145:35">short_ref</name></name></expr></argument>,   <argument pos:start="145:40" pos:end="145:52"><expr pos:start="145:40" pos:end="145:52"><name pos:start="145:40" pos:end="145:52"><name pos:start="145:40" pos:end="145:41">h1</name><operator pos:start="145:42" pos:end="145:43">-&gt;</operator><name pos:start="145:44" pos:end="145:52">short_ref</name></name></expr></argument>,   <argument pos:start="145:57" pos:end="145:58"><expr pos:start="145:57" pos:end="145:58"><literal type="number" pos:start="145:57" pos:end="145:58">32</literal></expr></argument>, <argument pos:start="145:61" pos:end="145:61"><expr pos:start="145:61" pos:end="145:61"><name pos:start="145:61" pos:end="145:61">s</name></expr></argument>, <argument pos:start="145:64" pos:end="145:65"><expr pos:start="145:64" pos:end="145:65"><name pos:start="145:64" pos:end="145:65">s1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:67"><expr pos:start="147:5" pos:end="147:66"><call pos:start="147:5" pos:end="147:66"><name pos:start="147:5" pos:end="147:22">copy_picture_range</name><argument_list pos:start="147:23" pos:end="147:66">(<argument pos:start="147:24" pos:end="147:34"><expr pos:start="147:24" pos:end="147:34"><name pos:start="147:24" pos:end="147:34"><name pos:start="147:24" pos:end="147:24">h</name><operator pos:start="147:25" pos:end="147:26">-&gt;</operator><name pos:start="147:27" pos:end="147:34">long_ref</name></name></expr></argument>,    <argument pos:start="147:40" pos:end="147:51"><expr pos:start="147:40" pos:end="147:51"><name pos:start="147:40" pos:end="147:51"><name pos:start="147:40" pos:end="147:41">h1</name><operator pos:start="147:42" pos:end="147:43">-&gt;</operator><name pos:start="147:44" pos:end="147:51">long_ref</name></name></expr></argument>,    <argument pos:start="147:57" pos:end="147:58"><expr pos:start="147:57" pos:end="147:58"><literal type="number" pos:start="147:57" pos:end="147:58">32</literal></expr></argument>, <argument pos:start="147:61" pos:end="147:61"><expr pos:start="147:61" pos:end="147:61"><name pos:start="147:61" pos:end="147:61">s</name></expr></argument>, <argument pos:start="147:64" pos:end="147:65"><expr pos:start="147:64" pos:end="147:65"><name pos:start="147:64" pos:end="147:65">s1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:88"><expr pos:start="149:5" pos:end="149:87"><call pos:start="149:5" pos:end="149:87"><name pos:start="149:5" pos:end="149:22">copy_picture_range</name><argument_list pos:start="149:23" pos:end="149:87">(<argument pos:start="149:24" pos:end="149:37"><expr pos:start="149:24" pos:end="149:37"><name pos:start="149:24" pos:end="149:37"><name pos:start="149:24" pos:end="149:24">h</name><operator pos:start="149:25" pos:end="149:26">-&gt;</operator><name pos:start="149:27" pos:end="149:37">delayed_pic</name></name></expr></argument>, <argument pos:start="149:40" pos:end="149:54"><expr pos:start="149:40" pos:end="149:54"><name pos:start="149:40" pos:end="149:54"><name pos:start="149:40" pos:end="149:41">h1</name><operator pos:start="149:42" pos:end="149:43">-&gt;</operator><name pos:start="149:44" pos:end="149:54">delayed_pic</name></name></expr></argument>, <argument pos:start="149:57" pos:end="149:79"><expr pos:start="149:57" pos:end="149:79"><name pos:start="149:57" pos:end="149:77">MAX_DELAYED_PIC_COUNT</name><operator pos:start="149:78" pos:end="149:78">+</operator><literal type="number" pos:start="149:79" pos:end="149:79">2</literal></expr></argument>, <argument pos:start="149:82" pos:end="149:82"><expr pos:start="149:82" pos:end="149:82"><name pos:start="149:82" pos:end="149:82">s</name></expr></argument>, <argument pos:start="149:85" pos:end="149:86"><expr pos:start="149:85" pos:end="149:86"><name pos:start="149:85" pos:end="149:86">s1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="153:5" pos:end="153:45"><expr pos:start="153:5" pos:end="153:44"><name pos:start="153:5" pos:end="153:22"><name pos:start="153:5" pos:end="153:5">h</name><operator pos:start="153:6" pos:end="153:7">-&gt;</operator><name pos:start="153:8" pos:end="153:22">last_slice_type</name></name> <operator pos:start="153:24" pos:end="153:24">=</operator> <name pos:start="153:26" pos:end="153:44"><name pos:start="153:26" pos:end="153:27">h1</name><operator pos:start="153:28" pos:end="153:29">-&gt;</operator><name pos:start="153:30" pos:end="153:44">last_slice_type</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:34"><expr pos:start="155:5" pos:end="155:33"><name pos:start="155:5" pos:end="155:11"><name pos:start="155:5" pos:end="155:5">h</name><operator pos:start="155:6" pos:end="155:7">-&gt;</operator><name pos:start="155:8" pos:end="155:11">sync</name></name>            <operator pos:start="155:24" pos:end="155:24">=</operator> <name pos:start="155:26" pos:end="155:33"><name pos:start="155:26" pos:end="155:27">h1</name><operator pos:start="155:28" pos:end="155:29">-&gt;</operator><name pos:start="155:30" pos:end="155:33">sync</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="159:5" pos:end="159:41"><if pos:start="159:5" pos:end="159:41">if<condition pos:start="159:7" pos:end="159:31">(<expr pos:start="159:8" pos:end="159:30"><operator pos:start="159:8" pos:end="159:8">!</operator><name pos:start="159:9" pos:end="159:30"><name pos:start="159:9" pos:end="159:9">s</name><operator pos:start="159:10" pos:end="159:11">-&gt;</operator><name pos:start="159:12" pos:end="159:30">current_picture_ptr</name></name></expr>)</condition><block type="pseudo" pos:start="159:33" pos:end="159:41"><block_content pos:start="159:33" pos:end="159:41"> <return pos:start="159:33" pos:end="159:41">return <expr pos:start="159:40" pos:end="159:40"><literal type="number" pos:start="159:40" pos:end="159:40">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="163:5" pos:end="171:5"><if pos:start="163:5" pos:end="171:5">if<condition pos:start="163:7" pos:end="163:20">(<expr pos:start="163:8" pos:end="163:19"><operator pos:start="163:8" pos:end="163:8">!</operator><name pos:start="163:9" pos:end="163:19"><name pos:start="163:9" pos:end="163:9">s</name><operator pos:start="163:10" pos:end="163:11">-&gt;</operator><name pos:start="163:12" pos:end="163:19">dropable</name></name></expr>)</condition> <block pos:start="163:22" pos:end="171:5">{<block_content pos:start="165:9" pos:end="169:41">

        <expr_stmt pos:start="165:9" pos:end="165:73"><expr pos:start="165:9" pos:end="165:72"><name pos:start="165:9" pos:end="165:11">err</name> <operator pos:start="165:13" pos:end="165:13">=</operator> <call pos:start="165:15" pos:end="165:72"><name pos:start="165:15" pos:end="165:45">ff_h264_execute_ref_pic_marking</name><argument_list pos:start="165:46" pos:end="165:72">(<argument pos:start="165:47" pos:end="165:47"><expr pos:start="165:47" pos:end="165:47"><name pos:start="165:47" pos:end="165:47">h</name></expr></argument>, <argument pos:start="165:50" pos:end="165:56"><expr pos:start="165:50" pos:end="165:56"><name pos:start="165:50" pos:end="165:56"><name pos:start="165:50" pos:end="165:50">h</name><operator pos:start="165:51" pos:end="165:52">-&gt;</operator><name pos:start="165:53" pos:end="165:56">mmco</name></name></expr></argument>, <argument pos:start="165:59" pos:end="165:71"><expr pos:start="165:59" pos:end="165:71"><name pos:start="165:59" pos:end="165:71"><name pos:start="165:59" pos:end="165:59">h</name><operator pos:start="165:60" pos:end="165:61">-&gt;</operator><name pos:start="165:62" pos:end="165:71">mmco_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:41"><expr pos:start="167:9" pos:end="167:40"><name pos:start="167:9" pos:end="167:23"><name pos:start="167:9" pos:end="167:9">h</name><operator pos:start="167:10" pos:end="167:11">-&gt;</operator><name pos:start="167:12" pos:end="167:23">prev_poc_msb</name></name>     <operator pos:start="167:29" pos:end="167:29">=</operator> <name pos:start="167:31" pos:end="167:40"><name pos:start="167:31" pos:end="167:31">h</name><operator pos:start="167:32" pos:end="167:33">-&gt;</operator><name pos:start="167:34" pos:end="167:40">poc_msb</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:41"><expr pos:start="169:9" pos:end="169:40"><name pos:start="169:9" pos:end="169:23"><name pos:start="169:9" pos:end="169:9">h</name><operator pos:start="169:10" pos:end="169:11">-&gt;</operator><name pos:start="169:12" pos:end="169:23">prev_poc_lsb</name></name>     <operator pos:start="169:29" pos:end="169:29">=</operator> <name pos:start="169:31" pos:end="169:40"><name pos:start="169:31" pos:end="169:31">h</name><operator pos:start="169:32" pos:end="169:33">-&gt;</operator><name pos:start="169:34" pos:end="169:40">poc_lsb</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="173:5" pos:end="173:50"><expr pos:start="173:5" pos:end="173:49"><name pos:start="173:5" pos:end="173:28"><name pos:start="173:5" pos:end="173:5">h</name><operator pos:start="173:6" pos:end="173:7">-&gt;</operator><name pos:start="173:8" pos:end="173:28">prev_frame_num_offset</name></name><operator pos:start="173:29" pos:end="173:29">=</operator> <name pos:start="173:31" pos:end="173:49"><name pos:start="173:31" pos:end="173:31">h</name><operator pos:start="173:32" pos:end="173:33">-&gt;</operator><name pos:start="173:34" pos:end="173:49">frame_num_offset</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="175:5" pos:end="175:43"><expr pos:start="175:5" pos:end="175:42"><name pos:start="175:5" pos:end="175:21"><name pos:start="175:5" pos:end="175:5">h</name><operator pos:start="175:6" pos:end="175:7">-&gt;</operator><name pos:start="175:8" pos:end="175:21">prev_frame_num</name></name>       <operator pos:start="175:29" pos:end="175:29">=</operator> <name pos:start="175:31" pos:end="175:42"><name pos:start="175:31" pos:end="175:31">h</name><operator pos:start="175:32" pos:end="175:33">-&gt;</operator><name pos:start="175:34" pos:end="175:42">frame_num</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="177:5" pos:end="177:51"><expr pos:start="177:5" pos:end="177:50"><name pos:start="177:5" pos:end="177:19"><name pos:start="177:5" pos:end="177:5">h</name><operator pos:start="177:6" pos:end="177:7">-&gt;</operator><name pos:start="177:8" pos:end="177:19">outputed_poc</name></name>         <operator pos:start="177:29" pos:end="177:29">=</operator> <name pos:start="177:31" pos:end="177:50"><name pos:start="177:31" pos:end="177:31">h</name><operator pos:start="177:32" pos:end="177:33">-&gt;</operator><name pos:start="177:34" pos:end="177:50">next_outputed_poc</name></name></expr>;</expr_stmt>



    <return pos:start="181:5" pos:end="181:15">return <expr pos:start="181:12" pos:end="181:14"><name pos:start="181:12" pos:end="181:14">err</name></expr>;</return>

</block_content>}</block></function>
</unit>
