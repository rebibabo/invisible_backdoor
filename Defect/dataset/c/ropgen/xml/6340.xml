<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6340.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:54"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">set_year_20xx</name><parameter_list pos:start="1:26" pos:end="1:31">(<parameter pos:start="1:27" pos:end="1:30"><decl pos:start="1:27" pos:end="1:30"><type pos:start="1:27" pos:end="1:30"><name pos:start="1:27" pos:end="1:30">void</name></type></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="41:54">{<block_content pos:start="4:5" pos:end="41:54">
    <comment type="block" pos:start="3:5" pos:end="3:22">/* Set BCD mode */</comment>
    <expr_stmt pos:start="4:5" pos:end="4:60"><expr pos:start="4:5" pos:end="4:59"><call pos:start="4:5" pos:end="4:59"><name pos:start="4:5" pos:end="4:14">cmos_write</name><argument_list pos:start="4:15" pos:end="4:59">(<argument pos:start="4:16" pos:end="4:24"><expr pos:start="4:16" pos:end="4:24"><name pos:start="4:16" pos:end="4:24">RTC_REG_B</name></expr></argument>, <argument pos:start="4:27" pos:end="4:58"><expr pos:start="4:27" pos:end="4:58"><call pos:start="4:27" pos:end="4:46"><name pos:start="4:27" pos:end="4:35">cmos_read</name><argument_list pos:start="4:36" pos:end="4:46">(<argument pos:start="4:37" pos:end="4:45"><expr pos:start="4:37" pos:end="4:45"><name pos:start="4:37" pos:end="4:45">RTC_REG_B</name></expr></argument>)</argument_list></call> <operator pos:start="4:48" pos:end="4:48">&amp;</operator> <operator pos:start="4:50" pos:end="4:50">~</operator><name pos:start="4:51" pos:end="4:58">REG_B_DM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="5:5" pos:end="5:32"><expr pos:start="5:5" pos:end="5:31"><call pos:start="5:5" pos:end="5:31"><name pos:start="5:5" pos:end="5:14">cmos_write</name><argument_list pos:start="5:15" pos:end="5:31">(<argument pos:start="5:16" pos:end="5:24"><expr pos:start="5:16" pos:end="5:24"><name pos:start="5:16" pos:end="5:24">RTC_REG_A</name></expr></argument>, <argument pos:start="5:27" pos:end="5:30"><expr pos:start="5:27" pos:end="5:30"><literal type="number" pos:start="5:27" pos:end="5:30">0x76</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:31"><expr pos:start="6:5" pos:end="6:30"><call pos:start="6:5" pos:end="6:30"><name pos:start="6:5" pos:end="6:14">cmos_write</name><argument_list pos:start="6:15" pos:end="6:30">(<argument pos:start="6:16" pos:end="6:23"><expr pos:start="6:16" pos:end="6:23"><name pos:start="6:16" pos:end="6:23">RTC_YEAR</name></expr></argument>, <argument pos:start="6:26" pos:end="6:29"><expr pos:start="6:26" pos:end="6:29"><literal type="number" pos:start="6:26" pos:end="6:29">0x11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:34"><expr pos:start="7:5" pos:end="7:33"><call pos:start="7:5" pos:end="7:33"><name pos:start="7:5" pos:end="7:14">cmos_write</name><argument_list pos:start="7:15" pos:end="7:33">(<argument pos:start="7:16" pos:end="7:26"><expr pos:start="7:16" pos:end="7:26"><name pos:start="7:16" pos:end="7:26">RTC_CENTURY</name></expr></argument>, <argument pos:start="7:29" pos:end="7:32"><expr pos:start="7:29" pos:end="7:32"><literal type="number" pos:start="7:29" pos:end="7:32">0x20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:32"><expr pos:start="8:5" pos:end="8:31"><call pos:start="8:5" pos:end="8:31"><name pos:start="8:5" pos:end="8:14">cmos_write</name><argument_list pos:start="8:15" pos:end="8:31">(<argument pos:start="8:16" pos:end="8:24"><expr pos:start="8:16" pos:end="8:24"><name pos:start="8:16" pos:end="8:24">RTC_MONTH</name></expr></argument>, <argument pos:start="8:27" pos:end="8:30"><expr pos:start="8:27" pos:end="8:30"><literal type="number" pos:start="8:27" pos:end="8:30">0x02</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:39"><expr pos:start="9:5" pos:end="9:38"><call pos:start="9:5" pos:end="9:38"><name pos:start="9:5" pos:end="9:14">cmos_write</name><argument_list pos:start="9:15" pos:end="9:38">(<argument pos:start="9:16" pos:end="9:31"><expr pos:start="9:16" pos:end="9:31"><name pos:start="9:16" pos:end="9:31">RTC_DAY_OF_MONTH</name></expr></argument>, <argument pos:start="9:34" pos:end="9:37"><expr pos:start="9:34" pos:end="9:37"><literal type="number" pos:start="9:34" pos:end="9:37">0x02</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:32"><expr pos:start="10:5" pos:end="10:31"><call pos:start="10:5" pos:end="10:31"><name pos:start="10:5" pos:end="10:14">cmos_write</name><argument_list pos:start="10:15" pos:end="10:31">(<argument pos:start="10:16" pos:end="10:24"><expr pos:start="10:16" pos:end="10:24"><name pos:start="10:16" pos:end="10:24">RTC_HOURS</name></expr></argument>, <argument pos:start="10:27" pos:end="10:30"><expr pos:start="10:27" pos:end="10:30"><literal type="number" pos:start="10:27" pos:end="10:30">0x02</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:34"><expr pos:start="11:5" pos:end="11:33"><call pos:start="11:5" pos:end="11:33"><name pos:start="11:5" pos:end="11:14">cmos_write</name><argument_list pos:start="11:15" pos:end="11:33">(<argument pos:start="11:16" pos:end="11:26"><expr pos:start="11:16" pos:end="11:26"><name pos:start="11:16" pos:end="11:26">RTC_MINUTES</name></expr></argument>, <argument pos:start="11:29" pos:end="11:32"><expr pos:start="11:29" pos:end="11:32"><literal type="number" pos:start="11:29" pos:end="11:32">0x04</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:34"><expr pos:start="12:5" pos:end="12:33"><call pos:start="12:5" pos:end="12:33"><name pos:start="12:5" pos:end="12:14">cmos_write</name><argument_list pos:start="12:15" pos:end="12:33">(<argument pos:start="12:16" pos:end="12:26"><expr pos:start="12:16" pos:end="12:26"><name pos:start="12:16" pos:end="12:26">RTC_SECONDS</name></expr></argument>, <argument pos:start="12:29" pos:end="12:32"><expr pos:start="12:29" pos:end="12:32"><literal type="number" pos:start="12:29" pos:end="12:32">0x58</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:32"><expr pos:start="13:5" pos:end="13:31"><call pos:start="13:5" pos:end="13:31"><name pos:start="13:5" pos:end="13:14">cmos_write</name><argument_list pos:start="13:15" pos:end="13:31">(<argument pos:start="13:16" pos:end="13:24"><expr pos:start="13:16" pos:end="13:24"><name pos:start="13:16" pos:end="13:24">RTC_REG_A</name></expr></argument>, <argument pos:start="13:27" pos:end="13:30"><expr pos:start="13:27" pos:end="13:30"><literal type="number" pos:start="13:27" pos:end="13:30">0x26</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="14:5" pos:end="14:52"><expr pos:start="14:5" pos:end="14:51"><call pos:start="14:5" pos:end="14:51"><name pos:start="14:5" pos:end="14:19">g_assert_cmpint</name><argument_list pos:start="14:20" pos:end="14:51">(<argument pos:start="14:21" pos:end="14:40"><expr pos:start="14:21" pos:end="14:40"><call pos:start="14:21" pos:end="14:40"><name pos:start="14:21" pos:end="14:29">cmos_read</name><argument_list pos:start="14:30" pos:end="14:40">(<argument pos:start="14:31" pos:end="14:39"><expr pos:start="14:31" pos:end="14:39"><name pos:start="14:31" pos:end="14:39">RTC_HOURS</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="14:43" pos:end="14:44"><expr pos:start="14:43" pos:end="14:44"><operator pos:start="14:43" pos:end="14:44">==</operator></expr></argument>, <argument pos:start="14:47" pos:end="14:50"><expr pos:start="14:47" pos:end="14:50"><literal type="number" pos:start="14:47" pos:end="14:50">0x02</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:54"><expr pos:start="15:5" pos:end="15:53"><call pos:start="15:5" pos:end="15:53"><name pos:start="15:5" pos:end="15:19">g_assert_cmpint</name><argument_list pos:start="15:20" pos:end="15:53">(<argument pos:start="15:21" pos:end="15:42"><expr pos:start="15:21" pos:end="15:42"><call pos:start="15:21" pos:end="15:42"><name pos:start="15:21" pos:end="15:29">cmos_read</name><argument_list pos:start="15:30" pos:end="15:42">(<argument pos:start="15:31" pos:end="15:41"><expr pos:start="15:31" pos:end="15:41"><name pos:start="15:31" pos:end="15:41">RTC_MINUTES</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="15:45" pos:end="15:46"><expr pos:start="15:45" pos:end="15:46"><operator pos:start="15:45" pos:end="15:46">==</operator></expr></argument>, <argument pos:start="15:49" pos:end="15:52"><expr pos:start="15:49" pos:end="15:52"><literal type="number" pos:start="15:49" pos:end="15:52">0x04</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:54"><expr pos:start="16:5" pos:end="16:53"><call pos:start="16:5" pos:end="16:53"><name pos:start="16:5" pos:end="16:19">g_assert_cmpint</name><argument_list pos:start="16:20" pos:end="16:53">(<argument pos:start="16:21" pos:end="16:42"><expr pos:start="16:21" pos:end="16:42"><call pos:start="16:21" pos:end="16:42"><name pos:start="16:21" pos:end="16:29">cmos_read</name><argument_list pos:start="16:30" pos:end="16:42">(<argument pos:start="16:31" pos:end="16:41"><expr pos:start="16:31" pos:end="16:41"><name pos:start="16:31" pos:end="16:41">RTC_SECONDS</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="16:45" pos:end="16:46"><expr pos:start="16:45" pos:end="16:46"><operator pos:start="16:45" pos:end="16:46">&gt;=</operator></expr></argument>, <argument pos:start="16:49" pos:end="16:52"><expr pos:start="16:49" pos:end="16:52"><literal type="number" pos:start="16:49" pos:end="16:52">0x58</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="17:5" pos:end="17:59"><expr pos:start="17:5" pos:end="17:58"><call pos:start="17:5" pos:end="17:58"><name pos:start="17:5" pos:end="17:19">g_assert_cmpint</name><argument_list pos:start="17:20" pos:end="17:58">(<argument pos:start="17:21" pos:end="17:47"><expr pos:start="17:21" pos:end="17:47"><call pos:start="17:21" pos:end="17:47"><name pos:start="17:21" pos:end="17:29">cmos_read</name><argument_list pos:start="17:30" pos:end="17:47">(<argument pos:start="17:31" pos:end="17:46"><expr pos:start="17:31" pos:end="17:46"><name pos:start="17:31" pos:end="17:46">RTC_DAY_OF_MONTH</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="17:50" pos:end="17:51"><expr pos:start="17:50" pos:end="17:51"><operator pos:start="17:50" pos:end="17:51">==</operator></expr></argument>, <argument pos:start="17:54" pos:end="17:57"><expr pos:start="17:54" pos:end="17:57"><literal type="number" pos:start="17:54" pos:end="17:57">0x02</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:52"><expr pos:start="18:5" pos:end="18:51"><call pos:start="18:5" pos:end="18:51"><name pos:start="18:5" pos:end="18:19">g_assert_cmpint</name><argument_list pos:start="18:20" pos:end="18:51">(<argument pos:start="18:21" pos:end="18:40"><expr pos:start="18:21" pos:end="18:40"><call pos:start="18:21" pos:end="18:40"><name pos:start="18:21" pos:end="18:29">cmos_read</name><argument_list pos:start="18:30" pos:end="18:40">(<argument pos:start="18:31" pos:end="18:39"><expr pos:start="18:31" pos:end="18:39"><name pos:start="18:31" pos:end="18:39">RTC_MONTH</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="18:43" pos:end="18:44"><expr pos:start="18:43" pos:end="18:44"><operator pos:start="18:43" pos:end="18:44">==</operator></expr></argument>, <argument pos:start="18:47" pos:end="18:50"><expr pos:start="18:47" pos:end="18:50"><literal type="number" pos:start="18:47" pos:end="18:50">0x02</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="19:5" pos:end="19:51"><expr pos:start="19:5" pos:end="19:50"><call pos:start="19:5" pos:end="19:50"><name pos:start="19:5" pos:end="19:19">g_assert_cmpint</name><argument_list pos:start="19:20" pos:end="19:50">(<argument pos:start="19:21" pos:end="19:39"><expr pos:start="19:21" pos:end="19:39"><call pos:start="19:21" pos:end="19:39"><name pos:start="19:21" pos:end="19:29">cmos_read</name><argument_list pos:start="19:30" pos:end="19:39">(<argument pos:start="19:31" pos:end="19:38"><expr pos:start="19:31" pos:end="19:38"><name pos:start="19:31" pos:end="19:38">RTC_YEAR</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="19:42" pos:end="19:43"><expr pos:start="19:42" pos:end="19:43"><operator pos:start="19:42" pos:end="19:43">==</operator></expr></argument>, <argument pos:start="19:46" pos:end="19:49"><expr pos:start="19:46" pos:end="19:49"><literal type="number" pos:start="19:46" pos:end="19:49">0x11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="20:5" pos:end="20:54"><expr pos:start="20:5" pos:end="20:53"><call pos:start="20:5" pos:end="20:53"><name pos:start="20:5" pos:end="20:19">g_assert_cmpint</name><argument_list pos:start="20:20" pos:end="20:53">(<argument pos:start="20:21" pos:end="20:42"><expr pos:start="20:21" pos:end="20:42"><call pos:start="20:21" pos:end="20:42"><name pos:start="20:21" pos:end="20:29">cmos_read</name><argument_list pos:start="20:30" pos:end="20:42">(<argument pos:start="20:31" pos:end="20:41"><expr pos:start="20:31" pos:end="20:41"><name pos:start="20:31" pos:end="20:41">RTC_CENTURY</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="20:45" pos:end="20:46"><expr pos:start="20:45" pos:end="20:46"><operator pos:start="20:45" pos:end="20:46">==</operator></expr></argument>, <argument pos:start="20:49" pos:end="20:52"><expr pos:start="20:49" pos:end="20:52"><literal type="number" pos:start="20:49" pos:end="20:52">0x20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="21:5" pos:end="21:71">/* Set a date in 2080 to ensure there is no year-2038 overflow.  */</comment>
    <expr_stmt pos:start="22:5" pos:end="22:32"><expr pos:start="22:5" pos:end="22:31"><call pos:start="22:5" pos:end="22:31"><name pos:start="22:5" pos:end="22:14">cmos_write</name><argument_list pos:start="22:15" pos:end="22:31">(<argument pos:start="22:16" pos:end="22:24"><expr pos:start="22:16" pos:end="22:24"><name pos:start="22:16" pos:end="22:24">RTC_REG_A</name></expr></argument>, <argument pos:start="22:27" pos:end="22:30"><expr pos:start="22:27" pos:end="22:30"><literal type="number" pos:start="22:27" pos:end="22:30">0x76</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:31"><expr pos:start="23:5" pos:end="23:30"><call pos:start="23:5" pos:end="23:30"><name pos:start="23:5" pos:end="23:14">cmos_write</name><argument_list pos:start="23:15" pos:end="23:30">(<argument pos:start="23:16" pos:end="23:23"><expr pos:start="23:16" pos:end="23:23"><name pos:start="23:16" pos:end="23:23">RTC_YEAR</name></expr></argument>, <argument pos:start="23:26" pos:end="23:29"><expr pos:start="23:26" pos:end="23:29"><literal type="number" pos:start="23:26" pos:end="23:29">0x80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="24:5" pos:end="24:32"><expr pos:start="24:5" pos:end="24:31"><call pos:start="24:5" pos:end="24:31"><name pos:start="24:5" pos:end="24:14">cmos_write</name><argument_list pos:start="24:15" pos:end="24:31">(<argument pos:start="24:16" pos:end="24:24"><expr pos:start="24:16" pos:end="24:24"><name pos:start="24:16" pos:end="24:24">RTC_REG_A</name></expr></argument>, <argument pos:start="24:27" pos:end="24:30"><expr pos:start="24:27" pos:end="24:30"><literal type="number" pos:start="24:27" pos:end="24:30">0x26</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="25:5" pos:end="25:52"><expr pos:start="25:5" pos:end="25:51"><call pos:start="25:5" pos:end="25:51"><name pos:start="25:5" pos:end="25:19">g_assert_cmpint</name><argument_list pos:start="25:20" pos:end="25:51">(<argument pos:start="25:21" pos:end="25:40"><expr pos:start="25:21" pos:end="25:40"><call pos:start="25:21" pos:end="25:40"><name pos:start="25:21" pos:end="25:29">cmos_read</name><argument_list pos:start="25:30" pos:end="25:40">(<argument pos:start="25:31" pos:end="25:39"><expr pos:start="25:31" pos:end="25:39"><name pos:start="25:31" pos:end="25:39">RTC_HOURS</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="25:43" pos:end="25:44"><expr pos:start="25:43" pos:end="25:44"><operator pos:start="25:43" pos:end="25:44">==</operator></expr></argument>, <argument pos:start="25:47" pos:end="25:50"><expr pos:start="25:47" pos:end="25:50"><literal type="number" pos:start="25:47" pos:end="25:50">0x02</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="26:5" pos:end="26:54"><expr pos:start="26:5" pos:end="26:53"><call pos:start="26:5" pos:end="26:53"><name pos:start="26:5" pos:end="26:19">g_assert_cmpint</name><argument_list pos:start="26:20" pos:end="26:53">(<argument pos:start="26:21" pos:end="26:42"><expr pos:start="26:21" pos:end="26:42"><call pos:start="26:21" pos:end="26:42"><name pos:start="26:21" pos:end="26:29">cmos_read</name><argument_list pos:start="26:30" pos:end="26:42">(<argument pos:start="26:31" pos:end="26:41"><expr pos:start="26:31" pos:end="26:41"><name pos:start="26:31" pos:end="26:41">RTC_MINUTES</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="26:45" pos:end="26:46"><expr pos:start="26:45" pos:end="26:46"><operator pos:start="26:45" pos:end="26:46">==</operator></expr></argument>, <argument pos:start="26:49" pos:end="26:52"><expr pos:start="26:49" pos:end="26:52"><literal type="number" pos:start="26:49" pos:end="26:52">0x04</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="27:5" pos:end="27:54"><expr pos:start="27:5" pos:end="27:53"><call pos:start="27:5" pos:end="27:53"><name pos:start="27:5" pos:end="27:19">g_assert_cmpint</name><argument_list pos:start="27:20" pos:end="27:53">(<argument pos:start="27:21" pos:end="27:42"><expr pos:start="27:21" pos:end="27:42"><call pos:start="27:21" pos:end="27:42"><name pos:start="27:21" pos:end="27:29">cmos_read</name><argument_list pos:start="27:30" pos:end="27:42">(<argument pos:start="27:31" pos:end="27:41"><expr pos:start="27:31" pos:end="27:41"><name pos:start="27:31" pos:end="27:41">RTC_SECONDS</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="27:45" pos:end="27:46"><expr pos:start="27:45" pos:end="27:46"><operator pos:start="27:45" pos:end="27:46">&gt;=</operator></expr></argument>, <argument pos:start="27:49" pos:end="27:52"><expr pos:start="27:49" pos:end="27:52"><literal type="number" pos:start="27:49" pos:end="27:52">0x58</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="28:5" pos:end="28:59"><expr pos:start="28:5" pos:end="28:58"><call pos:start="28:5" pos:end="28:58"><name pos:start="28:5" pos:end="28:19">g_assert_cmpint</name><argument_list pos:start="28:20" pos:end="28:58">(<argument pos:start="28:21" pos:end="28:47"><expr pos:start="28:21" pos:end="28:47"><call pos:start="28:21" pos:end="28:47"><name pos:start="28:21" pos:end="28:29">cmos_read</name><argument_list pos:start="28:30" pos:end="28:47">(<argument pos:start="28:31" pos:end="28:46"><expr pos:start="28:31" pos:end="28:46"><name pos:start="28:31" pos:end="28:46">RTC_DAY_OF_MONTH</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="28:50" pos:end="28:51"><expr pos:start="28:50" pos:end="28:51"><operator pos:start="28:50" pos:end="28:51">==</operator></expr></argument>, <argument pos:start="28:54" pos:end="28:57"><expr pos:start="28:54" pos:end="28:57"><literal type="number" pos:start="28:54" pos:end="28:57">0x02</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="29:5" pos:end="29:52"><expr pos:start="29:5" pos:end="29:51"><call pos:start="29:5" pos:end="29:51"><name pos:start="29:5" pos:end="29:19">g_assert_cmpint</name><argument_list pos:start="29:20" pos:end="29:51">(<argument pos:start="29:21" pos:end="29:40"><expr pos:start="29:21" pos:end="29:40"><call pos:start="29:21" pos:end="29:40"><name pos:start="29:21" pos:end="29:29">cmos_read</name><argument_list pos:start="29:30" pos:end="29:40">(<argument pos:start="29:31" pos:end="29:39"><expr pos:start="29:31" pos:end="29:39"><name pos:start="29:31" pos:end="29:39">RTC_MONTH</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="29:43" pos:end="29:44"><expr pos:start="29:43" pos:end="29:44"><operator pos:start="29:43" pos:end="29:44">==</operator></expr></argument>, <argument pos:start="29:47" pos:end="29:50"><expr pos:start="29:47" pos:end="29:50"><literal type="number" pos:start="29:47" pos:end="29:50">0x02</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="30:5" pos:end="30:51"><expr pos:start="30:5" pos:end="30:50"><call pos:start="30:5" pos:end="30:50"><name pos:start="30:5" pos:end="30:19">g_assert_cmpint</name><argument_list pos:start="30:20" pos:end="30:50">(<argument pos:start="30:21" pos:end="30:39"><expr pos:start="30:21" pos:end="30:39"><call pos:start="30:21" pos:end="30:39"><name pos:start="30:21" pos:end="30:29">cmos_read</name><argument_list pos:start="30:30" pos:end="30:39">(<argument pos:start="30:31" pos:end="30:38"><expr pos:start="30:31" pos:end="30:38"><name pos:start="30:31" pos:end="30:38">RTC_YEAR</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="30:42" pos:end="30:43"><expr pos:start="30:42" pos:end="30:43"><operator pos:start="30:42" pos:end="30:43">==</operator></expr></argument>, <argument pos:start="30:46" pos:end="30:49"><expr pos:start="30:46" pos:end="30:49"><literal type="number" pos:start="30:46" pos:end="30:49">0x80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="31:5" pos:end="31:54"><expr pos:start="31:5" pos:end="31:53"><call pos:start="31:5" pos:end="31:53"><name pos:start="31:5" pos:end="31:19">g_assert_cmpint</name><argument_list pos:start="31:20" pos:end="31:53">(<argument pos:start="31:21" pos:end="31:42"><expr pos:start="31:21" pos:end="31:42"><call pos:start="31:21" pos:end="31:42"><name pos:start="31:21" pos:end="31:29">cmos_read</name><argument_list pos:start="31:30" pos:end="31:42">(<argument pos:start="31:31" pos:end="31:41"><expr pos:start="31:31" pos:end="31:41"><name pos:start="31:31" pos:end="31:41">RTC_CENTURY</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="31:45" pos:end="31:46"><expr pos:start="31:45" pos:end="31:46"><operator pos:start="31:45" pos:end="31:46">==</operator></expr></argument>, <argument pos:start="31:49" pos:end="31:52"><expr pos:start="31:49" pos:end="31:52"><literal type="number" pos:start="31:49" pos:end="31:52">0x20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="32:5" pos:end="32:32"><expr pos:start="32:5" pos:end="32:31"><call pos:start="32:5" pos:end="32:31"><name pos:start="32:5" pos:end="32:14">cmos_write</name><argument_list pos:start="32:15" pos:end="32:31">(<argument pos:start="32:16" pos:end="32:24"><expr pos:start="32:16" pos:end="32:24"><name pos:start="32:16" pos:end="32:24">RTC_REG_A</name></expr></argument>, <argument pos:start="32:27" pos:end="32:30"><expr pos:start="32:27" pos:end="32:30"><literal type="number" pos:start="32:27" pos:end="32:30">0x76</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="33:5" pos:end="33:31"><expr pos:start="33:5" pos:end="33:30"><call pos:start="33:5" pos:end="33:30"><name pos:start="33:5" pos:end="33:14">cmos_write</name><argument_list pos:start="33:15" pos:end="33:30">(<argument pos:start="33:16" pos:end="33:23"><expr pos:start="33:16" pos:end="33:23"><name pos:start="33:16" pos:end="33:23">RTC_YEAR</name></expr></argument>, <argument pos:start="33:26" pos:end="33:29"><expr pos:start="33:26" pos:end="33:29"><literal type="number" pos:start="33:26" pos:end="33:29">0x11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="34:5" pos:end="34:32"><expr pos:start="34:5" pos:end="34:31"><call pos:start="34:5" pos:end="34:31"><name pos:start="34:5" pos:end="34:14">cmos_write</name><argument_list pos:start="34:15" pos:end="34:31">(<argument pos:start="34:16" pos:end="34:24"><expr pos:start="34:16" pos:end="34:24"><name pos:start="34:16" pos:end="34:24">RTC_REG_A</name></expr></argument>, <argument pos:start="34:27" pos:end="34:30"><expr pos:start="34:27" pos:end="34:30"><literal type="number" pos:start="34:27" pos:end="34:30">0x26</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="35:5" pos:end="35:52"><expr pos:start="35:5" pos:end="35:51"><call pos:start="35:5" pos:end="35:51"><name pos:start="35:5" pos:end="35:19">g_assert_cmpint</name><argument_list pos:start="35:20" pos:end="35:51">(<argument pos:start="35:21" pos:end="35:40"><expr pos:start="35:21" pos:end="35:40"><call pos:start="35:21" pos:end="35:40"><name pos:start="35:21" pos:end="35:29">cmos_read</name><argument_list pos:start="35:30" pos:end="35:40">(<argument pos:start="35:31" pos:end="35:39"><expr pos:start="35:31" pos:end="35:39"><name pos:start="35:31" pos:end="35:39">RTC_HOURS</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="35:43" pos:end="35:44"><expr pos:start="35:43" pos:end="35:44"><operator pos:start="35:43" pos:end="35:44">==</operator></expr></argument>, <argument pos:start="35:47" pos:end="35:50"><expr pos:start="35:47" pos:end="35:50"><literal type="number" pos:start="35:47" pos:end="35:50">0x02</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="36:5" pos:end="36:54"><expr pos:start="36:5" pos:end="36:53"><call pos:start="36:5" pos:end="36:53"><name pos:start="36:5" pos:end="36:19">g_assert_cmpint</name><argument_list pos:start="36:20" pos:end="36:53">(<argument pos:start="36:21" pos:end="36:42"><expr pos:start="36:21" pos:end="36:42"><call pos:start="36:21" pos:end="36:42"><name pos:start="36:21" pos:end="36:29">cmos_read</name><argument_list pos:start="36:30" pos:end="36:42">(<argument pos:start="36:31" pos:end="36:41"><expr pos:start="36:31" pos:end="36:41"><name pos:start="36:31" pos:end="36:41">RTC_MINUTES</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="36:45" pos:end="36:46"><expr pos:start="36:45" pos:end="36:46"><operator pos:start="36:45" pos:end="36:46">==</operator></expr></argument>, <argument pos:start="36:49" pos:end="36:52"><expr pos:start="36:49" pos:end="36:52"><literal type="number" pos:start="36:49" pos:end="36:52">0x04</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="37:5" pos:end="37:54"><expr pos:start="37:5" pos:end="37:53"><call pos:start="37:5" pos:end="37:53"><name pos:start="37:5" pos:end="37:19">g_assert_cmpint</name><argument_list pos:start="37:20" pos:end="37:53">(<argument pos:start="37:21" pos:end="37:42"><expr pos:start="37:21" pos:end="37:42"><call pos:start="37:21" pos:end="37:42"><name pos:start="37:21" pos:end="37:29">cmos_read</name><argument_list pos:start="37:30" pos:end="37:42">(<argument pos:start="37:31" pos:end="37:41"><expr pos:start="37:31" pos:end="37:41"><name pos:start="37:31" pos:end="37:41">RTC_SECONDS</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="37:45" pos:end="37:46"><expr pos:start="37:45" pos:end="37:46"><operator pos:start="37:45" pos:end="37:46">&gt;=</operator></expr></argument>, <argument pos:start="37:49" pos:end="37:52"><expr pos:start="37:49" pos:end="37:52"><literal type="number" pos:start="37:49" pos:end="37:52">0x58</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="38:5" pos:end="38:59"><expr pos:start="38:5" pos:end="38:58"><call pos:start="38:5" pos:end="38:58"><name pos:start="38:5" pos:end="38:19">g_assert_cmpint</name><argument_list pos:start="38:20" pos:end="38:58">(<argument pos:start="38:21" pos:end="38:47"><expr pos:start="38:21" pos:end="38:47"><call pos:start="38:21" pos:end="38:47"><name pos:start="38:21" pos:end="38:29">cmos_read</name><argument_list pos:start="38:30" pos:end="38:47">(<argument pos:start="38:31" pos:end="38:46"><expr pos:start="38:31" pos:end="38:46"><name pos:start="38:31" pos:end="38:46">RTC_DAY_OF_MONTH</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="38:50" pos:end="38:51"><expr pos:start="38:50" pos:end="38:51"><operator pos:start="38:50" pos:end="38:51">==</operator></expr></argument>, <argument pos:start="38:54" pos:end="38:57"><expr pos:start="38:54" pos:end="38:57"><literal type="number" pos:start="38:54" pos:end="38:57">0x02</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="39:5" pos:end="39:52"><expr pos:start="39:5" pos:end="39:51"><call pos:start="39:5" pos:end="39:51"><name pos:start="39:5" pos:end="39:19">g_assert_cmpint</name><argument_list pos:start="39:20" pos:end="39:51">(<argument pos:start="39:21" pos:end="39:40"><expr pos:start="39:21" pos:end="39:40"><call pos:start="39:21" pos:end="39:40"><name pos:start="39:21" pos:end="39:29">cmos_read</name><argument_list pos:start="39:30" pos:end="39:40">(<argument pos:start="39:31" pos:end="39:39"><expr pos:start="39:31" pos:end="39:39"><name pos:start="39:31" pos:end="39:39">RTC_MONTH</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="39:43" pos:end="39:44"><expr pos:start="39:43" pos:end="39:44"><operator pos:start="39:43" pos:end="39:44">==</operator></expr></argument>, <argument pos:start="39:47" pos:end="39:50"><expr pos:start="39:47" pos:end="39:50"><literal type="number" pos:start="39:47" pos:end="39:50">0x02</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="40:5" pos:end="40:51"><expr pos:start="40:5" pos:end="40:50"><call pos:start="40:5" pos:end="40:50"><name pos:start="40:5" pos:end="40:19">g_assert_cmpint</name><argument_list pos:start="40:20" pos:end="40:50">(<argument pos:start="40:21" pos:end="40:39"><expr pos:start="40:21" pos:end="40:39"><call pos:start="40:21" pos:end="40:39"><name pos:start="40:21" pos:end="40:29">cmos_read</name><argument_list pos:start="40:30" pos:end="40:39">(<argument pos:start="40:31" pos:end="40:38"><expr pos:start="40:31" pos:end="40:38"><name pos:start="40:31" pos:end="40:38">RTC_YEAR</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="40:42" pos:end="40:43"><expr pos:start="40:42" pos:end="40:43"><operator pos:start="40:42" pos:end="40:43">==</operator></expr></argument>, <argument pos:start="40:46" pos:end="40:49"><expr pos:start="40:46" pos:end="40:49"><literal type="number" pos:start="40:46" pos:end="40:49">0x11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="41:5" pos:end="41:54"><expr pos:start="41:5" pos:end="41:53"><call pos:start="41:5" pos:end="41:53"><name pos:start="41:5" pos:end="41:19">g_assert_cmpint</name><argument_list pos:start="41:20" pos:end="41:53">(<argument pos:start="41:21" pos:end="41:42"><expr pos:start="41:21" pos:end="41:42"><call pos:start="41:21" pos:end="41:42"><name pos:start="41:21" pos:end="41:29">cmos_read</name><argument_list pos:start="41:30" pos:end="41:42">(<argument pos:start="41:31" pos:end="41:41"><expr pos:start="41:31" pos:end="41:41"><name pos:start="41:31" pos:end="41:41">RTC_CENTURY</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="41:45" pos:end="41:46"><expr pos:start="41:45" pos:end="41:46"><operator pos:start="41:45" pos:end="41:46">==</operator></expr></argument>, <argument pos:start="41:49" pos:end="41:52"><expr pos:start="41:49" pos:end="41:52"><literal type="number" pos:start="41:49" pos:end="41:52">0x20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></function></unit>
