<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21157.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">dca_find_frame_end</name><parameter_list pos:start="1:30" pos:end="3:43">(<parameter pos:start="1:31" pos:end="1:51"><decl pos:start="1:31" pos:end="1:51"><type pos:start="1:31" pos:end="1:51"><name pos:start="1:31" pos:end="1:45">DCAParseContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type> <name pos:start="1:49" pos:end="1:51">pc1</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:72"><decl pos:start="1:54" pos:end="1:72"><type pos:start="1:54" pos:end="1:72"><specifier pos:start="1:54" pos:end="1:58">const</specifier> <name pos:start="1:60" pos:end="1:66">uint8_t</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type> <name pos:start="1:70" pos:end="1:72">buf</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:42"><decl pos:start="3:31" pos:end="3:42"><type pos:start="3:31" pos:end="3:42"><name pos:start="3:31" pos:end="3:33">int</name></type> <name pos:start="3:35" pos:end="3:42">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="91:1">{<block_content pos:start="7:5" pos:end="89:25">

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:19">start_found</name></decl>, <decl pos:start="7:22" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:22" pos:end="7:22">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:18">state</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:31"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">ParseContext</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:20">pc</name> <init pos:start="11:22" pos:end="11:31">= <expr pos:start="11:24" pos:end="11:31"><operator pos:start="11:24" pos:end="11:24">&amp;</operator><name pos:start="11:25" pos:end="11:31"><name pos:start="11:25" pos:end="11:27">pc1</name><operator pos:start="11:28" pos:end="11:29">-&gt;</operator><name pos:start="11:30" pos:end="11:31">pc</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:40"><expr pos:start="15:5" pos:end="15:39"><name pos:start="15:5" pos:end="15:15">start_found</name> <operator pos:start="15:17" pos:end="15:17">=</operator> <name pos:start="15:19" pos:end="15:39"><name pos:start="15:19" pos:end="15:20">pc</name><operator pos:start="15:21" pos:end="15:22">-&gt;</operator><name pos:start="15:23" pos:end="15:39">frame_start_found</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:22"><expr pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:9">state</name> <operator pos:start="17:11" pos:end="17:11">=</operator> <name pos:start="17:13" pos:end="17:21"><name pos:start="17:13" pos:end="17:14">pc</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:21">state</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:10"><expr pos:start="21:5" pos:end="21:9"><name pos:start="21:5" pos:end="21:5">i</name> <operator pos:start="21:7" pos:end="21:7">=</operator> <literal type="number" pos:start="21:9" pos:end="21:9">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="45:5"><if pos:start="23:5" pos:end="45:5">if <condition pos:start="23:8" pos:end="23:21">(<expr pos:start="23:9" pos:end="23:20"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:20">start_found</name></expr>)</condition> <block pos:start="23:23" pos:end="45:5">{<block_content pos:start="25:9" pos:end="43:9">

        <for pos:start="25:9" pos:end="43:9">for <control pos:start="25:13" pos:end="25:38">(<init pos:start="25:14" pos:end="25:19"><expr pos:start="25:14" pos:end="25:18"><name pos:start="25:14" pos:end="25:14">i</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <literal type="number" pos:start="25:18" pos:end="25:18">0</literal></expr>;</init> <condition pos:start="25:21" pos:end="25:33"><expr pos:start="25:21" pos:end="25:32"><name pos:start="25:21" pos:end="25:21">i</name> <operator pos:start="25:23" pos:end="25:23">&lt;</operator> <name pos:start="25:25" pos:end="25:32">buf_size</name></expr>;</condition> <incr pos:start="25:35" pos:end="25:37"><expr pos:start="25:35" pos:end="25:37"><name pos:start="25:35" pos:end="25:35">i</name><operator pos:start="25:36" pos:end="25:37">++</operator></expr></incr>)</control> <block pos:start="25:40" pos:end="43:9">{<block_content pos:start="27:13" pos:end="41:13">

            <expr_stmt pos:start="27:13" pos:end="27:42"><expr pos:start="27:13" pos:end="27:41"><name pos:start="27:13" pos:end="27:17">state</name> <operator pos:start="27:19" pos:end="27:19">=</operator> <operator pos:start="27:21" pos:end="27:21">(</operator><name pos:start="27:22" pos:end="27:26">state</name> <operator pos:start="27:28" pos:end="27:29">&lt;&lt;</operator> <literal type="number" pos:start="27:31" pos:end="27:31">8</literal><operator pos:start="27:32" pos:end="27:32">)</operator> <operator pos:start="27:34" pos:end="27:34">|</operator> <name pos:start="27:36" pos:end="27:41"><name pos:start="27:36" pos:end="27:38">buf</name><index pos:start="27:39" pos:end="27:41">[<expr pos:start="27:40" pos:end="27:40"><name pos:start="27:40" pos:end="27:40">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="29:13" pos:end="41:13"><if pos:start="29:13" pos:end="41:13">if <condition pos:start="29:16" pos:end="29:51">(<expr pos:start="29:17" pos:end="29:50"><call pos:start="29:17" pos:end="29:50"><name pos:start="29:17" pos:end="29:25">IS_MARKER</name><argument_list pos:start="29:26" pos:end="29:50">(<argument pos:start="29:27" pos:end="29:31"><expr pos:start="29:27" pos:end="29:31"><name pos:start="29:27" pos:end="29:31">state</name></expr></argument>, <argument pos:start="29:34" pos:end="29:34"><expr pos:start="29:34" pos:end="29:34"><name pos:start="29:34" pos:end="29:34">i</name></expr></argument>, <argument pos:start="29:37" pos:end="29:39"><expr pos:start="29:37" pos:end="29:39"><name pos:start="29:37" pos:end="29:39">buf</name></expr></argument>, <argument pos:start="29:42" pos:end="29:49"><expr pos:start="29:42" pos:end="29:49"><name pos:start="29:42" pos:end="29:49">buf_size</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:53" pos:end="41:13">{<block_content pos:start="31:17" pos:end="39:17">

                <if_stmt pos:start="31:17" pos:end="39:17"><if pos:start="31:17" pos:end="39:17">if <condition pos:start="31:20" pos:end="31:101">(<expr pos:start="31:21" pos:end="31:100"><operator pos:start="31:21" pos:end="31:21">!</operator><name pos:start="31:22" pos:end="31:36"><name pos:start="31:22" pos:end="31:24">pc1</name><operator pos:start="31:25" pos:end="31:26">-&gt;</operator><name pos:start="31:27" pos:end="31:36">lastmarker</name></name> <operator pos:start="31:38" pos:end="31:39">||</operator> <name pos:start="31:41" pos:end="31:45">state</name> <operator pos:start="31:47" pos:end="31:48">==</operator> <name pos:start="31:50" pos:end="31:64"><name pos:start="31:50" pos:end="31:52">pc1</name><operator pos:start="31:53" pos:end="31:54">-&gt;</operator><name pos:start="31:55" pos:end="31:64">lastmarker</name></name> <operator pos:start="31:66" pos:end="31:67">||</operator> <name pos:start="31:69" pos:end="31:83"><name pos:start="31:69" pos:end="31:71">pc1</name><operator pos:start="31:72" pos:end="31:73">-&gt;</operator><name pos:start="31:74" pos:end="31:83">lastmarker</name></name> <operator pos:start="31:85" pos:end="31:86">==</operator> <name pos:start="31:88" pos:end="31:100">DCA_HD_MARKER</name></expr>)</condition> <block pos:start="31:103" pos:end="39:17">{<block_content pos:start="33:21" pos:end="37:26">

                    <expr_stmt pos:start="33:21" pos:end="33:36"><expr pos:start="33:21" pos:end="33:35"><name pos:start="33:21" pos:end="33:31">start_found</name> <operator pos:start="33:33" pos:end="33:33">=</operator> <literal type="number" pos:start="33:35" pos:end="33:35">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="35:21" pos:end="35:44"><expr pos:start="35:21" pos:end="35:43"><name pos:start="35:21" pos:end="35:35"><name pos:start="35:21" pos:end="35:23">pc1</name><operator pos:start="35:24" pos:end="35:25">-&gt;</operator><name pos:start="35:26" pos:end="35:35">lastmarker</name></name> <operator pos:start="35:37" pos:end="35:37">=</operator> <name pos:start="35:39" pos:end="35:43">state</name></expr>;</expr_stmt>

                    <break pos:start="37:21" pos:end="37:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="47:5" pos:end="83:5"><if pos:start="47:5" pos:end="83:5">if <condition pos:start="47:8" pos:end="47:20">(<expr pos:start="47:9" pos:end="47:19"><name pos:start="47:9" pos:end="47:19">start_found</name></expr>)</condition> <block pos:start="47:22" pos:end="83:5">{<block_content pos:start="49:9" pos:end="81:9">

        <for pos:start="49:9" pos:end="81:9">for <control pos:start="49:13" pos:end="49:33">(<init pos:start="49:14" pos:end="49:14">;</init> <condition pos:start="49:16" pos:end="49:28"><expr pos:start="49:16" pos:end="49:27"><name pos:start="49:16" pos:end="49:16">i</name> <operator pos:start="49:18" pos:end="49:18">&lt;</operator> <name pos:start="49:20" pos:end="49:27">buf_size</name></expr>;</condition> <incr pos:start="49:30" pos:end="49:32"><expr pos:start="49:30" pos:end="49:32"><name pos:start="49:30" pos:end="49:30">i</name><operator pos:start="49:31" pos:end="49:32">++</operator></expr></incr>)</control> <block pos:start="49:35" pos:end="81:9">{<block_content pos:start="51:13" pos:end="79:13">

            <expr_stmt pos:start="51:13" pos:end="51:24"><expr pos:start="51:13" pos:end="51:23"><name pos:start="51:13" pos:end="51:21"><name pos:start="51:13" pos:end="51:15">pc1</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:21">size</name></name><operator pos:start="51:22" pos:end="51:23">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:42"><expr pos:start="53:13" pos:end="53:41"><name pos:start="53:13" pos:end="53:17">state</name> <operator pos:start="53:19" pos:end="53:19">=</operator> <operator pos:start="53:21" pos:end="53:21">(</operator><name pos:start="53:22" pos:end="53:26">state</name> <operator pos:start="53:28" pos:end="53:29">&lt;&lt;</operator> <literal type="number" pos:start="53:31" pos:end="53:31">8</literal><operator pos:start="53:32" pos:end="53:32">)</operator> <operator pos:start="53:34" pos:end="53:34">|</operator> <name pos:start="53:36" pos:end="53:41"><name pos:start="53:36" pos:end="53:38">buf</name><index pos:start="53:39" pos:end="53:41">[<expr pos:start="53:40" pos:end="53:40"><name pos:start="53:40" pos:end="53:40">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="55:13" pos:end="57:40"><if pos:start="55:13" pos:end="57:40">if <condition pos:start="55:16" pos:end="55:55">(<expr pos:start="55:17" pos:end="55:54"><name pos:start="55:17" pos:end="55:21">state</name> <operator pos:start="55:23" pos:end="55:24">==</operator> <name pos:start="55:26" pos:end="55:38">DCA_HD_MARKER</name> <operator pos:start="55:40" pos:end="55:41">&amp;&amp;</operator> <operator pos:start="55:43" pos:end="55:43">!</operator><name pos:start="55:44" pos:end="55:54"><name pos:start="55:44" pos:end="55:46">pc1</name><operator pos:start="55:47" pos:end="55:48">-&gt;</operator><name pos:start="55:49" pos:end="55:54">hd_pos</name></name></expr>)</condition><block type="pseudo" pos:start="57:17" pos:end="57:40"><block_content pos:start="57:17" pos:end="57:40">

                <expr_stmt pos:start="57:17" pos:end="57:40"><expr pos:start="57:17" pos:end="57:39"><name pos:start="57:17" pos:end="57:27"><name pos:start="57:17" pos:end="57:19">pc1</name><operator pos:start="57:20" pos:end="57:21">-&gt;</operator><name pos:start="57:22" pos:end="57:27">hd_pos</name></name> <operator pos:start="57:29" pos:end="57:29">=</operator> <name pos:start="57:31" pos:end="57:39"><name pos:start="57:31" pos:end="57:33">pc1</name><operator pos:start="57:34" pos:end="57:35">-&gt;</operator><name pos:start="57:36" pos:end="57:39">size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="59:13" pos:end="79:13"><if pos:start="59:13" pos:end="79:13">if <condition pos:start="59:16" pos:end="59:117">(<expr pos:start="59:17" pos:end="59:116"><call pos:start="59:17" pos:end="59:50"><name pos:start="59:17" pos:end="59:25">IS_MARKER</name><argument_list pos:start="59:26" pos:end="59:50">(<argument pos:start="59:27" pos:end="59:31"><expr pos:start="59:27" pos:end="59:31"><name pos:start="59:27" pos:end="59:31">state</name></expr></argument>, <argument pos:start="59:34" pos:end="59:34"><expr pos:start="59:34" pos:end="59:34"><name pos:start="59:34" pos:end="59:34">i</name></expr></argument>, <argument pos:start="59:37" pos:end="59:39"><expr pos:start="59:37" pos:end="59:39"><name pos:start="59:37" pos:end="59:39">buf</name></expr></argument>, <argument pos:start="59:42" pos:end="59:49"><expr pos:start="59:42" pos:end="59:49"><name pos:start="59:42" pos:end="59:49">buf_size</name></expr></argument>)</argument_list></call> <operator pos:start="59:52" pos:end="59:53">&amp;&amp;</operator> <operator pos:start="59:55" pos:end="59:55">(</operator><name pos:start="59:56" pos:end="59:60">state</name> <operator pos:start="59:62" pos:end="59:63">==</operator> <name pos:start="59:65" pos:end="59:79"><name pos:start="59:65" pos:end="59:67">pc1</name><operator pos:start="59:68" pos:end="59:69">-&gt;</operator><name pos:start="59:70" pos:end="59:79">lastmarker</name></name> <operator pos:start="59:81" pos:end="59:82">||</operator> <name pos:start="59:84" pos:end="59:98"><name pos:start="59:84" pos:end="59:86">pc1</name><operator pos:start="59:87" pos:end="59:88">-&gt;</operator><name pos:start="59:89" pos:end="59:98">lastmarker</name></name> <operator pos:start="59:100" pos:end="59:101">==</operator> <name pos:start="59:103" pos:end="59:115">DCA_HD_MARKER</name><operator pos:start="59:116" pos:end="59:116">)</operator></expr>)</condition> <block pos:start="59:119" pos:end="79:13">{<block_content pos:start="61:17" pos:end="77:29">

                <if_stmt pos:start="61:17" pos:end="63:29"><if pos:start="61:17" pos:end="63:29">if<condition pos:start="61:19" pos:end="61:46">(<expr pos:start="61:20" pos:end="61:45"><name pos:start="61:20" pos:end="61:33"><name pos:start="61:20" pos:end="61:22">pc1</name><operator pos:start="61:23" pos:end="61:24">-&gt;</operator><name pos:start="61:25" pos:end="61:33">framesize</name></name> <operator pos:start="61:35" pos:end="61:35">&gt;</operator> <name pos:start="61:37" pos:end="61:45"><name pos:start="61:37" pos:end="61:39">pc1</name><operator pos:start="61:40" pos:end="61:41">-&gt;</operator><name pos:start="61:42" pos:end="61:45">size</name></name></expr>)</condition><block type="pseudo" pos:start="63:21" pos:end="63:29"><block_content pos:start="63:21" pos:end="63:29">

                    <continue pos:start="63:21" pos:end="63:29">continue;</continue></block_content></block></if></if_stmt>

                <if_stmt pos:start="65:17" pos:end="69:17"><if pos:start="65:17" pos:end="69:17">if<condition pos:start="65:19" pos:end="65:35">(<expr pos:start="65:20" pos:end="65:34"><operator pos:start="65:20" pos:end="65:20">!</operator><name pos:start="65:21" pos:end="65:34"><name pos:start="65:21" pos:end="65:23">pc1</name><operator pos:start="65:24" pos:end="65:25">-&gt;</operator><name pos:start="65:26" pos:end="65:34">framesize</name></name></expr>)</condition><block pos:start="65:36" pos:end="69:17">{<block_content pos:start="67:21" pos:end="67:75">

                    <expr_stmt pos:start="67:21" pos:end="67:75"><expr pos:start="67:21" pos:end="67:74"><name pos:start="67:21" pos:end="67:34"><name pos:start="67:21" pos:end="67:23">pc1</name><operator pos:start="67:24" pos:end="67:25">-&gt;</operator><name pos:start="67:26" pos:end="67:34">framesize</name></name> <operator pos:start="67:36" pos:end="67:36">=</operator> <ternary pos:start="67:38" pos:end="67:74"><condition pos:start="67:38" pos:end="67:50"><expr pos:start="67:38" pos:end="67:48"><name pos:start="67:38" pos:end="67:48"><name pos:start="67:38" pos:end="67:40">pc1</name><operator pos:start="67:41" pos:end="67:42">-&gt;</operator><name pos:start="67:43" pos:end="67:48">hd_pos</name></name></expr> ?</condition><then pos:start="67:52" pos:end="67:62"> <expr pos:start="67:52" pos:end="67:62"><name pos:start="67:52" pos:end="67:62"><name pos:start="67:52" pos:end="67:54">pc1</name><operator pos:start="67:55" pos:end="67:56">-&gt;</operator><name pos:start="67:57" pos:end="67:62">hd_pos</name></name></expr> </then><else pos:start="67:64" pos:end="67:74">: <expr pos:start="67:66" pos:end="67:74"><name pos:start="67:66" pos:end="67:74"><name pos:start="67:66" pos:end="67:68">pc1</name><operator pos:start="67:69" pos:end="67:70">-&gt;</operator><name pos:start="67:71" pos:end="67:74">size</name></name></expr></else></ternary></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:42"><expr pos:start="71:17" pos:end="71:41"><name pos:start="71:17" pos:end="71:37"><name pos:start="71:17" pos:end="71:18">pc</name><operator pos:start="71:19" pos:end="71:20">-&gt;</operator><name pos:start="71:21" pos:end="71:37">frame_start_found</name></name> <operator pos:start="71:39" pos:end="71:39">=</operator> <literal type="number" pos:start="71:41" pos:end="71:41">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="73:17" pos:end="73:31"><expr pos:start="73:17" pos:end="73:30"><name pos:start="73:17" pos:end="73:25"><name pos:start="73:17" pos:end="73:18">pc</name><operator pos:start="73:19" pos:end="73:20">-&gt;</operator><name pos:start="73:21" pos:end="73:25">state</name></name> <operator pos:start="73:27" pos:end="73:27">=</operator> <operator pos:start="73:29" pos:end="73:29">-</operator><literal type="number" pos:start="73:30" pos:end="73:30">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="75:17" pos:end="75:30"><expr pos:start="75:17" pos:end="75:29"><name pos:start="75:17" pos:end="75:25"><name pos:start="75:17" pos:end="75:19">pc1</name><operator pos:start="75:20" pos:end="75:21">-&gt;</operator><name pos:start="75:22" pos:end="75:25">size</name></name> <operator pos:start="75:27" pos:end="75:27">=</operator> <literal type="number" pos:start="75:29" pos:end="75:29">0</literal></expr>;</expr_stmt>

                <return pos:start="77:17" pos:end="77:29">return <expr pos:start="77:24" pos:end="77:28"><name pos:start="77:24" pos:end="77:24">i</name> <operator pos:start="77:26" pos:end="77:26">-</operator> <literal type="number" pos:start="77:28" pos:end="77:28">3</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:40"><expr pos:start="85:5" pos:end="85:39"><name pos:start="85:5" pos:end="85:25"><name pos:start="85:5" pos:end="85:6">pc</name><operator pos:start="85:7" pos:end="85:8">-&gt;</operator><name pos:start="85:9" pos:end="85:25">frame_start_found</name></name> <operator pos:start="85:27" pos:end="85:27">=</operator> <name pos:start="85:29" pos:end="85:39">start_found</name></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:22"><expr pos:start="87:5" pos:end="87:21"><name pos:start="87:5" pos:end="87:13"><name pos:start="87:5" pos:end="87:6">pc</name><operator pos:start="87:7" pos:end="87:8">-&gt;</operator><name pos:start="87:9" pos:end="87:13">state</name></name> <operator pos:start="87:15" pos:end="87:15">=</operator> <name pos:start="87:17" pos:end="87:21">state</name></expr>;</expr_stmt>

    <return pos:start="89:5" pos:end="89:25">return <expr pos:start="89:12" pos:end="89:24"><name pos:start="89:12" pos:end="89:24">END_NOT_FOUND</name></expr>;</return>

</block_content>}</block></function>
</unit>
