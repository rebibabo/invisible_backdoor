<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3929.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">ide_qdev_init</name><parameter_list pos:start="1:25" pos:end="1:43">(<parameter pos:start="1:26" pos:end="1:42"><decl pos:start="1:26" pos:end="1:42"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:36">DeviceState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:42">qdev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="87:1">{<block_content pos:start="5:5" pos:end="85:14">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">IDEDevice</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:18">dev</name> <init pos:start="5:20" pos:end="5:37">= <expr pos:start="5:22" pos:end="5:37"><call pos:start="5:22" pos:end="5:37"><name pos:start="5:22" pos:end="5:31">IDE_DEVICE</name><argument_list pos:start="5:32" pos:end="5:37">(<argument pos:start="5:33" pos:end="5:36"><expr pos:start="5:33" pos:end="5:36"><name pos:start="5:33" pos:end="5:36">qdev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:51"><decl pos:start="7:5" pos:end="7:50"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">IDEDeviceClass</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:22">dc</name> <init pos:start="7:24" pos:end="7:50">= <expr pos:start="7:26" pos:end="7:50"><call pos:start="7:26" pos:end="7:50"><name pos:start="7:26" pos:end="7:45">IDE_DEVICE_GET_CLASS</name><argument_list pos:start="7:46" pos:end="7:50">(<argument pos:start="7:47" pos:end="7:49"><expr pos:start="7:47" pos:end="7:49"><name pos:start="7:47" pos:end="7:49">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:60"><decl pos:start="9:5" pos:end="9:59"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:10">IDEBus</name> <modifier pos:start="9:12" pos:end="9:12">*</modifier></type><name pos:start="9:13" pos:end="9:15">bus</name> <init pos:start="9:17" pos:end="9:59">= <expr pos:start="9:19" pos:end="9:59"><call pos:start="9:19" pos:end="9:59"><name pos:start="9:19" pos:end="9:27">DO_UPCAST</name><argument_list pos:start="9:28" pos:end="9:59">(<argument pos:start="9:29" pos:end="9:34"><expr pos:start="9:29" pos:end="9:34"><name pos:start="9:29" pos:end="9:34">IDEBus</name></expr></argument>, <argument pos:start="9:37" pos:end="9:40"><expr pos:start="9:37" pos:end="9:40"><name pos:start="9:37" pos:end="9:40">qbus</name></expr></argument>, <argument pos:start="9:43" pos:end="9:58"><expr pos:start="9:43" pos:end="9:58"><name pos:start="9:43" pos:end="9:58"><name pos:start="9:43" pos:end="9:46">qdev</name><operator pos:start="9:47" pos:end="9:48">-&gt;</operator><name pos:start="9:49" pos:end="9:58">parent_bus</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:22">(<expr pos:start="13:9" pos:end="13:21"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:21"><name pos:start="13:10" pos:end="13:12">dev</name><operator pos:start="13:13" pos:end="13:14">-&gt;</operator><name pos:start="13:15" pos:end="13:18">conf</name><operator pos:start="13:19" pos:end="13:19">.</operator><name pos:start="13:20" pos:end="13:21">bs</name></name></expr>)</condition> <block pos:start="13:24" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:17">

        <expr_stmt pos:start="15:9" pos:end="15:43"><expr pos:start="15:9" pos:end="15:42"><call pos:start="15:9" pos:end="15:42"><name pos:start="15:9" pos:end="15:20">error_report</name><argument_list pos:start="15:21" pos:end="15:42">(<argument pos:start="15:22" pos:end="15:41"><expr pos:start="15:22" pos:end="15:41"><literal type="string" pos:start="15:22" pos:end="15:41">"No drive specified"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="17:9" pos:end="17:17">goto <name pos:start="17:14" pos:end="17:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:24">(<expr pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:17"><name pos:start="21:9" pos:end="21:11">dev</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:17">unit</name></name> <operator pos:start="21:19" pos:end="21:20">==</operator> <operator pos:start="21:22" pos:end="21:22">-</operator><literal type="number" pos:start="21:23" pos:end="21:23">1</literal></expr>)</condition> <block pos:start="21:26" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:40">

        <expr_stmt pos:start="23:9" pos:end="23:40"><expr pos:start="23:9" pos:end="23:39"><name pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:11">dev</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:17">unit</name></name> <operator pos:start="23:19" pos:end="23:19">=</operator> <ternary pos:start="23:21" pos:end="23:39"><condition pos:start="23:21" pos:end="23:33"><expr pos:start="23:21" pos:end="23:31"><name pos:start="23:21" pos:end="23:31"><name pos:start="23:21" pos:end="23:23">bus</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:31">master</name></name></expr> ?</condition><then pos:start="23:35" pos:end="23:35"> <expr pos:start="23:35" pos:end="23:35"><literal type="number" pos:start="23:35" pos:end="23:35">1</literal></expr> </then><else pos:start="23:37" pos:end="23:39">: <expr pos:start="23:39" pos:end="23:39"><literal type="number" pos:start="23:39" pos:end="23:39">0</literal></expr></else></ternary></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="37:5"><if pos:start="29:5" pos:end="37:5">if <condition pos:start="29:8" pos:end="29:36">(<expr pos:start="29:9" pos:end="29:35"><name pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:11">dev</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:17">unit</name></name> <operator pos:start="29:19" pos:end="29:20">&gt;=</operator> <name pos:start="29:22" pos:end="29:35"><name pos:start="29:22" pos:end="29:24">bus</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:35">max_units</name></name></expr>)</condition> <block pos:start="29:38" pos:end="37:5">{<block_content pos:start="31:9" pos:end="35:17">

        <expr_stmt pos:start="31:9" pos:end="33:48"><expr pos:start="31:9" pos:end="33:47"><call pos:start="31:9" pos:end="33:47"><name pos:start="31:9" pos:end="31:20">error_report</name><argument_list pos:start="31:21" pos:end="33:47">(<argument pos:start="31:22" pos:end="31:75"><expr pos:start="31:22" pos:end="31:75"><literal type="string" pos:start="31:22" pos:end="31:75">"Can't create IDE unit %d, bus supports only %d units"</literal></expr></argument>,

                     <argument pos:start="33:22" pos:end="33:30"><expr pos:start="33:22" pos:end="33:30"><name pos:start="33:22" pos:end="33:30"><name pos:start="33:22" pos:end="33:24">dev</name><operator pos:start="33:25" pos:end="33:26">-&gt;</operator><name pos:start="33:27" pos:end="33:30">unit</name></name></expr></argument>, <argument pos:start="33:33" pos:end="33:46"><expr pos:start="33:33" pos:end="33:46"><name pos:start="33:33" pos:end="33:46"><name pos:start="33:33" pos:end="33:35">bus</name><operator pos:start="33:36" pos:end="33:37">-&gt;</operator><name pos:start="33:38" pos:end="33:46">max_units</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="35:9" pos:end="35:17">goto <name pos:start="35:14" pos:end="35:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="41:5" pos:end="77:5">switch <condition pos:start="41:12" pos:end="41:22">(<expr pos:start="41:13" pos:end="41:21"><name pos:start="41:13" pos:end="41:21"><name pos:start="41:13" pos:end="41:15">dev</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:21">unit</name></name></expr>)</condition> <block pos:start="41:24" pos:end="77:5">{<block_content pos:start="43:5" pos:end="75:17">

    <case pos:start="43:5" pos:end="43:11">case <expr pos:start="43:10" pos:end="43:10"><literal type="number" pos:start="43:10" pos:end="43:10">0</literal></expr>:</case>

        <if_stmt pos:start="45:9" pos:end="51:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:24">(<expr pos:start="45:13" pos:end="45:23"><name pos:start="45:13" pos:end="45:23"><name pos:start="45:13" pos:end="45:15">bus</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:23">master</name></name></expr>)</condition> <block pos:start="45:26" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:21">

            <expr_stmt pos:start="47:13" pos:end="47:61"><expr pos:start="47:13" pos:end="47:60"><call pos:start="47:13" pos:end="47:60"><name pos:start="47:13" pos:end="47:24">error_report</name><argument_list pos:start="47:25" pos:end="47:60">(<argument pos:start="47:26" pos:end="47:48"><expr pos:start="47:26" pos:end="47:48"><literal type="string" pos:start="47:26" pos:end="47:48">"IDE unit %d is in use"</literal></expr></argument>, <argument pos:start="47:51" pos:end="47:59"><expr pos:start="47:51" pos:end="47:59"><name pos:start="47:51" pos:end="47:59"><name pos:start="47:51" pos:end="47:53">dev</name><operator pos:start="47:54" pos:end="47:55">-&gt;</operator><name pos:start="47:56" pos:end="47:59">unit</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="49:13" pos:end="49:21">goto <name pos:start="49:18" pos:end="49:20">err</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:26"><expr pos:start="53:9" pos:end="53:25"><name pos:start="53:9" pos:end="53:19"><name pos:start="53:9" pos:end="53:11">bus</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:19">master</name></name> <operator pos:start="53:21" pos:end="53:21">=</operator> <name pos:start="53:23" pos:end="53:25">dev</name></expr>;</expr_stmt>

        <break pos:start="55:9" pos:end="55:14">break;</break>

    <case pos:start="57:5" pos:end="57:11">case <expr pos:start="57:10" pos:end="57:10"><literal type="number" pos:start="57:10" pos:end="57:10">1</literal></expr>:</case>

        <if_stmt pos:start="59:9" pos:end="65:9"><if pos:start="59:9" pos:end="65:9">if <condition pos:start="59:12" pos:end="59:23">(<expr pos:start="59:13" pos:end="59:22"><name pos:start="59:13" pos:end="59:22"><name pos:start="59:13" pos:end="59:15">bus</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:22">slave</name></name></expr>)</condition> <block pos:start="59:25" pos:end="65:9">{<block_content pos:start="61:13" pos:end="63:21">

            <expr_stmt pos:start="61:13" pos:end="61:61"><expr pos:start="61:13" pos:end="61:60"><call pos:start="61:13" pos:end="61:60"><name pos:start="61:13" pos:end="61:24">error_report</name><argument_list pos:start="61:25" pos:end="61:60">(<argument pos:start="61:26" pos:end="61:48"><expr pos:start="61:26" pos:end="61:48"><literal type="string" pos:start="61:26" pos:end="61:48">"IDE unit %d is in use"</literal></expr></argument>, <argument pos:start="61:51" pos:end="61:59"><expr pos:start="61:51" pos:end="61:59"><name pos:start="61:51" pos:end="61:59"><name pos:start="61:51" pos:end="61:53">dev</name><operator pos:start="61:54" pos:end="61:55">-&gt;</operator><name pos:start="61:56" pos:end="61:59">unit</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="63:13" pos:end="63:21">goto <name pos:start="63:18" pos:end="63:20">err</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:25"><expr pos:start="67:9" pos:end="67:24"><name pos:start="67:9" pos:end="67:18"><name pos:start="67:9" pos:end="67:11">bus</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:18">slave</name></name> <operator pos:start="67:20" pos:end="67:20">=</operator> <name pos:start="67:22" pos:end="67:24">dev</name></expr>;</expr_stmt>

        <break pos:start="69:9" pos:end="69:14">break;</break>

    <default pos:start="71:5" pos:end="71:12">default:</default>

        <expr_stmt pos:start="73:9" pos:end="73:55"><expr pos:start="73:9" pos:end="73:54"><call pos:start="73:9" pos:end="73:54"><name pos:start="73:9" pos:end="73:20">error_report</name><argument_list pos:start="73:21" pos:end="73:54">(<argument pos:start="73:22" pos:end="73:42"><expr pos:start="73:22" pos:end="73:42"><literal type="string" pos:start="73:22" pos:end="73:42">"Invalid IDE unit %d"</literal></expr></argument>, <argument pos:start="73:45" pos:end="73:53"><expr pos:start="73:45" pos:end="73:53"><name pos:start="73:45" pos:end="73:53"><name pos:start="73:45" pos:end="73:47">dev</name><operator pos:start="73:48" pos:end="73:49">-&gt;</operator><name pos:start="73:50" pos:end="73:53">unit</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="75:9" pos:end="75:17">goto <name pos:start="75:14" pos:end="75:16">err</name>;</goto>

    </block_content>}</block></switch>

    <return pos:start="79:5" pos:end="79:25">return <expr pos:start="79:12" pos:end="79:24"><call pos:start="79:12" pos:end="79:24"><name pos:start="79:12" pos:end="79:19"><name pos:start="79:12" pos:end="79:13">dc</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:19">init</name></name><argument_list pos:start="79:20" pos:end="79:24">(<argument pos:start="79:21" pos:end="79:23"><expr pos:start="79:21" pos:end="79:23"><name pos:start="79:21" pos:end="79:23">dev</name></expr></argument>)</argument_list></call></expr>;</return>



<label pos:start="83:1" pos:end="83:4"><name pos:start="83:1" pos:end="83:3">err</name>:</label>

    <return pos:start="85:5" pos:end="85:14">return <expr pos:start="85:12" pos:end="85:13"><operator pos:start="85:12" pos:end="85:12">-</operator><literal type="number" pos:start="85:13" pos:end="85:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
