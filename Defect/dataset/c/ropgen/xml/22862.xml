<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22862.c" pos:tabs="8"><function pos:start="1:1" pos:end="151:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">audio_get_buffer</name><parameter_list pos:start="1:28" pos:end="1:66">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:65"><decl pos:start="1:52" pos:end="1:65"><type pos:start="1:52" pos:end="1:65"><name pos:start="1:52" pos:end="1:58">AVFrame</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:65">frame</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="151:1">{<block_content pos:start="5:5" pos:end="149:13">

    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">AVCodecInternal</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:25">avci</name> <init pos:start="5:27" pos:end="5:43">= <expr pos:start="5:29" pos:end="5:43"><name pos:start="5:29" pos:end="5:43"><name pos:start="5:29" pos:end="5:33">avctx</name><operator pos:start="5:34" pos:end="5:35">-&gt;</operator><name pos:start="5:36" pos:end="5:43">internal</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">InternalBuffer</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:23">buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">buf_size</name></decl>, <decl pos:start="9:19" pos:end="9:21"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:19" pos:end="9:21">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="17:45"><expr pos:start="13:5" pos:end="17:44"><name pos:start="13:5" pos:end="13:12">buf_size</name> <operator pos:start="13:14" pos:end="13:14">=</operator> <call pos:start="13:16" pos:end="17:44"><name pos:start="13:16" pos:end="13:41">av_samples_get_buffer_size</name><argument_list pos:start="13:42" pos:end="17:44">(<argument pos:start="13:43" pos:end="13:46"><expr pos:start="13:43" pos:end="13:46"><name pos:start="13:43" pos:end="13:46">NULL</name></expr></argument>, <argument pos:start="13:49" pos:end="13:63"><expr pos:start="13:49" pos:end="13:63"><name pos:start="13:49" pos:end="13:63"><name pos:start="13:49" pos:end="13:53">avctx</name><operator pos:start="13:54" pos:end="13:55">-&gt;</operator><name pos:start="13:56" pos:end="13:63">channels</name></name></expr></argument>,

                                          <argument pos:start="15:43" pos:end="15:59"><expr pos:start="15:43" pos:end="15:59"><name pos:start="15:43" pos:end="15:59"><name pos:start="15:43" pos:end="15:47">frame</name><operator pos:start="15:48" pos:end="15:49">-&gt;</operator><name pos:start="15:50" pos:end="15:59">nb_samples</name></name></expr></argument>, <argument pos:start="15:62" pos:end="15:78"><expr pos:start="15:62" pos:end="15:78"><name pos:start="15:62" pos:end="15:78"><name pos:start="15:62" pos:end="15:66">avctx</name><operator pos:start="15:67" pos:end="15:68">-&gt;</operator><name pos:start="15:69" pos:end="15:78">sample_fmt</name></name></expr></argument>,

                                          <argument pos:start="17:43" pos:end="17:43"><expr pos:start="17:43" pos:end="17:43"><literal type="number" pos:start="17:43" pos:end="17:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="21:31"><if pos:start="19:5" pos:end="21:31">if <condition pos:start="19:8" pos:end="19:21">(<expr pos:start="19:9" pos:end="19:20"><name pos:start="19:9" pos:end="19:16">buf_size</name> <operator pos:start="19:18" pos:end="19:18">&lt;</operator> <literal type="number" pos:start="19:20" pos:end="19:20">0</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:31"><block_content pos:start="21:9" pos:end="21:31">

        <return pos:start="21:9" pos:end="21:31">return <expr pos:start="21:16" pos:end="21:30"><call pos:start="21:16" pos:end="21:30"><name pos:start="21:16" pos:end="21:22">AVERROR</name><argument_list pos:start="21:23" pos:end="21:30">(<argument pos:start="21:24" pos:end="21:29"><expr pos:start="21:24" pos:end="21:29"><name pos:start="21:24" pos:end="21:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:43">/* allocate InternalBuffer if needed */</comment>

    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if <condition pos:start="27:8" pos:end="27:22">(<expr pos:start="27:9" pos:end="27:21"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:21"><name pos:start="27:10" pos:end="27:13">avci</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:21">buffer</name></name></expr>)</condition> <block pos:start="27:24" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:35">

        <expr_stmt pos:start="29:9" pos:end="29:58"><expr pos:start="29:9" pos:end="29:57"><name pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:12">avci</name><operator pos:start="29:13" pos:end="29:14">-&gt;</operator><name pos:start="29:15" pos:end="29:20">buffer</name></name> <operator pos:start="29:22" pos:end="29:22">=</operator> <call pos:start="29:24" pos:end="29:57"><name pos:start="29:24" pos:end="29:33">av_mallocz</name><argument_list pos:start="29:34" pos:end="29:57">(<argument pos:start="29:35" pos:end="29:56"><expr pos:start="29:35" pos:end="29:56"><sizeof pos:start="29:35" pos:end="29:56">sizeof<argument_list pos:start="29:41" pos:end="29:56">(<argument pos:start="29:42" pos:end="29:55"><expr pos:start="29:42" pos:end="29:55"><name pos:start="29:42" pos:end="29:55">InternalBuffer</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="33:35"><if pos:start="31:9" pos:end="33:35">if <condition pos:start="31:12" pos:end="31:26">(<expr pos:start="31:13" pos:end="31:25"><operator pos:start="31:13" pos:end="31:13">!</operator><name pos:start="31:14" pos:end="31:25"><name pos:start="31:14" pos:end="31:17">avci</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:25">buffer</name></name></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:35"><block_content pos:start="33:13" pos:end="33:35">

            <return pos:start="33:13" pos:end="33:35">return <expr pos:start="33:20" pos:end="33:34"><call pos:start="33:20" pos:end="33:34"><name pos:start="33:20" pos:end="33:26">AVERROR</name><argument_list pos:start="33:27" pos:end="33:34">(<argument pos:start="33:28" pos:end="33:33"><expr pos:start="33:28" pos:end="33:33"><name pos:start="33:28" pos:end="33:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:23"><expr pos:start="37:5" pos:end="37:22"><name pos:start="37:5" pos:end="37:7">buf</name> <operator pos:start="37:9" pos:end="37:9">=</operator> <name pos:start="37:11" pos:end="37:22"><name pos:start="37:11" pos:end="37:14">avci</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:22">buffer</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="41:5" pos:end="43:49">/* if there is a previously-used internal buffer, check its size and

     * channel count to see if we can reuse it */</comment>

    <if_stmt pos:start="45:5" pos:end="77:5"><if pos:start="45:5" pos:end="77:5">if <condition pos:start="45:8" pos:end="45:27">(<expr pos:start="45:9" pos:end="45:26"><name pos:start="45:9" pos:end="45:26"><name pos:start="45:9" pos:end="45:11">buf</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:26">extended_data</name></name></expr>)</condition> <block pos:start="45:29" pos:end="77:5">{<block_content pos:start="49:9" pos:end="75:9">

        <comment type="block" pos:start="47:9" pos:end="47:53">/* if current buffer is too small, free it */</comment>

        <if_stmt pos:start="49:9" pos:end="61:9"><if pos:start="49:9" pos:end="61:9">if <condition pos:start="49:12" pos:end="49:69">(<expr pos:start="49:13" pos:end="49:68"><name pos:start="49:13" pos:end="49:33"><name pos:start="49:13" pos:end="49:15">buf</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:30">extended_data</name><index pos:start="49:31" pos:end="49:33">[<expr pos:start="49:32" pos:end="49:32"><literal type="number" pos:start="49:32" pos:end="49:32">0</literal></expr>]</index></name> <operator pos:start="49:35" pos:end="49:36">&amp;&amp;</operator> <name pos:start="49:38" pos:end="49:45">buf_size</name> <operator pos:start="49:47" pos:end="49:47">&gt;</operator> <name pos:start="49:49" pos:end="49:68"><name pos:start="49:49" pos:end="49:51">buf</name><operator pos:start="49:52" pos:end="49:53">-&gt;</operator><name pos:start="49:54" pos:end="49:68">audio_data_size</name></name></expr>)</condition> <block pos:start="49:71" pos:end="61:9">{<block_content pos:start="51:13" pos:end="59:38">

            <expr_stmt pos:start="51:13" pos:end="51:43"><expr pos:start="51:13" pos:end="51:42"><call pos:start="51:13" pos:end="51:42"><name pos:start="51:13" pos:end="51:19">av_free</name><argument_list pos:start="51:20" pos:end="51:42">(<argument pos:start="51:21" pos:end="51:41"><expr pos:start="51:21" pos:end="51:41"><name pos:start="51:21" pos:end="51:41"><name pos:start="51:21" pos:end="51:23">buf</name><operator pos:start="51:24" pos:end="51:25">-&gt;</operator><name pos:start="51:26" pos:end="51:38">extended_data</name><index pos:start="51:39" pos:end="51:41">[<expr pos:start="51:40" pos:end="51:40"><literal type="number" pos:start="51:40" pos:end="51:40">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="53:13" pos:end="55:44"><if pos:start="53:13" pos:end="55:44">if <condition pos:start="53:16" pos:end="53:48">(<expr pos:start="53:17" pos:end="53:47"><name pos:start="53:17" pos:end="53:34"><name pos:start="53:17" pos:end="53:19">buf</name><operator pos:start="53:20" pos:end="53:21">-&gt;</operator><name pos:start="53:22" pos:end="53:34">extended_data</name></name> <operator pos:start="53:36" pos:end="53:37">!=</operator> <name pos:start="53:39" pos:end="53:47"><name pos:start="53:39" pos:end="53:41">buf</name><operator pos:start="53:42" pos:end="53:43">-&gt;</operator><name pos:start="53:44" pos:end="53:47">data</name></name></expr>)</condition><block type="pseudo" pos:start="55:17" pos:end="55:44"><block_content pos:start="55:17" pos:end="55:44">

                <expr_stmt pos:start="55:17" pos:end="55:44"><expr pos:start="55:17" pos:end="55:43"><call pos:start="55:17" pos:end="55:43"><name pos:start="55:17" pos:end="55:23">av_free</name><argument_list pos:start="55:24" pos:end="55:43">(<argument pos:start="55:25" pos:end="55:42"><expr pos:start="55:25" pos:end="55:42"><name pos:start="55:25" pos:end="55:42"><name pos:start="55:25" pos:end="55:27">buf</name><operator pos:start="55:28" pos:end="55:29">-&gt;</operator><name pos:start="55:30" pos:end="55:42">extended_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:38"><expr pos:start="57:13" pos:end="57:37"><name pos:start="57:13" pos:end="57:30"><name pos:start="57:13" pos:end="57:15">buf</name><operator pos:start="57:16" pos:end="57:17">-&gt;</operator><name pos:start="57:18" pos:end="57:30">extended_data</name></name> <operator pos:start="57:32" pos:end="57:32">=</operator> <name pos:start="57:34" pos:end="57:37">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:38"><expr pos:start="59:13" pos:end="59:37"><name pos:start="59:13" pos:end="59:24"><name pos:start="59:13" pos:end="59:15">buf</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:21">data</name><index pos:start="59:22" pos:end="59:24">[<expr pos:start="59:23" pos:end="59:23"><literal type="number" pos:start="59:23" pos:end="59:23">0</literal></expr>]</index></name>       <operator pos:start="59:32" pos:end="59:32">=</operator> <name pos:start="59:34" pos:end="59:37">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="63:9" pos:end="65:70">/* if number of channels has changed, reset and/or free extended data

         * pointers but leave data buffer in buf-&gt;data[0] for reuse */</comment>

        <if_stmt pos:start="67:9" pos:end="75:9"><if pos:start="67:9" pos:end="75:9">if <condition pos:start="67:12" pos:end="67:48">(<expr pos:start="67:13" pos:end="67:47"><name pos:start="67:13" pos:end="67:28"><name pos:start="67:13" pos:end="67:15">buf</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:28">nb_channels</name></name> <operator pos:start="67:30" pos:end="67:31">!=</operator> <name pos:start="67:33" pos:end="67:47"><name pos:start="67:33" pos:end="67:37">avctx</name><operator pos:start="67:38" pos:end="67:39">-&gt;</operator><name pos:start="67:40" pos:end="67:47">channels</name></name></expr>)</condition> <block pos:start="67:50" pos:end="75:9">{<block_content pos:start="69:13" pos:end="73:38">

            <if_stmt pos:start="69:13" pos:end="71:44"><if pos:start="69:13" pos:end="71:44">if <condition pos:start="69:16" pos:end="69:48">(<expr pos:start="69:17" pos:end="69:47"><name pos:start="69:17" pos:end="69:34"><name pos:start="69:17" pos:end="69:19">buf</name><operator pos:start="69:20" pos:end="69:21">-&gt;</operator><name pos:start="69:22" pos:end="69:34">extended_data</name></name> <operator pos:start="69:36" pos:end="69:37">!=</operator> <name pos:start="69:39" pos:end="69:47"><name pos:start="69:39" pos:end="69:41">buf</name><operator pos:start="69:42" pos:end="69:43">-&gt;</operator><name pos:start="69:44" pos:end="69:47">data</name></name></expr>)</condition><block type="pseudo" pos:start="71:17" pos:end="71:44"><block_content pos:start="71:17" pos:end="71:44">

                <expr_stmt pos:start="71:17" pos:end="71:44"><expr pos:start="71:17" pos:end="71:43"><call pos:start="71:17" pos:end="71:43"><name pos:start="71:17" pos:end="71:23">av_free</name><argument_list pos:start="71:24" pos:end="71:43">(<argument pos:start="71:25" pos:end="71:42"><expr pos:start="71:25" pos:end="71:42"><name pos:start="71:25" pos:end="71:42"><name pos:start="71:25" pos:end="71:27">buf</name><operator pos:start="71:28" pos:end="71:29">-&gt;</operator><name pos:start="71:30" pos:end="71:42">extended_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:38"><expr pos:start="73:13" pos:end="73:37"><name pos:start="73:13" pos:end="73:30"><name pos:start="73:13" pos:end="73:15">buf</name><operator pos:start="73:16" pos:end="73:17">-&gt;</operator><name pos:start="73:18" pos:end="73:30">extended_data</name></name> <operator pos:start="73:32" pos:end="73:32">=</operator> <name pos:start="73:34" pos:end="73:37">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="81:5" pos:end="83:76">/* if there is no previous buffer or the previous buffer cannot be used

     * as-is, allocate a new buffer and/or rearrange the channel pointers */</comment>

    <if_stmt pos:start="85:5" pos:end="131:5"><if pos:start="85:5" pos:end="121:5">if <condition pos:start="85:8" pos:end="85:28">(<expr pos:start="85:9" pos:end="85:27"><operator pos:start="85:9" pos:end="85:9">!</operator><name pos:start="85:10" pos:end="85:27"><name pos:start="85:10" pos:end="85:12">buf</name><operator pos:start="85:13" pos:end="85:14">-&gt;</operator><name pos:start="85:15" pos:end="85:27">extended_data</name></name></expr>)</condition> <block pos:start="85:30" pos:end="121:5">{<block_content pos:start="87:9" pos:end="119:43">

        <if_stmt pos:start="87:9" pos:end="95:9"><if pos:start="87:9" pos:end="95:9">if <condition pos:start="87:12" pos:end="87:26">(<expr pos:start="87:13" pos:end="87:25"><operator pos:start="87:13" pos:end="87:13">!</operator><name pos:start="87:14" pos:end="87:25"><name pos:start="87:14" pos:end="87:16">buf</name><operator pos:start="87:17" pos:end="87:18">-&gt;</operator><name pos:start="87:19" pos:end="87:22">data</name><index pos:start="87:23" pos:end="87:25">[<expr pos:start="87:24" pos:end="87:24"><literal type="number" pos:start="87:24" pos:end="87:24">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="87:28" pos:end="95:9">{<block_content pos:start="89:13" pos:end="93:44">

            <if_stmt pos:start="89:13" pos:end="91:39"><if pos:start="89:13" pos:end="91:39">if <condition pos:start="89:16" pos:end="89:55">(<expr pos:start="89:17" pos:end="89:54"><operator pos:start="89:17" pos:end="89:17">!</operator><operator pos:start="89:18" pos:end="89:18">(</operator><name pos:start="89:19" pos:end="89:30"><name pos:start="89:19" pos:end="89:21">buf</name><operator pos:start="89:22" pos:end="89:23">-&gt;</operator><name pos:start="89:24" pos:end="89:27">data</name><index pos:start="89:28" pos:end="89:30">[<expr pos:start="89:29" pos:end="89:29"><literal type="number" pos:start="89:29" pos:end="89:29">0</literal></expr>]</index></name> <operator pos:start="89:32" pos:end="89:32">=</operator> <call pos:start="89:34" pos:end="89:53"><name pos:start="89:34" pos:end="89:43">av_mallocz</name><argument_list pos:start="89:44" pos:end="89:53">(<argument pos:start="89:45" pos:end="89:52"><expr pos:start="89:45" pos:end="89:52"><name pos:start="89:45" pos:end="89:52">buf_size</name></expr></argument>)</argument_list></call><operator pos:start="89:54" pos:end="89:54">)</operator></expr>)</condition><block type="pseudo" pos:start="91:17" pos:end="91:39"><block_content pos:start="91:17" pos:end="91:39">

                <return pos:start="91:17" pos:end="91:39">return <expr pos:start="91:24" pos:end="91:38"><call pos:start="91:24" pos:end="91:38"><name pos:start="91:24" pos:end="91:30">AVERROR</name><argument_list pos:start="91:31" pos:end="91:38">(<argument pos:start="91:32" pos:end="91:37"><expr pos:start="91:32" pos:end="91:37"><name pos:start="91:32" pos:end="91:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:44"><expr pos:start="93:13" pos:end="93:43"><name pos:start="93:13" pos:end="93:32"><name pos:start="93:13" pos:end="93:15">buf</name><operator pos:start="93:16" pos:end="93:17">-&gt;</operator><name pos:start="93:18" pos:end="93:32">audio_data_size</name></name> <operator pos:start="93:34" pos:end="93:34">=</operator> <name pos:start="93:36" pos:end="93:43">buf_size</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="97:9" pos:end="103:23"><if pos:start="97:9" pos:end="103:23">if <condition pos:start="97:12" pos:end="101:70">(<expr pos:start="97:13" pos:end="101:69"><operator pos:start="97:13" pos:end="97:13">(</operator><name pos:start="97:14" pos:end="97:16">ret</name> <operator pos:start="97:18" pos:end="97:18">=</operator> <call pos:start="97:20" pos:end="101:68"><name pos:start="97:20" pos:end="97:43">avcodec_fill_audio_frame</name><argument_list pos:start="97:44" pos:end="101:68">(<argument pos:start="97:45" pos:end="97:49"><expr pos:start="97:45" pos:end="97:49"><name pos:start="97:45" pos:end="97:49">frame</name></expr></argument>, <argument pos:start="97:52" pos:end="97:66"><expr pos:start="97:52" pos:end="97:66"><name pos:start="97:52" pos:end="97:66"><name pos:start="97:52" pos:end="97:56">avctx</name><operator pos:start="97:57" pos:end="97:58">-&gt;</operator><name pos:start="97:59" pos:end="97:66">channels</name></name></expr></argument>,

                                            <argument pos:start="99:45" pos:end="99:61"><expr pos:start="99:45" pos:end="99:61"><name pos:start="99:45" pos:end="99:61"><name pos:start="99:45" pos:end="99:49">avctx</name><operator pos:start="99:50" pos:end="99:51">-&gt;</operator><name pos:start="99:52" pos:end="99:61">sample_fmt</name></name></expr></argument>, <argument pos:start="99:64" pos:end="99:75"><expr pos:start="99:64" pos:end="99:75"><name pos:start="99:64" pos:end="99:75"><name pos:start="99:64" pos:end="99:66">buf</name><operator pos:start="99:67" pos:end="99:68">-&gt;</operator><name pos:start="99:69" pos:end="99:72">data</name><index pos:start="99:73" pos:end="99:75">[<expr pos:start="99:74" pos:end="99:74"><literal type="number" pos:start="99:74" pos:end="99:74">0</literal></expr>]</index></name></expr></argument>,

                                            <argument pos:start="101:45" pos:end="101:64"><expr pos:start="101:45" pos:end="101:64"><name pos:start="101:45" pos:end="101:64"><name pos:start="101:45" pos:end="101:47">buf</name><operator pos:start="101:48" pos:end="101:49">-&gt;</operator><name pos:start="101:50" pos:end="101:64">audio_data_size</name></name></expr></argument>, <argument pos:start="101:67" pos:end="101:67"><expr pos:start="101:67" pos:end="101:67"><literal type="number" pos:start="101:67" pos:end="101:67">0</literal></expr></argument>)</argument_list></call><operator pos:start="101:69" pos:end="101:69">)</operator></expr>)</condition><block type="pseudo" pos:start="103:13" pos:end="103:23"><block_content pos:start="103:13" pos:end="103:23">

            <return pos:start="103:13" pos:end="103:23">return <expr pos:start="103:20" pos:end="103:22"><name pos:start="103:20" pos:end="103:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="107:9" pos:end="113:54"><if pos:start="107:9" pos:end="109:43">if <condition pos:start="107:12" pos:end="107:48">(<expr pos:start="107:13" pos:end="107:47"><name pos:start="107:13" pos:end="107:32"><name pos:start="107:13" pos:end="107:17">frame</name><operator pos:start="107:18" pos:end="107:19">-&gt;</operator><name pos:start="107:20" pos:end="107:32">extended_data</name></name> <operator pos:start="107:34" pos:end="107:35">==</operator> <name pos:start="107:37" pos:end="107:47"><name pos:start="107:37" pos:end="107:41">frame</name><operator pos:start="107:42" pos:end="107:43">-&gt;</operator><name pos:start="107:44" pos:end="107:47">data</name></name></expr>)</condition><block type="pseudo" pos:start="109:13" pos:end="109:43"><block_content pos:start="109:13" pos:end="109:43">

            <expr_stmt pos:start="109:13" pos:end="109:43"><expr pos:start="109:13" pos:end="109:42"><name pos:start="109:13" pos:end="109:30"><name pos:start="109:13" pos:end="109:15">buf</name><operator pos:start="109:16" pos:end="109:17">-&gt;</operator><name pos:start="109:18" pos:end="109:30">extended_data</name></name> <operator pos:start="109:32" pos:end="109:32">=</operator> <name pos:start="109:34" pos:end="109:42"><name pos:start="109:34" pos:end="109:36">buf</name><operator pos:start="109:37" pos:end="109:38">-&gt;</operator><name pos:start="109:39" pos:end="109:42">data</name></name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="111:9" pos:end="113:54">else<block type="pseudo" pos:start="113:13" pos:end="113:54"><block_content pos:start="113:13" pos:end="113:54">

            <expr_stmt pos:start="113:13" pos:end="113:54"><expr pos:start="113:13" pos:end="113:53"><name pos:start="113:13" pos:end="113:30"><name pos:start="113:13" pos:end="113:15">buf</name><operator pos:start="113:16" pos:end="113:17">-&gt;</operator><name pos:start="113:18" pos:end="113:30">extended_data</name></name> <operator pos:start="113:32" pos:end="113:32">=</operator> <name pos:start="113:34" pos:end="113:53"><name pos:start="113:34" pos:end="113:38">frame</name><operator pos:start="113:39" pos:end="113:40">-&gt;</operator><name pos:start="113:41" pos:end="113:53">extended_data</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:60"><expr pos:start="115:9" pos:end="115:59"><call pos:start="115:9" pos:end="115:59"><name pos:start="115:9" pos:end="115:14">memcpy</name><argument_list pos:start="115:15" pos:end="115:59">(<argument pos:start="115:16" pos:end="115:24"><expr pos:start="115:16" pos:end="115:24"><name pos:start="115:16" pos:end="115:24"><name pos:start="115:16" pos:end="115:18">buf</name><operator pos:start="115:19" pos:end="115:20">-&gt;</operator><name pos:start="115:21" pos:end="115:24">data</name></name></expr></argument>, <argument pos:start="115:27" pos:end="115:37"><expr pos:start="115:27" pos:end="115:37"><name pos:start="115:27" pos:end="115:37"><name pos:start="115:27" pos:end="115:31">frame</name><operator pos:start="115:32" pos:end="115:33">-&gt;</operator><name pos:start="115:34" pos:end="115:37">data</name></name></expr></argument>, <argument pos:start="115:40" pos:end="115:58"><expr pos:start="115:40" pos:end="115:58"><sizeof pos:start="115:40" pos:end="115:58">sizeof<argument_list pos:start="115:46" pos:end="115:58">(<argument pos:start="115:47" pos:end="115:57"><expr pos:start="115:47" pos:end="115:57"><name pos:start="115:47" pos:end="115:57"><name pos:start="115:47" pos:end="115:51">frame</name><operator pos:start="115:52" pos:end="115:53">-&gt;</operator><name pos:start="115:54" pos:end="115:57">data</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:46"><expr pos:start="117:9" pos:end="117:45"><name pos:start="117:9" pos:end="117:24"><name pos:start="117:9" pos:end="117:11">buf</name><operator pos:start="117:12" pos:end="117:13">-&gt;</operator><name pos:start="117:14" pos:end="117:21">linesize</name><index pos:start="117:22" pos:end="117:24">[<expr pos:start="117:23" pos:end="117:23"><literal type="number" pos:start="117:23" pos:end="117:23">0</literal></expr>]</index></name> <operator pos:start="117:26" pos:end="117:26">=</operator> <name pos:start="117:28" pos:end="117:45"><name pos:start="117:28" pos:end="117:32">frame</name><operator pos:start="117:33" pos:end="117:34">-&gt;</operator><name pos:start="117:35" pos:end="117:42">linesize</name><index pos:start="117:43" pos:end="117:45">[<expr pos:start="117:44" pos:end="117:44"><literal type="number" pos:start="117:44" pos:end="117:44">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:43"><expr pos:start="119:9" pos:end="119:42"><name pos:start="119:9" pos:end="119:24"><name pos:start="119:9" pos:end="119:11">buf</name><operator pos:start="119:12" pos:end="119:13">-&gt;</operator><name pos:start="119:14" pos:end="119:24">nb_channels</name></name> <operator pos:start="119:26" pos:end="119:26">=</operator> <name pos:start="119:28" pos:end="119:42"><name pos:start="119:28" pos:end="119:32">avctx</name><operator pos:start="119:33" pos:end="119:34">-&gt;</operator><name pos:start="119:35" pos:end="119:42">channels</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="121:7" pos:end="131:5">else <block pos:start="121:12" pos:end="131:5">{<block_content pos:start="125:9" pos:end="129:60">

        <comment type="block" pos:start="123:9" pos:end="123:53">/* copy InternalBuffer info to the AVFrame */</comment>

        <expr_stmt pos:start="125:9" pos:end="125:50"><expr pos:start="125:9" pos:end="125:49"><name pos:start="125:9" pos:end="125:28"><name pos:start="125:9" pos:end="125:13">frame</name><operator pos:start="125:14" pos:end="125:15">-&gt;</operator><name pos:start="125:16" pos:end="125:28">extended_data</name></name> <operator pos:start="125:30" pos:end="125:30">=</operator> <name pos:start="125:32" pos:end="125:49"><name pos:start="125:32" pos:end="125:34">buf</name><operator pos:start="125:35" pos:end="125:36">-&gt;</operator><name pos:start="125:37" pos:end="125:49">extended_data</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:48"><expr pos:start="127:9" pos:end="127:47"><name pos:start="127:9" pos:end="127:26"><name pos:start="127:9" pos:end="127:13">frame</name><operator pos:start="127:14" pos:end="127:15">-&gt;</operator><name pos:start="127:16" pos:end="127:23">linesize</name><index pos:start="127:24" pos:end="127:26">[<expr pos:start="127:25" pos:end="127:25"><literal type="number" pos:start="127:25" pos:end="127:25">0</literal></expr>]</index></name>   <operator pos:start="127:30" pos:end="127:30">=</operator> <name pos:start="127:32" pos:end="127:47"><name pos:start="127:32" pos:end="127:34">buf</name><operator pos:start="127:35" pos:end="127:36">-&gt;</operator><name pos:start="127:37" pos:end="127:44">linesize</name><index pos:start="127:45" pos:end="127:47">[<expr pos:start="127:46" pos:end="127:46"><literal type="number" pos:start="127:46" pos:end="127:46">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:60"><expr pos:start="129:9" pos:end="129:59"><call pos:start="129:9" pos:end="129:59"><name pos:start="129:9" pos:end="129:14">memcpy</name><argument_list pos:start="129:15" pos:end="129:59">(<argument pos:start="129:16" pos:end="129:26"><expr pos:start="129:16" pos:end="129:26"><name pos:start="129:16" pos:end="129:26"><name pos:start="129:16" pos:end="129:20">frame</name><operator pos:start="129:21" pos:end="129:22">-&gt;</operator><name pos:start="129:23" pos:end="129:26">data</name></name></expr></argument>, <argument pos:start="129:29" pos:end="129:37"><expr pos:start="129:29" pos:end="129:37"><name pos:start="129:29" pos:end="129:37"><name pos:start="129:29" pos:end="129:31">buf</name><operator pos:start="129:32" pos:end="129:33">-&gt;</operator><name pos:start="129:34" pos:end="129:37">data</name></name></expr></argument>, <argument pos:start="129:40" pos:end="129:58"><expr pos:start="129:40" pos:end="129:58"><sizeof pos:start="129:40" pos:end="129:58">sizeof<argument_list pos:start="129:46" pos:end="129:58">(<argument pos:start="129:47" pos:end="129:57"><expr pos:start="129:47" pos:end="129:57"><name pos:start="129:47" pos:end="129:57"><name pos:start="129:47" pos:end="129:51">frame</name><operator pos:start="129:52" pos:end="129:53">-&gt;</operator><name pos:start="129:54" pos:end="129:57">data</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="135:5" pos:end="135:42"><expr pos:start="135:5" pos:end="135:41"><name pos:start="135:5" pos:end="135:15"><name pos:start="135:5" pos:end="135:9">frame</name><operator pos:start="135:10" pos:end="135:11">-&gt;</operator><name pos:start="135:12" pos:end="135:15">type</name></name> <operator pos:start="135:17" pos:end="135:17">=</operator> <name pos:start="135:19" pos:end="135:41">FF_BUFFER_TYPE_INTERNAL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:38"><expr pos:start="137:5" pos:end="137:37"><call pos:start="137:5" pos:end="137:37"><name pos:start="137:5" pos:end="137:23">ff_init_buffer_info</name><argument_list pos:start="137:24" pos:end="137:37">(<argument pos:start="137:25" pos:end="137:29"><expr pos:start="137:25" pos:end="137:29"><name pos:start="137:25" pos:end="137:29">avctx</name></expr></argument>, <argument pos:start="137:32" pos:end="137:36"><expr pos:start="137:32" pos:end="137:36"><name pos:start="137:32" pos:end="137:36">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="141:5" pos:end="145:75"><if pos:start="141:5" pos:end="145:75">if <condition pos:start="141:8" pos:end="141:40">(<expr pos:start="141:9" pos:end="141:39"><name pos:start="141:9" pos:end="141:20"><name pos:start="141:9" pos:end="141:13">avctx</name><operator pos:start="141:14" pos:end="141:15">-&gt;</operator><name pos:start="141:16" pos:end="141:20">debug</name></name> <operator pos:start="141:22" pos:end="141:22">&amp;</operator> <name pos:start="141:24" pos:end="141:39">FF_DEBUG_BUFFERS</name></expr>)</condition><block type="pseudo" pos:start="143:9" pos:end="145:75"><block_content pos:start="143:9" pos:end="145:75">

        <expr_stmt pos:start="143:9" pos:end="145:75"><expr pos:start="143:9" pos:end="145:74"><call pos:start="143:9" pos:end="145:74"><name pos:start="143:9" pos:end="143:14">av_log</name><argument_list pos:start="143:15" pos:end="145:74">(<argument pos:start="143:16" pos:end="143:20"><expr pos:start="143:16" pos:end="143:20"><name pos:start="143:16" pos:end="143:20">avctx</name></expr></argument>, <argument pos:start="143:23" pos:end="143:34"><expr pos:start="143:23" pos:end="143:34"><name pos:start="143:23" pos:end="143:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="143:37" pos:end="145:66"><expr pos:start="143:37" pos:end="145:66"><literal type="string" pos:start="143:37" pos:end="143:77">"default_get_buffer called on frame %p, "</literal>

                                    <literal type="string" pos:start="145:37" pos:end="145:66">"internal audio buffer used\n"</literal></expr></argument>, <argument pos:start="145:69" pos:end="145:73"><expr pos:start="145:69" pos:end="145:73"><name pos:start="145:69" pos:end="145:73">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="149:5" pos:end="149:13">return <expr pos:start="149:12" pos:end="149:12"><literal type="number" pos:start="149:12" pos:end="149:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
