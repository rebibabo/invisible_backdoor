<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18117.c" pos:tabs="8"><function pos:start="1:1" pos:end="143:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">hls_read_packet</name><parameter_list pos:start="1:27" pos:end="1:61">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:55">AVPacket</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="143:1">{<block_content pos:start="5:5" pos:end="141:23">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">HLSContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">c</name> <init pos:start="5:19" pos:end="5:32">= <expr pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:21">s</name><operator pos:start="5:22" pos:end="5:23">-&gt;</operator><name pos:start="5:24" pos:end="5:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>, <decl pos:start="7:14" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:14">i</name></decl>, <decl pos:start="7:17" pos:end="7:31"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:17" pos:end="7:26">minvariant</name> <init pos:start="7:28" pos:end="7:31">= <expr pos:start="7:30" pos:end="7:31"><operator pos:start="7:30" pos:end="7:30">-</operator><literal type="number" pos:start="7:31" pos:end="7:31">1</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:24">(<expr pos:start="11:9" pos:end="11:23"><name pos:start="11:9" pos:end="11:23"><name pos:start="11:9" pos:end="11:9">c</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:23">first_packet</name></name></expr>)</condition> <block pos:start="11:26" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:28">

        <expr_stmt pos:start="13:9" pos:end="13:36"><expr pos:start="13:9" pos:end="13:35"><call pos:start="13:9" pos:end="13:35"><name pos:start="13:9" pos:end="13:29">recheck_discard_flags</name><argument_list pos:start="13:30" pos:end="13:35">(<argument pos:start="13:31" pos:end="13:31"><expr pos:start="13:31" pos:end="13:31"><name pos:start="13:31" pos:end="13:31">s</name></expr></argument>, <argument pos:start="13:34" pos:end="13:34"><expr pos:start="13:34" pos:end="13:34"><literal type="number" pos:start="13:34" pos:end="13:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:28"><expr pos:start="15:9" pos:end="15:27"><name pos:start="15:9" pos:end="15:23"><name pos:start="15:9" pos:end="15:9">c</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:23">first_packet</name></name> <operator pos:start="15:25" pos:end="15:25">=</operator> <literal type="number" pos:start="15:27" pos:end="15:27">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



<label pos:start="21:1" pos:end="21:6"><name pos:start="21:1" pos:end="21:5">start</name>:</label>

    <expr_stmt pos:start="23:5" pos:end="23:26"><expr pos:start="23:5" pos:end="23:25"><name pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:5">c</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:21">end_of_segment</name></name> <operator pos:start="23:23" pos:end="23:23">=</operator> <literal type="number" pos:start="23:25" pos:end="23:25">0</literal></expr>;</expr_stmt>

    <for pos:start="25:5" pos:end="117:5">for <control pos:start="25:9" pos:end="25:39">(<init pos:start="25:10" pos:end="25:15"><expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:10">i</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>;</init> <condition pos:start="25:17" pos:end="25:34"><expr pos:start="25:17" pos:end="25:33"><name pos:start="25:17" pos:end="25:17">i</name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <name pos:start="25:21" pos:end="25:33"><name pos:start="25:21" pos:end="25:21">c</name><operator pos:start="25:22" pos:end="25:23">-&gt;</operator><name pos:start="25:24" pos:end="25:33">n_variants</name></name></expr>;</condition> <incr pos:start="25:36" pos:end="25:38"><expr pos:start="25:36" pos:end="25:38"><name pos:start="25:36" pos:end="25:36">i</name><operator pos:start="25:37" pos:end="25:38">++</operator></expr></incr>)</control> <block pos:start="25:41" pos:end="117:5">{<block_content pos:start="27:9" pos:end="115:9">

        <decl_stmt pos:start="27:9" pos:end="27:45"><decl pos:start="27:9" pos:end="27:44"><type pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:14">struct</name> <name pos:start="27:16" pos:end="27:22">variant</name></name> <modifier pos:start="27:24" pos:end="27:24">*</modifier></type><name pos:start="27:25" pos:end="27:27">var</name> <init pos:start="27:29" pos:end="27:44">= <expr pos:start="27:31" pos:end="27:44"><name pos:start="27:31" pos:end="27:44"><name pos:start="27:31" pos:end="27:31">c</name><operator pos:start="27:32" pos:end="27:33">-&gt;</operator><name pos:start="27:34" pos:end="27:41">variants</name><index pos:start="27:42" pos:end="27:44">[<expr pos:start="27:43" pos:end="27:43"><name pos:start="27:43" pos:end="27:43">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <comment type="block" pos:start="29:9" pos:end="31:20">/* Make sure we've got one buffered packet from each open variant

         * stream */</comment>

        <if_stmt pos:start="33:9" pos:end="99:9"><if pos:start="33:9" pos:end="99:9">if <condition pos:start="33:12" pos:end="33:42">(<expr pos:start="33:13" pos:end="33:41"><name pos:start="33:13" pos:end="33:23"><name pos:start="33:13" pos:end="33:15">var</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:23">needed</name></name> <operator pos:start="33:25" pos:end="33:26">&amp;&amp;</operator> <operator pos:start="33:28" pos:end="33:28">!</operator><name pos:start="33:29" pos:end="33:41"><name pos:start="33:29" pos:end="33:31">var</name><operator pos:start="33:32" pos:end="33:33">-&gt;</operator><name pos:start="33:34" pos:end="33:36">pkt</name><operator pos:start="33:37" pos:end="33:37">.</operator><name pos:start="33:38" pos:end="33:41">data</name></name></expr>)</condition> <block pos:start="33:44" pos:end="99:9">{<block_content pos:start="35:13" pos:end="97:13">

            <while pos:start="35:13" pos:end="97:13">while <condition pos:start="35:19" pos:end="35:21">(<expr pos:start="35:20" pos:end="35:20"><literal type="number" pos:start="35:20" pos:end="35:20">1</literal></expr>)</condition> <block pos:start="35:23" pos:end="97:13">{<block_content pos:start="37:17" pos:end="95:17">

                <decl_stmt pos:start="37:17" pos:end="37:32"><decl pos:start="37:17" pos:end="37:31"><type pos:start="37:17" pos:end="37:23"><name pos:start="37:17" pos:end="37:23">int64_t</name></type> <name pos:start="37:25" pos:end="37:31">ts_diff</name></decl>;</decl_stmt>

                <decl_stmt pos:start="39:17" pos:end="39:29"><decl pos:start="39:17" pos:end="39:28"><type pos:start="39:17" pos:end="39:26"><name pos:start="39:17" pos:end="39:24">AVStream</name> <modifier pos:start="39:26" pos:end="39:26">*</modifier></type><name pos:start="39:27" pos:end="39:28">st</name></decl>;</decl_stmt>

                <expr_stmt pos:start="41:17" pos:end="41:57"><expr pos:start="41:17" pos:end="41:56"><name pos:start="41:17" pos:end="41:19">ret</name> <operator pos:start="41:21" pos:end="41:21">=</operator> <call pos:start="41:23" pos:end="41:56"><name pos:start="41:23" pos:end="41:35">av_read_frame</name><argument_list pos:start="41:36" pos:end="41:56">(<argument pos:start="41:37" pos:end="41:44"><expr pos:start="41:37" pos:end="41:44"><name pos:start="41:37" pos:end="41:44"><name pos:start="41:37" pos:end="41:39">var</name><operator pos:start="41:40" pos:end="41:41">-&gt;</operator><name pos:start="41:42" pos:end="41:44">ctx</name></name></expr></argument>, <argument pos:start="41:47" pos:end="41:55"><expr pos:start="41:47" pos:end="41:55"><operator pos:start="41:47" pos:end="41:47">&amp;</operator><name pos:start="41:48" pos:end="41:55"><name pos:start="41:48" pos:end="41:50">var</name><operator pos:start="41:51" pos:end="41:52">-&gt;</operator><name pos:start="41:53" pos:end="41:55">pkt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="43:17" pos:end="59:17"><if pos:start="43:17" pos:end="53:17">if <condition pos:start="43:20" pos:end="43:28">(<expr pos:start="43:21" pos:end="43:27"><name pos:start="43:21" pos:end="43:23">ret</name> <operator pos:start="43:25" pos:end="43:25">&lt;</operator> <literal type="number" pos:start="43:27" pos:end="43:27">0</literal></expr>)</condition> <block pos:start="43:30" pos:end="53:17">{<block_content pos:start="45:21" pos:end="51:26">

                    <if_stmt pos:start="45:21" pos:end="47:35"><if pos:start="45:21" pos:end="47:35">if <condition pos:start="45:24" pos:end="45:44">(<expr pos:start="45:25" pos:end="45:43"><operator pos:start="45:25" pos:end="45:25">!</operator><call pos:start="45:26" pos:end="45:43"><name pos:start="45:26" pos:end="45:33">url_feof</name><argument_list pos:start="45:34" pos:end="45:43">(<argument pos:start="45:35" pos:end="45:42"><expr pos:start="45:35" pos:end="45:42"><operator pos:start="45:35" pos:end="45:35">&amp;</operator><name pos:start="45:36" pos:end="45:42"><name pos:start="45:36" pos:end="45:38">var</name><operator pos:start="45:39" pos:end="45:40">-&gt;</operator><name pos:start="45:41" pos:end="45:42">pb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="47:25" pos:end="47:35"><block_content pos:start="47:25" pos:end="47:35">

                        <return pos:start="47:25" pos:end="47:35">return <expr pos:start="47:32" pos:end="47:34"><name pos:start="47:32" pos:end="47:34">ret</name></expr>;</return></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="49:21" pos:end="49:44"><expr pos:start="49:21" pos:end="49:43"><call pos:start="49:21" pos:end="49:43"><name pos:start="49:21" pos:end="49:32">reset_packet</name><argument_list pos:start="49:33" pos:end="49:43">(<argument pos:start="49:34" pos:end="49:42"><expr pos:start="49:34" pos:end="49:42"><operator pos:start="49:34" pos:end="49:34">&amp;</operator><name pos:start="49:35" pos:end="49:42"><name pos:start="49:35" pos:end="49:37">var</name><operator pos:start="49:38" pos:end="49:39">-&gt;</operator><name pos:start="49:40" pos:end="49:42">pkt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="51:21" pos:end="51:26">break;</break>

                </block_content>}</block></if> <else pos:start="53:19" pos:end="59:17">else <block pos:start="53:24" pos:end="59:17">{<block_content pos:start="55:21" pos:end="57:58">

                    <if_stmt pos:start="55:21" pos:end="57:58"><if pos:start="55:21" pos:end="57:58">if <condition pos:start="55:24" pos:end="55:61">(<expr pos:start="55:25" pos:end="55:60"><name pos:start="55:25" pos:end="55:42"><name pos:start="55:25" pos:end="55:25">c</name><operator pos:start="55:26" pos:end="55:27">-&gt;</operator><name pos:start="55:28" pos:end="55:42">first_timestamp</name></name> <operator pos:start="55:44" pos:end="55:45">==</operator> <name pos:start="55:47" pos:end="55:60">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="57:25" pos:end="57:58"><block_content pos:start="57:25" pos:end="57:58">

                        <expr_stmt pos:start="57:25" pos:end="57:58"><expr pos:start="57:25" pos:end="57:57"><name pos:start="57:25" pos:end="57:42"><name pos:start="57:25" pos:end="57:25">c</name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:42">first_timestamp</name></name> <operator pos:start="57:44" pos:end="57:44">=</operator> <name pos:start="57:46" pos:end="57:57"><name pos:start="57:46" pos:end="57:48">var</name><operator pos:start="57:49" pos:end="57:50">-&gt;</operator><name pos:start="57:51" pos:end="57:53">pkt</name><operator pos:start="57:54" pos:end="57:54">.</operator><name pos:start="57:55" pos:end="57:57">dts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></else></if_stmt>



                <if_stmt pos:start="63:17" pos:end="65:26"><if pos:start="63:17" pos:end="65:26">if <condition pos:start="63:20" pos:end="63:56">(<expr pos:start="63:21" pos:end="63:55"><name pos:start="63:21" pos:end="63:37"><name pos:start="63:21" pos:end="63:21">c</name><operator pos:start="63:22" pos:end="63:23">-&gt;</operator><name pos:start="63:24" pos:end="63:37">seek_timestamp</name></name> <operator pos:start="63:39" pos:end="63:40">==</operator> <name pos:start="63:42" pos:end="63:55">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="65:21" pos:end="65:26"><block_content pos:start="65:21" pos:end="65:26">

                    <break pos:start="65:21" pos:end="65:26">break;</break></block_content></block></if></if_stmt>



                <if_stmt pos:start="69:17" pos:end="75:17"><if pos:start="69:17" pos:end="75:17">if <condition pos:start="69:20" pos:end="69:51">(<expr pos:start="69:21" pos:end="69:50"><name pos:start="69:21" pos:end="69:32"><name pos:start="69:21" pos:end="69:23">var</name><operator pos:start="69:24" pos:end="69:25">-&gt;</operator><name pos:start="69:26" pos:end="69:28">pkt</name><operator pos:start="69:29" pos:end="69:29">.</operator><name pos:start="69:30" pos:end="69:32">dts</name></name> <operator pos:start="69:34" pos:end="69:35">==</operator> <name pos:start="69:37" pos:end="69:50">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="69:53" pos:end="75:17">{<block_content pos:start="71:21" pos:end="73:26">

                    <expr_stmt pos:start="71:21" pos:end="71:55"><expr pos:start="71:21" pos:end="71:54"><name pos:start="71:21" pos:end="71:37"><name pos:start="71:21" pos:end="71:21">c</name><operator pos:start="71:22" pos:end="71:23">-&gt;</operator><name pos:start="71:24" pos:end="71:37">seek_timestamp</name></name> <operator pos:start="71:39" pos:end="71:39">=</operator> <name pos:start="71:41" pos:end="71:54">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

                    <break pos:start="73:21" pos:end="73:26">break;</break>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="79:17" pos:end="79:62"><expr pos:start="79:17" pos:end="79:61"><name pos:start="79:17" pos:end="79:18">st</name> <operator pos:start="79:20" pos:end="79:20">=</operator> <name pos:start="79:22" pos:end="79:61"><name pos:start="79:22" pos:end="79:24">var</name><operator pos:start="79:25" pos:end="79:26">-&gt;</operator><name pos:start="79:27" pos:end="79:29">ctx</name><operator pos:start="79:30" pos:end="79:31">-&gt;</operator><name pos:start="79:32" pos:end="79:38">streams</name><index pos:start="79:39" pos:end="79:61">[<expr pos:start="79:40" pos:end="79:60"><name pos:start="79:40" pos:end="79:60"><name pos:start="79:40" pos:end="79:42">var</name><operator pos:start="79:43" pos:end="79:44">-&gt;</operator><name pos:start="79:45" pos:end="79:47">pkt</name><operator pos:start="79:48" pos:end="79:48">.</operator><name pos:start="79:49" pos:end="79:60">stream_index</name></name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="81:17" pos:end="85:44"><expr pos:start="81:17" pos:end="85:43"><name pos:start="81:17" pos:end="81:23">ts_diff</name> <operator pos:start="81:25" pos:end="81:25">=</operator> <call pos:start="81:27" pos:end="83:74"><name pos:start="81:27" pos:end="81:40">av_rescale_rnd</name><argument_list pos:start="81:41" pos:end="83:74">(<argument pos:start="81:42" pos:end="81:53"><expr pos:start="81:42" pos:end="81:53"><name pos:start="81:42" pos:end="81:53"><name pos:start="81:42" pos:end="81:44">var</name><operator pos:start="81:45" pos:end="81:46">-&gt;</operator><name pos:start="81:47" pos:end="81:49">pkt</name><operator pos:start="81:50" pos:end="81:50">.</operator><name pos:start="81:51" pos:end="81:53">dts</name></name></expr></argument>, <argument pos:start="81:56" pos:end="81:67"><expr pos:start="81:56" pos:end="81:67"><name pos:start="81:56" pos:end="81:67">AV_TIME_BASE</name></expr></argument>,

                                         <argument pos:start="83:42" pos:end="83:58"><expr pos:start="83:42" pos:end="83:58"><name pos:start="83:42" pos:end="83:58"><name pos:start="83:42" pos:end="83:43">st</name><operator pos:start="83:44" pos:end="83:45">-&gt;</operator><name pos:start="83:46" pos:end="83:54">time_base</name><operator pos:start="83:55" pos:end="83:55">.</operator><name pos:start="83:56" pos:end="83:58">den</name></name></expr></argument>, <argument pos:start="83:61" pos:end="83:73"><expr pos:start="83:61" pos:end="83:73"><name pos:start="83:61" pos:end="83:73">AV_ROUND_DOWN</name></expr></argument>)</argument_list></call> <operator pos:start="83:76" pos:end="83:76">-</operator>

                          <name pos:start="85:27" pos:end="85:43"><name pos:start="85:27" pos:end="85:27">c</name><operator pos:start="85:28" pos:end="85:29">-&gt;</operator><name pos:start="85:30" pos:end="85:43">seek_timestamp</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="87:17" pos:end="95:17"><if pos:start="87:17" pos:end="95:17">if <condition pos:start="87:20" pos:end="89:71">(<expr pos:start="87:21" pos:end="89:70"><name pos:start="87:21" pos:end="87:27">ts_diff</name> <operator pos:start="87:29" pos:end="87:30">&gt;=</operator> <literal type="number" pos:start="87:32" pos:end="87:32">0</literal> <operator pos:start="87:34" pos:end="87:35">&amp;&amp;</operator> <operator pos:start="87:37" pos:end="87:37">(</operator><name pos:start="87:38" pos:end="87:50"><name pos:start="87:38" pos:end="87:38">c</name><operator pos:start="87:39" pos:end="87:40">-&gt;</operator><name pos:start="87:41" pos:end="87:50">seek_flags</name></name>  <operator pos:start="87:53" pos:end="87:53">&amp;</operator> <name pos:start="87:55" pos:end="87:69">AVSEEK_FLAG_ANY</name> <operator pos:start="87:71" pos:end="87:72">||</operator>

                                     <name pos:start="89:38" pos:end="89:51"><name pos:start="89:38" pos:end="89:40">var</name><operator pos:start="89:41" pos:end="89:42">-&gt;</operator><name pos:start="89:43" pos:end="89:45">pkt</name><operator pos:start="89:46" pos:end="89:46">.</operator><name pos:start="89:47" pos:end="89:51">flags</name></name> <operator pos:start="89:53" pos:end="89:53">&amp;</operator> <name pos:start="89:55" pos:end="89:69">AV_PKT_FLAG_KEY</name><operator pos:start="89:70" pos:end="89:70">)</operator></expr>)</condition> <block pos:start="89:73" pos:end="95:17">{<block_content pos:start="91:21" pos:end="93:26">

                    <expr_stmt pos:start="91:21" pos:end="91:55"><expr pos:start="91:21" pos:end="91:54"><name pos:start="91:21" pos:end="91:37"><name pos:start="91:21" pos:end="91:21">c</name><operator pos:start="91:22" pos:end="91:23">-&gt;</operator><name pos:start="91:24" pos:end="91:37">seek_timestamp</name></name> <operator pos:start="91:39" pos:end="91:39">=</operator> <name pos:start="91:41" pos:end="91:54">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

                    <break pos:start="93:21" pos:end="93:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></while>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="101:9" pos:end="101:69">/* Check if this stream has the packet with the lowest dts */</comment>

        <if_stmt pos:start="103:9" pos:end="115:9"><if pos:start="103:9" pos:end="115:9">if <condition pos:start="103:12" pos:end="103:26">(<expr pos:start="103:13" pos:end="103:25"><name pos:start="103:13" pos:end="103:25"><name pos:start="103:13" pos:end="103:15">var</name><operator pos:start="103:16" pos:end="103:17">-&gt;</operator><name pos:start="103:18" pos:end="103:20">pkt</name><operator pos:start="103:21" pos:end="103:21">.</operator><name pos:start="103:22" pos:end="103:25">data</name></name></expr>)</condition> <block pos:start="103:28" pos:end="115:9">{<block_content pos:start="105:13" pos:end="113:31">

            <decl_stmt pos:start="105:13" pos:end="105:61"><decl pos:start="105:13" pos:end="105:60"><type pos:start="105:13" pos:end="105:28"><name pos:start="105:13" pos:end="105:26"><name pos:start="105:13" pos:end="105:18">struct</name> <name pos:start="105:20" pos:end="105:26">variant</name></name> <modifier pos:start="105:28" pos:end="105:28">*</modifier></type><name pos:start="105:29" pos:end="105:34">minvar</name> <init pos:start="105:36" pos:end="105:60">= <expr pos:start="105:38" pos:end="105:60"><name pos:start="105:38" pos:end="105:60"><name pos:start="105:38" pos:end="105:38">c</name><operator pos:start="105:39" pos:end="105:40">-&gt;</operator><name pos:start="105:41" pos:end="105:48">variants</name><index pos:start="105:49" pos:end="105:60">[<expr pos:start="105:50" pos:end="105:59"><name pos:start="105:50" pos:end="105:59">minvariant</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="107:13" pos:end="113:31"><if pos:start="107:13" pos:end="113:31">if <condition pos:start="107:16" pos:end="111:110">(<expr pos:start="107:17" pos:end="111:109"><name pos:start="107:17" pos:end="107:26">minvariant</name> <operator pos:start="107:28" pos:end="107:28">&lt;</operator> <literal type="number" pos:start="107:30" pos:end="107:30">0</literal> <operator pos:start="107:32" pos:end="107:33">||</operator>

                <call pos:start="109:17" pos:end="111:105"><name pos:start="109:17" pos:end="109:29">av_compare_ts</name><argument_list pos:start="109:30" pos:end="111:105">(<argument pos:start="109:31" pos:end="109:42"><expr pos:start="109:31" pos:end="109:42"><name pos:start="109:31" pos:end="109:42"><name pos:start="109:31" pos:end="109:33">var</name><operator pos:start="109:34" pos:end="109:35">-&gt;</operator><name pos:start="109:36" pos:end="109:38">pkt</name><operator pos:start="109:39" pos:end="109:39">.</operator><name pos:start="109:40" pos:end="109:42">dts</name></name></expr></argument>, <argument pos:start="109:45" pos:end="109:95"><expr pos:start="109:45" pos:end="109:95"><name pos:start="109:45" pos:end="109:84"><name pos:start="109:45" pos:end="109:47">var</name><operator pos:start="109:48" pos:end="109:49">-&gt;</operator><name pos:start="109:50" pos:end="109:52">ctx</name><operator pos:start="109:53" pos:end="109:54">-&gt;</operator><name pos:start="109:55" pos:end="109:61">streams</name><index pos:start="109:62" pos:end="109:84">[<expr pos:start="109:63" pos:end="109:83"><name pos:start="109:63" pos:end="109:83"><name pos:start="109:63" pos:end="109:65">var</name><operator pos:start="109:66" pos:end="109:67">-&gt;</operator><name pos:start="109:68" pos:end="109:70">pkt</name><operator pos:start="109:71" pos:end="109:71">.</operator><name pos:start="109:72" pos:end="109:83">stream_index</name></name></expr>]</index></name><operator pos:start="109:85" pos:end="109:86">-&gt;</operator><name pos:start="109:87" pos:end="109:95">time_base</name></expr></argument>,

                              <argument pos:start="111:31" pos:end="111:45"><expr pos:start="111:31" pos:end="111:45"><name pos:start="111:31" pos:end="111:45"><name pos:start="111:31" pos:end="111:36">minvar</name><operator pos:start="111:37" pos:end="111:38">-&gt;</operator><name pos:start="111:39" pos:end="111:41">pkt</name><operator pos:start="111:42" pos:end="111:42">.</operator><name pos:start="111:43" pos:end="111:45">dts</name></name></expr></argument>, <argument pos:start="111:48" pos:end="111:104"><expr pos:start="111:48" pos:end="111:104"><name pos:start="111:48" pos:end="111:93"><name pos:start="111:48" pos:end="111:53">minvar</name><operator pos:start="111:54" pos:end="111:55">-&gt;</operator><name pos:start="111:56" pos:end="111:58">ctx</name><operator pos:start="111:59" pos:end="111:60">-&gt;</operator><name pos:start="111:61" pos:end="111:67">streams</name><index pos:start="111:68" pos:end="111:93">[<expr pos:start="111:69" pos:end="111:92"><name pos:start="111:69" pos:end="111:92"><name pos:start="111:69" pos:end="111:74">minvar</name><operator pos:start="111:75" pos:end="111:76">-&gt;</operator><name pos:start="111:77" pos:end="111:79">pkt</name><operator pos:start="111:80" pos:end="111:80">.</operator><name pos:start="111:81" pos:end="111:92">stream_index</name></name></expr>]</index></name><operator pos:start="111:94" pos:end="111:95">-&gt;</operator><name pos:start="111:96" pos:end="111:104">time_base</name></expr></argument>)</argument_list></call> <operator pos:start="111:107" pos:end="111:107">&gt;</operator> <literal type="number" pos:start="111:109" pos:end="111:109">0</literal></expr>)</condition><block type="pseudo" pos:start="113:17" pos:end="113:31"><block_content pos:start="113:17" pos:end="113:31">

                <expr_stmt pos:start="113:17" pos:end="113:31"><expr pos:start="113:17" pos:end="113:30"><name pos:start="113:17" pos:end="113:26">minvariant</name> <operator pos:start="113:28" pos:end="113:28">=</operator> <name pos:start="113:30" pos:end="113:30">i</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="119:5" pos:end="125:5"><if pos:start="119:5" pos:end="125:5">if <condition pos:start="119:8" pos:end="119:26">(<expr pos:start="119:9" pos:end="119:25"><name pos:start="119:9" pos:end="119:25"><name pos:start="119:9" pos:end="119:9">c</name><operator pos:start="119:10" pos:end="119:11">-&gt;</operator><name pos:start="119:12" pos:end="119:25">end_of_segment</name></name></expr>)</condition> <block pos:start="119:28" pos:end="125:5">{<block_content pos:start="121:9" pos:end="123:23">

        <if_stmt pos:start="121:9" pos:end="123:23"><if pos:start="121:9" pos:end="123:23">if <condition pos:start="121:12" pos:end="121:40">(<expr pos:start="121:13" pos:end="121:39"><call pos:start="121:13" pos:end="121:39"><name pos:start="121:13" pos:end="121:33">recheck_discard_flags</name><argument_list pos:start="121:34" pos:end="121:39">(<argument pos:start="121:35" pos:end="121:35"><expr pos:start="121:35" pos:end="121:35"><name pos:start="121:35" pos:end="121:35">s</name></expr></argument>, <argument pos:start="121:38" pos:end="121:38"><expr pos:start="121:38" pos:end="121:38"><literal type="number" pos:start="121:38" pos:end="121:38">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="123:13" pos:end="123:23"><block_content pos:start="123:13" pos:end="123:23">

            <goto pos:start="123:13" pos:end="123:23">goto <name pos:start="123:18" pos:end="123:22">start</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="127:5" pos:end="127:39">/* If we got a packet, return it */</comment>

    <if_stmt pos:start="129:5" pos:end="139:5"><if pos:start="129:5" pos:end="139:5">if <condition pos:start="129:8" pos:end="129:24">(<expr pos:start="129:9" pos:end="129:23"><name pos:start="129:9" pos:end="129:18">minvariant</name> <operator pos:start="129:20" pos:end="129:21">&gt;=</operator> <literal type="number" pos:start="129:23" pos:end="129:23">0</literal></expr>)</condition> <block pos:start="129:26" pos:end="139:5">{<block_content pos:start="131:9" pos:end="137:17">

        <expr_stmt pos:start="131:9" pos:end="131:44"><expr pos:start="131:9" pos:end="131:43"><operator pos:start="131:9" pos:end="131:9">*</operator><name pos:start="131:10" pos:end="131:12">pkt</name> <operator pos:start="131:14" pos:end="131:14">=</operator> <name pos:start="131:16" pos:end="131:38"><name pos:start="131:16" pos:end="131:16">c</name><operator pos:start="131:17" pos:end="131:18">-&gt;</operator><name pos:start="131:19" pos:end="131:26">variants</name><index pos:start="131:27" pos:end="131:38">[<expr pos:start="131:28" pos:end="131:37"><name pos:start="131:28" pos:end="131:37">minvariant</name></expr>]</index></name><operator pos:start="131:39" pos:end="131:40">-&gt;</operator><name pos:start="131:41" pos:end="131:43">pkt</name></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:68"><expr pos:start="133:9" pos:end="133:67"><name pos:start="133:9" pos:end="133:25"><name pos:start="133:9" pos:end="133:11">pkt</name><operator pos:start="133:12" pos:end="133:13">-&gt;</operator><name pos:start="133:14" pos:end="133:25">stream_index</name></name> <operator pos:start="133:27" pos:end="133:28">+=</operator> <name pos:start="133:30" pos:end="133:52"><name pos:start="133:30" pos:end="133:30">c</name><operator pos:start="133:31" pos:end="133:32">-&gt;</operator><name pos:start="133:33" pos:end="133:40">variants</name><index pos:start="133:41" pos:end="133:52">[<expr pos:start="133:42" pos:end="133:51"><name pos:start="133:42" pos:end="133:51">minvariant</name></expr>]</index></name><operator pos:start="133:53" pos:end="133:54">-&gt;</operator><name pos:start="133:55" pos:end="133:67">stream_offset</name></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:52"><expr pos:start="135:9" pos:end="135:51"><call pos:start="135:9" pos:end="135:51"><name pos:start="135:9" pos:end="135:20">reset_packet</name><argument_list pos:start="135:21" pos:end="135:51">(<argument pos:start="135:22" pos:end="135:50"><expr pos:start="135:22" pos:end="135:50"><operator pos:start="135:22" pos:end="135:22">&amp;</operator><name pos:start="135:23" pos:end="135:45"><name pos:start="135:23" pos:end="135:23">c</name><operator pos:start="135:24" pos:end="135:25">-&gt;</operator><name pos:start="135:26" pos:end="135:33">variants</name><index pos:start="135:34" pos:end="135:45">[<expr pos:start="135:35" pos:end="135:44"><name pos:start="135:35" pos:end="135:44">minvariant</name></expr>]</index></name><operator pos:start="135:46" pos:end="135:47">-&gt;</operator><name pos:start="135:48" pos:end="135:50">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="137:9" pos:end="137:17">return <expr pos:start="137:16" pos:end="137:16"><literal type="number" pos:start="137:16" pos:end="137:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="141:5" pos:end="141:23">return <expr pos:start="141:12" pos:end="141:22"><name pos:start="141:12" pos:end="141:22">AVERROR_EOF</name></expr>;</return>

</block_content>}</block></function>
</unit>
