<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19084.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">tgq_decode_frame</name><parameter_list pos:start="1:28" pos:end="5:44">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:38"><decl pos:start="3:29" pos:end="3:38"><type pos:start="3:29" pos:end="3:38"><name pos:start="3:29" pos:end="3:32">void</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:38">data</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:54"><decl pos:start="3:41" pos:end="3:54"><type pos:start="3:41" pos:end="3:54"><name pos:start="3:41" pos:end="3:43">int</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:54">data_size</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:43"><decl pos:start="5:29" pos:end="5:43"><type pos:start="5:29" pos:end="5:43"><name pos:start="5:29" pos:end="5:36">AVPacket</name> <modifier pos:start="5:38" pos:end="5:38">*</modifier></type><name pos:start="5:39" pos:end="5:43">avpkt</name></decl></parameter>)</parameter_list><block pos:start="5:45" pos:end="93:1">{<block_content pos:start="7:5" pos:end="91:25">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">buf</name> <init pos:start="7:24" pos:end="7:36">= <expr pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:30">avpkt</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">buf_size</name> <init pos:start="9:18" pos:end="9:30">= <expr pos:start="9:20" pos:end="9:30"><name pos:start="9:20" pos:end="9:30"><name pos:start="9:20" pos:end="9:24">avpkt</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:34"><type pos:start="11:5" pos:end="11:19"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">uint8_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:28">buf_start</name> <init pos:start="11:30" pos:end="11:34">= <expr pos:start="11:32" pos:end="11:34"><name pos:start="11:32" pos:end="11:34">buf</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:44"><decl pos:start="13:5" pos:end="13:43"><type pos:start="13:5" pos:end="13:19"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:17">uint8_t</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:26">buf_end</name> <init pos:start="13:28" pos:end="13:43">= <expr pos:start="13:30" pos:end="13:43"><name pos:start="13:30" pos:end="13:32">buf</name> <operator pos:start="13:34" pos:end="13:34">+</operator> <name pos:start="13:36" pos:end="13:43">buf_size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:37"><decl pos:start="15:5" pos:end="15:36"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:14">TgqContext</name> <modifier pos:start="15:16" pos:end="15:16">*</modifier></type><name pos:start="15:17" pos:end="15:17">s</name> <init pos:start="15:19" pos:end="15:36">= <expr pos:start="15:21" pos:end="15:36"><name pos:start="15:21" pos:end="15:36"><name pos:start="15:21" pos:end="15:25">avctx</name><operator pos:start="15:26" pos:end="15:27">-&gt;</operator><name pos:start="15:28" pos:end="15:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:12"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">x</name></decl>,<decl pos:start="17:11" pos:end="17:11"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:11" pos:end="17:11">y</name></decl>;</decl_stmt>



    <decl_stmt pos:start="21:5" pos:end="21:51"><decl pos:start="21:5" pos:end="21:50"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:18">big_endian</name> <init pos:start="21:20" pos:end="21:50">= <expr pos:start="21:22" pos:end="21:50"><call pos:start="21:22" pos:end="21:37"><name pos:start="21:22" pos:end="21:28">AV_RL32</name><argument_list pos:start="21:29" pos:end="21:37">(<argument pos:start="21:30" pos:end="21:36"><expr pos:start="21:30" pos:end="21:36"><operator pos:start="21:30" pos:end="21:30">&amp;</operator><name pos:start="21:31" pos:end="21:36"><name pos:start="21:31" pos:end="21:33">buf</name><index pos:start="21:34" pos:end="21:36">[<expr pos:start="21:35" pos:end="21:35"><literal type="number" pos:start="21:35" pos:end="21:35">4</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="21:39" pos:end="21:39">&gt;</operator> <literal type="number" pos:start="21:41" pos:end="21:50">0x000FFFFF</literal></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:13"><expr pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:7">buf</name> <operator pos:start="23:9" pos:end="23:10">+=</operator> <literal type="number" pos:start="23:12" pos:end="23:12">8</literal></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if<condition pos:start="27:7" pos:end="27:21">(<expr pos:start="27:8" pos:end="27:20"><literal type="number" pos:start="27:8" pos:end="27:8">8</literal><operator pos:start="27:9" pos:end="27:9">&gt;</operator><name pos:start="27:10" pos:end="27:16">buf_end</name><operator pos:start="27:17" pos:end="27:17">-</operator><name pos:start="27:18" pos:end="27:20">buf</name></expr>)</condition> <block pos:start="27:23" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:18">

        <expr_stmt pos:start="29:9" pos:end="29:60"><expr pos:start="29:9" pos:end="29:59"><call pos:start="29:9" pos:end="29:59"><name pos:start="29:9" pos:end="29:14">av_log</name><argument_list pos:start="29:15" pos:end="29:59">(<argument pos:start="29:16" pos:end="29:20"><expr pos:start="29:16" pos:end="29:20"><name pos:start="29:16" pos:end="29:20">avctx</name></expr></argument>, <argument pos:start="29:23" pos:end="29:36"><expr pos:start="29:23" pos:end="29:36"><name pos:start="29:23" pos:end="29:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="29:39" pos:end="29:58"><expr pos:start="29:39" pos:end="29:58"><literal type="string" pos:start="29:39" pos:end="29:58">"truncated header\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:18">return <expr pos:start="31:16" pos:end="31:17"><operator pos:start="31:16" pos:end="31:16">-</operator><literal type="number" pos:start="31:17" pos:end="31:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:65"><expr pos:start="35:5" pos:end="35:64"><name pos:start="35:5" pos:end="35:12"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:12">width</name></name>  <operator pos:start="35:15" pos:end="35:15">=</operator> <ternary pos:start="35:17" pos:end="35:64"><condition pos:start="35:17" pos:end="35:28"><expr pos:start="35:17" pos:end="35:26"><name pos:start="35:17" pos:end="35:26">big_endian</name></expr> ?</condition><then pos:start="35:30" pos:end="35:45"> <expr pos:start="35:30" pos:end="35:45"><call pos:start="35:30" pos:end="35:45"><name pos:start="35:30" pos:end="35:36">AV_RB16</name><argument_list pos:start="35:37" pos:end="35:45">(<argument pos:start="35:38" pos:end="35:44"><expr pos:start="35:38" pos:end="35:44"><operator pos:start="35:38" pos:end="35:38">&amp;</operator><name pos:start="35:39" pos:end="35:44"><name pos:start="35:39" pos:end="35:41">buf</name><index pos:start="35:42" pos:end="35:44">[<expr pos:start="35:43" pos:end="35:43"><literal type="number" pos:start="35:43" pos:end="35:43">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr> </then><else pos:start="35:47" pos:end="35:64">: <expr pos:start="35:49" pos:end="35:64"><call pos:start="35:49" pos:end="35:64"><name pos:start="35:49" pos:end="35:55">AV_RL16</name><argument_list pos:start="35:56" pos:end="35:64">(<argument pos:start="35:57" pos:end="35:63"><expr pos:start="35:57" pos:end="35:63"><operator pos:start="35:57" pos:end="35:57">&amp;</operator><name pos:start="35:58" pos:end="35:63"><name pos:start="35:58" pos:end="35:60">buf</name><index pos:start="35:61" pos:end="35:63">[<expr pos:start="35:62" pos:end="35:62"><literal type="number" pos:start="35:62" pos:end="35:62">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:65"><expr pos:start="37:5" pos:end="37:64"><name pos:start="37:5" pos:end="37:13"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:13">height</name></name> <operator pos:start="37:15" pos:end="37:15">=</operator> <ternary pos:start="37:17" pos:end="37:64"><condition pos:start="37:17" pos:end="37:28"><expr pos:start="37:17" pos:end="37:26"><name pos:start="37:17" pos:end="37:26">big_endian</name></expr> ?</condition><then pos:start="37:30" pos:end="37:45"> <expr pos:start="37:30" pos:end="37:45"><call pos:start="37:30" pos:end="37:45"><name pos:start="37:30" pos:end="37:36">AV_RB16</name><argument_list pos:start="37:37" pos:end="37:45">(<argument pos:start="37:38" pos:end="37:44"><expr pos:start="37:38" pos:end="37:44"><operator pos:start="37:38" pos:end="37:38">&amp;</operator><name pos:start="37:39" pos:end="37:44"><name pos:start="37:39" pos:end="37:41">buf</name><index pos:start="37:42" pos:end="37:44">[<expr pos:start="37:43" pos:end="37:43"><literal type="number" pos:start="37:43" pos:end="37:43">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr> </then><else pos:start="37:47" pos:end="37:64">: <expr pos:start="37:49" pos:end="37:64"><call pos:start="37:49" pos:end="37:64"><name pos:start="37:49" pos:end="37:55">AV_RL16</name><argument_list pos:start="37:56" pos:end="37:64">(<argument pos:start="37:57" pos:end="37:63"><expr pos:start="37:57" pos:end="37:63"><operator pos:start="37:57" pos:end="37:57">&amp;</operator><name pos:start="37:58" pos:end="37:63"><name pos:start="37:58" pos:end="37:60">buf</name><index pos:start="37:61" pos:end="37:63">[<expr pos:start="37:62" pos:end="37:62"><literal type="number" pos:start="37:62" pos:end="37:62">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="49:5"><if pos:start="41:5" pos:end="49:5">if <condition pos:start="41:8" pos:end="41:65">(<expr pos:start="41:9" pos:end="41:64"><name pos:start="41:9" pos:end="41:23"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:16">avctx</name><operator pos:start="41:17" pos:end="41:18">-&gt;</operator><name pos:start="41:19" pos:end="41:23">width</name></name><operator pos:start="41:24" pos:end="41:25">!=</operator><name pos:start="41:26" pos:end="41:33"><name pos:start="41:26" pos:end="41:26">s</name><operator pos:start="41:27" pos:end="41:28">-&gt;</operator><name pos:start="41:29" pos:end="41:33">width</name></name> <operator pos:start="41:35" pos:end="41:36">||</operator> <name pos:start="41:38" pos:end="41:53"><name pos:start="41:38" pos:end="41:38">s</name><operator pos:start="41:39" pos:end="41:40">-&gt;</operator><name pos:start="41:41" pos:end="41:45">avctx</name><operator pos:start="41:46" pos:end="41:47">-&gt;</operator><name pos:start="41:48" pos:end="41:53">height</name></name><operator pos:start="41:54" pos:end="41:55">!=</operator><name pos:start="41:56" pos:end="41:64"><name pos:start="41:56" pos:end="41:56">s</name><operator pos:start="41:57" pos:end="41:58">-&gt;</operator><name pos:start="41:59" pos:end="41:64">height</name></name></expr>)</condition> <block pos:start="41:67" pos:end="49:5">{<block_content pos:start="43:9" pos:end="47:52">

        <expr_stmt pos:start="43:9" pos:end="43:62"><expr pos:start="43:9" pos:end="43:61"><call pos:start="43:9" pos:end="43:61"><name pos:start="43:9" pos:end="43:30">avcodec_set_dimensions</name><argument_list pos:start="43:31" pos:end="43:61">(<argument pos:start="43:32" pos:end="43:39"><expr pos:start="43:32" pos:end="43:39"><name pos:start="43:32" pos:end="43:39"><name pos:start="43:32" pos:end="43:32">s</name><operator pos:start="43:33" pos:end="43:34">-&gt;</operator><name pos:start="43:35" pos:end="43:39">avctx</name></name></expr></argument>, <argument pos:start="43:42" pos:end="43:49"><expr pos:start="43:42" pos:end="43:49"><name pos:start="43:42" pos:end="43:49"><name pos:start="43:42" pos:end="43:42">s</name><operator pos:start="43:43" pos:end="43:44">-&gt;</operator><name pos:start="43:45" pos:end="43:49">width</name></name></expr></argument>, <argument pos:start="43:52" pos:end="43:60"><expr pos:start="43:52" pos:end="43:60"><name pos:start="43:52" pos:end="43:60"><name pos:start="43:52" pos:end="43:52">s</name><operator pos:start="43:53" pos:end="43:54">-&gt;</operator><name pos:start="43:55" pos:end="43:60">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="47:52"><if pos:start="45:9" pos:end="47:52">if <condition pos:start="45:12" pos:end="45:29">(<expr pos:start="45:13" pos:end="45:28"><name pos:start="45:13" pos:end="45:28"><name pos:start="45:13" pos:end="45:13">s</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:20">frame</name><operator pos:start="45:21" pos:end="45:21">.</operator><name pos:start="45:22" pos:end="45:25">data</name><index pos:start="45:26" pos:end="45:28">[<expr pos:start="45:27" pos:end="45:27"><literal type="number" pos:start="45:27" pos:end="45:27">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:52"><block_content pos:start="47:13" pos:end="47:52">

            <expr_stmt pos:start="47:13" pos:end="47:52"><expr pos:start="47:13" pos:end="47:51"><call pos:start="47:13" pos:end="47:51"><name pos:start="47:13" pos:end="47:33"><name pos:start="47:13" pos:end="47:17">avctx</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:33">release_buffer</name></name><argument_list pos:start="47:34" pos:end="47:51">(<argument pos:start="47:35" pos:end="47:39"><expr pos:start="47:35" pos:end="47:39"><name pos:start="47:35" pos:end="47:39">avctx</name></expr></argument>, <argument pos:start="47:42" pos:end="47:50"><expr pos:start="47:42" pos:end="47:50"><operator pos:start="47:42" pos:end="47:42">&amp;</operator><name pos:start="47:43" pos:end="47:50"><name pos:start="47:43" pos:end="47:43">s</name><operator pos:start="47:44" pos:end="47:45">-&gt;</operator><name pos:start="47:46" pos:end="47:50">frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:36"><expr pos:start="51:5" pos:end="51:35"><call pos:start="51:5" pos:end="51:35"><name pos:start="51:5" pos:end="51:24">tgq_calculate_qtable</name><argument_list pos:start="51:25" pos:end="51:35">(<argument pos:start="51:26" pos:end="51:26"><expr pos:start="51:26" pos:end="51:26"><name pos:start="51:26" pos:end="51:26">s</name></expr></argument>, <argument pos:start="51:29" pos:end="51:34"><expr pos:start="51:29" pos:end="51:34"><name pos:start="51:29" pos:end="51:34"><name pos:start="51:29" pos:end="51:31">buf</name><index pos:start="51:32" pos:end="51:34">[<expr pos:start="51:33" pos:end="51:33"><literal type="number" pos:start="51:33" pos:end="51:33">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:13"><expr pos:start="53:5" pos:end="53:12"><name pos:start="53:5" pos:end="53:7">buf</name> <operator pos:start="53:9" pos:end="53:10">+=</operator> <literal type="number" pos:start="53:12" pos:end="53:12">8</literal></expr>;</expr_stmt>



    <if_stmt pos:start="57:5" pos:end="73:5"><if pos:start="57:5" pos:end="73:5">if <condition pos:start="57:8" pos:end="57:26">(<expr pos:start="57:9" pos:end="57:25"><operator pos:start="57:9" pos:end="57:9">!</operator><name pos:start="57:10" pos:end="57:25"><name pos:start="57:10" pos:end="57:10">s</name><operator pos:start="57:11" pos:end="57:12">-&gt;</operator><name pos:start="57:13" pos:end="57:17">frame</name><operator pos:start="57:18" pos:end="57:18">.</operator><name pos:start="57:19" pos:end="57:22">data</name><index pos:start="57:23" pos:end="57:25">[<expr pos:start="57:24" pos:end="57:24"><literal type="number" pos:start="57:24" pos:end="57:24">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="57:28" pos:end="73:5">{<block_content pos:start="59:9" pos:end="71:9">

        <expr_stmt pos:start="59:9" pos:end="59:31"><expr pos:start="59:9" pos:end="59:30"><name pos:start="59:9" pos:end="59:26"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:16">frame</name><operator pos:start="59:17" pos:end="59:17">.</operator><name pos:start="59:18" pos:end="59:26">key_frame</name></name> <operator pos:start="59:28" pos:end="59:28">=</operator> <literal type="number" pos:start="59:30" pos:end="59:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:47"><expr pos:start="61:9" pos:end="61:46"><name pos:start="61:9" pos:end="61:26"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:16">frame</name><operator pos:start="61:17" pos:end="61:17">.</operator><name pos:start="61:18" pos:end="61:26">pict_type</name></name> <operator pos:start="61:28" pos:end="61:28">=</operator> <name pos:start="61:30" pos:end="61:46">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:54"><expr pos:start="63:9" pos:end="63:53"><name pos:start="63:9" pos:end="63:29"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:16">frame</name><operator pos:start="63:17" pos:end="63:17">.</operator><name pos:start="63:18" pos:end="63:29">buffer_hints</name></name> <operator pos:start="63:31" pos:end="63:31">=</operator> <name pos:start="63:33" pos:end="63:53">FF_BUFFER_HINTS_VALID</name></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="71:9"><if pos:start="65:9" pos:end="71:9">if <condition pos:start="65:12" pos:end="65:48">(<expr pos:start="65:13" pos:end="65:47"><call pos:start="65:13" pos:end="65:47"><name pos:start="65:13" pos:end="65:29"><name pos:start="65:13" pos:end="65:17">avctx</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:29">get_buffer</name></name><argument_list pos:start="65:30" pos:end="65:47">(<argument pos:start="65:31" pos:end="65:35"><expr pos:start="65:31" pos:end="65:35"><name pos:start="65:31" pos:end="65:35">avctx</name></expr></argument>, <argument pos:start="65:38" pos:end="65:46"><expr pos:start="65:38" pos:end="65:46"><operator pos:start="65:38" pos:end="65:38">&amp;</operator><name pos:start="65:39" pos:end="65:46"><name pos:start="65:39" pos:end="65:39">s</name><operator pos:start="65:40" pos:end="65:41">-&gt;</operator><name pos:start="65:42" pos:end="65:46">frame</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="65:50" pos:end="71:9">{<block_content pos:start="67:13" pos:end="69:22">

            <expr_stmt pos:start="67:13" pos:end="67:65"><expr pos:start="67:13" pos:end="67:64"><call pos:start="67:13" pos:end="67:64"><name pos:start="67:13" pos:end="67:18">av_log</name><argument_list pos:start="67:19" pos:end="67:64">(<argument pos:start="67:20" pos:end="67:24"><expr pos:start="67:20" pos:end="67:24"><name pos:start="67:20" pos:end="67:24">avctx</name></expr></argument>, <argument pos:start="67:27" pos:end="67:38"><expr pos:start="67:27" pos:end="67:38"><name pos:start="67:27" pos:end="67:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="67:41" pos:end="67:63"><expr pos:start="67:41" pos:end="67:63"><literal type="string" pos:start="67:41" pos:end="67:63">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="69:13" pos:end="69:22">return <expr pos:start="69:20" pos:end="69:21"><operator pos:start="69:20" pos:end="69:20">-</operator><literal type="number" pos:start="69:21" pos:end="69:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="77:5" pos:end="81:46">for <control pos:start="77:9" pos:end="77:43">(<init pos:start="77:10" pos:end="77:13"><expr pos:start="77:10" pos:end="77:12"><name pos:start="77:10" pos:end="77:10">y</name><operator pos:start="77:11" pos:end="77:11">=</operator><literal type="number" pos:start="77:12" pos:end="77:12">0</literal></expr>;</init> <condition pos:start="77:15" pos:end="77:38"><expr pos:start="77:15" pos:end="77:37"><name pos:start="77:15" pos:end="77:15">y</name><operator pos:start="77:16" pos:end="77:16">&lt;</operator><operator pos:start="77:17" pos:end="77:17">(</operator><name pos:start="77:18" pos:end="77:30"><name pos:start="77:18" pos:end="77:22">avctx</name><operator pos:start="77:23" pos:end="77:24">-&gt;</operator><name pos:start="77:25" pos:end="77:30">height</name></name><operator pos:start="77:31" pos:end="77:31">+</operator><literal type="number" pos:start="77:32" pos:end="77:33">15</literal><operator pos:start="77:34" pos:end="77:34">)</operator><operator pos:start="77:35" pos:end="77:35">/</operator><literal type="number" pos:start="77:36" pos:end="77:37">16</literal></expr>;</condition> <incr pos:start="77:40" pos:end="77:42"><expr pos:start="77:40" pos:end="77:42"><name pos:start="77:40" pos:end="77:40">y</name><operator pos:start="77:41" pos:end="77:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="79:5" pos:end="81:46"><block_content pos:start="79:5" pos:end="81:46">

    <for pos:start="79:5" pos:end="81:46">for <control pos:start="79:9" pos:end="79:42">(<init pos:start="79:10" pos:end="79:13"><expr pos:start="79:10" pos:end="79:12"><name pos:start="79:10" pos:end="79:10">x</name><operator pos:start="79:11" pos:end="79:11">=</operator><literal type="number" pos:start="79:12" pos:end="79:12">0</literal></expr>;</init> <condition pos:start="79:15" pos:end="79:37"><expr pos:start="79:15" pos:end="79:36"><name pos:start="79:15" pos:end="79:15">x</name><operator pos:start="79:16" pos:end="79:16">&lt;</operator><operator pos:start="79:17" pos:end="79:17">(</operator><name pos:start="79:18" pos:end="79:29"><name pos:start="79:18" pos:end="79:22">avctx</name><operator pos:start="79:23" pos:end="79:24">-&gt;</operator><name pos:start="79:25" pos:end="79:29">width</name></name><operator pos:start="79:30" pos:end="79:30">+</operator><literal type="number" pos:start="79:31" pos:end="79:32">15</literal><operator pos:start="79:33" pos:end="79:33">)</operator><operator pos:start="79:34" pos:end="79:34">/</operator><literal type="number" pos:start="79:35" pos:end="79:36">16</literal></expr>;</condition> <incr pos:start="79:39" pos:end="79:41"><expr pos:start="79:39" pos:end="79:41"><name pos:start="79:39" pos:end="79:39">x</name><operator pos:start="79:40" pos:end="79:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="81:9" pos:end="81:46"><block_content pos:start="81:9" pos:end="81:46">

        <expr_stmt pos:start="81:9" pos:end="81:46"><expr pos:start="81:9" pos:end="81:45"><call pos:start="81:9" pos:end="81:45"><name pos:start="81:9" pos:end="81:21">tgq_decode_mb</name><argument_list pos:start="81:22" pos:end="81:45">(<argument pos:start="81:23" pos:end="81:23"><expr pos:start="81:23" pos:end="81:23"><name pos:start="81:23" pos:end="81:23">s</name></expr></argument>, <argument pos:start="81:26" pos:end="81:26"><expr pos:start="81:26" pos:end="81:26"><name pos:start="81:26" pos:end="81:26">y</name></expr></argument>, <argument pos:start="81:29" pos:end="81:29"><expr pos:start="81:29" pos:end="81:29"><name pos:start="81:29" pos:end="81:29">x</name></expr></argument>, <argument pos:start="81:32" pos:end="81:35"><expr pos:start="81:32" pos:end="81:35"><operator pos:start="81:32" pos:end="81:32">&amp;</operator><name pos:start="81:33" pos:end="81:35">buf</name></expr></argument>, <argument pos:start="81:38" pos:end="81:44"><expr pos:start="81:38" pos:end="81:44"><name pos:start="81:38" pos:end="81:44">buf_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></for>



    <expr_stmt pos:start="85:5" pos:end="85:33"><expr pos:start="85:5" pos:end="85:32"><operator pos:start="85:5" pos:end="85:5">*</operator><name pos:start="85:6" pos:end="85:14">data_size</name> <operator pos:start="85:16" pos:end="85:16">=</operator> <sizeof pos:start="85:18" pos:end="85:32">sizeof<argument_list pos:start="85:24" pos:end="85:32">(<argument pos:start="85:25" pos:end="85:31"><expr pos:start="85:25" pos:end="85:31"><name pos:start="85:25" pos:end="85:31">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:31"><expr pos:start="87:5" pos:end="87:30"><operator pos:start="87:5" pos:end="87:5">*</operator><operator pos:start="87:6" pos:end="87:6">(</operator><name pos:start="87:7" pos:end="87:13">AVFrame</name><operator pos:start="87:14" pos:end="87:14">*</operator><operator pos:start="87:15" pos:end="87:15">)</operator><name pos:start="87:16" pos:end="87:19">data</name> <operator pos:start="87:21" pos:end="87:21">=</operator> <name pos:start="87:23" pos:end="87:30"><name pos:start="87:23" pos:end="87:23">s</name><operator pos:start="87:24" pos:end="87:25">-&gt;</operator><name pos:start="87:26" pos:end="87:30">frame</name></name></expr>;</expr_stmt>



    <return pos:start="91:5" pos:end="91:25">return <expr pos:start="91:12" pos:end="91:24"><name pos:start="91:12" pos:end="91:14">buf</name><operator pos:start="91:15" pos:end="91:15">-</operator><name pos:start="91:16" pos:end="91:24">buf_start</name></expr>;</return>

</block_content>}</block></function>
</unit>
