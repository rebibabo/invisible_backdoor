<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20230.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">memory_map_init</name><parameter_list pos:start="1:28" pos:end="1:33">(<parameter pos:start="1:29" pos:end="1:32"><decl pos:start="1:29" pos:end="1:32"><type pos:start="1:29" pos:end="1:32"><name pos:start="1:29" pos:end="1:32">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="27:1">{<block_content pos:start="5:5" pos:end="25:74">

    <expr_stmt pos:start="5:5" pos:end="5:53"><expr pos:start="5:5" pos:end="5:52"><name pos:start="5:5" pos:end="5:17">system_memory</name> <operator pos:start="5:19" pos:end="5:19">=</operator> <call pos:start="5:21" pos:end="5:52"><name pos:start="5:21" pos:end="5:28">g_malloc</name><argument_list pos:start="5:29" pos:end="5:52">(<argument pos:start="5:30" pos:end="5:51"><expr pos:start="5:30" pos:end="5:51"><sizeof pos:start="5:30" pos:end="5:51">sizeof<argument_list pos:start="5:36" pos:end="5:51">(<argument pos:start="5:37" pos:end="5:50"><expr pos:start="5:37" pos:end="5:50"><operator pos:start="5:37" pos:end="5:37">*</operator><name pos:start="5:38" pos:end="5:50">system_memory</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:59"><expr pos:start="7:5" pos:end="7:58"><call pos:start="7:5" pos:end="7:58"><name pos:start="7:5" pos:end="7:22">memory_region_init</name><argument_list pos:start="7:23" pos:end="7:58">(<argument pos:start="7:24" pos:end="7:36"><expr pos:start="7:24" pos:end="7:36"><name pos:start="7:24" pos:end="7:36">system_memory</name></expr></argument>, <argument pos:start="7:39" pos:end="7:46"><expr pos:start="7:39" pos:end="7:46"><literal type="string" pos:start="7:39" pos:end="7:46">"system"</literal></expr></argument>, <argument pos:start="7:49" pos:end="7:57"><expr pos:start="7:49" pos:end="7:57"><name pos:start="7:49" pos:end="7:57">INT64_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:71"><expr pos:start="9:5" pos:end="9:70"><call pos:start="9:5" pos:end="9:70"><name pos:start="9:5" pos:end="9:22">address_space_init</name><argument_list pos:start="9:23" pos:end="9:70">(<argument pos:start="9:24" pos:end="9:44"><expr pos:start="9:24" pos:end="9:44"><operator pos:start="9:24" pos:end="9:24">&amp;</operator><name pos:start="9:25" pos:end="9:44">address_space_memory</name></expr></argument>, <argument pos:start="9:47" pos:end="9:59"><expr pos:start="9:47" pos:end="9:59"><name pos:start="9:47" pos:end="9:59">system_memory</name></expr></argument>, <argument pos:start="9:62" pos:end="9:69"><expr pos:start="9:62" pos:end="9:69"><literal type="string" pos:start="9:62" pos:end="9:69">"memory"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:45"><expr pos:start="13:5" pos:end="13:44"><name pos:start="13:5" pos:end="13:13">system_io</name> <operator pos:start="13:15" pos:end="13:15">=</operator> <call pos:start="13:17" pos:end="13:44"><name pos:start="13:17" pos:end="13:24">g_malloc</name><argument_list pos:start="13:25" pos:end="13:44">(<argument pos:start="13:26" pos:end="13:43"><expr pos:start="13:26" pos:end="13:43"><sizeof pos:start="13:26" pos:end="13:43">sizeof<argument_list pos:start="13:32" pos:end="13:43">(<argument pos:start="13:33" pos:end="13:42"><expr pos:start="13:33" pos:end="13:42"><operator pos:start="13:33" pos:end="13:33">*</operator><name pos:start="13:34" pos:end="13:42">system_io</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:47"><expr pos:start="15:5" pos:end="15:46"><call pos:start="15:5" pos:end="15:46"><name pos:start="15:5" pos:end="15:22">memory_region_init</name><argument_list pos:start="15:23" pos:end="15:46">(<argument pos:start="15:24" pos:end="15:32"><expr pos:start="15:24" pos:end="15:32"><name pos:start="15:24" pos:end="15:32">system_io</name></expr></argument>, <argument pos:start="15:35" pos:end="15:38"><expr pos:start="15:35" pos:end="15:38"><literal type="string" pos:start="15:35" pos:end="15:38">"io"</literal></expr></argument>, <argument pos:start="15:41" pos:end="15:45"><expr pos:start="15:41" pos:end="15:45"><literal type="number" pos:start="15:41" pos:end="15:45">65536</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:60"><expr pos:start="17:5" pos:end="17:59"><call pos:start="17:5" pos:end="17:59"><name pos:start="17:5" pos:end="17:22">address_space_init</name><argument_list pos:start="17:23" pos:end="17:59">(<argument pos:start="17:24" pos:end="17:40"><expr pos:start="17:24" pos:end="17:40"><operator pos:start="17:24" pos:end="17:24">&amp;</operator><name pos:start="17:25" pos:end="17:40">address_space_io</name></expr></argument>, <argument pos:start="17:43" pos:end="17:51"><expr pos:start="17:43" pos:end="17:51"><name pos:start="17:43" pos:end="17:51">system_io</name></expr></argument>, <argument pos:start="17:54" pos:end="17:58"><expr pos:start="17:54" pos:end="17:58"><literal type="string" pos:start="17:54" pos:end="17:58">"I/O"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:75"><expr pos:start="21:5" pos:end="21:74"><call pos:start="21:5" pos:end="21:74"><name pos:start="21:5" pos:end="21:28">memory_listener_register</name><argument_list pos:start="21:29" pos:end="21:74">(<argument pos:start="21:30" pos:end="21:50"><expr pos:start="21:30" pos:end="21:50"><operator pos:start="21:30" pos:end="21:30">&amp;</operator><name pos:start="21:31" pos:end="21:50">core_memory_listener</name></expr></argument>, <argument pos:start="21:53" pos:end="21:73"><expr pos:start="21:53" pos:end="21:73"><operator pos:start="21:53" pos:end="21:53">&amp;</operator><name pos:start="21:54" pos:end="21:73">address_space_memory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:69"><expr pos:start="23:5" pos:end="23:68"><call pos:start="23:5" pos:end="23:68"><name pos:start="23:5" pos:end="23:28">memory_listener_register</name><argument_list pos:start="23:29" pos:end="23:68">(<argument pos:start="23:30" pos:end="23:48"><expr pos:start="23:30" pos:end="23:48"><operator pos:start="23:30" pos:end="23:30">&amp;</operator><name pos:start="23:31" pos:end="23:48">io_memory_listener</name></expr></argument>, <argument pos:start="23:51" pos:end="23:67"><expr pos:start="23:51" pos:end="23:67"><operator pos:start="23:51" pos:end="23:51">&amp;</operator><name pos:start="23:52" pos:end="23:67">address_space_io</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:74"><expr pos:start="25:5" pos:end="25:73"><call pos:start="25:5" pos:end="25:73"><name pos:start="25:5" pos:end="25:28">memory_listener_register</name><argument_list pos:start="25:29" pos:end="25:73">(<argument pos:start="25:30" pos:end="25:49"><expr pos:start="25:30" pos:end="25:49"><operator pos:start="25:30" pos:end="25:30">&amp;</operator><name pos:start="25:31" pos:end="25:49">tcg_memory_listener</name></expr></argument>, <argument pos:start="25:52" pos:end="25:72"><expr pos:start="25:52" pos:end="25:72"><operator pos:start="25:52" pos:end="25:52">&amp;</operator><name pos:start="25:53" pos:end="25:72">address_space_memory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
