<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5982.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:42">mpeg_decode_sequence_extension</name><parameter_list pos:start="1:43" pos:end="1:60">(<parameter pos:start="1:44" pos:end="1:59"><decl pos:start="1:44" pos:end="1:59"><type pos:start="1:44" pos:end="1:57"><name pos:start="1:44" pos:end="1:55">Mpeg1Context</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:59">s1</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:5" pos:end="81:54">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MpegEncContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:41">= <expr pos:start="5:25" pos:end="5:41"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:41"><name pos:start="5:26" pos:end="5:27">s1</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:41">mpeg_enc_ctx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:22">horiz_size_ext</name></decl>, <decl pos:start="7:25" pos:end="7:37"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:25" pos:end="7:37">vert_size_ext</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:20">bit_rate_ext</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:25"><expr pos:start="13:5" pos:end="13:24"><call pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:13">skip_bits</name><argument_list pos:start="13:14" pos:end="13:24">(<argument pos:start="13:15" pos:end="13:20"><expr pos:start="13:15" pos:end="13:20"><operator pos:start="13:15" pos:end="13:15">&amp;</operator><name pos:start="13:16" pos:end="13:20"><name pos:start="13:16" pos:end="13:16">s</name><operator pos:start="13:17" pos:end="13:18">-&gt;</operator><name pos:start="13:19" pos:end="13:20">gb</name></name></expr></argument>, <argument pos:start="13:23" pos:end="13:23"><expr pos:start="13:23" pos:end="13:23"><literal type="number" pos:start="13:23" pos:end="13:23">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="13:27" pos:end="13:52">/* profile and level esc*/</comment>

    <expr_stmt pos:start="15:5" pos:end="15:50"><expr pos:start="15:5" pos:end="15:49"><name pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:12">avctx</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:21">profile</name></name>       <operator pos:start="15:29" pos:end="15:29">=</operator> <call pos:start="15:31" pos:end="15:49"><name pos:start="15:31" pos:end="15:38">get_bits</name><argument_list pos:start="15:39" pos:end="15:49">(<argument pos:start="15:40" pos:end="15:45"><expr pos:start="15:40" pos:end="15:45"><operator pos:start="15:40" pos:end="15:40">&amp;</operator><name pos:start="15:41" pos:end="15:45"><name pos:start="15:41" pos:end="15:41">s</name><operator pos:start="15:42" pos:end="15:43">-&gt;</operator><name pos:start="15:44" pos:end="15:45">gb</name></name></expr></argument>, <argument pos:start="15:48" pos:end="15:48"><expr pos:start="15:48" pos:end="15:48"><literal type="number" pos:start="15:48" pos:end="15:48">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:50"><expr pos:start="17:5" pos:end="17:49"><name pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:12">avctx</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:19">level</name></name>         <operator pos:start="17:29" pos:end="17:29">=</operator> <call pos:start="17:31" pos:end="17:49"><name pos:start="17:31" pos:end="17:38">get_bits</name><argument_list pos:start="17:39" pos:end="17:49">(<argument pos:start="17:40" pos:end="17:45"><expr pos:start="17:40" pos:end="17:45"><operator pos:start="17:40" pos:end="17:40">&amp;</operator><name pos:start="17:41" pos:end="17:45"><name pos:start="17:41" pos:end="17:41">s</name><operator pos:start="17:42" pos:end="17:43">-&gt;</operator><name pos:start="17:44" pos:end="17:45">gb</name></name></expr></argument>, <argument pos:start="17:48" pos:end="17:48"><expr pos:start="17:48" pos:end="17:48"><literal type="number" pos:start="17:48" pos:end="17:48">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:48"><expr pos:start="19:5" pos:end="19:47"><name pos:start="19:5" pos:end="19:27"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:27">progressive_sequence</name></name> <operator pos:start="19:29" pos:end="19:29">=</operator> <call pos:start="19:31" pos:end="19:47"><name pos:start="19:31" pos:end="19:39">get_bits1</name><argument_list pos:start="19:40" pos:end="19:47">(<argument pos:start="19:41" pos:end="19:46"><expr pos:start="19:41" pos:end="19:46"><operator pos:start="19:41" pos:end="19:41">&amp;</operator><name pos:start="19:42" pos:end="19:46"><name pos:start="19:42" pos:end="19:42">s</name><operator pos:start="19:43" pos:end="19:44">-&gt;</operator><name pos:start="19:45" pos:end="19:46">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="block" pos:start="19:52" pos:end="19:77">/* progressive_sequence */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:50"><expr pos:start="21:5" pos:end="21:49"><name pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:20">chroma_format</name></name>        <operator pos:start="21:29" pos:end="21:29">=</operator> <call pos:start="21:31" pos:end="21:49"><name pos:start="21:31" pos:end="21:38">get_bits</name><argument_list pos:start="21:39" pos:end="21:49">(<argument pos:start="21:40" pos:end="21:45"><expr pos:start="21:40" pos:end="21:45"><operator pos:start="21:40" pos:end="21:40">&amp;</operator><name pos:start="21:41" pos:end="21:45"><name pos:start="21:41" pos:end="21:41">s</name><operator pos:start="21:42" pos:end="21:43">-&gt;</operator><name pos:start="21:44" pos:end="21:45">gb</name></name></expr></argument>, <argument pos:start="21:48" pos:end="21:48"><expr pos:start="21:48" pos:end="21:48"><literal type="number" pos:start="21:48" pos:end="21:48">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="21:52" pos:end="21:90">/* chroma_format 1=420, 2=422, 3=444 */</comment>



    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:26">(<expr pos:start="25:9" pos:end="25:25"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:25"><name pos:start="25:10" pos:end="25:10">s</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:25">chroma_format</name></name></expr>)</condition> <block pos:start="25:28" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:68">

        <expr_stmt pos:start="27:9" pos:end="27:29"><expr pos:start="27:9" pos:end="27:28"><name pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:24">chroma_format</name></name> <operator pos:start="27:26" pos:end="27:26">=</operator> <literal type="number" pos:start="27:28" pos:end="27:28">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:68"><expr pos:start="29:9" pos:end="29:67"><call pos:start="29:9" pos:end="29:67"><name pos:start="29:9" pos:end="29:14">av_log</name><argument_list pos:start="29:15" pos:end="29:67">(<argument pos:start="29:16" pos:end="29:23"><expr pos:start="29:16" pos:end="29:23"><name pos:start="29:16" pos:end="29:23"><name pos:start="29:16" pos:end="29:16">s</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:23">avctx</name></name></expr></argument>, <argument pos:start="29:26" pos:end="29:39"><expr pos:start="29:26" pos:end="29:39"><name pos:start="29:26" pos:end="29:39">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="29:42" pos:end="29:66"><expr pos:start="29:42" pos:end="29:66"><literal type="string" pos:start="29:42" pos:end="29:66">"Chroma format invalid\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:50"><expr pos:start="35:5" pos:end="35:49"><name pos:start="35:5" pos:end="35:18">horiz_size_ext</name>          <operator pos:start="35:29" pos:end="35:29">=</operator> <call pos:start="35:31" pos:end="35:49"><name pos:start="35:31" pos:end="35:38">get_bits</name><argument_list pos:start="35:39" pos:end="35:49">(<argument pos:start="35:40" pos:end="35:45"><expr pos:start="35:40" pos:end="35:45"><operator pos:start="35:40" pos:end="35:40">&amp;</operator><name pos:start="35:41" pos:end="35:45"><name pos:start="35:41" pos:end="35:41">s</name><operator pos:start="35:42" pos:end="35:43">-&gt;</operator><name pos:start="35:44" pos:end="35:45">gb</name></name></expr></argument>, <argument pos:start="35:48" pos:end="35:48"><expr pos:start="35:48" pos:end="35:48"><literal type="number" pos:start="35:48" pos:end="35:48">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:50"><expr pos:start="37:5" pos:end="37:49"><name pos:start="37:5" pos:end="37:17">vert_size_ext</name>           <operator pos:start="37:29" pos:end="37:29">=</operator> <call pos:start="37:31" pos:end="37:49"><name pos:start="37:31" pos:end="37:38">get_bits</name><argument_list pos:start="37:39" pos:end="37:49">(<argument pos:start="37:40" pos:end="37:45"><expr pos:start="37:40" pos:end="37:45"><operator pos:start="37:40" pos:end="37:40">&amp;</operator><name pos:start="37:41" pos:end="37:45"><name pos:start="37:41" pos:end="37:41">s</name><operator pos:start="37:42" pos:end="37:43">-&gt;</operator><name pos:start="37:44" pos:end="37:45">gb</name></name></expr></argument>, <argument pos:start="37:48" pos:end="37:48"><expr pos:start="37:48" pos:end="37:48"><literal type="number" pos:start="37:48" pos:end="37:48">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:40"><expr pos:start="39:5" pos:end="39:39"><name pos:start="39:5" pos:end="39:12"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:12">width</name></name>  <operator pos:start="39:15" pos:end="39:16">|=</operator> <operator pos:start="39:18" pos:end="39:18">(</operator><name pos:start="39:19" pos:end="39:32">horiz_size_ext</name> <operator pos:start="39:34" pos:end="39:35">&lt;&lt;</operator> <literal type="number" pos:start="39:37" pos:end="39:38">12</literal><operator pos:start="39:39" pos:end="39:39">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:40"><expr pos:start="41:5" pos:end="41:39"><name pos:start="41:5" pos:end="41:13"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:13">height</name></name> <operator pos:start="41:15" pos:end="41:16">|=</operator> <operator pos:start="41:18" pos:end="41:18">(</operator><name pos:start="41:19" pos:end="41:31">vert_size_ext</name>  <operator pos:start="41:34" pos:end="41:35">&lt;&lt;</operator> <literal type="number" pos:start="41:37" pos:end="41:38">12</literal><operator pos:start="41:39" pos:end="41:39">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:40"><expr pos:start="43:5" pos:end="43:39"><name pos:start="43:5" pos:end="43:16">bit_rate_ext</name> <operator pos:start="43:18" pos:end="43:18">=</operator> <call pos:start="43:20" pos:end="43:39"><name pos:start="43:20" pos:end="43:27">get_bits</name><argument_list pos:start="43:28" pos:end="43:39">(<argument pos:start="43:29" pos:end="43:34"><expr pos:start="43:29" pos:end="43:34"><operator pos:start="43:29" pos:end="43:29">&amp;</operator><name pos:start="43:30" pos:end="43:34"><name pos:start="43:30" pos:end="43:30">s</name><operator pos:start="43:31" pos:end="43:32">-&gt;</operator><name pos:start="43:33" pos:end="43:34">gb</name></name></expr></argument>, <argument pos:start="43:37" pos:end="43:38"><expr pos:start="43:37" pos:end="43:38"><literal type="number" pos:start="43:37" pos:end="43:38">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="block" pos:start="43:43" pos:end="43:62">/* XXX: handle it */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:46"><expr pos:start="45:5" pos:end="45:45"><name pos:start="45:5" pos:end="45:15"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:15">bit_rate</name></name> <operator pos:start="45:17" pos:end="45:18">+=</operator> <operator pos:start="45:20" pos:end="45:20">(</operator><name pos:start="45:21" pos:end="45:32">bit_rate_ext</name> <operator pos:start="45:34" pos:end="45:35">&lt;&lt;</operator> <literal type="number" pos:start="45:37" pos:end="45:38">18</literal><operator pos:start="45:39" pos:end="45:39">)</operator> <operator pos:start="45:41" pos:end="45:41">*</operator> <literal type="number" pos:start="45:43" pos:end="45:45">400</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:53"><expr pos:start="47:5" pos:end="47:52"><call pos:start="47:5" pos:end="47:52"><name pos:start="47:5" pos:end="47:16">check_marker</name><argument_list pos:start="47:17" pos:end="47:52">(<argument pos:start="47:18" pos:end="47:23"><expr pos:start="47:18" pos:end="47:23"><operator pos:start="47:18" pos:end="47:18">&amp;</operator><name pos:start="47:19" pos:end="47:23"><name pos:start="47:19" pos:end="47:19">s</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:23">gb</name></name></expr></argument>, <argument pos:start="47:26" pos:end="47:51"><expr pos:start="47:26" pos:end="47:51"><literal type="string" pos:start="47:26" pos:end="47:51">"after bit rate extension"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:70"><expr pos:start="49:5" pos:end="49:69"><name pos:start="49:5" pos:end="49:28"><name pos:start="49:5" pos:end="49:5">s</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:12">avctx</name><operator pos:start="49:13" pos:end="49:14">-&gt;</operator><name pos:start="49:15" pos:end="49:28">rc_buffer_size</name></name> <operator pos:start="49:30" pos:end="49:31">+=</operator> <call pos:start="49:33" pos:end="49:51"><name pos:start="49:33" pos:end="49:40">get_bits</name><argument_list pos:start="49:41" pos:end="49:51">(<argument pos:start="49:42" pos:end="49:47"><expr pos:start="49:42" pos:end="49:47"><operator pos:start="49:42" pos:end="49:42">&amp;</operator><name pos:start="49:43" pos:end="49:47"><name pos:start="49:43" pos:end="49:43">s</name><operator pos:start="49:44" pos:end="49:45">-&gt;</operator><name pos:start="49:46" pos:end="49:47">gb</name></name></expr></argument>, <argument pos:start="49:50" pos:end="49:50"><expr pos:start="49:50" pos:end="49:50"><literal type="number" pos:start="49:50" pos:end="49:50">8</literal></expr></argument>)</argument_list></call> <operator pos:start="49:53" pos:end="49:53">*</operator> <literal type="number" pos:start="49:55" pos:end="49:58">1024</literal> <operator pos:start="49:60" pos:end="49:60">*</operator> <literal type="number" pos:start="49:62" pos:end="49:63">16</literal> <operator pos:start="49:65" pos:end="49:66">&lt;&lt;</operator> <literal type="number" pos:start="49:68" pos:end="49:69">10</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:37"><expr pos:start="53:5" pos:end="53:36"><name pos:start="53:5" pos:end="53:16"><name pos:start="53:5" pos:end="53:5">s</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:16">low_delay</name></name> <operator pos:start="53:18" pos:end="53:18">=</operator> <call pos:start="53:20" pos:end="53:36"><name pos:start="53:20" pos:end="53:28">get_bits1</name><argument_list pos:start="53:29" pos:end="53:36">(<argument pos:start="53:30" pos:end="53:35"><expr pos:start="53:30" pos:end="53:35"><operator pos:start="53:30" pos:end="53:30">&amp;</operator><name pos:start="53:31" pos:end="53:35"><name pos:start="53:31" pos:end="53:31">s</name><operator pos:start="53:32" pos:end="53:33">-&gt;</operator><name pos:start="53:34" pos:end="53:35">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="57:25"><if pos:start="55:5" pos:end="57:25">if <condition pos:start="55:8" pos:end="55:50">(<expr pos:start="55:9" pos:end="55:49"><name pos:start="55:9" pos:end="55:23"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:16">avctx</name><operator pos:start="55:17" pos:end="55:18">-&gt;</operator><name pos:start="55:19" pos:end="55:23">flags</name></name> <operator pos:start="55:25" pos:end="55:25">&amp;</operator> <name pos:start="55:27" pos:end="55:49">AV_CODEC_FLAG_LOW_DELAY</name></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:25"><block_content pos:start="57:9" pos:end="57:25">

        <expr_stmt pos:start="57:9" pos:end="57:25"><expr pos:start="57:9" pos:end="57:24"><name pos:start="57:9" pos:end="57:20"><name pos:start="57:9" pos:end="57:9">s</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:20">low_delay</name></name> <operator pos:start="57:22" pos:end="57:22">=</operator> <literal type="number" pos:start="57:24" pos:end="57:24">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:53"><expr pos:start="61:5" pos:end="61:52"><name pos:start="61:5" pos:end="61:26"><name pos:start="61:5" pos:end="61:6">s1</name><operator pos:start="61:7" pos:end="61:8">-&gt;</operator><name pos:start="61:9" pos:end="61:22">frame_rate_ext</name><operator pos:start="61:23" pos:end="61:23">.</operator><name pos:start="61:24" pos:end="61:26">num</name></name> <operator pos:start="61:28" pos:end="61:28">=</operator> <call pos:start="61:30" pos:end="61:48"><name pos:start="61:30" pos:end="61:37">get_bits</name><argument_list pos:start="61:38" pos:end="61:48">(<argument pos:start="61:39" pos:end="61:44"><expr pos:start="61:39" pos:end="61:44"><operator pos:start="61:39" pos:end="61:39">&amp;</operator><name pos:start="61:40" pos:end="61:44"><name pos:start="61:40" pos:end="61:40">s</name><operator pos:start="61:41" pos:end="61:42">-&gt;</operator><name pos:start="61:43" pos:end="61:44">gb</name></name></expr></argument>, <argument pos:start="61:47" pos:end="61:47"><expr pos:start="61:47" pos:end="61:47"><literal type="number" pos:start="61:47" pos:end="61:47">2</literal></expr></argument>)</argument_list></call> <operator pos:start="61:50" pos:end="61:50">+</operator> <literal type="number" pos:start="61:52" pos:end="61:52">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:53"><expr pos:start="63:5" pos:end="63:52"><name pos:start="63:5" pos:end="63:26"><name pos:start="63:5" pos:end="63:6">s1</name><operator pos:start="63:7" pos:end="63:8">-&gt;</operator><name pos:start="63:9" pos:end="63:22">frame_rate_ext</name><operator pos:start="63:23" pos:end="63:23">.</operator><name pos:start="63:24" pos:end="63:26">den</name></name> <operator pos:start="63:28" pos:end="63:28">=</operator> <call pos:start="63:30" pos:end="63:48"><name pos:start="63:30" pos:end="63:37">get_bits</name><argument_list pos:start="63:38" pos:end="63:48">(<argument pos:start="63:39" pos:end="63:44"><expr pos:start="63:39" pos:end="63:44"><operator pos:start="63:39" pos:end="63:39">&amp;</operator><name pos:start="63:40" pos:end="63:44"><name pos:start="63:40" pos:end="63:40">s</name><operator pos:start="63:41" pos:end="63:42">-&gt;</operator><name pos:start="63:43" pos:end="63:44">gb</name></name></expr></argument>, <argument pos:start="63:47" pos:end="63:47"><expr pos:start="63:47" pos:end="63:47"><literal type="number" pos:start="63:47" pos:end="63:47">5</literal></expr></argument>)</argument_list></call> <operator pos:start="63:50" pos:end="63:50">+</operator> <literal type="number" pos:start="63:52" pos:end="63:52">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:46"><expr pos:start="67:5" pos:end="67:45"><call pos:start="67:5" pos:end="67:45"><name pos:start="67:5" pos:end="67:11">ff_dlog</name><argument_list pos:start="67:12" pos:end="67:45">(<argument pos:start="67:13" pos:end="67:20"><expr pos:start="67:13" pos:end="67:20"><name pos:start="67:13" pos:end="67:20"><name pos:start="67:13" pos:end="67:13">s</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:20">avctx</name></name></expr></argument>, <argument pos:start="67:23" pos:end="67:44"><expr pos:start="67:23" pos:end="67:44"><literal type="string" pos:start="67:23" pos:end="67:44">"sequence extension\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:62"><expr pos:start="69:5" pos:end="69:61"><name pos:start="69:5" pos:end="69:15"><name pos:start="69:5" pos:end="69:5">s</name><operator pos:start="69:6" pos:end="69:7">-&gt;</operator><name pos:start="69:8" pos:end="69:15">codec_id</name></name> <operator pos:start="69:17" pos:end="69:17">=</operator> <name pos:start="69:19" pos:end="69:36"><name pos:start="69:19" pos:end="69:19">s</name><operator pos:start="69:20" pos:end="69:21">-&gt;</operator><name pos:start="69:22" pos:end="69:26">avctx</name><operator pos:start="69:27" pos:end="69:28">-&gt;</operator><name pos:start="69:29" pos:end="69:36">codec_id</name></name> <operator pos:start="69:38" pos:end="69:38">=</operator> <name pos:start="69:40" pos:end="69:61">AV_CODEC_ID_MPEG2VIDEO</name></expr>;</expr_stmt>



    <if_stmt pos:start="73:5" pos:end="81:54"><if pos:start="73:5" pos:end="81:54">if <condition pos:start="73:8" pos:end="73:45">(<expr pos:start="73:9" pos:end="73:44"><name pos:start="73:9" pos:end="73:23"><name pos:start="73:9" pos:end="73:9">s</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:16">avctx</name><operator pos:start="73:17" pos:end="73:18">-&gt;</operator><name pos:start="73:19" pos:end="73:23">debug</name></name> <operator pos:start="73:25" pos:end="73:25">&amp;</operator> <name pos:start="73:27" pos:end="73:44">FF_DEBUG_PICT_INFO</name></expr>)</condition><block type="pseudo" pos:start="75:9" pos:end="81:54"><block_content pos:start="75:9" pos:end="81:54">

        <expr_stmt pos:start="75:9" pos:end="81:54"><expr pos:start="75:9" pos:end="81:53"><call pos:start="75:9" pos:end="81:53"><name pos:start="75:9" pos:end="75:14">av_log</name><argument_list pos:start="75:15" pos:end="81:53">(<argument pos:start="75:16" pos:end="75:23"><expr pos:start="75:16" pos:end="75:23"><name pos:start="75:16" pos:end="75:23"><name pos:start="75:16" pos:end="75:16">s</name><operator pos:start="75:17" pos:end="75:18">-&gt;</operator><name pos:start="75:19" pos:end="75:23">avctx</name></name></expr></argument>, <argument pos:start="75:26" pos:end="75:37"><expr pos:start="75:26" pos:end="75:37"><name pos:start="75:26" pos:end="75:37">AV_LOG_DEBUG</name></expr></argument>,

               <argument pos:start="77:16" pos:end="77:88"><expr pos:start="77:16" pos:end="77:88"><literal type="string" pos:start="77:16" pos:end="77:78">"profile: %d, level: %d ps: %d cf:%d vbv buffer: %d, bitrate:%"</literal><name pos:start="77:79" pos:end="77:84">PRId64</name><literal type="string" pos:start="77:85" pos:end="77:88">"\n"</literal></expr></argument>,

               <argument pos:start="79:16" pos:end="79:32"><expr pos:start="79:16" pos:end="79:32"><name pos:start="79:16" pos:end="79:32"><name pos:start="79:16" pos:end="79:16">s</name><operator pos:start="79:17" pos:end="79:18">-&gt;</operator><name pos:start="79:19" pos:end="79:23">avctx</name><operator pos:start="79:24" pos:end="79:25">-&gt;</operator><name pos:start="79:26" pos:end="79:32">profile</name></name></expr></argument>, <argument pos:start="79:35" pos:end="79:49"><expr pos:start="79:35" pos:end="79:49"><name pos:start="79:35" pos:end="79:49"><name pos:start="79:35" pos:end="79:35">s</name><operator pos:start="79:36" pos:end="79:37">-&gt;</operator><name pos:start="79:38" pos:end="79:42">avctx</name><operator pos:start="79:43" pos:end="79:44">-&gt;</operator><name pos:start="79:45" pos:end="79:49">level</name></name></expr></argument>, <argument pos:start="79:52" pos:end="79:74"><expr pos:start="79:52" pos:end="79:74"><name pos:start="79:52" pos:end="79:74"><name pos:start="79:52" pos:end="79:52">s</name><operator pos:start="79:53" pos:end="79:54">-&gt;</operator><name pos:start="79:55" pos:end="79:74">progressive_sequence</name></name></expr></argument>, <argument pos:start="79:77" pos:end="79:92"><expr pos:start="79:77" pos:end="79:92"><name pos:start="79:77" pos:end="79:92"><name pos:start="79:77" pos:end="79:77">s</name><operator pos:start="79:78" pos:end="79:79">-&gt;</operator><name pos:start="79:80" pos:end="79:92">chroma_format</name></name></expr></argument>,

               <argument pos:start="81:16" pos:end="81:39"><expr pos:start="81:16" pos:end="81:39"><name pos:start="81:16" pos:end="81:39"><name pos:start="81:16" pos:end="81:16">s</name><operator pos:start="81:17" pos:end="81:18">-&gt;</operator><name pos:start="81:19" pos:end="81:23">avctx</name><operator pos:start="81:24" pos:end="81:25">-&gt;</operator><name pos:start="81:26" pos:end="81:39">rc_buffer_size</name></name></expr></argument>, <argument pos:start="81:42" pos:end="81:52"><expr pos:start="81:42" pos:end="81:52"><name pos:start="81:42" pos:end="81:52"><name pos:start="81:42" pos:end="81:42">s</name><operator pos:start="81:43" pos:end="81:44">-&gt;</operator><name pos:start="81:45" pos:end="81:52">bit_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
