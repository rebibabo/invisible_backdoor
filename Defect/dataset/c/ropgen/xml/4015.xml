<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4015.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">gboolean</name></type> <name pos:start="1:17" pos:end="1:40">register_signal_handlers</name><parameter_list pos:start="1:41" pos:end="1:46">(<parameter pos:start="1:42" pos:end="1:45"><decl pos:start="1:42" pos:end="1:45"><type pos:start="1:42" pos:end="1:45"><name pos:start="1:42" pos:end="1:45">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:16">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:20">sigaction</name></name></type> <name pos:start="5:22" pos:end="5:27">sigact</name></decl>, <decl pos:start="5:30" pos:end="5:40"><type ref="prev" pos:start="5:5" pos:end="5:20"/><name pos:start="5:30" pos:end="5:40">sigact_chld</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:49"><expr pos:start="11:5" pos:end="11:48"><call pos:start="11:5" pos:end="11:48"><name pos:start="11:5" pos:end="11:10">memset</name><argument_list pos:start="11:11" pos:end="11:48">(<argument pos:start="11:12" pos:end="11:18"><expr pos:start="11:12" pos:end="11:18"><operator pos:start="11:12" pos:end="11:12">&amp;</operator><name pos:start="11:13" pos:end="11:18">sigact</name></expr></argument>, <argument pos:start="11:21" pos:end="11:21"><expr pos:start="11:21" pos:end="11:21"><literal type="number" pos:start="11:21" pos:end="11:21">0</literal></expr></argument>, <argument pos:start="11:24" pos:end="11:47"><expr pos:start="11:24" pos:end="11:47"><sizeof pos:start="11:24" pos:end="11:47">sizeof<argument_list pos:start="11:30" pos:end="11:47">(<argument pos:start="11:31" pos:end="11:46"><expr pos:start="11:31" pos:end="11:46">struct <name pos:start="11:38" pos:end="11:46">sigaction</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:37"><expr pos:start="13:5" pos:end="13:36"><name pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:10">sigact</name><operator pos:start="13:11" pos:end="13:11">.</operator><name pos:start="13:12" pos:end="13:21">sa_handler</name></name> <operator pos:start="13:23" pos:end="13:23">=</operator> <name pos:start="13:25" pos:end="13:36">quit_handler</name></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:43"><expr pos:start="17:5" pos:end="17:42"><name pos:start="17:5" pos:end="17:7">ret</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <call pos:start="17:11" pos:end="17:42"><name pos:start="17:11" pos:end="17:19">sigaction</name><argument_list pos:start="17:20" pos:end="17:42">(<argument pos:start="17:21" pos:end="17:26"><expr pos:start="17:21" pos:end="17:26"><name pos:start="17:21" pos:end="17:26">SIGINT</name></expr></argument>, <argument pos:start="17:29" pos:end="17:35"><expr pos:start="17:29" pos:end="17:35"><operator pos:start="17:29" pos:end="17:29">&amp;</operator><name pos:start="17:30" pos:end="17:35">sigact</name></expr></argument>, <argument pos:start="17:38" pos:end="17:41"><expr pos:start="17:38" pos:end="17:41"><name pos:start="17:38" pos:end="17:41">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:18">(<expr pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:11">ret</name> <operator pos:start="19:13" pos:end="19:14">==</operator> <operator pos:start="19:16" pos:end="19:16">-</operator><literal type="number" pos:start="19:17" pos:end="19:17">1</literal></expr>)</condition> <block pos:start="19:20" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:21">

        <expr_stmt pos:start="21:9" pos:end="21:73"><expr pos:start="21:9" pos:end="21:72"><call pos:start="21:9" pos:end="21:72"><name pos:start="21:9" pos:end="21:15">g_error</name><argument_list pos:start="21:16" pos:end="21:72">(<argument pos:start="21:17" pos:end="21:54"><expr pos:start="21:17" pos:end="21:54"><literal type="string" pos:start="21:17" pos:end="21:54">"error configuring signal handler: %s"</literal></expr></argument>, <argument pos:start="21:57" pos:end="21:71"><expr pos:start="21:57" pos:end="21:71"><call pos:start="21:57" pos:end="21:71"><name pos:start="21:57" pos:end="21:64">strerror</name><argument_list pos:start="21:65" pos:end="21:71">(<argument pos:start="21:66" pos:end="21:70"><expr pos:start="21:66" pos:end="21:70"><name pos:start="21:66" pos:end="21:70">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:21">return <expr pos:start="23:16" pos:end="23:20"><name pos:start="23:16" pos:end="23:20">false</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:44"><expr pos:start="27:5" pos:end="27:43"><name pos:start="27:5" pos:end="27:7">ret</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:43"><name pos:start="27:11" pos:end="27:19">sigaction</name><argument_list pos:start="27:20" pos:end="27:43">(<argument pos:start="27:21" pos:end="27:27"><expr pos:start="27:21" pos:end="27:27"><name pos:start="27:21" pos:end="27:27">SIGTERM</name></expr></argument>, <argument pos:start="27:30" pos:end="27:36"><expr pos:start="27:30" pos:end="27:36"><operator pos:start="27:30" pos:end="27:30">&amp;</operator><name pos:start="27:31" pos:end="27:36">sigact</name></expr></argument>, <argument pos:start="27:39" pos:end="27:42"><expr pos:start="27:39" pos:end="27:42"><name pos:start="27:39" pos:end="27:42">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:18">(<expr pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:11">ret</name> <operator pos:start="29:13" pos:end="29:14">==</operator> <operator pos:start="29:16" pos:end="29:16">-</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>)</condition> <block pos:start="29:20" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:21">

        <expr_stmt pos:start="31:9" pos:end="31:73"><expr pos:start="31:9" pos:end="31:72"><call pos:start="31:9" pos:end="31:72"><name pos:start="31:9" pos:end="31:15">g_error</name><argument_list pos:start="31:16" pos:end="31:72">(<argument pos:start="31:17" pos:end="31:54"><expr pos:start="31:17" pos:end="31:54"><literal type="string" pos:start="31:17" pos:end="31:54">"error configuring signal handler: %s"</literal></expr></argument>, <argument pos:start="31:57" pos:end="31:71"><expr pos:start="31:57" pos:end="31:71"><call pos:start="31:57" pos:end="31:71"><name pos:start="31:57" pos:end="31:64">strerror</name><argument_list pos:start="31:65" pos:end="31:71">(<argument pos:start="31:66" pos:end="31:70"><expr pos:start="31:66" pos:end="31:70"><name pos:start="31:66" pos:end="31:70">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:21">return <expr pos:start="33:16" pos:end="33:20"><name pos:start="33:16" pos:end="33:20">false</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:54"><expr pos:start="39:5" pos:end="39:53"><call pos:start="39:5" pos:end="39:53"><name pos:start="39:5" pos:end="39:10">memset</name><argument_list pos:start="39:11" pos:end="39:53">(<argument pos:start="39:12" pos:end="39:23"><expr pos:start="39:12" pos:end="39:23"><operator pos:start="39:12" pos:end="39:12">&amp;</operator><name pos:start="39:13" pos:end="39:23">sigact_chld</name></expr></argument>, <argument pos:start="39:26" pos:end="39:26"><expr pos:start="39:26" pos:end="39:26"><literal type="number" pos:start="39:26" pos:end="39:26">0</literal></expr></argument>, <argument pos:start="39:29" pos:end="39:52"><expr pos:start="39:29" pos:end="39:52"><sizeof pos:start="39:29" pos:end="39:52">sizeof<argument_list pos:start="39:35" pos:end="39:52">(<argument pos:start="39:36" pos:end="39:51"><expr pos:start="39:36" pos:end="39:51">struct <name pos:start="39:43" pos:end="39:51">sigaction</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:43"><expr pos:start="41:5" pos:end="41:42"><name pos:start="41:5" pos:end="41:26"><name pos:start="41:5" pos:end="41:15">sigact_chld</name><operator pos:start="41:16" pos:end="41:16">.</operator><name pos:start="41:17" pos:end="41:26">sa_handler</name></name> <operator pos:start="41:28" pos:end="41:28">=</operator> <name pos:start="41:30" pos:end="41:42">child_handler</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:40"><expr pos:start="43:5" pos:end="43:39"><name pos:start="43:5" pos:end="43:24"><name pos:start="43:5" pos:end="43:15">sigact_chld</name><operator pos:start="43:16" pos:end="43:16">.</operator><name pos:start="43:17" pos:end="43:24">sa_flags</name></name> <operator pos:start="43:26" pos:end="43:26">=</operator> <name pos:start="43:28" pos:end="43:39">SA_NOCLDSTOP</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:49"><expr pos:start="45:5" pos:end="45:48"><name pos:start="45:5" pos:end="45:7">ret</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <call pos:start="45:11" pos:end="45:48"><name pos:start="45:11" pos:end="45:19">sigaction</name><argument_list pos:start="45:20" pos:end="45:48">(<argument pos:start="45:21" pos:end="45:27"><expr pos:start="45:21" pos:end="45:27"><name pos:start="45:21" pos:end="45:27">SIGCHLD</name></expr></argument>, <argument pos:start="45:30" pos:end="45:41"><expr pos:start="45:30" pos:end="45:41"><operator pos:start="45:30" pos:end="45:30">&amp;</operator><name pos:start="45:31" pos:end="45:41">sigact_chld</name></expr></argument>, <argument pos:start="45:44" pos:end="45:47"><expr pos:start="45:44" pos:end="45:47"><name pos:start="45:44" pos:end="45:47">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="51:5"><if pos:start="47:5" pos:end="51:5">if <condition pos:start="47:8" pos:end="47:18">(<expr pos:start="47:9" pos:end="47:17"><name pos:start="47:9" pos:end="47:11">ret</name> <operator pos:start="47:13" pos:end="47:14">==</operator> <operator pos:start="47:16" pos:end="47:16">-</operator><literal type="number" pos:start="47:17" pos:end="47:17">1</literal></expr>)</condition> <block pos:start="47:20" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:73">

        <expr_stmt pos:start="49:9" pos:end="49:73"><expr pos:start="49:9" pos:end="49:72"><call pos:start="49:9" pos:end="49:72"><name pos:start="49:9" pos:end="49:15">g_error</name><argument_list pos:start="49:16" pos:end="49:72">(<argument pos:start="49:17" pos:end="49:54"><expr pos:start="49:17" pos:end="49:54"><literal type="string" pos:start="49:17" pos:end="49:54">"error configuring signal handler: %s"</literal></expr></argument>, <argument pos:start="49:57" pos:end="49:71"><expr pos:start="49:57" pos:end="49:71"><call pos:start="49:57" pos:end="49:71"><name pos:start="49:57" pos:end="49:64">strerror</name><argument_list pos:start="49:65" pos:end="49:71">(<argument pos:start="49:66" pos:end="49:70"><expr pos:start="49:66" pos:end="49:70"><name pos:start="49:66" pos:end="49:70">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="55:5" pos:end="55:16">return <expr pos:start="55:12" pos:end="55:15"><name pos:start="55:12" pos:end="55:15">true</name></expr>;</return>

</block_content>}</block></function>
</unit>
