<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18862.c" pos:tabs="8"><function pos:start="1:1" pos:end="125:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:36">tcg_target_qemu_prologue</name> <parameter_list pos:start="1:38" pos:end="1:52">(<parameter pos:start="1:39" pos:end="1:51"><decl pos:start="1:39" pos:end="1:51"><type pos:start="1:39" pos:end="1:50"><name pos:start="1:39" pos:end="1:48">TCGContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="125:1">{<block_content pos:start="5:5" pos:end="123:36">

    <decl_stmt pos:start="5:5" pos:end="8:0"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:21"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:21">frame_size</name></decl>;</decl_stmt>

<cpp:ifndef pos:start="7:1" pos:end="7:17">#<cpp:directive pos:start="7:2" pos:end="7:7">ifndef</cpp:directive> <name pos:start="7:9" pos:end="7:17">__APPLE__</name></cpp:ifndef>

    <decl_stmt pos:start="9:5" pos:end="12:0"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:17">addr</name></decl>;</decl_stmt>

<cpp:endif pos:start="11:1" pos:end="11:6">#<cpp:directive pos:start="11:2" pos:end="11:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="15:5" pos:end="33:9"><expr pos:start="15:5" pos:end="31:54"><name pos:start="15:5" pos:end="15:14">frame_size</name> <operator pos:start="15:16" pos:end="15:16">=</operator> <literal type="number" pos:start="15:18" pos:end="17:9">0</literal>

        <operator pos:start="17:9" pos:end="17:9">+</operator> <literal type="number" pos:start="17:11" pos:end="19:9">8</literal>                     <comment type="block" pos:start="17:33" pos:end="17:48">/* back chain */</comment>

        <operator pos:start="19:9" pos:end="19:9">+</operator> <literal type="number" pos:start="19:11" pos:end="21:9">8</literal>                     <comment type="block" pos:start="19:33" pos:end="19:40">/* CR */</comment>

        <operator pos:start="21:9" pos:end="21:9">+</operator> <literal type="number" pos:start="21:11" pos:end="23:9">8</literal>                     <comment type="block" pos:start="21:33" pos:end="21:40">/* LR */</comment>

        <operator pos:start="23:9" pos:end="23:9">+</operator> <literal type="number" pos:start="23:11" pos:end="25:9">8</literal>                     <comment type="block" pos:start="23:33" pos:end="23:57">/* compiler doubleword */</comment>

        <operator pos:start="25:9" pos:end="25:9">+</operator> <literal type="number" pos:start="25:11" pos:end="27:9">8</literal>                     <comment type="block" pos:start="25:33" pos:end="25:60">/* link editor doubleword */</comment>

        <operator pos:start="27:9" pos:end="27:9">+</operator> <literal type="number" pos:start="27:11" pos:end="29:9">8</literal>                     <comment type="block" pos:start="27:33" pos:end="27:51">/* TOC save area */</comment>

        <operator pos:start="29:9" pos:end="29:9">+</operator> <name pos:start="29:11" pos:end="29:35">TCG_STATIC_CALL_ARGS_SIZE</name>

        <operator pos:start="31:9" pos:end="31:9">+</operator> <call pos:start="31:11" pos:end="31:50"><name pos:start="31:11" pos:end="31:20">ARRAY_SIZE</name> <argument_list pos:start="31:22" pos:end="31:50">(<argument pos:start="31:23" pos:end="31:49"><expr pos:start="31:23" pos:end="31:49"><name pos:start="31:23" pos:end="31:49">tcg_target_callee_save_regs</name></expr></argument>)</argument_list></call> <operator pos:start="31:52" pos:end="31:52">*</operator> <literal type="number" pos:start="31:54" pos:end="31:54">8</literal></expr>

        ;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="40:0"><expr pos:start="35:5" pos:end="35:40"><name pos:start="35:5" pos:end="35:14">frame_size</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <operator pos:start="35:18" pos:end="35:18">(</operator><name pos:start="35:19" pos:end="35:28">frame_size</name> <operator pos:start="35:30" pos:end="35:30">+</operator> <literal type="number" pos:start="35:32" pos:end="35:33">15</literal><operator pos:start="35:34" pos:end="35:34">)</operator> <operator pos:start="35:36" pos:end="35:36">&amp;</operator> <operator pos:start="35:38" pos:end="35:38">~</operator><literal type="number" pos:start="35:39" pos:end="35:40">15</literal></expr>;</expr_stmt>



<cpp:ifndef pos:start="39:1" pos:end="39:17">#<cpp:directive pos:start="39:2" pos:end="39:7">ifndef</cpp:directive> <name pos:start="39:9" pos:end="39:17">__APPLE__</name></cpp:ifndef>

    <comment type="block" pos:start="41:5" pos:end="41:46">/* First emit adhoc function descriptor */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:39"><expr pos:start="43:5" pos:end="43:38"><name pos:start="43:5" pos:end="43:8">addr</name> <operator pos:start="43:10" pos:end="43:10">=</operator> <operator pos:start="43:12" pos:end="43:12">(</operator><name pos:start="43:13" pos:end="43:20">uint64_t</name><operator pos:start="43:21" pos:end="43:21">)</operator> <name pos:start="43:23" pos:end="43:33"><name pos:start="43:23" pos:end="43:23">s</name><operator pos:start="43:24" pos:end="43:25">-&gt;</operator><name pos:start="43:26" pos:end="43:33">code_ptr</name></name> <operator pos:start="43:35" pos:end="43:35">+</operator> <literal type="number" pos:start="43:37" pos:end="43:38">24</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:30"><expr pos:start="45:5" pos:end="45:29"><call pos:start="45:5" pos:end="45:29"><name pos:start="45:5" pos:end="45:13">tcg_out32</name> <argument_list pos:start="45:15" pos:end="45:29">(<argument pos:start="45:16" pos:end="45:16"><expr pos:start="45:16" pos:end="45:16"><name pos:start="45:16" pos:end="45:16">s</name></expr></argument>, <argument pos:start="45:19" pos:end="45:28"><expr pos:start="45:19" pos:end="45:28"><name pos:start="45:19" pos:end="45:22">addr</name> <operator pos:start="45:24" pos:end="45:25">&gt;&gt;</operator> <literal type="number" pos:start="45:27" pos:end="45:28">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="45:32" pos:end="45:51"><expr pos:start="45:32" pos:end="45:50"><call pos:start="45:32" pos:end="45:50"><name pos:start="45:32" pos:end="45:40">tcg_out32</name> <argument_list pos:start="45:42" pos:end="45:50">(<argument pos:start="45:43" pos:end="45:43"><expr pos:start="45:43" pos:end="45:43"><name pos:start="45:43" pos:end="45:43">s</name></expr></argument>, <argument pos:start="45:46" pos:end="45:49"><expr pos:start="45:46" pos:end="45:49"><name pos:start="45:46" pos:end="45:49">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="45:53" pos:end="45:69">/* entry point */</comment>

    <expr_stmt pos:start="47:5" pos:end="50:0"><expr pos:start="47:5" pos:end="47:21"><name pos:start="47:5" pos:end="47:15"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:15">code_ptr</name></name> <operator pos:start="47:17" pos:end="47:18">+=</operator> <literal type="number" pos:start="47:20" pos:end="47:21">16</literal></expr>;</expr_stmt>          <comment type="block" pos:start="47:33" pos:end="47:70">/* skip TOC and environment pointer */</comment>

<cpp:endif pos:start="49:1" pos:end="49:6">#<cpp:directive pos:start="49:2" pos:end="49:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="53:5" pos:end="53:18">/* Prologue */</comment>

    <expr_stmt pos:start="55:5" pos:end="55:39"><expr pos:start="55:5" pos:end="55:38"><call pos:start="55:5" pos:end="55:38"><name pos:start="55:5" pos:end="55:13">tcg_out32</name> <argument_list pos:start="55:15" pos:end="55:38">(<argument pos:start="55:16" pos:end="55:16"><expr pos:start="55:16" pos:end="55:16"><name pos:start="55:16" pos:end="55:16">s</name></expr></argument>, <argument pos:start="55:19" pos:end="55:37"><expr pos:start="55:19" pos:end="55:37"><name pos:start="55:19" pos:end="55:23">MFSPR</name> <operator pos:start="55:25" pos:end="55:25">|</operator> <call pos:start="55:27" pos:end="55:32"><name pos:start="55:27" pos:end="55:28">RT</name> <argument_list pos:start="55:30" pos:end="55:32">(<argument pos:start="55:31" pos:end="55:31"><expr pos:start="55:31" pos:end="55:31"><literal type="number" pos:start="55:31" pos:end="55:31">0</literal></expr></argument>)</argument_list></call> <operator pos:start="55:34" pos:end="55:34">|</operator> <name pos:start="55:36" pos:end="55:37">LR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:67"><expr pos:start="57:5" pos:end="57:66"><call pos:start="57:5" pos:end="57:66"><name pos:start="57:5" pos:end="57:13">tcg_out32</name> <argument_list pos:start="57:15" pos:end="57:66">(<argument pos:start="57:16" pos:end="57:16"><expr pos:start="57:16" pos:end="57:16"><name pos:start="57:16" pos:end="57:16">s</name></expr></argument>, <argument pos:start="57:19" pos:end="57:65"><expr pos:start="57:19" pos:end="57:65"><name pos:start="57:19" pos:end="57:22">STDU</name> <operator pos:start="57:24" pos:end="57:24">|</operator> <call pos:start="57:26" pos:end="57:31"><name pos:start="57:26" pos:end="57:27">RS</name> <argument_list pos:start="57:29" pos:end="57:31">(<argument pos:start="57:30" pos:end="57:30"><expr pos:start="57:30" pos:end="57:30"><literal type="number" pos:start="57:30" pos:end="57:30">1</literal></expr></argument>)</argument_list></call> <operator pos:start="57:33" pos:end="57:33">|</operator> <call pos:start="57:35" pos:end="57:40"><name pos:start="57:35" pos:end="57:36">RA</name> <argument_list pos:start="57:38" pos:end="57:40">(<argument pos:start="57:39" pos:end="57:39"><expr pos:start="57:39" pos:end="57:39"><literal type="number" pos:start="57:39" pos:end="57:39">1</literal></expr></argument>)</argument_list></call> <operator pos:start="57:42" pos:end="57:42">|</operator> <operator pos:start="57:44" pos:end="57:44">(</operator><operator pos:start="57:45" pos:end="57:45">-</operator><name pos:start="57:46" pos:end="57:55">frame_size</name> <operator pos:start="57:57" pos:end="57:57">&amp;</operator> <literal type="number" pos:start="57:59" pos:end="57:64">0xffff</literal><operator pos:start="57:65" pos:end="57:65">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="59:5" pos:end="71:14">for <control pos:start="59:9" pos:end="59:66">(<init pos:start="59:10" pos:end="59:15"><expr pos:start="59:10" pos:end="59:14"><name pos:start="59:10" pos:end="59:10">i</name> <operator pos:start="59:12" pos:end="59:12">=</operator> <literal type="number" pos:start="59:14" pos:end="59:14">0</literal></expr>;</init> <condition pos:start="59:17" pos:end="59:61"><expr pos:start="59:17" pos:end="59:60"><name pos:start="59:17" pos:end="59:17">i</name> <operator pos:start="59:19" pos:end="59:19">&lt;</operator> <call pos:start="59:21" pos:end="59:60"><name pos:start="59:21" pos:end="59:30">ARRAY_SIZE</name> <argument_list pos:start="59:32" pos:end="59:60">(<argument pos:start="59:33" pos:end="59:59"><expr pos:start="59:33" pos:end="59:59"><name pos:start="59:33" pos:end="59:59">tcg_target_callee_save_regs</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="59:63" pos:end="59:65"><expr pos:start="59:63" pos:end="59:65"><operator pos:start="59:63" pos:end="59:64">++</operator><name pos:start="59:65" pos:end="59:65">i</name></expr></incr>)</control><block type="pseudo" pos:start="61:9" pos:end="71:14"><block_content pos:start="61:9" pos:end="71:14">

        <expr_stmt pos:start="61:9" pos:end="71:14"><expr pos:start="61:9" pos:end="71:13"><call pos:start="61:9" pos:end="71:13"><name pos:start="61:9" pos:end="61:17">tcg_out32</name> <argument_list pos:start="61:19" pos:end="71:13">(<argument pos:start="61:20" pos:end="61:20"><expr pos:start="61:20" pos:end="61:20"><name pos:start="61:20" pos:end="61:20">s</name></expr></argument>, <argument pos:start="61:23" pos:end="69:24"><expr pos:start="61:23" pos:end="69:24"><operator pos:start="61:23" pos:end="61:23">(</operator><name pos:start="61:24" pos:end="61:26">STD</name>

                       <operator pos:start="63:24" pos:end="63:24">|</operator> <call pos:start="63:26" pos:end="63:60"><name pos:start="63:26" pos:end="63:27">RS</name> <argument_list pos:start="63:29" pos:end="63:60">(<argument pos:start="63:30" pos:end="63:59"><expr pos:start="63:30" pos:end="63:59"><name pos:start="63:30" pos:end="63:59"><name pos:start="63:30" pos:end="63:56">tcg_target_callee_save_regs</name><index pos:start="63:57" pos:end="63:59">[<expr pos:start="63:58" pos:end="63:58"><name pos:start="63:58" pos:end="63:58">i</name></expr>]</index></name></expr></argument>)</argument_list></call>

                       <operator pos:start="65:24" pos:end="65:24">|</operator> <call pos:start="65:26" pos:end="65:31"><name pos:start="65:26" pos:end="65:27">RA</name> <argument_list pos:start="65:29" pos:end="65:31">(<argument pos:start="65:30" pos:end="65:30"><expr pos:start="65:30" pos:end="65:30"><literal type="number" pos:start="65:30" pos:end="65:30">1</literal></expr></argument>)</argument_list></call>

                       <operator pos:start="67:24" pos:end="67:24">|</operator> <operator pos:start="67:26" pos:end="67:26">(</operator><name pos:start="67:27" pos:end="67:27">i</name> <operator pos:start="67:29" pos:end="67:29">*</operator> <literal type="number" pos:start="67:31" pos:end="67:33">8</literal> <operator pos:start="67:33" pos:end="67:33">+</operator> <literal type="number" pos:start="67:35" pos:end="67:38">48</literal> <operator pos:start="67:38" pos:end="67:38">+</operator> <name pos:start="67:40" pos:end="67:64">TCG_STATIC_CALL_ARGS_SIZE</name><operator pos:start="67:65" pos:end="67:65">)</operator>

                       <operator pos:start="69:24" pos:end="69:24">)</operator></expr></argument>

            )</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="73:5" pos:end="78:0"><expr pos:start="73:5" pos:end="73:60"><call pos:start="73:5" pos:end="73:60"><name pos:start="73:5" pos:end="73:13">tcg_out32</name> <argument_list pos:start="73:15" pos:end="73:60">(<argument pos:start="73:16" pos:end="73:16"><expr pos:start="73:16" pos:end="73:16"><name pos:start="73:16" pos:end="73:16">s</name></expr></argument>, <argument pos:start="73:19" pos:end="73:59"><expr pos:start="73:19" pos:end="73:59"><name pos:start="73:19" pos:end="73:21">STD</name> <operator pos:start="73:23" pos:end="73:23">|</operator> <call pos:start="73:25" pos:end="73:30"><name pos:start="73:25" pos:end="73:26">RS</name> <argument_list pos:start="73:28" pos:end="73:30">(<argument pos:start="73:29" pos:end="73:29"><expr pos:start="73:29" pos:end="73:29"><literal type="number" pos:start="73:29" pos:end="73:29">0</literal></expr></argument>)</argument_list></call> <operator pos:start="73:32" pos:end="73:32">|</operator> <call pos:start="73:34" pos:end="73:39"><name pos:start="73:34" pos:end="73:35">RA</name> <argument_list pos:start="73:37" pos:end="73:39">(<argument pos:start="73:38" pos:end="73:38"><expr pos:start="73:38" pos:end="73:38"><literal type="number" pos:start="73:38" pos:end="73:38">1</literal></expr></argument>)</argument_list></call> <operator pos:start="73:41" pos:end="73:41">|</operator> <operator pos:start="73:43" pos:end="73:43">(</operator><name pos:start="73:44" pos:end="73:53">frame_size</name> <operator pos:start="73:55" pos:end="73:55">+</operator> <literal type="number" pos:start="73:57" pos:end="73:58">16</literal><operator pos:start="73:59" pos:end="73:59">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifdef pos:start="77:1" pos:end="77:28">#<cpp:directive pos:start="77:2" pos:end="77:6">ifdef</cpp:directive> <name pos:start="77:8" pos:end="77:28">CONFIG_USE_GUEST_BASE</name></cpp:ifdef>

    <if_stmt pos:start="79:5" pos:end="88:0"><if pos:start="79:5" pos:end="88:0">if <condition pos:start="79:8" pos:end="79:19">(<expr pos:start="79:9" pos:end="79:18"><name pos:start="79:9" pos:end="79:18">GUEST_BASE</name></expr>)</condition> <block pos:start="79:21" pos:end="88:0">{<block_content pos:start="81:9" pos:end="83:65">

        <expr_stmt pos:start="81:9" pos:end="81:71"><expr pos:start="81:9" pos:end="81:70"><call pos:start="81:9" pos:end="81:70"><name pos:start="81:9" pos:end="81:20">tcg_out_movi</name> <argument_list pos:start="81:22" pos:end="81:70">(<argument pos:start="81:23" pos:end="81:23"><expr pos:start="81:23" pos:end="81:23"><name pos:start="81:23" pos:end="81:23">s</name></expr></argument>, <argument pos:start="81:26" pos:end="81:37"><expr pos:start="81:26" pos:end="81:37"><name pos:start="81:26" pos:end="81:37">TCG_TYPE_I64</name></expr></argument>, <argument pos:start="81:40" pos:end="81:57"><expr pos:start="81:40" pos:end="81:57"><name pos:start="81:40" pos:end="81:57">TCG_GUEST_BASE_REG</name></expr></argument>, <argument pos:start="81:60" pos:end="81:69"><expr pos:start="81:60" pos:end="81:69"><name pos:start="81:60" pos:end="81:69">GUEST_BASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:65"><expr pos:start="83:9" pos:end="83:64"><call pos:start="83:9" pos:end="83:64"><name pos:start="83:9" pos:end="83:26">tcg_regset_set_reg</name><argument_list pos:start="83:27" pos:end="83:64">(<argument pos:start="83:28" pos:end="83:43"><expr pos:start="83:28" pos:end="83:43"><name pos:start="83:28" pos:end="83:43"><name pos:start="83:28" pos:end="83:28">s</name><operator pos:start="83:29" pos:end="83:30">-&gt;</operator><name pos:start="83:31" pos:end="83:43">reserved_regs</name></name></expr></argument>, <argument pos:start="83:46" pos:end="83:63"><expr pos:start="83:46" pos:end="83:63"><name pos:start="83:46" pos:end="83:63">TCG_GUEST_BASE_REG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="87:1" pos:end="87:6">#<cpp:directive pos:start="87:2" pos:end="87:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="91:5" pos:end="91:40"><expr pos:start="91:5" pos:end="91:39"><call pos:start="91:5" pos:end="91:39"><name pos:start="91:5" pos:end="91:13">tcg_out32</name> <argument_list pos:start="91:15" pos:end="91:39">(<argument pos:start="91:16" pos:end="91:16"><expr pos:start="91:16" pos:end="91:16"><name pos:start="91:16" pos:end="91:16">s</name></expr></argument>, <argument pos:start="91:19" pos:end="91:38"><expr pos:start="91:19" pos:end="91:38"><name pos:start="91:19" pos:end="91:23">MTSPR</name> <operator pos:start="91:25" pos:end="91:25">|</operator> <call pos:start="91:27" pos:end="91:32"><name pos:start="91:27" pos:end="91:28">RS</name> <argument_list pos:start="91:30" pos:end="91:32">(<argument pos:start="91:31" pos:end="91:31"><expr pos:start="91:31" pos:end="91:31"><literal type="number" pos:start="91:31" pos:end="91:31">3</literal></expr></argument>)</argument_list></call> <operator pos:start="91:34" pos:end="91:34">|</operator> <name pos:start="91:36" pos:end="91:38">CTR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:37"><expr pos:start="93:5" pos:end="93:36"><call pos:start="93:5" pos:end="93:36"><name pos:start="93:5" pos:end="93:13">tcg_out32</name> <argument_list pos:start="93:15" pos:end="93:36">(<argument pos:start="93:16" pos:end="93:16"><expr pos:start="93:16" pos:end="93:16"><name pos:start="93:16" pos:end="93:16">s</name></expr></argument>, <argument pos:start="93:19" pos:end="93:35"><expr pos:start="93:19" pos:end="93:35"><name pos:start="93:19" pos:end="93:23">BCCTR</name> <operator pos:start="93:25" pos:end="93:25">|</operator> <name pos:start="93:27" pos:end="93:35">BO_ALWAYS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="97:5" pos:end="97:18">/* Epilogue */</comment>

    <expr_stmt pos:start="99:5" pos:end="99:30"><expr pos:start="99:5" pos:end="99:29"><name pos:start="99:5" pos:end="99:15">tb_ret_addr</name> <operator pos:start="99:17" pos:end="99:17">=</operator> <name pos:start="99:19" pos:end="99:29"><name pos:start="99:19" pos:end="99:19">s</name><operator pos:start="99:20" pos:end="99:21">-&gt;</operator><name pos:start="99:22" pos:end="99:29">code_ptr</name></name></expr>;</expr_stmt>



    <for pos:start="103:5" pos:end="115:14">for <control pos:start="103:9" pos:end="103:66">(<init pos:start="103:10" pos:end="103:15"><expr pos:start="103:10" pos:end="103:14"><name pos:start="103:10" pos:end="103:10">i</name> <operator pos:start="103:12" pos:end="103:12">=</operator> <literal type="number" pos:start="103:14" pos:end="103:14">0</literal></expr>;</init> <condition pos:start="103:17" pos:end="103:61"><expr pos:start="103:17" pos:end="103:60"><name pos:start="103:17" pos:end="103:17">i</name> <operator pos:start="103:19" pos:end="103:19">&lt;</operator> <call pos:start="103:21" pos:end="103:60"><name pos:start="103:21" pos:end="103:30">ARRAY_SIZE</name> <argument_list pos:start="103:32" pos:end="103:60">(<argument pos:start="103:33" pos:end="103:59"><expr pos:start="103:33" pos:end="103:59"><name pos:start="103:33" pos:end="103:59">tcg_target_callee_save_regs</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="103:63" pos:end="103:65"><expr pos:start="103:63" pos:end="103:65"><operator pos:start="103:63" pos:end="103:64">++</operator><name pos:start="103:65" pos:end="103:65">i</name></expr></incr>)</control><block type="pseudo" pos:start="105:9" pos:end="115:14"><block_content pos:start="105:9" pos:end="115:14">

        <expr_stmt pos:start="105:9" pos:end="115:14"><expr pos:start="105:9" pos:end="115:13"><call pos:start="105:9" pos:end="115:13"><name pos:start="105:9" pos:end="105:17">tcg_out32</name> <argument_list pos:start="105:19" pos:end="115:13">(<argument pos:start="105:20" pos:end="105:20"><expr pos:start="105:20" pos:end="105:20"><name pos:start="105:20" pos:end="105:20">s</name></expr></argument>, <argument pos:start="105:23" pos:end="113:24"><expr pos:start="105:23" pos:end="113:24"><operator pos:start="105:23" pos:end="105:23">(</operator><name pos:start="105:24" pos:end="105:25">LD</name>

                       <operator pos:start="107:24" pos:end="107:24">|</operator> <call pos:start="107:26" pos:end="107:60"><name pos:start="107:26" pos:end="107:27">RT</name> <argument_list pos:start="107:29" pos:end="107:60">(<argument pos:start="107:30" pos:end="107:59"><expr pos:start="107:30" pos:end="107:59"><name pos:start="107:30" pos:end="107:59"><name pos:start="107:30" pos:end="107:56">tcg_target_callee_save_regs</name><index pos:start="107:57" pos:end="107:59">[<expr pos:start="107:58" pos:end="107:58"><name pos:start="107:58" pos:end="107:58">i</name></expr>]</index></name></expr></argument>)</argument_list></call>

                       <operator pos:start="109:24" pos:end="109:24">|</operator> <call pos:start="109:26" pos:end="109:31"><name pos:start="109:26" pos:end="109:27">RA</name> <argument_list pos:start="109:29" pos:end="109:31">(<argument pos:start="109:30" pos:end="109:30"><expr pos:start="109:30" pos:end="109:30"><literal type="number" pos:start="109:30" pos:end="109:30">1</literal></expr></argument>)</argument_list></call>

                       <operator pos:start="111:24" pos:end="111:24">|</operator> <operator pos:start="111:26" pos:end="111:26">(</operator><name pos:start="111:27" pos:end="111:27">i</name> <operator pos:start="111:29" pos:end="111:29">*</operator> <literal type="number" pos:start="111:31" pos:end="111:33">8</literal> <operator pos:start="111:33" pos:end="111:33">+</operator> <literal type="number" pos:start="111:35" pos:end="111:38">48</literal> <operator pos:start="111:38" pos:end="111:38">+</operator> <name pos:start="111:40" pos:end="111:64">TCG_STATIC_CALL_ARGS_SIZE</name><operator pos:start="111:65" pos:end="111:65">)</operator>

                       <operator pos:start="113:24" pos:end="113:24">)</operator></expr></argument>

            )</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="117:5" pos:end="117:60"><expr pos:start="117:5" pos:end="117:59"><call pos:start="117:5" pos:end="117:59"><name pos:start="117:5" pos:end="117:13">tcg_out32</name> <argument_list pos:start="117:15" pos:end="117:59">(<argument pos:start="117:16" pos:end="117:16"><expr pos:start="117:16" pos:end="117:16"><name pos:start="117:16" pos:end="117:16">s</name></expr></argument>, <argument pos:start="117:19" pos:end="117:58"><expr pos:start="117:19" pos:end="117:58"><name pos:start="117:19" pos:end="117:20">LD</name> <operator pos:start="117:22" pos:end="117:22">|</operator> <call pos:start="117:24" pos:end="117:29"><name pos:start="117:24" pos:end="117:25">RT</name> <argument_list pos:start="117:27" pos:end="117:29">(<argument pos:start="117:28" pos:end="117:28"><expr pos:start="117:28" pos:end="117:28"><literal type="number" pos:start="117:28" pos:end="117:28">0</literal></expr></argument>)</argument_list></call> <operator pos:start="117:31" pos:end="117:31">|</operator> <call pos:start="117:33" pos:end="117:38"><name pos:start="117:33" pos:end="117:34">RA</name> <argument_list pos:start="117:36" pos:end="117:38">(<argument pos:start="117:37" pos:end="117:37"><expr pos:start="117:37" pos:end="117:37"><literal type="number" pos:start="117:37" pos:end="117:37">1</literal></expr></argument>)</argument_list></call> <operator pos:start="117:40" pos:end="117:40">|</operator> <operator pos:start="117:42" pos:end="117:42">(</operator><name pos:start="117:43" pos:end="117:52">frame_size</name> <operator pos:start="117:54" pos:end="117:54">+</operator> <literal type="number" pos:start="117:56" pos:end="117:57">16</literal><operator pos:start="117:58" pos:end="117:58">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:39"><expr pos:start="119:5" pos:end="119:38"><call pos:start="119:5" pos:end="119:38"><name pos:start="119:5" pos:end="119:13">tcg_out32</name> <argument_list pos:start="119:15" pos:end="119:38">(<argument pos:start="119:16" pos:end="119:16"><expr pos:start="119:16" pos:end="119:16"><name pos:start="119:16" pos:end="119:16">s</name></expr></argument>, <argument pos:start="119:19" pos:end="119:37"><expr pos:start="119:19" pos:end="119:37"><name pos:start="119:19" pos:end="119:23">MTSPR</name> <operator pos:start="119:25" pos:end="119:25">|</operator> <call pos:start="119:27" pos:end="119:32"><name pos:start="119:27" pos:end="119:28">RS</name> <argument_list pos:start="119:30" pos:end="119:32">(<argument pos:start="119:31" pos:end="119:31"><expr pos:start="119:31" pos:end="119:31"><literal type="number" pos:start="119:31" pos:end="119:31">0</literal></expr></argument>)</argument_list></call> <operator pos:start="119:34" pos:end="119:34">|</operator> <name pos:start="119:36" pos:end="119:37">LR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:55"><expr pos:start="121:5" pos:end="121:54"><call pos:start="121:5" pos:end="121:54"><name pos:start="121:5" pos:end="121:13">tcg_out32</name> <argument_list pos:start="121:15" pos:end="121:54">(<argument pos:start="121:16" pos:end="121:16"><expr pos:start="121:16" pos:end="121:16"><name pos:start="121:16" pos:end="121:16">s</name></expr></argument>, <argument pos:start="121:19" pos:end="121:53"><expr pos:start="121:19" pos:end="121:53"><name pos:start="121:19" pos:end="121:22">ADDI</name> <operator pos:start="121:24" pos:end="121:24">|</operator> <call pos:start="121:26" pos:end="121:31"><name pos:start="121:26" pos:end="121:27">RT</name> <argument_list pos:start="121:29" pos:end="121:31">(<argument pos:start="121:30" pos:end="121:30"><expr pos:start="121:30" pos:end="121:30"><literal type="number" pos:start="121:30" pos:end="121:30">1</literal></expr></argument>)</argument_list></call> <operator pos:start="121:33" pos:end="121:33">|</operator> <call pos:start="121:35" pos:end="121:40"><name pos:start="121:35" pos:end="121:36">RA</name> <argument_list pos:start="121:38" pos:end="121:40">(<argument pos:start="121:39" pos:end="121:39"><expr pos:start="121:39" pos:end="121:39"><literal type="number" pos:start="121:39" pos:end="121:39">1</literal></expr></argument>)</argument_list></call> <operator pos:start="121:42" pos:end="121:42">|</operator> <name pos:start="121:44" pos:end="121:53">frame_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:36"><expr pos:start="123:5" pos:end="123:35"><call pos:start="123:5" pos:end="123:35"><name pos:start="123:5" pos:end="123:13">tcg_out32</name> <argument_list pos:start="123:15" pos:end="123:35">(<argument pos:start="123:16" pos:end="123:16"><expr pos:start="123:16" pos:end="123:16"><name pos:start="123:16" pos:end="123:16">s</name></expr></argument>, <argument pos:start="123:19" pos:end="123:34"><expr pos:start="123:19" pos:end="123:34"><name pos:start="123:19" pos:end="123:22">BCLR</name> <operator pos:start="123:24" pos:end="123:24">|</operator> <name pos:start="123:26" pos:end="123:34">BO_ALWAYS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
