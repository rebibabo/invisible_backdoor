<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25118.c" pos:tabs="8"><function pos:start="1:1" pos:end="205:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">filter_mb</name><parameter_list pos:start="1:22" pos:end="1:59">( <parameter pos:start="1:24" pos:end="1:37"><decl pos:start="1:24" pos:end="1:37"><type pos:start="1:24" pos:end="1:37"><name pos:start="1:24" pos:end="1:34">H264Context</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">h</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:47"><decl pos:start="1:40" pos:end="1:47"><type pos:start="1:40" pos:end="1:47"><name pos:start="1:40" pos:end="1:42">int</name></type> <name pos:start="1:44" pos:end="1:47">mb_x</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:57"><decl pos:start="1:50" pos:end="1:57"><type pos:start="1:50" pos:end="1:57"><name pos:start="1:50" pos:end="1:52">int</name></type> <name pos:start="1:54" pos:end="1:57">mb_y</name></decl></parameter> )</parameter_list> <block pos:start="1:61" pos:end="205:1">{<block_content pos:start="3:5" pos:end="203:5">

    <decl_stmt pos:start="3:5" pos:end="3:37"><decl pos:start="3:5" pos:end="3:36"><type pos:start="3:5" pos:end="3:26"><name pos:start="3:5" pos:end="3:18">MpegEncContext</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier> <specifier pos:start="3:22" pos:end="3:26">const</specifier></type> <name pos:start="3:28" pos:end="3:28">s</name> <init pos:start="3:30" pos:end="3:36">= <expr pos:start="3:32" pos:end="3:36"><operator pos:start="3:32" pos:end="3:32">&amp;</operator><name pos:start="3:33" pos:end="3:36"><name pos:start="3:33" pos:end="3:33">h</name><operator pos:start="3:34" pos:end="3:35">-&gt;</operator><name pos:start="3:36" pos:end="3:36">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:46"><decl pos:start="5:5" pos:end="5:45"><type pos:start="5:5" pos:end="5:13"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:13">int</name></type> <name pos:start="5:15" pos:end="5:19">mb_xy</name><init pos:start="5:20" pos:end="5:45">= <expr pos:start="5:22" pos:end="5:45"><name pos:start="5:22" pos:end="5:25">mb_x</name> <operator pos:start="5:27" pos:end="5:27">+</operator> <name pos:start="5:29" pos:end="5:32">mb_y</name><operator pos:start="5:33" pos:end="5:33">*</operator><name pos:start="5:34" pos:end="5:45"><name pos:start="5:34" pos:end="5:34">s</name><operator pos:start="5:35" pos:end="5:36">-&gt;</operator><name pos:start="5:37" pos:end="5:45">mb_stride</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:90"><decl pos:start="7:5" pos:end="7:89"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:18">img_y</name>  <init pos:start="7:21" pos:end="7:89">= <expr pos:start="7:23" pos:end="7:89"><name pos:start="7:23" pos:end="7:48"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:40">current_picture</name><operator pos:start="7:41" pos:end="7:41">.</operator><name pos:start="7:42" pos:end="7:45">data</name><index pos:start="7:46" pos:end="7:48">[<expr pos:start="7:47" pos:end="7:47"><literal type="number" pos:start="7:47" pos:end="7:47">0</literal></expr>]</index></name> <operator pos:start="7:50" pos:end="7:50">+</operator> <operator pos:start="7:52" pos:end="7:52">(</operator><name pos:start="7:53" pos:end="7:56">mb_y</name> <operator pos:start="7:58" pos:end="7:58">*</operator> <literal type="number" pos:start="7:60" pos:end="7:61">16</literal><operator pos:start="7:62" pos:end="7:62">*</operator> <name pos:start="7:64" pos:end="7:74"><name pos:start="7:64" pos:end="7:64">s</name><operator pos:start="7:65" pos:end="7:66">-&gt;</operator><name pos:start="7:67" pos:end="7:74">linesize</name></name>  <operator pos:start="7:77" pos:end="7:77">)</operator> <operator pos:start="7:79" pos:end="7:79">+</operator> <name pos:start="7:81" pos:end="7:84">mb_x</name> <operator pos:start="7:86" pos:end="7:86">*</operator> <literal type="number" pos:start="7:88" pos:end="7:89">16</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:89"><decl pos:start="9:5" pos:end="9:88"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:19">img_cb</name> <init pos:start="9:21" pos:end="9:88">= <expr pos:start="9:23" pos:end="9:88"><name pos:start="9:23" pos:end="9:48"><name pos:start="9:23" pos:end="9:23">s</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:40">current_picture</name><operator pos:start="9:41" pos:end="9:41">.</operator><name pos:start="9:42" pos:end="9:45">data</name><index pos:start="9:46" pos:end="9:48">[<expr pos:start="9:47" pos:end="9:47"><literal type="number" pos:start="9:47" pos:end="9:47">1</literal></expr>]</index></name> <operator pos:start="9:50" pos:end="9:50">+</operator> <operator pos:start="9:52" pos:end="9:52">(</operator><name pos:start="9:53" pos:end="9:56">mb_y</name> <operator pos:start="9:58" pos:end="9:58">*</operator> <literal type="number" pos:start="9:60" pos:end="9:60">8</literal> <operator pos:start="9:62" pos:end="9:62">*</operator> <name pos:start="9:64" pos:end="9:76"><name pos:start="9:64" pos:end="9:64">s</name><operator pos:start="9:65" pos:end="9:66">-&gt;</operator><name pos:start="9:67" pos:end="9:76">uvlinesize</name></name><operator pos:start="9:77" pos:end="9:77">)</operator> <operator pos:start="9:79" pos:end="9:79">+</operator> <name pos:start="9:81" pos:end="9:84">mb_x</name> <operator pos:start="9:86" pos:end="9:86">*</operator> <literal type="number" pos:start="9:88" pos:end="9:88">8</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:89"><decl pos:start="11:5" pos:end="11:88"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:19">img_cr</name> <init pos:start="11:21" pos:end="11:88">= <expr pos:start="11:23" pos:end="11:88"><name pos:start="11:23" pos:end="11:48"><name pos:start="11:23" pos:end="11:23">s</name><operator pos:start="11:24" pos:end="11:25">-&gt;</operator><name pos:start="11:26" pos:end="11:40">current_picture</name><operator pos:start="11:41" pos:end="11:41">.</operator><name pos:start="11:42" pos:end="11:45">data</name><index pos:start="11:46" pos:end="11:48">[<expr pos:start="11:47" pos:end="11:47"><literal type="number" pos:start="11:47" pos:end="11:47">2</literal></expr>]</index></name> <operator pos:start="11:50" pos:end="11:50">+</operator> <operator pos:start="11:52" pos:end="11:52">(</operator><name pos:start="11:53" pos:end="11:56">mb_y</name> <operator pos:start="11:58" pos:end="11:58">*</operator> <literal type="number" pos:start="11:60" pos:end="11:60">8</literal> <operator pos:start="11:62" pos:end="11:62">*</operator> <name pos:start="11:64" pos:end="11:76"><name pos:start="11:64" pos:end="11:64">s</name><operator pos:start="11:65" pos:end="11:66">-&gt;</operator><name pos:start="11:67" pos:end="11:76">uvlinesize</name></name><operator pos:start="11:77" pos:end="11:77">)</operator> <operator pos:start="11:79" pos:end="11:79">+</operator> <name pos:start="11:81" pos:end="11:84">mb_x</name> <operator pos:start="11:86" pos:end="11:86">*</operator> <literal type="number" pos:start="11:88" pos:end="11:88">8</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:16">linesize</name></decl>, <decl pos:start="13:19" pos:end="13:28"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:19" pos:end="13:28">uvlinesize</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="26:0"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">dir</name></decl>;</decl_stmt>

<cpp:if pos:start="17:1" pos:end="17:5">#<cpp:directive pos:start="17:2" pos:end="17:3">if</cpp:directive> <expr pos:start="17:5" pos:end="17:5"><literal type="number" pos:start="17:5" pos:end="17:5">0</literal></expr></cpp:if>

    <comment type="block" pos:start="19:5" pos:end="19:29">/* FIXME what's that ? */</comment>

    if( !s-&gt;decode )

        return;

<cpp:endif pos:start="25:1" pos:end="25:6">#<cpp:directive pos:start="25:2" pos:end="25:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="29:5" pos:end="29:56">/* FIXME Implement deblocking filter for field MB */</comment>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if<condition pos:start="31:7" pos:end="31:23">( <expr pos:start="31:9" pos:end="31:21"><name pos:start="31:9" pos:end="31:21"><name pos:start="31:9" pos:end="31:9">h</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:14">sps</name><operator pos:start="31:15" pos:end="31:15">.</operator><name pos:start="31:16" pos:end="31:21">mb_aff</name></name></expr> )</condition> <block pos:start="31:25" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:15">

        <return pos:start="33:9" pos:end="33:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:27"><expr pos:start="37:5" pos:end="37:26"><name pos:start="37:5" pos:end="37:12">linesize</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <name pos:start="37:16" pos:end="37:26"><name pos:start="37:16" pos:end="37:16">s</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:26">linesize</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:31"><expr pos:start="39:5" pos:end="39:30"><name pos:start="39:5" pos:end="39:14">uvlinesize</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <name pos:start="39:18" pos:end="39:30"><name pos:start="39:18" pos:end="39:18">s</name><operator pos:start="39:19" pos:end="39:20">-&gt;</operator><name pos:start="39:21" pos:end="39:30">uvlinesize</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:56">/* dir : 0 -&gt; vertical edge, 1 -&gt; horizontal edge */</comment>

    <for pos:start="45:5" pos:end="203:5">for<control pos:start="45:8" pos:end="45:34">( <init pos:start="45:10" pos:end="45:17"><expr pos:start="45:10" pos:end="45:16"><name pos:start="45:10" pos:end="45:12">dir</name> <operator pos:start="45:14" pos:end="45:14">=</operator> <literal type="number" pos:start="45:16" pos:end="45:16">0</literal></expr>;</init> <condition pos:start="45:19" pos:end="45:26"><expr pos:start="45:19" pos:end="45:25"><name pos:start="45:19" pos:end="45:21">dir</name> <operator pos:start="45:23" pos:end="45:23">&lt;</operator> <literal type="number" pos:start="45:25" pos:end="45:25">2</literal></expr>;</condition> <incr pos:start="45:28" pos:end="45:32"><expr pos:start="45:28" pos:end="45:32"><name pos:start="45:28" pos:end="45:30">dir</name><operator pos:start="45:31" pos:end="45:32">++</operator></expr></incr> )</control>

    <block pos:start="47:5" pos:end="203:5">{<block_content pos:start="49:9" pos:end="201:9">

        <decl_stmt pos:start="49:9" pos:end="49:22"><decl pos:start="49:9" pos:end="49:21"><type pos:start="49:9" pos:end="49:11"><name pos:start="49:9" pos:end="49:11">int</name></type> <name pos:start="49:13" pos:end="49:17">start</name> <init pos:start="49:19" pos:end="49:21">= <expr pos:start="49:21" pos:end="49:21"><literal type="number" pos:start="49:21" pos:end="49:21">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="51:9" pos:end="51:17"><decl pos:start="51:9" pos:end="51:16"><type pos:start="51:9" pos:end="51:11"><name pos:start="51:9" pos:end="51:11">int</name></type> <name pos:start="51:13" pos:end="51:16">edge</name></decl>;</decl_stmt>



        <comment type="block" pos:start="55:9" pos:end="55:35">/* test picture boundary */</comment>

        <if_stmt pos:start="57:9" pos:end="61:9"><if pos:start="57:9" pos:end="61:9">if<condition pos:start="57:11" pos:end="57:68">( <expr pos:start="57:13" pos:end="57:66"><operator pos:start="57:13" pos:end="57:13">(</operator> <name pos:start="57:15" pos:end="57:17">dir</name> <operator pos:start="57:19" pos:end="57:20">==</operator> <literal type="number" pos:start="57:22" pos:end="57:22">0</literal> <operator pos:start="57:24" pos:end="57:25">&amp;&amp;</operator> <name pos:start="57:27" pos:end="57:30">mb_x</name> <operator pos:start="57:32" pos:end="57:33">==</operator> <literal type="number" pos:start="57:35" pos:end="57:35">0</literal> <operator pos:start="57:37" pos:end="57:37">)</operator> <operator pos:start="57:39" pos:end="57:40">||</operator> <operator pos:start="57:42" pos:end="57:42">(</operator> <name pos:start="57:44" pos:end="57:46">dir</name> <operator pos:start="57:48" pos:end="57:49">==</operator> <literal type="number" pos:start="57:51" pos:end="57:51">1</literal> <operator pos:start="57:53" pos:end="57:54">&amp;&amp;</operator> <name pos:start="57:56" pos:end="57:59">mb_y</name> <operator pos:start="57:61" pos:end="57:62">==</operator> <literal type="number" pos:start="57:64" pos:end="57:64">0</literal> <operator pos:start="57:66" pos:end="57:66">)</operator></expr> )</condition> <block pos:start="57:70" pos:end="61:9">{<block_content pos:start="59:13" pos:end="59:22">

            <expr_stmt pos:start="59:13" pos:end="59:22"><expr pos:start="59:13" pos:end="59:21"><name pos:start="59:13" pos:end="59:17">start</name> <operator pos:start="59:19" pos:end="59:19">=</operator> <literal type="number" pos:start="59:21" pos:end="59:21">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="63:9" pos:end="63:39">/* FIXME test slice boundary */</comment>

        <if_stmt pos:start="65:9" pos:end="67:9"><if pos:start="65:9" pos:end="67:9">if<condition pos:start="65:11" pos:end="65:51">( <expr pos:start="65:13" pos:end="65:49"><name pos:start="65:13" pos:end="65:44"><name pos:start="65:13" pos:end="65:13">h</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:44">disable_deblocking_filter_idc</name></name> <operator pos:start="65:46" pos:end="65:47">==</operator> <literal type="number" pos:start="65:49" pos:end="65:49">2</literal></expr> )</condition> <block pos:start="65:53" pos:end="67:9">{<block_content>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="71:9" pos:end="71:26">/* Calculate bS */</comment>

        <for pos:start="73:9" pos:end="201:9">for<control pos:start="73:12" pos:end="73:45">( <init pos:start="73:14" pos:end="73:26"><expr pos:start="73:14" pos:end="73:25"><name pos:start="73:14" pos:end="73:17">edge</name> <operator pos:start="73:19" pos:end="73:19">=</operator> <name pos:start="73:21" pos:end="73:25">start</name></expr>;</init> <condition pos:start="73:28" pos:end="73:36"><expr pos:start="73:28" pos:end="73:35"><name pos:start="73:28" pos:end="73:31">edge</name> <operator pos:start="73:33" pos:end="73:33">&lt;</operator> <literal type="number" pos:start="73:35" pos:end="73:35">4</literal></expr>;</condition> <incr pos:start="73:38" pos:end="73:43"><expr pos:start="73:38" pos:end="73:43"><name pos:start="73:38" pos:end="73:41">edge</name><operator pos:start="73:42" pos:end="73:43">++</operator></expr></incr> )</control> <block pos:start="73:47" pos:end="201:9">{<block_content pos:start="77:13" pos:end="199:13">

            <comment type="block" pos:start="75:13" pos:end="75:75">/* mbn_xy: neighbour macroblock (how that works for field ?) */</comment>

            <decl_stmt pos:start="77:13" pos:end="77:91"><decl pos:start="77:13" pos:end="77:90"><type pos:start="77:13" pos:end="77:15"><name pos:start="77:13" pos:end="77:15">int</name></type> <name pos:start="77:17" pos:end="77:22">mbn_xy</name> <init pos:start="77:24" pos:end="77:90">= <expr pos:start="77:26" pos:end="77:90"><ternary pos:start="77:26" pos:end="77:90"><condition pos:start="77:26" pos:end="77:35"><expr pos:start="77:26" pos:end="77:33"><name pos:start="77:26" pos:end="77:29">edge</name> <operator pos:start="77:31" pos:end="77:31">&gt;</operator> <literal type="number" pos:start="77:33" pos:end="77:33">0</literal></expr> ?</condition><then pos:start="77:37" pos:end="77:41"> <expr pos:start="77:37" pos:end="77:41"><name pos:start="77:37" pos:end="77:41">mb_xy</name></expr> </then><else pos:start="77:43" pos:end="77:90">: <expr pos:start="77:45" pos:end="77:90"><operator pos:start="77:45" pos:end="77:45">(</operator> <ternary pos:start="77:47" pos:end="77:88"><condition pos:start="77:47" pos:end="77:56"><expr pos:start="77:47" pos:end="77:54"><name pos:start="77:47" pos:end="77:49">dir</name> <operator pos:start="77:51" pos:end="77:52">==</operator> <literal type="number" pos:start="77:54" pos:end="77:54">0</literal></expr> ?</condition><then pos:start="77:58" pos:end="77:65"> <expr pos:start="77:58" pos:end="77:65"><name pos:start="77:58" pos:end="77:62">mb_xy</name> <operator pos:start="77:64" pos:end="77:64">-</operator><literal type="number" pos:start="77:65" pos:end="77:65">1</literal></expr> </then><else pos:start="77:67" pos:end="77:88">: <expr pos:start="77:69" pos:end="77:88"><name pos:start="77:69" pos:end="77:73">mb_xy</name> <operator pos:start="77:75" pos:end="77:75">-</operator> <name pos:start="77:77" pos:end="77:88"><name pos:start="77:77" pos:end="77:77">s</name><operator pos:start="77:78" pos:end="77:79">-&gt;</operator><name pos:start="77:80" pos:end="77:88">mb_stride</name></name></expr></else></ternary> <operator pos:start="77:90" pos:end="77:90">)</operator></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="79:13" pos:end="79:22"><decl pos:start="79:13" pos:end="79:21"><type pos:start="79:13" pos:end="79:15"><name pos:start="79:13" pos:end="79:15">int</name></type> <name pos:start="79:17" pos:end="79:21"><name pos:start="79:17" pos:end="79:18">bS</name><index pos:start="79:19" pos:end="79:21">[<expr pos:start="79:20" pos:end="79:20"><literal type="number" pos:start="79:20" pos:end="79:20">4</literal></expr>]</index></name></decl>;</decl_stmt>

            <decl_stmt pos:start="81:13" pos:end="81:19"><decl pos:start="81:13" pos:end="81:18"><type pos:start="81:13" pos:end="81:15"><name pos:start="81:13" pos:end="81:15">int</name></type> <name pos:start="81:17" pos:end="81:18">qp</name></decl>;</decl_stmt>



            <if_stmt pos:start="85:13" pos:end="159:13"><if pos:start="85:13" pos:end="91:13">if<condition pos:start="85:15" pos:end="87:64">( <expr pos:start="85:17" pos:end="87:62"><call pos:start="85:17" pos:end="85:61"><name pos:start="85:17" pos:end="85:24">IS_INTRA</name><argument_list pos:start="85:25" pos:end="85:61">( <argument pos:start="85:27" pos:end="85:59"><expr pos:start="85:27" pos:end="85:59"><name pos:start="85:27" pos:end="85:59"><name pos:start="85:27" pos:end="85:27">s</name><operator pos:start="85:28" pos:end="85:29">-&gt;</operator><name pos:start="85:30" pos:end="85:44">current_picture</name><operator pos:start="85:45" pos:end="85:45">.</operator><name pos:start="85:46" pos:end="85:52">mb_type</name><index pos:start="85:53" pos:end="85:59">[<expr pos:start="85:54" pos:end="85:58"><name pos:start="85:54" pos:end="85:58">mb_xy</name></expr>]</index></name></expr></argument> )</argument_list></call> <operator pos:start="85:63" pos:end="85:64">||</operator>

                <call pos:start="87:17" pos:end="87:62"><name pos:start="87:17" pos:end="87:24">IS_INTRA</name><argument_list pos:start="87:25" pos:end="87:62">( <argument pos:start="87:27" pos:end="87:60"><expr pos:start="87:27" pos:end="87:60"><name pos:start="87:27" pos:end="87:60"><name pos:start="87:27" pos:end="87:27">s</name><operator pos:start="87:28" pos:end="87:29">-&gt;</operator><name pos:start="87:30" pos:end="87:44">current_picture</name><operator pos:start="87:45" pos:end="87:45">.</operator><name pos:start="87:46" pos:end="87:52">mb_type</name><index pos:start="87:53" pos:end="87:60">[<expr pos:start="87:54" pos:end="87:59"><name pos:start="87:54" pos:end="87:59">mbn_xy</name></expr>]</index></name></expr></argument> )</argument_list></call></expr> )</condition> <block pos:start="87:66" pos:end="91:13">{<block_content pos:start="89:17" pos:end="89:70">

                <expr_stmt pos:start="89:17" pos:end="89:70"><expr pos:start="89:17" pos:end="89:69"><name pos:start="89:17" pos:end="89:21"><name pos:start="89:17" pos:end="89:18">bS</name><index pos:start="89:19" pos:end="89:21">[<expr pos:start="89:20" pos:end="89:20"><literal type="number" pos:start="89:20" pos:end="89:20">0</literal></expr>]</index></name> <operator pos:start="89:23" pos:end="89:23">=</operator> <name pos:start="89:25" pos:end="89:29"><name pos:start="89:25" pos:end="89:26">bS</name><index pos:start="89:27" pos:end="89:29">[<expr pos:start="89:28" pos:end="89:28"><literal type="number" pos:start="89:28" pos:end="89:28">1</literal></expr>]</index></name> <operator pos:start="89:31" pos:end="89:31">=</operator> <name pos:start="89:33" pos:end="89:37"><name pos:start="89:33" pos:end="89:34">bS</name><index pos:start="89:35" pos:end="89:37">[<expr pos:start="89:36" pos:end="89:36"><literal type="number" pos:start="89:36" pos:end="89:36">2</literal></expr>]</index></name> <operator pos:start="89:39" pos:end="89:39">=</operator> <name pos:start="89:41" pos:end="89:45"><name pos:start="89:41" pos:end="89:42">bS</name><index pos:start="89:43" pos:end="89:45">[<expr pos:start="89:44" pos:end="89:44"><literal type="number" pos:start="89:44" pos:end="89:44">3</literal></expr>]</index></name> <operator pos:start="89:47" pos:end="89:47">=</operator> <operator pos:start="89:49" pos:end="89:49">(</operator> <ternary pos:start="89:51" pos:end="89:67"><condition pos:start="89:51" pos:end="89:61"><expr pos:start="89:51" pos:end="89:59"><name pos:start="89:51" pos:end="89:54">edge</name> <operator pos:start="89:56" pos:end="89:57">==</operator> <literal type="number" pos:start="89:59" pos:end="89:59">0</literal></expr> ?</condition><then pos:start="89:63" pos:end="89:63"> <expr pos:start="89:63" pos:end="89:63"><literal type="number" pos:start="89:63" pos:end="89:63">4</literal></expr> </then><else pos:start="89:65" pos:end="89:67">: <expr pos:start="89:67" pos:end="89:67"><literal type="number" pos:start="89:67" pos:end="89:67">3</literal></expr></else></ternary> <operator pos:start="89:69" pos:end="89:69">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="91:15" pos:end="159:13">else <block pos:start="91:20" pos:end="159:13">{<block_content pos:start="93:17" pos:end="157:17">

                <decl_stmt pos:start="93:17" pos:end="93:22"><decl pos:start="93:17" pos:end="93:21"><type pos:start="93:17" pos:end="93:19"><name pos:start="93:17" pos:end="93:19">int</name></type> <name pos:start="93:21" pos:end="93:21">i</name></decl>;</decl_stmt>

                <for pos:start="95:17" pos:end="157:17">for<control pos:start="95:20" pos:end="95:40">( <init pos:start="95:22" pos:end="95:27"><expr pos:start="95:22" pos:end="95:26"><name pos:start="95:22" pos:end="95:22">i</name> <operator pos:start="95:24" pos:end="95:24">=</operator> <literal type="number" pos:start="95:26" pos:end="95:26">0</literal></expr>;</init> <condition pos:start="95:29" pos:end="95:34"><expr pos:start="95:29" pos:end="95:33"><name pos:start="95:29" pos:end="95:29">i</name> <operator pos:start="95:31" pos:end="95:31">&lt;</operator> <literal type="number" pos:start="95:33" pos:end="95:33">4</literal></expr>;</condition> <incr pos:start="95:36" pos:end="95:38"><expr pos:start="95:36" pos:end="95:38"><name pos:start="95:36" pos:end="95:36">i</name><operator pos:start="95:37" pos:end="95:38">++</operator></expr></incr> )</control> <block pos:start="95:42" pos:end="157:17">{<block_content pos:start="97:21" pos:end="155:21">

                    <decl_stmt pos:start="97:21" pos:end="103:22"><decl pos:start="97:21" pos:end="103:21"><type pos:start="97:21" pos:end="97:40"><specifier pos:start="97:21" pos:end="97:26">static</specifier> <specifier pos:start="97:28" pos:end="97:32">const</specifier> <name pos:start="97:34" pos:end="97:40">uint8_t</name></type> <name pos:start="97:42" pos:end="97:59"><name pos:start="97:42" pos:end="97:53">block_idx_xy</name><index pos:start="97:54" pos:end="97:56">[<expr pos:start="97:55" pos:end="97:55"><literal type="number" pos:start="97:55" pos:end="97:55">4</literal></expr>]</index><index pos:start="97:57" pos:end="97:59">[<expr pos:start="97:58" pos:end="97:58"><literal type="number" pos:start="97:58" pos:end="97:58">4</literal></expr>]</index></name> <init pos:start="97:61" pos:end="103:21">= <expr pos:start="97:63" pos:end="103:21"><block pos:start="97:63" pos:end="103:21">{

                        <expr pos:start="99:25" pos:end="99:39"><block pos:start="99:25" pos:end="99:39">{ <expr pos:start="99:27" pos:end="99:27"><literal type="number" pos:start="99:27" pos:end="99:27">0</literal></expr>, <expr pos:start="99:30" pos:end="99:30"><literal type="number" pos:start="99:30" pos:end="99:30">2</literal></expr>, <expr pos:start="99:33" pos:end="99:33"><literal type="number" pos:start="99:33" pos:end="99:33">8</literal></expr>,  <expr pos:start="99:37" pos:end="99:38"><literal type="number" pos:start="99:37" pos:end="99:38">10</literal></expr>}</block></expr>, <expr pos:start="99:42" pos:end="99:56"><block pos:start="99:42" pos:end="99:56">{ <expr pos:start="99:44" pos:end="99:44"><literal type="number" pos:start="99:44" pos:end="99:44">1</literal></expr>, <expr pos:start="99:47" pos:end="99:47"><literal type="number" pos:start="99:47" pos:end="99:47">3</literal></expr>, <expr pos:start="99:50" pos:end="99:50"><literal type="number" pos:start="99:50" pos:end="99:50">9</literal></expr>,  <expr pos:start="99:54" pos:end="99:55"><literal type="number" pos:start="99:54" pos:end="99:55">11</literal></expr>}</block></expr>,

                        <expr pos:start="101:25" pos:end="101:39"><block pos:start="101:25" pos:end="101:39">{ <expr pos:start="101:27" pos:end="101:27"><literal type="number" pos:start="101:27" pos:end="101:27">4</literal></expr>, <expr pos:start="101:30" pos:end="101:30"><literal type="number" pos:start="101:30" pos:end="101:30">6</literal></expr>, <expr pos:start="101:33" pos:end="101:34"><literal type="number" pos:start="101:33" pos:end="101:34">12</literal></expr>, <expr pos:start="101:37" pos:end="101:38"><literal type="number" pos:start="101:37" pos:end="101:38">14</literal></expr>}</block></expr>, <expr pos:start="101:42" pos:end="101:56"><block pos:start="101:42" pos:end="101:56">{ <expr pos:start="101:44" pos:end="101:44"><literal type="number" pos:start="101:44" pos:end="101:44">5</literal></expr>, <expr pos:start="101:47" pos:end="101:47"><literal type="number" pos:start="101:47" pos:end="101:47">7</literal></expr>, <expr pos:start="101:50" pos:end="101:51"><literal type="number" pos:start="101:50" pos:end="101:51">13</literal></expr>, <expr pos:start="101:54" pos:end="101:55"><literal type="number" pos:start="101:54" pos:end="101:55">15</literal></expr>}</block></expr>

                    }</block></expr></init></decl>;</decl_stmt>



                    <decl_stmt pos:start="107:21" pos:end="107:48"><decl pos:start="107:21" pos:end="107:47"><type pos:start="107:21" pos:end="107:23"><name pos:start="107:21" pos:end="107:23">int</name></type> <name pos:start="107:25" pos:end="107:25">x</name> <init pos:start="107:27" pos:end="107:47">= <expr pos:start="107:29" pos:end="107:47"><ternary pos:start="107:29" pos:end="107:47"><condition pos:start="107:29" pos:end="107:38"><expr pos:start="107:29" pos:end="107:36"><name pos:start="107:29" pos:end="107:31">dir</name> <operator pos:start="107:33" pos:end="107:34">==</operator> <literal type="number" pos:start="107:36" pos:end="107:36">0</literal></expr> ?</condition><then pos:start="107:40" pos:end="107:43"> <expr pos:start="107:40" pos:end="107:43"><name pos:start="107:40" pos:end="107:43">edge</name></expr> </then><else pos:start="107:45" pos:end="107:47">: <expr pos:start="107:47" pos:end="107:47"><name pos:start="107:47" pos:end="107:47">i</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="109:21" pos:end="109:51"><decl pos:start="109:21" pos:end="109:50"><type pos:start="109:21" pos:end="109:23"><name pos:start="109:21" pos:end="109:23">int</name></type> <name pos:start="109:25" pos:end="109:25">y</name> <init pos:start="109:27" pos:end="109:50">= <expr pos:start="109:29" pos:end="109:50"><ternary pos:start="109:29" pos:end="109:50"><condition pos:start="109:29" pos:end="109:38"><expr pos:start="109:29" pos:end="109:36"><name pos:start="109:29" pos:end="109:31">dir</name> <operator pos:start="109:33" pos:end="109:34">==</operator> <literal type="number" pos:start="109:36" pos:end="109:36">0</literal></expr> ?</condition><then pos:start="109:40" pos:end="109:40"> <expr pos:start="109:40" pos:end="109:40"><name pos:start="109:40" pos:end="109:40">i</name></expr>    </then><else pos:start="109:45" pos:end="109:50">: <expr pos:start="109:47" pos:end="109:50"><name pos:start="109:47" pos:end="109:50">edge</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="111:21" pos:end="111:60"><decl pos:start="111:21" pos:end="111:59"><type pos:start="111:21" pos:end="111:23"><name pos:start="111:21" pos:end="111:23">int</name></type> <name pos:start="111:25" pos:end="111:26">xn</name> <init pos:start="111:28" pos:end="111:59">= <expr pos:start="111:30" pos:end="111:59"><operator pos:start="111:30" pos:end="111:30">(</operator><name pos:start="111:31" pos:end="111:31">x</name> <operator pos:start="111:33" pos:end="111:33">-</operator> <operator pos:start="111:35" pos:end="111:35">(</operator><ternary pos:start="111:36" pos:end="111:51"><condition pos:start="111:36" pos:end="111:45"><expr pos:start="111:36" pos:end="111:43"><name pos:start="111:36" pos:end="111:38">dir</name> <operator pos:start="111:40" pos:end="111:41">==</operator> <literal type="number" pos:start="111:43" pos:end="111:43">0</literal></expr> ?</condition><then pos:start="111:47" pos:end="111:47"> <expr pos:start="111:47" pos:end="111:47"><literal type="number" pos:start="111:47" pos:end="111:47">1</literal></expr> </then><else pos:start="111:49" pos:end="111:51">: <expr pos:start="111:51" pos:end="111:51"><literal type="number" pos:start="111:51" pos:end="111:51">0</literal></expr></else></ternary> <operator pos:start="111:53" pos:end="111:53">)</operator><operator pos:start="111:54" pos:end="111:54">)</operator><operator pos:start="111:55" pos:end="111:55">&amp;</operator><literal type="number" pos:start="111:56" pos:end="111:59">0x03</literal></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="113:21" pos:end="113:60"><decl pos:start="113:21" pos:end="113:59"><type pos:start="113:21" pos:end="113:23"><name pos:start="113:21" pos:end="113:23">int</name></type> <name pos:start="113:25" pos:end="113:26">yn</name> <init pos:start="113:28" pos:end="113:59">= <expr pos:start="113:30" pos:end="113:59"><operator pos:start="113:30" pos:end="113:30">(</operator><name pos:start="113:31" pos:end="113:31">y</name> <operator pos:start="113:33" pos:end="113:33">-</operator> <operator pos:start="113:35" pos:end="113:35">(</operator><ternary pos:start="113:36" pos:end="113:51"><condition pos:start="113:36" pos:end="113:45"><expr pos:start="113:36" pos:end="113:43"><name pos:start="113:36" pos:end="113:38">dir</name> <operator pos:start="113:40" pos:end="113:41">==</operator> <literal type="number" pos:start="113:43" pos:end="113:43">0</literal></expr> ?</condition><then pos:start="113:47" pos:end="113:47"> <expr pos:start="113:47" pos:end="113:47"><literal type="number" pos:start="113:47" pos:end="113:47">0</literal></expr> </then><else pos:start="113:49" pos:end="113:51">: <expr pos:start="113:51" pos:end="113:51"><literal type="number" pos:start="113:51" pos:end="113:51">1</literal></expr></else></ternary> <operator pos:start="113:53" pos:end="113:53">)</operator><operator pos:start="113:54" pos:end="113:54">)</operator><operator pos:start="113:55" pos:end="113:55">&amp;</operator><literal type="number" pos:start="113:56" pos:end="113:59">0x03</literal></expr></init></decl>;</decl_stmt>



                    <if_stmt pos:start="117:21" pos:end="155:21"><if pos:start="117:21" pos:end="123:21">if<condition pos:start="117:23" pos:end="119:78">( <expr pos:start="117:25" pos:end="119:76"><name pos:start="117:25" pos:end="117:68"><name pos:start="117:25" pos:end="117:25">h</name><operator pos:start="117:26" pos:end="117:27">-&gt;</operator><name pos:start="117:28" pos:end="117:41">non_zero_count</name><index pos:start="117:42" pos:end="117:48">[<expr pos:start="117:43" pos:end="117:47"><name pos:start="117:43" pos:end="117:47">mb_xy</name></expr>]</index><index pos:start="117:49" pos:end="117:68">[<expr pos:start="117:50" pos:end="117:67"><name pos:start="117:50" pos:end="117:67"><name pos:start="117:50" pos:end="117:61">block_idx_xy</name><index pos:start="117:62" pos:end="117:64">[<expr pos:start="117:63" pos:end="117:63"><name pos:start="117:63" pos:end="117:63">x</name></expr>]</index><index pos:start="117:65" pos:end="117:67">[<expr pos:start="117:66" pos:end="117:66"><name pos:start="117:66" pos:end="117:66">y</name></expr>]</index></name></expr>]</index></name> <operator pos:start="117:70" pos:end="117:71">!=</operator> <literal type="number" pos:start="117:73" pos:end="117:73">0</literal> <operator pos:start="117:75" pos:end="117:76">||</operator>

                        <name pos:start="119:25" pos:end="119:71"><name pos:start="119:25" pos:end="119:25">h</name><operator pos:start="119:26" pos:end="119:27">-&gt;</operator><name pos:start="119:28" pos:end="119:41">non_zero_count</name><index pos:start="119:42" pos:end="119:49">[<expr pos:start="119:43" pos:end="119:48"><name pos:start="119:43" pos:end="119:48">mbn_xy</name></expr>]</index><index pos:start="119:50" pos:end="119:71">[<expr pos:start="119:51" pos:end="119:70"><name pos:start="119:51" pos:end="119:70"><name pos:start="119:51" pos:end="119:62">block_idx_xy</name><index pos:start="119:63" pos:end="119:66">[<expr pos:start="119:64" pos:end="119:65"><name pos:start="119:64" pos:end="119:65">xn</name></expr>]</index><index pos:start="119:67" pos:end="119:70">[<expr pos:start="119:68" pos:end="119:69"><name pos:start="119:68" pos:end="119:69">yn</name></expr>]</index></name></expr>]</index></name> <operator pos:start="119:73" pos:end="119:74">!=</operator> <literal type="number" pos:start="119:76" pos:end="119:76">0</literal></expr> )</condition> <block pos:start="119:80" pos:end="123:21">{<block_content pos:start="121:25" pos:end="121:34">

                        <expr_stmt pos:start="121:25" pos:end="121:34"><expr pos:start="121:25" pos:end="121:33"><name pos:start="121:25" pos:end="121:29"><name pos:start="121:25" pos:end="121:26">bS</name><index pos:start="121:27" pos:end="121:29">[<expr pos:start="121:28" pos:end="121:28"><name pos:start="121:28" pos:end="121:28">i</name></expr>]</index></name> <operator pos:start="121:31" pos:end="121:31">=</operator> <literal type="number" pos:start="121:33" pos:end="121:33">2</literal></expr>;</expr_stmt>

                    </block_content>}</block></if>

                    <if type="elseif" pos:start="125:21" pos:end="147:21">else if<condition pos:start="125:28" pos:end="125:54">( <expr pos:start="125:30" pos:end="125:52"><name pos:start="125:30" pos:end="125:42"><name pos:start="125:30" pos:end="125:30">h</name><operator pos:start="125:31" pos:end="125:32">-&gt;</operator><name pos:start="125:33" pos:end="125:42">slice_type</name></name> <operator pos:start="125:44" pos:end="125:45">==</operator> <name pos:start="125:47" pos:end="125:52">P_TYPE</name></expr> )</condition> <block pos:start="125:56" pos:end="147:21">{<block_content pos:start="127:25" pos:end="145:38">

                        <decl_stmt pos:start="127:25" pos:end="127:88"><decl pos:start="127:25" pos:end="127:87"><type pos:start="127:25" pos:end="127:33"><specifier pos:start="127:25" pos:end="127:29">const</specifier> <name pos:start="127:31" pos:end="127:33">int</name></type> <name pos:start="127:35" pos:end="127:39">b8_xy</name> <init pos:start="127:41" pos:end="127:87">= <expr pos:start="127:43" pos:end="127:87"><name pos:start="127:43" pos:end="127:60"><name pos:start="127:43" pos:end="127:43">h</name><operator pos:start="127:44" pos:end="127:45">-&gt;</operator><name pos:start="127:46" pos:end="127:53">mb2b8_xy</name><index pos:start="127:54" pos:end="127:60">[<expr pos:start="127:55" pos:end="127:59"><name pos:start="127:55" pos:end="127:59">mb_xy</name></expr>]</index></name><operator pos:start="127:61" pos:end="127:61">+</operator><operator pos:start="127:62" pos:end="127:62">(</operator><name pos:start="127:63" pos:end="127:63">y</name><operator pos:start="127:64" pos:end="127:65">&gt;&gt;</operator><literal type="number" pos:start="127:66" pos:end="127:66">1</literal><operator pos:start="127:67" pos:end="127:67">)</operator><operator pos:start="127:68" pos:end="127:68">*</operator><name pos:start="127:69" pos:end="127:80"><name pos:start="127:69" pos:end="127:69">h</name><operator pos:start="127:70" pos:end="127:71">-&gt;</operator><name pos:start="127:72" pos:end="127:80">b8_stride</name></name><operator pos:start="127:81" pos:end="127:81">+</operator><operator pos:start="127:82" pos:end="127:82">(</operator><name pos:start="127:83" pos:end="127:83">x</name><operator pos:start="127:84" pos:end="127:85">&gt;&gt;</operator><literal type="number" pos:start="127:86" pos:end="127:86">1</literal><operator pos:start="127:87" pos:end="127:87">)</operator></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="129:25" pos:end="129:91"><decl pos:start="129:25" pos:end="129:90"><type pos:start="129:25" pos:end="129:33"><specifier pos:start="129:25" pos:end="129:29">const</specifier> <name pos:start="129:31" pos:end="129:33">int</name></type> <name pos:start="129:35" pos:end="129:40">b8n_xy</name><init pos:start="129:41" pos:end="129:90">= <expr pos:start="129:43" pos:end="129:90"><name pos:start="129:43" pos:end="129:61"><name pos:start="129:43" pos:end="129:43">h</name><operator pos:start="129:44" pos:end="129:45">-&gt;</operator><name pos:start="129:46" pos:end="129:53">mb2b8_xy</name><index pos:start="129:54" pos:end="129:61">[<expr pos:start="129:55" pos:end="129:60"><name pos:start="129:55" pos:end="129:60">mbn_xy</name></expr>]</index></name><operator pos:start="129:62" pos:end="129:62">+</operator><operator pos:start="129:63" pos:end="129:63">(</operator><name pos:start="129:64" pos:end="129:65">yn</name><operator pos:start="129:66" pos:end="129:67">&gt;&gt;</operator><literal type="number" pos:start="129:68" pos:end="129:68">1</literal><operator pos:start="129:69" pos:end="129:69">)</operator><operator pos:start="129:70" pos:end="129:70">*</operator><name pos:start="129:71" pos:end="129:82"><name pos:start="129:71" pos:end="129:71">h</name><operator pos:start="129:72" pos:end="129:73">-&gt;</operator><name pos:start="129:74" pos:end="129:82">b8_stride</name></name><operator pos:start="129:83" pos:end="129:83">+</operator><operator pos:start="129:84" pos:end="129:84">(</operator><name pos:start="129:85" pos:end="129:86">xn</name><operator pos:start="129:87" pos:end="129:88">&gt;&gt;</operator><literal type="number" pos:start="129:89" pos:end="129:89">1</literal><operator pos:start="129:90" pos:end="129:90">)</operator></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="131:25" pos:end="131:76"><decl pos:start="131:25" pos:end="131:75"><type pos:start="131:25" pos:end="131:33"><specifier pos:start="131:25" pos:end="131:29">const</specifier> <name pos:start="131:31" pos:end="131:33">int</name></type> <name pos:start="131:35" pos:end="131:38">b_xy</name>  <init pos:start="131:41" pos:end="131:75">= <expr pos:start="131:43" pos:end="131:75"><name pos:start="131:43" pos:end="131:59"><name pos:start="131:43" pos:end="131:43">h</name><operator pos:start="131:44" pos:end="131:45">-&gt;</operator><name pos:start="131:46" pos:end="131:52">mb2b_xy</name><index pos:start="131:53" pos:end="131:59">[<expr pos:start="131:54" pos:end="131:58"><name pos:start="131:54" pos:end="131:58">mb_xy</name></expr>]</index></name><operator pos:start="131:60" pos:end="131:60">+</operator><name pos:start="131:61" pos:end="131:61">y</name><operator pos:start="131:62" pos:end="131:62">*</operator><name pos:start="131:63" pos:end="131:73"><name pos:start="131:63" pos:end="131:63">h</name><operator pos:start="131:64" pos:end="131:65">-&gt;</operator><name pos:start="131:66" pos:end="131:73">b_stride</name></name><operator pos:start="131:74" pos:end="131:74">+</operator><name pos:start="131:75" pos:end="131:75">x</name></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="133:25" pos:end="133:79"><decl pos:start="133:25" pos:end="133:78"><type pos:start="133:25" pos:end="133:33"><specifier pos:start="133:25" pos:end="133:29">const</specifier> <name pos:start="133:31" pos:end="133:33">int</name></type> <name pos:start="133:35" pos:end="133:39">bn_xy</name> <init pos:start="133:41" pos:end="133:78">= <expr pos:start="133:43" pos:end="133:78"><name pos:start="133:43" pos:end="133:60"><name pos:start="133:43" pos:end="133:43">h</name><operator pos:start="133:44" pos:end="133:45">-&gt;</operator><name pos:start="133:46" pos:end="133:52">mb2b_xy</name><index pos:start="133:53" pos:end="133:60">[<expr pos:start="133:54" pos:end="133:59"><name pos:start="133:54" pos:end="133:59">mbn_xy</name></expr>]</index></name><operator pos:start="133:61" pos:end="133:61">+</operator><name pos:start="133:62" pos:end="133:63">yn</name><operator pos:start="133:64" pos:end="133:64">*</operator><name pos:start="133:65" pos:end="133:75"><name pos:start="133:65" pos:end="133:65">h</name><operator pos:start="133:66" pos:end="133:67">-&gt;</operator><name pos:start="133:68" pos:end="133:75">b_stride</name></name><operator pos:start="133:76" pos:end="133:76">+</operator><name pos:start="133:77" pos:end="133:78">xn</name></expr></init></decl>;</decl_stmt>

                        <if_stmt pos:start="135:25" pos:end="145:38"><if pos:start="135:25" pos:end="141:38">if<condition pos:start="135:27" pos:end="139:128">( <expr pos:start="135:29" pos:end="139:126"><name pos:start="135:29" pos:end="135:66"><name pos:start="135:29" pos:end="135:29">s</name><operator pos:start="135:30" pos:end="135:31">-&gt;</operator><name pos:start="135:32" pos:end="135:46">current_picture</name><operator pos:start="135:47" pos:end="135:47">.</operator><name pos:start="135:48" pos:end="135:56">ref_index</name><index pos:start="135:57" pos:end="135:59">[<expr pos:start="135:58" pos:end="135:58"><literal type="number" pos:start="135:58" pos:end="135:58">0</literal></expr>]</index><index pos:start="135:60" pos:end="135:66">[<expr pos:start="135:61" pos:end="135:65"><name pos:start="135:61" pos:end="135:65">b8_xy</name></expr>]</index></name> <operator pos:start="135:68" pos:end="135:69">!=</operator> <name pos:start="135:71" pos:end="135:109"><name pos:start="135:71" pos:end="135:71">s</name><operator pos:start="135:72" pos:end="135:73">-&gt;</operator><name pos:start="135:74" pos:end="135:88">current_picture</name><operator pos:start="135:89" pos:end="135:89">.</operator><name pos:start="135:90" pos:end="135:98">ref_index</name><index pos:start="135:99" pos:end="135:101">[<expr pos:start="135:100" pos:end="135:100"><literal type="number" pos:start="135:100" pos:end="135:100">0</literal></expr>]</index><index pos:start="135:102" pos:end="135:109">[<expr pos:start="135:103" pos:end="135:108"><name pos:start="135:103" pos:end="135:108">b8n_xy</name></expr>]</index></name> <operator pos:start="135:111" pos:end="135:112">||</operator>

                            <call pos:start="137:29" pos:end="137:121"><name pos:start="137:29" pos:end="137:31">ABS</name><argument_list pos:start="137:32" pos:end="137:121">( <argument pos:start="137:34" pos:end="137:119"><expr pos:start="137:34" pos:end="137:119"><name pos:start="137:34" pos:end="137:74"><name pos:start="137:34" pos:end="137:34">s</name><operator pos:start="137:35" pos:end="137:36">-&gt;</operator><name pos:start="137:37" pos:end="137:51">current_picture</name><operator pos:start="137:52" pos:end="137:52">.</operator><name pos:start="137:53" pos:end="137:62">motion_val</name><index pos:start="137:63" pos:end="137:65">[<expr pos:start="137:64" pos:end="137:64"><literal type="number" pos:start="137:64" pos:end="137:64">0</literal></expr>]</index><index pos:start="137:66" pos:end="137:71">[<expr pos:start="137:67" pos:end="137:70"><name pos:start="137:67" pos:end="137:70">b_xy</name></expr>]</index><index pos:start="137:72" pos:end="137:74">[<expr pos:start="137:73" pos:end="137:73"><literal type="number" pos:start="137:73" pos:end="137:73">0</literal></expr>]</index></name> <operator pos:start="137:76" pos:end="137:76">-</operator> <name pos:start="137:78" pos:end="137:119"><name pos:start="137:78" pos:end="137:78">s</name><operator pos:start="137:79" pos:end="137:80">-&gt;</operator><name pos:start="137:81" pos:end="137:95">current_picture</name><operator pos:start="137:96" pos:end="137:96">.</operator><name pos:start="137:97" pos:end="137:106">motion_val</name><index pos:start="137:107" pos:end="137:109">[<expr pos:start="137:108" pos:end="137:108"><literal type="number" pos:start="137:108" pos:end="137:108">0</literal></expr>]</index><index pos:start="137:110" pos:end="137:116">[<expr pos:start="137:111" pos:end="137:115"><name pos:start="137:111" pos:end="137:115">bn_xy</name></expr>]</index><index pos:start="137:117" pos:end="137:119">[<expr pos:start="137:118" pos:end="137:118"><literal type="number" pos:start="137:118" pos:end="137:118">0</literal></expr>]</index></name></expr></argument> )</argument_list></call> <operator pos:start="137:123" pos:end="137:124">&gt;=</operator> <literal type="number" pos:start="137:126" pos:end="137:126">4</literal> <operator pos:start="137:128" pos:end="137:129">||</operator>

                            <call pos:start="139:29" pos:end="139:121"><name pos:start="139:29" pos:end="139:31">ABS</name><argument_list pos:start="139:32" pos:end="139:121">( <argument pos:start="139:34" pos:end="139:119"><expr pos:start="139:34" pos:end="139:119"><name pos:start="139:34" pos:end="139:74"><name pos:start="139:34" pos:end="139:34">s</name><operator pos:start="139:35" pos:end="139:36">-&gt;</operator><name pos:start="139:37" pos:end="139:51">current_picture</name><operator pos:start="139:52" pos:end="139:52">.</operator><name pos:start="139:53" pos:end="139:62">motion_val</name><index pos:start="139:63" pos:end="139:65">[<expr pos:start="139:64" pos:end="139:64"><literal type="number" pos:start="139:64" pos:end="139:64">0</literal></expr>]</index><index pos:start="139:66" pos:end="139:71">[<expr pos:start="139:67" pos:end="139:70"><name pos:start="139:67" pos:end="139:70">b_xy</name></expr>]</index><index pos:start="139:72" pos:end="139:74">[<expr pos:start="139:73" pos:end="139:73"><literal type="number" pos:start="139:73" pos:end="139:73">1</literal></expr>]</index></name> <operator pos:start="139:76" pos:end="139:76">-</operator> <name pos:start="139:78" pos:end="139:119"><name pos:start="139:78" pos:end="139:78">s</name><operator pos:start="139:79" pos:end="139:80">-&gt;</operator><name pos:start="139:81" pos:end="139:95">current_picture</name><operator pos:start="139:96" pos:end="139:96">.</operator><name pos:start="139:97" pos:end="139:106">motion_val</name><index pos:start="139:107" pos:end="139:109">[<expr pos:start="139:108" pos:end="139:108"><literal type="number" pos:start="139:108" pos:end="139:108">0</literal></expr>]</index><index pos:start="139:110" pos:end="139:116">[<expr pos:start="139:111" pos:end="139:115"><name pos:start="139:111" pos:end="139:115">bn_xy</name></expr>]</index><index pos:start="139:117" pos:end="139:119">[<expr pos:start="139:118" pos:end="139:118"><literal type="number" pos:start="139:118" pos:end="139:118">1</literal></expr>]</index></name></expr></argument> )</argument_list></call> <operator pos:start="139:123" pos:end="139:124">&gt;=</operator> <literal type="number" pos:start="139:126" pos:end="139:126">4</literal></expr> )</condition><block type="pseudo" pos:start="141:29" pos:end="141:38"><block_content pos:start="141:29" pos:end="141:38">

                            <expr_stmt pos:start="141:29" pos:end="141:38"><expr pos:start="141:29" pos:end="141:37"><name pos:start="141:29" pos:end="141:33"><name pos:start="141:29" pos:end="141:30">bS</name><index pos:start="141:31" pos:end="141:33">[<expr pos:start="141:32" pos:end="141:32"><name pos:start="141:32" pos:end="141:32">i</name></expr>]</index></name> <operator pos:start="141:35" pos:end="141:35">=</operator> <literal type="number" pos:start="141:37" pos:end="141:37">1</literal></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="143:25" pos:end="145:38">else<block type="pseudo" pos:start="145:29" pos:end="145:38"><block_content pos:start="145:29" pos:end="145:38">

                            <expr_stmt pos:start="145:29" pos:end="145:38"><expr pos:start="145:29" pos:end="145:37"><name pos:start="145:29" pos:end="145:33"><name pos:start="145:29" pos:end="145:30">bS</name><index pos:start="145:31" pos:end="145:33">[<expr pos:start="145:32" pos:end="145:32"><name pos:start="145:32" pos:end="145:32">i</name></expr>]</index></name> <operator pos:start="145:35" pos:end="145:35">=</operator> <literal type="number" pos:start="145:37" pos:end="145:37">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    </block_content>}</block></if>

                    <else pos:start="149:21" pos:end="155:21">else <block pos:start="149:26" pos:end="155:21">{<block_content pos:start="153:25" pos:end="153:31">

                        <comment type="block" pos:start="151:25" pos:end="151:59">/* FIXME Add support for B frame */</comment>

                        <return pos:start="153:25" pos:end="153:31">return;</return>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>



            <comment type="block" pos:start="163:13" pos:end="163:29">/* Filter edge */</comment>

            <expr_stmt pos:start="165:13" pos:end="165:111"><expr pos:start="165:13" pos:end="165:110"><name pos:start="165:13" pos:end="165:14">qp</name> <operator pos:start="165:16" pos:end="165:16">=</operator> <operator pos:start="165:18" pos:end="165:18">(</operator> <name pos:start="165:20" pos:end="165:57"><name pos:start="165:20" pos:end="165:20">s</name><operator pos:start="165:21" pos:end="165:22">-&gt;</operator><name pos:start="165:23" pos:end="165:37">current_picture</name><operator pos:start="165:38" pos:end="165:38">.</operator><name pos:start="165:39" pos:end="165:50">qscale_table</name><index pos:start="165:51" pos:end="165:57">[<expr pos:start="165:52" pos:end="165:56"><name pos:start="165:52" pos:end="165:56">mb_xy</name></expr>]</index></name> <operator pos:start="165:59" pos:end="165:59">+</operator> <name pos:start="165:61" pos:end="165:99"><name pos:start="165:61" pos:end="165:61">s</name><operator pos:start="165:62" pos:end="165:63">-&gt;</operator><name pos:start="165:64" pos:end="165:78">current_picture</name><operator pos:start="165:79" pos:end="165:79">.</operator><name pos:start="165:80" pos:end="165:91">qscale_table</name><index pos:start="165:92" pos:end="165:99">[<expr pos:start="165:93" pos:end="165:98"><name pos:start="165:93" pos:end="165:98">mbn_xy</name></expr>]</index></name> <operator pos:start="165:101" pos:end="165:101">+</operator> <literal type="number" pos:start="165:103" pos:end="165:103">1</literal> <operator pos:start="165:105" pos:end="165:105">)</operator> <operator pos:start="165:107" pos:end="165:108">&gt;&gt;</operator> <literal type="number" pos:start="165:110" pos:end="165:110">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="167:13" pos:end="199:13"><if pos:start="167:13" pos:end="183:13">if<condition pos:start="167:15" pos:end="167:26">( <expr pos:start="167:17" pos:end="167:24"><name pos:start="167:17" pos:end="167:19">dir</name> <operator pos:start="167:21" pos:end="167:22">==</operator> <literal type="number" pos:start="167:24" pos:end="167:24">0</literal></expr> )</condition> <block pos:start="167:28" pos:end="183:13">{<block_content pos:start="169:17" pos:end="181:17">

                <expr_stmt pos:start="169:17" pos:end="169:71"><expr pos:start="169:17" pos:end="169:70"><call pos:start="169:17" pos:end="169:70"><name pos:start="169:17" pos:end="169:31">filter_mb_edgev</name><argument_list pos:start="169:32" pos:end="169:70">( <argument pos:start="169:34" pos:end="169:34"><expr pos:start="169:34" pos:end="169:34"><name pos:start="169:34" pos:end="169:34">h</name></expr></argument>, <argument pos:start="169:37" pos:end="169:50"><expr pos:start="169:37" pos:end="169:50"><operator pos:start="169:37" pos:end="169:37">&amp;</operator><name pos:start="169:38" pos:end="169:50"><name pos:start="169:38" pos:end="169:42">img_y</name><index pos:start="169:43" pos:end="169:50">[<expr pos:start="169:44" pos:end="169:49"><literal type="number" pos:start="169:44" pos:end="169:44">4</literal><operator pos:start="169:45" pos:end="169:45">*</operator><name pos:start="169:46" pos:end="169:49">edge</name></expr>]</index></name></expr></argument>, <argument pos:start="169:53" pos:end="169:60"><expr pos:start="169:53" pos:end="169:60"><name pos:start="169:53" pos:end="169:60">linesize</name></expr></argument>, <argument pos:start="169:63" pos:end="169:64"><expr pos:start="169:63" pos:end="169:64"><name pos:start="169:63" pos:end="169:64">bS</name></expr></argument>, <argument pos:start="169:67" pos:end="169:68"><expr pos:start="169:67" pos:end="169:68"><name pos:start="169:67" pos:end="169:68">qp</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="171:17" pos:end="181:17"><if pos:start="171:17" pos:end="181:17">if<condition pos:start="171:19" pos:end="171:35">( <expr pos:start="171:21" pos:end="171:33"><operator pos:start="171:21" pos:end="171:21">(</operator><name pos:start="171:22" pos:end="171:25">edge</name><operator pos:start="171:26" pos:end="171:26">&amp;</operator><literal type="number" pos:start="171:27" pos:end="171:27">1</literal><operator pos:start="171:28" pos:end="171:28">)</operator> <operator pos:start="171:30" pos:end="171:31">==</operator> <literal type="number" pos:start="171:33" pos:end="171:33">0</literal></expr> )</condition> <block pos:start="171:37" pos:end="181:17">{<block_content pos:start="173:21" pos:end="179:86">

                    <decl_stmt pos:start="173:21" pos:end="175:109"><decl pos:start="173:21" pos:end="175:108"><type pos:start="173:21" pos:end="173:23"><name pos:start="173:21" pos:end="173:23">int</name></type> <name pos:start="173:25" pos:end="173:33">chroma_qp</name> <init pos:start="173:35" pos:end="175:108">= <expr pos:start="173:37" pos:end="175:108"><operator pos:start="173:37" pos:end="173:37">(</operator> <call pos:start="173:39" pos:end="173:96"><name pos:start="173:39" pos:end="173:51">get_chroma_qp</name><argument_list pos:start="173:52" pos:end="173:96">( <argument pos:start="173:54" pos:end="173:54"><expr pos:start="173:54" pos:end="173:54"><name pos:start="173:54" pos:end="173:54">h</name></expr></argument>, <argument pos:start="173:57" pos:end="173:94"><expr pos:start="173:57" pos:end="173:94"><name pos:start="173:57" pos:end="173:94"><name pos:start="173:57" pos:end="173:57">s</name><operator pos:start="173:58" pos:end="173:59">-&gt;</operator><name pos:start="173:60" pos:end="173:74">current_picture</name><operator pos:start="173:75" pos:end="173:75">.</operator><name pos:start="173:76" pos:end="173:87">qscale_table</name><index pos:start="173:88" pos:end="173:94">[<expr pos:start="173:89" pos:end="173:93"><name pos:start="173:89" pos:end="173:93">mb_xy</name></expr>]</index></name></expr></argument> )</argument_list></call> <operator pos:start="173:98" pos:end="173:98">+</operator>

                                      <call pos:start="175:39" pos:end="175:97"><name pos:start="175:39" pos:end="175:51">get_chroma_qp</name><argument_list pos:start="175:52" pos:end="175:97">( <argument pos:start="175:54" pos:end="175:54"><expr pos:start="175:54" pos:end="175:54"><name pos:start="175:54" pos:end="175:54">h</name></expr></argument>, <argument pos:start="175:57" pos:end="175:95"><expr pos:start="175:57" pos:end="175:95"><name pos:start="175:57" pos:end="175:95"><name pos:start="175:57" pos:end="175:57">s</name><operator pos:start="175:58" pos:end="175:59">-&gt;</operator><name pos:start="175:60" pos:end="175:74">current_picture</name><operator pos:start="175:75" pos:end="175:75">.</operator><name pos:start="175:76" pos:end="175:87">qscale_table</name><index pos:start="175:88" pos:end="175:95">[<expr pos:start="175:89" pos:end="175:94"><name pos:start="175:89" pos:end="175:94">mbn_xy</name></expr>]</index></name></expr></argument> )</argument_list></call> <operator pos:start="175:99" pos:end="175:99">+</operator> <literal type="number" pos:start="175:101" pos:end="175:101">1</literal> <operator pos:start="175:103" pos:end="175:103">)</operator> <operator pos:start="175:105" pos:end="175:106">&gt;&gt;</operator> <literal type="number" pos:start="175:108" pos:end="175:108">1</literal></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="177:21" pos:end="177:86"><expr pos:start="177:21" pos:end="177:85"><call pos:start="177:21" pos:end="177:85"><name pos:start="177:21" pos:end="177:36">filter_mb_edgecv</name><argument_list pos:start="177:37" pos:end="177:85">( <argument pos:start="177:39" pos:end="177:39"><expr pos:start="177:39" pos:end="177:39"><name pos:start="177:39" pos:end="177:39">h</name></expr></argument>, <argument pos:start="177:42" pos:end="177:56"><expr pos:start="177:42" pos:end="177:56"><operator pos:start="177:42" pos:end="177:42">&amp;</operator><name pos:start="177:43" pos:end="177:56"><name pos:start="177:43" pos:end="177:48">img_cb</name><index pos:start="177:49" pos:end="177:56">[<expr pos:start="177:50" pos:end="177:55"><literal type="number" pos:start="177:50" pos:end="177:50">2</literal><operator pos:start="177:51" pos:end="177:51">*</operator><name pos:start="177:52" pos:end="177:55">edge</name></expr>]</index></name></expr></argument>, <argument pos:start="177:59" pos:end="177:68"><expr pos:start="177:59" pos:end="177:68"><name pos:start="177:59" pos:end="177:68">uvlinesize</name></expr></argument>, <argument pos:start="177:71" pos:end="177:72"><expr pos:start="177:71" pos:end="177:72"><name pos:start="177:71" pos:end="177:72">bS</name></expr></argument>, <argument pos:start="177:75" pos:end="177:83"><expr pos:start="177:75" pos:end="177:83"><name pos:start="177:75" pos:end="177:83">chroma_qp</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="179:21" pos:end="179:86"><expr pos:start="179:21" pos:end="179:85"><call pos:start="179:21" pos:end="179:85"><name pos:start="179:21" pos:end="179:36">filter_mb_edgecv</name><argument_list pos:start="179:37" pos:end="179:85">( <argument pos:start="179:39" pos:end="179:39"><expr pos:start="179:39" pos:end="179:39"><name pos:start="179:39" pos:end="179:39">h</name></expr></argument>, <argument pos:start="179:42" pos:end="179:56"><expr pos:start="179:42" pos:end="179:56"><operator pos:start="179:42" pos:end="179:42">&amp;</operator><name pos:start="179:43" pos:end="179:56"><name pos:start="179:43" pos:end="179:48">img_cr</name><index pos:start="179:49" pos:end="179:56">[<expr pos:start="179:50" pos:end="179:55"><literal type="number" pos:start="179:50" pos:end="179:50">2</literal><operator pos:start="179:51" pos:end="179:51">*</operator><name pos:start="179:52" pos:end="179:55">edge</name></expr>]</index></name></expr></argument>, <argument pos:start="179:59" pos:end="179:68"><expr pos:start="179:59" pos:end="179:68"><name pos:start="179:59" pos:end="179:68">uvlinesize</name></expr></argument>, <argument pos:start="179:71" pos:end="179:72"><expr pos:start="179:71" pos:end="179:72"><name pos:start="179:71" pos:end="179:72">bS</name></expr></argument>, <argument pos:start="179:75" pos:end="179:83"><expr pos:start="179:75" pos:end="179:83"><name pos:start="179:75" pos:end="179:83">chroma_qp</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="183:15" pos:end="199:13">else <block pos:start="183:20" pos:end="199:13">{<block_content pos:start="185:17" pos:end="197:17">

                <expr_stmt pos:start="185:17" pos:end="185:80"><expr pos:start="185:17" pos:end="185:79"><call pos:start="185:17" pos:end="185:79"><name pos:start="185:17" pos:end="185:31">filter_mb_edgeh</name><argument_list pos:start="185:32" pos:end="185:79">( <argument pos:start="185:34" pos:end="185:34"><expr pos:start="185:34" pos:end="185:34"><name pos:start="185:34" pos:end="185:34">h</name></expr></argument>, <argument pos:start="185:37" pos:end="185:59"><expr pos:start="185:37" pos:end="185:59"><operator pos:start="185:37" pos:end="185:37">&amp;</operator><name pos:start="185:38" pos:end="185:59"><name pos:start="185:38" pos:end="185:42">img_y</name><index pos:start="185:43" pos:end="185:59">[<expr pos:start="185:44" pos:end="185:58"><literal type="number" pos:start="185:44" pos:end="185:44">4</literal><operator pos:start="185:45" pos:end="185:45">*</operator><name pos:start="185:46" pos:end="185:49">edge</name><operator pos:start="185:50" pos:end="185:50">*</operator><name pos:start="185:51" pos:end="185:58">linesize</name></expr>]</index></name></expr></argument>, <argument pos:start="185:62" pos:end="185:69"><expr pos:start="185:62" pos:end="185:69"><name pos:start="185:62" pos:end="185:69">linesize</name></expr></argument>, <argument pos:start="185:72" pos:end="185:73"><expr pos:start="185:72" pos:end="185:73"><name pos:start="185:72" pos:end="185:73">bS</name></expr></argument>, <argument pos:start="185:76" pos:end="185:77"><expr pos:start="185:76" pos:end="185:77"><name pos:start="185:76" pos:end="185:77">qp</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="187:17" pos:end="197:17"><if pos:start="187:17" pos:end="197:17">if<condition pos:start="187:19" pos:end="187:35">( <expr pos:start="187:21" pos:end="187:33"><operator pos:start="187:21" pos:end="187:21">(</operator><name pos:start="187:22" pos:end="187:25">edge</name><operator pos:start="187:26" pos:end="187:26">&amp;</operator><literal type="number" pos:start="187:27" pos:end="187:27">1</literal><operator pos:start="187:28" pos:end="187:28">)</operator> <operator pos:start="187:30" pos:end="187:31">==</operator> <literal type="number" pos:start="187:33" pos:end="187:33">0</literal></expr> )</condition> <block pos:start="187:37" pos:end="197:17">{<block_content pos:start="189:21" pos:end="195:97">

                    <decl_stmt pos:start="189:21" pos:end="191:109"><decl pos:start="189:21" pos:end="191:108"><type pos:start="189:21" pos:end="189:23"><name pos:start="189:21" pos:end="189:23">int</name></type> <name pos:start="189:25" pos:end="189:33">chroma_qp</name> <init pos:start="189:35" pos:end="191:108">= <expr pos:start="189:37" pos:end="191:108"><operator pos:start="189:37" pos:end="189:37">(</operator> <call pos:start="189:39" pos:end="189:96"><name pos:start="189:39" pos:end="189:51">get_chroma_qp</name><argument_list pos:start="189:52" pos:end="189:96">( <argument pos:start="189:54" pos:end="189:54"><expr pos:start="189:54" pos:end="189:54"><name pos:start="189:54" pos:end="189:54">h</name></expr></argument>, <argument pos:start="189:57" pos:end="189:94"><expr pos:start="189:57" pos:end="189:94"><name pos:start="189:57" pos:end="189:94"><name pos:start="189:57" pos:end="189:57">s</name><operator pos:start="189:58" pos:end="189:59">-&gt;</operator><name pos:start="189:60" pos:end="189:74">current_picture</name><operator pos:start="189:75" pos:end="189:75">.</operator><name pos:start="189:76" pos:end="189:87">qscale_table</name><index pos:start="189:88" pos:end="189:94">[<expr pos:start="189:89" pos:end="189:93"><name pos:start="189:89" pos:end="189:93">mb_xy</name></expr>]</index></name></expr></argument> )</argument_list></call> <operator pos:start="189:98" pos:end="189:98">+</operator>

                                      <call pos:start="191:39" pos:end="191:97"><name pos:start="191:39" pos:end="191:51">get_chroma_qp</name><argument_list pos:start="191:52" pos:end="191:97">( <argument pos:start="191:54" pos:end="191:54"><expr pos:start="191:54" pos:end="191:54"><name pos:start="191:54" pos:end="191:54">h</name></expr></argument>, <argument pos:start="191:57" pos:end="191:95"><expr pos:start="191:57" pos:end="191:95"><name pos:start="191:57" pos:end="191:95"><name pos:start="191:57" pos:end="191:57">s</name><operator pos:start="191:58" pos:end="191:59">-&gt;</operator><name pos:start="191:60" pos:end="191:74">current_picture</name><operator pos:start="191:75" pos:end="191:75">.</operator><name pos:start="191:76" pos:end="191:87">qscale_table</name><index pos:start="191:88" pos:end="191:95">[<expr pos:start="191:89" pos:end="191:94"><name pos:start="191:89" pos:end="191:94">mbn_xy</name></expr>]</index></name></expr></argument> )</argument_list></call> <operator pos:start="191:99" pos:end="191:99">+</operator> <literal type="number" pos:start="191:101" pos:end="191:101">1</literal> <operator pos:start="191:103" pos:end="191:103">)</operator> <operator pos:start="191:105" pos:end="191:106">&gt;&gt;</operator> <literal type="number" pos:start="191:108" pos:end="191:108">1</literal></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="193:21" pos:end="193:97"><expr pos:start="193:21" pos:end="193:96"><call pos:start="193:21" pos:end="193:96"><name pos:start="193:21" pos:end="193:36">filter_mb_edgech</name><argument_list pos:start="193:37" pos:end="193:96">( <argument pos:start="193:39" pos:end="193:39"><expr pos:start="193:39" pos:end="193:39"><name pos:start="193:39" pos:end="193:39">h</name></expr></argument>, <argument pos:start="193:42" pos:end="193:67"><expr pos:start="193:42" pos:end="193:67"><operator pos:start="193:42" pos:end="193:42">&amp;</operator><name pos:start="193:43" pos:end="193:67"><name pos:start="193:43" pos:end="193:48">img_cb</name><index pos:start="193:49" pos:end="193:67">[<expr pos:start="193:50" pos:end="193:66"><literal type="number" pos:start="193:50" pos:end="193:50">2</literal><operator pos:start="193:51" pos:end="193:51">*</operator><name pos:start="193:52" pos:end="193:55">edge</name><operator pos:start="193:56" pos:end="193:56">*</operator><name pos:start="193:57" pos:end="193:66">uvlinesize</name></expr>]</index></name></expr></argument>, <argument pos:start="193:70" pos:end="193:79"><expr pos:start="193:70" pos:end="193:79"><name pos:start="193:70" pos:end="193:79">uvlinesize</name></expr></argument>, <argument pos:start="193:82" pos:end="193:83"><expr pos:start="193:82" pos:end="193:83"><name pos:start="193:82" pos:end="193:83">bS</name></expr></argument>, <argument pos:start="193:86" pos:end="193:94"><expr pos:start="193:86" pos:end="193:94"><name pos:start="193:86" pos:end="193:94">chroma_qp</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="195:21" pos:end="195:97"><expr pos:start="195:21" pos:end="195:96"><call pos:start="195:21" pos:end="195:96"><name pos:start="195:21" pos:end="195:36">filter_mb_edgech</name><argument_list pos:start="195:37" pos:end="195:96">( <argument pos:start="195:39" pos:end="195:39"><expr pos:start="195:39" pos:end="195:39"><name pos:start="195:39" pos:end="195:39">h</name></expr></argument>, <argument pos:start="195:42" pos:end="195:67"><expr pos:start="195:42" pos:end="195:67"><operator pos:start="195:42" pos:end="195:42">&amp;</operator><name pos:start="195:43" pos:end="195:67"><name pos:start="195:43" pos:end="195:48">img_cr</name><index pos:start="195:49" pos:end="195:67">[<expr pos:start="195:50" pos:end="195:66"><literal type="number" pos:start="195:50" pos:end="195:50">2</literal><operator pos:start="195:51" pos:end="195:51">*</operator><name pos:start="195:52" pos:end="195:55">edge</name><operator pos:start="195:56" pos:end="195:56">*</operator><name pos:start="195:57" pos:end="195:66">uvlinesize</name></expr>]</index></name></expr></argument>, <argument pos:start="195:70" pos:end="195:79"><expr pos:start="195:70" pos:end="195:79"><name pos:start="195:70" pos:end="195:79">uvlinesize</name></expr></argument>, <argument pos:start="195:82" pos:end="195:83"><expr pos:start="195:82" pos:end="195:83"><name pos:start="195:82" pos:end="195:83">bS</name></expr></argument>, <argument pos:start="195:86" pos:end="195:94"><expr pos:start="195:86" pos:end="195:94"><name pos:start="195:86" pos:end="195:94">chroma_qp</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
