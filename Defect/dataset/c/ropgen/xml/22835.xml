<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22835.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:44"><name pos:start="1:1" pos:end="1:13">vorbis_header</name> <argument_list pos:start="1:15" pos:end="1:44">(<argument pos:start="1:16" pos:end="1:34">AVFormatContext * s</argument>, <argument pos:start="1:37" pos:end="1:43">int idx</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="81:1">{<block_content pos:start="5:5" pos:end="79:23">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:9">ogg_t</name> <modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:14">ogg</name> <init pos:start="5:16" pos:end="5:29">= <expr pos:start="5:18" pos:end="5:29"><name pos:start="5:18" pos:end="5:29"><name pos:start="5:18" pos:end="5:18">s</name><operator pos:start="5:19" pos:end="5:20">-&gt;</operator><name pos:start="5:21" pos:end="5:29">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">ogg_stream_t</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:20">os</name> <init pos:start="7:22" pos:end="7:41">= <expr pos:start="7:24" pos:end="7:41"><name pos:start="7:24" pos:end="7:35"><name pos:start="7:24" pos:end="7:26">ogg</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:35">streams</name></name> <operator pos:start="7:37" pos:end="7:37">+</operator> <name pos:start="7:39" pos:end="7:41">idx</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name> <init pos:start="9:18" pos:end="9:34">= <expr pos:start="9:20" pos:end="9:34"><name pos:start="9:20" pos:end="9:34"><name pos:start="9:20" pos:end="9:20">s</name><operator pos:start="9:21" pos:end="9:22">-&gt;</operator><name pos:start="9:23" pos:end="9:29">streams</name><index pos:start="9:30" pos:end="9:34">[<expr pos:start="9:31" pos:end="9:33"><name pos:start="9:31" pos:end="9:33">idx</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:25"><name pos:start="11:5" pos:end="11:23">oggvorbis_private_t</name> <modifier pos:start="11:25" pos:end="11:25">*</modifier></type><name pos:start="11:26" pos:end="11:29">priv</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:17"><if pos:start="15:5" pos:end="17:17">if <condition pos:start="15:8" pos:end="15:20">(<expr pos:start="15:9" pos:end="15:19"><name pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:10">os</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:15">seq</name></name> <operator pos:start="15:17" pos:end="15:17">&gt;</operator> <literal type="number" pos:start="15:19" pos:end="15:19">2</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:17"><block_content pos:start="17:9" pos:end="17:17">

        <return pos:start="17:9" pos:end="17:17">return <expr pos:start="17:16" pos:end="17:16"><literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="29:5">if <condition pos:start="21:8" pos:end="21:21">(<expr pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:10">os</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:15">seq</name></name> <operator pos:start="21:17" pos:end="21:18">==</operator> <literal type="number" pos:start="21:20" pos:end="21:20">0</literal></expr>)</condition> <block pos:start="21:23" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:21">

        <expr_stmt pos:start="23:9" pos:end="23:62"><expr pos:start="23:9" pos:end="23:61"><name pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:10">os</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:19">private</name></name> <operator pos:start="23:21" pos:end="23:21">=</operator> <call pos:start="23:23" pos:end="23:61"><name pos:start="23:23" pos:end="23:32">av_mallocz</name><argument_list pos:start="23:33" pos:end="23:61">(<argument pos:start="23:34" pos:end="23:60"><expr pos:start="23:34" pos:end="23:60"><sizeof pos:start="23:34" pos:end="23:60">sizeof<argument_list pos:start="23:40" pos:end="23:60">(<argument pos:start="23:41" pos:end="23:59"><expr pos:start="23:41" pos:end="23:59"><name pos:start="23:41" pos:end="23:59">oggvorbis_private_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="27:21"><if pos:start="25:9" pos:end="27:21">if <condition pos:start="25:12" pos:end="25:25">(<expr pos:start="25:13" pos:end="25:24"><operator pos:start="25:13" pos:end="25:13">!</operator><name pos:start="25:14" pos:end="25:24"><name pos:start="25:14" pos:end="25:15">os</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:24">private</name></name></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:21"><block_content pos:start="27:13" pos:end="27:21">

            <return pos:start="27:13" pos:end="27:21">return <expr pos:start="27:20" pos:end="27:20"><literal type="number" pos:start="27:20" pos:end="27:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:23"><expr pos:start="33:5" pos:end="33:22"><name pos:start="33:5" pos:end="33:8">priv</name> <operator pos:start="33:10" pos:end="33:10">=</operator> <name pos:start="33:12" pos:end="33:22"><name pos:start="33:12" pos:end="33:13">os</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:22">private</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:35"><expr pos:start="35:5" pos:end="35:34"><name pos:start="35:5" pos:end="35:22"><name pos:start="35:5" pos:end="35:8">priv</name><operator pos:start="35:9" pos:end="35:10">-&gt;</operator><name pos:start="35:11" pos:end="35:13">len</name><index pos:start="35:14" pos:end="35:22">[<expr pos:start="35:15" pos:end="35:21"><name pos:start="35:15" pos:end="35:21"><name pos:start="35:15" pos:end="35:16">os</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:21">seq</name></name></expr>]</index></name> <operator pos:start="35:24" pos:end="35:24">=</operator> <name pos:start="35:26" pos:end="35:34"><name pos:start="35:26" pos:end="35:27">os</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:34">psize</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:50"><expr pos:start="37:5" pos:end="37:49"><name pos:start="37:5" pos:end="37:25"><name pos:start="37:5" pos:end="37:8">priv</name><operator pos:start="37:9" pos:end="37:10">-&gt;</operator><name pos:start="37:11" pos:end="37:16">packet</name><index pos:start="37:17" pos:end="37:25">[<expr pos:start="37:18" pos:end="37:24"><name pos:start="37:18" pos:end="37:24"><name pos:start="37:18" pos:end="37:19">os</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:24">seq</name></name></expr>]</index></name> <operator pos:start="37:27" pos:end="37:27">=</operator> <call pos:start="37:29" pos:end="37:49"><name pos:start="37:29" pos:end="37:38">av_mallocz</name><argument_list pos:start="37:39" pos:end="37:49">(<argument pos:start="37:40" pos:end="37:48"><expr pos:start="37:40" pos:end="37:48"><name pos:start="37:40" pos:end="37:48"><name pos:start="37:40" pos:end="37:41">os</name><operator pos:start="37:42" pos:end="37:43">-&gt;</operator><name pos:start="37:44" pos:end="37:48">psize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:67"><expr pos:start="39:5" pos:end="39:66"><call pos:start="39:5" pos:end="39:66"><name pos:start="39:5" pos:end="39:10">memcpy</name><argument_list pos:start="39:11" pos:end="39:66">(<argument pos:start="39:12" pos:end="39:32"><expr pos:start="39:12" pos:end="39:32"><name pos:start="39:12" pos:end="39:32"><name pos:start="39:12" pos:end="39:15">priv</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:23">packet</name><index pos:start="39:24" pos:end="39:32">[<expr pos:start="39:25" pos:end="39:31"><name pos:start="39:25" pos:end="39:31"><name pos:start="39:25" pos:end="39:26">os</name><operator pos:start="39:27" pos:end="39:28">-&gt;</operator><name pos:start="39:29" pos:end="39:31">seq</name></name></expr>]</index></name></expr></argument>, <argument pos:start="39:35" pos:end="39:54"><expr pos:start="39:35" pos:end="39:54"><name pos:start="39:35" pos:end="39:41"><name pos:start="39:35" pos:end="39:36">os</name><operator pos:start="39:37" pos:end="39:38">-&gt;</operator><name pos:start="39:39" pos:end="39:41">buf</name></name> <operator pos:start="39:43" pos:end="39:43">+</operator> <name pos:start="39:45" pos:end="39:54"><name pos:start="39:45" pos:end="39:46">os</name><operator pos:start="39:47" pos:end="39:48">-&gt;</operator><name pos:start="39:49" pos:end="39:54">pstart</name></name></expr></argument>, <argument pos:start="39:57" pos:end="39:65"><expr pos:start="39:57" pos:end="39:65"><name pos:start="39:57" pos:end="39:65"><name pos:start="39:57" pos:end="39:58">os</name><operator pos:start="39:59" pos:end="39:60">-&gt;</operator><name pos:start="39:61" pos:end="39:65">psize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="75:5"><if pos:start="41:5" pos:end="65:5">if <condition pos:start="41:8" pos:end="41:33">(<expr pos:start="41:9" pos:end="41:32"><name pos:start="41:9" pos:end="41:27"><name pos:start="41:9" pos:end="41:10">os</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:15">buf</name><index pos:start="41:16" pos:end="41:27">[<expr pos:start="41:17" pos:end="41:26"><name pos:start="41:17" pos:end="41:26"><name pos:start="41:17" pos:end="41:18">os</name><operator pos:start="41:19" pos:end="41:20">-&gt;</operator><name pos:start="41:21" pos:end="41:26">pstart</name></name></expr>]</index></name> <operator pos:start="41:29" pos:end="41:30">==</operator> <literal type="number" pos:start="41:32" pos:end="41:32">1</literal></expr>)</condition> <block pos:start="41:35" pos:end="65:5">{<block_content pos:start="43:9" pos:end="63:51">

        <decl_stmt pos:start="43:9" pos:end="43:47"><decl pos:start="43:9" pos:end="43:46"><type pos:start="43:9" pos:end="43:17"><name pos:start="43:9" pos:end="43:15">uint8_t</name> <modifier pos:start="43:17" pos:end="43:17">*</modifier></type><name pos:start="43:18" pos:end="43:18">p</name> <init pos:start="43:20" pos:end="43:46">= <expr pos:start="43:22" pos:end="43:46"><name pos:start="43:22" pos:end="43:28"><name pos:start="43:22" pos:end="43:23">os</name><operator pos:start="43:24" pos:end="43:25">-&gt;</operator><name pos:start="43:26" pos:end="43:28">buf</name></name> <operator pos:start="43:30" pos:end="43:30">+</operator> <name pos:start="43:32" pos:end="43:41"><name pos:start="43:32" pos:end="43:33">os</name><operator pos:start="43:34" pos:end="43:35">-&gt;</operator><name pos:start="43:36" pos:end="43:41">pstart</name></name> <operator pos:start="43:43" pos:end="43:43">+</operator> <literal type="number" pos:start="43:45" pos:end="43:46">11</literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="43:49" pos:end="43:79">//skip up to the audio channels</comment>

        <expr_stmt pos:start="45:9" pos:end="45:35"><expr pos:start="45:9" pos:end="45:34"><name pos:start="45:9" pos:end="45:27"><name pos:start="45:9" pos:end="45:10">st</name><operator pos:start="45:11" pos:end="45:12">-&gt;</operator><name pos:start="45:13" pos:end="45:17">codec</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:27">channels</name></name> <operator pos:start="45:29" pos:end="45:29">=</operator> <operator pos:start="45:31" pos:end="45:31">*</operator><name pos:start="45:32" pos:end="45:32">p</name><operator pos:start="45:33" pos:end="45:34">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:44"><expr pos:start="47:9" pos:end="47:43"><name pos:start="47:9" pos:end="47:30"><name pos:start="47:9" pos:end="47:10">st</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:17">codec</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:30">sample_rate</name></name> <operator pos:start="47:32" pos:end="47:32">=</operator> <call pos:start="47:34" pos:end="47:43"><name pos:start="47:34" pos:end="47:40">AV_RL32</name><argument_list pos:start="47:41" pos:end="47:43">(<argument pos:start="47:42" pos:end="47:42"><expr pos:start="47:42" pos:end="47:42"><name pos:start="47:42" pos:end="47:42">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:15"><expr pos:start="49:9" pos:end="49:14"><name pos:start="49:9" pos:end="49:9">p</name> <operator pos:start="49:11" pos:end="49:12">+=</operator> <literal type="number" pos:start="49:14" pos:end="49:14">8</literal></expr>;</expr_stmt> <comment type="line" pos:start="49:17" pos:end="49:54">//skip maximum and and nominal bitrate</comment>

        <expr_stmt pos:start="51:9" pos:end="51:41"><expr pos:start="51:9" pos:end="51:40"><name pos:start="51:9" pos:end="51:27"><name pos:start="51:9" pos:end="51:10">st</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:17">codec</name><operator pos:start="51:18" pos:end="51:19">-&gt;</operator><name pos:start="51:20" pos:end="51:27">bit_rate</name></name> <operator pos:start="51:29" pos:end="51:29">=</operator> <call pos:start="51:31" pos:end="51:40"><name pos:start="51:31" pos:end="51:37">AV_RL32</name><argument_list pos:start="51:38" pos:end="51:40">(<argument pos:start="51:39" pos:end="51:39"><expr pos:start="51:39" pos:end="51:39"><name pos:start="51:39" pos:end="51:39">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="51:43" pos:end="51:59">//Minimum bitrate</comment>



        <expr_stmt pos:start="55:9" pos:end="55:49"><expr pos:start="55:9" pos:end="55:48"><name pos:start="55:9" pos:end="55:29"><name pos:start="55:9" pos:end="55:10">st</name><operator pos:start="55:11" pos:end="55:12">-&gt;</operator><name pos:start="55:13" pos:end="55:17">codec</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:29">codec_type</name></name> <operator pos:start="55:31" pos:end="55:31">=</operator> <name pos:start="55:33" pos:end="55:48">CODEC_TYPE_AUDIO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:46"><expr pos:start="57:9" pos:end="57:45"><name pos:start="57:9" pos:end="57:27"><name pos:start="57:9" pos:end="57:10">st</name><operator pos:start="57:11" pos:end="57:12">-&gt;</operator><name pos:start="57:13" pos:end="57:17">codec</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:27">codec_id</name></name> <operator pos:start="57:29" pos:end="57:29">=</operator> <name pos:start="57:31" pos:end="57:45">CODEC_ID_VORBIS</name></expr>;</expr_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:30"><expr pos:start="61:9" pos:end="61:29"><name pos:start="61:9" pos:end="61:25"><name pos:start="61:9" pos:end="61:10">st</name><operator pos:start="61:11" pos:end="61:12">-&gt;</operator><name pos:start="61:13" pos:end="61:21">time_base</name><operator pos:start="61:22" pos:end="61:22">.</operator><name pos:start="61:23" pos:end="61:25">num</name></name> <operator pos:start="61:27" pos:end="61:27">=</operator> <literal type="number" pos:start="61:29" pos:end="61:29">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:51"><expr pos:start="63:9" pos:end="63:50"><name pos:start="63:9" pos:end="63:25"><name pos:start="63:9" pos:end="63:10">st</name><operator pos:start="63:11" pos:end="63:12">-&gt;</operator><name pos:start="63:13" pos:end="63:21">time_base</name><operator pos:start="63:22" pos:end="63:22">.</operator><name pos:start="63:23" pos:end="63:25">den</name></name> <operator pos:start="63:27" pos:end="63:27">=</operator> <name pos:start="63:29" pos:end="63:50"><name pos:start="63:29" pos:end="63:30">st</name><operator pos:start="63:31" pos:end="63:32">-&gt;</operator><name pos:start="63:33" pos:end="63:37">codec</name><operator pos:start="63:38" pos:end="63:39">-&gt;</operator><name pos:start="63:40" pos:end="63:50">sample_rate</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="65:7" pos:end="69:5">else if <condition pos:start="65:15" pos:end="65:40">(<expr pos:start="65:16" pos:end="65:39"><name pos:start="65:16" pos:end="65:34"><name pos:start="65:16" pos:end="65:17">os</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:22">buf</name><index pos:start="65:23" pos:end="65:34">[<expr pos:start="65:24" pos:end="65:33"><name pos:start="65:24" pos:end="65:33"><name pos:start="65:24" pos:end="65:25">os</name><operator pos:start="65:26" pos:end="65:27">-&gt;</operator><name pos:start="65:28" pos:end="65:33">pstart</name></name></expr>]</index></name> <operator pos:start="65:36" pos:end="65:37">==</operator> <literal type="number" pos:start="65:39" pos:end="65:39">3</literal></expr>)</condition> <block pos:start="65:42" pos:end="69:5">{<block_content pos:start="67:9" pos:end="67:68">

        <expr_stmt pos:start="67:9" pos:end="67:68"><expr pos:start="67:9" pos:end="67:67"><call pos:start="67:9" pos:end="67:67"><name pos:start="67:9" pos:end="67:22">vorbis_comment</name> <argument_list pos:start="67:24" pos:end="67:67">(<argument pos:start="67:25" pos:end="67:25"><expr pos:start="67:25" pos:end="67:25"><name pos:start="67:25" pos:end="67:25">s</name></expr></argument>, <argument pos:start="67:28" pos:end="67:51"><expr pos:start="67:28" pos:end="67:51"><name pos:start="67:28" pos:end="67:34"><name pos:start="67:28" pos:end="67:29">os</name><operator pos:start="67:30" pos:end="67:31">-&gt;</operator><name pos:start="67:32" pos:end="67:34">buf</name></name> <operator pos:start="67:36" pos:end="67:36">+</operator> <name pos:start="67:38" pos:end="67:47"><name pos:start="67:38" pos:end="67:39">os</name><operator pos:start="67:40" pos:end="67:41">-&gt;</operator><name pos:start="67:42" pos:end="67:47">pstart</name></name> <operator pos:start="67:49" pos:end="67:49">+</operator> <literal type="number" pos:start="67:51" pos:end="67:51">7</literal></expr></argument>, <argument pos:start="67:54" pos:end="67:66"><expr pos:start="67:54" pos:end="67:66"><name pos:start="67:54" pos:end="67:62"><name pos:start="67:54" pos:end="67:55">os</name><operator pos:start="67:56" pos:end="67:57">-&gt;</operator><name pos:start="67:58" pos:end="67:62">psize</name></name> <operator pos:start="67:64" pos:end="67:64">-</operator> <literal type="number" pos:start="67:66" pos:end="67:66">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="69:7" pos:end="75:5">else <block pos:start="69:12" pos:end="75:5">{<block_content pos:start="71:9" pos:end="73:65">

        <expr_stmt pos:start="71:9" pos:end="73:65"><expr pos:start="71:9" pos:end="73:64"><name pos:start="71:9" pos:end="71:33"><name pos:start="71:9" pos:end="71:10">st</name><operator pos:start="71:11" pos:end="71:12">-&gt;</operator><name pos:start="71:13" pos:end="71:17">codec</name><operator pos:start="71:18" pos:end="71:19">-&gt;</operator><name pos:start="71:20" pos:end="71:33">extradata_size</name></name> <operator pos:start="71:35" pos:end="71:35">=</operator>

            <call pos:start="73:13" pos:end="73:64"><name pos:start="73:13" pos:end="73:32">fixup_vorbis_headers</name><argument_list pos:start="73:33" pos:end="73:64">(<argument pos:start="73:34" pos:end="73:34"><expr pos:start="73:34" pos:end="73:34"><name pos:start="73:34" pos:end="73:34">s</name></expr></argument>, <argument pos:start="73:37" pos:end="73:40"><expr pos:start="73:37" pos:end="73:40"><name pos:start="73:37" pos:end="73:40">priv</name></expr></argument>, <argument pos:start="73:43" pos:end="73:63"><expr pos:start="73:43" pos:end="73:63"><operator pos:start="73:43" pos:end="73:43">&amp;</operator><name pos:start="73:44" pos:end="73:63"><name pos:start="73:44" pos:end="73:45">st</name><operator pos:start="73:46" pos:end="73:47">-&gt;</operator><name pos:start="73:48" pos:end="73:52">codec</name><operator pos:start="73:53" pos:end="73:54">-&gt;</operator><name pos:start="73:55" pos:end="73:63">extradata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="79:5" pos:end="79:23">return <expr pos:start="79:12" pos:end="79:22"><name pos:start="79:12" pos:end="79:18"><name pos:start="79:12" pos:end="79:13">os</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:18">seq</name></name> <operator pos:start="79:20" pos:end="79:20">&lt;</operator> <literal type="number" pos:start="79:22" pos:end="79:22">3</literal></expr>;</return>

</block_content>}</block>
</unit>
