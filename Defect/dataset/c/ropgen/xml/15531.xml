<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15531.c" pos:tabs="8"><function pos:start="1:1" pos:end="259:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">mp3_parse_info_tag</name><parameter_list pos:start="1:31" pos:end="3:64">(<parameter pos:start="1:32" pos:end="1:49"><decl pos:start="1:32" pos:end="1:49"><type pos:start="1:32" pos:end="1:49"><name pos:start="1:32" pos:end="1:46">AVFormatContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:63"><decl pos:start="1:52" pos:end="1:63"><type pos:start="1:52" pos:end="1:63"><name pos:start="1:52" pos:end="1:59">AVStream</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:63">st</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:49"><decl pos:start="3:32" pos:end="3:49"><type pos:start="3:32" pos:end="3:49"><name pos:start="3:32" pos:end="3:46">MPADecodeHeader</name> <modifier pos:start="3:48" pos:end="3:48">*</modifier></type><name pos:start="3:49" pos:end="3:49">c</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:63"><decl pos:start="3:52" pos:end="3:63"><type pos:start="3:52" pos:end="3:63"><name pos:start="3:52" pos:end="3:59">uint32_t</name></type> <name pos:start="3:61" pos:end="3:63">spf</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="259:1">{<block_content pos:start="13:5" pos:end="257:5">

<cpp:define pos:start="7:1" pos:end="7:48">#<cpp:directive pos:start="7:2" pos:end="7:7">define</cpp:directive> <cpp:macro pos:start="7:9" pos:end="7:23"><name pos:start="7:9" pos:end="7:17">LAST_BITS</name><parameter_list pos:start="7:18" pos:end="7:23">(<parameter pos:start="7:19" pos:end="7:19"><type pos:start="7:19" pos:end="7:19"><name pos:start="7:19" pos:end="7:19">k</name></type></parameter>, <parameter pos:start="7:22" pos:end="7:22"><type pos:start="7:22" pos:end="7:22"><name pos:start="7:22" pos:end="7:22">n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="7:25" pos:end="7:48">((k) &amp; ((1 &lt;&lt; (n)) - 1))</cpp:value></cpp:define>

<cpp:define pos:start="9:1" pos:end="9:63">#<cpp:directive pos:start="9:2" pos:end="9:7">define</cpp:directive> <cpp:macro pos:start="9:9" pos:end="9:28"><name pos:start="9:9" pos:end="9:19">MIDDLE_BITS</name><parameter_list pos:start="9:20" pos:end="9:28">(<parameter pos:start="9:21" pos:end="9:21"><type pos:start="9:21" pos:end="9:21"><name pos:start="9:21" pos:end="9:21">k</name></type></parameter>, <parameter pos:start="9:24" pos:end="9:24"><type pos:start="9:24" pos:end="9:24"><name pos:start="9:24" pos:end="9:24">m</name></type></parameter>, <parameter pos:start="9:27" pos:end="9:27"><type pos:start="9:27" pos:end="9:27"><name pos:start="9:27" pos:end="9:27">n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="9:30" pos:end="9:63">LAST_BITS((k) &gt;&gt; (m), ((n) - (m)))</cpp:value></cpp:define>



    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint16_t</name></type> <name pos:start="13:14" pos:end="13:16">crc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:14">v</name></decl>;</decl_stmt>



    <decl_stmt pos:start="19:5" pos:end="19:21"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:8"><name pos:start="19:5" pos:end="19:8">char</name></type> <name pos:start="19:10" pos:end="19:20"><name pos:start="19:10" pos:end="19:16">version</name><index pos:start="19:17" pos:end="19:20">[<expr pos:start="19:18" pos:end="19:19"><literal type="number" pos:start="19:18" pos:end="19:19">10</literal></expr>]</index></name></decl>;</decl_stmt>



    <decl_stmt pos:start="23:5" pos:end="23:24"><decl pos:start="23:5" pos:end="23:23"><type pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:12">uint32_t</name></type> <name pos:start="23:14" pos:end="23:17">peak</name>   <init pos:start="23:21" pos:end="23:23">= <expr pos:start="23:23" pos:end="23:23"><literal type="number" pos:start="23:23" pos:end="23:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:52"><decl pos:start="25:5" pos:end="25:31"><type pos:start="25:5" pos:end="25:11"><name pos:start="25:5" pos:end="25:11">int32_t</name></type>  <name pos:start="25:14" pos:end="25:19">r_gain</name> <init pos:start="25:21" pos:end="25:31">= <expr pos:start="25:23" pos:end="25:31"><name pos:start="25:23" pos:end="25:31">INT32_MIN</name></expr></init></decl>, <decl pos:start="25:34" pos:end="25:51"><type ref="prev" pos:start="25:5" pos:end="25:11"/><name pos:start="25:34" pos:end="25:39">a_gain</name> <init pos:start="25:41" pos:end="25:51">= <expr pos:start="25:43" pos:end="25:51"><name pos:start="25:43" pos:end="25:51">INT32_MIN</name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="29:5" pos:end="29:38"><decl pos:start="29:5" pos:end="29:37"><type pos:start="29:5" pos:end="29:19"><name pos:start="29:5" pos:end="29:17">MP3DecContext</name> <modifier pos:start="29:19" pos:end="29:19">*</modifier></type><name pos:start="29:20" pos:end="29:22">mp3</name> <init pos:start="29:24" pos:end="29:37">= <expr pos:start="29:26" pos:end="29:37"><name pos:start="29:26" pos:end="29:37"><name pos:start="29:26" pos:end="29:26">s</name><operator pos:start="29:27" pos:end="29:28">-&gt;</operator><name pos:start="29:29" pos:end="29:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:64"><decl pos:start="31:5" pos:end="31:63"><type pos:start="31:5" pos:end="31:24"><specifier pos:start="31:5" pos:end="31:10">static</specifier> <specifier pos:start="31:12" pos:end="31:16">const</specifier> <name pos:start="31:18" pos:end="31:24">int64_t</name></type> <name pos:start="31:26" pos:end="31:42"><name pos:start="31:26" pos:end="31:36">xing_offtbl</name><index pos:start="31:37" pos:end="31:39">[<expr pos:start="31:38" pos:end="31:38"><literal type="number" pos:start="31:38" pos:end="31:38">2</literal></expr>]</index><index pos:start="31:40" pos:end="31:42">[<expr pos:start="31:41" pos:end="31:41"><literal type="number" pos:start="31:41" pos:end="31:41">2</literal></expr>]</index></name> <init pos:start="31:44" pos:end="31:63">= <expr pos:start="31:46" pos:end="31:63"><block pos:start="31:46" pos:end="31:63">{<expr pos:start="31:47" pos:end="31:54"><block pos:start="31:47" pos:end="31:54">{<expr pos:start="31:48" pos:end="31:49"><literal type="number" pos:start="31:48" pos:end="31:49">32</literal></expr>, <expr pos:start="31:52" pos:end="31:53"><literal type="number" pos:start="31:52" pos:end="31:53">17</literal></expr>}</block></expr>, <expr pos:start="31:57" pos:end="31:62"><block pos:start="31:57" pos:end="31:62">{<expr pos:start="31:58" pos:end="31:59"><literal type="number" pos:start="31:58" pos:end="31:59">17</literal></expr>,<expr pos:start="31:61" pos:end="31:61"><literal type="number" pos:start="31:61" pos:end="31:61">9</literal></expr>}</block></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:38"><decl pos:start="33:5" pos:end="33:37"><type pos:start="33:5" pos:end="33:12"><name pos:start="33:5" pos:end="33:12">uint64_t</name></type> <name pos:start="33:14" pos:end="33:18">fsize</name> <init pos:start="33:20" pos:end="33:37">= <expr pos:start="33:22" pos:end="33:37"><call pos:start="33:22" pos:end="33:37"><name pos:start="33:22" pos:end="33:30">avio_size</name><argument_list pos:start="33:31" pos:end="33:37">(<argument pos:start="33:32" pos:end="33:36"><expr pos:start="33:32" pos:end="33:36"><name pos:start="33:32" pos:end="33:36"><name pos:start="33:32" pos:end="33:32">s</name><operator pos:start="33:33" pos:end="33:34">-&gt;</operator><name pos:start="33:35" pos:end="33:36">pb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:35">/* Check for Xing / Info tag */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:68"><expr pos:start="39:5" pos:end="39:67"><call pos:start="39:5" pos:end="39:67"><name pos:start="39:5" pos:end="39:13">avio_skip</name><argument_list pos:start="39:14" pos:end="39:67">(<argument pos:start="39:15" pos:end="39:19"><expr pos:start="39:15" pos:end="39:19"><name pos:start="39:15" pos:end="39:19"><name pos:start="39:15" pos:end="39:15">s</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:19">pb</name></name></expr></argument>, <argument pos:start="39:22" pos:end="39:66"><expr pos:start="39:22" pos:end="39:66"><name pos:start="39:22" pos:end="39:66"><name pos:start="39:22" pos:end="39:32">xing_offtbl</name><index pos:start="39:33" pos:end="39:45">[<expr pos:start="39:34" pos:end="39:44"><name pos:start="39:34" pos:end="39:39"><name pos:start="39:34" pos:end="39:34">c</name><operator pos:start="39:35" pos:end="39:36">-&gt;</operator><name pos:start="39:37" pos:end="39:39">lsf</name></name> <operator pos:start="39:41" pos:end="39:42">==</operator> <literal type="number" pos:start="39:44" pos:end="39:44">1</literal></expr>]</index><index pos:start="39:46" pos:end="39:66">[<expr pos:start="39:47" pos:end="39:65"><name pos:start="39:47" pos:end="39:60"><name pos:start="39:47" pos:end="39:47">c</name><operator pos:start="39:48" pos:end="39:49">-&gt;</operator><name pos:start="39:50" pos:end="39:60">nb_channels</name></name> <operator pos:start="39:62" pos:end="39:63">==</operator> <literal type="number" pos:start="39:65" pos:end="39:65">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:25"><expr pos:start="41:5" pos:end="41:24"><name pos:start="41:5" pos:end="41:5">v</name> <operator pos:start="41:7" pos:end="41:7">=</operator> <call pos:start="41:9" pos:end="41:24"><name pos:start="41:9" pos:end="41:17">avio_rb32</name><argument_list pos:start="41:18" pos:end="41:24">(<argument pos:start="41:19" pos:end="41:23"><expr pos:start="41:19" pos:end="41:23"><name pos:start="41:19" pos:end="41:23"><name pos:start="41:19" pos:end="41:19">s</name><operator pos:start="41:20" pos:end="41:21">-&gt;</operator><name pos:start="41:22" pos:end="41:23">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:51"><expr pos:start="43:5" pos:end="43:50"><name pos:start="43:5" pos:end="43:15"><name pos:start="43:5" pos:end="43:7">mp3</name><operator pos:start="43:8" pos:end="43:9">-&gt;</operator><name pos:start="43:10" pos:end="43:15">is_cbr</name></name> <operator pos:start="43:17" pos:end="43:17">=</operator> <name pos:start="43:19" pos:end="43:19">v</name> <operator pos:start="43:21" pos:end="43:22">==</operator> <call pos:start="43:24" pos:end="43:50"><name pos:start="43:24" pos:end="43:30">MKBETAG</name><argument_list pos:start="43:31" pos:end="43:50">(<argument pos:start="43:32" pos:end="43:34"><expr pos:start="43:32" pos:end="43:34"><literal type="char" pos:start="43:32" pos:end="43:34">'I'</literal></expr></argument>, <argument pos:start="43:37" pos:end="43:39"><expr pos:start="43:37" pos:end="43:39"><literal type="char" pos:start="43:37" pos:end="43:39">'n'</literal></expr></argument>, <argument pos:start="43:42" pos:end="43:44"><expr pos:start="43:42" pos:end="43:44"><literal type="char" pos:start="43:42" pos:end="43:44">'f'</literal></expr></argument>, <argument pos:start="43:47" pos:end="43:49"><expr pos:start="43:47" pos:end="43:49"><literal type="char" pos:start="43:47" pos:end="43:49">'o'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="47:15"><if pos:start="45:5" pos:end="47:15">if <condition pos:start="45:8" pos:end="45:57">(<expr pos:start="45:9" pos:end="45:56"><name pos:start="45:9" pos:end="45:9">v</name> <operator pos:start="45:11" pos:end="45:12">!=</operator> <call pos:start="45:14" pos:end="45:40"><name pos:start="45:14" pos:end="45:20">MKBETAG</name><argument_list pos:start="45:21" pos:end="45:40">(<argument pos:start="45:22" pos:end="45:24"><expr pos:start="45:22" pos:end="45:24"><literal type="char" pos:start="45:22" pos:end="45:24">'X'</literal></expr></argument>, <argument pos:start="45:27" pos:end="45:29"><expr pos:start="45:27" pos:end="45:29"><literal type="char" pos:start="45:27" pos:end="45:29">'i'</literal></expr></argument>, <argument pos:start="45:32" pos:end="45:34"><expr pos:start="45:32" pos:end="45:34"><literal type="char" pos:start="45:32" pos:end="45:34">'n'</literal></expr></argument>, <argument pos:start="45:37" pos:end="45:39"><expr pos:start="45:37" pos:end="45:39"><literal type="char" pos:start="45:37" pos:end="45:39">'g'</literal></expr></argument>)</argument_list></call> <operator pos:start="45:42" pos:end="45:43">&amp;&amp;</operator> <operator pos:start="45:45" pos:end="45:45">!</operator><name pos:start="45:46" pos:end="45:56"><name pos:start="45:46" pos:end="45:48">mp3</name><operator pos:start="45:49" pos:end="45:50">-&gt;</operator><name pos:start="45:51" pos:end="45:56">is_cbr</name></name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:15"><block_content pos:start="47:9" pos:end="47:15">

        <return pos:start="47:9" pos:end="47:15">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:25"><expr pos:start="51:5" pos:end="51:24"><name pos:start="51:5" pos:end="51:5">v</name> <operator pos:start="51:7" pos:end="51:7">=</operator> <call pos:start="51:9" pos:end="51:24"><name pos:start="51:9" pos:end="51:17">avio_rb32</name><argument_list pos:start="51:18" pos:end="51:24">(<argument pos:start="51:19" pos:end="51:23"><expr pos:start="51:19" pos:end="51:23"><name pos:start="51:19" pos:end="51:23"><name pos:start="51:19" pos:end="51:19">s</name><operator pos:start="51:20" pos:end="51:21">-&gt;</operator><name pos:start="51:22" pos:end="51:23">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="55:39"><if pos:start="53:5" pos:end="55:39">if <condition pos:start="53:8" pos:end="53:29">(<expr pos:start="53:9" pos:end="53:28"><name pos:start="53:9" pos:end="53:9">v</name> <operator pos:start="53:11" pos:end="53:11">&amp;</operator> <name pos:start="53:13" pos:end="53:28">XING_FLAG_FRAMES</name></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:39"><block_content pos:start="55:9" pos:end="55:39">

        <expr_stmt pos:start="55:9" pos:end="55:39"><expr pos:start="55:9" pos:end="55:38"><name pos:start="55:9" pos:end="55:19"><name pos:start="55:9" pos:end="55:11">mp3</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:19">frames</name></name> <operator pos:start="55:21" pos:end="55:21">=</operator> <call pos:start="55:23" pos:end="55:38"><name pos:start="55:23" pos:end="55:31">avio_rb32</name><argument_list pos:start="55:32" pos:end="55:38">(<argument pos:start="55:33" pos:end="55:37"><expr pos:start="55:33" pos:end="55:37"><name pos:start="55:33" pos:end="55:37"><name pos:start="55:33" pos:end="55:33">s</name><operator pos:start="55:34" pos:end="55:35">-&gt;</operator><name pos:start="55:36" pos:end="55:37">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="57:5" pos:end="59:48"><if pos:start="57:5" pos:end="59:48">if <condition pos:start="57:8" pos:end="57:27">(<expr pos:start="57:9" pos:end="57:26"><name pos:start="57:9" pos:end="57:9">v</name> <operator pos:start="57:11" pos:end="57:11">&amp;</operator> <name pos:start="57:13" pos:end="57:26">XING_FLAG_SIZE</name></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:48"><block_content pos:start="59:9" pos:end="59:48">

        <expr_stmt pos:start="59:9" pos:end="59:48"><expr pos:start="59:9" pos:end="59:47"><name pos:start="59:9" pos:end="59:28"><name pos:start="59:9" pos:end="59:11">mp3</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:28">header_filesize</name></name> <operator pos:start="59:30" pos:end="59:30">=</operator> <call pos:start="59:32" pos:end="59:47"><name pos:start="59:32" pos:end="59:40">avio_rb32</name><argument_list pos:start="59:41" pos:end="59:47">(<argument pos:start="59:42" pos:end="59:46"><expr pos:start="59:42" pos:end="59:46"><name pos:start="59:42" pos:end="59:46"><name pos:start="59:42" pos:end="59:42">s</name><operator pos:start="59:43" pos:end="59:44">-&gt;</operator><name pos:start="59:45" pos:end="59:46">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="61:5" pos:end="81:5"><if pos:start="61:5" pos:end="81:5">if <condition pos:start="61:8" pos:end="61:38">(<expr pos:start="61:9" pos:end="61:37"><name pos:start="61:9" pos:end="61:13">fsize</name> <operator pos:start="61:15" pos:end="61:16">&amp;&amp;</operator> <name pos:start="61:18" pos:end="61:37"><name pos:start="61:18" pos:end="61:20">mp3</name><operator pos:start="61:21" pos:end="61:22">-&gt;</operator><name pos:start="61:23" pos:end="61:37">header_filesize</name></name></expr>)</condition> <block pos:start="61:40" pos:end="81:5">{<block_content pos:start="63:9" pos:end="79:9">

        <decl_stmt pos:start="63:9" pos:end="63:28"><decl pos:start="63:9" pos:end="63:20"><type pos:start="63:9" pos:end="63:16"><name pos:start="63:9" pos:end="63:16">uint64_t</name></type> <name pos:start="63:18" pos:end="63:20">min</name></decl>, <decl pos:start="63:23" pos:end="63:27"><type ref="prev" pos:start="63:9" pos:end="63:16"/><name pos:start="63:23" pos:end="63:27">delta</name></decl>;</decl_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:49"><expr pos:start="65:9" pos:end="65:48"><name pos:start="65:9" pos:end="65:11">min</name> <operator pos:start="65:13" pos:end="65:13">=</operator> <call pos:start="65:15" pos:end="65:48"><name pos:start="65:15" pos:end="65:19">FFMIN</name><argument_list pos:start="65:20" pos:end="65:48">(<argument pos:start="65:21" pos:end="65:25"><expr pos:start="65:21" pos:end="65:25"><name pos:start="65:21" pos:end="65:25">fsize</name></expr></argument>, <argument pos:start="65:28" pos:end="65:47"><expr pos:start="65:28" pos:end="65:47"><name pos:start="65:28" pos:end="65:47"><name pos:start="65:28" pos:end="65:30">mp3</name><operator pos:start="65:31" pos:end="65:32">-&gt;</operator><name pos:start="65:33" pos:end="65:47">header_filesize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:57"><expr pos:start="67:9" pos:end="67:56"><name pos:start="67:9" pos:end="67:13">delta</name> <operator pos:start="67:15" pos:end="67:15">=</operator> <call pos:start="67:17" pos:end="67:50"><name pos:start="67:17" pos:end="67:21">FFMAX</name><argument_list pos:start="67:22" pos:end="67:50">(<argument pos:start="67:23" pos:end="67:27"><expr pos:start="67:23" pos:end="67:27"><name pos:start="67:23" pos:end="67:27">fsize</name></expr></argument>, <argument pos:start="67:30" pos:end="67:49"><expr pos:start="67:30" pos:end="67:49"><name pos:start="67:30" pos:end="67:49"><name pos:start="67:30" pos:end="67:32">mp3</name><operator pos:start="67:33" pos:end="67:34">-&gt;</operator><name pos:start="67:35" pos:end="67:49">header_filesize</name></name></expr></argument>)</argument_list></call> <operator pos:start="67:52" pos:end="67:52">-</operator> <name pos:start="67:54" pos:end="67:56">min</name></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="79:9"><if pos:start="69:9" pos:end="73:9">if <condition pos:start="69:12" pos:end="69:61">(<expr pos:start="69:13" pos:end="69:60"><name pos:start="69:13" pos:end="69:17">fsize</name> <operator pos:start="69:19" pos:end="69:19">&gt;</operator> <name pos:start="69:21" pos:end="69:40"><name pos:start="69:21" pos:end="69:23">mp3</name><operator pos:start="69:24" pos:end="69:25">-&gt;</operator><name pos:start="69:26" pos:end="69:40">header_filesize</name></name> <operator pos:start="69:42" pos:end="69:43">&amp;&amp;</operator> <name pos:start="69:45" pos:end="69:49">delta</name> <operator pos:start="69:51" pos:end="69:51">&gt;</operator> <name pos:start="69:53" pos:end="69:55">min</name> <operator pos:start="69:57" pos:end="69:58">&gt;&gt;</operator> <literal type="number" pos:start="69:60" pos:end="69:60">4</literal></expr>)</condition> <block pos:start="69:63" pos:end="73:9">{<block_content pos:start="71:13" pos:end="71:28">

            <expr_stmt pos:start="71:13" pos:end="71:28"><expr pos:start="71:13" pos:end="71:27"><name pos:start="71:13" pos:end="71:23"><name pos:start="71:13" pos:end="71:15">mp3</name><operator pos:start="71:16" pos:end="71:17">-&gt;</operator><name pos:start="71:18" pos:end="71:23">frames</name></name> <operator pos:start="71:25" pos:end="71:25">=</operator> <literal type="number" pos:start="71:27" pos:end="71:27">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="73:11" pos:end="79:9">else if <condition pos:start="73:19" pos:end="73:36">(<expr pos:start="73:20" pos:end="73:35"><name pos:start="73:20" pos:end="73:24">delta</name> <operator pos:start="73:26" pos:end="73:26">&gt;</operator> <name pos:start="73:28" pos:end="73:30">min</name> <operator pos:start="73:32" pos:end="73:33">&gt;&gt;</operator> <literal type="number" pos:start="73:35" pos:end="73:35">4</literal></expr>)</condition> <block pos:start="73:38" pos:end="79:9">{<block_content pos:start="75:13" pos:end="77:75">

            <expr_stmt pos:start="75:13" pos:end="77:75"><expr pos:start="75:13" pos:end="77:74"><call pos:start="75:13" pos:end="77:74"><name pos:start="75:13" pos:end="75:18">av_log</name><argument_list pos:start="75:19" pos:end="77:74">(<argument pos:start="75:20" pos:end="75:20"><expr pos:start="75:20" pos:end="75:20"><name pos:start="75:20" pos:end="75:20">s</name></expr></argument>, <argument pos:start="75:23" pos:end="75:36"><expr pos:start="75:23" pos:end="75:36"><name pos:start="75:23" pos:end="75:36">AV_LOG_WARNING</name></expr></argument>,

                   <argument pos:start="77:20" pos:end="77:73"><expr pos:start="77:20" pos:end="77:73"><literal type="string" pos:start="77:20" pos:end="77:73">"filesize and duration do not match (growing file?)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="83:5" pos:end="89:55"><if pos:start="83:5" pos:end="89:55">if <condition pos:start="83:8" pos:end="83:26">(<expr pos:start="83:9" pos:end="83:25"><name pos:start="83:9" pos:end="83:9">v</name> <operator pos:start="83:11" pos:end="83:11">&amp;</operator> <name pos:start="83:13" pos:end="83:25">XING_FLAG_TOC</name></expr>)</condition><block type="pseudo" pos:start="85:9" pos:end="89:55"><block_content pos:start="85:9" pos:end="89:55">

        <macro pos:start="85:9" pos:end="89:54"><name pos:start="85:9" pos:end="85:21">read_xing_toc</name><argument_list pos:start="85:22" pos:end="89:54">(<argument pos:start="85:23" pos:end="85:23">s</argument>, <argument pos:start="85:26" pos:end="85:45">mp3-&gt;header_filesize</argument>, <argument pos:start="85:48" pos:end="89:53">av_rescale_q(mp3-&gt;frames,

                                       (AVRational){spf, c-&gt;sample_rate},

                                       st-&gt;time_base)</argument>)</argument_list></macro><empty_stmt pos:start="89:55" pos:end="89:55">;</empty_stmt></block_content></block></if></if_stmt>

    <comment type="block" pos:start="91:5" pos:end="91:21">/* VBR quality */</comment>

    <if_stmt pos:start="93:5" pos:end="95:28"><if pos:start="93:5" pos:end="95:28">if<condition pos:start="93:7" pos:end="93:13">(<expr pos:start="93:8" pos:end="93:12"><name pos:start="93:8" pos:end="93:8">v</name> <operator pos:start="93:10" pos:end="93:10">&amp;</operator> <literal type="number" pos:start="93:12" pos:end="93:12">8</literal></expr>)</condition><block type="pseudo" pos:start="95:9" pos:end="95:28"><block_content pos:start="95:9" pos:end="95:28">

        <expr_stmt pos:start="95:9" pos:end="95:28"><expr pos:start="95:9" pos:end="95:27"><call pos:start="95:9" pos:end="95:27"><name pos:start="95:9" pos:end="95:17">avio_skip</name><argument_list pos:start="95:18" pos:end="95:27">(<argument pos:start="95:19" pos:end="95:23"><expr pos:start="95:19" pos:end="95:23"><name pos:start="95:19" pos:end="95:23"><name pos:start="95:19" pos:end="95:19">s</name><operator pos:start="95:20" pos:end="95:21">-&gt;</operator><name pos:start="95:22" pos:end="95:23">pb</name></name></expr></argument>, <argument pos:start="95:26" pos:end="95:26"><expr pos:start="95:26" pos:end="95:26"><literal type="number" pos:start="95:26" pos:end="95:26">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="99:5" pos:end="99:38">/* Encoder short version string */</comment>

    <expr_stmt pos:start="101:5" pos:end="101:40"><expr pos:start="101:5" pos:end="101:39"><call pos:start="101:5" pos:end="101:39"><name pos:start="101:5" pos:end="101:10">memset</name><argument_list pos:start="101:11" pos:end="101:39">(<argument pos:start="101:12" pos:end="101:18"><expr pos:start="101:12" pos:end="101:18"><name pos:start="101:12" pos:end="101:18">version</name></expr></argument>, <argument pos:start="101:21" pos:end="101:21"><expr pos:start="101:21" pos:end="101:21"><literal type="number" pos:start="101:21" pos:end="101:21">0</literal></expr></argument>, <argument pos:start="101:24" pos:end="101:38"><expr pos:start="101:24" pos:end="101:38"><sizeof pos:start="101:24" pos:end="101:38">sizeof<argument_list pos:start="101:30" pos:end="101:38">(<argument pos:start="101:31" pos:end="101:37"><expr pos:start="101:31" pos:end="101:37"><name pos:start="101:31" pos:end="101:37">version</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:33"><expr pos:start="103:5" pos:end="103:32"><call pos:start="103:5" pos:end="103:32"><name pos:start="103:5" pos:end="103:13">avio_read</name><argument_list pos:start="103:14" pos:end="103:32">(<argument pos:start="103:15" pos:end="103:19"><expr pos:start="103:15" pos:end="103:19"><name pos:start="103:15" pos:end="103:19"><name pos:start="103:15" pos:end="103:15">s</name><operator pos:start="103:16" pos:end="103:17">-&gt;</operator><name pos:start="103:18" pos:end="103:19">pb</name></name></expr></argument>, <argument pos:start="103:22" pos:end="103:28"><expr pos:start="103:22" pos:end="103:28"><name pos:start="103:22" pos:end="103:28">version</name></expr></argument>, <argument pos:start="103:31" pos:end="103:31"><expr pos:start="103:31" pos:end="103:31"><literal type="number" pos:start="103:31" pos:end="103:31">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="107:5" pos:end="107:40">/* Info Tag revision + VBR method */</comment>

    <expr_stmt pos:start="109:5" pos:end="109:19"><expr pos:start="109:5" pos:end="109:18"><call pos:start="109:5" pos:end="109:18"><name pos:start="109:5" pos:end="109:11">avio_r8</name><argument_list pos:start="109:12" pos:end="109:18">(<argument pos:start="109:13" pos:end="109:17"><expr pos:start="109:13" pos:end="109:17"><name pos:start="109:13" pos:end="109:17"><name pos:start="109:13" pos:end="109:13">s</name><operator pos:start="109:14" pos:end="109:15">-&gt;</operator><name pos:start="109:16" pos:end="109:17">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="113:5" pos:end="113:30">/* Lowpass filter value */</comment>

    <expr_stmt pos:start="115:5" pos:end="115:19"><expr pos:start="115:5" pos:end="115:18"><call pos:start="115:5" pos:end="115:18"><name pos:start="115:5" pos:end="115:11">avio_r8</name><argument_list pos:start="115:12" pos:end="115:18">(<argument pos:start="115:13" pos:end="115:17"><expr pos:start="115:13" pos:end="115:17"><name pos:start="115:13" pos:end="115:17"><name pos:start="115:13" pos:end="115:13">s</name><operator pos:start="115:14" pos:end="115:15">-&gt;</operator><name pos:start="115:16" pos:end="115:17">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="119:5" pos:end="119:25">/* ReplayGain peak */</comment>

    <expr_stmt pos:start="121:5" pos:end="121:28"><expr pos:start="121:5" pos:end="121:27"><name pos:start="121:5" pos:end="121:5">v</name>    <operator pos:start="121:10" pos:end="121:10">=</operator> <call pos:start="121:12" pos:end="121:27"><name pos:start="121:12" pos:end="121:20">avio_rb32</name><argument_list pos:start="121:21" pos:end="121:27">(<argument pos:start="121:22" pos:end="121:26"><expr pos:start="121:22" pos:end="121:26"><name pos:start="121:22" pos:end="121:26"><name pos:start="121:22" pos:end="121:22">s</name><operator pos:start="121:23" pos:end="121:24">-&gt;</operator><name pos:start="121:25" pos:end="121:26">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:42"><expr pos:start="123:5" pos:end="123:41"><name pos:start="123:5" pos:end="123:8">peak</name> <operator pos:start="123:10" pos:end="123:10">=</operator> <call pos:start="123:12" pos:end="123:41"><name pos:start="123:12" pos:end="123:21">av_rescale</name><argument_list pos:start="123:22" pos:end="123:41">(<argument pos:start="123:23" pos:end="123:23"><expr pos:start="123:23" pos:end="123:23"><name pos:start="123:23" pos:end="123:23">v</name></expr></argument>, <argument pos:start="123:26" pos:end="123:31"><expr pos:start="123:26" pos:end="123:31"><literal type="number" pos:start="123:26" pos:end="123:31">100000</literal></expr></argument>, <argument pos:start="123:34" pos:end="123:40"><expr pos:start="123:34" pos:end="123:40"><literal type="number" pos:start="123:34" pos:end="123:34">1</literal> <operator pos:start="123:36" pos:end="123:37">&lt;&lt;</operator> <literal type="number" pos:start="123:39" pos:end="123:40">23</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="127:5" pos:end="127:26">/* Radio ReplayGain */</comment>

    <expr_stmt pos:start="129:5" pos:end="129:25"><expr pos:start="129:5" pos:end="129:24"><name pos:start="129:5" pos:end="129:5">v</name> <operator pos:start="129:7" pos:end="129:7">=</operator> <call pos:start="129:9" pos:end="129:24"><name pos:start="129:9" pos:end="129:17">avio_rb16</name><argument_list pos:start="129:18" pos:end="129:24">(<argument pos:start="129:19" pos:end="129:23"><expr pos:start="129:19" pos:end="129:23"><name pos:start="129:19" pos:end="129:23"><name pos:start="129:19" pos:end="129:19">s</name><operator pos:start="129:20" pos:end="129:21">-&gt;</operator><name pos:start="129:22" pos:end="129:23">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="133:5" pos:end="143:5"><if pos:start="133:5" pos:end="143:5">if <condition pos:start="133:8" pos:end="133:36">(<expr pos:start="133:9" pos:end="133:35"><call pos:start="133:9" pos:end="133:30"><name pos:start="133:9" pos:end="133:19">MIDDLE_BITS</name><argument_list pos:start="133:20" pos:end="133:30">(<argument pos:start="133:21" pos:end="133:21"><expr pos:start="133:21" pos:end="133:21"><name pos:start="133:21" pos:end="133:21">v</name></expr></argument>, <argument pos:start="133:24" pos:end="133:25"><expr pos:start="133:24" pos:end="133:25"><literal type="number" pos:start="133:24" pos:end="133:25">13</literal></expr></argument>, <argument pos:start="133:28" pos:end="133:29"><expr pos:start="133:28" pos:end="133:29"><literal type="number" pos:start="133:28" pos:end="133:29">15</literal></expr></argument>)</argument_list></call> <operator pos:start="133:32" pos:end="133:33">==</operator> <literal type="number" pos:start="133:35" pos:end="133:35">1</literal></expr>)</condition> <block pos:start="133:38" pos:end="143:5">{<block_content pos:start="135:9" pos:end="141:25">

        <expr_stmt pos:start="135:9" pos:end="135:46"><expr pos:start="135:9" pos:end="135:45"><name pos:start="135:9" pos:end="135:14">r_gain</name> <operator pos:start="135:16" pos:end="135:16">=</operator> <call pos:start="135:18" pos:end="135:37"><name pos:start="135:18" pos:end="135:28">MIDDLE_BITS</name><argument_list pos:start="135:29" pos:end="135:37">(<argument pos:start="135:30" pos:end="135:30"><expr pos:start="135:30" pos:end="135:30"><name pos:start="135:30" pos:end="135:30">v</name></expr></argument>, <argument pos:start="135:33" pos:end="135:33"><expr pos:start="135:33" pos:end="135:33"><literal type="number" pos:start="135:33" pos:end="135:33">0</literal></expr></argument>, <argument pos:start="135:36" pos:end="135:36"><expr pos:start="135:36" pos:end="135:36"><literal type="number" pos:start="135:36" pos:end="135:36">8</literal></expr></argument>)</argument_list></call> <operator pos:start="135:39" pos:end="135:39">*</operator> <literal type="number" pos:start="135:41" pos:end="135:45">10000</literal></expr>;</expr_stmt>



        <if_stmt pos:start="139:9" pos:end="141:25"><if pos:start="139:9" pos:end="141:25">if <condition pos:start="139:12" pos:end="139:25">(<expr pos:start="139:13" pos:end="139:24"><name pos:start="139:13" pos:end="139:13">v</name> <operator pos:start="139:15" pos:end="139:15">&amp;</operator> <operator pos:start="139:17" pos:end="139:17">(</operator><literal type="number" pos:start="139:18" pos:end="139:18">1</literal> <operator pos:start="139:20" pos:end="139:21">&lt;&lt;</operator> <literal type="number" pos:start="139:23" pos:end="139:23">9</literal><operator pos:start="139:24" pos:end="139:24">)</operator></expr>)</condition><block type="pseudo" pos:start="141:13" pos:end="141:25"><block_content pos:start="141:13" pos:end="141:25">

            <expr_stmt pos:start="141:13" pos:end="141:25"><expr pos:start="141:13" pos:end="141:24"><name pos:start="141:13" pos:end="141:18">r_gain</name> <operator pos:start="141:20" pos:end="141:21">*=</operator> <operator pos:start="141:23" pos:end="141:23">-</operator><literal type="number" pos:start="141:24" pos:end="141:24">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="147:5" pos:end="147:31">/* Audiophile ReplayGain */</comment>

    <expr_stmt pos:start="149:5" pos:end="149:25"><expr pos:start="149:5" pos:end="149:24"><name pos:start="149:5" pos:end="149:5">v</name> <operator pos:start="149:7" pos:end="149:7">=</operator> <call pos:start="149:9" pos:end="149:24"><name pos:start="149:9" pos:end="149:17">avio_rb16</name><argument_list pos:start="149:18" pos:end="149:24">(<argument pos:start="149:19" pos:end="149:23"><expr pos:start="149:19" pos:end="149:23"><name pos:start="149:19" pos:end="149:23"><name pos:start="149:19" pos:end="149:19">s</name><operator pos:start="149:20" pos:end="149:21">-&gt;</operator><name pos:start="149:22" pos:end="149:23">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="153:5" pos:end="163:5"><if pos:start="153:5" pos:end="163:5">if <condition pos:start="153:8" pos:end="153:36">(<expr pos:start="153:9" pos:end="153:35"><call pos:start="153:9" pos:end="153:30"><name pos:start="153:9" pos:end="153:19">MIDDLE_BITS</name><argument_list pos:start="153:20" pos:end="153:30">(<argument pos:start="153:21" pos:end="153:21"><expr pos:start="153:21" pos:end="153:21"><name pos:start="153:21" pos:end="153:21">v</name></expr></argument>, <argument pos:start="153:24" pos:end="153:25"><expr pos:start="153:24" pos:end="153:25"><literal type="number" pos:start="153:24" pos:end="153:25">13</literal></expr></argument>, <argument pos:start="153:28" pos:end="153:29"><expr pos:start="153:28" pos:end="153:29"><literal type="number" pos:start="153:28" pos:end="153:29">15</literal></expr></argument>)</argument_list></call> <operator pos:start="153:32" pos:end="153:33">==</operator> <literal type="number" pos:start="153:35" pos:end="153:35">2</literal></expr>)</condition> <block pos:start="153:38" pos:end="163:5">{<block_content pos:start="155:9" pos:end="161:25">

        <expr_stmt pos:start="155:9" pos:end="155:46"><expr pos:start="155:9" pos:end="155:45"><name pos:start="155:9" pos:end="155:14">a_gain</name> <operator pos:start="155:16" pos:end="155:16">=</operator> <call pos:start="155:18" pos:end="155:37"><name pos:start="155:18" pos:end="155:28">MIDDLE_BITS</name><argument_list pos:start="155:29" pos:end="155:37">(<argument pos:start="155:30" pos:end="155:30"><expr pos:start="155:30" pos:end="155:30"><name pos:start="155:30" pos:end="155:30">v</name></expr></argument>, <argument pos:start="155:33" pos:end="155:33"><expr pos:start="155:33" pos:end="155:33"><literal type="number" pos:start="155:33" pos:end="155:33">0</literal></expr></argument>, <argument pos:start="155:36" pos:end="155:36"><expr pos:start="155:36" pos:end="155:36"><literal type="number" pos:start="155:36" pos:end="155:36">8</literal></expr></argument>)</argument_list></call> <operator pos:start="155:39" pos:end="155:39">*</operator> <literal type="number" pos:start="155:41" pos:end="155:45">10000</literal></expr>;</expr_stmt>



        <if_stmt pos:start="159:9" pos:end="161:25"><if pos:start="159:9" pos:end="161:25">if <condition pos:start="159:12" pos:end="159:25">(<expr pos:start="159:13" pos:end="159:24"><name pos:start="159:13" pos:end="159:13">v</name> <operator pos:start="159:15" pos:end="159:15">&amp;</operator> <operator pos:start="159:17" pos:end="159:17">(</operator><literal type="number" pos:start="159:18" pos:end="159:18">1</literal> <operator pos:start="159:20" pos:end="159:21">&lt;&lt;</operator> <literal type="number" pos:start="159:23" pos:end="159:23">9</literal><operator pos:start="159:24" pos:end="159:24">)</operator></expr>)</condition><block type="pseudo" pos:start="161:13" pos:end="161:25"><block_content pos:start="161:13" pos:end="161:25">

            <expr_stmt pos:start="161:13" pos:end="161:25"><expr pos:start="161:13" pos:end="161:24"><name pos:start="161:13" pos:end="161:18">a_gain</name> <operator pos:start="161:20" pos:end="161:21">*=</operator> <operator pos:start="161:23" pos:end="161:23">-</operator><literal type="number" pos:start="161:24" pos:end="161:24">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="167:5" pos:end="167:35">/* Encoding flags + ATH Type */</comment>

    <expr_stmt pos:start="169:5" pos:end="169:19"><expr pos:start="169:5" pos:end="169:18"><call pos:start="169:5" pos:end="169:18"><name pos:start="169:5" pos:end="169:11">avio_r8</name><argument_list pos:start="169:12" pos:end="169:18">(<argument pos:start="169:13" pos:end="169:17"><expr pos:start="169:13" pos:end="169:17"><name pos:start="169:13" pos:end="169:17"><name pos:start="169:13" pos:end="169:13">s</name><operator pos:start="169:14" pos:end="169:15">-&gt;</operator><name pos:start="169:16" pos:end="169:17">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="173:5" pos:end="173:59">/* if ABR {specified bitrate} else {minimal bitrate} */</comment>

    <expr_stmt pos:start="175:5" pos:end="175:19"><expr pos:start="175:5" pos:end="175:18"><call pos:start="175:5" pos:end="175:18"><name pos:start="175:5" pos:end="175:11">avio_r8</name><argument_list pos:start="175:12" pos:end="175:18">(<argument pos:start="175:13" pos:end="175:17"><expr pos:start="175:13" pos:end="175:17"><name pos:start="175:13" pos:end="175:17"><name pos:start="175:13" pos:end="175:13">s</name><operator pos:start="175:14" pos:end="175:15">-&gt;</operator><name pos:start="175:16" pos:end="175:17">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="179:5" pos:end="179:24">/* Encoder delays */</comment>

    <expr_stmt pos:start="181:5" pos:end="181:24"><expr pos:start="181:5" pos:end="181:23"><name pos:start="181:5" pos:end="181:5">v</name><operator pos:start="181:6" pos:end="181:6">=</operator> <call pos:start="181:8" pos:end="181:23"><name pos:start="181:8" pos:end="181:16">avio_rb24</name><argument_list pos:start="181:17" pos:end="181:23">(<argument pos:start="181:18" pos:end="181:22"><expr pos:start="181:18" pos:end="181:22"><name pos:start="181:18" pos:end="181:22"><name pos:start="181:18" pos:end="181:18">s</name><operator pos:start="181:19" pos:end="181:20">-&gt;</operator><name pos:start="181:21" pos:end="181:22">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="183:5" pos:end="209:5"><if pos:start="183:5" pos:end="209:5">if<condition pos:start="183:7" pos:end="185:59">(<expr pos:start="183:8" pos:end="185:58"><call pos:start="183:8" pos:end="183:23"><name pos:start="183:8" pos:end="183:14">AV_RB32</name><argument_list pos:start="183:15" pos:end="183:23">(<argument pos:start="183:16" pos:end="183:22"><expr pos:start="183:16" pos:end="183:22"><name pos:start="183:16" pos:end="183:22">version</name></expr></argument>)</argument_list></call> <operator pos:start="183:25" pos:end="183:26">==</operator> <call pos:start="183:28" pos:end="183:54"><name pos:start="183:28" pos:end="183:34">MKBETAG</name><argument_list pos:start="183:35" pos:end="183:54">(<argument pos:start="183:36" pos:end="183:38"><expr pos:start="183:36" pos:end="183:38"><literal type="char" pos:start="183:36" pos:end="183:38">'L'</literal></expr></argument>, <argument pos:start="183:41" pos:end="183:43"><expr pos:start="183:41" pos:end="183:43"><literal type="char" pos:start="183:41" pos:end="183:43">'A'</literal></expr></argument>, <argument pos:start="183:46" pos:end="183:48"><expr pos:start="183:46" pos:end="183:48"><literal type="char" pos:start="183:46" pos:end="183:48">'M'</literal></expr></argument>, <argument pos:start="183:51" pos:end="183:53"><expr pos:start="183:51" pos:end="183:53"><literal type="char" pos:start="183:51" pos:end="183:53">'E'</literal></expr></argument>)</argument_list></call>

        <operator pos:start="185:9" pos:end="185:10">||</operator> <call pos:start="185:12" pos:end="185:27"><name pos:start="185:12" pos:end="185:18">AV_RB32</name><argument_list pos:start="185:19" pos:end="185:27">(<argument pos:start="185:20" pos:end="185:26"><expr pos:start="185:20" pos:end="185:26"><name pos:start="185:20" pos:end="185:26">version</name></expr></argument>)</argument_list></call> <operator pos:start="185:29" pos:end="185:30">==</operator> <call pos:start="185:32" pos:end="185:58"><name pos:start="185:32" pos:end="185:38">MKBETAG</name><argument_list pos:start="185:39" pos:end="185:58">(<argument pos:start="185:40" pos:end="185:42"><expr pos:start="185:40" pos:end="185:42"><literal type="char" pos:start="185:40" pos:end="185:42">'L'</literal></expr></argument>, <argument pos:start="185:45" pos:end="185:47"><expr pos:start="185:45" pos:end="185:47"><literal type="char" pos:start="185:45" pos:end="185:47">'a'</literal></expr></argument>, <argument pos:start="185:50" pos:end="185:52"><expr pos:start="185:50" pos:end="185:52"><literal type="char" pos:start="185:50" pos:end="185:52">'v'</literal></expr></argument>, <argument pos:start="185:55" pos:end="185:57"><expr pos:start="185:55" pos:end="185:57"><literal type="char" pos:start="185:55" pos:end="185:57">'f'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="185:61" pos:end="209:5">{<block_content pos:start="189:9" pos:end="207:79">



        <expr_stmt pos:start="189:9" pos:end="189:31"><expr pos:start="189:9" pos:end="189:30"><name pos:start="189:9" pos:end="189:22"><name pos:start="189:9" pos:end="189:11">mp3</name><operator pos:start="189:12" pos:end="189:13">-&gt;</operator><name pos:start="189:14" pos:end="189:22">start_pad</name></name> <operator pos:start="189:24" pos:end="189:24">=</operator> <name pos:start="189:26" pos:end="189:26">v</name><operator pos:start="189:27" pos:end="189:28">&gt;&gt;</operator><literal type="number" pos:start="189:29" pos:end="189:30">12</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="191:9" pos:end="191:32"><expr pos:start="191:9" pos:end="191:31"><name pos:start="191:9" pos:end="191:22"><name pos:start="191:9" pos:end="191:11">mp3</name><operator pos:start="191:12" pos:end="191:13">-&gt;</operator>  <name pos:start="191:16" pos:end="191:22">end_pad</name></name> <operator pos:start="191:24" pos:end="191:24">=</operator> <name pos:start="191:26" pos:end="191:26">v</name><operator pos:start="191:27" pos:end="191:27">&amp;</operator><literal type="number" pos:start="191:28" pos:end="191:31">4095</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="193:9" pos:end="193:52"><expr pos:start="193:9" pos:end="193:51"><name pos:start="193:9" pos:end="193:24"><name pos:start="193:9" pos:end="193:10">st</name><operator pos:start="193:11" pos:end="193:12">-&gt;</operator><name pos:start="193:13" pos:end="193:24">skip_samples</name></name> <operator pos:start="193:26" pos:end="193:26">=</operator> <name pos:start="193:28" pos:end="193:41"><name pos:start="193:28" pos:end="193:30">mp3</name><operator pos:start="193:31" pos:end="193:32">-&gt;</operator><name pos:start="193:33" pos:end="193:41">start_pad</name></name> <operator pos:start="193:43" pos:end="193:43">+</operator> <literal type="number" pos:start="193:45" pos:end="193:49">528</literal> <operator pos:start="193:49" pos:end="193:49">+</operator> <literal type="number" pos:start="193:51" pos:end="193:51">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="195:9" pos:end="197:90"><if pos:start="195:9" pos:end="197:90">if <condition pos:start="195:12" pos:end="195:24">(<expr pos:start="195:13" pos:end="195:23"><name pos:start="195:13" pos:end="195:23"><name pos:start="195:13" pos:end="195:15">mp3</name><operator pos:start="195:16" pos:end="195:17">-&gt;</operator><name pos:start="195:18" pos:end="195:23">frames</name></name></expr>)</condition><block type="pseudo" pos:start="197:13" pos:end="197:90"><block_content pos:start="197:13" pos:end="197:90">

            <expr_stmt pos:start="197:13" pos:end="197:90"><expr pos:start="197:13" pos:end="197:89"><name pos:start="197:13" pos:end="197:34"><name pos:start="197:13" pos:end="197:14">st</name><operator pos:start="197:15" pos:end="197:16">-&gt;</operator><name pos:start="197:17" pos:end="197:34">end_discard_sample</name></name> <operator pos:start="197:36" pos:end="197:36">=</operator> <operator pos:start="197:38" pos:end="197:38">-</operator><name pos:start="197:39" pos:end="197:50"><name pos:start="197:39" pos:end="197:41">mp3</name><operator pos:start="197:42" pos:end="197:43">-&gt;</operator><name pos:start="197:44" pos:end="197:50">end_pad</name></name> <operator pos:start="197:52" pos:end="197:52">+</operator> <literal type="number" pos:start="197:54" pos:end="197:58">528</literal> <operator pos:start="197:58" pos:end="197:58">+</operator> <literal type="number" pos:start="197:60" pos:end="197:62">1</literal> <operator pos:start="197:62" pos:end="197:62">+</operator> <name pos:start="197:64" pos:end="197:74"><name pos:start="197:64" pos:end="197:66">mp3</name><operator pos:start="197:67" pos:end="197:68">-&gt;</operator><name pos:start="197:69" pos:end="197:74">frames</name></name> <operator pos:start="197:76" pos:end="197:76">*</operator> <operator pos:start="197:78" pos:end="197:78">(</operator><name pos:start="197:79" pos:end="197:85">int64_t</name><operator pos:start="197:86" pos:end="197:86">)</operator><name pos:start="197:87" pos:end="197:89">spf</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="199:9" pos:end="205:59"><if pos:start="199:9" pos:end="205:59">if <condition pos:start="199:12" pos:end="199:28">(<expr pos:start="199:13" pos:end="199:27"><operator pos:start="199:13" pos:end="199:13">!</operator><name pos:start="199:14" pos:end="199:27"><name pos:start="199:14" pos:end="199:15">st</name><operator pos:start="199:16" pos:end="199:17">-&gt;</operator><name pos:start="199:18" pos:end="199:27">start_time</name></name></expr>)</condition><block type="pseudo" pos:start="201:13" pos:end="205:59"><block_content pos:start="201:13" pos:end="205:59">

            <expr_stmt pos:start="201:13" pos:end="205:59"><expr pos:start="201:13" pos:end="205:58"><name pos:start="201:13" pos:end="201:26"><name pos:start="201:13" pos:end="201:14">st</name><operator pos:start="201:15" pos:end="201:16">-&gt;</operator><name pos:start="201:17" pos:end="201:26">start_time</name></name> <operator pos:start="201:28" pos:end="201:28">=</operator> <macro pos:start="201:30" pos:end="205:58"><name pos:start="201:30" pos:end="201:41">av_rescale_q</name><argument_list pos:start="201:42" pos:end="205:58">(<argument pos:start="201:43" pos:end="201:58">st-&gt;skip_samples</argument>,

                                            <argument pos:start="203:45" pos:end="203:58">(AVRational){<literal type="number" pos:start="203:58" pos:end="203:58">1</literal></argument>, <argument pos:start="203:61" pos:end="203:75">c-&gt;sample_rate}</argument>,

                                            <argument pos:start="205:45" pos:end="205:57">st-&gt;time_base</argument>)</argument_list></macro></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:79"><expr pos:start="207:9" pos:end="207:78"><call pos:start="207:9" pos:end="207:78"><name pos:start="207:9" pos:end="207:14">av_log</name><argument_list pos:start="207:15" pos:end="207:78">(<argument pos:start="207:16" pos:end="207:16"><expr pos:start="207:16" pos:end="207:16"><name pos:start="207:16" pos:end="207:16">s</name></expr></argument>, <argument pos:start="207:19" pos:end="207:30"><expr pos:start="207:19" pos:end="207:30"><name pos:start="207:19" pos:end="207:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="207:33" pos:end="207:45"><expr pos:start="207:33" pos:end="207:45"><literal type="string" pos:start="207:33" pos:end="207:45">"pad %d %d\n"</literal></expr></argument>, <argument pos:start="207:48" pos:end="207:61"><expr pos:start="207:48" pos:end="207:61"><name pos:start="207:48" pos:end="207:61"><name pos:start="207:48" pos:end="207:50">mp3</name><operator pos:start="207:51" pos:end="207:52">-&gt;</operator><name pos:start="207:53" pos:end="207:61">start_pad</name></name></expr></argument>, <argument pos:start="207:64" pos:end="207:77"><expr pos:start="207:64" pos:end="207:77"><name pos:start="207:64" pos:end="207:77"><name pos:start="207:64" pos:end="207:66">mp3</name><operator pos:start="207:67" pos:end="207:68">-&gt;</operator>  <name pos:start="207:71" pos:end="207:77">end_pad</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="213:5" pos:end="213:14">/* Misc */</comment>

    <expr_stmt pos:start="215:5" pos:end="215:19"><expr pos:start="215:5" pos:end="215:18"><call pos:start="215:5" pos:end="215:18"><name pos:start="215:5" pos:end="215:11">avio_r8</name><argument_list pos:start="215:12" pos:end="215:18">(<argument pos:start="215:13" pos:end="215:17"><expr pos:start="215:13" pos:end="215:17"><name pos:start="215:13" pos:end="215:17"><name pos:start="215:13" pos:end="215:13">s</name><operator pos:start="215:14" pos:end="215:15">-&gt;</operator><name pos:start="215:16" pos:end="215:17">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="219:5" pos:end="219:18">/* MP3 gain */</comment>

    <expr_stmt pos:start="221:5" pos:end="221:19"><expr pos:start="221:5" pos:end="221:18"><call pos:start="221:5" pos:end="221:18"><name pos:start="221:5" pos:end="221:11">avio_r8</name><argument_list pos:start="221:12" pos:end="221:18">(<argument pos:start="221:13" pos:end="221:17"><expr pos:start="221:13" pos:end="221:17"><name pos:start="221:13" pos:end="221:17"><name pos:start="221:13" pos:end="221:13">s</name><operator pos:start="221:14" pos:end="221:15">-&gt;</operator><name pos:start="221:16" pos:end="221:17">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="225:5" pos:end="225:34">/* Preset and surround info */</comment>

    <expr_stmt pos:start="227:5" pos:end="227:21"><expr pos:start="227:5" pos:end="227:20"><call pos:start="227:5" pos:end="227:20"><name pos:start="227:5" pos:end="227:13">avio_rb16</name><argument_list pos:start="227:14" pos:end="227:20">(<argument pos:start="227:15" pos:end="227:19"><expr pos:start="227:15" pos:end="227:19"><name pos:start="227:15" pos:end="227:19"><name pos:start="227:15" pos:end="227:15">s</name><operator pos:start="227:16" pos:end="227:17">-&gt;</operator><name pos:start="227:18" pos:end="227:19">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="231:5" pos:end="231:22">/* Music length */</comment>

    <expr_stmt pos:start="233:5" pos:end="233:21"><expr pos:start="233:5" pos:end="233:20"><call pos:start="233:5" pos:end="233:20"><name pos:start="233:5" pos:end="233:13">avio_rb32</name><argument_list pos:start="233:14" pos:end="233:20">(<argument pos:start="233:15" pos:end="233:19"><expr pos:start="233:15" pos:end="233:19"><name pos:start="233:15" pos:end="233:19"><name pos:start="233:15" pos:end="233:15">s</name><operator pos:start="233:16" pos:end="233:17">-&gt;</operator><name pos:start="233:18" pos:end="233:19">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="237:5" pos:end="237:19">/* Music CRC */</comment>

    <expr_stmt pos:start="239:5" pos:end="239:21"><expr pos:start="239:5" pos:end="239:20"><call pos:start="239:5" pos:end="239:20"><name pos:start="239:5" pos:end="239:13">avio_rb16</name><argument_list pos:start="239:14" pos:end="239:20">(<argument pos:start="239:15" pos:end="239:19"><expr pos:start="239:15" pos:end="239:19"><name pos:start="239:15" pos:end="239:19"><name pos:start="239:15" pos:end="239:15">s</name><operator pos:start="239:16" pos:end="239:17">-&gt;</operator><name pos:start="239:18" pos:end="239:19">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="243:5" pos:end="243:22">/* Info Tag CRC */</comment>

    <expr_stmt pos:start="245:5" pos:end="245:35"><expr pos:start="245:5" pos:end="245:34"><name pos:start="245:5" pos:end="245:7">crc</name> <operator pos:start="245:9" pos:end="245:9">=</operator> <call pos:start="245:11" pos:end="245:34"><name pos:start="245:11" pos:end="245:27">ffio_get_checksum</name><argument_list pos:start="245:28" pos:end="245:34">(<argument pos:start="245:29" pos:end="245:33"><expr pos:start="245:29" pos:end="245:33"><name pos:start="245:29" pos:end="245:33"><name pos:start="245:29" pos:end="245:29">s</name><operator pos:start="245:30" pos:end="245:31">-&gt;</operator><name pos:start="245:32" pos:end="245:33">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="247:5" pos:end="247:27"><expr pos:start="247:5" pos:end="247:26"><name pos:start="247:5" pos:end="247:5">v</name>   <operator pos:start="247:9" pos:end="247:9">=</operator> <call pos:start="247:11" pos:end="247:26"><name pos:start="247:11" pos:end="247:19">avio_rb16</name><argument_list pos:start="247:20" pos:end="247:26">(<argument pos:start="247:21" pos:end="247:25"><expr pos:start="247:21" pos:end="247:25"><name pos:start="247:21" pos:end="247:25"><name pos:start="247:21" pos:end="247:21">s</name><operator pos:start="247:22" pos:end="247:23">-&gt;</operator><name pos:start="247:24" pos:end="247:25">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="251:5" pos:end="257:5"><if pos:start="251:5" pos:end="257:5">if <condition pos:start="251:8" pos:end="251:17">(<expr pos:start="251:9" pos:end="251:16"><name pos:start="251:9" pos:end="251:9">v</name> <operator pos:start="251:11" pos:end="251:12">==</operator> <name pos:start="251:14" pos:end="251:16">crc</name></expr>)</condition> <block pos:start="251:19" pos:end="257:5">{<block_content pos:start="253:9" pos:end="255:58">

        <expr_stmt pos:start="253:9" pos:end="253:62"><expr pos:start="253:9" pos:end="253:61"><call pos:start="253:9" pos:end="253:61"><name pos:start="253:9" pos:end="253:32">ff_replaygain_export_raw</name><argument_list pos:start="253:33" pos:end="253:61">(<argument pos:start="253:34" pos:end="253:35"><expr pos:start="253:34" pos:end="253:35"><name pos:start="253:34" pos:end="253:35">st</name></expr></argument>, <argument pos:start="253:38" pos:end="253:43"><expr pos:start="253:38" pos:end="253:43"><name pos:start="253:38" pos:end="253:43">r_gain</name></expr></argument>, <argument pos:start="253:46" pos:end="253:49"><expr pos:start="253:46" pos:end="253:49"><name pos:start="253:46" pos:end="253:49">peak</name></expr></argument>, <argument pos:start="253:52" pos:end="253:57"><expr pos:start="253:52" pos:end="253:57"><name pos:start="253:52" pos:end="253:57">a_gain</name></expr></argument>, <argument pos:start="253:60" pos:end="253:60"><expr pos:start="253:60" pos:end="253:60"><literal type="number" pos:start="253:60" pos:end="253:60">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="255:9" pos:end="255:58"><expr pos:start="255:9" pos:end="255:57"><call pos:start="255:9" pos:end="255:57"><name pos:start="255:9" pos:end="255:19">av_dict_set</name><argument_list pos:start="255:20" pos:end="255:57">(<argument pos:start="255:21" pos:end="255:33"><expr pos:start="255:21" pos:end="255:33"><operator pos:start="255:21" pos:end="255:21">&amp;</operator><name pos:start="255:22" pos:end="255:33"><name pos:start="255:22" pos:end="255:23">st</name><operator pos:start="255:24" pos:end="255:25">-&gt;</operator><name pos:start="255:26" pos:end="255:33">metadata</name></name></expr></argument>, <argument pos:start="255:36" pos:end="255:44"><expr pos:start="255:36" pos:end="255:44"><literal type="string" pos:start="255:36" pos:end="255:44">"encoder"</literal></expr></argument>, <argument pos:start="255:47" pos:end="255:53"><expr pos:start="255:47" pos:end="255:53"><name pos:start="255:47" pos:end="255:53">version</name></expr></argument>, <argument pos:start="255:56" pos:end="255:56"><expr pos:start="255:56" pos:end="255:56"><literal type="number" pos:start="255:56" pos:end="255:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
