<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1228.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:15"><name pos:start="1:1" pos:end="1:8">uint64_t</name> <name pos:start="1:10" pos:end="1:15">HELPER</name></type>(<name pos:start="1:17" pos:end="1:20">diag</name>)<parameter_list pos:start="1:22" pos:end="3:36">(<parameter pos:start="1:23" pos:end="1:40"><decl pos:start="1:23" pos:end="1:40"><type pos:start="1:23" pos:end="1:40"><name pos:start="1:23" pos:end="1:35">CPUS390XState</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">env</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:54"><decl pos:start="1:43" pos:end="1:54"><type pos:start="1:43" pos:end="1:54"><name pos:start="1:43" pos:end="1:50">uint32_t</name></type> <name pos:start="1:52" pos:end="1:54">num</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:68"><decl pos:start="1:57" pos:end="1:68"><type pos:start="1:57" pos:end="1:68"><name pos:start="1:57" pos:end="1:64">uint64_t</name></type> <name pos:start="1:66" pos:end="1:68">mem</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:35"><decl pos:start="3:23" pos:end="3:35"><type pos:start="3:23" pos:end="3:35"><name pos:start="3:23" pos:end="3:30">uint64_t</name></type> <name pos:start="3:32" pos:end="3:35">code</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="57:1">{<block_content pos:start="7:5" pos:end="55:13">

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:14">r</name></decl>;</decl_stmt>



    <switch pos:start="11:5" pos:end="43:5">switch <condition pos:start="11:12" pos:end="11:16">(<expr pos:start="11:13" pos:end="11:15"><name pos:start="11:13" pos:end="11:15">num</name></expr>)</condition> <block pos:start="11:18" pos:end="43:5">{<block_content pos:start="13:5" pos:end="41:14">

    <case pos:start="13:5" pos:end="13:15">case <expr pos:start="13:10" pos:end="13:14"><literal type="number" pos:start="13:10" pos:end="13:14">0x500</literal></expr>:</case>

        <comment type="block" pos:start="15:9" pos:end="15:27">/* KVM hypercall */</comment>

        <expr_stmt pos:start="17:9" pos:end="17:39"><expr pos:start="17:9" pos:end="17:38"><name pos:start="17:9" pos:end="17:9">r</name> <operator pos:start="17:11" pos:end="17:11">=</operator> <call pos:start="17:13" pos:end="17:38"><name pos:start="17:13" pos:end="17:33">s390_virtio_hypercall</name><argument_list pos:start="17:34" pos:end="17:38">(<argument pos:start="17:35" pos:end="17:37"><expr pos:start="17:35" pos:end="17:37"><name pos:start="17:35" pos:end="17:37">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="19:9" pos:end="19:14">break;</break>

    <case pos:start="21:5" pos:end="21:14">case <expr pos:start="21:10" pos:end="21:13"><literal type="number" pos:start="21:10" pos:end="21:13">0x44</literal></expr>:</case>

        <comment type="block" pos:start="23:9" pos:end="23:19">/* yield */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:14"><expr pos:start="25:9" pos:end="25:13"><name pos:start="25:9" pos:end="25:9">r</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <literal type="number" pos:start="25:13" pos:end="25:13">0</literal></expr>;</expr_stmt>

        <break pos:start="27:9" pos:end="27:14">break;</break>

    <case pos:start="29:5" pos:end="29:15">case <expr pos:start="29:10" pos:end="29:14"><literal type="number" pos:start="29:10" pos:end="29:14">0x308</literal></expr>:</case>

        <comment type="block" pos:start="31:9" pos:end="31:17">/* ipl */</comment>

        <expr_stmt pos:start="33:9" pos:end="33:14"><expr pos:start="33:9" pos:end="33:13"><name pos:start="33:9" pos:end="33:9">r</name> <operator pos:start="33:11" pos:end="33:11">=</operator> <literal type="number" pos:start="33:13" pos:end="33:13">0</literal></expr>;</expr_stmt>

        <break pos:start="35:9" pos:end="35:14">break;</break>

    <default pos:start="37:5" pos:end="37:12">default:</default>

        <expr_stmt pos:start="39:9" pos:end="39:15"><expr pos:start="39:9" pos:end="39:14"><name pos:start="39:9" pos:end="39:9">r</name> <operator pos:start="39:11" pos:end="39:11">=</operator> <operator pos:start="39:13" pos:end="39:13">-</operator><literal type="number" pos:start="39:14" pos:end="39:14">1</literal></expr>;</expr_stmt>

        <break pos:start="41:9" pos:end="41:14">break;</break>

    </block_content>}</block></switch>



    <if_stmt pos:start="47:5" pos:end="51:5"><if pos:start="47:5" pos:end="51:5">if <condition pos:start="47:8" pos:end="47:10">(<expr pos:start="47:9" pos:end="47:9"><name pos:start="47:9" pos:end="47:9">r</name></expr>)</condition> <block pos:start="47:12" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:62">

        <expr_stmt pos:start="49:9" pos:end="49:62"><expr pos:start="49:9" pos:end="49:61"><call pos:start="49:9" pos:end="49:61"><name pos:start="49:9" pos:end="49:25">program_interrupt</name><argument_list pos:start="49:26" pos:end="49:61">(<argument pos:start="49:27" pos:end="49:29"><expr pos:start="49:27" pos:end="49:29"><name pos:start="49:27" pos:end="49:29">env</name></expr></argument>, <argument pos:start="49:32" pos:end="49:44"><expr pos:start="49:32" pos:end="49:44"><name pos:start="49:32" pos:end="49:44">PGM_OPERATION</name></expr></argument>, <argument pos:start="49:47" pos:end="49:60"><expr pos:start="49:47" pos:end="49:60"><name pos:start="49:47" pos:end="49:60">ILEN_LATER_INC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="55:5" pos:end="55:13">return <expr pos:start="55:12" pos:end="55:12"><name pos:start="55:12" pos:end="55:12">r</name></expr>;</return>

</block_content>}</block></function>
</unit>
