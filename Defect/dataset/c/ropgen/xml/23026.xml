<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23026.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:24">ff_h261_loop_filter</name><parameter_list pos:start="1:25" pos:end="1:41">(<parameter pos:start="1:26" pos:end="1:40"><decl pos:start="1:26" pos:end="1:40"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:36">H261Context</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type> <name pos:start="1:40" pos:end="1:40">h</name></decl></parameter>)</parameter_list><block pos:start="1:42" pos:end="93:1">{<block_content pos:start="3:5" pos:end="91:11">

    <decl_stmt pos:start="3:5" pos:end="3:37"><decl pos:start="3:5" pos:end="3:36"><type pos:start="3:5" pos:end="3:26"><name pos:start="3:5" pos:end="3:18">MpegEncContext</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier> <specifier pos:start="3:22" pos:end="3:26">const</specifier></type> <name pos:start="3:28" pos:end="3:28">s</name> <init pos:start="3:30" pos:end="3:36">= <expr pos:start="3:32" pos:end="3:36"><operator pos:start="3:32" pos:end="3:32">&amp;</operator><name pos:start="3:33" pos:end="3:36"><name pos:start="3:33" pos:end="3:33">h</name><operator pos:start="3:34" pos:end="3:35">-&gt;</operator><name pos:start="3:36" pos:end="3:36">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:22">linesize</name>  <init pos:start="7:25" pos:end="7:37">= <expr pos:start="7:27" pos:end="7:37"><name pos:start="7:27" pos:end="7:37"><name pos:start="7:27" pos:end="7:27">s</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:37">linesize</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:40"><decl pos:start="9:5" pos:end="9:39"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:24">uvlinesize</name><init pos:start="9:25" pos:end="9:39">= <expr pos:start="9:27" pos:end="9:39"><name pos:start="9:27" pos:end="9:39"><name pos:start="9:27" pos:end="9:27">s</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:39">uvlinesize</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:32"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:19">dest_y</name> <init pos:start="11:21" pos:end="11:32">= <expr pos:start="11:23" pos:end="11:32"><name pos:start="11:23" pos:end="11:32"><name pos:start="11:23" pos:end="11:23">s</name><operator pos:start="11:24" pos:end="11:25">-&gt;</operator><name pos:start="11:26" pos:end="11:29">dest</name><index pos:start="11:30" pos:end="11:32">[<expr pos:start="11:31" pos:end="11:31"><literal type="number" pos:start="11:31" pos:end="11:31">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:33"><decl pos:start="13:5" pos:end="13:32"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:20">dest_cb</name><init pos:start="13:21" pos:end="13:32">= <expr pos:start="13:23" pos:end="13:32"><name pos:start="13:23" pos:end="13:32"><name pos:start="13:23" pos:end="13:23">s</name><operator pos:start="13:24" pos:end="13:25">-&gt;</operator><name pos:start="13:26" pos:end="13:29">dest</name><index pos:start="13:30" pos:end="13:32">[<expr pos:start="13:31" pos:end="13:31"><literal type="number" pos:start="13:31" pos:end="13:31">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:33"><decl pos:start="15:5" pos:end="15:32"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">uint8_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:20">dest_cr</name><init pos:start="15:21" pos:end="15:32">= <expr pos:start="15:23" pos:end="15:32"><name pos:start="15:23" pos:end="15:32"><name pos:start="15:23" pos:end="15:23">s</name><operator pos:start="15:24" pos:end="15:25">-&gt;</operator><name pos:start="15:26" pos:end="15:29">dest</name><index pos:start="15:30" pos:end="15:32">[<expr pos:start="15:31" pos:end="15:31"><literal type="number" pos:start="15:31" pos:end="15:31">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">uint8_t</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:16">src</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:48"><expr pos:start="21:5" pos:end="21:47"><call pos:start="21:5" pos:end="21:47"><name pos:start="21:5" pos:end="21:18">CHECKED_ALLOCZ</name><argument_list pos:start="21:19" pos:end="21:47">(<argument pos:start="21:20" pos:end="21:24"><expr pos:start="21:20" pos:end="21:24"><operator pos:start="21:20" pos:end="21:20">(</operator><name pos:start="21:21" pos:end="21:23">src</name><operator pos:start="21:24" pos:end="21:24">)</operator></expr></argument>,<argument pos:start="21:26" pos:end="21:45"><expr pos:start="21:26" pos:end="21:45"><sizeof pos:start="21:26" pos:end="21:40">sizeof<argument_list pos:start="21:32" pos:end="21:40">(<argument pos:start="21:33" pos:end="21:39"><expr pos:start="21:33" pos:end="21:39"><name pos:start="21:33" pos:end="21:39">uint8_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="21:42" pos:end="21:42">*</operator> <literal type="number" pos:start="21:44" pos:end="21:45">64</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>



    <for pos:start="25:5" pos:end="27:63">for<control pos:start="25:8" pos:end="25:21">(<init pos:start="25:9" pos:end="25:12"><expr pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:9">i</name><operator pos:start="25:10" pos:end="25:10">=</operator><literal type="number" pos:start="25:11" pos:end="25:11">0</literal></expr>;</init> <condition pos:start="25:14" pos:end="25:17"><expr pos:start="25:14" pos:end="25:16"><name pos:start="25:14" pos:end="25:14">i</name><operator pos:start="25:15" pos:end="25:15">&lt;</operator><literal type="number" pos:start="25:16" pos:end="25:16">8</literal></expr>;</condition><incr pos:start="25:18" pos:end="25:20"><expr pos:start="25:18" pos:end="25:20"><name pos:start="25:18" pos:end="25:18">i</name><operator pos:start="25:19" pos:end="25:20">++</operator></expr></incr>)</control><block type="pseudo" pos:start="27:9" pos:end="27:63"><block_content pos:start="27:9" pos:end="27:63">

        <expr_stmt pos:start="27:9" pos:end="27:63"><expr pos:start="27:9" pos:end="27:62"><call pos:start="27:9" pos:end="27:62"><name pos:start="27:9" pos:end="27:14">memcpy</name><argument_list pos:start="27:15" pos:end="27:62">(<argument pos:start="27:16" pos:end="27:22"><expr pos:start="27:16" pos:end="27:22"><name pos:start="27:16" pos:end="27:18">src</name><operator pos:start="27:19" pos:end="27:19">+</operator><name pos:start="27:20" pos:end="27:20">i</name><operator pos:start="27:21" pos:end="27:21">*</operator><literal type="number" pos:start="27:22" pos:end="27:22">8</literal></expr></argument>,<argument pos:start="27:24" pos:end="27:40"><expr pos:start="27:24" pos:end="27:40"><name pos:start="27:24" pos:end="27:29">dest_y</name><operator pos:start="27:30" pos:end="27:30">+</operator><name pos:start="27:31" pos:end="27:31">i</name><operator pos:start="27:32" pos:end="27:32">*</operator><name pos:start="27:33" pos:end="27:40">linesize</name></expr></argument>,<argument pos:start="27:42" pos:end="27:60"><expr pos:start="27:42" pos:end="27:60"><sizeof pos:start="27:42" pos:end="27:56">sizeof<argument_list pos:start="27:48" pos:end="27:56">(<argument pos:start="27:49" pos:end="27:55"><expr pos:start="27:49" pos:end="27:55"><name pos:start="27:49" pos:end="27:55">uint8_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="27:58" pos:end="27:58">*</operator> <literal type="number" pos:start="27:60" pos:end="27:60">8</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="29:5" pos:end="29:53"><expr pos:start="29:5" pos:end="29:52"><call pos:start="29:5" pos:end="29:52"><name pos:start="29:5" pos:end="29:29"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:10">dsp</name><operator pos:start="29:11" pos:end="29:11">.</operator><name pos:start="29:12" pos:end="29:29">h261_v_loop_filter</name></name><argument_list pos:start="29:30" pos:end="29:52">(<argument pos:start="29:31" pos:end="29:36"><expr pos:start="29:31" pos:end="29:36"><name pos:start="29:31" pos:end="29:36">dest_y</name></expr></argument>, <argument pos:start="29:39" pos:end="29:41"><expr pos:start="29:39" pos:end="29:41"><name pos:start="29:39" pos:end="29:41">src</name></expr></argument>, <argument pos:start="29:44" pos:end="29:51"><expr pos:start="29:44" pos:end="29:51"><name pos:start="29:44" pos:end="29:51">linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:53"><expr pos:start="31:5" pos:end="31:52"><call pos:start="31:5" pos:end="31:52"><name pos:start="31:5" pos:end="31:29"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:10">dsp</name><operator pos:start="31:11" pos:end="31:11">.</operator><name pos:start="31:12" pos:end="31:29">h261_h_loop_filter</name></name><argument_list pos:start="31:30" pos:end="31:52">(<argument pos:start="31:31" pos:end="31:36"><expr pos:start="31:31" pos:end="31:36"><name pos:start="31:31" pos:end="31:36">dest_y</name></expr></argument>, <argument pos:start="31:39" pos:end="31:41"><expr pos:start="31:39" pos:end="31:41"><name pos:start="31:39" pos:end="31:41">src</name></expr></argument>, <argument pos:start="31:44" pos:end="31:51"><expr pos:start="31:44" pos:end="31:51"><name pos:start="31:44" pos:end="31:51">linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="35:5" pos:end="37:67">for<control pos:start="35:8" pos:end="35:21">(<init pos:start="35:9" pos:end="35:12"><expr pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:9">i</name><operator pos:start="35:10" pos:end="35:10">=</operator><literal type="number" pos:start="35:11" pos:end="35:11">0</literal></expr>;</init> <condition pos:start="35:14" pos:end="35:17"><expr pos:start="35:14" pos:end="35:16"><name pos:start="35:14" pos:end="35:14">i</name><operator pos:start="35:15" pos:end="35:15">&lt;</operator><literal type="number" pos:start="35:16" pos:end="35:16">8</literal></expr>;</condition><incr pos:start="35:18" pos:end="35:20"><expr pos:start="35:18" pos:end="35:20"><name pos:start="35:18" pos:end="35:18">i</name><operator pos:start="35:19" pos:end="35:20">++</operator></expr></incr>)</control><block type="pseudo" pos:start="37:9" pos:end="37:67"><block_content pos:start="37:9" pos:end="37:67">

        <expr_stmt pos:start="37:9" pos:end="37:67"><expr pos:start="37:9" pos:end="37:66"><call pos:start="37:9" pos:end="37:66"><name pos:start="37:9" pos:end="37:14">memcpy</name><argument_list pos:start="37:15" pos:end="37:66">(<argument pos:start="37:16" pos:end="37:22"><expr pos:start="37:16" pos:end="37:22"><name pos:start="37:16" pos:end="37:18">src</name><operator pos:start="37:19" pos:end="37:19">+</operator><name pos:start="37:20" pos:end="37:20">i</name><operator pos:start="37:21" pos:end="37:21">*</operator><literal type="number" pos:start="37:22" pos:end="37:22">8</literal></expr></argument>,<argument pos:start="37:24" pos:end="37:44"><expr pos:start="37:24" pos:end="37:44"><name pos:start="37:24" pos:end="37:29">dest_y</name><operator pos:start="37:30" pos:end="37:30">+</operator><name pos:start="37:31" pos:end="37:31">i</name><operator pos:start="37:32" pos:end="37:32">*</operator><name pos:start="37:33" pos:end="37:40">linesize</name> <operator pos:start="37:42" pos:end="37:42">+</operator> <literal type="number" pos:start="37:44" pos:end="37:44">8</literal></expr></argument>,<argument pos:start="37:46" pos:end="37:64"><expr pos:start="37:46" pos:end="37:64"><sizeof pos:start="37:46" pos:end="37:60">sizeof<argument_list pos:start="37:52" pos:end="37:60">(<argument pos:start="37:53" pos:end="37:59"><expr pos:start="37:53" pos:end="37:59"><name pos:start="37:53" pos:end="37:59">uint8_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="37:62" pos:end="37:62">*</operator> <literal type="number" pos:start="37:64" pos:end="37:64">8</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="39:5" pos:end="39:57"><expr pos:start="39:5" pos:end="39:56"><call pos:start="39:5" pos:end="39:56"><name pos:start="39:5" pos:end="39:29"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:10">dsp</name><operator pos:start="39:11" pos:end="39:11">.</operator><name pos:start="39:12" pos:end="39:29">h261_v_loop_filter</name></name><argument_list pos:start="39:30" pos:end="39:56">(<argument pos:start="39:31" pos:end="39:40"><expr pos:start="39:31" pos:end="39:40"><name pos:start="39:31" pos:end="39:36">dest_y</name> <operator pos:start="39:38" pos:end="39:38">+</operator> <literal type="number" pos:start="39:40" pos:end="39:40">8</literal></expr></argument>, <argument pos:start="39:43" pos:end="39:45"><expr pos:start="39:43" pos:end="39:45"><name pos:start="39:43" pos:end="39:45">src</name></expr></argument>, <argument pos:start="39:48" pos:end="39:55"><expr pos:start="39:48" pos:end="39:55"><name pos:start="39:48" pos:end="39:55">linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:57"><expr pos:start="41:5" pos:end="41:56"><call pos:start="41:5" pos:end="41:56"><name pos:start="41:5" pos:end="41:29"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:10">dsp</name><operator pos:start="41:11" pos:end="41:11">.</operator><name pos:start="41:12" pos:end="41:29">h261_h_loop_filter</name></name><argument_list pos:start="41:30" pos:end="41:56">(<argument pos:start="41:31" pos:end="41:40"><expr pos:start="41:31" pos:end="41:40"><name pos:start="41:31" pos:end="41:36">dest_y</name> <operator pos:start="41:38" pos:end="41:38">+</operator> <literal type="number" pos:start="41:40" pos:end="41:40">8</literal></expr></argument>, <argument pos:start="41:43" pos:end="41:45"><expr pos:start="41:43" pos:end="41:45"><name pos:start="41:43" pos:end="41:45">src</name></expr></argument>, <argument pos:start="41:48" pos:end="41:55"><expr pos:start="41:48" pos:end="41:55"><name pos:start="41:48" pos:end="41:55">linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="45:5" pos:end="47:67">for<control pos:start="45:8" pos:end="45:21">(<init pos:start="45:9" pos:end="45:12"><expr pos:start="45:9" pos:end="45:11"><name pos:start="45:9" pos:end="45:9">i</name><operator pos:start="45:10" pos:end="45:10">=</operator><literal type="number" pos:start="45:11" pos:end="45:11">0</literal></expr>;</init> <condition pos:start="45:14" pos:end="45:17"><expr pos:start="45:14" pos:end="45:16"><name pos:start="45:14" pos:end="45:14">i</name><operator pos:start="45:15" pos:end="45:15">&lt;</operator><literal type="number" pos:start="45:16" pos:end="45:16">8</literal></expr>;</condition><incr pos:start="45:18" pos:end="45:20"><expr pos:start="45:18" pos:end="45:20"><name pos:start="45:18" pos:end="45:18">i</name><operator pos:start="45:19" pos:end="45:20">++</operator></expr></incr>)</control><block type="pseudo" pos:start="47:9" pos:end="47:67"><block_content pos:start="47:9" pos:end="47:67">

        <expr_stmt pos:start="47:9" pos:end="47:67"><expr pos:start="47:9" pos:end="47:66"><call pos:start="47:9" pos:end="47:66"><name pos:start="47:9" pos:end="47:14">memcpy</name><argument_list pos:start="47:15" pos:end="47:66">(<argument pos:start="47:16" pos:end="47:22"><expr pos:start="47:16" pos:end="47:22"><name pos:start="47:16" pos:end="47:18">src</name><operator pos:start="47:19" pos:end="47:19">+</operator><name pos:start="47:20" pos:end="47:20">i</name><operator pos:start="47:21" pos:end="47:21">*</operator><literal type="number" pos:start="47:22" pos:end="47:22">8</literal></expr></argument>,<argument pos:start="47:24" pos:end="47:44"><expr pos:start="47:24" pos:end="47:44"><name pos:start="47:24" pos:end="47:29">dest_y</name><operator pos:start="47:30" pos:end="47:30">+</operator><operator pos:start="47:31" pos:end="47:31">(</operator><name pos:start="47:32" pos:end="47:32">i</name><operator pos:start="47:33" pos:end="47:33">+</operator><literal type="number" pos:start="47:34" pos:end="47:34">8</literal><operator pos:start="47:35" pos:end="47:35">)</operator><operator pos:start="47:36" pos:end="47:36">*</operator><name pos:start="47:37" pos:end="47:44">linesize</name></expr></argument>,<argument pos:start="47:46" pos:end="47:64"><expr pos:start="47:46" pos:end="47:64"><sizeof pos:start="47:46" pos:end="47:60">sizeof<argument_list pos:start="47:52" pos:end="47:60">(<argument pos:start="47:53" pos:end="47:59"><expr pos:start="47:53" pos:end="47:59"><name pos:start="47:53" pos:end="47:59">uint8_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="47:62" pos:end="47:62">*</operator> <literal type="number" pos:start="47:64" pos:end="47:64">8</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="49:5" pos:end="49:68"><expr pos:start="49:5" pos:end="49:67"><call pos:start="49:5" pos:end="49:67"><name pos:start="49:5" pos:end="49:29"><name pos:start="49:5" pos:end="49:5">s</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:10">dsp</name><operator pos:start="49:11" pos:end="49:11">.</operator><name pos:start="49:12" pos:end="49:29">h261_v_loop_filter</name></name><argument_list pos:start="49:30" pos:end="49:67">(<argument pos:start="49:31" pos:end="49:51"><expr pos:start="49:31" pos:end="49:51"><name pos:start="49:31" pos:end="49:36">dest_y</name> <operator pos:start="49:38" pos:end="49:38">+</operator> <literal type="number" pos:start="49:40" pos:end="49:40">8</literal> <operator pos:start="49:42" pos:end="49:42">*</operator> <name pos:start="49:44" pos:end="49:51">linesize</name></expr></argument>, <argument pos:start="49:54" pos:end="49:56"><expr pos:start="49:54" pos:end="49:56"><name pos:start="49:54" pos:end="49:56">src</name></expr></argument>, <argument pos:start="49:59" pos:end="49:66"><expr pos:start="49:59" pos:end="49:66"><name pos:start="49:59" pos:end="49:66">linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:68"><expr pos:start="51:5" pos:end="51:67"><call pos:start="51:5" pos:end="51:67"><name pos:start="51:5" pos:end="51:29"><name pos:start="51:5" pos:end="51:5">s</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:10">dsp</name><operator pos:start="51:11" pos:end="51:11">.</operator><name pos:start="51:12" pos:end="51:29">h261_h_loop_filter</name></name><argument_list pos:start="51:30" pos:end="51:67">(<argument pos:start="51:31" pos:end="51:51"><expr pos:start="51:31" pos:end="51:51"><name pos:start="51:31" pos:end="51:36">dest_y</name> <operator pos:start="51:38" pos:end="51:38">+</operator> <literal type="number" pos:start="51:40" pos:end="51:40">8</literal> <operator pos:start="51:42" pos:end="51:42">*</operator> <name pos:start="51:44" pos:end="51:51">linesize</name></expr></argument>, <argument pos:start="51:54" pos:end="51:56"><expr pos:start="51:54" pos:end="51:56"><name pos:start="51:54" pos:end="51:56">src</name></expr></argument>, <argument pos:start="51:59" pos:end="51:66"><expr pos:start="51:59" pos:end="51:66"><name pos:start="51:59" pos:end="51:66">linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="55:5" pos:end="57:71">for<control pos:start="55:8" pos:end="55:21">(<init pos:start="55:9" pos:end="55:12"><expr pos:start="55:9" pos:end="55:11"><name pos:start="55:9" pos:end="55:9">i</name><operator pos:start="55:10" pos:end="55:10">=</operator><literal type="number" pos:start="55:11" pos:end="55:11">0</literal></expr>;</init> <condition pos:start="55:14" pos:end="55:17"><expr pos:start="55:14" pos:end="55:16"><name pos:start="55:14" pos:end="55:14">i</name><operator pos:start="55:15" pos:end="55:15">&lt;</operator><literal type="number" pos:start="55:16" pos:end="55:16">8</literal></expr>;</condition><incr pos:start="55:18" pos:end="55:20"><expr pos:start="55:18" pos:end="55:20"><name pos:start="55:18" pos:end="55:18">i</name><operator pos:start="55:19" pos:end="55:20">++</operator></expr></incr>)</control><block type="pseudo" pos:start="57:9" pos:end="57:71"><block_content pos:start="57:9" pos:end="57:71">

        <expr_stmt pos:start="57:9" pos:end="57:71"><expr pos:start="57:9" pos:end="57:70"><call pos:start="57:9" pos:end="57:70"><name pos:start="57:9" pos:end="57:14">memcpy</name><argument_list pos:start="57:15" pos:end="57:70">(<argument pos:start="57:16" pos:end="57:22"><expr pos:start="57:16" pos:end="57:22"><name pos:start="57:16" pos:end="57:18">src</name><operator pos:start="57:19" pos:end="57:19">+</operator><name pos:start="57:20" pos:end="57:20">i</name><operator pos:start="57:21" pos:end="57:21">*</operator><literal type="number" pos:start="57:22" pos:end="57:22">8</literal></expr></argument>,<argument pos:start="57:24" pos:end="57:48"><expr pos:start="57:24" pos:end="57:48"><name pos:start="57:24" pos:end="57:29">dest_y</name><operator pos:start="57:30" pos:end="57:30">+</operator><operator pos:start="57:31" pos:end="57:31">(</operator><name pos:start="57:32" pos:end="57:32">i</name><operator pos:start="57:33" pos:end="57:33">+</operator><literal type="number" pos:start="57:34" pos:end="57:34">8</literal><operator pos:start="57:35" pos:end="57:35">)</operator><operator pos:start="57:36" pos:end="57:36">*</operator><name pos:start="57:37" pos:end="57:44">linesize</name> <operator pos:start="57:46" pos:end="57:46">+</operator> <literal type="number" pos:start="57:48" pos:end="57:48">8</literal></expr></argument>,<argument pos:start="57:50" pos:end="57:68"><expr pos:start="57:50" pos:end="57:68"><sizeof pos:start="57:50" pos:end="57:64">sizeof<argument_list pos:start="57:56" pos:end="57:64">(<argument pos:start="57:57" pos:end="57:63"><expr pos:start="57:57" pos:end="57:63"><name pos:start="57:57" pos:end="57:63">uint8_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="57:66" pos:end="57:66">*</operator> <literal type="number" pos:start="57:68" pos:end="57:68">8</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="59:5" pos:end="59:72"><expr pos:start="59:5" pos:end="59:71"><call pos:start="59:5" pos:end="59:71"><name pos:start="59:5" pos:end="59:29"><name pos:start="59:5" pos:end="59:5">s</name><operator pos:start="59:6" pos:end="59:7">-&gt;</operator><name pos:start="59:8" pos:end="59:10">dsp</name><operator pos:start="59:11" pos:end="59:11">.</operator><name pos:start="59:12" pos:end="59:29">h261_v_loop_filter</name></name><argument_list pos:start="59:30" pos:end="59:71">(<argument pos:start="59:31" pos:end="59:55"><expr pos:start="59:31" pos:end="59:55"><name pos:start="59:31" pos:end="59:36">dest_y</name> <operator pos:start="59:38" pos:end="59:38">+</operator> <literal type="number" pos:start="59:40" pos:end="59:40">8</literal> <operator pos:start="59:42" pos:end="59:42">*</operator> <name pos:start="59:44" pos:end="59:51">linesize</name> <operator pos:start="59:53" pos:end="59:53">+</operator> <literal type="number" pos:start="59:55" pos:end="59:55">8</literal></expr></argument>, <argument pos:start="59:58" pos:end="59:60"><expr pos:start="59:58" pos:end="59:60"><name pos:start="59:58" pos:end="59:60">src</name></expr></argument>, <argument pos:start="59:63" pos:end="59:70"><expr pos:start="59:63" pos:end="59:70"><name pos:start="59:63" pos:end="59:70">linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:72"><expr pos:start="61:5" pos:end="61:71"><call pos:start="61:5" pos:end="61:71"><name pos:start="61:5" pos:end="61:29"><name pos:start="61:5" pos:end="61:5">s</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:10">dsp</name><operator pos:start="61:11" pos:end="61:11">.</operator><name pos:start="61:12" pos:end="61:29">h261_h_loop_filter</name></name><argument_list pos:start="61:30" pos:end="61:71">(<argument pos:start="61:31" pos:end="61:55"><expr pos:start="61:31" pos:end="61:55"><name pos:start="61:31" pos:end="61:36">dest_y</name> <operator pos:start="61:38" pos:end="61:38">+</operator> <literal type="number" pos:start="61:40" pos:end="61:40">8</literal> <operator pos:start="61:42" pos:end="61:42">*</operator> <name pos:start="61:44" pos:end="61:51">linesize</name> <operator pos:start="61:53" pos:end="61:53">+</operator> <literal type="number" pos:start="61:55" pos:end="61:55">8</literal></expr></argument>, <argument pos:start="61:58" pos:end="61:60"><expr pos:start="61:58" pos:end="61:60"><name pos:start="61:58" pos:end="61:60">src</name></expr></argument>, <argument pos:start="61:63" pos:end="61:70"><expr pos:start="61:63" pos:end="61:70"><name pos:start="61:63" pos:end="61:70">linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="65:5" pos:end="67:66">for<control pos:start="65:8" pos:end="65:21">(<init pos:start="65:9" pos:end="65:12"><expr pos:start="65:9" pos:end="65:11"><name pos:start="65:9" pos:end="65:9">i</name><operator pos:start="65:10" pos:end="65:10">=</operator><literal type="number" pos:start="65:11" pos:end="65:11">0</literal></expr>;</init> <condition pos:start="65:14" pos:end="65:17"><expr pos:start="65:14" pos:end="65:16"><name pos:start="65:14" pos:end="65:14">i</name><operator pos:start="65:15" pos:end="65:15">&lt;</operator><literal type="number" pos:start="65:16" pos:end="65:16">8</literal></expr>;</condition><incr pos:start="65:18" pos:end="65:20"><expr pos:start="65:18" pos:end="65:20"><name pos:start="65:18" pos:end="65:18">i</name><operator pos:start="65:19" pos:end="65:20">++</operator></expr></incr>)</control><block type="pseudo" pos:start="67:9" pos:end="67:66"><block_content pos:start="67:9" pos:end="67:66">

        <expr_stmt pos:start="67:9" pos:end="67:66"><expr pos:start="67:9" pos:end="67:65"><call pos:start="67:9" pos:end="67:65"><name pos:start="67:9" pos:end="67:14">memcpy</name><argument_list pos:start="67:15" pos:end="67:65">(<argument pos:start="67:16" pos:end="67:22"><expr pos:start="67:16" pos:end="67:22"><name pos:start="67:16" pos:end="67:18">src</name><operator pos:start="67:19" pos:end="67:19">+</operator><name pos:start="67:20" pos:end="67:20">i</name><operator pos:start="67:21" pos:end="67:21">*</operator><literal type="number" pos:start="67:22" pos:end="67:22">8</literal></expr></argument>,<argument pos:start="67:24" pos:end="67:43"><expr pos:start="67:24" pos:end="67:43"><name pos:start="67:24" pos:end="67:30">dest_cb</name><operator pos:start="67:31" pos:end="67:31">+</operator><name pos:start="67:32" pos:end="67:32">i</name><operator pos:start="67:33" pos:end="67:33">*</operator><name pos:start="67:34" pos:end="67:43">uvlinesize</name></expr></argument>,<argument pos:start="67:45" pos:end="67:63"><expr pos:start="67:45" pos:end="67:63"><sizeof pos:start="67:45" pos:end="67:59">sizeof<argument_list pos:start="67:51" pos:end="67:59">(<argument pos:start="67:52" pos:end="67:58"><expr pos:start="67:52" pos:end="67:58"><name pos:start="67:52" pos:end="67:58">uint8_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="67:61" pos:end="67:61">*</operator> <literal type="number" pos:start="67:63" pos:end="67:63">8</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="69:5" pos:end="69:56"><expr pos:start="69:5" pos:end="69:55"><call pos:start="69:5" pos:end="69:55"><name pos:start="69:5" pos:end="69:29"><name pos:start="69:5" pos:end="69:5">s</name><operator pos:start="69:6" pos:end="69:7">-&gt;</operator><name pos:start="69:8" pos:end="69:10">dsp</name><operator pos:start="69:11" pos:end="69:11">.</operator><name pos:start="69:12" pos:end="69:29">h261_v_loop_filter</name></name><argument_list pos:start="69:30" pos:end="69:55">(<argument pos:start="69:31" pos:end="69:37"><expr pos:start="69:31" pos:end="69:37"><name pos:start="69:31" pos:end="69:37">dest_cb</name></expr></argument>, <argument pos:start="69:40" pos:end="69:42"><expr pos:start="69:40" pos:end="69:42"><name pos:start="69:40" pos:end="69:42">src</name></expr></argument>, <argument pos:start="69:45" pos:end="69:54"><expr pos:start="69:45" pos:end="69:54"><name pos:start="69:45" pos:end="69:54">uvlinesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:56"><expr pos:start="71:5" pos:end="71:55"><call pos:start="71:5" pos:end="71:55"><name pos:start="71:5" pos:end="71:29"><name pos:start="71:5" pos:end="71:5">s</name><operator pos:start="71:6" pos:end="71:7">-&gt;</operator><name pos:start="71:8" pos:end="71:10">dsp</name><operator pos:start="71:11" pos:end="71:11">.</operator><name pos:start="71:12" pos:end="71:29">h261_h_loop_filter</name></name><argument_list pos:start="71:30" pos:end="71:55">(<argument pos:start="71:31" pos:end="71:37"><expr pos:start="71:31" pos:end="71:37"><name pos:start="71:31" pos:end="71:37">dest_cb</name></expr></argument>, <argument pos:start="71:40" pos:end="71:42"><expr pos:start="71:40" pos:end="71:42"><name pos:start="71:40" pos:end="71:42">src</name></expr></argument>, <argument pos:start="71:45" pos:end="71:54"><expr pos:start="71:45" pos:end="71:54"><name pos:start="71:45" pos:end="71:54">uvlinesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="75:5" pos:end="77:66">for<control pos:start="75:8" pos:end="75:21">(<init pos:start="75:9" pos:end="75:12"><expr pos:start="75:9" pos:end="75:11"><name pos:start="75:9" pos:end="75:9">i</name><operator pos:start="75:10" pos:end="75:10">=</operator><literal type="number" pos:start="75:11" pos:end="75:11">0</literal></expr>;</init> <condition pos:start="75:14" pos:end="75:17"><expr pos:start="75:14" pos:end="75:16"><name pos:start="75:14" pos:end="75:14">i</name><operator pos:start="75:15" pos:end="75:15">&lt;</operator><literal type="number" pos:start="75:16" pos:end="75:16">8</literal></expr>;</condition><incr pos:start="75:18" pos:end="75:20"><expr pos:start="75:18" pos:end="75:20"><name pos:start="75:18" pos:end="75:18">i</name><operator pos:start="75:19" pos:end="75:20">++</operator></expr></incr>)</control><block type="pseudo" pos:start="77:9" pos:end="77:66"><block_content pos:start="77:9" pos:end="77:66">

        <expr_stmt pos:start="77:9" pos:end="77:66"><expr pos:start="77:9" pos:end="77:65"><call pos:start="77:9" pos:end="77:65"><name pos:start="77:9" pos:end="77:14">memcpy</name><argument_list pos:start="77:15" pos:end="77:65">(<argument pos:start="77:16" pos:end="77:22"><expr pos:start="77:16" pos:end="77:22"><name pos:start="77:16" pos:end="77:18">src</name><operator pos:start="77:19" pos:end="77:19">+</operator><name pos:start="77:20" pos:end="77:20">i</name><operator pos:start="77:21" pos:end="77:21">*</operator><literal type="number" pos:start="77:22" pos:end="77:22">8</literal></expr></argument>,<argument pos:start="77:24" pos:end="77:43"><expr pos:start="77:24" pos:end="77:43"><name pos:start="77:24" pos:end="77:30">dest_cr</name><operator pos:start="77:31" pos:end="77:31">+</operator><name pos:start="77:32" pos:end="77:32">i</name><operator pos:start="77:33" pos:end="77:33">*</operator><name pos:start="77:34" pos:end="77:43">uvlinesize</name></expr></argument>,<argument pos:start="77:45" pos:end="77:63"><expr pos:start="77:45" pos:end="77:63"><sizeof pos:start="77:45" pos:end="77:59">sizeof<argument_list pos:start="77:51" pos:end="77:59">(<argument pos:start="77:52" pos:end="77:58"><expr pos:start="77:52" pos:end="77:58"><name pos:start="77:52" pos:end="77:58">uint8_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="77:61" pos:end="77:61">*</operator> <literal type="number" pos:start="77:63" pos:end="77:63">8</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="79:5" pos:end="79:56"><expr pos:start="79:5" pos:end="79:55"><call pos:start="79:5" pos:end="79:55"><name pos:start="79:5" pos:end="79:29"><name pos:start="79:5" pos:end="79:5">s</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:10">dsp</name><operator pos:start="79:11" pos:end="79:11">.</operator><name pos:start="79:12" pos:end="79:29">h261_v_loop_filter</name></name><argument_list pos:start="79:30" pos:end="79:55">(<argument pos:start="79:31" pos:end="79:37"><expr pos:start="79:31" pos:end="79:37"><name pos:start="79:31" pos:end="79:37">dest_cr</name></expr></argument>, <argument pos:start="79:40" pos:end="79:42"><expr pos:start="79:40" pos:end="79:42"><name pos:start="79:40" pos:end="79:42">src</name></expr></argument>, <argument pos:start="79:45" pos:end="79:54"><expr pos:start="79:45" pos:end="79:54"><name pos:start="79:45" pos:end="79:54">uvlinesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:56"><expr pos:start="81:5" pos:end="81:55"><call pos:start="81:5" pos:end="81:55"><name pos:start="81:5" pos:end="81:29"><name pos:start="81:5" pos:end="81:5">s</name><operator pos:start="81:6" pos:end="81:7">-&gt;</operator><name pos:start="81:8" pos:end="81:10">dsp</name><operator pos:start="81:11" pos:end="81:11">.</operator><name pos:start="81:12" pos:end="81:29">h261_h_loop_filter</name></name><argument_list pos:start="81:30" pos:end="81:55">(<argument pos:start="81:31" pos:end="81:37"><expr pos:start="81:31" pos:end="81:37"><name pos:start="81:31" pos:end="81:37">dest_cr</name></expr></argument>, <argument pos:start="81:40" pos:end="81:42"><expr pos:start="81:40" pos:end="81:42"><name pos:start="81:40" pos:end="81:42">src</name></expr></argument>, <argument pos:start="81:45" pos:end="81:54"><expr pos:start="81:45" pos:end="81:54"><name pos:start="81:45" pos:end="81:54">uvlinesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="85:1" pos:end="85:5"><name pos:start="85:1" pos:end="85:4">fail</name>:</label>

    <expr_stmt pos:start="87:5" pos:end="87:17"><expr pos:start="87:5" pos:end="87:16"><call pos:start="87:5" pos:end="87:16"><name pos:start="87:5" pos:end="87:11">av_free</name><argument_list pos:start="87:12" pos:end="87:16">(<argument pos:start="87:13" pos:end="87:15"><expr pos:start="87:13" pos:end="87:15"><name pos:start="87:13" pos:end="87:15">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="91:5" pos:end="91:11">return;</return>

</block_content>}</block></function>
</unit>
