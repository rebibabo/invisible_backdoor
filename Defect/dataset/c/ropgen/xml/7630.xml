<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7630.c" pos:tabs="8"><function pos:start="1:1" pos:end="363:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">decode_frame</name><parameter_list pos:start="1:24" pos:end="3:68">(<parameter pos:start="1:25" pos:end="1:45"><decl pos:start="1:25" pos:end="1:45"><type pos:start="1:25" pos:end="1:45"><name pos:start="1:25" pos:end="1:38">AVCodecContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:45">avctx</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:34"><decl pos:start="3:25" pos:end="3:34"><type pos:start="3:25" pos:end="3:34"><name pos:start="3:25" pos:end="3:28">void</name> <modifier pos:start="3:30" pos:end="3:30">*</modifier></type><name pos:start="3:31" pos:end="3:34">data</name></decl></parameter>, <parameter pos:start="3:37" pos:end="3:50"><decl pos:start="3:37" pos:end="3:50"><type pos:start="3:37" pos:end="3:50"><name pos:start="3:37" pos:end="3:39">int</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:50">got_frame</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:67"><decl pos:start="3:53" pos:end="3:67"><type pos:start="3:53" pos:end="3:67"><name pos:start="3:53" pos:end="3:60">AVPacket</name> <modifier pos:start="3:62" pos:end="3:62">*</modifier></type><name pos:start="3:63" pos:end="3:67">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="363:1">{<block_content pos:start="7:5" pos:end="361:23">

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:15">TiffContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier><specifier pos:start="7:18" pos:end="7:22">const</specifier></type> <name pos:start="7:24" pos:end="7:24">s</name> <init pos:start="7:26" pos:end="7:43">= <expr pos:start="7:28" pos:end="7:43"><name pos:start="7:28" pos:end="7:43"><name pos:start="7:28" pos:end="7:32">avctx</name><operator pos:start="7:33" pos:end="7:34">-&gt;</operator><name pos:start="7:35" pos:end="7:43">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:11">AVFrame</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier><specifier pos:start="9:14" pos:end="9:18">const</specifier></type> <name pos:start="9:20" pos:end="9:20">p</name> <init pos:start="9:22" pos:end="9:27">= <expr pos:start="9:24" pos:end="9:27"><name pos:start="9:24" pos:end="9:27">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:38"><decl pos:start="11:5" pos:end="11:37"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:15">ThreadFrame</name></type> <name pos:start="11:17" pos:end="11:21">frame</name> <init pos:start="11:23" pos:end="11:37">= <expr pos:start="11:25" pos:end="11:37"><block pos:start="11:25" pos:end="11:37">{ <expr pos:start="11:27" pos:end="11:35"><operator pos:start="11:27" pos:end="11:27">.</operator><name pos:start="11:28" pos:end="11:28">f</name> <operator pos:start="11:30" pos:end="11:30">=</operator> <name pos:start="11:32" pos:end="11:35">data</name></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">unsigned</name></type> <name pos:start="13:14" pos:end="13:16">off</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:31"><decl pos:start="15:5" pos:end="15:10"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:10">le</name></decl>, <decl pos:start="15:13" pos:end="15:15"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:13" pos:end="15:15">ret</name></decl>, <decl pos:start="15:18" pos:end="15:22"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:18" pos:end="15:22">plane</name></decl>, <decl pos:start="15:25" pos:end="15:30"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:25" pos:end="15:30">planes</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:30"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>, <decl pos:start="17:12" pos:end="17:12"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:12" pos:end="17:12">j</name></decl>, <decl pos:start="17:15" pos:end="17:21"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:15" pos:end="17:21">entries</name></decl>, <decl pos:start="17:24" pos:end="17:29"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:24" pos:end="17:29">stride</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:25"><decl pos:start="19:5" pos:end="19:17"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">unsigned</name></type> <name pos:start="19:14" pos:end="19:17">soff</name></decl>, <decl pos:start="19:20" pos:end="19:24"><type ref="prev" pos:start="19:5" pos:end="19:12"/><name pos:start="19:20" pos:end="19:24">ssize</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:17"><decl pos:start="21:5" pos:end="21:16"><type pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:11">uint8_t</name> <modifier pos:start="21:13" pos:end="21:13">*</modifier></type><name pos:start="21:14" pos:end="21:16">dst</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:30"><decl pos:start="23:5" pos:end="23:29"><type pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:18">GetByteContext</name></type> <name pos:start="23:20" pos:end="23:29">stripsizes</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:29"><decl pos:start="25:5" pos:end="25:28"><type pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:18">GetByteContext</name></type> <name pos:start="25:20" pos:end="25:28">stripdata</name></decl>;</decl_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:55"><expr pos:start="29:5" pos:end="29:54"><call pos:start="29:5" pos:end="29:54"><name pos:start="29:5" pos:end="29:20">bytestream2_init</name><argument_list pos:start="29:21" pos:end="29:54">(<argument pos:start="29:22" pos:end="29:27"><expr pos:start="29:22" pos:end="29:27"><operator pos:start="29:22" pos:end="29:22">&amp;</operator><name pos:start="29:23" pos:end="29:27"><name pos:start="29:23" pos:end="29:23">s</name><operator pos:start="29:24" pos:end="29:25">-&gt;</operator><name pos:start="29:26" pos:end="29:27">gb</name></name></expr></argument>, <argument pos:start="29:30" pos:end="29:40"><expr pos:start="29:30" pos:end="29:40"><name pos:start="29:30" pos:end="29:40"><name pos:start="29:30" pos:end="29:34">avpkt</name><operator pos:start="29:35" pos:end="29:36">-&gt;</operator><name pos:start="29:37" pos:end="29:40">data</name></name></expr></argument>, <argument pos:start="29:43" pos:end="29:53"><expr pos:start="29:43" pos:end="29:53"><name pos:start="29:43" pos:end="29:53"><name pos:start="29:43" pos:end="29:47">avpkt</name><operator pos:start="29:48" pos:end="29:49">-&gt;</operator><name pos:start="29:50" pos:end="29:53">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="33:5" pos:end="33:25">// parse image header</comment>

    <if_stmt pos:start="35:5" pos:end="47:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:53">(<expr pos:start="35:9" pos:end="35:52"><operator pos:start="35:9" pos:end="35:9">(</operator><name pos:start="35:10" pos:end="35:12">ret</name> <operator pos:start="35:14" pos:end="35:14">=</operator> <call pos:start="35:16" pos:end="35:51"><name pos:start="35:16" pos:end="35:32">ff_tdecode_header</name><argument_list pos:start="35:33" pos:end="35:51">(<argument pos:start="35:34" pos:end="35:39"><expr pos:start="35:34" pos:end="35:39"><operator pos:start="35:34" pos:end="35:34">&amp;</operator><name pos:start="35:35" pos:end="35:39"><name pos:start="35:35" pos:end="35:35">s</name><operator pos:start="35:36" pos:end="35:37">-&gt;</operator><name pos:start="35:38" pos:end="35:39">gb</name></name></expr></argument>, <argument pos:start="35:42" pos:end="35:44"><expr pos:start="35:42" pos:end="35:44"><operator pos:start="35:42" pos:end="35:42">&amp;</operator><name pos:start="35:43" pos:end="35:44">le</name></expr></argument>, <argument pos:start="35:47" pos:end="35:50"><expr pos:start="35:47" pos:end="35:50"><operator pos:start="35:47" pos:end="35:47">&amp;</operator><name pos:start="35:48" pos:end="35:50">off</name></expr></argument>)</argument_list></call><operator pos:start="35:52" pos:end="35:52">)</operator></expr>)</condition> <block pos:start="35:55" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:19">

        <expr_stmt pos:start="37:9" pos:end="37:61"><expr pos:start="37:9" pos:end="37:60"><call pos:start="37:9" pos:end="37:60"><name pos:start="37:9" pos:end="37:14">av_log</name><argument_list pos:start="37:15" pos:end="37:60">(<argument pos:start="37:16" pos:end="37:20"><expr pos:start="37:16" pos:end="37:20"><name pos:start="37:16" pos:end="37:20">avctx</name></expr></argument>, <argument pos:start="37:23" pos:end="37:34"><expr pos:start="37:23" pos:end="37:34"><name pos:start="37:23" pos:end="37:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="37:37" pos:end="37:59"><expr pos:start="37:37" pos:end="37:59"><literal type="string" pos:start="37:37" pos:end="37:59">"Invalid TIFF header\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:19">return <expr pos:start="39:16" pos:end="39:18"><name pos:start="39:16" pos:end="39:18">ret</name></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="41:7" pos:end="47:5">else if <condition pos:start="41:15" pos:end="41:62">(<expr pos:start="41:16" pos:end="41:61"><name pos:start="41:16" pos:end="41:18">off</name> <operator pos:start="41:20" pos:end="41:21">&gt;=</operator> <name pos:start="41:23" pos:end="41:30">UINT_MAX</name> <operator pos:start="41:32" pos:end="41:32">-</operator> <literal type="number" pos:start="41:34" pos:end="41:35">14</literal> <operator pos:start="41:37" pos:end="41:38">||</operator> <name pos:start="41:40" pos:end="41:50"><name pos:start="41:40" pos:end="41:44">avpkt</name><operator pos:start="41:45" pos:end="41:46">-&gt;</operator><name pos:start="41:47" pos:end="41:50">size</name></name> <operator pos:start="41:52" pos:end="41:52">&lt;</operator> <name pos:start="41:54" pos:end="41:56">off</name> <operator pos:start="41:58" pos:end="41:58">+</operator> <literal type="number" pos:start="41:60" pos:end="41:61">14</literal></expr>)</condition> <block pos:start="41:64" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:35">

        <expr_stmt pos:start="43:9" pos:end="43:79"><expr pos:start="43:9" pos:end="43:78"><call pos:start="43:9" pos:end="43:78"><name pos:start="43:9" pos:end="43:14">av_log</name><argument_list pos:start="43:15" pos:end="43:78">(<argument pos:start="43:16" pos:end="43:20"><expr pos:start="43:16" pos:end="43:20"><name pos:start="43:16" pos:end="43:20">avctx</name></expr></argument>, <argument pos:start="43:23" pos:end="43:34"><expr pos:start="43:23" pos:end="43:34"><name pos:start="43:23" pos:end="43:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="43:37" pos:end="43:77"><expr pos:start="43:37" pos:end="43:77"><literal type="string" pos:start="43:37" pos:end="43:77">"IFD offset is greater than image size\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:35">return <expr pos:start="45:16" pos:end="45:34"><name pos:start="45:16" pos:end="45:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:24"><expr pos:start="49:5" pos:end="49:23"><name pos:start="49:5" pos:end="49:9"><name pos:start="49:5" pos:end="49:5">s</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:9">le</name></name>          <operator pos:start="49:20" pos:end="49:20">=</operator> <name pos:start="49:22" pos:end="49:23">le</name></expr>;</expr_stmt>

    <comment type="line" pos:start="51:5" pos:end="51:55">// TIFF_BPP is not a required tag and defaults to 1</comment>

    <expr_stmt pos:start="53:5" pos:end="53:32"><expr pos:start="53:5" pos:end="53:31"><name pos:start="53:5" pos:end="53:15"><name pos:start="53:5" pos:end="53:5">s</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:15">bppcount</name></name>    <operator pos:start="53:20" pos:end="53:20">=</operator> <name pos:start="53:22" pos:end="53:27"><name pos:start="53:22" pos:end="53:22">s</name><operator pos:start="53:23" pos:end="53:24">-&gt;</operator><name pos:start="53:25" pos:end="53:27">bpp</name></name> <operator pos:start="53:29" pos:end="53:29">=</operator> <literal type="number" pos:start="53:31" pos:end="53:31">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:43"><expr pos:start="55:5" pos:end="55:42"><name pos:start="55:5" pos:end="55:18"><name pos:start="55:5" pos:end="55:5">s</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:18">photometric</name></name> <operator pos:start="55:20" pos:end="55:20">=</operator> <name pos:start="55:22" pos:end="55:42">TIFF_PHOTOMETRIC_NONE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:30"><expr pos:start="57:5" pos:end="57:29"><name pos:start="57:5" pos:end="57:12"><name pos:start="57:5" pos:end="57:5">s</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:12">compr</name></name>       <operator pos:start="57:20" pos:end="57:20">=</operator> <name pos:start="57:22" pos:end="57:29">TIFF_RAW</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:23"><expr pos:start="59:5" pos:end="59:22"><name pos:start="59:5" pos:end="59:17"><name pos:start="59:5" pos:end="59:5">s</name><operator pos:start="59:6" pos:end="59:7">-&gt;</operator><name pos:start="59:8" pos:end="59:17">fill_order</name></name>  <operator pos:start="59:20" pos:end="59:20">=</operator> <literal type="number" pos:start="59:22" pos:end="59:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:20"><expr pos:start="61:5" pos:end="61:19"><call pos:start="61:5" pos:end="61:19"><name pos:start="61:5" pos:end="61:16">free_geotags</name><argument_list pos:start="61:17" pos:end="61:19">(<argument pos:start="61:18" pos:end="61:18"><expr pos:start="61:18" pos:end="61:18"><name pos:start="61:18" pos:end="61:18">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="65:5" pos:end="65:69">// Reset these offsets so we can tell if they were set this frame</comment>

    <expr_stmt pos:start="67:5" pos:end="67:39"><expr pos:start="67:5" pos:end="67:38"><name pos:start="67:5" pos:end="67:20"><name pos:start="67:5" pos:end="67:5">s</name><operator pos:start="67:6" pos:end="67:7">-&gt;</operator><name pos:start="67:8" pos:end="67:20">stripsizesoff</name></name> <operator pos:start="67:22" pos:end="67:22">=</operator> <name pos:start="67:24" pos:end="67:34"><name pos:start="67:24" pos:end="67:24">s</name><operator pos:start="67:25" pos:end="67:26">-&gt;</operator><name pos:start="67:27" pos:end="67:34">strippos</name></name> <operator pos:start="67:36" pos:end="67:36">=</operator> <literal type="number" pos:start="67:38" pos:end="67:38">0</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="69:5" pos:end="69:36">/* parse image file directory */</comment>

    <expr_stmt pos:start="71:5" pos:end="71:44"><expr pos:start="71:5" pos:end="71:43"><call pos:start="71:5" pos:end="71:43"><name pos:start="71:5" pos:end="71:20">bytestream2_seek</name><argument_list pos:start="71:21" pos:end="71:43">(<argument pos:start="71:22" pos:end="71:27"><expr pos:start="71:22" pos:end="71:27"><operator pos:start="71:22" pos:end="71:22">&amp;</operator><name pos:start="71:23" pos:end="71:27"><name pos:start="71:23" pos:end="71:23">s</name><operator pos:start="71:24" pos:end="71:25">-&gt;</operator><name pos:start="71:26" pos:end="71:27">gb</name></name></expr></argument>, <argument pos:start="71:30" pos:end="71:32"><expr pos:start="71:30" pos:end="71:32"><name pos:start="71:30" pos:end="71:32">off</name></expr></argument>, <argument pos:start="71:35" pos:end="71:42"><expr pos:start="71:35" pos:end="71:42"><name pos:start="71:35" pos:end="71:42">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:40"><expr pos:start="73:5" pos:end="73:39"><name pos:start="73:5" pos:end="73:11">entries</name> <operator pos:start="73:13" pos:end="73:13">=</operator> <call pos:start="73:15" pos:end="73:39"><name pos:start="73:15" pos:end="73:27">ff_tget_short</name><argument_list pos:start="73:28" pos:end="73:39">(<argument pos:start="73:29" pos:end="73:34"><expr pos:start="73:29" pos:end="73:34"><operator pos:start="73:29" pos:end="73:29">&amp;</operator><name pos:start="73:30" pos:end="73:34"><name pos:start="73:30" pos:end="73:30">s</name><operator pos:start="73:31" pos:end="73:32">-&gt;</operator><name pos:start="73:33" pos:end="73:34">gb</name></name></expr></argument>, <argument pos:start="73:37" pos:end="73:38"><expr pos:start="73:37" pos:end="73:38"><name pos:start="73:37" pos:end="73:38">le</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="77:35"><if pos:start="75:5" pos:end="77:35">if <condition pos:start="75:8" pos:end="75:58">(<expr pos:start="75:9" pos:end="75:57"><call pos:start="75:9" pos:end="75:42"><name pos:start="75:9" pos:end="75:34">bytestream2_get_bytes_left</name><argument_list pos:start="75:35" pos:end="75:42">(<argument pos:start="75:36" pos:end="75:41"><expr pos:start="75:36" pos:end="75:41"><operator pos:start="75:36" pos:end="75:36">&amp;</operator><name pos:start="75:37" pos:end="75:41"><name pos:start="75:37" pos:end="75:37">s</name><operator pos:start="75:38" pos:end="75:39">-&gt;</operator><name pos:start="75:40" pos:end="75:41">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="75:44" pos:end="75:44">&lt;</operator> <name pos:start="75:46" pos:end="75:52">entries</name> <operator pos:start="75:54" pos:end="75:54">*</operator> <literal type="number" pos:start="75:56" pos:end="75:57">12</literal></expr>)</condition><block type="pseudo" pos:start="77:9" pos:end="77:35"><block_content pos:start="77:9" pos:end="77:35">

        <return pos:start="77:9" pos:end="77:35">return <expr pos:start="77:16" pos:end="77:34"><name pos:start="77:16" pos:end="77:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <for pos:start="79:5" pos:end="85:5">for <control pos:start="79:9" pos:end="79:33">(<init pos:start="79:10" pos:end="79:15"><expr pos:start="79:10" pos:end="79:14"><name pos:start="79:10" pos:end="79:10">i</name> <operator pos:start="79:12" pos:end="79:12">=</operator> <literal type="number" pos:start="79:14" pos:end="79:14">0</literal></expr>;</init> <condition pos:start="79:17" pos:end="79:28"><expr pos:start="79:17" pos:end="79:27"><name pos:start="79:17" pos:end="79:17">i</name> <operator pos:start="79:19" pos:end="79:19">&lt;</operator> <name pos:start="79:21" pos:end="79:27">entries</name></expr>;</condition> <incr pos:start="79:30" pos:end="79:32"><expr pos:start="79:30" pos:end="79:32"><name pos:start="79:30" pos:end="79:30">i</name><operator pos:start="79:31" pos:end="79:32">++</operator></expr></incr>)</control> <block pos:start="79:35" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:23">

        <if_stmt pos:start="81:9" pos:end="83:23"><if pos:start="81:9" pos:end="83:23">if <condition pos:start="81:12" pos:end="81:46">(<expr pos:start="81:13" pos:end="81:45"><operator pos:start="81:13" pos:end="81:13">(</operator><name pos:start="81:14" pos:end="81:16">ret</name> <operator pos:start="81:18" pos:end="81:18">=</operator> <call pos:start="81:20" pos:end="81:40"><name pos:start="81:20" pos:end="81:34">tiff_decode_tag</name><argument_list pos:start="81:35" pos:end="81:40">(<argument pos:start="81:36" pos:end="81:36"><expr pos:start="81:36" pos:end="81:36"><name pos:start="81:36" pos:end="81:36">s</name></expr></argument>, <argument pos:start="81:39" pos:end="81:39"><expr pos:start="81:39" pos:end="81:39"><name pos:start="81:39" pos:end="81:39">p</name></expr></argument>)</argument_list></call><operator pos:start="81:41" pos:end="81:41">)</operator> <operator pos:start="81:43" pos:end="81:43">&lt;</operator> <literal type="number" pos:start="81:45" pos:end="81:45">0</literal></expr>)</condition><block type="pseudo" pos:start="83:13" pos:end="83:23"><block_content pos:start="83:13" pos:end="83:23">

            <return pos:start="83:13" pos:end="83:23">return <expr pos:start="83:20" pos:end="83:22"><name pos:start="83:20" pos:end="83:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <for pos:start="89:5" pos:end="119:5">for <control pos:start="89:9" pos:end="89:39">(<init pos:start="89:10" pos:end="89:15"><expr pos:start="89:10" pos:end="89:14"><name pos:start="89:10" pos:end="89:10">i</name> <operator pos:start="89:12" pos:end="89:12">=</operator> <literal type="number" pos:start="89:14" pos:end="89:14">0</literal></expr>;</init> <condition pos:start="89:17" pos:end="89:34"><expr pos:start="89:17" pos:end="89:33"><name pos:start="89:17" pos:end="89:17">i</name><operator pos:start="89:18" pos:end="89:18">&lt;</operator><name pos:start="89:19" pos:end="89:33"><name pos:start="89:19" pos:end="89:19">s</name><operator pos:start="89:20" pos:end="89:21">-&gt;</operator><name pos:start="89:22" pos:end="89:33">geotag_count</name></name></expr>;</condition> <incr pos:start="89:36" pos:end="89:38"><expr pos:start="89:36" pos:end="89:38"><name pos:start="89:36" pos:end="89:36">i</name><operator pos:start="89:37" pos:end="89:38">++</operator></expr></incr>)</control> <block pos:start="89:41" pos:end="119:5">{<block_content pos:start="91:9" pos:end="117:9">

        <decl_stmt pos:start="91:9" pos:end="91:65"><decl pos:start="91:9" pos:end="91:64"><type pos:start="91:9" pos:end="91:20"><specifier pos:start="91:9" pos:end="91:13">const</specifier> <name pos:start="91:15" pos:end="91:18">char</name> <modifier pos:start="91:20" pos:end="91:20">*</modifier></type><name pos:start="91:21" pos:end="91:27">keyname</name> <init pos:start="91:29" pos:end="91:64">= <expr pos:start="91:31" pos:end="91:64"><call pos:start="91:31" pos:end="91:64"><name pos:start="91:31" pos:end="91:45">get_geokey_name</name><argument_list pos:start="91:46" pos:end="91:64">(<argument pos:start="91:47" pos:end="91:63"><expr pos:start="91:47" pos:end="91:63"><name pos:start="91:47" pos:end="91:59"><name pos:start="91:47" pos:end="91:47">s</name><operator pos:start="91:48" pos:end="91:49">-&gt;</operator><name pos:start="91:50" pos:end="91:56">geotags</name><index pos:start="91:57" pos:end="91:59">[<expr pos:start="91:58" pos:end="91:58"><name pos:start="91:58" pos:end="91:58">i</name></expr>]</index></name><operator pos:start="91:60" pos:end="91:60">.</operator><name pos:start="91:61" pos:end="91:63">key</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="93:9" pos:end="99:9"><if pos:start="93:9" pos:end="99:9">if <condition pos:start="93:12" pos:end="93:21">(<expr pos:start="93:13" pos:end="93:20"><operator pos:start="93:13" pos:end="93:13">!</operator><name pos:start="93:14" pos:end="93:20">keyname</name></expr>)</condition> <block pos:start="93:23" pos:end="99:9">{<block_content pos:start="95:13" pos:end="97:21">

            <expr_stmt pos:start="95:13" pos:end="95:104"><expr pos:start="95:13" pos:end="95:103"><call pos:start="95:13" pos:end="95:103"><name pos:start="95:13" pos:end="95:18">av_log</name><argument_list pos:start="95:19" pos:end="95:103">(<argument pos:start="95:20" pos:end="95:24"><expr pos:start="95:20" pos:end="95:24"><name pos:start="95:20" pos:end="95:24">avctx</name></expr></argument>, <argument pos:start="95:27" pos:end="95:40"><expr pos:start="95:27" pos:end="95:40"><name pos:start="95:27" pos:end="95:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="95:43" pos:end="95:83"><expr pos:start="95:43" pos:end="95:83"><literal type="string" pos:start="95:43" pos:end="95:83">"Unknown or unsupported GeoTIFF key %d\n"</literal></expr></argument>, <argument pos:start="95:86" pos:end="95:102"><expr pos:start="95:86" pos:end="95:102"><name pos:start="95:86" pos:end="95:98"><name pos:start="95:86" pos:end="95:86">s</name><operator pos:start="95:87" pos:end="95:88">-&gt;</operator><name pos:start="95:89" pos:end="95:95">geotags</name><index pos:start="95:96" pos:end="95:98">[<expr pos:start="95:97" pos:end="95:97"><name pos:start="95:97" pos:end="95:97">i</name></expr>]</index></name><operator pos:start="95:99" pos:end="95:99">.</operator><name pos:start="95:100" pos:end="95:102">key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="97:13" pos:end="97:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="101:9" pos:end="107:9"><if pos:start="101:9" pos:end="107:9">if <condition pos:start="101:12" pos:end="101:69">(<expr pos:start="101:13" pos:end="101:68"><call pos:start="101:13" pos:end="101:46"><name pos:start="101:13" pos:end="101:27">get_geokey_type</name><argument_list pos:start="101:28" pos:end="101:46">(<argument pos:start="101:29" pos:end="101:45"><expr pos:start="101:29" pos:end="101:45"><name pos:start="101:29" pos:end="101:41"><name pos:start="101:29" pos:end="101:29">s</name><operator pos:start="101:30" pos:end="101:31">-&gt;</operator><name pos:start="101:32" pos:end="101:38">geotags</name><index pos:start="101:39" pos:end="101:41">[<expr pos:start="101:40" pos:end="101:40"><name pos:start="101:40" pos:end="101:40">i</name></expr>]</index></name><operator pos:start="101:42" pos:end="101:42">.</operator><name pos:start="101:43" pos:end="101:45">key</name></expr></argument>)</argument_list></call> <operator pos:start="101:48" pos:end="101:49">!=</operator> <name pos:start="101:51" pos:end="101:63"><name pos:start="101:51" pos:end="101:51">s</name><operator pos:start="101:52" pos:end="101:53">-&gt;</operator><name pos:start="101:54" pos:end="101:60">geotags</name><index pos:start="101:61" pos:end="101:63">[<expr pos:start="101:62" pos:end="101:62"><name pos:start="101:62" pos:end="101:62">i</name></expr>]</index></name><operator pos:start="101:64" pos:end="101:64">.</operator><name pos:start="101:65" pos:end="101:68">type</name></expr>)</condition> <block pos:start="101:71" pos:end="107:9">{<block_content pos:start="103:13" pos:end="105:21">

            <expr_stmt pos:start="103:13" pos:end="103:98"><expr pos:start="103:13" pos:end="103:97"><call pos:start="103:13" pos:end="103:97"><name pos:start="103:13" pos:end="103:18">av_log</name><argument_list pos:start="103:19" pos:end="103:97">(<argument pos:start="103:20" pos:end="103:24"><expr pos:start="103:20" pos:end="103:24"><name pos:start="103:20" pos:end="103:24">avctx</name></expr></argument>, <argument pos:start="103:27" pos:end="103:40"><expr pos:start="103:27" pos:end="103:40"><name pos:start="103:27" pos:end="103:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="103:43" pos:end="103:77"><expr pos:start="103:43" pos:end="103:77"><literal type="string" pos:start="103:43" pos:end="103:77">"Type of GeoTIFF key %d is wrong\n"</literal></expr></argument>, <argument pos:start="103:80" pos:end="103:96"><expr pos:start="103:80" pos:end="103:96"><name pos:start="103:80" pos:end="103:92"><name pos:start="103:80" pos:end="103:80">s</name><operator pos:start="103:81" pos:end="103:82">-&gt;</operator><name pos:start="103:83" pos:end="103:89">geotags</name><index pos:start="103:90" pos:end="103:92">[<expr pos:start="103:91" pos:end="103:91"><name pos:start="103:91" pos:end="103:91">i</name></expr>]</index></name><operator pos:start="103:93" pos:end="103:93">.</operator><name pos:start="103:94" pos:end="103:96">key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="105:13" pos:end="105:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:71"><expr pos:start="109:9" pos:end="109:70"><name pos:start="109:9" pos:end="109:11">ret</name> <operator pos:start="109:13" pos:end="109:13">=</operator> <call pos:start="109:15" pos:end="109:70"><name pos:start="109:15" pos:end="109:25">av_dict_set</name><argument_list pos:start="109:26" pos:end="109:70">(<argument pos:start="109:27" pos:end="109:38"><expr pos:start="109:27" pos:end="109:38"><operator pos:start="109:27" pos:end="109:27">&amp;</operator><name pos:start="109:28" pos:end="109:38"><name pos:start="109:28" pos:end="109:28">p</name><operator pos:start="109:29" pos:end="109:30">-&gt;</operator><name pos:start="109:31" pos:end="109:38">metadata</name></name></expr></argument>, <argument pos:start="109:41" pos:end="109:47"><expr pos:start="109:41" pos:end="109:47"><name pos:start="109:41" pos:end="109:47">keyname</name></expr></argument>, <argument pos:start="109:50" pos:end="109:66"><expr pos:start="109:50" pos:end="109:66"><name pos:start="109:50" pos:end="109:62"><name pos:start="109:50" pos:end="109:50">s</name><operator pos:start="109:51" pos:end="109:52">-&gt;</operator><name pos:start="109:53" pos:end="109:59">geotags</name><index pos:start="109:60" pos:end="109:62">[<expr pos:start="109:61" pos:end="109:61"><name pos:start="109:61" pos:end="109:61">i</name></expr>]</index></name><operator pos:start="109:63" pos:end="109:63">.</operator><name pos:start="109:64" pos:end="109:66">val</name></expr></argument>, <argument pos:start="109:69" pos:end="109:69"><expr pos:start="109:69" pos:end="109:69"><literal type="number" pos:start="109:69" pos:end="109:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="111:9" pos:end="117:9"><if pos:start="111:9" pos:end="117:9">if <condition pos:start="111:12" pos:end="111:18">(<expr pos:start="111:13" pos:end="111:17"><name pos:start="111:13" pos:end="111:15">ret</name><operator pos:start="111:16" pos:end="111:16">&lt;</operator><literal type="number" pos:start="111:17" pos:end="111:17">0</literal></expr>)</condition> <block pos:start="111:20" pos:end="117:9">{<block_content pos:start="113:13" pos:end="115:23">

            <expr_stmt pos:start="113:13" pos:end="113:92"><expr pos:start="113:13" pos:end="113:91"><call pos:start="113:13" pos:end="113:91"><name pos:start="113:13" pos:end="113:18">av_log</name><argument_list pos:start="113:19" pos:end="113:91">(<argument pos:start="113:20" pos:end="113:24"><expr pos:start="113:20" pos:end="113:24"><name pos:start="113:20" pos:end="113:24">avctx</name></expr></argument>, <argument pos:start="113:27" pos:end="113:38"><expr pos:start="113:27" pos:end="113:38"><name pos:start="113:27" pos:end="113:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="113:41" pos:end="113:81"><expr pos:start="113:41" pos:end="113:81"><literal type="string" pos:start="113:41" pos:end="113:81">"Writing metadata with key '%s' failed\n"</literal></expr></argument>, <argument pos:start="113:84" pos:end="113:90"><expr pos:start="113:84" pos:end="113:90"><name pos:start="113:84" pos:end="113:90">keyname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="115:13" pos:end="115:23">return <expr pos:start="115:20" pos:end="115:22"><name pos:start="115:20" pos:end="115:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="123:5" pos:end="129:5"><if pos:start="123:5" pos:end="129:5">if <condition pos:start="123:8" pos:end="123:37">(<expr pos:start="123:9" pos:end="123:36"><operator pos:start="123:9" pos:end="123:9">!</operator><name pos:start="123:10" pos:end="123:20"><name pos:start="123:10" pos:end="123:10">s</name><operator pos:start="123:11" pos:end="123:12">-&gt;</operator><name pos:start="123:13" pos:end="123:20">strippos</name></name> <operator pos:start="123:22" pos:end="123:23">&amp;&amp;</operator> <operator pos:start="123:25" pos:end="123:25">!</operator><name pos:start="123:26" pos:end="123:36"><name pos:start="123:26" pos:end="123:26">s</name><operator pos:start="123:27" pos:end="123:28">-&gt;</operator><name pos:start="123:29" pos:end="123:36">stripoff</name></name></expr>)</condition> <block pos:start="123:39" pos:end="129:5">{<block_content pos:start="125:9" pos:end="127:35">

        <expr_stmt pos:start="125:9" pos:end="125:63"><expr pos:start="125:9" pos:end="125:62"><call pos:start="125:9" pos:end="125:62"><name pos:start="125:9" pos:end="125:14">av_log</name><argument_list pos:start="125:15" pos:end="125:62">(<argument pos:start="125:16" pos:end="125:20"><expr pos:start="125:16" pos:end="125:20"><name pos:start="125:16" pos:end="125:20">avctx</name></expr></argument>, <argument pos:start="125:23" pos:end="125:34"><expr pos:start="125:23" pos:end="125:34"><name pos:start="125:23" pos:end="125:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="125:37" pos:end="125:61"><expr pos:start="125:37" pos:end="125:61"><literal type="string" pos:start="125:37" pos:end="125:61">"Image data is missing\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="127:9" pos:end="127:35">return <expr pos:start="127:16" pos:end="127:34"><name pos:start="127:16" pos:end="127:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="131:5" pos:end="131:53">/* now we have the data and may start decoding */</comment>

    <if_stmt pos:start="133:5" pos:end="135:19"><if pos:start="133:5" pos:end="135:19">if <condition pos:start="133:8" pos:end="133:42">(<expr pos:start="133:9" pos:end="133:41"><operator pos:start="133:9" pos:end="133:9">(</operator><name pos:start="133:10" pos:end="133:12">ret</name> <operator pos:start="133:14" pos:end="133:14">=</operator> <call pos:start="133:16" pos:end="133:36"><name pos:start="133:16" pos:end="133:25">init_image</name><argument_list pos:start="133:26" pos:end="133:36">(<argument pos:start="133:27" pos:end="133:27"><expr pos:start="133:27" pos:end="133:27"><name pos:start="133:27" pos:end="133:27">s</name></expr></argument>, <argument pos:start="133:30" pos:end="133:35"><expr pos:start="133:30" pos:end="133:35"><operator pos:start="133:30" pos:end="133:30">&amp;</operator><name pos:start="133:31" pos:end="133:35">frame</name></expr></argument>)</argument_list></call><operator pos:start="133:37" pos:end="133:37">)</operator> <operator pos:start="133:39" pos:end="133:39">&lt;</operator> <literal type="number" pos:start="133:41" pos:end="133:41">0</literal></expr>)</condition><block type="pseudo" pos:start="135:9" pos:end="135:19"><block_content pos:start="135:9" pos:end="135:19">

        <return pos:start="135:9" pos:end="135:19">return <expr pos:start="135:16" pos:end="135:18"><name pos:start="135:16" pos:end="135:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="139:5" pos:end="145:5"><if pos:start="139:5" pos:end="145:5">if <condition pos:start="139:8" pos:end="139:40">(<expr pos:start="139:9" pos:end="139:39"><name pos:start="139:9" pos:end="139:17"><name pos:start="139:9" pos:end="139:9">s</name><operator pos:start="139:10" pos:end="139:11">-&gt;</operator><name pos:start="139:12" pos:end="139:17">strips</name></name> <operator pos:start="139:19" pos:end="139:20">==</operator> <literal type="number" pos:start="139:22" pos:end="139:22">1</literal> <operator pos:start="139:24" pos:end="139:25">&amp;&amp;</operator> <operator pos:start="139:27" pos:end="139:27">!</operator><name pos:start="139:28" pos:end="139:39"><name pos:start="139:28" pos:end="139:28">s</name><operator pos:start="139:29" pos:end="139:30">-&gt;</operator><name pos:start="139:31" pos:end="139:39">stripsize</name></name></expr>)</condition> <block pos:start="139:42" pos:end="145:5">{<block_content pos:start="141:9" pos:end="143:49">

        <expr_stmt pos:start="141:9" pos:end="141:67"><expr pos:start="141:9" pos:end="141:66"><call pos:start="141:9" pos:end="141:66"><name pos:start="141:9" pos:end="141:14">av_log</name><argument_list pos:start="141:15" pos:end="141:66">(<argument pos:start="141:16" pos:end="141:20"><expr pos:start="141:16" pos:end="141:20"><name pos:start="141:16" pos:end="141:20">avctx</name></expr></argument>, <argument pos:start="141:23" pos:end="141:36"><expr pos:start="141:23" pos:end="141:36"><name pos:start="141:23" pos:end="141:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="141:39" pos:end="141:65"><expr pos:start="141:39" pos:end="141:65"><literal type="string" pos:start="141:39" pos:end="141:65">"Image data size missing\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:49"><expr pos:start="143:9" pos:end="143:48"><name pos:start="143:9" pos:end="143:20"><name pos:start="143:9" pos:end="143:9">s</name><operator pos:start="143:10" pos:end="143:11">-&gt;</operator><name pos:start="143:12" pos:end="143:20">stripsize</name></name> <operator pos:start="143:22" pos:end="143:22">=</operator> <name pos:start="143:24" pos:end="143:34"><name pos:start="143:24" pos:end="143:28">avpkt</name><operator pos:start="143:29" pos:end="143:30">-&gt;</operator><name pos:start="143:31" pos:end="143:34">size</name></name> <operator pos:start="143:36" pos:end="143:36">-</operator> <name pos:start="143:38" pos:end="143:48"><name pos:start="143:38" pos:end="143:38">s</name><operator pos:start="143:39" pos:end="143:40">-&gt;</operator><name pos:start="143:41" pos:end="143:48">stripoff</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="149:5" pos:end="159:5"><if pos:start="149:5" pos:end="159:5">if <condition pos:start="149:8" pos:end="149:25">(<expr pos:start="149:9" pos:end="149:24"><name pos:start="149:9" pos:end="149:24"><name pos:start="149:9" pos:end="149:9">s</name><operator pos:start="149:10" pos:end="149:11">-&gt;</operator><name pos:start="149:12" pos:end="149:24">stripsizesoff</name></name></expr>)</condition> <block pos:start="149:27" pos:end="159:5">{<block_content pos:start="151:9" pos:end="157:57">

        <if_stmt pos:start="151:9" pos:end="153:39"><if pos:start="151:9" pos:end="153:39">if <condition pos:start="151:12" pos:end="151:54">(<expr pos:start="151:13" pos:end="151:53"><name pos:start="151:13" pos:end="151:28"><name pos:start="151:13" pos:end="151:13">s</name><operator pos:start="151:14" pos:end="151:15">-&gt;</operator><name pos:start="151:16" pos:end="151:28">stripsizesoff</name></name> <operator pos:start="151:30" pos:end="151:31">&gt;=</operator> <operator pos:start="151:33" pos:end="151:33">(</operator><name pos:start="151:34" pos:end="151:41">unsigned</name><operator pos:start="151:42" pos:end="151:42">)</operator><name pos:start="151:43" pos:end="151:53"><name pos:start="151:43" pos:end="151:47">avpkt</name><operator pos:start="151:48" pos:end="151:49">-&gt;</operator><name pos:start="151:50" pos:end="151:53">size</name></name></expr>)</condition><block type="pseudo" pos:start="153:13" pos:end="153:39"><block_content pos:start="153:13" pos:end="153:39">

            <return pos:start="153:13" pos:end="153:39">return <expr pos:start="153:20" pos:end="153:38"><name pos:start="153:20" pos:end="153:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="155:9" pos:end="157:57"><expr pos:start="155:9" pos:end="157:56"><call pos:start="155:9" pos:end="157:56"><name pos:start="155:9" pos:end="155:24">bytestream2_init</name><argument_list pos:start="155:25" pos:end="157:56">(<argument pos:start="155:26" pos:end="155:36"><expr pos:start="155:26" pos:end="155:36"><operator pos:start="155:26" pos:end="155:26">&amp;</operator><name pos:start="155:27" pos:end="155:36">stripsizes</name></expr></argument>, <argument pos:start="155:39" pos:end="155:68"><expr pos:start="155:39" pos:end="155:68"><name pos:start="155:39" pos:end="155:49"><name pos:start="155:39" pos:end="155:43">avpkt</name><operator pos:start="155:44" pos:end="155:45">-&gt;</operator><name pos:start="155:46" pos:end="155:49">data</name></name> <operator pos:start="155:51" pos:end="155:51">+</operator> <name pos:start="155:53" pos:end="155:68"><name pos:start="155:53" pos:end="155:53">s</name><operator pos:start="155:54" pos:end="155:55">-&gt;</operator><name pos:start="155:56" pos:end="155:68">stripsizesoff</name></name></expr></argument>,

                         <argument pos:start="157:26" pos:end="157:55"><expr pos:start="157:26" pos:end="157:55"><name pos:start="157:26" pos:end="157:36"><name pos:start="157:26" pos:end="157:30">avpkt</name><operator pos:start="157:31" pos:end="157:32">-&gt;</operator><name pos:start="157:33" pos:end="157:36">size</name></name> <operator pos:start="157:38" pos:end="157:38">-</operator> <name pos:start="157:40" pos:end="157:55"><name pos:start="157:40" pos:end="157:40">s</name><operator pos:start="157:41" pos:end="157:42">-&gt;</operator><name pos:start="157:43" pos:end="157:55">stripsizesoff</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="161:5" pos:end="171:5"><if pos:start="161:5" pos:end="171:5">if <condition pos:start="161:8" pos:end="161:20">(<expr pos:start="161:9" pos:end="161:19"><name pos:start="161:9" pos:end="161:19"><name pos:start="161:9" pos:end="161:9">s</name><operator pos:start="161:10" pos:end="161:11">-&gt;</operator><name pos:start="161:12" pos:end="161:19">strippos</name></name></expr>)</condition> <block pos:start="161:22" pos:end="171:5">{<block_content pos:start="163:9" pos:end="169:52">

        <if_stmt pos:start="163:9" pos:end="165:39"><if pos:start="163:9" pos:end="165:39">if <condition pos:start="163:12" pos:end="163:49">(<expr pos:start="163:13" pos:end="163:48"><name pos:start="163:13" pos:end="163:23"><name pos:start="163:13" pos:end="163:13">s</name><operator pos:start="163:14" pos:end="163:15">-&gt;</operator><name pos:start="163:16" pos:end="163:23">strippos</name></name> <operator pos:start="163:25" pos:end="163:26">&gt;=</operator> <operator pos:start="163:28" pos:end="163:28">(</operator><name pos:start="163:29" pos:end="163:36">unsigned</name><operator pos:start="163:37" pos:end="163:37">)</operator><name pos:start="163:38" pos:end="163:48"><name pos:start="163:38" pos:end="163:42">avpkt</name><operator pos:start="163:43" pos:end="163:44">-&gt;</operator><name pos:start="163:45" pos:end="163:48">size</name></name></expr>)</condition><block type="pseudo" pos:start="165:13" pos:end="165:39"><block_content pos:start="165:13" pos:end="165:39">

            <return pos:start="165:13" pos:end="165:39">return <expr pos:start="165:20" pos:end="165:38"><name pos:start="165:20" pos:end="165:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="167:9" pos:end="169:52"><expr pos:start="167:9" pos:end="169:51"><call pos:start="167:9" pos:end="169:51"><name pos:start="167:9" pos:end="167:24">bytestream2_init</name><argument_list pos:start="167:25" pos:end="169:51">(<argument pos:start="167:26" pos:end="167:35"><expr pos:start="167:26" pos:end="167:35"><operator pos:start="167:26" pos:end="167:26">&amp;</operator><name pos:start="167:27" pos:end="167:35">stripdata</name></expr></argument>, <argument pos:start="167:38" pos:end="167:62"><expr pos:start="167:38" pos:end="167:62"><name pos:start="167:38" pos:end="167:48"><name pos:start="167:38" pos:end="167:42">avpkt</name><operator pos:start="167:43" pos:end="167:44">-&gt;</operator><name pos:start="167:45" pos:end="167:48">data</name></name> <operator pos:start="167:50" pos:end="167:50">+</operator> <name pos:start="167:52" pos:end="167:62"><name pos:start="167:52" pos:end="167:52">s</name><operator pos:start="167:53" pos:end="167:54">-&gt;</operator><name pos:start="167:55" pos:end="167:62">strippos</name></name></expr></argument>,

                         <argument pos:start="169:26" pos:end="169:50"><expr pos:start="169:26" pos:end="169:50"><name pos:start="169:26" pos:end="169:36"><name pos:start="169:26" pos:end="169:30">avpkt</name><operator pos:start="169:31" pos:end="169:32">-&gt;</operator><name pos:start="169:33" pos:end="169:36">size</name></name> <operator pos:start="169:38" pos:end="169:38">-</operator> <name pos:start="169:40" pos:end="169:50"><name pos:start="169:40" pos:end="169:40">s</name><operator pos:start="169:41" pos:end="169:42">-&gt;</operator><name pos:start="169:43" pos:end="169:50">strippos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="175:5" pos:end="181:5"><if pos:start="175:5" pos:end="181:5">if <condition pos:start="175:8" pos:end="175:50">(<expr pos:start="175:9" pos:end="175:49"><name pos:start="175:9" pos:end="175:14"><name pos:start="175:9" pos:end="175:9">s</name><operator pos:start="175:10" pos:end="175:11">-&gt;</operator><name pos:start="175:12" pos:end="175:14">rps</name></name> <operator pos:start="175:16" pos:end="175:17">&lt;=</operator> <literal type="number" pos:start="175:19" pos:end="175:19">0</literal> <operator pos:start="175:21" pos:end="175:22">||</operator> <name pos:start="175:24" pos:end="175:29"><name pos:start="175:24" pos:end="175:24">s</name><operator pos:start="175:25" pos:end="175:26">-&gt;</operator><name pos:start="175:27" pos:end="175:29">rps</name></name> <operator pos:start="175:31" pos:end="175:31">%</operator> <name pos:start="175:33" pos:end="175:49"><name pos:start="175:33" pos:end="175:33">s</name><operator pos:start="175:34" pos:end="175:35">-&gt;</operator><name pos:start="175:36" pos:end="175:46">subsampling</name><index pos:start="175:47" pos:end="175:49">[<expr pos:start="175:48" pos:end="175:48"><literal type="number" pos:start="175:48" pos:end="175:48">1</literal></expr>]</index></name></expr>)</condition> <block pos:start="175:52" pos:end="181:5">{<block_content pos:start="177:9" pos:end="179:35">

        <expr_stmt pos:start="177:9" pos:end="177:64"><expr pos:start="177:9" pos:end="177:63"><call pos:start="177:9" pos:end="177:63"><name pos:start="177:9" pos:end="177:14">av_log</name><argument_list pos:start="177:15" pos:end="177:63">(<argument pos:start="177:16" pos:end="177:20"><expr pos:start="177:16" pos:end="177:20"><name pos:start="177:16" pos:end="177:20">avctx</name></expr></argument>, <argument pos:start="177:23" pos:end="177:34"><expr pos:start="177:23" pos:end="177:34"><name pos:start="177:23" pos:end="177:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="177:37" pos:end="177:54"><expr pos:start="177:37" pos:end="177:54"><literal type="string" pos:start="177:37" pos:end="177:54">"rps %d invalid\n"</literal></expr></argument>, <argument pos:start="177:57" pos:end="177:62"><expr pos:start="177:57" pos:end="177:62"><name pos:start="177:57" pos:end="177:62"><name pos:start="177:57" pos:end="177:57">s</name><operator pos:start="177:58" pos:end="177:59">-&gt;</operator><name pos:start="177:60" pos:end="177:62">rps</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="179:9" pos:end="179:35">return <expr pos:start="179:16" pos:end="179:34"><name pos:start="179:16" pos:end="179:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="185:5" pos:end="185:41"><expr pos:start="185:5" pos:end="185:40"><name pos:start="185:5" pos:end="185:10">planes</name> <operator pos:start="185:12" pos:end="185:12">=</operator> <ternary pos:start="185:14" pos:end="185:40"><condition pos:start="185:14" pos:end="185:24"><expr pos:start="185:14" pos:end="185:22"><name pos:start="185:14" pos:end="185:22"><name pos:start="185:14" pos:end="185:14">s</name><operator pos:start="185:15" pos:end="185:16">-&gt;</operator><name pos:start="185:17" pos:end="185:22">planar</name></name></expr> ?</condition><then pos:start="185:26" pos:end="185:36"> <expr pos:start="185:26" pos:end="185:36"><name pos:start="185:26" pos:end="185:36"><name pos:start="185:26" pos:end="185:26">s</name><operator pos:start="185:27" pos:end="185:28">-&gt;</operator><name pos:start="185:29" pos:end="185:36">bppcount</name></name></expr> </then><else pos:start="185:38" pos:end="185:40">: <expr pos:start="185:40" pos:end="185:40"><literal type="number" pos:start="185:40" pos:end="185:40">1</literal></expr></else></ternary></expr>;</expr_stmt>

    <for pos:start="187:5" pos:end="339:5">for <control pos:start="187:9" pos:end="187:44">(<init pos:start="187:10" pos:end="187:19"><expr pos:start="187:10" pos:end="187:18"><name pos:start="187:10" pos:end="187:14">plane</name> <operator pos:start="187:16" pos:end="187:16">=</operator> <literal type="number" pos:start="187:18" pos:end="187:18">0</literal></expr>;</init> <condition pos:start="187:21" pos:end="187:35"><expr pos:start="187:21" pos:end="187:34"><name pos:start="187:21" pos:end="187:25">plane</name> <operator pos:start="187:27" pos:end="187:27">&lt;</operator> <name pos:start="187:29" pos:end="187:34">planes</name></expr>;</condition> <incr pos:start="187:37" pos:end="187:43"><expr pos:start="187:37" pos:end="187:43"><name pos:start="187:37" pos:end="187:41">plane</name><operator pos:start="187:42" pos:end="187:43">++</operator></expr></incr>)</control> <block pos:start="187:46" pos:end="339:5">{<block_content pos:start="189:9" pos:end="337:9">

        <expr_stmt pos:start="189:9" pos:end="189:36"><expr pos:start="189:9" pos:end="189:35"><name pos:start="189:9" pos:end="189:14">stride</name> <operator pos:start="189:16" pos:end="189:16">=</operator> <name pos:start="189:18" pos:end="189:35"><name pos:start="189:18" pos:end="189:18">p</name><operator pos:start="189:19" pos:end="189:20">-&gt;</operator><name pos:start="189:21" pos:end="189:28">linesize</name><index pos:start="189:29" pos:end="189:35">[<expr pos:start="189:30" pos:end="189:34"><name pos:start="189:30" pos:end="189:34">plane</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="191:9" pos:end="191:29"><expr pos:start="191:9" pos:end="191:28"><name pos:start="191:9" pos:end="191:11">dst</name> <operator pos:start="191:13" pos:end="191:13">=</operator> <name pos:start="191:15" pos:end="191:28"><name pos:start="191:15" pos:end="191:15">p</name><operator pos:start="191:16" pos:end="191:17">-&gt;</operator><name pos:start="191:18" pos:end="191:21">data</name><index pos:start="191:22" pos:end="191:28">[<expr pos:start="191:23" pos:end="191:27"><name pos:start="191:23" pos:end="191:27">plane</name></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="193:9" pos:end="237:9">for <control pos:start="193:13" pos:end="193:47">(<init pos:start="193:14" pos:end="193:19"><expr pos:start="193:14" pos:end="193:18"><name pos:start="193:14" pos:end="193:14">i</name> <operator pos:start="193:16" pos:end="193:16">=</operator> <literal type="number" pos:start="193:18" pos:end="193:18">0</literal></expr>;</init> <condition pos:start="193:21" pos:end="193:34"><expr pos:start="193:21" pos:end="193:33"><name pos:start="193:21" pos:end="193:21">i</name> <operator pos:start="193:23" pos:end="193:23">&lt;</operator> <name pos:start="193:25" pos:end="193:33"><name pos:start="193:25" pos:end="193:25">s</name><operator pos:start="193:26" pos:end="193:27">-&gt;</operator><name pos:start="193:28" pos:end="193:33">height</name></name></expr>;</condition> <incr pos:start="193:36" pos:end="193:46"><expr pos:start="193:36" pos:end="193:46"><name pos:start="193:36" pos:end="193:36">i</name> <operator pos:start="193:38" pos:end="193:39">+=</operator> <name pos:start="193:41" pos:end="193:46"><name pos:start="193:41" pos:end="193:41">s</name><operator pos:start="193:42" pos:end="193:43">-&gt;</operator><name pos:start="193:44" pos:end="193:46">rps</name></name></expr></incr>)</control> <block pos:start="193:49" pos:end="237:9">{<block_content pos:start="195:13" pos:end="235:35">

            <if_stmt pos:start="195:13" pos:end="201:37"><if pos:start="195:13" pos:end="197:60">if <condition pos:start="195:16" pos:end="195:33">(<expr pos:start="195:17" pos:end="195:32"><name pos:start="195:17" pos:end="195:32"><name pos:start="195:17" pos:end="195:17">s</name><operator pos:start="195:18" pos:end="195:19">-&gt;</operator><name pos:start="195:20" pos:end="195:32">stripsizesoff</name></name></expr>)</condition><block type="pseudo" pos:start="197:17" pos:end="197:60"><block_content pos:start="197:17" pos:end="197:60">

                <expr_stmt pos:start="197:17" pos:end="197:60"><expr pos:start="197:17" pos:end="197:59"><name pos:start="197:17" pos:end="197:21">ssize</name> <operator pos:start="197:23" pos:end="197:23">=</operator> <call pos:start="197:25" pos:end="197:59"><name pos:start="197:25" pos:end="197:31">ff_tget</name><argument_list pos:start="197:32" pos:end="197:59">(<argument pos:start="197:33" pos:end="197:43"><expr pos:start="197:33" pos:end="197:43"><operator pos:start="197:33" pos:end="197:33">&amp;</operator><name pos:start="197:34" pos:end="197:43">stripsizes</name></expr></argument>, <argument pos:start="197:46" pos:end="197:54"><expr pos:start="197:46" pos:end="197:54"><name pos:start="197:46" pos:end="197:54"><name pos:start="197:46" pos:end="197:46">s</name><operator pos:start="197:47" pos:end="197:48">-&gt;</operator><name pos:start="197:49" pos:end="197:54">sstype</name></name></expr></argument>, <argument pos:start="197:57" pos:end="197:58"><expr pos:start="197:57" pos:end="197:58"><name pos:start="197:57" pos:end="197:58">le</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="199:13" pos:end="201:37">else<block type="pseudo" pos:start="201:17" pos:end="201:37"><block_content pos:start="201:17" pos:end="201:37">

                <expr_stmt pos:start="201:17" pos:end="201:37"><expr pos:start="201:17" pos:end="201:36"><name pos:start="201:17" pos:end="201:21">ssize</name> <operator pos:start="201:23" pos:end="201:23">=</operator> <name pos:start="201:25" pos:end="201:36"><name pos:start="201:25" pos:end="201:25">s</name><operator pos:start="201:26" pos:end="201:27">-&gt;</operator><name pos:start="201:28" pos:end="201:36">stripsize</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <if_stmt pos:start="205:13" pos:end="211:35"><if pos:start="205:13" pos:end="207:55">if <condition pos:start="205:16" pos:end="205:28">(<expr pos:start="205:17" pos:end="205:27"><name pos:start="205:17" pos:end="205:27"><name pos:start="205:17" pos:end="205:17">s</name><operator pos:start="205:18" pos:end="205:19">-&gt;</operator><name pos:start="205:20" pos:end="205:27">strippos</name></name></expr>)</condition><block type="pseudo" pos:start="207:17" pos:end="207:55"><block_content pos:start="207:17" pos:end="207:55">

                <expr_stmt pos:start="207:17" pos:end="207:55"><expr pos:start="207:17" pos:end="207:54"><name pos:start="207:17" pos:end="207:20">soff</name> <operator pos:start="207:22" pos:end="207:22">=</operator> <call pos:start="207:24" pos:end="207:54"><name pos:start="207:24" pos:end="207:30">ff_tget</name><argument_list pos:start="207:31" pos:end="207:54">(<argument pos:start="207:32" pos:end="207:41"><expr pos:start="207:32" pos:end="207:41"><operator pos:start="207:32" pos:end="207:32">&amp;</operator><name pos:start="207:33" pos:end="207:41">stripdata</name></expr></argument>, <argument pos:start="207:44" pos:end="207:49"><expr pos:start="207:44" pos:end="207:49"><name pos:start="207:44" pos:end="207:49"><name pos:start="207:44" pos:end="207:44">s</name><operator pos:start="207:45" pos:end="207:46">-&gt;</operator><name pos:start="207:47" pos:end="207:49">sot</name></name></expr></argument>, <argument pos:start="207:52" pos:end="207:53"><expr pos:start="207:52" pos:end="207:53"><name pos:start="207:52" pos:end="207:53">le</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="209:13" pos:end="211:35">else<block type="pseudo" pos:start="211:17" pos:end="211:35"><block_content pos:start="211:17" pos:end="211:35">

                <expr_stmt pos:start="211:17" pos:end="211:35"><expr pos:start="211:17" pos:end="211:34"><name pos:start="211:17" pos:end="211:20">soff</name> <operator pos:start="211:22" pos:end="211:22">=</operator> <name pos:start="211:24" pos:end="211:34"><name pos:start="211:24" pos:end="211:24">s</name><operator pos:start="211:25" pos:end="211:26">-&gt;</operator><name pos:start="211:27" pos:end="211:34">stripoff</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <if_stmt pos:start="215:13" pos:end="221:13"><if pos:start="215:13" pos:end="221:13">if <condition pos:start="215:16" pos:end="215:65">(<expr pos:start="215:17" pos:end="215:64"><name pos:start="215:17" pos:end="215:20">soff</name> <operator pos:start="215:22" pos:end="215:22">&gt;</operator> <name pos:start="215:24" pos:end="215:34"><name pos:start="215:24" pos:end="215:28">avpkt</name><operator pos:start="215:29" pos:end="215:30">-&gt;</operator><name pos:start="215:31" pos:end="215:34">size</name></name> <operator pos:start="215:36" pos:end="215:37">||</operator> <name pos:start="215:39" pos:end="215:43">ssize</name> <operator pos:start="215:45" pos:end="215:45">&gt;</operator> <name pos:start="215:47" pos:end="215:57"><name pos:start="215:47" pos:end="215:51">avpkt</name><operator pos:start="215:52" pos:end="215:53">-&gt;</operator><name pos:start="215:54" pos:end="215:57">size</name></name> <operator pos:start="215:59" pos:end="215:59">-</operator> <name pos:start="215:61" pos:end="215:64">soff</name></expr>)</condition> <block pos:start="215:67" pos:end="221:13">{<block_content pos:start="217:17" pos:end="219:43">

                <expr_stmt pos:start="217:17" pos:end="217:75"><expr pos:start="217:17" pos:end="217:74"><call pos:start="217:17" pos:end="217:74"><name pos:start="217:17" pos:end="217:22">av_log</name><argument_list pos:start="217:23" pos:end="217:74">(<argument pos:start="217:24" pos:end="217:28"><expr pos:start="217:24" pos:end="217:28"><name pos:start="217:24" pos:end="217:28">avctx</name></expr></argument>, <argument pos:start="217:31" pos:end="217:42"><expr pos:start="217:31" pos:end="217:42"><name pos:start="217:31" pos:end="217:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="217:45" pos:end="217:73"><expr pos:start="217:45" pos:end="217:73"><literal type="string" pos:start="217:45" pos:end="217:73">"Invalid strip size/offset\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="219:17" pos:end="219:43">return <expr pos:start="219:24" pos:end="219:42"><name pos:start="219:24" pos:end="219:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="223:13" pos:end="233:13"><if pos:start="223:13" pos:end="233:13">if <condition pos:start="223:16" pos:end="225:76">(<expr pos:start="223:17" pos:end="225:75"><operator pos:start="223:17" pos:end="223:17">(</operator><name pos:start="223:18" pos:end="223:20">ret</name> <operator pos:start="223:22" pos:end="223:22">=</operator> <call pos:start="223:24" pos:end="225:70"><name pos:start="223:24" pos:end="223:40">tiff_unpack_strip</name><argument_list pos:start="223:41" pos:end="225:70">(<argument pos:start="223:42" pos:end="223:42"><expr pos:start="223:42" pos:end="223:42"><name pos:start="223:42" pos:end="223:42">s</name></expr></argument>, <argument pos:start="223:45" pos:end="223:45"><expr pos:start="223:45" pos:end="223:45"><name pos:start="223:45" pos:end="223:45">p</name></expr></argument>, <argument pos:start="223:48" pos:end="223:50"><expr pos:start="223:48" pos:end="223:50"><name pos:start="223:48" pos:end="223:50">dst</name></expr></argument>, <argument pos:start="223:53" pos:end="223:58"><expr pos:start="223:53" pos:end="223:58"><name pos:start="223:53" pos:end="223:58">stride</name></expr></argument>, <argument pos:start="223:61" pos:end="223:78"><expr pos:start="223:61" pos:end="223:78"><name pos:start="223:61" pos:end="223:71"><name pos:start="223:61" pos:end="223:65">avpkt</name><operator pos:start="223:66" pos:end="223:67">-&gt;</operator><name pos:start="223:68" pos:end="223:71">data</name></name> <operator pos:start="223:73" pos:end="223:73">+</operator> <name pos:start="223:75" pos:end="223:78">soff</name></expr></argument>, <argument pos:start="223:81" pos:end="223:85"><expr pos:start="223:81" pos:end="223:85"><name pos:start="223:81" pos:end="223:85">ssize</name></expr></argument>, <argument pos:start="223:88" pos:end="223:88"><expr pos:start="223:88" pos:end="223:88"><name pos:start="223:88" pos:end="223:88">i</name></expr></argument>,

                                         <argument pos:start="225:42" pos:end="225:69"><expr pos:start="225:42" pos:end="225:69"><call pos:start="225:42" pos:end="225:69"><name pos:start="225:42" pos:end="225:46">FFMIN</name><argument_list pos:start="225:47" pos:end="225:69">(<argument pos:start="225:48" pos:end="225:53"><expr pos:start="225:48" pos:end="225:53"><name pos:start="225:48" pos:end="225:53"><name pos:start="225:48" pos:end="225:48">s</name><operator pos:start="225:49" pos:end="225:50">-&gt;</operator><name pos:start="225:51" pos:end="225:53">rps</name></name></expr></argument>, <argument pos:start="225:56" pos:end="225:68"><expr pos:start="225:56" pos:end="225:68"><name pos:start="225:56" pos:end="225:64"><name pos:start="225:56" pos:end="225:56">s</name><operator pos:start="225:57" pos:end="225:58">-&gt;</operator><name pos:start="225:59" pos:end="225:64">height</name></name> <operator pos:start="225:66" pos:end="225:66">-</operator> <name pos:start="225:68" pos:end="225:68">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator pos:start="225:71" pos:end="225:71">)</operator> <operator pos:start="225:73" pos:end="225:73">&lt;</operator> <literal type="number" pos:start="225:75" pos:end="225:75">0</literal></expr>)</condition> <block pos:start="225:78" pos:end="233:13">{<block_content pos:start="227:17" pos:end="231:22">

                <if_stmt pos:start="227:17" pos:end="229:31"><if pos:start="227:17" pos:end="229:31">if <condition pos:start="227:20" pos:end="227:59">(<expr pos:start="227:21" pos:end="227:58"><name pos:start="227:21" pos:end="227:42"><name pos:start="227:21" pos:end="227:25">avctx</name><operator pos:start="227:26" pos:end="227:27">-&gt;</operator><name pos:start="227:28" pos:end="227:42">err_recognition</name></name> <operator pos:start="227:44" pos:end="227:44">&amp;</operator> <name pos:start="227:46" pos:end="227:58">AV_EF_EXPLODE</name></expr>)</condition><block type="pseudo" pos:start="229:21" pos:end="229:31"><block_content pos:start="229:21" pos:end="229:31">

                    <return pos:start="229:21" pos:end="229:31">return <expr pos:start="229:28" pos:end="229:30"><name pos:start="229:28" pos:end="229:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

                <break pos:start="231:17" pos:end="231:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="235:13" pos:end="235:35"><expr pos:start="235:13" pos:end="235:34"><name pos:start="235:13" pos:end="235:15">dst</name> <operator pos:start="235:17" pos:end="235:18">+=</operator> <name pos:start="235:20" pos:end="235:25"><name pos:start="235:20" pos:end="235:20">s</name><operator pos:start="235:21" pos:end="235:22">-&gt;</operator><name pos:start="235:23" pos:end="235:25">rps</name></name> <operator pos:start="235:27" pos:end="235:27">*</operator> <name pos:start="235:29" pos:end="235:34">stride</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="239:9" pos:end="317:9"><if pos:start="239:9" pos:end="317:9">if <condition pos:start="239:12" pos:end="239:30">(<expr pos:start="239:13" pos:end="239:29"><name pos:start="239:13" pos:end="239:24"><name pos:start="239:13" pos:end="239:13">s</name><operator pos:start="239:14" pos:end="239:15">-&gt;</operator><name pos:start="239:16" pos:end="239:24">predictor</name></name> <operator pos:start="239:26" pos:end="239:27">==</operator> <literal type="number" pos:start="239:29" pos:end="239:29">2</literal></expr>)</condition> <block pos:start="239:32" pos:end="317:9">{<block_content pos:start="241:13" pos:end="315:13">

            <if_stmt pos:start="241:13" pos:end="247:13"><if pos:start="241:13" pos:end="247:13">if <condition pos:start="241:16" pos:end="241:57">(<expr pos:start="241:17" pos:end="241:56"><name pos:start="241:17" pos:end="241:30"><name pos:start="241:17" pos:end="241:17">s</name><operator pos:start="241:18" pos:end="241:19">-&gt;</operator><name pos:start="241:20" pos:end="241:30">photometric</name></name> <operator pos:start="241:32" pos:end="241:33">==</operator> <name pos:start="241:35" pos:end="241:56">TIFF_PHOTOMETRIC_YCBCR</name></expr>)</condition> <block pos:start="241:59" pos:end="247:13">{<block_content pos:start="243:17" pos:end="245:44">

                <expr_stmt pos:start="243:17" pos:end="243:89"><expr pos:start="243:17" pos:end="243:88"><call pos:start="243:17" pos:end="243:88"><name pos:start="243:17" pos:end="243:22">av_log</name><argument_list pos:start="243:23" pos:end="243:88">(<argument pos:start="243:24" pos:end="243:31"><expr pos:start="243:24" pos:end="243:31"><name pos:start="243:24" pos:end="243:31"><name pos:start="243:24" pos:end="243:24">s</name><operator pos:start="243:25" pos:end="243:26">-&gt;</operator><name pos:start="243:27" pos:end="243:31">avctx</name></name></expr></argument>, <argument pos:start="243:34" pos:end="243:45"><expr pos:start="243:34" pos:end="243:45"><name pos:start="243:34" pos:end="243:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="243:48" pos:end="243:87"><expr pos:start="243:48" pos:end="243:87"><literal type="string" pos:start="243:48" pos:end="243:87">"predictor == 2 with YUV is unsupported"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="245:17" pos:end="245:44">return <expr pos:start="245:24" pos:end="245:43"><name pos:start="245:24" pos:end="245:43">AVERROR_PATCHWELCOME</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="249:13" pos:end="249:35"><expr pos:start="249:13" pos:end="249:34"><name pos:start="249:13" pos:end="249:15">dst</name>   <operator pos:start="249:19" pos:end="249:19">=</operator> <name pos:start="249:21" pos:end="249:34"><name pos:start="249:21" pos:end="249:21">p</name><operator pos:start="249:22" pos:end="249:23">-&gt;</operator><name pos:start="249:24" pos:end="249:27">data</name><index pos:start="249:28" pos:end="249:34">[<expr pos:start="249:29" pos:end="249:33"><name pos:start="249:29" pos:end="249:33">plane</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="251:13" pos:end="251:32"><expr pos:start="251:13" pos:end="251:31"><name pos:start="251:13" pos:end="251:16">soff</name>  <operator pos:start="251:19" pos:end="251:19">=</operator> <name pos:start="251:21" pos:end="251:26"><name pos:start="251:21" pos:end="251:21">s</name><operator pos:start="251:22" pos:end="251:23">-&gt;</operator><name pos:start="251:24" pos:end="251:26">bpp</name></name> <operator pos:start="251:28" pos:end="251:29">&gt;&gt;</operator> <literal type="number" pos:start="251:31" pos:end="251:31">3</literal></expr>;</expr_stmt>

            <if_stmt pos:start="253:13" pos:end="255:53"><if pos:start="253:13" pos:end="255:53">if <condition pos:start="253:16" pos:end="253:26">(<expr pos:start="253:17" pos:end="253:25"><name pos:start="253:17" pos:end="253:25"><name pos:start="253:17" pos:end="253:17">s</name><operator pos:start="253:18" pos:end="253:19">-&gt;</operator><name pos:start="253:20" pos:end="253:25">planar</name></name></expr>)</condition><block type="pseudo" pos:start="255:17" pos:end="255:53"><block_content pos:start="255:17" pos:end="255:53">

                <expr_stmt pos:start="255:17" pos:end="255:53"><expr pos:start="255:17" pos:end="255:52"><name pos:start="255:17" pos:end="255:20">soff</name>  <operator pos:start="255:23" pos:end="255:23">=</operator> <call pos:start="255:25" pos:end="255:52"><name pos:start="255:25" pos:end="255:29">FFMAX</name><argument_list pos:start="255:30" pos:end="255:52">(<argument pos:start="255:31" pos:end="255:48"><expr pos:start="255:31" pos:end="255:48"><name pos:start="255:31" pos:end="255:34">soff</name> <operator pos:start="255:36" pos:end="255:36">/</operator> <name pos:start="255:38" pos:end="255:48"><name pos:start="255:38" pos:end="255:38">s</name><operator pos:start="255:39" pos:end="255:40">-&gt;</operator><name pos:start="255:41" pos:end="255:48">bppcount</name></name></expr></argument>, <argument pos:start="255:51" pos:end="255:51"><expr pos:start="255:51" pos:end="255:51"><literal type="number" pos:start="255:51" pos:end="255:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="257:13" pos:end="257:36"><expr pos:start="257:13" pos:end="257:35"><name pos:start="257:13" pos:end="257:17">ssize</name> <operator pos:start="257:19" pos:end="257:19">=</operator> <name pos:start="257:21" pos:end="257:28"><name pos:start="257:21" pos:end="257:21">s</name><operator pos:start="257:22" pos:end="257:23">-&gt;</operator><name pos:start="257:24" pos:end="257:28">width</name></name> <operator pos:start="257:30" pos:end="257:30">*</operator> <name pos:start="257:32" pos:end="257:35">soff</name></expr>;</expr_stmt>

            <if_stmt pos:start="259:13" pos:end="315:13"><if pos:start="259:13" pos:end="281:13">if <condition pos:start="259:16" pos:end="269:58">(<expr pos:start="259:17" pos:end="269:57"><name pos:start="259:17" pos:end="259:33"><name pos:start="259:17" pos:end="259:17">s</name><operator pos:start="259:18" pos:end="259:19">-&gt;</operator><name pos:start="259:20" pos:end="259:24">avctx</name><operator pos:start="259:25" pos:end="259:26">-&gt;</operator><name pos:start="259:27" pos:end="259:33">pix_fmt</name></name> <operator pos:start="259:35" pos:end="259:36">==</operator> <name pos:start="259:38" pos:end="259:55">AV_PIX_FMT_RGB48LE</name> <operator pos:start="259:57" pos:end="259:58">||</operator>

                <name pos:start="261:17" pos:end="261:33"><name pos:start="261:17" pos:end="261:17">s</name><operator pos:start="261:18" pos:end="261:19">-&gt;</operator><name pos:start="261:20" pos:end="261:24">avctx</name><operator pos:start="261:25" pos:end="261:26">-&gt;</operator><name pos:start="261:27" pos:end="261:33">pix_fmt</name></name> <operator pos:start="261:35" pos:end="261:36">==</operator> <name pos:start="261:38" pos:end="261:56">AV_PIX_FMT_RGBA64LE</name> <operator pos:start="261:58" pos:end="261:59">||</operator>

                <name pos:start="263:17" pos:end="263:33"><name pos:start="263:17" pos:end="263:17">s</name><operator pos:start="263:18" pos:end="263:19">-&gt;</operator><name pos:start="263:20" pos:end="263:24">avctx</name><operator pos:start="263:25" pos:end="263:26">-&gt;</operator><name pos:start="263:27" pos:end="263:33">pix_fmt</name></name> <operator pos:start="263:35" pos:end="263:36">==</operator> <name pos:start="263:38" pos:end="263:56">AV_PIX_FMT_GRAY16LE</name> <operator pos:start="263:58" pos:end="263:59">||</operator>

                <name pos:start="265:17" pos:end="265:33"><name pos:start="265:17" pos:end="265:17">s</name><operator pos:start="265:18" pos:end="265:19">-&gt;</operator><name pos:start="265:20" pos:end="265:24">avctx</name><operator pos:start="265:25" pos:end="265:26">-&gt;</operator><name pos:start="265:27" pos:end="265:33">pix_fmt</name></name> <operator pos:start="265:35" pos:end="265:36">==</operator> <name pos:start="265:38" pos:end="265:54">AV_PIX_FMT_YA16LE</name> <operator pos:start="265:56" pos:end="265:57">||</operator>

                <name pos:start="267:17" pos:end="267:33"><name pos:start="267:17" pos:end="267:17">s</name><operator pos:start="267:18" pos:end="267:19">-&gt;</operator><name pos:start="267:20" pos:end="267:24">avctx</name><operator pos:start="267:25" pos:end="267:26">-&gt;</operator><name pos:start="267:27" pos:end="267:33">pix_fmt</name></name> <operator pos:start="267:35" pos:end="267:36">==</operator> <name pos:start="267:38" pos:end="267:56">AV_PIX_FMT_GBRP16LE</name> <operator pos:start="267:58" pos:end="267:59">||</operator>

                <name pos:start="269:17" pos:end="269:33"><name pos:start="269:17" pos:end="269:17">s</name><operator pos:start="269:18" pos:end="269:19">-&gt;</operator><name pos:start="269:20" pos:end="269:24">avctx</name><operator pos:start="269:25" pos:end="269:26">-&gt;</operator><name pos:start="269:27" pos:end="269:33">pix_fmt</name></name> <operator pos:start="269:35" pos:end="269:36">==</operator> <name pos:start="269:38" pos:end="269:57">AV_PIX_FMT_GBRAP16LE</name></expr>)</condition> <block pos:start="269:60" pos:end="281:13">{<block_content pos:start="271:17" pos:end="279:17">

                <for pos:start="271:17" pos:end="279:17">for <control pos:start="271:21" pos:end="271:47">(<init pos:start="271:22" pos:end="271:27"><expr pos:start="271:22" pos:end="271:26"><name pos:start="271:22" pos:end="271:22">i</name> <operator pos:start="271:24" pos:end="271:24">=</operator> <literal type="number" pos:start="271:26" pos:end="271:26">0</literal></expr>;</init> <condition pos:start="271:29" pos:end="271:42"><expr pos:start="271:29" pos:end="271:41"><name pos:start="271:29" pos:end="271:29">i</name> <operator pos:start="271:31" pos:end="271:31">&lt;</operator> <name pos:start="271:33" pos:end="271:41"><name pos:start="271:33" pos:end="271:33">s</name><operator pos:start="271:34" pos:end="271:35">-&gt;</operator><name pos:start="271:36" pos:end="271:41">height</name></name></expr>;</condition> <incr pos:start="271:44" pos:end="271:46"><expr pos:start="271:44" pos:end="271:46"><name pos:start="271:44" pos:end="271:44">i</name><operator pos:start="271:45" pos:end="271:46">++</operator></expr></incr>)</control> <block pos:start="271:49" pos:end="279:17">{<block_content pos:start="273:21" pos:end="277:34">

                    <for pos:start="273:21" pos:end="275:85">for <control pos:start="273:25" pos:end="273:53">(<init pos:start="273:26" pos:end="273:34"><expr pos:start="273:26" pos:end="273:33"><name pos:start="273:26" pos:end="273:26">j</name> <operator pos:start="273:28" pos:end="273:28">=</operator> <name pos:start="273:30" pos:end="273:33">soff</name></expr>;</init> <condition pos:start="273:36" pos:end="273:45"><expr pos:start="273:36" pos:end="273:44"><name pos:start="273:36" pos:end="273:36">j</name> <operator pos:start="273:38" pos:end="273:38">&lt;</operator> <name pos:start="273:40" pos:end="273:44">ssize</name></expr>;</condition> <incr pos:start="273:47" pos:end="273:52"><expr pos:start="273:47" pos:end="273:52"><name pos:start="273:47" pos:end="273:47">j</name> <operator pos:start="273:49" pos:end="273:50">+=</operator> <literal type="number" pos:start="273:52" pos:end="273:52">2</literal></expr></incr>)</control><block type="pseudo" pos:start="275:25" pos:end="275:85"><block_content pos:start="275:25" pos:end="275:85">

                        <expr_stmt pos:start="275:25" pos:end="275:85"><expr pos:start="275:25" pos:end="275:84"><call pos:start="275:25" pos:end="275:84"><name pos:start="275:25" pos:end="275:31">AV_WL16</name><argument_list pos:start="275:32" pos:end="275:84">(<argument pos:start="275:33" pos:end="275:39"><expr pos:start="275:33" pos:end="275:39"><name pos:start="275:33" pos:end="275:35">dst</name> <operator pos:start="275:37" pos:end="275:37">+</operator> <name pos:start="275:39" pos:end="275:39">j</name></expr></argument>, <argument pos:start="275:42" pos:end="275:83"><expr pos:start="275:42" pos:end="275:83"><call pos:start="275:42" pos:end="275:57"><name pos:start="275:42" pos:end="275:48">AV_RL16</name><argument_list pos:start="275:49" pos:end="275:57">(<argument pos:start="275:50" pos:end="275:56"><expr pos:start="275:50" pos:end="275:56"><name pos:start="275:50" pos:end="275:52">dst</name> <operator pos:start="275:54" pos:end="275:54">+</operator> <name pos:start="275:56" pos:end="275:56">j</name></expr></argument>)</argument_list></call> <operator pos:start="275:59" pos:end="275:59">+</operator> <call pos:start="275:61" pos:end="275:83"><name pos:start="275:61" pos:end="275:67">AV_RL16</name><argument_list pos:start="275:68" pos:end="275:83">(<argument pos:start="275:69" pos:end="275:82"><expr pos:start="275:69" pos:end="275:82"><name pos:start="275:69" pos:end="275:71">dst</name> <operator pos:start="275:73" pos:end="275:73">+</operator> <name pos:start="275:75" pos:end="275:75">j</name> <operator pos:start="275:77" pos:end="275:77">-</operator> <name pos:start="275:79" pos:end="275:82">soff</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                    <expr_stmt pos:start="277:21" pos:end="277:34"><expr pos:start="277:21" pos:end="277:33"><name pos:start="277:21" pos:end="277:23">dst</name> <operator pos:start="277:25" pos:end="277:26">+=</operator> <name pos:start="277:28" pos:end="277:33">stride</name></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if> <if type="elseif" pos:start="281:15" pos:end="303:13">else if <condition pos:start="281:23" pos:end="291:65">(<expr pos:start="281:24" pos:end="291:64"><name pos:start="281:24" pos:end="281:40"><name pos:start="281:24" pos:end="281:24">s</name><operator pos:start="281:25" pos:end="281:26">-&gt;</operator><name pos:start="281:27" pos:end="281:31">avctx</name><operator pos:start="281:32" pos:end="281:33">-&gt;</operator><name pos:start="281:34" pos:end="281:40">pix_fmt</name></name> <operator pos:start="281:42" pos:end="281:43">==</operator> <name pos:start="281:45" pos:end="281:62">AV_PIX_FMT_RGB48BE</name> <operator pos:start="281:64" pos:end="281:65">||</operator>

                       <name pos:start="283:24" pos:end="283:40"><name pos:start="283:24" pos:end="283:24">s</name><operator pos:start="283:25" pos:end="283:26">-&gt;</operator><name pos:start="283:27" pos:end="283:31">avctx</name><operator pos:start="283:32" pos:end="283:33">-&gt;</operator><name pos:start="283:34" pos:end="283:40">pix_fmt</name></name> <operator pos:start="283:42" pos:end="283:43">==</operator> <name pos:start="283:45" pos:end="283:63">AV_PIX_FMT_RGBA64BE</name> <operator pos:start="283:65" pos:end="283:66">||</operator>

                       <name pos:start="285:24" pos:end="285:40"><name pos:start="285:24" pos:end="285:24">s</name><operator pos:start="285:25" pos:end="285:26">-&gt;</operator><name pos:start="285:27" pos:end="285:31">avctx</name><operator pos:start="285:32" pos:end="285:33">-&gt;</operator><name pos:start="285:34" pos:end="285:40">pix_fmt</name></name> <operator pos:start="285:42" pos:end="285:43">==</operator> <name pos:start="285:45" pos:end="285:63">AV_PIX_FMT_GRAY16BE</name> <operator pos:start="285:65" pos:end="285:66">||</operator>

                       <name pos:start="287:24" pos:end="287:40"><name pos:start="287:24" pos:end="287:24">s</name><operator pos:start="287:25" pos:end="287:26">-&gt;</operator><name pos:start="287:27" pos:end="287:31">avctx</name><operator pos:start="287:32" pos:end="287:33">-&gt;</operator><name pos:start="287:34" pos:end="287:40">pix_fmt</name></name> <operator pos:start="287:42" pos:end="287:43">==</operator> <name pos:start="287:45" pos:end="287:61">AV_PIX_FMT_YA16BE</name> <operator pos:start="287:63" pos:end="287:64">||</operator>

                       <name pos:start="289:24" pos:end="289:40"><name pos:start="289:24" pos:end="289:24">s</name><operator pos:start="289:25" pos:end="289:26">-&gt;</operator><name pos:start="289:27" pos:end="289:31">avctx</name><operator pos:start="289:32" pos:end="289:33">-&gt;</operator><name pos:start="289:34" pos:end="289:40">pix_fmt</name></name> <operator pos:start="289:42" pos:end="289:43">==</operator> <name pos:start="289:45" pos:end="289:63">AV_PIX_FMT_GBRP16BE</name> <operator pos:start="289:65" pos:end="289:66">||</operator>

                       <name pos:start="291:24" pos:end="291:40"><name pos:start="291:24" pos:end="291:24">s</name><operator pos:start="291:25" pos:end="291:26">-&gt;</operator><name pos:start="291:27" pos:end="291:31">avctx</name><operator pos:start="291:32" pos:end="291:33">-&gt;</operator><name pos:start="291:34" pos:end="291:40">pix_fmt</name></name> <operator pos:start="291:42" pos:end="291:43">==</operator> <name pos:start="291:45" pos:end="291:64">AV_PIX_FMT_GBRAP16BE</name></expr>)</condition> <block pos:start="291:67" pos:end="303:13">{<block_content pos:start="293:17" pos:end="301:17">

                <for pos:start="293:17" pos:end="301:17">for <control pos:start="293:21" pos:end="293:47">(<init pos:start="293:22" pos:end="293:27"><expr pos:start="293:22" pos:end="293:26"><name pos:start="293:22" pos:end="293:22">i</name> <operator pos:start="293:24" pos:end="293:24">=</operator> <literal type="number" pos:start="293:26" pos:end="293:26">0</literal></expr>;</init> <condition pos:start="293:29" pos:end="293:42"><expr pos:start="293:29" pos:end="293:41"><name pos:start="293:29" pos:end="293:29">i</name> <operator pos:start="293:31" pos:end="293:31">&lt;</operator> <name pos:start="293:33" pos:end="293:41"><name pos:start="293:33" pos:end="293:33">s</name><operator pos:start="293:34" pos:end="293:35">-&gt;</operator><name pos:start="293:36" pos:end="293:41">height</name></name></expr>;</condition> <incr pos:start="293:44" pos:end="293:46"><expr pos:start="293:44" pos:end="293:46"><name pos:start="293:44" pos:end="293:44">i</name><operator pos:start="293:45" pos:end="293:46">++</operator></expr></incr>)</control> <block pos:start="293:49" pos:end="301:17">{<block_content pos:start="295:21" pos:end="299:34">

                    <for pos:start="295:21" pos:end="297:85">for <control pos:start="295:25" pos:end="295:53">(<init pos:start="295:26" pos:end="295:34"><expr pos:start="295:26" pos:end="295:33"><name pos:start="295:26" pos:end="295:26">j</name> <operator pos:start="295:28" pos:end="295:28">=</operator> <name pos:start="295:30" pos:end="295:33">soff</name></expr>;</init> <condition pos:start="295:36" pos:end="295:45"><expr pos:start="295:36" pos:end="295:44"><name pos:start="295:36" pos:end="295:36">j</name> <operator pos:start="295:38" pos:end="295:38">&lt;</operator> <name pos:start="295:40" pos:end="295:44">ssize</name></expr>;</condition> <incr pos:start="295:47" pos:end="295:52"><expr pos:start="295:47" pos:end="295:52"><name pos:start="295:47" pos:end="295:47">j</name> <operator pos:start="295:49" pos:end="295:50">+=</operator> <literal type="number" pos:start="295:52" pos:end="295:52">2</literal></expr></incr>)</control><block type="pseudo" pos:start="297:25" pos:end="297:85"><block_content pos:start="297:25" pos:end="297:85">

                        <expr_stmt pos:start="297:25" pos:end="297:85"><expr pos:start="297:25" pos:end="297:84"><call pos:start="297:25" pos:end="297:84"><name pos:start="297:25" pos:end="297:31">AV_WB16</name><argument_list pos:start="297:32" pos:end="297:84">(<argument pos:start="297:33" pos:end="297:39"><expr pos:start="297:33" pos:end="297:39"><name pos:start="297:33" pos:end="297:35">dst</name> <operator pos:start="297:37" pos:end="297:37">+</operator> <name pos:start="297:39" pos:end="297:39">j</name></expr></argument>, <argument pos:start="297:42" pos:end="297:83"><expr pos:start="297:42" pos:end="297:83"><call pos:start="297:42" pos:end="297:57"><name pos:start="297:42" pos:end="297:48">AV_RB16</name><argument_list pos:start="297:49" pos:end="297:57">(<argument pos:start="297:50" pos:end="297:56"><expr pos:start="297:50" pos:end="297:56"><name pos:start="297:50" pos:end="297:52">dst</name> <operator pos:start="297:54" pos:end="297:54">+</operator> <name pos:start="297:56" pos:end="297:56">j</name></expr></argument>)</argument_list></call> <operator pos:start="297:59" pos:end="297:59">+</operator> <call pos:start="297:61" pos:end="297:83"><name pos:start="297:61" pos:end="297:67">AV_RB16</name><argument_list pos:start="297:68" pos:end="297:83">(<argument pos:start="297:69" pos:end="297:82"><expr pos:start="297:69" pos:end="297:82"><name pos:start="297:69" pos:end="297:71">dst</name> <operator pos:start="297:73" pos:end="297:73">+</operator> <name pos:start="297:75" pos:end="297:75">j</name> <operator pos:start="297:77" pos:end="297:77">-</operator> <name pos:start="297:79" pos:end="297:82">soff</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                    <expr_stmt pos:start="299:21" pos:end="299:34"><expr pos:start="299:21" pos:end="299:33"><name pos:start="299:21" pos:end="299:23">dst</name> <operator pos:start="299:25" pos:end="299:26">+=</operator> <name pos:start="299:28" pos:end="299:33">stride</name></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if> <else pos:start="303:15" pos:end="315:13">else <block pos:start="303:20" pos:end="315:13">{<block_content pos:start="305:17" pos:end="313:17">

                <for pos:start="305:17" pos:end="313:17">for <control pos:start="305:21" pos:end="305:47">(<init pos:start="305:22" pos:end="305:27"><expr pos:start="305:22" pos:end="305:26"><name pos:start="305:22" pos:end="305:22">i</name> <operator pos:start="305:24" pos:end="305:24">=</operator> <literal type="number" pos:start="305:26" pos:end="305:26">0</literal></expr>;</init> <condition pos:start="305:29" pos:end="305:42"><expr pos:start="305:29" pos:end="305:41"><name pos:start="305:29" pos:end="305:29">i</name> <operator pos:start="305:31" pos:end="305:31">&lt;</operator> <name pos:start="305:33" pos:end="305:41"><name pos:start="305:33" pos:end="305:33">s</name><operator pos:start="305:34" pos:end="305:35">-&gt;</operator><name pos:start="305:36" pos:end="305:41">height</name></name></expr>;</condition> <incr pos:start="305:44" pos:end="305:46"><expr pos:start="305:44" pos:end="305:46"><name pos:start="305:44" pos:end="305:44">i</name><operator pos:start="305:45" pos:end="305:46">++</operator></expr></incr>)</control> <block pos:start="305:49" pos:end="313:17">{<block_content pos:start="307:21" pos:end="311:34">

                    <for pos:start="307:21" pos:end="309:48">for <control pos:start="307:25" pos:end="307:50">(<init pos:start="307:26" pos:end="307:34"><expr pos:start="307:26" pos:end="307:33"><name pos:start="307:26" pos:end="307:26">j</name> <operator pos:start="307:28" pos:end="307:28">=</operator> <name pos:start="307:30" pos:end="307:33">soff</name></expr>;</init> <condition pos:start="307:36" pos:end="307:45"><expr pos:start="307:36" pos:end="307:44"><name pos:start="307:36" pos:end="307:36">j</name> <operator pos:start="307:38" pos:end="307:38">&lt;</operator> <name pos:start="307:40" pos:end="307:44">ssize</name></expr>;</condition> <incr pos:start="307:47" pos:end="307:49"><expr pos:start="307:47" pos:end="307:49"><name pos:start="307:47" pos:end="307:47">j</name><operator pos:start="307:48" pos:end="307:49">++</operator></expr></incr>)</control><block type="pseudo" pos:start="309:25" pos:end="309:48"><block_content pos:start="309:25" pos:end="309:48">

                        <expr_stmt pos:start="309:25" pos:end="309:48"><expr pos:start="309:25" pos:end="309:47"><name pos:start="309:25" pos:end="309:30"><name pos:start="309:25" pos:end="309:27">dst</name><index pos:start="309:28" pos:end="309:30">[<expr pos:start="309:29" pos:end="309:29"><name pos:start="309:29" pos:end="309:29">j</name></expr>]</index></name> <operator pos:start="309:32" pos:end="309:33">+=</operator> <name pos:start="309:35" pos:end="309:47"><name pos:start="309:35" pos:end="309:37">dst</name><index pos:start="309:38" pos:end="309:47">[<expr pos:start="309:39" pos:end="309:46"><name pos:start="309:39" pos:end="309:39">j</name> <operator pos:start="309:41" pos:end="309:41">-</operator> <name pos:start="309:43" pos:end="309:46">soff</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                    <expr_stmt pos:start="311:21" pos:end="311:34"><expr pos:start="311:21" pos:end="311:33"><name pos:start="311:21" pos:end="311:23">dst</name> <operator pos:start="311:25" pos:end="311:26">+=</operator> <name pos:start="311:28" pos:end="311:33">stride</name></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="321:9" pos:end="337:9"><if pos:start="321:9" pos:end="337:9">if <condition pos:start="321:12" pos:end="321:61">(<expr pos:start="321:13" pos:end="321:60"><name pos:start="321:13" pos:end="321:26"><name pos:start="321:13" pos:end="321:13">s</name><operator pos:start="321:14" pos:end="321:15">-&gt;</operator><name pos:start="321:16" pos:end="321:26">photometric</name></name> <operator pos:start="321:28" pos:end="321:29">==</operator> <name pos:start="321:31" pos:end="321:60">TIFF_PHOTOMETRIC_WHITE_IS_ZERO</name></expr>)</condition> <block pos:start="321:63" pos:end="337:9">{<block_content pos:start="323:13" pos:end="335:13">

            <decl_stmt pos:start="323:13" pos:end="323:83"><decl pos:start="323:13" pos:end="323:82"><type pos:start="323:13" pos:end="323:15"><name pos:start="323:13" pos:end="323:15">int</name></type> <name pos:start="323:17" pos:end="323:17">c</name> <init pos:start="323:19" pos:end="323:82">= <expr pos:start="323:21" pos:end="323:82"><operator pos:start="323:21" pos:end="323:21">(</operator><ternary pos:start="323:22" pos:end="323:81"><condition pos:start="323:22" pos:end="323:59"><expr pos:start="323:22" pos:end="323:57"><name pos:start="323:22" pos:end="323:38"><name pos:start="323:22" pos:end="323:22">s</name><operator pos:start="323:23" pos:end="323:24">-&gt;</operator><name pos:start="323:25" pos:end="323:29">avctx</name><operator pos:start="323:30" pos:end="323:31">-&gt;</operator><name pos:start="323:32" pos:end="323:38">pix_fmt</name></name> <operator pos:start="323:40" pos:end="323:41">==</operator> <name pos:start="323:43" pos:end="323:57">AV_PIX_FMT_PAL8</name></expr> ?</condition><then pos:start="323:61" pos:end="323:75"> <expr pos:start="323:61" pos:end="323:75"><operator pos:start="323:61" pos:end="323:61">(</operator><literal type="number" pos:start="323:62" pos:end="323:62">1</literal><operator pos:start="323:63" pos:end="323:64">&lt;&lt;</operator><name pos:start="323:65" pos:end="323:70"><name pos:start="323:65" pos:end="323:65">s</name><operator pos:start="323:66" pos:end="323:67">-&gt;</operator><name pos:start="323:68" pos:end="323:70">bpp</name></name><operator pos:start="323:71" pos:end="323:71">)</operator> <operator pos:start="323:73" pos:end="323:73">-</operator> <literal type="number" pos:start="323:75" pos:end="323:75">1</literal></expr> </then><else pos:start="323:77" pos:end="323:81">: <expr pos:start="323:79" pos:end="323:81"><literal type="number" pos:start="323:79" pos:end="323:81">255</literal></expr></else></ternary><operator pos:start="323:82" pos:end="323:82">)</operator></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="325:13" pos:end="325:33"><expr pos:start="325:13" pos:end="325:32"><name pos:start="325:13" pos:end="325:15">dst</name> <operator pos:start="325:17" pos:end="325:17">=</operator> <name pos:start="325:19" pos:end="325:32"><name pos:start="325:19" pos:end="325:19">p</name><operator pos:start="325:20" pos:end="325:21">-&gt;</operator><name pos:start="325:22" pos:end="325:25">data</name><index pos:start="325:26" pos:end="325:32">[<expr pos:start="325:27" pos:end="325:31"><name pos:start="325:27" pos:end="325:31">plane</name></expr>]</index></name></expr>;</expr_stmt>

            <for pos:start="327:13" pos:end="335:13">for <control pos:start="327:17" pos:end="327:43">(<init pos:start="327:18" pos:end="327:23"><expr pos:start="327:18" pos:end="327:22"><name pos:start="327:18" pos:end="327:18">i</name> <operator pos:start="327:20" pos:end="327:20">=</operator> <literal type="number" pos:start="327:22" pos:end="327:22">0</literal></expr>;</init> <condition pos:start="327:25" pos:end="327:38"><expr pos:start="327:25" pos:end="327:37"><name pos:start="327:25" pos:end="327:25">i</name> <operator pos:start="327:27" pos:end="327:27">&lt;</operator> <name pos:start="327:29" pos:end="327:37"><name pos:start="327:29" pos:end="327:29">s</name><operator pos:start="327:30" pos:end="327:31">-&gt;</operator><name pos:start="327:32" pos:end="327:37">height</name></name></expr>;</condition> <incr pos:start="327:40" pos:end="327:42"><expr pos:start="327:40" pos:end="327:42"><name pos:start="327:40" pos:end="327:40">i</name><operator pos:start="327:41" pos:end="327:42">++</operator></expr></incr>)</control> <block pos:start="327:45" pos:end="335:13">{<block_content pos:start="329:17" pos:end="333:30">

                <for pos:start="329:17" pos:end="331:40">for <control pos:start="329:21" pos:end="329:44">(<init pos:start="329:22" pos:end="329:27"><expr pos:start="329:22" pos:end="329:26"><name pos:start="329:22" pos:end="329:22">j</name> <operator pos:start="329:24" pos:end="329:24">=</operator> <literal type="number" pos:start="329:26" pos:end="329:26">0</literal></expr>;</init> <condition pos:start="329:29" pos:end="329:39"><expr pos:start="329:29" pos:end="329:38"><name pos:start="329:29" pos:end="329:29">j</name> <operator pos:start="329:31" pos:end="329:31">&lt;</operator> <name pos:start="329:33" pos:end="329:38">stride</name></expr>;</condition> <incr pos:start="329:41" pos:end="329:43"><expr pos:start="329:41" pos:end="329:43"><name pos:start="329:41" pos:end="329:41">j</name><operator pos:start="329:42" pos:end="329:43">++</operator></expr></incr>)</control><block type="pseudo" pos:start="331:21" pos:end="331:40"><block_content pos:start="331:21" pos:end="331:40">

                    <expr_stmt pos:start="331:21" pos:end="331:40"><expr pos:start="331:21" pos:end="331:39"><name pos:start="331:21" pos:end="331:26"><name pos:start="331:21" pos:end="331:23">dst</name><index pos:start="331:24" pos:end="331:26">[<expr pos:start="331:25" pos:end="331:25"><name pos:start="331:25" pos:end="331:25">j</name></expr>]</index></name> <operator pos:start="331:28" pos:end="331:28">=</operator> <name pos:start="331:30" pos:end="331:30">c</name> <operator pos:start="331:32" pos:end="331:32">-</operator> <name pos:start="331:34" pos:end="331:39"><name pos:start="331:34" pos:end="331:36">dst</name><index pos:start="331:37" pos:end="331:39">[<expr pos:start="331:38" pos:end="331:38"><name pos:start="331:38" pos:end="331:38">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                <expr_stmt pos:start="333:17" pos:end="333:30"><expr pos:start="333:17" pos:end="333:29"><name pos:start="333:17" pos:end="333:19">dst</name> <operator pos:start="333:21" pos:end="333:22">+=</operator> <name pos:start="333:24" pos:end="333:29">stride</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="343:5" pos:end="353:5"><if pos:start="343:5" pos:end="353:5">if <condition pos:start="343:8" pos:end="343:37">(<expr pos:start="343:9" pos:end="343:36"><name pos:start="343:9" pos:end="343:17"><name pos:start="343:9" pos:end="343:9">s</name><operator pos:start="343:10" pos:end="343:11">-&gt;</operator><name pos:start="343:12" pos:end="343:17">planar</name></name> <operator pos:start="343:19" pos:end="343:20">&amp;&amp;</operator> <name pos:start="343:22" pos:end="343:32"><name pos:start="343:22" pos:end="343:22">s</name><operator pos:start="343:23" pos:end="343:24">-&gt;</operator><name pos:start="343:25" pos:end="343:32">bppcount</name></name> <operator pos:start="343:34" pos:end="343:34">&gt;</operator> <literal type="number" pos:start="343:36" pos:end="343:36">2</literal></expr>)</condition> <block pos:start="343:39" pos:end="353:5">{<block_content pos:start="345:9" pos:end="351:57">

        <expr_stmt pos:start="345:9" pos:end="345:53"><expr pos:start="345:9" pos:end="345:52"><call pos:start="345:9" pos:end="345:52"><name pos:start="345:9" pos:end="345:14">FFSWAP</name><argument_list pos:start="345:15" pos:end="345:52">(<argument pos:start="345:16" pos:end="345:23"><expr pos:start="345:16" pos:end="345:23"><name pos:start="345:16" pos:end="345:22">uint8_t</name><operator pos:start="345:23" pos:end="345:23">*</operator></expr></argument>, <argument pos:start="345:26" pos:end="345:35"><expr pos:start="345:26" pos:end="345:35"><name pos:start="345:26" pos:end="345:35"><name pos:start="345:26" pos:end="345:26">p</name><operator pos:start="345:27" pos:end="345:28">-&gt;</operator><name pos:start="345:29" pos:end="345:32">data</name><index pos:start="345:33" pos:end="345:35">[<expr pos:start="345:34" pos:end="345:34"><literal type="number" pos:start="345:34" pos:end="345:34">0</literal></expr>]</index></name></expr></argument>,     <argument pos:start="345:42" pos:end="345:51"><expr pos:start="345:42" pos:end="345:51"><name pos:start="345:42" pos:end="345:51"><name pos:start="345:42" pos:end="345:42">p</name><operator pos:start="345:43" pos:end="345:44">-&gt;</operator><name pos:start="345:45" pos:end="345:48">data</name><index pos:start="345:49" pos:end="345:51">[<expr pos:start="345:50" pos:end="345:50"><literal type="number" pos:start="345:50" pos:end="345:50">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="347:9" pos:end="347:57"><expr pos:start="347:9" pos:end="347:56"><call pos:start="347:9" pos:end="347:56"><name pos:start="347:9" pos:end="347:14">FFSWAP</name><argument_list pos:start="347:15" pos:end="347:56">(<argument pos:start="347:16" pos:end="347:18"><expr pos:start="347:16" pos:end="347:18"><name pos:start="347:16" pos:end="347:18">int</name></expr></argument>,      <argument pos:start="347:26" pos:end="347:39"><expr pos:start="347:26" pos:end="347:39"><name pos:start="347:26" pos:end="347:39"><name pos:start="347:26" pos:end="347:26">p</name><operator pos:start="347:27" pos:end="347:28">-&gt;</operator><name pos:start="347:29" pos:end="347:36">linesize</name><index pos:start="347:37" pos:end="347:39">[<expr pos:start="347:38" pos:end="347:38"><literal type="number" pos:start="347:38" pos:end="347:38">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="347:42" pos:end="347:55"><expr pos:start="347:42" pos:end="347:55"><name pos:start="347:42" pos:end="347:55"><name pos:start="347:42" pos:end="347:42">p</name><operator pos:start="347:43" pos:end="347:44">-&gt;</operator><name pos:start="347:45" pos:end="347:52">linesize</name><index pos:start="347:53" pos:end="347:55">[<expr pos:start="347:54" pos:end="347:54"><literal type="number" pos:start="347:54" pos:end="347:54">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="349:9" pos:end="349:53"><expr pos:start="349:9" pos:end="349:52"><call pos:start="349:9" pos:end="349:52"><name pos:start="349:9" pos:end="349:14">FFSWAP</name><argument_list pos:start="349:15" pos:end="349:52">(<argument pos:start="349:16" pos:end="349:23"><expr pos:start="349:16" pos:end="349:23"><name pos:start="349:16" pos:end="349:22">uint8_t</name><operator pos:start="349:23" pos:end="349:23">*</operator></expr></argument>, <argument pos:start="349:26" pos:end="349:35"><expr pos:start="349:26" pos:end="349:35"><name pos:start="349:26" pos:end="349:35"><name pos:start="349:26" pos:end="349:26">p</name><operator pos:start="349:27" pos:end="349:28">-&gt;</operator><name pos:start="349:29" pos:end="349:32">data</name><index pos:start="349:33" pos:end="349:35">[<expr pos:start="349:34" pos:end="349:34"><literal type="number" pos:start="349:34" pos:end="349:34">0</literal></expr>]</index></name></expr></argument>,     <argument pos:start="349:42" pos:end="349:51"><expr pos:start="349:42" pos:end="349:51"><name pos:start="349:42" pos:end="349:51"><name pos:start="349:42" pos:end="349:42">p</name><operator pos:start="349:43" pos:end="349:44">-&gt;</operator><name pos:start="349:45" pos:end="349:48">data</name><index pos:start="349:49" pos:end="349:51">[<expr pos:start="349:50" pos:end="349:50"><literal type="number" pos:start="349:50" pos:end="349:50">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="351:9" pos:end="351:57"><expr pos:start="351:9" pos:end="351:56"><call pos:start="351:9" pos:end="351:56"><name pos:start="351:9" pos:end="351:14">FFSWAP</name><argument_list pos:start="351:15" pos:end="351:56">(<argument pos:start="351:16" pos:end="351:18"><expr pos:start="351:16" pos:end="351:18"><name pos:start="351:16" pos:end="351:18">int</name></expr></argument>,      <argument pos:start="351:26" pos:end="351:39"><expr pos:start="351:26" pos:end="351:39"><name pos:start="351:26" pos:end="351:39"><name pos:start="351:26" pos:end="351:26">p</name><operator pos:start="351:27" pos:end="351:28">-&gt;</operator><name pos:start="351:29" pos:end="351:36">linesize</name><index pos:start="351:37" pos:end="351:39">[<expr pos:start="351:38" pos:end="351:38"><literal type="number" pos:start="351:38" pos:end="351:38">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="351:42" pos:end="351:55"><expr pos:start="351:42" pos:end="351:55"><name pos:start="351:42" pos:end="351:55"><name pos:start="351:42" pos:end="351:42">p</name><operator pos:start="351:43" pos:end="351:44">-&gt;</operator><name pos:start="351:45" pos:end="351:52">linesize</name><index pos:start="351:53" pos:end="351:55">[<expr pos:start="351:54" pos:end="351:54"><literal type="number" pos:start="351:54" pos:end="351:54">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="357:5" pos:end="357:19"><expr pos:start="357:5" pos:end="357:18"><operator pos:start="357:5" pos:end="357:5">*</operator><name pos:start="357:6" pos:end="357:14">got_frame</name> <operator pos:start="357:16" pos:end="357:16">=</operator> <literal type="number" pos:start="357:18" pos:end="357:18">1</literal></expr>;</expr_stmt>



    <return pos:start="361:5" pos:end="361:23">return <expr pos:start="361:12" pos:end="361:22"><name pos:start="361:12" pos:end="361:22"><name pos:start="361:12" pos:end="361:16">avpkt</name><operator pos:start="361:17" pos:end="361:18">-&gt;</operator><name pos:start="361:19" pos:end="361:22">size</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
