<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14628.c" pos:tabs="8"><function pos:start="1:1" pos:end="171:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:13">size_t</name></type> <name pos:start="1:15" pos:end="1:27">pdu_unmarshal</name><parameter_list pos:start="1:28" pos:end="1:78">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:35">V9fsPDU</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">pdu</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:55"><decl pos:start="1:43" pos:end="1:55"><type pos:start="1:43" pos:end="1:55"><name pos:start="1:43" pos:end="1:48">size_t</name></type> <name pos:start="1:50" pos:end="1:55">offset</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:72"><decl pos:start="1:58" pos:end="1:72"><type pos:start="1:58" pos:end="1:72"><specifier pos:start="1:58" pos:end="1:62">const</specifier> <name pos:start="1:64" pos:end="1:67">char</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:72">fmt</name></decl></parameter>, <parameter pos:start="1:75" pos:end="1:77"><decl pos:start="1:75" pos:end="1:77"><type pos:start="1:75" pos:end="1:77"><modifier pos:start="1:75" pos:end="1:77">...</modifier></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="171:1">{<block_content pos:start="5:5" pos:end="169:31">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">size_t</name></type> <name pos:start="5:12" pos:end="5:21">old_offset</name> <init pos:start="5:23" pos:end="5:30">= <expr pos:start="5:25" pos:end="5:30"><name pos:start="5:25" pos:end="5:30">offset</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">va_list</name></type> <name pos:start="7:13" pos:end="7:14">ap</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:22"><expr pos:start="13:5" pos:end="13:21"><call pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:12">va_start</name><argument_list pos:start="13:13" pos:end="13:21">(<argument pos:start="13:14" pos:end="13:15"><expr pos:start="13:14" pos:end="13:15"><name pos:start="13:14" pos:end="13:15">ap</name></expr></argument>, <argument pos:start="13:18" pos:end="13:20"><expr pos:start="13:18" pos:end="13:20"><name pos:start="13:18" pos:end="13:20">fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="15:5" pos:end="161:5">for <control pos:start="15:9" pos:end="15:28">(<init pos:start="15:10" pos:end="15:15"><expr pos:start="15:10" pos:end="15:14"><name pos:start="15:10" pos:end="15:10">i</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <literal type="number" pos:start="15:14" pos:end="15:14">0</literal></expr>;</init> <condition pos:start="15:17" pos:end="15:23"><expr pos:start="15:17" pos:end="15:22"><name pos:start="15:17" pos:end="15:22"><name pos:start="15:17" pos:end="15:19">fmt</name><index pos:start="15:20" pos:end="15:22">[<expr pos:start="15:21" pos:end="15:21"><name pos:start="15:21" pos:end="15:21">i</name></expr>]</index></name></expr>;</condition> <incr pos:start="15:25" pos:end="15:27"><expr pos:start="15:25" pos:end="15:27"><name pos:start="15:25" pos:end="15:25">i</name><operator pos:start="15:26" pos:end="15:27">++</operator></expr></incr>)</control> <block pos:start="15:30" pos:end="161:5">{<block_content pos:start="17:9" pos:end="159:9">

        <switch pos:start="17:9" pos:end="159:9">switch <condition pos:start="17:16" pos:end="17:23">(<expr pos:start="17:17" pos:end="17:22"><name pos:start="17:17" pos:end="17:22"><name pos:start="17:17" pos:end="17:19">fmt</name><index pos:start="17:20" pos:end="17:22">[<expr pos:start="17:21" pos:end="17:21"><name pos:start="17:21" pos:end="17:21">i</name></expr>]</index></name></expr>)</condition> <block pos:start="17:25" pos:end="159:9">{<block_content pos:start="19:9" pos:end="157:18">

        <case pos:start="19:9" pos:end="19:17">case <expr pos:start="19:14" pos:end="19:16"><literal type="char" pos:start="19:14" pos:end="19:16">'b'</literal></expr>:</case> <block pos:start="19:19" pos:end="27:9">{<block_content pos:start="21:13" pos:end="25:18">

            <decl_stmt pos:start="21:13" pos:end="21:50"><decl pos:start="21:13" pos:end="21:49"><type pos:start="21:13" pos:end="21:21"><name pos:start="21:13" pos:end="21:19">uint8_t</name> <modifier pos:start="21:21" pos:end="21:21">*</modifier></type><name pos:start="21:22" pos:end="21:25">valp</name> <init pos:start="21:27" pos:end="21:49">= <expr pos:start="21:29" pos:end="21:49"><call pos:start="21:29" pos:end="21:49"><name pos:start="21:29" pos:end="21:34">va_arg</name><argument_list pos:start="21:35" pos:end="21:49">(<argument pos:start="21:36" pos:end="21:37"><expr pos:start="21:36" pos:end="21:37"><name pos:start="21:36" pos:end="21:37">ap</name></expr></argument>, <argument pos:start="21:40" pos:end="21:48"><expr pos:start="21:40" pos:end="21:48"><name pos:start="21:40" pos:end="21:46">uint8_t</name> <operator pos:start="21:48" pos:end="21:48">*</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:67"><expr pos:start="23:13" pos:end="23:66"><name pos:start="23:13" pos:end="23:18">offset</name> <operator pos:start="23:20" pos:end="23:21">+=</operator> <call pos:start="23:23" pos:end="23:66"><name pos:start="23:23" pos:end="23:32">pdu_unpack</name><argument_list pos:start="23:33" pos:end="23:66">(<argument pos:start="23:34" pos:end="23:37"><expr pos:start="23:34" pos:end="23:37"><name pos:start="23:34" pos:end="23:37">valp</name></expr></argument>, <argument pos:start="23:40" pos:end="23:42"><expr pos:start="23:40" pos:end="23:42"><name pos:start="23:40" pos:end="23:42">pdu</name></expr></argument>, <argument pos:start="23:45" pos:end="23:50"><expr pos:start="23:45" pos:end="23:50"><name pos:start="23:45" pos:end="23:50">offset</name></expr></argument>, <argument pos:start="23:53" pos:end="23:65"><expr pos:start="23:53" pos:end="23:65"><sizeof pos:start="23:53" pos:end="23:65">sizeof<argument_list pos:start="23:59" pos:end="23:65">(<argument pos:start="23:60" pos:end="23:64"><expr pos:start="23:60" pos:end="23:64"><operator pos:start="23:60" pos:end="23:60">*</operator><name pos:start="23:61" pos:end="23:64">valp</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="25:13" pos:end="25:18">break;</break>

        </block_content>}</block>

        <case pos:start="29:9" pos:end="29:17">case <expr pos:start="29:14" pos:end="29:16"><literal type="char" pos:start="29:14" pos:end="29:16">'w'</literal></expr>:</case> <block pos:start="29:19" pos:end="41:9">{<block_content pos:start="31:13" pos:end="39:18">

            <decl_stmt pos:start="31:13" pos:end="31:32"><decl pos:start="31:13" pos:end="31:24"><type pos:start="31:13" pos:end="31:20"><name pos:start="31:13" pos:end="31:20">uint16_t</name></type> <name pos:start="31:22" pos:end="31:24">val</name></decl>, <decl pos:start="31:27" pos:end="31:31"><type ref="prev" pos:start="31:13" pos:end="31:20"><modifier pos:start="31:27" pos:end="31:27">*</modifier></type><name pos:start="31:28" pos:end="31:31">valp</name></decl>;</decl_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:42"><expr pos:start="33:13" pos:end="33:41"><name pos:start="33:13" pos:end="33:16">valp</name> <operator pos:start="33:18" pos:end="33:18">=</operator> <call pos:start="33:20" pos:end="33:41"><name pos:start="33:20" pos:end="33:25">va_arg</name><argument_list pos:start="33:26" pos:end="33:41">(<argument pos:start="33:27" pos:end="33:28"><expr pos:start="33:27" pos:end="33:28"><name pos:start="33:27" pos:end="33:28">ap</name></expr></argument>, <argument pos:start="33:31" pos:end="33:40"><expr pos:start="33:31" pos:end="33:40"><name pos:start="33:31" pos:end="33:38">uint16_t</name> <operator pos:start="33:40" pos:end="33:40">*</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:65"><expr pos:start="35:13" pos:end="35:64"><name pos:start="35:13" pos:end="35:18">offset</name> <operator pos:start="35:20" pos:end="35:21">+=</operator> <call pos:start="35:23" pos:end="35:64"><name pos:start="35:23" pos:end="35:32">pdu_unpack</name><argument_list pos:start="35:33" pos:end="35:64">(<argument pos:start="35:34" pos:end="35:37"><expr pos:start="35:34" pos:end="35:37"><operator pos:start="35:34" pos:end="35:34">&amp;</operator><name pos:start="35:35" pos:end="35:37">val</name></expr></argument>, <argument pos:start="35:40" pos:end="35:42"><expr pos:start="35:40" pos:end="35:42"><name pos:start="35:40" pos:end="35:42">pdu</name></expr></argument>, <argument pos:start="35:45" pos:end="35:50"><expr pos:start="35:45" pos:end="35:50"><name pos:start="35:45" pos:end="35:50">offset</name></expr></argument>, <argument pos:start="35:53" pos:end="35:63"><expr pos:start="35:53" pos:end="35:63"><sizeof pos:start="35:53" pos:end="35:63">sizeof<argument_list pos:start="35:59" pos:end="35:63">(<argument pos:start="35:60" pos:end="35:62"><expr pos:start="35:60" pos:end="35:62"><name pos:start="35:60" pos:end="35:62">val</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:37"><expr pos:start="37:13" pos:end="37:36"><operator pos:start="37:13" pos:end="37:13">*</operator><name pos:start="37:14" pos:end="37:17">valp</name> <operator pos:start="37:19" pos:end="37:19">=</operator> <call pos:start="37:21" pos:end="37:36"><name pos:start="37:21" pos:end="37:31">le16_to_cpu</name><argument_list pos:start="37:32" pos:end="37:36">(<argument pos:start="37:33" pos:end="37:35"><expr pos:start="37:33" pos:end="37:35"><name pos:start="37:33" pos:end="37:35">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="39:13" pos:end="39:18">break;</break>

        </block_content>}</block>

        <case pos:start="43:9" pos:end="43:17">case <expr pos:start="43:14" pos:end="43:16"><literal type="char" pos:start="43:14" pos:end="43:16">'d'</literal></expr>:</case> <block pos:start="43:19" pos:end="55:9">{<block_content pos:start="45:13" pos:end="53:18">

            <decl_stmt pos:start="45:13" pos:end="45:32"><decl pos:start="45:13" pos:end="45:24"><type pos:start="45:13" pos:end="45:20"><name pos:start="45:13" pos:end="45:20">uint32_t</name></type> <name pos:start="45:22" pos:end="45:24">val</name></decl>, <decl pos:start="45:27" pos:end="45:31"><type ref="prev" pos:start="45:13" pos:end="45:20"><modifier pos:start="45:27" pos:end="45:27">*</modifier></type><name pos:start="45:28" pos:end="45:31">valp</name></decl>;</decl_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:42"><expr pos:start="47:13" pos:end="47:41"><name pos:start="47:13" pos:end="47:16">valp</name> <operator pos:start="47:18" pos:end="47:18">=</operator> <call pos:start="47:20" pos:end="47:41"><name pos:start="47:20" pos:end="47:25">va_arg</name><argument_list pos:start="47:26" pos:end="47:41">(<argument pos:start="47:27" pos:end="47:28"><expr pos:start="47:27" pos:end="47:28"><name pos:start="47:27" pos:end="47:28">ap</name></expr></argument>, <argument pos:start="47:31" pos:end="47:40"><expr pos:start="47:31" pos:end="47:40"><name pos:start="47:31" pos:end="47:38">uint32_t</name> <operator pos:start="47:40" pos:end="47:40">*</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:65"><expr pos:start="49:13" pos:end="49:64"><name pos:start="49:13" pos:end="49:18">offset</name> <operator pos:start="49:20" pos:end="49:21">+=</operator> <call pos:start="49:23" pos:end="49:64"><name pos:start="49:23" pos:end="49:32">pdu_unpack</name><argument_list pos:start="49:33" pos:end="49:64">(<argument pos:start="49:34" pos:end="49:37"><expr pos:start="49:34" pos:end="49:37"><operator pos:start="49:34" pos:end="49:34">&amp;</operator><name pos:start="49:35" pos:end="49:37">val</name></expr></argument>, <argument pos:start="49:40" pos:end="49:42"><expr pos:start="49:40" pos:end="49:42"><name pos:start="49:40" pos:end="49:42">pdu</name></expr></argument>, <argument pos:start="49:45" pos:end="49:50"><expr pos:start="49:45" pos:end="49:50"><name pos:start="49:45" pos:end="49:50">offset</name></expr></argument>, <argument pos:start="49:53" pos:end="49:63"><expr pos:start="49:53" pos:end="49:63"><sizeof pos:start="49:53" pos:end="49:63">sizeof<argument_list pos:start="49:59" pos:end="49:63">(<argument pos:start="49:60" pos:end="49:62"><expr pos:start="49:60" pos:end="49:62"><name pos:start="49:60" pos:end="49:62">val</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:37"><expr pos:start="51:13" pos:end="51:36"><operator pos:start="51:13" pos:end="51:13">*</operator><name pos:start="51:14" pos:end="51:17">valp</name> <operator pos:start="51:19" pos:end="51:19">=</operator> <call pos:start="51:21" pos:end="51:36"><name pos:start="51:21" pos:end="51:31">le32_to_cpu</name><argument_list pos:start="51:32" pos:end="51:36">(<argument pos:start="51:33" pos:end="51:35"><expr pos:start="51:33" pos:end="51:35"><name pos:start="51:33" pos:end="51:35">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="53:13" pos:end="53:18">break;</break>

        </block_content>}</block>

        <case pos:start="57:9" pos:end="57:17">case <expr pos:start="57:14" pos:end="57:16"><literal type="char" pos:start="57:14" pos:end="57:16">'q'</literal></expr>:</case> <block pos:start="57:19" pos:end="69:9">{<block_content pos:start="59:13" pos:end="67:18">

            <decl_stmt pos:start="59:13" pos:end="59:32"><decl pos:start="59:13" pos:end="59:24"><type pos:start="59:13" pos:end="59:20"><name pos:start="59:13" pos:end="59:20">uint64_t</name></type> <name pos:start="59:22" pos:end="59:24">val</name></decl>, <decl pos:start="59:27" pos:end="59:31"><type ref="prev" pos:start="59:13" pos:end="59:20"><modifier pos:start="59:27" pos:end="59:27">*</modifier></type><name pos:start="59:28" pos:end="59:31">valp</name></decl>;</decl_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:42"><expr pos:start="61:13" pos:end="61:41"><name pos:start="61:13" pos:end="61:16">valp</name> <operator pos:start="61:18" pos:end="61:18">=</operator> <call pos:start="61:20" pos:end="61:41"><name pos:start="61:20" pos:end="61:25">va_arg</name><argument_list pos:start="61:26" pos:end="61:41">(<argument pos:start="61:27" pos:end="61:28"><expr pos:start="61:27" pos:end="61:28"><name pos:start="61:27" pos:end="61:28">ap</name></expr></argument>, <argument pos:start="61:31" pos:end="61:40"><expr pos:start="61:31" pos:end="61:40"><name pos:start="61:31" pos:end="61:38">uint64_t</name> <operator pos:start="61:40" pos:end="61:40">*</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:65"><expr pos:start="63:13" pos:end="63:64"><name pos:start="63:13" pos:end="63:18">offset</name> <operator pos:start="63:20" pos:end="63:21">+=</operator> <call pos:start="63:23" pos:end="63:64"><name pos:start="63:23" pos:end="63:32">pdu_unpack</name><argument_list pos:start="63:33" pos:end="63:64">(<argument pos:start="63:34" pos:end="63:37"><expr pos:start="63:34" pos:end="63:37"><operator pos:start="63:34" pos:end="63:34">&amp;</operator><name pos:start="63:35" pos:end="63:37">val</name></expr></argument>, <argument pos:start="63:40" pos:end="63:42"><expr pos:start="63:40" pos:end="63:42"><name pos:start="63:40" pos:end="63:42">pdu</name></expr></argument>, <argument pos:start="63:45" pos:end="63:50"><expr pos:start="63:45" pos:end="63:50"><name pos:start="63:45" pos:end="63:50">offset</name></expr></argument>, <argument pos:start="63:53" pos:end="63:63"><expr pos:start="63:53" pos:end="63:63"><sizeof pos:start="63:53" pos:end="63:63">sizeof<argument_list pos:start="63:59" pos:end="63:63">(<argument pos:start="63:60" pos:end="63:62"><expr pos:start="63:60" pos:end="63:62"><name pos:start="63:60" pos:end="63:62">val</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:37"><expr pos:start="65:13" pos:end="65:36"><operator pos:start="65:13" pos:end="65:13">*</operator><name pos:start="65:14" pos:end="65:17">valp</name> <operator pos:start="65:19" pos:end="65:19">=</operator> <call pos:start="65:21" pos:end="65:36"><name pos:start="65:21" pos:end="65:31">le64_to_cpu</name><argument_list pos:start="65:32" pos:end="65:36">(<argument pos:start="65:33" pos:end="65:35"><expr pos:start="65:33" pos:end="65:35"><name pos:start="65:33" pos:end="65:35">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="67:13" pos:end="67:18">break;</break>

        </block_content>}</block>

        <case pos:start="71:9" pos:end="71:17">case <expr pos:start="71:14" pos:end="71:16"><literal type="char" pos:start="71:14" pos:end="71:16">'v'</literal></expr>:</case> <block pos:start="71:19" pos:end="81:9">{<block_content pos:start="73:13" pos:end="79:18">

            <decl_stmt pos:start="73:13" pos:end="73:59"><decl pos:start="73:13" pos:end="73:58"><type pos:start="73:13" pos:end="73:26"><name pos:start="73:13" pos:end="73:24"><name pos:start="73:13" pos:end="73:18">struct</name> <name pos:start="73:20" pos:end="73:24">iovec</name></name> <modifier pos:start="73:26" pos:end="73:26">*</modifier></type><name pos:start="73:27" pos:end="73:29">iov</name> <init pos:start="73:31" pos:end="73:58">= <expr pos:start="73:33" pos:end="73:58"><call pos:start="73:33" pos:end="73:58"><name pos:start="73:33" pos:end="73:38">va_arg</name><argument_list pos:start="73:39" pos:end="73:58">(<argument pos:start="73:40" pos:end="73:41"><expr pos:start="73:40" pos:end="73:41"><name pos:start="73:40" pos:end="73:41">ap</name></expr></argument>, <argument pos:start="73:44" pos:end="73:57"><expr pos:start="73:44" pos:end="73:57">struct <name pos:start="73:51" pos:end="73:55">iovec</name> <operator pos:start="73:57" pos:end="73:57">*</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="75:13" pos:end="75:44"><decl pos:start="75:13" pos:end="75:43"><type pos:start="75:13" pos:end="75:17"><name pos:start="75:13" pos:end="75:15">int</name> <modifier pos:start="75:17" pos:end="75:17">*</modifier></type><name pos:start="75:18" pos:end="75:23">iovcnt</name> <init pos:start="75:25" pos:end="75:43">= <expr pos:start="75:27" pos:end="75:43"><call pos:start="75:27" pos:end="75:43"><name pos:start="75:27" pos:end="75:32">va_arg</name><argument_list pos:start="75:33" pos:end="75:43">(<argument pos:start="75:34" pos:end="75:35"><expr pos:start="75:34" pos:end="75:35"><name pos:start="75:34" pos:end="75:35">ap</name></expr></argument>, <argument pos:start="75:38" pos:end="75:42"><expr pos:start="75:38" pos:end="75:42"><name pos:start="75:38" pos:end="75:40">int</name> <operator pos:start="75:42" pos:end="75:42">*</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:55"><expr pos:start="77:13" pos:end="77:54"><operator pos:start="77:13" pos:end="77:13">*</operator><name pos:start="77:14" pos:end="77:19">iovcnt</name> <operator pos:start="77:21" pos:end="77:21">=</operator> <call pos:start="77:23" pos:end="77:54"><name pos:start="77:23" pos:end="77:33">pdu_copy_sg</name><argument_list pos:start="77:34" pos:end="77:54">(<argument pos:start="77:35" pos:end="77:37"><expr pos:start="77:35" pos:end="77:37"><name pos:start="77:35" pos:end="77:37">pdu</name></expr></argument>, <argument pos:start="77:40" pos:end="77:45"><expr pos:start="77:40" pos:end="77:45"><name pos:start="77:40" pos:end="77:45">offset</name></expr></argument>, <argument pos:start="77:48" pos:end="77:48"><expr pos:start="77:48" pos:end="77:48"><literal type="number" pos:start="77:48" pos:end="77:48">0</literal></expr></argument>, <argument pos:start="77:51" pos:end="77:53"><expr pos:start="77:51" pos:end="77:53"><name pos:start="77:51" pos:end="77:53">iov</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="79:13" pos:end="79:18">break;</break>

        </block_content>}</block>

        <case pos:start="83:9" pos:end="83:17">case <expr pos:start="83:14" pos:end="83:16"><literal type="char" pos:start="83:14" pos:end="83:16">'s'</literal></expr>:</case> <block pos:start="83:19" pos:end="99:9">{<block_content pos:start="85:13" pos:end="97:18">

            <decl_stmt pos:start="85:13" pos:end="85:55"><decl pos:start="85:13" pos:end="85:54"><type pos:start="85:13" pos:end="85:24"><name pos:start="85:13" pos:end="85:22">V9fsString</name> <modifier pos:start="85:24" pos:end="85:24">*</modifier></type><name pos:start="85:25" pos:end="85:27">str</name> <init pos:start="85:29" pos:end="85:54">= <expr pos:start="85:31" pos:end="85:54"><call pos:start="85:31" pos:end="85:54"><name pos:start="85:31" pos:end="85:36">va_arg</name><argument_list pos:start="85:37" pos:end="85:54">(<argument pos:start="85:38" pos:end="85:39"><expr pos:start="85:38" pos:end="85:39"><name pos:start="85:38" pos:end="85:39">ap</name></expr></argument>, <argument pos:start="85:42" pos:end="85:53"><expr pos:start="85:42" pos:end="85:53"><name pos:start="85:42" pos:end="85:51">V9fsString</name> <operator pos:start="85:53" pos:end="85:53">*</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:66"><expr pos:start="87:13" pos:end="87:65"><name pos:start="87:13" pos:end="87:18">offset</name> <operator pos:start="87:20" pos:end="87:21">+=</operator> <call pos:start="87:23" pos:end="87:65"><name pos:start="87:23" pos:end="87:35">pdu_unmarshal</name><argument_list pos:start="87:36" pos:end="87:65">(<argument pos:start="87:37" pos:end="87:39"><expr pos:start="87:37" pos:end="87:39"><name pos:start="87:37" pos:end="87:39">pdu</name></expr></argument>, <argument pos:start="87:42" pos:end="87:47"><expr pos:start="87:42" pos:end="87:47"><name pos:start="87:42" pos:end="87:47">offset</name></expr></argument>, <argument pos:start="87:50" pos:end="87:52"><expr pos:start="87:50" pos:end="87:52"><literal type="string" pos:start="87:50" pos:end="87:52">"w"</literal></expr></argument>, <argument pos:start="87:55" pos:end="87:64"><expr pos:start="87:55" pos:end="87:64"><operator pos:start="87:55" pos:end="87:55">&amp;</operator><name pos:start="87:56" pos:end="87:64"><name pos:start="87:56" pos:end="87:58">str</name><operator pos:start="87:59" pos:end="87:60">-&gt;</operator><name pos:start="87:61" pos:end="87:64">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="89:13" pos:end="89:47">/* FIXME: sanity check str-&gt;size */</comment>

            <expr_stmt pos:start="91:13" pos:end="91:48"><expr pos:start="91:13" pos:end="91:47"><name pos:start="91:13" pos:end="91:21"><name pos:start="91:13" pos:end="91:15">str</name><operator pos:start="91:16" pos:end="91:17">-&gt;</operator><name pos:start="91:18" pos:end="91:21">data</name></name> <operator pos:start="91:23" pos:end="91:23">=</operator> <call pos:start="91:25" pos:end="91:47"><name pos:start="91:25" pos:end="91:32">g_malloc</name><argument_list pos:start="91:33" pos:end="91:47">(<argument pos:start="91:34" pos:end="91:46"><expr pos:start="91:34" pos:end="91:46"><name pos:start="91:34" pos:end="91:42"><name pos:start="91:34" pos:end="91:36">str</name><operator pos:start="91:37" pos:end="91:38">-&gt;</operator><name pos:start="91:39" pos:end="91:42">size</name></name> <operator pos:start="91:44" pos:end="91:44">+</operator> <literal type="number" pos:start="91:46" pos:end="91:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:68"><expr pos:start="93:13" pos:end="93:67"><name pos:start="93:13" pos:end="93:18">offset</name> <operator pos:start="93:20" pos:end="93:21">+=</operator> <call pos:start="93:23" pos:end="93:67"><name pos:start="93:23" pos:end="93:32">pdu_unpack</name><argument_list pos:start="93:33" pos:end="93:67">(<argument pos:start="93:34" pos:end="93:42"><expr pos:start="93:34" pos:end="93:42"><name pos:start="93:34" pos:end="93:42"><name pos:start="93:34" pos:end="93:36">str</name><operator pos:start="93:37" pos:end="93:38">-&gt;</operator><name pos:start="93:39" pos:end="93:42">data</name></name></expr></argument>, <argument pos:start="93:45" pos:end="93:47"><expr pos:start="93:45" pos:end="93:47"><name pos:start="93:45" pos:end="93:47">pdu</name></expr></argument>, <argument pos:start="93:50" pos:end="93:55"><expr pos:start="93:50" pos:end="93:55"><name pos:start="93:50" pos:end="93:55">offset</name></expr></argument>, <argument pos:start="93:58" pos:end="93:66"><expr pos:start="93:58" pos:end="93:66"><name pos:start="93:58" pos:end="93:66"><name pos:start="93:58" pos:end="93:60">str</name><operator pos:start="93:61" pos:end="93:62">-&gt;</operator><name pos:start="93:63" pos:end="93:66">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:37"><expr pos:start="95:13" pos:end="95:36"><name pos:start="95:13" pos:end="95:32"><name pos:start="95:13" pos:end="95:15">str</name><operator pos:start="95:16" pos:end="95:17">-&gt;</operator><name pos:start="95:18" pos:end="95:21">data</name><index pos:start="95:22" pos:end="95:32">[<expr pos:start="95:23" pos:end="95:31"><name pos:start="95:23" pos:end="95:31"><name pos:start="95:23" pos:end="95:25">str</name><operator pos:start="95:26" pos:end="95:27">-&gt;</operator><name pos:start="95:28" pos:end="95:31">size</name></name></expr>]</index></name> <operator pos:start="95:34" pos:end="95:34">=</operator> <literal type="number" pos:start="95:36" pos:end="95:36">0</literal></expr>;</expr_stmt>

            <break pos:start="97:13" pos:end="97:18">break;</break>

        </block_content>}</block>

        <case pos:start="101:9" pos:end="101:17">case <expr pos:start="101:14" pos:end="101:16"><literal type="char" pos:start="101:14" pos:end="101:16">'Q'</literal></expr>:</case> <block pos:start="101:19" pos:end="111:9">{<block_content pos:start="103:13" pos:end="109:18">

            <decl_stmt pos:start="103:13" pos:end="103:50"><decl pos:start="103:13" pos:end="103:49"><type pos:start="103:13" pos:end="103:21"><name pos:start="103:13" pos:end="103:19">V9fsQID</name> <modifier pos:start="103:21" pos:end="103:21">*</modifier></type><name pos:start="103:22" pos:end="103:25">qidp</name> <init pos:start="103:27" pos:end="103:49">= <expr pos:start="103:29" pos:end="103:49"><call pos:start="103:29" pos:end="103:49"><name pos:start="103:29" pos:end="103:34">va_arg</name><argument_list pos:start="103:35" pos:end="103:49">(<argument pos:start="103:36" pos:end="103:37"><expr pos:start="103:36" pos:end="103:37"><name pos:start="103:36" pos:end="103:37">ap</name></expr></argument>, <argument pos:start="103:40" pos:end="103:48"><expr pos:start="103:40" pos:end="103:48"><name pos:start="103:40" pos:end="103:46">V9fsQID</name> <operator pos:start="103:48" pos:end="103:48">*</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="105:13" pos:end="107:66"><expr pos:start="105:13" pos:end="107:65"><name pos:start="105:13" pos:end="105:18">offset</name> <operator pos:start="105:20" pos:end="105:21">+=</operator> <call pos:start="105:23" pos:end="107:65"><name pos:start="105:23" pos:end="105:35">pdu_unmarshal</name><argument_list pos:start="105:36" pos:end="107:65">(<argument pos:start="105:37" pos:end="105:39"><expr pos:start="105:37" pos:end="105:39"><name pos:start="105:37" pos:end="105:39">pdu</name></expr></argument>, <argument pos:start="105:42" pos:end="105:47"><expr pos:start="105:42" pos:end="105:47"><name pos:start="105:42" pos:end="105:47">offset</name></expr></argument>, <argument pos:start="105:50" pos:end="105:54"><expr pos:start="105:50" pos:end="105:54"><literal type="string" pos:start="105:50" pos:end="105:54">"bdq"</literal></expr></argument>,

                        <argument pos:start="107:25" pos:end="107:35"><expr pos:start="107:25" pos:end="107:35"><operator pos:start="107:25" pos:end="107:25">&amp;</operator><name pos:start="107:26" pos:end="107:35"><name pos:start="107:26" pos:end="107:29">qidp</name><operator pos:start="107:30" pos:end="107:31">-&gt;</operator><name pos:start="107:32" pos:end="107:35">type</name></name></expr></argument>, <argument pos:start="107:38" pos:end="107:51"><expr pos:start="107:38" pos:end="107:51"><operator pos:start="107:38" pos:end="107:38">&amp;</operator><name pos:start="107:39" pos:end="107:51"><name pos:start="107:39" pos:end="107:42">qidp</name><operator pos:start="107:43" pos:end="107:44">-&gt;</operator><name pos:start="107:45" pos:end="107:51">version</name></name></expr></argument>, <argument pos:start="107:54" pos:end="107:64"><expr pos:start="107:54" pos:end="107:64"><operator pos:start="107:54" pos:end="107:54">&amp;</operator><name pos:start="107:55" pos:end="107:64"><name pos:start="107:55" pos:end="107:58">qidp</name><operator pos:start="107:59" pos:end="107:60">-&gt;</operator><name pos:start="107:61" pos:end="107:64">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="109:13" pos:end="109:18">break;</break>

        </block_content>}</block>

        <case pos:start="113:9" pos:end="113:17">case <expr pos:start="113:14" pos:end="113:16"><literal type="char" pos:start="113:14" pos:end="113:16">'S'</literal></expr>:</case> <block pos:start="113:19" pos:end="135:9">{<block_content pos:start="115:13" pos:end="133:18">

            <decl_stmt pos:start="115:13" pos:end="115:53"><decl pos:start="115:13" pos:end="115:52"><type pos:start="115:13" pos:end="115:22"><name pos:start="115:13" pos:end="115:20">V9fsStat</name> <modifier pos:start="115:22" pos:end="115:22">*</modifier></type><name pos:start="115:23" pos:end="115:27">statp</name> <init pos:start="115:29" pos:end="115:52">= <expr pos:start="115:31" pos:end="115:52"><call pos:start="115:31" pos:end="115:52"><name pos:start="115:31" pos:end="115:36">va_arg</name><argument_list pos:start="115:37" pos:end="115:52">(<argument pos:start="115:38" pos:end="115:39"><expr pos:start="115:38" pos:end="115:39"><name pos:start="115:38" pos:end="115:39">ap</name></expr></argument>, <argument pos:start="115:42" pos:end="115:51"><expr pos:start="115:42" pos:end="115:51"><name pos:start="115:42" pos:end="115:49">V9fsStat</name> <operator pos:start="115:51" pos:end="115:51">*</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="117:13" pos:end="131:40"><expr pos:start="117:13" pos:end="131:39"><name pos:start="117:13" pos:end="117:18">offset</name> <operator pos:start="117:20" pos:end="117:21">+=</operator> <call pos:start="117:23" pos:end="131:39"><name pos:start="117:23" pos:end="117:35">pdu_unmarshal</name><argument_list pos:start="117:36" pos:end="131:39">(<argument pos:start="117:37" pos:end="117:39"><expr pos:start="117:37" pos:end="117:39"><name pos:start="117:37" pos:end="117:39">pdu</name></expr></argument>, <argument pos:start="117:42" pos:end="117:47"><expr pos:start="117:42" pos:end="117:47"><name pos:start="117:42" pos:end="117:47">offset</name></expr></argument>, <argument pos:start="117:50" pos:end="117:67"><expr pos:start="117:50" pos:end="117:67"><literal type="string" pos:start="117:50" pos:end="117:67">"wwdQdddqsssssddd"</literal></expr></argument>,

                        <argument pos:start="119:25" pos:end="119:36"><expr pos:start="119:25" pos:end="119:36"><operator pos:start="119:25" pos:end="119:25">&amp;</operator><name pos:start="119:26" pos:end="119:36"><name pos:start="119:26" pos:end="119:30">statp</name><operator pos:start="119:31" pos:end="119:32">-&gt;</operator><name pos:start="119:33" pos:end="119:36">size</name></name></expr></argument>, <argument pos:start="119:39" pos:end="119:50"><expr pos:start="119:39" pos:end="119:50"><operator pos:start="119:39" pos:end="119:39">&amp;</operator><name pos:start="119:40" pos:end="119:50"><name pos:start="119:40" pos:end="119:44">statp</name><operator pos:start="119:45" pos:end="119:46">-&gt;</operator><name pos:start="119:47" pos:end="119:50">type</name></name></expr></argument>, <argument pos:start="119:53" pos:end="119:63"><expr pos:start="119:53" pos:end="119:63"><operator pos:start="119:53" pos:end="119:53">&amp;</operator><name pos:start="119:54" pos:end="119:63"><name pos:start="119:54" pos:end="119:58">statp</name><operator pos:start="119:59" pos:end="119:60">-&gt;</operator><name pos:start="119:61" pos:end="119:63">dev</name></name></expr></argument>,

                        <argument pos:start="121:25" pos:end="121:35"><expr pos:start="121:25" pos:end="121:35"><operator pos:start="121:25" pos:end="121:25">&amp;</operator><name pos:start="121:26" pos:end="121:35"><name pos:start="121:26" pos:end="121:30">statp</name><operator pos:start="121:31" pos:end="121:32">-&gt;</operator><name pos:start="121:33" pos:end="121:35">qid</name></name></expr></argument>, <argument pos:start="121:38" pos:end="121:49"><expr pos:start="121:38" pos:end="121:49"><operator pos:start="121:38" pos:end="121:38">&amp;</operator><name pos:start="121:39" pos:end="121:49"><name pos:start="121:39" pos:end="121:43">statp</name><operator pos:start="121:44" pos:end="121:45">-&gt;</operator><name pos:start="121:46" pos:end="121:49">mode</name></name></expr></argument>, <argument pos:start="121:52" pos:end="121:64"><expr pos:start="121:52" pos:end="121:64"><operator pos:start="121:52" pos:end="121:52">&amp;</operator><name pos:start="121:53" pos:end="121:64"><name pos:start="121:53" pos:end="121:57">statp</name><operator pos:start="121:58" pos:end="121:59">-&gt;</operator><name pos:start="121:60" pos:end="121:64">atime</name></name></expr></argument>,

                        <argument pos:start="123:25" pos:end="123:37"><expr pos:start="123:25" pos:end="123:37"><operator pos:start="123:25" pos:end="123:25">&amp;</operator><name pos:start="123:26" pos:end="123:37"><name pos:start="123:26" pos:end="123:30">statp</name><operator pos:start="123:31" pos:end="123:32">-&gt;</operator><name pos:start="123:33" pos:end="123:37">mtime</name></name></expr></argument>, <argument pos:start="123:40" pos:end="123:53"><expr pos:start="123:40" pos:end="123:53"><operator pos:start="123:40" pos:end="123:40">&amp;</operator><name pos:start="123:41" pos:end="123:53"><name pos:start="123:41" pos:end="123:45">statp</name><operator pos:start="123:46" pos:end="123:47">-&gt;</operator><name pos:start="123:48" pos:end="123:53">length</name></name></expr></argument>,

                        <argument pos:start="125:25" pos:end="125:36"><expr pos:start="125:25" pos:end="125:36"><operator pos:start="125:25" pos:end="125:25">&amp;</operator><name pos:start="125:26" pos:end="125:36"><name pos:start="125:26" pos:end="125:30">statp</name><operator pos:start="125:31" pos:end="125:32">-&gt;</operator><name pos:start="125:33" pos:end="125:36">name</name></name></expr></argument>, <argument pos:start="125:39" pos:end="125:49"><expr pos:start="125:39" pos:end="125:49"><operator pos:start="125:39" pos:end="125:39">&amp;</operator><name pos:start="125:40" pos:end="125:49"><name pos:start="125:40" pos:end="125:44">statp</name><operator pos:start="125:45" pos:end="125:46">-&gt;</operator><name pos:start="125:47" pos:end="125:49">uid</name></name></expr></argument>, <argument pos:start="125:52" pos:end="125:62"><expr pos:start="125:52" pos:end="125:62"><operator pos:start="125:52" pos:end="125:52">&amp;</operator><name pos:start="125:53" pos:end="125:62"><name pos:start="125:53" pos:end="125:57">statp</name><operator pos:start="125:58" pos:end="125:59">-&gt;</operator><name pos:start="125:60" pos:end="125:62">gid</name></name></expr></argument>,

                        <argument pos:start="127:25" pos:end="127:36"><expr pos:start="127:25" pos:end="127:36"><operator pos:start="127:25" pos:end="127:25">&amp;</operator><name pos:start="127:26" pos:end="127:36"><name pos:start="127:26" pos:end="127:30">statp</name><operator pos:start="127:31" pos:end="127:32">-&gt;</operator><name pos:start="127:33" pos:end="127:36">muid</name></name></expr></argument>, <argument pos:start="127:39" pos:end="127:55"><expr pos:start="127:39" pos:end="127:55"><operator pos:start="127:39" pos:end="127:39">&amp;</operator><name pos:start="127:40" pos:end="127:55"><name pos:start="127:40" pos:end="127:44">statp</name><operator pos:start="127:45" pos:end="127:46">-&gt;</operator><name pos:start="127:47" pos:end="127:55">extension</name></name></expr></argument>,

                        <argument pos:start="129:25" pos:end="129:37"><expr pos:start="129:25" pos:end="129:37"><operator pos:start="129:25" pos:end="129:25">&amp;</operator><name pos:start="129:26" pos:end="129:37"><name pos:start="129:26" pos:end="129:30">statp</name><operator pos:start="129:31" pos:end="129:32">-&gt;</operator><name pos:start="129:33" pos:end="129:37">n_uid</name></name></expr></argument>, <argument pos:start="129:40" pos:end="129:52"><expr pos:start="129:40" pos:end="129:52"><operator pos:start="129:40" pos:end="129:40">&amp;</operator><name pos:start="129:41" pos:end="129:52"><name pos:start="129:41" pos:end="129:45">statp</name><operator pos:start="129:46" pos:end="129:47">-&gt;</operator><name pos:start="129:48" pos:end="129:52">n_gid</name></name></expr></argument>,

                        <argument pos:start="131:25" pos:end="131:38"><expr pos:start="131:25" pos:end="131:38"><operator pos:start="131:25" pos:end="131:25">&amp;</operator><name pos:start="131:26" pos:end="131:38"><name pos:start="131:26" pos:end="131:30">statp</name><operator pos:start="131:31" pos:end="131:32">-&gt;</operator><name pos:start="131:33" pos:end="131:38">n_muid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="133:13" pos:end="133:18">break;</break>

        </block_content>}</block>

        <case pos:start="137:9" pos:end="137:17">case <expr pos:start="137:14" pos:end="137:16"><literal type="char" pos:start="137:14" pos:end="137:16">'I'</literal></expr>:</case> <block pos:start="137:19" pos:end="153:9">{<block_content pos:start="139:13" pos:end="151:18">

            <decl_stmt pos:start="139:13" pos:end="139:55"><decl pos:start="139:13" pos:end="139:54"><type pos:start="139:13" pos:end="139:23"><name pos:start="139:13" pos:end="139:21">V9fsIattr</name> <modifier pos:start="139:23" pos:end="139:23">*</modifier></type><name pos:start="139:24" pos:end="139:28">iattr</name> <init pos:start="139:30" pos:end="139:54">= <expr pos:start="139:32" pos:end="139:54"><call pos:start="139:32" pos:end="139:54"><name pos:start="139:32" pos:end="139:37">va_arg</name><argument_list pos:start="139:38" pos:end="139:54">(<argument pos:start="139:39" pos:end="139:40"><expr pos:start="139:39" pos:end="139:40"><name pos:start="139:39" pos:end="139:40">ap</name></expr></argument>, <argument pos:start="139:43" pos:end="139:53"><expr pos:start="139:43" pos:end="139:53"><name pos:start="139:43" pos:end="139:51">V9fsIattr</name> <operator pos:start="139:53" pos:end="139:53">*</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="141:13" pos:end="149:63"><expr pos:start="141:13" pos:end="149:62"><name pos:start="141:13" pos:end="141:18">offset</name> <operator pos:start="141:20" pos:end="141:21">+=</operator> <call pos:start="141:23" pos:end="149:62"><name pos:start="141:23" pos:end="141:35">pdu_unmarshal</name><argument_list pos:start="141:36" pos:end="149:62">(<argument pos:start="141:37" pos:end="141:39"><expr pos:start="141:37" pos:end="141:39"><name pos:start="141:37" pos:end="141:39">pdu</name></expr></argument>, <argument pos:start="141:42" pos:end="141:47"><expr pos:start="141:42" pos:end="141:47"><name pos:start="141:42" pos:end="141:47">offset</name></expr></argument>, <argument pos:start="141:50" pos:end="141:60"><expr pos:start="141:50" pos:end="141:60"><literal type="string" pos:start="141:50" pos:end="141:60">"ddddqqqqq"</literal></expr></argument>,

                        <argument pos:start="143:25" pos:end="143:37"><expr pos:start="143:25" pos:end="143:37"><operator pos:start="143:25" pos:end="143:25">&amp;</operator><name pos:start="143:26" pos:end="143:37"><name pos:start="143:26" pos:end="143:30">iattr</name><operator pos:start="143:31" pos:end="143:32">-&gt;</operator><name pos:start="143:33" pos:end="143:37">valid</name></name></expr></argument>, <argument pos:start="143:40" pos:end="143:51"><expr pos:start="143:40" pos:end="143:51"><operator pos:start="143:40" pos:end="143:40">&amp;</operator><name pos:start="143:41" pos:end="143:51"><name pos:start="143:41" pos:end="143:45">iattr</name><operator pos:start="143:46" pos:end="143:47">-&gt;</operator><name pos:start="143:48" pos:end="143:51">mode</name></name></expr></argument>,

                        <argument pos:start="145:25" pos:end="145:35"><expr pos:start="145:25" pos:end="145:35"><operator pos:start="145:25" pos:end="145:25">&amp;</operator><name pos:start="145:26" pos:end="145:35"><name pos:start="145:26" pos:end="145:30">iattr</name><operator pos:start="145:31" pos:end="145:32">-&gt;</operator><name pos:start="145:33" pos:end="145:35">uid</name></name></expr></argument>, <argument pos:start="145:38" pos:end="145:48"><expr pos:start="145:38" pos:end="145:48"><operator pos:start="145:38" pos:end="145:38">&amp;</operator><name pos:start="145:39" pos:end="145:48"><name pos:start="145:39" pos:end="145:43">iattr</name><operator pos:start="145:44" pos:end="145:45">-&gt;</operator><name pos:start="145:46" pos:end="145:48">gid</name></name></expr></argument>, <argument pos:start="145:51" pos:end="145:62"><expr pos:start="145:51" pos:end="145:62"><operator pos:start="145:51" pos:end="145:51">&amp;</operator><name pos:start="145:52" pos:end="145:62"><name pos:start="145:52" pos:end="145:56">iattr</name><operator pos:start="145:57" pos:end="145:58">-&gt;</operator><name pos:start="145:59" pos:end="145:62">size</name></name></expr></argument>,

                        <argument pos:start="147:25" pos:end="147:41"><expr pos:start="147:25" pos:end="147:41"><operator pos:start="147:25" pos:end="147:25">&amp;</operator><name pos:start="147:26" pos:end="147:41"><name pos:start="147:26" pos:end="147:30">iattr</name><operator pos:start="147:31" pos:end="147:32">-&gt;</operator><name pos:start="147:33" pos:end="147:41">atime_sec</name></name></expr></argument>, <argument pos:start="147:44" pos:end="147:61"><expr pos:start="147:44" pos:end="147:61"><operator pos:start="147:44" pos:end="147:44">&amp;</operator><name pos:start="147:45" pos:end="147:61"><name pos:start="147:45" pos:end="147:49">iattr</name><operator pos:start="147:50" pos:end="147:51">-&gt;</operator><name pos:start="147:52" pos:end="147:61">atime_nsec</name></name></expr></argument>,

                        <argument pos:start="149:25" pos:end="149:41"><expr pos:start="149:25" pos:end="149:41"><operator pos:start="149:25" pos:end="149:25">&amp;</operator><name pos:start="149:26" pos:end="149:41"><name pos:start="149:26" pos:end="149:30">iattr</name><operator pos:start="149:31" pos:end="149:32">-&gt;</operator><name pos:start="149:33" pos:end="149:41">mtime_sec</name></name></expr></argument>, <argument pos:start="149:44" pos:end="149:61"><expr pos:start="149:44" pos:end="149:61"><operator pos:start="149:44" pos:end="149:44">&amp;</operator><name pos:start="149:45" pos:end="149:61"><name pos:start="149:45" pos:end="149:49">iattr</name><operator pos:start="149:50" pos:end="149:51">-&gt;</operator><name pos:start="149:52" pos:end="149:61">mtime_nsec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="151:13" pos:end="151:18">break;</break>

        </block_content>}</block>

        <default pos:start="155:9" pos:end="155:16">default:</default>

            <break pos:start="157:13" pos:end="157:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></for>



    <expr_stmt pos:start="165:5" pos:end="165:15"><expr pos:start="165:5" pos:end="165:14"><call pos:start="165:5" pos:end="165:14"><name pos:start="165:5" pos:end="165:10">va_end</name><argument_list pos:start="165:11" pos:end="165:14">(<argument pos:start="165:12" pos:end="165:13"><expr pos:start="165:12" pos:end="165:13"><name pos:start="165:12" pos:end="165:13">ap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="169:5" pos:end="169:31">return <expr pos:start="169:12" pos:end="169:30"><name pos:start="169:12" pos:end="169:17">offset</name> <operator pos:start="169:19" pos:end="169:19">-</operator> <name pos:start="169:21" pos:end="169:30">old_offset</name></expr>;</return>

</block_content>}</block></function>
</unit>
