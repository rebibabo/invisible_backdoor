<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7087.c" pos:tabs="8"><function pos:start="1:1" pos:end="113:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">get_mmu_address</name><parameter_list pos:start="1:27" pos:end="5:51">(<parameter pos:start="1:28" pos:end="1:41"><decl pos:start="1:28" pos:end="1:41"><type pos:start="1:28" pos:end="1:41"><name pos:start="1:28" pos:end="1:35">CPUState</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type> <name pos:start="1:39" pos:end="1:41">env</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:66"><decl pos:start="1:44" pos:end="1:66"><type pos:start="1:44" pos:end="1:66"><name pos:start="1:44" pos:end="1:55">target_ulong</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type> <name pos:start="1:59" pos:end="1:66">physical</name></decl></parameter>,

			   <parameter pos:start="3:28" pos:end="3:36"><decl pos:start="3:28" pos:end="3:36"><type pos:start="3:28" pos:end="3:36"><name pos:start="3:28" pos:end="3:30">int</name> <modifier pos:start="3:32" pos:end="3:32">*</modifier></type><name pos:start="3:33" pos:end="3:36">prot</name></decl></parameter>, <parameter pos:start="3:39" pos:end="3:58"><decl pos:start="3:39" pos:end="3:58"><type pos:start="3:39" pos:end="3:58"><name pos:start="3:39" pos:end="3:50">target_ulong</name></type> <name pos:start="3:52" pos:end="3:58">address</name></decl></parameter>,

			   <parameter pos:start="5:28" pos:end="5:33"><decl pos:start="5:28" pos:end="5:33"><type pos:start="5:28" pos:end="5:33"><name pos:start="5:28" pos:end="5:30">int</name></type> <name pos:start="5:32" pos:end="5:33">rw</name></decl></parameter>, <parameter pos:start="5:36" pos:end="5:50"><decl pos:start="5:36" pos:end="5:50"><type pos:start="5:36" pos:end="5:50"><name pos:start="5:36" pos:end="5:38">int</name></type> <name pos:start="5:40" pos:end="5:50">access_type</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="113:1">{<block_content pos:start="9:5" pos:end="111:13">

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">use_asid</name></decl>, <decl pos:start="9:19" pos:end="9:19"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:19" pos:end="9:19">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">tlb_t</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:19">matching</name> <init pos:start="11:21" pos:end="11:26">= <expr pos:start="11:23" pos:end="11:26"><name pos:start="11:23" pos:end="11:26">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:70"><expr pos:start="15:5" pos:end="15:69"><name pos:start="15:5" pos:end="15:12">use_asid</name> <operator pos:start="15:14" pos:end="15:14">=</operator> <operator pos:start="15:16" pos:end="15:16">(</operator><name pos:start="15:17" pos:end="15:26"><name pos:start="15:17" pos:end="15:19">env</name><operator pos:start="15:20" pos:end="15:21">-&gt;</operator><name pos:start="15:22" pos:end="15:26">mmucr</name></name> <operator pos:start="15:28" pos:end="15:28">&amp;</operator> <name pos:start="15:30" pos:end="15:37">MMUCR_SV</name><operator pos:start="15:38" pos:end="15:38">)</operator> <operator pos:start="15:40" pos:end="15:41">==</operator> <literal type="number" pos:start="15:43" pos:end="15:43">0</literal> <operator pos:start="15:45" pos:end="15:46">||</operator> <operator pos:start="15:48" pos:end="15:48">(</operator><name pos:start="15:49" pos:end="15:55"><name pos:start="15:49" pos:end="15:51">env</name><operator pos:start="15:52" pos:end="15:53">-&gt;</operator><name pos:start="15:54" pos:end="15:55">sr</name></name> <operator pos:start="15:57" pos:end="15:57">&amp;</operator> <name pos:start="15:59" pos:end="15:63">SR_MD</name><operator pos:start="15:64" pos:end="15:64">)</operator> <operator pos:start="15:66" pos:end="15:67">==</operator> <literal type="number" pos:start="15:69" pos:end="15:69">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="93:5"><if pos:start="19:5" pos:end="37:5">if <condition pos:start="19:8" pos:end="19:16">(<expr pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:10">rw</name> <operator pos:start="19:12" pos:end="19:13">==</operator> <literal type="number" pos:start="19:15" pos:end="19:15">2</literal></expr>)</condition> <block pos:start="19:18" pos:end="37:5">{<block_content pos:start="21:9" pos:end="35:9">

	<expr_stmt pos:start="21:9" pos:end="21:55"><expr pos:start="21:9" pos:end="21:54"><name pos:start="21:9" pos:end="21:9">n</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <call pos:start="21:13" pos:end="21:54"><name pos:start="21:13" pos:end="21:27">find_itlb_entry</name><argument_list pos:start="21:28" pos:end="21:54">(<argument pos:start="21:29" pos:end="21:31"><expr pos:start="21:29" pos:end="21:31"><name pos:start="21:29" pos:end="21:31">env</name></expr></argument>, <argument pos:start="21:34" pos:end="21:40"><expr pos:start="21:34" pos:end="21:40"><name pos:start="21:34" pos:end="21:40">address</name></expr></argument>, <argument pos:start="21:43" pos:end="21:50"><expr pos:start="21:43" pos:end="21:50"><name pos:start="21:43" pos:end="21:50">use_asid</name></expr></argument>, <argument pos:start="21:53" pos:end="21:53"><expr pos:start="21:53" pos:end="21:53"><literal type="number" pos:start="21:53" pos:end="21:53">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt pos:start="23:9" pos:end="35:9"><if pos:start="23:9" pos:end="35:9">if <condition pos:start="23:12" pos:end="23:19">(<expr pos:start="23:13" pos:end="23:18"><name pos:start="23:13" pos:end="23:13">n</name> <operator pos:start="23:15" pos:end="23:16">&gt;=</operator> <literal type="number" pos:start="23:18" pos:end="23:18">0</literal></expr>)</condition> <block pos:start="23:21" pos:end="35:9">{<block_content pos:start="25:13" pos:end="33:34">

	    <expr_stmt pos:start="25:13" pos:end="25:37"><expr pos:start="25:13" pos:end="25:36"><name pos:start="25:13" pos:end="25:20">matching</name> <operator pos:start="25:22" pos:end="25:22">=</operator> <operator pos:start="25:24" pos:end="25:24">&amp;</operator><name pos:start="25:25" pos:end="25:36"><name pos:start="25:25" pos:end="25:27">env</name><operator pos:start="25:28" pos:end="25:29">-&gt;</operator><name pos:start="25:30" pos:end="25:33">itlb</name><index pos:start="25:34" pos:end="25:36">[<expr pos:start="25:35" pos:end="25:35"><name pos:start="25:35" pos:end="25:35">n</name></expr>]</index></name></expr>;</expr_stmt>

	    <if_stmt pos:start="27:13" pos:end="33:34"><if pos:start="27:13" pos:end="29:39">if <condition pos:start="27:16" pos:end="27:56">(<expr pos:start="27:17" pos:end="27:55"><operator pos:start="27:17" pos:end="27:17">(</operator><name pos:start="27:18" pos:end="27:24"><name pos:start="27:18" pos:end="27:20">env</name><operator pos:start="27:21" pos:end="27:22">-&gt;</operator><name pos:start="27:23" pos:end="27:24">sr</name></name> <operator pos:start="27:26" pos:end="27:26">&amp;</operator> <name pos:start="27:28" pos:end="27:32">SR_MD</name><operator pos:start="27:33" pos:end="27:33">)</operator> <operator pos:start="27:35" pos:end="27:35">&amp;</operator> <operator pos:start="27:37" pos:end="27:37">!</operator><operator pos:start="27:38" pos:end="27:38">(</operator><name pos:start="27:39" pos:end="27:50"><name pos:start="27:39" pos:end="27:46">matching</name><operator pos:start="27:47" pos:end="27:48">-&gt;</operator><name pos:start="27:49" pos:end="27:50">pr</name></name> <operator pos:start="27:52" pos:end="27:52">&amp;</operator> <literal type="number" pos:start="27:54" pos:end="27:54">2</literal><operator pos:start="27:55" pos:end="27:55">)</operator></expr>)</condition><block type="pseudo" pos:start="29:17" pos:end="29:39"><block_content pos:start="29:17" pos:end="29:39">

		<expr_stmt pos:start="29:17" pos:end="29:39"><expr pos:start="29:17" pos:end="29:38"><name pos:start="29:17" pos:end="29:17">n</name> <operator pos:start="29:19" pos:end="29:19">=</operator> <name pos:start="29:21" pos:end="29:38">MMU_ITLB_VIOLATION</name></expr>;</expr_stmt></block_content></block></if>

	    <else pos:start="31:13" pos:end="33:34">else<block type="pseudo" pos:start="33:17" pos:end="33:34"><block_content pos:start="33:17" pos:end="33:34">

		<expr_stmt pos:start="33:17" pos:end="33:34"><expr pos:start="33:17" pos:end="33:33"><operator pos:start="33:17" pos:end="33:17">*</operator><name pos:start="33:18" pos:end="33:21">prot</name> <operator pos:start="33:23" pos:end="33:23">=</operator> <name pos:start="33:25" pos:end="33:33">PAGE_READ</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

	</block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="37:7" pos:end="93:5">else <block pos:start="37:12" pos:end="93:5">{<block_content pos:start="39:9" pos:end="91:9">

	<expr_stmt pos:start="39:9" pos:end="39:52"><expr pos:start="39:9" pos:end="39:51"><name pos:start="39:9" pos:end="39:9">n</name> <operator pos:start="39:11" pos:end="39:11">=</operator> <call pos:start="39:13" pos:end="39:51"><name pos:start="39:13" pos:end="39:27">find_utlb_entry</name><argument_list pos:start="39:28" pos:end="39:51">(<argument pos:start="39:29" pos:end="39:31"><expr pos:start="39:29" pos:end="39:31"><name pos:start="39:29" pos:end="39:31">env</name></expr></argument>, <argument pos:start="39:34" pos:end="39:40"><expr pos:start="39:34" pos:end="39:40"><name pos:start="39:34" pos:end="39:40">address</name></expr></argument>, <argument pos:start="39:43" pos:end="39:50"><expr pos:start="39:43" pos:end="39:50"><name pos:start="39:43" pos:end="39:50">use_asid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt pos:start="41:9" pos:end="91:9"><if pos:start="41:9" pos:end="85:9">if <condition pos:start="41:12" pos:end="41:19">(<expr pos:start="41:13" pos:end="41:18"><name pos:start="41:13" pos:end="41:13">n</name> <operator pos:start="41:15" pos:end="41:16">&gt;=</operator> <literal type="number" pos:start="41:18" pos:end="41:18">0</literal></expr>)</condition> <block pos:start="41:21" pos:end="85:9">{<block_content pos:start="43:13" pos:end="83:13">

	    <expr_stmt pos:start="43:13" pos:end="43:37"><expr pos:start="43:13" pos:end="43:36"><name pos:start="43:13" pos:end="43:20">matching</name> <operator pos:start="43:22" pos:end="43:22">=</operator> <operator pos:start="43:24" pos:end="43:24">&amp;</operator><name pos:start="43:25" pos:end="43:36"><name pos:start="43:25" pos:end="43:27">env</name><operator pos:start="43:28" pos:end="43:29">-&gt;</operator><name pos:start="43:30" pos:end="43:33">utlb</name><index pos:start="43:34" pos:end="43:36">[<expr pos:start="43:35" pos:end="43:35"><name pos:start="43:35" pos:end="43:35">n</name></expr>]</index></name></expr>;</expr_stmt>

	    <switch pos:start="45:13" pos:end="83:13">switch <condition pos:start="45:20" pos:end="45:70">(<expr pos:start="45:21" pos:end="45:69"><operator pos:start="45:21" pos:end="45:21">(</operator><name pos:start="45:22" pos:end="45:33"><name pos:start="45:22" pos:end="45:29">matching</name><operator pos:start="45:30" pos:end="45:31">-&gt;</operator><name pos:start="45:32" pos:end="45:33">pr</name></name> <operator pos:start="45:35" pos:end="45:36">&lt;&lt;</operator> <literal type="number" pos:start="45:38" pos:end="45:38">1</literal><operator pos:start="45:39" pos:end="45:39">)</operator> <operator pos:start="45:41" pos:end="45:41">|</operator> <operator pos:start="45:43" pos:end="45:43">(</operator><ternary pos:start="45:44" pos:end="45:68"><condition pos:start="45:44" pos:end="45:62"><expr pos:start="45:44" pos:end="45:60"><operator pos:start="45:44" pos:end="45:44">(</operator><name pos:start="45:45" pos:end="45:51"><name pos:start="45:45" pos:end="45:47">env</name><operator pos:start="45:48" pos:end="45:49">-&gt;</operator><name pos:start="45:50" pos:end="45:51">sr</name></name> <operator pos:start="45:53" pos:end="45:53">&amp;</operator> <name pos:start="45:55" pos:end="45:59">SR_MD</name><operator pos:start="45:60" pos:end="45:60">)</operator></expr> ?</condition><then pos:start="45:64" pos:end="45:64"> <expr pos:start="45:64" pos:end="45:64"><literal type="number" pos:start="45:64" pos:end="45:64">1</literal></expr> </then><else pos:start="45:66" pos:end="45:68">: <expr pos:start="45:68" pos:end="45:68"><literal type="number" pos:start="45:68" pos:end="45:68">0</literal></expr></else></ternary><operator pos:start="45:69" pos:end="45:69">)</operator></expr>)</condition> <block pos:start="45:72" pos:end="83:13">{<block_content pos:start="47:13" pos:end="81:22">

	    <case pos:start="47:13" pos:end="47:19">case <expr pos:start="47:18" pos:end="47:18"><literal type="number" pos:start="47:18" pos:end="47:18">0</literal></expr>:</case>		<comment type="block" pos:start="47:33" pos:end="47:41">/* 000 */</comment>

	    <case pos:start="49:13" pos:end="49:19">case <expr pos:start="49:18" pos:end="49:18"><literal type="number" pos:start="49:18" pos:end="49:18">2</literal></expr>:</case>		<comment type="block" pos:start="49:33" pos:end="49:41">/* 010 */</comment>

		<expr_stmt pos:start="51:17" pos:end="53:44"><expr pos:start="51:17" pos:end="53:43"><name pos:start="51:17" pos:end="51:17">n</name> <operator pos:start="51:19" pos:end="51:19">=</operator> <ternary pos:start="51:21" pos:end="53:43"><condition pos:start="51:21" pos:end="51:31"><expr pos:start="51:21" pos:end="51:29"><operator pos:start="51:21" pos:end="51:21">(</operator><name pos:start="51:22" pos:end="51:23">rw</name> <operator pos:start="51:25" pos:end="51:26">==</operator> <literal type="number" pos:start="51:28" pos:end="51:28">1</literal><operator pos:start="51:29" pos:end="51:29">)</operator></expr> ?</condition><then pos:start="51:33" pos:end="51:56"> <expr pos:start="51:33" pos:end="51:56"><name pos:start="51:33" pos:end="51:56">MMU_DTLB_VIOLATION_WRITE</name></expr> </then><else pos:start="51:58" pos:end="53:43">:

		    <expr pos:start="53:21" pos:end="53:43"><name pos:start="53:21" pos:end="53:43">MMU_DTLB_VIOLATION_READ</name></expr></else></ternary></expr>;</expr_stmt>

		<break pos:start="55:17" pos:end="55:22">break;</break>

	    <case pos:start="57:13" pos:end="57:19">case <expr pos:start="57:18" pos:end="57:18"><literal type="number" pos:start="57:18" pos:end="57:18">1</literal></expr>:</case>		<comment type="block" pos:start="57:33" pos:end="57:41">/* 001 */</comment>

	    <case pos:start="59:13" pos:end="59:19">case <expr pos:start="59:18" pos:end="59:18"><literal type="number" pos:start="59:18" pos:end="59:18">4</literal></expr>:</case>		<comment type="block" pos:start="59:33" pos:end="59:41">/* 100 */</comment>

	    <case pos:start="61:13" pos:end="61:19">case <expr pos:start="61:18" pos:end="61:18"><literal type="number" pos:start="61:18" pos:end="61:18">5</literal></expr>:</case>		<comment type="block" pos:start="61:33" pos:end="61:41">/* 101 */</comment>

		<if_stmt pos:start="63:17" pos:end="69:38"><if pos:start="63:17" pos:end="65:49">if <condition pos:start="63:20" pos:end="63:28">(<expr pos:start="63:21" pos:end="63:27"><name pos:start="63:21" pos:end="63:22">rw</name> <operator pos:start="63:24" pos:end="63:25">==</operator> <literal type="number" pos:start="63:27" pos:end="63:27">1</literal></expr>)</condition><block type="pseudo" pos:start="65:21" pos:end="65:49"><block_content pos:start="65:21" pos:end="65:49">

		    <expr_stmt pos:start="65:21" pos:end="65:49"><expr pos:start="65:21" pos:end="65:48"><name pos:start="65:21" pos:end="65:21">n</name> <operator pos:start="65:23" pos:end="65:23">=</operator> <name pos:start="65:25" pos:end="65:48">MMU_DTLB_VIOLATION_WRITE</name></expr>;</expr_stmt></block_content></block></if>

		<else pos:start="67:17" pos:end="69:38">else<block type="pseudo" pos:start="69:21" pos:end="69:38"><block_content pos:start="69:21" pos:end="69:38">

		    <expr_stmt pos:start="69:21" pos:end="69:38"><expr pos:start="69:21" pos:end="69:37"><operator pos:start="69:21" pos:end="69:21">*</operator><name pos:start="69:22" pos:end="69:25">prot</name> <operator pos:start="69:27" pos:end="69:27">=</operator> <name pos:start="69:29" pos:end="69:37">PAGE_READ</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

		<break pos:start="71:17" pos:end="71:22">break;</break>

	    <case pos:start="73:13" pos:end="73:19">case <expr pos:start="73:18" pos:end="73:18"><literal type="number" pos:start="73:18" pos:end="73:18">3</literal></expr>:</case>		<comment type="block" pos:start="73:33" pos:end="73:41">/* 011 */</comment>

	    <case pos:start="75:13" pos:end="75:19">case <expr pos:start="75:18" pos:end="75:18"><literal type="number" pos:start="75:18" pos:end="75:18">6</literal></expr>:</case>		<comment type="block" pos:start="75:33" pos:end="75:41">/* 110 */</comment>

	    <case pos:start="77:13" pos:end="77:19">case <expr pos:start="77:18" pos:end="77:18"><literal type="number" pos:start="77:18" pos:end="77:18">7</literal></expr>:</case>		<comment type="block" pos:start="77:33" pos:end="77:41">/* 111 */</comment>

		<expr_stmt pos:start="79:17" pos:end="79:58"><expr pos:start="79:17" pos:end="79:57"><operator pos:start="79:17" pos:end="79:17">*</operator><name pos:start="79:18" pos:end="79:21">prot</name> <operator pos:start="79:23" pos:end="79:23">=</operator> <ternary pos:start="79:25" pos:end="79:57"><condition pos:start="79:25" pos:end="79:34"><expr pos:start="79:25" pos:end="79:33"><operator pos:start="79:25" pos:end="79:25">(</operator><name pos:start="79:26" pos:end="79:27">rw</name> <operator pos:start="79:29" pos:end="79:30">==</operator> <literal type="number" pos:start="79:32" pos:end="79:32">1</literal><operator pos:start="79:33" pos:end="79:33">)</operator></expr>?</condition><then pos:start="79:36" pos:end="79:45"> <expr pos:start="79:36" pos:end="79:45"><name pos:start="79:36" pos:end="79:45">PAGE_WRITE</name></expr> </then><else pos:start="79:47" pos:end="79:57">: <expr pos:start="79:49" pos:end="79:57"><name pos:start="79:49" pos:end="79:57">PAGE_READ</name></expr></else></ternary></expr>;</expr_stmt>

		<break pos:start="81:17" pos:end="81:22">break;</break>

	    </block_content>}</block></switch>

	</block_content>}</block></if> <if type="elseif" pos:start="85:11" pos:end="91:9">else if <condition pos:start="85:19" pos:end="85:38">(<expr pos:start="85:20" pos:end="85:37"><name pos:start="85:20" pos:end="85:20">n</name> <operator pos:start="85:22" pos:end="85:23">==</operator> <name pos:start="85:25" pos:end="85:37">MMU_DTLB_MISS</name></expr>)</condition> <block pos:start="85:40" pos:end="91:9">{<block_content pos:start="87:13" pos:end="89:35">

	    <expr_stmt pos:start="87:13" pos:end="89:35"><expr pos:start="87:13" pos:end="89:34"><name pos:start="87:13" pos:end="87:13">n</name> <operator pos:start="87:15" pos:end="87:15">=</operator> <ternary pos:start="87:17" pos:end="89:34"><condition pos:start="87:17" pos:end="87:27"><expr pos:start="87:17" pos:end="87:25"><operator pos:start="87:17" pos:end="87:17">(</operator><name pos:start="87:18" pos:end="87:19">rw</name> <operator pos:start="87:21" pos:end="87:22">==</operator> <literal type="number" pos:start="87:24" pos:end="87:24">1</literal><operator pos:start="87:25" pos:end="87:25">)</operator></expr> ?</condition><then pos:start="87:29" pos:end="87:47"> <expr pos:start="87:29" pos:end="87:47"><name pos:start="87:29" pos:end="87:47">MMU_DTLB_MISS_WRITE</name></expr> </then><else pos:start="87:49" pos:end="89:34">:

		<expr pos:start="89:17" pos:end="89:34"><name pos:start="89:17" pos:end="89:34">MMU_DTLB_MISS_READ</name></expr></else></ternary></expr>;</expr_stmt>

	</block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="95:5" pos:end="109:5"><if pos:start="95:5" pos:end="109:5">if <condition pos:start="95:8" pos:end="95:15">(<expr pos:start="95:9" pos:end="95:14"><name pos:start="95:9" pos:end="95:9">n</name> <operator pos:start="95:11" pos:end="95:12">&gt;=</operator> <literal type="number" pos:start="95:14" pos:end="95:14">0</literal></expr>)</condition> <block pos:start="95:17" pos:end="109:5">{<block_content pos:start="97:9" pos:end="107:23">

	<expr_stmt pos:start="97:9" pos:end="99:45"><expr pos:start="97:9" pos:end="99:44"><operator pos:start="97:9" pos:end="97:9">*</operator><name pos:start="97:10" pos:end="97:17">physical</name> <operator pos:start="97:19" pos:end="97:19">=</operator> <operator pos:start="97:21" pos:end="97:21">(</operator><operator pos:start="97:22" pos:end="97:22">(</operator><name pos:start="97:23" pos:end="97:35"><name pos:start="97:23" pos:end="97:30">matching</name><operator pos:start="97:31" pos:end="97:32">-&gt;</operator><name pos:start="97:33" pos:end="97:35">ppn</name></name> <operator pos:start="97:37" pos:end="97:38">&lt;&lt;</operator> <literal type="number" pos:start="97:40" pos:end="97:41">10</literal><operator pos:start="97:42" pos:end="97:42">)</operator> <operator pos:start="97:44" pos:end="97:44">&amp;</operator> <operator pos:start="97:46" pos:end="97:46">~</operator><operator pos:start="97:47" pos:end="97:47">(</operator><name pos:start="97:48" pos:end="97:61"><name pos:start="97:48" pos:end="97:55">matching</name><operator pos:start="97:56" pos:end="97:57">-&gt;</operator><name pos:start="97:58" pos:end="97:61">size</name></name> <operator pos:start="97:63" pos:end="97:63">-</operator> <literal type="number" pos:start="97:65" pos:end="97:65">1</literal><operator pos:start="97:66" pos:end="97:66">)</operator><operator pos:start="97:67" pos:end="97:67">)</operator> <operator pos:start="97:69" pos:end="97:69">|</operator>

	    <operator pos:start="99:13" pos:end="99:13">(</operator><name pos:start="99:14" pos:end="99:20">address</name> <operator pos:start="99:22" pos:end="99:22">&amp;</operator> <operator pos:start="99:24" pos:end="99:24">(</operator><name pos:start="99:25" pos:end="99:38"><name pos:start="99:25" pos:end="99:32">matching</name><operator pos:start="99:33" pos:end="99:34">-&gt;</operator><name pos:start="99:35" pos:end="99:38">size</name></name> <operator pos:start="99:40" pos:end="99:40">-</operator> <literal type="number" pos:start="99:42" pos:end="99:42">1</literal><operator pos:start="99:43" pos:end="99:43">)</operator><operator pos:start="99:44" pos:end="99:44">)</operator></expr>;</expr_stmt>

	<if_stmt pos:start="101:9" pos:end="107:23"><if pos:start="101:9" pos:end="103:39">if <condition pos:start="101:12" pos:end="101:37">(<expr pos:start="101:13" pos:end="101:36"><operator pos:start="101:13" pos:end="101:13">(</operator><name pos:start="101:14" pos:end="101:15">rw</name> <operator pos:start="101:17" pos:end="101:18">==</operator> <literal type="number" pos:start="101:20" pos:end="101:20">1</literal><operator pos:start="101:21" pos:end="101:21">)</operator> <operator pos:start="101:23" pos:end="101:23">&amp;</operator> <operator pos:start="101:25" pos:end="101:25">!</operator><name pos:start="101:26" pos:end="101:36"><name pos:start="101:26" pos:end="101:33">matching</name><operator pos:start="101:34" pos:end="101:35">-&gt;</operator><name pos:start="101:36" pos:end="101:36">d</name></name></expr>)</condition><block type="pseudo" pos:start="103:13" pos:end="103:39"><block_content pos:start="103:13" pos:end="103:39">

	    <expr_stmt pos:start="103:13" pos:end="103:39"><expr pos:start="103:13" pos:end="103:38"><name pos:start="103:13" pos:end="103:13">n</name> <operator pos:start="103:15" pos:end="103:15">=</operator> <name pos:start="103:17" pos:end="103:38">MMU_DTLB_INITIAL_WRITE</name></expr>;</expr_stmt></block_content></block></if>

	<else pos:start="105:9" pos:end="107:23">else<block type="pseudo" pos:start="107:13" pos:end="107:23"><block_content pos:start="107:13" pos:end="107:23">

	    <expr_stmt pos:start="107:13" pos:end="107:23"><expr pos:start="107:13" pos:end="107:22"><name pos:start="107:13" pos:end="107:13">n</name> <operator pos:start="107:15" pos:end="107:15">=</operator> <name pos:start="107:17" pos:end="107:22">MMU_OK</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="111:5" pos:end="111:13">return <expr pos:start="111:12" pos:end="111:12"><name pos:start="111:12" pos:end="111:12">n</name></expr>;</return>

</block_content>}</block></function>
</unit>
