<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6082.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">parse_ifo_palette</name><parameter_list pos:start="1:29" pos:end="1:57">(<parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:47"><name pos:start="1:30" pos:end="1:42">DVDSubContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">ctx</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:56"><decl pos:start="1:50" pos:end="1:56"><type pos:start="1:50" pos:end="1:56"><name pos:start="1:50" pos:end="1:53">char</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:56">p</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="99:1">{<block_content pos:start="5:5" pos:end="97:15">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">FILE</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:13">ifo</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:19"><name pos:start="7:10" pos:end="7:15">ifostr</name><index pos:start="7:16" pos:end="7:19">[<expr pos:start="7:17" pos:end="7:18"><literal type="number" pos:start="7:17" pos:end="7:18">12</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:20">sp_pgci</name></decl>, <decl pos:start="9:23" pos:end="9:26"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:23" pos:end="9:26">pgci</name></decl>, <decl pos:start="9:29" pos:end="9:35"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:29" pos:end="9:35">off_pgc</name></decl>, <decl pos:start="9:38" pos:end="9:40"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:38" pos:end="9:40">pgc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:13">r</name></decl>, <decl pos:start="11:16" pos:end="11:16"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:16" pos:end="11:16">g</name></decl>, <decl pos:start="11:19" pos:end="11:19"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:19" pos:end="11:19">b</name></decl>, <decl pos:start="11:22" pos:end="11:28"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:22" pos:end="11:28"><name pos:start="11:22" pos:end="11:24">yuv</name><index pos:start="11:25" pos:end="11:28">[<expr pos:start="11:26" pos:end="11:27"><literal type="number" pos:start="11:26" pos:end="11:27">65</literal></expr>]</index></name></decl>, <decl pos:start="11:31" pos:end="11:34"><type ref="prev" pos:start="11:5" pos:end="11:11"><modifier pos:start="11:31" pos:end="11:31">*</modifier></type><name pos:start="11:32" pos:end="11:34">buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:42"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:12"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:12">y</name></decl>, <decl pos:start="13:15" pos:end="13:16"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:15" pos:end="13:16">cb</name></decl>, <decl pos:start="13:19" pos:end="13:20"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:19" pos:end="13:20">cr</name></decl>, <decl pos:start="13:23" pos:end="13:27"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:23" pos:end="13:27">r_add</name></decl>, <decl pos:start="13:30" pos:end="13:34"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:30" pos:end="13:34">g_add</name></decl>, <decl pos:start="13:37" pos:end="13:41"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:37" pos:end="13:41">b_add</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name> <init pos:start="15:13" pos:end="15:15">= <expr pos:start="15:15" pos:end="15:15"><literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:51"><decl pos:start="17:5" pos:end="17:50"><type pos:start="17:5" pos:end="17:19"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:17">uint8_t</name> <modifier pos:start="17:19" pos:end="17:19">*</modifier></type><name pos:start="17:20" pos:end="17:21">cm</name> <init pos:start="17:23" pos:end="17:50">= <expr pos:start="17:25" pos:end="17:50"><name pos:start="17:25" pos:end="17:35">ff_crop_tab</name> <operator pos:start="17:37" pos:end="17:37">+</operator> <name pos:start="17:39" pos:end="17:50">MAX_NEG_CROP</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:25"><expr pos:start="21:5" pos:end="21:24"><name pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:7">ctx</name><operator pos:start="21:8" pos:end="21:9">-&gt;</operator><name pos:start="21:10" pos:end="21:20">has_palette</name></name> <operator pos:start="21:22" pos:end="21:22">=</operator> <literal type="number" pos:start="21:24" pos:end="21:24">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:38">(<expr pos:start="23:9" pos:end="23:37"><operator pos:start="23:9" pos:end="23:9">(</operator><name pos:start="23:10" pos:end="23:12">ifo</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <call pos:start="23:16" pos:end="23:28"><name pos:start="23:16" pos:end="23:20">fopen</name><argument_list pos:start="23:21" pos:end="23:28">(<argument pos:start="23:22" pos:end="23:22"><expr pos:start="23:22" pos:end="23:22"><name pos:start="23:22" pos:end="23:22">p</name></expr></argument>, <argument pos:start="23:25" pos:end="23:27"><expr pos:start="23:25" pos:end="23:27"><literal type="string" pos:start="23:25" pos:end="23:27">"r"</literal></expr></argument>)</argument_list></call><operator pos:start="23:29" pos:end="23:29">)</operator> <operator pos:start="23:31" pos:end="23:32">==</operator> <name pos:start="23:34" pos:end="23:37">NULL</name></expr>)</condition> <block pos:start="23:40" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:27">

        <expr_stmt pos:start="25:9" pos:end="25:96"><expr pos:start="25:9" pos:end="25:95"><call pos:start="25:9" pos:end="25:95"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="25:95">(<argument pos:start="25:16" pos:end="25:18"><expr pos:start="25:16" pos:end="25:18"><name pos:start="25:16" pos:end="25:18">ctx</name></expr></argument>, <argument pos:start="25:21" pos:end="25:34"><expr pos:start="25:21" pos:end="25:34"><name pos:start="25:21" pos:end="25:34">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="25:37" pos:end="25:74"><expr pos:start="25:37" pos:end="25:74"><literal type="string" pos:start="25:37" pos:end="25:74">"Unable to open IFO file \"%s\": %s\n"</literal></expr></argument>, <argument pos:start="25:77" pos:end="25:77"><expr pos:start="25:77" pos:end="25:77"><name pos:start="25:77" pos:end="25:77">p</name></expr></argument>, <argument pos:start="25:80" pos:end="25:94"><expr pos:start="25:80" pos:end="25:94"><call pos:start="25:80" pos:end="25:94"><name pos:start="25:80" pos:end="25:87">strerror</name><argument_list pos:start="25:88" pos:end="25:94">(<argument pos:start="25:89" pos:end="25:93"><expr pos:start="25:89" pos:end="25:93"><name pos:start="25:89" pos:end="25:93">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:27">return <expr pos:start="27:16" pos:end="27:26"><name pos:start="27:16" pos:end="27:26">AVERROR_EOF</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="39:5"><if pos:start="31:5" pos:end="39:5">if <condition pos:start="31:8" pos:end="31:77">(<expr pos:start="31:9" pos:end="31:76"><call pos:start="31:9" pos:end="31:33"><name pos:start="31:9" pos:end="31:13">fread</name><argument_list pos:start="31:14" pos:end="31:33">(<argument pos:start="31:15" pos:end="31:20"><expr pos:start="31:15" pos:end="31:20"><name pos:start="31:15" pos:end="31:20">ifostr</name></expr></argument>, <argument pos:start="31:23" pos:end="31:24"><expr pos:start="31:23" pos:end="31:24"><literal type="number" pos:start="31:23" pos:end="31:24">12</literal></expr></argument>, <argument pos:start="31:27" pos:end="31:27"><expr pos:start="31:27" pos:end="31:27"><literal type="number" pos:start="31:27" pos:end="31:27">1</literal></expr></argument>, <argument pos:start="31:30" pos:end="31:32"><expr pos:start="31:30" pos:end="31:32"><name pos:start="31:30" pos:end="31:32">ifo</name></expr></argument>)</argument_list></call> <operator pos:start="31:35" pos:end="31:36">!=</operator> <literal type="number" pos:start="31:38" pos:end="31:38">1</literal> <operator pos:start="31:40" pos:end="31:41">||</operator> <call pos:start="31:43" pos:end="31:76"><name pos:start="31:43" pos:end="31:48">memcmp</name><argument_list pos:start="31:49" pos:end="31:76">(<argument pos:start="31:50" pos:end="31:55"><expr pos:start="31:50" pos:end="31:55"><name pos:start="31:50" pos:end="31:55">ifostr</name></expr></argument>, <argument pos:start="31:58" pos:end="31:71"><expr pos:start="31:58" pos:end="31:71"><literal type="string" pos:start="31:58" pos:end="31:71">"DVDVIDEO-VTS"</literal></expr></argument>, <argument pos:start="31:74" pos:end="31:75"><expr pos:start="31:74" pos:end="31:75"><literal type="number" pos:start="31:74" pos:end="31:75">12</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:79" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:17">

        <expr_stmt pos:start="33:9" pos:end="33:76"><expr pos:start="33:9" pos:end="33:75"><call pos:start="33:9" pos:end="33:75"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="33:75">(<argument pos:start="33:16" pos:end="33:18"><expr pos:start="33:16" pos:end="33:18"><name pos:start="33:16" pos:end="33:18">ctx</name></expr></argument>, <argument pos:start="33:21" pos:end="33:34"><expr pos:start="33:21" pos:end="33:34"><name pos:start="33:21" pos:end="33:34">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="33:37" pos:end="33:71"><expr pos:start="33:37" pos:end="33:71"><literal type="string" pos:start="33:37" pos:end="33:71">"\"%s\" is not a proper IFO file\n"</literal></expr></argument>, <argument pos:start="33:74" pos:end="33:74"><expr pos:start="33:74" pos:end="33:74"><name pos:start="33:74" pos:end="33:74">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:34"><expr pos:start="35:9" pos:end="35:33"><name pos:start="35:9" pos:end="35:11">ret</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <name pos:start="35:15" pos:end="35:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

        <goto pos:start="37:9" pos:end="37:17">goto <name pos:start="37:14" pos:end="37:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:31"><expr pos:start="41:5" pos:end="41:30"><call pos:start="41:5" pos:end="41:30"><name pos:start="41:5" pos:end="41:9">fseek</name><argument_list pos:start="41:10" pos:end="41:30">(<argument pos:start="41:11" pos:end="41:13"><expr pos:start="41:11" pos:end="41:13"><name pos:start="41:11" pos:end="41:13">ifo</name></expr></argument>, <argument pos:start="41:16" pos:end="41:19"><expr pos:start="41:16" pos:end="41:19"><literal type="number" pos:start="41:16" pos:end="41:19">0xCC</literal></expr></argument>, <argument pos:start="41:22" pos:end="41:29"><expr pos:start="41:22" pos:end="41:29"><name pos:start="41:22" pos:end="41:29">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="83:5"><if pos:start="43:5" pos:end="83:5">if <condition pos:start="43:8" pos:end="43:40">(<expr pos:start="43:9" pos:end="43:39"><call pos:start="43:9" pos:end="43:34"><name pos:start="43:9" pos:end="43:13">fread</name><argument_list pos:start="43:14" pos:end="43:34">(<argument pos:start="43:15" pos:end="43:22"><expr pos:start="43:15" pos:end="43:22"><operator pos:start="43:15" pos:end="43:15">&amp;</operator><name pos:start="43:16" pos:end="43:22">sp_pgci</name></expr></argument>, <argument pos:start="43:25" pos:end="43:25"><expr pos:start="43:25" pos:end="43:25"><literal type="number" pos:start="43:25" pos:end="43:25">4</literal></expr></argument>, <argument pos:start="43:28" pos:end="43:28"><expr pos:start="43:28" pos:end="43:28"><literal type="number" pos:start="43:28" pos:end="43:28">1</literal></expr></argument>, <argument pos:start="43:31" pos:end="43:33"><expr pos:start="43:31" pos:end="43:33"><name pos:start="43:31" pos:end="43:33">ifo</name></expr></argument>)</argument_list></call> <operator pos:start="43:36" pos:end="43:37">==</operator> <literal type="number" pos:start="43:39" pos:end="43:39">1</literal></expr>)</condition> <block pos:start="43:42" pos:end="83:5">{<block_content pos:start="45:9" pos:end="81:9">

        <expr_stmt pos:start="45:9" pos:end="45:42"><expr pos:start="45:9" pos:end="45:41"><name pos:start="45:9" pos:end="45:12">pgci</name> <operator pos:start="45:14" pos:end="45:14">=</operator> <call pos:start="45:16" pos:end="45:34"><name pos:start="45:16" pos:end="45:25">av_be2ne32</name><argument_list pos:start="45:26" pos:end="45:34">(<argument pos:start="45:27" pos:end="45:33"><expr pos:start="45:27" pos:end="45:33"><name pos:start="45:27" pos:end="45:33">sp_pgci</name></expr></argument>)</argument_list></call> <operator pos:start="45:36" pos:end="45:36">*</operator> <literal type="number" pos:start="45:38" pos:end="45:41">2048</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:42"><expr pos:start="47:9" pos:end="47:41"><call pos:start="47:9" pos:end="47:41"><name pos:start="47:9" pos:end="47:13">fseek</name><argument_list pos:start="47:14" pos:end="47:41">(<argument pos:start="47:15" pos:end="47:17"><expr pos:start="47:15" pos:end="47:17"><name pos:start="47:15" pos:end="47:17">ifo</name></expr></argument>, <argument pos:start="47:20" pos:end="47:30"><expr pos:start="47:20" pos:end="47:30"><name pos:start="47:20" pos:end="47:23">pgci</name> <operator pos:start="47:25" pos:end="47:25">+</operator> <literal type="number" pos:start="47:27" pos:end="47:30">0x0C</literal></expr></argument>, <argument pos:start="47:33" pos:end="47:40"><expr pos:start="47:33" pos:end="47:40"><name pos:start="47:33" pos:end="47:40">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="81:9"><if pos:start="49:9" pos:end="81:9">if <condition pos:start="49:12" pos:end="49:44">(<expr pos:start="49:13" pos:end="49:43"><call pos:start="49:13" pos:end="49:38"><name pos:start="49:13" pos:end="49:17">fread</name><argument_list pos:start="49:18" pos:end="49:38">(<argument pos:start="49:19" pos:end="49:26"><expr pos:start="49:19" pos:end="49:26"><operator pos:start="49:19" pos:end="49:19">&amp;</operator><name pos:start="49:20" pos:end="49:26">off_pgc</name></expr></argument>, <argument pos:start="49:29" pos:end="49:29"><expr pos:start="49:29" pos:end="49:29"><literal type="number" pos:start="49:29" pos:end="49:29">4</literal></expr></argument>, <argument pos:start="49:32" pos:end="49:32"><expr pos:start="49:32" pos:end="49:32"><literal type="number" pos:start="49:32" pos:end="49:32">1</literal></expr></argument>, <argument pos:start="49:35" pos:end="49:37"><expr pos:start="49:35" pos:end="49:37"><name pos:start="49:35" pos:end="49:37">ifo</name></expr></argument>)</argument_list></call> <operator pos:start="49:40" pos:end="49:41">==</operator> <literal type="number" pos:start="49:43" pos:end="49:43">1</literal></expr>)</condition> <block pos:start="49:46" pos:end="81:9">{<block_content pos:start="51:13" pos:end="79:13">

            <expr_stmt pos:start="51:13" pos:end="51:45"><expr pos:start="51:13" pos:end="51:44"><name pos:start="51:13" pos:end="51:15">pgc</name> <operator pos:start="51:17" pos:end="51:17">=</operator> <name pos:start="51:19" pos:end="51:22">pgci</name> <operator pos:start="51:24" pos:end="51:24">+</operator> <call pos:start="51:26" pos:end="51:44"><name pos:start="51:26" pos:end="51:35">av_be2ne32</name><argument_list pos:start="51:36" pos:end="51:44">(<argument pos:start="51:37" pos:end="51:43"><expr pos:start="51:37" pos:end="51:43"><name pos:start="51:37" pos:end="51:43">off_pgc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:45"><expr pos:start="53:13" pos:end="53:44"><call pos:start="53:13" pos:end="53:44"><name pos:start="53:13" pos:end="53:17">fseek</name><argument_list pos:start="53:18" pos:end="53:44">(<argument pos:start="53:19" pos:end="53:21"><expr pos:start="53:19" pos:end="53:21"><name pos:start="53:19" pos:end="53:21">ifo</name></expr></argument>, <argument pos:start="53:24" pos:end="53:33"><expr pos:start="53:24" pos:end="53:33"><name pos:start="53:24" pos:end="53:26">pgc</name> <operator pos:start="53:28" pos:end="53:28">+</operator> <literal type="number" pos:start="53:30" pos:end="53:33">0xA4</literal></expr></argument>, <argument pos:start="53:36" pos:end="53:43"><expr pos:start="53:36" pos:end="53:43"><name pos:start="53:36" pos:end="53:43">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="55:13" pos:end="79:13"><if pos:start="55:13" pos:end="79:13">if <condition pos:start="55:16" pos:end="55:44">(<expr pos:start="55:17" pos:end="55:43"><call pos:start="55:17" pos:end="55:38"><name pos:start="55:17" pos:end="55:21">fread</name><argument_list pos:start="55:22" pos:end="55:38">(<argument pos:start="55:23" pos:end="55:25"><expr pos:start="55:23" pos:end="55:25"><name pos:start="55:23" pos:end="55:25">yuv</name></expr></argument>, <argument pos:start="55:28" pos:end="55:29"><expr pos:start="55:28" pos:end="55:29"><literal type="number" pos:start="55:28" pos:end="55:29">64</literal></expr></argument>, <argument pos:start="55:32" pos:end="55:32"><expr pos:start="55:32" pos:end="55:32"><literal type="number" pos:start="55:32" pos:end="55:32">1</literal></expr></argument>, <argument pos:start="55:35" pos:end="55:37"><expr pos:start="55:35" pos:end="55:37"><name pos:start="55:35" pos:end="55:37">ifo</name></expr></argument>)</argument_list></call> <operator pos:start="55:40" pos:end="55:41">==</operator> <literal type="number" pos:start="55:43" pos:end="55:43">1</literal></expr>)</condition> <block pos:start="55:46" pos:end="79:13">{<block_content pos:start="57:17" pos:end="77:37">

                <expr_stmt pos:start="57:17" pos:end="57:26"><expr pos:start="57:17" pos:end="57:25"><name pos:start="57:17" pos:end="57:19">buf</name> <operator pos:start="57:21" pos:end="57:21">=</operator> <name pos:start="57:23" pos:end="57:25">yuv</name></expr>;</expr_stmt>

                <for pos:start="59:17" pos:end="75:17">for<control pos:start="59:20" pos:end="59:35">(<init pos:start="59:21" pos:end="59:24"><expr pos:start="59:21" pos:end="59:23"><name pos:start="59:21" pos:end="59:21">i</name><operator pos:start="59:22" pos:end="59:22">=</operator><literal type="number" pos:start="59:23" pos:end="59:23">0</literal></expr>;</init> <condition pos:start="59:26" pos:end="59:30"><expr pos:start="59:26" pos:end="59:29"><name pos:start="59:26" pos:end="59:26">i</name><operator pos:start="59:27" pos:end="59:27">&lt;</operator><literal type="number" pos:start="59:28" pos:end="59:29">16</literal></expr>;</condition> <incr pos:start="59:32" pos:end="59:34"><expr pos:start="59:32" pos:end="59:34"><name pos:start="59:32" pos:end="59:32">i</name><operator pos:start="59:33" pos:end="59:34">++</operator></expr></incr>)</control> <block pos:start="59:37" pos:end="75:17">{<block_content pos:start="61:21" pos:end="73:26">

                    <expr_stmt pos:start="61:21" pos:end="61:32"><expr pos:start="61:21" pos:end="61:31"><name pos:start="61:21" pos:end="61:21">y</name>  <operator pos:start="61:24" pos:end="61:24">=</operator> <operator pos:start="61:26" pos:end="61:26">*</operator><operator pos:start="61:27" pos:end="61:28">++</operator><name pos:start="61:29" pos:end="61:31">buf</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="63:21" pos:end="63:32"><expr pos:start="63:21" pos:end="63:31"><name pos:start="63:21" pos:end="63:22">cr</name> <operator pos:start="63:24" pos:end="63:24">=</operator> <operator pos:start="63:26" pos:end="63:26">*</operator><operator pos:start="63:27" pos:end="63:28">++</operator><name pos:start="63:29" pos:end="63:31">buf</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="65:21" pos:end="65:32"><expr pos:start="65:21" pos:end="65:31"><name pos:start="65:21" pos:end="65:22">cb</name> <operator pos:start="65:24" pos:end="65:24">=</operator> <operator pos:start="65:26" pos:end="65:26">*</operator><operator pos:start="65:27" pos:end="65:28">++</operator><name pos:start="65:29" pos:end="65:31">buf</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="67:21" pos:end="67:45"><expr pos:start="67:21" pos:end="67:44"><call pos:start="67:21" pos:end="67:44"><name pos:start="67:21" pos:end="67:36">YUV_TO_RGB1_CCIR</name><argument_list pos:start="67:37" pos:end="67:44">(<argument pos:start="67:38" pos:end="67:39"><expr pos:start="67:38" pos:end="67:39"><name pos:start="67:38" pos:end="67:39">cb</name></expr></argument>, <argument pos:start="67:42" pos:end="67:43"><expr pos:start="67:42" pos:end="67:43"><name pos:start="67:42" pos:end="67:43">cr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="69:21" pos:end="69:49"><expr pos:start="69:21" pos:end="69:48"><call pos:start="69:21" pos:end="69:48"><name pos:start="69:21" pos:end="69:36">YUV_TO_RGB2_CCIR</name><argument_list pos:start="69:37" pos:end="69:48">(<argument pos:start="69:38" pos:end="69:38"><expr pos:start="69:38" pos:end="69:38"><name pos:start="69:38" pos:end="69:38">r</name></expr></argument>, <argument pos:start="69:41" pos:end="69:41"><expr pos:start="69:41" pos:end="69:41"><name pos:start="69:41" pos:end="69:41">g</name></expr></argument>, <argument pos:start="69:44" pos:end="69:44"><expr pos:start="69:44" pos:end="69:44"><name pos:start="69:44" pos:end="69:44">b</name></expr></argument>, <argument pos:start="69:47" pos:end="69:47"><expr pos:start="69:47" pos:end="69:47"><name pos:start="69:47" pos:end="69:47">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="71:21" pos:end="71:63"><expr pos:start="71:21" pos:end="71:62"><name pos:start="71:21" pos:end="71:35"><name pos:start="71:21" pos:end="71:23">ctx</name><operator pos:start="71:24" pos:end="71:25">-&gt;</operator><name pos:start="71:26" pos:end="71:32">palette</name><index pos:start="71:33" pos:end="71:35">[<expr pos:start="71:34" pos:end="71:34"><name pos:start="71:34" pos:end="71:34">i</name></expr>]</index></name> <operator pos:start="71:37" pos:end="71:37">=</operator> <operator pos:start="71:39" pos:end="71:39">(</operator><name pos:start="71:40" pos:end="71:40">r</name> <operator pos:start="71:42" pos:end="71:43">&lt;&lt;</operator> <literal type="number" pos:start="71:45" pos:end="71:46">16</literal><operator pos:start="71:47" pos:end="71:47">)</operator> <operator pos:start="71:49" pos:end="71:49">+</operator> <operator pos:start="71:51" pos:end="71:51">(</operator><name pos:start="71:52" pos:end="71:52">g</name> <operator pos:start="71:54" pos:end="71:55">&lt;&lt;</operator> <literal type="number" pos:start="71:57" pos:end="71:57">8</literal><operator pos:start="71:58" pos:end="71:58">)</operator> <operator pos:start="71:60" pos:end="71:60">+</operator> <name pos:start="71:62" pos:end="71:62">b</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="73:21" pos:end="73:26"><expr pos:start="73:21" pos:end="73:25"><name pos:start="73:21" pos:end="73:23">buf</name><operator pos:start="73:24" pos:end="73:25">++</operator></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="77:17" pos:end="77:37"><expr pos:start="77:17" pos:end="77:36"><name pos:start="77:17" pos:end="77:32"><name pos:start="77:17" pos:end="77:19">ctx</name><operator pos:start="77:20" pos:end="77:21">-&gt;</operator><name pos:start="77:22" pos:end="77:32">has_palette</name></name> <operator pos:start="77:34" pos:end="77:34">=</operator> <literal type="number" pos:start="77:36" pos:end="77:36">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="85:5" pos:end="91:5"><if pos:start="85:5" pos:end="91:5">if <condition pos:start="85:8" pos:end="85:30">(<expr pos:start="85:9" pos:end="85:29"><name pos:start="85:9" pos:end="85:24"><name pos:start="85:9" pos:end="85:11">ctx</name><operator pos:start="85:12" pos:end="85:13">-&gt;</operator><name pos:start="85:14" pos:end="85:24">has_palette</name></name> <operator pos:start="85:26" pos:end="85:27">==</operator> <literal type="number" pos:start="85:29" pos:end="85:29">0</literal></expr>)</condition> <block pos:start="85:32" pos:end="91:5">{<block_content pos:start="87:9" pos:end="89:34">

        <expr_stmt pos:start="87:9" pos:end="87:88"><expr pos:start="87:9" pos:end="87:87"><call pos:start="87:9" pos:end="87:87"><name pos:start="87:9" pos:end="87:14">av_log</name><argument_list pos:start="87:15" pos:end="87:87">(<argument pos:start="87:16" pos:end="87:18"><expr pos:start="87:16" pos:end="87:18"><name pos:start="87:16" pos:end="87:18">ctx</name></expr></argument>, <argument pos:start="87:21" pos:end="87:34"><expr pos:start="87:21" pos:end="87:34"><name pos:start="87:21" pos:end="87:34">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="87:37" pos:end="87:83"><expr pos:start="87:37" pos:end="87:83"><literal type="string" pos:start="87:37" pos:end="87:83">"Failed to read palette from IFO file \"%s\"\n"</literal></expr></argument>, <argument pos:start="87:86" pos:end="87:86"><expr pos:start="87:86" pos:end="87:86"><name pos:start="87:86" pos:end="87:86">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:34"><expr pos:start="89:9" pos:end="89:33"><name pos:start="89:9" pos:end="89:11">ret</name> <operator pos:start="89:13" pos:end="89:13">=</operator> <name pos:start="89:15" pos:end="89:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<label pos:start="93:1" pos:end="93:4"><name pos:start="93:1" pos:end="93:3">end</name>:</label>

    <expr_stmt pos:start="95:5" pos:end="95:16"><expr pos:start="95:5" pos:end="95:15"><call pos:start="95:5" pos:end="95:15"><name pos:start="95:5" pos:end="95:10">fclose</name><argument_list pos:start="95:11" pos:end="95:15">(<argument pos:start="95:12" pos:end="95:14"><expr pos:start="95:12" pos:end="95:14"><name pos:start="95:12" pos:end="95:14">ifo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="97:5" pos:end="97:15">return <expr pos:start="97:12" pos:end="97:14"><name pos:start="97:12" pos:end="97:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
