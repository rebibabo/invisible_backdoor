<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13910.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:19">nbd_client_init</name><parameter_list pos:start="1:20" pos:end="11:33">(<parameter pos:start="1:21" pos:end="1:40"><decl pos:start="1:21" pos:end="1:40"><type pos:start="1:21" pos:end="1:40"><name pos:start="1:21" pos:end="1:36">BlockDriverState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:40">bs</name></decl></parameter>,

                    <parameter pos:start="3:21" pos:end="3:42"><decl pos:start="3:21" pos:end="3:42"><type pos:start="3:21" pos:end="3:42"><name pos:start="3:21" pos:end="3:36">QIOChannelSocket</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:42">sioc</name></decl></parameter>,

                    <parameter pos:start="5:21" pos:end="5:38"><decl pos:start="5:21" pos:end="5:38"><type pos:start="5:21" pos:end="5:38"><specifier pos:start="5:21" pos:end="5:25">const</specifier> <name pos:start="5:27" pos:end="5:30">char</name> <modifier pos:start="5:32" pos:end="5:32">*</modifier></type><name pos:start="5:33" pos:end="5:38">export</name></decl></parameter>,

                    <parameter pos:start="7:21" pos:end="7:45"><decl pos:start="7:21" pos:end="7:45"><type pos:start="7:21" pos:end="7:45"><name pos:start="7:21" pos:end="7:35">QCryptoTLSCreds</name> <modifier pos:start="7:37" pos:end="7:37">*</modifier></type><name pos:start="7:38" pos:end="7:45">tlscreds</name></decl></parameter>,

                    <parameter pos:start="9:21" pos:end="9:40"><decl pos:start="9:21" pos:end="9:40"><type pos:start="9:21" pos:end="9:40"><specifier pos:start="9:21" pos:end="9:25">const</specifier> <name pos:start="9:27" pos:end="9:30">char</name> <modifier pos:start="9:32" pos:end="9:32">*</modifier></type><name pos:start="9:33" pos:end="9:40">hostname</name></decl></parameter>,

                    <parameter pos:start="11:21" pos:end="11:32"><decl pos:start="11:21" pos:end="11:32"><type pos:start="11:21" pos:end="11:32"><name pos:start="11:21" pos:end="11:25">Error</name> <modifier pos:start="11:27" pos:end="11:27">*</modifier><modifier pos:start="11:28" pos:end="11:28">*</modifier></type><name pos:start="11:29" pos:end="11:32">errp</name></decl></parameter>)</parameter_list>

<block pos:start="13:1" pos:end="91:1">{<block_content pos:start="15:5" pos:end="89:13">

    <decl_stmt pos:start="15:5" pos:end="15:58"><decl pos:start="15:5" pos:end="15:57"><type pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:20">NbdClientSession</name> <modifier pos:start="15:22" pos:end="15:22">*</modifier></type><name pos:start="15:23" pos:end="15:28">client</name> <init pos:start="15:30" pos:end="15:57">= <expr pos:start="15:32" pos:end="15:57"><call pos:start="15:32" pos:end="15:57"><name pos:start="15:32" pos:end="15:53">nbd_get_client_session</name><argument_list pos:start="15:54" pos:end="15:57">(<argument pos:start="15:55" pos:end="15:56"><expr pos:start="15:55" pos:end="15:56"><name pos:start="15:55" pos:end="15:56">bs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:12"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">ret</name></decl>;</decl_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:23">/* NBD handshake */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:40"><expr pos:start="23:5" pos:end="23:39"><call pos:start="23:5" pos:end="23:39"><name pos:start="23:5" pos:end="23:10">logout</name><argument_list pos:start="23:11" pos:end="23:39">(<argument pos:start="23:12" pos:end="23:30"><expr pos:start="23:12" pos:end="23:30"><literal type="string" pos:start="23:12" pos:end="23:30">"session init %s\n"</literal></expr></argument>, <argument pos:start="23:33" pos:end="23:38"><expr pos:start="23:33" pos:end="23:38"><name pos:start="23:33" pos:end="23:38">export</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:60"><expr pos:start="25:5" pos:end="25:59"><call pos:start="25:5" pos:end="25:59"><name pos:start="25:5" pos:end="25:28">qio_channel_set_blocking</name><argument_list pos:start="25:29" pos:end="25:59">(<argument pos:start="25:30" pos:end="25:46"><expr pos:start="25:30" pos:end="25:46"><call pos:start="25:30" pos:end="25:46"><name pos:start="25:30" pos:end="25:40">QIO_CHANNEL</name><argument_list pos:start="25:41" pos:end="25:46">(<argument pos:start="25:42" pos:end="25:45"><expr pos:start="25:42" pos:end="25:45"><name pos:start="25:42" pos:end="25:45">sioc</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="25:49" pos:end="25:52"><expr pos:start="25:49" pos:end="25:52"><name pos:start="25:49" pos:end="25:52">true</name></expr></argument>, <argument pos:start="25:55" pos:end="25:58"><expr pos:start="25:55" pos:end="25:58"><name pos:start="25:55" pos:end="25:58">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="37:53"><expr pos:start="29:5" pos:end="37:52"><name pos:start="29:5" pos:end="29:7">ret</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <call pos:start="29:11" pos:end="37:52"><name pos:start="29:11" pos:end="29:31">nbd_receive_negotiate</name><argument_list pos:start="29:32" pos:end="37:52">(<argument pos:start="29:33" pos:end="29:49"><expr pos:start="29:33" pos:end="29:49"><call pos:start="29:33" pos:end="29:49"><name pos:start="29:33" pos:end="29:43">QIO_CHANNEL</name><argument_list pos:start="29:44" pos:end="29:49">(<argument pos:start="29:45" pos:end="29:48"><expr pos:start="29:45" pos:end="29:48"><name pos:start="29:45" pos:end="29:48">sioc</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="29:52" pos:end="29:57"><expr pos:start="29:52" pos:end="29:57"><name pos:start="29:52" pos:end="29:57">export</name></expr></argument>,

                                <argument pos:start="31:33" pos:end="31:49"><expr pos:start="31:33" pos:end="31:49"><operator pos:start="31:33" pos:end="31:33">&amp;</operator><name pos:start="31:34" pos:end="31:49"><name pos:start="31:34" pos:end="31:39">client</name><operator pos:start="31:40" pos:end="31:41">-&gt;</operator><name pos:start="31:42" pos:end="31:49">nbdflags</name></name></expr></argument>,

                                <argument pos:start="33:33" pos:end="33:40"><expr pos:start="33:33" pos:end="33:40"><name pos:start="33:33" pos:end="33:40">tlscreds</name></expr></argument>, <argument pos:start="33:43" pos:end="33:50"><expr pos:start="33:43" pos:end="33:50"><name pos:start="33:43" pos:end="33:50">hostname</name></expr></argument>,

                                <argument pos:start="35:33" pos:end="35:44"><expr pos:start="35:33" pos:end="35:44"><operator pos:start="35:33" pos:end="35:33">&amp;</operator><name pos:start="35:34" pos:end="35:44"><name pos:start="35:34" pos:end="35:39">client</name><operator pos:start="35:40" pos:end="35:41">-&gt;</operator><name pos:start="35:42" pos:end="35:44">ioc</name></name></expr></argument>,

                                <argument pos:start="37:33" pos:end="37:45"><expr pos:start="37:33" pos:end="37:45"><operator pos:start="37:33" pos:end="37:33">&amp;</operator><name pos:start="37:34" pos:end="37:45"><name pos:start="37:34" pos:end="37:39">client</name><operator pos:start="37:40" pos:end="37:41">-&gt;</operator><name pos:start="37:42" pos:end="37:45">size</name></name></expr></argument>, <argument pos:start="37:48" pos:end="37:51"><expr pos:start="37:48" pos:end="37:51"><name pos:start="37:48" pos:end="37:51">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="45:5"><if pos:start="39:5" pos:end="45:5">if <condition pos:start="39:8" pos:end="39:16">(<expr pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:11">ret</name> <operator pos:start="39:13" pos:end="39:13">&lt;</operator> <literal type="number" pos:start="39:15" pos:end="39:15">0</literal></expr>)</condition> <block pos:start="39:18" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:19">

        <expr_stmt pos:start="41:9" pos:end="41:60"><expr pos:start="41:9" pos:end="41:59"><call pos:start="41:9" pos:end="41:59"><name pos:start="41:9" pos:end="41:14">logout</name><argument_list pos:start="41:15" pos:end="41:59">(<argument pos:start="41:16" pos:end="41:58"><expr pos:start="41:16" pos:end="41:58"><literal type="string" pos:start="41:16" pos:end="41:58">"Failed to negotiate with the NBD server\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:19">return <expr pos:start="43:16" pos:end="43:18"><name pos:start="43:16" pos:end="43:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="47:5" pos:end="51:5"><if pos:start="47:5" pos:end="51:5">if <condition pos:start="47:8" pos:end="47:45">(<expr pos:start="47:9" pos:end="47:44"><name pos:start="47:9" pos:end="47:24"><name pos:start="47:9" pos:end="47:14">client</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:24">nbdflags</name></name> <operator pos:start="47:26" pos:end="47:26">&amp;</operator> <name pos:start="47:28" pos:end="47:44">NBD_FLAG_SEND_FUA</name></expr>)</condition> <block pos:start="47:47" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:49">

        <expr_stmt pos:start="49:9" pos:end="49:49"><expr pos:start="49:9" pos:end="49:48"><name pos:start="49:9" pos:end="49:33"><name pos:start="49:9" pos:end="49:10">bs</name><operator pos:start="49:11" pos:end="49:12">-&gt;</operator><name pos:start="49:13" pos:end="49:33">supported_write_flags</name></name> <operator pos:start="49:35" pos:end="49:35">=</operator> <name pos:start="49:37" pos:end="49:48">BDRV_REQ_FUA</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:44"><expr pos:start="55:5" pos:end="55:43"><call pos:start="55:5" pos:end="55:43"><name pos:start="55:5" pos:end="55:22">qemu_co_mutex_init</name><argument_list pos:start="55:23" pos:end="55:43">(<argument pos:start="55:24" pos:end="55:42"><expr pos:start="55:24" pos:end="55:42"><operator pos:start="55:24" pos:end="55:24">&amp;</operator><name pos:start="55:25" pos:end="55:42"><name pos:start="55:25" pos:end="55:30">client</name><operator pos:start="55:31" pos:end="55:32">-&gt;</operator><name pos:start="55:33" pos:end="55:42">send_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:43"><expr pos:start="57:5" pos:end="57:42"><call pos:start="57:5" pos:end="57:42"><name pos:start="57:5" pos:end="57:22">qemu_co_mutex_init</name><argument_list pos:start="57:23" pos:end="57:42">(<argument pos:start="57:24" pos:end="57:41"><expr pos:start="57:24" pos:end="57:41"><operator pos:start="57:24" pos:end="57:24">&amp;</operator><name pos:start="57:25" pos:end="57:41"><name pos:start="57:25" pos:end="57:30">client</name><operator pos:start="57:31" pos:end="57:32">-&gt;</operator><name pos:start="57:33" pos:end="57:41">free_sema</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:24"><expr pos:start="59:5" pos:end="59:23"><name pos:start="59:5" pos:end="59:16"><name pos:start="59:5" pos:end="59:10">client</name><operator pos:start="59:11" pos:end="59:12">-&gt;</operator><name pos:start="59:13" pos:end="59:16">sioc</name></name> <operator pos:start="59:18" pos:end="59:18">=</operator> <name pos:start="59:20" pos:end="59:23">sioc</name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:37"><expr pos:start="61:5" pos:end="61:36"><call pos:start="61:5" pos:end="61:36"><name pos:start="61:5" pos:end="61:14">object_ref</name><argument_list pos:start="61:15" pos:end="61:36">(<argument pos:start="61:16" pos:end="61:35"><expr pos:start="61:16" pos:end="61:35"><call pos:start="61:16" pos:end="61:35"><name pos:start="61:16" pos:end="61:21">OBJECT</name><argument_list pos:start="61:22" pos:end="61:35">(<argument pos:start="61:23" pos:end="61:34"><expr pos:start="61:23" pos:end="61:34"><name pos:start="61:23" pos:end="61:34"><name pos:start="61:23" pos:end="61:28">client</name><operator pos:start="61:29" pos:end="61:30">-&gt;</operator><name pos:start="61:31" pos:end="61:34">sioc</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="65:5" pos:end="71:5"><if pos:start="65:5" pos:end="71:5">if <condition pos:start="65:8" pos:end="65:21">(<expr pos:start="65:9" pos:end="65:20"><operator pos:start="65:9" pos:end="65:9">!</operator><name pos:start="65:10" pos:end="65:20"><name pos:start="65:10" pos:end="65:15">client</name><operator pos:start="65:16" pos:end="65:17">-&gt;</operator><name pos:start="65:18" pos:end="65:20">ioc</name></name></expr>)</condition> <block pos:start="65:23" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:40">

        <expr_stmt pos:start="67:9" pos:end="67:40"><expr pos:start="67:9" pos:end="67:39"><name pos:start="67:9" pos:end="67:19"><name pos:start="67:9" pos:end="67:14">client</name><operator pos:start="67:15" pos:end="67:16">-&gt;</operator><name pos:start="67:17" pos:end="67:19">ioc</name></name> <operator pos:start="67:21" pos:end="67:21">=</operator> <call pos:start="67:23" pos:end="67:39"><name pos:start="67:23" pos:end="67:33">QIO_CHANNEL</name><argument_list pos:start="67:34" pos:end="67:39">(<argument pos:start="67:35" pos:end="67:38"><expr pos:start="67:35" pos:end="67:38"><name pos:start="67:35" pos:end="67:38">sioc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:40"><expr pos:start="69:9" pos:end="69:39"><call pos:start="69:9" pos:end="69:39"><name pos:start="69:9" pos:end="69:18">object_ref</name><argument_list pos:start="69:19" pos:end="69:39">(<argument pos:start="69:20" pos:end="69:38"><expr pos:start="69:20" pos:end="69:38"><call pos:start="69:20" pos:end="69:38"><name pos:start="69:20" pos:end="69:25">OBJECT</name><argument_list pos:start="69:26" pos:end="69:38">(<argument pos:start="69:27" pos:end="69:37"><expr pos:start="69:27" pos:end="69:37"><name pos:start="69:27" pos:end="69:37"><name pos:start="69:27" pos:end="69:32">client</name><operator pos:start="69:33" pos:end="69:34">-&gt;</operator><name pos:start="69:35" pos:end="69:37">ioc</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="75:5" pos:end="77:36">/* Now that we're connected, set the socket to be non-blocking and

     * kick the reply mechanism.  */</comment>

    <expr_stmt pos:start="79:5" pos:end="79:61"><expr pos:start="79:5" pos:end="79:60"><call pos:start="79:5" pos:end="79:60"><name pos:start="79:5" pos:end="79:28">qio_channel_set_blocking</name><argument_list pos:start="79:29" pos:end="79:60">(<argument pos:start="79:30" pos:end="79:46"><expr pos:start="79:30" pos:end="79:46"><call pos:start="79:30" pos:end="79:46"><name pos:start="79:30" pos:end="79:40">QIO_CHANNEL</name><argument_list pos:start="79:41" pos:end="79:46">(<argument pos:start="79:42" pos:end="79:45"><expr pos:start="79:42" pos:end="79:45"><name pos:start="79:42" pos:end="79:45">sioc</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="79:49" pos:end="79:53"><expr pos:start="79:49" pos:end="79:53"><name pos:start="79:49" pos:end="79:53">false</name></expr></argument>, <argument pos:start="79:56" pos:end="79:59"><expr pos:start="79:56" pos:end="79:59"><name pos:start="79:56" pos:end="79:59">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:64"><expr pos:start="83:5" pos:end="83:63"><call pos:start="83:5" pos:end="83:63"><name pos:start="83:5" pos:end="83:33">nbd_client_attach_aio_context</name><argument_list pos:start="83:34" pos:end="83:63">(<argument pos:start="83:35" pos:end="83:36"><expr pos:start="83:35" pos:end="83:36"><name pos:start="83:35" pos:end="83:36">bs</name></expr></argument>, <argument pos:start="83:39" pos:end="83:62"><expr pos:start="83:39" pos:end="83:62"><call pos:start="83:39" pos:end="83:62"><name pos:start="83:39" pos:end="83:58">bdrv_get_aio_context</name><argument_list pos:start="83:59" pos:end="83:62">(<argument pos:start="83:60" pos:end="83:61"><expr pos:start="83:60" pos:end="83:61"><name pos:start="83:60" pos:end="83:61">bs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:55"><expr pos:start="87:5" pos:end="87:54"><call pos:start="87:5" pos:end="87:54"><name pos:start="87:5" pos:end="87:10">logout</name><argument_list pos:start="87:11" pos:end="87:54">(<argument pos:start="87:12" pos:end="87:53"><expr pos:start="87:12" pos:end="87:53"><literal type="string" pos:start="87:12" pos:end="87:53">"Established connection with NBD server\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="89:5" pos:end="89:13">return <expr pos:start="89:12" pos:end="89:12"><literal type="number" pos:start="89:12" pos:end="89:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
