<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12841.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">kvm_get_xcrs</name><parameter_list pos:start="1:24" pos:end="1:38">(<parameter pos:start="1:25" pos:end="1:37"><decl pos:start="1:25" pos:end="1:37"><type pos:start="1:25" pos:end="1:34"><name pos:start="1:25" pos:end="1:32">CPUState</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="7:5" pos:end="46:0">

<cpp:ifdef pos:start="5:1" pos:end="5:19">#<cpp:directive pos:start="5:2" pos:end="5:6">ifdef</cpp:directive> <name pos:start="5:8" pos:end="5:19">KVM_CAP_XCRS</name></cpp:ifdef>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:14">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:19">kvm_xcrs</name></name></type> <name pos:start="9:21" pos:end="9:24">xcrs</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:17"><if pos:start="13:5" pos:end="15:17">if <condition pos:start="13:8" pos:end="13:24">(<expr pos:start="13:9" pos:end="13:23"><operator pos:start="13:9" pos:end="13:9">!</operator><call pos:start="13:10" pos:end="13:23"><name pos:start="13:10" pos:end="13:21">kvm_has_xcrs</name><argument_list pos:start="13:22" pos:end="13:23">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:17"><block_content pos:start="15:9" pos:end="15:17">

        <return pos:start="15:9" pos:end="15:17">return <expr pos:start="15:16" pos:end="15:16"><literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:51"><expr pos:start="19:5" pos:end="19:50"><name pos:start="19:5" pos:end="19:7">ret</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:50"><name pos:start="19:11" pos:end="19:24">kvm_vcpu_ioctl</name><argument_list pos:start="19:25" pos:end="19:50">(<argument pos:start="19:26" pos:end="19:28"><expr pos:start="19:26" pos:end="19:28"><name pos:start="19:26" pos:end="19:28">env</name></expr></argument>, <argument pos:start="19:31" pos:end="19:42"><expr pos:start="19:31" pos:end="19:42"><name pos:start="19:31" pos:end="19:42">KVM_GET_XCRS</name></expr></argument>, <argument pos:start="19:45" pos:end="19:49"><expr pos:start="19:45" pos:end="19:49"><operator pos:start="19:45" pos:end="19:45">&amp;</operator><name pos:start="19:46" pos:end="19:49">xcrs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:19"><if pos:start="21:5" pos:end="23:19">if <condition pos:start="21:8" pos:end="21:16">(<expr pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:11">ret</name> <operator pos:start="21:13" pos:end="21:13">&lt;</operator> <literal type="number" pos:start="21:15" pos:end="21:15">0</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:19"><block_content pos:start="23:9" pos:end="23:19">

        <return pos:start="23:9" pos:end="23:19">return <expr pos:start="23:16" pos:end="23:18"><name pos:start="23:16" pos:end="23:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="27:5" pos:end="37:9">for <control pos:start="27:9" pos:end="27:38">(<init pos:start="27:10" pos:end="27:15"><expr pos:start="27:10" pos:end="27:14"><name pos:start="27:10" pos:end="27:10">i</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>;</init> <condition pos:start="27:17" pos:end="27:33"><expr pos:start="27:17" pos:end="27:32"><name pos:start="27:17" pos:end="27:17">i</name> <operator pos:start="27:19" pos:end="27:19">&lt;</operator> <name pos:start="27:21" pos:end="27:32"><name pos:start="27:21" pos:end="27:24">xcrs</name><operator pos:start="27:25" pos:end="27:25">.</operator><name pos:start="27:26" pos:end="27:32">nr_xcrs</name></name></expr>;</condition> <incr pos:start="27:35" pos:end="27:37"><expr pos:start="27:35" pos:end="27:37"><name pos:start="27:35" pos:end="27:35">i</name><operator pos:start="27:36" pos:end="27:37">++</operator></expr></incr>)</control><block type="pseudo" pos:start="31:9" pos:end="37:9"><block_content pos:start="31:9" pos:end="37:9">

        <comment type="block" pos:start="29:9" pos:end="29:35">/* Only support xcr0 now */</comment>

        <if_stmt pos:start="31:9" pos:end="37:9"><if pos:start="31:9" pos:end="37:9">if <condition pos:start="31:12" pos:end="31:34">(<expr pos:start="31:13" pos:end="31:33"><name pos:start="31:13" pos:end="31:24"><name pos:start="31:13" pos:end="31:16">xcrs</name><operator pos:start="31:17" pos:end="31:17">.</operator><name pos:start="31:18" pos:end="31:21">xcrs</name><index pos:start="31:22" pos:end="31:24">[<expr pos:start="31:23" pos:end="31:23"><literal type="number" pos:start="31:23" pos:end="31:23">0</literal></expr>]</index></name><operator pos:start="31:25" pos:end="31:25">.</operator><name pos:start="31:26" pos:end="31:28">xcr</name> <operator pos:start="31:30" pos:end="31:31">==</operator> <literal type="number" pos:start="31:33" pos:end="31:33">0</literal></expr>)</condition> <block pos:start="31:36" pos:end="37:9">{<block_content pos:start="33:13" pos:end="35:18">

            <expr_stmt pos:start="33:13" pos:end="33:43"><expr pos:start="33:13" pos:end="33:42"><name pos:start="33:13" pos:end="33:21"><name pos:start="33:13" pos:end="33:15">env</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:21">xcr0</name></name> <operator pos:start="33:23" pos:end="33:23">=</operator> <name pos:start="33:25" pos:end="33:36"><name pos:start="33:25" pos:end="33:28">xcrs</name><operator pos:start="33:29" pos:end="33:29">.</operator><name pos:start="33:30" pos:end="33:33">xcrs</name><index pos:start="33:34" pos:end="33:36">[<expr pos:start="33:35" pos:end="33:35"><literal type="number" pos:start="33:35" pos:end="33:35">0</literal></expr>]</index></name><operator pos:start="33:37" pos:end="33:37">.</operator><name pos:start="33:38" pos:end="33:42">value</name></expr>;</expr_stmt>

            <break pos:start="35:13" pos:end="35:18">break;</break>

        </block_content>}</block></if></if_stmt></block_content></block></for>

    <return pos:start="39:5" pos:end="42:0">return <expr pos:start="39:12" pos:end="39:12"><literal type="number" pos:start="39:12" pos:end="39:12">0</literal></expr>;</return>

<cpp:else pos:start="41:1" pos:end="41:5">#<cpp:directive pos:start="41:2" pos:end="41:5">else</cpp:directive></cpp:else>

    <return pos:start="43:5" pos:end="46:0">return <expr pos:start="43:12" pos:end="43:12"><literal type="number" pos:start="43:12" pos:end="43:12">0</literal></expr>;</return>

<cpp:endif pos:start="45:1" pos:end="45:6">#<cpp:directive pos:start="45:2" pos:end="45:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
