<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11480.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">read_const_block_data</name><parameter_list pos:start="1:34" pos:end="1:71">(<parameter pos:start="1:35" pos:end="1:52"><decl pos:start="1:35" pos:end="1:52"><type pos:start="1:35" pos:end="1:52"><name pos:start="1:35" pos:end="1:47">ALSDecContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:52">ctx</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:70"><decl pos:start="1:55" pos:end="1:70"><type pos:start="1:55" pos:end="1:70"><name pos:start="1:55" pos:end="1:66">ALSBlockData</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:70">bd</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:25">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21">ALSSpecificConfig</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:28">sconf</name> <init pos:start="5:30" pos:end="5:42">= <expr pos:start="5:32" pos:end="5:42"><operator pos:start="5:32" pos:end="5:32">&amp;</operator><name pos:start="5:33" pos:end="5:42"><name pos:start="5:33" pos:end="5:35">ctx</name><operator pos:start="5:36" pos:end="5:37">-&gt;</operator><name pos:start="5:38" pos:end="5:42">sconf</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">AVCodecContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:25">avctx</name>    <init pos:start="7:30" pos:end="7:41">= <expr pos:start="7:32" pos:end="7:41"><name pos:start="7:32" pos:end="7:41"><name pos:start="7:32" pos:end="7:34">ctx</name><operator pos:start="7:35" pos:end="7:36">-&gt;</operator><name pos:start="7:37" pos:end="7:41">avctx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:40"><decl pos:start="9:5" pos:end="9:39"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">GetBitContext</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:21">gb</name>        <init pos:start="9:30" pos:end="9:39">= <expr pos:start="9:32" pos:end="9:39"><operator pos:start="9:32" pos:end="9:32">&amp;</operator><name pos:start="9:33" pos:end="9:39"><name pos:start="9:33" pos:end="9:35">ctx</name><operator pos:start="9:36" pos:end="9:37">-&gt;</operator><name pos:start="9:38" pos:end="9:39">gb</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:25"><expr pos:start="13:5" pos:end="13:24"><operator pos:start="13:5" pos:end="13:5">*</operator><name pos:start="13:6" pos:end="13:20"><name pos:start="13:6" pos:end="13:7">bd</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:20">raw_samples</name></name> <operator pos:start="13:22" pos:end="13:22">=</operator> <literal type="number" pos:start="13:24" pos:end="13:24">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:37"><expr pos:start="15:5" pos:end="15:36"><operator pos:start="15:5" pos:end="15:5">*</operator><name pos:start="15:6" pos:end="15:20"><name pos:start="15:6" pos:end="15:7">bd</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:20">const_block</name></name> <operator pos:start="15:22" pos:end="15:22">=</operator> <call pos:start="15:24" pos:end="15:36"><name pos:start="15:24" pos:end="15:32">get_bits1</name><argument_list pos:start="15:33" pos:end="15:36">(<argument pos:start="15:34" pos:end="15:35"><expr pos:start="15:34" pos:end="15:35"><name pos:start="15:34" pos:end="15:35">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <comment type="line" pos:start="15:42" pos:end="15:88">// 1 = constant value, 0 = zero block (silence)</comment>

    <expr_stmt pos:start="17:5" pos:end="17:37"><expr pos:start="17:5" pos:end="17:36"><name pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:6">bd</name><operator pos:start="17:7" pos:end="17:8">-&gt;</operator><name pos:start="17:9" pos:end="17:17">js_blocks</name></name>    <operator pos:start="17:22" pos:end="17:22">=</operator> <call pos:start="17:24" pos:end="17:36"><name pos:start="17:24" pos:end="17:32">get_bits1</name><argument_list pos:start="17:33" pos:end="17:36">(<argument pos:start="17:34" pos:end="17:35"><expr pos:start="17:34" pos:end="17:35"><name pos:start="17:34" pos:end="17:35">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="21:5" pos:end="21:27">// skip 5 reserved bits</comment>

    <expr_stmt pos:start="23:5" pos:end="23:21"><expr pos:start="23:5" pos:end="23:20"><call pos:start="23:5" pos:end="23:20"><name pos:start="23:5" pos:end="23:13">skip_bits</name><argument_list pos:start="23:14" pos:end="23:20">(<argument pos:start="23:15" pos:end="23:16"><expr pos:start="23:15" pos:end="23:16"><name pos:start="23:15" pos:end="23:16">gb</name></expr></argument>, <argument pos:start="23:19" pos:end="23:19"><expr pos:start="23:19" pos:end="23:19"><literal type="number" pos:start="23:19" pos:end="23:19">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:25">(<expr pos:start="27:9" pos:end="27:24"><operator pos:start="27:9" pos:end="27:9">*</operator><name pos:start="27:10" pos:end="27:24"><name pos:start="27:10" pos:end="27:11">bd</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:24">const_block</name></name></expr>)</condition> <block pos:start="27:27" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:62">

        <decl_stmt pos:start="29:9" pos:end="29:88"><decl pos:start="29:9" pos:end="29:87"><type pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:16">unsigned</name> <name pos:start="29:18" pos:end="29:20">int</name></type> <name pos:start="29:22" pos:end="29:35">const_val_bits</name> <init pos:start="29:37" pos:end="29:87">= <expr pos:start="29:39" pos:end="29:87"><ternary pos:start="29:39" pos:end="29:87"><condition pos:start="29:39" pos:end="29:55"><expr pos:start="29:39" pos:end="29:53"><name pos:start="29:39" pos:end="29:53"><name pos:start="29:39" pos:end="29:43">sconf</name><operator pos:start="29:44" pos:end="29:45">-&gt;</operator><name pos:start="29:46" pos:end="29:53">floating</name></name></expr> ?</condition><then pos:start="29:57" pos:end="29:58"> <expr pos:start="29:57" pos:end="29:58"><literal type="number" pos:start="29:57" pos:end="29:58">24</literal></expr> </then><else pos:start="29:60" pos:end="29:87">: <expr pos:start="29:62" pos:end="29:87"><name pos:start="29:62" pos:end="29:87"><name pos:start="29:62" pos:end="29:66">avctx</name><operator pos:start="29:67" pos:end="29:68">-&gt;</operator><name pos:start="29:69" pos:end="29:87">bits_per_raw_sample</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:62"><expr pos:start="31:9" pos:end="31:61"><operator pos:start="31:9" pos:end="31:9">*</operator><name pos:start="31:10" pos:end="31:24"><name pos:start="31:10" pos:end="31:11">bd</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:24">raw_samples</name></name> <operator pos:start="31:26" pos:end="31:26">=</operator> <call pos:start="31:28" pos:end="31:61"><name pos:start="31:28" pos:end="31:41">get_sbits_long</name><argument_list pos:start="31:42" pos:end="31:61">(<argument pos:start="31:43" pos:end="31:44"><expr pos:start="31:43" pos:end="31:44"><name pos:start="31:43" pos:end="31:44">gb</name></expr></argument>, <argument pos:start="31:47" pos:end="31:60"><expr pos:start="31:47" pos:end="31:60"><name pos:start="31:47" pos:end="31:60">const_val_bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="37:5" pos:end="37:59">// ensure constant block decoding by reusing this field</comment>

    <expr_stmt pos:start="39:5" pos:end="39:25"><expr pos:start="39:5" pos:end="39:24"><operator pos:start="39:5" pos:end="39:5">*</operator><name pos:start="39:6" pos:end="39:20"><name pos:start="39:6" pos:end="39:7">bd</name><operator pos:start="39:8" pos:end="39:9">-&gt;</operator><name pos:start="39:10" pos:end="39:20">const_block</name></name> <operator pos:start="39:22" pos:end="39:22">=</operator> <literal type="number" pos:start="39:24" pos:end="39:24">1</literal></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
