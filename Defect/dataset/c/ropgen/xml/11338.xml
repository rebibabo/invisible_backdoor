<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11338.c" pos:tabs="8"><function pos:start="1:1" pos:end="345:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">iec61883_read_header</name><parameter_list pos:start="1:32" pos:end="1:57">(<parameter pos:start="1:33" pos:end="1:56"><decl pos:start="1:33" pos:end="1:56"><type pos:start="1:33" pos:end="1:49"><name pos:start="1:33" pos:end="1:47">AVFormatContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:56">context</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="345:1">{<block_content pos:start="5:5" pos:end="343:24">

    <decl_stmt pos:start="5:5" pos:end="5:50"><decl pos:start="5:5" pos:end="5:49"><type pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:24">iec61883_data</name></name> <modifier pos:start="5:26" pos:end="5:26">*</modifier></type><name pos:start="5:27" pos:end="5:28">dv</name> <init pos:start="5:30" pos:end="5:49">= <expr pos:start="5:32" pos:end="5:49"><name pos:start="5:32" pos:end="5:49"><name pos:start="5:32" pos:end="5:38">context</name><operator pos:start="5:39" pos:end="5:40">-&gt;</operator><name pos:start="5:41" pos:end="5:49">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:27">raw1394_portinfo</name></name></type> <name pos:start="7:29" pos:end="7:36"><name pos:start="7:29" pos:end="7:32">pinf</name><index pos:start="7:33" pos:end="7:36">[<expr pos:start="7:34" pos:end="7:35"><literal type="number" pos:start="7:34" pos:end="7:35">16</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:21">rom1394_directory</name></type> <name pos:start="9:23" pos:end="9:29">rom_dir</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:16">endptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:14">inport</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:16">nb_ports</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:18"><decl pos:start="17:5" pos:end="17:17"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:12">port</name> <init pos:start="17:14" pos:end="17:17">= <expr pos:start="17:16" pos:end="17:17"><operator pos:start="17:16" pos:end="17:16">-</operator><literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:17"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:16">response</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:17"><decl pos:start="21:5" pos:end="21:9"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:9">i</name></decl>, <decl pos:start="21:12" pos:end="21:16"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:12" pos:end="21:12">j</name> <init pos:start="21:14" pos:end="21:16">= <expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:22"><decl pos:start="23:5" pos:end="23:21"><type pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:12">uint64_t</name></type> <name pos:start="23:14" pos:end="23:17">guid</name> <init pos:start="23:19" pos:end="23:21">= <expr pos:start="23:21" pos:end="23:21"><literal type="number" pos:start="23:21" pos:end="23:21">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:24"><expr pos:start="27:5" pos:end="27:23"><name pos:start="27:5" pos:end="27:18"><name pos:start="27:5" pos:end="27:6">dv</name><operator pos:start="27:7" pos:end="27:8">-&gt;</operator><name pos:start="27:9" pos:end="27:18">input_port</name></name> <operator pos:start="27:20" pos:end="27:20">=</operator> <operator pos:start="27:22" pos:end="27:22">-</operator><literal type="number" pos:start="27:23" pos:end="27:23">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:25"><expr pos:start="29:5" pos:end="29:24"><name pos:start="29:5" pos:end="29:19"><name pos:start="29:5" pos:end="29:6">dv</name><operator pos:start="29:7" pos:end="29:8">-&gt;</operator><name pos:start="29:9" pos:end="29:19">output_port</name></name> <operator pos:start="29:21" pos:end="29:21">=</operator> <operator pos:start="29:23" pos:end="29:23">-</operator><literal type="number" pos:start="29:24" pos:end="29:24">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:21"><expr pos:start="31:5" pos:end="31:20"><name pos:start="31:5" pos:end="31:15"><name pos:start="31:5" pos:end="31:6">dv</name><operator pos:start="31:7" pos:end="31:8">-&gt;</operator><name pos:start="31:9" pos:end="31:15">channel</name></name> <operator pos:start="31:17" pos:end="31:17">=</operator> <operator pos:start="31:19" pos:end="31:19">-</operator><literal type="number" pos:start="31:20" pos:end="31:20">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:39"><expr pos:start="35:5" pos:end="35:38"><name pos:start="35:5" pos:end="35:15"><name pos:start="35:5" pos:end="35:6">dv</name><operator pos:start="35:7" pos:end="35:8">-&gt;</operator><name pos:start="35:9" pos:end="35:15">raw1394</name></name> <operator pos:start="35:17" pos:end="35:17">=</operator> <call pos:start="35:19" pos:end="35:38"><name pos:start="35:19" pos:end="35:36">raw1394_new_handle</name><argument_list pos:start="35:37" pos:end="35:38">()</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="39:5" pos:end="45:5"><if pos:start="39:5" pos:end="45:5">if <condition pos:start="39:8" pos:end="39:21">(<expr pos:start="39:9" pos:end="39:20"><operator pos:start="39:9" pos:end="39:9">!</operator><name pos:start="39:10" pos:end="39:20"><name pos:start="39:10" pos:end="39:11">dv</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:20">raw1394</name></name></expr>)</condition> <block pos:start="39:23" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:28">

        <expr_stmt pos:start="41:9" pos:end="41:78"><expr pos:start="41:9" pos:end="41:77"><call pos:start="41:9" pos:end="41:77"><name pos:start="41:9" pos:end="41:14">av_log</name><argument_list pos:start="41:15" pos:end="41:77">(<argument pos:start="41:16" pos:end="41:22"><expr pos:start="41:16" pos:end="41:22"><name pos:start="41:16" pos:end="41:22">context</name></expr></argument>, <argument pos:start="41:25" pos:end="41:36"><expr pos:start="41:25" pos:end="41:36"><name pos:start="41:25" pos:end="41:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="41:39" pos:end="41:76"><expr pos:start="41:39" pos:end="41:76"><literal type="string" pos:start="41:39" pos:end="41:76">"Failed to open IEEE1394 interface.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:28">return <expr pos:start="43:16" pos:end="43:27"><call pos:start="43:16" pos:end="43:27"><name pos:start="43:16" pos:end="43:22">AVERROR</name><argument_list pos:start="43:23" pos:end="43:27">(<argument pos:start="43:24" pos:end="43:26"><expr pos:start="43:24" pos:end="43:26"><name pos:start="43:24" pos:end="43:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:70">(<expr pos:start="49:9" pos:end="49:69"><operator pos:start="49:9" pos:end="49:9">(</operator><name pos:start="49:10" pos:end="49:17">nb_ports</name> <operator pos:start="49:19" pos:end="49:19">=</operator> <call pos:start="49:21" pos:end="49:64"><name pos:start="49:21" pos:end="49:41">raw1394_get_port_info</name><argument_list pos:start="49:42" pos:end="49:64">(<argument pos:start="49:43" pos:end="49:53"><expr pos:start="49:43" pos:end="49:53"><name pos:start="49:43" pos:end="49:53"><name pos:start="49:43" pos:end="49:44">dv</name><operator pos:start="49:45" pos:end="49:46">-&gt;</operator><name pos:start="49:47" pos:end="49:53">raw1394</name></name></expr></argument>, <argument pos:start="49:56" pos:end="49:59"><expr pos:start="49:56" pos:end="49:59"><name pos:start="49:56" pos:end="49:59">pinf</name></expr></argument>, <argument pos:start="49:62" pos:end="49:63"><expr pos:start="49:62" pos:end="49:63"><literal type="number" pos:start="49:62" pos:end="49:63">16</literal></expr></argument>)</argument_list></call><operator pos:start="49:65" pos:end="49:65">)</operator> <operator pos:start="49:67" pos:end="49:67">&lt;</operator> <literal type="number" pos:start="49:69" pos:end="49:69">0</literal></expr>)</condition> <block pos:start="49:72" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:18">

        <expr_stmt pos:start="51:9" pos:end="51:83"><expr pos:start="51:9" pos:end="51:82"><call pos:start="51:9" pos:end="51:82"><name pos:start="51:9" pos:end="51:14">av_log</name><argument_list pos:start="51:15" pos:end="51:82">(<argument pos:start="51:16" pos:end="51:22"><expr pos:start="51:16" pos:end="51:22"><name pos:start="51:16" pos:end="51:22">context</name></expr></argument>, <argument pos:start="51:25" pos:end="51:36"><expr pos:start="51:25" pos:end="51:36"><name pos:start="51:25" pos:end="51:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="51:39" pos:end="51:81"><expr pos:start="51:39" pos:end="51:81"><literal type="string" pos:start="51:39" pos:end="51:81">"Failed to get number of IEEE1394 ports.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="53:9" pos:end="53:18">goto <name pos:start="53:14" pos:end="53:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:52"><expr pos:start="59:5" pos:end="59:51"><name pos:start="59:5" pos:end="59:10">inport</name> <operator pos:start="59:12" pos:end="59:12">=</operator> <call pos:start="59:14" pos:end="59:51"><name pos:start="59:14" pos:end="59:19">strtol</name><argument_list pos:start="59:20" pos:end="59:51">(<argument pos:start="59:21" pos:end="59:37"><expr pos:start="59:21" pos:end="59:37"><name pos:start="59:21" pos:end="59:37"><name pos:start="59:21" pos:end="59:27">context</name><operator pos:start="59:28" pos:end="59:29">-&gt;</operator><name pos:start="59:30" pos:end="59:37">filename</name></name></expr></argument>, <argument pos:start="59:40" pos:end="59:46"><expr pos:start="59:40" pos:end="59:46"><operator pos:start="59:40" pos:end="59:40">&amp;</operator><name pos:start="59:41" pos:end="59:46">endptr</name></expr></argument>, <argument pos:start="59:49" pos:end="59:50"><expr pos:start="59:49" pos:end="59:50"><literal type="number" pos:start="59:49" pos:end="59:50">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="77:5"><if pos:start="61:5" pos:end="69:5">if <condition pos:start="61:8" pos:end="61:55">(<expr pos:start="61:9" pos:end="61:54"><name pos:start="61:9" pos:end="61:14">endptr</name> <operator pos:start="61:16" pos:end="61:17">!=</operator> <name pos:start="61:19" pos:end="61:35"><name pos:start="61:19" pos:end="61:25">context</name><operator pos:start="61:26" pos:end="61:27">-&gt;</operator><name pos:start="61:28" pos:end="61:35">filename</name></name> <operator pos:start="61:37" pos:end="61:38">&amp;&amp;</operator> <operator pos:start="61:40" pos:end="61:40">*</operator><name pos:start="61:41" pos:end="61:46">endptr</name> <operator pos:start="61:48" pos:end="61:49">==</operator> <literal type="char" pos:start="61:51" pos:end="61:54">'\0'</literal></expr>)</condition> <block pos:start="61:57" pos:end="69:5">{<block_content pos:start="63:9" pos:end="67:30">

        <expr_stmt pos:start="63:9" pos:end="63:78"><expr pos:start="63:9" pos:end="63:77"><call pos:start="63:9" pos:end="63:77"><name pos:start="63:9" pos:end="63:14">av_log</name><argument_list pos:start="63:15" pos:end="63:77">(<argument pos:start="63:16" pos:end="63:22"><expr pos:start="63:16" pos:end="63:22"><name pos:start="63:16" pos:end="63:22">context</name></expr></argument>, <argument pos:start="63:25" pos:end="63:35"><expr pos:start="63:25" pos:end="63:35"><name pos:start="63:25" pos:end="63:35">AV_LOG_INFO</name></expr></argument>, <argument pos:start="63:38" pos:end="63:68"><expr pos:start="63:38" pos:end="63:68"><literal type="string" pos:start="63:38" pos:end="63:68">"Selecting IEEE1394 port: %d\n"</literal></expr></argument>, <argument pos:start="63:71" pos:end="63:76"><expr pos:start="63:71" pos:end="63:76"><name pos:start="63:71" pos:end="63:76">inport</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:19"><expr pos:start="65:9" pos:end="65:18"><name pos:start="65:9" pos:end="65:9">j</name> <operator pos:start="65:11" pos:end="65:11">=</operator> <name pos:start="65:13" pos:end="65:18">inport</name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:30"><expr pos:start="67:9" pos:end="67:29"><name pos:start="67:9" pos:end="67:16">nb_ports</name> <operator pos:start="67:18" pos:end="67:18">=</operator> <name pos:start="67:20" pos:end="67:25">inport</name> <operator pos:start="67:27" pos:end="67:27">+</operator> <literal type="number" pos:start="67:29" pos:end="67:29">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="69:7" pos:end="77:5">else if <condition pos:start="69:15" pos:end="69:49">(<expr pos:start="69:16" pos:end="69:48"><call pos:start="69:16" pos:end="69:48"><name pos:start="69:16" pos:end="69:21">strcmp</name><argument_list pos:start="69:22" pos:end="69:48">(<argument pos:start="69:23" pos:end="69:39"><expr pos:start="69:23" pos:end="69:39"><name pos:start="69:23" pos:end="69:39"><name pos:start="69:23" pos:end="69:29">context</name><operator pos:start="69:30" pos:end="69:31">-&gt;</operator><name pos:start="69:32" pos:end="69:39">filename</name></name></expr></argument>, <argument pos:start="69:42" pos:end="69:47"><expr pos:start="69:42" pos:end="69:47"><literal type="string" pos:start="69:42" pos:end="69:47">"auto"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="69:51" pos:end="77:5">{<block_content pos:start="71:9" pos:end="75:18">

        <expr_stmt pos:start="71:9" pos:end="73:88"><expr pos:start="71:9" pos:end="73:87"><call pos:start="71:9" pos:end="73:87"><name pos:start="71:9" pos:end="71:14">av_log</name><argument_list pos:start="71:15" pos:end="73:87">(<argument pos:start="71:16" pos:end="71:22"><expr pos:start="71:16" pos:end="71:22"><name pos:start="71:16" pos:end="71:22">context</name></expr></argument>, <argument pos:start="71:25" pos:end="71:36"><expr pos:start="71:25" pos:end="71:36"><name pos:start="71:25" pos:end="71:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="71:39" pos:end="73:67"><expr pos:start="71:39" pos:end="73:67"><literal type="string" pos:start="71:39" pos:end="71:81">"Invalid input \"%s\", you should specify "</literal>

               <literal type="string" pos:start="73:16" pos:end="73:67">"\"auto\" for auto-detection, or the port number.\n"</literal></expr></argument>, <argument pos:start="73:70" pos:end="73:86"><expr pos:start="73:70" pos:end="73:86"><name pos:start="73:70" pos:end="73:86"><name pos:start="73:70" pos:end="73:76">context</name><operator pos:start="73:77" pos:end="73:78">-&gt;</operator><name pos:start="73:79" pos:end="73:86">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="75:9" pos:end="75:18">goto <name pos:start="75:14" pos:end="75:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="81:5" pos:end="93:5"><if pos:start="81:5" pos:end="93:5">if <condition pos:start="81:8" pos:end="81:24">(<expr pos:start="81:9" pos:end="81:23"><name pos:start="81:9" pos:end="81:23"><name pos:start="81:9" pos:end="81:10">dv</name><operator pos:start="81:11" pos:end="81:12">-&gt;</operator><name pos:start="81:13" pos:end="81:23">device_guid</name></name></expr>)</condition> <block pos:start="81:26" pos:end="93:5">{<block_content pos:start="83:9" pos:end="91:9">

        <if_stmt pos:start="83:9" pos:end="91:9"><if pos:start="83:9" pos:end="91:9">if <condition pos:start="83:12" pos:end="83:82">(<expr pos:start="83:13" pos:end="83:81"><call pos:start="83:13" pos:end="83:76"><name pos:start="83:13" pos:end="83:18">sscanf</name><argument_list pos:start="83:19" pos:end="83:76">(<argument pos:start="83:20" pos:end="83:34"><expr pos:start="83:20" pos:end="83:34"><name pos:start="83:20" pos:end="83:34"><name pos:start="83:20" pos:end="83:21">dv</name><operator pos:start="83:22" pos:end="83:23">-&gt;</operator><name pos:start="83:24" pos:end="83:34">device_guid</name></name></expr></argument>, <argument pos:start="83:37" pos:end="83:42"><expr pos:start="83:37" pos:end="83:42"><literal type="string" pos:start="83:37" pos:end="83:42">"%llx"</literal></expr></argument>, <argument pos:start="83:45" pos:end="83:75"><expr pos:start="83:45" pos:end="83:75"><operator pos:start="83:45" pos:end="83:45">(</operator><name pos:start="83:46" pos:end="83:49">long</name> <name pos:start="83:51" pos:end="83:54">long</name> <name pos:start="83:56" pos:end="83:63">unsigned</name> <name pos:start="83:65" pos:end="83:67">int</name> <operator pos:start="83:69" pos:end="83:69">*</operator><operator pos:start="83:70" pos:end="83:70">)</operator><operator pos:start="83:71" pos:end="83:71">&amp;</operator><name pos:start="83:72" pos:end="83:75">guid</name></expr></argument>)</argument_list></call> <operator pos:start="83:78" pos:end="83:79">!=</operator> <literal type="number" pos:start="83:81" pos:end="83:81">1</literal></expr>)</condition> <block pos:start="83:84" pos:end="91:9">{<block_content pos:start="85:13" pos:end="89:22">

            <expr_stmt pos:start="85:13" pos:end="87:36"><expr pos:start="85:13" pos:end="87:35"><call pos:start="85:13" pos:end="87:35"><name pos:start="85:13" pos:end="85:18">av_log</name><argument_list pos:start="85:19" pos:end="87:35">(<argument pos:start="85:20" pos:end="85:26"><expr pos:start="85:20" pos:end="85:26"><name pos:start="85:20" pos:end="85:26">context</name></expr></argument>, <argument pos:start="85:29" pos:end="85:39"><expr pos:start="85:29" pos:end="85:39"><name pos:start="85:29" pos:end="85:39">AV_LOG_INFO</name></expr></argument>, <argument pos:start="85:42" pos:end="85:73"><expr pos:start="85:42" pos:end="85:73"><literal type="string" pos:start="85:42" pos:end="85:73">"Invalid dvguid parameter: %s\n"</literal></expr></argument>,

                   <argument pos:start="87:20" pos:end="87:34"><expr pos:start="87:20" pos:end="87:34"><name pos:start="87:20" pos:end="87:34"><name pos:start="87:20" pos:end="87:21">dv</name><operator pos:start="87:22" pos:end="87:23">-&gt;</operator><name pos:start="87:24" pos:end="87:34">device_guid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="89:13" pos:end="89:22">goto <name pos:start="89:18" pos:end="89:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="97:5" pos:end="167:5">for <control pos:start="97:9" pos:end="97:41">(<init pos:start="97:10" pos:end="97:10">;</init> <condition pos:start="97:12" pos:end="97:36"><expr pos:start="97:12" pos:end="97:35"><name pos:start="97:12" pos:end="97:12">j</name> <operator pos:start="97:14" pos:end="97:14">&lt;</operator> <name pos:start="97:16" pos:end="97:23">nb_ports</name> <operator pos:start="97:25" pos:end="97:26">&amp;&amp;</operator> <name pos:start="97:28" pos:end="97:31">port</name><operator pos:start="97:32" pos:end="97:33">==</operator><operator pos:start="97:34" pos:end="97:34">-</operator><literal type="number" pos:start="97:35" pos:end="97:35">1</literal></expr>;</condition> <incr pos:start="97:38" pos:end="97:40"><expr pos:start="97:38" pos:end="97:40"><operator pos:start="97:38" pos:end="97:39">++</operator><name pos:start="97:40" pos:end="97:40">j</name></expr></incr>)</control> <block pos:start="97:43" pos:end="167:5">{<block_content pos:start="99:9" pos:end="165:9">

        <expr_stmt pos:start="99:9" pos:end="99:44"><expr pos:start="99:9" pos:end="99:43"><call pos:start="99:9" pos:end="99:43"><name pos:start="99:9" pos:end="99:30">raw1394_destroy_handle</name><argument_list pos:start="99:31" pos:end="99:43">(<argument pos:start="99:32" pos:end="99:42"><expr pos:start="99:32" pos:end="99:42"><name pos:start="99:32" pos:end="99:42"><name pos:start="99:32" pos:end="99:33">dv</name><operator pos:start="99:34" pos:end="99:35">-&gt;</operator><name pos:start="99:36" pos:end="99:42">raw1394</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="103:9" pos:end="109:9"><if pos:start="103:9" pos:end="109:9">if <condition pos:start="103:12" pos:end="103:59">(<expr pos:start="103:13" pos:end="103:58"><operator pos:start="103:13" pos:end="103:13">!</operator><operator pos:start="103:14" pos:end="103:14">(</operator><name pos:start="103:15" pos:end="103:25"><name pos:start="103:15" pos:end="103:16">dv</name><operator pos:start="103:17" pos:end="103:18">-&gt;</operator><name pos:start="103:19" pos:end="103:25">raw1394</name></name> <operator pos:start="103:27" pos:end="103:27">=</operator> <call pos:start="103:29" pos:end="103:57"><name pos:start="103:29" pos:end="103:54">raw1394_new_handle_on_port</name><argument_list pos:start="103:55" pos:end="103:57">(<argument pos:start="103:56" pos:end="103:56"><expr pos:start="103:56" pos:end="103:56"><name pos:start="103:56" pos:end="103:56">j</name></expr></argument>)</argument_list></call><operator pos:start="103:58" pos:end="103:58">)</operator></expr>)</condition> <block pos:start="103:61" pos:end="109:9">{<block_content pos:start="105:13" pos:end="107:22">

            <expr_stmt pos:start="105:13" pos:end="105:77"><expr pos:start="105:13" pos:end="105:76"><call pos:start="105:13" pos:end="105:76"><name pos:start="105:13" pos:end="105:18">av_log</name><argument_list pos:start="105:19" pos:end="105:76">(<argument pos:start="105:20" pos:end="105:26"><expr pos:start="105:20" pos:end="105:26"><name pos:start="105:20" pos:end="105:26">context</name></expr></argument>, <argument pos:start="105:29" pos:end="105:40"><expr pos:start="105:29" pos:end="105:40"><name pos:start="105:29" pos:end="105:40">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="105:43" pos:end="105:75"><expr pos:start="105:43" pos:end="105:75"><literal type="string" pos:start="105:43" pos:end="105:75">"Failed setting IEEE1394 port.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="107:13" pos:end="107:22">goto <name pos:start="107:18" pos:end="107:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <for pos:start="113:9" pos:end="165:9">for <control pos:start="113:13" pos:end="113:60">(<init pos:start="113:14" pos:end="113:17"><expr pos:start="113:14" pos:end="113:16"><name pos:start="113:14" pos:end="113:14">i</name><operator pos:start="113:15" pos:end="113:15">=</operator><literal type="number" pos:start="113:16" pos:end="113:16">0</literal></expr>;</init> <condition pos:start="113:19" pos:end="113:55"><expr pos:start="113:19" pos:end="113:54"><name pos:start="113:19" pos:end="113:19">i</name><operator pos:start="113:20" pos:end="113:20">&lt;</operator><call pos:start="113:21" pos:end="113:54"><name pos:start="113:21" pos:end="113:41">raw1394_get_nodecount</name><argument_list pos:start="113:42" pos:end="113:54">(<argument pos:start="113:43" pos:end="113:53"><expr pos:start="113:43" pos:end="113:53"><name pos:start="113:43" pos:end="113:53"><name pos:start="113:43" pos:end="113:44">dv</name><operator pos:start="113:45" pos:end="113:46">-&gt;</operator><name pos:start="113:47" pos:end="113:53">raw1394</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="113:57" pos:end="113:59"><expr pos:start="113:57" pos:end="113:59"><operator pos:start="113:57" pos:end="113:58">++</operator><name pos:start="113:59" pos:end="113:59">i</name></expr></incr>)</control> <block pos:start="113:62" pos:end="165:9">{<block_content pos:start="121:13" pos:end="163:13">



            <comment type="block" pos:start="117:13" pos:end="117:50">/* Select device explicitly by GUID */</comment>



            <if_stmt pos:start="121:13" pos:end="163:13"><if pos:start="121:13" pos:end="133:13">if <condition pos:start="121:16" pos:end="121:25">(<expr pos:start="121:17" pos:end="121:24"><name pos:start="121:17" pos:end="121:20">guid</name> <operator pos:start="121:22" pos:end="121:22">&gt;</operator> <literal type="number" pos:start="121:24" pos:end="121:24">1</literal></expr>)</condition> <block pos:start="121:27" pos:end="133:13">{<block_content pos:start="123:17" pos:end="131:17">

                <if_stmt pos:start="123:17" pos:end="131:17"><if pos:start="123:17" pos:end="131:17">if <condition pos:start="123:20" pos:end="123:61">(<expr pos:start="123:21" pos:end="123:60"><name pos:start="123:21" pos:end="123:24">guid</name> <operator pos:start="123:26" pos:end="123:27">==</operator> <call pos:start="123:29" pos:end="123:60"><name pos:start="123:29" pos:end="123:44">rom1394_get_guid</name><argument_list pos:start="123:45" pos:end="123:60">(<argument pos:start="123:46" pos:end="123:56"><expr pos:start="123:46" pos:end="123:56"><name pos:start="123:46" pos:end="123:56"><name pos:start="123:46" pos:end="123:47">dv</name><operator pos:start="123:48" pos:end="123:49">-&gt;</operator><name pos:start="123:50" pos:end="123:56">raw1394</name></name></expr></argument>, <argument pos:start="123:59" pos:end="123:59"><expr pos:start="123:59" pos:end="123:59"><name pos:start="123:59" pos:end="123:59">i</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="123:63" pos:end="131:17">{<block_content pos:start="125:21" pos:end="129:26">

                    <expr_stmt pos:start="125:21" pos:end="125:33"><expr pos:start="125:21" pos:end="125:32"><name pos:start="125:21" pos:end="125:28"><name pos:start="125:21" pos:end="125:22">dv</name><operator pos:start="125:23" pos:end="125:24">-&gt;</operator><name pos:start="125:25" pos:end="125:28">node</name></name> <operator pos:start="125:30" pos:end="125:30">=</operator> <name pos:start="125:32" pos:end="125:32">i</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="127:21" pos:end="127:29"><expr pos:start="127:21" pos:end="127:28"><name pos:start="127:21" pos:end="127:24">port</name> <operator pos:start="127:26" pos:end="127:26">=</operator> <name pos:start="127:28" pos:end="127:28">j</name></expr>;</expr_stmt>

                    <break pos:start="129:21" pos:end="129:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="133:15" pos:end="163:13">else <block pos:start="133:20" pos:end="163:13">{<block_content pos:start="141:17" pos:end="161:49">



                <comment type="block" pos:start="137:17" pos:end="137:65">/* Select first AV/C tape recorder player node */</comment>



                <if_stmt pos:start="141:17" pos:end="143:29"><if pos:start="141:17" pos:end="143:29">if <condition pos:start="141:20" pos:end="141:72">(<expr pos:start="141:21" pos:end="141:71"><call pos:start="141:21" pos:end="141:67"><name pos:start="141:21" pos:end="141:41">rom1394_get_directory</name><argument_list pos:start="141:42" pos:end="141:67">(<argument pos:start="141:43" pos:end="141:53"><expr pos:start="141:43" pos:end="141:53"><name pos:start="141:43" pos:end="141:53"><name pos:start="141:43" pos:end="141:44">dv</name><operator pos:start="141:45" pos:end="141:46">-&gt;</operator><name pos:start="141:47" pos:end="141:53">raw1394</name></name></expr></argument>, <argument pos:start="141:56" pos:end="141:56"><expr pos:start="141:56" pos:end="141:56"><name pos:start="141:56" pos:end="141:56">i</name></expr></argument>, <argument pos:start="141:59" pos:end="141:66"><expr pos:start="141:59" pos:end="141:66"><operator pos:start="141:59" pos:end="141:59">&amp;</operator><name pos:start="141:60" pos:end="141:66">rom_dir</name></expr></argument>)</argument_list></call> <operator pos:start="141:69" pos:end="141:69">&lt;</operator> <literal type="number" pos:start="141:71" pos:end="141:71">0</literal></expr>)</condition><block type="pseudo" pos:start="143:21" pos:end="143:29"><block_content pos:start="143:21" pos:end="143:29">

                    <continue pos:start="143:21" pos:end="143:29">continue;</continue></block_content></block></if></if_stmt>

                <if_stmt pos:start="145:17" pos:end="159:17"><if pos:start="145:17" pos:end="159:17">if <condition pos:start="145:20" pos:end="149:61">(<expr pos:start="145:21" pos:end="149:60"><operator pos:start="145:21" pos:end="145:21">(</operator><operator pos:start="145:22" pos:end="145:22">(</operator><call pos:start="145:23" pos:end="145:53"><name pos:start="145:23" pos:end="145:43">rom1394_get_node_type</name><argument_list pos:start="145:44" pos:end="145:53">(<argument pos:start="145:45" pos:end="145:52"><expr pos:start="145:45" pos:end="145:52"><operator pos:start="145:45" pos:end="145:45">&amp;</operator><name pos:start="145:46" pos:end="145:52">rom_dir</name></expr></argument>)</argument_list></call> <operator pos:start="145:55" pos:end="145:56">==</operator> <name pos:start="145:58" pos:end="145:78">ROM1394_NODE_TYPE_AVC</name><operator pos:start="145:79" pos:end="145:79">)</operator> <operator pos:start="145:81" pos:end="145:82">&amp;&amp;</operator>

                     <call pos:start="147:22" pos:end="147:89"><name pos:start="147:22" pos:end="147:47">avc1394_check_subunit_type</name><argument_list pos:start="147:48" pos:end="147:89">(<argument pos:start="147:49" pos:end="147:59"><expr pos:start="147:49" pos:end="147:59"><name pos:start="147:49" pos:end="147:59"><name pos:start="147:49" pos:end="147:50">dv</name><operator pos:start="147:51" pos:end="147:52">-&gt;</operator><name pos:start="147:53" pos:end="147:59">raw1394</name></name></expr></argument>, <argument pos:start="147:62" pos:end="147:62"><expr pos:start="147:62" pos:end="147:62"><name pos:start="147:62" pos:end="147:62">i</name></expr></argument>, <argument pos:start="147:65" pos:end="147:88"><expr pos:start="147:65" pos:end="147:88"><name pos:start="147:65" pos:end="147:88">AVC1394_SUBUNIT_TYPE_VCR</name></expr></argument>)</argument_list></call><operator pos:start="147:90" pos:end="147:90">)</operator> <operator pos:start="147:92" pos:end="147:93">||</operator>

                    <operator pos:start="149:21" pos:end="149:21">(</operator><name pos:start="149:22" pos:end="149:41"><name pos:start="149:22" pos:end="149:28">rom_dir</name><operator pos:start="149:29" pos:end="149:29">.</operator><name pos:start="149:30" pos:end="149:41">unit_spec_id</name></name> <operator pos:start="149:43" pos:end="149:44">==</operator> <name pos:start="149:46" pos:end="149:59">MOTDCT_SPEC_ID</name><operator pos:start="149:60" pos:end="149:60">)</operator></expr>)</condition> <block pos:start="149:63" pos:end="159:17">{<block_content pos:start="151:21" pos:end="157:26">

                    <expr_stmt pos:start="151:21" pos:end="151:53"><expr pos:start="151:21" pos:end="151:52"><call pos:start="151:21" pos:end="151:52"><name pos:start="151:21" pos:end="151:42">rom1394_free_directory</name><argument_list pos:start="151:43" pos:end="151:52">(<argument pos:start="151:44" pos:end="151:51"><expr pos:start="151:44" pos:end="151:51"><operator pos:start="151:44" pos:end="151:44">&amp;</operator><name pos:start="151:45" pos:end="151:51">rom_dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="153:21" pos:end="153:33"><expr pos:start="153:21" pos:end="153:32"><name pos:start="153:21" pos:end="153:28"><name pos:start="153:21" pos:end="153:22">dv</name><operator pos:start="153:23" pos:end="153:24">-&gt;</operator><name pos:start="153:25" pos:end="153:28">node</name></name> <operator pos:start="153:30" pos:end="153:30">=</operator> <name pos:start="153:32" pos:end="153:32">i</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="155:21" pos:end="155:29"><expr pos:start="155:21" pos:end="155:28"><name pos:start="155:21" pos:end="155:24">port</name> <operator pos:start="155:26" pos:end="155:26">=</operator> <name pos:start="155:28" pos:end="155:28">j</name></expr>;</expr_stmt>

                    <break pos:start="157:21" pos:end="157:26">break;</break>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="161:17" pos:end="161:49"><expr pos:start="161:17" pos:end="161:48"><call pos:start="161:17" pos:end="161:48"><name pos:start="161:17" pos:end="161:38">rom1394_free_directory</name><argument_list pos:start="161:39" pos:end="161:48">(<argument pos:start="161:40" pos:end="161:47"><expr pos:start="161:40" pos:end="161:47"><operator pos:start="161:40" pos:end="161:40">&amp;</operator><name pos:start="161:41" pos:end="161:47">rom_dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <if_stmt pos:start="171:5" pos:end="177:5"><if pos:start="171:5" pos:end="177:5">if <condition pos:start="171:8" pos:end="171:19">(<expr pos:start="171:9" pos:end="171:18"><name pos:start="171:9" pos:end="171:12">port</name> <operator pos:start="171:14" pos:end="171:15">==</operator> <operator pos:start="171:17" pos:end="171:17">-</operator><literal type="number" pos:start="171:18" pos:end="171:18">1</literal></expr>)</condition> <block pos:start="171:21" pos:end="177:5">{<block_content pos:start="173:9" pos:end="175:18">

        <expr_stmt pos:start="173:9" pos:end="173:66"><expr pos:start="173:9" pos:end="173:65"><call pos:start="173:9" pos:end="173:65"><name pos:start="173:9" pos:end="173:14">av_log</name><argument_list pos:start="173:15" pos:end="173:65">(<argument pos:start="173:16" pos:end="173:22"><expr pos:start="173:16" pos:end="173:22"><name pos:start="173:16" pos:end="173:22">context</name></expr></argument>, <argument pos:start="173:25" pos:end="173:36"><expr pos:start="173:25" pos:end="173:36"><name pos:start="173:25" pos:end="173:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="173:39" pos:end="173:64"><expr pos:start="173:39" pos:end="173:64"><literal type="string" pos:start="173:39" pos:end="173:64">"No AV/C devices found.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="175:9" pos:end="175:18">goto <name pos:start="175:14" pos:end="175:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="181:5" pos:end="181:53">/* Provide bus sanity for multiple connections */</comment>



    <expr_stmt pos:start="185:5" pos:end="185:66"><expr pos:start="185:5" pos:end="185:65"><call pos:start="185:5" pos:end="185:65"><name pos:start="185:5" pos:end="185:33">iec61883_cmp_normalize_output</name><argument_list pos:start="185:34" pos:end="185:65">(<argument pos:start="185:35" pos:end="185:45"><expr pos:start="185:35" pos:end="185:45"><name pos:start="185:35" pos:end="185:45"><name pos:start="185:35" pos:end="185:36">dv</name><operator pos:start="185:37" pos:end="185:38">-&gt;</operator><name pos:start="185:39" pos:end="185:45">raw1394</name></name></expr></argument>, <argument pos:start="185:48" pos:end="185:64"><expr pos:start="185:48" pos:end="185:64"><literal type="number" pos:start="185:48" pos:end="185:53">0xffc0</literal> <operator pos:start="185:55" pos:end="185:55">|</operator> <name pos:start="185:57" pos:end="185:64"><name pos:start="185:57" pos:end="185:58">dv</name><operator pos:start="185:59" pos:end="185:60">-&gt;</operator><name pos:start="185:61" pos:end="185:64">node</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="189:5" pos:end="189:41">/* Find out if device is DV or HDV */</comment>



    <if_stmt pos:start="193:5" pos:end="213:5"><if pos:start="193:5" pos:end="213:5">if <condition pos:start="193:8" pos:end="193:34">(<expr pos:start="193:9" pos:end="193:33"><name pos:start="193:9" pos:end="193:16"><name pos:start="193:9" pos:end="193:10">dv</name><operator pos:start="193:11" pos:end="193:12">-&gt;</operator><name pos:start="193:13" pos:end="193:16">type</name></name> <operator pos:start="193:18" pos:end="193:19">==</operator> <name pos:start="193:21" pos:end="193:33">IEC61883_AUTO</name></expr>)</condition> <block pos:start="193:36" pos:end="213:5">{<block_content pos:start="195:9" pos:end="211:39">

        <expr_stmt pos:start="195:9" pos:end="205:48"><expr pos:start="195:9" pos:end="205:47"><name pos:start="195:9" pos:end="195:16">response</name> <operator pos:start="195:18" pos:end="195:18">=</operator> <call pos:start="195:20" pos:end="205:47"><name pos:start="195:20" pos:end="195:38">avc1394_transaction</name><argument_list pos:start="195:39" pos:end="205:47">(<argument pos:start="195:40" pos:end="195:50"><expr pos:start="195:40" pos:end="195:50"><name pos:start="195:40" pos:end="195:50"><name pos:start="195:40" pos:end="195:41">dv</name><operator pos:start="195:42" pos:end="195:43">-&gt;</operator><name pos:start="195:44" pos:end="195:50">raw1394</name></name></expr></argument>, <argument pos:start="195:53" pos:end="195:60"><expr pos:start="195:53" pos:end="195:60"><name pos:start="195:53" pos:end="195:60"><name pos:start="195:53" pos:end="195:54">dv</name><operator pos:start="195:55" pos:end="195:56">-&gt;</operator><name pos:start="195:57" pos:end="195:60">node</name></name></expr></argument>,

                                       <argument pos:start="197:40" pos:end="205:43"><expr pos:start="197:40" pos:end="205:43"><name pos:start="197:40" pos:end="197:59">AVC1394_CTYPE_STATUS</name> <operator pos:start="197:61" pos:end="197:61">|</operator>

                                       <name pos:start="199:40" pos:end="199:73">AVC1394_SUBUNIT_TYPE_TAPE_RECORDER</name> <operator pos:start="199:75" pos:end="199:75">|</operator>

                                       <name pos:start="201:40" pos:end="201:59">AVC1394_SUBUNIT_ID_0</name> <operator pos:start="201:61" pos:end="201:61">|</operator>

                                       <name pos:start="203:40" pos:end="203:77">AVC1394_VCR_COMMAND_OUTPUT_SIGNAL_MODE</name> <operator pos:start="203:79" pos:end="203:79">|</operator>

                                       <literal type="number" pos:start="205:40" pos:end="205:43">0xFF</literal></expr></argument>, <argument pos:start="205:46" pos:end="205:46"><expr pos:start="205:46" pos:end="205:46"><literal type="number" pos:start="205:46" pos:end="205:46">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:50"><expr pos:start="207:9" pos:end="207:49"><name pos:start="207:9" pos:end="207:16">response</name> <operator pos:start="207:18" pos:end="207:18">=</operator> <call pos:start="207:20" pos:end="207:49"><name pos:start="207:20" pos:end="207:39">AVC1394_GET_OPERAND0</name><argument_list pos:start="207:40" pos:end="207:49">(<argument pos:start="207:41" pos:end="207:48"><expr pos:start="207:41" pos:end="207:48"><name pos:start="207:41" pos:end="207:48">response</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="209:9" pos:end="211:39"><expr pos:start="209:9" pos:end="211:38"><name pos:start="209:9" pos:end="209:16"><name pos:start="209:9" pos:end="209:10">dv</name><operator pos:start="209:11" pos:end="209:12">-&gt;</operator><name pos:start="209:13" pos:end="209:16">type</name></name> <operator pos:start="209:18" pos:end="209:18">=</operator> <ternary pos:start="209:20" pos:end="211:38"><condition pos:start="209:20" pos:end="209:99"><expr pos:start="209:20" pos:end="209:97"><operator pos:start="209:20" pos:end="209:20">(</operator><name pos:start="209:21" pos:end="209:28">response</name> <operator pos:start="209:30" pos:end="209:31">==</operator> <literal type="number" pos:start="209:33" pos:end="209:36">0x10</literal> <operator pos:start="209:38" pos:end="209:39">||</operator> <name pos:start="209:41" pos:end="209:48">response</name> <operator pos:start="209:50" pos:end="209:51">==</operator> <literal type="number" pos:start="209:53" pos:end="209:56">0x90</literal> <operator pos:start="209:58" pos:end="209:59">||</operator> <name pos:start="209:61" pos:end="209:68">response</name> <operator pos:start="209:70" pos:end="209:71">==</operator> <literal type="number" pos:start="209:73" pos:end="209:76">0x1A</literal> <operator pos:start="209:78" pos:end="209:79">||</operator> <name pos:start="209:81" pos:end="209:88">response</name> <operator pos:start="209:90" pos:end="209:91">==</operator> <literal type="number" pos:start="209:93" pos:end="209:96">0x9A</literal><operator pos:start="209:97" pos:end="209:97">)</operator></expr> ?</condition><then pos:start="211:13" pos:end="211:24">

            <expr pos:start="211:13" pos:end="211:24"><name pos:start="211:13" pos:end="211:24">IEC61883_HDV</name></expr> </then><else pos:start="211:26" pos:end="211:38">: <expr pos:start="211:28" pos:end="211:38"><name pos:start="211:28" pos:end="211:38">IEC61883_DV</name></expr></else></ternary></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="217:5" pos:end="217:50">/* Connect to device, and do initialization */</comment>



    <expr_stmt pos:start="221:5" pos:end="225:72"><expr pos:start="221:5" pos:end="225:71"><name pos:start="221:5" pos:end="221:15"><name pos:start="221:5" pos:end="221:6">dv</name><operator pos:start="221:7" pos:end="221:8">-&gt;</operator><name pos:start="221:9" pos:end="221:15">channel</name></name> <operator pos:start="221:17" pos:end="221:17">=</operator> <call pos:start="221:19" pos:end="225:71"><name pos:start="221:19" pos:end="221:38">iec61883_cmp_connect</name><argument_list pos:start="221:39" pos:end="225:71">(<argument pos:start="221:40" pos:end="221:50"><expr pos:start="221:40" pos:end="221:50"><name pos:start="221:40" pos:end="221:50"><name pos:start="221:40" pos:end="221:41">dv</name><operator pos:start="221:42" pos:end="221:43">-&gt;</operator><name pos:start="221:44" pos:end="221:50">raw1394</name></name></expr></argument>, <argument pos:start="221:53" pos:end="221:60"><expr pos:start="221:53" pos:end="221:60"><name pos:start="221:53" pos:end="221:60"><name pos:start="221:53" pos:end="221:54">dv</name><operator pos:start="221:55" pos:end="221:56">-&gt;</operator><name pos:start="221:57" pos:end="221:60">node</name></name></expr></argument>, <argument pos:start="221:63" pos:end="221:78"><expr pos:start="221:63" pos:end="221:78"><operator pos:start="221:63" pos:end="221:63">&amp;</operator><name pos:start="221:64" pos:end="221:78"><name pos:start="221:64" pos:end="221:65">dv</name><operator pos:start="221:66" pos:end="221:67">-&gt;</operator><name pos:start="221:68" pos:end="221:78">output_port</name></name></expr></argument>,

                                       <argument pos:start="223:40" pos:end="223:72"><expr pos:start="223:40" pos:end="223:72"><call pos:start="223:40" pos:end="223:72"><name pos:start="223:40" pos:end="223:59">raw1394_get_local_id</name><argument_list pos:start="223:60" pos:end="223:72">(<argument pos:start="223:61" pos:end="223:71"><expr pos:start="223:61" pos:end="223:71"><name pos:start="223:61" pos:end="223:71"><name pos:start="223:61" pos:end="223:62">dv</name><operator pos:start="223:63" pos:end="223:64">-&gt;</operator><name pos:start="223:65" pos:end="223:71">raw1394</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                       <argument pos:start="225:40" pos:end="225:54"><expr pos:start="225:40" pos:end="225:54"><operator pos:start="225:40" pos:end="225:40">&amp;</operator><name pos:start="225:41" pos:end="225:54"><name pos:start="225:41" pos:end="225:42">dv</name><operator pos:start="225:43" pos:end="225:44">-&gt;</operator><name pos:start="225:45" pos:end="225:54">input_port</name></name></expr></argument>, <argument pos:start="225:57" pos:end="225:70"><expr pos:start="225:57" pos:end="225:70"><operator pos:start="225:57" pos:end="225:57">&amp;</operator><name pos:start="225:58" pos:end="225:70"><name pos:start="225:58" pos:end="225:59">dv</name><operator pos:start="225:60" pos:end="225:61">-&gt;</operator><name pos:start="225:62" pos:end="225:70">bandwidth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="229:5" pos:end="231:25"><if pos:start="229:5" pos:end="231:25">if <condition pos:start="229:8" pos:end="229:24">(<expr pos:start="229:9" pos:end="229:23"><name pos:start="229:9" pos:end="229:19"><name pos:start="229:9" pos:end="229:10">dv</name><operator pos:start="229:11" pos:end="229:12">-&gt;</operator><name pos:start="229:13" pos:end="229:19">channel</name></name> <operator pos:start="229:21" pos:end="229:21">&lt;</operator> <literal type="number" pos:start="229:23" pos:end="229:23">0</literal></expr>)</condition><block type="pseudo" pos:start="231:9" pos:end="231:25"><block_content pos:start="231:9" pos:end="231:25">

        <expr_stmt pos:start="231:9" pos:end="231:25"><expr pos:start="231:9" pos:end="231:24"><name pos:start="231:9" pos:end="231:19"><name pos:start="231:9" pos:end="231:10">dv</name><operator pos:start="231:11" pos:end="231:12">-&gt;</operator><name pos:start="231:13" pos:end="231:19">channel</name></name> <operator pos:start="231:21" pos:end="231:21">=</operator> <literal type="number" pos:start="231:23" pos:end="231:24">63</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="235:5" pos:end="237:30"><if pos:start="235:5" pos:end="237:30">if <condition pos:start="235:8" pos:end="235:25">(<expr pos:start="235:9" pos:end="235:24"><operator pos:start="235:9" pos:end="235:9">!</operator><name pos:start="235:10" pos:end="235:24"><name pos:start="235:10" pos:end="235:11">dv</name><operator pos:start="235:12" pos:end="235:13">-&gt;</operator><name pos:start="235:14" pos:end="235:24">max_packets</name></name></expr>)</condition><block type="pseudo" pos:start="237:9" pos:end="237:30"><block_content pos:start="237:9" pos:end="237:30">

        <expr_stmt pos:start="237:9" pos:end="237:30"><expr pos:start="237:9" pos:end="237:29"><name pos:start="237:9" pos:end="237:23"><name pos:start="237:9" pos:end="237:10">dv</name><operator pos:start="237:11" pos:end="237:12">-&gt;</operator><name pos:start="237:13" pos:end="237:23">max_packets</name></name> <operator pos:start="237:25" pos:end="237:25">=</operator> <literal type="number" pos:start="237:27" pos:end="237:29">100</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="241:5" pos:end="297:5"><if pos:start="241:5" pos:end="275:5">if <condition pos:start="241:8" pos:end="241:58">(<expr pos:start="241:9" pos:end="241:57"><name pos:start="241:9" pos:end="241:29">CONFIG_MPEGTS_DEMUXER</name> <operator pos:start="241:31" pos:end="241:32">&amp;&amp;</operator> <name pos:start="241:34" pos:end="241:41"><name pos:start="241:34" pos:end="241:35">dv</name><operator pos:start="241:36" pos:end="241:37">-&gt;</operator><name pos:start="241:38" pos:end="241:41">type</name></name> <operator pos:start="241:43" pos:end="241:44">==</operator> <name pos:start="241:46" pos:end="241:57">IEC61883_HDV</name></expr>)</condition> <block pos:start="241:60" pos:end="275:5">{<block_content pos:start="249:9" pos:end="273:31">



        <comment type="block" pos:start="245:9" pos:end="245:30">/* Init HDV receive */</comment>



        <expr_stmt pos:start="249:9" pos:end="249:43"><expr pos:start="249:9" pos:end="249:42"><call pos:start="249:9" pos:end="249:42"><name pos:start="249:9" pos:end="249:27">avformat_new_stream</name><argument_list pos:start="249:28" pos:end="249:42">(<argument pos:start="249:29" pos:end="249:35"><expr pos:start="249:29" pos:end="249:35"><name pos:start="249:29" pos:end="249:35">context</name></expr></argument>, <argument pos:start="249:38" pos:end="249:41"><expr pos:start="249:38" pos:end="249:41"><name pos:start="249:38" pos:end="249:41">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="253:9" pos:end="253:59"><expr pos:start="253:9" pos:end="253:58"><name pos:start="253:9" pos:end="253:22"><name pos:start="253:9" pos:end="253:10">dv</name><operator pos:start="253:11" pos:end="253:12">-&gt;</operator><name pos:start="253:13" pos:end="253:22">mpeg_demux</name></name> <operator pos:start="253:24" pos:end="253:24">=</operator> <call pos:start="253:26" pos:end="253:58"><name pos:start="253:26" pos:end="253:49">avpriv_mpegts_parse_open</name><argument_list pos:start="253:50" pos:end="253:58">(<argument pos:start="253:51" pos:end="253:57"><expr pos:start="253:51" pos:end="253:57"><name pos:start="253:51" pos:end="253:57">context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="255:9" pos:end="257:22"><if pos:start="255:9" pos:end="257:22">if <condition pos:start="255:12" pos:end="255:28">(<expr pos:start="255:13" pos:end="255:27"><operator pos:start="255:13" pos:end="255:13">!</operator><name pos:start="255:14" pos:end="255:27"><name pos:start="255:14" pos:end="255:15">dv</name><operator pos:start="255:16" pos:end="255:17">-&gt;</operator><name pos:start="255:18" pos:end="255:27">mpeg_demux</name></name></expr>)</condition><block type="pseudo" pos:start="257:13" pos:end="257:22"><block_content pos:start="257:13" pos:end="257:22">

            <goto pos:start="257:13" pos:end="257:22">goto <name pos:start="257:18" pos:end="257:21">fail</name>;</goto></block_content></block></if></if_stmt>



        <expr_stmt pos:start="261:9" pos:end="261:51"><expr pos:start="261:9" pos:end="261:50"><name pos:start="261:9" pos:end="261:23"><name pos:start="261:9" pos:end="261:10">dv</name><operator pos:start="261:11" pos:end="261:12">-&gt;</operator><name pos:start="261:13" pos:end="261:23">parse_queue</name></name> <operator pos:start="261:25" pos:end="261:25">=</operator> <name pos:start="261:27" pos:end="261:50">iec61883_parse_queue_hdv</name></expr>;</expr_stmt>



        <expr_stmt pos:start="265:9" pos:end="269:58"><expr pos:start="265:9" pos:end="269:57"><name pos:start="265:9" pos:end="265:26"><name pos:start="265:9" pos:end="265:10">dv</name><operator pos:start="265:11" pos:end="265:12">-&gt;</operator><name pos:start="265:13" pos:end="265:26">iec61883_mpeg2</name></name> <operator pos:start="265:28" pos:end="265:28">=</operator> <call pos:start="265:30" pos:end="269:57"><name pos:start="265:30" pos:end="265:53">iec61883_mpeg2_recv_init</name><argument_list pos:start="265:54" pos:end="269:57">(<argument pos:start="265:55" pos:end="265:65"><expr pos:start="265:55" pos:end="265:65"><name pos:start="265:55" pos:end="265:65"><name pos:start="265:55" pos:end="265:56">dv</name><operator pos:start="265:57" pos:end="265:58">-&gt;</operator><name pos:start="265:59" pos:end="265:65">raw1394</name></name></expr></argument>,

                                                      <argument pos:start="267:55" pos:end="267:94"><expr pos:start="267:55" pos:end="267:94"><operator pos:start="267:55" pos:end="267:55">(</operator><name pos:start="267:56" pos:end="267:76">iec61883_mpeg2_recv_t</name><operator pos:start="267:77" pos:end="267:77">)</operator><name pos:start="267:78" pos:end="267:94">iec61883_callback</name></expr></argument>,

                                                      <argument pos:start="269:55" pos:end="269:56"><expr pos:start="269:55" pos:end="269:56"><name pos:start="269:55" pos:end="269:56">dv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="273:9" pos:end="273:31"><expr pos:start="273:9" pos:end="273:30"><name pos:start="273:9" pos:end="273:23"><name pos:start="273:9" pos:end="273:10">dv</name><operator pos:start="273:11" pos:end="273:12">-&gt;</operator><name pos:start="273:13" pos:end="273:23">max_packets</name></name> <operator pos:start="273:25" pos:end="273:26">*=</operator> <literal type="number" pos:start="273:28" pos:end="273:30">766</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="275:7" pos:end="297:5">else <block pos:start="275:12" pos:end="297:5">{<block_content pos:start="283:9" pos:end="295:82">



        <comment type="block" pos:start="279:9" pos:end="279:29">/* Init DV receive */</comment>



        <expr_stmt pos:start="283:9" pos:end="283:53"><expr pos:start="283:9" pos:end="283:52"><name pos:start="283:9" pos:end="283:20"><name pos:start="283:9" pos:end="283:10">dv</name><operator pos:start="283:11" pos:end="283:12">-&gt;</operator><name pos:start="283:13" pos:end="283:20">dv_demux</name></name> <operator pos:start="283:22" pos:end="283:22">=</operator> <call pos:start="283:24" pos:end="283:52"><name pos:start="283:24" pos:end="283:43">avpriv_dv_init_demux</name><argument_list pos:start="283:44" pos:end="283:52">(<argument pos:start="283:45" pos:end="283:51"><expr pos:start="283:45" pos:end="283:51"><name pos:start="283:45" pos:end="283:51">context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="285:9" pos:end="287:22"><if pos:start="285:9" pos:end="287:22">if <condition pos:start="285:12" pos:end="285:26">(<expr pos:start="285:13" pos:end="285:25"><operator pos:start="285:13" pos:end="285:13">!</operator><name pos:start="285:14" pos:end="285:25"><name pos:start="285:14" pos:end="285:15">dv</name><operator pos:start="285:16" pos:end="285:17">-&gt;</operator><name pos:start="285:18" pos:end="285:25">dv_demux</name></name></expr>)</condition><block type="pseudo" pos:start="287:13" pos:end="287:22"><block_content pos:start="287:13" pos:end="287:22">

            <goto pos:start="287:13" pos:end="287:22">goto <name pos:start="287:18" pos:end="287:21">fail</name>;</goto></block_content></block></if></if_stmt>



        <expr_stmt pos:start="291:9" pos:end="291:50"><expr pos:start="291:9" pos:end="291:49"><name pos:start="291:9" pos:end="291:23"><name pos:start="291:9" pos:end="291:10">dv</name><operator pos:start="291:11" pos:end="291:12">-&gt;</operator><name pos:start="291:13" pos:end="291:23">parse_queue</name></name> <operator pos:start="291:25" pos:end="291:25">=</operator> <name pos:start="291:27" pos:end="291:49">iec61883_parse_queue_dv</name></expr>;</expr_stmt>



        <expr_stmt pos:start="295:9" pos:end="295:82"><expr pos:start="295:9" pos:end="295:81"><name pos:start="295:9" pos:end="295:23"><name pos:start="295:9" pos:end="295:10">dv</name><operator pos:start="295:11" pos:end="295:12">-&gt;</operator><name pos:start="295:13" pos:end="295:23">iec61883_dv</name></name> <operator pos:start="295:25" pos:end="295:25">=</operator> <call pos:start="295:27" pos:end="295:81"><name pos:start="295:27" pos:end="295:45">iec61883_dv_fb_init</name><argument_list pos:start="295:46" pos:end="295:81">(<argument pos:start="295:47" pos:end="295:57"><expr pos:start="295:47" pos:end="295:57"><name pos:start="295:47" pos:end="295:57"><name pos:start="295:47" pos:end="295:48">dv</name><operator pos:start="295:49" pos:end="295:50">-&gt;</operator><name pos:start="295:51" pos:end="295:57">raw1394</name></name></expr></argument>, <argument pos:start="295:60" pos:end="295:76"><expr pos:start="295:60" pos:end="295:76"><name pos:start="295:60" pos:end="295:76">iec61883_callback</name></expr></argument>, <argument pos:start="295:79" pos:end="295:80"><expr pos:start="295:79" pos:end="295:80"><name pos:start="295:79" pos:end="295:80">dv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="301:5" pos:end="301:54"><expr pos:start="301:5" pos:end="301:53"><name pos:start="301:5" pos:end="301:23"><name pos:start="301:5" pos:end="301:6">dv</name><operator pos:start="301:7" pos:end="301:8">-&gt;</operator><name pos:start="301:9" pos:end="301:20">raw1394_poll</name><operator pos:start="301:21" pos:end="301:21">.</operator><name pos:start="301:22" pos:end="301:23">fd</name></name> <operator pos:start="301:25" pos:end="301:25">=</operator> <call pos:start="301:27" pos:end="301:53"><name pos:start="301:27" pos:end="301:40">raw1394_get_fd</name><argument_list pos:start="301:41" pos:end="301:53">(<argument pos:start="301:42" pos:end="301:52"><expr pos:start="301:42" pos:end="301:52"><name pos:start="301:42" pos:end="301:52"><name pos:start="301:42" pos:end="301:43">dv</name><operator pos:start="301:44" pos:end="301:45">-&gt;</operator><name pos:start="301:46" pos:end="301:52">raw1394</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="303:5" pos:end="303:67"><expr pos:start="303:5" pos:end="303:66"><name pos:start="303:5" pos:end="303:27"><name pos:start="303:5" pos:end="303:6">dv</name><operator pos:start="303:7" pos:end="303:8">-&gt;</operator><name pos:start="303:9" pos:end="303:20">raw1394_poll</name><operator pos:start="303:21" pos:end="303:21">.</operator><name pos:start="303:22" pos:end="303:27">events</name></name> <operator pos:start="303:29" pos:end="303:29">=</operator> <name pos:start="303:31" pos:end="303:36">POLLIN</name> <operator pos:start="303:38" pos:end="303:38">|</operator> <name pos:start="303:40" pos:end="303:46">POLLERR</name> <operator pos:start="303:48" pos:end="303:48">|</operator> <name pos:start="303:50" pos:end="303:56">POLLHUP</name> <operator pos:start="303:58" pos:end="303:58">|</operator> <name pos:start="303:60" pos:end="303:66">POLLPRI</name></expr>;</expr_stmt>



    <comment type="block" pos:start="307:5" pos:end="307:34">/* Actually start receiving */</comment>



    <if_stmt pos:start="311:5" pos:end="322:0"><if pos:start="311:5" pos:end="313:67">if <condition pos:start="311:8" pos:end="311:33">(<expr pos:start="311:9" pos:end="311:32"><name pos:start="311:9" pos:end="311:16"><name pos:start="311:9" pos:end="311:10">dv</name><operator pos:start="311:11" pos:end="311:12">-&gt;</operator><name pos:start="311:13" pos:end="311:16">type</name></name> <operator pos:start="311:18" pos:end="311:19">==</operator> <name pos:start="311:21" pos:end="311:32">IEC61883_HDV</name></expr>)</condition><block type="pseudo" pos:start="313:9" pos:end="313:67"><block_content pos:start="313:9" pos:end="313:67">

        <expr_stmt pos:start="313:9" pos:end="313:67"><expr pos:start="313:9" pos:end="313:66"><call pos:start="313:9" pos:end="313:66"><name pos:start="313:9" pos:end="313:33">iec61883_mpeg2_recv_start</name><argument_list pos:start="313:34" pos:end="313:66">(<argument pos:start="313:35" pos:end="313:52"><expr pos:start="313:35" pos:end="313:52"><name pos:start="313:35" pos:end="313:52"><name pos:start="313:35" pos:end="313:36">dv</name><operator pos:start="313:37" pos:end="313:38">-&gt;</operator><name pos:start="313:39" pos:end="313:52">iec61883_mpeg2</name></name></expr></argument>, <argument pos:start="313:55" pos:end="313:65"><expr pos:start="313:55" pos:end="313:65"><name pos:start="313:55" pos:end="313:65"><name pos:start="313:55" pos:end="313:56">dv</name><operator pos:start="313:57" pos:end="313:58">-&gt;</operator><name pos:start="313:59" pos:end="313:65">channel</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="315:5" pos:end="322:0">else<block type="pseudo" pos:start="317:9" pos:end="322:0"><block_content pos:start="317:9" pos:end="322:0">

        <expr_stmt pos:start="317:9" pos:end="322:0"><expr pos:start="317:9" pos:end="317:58"><call pos:start="317:9" pos:end="317:58"><name pos:start="317:9" pos:end="317:28">iec61883_dv_fb_start</name><argument_list pos:start="317:29" pos:end="317:58">(<argument pos:start="317:30" pos:end="317:44"><expr pos:start="317:30" pos:end="317:44"><name pos:start="317:30" pos:end="317:44"><name pos:start="317:30" pos:end="317:31">dv</name><operator pos:start="317:32" pos:end="317:33">-&gt;</operator><name pos:start="317:34" pos:end="317:44">iec61883_dv</name></name></expr></argument>, <argument pos:start="317:47" pos:end="317:57"><expr pos:start="317:47" pos:end="317:57"><name pos:start="317:47" pos:end="317:57"><name pos:start="317:47" pos:end="317:48">dv</name><operator pos:start="317:49" pos:end="317:50">-&gt;</operator><name pos:start="317:51" pos:end="317:57">channel</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



<cpp:if pos:start="321:1" pos:end="321:11">#<cpp:directive pos:start="321:2" pos:end="321:3">if</cpp:directive> <expr pos:start="321:5" pos:end="321:11"><name pos:start="321:5" pos:end="321:11">THREADS</name></expr></cpp:if>

    <expr_stmt pos:start="323:5" pos:end="323:24"><expr pos:start="323:5" pos:end="323:23"><name pos:start="323:5" pos:end="323:19"><name pos:start="323:5" pos:end="323:6">dv</name><operator pos:start="323:7" pos:end="323:8">-&gt;</operator><name pos:start="323:9" pos:end="323:19">thread_loop</name></name> <operator pos:start="323:21" pos:end="323:21">=</operator> <literal type="number" pos:start="323:23" pos:end="323:23">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="325:5" pos:end="325:41"><expr pos:start="325:5" pos:end="325:40"><call pos:start="325:5" pos:end="325:40"><name pos:start="325:5" pos:end="325:22">pthread_mutex_init</name><argument_list pos:start="325:23" pos:end="325:40">(<argument pos:start="325:24" pos:end="325:33"><expr pos:start="325:24" pos:end="325:33"><operator pos:start="325:24" pos:end="325:24">&amp;</operator><name pos:start="325:25" pos:end="325:33"><name pos:start="325:25" pos:end="325:26">dv</name><operator pos:start="325:27" pos:end="325:28">-&gt;</operator><name pos:start="325:29" pos:end="325:33">mutex</name></name></expr></argument>, <argument pos:start="325:36" pos:end="325:39"><expr pos:start="325:36" pos:end="325:39"><name pos:start="325:36" pos:end="325:39">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="327:5" pos:end="327:39"><expr pos:start="327:5" pos:end="327:38"><call pos:start="327:5" pos:end="327:38"><name pos:start="327:5" pos:end="327:21">pthread_cond_init</name><argument_list pos:start="327:22" pos:end="327:38">(<argument pos:start="327:23" pos:end="327:31"><expr pos:start="327:23" pos:end="327:31"><operator pos:start="327:23" pos:end="327:23">&amp;</operator><name pos:start="327:24" pos:end="327:31"><name pos:start="327:24" pos:end="327:25">dv</name><operator pos:start="327:26" pos:end="327:27">-&gt;</operator><name pos:start="327:28" pos:end="327:31">cond</name></name></expr></argument>, <argument pos:start="327:34" pos:end="327:37"><expr pos:start="327:34" pos:end="327:37"><name pos:start="327:34" pos:end="327:37">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="329:5" pos:end="332:0"><expr pos:start="329:5" pos:end="329:77"><call pos:start="329:5" pos:end="329:77"><name pos:start="329:5" pos:end="329:18">pthread_create</name><argument_list pos:start="329:19" pos:end="329:77">(<argument pos:start="329:20" pos:end="329:43"><expr pos:start="329:20" pos:end="329:43"><operator pos:start="329:20" pos:end="329:20">&amp;</operator><name pos:start="329:21" pos:end="329:43"><name pos:start="329:21" pos:end="329:22">dv</name><operator pos:start="329:23" pos:end="329:24">-&gt;</operator><name pos:start="329:25" pos:end="329:43">receive_task_thread</name></name></expr></argument>, <argument pos:start="329:46" pos:end="329:49"><expr pos:start="329:46" pos:end="329:49"><name pos:start="329:46" pos:end="329:49">NULL</name></expr></argument>, <argument pos:start="329:52" pos:end="329:72"><expr pos:start="329:52" pos:end="329:72"><name pos:start="329:52" pos:end="329:72">iec61883_receive_task</name></expr></argument>, <argument pos:start="329:75" pos:end="329:76"><expr pos:start="329:75" pos:end="329:76"><name pos:start="329:75" pos:end="329:76">dv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="331:1" pos:end="331:6">#<cpp:directive pos:start="331:2" pos:end="331:6">endif</cpp:directive></cpp:endif>



    <return pos:start="335:5" pos:end="335:13">return <expr pos:start="335:12" pos:end="335:12"><literal type="number" pos:start="335:12" pos:end="335:12">0</literal></expr>;</return>



<label pos:start="339:1" pos:end="339:5"><name pos:start="339:1" pos:end="339:4">fail</name>:</label>

    <expr_stmt pos:start="341:5" pos:end="341:40"><expr pos:start="341:5" pos:end="341:39"><call pos:start="341:5" pos:end="341:39"><name pos:start="341:5" pos:end="341:26">raw1394_destroy_handle</name><argument_list pos:start="341:27" pos:end="341:39">(<argument pos:start="341:28" pos:end="341:38"><expr pos:start="341:28" pos:end="341:38"><name pos:start="341:28" pos:end="341:38"><name pos:start="341:28" pos:end="341:29">dv</name><operator pos:start="341:30" pos:end="341:31">-&gt;</operator><name pos:start="341:32" pos:end="341:38">raw1394</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="343:5" pos:end="343:24">return <expr pos:start="343:12" pos:end="343:23"><call pos:start="343:12" pos:end="343:23"><name pos:start="343:12" pos:end="343:18">AVERROR</name><argument_list pos:start="343:19" pos:end="343:23">(<argument pos:start="343:20" pos:end="343:22"><expr pos:start="343:20" pos:end="343:22"><name pos:start="343:20" pos:end="343:22">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
