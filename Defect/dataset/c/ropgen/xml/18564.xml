<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18564.c" pos:tabs="8"><function pos:start="1:1" pos:end="78:17"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">mpc8_parse_seektable</name><parameter_list pos:start="1:33" pos:end="1:65">(<parameter pos:start="1:34" pos:end="1:51"><decl pos:start="1:34" pos:end="1:51"><type pos:start="1:34" pos:end="1:51"><name pos:start="1:34" pos:end="1:48">AVFormatContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">s</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:64"><decl pos:start="1:54" pos:end="1:64"><type pos:start="1:54" pos:end="1:64"><name pos:start="1:54" pos:end="1:60">int64_t</name></type> <name pos:start="1:62" pos:end="1:64">off</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="78:17">{<block_content pos:start="5:5" pos:end="78:17">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">MPCContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">c</name> <init pos:start="5:19" pos:end="5:32">= <expr pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:21">s</name><operator pos:start="5:22" pos:end="5:23">-&gt;</operator><name pos:start="5:24" pos:end="5:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">tag</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:16">size</name></decl>, <decl pos:start="9:19" pos:end="9:21"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:19" pos:end="9:21">pos</name></decl>, <decl pos:start="9:24" pos:end="9:30"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:24" pos:end="9:30"><name pos:start="9:24" pos:end="9:27">ppos</name><index pos:start="9:28" pos:end="9:30">[<expr pos:start="9:29" pos:end="9:29"><literal type="number" pos:start="9:29" pos:end="9:29">2</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:16">buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:12"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:12">t</name></decl>, <decl pos:start="13:15" pos:end="13:19"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:15" pos:end="13:19">seekd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:17">GetBitContext</name></type> <name pos:start="15:19" pos:end="15:20">gb</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:36"><expr pos:start="19:5" pos:end="19:35"><call pos:start="19:5" pos:end="19:35"><name pos:start="19:5" pos:end="19:13">avio_seek</name><argument_list pos:start="19:14" pos:end="19:35">(<argument pos:start="19:15" pos:end="19:19"><expr pos:start="19:15" pos:end="19:19"><name pos:start="19:15" pos:end="19:19"><name pos:start="19:15" pos:end="19:15">s</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:19">pb</name></name></expr></argument>, <argument pos:start="19:22" pos:end="19:24"><expr pos:start="19:22" pos:end="19:24"><name pos:start="19:22" pos:end="19:24">off</name></expr></argument>, <argument pos:start="19:27" pos:end="19:34"><expr pos:start="19:27" pos:end="19:34"><name pos:start="19:27" pos:end="19:34">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:46"><expr pos:start="21:5" pos:end="21:45"><call pos:start="21:5" pos:end="21:45"><name pos:start="21:5" pos:end="21:25">mpc8_get_chunk_header</name><argument_list pos:start="21:26" pos:end="21:45">(<argument pos:start="21:27" pos:end="21:31"><expr pos:start="21:27" pos:end="21:31"><name pos:start="21:27" pos:end="21:31"><name pos:start="21:27" pos:end="21:27">s</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:31">pb</name></name></expr></argument>, <argument pos:start="21:34" pos:end="21:37"><expr pos:start="21:34" pos:end="21:37"><operator pos:start="21:34" pos:end="21:34">&amp;</operator><name pos:start="21:35" pos:end="21:37">tag</name></expr></argument>, <argument pos:start="21:40" pos:end="21:44"><expr pos:start="21:40" pos:end="21:44"><operator pos:start="21:40" pos:end="21:40">&amp;</operator><name pos:start="21:41" pos:end="21:44">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="78:17"><if pos:start="23:5" pos:end="78:17">if<condition pos:start="23:7" pos:end="23:28">(<expr pos:start="23:8" pos:end="23:27"><name pos:start="23:8" pos:end="23:10">tag</name> <operator pos:start="23:12" pos:end="23:13">!=</operator> <name pos:start="23:15" pos:end="23:27">TAG_SEEKTABLE</name></expr>)</condition><block pos:start="23:29" pos:end="78:17">{<block_content pos:start="25:9" pos:end="78:17">

        <expr_stmt pos:start="25:9" pos:end="25:69"><expr pos:start="25:9" pos:end="25:68"><call pos:start="25:9" pos:end="25:68"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="25:68">(<argument pos:start="25:16" pos:end="25:16"><expr pos:start="25:16" pos:end="25:16"><name pos:start="25:16" pos:end="25:16">s</name></expr></argument>, <argument pos:start="25:19" pos:end="25:30"><expr pos:start="25:19" pos:end="25:30"><name pos:start="25:19" pos:end="25:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="25:33" pos:end="25:67"><expr pos:start="25:33" pos:end="25:67"><literal type="string" pos:start="25:33" pos:end="25:67">"No seek table at given position\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>







    <if_stmt pos:start="33:5" pos:end="36:32"><if pos:start="33:5" pos:end="36:32">if<condition pos:start="33:7" pos:end="33:63">(<expr pos:start="33:8" pos:end="33:62"><operator pos:start="33:8" pos:end="33:8">!</operator><operator pos:start="33:9" pos:end="33:9">(</operator><name pos:start="33:10" pos:end="33:12">buf</name> <operator pos:start="33:14" pos:end="33:14">=</operator> <call pos:start="33:16" pos:end="33:61"><name pos:start="33:16" pos:end="33:24">av_malloc</name><argument_list pos:start="33:25" pos:end="33:61">(<argument pos:start="33:26" pos:end="33:60"><expr pos:start="33:26" pos:end="33:60"><name pos:start="33:26" pos:end="33:29">size</name> <operator pos:start="33:31" pos:end="33:31">+</operator> <name pos:start="33:33" pos:end="33:60">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call><operator pos:start="33:62" pos:end="33:62">)</operator></expr>)</condition><block type="pseudo" pos:start="36:5" pos:end="36:32"><block_content pos:start="36:5" pos:end="36:32">


    <expr_stmt pos:start="36:5" pos:end="36:32"><expr pos:start="36:5" pos:end="36:31"><call pos:start="36:5" pos:end="36:31"><name pos:start="36:5" pos:end="36:13">avio_read</name><argument_list pos:start="36:14" pos:end="36:31">(<argument pos:start="36:15" pos:end="36:19"><expr pos:start="36:15" pos:end="36:19"><name pos:start="36:15" pos:end="36:19"><name pos:start="36:15" pos:end="36:15">s</name><operator pos:start="36:16" pos:end="36:17">-&gt;</operator><name pos:start="36:18" pos:end="36:19">pb</name></name></expr></argument>, <argument pos:start="36:22" pos:end="36:24"><expr pos:start="36:22" pos:end="36:24"><name pos:start="36:22" pos:end="36:24">buf</name></expr></argument>, <argument pos:start="36:27" pos:end="36:30"><expr pos:start="36:27" pos:end="36:30"><name pos:start="36:27" pos:end="36:30">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="38:5" pos:end="38:38"><expr pos:start="38:5" pos:end="38:37"><call pos:start="38:5" pos:end="38:37"><name pos:start="38:5" pos:end="38:17">init_get_bits</name><argument_list pos:start="38:18" pos:end="38:37">(<argument pos:start="38:19" pos:end="38:21"><expr pos:start="38:19" pos:end="38:21"><operator pos:start="38:19" pos:end="38:19">&amp;</operator><name pos:start="38:20" pos:end="38:21">gb</name></expr></argument>, <argument pos:start="38:24" pos:end="38:26"><expr pos:start="38:24" pos:end="38:26"><name pos:start="38:24" pos:end="38:26">buf</name></expr></argument>, <argument pos:start="38:29" pos:end="38:36"><expr pos:start="38:29" pos:end="38:36"><name pos:start="38:29" pos:end="38:32">size</name> <operator pos:start="38:34" pos:end="38:34">*</operator> <literal type="number" pos:start="38:36" pos:end="38:36">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="40:5" pos:end="40:25"><expr pos:start="40:5" pos:end="40:24"><name pos:start="40:5" pos:end="40:8">size</name> <operator pos:start="40:10" pos:end="40:10">=</operator> <call pos:start="40:12" pos:end="40:24"><name pos:start="40:12" pos:end="40:19">gb_get_v</name><argument_list pos:start="40:20" pos:end="40:24">(<argument pos:start="40:21" pos:end="40:23"><expr pos:start="40:21" pos:end="40:23"><operator pos:start="40:21" pos:end="40:21">&amp;</operator><name pos:start="40:22" pos:end="40:23">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="42:5" pos:end="78:17"><if pos:start="42:5" pos:end="78:17">if<condition pos:start="42:7" pos:end="42:51">(<expr pos:start="42:8" pos:end="42:50"><name pos:start="42:8" pos:end="42:11">size</name> <operator pos:start="42:13" pos:end="42:13">&gt;</operator> <name pos:start="42:15" pos:end="42:22">UINT_MAX</name><operator pos:start="42:23" pos:end="42:23">/</operator><literal type="number" pos:start="42:24" pos:end="42:24">4</literal> <operator pos:start="42:26" pos:end="42:27">||</operator> <name pos:start="42:29" pos:end="42:32">size</name> <operator pos:start="42:34" pos:end="42:34">&gt;</operator> <name pos:start="42:36" pos:end="42:45"><name pos:start="42:36" pos:end="42:36">c</name><operator pos:start="42:37" pos:end="42:38">-&gt;</operator><name pos:start="42:39" pos:end="42:45">samples</name></name><operator pos:start="42:46" pos:end="42:46">/</operator><literal type="number" pos:start="42:47" pos:end="42:50">1152</literal></expr>)</condition><block pos:start="42:52" pos:end="78:17">{<block_content pos:start="44:9" pos:end="78:17">

        <expr_stmt pos:start="44:9" pos:end="44:59"><expr pos:start="44:9" pos:end="44:58"><call pos:start="44:9" pos:end="44:58"><name pos:start="44:9" pos:end="44:14">av_log</name><argument_list pos:start="44:15" pos:end="44:58">(<argument pos:start="44:16" pos:end="44:16"><expr pos:start="44:16" pos:end="44:16"><name pos:start="44:16" pos:end="44:16">s</name></expr></argument>, <argument pos:start="44:19" pos:end="44:30"><expr pos:start="44:19" pos:end="44:30"><name pos:start="44:19" pos:end="44:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="44:33" pos:end="44:57"><expr pos:start="44:33" pos:end="44:57"><literal type="string" pos:start="44:33" pos:end="44:57">"Seek table is too big\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="48:5" pos:end="48:29"><expr pos:start="48:5" pos:end="48:28"><name pos:start="48:5" pos:end="48:9">seekd</name> <operator pos:start="48:11" pos:end="48:11">=</operator> <call pos:start="48:13" pos:end="48:28"><name pos:start="48:13" pos:end="48:20">get_bits</name><argument_list pos:start="48:21" pos:end="48:28">(<argument pos:start="48:22" pos:end="48:24"><expr pos:start="48:22" pos:end="48:24"><operator pos:start="48:22" pos:end="48:22">&amp;</operator><name pos:start="48:23" pos:end="48:24">gb</name></expr></argument>, <argument pos:start="48:27" pos:end="48:27"><expr pos:start="48:27" pos:end="48:27"><literal type="number" pos:start="48:27" pos:end="48:27">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="50:5" pos:end="78:17">for<control pos:start="50:8" pos:end="50:26">(<init pos:start="50:9" pos:end="50:14"><expr pos:start="50:9" pos:end="50:13"><name pos:start="50:9" pos:end="50:9">i</name> <operator pos:start="50:11" pos:end="50:11">=</operator> <literal type="number" pos:start="50:13" pos:end="50:13">0</literal></expr>;</init> <condition pos:start="50:16" pos:end="50:21"><expr pos:start="50:16" pos:end="50:20"><name pos:start="50:16" pos:end="50:16">i</name> <operator pos:start="50:18" pos:end="50:18">&lt;</operator> <literal type="number" pos:start="50:20" pos:end="50:20">2</literal></expr>;</condition> <incr pos:start="50:23" pos:end="50:25"><expr pos:start="50:23" pos:end="50:25"><name pos:start="50:23" pos:end="50:23">i</name><operator pos:start="50:24" pos:end="50:25">++</operator></expr></incr>)</control><block pos:start="50:27" pos:end="78:17">{<block_content pos:start="52:9" pos:end="78:17">

        <expr_stmt pos:start="52:9" pos:end="52:44"><expr pos:start="52:9" pos:end="52:43"><name pos:start="52:9" pos:end="52:11">pos</name> <operator pos:start="52:13" pos:end="52:13">=</operator> <call pos:start="52:15" pos:end="52:27"><name pos:start="52:15" pos:end="52:22">gb_get_v</name><argument_list pos:start="52:23" pos:end="52:27">(<argument pos:start="52:24" pos:end="52:26"><expr pos:start="52:24" pos:end="52:26"><operator pos:start="52:24" pos:end="52:24">&amp;</operator><name pos:start="52:25" pos:end="52:26">gb</name></expr></argument>)</argument_list></call> <operator pos:start="52:29" pos:end="52:29">+</operator> <name pos:start="52:31" pos:end="52:43"><name pos:start="52:31" pos:end="52:31">c</name><operator pos:start="52:32" pos:end="52:33">-&gt;</operator><name pos:start="52:34" pos:end="52:43">header_pos</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="54:9" pos:end="54:26"><expr pos:start="54:9" pos:end="54:25"><name pos:start="54:9" pos:end="54:19"><name pos:start="54:9" pos:end="54:12">ppos</name><index pos:start="54:13" pos:end="54:19">[<expr pos:start="54:14" pos:end="54:18"><literal type="number" pos:start="54:14" pos:end="54:14">1</literal> <operator pos:start="54:16" pos:end="54:16">-</operator> <name pos:start="54:18" pos:end="54:18">i</name></expr>]</index></name> <operator pos:start="54:21" pos:end="54:21">=</operator> <name pos:start="54:23" pos:end="54:25">pos</name></expr>;</expr_stmt>

        <expr_stmt pos:start="56:9" pos:end="56:74"><expr pos:start="56:9" pos:end="56:73"><call pos:start="56:9" pos:end="56:73"><name pos:start="56:9" pos:end="56:26">av_add_index_entry</name><argument_list pos:start="56:27" pos:end="56:73">(<argument pos:start="56:28" pos:end="56:40"><expr pos:start="56:28" pos:end="56:40"><name pos:start="56:28" pos:end="56:40"><name pos:start="56:28" pos:end="56:28">s</name><operator pos:start="56:29" pos:end="56:30">-&gt;</operator><name pos:start="56:31" pos:end="56:37">streams</name><index pos:start="56:38" pos:end="56:40">[<expr pos:start="56:39" pos:end="56:39"><literal type="number" pos:start="56:39" pos:end="56:39">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="56:43" pos:end="56:45"><expr pos:start="56:43" pos:end="56:45"><name pos:start="56:43" pos:end="56:45">pos</name></expr></argument>, <argument pos:start="56:48" pos:end="56:48"><expr pos:start="56:48" pos:end="56:48"><name pos:start="56:48" pos:end="56:48">i</name></expr></argument>, <argument pos:start="56:51" pos:end="56:51"><expr pos:start="56:51" pos:end="56:51"><literal type="number" pos:start="56:51" pos:end="56:51">0</literal></expr></argument>, <argument pos:start="56:54" pos:end="56:54"><expr pos:start="56:54" pos:end="56:54"><literal type="number" pos:start="56:54" pos:end="56:54">0</literal></expr></argument>, <argument pos:start="56:57" pos:end="56:72"><expr pos:start="56:57" pos:end="56:72"><name pos:start="56:57" pos:end="56:72">AVINDEX_KEYFRAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <for pos:start="59:5" pos:end="78:17">for<control pos:start="59:8" pos:end="59:24">(<init pos:start="59:9" pos:end="59:9">;</init> <condition pos:start="59:11" pos:end="59:19"><expr pos:start="59:11" pos:end="59:18"><name pos:start="59:11" pos:end="59:11">i</name> <operator pos:start="59:13" pos:end="59:13">&lt;</operator> <name pos:start="59:15" pos:end="59:18">size</name></expr>;</condition> <incr pos:start="59:21" pos:end="59:23"><expr pos:start="59:21" pos:end="59:23"><name pos:start="59:21" pos:end="59:21">i</name><operator pos:start="59:22" pos:end="59:23">++</operator></expr></incr>)</control><block pos:start="59:25" pos:end="78:17">{<block_content pos:start="61:9" pos:end="78:17">

        <expr_stmt pos:start="61:9" pos:end="61:40"><expr pos:start="61:9" pos:end="61:39"><name pos:start="61:9" pos:end="61:9">t</name> <operator pos:start="61:11" pos:end="61:11">=</operator> <call pos:start="61:13" pos:end="61:33"><name pos:start="61:13" pos:end="61:21">get_unary</name><argument_list pos:start="61:22" pos:end="61:33">(<argument pos:start="61:23" pos:end="61:25"><expr pos:start="61:23" pos:end="61:25"><operator pos:start="61:23" pos:end="61:23">&amp;</operator><name pos:start="61:24" pos:end="61:25">gb</name></expr></argument>, <argument pos:start="61:28" pos:end="61:28"><expr pos:start="61:28" pos:end="61:28"><literal type="number" pos:start="61:28" pos:end="61:28">1</literal></expr></argument>, <argument pos:start="61:31" pos:end="61:32"><expr pos:start="61:31" pos:end="61:32"><literal type="number" pos:start="61:31" pos:end="61:32">33</literal></expr></argument>)</argument_list></call> <operator pos:start="61:35" pos:end="61:36">&lt;&lt;</operator> <literal type="number" pos:start="61:38" pos:end="61:39">12</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:31"><expr pos:start="63:9" pos:end="63:30"><name pos:start="63:9" pos:end="63:9">t</name> <operator pos:start="63:11" pos:end="63:12">+=</operator> <call pos:start="63:14" pos:end="63:30"><name pos:start="63:14" pos:end="63:21">get_bits</name><argument_list pos:start="63:22" pos:end="63:30">(<argument pos:start="63:23" pos:end="63:25"><expr pos:start="63:23" pos:end="63:25"><operator pos:start="63:23" pos:end="63:23">&amp;</operator><name pos:start="63:24" pos:end="63:25">gb</name></expr></argument>, <argument pos:start="63:28" pos:end="63:29"><expr pos:start="63:28" pos:end="63:29"><literal type="number" pos:start="63:28" pos:end="63:29">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="67:26"><if pos:start="65:9" pos:end="67:26">if<condition pos:start="65:11" pos:end="65:17">(<expr pos:start="65:12" pos:end="65:16"><name pos:start="65:12" pos:end="65:12">t</name> <operator pos:start="65:14" pos:end="65:14">&amp;</operator> <literal type="number" pos:start="65:16" pos:end="65:16">1</literal></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:26"><block_content pos:start="67:13" pos:end="67:26">

            <expr_stmt pos:start="67:13" pos:end="67:26"><expr pos:start="67:13" pos:end="67:25"><name pos:start="67:13" pos:end="67:13">t</name> <operator pos:start="67:15" pos:end="67:15">=</operator> <operator pos:start="67:17" pos:end="67:17">-</operator><operator pos:start="67:18" pos:end="67:18">(</operator><name pos:start="67:19" pos:end="67:19">t</name> <operator pos:start="67:21" pos:end="67:21">&amp;</operator> <operator pos:start="67:23" pos:end="67:23">~</operator><literal type="number" pos:start="67:24" pos:end="67:24">1</literal><operator pos:start="67:25" pos:end="67:25">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:45"><expr pos:start="69:9" pos:end="69:44"><name pos:start="69:9" pos:end="69:11">pos</name> <operator pos:start="69:13" pos:end="69:13">=</operator> <operator pos:start="69:15" pos:end="69:15">(</operator><name pos:start="69:16" pos:end="69:16">t</name> <operator pos:start="69:18" pos:end="69:19">&gt;&gt;</operator> <literal type="number" pos:start="69:21" pos:end="69:21">1</literal><operator pos:start="69:22" pos:end="69:22">)</operator> <operator pos:start="69:24" pos:end="69:24">+</operator> <name pos:start="69:26" pos:end="69:32"><name pos:start="69:26" pos:end="69:29">ppos</name><index pos:start="69:30" pos:end="69:32">[<expr pos:start="69:31" pos:end="69:31"><literal type="number" pos:start="69:31" pos:end="69:31">0</literal></expr>]</index></name><operator pos:start="69:33" pos:end="69:33">*</operator><literal type="number" pos:start="69:34" pos:end="69:36">2</literal> <operator pos:start="69:36" pos:end="69:36">-</operator> <name pos:start="69:38" pos:end="69:44"><name pos:start="69:38" pos:end="69:41">ppos</name><index pos:start="69:42" pos:end="69:44">[<expr pos:start="69:43" pos:end="69:43"><literal type="number" pos:start="69:43" pos:end="69:43">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:83"><expr pos:start="71:9" pos:end="71:82"><call pos:start="71:9" pos:end="71:82"><name pos:start="71:9" pos:end="71:26">av_add_index_entry</name><argument_list pos:start="71:27" pos:end="71:82">(<argument pos:start="71:28" pos:end="71:40"><expr pos:start="71:28" pos:end="71:40"><name pos:start="71:28" pos:end="71:40"><name pos:start="71:28" pos:end="71:28">s</name><operator pos:start="71:29" pos:end="71:30">-&gt;</operator><name pos:start="71:31" pos:end="71:37">streams</name><index pos:start="71:38" pos:end="71:40">[<expr pos:start="71:39" pos:end="71:39"><literal type="number" pos:start="71:39" pos:end="71:39">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="71:43" pos:end="71:45"><expr pos:start="71:43" pos:end="71:45"><name pos:start="71:43" pos:end="71:45">pos</name></expr></argument>, <argument pos:start="71:48" pos:end="71:57"><expr pos:start="71:48" pos:end="71:57"><name pos:start="71:48" pos:end="71:48">i</name> <operator pos:start="71:50" pos:end="71:51">&lt;&lt;</operator> <name pos:start="71:53" pos:end="71:57">seekd</name></expr></argument>, <argument pos:start="71:60" pos:end="71:60"><expr pos:start="71:60" pos:end="71:60"><literal type="number" pos:start="71:60" pos:end="71:60">0</literal></expr></argument>, <argument pos:start="71:63" pos:end="71:63"><expr pos:start="71:63" pos:end="71:63"><literal type="number" pos:start="71:63" pos:end="71:63">0</literal></expr></argument>, <argument pos:start="71:66" pos:end="71:81"><expr pos:start="71:66" pos:end="71:81"><name pos:start="71:66" pos:end="71:81">AVINDEX_KEYFRAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:26"><expr pos:start="73:9" pos:end="73:25"><name pos:start="73:9" pos:end="73:15"><name pos:start="73:9" pos:end="73:12">ppos</name><index pos:start="73:13" pos:end="73:15">[<expr pos:start="73:14" pos:end="73:14"><literal type="number" pos:start="73:14" pos:end="73:14">1</literal></expr>]</index></name> <operator pos:start="73:17" pos:end="73:17">=</operator> <name pos:start="73:19" pos:end="73:25"><name pos:start="73:19" pos:end="73:22">ppos</name><index pos:start="73:23" pos:end="73:25">[<expr pos:start="73:24" pos:end="73:24"><literal type="number" pos:start="73:24" pos:end="73:24">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:22"><expr pos:start="75:9" pos:end="75:21"><name pos:start="75:9" pos:end="75:15"><name pos:start="75:9" pos:end="75:12">ppos</name><index pos:start="75:13" pos:end="75:15">[<expr pos:start="75:14" pos:end="75:14"><literal type="number" pos:start="75:14" pos:end="75:14">0</literal></expr>]</index></name> <operator pos:start="75:17" pos:end="75:17">=</operator> <name pos:start="75:19" pos:end="75:21">pos</name></expr>;</expr_stmt>


    <expr_stmt pos:start="78:5" pos:end="78:17"><expr pos:start="78:5" pos:end="78:16"><call pos:start="78:5" pos:end="78:16"><name pos:start="78:5" pos:end="78:11">av_free</name><argument_list pos:start="78:12" pos:end="78:16">(<argument pos:start="78:13" pos:end="78:15"><expr pos:start="78:13" pos:end="78:15"><name pos:start="78:13" pos:end="78:15">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>
</unit>
