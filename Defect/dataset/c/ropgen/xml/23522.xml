<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23522.c" pos:tabs="8"><function pos:start="1:1" pos:end="123:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">simple_list</name><parameter_list pos:start="1:24" pos:end="1:29">(<parameter pos:start="1:25" pos:end="1:28"><decl pos:start="1:25" pos:end="1:28"><type pos:start="1:25" pos:end="1:28"><name pos:start="1:25" pos:end="1:28">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="123:1">{<block_content pos:start="5:5" pos:end="121:5">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <struct pos:start="7:5" pos:end="77:6">struct <block pos:start="7:12" pos:end="13:5">{

        <decl_stmt pos:start="9:9" pos:end="9:28"><decl pos:start="9:9" pos:end="9:27"><type pos:start="9:9" pos:end="9:20"><specifier pos:start="9:9" pos:end="9:13">const</specifier> <name pos:start="9:15" pos:end="9:18">char</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:27">encoded</name></decl>;</decl_stmt>

        <decl_stmt pos:start="11:9" pos:end="11:31"><decl pos:start="11:9" pos:end="11:30"><type pos:start="11:9" pos:end="11:22"><name pos:start="11:9" pos:end="11:22">LiteralQObject</name></type> <name pos:start="11:24" pos:end="11:30">decoded</name></decl>;</decl_stmt>

    }</block> <decl pos:start="13:7" pos:end="77:5"><name pos:start="13:7" pos:end="13:18"><name pos:start="13:7" pos:end="13:16">test_cases</name><index pos:start="13:17" pos:end="13:18">[]</index></name> <init pos:start="13:20" pos:end="77:5">= <expr pos:start="13:22" pos:end="77:5"><block pos:start="13:22" pos:end="77:5">{

        <expr pos:start="15:9" pos:end="29:9"><block pos:start="15:9" pos:end="29:9">{

            <expr pos:start="17:13" pos:end="17:32"><operator pos:start="17:13" pos:end="17:13">.</operator><name pos:start="17:14" pos:end="17:20">encoded</name> <operator pos:start="17:22" pos:end="17:22">=</operator> <literal type="string" pos:start="17:24" pos:end="17:32">"[43,42]"</literal></expr>,

            <expr pos:start="19:13" pos:end="27:23"><operator pos:start="19:13" pos:end="19:13">.</operator><name pos:start="19:14" pos:end="19:20">decoded</name> <operator pos:start="19:22" pos:end="19:22">=</operator> <macro pos:start="19:24" pos:end="27:23"><name pos:start="19:24" pos:end="19:33">QLIT_QLIST</name><argument_list pos:start="19:34" pos:end="27:23">(<argument pos:start="19:35" pos:end="27:22">((LiteralQObject[]){

                        QLIT_QINT(<literal type="number" pos:start="21:35" pos:end="21:36">43</literal>),

                        QLIT_QINT(<literal type="number" pos:start="23:35" pos:end="23:36">42</literal>),

                        { }

                    })</argument>)</argument_list></macro></expr>,

        }</block></expr>,

        <expr pos:start="31:9" pos:end="43:9"><block pos:start="31:9" pos:end="43:9">{

            <expr pos:start="33:13" pos:end="33:29"><operator pos:start="33:13" pos:end="33:13">.</operator><name pos:start="33:14" pos:end="33:20">encoded</name> <operator pos:start="33:22" pos:end="33:22">=</operator> <literal type="string" pos:start="33:24" pos:end="33:29">"[43]"</literal></expr>,

            <expr pos:start="35:13" pos:end="41:23"><operator pos:start="35:13" pos:end="35:13">.</operator><name pos:start="35:14" pos:end="35:20">decoded</name> <operator pos:start="35:22" pos:end="35:22">=</operator> <macro pos:start="35:24" pos:end="41:23"><name pos:start="35:24" pos:end="35:33">QLIT_QLIST</name><argument_list pos:start="35:34" pos:end="41:23">(<argument pos:start="35:35" pos:end="41:22">((LiteralQObject[]){

                        QLIT_QINT(<literal type="number" pos:start="37:35" pos:end="37:36">43</literal>),

                        { }

                    })</argument>)</argument_list></macro></expr>,

        }</block></expr>,

        <expr pos:start="45:9" pos:end="55:9"><block pos:start="45:9" pos:end="55:9">{

            <expr pos:start="47:13" pos:end="47:27"><operator pos:start="47:13" pos:end="47:13">.</operator><name pos:start="47:14" pos:end="47:20">encoded</name> <operator pos:start="47:22" pos:end="47:22">=</operator> <literal type="string" pos:start="47:24" pos:end="47:27">"[]"</literal></expr>,

            <expr pos:start="49:13" pos:end="53:23"><operator pos:start="49:13" pos:end="49:13">.</operator><name pos:start="49:14" pos:end="49:20">decoded</name> <operator pos:start="49:22" pos:end="49:22">=</operator> <macro pos:start="49:24" pos:end="53:23"><name pos:start="49:24" pos:end="49:33">QLIT_QLIST</name><argument_list pos:start="49:34" pos:end="53:23">(<argument pos:start="49:35" pos:end="53:22">((LiteralQObject[]){

                        { }

                    })</argument>)</argument_list></macro></expr>,

        }</block></expr>,

        <expr pos:start="57:9" pos:end="73:9"><block pos:start="57:9" pos:end="73:9">{

            <expr pos:start="59:13" pos:end="59:29"><operator pos:start="59:13" pos:end="59:13">.</operator><name pos:start="59:14" pos:end="59:20">encoded</name> <operator pos:start="59:22" pos:end="59:22">=</operator> <literal type="string" pos:start="59:24" pos:end="59:29">"[{}]"</literal></expr>,

            <expr pos:start="61:13" pos:end="71:31"><operator pos:start="61:13" pos:end="61:13">.</operator><name pos:start="61:14" pos:end="61:20">decoded</name> <operator pos:start="61:22" pos:end="61:22">=</operator> <macro pos:start="61:24" pos:end="71:31"><name pos:start="61:24" pos:end="61:33">QLIT_QLIST</name><argument_list pos:start="61:34" pos:end="71:31">(<argument pos:start="61:35" pos:end="71:30">((LiteralQObject[]){

                        QLIT_QDICT(((LiteralQDictEntry[]){

                                    {},

                                        })),

                        {},

                            })</argument>)</argument_list></macro></expr>,

        }</block></expr>,

        <expr pos:start="75:9" pos:end="75:11"><block pos:start="75:9" pos:end="75:11">{ }</block></expr>

    }</block></expr></init></decl>;</struct>



    <for pos:start="81:5" pos:end="121:5">for <control pos:start="81:9" pos:end="81:43">(<init pos:start="81:10" pos:end="81:15"><expr pos:start="81:10" pos:end="81:14"><name pos:start="81:10" pos:end="81:10">i</name> <operator pos:start="81:12" pos:end="81:12">=</operator> <literal type="number" pos:start="81:14" pos:end="81:14">0</literal></expr>;</init> <condition pos:start="81:17" pos:end="81:38"><expr pos:start="81:17" pos:end="81:37"><name pos:start="81:17" pos:end="81:29"><name pos:start="81:17" pos:end="81:26">test_cases</name><index pos:start="81:27" pos:end="81:29">[<expr pos:start="81:28" pos:end="81:28"><name pos:start="81:28" pos:end="81:28">i</name></expr>]</index></name><operator pos:start="81:30" pos:end="81:30">.</operator><name pos:start="81:31" pos:end="81:37">encoded</name></expr>;</condition> <incr pos:start="81:40" pos:end="81:42"><expr pos:start="81:40" pos:end="81:42"><name pos:start="81:40" pos:end="81:40">i</name><operator pos:start="81:41" pos:end="81:42">++</operator></expr></incr>)</control> <block pos:start="81:45" pos:end="121:5">{<block_content pos:start="83:9" pos:end="119:21">

        <decl_stmt pos:start="83:9" pos:end="83:21"><decl pos:start="83:9" pos:end="83:20"><type pos:start="83:9" pos:end="83:17"><name pos:start="83:9" pos:end="83:15">QObject</name> <modifier pos:start="83:17" pos:end="83:17">*</modifier></type><name pos:start="83:18" pos:end="83:20">obj</name></decl>;</decl_stmt>

        <decl_stmt pos:start="85:9" pos:end="85:21"><decl pos:start="85:9" pos:end="85:20"><type pos:start="85:9" pos:end="85:17"><name pos:start="85:9" pos:end="85:15">QString</name> <modifier pos:start="85:17" pos:end="85:17">*</modifier></type><name pos:start="85:18" pos:end="85:20">str</name></decl>;</decl_stmt>



        <expr_stmt pos:start="89:9" pos:end="89:55"><expr pos:start="89:9" pos:end="89:54"><name pos:start="89:9" pos:end="89:11">obj</name> <operator pos:start="89:13" pos:end="89:13">=</operator> <call pos:start="89:15" pos:end="89:54"><name pos:start="89:15" pos:end="89:31">qobject_from_json</name><argument_list pos:start="89:32" pos:end="89:54">(<argument pos:start="89:33" pos:end="89:53"><expr pos:start="89:33" pos:end="89:53"><name pos:start="89:33" pos:end="89:45"><name pos:start="89:33" pos:end="89:42">test_cases</name><index pos:start="89:43" pos:end="89:45">[<expr pos:start="89:44" pos:end="89:44"><name pos:start="89:44" pos:end="89:44">i</name></expr>]</index></name><operator pos:start="89:46" pos:end="89:46">.</operator><name pos:start="89:47" pos:end="89:53">encoded</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:30"><expr pos:start="91:9" pos:end="91:29"><call pos:start="91:9" pos:end="91:29"><name pos:start="91:9" pos:end="91:16">g_assert</name><argument_list pos:start="91:17" pos:end="91:29">(<argument pos:start="91:18" pos:end="91:28"><expr pos:start="91:18" pos:end="91:28"><name pos:start="91:18" pos:end="91:20">obj</name> <operator pos:start="91:22" pos:end="91:23">!=</operator> <name pos:start="91:25" pos:end="91:28">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:51"><expr pos:start="93:9" pos:end="93:50"><call pos:start="93:9" pos:end="93:50"><name pos:start="93:9" pos:end="93:16">g_assert</name><argument_list pos:start="93:17" pos:end="93:50">(<argument pos:start="93:18" pos:end="93:49"><expr pos:start="93:18" pos:end="93:49"><call pos:start="93:18" pos:end="93:34"><name pos:start="93:18" pos:end="93:29">qobject_type</name><argument_list pos:start="93:30" pos:end="93:34">(<argument pos:start="93:31" pos:end="93:33"><expr pos:start="93:31" pos:end="93:33"><name pos:start="93:31" pos:end="93:33">obj</name></expr></argument>)</argument_list></call> <operator pos:start="93:36" pos:end="93:37">==</operator> <name pos:start="93:39" pos:end="93:49">QTYPE_QLIST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="97:9" pos:end="97:76"><expr pos:start="97:9" pos:end="97:75"><call pos:start="97:9" pos:end="97:75"><name pos:start="97:9" pos:end="97:16">g_assert</name><argument_list pos:start="97:17" pos:end="97:75">(<argument pos:start="97:18" pos:end="97:74"><expr pos:start="97:18" pos:end="97:74"><call pos:start="97:18" pos:end="97:69"><name pos:start="97:18" pos:end="97:40">compare_litqobj_to_qobj</name><argument_list pos:start="97:41" pos:end="97:69">(<argument pos:start="97:42" pos:end="97:63"><expr pos:start="97:42" pos:end="97:63"><operator pos:start="97:42" pos:end="97:42">&amp;</operator><name pos:start="97:43" pos:end="97:55"><name pos:start="97:43" pos:end="97:52">test_cases</name><index pos:start="97:53" pos:end="97:55">[<expr pos:start="97:54" pos:end="97:54"><name pos:start="97:54" pos:end="97:54">i</name></expr>]</index></name><operator pos:start="97:56" pos:end="97:56">.</operator><name pos:start="97:57" pos:end="97:63">decoded</name></expr></argument>, <argument pos:start="97:66" pos:end="97:68"><expr pos:start="97:66" pos:end="97:68"><name pos:start="97:66" pos:end="97:68">obj</name></expr></argument>)</argument_list></call> <operator pos:start="97:71" pos:end="97:72">==</operator> <literal type="number" pos:start="97:74" pos:end="97:74">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="101:9" pos:end="101:35"><expr pos:start="101:9" pos:end="101:34"><name pos:start="101:9" pos:end="101:11">str</name> <operator pos:start="101:13" pos:end="101:13">=</operator> <call pos:start="101:15" pos:end="101:34"><name pos:start="101:15" pos:end="101:29">qobject_to_json</name><argument_list pos:start="101:30" pos:end="101:34">(<argument pos:start="101:31" pos:end="101:33"><expr pos:start="101:31" pos:end="101:33"><name pos:start="101:31" pos:end="101:33">obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:28"><expr pos:start="103:9" pos:end="103:27"><call pos:start="103:9" pos:end="103:27"><name pos:start="103:9" pos:end="103:22">qobject_decref</name><argument_list pos:start="103:23" pos:end="103:27">(<argument pos:start="103:24" pos:end="103:26"><expr pos:start="103:24" pos:end="103:26"><name pos:start="103:24" pos:end="103:26">obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="107:9" pos:end="107:54"><expr pos:start="107:9" pos:end="107:53"><name pos:start="107:9" pos:end="107:11">obj</name> <operator pos:start="107:13" pos:end="107:13">=</operator> <call pos:start="107:15" pos:end="107:53"><name pos:start="107:15" pos:end="107:31">qobject_from_json</name><argument_list pos:start="107:32" pos:end="107:53">(<argument pos:start="107:33" pos:end="107:52"><expr pos:start="107:33" pos:end="107:52"><call pos:start="107:33" pos:end="107:52"><name pos:start="107:33" pos:end="107:47">qstring_get_str</name><argument_list pos:start="107:48" pos:end="107:52">(<argument pos:start="107:49" pos:end="107:51"><expr pos:start="107:49" pos:end="107:51"><name pos:start="107:49" pos:end="107:51">str</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:30"><expr pos:start="109:9" pos:end="109:29"><call pos:start="109:9" pos:end="109:29"><name pos:start="109:9" pos:end="109:16">g_assert</name><argument_list pos:start="109:17" pos:end="109:29">(<argument pos:start="109:18" pos:end="109:28"><expr pos:start="109:18" pos:end="109:28"><name pos:start="109:18" pos:end="109:20">obj</name> <operator pos:start="109:22" pos:end="109:23">!=</operator> <name pos:start="109:25" pos:end="109:28">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:51"><expr pos:start="111:9" pos:end="111:50"><call pos:start="111:9" pos:end="111:50"><name pos:start="111:9" pos:end="111:16">g_assert</name><argument_list pos:start="111:17" pos:end="111:50">(<argument pos:start="111:18" pos:end="111:49"><expr pos:start="111:18" pos:end="111:49"><call pos:start="111:18" pos:end="111:34"><name pos:start="111:18" pos:end="111:29">qobject_type</name><argument_list pos:start="111:30" pos:end="111:34">(<argument pos:start="111:31" pos:end="111:33"><expr pos:start="111:31" pos:end="111:33"><name pos:start="111:31" pos:end="111:33">obj</name></expr></argument>)</argument_list></call> <operator pos:start="111:36" pos:end="111:37">==</operator> <name pos:start="111:39" pos:end="111:49">QTYPE_QLIST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="115:9" pos:end="115:76"><expr pos:start="115:9" pos:end="115:75"><call pos:start="115:9" pos:end="115:75"><name pos:start="115:9" pos:end="115:16">g_assert</name><argument_list pos:start="115:17" pos:end="115:75">(<argument pos:start="115:18" pos:end="115:74"><expr pos:start="115:18" pos:end="115:74"><call pos:start="115:18" pos:end="115:69"><name pos:start="115:18" pos:end="115:40">compare_litqobj_to_qobj</name><argument_list pos:start="115:41" pos:end="115:69">(<argument pos:start="115:42" pos:end="115:63"><expr pos:start="115:42" pos:end="115:63"><operator pos:start="115:42" pos:end="115:42">&amp;</operator><name pos:start="115:43" pos:end="115:55"><name pos:start="115:43" pos:end="115:52">test_cases</name><index pos:start="115:53" pos:end="115:55">[<expr pos:start="115:54" pos:end="115:54"><name pos:start="115:54" pos:end="115:54">i</name></expr>]</index></name><operator pos:start="115:56" pos:end="115:56">.</operator><name pos:start="115:57" pos:end="115:63">decoded</name></expr></argument>, <argument pos:start="115:66" pos:end="115:68"><expr pos:start="115:66" pos:end="115:68"><name pos:start="115:66" pos:end="115:68">obj</name></expr></argument>)</argument_list></call> <operator pos:start="115:71" pos:end="115:72">==</operator> <literal type="number" pos:start="115:74" pos:end="115:74">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:28"><expr pos:start="117:9" pos:end="117:27"><call pos:start="117:9" pos:end="117:27"><name pos:start="117:9" pos:end="117:22">qobject_decref</name><argument_list pos:start="117:23" pos:end="117:27">(<argument pos:start="117:24" pos:end="117:26"><expr pos:start="117:24" pos:end="117:26"><name pos:start="117:24" pos:end="117:26">obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:21"><expr pos:start="119:9" pos:end="119:20"><call pos:start="119:9" pos:end="119:20"><name pos:start="119:9" pos:end="119:15">QDECREF</name><argument_list pos:start="119:16" pos:end="119:20">(<argument pos:start="119:17" pos:end="119:19"><expr pos:start="119:17" pos:end="119:19"><name pos:start="119:17" pos:end="119:19">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
