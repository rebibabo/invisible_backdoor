<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26491.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:14">hmp_delvm</name><parameter_list pos:start="1:15" pos:end="1:48">(<parameter pos:start="1:16" pos:end="1:27"><decl pos:start="1:16" pos:end="1:27"><type pos:start="1:16" pos:end="1:27"><name pos:start="1:16" pos:end="1:22">Monitor</name> <modifier pos:start="1:24" pos:end="1:24">*</modifier></type><name pos:start="1:25" pos:end="1:27">mon</name></decl></parameter>, <parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:47"><specifier pos:start="1:30" pos:end="1:34">const</specifier> <name pos:start="1:36" pos:end="1:40">QDict</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:47">qdict</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:5">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">BlockDriverState</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:24">bs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">Error</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:14">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:52"><decl pos:start="9:5" pos:end="9:51"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:20">name</name> <init pos:start="9:22" pos:end="9:51">= <expr pos:start="9:24" pos:end="9:51"><call pos:start="9:24" pos:end="9:51"><name pos:start="9:24" pos:end="9:36">qdict_get_str</name><argument_list pos:start="9:37" pos:end="9:51">(<argument pos:start="9:38" pos:end="9:42"><expr pos:start="9:38" pos:end="9:42"><name pos:start="9:38" pos:end="9:42">qdict</name></expr></argument>, <argument pos:start="9:45" pos:end="9:50"><expr pos:start="9:45" pos:end="9:50"><literal type="string" pos:start="9:45" pos:end="9:50">"name"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:27">(<expr pos:start="13:9" pos:end="13:26"><operator pos:start="13:9" pos:end="13:9">!</operator><call pos:start="13:10" pos:end="13:26"><name pos:start="13:10" pos:end="13:24">find_vmstate_bs</name><argument_list pos:start="13:25" pos:end="13:26">()</argument_list></call></expr>)</condition> <block pos:start="13:29" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:15">

        <expr_stmt pos:start="15:9" pos:end="15:68"><expr pos:start="15:9" pos:end="15:67"><call pos:start="15:9" pos:end="15:67"><name pos:start="15:9" pos:end="15:22">monitor_printf</name><argument_list pos:start="15:23" pos:end="15:67">(<argument pos:start="15:24" pos:end="15:26"><expr pos:start="15:24" pos:end="15:26"><name pos:start="15:24" pos:end="15:26">mon</name></expr></argument>, <argument pos:start="15:29" pos:end="15:66"><expr pos:start="15:29" pos:end="15:66"><literal type="string" pos:start="15:29" pos:end="15:66">"No block device supports snapshots\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="33:5"><if pos:start="23:5" pos:end="33:5">if <condition pos:start="23:8" pos:end="23:54">(<expr pos:start="23:9" pos:end="23:53"><call pos:start="23:9" pos:end="23:49"><name pos:start="23:9" pos:end="23:32">bdrv_all_delete_snapshot</name><argument_list pos:start="23:33" pos:end="23:49">(<argument pos:start="23:34" pos:end="23:37"><expr pos:start="23:34" pos:end="23:37"><name pos:start="23:34" pos:end="23:37">name</name></expr></argument>, <argument pos:start="23:40" pos:end="23:42"><expr pos:start="23:40" pos:end="23:42"><operator pos:start="23:40" pos:end="23:40">&amp;</operator><name pos:start="23:41" pos:end="23:42">bs</name></expr></argument>, <argument pos:start="23:45" pos:end="23:48"><expr pos:start="23:45" pos:end="23:48"><operator pos:start="23:45" pos:end="23:45">&amp;</operator><name pos:start="23:46" pos:end="23:48">err</name></expr></argument>)</argument_list></call> <operator pos:start="23:51" pos:end="23:51">&lt;</operator> <literal type="number" pos:start="23:53" pos:end="23:53">0</literal></expr>)</condition> <block pos:start="23:56" pos:end="33:5">{<block_content pos:start="25:9" pos:end="31:24">

        <expr_stmt pos:start="25:9" pos:end="29:72"><expr pos:start="25:9" pos:end="29:71"><call pos:start="25:9" pos:end="29:71"><name pos:start="25:9" pos:end="25:22">monitor_printf</name><argument_list pos:start="25:23" pos:end="29:71">(<argument pos:start="25:24" pos:end="25:26"><expr pos:start="25:24" pos:end="25:26"><name pos:start="25:24" pos:end="25:26">mon</name></expr></argument>,

                       <argument pos:start="27:24" pos:end="27:75"><expr pos:start="27:24" pos:end="27:75"><literal type="string" pos:start="27:24" pos:end="27:75">"Error while deleting snapshot on device '%s': %s\n"</literal></expr></argument>,

                       <argument pos:start="29:24" pos:end="29:47"><expr pos:start="29:24" pos:end="29:47"><call pos:start="29:24" pos:end="29:47"><name pos:start="29:24" pos:end="29:43">bdrv_get_device_name</name><argument_list pos:start="29:44" pos:end="29:47">(<argument pos:start="29:45" pos:end="29:46"><expr pos:start="29:45" pos:end="29:46"><name pos:start="29:45" pos:end="29:46">bs</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="29:50" pos:end="29:70"><expr pos:start="29:50" pos:end="29:70"><call pos:start="29:50" pos:end="29:70"><name pos:start="29:50" pos:end="29:65">error_get_pretty</name><argument_list pos:start="29:66" pos:end="29:70">(<argument pos:start="29:67" pos:end="29:69"><expr pos:start="29:67" pos:end="29:69"><name pos:start="29:67" pos:end="29:69">err</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:24"><expr pos:start="31:9" pos:end="31:23"><call pos:start="31:9" pos:end="31:23"><name pos:start="31:9" pos:end="31:18">error_free</name><argument_list pos:start="31:19" pos:end="31:23">(<argument pos:start="31:20" pos:end="31:22"><expr pos:start="31:20" pos:end="31:22"><name pos:start="31:20" pos:end="31:22">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
