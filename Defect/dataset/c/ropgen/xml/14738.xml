<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14738.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">arm_cpu_class_init</name><parameter_list pos:start="1:31" pos:end="1:59">(<parameter pos:start="1:32" pos:end="1:46"><decl pos:start="1:32" pos:end="1:46"><type pos:start="1:32" pos:end="1:46"><name pos:start="1:32" pos:end="1:42">ObjectClass</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:46">oc</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:58"><decl pos:start="1:49" pos:end="1:58"><type pos:start="1:49" pos:end="1:58"><name pos:start="1:49" pos:end="1:52">void</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:58">data</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="31:1">{<block_content pos:start="3:5" pos:end="30:44">
    <decl_stmt pos:start="3:5" pos:end="3:41"><decl pos:start="3:5" pos:end="3:40"><type pos:start="3:5" pos:end="3:17"><name pos:start="3:5" pos:end="3:15">ARMCPUClass</name> <modifier pos:start="3:17" pos:end="3:17">*</modifier></type><name pos:start="3:18" pos:end="3:20">acc</name> <init pos:start="3:22" pos:end="3:40">= <expr pos:start="3:24" pos:end="3:40"><call pos:start="3:24" pos:end="3:40"><name pos:start="3:24" pos:end="3:36">ARM_CPU_CLASS</name><argument_list pos:start="3:37" pos:end="3:40">(<argument pos:start="3:38" pos:end="3:39"><expr pos:start="3:38" pos:end="3:39"><name pos:start="3:38" pos:end="3:39">oc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:34"><decl pos:start="4:5" pos:end="4:33"><type pos:start="4:5" pos:end="4:14"><name pos:start="4:5" pos:end="4:12">CPUClass</name> <modifier pos:start="4:14" pos:end="4:14">*</modifier></type><name pos:start="4:15" pos:end="4:16">cc</name> <init pos:start="4:18" pos:end="4:33">= <expr pos:start="4:20" pos:end="4:33"><call pos:start="4:20" pos:end="4:33"><name pos:start="4:20" pos:end="4:28">CPU_CLASS</name><argument_list pos:start="4:29" pos:end="4:33">(<argument pos:start="4:30" pos:end="4:32"><expr pos:start="4:30" pos:end="4:32"><name pos:start="4:30" pos:end="4:32">acc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">DeviceClass</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">dc</name> <init pos:start="5:21" pos:end="5:38">= <expr pos:start="5:23" pos:end="5:38"><call pos:start="5:23" pos:end="5:38"><name pos:start="5:23" pos:end="5:34">DEVICE_CLASS</name><argument_list pos:start="5:35" pos:end="5:38">(<argument pos:start="5:36" pos:end="5:37"><expr pos:start="5:36" pos:end="5:37"><name pos:start="5:36" pos:end="5:37">oc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:38"><expr pos:start="6:5" pos:end="6:37"><name pos:start="6:5" pos:end="6:23"><name pos:start="6:5" pos:end="6:7">acc</name><operator pos:start="6:8" pos:end="6:9">-&gt;</operator><name pos:start="6:10" pos:end="6:23">parent_realize</name></name> <operator pos:start="6:25" pos:end="6:25">=</operator> <name pos:start="6:27" pos:end="6:37"><name pos:start="6:27" pos:end="6:28">dc</name><operator pos:start="6:29" pos:end="6:30">-&gt;</operator><name pos:start="6:31" pos:end="6:37">realize</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:36"><expr pos:start="7:5" pos:end="7:35"><name pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:6">dc</name><operator pos:start="7:7" pos:end="7:8">-&gt;</operator><name pos:start="7:9" pos:end="7:15">realize</name></name> <operator pos:start="7:17" pos:end="7:17">=</operator> <name pos:start="7:19" pos:end="7:35">arm_cpu_realizefn</name></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:35"><expr pos:start="8:5" pos:end="8:34"><name pos:start="8:5" pos:end="8:13"><name pos:start="8:5" pos:end="8:6">dc</name><operator pos:start="8:7" pos:end="8:8">-&gt;</operator><name pos:start="8:9" pos:end="8:13">props</name></name> <operator pos:start="8:15" pos:end="8:15">=</operator> <name pos:start="8:17" pos:end="8:34">arm_cpu_properties</name></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:34"><expr pos:start="9:5" pos:end="9:33"><name pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:7">acc</name><operator pos:start="9:8" pos:end="9:9">-&gt;</operator><name pos:start="9:10" pos:end="9:21">parent_reset</name></name> <operator pos:start="9:23" pos:end="9:23">=</operator> <name pos:start="9:25" pos:end="9:33"><name pos:start="9:25" pos:end="9:26">cc</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:33">reset</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:30"><expr pos:start="10:5" pos:end="10:29"><name pos:start="10:5" pos:end="10:13"><name pos:start="10:5" pos:end="10:6">cc</name><operator pos:start="10:7" pos:end="10:8">-&gt;</operator><name pos:start="10:9" pos:end="10:13">reset</name></name> <operator pos:start="10:15" pos:end="10:15">=</operator> <name pos:start="10:17" pos:end="10:29">arm_cpu_reset</name></expr>;</expr_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:46"><expr pos:start="11:5" pos:end="11:45"><name pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:6">cc</name><operator pos:start="11:7" pos:end="11:8">-&gt;</operator><name pos:start="11:9" pos:end="11:21">class_by_name</name></name> <operator pos:start="11:23" pos:end="11:23">=</operator> <name pos:start="11:25" pos:end="11:45">arm_cpu_class_by_name</name></expr>;</expr_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:36"><expr pos:start="12:5" pos:end="12:35"><name pos:start="12:5" pos:end="12:16"><name pos:start="12:5" pos:end="12:6">cc</name><operator pos:start="12:7" pos:end="12:8">-&gt;</operator><name pos:start="12:9" pos:end="12:16">has_work</name></name> <operator pos:start="12:18" pos:end="12:18">=</operator> <name pos:start="12:20" pos:end="12:35">arm_cpu_has_work</name></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:52"><expr pos:start="13:5" pos:end="13:51"><name pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:6">cc</name><operator pos:start="13:7" pos:end="13:8">-&gt;</operator><name pos:start="13:9" pos:end="13:26">cpu_exec_interrupt</name></name> <operator pos:start="13:28" pos:end="13:28">=</operator> <name pos:start="13:30" pos:end="13:51">arm_cpu_exec_interrupt</name></expr>;</expr_stmt>
    <expr_stmt pos:start="14:5" pos:end="14:40"><expr pos:start="14:5" pos:end="14:39"><name pos:start="14:5" pos:end="14:18"><name pos:start="14:5" pos:end="14:6">cc</name><operator pos:start="14:7" pos:end="14:8">-&gt;</operator><name pos:start="14:9" pos:end="14:18">dump_state</name></name> <operator pos:start="14:20" pos:end="14:20">=</operator> <name pos:start="14:22" pos:end="14:39">arm_cpu_dump_state</name></expr>;</expr_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:32"><expr pos:start="15:5" pos:end="15:31"><name pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:6">cc</name><operator pos:start="15:7" pos:end="15:8">-&gt;</operator><name pos:start="15:9" pos:end="15:14">set_pc</name></name> <operator pos:start="15:16" pos:end="15:16">=</operator> <name pos:start="15:18" pos:end="15:31">arm_cpu_set_pc</name></expr>;</expr_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:54"><expr pos:start="16:5" pos:end="16:53"><name pos:start="16:5" pos:end="16:25"><name pos:start="16:5" pos:end="16:6">cc</name><operator pos:start="16:7" pos:end="16:8">-&gt;</operator><name pos:start="16:9" pos:end="16:25">gdb_read_register</name></name> <operator pos:start="16:27" pos:end="16:27">=</operator> <name pos:start="16:29" pos:end="16:53">arm_cpu_gdb_read_register</name></expr>;</expr_stmt>
    <expr_stmt pos:start="17:5" pos:end="19:0"><expr pos:start="17:5" pos:end="17:55"><name pos:start="17:5" pos:end="17:26"><name pos:start="17:5" pos:end="17:6">cc</name><operator pos:start="17:7" pos:end="17:8">-&gt;</operator><name pos:start="17:9" pos:end="17:26">gdb_write_register</name></name> <operator pos:start="17:28" pos:end="17:28">=</operator> <name pos:start="17:30" pos:end="17:55">arm_cpu_gdb_write_register</name></expr>;</expr_stmt>
<cpp:ifdef pos:start="18:1" pos:end="18:23">#<cpp:directive pos:start="18:2" pos:end="18:6">ifdef</cpp:directive> <name pos:start="18:8" pos:end="18:23">CONFIG_USER_ONLY</name></cpp:ifdef>
    <expr_stmt pos:start="19:5" pos:end="21:0"><expr pos:start="19:5" pos:end="19:51"><name pos:start="19:5" pos:end="19:24"><name pos:start="19:5" pos:end="19:6">cc</name><operator pos:start="19:7" pos:end="19:8">-&gt;</operator><name pos:start="19:9" pos:end="19:24">handle_mmu_fault</name></name> <operator pos:start="19:26" pos:end="19:26">=</operator> <name pos:start="19:28" pos:end="19:51">arm_cpu_handle_mmu_fault</name></expr>;</expr_stmt>
<cpp:else pos:start="20:1" pos:end="20:5">#<cpp:directive pos:start="20:2" pos:end="20:5">else</cpp:directive></cpp:else>
    <expr_stmt pos:start="21:5" pos:end="21:44"><expr pos:start="21:5" pos:end="21:43"><name pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:6">cc</name><operator pos:start="21:7" pos:end="21:8">-&gt;</operator><name pos:start="21:9" pos:end="21:20">do_interrupt</name></name> <operator pos:start="21:22" pos:end="21:22">=</operator> <name pos:start="21:24" pos:end="21:43">arm_cpu_do_interrupt</name></expr>;</expr_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:58"><expr pos:start="22:5" pos:end="22:57"><name pos:start="22:5" pos:end="22:27"><name pos:start="22:5" pos:end="22:6">cc</name><operator pos:start="22:7" pos:end="22:8">-&gt;</operator><name pos:start="22:9" pos:end="22:27">get_phys_page_debug</name></name> <operator pos:start="22:29" pos:end="22:29">=</operator> <name pos:start="22:31" pos:end="22:57">arm_cpu_get_phys_page_debug</name></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:32"><expr pos:start="23:5" pos:end="23:31"><name pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:6">cc</name><operator pos:start="23:7" pos:end="23:8">-&gt;</operator><name pos:start="23:9" pos:end="23:12">vmsd</name></name> <operator pos:start="23:14" pos:end="23:14">=</operator> <operator pos:start="23:16" pos:end="23:16">&amp;</operator><name pos:start="23:17" pos:end="23:31">vmstate_arm_cpu</name></expr>;</expr_stmt>
    <expr_stmt pos:start="24:5" pos:end="26:0"><expr pos:start="24:5" pos:end="24:52"><name pos:start="24:5" pos:end="24:28"><name pos:start="24:5" pos:end="24:6">cc</name><operator pos:start="24:7" pos:end="24:8">-&gt;</operator><name pos:start="24:9" pos:end="24:28">virtio_is_big_endian</name></name> <operator pos:start="24:30" pos:end="24:30">=</operator> <name pos:start="24:32" pos:end="24:52">arm_cpu_is_big_endian</name></expr>;</expr_stmt>
<cpp:endif pos:start="25:1" pos:end="25:6">#<cpp:directive pos:start="25:2" pos:end="25:6">endif</cpp:directive></cpp:endif>
    <expr_stmt pos:start="26:5" pos:end="26:31"><expr pos:start="26:5" pos:end="26:30"><name pos:start="26:5" pos:end="26:25"><name pos:start="26:5" pos:end="26:6">cc</name><operator pos:start="26:7" pos:end="26:8">-&gt;</operator><name pos:start="26:9" pos:end="26:25">gdb_num_core_regs</name></name> <operator pos:start="26:27" pos:end="26:27">=</operator> <literal type="number" pos:start="26:29" pos:end="26:30">26</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="27:5" pos:end="27:43"><expr pos:start="27:5" pos:end="27:42"><name pos:start="27:5" pos:end="27:25"><name pos:start="27:5" pos:end="27:6">cc</name><operator pos:start="27:7" pos:end="27:8">-&gt;</operator><name pos:start="27:9" pos:end="27:25">gdb_core_xml_file</name></name> <operator pos:start="27:27" pos:end="27:27">=</operator> <literal type="string" pos:start="27:29" pos:end="27:42">"arm-core.xml"</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="28:5" pos:end="28:42"><expr pos:start="28:5" pos:end="28:41"><name pos:start="28:5" pos:end="28:34"><name pos:start="28:5" pos:end="28:6">cc</name><operator pos:start="28:7" pos:end="28:8">-&gt;</operator><name pos:start="28:9" pos:end="28:34">gdb_stop_before_watchpoint</name></name> <operator pos:start="28:36" pos:end="28:36">=</operator> <name pos:start="28:38" pos:end="28:41">true</name></expr>;</expr_stmt>
    <expr_stmt pos:start="29:5" pos:end="29:52"><expr pos:start="29:5" pos:end="29:51"><name pos:start="29:5" pos:end="29:26"><name pos:start="29:5" pos:end="29:6">cc</name><operator pos:start="29:7" pos:end="29:8">-&gt;</operator><name pos:start="29:9" pos:end="29:26">debug_excp_handler</name></name> <operator pos:start="29:28" pos:end="29:28">=</operator> <name pos:start="29:30" pos:end="29:51">arm_debug_excp_handler</name></expr>;</expr_stmt>
    <expr_stmt pos:start="30:5" pos:end="30:44"><expr pos:start="30:5" pos:end="30:43"><name pos:start="30:5" pos:end="30:22"><name pos:start="30:5" pos:end="30:6">cc</name><operator pos:start="30:7" pos:end="30:8">-&gt;</operator><name pos:start="30:9" pos:end="30:22">disas_set_info</name></name> <operator pos:start="30:24" pos:end="30:24">=</operator> <name pos:start="30:26" pos:end="30:43">arm_disas_set_info</name></expr>;</expr_stmt>
</block_content>}</block></function></unit>
