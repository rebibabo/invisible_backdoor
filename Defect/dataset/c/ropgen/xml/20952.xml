<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20952.c" pos:tabs="8"><function pos:start="1:1" pos:end="105:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">nand_realize</name><parameter_list pos:start="1:25" pos:end="1:56">(<parameter pos:start="1:26" pos:end="1:41"><decl pos:start="1:26" pos:end="1:41"><type pos:start="1:26" pos:end="1:41"><name pos:start="1:26" pos:end="1:36">DeviceState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">dev</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:55"><decl pos:start="1:44" pos:end="1:55"><type pos:start="1:44" pos:end="1:55"><name pos:start="1:44" pos:end="1:48">Error</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier><modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:55">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="105:1">{<block_content pos:start="5:5" pos:end="103:22">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:16">pagesize</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">NANDFlashState</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:33">= <expr pos:start="7:25" pos:end="7:33"><call pos:start="7:25" pos:end="7:33"><name pos:start="7:25" pos:end="7:28">NAND</name><argument_list pos:start="7:29" pos:end="7:33">(<argument pos:start="7:30" pos:end="7:32"><expr pos:start="7:30" pos:end="7:32"><name pos:start="7:30" pos:end="7:32">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:56"><expr pos:start="11:5" pos:end="11:55"><name pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:15">buswidth</name></name> <operator pos:start="11:17" pos:end="11:17">=</operator> <name pos:start="11:19" pos:end="11:44"><name pos:start="11:19" pos:end="11:32">nand_flash_ids</name><index pos:start="11:33" pos:end="11:44">[<expr pos:start="11:34" pos:end="11:43"><name pos:start="11:34" pos:end="11:43"><name pos:start="11:34" pos:end="11:34">s</name><operator pos:start="11:35" pos:end="11:36">-&gt;</operator><name pos:start="11:37" pos:end="11:43">chip_id</name></name></expr>]</index></name><operator pos:start="11:45" pos:end="11:45">.</operator><name pos:start="11:46" pos:end="11:50">width</name> <operator pos:start="11:52" pos:end="11:53">&gt;&gt;</operator> <literal type="number" pos:start="11:55" pos:end="11:55">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:52"><expr pos:start="13:5" pos:end="13:51"><name pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:11">size</name></name> <operator pos:start="13:13" pos:end="13:13">=</operator> <name pos:start="13:15" pos:end="13:40"><name pos:start="13:15" pos:end="13:28">nand_flash_ids</name><index pos:start="13:29" pos:end="13:40">[<expr pos:start="13:30" pos:end="13:39"><name pos:start="13:30" pos:end="13:39"><name pos:start="13:30" pos:end="13:30">s</name><operator pos:start="13:31" pos:end="13:32">-&gt;</operator><name pos:start="13:33" pos:end="13:39">chip_id</name></name></expr>]</index></name><operator pos:start="13:41" pos:end="13:41">.</operator><name pos:start="13:42" pos:end="13:45">size</name> <operator pos:start="13:47" pos:end="13:48">&lt;&lt;</operator> <literal type="number" pos:start="13:50" pos:end="13:51">20</literal></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="27:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:61">(<expr pos:start="15:9" pos:end="15:60"><name pos:start="15:9" pos:end="15:34"><name pos:start="15:9" pos:end="15:22">nand_flash_ids</name><index pos:start="15:23" pos:end="15:34">[<expr pos:start="15:24" pos:end="15:33"><name pos:start="15:24" pos:end="15:33"><name pos:start="15:24" pos:end="15:24">s</name><operator pos:start="15:25" pos:end="15:26">-&gt;</operator><name pos:start="15:27" pos:end="15:33">chip_id</name></name></expr>]</index></name><operator pos:start="15:35" pos:end="15:35">.</operator><name pos:start="15:36" pos:end="15:42">options</name> <operator pos:start="15:44" pos:end="15:44">&amp;</operator> <name pos:start="15:46" pos:end="15:60">NAND_SAMSUNG_LP</name></expr>)</condition> <block pos:start="15:63" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:27">

        <expr_stmt pos:start="17:9" pos:end="17:27"><expr pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:21"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:21">page_shift</name></name> <operator pos:start="17:23" pos:end="17:23">=</operator> <literal type="number" pos:start="17:25" pos:end="17:26">11</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:27"><expr pos:start="19:9" pos:end="19:26"><name pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:22">erase_shift</name></name> <operator pos:start="19:24" pos:end="19:24">=</operator> <literal type="number" pos:start="19:26" pos:end="19:26">6</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="21:7" pos:end="27:5">else <block pos:start="21:12" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:64">

        <expr_stmt pos:start="23:9" pos:end="23:62"><expr pos:start="23:9" pos:end="23:61"><name pos:start="23:9" pos:end="23:21"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:21">page_shift</name></name> <operator pos:start="23:23" pos:end="23:23">=</operator> <name pos:start="23:25" pos:end="23:50"><name pos:start="23:25" pos:end="23:38">nand_flash_ids</name><index pos:start="23:39" pos:end="23:50">[<expr pos:start="23:40" pos:end="23:49"><name pos:start="23:40" pos:end="23:49"><name pos:start="23:40" pos:end="23:40">s</name><operator pos:start="23:41" pos:end="23:42">-&gt;</operator><name pos:start="23:43" pos:end="23:49">chip_id</name></name></expr>]</index></name><operator pos:start="23:51" pos:end="23:51">.</operator><name pos:start="23:52" pos:end="23:61">page_shift</name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:64"><expr pos:start="25:9" pos:end="25:63"><name pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:22">erase_shift</name></name> <operator pos:start="25:24" pos:end="25:24">=</operator> <name pos:start="25:26" pos:end="25:51"><name pos:start="25:26" pos:end="25:39">nand_flash_ids</name><index pos:start="25:40" pos:end="25:51">[<expr pos:start="25:41" pos:end="25:50"><name pos:start="25:41" pos:end="25:50"><name pos:start="25:41" pos:end="25:41">s</name><operator pos:start="25:42" pos:end="25:43">-&gt;</operator><name pos:start="25:44" pos:end="25:50">chip_id</name></name></expr>]</index></name><operator pos:start="25:52" pos:end="25:52">.</operator><name pos:start="25:53" pos:end="25:63">erase_shift</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <switch pos:start="31:5" pos:end="59:5">switch <condition pos:start="31:12" pos:end="31:31">(<expr pos:start="31:13" pos:end="31:30"><literal type="number" pos:start="31:13" pos:end="31:13">1</literal> <operator pos:start="31:15" pos:end="31:16">&lt;&lt;</operator> <name pos:start="31:18" pos:end="31:30"><name pos:start="31:18" pos:end="31:18">s</name><operator pos:start="31:19" pos:end="31:20">-&gt;</operator><name pos:start="31:21" pos:end="31:30">page_shift</name></name></expr>)</condition> <block pos:start="31:33" pos:end="59:5">{<block_content pos:start="33:5" pos:end="57:15">

    <case pos:start="33:5" pos:end="33:13">case <expr pos:start="33:10" pos:end="33:12"><literal type="number" pos:start="33:10" pos:end="33:12">256</literal></expr>:</case>

        <expr_stmt pos:start="35:9" pos:end="35:25"><expr pos:start="35:9" pos:end="35:24"><call pos:start="35:9" pos:end="35:24"><name pos:start="35:9" pos:end="35:21">nand_init_256</name><argument_list pos:start="35:22" pos:end="35:24">(<argument pos:start="35:23" pos:end="35:23"><expr pos:start="35:23" pos:end="35:23"><name pos:start="35:23" pos:end="35:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    <case pos:start="39:5" pos:end="39:13">case <expr pos:start="39:10" pos:end="39:12"><literal type="number" pos:start="39:10" pos:end="39:12">512</literal></expr>:</case>

        <expr_stmt pos:start="41:9" pos:end="41:25"><expr pos:start="41:9" pos:end="41:24"><call pos:start="41:9" pos:end="41:24"><name pos:start="41:9" pos:end="41:21">nand_init_512</name><argument_list pos:start="41:22" pos:end="41:24">(<argument pos:start="41:23" pos:end="41:23"><expr pos:start="41:23" pos:end="41:23"><name pos:start="41:23" pos:end="41:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>

    <case pos:start="45:5" pos:end="45:14">case <expr pos:start="45:10" pos:end="45:13"><literal type="number" pos:start="45:10" pos:end="45:13">2048</literal></expr>:</case>

        <expr_stmt pos:start="47:9" pos:end="47:26"><expr pos:start="47:9" pos:end="47:25"><call pos:start="47:9" pos:end="47:25"><name pos:start="47:9" pos:end="47:22">nand_init_2048</name><argument_list pos:start="47:23" pos:end="47:25">(<argument pos:start="47:24" pos:end="47:24"><expr pos:start="47:24" pos:end="47:24"><name pos:start="47:24" pos:end="47:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="49:9" pos:end="49:14">break;</break>

    <default pos:start="51:5" pos:end="51:12">default:</default>

        <expr_stmt pos:start="53:9" pos:end="55:39"><expr pos:start="53:9" pos:end="55:38"><call pos:start="53:9" pos:end="55:38"><name pos:start="53:9" pos:end="53:18">error_setg</name><argument_list pos:start="53:19" pos:end="55:38">(<argument pos:start="53:20" pos:end="53:23"><expr pos:start="53:20" pos:end="53:23"><name pos:start="53:20" pos:end="53:23">errp</name></expr></argument>, <argument pos:start="53:26" pos:end="53:60"><expr pos:start="53:26" pos:end="53:60"><literal type="string" pos:start="53:26" pos:end="53:60">"Unsupported NAND block size %#x\n"</literal></expr></argument>,

                   <argument pos:start="55:20" pos:end="55:37"><expr pos:start="55:20" pos:end="55:37"><literal type="number" pos:start="55:20" pos:end="55:20">1</literal> <operator pos:start="55:22" pos:end="55:23">&lt;&lt;</operator> <name pos:start="55:25" pos:end="55:37"><name pos:start="55:25" pos:end="55:25">s</name><operator pos:start="55:26" pos:end="55:27">-&gt;</operator><name pos:start="55:28" pos:end="55:37">page_shift</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:15">return;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="63:5" pos:end="63:33"><expr pos:start="63:5" pos:end="63:32"><name pos:start="63:5" pos:end="63:12">pagesize</name> <operator pos:start="63:14" pos:end="63:14">=</operator> <literal type="number" pos:start="63:16" pos:end="63:16">1</literal> <operator pos:start="63:18" pos:end="63:19">&lt;&lt;</operator> <name pos:start="63:21" pos:end="63:32"><name pos:start="63:21" pos:end="63:21">s</name><operator pos:start="63:22" pos:end="63:23">-&gt;</operator><name pos:start="63:24" pos:end="63:32">oob_shift</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:19"><expr pos:start="65:5" pos:end="65:18"><name pos:start="65:5" pos:end="65:14"><name pos:start="65:5" pos:end="65:5">s</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:14">mem_oob</name></name> <operator pos:start="65:16" pos:end="65:16">=</operator> <literal type="number" pos:start="65:18" pos:end="65:18">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="67:5" pos:end="91:5"><if pos:start="67:5" pos:end="87:5">if <condition pos:start="67:8" pos:end="67:16">(<expr pos:start="67:9" pos:end="67:15"><name pos:start="67:9" pos:end="67:15"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:15">bdrv</name></name></expr>)</condition> <block pos:start="67:18" pos:end="87:5">{<block_content pos:start="69:9" pos:end="85:9">

        <if_stmt pos:start="69:9" pos:end="75:9"><if pos:start="69:9" pos:end="75:9">if <condition pos:start="69:12" pos:end="69:39">(<expr pos:start="69:13" pos:end="69:38"><call pos:start="69:13" pos:end="69:38"><name pos:start="69:13" pos:end="69:29">bdrv_is_read_only</name><argument_list pos:start="69:30" pos:end="69:38">(<argument pos:start="69:31" pos:end="69:37"><expr pos:start="69:31" pos:end="69:37"><name pos:start="69:31" pos:end="69:37"><name pos:start="69:31" pos:end="69:31">s</name><operator pos:start="69:32" pos:end="69:33">-&gt;</operator><name pos:start="69:34" pos:end="69:37">bdrv</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="69:41" pos:end="75:9">{<block_content pos:start="71:13" pos:end="73:19">

            <expr_stmt pos:start="71:13" pos:end="71:60"><expr pos:start="71:13" pos:end="71:59"><call pos:start="71:13" pos:end="71:59"><name pos:start="71:13" pos:end="71:22">error_setg</name><argument_list pos:start="71:23" pos:end="71:59">(<argument pos:start="71:24" pos:end="71:27"><expr pos:start="71:24" pos:end="71:27"><name pos:start="71:24" pos:end="71:27">errp</name></expr></argument>, <argument pos:start="71:30" pos:end="71:58"><expr pos:start="71:30" pos:end="71:58"><literal type="string" pos:start="71:30" pos:end="71:58">"Can't use a read-only drive"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="73:13" pos:end="73:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="77:9" pos:end="85:9"><if pos:start="77:9" pos:end="85:9">if <condition pos:start="77:12" pos:end="79:73">(<expr pos:start="77:13" pos:end="79:72"><call pos:start="77:13" pos:end="77:35"><name pos:start="77:13" pos:end="77:26">bdrv_getlength</name><argument_list pos:start="77:27" pos:end="77:35">(<argument pos:start="77:28" pos:end="77:34"><expr pos:start="77:28" pos:end="77:34"><name pos:start="77:28" pos:end="77:34"><name pos:start="77:28" pos:end="77:28">s</name><operator pos:start="77:29" pos:end="77:30">-&gt;</operator><name pos:start="77:31" pos:end="77:34">bdrv</name></name></expr></argument>)</argument_list></call> <operator pos:start="77:37" pos:end="77:38">&gt;=</operator>

                <operator pos:start="79:17" pos:end="79:17">(</operator><name pos:start="79:18" pos:end="79:25"><name pos:start="79:18" pos:end="79:18">s</name><operator pos:start="79:19" pos:end="79:20">-&gt;</operator><name pos:start="79:21" pos:end="79:25">pages</name></name> <operator pos:start="79:27" pos:end="79:28">&lt;&lt;</operator> <name pos:start="79:30" pos:end="79:42"><name pos:start="79:30" pos:end="79:30">s</name><operator pos:start="79:31" pos:end="79:32">-&gt;</operator><name pos:start="79:33" pos:end="79:42">page_shift</name></name><operator pos:start="79:43" pos:end="79:43">)</operator> <operator pos:start="79:45" pos:end="79:45">+</operator> <operator pos:start="79:47" pos:end="79:47">(</operator><name pos:start="79:48" pos:end="79:55"><name pos:start="79:48" pos:end="79:48">s</name><operator pos:start="79:49" pos:end="79:50">-&gt;</operator><name pos:start="79:51" pos:end="79:55">pages</name></name> <operator pos:start="79:57" pos:end="79:58">&lt;&lt;</operator> <name pos:start="79:60" pos:end="79:71"><name pos:start="79:60" pos:end="79:60">s</name><operator pos:start="79:61" pos:end="79:62">-&gt;</operator><name pos:start="79:63" pos:end="79:71">oob_shift</name></name><operator pos:start="79:72" pos:end="79:72">)</operator></expr>)</condition> <block pos:start="79:75" pos:end="85:9">{<block_content pos:start="81:13" pos:end="83:27">

            <expr_stmt pos:start="81:13" pos:end="81:25"><expr pos:start="81:13" pos:end="81:24"><name pos:start="81:13" pos:end="81:20">pagesize</name> <operator pos:start="81:22" pos:end="81:22">=</operator> <literal type="number" pos:start="81:24" pos:end="81:24">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:27"><expr pos:start="83:13" pos:end="83:26"><name pos:start="83:13" pos:end="83:22"><name pos:start="83:13" pos:end="83:13">s</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:22">mem_oob</name></name> <operator pos:start="83:24" pos:end="83:24">=</operator> <literal type="number" pos:start="83:26" pos:end="83:26">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="87:7" pos:end="91:5">else <block pos:start="87:12" pos:end="91:5">{<block_content pos:start="89:9" pos:end="89:39">

        <expr_stmt pos:start="89:9" pos:end="89:39"><expr pos:start="89:9" pos:end="89:38"><name pos:start="89:9" pos:end="89:16">pagesize</name> <operator pos:start="89:18" pos:end="89:19">+=</operator> <literal type="number" pos:start="89:21" pos:end="89:21">1</literal> <operator pos:start="89:23" pos:end="89:24">&lt;&lt;</operator> <name pos:start="89:26" pos:end="89:38"><name pos:start="89:26" pos:end="89:26">s</name><operator pos:start="89:27" pos:end="89:28">-&gt;</operator><name pos:start="89:29" pos:end="89:38">page_shift</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="93:5" pos:end="99:5"><if pos:start="93:5" pos:end="99:5">if <condition pos:start="93:8" pos:end="93:17">(<expr pos:start="93:9" pos:end="93:16"><name pos:start="93:9" pos:end="93:16">pagesize</name></expr>)</condition> <block pos:start="93:19" pos:end="99:5">{<block_content pos:start="95:9" pos:end="97:51">

        <expr_stmt pos:start="95:9" pos:end="97:51"><expr pos:start="95:9" pos:end="97:50"><name pos:start="95:9" pos:end="95:18"><name pos:start="95:9" pos:end="95:9">s</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:18">storage</name></name> <operator pos:start="95:20" pos:end="95:20">=</operator> <operator pos:start="95:22" pos:end="95:22">(</operator><name pos:start="95:23" pos:end="95:29">uint8_t</name> <operator pos:start="95:31" pos:end="95:31">*</operator><operator pos:start="95:32" pos:end="95:32">)</operator> <call pos:start="95:34" pos:end="97:50"><name pos:start="95:34" pos:end="95:39">memset</name><argument_list pos:start="95:40" pos:end="97:50">(<argument pos:start="95:41" pos:end="95:69"><expr pos:start="95:41" pos:end="95:69"><call pos:start="95:41" pos:end="95:69"><name pos:start="95:41" pos:end="95:48">g_malloc</name><argument_list pos:start="95:49" pos:end="95:69">(<argument pos:start="95:50" pos:end="95:68"><expr pos:start="95:50" pos:end="95:68"><name pos:start="95:50" pos:end="95:57"><name pos:start="95:50" pos:end="95:50">s</name><operator pos:start="95:51" pos:end="95:52">-&gt;</operator><name pos:start="95:53" pos:end="95:57">pages</name></name> <operator pos:start="95:59" pos:end="95:59">*</operator> <name pos:start="95:61" pos:end="95:68">pagesize</name></expr></argument>)</argument_list></call></expr></argument>,

                        <argument pos:start="97:25" pos:end="97:28"><expr pos:start="97:25" pos:end="97:28"><literal type="number" pos:start="97:25" pos:end="97:28">0xff</literal></expr></argument>, <argument pos:start="97:31" pos:end="97:49"><expr pos:start="97:31" pos:end="97:49"><name pos:start="97:31" pos:end="97:38"><name pos:start="97:31" pos:end="97:31">s</name><operator pos:start="97:32" pos:end="97:33">-&gt;</operator><name pos:start="97:34" pos:end="97:38">pages</name></name> <operator pos:start="97:40" pos:end="97:40">*</operator> <name pos:start="97:42" pos:end="97:49">pagesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="101:5" pos:end="101:78">/* Give s-&gt;ioaddr a sane value in case we save state before it is used. */</comment>

    <expr_stmt pos:start="103:5" pos:end="103:22"><expr pos:start="103:5" pos:end="103:21"><name pos:start="103:5" pos:end="103:13"><name pos:start="103:5" pos:end="103:5">s</name><operator pos:start="103:6" pos:end="103:7">-&gt;</operator><name pos:start="103:8" pos:end="103:13">ioaddr</name></name> <operator pos:start="103:15" pos:end="103:15">=</operator> <name pos:start="103:17" pos:end="103:21"><name pos:start="103:17" pos:end="103:17">s</name><operator pos:start="103:18" pos:end="103:19">-&gt;</operator><name pos:start="103:20" pos:end="103:21">io</name></name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
