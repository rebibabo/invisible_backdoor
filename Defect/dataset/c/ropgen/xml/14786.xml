<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14786.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:26">gen_ins</name><parameter_list pos:start="1:27" pos:end="1:51">(<parameter pos:start="1:28" pos:end="1:42"><decl pos:start="1:28" pos:end="1:42"><type pos:start="1:28" pos:end="1:42"><name pos:start="1:28" pos:end="1:39">DisasContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:50"><decl pos:start="1:45" pos:end="1:50"><type pos:start="1:45" pos:end="1:50"><name pos:start="1:45" pos:end="1:47">int</name></type> <name pos:start="1:49" pos:end="1:50">ot</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:5">

    <expr_stmt pos:start="5:5" pos:end="5:30"><expr pos:start="5:5" pos:end="5:29"><call pos:start="5:5" pos:end="5:29"><name pos:start="5:5" pos:end="5:26">gen_string_movl_A0_EDI</name><argument_list pos:start="5:27" pos:end="5:29">(<argument pos:start="5:28" pos:end="5:28"><expr pos:start="5:28" pos:end="5:28"><name pos:start="5:28" pos:end="5:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:23"><expr pos:start="7:5" pos:end="7:22"><call pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">gen_op_movl_T0_0</name><argument_list pos:start="7:21" pos:end="7:22">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:39"><expr pos:start="9:5" pos:end="9:38"><call pos:start="9:5" pos:end="9:38"><name pos:start="9:5" pos:end="9:19">gen_op_st_T0_A0</name><argument_list pos:start="9:20" pos:end="9:38">(<argument pos:start="9:21" pos:end="9:37"><expr pos:start="9:21" pos:end="9:37"><name pos:start="9:21" pos:end="9:22">ot</name> <operator pos:start="9:24" pos:end="9:24">+</operator> <name pos:start="9:26" pos:end="9:37"><name pos:start="9:26" pos:end="9:26">s</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:37">mem_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:41"><expr pos:start="11:5" pos:end="11:40"><call pos:start="11:5" pos:end="11:40"><name pos:start="11:5" pos:end="11:21">gen_op_mov_TN_reg</name><argument_list pos:start="11:22" pos:end="11:40">(<argument pos:start="11:23" pos:end="11:29"><expr pos:start="11:23" pos:end="11:29"><name pos:start="11:23" pos:end="11:29">OT_WORD</name></expr></argument>, <argument pos:start="11:32" pos:end="11:32"><expr pos:start="11:32" pos:end="11:32"><literal type="number" pos:start="11:32" pos:end="11:32">1</literal></expr></argument>, <argument pos:start="11:35" pos:end="11:39"><expr pos:start="11:35" pos:end="11:39"><name pos:start="11:35" pos:end="11:39">R_EDX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:49"><expr pos:start="13:5" pos:end="13:48"><call pos:start="13:5" pos:end="13:48"><name pos:start="13:5" pos:end="13:24">tcg_gen_trunc_tl_i32</name><argument_list pos:start="13:25" pos:end="13:48">(<argument pos:start="13:26" pos:end="13:37"><expr pos:start="13:26" pos:end="13:37"><name pos:start="13:26" pos:end="13:37">cpu_tmp2_i32</name></expr></argument>, <argument pos:start="13:40" pos:end="13:47"><expr pos:start="13:40" pos:end="13:47"><name pos:start="13:40" pos:end="13:47"><name pos:start="13:40" pos:end="13:44">cpu_T</name><index pos:start="13:45" pos:end="13:47">[<expr pos:start="13:46" pos:end="13:46"><literal type="number" pos:start="13:46" pos:end="13:46">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:57"><expr pos:start="15:5" pos:end="15:56"><call pos:start="15:5" pos:end="15:56"><name pos:start="15:5" pos:end="15:20">tcg_gen_andi_i32</name><argument_list pos:start="15:21" pos:end="15:56">(<argument pos:start="15:22" pos:end="15:33"><expr pos:start="15:22" pos:end="15:33"><name pos:start="15:22" pos:end="15:33">cpu_tmp2_i32</name></expr></argument>, <argument pos:start="15:36" pos:end="15:47"><expr pos:start="15:36" pos:end="15:47"><name pos:start="15:36" pos:end="15:47">cpu_tmp2_i32</name></expr></argument>, <argument pos:start="15:50" pos:end="15:55"><expr pos:start="15:50" pos:end="15:55"><literal type="number" pos:start="15:50" pos:end="15:55">0xffff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:67"><expr pos:start="17:5" pos:end="17:66"><call pos:start="17:5" pos:end="17:66"><name pos:start="17:5" pos:end="17:22">tcg_gen_helper_1_1</name><argument_list pos:start="17:23" pos:end="17:66">(<argument pos:start="17:24" pos:end="17:41"><expr pos:start="17:24" pos:end="17:41"><name pos:start="17:24" pos:end="17:41"><name pos:start="17:24" pos:end="17:37">helper_in_func</name><index pos:start="17:38" pos:end="17:41">[<expr pos:start="17:39" pos:end="17:40"><name pos:start="17:39" pos:end="17:40">ot</name></expr>]</index></name></expr></argument>, <argument pos:start="17:44" pos:end="17:51"><expr pos:start="17:44" pos:end="17:51"><name pos:start="17:44" pos:end="17:51"><name pos:start="17:44" pos:end="17:48">cpu_T</name><index pos:start="17:49" pos:end="17:51">[<expr pos:start="17:50" pos:end="17:50"><literal type="number" pos:start="17:50" pos:end="17:50">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="17:54" pos:end="17:65"><expr pos:start="17:54" pos:end="17:65"><name pos:start="17:54" pos:end="17:65">cpu_tmp2_i32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:39"><expr pos:start="19:5" pos:end="19:38"><call pos:start="19:5" pos:end="19:38"><name pos:start="19:5" pos:end="19:19">gen_op_st_T0_A0</name><argument_list pos:start="19:20" pos:end="19:38">(<argument pos:start="19:21" pos:end="19:37"><expr pos:start="19:21" pos:end="19:37"><name pos:start="19:21" pos:end="19:22">ot</name> <operator pos:start="19:24" pos:end="19:24">+</operator> <name pos:start="19:26" pos:end="19:37"><name pos:start="19:26" pos:end="19:26">s</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:37">mem_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="24:0"><expr pos:start="21:5" pos:end="21:31"><name pos:start="21:5" pos:end="21:29"><name pos:start="21:5" pos:end="21:25">gen_op_movl_T0_Dshift</name><index pos:start="21:26" pos:end="21:29">[<expr pos:start="21:27" pos:end="21:28"><name pos:start="21:27" pos:end="21:28">ot</name></expr>]</index></name><operator pos:start="21:30" pos:end="21:30">(</operator><operator pos:start="21:31" pos:end="21:31">)</operator></expr>;</expr_stmt>

<cpp:ifdef pos:start="23:1" pos:end="23:20">#<cpp:directive pos:start="23:2" pos:end="23:6">ifdef</cpp:directive> <name pos:start="23:8" pos:end="23:20">TARGET_X86_64</name></cpp:ifdef>

    <if_stmt pos:start="25:5" pos:end="41:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:22">(<expr pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:16"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:16">aflag</name></name> <operator pos:start="25:18" pos:end="25:19">==</operator> <literal type="number" pos:start="25:21" pos:end="25:21">2</literal></expr>)</condition> <block pos:start="25:24" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:29">

        <expr_stmt pos:start="27:9" pos:end="27:29"><expr pos:start="27:9" pos:end="27:28"><call pos:start="27:9" pos:end="27:28"><name pos:start="27:9" pos:end="27:26">gen_op_addq_EDI_T0</name><argument_list pos:start="27:27" pos:end="27:28">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="29:7" pos:end="37:5">else

<cpp:endif pos:start="31:1" pos:end="31:6">#<cpp:directive pos:start="31:2" pos:end="31:6">endif</cpp:directive></cpp:endif>

    if <condition pos:start="33:8" pos:end="33:17">(<expr pos:start="33:9" pos:end="33:16"><name pos:start="33:9" pos:end="33:16"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:16">aflag</name></name></expr>)</condition> <block pos:start="33:19" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:29">

        <expr_stmt pos:start="35:9" pos:end="35:29"><expr pos:start="35:9" pos:end="35:28"><call pos:start="35:9" pos:end="35:28"><name pos:start="35:9" pos:end="35:26">gen_op_addl_EDI_T0</name><argument_list pos:start="35:27" pos:end="35:28">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="37:7" pos:end="41:5">else <block pos:start="37:12" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:29">

        <expr_stmt pos:start="39:9" pos:end="39:29"><expr pos:start="39:9" pos:end="39:28"><call pos:start="39:9" pos:end="39:28"><name pos:start="39:9" pos:end="39:26">gen_op_addw_EDI_T0</name><argument_list pos:start="39:27" pos:end="39:28">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
