<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21474.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:22">apic_get_interrupt</name><parameter_list pos:start="1:23" pos:end="1:38">(<parameter pos:start="1:24" pos:end="1:37"><decl pos:start="1:24" pos:end="1:37"><type pos:start="1:24" pos:end="1:36"><name pos:start="1:24" pos:end="1:34">DeviceState</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">d</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:17">

    <decl_stmt pos:start="5:5" pos:end="5:56"><decl pos:start="5:5" pos:end="5:55"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">APICState</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">s</name> <init pos:start="5:18" pos:end="5:55">= <expr pos:start="5:20" pos:end="5:55"><call pos:start="5:20" pos:end="5:55"><name pos:start="5:20" pos:end="5:28">DO_UPCAST</name><argument_list pos:start="5:29" pos:end="5:55">(<argument pos:start="5:30" pos:end="5:38"><expr pos:start="5:30" pos:end="5:38"><name pos:start="5:30" pos:end="5:38">APICState</name></expr></argument>, <argument pos:start="5:41" pos:end="5:51"><expr pos:start="5:41" pos:end="5:51"><name pos:start="5:41" pos:end="5:51"><name pos:start="5:41" pos:end="5:46">busdev</name><operator pos:start="5:47" pos:end="5:47">.</operator><name pos:start="5:48" pos:end="5:51">qdev</name></name></expr></argument>, <argument pos:start="5:54" pos:end="5:54"><expr pos:start="5:54" pos:end="5:54"><name pos:start="5:54" pos:end="5:54">d</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">intno</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="13:14">/* if the APIC is installed or enabled, we let the 8259 handle the

       IRQs */</comment>

    <if_stmt pos:start="15:5" pos:end="17:18"><if pos:start="15:5" pos:end="17:18">if <condition pos:start="15:8" pos:end="15:11">(<expr pos:start="15:9" pos:end="15:10"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:10">s</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:18"><block_content pos:start="17:9" pos:end="17:18">

        <return pos:start="17:9" pos:end="17:18">return <expr pos:start="17:16" pos:end="17:17"><operator pos:start="17:16" pos:end="17:16">-</operator><literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="21:18"><if pos:start="19:5" pos:end="21:18">if <condition pos:start="19:8" pos:end="19:44">(<expr pos:start="19:9" pos:end="19:43"><operator pos:start="19:9" pos:end="19:9">!</operator><operator pos:start="19:10" pos:end="19:10">(</operator><name pos:start="19:11" pos:end="19:25"><name pos:start="19:11" pos:end="19:11">s</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:25">spurious_vec</name></name> <operator pos:start="19:27" pos:end="19:27">&amp;</operator> <name pos:start="19:29" pos:end="19:42">APIC_SV_ENABLE</name><operator pos:start="19:43" pos:end="19:43">)</operator></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:18"><block_content pos:start="21:9" pos:end="21:18">

        <return pos:start="21:9" pos:end="21:18">return <expr pos:start="21:16" pos:end="21:17"><operator pos:start="21:16" pos:end="21:16">-</operator><literal type="number" pos:start="21:17" pos:end="21:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:36">/* XXX: spurious IRQ handling */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:45"><expr pos:start="27:5" pos:end="27:44"><name pos:start="27:5" pos:end="27:9">intno</name> <operator pos:start="27:11" pos:end="27:11">=</operator> <call pos:start="27:13" pos:end="27:44"><name pos:start="27:13" pos:end="27:36">get_highest_priority_int</name><argument_list pos:start="27:37" pos:end="27:44">(<argument pos:start="27:38" pos:end="27:43"><expr pos:start="27:38" pos:end="27:43"><name pos:start="27:38" pos:end="27:43"><name pos:start="27:38" pos:end="27:38">s</name><operator pos:start="27:39" pos:end="27:40">-&gt;</operator><name pos:start="27:41" pos:end="27:43">irr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="31:18"><if pos:start="29:5" pos:end="31:18">if <condition pos:start="29:8" pos:end="29:18">(<expr pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:13">intno</name> <operator pos:start="29:15" pos:end="29:15">&lt;</operator> <literal type="number" pos:start="29:17" pos:end="29:17">0</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:18"><block_content pos:start="31:9" pos:end="31:18">

        <return pos:start="31:9" pos:end="31:18">return <expr pos:start="31:16" pos:end="31:17"><operator pos:start="31:16" pos:end="31:16">-</operator><literal type="number" pos:start="31:17" pos:end="31:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="33:5" pos:end="35:38"><if pos:start="33:5" pos:end="35:38">if <condition pos:start="33:8" pos:end="33:34">(<expr pos:start="33:9" pos:end="33:33"><name pos:start="33:9" pos:end="33:14"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:14">tpr</name></name> <operator pos:start="33:16" pos:end="33:17">&amp;&amp;</operator> <name pos:start="33:19" pos:end="33:23">intno</name> <operator pos:start="33:25" pos:end="33:26">&lt;=</operator> <name pos:start="33:28" pos:end="33:33"><name pos:start="33:28" pos:end="33:28">s</name><operator pos:start="33:29" pos:end="33:30">-&gt;</operator><name pos:start="33:31" pos:end="33:33">tpr</name></name></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:38"><block_content pos:start="35:9" pos:end="35:38">

        <return pos:start="35:9" pos:end="35:38">return <expr pos:start="35:16" pos:end="35:37"><name pos:start="35:16" pos:end="35:30"><name pos:start="35:16" pos:end="35:16">s</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:30">spurious_vec</name></name> <operator pos:start="35:32" pos:end="35:32">&amp;</operator> <literal type="number" pos:start="35:34" pos:end="35:37">0xff</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:29"><expr pos:start="37:5" pos:end="37:28"><call pos:start="37:5" pos:end="37:28"><name pos:start="37:5" pos:end="37:13">reset_bit</name><argument_list pos:start="37:14" pos:end="37:28">(<argument pos:start="37:15" pos:end="37:20"><expr pos:start="37:15" pos:end="37:20"><name pos:start="37:15" pos:end="37:20"><name pos:start="37:15" pos:end="37:15">s</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:20">irr</name></name></expr></argument>, <argument pos:start="37:23" pos:end="37:27"><expr pos:start="37:23" pos:end="37:27"><name pos:start="37:23" pos:end="37:27">intno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:27"><expr pos:start="39:5" pos:end="39:26"><call pos:start="39:5" pos:end="39:26"><name pos:start="39:5" pos:end="39:11">set_bit</name><argument_list pos:start="39:12" pos:end="39:26">(<argument pos:start="39:13" pos:end="39:18"><expr pos:start="39:13" pos:end="39:18"><name pos:start="39:13" pos:end="39:18"><name pos:start="39:13" pos:end="39:13">s</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:18">isr</name></name></expr></argument>, <argument pos:start="39:21" pos:end="39:25"><expr pos:start="39:21" pos:end="39:25"><name pos:start="39:21" pos:end="39:25">intno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:23"><expr pos:start="41:5" pos:end="41:22"><call pos:start="41:5" pos:end="41:22"><name pos:start="41:5" pos:end="41:19">apic_update_irq</name><argument_list pos:start="41:20" pos:end="41:22">(<argument pos:start="41:21" pos:end="41:21"><expr pos:start="41:21" pos:end="41:21"><name pos:start="41:21" pos:end="41:21">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="43:5" pos:end="43:17">return <expr pos:start="43:12" pos:end="43:16"><name pos:start="43:12" pos:end="43:16">intno</name></expr>;</return>

</block_content>}</block></function>
</unit>
