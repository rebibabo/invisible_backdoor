<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23850.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">SocketAddress_to_str</name><parameter_list pos:start="1:32" pos:end="5:63">(<parameter pos:start="1:33" pos:end="1:42"><decl pos:start="1:33" pos:end="1:42"><type pos:start="1:33" pos:end="1:42"><name pos:start="1:33" pos:end="1:36">char</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:42">dest</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:55"><decl pos:start="1:45" pos:end="1:55"><type pos:start="1:45" pos:end="1:55"><name pos:start="1:45" pos:end="1:47">int</name></type> <name pos:start="1:49" pos:end="1:55">max_len</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:50"><decl pos:start="3:33" pos:end="3:50"><type pos:start="3:33" pos:end="3:50"><specifier pos:start="3:33" pos:end="3:37">const</specifier> <name pos:start="3:39" pos:end="3:42">char</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:50">prefix</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:71"><decl pos:start="3:53" pos:end="3:71"><type pos:start="3:53" pos:end="3:71"><name pos:start="3:53" pos:end="3:65">SocketAddress</name> <modifier pos:start="3:67" pos:end="3:67">*</modifier></type><name pos:start="3:68" pos:end="3:71">addr</name></decl></parameter>,

                                <parameter pos:start="5:33" pos:end="5:46"><decl pos:start="5:33" pos:end="5:46"><type pos:start="5:33" pos:end="5:46"><name pos:start="5:33" pos:end="5:36">bool</name></type> <name pos:start="5:38" pos:end="5:46">is_listen</name></decl></parameter>, <parameter pos:start="5:49" pos:end="5:62"><decl pos:start="5:49" pos:end="5:62"><type pos:start="5:49" pos:end="5:62"><name pos:start="5:49" pos:end="5:52">bool</name></type> <name pos:start="5:54" pos:end="5:62">is_telnet</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="43:1">{<block_content pos:start="9:5" pos:end="41:5">

    <switch pos:start="9:5" pos:end="41:5">switch <condition pos:start="9:12" pos:end="9:23">(<expr pos:start="9:13" pos:end="9:22"><name pos:start="9:13" pos:end="9:22"><name pos:start="9:13" pos:end="9:16">addr</name><operator pos:start="9:17" pos:end="9:18">-&gt;</operator><name pos:start="9:19" pos:end="9:22">type</name></name></expr>)</condition> <block pos:start="9:25" pos:end="41:5">{<block_content pos:start="11:5" pos:end="39:16">

    <case pos:start="11:5" pos:end="11:34">case <expr pos:start="11:10" pos:end="11:33"><name pos:start="11:10" pos:end="11:33">SOCKET_ADDRESS_KIND_INET</name></expr>:</case>

        <return pos:start="13:9" pos:end="17:72">return <expr pos:start="13:16" pos:end="17:71"><call pos:start="13:16" pos:end="17:71"><name pos:start="13:16" pos:end="13:23">snprintf</name><argument_list pos:start="13:24" pos:end="17:71">(<argument pos:start="13:25" pos:end="13:28"><expr pos:start="13:25" pos:end="13:28"><name pos:start="13:25" pos:end="13:28">dest</name></expr></argument>, <argument pos:start="13:31" pos:end="13:37"><expr pos:start="13:31" pos:end="13:37"><name pos:start="13:31" pos:end="13:37">max_len</name></expr></argument>, <argument pos:start="13:40" pos:end="13:53"><expr pos:start="13:40" pos:end="13:53"><literal type="string" pos:start="13:40" pos:end="13:53">"%s%s:%s:%s%s"</literal></expr></argument>, <argument pos:start="13:56" pos:end="13:61"><expr pos:start="13:56" pos:end="13:61"><name pos:start="13:56" pos:end="13:61">prefix</name></expr></argument>,

                        <argument pos:start="15:25" pos:end="15:52"><expr pos:start="15:25" pos:end="15:52"><ternary pos:start="15:25" pos:end="15:52"><condition pos:start="15:25" pos:end="15:35"><expr pos:start="15:25" pos:end="15:33"><name pos:start="15:25" pos:end="15:33">is_telnet</name></expr> ?</condition><then pos:start="15:37" pos:end="15:44"> <expr pos:start="15:37" pos:end="15:44"><literal type="string" pos:start="15:37" pos:end="15:44">"telnet"</literal></expr> </then><else pos:start="15:46" pos:end="15:52">: <expr pos:start="15:48" pos:end="15:52"><literal type="string" pos:start="15:48" pos:end="15:52">"tcp"</literal></expr></else></ternary></expr></argument>, <argument pos:start="15:55" pos:end="15:72"><expr pos:start="15:55" pos:end="15:72"><name pos:start="15:55" pos:end="15:72"><name pos:start="15:55" pos:end="15:58">addr</name><operator pos:start="15:59" pos:end="15:60">-&gt;</operator><name pos:start="15:61" pos:end="15:61">u</name><operator pos:start="15:62" pos:end="15:62">.</operator><name pos:start="15:63" pos:end="15:66">inet</name><operator pos:start="15:67" pos:end="15:68">-&gt;</operator><name pos:start="15:69" pos:end="15:72">host</name></name></expr></argument>,

                        <argument pos:start="17:25" pos:end="17:42"><expr pos:start="17:25" pos:end="17:42"><name pos:start="17:25" pos:end="17:42"><name pos:start="17:25" pos:end="17:28">addr</name><operator pos:start="17:29" pos:end="17:30">-&gt;</operator><name pos:start="17:31" pos:end="17:31">u</name><operator pos:start="17:32" pos:end="17:32">.</operator><name pos:start="17:33" pos:end="17:36">inet</name><operator pos:start="17:37" pos:end="17:38">-&gt;</operator><name pos:start="17:39" pos:end="17:42">port</name></name></expr></argument>, <argument pos:start="17:45" pos:end="17:70"><expr pos:start="17:45" pos:end="17:70"><ternary pos:start="17:45" pos:end="17:70"><condition pos:start="17:45" pos:end="17:55"><expr pos:start="17:45" pos:end="17:53"><name pos:start="17:45" pos:end="17:53">is_listen</name></expr> ?</condition><then pos:start="17:57" pos:end="17:65"> <expr pos:start="17:57" pos:end="17:65"><literal type="string" pos:start="17:57" pos:end="17:65">",server"</literal></expr> </then><else pos:start="17:67" pos:end="17:70">: <expr pos:start="17:69" pos:end="17:70"><literal type="string" pos:start="17:69" pos:end="17:70">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</return>

        <break pos:start="19:9" pos:end="19:14">break;</break>

    <case pos:start="21:5" pos:end="21:34">case <expr pos:start="21:10" pos:end="21:33"><name pos:start="21:10" pos:end="21:33">SOCKET_ADDRESS_KIND_UNIX</name></expr>:</case>

        <return pos:start="23:9" pos:end="25:74">return <expr pos:start="23:16" pos:end="25:73"><call pos:start="23:16" pos:end="25:73"><name pos:start="23:16" pos:end="23:23">snprintf</name><argument_list pos:start="23:24" pos:end="25:73">(<argument pos:start="23:25" pos:end="23:28"><expr pos:start="23:25" pos:end="23:28"><name pos:start="23:25" pos:end="23:28">dest</name></expr></argument>, <argument pos:start="23:31" pos:end="23:37"><expr pos:start="23:31" pos:end="23:37"><name pos:start="23:31" pos:end="23:37">max_len</name></expr></argument>, <argument pos:start="23:40" pos:end="23:52"><expr pos:start="23:40" pos:end="23:52"><literal type="string" pos:start="23:40" pos:end="23:52">"%sunix:%s%s"</literal></expr></argument>, <argument pos:start="23:55" pos:end="23:60"><expr pos:start="23:55" pos:end="23:60"><name pos:start="23:55" pos:end="23:60">prefix</name></expr></argument>,

                        <argument pos:start="25:25" pos:end="25:44"><expr pos:start="25:25" pos:end="25:44"><name pos:start="25:25" pos:end="25:44"><name pos:start="25:25" pos:end="25:28">addr</name><operator pos:start="25:29" pos:end="25:30">-&gt;</operator><name pos:start="25:31" pos:end="25:31">u</name><operator pos:start="25:32" pos:end="25:32">.</operator><name pos:start="25:33" pos:end="25:38">q_unix</name><operator pos:start="25:39" pos:end="25:40">-&gt;</operator><name pos:start="25:41" pos:end="25:44">path</name></name></expr></argument>, <argument pos:start="25:47" pos:end="25:72"><expr pos:start="25:47" pos:end="25:72"><ternary pos:start="25:47" pos:end="25:72"><condition pos:start="25:47" pos:end="25:57"><expr pos:start="25:47" pos:end="25:55"><name pos:start="25:47" pos:end="25:55">is_listen</name></expr> ?</condition><then pos:start="25:59" pos:end="25:67"> <expr pos:start="25:59" pos:end="25:67"><literal type="string" pos:start="25:59" pos:end="25:67">",server"</literal></expr> </then><else pos:start="25:69" pos:end="25:72">: <expr pos:start="25:71" pos:end="25:72"><literal type="string" pos:start="25:71" pos:end="25:72">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</return>

        <break pos:start="27:9" pos:end="27:14">break;</break>

    <case pos:start="29:5" pos:end="29:32">case <expr pos:start="29:10" pos:end="29:31"><name pos:start="29:10" pos:end="29:31">SOCKET_ADDRESS_KIND_FD</name></expr>:</case>

        <return pos:start="31:9" pos:end="33:52">return <expr pos:start="31:16" pos:end="33:51"><call pos:start="31:16" pos:end="33:51"><name pos:start="31:16" pos:end="31:23">snprintf</name><argument_list pos:start="31:24" pos:end="33:51">(<argument pos:start="31:25" pos:end="31:28"><expr pos:start="31:25" pos:end="31:28"><name pos:start="31:25" pos:end="31:28">dest</name></expr></argument>, <argument pos:start="31:31" pos:end="31:37"><expr pos:start="31:31" pos:end="31:37"><name pos:start="31:31" pos:end="31:37">max_len</name></expr></argument>, <argument pos:start="31:40" pos:end="31:50"><expr pos:start="31:40" pos:end="31:50"><literal type="string" pos:start="31:40" pos:end="31:50">"%sfd:%s%s"</literal></expr></argument>, <argument pos:start="31:53" pos:end="31:58"><expr pos:start="31:53" pos:end="31:58"><name pos:start="31:53" pos:end="31:58">prefix</name></expr></argument>, <argument pos:start="31:61" pos:end="31:75"><expr pos:start="31:61" pos:end="31:75"><name pos:start="31:61" pos:end="31:75"><name pos:start="31:61" pos:end="31:64">addr</name><operator pos:start="31:65" pos:end="31:66">-&gt;</operator><name pos:start="31:67" pos:end="31:67">u</name><operator pos:start="31:68" pos:end="31:68">.</operator><name pos:start="31:69" pos:end="31:70">fd</name><operator pos:start="31:71" pos:end="31:72">-&gt;</operator><name pos:start="31:73" pos:end="31:75">str</name></name></expr></argument>,

                        <argument pos:start="33:25" pos:end="33:50"><expr pos:start="33:25" pos:end="33:50"><ternary pos:start="33:25" pos:end="33:50"><condition pos:start="33:25" pos:end="33:35"><expr pos:start="33:25" pos:end="33:33"><name pos:start="33:25" pos:end="33:33">is_listen</name></expr> ?</condition><then pos:start="33:37" pos:end="33:45"> <expr pos:start="33:37" pos:end="33:45"><literal type="string" pos:start="33:37" pos:end="33:45">",server"</literal></expr> </then><else pos:start="33:47" pos:end="33:50">: <expr pos:start="33:49" pos:end="33:50"><literal type="string" pos:start="33:49" pos:end="33:50">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</return>

        <break pos:start="35:9" pos:end="35:14">break;</break>

    <default pos:start="37:5" pos:end="37:12">default:</default>

        <expr_stmt pos:start="39:9" pos:end="39:16"><expr pos:start="39:9" pos:end="39:15"><call pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:13">abort</name><argument_list pos:start="39:14" pos:end="39:15">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
