<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/969.c" pos:tabs="8"><function pos:start="1:1" pos:end="19:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">intel_hda_exit</name><parameter_list pos:start="1:26" pos:end="1:41">(<parameter pos:start="1:27" pos:end="1:40"><decl pos:start="1:27" pos:end="1:40"><type pos:start="1:27" pos:end="1:37"><name pos:start="1:27" pos:end="1:35">PCIDevice</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">pci</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="19:1">{<block_content pos:start="5:5" pos:end="17:13">

    <decl_stmt pos:start="5:5" pos:end="5:58"><decl pos:start="5:5" pos:end="5:57"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">IntelHDAState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">d</name> <init pos:start="5:22" pos:end="5:57">= <expr pos:start="5:24" pos:end="5:57"><call pos:start="5:24" pos:end="5:57"><name pos:start="5:24" pos:end="5:32">DO_UPCAST</name><argument_list pos:start="5:33" pos:end="5:57">(<argument pos:start="5:34" pos:end="5:46"><expr pos:start="5:34" pos:end="5:46"><name pos:start="5:34" pos:end="5:46">IntelHDAState</name></expr></argument>, <argument pos:start="5:49" pos:end="5:51"><expr pos:start="5:49" pos:end="5:51"><name pos:start="5:49" pos:end="5:51">pci</name></expr></argument>, <argument pos:start="5:54" pos:end="5:56"><expr pos:start="5:54" pos:end="5:56"><name pos:start="5:54" pos:end="5:56">pci</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:15">(<expr pos:start="9:9" pos:end="9:14"><name pos:start="9:9" pos:end="9:14"><name pos:start="9:9" pos:end="9:9">d</name><operator pos:start="9:10" pos:end="9:11">-&gt;</operator><name pos:start="9:12" pos:end="9:14">msi</name></name></expr>)</condition> <block pos:start="9:17" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:28">

        <expr_stmt pos:start="11:9" pos:end="11:28"><expr pos:start="11:9" pos:end="11:27"><call pos:start="11:9" pos:end="11:27"><name pos:start="11:9" pos:end="11:18">msi_uninit</name><argument_list pos:start="11:19" pos:end="11:27">(<argument pos:start="11:20" pos:end="11:26"><expr pos:start="11:20" pos:end="11:26"><operator pos:start="11:20" pos:end="11:20">&amp;</operator><name pos:start="11:21" pos:end="11:26"><name pos:start="11:21" pos:end="11:21">d</name><operator pos:start="11:22" pos:end="11:23">-&gt;</operator><name pos:start="11:24" pos:end="11:26">pci</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:43"><expr pos:start="15:5" pos:end="15:42"><call pos:start="15:5" pos:end="15:42"><name pos:start="15:5" pos:end="15:28">cpu_unregister_io_memory</name><argument_list pos:start="15:29" pos:end="15:42">(<argument pos:start="15:30" pos:end="15:41"><expr pos:start="15:30" pos:end="15:41"><name pos:start="15:30" pos:end="15:41"><name pos:start="15:30" pos:end="15:30">d</name><operator pos:start="15:31" pos:end="15:32">-&gt;</operator><name pos:start="15:33" pos:end="15:41">mmio_addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="17:5" pos:end="17:13">return <expr pos:start="17:12" pos:end="17:12"><literal type="number" pos:start="17:12" pos:end="17:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
