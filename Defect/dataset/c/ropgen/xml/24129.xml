<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24129.c" pos:tabs="8"><function pos:start="1:1" pos:end="421:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">h264_slice_header_parse</name><parameter_list pos:start="1:35" pos:end="3:55">(<parameter pos:start="1:36" pos:end="1:55"><decl pos:start="1:36" pos:end="1:55"><type pos:start="1:36" pos:end="1:55"><specifier pos:start="1:36" pos:end="1:40">const</specifier> <name pos:start="1:42" pos:end="1:52">H264Context</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:55">h</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:77"><decl pos:start="1:58" pos:end="1:77"><type pos:start="1:58" pos:end="1:77"><name pos:start="1:58" pos:end="1:73">H264SliceContext</name> <modifier pos:start="1:75" pos:end="1:75">*</modifier></type><name pos:start="1:76" pos:end="1:77">sl</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:54"><decl pos:start="3:36" pos:end="3:54"><type pos:start="3:36" pos:end="3:54"><specifier pos:start="3:36" pos:end="3:40">const</specifier> <name pos:start="3:42" pos:end="3:49">H2645NAL</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:54">nal</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="421:1">{<block_content pos:start="7:5" pos:end="419:13">

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:15"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">SPS</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:18">sps</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:15"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">PPS</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:18">pps</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:36"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:27">slice_type</name></decl>, <decl pos:start="13:30" pos:end="13:32"><type ref="prev" pos:start="13:5" pos:end="13:16"/><name pos:start="13:30" pos:end="13:32">tmp</name></decl>, <decl pos:start="13:35" pos:end="13:35"><type ref="prev" pos:start="13:5" pos:end="13:16"/><name pos:start="13:35" pos:end="13:35">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:42"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:22">field_pic_flag</name></decl>, <decl pos:start="15:25" pos:end="15:41"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:25" pos:end="15:41">bottom_field_flag</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:62"><decl pos:start="17:5" pos:end="17:61"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:19">first_slice</name> <init pos:start="17:21" pos:end="17:61">= <expr pos:start="17:23" pos:end="17:61"><name pos:start="17:23" pos:end="17:24">sl</name> <operator pos:start="17:26" pos:end="17:27">==</operator> <name pos:start="17:29" pos:end="17:40"><name pos:start="17:29" pos:end="17:29">h</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:40">slice_ctx</name></name> <operator pos:start="17:42" pos:end="17:43">&amp;&amp;</operator> <operator pos:start="17:45" pos:end="17:45">!</operator><name pos:start="17:46" pos:end="17:61"><name pos:start="17:46" pos:end="17:46">h</name><operator pos:start="17:47" pos:end="17:48">-&gt;</operator><name pos:start="17:49" pos:end="17:61">current_slice</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:26"><decl pos:start="19:5" pos:end="19:25"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:25">picture_structure</name></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="25:39"><if pos:start="23:5" pos:end="25:39">if <condition pos:start="23:8" pos:end="23:20">(<expr pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:19">first_slice</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:39"><block_content pos:start="25:9" pos:end="25:39">

        <expr_stmt pos:start="25:9" pos:end="25:39"><expr pos:start="25:9" pos:end="25:38"><call pos:start="25:9" pos:end="25:38"><name pos:start="25:9" pos:end="25:18">av_assert0</name><argument_list pos:start="25:19" pos:end="25:38">(<argument pos:start="25:20" pos:end="25:37"><expr pos:start="25:20" pos:end="25:37"><operator pos:start="25:20" pos:end="25:20">!</operator><name pos:start="25:21" pos:end="25:37"><name pos:start="25:21" pos:end="25:21">h</name><operator pos:start="25:22" pos:end="25:23">-&gt;</operator><name pos:start="25:24" pos:end="25:37">setup_finished</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:52"><expr pos:start="29:5" pos:end="29:51"><name pos:start="29:5" pos:end="29:21"><name pos:start="29:5" pos:end="29:6">sl</name><operator pos:start="29:7" pos:end="29:8">-&gt;</operator><name pos:start="29:9" pos:end="29:21">first_mb_addr</name></name> <operator pos:start="29:23" pos:end="29:23">=</operator> <call pos:start="29:25" pos:end="29:51"><name pos:start="29:25" pos:end="29:42">get_ue_golomb_long</name><argument_list pos:start="29:43" pos:end="29:51">(<argument pos:start="29:44" pos:end="29:50"><expr pos:start="29:44" pos:end="29:50"><operator pos:start="29:44" pos:end="29:44">&amp;</operator><name pos:start="29:45" pos:end="29:50"><name pos:start="29:45" pos:end="29:46">sl</name><operator pos:start="29:47" pos:end="29:48">-&gt;</operator><name pos:start="29:49" pos:end="29:50">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:43"><expr pos:start="33:5" pos:end="33:42"><name pos:start="33:5" pos:end="33:14">slice_type</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <call pos:start="33:18" pos:end="33:42"><name pos:start="33:18" pos:end="33:33">get_ue_golomb_31</name><argument_list pos:start="33:34" pos:end="33:42">(<argument pos:start="33:35" pos:end="33:41"><expr pos:start="33:35" pos:end="33:41"><operator pos:start="33:35" pos:end="33:35">&amp;</operator><name pos:start="33:36" pos:end="33:41"><name pos:start="33:36" pos:end="33:37">sl</name><operator pos:start="33:38" pos:end="33:39">-&gt;</operator><name pos:start="33:40" pos:end="33:41">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="45:5"><if pos:start="35:5" pos:end="45:5">if <condition pos:start="35:8" pos:end="35:23">(<expr pos:start="35:9" pos:end="35:22"><name pos:start="35:9" pos:end="35:18">slice_type</name> <operator pos:start="35:20" pos:end="35:20">&gt;</operator> <literal type="number" pos:start="35:22" pos:end="35:22">9</literal></expr>)</condition> <block pos:start="35:25" pos:end="45:5">{<block_content pos:start="37:9" pos:end="43:35">

        <expr_stmt pos:start="37:9" pos:end="41:46"><expr pos:start="37:9" pos:end="41:45"><call pos:start="37:9" pos:end="41:45"><name pos:start="37:9" pos:end="37:14">av_log</name><argument_list pos:start="37:15" pos:end="41:45">(<argument pos:start="37:16" pos:end="37:23"><expr pos:start="37:16" pos:end="37:23"><name pos:start="37:16" pos:end="37:23"><name pos:start="37:16" pos:end="37:16">h</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:23">avctx</name></name></expr></argument>, <argument pos:start="37:26" pos:end="37:37"><expr pos:start="37:26" pos:end="37:37"><name pos:start="37:26" pos:end="37:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="39:16" pos:end="39:48"><expr pos:start="39:16" pos:end="39:48"><literal type="string" pos:start="39:16" pos:end="39:48">"slice type %d too large at %d\n"</literal></expr></argument>,

               <argument pos:start="41:16" pos:end="41:25"><expr pos:start="41:16" pos:end="41:25"><name pos:start="41:16" pos:end="41:25">slice_type</name></expr></argument>, <argument pos:start="41:28" pos:end="41:44"><expr pos:start="41:28" pos:end="41:44"><name pos:start="41:28" pos:end="41:44"><name pos:start="41:28" pos:end="41:29">sl</name><operator pos:start="41:30" pos:end="41:31">-&gt;</operator><name pos:start="41:32" pos:end="41:44">first_mb_addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:35">return <expr pos:start="43:16" pos:end="43:34"><name pos:start="43:16" pos:end="43:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="47:5" pos:end="55:33"><if pos:start="47:5" pos:end="53:5">if <condition pos:start="47:8" pos:end="47:23">(<expr pos:start="47:9" pos:end="47:22"><name pos:start="47:9" pos:end="47:18">slice_type</name> <operator pos:start="47:20" pos:end="47:20">&gt;</operator> <literal type="number" pos:start="47:22" pos:end="47:22">4</literal></expr>)</condition> <block pos:start="47:25" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:33">

        <expr_stmt pos:start="49:9" pos:end="49:24"><expr pos:start="49:9" pos:end="49:23"><name pos:start="49:9" pos:end="49:18">slice_type</name> <operator pos:start="49:20" pos:end="49:21">-=</operator> <literal type="number" pos:start="49:23" pos:end="49:23">5</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:33"><expr pos:start="51:9" pos:end="51:32"><name pos:start="51:9" pos:end="51:28"><name pos:start="51:9" pos:end="51:10">sl</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:28">slice_type_fixed</name></name> <operator pos:start="51:30" pos:end="51:30">=</operator> <literal type="number" pos:start="51:32" pos:end="51:32">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="53:7" pos:end="55:33">else<block type="pseudo" pos:start="55:9" pos:end="55:33"><block_content pos:start="55:9" pos:end="55:33">

        <expr_stmt pos:start="55:9" pos:end="55:33"><expr pos:start="55:9" pos:end="55:32"><name pos:start="55:9" pos:end="55:28"><name pos:start="55:9" pos:end="55:10">sl</name><operator pos:start="55:11" pos:end="55:12">-&gt;</operator><name pos:start="55:13" pos:end="55:28">slice_type_fixed</name></name> <operator pos:start="55:30" pos:end="55:30">=</operator> <literal type="number" pos:start="55:32" pos:end="55:32">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:65"><expr pos:start="59:5" pos:end="59:64"><name pos:start="59:5" pos:end="59:14">slice_type</name>         <operator pos:start="59:24" pos:end="59:24">=</operator> <name pos:start="59:26" pos:end="59:64"><name pos:start="59:26" pos:end="59:52">ff_h264_golomb_to_pict_type</name><index pos:start="59:53" pos:end="59:64">[<expr pos:start="59:54" pos:end="59:63"><name pos:start="59:54" pos:end="59:63">slice_type</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:36"><expr pos:start="61:5" pos:end="61:35"><name pos:start="61:5" pos:end="61:18"><name pos:start="61:5" pos:end="61:6">sl</name><operator pos:start="61:7" pos:end="61:8">-&gt;</operator><name pos:start="61:9" pos:end="61:18">slice_type</name></name>     <operator pos:start="61:24" pos:end="61:24">=</operator> <name pos:start="61:26" pos:end="61:35">slice_type</name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:40"><expr pos:start="63:5" pos:end="63:39"><name pos:start="63:5" pos:end="63:22"><name pos:start="63:5" pos:end="63:6">sl</name><operator pos:start="63:7" pos:end="63:8">-&gt;</operator><name pos:start="63:9" pos:end="63:22">slice_type_nos</name></name> <operator pos:start="63:24" pos:end="63:24">=</operator> <name pos:start="63:26" pos:end="63:35">slice_type</name> <operator pos:start="63:37" pos:end="63:37">&amp;</operator> <literal type="number" pos:start="63:39" pos:end="63:39">3</literal></expr>;</expr_stmt>



    <if_stmt pos:start="67:5" pos:end="75:5"><if pos:start="67:5" pos:end="75:5">if <condition pos:start="67:8" pos:end="69:48">(<expr pos:start="67:9" pos:end="69:47"><name pos:start="67:9" pos:end="67:17"><name pos:start="67:9" pos:end="67:11">nal</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:17">type</name></name>  <operator pos:start="67:20" pos:end="67:21">==</operator> <name pos:start="67:23" pos:end="67:40">H264_NAL_IDR_SLICE</name> <operator pos:start="67:42" pos:end="67:43">&amp;&amp;</operator>

        <name pos:start="69:9" pos:end="69:26"><name pos:start="69:9" pos:end="69:10">sl</name><operator pos:start="69:11" pos:end="69:12">-&gt;</operator><name pos:start="69:13" pos:end="69:26">slice_type_nos</name></name> <operator pos:start="69:28" pos:end="69:29">!=</operator> <name pos:start="69:31" pos:end="69:47">AV_PICTURE_TYPE_I</name></expr>)</condition> <block pos:start="69:50" pos:end="75:5">{<block_content pos:start="71:9" pos:end="73:35">

        <expr_stmt pos:start="71:9" pos:end="71:82"><expr pos:start="71:9" pos:end="71:81"><call pos:start="71:9" pos:end="71:81"><name pos:start="71:9" pos:end="71:14">av_log</name><argument_list pos:start="71:15" pos:end="71:81">(<argument pos:start="71:16" pos:end="71:23"><expr pos:start="71:16" pos:end="71:23"><name pos:start="71:16" pos:end="71:23"><name pos:start="71:16" pos:end="71:16">h</name><operator pos:start="71:17" pos:end="71:18">-&gt;</operator><name pos:start="71:19" pos:end="71:23">avctx</name></name></expr></argument>, <argument pos:start="71:26" pos:end="71:37"><expr pos:start="71:26" pos:end="71:37"><name pos:start="71:26" pos:end="71:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="71:40" pos:end="71:80"><expr pos:start="71:40" pos:end="71:80"><literal type="string" pos:start="71:40" pos:end="71:80">"A non-intra slice in an IDR NAL unit.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="73:9" pos:end="73:35">return <expr pos:start="73:16" pos:end="73:34"><name pos:start="73:16" pos:end="73:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:40"><expr pos:start="79:5" pos:end="79:39"><name pos:start="79:5" pos:end="79:14"><name pos:start="79:5" pos:end="79:6">sl</name><operator pos:start="79:7" pos:end="79:8">-&gt;</operator><name pos:start="79:9" pos:end="79:14">pps_id</name></name> <operator pos:start="79:16" pos:end="79:16">=</operator> <call pos:start="79:18" pos:end="79:39"><name pos:start="79:18" pos:end="79:30">get_ue_golomb</name><argument_list pos:start="79:31" pos:end="79:39">(<argument pos:start="79:32" pos:end="79:38"><expr pos:start="79:32" pos:end="79:38"><operator pos:start="79:32" pos:end="79:32">&amp;</operator><name pos:start="79:33" pos:end="79:38"><name pos:start="79:33" pos:end="79:34">sl</name><operator pos:start="79:35" pos:end="79:36">-&gt;</operator><name pos:start="79:37" pos:end="79:38">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="81:5" pos:end="87:5"><if pos:start="81:5" pos:end="87:5">if <condition pos:start="81:8" pos:end="81:36">(<expr pos:start="81:9" pos:end="81:35"><name pos:start="81:9" pos:end="81:18"><name pos:start="81:9" pos:end="81:10">sl</name><operator pos:start="81:11" pos:end="81:12">-&gt;</operator><name pos:start="81:13" pos:end="81:18">pps_id</name></name> <operator pos:start="81:20" pos:end="81:21">&gt;=</operator> <name pos:start="81:23" pos:end="81:35">MAX_PPS_COUNT</name></expr>)</condition> <block pos:start="81:38" pos:end="87:5">{<block_content pos:start="83:9" pos:end="85:35">

        <expr_stmt pos:start="83:9" pos:end="83:79"><expr pos:start="83:9" pos:end="83:78"><call pos:start="83:9" pos:end="83:78"><name pos:start="83:9" pos:end="83:14">av_log</name><argument_list pos:start="83:15" pos:end="83:78">(<argument pos:start="83:16" pos:end="83:23"><expr pos:start="83:16" pos:end="83:23"><name pos:start="83:16" pos:end="83:23"><name pos:start="83:16" pos:end="83:16">h</name><operator pos:start="83:17" pos:end="83:18">-&gt;</operator><name pos:start="83:19" pos:end="83:23">avctx</name></name></expr></argument>, <argument pos:start="83:26" pos:end="83:37"><expr pos:start="83:26" pos:end="83:37"><name pos:start="83:26" pos:end="83:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="83:40" pos:end="83:65"><expr pos:start="83:40" pos:end="83:65"><literal type="string" pos:start="83:40" pos:end="83:65">"pps_id %u out of range\n"</literal></expr></argument>, <argument pos:start="83:68" pos:end="83:77"><expr pos:start="83:68" pos:end="83:77"><name pos:start="83:68" pos:end="83:77"><name pos:start="83:68" pos:end="83:69">sl</name><operator pos:start="83:70" pos:end="83:71">-&gt;</operator><name pos:start="83:72" pos:end="83:77">pps_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="85:9" pos:end="85:35">return <expr pos:start="85:16" pos:end="85:34"><name pos:start="85:16" pos:end="85:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="89:5" pos:end="99:5"><if pos:start="89:5" pos:end="99:5">if <condition pos:start="89:8" pos:end="89:36">(<expr pos:start="89:9" pos:end="89:35"><operator pos:start="89:9" pos:end="89:9">!</operator><name pos:start="89:10" pos:end="89:35"><name pos:start="89:10" pos:end="89:10">h</name><operator pos:start="89:11" pos:end="89:12">-&gt;</operator><name pos:start="89:13" pos:end="89:14">ps</name><operator pos:start="89:15" pos:end="89:15">.</operator><name pos:start="89:16" pos:end="89:23">pps_list</name><index pos:start="89:24" pos:end="89:35">[<expr pos:start="89:25" pos:end="89:34"><name pos:start="89:25" pos:end="89:34"><name pos:start="89:25" pos:end="89:26">sl</name><operator pos:start="89:27" pos:end="89:28">-&gt;</operator><name pos:start="89:29" pos:end="89:34">pps_id</name></name></expr>]</index></name></expr>)</condition> <block pos:start="89:38" pos:end="99:5">{<block_content pos:start="91:9" pos:end="97:35">

        <expr_stmt pos:start="91:9" pos:end="95:27"><expr pos:start="91:9" pos:end="95:26"><call pos:start="91:9" pos:end="95:26"><name pos:start="91:9" pos:end="91:14">av_log</name><argument_list pos:start="91:15" pos:end="95:26">(<argument pos:start="91:16" pos:end="91:23"><expr pos:start="91:16" pos:end="91:23"><name pos:start="91:16" pos:end="91:23"><name pos:start="91:16" pos:end="91:16">h</name><operator pos:start="91:17" pos:end="91:18">-&gt;</operator><name pos:start="91:19" pos:end="91:23">avctx</name></name></expr></argument>, <argument pos:start="91:26" pos:end="91:37"><expr pos:start="91:26" pos:end="91:37"><name pos:start="91:26" pos:end="91:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="93:16" pos:end="93:49"><expr pos:start="93:16" pos:end="93:49"><literal type="string" pos:start="93:16" pos:end="93:49">"non-existing PPS %u referenced\n"</literal></expr></argument>,

               <argument pos:start="95:16" pos:end="95:25"><expr pos:start="95:16" pos:end="95:25"><name pos:start="95:16" pos:end="95:25"><name pos:start="95:16" pos:end="95:17">sl</name><operator pos:start="95:18" pos:end="95:19">-&gt;</operator><name pos:start="95:20" pos:end="95:25">pps_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="97:9" pos:end="97:35">return <expr pos:start="97:16" pos:end="97:34"><name pos:start="97:16" pos:end="97:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:55"><expr pos:start="101:5" pos:end="101:54"><name pos:start="101:5" pos:end="101:7">pps</name> <operator pos:start="101:9" pos:end="101:9">=</operator> <operator pos:start="101:11" pos:end="101:11">(</operator><specifier pos:start="101:12" pos:end="101:16">const</specifier> <name pos:start="101:18" pos:end="101:20">PPS</name><operator pos:start="101:21" pos:end="101:21">*</operator><operator pos:start="101:22" pos:end="101:22">)</operator><name pos:start="101:23" pos:end="101:48"><name pos:start="101:23" pos:end="101:23">h</name><operator pos:start="101:24" pos:end="101:25">-&gt;</operator><name pos:start="101:26" pos:end="101:27">ps</name><operator pos:start="101:28" pos:end="101:28">.</operator><name pos:start="101:29" pos:end="101:36">pps_list</name><index pos:start="101:37" pos:end="101:48">[<expr pos:start="101:38" pos:end="101:47"><name pos:start="101:38" pos:end="101:47"><name pos:start="101:38" pos:end="101:39">sl</name><operator pos:start="101:40" pos:end="101:41">-&gt;</operator><name pos:start="101:42" pos:end="101:47">pps_id</name></name></expr>]</index></name><operator pos:start="101:49" pos:end="101:50">-&gt;</operator><name pos:start="101:51" pos:end="101:54">data</name></expr>;</expr_stmt>



    <if_stmt pos:start="105:5" pos:end="113:5"><if pos:start="105:5" pos:end="113:5">if <condition pos:start="105:8" pos:end="105:37">(<expr pos:start="105:9" pos:end="105:36"><operator pos:start="105:9" pos:end="105:9">!</operator><name pos:start="105:10" pos:end="105:36"><name pos:start="105:10" pos:end="105:10">h</name><operator pos:start="105:11" pos:end="105:12">-&gt;</operator><name pos:start="105:13" pos:end="105:14">ps</name><operator pos:start="105:15" pos:end="105:15">.</operator><name pos:start="105:16" pos:end="105:23">sps_list</name><index pos:start="105:24" pos:end="105:36">[<expr pos:start="105:25" pos:end="105:35"><name pos:start="105:25" pos:end="105:35"><name pos:start="105:25" pos:end="105:27">pps</name><operator pos:start="105:28" pos:end="105:29">-&gt;</operator><name pos:start="105:30" pos:end="105:35">sps_id</name></name></expr>]</index></name></expr>)</condition> <block pos:start="105:39" pos:end="113:5">{<block_content pos:start="107:9" pos:end="111:35">

        <expr_stmt pos:start="107:9" pos:end="109:64"><expr pos:start="107:9" pos:end="109:63"><call pos:start="107:9" pos:end="109:63"><name pos:start="107:9" pos:end="107:14">av_log</name><argument_list pos:start="107:15" pos:end="109:63">(<argument pos:start="107:16" pos:end="107:23"><expr pos:start="107:16" pos:end="107:23"><name pos:start="107:16" pos:end="107:23"><name pos:start="107:16" pos:end="107:16">h</name><operator pos:start="107:17" pos:end="107:18">-&gt;</operator><name pos:start="107:19" pos:end="107:23">avctx</name></name></expr></argument>, <argument pos:start="107:26" pos:end="107:37"><expr pos:start="107:26" pos:end="107:37"><name pos:start="107:26" pos:end="107:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="109:16" pos:end="109:49"><expr pos:start="109:16" pos:end="109:49"><literal type="string" pos:start="109:16" pos:end="109:49">"non-existing SPS %u referenced\n"</literal></expr></argument>, <argument pos:start="109:52" pos:end="109:62"><expr pos:start="109:52" pos:end="109:62"><name pos:start="109:52" pos:end="109:62"><name pos:start="109:52" pos:end="109:54">pps</name><operator pos:start="109:55" pos:end="109:56">-&gt;</operator><name pos:start="109:57" pos:end="109:62">sps_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="111:9" pos:end="111:35">return <expr pos:start="111:16" pos:end="111:34"><name pos:start="111:16" pos:end="111:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:56"><expr pos:start="115:5" pos:end="115:55"><name pos:start="115:5" pos:end="115:7">sps</name> <operator pos:start="115:9" pos:end="115:9">=</operator> <operator pos:start="115:11" pos:end="115:11">(</operator><specifier pos:start="115:12" pos:end="115:16">const</specifier> <name pos:start="115:18" pos:end="115:20">SPS</name><operator pos:start="115:21" pos:end="115:21">*</operator><operator pos:start="115:22" pos:end="115:22">)</operator><name pos:start="115:23" pos:end="115:49"><name pos:start="115:23" pos:end="115:23">h</name><operator pos:start="115:24" pos:end="115:25">-&gt;</operator><name pos:start="115:26" pos:end="115:27">ps</name><operator pos:start="115:28" pos:end="115:28">.</operator><name pos:start="115:29" pos:end="115:36">sps_list</name><index pos:start="115:37" pos:end="115:49">[<expr pos:start="115:38" pos:end="115:48"><name pos:start="115:38" pos:end="115:48"><name pos:start="115:38" pos:end="115:40">pps</name><operator pos:start="115:41" pos:end="115:42">-&gt;</operator><name pos:start="115:43" pos:end="115:48">sps_id</name></name></expr>]</index></name><operator pos:start="115:50" pos:end="115:51">-&gt;</operator><name pos:start="115:52" pos:end="115:55">data</name></expr>;</expr_stmt>



    <expr_stmt pos:start="119:5" pos:end="119:63"><expr pos:start="119:5" pos:end="119:62"><name pos:start="119:5" pos:end="119:17"><name pos:start="119:5" pos:end="119:6">sl</name><operator pos:start="119:7" pos:end="119:8">-&gt;</operator><name pos:start="119:9" pos:end="119:17">frame_num</name></name> <operator pos:start="119:19" pos:end="119:19">=</operator> <call pos:start="119:21" pos:end="119:62"><name pos:start="119:21" pos:end="119:28">get_bits</name><argument_list pos:start="119:29" pos:end="119:62">(<argument pos:start="119:30" pos:end="119:36"><expr pos:start="119:30" pos:end="119:36"><operator pos:start="119:30" pos:end="119:30">&amp;</operator><name pos:start="119:31" pos:end="119:36"><name pos:start="119:31" pos:end="119:32">sl</name><operator pos:start="119:33" pos:end="119:34">-&gt;</operator><name pos:start="119:35" pos:end="119:36">gb</name></name></expr></argument>, <argument pos:start="119:39" pos:end="119:61"><expr pos:start="119:39" pos:end="119:61"><name pos:start="119:39" pos:end="119:61"><name pos:start="119:39" pos:end="119:41">sps</name><operator pos:start="119:42" pos:end="119:43">-&gt;</operator><name pos:start="119:44" pos:end="119:61">log2_max_frame_num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="121:5" pos:end="133:5"><if pos:start="121:5" pos:end="133:5">if <condition pos:start="121:8" pos:end="121:21">(<expr pos:start="121:9" pos:end="121:20"><operator pos:start="121:9" pos:end="121:9">!</operator><name pos:start="121:10" pos:end="121:20">first_slice</name></expr>)</condition> <block pos:start="121:23" pos:end="133:5">{<block_content pos:start="123:9" pos:end="131:9">

        <if_stmt pos:start="123:9" pos:end="131:9"><if pos:start="123:9" pos:end="131:9">if <condition pos:start="123:12" pos:end="123:46">(<expr pos:start="123:13" pos:end="123:45"><name pos:start="123:13" pos:end="123:28"><name pos:start="123:13" pos:end="123:13">h</name><operator pos:start="123:14" pos:end="123:15">-&gt;</operator><name pos:start="123:16" pos:end="123:18">poc</name><operator pos:start="123:19" pos:end="123:19">.</operator><name pos:start="123:20" pos:end="123:28">frame_num</name></name> <operator pos:start="123:30" pos:end="123:31">!=</operator> <name pos:start="123:33" pos:end="123:45"><name pos:start="123:33" pos:end="123:34">sl</name><operator pos:start="123:35" pos:end="123:36">-&gt;</operator><name pos:start="123:37" pos:end="123:45">frame_num</name></name></expr>)</condition> <block pos:start="123:48" pos:end="131:9">{<block_content pos:start="125:13" pos:end="129:39">

            <expr_stmt pos:start="125:13" pos:end="127:52"><expr pos:start="125:13" pos:end="127:51"><call pos:start="125:13" pos:end="127:51"><name pos:start="125:13" pos:end="125:18">av_log</name><argument_list pos:start="125:19" pos:end="127:51">(<argument pos:start="125:20" pos:end="125:27"><expr pos:start="125:20" pos:end="125:27"><name pos:start="125:20" pos:end="125:27"><name pos:start="125:20" pos:end="125:20">h</name><operator pos:start="125:21" pos:end="125:22">-&gt;</operator><name pos:start="125:23" pos:end="125:27">avctx</name></name></expr></argument>, <argument pos:start="125:30" pos:end="125:41"><expr pos:start="125:30" pos:end="125:41"><name pos:start="125:30" pos:end="125:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="125:44" pos:end="125:77"><expr pos:start="125:44" pos:end="125:77"><literal type="string" pos:start="125:44" pos:end="125:77">"Frame num change from %d to %d\n"</literal></expr></argument>,

                   <argument pos:start="127:20" pos:end="127:35"><expr pos:start="127:20" pos:end="127:35"><name pos:start="127:20" pos:end="127:35"><name pos:start="127:20" pos:end="127:20">h</name><operator pos:start="127:21" pos:end="127:22">-&gt;</operator><name pos:start="127:23" pos:end="127:25">poc</name><operator pos:start="127:26" pos:end="127:26">.</operator><name pos:start="127:27" pos:end="127:35">frame_num</name></name></expr></argument>, <argument pos:start="127:38" pos:end="127:50"><expr pos:start="127:38" pos:end="127:50"><name pos:start="127:38" pos:end="127:50"><name pos:start="127:38" pos:end="127:39">sl</name><operator pos:start="127:40" pos:end="127:41">-&gt;</operator><name pos:start="127:42" pos:end="127:50">frame_num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="129:13" pos:end="129:39">return <expr pos:start="129:20" pos:end="129:38"><name pos:start="129:20" pos:end="129:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="137:5" pos:end="137:27"><expr pos:start="137:5" pos:end="137:26"><name pos:start="137:5" pos:end="137:16"><name pos:start="137:5" pos:end="137:6">sl</name><operator pos:start="137:7" pos:end="137:8">-&gt;</operator><name pos:start="137:9" pos:end="137:16">mb_mbaff</name></name>       <operator pos:start="137:24" pos:end="137:24">=</operator> <literal type="number" pos:start="137:26" pos:end="137:26">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="141:5" pos:end="169:5"><if pos:start="141:5" pos:end="145:5">if <condition pos:start="141:8" pos:end="141:33">(<expr pos:start="141:9" pos:end="141:32"><name pos:start="141:9" pos:end="141:32"><name pos:start="141:9" pos:end="141:11">sps</name><operator pos:start="141:12" pos:end="141:13">-&gt;</operator><name pos:start="141:14" pos:end="141:32">frame_mbs_only_flag</name></name></expr>)</condition> <block pos:start="141:35" pos:end="145:5">{<block_content pos:start="143:9" pos:end="143:39">

        <expr_stmt pos:start="143:9" pos:end="143:39"><expr pos:start="143:9" pos:end="143:38"><name pos:start="143:9" pos:end="143:25">picture_structure</name> <operator pos:start="143:27" pos:end="143:27">=</operator> <name pos:start="143:29" pos:end="143:38">PICT_FRAME</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="145:7" pos:end="169:5">else <block pos:start="145:12" pos:end="169:5">{<block_content pos:start="147:9" pos:end="167:9">

        <if_stmt pos:start="147:9" pos:end="153:9"><if pos:start="147:9" pos:end="153:9">if <condition pos:start="147:12" pos:end="147:79">(<expr pos:start="147:13" pos:end="147:78"><operator pos:start="147:13" pos:end="147:13">!</operator><name pos:start="147:14" pos:end="147:43"><name pos:start="147:14" pos:end="147:16">sps</name><operator pos:start="147:17" pos:end="147:18">-&gt;</operator><name pos:start="147:19" pos:end="147:43">direct_8x8_inference_flag</name></name> <operator pos:start="147:45" pos:end="147:46">&amp;&amp;</operator> <name pos:start="147:48" pos:end="147:57">slice_type</name> <operator pos:start="147:59" pos:end="147:60">==</operator> <name pos:start="147:62" pos:end="147:78">AV_PICTURE_TYPE_B</name></expr>)</condition> <block pos:start="147:81" pos:end="153:9">{<block_content pos:start="149:13" pos:end="151:22">

            <expr_stmt pos:start="149:13" pos:end="149:117"><expr pos:start="149:13" pos:end="149:116"><call pos:start="149:13" pos:end="149:116"><name pos:start="149:13" pos:end="149:18">av_log</name><argument_list pos:start="149:19" pos:end="149:116">(<argument pos:start="149:20" pos:end="149:27"><expr pos:start="149:20" pos:end="149:27"><name pos:start="149:20" pos:end="149:27"><name pos:start="149:20" pos:end="149:20">h</name><operator pos:start="149:21" pos:end="149:22">-&gt;</operator><name pos:start="149:23" pos:end="149:27">avctx</name></name></expr></argument>, <argument pos:start="149:30" pos:end="149:41"><expr pos:start="149:30" pos:end="149:41"><name pos:start="149:30" pos:end="149:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="149:44" pos:end="149:115"><expr pos:start="149:44" pos:end="149:115"><literal type="string" pos:start="149:44" pos:end="149:115">"This stream was generated by a broken encoder, invalid 8x8 inference\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="151:13" pos:end="151:22">return <expr pos:start="151:20" pos:end="151:21"><operator pos:start="151:20" pos:end="151:20">-</operator><literal type="number" pos:start="151:21" pos:end="151:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:44"><expr pos:start="155:9" pos:end="155:43"><name pos:start="155:9" pos:end="155:22">field_pic_flag</name> <operator pos:start="155:24" pos:end="155:24">=</operator> <call pos:start="155:26" pos:end="155:43"><name pos:start="155:26" pos:end="155:34">get_bits1</name><argument_list pos:start="155:35" pos:end="155:43">(<argument pos:start="155:36" pos:end="155:42"><expr pos:start="155:36" pos:end="155:42"><operator pos:start="155:36" pos:end="155:36">&amp;</operator><name pos:start="155:37" pos:end="155:42"><name pos:start="155:37" pos:end="155:38">sl</name><operator pos:start="155:39" pos:end="155:40">-&gt;</operator><name pos:start="155:41" pos:end="155:42">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="157:9" pos:end="167:9"><if pos:start="157:9" pos:end="163:9">if <condition pos:start="157:12" pos:end="157:27">(<expr pos:start="157:13" pos:end="157:26"><name pos:start="157:13" pos:end="157:26">field_pic_flag</name></expr>)</condition> <block pos:start="157:29" pos:end="163:9">{<block_content pos:start="159:13" pos:end="161:67">

            <expr_stmt pos:start="159:13" pos:end="159:51"><expr pos:start="159:13" pos:end="159:50"><name pos:start="159:13" pos:end="159:29">bottom_field_flag</name> <operator pos:start="159:31" pos:end="159:31">=</operator> <call pos:start="159:33" pos:end="159:50"><name pos:start="159:33" pos:end="159:41">get_bits1</name><argument_list pos:start="159:42" pos:end="159:50">(<argument pos:start="159:43" pos:end="159:49"><expr pos:start="159:43" pos:end="159:49"><operator pos:start="159:43" pos:end="159:43">&amp;</operator><name pos:start="159:44" pos:end="159:49"><name pos:start="159:44" pos:end="159:45">sl</name><operator pos:start="159:46" pos:end="159:47">-&gt;</operator><name pos:start="159:48" pos:end="159:49">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:67"><expr pos:start="161:13" pos:end="161:66"><name pos:start="161:13" pos:end="161:29">picture_structure</name> <operator pos:start="161:31" pos:end="161:31">=</operator> <name pos:start="161:33" pos:end="161:46">PICT_TOP_FIELD</name> <operator pos:start="161:48" pos:end="161:48">+</operator> <name pos:start="161:50" pos:end="161:66">bottom_field_flag</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="163:11" pos:end="167:9">else <block pos:start="163:16" pos:end="167:9">{<block_content pos:start="165:13" pos:end="165:43">

            <expr_stmt pos:start="165:13" pos:end="165:43"><expr pos:start="165:13" pos:end="165:42"><name pos:start="165:13" pos:end="165:29">picture_structure</name> <operator pos:start="165:31" pos:end="165:31">=</operator> <name pos:start="165:33" pos:end="165:42">PICT_FRAME</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="171:5" pos:end="171:51"><expr pos:start="171:5" pos:end="171:50"><name pos:start="171:5" pos:end="171:25"><name pos:start="171:5" pos:end="171:6">sl</name><operator pos:start="171:7" pos:end="171:8">-&gt;</operator><name pos:start="171:9" pos:end="171:25">picture_structure</name></name>      <operator pos:start="171:32" pos:end="171:32">=</operator> <name pos:start="171:34" pos:end="171:50">picture_structure</name></expr>;</expr_stmt>

    <expr_stmt pos:start="173:5" pos:end="173:65"><expr pos:start="173:5" pos:end="173:64"><name pos:start="173:5" pos:end="173:30"><name pos:start="173:5" pos:end="173:6">sl</name><operator pos:start="173:7" pos:end="173:8">-&gt;</operator><name pos:start="173:9" pos:end="173:30">mb_field_decoding_flag</name></name> <operator pos:start="173:32" pos:end="173:32">=</operator> <name pos:start="173:34" pos:end="173:50">picture_structure</name> <operator pos:start="173:52" pos:end="173:53">!=</operator> <name pos:start="173:55" pos:end="173:64">PICT_FRAME</name></expr>;</expr_stmt>



    <if_stmt pos:start="177:5" pos:end="189:5"><if pos:start="177:5" pos:end="183:5">if <condition pos:start="177:8" pos:end="177:40">(<expr pos:start="177:9" pos:end="177:39"><name pos:start="177:9" pos:end="177:25">picture_structure</name> <operator pos:start="177:27" pos:end="177:28">==</operator> <name pos:start="177:30" pos:end="177:39">PICT_FRAME</name></expr>)</condition> <block pos:start="177:42" pos:end="183:5">{<block_content pos:start="179:9" pos:end="181:56">

        <expr_stmt pos:start="179:9" pos:end="179:41"><expr pos:start="179:9" pos:end="179:40"><name pos:start="179:9" pos:end="179:24"><name pos:start="179:9" pos:end="179:10">sl</name><operator pos:start="179:11" pos:end="179:12">-&gt;</operator><name pos:start="179:13" pos:end="179:24">curr_pic_num</name></name> <operator pos:start="179:26" pos:end="179:26">=</operator> <name pos:start="179:28" pos:end="179:40"><name pos:start="179:28" pos:end="179:29">sl</name><operator pos:start="179:30" pos:end="179:31">-&gt;</operator><name pos:start="179:32" pos:end="179:40">frame_num</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:56"><expr pos:start="181:9" pos:end="181:55"><name pos:start="181:9" pos:end="181:23"><name pos:start="181:9" pos:end="181:10">sl</name><operator pos:start="181:11" pos:end="181:12">-&gt;</operator><name pos:start="181:13" pos:end="181:23">max_pic_num</name></name>  <operator pos:start="181:26" pos:end="181:26">=</operator> <literal type="number" pos:start="181:28" pos:end="181:28">1</literal> <operator pos:start="181:30" pos:end="181:31">&lt;&lt;</operator> <name pos:start="181:33" pos:end="181:55"><name pos:start="181:33" pos:end="181:35">sps</name><operator pos:start="181:36" pos:end="181:37">-&gt;</operator><name pos:start="181:38" pos:end="181:55">log2_max_frame_num</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="183:7" pos:end="189:5">else <block pos:start="183:12" pos:end="189:5">{<block_content pos:start="185:9" pos:end="187:62">

        <expr_stmt pos:start="185:9" pos:end="185:49"><expr pos:start="185:9" pos:end="185:48"><name pos:start="185:9" pos:end="185:24"><name pos:start="185:9" pos:end="185:10">sl</name><operator pos:start="185:11" pos:end="185:12">-&gt;</operator><name pos:start="185:13" pos:end="185:24">curr_pic_num</name></name> <operator pos:start="185:26" pos:end="185:26">=</operator> <literal type="number" pos:start="185:28" pos:end="185:28">2</literal> <operator pos:start="185:30" pos:end="185:30">*</operator> <name pos:start="185:32" pos:end="185:44"><name pos:start="185:32" pos:end="185:33">sl</name><operator pos:start="185:34" pos:end="185:35">-&gt;</operator><name pos:start="185:36" pos:end="185:44">frame_num</name></name> <operator pos:start="185:46" pos:end="185:46">+</operator> <literal type="number" pos:start="185:48" pos:end="185:48">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:62"><expr pos:start="187:9" pos:end="187:61"><name pos:start="187:9" pos:end="187:23"><name pos:start="187:9" pos:end="187:10">sl</name><operator pos:start="187:11" pos:end="187:12">-&gt;</operator><name pos:start="187:13" pos:end="187:23">max_pic_num</name></name>  <operator pos:start="187:26" pos:end="187:26">=</operator> <literal type="number" pos:start="187:28" pos:end="187:28">1</literal> <operator pos:start="187:30" pos:end="187:31">&lt;&lt;</operator> <operator pos:start="187:33" pos:end="187:33">(</operator><name pos:start="187:34" pos:end="187:56"><name pos:start="187:34" pos:end="187:36">sps</name><operator pos:start="187:37" pos:end="187:38">-&gt;</operator><name pos:start="187:39" pos:end="187:56">log2_max_frame_num</name></name> <operator pos:start="187:58" pos:end="187:58">+</operator> <literal type="number" pos:start="187:60" pos:end="187:60">1</literal><operator pos:start="187:61" pos:end="187:61">)</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="193:5" pos:end="195:36"><if pos:start="193:5" pos:end="195:36">if <condition pos:start="193:8" pos:end="193:40">(<expr pos:start="193:9" pos:end="193:39"><name pos:start="193:9" pos:end="193:17"><name pos:start="193:9" pos:end="193:11">nal</name><operator pos:start="193:12" pos:end="193:13">-&gt;</operator><name pos:start="193:14" pos:end="193:17">type</name></name> <operator pos:start="193:19" pos:end="193:20">==</operator> <name pos:start="193:22" pos:end="193:39">H264_NAL_IDR_SLICE</name></expr>)</condition><block type="pseudo" pos:start="195:9" pos:end="195:36"><block_content pos:start="195:9" pos:end="195:36">

        <expr_stmt pos:start="195:9" pos:end="195:36"><expr pos:start="195:9" pos:end="195:35"><call pos:start="195:9" pos:end="195:35"><name pos:start="195:9" pos:end="195:26">get_ue_golomb_long</name><argument_list pos:start="195:27" pos:end="195:35">(<argument pos:start="195:28" pos:end="195:34"><expr pos:start="195:28" pos:end="195:34"><operator pos:start="195:28" pos:end="195:28">&amp;</operator><name pos:start="195:29" pos:end="195:34"><name pos:start="195:29" pos:end="195:30">sl</name><operator pos:start="195:31" pos:end="195:32">-&gt;</operator><name pos:start="195:33" pos:end="195:34">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="195:38" pos:end="195:53">/* idr_pic_id */</comment>



    <if_stmt pos:start="199:5" pos:end="209:5"><if pos:start="199:5" pos:end="209:5">if <condition pos:start="199:8" pos:end="199:27">(<expr pos:start="199:9" pos:end="199:26"><name pos:start="199:9" pos:end="199:21"><name pos:start="199:9" pos:end="199:11">sps</name><operator pos:start="199:12" pos:end="199:13">-&gt;</operator><name pos:start="199:14" pos:end="199:21">poc_type</name></name> <operator pos:start="199:23" pos:end="199:24">==</operator> <literal type="number" pos:start="199:26" pos:end="199:26">0</literal></expr>)</condition> <block pos:start="199:29" pos:end="209:5">{<block_content pos:start="201:9" pos:end="207:58">

        <expr_stmt pos:start="201:9" pos:end="201:63"><expr pos:start="201:9" pos:end="201:62"><name pos:start="201:9" pos:end="201:19"><name pos:start="201:9" pos:end="201:10">sl</name><operator pos:start="201:11" pos:end="201:12">-&gt;</operator><name pos:start="201:13" pos:end="201:19">poc_lsb</name></name> <operator pos:start="201:21" pos:end="201:21">=</operator> <call pos:start="201:23" pos:end="201:62"><name pos:start="201:23" pos:end="201:30">get_bits</name><argument_list pos:start="201:31" pos:end="201:62">(<argument pos:start="201:32" pos:end="201:38"><expr pos:start="201:32" pos:end="201:38"><operator pos:start="201:32" pos:end="201:32">&amp;</operator><name pos:start="201:33" pos:end="201:38"><name pos:start="201:33" pos:end="201:34">sl</name><operator pos:start="201:35" pos:end="201:36">-&gt;</operator><name pos:start="201:37" pos:end="201:38">gb</name></name></expr></argument>, <argument pos:start="201:41" pos:end="201:61"><expr pos:start="201:41" pos:end="201:61"><name pos:start="201:41" pos:end="201:61"><name pos:start="201:41" pos:end="201:43">sps</name><operator pos:start="201:44" pos:end="201:45">-&gt;</operator><name pos:start="201:46" pos:end="201:61">log2_max_poc_lsb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="205:9" pos:end="207:58"><if pos:start="205:9" pos:end="207:58">if <condition pos:start="205:12" pos:end="205:75">(<expr pos:start="205:13" pos:end="205:74"><name pos:start="205:13" pos:end="205:34"><name pos:start="205:13" pos:end="205:15">pps</name><operator pos:start="205:16" pos:end="205:17">-&gt;</operator><name pos:start="205:18" pos:end="205:34">pic_order_present</name></name> <operator pos:start="205:36" pos:end="205:37">==</operator> <literal type="number" pos:start="205:39" pos:end="205:39">1</literal> <operator pos:start="205:41" pos:end="205:42">&amp;&amp;</operator> <name pos:start="205:44" pos:end="205:60">picture_structure</name> <operator pos:start="205:62" pos:end="205:63">==</operator> <name pos:start="205:65" pos:end="205:74">PICT_FRAME</name></expr>)</condition><block type="pseudo" pos:start="207:13" pos:end="207:58"><block_content pos:start="207:13" pos:end="207:58">

            <expr_stmt pos:start="207:13" pos:end="207:58"><expr pos:start="207:13" pos:end="207:57"><name pos:start="207:13" pos:end="207:32"><name pos:start="207:13" pos:end="207:14">sl</name><operator pos:start="207:15" pos:end="207:16">-&gt;</operator><name pos:start="207:17" pos:end="207:32">delta_poc_bottom</name></name> <operator pos:start="207:34" pos:end="207:34">=</operator> <call pos:start="207:36" pos:end="207:57"><name pos:start="207:36" pos:end="207:48">get_se_golomb</name><argument_list pos:start="207:49" pos:end="207:57">(<argument pos:start="207:50" pos:end="207:56"><expr pos:start="207:50" pos:end="207:56"><operator pos:start="207:50" pos:end="207:50">&amp;</operator><name pos:start="207:51" pos:end="207:56"><name pos:start="207:51" pos:end="207:52">sl</name><operator pos:start="207:53" pos:end="207:54">-&gt;</operator><name pos:start="207:55" pos:end="207:56">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="213:5" pos:end="223:5"><if pos:start="213:5" pos:end="223:5">if <condition pos:start="213:8" pos:end="213:69">(<expr pos:start="213:9" pos:end="213:68"><name pos:start="213:9" pos:end="213:21"><name pos:start="213:9" pos:end="213:11">sps</name><operator pos:start="213:12" pos:end="213:13">-&gt;</operator><name pos:start="213:14" pos:end="213:21">poc_type</name></name> <operator pos:start="213:23" pos:end="213:24">==</operator> <literal type="number" pos:start="213:26" pos:end="213:26">1</literal> <operator pos:start="213:28" pos:end="213:29">&amp;&amp;</operator> <operator pos:start="213:31" pos:end="213:31">!</operator><name pos:start="213:32" pos:end="213:68"><name pos:start="213:32" pos:end="213:34">sps</name><operator pos:start="213:35" pos:end="213:36">-&gt;</operator><name pos:start="213:37" pos:end="213:68">delta_pic_order_always_zero_flag</name></name></expr>)</condition> <block pos:start="213:71" pos:end="223:5">{<block_content pos:start="215:9" pos:end="221:54">

        <expr_stmt pos:start="215:9" pos:end="215:50"><expr pos:start="215:9" pos:end="215:49"><name pos:start="215:9" pos:end="215:24"><name pos:start="215:9" pos:end="215:10">sl</name><operator pos:start="215:11" pos:end="215:12">-&gt;</operator><name pos:start="215:13" pos:end="215:21">delta_poc</name><index pos:start="215:22" pos:end="215:24">[<expr pos:start="215:23" pos:end="215:23"><literal type="number" pos:start="215:23" pos:end="215:23">0</literal></expr>]</index></name> <operator pos:start="215:26" pos:end="215:26">=</operator> <call pos:start="215:28" pos:end="215:49"><name pos:start="215:28" pos:end="215:40">get_se_golomb</name><argument_list pos:start="215:41" pos:end="215:49">(<argument pos:start="215:42" pos:end="215:48"><expr pos:start="215:42" pos:end="215:48"><operator pos:start="215:42" pos:end="215:42">&amp;</operator><name pos:start="215:43" pos:end="215:48"><name pos:start="215:43" pos:end="215:44">sl</name><operator pos:start="215:45" pos:end="215:46">-&gt;</operator><name pos:start="215:47" pos:end="215:48">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="219:9" pos:end="221:54"><if pos:start="219:9" pos:end="221:54">if <condition pos:start="219:12" pos:end="219:75">(<expr pos:start="219:13" pos:end="219:74"><name pos:start="219:13" pos:end="219:34"><name pos:start="219:13" pos:end="219:15">pps</name><operator pos:start="219:16" pos:end="219:17">-&gt;</operator><name pos:start="219:18" pos:end="219:34">pic_order_present</name></name> <operator pos:start="219:36" pos:end="219:37">==</operator> <literal type="number" pos:start="219:39" pos:end="219:39">1</literal> <operator pos:start="219:41" pos:end="219:42">&amp;&amp;</operator> <name pos:start="219:44" pos:end="219:60">picture_structure</name> <operator pos:start="219:62" pos:end="219:63">==</operator> <name pos:start="219:65" pos:end="219:74">PICT_FRAME</name></expr>)</condition><block type="pseudo" pos:start="221:13" pos:end="221:54"><block_content pos:start="221:13" pos:end="221:54">

            <expr_stmt pos:start="221:13" pos:end="221:54"><expr pos:start="221:13" pos:end="221:53"><name pos:start="221:13" pos:end="221:28"><name pos:start="221:13" pos:end="221:14">sl</name><operator pos:start="221:15" pos:end="221:16">-&gt;</operator><name pos:start="221:17" pos:end="221:25">delta_poc</name><index pos:start="221:26" pos:end="221:28">[<expr pos:start="221:27" pos:end="221:27"><literal type="number" pos:start="221:27" pos:end="221:27">1</literal></expr>]</index></name> <operator pos:start="221:30" pos:end="221:30">=</operator> <call pos:start="221:32" pos:end="221:53"><name pos:start="221:32" pos:end="221:44">get_se_golomb</name><argument_list pos:start="221:45" pos:end="221:53">(<argument pos:start="221:46" pos:end="221:52"><expr pos:start="221:46" pos:end="221:52"><operator pos:start="221:46" pos:end="221:46">&amp;</operator><name pos:start="221:47" pos:end="221:52"><name pos:start="221:47" pos:end="221:48">sl</name><operator pos:start="221:49" pos:end="221:50">-&gt;</operator><name pos:start="221:51" pos:end="221:52">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="227:5" pos:end="227:32"><expr pos:start="227:5" pos:end="227:31"><name pos:start="227:5" pos:end="227:27"><name pos:start="227:5" pos:end="227:6">sl</name><operator pos:start="227:7" pos:end="227:8">-&gt;</operator><name pos:start="227:9" pos:end="227:27">redundant_pic_count</name></name> <operator pos:start="227:29" pos:end="227:29">=</operator> <literal type="number" pos:start="227:31" pos:end="227:31">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="229:5" pos:end="231:57"><if pos:start="229:5" pos:end="231:57">if <condition pos:start="229:8" pos:end="229:39">(<expr pos:start="229:9" pos:end="229:38"><name pos:start="229:9" pos:end="229:38"><name pos:start="229:9" pos:end="229:11">pps</name><operator pos:start="229:12" pos:end="229:13">-&gt;</operator><name pos:start="229:14" pos:end="229:38">redundant_pic_cnt_present</name></name></expr>)</condition><block type="pseudo" pos:start="231:9" pos:end="231:57"><block_content pos:start="231:9" pos:end="231:57">

        <expr_stmt pos:start="231:9" pos:end="231:57"><expr pos:start="231:9" pos:end="231:56"><name pos:start="231:9" pos:end="231:31"><name pos:start="231:9" pos:end="231:10">sl</name><operator pos:start="231:11" pos:end="231:12">-&gt;</operator><name pos:start="231:13" pos:end="231:31">redundant_pic_count</name></name> <operator pos:start="231:33" pos:end="231:33">=</operator> <call pos:start="231:35" pos:end="231:56"><name pos:start="231:35" pos:end="231:47">get_ue_golomb</name><argument_list pos:start="231:48" pos:end="231:56">(<argument pos:start="231:49" pos:end="231:55"><expr pos:start="231:49" pos:end="231:55"><operator pos:start="231:49" pos:end="231:49">&amp;</operator><name pos:start="231:50" pos:end="231:55"><name pos:start="231:50" pos:end="231:51">sl</name><operator pos:start="231:52" pos:end="231:53">-&gt;</operator><name pos:start="231:54" pos:end="231:55">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="235:5" pos:end="237:56"><if pos:start="235:5" pos:end="237:56">if <condition pos:start="235:8" pos:end="235:48">(<expr pos:start="235:9" pos:end="235:47"><name pos:start="235:9" pos:end="235:26"><name pos:start="235:9" pos:end="235:10">sl</name><operator pos:start="235:11" pos:end="235:12">-&gt;</operator><name pos:start="235:13" pos:end="235:26">slice_type_nos</name></name> <operator pos:start="235:28" pos:end="235:29">==</operator> <name pos:start="235:31" pos:end="235:47">AV_PICTURE_TYPE_B</name></expr>)</condition><block type="pseudo" pos:start="237:9" pos:end="237:56"><block_content pos:start="237:9" pos:end="237:56">

        <expr_stmt pos:start="237:9" pos:end="237:56"><expr pos:start="237:9" pos:end="237:55"><name pos:start="237:9" pos:end="237:34"><name pos:start="237:9" pos:end="237:10">sl</name><operator pos:start="237:11" pos:end="237:12">-&gt;</operator><name pos:start="237:13" pos:end="237:34">direct_spatial_mv_pred</name></name> <operator pos:start="237:36" pos:end="237:36">=</operator> <call pos:start="237:38" pos:end="237:55"><name pos:start="237:38" pos:end="237:46">get_bits1</name><argument_list pos:start="237:47" pos:end="237:55">(<argument pos:start="237:48" pos:end="237:54"><expr pos:start="237:48" pos:end="237:54"><operator pos:start="237:48" pos:end="237:48">&amp;</operator><name pos:start="237:49" pos:end="237:54"><name pos:start="237:49" pos:end="237:50">sl</name><operator pos:start="237:51" pos:end="237:52">-&gt;</operator><name pos:start="237:53" pos:end="237:54">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="241:5" pos:end="245:63"><expr pos:start="241:5" pos:end="245:62"><name pos:start="241:5" pos:end="241:7">ret</name> <operator pos:start="241:9" pos:end="241:9">=</operator> <call pos:start="241:11" pos:end="245:62"><name pos:start="241:11" pos:end="241:33">ff_h264_parse_ref_count</name><argument_list pos:start="241:34" pos:end="245:62">(<argument pos:start="241:35" pos:end="241:49"><expr pos:start="241:35" pos:end="241:49"><operator pos:start="241:35" pos:end="241:35">&amp;</operator><name pos:start="241:36" pos:end="241:49"><name pos:start="241:36" pos:end="241:37">sl</name><operator pos:start="241:38" pos:end="241:39">-&gt;</operator><name pos:start="241:40" pos:end="241:49">list_count</name></name></expr></argument>, <argument pos:start="241:52" pos:end="241:64"><expr pos:start="241:52" pos:end="241:64"><name pos:start="241:52" pos:end="241:64"><name pos:start="241:52" pos:end="241:53">sl</name><operator pos:start="241:54" pos:end="241:55">-&gt;</operator><name pos:start="241:56" pos:end="241:64">ref_count</name></name></expr></argument>,

                                  <argument pos:start="243:35" pos:end="243:41"><expr pos:start="243:35" pos:end="243:41"><operator pos:start="243:35" pos:end="243:35">&amp;</operator><name pos:start="243:36" pos:end="243:41"><name pos:start="243:36" pos:end="243:37">sl</name><operator pos:start="243:38" pos:end="243:39">-&gt;</operator><name pos:start="243:40" pos:end="243:41">gb</name></name></expr></argument>, <argument pos:start="243:44" pos:end="243:46"><expr pos:start="243:44" pos:end="243:46"><name pos:start="243:44" pos:end="243:46">pps</name></expr></argument>, <argument pos:start="243:49" pos:end="243:66"><expr pos:start="243:49" pos:end="243:66"><name pos:start="243:49" pos:end="243:66"><name pos:start="243:49" pos:end="243:50">sl</name><operator pos:start="243:51" pos:end="243:52">-&gt;</operator><name pos:start="243:53" pos:end="243:66">slice_type_nos</name></name></expr></argument>,

                                  <argument pos:start="245:35" pos:end="245:51"><expr pos:start="245:35" pos:end="245:51"><name pos:start="245:35" pos:end="245:51">picture_structure</name></expr></argument>, <argument pos:start="245:54" pos:end="245:61"><expr pos:start="245:54" pos:end="245:61"><name pos:start="245:54" pos:end="245:61"><name pos:start="245:54" pos:end="245:54">h</name><operator pos:start="245:55" pos:end="245:56">-&gt;</operator><name pos:start="245:57" pos:end="245:61">avctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="247:5" pos:end="249:19"><if pos:start="247:5" pos:end="249:19">if <condition pos:start="247:8" pos:end="247:16">(<expr pos:start="247:9" pos:end="247:15"><name pos:start="247:9" pos:end="247:11">ret</name> <operator pos:start="247:13" pos:end="247:13">&lt;</operator> <literal type="number" pos:start="247:15" pos:end="247:15">0</literal></expr>)</condition><block type="pseudo" pos:start="249:9" pos:end="249:19"><block_content pos:start="249:9" pos:end="249:19">

        <return pos:start="249:9" pos:end="249:19">return <expr pos:start="249:16" pos:end="249:18"><name pos:start="249:16" pos:end="249:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="253:5" pos:end="265:5"><if pos:start="253:5" pos:end="265:5">if <condition pos:start="253:8" pos:end="253:48">(<expr pos:start="253:9" pos:end="253:47"><name pos:start="253:9" pos:end="253:26"><name pos:start="253:9" pos:end="253:10">sl</name><operator pos:start="253:11" pos:end="253:12">-&gt;</operator><name pos:start="253:13" pos:end="253:26">slice_type_nos</name></name> <operator pos:start="253:28" pos:end="253:29">!=</operator> <name pos:start="253:31" pos:end="253:47">AV_PICTURE_TYPE_I</name></expr>)</condition> <block pos:start="253:50" pos:end="265:5">{<block_content pos:start="255:8" pos:end="263:8">

       <expr_stmt pos:start="255:8" pos:end="255:66"><expr pos:start="255:8" pos:end="255:65"><name pos:start="255:8" pos:end="255:10">ret</name> <operator pos:start="255:12" pos:end="255:12">=</operator> <call pos:start="255:14" pos:end="255:65"><name pos:start="255:14" pos:end="255:51">ff_h264_decode_ref_pic_list_reordering</name><argument_list pos:start="255:52" pos:end="255:65">(<argument pos:start="255:53" pos:end="255:54"><expr pos:start="255:53" pos:end="255:54"><name pos:start="255:53" pos:end="255:54">sl</name></expr></argument>, <argument pos:start="255:57" pos:end="255:64"><expr pos:start="255:57" pos:end="255:64"><name pos:start="255:57" pos:end="255:64"><name pos:start="255:57" pos:end="255:57">h</name><operator pos:start="255:58" pos:end="255:59">-&gt;</operator><name pos:start="255:60" pos:end="255:64">avctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

       <if_stmt pos:start="257:8" pos:end="263:8"><if pos:start="257:8" pos:end="263:8">if <condition pos:start="257:11" pos:end="257:19">(<expr pos:start="257:12" pos:end="257:18"><name pos:start="257:12" pos:end="257:14">ret</name> <operator pos:start="257:16" pos:end="257:16">&lt;</operator> <literal type="number" pos:start="257:18" pos:end="257:18">0</literal></expr>)</condition> <block pos:start="257:21" pos:end="263:8">{<block_content pos:start="259:12" pos:end="261:22">

           <expr_stmt pos:start="259:12" pos:end="259:51"><expr pos:start="259:12" pos:end="259:50"><name pos:start="259:12" pos:end="259:27"><name pos:start="259:12" pos:end="259:13">sl</name><operator pos:start="259:14" pos:end="259:15">-&gt;</operator><name pos:start="259:16" pos:end="259:24">ref_count</name><index pos:start="259:25" pos:end="259:27">[<expr pos:start="259:26" pos:end="259:26"><literal type="number" pos:start="259:26" pos:end="259:26">1</literal></expr>]</index></name> <operator pos:start="259:29" pos:end="259:29">=</operator> <name pos:start="259:31" pos:end="259:46"><name pos:start="259:31" pos:end="259:32">sl</name><operator pos:start="259:33" pos:end="259:34">-&gt;</operator><name pos:start="259:35" pos:end="259:43">ref_count</name><index pos:start="259:44" pos:end="259:46">[<expr pos:start="259:45" pos:end="259:45"><literal type="number" pos:start="259:45" pos:end="259:45">0</literal></expr>]</index></name> <operator pos:start="259:48" pos:end="259:48">=</operator> <literal type="number" pos:start="259:50" pos:end="259:50">0</literal></expr>;</expr_stmt>

           <return pos:start="261:12" pos:end="261:22">return <expr pos:start="261:19" pos:end="261:21"><name pos:start="261:19" pos:end="261:21">ret</name></expr>;</return>

       </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="269:5" pos:end="269:27"><expr pos:start="269:5" pos:end="269:26"><name pos:start="269:5" pos:end="269:22"><name pos:start="269:5" pos:end="269:6">sl</name><operator pos:start="269:7" pos:end="269:8">-&gt;</operator><name pos:start="269:9" pos:end="269:11">pwt</name><operator pos:start="269:12" pos:end="269:12">.</operator><name pos:start="269:13" pos:end="269:22">use_weight</name></name> <operator pos:start="269:24" pos:end="269:24">=</operator> <literal type="number" pos:start="269:26" pos:end="269:26">0</literal></expr>;</expr_stmt>

    <for pos:start="271:5" pos:end="277:5">for <control pos:start="271:9" pos:end="271:27">(<init pos:start="271:10" pos:end="271:15"><expr pos:start="271:10" pos:end="271:14"><name pos:start="271:10" pos:end="271:10">i</name> <operator pos:start="271:12" pos:end="271:12">=</operator> <literal type="number" pos:start="271:14" pos:end="271:14">0</literal></expr>;</init> <condition pos:start="271:17" pos:end="271:22"><expr pos:start="271:17" pos:end="271:21"><name pos:start="271:17" pos:end="271:17">i</name> <operator pos:start="271:19" pos:end="271:19">&lt;</operator> <literal type="number" pos:start="271:21" pos:end="271:21">2</literal></expr>;</condition> <incr pos:start="271:24" pos:end="271:26"><expr pos:start="271:24" pos:end="271:26"><name pos:start="271:24" pos:end="271:24">i</name><operator pos:start="271:25" pos:end="271:26">++</operator></expr></incr>)</control> <block pos:start="271:29" pos:end="277:5">{<block_content pos:start="273:9" pos:end="275:42">

        <expr_stmt pos:start="273:9" pos:end="273:42"><expr pos:start="273:9" pos:end="273:41"><name pos:start="273:9" pos:end="273:35"><name pos:start="273:9" pos:end="273:10">sl</name><operator pos:start="273:11" pos:end="273:12">-&gt;</operator><name pos:start="273:13" pos:end="273:15">pwt</name><operator pos:start="273:16" pos:end="273:16">.</operator><name pos:start="273:17" pos:end="273:32">luma_weight_flag</name><index pos:start="273:33" pos:end="273:35">[<expr pos:start="273:34" pos:end="273:34"><name pos:start="273:34" pos:end="273:34">i</name></expr>]</index></name>   <operator pos:start="273:39" pos:end="273:39">=</operator> <literal type="number" pos:start="273:41" pos:end="273:41">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="275:9" pos:end="275:42"><expr pos:start="275:9" pos:end="275:41"><name pos:start="275:9" pos:end="275:37"><name pos:start="275:9" pos:end="275:10">sl</name><operator pos:start="275:11" pos:end="275:12">-&gt;</operator><name pos:start="275:13" pos:end="275:15">pwt</name><operator pos:start="275:16" pos:end="275:16">.</operator><name pos:start="275:17" pos:end="275:34">chroma_weight_flag</name><index pos:start="275:35" pos:end="275:37">[<expr pos:start="275:36" pos:end="275:36"><name pos:start="275:36" pos:end="275:36">i</name></expr>]</index></name> <operator pos:start="275:39" pos:end="275:39">=</operator> <literal type="number" pos:start="275:41" pos:end="275:41">0</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="279:5" pos:end="293:5"><if pos:start="279:5" pos:end="293:5">if <condition pos:start="279:8" pos:end="283:50">(<expr pos:start="279:9" pos:end="283:49"><operator pos:start="279:9" pos:end="279:9">(</operator><name pos:start="279:10" pos:end="279:27"><name pos:start="279:10" pos:end="279:12">pps</name><operator pos:start="279:13" pos:end="279:14">-&gt;</operator><name pos:start="279:15" pos:end="279:27">weighted_pred</name></name> <operator pos:start="279:29" pos:end="279:30">&amp;&amp;</operator> <name pos:start="279:32" pos:end="279:49"><name pos:start="279:32" pos:end="279:33">sl</name><operator pos:start="279:34" pos:end="279:35">-&gt;</operator><name pos:start="279:36" pos:end="279:49">slice_type_nos</name></name> <operator pos:start="279:51" pos:end="279:52">==</operator> <name pos:start="279:54" pos:end="279:70">AV_PICTURE_TYPE_P</name><operator pos:start="279:71" pos:end="279:71">)</operator> <operator pos:start="279:73" pos:end="279:74">||</operator>

        <operator pos:start="281:9" pos:end="281:9">(</operator><name pos:start="281:10" pos:end="281:33"><name pos:start="281:10" pos:end="281:12">pps</name><operator pos:start="281:13" pos:end="281:14">-&gt;</operator><name pos:start="281:15" pos:end="281:33">weighted_bipred_idc</name></name> <operator pos:start="281:35" pos:end="281:36">==</operator> <literal type="number" pos:start="281:38" pos:end="281:38">1</literal> <operator pos:start="281:40" pos:end="281:41">&amp;&amp;</operator>

         <name pos:start="283:10" pos:end="283:27"><name pos:start="283:10" pos:end="283:11">sl</name><operator pos:start="283:12" pos:end="283:13">-&gt;</operator><name pos:start="283:14" pos:end="283:27">slice_type_nos</name></name> <operator pos:start="283:29" pos:end="283:30">==</operator> <name pos:start="283:32" pos:end="283:48">AV_PICTURE_TYPE_B</name><operator pos:start="283:49" pos:end="283:49">)</operator></expr>)</condition> <block pos:start="283:52" pos:end="293:5">{<block_content pos:start="285:9" pos:end="291:23">

        <expr_stmt pos:start="285:9" pos:end="287:74"><expr pos:start="285:9" pos:end="287:73"><name pos:start="285:9" pos:end="285:11">ret</name> <operator pos:start="285:13" pos:end="285:13">=</operator> <call pos:start="285:15" pos:end="287:73"><name pos:start="285:15" pos:end="285:39">ff_h264_pred_weight_table</name><argument_list pos:start="285:40" pos:end="287:73">(<argument pos:start="285:41" pos:end="285:47"><expr pos:start="285:41" pos:end="285:47"><operator pos:start="285:41" pos:end="285:41">&amp;</operator><name pos:start="285:42" pos:end="285:47"><name pos:start="285:42" pos:end="285:43">sl</name><operator pos:start="285:44" pos:end="285:45">-&gt;</operator><name pos:start="285:46" pos:end="285:47">gb</name></name></expr></argument>, <argument pos:start="285:50" pos:end="285:52"><expr pos:start="285:50" pos:end="285:52"><name pos:start="285:50" pos:end="285:52">sps</name></expr></argument>, <argument pos:start="285:55" pos:end="285:67"><expr pos:start="285:55" pos:end="285:67"><name pos:start="285:55" pos:end="285:67"><name pos:start="285:55" pos:end="285:56">sl</name><operator pos:start="285:57" pos:end="285:58">-&gt;</operator><name pos:start="285:59" pos:end="285:67">ref_count</name></name></expr></argument>,

                                  <argument pos:start="287:35" pos:end="287:52"><expr pos:start="287:35" pos:end="287:52"><name pos:start="287:35" pos:end="287:52"><name pos:start="287:35" pos:end="287:36">sl</name><operator pos:start="287:37" pos:end="287:38">-&gt;</operator><name pos:start="287:39" pos:end="287:52">slice_type_nos</name></name></expr></argument>, <argument pos:start="287:55" pos:end="287:62"><expr pos:start="287:55" pos:end="287:62"><operator pos:start="287:55" pos:end="287:55">&amp;</operator><name pos:start="287:56" pos:end="287:62"><name pos:start="287:56" pos:end="287:57">sl</name><operator pos:start="287:58" pos:end="287:59">-&gt;</operator><name pos:start="287:60" pos:end="287:62">pwt</name></name></expr></argument>, <argument pos:start="287:65" pos:end="287:72"><expr pos:start="287:65" pos:end="287:72"><name pos:start="287:65" pos:end="287:72"><name pos:start="287:65" pos:end="287:65">h</name><operator pos:start="287:66" pos:end="287:67">-&gt;</operator><name pos:start="287:68" pos:end="287:72">avctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="289:9" pos:end="291:23"><if pos:start="289:9" pos:end="291:23">if <condition pos:start="289:12" pos:end="289:20">(<expr pos:start="289:13" pos:end="289:19"><name pos:start="289:13" pos:end="289:15">ret</name> <operator pos:start="289:17" pos:end="289:17">&lt;</operator> <literal type="number" pos:start="289:19" pos:end="289:19">0</literal></expr>)</condition><block type="pseudo" pos:start="291:13" pos:end="291:23"><block_content pos:start="291:13" pos:end="291:23">

            <return pos:start="291:13" pos:end="291:23">return <expr pos:start="291:20" pos:end="291:22"><name pos:start="291:20" pos:end="291:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="297:5" pos:end="297:33"><expr pos:start="297:5" pos:end="297:32"><name pos:start="297:5" pos:end="297:28"><name pos:start="297:5" pos:end="297:6">sl</name><operator pos:start="297:7" pos:end="297:8">-&gt;</operator><name pos:start="297:9" pos:end="297:28">explicit_ref_marking</name></name> <operator pos:start="297:30" pos:end="297:30">=</operator> <literal type="number" pos:start="297:32" pos:end="297:32">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="299:5" pos:end="307:5"><if pos:start="299:5" pos:end="307:5">if <condition pos:start="299:8" pos:end="299:21">(<expr pos:start="299:9" pos:end="299:20"><name pos:start="299:9" pos:end="299:20"><name pos:start="299:9" pos:end="299:11">nal</name><operator pos:start="299:12" pos:end="299:13">-&gt;</operator><name pos:start="299:14" pos:end="299:20">ref_idc</name></name></expr>)</condition> <block pos:start="299:23" pos:end="307:5">{<block_content pos:start="301:9" pos:end="305:39">

        <expr_stmt pos:start="301:9" pos:end="301:73"><expr pos:start="301:9" pos:end="301:72"><name pos:start="301:9" pos:end="301:11">ret</name> <operator pos:start="301:13" pos:end="301:13">=</operator> <call pos:start="301:15" pos:end="301:72"><name pos:start="301:15" pos:end="301:44">ff_h264_decode_ref_pic_marking</name><argument_list pos:start="301:45" pos:end="301:72">(<argument pos:start="301:46" pos:end="301:47"><expr pos:start="301:46" pos:end="301:47"><name pos:start="301:46" pos:end="301:47">sl</name></expr></argument>, <argument pos:start="301:50" pos:end="301:56"><expr pos:start="301:50" pos:end="301:56"><operator pos:start="301:50" pos:end="301:50">&amp;</operator><name pos:start="301:51" pos:end="301:56"><name pos:start="301:51" pos:end="301:52">sl</name><operator pos:start="301:53" pos:end="301:54">-&gt;</operator><name pos:start="301:55" pos:end="301:56">gb</name></name></expr></argument>, <argument pos:start="301:59" pos:end="301:61"><expr pos:start="301:59" pos:end="301:61"><name pos:start="301:59" pos:end="301:61">nal</name></expr></argument>, <argument pos:start="301:64" pos:end="301:71"><expr pos:start="301:64" pos:end="301:71"><name pos:start="301:64" pos:end="301:71"><name pos:start="301:64" pos:end="301:64">h</name><operator pos:start="301:65" pos:end="301:66">-&gt;</operator><name pos:start="301:67" pos:end="301:71">avctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="303:9" pos:end="305:39"><if pos:start="303:9" pos:end="305:39">if <condition pos:start="303:12" pos:end="303:67">(<expr pos:start="303:13" pos:end="303:66"><name pos:start="303:13" pos:end="303:15">ret</name> <operator pos:start="303:17" pos:end="303:17">&lt;</operator> <literal type="number" pos:start="303:19" pos:end="303:19">0</literal> <operator pos:start="303:21" pos:end="303:22">&amp;&amp;</operator> <operator pos:start="303:24" pos:end="303:24">(</operator><name pos:start="303:25" pos:end="303:49"><name pos:start="303:25" pos:end="303:25">h</name><operator pos:start="303:26" pos:end="303:27">-&gt;</operator><name pos:start="303:28" pos:end="303:32">avctx</name><operator pos:start="303:33" pos:end="303:34">-&gt;</operator><name pos:start="303:35" pos:end="303:49">err_recognition</name></name> <operator pos:start="303:51" pos:end="303:51">&amp;</operator> <name pos:start="303:53" pos:end="303:65">AV_EF_EXPLODE</name><operator pos:start="303:66" pos:end="303:66">)</operator></expr>)</condition><block type="pseudo" pos:start="305:13" pos:end="305:39"><block_content pos:start="305:13" pos:end="305:39">

            <return pos:start="305:13" pos:end="305:39">return <expr pos:start="305:20" pos:end="305:38"><name pos:start="305:20" pos:end="305:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="311:5" pos:end="325:5"><if pos:start="311:5" pos:end="325:5">if <condition pos:start="311:8" pos:end="311:62">(<expr pos:start="311:9" pos:end="311:61"><name pos:start="311:9" pos:end="311:26"><name pos:start="311:9" pos:end="311:10">sl</name><operator pos:start="311:11" pos:end="311:12">-&gt;</operator><name pos:start="311:13" pos:end="311:26">slice_type_nos</name></name> <operator pos:start="311:28" pos:end="311:29">!=</operator> <name pos:start="311:31" pos:end="311:47">AV_PICTURE_TYPE_I</name> <operator pos:start="311:49" pos:end="311:50">&amp;&amp;</operator> <name pos:start="311:52" pos:end="311:61"><name pos:start="311:52" pos:end="311:54">pps</name><operator pos:start="311:55" pos:end="311:56">-&gt;</operator><name pos:start="311:57" pos:end="311:61">cabac</name></name></expr>)</condition> <block pos:start="311:64" pos:end="325:5">{<block_content pos:start="313:9" pos:end="323:33">

        <expr_stmt pos:start="313:9" pos:end="313:40"><expr pos:start="313:9" pos:end="313:39"><name pos:start="313:9" pos:end="313:11">tmp</name> <operator pos:start="313:13" pos:end="313:13">=</operator> <call pos:start="313:15" pos:end="313:39"><name pos:start="313:15" pos:end="313:30">get_ue_golomb_31</name><argument_list pos:start="313:31" pos:end="313:39">(<argument pos:start="313:32" pos:end="313:38"><expr pos:start="313:32" pos:end="313:38"><operator pos:start="313:32" pos:end="313:32">&amp;</operator><name pos:start="313:33" pos:end="313:38"><name pos:start="313:33" pos:end="313:34">sl</name><operator pos:start="313:35" pos:end="313:36">-&gt;</operator><name pos:start="313:37" pos:end="313:38">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="315:9" pos:end="321:9"><if pos:start="315:9" pos:end="321:9">if <condition pos:start="315:12" pos:end="315:20">(<expr pos:start="315:13" pos:end="315:19"><name pos:start="315:13" pos:end="315:15">tmp</name> <operator pos:start="315:17" pos:end="315:17">&gt;</operator> <literal type="number" pos:start="315:19" pos:end="315:19">2</literal></expr>)</condition> <block pos:start="315:22" pos:end="321:9">{<block_content pos:start="317:13" pos:end="319:39">

            <expr_stmt pos:start="317:13" pos:end="317:80"><expr pos:start="317:13" pos:end="317:79"><call pos:start="317:13" pos:end="317:79"><name pos:start="317:13" pos:end="317:18">av_log</name><argument_list pos:start="317:19" pos:end="317:79">(<argument pos:start="317:20" pos:end="317:27"><expr pos:start="317:20" pos:end="317:27"><name pos:start="317:20" pos:end="317:27"><name pos:start="317:20" pos:end="317:20">h</name><operator pos:start="317:21" pos:end="317:22">-&gt;</operator><name pos:start="317:23" pos:end="317:27">avctx</name></name></expr></argument>, <argument pos:start="317:30" pos:end="317:41"><expr pos:start="317:30" pos:end="317:41"><name pos:start="317:30" pos:end="317:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="317:44" pos:end="317:73"><expr pos:start="317:44" pos:end="317:73"><literal type="string" pos:start="317:44" pos:end="317:73">"cabac_init_idc %u overflow\n"</literal></expr></argument>, <argument pos:start="317:76" pos:end="317:78"><expr pos:start="317:76" pos:end="317:78"><name pos:start="317:76" pos:end="317:78">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="319:13" pos:end="319:39">return <expr pos:start="319:20" pos:end="319:38"><name pos:start="319:20" pos:end="319:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="323:9" pos:end="323:33"><expr pos:start="323:9" pos:end="323:32"><name pos:start="323:9" pos:end="323:26"><name pos:start="323:9" pos:end="323:10">sl</name><operator pos:start="323:11" pos:end="323:12">-&gt;</operator><name pos:start="323:13" pos:end="323:26">cabac_init_idc</name></name> <operator pos:start="323:28" pos:end="323:28">=</operator> <name pos:start="323:30" pos:end="323:32">tmp</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="329:5" pos:end="329:29"><expr pos:start="329:5" pos:end="329:28"><name pos:start="329:5" pos:end="329:24"><name pos:start="329:5" pos:end="329:6">sl</name><operator pos:start="329:7" pos:end="329:8">-&gt;</operator><name pos:start="329:9" pos:end="329:24">last_qscale_diff</name></name> <operator pos:start="329:26" pos:end="329:26">=</operator> <literal type="number" pos:start="329:28" pos:end="329:28">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="331:5" pos:end="331:48"><expr pos:start="331:5" pos:end="331:47"><name pos:start="331:5" pos:end="331:7">tmp</name> <operator pos:start="331:9" pos:end="331:9">=</operator> <name pos:start="331:11" pos:end="331:22"><name pos:start="331:11" pos:end="331:13">pps</name><operator pos:start="331:14" pos:end="331:15">-&gt;</operator><name pos:start="331:16" pos:end="331:22">init_qp</name></name> <operator pos:start="331:24" pos:end="331:24">+</operator> <call pos:start="331:26" pos:end="331:47"><name pos:start="331:26" pos:end="331:38">get_se_golomb</name><argument_list pos:start="331:39" pos:end="331:47">(<argument pos:start="331:40" pos:end="331:46"><expr pos:start="331:40" pos:end="331:46"><operator pos:start="331:40" pos:end="331:40">&amp;</operator><name pos:start="331:41" pos:end="331:46"><name pos:start="331:41" pos:end="331:42">sl</name><operator pos:start="331:43" pos:end="331:44">-&gt;</operator><name pos:start="331:45" pos:end="331:46">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="333:5" pos:end="339:5"><if pos:start="333:5" pos:end="339:5">if <condition pos:start="333:8" pos:end="333:49">(<expr pos:start="333:9" pos:end="333:48"><name pos:start="333:9" pos:end="333:11">tmp</name> <operator pos:start="333:13" pos:end="333:13">&gt;</operator> <literal type="number" pos:start="333:15" pos:end="333:18">51</literal> <operator pos:start="333:18" pos:end="333:18">+</operator> <literal type="number" pos:start="333:20" pos:end="333:20">6</literal> <operator pos:start="333:22" pos:end="333:22">*</operator> <operator pos:start="333:24" pos:end="333:24">(</operator><name pos:start="333:25" pos:end="333:43"><name pos:start="333:25" pos:end="333:27">sps</name><operator pos:start="333:28" pos:end="333:29">-&gt;</operator><name pos:start="333:30" pos:end="333:43">bit_depth_luma</name></name> <operator pos:start="333:45" pos:end="333:45">-</operator> <literal type="number" pos:start="333:47" pos:end="333:47">8</literal><operator pos:start="333:48" pos:end="333:48">)</operator></expr>)</condition> <block pos:start="333:51" pos:end="339:5">{<block_content pos:start="335:9" pos:end="337:35">

        <expr_stmt pos:start="335:9" pos:end="335:68"><expr pos:start="335:9" pos:end="335:67"><call pos:start="335:9" pos:end="335:67"><name pos:start="335:9" pos:end="335:14">av_log</name><argument_list pos:start="335:15" pos:end="335:67">(<argument pos:start="335:16" pos:end="335:23"><expr pos:start="335:16" pos:end="335:23"><name pos:start="335:16" pos:end="335:23"><name pos:start="335:16" pos:end="335:16">h</name><operator pos:start="335:17" pos:end="335:18">-&gt;</operator><name pos:start="335:19" pos:end="335:23">avctx</name></name></expr></argument>, <argument pos:start="335:26" pos:end="335:37"><expr pos:start="335:26" pos:end="335:37"><name pos:start="335:26" pos:end="335:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="335:40" pos:end="335:61"><expr pos:start="335:40" pos:end="335:61"><literal type="string" pos:start="335:40" pos:end="335:61">"QP %u out of range\n"</literal></expr></argument>, <argument pos:start="335:64" pos:end="335:66"><expr pos:start="335:64" pos:end="335:66"><name pos:start="335:64" pos:end="335:66">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="337:9" pos:end="337:35">return <expr pos:start="337:16" pos:end="337:34"><name pos:start="337:16" pos:end="337:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="341:5" pos:end="341:27"><expr pos:start="341:5" pos:end="341:26"><name pos:start="341:5" pos:end="341:14"><name pos:start="341:5" pos:end="341:6">sl</name><operator pos:start="341:7" pos:end="341:8">-&gt;</operator><name pos:start="341:9" pos:end="341:14">qscale</name></name>       <operator pos:start="341:22" pos:end="341:22">=</operator> <name pos:start="341:24" pos:end="341:26">tmp</name></expr>;</expr_stmt>

    <expr_stmt pos:start="343:5" pos:end="343:57"><expr pos:start="343:5" pos:end="343:56"><name pos:start="343:5" pos:end="343:20"><name pos:start="343:5" pos:end="343:6">sl</name><operator pos:start="343:7" pos:end="343:8">-&gt;</operator><name pos:start="343:9" pos:end="343:17">chroma_qp</name><index pos:start="343:18" pos:end="343:20">[<expr pos:start="343:19" pos:end="343:19"><literal type="number" pos:start="343:19" pos:end="343:19">0</literal></expr>]</index></name> <operator pos:start="343:22" pos:end="343:22">=</operator> <call pos:start="343:24" pos:end="343:56"><name pos:start="343:24" pos:end="343:36">get_chroma_qp</name><argument_list pos:start="343:37" pos:end="343:56">(<argument pos:start="343:38" pos:end="343:40"><expr pos:start="343:38" pos:end="343:40"><name pos:start="343:38" pos:end="343:40">pps</name></expr></argument>, <argument pos:start="343:43" pos:end="343:43"><expr pos:start="343:43" pos:end="343:43"><literal type="number" pos:start="343:43" pos:end="343:43">0</literal></expr></argument>, <argument pos:start="343:46" pos:end="343:55"><expr pos:start="343:46" pos:end="343:55"><name pos:start="343:46" pos:end="343:55"><name pos:start="343:46" pos:end="343:47">sl</name><operator pos:start="343:48" pos:end="343:49">-&gt;</operator><name pos:start="343:50" pos:end="343:55">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="345:5" pos:end="345:57"><expr pos:start="345:5" pos:end="345:56"><name pos:start="345:5" pos:end="345:20"><name pos:start="345:5" pos:end="345:6">sl</name><operator pos:start="345:7" pos:end="345:8">-&gt;</operator><name pos:start="345:9" pos:end="345:17">chroma_qp</name><index pos:start="345:18" pos:end="345:20">[<expr pos:start="345:19" pos:end="345:19"><literal type="number" pos:start="345:19" pos:end="345:19">1</literal></expr>]</index></name> <operator pos:start="345:22" pos:end="345:22">=</operator> <call pos:start="345:24" pos:end="345:56"><name pos:start="345:24" pos:end="345:36">get_chroma_qp</name><argument_list pos:start="345:37" pos:end="345:56">(<argument pos:start="345:38" pos:end="345:40"><expr pos:start="345:38" pos:end="345:40"><name pos:start="345:38" pos:end="345:40">pps</name></expr></argument>, <argument pos:start="345:43" pos:end="345:43"><expr pos:start="345:43" pos:end="345:43"><literal type="number" pos:start="345:43" pos:end="345:43">1</literal></expr></argument>, <argument pos:start="345:46" pos:end="345:55"><expr pos:start="345:46" pos:end="345:55"><name pos:start="345:46" pos:end="345:55"><name pos:start="345:46" pos:end="345:47">sl</name><operator pos:start="345:48" pos:end="345:49">-&gt;</operator><name pos:start="345:50" pos:end="345:55">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:start="347:5" pos:end="347:34">// FIXME qscale / qp ... stuff</comment>

    <if_stmt pos:start="349:5" pos:end="351:27"><if pos:start="349:5" pos:end="351:27">if <condition pos:start="349:8" pos:end="349:45">(<expr pos:start="349:9" pos:end="349:44"><name pos:start="349:9" pos:end="349:22"><name pos:start="349:9" pos:end="349:10">sl</name><operator pos:start="349:11" pos:end="349:12">-&gt;</operator><name pos:start="349:13" pos:end="349:22">slice_type</name></name> <operator pos:start="349:24" pos:end="349:25">==</operator> <name pos:start="349:27" pos:end="349:44">AV_PICTURE_TYPE_SP</name></expr>)</condition><block type="pseudo" pos:start="351:9" pos:end="351:27"><block_content pos:start="351:9" pos:end="351:27">

        <expr_stmt pos:start="351:9" pos:end="351:27"><expr pos:start="351:9" pos:end="351:26"><call pos:start="351:9" pos:end="351:26"><name pos:start="351:9" pos:end="351:17">get_bits1</name><argument_list pos:start="351:18" pos:end="351:26">(<argument pos:start="351:19" pos:end="351:25"><expr pos:start="351:19" pos:end="351:25"><operator pos:start="351:19" pos:end="351:19">&amp;</operator><name pos:start="351:20" pos:end="351:25"><name pos:start="351:20" pos:end="351:21">sl</name><operator pos:start="351:22" pos:end="351:23">-&gt;</operator><name pos:start="351:24" pos:end="351:25">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="351:29" pos:end="351:52">/* sp_for_switch_flag */</comment>

    <if_stmt pos:start="353:5" pos:end="357:31"><if pos:start="353:5" pos:end="357:31">if <condition pos:start="353:8" pos:end="355:45">(<expr pos:start="353:9" pos:end="355:44"><name pos:start="353:9" pos:end="353:22"><name pos:start="353:9" pos:end="353:10">sl</name><operator pos:start="353:11" pos:end="353:12">-&gt;</operator><name pos:start="353:13" pos:end="353:22">slice_type</name></name> <operator pos:start="353:24" pos:end="353:25">==</operator> <name pos:start="353:27" pos:end="353:44">AV_PICTURE_TYPE_SP</name> <operator pos:start="353:46" pos:end="353:47">||</operator>

        <name pos:start="355:9" pos:end="355:22"><name pos:start="355:9" pos:end="355:10">sl</name><operator pos:start="355:11" pos:end="355:12">-&gt;</operator><name pos:start="355:13" pos:end="355:22">slice_type</name></name> <operator pos:start="355:24" pos:end="355:25">==</operator> <name pos:start="355:27" pos:end="355:44">AV_PICTURE_TYPE_SI</name></expr>)</condition><block type="pseudo" pos:start="357:9" pos:end="357:31"><block_content pos:start="357:9" pos:end="357:31">

        <expr_stmt pos:start="357:9" pos:end="357:31"><expr pos:start="357:9" pos:end="357:30"><call pos:start="357:9" pos:end="357:30"><name pos:start="357:9" pos:end="357:21">get_se_golomb</name><argument_list pos:start="357:22" pos:end="357:30">(<argument pos:start="357:23" pos:end="357:29"><expr pos:start="357:23" pos:end="357:29"><operator pos:start="357:23" pos:end="357:23">&amp;</operator><name pos:start="357:24" pos:end="357:29"><name pos:start="357:24" pos:end="357:25">sl</name><operator pos:start="357:26" pos:end="357:27">-&gt;</operator><name pos:start="357:28" pos:end="357:29">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="357:33" pos:end="357:52">/* slice_qs_delta */</comment>



    <expr_stmt pos:start="361:5" pos:end="361:34"><expr pos:start="361:5" pos:end="361:33"><name pos:start="361:5" pos:end="361:25"><name pos:start="361:5" pos:end="361:6">sl</name><operator pos:start="361:7" pos:end="361:8">-&gt;</operator><name pos:start="361:9" pos:end="361:25">deblocking_filter</name></name>     <operator pos:start="361:31" pos:end="361:31">=</operator> <literal type="number" pos:start="361:33" pos:end="361:33">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="363:5" pos:end="363:34"><expr pos:start="363:5" pos:end="363:33"><name pos:start="363:5" pos:end="363:29"><name pos:start="363:5" pos:end="363:6">sl</name><operator pos:start="363:7" pos:end="363:8">-&gt;</operator><name pos:start="363:9" pos:end="363:29">slice_alpha_c0_offset</name></name> <operator pos:start="363:31" pos:end="363:31">=</operator> <literal type="number" pos:start="363:33" pos:end="363:33">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="365:5" pos:end="365:34"><expr pos:start="365:5" pos:end="365:33"><name pos:start="365:5" pos:end="365:25"><name pos:start="365:5" pos:end="365:6">sl</name><operator pos:start="365:7" pos:end="365:8">-&gt;</operator><name pos:start="365:9" pos:end="365:25">slice_beta_offset</name></name>     <operator pos:start="365:31" pos:end="365:31">=</operator> <literal type="number" pos:start="365:33" pos:end="365:33">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="367:5" pos:end="415:5"><if pos:start="367:5" pos:end="415:5">if <condition pos:start="367:8" pos:end="367:50">(<expr pos:start="367:9" pos:end="367:49"><name pos:start="367:9" pos:end="367:49"><name pos:start="367:9" pos:end="367:11">pps</name><operator pos:start="367:12" pos:end="367:13">-&gt;</operator><name pos:start="367:14" pos:end="367:49">deblocking_filter_parameters_present</name></name></expr>)</condition> <block pos:start="367:52" pos:end="415:5">{<block_content pos:start="369:9" pos:end="413:9">

        <expr_stmt pos:start="369:9" pos:end="369:40"><expr pos:start="369:9" pos:end="369:39"><name pos:start="369:9" pos:end="369:11">tmp</name> <operator pos:start="369:13" pos:end="369:13">=</operator> <call pos:start="369:15" pos:end="369:39"><name pos:start="369:15" pos:end="369:30">get_ue_golomb_31</name><argument_list pos:start="369:31" pos:end="369:39">(<argument pos:start="369:32" pos:end="369:38"><expr pos:start="369:32" pos:end="369:38"><operator pos:start="369:32" pos:end="369:32">&amp;</operator><name pos:start="369:33" pos:end="369:38"><name pos:start="369:33" pos:end="369:34">sl</name><operator pos:start="369:35" pos:end="369:36">-&gt;</operator><name pos:start="369:37" pos:end="369:38">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="371:9" pos:end="379:9"><if pos:start="371:9" pos:end="379:9">if <condition pos:start="371:12" pos:end="371:20">(<expr pos:start="371:13" pos:end="371:19"><name pos:start="371:13" pos:end="371:15">tmp</name> <operator pos:start="371:17" pos:end="371:17">&gt;</operator> <literal type="number" pos:start="371:19" pos:end="371:19">2</literal></expr>)</condition> <block pos:start="371:22" pos:end="379:9">{<block_content pos:start="373:13" pos:end="377:39">

            <expr_stmt pos:start="373:13" pos:end="375:67"><expr pos:start="373:13" pos:end="375:66"><call pos:start="373:13" pos:end="375:66"><name pos:start="373:13" pos:end="373:18">av_log</name><argument_list pos:start="373:19" pos:end="375:66">(<argument pos:start="373:20" pos:end="373:27"><expr pos:start="373:20" pos:end="373:27"><name pos:start="373:20" pos:end="373:27"><name pos:start="373:20" pos:end="373:20">h</name><operator pos:start="373:21" pos:end="373:22">-&gt;</operator><name pos:start="373:23" pos:end="373:27">avctx</name></name></expr></argument>, <argument pos:start="373:30" pos:end="373:41"><expr pos:start="373:30" pos:end="373:41"><name pos:start="373:30" pos:end="373:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="375:20" pos:end="375:60"><expr pos:start="375:20" pos:end="375:60"><literal type="string" pos:start="375:20" pos:end="375:60">"deblocking_filter_idc %u out of range\n"</literal></expr></argument>, <argument pos:start="375:63" pos:end="375:65"><expr pos:start="375:63" pos:end="375:65"><name pos:start="375:63" pos:end="375:65">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="377:13" pos:end="377:39">return <expr pos:start="377:20" pos:end="377:38"><name pos:start="377:20" pos:end="377:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="381:9" pos:end="381:36"><expr pos:start="381:9" pos:end="381:35"><name pos:start="381:9" pos:end="381:29"><name pos:start="381:9" pos:end="381:10">sl</name><operator pos:start="381:11" pos:end="381:12">-&gt;</operator><name pos:start="381:13" pos:end="381:29">deblocking_filter</name></name> <operator pos:start="381:31" pos:end="381:31">=</operator> <name pos:start="381:33" pos:end="381:35">tmp</name></expr>;</expr_stmt>

        <if_stmt pos:start="383:9" pos:end="385:39"><if pos:start="383:9" pos:end="385:39">if <condition pos:start="383:12" pos:end="383:38">(<expr pos:start="383:13" pos:end="383:37"><name pos:start="383:13" pos:end="383:33"><name pos:start="383:13" pos:end="383:14">sl</name><operator pos:start="383:15" pos:end="383:16">-&gt;</operator><name pos:start="383:17" pos:end="383:33">deblocking_filter</name></name> <operator pos:start="383:35" pos:end="383:35">&lt;</operator> <literal type="number" pos:start="383:37" pos:end="383:37">2</literal></expr>)</condition><block type="pseudo" pos:start="385:13" pos:end="385:39"><block_content pos:start="385:13" pos:end="385:39">

            <expr_stmt pos:start="385:13" pos:end="385:39"><expr pos:start="385:13" pos:end="385:38"><name pos:start="385:13" pos:end="385:33"><name pos:start="385:13" pos:end="385:14">sl</name><operator pos:start="385:15" pos:end="385:16">-&gt;</operator><name pos:start="385:17" pos:end="385:33">deblocking_filter</name></name> <operator pos:start="385:35" pos:end="385:36">^=</operator> <literal type="number" pos:start="385:38" pos:end="385:38">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>  <comment type="line" pos:start="385:42" pos:end="385:49">// 1&lt;-&gt;0</comment>



        <if_stmt pos:start="389:9" pos:end="413:9"><if pos:start="389:9" pos:end="413:9">if <condition pos:start="389:12" pos:end="389:34">(<expr pos:start="389:13" pos:end="389:33"><name pos:start="389:13" pos:end="389:33"><name pos:start="389:13" pos:end="389:14">sl</name><operator pos:start="389:15" pos:end="389:16">-&gt;</operator><name pos:start="389:17" pos:end="389:33">deblocking_filter</name></name></expr>)</condition> <block pos:start="389:36" pos:end="413:9">{<block_content pos:start="391:13" pos:end="411:13">

            <expr_stmt pos:start="391:13" pos:end="391:67"><expr pos:start="391:13" pos:end="391:66"><name pos:start="391:13" pos:end="391:37"><name pos:start="391:13" pos:end="391:14">sl</name><operator pos:start="391:15" pos:end="391:16">-&gt;</operator><name pos:start="391:17" pos:end="391:37">slice_alpha_c0_offset</name></name> <operator pos:start="391:39" pos:end="391:39">=</operator> <call pos:start="391:41" pos:end="391:62"><name pos:start="391:41" pos:end="391:53">get_se_golomb</name><argument_list pos:start="391:54" pos:end="391:62">(<argument pos:start="391:55" pos:end="391:61"><expr pos:start="391:55" pos:end="391:61"><operator pos:start="391:55" pos:end="391:55">&amp;</operator><name pos:start="391:56" pos:end="391:61"><name pos:start="391:56" pos:end="391:57">sl</name><operator pos:start="391:58" pos:end="391:59">-&gt;</operator><name pos:start="391:60" pos:end="391:61">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="391:64" pos:end="391:64">*</operator> <literal type="number" pos:start="391:66" pos:end="391:66">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="393:13" pos:end="393:67"><expr pos:start="393:13" pos:end="393:66"><name pos:start="393:13" pos:end="393:33"><name pos:start="393:13" pos:end="393:14">sl</name><operator pos:start="393:15" pos:end="393:16">-&gt;</operator><name pos:start="393:17" pos:end="393:33">slice_beta_offset</name></name>     <operator pos:start="393:39" pos:end="393:39">=</operator> <call pos:start="393:41" pos:end="393:62"><name pos:start="393:41" pos:end="393:53">get_se_golomb</name><argument_list pos:start="393:54" pos:end="393:62">(<argument pos:start="393:55" pos:end="393:61"><expr pos:start="393:55" pos:end="393:61"><operator pos:start="393:55" pos:end="393:55">&amp;</operator><name pos:start="393:56" pos:end="393:61"><name pos:start="393:56" pos:end="393:57">sl</name><operator pos:start="393:58" pos:end="393:59">-&gt;</operator><name pos:start="393:60" pos:end="393:61">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="393:64" pos:end="393:64">*</operator> <literal type="number" pos:start="393:66" pos:end="393:66">2</literal></expr>;</expr_stmt>

            <if_stmt pos:start="395:13" pos:end="411:13"><if pos:start="395:13" pos:end="411:13">if <condition pos:start="395:16" pos:end="401:44">(<expr pos:start="395:17" pos:end="401:43"><name pos:start="395:17" pos:end="395:41"><name pos:start="395:17" pos:end="395:18">sl</name><operator pos:start="395:19" pos:end="395:20">-&gt;</operator><name pos:start="395:21" pos:end="395:41">slice_alpha_c0_offset</name></name> <operator pos:start="395:43" pos:end="395:43">&gt;</operator>  <literal type="number" pos:start="395:46" pos:end="395:47">12</literal> <operator pos:start="395:49" pos:end="395:50">||</operator>

                <name pos:start="397:17" pos:end="397:41"><name pos:start="397:17" pos:end="397:18">sl</name><operator pos:start="397:19" pos:end="397:20">-&gt;</operator><name pos:start="397:21" pos:end="397:41">slice_alpha_c0_offset</name></name> <operator pos:start="397:43" pos:end="397:43">&lt;</operator> <operator pos:start="397:45" pos:end="397:45">-</operator><literal type="number" pos:start="397:46" pos:end="397:47">12</literal> <operator pos:start="397:49" pos:end="397:50">||</operator>

                <name pos:start="399:17" pos:end="399:37"><name pos:start="399:17" pos:end="399:18">sl</name><operator pos:start="399:19" pos:end="399:20">-&gt;</operator><name pos:start="399:21" pos:end="399:37">slice_beta_offset</name></name> <operator pos:start="399:39" pos:end="399:39">&gt;</operator>  <literal type="number" pos:start="399:42" pos:end="399:43">12</literal>     <operator pos:start="399:49" pos:end="399:50">||</operator>

                <name pos:start="401:17" pos:end="401:37"><name pos:start="401:17" pos:end="401:18">sl</name><operator pos:start="401:19" pos:end="401:20">-&gt;</operator><name pos:start="401:21" pos:end="401:37">slice_beta_offset</name></name> <operator pos:start="401:39" pos:end="401:39">&lt;</operator> <operator pos:start="401:41" pos:end="401:41">-</operator><literal type="number" pos:start="401:42" pos:end="401:43">12</literal></expr>)</condition> <block pos:start="401:46" pos:end="411:13">{<block_content pos:start="403:17" pos:end="409:43">

                <expr_stmt pos:start="403:17" pos:end="407:73"><expr pos:start="403:17" pos:end="407:72"><call pos:start="403:17" pos:end="407:72"><name pos:start="403:17" pos:end="403:22">av_log</name><argument_list pos:start="403:23" pos:end="407:72">(<argument pos:start="403:24" pos:end="403:31"><expr pos:start="403:24" pos:end="403:31"><name pos:start="403:24" pos:end="403:31"><name pos:start="403:24" pos:end="403:24">h</name><operator pos:start="403:25" pos:end="403:26">-&gt;</operator><name pos:start="403:27" pos:end="403:31">avctx</name></name></expr></argument>, <argument pos:start="403:34" pos:end="403:45"><expr pos:start="403:34" pos:end="403:45"><name pos:start="403:34" pos:end="403:45">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="405:24" pos:end="405:74"><expr pos:start="405:24" pos:end="405:74"><literal type="string" pos:start="405:24" pos:end="405:74">"deblocking filter parameters %d %d out of range\n"</literal></expr></argument>,

                       <argument pos:start="407:24" pos:end="407:48"><expr pos:start="407:24" pos:end="407:48"><name pos:start="407:24" pos:end="407:48"><name pos:start="407:24" pos:end="407:25">sl</name><operator pos:start="407:26" pos:end="407:27">-&gt;</operator><name pos:start="407:28" pos:end="407:48">slice_alpha_c0_offset</name></name></expr></argument>, <argument pos:start="407:51" pos:end="407:71"><expr pos:start="407:51" pos:end="407:71"><name pos:start="407:51" pos:end="407:71"><name pos:start="407:51" pos:end="407:52">sl</name><operator pos:start="407:53" pos:end="407:54">-&gt;</operator><name pos:start="407:55" pos:end="407:71">slice_beta_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="409:17" pos:end="409:43">return <expr pos:start="409:24" pos:end="409:42"><name pos:start="409:24" pos:end="409:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="419:5" pos:end="419:13">return <expr pos:start="419:12" pos:end="419:12"><literal type="number" pos:start="419:12" pos:end="419:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
