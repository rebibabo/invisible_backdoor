<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9676.c" pos:tabs="8"><function pos:start="1:1" pos:end="223:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">img_snapshot</name><parameter_list pos:start="1:24" pos:end="1:46">(<parameter pos:start="1:25" pos:end="1:32"><decl pos:start="1:25" pos:end="1:32"><type pos:start="1:25" pos:end="1:32"><name pos:start="1:25" pos:end="1:27">int</name></type> <name pos:start="1:29" pos:end="1:32">argc</name></decl></parameter>, <parameter pos:start="1:35" pos:end="1:45"><decl pos:start="1:35" pos:end="1:45"><type pos:start="1:35" pos:end="1:45"><name pos:start="1:35" pos:end="1:38">char</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier><modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:45">argv</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="223:1">{<block_content pos:start="5:5" pos:end="221:13">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">BlockDriverState</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:24">bs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:20">QEMUSnapshotInfo</name></type> <name pos:start="7:22" pos:end="7:23">sn</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:18">filename</name></decl>, <decl pos:start="9:21" pos:end="9:41"><type ref="prev" pos:start="9:5" pos:end="9:10"><modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:34">snapshot_name</name> <init pos:start="9:36" pos:end="9:41">= <expr pos:start="9:38" pos:end="9:41"><name pos:start="9:38" pos:end="9:41">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">c</name></decl>, <decl pos:start="11:12" pos:end="11:18"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:14">ret</name> <init pos:start="11:16" pos:end="11:18">= <expr pos:start="11:18" pos:end="11:18"><literal type="number" pos:start="11:18" pos:end="11:18">0</literal></expr></init></decl>, <decl pos:start="11:21" pos:end="11:31"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:21" pos:end="11:31">bdrv_oflags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:14">action</name> <init pos:start="13:16" pos:end="13:18">= <expr pos:start="13:18" pos:end="13:18"><literal type="number" pos:start="13:18" pos:end="13:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:20"><decl pos:start="15:5" pos:end="15:19"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:16">qemu_timeval</name></type> <name pos:start="15:18" pos:end="15:19">tv</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:45"><expr pos:start="19:5" pos:end="19:44"><name pos:start="19:5" pos:end="19:15">bdrv_oflags</name> <operator pos:start="19:17" pos:end="19:17">=</operator> <name pos:start="19:19" pos:end="19:30">BDRV_O_FLAGS</name> <operator pos:start="19:32" pos:end="19:32">|</operator> <name pos:start="19:34" pos:end="19:44">BDRV_O_RDWR</name></expr>;</expr_stmt>

    <comment type="block" pos:start="21:5" pos:end="21:38">/* Parse commandline parameters */</comment>

    <for pos:start="23:5" pos:end="109:5">for<control pos:start="23:8" pos:end="23:11">(<init pos:start="23:9" pos:end="23:9">;</init><condition pos:start="23:10" pos:end="23:10">;</condition><incr/>)</control> <block pos:start="23:13" pos:end="109:5">{<block_content pos:start="25:9" pos:end="107:9">

        <expr_stmt pos:start="25:9" pos:end="25:43"><expr pos:start="25:9" pos:end="25:42"><name pos:start="25:9" pos:end="25:9">c</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <call pos:start="25:13" pos:end="25:42"><name pos:start="25:13" pos:end="25:18">getopt</name><argument_list pos:start="25:19" pos:end="25:42">(<argument pos:start="25:20" pos:end="25:23"><expr pos:start="25:20" pos:end="25:23"><name pos:start="25:20" pos:end="25:23">argc</name></expr></argument>, <argument pos:start="25:26" pos:end="25:29"><expr pos:start="25:26" pos:end="25:29"><name pos:start="25:26" pos:end="25:29">argv</name></expr></argument>, <argument pos:start="25:32" pos:end="25:41"><expr pos:start="25:32" pos:end="25:41"><literal type="string" pos:start="25:32" pos:end="25:41">"la:c:d:h"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="31:9"><if pos:start="27:9" pos:end="31:9">if <condition pos:start="27:12" pos:end="27:20">(<expr pos:start="27:13" pos:end="27:19"><name pos:start="27:13" pos:end="27:13">c</name> <operator pos:start="27:15" pos:end="27:16">==</operator> <operator pos:start="27:18" pos:end="27:18">-</operator><literal type="number" pos:start="27:19" pos:end="27:19">1</literal></expr>)</condition> <block pos:start="27:22" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:18">

            <break pos:start="29:13" pos:end="29:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <switch pos:start="33:9" pos:end="107:9">switch<condition pos:start="33:15" pos:end="33:17">(<expr pos:start="33:16" pos:end="33:16"><name pos:start="33:16" pos:end="33:16">c</name></expr>)</condition> <block pos:start="33:19" pos:end="107:9">{<block_content pos:start="35:9" pos:end="105:18">

        <case pos:start="35:9" pos:end="35:17">case <expr pos:start="35:14" pos:end="35:16"><literal type="char" pos:start="35:14" pos:end="35:16">'?'</literal></expr>:</case>

        <case pos:start="37:9" pos:end="37:17">case <expr pos:start="37:14" pos:end="37:16"><literal type="char" pos:start="37:14" pos:end="37:16">'h'</literal></expr>:</case>

            <expr_stmt pos:start="39:13" pos:end="39:19"><expr pos:start="39:13" pos:end="39:18"><call pos:start="39:13" pos:end="39:18"><name pos:start="39:13" pos:end="39:16">help</name><argument_list pos:start="39:17" pos:end="39:18">()</argument_list></call></expr>;</expr_stmt>

            <return pos:start="41:13" pos:end="41:21">return <expr pos:start="41:20" pos:end="41:20"><literal type="number" pos:start="41:20" pos:end="41:20">0</literal></expr>;</return>

        <case pos:start="43:9" pos:end="43:17">case <expr pos:start="43:14" pos:end="43:16"><literal type="char" pos:start="43:14" pos:end="43:16">'l'</literal></expr>:</case>

            <if_stmt pos:start="45:13" pos:end="51:13"><if pos:start="45:13" pos:end="51:13">if <condition pos:start="45:16" pos:end="45:23">(<expr pos:start="45:17" pos:end="45:22"><name pos:start="45:17" pos:end="45:22">action</name></expr>)</condition> <block pos:start="45:25" pos:end="51:13">{<block_content pos:start="47:17" pos:end="49:25">

                <expr_stmt pos:start="47:17" pos:end="47:23"><expr pos:start="47:17" pos:end="47:22"><call pos:start="47:17" pos:end="47:22"><name pos:start="47:17" pos:end="47:20">help</name><argument_list pos:start="47:21" pos:end="47:22">()</argument_list></call></expr>;</expr_stmt>

                <return pos:start="49:17" pos:end="49:25">return <expr pos:start="49:24" pos:end="49:24"><literal type="number" pos:start="49:24" pos:end="49:24">0</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:35"><expr pos:start="53:13" pos:end="53:34"><name pos:start="53:13" pos:end="53:18">action</name> <operator pos:start="53:20" pos:end="53:20">=</operator> <name pos:start="53:22" pos:end="53:34">SNAPSHOT_LIST</name></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:40"><expr pos:start="55:13" pos:end="55:39"><name pos:start="55:13" pos:end="55:23">bdrv_oflags</name> <operator pos:start="55:25" pos:end="55:26">&amp;=</operator> <operator pos:start="55:28" pos:end="55:28">~</operator><name pos:start="55:29" pos:end="55:39">BDRV_O_RDWR</name></expr>;</expr_stmt> <comment type="block" pos:start="55:42" pos:end="55:61">/* no need for RW */</comment>

            <break pos:start="57:13" pos:end="57:18">break;</break>

        <case pos:start="59:9" pos:end="59:17">case <expr pos:start="59:14" pos:end="59:16"><literal type="char" pos:start="59:14" pos:end="59:16">'a'</literal></expr>:</case>

            <if_stmt pos:start="61:13" pos:end="67:13"><if pos:start="61:13" pos:end="67:13">if <condition pos:start="61:16" pos:end="61:23">(<expr pos:start="61:17" pos:end="61:22"><name pos:start="61:17" pos:end="61:22">action</name></expr>)</condition> <block pos:start="61:25" pos:end="67:13">{<block_content pos:start="63:17" pos:end="65:25">

                <expr_stmt pos:start="63:17" pos:end="63:23"><expr pos:start="63:17" pos:end="63:22"><call pos:start="63:17" pos:end="63:22"><name pos:start="63:17" pos:end="63:20">help</name><argument_list pos:start="63:21" pos:end="63:22">()</argument_list></call></expr>;</expr_stmt>

                <return pos:start="65:17" pos:end="65:25">return <expr pos:start="65:24" pos:end="65:24"><literal type="number" pos:start="65:24" pos:end="65:24">0</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:36"><expr pos:start="69:13" pos:end="69:35"><name pos:start="69:13" pos:end="69:18">action</name> <operator pos:start="69:20" pos:end="69:20">=</operator> <name pos:start="69:22" pos:end="69:35">SNAPSHOT_APPLY</name></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:35"><expr pos:start="71:13" pos:end="71:34"><name pos:start="71:13" pos:end="71:25">snapshot_name</name> <operator pos:start="71:27" pos:end="71:27">=</operator> <name pos:start="71:29" pos:end="71:34">optarg</name></expr>;</expr_stmt>

            <break pos:start="73:13" pos:end="73:18">break;</break>

        <case pos:start="75:9" pos:end="75:17">case <expr pos:start="75:14" pos:end="75:16"><literal type="char" pos:start="75:14" pos:end="75:16">'c'</literal></expr>:</case>

            <if_stmt pos:start="77:13" pos:end="83:13"><if pos:start="77:13" pos:end="83:13">if <condition pos:start="77:16" pos:end="77:23">(<expr pos:start="77:17" pos:end="77:22"><name pos:start="77:17" pos:end="77:22">action</name></expr>)</condition> <block pos:start="77:25" pos:end="83:13">{<block_content pos:start="79:17" pos:end="81:25">

                <expr_stmt pos:start="79:17" pos:end="79:23"><expr pos:start="79:17" pos:end="79:22"><call pos:start="79:17" pos:end="79:22"><name pos:start="79:17" pos:end="79:20">help</name><argument_list pos:start="79:21" pos:end="79:22">()</argument_list></call></expr>;</expr_stmt>

                <return pos:start="81:17" pos:end="81:25">return <expr pos:start="81:24" pos:end="81:24"><literal type="number" pos:start="81:24" pos:end="81:24">0</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:37"><expr pos:start="85:13" pos:end="85:36"><name pos:start="85:13" pos:end="85:18">action</name> <operator pos:start="85:20" pos:end="85:20">=</operator> <name pos:start="85:22" pos:end="85:36">SNAPSHOT_CREATE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:35"><expr pos:start="87:13" pos:end="87:34"><name pos:start="87:13" pos:end="87:25">snapshot_name</name> <operator pos:start="87:27" pos:end="87:27">=</operator> <name pos:start="87:29" pos:end="87:34">optarg</name></expr>;</expr_stmt>

            <break pos:start="89:13" pos:end="89:18">break;</break>

        <case pos:start="91:9" pos:end="91:17">case <expr pos:start="91:14" pos:end="91:16"><literal type="char" pos:start="91:14" pos:end="91:16">'d'</literal></expr>:</case>

            <if_stmt pos:start="93:13" pos:end="99:13"><if pos:start="93:13" pos:end="99:13">if <condition pos:start="93:16" pos:end="93:23">(<expr pos:start="93:17" pos:end="93:22"><name pos:start="93:17" pos:end="93:22">action</name></expr>)</condition> <block pos:start="93:25" pos:end="99:13">{<block_content pos:start="95:17" pos:end="97:25">

                <expr_stmt pos:start="95:17" pos:end="95:23"><expr pos:start="95:17" pos:end="95:22"><call pos:start="95:17" pos:end="95:22"><name pos:start="95:17" pos:end="95:20">help</name><argument_list pos:start="95:21" pos:end="95:22">()</argument_list></call></expr>;</expr_stmt>

                <return pos:start="97:17" pos:end="97:25">return <expr pos:start="97:24" pos:end="97:24"><literal type="number" pos:start="97:24" pos:end="97:24">0</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:37"><expr pos:start="101:13" pos:end="101:36"><name pos:start="101:13" pos:end="101:18">action</name> <operator pos:start="101:20" pos:end="101:20">=</operator> <name pos:start="101:22" pos:end="101:36">SNAPSHOT_DELETE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:35"><expr pos:start="103:13" pos:end="103:34"><name pos:start="103:13" pos:end="103:25">snapshot_name</name> <operator pos:start="103:27" pos:end="103:27">=</operator> <name pos:start="103:29" pos:end="103:34">optarg</name></expr>;</expr_stmt>

            <break pos:start="105:13" pos:end="105:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></for>



    <if_stmt pos:start="113:5" pos:end="117:5"><if pos:start="113:5" pos:end="117:5">if <condition pos:start="113:8" pos:end="113:23">(<expr pos:start="113:9" pos:end="113:22"><name pos:start="113:9" pos:end="113:14">optind</name> <operator pos:start="113:16" pos:end="113:17">&gt;=</operator> <name pos:start="113:19" pos:end="113:22">argc</name></expr>)</condition> <block pos:start="113:25" pos:end="117:5">{<block_content pos:start="115:9" pos:end="115:15">

        <expr_stmt pos:start="115:9" pos:end="115:15"><expr pos:start="115:9" pos:end="115:14"><call pos:start="115:9" pos:end="115:14"><name pos:start="115:9" pos:end="115:12">help</name><argument_list pos:start="115:13" pos:end="115:14">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:30"><expr pos:start="119:5" pos:end="119:29"><name pos:start="119:5" pos:end="119:12">filename</name> <operator pos:start="119:14" pos:end="119:14">=</operator> <name pos:start="119:16" pos:end="119:29"><name pos:start="119:16" pos:end="119:19">argv</name><index pos:start="119:20" pos:end="119:29">[<expr pos:start="119:21" pos:end="119:28"><name pos:start="119:21" pos:end="119:26">optind</name><operator pos:start="119:27" pos:end="119:28">++</operator></expr>]</index></name></expr>;</expr_stmt>



    <comment type="block" pos:start="123:5" pos:end="123:24">/* Open the image */</comment>

    <expr_stmt pos:start="125:5" pos:end="125:52"><expr pos:start="125:5" pos:end="125:51"><name pos:start="125:5" pos:end="125:6">bs</name> <operator pos:start="125:8" pos:end="125:8">=</operator> <call pos:start="125:10" pos:end="125:51"><name pos:start="125:10" pos:end="125:22">bdrv_new_open</name><argument_list pos:start="125:23" pos:end="125:51">(<argument pos:start="125:24" pos:end="125:31"><expr pos:start="125:24" pos:end="125:31"><name pos:start="125:24" pos:end="125:31">filename</name></expr></argument>, <argument pos:start="125:34" pos:end="125:37"><expr pos:start="125:34" pos:end="125:37"><name pos:start="125:34" pos:end="125:37">NULL</name></expr></argument>, <argument pos:start="125:40" pos:end="125:50"><expr pos:start="125:40" pos:end="125:50"><name pos:start="125:40" pos:end="125:50">bdrv_oflags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="127:5" pos:end="131:5"><if pos:start="127:5" pos:end="131:5">if <condition pos:start="127:8" pos:end="127:12">(<expr pos:start="127:9" pos:end="127:11"><operator pos:start="127:9" pos:end="127:9">!</operator><name pos:start="127:10" pos:end="127:11">bs</name></expr>)</condition> <block pos:start="127:14" pos:end="131:5">{<block_content pos:start="129:9" pos:end="129:17">

        <return pos:start="129:9" pos:end="129:17">return <expr pos:start="129:16" pos:end="129:16"><literal type="number" pos:start="129:16" pos:end="129:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="135:5" pos:end="135:38">/* Perform the requested action */</comment>

    <switch pos:start="137:5" pos:end="207:5">switch<condition pos:start="137:11" pos:end="137:18">(<expr pos:start="137:12" pos:end="137:17"><name pos:start="137:12" pos:end="137:17">action</name></expr>)</condition> <block pos:start="137:20" pos:end="207:5">{<block_content pos:start="139:5" pos:end="205:14">

    <case pos:start="139:5" pos:end="139:23">case <expr pos:start="139:10" pos:end="139:22"><name pos:start="139:10" pos:end="139:22">SNAPSHOT_LIST</name></expr>:</case>

        <expr_stmt pos:start="141:9" pos:end="141:27"><expr pos:start="141:9" pos:end="141:26"><call pos:start="141:9" pos:end="141:26"><name pos:start="141:9" pos:end="141:22">dump_snapshots</name><argument_list pos:start="141:23" pos:end="141:26">(<argument pos:start="141:24" pos:end="141:25"><expr pos:start="141:24" pos:end="141:25"><name pos:start="141:24" pos:end="141:25">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="143:9" pos:end="143:14">break;</break>



    <case pos:start="147:5" pos:end="147:25">case <expr pos:start="147:10" pos:end="147:24"><name pos:start="147:10" pos:end="147:24">SNAPSHOT_CREATE</name></expr>:</case>

        <expr_stmt pos:start="149:9" pos:end="149:35"><expr pos:start="149:9" pos:end="149:34"><call pos:start="149:9" pos:end="149:34"><name pos:start="149:9" pos:end="149:14">memset</name><argument_list pos:start="149:15" pos:end="149:34">(<argument pos:start="149:16" pos:end="149:18"><expr pos:start="149:16" pos:end="149:18"><operator pos:start="149:16" pos:end="149:16">&amp;</operator><name pos:start="149:17" pos:end="149:18">sn</name></expr></argument>, <argument pos:start="149:21" pos:end="149:21"><expr pos:start="149:21" pos:end="149:21"><literal type="number" pos:start="149:21" pos:end="149:21">0</literal></expr></argument>, <argument pos:start="149:24" pos:end="149:33"><expr pos:start="149:24" pos:end="149:33"><sizeof pos:start="149:24" pos:end="149:33">sizeof<argument_list pos:start="149:30" pos:end="149:33">(<argument pos:start="149:31" pos:end="149:32"><expr pos:start="149:31" pos:end="149:32"><name pos:start="149:31" pos:end="149:32">sn</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:57"><expr pos:start="151:9" pos:end="151:56"><call pos:start="151:9" pos:end="151:56"><name pos:start="151:9" pos:end="151:15">pstrcpy</name><argument_list pos:start="151:16" pos:end="151:56">(<argument pos:start="151:17" pos:end="151:23"><expr pos:start="151:17" pos:end="151:23"><name pos:start="151:17" pos:end="151:23"><name pos:start="151:17" pos:end="151:18">sn</name><operator pos:start="151:19" pos:end="151:19">.</operator><name pos:start="151:20" pos:end="151:23">name</name></name></expr></argument>, <argument pos:start="151:26" pos:end="151:40"><expr pos:start="151:26" pos:end="151:40"><sizeof pos:start="151:26" pos:end="151:40">sizeof<argument_list pos:start="151:32" pos:end="151:40">(<argument pos:start="151:33" pos:end="151:39"><expr pos:start="151:33" pos:end="151:39"><name pos:start="151:33" pos:end="151:39"><name pos:start="151:33" pos:end="151:34">sn</name><operator pos:start="151:35" pos:end="151:35">.</operator><name pos:start="151:36" pos:end="151:39">name</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="151:43" pos:end="151:55"><expr pos:start="151:43" pos:end="151:55"><name pos:start="151:43" pos:end="151:55">snapshot_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="155:9" pos:end="155:31"><expr pos:start="155:9" pos:end="155:30"><call pos:start="155:9" pos:end="155:30"><name pos:start="155:9" pos:end="155:25">qemu_gettimeofday</name><argument_list pos:start="155:26" pos:end="155:30">(<argument pos:start="155:27" pos:end="155:29"><expr pos:start="155:27" pos:end="155:29"><operator pos:start="155:27" pos:end="155:27">&amp;</operator><name pos:start="155:28" pos:end="155:29">tv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:32"><expr pos:start="157:9" pos:end="157:31"><name pos:start="157:9" pos:end="157:19"><name pos:start="157:9" pos:end="157:10">sn</name><operator pos:start="157:11" pos:end="157:11">.</operator><name pos:start="157:12" pos:end="157:19">date_sec</name></name> <operator pos:start="157:21" pos:end="157:21">=</operator> <name pos:start="157:23" pos:end="157:31"><name pos:start="157:23" pos:end="157:24">tv</name><operator pos:start="157:25" pos:end="157:25">.</operator><name pos:start="157:26" pos:end="157:31">tv_sec</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:41"><expr pos:start="159:9" pos:end="159:40"><name pos:start="159:9" pos:end="159:20"><name pos:start="159:9" pos:end="159:10">sn</name><operator pos:start="159:11" pos:end="159:11">.</operator><name pos:start="159:12" pos:end="159:20">date_nsec</name></name> <operator pos:start="159:22" pos:end="159:22">=</operator> <name pos:start="159:24" pos:end="159:33"><name pos:start="159:24" pos:end="159:25">tv</name><operator pos:start="159:26" pos:end="159:26">.</operator><name pos:start="159:27" pos:end="159:33">tv_usec</name></name> <operator pos:start="159:35" pos:end="159:35">*</operator> <literal type="number" pos:start="159:37" pos:end="159:40">1000</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="163:9" pos:end="163:44"><expr pos:start="163:9" pos:end="163:43"><name pos:start="163:9" pos:end="163:11">ret</name> <operator pos:start="163:13" pos:end="163:13">=</operator> <call pos:start="163:15" pos:end="163:43"><name pos:start="163:15" pos:end="163:34">bdrv_snapshot_create</name><argument_list pos:start="163:35" pos:end="163:43">(<argument pos:start="163:36" pos:end="163:37"><expr pos:start="163:36" pos:end="163:37"><name pos:start="163:36" pos:end="163:37">bs</name></expr></argument>, <argument pos:start="163:40" pos:end="163:42"><expr pos:start="163:40" pos:end="163:42"><operator pos:start="163:40" pos:end="163:40">&amp;</operator><name pos:start="163:41" pos:end="163:42">sn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="165:9" pos:end="171:9"><if pos:start="165:9" pos:end="171:9">if <condition pos:start="165:12" pos:end="165:16">(<expr pos:start="165:13" pos:end="165:15"><name pos:start="165:13" pos:end="165:15">ret</name></expr>)</condition> <block pos:start="165:18" pos:end="171:9">{<block_content pos:start="167:13" pos:end="169:52">

            <expr_stmt pos:start="167:13" pos:end="169:52"><expr pos:start="167:13" pos:end="169:51"><call pos:start="167:13" pos:end="169:51"><name pos:start="167:13" pos:end="167:24">error_report</name><argument_list pos:start="167:25" pos:end="169:51">(<argument pos:start="167:26" pos:end="167:66"><expr pos:start="167:26" pos:end="167:66"><literal type="string" pos:start="167:26" pos:end="167:66">"Could not create snapshot '%s': %d (%s)"</literal></expr></argument>,

                <argument pos:start="169:17" pos:end="169:29"><expr pos:start="169:17" pos:end="169:29"><name pos:start="169:17" pos:end="169:29">snapshot_name</name></expr></argument>, <argument pos:start="169:32" pos:end="169:34"><expr pos:start="169:32" pos:end="169:34"><name pos:start="169:32" pos:end="169:34">ret</name></expr></argument>, <argument pos:start="169:37" pos:end="169:50"><expr pos:start="169:37" pos:end="169:50"><call pos:start="169:37" pos:end="169:50"><name pos:start="169:37" pos:end="169:44">strerror</name><argument_list pos:start="169:45" pos:end="169:50">(<argument pos:start="169:46" pos:end="169:49"><expr pos:start="169:46" pos:end="169:49"><operator pos:start="169:46" pos:end="169:46">-</operator><name pos:start="169:47" pos:end="169:49">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="173:9" pos:end="173:14">break;</break>



    <case pos:start="177:5" pos:end="177:24">case <expr pos:start="177:10" pos:end="177:23"><name pos:start="177:10" pos:end="177:23">SNAPSHOT_APPLY</name></expr>:</case>

        <expr_stmt pos:start="179:9" pos:end="179:52"><expr pos:start="179:9" pos:end="179:51"><name pos:start="179:9" pos:end="179:11">ret</name> <operator pos:start="179:13" pos:end="179:13">=</operator> <call pos:start="179:15" pos:end="179:51"><name pos:start="179:15" pos:end="179:32">bdrv_snapshot_goto</name><argument_list pos:start="179:33" pos:end="179:51">(<argument pos:start="179:34" pos:end="179:35"><expr pos:start="179:34" pos:end="179:35"><name pos:start="179:34" pos:end="179:35">bs</name></expr></argument>, <argument pos:start="179:38" pos:end="179:50"><expr pos:start="179:38" pos:end="179:50"><name pos:start="179:38" pos:end="179:50">snapshot_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="181:9" pos:end="187:9"><if pos:start="181:9" pos:end="187:9">if <condition pos:start="181:12" pos:end="181:16">(<expr pos:start="181:13" pos:end="181:15"><name pos:start="181:13" pos:end="181:15">ret</name></expr>)</condition> <block pos:start="181:18" pos:end="187:9">{<block_content pos:start="183:13" pos:end="185:52">

            <expr_stmt pos:start="183:13" pos:end="185:52"><expr pos:start="183:13" pos:end="185:51"><call pos:start="183:13" pos:end="185:51"><name pos:start="183:13" pos:end="183:24">error_report</name><argument_list pos:start="183:25" pos:end="185:51">(<argument pos:start="183:26" pos:end="183:65"><expr pos:start="183:26" pos:end="183:65"><literal type="string" pos:start="183:26" pos:end="183:65">"Could not apply snapshot '%s': %d (%s)"</literal></expr></argument>,

                <argument pos:start="185:17" pos:end="185:29"><expr pos:start="185:17" pos:end="185:29"><name pos:start="185:17" pos:end="185:29">snapshot_name</name></expr></argument>, <argument pos:start="185:32" pos:end="185:34"><expr pos:start="185:32" pos:end="185:34"><name pos:start="185:32" pos:end="185:34">ret</name></expr></argument>, <argument pos:start="185:37" pos:end="185:50"><expr pos:start="185:37" pos:end="185:50"><call pos:start="185:37" pos:end="185:50"><name pos:start="185:37" pos:end="185:44">strerror</name><argument_list pos:start="185:45" pos:end="185:50">(<argument pos:start="185:46" pos:end="185:49"><expr pos:start="185:46" pos:end="185:49"><operator pos:start="185:46" pos:end="185:46">-</operator><name pos:start="185:47" pos:end="185:49">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="189:9" pos:end="189:14">break;</break>



    <case pos:start="193:5" pos:end="193:25">case <expr pos:start="193:10" pos:end="193:24"><name pos:start="193:10" pos:end="193:24">SNAPSHOT_DELETE</name></expr>:</case>

        <expr_stmt pos:start="195:9" pos:end="195:54"><expr pos:start="195:9" pos:end="195:53"><name pos:start="195:9" pos:end="195:11">ret</name> <operator pos:start="195:13" pos:end="195:13">=</operator> <call pos:start="195:15" pos:end="195:53"><name pos:start="195:15" pos:end="195:34">bdrv_snapshot_delete</name><argument_list pos:start="195:35" pos:end="195:53">(<argument pos:start="195:36" pos:end="195:37"><expr pos:start="195:36" pos:end="195:37"><name pos:start="195:36" pos:end="195:37">bs</name></expr></argument>, <argument pos:start="195:40" pos:end="195:52"><expr pos:start="195:40" pos:end="195:52"><name pos:start="195:40" pos:end="195:52">snapshot_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="197:9" pos:end="203:9"><if pos:start="197:9" pos:end="203:9">if <condition pos:start="197:12" pos:end="197:16">(<expr pos:start="197:13" pos:end="197:15"><name pos:start="197:13" pos:end="197:15">ret</name></expr>)</condition> <block pos:start="197:18" pos:end="203:9">{<block_content pos:start="199:13" pos:end="201:52">

            <expr_stmt pos:start="199:13" pos:end="201:52"><expr pos:start="199:13" pos:end="201:51"><call pos:start="199:13" pos:end="201:51"><name pos:start="199:13" pos:end="199:24">error_report</name><argument_list pos:start="199:25" pos:end="201:51">(<argument pos:start="199:26" pos:end="199:66"><expr pos:start="199:26" pos:end="199:66"><literal type="string" pos:start="199:26" pos:end="199:66">"Could not delete snapshot '%s': %d (%s)"</literal></expr></argument>,

                <argument pos:start="201:17" pos:end="201:29"><expr pos:start="201:17" pos:end="201:29"><name pos:start="201:17" pos:end="201:29">snapshot_name</name></expr></argument>, <argument pos:start="201:32" pos:end="201:34"><expr pos:start="201:32" pos:end="201:34"><name pos:start="201:32" pos:end="201:34">ret</name></expr></argument>, <argument pos:start="201:37" pos:end="201:50"><expr pos:start="201:37" pos:end="201:50"><call pos:start="201:37" pos:end="201:50"><name pos:start="201:37" pos:end="201:44">strerror</name><argument_list pos:start="201:45" pos:end="201:50">(<argument pos:start="201:46" pos:end="201:49"><expr pos:start="201:46" pos:end="201:49"><operator pos:start="201:46" pos:end="201:46">-</operator><name pos:start="201:47" pos:end="201:49">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="205:9" pos:end="205:14">break;</break>

    </block_content>}</block></switch>



    <comment type="block" pos:start="211:5" pos:end="211:17">/* Cleanup */</comment>

    <expr_stmt pos:start="213:5" pos:end="213:20"><expr pos:start="213:5" pos:end="213:19"><call pos:start="213:5" pos:end="213:19"><name pos:start="213:5" pos:end="213:15">bdrv_delete</name><argument_list pos:start="213:16" pos:end="213:19">(<argument pos:start="213:17" pos:end="213:18"><expr pos:start="213:17" pos:end="213:18"><name pos:start="213:17" pos:end="213:18">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="215:5" pos:end="219:5"><if pos:start="215:5" pos:end="219:5">if <condition pos:start="215:8" pos:end="215:12">(<expr pos:start="215:9" pos:end="215:11"><name pos:start="215:9" pos:end="215:11">ret</name></expr>)</condition> <block pos:start="215:14" pos:end="219:5">{<block_content pos:start="217:9" pos:end="217:17">

        <return pos:start="217:9" pos:end="217:17">return <expr pos:start="217:16" pos:end="217:16"><literal type="number" pos:start="217:16" pos:end="217:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="221:5" pos:end="221:13">return <expr pos:start="221:12" pos:end="221:12"><literal type="number" pos:start="221:12" pos:end="221:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
