<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21502.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:18">get_key</name><parameter_list pos:start="1:19" pos:end="1:87">(<parameter pos:start="1:20" pos:end="1:37"><decl pos:start="1:20" pos:end="1:37"><type pos:start="1:20" pos:end="1:37"><specifier pos:start="1:20" pos:end="1:24">const</specifier> <name pos:start="1:26" pos:end="1:29">char</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier><modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:37">ropts</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:56"><decl pos:start="1:40" pos:end="1:56"><type pos:start="1:40" pos:end="1:56"><specifier pos:start="1:40" pos:end="1:44">const</specifier> <name pos:start="1:46" pos:end="1:49">char</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:56">delim</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:67"><decl pos:start="1:59" pos:end="1:67"><type pos:start="1:59" pos:end="1:67"><name pos:start="1:59" pos:end="1:62">char</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:67">key</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:86"><decl pos:start="1:70" pos:end="1:86"><type pos:start="1:70" pos:end="1:86"><name pos:start="1:70" pos:end="1:77">unsigned</name></type> <name pos:start="1:79" pos:end="1:86">key_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:13">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">unsigned</name></type> <name pos:start="5:14" pos:end="5:20">key_pos</name> <init pos:start="5:22" pos:end="5:24">= <expr pos:start="5:24" pos:end="5:24"><literal type="number" pos:start="5:24" pos:end="5:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:20">opts</name> <init pos:start="7:22" pos:end="7:29">= <expr pos:start="7:24" pos:end="7:29"><operator pos:start="7:24" pos:end="7:24">*</operator><name pos:start="7:25" pos:end="7:29">ropts</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:38"><expr pos:start="11:5" pos:end="11:37"><name pos:start="11:5" pos:end="11:8">opts</name> <operator pos:start="11:10" pos:end="11:11">+=</operator> <call pos:start="11:13" pos:end="11:37"><name pos:start="11:13" pos:end="11:18">strspn</name><argument_list pos:start="11:19" pos:end="11:37">(<argument pos:start="11:20" pos:end="11:23"><expr pos:start="11:20" pos:end="11:23"><name pos:start="11:20" pos:end="11:23">opts</name></expr></argument>, <argument pos:start="11:26" pos:end="11:36"><expr pos:start="11:26" pos:end="11:36"><name pos:start="11:26" pos:end="11:36">WHITESPACES</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="13:5" pos:end="23:5">while <condition pos:start="13:11" pos:end="13:30">(<expr pos:start="13:12" pos:end="13:29"><call pos:start="13:12" pos:end="13:29"><name pos:start="13:12" pos:end="13:22">is_key_char</name><argument_list pos:start="13:23" pos:end="13:29">(<argument pos:start="13:24" pos:end="13:28"><expr pos:start="13:24" pos:end="13:28"><operator pos:start="13:24" pos:end="13:24">*</operator><name pos:start="13:25" pos:end="13:28">opts</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:32" pos:end="23:5">{<block_content pos:start="15:9" pos:end="21:17">

        <expr_stmt pos:start="15:9" pos:end="15:31"><expr pos:start="15:9" pos:end="15:30"><name pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:11">key</name><index pos:start="15:12" pos:end="15:22">[<expr pos:start="15:13" pos:end="15:21"><name pos:start="15:13" pos:end="15:19">key_pos</name><operator pos:start="15:20" pos:end="15:21">++</operator></expr>]</index></name> <operator pos:start="15:24" pos:end="15:24">=</operator> <operator pos:start="15:26" pos:end="15:26">*</operator><name pos:start="15:27" pos:end="15:30">opts</name></expr>;</expr_stmt>

        <if_stmt pos:start="17:9" pos:end="19:22"><if pos:start="17:9" pos:end="19:22">if <condition pos:start="17:12" pos:end="17:32">(<expr pos:start="17:13" pos:end="17:31"><name pos:start="17:13" pos:end="17:19">key_pos</name> <operator pos:start="17:21" pos:end="17:22">==</operator> <name pos:start="17:24" pos:end="17:31">key_size</name></expr>)</condition><block type="pseudo" pos:start="19:13" pos:end="19:22"><block_content pos:start="19:13" pos:end="19:22">

            <expr_stmt pos:start="19:13" pos:end="19:22"><expr pos:start="19:13" pos:end="19:21"><name pos:start="19:13" pos:end="19:19">key_pos</name><operator pos:start="19:20" pos:end="19:21">--</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:17"><expr pos:start="21:9" pos:end="21:16"><operator pos:start="21:9" pos:end="21:9">(</operator><name pos:start="21:10" pos:end="21:13">opts</name><operator pos:start="21:14" pos:end="21:14">)</operator><operator pos:start="21:15" pos:end="21:16">++</operator></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="25:5" pos:end="25:38"><expr pos:start="25:5" pos:end="25:37"><name pos:start="25:5" pos:end="25:8">opts</name> <operator pos:start="25:10" pos:end="25:11">+=</operator> <call pos:start="25:13" pos:end="25:37"><name pos:start="25:13" pos:end="25:18">strspn</name><argument_list pos:start="25:19" pos:end="25:37">(<argument pos:start="25:20" pos:end="25:23"><expr pos:start="25:20" pos:end="25:23"><name pos:start="25:20" pos:end="25:23">opts</name></expr></argument>, <argument pos:start="25:26" pos:end="25:36"><expr pos:start="25:26" pos:end="25:36"><name pos:start="25:26" pos:end="25:36">WHITESPACES</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="29:31"><if pos:start="27:5" pos:end="29:31">if <condition pos:start="27:8" pos:end="27:40">(<expr pos:start="27:9" pos:end="27:39"><operator pos:start="27:9" pos:end="27:9">!</operator><operator pos:start="27:10" pos:end="27:10">*</operator><name pos:start="27:11" pos:end="27:14">opts</name> <operator pos:start="27:16" pos:end="27:17">||</operator> <operator pos:start="27:19" pos:end="27:19">!</operator><call pos:start="27:20" pos:end="27:39"><name pos:start="27:20" pos:end="27:25">strchr</name><argument_list pos:start="27:26" pos:end="27:39">(<argument pos:start="27:27" pos:end="27:31"><expr pos:start="27:27" pos:end="27:31"><name pos:start="27:27" pos:end="27:31">delim</name></expr></argument>, <argument pos:start="27:34" pos:end="27:38"><expr pos:start="27:34" pos:end="27:38"><operator pos:start="27:34" pos:end="27:34">*</operator><name pos:start="27:35" pos:end="27:38">opts</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:31"><block_content pos:start="29:9" pos:end="29:31">

        <return pos:start="29:9" pos:end="29:31">return <expr pos:start="29:16" pos:end="29:30"><call pos:start="29:16" pos:end="29:30"><name pos:start="29:16" pos:end="29:22">AVERROR</name><argument_list pos:start="29:23" pos:end="29:30">(<argument pos:start="29:24" pos:end="29:29"><expr pos:start="29:24" pos:end="29:29"><name pos:start="29:24" pos:end="29:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:11"><expr pos:start="31:5" pos:end="31:10"><name pos:start="31:5" pos:end="31:8">opts</name><operator pos:start="31:9" pos:end="31:10">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:23"><expr pos:start="33:5" pos:end="33:22"><name pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:7">key</name><index pos:start="33:8" pos:end="33:18">[<expr pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:15">key_pos</name><operator pos:start="33:16" pos:end="33:17">++</operator></expr>]</index></name> <operator pos:start="33:20" pos:end="33:20">=</operator> <literal type="number" pos:start="33:22" pos:end="33:22">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="37:69"><if pos:start="35:5" pos:end="37:69">if <condition pos:start="35:8" pos:end="35:28">(<expr pos:start="35:9" pos:end="35:27"><name pos:start="35:9" pos:end="35:15">key_pos</name> <operator pos:start="35:17" pos:end="35:18">==</operator> <name pos:start="35:20" pos:end="35:27">key_size</name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:69"><block_content pos:start="37:9" pos:end="37:69">

        <expr_stmt pos:start="37:9" pos:end="37:69"><expr pos:start="37:9" pos:end="37:68"><name pos:start="37:9" pos:end="37:24"><name pos:start="37:9" pos:end="37:11">key</name><index pos:start="37:12" pos:end="37:24">[<expr pos:start="37:13" pos:end="37:23"><name pos:start="37:13" pos:end="37:19">key_pos</name> <operator pos:start="37:21" pos:end="37:21">-</operator> <literal type="number" pos:start="37:23" pos:end="37:23">4</literal></expr>]</index></name> <operator pos:start="37:26" pos:end="37:26">=</operator> <name pos:start="37:28" pos:end="37:43"><name pos:start="37:28" pos:end="37:30">key</name><index pos:start="37:31" pos:end="37:43">[<expr pos:start="37:32" pos:end="37:42"><name pos:start="37:32" pos:end="37:38">key_pos</name> <operator pos:start="37:40" pos:end="37:40">-</operator> <literal type="number" pos:start="37:42" pos:end="37:42">3</literal></expr>]</index></name> <operator pos:start="37:45" pos:end="37:45">=</operator> <name pos:start="37:47" pos:end="37:62"><name pos:start="37:47" pos:end="37:49">key</name><index pos:start="37:50" pos:end="37:62">[<expr pos:start="37:51" pos:end="37:61"><name pos:start="37:51" pos:end="37:57">key_pos</name> <operator pos:start="37:59" pos:end="37:59">-</operator> <literal type="number" pos:start="37:61" pos:end="37:61">2</literal></expr>]</index></name> <operator pos:start="37:64" pos:end="37:64">=</operator> <literal type="char" pos:start="37:66" pos:end="37:68">'.'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:18"><expr pos:start="39:5" pos:end="39:17"><operator pos:start="39:5" pos:end="39:5">*</operator><name pos:start="39:6" pos:end="39:10">ropts</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <name pos:start="39:14" pos:end="39:17">opts</name></expr>;</expr_stmt>

    <return pos:start="41:5" pos:end="41:13">return <expr pos:start="41:12" pos:end="41:12"><literal type="number" pos:start="41:12" pos:end="41:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
