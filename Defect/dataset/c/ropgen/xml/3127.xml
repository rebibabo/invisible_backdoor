<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3127.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:31">qmp_xen_save_devices_state</name><parameter_list pos:start="1:32" pos:end="1:67">(<parameter pos:start="1:33" pos:end="1:52"><decl pos:start="1:33" pos:end="1:52"><type pos:start="1:33" pos:end="1:52"><specifier pos:start="1:33" pos:end="1:37">const</specifier> <name pos:start="1:39" pos:end="1:42">char</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:52">filename</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:66"><decl pos:start="1:55" pos:end="1:66"><type pos:start="1:55" pos:end="1:66"><name pos:start="1:55" pos:end="1:59">Error</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier><modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:66">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:5">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">QEMUFile</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:15">f</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">QIOChannelFile</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:23">ioc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:24">saved_vm_running</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:45"><expr pos:start="15:5" pos:end="15:44"><name pos:start="15:5" pos:end="15:20">saved_vm_running</name> <operator pos:start="15:22" pos:end="15:22">=</operator> <call pos:start="15:24" pos:end="15:44"><name pos:start="15:24" pos:end="15:42">runstate_is_running</name><argument_list pos:start="15:43" pos:end="15:44">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:31"><expr pos:start="17:5" pos:end="17:30"><call pos:start="17:5" pos:end="17:30"><name pos:start="17:5" pos:end="17:11">vm_stop</name><argument_list pos:start="17:12" pos:end="17:30">(<argument pos:start="17:13" pos:end="17:29"><expr pos:start="17:13" pos:end="17:29"><name pos:start="17:13" pos:end="17:29">RUN_STATE_SAVE_VM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:33"><expr pos:start="19:5" pos:end="19:32"><call pos:start="19:5" pos:end="19:32"><name pos:start="19:5" pos:end="19:30">global_state_store_running</name><argument_list pos:start="19:31" pos:end="19:32">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:78"><expr pos:start="23:5" pos:end="23:77"><name pos:start="23:5" pos:end="23:7">ioc</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:77"><name pos:start="23:11" pos:end="23:35">qio_channel_file_new_path</name><argument_list pos:start="23:36" pos:end="23:77">(<argument pos:start="23:37" pos:end="23:44"><expr pos:start="23:37" pos:end="23:44"><name pos:start="23:37" pos:end="23:44">filename</name></expr></argument>, <argument pos:start="23:47" pos:end="23:64"><expr pos:start="23:47" pos:end="23:64"><name pos:start="23:47" pos:end="23:54">O_WRONLY</name> <operator pos:start="23:56" pos:end="23:56">|</operator> <name pos:start="23:58" pos:end="23:64">O_CREAT</name></expr></argument>, <argument pos:start="23:67" pos:end="23:70"><expr pos:start="23:67" pos:end="23:70"><literal type="number" pos:start="23:67" pos:end="23:70">0660</literal></expr></argument>, <argument pos:start="23:73" pos:end="23:76"><expr pos:start="23:73" pos:end="23:76"><name pos:start="23:73" pos:end="23:76">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:13">(<expr pos:start="25:9" pos:end="25:12"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:12">ioc</name></expr>)</condition> <block pos:start="25:15" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:21">

        <goto pos:start="27:9" pos:end="27:21">goto <name pos:start="27:14" pos:end="27:20">the_end</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:71"><expr pos:start="31:5" pos:end="31:70"><call pos:start="31:5" pos:end="31:70"><name pos:start="31:5" pos:end="31:24">qio_channel_set_name</name><argument_list pos:start="31:25" pos:end="31:70">(<argument pos:start="31:26" pos:end="31:41"><expr pos:start="31:26" pos:end="31:41"><call pos:start="31:26" pos:end="31:41"><name pos:start="31:26" pos:end="31:36">QIO_CHANNEL</name><argument_list pos:start="31:37" pos:end="31:41">(<argument pos:start="31:38" pos:end="31:40"><expr pos:start="31:38" pos:end="31:40"><name pos:start="31:38" pos:end="31:40">ioc</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="31:44" pos:end="31:69"><expr pos:start="31:44" pos:end="31:69"><literal type="string" pos:start="31:44" pos:end="31:69">"migration-xen-save-state"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:52"><expr pos:start="33:5" pos:end="33:51"><name pos:start="33:5" pos:end="33:5">f</name> <operator pos:start="33:7" pos:end="33:7">=</operator> <call pos:start="33:9" pos:end="33:51"><name pos:start="33:9" pos:end="33:33">qemu_fopen_channel_output</name><argument_list pos:start="33:34" pos:end="33:51">(<argument pos:start="33:35" pos:end="33:50"><expr pos:start="33:35" pos:end="33:50"><call pos:start="33:35" pos:end="33:50"><name pos:start="33:35" pos:end="33:45">QIO_CHANNEL</name><argument_list pos:start="33:46" pos:end="33:50">(<argument pos:start="33:47" pos:end="33:49"><expr pos:start="33:47" pos:end="33:49"><name pos:start="33:47" pos:end="33:49">ioc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:36"><expr pos:start="35:5" pos:end="35:35"><name pos:start="35:5" pos:end="35:7">ret</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <call pos:start="35:11" pos:end="35:35"><name pos:start="35:11" pos:end="35:32">qemu_save_device_state</name><argument_list pos:start="35:33" pos:end="35:35">(<argument pos:start="35:34" pos:end="35:34"><expr pos:start="35:34" pos:end="35:34"><name pos:start="35:34" pos:end="35:34">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:19"><expr pos:start="37:5" pos:end="37:18"><call pos:start="37:5" pos:end="37:18"><name pos:start="37:5" pos:end="37:15">qemu_fclose</name><argument_list pos:start="37:16" pos:end="37:18">(<argument pos:start="37:17" pos:end="37:17"><expr pos:start="37:17" pos:end="37:17"><name pos:start="37:17" pos:end="37:17">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:16">(<expr pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:11">ret</name> <operator pos:start="39:13" pos:end="39:13">&lt;</operator> <literal type="number" pos:start="39:15" pos:end="39:15">0</literal></expr>)</condition> <block pos:start="39:18" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:40">

        <expr_stmt pos:start="41:9" pos:end="41:40"><expr pos:start="41:9" pos:end="41:39"><call pos:start="41:9" pos:end="41:39"><name pos:start="41:9" pos:end="41:18">error_setg</name><argument_list pos:start="41:19" pos:end="41:39">(<argument pos:start="41:20" pos:end="41:23"><expr pos:start="41:20" pos:end="41:23"><name pos:start="41:20" pos:end="41:23">errp</name></expr></argument>, <argument pos:start="41:26" pos:end="41:38"><expr pos:start="41:26" pos:end="41:38"><name pos:start="41:26" pos:end="41:38">QERR_IO_ERROR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



 <label pos:start="47:2" pos:end="47:9"><name pos:start="47:2" pos:end="47:8">the_end</name>:</label>

    <if_stmt pos:start="49:5" pos:end="53:5"><if pos:start="49:5" pos:end="53:5">if <condition pos:start="49:8" pos:end="49:25">(<expr pos:start="49:9" pos:end="49:24"><name pos:start="49:9" pos:end="49:24">saved_vm_running</name></expr>)</condition> <block pos:start="49:27" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:19">

        <expr_stmt pos:start="51:9" pos:end="51:19"><expr pos:start="51:9" pos:end="51:18"><call pos:start="51:9" pos:end="51:18"><name pos:start="51:9" pos:end="51:16">vm_start</name><argument_list pos:start="51:17" pos:end="51:18">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
