<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15185.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">segment_start</name><parameter_list pos:start="1:25" pos:end="1:62">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:43"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:61"><decl pos:start="1:46" pos:end="1:61"><type pos:start="1:46" pos:end="1:61"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:61">write_header</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:13">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">SegmentContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">c</name> <init pos:start="5:23" pos:end="5:36">= <expr pos:start="5:25" pos:end="5:36"><name pos:start="5:25" pos:end="5:36"><name pos:start="5:25" pos:end="5:25">s</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">AVFormatContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:23">oc</name> <init pos:start="7:25" pos:end="7:32">= <expr pos:start="7:27" pos:end="7:32"><name pos:start="7:27" pos:end="7:32"><name pos:start="7:27" pos:end="7:27">c</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:32">avf</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">err</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="25:5"><if pos:start="13:5" pos:end="25:5">if <condition pos:start="13:8" pos:end="13:21">(<expr pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:20">write_header</name></expr>)</condition> <block pos:start="13:23" pos:end="25:5">{<block_content pos:start="15:9" pos:end="23:20">

        <expr_stmt pos:start="15:9" pos:end="15:34"><expr pos:start="15:9" pos:end="15:33"><call pos:start="15:9" pos:end="15:33"><name pos:start="15:9" pos:end="15:29">avformat_free_context</name><argument_list pos:start="15:30" pos:end="15:33">(<argument pos:start="15:31" pos:end="15:32"><expr pos:start="15:31" pos:end="15:32"><name pos:start="15:31" pos:end="15:32">oc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:22"><expr pos:start="17:9" pos:end="17:21"><name pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:9">c</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:14">avf</name></name> <operator pos:start="17:16" pos:end="17:16">=</operator> <name pos:start="17:18" pos:end="17:21">NULL</name></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="21:23"><if pos:start="19:9" pos:end="21:23">if <condition pos:start="19:12" pos:end="19:44">(<expr pos:start="19:13" pos:end="19:43"><operator pos:start="19:13" pos:end="19:13">(</operator><name pos:start="19:14" pos:end="19:16">err</name> <operator pos:start="19:18" pos:end="19:18">=</operator> <call pos:start="19:20" pos:end="19:38"><name pos:start="19:20" pos:end="19:35">segment_mux_init</name><argument_list pos:start="19:36" pos:end="19:38">(<argument pos:start="19:37" pos:end="19:37"><expr pos:start="19:37" pos:end="19:37"><name pos:start="19:37" pos:end="19:37">s</name></expr></argument>)</argument_list></call><operator pos:start="19:39" pos:end="19:39">)</operator> <operator pos:start="19:41" pos:end="19:41">&lt;</operator> <literal type="number" pos:start="19:43" pos:end="19:43">0</literal></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:23"><block_content pos:start="21:13" pos:end="21:23">

            <return pos:start="21:13" pos:end="21:23">return <expr pos:start="21:20" pos:end="21:22"><name pos:start="21:20" pos:end="21:22">err</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:20"><expr pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:10">oc</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <name pos:start="23:14" pos:end="23:19"><name pos:start="23:14" pos:end="23:14">c</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:19">avf</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="31:29"><if pos:start="29:5" pos:end="31:29">if <condition pos:start="29:8" pos:end="29:16">(<expr pos:start="29:9" pos:end="29:15"><name pos:start="29:9" pos:end="29:15"><name pos:start="29:9" pos:end="29:9">c</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:15">wrap</name></name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:29"><block_content pos:start="31:9" pos:end="31:29">

        <expr_stmt pos:start="31:9" pos:end="31:29"><expr pos:start="31:9" pos:end="31:28"><name pos:start="31:9" pos:end="31:17"><name pos:start="31:9" pos:end="31:9">c</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:17">number</name></name> <operator pos:start="31:19" pos:end="31:20">%=</operator> <name pos:start="31:22" pos:end="31:28"><name pos:start="31:22" pos:end="31:22">c</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:28">wrap</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="39:31"><if pos:start="35:5" pos:end="39:31">if <condition pos:start="35:8" pos:end="37:60">(<expr pos:start="35:9" pos:end="37:59"><call pos:start="35:9" pos:end="37:55"><name pos:start="35:9" pos:end="35:29">av_get_frame_filename</name><argument_list pos:start="35:30" pos:end="37:55">(<argument pos:start="35:31" pos:end="35:42"><expr pos:start="35:31" pos:end="35:42"><name pos:start="35:31" pos:end="35:42"><name pos:start="35:31" pos:end="35:32">oc</name><operator pos:start="35:33" pos:end="35:34">-&gt;</operator><name pos:start="35:35" pos:end="35:42">filename</name></name></expr></argument>, <argument pos:start="35:45" pos:end="35:64"><expr pos:start="35:45" pos:end="35:64"><sizeof pos:start="35:45" pos:end="35:64">sizeof<argument_list pos:start="35:51" pos:end="35:64">(<argument pos:start="35:52" pos:end="35:63"><expr pos:start="35:52" pos:end="35:63"><name pos:start="35:52" pos:end="35:63"><name pos:start="35:52" pos:end="35:53">oc</name><operator pos:start="35:54" pos:end="35:55">-&gt;</operator><name pos:start="35:56" pos:end="35:63">filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                              <argument pos:start="37:31" pos:end="37:41"><expr pos:start="37:31" pos:end="37:41"><name pos:start="37:31" pos:end="37:41"><name pos:start="37:31" pos:end="37:31">s</name><operator pos:start="37:32" pos:end="37:33">-&gt;</operator><name pos:start="37:34" pos:end="37:41">filename</name></name></expr></argument>, <argument pos:start="37:44" pos:end="37:54"><expr pos:start="37:44" pos:end="37:54"><name pos:start="37:44" pos:end="37:52"><name pos:start="37:44" pos:end="37:44">c</name><operator pos:start="37:45" pos:end="37:46">-&gt;</operator><name pos:start="37:47" pos:end="37:52">number</name></name><operator pos:start="37:53" pos:end="37:54">++</operator></expr></argument>)</argument_list></call> <operator pos:start="37:57" pos:end="37:57">&lt;</operator> <literal type="number" pos:start="37:59" pos:end="37:59">0</literal></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:31"><block_content pos:start="39:9" pos:end="39:31">

        <return pos:start="39:9" pos:end="39:31">return <expr pos:start="39:16" pos:end="39:30"><call pos:start="39:16" pos:end="39:30"><name pos:start="39:16" pos:end="39:22">AVERROR</name><argument_list pos:start="39:23" pos:end="39:30">(<argument pos:start="39:24" pos:end="39:29"><expr pos:start="39:24" pos:end="39:29"><name pos:start="39:24" pos:end="39:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="47:19"><if pos:start="43:5" pos:end="47:19">if <condition pos:start="43:8" pos:end="45:61">(<expr pos:start="43:9" pos:end="45:60"><operator pos:start="43:9" pos:end="43:9">(</operator><name pos:start="43:10" pos:end="43:12">err</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <call pos:start="43:16" pos:end="45:55"><name pos:start="43:16" pos:end="43:25">avio_open2</name><argument_list pos:start="43:26" pos:end="45:55">(<argument pos:start="43:27" pos:end="43:33"><expr pos:start="43:27" pos:end="43:33"><operator pos:start="43:27" pos:end="43:27">&amp;</operator><name pos:start="43:28" pos:end="43:33"><name pos:start="43:28" pos:end="43:29">oc</name><operator pos:start="43:30" pos:end="43:31">-&gt;</operator><name pos:start="43:32" pos:end="43:33">pb</name></name></expr></argument>, <argument pos:start="43:36" pos:end="43:47"><expr pos:start="43:36" pos:end="43:47"><name pos:start="43:36" pos:end="43:47"><name pos:start="43:36" pos:end="43:37">oc</name><operator pos:start="43:38" pos:end="43:39">-&gt;</operator><name pos:start="43:40" pos:end="43:47">filename</name></name></expr></argument>, <argument pos:start="43:50" pos:end="43:64"><expr pos:start="43:50" pos:end="43:64"><name pos:start="43:50" pos:end="43:64">AVIO_FLAG_WRITE</name></expr></argument>,

                          <argument pos:start="45:27" pos:end="45:48"><expr pos:start="45:27" pos:end="45:48"><operator pos:start="45:27" pos:end="45:27">&amp;</operator><name pos:start="45:28" pos:end="45:48"><name pos:start="45:28" pos:end="45:28">s</name><operator pos:start="45:29" pos:end="45:30">-&gt;</operator><name pos:start="45:31" pos:end="45:48">interrupt_callback</name></name></expr></argument>, <argument pos:start="45:51" pos:end="45:54"><expr pos:start="45:51" pos:end="45:54"><name pos:start="45:51" pos:end="45:54">NULL</name></expr></argument>)</argument_list></call><operator pos:start="45:56" pos:end="45:56">)</operator> <operator pos:start="45:58" pos:end="45:58">&lt;</operator> <literal type="number" pos:start="45:60" pos:end="45:60">0</literal></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:19"><block_content pos:start="47:9" pos:end="47:19">

        <return pos:start="47:9" pos:end="47:19">return <expr pos:start="47:16" pos:end="47:18"><name pos:start="47:16" pos:end="47:18">err</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="53:60"><if pos:start="51:5" pos:end="53:60">if <condition pos:start="51:8" pos:end="51:49">(<expr pos:start="51:9" pos:end="51:48"><name pos:start="51:9" pos:end="51:31"><name pos:start="51:9" pos:end="51:10">oc</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:19">oformat</name><operator pos:start="51:20" pos:end="51:21">-&gt;</operator><name pos:start="51:22" pos:end="51:31">priv_class</name></name> <operator pos:start="51:33" pos:end="51:34">&amp;&amp;</operator> <name pos:start="51:36" pos:end="51:48"><name pos:start="51:36" pos:end="51:37">oc</name><operator pos:start="51:38" pos:end="51:39">-&gt;</operator><name pos:start="51:40" pos:end="51:48">priv_data</name></name></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:60"><block_content pos:start="53:9" pos:end="53:60">

        <expr_stmt pos:start="53:9" pos:end="53:60"><expr pos:start="53:9" pos:end="53:59"><call pos:start="53:9" pos:end="53:59"><name pos:start="53:9" pos:end="53:18">av_opt_set</name><argument_list pos:start="53:19" pos:end="53:59">(<argument pos:start="53:20" pos:end="53:32"><expr pos:start="53:20" pos:end="53:32"><name pos:start="53:20" pos:end="53:32"><name pos:start="53:20" pos:end="53:21">oc</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:32">priv_data</name></name></expr></argument>, <argument pos:start="53:35" pos:end="53:50"><expr pos:start="53:35" pos:end="53:50"><literal type="string" pos:start="53:35" pos:end="53:50">"resend_headers"</literal></expr></argument>, <argument pos:start="53:53" pos:end="53:55"><expr pos:start="53:53" pos:end="53:55"><literal type="string" pos:start="53:53" pos:end="53:55">"1"</literal></expr></argument>, <argument pos:start="53:58" pos:end="53:58"><expr pos:start="53:58" pos:end="53:58"><literal type="number" pos:start="53:58" pos:end="53:58">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="53:62" pos:end="53:82">/* mpegts specific */</comment>



    <if_stmt pos:start="57:5" pos:end="63:5"><if pos:start="57:5" pos:end="63:5">if <condition pos:start="57:8" pos:end="57:21">(<expr pos:start="57:9" pos:end="57:20"><name pos:start="57:9" pos:end="57:20">write_header</name></expr>)</condition> <block pos:start="57:23" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:23">

        <if_stmt pos:start="59:9" pos:end="61:23"><if pos:start="59:9" pos:end="61:23">if <condition pos:start="59:12" pos:end="59:56">(<expr pos:start="59:13" pos:end="59:55"><operator pos:start="59:13" pos:end="59:13">(</operator><name pos:start="59:14" pos:end="59:16">err</name> <operator pos:start="59:18" pos:end="59:18">=</operator> <call pos:start="59:20" pos:end="59:50"><name pos:start="59:20" pos:end="59:40">avformat_write_header</name><argument_list pos:start="59:41" pos:end="59:50">(<argument pos:start="59:42" pos:end="59:43"><expr pos:start="59:42" pos:end="59:43"><name pos:start="59:42" pos:end="59:43">oc</name></expr></argument>, <argument pos:start="59:46" pos:end="59:49"><expr pos:start="59:46" pos:end="59:49"><name pos:start="59:46" pos:end="59:49">NULL</name></expr></argument>)</argument_list></call><operator pos:start="59:51" pos:end="59:51">)</operator> <operator pos:start="59:53" pos:end="59:53">&lt;</operator> <literal type="number" pos:start="59:55" pos:end="59:55">0</literal></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:23"><block_content pos:start="61:13" pos:end="61:23">

            <return pos:start="61:13" pos:end="61:23">return <expr pos:start="61:20" pos:end="61:22"><name pos:start="61:20" pos:end="61:22">err</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="67:5" pos:end="67:13">return <expr pos:start="67:12" pos:end="67:12"><literal type="number" pos:start="67:12" pos:end="67:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
