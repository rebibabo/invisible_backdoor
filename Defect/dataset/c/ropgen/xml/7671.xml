<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7671.c" pos:tabs="8"><function pos:start="1:1" pos:end="207:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:36">x86_cpu_parse_featurestr</name><parameter_list pos:start="1:37" pos:end="3:50">(<parameter pos:start="1:38" pos:end="1:49"><decl pos:start="1:38" pos:end="1:49"><type pos:start="1:38" pos:end="1:49"><name pos:start="1:38" pos:end="1:45">CPUState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:49">cs</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:65"><decl pos:start="1:52" pos:end="1:65"><type pos:start="1:52" pos:end="1:65"><name pos:start="1:52" pos:end="1:55">char</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:65">features</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:49"><decl pos:start="3:38" pos:end="3:49"><type pos:start="3:38" pos:end="3:49"><name pos:start="3:38" pos:end="3:42">Error</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier><modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:49">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="207:1">{<block_content pos:start="7:5" pos:end="205:11">

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:10">X86CPU</name> <modifier pos:start="7:12" pos:end="7:12">*</modifier></type><name pos:start="7:13" pos:end="7:15">cpu</name> <init pos:start="7:17" pos:end="7:29">= <expr pos:start="7:19" pos:end="7:29"><call pos:start="7:19" pos:end="7:29"><name pos:start="7:19" pos:end="7:25">X86_CPU</name><argument_list pos:start="7:26" pos:end="7:29">(<argument pos:start="7:27" pos:end="7:28"><expr pos:start="7:27" pos:end="7:28"><name pos:start="7:27" pos:end="7:28">cs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:20">featurestr</name></decl>;</decl_stmt> <comment type="block" pos:start="9:23" pos:end="9:66">/* Single 'key=value" string being parsed */</comment>

    <comment type="block" pos:start="11:5" pos:end="11:30">/* Features to be added */</comment>

    <decl_stmt pos:start="13:5" pos:end="13:43"><decl pos:start="13:5" pos:end="13:42"><type pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:20">FeatureWordArray</name></type> <name pos:start="13:22" pos:end="13:34">plus_features</name> <init pos:start="13:36" pos:end="13:42">= <expr pos:start="13:38" pos:end="13:42"><block pos:start="13:38" pos:end="13:42">{ <expr pos:start="13:40" pos:end="13:40"><literal type="number" pos:start="13:40" pos:end="13:40">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <comment type="block" pos:start="15:5" pos:end="15:32">/* Features to be removed */</comment>

    <decl_stmt pos:start="17:5" pos:end="17:44"><decl pos:start="17:5" pos:end="17:43"><type pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:20">FeatureWordArray</name></type> <name pos:start="17:22" pos:end="17:35">minus_features</name> <init pos:start="17:37" pos:end="17:43">= <expr pos:start="17:39" pos:end="17:43"><block pos:start="17:39" pos:end="17:43">{ <expr pos:start="17:41" pos:end="17:41"><literal type="number" pos:start="17:41" pos:end="17:41">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:22"><decl pos:start="19:5" pos:end="19:21"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint32_t</name></type> <name pos:start="19:14" pos:end="19:21">numvalue</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:33"><decl pos:start="21:5" pos:end="21:32"><type pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:15">CPUX86State</name> <modifier pos:start="21:17" pos:end="21:17">*</modifier></type><name pos:start="21:18" pos:end="21:20">env</name> <init pos:start="21:22" pos:end="21:32">= <expr pos:start="21:24" pos:end="21:32"><operator pos:start="21:24" pos:end="21:24">&amp;</operator><name pos:start="21:25" pos:end="21:32"><name pos:start="21:25" pos:end="21:27">cpu</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:32">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:28"><decl pos:start="23:5" pos:end="23:27"><type pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:9">Error</name> <modifier pos:start="23:11" pos:end="23:11">*</modifier></type><name pos:start="23:12" pos:end="23:20">local_err</name> <init pos:start="23:22" pos:end="23:27">= <expr pos:start="23:24" pos:end="23:27"><name pos:start="23:24" pos:end="23:27">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:57"><expr pos:start="27:5" pos:end="27:56"><name pos:start="27:5" pos:end="27:14">featurestr</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <ternary pos:start="27:18" pos:end="27:56"><condition pos:start="27:18" pos:end="27:27"><expr pos:start="27:18" pos:end="27:25"><name pos:start="27:18" pos:end="27:25">features</name></expr> ?</condition><then pos:start="27:29" pos:end="27:49"> <expr pos:start="27:29" pos:end="27:49"><call pos:start="27:29" pos:end="27:49"><name pos:start="27:29" pos:end="27:34">strtok</name><argument_list pos:start="27:35" pos:end="27:49">(<argument pos:start="27:36" pos:end="27:43"><expr pos:start="27:36" pos:end="27:43"><name pos:start="27:36" pos:end="27:43">features</name></expr></argument>, <argument pos:start="27:46" pos:end="27:48"><expr pos:start="27:46" pos:end="27:48"><literal type="string" pos:start="27:46" pos:end="27:48">","</literal></expr></argument>)</argument_list></call></expr> </then><else pos:start="27:51" pos:end="27:56">: <expr pos:start="27:53" pos:end="27:56"><name pos:start="27:53" pos:end="27:56">NULL</name></expr></else></ternary></expr>;</expr_stmt>



    <while pos:start="31:5" pos:end="167:5">while <condition pos:start="31:11" pos:end="31:22">(<expr pos:start="31:12" pos:end="31:21"><name pos:start="31:12" pos:end="31:21">featurestr</name></expr>)</condition> <block pos:start="31:24" pos:end="167:5">{<block_content pos:start="33:9" pos:end="165:39">

        <decl_stmt pos:start="33:9" pos:end="33:18"><decl pos:start="33:9" pos:end="33:17"><type pos:start="33:9" pos:end="33:14"><name pos:start="33:9" pos:end="33:12">char</name> <modifier pos:start="33:14" pos:end="33:14">*</modifier></type><name pos:start="33:15" pos:end="33:17">val</name></decl>;</decl_stmt>

        <if_stmt pos:start="35:9" pos:end="155:9"><if pos:start="35:9" pos:end="39:9">if <condition pos:start="35:12" pos:end="35:33">(<expr pos:start="35:13" pos:end="35:32"><name pos:start="35:13" pos:end="35:25"><name pos:start="35:13" pos:end="35:22">featurestr</name><index pos:start="35:23" pos:end="35:25">[<expr pos:start="35:24" pos:end="35:24"><literal type="number" pos:start="35:24" pos:end="35:24">0</literal></expr>]</index></name> <operator pos:start="35:27" pos:end="35:28">==</operator> <literal type="char" pos:start="35:30" pos:end="35:32">'+'</literal></expr>)</condition> <block pos:start="35:35" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:67">

            <expr_stmt pos:start="37:13" pos:end="37:67"><expr pos:start="37:13" pos:end="37:66"><call pos:start="37:13" pos:end="37:66"><name pos:start="37:13" pos:end="37:35">add_flagname_to_bitmaps</name><argument_list pos:start="37:36" pos:end="37:66">(<argument pos:start="37:37" pos:end="37:50"><expr pos:start="37:37" pos:end="37:50"><name pos:start="37:37" pos:end="37:46">featurestr</name> <operator pos:start="37:48" pos:end="37:48">+</operator> <literal type="number" pos:start="37:50" pos:end="37:50">1</literal></expr></argument>, <argument pos:start="37:53" pos:end="37:65"><expr pos:start="37:53" pos:end="37:65"><name pos:start="37:53" pos:end="37:65">plus_features</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="39:11" pos:end="43:9">else if <condition pos:start="39:19" pos:end="39:40">(<expr pos:start="39:20" pos:end="39:39"><name pos:start="39:20" pos:end="39:32"><name pos:start="39:20" pos:end="39:29">featurestr</name><index pos:start="39:30" pos:end="39:32">[<expr pos:start="39:31" pos:end="39:31"><literal type="number" pos:start="39:31" pos:end="39:31">0</literal></expr>]</index></name> <operator pos:start="39:34" pos:end="39:35">==</operator> <literal type="char" pos:start="39:37" pos:end="39:39">'-'</literal></expr>)</condition> <block pos:start="39:42" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:68">

            <expr_stmt pos:start="41:13" pos:end="41:68"><expr pos:start="41:13" pos:end="41:67"><call pos:start="41:13" pos:end="41:67"><name pos:start="41:13" pos:end="41:35">add_flagname_to_bitmaps</name><argument_list pos:start="41:36" pos:end="41:67">(<argument pos:start="41:37" pos:end="41:50"><expr pos:start="41:37" pos:end="41:50"><name pos:start="41:37" pos:end="41:46">featurestr</name> <operator pos:start="41:48" pos:end="41:48">+</operator> <literal type="number" pos:start="41:50" pos:end="41:50">1</literal></expr></argument>, <argument pos:start="41:53" pos:end="41:66"><expr pos:start="41:53" pos:end="41:66"><name pos:start="41:53" pos:end="41:66">minus_features</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="43:11" pos:end="149:9">else if <condition pos:start="43:19" pos:end="43:51">(<expr pos:start="43:20" pos:end="43:50"><operator pos:start="43:20" pos:end="43:20">(</operator><name pos:start="43:21" pos:end="43:23">val</name> <operator pos:start="43:25" pos:end="43:25">=</operator> <call pos:start="43:27" pos:end="43:49"><name pos:start="43:27" pos:end="43:32">strchr</name><argument_list pos:start="43:33" pos:end="43:49">(<argument pos:start="43:34" pos:end="43:43"><expr pos:start="43:34" pos:end="43:43"><name pos:start="43:34" pos:end="43:43">featurestr</name></expr></argument>, <argument pos:start="43:46" pos:end="43:48"><expr pos:start="43:46" pos:end="43:48"><literal type="char" pos:start="43:46" pos:end="43:48">'='</literal></expr></argument>)</argument_list></call><operator pos:start="43:50" pos:end="43:50">)</operator></expr>)</condition> <block pos:start="43:53" pos:end="149:9">{<block_content pos:start="45:13" pos:end="147:13">

            <expr_stmt pos:start="45:13" pos:end="45:21"><expr pos:start="45:13" pos:end="45:20"><operator pos:start="45:13" pos:end="45:13">*</operator><name pos:start="45:14" pos:end="45:16">val</name> <operator pos:start="45:18" pos:end="45:18">=</operator> <literal type="number" pos:start="45:20" pos:end="45:20">0</literal></expr>;</expr_stmt> <expr_stmt pos:start="45:23" pos:end="45:28"><expr pos:start="45:23" pos:end="45:27"><name pos:start="45:23" pos:end="45:25">val</name><operator pos:start="45:26" pos:end="45:27">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:34"><expr pos:start="47:13" pos:end="47:33"><call pos:start="47:13" pos:end="47:33"><name pos:start="47:13" pos:end="47:21">feat2prop</name><argument_list pos:start="47:22" pos:end="47:33">(<argument pos:start="47:23" pos:end="47:32"><expr pos:start="47:23" pos:end="47:32"><name pos:start="47:23" pos:end="47:32">featurestr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="49:13" pos:end="147:13"><if pos:start="49:13" pos:end="81:13">if <condition pos:start="49:16" pos:end="49:46">(<expr pos:start="49:17" pos:end="49:45"><operator pos:start="49:17" pos:end="49:17">!</operator><call pos:start="49:18" pos:end="49:45"><name pos:start="49:18" pos:end="49:23">strcmp</name><argument_list pos:start="49:24" pos:end="49:45">(<argument pos:start="49:25" pos:end="49:34"><expr pos:start="49:25" pos:end="49:34"><name pos:start="49:25" pos:end="49:34">featurestr</name></expr></argument>, <argument pos:start="49:37" pos:end="49:44"><expr pos:start="49:37" pos:end="49:44"><literal type="string" pos:start="49:37" pos:end="49:44">"xlevel"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:48" pos:end="81:13">{<block_content pos:start="51:17" pos:end="79:80">

                <decl_stmt pos:start="51:17" pos:end="51:26"><decl pos:start="51:17" pos:end="51:25"><type pos:start="51:17" pos:end="51:22"><name pos:start="51:17" pos:end="51:20">char</name> <modifier pos:start="51:22" pos:end="51:22">*</modifier></type><name pos:start="51:23" pos:end="51:25">err</name></decl>;</decl_stmt>

                <decl_stmt pos:start="53:17" pos:end="53:29"><decl pos:start="53:17" pos:end="53:28"><type pos:start="53:17" pos:end="53:20"><name pos:start="53:17" pos:end="53:20">char</name></type> <name pos:start="53:22" pos:end="53:28"><name pos:start="53:22" pos:end="53:24">num</name><index pos:start="53:25" pos:end="53:28">[<expr pos:start="53:26" pos:end="53:27"><literal type="number" pos:start="53:26" pos:end="53:27">32</literal></expr>]</index></name></decl>;</decl_stmt>



                <expr_stmt pos:start="57:17" pos:end="57:49"><expr pos:start="57:17" pos:end="57:48"><name pos:start="57:17" pos:end="57:24">numvalue</name> <operator pos:start="57:26" pos:end="57:26">=</operator> <call pos:start="57:28" pos:end="57:48"><name pos:start="57:28" pos:end="57:34">strtoul</name><argument_list pos:start="57:35" pos:end="57:48">(<argument pos:start="57:36" pos:end="57:38"><expr pos:start="57:36" pos:end="57:38"><name pos:start="57:36" pos:end="57:38">val</name></expr></argument>, <argument pos:start="57:41" pos:end="57:44"><expr pos:start="57:41" pos:end="57:44"><operator pos:start="57:41" pos:end="57:41">&amp;</operator><name pos:start="57:42" pos:end="57:44">err</name></expr></argument>, <argument pos:start="57:47" pos:end="57:47"><expr pos:start="57:47" pos:end="57:47"><literal type="number" pos:start="57:47" pos:end="57:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="59:17" pos:end="65:17"><if pos:start="59:17" pos:end="65:17">if <condition pos:start="59:20" pos:end="59:34">(<expr pos:start="59:21" pos:end="59:33"><operator pos:start="59:21" pos:end="59:21">!</operator><operator pos:start="59:22" pos:end="59:22">*</operator><name pos:start="59:23" pos:end="59:25">val</name> <operator pos:start="59:27" pos:end="59:28">||</operator> <operator pos:start="59:30" pos:end="59:30">*</operator><name pos:start="59:31" pos:end="59:33">err</name></expr>)</condition> <block pos:start="59:36" pos:end="65:17">{<block_content pos:start="61:21" pos:end="63:29">

                    <expr_stmt pos:start="61:21" pos:end="61:74"><expr pos:start="61:21" pos:end="61:73"><call pos:start="61:21" pos:end="61:73"><name pos:start="61:21" pos:end="61:30">error_setg</name><argument_list pos:start="61:31" pos:end="61:73">(<argument pos:start="61:32" pos:end="61:41"><expr pos:start="61:32" pos:end="61:41"><operator pos:start="61:32" pos:end="61:32">&amp;</operator><name pos:start="61:33" pos:end="61:41">local_err</name></expr></argument>, <argument pos:start="61:44" pos:end="61:67"><expr pos:start="61:44" pos:end="61:67"><literal type="string" pos:start="61:44" pos:end="61:67">"bad numerical value %s"</literal></expr></argument>, <argument pos:start="61:70" pos:end="61:72"><expr pos:start="61:70" pos:end="61:72"><name pos:start="61:70" pos:end="61:72">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="63:21" pos:end="63:29">goto <name pos:start="63:26" pos:end="63:28">out</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="67:17" pos:end="75:17"><if pos:start="67:17" pos:end="75:17">if <condition pos:start="67:20" pos:end="67:42">(<expr pos:start="67:21" pos:end="67:41"><name pos:start="67:21" pos:end="67:28">numvalue</name> <operator pos:start="67:30" pos:end="67:30">&lt;</operator> <literal type="number" pos:start="67:32" pos:end="67:41">0x80000000</literal></expr>)</condition> <block pos:start="67:44" pos:end="75:17">{<block_content pos:start="69:21" pos:end="73:43">

                    <expr_stmt pos:start="69:21" pos:end="71:79"><expr pos:start="69:21" pos:end="71:78"><call pos:start="69:21" pos:end="71:78"><name pos:start="69:21" pos:end="69:32">error_report</name><argument_list pos:start="69:33" pos:end="71:78">(<argument pos:start="69:34" pos:end="71:77"><expr pos:start="69:34" pos:end="71:77"><literal type="string" pos:start="69:34" pos:end="69:77">"xlevel value shall always be &gt;= 0x80000000"</literal>

                                 <literal type="string" pos:start="71:34" pos:end="71:77">", fixup will be removed in future versions"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="73:21" pos:end="73:43"><expr pos:start="73:21" pos:end="73:42"><name pos:start="73:21" pos:end="73:28">numvalue</name> <operator pos:start="73:30" pos:end="73:31">+=</operator> <literal type="number" pos:start="73:33" pos:end="73:42">0x80000000</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="77:17" pos:end="77:65"><expr pos:start="77:17" pos:end="77:64"><call pos:start="77:17" pos:end="77:64"><name pos:start="77:17" pos:end="77:24">snprintf</name><argument_list pos:start="77:25" pos:end="77:64">(<argument pos:start="77:26" pos:end="77:28"><expr pos:start="77:26" pos:end="77:28"><name pos:start="77:26" pos:end="77:28">num</name></expr></argument>, <argument pos:start="77:31" pos:end="77:41"><expr pos:start="77:31" pos:end="77:41"><sizeof pos:start="77:31" pos:end="77:41">sizeof<argument_list pos:start="77:37" pos:end="77:41">(<argument pos:start="77:38" pos:end="77:40"><expr pos:start="77:38" pos:end="77:40"><name pos:start="77:38" pos:end="77:40">num</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="77:44" pos:end="77:53"><expr pos:start="77:44" pos:end="77:53"><literal type="string" pos:start="77:44" pos:end="77:46">"%"</literal> <name pos:start="77:48" pos:end="77:53">PRIu32</name></expr></argument>, <argument pos:start="77:56" pos:end="77:63"><expr pos:start="77:56" pos:end="77:63"><name pos:start="77:56" pos:end="77:63">numvalue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="79:17" pos:end="79:80"><expr pos:start="79:17" pos:end="79:79"><call pos:start="79:17" pos:end="79:79"><name pos:start="79:17" pos:end="79:37">object_property_parse</name><argument_list pos:start="79:38" pos:end="79:79">(<argument pos:start="79:39" pos:end="79:49"><expr pos:start="79:39" pos:end="79:49"><call pos:start="79:39" pos:end="79:49"><name pos:start="79:39" pos:end="79:44">OBJECT</name><argument_list pos:start="79:45" pos:end="79:49">(<argument pos:start="79:46" pos:end="79:48"><expr pos:start="79:46" pos:end="79:48"><name pos:start="79:46" pos:end="79:48">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="79:52" pos:end="79:54"><expr pos:start="79:52" pos:end="79:54"><name pos:start="79:52" pos:end="79:54">num</name></expr></argument>, <argument pos:start="79:57" pos:end="79:66"><expr pos:start="79:57" pos:end="79:66"><name pos:start="79:57" pos:end="79:66">featurestr</name></expr></argument>, <argument pos:start="79:69" pos:end="79:78"><expr pos:start="79:69" pos:end="79:78"><operator pos:start="79:69" pos:end="79:69">&amp;</operator><name pos:start="79:70" pos:end="79:78">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="81:15" pos:end="109:13">else if <condition pos:start="81:23" pos:end="81:55">(<expr pos:start="81:24" pos:end="81:54"><operator pos:start="81:24" pos:end="81:24">!</operator><call pos:start="81:25" pos:end="81:54"><name pos:start="81:25" pos:end="81:30">strcmp</name><argument_list pos:start="81:31" pos:end="81:54">(<argument pos:start="81:32" pos:end="81:41"><expr pos:start="81:32" pos:end="81:41"><name pos:start="81:32" pos:end="81:41">featurestr</name></expr></argument>, <argument pos:start="81:44" pos:end="81:53"><expr pos:start="81:44" pos:end="81:53"><literal type="string" pos:start="81:44" pos:end="81:53">"tsc-freq"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="81:57" pos:end="109:13">{<block_content pos:start="83:17" pos:end="107:50">

                <decl_stmt pos:start="83:17" pos:end="83:33"><decl pos:start="83:17" pos:end="83:32"><type pos:start="83:17" pos:end="83:23"><name pos:start="83:17" pos:end="83:23">int64_t</name></type> <name pos:start="83:25" pos:end="83:32">tsc_freq</name></decl>;</decl_stmt>

                <decl_stmt pos:start="85:17" pos:end="85:26"><decl pos:start="85:17" pos:end="85:25"><type pos:start="85:17" pos:end="85:22"><name pos:start="85:17" pos:end="85:20">char</name> <modifier pos:start="85:22" pos:end="85:22">*</modifier></type><name pos:start="85:23" pos:end="85:25">err</name></decl>;</decl_stmt>

                <decl_stmt pos:start="87:17" pos:end="87:29"><decl pos:start="87:17" pos:end="87:28"><type pos:start="87:17" pos:end="87:20"><name pos:start="87:17" pos:end="87:20">char</name></type> <name pos:start="87:22" pos:end="87:28"><name pos:start="87:22" pos:end="87:24">num</name><index pos:start="87:25" pos:end="87:28">[<expr pos:start="87:26" pos:end="87:27"><literal type="number" pos:start="87:26" pos:end="87:27">32</literal></expr>]</index></name></decl>;</decl_stmt>



                <expr_stmt pos:start="91:17" pos:end="93:74"><expr pos:start="91:17" pos:end="93:73"><name pos:start="91:17" pos:end="91:24">tsc_freq</name> <operator pos:start="91:26" pos:end="91:26">=</operator> <call pos:start="91:28" pos:end="93:73"><name pos:start="91:28" pos:end="91:46">strtosz_suffix_unit</name><argument_list pos:start="91:47" pos:end="93:73">(<argument pos:start="91:48" pos:end="91:50"><expr pos:start="91:48" pos:end="91:50"><name pos:start="91:48" pos:end="91:50">val</name></expr></argument>, <argument pos:start="91:53" pos:end="91:56"><expr pos:start="91:53" pos:end="91:56"><operator pos:start="91:53" pos:end="91:53">&amp;</operator><name pos:start="91:54" pos:end="91:56">err</name></expr></argument>,

                                               <argument pos:start="93:48" pos:end="93:66"><expr pos:start="93:48" pos:end="93:66"><name pos:start="93:48" pos:end="93:66">STRTOSZ_DEFSUFFIX_B</name></expr></argument>, <argument pos:start="93:69" pos:end="93:72"><expr pos:start="93:69" pos:end="93:72"><literal type="number" pos:start="93:69" pos:end="93:72">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="95:17" pos:end="101:17"><if pos:start="95:17" pos:end="101:17">if <condition pos:start="95:20" pos:end="95:41">(<expr pos:start="95:21" pos:end="95:40"><name pos:start="95:21" pos:end="95:28">tsc_freq</name> <operator pos:start="95:30" pos:end="95:30">&lt;</operator> <literal type="number" pos:start="95:32" pos:end="95:32">0</literal> <operator pos:start="95:34" pos:end="95:35">||</operator> <operator pos:start="95:37" pos:end="95:37">*</operator><name pos:start="95:38" pos:end="95:40">err</name></expr>)</condition> <block pos:start="95:43" pos:end="101:17">{<block_content pos:start="97:21" pos:end="99:29">

                    <expr_stmt pos:start="97:21" pos:end="97:74"><expr pos:start="97:21" pos:end="97:73"><call pos:start="97:21" pos:end="97:73"><name pos:start="97:21" pos:end="97:30">error_setg</name><argument_list pos:start="97:31" pos:end="97:73">(<argument pos:start="97:32" pos:end="97:41"><expr pos:start="97:32" pos:end="97:41"><operator pos:start="97:32" pos:end="97:32">&amp;</operator><name pos:start="97:33" pos:end="97:41">local_err</name></expr></argument>, <argument pos:start="97:44" pos:end="97:67"><expr pos:start="97:44" pos:end="97:67"><literal type="string" pos:start="97:44" pos:end="97:67">"bad numerical value %s"</literal></expr></argument>, <argument pos:start="97:70" pos:end="97:72"><expr pos:start="97:70" pos:end="97:72"><name pos:start="97:70" pos:end="97:72">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="99:21" pos:end="99:29">goto <name pos:start="99:26" pos:end="99:28">out</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="103:17" pos:end="103:65"><expr pos:start="103:17" pos:end="103:64"><call pos:start="103:17" pos:end="103:64"><name pos:start="103:17" pos:end="103:24">snprintf</name><argument_list pos:start="103:25" pos:end="103:64">(<argument pos:start="103:26" pos:end="103:28"><expr pos:start="103:26" pos:end="103:28"><name pos:start="103:26" pos:end="103:28">num</name></expr></argument>, <argument pos:start="103:31" pos:end="103:41"><expr pos:start="103:31" pos:end="103:41"><sizeof pos:start="103:31" pos:end="103:41">sizeof<argument_list pos:start="103:37" pos:end="103:41">(<argument pos:start="103:38" pos:end="103:40"><expr pos:start="103:38" pos:end="103:40"><name pos:start="103:38" pos:end="103:40">num</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="103:44" pos:end="103:53"><expr pos:start="103:44" pos:end="103:53"><literal type="string" pos:start="103:44" pos:end="103:46">"%"</literal> <name pos:start="103:48" pos:end="103:53">PRId64</name></expr></argument>, <argument pos:start="103:56" pos:end="103:63"><expr pos:start="103:56" pos:end="103:63"><name pos:start="103:56" pos:end="103:63">tsc_freq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="105:17" pos:end="107:50"><expr pos:start="105:17" pos:end="107:49"><call pos:start="105:17" pos:end="107:49"><name pos:start="105:17" pos:end="105:37">object_property_parse</name><argument_list pos:start="105:38" pos:end="107:49">(<argument pos:start="105:39" pos:end="105:49"><expr pos:start="105:39" pos:end="105:49"><call pos:start="105:39" pos:end="105:49"><name pos:start="105:39" pos:end="105:44">OBJECT</name><argument_list pos:start="105:45" pos:end="105:49">(<argument pos:start="105:46" pos:end="105:48"><expr pos:start="105:46" pos:end="105:48"><name pos:start="105:46" pos:end="105:48">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="105:52" pos:end="105:54"><expr pos:start="105:52" pos:end="105:54"><name pos:start="105:52" pos:end="105:54">num</name></expr></argument>, <argument pos:start="105:57" pos:end="105:71"><expr pos:start="105:57" pos:end="105:71"><literal type="string" pos:start="105:57" pos:end="105:71">"tsc-frequency"</literal></expr></argument>,

                                      <argument pos:start="107:39" pos:end="107:48"><expr pos:start="107:39" pos:end="107:48"><operator pos:start="107:39" pos:end="107:39">&amp;</operator><name pos:start="107:40" pos:end="107:48">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="109:15" pos:end="143:13">else if <condition pos:start="109:23" pos:end="109:59">(<expr pos:start="109:24" pos:end="109:58"><operator pos:start="109:24" pos:end="109:24">!</operator><call pos:start="109:25" pos:end="109:58"><name pos:start="109:25" pos:end="109:30">strcmp</name><argument_list pos:start="109:31" pos:end="109:58">(<argument pos:start="109:32" pos:end="109:41"><expr pos:start="109:32" pos:end="109:41"><name pos:start="109:32" pos:end="109:41">featurestr</name></expr></argument>, <argument pos:start="109:44" pos:end="109:57"><expr pos:start="109:44" pos:end="109:57"><literal type="string" pos:start="109:44" pos:end="109:57">"hv-spinlocks"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="109:61" pos:end="143:13">{<block_content pos:start="111:17" pos:end="141:80">

                <decl_stmt pos:start="111:17" pos:end="111:26"><decl pos:start="111:17" pos:end="111:25"><type pos:start="111:17" pos:end="111:22"><name pos:start="111:17" pos:end="111:20">char</name> <modifier pos:start="111:22" pos:end="111:22">*</modifier></type><name pos:start="111:23" pos:end="111:25">err</name></decl>;</decl_stmt>

                <decl_stmt pos:start="113:17" pos:end="113:38"><decl pos:start="113:17" pos:end="113:37"><type pos:start="113:17" pos:end="113:25"><specifier pos:start="113:17" pos:end="113:21">const</specifier> <name pos:start="113:23" pos:end="113:25">int</name></type> <name pos:start="113:27" pos:end="113:29">min</name> <init pos:start="113:31" pos:end="113:37">= <expr pos:start="113:33" pos:end="113:37"><literal type="number" pos:start="113:33" pos:end="113:37">0xFFF</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="115:17" pos:end="115:29"><decl pos:start="115:17" pos:end="115:28"><type pos:start="115:17" pos:end="115:20"><name pos:start="115:17" pos:end="115:20">char</name></type> <name pos:start="115:22" pos:end="115:28"><name pos:start="115:22" pos:end="115:24">num</name><index pos:start="115:25" pos:end="115:28">[<expr pos:start="115:26" pos:end="115:27"><literal type="number" pos:start="115:26" pos:end="115:27">32</literal></expr>]</index></name></decl>;</decl_stmt>

                <expr_stmt pos:start="117:17" pos:end="117:49"><expr pos:start="117:17" pos:end="117:48"><name pos:start="117:17" pos:end="117:24">numvalue</name> <operator pos:start="117:26" pos:end="117:26">=</operator> <call pos:start="117:28" pos:end="117:48"><name pos:start="117:28" pos:end="117:34">strtoul</name><argument_list pos:start="117:35" pos:end="117:48">(<argument pos:start="117:36" pos:end="117:38"><expr pos:start="117:36" pos:end="117:38"><name pos:start="117:36" pos:end="117:38">val</name></expr></argument>, <argument pos:start="117:41" pos:end="117:44"><expr pos:start="117:41" pos:end="117:44"><operator pos:start="117:41" pos:end="117:41">&amp;</operator><name pos:start="117:42" pos:end="117:44">err</name></expr></argument>, <argument pos:start="117:47" pos:end="117:47"><expr pos:start="117:47" pos:end="117:47"><literal type="number" pos:start="117:47" pos:end="117:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="119:17" pos:end="125:17"><if pos:start="119:17" pos:end="125:17">if <condition pos:start="119:20" pos:end="119:34">(<expr pos:start="119:21" pos:end="119:33"><operator pos:start="119:21" pos:end="119:21">!</operator><operator pos:start="119:22" pos:end="119:22">*</operator><name pos:start="119:23" pos:end="119:25">val</name> <operator pos:start="119:27" pos:end="119:28">||</operator> <operator pos:start="119:30" pos:end="119:30">*</operator><name pos:start="119:31" pos:end="119:33">err</name></expr>)</condition> <block pos:start="119:36" pos:end="125:17">{<block_content pos:start="121:21" pos:end="123:29">

                    <expr_stmt pos:start="121:21" pos:end="121:74"><expr pos:start="121:21" pos:end="121:73"><call pos:start="121:21" pos:end="121:73"><name pos:start="121:21" pos:end="121:30">error_setg</name><argument_list pos:start="121:31" pos:end="121:73">(<argument pos:start="121:32" pos:end="121:41"><expr pos:start="121:32" pos:end="121:41"><operator pos:start="121:32" pos:end="121:32">&amp;</operator><name pos:start="121:33" pos:end="121:41">local_err</name></expr></argument>, <argument pos:start="121:44" pos:end="121:67"><expr pos:start="121:44" pos:end="121:67"><literal type="string" pos:start="121:44" pos:end="121:67">"bad numerical value %s"</literal></expr></argument>, <argument pos:start="121:70" pos:end="121:72"><expr pos:start="121:70" pos:end="121:72"><name pos:start="121:70" pos:end="121:72">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="123:21" pos:end="123:29">goto <name pos:start="123:26" pos:end="123:28">out</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="127:17" pos:end="137:17"><if pos:start="127:17" pos:end="137:17">if <condition pos:start="127:20" pos:end="127:35">(<expr pos:start="127:21" pos:end="127:34"><name pos:start="127:21" pos:end="127:28">numvalue</name> <operator pos:start="127:30" pos:end="127:30">&lt;</operator> <name pos:start="127:32" pos:end="127:34">min</name></expr>)</condition> <block pos:start="127:37" pos:end="137:17">{<block_content pos:start="129:21" pos:end="135:35">

                    <expr_stmt pos:start="129:21" pos:end="133:33"><expr pos:start="129:21" pos:end="133:32"><call pos:start="129:21" pos:end="133:32"><name pos:start="129:21" pos:end="129:32">error_report</name><argument_list pos:start="129:33" pos:end="133:32">(<argument pos:start="129:34" pos:end="131:72"><expr pos:start="129:34" pos:end="131:72"><literal type="string" pos:start="129:34" pos:end="129:77">"hv-spinlocks value shall always be &gt;= 0x%x"</literal>

                            <literal type="string" pos:start="131:29" pos:end="131:72">", fixup will be removed in future versions"</literal></expr></argument>,

                            <argument pos:start="133:29" pos:end="133:31"><expr pos:start="133:29" pos:end="133:31"><name pos:start="133:29" pos:end="133:31">min</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="135:21" pos:end="135:35"><expr pos:start="135:21" pos:end="135:34"><name pos:start="135:21" pos:end="135:28">numvalue</name> <operator pos:start="135:30" pos:end="135:30">=</operator> <name pos:start="135:32" pos:end="135:34">min</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="139:17" pos:end="139:65"><expr pos:start="139:17" pos:end="139:64"><call pos:start="139:17" pos:end="139:64"><name pos:start="139:17" pos:end="139:24">snprintf</name><argument_list pos:start="139:25" pos:end="139:64">(<argument pos:start="139:26" pos:end="139:28"><expr pos:start="139:26" pos:end="139:28"><name pos:start="139:26" pos:end="139:28">num</name></expr></argument>, <argument pos:start="139:31" pos:end="139:41"><expr pos:start="139:31" pos:end="139:41"><sizeof pos:start="139:31" pos:end="139:41">sizeof<argument_list pos:start="139:37" pos:end="139:41">(<argument pos:start="139:38" pos:end="139:40"><expr pos:start="139:38" pos:end="139:40"><name pos:start="139:38" pos:end="139:40">num</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="139:44" pos:end="139:53"><expr pos:start="139:44" pos:end="139:53"><literal type="string" pos:start="139:44" pos:end="139:46">"%"</literal> <name pos:start="139:48" pos:end="139:53">PRId32</name></expr></argument>, <argument pos:start="139:56" pos:end="139:63"><expr pos:start="139:56" pos:end="139:63"><name pos:start="139:56" pos:end="139:63">numvalue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="141:17" pos:end="141:80"><expr pos:start="141:17" pos:end="141:79"><call pos:start="141:17" pos:end="141:79"><name pos:start="141:17" pos:end="141:37">object_property_parse</name><argument_list pos:start="141:38" pos:end="141:79">(<argument pos:start="141:39" pos:end="141:49"><expr pos:start="141:39" pos:end="141:49"><call pos:start="141:39" pos:end="141:49"><name pos:start="141:39" pos:end="141:44">OBJECT</name><argument_list pos:start="141:45" pos:end="141:49">(<argument pos:start="141:46" pos:end="141:48"><expr pos:start="141:46" pos:end="141:48"><name pos:start="141:46" pos:end="141:48">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="141:52" pos:end="141:54"><expr pos:start="141:52" pos:end="141:54"><name pos:start="141:52" pos:end="141:54">num</name></expr></argument>, <argument pos:start="141:57" pos:end="141:66"><expr pos:start="141:57" pos:end="141:66"><name pos:start="141:57" pos:end="141:66">featurestr</name></expr></argument>, <argument pos:start="141:69" pos:end="141:78"><expr pos:start="141:69" pos:end="141:78"><operator pos:start="141:69" pos:end="141:69">&amp;</operator><name pos:start="141:70" pos:end="141:78">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="143:15" pos:end="147:13">else <block pos:start="143:20" pos:end="147:13">{<block_content pos:start="145:17" pos:end="145:80">

                <expr_stmt pos:start="145:17" pos:end="145:80"><expr pos:start="145:17" pos:end="145:79"><call pos:start="145:17" pos:end="145:79"><name pos:start="145:17" pos:end="145:37">object_property_parse</name><argument_list pos:start="145:38" pos:end="145:79">(<argument pos:start="145:39" pos:end="145:49"><expr pos:start="145:39" pos:end="145:49"><call pos:start="145:39" pos:end="145:49"><name pos:start="145:39" pos:end="145:44">OBJECT</name><argument_list pos:start="145:45" pos:end="145:49">(<argument pos:start="145:46" pos:end="145:48"><expr pos:start="145:46" pos:end="145:48"><name pos:start="145:46" pos:end="145:48">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="145:52" pos:end="145:54"><expr pos:start="145:52" pos:end="145:54"><name pos:start="145:52" pos:end="145:54">val</name></expr></argument>, <argument pos:start="145:57" pos:end="145:66"><expr pos:start="145:57" pos:end="145:66"><name pos:start="145:57" pos:end="145:66">featurestr</name></expr></argument>, <argument pos:start="145:69" pos:end="145:78"><expr pos:start="145:69" pos:end="145:78"><operator pos:start="145:69" pos:end="145:69">&amp;</operator><name pos:start="145:70" pos:end="145:78">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="149:11" pos:end="155:9">else <block pos:start="149:16" pos:end="155:9">{<block_content pos:start="151:13" pos:end="153:77">

            <expr_stmt pos:start="151:13" pos:end="151:34"><expr pos:start="151:13" pos:end="151:33"><call pos:start="151:13" pos:end="151:33"><name pos:start="151:13" pos:end="151:21">feat2prop</name><argument_list pos:start="151:22" pos:end="151:33">(<argument pos:start="151:23" pos:end="151:32"><expr pos:start="151:23" pos:end="151:32"><name pos:start="151:23" pos:end="151:32">featurestr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:77"><expr pos:start="153:13" pos:end="153:76"><call pos:start="153:13" pos:end="153:76"><name pos:start="153:13" pos:end="153:33">object_property_parse</name><argument_list pos:start="153:34" pos:end="153:76">(<argument pos:start="153:35" pos:end="153:45"><expr pos:start="153:35" pos:end="153:45"><call pos:start="153:35" pos:end="153:45"><name pos:start="153:35" pos:end="153:40">OBJECT</name><argument_list pos:start="153:41" pos:end="153:45">(<argument pos:start="153:42" pos:end="153:44"><expr pos:start="153:42" pos:end="153:44"><name pos:start="153:42" pos:end="153:44">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="153:48" pos:end="153:51"><expr pos:start="153:48" pos:end="153:51"><literal type="string" pos:start="153:48" pos:end="153:51">"on"</literal></expr></argument>, <argument pos:start="153:54" pos:end="153:63"><expr pos:start="153:54" pos:end="153:63"><name pos:start="153:54" pos:end="153:63">featurestr</name></expr></argument>, <argument pos:start="153:66" pos:end="153:75"><expr pos:start="153:66" pos:end="153:75"><operator pos:start="153:66" pos:end="153:66">&amp;</operator><name pos:start="153:67" pos:end="153:75">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="157:9" pos:end="163:9"><if pos:start="157:9" pos:end="163:9">if <condition pos:start="157:12" pos:end="157:22">(<expr pos:start="157:13" pos:end="157:21"><name pos:start="157:13" pos:end="157:21">local_err</name></expr>)</condition> <block pos:start="157:24" pos:end="163:9">{<block_content pos:start="159:13" pos:end="161:21">

            <expr_stmt pos:start="159:13" pos:end="159:45"><expr pos:start="159:13" pos:end="159:44"><call pos:start="159:13" pos:end="159:44"><name pos:start="159:13" pos:end="159:27">error_propagate</name><argument_list pos:start="159:28" pos:end="159:44">(<argument pos:start="159:29" pos:end="159:32"><expr pos:start="159:29" pos:end="159:32"><name pos:start="159:29" pos:end="159:32">errp</name></expr></argument>, <argument pos:start="159:35" pos:end="159:43"><expr pos:start="159:35" pos:end="159:43"><name pos:start="159:35" pos:end="159:43">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="161:13" pos:end="161:21">goto <name pos:start="161:18" pos:end="161:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:39"><expr pos:start="165:9" pos:end="165:38"><name pos:start="165:9" pos:end="165:18">featurestr</name> <operator pos:start="165:20" pos:end="165:20">=</operator> <call pos:start="165:22" pos:end="165:38"><name pos:start="165:22" pos:end="165:27">strtok</name><argument_list pos:start="165:28" pos:end="165:38">(<argument pos:start="165:29" pos:end="165:32"><expr pos:start="165:29" pos:end="165:32"><name pos:start="165:29" pos:end="165:32">NULL</name></expr></argument>, <argument pos:start="165:35" pos:end="165:37"><expr pos:start="165:35" pos:end="165:37"><literal type="string" pos:start="165:35" pos:end="165:37">","</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="169:5" pos:end="169:59"><expr pos:start="169:5" pos:end="169:58"><name pos:start="169:5" pos:end="169:29"><name pos:start="169:5" pos:end="169:7">env</name><operator pos:start="169:8" pos:end="169:9">-&gt;</operator><name pos:start="169:10" pos:end="169:17">features</name><index pos:start="169:18" pos:end="169:29">[<expr pos:start="169:19" pos:end="169:28"><name pos:start="169:19" pos:end="169:28">FEAT_1_EDX</name></expr>]</index></name> <operator pos:start="169:31" pos:end="169:32">|=</operator> <name pos:start="169:34" pos:end="169:58"><name pos:start="169:34" pos:end="169:46">plus_features</name><index pos:start="169:47" pos:end="169:58">[<expr pos:start="169:48" pos:end="169:57"><name pos:start="169:48" pos:end="169:57">FEAT_1_EDX</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="171:5" pos:end="171:59"><expr pos:start="171:5" pos:end="171:58"><name pos:start="171:5" pos:end="171:29"><name pos:start="171:5" pos:end="171:7">env</name><operator pos:start="171:8" pos:end="171:9">-&gt;</operator><name pos:start="171:10" pos:end="171:17">features</name><index pos:start="171:18" pos:end="171:29">[<expr pos:start="171:19" pos:end="171:28"><name pos:start="171:19" pos:end="171:28">FEAT_1_ECX</name></expr>]</index></name> <operator pos:start="171:31" pos:end="171:32">|=</operator> <name pos:start="171:34" pos:end="171:58"><name pos:start="171:34" pos:end="171:46">plus_features</name><index pos:start="171:47" pos:end="171:58">[<expr pos:start="171:48" pos:end="171:57"><name pos:start="171:48" pos:end="171:57">FEAT_1_ECX</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="173:5" pos:end="173:75"><expr pos:start="173:5" pos:end="173:74"><name pos:start="173:5" pos:end="173:37"><name pos:start="173:5" pos:end="173:7">env</name><operator pos:start="173:8" pos:end="173:9">-&gt;</operator><name pos:start="173:10" pos:end="173:17">features</name><index pos:start="173:18" pos:end="173:37">[<expr pos:start="173:19" pos:end="173:36"><name pos:start="173:19" pos:end="173:36">FEAT_8000_0001_EDX</name></expr>]</index></name> <operator pos:start="173:39" pos:end="173:40">|=</operator> <name pos:start="173:42" pos:end="173:74"><name pos:start="173:42" pos:end="173:54">plus_features</name><index pos:start="173:55" pos:end="173:74">[<expr pos:start="173:56" pos:end="173:73"><name pos:start="173:56" pos:end="173:73">FEAT_8000_0001_EDX</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="175:5" pos:end="175:75"><expr pos:start="175:5" pos:end="175:74"><name pos:start="175:5" pos:end="175:37"><name pos:start="175:5" pos:end="175:7">env</name><operator pos:start="175:8" pos:end="175:9">-&gt;</operator><name pos:start="175:10" pos:end="175:17">features</name><index pos:start="175:18" pos:end="175:37">[<expr pos:start="175:19" pos:end="175:36"><name pos:start="175:19" pos:end="175:36">FEAT_8000_0001_ECX</name></expr>]</index></name> <operator pos:start="175:39" pos:end="175:40">|=</operator> <name pos:start="175:42" pos:end="175:74"><name pos:start="175:42" pos:end="175:54">plus_features</name><index pos:start="175:55" pos:end="175:74">[<expr pos:start="175:56" pos:end="175:73"><name pos:start="175:56" pos:end="175:73">FEAT_8000_0001_ECX</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="177:5" pos:end="177:75"><expr pos:start="177:5" pos:end="177:74"><name pos:start="177:5" pos:end="177:37"><name pos:start="177:5" pos:end="177:7">env</name><operator pos:start="177:8" pos:end="177:9">-&gt;</operator><name pos:start="177:10" pos:end="177:17">features</name><index pos:start="177:18" pos:end="177:37">[<expr pos:start="177:19" pos:end="177:36"><name pos:start="177:19" pos:end="177:36">FEAT_C000_0001_EDX</name></expr>]</index></name> <operator pos:start="177:39" pos:end="177:40">|=</operator> <name pos:start="177:42" pos:end="177:74"><name pos:start="177:42" pos:end="177:54">plus_features</name><index pos:start="177:55" pos:end="177:74">[<expr pos:start="177:56" pos:end="177:73"><name pos:start="177:56" pos:end="177:73">FEAT_C000_0001_EDX</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="179:5" pos:end="179:55"><expr pos:start="179:5" pos:end="179:54"><name pos:start="179:5" pos:end="179:27"><name pos:start="179:5" pos:end="179:7">env</name><operator pos:start="179:8" pos:end="179:9">-&gt;</operator><name pos:start="179:10" pos:end="179:17">features</name><index pos:start="179:18" pos:end="179:27">[<expr pos:start="179:19" pos:end="179:26"><name pos:start="179:19" pos:end="179:26">FEAT_KVM</name></expr>]</index></name> <operator pos:start="179:29" pos:end="179:30">|=</operator> <name pos:start="179:32" pos:end="179:54"><name pos:start="179:32" pos:end="179:44">plus_features</name><index pos:start="179:45" pos:end="179:54">[<expr pos:start="179:46" pos:end="179:53"><name pos:start="179:46" pos:end="179:53">FEAT_KVM</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="181:5" pos:end="181:55"><expr pos:start="181:5" pos:end="181:54"><name pos:start="181:5" pos:end="181:27"><name pos:start="181:5" pos:end="181:7">env</name><operator pos:start="181:8" pos:end="181:9">-&gt;</operator><name pos:start="181:10" pos:end="181:17">features</name><index pos:start="181:18" pos:end="181:27">[<expr pos:start="181:19" pos:end="181:26"><name pos:start="181:19" pos:end="181:26">FEAT_SVM</name></expr>]</index></name> <operator pos:start="181:29" pos:end="181:30">|=</operator> <name pos:start="181:32" pos:end="181:54"><name pos:start="181:32" pos:end="181:44">plus_features</name><index pos:start="181:45" pos:end="181:54">[<expr pos:start="181:46" pos:end="181:53"><name pos:start="181:46" pos:end="181:53">FEAT_SVM</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="183:5" pos:end="183:63"><expr pos:start="183:5" pos:end="183:62"><name pos:start="183:5" pos:end="183:31"><name pos:start="183:5" pos:end="183:7">env</name><operator pos:start="183:8" pos:end="183:9">-&gt;</operator><name pos:start="183:10" pos:end="183:17">features</name><index pos:start="183:18" pos:end="183:31">[<expr pos:start="183:19" pos:end="183:30"><name pos:start="183:19" pos:end="183:30">FEAT_7_0_EBX</name></expr>]</index></name> <operator pos:start="183:33" pos:end="183:34">|=</operator> <name pos:start="183:36" pos:end="183:62"><name pos:start="183:36" pos:end="183:48">plus_features</name><index pos:start="183:49" pos:end="183:62">[<expr pos:start="183:50" pos:end="183:61"><name pos:start="183:50" pos:end="183:61">FEAT_7_0_EBX</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="185:5" pos:end="185:61"><expr pos:start="185:5" pos:end="185:60"><name pos:start="185:5" pos:end="185:29"><name pos:start="185:5" pos:end="185:7">env</name><operator pos:start="185:8" pos:end="185:9">-&gt;</operator><name pos:start="185:10" pos:end="185:17">features</name><index pos:start="185:18" pos:end="185:29">[<expr pos:start="185:19" pos:end="185:28"><name pos:start="185:19" pos:end="185:28">FEAT_1_EDX</name></expr>]</index></name> <operator pos:start="185:31" pos:end="185:32">&amp;=</operator> <operator pos:start="185:34" pos:end="185:34">~</operator><name pos:start="185:35" pos:end="185:60"><name pos:start="185:35" pos:end="185:48">minus_features</name><index pos:start="185:49" pos:end="185:60">[<expr pos:start="185:50" pos:end="185:59"><name pos:start="185:50" pos:end="185:59">FEAT_1_EDX</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="187:5" pos:end="187:61"><expr pos:start="187:5" pos:end="187:60"><name pos:start="187:5" pos:end="187:29"><name pos:start="187:5" pos:end="187:7">env</name><operator pos:start="187:8" pos:end="187:9">-&gt;</operator><name pos:start="187:10" pos:end="187:17">features</name><index pos:start="187:18" pos:end="187:29">[<expr pos:start="187:19" pos:end="187:28"><name pos:start="187:19" pos:end="187:28">FEAT_1_ECX</name></expr>]</index></name> <operator pos:start="187:31" pos:end="187:32">&amp;=</operator> <operator pos:start="187:34" pos:end="187:34">~</operator><name pos:start="187:35" pos:end="187:60"><name pos:start="187:35" pos:end="187:48">minus_features</name><index pos:start="187:49" pos:end="187:60">[<expr pos:start="187:50" pos:end="187:59"><name pos:start="187:50" pos:end="187:59">FEAT_1_ECX</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="189:5" pos:end="189:77"><expr pos:start="189:5" pos:end="189:76"><name pos:start="189:5" pos:end="189:37"><name pos:start="189:5" pos:end="189:7">env</name><operator pos:start="189:8" pos:end="189:9">-&gt;</operator><name pos:start="189:10" pos:end="189:17">features</name><index pos:start="189:18" pos:end="189:37">[<expr pos:start="189:19" pos:end="189:36"><name pos:start="189:19" pos:end="189:36">FEAT_8000_0001_EDX</name></expr>]</index></name> <operator pos:start="189:39" pos:end="189:40">&amp;=</operator> <operator pos:start="189:42" pos:end="189:42">~</operator><name pos:start="189:43" pos:end="189:76"><name pos:start="189:43" pos:end="189:56">minus_features</name><index pos:start="189:57" pos:end="189:76">[<expr pos:start="189:58" pos:end="189:75"><name pos:start="189:58" pos:end="189:75">FEAT_8000_0001_EDX</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="191:5" pos:end="191:77"><expr pos:start="191:5" pos:end="191:76"><name pos:start="191:5" pos:end="191:37"><name pos:start="191:5" pos:end="191:7">env</name><operator pos:start="191:8" pos:end="191:9">-&gt;</operator><name pos:start="191:10" pos:end="191:17">features</name><index pos:start="191:18" pos:end="191:37">[<expr pos:start="191:19" pos:end="191:36"><name pos:start="191:19" pos:end="191:36">FEAT_8000_0001_ECX</name></expr>]</index></name> <operator pos:start="191:39" pos:end="191:40">&amp;=</operator> <operator pos:start="191:42" pos:end="191:42">~</operator><name pos:start="191:43" pos:end="191:76"><name pos:start="191:43" pos:end="191:56">minus_features</name><index pos:start="191:57" pos:end="191:76">[<expr pos:start="191:58" pos:end="191:75"><name pos:start="191:58" pos:end="191:75">FEAT_8000_0001_ECX</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="193:77"><expr pos:start="193:5" pos:end="193:76"><name pos:start="193:5" pos:end="193:37"><name pos:start="193:5" pos:end="193:7">env</name><operator pos:start="193:8" pos:end="193:9">-&gt;</operator><name pos:start="193:10" pos:end="193:17">features</name><index pos:start="193:18" pos:end="193:37">[<expr pos:start="193:19" pos:end="193:36"><name pos:start="193:19" pos:end="193:36">FEAT_C000_0001_EDX</name></expr>]</index></name> <operator pos:start="193:39" pos:end="193:40">&amp;=</operator> <operator pos:start="193:42" pos:end="193:42">~</operator><name pos:start="193:43" pos:end="193:76"><name pos:start="193:43" pos:end="193:56">minus_features</name><index pos:start="193:57" pos:end="193:76">[<expr pos:start="193:58" pos:end="193:75"><name pos:start="193:58" pos:end="193:75">FEAT_C000_0001_EDX</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:57"><expr pos:start="195:5" pos:end="195:56"><name pos:start="195:5" pos:end="195:27"><name pos:start="195:5" pos:end="195:7">env</name><operator pos:start="195:8" pos:end="195:9">-&gt;</operator><name pos:start="195:10" pos:end="195:17">features</name><index pos:start="195:18" pos:end="195:27">[<expr pos:start="195:19" pos:end="195:26"><name pos:start="195:19" pos:end="195:26">FEAT_KVM</name></expr>]</index></name> <operator pos:start="195:29" pos:end="195:30">&amp;=</operator> <operator pos:start="195:32" pos:end="195:32">~</operator><name pos:start="195:33" pos:end="195:56"><name pos:start="195:33" pos:end="195:46">minus_features</name><index pos:start="195:47" pos:end="195:56">[<expr pos:start="195:48" pos:end="195:55"><name pos:start="195:48" pos:end="195:55">FEAT_KVM</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="197:5" pos:end="197:57"><expr pos:start="197:5" pos:end="197:56"><name pos:start="197:5" pos:end="197:27"><name pos:start="197:5" pos:end="197:7">env</name><operator pos:start="197:8" pos:end="197:9">-&gt;</operator><name pos:start="197:10" pos:end="197:17">features</name><index pos:start="197:18" pos:end="197:27">[<expr pos:start="197:19" pos:end="197:26"><name pos:start="197:19" pos:end="197:26">FEAT_SVM</name></expr>]</index></name> <operator pos:start="197:29" pos:end="197:30">&amp;=</operator> <operator pos:start="197:32" pos:end="197:32">~</operator><name pos:start="197:33" pos:end="197:56"><name pos:start="197:33" pos:end="197:46">minus_features</name><index pos:start="197:47" pos:end="197:56">[<expr pos:start="197:48" pos:end="197:55"><name pos:start="197:48" pos:end="197:55">FEAT_SVM</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:65"><expr pos:start="199:5" pos:end="199:64"><name pos:start="199:5" pos:end="199:31"><name pos:start="199:5" pos:end="199:7">env</name><operator pos:start="199:8" pos:end="199:9">-&gt;</operator><name pos:start="199:10" pos:end="199:17">features</name><index pos:start="199:18" pos:end="199:31">[<expr pos:start="199:19" pos:end="199:30"><name pos:start="199:19" pos:end="199:30">FEAT_7_0_EBX</name></expr>]</index></name> <operator pos:start="199:33" pos:end="199:34">&amp;=</operator> <operator pos:start="199:36" pos:end="199:36">~</operator><name pos:start="199:37" pos:end="199:64"><name pos:start="199:37" pos:end="199:50">minus_features</name><index pos:start="199:51" pos:end="199:64">[<expr pos:start="199:52" pos:end="199:63"><name pos:start="199:52" pos:end="199:63">FEAT_7_0_EBX</name></expr>]</index></name></expr>;</expr_stmt>



<label pos:start="203:1" pos:end="203:4"><name pos:start="203:1" pos:end="203:3">out</name>:</label>

    <return pos:start="205:5" pos:end="205:11">return;</return>

</block_content>}</block></function>
</unit>
