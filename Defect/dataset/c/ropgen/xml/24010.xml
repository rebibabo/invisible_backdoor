<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24010.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:28">qemu_devtree_add_subnode</name><parameter_list pos:start="1:29" pos:end="1:57">(<parameter pos:start="1:30" pos:end="1:38"><decl pos:start="1:30" pos:end="1:38"><type pos:start="1:30" pos:end="1:38"><name pos:start="1:30" pos:end="1:33">void</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">fdt</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:56"><decl pos:start="1:41" pos:end="1:56"><type pos:start="1:41" pos:end="1:56"><specifier pos:start="1:41" pos:end="1:45">const</specifier> <name pos:start="1:47" pos:end="1:50">char</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:56">name</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:18">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:14">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:17">dupname</name> <init pos:start="7:19" pos:end="7:34">= <expr pos:start="7:21" pos:end="7:34"><call pos:start="7:21" pos:end="7:34"><name pos:start="7:21" pos:end="7:28">g_strdup</name><argument_list pos:start="7:29" pos:end="7:34">(<argument pos:start="7:30" pos:end="7:33"><expr pos:start="7:30" pos:end="7:33"><name pos:start="7:30" pos:end="7:33">name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:42"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:18">basename</name> <init pos:start="9:20" pos:end="9:42">= <expr pos:start="9:22" pos:end="9:42"><call pos:start="9:22" pos:end="9:42"><name pos:start="9:22" pos:end="9:28">strrchr</name><argument_list pos:start="9:29" pos:end="9:42">(<argument pos:start="9:30" pos:end="9:36"><expr pos:start="9:30" pos:end="9:36"><name pos:start="9:30" pos:end="9:36">dupname</name></expr></argument>, <argument pos:start="9:39" pos:end="9:41"><expr pos:start="9:39" pos:end="9:41"><literal type="char" pos:start="9:39" pos:end="9:41">'/'</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">retval</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:18">(<expr pos:start="15:9" pos:end="15:17"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:17">basename</name></expr>)</condition> <block pos:start="15:20" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:18">

        <return pos:start="17:9" pos:end="17:18">return <expr pos:start="17:16" pos:end="17:17"><operator pos:start="17:16" pos:end="17:16">-</operator><literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:23"><expr pos:start="23:5" pos:end="23:22"><name pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:12">basename</name><index pos:start="23:13" pos:end="23:15">[<expr pos:start="23:14" pos:end="23:14"><literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>]</index></name> <operator pos:start="23:17" pos:end="23:17">=</operator> <literal type="char" pos:start="23:19" pos:end="23:22">'\0'</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:15"><expr pos:start="25:5" pos:end="25:14"><name pos:start="25:5" pos:end="25:12">basename</name><operator pos:start="25:13" pos:end="25:14">++</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:43"><expr pos:start="29:5" pos:end="29:42"><name pos:start="29:5" pos:end="29:10">offset</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <call pos:start="29:14" pos:end="29:42"><name pos:start="29:14" pos:end="29:28">fdt_path_offset</name><argument_list pos:start="29:29" pos:end="29:42">(<argument pos:start="29:30" pos:end="29:32"><expr pos:start="29:30" pos:end="29:32"><name pos:start="29:30" pos:end="29:32">fdt</name></expr></argument>, <argument pos:start="29:35" pos:end="29:41"><expr pos:start="29:35" pos:end="29:41"><name pos:start="29:35" pos:end="29:41">dupname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:19">(<expr pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:14">offset</name> <operator pos:start="31:16" pos:end="31:16">&lt;</operator> <literal type="number" pos:start="31:18" pos:end="31:18">0</literal></expr>)</condition> <block pos:start="31:21" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:22">

        <return pos:start="33:9" pos:end="33:22">return <expr pos:start="33:16" pos:end="33:21"><name pos:start="33:16" pos:end="33:21">offset</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:52"><expr pos:start="39:5" pos:end="39:51"><name pos:start="39:5" pos:end="39:10">retval</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <call pos:start="39:14" pos:end="39:51"><name pos:start="39:14" pos:end="39:28">fdt_add_subnode</name><argument_list pos:start="39:29" pos:end="39:51">(<argument pos:start="39:30" pos:end="39:32"><expr pos:start="39:30" pos:end="39:32"><name pos:start="39:30" pos:end="39:32">fdt</name></expr></argument>, <argument pos:start="39:35" pos:end="39:40"><expr pos:start="39:35" pos:end="39:40"><name pos:start="39:35" pos:end="39:40">offset</name></expr></argument>, <argument pos:start="39:43" pos:end="39:50"><expr pos:start="39:43" pos:end="39:50"><name pos:start="39:43" pos:end="39:50">basename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:20"><expr pos:start="41:5" pos:end="41:19"><call pos:start="41:5" pos:end="41:19"><name pos:start="41:5" pos:end="41:10">g_free</name><argument_list pos:start="41:11" pos:end="41:19">(<argument pos:start="41:12" pos:end="41:18"><expr pos:start="41:12" pos:end="41:18"><name pos:start="41:12" pos:end="41:18">dupname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="43:5" pos:end="43:18">return <expr pos:start="43:12" pos:end="43:17"><name pos:start="43:12" pos:end="43:17">retval</name></expr>;</return>

</block_content>}</block></function>
</unit>
