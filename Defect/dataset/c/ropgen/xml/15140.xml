<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15140.c" pos:tabs="8"><function pos:start="1:1" pos:end="195:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:41">decode_ref_pic_list_reordering</name><parameter_list pos:start="1:42" pos:end="1:57">(<parameter pos:start="1:43" pos:end="1:56"><decl pos:start="1:43" pos:end="1:56"><type pos:start="1:43" pos:end="1:55"><name pos:start="1:43" pos:end="1:53">H264Context</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:56">h</name></decl></parameter>)</parameter_list><block pos:start="1:58" pos:end="195:1">{<block_content pos:start="3:5" pos:end="193:13">

    <decl_stmt pos:start="3:5" pos:end="3:37"><decl pos:start="3:5" pos:end="3:36"><type pos:start="3:5" pos:end="3:26"><name pos:start="3:5" pos:end="3:18">MpegEncContext</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier> <specifier pos:start="3:22" pos:end="3:26">const</specifier></type> <name pos:start="3:28" pos:end="3:28">s</name> <init pos:start="3:30" pos:end="3:36">= <expr pos:start="3:32" pos:end="3:36"><operator pos:start="3:32" pos:end="3:32">&amp;</operator><name pos:start="3:33" pos:end="3:36"><name pos:start="3:33" pos:end="3:33">h</name><operator pos:start="3:34" pos:end="3:35">-&gt;</operator><name pos:start="3:36" pos:end="3:36">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">list</name></decl>, <decl pos:start="5:15" pos:end="5:19"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:19">index</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:24"><expr pos:start="9:5" pos:end="9:23"><call pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:20">print_short_term</name><argument_list pos:start="9:21" pos:end="9:23">(<argument pos:start="9:22" pos:end="9:22"><expr pos:start="9:22" pos:end="9:22"><name pos:start="9:22" pos:end="9:22">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:23"><expr pos:start="11:5" pos:end="11:22"><call pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:19">print_long_term</name><argument_list pos:start="11:20" pos:end="11:22">(<argument pos:start="11:21" pos:end="11:21"><expr pos:start="11:21" pos:end="11:21"><name pos:start="11:21" pos:end="11:21">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="13:65"><if pos:start="13:5" pos:end="13:65">if<condition pos:start="13:7" pos:end="13:55">(<expr pos:start="13:8" pos:end="13:54"><name pos:start="13:8" pos:end="13:20"><name pos:start="13:8" pos:end="13:8">h</name><operator pos:start="13:9" pos:end="13:10">-&gt;</operator><name pos:start="13:11" pos:end="13:20">slice_type</name></name><operator pos:start="13:21" pos:end="13:22">==</operator><name pos:start="13:23" pos:end="13:28">I_TYPE</name> <operator pos:start="13:30" pos:end="13:31">||</operator> <name pos:start="13:33" pos:end="13:45"><name pos:start="13:33" pos:end="13:33">h</name><operator pos:start="13:34" pos:end="13:35">-&gt;</operator><name pos:start="13:36" pos:end="13:45">slice_type</name></name><operator pos:start="13:46" pos:end="13:47">==</operator><name pos:start="13:48" pos:end="13:54">SI_TYPE</name></expr>)</condition><block type="pseudo" pos:start="13:57" pos:end="13:65"><block_content pos:start="13:57" pos:end="13:65"> <return pos:start="13:57" pos:end="13:65">return <expr pos:start="13:64" pos:end="13:64"><literal type="number" pos:start="13:64" pos:end="13:64">0</literal></expr>;</return></block_content></block></if></if_stmt> <comment type="line" pos:start="13:67" pos:end="13:90">//FIXME move before func</comment>



    <for pos:start="17:5" pos:end="169:5">for<control pos:start="17:8" pos:end="17:31">(<init pos:start="17:9" pos:end="17:15"><expr pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:12">list</name><operator pos:start="17:13" pos:end="17:13">=</operator><literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr>;</init> <condition pos:start="17:17" pos:end="17:23"><expr pos:start="17:17" pos:end="17:22"><name pos:start="17:17" pos:end="17:20">list</name><operator pos:start="17:21" pos:end="17:21">&lt;</operator><literal type="number" pos:start="17:22" pos:end="17:22">2</literal></expr>;</condition> <incr pos:start="17:25" pos:end="17:30"><expr pos:start="17:25" pos:end="17:30"><name pos:start="17:25" pos:end="17:28">list</name><operator pos:start="17:29" pos:end="17:30">++</operator></expr></incr>)</control><block pos:start="17:32" pos:end="169:5">{<block_content pos:start="19:9" pos:end="167:40">

        <expr_stmt pos:start="19:9" pos:end="19:97"><expr pos:start="19:9" pos:end="19:96"><call pos:start="19:9" pos:end="19:96"><name pos:start="19:9" pos:end="19:14">memcpy</name><argument_list pos:start="19:15" pos:end="19:96">(<argument pos:start="19:16" pos:end="19:32"><expr pos:start="19:16" pos:end="19:32"><name pos:start="19:16" pos:end="19:32"><name pos:start="19:16" pos:end="19:16">h</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:26">ref_list</name><index pos:start="19:27" pos:end="19:32">[<expr pos:start="19:28" pos:end="19:31"><name pos:start="19:28" pos:end="19:31">list</name></expr>]</index></name></expr></argument>, <argument pos:start="19:35" pos:end="19:59"><expr pos:start="19:35" pos:end="19:59"><name pos:start="19:35" pos:end="19:59"><name pos:start="19:35" pos:end="19:35">h</name><operator pos:start="19:36" pos:end="19:37">-&gt;</operator><name pos:start="19:38" pos:end="19:53">default_ref_list</name><index pos:start="19:54" pos:end="19:59">[<expr pos:start="19:55" pos:end="19:58"><name pos:start="19:55" pos:end="19:58">list</name></expr>]</index></name></expr></argument>, <argument pos:start="19:62" pos:end="19:95"><expr pos:start="19:62" pos:end="19:95"><sizeof pos:start="19:62" pos:end="19:76">sizeof<argument_list pos:start="19:68" pos:end="19:76">(<argument pos:start="19:69" pos:end="19:75"><expr pos:start="19:69" pos:end="19:75"><name pos:start="19:69" pos:end="19:75">Picture</name></expr></argument>)</argument_list></sizeof><operator pos:start="19:77" pos:end="19:77">*</operator><name pos:start="19:78" pos:end="19:95"><name pos:start="19:78" pos:end="19:78">h</name><operator pos:start="19:79" pos:end="19:80">-&gt;</operator><name pos:start="19:81" pos:end="19:89">ref_count</name><index pos:start="19:90" pos:end="19:95">[<expr pos:start="19:91" pos:end="19:94"><name pos:start="19:91" pos:end="19:94">list</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="23:9" pos:end="163:9"><if pos:start="23:9" pos:end="163:9">if<condition pos:start="23:11" pos:end="23:29">(<expr pos:start="23:12" pos:end="23:28"><call pos:start="23:12" pos:end="23:28"><name pos:start="23:12" pos:end="23:20">get_bits1</name><argument_list pos:start="23:21" pos:end="23:28">(<argument pos:start="23:22" pos:end="23:27"><expr pos:start="23:22" pos:end="23:27"><operator pos:start="23:22" pos:end="23:22">&amp;</operator><name pos:start="23:23" pos:end="23:27"><name pos:start="23:23" pos:end="23:23">s</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:27">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="23:30" pos:end="163:9">{<block_content pos:start="25:13" pos:end="161:13">

            <decl_stmt pos:start="25:13" pos:end="25:38"><decl pos:start="25:13" pos:end="25:37"><type pos:start="25:13" pos:end="25:15"><name pos:start="25:13" pos:end="25:15">int</name></type> <name pos:start="25:17" pos:end="25:20">pred</name><init pos:start="25:21" pos:end="25:37">= <expr pos:start="25:23" pos:end="25:37"><name pos:start="25:23" pos:end="25:37"><name pos:start="25:23" pos:end="25:23">h</name><operator pos:start="25:24" pos:end="25:25">-&gt;</operator><name pos:start="25:26" pos:end="25:37">curr_pic_num</name></name></expr></init></decl>;</decl_stmt>



            <for pos:start="29:13" pos:end="161:13">for<control pos:start="29:16" pos:end="29:35">(<init pos:start="29:17" pos:end="29:24"><expr pos:start="29:17" pos:end="29:23"><name pos:start="29:17" pos:end="29:21">index</name><operator pos:start="29:22" pos:end="29:22">=</operator><literal type="number" pos:start="29:23" pos:end="29:23">0</literal></expr>;</init> <condition pos:start="29:26" pos:end="29:26">;</condition> <incr pos:start="29:28" pos:end="29:34"><expr pos:start="29:28" pos:end="29:34"><name pos:start="29:28" pos:end="29:32">index</name><operator pos:start="29:33" pos:end="29:34">++</operator></expr></incr>)</control><block pos:start="29:36" pos:end="161:13">{<block_content pos:start="31:17" pos:end="159:17">

                <decl_stmt pos:start="31:17" pos:end="31:70"><decl pos:start="31:17" pos:end="31:69"><type pos:start="31:17" pos:end="31:19"><name pos:start="31:17" pos:end="31:19">int</name></type> <name pos:start="31:21" pos:end="31:46">reordering_of_pic_nums_idc</name><init pos:start="31:47" pos:end="31:69">= <expr pos:start="31:49" pos:end="31:69"><call pos:start="31:49" pos:end="31:69"><name pos:start="31:49" pos:end="31:61">get_ue_golomb</name><argument_list pos:start="31:62" pos:end="31:69">(<argument pos:start="31:63" pos:end="31:68"><expr pos:start="31:63" pos:end="31:68"><operator pos:start="31:63" pos:end="31:63">&amp;</operator><name pos:start="31:64" pos:end="31:68"><name pos:start="31:64" pos:end="31:64">s</name><operator pos:start="31:65" pos:end="31:66">-&gt;</operator><name pos:start="31:67" pos:end="31:68">gb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="33:17" pos:end="33:27"><decl pos:start="33:17" pos:end="33:26"><type pos:start="33:17" pos:end="33:19"><name pos:start="33:17" pos:end="33:19">int</name></type> <name pos:start="33:21" pos:end="33:26">pic_id</name></decl>;</decl_stmt>

                <decl_stmt pos:start="35:17" pos:end="35:22"><decl pos:start="35:17" pos:end="35:21"><type pos:start="35:17" pos:end="35:19"><name pos:start="35:17" pos:end="35:19">int</name></type> <name pos:start="35:21" pos:end="35:21">i</name></decl>;</decl_stmt>

                <decl_stmt pos:start="37:17" pos:end="37:36"><decl pos:start="37:17" pos:end="37:35"><type pos:start="37:17" pos:end="37:25"><name pos:start="37:17" pos:end="37:23">Picture</name> <modifier pos:start="37:25" pos:end="37:25">*</modifier></type><name pos:start="37:26" pos:end="37:28">ref</name> <init pos:start="37:30" pos:end="37:35">= <expr pos:start="37:32" pos:end="37:35"><name pos:start="37:32" pos:end="37:35">NULL</name></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="41:17" pos:end="43:26"><if pos:start="41:17" pos:end="43:26">if<condition pos:start="41:19" pos:end="41:49">(<expr pos:start="41:20" pos:end="41:48"><name pos:start="41:20" pos:end="41:45">reordering_of_pic_nums_idc</name><operator pos:start="41:46" pos:end="41:47">==</operator><literal type="number" pos:start="41:48" pos:end="41:48">3</literal></expr>)</condition><block type="pseudo" pos:start="43:21" pos:end="43:26"><block_content pos:start="43:21" pos:end="43:26">

                    <break pos:start="43:21" pos:end="43:26">break;</break></block_content></block></if></if_stmt>



                <if_stmt pos:start="47:17" pos:end="53:17"><if pos:start="47:17" pos:end="53:17">if<condition pos:start="47:19" pos:end="47:47">(<expr pos:start="47:20" pos:end="47:46"><name pos:start="47:20" pos:end="47:24">index</name> <operator pos:start="47:26" pos:end="47:27">&gt;=</operator> <name pos:start="47:29" pos:end="47:46"><name pos:start="47:29" pos:end="47:29">h</name><operator pos:start="47:30" pos:end="47:31">-&gt;</operator><name pos:start="47:32" pos:end="47:40">ref_count</name><index pos:start="47:41" pos:end="47:46">[<expr pos:start="47:42" pos:end="47:45"><name pos:start="47:42" pos:end="47:45">list</name></expr>]</index></name></expr>)</condition><block pos:start="47:48" pos:end="53:17">{<block_content pos:start="49:21" pos:end="51:30">

                    <expr_stmt pos:start="49:21" pos:end="49:83"><expr pos:start="49:21" pos:end="49:82"><call pos:start="49:21" pos:end="49:82"><name pos:start="49:21" pos:end="49:26">av_log</name><argument_list pos:start="49:27" pos:end="49:82">(<argument pos:start="49:28" pos:end="49:37"><expr pos:start="49:28" pos:end="49:37"><name pos:start="49:28" pos:end="49:37"><name pos:start="49:28" pos:end="49:28">h</name><operator pos:start="49:29" pos:end="49:30">-&gt;</operator><name pos:start="49:31" pos:end="49:31">s</name><operator pos:start="49:32" pos:end="49:32">.</operator><name pos:start="49:33" pos:end="49:37">avctx</name></name></expr></argument>, <argument pos:start="49:40" pos:end="49:51"><expr pos:start="49:40" pos:end="49:51"><name pos:start="49:40" pos:end="49:51">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="49:54" pos:end="49:81"><expr pos:start="49:54" pos:end="49:81"><literal type="string" pos:start="49:54" pos:end="49:81">"reference count overflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="51:21" pos:end="51:30">return <expr pos:start="51:28" pos:end="51:29"><operator pos:start="51:28" pos:end="51:28">-</operator><literal type="number" pos:start="51:29" pos:end="51:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="57:17" pos:end="159:17"><if pos:start="57:17" pos:end="153:17">if<condition pos:start="57:19" pos:end="57:48">(<expr pos:start="57:20" pos:end="57:47"><name pos:start="57:20" pos:end="57:45">reordering_of_pic_nums_idc</name><operator pos:start="57:46" pos:end="57:46">&lt;</operator><literal type="number" pos:start="57:47" pos:end="57:47">3</literal></expr>)</condition><block pos:start="57:49" pos:end="153:17">{<block_content pos:start="59:21" pos:end="151:21">

                    <if_stmt pos:start="59:21" pos:end="123:21"><if pos:start="59:21" pos:end="101:21">if<condition pos:start="59:23" pos:end="59:52">(<expr pos:start="59:24" pos:end="59:51"><name pos:start="59:24" pos:end="59:49">reordering_of_pic_nums_idc</name><operator pos:start="59:50" pos:end="59:50">&lt;</operator><literal type="number" pos:start="59:51" pos:end="59:51">2</literal></expr>)</condition><block pos:start="59:53" pos:end="101:21">{<block_content pos:start="61:25" pos:end="99:56">

                        <decl_stmt pos:start="61:25" pos:end="61:78"><decl pos:start="61:25" pos:end="61:77"><type pos:start="61:25" pos:end="61:33"><specifier pos:start="61:25" pos:end="61:29">const</specifier> <name pos:start="61:31" pos:end="61:33">int</name></type> <name pos:start="61:35" pos:end="61:50">abs_diff_pic_num</name><init pos:start="61:51" pos:end="61:77">= <expr pos:start="61:53" pos:end="61:77"><call pos:start="61:53" pos:end="61:73"><name pos:start="61:53" pos:end="61:65">get_ue_golomb</name><argument_list pos:start="61:66" pos:end="61:73">(<argument pos:start="61:67" pos:end="61:72"><expr pos:start="61:67" pos:end="61:72"><operator pos:start="61:67" pos:end="61:67">&amp;</operator><name pos:start="61:68" pos:end="61:72"><name pos:start="61:68" pos:end="61:68">s</name><operator pos:start="61:69" pos:end="61:70">-&gt;</operator><name pos:start="61:71" pos:end="61:72">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="61:75" pos:end="61:75">+</operator> <literal type="number" pos:start="61:77" pos:end="61:77">1</literal></expr></init></decl>;</decl_stmt>



                        <if_stmt pos:start="65:25" pos:end="71:25"><if pos:start="65:25" pos:end="71:25">if<condition pos:start="65:27" pos:end="65:62">(<expr pos:start="65:28" pos:end="65:61"><name pos:start="65:28" pos:end="65:43">abs_diff_pic_num</name> <operator pos:start="65:45" pos:end="65:46">&gt;=</operator> <name pos:start="65:48" pos:end="65:61"><name pos:start="65:48" pos:end="65:48">h</name><operator pos:start="65:49" pos:end="65:50">-&gt;</operator><name pos:start="65:51" pos:end="65:61">max_pic_num</name></name></expr>)</condition><block pos:start="65:63" pos:end="71:25">{<block_content pos:start="67:29" pos:end="69:38">

                            <expr_stmt pos:start="67:29" pos:end="67:92"><expr pos:start="67:29" pos:end="67:91"><call pos:start="67:29" pos:end="67:91"><name pos:start="67:29" pos:end="67:34">av_log</name><argument_list pos:start="67:35" pos:end="67:91">(<argument pos:start="67:36" pos:end="67:45"><expr pos:start="67:36" pos:end="67:45"><name pos:start="67:36" pos:end="67:45"><name pos:start="67:36" pos:end="67:36">h</name><operator pos:start="67:37" pos:end="67:38">-&gt;</operator><name pos:start="67:39" pos:end="67:39">s</name><operator pos:start="67:40" pos:end="67:40">.</operator><name pos:start="67:41" pos:end="67:45">avctx</name></name></expr></argument>, <argument pos:start="67:48" pos:end="67:59"><expr pos:start="67:48" pos:end="67:59"><name pos:start="67:48" pos:end="67:59">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="67:62" pos:end="67:90"><expr pos:start="67:62" pos:end="67:90"><literal type="string" pos:start="67:62" pos:end="67:90">"abs_diff_pic_num overflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <return pos:start="69:29" pos:end="69:38">return <expr pos:start="69:36" pos:end="69:37"><operator pos:start="69:36" pos:end="69:36">-</operator><literal type="number" pos:start="69:37" pos:end="69:37">1</literal></expr>;</return>

                        </block_content>}</block></if></if_stmt>



                        <if_stmt pos:start="75:25" pos:end="77:84"><if pos:start="75:25" pos:end="75:84">if<condition pos:start="75:27" pos:end="75:59">(<expr pos:start="75:28" pos:end="75:58"><name pos:start="75:28" pos:end="75:53">reordering_of_pic_nums_idc</name> <operator pos:start="75:55" pos:end="75:56">==</operator> <literal type="number" pos:start="75:58" pos:end="75:58">0</literal></expr>)</condition><block type="pseudo" pos:start="75:61" pos:end="75:84"><block_content pos:start="75:61" pos:end="75:84"> <expr_stmt pos:start="75:61" pos:end="75:84"><expr pos:start="75:61" pos:end="75:83"><name pos:start="75:61" pos:end="75:64">pred</name><operator pos:start="75:65" pos:end="75:66">-=</operator> <name pos:start="75:68" pos:end="75:83">abs_diff_pic_num</name></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="77:25" pos:end="77:84">else<block type="pseudo" pos:start="77:61" pos:end="77:84"><block_content pos:start="77:61" pos:end="77:84">                                <expr_stmt pos:start="77:61" pos:end="77:84"><expr pos:start="77:61" pos:end="77:83"><name pos:start="77:61" pos:end="77:64">pred</name><operator pos:start="77:65" pos:end="77:66">+=</operator> <name pos:start="77:68" pos:end="77:83">abs_diff_pic_num</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <expr_stmt pos:start="79:25" pos:end="79:51"><expr pos:start="79:25" pos:end="79:50"><name pos:start="79:25" pos:end="79:28">pred</name> <operator pos:start="79:30" pos:end="79:31">&amp;=</operator> <name pos:start="79:33" pos:end="79:46"><name pos:start="79:33" pos:end="79:33">h</name><operator pos:start="79:34" pos:end="79:35">-&gt;</operator><name pos:start="79:36" pos:end="79:46">max_pic_num</name></name> <operator pos:start="79:48" pos:end="79:48">-</operator> <literal type="number" pos:start="79:50" pos:end="79:50">1</literal></expr>;</expr_stmt>



                        <for pos:start="83:25" pos:end="95:25">for<control pos:start="83:28" pos:end="83:63">(<init pos:start="83:29" pos:end="83:52"><expr pos:start="83:29" pos:end="83:51"><name pos:start="83:29" pos:end="83:29">i</name><operator pos:start="83:30" pos:end="83:30">=</operator> <name pos:start="83:32" pos:end="83:49"><name pos:start="83:32" pos:end="83:32">h</name><operator pos:start="83:33" pos:end="83:34">-&gt;</operator><name pos:start="83:35" pos:end="83:49">short_ref_count</name></name><operator pos:start="83:50" pos:end="83:50">-</operator><literal type="number" pos:start="83:51" pos:end="83:51">1</literal></expr>;</init> <condition pos:start="83:54" pos:end="83:58"><expr pos:start="83:54" pos:end="83:57"><name pos:start="83:54" pos:end="83:54">i</name><operator pos:start="83:55" pos:end="83:56">&gt;=</operator><literal type="number" pos:start="83:57" pos:end="83:57">0</literal></expr>;</condition> <incr pos:start="83:60" pos:end="83:62"><expr pos:start="83:60" pos:end="83:62"><name pos:start="83:60" pos:end="83:60">i</name><operator pos:start="83:61" pos:end="83:62">--</operator></expr></incr>)</control><block pos:start="83:64" pos:end="95:25">{<block_content pos:start="85:29" pos:end="93:38">

                            <expr_stmt pos:start="85:29" pos:end="85:50"><expr pos:start="85:29" pos:end="85:49"><name pos:start="85:29" pos:end="85:31">ref</name> <operator pos:start="85:33" pos:end="85:33">=</operator> <name pos:start="85:35" pos:end="85:49"><name pos:start="85:35" pos:end="85:35">h</name><operator pos:start="85:36" pos:end="85:37">-&gt;</operator><name pos:start="85:38" pos:end="85:46">short_ref</name><index pos:start="85:47" pos:end="85:49">[<expr pos:start="85:48" pos:end="85:48"><name pos:start="85:48" pos:end="85:48">i</name></expr>]</index></name></expr>;</expr_stmt>

                            <expr_stmt pos:start="87:29" pos:end="87:56"><expr pos:start="87:29" pos:end="87:55"><call pos:start="87:29" pos:end="87:55"><name pos:start="87:29" pos:end="87:34">assert</name><argument_list pos:start="87:35" pos:end="87:55">(<argument pos:start="87:36" pos:end="87:54"><expr pos:start="87:36" pos:end="87:54"><name pos:start="87:36" pos:end="87:49"><name pos:start="87:36" pos:end="87:38">ref</name><operator pos:start="87:39" pos:end="87:40">-&gt;</operator><name pos:start="87:41" pos:end="87:49">reference</name></name> <operator pos:start="87:51" pos:end="87:52">==</operator> <literal type="number" pos:start="87:54" pos:end="87:54">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="89:29" pos:end="89:51"><expr pos:start="89:29" pos:end="89:50"><call pos:start="89:29" pos:end="89:50"><name pos:start="89:29" pos:end="89:34">assert</name><argument_list pos:start="89:35" pos:end="89:50">(<argument pos:start="89:36" pos:end="89:49"><expr pos:start="89:36" pos:end="89:49"><operator pos:start="89:36" pos:end="89:36">!</operator><name pos:start="89:37" pos:end="89:49"><name pos:start="89:37" pos:end="89:39">ref</name><operator pos:start="89:40" pos:end="89:41">-&gt;</operator><name pos:start="89:42" pos:end="89:49">long_ref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <if_stmt pos:start="91:29" pos:end="93:38"><if pos:start="91:29" pos:end="93:38">if<condition pos:start="91:31" pos:end="91:100">(<expr pos:start="91:32" pos:end="91:99"><name pos:start="91:32" pos:end="91:43"><name pos:start="91:32" pos:end="91:34">ref</name><operator pos:start="91:35" pos:end="91:36">-&gt;</operator><name pos:start="91:37" pos:end="91:40">data</name><index pos:start="91:41" pos:end="91:43">[<expr pos:start="91:42" pos:end="91:42"><literal type="number" pos:start="91:42" pos:end="91:42">0</literal></expr>]</index></name> <operator pos:start="91:45" pos:end="91:46">!=</operator> <name pos:start="91:48" pos:end="91:51">NULL</name> <operator pos:start="91:53" pos:end="91:54">&amp;&amp;</operator> <name pos:start="91:56" pos:end="91:69"><name pos:start="91:56" pos:end="91:58">ref</name><operator pos:start="91:59" pos:end="91:60">-&gt;</operator><name pos:start="91:61" pos:end="91:69">frame_num</name></name> <operator pos:start="91:71" pos:end="91:72">==</operator> <name pos:start="91:74" pos:end="91:77">pred</name> <operator pos:start="91:79" pos:end="91:80">&amp;&amp;</operator> <name pos:start="91:82" pos:end="91:94"><name pos:start="91:82" pos:end="91:84">ref</name><operator pos:start="91:85" pos:end="91:86">-&gt;</operator><name pos:start="91:87" pos:end="91:94">long_ref</name></name> <operator pos:start="91:96" pos:end="91:97">==</operator> <literal type="number" pos:start="91:99" pos:end="91:99">0</literal></expr>)</condition><block type="pseudo" pos:start="93:33" pos:end="93:38"><block_content pos:start="93:33" pos:end="93:38"> <comment type="line" pos:start="91:102" pos:end="91:159">// ignore non existing pictures by testing data[0] pointer</comment>

                                <break pos:start="93:33" pos:end="93:38">break;</break></block_content></block></if></if_stmt>

                        </block_content>}</block></for>

                        <if_stmt pos:start="97:25" pos:end="99:56"><if pos:start="97:25" pos:end="99:56">if<condition pos:start="97:27" pos:end="97:32">(<expr pos:start="97:28" pos:end="97:31"><name pos:start="97:28" pos:end="97:28">i</name><operator pos:start="97:29" pos:end="97:30">&gt;=</operator><literal type="number" pos:start="97:31" pos:end="97:31">0</literal></expr>)</condition><block type="pseudo" pos:start="99:29" pos:end="99:56"><block_content pos:start="99:29" pos:end="99:56">

                            <expr_stmt pos:start="99:29" pos:end="99:56"><expr pos:start="99:29" pos:end="99:55"><name pos:start="99:29" pos:end="99:39"><name pos:start="99:29" pos:end="99:31">ref</name><operator pos:start="99:32" pos:end="99:33">-&gt;</operator><name pos:start="99:34" pos:end="99:39">pic_id</name></name><operator pos:start="99:40" pos:end="99:40">=</operator> <name pos:start="99:42" pos:end="99:55"><name pos:start="99:42" pos:end="99:44">ref</name><operator pos:start="99:45" pos:end="99:46">-&gt;</operator><name pos:start="99:47" pos:end="99:55">frame_num</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></if><else pos:start="101:22" pos:end="123:21">else<block pos:start="101:26" pos:end="123:21">{<block_content pos:start="103:25" pos:end="121:25">

                        <expr_stmt pos:start="103:25" pos:end="103:54"><expr pos:start="103:25" pos:end="103:53"><name pos:start="103:25" pos:end="103:30">pic_id</name><operator pos:start="103:31" pos:end="103:31">=</operator> <call pos:start="103:33" pos:end="103:53"><name pos:start="103:33" pos:end="103:45">get_ue_golomb</name><argument_list pos:start="103:46" pos:end="103:53">(<argument pos:start="103:47" pos:end="103:52"><expr pos:start="103:47" pos:end="103:52"><operator pos:start="103:47" pos:end="103:47">&amp;</operator><name pos:start="103:48" pos:end="103:52"><name pos:start="103:48" pos:end="103:48">s</name><operator pos:start="103:49" pos:end="103:50">-&gt;</operator><name pos:start="103:51" pos:end="103:52">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="103:56" pos:end="103:74">//long_term_pic_idx</comment>

                        <expr_stmt pos:start="105:25" pos:end="105:50"><expr pos:start="105:25" pos:end="105:49"><name pos:start="105:25" pos:end="105:27">ref</name> <operator pos:start="105:29" pos:end="105:29">=</operator> <name pos:start="105:31" pos:end="105:49"><name pos:start="105:31" pos:end="105:31">h</name><operator pos:start="105:32" pos:end="105:33">-&gt;</operator><name pos:start="105:34" pos:end="105:41">long_ref</name><index pos:start="105:42" pos:end="105:49">[<expr pos:start="105:43" pos:end="105:48"><name pos:start="105:43" pos:end="105:48">pic_id</name></expr>]</index></name></expr>;</expr_stmt>

                        <if_stmt pos:start="107:25" pos:end="121:25"><if pos:start="107:25" pos:end="117:25">if<condition pos:start="107:27" pos:end="107:31">(<expr pos:start="107:28" pos:end="107:30"><name pos:start="107:28" pos:end="107:30">ref</name></expr>)</condition><block pos:start="107:32" pos:end="117:25">{<block_content pos:start="109:29" pos:end="115:32">

                            <expr_stmt pos:start="109:29" pos:end="109:48"><expr pos:start="109:29" pos:end="109:47"><name pos:start="109:29" pos:end="109:39"><name pos:start="109:29" pos:end="109:31">ref</name><operator pos:start="109:32" pos:end="109:33">-&gt;</operator><name pos:start="109:34" pos:end="109:39">pic_id</name></name><operator pos:start="109:40" pos:end="109:40">=</operator> <name pos:start="109:42" pos:end="109:47">pic_id</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="111:29" pos:end="111:56"><expr pos:start="111:29" pos:end="111:55"><call pos:start="111:29" pos:end="111:55"><name pos:start="111:29" pos:end="111:34">assert</name><argument_list pos:start="111:35" pos:end="111:55">(<argument pos:start="111:36" pos:end="111:54"><expr pos:start="111:36" pos:end="111:54"><name pos:start="111:36" pos:end="111:49"><name pos:start="111:36" pos:end="111:38">ref</name><operator pos:start="111:39" pos:end="111:40">-&gt;</operator><name pos:start="111:41" pos:end="111:49">reference</name></name> <operator pos:start="111:51" pos:end="111:52">==</operator> <literal type="number" pos:start="111:54" pos:end="111:54">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="113:29" pos:end="113:50"><expr pos:start="113:29" pos:end="113:49"><call pos:start="113:29" pos:end="113:49"><name pos:start="113:29" pos:end="113:34">assert</name><argument_list pos:start="113:35" pos:end="113:49">(<argument pos:start="113:36" pos:end="113:48"><expr pos:start="113:36" pos:end="113:48"><name pos:start="113:36" pos:end="113:48"><name pos:start="113:36" pos:end="113:38">ref</name><operator pos:start="113:39" pos:end="113:40">-&gt;</operator><name pos:start="113:41" pos:end="113:48">long_ref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="115:29" pos:end="115:32"><expr pos:start="115:29" pos:end="115:31"><name pos:start="115:29" pos:end="115:29">i</name><operator pos:start="115:30" pos:end="115:30">=</operator><literal type="number" pos:start="115:31" pos:end="115:31">0</literal></expr>;</expr_stmt>

                        </block_content>}</block></if><else pos:start="117:26" pos:end="121:25">else<block pos:start="117:30" pos:end="121:25">{<block_content pos:start="119:29" pos:end="119:33">

                            <expr_stmt pos:start="119:29" pos:end="119:33"><expr pos:start="119:29" pos:end="119:32"><name pos:start="119:29" pos:end="119:29">i</name><operator pos:start="119:30" pos:end="119:30">=</operator><operator pos:start="119:31" pos:end="119:31">-</operator><literal type="number" pos:start="119:32" pos:end="119:32">1</literal></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></else></if_stmt>



                    <if_stmt pos:start="127:21" pos:end="151:21"><if pos:start="127:21" pos:end="133:21">if <condition pos:start="127:24" pos:end="127:30">(<expr pos:start="127:25" pos:end="127:29"><name pos:start="127:25" pos:end="127:25">i</name> <operator pos:start="127:27" pos:end="127:27">&lt;</operator> <literal type="number" pos:start="127:29" pos:end="127:29">0</literal></expr>)</condition> <block pos:start="127:32" pos:end="133:21">{<block_content pos:start="129:25" pos:end="131:78">

                        <expr_stmt pos:start="129:25" pos:end="129:103"><expr pos:start="129:25" pos:end="129:102"><call pos:start="129:25" pos:end="129:102"><name pos:start="129:25" pos:end="129:30">av_log</name><argument_list pos:start="129:31" pos:end="129:102">(<argument pos:start="129:32" pos:end="129:41"><expr pos:start="129:32" pos:end="129:41"><name pos:start="129:32" pos:end="129:41"><name pos:start="129:32" pos:end="129:32">h</name><operator pos:start="129:33" pos:end="129:34">-&gt;</operator><name pos:start="129:35" pos:end="129:35">s</name><operator pos:start="129:36" pos:end="129:36">.</operator><name pos:start="129:37" pos:end="129:41">avctx</name></name></expr></argument>, <argument pos:start="129:44" pos:end="129:55"><expr pos:start="129:44" pos:end="129:55"><name pos:start="129:44" pos:end="129:55">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="129:58" pos:end="129:101"><expr pos:start="129:58" pos:end="129:101"><literal type="string" pos:start="129:58" pos:end="129:101">"reference picture missing during reorder\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="131:25" pos:end="131:78"><expr pos:start="131:25" pos:end="131:77"><call pos:start="131:25" pos:end="131:77"><name pos:start="131:25" pos:end="131:30">memset</name><argument_list pos:start="131:31" pos:end="131:77">(<argument pos:start="131:32" pos:end="131:56"><expr pos:start="131:32" pos:end="131:56"><operator pos:start="131:32" pos:end="131:32">&amp;</operator><name pos:start="131:33" pos:end="131:56"><name pos:start="131:33" pos:end="131:33">h</name><operator pos:start="131:34" pos:end="131:35">-&gt;</operator><name pos:start="131:36" pos:end="131:43">ref_list</name><index pos:start="131:44" pos:end="131:49">[<expr pos:start="131:45" pos:end="131:48"><name pos:start="131:45" pos:end="131:48">list</name></expr>]</index><index pos:start="131:50" pos:end="131:56">[<expr pos:start="131:51" pos:end="131:55"><name pos:start="131:51" pos:end="131:55">index</name></expr>]</index></name></expr></argument>, <argument pos:start="131:59" pos:end="131:59"><expr pos:start="131:59" pos:end="131:59"><literal type="number" pos:start="131:59" pos:end="131:59">0</literal></expr></argument>, <argument pos:start="131:62" pos:end="131:76"><expr pos:start="131:62" pos:end="131:76"><sizeof pos:start="131:62" pos:end="131:76">sizeof<argument_list pos:start="131:68" pos:end="131:76">(<argument pos:start="131:69" pos:end="131:75"><expr pos:start="131:69" pos:end="131:75"><name pos:start="131:69" pos:end="131:75">Picture</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="131:80" pos:end="131:86">//FIXME</comment>

                    </block_content>}</block></if> <else pos:start="133:23" pos:end="151:21">else <block pos:start="133:28" pos:end="151:21">{<block_content pos:start="135:25" pos:end="149:55">

                        <for pos:start="135:25" pos:end="141:25">for<control pos:start="135:28" pos:end="135:65">(<init pos:start="135:29" pos:end="135:36"><expr pos:start="135:29" pos:end="135:35"><name pos:start="135:29" pos:end="135:29">i</name><operator pos:start="135:30" pos:end="135:30">=</operator><name pos:start="135:31" pos:end="135:35">index</name></expr>;</init> <condition pos:start="135:38" pos:end="135:60"><expr pos:start="135:38" pos:end="135:59"><name pos:start="135:38" pos:end="135:38">i</name><operator pos:start="135:39" pos:end="135:39">+</operator><literal type="number" pos:start="135:40" pos:end="135:40">1</literal><operator pos:start="135:41" pos:end="135:41">&lt;</operator><name pos:start="135:42" pos:end="135:59"><name pos:start="135:42" pos:end="135:42">h</name><operator pos:start="135:43" pos:end="135:44">-&gt;</operator><name pos:start="135:45" pos:end="135:53">ref_count</name><index pos:start="135:54" pos:end="135:59">[<expr pos:start="135:55" pos:end="135:58"><name pos:start="135:55" pos:end="135:58">list</name></expr>]</index></name></expr>;</condition> <incr pos:start="135:62" pos:end="135:64"><expr pos:start="135:62" pos:end="135:64"><name pos:start="135:62" pos:end="135:62">i</name><operator pos:start="135:63" pos:end="135:64">++</operator></expr></incr>)</control><block pos:start="135:66" pos:end="141:25">{<block_content pos:start="137:29" pos:end="139:38">

                            <if_stmt pos:start="137:29" pos:end="139:38"><if pos:start="137:29" pos:end="139:38">if<condition pos:start="137:31" pos:end="137:124">(<expr pos:start="137:32" pos:end="137:123"><name pos:start="137:32" pos:end="137:44"><name pos:start="137:32" pos:end="137:34">ref</name><operator pos:start="137:35" pos:end="137:36">-&gt;</operator><name pos:start="137:37" pos:end="137:44">long_ref</name></name> <operator pos:start="137:46" pos:end="137:47">==</operator> <name pos:start="137:49" pos:end="137:68"><name pos:start="137:49" pos:end="137:49">h</name><operator pos:start="137:50" pos:end="137:51">-&gt;</operator><name pos:start="137:52" pos:end="137:59">ref_list</name><index pos:start="137:60" pos:end="137:65">[<expr pos:start="137:61" pos:end="137:64"><name pos:start="137:61" pos:end="137:64">list</name></expr>]</index><index pos:start="137:66" pos:end="137:68">[<expr pos:start="137:67" pos:end="137:67"><name pos:start="137:67" pos:end="137:67">i</name></expr>]</index></name><operator pos:start="137:69" pos:end="137:69">.</operator><name pos:start="137:70" pos:end="137:77">long_ref</name> <operator pos:start="137:79" pos:end="137:80">&amp;&amp;</operator> <name pos:start="137:82" pos:end="137:92"><name pos:start="137:82" pos:end="137:84">ref</name><operator pos:start="137:85" pos:end="137:86">-&gt;</operator><name pos:start="137:87" pos:end="137:92">pic_id</name></name> <operator pos:start="137:94" pos:end="137:95">==</operator> <name pos:start="137:97" pos:end="137:116"><name pos:start="137:97" pos:end="137:97">h</name><operator pos:start="137:98" pos:end="137:99">-&gt;</operator><name pos:start="137:100" pos:end="137:107">ref_list</name><index pos:start="137:108" pos:end="137:113">[<expr pos:start="137:109" pos:end="137:112"><name pos:start="137:109" pos:end="137:112">list</name></expr>]</index><index pos:start="137:114" pos:end="137:116">[<expr pos:start="137:115" pos:end="137:115"><name pos:start="137:115" pos:end="137:115">i</name></expr>]</index></name><operator pos:start="137:117" pos:end="137:117">.</operator><name pos:start="137:118" pos:end="137:123">pic_id</name></expr>)</condition><block type="pseudo" pos:start="139:33" pos:end="139:38"><block_content pos:start="139:33" pos:end="139:38">

                                <break pos:start="139:33" pos:end="139:38">break;</break></block_content></block></if></if_stmt>

                        </block_content>}</block></for>

                        <for pos:start="143:25" pos:end="147:25">for<control pos:start="143:28" pos:end="143:45">(<init pos:start="143:29" pos:end="143:29">;</init> <condition pos:start="143:31" pos:end="143:40"><expr pos:start="143:31" pos:end="143:39"><name pos:start="143:31" pos:end="143:31">i</name> <operator pos:start="143:33" pos:end="143:33">&gt;</operator> <name pos:start="143:35" pos:end="143:39">index</name></expr>;</condition> <incr pos:start="143:42" pos:end="143:44"><expr pos:start="143:42" pos:end="143:44"><name pos:start="143:42" pos:end="143:42">i</name><operator pos:start="143:43" pos:end="143:44">--</operator></expr></incr>)</control><block pos:start="143:46" pos:end="147:25">{<block_content pos:start="145:29" pos:end="145:73">

                            <expr_stmt pos:start="145:29" pos:end="145:73"><expr pos:start="145:29" pos:end="145:72"><name pos:start="145:29" pos:end="145:48"><name pos:start="145:29" pos:end="145:29">h</name><operator pos:start="145:30" pos:end="145:31">-&gt;</operator><name pos:start="145:32" pos:end="145:39">ref_list</name><index pos:start="145:40" pos:end="145:45">[<expr pos:start="145:41" pos:end="145:44"><name pos:start="145:41" pos:end="145:44">list</name></expr>]</index><index pos:start="145:46" pos:end="145:48">[<expr pos:start="145:47" pos:end="145:47"><name pos:start="145:47" pos:end="145:47">i</name></expr>]</index></name><operator pos:start="145:49" pos:end="145:49">=</operator> <name pos:start="145:51" pos:end="145:72"><name pos:start="145:51" pos:end="145:51">h</name><operator pos:start="145:52" pos:end="145:53">-&gt;</operator><name pos:start="145:54" pos:end="145:61">ref_list</name><index pos:start="145:62" pos:end="145:67">[<expr pos:start="145:63" pos:end="145:66"><name pos:start="145:63" pos:end="145:66">list</name></expr>]</index><index pos:start="145:68" pos:end="145:72">[<expr pos:start="145:69" pos:end="145:71"><name pos:start="145:69" pos:end="145:69">i</name><operator pos:start="145:70" pos:end="145:70">-</operator><literal type="number" pos:start="145:71" pos:end="145:71">1</literal></expr>]</index></name></expr>;</expr_stmt>

                        </block_content>}</block></for>

                        <expr_stmt pos:start="149:25" pos:end="149:55"><expr pos:start="149:25" pos:end="149:54"><name pos:start="149:25" pos:end="149:48"><name pos:start="149:25" pos:end="149:25">h</name><operator pos:start="149:26" pos:end="149:27">-&gt;</operator><name pos:start="149:28" pos:end="149:35">ref_list</name><index pos:start="149:36" pos:end="149:41">[<expr pos:start="149:37" pos:end="149:40"><name pos:start="149:37" pos:end="149:40">list</name></expr>]</index><index pos:start="149:42" pos:end="149:48">[<expr pos:start="149:43" pos:end="149:47"><name pos:start="149:43" pos:end="149:47">index</name></expr>]</index></name><operator pos:start="149:49" pos:end="149:49">=</operator> <operator pos:start="149:51" pos:end="149:51">*</operator><name pos:start="149:52" pos:end="149:54">ref</name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if><else pos:start="153:18" pos:end="159:17">else<block pos:start="153:22" pos:end="159:17">{<block_content pos:start="155:21" pos:end="157:30">

                    <expr_stmt pos:start="155:21" pos:end="155:93"><expr pos:start="155:21" pos:end="155:92"><call pos:start="155:21" pos:end="155:92"><name pos:start="155:21" pos:end="155:26">av_log</name><argument_list pos:start="155:27" pos:end="155:92">(<argument pos:start="155:28" pos:end="155:37"><expr pos:start="155:28" pos:end="155:37"><name pos:start="155:28" pos:end="155:37"><name pos:start="155:28" pos:end="155:28">h</name><operator pos:start="155:29" pos:end="155:30">-&gt;</operator><name pos:start="155:31" pos:end="155:31">s</name><operator pos:start="155:32" pos:end="155:32">.</operator><name pos:start="155:33" pos:end="155:37">avctx</name></name></expr></argument>, <argument pos:start="155:40" pos:end="155:51"><expr pos:start="155:40" pos:end="155:51"><name pos:start="155:40" pos:end="155:51">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="155:54" pos:end="155:91"><expr pos:start="155:54" pos:end="155:91"><literal type="string" pos:start="155:54" pos:end="155:91">"illegal reordering_of_pic_nums_idc\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="157:21" pos:end="157:30">return <expr pos:start="157:28" pos:end="157:29"><operator pos:start="157:28" pos:end="157:28">-</operator><literal type="number" pos:start="157:29" pos:end="157:29">1</literal></expr>;</return>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="167:9" pos:end="167:40"><if pos:start="167:9" pos:end="167:40">if<condition pos:start="167:11" pos:end="167:33">(<expr pos:start="167:12" pos:end="167:32"><name pos:start="167:12" pos:end="167:24"><name pos:start="167:12" pos:end="167:12">h</name><operator pos:start="167:13" pos:end="167:14">-&gt;</operator><name pos:start="167:15" pos:end="167:24">slice_type</name></name><operator pos:start="167:25" pos:end="167:26">!=</operator><name pos:start="167:27" pos:end="167:32">B_TYPE</name></expr>)</condition><block type="pseudo" pos:start="167:35" pos:end="167:40"><block_content pos:start="167:35" pos:end="167:40"> <break pos:start="167:35" pos:end="167:40">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <for pos:start="171:5" pos:end="183:5">for<control pos:start="171:8" pos:end="171:31">(<init pos:start="171:9" pos:end="171:15"><expr pos:start="171:9" pos:end="171:14"><name pos:start="171:9" pos:end="171:12">list</name><operator pos:start="171:13" pos:end="171:13">=</operator><literal type="number" pos:start="171:14" pos:end="171:14">0</literal></expr>;</init> <condition pos:start="171:17" pos:end="171:23"><expr pos:start="171:17" pos:end="171:22"><name pos:start="171:17" pos:end="171:20">list</name><operator pos:start="171:21" pos:end="171:21">&lt;</operator><literal type="number" pos:start="171:22" pos:end="171:22">2</literal></expr>;</condition> <incr pos:start="171:25" pos:end="171:30"><expr pos:start="171:25" pos:end="171:30"><name pos:start="171:25" pos:end="171:28">list</name><operator pos:start="171:29" pos:end="171:30">++</operator></expr></incr>)</control><block pos:start="171:32" pos:end="183:5">{<block_content pos:start="173:9" pos:end="181:40">

        <for pos:start="173:9" pos:end="179:9">for<control pos:start="173:12" pos:end="173:58">(<init pos:start="173:13" pos:end="173:21"><expr pos:start="173:13" pos:end="173:20"><name pos:start="173:13" pos:end="173:17">index</name><operator pos:start="173:18" pos:end="173:18">=</operator> <literal type="number" pos:start="173:20" pos:end="173:20">0</literal></expr>;</init> <condition pos:start="173:23" pos:end="173:49"><expr pos:start="173:23" pos:end="173:48"><name pos:start="173:23" pos:end="173:27">index</name> <operator pos:start="173:29" pos:end="173:29">&lt;</operator> <name pos:start="173:31" pos:end="173:48"><name pos:start="173:31" pos:end="173:31">h</name><operator pos:start="173:32" pos:end="173:33">-&gt;</operator><name pos:start="173:34" pos:end="173:42">ref_count</name><index pos:start="173:43" pos:end="173:48">[<expr pos:start="173:44" pos:end="173:47"><name pos:start="173:44" pos:end="173:47">list</name></expr>]</index></name></expr>;</condition> <incr pos:start="173:51" pos:end="173:57"><expr pos:start="173:51" pos:end="173:57"><name pos:start="173:51" pos:end="173:55">index</name><operator pos:start="173:56" pos:end="173:57">++</operator></expr></incr>)</control><block pos:start="173:59" pos:end="179:9">{<block_content pos:start="175:13" pos:end="177:61">

            <if_stmt pos:start="175:13" pos:end="177:61"><if pos:start="175:13" pos:end="177:61">if<condition pos:start="175:15" pos:end="175:49">(<expr pos:start="175:16" pos:end="175:48"><operator pos:start="175:16" pos:end="175:16">!</operator><name pos:start="175:17" pos:end="175:40"><name pos:start="175:17" pos:end="175:17">h</name><operator pos:start="175:18" pos:end="175:19">-&gt;</operator><name pos:start="175:20" pos:end="175:27">ref_list</name><index pos:start="175:28" pos:end="175:33">[<expr pos:start="175:29" pos:end="175:32"><name pos:start="175:29" pos:end="175:32">list</name></expr>]</index><index pos:start="175:34" pos:end="175:40">[<expr pos:start="175:35" pos:end="175:39"><name pos:start="175:35" pos:end="175:39">index</name></expr>]</index></name><operator pos:start="175:41" pos:end="175:41">.</operator><name pos:start="175:42" pos:end="175:48"><name pos:start="175:42" pos:end="175:45">data</name><index pos:start="175:46" pos:end="175:48">[<expr pos:start="175:47" pos:end="175:47"><literal type="number" pos:start="175:47" pos:end="175:47">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="177:17" pos:end="177:61"><block_content pos:start="177:17" pos:end="177:61">

                <expr_stmt pos:start="177:17" pos:end="177:61"><expr pos:start="177:17" pos:end="177:60"><name pos:start="177:17" pos:end="177:40"><name pos:start="177:17" pos:end="177:17">h</name><operator pos:start="177:18" pos:end="177:19">-&gt;</operator><name pos:start="177:20" pos:end="177:27">ref_list</name><index pos:start="177:28" pos:end="177:33">[<expr pos:start="177:29" pos:end="177:32"><name pos:start="177:29" pos:end="177:32">list</name></expr>]</index><index pos:start="177:34" pos:end="177:40">[<expr pos:start="177:35" pos:end="177:39"><name pos:start="177:35" pos:end="177:39">index</name></expr>]</index></name><operator pos:start="177:41" pos:end="177:41">=</operator> <name pos:start="177:43" pos:end="177:60"><name pos:start="177:43" pos:end="177:43">s</name><operator pos:start="177:44" pos:end="177:45">-&gt;</operator><name pos:start="177:46" pos:end="177:60">current_picture</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="181:9" pos:end="181:40"><if pos:start="181:9" pos:end="181:40">if<condition pos:start="181:11" pos:end="181:33">(<expr pos:start="181:12" pos:end="181:32"><name pos:start="181:12" pos:end="181:24"><name pos:start="181:12" pos:end="181:12">h</name><operator pos:start="181:13" pos:end="181:14">-&gt;</operator><name pos:start="181:15" pos:end="181:24">slice_type</name></name><operator pos:start="181:25" pos:end="181:26">!=</operator><name pos:start="181:27" pos:end="181:32">B_TYPE</name></expr>)</condition><block type="pseudo" pos:start="181:35" pos:end="181:40"><block_content pos:start="181:35" pos:end="181:40"> <break pos:start="181:35" pos:end="181:40">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="187:5" pos:end="189:36"><if pos:start="187:5" pos:end="189:36">if<condition pos:start="187:7" pos:end="187:59">(<expr pos:start="187:8" pos:end="187:58"><name pos:start="187:8" pos:end="187:20"><name pos:start="187:8" pos:end="187:8">h</name><operator pos:start="187:9" pos:end="187:10">-&gt;</operator><name pos:start="187:11" pos:end="187:20">slice_type</name></name><operator pos:start="187:21" pos:end="187:22">==</operator><name pos:start="187:23" pos:end="187:28">B_TYPE</name> <operator pos:start="187:30" pos:end="187:31">&amp;&amp;</operator> <operator pos:start="187:33" pos:end="187:33">!</operator><name pos:start="187:34" pos:end="187:58"><name pos:start="187:34" pos:end="187:34">h</name><operator pos:start="187:35" pos:end="187:36">-&gt;</operator><name pos:start="187:37" pos:end="187:58">direct_spatial_mv_pred</name></name></expr>)</condition><block type="pseudo" pos:start="189:9" pos:end="189:36"><block_content pos:start="189:9" pos:end="189:36">

        <expr_stmt pos:start="189:9" pos:end="189:36"><expr pos:start="189:9" pos:end="189:35"><call pos:start="189:9" pos:end="189:35"><name pos:start="189:9" pos:end="189:32">direct_dist_scale_factor</name><argument_list pos:start="189:33" pos:end="189:35">(<argument pos:start="189:34" pos:end="189:34"><expr pos:start="189:34" pos:end="189:34"><name pos:start="189:34" pos:end="189:34">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="191:5" pos:end="191:28"><expr pos:start="191:5" pos:end="191:27"><call pos:start="191:5" pos:end="191:27"><name pos:start="191:5" pos:end="191:24">direct_ref_list_init</name><argument_list pos:start="191:25" pos:end="191:27">(<argument pos:start="191:26" pos:end="191:26"><expr pos:start="191:26" pos:end="191:26"><name pos:start="191:26" pos:end="191:26">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="193:5" pos:end="193:13">return <expr pos:start="193:12" pos:end="193:12"><literal type="number" pos:start="193:12" pos:end="193:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
