<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17155.c" pos:tabs="8"><function pos:start="1:1" pos:end="123:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">xilinx_spips_write</name><parameter_list pos:start="1:31" pos:end="3:70">(<parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:43"><name pos:start="1:32" pos:end="1:35">void</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:43">opaque</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:56"><decl pos:start="1:46" pos:end="1:56"><type pos:start="1:46" pos:end="1:56"><name pos:start="1:46" pos:end="1:51">hwaddr</name></type> <name pos:start="1:53" pos:end="1:56">addr</name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:54"><decl pos:start="3:41" pos:end="3:54"><type pos:start="3:41" pos:end="3:54"><name pos:start="3:41" pos:end="3:48">uint64_t</name></type> <name pos:start="3:50" pos:end="3:54">value</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:69"><decl pos:start="3:57" pos:end="3:69"><type pos:start="3:57" pos:end="3:69"><name pos:start="3:57" pos:end="3:64">unsigned</name></type> <name pos:start="3:66" pos:end="3:69">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="123:1">{<block_content pos:start="7:5" pos:end="121:31">

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">mask</name> <init pos:start="7:14" pos:end="7:17">= <expr pos:start="7:16" pos:end="7:17"><operator pos:start="7:16" pos:end="7:16">~</operator><literal type="number" pos:start="7:17" pos:end="7:17">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:21">man_start_com</name> <init pos:start="9:23" pos:end="9:25">= <expr pos:start="9:25" pos:end="9:25"><literal type="number" pos:start="9:25" pos:end="9:25">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">XilinxSPIPS</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:18">s</name> <init pos:start="11:20" pos:end="11:27">= <expr pos:start="11:22" pos:end="11:27"><name pos:start="11:22" pos:end="11:27">opaque</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:70"><expr pos:start="15:5" pos:end="15:69"><call pos:start="15:5" pos:end="15:69"><name pos:start="15:5" pos:end="15:12">DB_PRINT</name><argument_list pos:start="15:13" pos:end="15:69">(<argument pos:start="15:14" pos:end="15:45"><expr pos:start="15:14" pos:end="15:45"><literal type="string" pos:start="15:14" pos:end="15:20">"addr="</literal> <name pos:start="15:22" pos:end="15:35">TARGET_FMT_plx</name> <literal type="string" pos:start="15:37" pos:end="15:45">" = %x\n"</literal></expr></argument>, <argument pos:start="15:48" pos:end="15:51"><expr pos:start="15:48" pos:end="15:51"><name pos:start="15:48" pos:end="15:51">addr</name></expr></argument>, <argument pos:start="15:54" pos:end="15:68"><expr pos:start="15:54" pos:end="15:68"><operator pos:start="15:54" pos:end="15:54">(</operator><name pos:start="15:55" pos:end="15:62">unsigned</name><operator pos:start="15:63" pos:end="15:63">)</operator><name pos:start="15:64" pos:end="15:68">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:15"><expr pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:8">addr</name> <operator pos:start="17:10" pos:end="17:12">&gt;&gt;=</operator> <literal type="number" pos:start="17:14" pos:end="17:14">2</literal></expr>;</expr_stmt>

    <switch pos:start="19:5" pos:end="103:5">switch <condition pos:start="19:12" pos:end="19:17">(<expr pos:start="19:13" pos:end="19:16"><name pos:start="19:13" pos:end="19:16">addr</name></expr>)</condition> <block pos:start="19:19" pos:end="103:5">{<block_content pos:start="21:5" pos:end="101:27">

    <case pos:start="21:5" pos:end="21:18">case <expr pos:start="21:10" pos:end="21:17"><name pos:start="21:10" pos:end="21:17">R_CONFIG</name></expr>:</case>

        <expr_stmt pos:start="23:9" pos:end="23:26"><expr pos:start="23:9" pos:end="23:25"><name pos:start="23:9" pos:end="23:12">mask</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <literal type="number" pos:start="23:16" pos:end="23:25">0x0002FFFF</literal></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="29:9"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:34">(<expr pos:start="25:13" pos:end="25:33"><name pos:start="25:13" pos:end="25:17">value</name> <operator pos:start="25:19" pos:end="25:19">&amp;</operator> <name pos:start="25:21" pos:end="25:33">MAN_START_COM</name></expr>)</condition> <block pos:start="25:36" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:30">

            <expr_stmt pos:start="27:13" pos:end="27:30"><expr pos:start="27:13" pos:end="27:29"><name pos:start="27:13" pos:end="27:25">man_start_com</name> <operator pos:start="27:27" pos:end="27:27">=</operator> <literal type="number" pos:start="27:29" pos:end="27:29">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    <case pos:start="33:5" pos:end="33:23">case <expr pos:start="33:10" pos:end="33:22"><name pos:start="33:10" pos:end="33:22">R_INTR_STATUS</name></expr>:</case>

        <expr_stmt pos:start="35:9" pos:end="35:23"><expr pos:start="35:9" pos:end="35:22"><name pos:start="35:9" pos:end="35:12">mask</name> <operator pos:start="35:14" pos:end="35:14">=</operator> <name pos:start="35:16" pos:end="35:22">IXR_ALL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:50"><expr pos:start="37:9" pos:end="37:49"><name pos:start="37:9" pos:end="37:30"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:15">regs</name><index pos:start="37:16" pos:end="37:30">[<expr pos:start="37:17" pos:end="37:29"><name pos:start="37:17" pos:end="37:29">R_INTR_STATUS</name></expr>]</index></name> <operator pos:start="37:32" pos:end="37:33">&amp;=</operator> <operator pos:start="37:35" pos:end="37:35">~</operator><operator pos:start="37:36" pos:end="37:36">(</operator><name pos:start="37:37" pos:end="37:40">mask</name> <operator pos:start="37:42" pos:end="37:42">&amp;</operator> <name pos:start="37:44" pos:end="37:48">value</name><operator pos:start="37:49" pos:end="37:49">)</operator></expr>;</expr_stmt>

        <goto pos:start="39:9" pos:end="39:27">goto <name pos:start="39:14" pos:end="39:26">no_reg_update</name>;</goto>

    <case pos:start="41:5" pos:end="41:20">case <expr pos:start="41:10" pos:end="41:19"><name pos:start="41:10" pos:end="41:19">R_INTR_DIS</name></expr>:</case>

        <expr_stmt pos:start="43:9" pos:end="43:23"><expr pos:start="43:9" pos:end="43:22"><name pos:start="43:9" pos:end="43:12">mask</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <name pos:start="43:16" pos:end="43:22">IXR_ALL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:48"><expr pos:start="45:9" pos:end="45:47"><name pos:start="45:9" pos:end="45:28"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:15">regs</name><index pos:start="45:16" pos:end="45:28">[<expr pos:start="45:17" pos:end="45:27"><name pos:start="45:17" pos:end="45:27">R_INTR_MASK</name></expr>]</index></name> <operator pos:start="45:30" pos:end="45:31">&amp;=</operator> <operator pos:start="45:33" pos:end="45:33">~</operator><operator pos:start="45:34" pos:end="45:34">(</operator><name pos:start="45:35" pos:end="45:38">mask</name> <operator pos:start="45:40" pos:end="45:40">&amp;</operator> <name pos:start="45:42" pos:end="45:46">value</name><operator pos:start="45:47" pos:end="45:47">)</operator></expr>;</expr_stmt>

        <goto pos:start="47:9" pos:end="47:27">goto <name pos:start="47:14" pos:end="47:26">no_reg_update</name>;</goto>

    <case pos:start="49:5" pos:end="49:19">case <expr pos:start="49:10" pos:end="49:18"><name pos:start="49:10" pos:end="49:18">R_INTR_EN</name></expr>:</case>

        <expr_stmt pos:start="51:9" pos:end="51:23"><expr pos:start="51:9" pos:end="51:22"><name pos:start="51:9" pos:end="51:12">mask</name> <operator pos:start="51:14" pos:end="51:14">=</operator> <name pos:start="51:16" pos:end="51:22">IXR_ALL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:45"><expr pos:start="53:9" pos:end="53:44"><name pos:start="53:9" pos:end="53:28"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:15">regs</name><index pos:start="53:16" pos:end="53:28">[<expr pos:start="53:17" pos:end="53:27"><name pos:start="53:17" pos:end="53:27">R_INTR_MASK</name></expr>]</index></name> <operator pos:start="53:30" pos:end="53:31">|=</operator> <name pos:start="53:33" pos:end="53:36">mask</name> <operator pos:start="53:38" pos:end="53:38">&amp;</operator> <name pos:start="53:40" pos:end="53:44">value</name></expr>;</expr_stmt>

        <goto pos:start="55:9" pos:end="55:27">goto <name pos:start="55:14" pos:end="55:26">no_reg_update</name>;</goto>

    <case pos:start="57:5" pos:end="57:14">case <expr pos:start="57:10" pos:end="57:13"><name pos:start="57:10" pos:end="57:13">R_EN</name></expr>:</case>

        <expr_stmt pos:start="59:9" pos:end="59:19"><expr pos:start="59:9" pos:end="59:18"><name pos:start="59:9" pos:end="59:12">mask</name> <operator pos:start="59:14" pos:end="59:14">=</operator> <literal type="number" pos:start="59:16" pos:end="59:18">0x1</literal></expr>;</expr_stmt>

        <break pos:start="61:9" pos:end="61:14">break;</break>

    <case pos:start="63:5" pos:end="63:28">case <expr pos:start="63:10" pos:end="63:27"><name pos:start="63:10" pos:end="63:27">R_SLAVE_IDLE_COUNT</name></expr>:</case>

        <expr_stmt pos:start="65:9" pos:end="65:20"><expr pos:start="65:9" pos:end="65:19"><name pos:start="65:9" pos:end="65:12">mask</name> <operator pos:start="65:14" pos:end="65:14">=</operator> <literal type="number" pos:start="65:16" pos:end="65:19">0xFF</literal></expr>;</expr_stmt>

        <break pos:start="67:9" pos:end="67:14">break;</break>

    <case pos:start="69:5" pos:end="69:19">case <expr pos:start="69:10" pos:end="69:18"><name pos:start="69:10" pos:end="69:18">R_RX_DATA</name></expr>:</case>

    <case pos:start="71:5" pos:end="71:21">case <expr pos:start="71:10" pos:end="71:20"><name pos:start="71:10" pos:end="71:20">R_INTR_MASK</name></expr>:</case>

    <case pos:start="73:5" pos:end="73:18">case <expr pos:start="73:10" pos:end="73:17"><name pos:start="73:10" pos:end="73:17">R_MOD_ID</name></expr>:</case>

        <expr_stmt pos:start="75:9" pos:end="75:17"><expr pos:start="75:9" pos:end="75:16"><name pos:start="75:9" pos:end="75:12">mask</name> <operator pos:start="75:14" pos:end="75:14">=</operator> <literal type="number" pos:start="75:16" pos:end="75:16">0</literal></expr>;</expr_stmt>

        <break pos:start="77:9" pos:end="77:14">break;</break>

    <case pos:start="79:5" pos:end="79:19">case <expr pos:start="79:10" pos:end="79:18"><name pos:start="79:10" pos:end="79:18">R_TX_DATA</name></expr>:</case>

        <expr_stmt pos:start="81:9" pos:end="81:61"><expr pos:start="81:9" pos:end="81:60"><call pos:start="81:9" pos:end="81:60"><name pos:start="81:9" pos:end="81:21">tx_data_bytes</name><argument_list pos:start="81:22" pos:end="81:60">(<argument pos:start="81:23" pos:end="81:23"><expr pos:start="81:23" pos:end="81:23"><name pos:start="81:23" pos:end="81:23">s</name></expr></argument>, <argument pos:start="81:26" pos:end="81:40"><expr pos:start="81:26" pos:end="81:40"><operator pos:start="81:26" pos:end="81:26">(</operator><name pos:start="81:27" pos:end="81:34">uint32_t</name><operator pos:start="81:35" pos:end="81:35">)</operator><name pos:start="81:36" pos:end="81:40">value</name></expr></argument>, <argument pos:start="81:43" pos:end="81:59"><expr pos:start="81:43" pos:end="81:59"><name pos:start="81:43" pos:end="81:59"><name pos:start="81:43" pos:end="81:43">s</name><operator pos:start="81:44" pos:end="81:45">-&gt;</operator><name pos:start="81:46" pos:end="81:59">num_txrx_bytes</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="83:9" pos:end="83:27">goto <name pos:start="83:14" pos:end="83:26">no_reg_update</name>;</goto>

    <case pos:start="85:5" pos:end="85:16">case <expr pos:start="85:10" pos:end="85:15"><name pos:start="85:10" pos:end="85:15">R_TXD1</name></expr>:</case>

        <expr_stmt pos:start="87:9" pos:end="87:45"><expr pos:start="87:9" pos:end="87:44"><call pos:start="87:9" pos:end="87:44"><name pos:start="87:9" pos:end="87:21">tx_data_bytes</name><argument_list pos:start="87:22" pos:end="87:44">(<argument pos:start="87:23" pos:end="87:23"><expr pos:start="87:23" pos:end="87:23"><name pos:start="87:23" pos:end="87:23">s</name></expr></argument>, <argument pos:start="87:26" pos:end="87:40"><expr pos:start="87:26" pos:end="87:40"><operator pos:start="87:26" pos:end="87:26">(</operator><name pos:start="87:27" pos:end="87:34">uint32_t</name><operator pos:start="87:35" pos:end="87:35">)</operator><name pos:start="87:36" pos:end="87:40">value</name></expr></argument>, <argument pos:start="87:43" pos:end="87:43"><expr pos:start="87:43" pos:end="87:43"><literal type="number" pos:start="87:43" pos:end="87:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="89:9" pos:end="89:27">goto <name pos:start="89:14" pos:end="89:26">no_reg_update</name>;</goto>

    <case pos:start="91:5" pos:end="91:16">case <expr pos:start="91:10" pos:end="91:15"><name pos:start="91:10" pos:end="91:15">R_TXD2</name></expr>:</case>

        <expr_stmt pos:start="93:9" pos:end="93:45"><expr pos:start="93:9" pos:end="93:44"><call pos:start="93:9" pos:end="93:44"><name pos:start="93:9" pos:end="93:21">tx_data_bytes</name><argument_list pos:start="93:22" pos:end="93:44">(<argument pos:start="93:23" pos:end="93:23"><expr pos:start="93:23" pos:end="93:23"><name pos:start="93:23" pos:end="93:23">s</name></expr></argument>, <argument pos:start="93:26" pos:end="93:40"><expr pos:start="93:26" pos:end="93:40"><operator pos:start="93:26" pos:end="93:26">(</operator><name pos:start="93:27" pos:end="93:34">uint32_t</name><operator pos:start="93:35" pos:end="93:35">)</operator><name pos:start="93:36" pos:end="93:40">value</name></expr></argument>, <argument pos:start="93:43" pos:end="93:43"><expr pos:start="93:43" pos:end="93:43"><literal type="number" pos:start="93:43" pos:end="93:43">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="95:9" pos:end="95:27">goto <name pos:start="95:14" pos:end="95:26">no_reg_update</name>;</goto>

    <case pos:start="97:5" pos:end="97:16">case <expr pos:start="97:10" pos:end="97:15"><name pos:start="97:10" pos:end="97:15">R_TXD3</name></expr>:</case>

        <expr_stmt pos:start="99:9" pos:end="99:45"><expr pos:start="99:9" pos:end="99:44"><call pos:start="99:9" pos:end="99:44"><name pos:start="99:9" pos:end="99:21">tx_data_bytes</name><argument_list pos:start="99:22" pos:end="99:44">(<argument pos:start="99:23" pos:end="99:23"><expr pos:start="99:23" pos:end="99:23"><name pos:start="99:23" pos:end="99:23">s</name></expr></argument>, <argument pos:start="99:26" pos:end="99:40"><expr pos:start="99:26" pos:end="99:40"><operator pos:start="99:26" pos:end="99:26">(</operator><name pos:start="99:27" pos:end="99:34">uint32_t</name><operator pos:start="99:35" pos:end="99:35">)</operator><name pos:start="99:36" pos:end="99:40">value</name></expr></argument>, <argument pos:start="99:43" pos:end="99:43"><expr pos:start="99:43" pos:end="99:43"><literal type="number" pos:start="99:43" pos:end="99:43">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="101:9" pos:end="101:27">goto <name pos:start="101:14" pos:end="101:26">no_reg_update</name>;</goto>

    </block_content>}</block></switch>

    <expr_stmt pos:start="105:5" pos:end="105:61"><expr pos:start="105:5" pos:end="105:60"><name pos:start="105:5" pos:end="105:17"><name pos:start="105:5" pos:end="105:5">s</name><operator pos:start="105:6" pos:end="105:7">-&gt;</operator><name pos:start="105:8" pos:end="105:11">regs</name><index pos:start="105:12" pos:end="105:17">[<expr pos:start="105:13" pos:end="105:16"><name pos:start="105:13" pos:end="105:16">addr</name></expr>]</index></name> <operator pos:start="105:19" pos:end="105:19">=</operator> <operator pos:start="105:21" pos:end="105:21">(</operator><name pos:start="105:22" pos:end="105:34"><name pos:start="105:22" pos:end="105:22">s</name><operator pos:start="105:23" pos:end="105:24">-&gt;</operator><name pos:start="105:25" pos:end="105:28">regs</name><index pos:start="105:29" pos:end="105:34">[<expr pos:start="105:30" pos:end="105:33"><name pos:start="105:30" pos:end="105:33">addr</name></expr>]</index></name> <operator pos:start="105:36" pos:end="105:36">&amp;</operator> <operator pos:start="105:38" pos:end="105:38">~</operator><name pos:start="105:39" pos:end="105:42">mask</name><operator pos:start="105:43" pos:end="105:43">)</operator> <operator pos:start="105:45" pos:end="105:45">|</operator> <operator pos:start="105:47" pos:end="105:47">(</operator><name pos:start="105:48" pos:end="105:52">value</name> <operator pos:start="105:54" pos:end="105:54">&amp;</operator> <name pos:start="105:56" pos:end="105:59">mask</name><operator pos:start="105:60" pos:end="105:60">)</operator></expr>;</expr_stmt>

<label pos:start="107:1" pos:end="107:14"><name pos:start="107:1" pos:end="107:13">no_reg_update</name>:</label>

    <expr_stmt pos:start="109:5" pos:end="109:36"><expr pos:start="109:5" pos:end="109:35"><call pos:start="109:5" pos:end="109:35"><name pos:start="109:5" pos:end="109:32">xilinx_spips_update_cs_lines</name><argument_list pos:start="109:33" pos:end="109:35">(<argument pos:start="109:34" pos:end="109:34"><expr pos:start="109:34" pos:end="109:34"><name pos:start="109:34" pos:end="109:34">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="111:5" pos:end="117:5"><if pos:start="111:5" pos:end="117:5">if <condition pos:start="111:8" pos:end="113:78">(<expr pos:start="111:9" pos:end="113:77"><operator pos:start="111:9" pos:end="111:9">(</operator><name pos:start="111:10" pos:end="111:22">man_start_com</name> <operator pos:start="111:24" pos:end="111:25">&amp;&amp;</operator> <name pos:start="111:27" pos:end="111:43"><name pos:start="111:27" pos:end="111:27">s</name><operator pos:start="111:28" pos:end="111:29">-&gt;</operator><name pos:start="111:30" pos:end="111:33">regs</name><index pos:start="111:34" pos:end="111:43">[<expr pos:start="111:35" pos:end="111:42"><name pos:start="111:35" pos:end="111:42">R_CONFIG</name></expr>]</index></name> <operator pos:start="111:45" pos:end="111:45">&amp;</operator> <name pos:start="111:47" pos:end="111:58">MAN_START_EN</name><operator pos:start="111:59" pos:end="111:59">)</operator> <operator pos:start="111:61" pos:end="111:62">||</operator>

            <operator pos:start="113:13" pos:end="113:13">(</operator><call pos:start="113:14" pos:end="113:40"><name pos:start="113:14" pos:end="113:27">fifo8_is_empty</name><argument_list pos:start="113:28" pos:end="113:40">(<argument pos:start="113:29" pos:end="113:39"><expr pos:start="113:29" pos:end="113:39"><operator pos:start="113:29" pos:end="113:29">&amp;</operator><name pos:start="113:30" pos:end="113:39"><name pos:start="113:30" pos:end="113:30">s</name><operator pos:start="113:31" pos:end="113:32">-&gt;</operator><name pos:start="113:33" pos:end="113:39">tx_fifo</name></name></expr></argument>)</argument_list></call> <operator pos:start="113:42" pos:end="113:43">&amp;&amp;</operator> <name pos:start="113:45" pos:end="113:61"><name pos:start="113:45" pos:end="113:45">s</name><operator pos:start="113:46" pos:end="113:47">-&gt;</operator><name pos:start="113:48" pos:end="113:51">regs</name><index pos:start="113:52" pos:end="113:61">[<expr pos:start="113:53" pos:end="113:60"><name pos:start="113:53" pos:end="113:60">R_CONFIG</name></expr>]</index></name> <operator pos:start="113:63" pos:end="113:63">&amp;</operator> <name pos:start="113:65" pos:end="113:76">MAN_START_EN</name><operator pos:start="113:77" pos:end="113:77">)</operator></expr>)</condition> <block pos:start="113:80" pos:end="117:5">{<block_content pos:start="115:9" pos:end="115:37">

        <expr_stmt pos:start="115:9" pos:end="115:37"><expr pos:start="115:9" pos:end="115:36"><call pos:start="115:9" pos:end="115:36"><name pos:start="115:9" pos:end="115:33">xilinx_spips_flush_txfifo</name><argument_list pos:start="115:34" pos:end="115:36">(<argument pos:start="115:35" pos:end="115:35"><expr pos:start="115:35" pos:end="115:35"><name pos:start="115:35" pos:end="115:35">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:36"><expr pos:start="119:5" pos:end="119:35"><call pos:start="119:5" pos:end="119:35"><name pos:start="119:5" pos:end="119:32">xilinx_spips_update_cs_lines</name><argument_list pos:start="119:33" pos:end="119:35">(<argument pos:start="119:34" pos:end="119:34"><expr pos:start="119:34" pos:end="119:34"><name pos:start="119:34" pos:end="119:34">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:31"><expr pos:start="121:5" pos:end="121:30"><call pos:start="121:5" pos:end="121:30"><name pos:start="121:5" pos:end="121:27">xilinx_spips_update_ixr</name><argument_list pos:start="121:28" pos:end="121:30">(<argument pos:start="121:29" pos:end="121:29"><expr pos:start="121:29" pos:end="121:29"><name pos:start="121:29" pos:end="121:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
