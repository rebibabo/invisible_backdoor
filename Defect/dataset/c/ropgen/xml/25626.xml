<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25626.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">helper_sysexit</name><parameter_list pos:start="1:20" pos:end="1:48">(<parameter pos:start="1:21" pos:end="1:36"><decl pos:start="1:21" pos:end="1:36"><type pos:start="1:21" pos:end="1:36"><name pos:start="1:21" pos:end="1:31">CPUX86State</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">env</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:47"><decl pos:start="1:39" pos:end="1:47"><type pos:start="1:39" pos:end="1:47"><name pos:start="1:39" pos:end="1:41">int</name></type> <name pos:start="1:43" pos:end="1:47">dflag</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="77:1">{<block_content pos:start="5:5" pos:end="75:32">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">cpl</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:36"><expr pos:start="9:5" pos:end="9:35"><name pos:start="9:5" pos:end="9:7">cpl</name> <operator pos:start="9:9" pos:end="9:9">=</operator> <name pos:start="9:11" pos:end="9:21"><name pos:start="9:11" pos:end="9:13">env</name><operator pos:start="9:14" pos:end="9:15">-&gt;</operator><name pos:start="9:16" pos:end="9:21">hflags</name></name> <operator pos:start="9:23" pos:end="9:23">&amp;</operator> <name pos:start="9:25" pos:end="9:35">HF_CPL_MASK</name></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:42">(<expr pos:start="11:9" pos:end="11:41"><name pos:start="11:9" pos:end="11:24"><name pos:start="11:9" pos:end="11:11">env</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:24">sysenter_cs</name></name> <operator pos:start="11:26" pos:end="11:27">==</operator> <literal type="number" pos:start="11:29" pos:end="11:29">0</literal> <operator pos:start="11:31" pos:end="11:32">||</operator> <name pos:start="11:34" pos:end="11:36">cpl</name> <operator pos:start="11:38" pos:end="11:39">!=</operator> <literal type="number" pos:start="11:41" pos:end="11:41">0</literal></expr>)</condition> <block pos:start="11:44" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:48">

        <expr_stmt pos:start="13:9" pos:end="13:48"><expr pos:start="13:9" pos:end="13:47"><call pos:start="13:9" pos:end="13:47"><name pos:start="13:9" pos:end="13:27">raise_exception_err</name><argument_list pos:start="13:28" pos:end="13:47">(<argument pos:start="13:29" pos:end="13:31"><expr pos:start="13:29" pos:end="13:31"><name pos:start="13:29" pos:end="13:31">env</name></expr></argument>, <argument pos:start="13:34" pos:end="13:43"><expr pos:start="13:34" pos:end="13:43"><name pos:start="13:34" pos:end="13:43">EXCP0D_GPF</name></expr></argument>, <argument pos:start="13:46" pos:end="13:46"><expr pos:start="13:46" pos:end="13:46"><literal type="number" pos:start="13:46" pos:end="13:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="17:5" pos:end="20:0"><expr pos:start="17:5" pos:end="17:27"><call pos:start="17:5" pos:end="17:27"><name pos:start="17:5" pos:end="17:19">cpu_x86_set_cpl</name><argument_list pos:start="17:20" pos:end="17:27">(<argument pos:start="17:21" pos:end="17:23"><expr pos:start="17:21" pos:end="17:23"><name pos:start="17:21" pos:end="17:23">env</name></expr></argument>, <argument pos:start="17:26" pos:end="17:26"><expr pos:start="17:26" pos:end="17:26"><literal type="number" pos:start="17:26" pos:end="17:26">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="19:1" pos:end="19:20">#<cpp:directive pos:start="19:2" pos:end="19:6">ifdef</cpp:directive> <name pos:start="19:8" pos:end="19:20">TARGET_X86_64</name></cpp:ifdef>

    <if_stmt pos:start="21:5" pos:end="71:5"><if pos:start="21:5" pos:end="45:5">if <condition pos:start="21:8" pos:end="21:19">(<expr pos:start="21:9" pos:end="21:18"><name pos:start="21:9" pos:end="21:13">dflag</name> <operator pos:start="21:15" pos:end="21:16">==</operator> <literal type="number" pos:start="21:18" pos:end="21:18">2</literal></expr>)</condition> <block pos:start="21:21" pos:end="45:5">{<block_content pos:start="23:9" pos:end="43:58">

        <expr_stmt pos:start="23:9" pos:end="33:44"><expr pos:start="23:9" pos:end="33:43"><call pos:start="23:9" pos:end="33:43"><name pos:start="23:9" pos:end="23:30">cpu_x86_load_seg_cache</name><argument_list pos:start="23:31" pos:end="33:43">(<argument pos:start="23:32" pos:end="23:34"><expr pos:start="23:32" pos:end="23:34"><name pos:start="23:32" pos:end="23:34">env</name></expr></argument>, <argument pos:start="23:37" pos:end="23:40"><expr pos:start="23:37" pos:end="23:40"><name pos:start="23:37" pos:end="23:40">R_CS</name></expr></argument>, <argument pos:start="23:43" pos:end="25:32"><expr pos:start="23:43" pos:end="25:32"><operator pos:start="23:43" pos:end="23:43">(</operator><operator pos:start="23:44" pos:end="23:44">(</operator><name pos:start="23:45" pos:end="23:60"><name pos:start="23:45" pos:end="23:47">env</name><operator pos:start="23:48" pos:end="23:49">-&gt;</operator><name pos:start="23:50" pos:end="23:60">sysenter_cs</name></name> <operator pos:start="23:62" pos:end="23:62">+</operator> <literal type="number" pos:start="23:64" pos:end="23:65">32</literal><operator pos:start="23:66" pos:end="23:66">)</operator> <operator pos:start="23:68" pos:end="23:68">&amp;</operator> <literal type="number" pos:start="23:70" pos:end="23:75">0xfffc</literal><operator pos:start="23:76" pos:end="23:76">)</operator> <operator pos:start="23:78" pos:end="23:78">|</operator>

                               <literal type="number" pos:start="25:32" pos:end="25:32">3</literal></expr></argument>, <argument pos:start="25:35" pos:end="25:35"><expr pos:start="25:35" pos:end="25:35"><literal type="number" pos:start="25:35" pos:end="25:35">0</literal></expr></argument>, <argument pos:start="25:38" pos:end="25:47"><expr pos:start="25:38" pos:end="25:47"><literal type="number" pos:start="25:38" pos:end="25:47">0xffffffff</literal></expr></argument>,

                               <argument pos:start="27:32" pos:end="33:42"><expr pos:start="27:32" pos:end="33:42"><name pos:start="27:32" pos:end="27:42">DESC_G_MASK</name> <operator pos:start="27:44" pos:end="27:44">|</operator> <name pos:start="27:46" pos:end="27:56">DESC_B_MASK</name> <operator pos:start="27:58" pos:end="27:58">|</operator> <name pos:start="27:60" pos:end="27:70">DESC_P_MASK</name> <operator pos:start="27:72" pos:end="27:72">|</operator>

                               <name pos:start="29:32" pos:end="29:42">DESC_S_MASK</name> <operator pos:start="29:44" pos:end="29:44">|</operator> <operator pos:start="29:46" pos:end="29:46">(</operator><literal type="number" pos:start="29:47" pos:end="29:47">3</literal> <operator pos:start="29:49" pos:end="29:50">&lt;&lt;</operator> <name pos:start="29:52" pos:end="29:65">DESC_DPL_SHIFT</name><operator pos:start="29:66" pos:end="29:66">)</operator> <operator pos:start="29:68" pos:end="29:68">|</operator>

                               <name pos:start="31:32" pos:end="31:43">DESC_CS_MASK</name> <operator pos:start="31:45" pos:end="31:45">|</operator> <name pos:start="31:47" pos:end="31:57">DESC_R_MASK</name> <operator pos:start="31:59" pos:end="31:59">|</operator> <name pos:start="31:61" pos:end="31:71">DESC_A_MASK</name> <operator pos:start="31:73" pos:end="31:73">|</operator>

                               <name pos:start="33:32" pos:end="33:42">DESC_L_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="43:58"><expr pos:start="35:9" pos:end="43:57"><call pos:start="35:9" pos:end="43:57"><name pos:start="35:9" pos:end="35:30">cpu_x86_load_seg_cache</name><argument_list pos:start="35:31" pos:end="43:57">(<argument pos:start="35:32" pos:end="35:34"><expr pos:start="35:32" pos:end="35:34"><name pos:start="35:32" pos:end="35:34">env</name></expr></argument>, <argument pos:start="35:37" pos:end="35:40"><expr pos:start="35:37" pos:end="35:40"><name pos:start="35:37" pos:end="35:40">R_SS</name></expr></argument>, <argument pos:start="35:43" pos:end="37:32"><expr pos:start="35:43" pos:end="37:32"><operator pos:start="35:43" pos:end="35:43">(</operator><operator pos:start="35:44" pos:end="35:44">(</operator><name pos:start="35:45" pos:end="35:60"><name pos:start="35:45" pos:end="35:47">env</name><operator pos:start="35:48" pos:end="35:49">-&gt;</operator><name pos:start="35:50" pos:end="35:60">sysenter_cs</name></name> <operator pos:start="35:62" pos:end="35:62">+</operator> <literal type="number" pos:start="35:64" pos:end="35:65">40</literal><operator pos:start="35:66" pos:end="35:66">)</operator> <operator pos:start="35:68" pos:end="35:68">&amp;</operator> <literal type="number" pos:start="35:70" pos:end="35:75">0xfffc</literal><operator pos:start="35:76" pos:end="35:76">)</operator> <operator pos:start="35:78" pos:end="35:78">|</operator>

                               <literal type="number" pos:start="37:32" pos:end="37:32">3</literal></expr></argument>, <argument pos:start="37:35" pos:end="37:35"><expr pos:start="37:35" pos:end="37:35"><literal type="number" pos:start="37:35" pos:end="37:35">0</literal></expr></argument>, <argument pos:start="37:38" pos:end="37:47"><expr pos:start="37:38" pos:end="37:47"><literal type="number" pos:start="37:38" pos:end="37:47">0xffffffff</literal></expr></argument>,

                               <argument pos:start="39:32" pos:end="43:56"><expr pos:start="39:32" pos:end="43:56"><name pos:start="39:32" pos:end="39:42">DESC_G_MASK</name> <operator pos:start="39:44" pos:end="39:44">|</operator> <name pos:start="39:46" pos:end="39:56">DESC_B_MASK</name> <operator pos:start="39:58" pos:end="39:58">|</operator> <name pos:start="39:60" pos:end="39:70">DESC_P_MASK</name> <operator pos:start="39:72" pos:end="39:72">|</operator>

                               <name pos:start="41:32" pos:end="41:42">DESC_S_MASK</name> <operator pos:start="41:44" pos:end="41:44">|</operator> <operator pos:start="41:46" pos:end="41:46">(</operator><literal type="number" pos:start="41:47" pos:end="41:47">3</literal> <operator pos:start="41:49" pos:end="41:50">&lt;&lt;</operator> <name pos:start="41:52" pos:end="41:65">DESC_DPL_SHIFT</name><operator pos:start="41:66" pos:end="41:66">)</operator> <operator pos:start="41:68" pos:end="41:68">|</operator>

                               <name pos:start="43:32" pos:end="43:42">DESC_W_MASK</name> <operator pos:start="43:44" pos:end="43:44">|</operator> <name pos:start="43:46" pos:end="43:56">DESC_A_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="45:7" pos:end="71:5">else

<cpp:endif pos:start="47:1" pos:end="47:6">#<cpp:directive pos:start="47:2" pos:end="47:6">endif</cpp:directive></cpp:endif>

    <block pos:start="49:5" pos:end="71:5">{<block_content pos:start="51:9" pos:end="69:58">

        <expr_stmt pos:start="51:9" pos:end="59:73"><expr pos:start="51:9" pos:end="59:72"><call pos:start="51:9" pos:end="59:72"><name pos:start="51:9" pos:end="51:30">cpu_x86_load_seg_cache</name><argument_list pos:start="51:31" pos:end="59:72">(<argument pos:start="51:32" pos:end="51:34"><expr pos:start="51:32" pos:end="51:34"><name pos:start="51:32" pos:end="51:34">env</name></expr></argument>, <argument pos:start="51:37" pos:end="51:40"><expr pos:start="51:37" pos:end="51:40"><name pos:start="51:37" pos:end="51:40">R_CS</name></expr></argument>, <argument pos:start="51:43" pos:end="53:32"><expr pos:start="51:43" pos:end="53:32"><operator pos:start="51:43" pos:end="51:43">(</operator><operator pos:start="51:44" pos:end="51:44">(</operator><name pos:start="51:45" pos:end="51:60"><name pos:start="51:45" pos:end="51:47">env</name><operator pos:start="51:48" pos:end="51:49">-&gt;</operator><name pos:start="51:50" pos:end="51:60">sysenter_cs</name></name> <operator pos:start="51:62" pos:end="51:62">+</operator> <literal type="number" pos:start="51:64" pos:end="51:65">16</literal><operator pos:start="51:66" pos:end="51:66">)</operator> <operator pos:start="51:68" pos:end="51:68">&amp;</operator> <literal type="number" pos:start="51:70" pos:end="51:75">0xfffc</literal><operator pos:start="51:76" pos:end="51:76">)</operator> <operator pos:start="51:78" pos:end="51:78">|</operator>

                               <literal type="number" pos:start="53:32" pos:end="53:32">3</literal></expr></argument>, <argument pos:start="53:35" pos:end="53:35"><expr pos:start="53:35" pos:end="53:35"><literal type="number" pos:start="53:35" pos:end="53:35">0</literal></expr></argument>, <argument pos:start="53:38" pos:end="53:47"><expr pos:start="53:38" pos:end="53:47"><literal type="number" pos:start="53:38" pos:end="53:47">0xffffffff</literal></expr></argument>,

                               <argument pos:start="55:32" pos:end="59:71"><expr pos:start="55:32" pos:end="59:71"><name pos:start="55:32" pos:end="55:42">DESC_G_MASK</name> <operator pos:start="55:44" pos:end="55:44">|</operator> <name pos:start="55:46" pos:end="55:56">DESC_B_MASK</name> <operator pos:start="55:58" pos:end="55:58">|</operator> <name pos:start="55:60" pos:end="55:70">DESC_P_MASK</name> <operator pos:start="55:72" pos:end="55:72">|</operator>

                               <name pos:start="57:32" pos:end="57:42">DESC_S_MASK</name> <operator pos:start="57:44" pos:end="57:44">|</operator> <operator pos:start="57:46" pos:end="57:46">(</operator><literal type="number" pos:start="57:47" pos:end="57:47">3</literal> <operator pos:start="57:49" pos:end="57:50">&lt;&lt;</operator> <name pos:start="57:52" pos:end="57:65">DESC_DPL_SHIFT</name><operator pos:start="57:66" pos:end="57:66">)</operator> <operator pos:start="57:68" pos:end="57:68">|</operator>

                               <name pos:start="59:32" pos:end="59:43">DESC_CS_MASK</name> <operator pos:start="59:45" pos:end="59:45">|</operator> <name pos:start="59:47" pos:end="59:57">DESC_R_MASK</name> <operator pos:start="59:59" pos:end="59:59">|</operator> <name pos:start="59:61" pos:end="59:71">DESC_A_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="69:58"><expr pos:start="61:9" pos:end="69:57"><call pos:start="61:9" pos:end="69:57"><name pos:start="61:9" pos:end="61:30">cpu_x86_load_seg_cache</name><argument_list pos:start="61:31" pos:end="69:57">(<argument pos:start="61:32" pos:end="61:34"><expr pos:start="61:32" pos:end="61:34"><name pos:start="61:32" pos:end="61:34">env</name></expr></argument>, <argument pos:start="61:37" pos:end="61:40"><expr pos:start="61:37" pos:end="61:40"><name pos:start="61:37" pos:end="61:40">R_SS</name></expr></argument>, <argument pos:start="61:43" pos:end="63:32"><expr pos:start="61:43" pos:end="63:32"><operator pos:start="61:43" pos:end="61:43">(</operator><operator pos:start="61:44" pos:end="61:44">(</operator><name pos:start="61:45" pos:end="61:60"><name pos:start="61:45" pos:end="61:47">env</name><operator pos:start="61:48" pos:end="61:49">-&gt;</operator><name pos:start="61:50" pos:end="61:60">sysenter_cs</name></name> <operator pos:start="61:62" pos:end="61:62">+</operator> <literal type="number" pos:start="61:64" pos:end="61:65">24</literal><operator pos:start="61:66" pos:end="61:66">)</operator> <operator pos:start="61:68" pos:end="61:68">&amp;</operator> <literal type="number" pos:start="61:70" pos:end="61:75">0xfffc</literal><operator pos:start="61:76" pos:end="61:76">)</operator> <operator pos:start="61:78" pos:end="61:78">|</operator>

                               <literal type="number" pos:start="63:32" pos:end="63:32">3</literal></expr></argument>, <argument pos:start="63:35" pos:end="63:35"><expr pos:start="63:35" pos:end="63:35"><literal type="number" pos:start="63:35" pos:end="63:35">0</literal></expr></argument>, <argument pos:start="63:38" pos:end="63:47"><expr pos:start="63:38" pos:end="63:47"><literal type="number" pos:start="63:38" pos:end="63:47">0xffffffff</literal></expr></argument>,

                               <argument pos:start="65:32" pos:end="69:56"><expr pos:start="65:32" pos:end="69:56"><name pos:start="65:32" pos:end="65:42">DESC_G_MASK</name> <operator pos:start="65:44" pos:end="65:44">|</operator> <name pos:start="65:46" pos:end="65:56">DESC_B_MASK</name> <operator pos:start="65:58" pos:end="65:58">|</operator> <name pos:start="65:60" pos:end="65:70">DESC_P_MASK</name> <operator pos:start="65:72" pos:end="65:72">|</operator>

                               <name pos:start="67:32" pos:end="67:42">DESC_S_MASK</name> <operator pos:start="67:44" pos:end="67:44">|</operator> <operator pos:start="67:46" pos:end="67:46">(</operator><literal type="number" pos:start="67:47" pos:end="67:47">3</literal> <operator pos:start="67:49" pos:end="67:50">&lt;&lt;</operator> <name pos:start="67:52" pos:end="67:65">DESC_DPL_SHIFT</name><operator pos:start="67:66" pos:end="67:66">)</operator> <operator pos:start="67:68" pos:end="67:68">|</operator>

                               <name pos:start="69:32" pos:end="69:42">DESC_W_MASK</name> <operator pos:start="69:44" pos:end="69:44">|</operator> <name pos:start="69:46" pos:end="69:56">DESC_A_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:40"><expr pos:start="73:5" pos:end="73:39"><name pos:start="73:5" pos:end="73:20"><name pos:start="73:5" pos:end="73:7">env</name><operator pos:start="73:8" pos:end="73:9">-&gt;</operator><name pos:start="73:10" pos:end="73:13">regs</name><index pos:start="73:14" pos:end="73:20">[<expr pos:start="73:15" pos:end="73:19"><name pos:start="73:15" pos:end="73:19">R_ESP</name></expr>]</index></name> <operator pos:start="73:22" pos:end="73:22">=</operator> <name pos:start="73:24" pos:end="73:39"><name pos:start="73:24" pos:end="73:26">env</name><operator pos:start="73:27" pos:end="73:28">-&gt;</operator><name pos:start="73:29" pos:end="73:32">regs</name><index pos:start="73:33" pos:end="73:39">[<expr pos:start="73:34" pos:end="73:38"><name pos:start="73:34" pos:end="73:38">R_ECX</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:32"><expr pos:start="75:5" pos:end="75:31"><name pos:start="75:5" pos:end="75:12"><name pos:start="75:5" pos:end="75:7">env</name><operator pos:start="75:8" pos:end="75:9">-&gt;</operator><name pos:start="75:10" pos:end="75:12">eip</name></name> <operator pos:start="75:14" pos:end="75:14">=</operator> <name pos:start="75:16" pos:end="75:31"><name pos:start="75:16" pos:end="75:18">env</name><operator pos:start="75:19" pos:end="75:20">-&gt;</operator><name pos:start="75:21" pos:end="75:24">regs</name><index pos:start="75:25" pos:end="75:31">[<expr pos:start="75:26" pos:end="75:30"><name pos:start="75:26" pos:end="75:30">R_EDX</name></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
