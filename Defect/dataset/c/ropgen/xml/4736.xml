<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4736.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:17"><name pos:start="1:1" pos:end="1:15">RTPDemuxContext</name> <modifier pos:start="1:17" pos:end="1:17">*</modifier></type><name pos:start="1:18" pos:end="1:31">rtp_parse_open</name><parameter_list pos:start="1:32" pos:end="1:136">(<parameter pos:start="1:33" pos:end="1:51"><decl pos:start="1:33" pos:end="1:51"><type pos:start="1:33" pos:end="1:51"><name pos:start="1:33" pos:end="1:47">AVFormatContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:51">s1</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:65"><decl pos:start="1:54" pos:end="1:65"><type pos:start="1:54" pos:end="1:65"><name pos:start="1:54" pos:end="1:61">AVStream</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:65">st</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:83"><decl pos:start="1:68" pos:end="1:83"><type pos:start="1:68" pos:end="1:83"><name pos:start="1:68" pos:end="1:77">URLContext</name> <modifier pos:start="1:79" pos:end="1:79">*</modifier></type><name pos:start="1:80" pos:end="1:83">rtpc</name></decl></parameter>, <parameter pos:start="1:86" pos:end="1:101"><decl pos:start="1:86" pos:end="1:101"><type pos:start="1:86" pos:end="1:101"><name pos:start="1:86" pos:end="1:88">int</name></type> <name pos:start="1:90" pos:end="1:101">payload_type</name></decl></parameter>, <parameter pos:start="1:104" pos:end="1:135"><decl pos:start="1:104" pos:end="1:135"><type pos:start="1:104" pos:end="1:135"><name pos:start="1:104" pos:end="1:117">RTPPayloadData</name> <modifier pos:start="1:119" pos:end="1:119">*</modifier></type><name pos:start="1:120" pos:end="1:135">rtp_payload_data</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="87:1">{<block_content pos:start="5:5" pos:end="85:13">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">RTPDemuxContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:22">s</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:44"><expr pos:start="9:5" pos:end="9:43"><name pos:start="9:5" pos:end="9:5">s</name> <operator pos:start="9:7" pos:end="9:7">=</operator> <call pos:start="9:9" pos:end="9:43"><name pos:start="9:9" pos:end="9:18">av_mallocz</name><argument_list pos:start="9:19" pos:end="9:43">(<argument pos:start="9:20" pos:end="9:42"><expr pos:start="9:20" pos:end="9:42"><sizeof pos:start="9:20" pos:end="9:42">sizeof<argument_list pos:start="9:26" pos:end="9:42">(<argument pos:start="9:27" pos:end="9:41"><expr pos:start="9:27" pos:end="9:41"><name pos:start="9:27" pos:end="9:41">RTPDemuxContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="13:20"><if pos:start="11:5" pos:end="13:20">if <condition pos:start="11:8" pos:end="11:11">(<expr pos:start="11:9" pos:end="11:10"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:10">s</name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:20"><block_content pos:start="13:9" pos:end="13:20">

        <return pos:start="13:9" pos:end="13:20">return <expr pos:start="13:16" pos:end="13:19"><name pos:start="13:16" pos:end="13:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:35"><expr pos:start="15:5" pos:end="15:34"><name pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:19">payload_type</name></name> <operator pos:start="15:21" pos:end="15:21">=</operator> <name pos:start="15:23" pos:end="15:34">payload_type</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:43"><expr pos:start="17:5" pos:end="17:42"><name pos:start="17:5" pos:end="17:25"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:25">last_rtcp_ntp_time</name></name> <operator pos:start="17:27" pos:end="17:27">=</operator> <name pos:start="17:29" pos:end="17:42">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:44"><expr pos:start="19:5" pos:end="19:43"><name pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:26">first_rtcp_ntp_time</name></name> <operator pos:start="19:28" pos:end="19:28">=</operator> <name pos:start="19:30" pos:end="19:43">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:15"><expr pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:9"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:9">ic</name></name> <operator pos:start="21:11" pos:end="21:11">=</operator> <name pos:start="21:13" pos:end="21:14">s1</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:15"><expr pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:9"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:9">st</name></name> <operator pos:start="23:11" pos:end="23:11">=</operator> <name pos:start="23:13" pos:end="23:14">st</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:43"><expr pos:start="25:5" pos:end="25:42"><name pos:start="25:5" pos:end="25:23"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:23">rtp_payload_data</name></name> <operator pos:start="25:25" pos:end="25:25">=</operator> <name pos:start="25:27" pos:end="25:42">rtp_payload_data</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:43"><expr pos:start="27:5" pos:end="27:42"><call pos:start="27:5" pos:end="27:42"><name pos:start="27:5" pos:end="27:23">rtp_init_statistics</name><argument_list pos:start="27:24" pos:end="27:42">(<argument pos:start="27:25" pos:end="27:38"><expr pos:start="27:25" pos:end="27:38"><operator pos:start="27:25" pos:end="27:25">&amp;</operator><name pos:start="27:26" pos:end="27:38"><name pos:start="27:26" pos:end="27:26">s</name><operator pos:start="27:27" pos:end="27:28">-&gt;</operator><name pos:start="27:29" pos:end="27:38">statistics</name></name></expr></argument>, <argument pos:start="27:41" pos:end="27:41"><expr pos:start="27:41" pos:end="27:41"><literal type="number" pos:start="27:41" pos:end="27:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="27:45" pos:end="27:88">// do we know the initial sequence from sdp?</comment>

    <if_stmt pos:start="29:5" pos:end="77:5"><if pos:start="29:5" pos:end="41:5">if <condition pos:start="29:8" pos:end="29:55">(<expr pos:start="29:9" pos:end="29:54"><operator pos:start="29:9" pos:end="29:9">!</operator><call pos:start="29:10" pos:end="29:54"><name pos:start="29:10" pos:end="29:15">strcmp</name><argument_list pos:start="29:16" pos:end="29:54">(<argument pos:start="29:17" pos:end="29:45"><expr pos:start="29:17" pos:end="29:45"><call pos:start="29:17" pos:end="29:45"><name pos:start="29:17" pos:end="29:31">ff_rtp_enc_name</name><argument_list pos:start="29:32" pos:end="29:45">(<argument pos:start="29:33" pos:end="29:44"><expr pos:start="29:33" pos:end="29:44"><name pos:start="29:33" pos:end="29:44">payload_type</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="29:48" pos:end="29:53"><expr pos:start="29:48" pos:end="29:53"><literal type="string" pos:start="29:48" pos:end="29:53">"MP2T"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:57" pos:end="41:5">{<block_content pos:start="31:9" pos:end="39:9">

        <expr_stmt pos:start="31:9" pos:end="31:44"><expr pos:start="31:9" pos:end="31:43"><name pos:start="31:9" pos:end="31:13"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:13">ts</name></name> <operator pos:start="31:15" pos:end="31:15">=</operator> <call pos:start="31:17" pos:end="31:43"><name pos:start="31:17" pos:end="31:36">ff_mpegts_parse_open</name><argument_list pos:start="31:37" pos:end="31:43">(<argument pos:start="31:38" pos:end="31:42"><expr pos:start="31:38" pos:end="31:42"><name pos:start="31:38" pos:end="31:42"><name pos:start="31:38" pos:end="31:38">s</name><operator pos:start="31:39" pos:end="31:40">-&gt;</operator><name pos:start="31:41" pos:end="31:42">ic</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="39:9"><if pos:start="33:9" pos:end="39:9">if <condition pos:start="33:12" pos:end="33:26">(<expr pos:start="33:13" pos:end="33:25"><name pos:start="33:13" pos:end="33:17"><name pos:start="33:13" pos:end="33:13">s</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:17">ts</name></name> <operator pos:start="33:19" pos:end="33:20">==</operator> <name pos:start="33:22" pos:end="33:25">NULL</name></expr>)</condition> <block pos:start="33:28" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:24">

            <expr_stmt pos:start="35:13" pos:end="35:23"><expr pos:start="35:13" pos:end="35:22"><call pos:start="35:13" pos:end="35:22"><name pos:start="35:13" pos:end="35:19">av_free</name><argument_list pos:start="35:20" pos:end="35:22">(<argument pos:start="35:21" pos:end="35:21"><expr pos:start="35:21" pos:end="35:21"><name pos:start="35:21" pos:end="35:21">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="37:13" pos:end="37:24">return <expr pos:start="37:20" pos:end="37:23"><name pos:start="37:20" pos:end="37:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="41:7" pos:end="77:5">else <block pos:start="41:12" pos:end="77:5">{<block_content pos:start="43:9" pos:end="75:9">

        <expr_stmt pos:start="43:9" pos:end="43:42"><expr pos:start="43:9" pos:end="43:41"><call pos:start="43:9" pos:end="43:41"><name pos:start="43:9" pos:end="43:23">av_set_pts_info</name><argument_list pos:start="43:24" pos:end="43:41">(<argument pos:start="43:25" pos:end="43:26"><expr pos:start="43:25" pos:end="43:26"><name pos:start="43:25" pos:end="43:26">st</name></expr></argument>, <argument pos:start="43:29" pos:end="43:30"><expr pos:start="43:29" pos:end="43:30"><literal type="number" pos:start="43:29" pos:end="43:30">32</literal></expr></argument>, <argument pos:start="43:33" pos:end="43:33"><expr pos:start="43:33" pos:end="43:33"><literal type="number" pos:start="43:33" pos:end="43:33">1</literal></expr></argument>, <argument pos:start="43:36" pos:end="43:40"><expr pos:start="43:36" pos:end="43:40"><literal type="number" pos:start="43:36" pos:end="43:40">90000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="45:9" pos:end="75:9">switch<condition pos:start="45:15" pos:end="45:35">(<expr pos:start="45:16" pos:end="45:34"><name pos:start="45:16" pos:end="45:34"><name pos:start="45:16" pos:end="45:17">st</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:24">codec</name><operator pos:start="45:25" pos:end="45:26">-&gt;</operator><name pos:start="45:27" pos:end="45:34">codec_id</name></name></expr>)</condition> <block pos:start="45:37" pos:end="75:9">{<block_content pos:start="47:9" pos:end="73:18">

        <case pos:start="47:9" pos:end="47:33">case <expr pos:start="47:14" pos:end="47:32"><name pos:start="47:14" pos:end="47:32">CODEC_ID_MPEG1VIDEO</name></expr>:</case>

        <case pos:start="49:9" pos:end="49:33">case <expr pos:start="49:14" pos:end="49:32"><name pos:start="49:14" pos:end="49:32">CODEC_ID_MPEG2VIDEO</name></expr>:</case>

        <case pos:start="51:9" pos:end="51:26">case <expr pos:start="51:14" pos:end="51:25"><name pos:start="51:14" pos:end="51:25">CODEC_ID_MP2</name></expr>:</case>

        <case pos:start="53:9" pos:end="53:26">case <expr pos:start="53:14" pos:end="53:25"><name pos:start="53:14" pos:end="53:25">CODEC_ID_MP3</name></expr>:</case>

        <case pos:start="55:9" pos:end="55:28">case <expr pos:start="55:14" pos:end="55:27"><name pos:start="55:14" pos:end="55:27">CODEC_ID_MPEG4</name></expr>:</case>

        <case pos:start="57:9" pos:end="57:27">case <expr pos:start="57:14" pos:end="57:26"><name pos:start="57:14" pos:end="57:26">CODEC_ID_H263</name></expr>:</case>

        <case pos:start="59:9" pos:end="59:27">case <expr pos:start="59:14" pos:end="59:26"><name pos:start="59:14" pos:end="59:26">CODEC_ID_H264</name></expr>:</case>

            <expr_stmt pos:start="61:13" pos:end="61:51"><expr pos:start="61:13" pos:end="61:50"><name pos:start="61:13" pos:end="61:28"><name pos:start="61:13" pos:end="61:14">st</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:28">need_parsing</name></name> <operator pos:start="61:30" pos:end="61:30">=</operator> <name pos:start="61:32" pos:end="61:50">AVSTREAM_PARSE_FULL</name></expr>;</expr_stmt>

            <break pos:start="63:13" pos:end="63:18">break;</break>

        <default pos:start="65:9" pos:end="65:16">default:</default>

            <if_stmt pos:start="67:13" pos:end="71:13"><if pos:start="67:13" pos:end="71:13">if <condition pos:start="67:16" pos:end="67:58">(<expr pos:start="67:17" pos:end="67:57"><name pos:start="67:17" pos:end="67:37"><name pos:start="67:17" pos:end="67:18">st</name><operator pos:start="67:19" pos:end="67:20">-&gt;</operator><name pos:start="67:21" pos:end="67:25">codec</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:37">codec_type</name></name> <operator pos:start="67:39" pos:end="67:40">==</operator> <name pos:start="67:42" pos:end="67:57">CODEC_TYPE_AUDIO</name></expr>)</condition> <block pos:start="67:60" pos:end="71:13">{<block_content pos:start="69:17" pos:end="69:67">

                <expr_stmt pos:start="69:17" pos:end="69:67"><expr pos:start="69:17" pos:end="69:66"><call pos:start="69:17" pos:end="69:66"><name pos:start="69:17" pos:end="69:31">av_set_pts_info</name><argument_list pos:start="69:32" pos:end="69:66">(<argument pos:start="69:33" pos:end="69:34"><expr pos:start="69:33" pos:end="69:34"><name pos:start="69:33" pos:end="69:34">st</name></expr></argument>, <argument pos:start="69:37" pos:end="69:38"><expr pos:start="69:37" pos:end="69:38"><literal type="number" pos:start="69:37" pos:end="69:38">32</literal></expr></argument>, <argument pos:start="69:41" pos:end="69:41"><expr pos:start="69:41" pos:end="69:41"><literal type="number" pos:start="69:41" pos:end="69:41">1</literal></expr></argument>, <argument pos:start="69:44" pos:end="69:65"><expr pos:start="69:44" pos:end="69:65"><name pos:start="69:44" pos:end="69:65"><name pos:start="69:44" pos:end="69:45">st</name><operator pos:start="69:46" pos:end="69:47">-&gt;</operator><name pos:start="69:48" pos:end="69:52">codec</name><operator pos:start="69:53" pos:end="69:54">-&gt;</operator><name pos:start="69:55" pos:end="69:65">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="73:13" pos:end="73:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>

    <comment type="line" pos:start="79:5" pos:end="79:51">// needed to send back RTCP RR in RTSP sessions</comment>

    <expr_stmt pos:start="81:5" pos:end="81:22"><expr pos:start="81:5" pos:end="81:21"><name pos:start="81:5" pos:end="81:14"><name pos:start="81:5" pos:end="81:5">s</name><operator pos:start="81:6" pos:end="81:7">-&gt;</operator><name pos:start="81:8" pos:end="81:14">rtp_ctx</name></name> <operator pos:start="81:16" pos:end="81:16">=</operator> <name pos:start="81:18" pos:end="81:21">rtpc</name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:50"><expr pos:start="83:5" pos:end="83:49"><call pos:start="83:5" pos:end="83:49"><name pos:start="83:5" pos:end="83:15">gethostname</name><argument_list pos:start="83:16" pos:end="83:49">(<argument pos:start="83:17" pos:end="83:27"><expr pos:start="83:17" pos:end="83:27"><name pos:start="83:17" pos:end="83:27"><name pos:start="83:17" pos:end="83:17">s</name><operator pos:start="83:18" pos:end="83:19">-&gt;</operator><name pos:start="83:20" pos:end="83:27">hostname</name></name></expr></argument>, <argument pos:start="83:30" pos:end="83:48"><expr pos:start="83:30" pos:end="83:48"><sizeof pos:start="83:30" pos:end="83:48">sizeof<argument_list pos:start="83:36" pos:end="83:48">(<argument pos:start="83:37" pos:end="83:47"><expr pos:start="83:37" pos:end="83:47"><name pos:start="83:37" pos:end="83:47"><name pos:start="83:37" pos:end="83:37">s</name><operator pos:start="83:38" pos:end="83:39">-&gt;</operator><name pos:start="83:40" pos:end="83:47">hostname</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="85:5" pos:end="85:13">return <expr pos:start="85:12" pos:end="85:12"><name pos:start="85:12" pos:end="85:12">s</name></expr>;</return>

</block_content>}</block></function>
</unit>
