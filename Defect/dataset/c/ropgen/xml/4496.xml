<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4496.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">bmdma_writeb</name><parameter_list pos:start="1:25" pos:end="1:67">(<parameter pos:start="1:26" pos:end="1:37"><decl pos:start="1:26" pos:end="1:37"><type pos:start="1:26" pos:end="1:37"><name pos:start="1:26" pos:end="1:29">void</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:37">opaque</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:52"><decl pos:start="1:40" pos:end="1:52"><type pos:start="1:40" pos:end="1:52"><name pos:start="1:40" pos:end="1:47">uint32_t</name></type> <name pos:start="1:49" pos:end="1:52">addr</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:66"><decl pos:start="1:55" pos:end="1:66"><type pos:start="1:55" pos:end="1:66"><name pos:start="1:55" pos:end="1:62">uint32_t</name></type> <name pos:start="1:64" pos:end="1:66">val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:5">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">BMDMAState</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:18">bm</name> <init pos:start="5:20" pos:end="5:27">= <expr pos:start="5:22" pos:end="5:27"><name pos:start="5:22" pos:end="5:27">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="10:0"><decl pos:start="7:5" pos:end="7:42"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">PCIIDEState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:24">pci_dev</name> <init pos:start="7:26" pos:end="7:42">= <expr pos:start="7:28" pos:end="7:42"><call pos:start="7:28" pos:end="7:42"><name pos:start="7:28" pos:end="7:38">pci_from_bm</name><argument_list pos:start="7:39" pos:end="7:42">(<argument pos:start="7:40" pos:end="7:41"><expr pos:start="7:40" pos:end="7:41"><name pos:start="7:40" pos:end="7:41">bm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<cpp:ifdef pos:start="9:1" pos:end="9:16">#<cpp:directive pos:start="9:2" pos:end="9:6">ifdef</cpp:directive> <name pos:start="9:8" pos:end="9:16">DEBUG_IDE</name></cpp:ifdef>

    <expr_stmt pos:start="11:5" pos:end="14:0"><expr pos:start="11:5" pos:end="11:56"><call pos:start="11:5" pos:end="11:56"><name pos:start="11:5" pos:end="11:10">printf</name><argument_list pos:start="11:11" pos:end="11:56">(<argument pos:start="11:12" pos:end="11:44"><expr pos:start="11:12" pos:end="11:44"><literal type="string" pos:start="11:12" pos:end="11:44">"bmdma: writeb 0x%02x : 0x%02x\n"</literal></expr></argument>, <argument pos:start="11:47" pos:end="11:50"><expr pos:start="11:47" pos:end="11:50"><name pos:start="11:47" pos:end="11:50">addr</name></expr></argument>, <argument pos:start="11:53" pos:end="11:55"><expr pos:start="11:53" pos:end="11:55"><name pos:start="11:53" pos:end="11:55">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="13:1" pos:end="13:6">#<cpp:directive pos:start="13:2" pos:end="13:6">endif</cpp:directive></cpp:endif>

    <switch pos:start="15:5" pos:end="45:5">switch<condition pos:start="15:11" pos:end="15:20">(<expr pos:start="15:12" pos:end="15:19"><name pos:start="15:12" pos:end="15:15">addr</name> <operator pos:start="15:17" pos:end="15:17">&amp;</operator> <literal type="number" pos:start="15:19" pos:end="15:19">3</literal></expr>)</condition> <block pos:start="15:22" pos:end="45:5">{<block_content pos:start="17:5" pos:end="43:14">

    <case pos:start="17:5" pos:end="17:11">case <expr pos:start="17:10" pos:end="17:10"><literal type="number" pos:start="17:10" pos:end="17:10">1</literal></expr>:</case>

        <expr_stmt pos:start="19:9" pos:end="21:66"><expr pos:start="19:9" pos:end="21:65"><name pos:start="19:9" pos:end="19:36"><name pos:start="19:9" pos:end="19:15">pci_dev</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:20">dev</name><operator pos:start="19:21" pos:end="19:21">.</operator><name pos:start="19:22" pos:end="19:27">config</name><index pos:start="19:28" pos:end="19:36">[<expr pos:start="19:29" pos:end="19:35"><name pos:start="19:29" pos:end="19:35">MRDMODE</name></expr>]</index></name> <operator pos:start="19:38" pos:end="19:38">=</operator>

            <operator pos:start="21:13" pos:end="21:13">(</operator><name pos:start="21:14" pos:end="21:41"><name pos:start="21:14" pos:end="21:20">pci_dev</name><operator pos:start="21:21" pos:end="21:22">-&gt;</operator><name pos:start="21:23" pos:end="21:25">dev</name><operator pos:start="21:26" pos:end="21:26">.</operator><name pos:start="21:27" pos:end="21:32">config</name><index pos:start="21:33" pos:end="21:41">[<expr pos:start="21:34" pos:end="21:40"><name pos:start="21:34" pos:end="21:40">MRDMODE</name></expr>]</index></name> <operator pos:start="21:43" pos:end="21:43">&amp;</operator> <operator pos:start="21:45" pos:end="21:45">~</operator><literal type="number" pos:start="21:46" pos:end="21:49">0x30</literal><operator pos:start="21:50" pos:end="21:50">)</operator> <operator pos:start="21:52" pos:end="21:52">|</operator> <operator pos:start="21:54" pos:end="21:54">(</operator><name pos:start="21:55" pos:end="21:57">val</name> <operator pos:start="21:59" pos:end="21:59">&amp;</operator> <literal type="number" pos:start="21:61" pos:end="21:64">0x30</literal><operator pos:start="21:65" pos:end="21:65">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:35"><expr pos:start="23:9" pos:end="23:34"><call pos:start="23:9" pos:end="23:34"><name pos:start="23:9" pos:end="23:25">cmd646_update_irq</name><argument_list pos:start="23:26" pos:end="23:34">(<argument pos:start="23:27" pos:end="23:33"><expr pos:start="23:27" pos:end="23:33"><name pos:start="23:27" pos:end="23:33">pci_dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="25:9" pos:end="25:14">break;</break>

    <case pos:start="27:5" pos:end="27:11">case <expr pos:start="27:10" pos:end="27:10"><literal type="number" pos:start="27:10" pos:end="27:10">2</literal></expr>:</case>

        <expr_stmt pos:start="29:9" pos:end="29:82"><expr pos:start="29:9" pos:end="29:81"><name pos:start="29:9" pos:end="29:18"><name pos:start="29:9" pos:end="29:10">bm</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:18">status</name></name> <operator pos:start="29:20" pos:end="29:20">=</operator> <operator pos:start="29:22" pos:end="29:22">(</operator><name pos:start="29:23" pos:end="29:25">val</name> <operator pos:start="29:27" pos:end="29:27">&amp;</operator> <literal type="number" pos:start="29:29" pos:end="29:32">0x60</literal><operator pos:start="29:33" pos:end="29:33">)</operator> <operator pos:start="29:35" pos:end="29:35">|</operator> <operator pos:start="29:37" pos:end="29:37">(</operator><name pos:start="29:38" pos:end="29:47"><name pos:start="29:38" pos:end="29:39">bm</name><operator pos:start="29:40" pos:end="29:41">-&gt;</operator><name pos:start="29:42" pos:end="29:47">status</name></name> <operator pos:start="29:49" pos:end="29:49">&amp;</operator> <literal type="number" pos:start="29:51" pos:end="29:51">1</literal><operator pos:start="29:52" pos:end="29:52">)</operator> <operator pos:start="29:54" pos:end="29:54">|</operator> <operator pos:start="29:56" pos:end="29:56">(</operator><name pos:start="29:57" pos:end="29:66"><name pos:start="29:57" pos:end="29:58">bm</name><operator pos:start="29:59" pos:end="29:60">-&gt;</operator><name pos:start="29:61" pos:end="29:66">status</name></name> <operator pos:start="29:68" pos:end="29:68">&amp;</operator> <operator pos:start="29:70" pos:end="29:70">~</operator><name pos:start="29:71" pos:end="29:73">val</name> <operator pos:start="29:75" pos:end="29:75">&amp;</operator> <literal type="number" pos:start="29:77" pos:end="29:80">0x06</literal><operator pos:start="29:81" pos:end="29:81">)</operator></expr>;</expr_stmt>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    <case pos:start="33:5" pos:end="33:11">case <expr pos:start="33:10" pos:end="33:10"><literal type="number" pos:start="33:10" pos:end="33:10">3</literal></expr>:</case>

        <if_stmt pos:start="35:9" pos:end="41:49"><if pos:start="35:9" pos:end="37:49">if <condition pos:start="35:12" pos:end="35:26">(<expr pos:start="35:13" pos:end="35:25"><name pos:start="35:13" pos:end="35:20"><name pos:start="35:13" pos:end="35:14">bm</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:20">unit</name></name> <operator pos:start="35:22" pos:end="35:23">==</operator> <literal type="number" pos:start="35:25" pos:end="35:25">0</literal></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:49"><block_content pos:start="37:13" pos:end="37:49">

            <expr_stmt pos:start="37:13" pos:end="37:49"><expr pos:start="37:13" pos:end="37:48"><name pos:start="37:13" pos:end="37:42"><name pos:start="37:13" pos:end="37:19">pci_dev</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:24">dev</name><operator pos:start="37:25" pos:end="37:25">.</operator><name pos:start="37:26" pos:end="37:31">config</name><index pos:start="37:32" pos:end="37:42">[<expr pos:start="37:33" pos:end="37:41"><name pos:start="37:33" pos:end="37:41">UDIDETCR0</name></expr>]</index></name> <operator pos:start="37:44" pos:end="37:44">=</operator> <name pos:start="37:46" pos:end="37:48">val</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="39:9" pos:end="41:49">else<block type="pseudo" pos:start="41:13" pos:end="41:49"><block_content pos:start="41:13" pos:end="41:49">

            <expr_stmt pos:start="41:13" pos:end="41:49"><expr pos:start="41:13" pos:end="41:48"><name pos:start="41:13" pos:end="41:42"><name pos:start="41:13" pos:end="41:19">pci_dev</name><operator pos:start="41:20" pos:end="41:21">-&gt;</operator><name pos:start="41:22" pos:end="41:24">dev</name><operator pos:start="41:25" pos:end="41:25">.</operator><name pos:start="41:26" pos:end="41:31">config</name><index pos:start="41:32" pos:end="41:42">[<expr pos:start="41:33" pos:end="41:41"><name pos:start="41:33" pos:end="41:41">UDIDETCR1</name></expr>]</index></name> <operator pos:start="41:44" pos:end="41:44">=</operator> <name pos:start="41:46" pos:end="41:48">val</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
