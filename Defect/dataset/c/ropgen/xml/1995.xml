<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1995.c" pos:tabs="8"><function pos:start="1:1" pos:end="76:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">try_decode_frame</name><parameter_list pos:start="1:28" pos:end="1:58">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:36">AVStream</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:40">st</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:57"><decl pos:start="1:43" pos:end="1:57"><type pos:start="1:43" pos:end="1:57"><name pos:start="1:43" pos:end="1:50">AVPacket</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:57">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="76:1">{<block_content pos:start="5:5" pos:end="74:15">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">int16_t</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:20">samples</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">AVCodec</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:18">codec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:19">got_picture</name></decl>, <decl pos:start="9:22" pos:end="9:30"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:22" pos:end="9:30">data_size</name></decl>, <decl pos:start="9:33" pos:end="9:37"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:33" pos:end="9:35">ret</name><init pos:start="9:36" pos:end="9:37">=<expr pos:start="9:37" pos:end="9:37"><literal type="number" pos:start="9:37" pos:end="9:37">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">AVFrame</name></type> <name pos:start="11:13" pos:end="11:19">picture</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="29:5"><if pos:start="15:5" pos:end="29:5">if<condition pos:start="15:7" pos:end="15:25">(<expr pos:start="15:8" pos:end="15:24"><operator pos:start="15:8" pos:end="15:8">!</operator><name pos:start="15:9" pos:end="15:24"><name pos:start="15:9" pos:end="15:10">st</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:17">codec</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:24">codec</name></name></expr>)</condition><block pos:start="15:26" pos:end="29:5">{<block_content pos:start="17:9" pos:end="27:23">

        <expr_stmt pos:start="17:9" pos:end="17:58"><expr pos:start="17:9" pos:end="17:57"><name pos:start="17:9" pos:end="17:13">codec</name> <operator pos:start="17:15" pos:end="17:15">=</operator> <call pos:start="17:17" pos:end="17:57"><name pos:start="17:17" pos:end="17:36">avcodec_find_decoder</name><argument_list pos:start="17:37" pos:end="17:57">(<argument pos:start="17:38" pos:end="17:56"><expr pos:start="17:38" pos:end="17:56"><name pos:start="17:38" pos:end="17:56"><name pos:start="17:38" pos:end="17:39">st</name><operator pos:start="17:40" pos:end="17:41">-&gt;</operator><name pos:start="17:42" pos:end="17:46">codec</name><operator pos:start="17:47" pos:end="17:48">-&gt;</operator><name pos:start="17:49" pos:end="17:56">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="21:22"><if pos:start="19:9" pos:end="21:22">if <condition pos:start="19:12" pos:end="19:19">(<expr pos:start="19:13" pos:end="19:18"><operator pos:start="19:13" pos:end="19:13">!</operator><name pos:start="19:14" pos:end="19:18">codec</name></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:22"><block_content pos:start="21:13" pos:end="21:22">

            <return pos:start="21:13" pos:end="21:22">return <expr pos:start="21:20" pos:end="21:21"><operator pos:start="21:20" pos:end="21:20">-</operator><literal type="number" pos:start="21:21" pos:end="21:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:45"><expr pos:start="23:9" pos:end="23:44"><name pos:start="23:9" pos:end="23:11">ret</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <call pos:start="23:15" pos:end="23:44"><name pos:start="23:15" pos:end="23:26">avcodec_open</name><argument_list pos:start="23:27" pos:end="23:44">(<argument pos:start="23:28" pos:end="23:36"><expr pos:start="23:28" pos:end="23:36"><name pos:start="23:28" pos:end="23:36"><name pos:start="23:28" pos:end="23:29">st</name><operator pos:start="23:30" pos:end="23:31">-&gt;</operator><name pos:start="23:32" pos:end="23:36">codec</name></name></expr></argument>, <argument pos:start="23:39" pos:end="23:43"><expr pos:start="23:39" pos:end="23:43"><name pos:start="23:39" pos:end="23:43">codec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="27:23"><if pos:start="25:9" pos:end="27:23">if <condition pos:start="25:12" pos:end="25:20">(<expr pos:start="25:13" pos:end="25:19"><name pos:start="25:13" pos:end="25:15">ret</name> <operator pos:start="25:17" pos:end="25:17">&lt;</operator> <literal type="number" pos:start="25:19" pos:end="25:19">0</literal></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:23"><block_content pos:start="27:13" pos:end="27:23">

            <return pos:start="27:13" pos:end="27:23">return <expr pos:start="27:20" pos:end="27:22"><name pos:start="27:20" pos:end="27:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="70:5"><if pos:start="33:5" pos:end="70:5">if<condition pos:start="33:7" pos:end="33:40">(<expr pos:start="33:8" pos:end="33:39"><operator pos:start="33:8" pos:end="33:8">!</operator><call pos:start="33:9" pos:end="33:39"><name pos:start="33:9" pos:end="33:28">has_codec_parameters</name><argument_list pos:start="33:29" pos:end="33:39">(<argument pos:start="33:30" pos:end="33:38"><expr pos:start="33:30" pos:end="33:38"><name pos:start="33:30" pos:end="33:38"><name pos:start="33:30" pos:end="33:31">st</name><operator pos:start="33:32" pos:end="33:33">-&gt;</operator><name pos:start="33:34" pos:end="33:38">codec</name></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="33:41" pos:end="70:5">{<block_content pos:start="35:9" pos:end="68:9">

        <switch pos:start="35:9" pos:end="68:9">switch<condition pos:start="35:15" pos:end="35:37">(<expr pos:start="35:16" pos:end="35:36"><name pos:start="35:16" pos:end="35:36"><name pos:start="35:16" pos:end="35:17">st</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:24">codec</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:36">codec_type</name></name></expr>)</condition> <block pos:start="35:39" pos:end="68:9">{<block_content pos:start="37:9" pos:end="66:18">

        <case pos:start="37:9" pos:end="37:30">case <expr pos:start="37:14" pos:end="37:29"><name pos:start="37:14" pos:end="37:29">CODEC_TYPE_VIDEO</name></expr>:</case>


            <expr_stmt pos:start="40:13" pos:end="42:61"><expr pos:start="40:13" pos:end="42:60"><name pos:start="40:13" pos:end="40:15">ret</name> <operator pos:start="40:17" pos:end="40:17">=</operator> <call pos:start="40:19" pos:end="42:60"><name pos:start="40:19" pos:end="40:39">avcodec_decode_video2</name><argument_list pos:start="40:40" pos:end="42:60">(<argument pos:start="40:41" pos:end="40:49"><expr pos:start="40:41" pos:end="40:49"><name pos:start="40:41" pos:end="40:49"><name pos:start="40:41" pos:end="40:42">st</name><operator pos:start="40:43" pos:end="40:44">-&gt;</operator><name pos:start="40:45" pos:end="40:49">codec</name></name></expr></argument>, <argument pos:start="40:52" pos:end="40:59"><expr pos:start="40:52" pos:end="40:59"><operator pos:start="40:52" pos:end="40:52">&amp;</operator><name pos:start="40:53" pos:end="40:59">picture</name></expr></argument>,

                                        <argument pos:start="42:41" pos:end="42:52"><expr pos:start="42:41" pos:end="42:52"><operator pos:start="42:41" pos:end="42:41">&amp;</operator><name pos:start="42:42" pos:end="42:52">got_picture</name></expr></argument>, <argument pos:start="42:55" pos:end="42:59"><expr pos:start="42:55" pos:end="42:59"><name pos:start="42:55" pos:end="42:59">avpkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="44:13" pos:end="44:18">break;</break>

        <case pos:start="46:9" pos:end="46:30">case <expr pos:start="46:14" pos:end="46:29"><name pos:start="46:14" pos:end="46:29">CODEC_TYPE_AUDIO</name></expr>:</case>

            <expr_stmt pos:start="48:13" pos:end="48:73"><expr pos:start="48:13" pos:end="48:72"><name pos:start="48:13" pos:end="48:21">data_size</name> <operator pos:start="48:23" pos:end="48:23">=</operator> <call pos:start="48:25" pos:end="48:72"><name pos:start="48:25" pos:end="48:29">FFMAX</name><argument_list pos:start="48:30" pos:end="48:72">(<argument pos:start="48:31" pos:end="48:41"><expr pos:start="48:31" pos:end="48:41"><name pos:start="48:31" pos:end="48:41"><name pos:start="48:31" pos:end="48:35">avpkt</name><operator pos:start="48:36" pos:end="48:37">-&gt;</operator><name pos:start="48:38" pos:end="48:41">size</name></name></expr></argument>, <argument pos:start="48:44" pos:end="48:71"><expr pos:start="48:44" pos:end="48:71"><name pos:start="48:44" pos:end="48:71">AVCODEC_MAX_AUDIO_FRAME_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="50:13" pos:end="50:43"><expr pos:start="50:13" pos:end="50:42"><name pos:start="50:13" pos:end="50:19">samples</name> <operator pos:start="50:21" pos:end="50:21">=</operator> <call pos:start="50:23" pos:end="50:42"><name pos:start="50:23" pos:end="50:31">av_malloc</name><argument_list pos:start="50:32" pos:end="50:42">(<argument pos:start="50:33" pos:end="50:41"><expr pos:start="50:33" pos:end="50:41"><name pos:start="50:33" pos:end="50:41">data_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="52:13" pos:end="54:26"><if pos:start="52:13" pos:end="54:26">if <condition pos:start="52:16" pos:end="52:25">(<expr pos:start="52:17" pos:end="52:24"><operator pos:start="52:17" pos:end="52:17">!</operator><name pos:start="52:18" pos:end="52:24">samples</name></expr>)</condition><block type="pseudo" pos:start="54:17" pos:end="54:26"><block_content pos:start="54:17" pos:end="54:26">

                <goto pos:start="54:17" pos:end="54:26">goto <name pos:start="54:22" pos:end="54:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="56:13" pos:end="58:59"><expr pos:start="56:13" pos:end="58:58"><name pos:start="56:13" pos:end="56:15">ret</name> <operator pos:start="56:17" pos:end="56:17">=</operator> <call pos:start="56:19" pos:end="58:58"><name pos:start="56:19" pos:end="56:39">avcodec_decode_audio3</name><argument_list pos:start="56:40" pos:end="58:58">(<argument pos:start="56:41" pos:end="56:49"><expr pos:start="56:41" pos:end="56:49"><name pos:start="56:41" pos:end="56:49"><name pos:start="56:41" pos:end="56:42">st</name><operator pos:start="56:43" pos:end="56:44">-&gt;</operator><name pos:start="56:45" pos:end="56:49">codec</name></name></expr></argument>, <argument pos:start="56:52" pos:end="56:58"><expr pos:start="56:52" pos:end="56:58"><name pos:start="56:52" pos:end="56:58">samples</name></expr></argument>,

                                        <argument pos:start="58:41" pos:end="58:50"><expr pos:start="58:41" pos:end="58:50"><operator pos:start="58:41" pos:end="58:41">&amp;</operator><name pos:start="58:42" pos:end="58:50">data_size</name></expr></argument>, <argument pos:start="58:53" pos:end="58:57"><expr pos:start="58:53" pos:end="58:57"><name pos:start="58:53" pos:end="58:57">avpkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="60:13" pos:end="60:29"><expr pos:start="60:13" pos:end="60:28"><call pos:start="60:13" pos:end="60:28"><name pos:start="60:13" pos:end="60:19">av_free</name><argument_list pos:start="60:20" pos:end="60:28">(<argument pos:start="60:21" pos:end="60:27"><expr pos:start="60:21" pos:end="60:27"><name pos:start="60:21" pos:end="60:27">samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="62:13" pos:end="62:18">break;</break>

        <default pos:start="64:9" pos:end="64:16">default:</default>

            <break pos:start="66:13" pos:end="66:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></if></if_stmt>

 <label pos:start="72:2" pos:end="72:6"><name pos:start="72:2" pos:end="72:5">fail</name>:</label>

    <return pos:start="74:5" pos:end="74:15">return <expr pos:start="74:12" pos:end="74:14"><name pos:start="74:12" pos:end="74:14">ret</name></expr>;</return>

</block_content>}</block></function></unit>
