<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8378.c" pos:tabs="8"><function pos:start="1:1" pos:end="223:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">vc1_decode_p_block</name><parameter_list pos:start="1:30" pos:end="3:73">(<parameter pos:start="1:31" pos:end="1:43"><decl pos:start="1:31" pos:end="1:43"><type pos:start="1:31" pos:end="1:43"><name pos:start="1:31" pos:end="1:40">VC1Context</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">v</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:62"><decl pos:start="1:46" pos:end="1:62"><type pos:start="1:46" pos:end="1:58"><name pos:start="1:46" pos:end="1:52">DCTELEM</name></type> <name pos:start="1:54" pos:end="1:62"><name pos:start="1:54" pos:end="1:58">block</name><index pos:start="1:59" pos:end="1:62">[<expr pos:start="1:60" pos:end="1:61"><literal type="number" pos:start="1:60" pos:end="1:61">64</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:69"><decl pos:start="1:65" pos:end="1:69"><type pos:start="1:65" pos:end="1:69"><name pos:start="1:65" pos:end="1:67">int</name></type> <name pos:start="1:69" pos:end="1:69">n</name></decl></parameter>, <parameter pos:start="1:72" pos:end="1:81"><decl pos:start="1:72" pos:end="1:81"><type pos:start="1:72" pos:end="1:81"><name pos:start="1:72" pos:end="1:74">int</name></type> <name pos:start="1:76" pos:end="1:81">mquant</name></decl></parameter>, <parameter pos:start="1:84" pos:end="1:91"><decl pos:start="1:84" pos:end="1:91"><type pos:start="1:84" pos:end="1:91"><name pos:start="1:84" pos:end="1:86">int</name></type> <name pos:start="1:88" pos:end="1:91">ttmb</name></decl></parameter>, <parameter pos:start="1:94" pos:end="1:108"><decl pos:start="1:94" pos:end="1:108"><type pos:start="1:94" pos:end="1:108"><name pos:start="1:94" pos:end="1:96">int</name></type> <name pos:start="1:98" pos:end="1:108">first_block</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:42"><decl pos:start="3:31" pos:end="3:42"><type pos:start="3:31" pos:end="3:42"><name pos:start="3:31" pos:end="3:37">uint8_t</name> <modifier pos:start="3:39" pos:end="3:39">*</modifier></type><name pos:start="3:40" pos:end="3:42">dst</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:56"><decl pos:start="3:45" pos:end="3:56"><type pos:start="3:45" pos:end="3:56"><name pos:start="3:45" pos:end="3:47">int</name></type> <name pos:start="3:49" pos:end="3:56">linesize</name></decl></parameter>, <parameter pos:start="3:59" pos:end="3:72"><decl pos:start="3:59" pos:end="3:72"><type pos:start="3:59" pos:end="3:72"><name pos:start="3:59" pos:end="3:61">int</name></type> <name pos:start="3:63" pos:end="3:72">skip_block</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="223:1">{<block_content pos:start="7:5" pos:end="221:13">

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">MpegEncContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:29">= <expr pos:start="7:25" pos:end="7:29"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:29"><name pos:start="7:26" pos:end="7:26">v</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:29">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">GetBitContext</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:21">gb</name> <init pos:start="9:23" pos:end="9:30">= <expr pos:start="9:25" pos:end="9:30"><operator pos:start="9:25" pos:end="9:25">&amp;</operator><name pos:start="9:26" pos:end="9:30"><name pos:start="9:26" pos:end="9:26">s</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:30">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:12"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:17">subblkpat</name> <init pos:start="13:19" pos:end="13:21">= <expr pos:start="13:21" pos:end="13:21"><literal type="number" pos:start="13:21" pos:end="13:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:43"><decl pos:start="15:5" pos:end="15:13"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:13">scale</name></decl>, <decl pos:start="15:16" pos:end="15:18"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:16" pos:end="15:18">off</name></decl>, <decl pos:start="15:21" pos:end="15:23"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:21" pos:end="15:23">idx</name></decl>, <decl pos:start="15:26" pos:end="15:29"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:26" pos:end="15:29">last</name></decl>, <decl pos:start="15:32" pos:end="15:35"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:32" pos:end="15:35">skip</name></decl>, <decl pos:start="15:38" pos:end="15:42"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:38" pos:end="15:42">value</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:25"><decl pos:start="17:5" pos:end="17:24"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:13">ttblk</name> <init pos:start="17:15" pos:end="17:24">= <expr pos:start="17:17" pos:end="17:24"><name pos:start="17:17" pos:end="17:20">ttmb</name> <operator pos:start="17:22" pos:end="17:22">&amp;</operator> <literal type="number" pos:start="17:24" pos:end="17:24">7</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if<condition pos:start="21:7" pos:end="21:18">(<expr pos:start="21:8" pos:end="21:17"><name pos:start="21:8" pos:end="21:11">ttmb</name> <operator pos:start="21:13" pos:end="21:14">==</operator> <operator pos:start="21:16" pos:end="21:16">-</operator><literal type="number" pos:start="21:17" pos:end="21:17">1</literal></expr>)</condition> <block pos:start="21:20" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:122">

        <expr_stmt pos:start="23:9" pos:end="23:122"><expr pos:start="23:9" pos:end="23:121"><name pos:start="23:9" pos:end="23:13">ttblk</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <name pos:start="23:17" pos:end="23:121"><name pos:start="23:17" pos:end="23:34">ff_vc1_ttblk_to_tt</name><index pos:start="23:35" pos:end="23:47">[<expr pos:start="23:36" pos:end="23:46"><name pos:start="23:36" pos:end="23:46"><name pos:start="23:36" pos:end="23:36">v</name><operator pos:start="23:37" pos:end="23:38">-&gt;</operator><name pos:start="23:39" pos:end="23:46">tt_index</name></name></expr>]</index><index pos:start="23:48" pos:end="23:121">[<expr pos:start="23:49" pos:end="23:120"><call pos:start="23:49" pos:end="23:120"><name pos:start="23:49" pos:end="23:56">get_vlc2</name><argument_list pos:start="23:57" pos:end="23:120">(<argument pos:start="23:58" pos:end="23:59"><expr pos:start="23:58" pos:end="23:59"><name pos:start="23:58" pos:end="23:59">gb</name></expr></argument>, <argument pos:start="23:62" pos:end="23:96"><expr pos:start="23:62" pos:end="23:96"><name pos:start="23:62" pos:end="23:90"><name pos:start="23:62" pos:end="23:77">ff_vc1_ttblk_vlc</name><index pos:start="23:78" pos:end="23:90">[<expr pos:start="23:79" pos:end="23:89"><name pos:start="23:79" pos:end="23:89"><name pos:start="23:79" pos:end="23:79">v</name><operator pos:start="23:80" pos:end="23:81">-&gt;</operator><name pos:start="23:82" pos:end="23:89">tt_index</name></name></expr>]</index></name><operator pos:start="23:91" pos:end="23:91">.</operator><name pos:start="23:92" pos:end="23:96">table</name></expr></argument>, <argument pos:start="23:99" pos:end="23:116"><expr pos:start="23:99" pos:end="23:116"><name pos:start="23:99" pos:end="23:116">VC1_TTBLK_VLC_BITS</name></expr></argument>, <argument pos:start="23:119" pos:end="23:119"><expr pos:start="23:119" pos:end="23:119"><literal type="number" pos:start="23:119" pos:end="23:119">1</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if<condition pos:start="27:7" pos:end="27:23">(<expr pos:start="27:8" pos:end="27:22"><name pos:start="27:8" pos:end="27:12">ttblk</name> <operator pos:start="27:14" pos:end="27:15">==</operator> <name pos:start="27:17" pos:end="27:22">TT_4X4</name></expr>)</condition> <block pos:start="27:25" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:108">

        <expr_stmt pos:start="29:9" pos:end="29:108"><expr pos:start="29:9" pos:end="29:107"><name pos:start="29:9" pos:end="29:17">subblkpat</name> <operator pos:start="29:19" pos:end="29:19">=</operator> <operator pos:start="29:21" pos:end="29:21">~</operator><operator pos:start="29:22" pos:end="29:22">(</operator><call pos:start="29:23" pos:end="29:102"><name pos:start="29:23" pos:end="29:30">get_vlc2</name><argument_list pos:start="29:31" pos:end="29:102">(<argument pos:start="29:32" pos:end="29:33"><expr pos:start="29:32" pos:end="29:33"><name pos:start="29:32" pos:end="29:33">gb</name></expr></argument>, <argument pos:start="29:36" pos:end="29:74"><expr pos:start="29:36" pos:end="29:74"><name pos:start="29:36" pos:end="29:68"><name pos:start="29:36" pos:end="29:55">ff_vc1_subblkpat_vlc</name><index pos:start="29:56" pos:end="29:68">[<expr pos:start="29:57" pos:end="29:67"><name pos:start="29:57" pos:end="29:67"><name pos:start="29:57" pos:end="29:57">v</name><operator pos:start="29:58" pos:end="29:59">-&gt;</operator><name pos:start="29:60" pos:end="29:67">tt_index</name></name></expr>]</index></name><operator pos:start="29:69" pos:end="29:69">.</operator><name pos:start="29:70" pos:end="29:74">table</name></expr></argument>, <argument pos:start="29:77" pos:end="29:98"><expr pos:start="29:77" pos:end="29:98"><name pos:start="29:77" pos:end="29:98">VC1_SUBBLKPAT_VLC_BITS</name></expr></argument>, <argument pos:start="29:101" pos:end="29:101"><expr pos:start="29:101" pos:end="29:101"><literal type="number" pos:start="29:101" pos:end="29:101">1</literal></expr></argument>)</argument_list></call> <operator pos:start="29:104" pos:end="29:104">+</operator> <literal type="number" pos:start="29:106" pos:end="29:106">1</literal><operator pos:start="29:107" pos:end="29:107">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="33:5" pos:end="43:5"><if pos:start="33:5" pos:end="43:5">if<condition pos:start="33:7" pos:end="33:104">(<expr pos:start="33:8" pos:end="33:103"><operator pos:start="33:8" pos:end="33:8">(</operator><name pos:start="33:9" pos:end="33:13">ttblk</name> <operator pos:start="33:15" pos:end="33:16">!=</operator> <name pos:start="33:18" pos:end="33:23">TT_8X8</name> <operator pos:start="33:25" pos:end="33:26">&amp;&amp;</operator> <name pos:start="33:28" pos:end="33:32">ttblk</name> <operator pos:start="33:34" pos:end="33:35">!=</operator> <name pos:start="33:37" pos:end="33:42">TT_4X4</name><operator pos:start="33:43" pos:end="33:43">)</operator> <operator pos:start="33:45" pos:end="33:46">&amp;&amp;</operator> <operator pos:start="33:48" pos:end="33:48">(</operator><name pos:start="33:49" pos:end="33:56"><name pos:start="33:49" pos:end="33:49">v</name><operator pos:start="33:50" pos:end="33:51">-&gt;</operator><name pos:start="33:52" pos:end="33:56">ttmbf</name></name> <operator pos:start="33:58" pos:end="33:59">||</operator> <operator pos:start="33:61" pos:end="33:61">(</operator><name pos:start="33:62" pos:end="33:65">ttmb</name> <operator pos:start="33:67" pos:end="33:68">!=</operator> <operator pos:start="33:70" pos:end="33:70">-</operator><literal type="number" pos:start="33:71" pos:end="33:71">1</literal> <operator pos:start="33:73" pos:end="33:74">&amp;&amp;</operator> <operator pos:start="33:76" pos:end="33:76">(</operator><name pos:start="33:77" pos:end="33:80">ttmb</name> <operator pos:start="33:82" pos:end="33:82">&amp;</operator> <literal type="number" pos:start="33:84" pos:end="33:84">8</literal><operator pos:start="33:85" pos:end="33:85">)</operator> <operator pos:start="33:87" pos:end="33:88">&amp;&amp;</operator> <operator pos:start="33:90" pos:end="33:90">!</operator><name pos:start="33:91" pos:end="33:101">first_block</name><operator pos:start="33:102" pos:end="33:102">)</operator><operator pos:start="33:103" pos:end="33:103">)</operator></expr>)</condition> <block pos:start="33:106" pos:end="43:5">{<block_content pos:start="35:9" pos:end="41:73">

        <expr_stmt pos:start="35:9" pos:end="35:34"><expr pos:start="35:9" pos:end="35:33"><name pos:start="35:9" pos:end="35:17">subblkpat</name> <operator pos:start="35:19" pos:end="35:19">=</operator> <call pos:start="35:21" pos:end="35:33"><name pos:start="35:21" pos:end="35:29">decode012</name><argument_list pos:start="35:30" pos:end="35:33">(<argument pos:start="35:31" pos:end="35:32"><expr pos:start="35:31" pos:end="35:32"><name pos:start="35:31" pos:end="35:32">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="37:37"><if pos:start="37:9" pos:end="37:37">if<condition pos:start="37:11" pos:end="37:21">(<expr pos:start="37:12" pos:end="37:20"><name pos:start="37:12" pos:end="37:20">subblkpat</name></expr>)</condition><block type="pseudo" pos:start="37:23" pos:end="37:37"><block_content pos:start="37:23" pos:end="37:37"> <expr_stmt pos:start="37:23" pos:end="37:37"><expr pos:start="37:23" pos:end="37:36"><name pos:start="37:23" pos:end="37:31">subblkpat</name> <operator pos:start="37:33" pos:end="37:34">^=</operator> <literal type="number" pos:start="37:36" pos:end="37:36">3</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="37:39" pos:end="37:65">//swap decoded pattern bits</comment>

        <if_stmt pos:start="39:9" pos:end="39:73"><if pos:start="39:9" pos:end="39:73">if<condition pos:start="39:11" pos:end="39:57">(<expr pos:start="39:12" pos:end="39:56"><name pos:start="39:12" pos:end="39:16">ttblk</name> <operator pos:start="39:18" pos:end="39:19">==</operator> <name pos:start="39:21" pos:end="39:30">TT_8X4_TOP</name> <operator pos:start="39:32" pos:end="39:33">||</operator> <name pos:start="39:35" pos:end="39:39">ttblk</name> <operator pos:start="39:41" pos:end="39:42">==</operator> <name pos:start="39:44" pos:end="39:56">TT_8X4_BOTTOM</name></expr>)</condition><block type="pseudo" pos:start="39:59" pos:end="39:73"><block_content pos:start="39:59" pos:end="39:73"> <expr_stmt pos:start="39:59" pos:end="39:73"><expr pos:start="39:59" pos:end="39:72"><name pos:start="39:59" pos:end="39:63">ttblk</name> <operator pos:start="39:65" pos:end="39:65">=</operator> <name pos:start="39:67" pos:end="39:72">TT_8X4</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="41:9" pos:end="41:73"><if pos:start="41:9" pos:end="41:73">if<condition pos:start="41:11" pos:end="41:57">(<expr pos:start="41:12" pos:end="41:56"><name pos:start="41:12" pos:end="41:16">ttblk</name> <operator pos:start="41:18" pos:end="41:19">==</operator> <name pos:start="41:21" pos:end="41:32">TT_4X8_RIGHT</name> <operator pos:start="41:34" pos:end="41:35">||</operator> <name pos:start="41:37" pos:end="41:41">ttblk</name> <operator pos:start="41:43" pos:end="41:44">==</operator> <name pos:start="41:46" pos:end="41:56">TT_4X8_LEFT</name></expr>)</condition><block type="pseudo" pos:start="41:59" pos:end="41:73"><block_content pos:start="41:59" pos:end="41:73"> <expr_stmt pos:start="41:59" pos:end="41:73"><expr pos:start="41:59" pos:end="41:72"><name pos:start="41:59" pos:end="41:63">ttblk</name> <operator pos:start="41:65" pos:end="41:65">=</operator> <name pos:start="41:67" pos:end="41:72">TT_4X8</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:61"><expr pos:start="45:5" pos:end="45:60"><name pos:start="45:5" pos:end="45:9">scale</name> <operator pos:start="45:11" pos:end="45:11">=</operator> <literal type="number" pos:start="45:13" pos:end="45:13">2</literal> <operator pos:start="45:15" pos:end="45:15">*</operator> <name pos:start="45:17" pos:end="45:22">mquant</name> <operator pos:start="45:24" pos:end="45:24">+</operator> <operator pos:start="45:26" pos:end="45:26">(</operator><ternary pos:start="45:27" pos:end="45:59"><condition pos:start="45:27" pos:end="45:45"><expr pos:start="45:27" pos:end="45:43"><operator pos:start="45:27" pos:end="45:27">(</operator><name pos:start="45:28" pos:end="45:32"><name pos:start="45:28" pos:end="45:28">v</name><operator pos:start="45:29" pos:end="45:30">-&gt;</operator><name pos:start="45:31" pos:end="45:32">pq</name></name> <operator pos:start="45:34" pos:end="45:35">==</operator> <name pos:start="45:37" pos:end="45:42">mquant</name><operator pos:start="45:43" pos:end="45:43">)</operator></expr> ?</condition><then pos:start="45:47" pos:end="45:55"> <expr pos:start="45:47" pos:end="45:55"><name pos:start="45:47" pos:end="45:55"><name pos:start="45:47" pos:end="45:47">v</name><operator pos:start="45:48" pos:end="45:49">-&gt;</operator><name pos:start="45:50" pos:end="45:55">halfpq</name></name></expr> </then><else pos:start="45:57" pos:end="45:59">: <expr pos:start="45:59" pos:end="45:59"><literal type="number" pos:start="45:59" pos:end="45:59">0</literal></expr></else></ternary><operator pos:start="45:60" pos:end="45:60">)</operator></expr>;</expr_stmt>



    <comment type="line" pos:start="49:5" pos:end="49:66">// convert transforms like 8X4_TOP to generic TT and SUBBLKPAT</comment>

    <if_stmt pos:start="51:5" pos:end="57:5"><if pos:start="51:5" pos:end="57:5">if<condition pos:start="51:7" pos:end="51:53">(<expr pos:start="51:8" pos:end="51:52"><name pos:start="51:8" pos:end="51:12">ttblk</name> <operator pos:start="51:14" pos:end="51:15">==</operator> <name pos:start="51:17" pos:end="51:26">TT_8X4_TOP</name> <operator pos:start="51:28" pos:end="51:29">||</operator> <name pos:start="51:31" pos:end="51:35">ttblk</name> <operator pos:start="51:37" pos:end="51:38">==</operator> <name pos:start="51:40" pos:end="51:52">TT_8X4_BOTTOM</name></expr>)</condition> <block pos:start="51:55" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:23">

        <expr_stmt pos:start="53:9" pos:end="53:46"><expr pos:start="53:9" pos:end="53:45"><name pos:start="53:9" pos:end="53:17">subblkpat</name> <operator pos:start="53:19" pos:end="53:19">=</operator> <literal type="number" pos:start="53:21" pos:end="53:23">2</literal> <operator pos:start="53:23" pos:end="53:23">-</operator> <operator pos:start="53:25" pos:end="53:25">(</operator><name pos:start="53:26" pos:end="53:30">ttblk</name> <operator pos:start="53:32" pos:end="53:33">==</operator> <name pos:start="53:35" pos:end="53:44">TT_8X4_TOP</name><operator pos:start="53:45" pos:end="53:45">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:23"><expr pos:start="55:9" pos:end="55:22"><name pos:start="55:9" pos:end="55:13">ttblk</name> <operator pos:start="55:15" pos:end="55:15">=</operator> <name pos:start="55:17" pos:end="55:22">TT_8X4</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="59:5" pos:end="65:5"><if pos:start="59:5" pos:end="65:5">if<condition pos:start="59:7" pos:end="59:53">(<expr pos:start="59:8" pos:end="59:52"><name pos:start="59:8" pos:end="59:12">ttblk</name> <operator pos:start="59:14" pos:end="59:15">==</operator> <name pos:start="59:17" pos:end="59:28">TT_4X8_RIGHT</name> <operator pos:start="59:30" pos:end="59:31">||</operator> <name pos:start="59:33" pos:end="59:37">ttblk</name> <operator pos:start="59:39" pos:end="59:40">==</operator> <name pos:start="59:42" pos:end="59:52">TT_4X8_LEFT</name></expr>)</condition> <block pos:start="59:55" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:23">

        <expr_stmt pos:start="61:9" pos:end="61:47"><expr pos:start="61:9" pos:end="61:46"><name pos:start="61:9" pos:end="61:17">subblkpat</name> <operator pos:start="61:19" pos:end="61:19">=</operator> <literal type="number" pos:start="61:21" pos:end="61:23">2</literal> <operator pos:start="61:23" pos:end="61:23">-</operator> <operator pos:start="61:25" pos:end="61:25">(</operator><name pos:start="61:26" pos:end="61:30">ttblk</name> <operator pos:start="61:32" pos:end="61:33">==</operator> <name pos:start="61:35" pos:end="61:45">TT_4X8_LEFT</name><operator pos:start="61:46" pos:end="61:46">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:23"><expr pos:start="63:9" pos:end="63:22"><name pos:start="63:9" pos:end="63:13">ttblk</name> <operator pos:start="63:15" pos:end="63:15">=</operator> <name pos:start="63:17" pos:end="63:22">TT_4X8</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <switch pos:start="67:5" pos:end="219:5">switch<condition pos:start="67:11" pos:end="67:17">(<expr pos:start="67:12" pos:end="67:16"><name pos:start="67:12" pos:end="67:16">ttblk</name></expr>)</condition> <block pos:start="67:19" pos:end="219:5">{<block_content pos:start="69:5" pos:end="217:14">

    <case pos:start="69:5" pos:end="69:16">case <expr pos:start="69:10" pos:end="69:15"><name pos:start="69:10" pos:end="69:15">TT_8X8</name></expr>:</case>

        <expr_stmt pos:start="71:9" pos:end="71:14"><expr pos:start="71:9" pos:end="71:13"><name pos:start="71:9" pos:end="71:9">i</name> <operator pos:start="71:11" pos:end="71:11">=</operator> <literal type="number" pos:start="71:13" pos:end="71:13">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:17"><expr pos:start="73:9" pos:end="73:16"><name pos:start="73:9" pos:end="73:12">last</name> <operator pos:start="73:14" pos:end="73:14">=</operator> <literal type="number" pos:start="73:16" pos:end="73:16">0</literal></expr>;</expr_stmt>

        <while pos:start="75:9" pos:end="93:9">while <condition pos:start="75:15" pos:end="75:21">(<expr pos:start="75:16" pos:end="75:20"><operator pos:start="75:16" pos:end="75:16">!</operator><name pos:start="75:17" pos:end="75:20">last</name></expr>)</condition> <block pos:start="75:23" pos:end="93:9">{<block_content pos:start="77:13" pos:end="91:66">

            <expr_stmt pos:start="77:13" pos:end="77:72"><expr pos:start="77:13" pos:end="77:71"><call pos:start="77:13" pos:end="77:71"><name pos:start="77:13" pos:end="77:31">vc1_decode_ac_coeff</name><argument_list pos:start="77:32" pos:end="77:71">(<argument pos:start="77:33" pos:end="77:33"><expr pos:start="77:33" pos:end="77:33"><name pos:start="77:33" pos:end="77:33">v</name></expr></argument>, <argument pos:start="77:36" pos:end="77:40"><expr pos:start="77:36" pos:end="77:40"><operator pos:start="77:36" pos:end="77:36">&amp;</operator><name pos:start="77:37" pos:end="77:40">last</name></expr></argument>, <argument pos:start="77:43" pos:end="77:47"><expr pos:start="77:43" pos:end="77:47"><operator pos:start="77:43" pos:end="77:43">&amp;</operator><name pos:start="77:44" pos:end="77:47">skip</name></expr></argument>, <argument pos:start="77:50" pos:end="77:55"><expr pos:start="77:50" pos:end="77:55"><operator pos:start="77:50" pos:end="77:50">&amp;</operator><name pos:start="77:51" pos:end="77:55">value</name></expr></argument>, <argument pos:start="77:58" pos:end="77:70"><expr pos:start="77:58" pos:end="77:70"><name pos:start="77:58" pos:end="77:70"><name pos:start="77:58" pos:end="77:58">v</name><operator pos:start="77:59" pos:end="77:60">-&gt;</operator><name pos:start="77:61" pos:end="77:70">codingset2</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:22"><expr pos:start="79:13" pos:end="79:21"><name pos:start="79:13" pos:end="79:13">i</name> <operator pos:start="79:15" pos:end="79:16">+=</operator> <name pos:start="79:18" pos:end="79:21">skip</name></expr>;</expr_stmt>

            <if_stmt pos:start="81:13" pos:end="83:22"><if pos:start="81:13" pos:end="83:22">if<condition pos:start="81:15" pos:end="81:22">(<expr pos:start="81:16" pos:end="81:21"><name pos:start="81:16" pos:end="81:16">i</name> <operator pos:start="81:18" pos:end="81:18">&gt;</operator> <literal type="number" pos:start="81:20" pos:end="81:21">63</literal></expr>)</condition><block type="pseudo" pos:start="83:17" pos:end="83:22"><block_content pos:start="83:17" pos:end="83:22">

                <break pos:start="83:17" pos:end="83:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:41"><expr pos:start="85:13" pos:end="85:40"><name pos:start="85:13" pos:end="85:15">idx</name> <operator pos:start="85:17" pos:end="85:17">=</operator> <name pos:start="85:19" pos:end="85:40"><name pos:start="85:19" pos:end="85:32">wmv1_scantable</name><index pos:start="85:33" pos:end="85:35">[<expr pos:start="85:34" pos:end="85:34"><literal type="number" pos:start="85:34" pos:end="85:34">0</literal></expr>]</index><index pos:start="85:36" pos:end="85:40">[<expr pos:start="85:37" pos:end="85:39"><name pos:start="85:37" pos:end="85:37">i</name><operator pos:start="85:38" pos:end="85:39">++</operator></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:39"><expr pos:start="87:13" pos:end="87:38"><name pos:start="87:13" pos:end="87:22"><name pos:start="87:13" pos:end="87:17">block</name><index pos:start="87:18" pos:end="87:22">[<expr pos:start="87:19" pos:end="87:21"><name pos:start="87:19" pos:end="87:21">idx</name></expr>]</index></name> <operator pos:start="87:24" pos:end="87:24">=</operator> <name pos:start="87:26" pos:end="87:30">value</name> <operator pos:start="87:32" pos:end="87:32">*</operator> <name pos:start="87:34" pos:end="87:38">scale</name></expr>;</expr_stmt>

            <if_stmt pos:start="89:13" pos:end="91:66"><if pos:start="89:13" pos:end="91:66">if<condition pos:start="89:15" pos:end="89:30">(<expr pos:start="89:16" pos:end="89:29"><operator pos:start="89:16" pos:end="89:16">!</operator><name pos:start="89:17" pos:end="89:29"><name pos:start="89:17" pos:end="89:17">v</name><operator pos:start="89:18" pos:end="89:19">-&gt;</operator><name pos:start="89:20" pos:end="89:29">pquantizer</name></name></expr>)</condition><block type="pseudo" pos:start="91:17" pos:end="91:66"><block_content pos:start="91:17" pos:end="91:66">

                <expr_stmt pos:start="91:17" pos:end="91:66"><expr pos:start="91:17" pos:end="91:65"><name pos:start="91:17" pos:end="91:26"><name pos:start="91:17" pos:end="91:21">block</name><index pos:start="91:22" pos:end="91:26">[<expr pos:start="91:23" pos:end="91:25"><name pos:start="91:23" pos:end="91:25">idx</name></expr>]</index></name> <operator pos:start="91:28" pos:end="91:29">+=</operator> <ternary pos:start="91:31" pos:end="91:65"><condition pos:start="91:31" pos:end="91:48"><expr pos:start="91:31" pos:end="91:46"><operator pos:start="91:31" pos:end="91:31">(</operator><name pos:start="91:32" pos:end="91:41"><name pos:start="91:32" pos:end="91:36">block</name><index pos:start="91:37" pos:end="91:41">[<expr pos:start="91:38" pos:end="91:40"><name pos:start="91:38" pos:end="91:40">idx</name></expr>]</index></name> <operator pos:start="91:43" pos:end="91:43">&lt;</operator> <literal type="number" pos:start="91:45" pos:end="91:45">0</literal><operator pos:start="91:46" pos:end="91:46">)</operator></expr> ?</condition><then pos:start="91:50" pos:end="91:56"> <expr pos:start="91:50" pos:end="91:56"><operator pos:start="91:50" pos:end="91:50">-</operator><name pos:start="91:51" pos:end="91:56">mquant</name></expr> </then><else pos:start="91:58" pos:end="91:65">: <expr pos:start="91:60" pos:end="91:65"><name pos:start="91:60" pos:end="91:65">mquant</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></while>

        <if_stmt pos:start="95:9" pos:end="101:9"><if pos:start="95:9" pos:end="101:9">if<condition pos:start="95:11" pos:end="95:23">(<expr pos:start="95:12" pos:end="95:22"><operator pos:start="95:12" pos:end="95:12">!</operator><name pos:start="95:13" pos:end="95:22">skip_block</name></expr>)</condition><block pos:start="95:24" pos:end="101:9">{<block_content pos:start="97:13" pos:end="99:60">

            <expr_stmt pos:start="97:13" pos:end="97:44"><expr pos:start="97:13" pos:end="97:43"><call pos:start="97:13" pos:end="97:43"><name pos:start="97:13" pos:end="97:36"><name pos:start="97:13" pos:end="97:13">s</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:18">dsp</name><operator pos:start="97:19" pos:end="97:19">.</operator><name pos:start="97:20" pos:end="97:36">vc1_inv_trans_8x8</name></name><argument_list pos:start="97:37" pos:end="97:43">(<argument pos:start="97:38" pos:end="97:42"><expr pos:start="97:38" pos:end="97:42"><name pos:start="97:38" pos:end="97:42">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:60"><expr pos:start="99:13" pos:end="99:59"><call pos:start="99:13" pos:end="99:59"><name pos:start="99:13" pos:end="99:37"><name pos:start="99:13" pos:end="99:13">s</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:18">dsp</name><operator pos:start="99:19" pos:end="99:19">.</operator><name pos:start="99:20" pos:end="99:37">add_pixels_clamped</name></name><argument_list pos:start="99:38" pos:end="99:59">(<argument pos:start="99:39" pos:end="99:43"><expr pos:start="99:39" pos:end="99:43"><name pos:start="99:39" pos:end="99:43">block</name></expr></argument>, <argument pos:start="99:46" pos:end="99:48"><expr pos:start="99:46" pos:end="99:48"><name pos:start="99:46" pos:end="99:48">dst</name></expr></argument>, <argument pos:start="99:51" pos:end="99:58"><expr pos:start="99:51" pos:end="99:58"><name pos:start="99:51" pos:end="99:58">linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="103:9" pos:end="103:14">break;</break>

    <case pos:start="105:5" pos:end="105:16">case <expr pos:start="105:10" pos:end="105:15"><name pos:start="105:10" pos:end="105:15">TT_4X4</name></expr>:</case>

        <for pos:start="107:9" pos:end="139:9">for<control pos:start="107:12" pos:end="107:30">(<init pos:start="107:13" pos:end="107:18"><expr pos:start="107:13" pos:end="107:17"><name pos:start="107:13" pos:end="107:13">j</name> <operator pos:start="107:15" pos:end="107:15">=</operator> <literal type="number" pos:start="107:17" pos:end="107:17">0</literal></expr>;</init> <condition pos:start="107:20" pos:end="107:25"><expr pos:start="107:20" pos:end="107:24"><name pos:start="107:20" pos:end="107:20">j</name> <operator pos:start="107:22" pos:end="107:22">&lt;</operator> <literal type="number" pos:start="107:24" pos:end="107:24">4</literal></expr>;</condition> <incr pos:start="107:27" pos:end="107:29"><expr pos:start="107:27" pos:end="107:29"><name pos:start="107:27" pos:end="107:27">j</name><operator pos:start="107:28" pos:end="107:29">++</operator></expr></incr>)</control> <block pos:start="107:32" pos:end="139:9">{<block_content pos:start="109:13" pos:end="137:98">

            <expr_stmt pos:start="109:13" pos:end="109:46"><expr pos:start="109:13" pos:end="109:45"><name pos:start="109:13" pos:end="109:16">last</name> <operator pos:start="109:18" pos:end="109:18">=</operator> <name pos:start="109:20" pos:end="109:28">subblkpat</name> <operator pos:start="109:30" pos:end="109:30">&amp;</operator> <operator pos:start="109:32" pos:end="109:32">(</operator><literal type="number" pos:start="109:33" pos:end="109:33">1</literal> <operator pos:start="109:35" pos:end="109:36">&lt;&lt;</operator> <operator pos:start="109:38" pos:end="109:38">(</operator><literal type="number" pos:start="109:39" pos:end="109:41">3</literal> <operator pos:start="109:41" pos:end="109:41">-</operator> <name pos:start="109:43" pos:end="109:43">j</name><operator pos:start="109:44" pos:end="109:44">)</operator><operator pos:start="109:45" pos:end="109:45">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:18"><expr pos:start="111:13" pos:end="111:17"><name pos:start="111:13" pos:end="111:13">i</name> <operator pos:start="111:15" pos:end="111:15">=</operator> <literal type="number" pos:start="111:17" pos:end="111:17">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:45"><expr pos:start="113:13" pos:end="113:44"><name pos:start="113:13" pos:end="113:15">off</name> <operator pos:start="113:17" pos:end="113:17">=</operator> <operator pos:start="113:19" pos:end="113:19">(</operator><name pos:start="113:20" pos:end="113:20">j</name> <operator pos:start="113:22" pos:end="113:22">&amp;</operator> <literal type="number" pos:start="113:24" pos:end="113:24">1</literal><operator pos:start="113:25" pos:end="113:25">)</operator> <operator pos:start="113:27" pos:end="113:27">*</operator> <literal type="number" pos:start="113:29" pos:end="113:31">4</literal> <operator pos:start="113:31" pos:end="113:31">+</operator> <operator pos:start="113:33" pos:end="113:33">(</operator><name pos:start="113:34" pos:end="113:34">j</name> <operator pos:start="113:36" pos:end="113:36">&amp;</operator> <literal type="number" pos:start="113:38" pos:end="113:38">2</literal><operator pos:start="113:39" pos:end="113:39">)</operator> <operator pos:start="113:41" pos:end="113:41">*</operator> <literal type="number" pos:start="113:43" pos:end="113:44">16</literal></expr>;</expr_stmt>

            <while pos:start="115:13" pos:end="133:13">while <condition pos:start="115:19" pos:end="115:25">(<expr pos:start="115:20" pos:end="115:24"><operator pos:start="115:20" pos:end="115:20">!</operator><name pos:start="115:21" pos:end="115:24">last</name></expr>)</condition> <block pos:start="115:27" pos:end="133:13">{<block_content pos:start="117:17" pos:end="131:82">

                <expr_stmt pos:start="117:17" pos:end="117:76"><expr pos:start="117:17" pos:end="117:75"><call pos:start="117:17" pos:end="117:75"><name pos:start="117:17" pos:end="117:35">vc1_decode_ac_coeff</name><argument_list pos:start="117:36" pos:end="117:75">(<argument pos:start="117:37" pos:end="117:37"><expr pos:start="117:37" pos:end="117:37"><name pos:start="117:37" pos:end="117:37">v</name></expr></argument>, <argument pos:start="117:40" pos:end="117:44"><expr pos:start="117:40" pos:end="117:44"><operator pos:start="117:40" pos:end="117:40">&amp;</operator><name pos:start="117:41" pos:end="117:44">last</name></expr></argument>, <argument pos:start="117:47" pos:end="117:51"><expr pos:start="117:47" pos:end="117:51"><operator pos:start="117:47" pos:end="117:47">&amp;</operator><name pos:start="117:48" pos:end="117:51">skip</name></expr></argument>, <argument pos:start="117:54" pos:end="117:59"><expr pos:start="117:54" pos:end="117:59"><operator pos:start="117:54" pos:end="117:54">&amp;</operator><name pos:start="117:55" pos:end="117:59">value</name></expr></argument>, <argument pos:start="117:62" pos:end="117:74"><expr pos:start="117:62" pos:end="117:74"><name pos:start="117:62" pos:end="117:74"><name pos:start="117:62" pos:end="117:62">v</name><operator pos:start="117:63" pos:end="117:64">-&gt;</operator><name pos:start="117:65" pos:end="117:74">codingset2</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="119:17" pos:end="119:26"><expr pos:start="119:17" pos:end="119:25"><name pos:start="119:17" pos:end="119:17">i</name> <operator pos:start="119:19" pos:end="119:20">+=</operator> <name pos:start="119:22" pos:end="119:25">skip</name></expr>;</expr_stmt>

                <if_stmt pos:start="121:17" pos:end="123:26"><if pos:start="121:17" pos:end="123:26">if<condition pos:start="121:19" pos:end="121:26">(<expr pos:start="121:20" pos:end="121:25"><name pos:start="121:20" pos:end="121:20">i</name> <operator pos:start="121:22" pos:end="121:22">&gt;</operator> <literal type="number" pos:start="121:24" pos:end="121:25">15</literal></expr>)</condition><block type="pseudo" pos:start="123:21" pos:end="123:26"><block_content pos:start="123:21" pos:end="123:26">

                    <break pos:start="123:21" pos:end="123:26">break;</break></block_content></block></if></if_stmt>

                <expr_stmt pos:start="125:17" pos:end="125:60"><expr pos:start="125:17" pos:end="125:59"><name pos:start="125:17" pos:end="125:19">idx</name> <operator pos:start="125:21" pos:end="125:21">=</operator> <name pos:start="125:23" pos:end="125:59"><name pos:start="125:23" pos:end="125:54">ff_vc1_simple_progressive_4x4_zz</name><index pos:start="125:55" pos:end="125:59">[<expr pos:start="125:56" pos:end="125:58"><name pos:start="125:56" pos:end="125:56">i</name><operator pos:start="125:57" pos:end="125:58">++</operator></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="127:17" pos:end="127:49"><expr pos:start="127:17" pos:end="127:48"><name pos:start="127:17" pos:end="127:32"><name pos:start="127:17" pos:end="127:21">block</name><index pos:start="127:22" pos:end="127:32">[<expr pos:start="127:23" pos:end="127:31"><name pos:start="127:23" pos:end="127:25">idx</name> <operator pos:start="127:27" pos:end="127:27">+</operator> <name pos:start="127:29" pos:end="127:31">off</name></expr>]</index></name> <operator pos:start="127:34" pos:end="127:34">=</operator> <name pos:start="127:36" pos:end="127:40">value</name> <operator pos:start="127:42" pos:end="127:42">*</operator> <name pos:start="127:44" pos:end="127:48">scale</name></expr>;</expr_stmt>

                <if_stmt pos:start="129:17" pos:end="131:82"><if pos:start="129:17" pos:end="131:82">if<condition pos:start="129:19" pos:end="129:34">(<expr pos:start="129:20" pos:end="129:33"><operator pos:start="129:20" pos:end="129:20">!</operator><name pos:start="129:21" pos:end="129:33"><name pos:start="129:21" pos:end="129:21">v</name><operator pos:start="129:22" pos:end="129:23">-&gt;</operator><name pos:start="129:24" pos:end="129:33">pquantizer</name></name></expr>)</condition><block type="pseudo" pos:start="131:21" pos:end="131:82"><block_content pos:start="131:21" pos:end="131:82">

                    <expr_stmt pos:start="131:21" pos:end="131:82"><expr pos:start="131:21" pos:end="131:81"><name pos:start="131:21" pos:end="131:36"><name pos:start="131:21" pos:end="131:25">block</name><index pos:start="131:26" pos:end="131:36">[<expr pos:start="131:27" pos:end="131:35"><name pos:start="131:27" pos:end="131:29">idx</name> <operator pos:start="131:31" pos:end="131:31">+</operator> <name pos:start="131:33" pos:end="131:35">off</name></expr>]</index></name> <operator pos:start="131:38" pos:end="131:39">+=</operator> <ternary pos:start="131:41" pos:end="131:81"><condition pos:start="131:41" pos:end="131:64"><expr pos:start="131:41" pos:end="131:62"><operator pos:start="131:41" pos:end="131:41">(</operator><name pos:start="131:42" pos:end="131:57"><name pos:start="131:42" pos:end="131:46">block</name><index pos:start="131:47" pos:end="131:57">[<expr pos:start="131:48" pos:end="131:56"><name pos:start="131:48" pos:end="131:50">idx</name> <operator pos:start="131:52" pos:end="131:52">+</operator> <name pos:start="131:54" pos:end="131:56">off</name></expr>]</index></name> <operator pos:start="131:59" pos:end="131:59">&lt;</operator> <literal type="number" pos:start="131:61" pos:end="131:61">0</literal><operator pos:start="131:62" pos:end="131:62">)</operator></expr> ?</condition><then pos:start="131:66" pos:end="131:72"> <expr pos:start="131:66" pos:end="131:72"><operator pos:start="131:66" pos:end="131:66">-</operator><name pos:start="131:67" pos:end="131:72">mquant</name></expr> </then><else pos:start="131:74" pos:end="131:81">: <expr pos:start="131:76" pos:end="131:81"><name pos:start="131:76" pos:end="131:81">mquant</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></while>

            <if_stmt pos:start="135:13" pos:end="137:98"><if pos:start="135:13" pos:end="137:98">if<condition pos:start="135:15" pos:end="135:60">(<expr pos:start="135:16" pos:end="135:59"><operator pos:start="135:16" pos:end="135:16">!</operator><operator pos:start="135:17" pos:end="135:17">(</operator><name pos:start="135:18" pos:end="135:26">subblkpat</name> <operator pos:start="135:28" pos:end="135:28">&amp;</operator> <operator pos:start="135:30" pos:end="135:30">(</operator><literal type="number" pos:start="135:31" pos:end="135:31">1</literal> <operator pos:start="135:33" pos:end="135:34">&lt;&lt;</operator> <operator pos:start="135:36" pos:end="135:36">(</operator><literal type="number" pos:start="135:37" pos:end="135:39">3</literal> <operator pos:start="135:39" pos:end="135:39">-</operator> <name pos:start="135:41" pos:end="135:41">j</name><operator pos:start="135:42" pos:end="135:42">)</operator><operator pos:start="135:43" pos:end="135:43">)</operator><operator pos:start="135:44" pos:end="135:44">)</operator> <operator pos:start="135:46" pos:end="135:47">&amp;&amp;</operator> <operator pos:start="135:49" pos:end="135:49">!</operator><name pos:start="135:50" pos:end="135:59">skip_block</name></expr>)</condition><block type="pseudo" pos:start="137:17" pos:end="137:98"><block_content pos:start="137:17" pos:end="137:98">

                <expr_stmt pos:start="137:17" pos:end="137:98"><expr pos:start="137:17" pos:end="137:97"><call pos:start="137:17" pos:end="137:97"><name pos:start="137:17" pos:end="137:40"><name pos:start="137:17" pos:end="137:17">s</name><operator pos:start="137:18" pos:end="137:19">-&gt;</operator><name pos:start="137:20" pos:end="137:22">dsp</name><operator pos:start="137:23" pos:end="137:23">.</operator><name pos:start="137:24" pos:end="137:40">vc1_inv_trans_4x4</name></name><argument_list pos:start="137:41" pos:end="137:97">(<argument pos:start="137:42" pos:end="137:73"><expr pos:start="137:42" pos:end="137:73"><name pos:start="137:42" pos:end="137:44">dst</name> <operator pos:start="137:46" pos:end="137:46">+</operator> <operator pos:start="137:48" pos:end="137:48">(</operator><name pos:start="137:49" pos:end="137:49">j</name><operator pos:start="137:50" pos:end="137:50">&amp;</operator><literal type="number" pos:start="137:51" pos:end="137:51">1</literal><operator pos:start="137:52" pos:end="137:52">)</operator><operator pos:start="137:53" pos:end="137:53">*</operator><literal type="number" pos:start="137:54" pos:end="137:56">4</literal> <operator pos:start="137:56" pos:end="137:56">+</operator> <operator pos:start="137:58" pos:end="137:58">(</operator><name pos:start="137:59" pos:end="137:59">j</name><operator pos:start="137:60" pos:end="137:60">&amp;</operator><literal type="number" pos:start="137:61" pos:end="137:61">2</literal><operator pos:start="137:62" pos:end="137:62">)</operator><operator pos:start="137:63" pos:end="137:63">*</operator><literal type="number" pos:start="137:64" pos:end="137:64">2</literal><operator pos:start="137:65" pos:end="137:65">*</operator><name pos:start="137:66" pos:end="137:73">linesize</name></expr></argument>, <argument pos:start="137:76" pos:end="137:83"><expr pos:start="137:76" pos:end="137:83"><name pos:start="137:76" pos:end="137:83">linesize</name></expr></argument>, <argument pos:start="137:86" pos:end="137:96"><expr pos:start="137:86" pos:end="137:96"><name pos:start="137:86" pos:end="137:90">block</name> <operator pos:start="137:92" pos:end="137:92">+</operator> <name pos:start="137:94" pos:end="137:96">off</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <break pos:start="141:9" pos:end="141:14">break;</break>

    <case pos:start="143:5" pos:end="143:16">case <expr pos:start="143:10" pos:end="143:15"><name pos:start="143:10" pos:end="143:15">TT_8X4</name></expr>:</case>

        <for pos:start="145:9" pos:end="177:9">for<control pos:start="145:12" pos:end="145:30">(<init pos:start="145:13" pos:end="145:18"><expr pos:start="145:13" pos:end="145:17"><name pos:start="145:13" pos:end="145:13">j</name> <operator pos:start="145:15" pos:end="145:15">=</operator> <literal type="number" pos:start="145:17" pos:end="145:17">0</literal></expr>;</init> <condition pos:start="145:20" pos:end="145:25"><expr pos:start="145:20" pos:end="145:24"><name pos:start="145:20" pos:end="145:20">j</name> <operator pos:start="145:22" pos:end="145:22">&lt;</operator> <literal type="number" pos:start="145:24" pos:end="145:24">2</literal></expr>;</condition> <incr pos:start="145:27" pos:end="145:29"><expr pos:start="145:27" pos:end="145:29"><name pos:start="145:27" pos:end="145:27">j</name><operator pos:start="145:28" pos:end="145:29">++</operator></expr></incr>)</control> <block pos:start="145:32" pos:end="177:9">{<block_content pos:start="147:13" pos:end="175:84">

            <expr_stmt pos:start="147:13" pos:end="147:46"><expr pos:start="147:13" pos:end="147:45"><name pos:start="147:13" pos:end="147:16">last</name> <operator pos:start="147:18" pos:end="147:18">=</operator> <name pos:start="147:20" pos:end="147:28">subblkpat</name> <operator pos:start="147:30" pos:end="147:30">&amp;</operator> <operator pos:start="147:32" pos:end="147:32">(</operator><literal type="number" pos:start="147:33" pos:end="147:33">1</literal> <operator pos:start="147:35" pos:end="147:36">&lt;&lt;</operator> <operator pos:start="147:38" pos:end="147:38">(</operator><literal type="number" pos:start="147:39" pos:end="147:41">1</literal> <operator pos:start="147:41" pos:end="147:41">-</operator> <name pos:start="147:43" pos:end="147:43">j</name><operator pos:start="147:44" pos:end="147:44">)</operator><operator pos:start="147:45" pos:end="147:45">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:18"><expr pos:start="149:13" pos:end="149:17"><name pos:start="149:13" pos:end="149:13">i</name> <operator pos:start="149:15" pos:end="149:15">=</operator> <literal type="number" pos:start="149:17" pos:end="149:17">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:25"><expr pos:start="151:13" pos:end="151:24"><name pos:start="151:13" pos:end="151:15">off</name> <operator pos:start="151:17" pos:end="151:17">=</operator> <name pos:start="151:19" pos:end="151:19">j</name> <operator pos:start="151:21" pos:end="151:21">*</operator> <literal type="number" pos:start="151:23" pos:end="151:24">32</literal></expr>;</expr_stmt>

            <while pos:start="153:13" pos:end="171:13">while <condition pos:start="153:19" pos:end="153:25">(<expr pos:start="153:20" pos:end="153:24"><operator pos:start="153:20" pos:end="153:20">!</operator><name pos:start="153:21" pos:end="153:24">last</name></expr>)</condition> <block pos:start="153:27" pos:end="171:13">{<block_content pos:start="155:17" pos:end="169:70">

                <expr_stmt pos:start="155:17" pos:end="155:76"><expr pos:start="155:17" pos:end="155:75"><call pos:start="155:17" pos:end="155:75"><name pos:start="155:17" pos:end="155:35">vc1_decode_ac_coeff</name><argument_list pos:start="155:36" pos:end="155:75">(<argument pos:start="155:37" pos:end="155:37"><expr pos:start="155:37" pos:end="155:37"><name pos:start="155:37" pos:end="155:37">v</name></expr></argument>, <argument pos:start="155:40" pos:end="155:44"><expr pos:start="155:40" pos:end="155:44"><operator pos:start="155:40" pos:end="155:40">&amp;</operator><name pos:start="155:41" pos:end="155:44">last</name></expr></argument>, <argument pos:start="155:47" pos:end="155:51"><expr pos:start="155:47" pos:end="155:51"><operator pos:start="155:47" pos:end="155:47">&amp;</operator><name pos:start="155:48" pos:end="155:51">skip</name></expr></argument>, <argument pos:start="155:54" pos:end="155:59"><expr pos:start="155:54" pos:end="155:59"><operator pos:start="155:54" pos:end="155:54">&amp;</operator><name pos:start="155:55" pos:end="155:59">value</name></expr></argument>, <argument pos:start="155:62" pos:end="155:74"><expr pos:start="155:62" pos:end="155:74"><name pos:start="155:62" pos:end="155:74"><name pos:start="155:62" pos:end="155:62">v</name><operator pos:start="155:63" pos:end="155:64">-&gt;</operator><name pos:start="155:65" pos:end="155:74">codingset2</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="157:17" pos:end="157:26"><expr pos:start="157:17" pos:end="157:25"><name pos:start="157:17" pos:end="157:17">i</name> <operator pos:start="157:19" pos:end="157:20">+=</operator> <name pos:start="157:22" pos:end="157:25">skip</name></expr>;</expr_stmt>

                <if_stmt pos:start="159:17" pos:end="161:26"><if pos:start="159:17" pos:end="161:26">if<condition pos:start="159:19" pos:end="159:26">(<expr pos:start="159:20" pos:end="159:25"><name pos:start="159:20" pos:end="159:20">i</name> <operator pos:start="159:22" pos:end="159:22">&gt;</operator> <literal type="number" pos:start="159:24" pos:end="159:25">31</literal></expr>)</condition><block type="pseudo" pos:start="161:21" pos:end="161:26"><block_content pos:start="161:21" pos:end="161:26">

                    <break pos:start="161:21" pos:end="161:26">break;</break></block_content></block></if></if_stmt>

                <expr_stmt pos:start="163:17" pos:end="163:41"><expr pos:start="163:17" pos:end="163:40"><name pos:start="163:17" pos:end="163:19">idx</name> <operator pos:start="163:21" pos:end="163:21">=</operator> <name pos:start="163:23" pos:end="163:36"><name pos:start="163:23" pos:end="163:23">v</name><operator pos:start="163:24" pos:end="163:25">-&gt;</operator><name pos:start="163:26" pos:end="163:31">zz_8x4</name><index pos:start="163:32" pos:end="163:36">[<expr pos:start="163:33" pos:end="163:35"><name pos:start="163:33" pos:end="163:33">i</name><operator pos:start="163:34" pos:end="163:35">++</operator></expr>]</index></name><operator pos:start="163:37" pos:end="163:37">+</operator><name pos:start="163:38" pos:end="163:40">off</name></expr>;</expr_stmt>

                <expr_stmt pos:start="165:17" pos:end="165:43"><expr pos:start="165:17" pos:end="165:42"><name pos:start="165:17" pos:end="165:26"><name pos:start="165:17" pos:end="165:21">block</name><index pos:start="165:22" pos:end="165:26">[<expr pos:start="165:23" pos:end="165:25"><name pos:start="165:23" pos:end="165:25">idx</name></expr>]</index></name> <operator pos:start="165:28" pos:end="165:28">=</operator> <name pos:start="165:30" pos:end="165:34">value</name> <operator pos:start="165:36" pos:end="165:36">*</operator> <name pos:start="165:38" pos:end="165:42">scale</name></expr>;</expr_stmt>

                <if_stmt pos:start="167:17" pos:end="169:70"><if pos:start="167:17" pos:end="169:70">if<condition pos:start="167:19" pos:end="167:34">(<expr pos:start="167:20" pos:end="167:33"><operator pos:start="167:20" pos:end="167:20">!</operator><name pos:start="167:21" pos:end="167:33"><name pos:start="167:21" pos:end="167:21">v</name><operator pos:start="167:22" pos:end="167:23">-&gt;</operator><name pos:start="167:24" pos:end="167:33">pquantizer</name></name></expr>)</condition><block type="pseudo" pos:start="169:21" pos:end="169:70"><block_content pos:start="169:21" pos:end="169:70">

                    <expr_stmt pos:start="169:21" pos:end="169:70"><expr pos:start="169:21" pos:end="169:69"><name pos:start="169:21" pos:end="169:30"><name pos:start="169:21" pos:end="169:25">block</name><index pos:start="169:26" pos:end="169:30">[<expr pos:start="169:27" pos:end="169:29"><name pos:start="169:27" pos:end="169:29">idx</name></expr>]</index></name> <operator pos:start="169:32" pos:end="169:33">+=</operator> <ternary pos:start="169:35" pos:end="169:69"><condition pos:start="169:35" pos:end="169:52"><expr pos:start="169:35" pos:end="169:50"><operator pos:start="169:35" pos:end="169:35">(</operator><name pos:start="169:36" pos:end="169:45"><name pos:start="169:36" pos:end="169:40">block</name><index pos:start="169:41" pos:end="169:45">[<expr pos:start="169:42" pos:end="169:44"><name pos:start="169:42" pos:end="169:44">idx</name></expr>]</index></name> <operator pos:start="169:47" pos:end="169:47">&lt;</operator> <literal type="number" pos:start="169:49" pos:end="169:49">0</literal><operator pos:start="169:50" pos:end="169:50">)</operator></expr> ?</condition><then pos:start="169:54" pos:end="169:60"> <expr pos:start="169:54" pos:end="169:60"><operator pos:start="169:54" pos:end="169:54">-</operator><name pos:start="169:55" pos:end="169:60">mquant</name></expr> </then><else pos:start="169:62" pos:end="169:69">: <expr pos:start="169:64" pos:end="169:69"><name pos:start="169:64" pos:end="169:69">mquant</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></while>

            <if_stmt pos:start="173:13" pos:end="175:84"><if pos:start="173:13" pos:end="175:84">if<condition pos:start="173:15" pos:end="173:60">(<expr pos:start="173:16" pos:end="173:59"><operator pos:start="173:16" pos:end="173:16">!</operator><operator pos:start="173:17" pos:end="173:17">(</operator><name pos:start="173:18" pos:end="173:26">subblkpat</name> <operator pos:start="173:28" pos:end="173:28">&amp;</operator> <operator pos:start="173:30" pos:end="173:30">(</operator><literal type="number" pos:start="173:31" pos:end="173:31">1</literal> <operator pos:start="173:33" pos:end="173:34">&lt;&lt;</operator> <operator pos:start="173:36" pos:end="173:36">(</operator><literal type="number" pos:start="173:37" pos:end="173:39">1</literal> <operator pos:start="173:39" pos:end="173:39">-</operator> <name pos:start="173:41" pos:end="173:41">j</name><operator pos:start="173:42" pos:end="173:42">)</operator><operator pos:start="173:43" pos:end="173:43">)</operator><operator pos:start="173:44" pos:end="173:44">)</operator> <operator pos:start="173:46" pos:end="173:47">&amp;&amp;</operator> <operator pos:start="173:49" pos:end="173:49">!</operator><name pos:start="173:50" pos:end="173:59">skip_block</name></expr>)</condition><block type="pseudo" pos:start="175:17" pos:end="175:84"><block_content pos:start="175:17" pos:end="175:84">

                <expr_stmt pos:start="175:17" pos:end="175:84"><expr pos:start="175:17" pos:end="175:83"><call pos:start="175:17" pos:end="175:83"><name pos:start="175:17" pos:end="175:40"><name pos:start="175:17" pos:end="175:17">s</name><operator pos:start="175:18" pos:end="175:19">-&gt;</operator><name pos:start="175:20" pos:end="175:22">dsp</name><operator pos:start="175:23" pos:end="175:23">.</operator><name pos:start="175:24" pos:end="175:40">vc1_inv_trans_8x4</name></name><argument_list pos:start="175:41" pos:end="175:83">(<argument pos:start="175:42" pos:end="175:59"><expr pos:start="175:42" pos:end="175:59"><name pos:start="175:42" pos:end="175:44">dst</name> <operator pos:start="175:46" pos:end="175:46">+</operator> <name pos:start="175:48" pos:end="175:48">j</name><operator pos:start="175:49" pos:end="175:49">*</operator><literal type="number" pos:start="175:50" pos:end="175:50">4</literal><operator pos:start="175:51" pos:end="175:51">*</operator><name pos:start="175:52" pos:end="175:59">linesize</name></expr></argument>, <argument pos:start="175:62" pos:end="175:69"><expr pos:start="175:62" pos:end="175:69"><name pos:start="175:62" pos:end="175:69">linesize</name></expr></argument>, <argument pos:start="175:72" pos:end="175:82"><expr pos:start="175:72" pos:end="175:82"><name pos:start="175:72" pos:end="175:76">block</name> <operator pos:start="175:78" pos:end="175:78">+</operator> <name pos:start="175:80" pos:end="175:82">off</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <break pos:start="179:9" pos:end="179:14">break;</break>

    <case pos:start="181:5" pos:end="181:16">case <expr pos:start="181:10" pos:end="181:15"><name pos:start="181:10" pos:end="181:15">TT_4X8</name></expr>:</case>

        <for pos:start="183:9" pos:end="215:9">for<control pos:start="183:12" pos:end="183:30">(<init pos:start="183:13" pos:end="183:18"><expr pos:start="183:13" pos:end="183:17"><name pos:start="183:13" pos:end="183:13">j</name> <operator pos:start="183:15" pos:end="183:15">=</operator> <literal type="number" pos:start="183:17" pos:end="183:17">0</literal></expr>;</init> <condition pos:start="183:20" pos:end="183:25"><expr pos:start="183:20" pos:end="183:24"><name pos:start="183:20" pos:end="183:20">j</name> <operator pos:start="183:22" pos:end="183:22">&lt;</operator> <literal type="number" pos:start="183:24" pos:end="183:24">2</literal></expr>;</condition> <incr pos:start="183:27" pos:end="183:29"><expr pos:start="183:27" pos:end="183:29"><name pos:start="183:27" pos:end="183:27">j</name><operator pos:start="183:28" pos:end="183:29">++</operator></expr></incr>)</control> <block pos:start="183:32" pos:end="215:9">{<block_content pos:start="185:13" pos:end="213:75">

            <expr_stmt pos:start="185:13" pos:end="185:46"><expr pos:start="185:13" pos:end="185:45"><name pos:start="185:13" pos:end="185:16">last</name> <operator pos:start="185:18" pos:end="185:18">=</operator> <name pos:start="185:20" pos:end="185:28">subblkpat</name> <operator pos:start="185:30" pos:end="185:30">&amp;</operator> <operator pos:start="185:32" pos:end="185:32">(</operator><literal type="number" pos:start="185:33" pos:end="185:33">1</literal> <operator pos:start="185:35" pos:end="185:36">&lt;&lt;</operator> <operator pos:start="185:38" pos:end="185:38">(</operator><literal type="number" pos:start="185:39" pos:end="185:41">1</literal> <operator pos:start="185:41" pos:end="185:41">-</operator> <name pos:start="185:43" pos:end="185:43">j</name><operator pos:start="185:44" pos:end="185:44">)</operator><operator pos:start="185:45" pos:end="185:45">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="187:13" pos:end="187:18"><expr pos:start="187:13" pos:end="187:17"><name pos:start="187:13" pos:end="187:13">i</name> <operator pos:start="187:15" pos:end="187:15">=</operator> <literal type="number" pos:start="187:17" pos:end="187:17">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="189:13" pos:end="189:24"><expr pos:start="189:13" pos:end="189:23"><name pos:start="189:13" pos:end="189:15">off</name> <operator pos:start="189:17" pos:end="189:17">=</operator> <name pos:start="189:19" pos:end="189:19">j</name> <operator pos:start="189:21" pos:end="189:21">*</operator> <literal type="number" pos:start="189:23" pos:end="189:23">4</literal></expr>;</expr_stmt>

            <while pos:start="191:13" pos:end="209:13">while <condition pos:start="191:19" pos:end="191:25">(<expr pos:start="191:20" pos:end="191:24"><operator pos:start="191:20" pos:end="191:20">!</operator><name pos:start="191:21" pos:end="191:24">last</name></expr>)</condition> <block pos:start="191:27" pos:end="209:13">{<block_content pos:start="193:17" pos:end="207:70">

                <expr_stmt pos:start="193:17" pos:end="193:76"><expr pos:start="193:17" pos:end="193:75"><call pos:start="193:17" pos:end="193:75"><name pos:start="193:17" pos:end="193:35">vc1_decode_ac_coeff</name><argument_list pos:start="193:36" pos:end="193:75">(<argument pos:start="193:37" pos:end="193:37"><expr pos:start="193:37" pos:end="193:37"><name pos:start="193:37" pos:end="193:37">v</name></expr></argument>, <argument pos:start="193:40" pos:end="193:44"><expr pos:start="193:40" pos:end="193:44"><operator pos:start="193:40" pos:end="193:40">&amp;</operator><name pos:start="193:41" pos:end="193:44">last</name></expr></argument>, <argument pos:start="193:47" pos:end="193:51"><expr pos:start="193:47" pos:end="193:51"><operator pos:start="193:47" pos:end="193:47">&amp;</operator><name pos:start="193:48" pos:end="193:51">skip</name></expr></argument>, <argument pos:start="193:54" pos:end="193:59"><expr pos:start="193:54" pos:end="193:59"><operator pos:start="193:54" pos:end="193:54">&amp;</operator><name pos:start="193:55" pos:end="193:59">value</name></expr></argument>, <argument pos:start="193:62" pos:end="193:74"><expr pos:start="193:62" pos:end="193:74"><name pos:start="193:62" pos:end="193:74"><name pos:start="193:62" pos:end="193:62">v</name><operator pos:start="193:63" pos:end="193:64">-&gt;</operator><name pos:start="193:65" pos:end="193:74">codingset2</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="195:17" pos:end="195:26"><expr pos:start="195:17" pos:end="195:25"><name pos:start="195:17" pos:end="195:17">i</name> <operator pos:start="195:19" pos:end="195:20">+=</operator> <name pos:start="195:22" pos:end="195:25">skip</name></expr>;</expr_stmt>

                <if_stmt pos:start="197:17" pos:end="199:26"><if pos:start="197:17" pos:end="199:26">if<condition pos:start="197:19" pos:end="197:26">(<expr pos:start="197:20" pos:end="197:25"><name pos:start="197:20" pos:end="197:20">i</name> <operator pos:start="197:22" pos:end="197:22">&gt;</operator> <literal type="number" pos:start="197:24" pos:end="197:25">31</literal></expr>)</condition><block type="pseudo" pos:start="199:21" pos:end="199:26"><block_content pos:start="199:21" pos:end="199:26">

                    <break pos:start="199:21" pos:end="199:26">break;</break></block_content></block></if></if_stmt>

                <expr_stmt pos:start="201:17" pos:end="201:41"><expr pos:start="201:17" pos:end="201:40"><name pos:start="201:17" pos:end="201:19">idx</name> <operator pos:start="201:21" pos:end="201:21">=</operator> <name pos:start="201:23" pos:end="201:36"><name pos:start="201:23" pos:end="201:23">v</name><operator pos:start="201:24" pos:end="201:25">-&gt;</operator><name pos:start="201:26" pos:end="201:31">zz_4x8</name><index pos:start="201:32" pos:end="201:36">[<expr pos:start="201:33" pos:end="201:35"><name pos:start="201:33" pos:end="201:33">i</name><operator pos:start="201:34" pos:end="201:35">++</operator></expr>]</index></name><operator pos:start="201:37" pos:end="201:37">+</operator><name pos:start="201:38" pos:end="201:40">off</name></expr>;</expr_stmt>

                <expr_stmt pos:start="203:17" pos:end="203:43"><expr pos:start="203:17" pos:end="203:42"><name pos:start="203:17" pos:end="203:26"><name pos:start="203:17" pos:end="203:21">block</name><index pos:start="203:22" pos:end="203:26">[<expr pos:start="203:23" pos:end="203:25"><name pos:start="203:23" pos:end="203:25">idx</name></expr>]</index></name> <operator pos:start="203:28" pos:end="203:28">=</operator> <name pos:start="203:30" pos:end="203:34">value</name> <operator pos:start="203:36" pos:end="203:36">*</operator> <name pos:start="203:38" pos:end="203:42">scale</name></expr>;</expr_stmt>

                <if_stmt pos:start="205:17" pos:end="207:70"><if pos:start="205:17" pos:end="207:70">if<condition pos:start="205:19" pos:end="205:34">(<expr pos:start="205:20" pos:end="205:33"><operator pos:start="205:20" pos:end="205:20">!</operator><name pos:start="205:21" pos:end="205:33"><name pos:start="205:21" pos:end="205:21">v</name><operator pos:start="205:22" pos:end="205:23">-&gt;</operator><name pos:start="205:24" pos:end="205:33">pquantizer</name></name></expr>)</condition><block type="pseudo" pos:start="207:21" pos:end="207:70"><block_content pos:start="207:21" pos:end="207:70">

                    <expr_stmt pos:start="207:21" pos:end="207:70"><expr pos:start="207:21" pos:end="207:69"><name pos:start="207:21" pos:end="207:30"><name pos:start="207:21" pos:end="207:25">block</name><index pos:start="207:26" pos:end="207:30">[<expr pos:start="207:27" pos:end="207:29"><name pos:start="207:27" pos:end="207:29">idx</name></expr>]</index></name> <operator pos:start="207:32" pos:end="207:33">+=</operator> <ternary pos:start="207:35" pos:end="207:69"><condition pos:start="207:35" pos:end="207:52"><expr pos:start="207:35" pos:end="207:50"><operator pos:start="207:35" pos:end="207:35">(</operator><name pos:start="207:36" pos:end="207:45"><name pos:start="207:36" pos:end="207:40">block</name><index pos:start="207:41" pos:end="207:45">[<expr pos:start="207:42" pos:end="207:44"><name pos:start="207:42" pos:end="207:44">idx</name></expr>]</index></name> <operator pos:start="207:47" pos:end="207:47">&lt;</operator> <literal type="number" pos:start="207:49" pos:end="207:49">0</literal><operator pos:start="207:50" pos:end="207:50">)</operator></expr> ?</condition><then pos:start="207:54" pos:end="207:60"> <expr pos:start="207:54" pos:end="207:60"><operator pos:start="207:54" pos:end="207:54">-</operator><name pos:start="207:55" pos:end="207:60">mquant</name></expr> </then><else pos:start="207:62" pos:end="207:69">: <expr pos:start="207:64" pos:end="207:69"><name pos:start="207:64" pos:end="207:69">mquant</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></while>

            <if_stmt pos:start="211:13" pos:end="213:75"><if pos:start="211:13" pos:end="213:75">if<condition pos:start="211:15" pos:end="211:60">(<expr pos:start="211:16" pos:end="211:59"><operator pos:start="211:16" pos:end="211:16">!</operator><operator pos:start="211:17" pos:end="211:17">(</operator><name pos:start="211:18" pos:end="211:26">subblkpat</name> <operator pos:start="211:28" pos:end="211:28">&amp;</operator> <operator pos:start="211:30" pos:end="211:30">(</operator><literal type="number" pos:start="211:31" pos:end="211:31">1</literal> <operator pos:start="211:33" pos:end="211:34">&lt;&lt;</operator> <operator pos:start="211:36" pos:end="211:36">(</operator><literal type="number" pos:start="211:37" pos:end="211:39">1</literal> <operator pos:start="211:39" pos:end="211:39">-</operator> <name pos:start="211:41" pos:end="211:41">j</name><operator pos:start="211:42" pos:end="211:42">)</operator><operator pos:start="211:43" pos:end="211:43">)</operator><operator pos:start="211:44" pos:end="211:44">)</operator> <operator pos:start="211:46" pos:end="211:47">&amp;&amp;</operator> <operator pos:start="211:49" pos:end="211:49">!</operator><name pos:start="211:50" pos:end="211:59">skip_block</name></expr>)</condition><block type="pseudo" pos:start="213:17" pos:end="213:75"><block_content pos:start="213:17" pos:end="213:75">

                <expr_stmt pos:start="213:17" pos:end="213:75"><expr pos:start="213:17" pos:end="213:74"><call pos:start="213:17" pos:end="213:74"><name pos:start="213:17" pos:end="213:40"><name pos:start="213:17" pos:end="213:17">s</name><operator pos:start="213:18" pos:end="213:19">-&gt;</operator><name pos:start="213:20" pos:end="213:22">dsp</name><operator pos:start="213:23" pos:end="213:23">.</operator><name pos:start="213:24" pos:end="213:40">vc1_inv_trans_4x8</name></name><argument_list pos:start="213:41" pos:end="213:74">(<argument pos:start="213:42" pos:end="213:50"><expr pos:start="213:42" pos:end="213:50"><name pos:start="213:42" pos:end="213:44">dst</name> <operator pos:start="213:46" pos:end="213:46">+</operator> <name pos:start="213:48" pos:end="213:48">j</name><operator pos:start="213:49" pos:end="213:49">*</operator><literal type="number" pos:start="213:50" pos:end="213:50">4</literal></expr></argument>, <argument pos:start="213:53" pos:end="213:60"><expr pos:start="213:53" pos:end="213:60"><name pos:start="213:53" pos:end="213:60">linesize</name></expr></argument>, <argument pos:start="213:63" pos:end="213:73"><expr pos:start="213:63" pos:end="213:73"><name pos:start="213:63" pos:end="213:67">block</name> <operator pos:start="213:69" pos:end="213:69">+</operator> <name pos:start="213:71" pos:end="213:73">off</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <break pos:start="217:9" pos:end="217:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="221:5" pos:end="221:13">return <expr pos:start="221:12" pos:end="221:12"><literal type="number" pos:start="221:12" pos:end="221:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
