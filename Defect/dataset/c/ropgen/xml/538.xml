<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/538.c" pos:tabs="8"><function pos:start="1:1" pos:end="60:59"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">vnc_dpy_copy</name><parameter_list pos:start="1:25" pos:end="3:60">(<parameter pos:start="1:26" pos:end="1:51"><decl pos:start="1:26" pos:end="1:51"><type pos:start="1:26" pos:end="1:51"><name pos:start="1:26" pos:end="1:46">DisplayChangeListener</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">dcl</name></decl></parameter>,
                         <parameter pos:start="2:26" pos:end="2:34"><decl pos:start="2:26" pos:end="2:34"><type pos:start="2:26" pos:end="2:34"><name pos:start="2:26" pos:end="2:28">int</name></type> <name pos:start="2:30" pos:end="2:34">src_x</name></decl></parameter>, <parameter pos:start="2:37" pos:end="2:45"><decl pos:start="2:37" pos:end="2:45"><type pos:start="2:37" pos:end="2:45"><name pos:start="2:37" pos:end="2:39">int</name></type> <name pos:start="2:41" pos:end="2:45">src_y</name></decl></parameter>,
                         <parameter pos:start="3:26" pos:end="3:34"><decl pos:start="3:26" pos:end="3:34"><type pos:start="3:26" pos:end="3:34"><name pos:start="3:26" pos:end="3:28">int</name></type> <name pos:start="3:30" pos:end="3:34">dst_x</name></decl></parameter>, <parameter pos:start="3:37" pos:end="3:45"><decl pos:start="3:37" pos:end="3:45"><type pos:start="3:37" pos:end="3:45"><name pos:start="3:37" pos:end="3:39">int</name></type> <name pos:start="3:41" pos:end="3:45">dst_y</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:52"><decl pos:start="3:48" pos:end="3:52"><type pos:start="3:48" pos:end="3:52"><name pos:start="3:48" pos:end="3:50">int</name></type> <name pos:start="3:52" pos:end="3:52">w</name></decl></parameter>, <parameter pos:start="3:55" pos:end="3:59"><decl pos:start="3:55" pos:end="3:59"><type pos:start="3:55" pos:end="3:59"><name pos:start="3:55" pos:end="3:57">int</name></type> <name pos:start="3:59" pos:end="3:59">h</name></decl></parameter>)</parameter_list>
<block pos:start="4:1" pos:end="60:59">{<block_content pos:start="5:5" pos:end="60:59">
    <decl_stmt pos:start="5:5" pos:end="5:56"><decl pos:start="5:5" pos:end="5:55"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">VncDisplay</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:18">vd</name> <init pos:start="5:20" pos:end="5:55">= <expr pos:start="5:22" pos:end="5:55"><call pos:start="5:22" pos:end="5:55"><name pos:start="5:22" pos:end="5:33">container_of</name><argument_list pos:start="5:34" pos:end="5:55">(<argument pos:start="5:35" pos:end="5:37"><expr pos:start="5:35" pos:end="5:37"><name pos:start="5:35" pos:end="5:37">dcl</name></expr></argument>, <argument pos:start="5:40" pos:end="5:49"><expr pos:start="5:40" pos:end="5:49"><name pos:start="5:40" pos:end="5:49">VncDisplay</name></expr></argument>, <argument pos:start="5:52" pos:end="5:54"><expr pos:start="5:52" pos:end="5:54"><name pos:start="5:52" pos:end="5:54">dcl</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:22"><decl pos:start="6:5" pos:end="6:16"><type pos:start="6:5" pos:end="6:14"><name pos:start="6:5" pos:end="6:12">VncState</name> <modifier pos:start="6:14" pos:end="6:14">*</modifier></type><name pos:start="6:15" pos:end="6:16">vs</name></decl>, <decl pos:start="6:19" pos:end="6:21"><type ref="prev" pos:start="6:5" pos:end="6:14"><modifier pos:start="6:19" pos:end="6:19">*</modifier></type><name pos:start="6:20" pos:end="6:21">vn</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:20">src_row</name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:21"><decl pos:start="8:5" pos:end="8:20"><type pos:start="8:5" pos:end="8:13"><name pos:start="8:5" pos:end="8:11">uint8_t</name> <modifier pos:start="8:13" pos:end="8:13">*</modifier></type><name pos:start="8:14" pos:end="8:20">dst_row</name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">x</name></decl>, <decl pos:start="9:15" pos:end="9:15"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:15">y</name></decl>, <decl pos:start="9:18" pos:end="9:22"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:18" pos:end="9:22">pitch</name></decl>, <decl pos:start="9:25" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:25" pos:end="9:27">inc</name></decl>, <decl pos:start="9:30" pos:end="9:34"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:30" pos:end="9:34">w_lim</name></decl>, <decl pos:start="9:37" pos:end="9:37"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:37" pos:end="9:37">s</name></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:18"><decl pos:start="10:5" pos:end="10:17"><type pos:start="10:5" pos:end="10:7"><name pos:start="10:5" pos:end="10:7">int</name></type> <name pos:start="10:9" pos:end="10:17">cmp_bytes</name></decl>;</decl_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:35"><expr pos:start="11:5" pos:end="11:34"><call pos:start="11:5" pos:end="11:34"><name pos:start="11:5" pos:end="11:30">vnc_refresh_server_surface</name><argument_list pos:start="11:31" pos:end="11:34">(<argument pos:start="11:32" pos:end="11:33"><expr pos:start="11:32" pos:end="11:33"><name pos:start="11:32" pos:end="11:33">vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <macro pos:start="12:5" pos:end="12:51"><name pos:start="12:5" pos:end="12:23">QTAILQ_FOREACH_SAFE</name><argument_list pos:start="12:24" pos:end="12:51">(<argument pos:start="12:25" pos:end="12:26">vs</argument>, <argument pos:start="12:29" pos:end="12:40">&amp;vd-&gt;clients</argument>, <argument pos:start="12:43" pos:end="12:46">next</argument>, <argument pos:start="12:49" pos:end="12:50">vn</argument>)</argument_list></macro> <block pos:start="12:53" pos:end="60:59">{<block_content pos:start="13:9" pos:end="60:59">
        <if_stmt pos:start="13:9" pos:end="60:59"><if pos:start="13:9" pos:end="60:59">if <condition pos:start="13:12" pos:end="13:54">(<expr pos:start="13:13" pos:end="13:53"><call pos:start="13:13" pos:end="13:53"><name pos:start="13:13" pos:end="13:27">vnc_has_feature</name><argument_list pos:start="13:28" pos:end="13:53">(<argument pos:start="13:29" pos:end="13:30"><expr pos:start="13:29" pos:end="13:30"><name pos:start="13:29" pos:end="13:30">vs</name></expr></argument>, <argument pos:start="13:33" pos:end="13:52"><expr pos:start="13:33" pos:end="13:52"><name pos:start="13:33" pos:end="13:52">VNC_FEATURE_COPYRECT</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:56" pos:end="60:59">{<block_content pos:start="14:13" pos:end="60:59">
            <expr_stmt pos:start="14:13" pos:end="14:33"><expr pos:start="14:13" pos:end="14:32"><name pos:start="14:13" pos:end="14:28"><name pos:start="14:13" pos:end="14:14">vs</name><operator pos:start="14:15" pos:end="14:16">-&gt;</operator><name pos:start="14:17" pos:end="14:28">force_update</name></name> <operator pos:start="14:30" pos:end="14:30">=</operator> <literal type="number" pos:start="14:32" pos:end="14:32">1</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="15:13" pos:end="15:43"><expr pos:start="15:13" pos:end="15:42"><call pos:start="15:13" pos:end="15:42"><name pos:start="15:13" pos:end="15:29">vnc_update_client</name><argument_list pos:start="15:30" pos:end="15:42">(<argument pos:start="15:31" pos:end="15:32"><expr pos:start="15:31" pos:end="15:32"><name pos:start="15:31" pos:end="15:32">vs</name></expr></argument>, <argument pos:start="15:35" pos:end="15:35"><expr pos:start="15:35" pos:end="15:35"><literal type="number" pos:start="15:35" pos:end="15:35">1</literal></expr></argument>, <argument pos:start="15:38" pos:end="15:41"><expr pos:start="15:38" pos:end="15:41"><name pos:start="15:38" pos:end="15:41">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <comment type="block" pos:start="16:13" pos:end="16:43">/* vs might be free()ed here */</comment>
    <comment type="block" pos:start="17:5" pos:end="17:48">/* do bitblit op on the local surface too */</comment>
    <expr_stmt pos:start="18:5" pos:end="18:37"><expr pos:start="18:5" pos:end="18:36"><name pos:start="18:5" pos:end="18:9">pitch</name> <operator pos:start="18:11" pos:end="18:11">=</operator> <call pos:start="18:13" pos:end="18:36"><name pos:start="18:13" pos:end="18:32">vnc_server_fb_stride</name><argument_list pos:start="18:33" pos:end="18:36">(<argument pos:start="18:34" pos:end="18:35"><expr pos:start="18:34" pos:end="18:35"><name pos:start="18:34" pos:end="18:35">vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="19:5" pos:end="19:50"><expr pos:start="19:5" pos:end="19:49"><name pos:start="19:5" pos:end="19:11">src_row</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:49"><name pos:start="19:15" pos:end="19:31">vnc_server_fb_ptr</name><argument_list pos:start="19:32" pos:end="19:49">(<argument pos:start="19:33" pos:end="19:34"><expr pos:start="19:33" pos:end="19:34"><name pos:start="19:33" pos:end="19:34">vd</name></expr></argument>, <argument pos:start="19:37" pos:end="19:41"><expr pos:start="19:37" pos:end="19:41"><name pos:start="19:37" pos:end="19:41">src_x</name></expr></argument>, <argument pos:start="19:44" pos:end="19:48"><expr pos:start="19:44" pos:end="19:48"><name pos:start="19:44" pos:end="19:48">src_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="20:5" pos:end="20:50"><expr pos:start="20:5" pos:end="20:49"><name pos:start="20:5" pos:end="20:11">dst_row</name> <operator pos:start="20:13" pos:end="20:13">=</operator> <call pos:start="20:15" pos:end="20:49"><name pos:start="20:15" pos:end="20:31">vnc_server_fb_ptr</name><argument_list pos:start="20:32" pos:end="20:49">(<argument pos:start="20:33" pos:end="20:34"><expr pos:start="20:33" pos:end="20:34"><name pos:start="20:33" pos:end="20:34">vd</name></expr></argument>, <argument pos:start="20:37" pos:end="20:41"><expr pos:start="20:37" pos:end="20:41"><name pos:start="20:37" pos:end="20:41">dst_x</name></expr></argument>, <argument pos:start="20:44" pos:end="20:48"><expr pos:start="20:44" pos:end="20:48"><name pos:start="20:44" pos:end="20:48">dst_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="21:5" pos:end="21:14"><expr pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:5">y</name> <operator pos:start="21:7" pos:end="21:7">=</operator> <name pos:start="21:9" pos:end="21:13">dst_y</name></expr>;</expr_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:12"><expr pos:start="22:5" pos:end="22:11"><name pos:start="22:5" pos:end="22:7">inc</name> <operator pos:start="22:9" pos:end="22:9">=</operator> <literal type="number" pos:start="22:11" pos:end="22:11">1</literal></expr>;</expr_stmt>
    <if_stmt pos:start="23:5" pos:end="60:59"><if pos:start="23:5" pos:end="60:59">if <condition pos:start="23:8" pos:end="23:22">(<expr pos:start="23:9" pos:end="23:21"><name pos:start="23:9" pos:end="23:13">dst_y</name> <operator pos:start="23:15" pos:end="23:15">&gt;</operator> <name pos:start="23:17" pos:end="23:21">src_y</name></expr>)</condition> <block pos:start="23:24" pos:end="60:59">{<block_content pos:start="25:9" pos:end="60:59">
        <comment type="block" pos:start="24:9" pos:end="24:28">/* copy backwards */</comment>
        <expr_stmt pos:start="25:9" pos:end="25:33"><expr pos:start="25:9" pos:end="25:32"><name pos:start="25:9" pos:end="25:15">src_row</name> <operator pos:start="25:17" pos:end="25:18">+=</operator> <name pos:start="25:20" pos:end="25:24">pitch</name> <operator pos:start="25:26" pos:end="25:26">*</operator> <operator pos:start="25:28" pos:end="25:28">(</operator><name pos:start="25:29" pos:end="25:29">h</name><operator pos:start="25:30" pos:end="25:30">-</operator><literal type="number" pos:start="25:31" pos:end="25:31">1</literal><operator pos:start="25:32" pos:end="25:32">)</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="26:9" pos:end="26:33"><expr pos:start="26:9" pos:end="26:32"><name pos:start="26:9" pos:end="26:15">dst_row</name> <operator pos:start="26:17" pos:end="26:18">+=</operator> <name pos:start="26:20" pos:end="26:24">pitch</name> <operator pos:start="26:26" pos:end="26:26">*</operator> <operator pos:start="26:28" pos:end="26:28">(</operator><name pos:start="26:29" pos:end="26:29">h</name><operator pos:start="26:30" pos:end="26:30">-</operator><literal type="number" pos:start="26:31" pos:end="26:31">1</literal><operator pos:start="26:32" pos:end="26:32">)</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="27:9" pos:end="27:23"><expr pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:13">pitch</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <operator pos:start="27:17" pos:end="27:17">-</operator><name pos:start="27:18" pos:end="27:22">pitch</name></expr>;</expr_stmt>
        <expr_stmt pos:start="28:9" pos:end="28:26"><expr pos:start="28:9" pos:end="28:25"><name pos:start="28:9" pos:end="28:9">y</name> <operator pos:start="28:11" pos:end="28:11">=</operator> <name pos:start="28:13" pos:end="28:17">dst_y</name> <operator pos:start="28:19" pos:end="28:19">+</operator> <name pos:start="28:21" pos:end="28:21">h</name> <operator pos:start="28:23" pos:end="28:23">-</operator> <literal type="number" pos:start="28:25" pos:end="28:25">1</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="29:9" pos:end="29:17"><expr pos:start="29:9" pos:end="29:16"><name pos:start="29:9" pos:end="29:11">inc</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <operator pos:start="29:15" pos:end="29:15">-</operator><literal type="number" pos:start="29:16" pos:end="29:16">1</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="30:5" pos:end="30:80"><expr pos:start="30:5" pos:end="30:79"><name pos:start="30:5" pos:end="30:9">w_lim</name> <operator pos:start="30:11" pos:end="30:11">=</operator> <name pos:start="30:13" pos:end="30:13">w</name> <operator pos:start="30:15" pos:end="30:15">-</operator> <operator pos:start="30:17" pos:end="30:17">(</operator><name pos:start="30:18" pos:end="30:41">VNC_DIRTY_PIXELS_PER_BIT</name> <operator pos:start="30:43" pos:end="30:43">-</operator> <operator pos:start="30:45" pos:end="30:45">(</operator><name pos:start="30:46" pos:end="30:50">dst_x</name> <operator pos:start="30:52" pos:end="30:52">%</operator> <name pos:start="30:54" pos:end="30:77">VNC_DIRTY_PIXELS_PER_BIT</name><operator pos:start="30:78" pos:end="30:78">)</operator><operator pos:start="30:79" pos:end="30:79">)</operator></expr>;</expr_stmt>
    <if_stmt pos:start="31:5" pos:end="60:59"><if pos:start="31:5" pos:end="33:5">if <condition pos:start="31:8" pos:end="31:18">(<expr pos:start="31:9" pos:end="31:17"><name pos:start="31:9" pos:end="31:13">w_lim</name> <operator pos:start="31:15" pos:end="31:15">&lt;</operator> <literal type="number" pos:start="31:17" pos:end="31:17">0</literal></expr>)</condition> <block pos:start="31:20" pos:end="33:5">{<block_content pos:start="32:9" pos:end="32:18">
        <expr_stmt pos:start="32:9" pos:end="32:18"><expr pos:start="32:9" pos:end="32:17"><name pos:start="32:9" pos:end="32:13">w_lim</name> <operator pos:start="32:15" pos:end="32:15">=</operator> <name pos:start="32:17" pos:end="32:17">w</name></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="33:7" pos:end="60:59">else <block pos:start="33:12" pos:end="60:59">{<block_content pos:start="34:9" pos:end="60:59">
        <expr_stmt pos:start="34:9" pos:end="34:55"><expr pos:start="34:9" pos:end="34:54"><name pos:start="34:9" pos:end="34:13">w_lim</name> <operator pos:start="34:15" pos:end="34:15">=</operator> <name pos:start="34:17" pos:end="34:17">w</name> <operator pos:start="34:19" pos:end="34:19">-</operator> <operator pos:start="34:21" pos:end="34:21">(</operator><name pos:start="34:22" pos:end="34:26">w_lim</name> <operator pos:start="34:28" pos:end="34:28">%</operator> <name pos:start="34:30" pos:end="34:53">VNC_DIRTY_PIXELS_PER_BIT</name><operator pos:start="34:54" pos:end="34:54">)</operator></expr>;</expr_stmt>
    <for pos:start="35:5" pos:end="60:59">for <control pos:start="35:9" pos:end="35:27">(<init pos:start="35:10" pos:end="35:15"><expr pos:start="35:10" pos:end="35:14"><name pos:start="35:10" pos:end="35:10">i</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <literal type="number" pos:start="35:14" pos:end="35:14">0</literal></expr>;</init> <condition pos:start="35:17" pos:end="35:22"><expr pos:start="35:17" pos:end="35:21"><name pos:start="35:17" pos:end="35:17">i</name> <operator pos:start="35:19" pos:end="35:19">&lt;</operator> <name pos:start="35:21" pos:end="35:21">h</name></expr>;</condition> <incr pos:start="35:24" pos:end="35:26"><expr pos:start="35:24" pos:end="35:26"><name pos:start="35:24" pos:end="35:24">i</name><operator pos:start="35:25" pos:end="35:26">++</operator></expr></incr>)</control> <block pos:start="35:29" pos:end="60:59">{<block_content pos:start="36:9" pos:end="60:59">
        <for pos:start="36:9" pos:end="60:59">for <control pos:start="36:13" pos:end="37:67">(<init pos:start="36:14" pos:end="36:19"><expr pos:start="36:14" pos:end="36:18"><name pos:start="36:14" pos:end="36:14">x</name> <operator pos:start="36:16" pos:end="36:16">=</operator> <literal type="number" pos:start="36:18" pos:end="36:18">0</literal></expr>;</init> <condition pos:start="36:21" pos:end="36:31"><expr pos:start="36:21" pos:end="36:30"><name pos:start="36:21" pos:end="36:21">x</name> <operator pos:start="36:23" pos:end="36:24">&lt;=</operator> <name pos:start="36:26" pos:end="36:30">w_lim</name></expr>;</condition>
                <incr pos:start="37:17" pos:end="37:66"><expr pos:start="37:17" pos:end="37:22"><name pos:start="37:17" pos:end="37:17">x</name> <operator pos:start="37:19" pos:end="37:20">+=</operator> <name pos:start="37:22" pos:end="37:22">s</name></expr><operator pos:start="37:23" pos:end="37:23">,</operator> <expr pos:start="37:25" pos:end="37:44"><name pos:start="37:25" pos:end="37:31">src_row</name> <operator pos:start="37:33" pos:end="37:34">+=</operator> <name pos:start="37:36" pos:end="37:44">cmp_bytes</name></expr><operator pos:start="37:45" pos:end="37:45">,</operator> <expr pos:start="37:47" pos:end="37:66"><name pos:start="37:47" pos:end="37:53">dst_row</name> <operator pos:start="37:55" pos:end="37:56">+=</operator> <name pos:start="37:58" pos:end="37:66">cmp_bytes</name></expr></incr>)</control> <block pos:start="37:69" pos:end="60:59">{<block_content pos:start="38:13" pos:end="60:59">
            <if_stmt pos:start="38:13" pos:end="60:59"><if pos:start="38:13" pos:end="41:13">if <condition pos:start="38:16" pos:end="38:27">(<expr pos:start="38:17" pos:end="38:26"><name pos:start="38:17" pos:end="38:17">x</name> <operator pos:start="38:19" pos:end="38:20">==</operator> <name pos:start="38:22" pos:end="38:26">w_lim</name></expr>)</condition> <block pos:start="38:29" pos:end="41:13">{<block_content pos:start="39:17" pos:end="40:26">
                <if_stmt pos:start="39:17" pos:end="40:26"><if pos:start="39:17" pos:end="40:26">if <condition pos:start="39:20" pos:end="39:41">(<expr pos:start="39:21" pos:end="39:40"><operator pos:start="39:21" pos:end="39:21">(</operator><name pos:start="39:22" pos:end="39:22">s</name> <operator pos:start="39:24" pos:end="39:24">=</operator> <name pos:start="39:26" pos:end="39:26">w</name> <operator pos:start="39:28" pos:end="39:28">-</operator> <name pos:start="39:30" pos:end="39:34">w_lim</name><operator pos:start="39:35" pos:end="39:35">)</operator> <operator pos:start="39:37" pos:end="39:38">==</operator> <literal type="number" pos:start="39:40" pos:end="39:40">0</literal></expr>)</condition><block type="pseudo" pos:start="40:21" pos:end="40:26"><block_content pos:start="40:21" pos:end="40:26">
                    <break pos:start="40:21" pos:end="40:26">break;</break></block_content></block></if></if_stmt>
            </block_content>}</block></if> <if type="elseif" pos:start="41:15" pos:end="45:13">else if <condition pos:start="41:23" pos:end="41:26">(<expr pos:start="41:24" pos:end="41:25"><operator pos:start="41:24" pos:end="41:24">!</operator><name pos:start="41:25" pos:end="41:25">x</name></expr>)</condition> <block pos:start="41:28" pos:end="45:13">{<block_content pos:start="42:17" pos:end="44:34">
                <expr_stmt pos:start="42:17" pos:end="43:56"><expr pos:start="42:17" pos:end="43:55"><name pos:start="42:17" pos:end="42:17">s</name> <operator pos:start="42:19" pos:end="42:19">=</operator> <operator pos:start="42:21" pos:end="42:21">(</operator><name pos:start="42:22" pos:end="42:45">VNC_DIRTY_PIXELS_PER_BIT</name> <operator pos:start="42:47" pos:end="42:47">-</operator>
                    <operator pos:start="43:21" pos:end="43:21">(</operator><name pos:start="43:22" pos:end="43:26">dst_x</name> <operator pos:start="43:28" pos:end="43:28">%</operator> <name pos:start="43:30" pos:end="43:53">VNC_DIRTY_PIXELS_PER_BIT</name><operator pos:start="43:54" pos:end="43:54">)</operator><operator pos:start="43:55" pos:end="43:55">)</operator></expr>;</expr_stmt>
                <expr_stmt pos:start="44:17" pos:end="44:34"><expr pos:start="44:17" pos:end="44:33"><name pos:start="44:17" pos:end="44:17">s</name> <operator pos:start="44:19" pos:end="44:19">=</operator> <call pos:start="44:21" pos:end="44:33"><name pos:start="44:21" pos:end="44:23">MIN</name><argument_list pos:start="44:24" pos:end="44:33">(<argument pos:start="44:25" pos:end="44:25"><expr pos:start="44:25" pos:end="44:25"><name pos:start="44:25" pos:end="44:25">s</name></expr></argument>, <argument pos:start="44:28" pos:end="44:32"><expr pos:start="44:28" pos:end="44:32"><name pos:start="44:28" pos:end="44:32">w_lim</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if> <else pos:start="45:15" pos:end="60:59">else <block pos:start="45:20" pos:end="60:59">{<block_content pos:start="46:17" pos:end="60:59">
                <expr_stmt pos:start="46:17" pos:end="46:45"><expr pos:start="46:17" pos:end="46:44"><name pos:start="46:17" pos:end="46:17">s</name> <operator pos:start="46:19" pos:end="46:19">=</operator> <name pos:start="46:21" pos:end="46:44">VNC_DIRTY_PIXELS_PER_BIT</name></expr>;</expr_stmt>
            <expr_stmt pos:start="47:13" pos:end="47:48"><expr pos:start="47:13" pos:end="47:47"><name pos:start="47:13" pos:end="47:21">cmp_bytes</name> <operator pos:start="47:23" pos:end="47:23">=</operator> <name pos:start="47:25" pos:end="47:25">s</name> <operator pos:start="47:27" pos:end="47:27">*</operator> <name pos:start="47:29" pos:end="47:47">VNC_SERVER_FB_BYTES</name></expr>;</expr_stmt>
            <if_stmt pos:start="48:13" pos:end="49:25"><if pos:start="48:13" pos:end="49:25">if <condition pos:start="48:16" pos:end="48:57">(<expr pos:start="48:17" pos:end="48:56"><call pos:start="48:17" pos:end="48:51"><name pos:start="48:17" pos:end="48:22">memcmp</name><argument_list pos:start="48:23" pos:end="48:51">(<argument pos:start="48:24" pos:end="48:30"><expr pos:start="48:24" pos:end="48:30"><name pos:start="48:24" pos:end="48:30">src_row</name></expr></argument>, <argument pos:start="48:33" pos:end="48:39"><expr pos:start="48:33" pos:end="48:39"><name pos:start="48:33" pos:end="48:39">dst_row</name></expr></argument>, <argument pos:start="48:42" pos:end="48:50"><expr pos:start="48:42" pos:end="48:50"><name pos:start="48:42" pos:end="48:50">cmp_bytes</name></expr></argument>)</argument_list></call> <operator pos:start="48:53" pos:end="48:54">==</operator> <literal type="number" pos:start="48:56" pos:end="48:56">0</literal></expr>)</condition><block type="pseudo" pos:start="49:17" pos:end="49:25"><block_content pos:start="49:17" pos:end="49:25">
                <continue pos:start="49:17" pos:end="49:25">continue;</continue></block_content></block></if></if_stmt>
            <expr_stmt pos:start="50:13" pos:end="50:49"><expr pos:start="50:13" pos:end="50:48"><call pos:start="50:13" pos:end="50:48"><name pos:start="50:13" pos:end="50:19">memmove</name><argument_list pos:start="50:20" pos:end="50:48">(<argument pos:start="50:21" pos:end="50:27"><expr pos:start="50:21" pos:end="50:27"><name pos:start="50:21" pos:end="50:27">dst_row</name></expr></argument>, <argument pos:start="50:30" pos:end="50:36"><expr pos:start="50:30" pos:end="50:36"><name pos:start="50:30" pos:end="50:36">src_row</name></expr></argument>, <argument pos:start="50:39" pos:end="50:47"><expr pos:start="50:39" pos:end="50:47"><name pos:start="50:39" pos:end="50:47">cmp_bytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <macro pos:start="51:13" pos:end="51:50"><name pos:start="51:13" pos:end="51:26">QTAILQ_FOREACH</name><argument_list pos:start="51:27" pos:end="51:50">(<argument pos:start="51:28" pos:end="51:29">vs</argument>, <argument pos:start="51:32" pos:end="51:43">&amp;vd-&gt;clients</argument>, <argument pos:start="51:46" pos:end="51:49">next</argument>)</argument_list></macro> <block pos:start="51:52" pos:end="60:59">{<block_content pos:start="52:17" pos:end="60:59">
                <if_stmt pos:start="52:17" pos:end="60:59"><if pos:start="52:17" pos:end="60:59">if <condition pos:start="52:20" pos:end="52:63">(<expr pos:start="52:21" pos:end="52:62"><operator pos:start="52:21" pos:end="52:21">!</operator><call pos:start="52:22" pos:end="52:62"><name pos:start="52:22" pos:end="52:36">vnc_has_feature</name><argument_list pos:start="52:37" pos:end="52:62">(<argument pos:start="52:38" pos:end="52:39"><expr pos:start="52:38" pos:end="52:39"><name pos:start="52:38" pos:end="52:39">vs</name></expr></argument>, <argument pos:start="52:42" pos:end="52:61"><expr pos:start="52:42" pos:end="52:61"><name pos:start="52:42" pos:end="52:61">VNC_FEATURE_COPYRECT</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="52:65" pos:end="60:59">{<block_content pos:start="53:21" pos:end="60:59">
                    <expr_stmt pos:start="53:21" pos:end="54:42"><expr pos:start="53:21" pos:end="54:41"><call pos:start="53:21" pos:end="54:41"><name pos:start="53:21" pos:end="53:27">set_bit</name><argument_list pos:start="53:28" pos:end="54:41">(<argument pos:start="53:29" pos:end="53:68"><expr pos:start="53:29" pos:end="53:68"><operator pos:start="53:29" pos:end="53:29">(</operator><operator pos:start="53:30" pos:end="53:30">(</operator><name pos:start="53:31" pos:end="53:31">x</name> <operator pos:start="53:33" pos:end="53:33">+</operator> <name pos:start="53:35" pos:end="53:39">dst_x</name><operator pos:start="53:40" pos:end="53:40">)</operator> <operator pos:start="53:42" pos:end="53:42">/</operator> <name pos:start="53:44" pos:end="53:67">VNC_DIRTY_PIXELS_PER_BIT</name><operator pos:start="53:68" pos:end="53:68">)</operator></expr></argument>,
                            <argument pos:start="54:29" pos:end="54:40"><expr pos:start="54:29" pos:end="54:40"><name pos:start="54:29" pos:end="54:40"><name pos:start="54:29" pos:end="54:30">vs</name><operator pos:start="54:31" pos:end="54:32">-&gt;</operator><name pos:start="54:33" pos:end="54:37">dirty</name><index pos:start="54:38" pos:end="54:40">[<expr pos:start="54:39" pos:end="54:39"><name pos:start="54:39" pos:end="54:39">y</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="55:9" pos:end="55:51"><expr pos:start="55:9" pos:end="55:50"><name pos:start="55:9" pos:end="55:15">src_row</name> <operator pos:start="55:17" pos:end="55:18">+=</operator> <name pos:start="55:20" pos:end="55:24">pitch</name> <operator pos:start="55:26" pos:end="55:26">-</operator> <name pos:start="55:28" pos:end="55:28">w</name> <operator pos:start="55:30" pos:end="55:30">*</operator> <name pos:start="55:32" pos:end="55:50">VNC_SERVER_FB_BYTES</name></expr>;</expr_stmt>
        <expr_stmt pos:start="56:9" pos:end="56:51"><expr pos:start="56:9" pos:end="56:50"><name pos:start="56:9" pos:end="56:15">dst_row</name> <operator pos:start="56:17" pos:end="56:18">+=</operator> <name pos:start="56:20" pos:end="56:24">pitch</name> <operator pos:start="56:26" pos:end="56:26">-</operator> <name pos:start="56:28" pos:end="56:28">w</name> <operator pos:start="56:30" pos:end="56:30">*</operator> <name pos:start="56:32" pos:end="56:50">VNC_SERVER_FB_BYTES</name></expr>;</expr_stmt>
        <expr_stmt pos:start="57:9" pos:end="57:17"><expr pos:start="57:9" pos:end="57:16"><name pos:start="57:9" pos:end="57:9">y</name> <operator pos:start="57:11" pos:end="57:12">+=</operator> <name pos:start="57:14" pos:end="57:16">inc</name></expr>;</expr_stmt>
    <macro pos:start="58:5" pos:end="58:42"><name pos:start="58:5" pos:end="58:18">QTAILQ_FOREACH</name><argument_list pos:start="58:19" pos:end="58:42">(<argument pos:start="58:20" pos:end="58:21">vs</argument>, <argument pos:start="58:24" pos:end="58:35">&amp;vd-&gt;clients</argument>, <argument pos:start="58:38" pos:end="58:41">next</argument>)</argument_list></macro> <block pos:start="58:44" pos:end="60:59">{<block_content pos:start="59:9" pos:end="60:59">
        <if_stmt pos:start="59:9" pos:end="60:59"><if pos:start="59:9" pos:end="60:59">if <condition pos:start="59:12" pos:end="59:54">(<expr pos:start="59:13" pos:end="59:53"><call pos:start="59:13" pos:end="59:53"><name pos:start="59:13" pos:end="59:27">vnc_has_feature</name><argument_list pos:start="59:28" pos:end="59:53">(<argument pos:start="59:29" pos:end="59:30"><expr pos:start="59:29" pos:end="59:30"><name pos:start="59:29" pos:end="59:30">vs</name></expr></argument>, <argument pos:start="59:33" pos:end="59:52"><expr pos:start="59:33" pos:end="59:52"><name pos:start="59:33" pos:end="59:52">VNC_FEATURE_COPYRECT</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="59:56" pos:end="60:59">{<block_content pos:start="60:13" pos:end="60:59">
            <expr_stmt pos:start="60:13" pos:end="60:59"><expr pos:start="60:13" pos:end="60:58"><call pos:start="60:13" pos:end="60:58"><name pos:start="60:13" pos:end="60:20">vnc_copy</name><argument_list pos:start="60:21" pos:end="60:58">(<argument pos:start="60:22" pos:end="60:23"><expr pos:start="60:22" pos:end="60:23"><name pos:start="60:22" pos:end="60:23">vs</name></expr></argument>, <argument pos:start="60:26" pos:end="60:30"><expr pos:start="60:26" pos:end="60:30"><name pos:start="60:26" pos:end="60:30">src_x</name></expr></argument>, <argument pos:start="60:33" pos:end="60:37"><expr pos:start="60:33" pos:end="60:37"><name pos:start="60:33" pos:end="60:37">src_y</name></expr></argument>, <argument pos:start="60:40" pos:end="60:44"><expr pos:start="60:40" pos:end="60:44"><name pos:start="60:40" pos:end="60:44">dst_x</name></expr></argument>, <argument pos:start="60:47" pos:end="60:51"><expr pos:start="60:47" pos:end="60:51"><name pos:start="60:47" pos:end="60:51">dst_y</name></expr></argument>, <argument pos:start="60:54" pos:end="60:54"><expr pos:start="60:54" pos:end="60:54"><name pos:start="60:54" pos:end="60:54">w</name></expr></argument>, <argument pos:start="60:57" pos:end="60:57"><expr pos:start="60:57" pos:end="60:57"><name pos:start="60:57" pos:end="60:57">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></block_content></block></if></if_stmt></block_content></block></block_content></block></else></if_stmt></block_content></block></for></block_content></block></for></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></block_content></block></function></unit>
