<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/976.c" pos:tabs="8"><function pos:start="1:1" pos:end="153:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">commit_direntries</name><parameter_list pos:start="1:29" pos:end="3:48">(<parameter pos:start="1:30" pos:end="1:46"><decl pos:start="1:30" pos:end="1:46"><type pos:start="1:30" pos:end="1:46"><name pos:start="1:30" pos:end="1:43">BDRVVVFATState</name><modifier pos:start="1:44" pos:end="1:44">*</modifier></type> <name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>,

	<parameter pos:start="3:9" pos:end="3:21"><decl pos:start="3:9" pos:end="3:21"><type pos:start="3:9" pos:end="3:21"><name pos:start="3:9" pos:end="3:11">int</name></type> <name pos:start="3:13" pos:end="3:21">dir_index</name></decl></parameter>, <parameter pos:start="3:24" pos:end="3:47"><decl pos:start="3:24" pos:end="3:47"><type pos:start="3:24" pos:end="3:47"><name pos:start="3:24" pos:end="3:26">int</name></type> <name pos:start="3:28" pos:end="3:47">parent_mapping_index</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="153:1">{<block_content pos:start="7:5" pos:end="151:13">

    <decl_stmt pos:start="7:5" pos:end="7:65"><decl pos:start="7:5" pos:end="7:64"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:14">direntry_t</name><modifier pos:start="7:15" pos:end="7:15">*</modifier></type> <name pos:start="7:17" pos:end="7:24">direntry</name> <init pos:start="7:26" pos:end="7:64">= <expr pos:start="7:28" pos:end="7:64"><call pos:start="7:28" pos:end="7:64"><name pos:start="7:28" pos:end="7:36">array_get</name><argument_list pos:start="7:37" pos:end="7:64">(<argument pos:start="7:38" pos:end="7:52"><expr pos:start="7:38" pos:end="7:52"><operator pos:start="7:38" pos:end="7:38">&amp;</operator><operator pos:start="7:39" pos:end="7:39">(</operator><name pos:start="7:40" pos:end="7:51"><name pos:start="7:40" pos:end="7:40">s</name><operator pos:start="7:41" pos:end="7:42">-&gt;</operator><name pos:start="7:43" pos:end="7:51">directory</name></name><operator pos:start="7:52" pos:end="7:52">)</operator></expr></argument>, <argument pos:start="7:55" pos:end="7:63"><expr pos:start="7:55" pos:end="7:63"><name pos:start="7:55" pos:end="7:63">dir_index</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:78"><decl pos:start="9:5" pos:end="9:77"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:26">first_cluster</name> <init pos:start="9:28" pos:end="9:77">= <expr pos:start="9:30" pos:end="9:77"><ternary pos:start="9:30" pos:end="9:77"><condition pos:start="9:30" pos:end="9:45"><expr pos:start="9:30" pos:end="9:43"><name pos:start="9:30" pos:end="9:38">dir_index</name> <operator pos:start="9:40" pos:end="9:41">==</operator> <literal type="number" pos:start="9:43" pos:end="9:43">0</literal></expr> ?</condition><then pos:start="9:47" pos:end="9:47"> <expr pos:start="9:47" pos:end="9:47"><literal type="number" pos:start="9:47" pos:end="9:47">0</literal></expr> </then><else pos:start="9:49" pos:end="9:77">: <expr pos:start="9:51" pos:end="9:77"><call pos:start="9:51" pos:end="9:77"><name pos:start="9:51" pos:end="9:67">begin_of_direntry</name><argument_list pos:start="9:68" pos:end="9:77">(<argument pos:start="9:69" pos:end="9:76"><expr pos:start="9:69" pos:end="9:76"><name pos:start="9:69" pos:end="9:76">direntry</name></expr></argument>)</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:68"><decl pos:start="11:5" pos:end="11:67"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:13">mapping_t</name><modifier pos:start="11:14" pos:end="11:14">*</modifier></type> <name pos:start="11:16" pos:end="11:22">mapping</name> <init pos:start="11:24" pos:end="11:67">= <expr pos:start="11:26" pos:end="11:67"><call pos:start="11:26" pos:end="11:67"><name pos:start="11:26" pos:end="11:49">find_mapping_for_cluster</name><argument_list pos:start="11:50" pos:end="11:67">(<argument pos:start="11:51" pos:end="11:51"><expr pos:start="11:51" pos:end="11:51"><name pos:start="11:51" pos:end="11:51">s</name></expr></argument>, <argument pos:start="11:54" pos:end="11:66"><expr pos:start="11:54" pos:end="11:66"><name pos:start="11:54" pos:end="11:66">first_cluster</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="15:5" pos:end="15:47"><decl pos:start="15:5" pos:end="15:46"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:14">factor</name> <init pos:start="15:16" pos:end="15:46">= <expr pos:start="15:18" pos:end="15:46"><literal type="number" pos:start="15:18" pos:end="15:21">0x10</literal> <operator pos:start="15:23" pos:end="15:23">*</operator> <name pos:start="15:25" pos:end="15:46"><name pos:start="15:25" pos:end="15:25">s</name><operator pos:start="15:26" pos:end="15:27">-&gt;</operator><name pos:start="15:28" pos:end="15:46">sectors_per_cluster</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:45"><decl pos:start="17:5" pos:end="17:25"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:25">old_cluster_count</name></decl>, <decl pos:start="17:28" pos:end="17:44"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:28" pos:end="17:44">new_cluster_count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:62"><decl pos:start="19:5" pos:end="19:61"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:25">current_dir_index</name> <init pos:start="19:27" pos:end="19:61">= <expr pos:start="19:29" pos:end="19:61"><name pos:start="19:29" pos:end="19:61"><name pos:start="19:29" pos:end="19:35">mapping</name><operator pos:start="19:36" pos:end="19:37">-&gt;</operator><name pos:start="19:38" pos:end="19:41">info</name><operator pos:start="19:42" pos:end="19:42">.</operator><name pos:start="19:43" pos:end="19:45">dir</name><operator pos:start="19:46" pos:end="19:46">.</operator><name pos:start="19:47" pos:end="19:61">first_dir_index</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:44"><decl pos:start="21:5" pos:end="21:43"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:23">first_dir_index</name> <init pos:start="21:25" pos:end="21:43">= <expr pos:start="21:27" pos:end="21:43"><name pos:start="21:27" pos:end="21:43">current_dir_index</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:15"><decl pos:start="23:5" pos:end="23:11"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:11">ret</name></decl>, <decl pos:start="23:14" pos:end="23:14"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:14" pos:end="23:14">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:15"><decl pos:start="25:5" pos:end="25:14"><type pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:12">uint32_t</name></type> <name pos:start="25:14" pos:end="25:14">c</name></decl>;</decl_stmt>



<expr_stmt pos:start="29:1" pos:end="29:114"><expr pos:start="29:1" pos:end="29:113"><call pos:start="29:1" pos:end="29:113"><name pos:start="29:1" pos:end="29:4">DLOG</name><argument_list pos:start="29:5" pos:end="29:113">(<argument pos:start="29:6" pos:end="29:112"><expr pos:start="29:6" pos:end="29:112"><call pos:start="29:6" pos:end="29:112"><name pos:start="29:6" pos:end="29:12">fprintf</name><argument_list pos:start="29:13" pos:end="29:112">(<argument pos:start="29:14" pos:end="29:19"><expr pos:start="29:14" pos:end="29:19"><name pos:start="29:14" pos:end="29:19">stderr</name></expr></argument>, <argument pos:start="29:22" pos:end="29:74"><expr pos:start="29:22" pos:end="29:74"><literal type="string" pos:start="29:22" pos:end="29:74">"commit_direntries for %s, parent_mapping_index %d\n"</literal></expr></argument>, <argument pos:start="29:77" pos:end="29:89"><expr pos:start="29:77" pos:end="29:89"><name pos:start="29:77" pos:end="29:89"><name pos:start="29:77" pos:end="29:83">mapping</name><operator pos:start="29:84" pos:end="29:85">-&gt;</operator><name pos:start="29:86" pos:end="29:89">path</name></name></expr></argument>, <argument pos:start="29:92" pos:end="29:111"><expr pos:start="29:92" pos:end="29:111"><name pos:start="29:92" pos:end="29:111">parent_mapping_index</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:21"><expr pos:start="33:5" pos:end="33:20"><call pos:start="33:5" pos:end="33:20"><name pos:start="33:5" pos:end="33:10">assert</name><argument_list pos:start="33:11" pos:end="33:20">(<argument pos:start="33:12" pos:end="33:19"><expr pos:start="33:12" pos:end="33:19"><name pos:start="33:12" pos:end="33:19">direntry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:20"><expr pos:start="35:5" pos:end="35:19"><call pos:start="35:5" pos:end="35:19"><name pos:start="35:5" pos:end="35:10">assert</name><argument_list pos:start="35:11" pos:end="35:19">(<argument pos:start="35:12" pos:end="35:18"><expr pos:start="35:12" pos:end="35:18"><name pos:start="35:12" pos:end="35:18">mapping</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:44"><expr pos:start="37:5" pos:end="37:43"><call pos:start="37:5" pos:end="37:43"><name pos:start="37:5" pos:end="37:10">assert</name><argument_list pos:start="37:11" pos:end="37:43">(<argument pos:start="37:12" pos:end="37:42"><expr pos:start="37:12" pos:end="37:42"><name pos:start="37:12" pos:end="37:25"><name pos:start="37:12" pos:end="37:18">mapping</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:25">begin</name></name> <operator pos:start="37:27" pos:end="37:28">==</operator> <name pos:start="37:30" pos:end="37:42">first_cluster</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:66"><expr pos:start="39:5" pos:end="39:65"><call pos:start="39:5" pos:end="39:65"><name pos:start="39:5" pos:end="39:10">assert</name><argument_list pos:start="39:11" pos:end="39:65">(<argument pos:start="39:12" pos:end="39:64"><expr pos:start="39:12" pos:end="39:64"><name pos:start="39:12" pos:end="39:44"><name pos:start="39:12" pos:end="39:18">mapping</name><operator pos:start="39:19" pos:end="39:20">-&gt;</operator><name pos:start="39:21" pos:end="39:24">info</name><operator pos:start="39:25" pos:end="39:25">.</operator><name pos:start="39:26" pos:end="39:28">dir</name><operator pos:start="39:29" pos:end="39:29">.</operator><name pos:start="39:30" pos:end="39:44">first_dir_index</name></name> <operator pos:start="39:46" pos:end="39:46">&lt;</operator> <name pos:start="39:48" pos:end="39:64"><name pos:start="39:48" pos:end="39:48">s</name><operator pos:start="39:49" pos:end="39:50">-&gt;</operator><name pos:start="39:51" pos:end="39:59">directory</name><operator pos:start="39:60" pos:end="39:60">.</operator><name pos:start="39:61" pos:end="39:64">next</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:43"><expr pos:start="41:5" pos:end="41:42"><call pos:start="41:5" pos:end="41:42"><name pos:start="41:5" pos:end="41:10">assert</name><argument_list pos:start="41:11" pos:end="41:42">(<argument pos:start="41:12" pos:end="41:41"><expr pos:start="41:12" pos:end="41:41"><name pos:start="41:12" pos:end="41:24"><name pos:start="41:12" pos:end="41:18">mapping</name><operator pos:start="41:19" pos:end="41:20">-&gt;</operator><name pos:start="41:21" pos:end="41:24">mode</name></name> <operator pos:start="41:26" pos:end="41:26">&amp;</operator> <name pos:start="41:28" pos:end="41:41">MODE_DIRECTORY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:53"><expr pos:start="43:5" pos:end="43:52"><call pos:start="43:5" pos:end="43:52"><name pos:start="43:5" pos:end="43:10">assert</name><argument_list pos:start="43:11" pos:end="43:52">(<argument pos:start="43:12" pos:end="43:51"><expr pos:start="43:12" pos:end="43:51"><name pos:start="43:12" pos:end="43:20">dir_index</name> <operator pos:start="43:22" pos:end="43:23">==</operator> <literal type="number" pos:start="43:25" pos:end="43:25">0</literal> <operator pos:start="43:27" pos:end="43:28">||</operator> <call pos:start="43:30" pos:end="43:51"><name pos:start="43:30" pos:end="43:41">is_directory</name><argument_list pos:start="43:42" pos:end="43:51">(<argument pos:start="43:43" pos:end="43:50"><expr pos:start="43:43" pos:end="43:50"><name pos:start="43:43" pos:end="43:50">direntry</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:66"><expr pos:start="47:5" pos:end="47:65"><name pos:start="47:5" pos:end="47:42"><name pos:start="47:5" pos:end="47:11">mapping</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:17">info</name><operator pos:start="47:18" pos:end="47:18">.</operator><name pos:start="47:19" pos:end="47:21">dir</name><operator pos:start="47:22" pos:end="47:22">.</operator><name pos:start="47:23" pos:end="47:42">parent_mapping_index</name></name> <operator pos:start="47:44" pos:end="47:44">=</operator> <name pos:start="47:46" pos:end="47:65">parent_mapping_index</name></expr>;</expr_stmt>



    <if_stmt pos:start="51:5" pos:end="73:5"><if pos:start="51:5" pos:end="57:5">if <condition pos:start="51:8" pos:end="51:27">(<expr pos:start="51:9" pos:end="51:26"><name pos:start="51:9" pos:end="51:21">first_cluster</name> <operator pos:start="51:23" pos:end="51:24">==</operator> <literal type="number" pos:start="51:26" pos:end="51:26">0</literal></expr>)</condition> <block pos:start="51:29" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:46">

	<expr_stmt pos:start="53:9" pos:end="55:46"><expr pos:start="53:9" pos:end="55:45"><name pos:start="53:9" pos:end="53:25">old_cluster_count</name> <operator pos:start="53:27" pos:end="53:27">=</operator> <name pos:start="53:29" pos:end="53:45">new_cluster_count</name> <operator pos:start="53:47" pos:end="53:47">=</operator>

	    <name pos:start="55:13" pos:end="55:45"><name pos:start="55:13" pos:end="55:13">s</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:45">last_cluster_of_root_directory</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="57:7" pos:end="73:5">else <block pos:start="57:12" pos:end="73:5">{<block_content pos:start="59:9" pos:end="71:32">

	<for pos:start="59:9" pos:end="63:32">for <control pos:start="59:13" pos:end="61:34">(<init pos:start="59:14" pos:end="59:54"><expr pos:start="59:14" pos:end="59:34"><name pos:start="59:14" pos:end="59:30">old_cluster_count</name> <operator pos:start="59:32" pos:end="59:32">=</operator> <literal type="number" pos:start="59:34" pos:end="59:34">0</literal></expr><operator pos:start="59:35" pos:end="59:35">,</operator> <expr pos:start="59:37" pos:end="59:53"><name pos:start="59:37" pos:end="59:37">c</name> <operator pos:start="59:39" pos:end="59:39">=</operator> <name pos:start="59:41" pos:end="59:53">first_cluster</name></expr>;</init> <condition pos:start="59:56" pos:end="59:70"><expr pos:start="59:56" pos:end="59:69"><operator pos:start="59:56" pos:end="59:56">!</operator><call pos:start="59:57" pos:end="59:69"><name pos:start="59:57" pos:end="59:63">fat_eof</name><argument_list pos:start="59:64" pos:end="59:69">(<argument pos:start="59:65" pos:end="59:65"><expr pos:start="59:65" pos:end="59:65"><name pos:start="59:65" pos:end="59:65">s</name></expr></argument>, <argument pos:start="59:68" pos:end="59:68"><expr pos:start="59:68" pos:end="59:68"><name pos:start="59:68" pos:end="59:68">c</name></expr></argument>)</argument_list></call></expr>;</condition>

		<incr pos:start="61:17" pos:end="61:33"><expr pos:start="61:17" pos:end="61:33"><name pos:start="61:17" pos:end="61:17">c</name> <operator pos:start="61:19" pos:end="61:19">=</operator> <call pos:start="61:21" pos:end="61:33"><name pos:start="61:21" pos:end="61:27">fat_get</name><argument_list pos:start="61:28" pos:end="61:33">(<argument pos:start="61:29" pos:end="61:29"><expr pos:start="61:29" pos:end="61:29"><name pos:start="61:29" pos:end="61:29">s</name></expr></argument>, <argument pos:start="61:32" pos:end="61:32"><expr pos:start="61:32" pos:end="61:32"><name pos:start="61:32" pos:end="61:32">c</name></expr></argument>)</argument_list></call></expr></incr>)</control><block type="pseudo" pos:start="63:13" pos:end="63:32"><block_content pos:start="63:13" pos:end="63:32">

	    <expr_stmt pos:start="63:13" pos:end="63:32"><expr pos:start="63:13" pos:end="63:31"><name pos:start="63:13" pos:end="63:29">old_cluster_count</name><operator pos:start="63:30" pos:end="63:31">++</operator></expr>;</expr_stmt></block_content></block></for>



	<for pos:start="67:9" pos:end="71:32">for <control pos:start="67:13" pos:end="69:43">(<init pos:start="67:14" pos:end="67:54"><expr pos:start="67:14" pos:end="67:34"><name pos:start="67:14" pos:end="67:30">new_cluster_count</name> <operator pos:start="67:32" pos:end="67:32">=</operator> <literal type="number" pos:start="67:34" pos:end="67:34">0</literal></expr><operator pos:start="67:35" pos:end="67:35">,</operator> <expr pos:start="67:37" pos:end="67:53"><name pos:start="67:37" pos:end="67:37">c</name> <operator pos:start="67:39" pos:end="67:39">=</operator> <name pos:start="67:41" pos:end="67:53">first_cluster</name></expr>;</init> <condition pos:start="67:56" pos:end="67:70"><expr pos:start="67:56" pos:end="67:69"><operator pos:start="67:56" pos:end="67:56">!</operator><call pos:start="67:57" pos:end="67:69"><name pos:start="67:57" pos:end="67:63">fat_eof</name><argument_list pos:start="67:64" pos:end="67:69">(<argument pos:start="67:65" pos:end="67:65"><expr pos:start="67:65" pos:end="67:65"><name pos:start="67:65" pos:end="67:65">s</name></expr></argument>, <argument pos:start="67:68" pos:end="67:68"><expr pos:start="67:68" pos:end="67:68"><name pos:start="67:68" pos:end="67:68">c</name></expr></argument>)</argument_list></call></expr>;</condition>

		<incr pos:start="69:17" pos:end="69:42"><expr pos:start="69:17" pos:end="69:42"><name pos:start="69:17" pos:end="69:17">c</name> <operator pos:start="69:19" pos:end="69:19">=</operator> <call pos:start="69:21" pos:end="69:42"><name pos:start="69:21" pos:end="69:36">modified_fat_get</name><argument_list pos:start="69:37" pos:end="69:42">(<argument pos:start="69:38" pos:end="69:38"><expr pos:start="69:38" pos:end="69:38"><name pos:start="69:38" pos:end="69:38">s</name></expr></argument>, <argument pos:start="69:41" pos:end="69:41"><expr pos:start="69:41" pos:end="69:41"><name pos:start="69:41" pos:end="69:41">c</name></expr></argument>)</argument_list></call></expr></incr>)</control><block type="pseudo" pos:start="71:13" pos:end="71:32"><block_content pos:start="71:13" pos:end="71:32">

	    <expr_stmt pos:start="71:13" pos:end="71:32"><expr pos:start="71:13" pos:end="71:31"><name pos:start="71:13" pos:end="71:29">new_cluster_count</name><operator pos:start="71:30" pos:end="71:31">++</operator></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="77:5" pos:end="93:66"><if pos:start="77:5" pos:end="87:5">if <condition pos:start="77:8" pos:end="77:46">(<expr pos:start="77:9" pos:end="77:45"><name pos:start="77:9" pos:end="77:25">new_cluster_count</name> <operator pos:start="77:27" pos:end="77:27">&gt;</operator> <name pos:start="77:29" pos:end="77:45">old_cluster_count</name></expr>)</condition> <block pos:start="77:48" pos:end="87:5">{<block_content pos:start="79:9" pos:end="85:22">

	<if_stmt pos:start="79:9" pos:end="85:22"><if pos:start="79:9" pos:end="85:22">if <condition pos:start="79:12" pos:end="83:74">(<expr pos:start="79:13" pos:end="83:73"><call pos:start="79:13" pos:end="83:65"><name pos:start="79:13" pos:end="79:29">insert_direntries</name><argument_list pos:start="79:30" pos:end="83:65">(<argument pos:start="79:31" pos:end="79:31"><expr pos:start="79:31" pos:end="79:31"><name pos:start="79:31" pos:end="79:31">s</name></expr></argument>,

		<argument pos:start="81:17" pos:end="81:62"><expr pos:start="81:17" pos:end="81:62"><name pos:start="81:17" pos:end="81:33">current_dir_index</name> <operator pos:start="81:35" pos:end="81:35">+</operator> <name pos:start="81:37" pos:end="81:42">factor</name> <operator pos:start="81:44" pos:end="81:44">*</operator> <name pos:start="81:46" pos:end="81:62">old_cluster_count</name></expr></argument>,

		<argument pos:start="83:17" pos:end="83:64"><expr pos:start="83:17" pos:end="83:64"><name pos:start="83:17" pos:end="83:22">factor</name> <operator pos:start="83:24" pos:end="83:24">*</operator> <operator pos:start="83:26" pos:end="83:26">(</operator><name pos:start="83:27" pos:end="83:43">new_cluster_count</name> <operator pos:start="83:45" pos:end="83:45">-</operator> <name pos:start="83:47" pos:end="83:63">old_cluster_count</name><operator pos:start="83:64" pos:end="83:64">)</operator></expr></argument>)</argument_list></call> <operator pos:start="83:67" pos:end="83:68">==</operator> <name pos:start="83:70" pos:end="83:73">NULL</name></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:22"><block_content pos:start="85:13" pos:end="85:22">

	    <return pos:start="85:13" pos:end="85:22">return <expr pos:start="85:20" pos:end="85:21"><operator pos:start="85:20" pos:end="85:20">-</operator><literal type="number" pos:start="85:21" pos:end="85:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="87:7" pos:end="93:66">else if <condition pos:start="87:15" pos:end="87:53">(<expr pos:start="87:16" pos:end="87:52"><name pos:start="87:16" pos:end="87:32">new_cluster_count</name> <operator pos:start="87:34" pos:end="87:34">&lt;</operator> <name pos:start="87:36" pos:end="87:52">old_cluster_count</name></expr>)</condition><block type="pseudo" pos:start="89:9" pos:end="93:66"><block_content pos:start="89:9" pos:end="93:66">

	<expr_stmt pos:start="89:9" pos:end="93:66"><expr pos:start="89:9" pos:end="93:65"><call pos:start="89:9" pos:end="93:65"><name pos:start="89:9" pos:end="89:25">remove_direntries</name><argument_list pos:start="89:26" pos:end="93:65">(<argument pos:start="89:27" pos:end="89:27"><expr pos:start="89:27" pos:end="89:27"><name pos:start="89:27" pos:end="89:27">s</name></expr></argument>,

		<argument pos:start="91:17" pos:end="91:62"><expr pos:start="91:17" pos:end="91:62"><name pos:start="91:17" pos:end="91:33">current_dir_index</name> <operator pos:start="91:35" pos:end="91:35">+</operator> <name pos:start="91:37" pos:end="91:42">factor</name> <operator pos:start="91:44" pos:end="91:44">*</operator> <name pos:start="91:46" pos:end="91:62">new_cluster_count</name></expr></argument>,

		<argument pos:start="93:17" pos:end="93:64"><expr pos:start="93:17" pos:end="93:64"><name pos:start="93:17" pos:end="93:22">factor</name> <operator pos:start="93:24" pos:end="93:24">*</operator> <operator pos:start="93:26" pos:end="93:26">(</operator><name pos:start="93:27" pos:end="93:43">old_cluster_count</name> <operator pos:start="93:45" pos:end="93:45">-</operator> <name pos:start="93:47" pos:end="93:63">new_cluster_count</name><operator pos:start="93:64" pos:end="93:64">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <for pos:start="97:5" pos:end="113:5">for <control pos:start="97:9" pos:end="97:71">(<init pos:start="97:10" pos:end="97:27"><expr pos:start="97:10" pos:end="97:26"><name pos:start="97:10" pos:end="97:10">c</name> <operator pos:start="97:12" pos:end="97:12">=</operator> <name pos:start="97:14" pos:end="97:26">first_cluster</name></expr>;</init> <condition pos:start="97:29" pos:end="97:43"><expr pos:start="97:29" pos:end="97:42"><operator pos:start="97:29" pos:end="97:29">!</operator><call pos:start="97:30" pos:end="97:42"><name pos:start="97:30" pos:end="97:36">fat_eof</name><argument_list pos:start="97:37" pos:end="97:42">(<argument pos:start="97:38" pos:end="97:38"><expr pos:start="97:38" pos:end="97:38"><name pos:start="97:38" pos:end="97:38">s</name></expr></argument>, <argument pos:start="97:41" pos:end="97:41"><expr pos:start="97:41" pos:end="97:41"><name pos:start="97:41" pos:end="97:41">c</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="97:45" pos:end="97:70"><expr pos:start="97:45" pos:end="97:70"><name pos:start="97:45" pos:end="97:45">c</name> <operator pos:start="97:47" pos:end="97:47">=</operator> <call pos:start="97:49" pos:end="97:70"><name pos:start="97:49" pos:end="97:64">modified_fat_get</name><argument_list pos:start="97:65" pos:end="97:70">(<argument pos:start="97:66" pos:end="97:66"><expr pos:start="97:66" pos:end="97:66"><name pos:start="97:66" pos:end="97:66">s</name></expr></argument>, <argument pos:start="97:69" pos:end="97:69"><expr pos:start="97:69" pos:end="97:69"><name pos:start="97:69" pos:end="97:69">c</name></expr></argument>)</argument_list></call></expr></incr>)</control> <block pos:start="97:73" pos:end="113:5">{<block_content pos:start="99:9" pos:end="111:36">

	<decl_stmt pos:start="99:9" pos:end="99:71"><decl pos:start="99:9" pos:end="99:70"><type pos:start="99:9" pos:end="99:13"><name pos:start="99:9" pos:end="99:12">void</name><modifier pos:start="99:13" pos:end="99:13">*</modifier></type> <name pos:start="99:15" pos:end="99:22">direntry</name> <init pos:start="99:24" pos:end="99:70">= <expr pos:start="99:26" pos:end="99:70"><call pos:start="99:26" pos:end="99:70"><name pos:start="99:26" pos:end="99:34">array_get</name><argument_list pos:start="99:35" pos:end="99:70">(<argument pos:start="99:36" pos:end="99:50"><expr pos:start="99:36" pos:end="99:50"><operator pos:start="99:36" pos:end="99:36">&amp;</operator><operator pos:start="99:37" pos:end="99:37">(</operator><name pos:start="99:38" pos:end="99:49"><name pos:start="99:38" pos:end="99:38">s</name><operator pos:start="99:39" pos:end="99:40">-&gt;</operator><name pos:start="99:41" pos:end="99:49">directory</name></name><operator pos:start="99:50" pos:end="99:50">)</operator></expr></argument>, <argument pos:start="99:53" pos:end="99:69"><expr pos:start="99:53" pos:end="99:69"><name pos:start="99:53" pos:end="99:69">current_dir_index</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="101:9" pos:end="103:40"><decl pos:start="101:9" pos:end="103:39"><type pos:start="101:9" pos:end="101:11"><name pos:start="101:9" pos:end="101:11">int</name></type> <name pos:start="101:13" pos:end="101:15">ret</name> <init pos:start="101:17" pos:end="103:39">= <expr pos:start="101:19" pos:end="103:39"><call pos:start="101:19" pos:end="103:39"><name pos:start="101:19" pos:end="101:28">vvfat_read</name><argument_list pos:start="101:29" pos:end="103:39">(<argument pos:start="101:30" pos:end="101:34"><expr pos:start="101:30" pos:end="101:34"><name pos:start="101:30" pos:end="101:34"><name pos:start="101:30" pos:end="101:30">s</name><operator pos:start="101:31" pos:end="101:32">-&gt;</operator><name pos:start="101:33" pos:end="101:34">bs</name></name></expr></argument>, <argument pos:start="101:37" pos:end="101:56"><expr pos:start="101:37" pos:end="101:56"><call pos:start="101:37" pos:end="101:56"><name pos:start="101:37" pos:end="101:50">cluster2sector</name><argument_list pos:start="101:51" pos:end="101:56">(<argument pos:start="101:52" pos:end="101:52"><expr pos:start="101:52" pos:end="101:52"><name pos:start="101:52" pos:end="101:52">s</name></expr></argument>, <argument pos:start="101:55" pos:end="101:55"><expr pos:start="101:55" pos:end="101:55"><name pos:start="101:55" pos:end="101:55">c</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="101:59" pos:end="101:66"><expr pos:start="101:59" pos:end="101:66"><name pos:start="101:59" pos:end="101:66">direntry</name></expr></argument>,

		<argument pos:start="103:17" pos:end="103:38"><expr pos:start="103:17" pos:end="103:38"><name pos:start="103:17" pos:end="103:38"><name pos:start="103:17" pos:end="103:17">s</name><operator pos:start="103:18" pos:end="103:19">-&gt;</operator><name pos:start="103:20" pos:end="103:38">sectors_per_cluster</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<if_stmt pos:start="105:9" pos:end="107:23"><if pos:start="105:9" pos:end="107:23">if <condition pos:start="105:12" pos:end="105:16">(<expr pos:start="105:13" pos:end="105:15"><name pos:start="105:13" pos:end="105:15">ret</name></expr>)</condition><block type="pseudo" pos:start="107:13" pos:end="107:23"><block_content pos:start="107:13" pos:end="107:23">

	    <return pos:start="107:13" pos:end="107:23">return <expr pos:start="107:20" pos:end="107:22"><name pos:start="107:20" pos:end="107:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

	<expr_stmt pos:start="109:9" pos:end="109:58"><expr pos:start="109:9" pos:end="109:57"><call pos:start="109:9" pos:end="109:57"><name pos:start="109:9" pos:end="109:14">assert</name><argument_list pos:start="109:15" pos:end="109:57">(<argument pos:start="109:16" pos:end="109:56"><expr pos:start="109:16" pos:end="109:56"><operator pos:start="109:16" pos:end="109:16">!</operator><call pos:start="109:17" pos:end="109:56"><name pos:start="109:17" pos:end="109:23">strncmp</name><argument_list pos:start="109:24" pos:end="109:56">(<argument pos:start="109:25" pos:end="109:44"><expr pos:start="109:25" pos:end="109:44"><name pos:start="109:25" pos:end="109:44"><name pos:start="109:25" pos:end="109:25">s</name><operator pos:start="109:26" pos:end="109:27">-&gt;</operator><name pos:start="109:28" pos:end="109:36">directory</name><operator pos:start="109:37" pos:end="109:37">.</operator><name pos:start="109:38" pos:end="109:44">pointer</name></name></expr></argument>, <argument pos:start="109:47" pos:end="109:52"><expr pos:start="109:47" pos:end="109:52"><literal type="string" pos:start="109:47" pos:end="109:52">"QEMU"</literal></expr></argument>, <argument pos:start="109:55" pos:end="109:55"><expr pos:start="109:55" pos:end="109:55"><literal type="number" pos:start="109:55" pos:end="109:55">4</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="111:9" pos:end="111:36"><expr pos:start="111:9" pos:end="111:35"><name pos:start="111:9" pos:end="111:25">current_dir_index</name> <operator pos:start="111:27" pos:end="111:28">+=</operator> <name pos:start="111:30" pos:end="111:35">factor</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="117:5" pos:end="117:55"><expr pos:start="117:5" pos:end="117:54"><name pos:start="117:5" pos:end="117:7">ret</name> <operator pos:start="117:9" pos:end="117:9">=</operator> <call pos:start="117:11" pos:end="117:54"><name pos:start="117:11" pos:end="117:25">commit_mappings</name><argument_list pos:start="117:26" pos:end="117:54">(<argument pos:start="117:27" pos:end="117:27"><expr pos:start="117:27" pos:end="117:27"><name pos:start="117:27" pos:end="117:27">s</name></expr></argument>, <argument pos:start="117:30" pos:end="117:42"><expr pos:start="117:30" pos:end="117:42"><name pos:start="117:30" pos:end="117:42">first_cluster</name></expr></argument>, <argument pos:start="117:45" pos:end="117:53"><expr pos:start="117:45" pos:end="117:53"><name pos:start="117:45" pos:end="117:53">dir_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="119:5" pos:end="121:19"><if pos:start="119:5" pos:end="121:19">if <condition pos:start="119:8" pos:end="119:12">(<expr pos:start="119:9" pos:end="119:11"><name pos:start="119:9" pos:end="119:11">ret</name></expr>)</condition><block type="pseudo" pos:start="121:9" pos:end="121:19"><block_content pos:start="121:9" pos:end="121:19">

	<return pos:start="121:9" pos:end="121:19">return <expr pos:start="121:16" pos:end="121:18"><name pos:start="121:16" pos:end="121:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="125:5" pos:end="125:17">/* recurse */</comment>

    <for pos:start="127:5" pos:end="147:5">for <control pos:start="127:9" pos:end="127:52">(<init pos:start="127:10" pos:end="127:15"><expr pos:start="127:10" pos:end="127:14"><name pos:start="127:10" pos:end="127:10">i</name> <operator pos:start="127:12" pos:end="127:12">=</operator> <literal type="number" pos:start="127:14" pos:end="127:14">0</literal></expr>;</init> <condition pos:start="127:17" pos:end="127:47"><expr pos:start="127:17" pos:end="127:46"><name pos:start="127:17" pos:end="127:17">i</name> <operator pos:start="127:19" pos:end="127:19">&lt;</operator> <name pos:start="127:21" pos:end="127:26">factor</name> <operator pos:start="127:28" pos:end="127:28">*</operator> <name pos:start="127:30" pos:end="127:46">new_cluster_count</name></expr>;</condition> <incr pos:start="127:49" pos:end="127:51"><expr pos:start="127:49" pos:end="127:51"><name pos:start="127:49" pos:end="127:49">i</name><operator pos:start="127:50" pos:end="127:51">++</operator></expr></incr>)</control> <block pos:start="127:54" pos:end="147:5">{<block_content pos:start="129:9" pos:end="145:9">

	<expr_stmt pos:start="129:9" pos:end="129:67"><expr pos:start="129:9" pos:end="129:66"><name pos:start="129:9" pos:end="129:16">direntry</name> <operator pos:start="129:18" pos:end="129:18">=</operator> <call pos:start="129:20" pos:end="129:66"><name pos:start="129:20" pos:end="129:28">array_get</name><argument_list pos:start="129:29" pos:end="129:66">(<argument pos:start="129:30" pos:end="129:44"><expr pos:start="129:30" pos:end="129:44"><operator pos:start="129:30" pos:end="129:30">&amp;</operator><operator pos:start="129:31" pos:end="129:31">(</operator><name pos:start="129:32" pos:end="129:43"><name pos:start="129:32" pos:end="129:32">s</name><operator pos:start="129:33" pos:end="129:34">-&gt;</operator><name pos:start="129:35" pos:end="129:43">directory</name></name><operator pos:start="129:44" pos:end="129:44">)</operator></expr></argument>, <argument pos:start="129:47" pos:end="129:65"><expr pos:start="129:47" pos:end="129:65"><name pos:start="129:47" pos:end="129:61">first_dir_index</name> <operator pos:start="129:63" pos:end="129:63">+</operator> <name pos:start="129:65" pos:end="129:65">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt pos:start="131:9" pos:end="145:9"><if pos:start="131:9" pos:end="145:9">if <condition pos:start="131:12" pos:end="131:56">(<expr pos:start="131:13" pos:end="131:55"><call pos:start="131:13" pos:end="131:34"><name pos:start="131:13" pos:end="131:24">is_directory</name><argument_list pos:start="131:25" pos:end="131:34">(<argument pos:start="131:26" pos:end="131:33"><expr pos:start="131:26" pos:end="131:33"><name pos:start="131:26" pos:end="131:33">direntry</name></expr></argument>)</argument_list></call> <operator pos:start="131:36" pos:end="131:37">&amp;&amp;</operator> <operator pos:start="131:39" pos:end="131:39">!</operator><call pos:start="131:40" pos:end="131:55"><name pos:start="131:40" pos:end="131:45">is_dot</name><argument_list pos:start="131:46" pos:end="131:55">(<argument pos:start="131:47" pos:end="131:54"><expr pos:start="131:47" pos:end="131:54"><name pos:start="131:47" pos:end="131:54">direntry</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="131:58" pos:end="145:9">{<block_content pos:start="133:13" pos:end="143:27">

	    <expr_stmt pos:start="133:13" pos:end="133:65"><expr pos:start="133:13" pos:end="133:64"><name pos:start="133:13" pos:end="133:19">mapping</name> <operator pos:start="133:21" pos:end="133:21">=</operator> <call pos:start="133:23" pos:end="133:64"><name pos:start="133:23" pos:end="133:46">find_mapping_for_cluster</name><argument_list pos:start="133:47" pos:end="133:64">(<argument pos:start="133:48" pos:end="133:48"><expr pos:start="133:48" pos:end="133:48"><name pos:start="133:48" pos:end="133:48">s</name></expr></argument>, <argument pos:start="133:51" pos:end="133:63"><expr pos:start="133:51" pos:end="133:63"><name pos:start="133:51" pos:end="133:63">first_cluster</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <expr_stmt pos:start="135:13" pos:end="135:51"><expr pos:start="135:13" pos:end="135:50"><call pos:start="135:13" pos:end="135:50"><name pos:start="135:13" pos:end="135:18">assert</name><argument_list pos:start="135:19" pos:end="135:50">(<argument pos:start="135:20" pos:end="135:49"><expr pos:start="135:20" pos:end="135:49"><name pos:start="135:20" pos:end="135:32"><name pos:start="135:20" pos:end="135:26">mapping</name><operator pos:start="135:27" pos:end="135:28">-&gt;</operator><name pos:start="135:29" pos:end="135:32">mode</name></name> <operator pos:start="135:34" pos:end="135:34">&amp;</operator> <name pos:start="135:36" pos:end="135:49">MODE_DIRECTORY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <expr_stmt pos:start="137:13" pos:end="139:53"><expr pos:start="137:13" pos:end="139:52"><name pos:start="137:13" pos:end="137:15">ret</name> <operator pos:start="137:17" pos:end="137:17">=</operator> <call pos:start="137:19" pos:end="139:52"><name pos:start="137:19" pos:end="137:35">commit_direntries</name><argument_list pos:start="137:36" pos:end="139:52">(<argument pos:start="137:37" pos:end="137:37"><expr pos:start="137:37" pos:end="137:37"><name pos:start="137:37" pos:end="137:37">s</name></expr></argument>, <argument pos:start="137:40" pos:end="137:58"><expr pos:start="137:40" pos:end="137:58"><name pos:start="137:40" pos:end="137:54">first_dir_index</name> <operator pos:start="137:56" pos:end="137:56">+</operator> <name pos:start="137:58" pos:end="137:58">i</name></expr></argument>,

		<argument pos:start="139:17" pos:end="139:51"><expr pos:start="139:17" pos:end="139:51"><call pos:start="139:17" pos:end="139:51"><name pos:start="139:17" pos:end="139:27">array_index</name><argument_list pos:start="139:28" pos:end="139:51">(<argument pos:start="139:29" pos:end="139:41"><expr pos:start="139:29" pos:end="139:41"><operator pos:start="139:29" pos:end="139:29">&amp;</operator><operator pos:start="139:30" pos:end="139:30">(</operator><name pos:start="139:31" pos:end="139:40"><name pos:start="139:31" pos:end="139:31">s</name><operator pos:start="139:32" pos:end="139:33">-&gt;</operator><name pos:start="139:34" pos:end="139:40">mapping</name></name><operator pos:start="139:41" pos:end="139:41">)</operator></expr></argument>, <argument pos:start="139:44" pos:end="139:50"><expr pos:start="139:44" pos:end="139:50"><name pos:start="139:44" pos:end="139:50">mapping</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <if_stmt pos:start="141:13" pos:end="143:27"><if pos:start="141:13" pos:end="143:27">if <condition pos:start="141:16" pos:end="141:20">(<expr pos:start="141:17" pos:end="141:19"><name pos:start="141:17" pos:end="141:19">ret</name></expr>)</condition><block type="pseudo" pos:start="143:17" pos:end="143:27"><block_content pos:start="143:17" pos:end="143:27">

		<return pos:start="143:17" pos:end="143:27">return <expr pos:start="143:24" pos:end="143:26"><name pos:start="143:24" pos:end="143:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

	</block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <return pos:start="151:5" pos:end="151:13">return <expr pos:start="151:12" pos:end="151:12"><literal type="number" pos:start="151:12" pos:end="151:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
