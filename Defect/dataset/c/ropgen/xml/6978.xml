<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6978.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:27"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">int64_t</name> <name pos:start="1:16" pos:end="1:27">coroutine_fn</name></type> <name pos:start="1:29" pos:end="1:51">vpc_co_get_block_status</name><parameter_list pos:start="1:52" pos:end="3:79">(<parameter pos:start="1:53" pos:end="1:72"><decl pos:start="1:53" pos:end="1:72"><type pos:start="1:53" pos:end="1:72"><name pos:start="1:53" pos:end="1:68">BlockDriverState</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:72">bs</name></decl></parameter>,

        <parameter pos:start="3:9" pos:end="3:26"><decl pos:start="3:9" pos:end="3:26"><type pos:start="3:9" pos:end="3:26"><name pos:start="3:9" pos:end="3:15">int64_t</name></type> <name pos:start="3:17" pos:end="3:26">sector_num</name></decl></parameter>, <parameter pos:start="3:29" pos:end="3:42"><decl pos:start="3:29" pos:end="3:42"><type pos:start="3:29" pos:end="3:42"><name pos:start="3:29" pos:end="3:31">int</name></type> <name pos:start="3:33" pos:end="3:42">nb_sectors</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:53"><decl pos:start="3:45" pos:end="3:53"><type pos:start="3:45" pos:end="3:53"><name pos:start="3:45" pos:end="3:47">int</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:53">pnum</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:78"><decl pos:start="3:56" pos:end="3:78"><type pos:start="3:56" pos:end="3:78"><name pos:start="3:56" pos:end="3:71">BlockDriverState</name> <modifier pos:start="3:73" pos:end="3:73">*</modifier><modifier pos:start="3:74" pos:end="3:74">*</modifier></type><name pos:start="3:75" pos:end="3:78">file</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="99:1">{<block_content pos:start="7:5" pos:end="97:15">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">BDRVVPCState</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:19">s</name> <init pos:start="7:21" pos:end="7:32">= <expr pos:start="7:23" pos:end="7:32"><name pos:start="7:23" pos:end="7:32"><name pos:start="7:23" pos:end="7:24">bs</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:32">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:51"><decl pos:start="9:5" pos:end="9:50"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">VHDFooter</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:21">footer</name> <init pos:start="9:23" pos:end="9:50">= <expr pos:start="9:25" pos:end="9:50"><operator pos:start="9:25" pos:end="9:25">(</operator><name pos:start="9:26" pos:end="9:34">VHDFooter</name><operator pos:start="9:35" pos:end="9:35">*</operator><operator pos:start="9:36" pos:end="9:36">)</operator> <name pos:start="9:38" pos:end="9:50"><name pos:start="9:38" pos:end="9:38">s</name><operator pos:start="9:39" pos:end="9:40">-&gt;</operator><name pos:start="9:41" pos:end="9:50">footer_buf</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:17">start</name></decl>, <decl pos:start="11:20" pos:end="11:25"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:20" pos:end="11:25">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">bool</name></type> <name pos:start="13:10" pos:end="13:18">allocated</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int64_t</name></type> <name pos:start="15:13" pos:end="15:15">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:10"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">n</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="31:5"><if pos:start="21:5" pos:end="31:5">if <condition pos:start="21:8" pos:end="21:47">(<expr pos:start="21:9" pos:end="21:46"><call pos:start="21:9" pos:end="21:33"><name pos:start="21:9" pos:end="21:19">be32_to_cpu</name><argument_list pos:start="21:20" pos:end="21:33">(<argument pos:start="21:21" pos:end="21:32"><expr pos:start="21:21" pos:end="21:32"><name pos:start="21:21" pos:end="21:32"><name pos:start="21:21" pos:end="21:26">footer</name><operator pos:start="21:27" pos:end="21:28">-&gt;</operator><name pos:start="21:29" pos:end="21:32">type</name></name></expr></argument>)</argument_list></call> <operator pos:start="21:35" pos:end="21:36">==</operator> <name pos:start="21:38" pos:end="21:46">VHD_FIXED</name></expr>)</condition> <block pos:start="21:49" pos:end="31:5">{<block_content pos:start="23:9" pos:end="29:48">

        <expr_stmt pos:start="23:9" pos:end="23:27"><expr pos:start="23:9" pos:end="23:26"><operator pos:start="23:9" pos:end="23:9">*</operator><name pos:start="23:10" pos:end="23:13">pnum</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <name pos:start="23:17" pos:end="23:26">nb_sectors</name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:29"><expr pos:start="25:9" pos:end="25:28"><operator pos:start="25:9" pos:end="25:9">*</operator><name pos:start="25:10" pos:end="25:13">file</name> <operator pos:start="25:15" pos:end="25:15">=</operator> <name pos:start="25:17" pos:end="25:28"><name pos:start="25:17" pos:end="25:18">bs</name><operator pos:start="25:19" pos:end="25:20">-&gt;</operator><name pos:start="25:21" pos:end="25:24">file</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:28">bs</name></name></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="29:48">return <expr pos:start="27:16" pos:end="29:47"><name pos:start="27:16" pos:end="27:29">BDRV_BLOCK_RAW</name> <operator pos:start="27:31" pos:end="27:31">|</operator> <name pos:start="27:33" pos:end="27:55">BDRV_BLOCK_OFFSET_VALID</name> <operator pos:start="27:57" pos:end="27:57">|</operator>

               <operator pos:start="29:16" pos:end="29:16">(</operator><name pos:start="29:17" pos:end="29:26">sector_num</name> <operator pos:start="29:28" pos:end="29:29">&lt;&lt;</operator> <name pos:start="29:31" pos:end="29:46">BDRV_SECTOR_BITS</name><operator pos:start="29:47" pos:end="29:47">)</operator></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:33"><expr pos:start="35:5" pos:end="35:32"><call pos:start="35:5" pos:end="35:32"><name pos:start="35:5" pos:end="35:22">qemu_co_mutex_lock</name><argument_list pos:start="35:23" pos:end="35:32">(<argument pos:start="35:24" pos:end="35:31"><expr pos:start="35:24" pos:end="35:31"><operator pos:start="35:24" pos:end="35:24">&amp;</operator><name pos:start="35:25" pos:end="35:31"><name pos:start="35:25" pos:end="35:25">s</name><operator pos:start="35:26" pos:end="35:27">-&gt;</operator><name pos:start="35:28" pos:end="35:31">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:73"><expr pos:start="39:5" pos:end="39:72"><name pos:start="39:5" pos:end="39:10">offset</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <call pos:start="39:14" pos:end="39:72"><name pos:start="39:14" pos:end="39:29">get_image_offset</name><argument_list pos:start="39:30" pos:end="39:72">(<argument pos:start="39:31" pos:end="39:32"><expr pos:start="39:31" pos:end="39:32"><name pos:start="39:31" pos:end="39:32">bs</name></expr></argument>, <argument pos:start="39:35" pos:end="39:64"><expr pos:start="39:35" pos:end="39:64"><name pos:start="39:35" pos:end="39:44">sector_num</name> <operator pos:start="39:46" pos:end="39:47">&lt;&lt;</operator> <name pos:start="39:49" pos:end="39:64">BDRV_SECTOR_BITS</name></expr></argument>, <argument pos:start="39:67" pos:end="39:71"><expr pos:start="39:67" pos:end="39:71"><name pos:start="39:67" pos:end="39:71">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:19"><expr pos:start="41:5" pos:end="41:18"><name pos:start="41:5" pos:end="41:9">start</name> <operator pos:start="41:11" pos:end="41:11">=</operator> <name pos:start="41:13" pos:end="41:18">offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:31"><expr pos:start="43:5" pos:end="43:30"><name pos:start="43:5" pos:end="43:13">allocated</name> <operator pos:start="43:15" pos:end="43:15">=</operator> <operator pos:start="43:17" pos:end="43:17">(</operator><name pos:start="43:18" pos:end="43:23">offset</name> <operator pos:start="43:25" pos:end="43:26">!=</operator> <operator pos:start="43:28" pos:end="43:28">-</operator><literal type="number" pos:start="43:29" pos:end="43:29">1</literal><operator pos:start="43:30" pos:end="43:30">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:14"><expr pos:start="45:5" pos:end="45:13"><operator pos:start="45:5" pos:end="45:5">*</operator><name pos:start="45:6" pos:end="45:9">pnum</name> <operator pos:start="45:11" pos:end="45:11">=</operator> <literal type="number" pos:start="45:13" pos:end="45:13">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:12"><expr pos:start="47:5" pos:end="47:11"><name pos:start="47:5" pos:end="47:7">ret</name> <operator pos:start="47:9" pos:end="47:9">=</operator> <literal type="number" pos:start="47:11" pos:end="47:11">0</literal></expr>;</expr_stmt>



    <do pos:start="51:5" pos:end="91:27">do <block pos:start="51:8" pos:end="91:5">{<block_content pos:start="55:9" pos:end="89:77">

        <comment type="block" pos:start="53:9" pos:end="53:78">/* All sectors in a block are contiguous (without using the bitmap) */</comment>

        <expr_stmt pos:start="55:9" pos:end="57:23"><expr pos:start="55:9" pos:end="57:22"><name pos:start="55:9" pos:end="55:9">n</name> <operator pos:start="55:11" pos:end="55:11">=</operator> <call pos:start="55:13" pos:end="55:70"><name pos:start="55:13" pos:end="55:20">ROUND_UP</name><argument_list pos:start="55:21" pos:end="55:70">(<argument pos:start="55:22" pos:end="55:35"><expr pos:start="55:22" pos:end="55:35"><name pos:start="55:22" pos:end="55:31">sector_num</name> <operator pos:start="55:33" pos:end="55:33">+</operator> <literal type="number" pos:start="55:35" pos:end="55:35">1</literal></expr></argument>, <argument pos:start="55:38" pos:end="55:69"><expr pos:start="55:38" pos:end="55:69"><name pos:start="55:38" pos:end="55:50"><name pos:start="55:38" pos:end="55:38">s</name><operator pos:start="55:39" pos:end="55:40">-&gt;</operator><name pos:start="55:41" pos:end="55:50">block_size</name></name> <operator pos:start="55:52" pos:end="55:52">/</operator> <name pos:start="55:54" pos:end="55:69">BDRV_SECTOR_SIZE</name></expr></argument>)</argument_list></call>

          <operator pos:start="57:11" pos:end="57:11">-</operator> <name pos:start="57:13" pos:end="57:22">sector_num</name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:31"><expr pos:start="59:9" pos:end="59:30"><name pos:start="59:9" pos:end="59:9">n</name> <operator pos:start="59:11" pos:end="59:11">=</operator> <call pos:start="59:13" pos:end="59:30"><name pos:start="59:13" pos:end="59:15">MIN</name><argument_list pos:start="59:16" pos:end="59:30">(<argument pos:start="59:17" pos:end="59:17"><expr pos:start="59:17" pos:end="59:17"><name pos:start="59:17" pos:end="59:17">n</name></expr></argument>, <argument pos:start="59:20" pos:end="59:29"><expr pos:start="59:20" pos:end="59:29"><name pos:start="59:20" pos:end="59:29">nb_sectors</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="63:9" pos:end="63:19"><expr pos:start="63:9" pos:end="63:18"><operator pos:start="63:9" pos:end="63:9">*</operator><name pos:start="63:10" pos:end="63:13">pnum</name> <operator pos:start="63:15" pos:end="63:16">+=</operator> <name pos:start="63:18" pos:end="63:18">n</name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:24"><expr pos:start="65:9" pos:end="65:23"><name pos:start="65:9" pos:end="65:18">sector_num</name> <operator pos:start="65:20" pos:end="65:21">+=</operator> <name pos:start="65:23" pos:end="65:23">n</name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:24"><expr pos:start="67:9" pos:end="67:23"><name pos:start="67:9" pos:end="67:18">nb_sectors</name> <operator pos:start="67:20" pos:end="67:21">-=</operator> <name pos:start="67:23" pos:end="67:23">n</name></expr>;</expr_stmt>

        <comment type="block" pos:start="69:9" pos:end="71:64">/* *pnum can't be greater than one block for allocated

         * sectors since there is always a bitmap in between. */</comment>

        <if_stmt pos:start="73:9" pos:end="81:9"><if pos:start="73:9" pos:end="81:9">if <condition pos:start="73:12" pos:end="73:22">(<expr pos:start="73:13" pos:end="73:21"><name pos:start="73:13" pos:end="73:21">allocated</name></expr>)</condition> <block pos:start="73:24" pos:end="81:9">{<block_content pos:start="75:13" pos:end="79:18">

            <expr_stmt pos:start="75:13" pos:end="75:33"><expr pos:start="75:13" pos:end="75:32"><operator pos:start="75:13" pos:end="75:13">*</operator><name pos:start="75:14" pos:end="75:17">file</name> <operator pos:start="75:19" pos:end="75:19">=</operator> <name pos:start="75:21" pos:end="75:32"><name pos:start="75:21" pos:end="75:22">bs</name><operator pos:start="75:23" pos:end="75:24">-&gt;</operator><name pos:start="75:25" pos:end="75:28">file</name><operator pos:start="75:29" pos:end="75:30">-&gt;</operator><name pos:start="75:31" pos:end="75:32">bs</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:68"><expr pos:start="77:13" pos:end="77:67"><name pos:start="77:13" pos:end="77:15">ret</name> <operator pos:start="77:17" pos:end="77:17">=</operator> <name pos:start="77:19" pos:end="77:33">BDRV_BLOCK_DATA</name> <operator pos:start="77:35" pos:end="77:35">|</operator> <name pos:start="77:37" pos:end="77:59">BDRV_BLOCK_OFFSET_VALID</name> <operator pos:start="77:61" pos:end="77:61">|</operator> <name pos:start="77:63" pos:end="77:67">start</name></expr>;</expr_stmt>

            <break pos:start="79:13" pos:end="79:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="83:9" pos:end="87:9"><if pos:start="83:9" pos:end="87:9">if <condition pos:start="83:12" pos:end="83:28">(<expr pos:start="83:13" pos:end="83:27"><name pos:start="83:13" pos:end="83:22">nb_sectors</name> <operator pos:start="83:24" pos:end="83:25">==</operator> <literal type="number" pos:start="83:27" pos:end="83:27">0</literal></expr>)</condition> <block pos:start="83:30" pos:end="87:9">{<block_content pos:start="85:13" pos:end="85:18">

            <break pos:start="85:13" pos:end="85:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:77"><expr pos:start="89:9" pos:end="89:76"><name pos:start="89:9" pos:end="89:14">offset</name> <operator pos:start="89:16" pos:end="89:16">=</operator> <call pos:start="89:18" pos:end="89:76"><name pos:start="89:18" pos:end="89:33">get_image_offset</name><argument_list pos:start="89:34" pos:end="89:76">(<argument pos:start="89:35" pos:end="89:36"><expr pos:start="89:35" pos:end="89:36"><name pos:start="89:35" pos:end="89:36">bs</name></expr></argument>, <argument pos:start="89:39" pos:end="89:68"><expr pos:start="89:39" pos:end="89:68"><name pos:start="89:39" pos:end="89:48">sector_num</name> <operator pos:start="89:50" pos:end="89:51">&lt;&lt;</operator> <name pos:start="89:53" pos:end="89:68">BDRV_SECTOR_BITS</name></expr></argument>, <argument pos:start="89:71" pos:end="89:75"><expr pos:start="89:71" pos:end="89:75"><name pos:start="89:71" pos:end="89:75">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="91:13" pos:end="91:26">(<expr pos:start="91:14" pos:end="91:25"><name pos:start="91:14" pos:end="91:19">offset</name> <operator pos:start="91:21" pos:end="91:22">==</operator> <operator pos:start="91:24" pos:end="91:24">-</operator><literal type="number" pos:start="91:25" pos:end="91:25">1</literal></expr>)</condition>;</do>



    <expr_stmt pos:start="95:5" pos:end="95:35"><expr pos:start="95:5" pos:end="95:34"><call pos:start="95:5" pos:end="95:34"><name pos:start="95:5" pos:end="95:24">qemu_co_mutex_unlock</name><argument_list pos:start="95:25" pos:end="95:34">(<argument pos:start="95:26" pos:end="95:33"><expr pos:start="95:26" pos:end="95:33"><operator pos:start="95:26" pos:end="95:26">&amp;</operator><name pos:start="95:27" pos:end="95:33"><name pos:start="95:27" pos:end="95:27">s</name><operator pos:start="95:28" pos:end="95:29">-&gt;</operator><name pos:start="95:30" pos:end="95:33">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="97:5" pos:end="97:15">return <expr pos:start="97:12" pos:end="97:14"><name pos:start="97:12" pos:end="97:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
