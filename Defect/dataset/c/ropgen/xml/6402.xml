<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6402.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:44"><name pos:start="1:1" pos:end="1:13">vdi_co_preadv</name><argument_list pos:start="1:14" pos:end="3:44">(<argument pos:start="1:15" pos:end="1:34">BlockDriverState *bs</argument>, <argument pos:start="1:37" pos:end="1:51">uint64_t offset</argument>, <argument pos:start="1:54" pos:end="1:67">uint64_t bytes</argument>,

              <argument pos:start="3:15" pos:end="3:32">QEMUIOVector *qiov</argument>, <argument pos:start="3:35" pos:end="3:43">int flags</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="103:1">{<block_content pos:start="7:5" pos:end="101:15">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">BDRVVdiState</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:19">s</name> <init pos:start="7:21" pos:end="7:32">= <expr pos:start="7:23" pos:end="7:32"><name pos:start="7:23" pos:end="7:32"><name pos:start="7:23" pos:end="7:24">bs</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:32">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16">QEMUIOVector</name></type> <name pos:start="9:18" pos:end="9:27">local_qiov</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:23">bmap_entry</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:24">block_index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:29"><decl pos:start="15:5" pos:end="15:28"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:28">offset_in_block</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint32_t</name></type> <name pos:start="17:14" pos:end="17:20">n_bytes</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:28"><decl pos:start="19:5" pos:end="19:27"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint64_t</name></type> <name pos:start="19:14" pos:end="19:23">bytes_done</name> <init pos:start="19:25" pos:end="19:27">= <expr pos:start="19:27" pos:end="19:27"><literal type="number" pos:start="19:27" pos:end="19:27">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:16"><decl pos:start="21:5" pos:end="21:15"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:11">ret</name> <init pos:start="21:13" pos:end="21:15">= <expr pos:start="21:15" pos:end="21:15"><literal type="number" pos:start="21:15" pos:end="21:15">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:17"><expr pos:start="25:5" pos:end="25:16"><call pos:start="25:5" pos:end="25:16"><name pos:start="25:5" pos:end="25:10">logout</name><argument_list pos:start="25:11" pos:end="25:16">(<argument pos:start="25:12" pos:end="25:15"><expr pos:start="25:12" pos:end="25:15"><literal type="string" pos:start="25:12" pos:end="25:15">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:45"><expr pos:start="29:5" pos:end="29:44"><call pos:start="29:5" pos:end="29:44"><name pos:start="29:5" pos:end="29:19">qemu_iovec_init</name><argument_list pos:start="29:20" pos:end="29:44">(<argument pos:start="29:21" pos:end="29:31"><expr pos:start="29:21" pos:end="29:31"><operator pos:start="29:21" pos:end="29:21">&amp;</operator><name pos:start="29:22" pos:end="29:31">local_qiov</name></expr></argument>, <argument pos:start="29:34" pos:end="29:43"><expr pos:start="29:34" pos:end="29:43"><name pos:start="29:34" pos:end="29:43"><name pos:start="29:34" pos:end="29:37">qiov</name><operator pos:start="29:38" pos:end="29:39">-&gt;</operator><name pos:start="29:40" pos:end="29:43">niov</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="33:5" pos:end="93:5">while <condition pos:start="33:11" pos:end="33:33">(<expr pos:start="33:12" pos:end="33:32"><name pos:start="33:12" pos:end="33:14">ret</name> <operator pos:start="33:16" pos:end="33:17">&gt;=</operator> <literal type="number" pos:start="33:19" pos:end="33:19">0</literal> <operator pos:start="33:21" pos:end="33:22">&amp;&amp;</operator> <name pos:start="33:24" pos:end="33:28">bytes</name> <operator pos:start="33:30" pos:end="33:30">&gt;</operator> <literal type="number" pos:start="33:32" pos:end="33:32">0</literal></expr>)</condition> <block pos:start="33:35" pos:end="93:5">{<block_content pos:start="35:9" pos:end="91:30">

        <expr_stmt pos:start="35:9" pos:end="35:45"><expr pos:start="35:9" pos:end="35:44"><name pos:start="35:9" pos:end="35:19">block_index</name> <operator pos:start="35:21" pos:end="35:21">=</operator> <name pos:start="35:23" pos:end="35:28">offset</name> <operator pos:start="35:30" pos:end="35:30">/</operator> <name pos:start="35:32" pos:end="35:44"><name pos:start="35:32" pos:end="35:32">s</name><operator pos:start="35:33" pos:end="35:34">-&gt;</operator><name pos:start="35:35" pos:end="35:44">block_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:49"><expr pos:start="37:9" pos:end="37:48"><name pos:start="37:9" pos:end="37:23">offset_in_block</name> <operator pos:start="37:25" pos:end="37:25">=</operator> <name pos:start="37:27" pos:end="37:32">offset</name> <operator pos:start="37:34" pos:end="37:34">%</operator> <name pos:start="37:36" pos:end="37:48"><name pos:start="37:36" pos:end="37:36">s</name><operator pos:start="37:37" pos:end="37:38">-&gt;</operator><name pos:start="37:39" pos:end="37:48">block_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:62"><expr pos:start="39:9" pos:end="39:61"><name pos:start="39:9" pos:end="39:15">n_bytes</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <call pos:start="39:19" pos:end="39:61"><name pos:start="39:19" pos:end="39:21">MIN</name><argument_list pos:start="39:22" pos:end="39:61">(<argument pos:start="39:23" pos:end="39:27"><expr pos:start="39:23" pos:end="39:27"><name pos:start="39:23" pos:end="39:27">bytes</name></expr></argument>, <argument pos:start="39:30" pos:end="39:60"><expr pos:start="39:30" pos:end="39:60"><name pos:start="39:30" pos:end="39:42"><name pos:start="39:30" pos:end="39:30">s</name><operator pos:start="39:31" pos:end="39:32">-&gt;</operator><name pos:start="39:33" pos:end="39:42">block_size</name></name> <operator pos:start="39:44" pos:end="39:44">-</operator> <name pos:start="39:46" pos:end="39:60">offset_in_block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="43:9" pos:end="45:32"><expr pos:start="43:9" pos:end="45:31"><call pos:start="43:9" pos:end="45:31"><name pos:start="43:9" pos:end="43:14">logout</name><argument_list pos:start="43:15" pos:end="45:31">(<argument pos:start="43:16" pos:end="43:68"><expr pos:start="43:16" pos:end="43:68"><literal type="string" pos:start="43:16" pos:end="43:56">"will read %u bytes starting at offset %"</literal> <name pos:start="43:58" pos:end="43:63">PRIu64</name> <literal type="string" pos:start="43:65" pos:end="43:68">"\n"</literal></expr></argument>,

               <argument pos:start="45:16" pos:end="45:22"><expr pos:start="45:16" pos:end="45:22"><name pos:start="45:16" pos:end="45:22">n_bytes</name></expr></argument>, <argument pos:start="45:25" pos:end="45:30"><expr pos:start="45:25" pos:end="45:30"><name pos:start="45:25" pos:end="45:30">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="49:9" pos:end="49:38">/* prepare next AIO request */</comment>

        <expr_stmt pos:start="51:9" pos:end="51:55"><expr pos:start="51:9" pos:end="51:54"><name pos:start="51:9" pos:end="51:18">bmap_entry</name> <operator pos:start="51:20" pos:end="51:20">=</operator> <call pos:start="51:22" pos:end="51:54"><name pos:start="51:22" pos:end="51:32">le32_to_cpu</name><argument_list pos:start="51:33" pos:end="51:54">(<argument pos:start="51:34" pos:end="51:53"><expr pos:start="51:34" pos:end="51:53"><name pos:start="51:34" pos:end="51:53"><name pos:start="51:34" pos:end="51:34">s</name><operator pos:start="51:35" pos:end="51:36">-&gt;</operator><name pos:start="51:37" pos:end="51:40">bmap</name><index pos:start="51:41" pos:end="51:53">[<expr pos:start="51:42" pos:end="51:52"><name pos:start="51:42" pos:end="51:52">block_index</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="81:9"><if pos:start="53:9" pos:end="61:9">if <condition pos:start="53:12" pos:end="53:42">(<expr pos:start="53:13" pos:end="53:41"><operator pos:start="53:13" pos:end="53:13">!</operator><call pos:start="53:14" pos:end="53:41"><name pos:start="53:14" pos:end="53:29">VDI_IS_ALLOCATED</name><argument_list pos:start="53:30" pos:end="53:41">(<argument pos:start="53:31" pos:end="53:40"><expr pos:start="53:31" pos:end="53:40"><name pos:start="53:31" pos:end="53:40">bmap_entry</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="53:44" pos:end="61:9">{<block_content pos:start="57:13" pos:end="59:20">

            <comment type="block" pos:start="55:13" pos:end="55:69">/* Block not allocated, return zeros, no need to wait. */</comment>

            <expr_stmt pos:start="57:13" pos:end="57:60"><expr pos:start="57:13" pos:end="57:59"><call pos:start="57:13" pos:end="57:59"><name pos:start="57:13" pos:end="57:29">qemu_iovec_memset</name><argument_list pos:start="57:30" pos:end="57:59">(<argument pos:start="57:31" pos:end="57:34"><expr pos:start="57:31" pos:end="57:34"><name pos:start="57:31" pos:end="57:34">qiov</name></expr></argument>, <argument pos:start="57:37" pos:end="57:46"><expr pos:start="57:37" pos:end="57:46"><name pos:start="57:37" pos:end="57:46">bytes_done</name></expr></argument>, <argument pos:start="57:49" pos:end="57:49"><expr pos:start="57:49" pos:end="57:49"><literal type="number" pos:start="57:49" pos:end="57:49">0</literal></expr></argument>, <argument pos:start="57:52" pos:end="57:58"><expr pos:start="57:52" pos:end="57:58"><name pos:start="57:52" pos:end="57:58">n_bytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:20"><expr pos:start="59:13" pos:end="59:19"><name pos:start="59:13" pos:end="59:15">ret</name> <operator pos:start="59:17" pos:end="59:17">=</operator> <literal type="number" pos:start="59:19" pos:end="59:19">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="61:11" pos:end="81:9">else <block pos:start="61:16" pos:end="81:9">{<block_content pos:start="63:13" pos:end="79:49">

            <decl_stmt pos:start="63:13" pos:end="67:51"><decl pos:start="63:13" pos:end="67:50"><type pos:start="63:13" pos:end="63:20"><name pos:start="63:13" pos:end="63:20">uint64_t</name></type> <name pos:start="63:22" pos:end="63:32">data_offset</name> <init pos:start="63:34" pos:end="67:50">= <expr pos:start="63:36" pos:end="67:50"><name pos:start="63:36" pos:end="63:56"><name pos:start="63:36" pos:end="63:36">s</name><operator pos:start="63:37" pos:end="63:38">-&gt;</operator><name pos:start="63:39" pos:end="63:44">header</name><operator pos:start="63:45" pos:end="63:45">.</operator><name pos:start="63:46" pos:end="63:56">offset_data</name></name> <operator pos:start="63:58" pos:end="63:58">+</operator>

                                   <operator pos:start="65:36" pos:end="65:36">(</operator><name pos:start="65:37" pos:end="65:44">uint64_t</name><operator pos:start="65:45" pos:end="65:45">)</operator><name pos:start="65:46" pos:end="65:55">bmap_entry</name> <operator pos:start="65:57" pos:end="65:57">*</operator> <name pos:start="65:59" pos:end="65:71"><name pos:start="65:59" pos:end="65:59">s</name><operator pos:start="65:60" pos:end="65:61">-&gt;</operator><name pos:start="65:62" pos:end="65:71">block_size</name></name> <operator pos:start="65:73" pos:end="65:73">+</operator>

                                   <name pos:start="67:36" pos:end="67:50">offset_in_block</name></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="71:13" pos:end="71:42"><expr pos:start="71:13" pos:end="71:41"><call pos:start="71:13" pos:end="71:41"><name pos:start="71:13" pos:end="71:28">qemu_iovec_reset</name><argument_list pos:start="71:29" pos:end="71:41">(<argument pos:start="71:30" pos:end="71:40"><expr pos:start="71:30" pos:end="71:40"><operator pos:start="71:30" pos:end="71:30">&amp;</operator><name pos:start="71:31" pos:end="71:40">local_qiov</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:70"><expr pos:start="73:13" pos:end="73:69"><call pos:start="73:13" pos:end="73:69"><name pos:start="73:13" pos:end="73:29">qemu_iovec_concat</name><argument_list pos:start="73:30" pos:end="73:69">(<argument pos:start="73:31" pos:end="73:41"><expr pos:start="73:31" pos:end="73:41"><operator pos:start="73:31" pos:end="73:31">&amp;</operator><name pos:start="73:32" pos:end="73:41">local_qiov</name></expr></argument>, <argument pos:start="73:44" pos:end="73:47"><expr pos:start="73:44" pos:end="73:47"><name pos:start="73:44" pos:end="73:47">qiov</name></expr></argument>, <argument pos:start="73:50" pos:end="73:59"><expr pos:start="73:50" pos:end="73:59"><name pos:start="73:50" pos:end="73:59">bytes_done</name></expr></argument>, <argument pos:start="73:62" pos:end="73:68"><expr pos:start="73:62" pos:end="73:68"><name pos:start="73:62" pos:end="73:68">n_bytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="77:13" pos:end="79:49"><expr pos:start="77:13" pos:end="79:48"><name pos:start="77:13" pos:end="77:15">ret</name> <operator pos:start="77:17" pos:end="77:17">=</operator> <call pos:start="77:19" pos:end="79:48"><name pos:start="77:19" pos:end="77:32">bdrv_co_preadv</name><argument_list pos:start="77:33" pos:end="79:48">(<argument pos:start="77:34" pos:end="77:45"><expr pos:start="77:34" pos:end="77:45"><name pos:start="77:34" pos:end="77:45"><name pos:start="77:34" pos:end="77:35">bs</name><operator pos:start="77:36" pos:end="77:37">-&gt;</operator><name pos:start="77:38" pos:end="77:41">file</name><operator pos:start="77:42" pos:end="77:43">-&gt;</operator><name pos:start="77:44" pos:end="77:45">bs</name></name></expr></argument>, <argument pos:start="77:48" pos:end="77:58"><expr pos:start="77:48" pos:end="77:58"><name pos:start="77:48" pos:end="77:58">data_offset</name></expr></argument>, <argument pos:start="77:61" pos:end="77:67"><expr pos:start="77:61" pos:end="77:67"><name pos:start="77:61" pos:end="77:67">n_bytes</name></expr></argument>,

                                 <argument pos:start="79:34" pos:end="79:44"><expr pos:start="79:34" pos:end="79:44"><operator pos:start="79:34" pos:end="79:34">&amp;</operator><name pos:start="79:35" pos:end="79:44">local_qiov</name></expr></argument>, <argument pos:start="79:47" pos:end="79:47"><expr pos:start="79:47" pos:end="79:47"><literal type="number" pos:start="79:47" pos:end="79:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:43"><expr pos:start="83:9" pos:end="83:42"><call pos:start="83:9" pos:end="83:42"><name pos:start="83:9" pos:end="83:14">logout</name><argument_list pos:start="83:15" pos:end="83:42">(<argument pos:start="83:16" pos:end="83:32"><expr pos:start="83:16" pos:end="83:32"><literal type="string" pos:start="83:16" pos:end="83:32">"%u bytes read\n"</literal></expr></argument>, <argument pos:start="83:35" pos:end="83:41"><expr pos:start="83:35" pos:end="83:41"><name pos:start="83:35" pos:end="83:41">n_bytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="87:9" pos:end="87:25"><expr pos:start="87:9" pos:end="87:24"><name pos:start="87:9" pos:end="87:13">bytes</name> <operator pos:start="87:15" pos:end="87:16">-=</operator> <name pos:start="87:18" pos:end="87:24">n_bytes</name></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:26"><expr pos:start="89:9" pos:end="89:25"><name pos:start="89:9" pos:end="89:14">offset</name> <operator pos:start="89:16" pos:end="89:17">+=</operator> <name pos:start="89:19" pos:end="89:25">n_bytes</name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:30"><expr pos:start="91:9" pos:end="91:29"><name pos:start="91:9" pos:end="91:18">bytes_done</name> <operator pos:start="91:20" pos:end="91:21">+=</operator> <name pos:start="91:23" pos:end="91:29">n_bytes</name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="97:5" pos:end="97:36"><expr pos:start="97:5" pos:end="97:35"><call pos:start="97:5" pos:end="97:35"><name pos:start="97:5" pos:end="97:22">qemu_iovec_destroy</name><argument_list pos:start="97:23" pos:end="97:35">(<argument pos:start="97:24" pos:end="97:34"><expr pos:start="97:24" pos:end="97:34"><operator pos:start="97:24" pos:end="97:24">&amp;</operator><name pos:start="97:25" pos:end="97:34">local_qiov</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="101:5" pos:end="101:15">return <expr pos:start="101:12" pos:end="101:14"><name pos:start="101:12" pos:end="101:14">ret</name></expr>;</return>

</block_content>}</block>
</unit>
