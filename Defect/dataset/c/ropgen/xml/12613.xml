<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12613.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">lsi_do_command</name><parameter_list pos:start="1:27" pos:end="1:39">(<parameter pos:start="1:28" pos:end="1:38"><decl pos:start="1:28" pos:end="1:38"><type pos:start="1:28" pos:end="1:37"><name pos:start="1:28" pos:end="1:35">LSIState</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="101:1">{<block_content pos:start="5:5" pos:end="99:5">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">SCSIDevice</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:19"><name pos:start="7:13" pos:end="7:15">buf</name><index pos:start="7:16" pos:end="7:19">[<expr pos:start="7:17" pos:end="7:18"><literal type="number" pos:start="7:17" pos:end="7:18">16</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:15">id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">n</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:45"><expr pos:start="15:5" pos:end="15:44"><call pos:start="15:5" pos:end="15:44"><name pos:start="15:5" pos:end="15:11">DPRINTF</name><argument_list pos:start="15:12" pos:end="15:44">(<argument pos:start="15:13" pos:end="15:35"><expr pos:start="15:13" pos:end="15:35"><literal type="string" pos:start="15:13" pos:end="15:35">"Send command len=%d\n"</literal></expr></argument>, <argument pos:start="15:38" pos:end="15:43"><expr pos:start="15:38" pos:end="15:43"><name pos:start="15:38" pos:end="15:43"><name pos:start="15:38" pos:end="15:38">s</name><operator pos:start="15:39" pos:end="15:40">-&gt;</operator><name pos:start="15:41" pos:end="15:43">dbc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="19:20"><if pos:start="17:5" pos:end="19:20">if <condition pos:start="17:8" pos:end="17:20">(<expr pos:start="17:9" pos:end="17:19"><name pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:14">dbc</name></name> <operator pos:start="17:16" pos:end="17:16">&gt;</operator> <literal type="number" pos:start="17:18" pos:end="17:19">16</literal></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:20"><block_content pos:start="19:9" pos:end="19:20">

        <expr_stmt pos:start="19:9" pos:end="19:20"><expr pos:start="19:9" pos:end="19:19"><name pos:start="19:9" pos:end="19:14"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:14">dbc</name></name> <operator pos:start="19:16" pos:end="19:16">=</operator> <literal type="number" pos:start="19:18" pos:end="19:19">16</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:54"><expr pos:start="21:5" pos:end="21:53"><call pos:start="21:5" pos:end="21:53"><name pos:start="21:5" pos:end="21:16">pci_dma_read</name><argument_list pos:start="21:17" pos:end="21:53">(<argument pos:start="21:18" pos:end="21:30"><expr pos:start="21:18" pos:end="21:30"><call pos:start="21:18" pos:end="21:30"><name pos:start="21:18" pos:end="21:27">PCI_DEVICE</name><argument_list pos:start="21:28" pos:end="21:30">(<argument pos:start="21:29" pos:end="21:29"><expr pos:start="21:29" pos:end="21:29"><name pos:start="21:29" pos:end="21:29">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="21:33" pos:end="21:39"><expr pos:start="21:33" pos:end="21:39"><name pos:start="21:33" pos:end="21:39"><name pos:start="21:33" pos:end="21:33">s</name><operator pos:start="21:34" pos:end="21:35">-&gt;</operator><name pos:start="21:36" pos:end="21:39">dnad</name></name></expr></argument>, <argument pos:start="21:42" pos:end="21:44"><expr pos:start="21:42" pos:end="21:44"><name pos:start="21:42" pos:end="21:44">buf</name></expr></argument>, <argument pos:start="21:47" pos:end="21:52"><expr pos:start="21:47" pos:end="21:52"><name pos:start="21:47" pos:end="21:52"><name pos:start="21:47" pos:end="21:47">s</name><operator pos:start="21:48" pos:end="21:49">-&gt;</operator><name pos:start="21:50" pos:end="21:52">dbc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:21"><expr pos:start="23:5" pos:end="23:20"><name pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:11">sfbr</name></name> <operator pos:start="23:13" pos:end="23:13">=</operator> <name pos:start="23:15" pos:end="23:20"><name pos:start="23:15" pos:end="23:17">buf</name><index pos:start="23:18" pos:end="23:20">[<expr pos:start="23:19" pos:end="23:19"><literal type="number" pos:start="23:19" pos:end="23:19">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:28"><expr pos:start="25:5" pos:end="25:27"><name pos:start="25:5" pos:end="25:23"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:23">command_complete</name></name> <operator pos:start="25:25" pos:end="25:25">=</operator> <literal type="number" pos:start="25:27" pos:end="25:27">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:36"><expr pos:start="29:5" pos:end="29:35"><name pos:start="29:5" pos:end="29:6">id</name> <operator pos:start="29:8" pos:end="29:8">=</operator> <operator pos:start="29:10" pos:end="29:10">(</operator><name pos:start="29:11" pos:end="29:23"><name pos:start="29:11" pos:end="29:11">s</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:23">select_tag</name></name> <operator pos:start="29:25" pos:end="29:26">&gt;&gt;</operator> <literal type="number" pos:start="29:28" pos:end="29:28">8</literal><operator pos:start="29:29" pos:end="29:29">)</operator> <operator pos:start="29:31" pos:end="29:31">&amp;</operator> <literal type="number" pos:start="29:33" pos:end="29:35">0xf</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:59"><expr pos:start="31:5" pos:end="31:58"><name pos:start="31:5" pos:end="31:7">dev</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <call pos:start="31:11" pos:end="31:58"><name pos:start="31:11" pos:end="31:26">scsi_device_find</name><argument_list pos:start="31:27" pos:end="31:58">(<argument pos:start="31:28" pos:end="31:34"><expr pos:start="31:28" pos:end="31:34"><operator pos:start="31:28" pos:end="31:28">&amp;</operator><name pos:start="31:29" pos:end="31:34"><name pos:start="31:29" pos:end="31:29">s</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:34">bus</name></name></expr></argument>, <argument pos:start="31:37" pos:end="31:37"><expr pos:start="31:37" pos:end="31:37"><literal type="number" pos:start="31:37" pos:end="31:37">0</literal></expr></argument>, <argument pos:start="31:40" pos:end="31:41"><expr pos:start="31:40" pos:end="31:41"><name pos:start="31:40" pos:end="31:41">id</name></expr></argument>, <argument pos:start="31:44" pos:end="31:57"><expr pos:start="31:44" pos:end="31:57"><name pos:start="31:44" pos:end="31:57"><name pos:start="31:44" pos:end="31:44">s</name><operator pos:start="31:45" pos:end="31:46">-&gt;</operator><name pos:start="31:47" pos:end="31:57">current_lun</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:13">(<expr pos:start="33:9" pos:end="33:12"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:12">dev</name></expr>)</condition> <block pos:start="33:15" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:15">

        <expr_stmt pos:start="35:9" pos:end="35:33"><expr pos:start="35:9" pos:end="35:32"><call pos:start="35:9" pos:end="35:32"><name pos:start="35:9" pos:end="35:25">lsi_bad_selection</name><argument_list pos:start="35:26" pos:end="35:32">(<argument pos:start="35:27" pos:end="35:27"><expr pos:start="35:27" pos:end="35:27"><name pos:start="35:27" pos:end="35:27">s</name></expr></argument>, <argument pos:start="35:30" pos:end="35:31"><expr pos:start="35:30" pos:end="35:31"><name pos:start="35:30" pos:end="35:31">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:31"><expr pos:start="43:5" pos:end="43:30"><call pos:start="43:5" pos:end="43:30"><name pos:start="43:5" pos:end="43:10">assert</name><argument_list pos:start="43:11" pos:end="43:30">(<argument pos:start="43:12" pos:end="43:29"><expr pos:start="43:12" pos:end="43:29"><name pos:start="43:12" pos:end="43:21"><name pos:start="43:12" pos:end="43:12">s</name><operator pos:start="43:13" pos:end="43:14">-&gt;</operator><name pos:start="43:15" pos:end="43:21">current</name></name> <operator pos:start="43:23" pos:end="43:24">==</operator> <name pos:start="43:26" pos:end="43:29">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:48"><expr pos:start="45:5" pos:end="45:47"><name pos:start="45:5" pos:end="45:14"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:14">current</name></name> <operator pos:start="45:16" pos:end="45:16">=</operator> <call pos:start="45:18" pos:end="45:47"><name pos:start="45:18" pos:end="45:26">g_malloc0</name><argument_list pos:start="45:27" pos:end="45:47">(<argument pos:start="45:28" pos:end="45:46"><expr pos:start="45:28" pos:end="45:46"><sizeof pos:start="45:28" pos:end="45:46">sizeof<argument_list pos:start="45:34" pos:end="45:46">(<argument pos:start="45:35" pos:end="45:45"><expr pos:start="45:35" pos:end="45:45"><name pos:start="45:35" pos:end="45:45">lsi_request</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:36"><expr pos:start="47:5" pos:end="47:35"><name pos:start="47:5" pos:end="47:19"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:14">current</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:19">tag</name></name> <operator pos:start="47:21" pos:end="47:21">=</operator> <name pos:start="47:23" pos:end="47:35"><name pos:start="47:23" pos:end="47:23">s</name><operator pos:start="47:24" pos:end="47:25">-&gt;</operator><name pos:start="47:26" pos:end="47:35">select_tag</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="51:47"><expr pos:start="49:5" pos:end="51:46"><name pos:start="49:5" pos:end="49:19"><name pos:start="49:5" pos:end="49:5">s</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:14">current</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:19">req</name></name> <operator pos:start="49:21" pos:end="49:21">=</operator> <call pos:start="49:23" pos:end="51:46"><name pos:start="49:23" pos:end="49:34">scsi_req_new</name><argument_list pos:start="49:35" pos:end="51:46">(<argument pos:start="49:36" pos:end="49:38"><expr pos:start="49:36" pos:end="49:38"><name pos:start="49:36" pos:end="49:38">dev</name></expr></argument>, <argument pos:start="49:41" pos:end="49:55"><expr pos:start="49:41" pos:end="49:55"><name pos:start="49:41" pos:end="49:55"><name pos:start="49:41" pos:end="49:41">s</name><operator pos:start="49:42" pos:end="49:43">-&gt;</operator><name pos:start="49:44" pos:end="49:50">current</name><operator pos:start="49:51" pos:end="49:52">-&gt;</operator><name pos:start="49:53" pos:end="49:55">tag</name></name></expr></argument>, <argument pos:start="49:58" pos:end="49:71"><expr pos:start="49:58" pos:end="49:71"><name pos:start="49:58" pos:end="49:71"><name pos:start="49:58" pos:end="49:58">s</name><operator pos:start="49:59" pos:end="49:60">-&gt;</operator><name pos:start="49:61" pos:end="49:71">current_lun</name></name></expr></argument>, <argument pos:start="49:74" pos:end="49:76"><expr pos:start="49:74" pos:end="49:76"><name pos:start="49:74" pos:end="49:76">buf</name></expr></argument>,

                                   <argument pos:start="51:36" pos:end="51:45"><expr pos:start="51:36" pos:end="51:45"><name pos:start="51:36" pos:end="51:45"><name pos:start="51:36" pos:end="51:36">s</name><operator pos:start="51:37" pos:end="51:38">-&gt;</operator><name pos:start="51:39" pos:end="51:45">current</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:42"><expr pos:start="55:5" pos:end="55:41"><name pos:start="55:5" pos:end="55:5">n</name> <operator pos:start="55:7" pos:end="55:7">=</operator> <call pos:start="55:9" pos:end="55:41"><name pos:start="55:9" pos:end="55:24">scsi_req_enqueue</name><argument_list pos:start="55:25" pos:end="55:41">(<argument pos:start="55:26" pos:end="55:40"><expr pos:start="55:26" pos:end="55:40"><name pos:start="55:26" pos:end="55:40"><name pos:start="55:26" pos:end="55:26">s</name><operator pos:start="55:27" pos:end="55:28">-&gt;</operator><name pos:start="55:29" pos:end="55:35">current</name><operator pos:start="55:36" pos:end="55:37">-&gt;</operator><name pos:start="55:38" pos:end="55:40">req</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="71:5"><if pos:start="57:5" pos:end="71:5">if <condition pos:start="57:8" pos:end="57:10">(<expr pos:start="57:9" pos:end="57:9"><name pos:start="57:9" pos:end="57:9">n</name></expr>)</condition> <block pos:start="57:12" pos:end="71:5">{<block_content pos:start="59:9" pos:end="69:43">

        <if_stmt pos:start="59:9" pos:end="67:9"><if pos:start="59:9" pos:end="63:9">if <condition pos:start="59:12" pos:end="59:18">(<expr pos:start="59:13" pos:end="59:17"><name pos:start="59:13" pos:end="59:13">n</name> <operator pos:start="59:15" pos:end="59:15">&gt;</operator> <literal type="number" pos:start="59:17" pos:end="59:17">0</literal></expr>)</condition> <block pos:start="59:20" pos:end="63:9">{<block_content pos:start="61:13" pos:end="61:39">

            <expr_stmt pos:start="61:13" pos:end="61:39"><expr pos:start="61:13" pos:end="61:38"><call pos:start="61:13" pos:end="61:38"><name pos:start="61:13" pos:end="61:25">lsi_set_phase</name><argument_list pos:start="61:26" pos:end="61:38">(<argument pos:start="61:27" pos:end="61:27"><expr pos:start="61:27" pos:end="61:27"><name pos:start="61:27" pos:end="61:27">s</name></expr></argument>, <argument pos:start="61:30" pos:end="61:37"><expr pos:start="61:30" pos:end="61:37"><name pos:start="61:30" pos:end="61:37">PHASE_DI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="63:11" pos:end="67:9">else if <condition pos:start="63:19" pos:end="63:25">(<expr pos:start="63:20" pos:end="63:24"><name pos:start="63:20" pos:end="63:20">n</name> <operator pos:start="63:22" pos:end="63:22">&lt;</operator> <literal type="number" pos:start="63:24" pos:end="63:24">0</literal></expr>)</condition> <block pos:start="63:27" pos:end="67:9">{<block_content pos:start="65:13" pos:end="65:39">

            <expr_stmt pos:start="65:13" pos:end="65:39"><expr pos:start="65:13" pos:end="65:38"><call pos:start="65:13" pos:end="65:38"><name pos:start="65:13" pos:end="65:25">lsi_set_phase</name><argument_list pos:start="65:26" pos:end="65:38">(<argument pos:start="65:27" pos:end="65:27"><expr pos:start="65:27" pos:end="65:27"><name pos:start="65:27" pos:end="65:27">s</name></expr></argument>, <argument pos:start="65:30" pos:end="65:37"><expr pos:start="65:30" pos:end="65:37"><name pos:start="65:30" pos:end="65:37">PHASE_DO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:43"><expr pos:start="69:9" pos:end="69:42"><call pos:start="69:9" pos:end="69:42"><name pos:start="69:9" pos:end="69:25">scsi_req_continue</name><argument_list pos:start="69:26" pos:end="69:42">(<argument pos:start="69:27" pos:end="69:41"><expr pos:start="69:27" pos:end="69:41"><name pos:start="69:27" pos:end="69:41"><name pos:start="69:27" pos:end="69:27">s</name><operator pos:start="69:28" pos:end="69:29">-&gt;</operator><name pos:start="69:30" pos:end="69:36">current</name><operator pos:start="69:37" pos:end="69:38">-&gt;</operator><name pos:start="69:39" pos:end="69:41">req</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="73:5" pos:end="99:5"><if pos:start="73:5" pos:end="99:5">if <condition pos:start="73:8" pos:end="73:29">(<expr pos:start="73:9" pos:end="73:28"><operator pos:start="73:9" pos:end="73:9">!</operator><name pos:start="73:10" pos:end="73:28"><name pos:start="73:10" pos:end="73:10">s</name><operator pos:start="73:11" pos:end="73:12">-&gt;</operator><name pos:start="73:13" pos:end="73:28">command_complete</name></name></expr>)</condition> <block pos:start="73:31" pos:end="99:5">{<block_content pos:start="75:9" pos:end="97:9">

        <if_stmt pos:start="75:9" pos:end="97:9"><if pos:start="75:9" pos:end="91:9">if <condition pos:start="75:12" pos:end="75:14">(<expr pos:start="75:13" pos:end="75:13"><name pos:start="75:13" pos:end="75:13">n</name></expr>)</condition> <block pos:start="75:16" pos:end="91:9">{<block_content pos:start="79:13" pos:end="89:33">

            <comment type="block" pos:start="77:13" pos:end="77:70">/* Command did not complete immediately so disconnect.  */</comment>

            <expr_stmt pos:start="79:13" pos:end="79:35"><expr pos:start="79:13" pos:end="79:34"><call pos:start="79:13" pos:end="79:34"><name pos:start="79:13" pos:end="79:28">lsi_add_msg_byte</name><argument_list pos:start="79:29" pos:end="79:34">(<argument pos:start="79:30" pos:end="79:30"><expr pos:start="79:30" pos:end="79:30"><name pos:start="79:30" pos:end="79:30">s</name></expr></argument>, <argument pos:start="79:33" pos:end="79:33"><expr pos:start="79:33" pos:end="79:33"><literal type="number" pos:start="79:33" pos:end="79:33">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="79:37" pos:end="79:59">/* SAVE DATA POINTER */</comment>

            <expr_stmt pos:start="81:13" pos:end="81:35"><expr pos:start="81:13" pos:end="81:34"><call pos:start="81:13" pos:end="81:34"><name pos:start="81:13" pos:end="81:28">lsi_add_msg_byte</name><argument_list pos:start="81:29" pos:end="81:34">(<argument pos:start="81:30" pos:end="81:30"><expr pos:start="81:30" pos:end="81:30"><name pos:start="81:30" pos:end="81:30">s</name></expr></argument>, <argument pos:start="81:33" pos:end="81:33"><expr pos:start="81:33" pos:end="81:33"><literal type="number" pos:start="81:33" pos:end="81:33">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="81:37" pos:end="81:52">/* DISCONNECT */</comment>

            <comment type="block" pos:start="83:13" pos:end="83:27">/* wait data */</comment>

            <expr_stmt pos:start="85:13" pos:end="85:39"><expr pos:start="85:13" pos:end="85:38"><call pos:start="85:13" pos:end="85:38"><name pos:start="85:13" pos:end="85:25">lsi_set_phase</name><argument_list pos:start="85:26" pos:end="85:38">(<argument pos:start="85:27" pos:end="85:27"><expr pos:start="85:27" pos:end="85:27"><name pos:start="85:27" pos:end="85:27">s</name></expr></argument>, <argument pos:start="85:30" pos:end="85:37"><expr pos:start="85:30" pos:end="85:37"><name pos:start="85:30" pos:end="85:37">PHASE_MI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:30"><expr pos:start="87:13" pos:end="87:29"><name pos:start="87:13" pos:end="87:25"><name pos:start="87:13" pos:end="87:13">s</name><operator pos:start="87:14" pos:end="87:15">-&gt;</operator><name pos:start="87:16" pos:end="87:25">msg_action</name></name> <operator pos:start="87:27" pos:end="87:27">=</operator> <literal type="number" pos:start="87:29" pos:end="87:29">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:33"><expr pos:start="89:13" pos:end="89:32"><call pos:start="89:13" pos:end="89:32"><name pos:start="89:13" pos:end="89:29">lsi_queue_command</name><argument_list pos:start="89:30" pos:end="89:32">(<argument pos:start="89:31" pos:end="89:31"><expr pos:start="89:31" pos:end="89:31"><name pos:start="89:31" pos:end="89:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="91:11" pos:end="97:9">else <block pos:start="91:16" pos:end="97:9">{<block_content pos:start="95:13" pos:end="95:39">

            <comment type="block" pos:start="93:13" pos:end="93:39">/* wait command complete */</comment>

            <expr_stmt pos:start="95:13" pos:end="95:39"><expr pos:start="95:13" pos:end="95:38"><call pos:start="95:13" pos:end="95:38"><name pos:start="95:13" pos:end="95:25">lsi_set_phase</name><argument_list pos:start="95:26" pos:end="95:38">(<argument pos:start="95:27" pos:end="95:27"><expr pos:start="95:27" pos:end="95:27"><name pos:start="95:27" pos:end="95:27">s</name></expr></argument>, <argument pos:start="95:30" pos:end="95:37"><expr pos:start="95:30" pos:end="95:37"><name pos:start="95:30" pos:end="95:37">PHASE_DI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
