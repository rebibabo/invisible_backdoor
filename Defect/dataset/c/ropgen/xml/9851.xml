<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9851.c" pos:tabs="8"><function pos:start="1:1" pos:end="241:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">pl110_update_display</name><parameter_list pos:start="1:33" pos:end="1:46">(<parameter pos:start="1:34" pos:end="1:45"><decl pos:start="1:34" pos:end="1:45"><type pos:start="1:34" pos:end="1:39"><name pos:start="1:34" pos:end="1:37">void</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:45">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="241:1">{<block_content pos:start="5:5" pos:end="239:22">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">PL110State</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">s</name> <init pos:start="5:19" pos:end="5:40">= <expr pos:start="5:21" pos:end="5:40"><operator pos:start="5:21" pos:end="5:21">(</operator><name pos:start="5:22" pos:end="5:31">PL110State</name> <operator pos:start="5:33" pos:end="5:33">*</operator><operator pos:start="5:34" pos:end="5:34">)</operator><name pos:start="5:35" pos:end="5:40">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">SysBusDevice</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:21">sbd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:59"><decl pos:start="9:5" pos:end="9:58"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">DisplaySurface</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:27">surface</name> <init pos:start="9:29" pos:end="9:58">= <expr pos:start="9:31" pos:end="9:58"><call pos:start="9:31" pos:end="9:58"><name pos:start="9:31" pos:end="9:50">qemu_console_surface</name><argument_list pos:start="9:51" pos:end="9:58">(<argument pos:start="9:52" pos:end="9:57"><expr pos:start="9:52" pos:end="9:57"><name pos:start="9:52" pos:end="9:57"><name pos:start="9:52" pos:end="9:52">s</name><operator pos:start="9:53" pos:end="9:54">-&gt;</operator><name pos:start="9:55" pos:end="9:57">con</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:10">drawfn</name><modifier pos:start="11:11" pos:end="11:11">*</modifier></type> <name pos:start="11:13" pos:end="11:19">fntable</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:14"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:10">drawfn</name></type> <name pos:start="13:12" pos:end="13:13">fn</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:18">dest_width</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:18"><decl pos:start="17:5" pos:end="17:17"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:17">src_width</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:19"><decl pos:start="19:5" pos:end="19:18"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:18">bpp_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:14"><decl pos:start="21:5" pos:end="21:13"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:13">first</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:13"><decl pos:start="23:5" pos:end="23:12"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:12">last</name></decl>;</decl_stmt>



    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:26">(<expr pos:start="27:9" pos:end="27:25"><operator pos:start="27:9" pos:end="27:9">!</operator><call pos:start="27:10" pos:end="27:25"><name pos:start="27:10" pos:end="27:22">pl110_enabled</name><argument_list pos:start="27:23" pos:end="27:25">(<argument pos:start="27:24" pos:end="27:24"><expr pos:start="27:24" pos:end="27:24"><name pos:start="27:24" pos:end="27:24">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:28" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:15">

        <return pos:start="29:9" pos:end="29:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:28"><expr pos:start="35:5" pos:end="35:27"><name pos:start="35:5" pos:end="35:7">sbd</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <call pos:start="35:11" pos:end="35:27"><name pos:start="35:11" pos:end="35:24">SYS_BUS_DEVICE</name><argument_list pos:start="35:25" pos:end="35:27">(<argument pos:start="35:26" pos:end="35:26"><expr pos:start="35:26" pos:end="35:26"><name pos:start="35:26" pos:end="35:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="39:5" pos:end="91:5">switch <condition pos:start="39:12" pos:end="39:44">(<expr pos:start="39:13" pos:end="39:43"><call pos:start="39:13" pos:end="39:43"><name pos:start="39:13" pos:end="39:34">surface_bits_per_pixel</name><argument_list pos:start="39:35" pos:end="39:43">(<argument pos:start="39:36" pos:end="39:42"><expr pos:start="39:36" pos:end="39:42"><name pos:start="39:36" pos:end="39:42">surface</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:46" pos:end="91:5">{<block_content pos:start="41:5" pos:end="89:16">

    <case pos:start="41:5" pos:end="41:11">case <expr pos:start="41:10" pos:end="41:10"><literal type="number" pos:start="41:10" pos:end="41:10">0</literal></expr>:</case>

        <return pos:start="43:9" pos:end="43:15">return;</return>

    <case pos:start="45:5" pos:end="45:11">case <expr pos:start="45:10" pos:end="45:10"><literal type="number" pos:start="45:10" pos:end="45:10">8</literal></expr>:</case>

        <expr_stmt pos:start="47:9" pos:end="47:34"><expr pos:start="47:9" pos:end="47:33"><name pos:start="47:9" pos:end="47:15">fntable</name> <operator pos:start="47:17" pos:end="47:17">=</operator> <name pos:start="47:19" pos:end="47:33">pl110_draw_fn_8</name></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:23"><expr pos:start="49:9" pos:end="49:22"><name pos:start="49:9" pos:end="49:18">dest_width</name> <operator pos:start="49:20" pos:end="49:20">=</operator> <literal type="number" pos:start="49:22" pos:end="49:22">1</literal></expr>;</expr_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>

    <case pos:start="53:5" pos:end="53:12">case <expr pos:start="53:10" pos:end="53:11"><literal type="number" pos:start="53:10" pos:end="53:11">15</literal></expr>:</case>

        <expr_stmt pos:start="55:9" pos:end="55:35"><expr pos:start="55:9" pos:end="55:34"><name pos:start="55:9" pos:end="55:15">fntable</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <name pos:start="55:19" pos:end="55:34">pl110_draw_fn_15</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:23"><expr pos:start="57:9" pos:end="57:22"><name pos:start="57:9" pos:end="57:18">dest_width</name> <operator pos:start="57:20" pos:end="57:20">=</operator> <literal type="number" pos:start="57:22" pos:end="57:22">2</literal></expr>;</expr_stmt>

        <break pos:start="59:9" pos:end="59:14">break;</break>

    <case pos:start="61:5" pos:end="61:12">case <expr pos:start="61:10" pos:end="61:11"><literal type="number" pos:start="61:10" pos:end="61:11">16</literal></expr>:</case>

        <expr_stmt pos:start="63:9" pos:end="63:35"><expr pos:start="63:9" pos:end="63:34"><name pos:start="63:9" pos:end="63:15">fntable</name> <operator pos:start="63:17" pos:end="63:17">=</operator> <name pos:start="63:19" pos:end="63:34">pl110_draw_fn_16</name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:23"><expr pos:start="65:9" pos:end="65:22"><name pos:start="65:9" pos:end="65:18">dest_width</name> <operator pos:start="65:20" pos:end="65:20">=</operator> <literal type="number" pos:start="65:22" pos:end="65:22">2</literal></expr>;</expr_stmt>

        <break pos:start="67:9" pos:end="67:14">break;</break>

    <case pos:start="69:5" pos:end="69:12">case <expr pos:start="69:10" pos:end="69:11"><literal type="number" pos:start="69:10" pos:end="69:11">24</literal></expr>:</case>

        <expr_stmt pos:start="71:9" pos:end="71:35"><expr pos:start="71:9" pos:end="71:34"><name pos:start="71:9" pos:end="71:15">fntable</name> <operator pos:start="71:17" pos:end="71:17">=</operator> <name pos:start="71:19" pos:end="71:34">pl110_draw_fn_24</name></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:23"><expr pos:start="73:9" pos:end="73:22"><name pos:start="73:9" pos:end="73:18">dest_width</name> <operator pos:start="73:20" pos:end="73:20">=</operator> <literal type="number" pos:start="73:22" pos:end="73:22">3</literal></expr>;</expr_stmt>

        <break pos:start="75:9" pos:end="75:14">break;</break>

    <case pos:start="77:5" pos:end="77:12">case <expr pos:start="77:10" pos:end="77:11"><literal type="number" pos:start="77:10" pos:end="77:11">32</literal></expr>:</case>

        <expr_stmt pos:start="79:9" pos:end="79:35"><expr pos:start="79:9" pos:end="79:34"><name pos:start="79:9" pos:end="79:15">fntable</name> <operator pos:start="79:17" pos:end="79:17">=</operator> <name pos:start="79:19" pos:end="79:34">pl110_draw_fn_32</name></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:23"><expr pos:start="81:9" pos:end="81:22"><name pos:start="81:9" pos:end="81:18">dest_width</name> <operator pos:start="81:20" pos:end="81:20">=</operator> <literal type="number" pos:start="81:22" pos:end="81:22">4</literal></expr>;</expr_stmt>

        <break pos:start="83:9" pos:end="83:14">break;</break>

    <default pos:start="85:5" pos:end="85:12">default:</default>

        <expr_stmt pos:start="87:9" pos:end="87:52"><expr pos:start="87:9" pos:end="87:51"><call pos:start="87:9" pos:end="87:51"><name pos:start="87:9" pos:end="87:15">fprintf</name><argument_list pos:start="87:16" pos:end="87:51">(<argument pos:start="87:17" pos:end="87:22"><expr pos:start="87:17" pos:end="87:22"><name pos:start="87:17" pos:end="87:22">stderr</name></expr></argument>, <argument pos:start="87:25" pos:end="87:50"><expr pos:start="87:25" pos:end="87:50"><literal type="string" pos:start="87:25" pos:end="87:50">"pl110: Bad color depth\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:16"><expr pos:start="89:9" pos:end="89:15"><call pos:start="89:9" pos:end="89:15"><name pos:start="89:9" pos:end="89:12">exit</name><argument_list pos:start="89:13" pos:end="89:15">(<argument pos:start="89:14" pos:end="89:14"><expr pos:start="89:14" pos:end="89:14"><literal type="number" pos:start="89:14" pos:end="89:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

    <if_stmt pos:start="93:5" pos:end="99:24"><if pos:start="93:5" pos:end="95:23">if <condition pos:start="93:8" pos:end="93:29">(<expr pos:start="93:9" pos:end="93:28"><name pos:start="93:9" pos:end="93:13"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:13">cr</name></name> <operator pos:start="93:15" pos:end="93:15">&amp;</operator> <name pos:start="93:17" pos:end="93:28">PL110_CR_BGR</name></expr>)</condition><block type="pseudo" pos:start="95:9" pos:end="95:23"><block_content pos:start="95:9" pos:end="95:23">

        <expr_stmt pos:start="95:9" pos:end="95:23"><expr pos:start="95:9" pos:end="95:22"><name pos:start="95:9" pos:end="95:18">bpp_offset</name> <operator pos:start="95:20" pos:end="95:20">=</operator> <literal type="number" pos:start="95:22" pos:end="95:22">0</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="97:5" pos:end="99:24">else<block type="pseudo" pos:start="99:9" pos:end="99:24"><block_content pos:start="99:9" pos:end="99:24">

        <expr_stmt pos:start="99:9" pos:end="99:24"><expr pos:start="99:9" pos:end="99:23"><name pos:start="99:9" pos:end="99:18">bpp_offset</name> <operator pos:start="99:20" pos:end="99:20">=</operator> <literal type="number" pos:start="99:22" pos:end="99:23">24</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="103:5" pos:end="155:5"><if pos:start="103:5" pos:end="155:5">if <condition pos:start="103:8" pos:end="103:52">(<expr pos:start="103:9" pos:end="103:51"><operator pos:start="103:9" pos:end="103:9">(</operator><name pos:start="103:10" pos:end="103:19"><name pos:start="103:10" pos:end="103:10">s</name><operator pos:start="103:11" pos:end="103:12">-&gt;</operator><name pos:start="103:13" pos:end="103:19">version</name></name> <operator pos:start="103:21" pos:end="103:22">!=</operator> <name pos:start="103:24" pos:end="103:28">PL111</name><operator pos:start="103:29" pos:end="103:29">)</operator> <operator pos:start="103:31" pos:end="103:32">&amp;&amp;</operator> <operator pos:start="103:34" pos:end="103:34">(</operator><name pos:start="103:35" pos:end="103:40"><name pos:start="103:35" pos:end="103:35">s</name><operator pos:start="103:36" pos:end="103:37">-&gt;</operator><name pos:start="103:38" pos:end="103:40">bpp</name></name> <operator pos:start="103:42" pos:end="103:43">==</operator> <name pos:start="103:45" pos:end="103:50">BPP_16</name><operator pos:start="103:51" pos:end="103:51">)</operator></expr>)</condition> <block pos:start="103:54" pos:end="155:5">{<block_content pos:start="129:9" pos:end="153:9">

        <comment type="block" pos:start="105:9" pos:end="127:11">/* The PL110's native 16 bit mode is 5551; however

         * most boards with a PL110 implement an external

         * mux which allows bits to be reshuffled to give

         * 565 format. The mux is typically controlled by

         * an external system register.

         * This is controlled by a GPIO input pin

         * so boards can wire it up to their register.

         *

         * The PL111 straightforwardly implements both

         * 5551 and 565 under control of the bpp field

         * in the LCDControl register.

         */</comment>

        <switch pos:start="129:9" pos:end="153:9">switch <condition pos:start="129:16" pos:end="129:28">(<expr pos:start="129:17" pos:end="129:27"><name pos:start="129:17" pos:end="129:27"><name pos:start="129:17" pos:end="129:17">s</name><operator pos:start="129:18" pos:end="129:19">-&gt;</operator><name pos:start="129:20" pos:end="129:27">mux_ctrl</name></name></expr>)</condition> <block pos:start="129:30" pos:end="153:9">{<block_content pos:start="131:9" pos:end="151:18">

        <case pos:start="131:9" pos:end="131:15">case <expr pos:start="131:14" pos:end="131:14"><literal type="number" pos:start="131:14" pos:end="131:14">3</literal></expr>:</case> <comment type="block" pos:start="131:17" pos:end="131:29">/* 565 BGR */</comment>

            <expr_stmt pos:start="133:13" pos:end="133:47"><expr pos:start="133:13" pos:end="133:46"><name pos:start="133:13" pos:end="133:22">bpp_offset</name> <operator pos:start="133:24" pos:end="133:24">=</operator> <operator pos:start="133:26" pos:end="133:26">(</operator><name pos:start="133:27" pos:end="133:36">BPP_16_565</name> <operator pos:start="133:38" pos:end="133:38">-</operator> <name pos:start="133:40" pos:end="133:45">BPP_16</name><operator pos:start="133:46" pos:end="133:46">)</operator></expr>;</expr_stmt>

            <break pos:start="135:13" pos:end="135:18">break;</break>

        <case pos:start="137:9" pos:end="137:15">case <expr pos:start="137:14" pos:end="137:14"><literal type="number" pos:start="137:14" pos:end="137:14">1</literal></expr>:</case> <comment type="block" pos:start="137:17" pos:end="137:26">/* 5551 */</comment>

            <break pos:start="139:13" pos:end="139:18">break;</break>

        <case pos:start="141:9" pos:end="141:15">case <expr pos:start="141:14" pos:end="141:14"><literal type="number" pos:start="141:14" pos:end="141:14">0</literal></expr>:</case> <comment type="block" pos:start="141:17" pos:end="141:77">/* 888; also if we have loaded vmstate from an old version */</comment>

        <case pos:start="143:9" pos:end="143:15">case <expr pos:start="143:14" pos:end="143:14"><literal type="number" pos:start="143:14" pos:end="143:14">2</literal></expr>:</case> <comment type="block" pos:start="143:17" pos:end="143:29">/* 565 RGB */</comment>

        <default pos:start="145:9" pos:end="145:16">default:</default>

            <comment type="block" pos:start="147:13" pos:end="147:49">/* treat as 565 but honour BGR bit */</comment>

            <expr_stmt pos:start="149:13" pos:end="149:48"><expr pos:start="149:13" pos:end="149:47"><name pos:start="149:13" pos:end="149:22">bpp_offset</name> <operator pos:start="149:24" pos:end="149:25">+=</operator> <operator pos:start="149:27" pos:end="149:27">(</operator><name pos:start="149:28" pos:end="149:37">BPP_16_565</name> <operator pos:start="149:39" pos:end="149:39">-</operator> <name pos:start="149:41" pos:end="149:46">BPP_16</name><operator pos:start="149:47" pos:end="149:47">)</operator></expr>;</expr_stmt>

            <break pos:start="151:13" pos:end="151:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="159:5" pos:end="169:42"><if pos:start="159:5" pos:end="161:46">if <condition pos:start="159:8" pos:end="159:30">(<expr pos:start="159:9" pos:end="159:29"><name pos:start="159:9" pos:end="159:13"><name pos:start="159:9" pos:end="159:9">s</name><operator pos:start="159:10" pos:end="159:11">-&gt;</operator><name pos:start="159:12" pos:end="159:13">cr</name></name> <operator pos:start="159:15" pos:end="159:15">&amp;</operator> <name pos:start="159:17" pos:end="159:29">PL110_CR_BEBO</name></expr>)</condition><block type="pseudo" pos:start="161:9" pos:end="161:46"><block_content pos:start="161:9" pos:end="161:46">

        <expr_stmt pos:start="161:9" pos:end="161:46"><expr pos:start="161:9" pos:end="161:45"><name pos:start="161:9" pos:end="161:10">fn</name> <operator pos:start="161:12" pos:end="161:12">=</operator> <name pos:start="161:14" pos:end="161:45"><name pos:start="161:14" pos:end="161:20">fntable</name><index pos:start="161:21" pos:end="161:45">[<expr pos:start="161:22" pos:end="161:44"><name pos:start="161:22" pos:end="161:27"><name pos:start="161:22" pos:end="161:22">s</name><operator pos:start="161:23" pos:end="161:24">-&gt;</operator><name pos:start="161:25" pos:end="161:27">bpp</name></name> <operator pos:start="161:29" pos:end="161:29">+</operator> <literal type="number" pos:start="161:31" pos:end="161:33">8</literal> <operator pos:start="161:33" pos:end="161:33">+</operator> <name pos:start="161:35" pos:end="161:44">bpp_offset</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="163:5" pos:end="165:47">else if <condition pos:start="163:13" pos:end="163:35">(<expr pos:start="163:14" pos:end="163:34"><name pos:start="163:14" pos:end="163:18"><name pos:start="163:14" pos:end="163:14">s</name><operator pos:start="163:15" pos:end="163:16">-&gt;</operator><name pos:start="163:17" pos:end="163:18">cr</name></name> <operator pos:start="163:20" pos:end="163:20">&amp;</operator> <name pos:start="163:22" pos:end="163:34">PL110_CR_BEPO</name></expr>)</condition><block type="pseudo" pos:start="165:9" pos:end="165:47"><block_content pos:start="165:9" pos:end="165:47">

        <expr_stmt pos:start="165:9" pos:end="165:47"><expr pos:start="165:9" pos:end="165:46"><name pos:start="165:9" pos:end="165:10">fn</name> <operator pos:start="165:12" pos:end="165:12">=</operator> <name pos:start="165:14" pos:end="165:46"><name pos:start="165:14" pos:end="165:20">fntable</name><index pos:start="165:21" pos:end="165:46">[<expr pos:start="165:22" pos:end="165:45"><name pos:start="165:22" pos:end="165:27"><name pos:start="165:22" pos:end="165:22">s</name><operator pos:start="165:23" pos:end="165:24">-&gt;</operator><name pos:start="165:25" pos:end="165:27">bpp</name></name> <operator pos:start="165:29" pos:end="165:29">+</operator> <literal type="number" pos:start="165:31" pos:end="165:34">16</literal> <operator pos:start="165:34" pos:end="165:34">+</operator> <name pos:start="165:36" pos:end="165:45">bpp_offset</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="167:5" pos:end="169:42">else<block type="pseudo" pos:start="169:9" pos:end="169:42"><block_content pos:start="169:9" pos:end="169:42">

        <expr_stmt pos:start="169:9" pos:end="169:42"><expr pos:start="169:9" pos:end="169:41"><name pos:start="169:9" pos:end="169:10">fn</name> <operator pos:start="169:12" pos:end="169:12">=</operator> <name pos:start="169:14" pos:end="169:41"><name pos:start="169:14" pos:end="169:20">fntable</name><index pos:start="169:21" pos:end="169:41">[<expr pos:start="169:22" pos:end="169:40"><name pos:start="169:22" pos:end="169:27"><name pos:start="169:22" pos:end="169:22">s</name><operator pos:start="169:23" pos:end="169:24">-&gt;</operator><name pos:start="169:25" pos:end="169:27">bpp</name></name> <operator pos:start="169:29" pos:end="169:29">+</operator> <name pos:start="169:31" pos:end="169:40">bpp_offset</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="173:5" pos:end="173:24"><expr pos:start="173:5" pos:end="173:23"><name pos:start="173:5" pos:end="173:13">src_width</name> <operator pos:start="173:15" pos:end="173:15">=</operator> <name pos:start="173:17" pos:end="173:23"><name pos:start="173:17" pos:end="173:17">s</name><operator pos:start="173:18" pos:end="173:19">-&gt;</operator><name pos:start="173:20" pos:end="173:23">cols</name></name></expr>;</expr_stmt>

    <switch pos:start="175:5" pos:end="215:5">switch <condition pos:start="175:12" pos:end="175:19">(<expr pos:start="175:13" pos:end="175:18"><name pos:start="175:13" pos:end="175:18"><name pos:start="175:13" pos:end="175:13">s</name><operator pos:start="175:14" pos:end="175:15">-&gt;</operator><name pos:start="175:16" pos:end="175:18">bpp</name></name></expr>)</condition> <block pos:start="175:21" pos:end="215:5">{<block_content pos:start="177:5" pos:end="213:14">

    <case pos:start="177:5" pos:end="177:15">case <expr pos:start="177:10" pos:end="177:14"><name pos:start="177:10" pos:end="177:14">BPP_1</name></expr>:</case>

        <expr_stmt pos:start="179:9" pos:end="179:24"><expr pos:start="179:9" pos:end="179:23"><name pos:start="179:9" pos:end="179:17">src_width</name> <operator pos:start="179:19" pos:end="179:21">&gt;&gt;=</operator> <literal type="number" pos:start="179:23" pos:end="179:23">3</literal></expr>;</expr_stmt>

        <break pos:start="181:9" pos:end="181:14">break;</break>

    <case pos:start="183:5" pos:end="183:15">case <expr pos:start="183:10" pos:end="183:14"><name pos:start="183:10" pos:end="183:14">BPP_2</name></expr>:</case>

        <expr_stmt pos:start="185:9" pos:end="185:24"><expr pos:start="185:9" pos:end="185:23"><name pos:start="185:9" pos:end="185:17">src_width</name> <operator pos:start="185:19" pos:end="185:21">&gt;&gt;=</operator> <literal type="number" pos:start="185:23" pos:end="185:23">2</literal></expr>;</expr_stmt>

        <break pos:start="187:9" pos:end="187:14">break;</break>

    <case pos:start="189:5" pos:end="189:15">case <expr pos:start="189:10" pos:end="189:14"><name pos:start="189:10" pos:end="189:14">BPP_4</name></expr>:</case>

        <expr_stmt pos:start="191:9" pos:end="191:24"><expr pos:start="191:9" pos:end="191:23"><name pos:start="191:9" pos:end="191:17">src_width</name> <operator pos:start="191:19" pos:end="191:21">&gt;&gt;=</operator> <literal type="number" pos:start="191:23" pos:end="191:23">1</literal></expr>;</expr_stmt>

        <break pos:start="193:9" pos:end="193:14">break;</break>

    <case pos:start="195:5" pos:end="195:15">case <expr pos:start="195:10" pos:end="195:14"><name pos:start="195:10" pos:end="195:14">BPP_8</name></expr>:</case>

        <break pos:start="197:9" pos:end="197:14">break;</break>

    <case pos:start="199:5" pos:end="199:16">case <expr pos:start="199:10" pos:end="199:15"><name pos:start="199:10" pos:end="199:15">BPP_16</name></expr>:</case>

    <case pos:start="201:5" pos:end="201:20">case <expr pos:start="201:10" pos:end="201:19"><name pos:start="201:10" pos:end="201:19">BPP_16_565</name></expr>:</case>

    <case pos:start="203:5" pos:end="203:16">case <expr pos:start="203:10" pos:end="203:15"><name pos:start="203:10" pos:end="203:15">BPP_12</name></expr>:</case>

        <expr_stmt pos:start="205:9" pos:end="205:24"><expr pos:start="205:9" pos:end="205:23"><name pos:start="205:9" pos:end="205:17">src_width</name> <operator pos:start="205:19" pos:end="205:21">&lt;&lt;=</operator> <literal type="number" pos:start="205:23" pos:end="205:23">1</literal></expr>;</expr_stmt>

        <break pos:start="207:9" pos:end="207:14">break;</break>

    <case pos:start="209:5" pos:end="209:16">case <expr pos:start="209:10" pos:end="209:15"><name pos:start="209:10" pos:end="209:15">BPP_32</name></expr>:</case>

        <expr_stmt pos:start="211:9" pos:end="211:24"><expr pos:start="211:9" pos:end="211:23"><name pos:start="211:9" pos:end="211:17">src_width</name> <operator pos:start="211:19" pos:end="211:21">&lt;&lt;=</operator> <literal type="number" pos:start="211:23" pos:end="211:23">2</literal></expr>;</expr_stmt>

        <break pos:start="213:9" pos:end="213:14">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="217:5" pos:end="217:26"><expr pos:start="217:5" pos:end="217:25"><name pos:start="217:5" pos:end="217:14">dest_width</name> <operator pos:start="217:16" pos:end="217:17">*=</operator> <name pos:start="217:19" pos:end="217:25"><name pos:start="217:19" pos:end="217:19">s</name><operator pos:start="217:20" pos:end="217:21">-&gt;</operator><name pos:start="217:22" pos:end="217:25">cols</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="219:5" pos:end="219:14"><expr pos:start="219:5" pos:end="219:13"><name pos:start="219:5" pos:end="219:9">first</name> <operator pos:start="219:11" pos:end="219:11">=</operator> <literal type="number" pos:start="219:13" pos:end="219:13">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="221:5" pos:end="231:46"><expr pos:start="221:5" pos:end="231:45"><call pos:start="221:5" pos:end="231:45"><name pos:start="221:5" pos:end="221:30">framebuffer_update_display</name><argument_list pos:start="221:31" pos:end="231:45">(<argument pos:start="221:32" pos:end="221:38"><expr pos:start="221:32" pos:end="221:38"><name pos:start="221:32" pos:end="221:38">surface</name></expr></argument>, <argument pos:start="221:41" pos:end="221:65"><expr pos:start="221:41" pos:end="221:65"><call pos:start="221:41" pos:end="221:65"><name pos:start="221:41" pos:end="221:60">sysbus_address_space</name><argument_list pos:start="221:61" pos:end="221:65">(<argument pos:start="221:62" pos:end="221:64"><expr pos:start="221:62" pos:end="221:64"><name pos:start="221:62" pos:end="221:64">sbd</name></expr></argument>)</argument_list></call></expr></argument>,

                               <argument pos:start="223:32" pos:end="223:40"><expr pos:start="223:32" pos:end="223:40"><name pos:start="223:32" pos:end="223:40"><name pos:start="223:32" pos:end="223:32">s</name><operator pos:start="223:33" pos:end="223:34">-&gt;</operator><name pos:start="223:35" pos:end="223:40">upbase</name></name></expr></argument>, <argument pos:start="223:43" pos:end="223:49"><expr pos:start="223:43" pos:end="223:49"><name pos:start="223:43" pos:end="223:49"><name pos:start="223:43" pos:end="223:43">s</name><operator pos:start="223:44" pos:end="223:45">-&gt;</operator><name pos:start="223:46" pos:end="223:49">cols</name></name></expr></argument>, <argument pos:start="223:52" pos:end="223:58"><expr pos:start="223:52" pos:end="223:58"><name pos:start="223:52" pos:end="223:58"><name pos:start="223:52" pos:end="223:52">s</name><operator pos:start="223:53" pos:end="223:54">-&gt;</operator><name pos:start="223:55" pos:end="223:58">rows</name></name></expr></argument>,

                               <argument pos:start="225:32" pos:end="225:40"><expr pos:start="225:32" pos:end="225:40"><name pos:start="225:32" pos:end="225:40">src_width</name></expr></argument>, <argument pos:start="225:43" pos:end="225:52"><expr pos:start="225:43" pos:end="225:52"><name pos:start="225:43" pos:end="225:52">dest_width</name></expr></argument>, <argument pos:start="225:55" pos:end="225:55"><expr pos:start="225:55" pos:end="225:55"><literal type="number" pos:start="225:55" pos:end="225:55">0</literal></expr></argument>,

                               <argument pos:start="227:32" pos:end="227:44"><expr pos:start="227:32" pos:end="227:44"><name pos:start="227:32" pos:end="227:44"><name pos:start="227:32" pos:end="227:32">s</name><operator pos:start="227:33" pos:end="227:34">-&gt;</operator><name pos:start="227:35" pos:end="227:44">invalidate</name></name></expr></argument>,

                               <argument pos:start="229:32" pos:end="229:33"><expr pos:start="229:32" pos:end="229:33"><name pos:start="229:32" pos:end="229:33">fn</name></expr></argument>, <argument pos:start="229:36" pos:end="229:45"><expr pos:start="229:36" pos:end="229:45"><name pos:start="229:36" pos:end="229:45"><name pos:start="229:36" pos:end="229:36">s</name><operator pos:start="229:37" pos:end="229:38">-&gt;</operator><name pos:start="229:39" pos:end="229:45">palette</name></name></expr></argument>,

                               <argument pos:start="231:32" pos:end="231:37"><expr pos:start="231:32" pos:end="231:37"><operator pos:start="231:32" pos:end="231:32">&amp;</operator><name pos:start="231:33" pos:end="231:37">first</name></expr></argument>, <argument pos:start="231:40" pos:end="231:44"><expr pos:start="231:40" pos:end="231:44"><operator pos:start="231:40" pos:end="231:40">&amp;</operator><name pos:start="231:41" pos:end="231:44">last</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="233:5" pos:end="237:5"><if pos:start="233:5" pos:end="237:5">if <condition pos:start="233:8" pos:end="233:19">(<expr pos:start="233:9" pos:end="233:18"><name pos:start="233:9" pos:end="233:13">first</name> <operator pos:start="233:15" pos:end="233:16">&gt;=</operator> <literal type="number" pos:start="233:18" pos:end="233:18">0</literal></expr>)</condition> <block pos:start="233:21" pos:end="237:5">{<block_content pos:start="235:9" pos:end="235:68">

        <expr_stmt pos:start="235:9" pos:end="235:68"><expr pos:start="235:9" pos:end="235:67"><call pos:start="235:9" pos:end="235:67"><name pos:start="235:9" pos:end="235:22">dpy_gfx_update</name><argument_list pos:start="235:23" pos:end="235:67">(<argument pos:start="235:24" pos:end="235:29"><expr pos:start="235:24" pos:end="235:29"><name pos:start="235:24" pos:end="235:29"><name pos:start="235:24" pos:end="235:24">s</name><operator pos:start="235:25" pos:end="235:26">-&gt;</operator><name pos:start="235:27" pos:end="235:29">con</name></name></expr></argument>, <argument pos:start="235:32" pos:end="235:32"><expr pos:start="235:32" pos:end="235:32"><literal type="number" pos:start="235:32" pos:end="235:32">0</literal></expr></argument>, <argument pos:start="235:35" pos:end="235:39"><expr pos:start="235:35" pos:end="235:39"><name pos:start="235:35" pos:end="235:39">first</name></expr></argument>, <argument pos:start="235:42" pos:end="235:48"><expr pos:start="235:42" pos:end="235:48"><name pos:start="235:42" pos:end="235:48"><name pos:start="235:42" pos:end="235:42">s</name><operator pos:start="235:43" pos:end="235:44">-&gt;</operator><name pos:start="235:45" pos:end="235:48">cols</name></name></expr></argument>, <argument pos:start="235:51" pos:end="235:66"><expr pos:start="235:51" pos:end="235:66"><name pos:start="235:51" pos:end="235:54">last</name> <operator pos:start="235:56" pos:end="235:56">-</operator> <name pos:start="235:58" pos:end="235:62">first</name> <operator pos:start="235:64" pos:end="235:64">+</operator> <literal type="number" pos:start="235:66" pos:end="235:66">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="239:5" pos:end="239:22"><expr pos:start="239:5" pos:end="239:21"><name pos:start="239:5" pos:end="239:17"><name pos:start="239:5" pos:end="239:5">s</name><operator pos:start="239:6" pos:end="239:7">-&gt;</operator><name pos:start="239:8" pos:end="239:17">invalidate</name></name> <operator pos:start="239:19" pos:end="239:19">=</operator> <literal type="number" pos:start="239:21" pos:end="239:21">0</literal></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
