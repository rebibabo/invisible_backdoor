<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3746.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">gen_lswi</name><parameter_list pos:start="1:21" pos:end="1:39">(<parameter pos:start="1:22" pos:end="1:38"><decl pos:start="1:22" pos:end="1:38"><type pos:start="1:22" pos:end="1:35"><name pos:start="1:22" pos:end="1:33">DisasContext</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:26">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">TCGv</name></type> <name pos:start="5:10" pos:end="5:11">t0</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">TCGv_i32</name></type> <name pos:start="7:14" pos:end="7:15">t1</name></decl>, <decl pos:start="7:18" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:18" pos:end="7:19">t2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">nb</name> <init pos:start="9:12" pos:end="9:28">= <expr pos:start="9:14" pos:end="9:28"><call pos:start="9:14" pos:end="9:28"><name pos:start="9:14" pos:end="9:15">NB</name><argument_list pos:start="9:16" pos:end="9:28">(<argument pos:start="9:17" pos:end="9:27"><expr pos:start="9:17" pos:end="9:27"><name pos:start="9:17" pos:end="9:27"><name pos:start="9:17" pos:end="9:19">ctx</name><operator pos:start="9:20" pos:end="9:21">-&gt;</operator><name pos:start="9:22" pos:end="9:27">opcode</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:31"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">start</name> <init pos:start="11:15" pos:end="11:31">= <expr pos:start="11:17" pos:end="11:31"><call pos:start="11:17" pos:end="11:31"><name pos:start="11:17" pos:end="11:18">rD</name><argument_list pos:start="11:19" pos:end="11:31">(<argument pos:start="11:20" pos:end="11:30"><expr pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:22">ctx</name><operator pos:start="11:23" pos:end="11:24">-&gt;</operator><name pos:start="11:25" pos:end="11:30">opcode</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:10">ra</name> <init pos:start="13:12" pos:end="13:28">= <expr pos:start="13:14" pos:end="13:28"><call pos:start="13:14" pos:end="13:28"><name pos:start="13:14" pos:end="13:15">rA</name><argument_list pos:start="13:16" pos:end="13:28">(<argument pos:start="13:17" pos:end="13:27"><expr pos:start="13:17" pos:end="13:27"><name pos:start="13:17" pos:end="13:27"><name pos:start="13:17" pos:end="13:19">ctx</name><operator pos:start="13:20" pos:end="13:21">-&gt;</operator><name pos:start="13:22" pos:end="13:27">opcode</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:11"><decl pos:start="15:5" pos:end="15:10"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:10">nr</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="21:16"><if pos:start="19:5" pos:end="21:16">if <condition pos:start="19:8" pos:end="19:16">(<expr pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:10">nb</name> <operator pos:start="19:12" pos:end="19:13">==</operator> <literal type="number" pos:start="19:15" pos:end="19:15">0</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:16"><block_content pos:start="21:9" pos:end="21:16">

        <expr_stmt pos:start="21:9" pos:end="21:16"><expr pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:10">nb</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:15">32</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:16"><expr pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:6">nr</name> <operator pos:start="23:8" pos:end="23:8">=</operator> <name pos:start="23:10" pos:end="23:11">nb</name> <operator pos:start="23:13" pos:end="23:13">/</operator> <literal type="number" pos:start="23:15" pos:end="23:15">4</literal></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="35:5"><if pos:start="25:5" pos:end="35:5">if <condition pos:start="25:8" pos:end="29:75">(<expr pos:start="25:9" pos:end="29:74"><call pos:start="25:9" pos:end="29:74"><name pos:start="25:9" pos:end="25:16">unlikely</name><argument_list pos:start="25:17" pos:end="29:74">(<argument pos:start="25:18" pos:end="29:73"><expr pos:start="25:18" pos:end="29:73"><operator pos:start="25:18" pos:end="25:18">(</operator><operator pos:start="25:19" pos:end="25:19">(</operator><name pos:start="25:20" pos:end="25:24">start</name> <operator pos:start="25:26" pos:end="25:26">+</operator> <name pos:start="25:28" pos:end="25:29">nr</name><operator pos:start="25:30" pos:end="25:30">)</operator> <operator pos:start="25:32" pos:end="25:32">&gt;</operator> <literal type="number" pos:start="25:34" pos:end="25:35">32</literal>  <operator pos:start="25:38" pos:end="25:39">&amp;&amp;</operator>

                  <name pos:start="27:19" pos:end="27:23">start</name> <operator pos:start="27:25" pos:end="27:26">&lt;=</operator> <name pos:start="27:28" pos:end="27:29">ra</name> <operator pos:start="27:31" pos:end="27:32">&amp;&amp;</operator> <operator pos:start="27:34" pos:end="27:34">(</operator><name pos:start="27:35" pos:end="27:39">start</name> <operator pos:start="27:41" pos:end="27:41">+</operator> <name pos:start="27:43" pos:end="27:44">nr</name> <operator pos:start="27:46" pos:end="27:46">-</operator> <literal type="number" pos:start="27:48" pos:end="27:49">32</literal><operator pos:start="27:50" pos:end="27:50">)</operator> <operator pos:start="27:52" pos:end="27:52">&gt;</operator> <name pos:start="27:54" pos:end="27:55">ra</name><operator pos:start="27:56" pos:end="27:56">)</operator> <operator pos:start="27:58" pos:end="27:59">||</operator>

                 <operator pos:start="29:18" pos:end="29:18">(</operator><operator pos:start="29:19" pos:end="29:19">(</operator><name pos:start="29:20" pos:end="29:24">start</name> <operator pos:start="29:26" pos:end="29:26">+</operator> <name pos:start="29:28" pos:end="29:29">nr</name><operator pos:start="29:30" pos:end="29:30">)</operator> <operator pos:start="29:32" pos:end="29:33">&lt;=</operator> <literal type="number" pos:start="29:35" pos:end="29:36">32</literal> <operator pos:start="29:38" pos:end="29:39">&amp;&amp;</operator> <name pos:start="29:41" pos:end="29:45">start</name> <operator pos:start="29:47" pos:end="29:48">&lt;=</operator> <name pos:start="29:50" pos:end="29:51">ra</name> <operator pos:start="29:53" pos:end="29:54">&amp;&amp;</operator> <operator pos:start="29:56" pos:end="29:56">(</operator><name pos:start="29:57" pos:end="29:61">start</name> <operator pos:start="29:63" pos:end="29:63">+</operator> <name pos:start="29:65" pos:end="29:66">nr</name><operator pos:start="29:67" pos:end="29:67">)</operator> <operator pos:start="29:69" pos:end="29:69">&gt;</operator> <name pos:start="29:71" pos:end="29:72">ra</name><operator pos:start="29:73" pos:end="29:73">)</operator></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:77" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:15">

        <expr_stmt pos:start="31:9" pos:end="31:58"><expr pos:start="31:9" pos:end="31:57"><call pos:start="31:9" pos:end="31:57"><name pos:start="31:9" pos:end="31:27">gen_inval_exception</name><argument_list pos:start="31:28" pos:end="31:57">(<argument pos:start="31:29" pos:end="31:31"><expr pos:start="31:29" pos:end="31:31"><name pos:start="31:29" pos:end="31:31">ctx</name></expr></argument>, <argument pos:start="31:34" pos:end="31:56"><expr pos:start="31:34" pos:end="31:56"><name pos:start="31:34" pos:end="31:56">POWERPC_EXCP_INVAL_LSWX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:41"><expr pos:start="37:5" pos:end="37:40"><call pos:start="37:5" pos:end="37:40"><name pos:start="37:5" pos:end="37:23">gen_set_access_type</name><argument_list pos:start="37:24" pos:end="37:40">(<argument pos:start="37:25" pos:end="37:27"><expr pos:start="37:25" pos:end="37:27"><name pos:start="37:25" pos:end="37:27">ctx</name></expr></argument>, <argument pos:start="37:30" pos:end="37:39"><expr pos:start="37:30" pos:end="37:39"><name pos:start="37:30" pos:end="37:39">ACCESS_INT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="39:5" pos:end="39:77">/* NIP cannot be restored if the memory exception comes from an helper */</comment>

    <expr_stmt pos:start="41:5" pos:end="41:38"><expr pos:start="41:5" pos:end="41:37"><call pos:start="41:5" pos:end="41:37"><name pos:start="41:5" pos:end="41:18">gen_update_nip</name><argument_list pos:start="41:19" pos:end="41:37">(<argument pos:start="41:20" pos:end="41:22"><expr pos:start="41:20" pos:end="41:22"><name pos:start="41:20" pos:end="41:22">ctx</name></expr></argument>, <argument pos:start="41:25" pos:end="41:36"><expr pos:start="41:25" pos:end="41:36"><name pos:start="41:25" pos:end="41:32"><name pos:start="41:25" pos:end="41:27">ctx</name><operator pos:start="41:28" pos:end="41:29">-&gt;</operator><name pos:start="41:30" pos:end="41:32">nip</name></name> <operator pos:start="41:34" pos:end="41:34">-</operator> <literal type="number" pos:start="41:36" pos:end="41:36">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:24"><expr pos:start="43:5" pos:end="43:23"><name pos:start="43:5" pos:end="43:6">t0</name> <operator pos:start="43:8" pos:end="43:8">=</operator> <call pos:start="43:10" pos:end="43:23"><name pos:start="43:10" pos:end="43:21">tcg_temp_new</name><argument_list pos:start="43:22" pos:end="43:23">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:31"><expr pos:start="45:5" pos:end="45:30"><call pos:start="45:5" pos:end="45:30"><name pos:start="45:5" pos:end="45:21">gen_addr_register</name><argument_list pos:start="45:22" pos:end="45:30">(<argument pos:start="45:23" pos:end="45:25"><expr pos:start="45:23" pos:end="45:25"><name pos:start="45:23" pos:end="45:25">ctx</name></expr></argument>, <argument pos:start="45:28" pos:end="45:29"><expr pos:start="45:28" pos:end="45:29"><name pos:start="45:28" pos:end="45:29">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:27"><expr pos:start="47:5" pos:end="47:26"><name pos:start="47:5" pos:end="47:6">t1</name> <operator pos:start="47:8" pos:end="47:8">=</operator> <call pos:start="47:10" pos:end="47:26"><name pos:start="47:10" pos:end="47:22">tcg_const_i32</name><argument_list pos:start="47:23" pos:end="47:26">(<argument pos:start="47:24" pos:end="47:25"><expr pos:start="47:24" pos:end="47:25"><name pos:start="47:24" pos:end="47:25">nb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:30"><expr pos:start="49:5" pos:end="49:29"><name pos:start="49:5" pos:end="49:6">t2</name> <operator pos:start="49:8" pos:end="49:8">=</operator> <call pos:start="49:10" pos:end="49:29"><name pos:start="49:10" pos:end="49:22">tcg_const_i32</name><argument_list pos:start="49:23" pos:end="49:29">(<argument pos:start="49:24" pos:end="49:28"><expr pos:start="49:24" pos:end="49:28"><name pos:start="49:24" pos:end="49:28">start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:40"><expr pos:start="51:5" pos:end="51:39"><call pos:start="51:5" pos:end="51:39"><name pos:start="51:5" pos:end="51:18">gen_helper_lsw</name><argument_list pos:start="51:19" pos:end="51:39">(<argument pos:start="51:20" pos:end="51:26"><expr pos:start="51:20" pos:end="51:26"><name pos:start="51:20" pos:end="51:26">cpu_env</name></expr></argument>, <argument pos:start="51:29" pos:end="51:30"><expr pos:start="51:29" pos:end="51:30"><name pos:start="51:29" pos:end="51:30">t0</name></expr></argument>, <argument pos:start="51:33" pos:end="51:34"><expr pos:start="51:33" pos:end="51:34"><name pos:start="51:33" pos:end="51:34">t1</name></expr></argument>, <argument pos:start="51:37" pos:end="51:38"><expr pos:start="51:37" pos:end="51:38"><name pos:start="51:37" pos:end="51:38">t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:22"><expr pos:start="53:5" pos:end="53:21"><call pos:start="53:5" pos:end="53:21"><name pos:start="53:5" pos:end="53:17">tcg_temp_free</name><argument_list pos:start="53:18" pos:end="53:21">(<argument pos:start="53:19" pos:end="53:20"><expr pos:start="53:19" pos:end="53:20"><name pos:start="53:19" pos:end="53:20">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:26"><expr pos:start="55:5" pos:end="55:25"><call pos:start="55:5" pos:end="55:25"><name pos:start="55:5" pos:end="55:21">tcg_temp_free_i32</name><argument_list pos:start="55:22" pos:end="55:25">(<argument pos:start="55:23" pos:end="55:24"><expr pos:start="55:23" pos:end="55:24"><name pos:start="55:23" pos:end="55:24">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:26"><expr pos:start="57:5" pos:end="57:25"><call pos:start="57:5" pos:end="57:25"><name pos:start="57:5" pos:end="57:21">tcg_temp_free_i32</name><argument_list pos:start="57:22" pos:end="57:25">(<argument pos:start="57:23" pos:end="57:24"><expr pos:start="57:23" pos:end="57:24"><name pos:start="57:23" pos:end="57:24">t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
