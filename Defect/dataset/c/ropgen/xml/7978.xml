<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7978.c" pos:tabs="8"><function pos:start="1:1" pos:end="859:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">decode_mb</name><parameter_list pos:start="1:21" pos:end="1:36">(<parameter pos:start="1:22" pos:end="1:35"><decl pos:start="1:22" pos:end="1:35"><type pos:start="1:22" pos:end="1:34"><name pos:start="1:22" pos:end="1:32">H264Context</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:35">h</name></decl></parameter>)</parameter_list><block pos:start="1:37" pos:end="859:1">{<block_content pos:start="3:5" pos:end="857:13">

    <decl_stmt pos:start="3:5" pos:end="3:37"><decl pos:start="3:5" pos:end="3:36"><type pos:start="3:5" pos:end="3:26"><name pos:start="3:5" pos:end="3:18">MpegEncContext</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier> <specifier pos:start="3:22" pos:end="3:26">const</specifier></type> <name pos:start="3:28" pos:end="3:28">s</name> <init pos:start="3:30" pos:end="3:36">= <expr pos:start="3:32" pos:end="3:36"><operator pos:start="3:32" pos:end="3:32">&amp;</operator><name pos:start="3:33" pos:end="3:36"><name pos:start="3:33" pos:end="3:33">h</name><operator pos:start="3:34" pos:end="3:35">-&gt;</operator><name pos:start="3:36" pos:end="3:36">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:52"><decl pos:start="5:5" pos:end="5:51"><type pos:start="5:5" pos:end="5:13"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:13">int</name></type> <name pos:start="5:15" pos:end="5:19">mb_xy</name><init pos:start="5:20" pos:end="5:51">= <expr pos:start="5:22" pos:end="5:51"><name pos:start="5:22" pos:end="5:28"><name pos:start="5:22" pos:end="5:22">s</name><operator pos:start="5:23" pos:end="5:24">-&gt;</operator><name pos:start="5:25" pos:end="5:28">mb_x</name></name> <operator pos:start="5:30" pos:end="5:30">+</operator> <name pos:start="5:32" pos:end="5:38"><name pos:start="5:32" pos:end="5:32">s</name><operator pos:start="5:33" pos:end="5:34">-&gt;</operator><name pos:start="5:35" pos:end="5:38">mb_y</name></name><operator pos:start="5:39" pos:end="5:39">*</operator><name pos:start="5:40" pos:end="5:51"><name pos:start="5:40" pos:end="5:40">s</name><operator pos:start="5:41" pos:end="5:42">-&gt;</operator><name pos:start="5:43" pos:end="5:51">mb_stride</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:15">mb_type</name></decl>, <decl pos:start="7:18" pos:end="7:32"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:18" pos:end="7:32">partition_count</name></decl>, <decl pos:start="7:35" pos:end="7:37"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:35" pos:end="7:37">cbp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:31"><expr pos:start="11:5" pos:end="11:30"><call pos:start="11:5" pos:end="11:30"><name pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:10">dsp</name><operator pos:start="11:11" pos:end="11:11">.</operator><name pos:start="11:12" pos:end="11:23">clear_blocks</name></name><argument_list pos:start="11:24" pos:end="11:30">(<argument pos:start="11:25" pos:end="11:29"><expr pos:start="11:25" pos:end="11:29"><name pos:start="11:25" pos:end="11:29"><name pos:start="11:25" pos:end="11:25">h</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:29">mb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="11:33" pos:end="11:94">//FIXME avoid if allready clear (move after skip handlong?    </comment>



    <expr_stmt pos:start="15:5" pos:end="15:65"><expr pos:start="15:5" pos:end="15:64"><call pos:start="15:5" pos:end="15:64"><name pos:start="15:5" pos:end="15:11">tprintf</name><argument_list pos:start="15:12" pos:end="15:64">(<argument pos:start="15:13" pos:end="15:31"><expr pos:start="15:13" pos:end="15:31"><literal type="string" pos:start="15:13" pos:end="15:31">"pic:%d mb:%d/%d\n"</literal></expr></argument>, <argument pos:start="15:34" pos:end="15:45"><expr pos:start="15:34" pos:end="15:45"><name pos:start="15:34" pos:end="15:45"><name pos:start="15:34" pos:end="15:34">h</name><operator pos:start="15:35" pos:end="15:36">-&gt;</operator><name pos:start="15:37" pos:end="15:45">frame_num</name></name></expr></argument>, <argument pos:start="15:48" pos:end="15:54"><expr pos:start="15:48" pos:end="15:54"><name pos:start="15:48" pos:end="15:54"><name pos:start="15:48" pos:end="15:48">s</name><operator pos:start="15:49" pos:end="15:50">-&gt;</operator><name pos:start="15:51" pos:end="15:54">mb_x</name></name></expr></argument>, <argument pos:start="15:57" pos:end="15:63"><expr pos:start="15:57" pos:end="15:63"><name pos:start="15:57" pos:end="15:63"><name pos:start="15:57" pos:end="15:57">s</name><operator pos:start="15:58" pos:end="15:59">-&gt;</operator><name pos:start="15:60" pos:end="15:63">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:12"><expr pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:7">cbp</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <literal type="number" pos:start="17:11" pos:end="17:11">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="17:14" pos:end="19:32">/* avoid warning. FIXME: find a solution without slowing

                down the code */</comment>

    <if_stmt pos:start="21:5" pos:end="87:5"><if pos:start="21:5" pos:end="87:5">if<condition pos:start="21:7" pos:end="21:59">(<expr pos:start="21:8" pos:end="21:58"><name pos:start="21:8" pos:end="21:20"><name pos:start="21:8" pos:end="21:8">h</name><operator pos:start="21:9" pos:end="21:10">-&gt;</operator><name pos:start="21:11" pos:end="21:20">slice_type</name></name> <operator pos:start="21:22" pos:end="21:23">!=</operator> <name pos:start="21:25" pos:end="21:30">I_TYPE</name> <operator pos:start="21:32" pos:end="21:33">&amp;&amp;</operator> <name pos:start="21:35" pos:end="21:47"><name pos:start="21:35" pos:end="21:35">h</name><operator pos:start="21:36" pos:end="21:37">-&gt;</operator><name pos:start="21:38" pos:end="21:47">slice_type</name></name> <operator pos:start="21:49" pos:end="21:50">!=</operator> <name pos:start="21:52" pos:end="21:58">SI_TYPE</name></expr>)</condition><block pos:start="21:60" pos:end="87:5">{<block_content pos:start="23:9" pos:end="85:9">

        <if_stmt pos:start="23:9" pos:end="25:50"><if pos:start="23:9" pos:end="25:50">if<condition pos:start="23:11" pos:end="23:30">(<expr pos:start="23:12" pos:end="23:29"><name pos:start="23:12" pos:end="23:25"><name pos:start="23:12" pos:end="23:12">s</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:25">mb_skip_run</name></name><operator pos:start="23:26" pos:end="23:27">==</operator><operator pos:start="23:28" pos:end="23:28">-</operator><literal type="number" pos:start="23:29" pos:end="23:29">1</literal></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:50"><block_content pos:start="25:13" pos:end="25:50">

            <expr_stmt pos:start="25:13" pos:end="25:50"><expr pos:start="25:13" pos:end="25:49"><name pos:start="25:13" pos:end="25:26"><name pos:start="25:13" pos:end="25:13">s</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:26">mb_skip_run</name></name><operator pos:start="25:27" pos:end="25:27">=</operator> <call pos:start="25:29" pos:end="25:49"><name pos:start="25:29" pos:end="25:41">get_ue_golomb</name><argument_list pos:start="25:42" pos:end="25:49">(<argument pos:start="25:43" pos:end="25:48"><expr pos:start="25:43" pos:end="25:48"><operator pos:start="25:43" pos:end="25:43">&amp;</operator><name pos:start="25:44" pos:end="25:48"><name pos:start="25:44" pos:end="25:44">s</name><operator pos:start="25:45" pos:end="25:46">-&gt;</operator><name pos:start="25:47" pos:end="25:48">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        

        <if_stmt pos:start="29:9" pos:end="85:9"><if pos:start="29:9" pos:end="85:9">if <condition pos:start="29:12" pos:end="29:29">(<expr pos:start="29:13" pos:end="29:28"><name pos:start="29:13" pos:end="29:26"><name pos:start="29:13" pos:end="29:13">s</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:26">mb_skip_run</name></name><operator pos:start="29:27" pos:end="29:28">--</operator></expr>)</condition> <block pos:start="29:31" pos:end="85:9">{<block_content pos:start="31:13" pos:end="83:21">

            <decl_stmt pos:start="31:13" pos:end="31:23"><decl pos:start="31:13" pos:end="31:18"><type pos:start="31:13" pos:end="31:15"><name pos:start="31:13" pos:end="31:15">int</name></type> <name pos:start="31:17" pos:end="31:18">mx</name></decl>, <decl pos:start="31:21" pos:end="31:22"><type ref="prev" pos:start="31:13" pos:end="31:15"/><name pos:start="31:21" pos:end="31:22">my</name></decl>;</decl_stmt>

            <comment type="block" pos:start="33:13" pos:end="33:25">/* skip mb */</comment>

<comment type="line" pos:start="35:1" pos:end="35:15">//FIXME b frame</comment>

            <expr_stmt pos:start="37:13" pos:end="37:61"><expr pos:start="37:13" pos:end="37:60"><name pos:start="37:13" pos:end="37:19">mb_type</name><operator pos:start="37:20" pos:end="37:20">=</operator> <name pos:start="37:22" pos:end="37:34">MB_TYPE_16x16</name><operator pos:start="37:35" pos:end="37:35">|</operator><name pos:start="37:36" pos:end="37:47">MB_TYPE_P0L0</name><operator pos:start="37:48" pos:end="37:48">|</operator><name pos:start="37:49" pos:end="37:60">MB_TYPE_P1L0</name></expr>;</expr_stmt>



            <expr_stmt pos:start="41:13" pos:end="41:56"><expr pos:start="41:13" pos:end="41:55"><call pos:start="41:13" pos:end="41:55"><name pos:start="41:13" pos:end="41:18">memset</name><argument_list pos:start="41:19" pos:end="41:55">(<argument pos:start="41:20" pos:end="41:43"><expr pos:start="41:20" pos:end="41:43"><name pos:start="41:20" pos:end="41:43"><name pos:start="41:20" pos:end="41:20">h</name><operator pos:start="41:21" pos:end="41:22">-&gt;</operator><name pos:start="41:23" pos:end="41:36">non_zero_count</name><index pos:start="41:37" pos:end="41:43">[<expr pos:start="41:38" pos:end="41:42"><name pos:start="41:38" pos:end="41:42">mb_xy</name></expr>]</index></name></expr></argument>, <argument pos:start="41:46" pos:end="41:46"><expr pos:start="41:46" pos:end="41:46"><literal type="number" pos:start="41:46" pos:end="41:46">0</literal></expr></argument>, <argument pos:start="41:49" pos:end="41:54"><expr pos:start="41:49" pos:end="41:54"><literal type="number" pos:start="41:49" pos:end="41:51">16</literal><operator pos:start="41:51" pos:end="41:51">+</operator><literal type="number" pos:start="41:52" pos:end="41:53">4</literal><operator pos:start="41:53" pos:end="41:53">+</operator><literal type="number" pos:start="41:54" pos:end="41:54">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:56"><expr pos:start="43:13" pos:end="43:55"><call pos:start="43:13" pos:end="43:55"><name pos:start="43:13" pos:end="43:18">memset</name><argument_list pos:start="43:19" pos:end="43:55">(<argument pos:start="43:20" pos:end="43:46"><expr pos:start="43:20" pos:end="43:46"><name pos:start="43:20" pos:end="43:42"><name pos:start="43:20" pos:end="43:20">h</name><operator pos:start="43:21" pos:end="43:22">-&gt;</operator><name pos:start="43:23" pos:end="43:42">non_zero_count_cache</name></name> <operator pos:start="43:44" pos:end="43:44">+</operator> <literal type="number" pos:start="43:46" pos:end="43:46">8</literal></expr></argument>, <argument pos:start="43:49" pos:end="43:49"><expr pos:start="43:49" pos:end="43:49"><literal type="number" pos:start="43:49" pos:end="43:49">0</literal></expr></argument>, <argument pos:start="43:52" pos:end="43:54"><expr pos:start="43:52" pos:end="43:54"><literal type="number" pos:start="43:52" pos:end="43:52">8</literal><operator pos:start="43:53" pos:end="43:53">*</operator><literal type="number" pos:start="43:54" pos:end="43:54">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="43:58" pos:end="43:82">//FIXME ugly, remove pfui</comment>



            <if_stmt pos:start="47:13" pos:end="51:13"><if pos:start="47:13" pos:end="51:13">if<condition pos:start="47:15" pos:end="47:68">(<expr pos:start="47:16" pos:end="47:67"><name pos:start="47:16" pos:end="47:28"><name pos:start="47:16" pos:end="47:16">h</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:21">sps</name><operator pos:start="47:22" pos:end="47:22">.</operator><name pos:start="47:23" pos:end="47:28">mb_aff</name></name> <operator pos:start="47:30" pos:end="47:31">&amp;&amp;</operator> <name pos:start="47:33" pos:end="47:46"><name pos:start="47:33" pos:end="47:33">s</name><operator pos:start="47:34" pos:end="47:35">-&gt;</operator><name pos:start="47:36" pos:end="47:46">mb_skip_run</name></name><operator pos:start="47:47" pos:end="47:48">==</operator><literal type="number" pos:start="47:49" pos:end="47:49">0</literal> <operator pos:start="47:51" pos:end="47:52">&amp;&amp;</operator> <operator pos:start="47:54" pos:end="47:54">(</operator><name pos:start="47:55" pos:end="47:61"><name pos:start="47:55" pos:end="47:55">s</name><operator pos:start="47:56" pos:end="47:57">-&gt;</operator><name pos:start="47:58" pos:end="47:61">mb_y</name></name><operator pos:start="47:62" pos:end="47:62">&amp;</operator><literal type="number" pos:start="47:63" pos:end="47:63">1</literal><operator pos:start="47:64" pos:end="47:64">)</operator><operator pos:start="47:65" pos:end="47:66">==</operator><literal type="number" pos:start="47:67" pos:end="47:67">0</literal></expr>)</condition><block pos:start="47:69" pos:end="51:13">{<block_content pos:start="49:17" pos:end="49:61">

                <expr_stmt pos:start="49:17" pos:end="49:61"><expr pos:start="49:17" pos:end="49:60"><name pos:start="49:17" pos:end="49:41"><name pos:start="49:17" pos:end="49:17">h</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:41">mb_field_decoding_flag</name></name><operator pos:start="49:42" pos:end="49:42">=</operator> <call pos:start="49:44" pos:end="49:60"><name pos:start="49:44" pos:end="49:52">get_bits1</name><argument_list pos:start="49:53" pos:end="49:60">(<argument pos:start="49:54" pos:end="49:59"><expr pos:start="49:54" pos:end="49:59"><operator pos:start="49:54" pos:end="49:54">&amp;</operator><name pos:start="49:55" pos:end="49:59"><name pos:start="49:55" pos:end="49:55">s</name><operator pos:start="49:56" pos:end="49:57">-&gt;</operator><name pos:start="49:58" pos:end="49:59">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="55:13" pos:end="57:45"><if pos:start="55:13" pos:end="57:45">if<condition pos:start="55:15" pos:end="55:41">(<expr pos:start="55:16" pos:end="55:40"><name pos:start="55:16" pos:end="55:40"><name pos:start="55:16" pos:end="55:16">h</name><operator pos:start="55:17" pos:end="55:18">-&gt;</operator><name pos:start="55:19" pos:end="55:40">mb_field_decoding_flag</name></name></expr>)</condition><block type="pseudo" pos:start="57:17" pos:end="57:45"><block_content pos:start="57:17" pos:end="57:45">

                <expr_stmt pos:start="57:17" pos:end="57:45"><expr pos:start="57:17" pos:end="57:44"><name pos:start="57:17" pos:end="57:23">mb_type</name><operator pos:start="57:24" pos:end="57:25">|=</operator> <name pos:start="57:27" pos:end="57:44">MB_TYPE_INTERLACED</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            

            <expr_stmt pos:start="61:13" pos:end="61:36"><expr pos:start="61:13" pos:end="61:35"><call pos:start="61:13" pos:end="61:35"><name pos:start="61:13" pos:end="61:23">fill_caches</name><argument_list pos:start="61:24" pos:end="61:35">(<argument pos:start="61:25" pos:end="61:25"><expr pos:start="61:25" pos:end="61:25"><name pos:start="61:25" pos:end="61:25">h</name></expr></argument>, <argument pos:start="61:28" pos:end="61:34"><expr pos:start="61:28" pos:end="61:34"><name pos:start="61:28" pos:end="61:34">mb_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="61:38" pos:end="61:82">//FIXME check what is needed and what not ...</comment>

            <expr_stmt pos:start="63:13" pos:end="63:43"><expr pos:start="63:13" pos:end="63:42"><call pos:start="63:13" pos:end="63:42"><name pos:start="63:13" pos:end="63:29">pred_pskip_motion</name><argument_list pos:start="63:30" pos:end="63:42">(<argument pos:start="63:31" pos:end="63:31"><expr pos:start="63:31" pos:end="63:31"><name pos:start="63:31" pos:end="63:31">h</name></expr></argument>, <argument pos:start="63:34" pos:end="63:36"><expr pos:start="63:34" pos:end="63:36"><operator pos:start="63:34" pos:end="63:34">&amp;</operator><name pos:start="63:35" pos:end="63:36">mx</name></expr></argument>, <argument pos:start="63:39" pos:end="63:41"><expr pos:start="63:39" pos:end="63:41"><operator pos:start="63:39" pos:end="63:39">&amp;</operator><name pos:start="63:40" pos:end="63:41">my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:70"><expr pos:start="65:13" pos:end="65:69"><call pos:start="65:13" pos:end="65:69"><name pos:start="65:13" pos:end="65:26">fill_rectangle</name><argument_list pos:start="65:27" pos:end="65:69">(<argument pos:start="65:28" pos:end="65:53"><expr pos:start="65:28" pos:end="65:53"><operator pos:start="65:28" pos:end="65:28">&amp;</operator><name pos:start="65:29" pos:end="65:53"><name pos:start="65:29" pos:end="65:29">h</name><operator pos:start="65:30" pos:end="65:31">-&gt;</operator><name pos:start="65:32" pos:end="65:40">ref_cache</name><index pos:start="65:41" pos:end="65:43">[<expr pos:start="65:42" pos:end="65:42"><literal type="number" pos:start="65:42" pos:end="65:42">0</literal></expr>]</index><index pos:start="65:44" pos:end="65:53">[<expr pos:start="65:45" pos:end="65:52"><name pos:start="65:45" pos:end="65:52"><name pos:start="65:45" pos:end="65:49">scan8</name><index pos:start="65:50" pos:end="65:52">[<expr pos:start="65:51" pos:end="65:51"><literal type="number" pos:start="65:51" pos:end="65:51">0</literal></expr>]</index></name></expr>]</index></name></expr></argument>, <argument pos:start="65:56" pos:end="65:56"><expr pos:start="65:56" pos:end="65:56"><literal type="number" pos:start="65:56" pos:end="65:56">4</literal></expr></argument>, <argument pos:start="65:59" pos:end="65:59"><expr pos:start="65:59" pos:end="65:59"><literal type="number" pos:start="65:59" pos:end="65:59">4</literal></expr></argument>, <argument pos:start="65:62" pos:end="65:62"><expr pos:start="65:62" pos:end="65:62"><literal type="number" pos:start="65:62" pos:end="65:62">8</literal></expr></argument>, <argument pos:start="65:65" pos:end="65:65"><expr pos:start="65:65" pos:end="65:65"><literal type="number" pos:start="65:65" pos:end="65:65">0</literal></expr></argument>, <argument pos:start="65:68" pos:end="65:68"><expr pos:start="65:68" pos:end="65:68"><literal type="number" pos:start="65:68" pos:end="65:68">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:86"><expr pos:start="67:13" pos:end="67:85"><call pos:start="67:13" pos:end="67:85"><name pos:start="67:13" pos:end="67:26">fill_rectangle</name><argument_list pos:start="67:27" pos:end="67:85">(  <argument pos:start="67:30" pos:end="67:53"><expr pos:start="67:30" pos:end="67:53"><name pos:start="67:30" pos:end="67:53"><name pos:start="67:30" pos:end="67:30">h</name><operator pos:start="67:31" pos:end="67:32">-&gt;</operator><name pos:start="67:33" pos:end="67:40">mv_cache</name><index pos:start="67:41" pos:end="67:43">[<expr pos:start="67:42" pos:end="67:42"><literal type="number" pos:start="67:42" pos:end="67:42">0</literal></expr>]</index><index pos:start="67:44" pos:end="67:53">[<expr pos:start="67:45" pos:end="67:52"><name pos:start="67:45" pos:end="67:52"><name pos:start="67:45" pos:end="67:49">scan8</name><index pos:start="67:50" pos:end="67:52">[<expr pos:start="67:51" pos:end="67:51"><literal type="number" pos:start="67:51" pos:end="67:51">0</literal></expr>]</index></name></expr>]</index></name></expr></argument>, <argument pos:start="67:56" pos:end="67:56"><expr pos:start="67:56" pos:end="67:56"><literal type="number" pos:start="67:56" pos:end="67:56">4</literal></expr></argument>, <argument pos:start="67:59" pos:end="67:59"><expr pos:start="67:59" pos:end="67:59"><literal type="number" pos:start="67:59" pos:end="67:59">4</literal></expr></argument>, <argument pos:start="67:62" pos:end="67:62"><expr pos:start="67:62" pos:end="67:62"><literal type="number" pos:start="67:62" pos:end="67:62">8</literal></expr></argument>, <argument pos:start="67:65" pos:end="67:81"><expr pos:start="67:65" pos:end="67:81"><call pos:start="67:65" pos:end="67:81"><name pos:start="67:65" pos:end="67:74">pack16to32</name><argument_list pos:start="67:75" pos:end="67:81">(<argument pos:start="67:76" pos:end="67:77"><expr pos:start="67:76" pos:end="67:77"><name pos:start="67:76" pos:end="67:77">mx</name></expr></argument>,<argument pos:start="67:79" pos:end="67:80"><expr pos:start="67:79" pos:end="67:80"><name pos:start="67:79" pos:end="67:80">my</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="67:84" pos:end="67:84"><expr pos:start="67:84" pos:end="67:84"><literal type="number" pos:start="67:84" pos:end="67:84">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:42"><expr pos:start="69:13" pos:end="69:41"><call pos:start="69:13" pos:end="69:41"><name pos:start="69:13" pos:end="69:29">write_back_motion</name><argument_list pos:start="69:30" pos:end="69:41">(<argument pos:start="69:31" pos:end="69:31"><expr pos:start="69:31" pos:end="69:31"><name pos:start="69:31" pos:end="69:31">h</name></expr></argument>, <argument pos:start="69:34" pos:end="69:40"><expr pos:start="69:34" pos:end="69:40"><name pos:start="69:34" pos:end="69:40">mb_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="73:13" pos:end="73:55"><expr pos:start="73:13" pos:end="73:54"><name pos:start="73:13" pos:end="73:45"><name pos:start="73:13" pos:end="73:13">s</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:30">current_picture</name><operator pos:start="73:31" pos:end="73:31">.</operator><name pos:start="73:32" pos:end="73:38">mb_type</name><index pos:start="73:39" pos:end="73:45">[<expr pos:start="73:40" pos:end="73:44"><name pos:start="73:40" pos:end="73:44">mb_xy</name></expr>]</index></name><operator pos:start="73:46" pos:end="73:46">=</operator> <name pos:start="73:48" pos:end="73:54">mb_type</name></expr>;</expr_stmt> <comment type="line" pos:start="73:57" pos:end="73:73">//FIXME SKIP type</comment>

            <expr_stmt pos:start="75:13" pos:end="75:62"><expr pos:start="75:13" pos:end="75:61"><name pos:start="75:13" pos:end="75:50"><name pos:start="75:13" pos:end="75:13">s</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:30">current_picture</name><operator pos:start="75:31" pos:end="75:31">.</operator><name pos:start="75:32" pos:end="75:43">qscale_table</name><index pos:start="75:44" pos:end="75:50">[<expr pos:start="75:45" pos:end="75:49"><name pos:start="75:45" pos:end="75:49">mb_xy</name></expr>]</index></name><operator pos:start="75:51" pos:end="75:51">=</operator> <name pos:start="75:53" pos:end="75:61"><name pos:start="75:53" pos:end="75:53">s</name><operator pos:start="75:54" pos:end="75:55">-&gt;</operator><name pos:start="75:56" pos:end="75:61">qscale</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:50"><expr pos:start="77:13" pos:end="77:49"><name pos:start="77:13" pos:end="77:35"><name pos:start="77:13" pos:end="77:13">h</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:26">slice_table</name><index pos:start="77:27" pos:end="77:35">[ <expr pos:start="77:29" pos:end="77:33"><name pos:start="77:29" pos:end="77:33">mb_xy</name></expr> ]</index></name><operator pos:start="77:36" pos:end="77:36">=</operator> <name pos:start="77:38" pos:end="77:49"><name pos:start="77:38" pos:end="77:38">h</name><operator pos:start="77:39" pos:end="77:40">-&gt;</operator><name pos:start="77:41" pos:end="77:49">slice_num</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="81:13" pos:end="81:33"><expr pos:start="81:13" pos:end="81:32"><name pos:start="81:13" pos:end="81:29"><name pos:start="81:13" pos:end="81:13">h</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:29">prev_mb_skiped</name></name><operator pos:start="81:30" pos:end="81:30">=</operator> <literal type="number" pos:start="81:32" pos:end="81:32">1</literal></expr>;</expr_stmt>

            <return pos:start="83:13" pos:end="83:21">return <expr pos:start="83:20" pos:end="83:20"><literal type="number" pos:start="83:20" pos:end="83:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="89:5" pos:end="97:36"><if pos:start="89:5" pos:end="95:5">if<condition pos:start="89:7" pos:end="89:55">(<expr pos:start="89:8" pos:end="89:20"><name pos:start="89:8" pos:end="89:20"><name pos:start="89:8" pos:end="89:8">h</name><operator pos:start="89:9" pos:end="89:10">-&gt;</operator><name pos:start="89:11" pos:end="89:13">sps</name><operator pos:start="89:14" pos:end="89:14">.</operator><name pos:start="89:15" pos:end="89:20">mb_aff</name></name></expr> <comment type="block" pos:start="89:22" pos:end="89:54">/* &amp;&amp; !field pic FIXME needed? */</comment>)</condition><block pos:start="89:56" pos:end="95:5">{<block_content pos:start="91:9" pos:end="93:58">

        <if_stmt pos:start="91:9" pos:end="93:58"><if pos:start="91:9" pos:end="93:58">if<condition pos:start="91:11" pos:end="91:26">(<expr pos:start="91:12" pos:end="91:25"><operator pos:start="91:12" pos:end="91:12">(</operator><name pos:start="91:13" pos:end="91:19"><name pos:start="91:13" pos:end="91:13">s</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:19">mb_y</name></name><operator pos:start="91:20" pos:end="91:20">&amp;</operator><literal type="number" pos:start="91:21" pos:end="91:21">1</literal><operator pos:start="91:22" pos:end="91:22">)</operator><operator pos:start="91:23" pos:end="91:24">==</operator><literal type="number" pos:start="91:25" pos:end="91:25">0</literal></expr>)</condition><block type="pseudo" pos:start="93:13" pos:end="93:58"><block_content pos:start="93:13" pos:end="93:58">

            <expr_stmt pos:start="93:13" pos:end="93:58"><expr pos:start="93:13" pos:end="93:57"><name pos:start="93:13" pos:end="93:37"><name pos:start="93:13" pos:end="93:13">h</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:37">mb_field_decoding_flag</name></name> <operator pos:start="93:39" pos:end="93:39">=</operator> <call pos:start="93:41" pos:end="93:57"><name pos:start="93:41" pos:end="93:49">get_bits1</name><argument_list pos:start="93:50" pos:end="93:57">(<argument pos:start="93:51" pos:end="93:56"><expr pos:start="93:51" pos:end="93:56"><operator pos:start="93:51" pos:end="93:51">&amp;</operator><name pos:start="93:52" pos:end="93:56"><name pos:start="93:52" pos:end="93:52">s</name><operator pos:start="93:53" pos:end="93:54">-&gt;</operator><name pos:start="93:55" pos:end="93:56">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if><else pos:start="95:6" pos:end="97:36">else<block type="pseudo" pos:start="97:9" pos:end="97:36"><block_content pos:start="97:9" pos:end="97:36">

        <expr_stmt pos:start="97:9" pos:end="97:36"><expr pos:start="97:9" pos:end="97:35"><name pos:start="97:9" pos:end="97:33"><name pos:start="97:9" pos:end="97:9">h</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:33">mb_field_decoding_flag</name></name><operator pos:start="97:34" pos:end="97:34">=</operator><literal type="number" pos:start="97:35" pos:end="97:35">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="line" pos:start="97:38" pos:end="97:59">//FIXME som ed note ?!</comment>

    

    <expr_stmt pos:start="101:5" pos:end="101:25"><expr pos:start="101:5" pos:end="101:24"><name pos:start="101:5" pos:end="101:21"><name pos:start="101:5" pos:end="101:5">h</name><operator pos:start="101:6" pos:end="101:7">-&gt;</operator><name pos:start="101:8" pos:end="101:21">prev_mb_skiped</name></name><operator pos:start="101:22" pos:end="101:22">=</operator> <literal type="number" pos:start="101:24" pos:end="101:24">0</literal></expr>;</expr_stmt>

    

    <expr_stmt pos:start="105:5" pos:end="105:35"><expr pos:start="105:5" pos:end="105:34"><name pos:start="105:5" pos:end="105:11">mb_type</name><operator pos:start="105:12" pos:end="105:12">=</operator> <call pos:start="105:14" pos:end="105:34"><name pos:start="105:14" pos:end="105:26">get_ue_golomb</name><argument_list pos:start="105:27" pos:end="105:34">(<argument pos:start="105:28" pos:end="105:33"><expr pos:start="105:28" pos:end="105:33"><operator pos:start="105:28" pos:end="105:28">&amp;</operator><name pos:start="105:29" pos:end="105:33"><name pos:start="105:29" pos:end="105:29">s</name><operator pos:start="105:30" pos:end="105:31">-&gt;</operator><name pos:start="105:32" pos:end="105:33">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="107:5" pos:end="161:5"><if pos:start="107:5" pos:end="123:5">if<condition pos:start="107:7" pos:end="107:31">(<expr pos:start="107:8" pos:end="107:30"><name pos:start="107:8" pos:end="107:20"><name pos:start="107:8" pos:end="107:8">h</name><operator pos:start="107:9" pos:end="107:10">-&gt;</operator><name pos:start="107:11" pos:end="107:20">slice_type</name></name> <operator pos:start="107:22" pos:end="107:23">==</operator> <name pos:start="107:25" pos:end="107:30">B_TYPE</name></expr>)</condition><block pos:start="107:32" pos:end="123:5">{<block_content pos:start="109:9" pos:end="121:9">

        <if_stmt pos:start="109:9" pos:end="121:9"><if pos:start="109:9" pos:end="115:9">if<condition pos:start="109:11" pos:end="109:24">(<expr pos:start="109:12" pos:end="109:23"><name pos:start="109:12" pos:end="109:18">mb_type</name> <operator pos:start="109:20" pos:end="109:20">&lt;</operator> <literal type="number" pos:start="109:22" pos:end="109:23">23</literal></expr>)</condition><block pos:start="109:25" pos:end="115:9">{<block_content pos:start="111:13" pos:end="113:58">

            <expr_stmt pos:start="111:13" pos:end="111:69"><expr pos:start="111:13" pos:end="111:68"><name pos:start="111:13" pos:end="111:27">partition_count</name><operator pos:start="111:28" pos:end="111:28">=</operator> <name pos:start="111:30" pos:end="111:52"><name pos:start="111:30" pos:end="111:43">b_mb_type_info</name><index pos:start="111:44" pos:end="111:52">[<expr pos:start="111:45" pos:end="111:51"><name pos:start="111:45" pos:end="111:51">mb_type</name></expr>]</index></name><operator pos:start="111:53" pos:end="111:53">.</operator><name pos:start="111:54" pos:end="111:68">partition_count</name></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:58"><expr pos:start="113:13" pos:end="113:57"><name pos:start="113:13" pos:end="113:19">mb_type</name><operator pos:start="113:20" pos:end="113:20">=</operator>         <name pos:start="113:30" pos:end="113:52"><name pos:start="113:30" pos:end="113:43">b_mb_type_info</name><index pos:start="113:44" pos:end="113:52">[<expr pos:start="113:45" pos:end="113:51"><name pos:start="113:45" pos:end="113:51">mb_type</name></expr>]</index></name><operator pos:start="113:53" pos:end="113:53">.</operator><name pos:start="113:54" pos:end="113:57">type</name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="115:10" pos:end="121:9">else<block pos:start="115:14" pos:end="121:9">{<block_content pos:start="117:13" pos:end="119:33">

            <expr_stmt pos:start="117:13" pos:end="117:26"><expr pos:start="117:13" pos:end="117:25"><name pos:start="117:13" pos:end="117:19">mb_type</name> <operator pos:start="117:21" pos:end="117:22">-=</operator> <literal type="number" pos:start="117:24" pos:end="117:25">23</literal></expr>;</expr_stmt>

            <goto pos:start="119:13" pos:end="119:33">goto <name pos:start="119:18" pos:end="119:32">decode_intra_mb</name>;</goto>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if><if type="elseif" pos:start="123:6" pos:end="139:5">else if<condition pos:start="123:13" pos:end="123:70">(<expr pos:start="123:14" pos:end="123:36"><name pos:start="123:14" pos:end="123:26"><name pos:start="123:14" pos:end="123:14">h</name><operator pos:start="123:15" pos:end="123:16">-&gt;</operator><name pos:start="123:17" pos:end="123:26">slice_type</name></name> <operator pos:start="123:28" pos:end="123:29">==</operator> <name pos:start="123:31" pos:end="123:36">P_TYPE</name></expr> <comment type="block" pos:start="123:38" pos:end="123:69">/*|| h-&gt;slice_type == SP_TYPE */</comment>)</condition><block pos:start="123:71" pos:end="139:5">{<block_content pos:start="125:9" pos:end="137:9">

        <if_stmt pos:start="125:9" pos:end="137:9"><if pos:start="125:9" pos:end="131:9">if<condition pos:start="125:11" pos:end="125:23">(<expr pos:start="125:12" pos:end="125:22"><name pos:start="125:12" pos:end="125:18">mb_type</name> <operator pos:start="125:20" pos:end="125:20">&lt;</operator> <literal type="number" pos:start="125:22" pos:end="125:22">5</literal></expr>)</condition><block pos:start="125:24" pos:end="131:9">{<block_content pos:start="127:13" pos:end="129:58">

            <expr_stmt pos:start="127:13" pos:end="127:69"><expr pos:start="127:13" pos:end="127:68"><name pos:start="127:13" pos:end="127:27">partition_count</name><operator pos:start="127:28" pos:end="127:28">=</operator> <name pos:start="127:30" pos:end="127:52"><name pos:start="127:30" pos:end="127:43">p_mb_type_info</name><index pos:start="127:44" pos:end="127:52">[<expr pos:start="127:45" pos:end="127:51"><name pos:start="127:45" pos:end="127:51">mb_type</name></expr>]</index></name><operator pos:start="127:53" pos:end="127:53">.</operator><name pos:start="127:54" pos:end="127:68">partition_count</name></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:58"><expr pos:start="129:13" pos:end="129:57"><name pos:start="129:13" pos:end="129:19">mb_type</name><operator pos:start="129:20" pos:end="129:20">=</operator>         <name pos:start="129:30" pos:end="129:52"><name pos:start="129:30" pos:end="129:43">p_mb_type_info</name><index pos:start="129:44" pos:end="129:52">[<expr pos:start="129:45" pos:end="129:51"><name pos:start="129:45" pos:end="129:51">mb_type</name></expr>]</index></name><operator pos:start="129:53" pos:end="129:53">.</operator><name pos:start="129:54" pos:end="129:57">type</name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="131:10" pos:end="137:9">else<block pos:start="131:14" pos:end="137:9">{<block_content pos:start="133:13" pos:end="135:33">

            <expr_stmt pos:start="133:13" pos:end="133:25"><expr pos:start="133:13" pos:end="133:24"><name pos:start="133:13" pos:end="133:19">mb_type</name> <operator pos:start="133:21" pos:end="133:22">-=</operator> <literal type="number" pos:start="133:24" pos:end="133:24">5</literal></expr>;</expr_stmt>

            <goto pos:start="135:13" pos:end="135:33">goto <name pos:start="135:18" pos:end="135:32">decode_intra_mb</name>;</goto>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if><else pos:start="139:6" pos:end="161:5">else<block pos:start="139:10" pos:end="161:5">{<block_content pos:start="141:8" pos:end="159:46">

       <expr_stmt pos:start="141:8" pos:end="141:39"><expr pos:start="141:8" pos:end="141:38"><call pos:start="141:8" pos:end="141:38"><name pos:start="141:8" pos:end="141:13">assert</name><argument_list pos:start="141:14" pos:end="141:38">(<argument pos:start="141:15" pos:end="141:37"><expr pos:start="141:15" pos:end="141:37"><name pos:start="141:15" pos:end="141:27"><name pos:start="141:15" pos:end="141:15">h</name><operator pos:start="141:16" pos:end="141:17">-&gt;</operator><name pos:start="141:18" pos:end="141:27">slice_type</name></name> <operator pos:start="141:29" pos:end="141:30">==</operator> <name pos:start="141:32" pos:end="141:37">I_TYPE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="143:1" pos:end="143:16"><name pos:start="143:1" pos:end="143:15">decode_intra_mb</name>:</label>

        <if_stmt pos:start="145:9" pos:end="151:9"><if pos:start="145:9" pos:end="151:9">if<condition pos:start="145:11" pos:end="145:24">(<expr pos:start="145:12" pos:end="145:23"><name pos:start="145:12" pos:end="145:18">mb_type</name> <operator pos:start="145:20" pos:end="145:20">&gt;</operator> <literal type="number" pos:start="145:22" pos:end="145:23">25</literal></expr>)</condition><block pos:start="145:25" pos:end="151:9">{<block_content pos:start="147:13" pos:end="149:22">

            <expr_stmt pos:start="147:13" pos:end="147:156"><expr pos:start="147:13" pos:end="147:155"><call pos:start="147:13" pos:end="147:155"><name pos:start="147:13" pos:end="147:18">av_log</name><argument_list pos:start="147:19" pos:end="147:155">(<argument pos:start="147:20" pos:end="147:29"><expr pos:start="147:20" pos:end="147:29"><name pos:start="147:20" pos:end="147:29"><name pos:start="147:20" pos:end="147:20">h</name><operator pos:start="147:21" pos:end="147:22">-&gt;</operator><name pos:start="147:23" pos:end="147:23">s</name><operator pos:start="147:24" pos:end="147:24">.</operator><name pos:start="147:25" pos:end="147:29">avctx</name></name></expr></argument>, <argument pos:start="147:32" pos:end="147:43"><expr pos:start="147:32" pos:end="147:43"><name pos:start="147:32" pos:end="147:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="147:46" pos:end="147:89"><expr pos:start="147:46" pos:end="147:89"><literal type="string" pos:start="147:46" pos:end="147:89">"mb_type %d in %c slice to large at %d %d\n"</literal></expr></argument>, <argument pos:start="147:92" pos:end="147:98"><expr pos:start="147:92" pos:end="147:98"><name pos:start="147:92" pos:end="147:98">mb_type</name></expr></argument>, <argument pos:start="147:101" pos:end="147:136"><expr pos:start="147:101" pos:end="147:136"><call pos:start="147:101" pos:end="147:136"><name pos:start="147:101" pos:end="147:121">av_get_pict_type_char</name><argument_list pos:start="147:122" pos:end="147:136">(<argument pos:start="147:123" pos:end="147:135"><expr pos:start="147:123" pos:end="147:135"><name pos:start="147:123" pos:end="147:135"><name pos:start="147:123" pos:end="147:123">h</name><operator pos:start="147:124" pos:end="147:125">-&gt;</operator><name pos:start="147:126" pos:end="147:135">slice_type</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="147:139" pos:end="147:145"><expr pos:start="147:139" pos:end="147:145"><name pos:start="147:139" pos:end="147:145"><name pos:start="147:139" pos:end="147:139">s</name><operator pos:start="147:140" pos:end="147:141">-&gt;</operator><name pos:start="147:142" pos:end="147:145">mb_x</name></name></expr></argument>, <argument pos:start="147:148" pos:end="147:154"><expr pos:start="147:148" pos:end="147:154"><name pos:start="147:148" pos:end="147:154"><name pos:start="147:148" pos:end="147:148">s</name><operator pos:start="147:149" pos:end="147:150">-&gt;</operator><name pos:start="147:151" pos:end="147:154">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="149:13" pos:end="149:22">return <expr pos:start="149:20" pos:end="149:21"><operator pos:start="149:20" pos:end="149:20">-</operator><literal type="number" pos:start="149:21" pos:end="149:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:26"><expr pos:start="153:9" pos:end="153:25"><name pos:start="153:9" pos:end="153:23">partition_count</name><operator pos:start="153:24" pos:end="153:24">=</operator><literal type="number" pos:start="153:25" pos:end="153:25">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:41"><expr pos:start="155:9" pos:end="155:40"><name pos:start="155:9" pos:end="155:11">cbp</name><operator pos:start="155:12" pos:end="155:12">=</operator> <name pos:start="155:14" pos:end="155:36"><name pos:start="155:14" pos:end="155:27">i_mb_type_info</name><index pos:start="155:28" pos:end="155:36">[<expr pos:start="155:29" pos:end="155:35"><name pos:start="155:29" pos:end="155:35">mb_type</name></expr>]</index></name><operator pos:start="155:37" pos:end="155:37">.</operator><name pos:start="155:38" pos:end="155:40">cbp</name></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:67"><expr pos:start="157:9" pos:end="157:66"><name pos:start="157:9" pos:end="157:31"><name pos:start="157:9" pos:end="157:9">h</name><operator pos:start="157:10" pos:end="157:11">-&gt;</operator><name pos:start="157:12" pos:end="157:31">intra16x16_pred_mode</name></name><operator pos:start="157:32" pos:end="157:32">=</operator> <name pos:start="157:34" pos:end="157:56"><name pos:start="157:34" pos:end="157:47">i_mb_type_info</name><index pos:start="157:48" pos:end="157:56">[<expr pos:start="157:49" pos:end="157:55"><name pos:start="157:49" pos:end="157:55">mb_type</name></expr>]</index></name><operator pos:start="157:57" pos:end="157:57">.</operator><name pos:start="157:58" pos:end="157:66">pred_mode</name></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:46"><expr pos:start="159:9" pos:end="159:45"><name pos:start="159:9" pos:end="159:15">mb_type</name><operator pos:start="159:16" pos:end="159:16">=</operator> <name pos:start="159:18" pos:end="159:40"><name pos:start="159:18" pos:end="159:31">i_mb_type_info</name><index pos:start="159:32" pos:end="159:40">[<expr pos:start="159:33" pos:end="159:39"><name pos:start="159:33" pos:end="159:39">mb_type</name></expr>]</index></name><operator pos:start="159:41" pos:end="159:41">.</operator><name pos:start="159:42" pos:end="159:45">type</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="165:5" pos:end="167:38"><if pos:start="165:5" pos:end="167:38">if<condition pos:start="165:7" pos:end="165:33">(<expr pos:start="165:8" pos:end="165:32"><name pos:start="165:8" pos:end="165:32"><name pos:start="165:8" pos:end="165:8">h</name><operator pos:start="165:9" pos:end="165:10">-&gt;</operator><name pos:start="165:11" pos:end="165:32">mb_field_decoding_flag</name></name></expr>)</condition><block type="pseudo" pos:start="167:9" pos:end="167:38"><block_content pos:start="167:9" pos:end="167:38">

        <expr_stmt pos:start="167:9" pos:end="167:38"><expr pos:start="167:9" pos:end="167:37"><name pos:start="167:9" pos:end="167:15">mb_type</name> <operator pos:start="167:17" pos:end="167:18">|=</operator> <name pos:start="167:20" pos:end="167:37">MB_TYPE_INTERLACED</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="171:5" pos:end="171:47"><expr pos:start="171:5" pos:end="171:46"><name pos:start="171:5" pos:end="171:37"><name pos:start="171:5" pos:end="171:5">s</name><operator pos:start="171:6" pos:end="171:7">-&gt;</operator><name pos:start="171:8" pos:end="171:22">current_picture</name><operator pos:start="171:23" pos:end="171:23">.</operator><name pos:start="171:24" pos:end="171:30">mb_type</name><index pos:start="171:31" pos:end="171:37">[<expr pos:start="171:32" pos:end="171:36"><name pos:start="171:32" pos:end="171:36">mb_xy</name></expr>]</index></name><operator pos:start="171:38" pos:end="171:38">=</operator> <name pos:start="171:40" pos:end="171:46">mb_type</name></expr>;</expr_stmt>

    <expr_stmt pos:start="173:5" pos:end="173:42"><expr pos:start="173:5" pos:end="173:41"><name pos:start="173:5" pos:end="173:27"><name pos:start="173:5" pos:end="173:5">h</name><operator pos:start="173:6" pos:end="173:7">-&gt;</operator><name pos:start="173:8" pos:end="173:18">slice_table</name><index pos:start="173:19" pos:end="173:27">[ <expr pos:start="173:21" pos:end="173:25"><name pos:start="173:21" pos:end="173:25">mb_xy</name></expr> ]</index></name><operator pos:start="173:28" pos:end="173:28">=</operator> <name pos:start="173:30" pos:end="173:41"><name pos:start="173:30" pos:end="173:30">h</name><operator pos:start="173:31" pos:end="173:32">-&gt;</operator><name pos:start="173:33" pos:end="173:41">slice_num</name></name></expr>;</expr_stmt>

    

    <if_stmt pos:start="177:5" pos:end="245:5"><if pos:start="177:5" pos:end="245:5">if<condition pos:start="177:7" pos:end="177:29">(<expr pos:start="177:8" pos:end="177:28"><call pos:start="177:8" pos:end="177:28"><name pos:start="177:8" pos:end="177:19">IS_INTRA_PCM</name><argument_list pos:start="177:20" pos:end="177:28">(<argument pos:start="177:21" pos:end="177:27"><expr pos:start="177:21" pos:end="177:27"><name pos:start="177:21" pos:end="177:27">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="177:30" pos:end="245:5">{<block_content pos:start="179:9" pos:end="243:17">

        <decl_stmt pos:start="179:9" pos:end="179:27"><decl pos:start="179:9" pos:end="179:26"><type pos:start="179:9" pos:end="179:23"><specifier pos:start="179:9" pos:end="179:13">const</specifier> <name pos:start="179:15" pos:end="179:21">uint8_t</name> <modifier pos:start="179:23" pos:end="179:23">*</modifier></type><name pos:start="179:24" pos:end="179:26">ptr</name></decl>;</decl_stmt>

        <decl_stmt pos:start="181:9" pos:end="181:17"><decl pos:start="181:9" pos:end="181:13"><type pos:start="181:9" pos:end="181:11"><name pos:start="181:9" pos:end="181:11">int</name></type> <name pos:start="181:13" pos:end="181:13">x</name></decl>, <decl pos:start="181:16" pos:end="181:16"><type ref="prev" pos:start="181:9" pos:end="181:11"/><name pos:start="181:16" pos:end="181:16">y</name></decl>;</decl_stmt>

        

        <comment type="line" pos:start="185:9" pos:end="185:70">// we assume these blocks are very rare so we dont optimize it</comment>

        <expr_stmt pos:start="187:9" pos:end="187:31"><expr pos:start="187:9" pos:end="187:30"><call pos:start="187:9" pos:end="187:30"><name pos:start="187:9" pos:end="187:22">align_get_bits</name><argument_list pos:start="187:23" pos:end="187:30">(<argument pos:start="187:24" pos:end="187:29"><expr pos:start="187:24" pos:end="187:29"><operator pos:start="187:24" pos:end="187:24">&amp;</operator><name pos:start="187:25" pos:end="187:29"><name pos:start="187:25" pos:end="187:25">s</name><operator pos:start="187:26" pos:end="187:27">-&gt;</operator><name pos:start="187:28" pos:end="187:29">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        

        <expr_stmt pos:start="191:9" pos:end="191:51"><expr pos:start="191:9" pos:end="191:50"><name pos:start="191:9" pos:end="191:11">ptr</name><operator pos:start="191:12" pos:end="191:12">=</operator> <name pos:start="191:14" pos:end="191:25"><name pos:start="191:14" pos:end="191:14">s</name><operator pos:start="191:15" pos:end="191:16">-&gt;</operator><name pos:start="191:17" pos:end="191:18">gb</name><operator pos:start="191:19" pos:end="191:19">.</operator><name pos:start="191:20" pos:end="191:25">buffer</name></name> <operator pos:start="191:27" pos:end="191:27">+</operator> <call pos:start="191:29" pos:end="191:50"><name pos:start="191:29" pos:end="191:42">get_bits_count</name><argument_list pos:start="191:43" pos:end="191:50">(<argument pos:start="191:44" pos:end="191:49"><expr pos:start="191:44" pos:end="191:49"><operator pos:start="191:44" pos:end="191:44">&amp;</operator><name pos:start="191:45" pos:end="191:49"><name pos:start="191:45" pos:end="191:45">s</name><operator pos:start="191:46" pos:end="191:47">-&gt;</operator><name pos:start="191:48" pos:end="191:49">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    

        <for pos:start="195:9" pos:end="205:9">for<control pos:start="195:12" pos:end="195:27">(<init pos:start="195:13" pos:end="195:16"><expr pos:start="195:13" pos:end="195:15"><name pos:start="195:13" pos:end="195:13">y</name><operator pos:start="195:14" pos:end="195:14">=</operator><literal type="number" pos:start="195:15" pos:end="195:15">0</literal></expr>;</init> <condition pos:start="195:18" pos:end="195:22"><expr pos:start="195:18" pos:end="195:21"><name pos:start="195:18" pos:end="195:18">y</name><operator pos:start="195:19" pos:end="195:19">&lt;</operator><literal type="number" pos:start="195:20" pos:end="195:21">16</literal></expr>;</condition> <incr pos:start="195:24" pos:end="195:26"><expr pos:start="195:24" pos:end="195:26"><name pos:start="195:24" pos:end="195:24">y</name><operator pos:start="195:25" pos:end="195:26">++</operator></expr></incr>)</control><block pos:start="195:28" pos:end="205:9">{<block_content pos:start="197:13" pos:end="203:13">

            <decl_stmt pos:start="197:13" pos:end="197:49"><decl pos:start="197:13" pos:end="197:48"><type pos:start="197:13" pos:end="197:21"><specifier pos:start="197:13" pos:end="197:17">const</specifier> <name pos:start="197:19" pos:end="197:21">int</name></type> <name pos:start="197:23" pos:end="197:27">index</name><init pos:start="197:28" pos:end="197:48">= <expr pos:start="197:30" pos:end="197:48"><literal type="number" pos:start="197:30" pos:end="197:30">4</literal><operator pos:start="197:31" pos:end="197:31">*</operator><operator pos:start="197:32" pos:end="197:32">(</operator><name pos:start="197:33" pos:end="197:33">y</name><operator pos:start="197:34" pos:end="197:34">&amp;</operator><literal type="number" pos:start="197:35" pos:end="197:35">3</literal><operator pos:start="197:36" pos:end="197:36">)</operator> <operator pos:start="197:38" pos:end="197:38">+</operator> <literal type="number" pos:start="197:40" pos:end="197:41">64</literal><operator pos:start="197:42" pos:end="197:42">*</operator><operator pos:start="197:43" pos:end="197:43">(</operator><name pos:start="197:44" pos:end="197:44">y</name><operator pos:start="197:45" pos:end="197:46">&gt;&gt;</operator><literal type="number" pos:start="197:47" pos:end="197:47">2</literal><operator pos:start="197:48" pos:end="197:48">)</operator></expr></init></decl>;</decl_stmt>

            <for pos:start="199:13" pos:end="203:13">for<control pos:start="199:16" pos:end="199:31">(<init pos:start="199:17" pos:end="199:20"><expr pos:start="199:17" pos:end="199:19"><name pos:start="199:17" pos:end="199:17">x</name><operator pos:start="199:18" pos:end="199:18">=</operator><literal type="number" pos:start="199:19" pos:end="199:19">0</literal></expr>;</init> <condition pos:start="199:22" pos:end="199:26"><expr pos:start="199:22" pos:end="199:25"><name pos:start="199:22" pos:end="199:22">x</name><operator pos:start="199:23" pos:end="199:23">&lt;</operator><literal type="number" pos:start="199:24" pos:end="199:25">16</literal></expr>;</condition> <incr pos:start="199:28" pos:end="199:30"><expr pos:start="199:28" pos:end="199:30"><name pos:start="199:28" pos:end="199:28">x</name><operator pos:start="199:29" pos:end="199:30">++</operator></expr></incr>)</control><block pos:start="199:32" pos:end="203:13">{<block_content pos:start="201:17" pos:end="201:59">

                <expr_stmt pos:start="201:17" pos:end="201:59"><expr pos:start="201:17" pos:end="201:58"><name pos:start="201:17" pos:end="201:48"><name pos:start="201:17" pos:end="201:17">h</name><operator pos:start="201:18" pos:end="201:19">-&gt;</operator><name pos:start="201:20" pos:end="201:21">mb</name><index pos:start="201:22" pos:end="201:48">[<expr pos:start="201:23" pos:end="201:47"><name pos:start="201:23" pos:end="201:27">index</name> <operator pos:start="201:29" pos:end="201:29">+</operator> <operator pos:start="201:31" pos:end="201:31">(</operator><name pos:start="201:32" pos:end="201:32">x</name><operator pos:start="201:33" pos:end="201:33">&amp;</operator><literal type="number" pos:start="201:34" pos:end="201:34">3</literal><operator pos:start="201:35" pos:end="201:35">)</operator> <operator pos:start="201:37" pos:end="201:37">+</operator> <literal type="number" pos:start="201:39" pos:end="201:40">16</literal><operator pos:start="201:41" pos:end="201:41">*</operator><operator pos:start="201:42" pos:end="201:42">(</operator><name pos:start="201:43" pos:end="201:43">x</name><operator pos:start="201:44" pos:end="201:45">&gt;&gt;</operator><literal type="number" pos:start="201:46" pos:end="201:46">2</literal><operator pos:start="201:47" pos:end="201:47">)</operator></expr>]</index></name><operator pos:start="201:49" pos:end="201:49">=</operator> <operator pos:start="201:51" pos:end="201:51">*</operator><operator pos:start="201:52" pos:end="201:52">(</operator><name pos:start="201:53" pos:end="201:55">ptr</name><operator pos:start="201:56" pos:end="201:57">++</operator><operator pos:start="201:58" pos:end="201:58">)</operator></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

        <for pos:start="207:9" pos:end="217:9">for<control pos:start="207:12" pos:end="207:26">(<init pos:start="207:13" pos:end="207:16"><expr pos:start="207:13" pos:end="207:15"><name pos:start="207:13" pos:end="207:13">y</name><operator pos:start="207:14" pos:end="207:14">=</operator><literal type="number" pos:start="207:15" pos:end="207:15">0</literal></expr>;</init> <condition pos:start="207:18" pos:end="207:21"><expr pos:start="207:18" pos:end="207:20"><name pos:start="207:18" pos:end="207:18">y</name><operator pos:start="207:19" pos:end="207:19">&lt;</operator><literal type="number" pos:start="207:20" pos:end="207:20">8</literal></expr>;</condition> <incr pos:start="207:23" pos:end="207:25"><expr pos:start="207:23" pos:end="207:25"><name pos:start="207:23" pos:end="207:23">y</name><operator pos:start="207:24" pos:end="207:25">++</operator></expr></incr>)</control><block pos:start="207:27" pos:end="217:9">{<block_content pos:start="209:13" pos:end="215:13">

            <decl_stmt pos:start="209:13" pos:end="209:55"><decl pos:start="209:13" pos:end="209:54"><type pos:start="209:13" pos:end="209:21"><specifier pos:start="209:13" pos:end="209:17">const</specifier> <name pos:start="209:19" pos:end="209:21">int</name></type> <name pos:start="209:23" pos:end="209:27">index</name><init pos:start="209:28" pos:end="209:54">= <expr pos:start="209:30" pos:end="209:54"><literal type="number" pos:start="209:30" pos:end="209:34">256</literal> <operator pos:start="209:34" pos:end="209:34">+</operator> <literal type="number" pos:start="209:36" pos:end="209:36">4</literal><operator pos:start="209:37" pos:end="209:37">*</operator><operator pos:start="209:38" pos:end="209:38">(</operator><name pos:start="209:39" pos:end="209:39">y</name><operator pos:start="209:40" pos:end="209:40">&amp;</operator><literal type="number" pos:start="209:41" pos:end="209:41">3</literal><operator pos:start="209:42" pos:end="209:42">)</operator> <operator pos:start="209:44" pos:end="209:44">+</operator> <literal type="number" pos:start="209:46" pos:end="209:47">32</literal><operator pos:start="209:48" pos:end="209:48">*</operator><operator pos:start="209:49" pos:end="209:49">(</operator><name pos:start="209:50" pos:end="209:50">y</name><operator pos:start="209:51" pos:end="209:52">&gt;&gt;</operator><literal type="number" pos:start="209:53" pos:end="209:53">2</literal><operator pos:start="209:54" pos:end="209:54">)</operator></expr></init></decl>;</decl_stmt>

            <for pos:start="211:13" pos:end="215:13">for<control pos:start="211:16" pos:end="211:30">(<init pos:start="211:17" pos:end="211:20"><expr pos:start="211:17" pos:end="211:19"><name pos:start="211:17" pos:end="211:17">x</name><operator pos:start="211:18" pos:end="211:18">=</operator><literal type="number" pos:start="211:19" pos:end="211:19">0</literal></expr>;</init> <condition pos:start="211:22" pos:end="211:25"><expr pos:start="211:22" pos:end="211:24"><name pos:start="211:22" pos:end="211:22">x</name><operator pos:start="211:23" pos:end="211:23">&lt;</operator><literal type="number" pos:start="211:24" pos:end="211:24">8</literal></expr>;</condition> <incr pos:start="211:27" pos:end="211:29"><expr pos:start="211:27" pos:end="211:29"><name pos:start="211:27" pos:end="211:27">x</name><operator pos:start="211:28" pos:end="211:29">++</operator></expr></incr>)</control><block pos:start="211:31" pos:end="215:13">{<block_content pos:start="213:17" pos:end="213:59">

                <expr_stmt pos:start="213:17" pos:end="213:59"><expr pos:start="213:17" pos:end="213:58"><name pos:start="213:17" pos:end="213:48"><name pos:start="213:17" pos:end="213:17">h</name><operator pos:start="213:18" pos:end="213:19">-&gt;</operator><name pos:start="213:20" pos:end="213:21">mb</name><index pos:start="213:22" pos:end="213:48">[<expr pos:start="213:23" pos:end="213:47"><name pos:start="213:23" pos:end="213:27">index</name> <operator pos:start="213:29" pos:end="213:29">+</operator> <operator pos:start="213:31" pos:end="213:31">(</operator><name pos:start="213:32" pos:end="213:32">x</name><operator pos:start="213:33" pos:end="213:33">&amp;</operator><literal type="number" pos:start="213:34" pos:end="213:34">3</literal><operator pos:start="213:35" pos:end="213:35">)</operator> <operator pos:start="213:37" pos:end="213:37">+</operator> <literal type="number" pos:start="213:39" pos:end="213:40">16</literal><operator pos:start="213:41" pos:end="213:41">*</operator><operator pos:start="213:42" pos:end="213:42">(</operator><name pos:start="213:43" pos:end="213:43">x</name><operator pos:start="213:44" pos:end="213:45">&gt;&gt;</operator><literal type="number" pos:start="213:46" pos:end="213:46">2</literal><operator pos:start="213:47" pos:end="213:47">)</operator></expr>]</index></name><operator pos:start="213:49" pos:end="213:49">=</operator> <operator pos:start="213:51" pos:end="213:51">*</operator><operator pos:start="213:52" pos:end="213:52">(</operator><name pos:start="213:53" pos:end="213:55">ptr</name><operator pos:start="213:56" pos:end="213:57">++</operator><operator pos:start="213:58" pos:end="213:58">)</operator></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

        <for pos:start="219:9" pos:end="229:9">for<control pos:start="219:12" pos:end="219:26">(<init pos:start="219:13" pos:end="219:16"><expr pos:start="219:13" pos:end="219:15"><name pos:start="219:13" pos:end="219:13">y</name><operator pos:start="219:14" pos:end="219:14">=</operator><literal type="number" pos:start="219:15" pos:end="219:15">0</literal></expr>;</init> <condition pos:start="219:18" pos:end="219:21"><expr pos:start="219:18" pos:end="219:20"><name pos:start="219:18" pos:end="219:18">y</name><operator pos:start="219:19" pos:end="219:19">&lt;</operator><literal type="number" pos:start="219:20" pos:end="219:20">8</literal></expr>;</condition> <incr pos:start="219:23" pos:end="219:25"><expr pos:start="219:23" pos:end="219:25"><name pos:start="219:23" pos:end="219:23">y</name><operator pos:start="219:24" pos:end="219:25">++</operator></expr></incr>)</control><block pos:start="219:27" pos:end="229:9">{<block_content pos:start="221:13" pos:end="227:13">

            <decl_stmt pos:start="221:13" pos:end="221:60"><decl pos:start="221:13" pos:end="221:59"><type pos:start="221:13" pos:end="221:21"><specifier pos:start="221:13" pos:end="221:17">const</specifier> <name pos:start="221:19" pos:end="221:21">int</name></type> <name pos:start="221:23" pos:end="221:27">index</name><init pos:start="221:28" pos:end="221:59">= <expr pos:start="221:30" pos:end="221:59"><literal type="number" pos:start="221:30" pos:end="221:34">256</literal> <operator pos:start="221:34" pos:end="221:34">+</operator> <literal type="number" pos:start="221:36" pos:end="221:39">64</literal> <operator pos:start="221:39" pos:end="221:39">+</operator> <literal type="number" pos:start="221:41" pos:end="221:41">4</literal><operator pos:start="221:42" pos:end="221:42">*</operator><operator pos:start="221:43" pos:end="221:43">(</operator><name pos:start="221:44" pos:end="221:44">y</name><operator pos:start="221:45" pos:end="221:45">&amp;</operator><literal type="number" pos:start="221:46" pos:end="221:46">3</literal><operator pos:start="221:47" pos:end="221:47">)</operator> <operator pos:start="221:49" pos:end="221:49">+</operator> <literal type="number" pos:start="221:51" pos:end="221:52">32</literal><operator pos:start="221:53" pos:end="221:53">*</operator><operator pos:start="221:54" pos:end="221:54">(</operator><name pos:start="221:55" pos:end="221:55">y</name><operator pos:start="221:56" pos:end="221:57">&gt;&gt;</operator><literal type="number" pos:start="221:58" pos:end="221:58">2</literal><operator pos:start="221:59" pos:end="221:59">)</operator></expr></init></decl>;</decl_stmt>

            <for pos:start="223:13" pos:end="227:13">for<control pos:start="223:16" pos:end="223:30">(<init pos:start="223:17" pos:end="223:20"><expr pos:start="223:17" pos:end="223:19"><name pos:start="223:17" pos:end="223:17">x</name><operator pos:start="223:18" pos:end="223:18">=</operator><literal type="number" pos:start="223:19" pos:end="223:19">0</literal></expr>;</init> <condition pos:start="223:22" pos:end="223:25"><expr pos:start="223:22" pos:end="223:24"><name pos:start="223:22" pos:end="223:22">x</name><operator pos:start="223:23" pos:end="223:23">&lt;</operator><literal type="number" pos:start="223:24" pos:end="223:24">8</literal></expr>;</condition> <incr pos:start="223:27" pos:end="223:29"><expr pos:start="223:27" pos:end="223:29"><name pos:start="223:27" pos:end="223:27">x</name><operator pos:start="223:28" pos:end="223:29">++</operator></expr></incr>)</control><block pos:start="223:31" pos:end="227:13">{<block_content pos:start="225:17" pos:end="225:59">

                <expr_stmt pos:start="225:17" pos:end="225:59"><expr pos:start="225:17" pos:end="225:58"><name pos:start="225:17" pos:end="225:48"><name pos:start="225:17" pos:end="225:17">h</name><operator pos:start="225:18" pos:end="225:19">-&gt;</operator><name pos:start="225:20" pos:end="225:21">mb</name><index pos:start="225:22" pos:end="225:48">[<expr pos:start="225:23" pos:end="225:47"><name pos:start="225:23" pos:end="225:27">index</name> <operator pos:start="225:29" pos:end="225:29">+</operator> <operator pos:start="225:31" pos:end="225:31">(</operator><name pos:start="225:32" pos:end="225:32">x</name><operator pos:start="225:33" pos:end="225:33">&amp;</operator><literal type="number" pos:start="225:34" pos:end="225:34">3</literal><operator pos:start="225:35" pos:end="225:35">)</operator> <operator pos:start="225:37" pos:end="225:37">+</operator> <literal type="number" pos:start="225:39" pos:end="225:40">16</literal><operator pos:start="225:41" pos:end="225:41">*</operator><operator pos:start="225:42" pos:end="225:42">(</operator><name pos:start="225:43" pos:end="225:43">x</name><operator pos:start="225:44" pos:end="225:45">&gt;&gt;</operator><literal type="number" pos:start="225:46" pos:end="225:46">2</literal><operator pos:start="225:47" pos:end="225:47">)</operator></expr>]</index></name><operator pos:start="225:49" pos:end="225:49">=</operator> <operator pos:start="225:51" pos:end="225:51">*</operator><operator pos:start="225:52" pos:end="225:52">(</operator><name pos:start="225:53" pos:end="225:55">ptr</name><operator pos:start="225:56" pos:end="225:57">++</operator><operator pos:start="225:58" pos:end="225:58">)</operator></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    

        <expr_stmt pos:start="233:9" pos:end="233:31"><expr pos:start="233:9" pos:end="233:30"><call pos:start="233:9" pos:end="233:30"><name pos:start="233:9" pos:end="233:17">skip_bits</name><argument_list pos:start="233:18" pos:end="233:30">(<argument pos:start="233:19" pos:end="233:24"><expr pos:start="233:19" pos:end="233:24"><operator pos:start="233:19" pos:end="233:19">&amp;</operator><name pos:start="233:20" pos:end="233:24"><name pos:start="233:20" pos:end="233:20">s</name><operator pos:start="233:21" pos:end="233:22">-&gt;</operator><name pos:start="233:23" pos:end="233:24">gb</name></name></expr></argument>, <argument pos:start="233:27" pos:end="233:29"><expr pos:start="233:27" pos:end="233:29"><literal type="number" pos:start="233:27" pos:end="233:29">384</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="233:33" pos:end="233:72">//FIXME check /fix the bitstream readers</comment>

        

        <expr_stmt pos:start="237:9" pos:end="237:53"><expr pos:start="237:9" pos:end="237:52"><call pos:start="237:9" pos:end="237:52"><name pos:start="237:9" pos:end="237:14">memset</name><argument_list pos:start="237:15" pos:end="237:52">(<argument pos:start="237:16" pos:end="237:39"><expr pos:start="237:16" pos:end="237:39"><name pos:start="237:16" pos:end="237:39"><name pos:start="237:16" pos:end="237:16">h</name><operator pos:start="237:17" pos:end="237:18">-&gt;</operator><name pos:start="237:19" pos:end="237:32">non_zero_count</name><index pos:start="237:33" pos:end="237:39">[<expr pos:start="237:34" pos:end="237:38"><name pos:start="237:34" pos:end="237:38">mb_xy</name></expr>]</index></name></expr></argument>, <argument pos:start="237:42" pos:end="237:43"><expr pos:start="237:42" pos:end="237:43"><literal type="number" pos:start="237:42" pos:end="237:43">16</literal></expr></argument>, <argument pos:start="237:46" pos:end="237:51"><expr pos:start="237:46" pos:end="237:51"><literal type="number" pos:start="237:46" pos:end="237:48">16</literal><operator pos:start="237:48" pos:end="237:48">+</operator><literal type="number" pos:start="237:49" pos:end="237:50">4</literal><operator pos:start="237:50" pos:end="237:50">+</operator><literal type="number" pos:start="237:51" pos:end="237:51">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="239:9" pos:end="239:58"><expr pos:start="239:9" pos:end="239:57"><name pos:start="239:9" pos:end="239:46"><name pos:start="239:9" pos:end="239:9">s</name><operator pos:start="239:10" pos:end="239:11">-&gt;</operator><name pos:start="239:12" pos:end="239:26">current_picture</name><operator pos:start="239:27" pos:end="239:27">.</operator><name pos:start="239:28" pos:end="239:39">qscale_table</name><index pos:start="239:40" pos:end="239:46">[<expr pos:start="239:41" pos:end="239:45"><name pos:start="239:41" pos:end="239:45">mb_xy</name></expr>]</index></name><operator pos:start="239:47" pos:end="239:47">=</operator> <name pos:start="239:49" pos:end="239:57"><name pos:start="239:49" pos:end="239:49">s</name><operator pos:start="239:50" pos:end="239:51">-&gt;</operator><name pos:start="239:52" pos:end="239:57">qscale</name></name></expr>;</expr_stmt>

        

        <return pos:start="243:9" pos:end="243:17">return <expr pos:start="243:16" pos:end="243:16"><literal type="number" pos:start="243:16" pos:end="243:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

        

    <expr_stmt pos:start="249:5" pos:end="249:28"><expr pos:start="249:5" pos:end="249:27"><call pos:start="249:5" pos:end="249:27"><name pos:start="249:5" pos:end="249:15">fill_caches</name><argument_list pos:start="249:16" pos:end="249:27">(<argument pos:start="249:17" pos:end="249:17"><expr pos:start="249:17" pos:end="249:17"><name pos:start="249:17" pos:end="249:17">h</name></expr></argument>, <argument pos:start="249:20" pos:end="249:26"><expr pos:start="249:20" pos:end="249:26"><name pos:start="249:20" pos:end="249:26">mb_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="253:5" pos:end="253:13">//mb_pred</comment>

    <if_stmt pos:start="255:5" pos:end="635:5"><if pos:start="255:5" pos:end="327:5">if<condition pos:start="255:7" pos:end="255:25">(<expr pos:start="255:8" pos:end="255:24"><call pos:start="255:8" pos:end="255:24"><name pos:start="255:8" pos:end="255:15">IS_INTRA</name><argument_list pos:start="255:16" pos:end="255:24">(<argument pos:start="255:17" pos:end="255:23"><expr pos:start="255:17" pos:end="255:23"><name pos:start="255:17" pos:end="255:23">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="255:26" pos:end="327:5">{<block_content pos:start="259:13" pos:end="325:26">

<comment type="line" pos:start="257:1" pos:end="257:44">//            init_top_left_availability(h);</comment>

            <if_stmt pos:start="259:13" pos:end="315:13"><if pos:start="259:13" pos:end="307:13">if<condition pos:start="259:15" pos:end="259:36">(<expr pos:start="259:16" pos:end="259:35"><call pos:start="259:16" pos:end="259:35"><name pos:start="259:16" pos:end="259:26">IS_INTRA4x4</name><argument_list pos:start="259:27" pos:end="259:35">(<argument pos:start="259:28" pos:end="259:34"><expr pos:start="259:28" pos:end="259:34"><name pos:start="259:28" pos:end="259:34">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="259:37" pos:end="307:13">{<block_content pos:start="261:17" pos:end="305:30">

                <decl_stmt pos:start="261:17" pos:end="261:22"><decl pos:start="261:17" pos:end="261:21"><type pos:start="261:17" pos:end="261:19"><name pos:start="261:17" pos:end="261:19">int</name></type> <name pos:start="261:21" pos:end="261:21">i</name></decl>;</decl_stmt>



<comment type="line" pos:start="265:1" pos:end="265:46">//                fill_intra4x4_pred_table(h);</comment>

                <for pos:start="267:17" pos:end="299:17">for<control pos:start="267:20" pos:end="267:35">(<init pos:start="267:21" pos:end="267:24"><expr pos:start="267:21" pos:end="267:23"><name pos:start="267:21" pos:end="267:21">i</name><operator pos:start="267:22" pos:end="267:22">=</operator><literal type="number" pos:start="267:23" pos:end="267:23">0</literal></expr>;</init> <condition pos:start="267:26" pos:end="267:30"><expr pos:start="267:26" pos:end="267:29"><name pos:start="267:26" pos:end="267:26">i</name><operator pos:start="267:27" pos:end="267:27">&lt;</operator><literal type="number" pos:start="267:28" pos:end="267:29">16</literal></expr>;</condition> <incr pos:start="267:32" pos:end="267:34"><expr pos:start="267:32" pos:end="267:34"><name pos:start="267:32" pos:end="267:32">i</name><operator pos:start="267:33" pos:end="267:34">++</operator></expr></incr>)</control><block pos:start="267:36" pos:end="299:17">{<block_content pos:start="269:21" pos:end="297:67">

                    <decl_stmt pos:start="269:21" pos:end="269:61"><decl pos:start="269:21" pos:end="269:60"><type pos:start="269:21" pos:end="269:29"><specifier pos:start="269:21" pos:end="269:25">const</specifier> <name pos:start="269:27" pos:end="269:29">int</name></type> <name pos:start="269:31" pos:end="269:40">mode_coded</name><init pos:start="269:41" pos:end="269:60">= <expr pos:start="269:43" pos:end="269:60"><operator pos:start="269:43" pos:end="269:43">!</operator><call pos:start="269:44" pos:end="269:60"><name pos:start="269:44" pos:end="269:52">get_bits1</name><argument_list pos:start="269:53" pos:end="269:60">(<argument pos:start="269:54" pos:end="269:59"><expr pos:start="269:54" pos:end="269:59"><operator pos:start="269:54" pos:end="269:54">&amp;</operator><name pos:start="269:55" pos:end="269:59"><name pos:start="269:55" pos:end="269:55">s</name><operator pos:start="269:56" pos:end="269:57">-&gt;</operator><name pos:start="269:58" pos:end="269:59">gb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="271:21" pos:end="271:69"><decl pos:start="271:21" pos:end="271:68"><type pos:start="271:21" pos:end="271:29"><specifier pos:start="271:21" pos:end="271:25">const</specifier> <name pos:start="271:27" pos:end="271:29">int</name></type> <name pos:start="271:31" pos:end="271:44">predicted_mode</name><init pos:start="271:45" pos:end="271:68">=  <expr pos:start="271:48" pos:end="271:68"><call pos:start="271:48" pos:end="271:68"><name pos:start="271:48" pos:end="271:62">pred_intra_mode</name><argument_list pos:start="271:63" pos:end="271:68">(<argument pos:start="271:64" pos:end="271:64"><expr pos:start="271:64" pos:end="271:64"><name pos:start="271:64" pos:end="271:64">h</name></expr></argument>, <argument pos:start="271:67" pos:end="271:67"><expr pos:start="271:67" pos:end="271:67"><name pos:start="271:67" pos:end="271:67">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="273:21" pos:end="273:29"><decl pos:start="273:21" pos:end="273:28"><type pos:start="273:21" pos:end="273:23"><name pos:start="273:21" pos:end="273:23">int</name></type> <name pos:start="273:25" pos:end="273:28">mode</name></decl>;</decl_stmt>



                    <if_stmt pos:start="277:21" pos:end="293:21"><if pos:start="277:21" pos:end="289:21">if<condition pos:start="277:23" pos:end="277:34">(<expr pos:start="277:24" pos:end="277:33"><name pos:start="277:24" pos:end="277:33">mode_coded</name></expr>)</condition><block pos:start="277:35" pos:end="289:21">{<block_content pos:start="279:25" pos:end="287:47">

                        <decl_stmt pos:start="279:25" pos:end="279:64"><decl pos:start="279:25" pos:end="279:63"><type pos:start="279:25" pos:end="279:33"><specifier pos:start="279:25" pos:end="279:29">const</specifier> <name pos:start="279:31" pos:end="279:33">int</name></type> <name pos:start="279:35" pos:end="279:42">rem_mode</name><init pos:start="279:43" pos:end="279:63">= <expr pos:start="279:45" pos:end="279:63"><call pos:start="279:45" pos:end="279:63"><name pos:start="279:45" pos:end="279:52">get_bits</name><argument_list pos:start="279:53" pos:end="279:63">(<argument pos:start="279:54" pos:end="279:59"><expr pos:start="279:54" pos:end="279:59"><operator pos:start="279:54" pos:end="279:54">&amp;</operator><name pos:start="279:55" pos:end="279:59"><name pos:start="279:55" pos:end="279:55">s</name><operator pos:start="279:56" pos:end="279:57">-&gt;</operator><name pos:start="279:58" pos:end="279:59">gb</name></name></expr></argument>, <argument pos:start="279:62" pos:end="279:62"><expr pos:start="279:62" pos:end="279:62"><literal type="number" pos:start="279:62" pos:end="279:62">3</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                        <if_stmt pos:start="281:25" pos:end="287:47"><if pos:start="281:25" pos:end="283:43">if<condition pos:start="281:27" pos:end="281:51">(<expr pos:start="281:28" pos:end="281:50"><name pos:start="281:28" pos:end="281:35">rem_mode</name><operator pos:start="281:36" pos:end="281:36">&lt;</operator><name pos:start="281:37" pos:end="281:50">predicted_mode</name></expr>)</condition><block type="pseudo" pos:start="283:29" pos:end="283:43"><block_content pos:start="283:29" pos:end="283:43">

                            <expr_stmt pos:start="283:29" pos:end="283:43"><expr pos:start="283:29" pos:end="283:42"><name pos:start="283:29" pos:end="283:32">mode</name><operator pos:start="283:33" pos:end="283:33">=</operator> <name pos:start="283:35" pos:end="283:42">rem_mode</name></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="285:25" pos:end="287:47">else<block type="pseudo" pos:start="287:29" pos:end="287:47"><block_content pos:start="287:29" pos:end="287:47">

                            <expr_stmt pos:start="287:29" pos:end="287:47"><expr pos:start="287:29" pos:end="287:46"><name pos:start="287:29" pos:end="287:32">mode</name><operator pos:start="287:33" pos:end="287:33">=</operator> <name pos:start="287:35" pos:end="287:42">rem_mode</name> <operator pos:start="287:44" pos:end="287:44">+</operator> <literal type="number" pos:start="287:46" pos:end="287:46">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    </block_content>}</block></if><else pos:start="289:22" pos:end="293:21">else<block pos:start="289:26" pos:end="293:21">{<block_content pos:start="291:25" pos:end="291:45">

                        <expr_stmt pos:start="291:25" pos:end="291:45"><expr pos:start="291:25" pos:end="291:44"><name pos:start="291:25" pos:end="291:28">mode</name><operator pos:start="291:29" pos:end="291:29">=</operator> <name pos:start="291:31" pos:end="291:44">predicted_mode</name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    

                    <expr_stmt pos:start="297:21" pos:end="297:67"><expr pos:start="297:21" pos:end="297:66"><name pos:start="297:21" pos:end="297:59"><name pos:start="297:21" pos:end="297:21">h</name><operator pos:start="297:22" pos:end="297:23">-&gt;</operator><name pos:start="297:24" pos:end="297:47">intra4x4_pred_mode_cache</name><index pos:start="297:48" pos:end="297:59">[ <expr pos:start="297:50" pos:end="297:57"><name pos:start="297:50" pos:end="297:57"><name pos:start="297:50" pos:end="297:54">scan8</name><index pos:start="297:55" pos:end="297:57">[<expr pos:start="297:56" pos:end="297:56"><name pos:start="297:56" pos:end="297:56">i</name></expr>]</index></name></expr> ]</index></name> <operator pos:start="297:61" pos:end="297:61">=</operator> <name pos:start="297:63" pos:end="297:66">mode</name></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="301:17" pos:end="301:46"><expr pos:start="301:17" pos:end="301:45"><call pos:start="301:17" pos:end="301:45"><name pos:start="301:17" pos:end="301:42">write_back_intra_pred_mode</name><argument_list pos:start="301:43" pos:end="301:45">(<argument pos:start="301:44" pos:end="301:44"><expr pos:start="301:44" pos:end="301:44"><name pos:start="301:44" pos:end="301:44">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="303:17" pos:end="305:30"><if pos:start="303:17" pos:end="305:30">if<condition pos:start="303:19" pos:end="303:52">( <expr pos:start="303:21" pos:end="303:51"><call pos:start="303:21" pos:end="303:47"><name pos:start="303:21" pos:end="303:44">check_intra4x4_pred_mode</name><argument_list pos:start="303:45" pos:end="303:47">(<argument pos:start="303:46" pos:end="303:46"><expr pos:start="303:46" pos:end="303:46"><name pos:start="303:46" pos:end="303:46">h</name></expr></argument>)</argument_list></call> <operator pos:start="303:49" pos:end="303:49">&lt;</operator> <literal type="number" pos:start="303:51" pos:end="303:51">0</literal></expr>)</condition><block type="pseudo" pos:start="305:21" pos:end="305:30"><block_content pos:start="305:21" pos:end="305:30">

                    <return pos:start="305:21" pos:end="305:30">return <expr pos:start="305:28" pos:end="305:29"><operator pos:start="305:28" pos:end="305:28">-</operator><literal type="number" pos:start="305:29" pos:end="305:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></if><else pos:start="307:14" pos:end="315:13">else<block pos:start="307:18" pos:end="315:13">{<block_content pos:start="309:17" pos:end="313:30">

                <expr_stmt pos:start="309:17" pos:end="309:91"><expr pos:start="309:17" pos:end="309:90"><name pos:start="309:17" pos:end="309:39"><name pos:start="309:17" pos:end="309:17">h</name><operator pos:start="309:18" pos:end="309:19">-&gt;</operator><name pos:start="309:20" pos:end="309:39">intra16x16_pred_mode</name></name><operator pos:start="309:40" pos:end="309:40">=</operator> <call pos:start="309:42" pos:end="309:90"><name pos:start="309:42" pos:end="309:62">check_intra_pred_mode</name><argument_list pos:start="309:63" pos:end="309:90">(<argument pos:start="309:64" pos:end="309:64"><expr pos:start="309:64" pos:end="309:64"><name pos:start="309:64" pos:end="309:64">h</name></expr></argument>, <argument pos:start="309:67" pos:end="309:89"><expr pos:start="309:67" pos:end="309:89"><name pos:start="309:67" pos:end="309:89"><name pos:start="309:67" pos:end="309:67">h</name><operator pos:start="309:68" pos:end="309:69">-&gt;</operator><name pos:start="309:70" pos:end="309:89">intra16x16_pred_mode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="311:17" pos:end="313:30"><if pos:start="311:17" pos:end="313:30">if<condition pos:start="311:19" pos:end="311:47">(<expr pos:start="311:20" pos:end="311:46"><name pos:start="311:20" pos:end="311:42"><name pos:start="311:20" pos:end="311:20">h</name><operator pos:start="311:21" pos:end="311:22">-&gt;</operator><name pos:start="311:23" pos:end="311:42">intra16x16_pred_mode</name></name> <operator pos:start="311:44" pos:end="311:44">&lt;</operator> <literal type="number" pos:start="311:46" pos:end="311:46">0</literal></expr>)</condition><block type="pseudo" pos:start="313:21" pos:end="313:30"><block_content pos:start="313:21" pos:end="313:30">

                    <return pos:start="313:21" pos:end="313:30">return <expr pos:start="313:28" pos:end="313:29"><operator pos:start="313:28" pos:end="313:28">-</operator><literal type="number" pos:start="313:29" pos:end="313:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="317:13" pos:end="317:55"><expr pos:start="317:13" pos:end="317:54"><name pos:start="317:13" pos:end="317:31"><name pos:start="317:13" pos:end="317:13">h</name><operator pos:start="317:14" pos:end="317:15">-&gt;</operator><name pos:start="317:16" pos:end="317:31">chroma_pred_mode</name></name><operator pos:start="317:32" pos:end="317:32">=</operator> <call pos:start="317:34" pos:end="317:54"><name pos:start="317:34" pos:end="317:46">get_ue_golomb</name><argument_list pos:start="317:47" pos:end="317:54">(<argument pos:start="317:48" pos:end="317:53"><expr pos:start="317:48" pos:end="317:53"><operator pos:start="317:48" pos:end="317:48">&amp;</operator><name pos:start="317:49" pos:end="317:53"><name pos:start="317:49" pos:end="317:49">s</name><operator pos:start="317:50" pos:end="317:51">-&gt;</operator><name pos:start="317:52" pos:end="317:53">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="321:13" pos:end="321:79"><expr pos:start="321:13" pos:end="321:78"><name pos:start="321:13" pos:end="321:31"><name pos:start="321:13" pos:end="321:13">h</name><operator pos:start="321:14" pos:end="321:15">-&gt;</operator><name pos:start="321:16" pos:end="321:31">chroma_pred_mode</name></name><operator pos:start="321:32" pos:end="321:32">=</operator> <call pos:start="321:34" pos:end="321:78"><name pos:start="321:34" pos:end="321:54">check_intra_pred_mode</name><argument_list pos:start="321:55" pos:end="321:78">(<argument pos:start="321:56" pos:end="321:56"><expr pos:start="321:56" pos:end="321:56"><name pos:start="321:56" pos:end="321:56">h</name></expr></argument>, <argument pos:start="321:59" pos:end="321:77"><expr pos:start="321:59" pos:end="321:77"><name pos:start="321:59" pos:end="321:77"><name pos:start="321:59" pos:end="321:59">h</name><operator pos:start="321:60" pos:end="321:61">-&gt;</operator><name pos:start="321:62" pos:end="321:77">chroma_pred_mode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="323:13" pos:end="325:26"><if pos:start="323:13" pos:end="325:26">if<condition pos:start="323:15" pos:end="323:39">(<expr pos:start="323:16" pos:end="323:38"><name pos:start="323:16" pos:end="323:34"><name pos:start="323:16" pos:end="323:16">h</name><operator pos:start="323:17" pos:end="323:18">-&gt;</operator><name pos:start="323:19" pos:end="323:34">chroma_pred_mode</name></name> <operator pos:start="323:36" pos:end="323:36">&lt;</operator> <literal type="number" pos:start="323:38" pos:end="323:38">0</literal></expr>)</condition><block type="pseudo" pos:start="325:17" pos:end="325:26"><block_content pos:start="325:17" pos:end="325:26">

                <return pos:start="325:17" pos:end="325:26">return <expr pos:start="325:24" pos:end="325:25"><operator pos:start="325:24" pos:end="325:24">-</operator><literal type="number" pos:start="325:25" pos:end="325:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if><if type="elseif" pos:start="327:6" pos:end="493:5">else if<condition pos:start="327:13" pos:end="327:32">(<expr pos:start="327:14" pos:end="327:31"><name pos:start="327:14" pos:end="327:28">partition_count</name><operator pos:start="327:29" pos:end="327:30">==</operator><literal type="number" pos:start="327:31" pos:end="327:31">4</literal></expr>)</condition><block pos:start="327:33" pos:end="493:5">{<block_content pos:start="329:9" pos:end="491:9">

        <decl_stmt pos:start="329:9" pos:end="329:58"><decl pos:start="329:9" pos:end="329:13"><type pos:start="329:9" pos:end="329:11"><name pos:start="329:9" pos:end="329:11">int</name></type> <name pos:start="329:13" pos:end="329:13">i</name></decl>, <decl pos:start="329:16" pos:end="329:16"><type ref="prev" pos:start="329:9" pos:end="329:11"/><name pos:start="329:16" pos:end="329:16">j</name></decl>, <decl pos:start="329:19" pos:end="329:40"><type ref="prev" pos:start="329:9" pos:end="329:11"/><name pos:start="329:19" pos:end="329:40"><name pos:start="329:19" pos:end="329:37">sub_partition_count</name><index pos:start="329:38" pos:end="329:40">[<expr pos:start="329:39" pos:end="329:39"><literal type="number" pos:start="329:39" pos:end="329:39">4</literal></expr>]</index></name></decl>, <decl pos:start="329:43" pos:end="329:46"><type ref="prev" pos:start="329:9" pos:end="329:11"/><name pos:start="329:43" pos:end="329:46">list</name></decl>, <decl pos:start="329:49" pos:end="329:57"><type ref="prev" pos:start="329:9" pos:end="329:11"/><name pos:start="329:49" pos:end="329:57"><name pos:start="329:49" pos:end="329:51">ref</name><index pos:start="329:52" pos:end="329:54">[<expr pos:start="329:53" pos:end="329:53"><literal type="number" pos:start="329:53" pos:end="329:53">2</literal></expr>]</index><index pos:start="329:55" pos:end="329:57">[<expr pos:start="329:56" pos:end="329:56"><literal type="number" pos:start="329:56" pos:end="329:56">4</literal></expr>]</index></name></decl>;</decl_stmt>

        

        <if_stmt pos:start="333:9" pos:end="375:9"><if pos:start="333:9" pos:end="353:9">if<condition pos:start="333:11" pos:end="333:35">(<expr pos:start="333:12" pos:end="333:34"><name pos:start="333:12" pos:end="333:24"><name pos:start="333:12" pos:end="333:12">h</name><operator pos:start="333:13" pos:end="333:14">-&gt;</operator><name pos:start="333:15" pos:end="333:24">slice_type</name></name> <operator pos:start="333:26" pos:end="333:27">==</operator> <name pos:start="333:29" pos:end="333:34">B_TYPE</name></expr>)</condition><block pos:start="333:36" pos:end="353:9">{<block_content pos:start="335:13" pos:end="351:13">

            <for pos:start="335:13" pos:end="351:13">for<control pos:start="335:16" pos:end="335:30">(<init pos:start="335:17" pos:end="335:20"><expr pos:start="335:17" pos:end="335:19"><name pos:start="335:17" pos:end="335:17">i</name><operator pos:start="335:18" pos:end="335:18">=</operator><literal type="number" pos:start="335:19" pos:end="335:19">0</literal></expr>;</init> <condition pos:start="335:22" pos:end="335:25"><expr pos:start="335:22" pos:end="335:24"><name pos:start="335:22" pos:end="335:22">i</name><operator pos:start="335:23" pos:end="335:23">&lt;</operator><literal type="number" pos:start="335:24" pos:end="335:24">4</literal></expr>;</condition> <incr pos:start="335:27" pos:end="335:29"><expr pos:start="335:27" pos:end="335:29"><name pos:start="335:27" pos:end="335:27">i</name><operator pos:start="335:28" pos:end="335:29">++</operator></expr></incr>)</control><block pos:start="335:31" pos:end="351:13">{<block_content pos:start="337:17" pos:end="349:85">

                <expr_stmt pos:start="337:17" pos:end="337:57"><expr pos:start="337:17" pos:end="337:56"><name pos:start="337:17" pos:end="337:33"><name pos:start="337:17" pos:end="337:17">h</name><operator pos:start="337:18" pos:end="337:19">-&gt;</operator><name pos:start="337:20" pos:end="337:30">sub_mb_type</name><index pos:start="337:31" pos:end="337:33">[<expr pos:start="337:32" pos:end="337:32"><name pos:start="337:32" pos:end="337:32">i</name></expr>]</index></name><operator pos:start="337:34" pos:end="337:34">=</operator> <call pos:start="337:36" pos:end="337:56"><name pos:start="337:36" pos:end="337:48">get_ue_golomb</name><argument_list pos:start="337:49" pos:end="337:56">(<argument pos:start="337:50" pos:end="337:55"><expr pos:start="337:50" pos:end="337:55"><operator pos:start="337:50" pos:end="337:50">&amp;</operator><name pos:start="337:51" pos:end="337:55"><name pos:start="337:51" pos:end="337:51">s</name><operator pos:start="337:52" pos:end="337:53">-&gt;</operator><name pos:start="337:54" pos:end="337:55">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="339:17" pos:end="345:17"><if pos:start="339:17" pos:end="345:17">if<condition pos:start="339:19" pos:end="339:42">(<expr pos:start="339:20" pos:end="339:41"><name pos:start="339:20" pos:end="339:36"><name pos:start="339:20" pos:end="339:20">h</name><operator pos:start="339:21" pos:end="339:22">-&gt;</operator><name pos:start="339:23" pos:end="339:33">sub_mb_type</name><index pos:start="339:34" pos:end="339:36">[<expr pos:start="339:35" pos:end="339:35"><name pos:start="339:35" pos:end="339:35">i</name></expr>]</index></name> <operator pos:start="339:38" pos:end="339:39">&gt;=</operator><literal type="number" pos:start="339:40" pos:end="339:41">13</literal></expr>)</condition><block pos:start="339:43" pos:end="345:17">{<block_content pos:start="341:21" pos:end="343:30">

                    <expr_stmt pos:start="341:21" pos:end="341:134"><expr pos:start="341:21" pos:end="341:133"><call pos:start="341:21" pos:end="341:133"><name pos:start="341:21" pos:end="341:26">av_log</name><argument_list pos:start="341:27" pos:end="341:133">(<argument pos:start="341:28" pos:end="341:37"><expr pos:start="341:28" pos:end="341:37"><name pos:start="341:28" pos:end="341:37"><name pos:start="341:28" pos:end="341:28">h</name><operator pos:start="341:29" pos:end="341:30">-&gt;</operator><name pos:start="341:31" pos:end="341:31">s</name><operator pos:start="341:32" pos:end="341:32">.</operator><name pos:start="341:33" pos:end="341:37">avctx</name></name></expr></argument>, <argument pos:start="341:40" pos:end="341:51"><expr pos:start="341:40" pos:end="341:51"><name pos:start="341:40" pos:end="341:51">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="341:54" pos:end="341:95"><expr pos:start="341:54" pos:end="341:95"><literal type="string" pos:start="341:54" pos:end="341:95">"B sub_mb_type %d out of range at %d %d\n"</literal></expr></argument>, <argument pos:start="341:98" pos:end="341:114"><expr pos:start="341:98" pos:end="341:114"><name pos:start="341:98" pos:end="341:114"><name pos:start="341:98" pos:end="341:98">h</name><operator pos:start="341:99" pos:end="341:100">-&gt;</operator><name pos:start="341:101" pos:end="341:111">sub_mb_type</name><index pos:start="341:112" pos:end="341:114">[<expr pos:start="341:113" pos:end="341:113"><name pos:start="341:113" pos:end="341:113">i</name></expr>]</index></name></expr></argument>, <argument pos:start="341:117" pos:end="341:123"><expr pos:start="341:117" pos:end="341:123"><name pos:start="341:117" pos:end="341:123"><name pos:start="341:117" pos:end="341:117">s</name><operator pos:start="341:118" pos:end="341:119">-&gt;</operator><name pos:start="341:120" pos:end="341:123">mb_x</name></name></expr></argument>, <argument pos:start="341:126" pos:end="341:132"><expr pos:start="341:126" pos:end="341:132"><name pos:start="341:126" pos:end="341:132"><name pos:start="341:126" pos:end="341:126">s</name><operator pos:start="341:127" pos:end="341:128">-&gt;</operator><name pos:start="341:129" pos:end="341:132">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="343:21" pos:end="343:30">return <expr pos:start="343:28" pos:end="343:29"><operator pos:start="343:28" pos:end="343:28">-</operator><literal type="number" pos:start="343:29" pos:end="343:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="347:17" pos:end="347:96"><expr pos:start="347:17" pos:end="347:95"><name pos:start="347:17" pos:end="347:38"><name pos:start="347:17" pos:end="347:35">sub_partition_count</name><index pos:start="347:36" pos:end="347:38">[<expr pos:start="347:37" pos:end="347:37"><name pos:start="347:37" pos:end="347:37">i</name></expr>]</index></name><operator pos:start="347:39" pos:end="347:39">=</operator> <name pos:start="347:41" pos:end="347:79"><name pos:start="347:41" pos:end="347:58">b_sub_mb_type_info</name><index pos:start="347:59" pos:end="347:79">[ <expr pos:start="347:61" pos:end="347:77"><name pos:start="347:61" pos:end="347:77"><name pos:start="347:61" pos:end="347:61">h</name><operator pos:start="347:62" pos:end="347:63">-&gt;</operator><name pos:start="347:64" pos:end="347:74">sub_mb_type</name><index pos:start="347:75" pos:end="347:77">[<expr pos:start="347:76" pos:end="347:76"><name pos:start="347:76" pos:end="347:76">i</name></expr>]</index></name></expr> ]</index></name><operator pos:start="347:80" pos:end="347:80">.</operator><name pos:start="347:81" pos:end="347:95">partition_count</name></expr>;</expr_stmt>

                <expr_stmt pos:start="349:17" pos:end="349:85"><expr pos:start="349:17" pos:end="349:84"><name pos:start="349:17" pos:end="349:33"><name pos:start="349:17" pos:end="349:17">h</name><operator pos:start="349:18" pos:end="349:19">-&gt;</operator><name pos:start="349:20" pos:end="349:30">sub_mb_type</name><index pos:start="349:31" pos:end="349:33">[<expr pos:start="349:32" pos:end="349:32"><name pos:start="349:32" pos:end="349:32">i</name></expr>]</index></name><operator pos:start="349:34" pos:end="349:34">=</operator>      <name pos:start="349:41" pos:end="349:79"><name pos:start="349:41" pos:end="349:58">b_sub_mb_type_info</name><index pos:start="349:59" pos:end="349:79">[ <expr pos:start="349:61" pos:end="349:77"><name pos:start="349:61" pos:end="349:77"><name pos:start="349:61" pos:end="349:61">h</name><operator pos:start="349:62" pos:end="349:63">-&gt;</operator><name pos:start="349:64" pos:end="349:74">sub_mb_type</name><index pos:start="349:75" pos:end="349:77">[<expr pos:start="349:76" pos:end="349:76"><name pos:start="349:76" pos:end="349:76">i</name></expr>]</index></name></expr> ]</index></name><operator pos:start="349:80" pos:end="349:80">.</operator><name pos:start="349:81" pos:end="349:84">type</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if><else pos:start="353:10" pos:end="375:9">else<block pos:start="353:14" pos:end="375:9">{<block_content pos:start="355:13" pos:end="373:13">

            <expr_stmt pos:start="355:13" pos:end="355:72"><expr pos:start="355:13" pos:end="355:71"><call pos:start="355:13" pos:end="355:71"><name pos:start="355:13" pos:end="355:18">assert</name><argument_list pos:start="355:19" pos:end="355:71">(<argument pos:start="355:20" pos:end="355:70"><expr pos:start="355:20" pos:end="355:70"><name pos:start="355:20" pos:end="355:32"><name pos:start="355:20" pos:end="355:20">h</name><operator pos:start="355:21" pos:end="355:22">-&gt;</operator><name pos:start="355:23" pos:end="355:32">slice_type</name></name> <operator pos:start="355:34" pos:end="355:35">==</operator> <name pos:start="355:37" pos:end="355:42">P_TYPE</name> <operator pos:start="355:44" pos:end="355:45">||</operator> <name pos:start="355:47" pos:end="355:59"><name pos:start="355:47" pos:end="355:47">h</name><operator pos:start="355:48" pos:end="355:49">-&gt;</operator><name pos:start="355:50" pos:end="355:59">slice_type</name></name> <operator pos:start="355:61" pos:end="355:62">==</operator> <name pos:start="355:64" pos:end="355:70">SP_TYPE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="355:74" pos:end="355:93">//FIXME SP correct ?</comment>

            <for pos:start="357:13" pos:end="373:13">for<control pos:start="357:16" pos:end="357:30">(<init pos:start="357:17" pos:end="357:20"><expr pos:start="357:17" pos:end="357:19"><name pos:start="357:17" pos:end="357:17">i</name><operator pos:start="357:18" pos:end="357:18">=</operator><literal type="number" pos:start="357:19" pos:end="357:19">0</literal></expr>;</init> <condition pos:start="357:22" pos:end="357:25"><expr pos:start="357:22" pos:end="357:24"><name pos:start="357:22" pos:end="357:22">i</name><operator pos:start="357:23" pos:end="357:23">&lt;</operator><literal type="number" pos:start="357:24" pos:end="357:24">4</literal></expr>;</condition> <incr pos:start="357:27" pos:end="357:29"><expr pos:start="357:27" pos:end="357:29"><name pos:start="357:27" pos:end="357:27">i</name><operator pos:start="357:28" pos:end="357:29">++</operator></expr></incr>)</control><block pos:start="357:31" pos:end="373:13">{<block_content pos:start="359:17" pos:end="371:85">

                <expr_stmt pos:start="359:17" pos:end="359:57"><expr pos:start="359:17" pos:end="359:56"><name pos:start="359:17" pos:end="359:33"><name pos:start="359:17" pos:end="359:17">h</name><operator pos:start="359:18" pos:end="359:19">-&gt;</operator><name pos:start="359:20" pos:end="359:30">sub_mb_type</name><index pos:start="359:31" pos:end="359:33">[<expr pos:start="359:32" pos:end="359:32"><name pos:start="359:32" pos:end="359:32">i</name></expr>]</index></name><operator pos:start="359:34" pos:end="359:34">=</operator> <call pos:start="359:36" pos:end="359:56"><name pos:start="359:36" pos:end="359:48">get_ue_golomb</name><argument_list pos:start="359:49" pos:end="359:56">(<argument pos:start="359:50" pos:end="359:55"><expr pos:start="359:50" pos:end="359:55"><operator pos:start="359:50" pos:end="359:50">&amp;</operator><name pos:start="359:51" pos:end="359:55"><name pos:start="359:51" pos:end="359:51">s</name><operator pos:start="359:52" pos:end="359:53">-&gt;</operator><name pos:start="359:54" pos:end="359:55">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="361:17" pos:end="367:17"><if pos:start="361:17" pos:end="367:17">if<condition pos:start="361:19" pos:end="361:41">(<expr pos:start="361:20" pos:end="361:40"><name pos:start="361:20" pos:end="361:36"><name pos:start="361:20" pos:end="361:20">h</name><operator pos:start="361:21" pos:end="361:22">-&gt;</operator><name pos:start="361:23" pos:end="361:33">sub_mb_type</name><index pos:start="361:34" pos:end="361:36">[<expr pos:start="361:35" pos:end="361:35"><name pos:start="361:35" pos:end="361:35">i</name></expr>]</index></name> <operator pos:start="361:38" pos:end="361:39">&gt;=</operator><literal type="number" pos:start="361:40" pos:end="361:40">4</literal></expr>)</condition><block pos:start="361:42" pos:end="367:17">{<block_content pos:start="363:21" pos:end="365:30">

                    <expr_stmt pos:start="363:21" pos:end="363:134"><expr pos:start="363:21" pos:end="363:133"><call pos:start="363:21" pos:end="363:133"><name pos:start="363:21" pos:end="363:26">av_log</name><argument_list pos:start="363:27" pos:end="363:133">(<argument pos:start="363:28" pos:end="363:37"><expr pos:start="363:28" pos:end="363:37"><name pos:start="363:28" pos:end="363:37"><name pos:start="363:28" pos:end="363:28">h</name><operator pos:start="363:29" pos:end="363:30">-&gt;</operator><name pos:start="363:31" pos:end="363:31">s</name><operator pos:start="363:32" pos:end="363:32">.</operator><name pos:start="363:33" pos:end="363:37">avctx</name></name></expr></argument>, <argument pos:start="363:40" pos:end="363:51"><expr pos:start="363:40" pos:end="363:51"><name pos:start="363:40" pos:end="363:51">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="363:54" pos:end="363:95"><expr pos:start="363:54" pos:end="363:95"><literal type="string" pos:start="363:54" pos:end="363:95">"P sub_mb_type %d out of range at %d %d\n"</literal></expr></argument>, <argument pos:start="363:98" pos:end="363:114"><expr pos:start="363:98" pos:end="363:114"><name pos:start="363:98" pos:end="363:114"><name pos:start="363:98" pos:end="363:98">h</name><operator pos:start="363:99" pos:end="363:100">-&gt;</operator><name pos:start="363:101" pos:end="363:111">sub_mb_type</name><index pos:start="363:112" pos:end="363:114">[<expr pos:start="363:113" pos:end="363:113"><name pos:start="363:113" pos:end="363:113">i</name></expr>]</index></name></expr></argument>, <argument pos:start="363:117" pos:end="363:123"><expr pos:start="363:117" pos:end="363:123"><name pos:start="363:117" pos:end="363:123"><name pos:start="363:117" pos:end="363:117">s</name><operator pos:start="363:118" pos:end="363:119">-&gt;</operator><name pos:start="363:120" pos:end="363:123">mb_x</name></name></expr></argument>, <argument pos:start="363:126" pos:end="363:132"><expr pos:start="363:126" pos:end="363:132"><name pos:start="363:126" pos:end="363:132"><name pos:start="363:126" pos:end="363:126">s</name><operator pos:start="363:127" pos:end="363:128">-&gt;</operator><name pos:start="363:129" pos:end="363:132">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="365:21" pos:end="365:30">return <expr pos:start="365:28" pos:end="365:29"><operator pos:start="365:28" pos:end="365:28">-</operator><literal type="number" pos:start="365:29" pos:end="365:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="369:17" pos:end="369:96"><expr pos:start="369:17" pos:end="369:95"><name pos:start="369:17" pos:end="369:38"><name pos:start="369:17" pos:end="369:35">sub_partition_count</name><index pos:start="369:36" pos:end="369:38">[<expr pos:start="369:37" pos:end="369:37"><name pos:start="369:37" pos:end="369:37">i</name></expr>]</index></name><operator pos:start="369:39" pos:end="369:39">=</operator> <name pos:start="369:41" pos:end="369:79"><name pos:start="369:41" pos:end="369:58">p_sub_mb_type_info</name><index pos:start="369:59" pos:end="369:79">[ <expr pos:start="369:61" pos:end="369:77"><name pos:start="369:61" pos:end="369:77"><name pos:start="369:61" pos:end="369:61">h</name><operator pos:start="369:62" pos:end="369:63">-&gt;</operator><name pos:start="369:64" pos:end="369:74">sub_mb_type</name><index pos:start="369:75" pos:end="369:77">[<expr pos:start="369:76" pos:end="369:76"><name pos:start="369:76" pos:end="369:76">i</name></expr>]</index></name></expr> ]</index></name><operator pos:start="369:80" pos:end="369:80">.</operator><name pos:start="369:81" pos:end="369:95">partition_count</name></expr>;</expr_stmt>

                <expr_stmt pos:start="371:17" pos:end="371:85"><expr pos:start="371:17" pos:end="371:84"><name pos:start="371:17" pos:end="371:33"><name pos:start="371:17" pos:end="371:17">h</name><operator pos:start="371:18" pos:end="371:19">-&gt;</operator><name pos:start="371:20" pos:end="371:30">sub_mb_type</name><index pos:start="371:31" pos:end="371:33">[<expr pos:start="371:32" pos:end="371:32"><name pos:start="371:32" pos:end="371:32">i</name></expr>]</index></name><operator pos:start="371:34" pos:end="371:34">=</operator>      <name pos:start="371:41" pos:end="371:79"><name pos:start="371:41" pos:end="371:58">p_sub_mb_type_info</name><index pos:start="371:59" pos:end="371:79">[ <expr pos:start="371:61" pos:end="371:77"><name pos:start="371:61" pos:end="371:77"><name pos:start="371:61" pos:end="371:61">h</name><operator pos:start="371:62" pos:end="371:63">-&gt;</operator><name pos:start="371:64" pos:end="371:74">sub_mb_type</name><index pos:start="371:75" pos:end="371:77">[<expr pos:start="371:76" pos:end="371:76"><name pos:start="371:76" pos:end="371:76">i</name></expr>]</index></name></expr> ]</index></name><operator pos:start="371:80" pos:end="371:80">.</operator><name pos:start="371:81" pos:end="371:84">type</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

        

        <for pos:start="379:9" pos:end="401:9">for<control pos:start="379:12" pos:end="379:35">(<init pos:start="379:13" pos:end="379:19"><expr pos:start="379:13" pos:end="379:18"><name pos:start="379:13" pos:end="379:16">list</name><operator pos:start="379:17" pos:end="379:17">=</operator><literal type="number" pos:start="379:18" pos:end="379:18">0</literal></expr>;</init> <condition pos:start="379:21" pos:end="379:27"><expr pos:start="379:21" pos:end="379:26"><name pos:start="379:21" pos:end="379:24">list</name><operator pos:start="379:25" pos:end="379:25">&lt;</operator><literal type="number" pos:start="379:26" pos:end="379:26">2</literal></expr>;</condition> <incr pos:start="379:29" pos:end="379:34"><expr pos:start="379:29" pos:end="379:34"><name pos:start="379:29" pos:end="379:32">list</name><operator pos:start="379:33" pos:end="379:34">++</operator></expr></incr>)</control><block pos:start="379:36" pos:end="401:9">{<block_content pos:start="381:13" pos:end="399:13">

            <decl_stmt pos:start="381:13" pos:end="381:75"><decl pos:start="381:13" pos:end="381:74"><type pos:start="381:13" pos:end="381:21"><specifier pos:start="381:13" pos:end="381:17">const</specifier> <name pos:start="381:19" pos:end="381:21">int</name></type> <name pos:start="381:23" pos:end="381:31">ref_count</name><init pos:start="381:32" pos:end="381:74">= <expr pos:start="381:34" pos:end="381:74"><ternary pos:start="381:34" pos:end="381:74"><condition pos:start="381:34" pos:end="381:51"><expr pos:start="381:34" pos:end="381:49"><call pos:start="381:34" pos:end="381:49"><name pos:start="381:34" pos:end="381:40">IS_REF0</name><argument_list pos:start="381:41" pos:end="381:49">(<argument pos:start="381:42" pos:end="381:48"><expr pos:start="381:42" pos:end="381:48"><name pos:start="381:42" pos:end="381:48">mb_type</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="381:53" pos:end="381:53"> <expr pos:start="381:53" pos:end="381:53"><literal type="number" pos:start="381:53" pos:end="381:53">1</literal></expr> </then><else pos:start="381:55" pos:end="381:74">: <expr pos:start="381:57" pos:end="381:74"><name pos:start="381:57" pos:end="381:74"><name pos:start="381:57" pos:end="381:57">h</name><operator pos:start="381:58" pos:end="381:59">-&gt;</operator><name pos:start="381:60" pos:end="381:68">ref_count</name><index pos:start="381:69" pos:end="381:74">[<expr pos:start="381:70" pos:end="381:73"><name pos:start="381:70" pos:end="381:73">list</name></expr>]</index></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="383:13" pos:end="383:40"><if pos:start="383:13" pos:end="383:40">if<condition pos:start="383:15" pos:end="383:30">(<expr pos:start="383:16" pos:end="383:29"><name pos:start="383:16" pos:end="383:24">ref_count</name> <operator pos:start="383:26" pos:end="383:27">==</operator> <literal type="number" pos:start="383:29" pos:end="383:29">0</literal></expr>)</condition><block type="pseudo" pos:start="383:32" pos:end="383:40"><block_content pos:start="383:32" pos:end="383:40"> <continue pos:start="383:32" pos:end="383:40">continue;</continue></block_content></block></if></if_stmt>

            <for pos:start="385:13" pos:end="399:13">for<control pos:start="385:16" pos:end="385:30">(<init pos:start="385:17" pos:end="385:20"><expr pos:start="385:17" pos:end="385:19"><name pos:start="385:17" pos:end="385:17">i</name><operator pos:start="385:18" pos:end="385:18">=</operator><literal type="number" pos:start="385:19" pos:end="385:19">0</literal></expr>;</init> <condition pos:start="385:22" pos:end="385:25"><expr pos:start="385:22" pos:end="385:24"><name pos:start="385:22" pos:end="385:22">i</name><operator pos:start="385:23" pos:end="385:23">&lt;</operator><literal type="number" pos:start="385:24" pos:end="385:24">4</literal></expr>;</condition> <incr pos:start="385:27" pos:end="385:29"><expr pos:start="385:27" pos:end="385:29"><name pos:start="385:27" pos:end="385:27">i</name><operator pos:start="385:28" pos:end="385:29">++</operator></expr></incr>)</control><block pos:start="385:31" pos:end="399:13">{<block_content pos:start="387:17" pos:end="397:17">

                <if_stmt pos:start="387:17" pos:end="397:17"><if pos:start="387:17" pos:end="391:17">if<condition pos:start="387:19" pos:end="387:87">(<expr pos:start="387:20" pos:end="387:86"><call pos:start="387:20" pos:end="387:53"><name pos:start="387:20" pos:end="387:25">IS_DIR</name><argument_list pos:start="387:26" pos:end="387:53">(<argument pos:start="387:27" pos:end="387:43"><expr pos:start="387:27" pos:end="387:43"><name pos:start="387:27" pos:end="387:43"><name pos:start="387:27" pos:end="387:27">h</name><operator pos:start="387:28" pos:end="387:29">-&gt;</operator><name pos:start="387:30" pos:end="387:40">sub_mb_type</name><index pos:start="387:41" pos:end="387:43">[<expr pos:start="387:42" pos:end="387:42"><name pos:start="387:42" pos:end="387:42">i</name></expr>]</index></name></expr></argument>, <argument pos:start="387:46" pos:end="387:46"><expr pos:start="387:46" pos:end="387:46"><literal type="number" pos:start="387:46" pos:end="387:46">0</literal></expr></argument>, <argument pos:start="387:49" pos:end="387:52"><expr pos:start="387:49" pos:end="387:52"><name pos:start="387:49" pos:end="387:52">list</name></expr></argument>)</argument_list></call> <operator pos:start="387:55" pos:end="387:56">&amp;&amp;</operator> <operator pos:start="387:58" pos:end="387:58">!</operator><call pos:start="387:59" pos:end="387:86"><name pos:start="387:59" pos:end="387:67">IS_DIRECT</name><argument_list pos:start="387:68" pos:end="387:86">(<argument pos:start="387:69" pos:end="387:85"><expr pos:start="387:69" pos:end="387:85"><name pos:start="387:69" pos:end="387:85"><name pos:start="387:69" pos:end="387:69">h</name><operator pos:start="387:70" pos:end="387:71">-&gt;</operator><name pos:start="387:72" pos:end="387:82">sub_mb_type</name><index pos:start="387:83" pos:end="387:85">[<expr pos:start="387:84" pos:end="387:84"><name pos:start="387:84" pos:end="387:84">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="387:88" pos:end="391:17">{<block_content pos:start="389:21" pos:end="389:69">

                    <expr_stmt pos:start="389:21" pos:end="389:69"><expr pos:start="389:21" pos:end="389:68"><name pos:start="389:21" pos:end="389:32"><name pos:start="389:21" pos:end="389:23">ref</name><index pos:start="389:24" pos:end="389:29">[<expr pos:start="389:25" pos:end="389:28"><name pos:start="389:25" pos:end="389:28">list</name></expr>]</index><index pos:start="389:30" pos:end="389:32">[<expr pos:start="389:31" pos:end="389:31"><name pos:start="389:31" pos:end="389:31">i</name></expr>]</index></name> <operator pos:start="389:34" pos:end="389:34">=</operator> <call pos:start="389:36" pos:end="389:68"><name pos:start="389:36" pos:end="389:49">get_te0_golomb</name><argument_list pos:start="389:50" pos:end="389:68">(<argument pos:start="389:51" pos:end="389:56"><expr pos:start="389:51" pos:end="389:56"><operator pos:start="389:51" pos:end="389:51">&amp;</operator><name pos:start="389:52" pos:end="389:56"><name pos:start="389:52" pos:end="389:52">s</name><operator pos:start="389:53" pos:end="389:54">-&gt;</operator><name pos:start="389:55" pos:end="389:56">gb</name></name></expr></argument>, <argument pos:start="389:59" pos:end="389:67"><expr pos:start="389:59" pos:end="389:67"><name pos:start="389:59" pos:end="389:67">ref_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="389:71" pos:end="389:104">//FIXME init to 0 before and skip?</comment>

                </block_content>}</block></if><else pos:start="391:18" pos:end="397:17">else<block pos:start="391:22" pos:end="397:17">{<block_content pos:start="395:21" pos:end="395:38">

                 <comment type="line" pos:start="393:18" pos:end="393:24">//FIXME</comment>

                    <expr_stmt pos:start="395:21" pos:end="395:38"><expr pos:start="395:21" pos:end="395:37"><name pos:start="395:21" pos:end="395:32"><name pos:start="395:21" pos:end="395:23">ref</name><index pos:start="395:24" pos:end="395:29">[<expr pos:start="395:25" pos:end="395:28"><name pos:start="395:25" pos:end="395:28">list</name></expr>]</index><index pos:start="395:30" pos:end="395:32">[<expr pos:start="395:31" pos:end="395:31"><name pos:start="395:31" pos:end="395:31">i</name></expr>]</index></name> <operator pos:start="395:34" pos:end="395:34">=</operator> <operator pos:start="395:36" pos:end="395:36">-</operator><literal type="number" pos:start="395:37" pos:end="395:37">1</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

        

        <for pos:start="405:9" pos:end="491:9">for<control pos:start="405:12" pos:end="405:35">(<init pos:start="405:13" pos:end="405:19"><expr pos:start="405:13" pos:end="405:18"><name pos:start="405:13" pos:end="405:16">list</name><operator pos:start="405:17" pos:end="405:17">=</operator><literal type="number" pos:start="405:18" pos:end="405:18">0</literal></expr>;</init> <condition pos:start="405:21" pos:end="405:27"><expr pos:start="405:21" pos:end="405:26"><name pos:start="405:21" pos:end="405:24">list</name><operator pos:start="405:25" pos:end="405:25">&lt;</operator><literal type="number" pos:start="405:26" pos:end="405:26">2</literal></expr>;</condition> <incr pos:start="405:29" pos:end="405:34"><expr pos:start="405:29" pos:end="405:34"><name pos:start="405:29" pos:end="405:32">list</name><operator pos:start="405:33" pos:end="405:34">++</operator></expr></incr>)</control><block pos:start="405:36" pos:end="491:9">{<block_content pos:start="407:13" pos:end="489:13">

            <decl_stmt pos:start="407:13" pos:end="407:75"><decl pos:start="407:13" pos:end="407:74"><type pos:start="407:13" pos:end="407:21"><specifier pos:start="407:13" pos:end="407:17">const</specifier> <name pos:start="407:19" pos:end="407:21">int</name></type> <name pos:start="407:23" pos:end="407:31">ref_count</name><init pos:start="407:32" pos:end="407:74">= <expr pos:start="407:34" pos:end="407:74"><ternary pos:start="407:34" pos:end="407:74"><condition pos:start="407:34" pos:end="407:51"><expr pos:start="407:34" pos:end="407:49"><call pos:start="407:34" pos:end="407:49"><name pos:start="407:34" pos:end="407:40">IS_REF0</name><argument_list pos:start="407:41" pos:end="407:49">(<argument pos:start="407:42" pos:end="407:48"><expr pos:start="407:42" pos:end="407:48"><name pos:start="407:42" pos:end="407:48">mb_type</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="407:53" pos:end="407:53"> <expr pos:start="407:53" pos:end="407:53"><literal type="number" pos:start="407:53" pos:end="407:53">1</literal></expr> </then><else pos:start="407:55" pos:end="407:74">: <expr pos:start="407:57" pos:end="407:74"><name pos:start="407:57" pos:end="407:74"><name pos:start="407:57" pos:end="407:57">h</name><operator pos:start="407:58" pos:end="407:59">-&gt;</operator><name pos:start="407:60" pos:end="407:68">ref_count</name><index pos:start="407:69" pos:end="407:74">[<expr pos:start="407:70" pos:end="407:73"><name pos:start="407:70" pos:end="407:73">list</name></expr>]</index></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="409:13" pos:end="409:40"><if pos:start="409:13" pos:end="409:40">if<condition pos:start="409:15" pos:end="409:30">(<expr pos:start="409:16" pos:end="409:29"><name pos:start="409:16" pos:end="409:24">ref_count</name> <operator pos:start="409:26" pos:end="409:27">==</operator> <literal type="number" pos:start="409:29" pos:end="409:29">0</literal></expr>)</condition><block type="pseudo" pos:start="409:32" pos:end="409:40"><block_content pos:start="409:32" pos:end="409:40"> <continue pos:start="409:32" pos:end="409:40">continue;</continue></block_content></block></if></if_stmt>



            <for pos:start="413:13" pos:end="489:13">for<control pos:start="413:16" pos:end="413:30">(<init pos:start="413:17" pos:end="413:20"><expr pos:start="413:17" pos:end="413:19"><name pos:start="413:17" pos:end="413:17">i</name><operator pos:start="413:18" pos:end="413:18">=</operator><literal type="number" pos:start="413:19" pos:end="413:19">0</literal></expr>;</init> <condition pos:start="413:22" pos:end="413:25"><expr pos:start="413:22" pos:end="413:24"><name pos:start="413:22" pos:end="413:22">i</name><operator pos:start="413:23" pos:end="413:23">&lt;</operator><literal type="number" pos:start="413:24" pos:end="413:24">4</literal></expr>;</condition> <incr pos:start="413:27" pos:end="413:29"><expr pos:start="413:27" pos:end="413:29"><name pos:start="413:27" pos:end="413:27">i</name><operator pos:start="413:28" pos:end="413:29">++</operator></expr></incr>)</control><block pos:start="413:31" pos:end="489:13">{<block_content pos:start="415:17" pos:end="487:17">

                <expr_stmt pos:start="415:17" pos:end="417:100"><expr pos:start="415:17" pos:end="417:99"><name pos:start="415:17" pos:end="415:50"><name pos:start="415:17" pos:end="415:17">h</name><operator pos:start="415:18" pos:end="415:19">-&gt;</operator><name pos:start="415:20" pos:end="415:28">ref_cache</name><index pos:start="415:29" pos:end="415:34">[<expr pos:start="415:30" pos:end="415:33"><name pos:start="415:30" pos:end="415:33">list</name></expr>]</index><index pos:start="415:35" pos:end="415:50">[ <expr pos:start="415:37" pos:end="415:46"><name pos:start="415:37" pos:end="415:46"><name pos:start="415:37" pos:end="415:41">scan8</name><index pos:start="415:42" pos:end="415:46">[<expr pos:start="415:43" pos:end="415:45"><literal type="number" pos:start="415:43" pos:end="415:43">4</literal><operator pos:start="415:44" pos:end="415:44">*</operator><name pos:start="415:45" pos:end="415:45">i</name></expr>]</index></name></expr>   ]</index></name><operator pos:start="415:51" pos:end="415:51">=</operator><name pos:start="415:52" pos:end="415:85"><name pos:start="415:52" pos:end="415:52">h</name><operator pos:start="415:53" pos:end="415:54">-&gt;</operator><name pos:start="415:55" pos:end="415:63">ref_cache</name><index pos:start="415:64" pos:end="415:69">[<expr pos:start="415:65" pos:end="415:68"><name pos:start="415:65" pos:end="415:68">list</name></expr>]</index><index pos:start="415:70" pos:end="415:85">[ <expr pos:start="415:72" pos:end="415:83"><name pos:start="415:72" pos:end="415:81"><name pos:start="415:72" pos:end="415:76">scan8</name><index pos:start="415:77" pos:end="415:81">[<expr pos:start="415:78" pos:end="415:80"><literal type="number" pos:start="415:78" pos:end="415:78">4</literal><operator pos:start="415:79" pos:end="415:79">*</operator><name pos:start="415:80" pos:end="415:80">i</name></expr>]</index></name><operator pos:start="415:82" pos:end="415:82">+</operator><literal type="number" pos:start="415:83" pos:end="415:83">1</literal></expr> ]</index></name><operator pos:start="415:86" pos:end="415:86">=</operator>

                <name pos:start="417:17" pos:end="417:50"><name pos:start="417:17" pos:end="417:17">h</name><operator pos:start="417:18" pos:end="417:19">-&gt;</operator><name pos:start="417:20" pos:end="417:28">ref_cache</name><index pos:start="417:29" pos:end="417:34">[<expr pos:start="417:30" pos:end="417:33"><name pos:start="417:30" pos:end="417:33">list</name></expr>]</index><index pos:start="417:35" pos:end="417:50">[ <expr pos:start="417:37" pos:end="417:48"><name pos:start="417:37" pos:end="417:46"><name pos:start="417:37" pos:end="417:41">scan8</name><index pos:start="417:42" pos:end="417:46">[<expr pos:start="417:43" pos:end="417:45"><literal type="number" pos:start="417:43" pos:end="417:43">4</literal><operator pos:start="417:44" pos:end="417:44">*</operator><name pos:start="417:45" pos:end="417:45">i</name></expr>]</index></name><operator pos:start="417:47" pos:end="417:47">+</operator><literal type="number" pos:start="417:48" pos:end="417:48">8</literal></expr> ]</index></name><operator pos:start="417:51" pos:end="417:51">=</operator><name pos:start="417:52" pos:end="417:85"><name pos:start="417:52" pos:end="417:52">h</name><operator pos:start="417:53" pos:end="417:54">-&gt;</operator><name pos:start="417:55" pos:end="417:63">ref_cache</name><index pos:start="417:64" pos:end="417:69">[<expr pos:start="417:65" pos:end="417:68"><name pos:start="417:65" pos:end="417:68">list</name></expr>]</index><index pos:start="417:70" pos:end="417:85">[ <expr pos:start="417:72" pos:end="417:83"><name pos:start="417:72" pos:end="417:81"><name pos:start="417:72" pos:end="417:76">scan8</name><index pos:start="417:77" pos:end="417:81">[<expr pos:start="417:78" pos:end="417:80"><literal type="number" pos:start="417:78" pos:end="417:78">4</literal><operator pos:start="417:79" pos:end="417:79">*</operator><name pos:start="417:80" pos:end="417:80">i</name></expr>]</index></name><operator pos:start="417:82" pos:end="417:82">+</operator><literal type="number" pos:start="417:83" pos:end="417:83">9</literal></expr> ]</index></name><operator pos:start="417:86" pos:end="417:86">=</operator> <name pos:start="417:88" pos:end="417:99"><name pos:start="417:88" pos:end="417:90">ref</name><index pos:start="417:91" pos:end="417:96">[<expr pos:start="417:92" pos:end="417:95"><name pos:start="417:92" pos:end="417:95">list</name></expr>]</index><index pos:start="417:97" pos:end="417:99">[<expr pos:start="417:98" pos:end="417:98"><name pos:start="417:98" pos:end="417:98">i</name></expr>]</index></name></expr>;</expr_stmt>



                <if_stmt pos:start="421:17" pos:end="487:17"><if pos:start="421:17" pos:end="479:17">if<condition pos:start="421:19" pos:end="421:87">(<expr pos:start="421:20" pos:end="421:86"><call pos:start="421:20" pos:end="421:53"><name pos:start="421:20" pos:end="421:25">IS_DIR</name><argument_list pos:start="421:26" pos:end="421:53">(<argument pos:start="421:27" pos:end="421:43"><expr pos:start="421:27" pos:end="421:43"><name pos:start="421:27" pos:end="421:43"><name pos:start="421:27" pos:end="421:27">h</name><operator pos:start="421:28" pos:end="421:29">-&gt;</operator><name pos:start="421:30" pos:end="421:40">sub_mb_type</name><index pos:start="421:41" pos:end="421:43">[<expr pos:start="421:42" pos:end="421:42"><name pos:start="421:42" pos:end="421:42">i</name></expr>]</index></name></expr></argument>, <argument pos:start="421:46" pos:end="421:46"><expr pos:start="421:46" pos:end="421:46"><literal type="number" pos:start="421:46" pos:end="421:46">0</literal></expr></argument>, <argument pos:start="421:49" pos:end="421:52"><expr pos:start="421:49" pos:end="421:52"><name pos:start="421:49" pos:end="421:52">list</name></expr></argument>)</argument_list></call> <operator pos:start="421:55" pos:end="421:56">&amp;&amp;</operator> <operator pos:start="421:58" pos:end="421:58">!</operator><call pos:start="421:59" pos:end="421:86"><name pos:start="421:59" pos:end="421:67">IS_DIRECT</name><argument_list pos:start="421:68" pos:end="421:86">(<argument pos:start="421:69" pos:end="421:85"><expr pos:start="421:69" pos:end="421:85"><name pos:start="421:69" pos:end="421:85"><name pos:start="421:69" pos:end="421:69">h</name><operator pos:start="421:70" pos:end="421:71">-&gt;</operator><name pos:start="421:72" pos:end="421:82">sub_mb_type</name><index pos:start="421:83" pos:end="421:85">[<expr pos:start="421:84" pos:end="421:84"><name pos:start="421:84" pos:end="421:84">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="421:88" pos:end="479:17">{<block_content pos:start="423:21" pos:end="477:21">

                    <decl_stmt pos:start="423:21" pos:end="423:61"><decl pos:start="423:21" pos:end="423:60"><type pos:start="423:21" pos:end="423:29"><specifier pos:start="423:21" pos:end="423:25">const</specifier> <name pos:start="423:27" pos:end="423:29">int</name></type> <name pos:start="423:31" pos:end="423:41">sub_mb_type</name><init pos:start="423:42" pos:end="423:60">= <expr pos:start="423:44" pos:end="423:60"><name pos:start="423:44" pos:end="423:60"><name pos:start="423:44" pos:end="423:44">h</name><operator pos:start="423:45" pos:end="423:46">-&gt;</operator><name pos:start="423:47" pos:end="423:57">sub_mb_type</name><index pos:start="423:58" pos:end="423:60">[<expr pos:start="423:59" pos:end="423:59"><name pos:start="423:59" pos:end="423:59">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="425:21" pos:end="425:96"><decl pos:start="425:21" pos:end="425:95"><type pos:start="425:21" pos:end="425:29"><specifier pos:start="425:21" pos:end="425:25">const</specifier> <name pos:start="425:27" pos:end="425:29">int</name></type> <name pos:start="425:31" pos:end="425:41">block_width</name><init pos:start="425:42" pos:end="425:95">= <expr pos:start="425:44" pos:end="425:95"><ternary pos:start="425:44" pos:end="425:95"><condition pos:start="425:44" pos:end="425:89"><expr pos:start="425:44" pos:end="425:87"><operator pos:start="425:44" pos:end="425:44">(</operator><name pos:start="425:45" pos:end="425:55">sub_mb_type</name> <operator pos:start="425:57" pos:end="425:57">&amp;</operator> <operator pos:start="425:59" pos:end="425:59">(</operator><name pos:start="425:60" pos:end="425:72">MB_TYPE_16x16</name><operator pos:start="425:73" pos:end="425:73">|</operator><name pos:start="425:74" pos:end="425:85">MB_TYPE_16x8</name><operator pos:start="425:86" pos:end="425:86">)</operator><operator pos:start="425:87" pos:end="425:87">)</operator></expr> ?</condition><then pos:start="425:91" pos:end="425:91"> <expr pos:start="425:91" pos:end="425:91"><literal type="number" pos:start="425:91" pos:end="425:91">2</literal></expr> </then><else pos:start="425:93" pos:end="425:95">: <expr pos:start="425:95" pos:end="425:95"><literal type="number" pos:start="425:95" pos:end="425:95">1</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

                    <for pos:start="427:21" pos:end="477:21">for<control pos:start="427:24" pos:end="427:59">(<init pos:start="427:25" pos:end="427:28"><expr pos:start="427:25" pos:end="427:27"><name pos:start="427:25" pos:end="427:25">j</name><operator pos:start="427:26" pos:end="427:26">=</operator><literal type="number" pos:start="427:27" pos:end="427:27">0</literal></expr>;</init> <condition pos:start="427:30" pos:end="427:54"><expr pos:start="427:30" pos:end="427:53"><name pos:start="427:30" pos:end="427:30">j</name><operator pos:start="427:31" pos:end="427:31">&lt;</operator><name pos:start="427:32" pos:end="427:53"><name pos:start="427:32" pos:end="427:50">sub_partition_count</name><index pos:start="427:51" pos:end="427:53">[<expr pos:start="427:52" pos:end="427:52"><name pos:start="427:52" pos:end="427:52">i</name></expr>]</index></name></expr>;</condition> <incr pos:start="427:56" pos:end="427:58"><expr pos:start="427:56" pos:end="427:58"><name pos:start="427:56" pos:end="427:56">j</name><operator pos:start="427:57" pos:end="427:58">++</operator></expr></incr>)</control><block pos:start="427:60" pos:end="477:21">{<block_content pos:start="429:25" pos:end="475:25">

                        <decl_stmt pos:start="429:25" pos:end="429:35"><decl pos:start="429:25" pos:end="429:30"><type pos:start="429:25" pos:end="429:27"><name pos:start="429:25" pos:end="429:27">int</name></type> <name pos:start="429:29" pos:end="429:30">mx</name></decl>, <decl pos:start="429:33" pos:end="429:34"><type ref="prev" pos:start="429:25" pos:end="429:27"/><name pos:start="429:33" pos:end="429:34">my</name></decl>;</decl_stmt>

                        <decl_stmt pos:start="431:25" pos:end="431:61"><decl pos:start="431:25" pos:end="431:60"><type pos:start="431:25" pos:end="431:33"><specifier pos:start="431:25" pos:end="431:29">const</specifier> <name pos:start="431:31" pos:end="431:33">int</name></type> <name pos:start="431:35" pos:end="431:39">index</name><init pos:start="431:40" pos:end="431:60">= <expr pos:start="431:42" pos:end="431:60"><literal type="number" pos:start="431:42" pos:end="431:42">4</literal><operator pos:start="431:43" pos:end="431:43">*</operator><name pos:start="431:44" pos:end="431:44">i</name> <operator pos:start="431:46" pos:end="431:46">+</operator> <name pos:start="431:48" pos:end="431:58">block_width</name><operator pos:start="431:59" pos:end="431:59">*</operator><name pos:start="431:60" pos:end="431:60">j</name></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="433:25" pos:end="433:84"><expr pos:start="433:25" pos:end="433:83"><call pos:start="433:25" pos:end="433:44"><name pos:start="433:25" pos:end="433:31">int16_t</name> <argument_list pos:start="433:33" pos:end="433:44">(<argument pos:start="433:34" pos:end="433:43"><expr pos:start="433:34" pos:end="433:43"><operator pos:start="433:34" pos:end="433:34">*</operator> <name pos:start="433:36" pos:end="433:43">mv_cache</name></expr></argument>)</argument_list></call><index pos:start="433:45" pos:end="433:47">[<expr pos:start="433:46" pos:end="433:46"><literal type="number" pos:start="433:46" pos:end="433:46">2</literal></expr>]</index><operator pos:start="433:48" pos:end="433:48">=</operator> <operator pos:start="433:50" pos:end="433:50">&amp;</operator><name pos:start="433:51" pos:end="433:83"><name pos:start="433:51" pos:end="433:51">h</name><operator pos:start="433:52" pos:end="433:53">-&gt;</operator><name pos:start="433:54" pos:end="433:61">mv_cache</name><index pos:start="433:62" pos:end="433:67">[<expr pos:start="433:63" pos:end="433:66"><name pos:start="433:63" pos:end="433:66">list</name></expr>]</index><index pos:start="433:68" pos:end="433:83">[ <expr pos:start="433:70" pos:end="433:81"><name pos:start="433:70" pos:end="433:81"><name pos:start="433:70" pos:end="433:74">scan8</name><index pos:start="433:75" pos:end="433:81">[<expr pos:start="433:76" pos:end="433:80"><name pos:start="433:76" pos:end="433:80">index</name></expr>]</index></name></expr> ]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="435:25" pos:end="435:111"><expr pos:start="435:25" pos:end="435:110"><call pos:start="435:25" pos:end="435:110"><name pos:start="435:25" pos:end="435:35">pred_motion</name><argument_list pos:start="435:36" pos:end="435:110">(<argument pos:start="435:37" pos:end="435:37"><expr pos:start="435:37" pos:end="435:37"><name pos:start="435:37" pos:end="435:37">h</name></expr></argument>, <argument pos:start="435:40" pos:end="435:44"><expr pos:start="435:40" pos:end="435:44"><name pos:start="435:40" pos:end="435:44">index</name></expr></argument>, <argument pos:start="435:47" pos:end="435:57"><expr pos:start="435:47" pos:end="435:57"><name pos:start="435:47" pos:end="435:57">block_width</name></expr></argument>, <argument pos:start="435:60" pos:end="435:63"><expr pos:start="435:60" pos:end="435:63"><name pos:start="435:60" pos:end="435:63">list</name></expr></argument>, <argument pos:start="435:66" pos:end="435:99"><expr pos:start="435:66" pos:end="435:99"><name pos:start="435:66" pos:end="435:99"><name pos:start="435:66" pos:end="435:66">h</name><operator pos:start="435:67" pos:end="435:68">-&gt;</operator><name pos:start="435:69" pos:end="435:77">ref_cache</name><index pos:start="435:78" pos:end="435:83">[<expr pos:start="435:79" pos:end="435:82"><name pos:start="435:79" pos:end="435:82">list</name></expr>]</index><index pos:start="435:84" pos:end="435:99">[ <expr pos:start="435:86" pos:end="435:97"><name pos:start="435:86" pos:end="435:97"><name pos:start="435:86" pos:end="435:90">scan8</name><index pos:start="435:91" pos:end="435:97">[<expr pos:start="435:92" pos:end="435:96"><name pos:start="435:92" pos:end="435:96">index</name></expr>]</index></name></expr> ]</index></name></expr></argument>, <argument pos:start="435:102" pos:end="435:104"><expr pos:start="435:102" pos:end="435:104"><operator pos:start="435:102" pos:end="435:102">&amp;</operator><name pos:start="435:103" pos:end="435:104">mx</name></expr></argument>, <argument pos:start="435:107" pos:end="435:109"><expr pos:start="435:107" pos:end="435:109"><operator pos:start="435:107" pos:end="435:107">&amp;</operator><name pos:start="435:108" pos:end="435:109">my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="437:25" pos:end="437:52"><expr pos:start="437:25" pos:end="437:51"><name pos:start="437:25" pos:end="437:26">mx</name> <operator pos:start="437:28" pos:end="437:29">+=</operator> <call pos:start="437:31" pos:end="437:51"><name pos:start="437:31" pos:end="437:43">get_se_golomb</name><argument_list pos:start="437:44" pos:end="437:51">(<argument pos:start="437:45" pos:end="437:50"><expr pos:start="437:45" pos:end="437:50"><operator pos:start="437:45" pos:end="437:45">&amp;</operator><name pos:start="437:46" pos:end="437:50"><name pos:start="437:46" pos:end="437:46">s</name><operator pos:start="437:47" pos:end="437:48">-&gt;</operator><name pos:start="437:49" pos:end="437:50">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="439:25" pos:end="439:52"><expr pos:start="439:25" pos:end="439:51"><name pos:start="439:25" pos:end="439:26">my</name> <operator pos:start="439:28" pos:end="439:29">+=</operator> <call pos:start="439:31" pos:end="439:51"><name pos:start="439:31" pos:end="439:43">get_se_golomb</name><argument_list pos:start="439:44" pos:end="439:51">(<argument pos:start="439:45" pos:end="439:50"><expr pos:start="439:45" pos:end="439:50"><operator pos:start="439:45" pos:end="439:45">&amp;</operator><name pos:start="439:46" pos:end="439:50"><name pos:start="439:46" pos:end="439:46">s</name><operator pos:start="439:47" pos:end="439:48">-&gt;</operator><name pos:start="439:49" pos:end="439:50">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="441:25" pos:end="441:60"><expr pos:start="441:25" pos:end="441:59"><call pos:start="441:25" pos:end="441:59"><name pos:start="441:25" pos:end="441:31">tprintf</name><argument_list pos:start="441:32" pos:end="441:59">(<argument pos:start="441:33" pos:end="441:50"><expr pos:start="441:33" pos:end="441:50"><literal type="string" pos:start="441:33" pos:end="441:50">"final mv:%d %d\n"</literal></expr></argument>, <argument pos:start="441:53" pos:end="441:54"><expr pos:start="441:53" pos:end="441:54"><name pos:start="441:53" pos:end="441:54">mx</name></expr></argument>, <argument pos:start="441:57" pos:end="441:58"><expr pos:start="441:57" pos:end="441:58"><name pos:start="441:57" pos:end="441:58">my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                        <if_stmt pos:start="445:25" pos:end="475:25"><if pos:start="445:25" pos:end="455:25">if<condition pos:start="445:27" pos:end="445:51">(<expr pos:start="445:28" pos:end="445:50"><call pos:start="445:28" pos:end="445:50"><name pos:start="445:28" pos:end="445:37">IS_SUB_8X8</name><argument_list pos:start="445:38" pos:end="445:50">(<argument pos:start="445:39" pos:end="445:49"><expr pos:start="445:39" pos:end="445:49"><name pos:start="445:39" pos:end="445:49">sub_mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="445:52" pos:end="455:25">{<block_content pos:start="447:29" pos:end="453:67">

                            <expr_stmt pos:start="447:29" pos:end="449:67"><expr pos:start="447:29" pos:end="449:66"><name pos:start="447:29" pos:end="447:44"><name pos:start="447:29" pos:end="447:36">mv_cache</name><index pos:start="447:37" pos:end="447:41">[ <expr pos:start="447:39" pos:end="447:39"><literal type="number" pos:start="447:39" pos:end="447:39">0</literal></expr> ]</index><index pos:start="447:42" pos:end="447:44">[<expr pos:start="447:43" pos:end="447:43"><literal type="number" pos:start="447:43" pos:end="447:43">0</literal></expr>]</index></name><operator pos:start="447:45" pos:end="447:45">=</operator> <name pos:start="447:47" pos:end="447:62"><name pos:start="447:47" pos:end="447:54">mv_cache</name><index pos:start="447:55" pos:end="447:59">[ <expr pos:start="447:57" pos:end="447:57"><literal type="number" pos:start="447:57" pos:end="447:57">1</literal></expr> ]</index><index pos:start="447:60" pos:end="447:62">[<expr pos:start="447:61" pos:end="447:61"><literal type="number" pos:start="447:61" pos:end="447:61">0</literal></expr>]</index></name><operator pos:start="447:63" pos:end="447:63">=</operator> 

                            <name pos:start="449:29" pos:end="449:44"><name pos:start="449:29" pos:end="449:36">mv_cache</name><index pos:start="449:37" pos:end="449:41">[ <expr pos:start="449:39" pos:end="449:39"><literal type="number" pos:start="449:39" pos:end="449:39">8</literal></expr> ]</index><index pos:start="449:42" pos:end="449:44">[<expr pos:start="449:43" pos:end="449:43"><literal type="number" pos:start="449:43" pos:end="449:43">0</literal></expr>]</index></name><operator pos:start="449:45" pos:end="449:45">=</operator> <name pos:start="449:47" pos:end="449:62"><name pos:start="449:47" pos:end="449:54">mv_cache</name><index pos:start="449:55" pos:end="449:59">[ <expr pos:start="449:57" pos:end="449:57"><literal type="number" pos:start="449:57" pos:end="449:57">9</literal></expr> ]</index><index pos:start="449:60" pos:end="449:62">[<expr pos:start="449:61" pos:end="449:61"><literal type="number" pos:start="449:61" pos:end="449:61">0</literal></expr>]</index></name><operator pos:start="449:63" pos:end="449:63">=</operator> <name pos:start="449:65" pos:end="449:66">mx</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="451:29" pos:end="453:67"><expr pos:start="451:29" pos:end="453:66"><name pos:start="451:29" pos:end="451:44"><name pos:start="451:29" pos:end="451:36">mv_cache</name><index pos:start="451:37" pos:end="451:41">[ <expr pos:start="451:39" pos:end="451:39"><literal type="number" pos:start="451:39" pos:end="451:39">0</literal></expr> ]</index><index pos:start="451:42" pos:end="451:44">[<expr pos:start="451:43" pos:end="451:43"><literal type="number" pos:start="451:43" pos:end="451:43">1</literal></expr>]</index></name><operator pos:start="451:45" pos:end="451:45">=</operator> <name pos:start="451:47" pos:end="451:62"><name pos:start="451:47" pos:end="451:54">mv_cache</name><index pos:start="451:55" pos:end="451:59">[ <expr pos:start="451:57" pos:end="451:57"><literal type="number" pos:start="451:57" pos:end="451:57">1</literal></expr> ]</index><index pos:start="451:60" pos:end="451:62">[<expr pos:start="451:61" pos:end="451:61"><literal type="number" pos:start="451:61" pos:end="451:61">1</literal></expr>]</index></name><operator pos:start="451:63" pos:end="451:63">=</operator> 

                            <name pos:start="453:29" pos:end="453:44"><name pos:start="453:29" pos:end="453:36">mv_cache</name><index pos:start="453:37" pos:end="453:41">[ <expr pos:start="453:39" pos:end="453:39"><literal type="number" pos:start="453:39" pos:end="453:39">8</literal></expr> ]</index><index pos:start="453:42" pos:end="453:44">[<expr pos:start="453:43" pos:end="453:43"><literal type="number" pos:start="453:43" pos:end="453:43">1</literal></expr>]</index></name><operator pos:start="453:45" pos:end="453:45">=</operator> <name pos:start="453:47" pos:end="453:62"><name pos:start="453:47" pos:end="453:54">mv_cache</name><index pos:start="453:55" pos:end="453:59">[ <expr pos:start="453:57" pos:end="453:57"><literal type="number" pos:start="453:57" pos:end="453:57">9</literal></expr> ]</index><index pos:start="453:60" pos:end="453:62">[<expr pos:start="453:61" pos:end="453:61"><literal type="number" pos:start="453:61" pos:end="453:61">1</literal></expr>]</index></name><operator pos:start="453:63" pos:end="453:63">=</operator> <name pos:start="453:65" pos:end="453:66">my</name></expr>;</expr_stmt>

                        </block_content>}</block></if><if type="elseif" pos:start="455:26" pos:end="461:25">else if<condition pos:start="455:33" pos:end="455:57">(<expr pos:start="455:34" pos:end="455:56"><call pos:start="455:34" pos:end="455:56"><name pos:start="455:34" pos:end="455:43">IS_SUB_8X4</name><argument_list pos:start="455:44" pos:end="455:56">(<argument pos:start="455:45" pos:end="455:55"><expr pos:start="455:45" pos:end="455:55"><name pos:start="455:45" pos:end="455:55">sub_mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="455:58" pos:end="461:25">{<block_content pos:start="457:29" pos:end="459:67">

                            <expr_stmt pos:start="457:29" pos:end="457:67"><expr pos:start="457:29" pos:end="457:66"><name pos:start="457:29" pos:end="457:44"><name pos:start="457:29" pos:end="457:36">mv_cache</name><index pos:start="457:37" pos:end="457:41">[ <expr pos:start="457:39" pos:end="457:39"><literal type="number" pos:start="457:39" pos:end="457:39">0</literal></expr> ]</index><index pos:start="457:42" pos:end="457:44">[<expr pos:start="457:43" pos:end="457:43"><literal type="number" pos:start="457:43" pos:end="457:43">0</literal></expr>]</index></name><operator pos:start="457:45" pos:end="457:45">=</operator> <name pos:start="457:47" pos:end="457:62"><name pos:start="457:47" pos:end="457:54">mv_cache</name><index pos:start="457:55" pos:end="457:59">[ <expr pos:start="457:57" pos:end="457:57"><literal type="number" pos:start="457:57" pos:end="457:57">1</literal></expr> ]</index><index pos:start="457:60" pos:end="457:62">[<expr pos:start="457:61" pos:end="457:61"><literal type="number" pos:start="457:61" pos:end="457:61">0</literal></expr>]</index></name><operator pos:start="457:63" pos:end="457:63">=</operator> <name pos:start="457:65" pos:end="457:66">mx</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="459:29" pos:end="459:67"><expr pos:start="459:29" pos:end="459:66"><name pos:start="459:29" pos:end="459:44"><name pos:start="459:29" pos:end="459:36">mv_cache</name><index pos:start="459:37" pos:end="459:41">[ <expr pos:start="459:39" pos:end="459:39"><literal type="number" pos:start="459:39" pos:end="459:39">0</literal></expr> ]</index><index pos:start="459:42" pos:end="459:44">[<expr pos:start="459:43" pos:end="459:43"><literal type="number" pos:start="459:43" pos:end="459:43">1</literal></expr>]</index></name><operator pos:start="459:45" pos:end="459:45">=</operator> <name pos:start="459:47" pos:end="459:62"><name pos:start="459:47" pos:end="459:54">mv_cache</name><index pos:start="459:55" pos:end="459:59">[ <expr pos:start="459:57" pos:end="459:57"><literal type="number" pos:start="459:57" pos:end="459:57">1</literal></expr> ]</index><index pos:start="459:60" pos:end="459:62">[<expr pos:start="459:61" pos:end="459:61"><literal type="number" pos:start="459:61" pos:end="459:61">1</literal></expr>]</index></name><operator pos:start="459:63" pos:end="459:63">=</operator> <name pos:start="459:65" pos:end="459:66">my</name></expr>;</expr_stmt>

                        </block_content>}</block></if><if type="elseif" pos:start="461:26" pos:end="467:25">else if<condition pos:start="461:33" pos:end="461:57">(<expr pos:start="461:34" pos:end="461:56"><call pos:start="461:34" pos:end="461:56"><name pos:start="461:34" pos:end="461:43">IS_SUB_4X8</name><argument_list pos:start="461:44" pos:end="461:56">(<argument pos:start="461:45" pos:end="461:55"><expr pos:start="461:45" pos:end="461:55"><name pos:start="461:45" pos:end="461:55">sub_mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="461:58" pos:end="467:25">{<block_content pos:start="463:29" pos:end="465:67">

                            <expr_stmt pos:start="463:29" pos:end="463:67"><expr pos:start="463:29" pos:end="463:66"><name pos:start="463:29" pos:end="463:44"><name pos:start="463:29" pos:end="463:36">mv_cache</name><index pos:start="463:37" pos:end="463:41">[ <expr pos:start="463:39" pos:end="463:39"><literal type="number" pos:start="463:39" pos:end="463:39">0</literal></expr> ]</index><index pos:start="463:42" pos:end="463:44">[<expr pos:start="463:43" pos:end="463:43"><literal type="number" pos:start="463:43" pos:end="463:43">0</literal></expr>]</index></name><operator pos:start="463:45" pos:end="463:45">=</operator> <name pos:start="463:47" pos:end="463:62"><name pos:start="463:47" pos:end="463:54">mv_cache</name><index pos:start="463:55" pos:end="463:59">[ <expr pos:start="463:57" pos:end="463:57"><literal type="number" pos:start="463:57" pos:end="463:57">8</literal></expr> ]</index><index pos:start="463:60" pos:end="463:62">[<expr pos:start="463:61" pos:end="463:61"><literal type="number" pos:start="463:61" pos:end="463:61">0</literal></expr>]</index></name><operator pos:start="463:63" pos:end="463:63">=</operator> <name pos:start="463:65" pos:end="463:66">mx</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="465:29" pos:end="465:67"><expr pos:start="465:29" pos:end="465:66"><name pos:start="465:29" pos:end="465:44"><name pos:start="465:29" pos:end="465:36">mv_cache</name><index pos:start="465:37" pos:end="465:41">[ <expr pos:start="465:39" pos:end="465:39"><literal type="number" pos:start="465:39" pos:end="465:39">0</literal></expr> ]</index><index pos:start="465:42" pos:end="465:44">[<expr pos:start="465:43" pos:end="465:43"><literal type="number" pos:start="465:43" pos:end="465:43">1</literal></expr>]</index></name><operator pos:start="465:45" pos:end="465:45">=</operator> <name pos:start="465:47" pos:end="465:62"><name pos:start="465:47" pos:end="465:54">mv_cache</name><index pos:start="465:55" pos:end="465:59">[ <expr pos:start="465:57" pos:end="465:57"><literal type="number" pos:start="465:57" pos:end="465:57">8</literal></expr> ]</index><index pos:start="465:60" pos:end="465:62">[<expr pos:start="465:61" pos:end="465:61"><literal type="number" pos:start="465:61" pos:end="465:61">1</literal></expr>]</index></name><operator pos:start="465:63" pos:end="465:63">=</operator> <name pos:start="465:65" pos:end="465:66">my</name></expr>;</expr_stmt>

                        </block_content>}</block></if><else pos:start="467:26" pos:end="475:25">else<block pos:start="467:30" pos:end="475:25">{<block_content pos:start="469:29" pos:end="473:49">

                            <expr_stmt pos:start="469:29" pos:end="469:60"><expr pos:start="469:29" pos:end="469:59"><call pos:start="469:29" pos:end="469:59"><name pos:start="469:29" pos:end="469:34">assert</name><argument_list pos:start="469:35" pos:end="469:59">(<argument pos:start="469:36" pos:end="469:58"><expr pos:start="469:36" pos:end="469:58"><call pos:start="469:36" pos:end="469:58"><name pos:start="469:36" pos:end="469:45">IS_SUB_4X4</name><argument_list pos:start="469:46" pos:end="469:58">(<argument pos:start="469:47" pos:end="469:57"><expr pos:start="469:47" pos:end="469:57"><name pos:start="469:47" pos:end="469:57">sub_mb_type</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="471:29" pos:end="471:49"><expr pos:start="471:29" pos:end="471:48"><name pos:start="471:29" pos:end="471:44"><name pos:start="471:29" pos:end="471:36">mv_cache</name><index pos:start="471:37" pos:end="471:41">[ <expr pos:start="471:39" pos:end="471:39"><literal type="number" pos:start="471:39" pos:end="471:39">0</literal></expr> ]</index><index pos:start="471:42" pos:end="471:44">[<expr pos:start="471:43" pos:end="471:43"><literal type="number" pos:start="471:43" pos:end="471:43">0</literal></expr>]</index></name><operator pos:start="471:45" pos:end="471:45">=</operator> <name pos:start="471:47" pos:end="471:48">mx</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="473:29" pos:end="473:49"><expr pos:start="473:29" pos:end="473:48"><name pos:start="473:29" pos:end="473:44"><name pos:start="473:29" pos:end="473:36">mv_cache</name><index pos:start="473:37" pos:end="473:41">[ <expr pos:start="473:39" pos:end="473:39"><literal type="number" pos:start="473:39" pos:end="473:39">0</literal></expr> ]</index><index pos:start="473:42" pos:end="473:44">[<expr pos:start="473:43" pos:end="473:43"><literal type="number" pos:start="473:43" pos:end="473:43">1</literal></expr>]</index></name><operator pos:start="473:45" pos:end="473:45">=</operator> <name pos:start="473:47" pos:end="473:48">my</name></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></if><else pos:start="479:18" pos:end="487:17">else<block pos:start="479:22" pos:end="487:17">{<block_content pos:start="481:21" pos:end="485:35">

                    <decl_stmt pos:start="481:21" pos:end="481:81"><decl pos:start="481:21" pos:end="481:80"><type pos:start="481:21" pos:end="481:30"><name pos:start="481:21" pos:end="481:28">uint32_t</name> <modifier pos:start="481:30" pos:end="481:30">*</modifier></type><name pos:start="481:31" pos:end="481:31">p</name><init pos:start="481:32" pos:end="481:80">= <expr pos:start="481:34" pos:end="481:80"><operator pos:start="481:34" pos:end="481:34">(</operator><name pos:start="481:35" pos:end="481:42">uint32_t</name> <operator pos:start="481:44" pos:end="481:44">*</operator><operator pos:start="481:45" pos:end="481:45">)</operator><operator pos:start="481:46" pos:end="481:46">&amp;</operator><name pos:start="481:47" pos:end="481:80"><name pos:start="481:47" pos:end="481:47">h</name><operator pos:start="481:48" pos:end="481:49">-&gt;</operator><name pos:start="481:50" pos:end="481:57">mv_cache</name><index pos:start="481:58" pos:end="481:63">[<expr pos:start="481:59" pos:end="481:62"><name pos:start="481:59" pos:end="481:62">list</name></expr>]</index><index pos:start="481:64" pos:end="481:77">[ <expr pos:start="481:66" pos:end="481:75"><name pos:start="481:66" pos:end="481:75"><name pos:start="481:66" pos:end="481:70">scan8</name><index pos:start="481:71" pos:end="481:75">[<expr pos:start="481:72" pos:end="481:74"><literal type="number" pos:start="481:72" pos:end="481:72">4</literal><operator pos:start="481:73" pos:end="481:73">*</operator><name pos:start="481:74" pos:end="481:74">i</name></expr>]</index></name></expr> ]</index><index pos:start="481:78" pos:end="481:80">[<expr pos:start="481:79" pos:end="481:79"><literal type="number" pos:start="481:79" pos:end="481:79">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="483:21" pos:end="485:35"><expr pos:start="483:21" pos:end="485:34"><name pos:start="483:21" pos:end="483:24"><name pos:start="483:21" pos:end="483:21">p</name><index pos:start="483:22" pos:end="483:24">[<expr pos:start="483:23" pos:end="483:23"><literal type="number" pos:start="483:23" pos:end="483:23">0</literal></expr>]</index></name> <operator pos:start="483:26" pos:end="483:26">=</operator> <name pos:start="483:28" pos:end="483:31"><name pos:start="483:28" pos:end="483:28">p</name><index pos:start="483:29" pos:end="483:31">[<expr pos:start="483:30" pos:end="483:30"><literal type="number" pos:start="483:30" pos:end="483:30">1</literal></expr>]</index></name><operator pos:start="483:32" pos:end="483:32">=</operator>

                    <name pos:start="485:21" pos:end="485:24"><name pos:start="485:21" pos:end="485:21">p</name><index pos:start="485:22" pos:end="485:24">[<expr pos:start="485:23" pos:end="485:23"><literal type="number" pos:start="485:23" pos:end="485:23">8</literal></expr>]</index></name> <operator pos:start="485:26" pos:end="485:26">=</operator> <name pos:start="485:28" pos:end="485:31"><name pos:start="485:28" pos:end="485:28">p</name><index pos:start="485:29" pos:end="485:31">[<expr pos:start="485:30" pos:end="485:30"><literal type="number" pos:start="485:30" pos:end="485:30">9</literal></expr>]</index></name><operator pos:start="485:32" pos:end="485:32">=</operator> <literal type="number" pos:start="485:34" pos:end="485:34">0</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></if><if type="elseif" pos:start="493:6" pos:end="635:5">else if<condition pos:start="493:13" pos:end="493:33">(<expr pos:start="493:14" pos:end="493:32"><operator pos:start="493:14" pos:end="493:14">!</operator><call pos:start="493:15" pos:end="493:32"><name pos:start="493:15" pos:end="493:23">IS_DIRECT</name><argument_list pos:start="493:24" pos:end="493:32">(<argument pos:start="493:25" pos:end="493:31"><expr pos:start="493:25" pos:end="493:31"><name pos:start="493:25" pos:end="493:31">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="493:34" pos:end="635:5">{<block_content pos:start="495:9" pos:end="633:9">

        <decl_stmt pos:start="495:9" pos:end="495:28"><decl pos:start="495:9" pos:end="495:16"><type pos:start="495:9" pos:end="495:11"><name pos:start="495:9" pos:end="495:11">int</name></type> <name pos:start="495:13" pos:end="495:16">list</name></decl>, <decl pos:start="495:19" pos:end="495:20"><type ref="prev" pos:start="495:9" pos:end="495:11"/><name pos:start="495:19" pos:end="495:20">mx</name></decl>, <decl pos:start="495:23" pos:end="495:24"><type ref="prev" pos:start="495:9" pos:end="495:11"/><name pos:start="495:23" pos:end="495:24">my</name></decl>, <decl pos:start="495:27" pos:end="495:27"><type ref="prev" pos:start="495:9" pos:end="495:11"/><name pos:start="495:27" pos:end="495:27">i</name></decl>;</decl_stmt>

         <comment type="line" pos:start="497:10" pos:end="497:71">//FIXME we should set ref_idx_l? to 0 if we use that later ...</comment>

        <if_stmt pos:start="499:9" pos:end="633:9"><if pos:start="499:9" pos:end="537:9">if<condition pos:start="499:11" pos:end="499:29">(<expr pos:start="499:12" pos:end="499:28"><call pos:start="499:12" pos:end="499:28"><name pos:start="499:12" pos:end="499:19">IS_16X16</name><argument_list pos:start="499:20" pos:end="499:28">(<argument pos:start="499:21" pos:end="499:27"><expr pos:start="499:21" pos:end="499:27"><name pos:start="499:21" pos:end="499:27">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="499:30" pos:end="537:9">{<block_content pos:start="501:13" pos:end="535:13">

            <for pos:start="501:13" pos:end="515:13">for<control pos:start="501:16" pos:end="501:39">(<init pos:start="501:17" pos:end="501:23"><expr pos:start="501:17" pos:end="501:22"><name pos:start="501:17" pos:end="501:20">list</name><operator pos:start="501:21" pos:end="501:21">=</operator><literal type="number" pos:start="501:22" pos:end="501:22">0</literal></expr>;</init> <condition pos:start="501:25" pos:end="501:31"><expr pos:start="501:25" pos:end="501:30"><name pos:start="501:25" pos:end="501:28">list</name><operator pos:start="501:29" pos:end="501:29">&lt;</operator><literal type="number" pos:start="501:30" pos:end="501:30">2</literal></expr>;</condition> <incr pos:start="501:33" pos:end="501:38"><expr pos:start="501:33" pos:end="501:38"><name pos:start="501:33" pos:end="501:36">list</name><operator pos:start="501:37" pos:end="501:38">++</operator></expr></incr>)</control><block pos:start="501:40" pos:end="515:13">{<block_content pos:start="503:17" pos:end="513:17">

                <if_stmt pos:start="503:17" pos:end="513:17"><if pos:start="503:17" pos:end="513:17">if<condition pos:start="503:19" pos:end="503:37">(<expr pos:start="503:20" pos:end="503:36"><name pos:start="503:20" pos:end="503:34"><name pos:start="503:20" pos:end="503:20">h</name><operator pos:start="503:21" pos:end="503:22">-&gt;</operator><name pos:start="503:23" pos:end="503:31">ref_count</name><index pos:start="503:32" pos:end="503:34">[<expr pos:start="503:33" pos:end="503:33"><literal type="number" pos:start="503:33" pos:end="503:33">0</literal></expr>]</index></name><operator pos:start="503:35" pos:end="503:35">&gt;</operator><literal type="number" pos:start="503:36" pos:end="503:36">0</literal></expr>)</condition><block pos:start="503:38" pos:end="513:17">{<block_content pos:start="505:21" pos:end="511:21">

                    <if_stmt pos:start="505:21" pos:end="511:21"><if pos:start="505:21" pos:end="511:21">if<condition pos:start="505:23" pos:end="505:48">(<expr pos:start="505:24" pos:end="505:47"><call pos:start="505:24" pos:end="505:47"><name pos:start="505:24" pos:end="505:29">IS_DIR</name><argument_list pos:start="505:30" pos:end="505:47">(<argument pos:start="505:31" pos:end="505:37"><expr pos:start="505:31" pos:end="505:37"><name pos:start="505:31" pos:end="505:37">mb_type</name></expr></argument>, <argument pos:start="505:40" pos:end="505:40"><expr pos:start="505:40" pos:end="505:40"><literal type="number" pos:start="505:40" pos:end="505:40">0</literal></expr></argument>, <argument pos:start="505:43" pos:end="505:46"><expr pos:start="505:43" pos:end="505:46"><name pos:start="505:43" pos:end="505:46">list</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="505:49" pos:end="511:21">{<block_content pos:start="507:25" pos:end="509:89">

                        <decl_stmt pos:start="507:25" pos:end="507:82"><decl pos:start="507:25" pos:end="507:81"><type pos:start="507:25" pos:end="507:33"><specifier pos:start="507:25" pos:end="507:29">const</specifier> <name pos:start="507:31" pos:end="507:33">int</name></type> <name pos:start="507:35" pos:end="507:37">val</name><init pos:start="507:38" pos:end="507:81">= <expr pos:start="507:40" pos:end="507:81"><call pos:start="507:40" pos:end="507:81"><name pos:start="507:40" pos:end="507:53">get_te0_golomb</name><argument_list pos:start="507:54" pos:end="507:81">(<argument pos:start="507:55" pos:end="507:60"><expr pos:start="507:55" pos:end="507:60"><operator pos:start="507:55" pos:end="507:55">&amp;</operator><name pos:start="507:56" pos:end="507:60"><name pos:start="507:56" pos:end="507:56">s</name><operator pos:start="507:57" pos:end="507:58">-&gt;</operator><name pos:start="507:59" pos:end="507:60">gb</name></name></expr></argument>, <argument pos:start="507:63" pos:end="507:80"><expr pos:start="507:63" pos:end="507:80"><name pos:start="507:63" pos:end="507:80"><name pos:start="507:63" pos:end="507:63">h</name><operator pos:start="507:64" pos:end="507:65">-&gt;</operator><name pos:start="507:66" pos:end="507:74">ref_count</name><index pos:start="507:75" pos:end="507:80">[<expr pos:start="507:76" pos:end="507:79"><name pos:start="507:76" pos:end="507:79">list</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="509:25" pos:end="509:89"><expr pos:start="509:25" pos:end="509:88"><call pos:start="509:25" pos:end="509:88"><name pos:start="509:25" pos:end="509:38">fill_rectangle</name><argument_list pos:start="509:39" pos:end="509:88">(<argument pos:start="509:40" pos:end="509:70"><expr pos:start="509:40" pos:end="509:70"><operator pos:start="509:40" pos:end="509:40">&amp;</operator><name pos:start="509:41" pos:end="509:70"><name pos:start="509:41" pos:end="509:41">h</name><operator pos:start="509:42" pos:end="509:43">-&gt;</operator><name pos:start="509:44" pos:end="509:52">ref_cache</name><index pos:start="509:53" pos:end="509:58">[<expr pos:start="509:54" pos:end="509:57"><name pos:start="509:54" pos:end="509:57">list</name></expr>]</index><index pos:start="509:59" pos:end="509:70">[ <expr pos:start="509:61" pos:end="509:68"><name pos:start="509:61" pos:end="509:68"><name pos:start="509:61" pos:end="509:65">scan8</name><index pos:start="509:66" pos:end="509:68">[<expr pos:start="509:67" pos:end="509:67"><literal type="number" pos:start="509:67" pos:end="509:67">0</literal></expr>]</index></name></expr> ]</index></name></expr></argument>, <argument pos:start="509:73" pos:end="509:73"><expr pos:start="509:73" pos:end="509:73"><literal type="number" pos:start="509:73" pos:end="509:73">4</literal></expr></argument>, <argument pos:start="509:76" pos:end="509:76"><expr pos:start="509:76" pos:end="509:76"><literal type="number" pos:start="509:76" pos:end="509:76">4</literal></expr></argument>, <argument pos:start="509:79" pos:end="509:79"><expr pos:start="509:79" pos:end="509:79"><literal type="number" pos:start="509:79" pos:end="509:79">8</literal></expr></argument>, <argument pos:start="509:82" pos:end="509:84"><expr pos:start="509:82" pos:end="509:84"><name pos:start="509:82" pos:end="509:84">val</name></expr></argument>, <argument pos:start="509:87" pos:end="509:87"><expr pos:start="509:87" pos:end="509:87"><literal type="number" pos:start="509:87" pos:end="509:87">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

            <for pos:start="517:13" pos:end="535:13">for<control pos:start="517:16" pos:end="517:39">(<init pos:start="517:17" pos:end="517:23"><expr pos:start="517:17" pos:end="517:22"><name pos:start="517:17" pos:end="517:20">list</name><operator pos:start="517:21" pos:end="517:21">=</operator><literal type="number" pos:start="517:22" pos:end="517:22">0</literal></expr>;</init> <condition pos:start="517:25" pos:end="517:31"><expr pos:start="517:25" pos:end="517:30"><name pos:start="517:25" pos:end="517:28">list</name><operator pos:start="517:29" pos:end="517:29">&lt;</operator><literal type="number" pos:start="517:30" pos:end="517:30">2</literal></expr>;</condition> <incr pos:start="517:33" pos:end="517:38"><expr pos:start="517:33" pos:end="517:38"><name pos:start="517:33" pos:end="517:36">list</name><operator pos:start="517:37" pos:end="517:38">++</operator></expr></incr>)</control><block pos:start="517:40" pos:end="535:13">{<block_content pos:start="519:17" pos:end="533:17">

                <if_stmt pos:start="519:17" pos:end="533:17"><if pos:start="519:17" pos:end="533:17">if<condition pos:start="519:19" pos:end="519:44">(<expr pos:start="519:20" pos:end="519:43"><call pos:start="519:20" pos:end="519:43"><name pos:start="519:20" pos:end="519:25">IS_DIR</name><argument_list pos:start="519:26" pos:end="519:43">(<argument pos:start="519:27" pos:end="519:33"><expr pos:start="519:27" pos:end="519:33"><name pos:start="519:27" pos:end="519:33">mb_type</name></expr></argument>, <argument pos:start="519:36" pos:end="519:36"><expr pos:start="519:36" pos:end="519:36"><literal type="number" pos:start="519:36" pos:end="519:36">0</literal></expr></argument>, <argument pos:start="519:39" pos:end="519:42"><expr pos:start="519:39" pos:end="519:42"><name pos:start="519:39" pos:end="519:42">list</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="519:45" pos:end="533:17">{<block_content pos:start="521:21" pos:end="531:97">

                    <expr_stmt pos:start="521:21" pos:end="521:89"><expr pos:start="521:21" pos:end="521:88"><call pos:start="521:21" pos:end="521:88"><name pos:start="521:21" pos:end="521:31">pred_motion</name><argument_list pos:start="521:32" pos:end="521:88">(<argument pos:start="521:33" pos:end="521:33"><expr pos:start="521:33" pos:end="521:33"><name pos:start="521:33" pos:end="521:33">h</name></expr></argument>, <argument pos:start="521:36" pos:end="521:36"><expr pos:start="521:36" pos:end="521:36"><literal type="number" pos:start="521:36" pos:end="521:36">0</literal></expr></argument>, <argument pos:start="521:39" pos:end="521:39"><expr pos:start="521:39" pos:end="521:39"><literal type="number" pos:start="521:39" pos:end="521:39">4</literal></expr></argument>, <argument pos:start="521:42" pos:end="521:45"><expr pos:start="521:42" pos:end="521:45"><name pos:start="521:42" pos:end="521:45">list</name></expr></argument>, <argument pos:start="521:48" pos:end="521:77"><expr pos:start="521:48" pos:end="521:77"><name pos:start="521:48" pos:end="521:77"><name pos:start="521:48" pos:end="521:48">h</name><operator pos:start="521:49" pos:end="521:50">-&gt;</operator><name pos:start="521:51" pos:end="521:59">ref_cache</name><index pos:start="521:60" pos:end="521:65">[<expr pos:start="521:61" pos:end="521:64"><name pos:start="521:61" pos:end="521:64">list</name></expr>]</index><index pos:start="521:66" pos:end="521:77">[ <expr pos:start="521:68" pos:end="521:75"><name pos:start="521:68" pos:end="521:75"><name pos:start="521:68" pos:end="521:72">scan8</name><index pos:start="521:73" pos:end="521:75">[<expr pos:start="521:74" pos:end="521:74"><literal type="number" pos:start="521:74" pos:end="521:74">0</literal></expr>]</index></name></expr> ]</index></name></expr></argument>, <argument pos:start="521:80" pos:end="521:82"><expr pos:start="521:80" pos:end="521:82"><operator pos:start="521:80" pos:end="521:80">&amp;</operator><name pos:start="521:81" pos:end="521:82">mx</name></expr></argument>, <argument pos:start="521:85" pos:end="521:87"><expr pos:start="521:85" pos:end="521:87"><operator pos:start="521:85" pos:end="521:85">&amp;</operator><name pos:start="521:86" pos:end="521:87">my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="523:21" pos:end="523:48"><expr pos:start="523:21" pos:end="523:47"><name pos:start="523:21" pos:end="523:22">mx</name> <operator pos:start="523:24" pos:end="523:25">+=</operator> <call pos:start="523:27" pos:end="523:47"><name pos:start="523:27" pos:end="523:39">get_se_golomb</name><argument_list pos:start="523:40" pos:end="523:47">(<argument pos:start="523:41" pos:end="523:46"><expr pos:start="523:41" pos:end="523:46"><operator pos:start="523:41" pos:end="523:41">&amp;</operator><name pos:start="523:42" pos:end="523:46"><name pos:start="523:42" pos:end="523:42">s</name><operator pos:start="523:43" pos:end="523:44">-&gt;</operator><name pos:start="523:45" pos:end="523:46">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="525:21" pos:end="525:48"><expr pos:start="525:21" pos:end="525:47"><name pos:start="525:21" pos:end="525:22">my</name> <operator pos:start="525:24" pos:end="525:25">+=</operator> <call pos:start="525:27" pos:end="525:47"><name pos:start="525:27" pos:end="525:39">get_se_golomb</name><argument_list pos:start="525:40" pos:end="525:47">(<argument pos:start="525:41" pos:end="525:46"><expr pos:start="525:41" pos:end="525:46"><operator pos:start="525:41" pos:end="525:41">&amp;</operator><name pos:start="525:42" pos:end="525:46"><name pos:start="525:42" pos:end="525:42">s</name><operator pos:start="525:43" pos:end="525:44">-&gt;</operator><name pos:start="525:45" pos:end="525:46">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="527:21" pos:end="527:56"><expr pos:start="527:21" pos:end="527:55"><call pos:start="527:21" pos:end="527:55"><name pos:start="527:21" pos:end="527:27">tprintf</name><argument_list pos:start="527:28" pos:end="527:55">(<argument pos:start="527:29" pos:end="527:46"><expr pos:start="527:29" pos:end="527:46"><literal type="string" pos:start="527:29" pos:end="527:46">"final mv:%d %d\n"</literal></expr></argument>, <argument pos:start="527:49" pos:end="527:50"><expr pos:start="527:49" pos:end="527:50"><name pos:start="527:49" pos:end="527:50">mx</name></expr></argument>, <argument pos:start="527:53" pos:end="527:54"><expr pos:start="527:53" pos:end="527:54"><name pos:start="527:53" pos:end="527:54">my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="531:21" pos:end="531:97"><expr pos:start="531:21" pos:end="531:96"><call pos:start="531:21" pos:end="531:96"><name pos:start="531:21" pos:end="531:34">fill_rectangle</name><argument_list pos:start="531:35" pos:end="531:96">(<argument pos:start="531:36" pos:end="531:64"><expr pos:start="531:36" pos:end="531:64"><name pos:start="531:36" pos:end="531:64"><name pos:start="531:36" pos:end="531:36">h</name><operator pos:start="531:37" pos:end="531:38">-&gt;</operator><name pos:start="531:39" pos:end="531:46">mv_cache</name><index pos:start="531:47" pos:end="531:52">[<expr pos:start="531:48" pos:end="531:51"><name pos:start="531:48" pos:end="531:51">list</name></expr>]</index><index pos:start="531:53" pos:end="531:64">[ <expr pos:start="531:55" pos:end="531:62"><name pos:start="531:55" pos:end="531:62"><name pos:start="531:55" pos:end="531:59">scan8</name><index pos:start="531:60" pos:end="531:62">[<expr pos:start="531:61" pos:end="531:61"><literal type="number" pos:start="531:61" pos:end="531:61">0</literal></expr>]</index></name></expr> ]</index></name></expr></argument>, <argument pos:start="531:67" pos:end="531:67"><expr pos:start="531:67" pos:end="531:67"><literal type="number" pos:start="531:67" pos:end="531:67">4</literal></expr></argument>, <argument pos:start="531:70" pos:end="531:70"><expr pos:start="531:70" pos:end="531:70"><literal type="number" pos:start="531:70" pos:end="531:70">4</literal></expr></argument>, <argument pos:start="531:73" pos:end="531:73"><expr pos:start="531:73" pos:end="531:73"><literal type="number" pos:start="531:73" pos:end="531:73">8</literal></expr></argument>, <argument pos:start="531:76" pos:end="531:92"><expr pos:start="531:76" pos:end="531:92"><call pos:start="531:76" pos:end="531:92"><name pos:start="531:76" pos:end="531:85">pack16to32</name><argument_list pos:start="531:86" pos:end="531:92">(<argument pos:start="531:87" pos:end="531:88"><expr pos:start="531:87" pos:end="531:88"><name pos:start="531:87" pos:end="531:88">mx</name></expr></argument>,<argument pos:start="531:90" pos:end="531:91"><expr pos:start="531:90" pos:end="531:91"><name pos:start="531:90" pos:end="531:91">my</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="531:95" pos:end="531:95"><expr pos:start="531:95" pos:end="531:95"><literal type="number" pos:start="531:95" pos:end="531:95">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if>

        <if type="elseif" pos:start="539:9" pos:end="585:9">else if<condition pos:start="539:16" pos:end="539:33">(<expr pos:start="539:17" pos:end="539:32"><call pos:start="539:17" pos:end="539:32"><name pos:start="539:17" pos:end="539:23">IS_16X8</name><argument_list pos:start="539:24" pos:end="539:32">(<argument pos:start="539:25" pos:end="539:31"><expr pos:start="539:25" pos:end="539:31"><name pos:start="539:25" pos:end="539:31">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="539:34" pos:end="585:9">{<block_content pos:start="541:13" pos:end="583:13">

            <for pos:start="541:13" pos:end="559:13">for<control pos:start="541:16" pos:end="541:39">(<init pos:start="541:17" pos:end="541:23"><expr pos:start="541:17" pos:end="541:22"><name pos:start="541:17" pos:end="541:20">list</name><operator pos:start="541:21" pos:end="541:21">=</operator><literal type="number" pos:start="541:22" pos:end="541:22">0</literal></expr>;</init> <condition pos:start="541:25" pos:end="541:31"><expr pos:start="541:25" pos:end="541:30"><name pos:start="541:25" pos:end="541:28">list</name><operator pos:start="541:29" pos:end="541:29">&lt;</operator><literal type="number" pos:start="541:30" pos:end="541:30">2</literal></expr>;</condition> <incr pos:start="541:33" pos:end="541:38"><expr pos:start="541:33" pos:end="541:38"><name pos:start="541:33" pos:end="541:36">list</name><operator pos:start="541:37" pos:end="541:38">++</operator></expr></incr>)</control><block pos:start="541:40" pos:end="559:13">{<block_content pos:start="543:17" pos:end="557:17">

                <if_stmt pos:start="543:17" pos:end="557:17"><if pos:start="543:17" pos:end="557:17">if<condition pos:start="543:19" pos:end="543:40">(<expr pos:start="543:20" pos:end="543:39"><name pos:start="543:20" pos:end="543:37"><name pos:start="543:20" pos:end="543:20">h</name><operator pos:start="543:21" pos:end="543:22">-&gt;</operator><name pos:start="543:23" pos:end="543:31">ref_count</name><index pos:start="543:32" pos:end="543:37">[<expr pos:start="543:33" pos:end="543:36"><name pos:start="543:33" pos:end="543:36">list</name></expr>]</index></name><operator pos:start="543:38" pos:end="543:38">&gt;</operator><literal type="number" pos:start="543:39" pos:end="543:39">0</literal></expr>)</condition><block pos:start="543:41" pos:end="557:17">{<block_content pos:start="545:21" pos:end="555:21">

                    <for pos:start="545:21" pos:end="555:21">for<control pos:start="545:24" pos:end="545:38">(<init pos:start="545:25" pos:end="545:28"><expr pos:start="545:25" pos:end="545:27"><name pos:start="545:25" pos:end="545:25">i</name><operator pos:start="545:26" pos:end="545:26">=</operator><literal type="number" pos:start="545:27" pos:end="545:27">0</literal></expr>;</init> <condition pos:start="545:30" pos:end="545:33"><expr pos:start="545:30" pos:end="545:32"><name pos:start="545:30" pos:end="545:30">i</name><operator pos:start="545:31" pos:end="545:31">&lt;</operator><literal type="number" pos:start="545:32" pos:end="545:32">2</literal></expr>;</condition> <incr pos:start="545:35" pos:end="545:37"><expr pos:start="545:35" pos:end="545:37"><name pos:start="545:35" pos:end="545:35">i</name><operator pos:start="545:36" pos:end="545:37">++</operator></expr></incr>)</control><block pos:start="545:39" pos:end="555:21">{<block_content pos:start="547:25" pos:end="553:25">

                        <if_stmt pos:start="547:25" pos:end="553:25"><if pos:start="547:25" pos:end="553:25">if<condition pos:start="547:27" pos:end="547:52">(<expr pos:start="547:28" pos:end="547:51"><call pos:start="547:28" pos:end="547:51"><name pos:start="547:28" pos:end="547:33">IS_DIR</name><argument_list pos:start="547:34" pos:end="547:51">(<argument pos:start="547:35" pos:end="547:41"><expr pos:start="547:35" pos:end="547:41"><name pos:start="547:35" pos:end="547:41">mb_type</name></expr></argument>, <argument pos:start="547:44" pos:end="547:44"><expr pos:start="547:44" pos:end="547:44"><name pos:start="547:44" pos:end="547:44">i</name></expr></argument>, <argument pos:start="547:47" pos:end="547:50"><expr pos:start="547:47" pos:end="547:50"><name pos:start="547:47" pos:end="547:50">list</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="547:53" pos:end="553:25">{<block_content pos:start="549:29" pos:end="551:100">

                            <decl_stmt pos:start="549:29" pos:end="549:86"><decl pos:start="549:29" pos:end="549:85"><type pos:start="549:29" pos:end="549:37"><specifier pos:start="549:29" pos:end="549:33">const</specifier> <name pos:start="549:35" pos:end="549:37">int</name></type> <name pos:start="549:39" pos:end="549:41">val</name><init pos:start="549:42" pos:end="549:85">= <expr pos:start="549:44" pos:end="549:85"><call pos:start="549:44" pos:end="549:85"><name pos:start="549:44" pos:end="549:57">get_te0_golomb</name><argument_list pos:start="549:58" pos:end="549:85">(<argument pos:start="549:59" pos:end="549:64"><expr pos:start="549:59" pos:end="549:64"><operator pos:start="549:59" pos:end="549:59">&amp;</operator><name pos:start="549:60" pos:end="549:64"><name pos:start="549:60" pos:end="549:60">s</name><operator pos:start="549:61" pos:end="549:62">-&gt;</operator><name pos:start="549:63" pos:end="549:64">gb</name></name></expr></argument>, <argument pos:start="549:67" pos:end="549:84"><expr pos:start="549:67" pos:end="549:84"><name pos:start="549:67" pos:end="549:84"><name pos:start="549:67" pos:end="549:67">h</name><operator pos:start="549:68" pos:end="549:69">-&gt;</operator><name pos:start="549:70" pos:end="549:78">ref_count</name><index pos:start="549:79" pos:end="549:84">[<expr pos:start="549:80" pos:end="549:83"><name pos:start="549:80" pos:end="549:83">list</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                            <expr_stmt pos:start="551:29" pos:end="551:100"><expr pos:start="551:29" pos:end="551:99"><call pos:start="551:29" pos:end="551:99"><name pos:start="551:29" pos:end="551:42">fill_rectangle</name><argument_list pos:start="551:43" pos:end="551:99">(<argument pos:start="551:44" pos:end="551:81"><expr pos:start="551:44" pos:end="551:81"><operator pos:start="551:44" pos:end="551:44">&amp;</operator><name pos:start="551:45" pos:end="551:81"><name pos:start="551:45" pos:end="551:45">h</name><operator pos:start="551:46" pos:end="551:47">-&gt;</operator><name pos:start="551:48" pos:end="551:56">ref_cache</name><index pos:start="551:57" pos:end="551:62">[<expr pos:start="551:58" pos:end="551:61"><name pos:start="551:58" pos:end="551:61">list</name></expr>]</index><index pos:start="551:63" pos:end="551:81">[ <expr pos:start="551:65" pos:end="551:79"><name pos:start="551:65" pos:end="551:72"><name pos:start="551:65" pos:end="551:69">scan8</name><index pos:start="551:70" pos:end="551:72">[<expr pos:start="551:71" pos:end="551:71"><literal type="number" pos:start="551:71" pos:end="551:71">0</literal></expr>]</index></name> <operator pos:start="551:74" pos:end="551:74">+</operator> <literal type="number" pos:start="551:76" pos:end="551:77">16</literal><operator pos:start="551:78" pos:end="551:78">*</operator><name pos:start="551:79" pos:end="551:79">i</name></expr> ]</index></name></expr></argument>, <argument pos:start="551:84" pos:end="551:84"><expr pos:start="551:84" pos:end="551:84"><literal type="number" pos:start="551:84" pos:end="551:84">4</literal></expr></argument>, <argument pos:start="551:87" pos:end="551:87"><expr pos:start="551:87" pos:end="551:87"><literal type="number" pos:start="551:87" pos:end="551:87">2</literal></expr></argument>, <argument pos:start="551:90" pos:end="551:90"><expr pos:start="551:90" pos:end="551:90"><literal type="number" pos:start="551:90" pos:end="551:90">8</literal></expr></argument>, <argument pos:start="551:93" pos:end="551:95"><expr pos:start="551:93" pos:end="551:95"><name pos:start="551:93" pos:end="551:95">val</name></expr></argument>, <argument pos:start="551:98" pos:end="551:98"><expr pos:start="551:98" pos:end="551:98"><literal type="number" pos:start="551:98" pos:end="551:98">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

            <for pos:start="561:13" pos:end="583:13">for<control pos:start="561:16" pos:end="561:39">(<init pos:start="561:17" pos:end="561:23"><expr pos:start="561:17" pos:end="561:22"><name pos:start="561:17" pos:end="561:20">list</name><operator pos:start="561:21" pos:end="561:21">=</operator><literal type="number" pos:start="561:22" pos:end="561:22">0</literal></expr>;</init> <condition pos:start="561:25" pos:end="561:31"><expr pos:start="561:25" pos:end="561:30"><name pos:start="561:25" pos:end="561:28">list</name><operator pos:start="561:29" pos:end="561:29">&lt;</operator><literal type="number" pos:start="561:30" pos:end="561:30">2</literal></expr>;</condition> <incr pos:start="561:33" pos:end="561:38"><expr pos:start="561:33" pos:end="561:38"><name pos:start="561:33" pos:end="561:36">list</name><operator pos:start="561:37" pos:end="561:38">++</operator></expr></incr>)</control><block pos:start="561:40" pos:end="583:13">{<block_content pos:start="563:17" pos:end="581:17">

                <for pos:start="563:17" pos:end="581:17">for<control pos:start="563:20" pos:end="563:34">(<init pos:start="563:21" pos:end="563:24"><expr pos:start="563:21" pos:end="563:23"><name pos:start="563:21" pos:end="563:21">i</name><operator pos:start="563:22" pos:end="563:22">=</operator><literal type="number" pos:start="563:23" pos:end="563:23">0</literal></expr>;</init> <condition pos:start="563:26" pos:end="563:29"><expr pos:start="563:26" pos:end="563:28"><name pos:start="563:26" pos:end="563:26">i</name><operator pos:start="563:27" pos:end="563:27">&lt;</operator><literal type="number" pos:start="563:28" pos:end="563:28">2</literal></expr>;</condition> <incr pos:start="563:31" pos:end="563:33"><expr pos:start="563:31" pos:end="563:33"><name pos:start="563:31" pos:end="563:31">i</name><operator pos:start="563:32" pos:end="563:33">++</operator></expr></incr>)</control><block pos:start="563:35" pos:end="581:17">{<block_content pos:start="565:21" pos:end="579:21">

                    <if_stmt pos:start="565:21" pos:end="579:21"><if pos:start="565:21" pos:end="579:21">if<condition pos:start="565:23" pos:end="565:48">(<expr pos:start="565:24" pos:end="565:47"><call pos:start="565:24" pos:end="565:47"><name pos:start="565:24" pos:end="565:29">IS_DIR</name><argument_list pos:start="565:30" pos:end="565:47">(<argument pos:start="565:31" pos:end="565:37"><expr pos:start="565:31" pos:end="565:37"><name pos:start="565:31" pos:end="565:37">mb_type</name></expr></argument>, <argument pos:start="565:40" pos:end="565:40"><expr pos:start="565:40" pos:end="565:40"><name pos:start="565:40" pos:end="565:40">i</name></expr></argument>, <argument pos:start="565:43" pos:end="565:46"><expr pos:start="565:43" pos:end="565:46"><name pos:start="565:43" pos:end="565:46">list</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="565:49" pos:end="579:21">{<block_content pos:start="567:25" pos:end="577:108">

                        <expr_stmt pos:start="567:25" pos:end="567:102"><expr pos:start="567:25" pos:end="567:101"><call pos:start="567:25" pos:end="567:101"><name pos:start="567:25" pos:end="567:40">pred_16x8_motion</name><argument_list pos:start="567:41" pos:end="567:101">(<argument pos:start="567:42" pos:end="567:42"><expr pos:start="567:42" pos:end="567:42"><name pos:start="567:42" pos:end="567:42">h</name></expr></argument>, <argument pos:start="567:45" pos:end="567:47"><expr pos:start="567:45" pos:end="567:47"><literal type="number" pos:start="567:45" pos:end="567:45">8</literal><operator pos:start="567:46" pos:end="567:46">*</operator><name pos:start="567:47" pos:end="567:47">i</name></expr></argument>, <argument pos:start="567:50" pos:end="567:53"><expr pos:start="567:50" pos:end="567:53"><name pos:start="567:50" pos:end="567:53">list</name></expr></argument>, <argument pos:start="567:56" pos:end="567:90"><expr pos:start="567:56" pos:end="567:90"><name pos:start="567:56" pos:end="567:90"><name pos:start="567:56" pos:end="567:56">h</name><operator pos:start="567:57" pos:end="567:58">-&gt;</operator><name pos:start="567:59" pos:end="567:67">ref_cache</name><index pos:start="567:68" pos:end="567:73">[<expr pos:start="567:69" pos:end="567:72"><name pos:start="567:69" pos:end="567:72">list</name></expr>]</index><index pos:start="567:74" pos:end="567:90">[<expr pos:start="567:75" pos:end="567:89"><name pos:start="567:75" pos:end="567:82"><name pos:start="567:75" pos:end="567:79">scan8</name><index pos:start="567:80" pos:end="567:82">[<expr pos:start="567:81" pos:end="567:81"><literal type="number" pos:start="567:81" pos:end="567:81">0</literal></expr>]</index></name> <operator pos:start="567:84" pos:end="567:84">+</operator> <literal type="number" pos:start="567:86" pos:end="567:87">16</literal><operator pos:start="567:88" pos:end="567:88">*</operator><name pos:start="567:89" pos:end="567:89">i</name></expr>]</index></name></expr></argument>, <argument pos:start="567:93" pos:end="567:95"><expr pos:start="567:93" pos:end="567:95"><operator pos:start="567:93" pos:end="567:93">&amp;</operator><name pos:start="567:94" pos:end="567:95">mx</name></expr></argument>, <argument pos:start="567:98" pos:end="567:100"><expr pos:start="567:98" pos:end="567:100"><operator pos:start="567:98" pos:end="567:98">&amp;</operator><name pos:start="567:99" pos:end="567:100">my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="569:25" pos:end="569:52"><expr pos:start="569:25" pos:end="569:51"><name pos:start="569:25" pos:end="569:26">mx</name> <operator pos:start="569:28" pos:end="569:29">+=</operator> <call pos:start="569:31" pos:end="569:51"><name pos:start="569:31" pos:end="569:43">get_se_golomb</name><argument_list pos:start="569:44" pos:end="569:51">(<argument pos:start="569:45" pos:end="569:50"><expr pos:start="569:45" pos:end="569:50"><operator pos:start="569:45" pos:end="569:45">&amp;</operator><name pos:start="569:46" pos:end="569:50"><name pos:start="569:46" pos:end="569:46">s</name><operator pos:start="569:47" pos:end="569:48">-&gt;</operator><name pos:start="569:49" pos:end="569:50">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="571:25" pos:end="571:52"><expr pos:start="571:25" pos:end="571:51"><name pos:start="571:25" pos:end="571:26">my</name> <operator pos:start="571:28" pos:end="571:29">+=</operator> <call pos:start="571:31" pos:end="571:51"><name pos:start="571:31" pos:end="571:43">get_se_golomb</name><argument_list pos:start="571:44" pos:end="571:51">(<argument pos:start="571:45" pos:end="571:50"><expr pos:start="571:45" pos:end="571:50"><operator pos:start="571:45" pos:end="571:45">&amp;</operator><name pos:start="571:46" pos:end="571:50"><name pos:start="571:46" pos:end="571:46">s</name><operator pos:start="571:47" pos:end="571:48">-&gt;</operator><name pos:start="571:49" pos:end="571:50">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="573:25" pos:end="573:60"><expr pos:start="573:25" pos:end="573:59"><call pos:start="573:25" pos:end="573:59"><name pos:start="573:25" pos:end="573:31">tprintf</name><argument_list pos:start="573:32" pos:end="573:59">(<argument pos:start="573:33" pos:end="573:50"><expr pos:start="573:33" pos:end="573:50"><literal type="string" pos:start="573:33" pos:end="573:50">"final mv:%d %d\n"</literal></expr></argument>, <argument pos:start="573:53" pos:end="573:54"><expr pos:start="573:53" pos:end="573:54"><name pos:start="573:53" pos:end="573:54">mx</name></expr></argument>, <argument pos:start="573:57" pos:end="573:58"><expr pos:start="573:57" pos:end="573:58"><name pos:start="573:57" pos:end="573:58">my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                        <expr_stmt pos:start="577:25" pos:end="577:108"><expr pos:start="577:25" pos:end="577:107"><call pos:start="577:25" pos:end="577:107"><name pos:start="577:25" pos:end="577:38">fill_rectangle</name><argument_list pos:start="577:39" pos:end="577:107">(<argument pos:start="577:40" pos:end="577:75"><expr pos:start="577:40" pos:end="577:75"><name pos:start="577:40" pos:end="577:75"><name pos:start="577:40" pos:end="577:40">h</name><operator pos:start="577:41" pos:end="577:42">-&gt;</operator><name pos:start="577:43" pos:end="577:50">mv_cache</name><index pos:start="577:51" pos:end="577:56">[<expr pos:start="577:52" pos:end="577:55"><name pos:start="577:52" pos:end="577:55">list</name></expr>]</index><index pos:start="577:57" pos:end="577:75">[ <expr pos:start="577:59" pos:end="577:73"><name pos:start="577:59" pos:end="577:66"><name pos:start="577:59" pos:end="577:63">scan8</name><index pos:start="577:64" pos:end="577:66">[<expr pos:start="577:65" pos:end="577:65"><literal type="number" pos:start="577:65" pos:end="577:65">0</literal></expr>]</index></name> <operator pos:start="577:68" pos:end="577:68">+</operator> <literal type="number" pos:start="577:70" pos:end="577:71">16</literal><operator pos:start="577:72" pos:end="577:72">*</operator><name pos:start="577:73" pos:end="577:73">i</name></expr> ]</index></name></expr></argument>, <argument pos:start="577:78" pos:end="577:78"><expr pos:start="577:78" pos:end="577:78"><literal type="number" pos:start="577:78" pos:end="577:78">4</literal></expr></argument>, <argument pos:start="577:81" pos:end="577:81"><expr pos:start="577:81" pos:end="577:81"><literal type="number" pos:start="577:81" pos:end="577:81">2</literal></expr></argument>, <argument pos:start="577:84" pos:end="577:84"><expr pos:start="577:84" pos:end="577:84"><literal type="number" pos:start="577:84" pos:end="577:84">8</literal></expr></argument>, <argument pos:start="577:87" pos:end="577:103"><expr pos:start="577:87" pos:end="577:103"><call pos:start="577:87" pos:end="577:103"><name pos:start="577:87" pos:end="577:96">pack16to32</name><argument_list pos:start="577:97" pos:end="577:103">(<argument pos:start="577:98" pos:end="577:99"><expr pos:start="577:98" pos:end="577:99"><name pos:start="577:98" pos:end="577:99">mx</name></expr></argument>,<argument pos:start="577:101" pos:end="577:102"><expr pos:start="577:101" pos:end="577:102"><name pos:start="577:101" pos:end="577:102">my</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="577:106" pos:end="577:106"><expr pos:start="577:106" pos:end="577:106"><literal type="number" pos:start="577:106" pos:end="577:106">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>

        </block_content>}</block></if><else pos:start="585:10" pos:end="633:9">else<block pos:start="585:14" pos:end="633:9">{<block_content pos:start="587:13" pos:end="631:13">

            <expr_stmt pos:start="587:13" pos:end="587:37"><expr pos:start="587:13" pos:end="587:36"><call pos:start="587:13" pos:end="587:36"><name pos:start="587:13" pos:end="587:18">assert</name><argument_list pos:start="587:19" pos:end="587:36">(<argument pos:start="587:20" pos:end="587:35"><expr pos:start="587:20" pos:end="587:35"><call pos:start="587:20" pos:end="587:35"><name pos:start="587:20" pos:end="587:26">IS_8X16</name><argument_list pos:start="587:27" pos:end="587:35">(<argument pos:start="587:28" pos:end="587:34"><expr pos:start="587:28" pos:end="587:34"><name pos:start="587:28" pos:end="587:34">mb_type</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="589:13" pos:end="607:13">for<control pos:start="589:16" pos:end="589:39">(<init pos:start="589:17" pos:end="589:23"><expr pos:start="589:17" pos:end="589:22"><name pos:start="589:17" pos:end="589:20">list</name><operator pos:start="589:21" pos:end="589:21">=</operator><literal type="number" pos:start="589:22" pos:end="589:22">0</literal></expr>;</init> <condition pos:start="589:25" pos:end="589:31"><expr pos:start="589:25" pos:end="589:30"><name pos:start="589:25" pos:end="589:28">list</name><operator pos:start="589:29" pos:end="589:29">&lt;</operator><literal type="number" pos:start="589:30" pos:end="589:30">2</literal></expr>;</condition> <incr pos:start="589:33" pos:end="589:38"><expr pos:start="589:33" pos:end="589:38"><name pos:start="589:33" pos:end="589:36">list</name><operator pos:start="589:37" pos:end="589:38">++</operator></expr></incr>)</control><block pos:start="589:40" pos:end="607:13">{<block_content pos:start="591:17" pos:end="605:17">

                <if_stmt pos:start="591:17" pos:end="605:17"><if pos:start="591:17" pos:end="605:17">if<condition pos:start="591:19" pos:end="591:40">(<expr pos:start="591:20" pos:end="591:39"><name pos:start="591:20" pos:end="591:37"><name pos:start="591:20" pos:end="591:20">h</name><operator pos:start="591:21" pos:end="591:22">-&gt;</operator><name pos:start="591:23" pos:end="591:31">ref_count</name><index pos:start="591:32" pos:end="591:37">[<expr pos:start="591:33" pos:end="591:36"><name pos:start="591:33" pos:end="591:36">list</name></expr>]</index></name><operator pos:start="591:38" pos:end="591:38">&gt;</operator><literal type="number" pos:start="591:39" pos:end="591:39">0</literal></expr>)</condition><block pos:start="591:41" pos:end="605:17">{<block_content pos:start="593:21" pos:end="603:21">

                    <for pos:start="593:21" pos:end="603:21">for<control pos:start="593:24" pos:end="593:38">(<init pos:start="593:25" pos:end="593:28"><expr pos:start="593:25" pos:end="593:27"><name pos:start="593:25" pos:end="593:25">i</name><operator pos:start="593:26" pos:end="593:26">=</operator><literal type="number" pos:start="593:27" pos:end="593:27">0</literal></expr>;</init> <condition pos:start="593:30" pos:end="593:33"><expr pos:start="593:30" pos:end="593:32"><name pos:start="593:30" pos:end="593:30">i</name><operator pos:start="593:31" pos:end="593:31">&lt;</operator><literal type="number" pos:start="593:32" pos:end="593:32">2</literal></expr>;</condition> <incr pos:start="593:35" pos:end="593:37"><expr pos:start="593:35" pos:end="593:37"><name pos:start="593:35" pos:end="593:35">i</name><operator pos:start="593:36" pos:end="593:37">++</operator></expr></incr>)</control><block pos:start="593:39" pos:end="603:21">{<block_content pos:start="595:25" pos:end="601:25">

                        <if_stmt pos:start="595:25" pos:end="601:25"><if pos:start="595:25" pos:end="601:25">if<condition pos:start="595:27" pos:end="595:52">(<expr pos:start="595:28" pos:end="595:51"><call pos:start="595:28" pos:end="595:51"><name pos:start="595:28" pos:end="595:33">IS_DIR</name><argument_list pos:start="595:34" pos:end="595:51">(<argument pos:start="595:35" pos:end="595:41"><expr pos:start="595:35" pos:end="595:41"><name pos:start="595:35" pos:end="595:41">mb_type</name></expr></argument>, <argument pos:start="595:44" pos:end="595:44"><expr pos:start="595:44" pos:end="595:44"><name pos:start="595:44" pos:end="595:44">i</name></expr></argument>, <argument pos:start="595:47" pos:end="595:50"><expr pos:start="595:47" pos:end="595:50"><name pos:start="595:47" pos:end="595:50">list</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="595:53" pos:end="601:25">{<block_content pos:start="597:29" pos:end="599:99"> <comment type="line" pos:start="595:55" pos:end="595:70">//FIXME optimize</comment>

                            <decl_stmt pos:start="597:29" pos:end="597:86"><decl pos:start="597:29" pos:end="597:85"><type pos:start="597:29" pos:end="597:37"><specifier pos:start="597:29" pos:end="597:33">const</specifier> <name pos:start="597:35" pos:end="597:37">int</name></type> <name pos:start="597:39" pos:end="597:41">val</name><init pos:start="597:42" pos:end="597:85">= <expr pos:start="597:44" pos:end="597:85"><call pos:start="597:44" pos:end="597:85"><name pos:start="597:44" pos:end="597:57">get_te0_golomb</name><argument_list pos:start="597:58" pos:end="597:85">(<argument pos:start="597:59" pos:end="597:64"><expr pos:start="597:59" pos:end="597:64"><operator pos:start="597:59" pos:end="597:59">&amp;</operator><name pos:start="597:60" pos:end="597:64"><name pos:start="597:60" pos:end="597:60">s</name><operator pos:start="597:61" pos:end="597:62">-&gt;</operator><name pos:start="597:63" pos:end="597:64">gb</name></name></expr></argument>, <argument pos:start="597:67" pos:end="597:84"><expr pos:start="597:67" pos:end="597:84"><name pos:start="597:67" pos:end="597:84"><name pos:start="597:67" pos:end="597:67">h</name><operator pos:start="597:68" pos:end="597:69">-&gt;</operator><name pos:start="597:70" pos:end="597:78">ref_count</name><index pos:start="597:79" pos:end="597:84">[<expr pos:start="597:80" pos:end="597:83"><name pos:start="597:80" pos:end="597:83">list</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                            <expr_stmt pos:start="599:29" pos:end="599:99"><expr pos:start="599:29" pos:end="599:98"><call pos:start="599:29" pos:end="599:98"><name pos:start="599:29" pos:end="599:42">fill_rectangle</name><argument_list pos:start="599:43" pos:end="599:98">(<argument pos:start="599:44" pos:end="599:80"><expr pos:start="599:44" pos:end="599:80"><operator pos:start="599:44" pos:end="599:44">&amp;</operator><name pos:start="599:45" pos:end="599:80"><name pos:start="599:45" pos:end="599:45">h</name><operator pos:start="599:46" pos:end="599:47">-&gt;</operator><name pos:start="599:48" pos:end="599:56">ref_cache</name><index pos:start="599:57" pos:end="599:62">[<expr pos:start="599:58" pos:end="599:61"><name pos:start="599:58" pos:end="599:61">list</name></expr>]</index><index pos:start="599:63" pos:end="599:80">[ <expr pos:start="599:65" pos:end="599:78"><name pos:start="599:65" pos:end="599:72"><name pos:start="599:65" pos:end="599:69">scan8</name><index pos:start="599:70" pos:end="599:72">[<expr pos:start="599:71" pos:end="599:71"><literal type="number" pos:start="599:71" pos:end="599:71">0</literal></expr>]</index></name> <operator pos:start="599:74" pos:end="599:74">+</operator> <literal type="number" pos:start="599:76" pos:end="599:76">2</literal><operator pos:start="599:77" pos:end="599:77">*</operator><name pos:start="599:78" pos:end="599:78">i</name></expr> ]</index></name></expr></argument>, <argument pos:start="599:83" pos:end="599:83"><expr pos:start="599:83" pos:end="599:83"><literal type="number" pos:start="599:83" pos:end="599:83">2</literal></expr></argument>, <argument pos:start="599:86" pos:end="599:86"><expr pos:start="599:86" pos:end="599:86"><literal type="number" pos:start="599:86" pos:end="599:86">4</literal></expr></argument>, <argument pos:start="599:89" pos:end="599:89"><expr pos:start="599:89" pos:end="599:89"><literal type="number" pos:start="599:89" pos:end="599:89">8</literal></expr></argument>, <argument pos:start="599:92" pos:end="599:94"><expr pos:start="599:92" pos:end="599:94"><name pos:start="599:92" pos:end="599:94">val</name></expr></argument>, <argument pos:start="599:97" pos:end="599:97"><expr pos:start="599:97" pos:end="599:97"><literal type="number" pos:start="599:97" pos:end="599:97">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

            <for pos:start="609:13" pos:end="631:13">for<control pos:start="609:16" pos:end="609:39">(<init pos:start="609:17" pos:end="609:23"><expr pos:start="609:17" pos:end="609:22"><name pos:start="609:17" pos:end="609:20">list</name><operator pos:start="609:21" pos:end="609:21">=</operator><literal type="number" pos:start="609:22" pos:end="609:22">0</literal></expr>;</init> <condition pos:start="609:25" pos:end="609:31"><expr pos:start="609:25" pos:end="609:30"><name pos:start="609:25" pos:end="609:28">list</name><operator pos:start="609:29" pos:end="609:29">&lt;</operator><literal type="number" pos:start="609:30" pos:end="609:30">2</literal></expr>;</condition> <incr pos:start="609:33" pos:end="609:38"><expr pos:start="609:33" pos:end="609:38"><name pos:start="609:33" pos:end="609:36">list</name><operator pos:start="609:37" pos:end="609:38">++</operator></expr></incr>)</control><block pos:start="609:40" pos:end="631:13">{<block_content pos:start="611:17" pos:end="629:17">

                <for pos:start="611:17" pos:end="629:17">for<control pos:start="611:20" pos:end="611:34">(<init pos:start="611:21" pos:end="611:24"><expr pos:start="611:21" pos:end="611:23"><name pos:start="611:21" pos:end="611:21">i</name><operator pos:start="611:22" pos:end="611:22">=</operator><literal type="number" pos:start="611:23" pos:end="611:23">0</literal></expr>;</init> <condition pos:start="611:26" pos:end="611:29"><expr pos:start="611:26" pos:end="611:28"><name pos:start="611:26" pos:end="611:26">i</name><operator pos:start="611:27" pos:end="611:27">&lt;</operator><literal type="number" pos:start="611:28" pos:end="611:28">2</literal></expr>;</condition> <incr pos:start="611:31" pos:end="611:33"><expr pos:start="611:31" pos:end="611:33"><name pos:start="611:31" pos:end="611:31">i</name><operator pos:start="611:32" pos:end="611:33">++</operator></expr></incr>)</control><block pos:start="611:35" pos:end="629:17">{<block_content pos:start="613:21" pos:end="627:21">

                    <if_stmt pos:start="613:21" pos:end="627:21"><if pos:start="613:21" pos:end="627:21">if<condition pos:start="613:23" pos:end="613:48">(<expr pos:start="613:24" pos:end="613:47"><call pos:start="613:24" pos:end="613:47"><name pos:start="613:24" pos:end="613:29">IS_DIR</name><argument_list pos:start="613:30" pos:end="613:47">(<argument pos:start="613:31" pos:end="613:37"><expr pos:start="613:31" pos:end="613:37"><name pos:start="613:31" pos:end="613:37">mb_type</name></expr></argument>, <argument pos:start="613:40" pos:end="613:40"><expr pos:start="613:40" pos:end="613:40"><name pos:start="613:40" pos:end="613:40">i</name></expr></argument>, <argument pos:start="613:43" pos:end="613:46"><expr pos:start="613:43" pos:end="613:46"><name pos:start="613:43" pos:end="613:46">list</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="613:49" pos:end="627:21">{<block_content pos:start="615:25" pos:end="625:107">

                        <expr_stmt pos:start="615:25" pos:end="615:103"><expr pos:start="615:25" pos:end="615:102"><call pos:start="615:25" pos:end="615:102"><name pos:start="615:25" pos:end="615:40">pred_8x16_motion</name><argument_list pos:start="615:41" pos:end="615:102">(<argument pos:start="615:42" pos:end="615:42"><expr pos:start="615:42" pos:end="615:42"><name pos:start="615:42" pos:end="615:42">h</name></expr></argument>, <argument pos:start="615:45" pos:end="615:47"><expr pos:start="615:45" pos:end="615:47"><name pos:start="615:45" pos:end="615:45">i</name><operator pos:start="615:46" pos:end="615:46">*</operator><literal type="number" pos:start="615:47" pos:end="615:47">4</literal></expr></argument>, <argument pos:start="615:50" pos:end="615:53"><expr pos:start="615:50" pos:end="615:53"><name pos:start="615:50" pos:end="615:53">list</name></expr></argument>, <argument pos:start="615:56" pos:end="615:91"><expr pos:start="615:56" pos:end="615:91"><name pos:start="615:56" pos:end="615:91"><name pos:start="615:56" pos:end="615:56">h</name><operator pos:start="615:57" pos:end="615:58">-&gt;</operator><name pos:start="615:59" pos:end="615:67">ref_cache</name><index pos:start="615:68" pos:end="615:73">[<expr pos:start="615:69" pos:end="615:72"><name pos:start="615:69" pos:end="615:72">list</name></expr>]</index><index pos:start="615:74" pos:end="615:91">[ <expr pos:start="615:76" pos:end="615:89"><name pos:start="615:76" pos:end="615:83"><name pos:start="615:76" pos:end="615:80">scan8</name><index pos:start="615:81" pos:end="615:83">[<expr pos:start="615:82" pos:end="615:82"><literal type="number" pos:start="615:82" pos:end="615:82">0</literal></expr>]</index></name> <operator pos:start="615:85" pos:end="615:85">+</operator> <literal type="number" pos:start="615:87" pos:end="615:87">2</literal><operator pos:start="615:88" pos:end="615:88">*</operator><name pos:start="615:89" pos:end="615:89">i</name></expr> ]</index></name></expr></argument>, <argument pos:start="615:94" pos:end="615:96"><expr pos:start="615:94" pos:end="615:96"><operator pos:start="615:94" pos:end="615:94">&amp;</operator><name pos:start="615:95" pos:end="615:96">mx</name></expr></argument>, <argument pos:start="615:99" pos:end="615:101"><expr pos:start="615:99" pos:end="615:101"><operator pos:start="615:99" pos:end="615:99">&amp;</operator><name pos:start="615:100" pos:end="615:101">my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="617:25" pos:end="617:52"><expr pos:start="617:25" pos:end="617:51"><name pos:start="617:25" pos:end="617:26">mx</name> <operator pos:start="617:28" pos:end="617:29">+=</operator> <call pos:start="617:31" pos:end="617:51"><name pos:start="617:31" pos:end="617:43">get_se_golomb</name><argument_list pos:start="617:44" pos:end="617:51">(<argument pos:start="617:45" pos:end="617:50"><expr pos:start="617:45" pos:end="617:50"><operator pos:start="617:45" pos:end="617:45">&amp;</operator><name pos:start="617:46" pos:end="617:50"><name pos:start="617:46" pos:end="617:46">s</name><operator pos:start="617:47" pos:end="617:48">-&gt;</operator><name pos:start="617:49" pos:end="617:50">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="619:25" pos:end="619:52"><expr pos:start="619:25" pos:end="619:51"><name pos:start="619:25" pos:end="619:26">my</name> <operator pos:start="619:28" pos:end="619:29">+=</operator> <call pos:start="619:31" pos:end="619:51"><name pos:start="619:31" pos:end="619:43">get_se_golomb</name><argument_list pos:start="619:44" pos:end="619:51">(<argument pos:start="619:45" pos:end="619:50"><expr pos:start="619:45" pos:end="619:50"><operator pos:start="619:45" pos:end="619:45">&amp;</operator><name pos:start="619:46" pos:end="619:50"><name pos:start="619:46" pos:end="619:46">s</name><operator pos:start="619:47" pos:end="619:48">-&gt;</operator><name pos:start="619:49" pos:end="619:50">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="621:25" pos:end="621:60"><expr pos:start="621:25" pos:end="621:59"><call pos:start="621:25" pos:end="621:59"><name pos:start="621:25" pos:end="621:31">tprintf</name><argument_list pos:start="621:32" pos:end="621:59">(<argument pos:start="621:33" pos:end="621:50"><expr pos:start="621:33" pos:end="621:50"><literal type="string" pos:start="621:33" pos:end="621:50">"final mv:%d %d\n"</literal></expr></argument>, <argument pos:start="621:53" pos:end="621:54"><expr pos:start="621:53" pos:end="621:54"><name pos:start="621:53" pos:end="621:54">mx</name></expr></argument>, <argument pos:start="621:57" pos:end="621:58"><expr pos:start="621:57" pos:end="621:58"><name pos:start="621:57" pos:end="621:58">my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                        <expr_stmt pos:start="625:25" pos:end="625:107"><expr pos:start="625:25" pos:end="625:106"><call pos:start="625:25" pos:end="625:106"><name pos:start="625:25" pos:end="625:38">fill_rectangle</name><argument_list pos:start="625:39" pos:end="625:106">(<argument pos:start="625:40" pos:end="625:74"><expr pos:start="625:40" pos:end="625:74"><name pos:start="625:40" pos:end="625:74"><name pos:start="625:40" pos:end="625:40">h</name><operator pos:start="625:41" pos:end="625:42">-&gt;</operator><name pos:start="625:43" pos:end="625:50">mv_cache</name><index pos:start="625:51" pos:end="625:56">[<expr pos:start="625:52" pos:end="625:55"><name pos:start="625:52" pos:end="625:55">list</name></expr>]</index><index pos:start="625:57" pos:end="625:74">[ <expr pos:start="625:59" pos:end="625:72"><name pos:start="625:59" pos:end="625:66"><name pos:start="625:59" pos:end="625:63">scan8</name><index pos:start="625:64" pos:end="625:66">[<expr pos:start="625:65" pos:end="625:65"><literal type="number" pos:start="625:65" pos:end="625:65">0</literal></expr>]</index></name> <operator pos:start="625:68" pos:end="625:68">+</operator> <literal type="number" pos:start="625:70" pos:end="625:70">2</literal><operator pos:start="625:71" pos:end="625:71">*</operator><name pos:start="625:72" pos:end="625:72">i</name></expr> ]</index></name></expr></argument>, <argument pos:start="625:77" pos:end="625:77"><expr pos:start="625:77" pos:end="625:77"><literal type="number" pos:start="625:77" pos:end="625:77">2</literal></expr></argument>, <argument pos:start="625:80" pos:end="625:80"><expr pos:start="625:80" pos:end="625:80"><literal type="number" pos:start="625:80" pos:end="625:80">4</literal></expr></argument>, <argument pos:start="625:83" pos:end="625:83"><expr pos:start="625:83" pos:end="625:83"><literal type="number" pos:start="625:83" pos:end="625:83">8</literal></expr></argument>, <argument pos:start="625:86" pos:end="625:102"><expr pos:start="625:86" pos:end="625:102"><call pos:start="625:86" pos:end="625:102"><name pos:start="625:86" pos:end="625:95">pack16to32</name><argument_list pos:start="625:96" pos:end="625:102">(<argument pos:start="625:97" pos:end="625:98"><expr pos:start="625:97" pos:end="625:98"><name pos:start="625:97" pos:end="625:98">mx</name></expr></argument>,<argument pos:start="625:100" pos:end="625:101"><expr pos:start="625:100" pos:end="625:101"><name pos:start="625:100" pos:end="625:101">my</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="625:105" pos:end="625:105"><expr pos:start="625:105" pos:end="625:105"><literal type="number" pos:start="625:105" pos:end="625:105">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    

    <if_stmt pos:start="639:5" pos:end="641:38"><if pos:start="639:5" pos:end="641:38">if<condition pos:start="639:7" pos:end="639:25">(<expr pos:start="639:8" pos:end="639:24"><call pos:start="639:8" pos:end="639:24"><name pos:start="639:8" pos:end="639:15">IS_INTER</name><argument_list pos:start="639:16" pos:end="639:24">(<argument pos:start="639:17" pos:end="639:23"><expr pos:start="639:17" pos:end="639:23"><name pos:start="639:17" pos:end="639:23">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="641:9" pos:end="641:38"><block_content pos:start="641:9" pos:end="641:38">

        <expr_stmt pos:start="641:9" pos:end="641:38"><expr pos:start="641:9" pos:end="641:37"><call pos:start="641:9" pos:end="641:37"><name pos:start="641:9" pos:end="641:25">write_back_motion</name><argument_list pos:start="641:26" pos:end="641:37">(<argument pos:start="641:27" pos:end="641:27"><expr pos:start="641:27" pos:end="641:27"><name pos:start="641:27" pos:end="641:27">h</name></expr></argument>, <argument pos:start="641:30" pos:end="641:36"><expr pos:start="641:30" pos:end="641:36"><name pos:start="641:30" pos:end="641:36">mb_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    

    <if_stmt pos:start="645:5" pos:end="667:5"><if pos:start="645:5" pos:end="667:5">if<condition pos:start="645:7" pos:end="645:31">(<expr pos:start="645:8" pos:end="645:30"><operator pos:start="645:8" pos:end="645:8">!</operator><call pos:start="645:9" pos:end="645:30"><name pos:start="645:9" pos:end="645:21">IS_INTRA16x16</name><argument_list pos:start="645:22" pos:end="645:30">(<argument pos:start="645:23" pos:end="645:29"><expr pos:start="645:23" pos:end="645:29"><name pos:start="645:23" pos:end="645:29">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="645:32" pos:end="667:5">{<block_content pos:start="647:9" pos:end="665:42">

        <expr_stmt pos:start="647:9" pos:end="647:35"><expr pos:start="647:9" pos:end="647:34"><name pos:start="647:9" pos:end="647:11">cbp</name><operator pos:start="647:12" pos:end="647:12">=</operator> <call pos:start="647:14" pos:end="647:34"><name pos:start="647:14" pos:end="647:26">get_ue_golomb</name><argument_list pos:start="647:27" pos:end="647:34">(<argument pos:start="647:28" pos:end="647:33"><expr pos:start="647:28" pos:end="647:33"><operator pos:start="647:28" pos:end="647:28">&amp;</operator><name pos:start="647:29" pos:end="647:33"><name pos:start="647:29" pos:end="647:29">s</name><operator pos:start="647:30" pos:end="647:31">-&gt;</operator><name pos:start="647:32" pos:end="647:33">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="649:9" pos:end="655:9"><if pos:start="649:9" pos:end="655:9">if<condition pos:start="649:11" pos:end="649:20">(<expr pos:start="649:12" pos:end="649:19"><name pos:start="649:12" pos:end="649:14">cbp</name> <operator pos:start="649:16" pos:end="649:16">&gt;</operator> <literal type="number" pos:start="649:18" pos:end="649:19">47</literal></expr>)</condition><block pos:start="649:21" pos:end="655:9">{<block_content pos:start="651:13" pos:end="653:22">

            <expr_stmt pos:start="651:13" pos:end="651:101"><expr pos:start="651:13" pos:end="651:100"><call pos:start="651:13" pos:end="651:100"><name pos:start="651:13" pos:end="651:18">av_log</name><argument_list pos:start="651:19" pos:end="651:100">(<argument pos:start="651:20" pos:end="651:29"><expr pos:start="651:20" pos:end="651:29"><name pos:start="651:20" pos:end="651:29"><name pos:start="651:20" pos:end="651:20">h</name><operator pos:start="651:21" pos:end="651:22">-&gt;</operator><name pos:start="651:23" pos:end="651:23">s</name><operator pos:start="651:24" pos:end="651:24">.</operator><name pos:start="651:25" pos:end="651:29">avctx</name></name></expr></argument>, <argument pos:start="651:32" pos:end="651:43"><expr pos:start="651:32" pos:end="651:43"><name pos:start="651:32" pos:end="651:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="651:46" pos:end="651:76"><expr pos:start="651:46" pos:end="651:76"><literal type="string" pos:start="651:46" pos:end="651:76">"cbp too large (%d) at %d %d\n"</literal></expr></argument>, <argument pos:start="651:79" pos:end="651:81"><expr pos:start="651:79" pos:end="651:81"><name pos:start="651:79" pos:end="651:81">cbp</name></expr></argument>, <argument pos:start="651:84" pos:end="651:90"><expr pos:start="651:84" pos:end="651:90"><name pos:start="651:84" pos:end="651:90"><name pos:start="651:84" pos:end="651:84">s</name><operator pos:start="651:85" pos:end="651:86">-&gt;</operator><name pos:start="651:87" pos:end="651:90">mb_x</name></name></expr></argument>, <argument pos:start="651:93" pos:end="651:99"><expr pos:start="651:93" pos:end="651:99"><name pos:start="651:93" pos:end="651:99"><name pos:start="651:93" pos:end="651:93">s</name><operator pos:start="651:94" pos:end="651:95">-&gt;</operator><name pos:start="651:96" pos:end="651:99">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="653:13" pos:end="653:22">return <expr pos:start="653:20" pos:end="653:21"><operator pos:start="653:20" pos:end="653:20">-</operator><literal type="number" pos:start="653:21" pos:end="653:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        

        <if_stmt pos:start="659:9" pos:end="665:42"><if pos:start="659:9" pos:end="661:45">if<condition pos:start="659:11" pos:end="659:32">(<expr pos:start="659:12" pos:end="659:31"><call pos:start="659:12" pos:end="659:31"><name pos:start="659:12" pos:end="659:22">IS_INTRA4x4</name><argument_list pos:start="659:23" pos:end="659:31">(<argument pos:start="659:24" pos:end="659:30"><expr pos:start="659:24" pos:end="659:30"><name pos:start="659:24" pos:end="659:30">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="661:13" pos:end="661:45"><block_content pos:start="661:13" pos:end="661:45">

            <expr_stmt pos:start="661:13" pos:end="661:45"><expr pos:start="661:13" pos:end="661:44"><name pos:start="661:13" pos:end="661:15">cbp</name><operator pos:start="661:16" pos:end="661:16">=</operator> <name pos:start="661:18" pos:end="661:44"><name pos:start="661:18" pos:end="661:39">golomb_to_intra4x4_cbp</name><index pos:start="661:40" pos:end="661:44">[<expr pos:start="661:41" pos:end="661:43"><name pos:start="661:41" pos:end="661:43">cbp</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="663:9" pos:end="665:42">else<block type="pseudo" pos:start="665:13" pos:end="665:42"><block_content pos:start="665:13" pos:end="665:42">

            <expr_stmt pos:start="665:13" pos:end="665:42"><expr pos:start="665:13" pos:end="665:41"><name pos:start="665:13" pos:end="665:15">cbp</name><operator pos:start="665:16" pos:end="665:16">=</operator> <name pos:start="665:18" pos:end="665:41"><name pos:start="665:18" pos:end="665:36">golomb_to_inter_cbp</name><index pos:start="665:37" pos:end="665:41">[<expr pos:start="665:38" pos:end="665:40"><name pos:start="665:38" pos:end="665:40">cbp</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="671:5" pos:end="849:5"><if pos:start="671:5" pos:end="845:5">if<condition pos:start="671:7" pos:end="671:37">(<expr pos:start="671:8" pos:end="671:36"><name pos:start="671:8" pos:end="671:10">cbp</name> <operator pos:start="671:12" pos:end="671:13">||</operator> <call pos:start="671:15" pos:end="671:36"><name pos:start="671:15" pos:end="671:27">IS_INTRA16x16</name><argument_list pos:start="671:28" pos:end="671:36">(<argument pos:start="671:29" pos:end="671:35"><expr pos:start="671:29" pos:end="671:35"><name pos:start="671:29" pos:end="671:35">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="671:38" pos:end="845:5">{<block_content pos:start="673:9" pos:end="843:9">

        <decl_stmt pos:start="673:9" pos:end="673:35"><decl pos:start="673:9" pos:end="673:16"><type pos:start="673:9" pos:end="673:11"><name pos:start="673:9" pos:end="673:11">int</name></type> <name pos:start="673:13" pos:end="673:16">i8x8</name></decl>, <decl pos:start="673:19" pos:end="673:22"><type ref="prev" pos:start="673:9" pos:end="673:11"/><name pos:start="673:19" pos:end="673:22">i4x4</name></decl>, <decl pos:start="673:25" pos:end="673:34"><type ref="prev" pos:start="673:9" pos:end="673:11"/><name pos:start="673:25" pos:end="673:34">chroma_idx</name></decl>;</decl_stmt>

        <decl_stmt pos:start="675:9" pos:end="675:30"><decl pos:start="675:9" pos:end="675:21"><type pos:start="675:9" pos:end="675:11"><name pos:start="675:9" pos:end="675:11">int</name></type> <name pos:start="675:13" pos:end="675:21">chroma_qp</name></decl>, <decl pos:start="675:24" pos:end="675:29"><type ref="prev" pos:start="675:9" pos:end="675:11"/><name pos:start="675:24" pos:end="675:29">dquant</name></decl>;</decl_stmt>

        <decl_stmt pos:start="677:9" pos:end="677:81"><decl pos:start="677:9" pos:end="677:80"><type pos:start="677:9" pos:end="677:23"><name pos:start="677:9" pos:end="677:21">GetBitContext</name> <modifier pos:start="677:23" pos:end="677:23">*</modifier></type><name pos:start="677:24" pos:end="677:25">gb</name><init pos:start="677:26" pos:end="677:80">= <expr pos:start="677:28" pos:end="677:80"><ternary pos:start="677:28" pos:end="677:80"><condition pos:start="677:28" pos:end="677:46"><expr pos:start="677:28" pos:end="677:44"><call pos:start="677:28" pos:end="677:44"><name pos:start="677:28" pos:end="677:35">IS_INTRA</name><argument_list pos:start="677:36" pos:end="677:44">(<argument pos:start="677:37" pos:end="677:43"><expr pos:start="677:37" pos:end="677:43"><name pos:start="677:37" pos:end="677:43">mb_type</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="677:48" pos:end="677:62"> <expr pos:start="677:48" pos:end="677:62"><name pos:start="677:48" pos:end="677:62"><name pos:start="677:48" pos:end="677:48">h</name><operator pos:start="677:49" pos:end="677:50">-&gt;</operator><name pos:start="677:51" pos:end="677:62">intra_gb_ptr</name></name></expr> </then><else pos:start="677:64" pos:end="677:80">: <expr pos:start="677:66" pos:end="677:80"><name pos:start="677:66" pos:end="677:80"><name pos:start="677:66" pos:end="677:66">h</name><operator pos:start="677:67" pos:end="677:68">-&gt;</operator><name pos:start="677:69" pos:end="677:80">inter_gb_ptr</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="679:9" pos:end="679:38"><decl pos:start="679:9" pos:end="679:27"><type pos:start="679:9" pos:end="679:23"><specifier pos:start="679:9" pos:end="679:13">const</specifier> <name pos:start="679:15" pos:end="679:21">uint8_t</name> <modifier pos:start="679:23" pos:end="679:23">*</modifier></type><name pos:start="679:24" pos:end="679:27">scan</name></decl>, <decl pos:start="679:30" pos:end="679:37"><type ref="prev" pos:start="679:9" pos:end="679:23"><modifier pos:start="679:30" pos:end="679:30">*</modifier></type><name pos:start="679:31" pos:end="679:37">dc_scan</name></decl>;</decl_stmt>

        

<comment type="line" pos:start="683:1" pos:end="683:39">//        fill_non_zero_count_cache(h);</comment>



        <if_stmt pos:start="687:9" pos:end="699:9"><if pos:start="687:9" pos:end="693:9">if<condition pos:start="687:11" pos:end="687:34">(<expr pos:start="687:12" pos:end="687:33"><call pos:start="687:12" pos:end="687:33"><name pos:start="687:12" pos:end="687:24">IS_INTERLACED</name><argument_list pos:start="687:25" pos:end="687:33">(<argument pos:start="687:26" pos:end="687:32"><expr pos:start="687:26" pos:end="687:32"><name pos:start="687:26" pos:end="687:32">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="687:35" pos:end="693:9">{<block_content pos:start="689:13" pos:end="691:40">

            <expr_stmt pos:start="689:13" pos:end="689:29"><expr pos:start="689:13" pos:end="689:28"><name pos:start="689:13" pos:end="689:16">scan</name><operator pos:start="689:17" pos:end="689:17">=</operator> <name pos:start="689:19" pos:end="689:28">field_scan</name></expr>;</expr_stmt>

            <expr_stmt pos:start="691:13" pos:end="691:40"><expr pos:start="691:13" pos:end="691:39"><name pos:start="691:13" pos:end="691:19">dc_scan</name><operator pos:start="691:20" pos:end="691:20">=</operator> <name pos:start="691:22" pos:end="691:39">luma_dc_field_scan</name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="693:10" pos:end="699:9">else<block pos:start="693:14" pos:end="699:9">{<block_content pos:start="695:13" pos:end="697:41">

            <expr_stmt pos:start="695:13" pos:end="695:30"><expr pos:start="695:13" pos:end="695:29"><name pos:start="695:13" pos:end="695:16">scan</name><operator pos:start="695:17" pos:end="695:17">=</operator> <name pos:start="695:19" pos:end="695:29">zigzag_scan</name></expr>;</expr_stmt>

            <expr_stmt pos:start="697:13" pos:end="697:41"><expr pos:start="697:13" pos:end="697:40"><name pos:start="697:13" pos:end="697:19">dc_scan</name><operator pos:start="697:20" pos:end="697:20">=</operator> <name pos:start="697:22" pos:end="697:40">luma_dc_zigzag_scan</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="703:9" pos:end="703:38"><expr pos:start="703:9" pos:end="703:37"><name pos:start="703:9" pos:end="703:14">dquant</name><operator pos:start="703:15" pos:end="703:15">=</operator> <call pos:start="703:17" pos:end="703:37"><name pos:start="703:17" pos:end="703:29">get_se_golomb</name><argument_list pos:start="703:30" pos:end="703:37">(<argument pos:start="703:31" pos:end="703:36"><expr pos:start="703:31" pos:end="703:36"><operator pos:start="703:31" pos:end="703:31">&amp;</operator><name pos:start="703:32" pos:end="703:36"><name pos:start="703:32" pos:end="703:32">s</name><operator pos:start="703:33" pos:end="703:34">-&gt;</operator><name pos:start="703:35" pos:end="703:36">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="707:9" pos:end="713:9"><if pos:start="707:9" pos:end="713:9">if<condition pos:start="707:11" pos:end="707:41">( <expr pos:start="707:13" pos:end="707:39"><name pos:start="707:13" pos:end="707:18">dquant</name> <operator pos:start="707:20" pos:end="707:20">&gt;</operator> <literal type="number" pos:start="707:22" pos:end="707:23">25</literal> <operator pos:start="707:25" pos:end="707:26">||</operator> <name pos:start="707:28" pos:end="707:33">dquant</name> <operator pos:start="707:35" pos:end="707:35">&lt;</operator> <operator pos:start="707:37" pos:end="707:37">-</operator><literal type="number" pos:start="707:38" pos:end="707:39">26</literal></expr> )</condition><block pos:start="707:42" pos:end="713:9">{<block_content pos:start="709:13" pos:end="711:22">

            <expr_stmt pos:start="709:13" pos:end="709:110"><expr pos:start="709:13" pos:end="709:109"><call pos:start="709:13" pos:end="709:109"><name pos:start="709:13" pos:end="709:18">av_log</name><argument_list pos:start="709:19" pos:end="709:109">(<argument pos:start="709:20" pos:end="709:29"><expr pos:start="709:20" pos:end="709:29"><name pos:start="709:20" pos:end="709:29"><name pos:start="709:20" pos:end="709:20">h</name><operator pos:start="709:21" pos:end="709:22">-&gt;</operator><name pos:start="709:23" pos:end="709:23">s</name><operator pos:start="709:24" pos:end="709:24">.</operator><name pos:start="709:25" pos:end="709:29">avctx</name></name></expr></argument>, <argument pos:start="709:32" pos:end="709:43"><expr pos:start="709:32" pos:end="709:43"><name pos:start="709:32" pos:end="709:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="709:46" pos:end="709:82"><expr pos:start="709:46" pos:end="709:82"><literal type="string" pos:start="709:46" pos:end="709:82">"dquant out of range (%d) at %d %d\n"</literal></expr></argument>, <argument pos:start="709:85" pos:end="709:90"><expr pos:start="709:85" pos:end="709:90"><name pos:start="709:85" pos:end="709:90">dquant</name></expr></argument>, <argument pos:start="709:93" pos:end="709:99"><expr pos:start="709:93" pos:end="709:99"><name pos:start="709:93" pos:end="709:99"><name pos:start="709:93" pos:end="709:93">s</name><operator pos:start="709:94" pos:end="709:95">-&gt;</operator><name pos:start="709:96" pos:end="709:99">mb_x</name></name></expr></argument>, <argument pos:start="709:102" pos:end="709:108"><expr pos:start="709:102" pos:end="709:108"><name pos:start="709:102" pos:end="709:108"><name pos:start="709:102" pos:end="709:102">s</name><operator pos:start="709:103" pos:end="709:104">-&gt;</operator><name pos:start="709:105" pos:end="709:108">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="711:13" pos:end="711:22">return <expr pos:start="711:20" pos:end="711:21"><operator pos:start="711:20" pos:end="711:20">-</operator><literal type="number" pos:start="711:21" pos:end="711:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        

        <expr_stmt pos:start="717:9" pos:end="717:28"><expr pos:start="717:9" pos:end="717:27"><name pos:start="717:9" pos:end="717:17"><name pos:start="717:9" pos:end="717:9">s</name><operator pos:start="717:10" pos:end="717:11">-&gt;</operator><name pos:start="717:12" pos:end="717:17">qscale</name></name> <operator pos:start="717:19" pos:end="717:20">+=</operator> <name pos:start="717:22" pos:end="717:27">dquant</name></expr>;</expr_stmt>

        <if_stmt pos:start="719:9" pos:end="725:9"><if pos:start="719:9" pos:end="725:9">if<condition pos:start="719:11" pos:end="719:38">(<expr pos:start="719:12" pos:end="719:37"><operator pos:start="719:12" pos:end="719:12">(</operator><operator pos:start="719:13" pos:end="719:13">(</operator><name pos:start="719:14" pos:end="719:21">unsigned</name><operator pos:start="719:22" pos:end="719:22">)</operator><name pos:start="719:23" pos:end="719:31"><name pos:start="719:23" pos:end="719:23">s</name><operator pos:start="719:24" pos:end="719:25">-&gt;</operator><name pos:start="719:26" pos:end="719:31">qscale</name></name><operator pos:start="719:32" pos:end="719:32">)</operator> <operator pos:start="719:34" pos:end="719:34">&gt;</operator> <literal type="number" pos:start="719:36" pos:end="719:37">51</literal></expr>)</condition><block pos:start="719:39" pos:end="725:9">{<block_content pos:start="721:13" pos:end="723:43">

            <if_stmt pos:start="721:13" pos:end="723:43"><if pos:start="721:13" pos:end="721:43">if<condition pos:start="721:15" pos:end="721:27">(<expr pos:start="721:16" pos:end="721:26"><name pos:start="721:16" pos:end="721:24"><name pos:start="721:16" pos:end="721:16">s</name><operator pos:start="721:17" pos:end="721:18">-&gt;</operator><name pos:start="721:19" pos:end="721:24">qscale</name></name><operator pos:start="721:25" pos:end="721:25">&lt;</operator><literal type="number" pos:start="721:26" pos:end="721:26">0</literal></expr>)</condition><block type="pseudo" pos:start="721:29" pos:end="721:43"><block_content pos:start="721:29" pos:end="721:43"> <expr_stmt pos:start="721:29" pos:end="721:43"><expr pos:start="721:29" pos:end="721:42"><name pos:start="721:29" pos:end="721:37"><name pos:start="721:29" pos:end="721:29">s</name><operator pos:start="721:30" pos:end="721:31">-&gt;</operator><name pos:start="721:32" pos:end="721:37">qscale</name></name><operator pos:start="721:38" pos:end="721:39">+=</operator> <literal type="number" pos:start="721:41" pos:end="721:42">52</literal></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="723:13" pos:end="723:43">else<block type="pseudo" pos:start="723:29" pos:end="723:43"><block_content pos:start="723:29" pos:end="723:43">            <expr_stmt pos:start="723:29" pos:end="723:43"><expr pos:start="723:29" pos:end="723:42"><name pos:start="723:29" pos:end="723:37"><name pos:start="723:29" pos:end="723:29">s</name><operator pos:start="723:30" pos:end="723:31">-&gt;</operator><name pos:start="723:32" pos:end="723:37">qscale</name></name><operator pos:start="723:38" pos:end="723:39">-=</operator> <literal type="number" pos:start="723:41" pos:end="723:42">52</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        

        <expr_stmt pos:start="729:9" pos:end="729:61"><expr pos:start="729:9" pos:end="729:60"><name pos:start="729:9" pos:end="729:20"><name pos:start="729:9" pos:end="729:9">h</name><operator pos:start="729:10" pos:end="729:11">-&gt;</operator><name pos:start="729:12" pos:end="729:20">chroma_qp</name></name><operator pos:start="729:21" pos:end="729:21">=</operator> <name pos:start="729:23" pos:end="729:31">chroma_qp</name><operator pos:start="729:32" pos:end="729:32">=</operator> <call pos:start="729:34" pos:end="729:60"><name pos:start="729:34" pos:end="729:46">get_chroma_qp</name><argument_list pos:start="729:47" pos:end="729:60">(<argument pos:start="729:48" pos:end="729:48"><expr pos:start="729:48" pos:end="729:48"><name pos:start="729:48" pos:end="729:48">h</name></expr></argument>, <argument pos:start="729:51" pos:end="729:59"><expr pos:start="729:51" pos:end="729:59"><name pos:start="729:51" pos:end="729:59"><name pos:start="729:51" pos:end="729:51">s</name><operator pos:start="729:52" pos:end="729:53">-&gt;</operator><name pos:start="729:54" pos:end="729:59">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="731:9" pos:end="799:9"><if pos:start="731:9" pos:end="769:9">if<condition pos:start="731:11" pos:end="731:34">(<expr pos:start="731:12" pos:end="731:33"><call pos:start="731:12" pos:end="731:33"><name pos:start="731:12" pos:end="731:24">IS_INTRA16x16</name><argument_list pos:start="731:25" pos:end="731:33">(<argument pos:start="731:26" pos:end="731:32"><expr pos:start="731:26" pos:end="731:32"><name pos:start="731:26" pos:end="731:32">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="731:35" pos:end="769:9">{<block_content pos:start="733:13" pos:end="767:13">

            <if_stmt pos:start="733:13" pos:end="737:13"><if pos:start="733:13" pos:end="737:13">if<condition pos:start="733:15" pos:end="733:108">( <expr pos:start="733:17" pos:end="733:107"><call pos:start="733:17" pos:end="733:103"><name pos:start="733:17" pos:end="733:31">decode_residual</name><argument_list pos:start="733:32" pos:end="733:103">(<argument pos:start="733:33" pos:end="733:33"><expr pos:start="733:33" pos:end="733:33"><name pos:start="733:33" pos:end="733:33">h</name></expr></argument>, <argument pos:start="733:36" pos:end="733:50"><expr pos:start="733:36" pos:end="733:50"><name pos:start="733:36" pos:end="733:50"><name pos:start="733:36" pos:end="733:36">h</name><operator pos:start="733:37" pos:end="733:38">-&gt;</operator><name pos:start="733:39" pos:end="733:50">intra_gb_ptr</name></name></expr></argument>, <argument pos:start="733:53" pos:end="733:57"><expr pos:start="733:53" pos:end="733:57"><name pos:start="733:53" pos:end="733:57"><name pos:start="733:53" pos:end="733:53">h</name><operator pos:start="733:54" pos:end="733:55">-&gt;</operator><name pos:start="733:56" pos:end="733:57">mb</name></name></expr></argument>, <argument pos:start="733:60" pos:end="733:78"><expr pos:start="733:60" pos:end="733:78"><name pos:start="733:60" pos:end="733:78">LUMA_DC_BLOCK_INDEX</name></expr></argument>, <argument pos:start="733:81" pos:end="733:87"><expr pos:start="733:81" pos:end="733:87"><name pos:start="733:81" pos:end="733:87">dc_scan</name></expr></argument>, <argument pos:start="733:90" pos:end="733:98"><expr pos:start="733:90" pos:end="733:98"><name pos:start="733:90" pos:end="733:98"><name pos:start="733:90" pos:end="733:90">s</name><operator pos:start="733:91" pos:end="733:92">-&gt;</operator><name pos:start="733:93" pos:end="733:98">qscale</name></name></expr></argument>, <argument pos:start="733:101" pos:end="733:102"><expr pos:start="733:101" pos:end="733:102"><literal type="number" pos:start="733:101" pos:end="733:102">16</literal></expr></argument>)</argument_list></call> <operator pos:start="733:105" pos:end="733:105">&lt;</operator> <literal type="number" pos:start="733:107" pos:end="733:107">0</literal></expr>)</condition><block pos:start="733:109" pos:end="737:13">{<block_content pos:start="735:17" pos:end="735:26">

                <return pos:start="735:17" pos:end="735:26">return <expr pos:start="735:24" pos:end="735:25"><operator pos:start="735:24" pos:end="735:24">-</operator><literal type="number" pos:start="735:25" pos:end="735:25">1</literal></expr>;</return> <comment type="line" pos:start="735:28" pos:end="735:82">//FIXME continue if partotioned and other retirn -1 too</comment>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="741:13" pos:end="741:52"><expr pos:start="741:13" pos:end="741:51"><call pos:start="741:13" pos:end="741:51"><name pos:start="741:13" pos:end="741:18">assert</name><argument_list pos:start="741:19" pos:end="741:51">(<argument pos:start="741:20" pos:end="741:50"><expr pos:start="741:20" pos:end="741:50"><operator pos:start="741:20" pos:end="741:20">(</operator><name pos:start="741:21" pos:end="741:23">cbp</name><operator pos:start="741:24" pos:end="741:24">&amp;</operator><literal type="number" pos:start="741:25" pos:end="741:26">15</literal><operator pos:start="741:27" pos:end="741:27">)</operator> <operator pos:start="741:29" pos:end="741:30">==</operator> <literal type="number" pos:start="741:32" pos:end="741:32">0</literal> <operator pos:start="741:34" pos:end="741:35">||</operator> <operator pos:start="741:37" pos:end="741:37">(</operator><name pos:start="741:38" pos:end="741:40">cbp</name><operator pos:start="741:41" pos:end="741:41">&amp;</operator><literal type="number" pos:start="741:42" pos:end="741:43">15</literal><operator pos:start="741:44" pos:end="741:44">)</operator> <operator pos:start="741:46" pos:end="741:47">==</operator> <literal type="number" pos:start="741:49" pos:end="741:50">15</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="745:13" pos:end="767:13"><if pos:start="745:13" pos:end="763:13">if<condition pos:start="745:15" pos:end="745:22">(<expr pos:start="745:16" pos:end="745:21"><name pos:start="745:16" pos:end="745:18">cbp</name><operator pos:start="745:19" pos:end="745:19">&amp;</operator><literal type="number" pos:start="745:20" pos:end="745:21">15</literal></expr>)</condition><block pos:start="745:23" pos:end="763:13">{<block_content pos:start="747:17" pos:end="761:17">

                <for pos:start="747:17" pos:end="761:17">for<control pos:start="747:20" pos:end="747:43">(<init pos:start="747:21" pos:end="747:27"><expr pos:start="747:21" pos:end="747:26"><name pos:start="747:21" pos:end="747:24">i8x8</name><operator pos:start="747:25" pos:end="747:25">=</operator><literal type="number" pos:start="747:26" pos:end="747:26">0</literal></expr>;</init> <condition pos:start="747:29" pos:end="747:35"><expr pos:start="747:29" pos:end="747:34"><name pos:start="747:29" pos:end="747:32">i8x8</name><operator pos:start="747:33" pos:end="747:33">&lt;</operator><literal type="number" pos:start="747:34" pos:end="747:34">4</literal></expr>;</condition> <incr pos:start="747:37" pos:end="747:42"><expr pos:start="747:37" pos:end="747:42"><name pos:start="747:37" pos:end="747:40">i8x8</name><operator pos:start="747:41" pos:end="747:42">++</operator></expr></incr>)</control><block pos:start="747:44" pos:end="761:17">{<block_content pos:start="749:21" pos:end="759:21">

                    <for pos:start="749:21" pos:end="759:21">for<control pos:start="749:24" pos:end="749:47">(<init pos:start="749:25" pos:end="749:31"><expr pos:start="749:25" pos:end="749:30"><name pos:start="749:25" pos:end="749:28">i4x4</name><operator pos:start="749:29" pos:end="749:29">=</operator><literal type="number" pos:start="749:30" pos:end="749:30">0</literal></expr>;</init> <condition pos:start="749:33" pos:end="749:39"><expr pos:start="749:33" pos:end="749:38"><name pos:start="749:33" pos:end="749:36">i4x4</name><operator pos:start="749:37" pos:end="749:37">&lt;</operator><literal type="number" pos:start="749:38" pos:end="749:38">4</literal></expr>;</condition> <incr pos:start="749:41" pos:end="749:46"><expr pos:start="749:41" pos:end="749:46"><name pos:start="749:41" pos:end="749:44">i4x4</name><operator pos:start="749:45" pos:end="749:46">++</operator></expr></incr>)</control><block pos:start="749:48" pos:end="759:21">{<block_content pos:start="751:25" pos:end="757:25">

                        <decl_stmt pos:start="751:25" pos:end="751:55"><decl pos:start="751:25" pos:end="751:54"><type pos:start="751:25" pos:end="751:33"><specifier pos:start="751:25" pos:end="751:29">const</specifier> <name pos:start="751:31" pos:end="751:33">int</name></type> <name pos:start="751:35" pos:end="751:39">index</name><init pos:start="751:40" pos:end="751:54">= <expr pos:start="751:42" pos:end="751:54"><name pos:start="751:42" pos:end="751:45">i4x4</name> <operator pos:start="751:47" pos:end="751:47">+</operator> <literal type="number" pos:start="751:49" pos:end="751:49">4</literal><operator pos:start="751:50" pos:end="751:50">*</operator><name pos:start="751:51" pos:end="751:54">i8x8</name></expr></init></decl>;</decl_stmt>

                        <if_stmt pos:start="753:25" pos:end="757:25"><if pos:start="753:25" pos:end="757:25">if<condition pos:start="753:27" pos:end="753:119">( <expr pos:start="753:29" pos:end="753:117"><call pos:start="753:29" pos:end="753:113"><name pos:start="753:29" pos:end="753:43">decode_residual</name><argument_list pos:start="753:44" pos:end="753:113">(<argument pos:start="753:45" pos:end="753:45"><expr pos:start="753:45" pos:end="753:45"><name pos:start="753:45" pos:end="753:45">h</name></expr></argument>, <argument pos:start="753:48" pos:end="753:62"><expr pos:start="753:48" pos:end="753:62"><name pos:start="753:48" pos:end="753:62"><name pos:start="753:48" pos:end="753:48">h</name><operator pos:start="753:49" pos:end="753:50">-&gt;</operator><name pos:start="753:51" pos:end="753:62">intra_gb_ptr</name></name></expr></argument>, <argument pos:start="753:65" pos:end="753:80"><expr pos:start="753:65" pos:end="753:80"><name pos:start="753:65" pos:end="753:69"><name pos:start="753:65" pos:end="753:65">h</name><operator pos:start="753:66" pos:end="753:67">-&gt;</operator><name pos:start="753:68" pos:end="753:69">mb</name></name> <operator pos:start="753:71" pos:end="753:71">+</operator> <literal type="number" pos:start="753:73" pos:end="753:74">16</literal><operator pos:start="753:75" pos:end="753:75">*</operator><name pos:start="753:76" pos:end="753:80">index</name></expr></argument>, <argument pos:start="753:83" pos:end="753:87"><expr pos:start="753:83" pos:end="753:87"><name pos:start="753:83" pos:end="753:87">index</name></expr></argument>, <argument pos:start="753:90" pos:end="753:97"><expr pos:start="753:90" pos:end="753:97"><name pos:start="753:90" pos:end="753:93">scan</name> <operator pos:start="753:95" pos:end="753:95">+</operator> <literal type="number" pos:start="753:97" pos:end="753:97">1</literal></expr></argument>, <argument pos:start="753:100" pos:end="753:108"><expr pos:start="753:100" pos:end="753:108"><name pos:start="753:100" pos:end="753:108"><name pos:start="753:100" pos:end="753:100">s</name><operator pos:start="753:101" pos:end="753:102">-&gt;</operator><name pos:start="753:103" pos:end="753:108">qscale</name></name></expr></argument>, <argument pos:start="753:111" pos:end="753:112"><expr pos:start="753:111" pos:end="753:112"><literal type="number" pos:start="753:111" pos:end="753:112">15</literal></expr></argument>)</argument_list></call> <operator pos:start="753:115" pos:end="753:115">&lt;</operator> <literal type="number" pos:start="753:117" pos:end="753:117">0</literal></expr> )</condition><block pos:start="753:120" pos:end="757:25">{<block_content pos:start="755:29" pos:end="755:38">

                            <return pos:start="755:29" pos:end="755:38">return <expr pos:start="755:36" pos:end="755:37"><operator pos:start="755:36" pos:end="755:36">-</operator><literal type="number" pos:start="755:37" pos:end="755:37">1</literal></expr>;</return>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></for>

            </block_content>}</block></if><else pos:start="763:14" pos:end="767:13">else<block pos:start="763:18" pos:end="767:13">{<block_content pos:start="765:17" pos:end="765:82">

                <expr_stmt pos:start="765:17" pos:end="765:82"><expr pos:start="765:17" pos:end="765:81"><call pos:start="765:17" pos:end="765:81"><name pos:start="765:17" pos:end="765:30">fill_rectangle</name><argument_list pos:start="765:31" pos:end="765:81">(<argument pos:start="765:32" pos:end="765:65"><expr pos:start="765:32" pos:end="765:65"><operator pos:start="765:32" pos:end="765:32">&amp;</operator><name pos:start="765:33" pos:end="765:65"><name pos:start="765:33" pos:end="765:33">h</name><operator pos:start="765:34" pos:end="765:35">-&gt;</operator><name pos:start="765:36" pos:end="765:55">non_zero_count_cache</name><index pos:start="765:56" pos:end="765:65">[<expr pos:start="765:57" pos:end="765:64"><name pos:start="765:57" pos:end="765:64"><name pos:start="765:57" pos:end="765:61">scan8</name><index pos:start="765:62" pos:end="765:64">[<expr pos:start="765:63" pos:end="765:63"><literal type="number" pos:start="765:63" pos:end="765:63">0</literal></expr>]</index></name></expr>]</index></name></expr></argument>, <argument pos:start="765:68" pos:end="765:68"><expr pos:start="765:68" pos:end="765:68"><literal type="number" pos:start="765:68" pos:end="765:68">4</literal></expr></argument>, <argument pos:start="765:71" pos:end="765:71"><expr pos:start="765:71" pos:end="765:71"><literal type="number" pos:start="765:71" pos:end="765:71">4</literal></expr></argument>, <argument pos:start="765:74" pos:end="765:74"><expr pos:start="765:74" pos:end="765:74"><literal type="number" pos:start="765:74" pos:end="765:74">8</literal></expr></argument>, <argument pos:start="765:77" pos:end="765:77"><expr pos:start="765:77" pos:end="765:77"><literal type="number" pos:start="765:77" pos:end="765:77">0</literal></expr></argument>, <argument pos:start="765:80" pos:end="765:80"><expr pos:start="765:80" pos:end="765:80"><literal type="number" pos:start="765:80" pos:end="765:80">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if><else pos:start="769:10" pos:end="799:9">else<block pos:start="769:14" pos:end="799:9">{<block_content pos:start="771:13" pos:end="797:13">

            <for pos:start="771:13" pos:end="797:13">for<control pos:start="771:16" pos:end="771:39">(<init pos:start="771:17" pos:end="771:23"><expr pos:start="771:17" pos:end="771:22"><name pos:start="771:17" pos:end="771:20">i8x8</name><operator pos:start="771:21" pos:end="771:21">=</operator><literal type="number" pos:start="771:22" pos:end="771:22">0</literal></expr>;</init> <condition pos:start="771:25" pos:end="771:31"><expr pos:start="771:25" pos:end="771:30"><name pos:start="771:25" pos:end="771:28">i8x8</name><operator pos:start="771:29" pos:end="771:29">&lt;</operator><literal type="number" pos:start="771:30" pos:end="771:30">4</literal></expr>;</condition> <incr pos:start="771:33" pos:end="771:38"><expr pos:start="771:33" pos:end="771:38"><name pos:start="771:33" pos:end="771:36">i8x8</name><operator pos:start="771:37" pos:end="771:38">++</operator></expr></incr>)</control><block pos:start="771:40" pos:end="797:13">{<block_content pos:start="773:17" pos:end="795:17">

                <if_stmt pos:start="773:17" pos:end="795:17"><if pos:start="773:17" pos:end="789:17">if<condition pos:start="773:19" pos:end="773:35">(<expr pos:start="773:20" pos:end="773:34"><name pos:start="773:20" pos:end="773:22">cbp</name> <operator pos:start="773:24" pos:end="773:24">&amp;</operator> <operator pos:start="773:26" pos:end="773:26">(</operator><literal type="number" pos:start="773:27" pos:end="773:27">1</literal><operator pos:start="773:28" pos:end="773:29">&lt;&lt;</operator><name pos:start="773:30" pos:end="773:33">i8x8</name><operator pos:start="773:34" pos:end="773:34">)</operator></expr>)</condition><block pos:start="773:36" pos:end="789:17">{<block_content pos:start="775:21" pos:end="787:21">

                    <for pos:start="775:21" pos:end="787:21">for<control pos:start="775:24" pos:end="775:47">(<init pos:start="775:25" pos:end="775:31"><expr pos:start="775:25" pos:end="775:30"><name pos:start="775:25" pos:end="775:28">i4x4</name><operator pos:start="775:29" pos:end="775:29">=</operator><literal type="number" pos:start="775:30" pos:end="775:30">0</literal></expr>;</init> <condition pos:start="775:33" pos:end="775:39"><expr pos:start="775:33" pos:end="775:38"><name pos:start="775:33" pos:end="775:36">i4x4</name><operator pos:start="775:37" pos:end="775:37">&lt;</operator><literal type="number" pos:start="775:38" pos:end="775:38">4</literal></expr>;</condition> <incr pos:start="775:41" pos:end="775:46"><expr pos:start="775:41" pos:end="775:46"><name pos:start="775:41" pos:end="775:44">i4x4</name><operator pos:start="775:45" pos:end="775:46">++</operator></expr></incr>)</control><block pos:start="775:48" pos:end="787:21">{<block_content pos:start="777:25" pos:end="785:25">

                        <decl_stmt pos:start="777:25" pos:end="777:55"><decl pos:start="777:25" pos:end="777:54"><type pos:start="777:25" pos:end="777:33"><specifier pos:start="777:25" pos:end="777:29">const</specifier> <name pos:start="777:31" pos:end="777:33">int</name></type> <name pos:start="777:35" pos:end="777:39">index</name><init pos:start="777:40" pos:end="777:54">= <expr pos:start="777:42" pos:end="777:54"><name pos:start="777:42" pos:end="777:45">i4x4</name> <operator pos:start="777:47" pos:end="777:47">+</operator> <literal type="number" pos:start="777:49" pos:end="777:49">4</literal><operator pos:start="777:50" pos:end="777:50">*</operator><name pos:start="777:51" pos:end="777:54">i8x8</name></expr></init></decl>;</decl_stmt>

                        

                        <if_stmt pos:start="781:25" pos:end="785:25"><if pos:start="781:25" pos:end="785:25">if<condition pos:start="781:27" pos:end="781:101">( <expr pos:start="781:29" pos:end="781:99"><call pos:start="781:29" pos:end="781:96"><name pos:start="781:29" pos:end="781:43">decode_residual</name><argument_list pos:start="781:44" pos:end="781:96">(<argument pos:start="781:45" pos:end="781:45"><expr pos:start="781:45" pos:end="781:45"><name pos:start="781:45" pos:end="781:45">h</name></expr></argument>, <argument pos:start="781:48" pos:end="781:49"><expr pos:start="781:48" pos:end="781:49"><name pos:start="781:48" pos:end="781:49">gb</name></expr></argument>, <argument pos:start="781:52" pos:end="781:67"><expr pos:start="781:52" pos:end="781:67"><name pos:start="781:52" pos:end="781:56"><name pos:start="781:52" pos:end="781:52">h</name><operator pos:start="781:53" pos:end="781:54">-&gt;</operator><name pos:start="781:55" pos:end="781:56">mb</name></name> <operator pos:start="781:58" pos:end="781:58">+</operator> <literal type="number" pos:start="781:60" pos:end="781:61">16</literal><operator pos:start="781:62" pos:end="781:62">*</operator><name pos:start="781:63" pos:end="781:67">index</name></expr></argument>, <argument pos:start="781:70" pos:end="781:74"><expr pos:start="781:70" pos:end="781:74"><name pos:start="781:70" pos:end="781:74">index</name></expr></argument>, <argument pos:start="781:77" pos:end="781:80"><expr pos:start="781:77" pos:end="781:80"><name pos:start="781:77" pos:end="781:80">scan</name></expr></argument>, <argument pos:start="781:83" pos:end="781:91"><expr pos:start="781:83" pos:end="781:91"><name pos:start="781:83" pos:end="781:91"><name pos:start="781:83" pos:end="781:83">s</name><operator pos:start="781:84" pos:end="781:85">-&gt;</operator><name pos:start="781:86" pos:end="781:91">qscale</name></name></expr></argument>, <argument pos:start="781:94" pos:end="781:95"><expr pos:start="781:94" pos:end="781:95"><literal type="number" pos:start="781:94" pos:end="781:95">16</literal></expr></argument>)</argument_list></call> <operator pos:start="781:98" pos:end="781:98">&lt;</operator><literal type="number" pos:start="781:99" pos:end="781:99">0</literal></expr> )</condition><block pos:start="781:102" pos:end="785:25">{<block_content pos:start="783:29" pos:end="783:38">

                            <return pos:start="783:29" pos:end="783:38">return <expr pos:start="783:36" pos:end="783:37"><operator pos:start="783:36" pos:end="783:36">-</operator><literal type="number" pos:start="783:37" pos:end="783:37">1</literal></expr>;</return>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></if><else pos:start="789:18" pos:end="795:17">else<block pos:start="789:22" pos:end="795:17">{<block_content pos:start="791:21" pos:end="793:58">

                    <decl_stmt pos:start="791:21" pos:end="791:83"><decl pos:start="791:21" pos:end="791:82"><type pos:start="791:21" pos:end="791:35"><name pos:start="791:21" pos:end="791:27">uint8_t</name> <modifier pos:start="791:29" pos:end="791:29">*</modifier> <specifier pos:start="791:31" pos:end="791:35">const</specifier></type> <name pos:start="791:37" pos:end="791:39">nnz</name><init pos:start="791:40" pos:end="791:82">= <expr pos:start="791:42" pos:end="791:82"><operator pos:start="791:42" pos:end="791:42">&amp;</operator><name pos:start="791:43" pos:end="791:82"><name pos:start="791:43" pos:end="791:43">h</name><operator pos:start="791:44" pos:end="791:45">-&gt;</operator><name pos:start="791:46" pos:end="791:65">non_zero_count_cache</name><index pos:start="791:66" pos:end="791:82">[ <expr pos:start="791:68" pos:end="791:80"><name pos:start="791:68" pos:end="791:80"><name pos:start="791:68" pos:end="791:72">scan8</name><index pos:start="791:73" pos:end="791:80">[<expr pos:start="791:74" pos:end="791:79"><literal type="number" pos:start="791:74" pos:end="791:74">4</literal><operator pos:start="791:75" pos:end="791:75">*</operator><name pos:start="791:76" pos:end="791:79">i8x8</name></expr>]</index></name></expr> ]</index></name></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="793:21" pos:end="793:58"><expr pos:start="793:21" pos:end="793:57"><name pos:start="793:21" pos:end="793:26"><name pos:start="793:21" pos:end="793:23">nnz</name><index pos:start="793:24" pos:end="793:26">[<expr pos:start="793:25" pos:end="793:25"><literal type="number" pos:start="793:25" pos:end="793:25">0</literal></expr>]</index></name> <operator pos:start="793:28" pos:end="793:28">=</operator> <name pos:start="793:30" pos:end="793:35"><name pos:start="793:30" pos:end="793:32">nnz</name><index pos:start="793:33" pos:end="793:35">[<expr pos:start="793:34" pos:end="793:34"><literal type="number" pos:start="793:34" pos:end="793:34">1</literal></expr>]</index></name> <operator pos:start="793:37" pos:end="793:37">=</operator> <name pos:start="793:39" pos:end="793:44"><name pos:start="793:39" pos:end="793:41">nnz</name><index pos:start="793:42" pos:end="793:44">[<expr pos:start="793:43" pos:end="793:43"><literal type="number" pos:start="793:43" pos:end="793:43">8</literal></expr>]</index></name> <operator pos:start="793:46" pos:end="793:46">=</operator> <name pos:start="793:48" pos:end="793:53"><name pos:start="793:48" pos:end="793:50">nnz</name><index pos:start="793:51" pos:end="793:53">[<expr pos:start="793:52" pos:end="793:52"><literal type="number" pos:start="793:52" pos:end="793:52">9</literal></expr>]</index></name> <operator pos:start="793:55" pos:end="793:55">=</operator> <literal type="number" pos:start="793:57" pos:end="793:57">0</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

        

        <if_stmt pos:start="803:9" pos:end="813:9"><if pos:start="803:9" pos:end="813:9">if<condition pos:start="803:11" pos:end="803:20">(<expr pos:start="803:12" pos:end="803:19"><name pos:start="803:12" pos:end="803:14">cbp</name><operator pos:start="803:15" pos:end="803:15">&amp;</operator><literal type="number" pos:start="803:16" pos:end="803:19">0x30</literal></expr>)</condition><block pos:start="803:21" pos:end="813:9">{<block_content pos:start="805:13" pos:end="811:17">

            <for pos:start="805:13" pos:end="811:17">for<control pos:start="805:16" pos:end="805:57">(<init pos:start="805:17" pos:end="805:29"><expr pos:start="805:17" pos:end="805:28"><name pos:start="805:17" pos:end="805:26">chroma_idx</name><operator pos:start="805:27" pos:end="805:27">=</operator><literal type="number" pos:start="805:28" pos:end="805:28">0</literal></expr>;</init> <condition pos:start="805:31" pos:end="805:43"><expr pos:start="805:31" pos:end="805:42"><name pos:start="805:31" pos:end="805:40">chroma_idx</name><operator pos:start="805:41" pos:end="805:41">&lt;</operator><literal type="number" pos:start="805:42" pos:end="805:42">2</literal></expr>;</condition> <incr pos:start="805:45" pos:end="805:56"><expr pos:start="805:45" pos:end="805:56"><name pos:start="805:45" pos:end="805:54">chroma_idx</name><operator pos:start="805:55" pos:end="805:56">++</operator></expr></incr>)</control><block type="pseudo" pos:start="807:17" pos:end="811:17"><block_content pos:start="807:17" pos:end="811:17">

                <if_stmt pos:start="807:17" pos:end="811:17"><if pos:start="807:17" pos:end="811:17">if<condition pos:start="807:19" pos:end="807:131">( <expr pos:start="807:21" pos:end="807:130"><call pos:start="807:21" pos:end="807:126"><name pos:start="807:21" pos:end="807:35">decode_residual</name><argument_list pos:start="807:36" pos:end="807:126">(<argument pos:start="807:37" pos:end="807:37"><expr pos:start="807:37" pos:end="807:37"><name pos:start="807:37" pos:end="807:37">h</name></expr></argument>, <argument pos:start="807:40" pos:end="807:41"><expr pos:start="807:40" pos:end="807:41"><name pos:start="807:40" pos:end="807:41">gb</name></expr></argument>, <argument pos:start="807:44" pos:end="807:72"><expr pos:start="807:44" pos:end="807:72"><name pos:start="807:44" pos:end="807:48"><name pos:start="807:44" pos:end="807:44">h</name><operator pos:start="807:45" pos:end="807:46">-&gt;</operator><name pos:start="807:47" pos:end="807:48">mb</name></name> <operator pos:start="807:50" pos:end="807:50">+</operator> <literal type="number" pos:start="807:52" pos:end="807:56">256</literal> <operator pos:start="807:56" pos:end="807:56">+</operator> <literal type="number" pos:start="807:58" pos:end="807:59">16</literal><operator pos:start="807:60" pos:end="807:60">*</operator><literal type="number" pos:start="807:61" pos:end="807:61">4</literal><operator pos:start="807:62" pos:end="807:62">*</operator><name pos:start="807:63" pos:end="807:72">chroma_idx</name></expr></argument>, <argument pos:start="807:75" pos:end="807:95"><expr pos:start="807:75" pos:end="807:95"><name pos:start="807:75" pos:end="807:95">CHROMA_DC_BLOCK_INDEX</name></expr></argument>, <argument pos:start="807:98" pos:end="807:111"><expr pos:start="807:98" pos:end="807:111"><name pos:start="807:98" pos:end="807:111">chroma_dc_scan</name></expr></argument>, <argument pos:start="807:114" pos:end="807:122"><expr pos:start="807:114" pos:end="807:122"><name pos:start="807:114" pos:end="807:122">chroma_qp</name></expr></argument>, <argument pos:start="807:125" pos:end="807:125"><expr pos:start="807:125" pos:end="807:125"><literal type="number" pos:start="807:125" pos:end="807:125">4</literal></expr></argument>)</argument_list></call> <operator pos:start="807:128" pos:end="807:128">&lt;</operator> <literal type="number" pos:start="807:130" pos:end="807:130">0</literal></expr>)</condition><block pos:start="807:132" pos:end="811:17">{<block_content pos:start="809:21" pos:end="809:30">

                    <return pos:start="809:21" pos:end="809:30">return <expr pos:start="809:28" pos:end="809:29"><operator pos:start="809:28" pos:end="809:28">-</operator><literal type="number" pos:start="809:29" pos:end="809:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt></block_content></block></for>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="817:9" pos:end="843:9"><if pos:start="817:9" pos:end="835:9">if<condition pos:start="817:11" pos:end="817:20">(<expr pos:start="817:12" pos:end="817:19"><name pos:start="817:12" pos:end="817:14">cbp</name><operator pos:start="817:15" pos:end="817:15">&amp;</operator><literal type="number" pos:start="817:16" pos:end="817:19">0x20</literal></expr>)</condition><block pos:start="817:21" pos:end="835:9">{<block_content pos:start="819:13" pos:end="833:13">

            <for pos:start="819:13" pos:end="833:13">for<control pos:start="819:16" pos:end="819:57">(<init pos:start="819:17" pos:end="819:29"><expr pos:start="819:17" pos:end="819:28"><name pos:start="819:17" pos:end="819:26">chroma_idx</name><operator pos:start="819:27" pos:end="819:27">=</operator><literal type="number" pos:start="819:28" pos:end="819:28">0</literal></expr>;</init> <condition pos:start="819:31" pos:end="819:43"><expr pos:start="819:31" pos:end="819:42"><name pos:start="819:31" pos:end="819:40">chroma_idx</name><operator pos:start="819:41" pos:end="819:41">&lt;</operator><literal type="number" pos:start="819:42" pos:end="819:42">2</literal></expr>;</condition> <incr pos:start="819:45" pos:end="819:56"><expr pos:start="819:45" pos:end="819:56"><name pos:start="819:45" pos:end="819:54">chroma_idx</name><operator pos:start="819:55" pos:end="819:56">++</operator></expr></incr>)</control><block pos:start="819:58" pos:end="833:13">{<block_content pos:start="821:17" pos:end="831:17">

                <for pos:start="821:17" pos:end="831:17">for<control pos:start="821:20" pos:end="821:43">(<init pos:start="821:21" pos:end="821:27"><expr pos:start="821:21" pos:end="821:26"><name pos:start="821:21" pos:end="821:24">i4x4</name><operator pos:start="821:25" pos:end="821:25">=</operator><literal type="number" pos:start="821:26" pos:end="821:26">0</literal></expr>;</init> <condition pos:start="821:29" pos:end="821:35"><expr pos:start="821:29" pos:end="821:34"><name pos:start="821:29" pos:end="821:32">i4x4</name><operator pos:start="821:33" pos:end="821:33">&lt;</operator><literal type="number" pos:start="821:34" pos:end="821:34">4</literal></expr>;</condition> <incr pos:start="821:37" pos:end="821:42"><expr pos:start="821:37" pos:end="821:42"><name pos:start="821:37" pos:end="821:40">i4x4</name><operator pos:start="821:41" pos:end="821:42">++</operator></expr></incr>)</control><block pos:start="821:44" pos:end="831:17">{<block_content pos:start="823:21" pos:end="829:21">

                    <decl_stmt pos:start="823:21" pos:end="823:62"><decl pos:start="823:21" pos:end="823:61"><type pos:start="823:21" pos:end="823:29"><specifier pos:start="823:21" pos:end="823:25">const</specifier> <name pos:start="823:27" pos:end="823:29">int</name></type> <name pos:start="823:31" pos:end="823:35">index</name><init pos:start="823:36" pos:end="823:61">= <expr pos:start="823:38" pos:end="823:61"><literal type="number" pos:start="823:38" pos:end="823:41">16</literal> <operator pos:start="823:41" pos:end="823:41">+</operator> <literal type="number" pos:start="823:43" pos:end="823:43">4</literal><operator pos:start="823:44" pos:end="823:44">*</operator><name pos:start="823:45" pos:end="823:54">chroma_idx</name> <operator pos:start="823:56" pos:end="823:56">+</operator> <name pos:start="823:58" pos:end="823:61">i4x4</name></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="825:21" pos:end="829:21"><if pos:start="825:21" pos:end="829:21">if<condition pos:start="825:23" pos:end="825:101">( <expr pos:start="825:25" pos:end="825:100"><call pos:start="825:25" pos:end="825:96"><name pos:start="825:25" pos:end="825:39">decode_residual</name><argument_list pos:start="825:40" pos:end="825:96">(<argument pos:start="825:41" pos:end="825:41"><expr pos:start="825:41" pos:end="825:41"><name pos:start="825:41" pos:end="825:41">h</name></expr></argument>, <argument pos:start="825:44" pos:end="825:45"><expr pos:start="825:44" pos:end="825:45"><name pos:start="825:44" pos:end="825:45">gb</name></expr></argument>, <argument pos:start="825:48" pos:end="825:63"><expr pos:start="825:48" pos:end="825:63"><name pos:start="825:48" pos:end="825:52"><name pos:start="825:48" pos:end="825:48">h</name><operator pos:start="825:49" pos:end="825:50">-&gt;</operator><name pos:start="825:51" pos:end="825:52">mb</name></name> <operator pos:start="825:54" pos:end="825:54">+</operator> <literal type="number" pos:start="825:56" pos:end="825:57">16</literal><operator pos:start="825:58" pos:end="825:58">*</operator><name pos:start="825:59" pos:end="825:63">index</name></expr></argument>, <argument pos:start="825:66" pos:end="825:70"><expr pos:start="825:66" pos:end="825:70"><name pos:start="825:66" pos:end="825:70">index</name></expr></argument>, <argument pos:start="825:73" pos:end="825:80"><expr pos:start="825:73" pos:end="825:80"><name pos:start="825:73" pos:end="825:76">scan</name> <operator pos:start="825:78" pos:end="825:78">+</operator> <literal type="number" pos:start="825:80" pos:end="825:80">1</literal></expr></argument>, <argument pos:start="825:83" pos:end="825:91"><expr pos:start="825:83" pos:end="825:91"><name pos:start="825:83" pos:end="825:91">chroma_qp</name></expr></argument>, <argument pos:start="825:94" pos:end="825:95"><expr pos:start="825:94" pos:end="825:95"><literal type="number" pos:start="825:94" pos:end="825:95">15</literal></expr></argument>)</argument_list></call> <operator pos:start="825:98" pos:end="825:98">&lt;</operator> <literal type="number" pos:start="825:100" pos:end="825:100">0</literal></expr>)</condition><block pos:start="825:102" pos:end="829:21">{<block_content pos:start="827:25" pos:end="827:34">

                        <return pos:start="827:25" pos:end="827:34">return <expr pos:start="827:32" pos:end="827:33"><operator pos:start="827:32" pos:end="827:32">-</operator><literal type="number" pos:start="827:33" pos:end="827:33">1</literal></expr>;</return>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>

        </block_content>}</block></if><else pos:start="835:10" pos:end="843:9">else<block pos:start="835:14" pos:end="843:9">{<block_content pos:start="837:13" pos:end="841:96">

            <decl_stmt pos:start="837:13" pos:end="837:61"><decl pos:start="837:13" pos:end="837:60"><type pos:start="837:13" pos:end="837:27"><name pos:start="837:13" pos:end="837:19">uint8_t</name> <modifier pos:start="837:21" pos:end="837:21">*</modifier> <specifier pos:start="837:23" pos:end="837:27">const</specifier></type> <name pos:start="837:29" pos:end="837:31">nnz</name><init pos:start="837:32" pos:end="837:60">= <expr pos:start="837:34" pos:end="837:60"><operator pos:start="837:34" pos:end="837:34">&amp;</operator><name pos:start="837:35" pos:end="837:60"><name pos:start="837:35" pos:end="837:35">h</name><operator pos:start="837:36" pos:end="837:37">-&gt;</operator><name pos:start="837:38" pos:end="837:57">non_zero_count_cache</name><index pos:start="837:58" pos:end="837:60">[<expr pos:start="837:59" pos:end="837:59"><literal type="number" pos:start="837:59" pos:end="837:59">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="839:13" pos:end="841:96"><expr pos:start="839:13" pos:end="841:95"><name pos:start="839:13" pos:end="839:30"><name pos:start="839:13" pos:end="839:15">nnz</name><index pos:start="839:16" pos:end="839:30">[ <expr pos:start="839:18" pos:end="839:28"><name pos:start="839:18" pos:end="839:26"><name pos:start="839:18" pos:end="839:22">scan8</name><index pos:start="839:23" pos:end="839:26">[<expr pos:start="839:24" pos:end="839:25"><literal type="number" pos:start="839:24" pos:end="839:25">16</literal></expr>]</index></name><operator pos:start="839:27" pos:end="839:27">+</operator><literal type="number" pos:start="839:28" pos:end="839:28">0</literal></expr> ]</index></name> <operator pos:start="839:32" pos:end="839:32">=</operator> <name pos:start="839:34" pos:end="839:51"><name pos:start="839:34" pos:end="839:36">nnz</name><index pos:start="839:37" pos:end="839:51">[ <expr pos:start="839:39" pos:end="839:49"><name pos:start="839:39" pos:end="839:47"><name pos:start="839:39" pos:end="839:43">scan8</name><index pos:start="839:44" pos:end="839:47">[<expr pos:start="839:45" pos:end="839:46"><literal type="number" pos:start="839:45" pos:end="839:46">16</literal></expr>]</index></name><operator pos:start="839:48" pos:end="839:48">+</operator><literal type="number" pos:start="839:49" pos:end="839:49">1</literal></expr> ]</index></name> <operator pos:start="839:53" pos:end="839:53">=</operator><name pos:start="839:54" pos:end="839:71"><name pos:start="839:54" pos:end="839:56">nnz</name><index pos:start="839:57" pos:end="839:71">[ <expr pos:start="839:59" pos:end="839:69"><name pos:start="839:59" pos:end="839:67"><name pos:start="839:59" pos:end="839:63">scan8</name><index pos:start="839:64" pos:end="839:67">[<expr pos:start="839:65" pos:end="839:66"><literal type="number" pos:start="839:65" pos:end="839:66">16</literal></expr>]</index></name><operator pos:start="839:68" pos:end="839:68">+</operator><literal type="number" pos:start="839:69" pos:end="839:69">8</literal></expr> ]</index></name> <operator pos:start="839:73" pos:end="839:73">=</operator><name pos:start="839:74" pos:end="839:91"><name pos:start="839:74" pos:end="839:76">nnz</name><index pos:start="839:77" pos:end="839:91">[ <expr pos:start="839:79" pos:end="839:89"><name pos:start="839:79" pos:end="839:87"><name pos:start="839:79" pos:end="839:83">scan8</name><index pos:start="839:84" pos:end="839:87">[<expr pos:start="839:85" pos:end="839:86"><literal type="number" pos:start="839:85" pos:end="839:86">16</literal></expr>]</index></name><operator pos:start="839:88" pos:end="839:88">+</operator><literal type="number" pos:start="839:89" pos:end="839:89">9</literal></expr> ]</index></name> <operator pos:start="839:93" pos:end="839:93">=</operator>

            <name pos:start="841:13" pos:end="841:30"><name pos:start="841:13" pos:end="841:15">nnz</name><index pos:start="841:16" pos:end="841:30">[ <expr pos:start="841:18" pos:end="841:28"><name pos:start="841:18" pos:end="841:26"><name pos:start="841:18" pos:end="841:22">scan8</name><index pos:start="841:23" pos:end="841:26">[<expr pos:start="841:24" pos:end="841:25"><literal type="number" pos:start="841:24" pos:end="841:25">20</literal></expr>]</index></name><operator pos:start="841:27" pos:end="841:27">+</operator><literal type="number" pos:start="841:28" pos:end="841:28">0</literal></expr> ]</index></name> <operator pos:start="841:32" pos:end="841:32">=</operator> <name pos:start="841:34" pos:end="841:51"><name pos:start="841:34" pos:end="841:36">nnz</name><index pos:start="841:37" pos:end="841:51">[ <expr pos:start="841:39" pos:end="841:49"><name pos:start="841:39" pos:end="841:47"><name pos:start="841:39" pos:end="841:43">scan8</name><index pos:start="841:44" pos:end="841:47">[<expr pos:start="841:45" pos:end="841:46"><literal type="number" pos:start="841:45" pos:end="841:46">20</literal></expr>]</index></name><operator pos:start="841:48" pos:end="841:48">+</operator><literal type="number" pos:start="841:49" pos:end="841:49">1</literal></expr> ]</index></name> <operator pos:start="841:53" pos:end="841:53">=</operator><name pos:start="841:54" pos:end="841:71"><name pos:start="841:54" pos:end="841:56">nnz</name><index pos:start="841:57" pos:end="841:71">[ <expr pos:start="841:59" pos:end="841:69"><name pos:start="841:59" pos:end="841:67"><name pos:start="841:59" pos:end="841:63">scan8</name><index pos:start="841:64" pos:end="841:67">[<expr pos:start="841:65" pos:end="841:66"><literal type="number" pos:start="841:65" pos:end="841:66">20</literal></expr>]</index></name><operator pos:start="841:68" pos:end="841:68">+</operator><literal type="number" pos:start="841:69" pos:end="841:69">8</literal></expr> ]</index></name> <operator pos:start="841:73" pos:end="841:73">=</operator><name pos:start="841:74" pos:end="841:91"><name pos:start="841:74" pos:end="841:76">nnz</name><index pos:start="841:77" pos:end="841:91">[ <expr pos:start="841:79" pos:end="841:89"><name pos:start="841:79" pos:end="841:87"><name pos:start="841:79" pos:end="841:83">scan8</name><index pos:start="841:84" pos:end="841:87">[<expr pos:start="841:85" pos:end="841:86"><literal type="number" pos:start="841:85" pos:end="841:86">20</literal></expr>]</index></name><operator pos:start="841:88" pos:end="841:88">+</operator><literal type="number" pos:start="841:89" pos:end="841:89">9</literal></expr> ]</index></name> <operator pos:start="841:93" pos:end="841:93">=</operator> <literal type="number" pos:start="841:95" pos:end="841:95">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if><else pos:start="845:6" pos:end="849:5">else<block pos:start="845:10" pos:end="849:5">{<block_content pos:start="847:9" pos:end="847:52">

        <expr_stmt pos:start="847:9" pos:end="847:52"><expr pos:start="847:9" pos:end="847:51"><call pos:start="847:9" pos:end="847:51"><name pos:start="847:9" pos:end="847:14">memset</name><argument_list pos:start="847:15" pos:end="847:51">(<argument pos:start="847:16" pos:end="847:42"><expr pos:start="847:16" pos:end="847:42"><operator pos:start="847:16" pos:end="847:16">&amp;</operator><name pos:start="847:17" pos:end="847:42"><name pos:start="847:17" pos:end="847:17">h</name><operator pos:start="847:18" pos:end="847:19">-&gt;</operator><name pos:start="847:20" pos:end="847:39">non_zero_count_cache</name><index pos:start="847:40" pos:end="847:42">[<expr pos:start="847:41" pos:end="847:41"><literal type="number" pos:start="847:41" pos:end="847:41">8</literal></expr>]</index></name></expr></argument>, <argument pos:start="847:45" pos:end="847:45"><expr pos:start="847:45" pos:end="847:45"><literal type="number" pos:start="847:45" pos:end="847:45">0</literal></expr></argument>, <argument pos:start="847:48" pos:end="847:50"><expr pos:start="847:48" pos:end="847:50"><literal type="number" pos:start="847:48" pos:end="847:48">8</literal><operator pos:start="847:49" pos:end="847:49">*</operator><literal type="number" pos:start="847:50" pos:end="847:50">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="851:5" pos:end="851:54"><expr pos:start="851:5" pos:end="851:53"><name pos:start="851:5" pos:end="851:42"><name pos:start="851:5" pos:end="851:5">s</name><operator pos:start="851:6" pos:end="851:7">-&gt;</operator><name pos:start="851:8" pos:end="851:22">current_picture</name><operator pos:start="851:23" pos:end="851:23">.</operator><name pos:start="851:24" pos:end="851:35">qscale_table</name><index pos:start="851:36" pos:end="851:42">[<expr pos:start="851:37" pos:end="851:41"><name pos:start="851:37" pos:end="851:41">mb_xy</name></expr>]</index></name><operator pos:start="851:43" pos:end="851:43">=</operator> <name pos:start="851:45" pos:end="851:53"><name pos:start="851:45" pos:end="851:45">s</name><operator pos:start="851:46" pos:end="851:47">-&gt;</operator><name pos:start="851:48" pos:end="851:53">qscale</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="853:5" pos:end="853:33"><expr pos:start="853:5" pos:end="853:32"><call pos:start="853:5" pos:end="853:32"><name pos:start="853:5" pos:end="853:29">write_back_non_zero_count</name><argument_list pos:start="853:30" pos:end="853:32">(<argument pos:start="853:31" pos:end="853:31"><expr pos:start="853:31" pos:end="853:31"><name pos:start="853:31" pos:end="853:31">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="857:5" pos:end="857:13">return <expr pos:start="857:12" pos:end="857:12"><literal type="number" pos:start="857:12" pos:end="857:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
