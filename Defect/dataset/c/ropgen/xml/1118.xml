<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1118.c" pos:tabs="8"><function pos:start="1:1" pos:end="367:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">usb_hub_handle_control</name><parameter_list pos:start="1:34" pos:end="3:71">(<parameter pos:start="1:35" pos:end="1:48"><decl pos:start="1:35" pos:end="1:48"><type pos:start="1:35" pos:end="1:48"><name pos:start="1:35" pos:end="1:43">USBDevice</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">dev</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:61"><decl pos:start="1:51" pos:end="1:61"><type pos:start="1:51" pos:end="1:61"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:61">request</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:72"><decl pos:start="1:64" pos:end="1:72"><type pos:start="1:64" pos:end="1:72"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:72">value</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:43"><decl pos:start="3:35" pos:end="3:43"><type pos:start="3:35" pos:end="3:43"><name pos:start="3:35" pos:end="3:37">int</name></type> <name pos:start="3:39" pos:end="3:43">index</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:55"><decl pos:start="3:46" pos:end="3:55"><type pos:start="3:46" pos:end="3:55"><name pos:start="3:46" pos:end="3:48">int</name></type> <name pos:start="3:50" pos:end="3:55">length</name></decl></parameter>, <parameter pos:start="3:58" pos:end="3:70"><decl pos:start="3:58" pos:end="3:70"><type pos:start="3:58" pos:end="3:70"><name pos:start="3:58" pos:end="3:64">uint8_t</name> <modifier pos:start="3:66" pos:end="3:66">*</modifier></type><name pos:start="3:67" pos:end="3:70">data</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="367:1">{<block_content pos:start="7:5" pos:end="365:15">

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">USBHubState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">s</name> <init pos:start="7:20" pos:end="7:39">= <expr pos:start="7:22" pos:end="7:39"><operator pos:start="7:22" pos:end="7:22">(</operator><name pos:start="7:23" pos:end="7:33">USBHubState</name> <operator pos:start="7:35" pos:end="7:35">*</operator><operator pos:start="7:36" pos:end="7:36">)</operator><name pos:start="7:37" pos:end="7:39">dev</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:76"><expr pos:start="13:5" pos:end="13:75"><name pos:start="13:5" pos:end="13:7">ret</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:75"><name pos:start="13:11" pos:end="13:33">usb_desc_handle_control</name><argument_list pos:start="13:34" pos:end="13:75">(<argument pos:start="13:35" pos:end="13:37"><expr pos:start="13:35" pos:end="13:37"><name pos:start="13:35" pos:end="13:37">dev</name></expr></argument>, <argument pos:start="13:40" pos:end="13:46"><expr pos:start="13:40" pos:end="13:46"><name pos:start="13:40" pos:end="13:46">request</name></expr></argument>, <argument pos:start="13:49" pos:end="13:53"><expr pos:start="13:49" pos:end="13:53"><name pos:start="13:49" pos:end="13:53">value</name></expr></argument>, <argument pos:start="13:56" pos:end="13:60"><expr pos:start="13:56" pos:end="13:60"><name pos:start="13:56" pos:end="13:60">index</name></expr></argument>, <argument pos:start="13:63" pos:end="13:68"><expr pos:start="13:63" pos:end="13:68"><name pos:start="13:63" pos:end="13:68">length</name></expr></argument>, <argument pos:start="13:71" pos:end="13:74"><expr pos:start="13:71" pos:end="13:74"><name pos:start="13:71" pos:end="13:74">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:17">(<expr pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:11">ret</name> <operator pos:start="15:13" pos:end="15:14">&gt;=</operator> <literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr>)</condition> <block pos:start="15:19" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:19">

        <return pos:start="17:9" pos:end="17:19">return <expr pos:start="17:16" pos:end="17:18"><name pos:start="17:16" pos:end="17:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="23:5" pos:end="363:5">switch<condition pos:start="23:11" pos:end="23:19">(<expr pos:start="23:12" pos:end="23:18"><name pos:start="23:12" pos:end="23:18">request</name></expr>)</condition> <block pos:start="23:21" pos:end="363:5">{<block_content pos:start="25:5" pos:end="361:14">

    <case pos:start="25:5" pos:end="25:44">case <expr pos:start="25:10" pos:end="25:43"><name pos:start="25:10" pos:end="25:22">DeviceRequest</name> <operator pos:start="25:24" pos:end="25:24">|</operator> <name pos:start="25:26" pos:end="25:43">USB_REQ_GET_STATUS</name></expr>:</case>

        <expr_stmt pos:start="27:9" pos:end="29:61"><expr pos:start="27:9" pos:end="29:60"><name pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:12">data</name><index pos:start="27:13" pos:end="27:15">[<expr pos:start="27:14" pos:end="27:14"><literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>]</index></name> <operator pos:start="27:17" pos:end="27:17">=</operator> <operator pos:start="27:19" pos:end="27:19">(</operator><literal type="number" pos:start="27:20" pos:end="27:20">1</literal> <operator pos:start="27:22" pos:end="27:23">&lt;&lt;</operator> <name pos:start="27:25" pos:end="27:47">USB_DEVICE_SELF_POWERED</name><operator pos:start="27:48" pos:end="27:48">)</operator> <operator pos:start="27:50" pos:end="27:50">|</operator>

            <operator pos:start="29:13" pos:end="29:13">(</operator><name pos:start="29:14" pos:end="29:31"><name pos:start="29:14" pos:end="29:16">dev</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:31">remote_wakeup</name></name> <operator pos:start="29:33" pos:end="29:34">&lt;&lt;</operator> <name pos:start="29:36" pos:end="29:59">USB_DEVICE_REMOTE_WAKEUP</name><operator pos:start="29:60" pos:end="29:60">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:23"><expr pos:start="31:9" pos:end="31:22"><name pos:start="31:9" pos:end="31:15"><name pos:start="31:9" pos:end="31:12">data</name><index pos:start="31:13" pos:end="31:15">[<expr pos:start="31:14" pos:end="31:14"><literal type="number" pos:start="31:14" pos:end="31:14">1</literal></expr>]</index></name> <operator pos:start="31:17" pos:end="31:17">=</operator> <literal type="number" pos:start="31:19" pos:end="31:22">0x00</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:16"><expr pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:11">ret</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <literal type="number" pos:start="33:15" pos:end="33:15">2</literal></expr>;</expr_stmt>

        <break pos:start="35:9" pos:end="35:14">break;</break>

    <case pos:start="37:5" pos:end="37:50">case <expr pos:start="37:10" pos:end="37:49"><name pos:start="37:10" pos:end="37:25">DeviceOutRequest</name> <operator pos:start="37:27" pos:end="37:27">|</operator> <name pos:start="37:29" pos:end="37:49">USB_REQ_CLEAR_FEATURE</name></expr>:</case>

        <if_stmt pos:start="39:9" pos:end="47:9"><if pos:start="39:9" pos:end="43:9">if <condition pos:start="39:12" pos:end="39:46">(<expr pos:start="39:13" pos:end="39:45"><name pos:start="39:13" pos:end="39:17">value</name> <operator pos:start="39:19" pos:end="39:20">==</operator> <name pos:start="39:22" pos:end="39:45">USB_DEVICE_REMOTE_WAKEUP</name></expr>)</condition> <block pos:start="39:48" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:35">

            <expr_stmt pos:start="41:13" pos:end="41:35"><expr pos:start="41:13" pos:end="41:34"><name pos:start="41:13" pos:end="41:30"><name pos:start="41:13" pos:end="41:15">dev</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:30">remote_wakeup</name></name> <operator pos:start="41:32" pos:end="41:32">=</operator> <literal type="number" pos:start="41:34" pos:end="41:34">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="43:11" pos:end="47:9">else <block pos:start="43:16" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:22">

            <goto pos:start="45:13" pos:end="45:22">goto <name pos:start="45:18" pos:end="45:21">fail</name>;</goto>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:16"><expr pos:start="49:9" pos:end="49:15"><name pos:start="49:9" pos:end="49:11">ret</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <literal type="number" pos:start="49:15" pos:end="49:15">0</literal></expr>;</expr_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>

    <case pos:start="53:5" pos:end="53:52">case <expr pos:start="53:10" pos:end="53:51"><name pos:start="53:10" pos:end="53:27">EndpointOutRequest</name> <operator pos:start="53:29" pos:end="53:29">|</operator> <name pos:start="53:31" pos:end="53:51">USB_REQ_CLEAR_FEATURE</name></expr>:</case>

        <if_stmt pos:start="55:9" pos:end="59:9"><if pos:start="55:9" pos:end="59:9">if <condition pos:start="55:12" pos:end="55:40">(<expr pos:start="55:13" pos:end="55:39"><name pos:start="55:13" pos:end="55:17">value</name> <operator pos:start="55:19" pos:end="55:20">==</operator> <literal type="number" pos:start="55:22" pos:end="55:22">0</literal> <operator pos:start="55:24" pos:end="55:25">&amp;&amp;</operator> <name pos:start="55:27" pos:end="55:31">index</name> <operator pos:start="55:33" pos:end="55:34">!=</operator> <literal type="number" pos:start="55:36" pos:end="55:39">0x81</literal></expr>)</condition> <block pos:start="55:42" pos:end="59:9">{<block_content pos:start="57:13" pos:end="57:22"> <comment type="block" pos:start="55:44" pos:end="55:62">/* clear ep halt */</comment>

            <goto pos:start="57:13" pos:end="57:22">goto <name pos:start="57:18" pos:end="57:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:16"><expr pos:start="61:9" pos:end="61:15"><name pos:start="61:9" pos:end="61:11">ret</name> <operator pos:start="61:13" pos:end="61:13">=</operator> <literal type="number" pos:start="61:15" pos:end="61:15">0</literal></expr>;</expr_stmt>

        <break pos:start="63:9" pos:end="63:14">break;</break>

    <case pos:start="65:5" pos:end="65:48">case <expr pos:start="65:10" pos:end="65:47"><name pos:start="65:10" pos:end="65:25">DeviceOutRequest</name> <operator pos:start="65:27" pos:end="65:27">|</operator> <name pos:start="65:29" pos:end="65:47">USB_REQ_SET_FEATURE</name></expr>:</case>

        <if_stmt pos:start="67:9" pos:end="75:9"><if pos:start="67:9" pos:end="71:9">if <condition pos:start="67:12" pos:end="67:46">(<expr pos:start="67:13" pos:end="67:45"><name pos:start="67:13" pos:end="67:17">value</name> <operator pos:start="67:19" pos:end="67:20">==</operator> <name pos:start="67:22" pos:end="67:45">USB_DEVICE_REMOTE_WAKEUP</name></expr>)</condition> <block pos:start="67:48" pos:end="71:9">{<block_content pos:start="69:13" pos:end="69:35">

            <expr_stmt pos:start="69:13" pos:end="69:35"><expr pos:start="69:13" pos:end="69:34"><name pos:start="69:13" pos:end="69:30"><name pos:start="69:13" pos:end="69:15">dev</name><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:30">remote_wakeup</name></name> <operator pos:start="69:32" pos:end="69:32">=</operator> <literal type="number" pos:start="69:34" pos:end="69:34">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="71:11" pos:end="75:9">else <block pos:start="71:16" pos:end="75:9">{<block_content pos:start="73:13" pos:end="73:22">

            <goto pos:start="73:13" pos:end="73:22">goto <name pos:start="73:18" pos:end="73:21">fail</name>;</goto>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:16"><expr pos:start="77:9" pos:end="77:15"><name pos:start="77:9" pos:end="77:11">ret</name> <operator pos:start="77:13" pos:end="77:13">=</operator> <literal type="number" pos:start="77:15" pos:end="77:15">0</literal></expr>;</expr_stmt>

        <break pos:start="79:9" pos:end="79:14">break;</break>

    <case pos:start="81:5" pos:end="81:51">case <expr pos:start="81:10" pos:end="81:50"><name pos:start="81:10" pos:end="81:22">DeviceRequest</name> <operator pos:start="81:24" pos:end="81:24">|</operator> <name pos:start="81:26" pos:end="81:50">USB_REQ_GET_CONFIGURATION</name></expr>:</case>

        <expr_stmt pos:start="83:9" pos:end="83:20"><expr pos:start="83:9" pos:end="83:19"><name pos:start="83:9" pos:end="83:15"><name pos:start="83:9" pos:end="83:12">data</name><index pos:start="83:13" pos:end="83:15">[<expr pos:start="83:14" pos:end="83:14"><literal type="number" pos:start="83:14" pos:end="83:14">0</literal></expr>]</index></name> <operator pos:start="83:17" pos:end="83:17">=</operator> <literal type="number" pos:start="83:19" pos:end="83:19">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:16"><expr pos:start="85:9" pos:end="85:15"><name pos:start="85:9" pos:end="85:11">ret</name> <operator pos:start="85:13" pos:end="85:13">=</operator> <literal type="number" pos:start="85:15" pos:end="85:15">1</literal></expr>;</expr_stmt>

        <break pos:start="87:9" pos:end="87:14">break;</break>

    <case pos:start="89:5" pos:end="89:54">case <expr pos:start="89:10" pos:end="89:53"><name pos:start="89:10" pos:end="89:25">DeviceOutRequest</name> <operator pos:start="89:27" pos:end="89:27">|</operator> <name pos:start="89:29" pos:end="89:53">USB_REQ_SET_CONFIGURATION</name></expr>:</case>

        <expr_stmt pos:start="91:9" pos:end="91:16"><expr pos:start="91:9" pos:end="91:15"><name pos:start="91:9" pos:end="91:11">ret</name> <operator pos:start="91:13" pos:end="91:13">=</operator> <literal type="number" pos:start="91:15" pos:end="91:15">0</literal></expr>;</expr_stmt>

        <break pos:start="93:9" pos:end="93:14">break;</break>

    <case pos:start="95:5" pos:end="95:47">case <expr pos:start="95:10" pos:end="95:46"><name pos:start="95:10" pos:end="95:22">DeviceRequest</name> <operator pos:start="95:24" pos:end="95:24">|</operator> <name pos:start="95:26" pos:end="95:46">USB_REQ_GET_INTERFACE</name></expr>:</case>

        <expr_stmt pos:start="97:9" pos:end="97:20"><expr pos:start="97:9" pos:end="97:19"><name pos:start="97:9" pos:end="97:15"><name pos:start="97:9" pos:end="97:12">data</name><index pos:start="97:13" pos:end="97:15">[<expr pos:start="97:14" pos:end="97:14"><literal type="number" pos:start="97:14" pos:end="97:14">0</literal></expr>]</index></name> <operator pos:start="97:17" pos:end="97:17">=</operator> <literal type="number" pos:start="97:19" pos:end="97:19">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:16"><expr pos:start="99:9" pos:end="99:15"><name pos:start="99:9" pos:end="99:11">ret</name> <operator pos:start="99:13" pos:end="99:13">=</operator> <literal type="number" pos:start="99:15" pos:end="99:15">1</literal></expr>;</expr_stmt>

        <break pos:start="101:9" pos:end="101:14">break;</break>

    <case pos:start="103:5" pos:end="103:50">case <expr pos:start="103:10" pos:end="103:49"><name pos:start="103:10" pos:end="103:25">DeviceOutRequest</name> <operator pos:start="103:27" pos:end="103:27">|</operator> <name pos:start="103:29" pos:end="103:49">USB_REQ_SET_INTERFACE</name></expr>:</case>

        <expr_stmt pos:start="105:9" pos:end="105:16"><expr pos:start="105:9" pos:end="105:15"><name pos:start="105:9" pos:end="105:11">ret</name> <operator pos:start="105:13" pos:end="105:13">=</operator> <literal type="number" pos:start="105:15" pos:end="105:15">0</literal></expr>;</expr_stmt>

        <break pos:start="107:9" pos:end="107:14">break;</break>

        <comment type="block" pos:start="109:9" pos:end="109:35">/* usb specific requests */</comment>

    <case pos:start="111:5" pos:end="111:22">case <expr pos:start="111:10" pos:end="111:21"><name pos:start="111:10" pos:end="111:21">GetHubStatus</name></expr>:</case>

        <expr_stmt pos:start="113:9" pos:end="113:20"><expr pos:start="113:9" pos:end="113:19"><name pos:start="113:9" pos:end="113:15"><name pos:start="113:9" pos:end="113:12">data</name><index pos:start="113:13" pos:end="113:15">[<expr pos:start="113:14" pos:end="113:14"><literal type="number" pos:start="113:14" pos:end="113:14">0</literal></expr>]</index></name> <operator pos:start="113:17" pos:end="113:17">=</operator> <literal type="number" pos:start="113:19" pos:end="113:19">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:20"><expr pos:start="115:9" pos:end="115:19"><name pos:start="115:9" pos:end="115:15"><name pos:start="115:9" pos:end="115:12">data</name><index pos:start="115:13" pos:end="115:15">[<expr pos:start="115:14" pos:end="115:14"><literal type="number" pos:start="115:14" pos:end="115:14">1</literal></expr>]</index></name> <operator pos:start="115:17" pos:end="115:17">=</operator> <literal type="number" pos:start="115:19" pos:end="115:19">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:20"><expr pos:start="117:9" pos:end="117:19"><name pos:start="117:9" pos:end="117:15"><name pos:start="117:9" pos:end="117:12">data</name><index pos:start="117:13" pos:end="117:15">[<expr pos:start="117:14" pos:end="117:14"><literal type="number" pos:start="117:14" pos:end="117:14">2</literal></expr>]</index></name> <operator pos:start="117:17" pos:end="117:17">=</operator> <literal type="number" pos:start="117:19" pos:end="117:19">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:20"><expr pos:start="119:9" pos:end="119:19"><name pos:start="119:9" pos:end="119:15"><name pos:start="119:9" pos:end="119:12">data</name><index pos:start="119:13" pos:end="119:15">[<expr pos:start="119:14" pos:end="119:14"><literal type="number" pos:start="119:14" pos:end="119:14">3</literal></expr>]</index></name> <operator pos:start="119:17" pos:end="119:17">=</operator> <literal type="number" pos:start="119:19" pos:end="119:19">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:16"><expr pos:start="121:9" pos:end="121:15"><name pos:start="121:9" pos:end="121:11">ret</name> <operator pos:start="121:13" pos:end="121:13">=</operator> <literal type="number" pos:start="121:15" pos:end="121:15">4</literal></expr>;</expr_stmt>

        <break pos:start="123:9" pos:end="123:14">break;</break>

    <case pos:start="125:5" pos:end="125:23">case <expr pos:start="125:10" pos:end="125:22"><name pos:start="125:10" pos:end="125:22">GetPortStatus</name></expr>:</case>

        <block pos:start="127:9" pos:end="151:9">{<block_content pos:start="129:13" pos:end="149:20">

            <decl_stmt pos:start="129:13" pos:end="129:39"><decl pos:start="129:13" pos:end="129:38"><type pos:start="129:13" pos:end="129:24"><name pos:start="129:13" pos:end="129:20">unsigned</name> <name pos:start="129:22" pos:end="129:24">int</name></type> <name pos:start="129:26" pos:end="129:26">n</name> <init pos:start="129:28" pos:end="129:38">= <expr pos:start="129:30" pos:end="129:38"><name pos:start="129:30" pos:end="129:34">index</name> <operator pos:start="129:36" pos:end="129:36">-</operator> <literal type="number" pos:start="129:38" pos:end="129:38">1</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="131:13" pos:end="131:29"><decl pos:start="131:13" pos:end="131:28"><type pos:start="131:13" pos:end="131:24"><name pos:start="131:13" pos:end="131:22">USBHubPort</name> <modifier pos:start="131:24" pos:end="131:24">*</modifier></type><name pos:start="131:25" pos:end="131:28">port</name></decl>;</decl_stmt>

            <if_stmt pos:start="133:13" pos:end="137:13"><if pos:start="133:13" pos:end="137:13">if <condition pos:start="133:16" pos:end="133:31">(<expr pos:start="133:17" pos:end="133:30"><name pos:start="133:17" pos:end="133:17">n</name> <operator pos:start="133:19" pos:end="133:20">&gt;=</operator> <name pos:start="133:22" pos:end="133:30">NUM_PORTS</name></expr>)</condition> <block pos:start="133:33" pos:end="137:13">{<block_content pos:start="135:17" pos:end="135:26">

                <goto pos:start="135:17" pos:end="135:26">goto <name pos:start="135:22" pos:end="135:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:32"><expr pos:start="139:13" pos:end="139:31"><name pos:start="139:13" pos:end="139:16">port</name> <operator pos:start="139:18" pos:end="139:18">=</operator> <operator pos:start="139:20" pos:end="139:20">&amp;</operator><name pos:start="139:21" pos:end="139:31"><name pos:start="139:21" pos:end="139:21">s</name><operator pos:start="139:22" pos:end="139:23">-&gt;</operator><name pos:start="139:24" pos:end="139:28">ports</name><index pos:start="139:29" pos:end="139:31">[<expr pos:start="139:30" pos:end="139:30"><name pos:start="139:30" pos:end="139:30">n</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:40"><expr pos:start="141:13" pos:end="141:39"><name pos:start="141:13" pos:end="141:19"><name pos:start="141:13" pos:end="141:16">data</name><index pos:start="141:17" pos:end="141:19">[<expr pos:start="141:18" pos:end="141:18"><literal type="number" pos:start="141:18" pos:end="141:18">0</literal></expr>]</index></name> <operator pos:start="141:21" pos:end="141:21">=</operator> <name pos:start="141:23" pos:end="141:39"><name pos:start="141:23" pos:end="141:26">port</name><operator pos:start="141:27" pos:end="141:28">-&gt;</operator><name pos:start="141:29" pos:end="141:39">wPortStatus</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:45"><expr pos:start="143:13" pos:end="143:44"><name pos:start="143:13" pos:end="143:19"><name pos:start="143:13" pos:end="143:16">data</name><index pos:start="143:17" pos:end="143:19">[<expr pos:start="143:18" pos:end="143:18"><literal type="number" pos:start="143:18" pos:end="143:18">1</literal></expr>]</index></name> <operator pos:start="143:21" pos:end="143:21">=</operator> <name pos:start="143:23" pos:end="143:39"><name pos:start="143:23" pos:end="143:26">port</name><operator pos:start="143:27" pos:end="143:28">-&gt;</operator><name pos:start="143:29" pos:end="143:39">wPortStatus</name></name> <operator pos:start="143:41" pos:end="143:42">&gt;&gt;</operator> <literal type="number" pos:start="143:44" pos:end="143:44">8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:40"><expr pos:start="145:13" pos:end="145:39"><name pos:start="145:13" pos:end="145:19"><name pos:start="145:13" pos:end="145:16">data</name><index pos:start="145:17" pos:end="145:19">[<expr pos:start="145:18" pos:end="145:18"><literal type="number" pos:start="145:18" pos:end="145:18">2</literal></expr>]</index></name> <operator pos:start="145:21" pos:end="145:21">=</operator> <name pos:start="145:23" pos:end="145:39"><name pos:start="145:23" pos:end="145:26">port</name><operator pos:start="145:27" pos:end="145:28">-&gt;</operator><name pos:start="145:29" pos:end="145:39">wPortChange</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:45"><expr pos:start="147:13" pos:end="147:44"><name pos:start="147:13" pos:end="147:19"><name pos:start="147:13" pos:end="147:16">data</name><index pos:start="147:17" pos:end="147:19">[<expr pos:start="147:18" pos:end="147:18"><literal type="number" pos:start="147:18" pos:end="147:18">3</literal></expr>]</index></name> <operator pos:start="147:21" pos:end="147:21">=</operator> <name pos:start="147:23" pos:end="147:39"><name pos:start="147:23" pos:end="147:26">port</name><operator pos:start="147:27" pos:end="147:28">-&gt;</operator><name pos:start="147:29" pos:end="147:39">wPortChange</name></name> <operator pos:start="147:41" pos:end="147:42">&gt;&gt;</operator> <literal type="number" pos:start="147:44" pos:end="147:44">8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:20"><expr pos:start="149:13" pos:end="149:19"><name pos:start="149:13" pos:end="149:15">ret</name> <operator pos:start="149:17" pos:end="149:17">=</operator> <literal type="number" pos:start="149:19" pos:end="149:19">4</literal></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="153:9" pos:end="153:14">break;</break>

    <case pos:start="155:5" pos:end="155:23">case <expr pos:start="155:10" pos:end="155:22"><name pos:start="155:10" pos:end="155:22">SetHubFeature</name></expr>:</case>

    <case pos:start="157:5" pos:end="157:25">case <expr pos:start="157:10" pos:end="157:24"><name pos:start="157:10" pos:end="157:24">ClearHubFeature</name></expr>:</case>

        <if_stmt pos:start="159:9" pos:end="165:9"><if pos:start="159:9" pos:end="161:9">if <condition pos:start="159:12" pos:end="159:37">(<expr pos:start="159:13" pos:end="159:36"><name pos:start="159:13" pos:end="159:17">value</name> <operator pos:start="159:19" pos:end="159:20">==</operator> <literal type="number" pos:start="159:22" pos:end="159:22">0</literal> <operator pos:start="159:24" pos:end="159:25">||</operator> <name pos:start="159:27" pos:end="159:31">value</name> <operator pos:start="159:33" pos:end="159:34">==</operator> <literal type="number" pos:start="159:36" pos:end="159:36">1</literal></expr>)</condition> <block pos:start="159:39" pos:end="161:9">{<block_content>

        </block_content>}</block></if> <else pos:start="161:11" pos:end="165:9">else <block pos:start="161:16" pos:end="165:9">{<block_content pos:start="163:13" pos:end="163:22">

            <goto pos:start="163:13" pos:end="163:22">goto <name pos:start="163:18" pos:end="163:21">fail</name>;</goto>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:16"><expr pos:start="167:9" pos:end="167:15"><name pos:start="167:9" pos:end="167:11">ret</name> <operator pos:start="167:13" pos:end="167:13">=</operator> <literal type="number" pos:start="167:15" pos:end="167:15">0</literal></expr>;</expr_stmt>

        <break pos:start="169:9" pos:end="169:14">break;</break>

    <case pos:start="171:5" pos:end="171:24">case <expr pos:start="171:10" pos:end="171:23"><name pos:start="171:10" pos:end="171:23">SetPortFeature</name></expr>:</case>

        <block pos:start="173:9" pos:end="227:9">{<block_content pos:start="175:13" pos:end="225:20">

            <decl_stmt pos:start="175:13" pos:end="175:39"><decl pos:start="175:13" pos:end="175:38"><type pos:start="175:13" pos:end="175:24"><name pos:start="175:13" pos:end="175:20">unsigned</name> <name pos:start="175:22" pos:end="175:24">int</name></type> <name pos:start="175:26" pos:end="175:26">n</name> <init pos:start="175:28" pos:end="175:38">= <expr pos:start="175:30" pos:end="175:38"><name pos:start="175:30" pos:end="175:34">index</name> <operator pos:start="175:36" pos:end="175:36">-</operator> <literal type="number" pos:start="175:38" pos:end="175:38">1</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="177:13" pos:end="177:29"><decl pos:start="177:13" pos:end="177:28"><type pos:start="177:13" pos:end="177:24"><name pos:start="177:13" pos:end="177:22">USBHubPort</name> <modifier pos:start="177:24" pos:end="177:24">*</modifier></type><name pos:start="177:25" pos:end="177:28">port</name></decl>;</decl_stmt>

            <decl_stmt pos:start="179:13" pos:end="179:27"><decl pos:start="179:13" pos:end="179:26"><type pos:start="179:13" pos:end="179:23"><name pos:start="179:13" pos:end="179:21">USBDevice</name> <modifier pos:start="179:23" pos:end="179:23">*</modifier></type><name pos:start="179:24" pos:end="179:26">dev</name></decl>;</decl_stmt>

            <if_stmt pos:start="181:13" pos:end="185:13"><if pos:start="181:13" pos:end="185:13">if <condition pos:start="181:16" pos:end="181:31">(<expr pos:start="181:17" pos:end="181:30"><name pos:start="181:17" pos:end="181:17">n</name> <operator pos:start="181:19" pos:end="181:20">&gt;=</operator> <name pos:start="181:22" pos:end="181:30">NUM_PORTS</name></expr>)</condition> <block pos:start="181:33" pos:end="185:13">{<block_content pos:start="183:17" pos:end="183:26">

                <goto pos:start="183:17" pos:end="183:26">goto <name pos:start="183:22" pos:end="183:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="187:13" pos:end="187:32"><expr pos:start="187:13" pos:end="187:31"><name pos:start="187:13" pos:end="187:16">port</name> <operator pos:start="187:18" pos:end="187:18">=</operator> <operator pos:start="187:20" pos:end="187:20">&amp;</operator><name pos:start="187:21" pos:end="187:31"><name pos:start="187:21" pos:end="187:21">s</name><operator pos:start="187:22" pos:end="187:23">-&gt;</operator><name pos:start="187:24" pos:end="187:28">ports</name><index pos:start="187:29" pos:end="187:31">[<expr pos:start="187:30" pos:end="187:30"><name pos:start="187:30" pos:end="187:30">n</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="189:13" pos:end="189:33"><expr pos:start="189:13" pos:end="189:32"><name pos:start="189:13" pos:end="189:15">dev</name> <operator pos:start="189:17" pos:end="189:17">=</operator> <name pos:start="189:19" pos:end="189:32"><name pos:start="189:19" pos:end="189:22">port</name><operator pos:start="189:23" pos:end="189:24">-&gt;</operator><name pos:start="189:25" pos:end="189:28">port</name><operator pos:start="189:29" pos:end="189:29">.</operator><name pos:start="189:30" pos:end="189:32">dev</name></name></expr>;</expr_stmt>

            <switch pos:start="191:13" pos:end="223:13">switch<condition pos:start="191:19" pos:end="191:25">(<expr pos:start="191:20" pos:end="191:24"><name pos:start="191:20" pos:end="191:24">value</name></expr>)</condition> <block pos:start="191:27" pos:end="223:13">{<block_content pos:start="193:13" pos:end="221:26">

            <case pos:start="193:13" pos:end="193:30">case <expr pos:start="193:18" pos:end="193:29"><name pos:start="193:18" pos:end="193:29">PORT_SUSPEND</name></expr>:</case>

                <expr_stmt pos:start="195:17" pos:end="195:55"><expr pos:start="195:17" pos:end="195:54"><name pos:start="195:17" pos:end="195:33"><name pos:start="195:17" pos:end="195:20">port</name><operator pos:start="195:21" pos:end="195:22">-&gt;</operator><name pos:start="195:23" pos:end="195:33">wPortStatus</name></name> <operator pos:start="195:35" pos:end="195:36">|=</operator> <name pos:start="195:38" pos:end="195:54">PORT_STAT_SUSPEND</name></expr>;</expr_stmt>

                <break pos:start="197:17" pos:end="197:22">break;</break>

            <case pos:start="199:13" pos:end="199:28">case <expr pos:start="199:18" pos:end="199:27"><name pos:start="199:18" pos:end="199:27">PORT_RESET</name></expr>:</case>

                <if_stmt pos:start="201:17" pos:end="211:17"><if pos:start="201:17" pos:end="211:17">if <condition pos:start="201:20" pos:end="201:24">(<expr pos:start="201:21" pos:end="201:23"><name pos:start="201:21" pos:end="201:23">dev</name></expr>)</condition> <block pos:start="201:26" pos:end="211:17">{<block_content pos:start="203:21" pos:end="209:58">

                    <expr_stmt pos:start="203:21" pos:end="203:53"><expr pos:start="203:21" pos:end="203:52"><call pos:start="203:21" pos:end="203:52"><name pos:start="203:21" pos:end="203:32">usb_send_msg</name><argument_list pos:start="203:33" pos:end="203:52">(<argument pos:start="203:34" pos:end="203:36"><expr pos:start="203:34" pos:end="203:36"><name pos:start="203:34" pos:end="203:36">dev</name></expr></argument>, <argument pos:start="203:39" pos:end="203:51"><expr pos:start="203:39" pos:end="203:51"><name pos:start="203:39" pos:end="203:51">USB_MSG_RESET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="205:21" pos:end="205:59"><expr pos:start="205:21" pos:end="205:58"><name pos:start="205:21" pos:end="205:37"><name pos:start="205:21" pos:end="205:24">port</name><operator pos:start="205:25" pos:end="205:26">-&gt;</operator><name pos:start="205:27" pos:end="205:37">wPortChange</name></name> <operator pos:start="205:39" pos:end="205:40">|=</operator> <name pos:start="205:42" pos:end="205:58">PORT_STAT_C_RESET</name></expr>;</expr_stmt>

                    <comment type="block" pos:start="207:21" pos:end="207:40">/* set enable bit */</comment>

                    <expr_stmt pos:start="209:21" pos:end="209:58"><expr pos:start="209:21" pos:end="209:57"><name pos:start="209:21" pos:end="209:37"><name pos:start="209:21" pos:end="209:24">port</name><operator pos:start="209:25" pos:end="209:26">-&gt;</operator><name pos:start="209:27" pos:end="209:37">wPortStatus</name></name> <operator pos:start="209:39" pos:end="209:40">|=</operator> <name pos:start="209:42" pos:end="209:57">PORT_STAT_ENABLE</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="213:17" pos:end="213:22">break;</break>

            <case pos:start="215:13" pos:end="215:28">case <expr pos:start="215:18" pos:end="215:27"><name pos:start="215:18" pos:end="215:27">PORT_POWER</name></expr>:</case>

                <break pos:start="217:17" pos:end="217:22">break;</break>

            <default pos:start="219:13" pos:end="219:20">default:</default>

                <goto pos:start="221:17" pos:end="221:26">goto <name pos:start="221:22" pos:end="221:25">fail</name>;</goto>

            </block_content>}</block></switch>

            <expr_stmt pos:start="225:13" pos:end="225:20"><expr pos:start="225:13" pos:end="225:19"><name pos:start="225:13" pos:end="225:15">ret</name> <operator pos:start="225:17" pos:end="225:17">=</operator> <literal type="number" pos:start="225:19" pos:end="225:19">0</literal></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="229:9" pos:end="229:14">break;</break>

    <case pos:start="231:5" pos:end="231:26">case <expr pos:start="231:10" pos:end="231:25"><name pos:start="231:10" pos:end="231:25">ClearPortFeature</name></expr>:</case>

        <block pos:start="233:9" pos:end="301:9">{<block_content pos:start="235:13" pos:end="299:20">

            <decl_stmt pos:start="235:13" pos:end="235:39"><decl pos:start="235:13" pos:end="235:38"><type pos:start="235:13" pos:end="235:24"><name pos:start="235:13" pos:end="235:20">unsigned</name> <name pos:start="235:22" pos:end="235:24">int</name></type> <name pos:start="235:26" pos:end="235:26">n</name> <init pos:start="235:28" pos:end="235:38">= <expr pos:start="235:30" pos:end="235:38"><name pos:start="235:30" pos:end="235:34">index</name> <operator pos:start="235:36" pos:end="235:36">-</operator> <literal type="number" pos:start="235:38" pos:end="235:38">1</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="237:13" pos:end="237:29"><decl pos:start="237:13" pos:end="237:28"><type pos:start="237:13" pos:end="237:24"><name pos:start="237:13" pos:end="237:22">USBHubPort</name> <modifier pos:start="237:24" pos:end="237:24">*</modifier></type><name pos:start="237:25" pos:end="237:28">port</name></decl>;</decl_stmt>



            <if_stmt pos:start="241:13" pos:end="245:13"><if pos:start="241:13" pos:end="245:13">if <condition pos:start="241:16" pos:end="241:31">(<expr pos:start="241:17" pos:end="241:30"><name pos:start="241:17" pos:end="241:17">n</name> <operator pos:start="241:19" pos:end="241:20">&gt;=</operator> <name pos:start="241:22" pos:end="241:30">NUM_PORTS</name></expr>)</condition> <block pos:start="241:33" pos:end="245:13">{<block_content pos:start="243:17" pos:end="243:26">

                <goto pos:start="243:17" pos:end="243:26">goto <name pos:start="243:22" pos:end="243:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="247:13" pos:end="247:32"><expr pos:start="247:13" pos:end="247:31"><name pos:start="247:13" pos:end="247:16">port</name> <operator pos:start="247:18" pos:end="247:18">=</operator> <operator pos:start="247:20" pos:end="247:20">&amp;</operator><name pos:start="247:21" pos:end="247:31"><name pos:start="247:21" pos:end="247:21">s</name><operator pos:start="247:22" pos:end="247:23">-&gt;</operator><name pos:start="247:24" pos:end="247:28">ports</name><index pos:start="247:29" pos:end="247:31">[<expr pos:start="247:30" pos:end="247:30"><name pos:start="247:30" pos:end="247:30">n</name></expr>]</index></name></expr>;</expr_stmt>

            <switch pos:start="249:13" pos:end="297:13">switch<condition pos:start="249:19" pos:end="249:25">(<expr pos:start="249:20" pos:end="249:24"><name pos:start="249:20" pos:end="249:24">value</name></expr>)</condition> <block pos:start="249:27" pos:end="297:13">{<block_content pos:start="251:13" pos:end="295:26">

            <case pos:start="251:13" pos:end="251:29">case <expr pos:start="251:18" pos:end="251:28"><name pos:start="251:18" pos:end="251:28">PORT_ENABLE</name></expr>:</case>

                <expr_stmt pos:start="253:17" pos:end="253:55"><expr pos:start="253:17" pos:end="253:54"><name pos:start="253:17" pos:end="253:33"><name pos:start="253:17" pos:end="253:20">port</name><operator pos:start="253:21" pos:end="253:22">-&gt;</operator><name pos:start="253:23" pos:end="253:33">wPortStatus</name></name> <operator pos:start="253:35" pos:end="253:36">&amp;=</operator> <operator pos:start="253:38" pos:end="253:38">~</operator><name pos:start="253:39" pos:end="253:54">PORT_STAT_ENABLE</name></expr>;</expr_stmt>

                <break pos:start="255:17" pos:end="255:22">break;</break>

            <case pos:start="257:13" pos:end="257:31">case <expr pos:start="257:18" pos:end="257:30"><name pos:start="257:18" pos:end="257:30">PORT_C_ENABLE</name></expr>:</case>

                <expr_stmt pos:start="259:17" pos:end="259:57"><expr pos:start="259:17" pos:end="259:56"><name pos:start="259:17" pos:end="259:33"><name pos:start="259:17" pos:end="259:20">port</name><operator pos:start="259:21" pos:end="259:22">-&gt;</operator><name pos:start="259:23" pos:end="259:33">wPortChange</name></name> <operator pos:start="259:35" pos:end="259:36">&amp;=</operator> <operator pos:start="259:38" pos:end="259:38">~</operator><name pos:start="259:39" pos:end="259:56">PORT_STAT_C_ENABLE</name></expr>;</expr_stmt>

                <break pos:start="261:17" pos:end="261:22">break;</break>

            <case pos:start="263:13" pos:end="263:30">case <expr pos:start="263:18" pos:end="263:29"><name pos:start="263:18" pos:end="263:29">PORT_SUSPEND</name></expr>:</case>

                <expr_stmt pos:start="265:17" pos:end="265:56"><expr pos:start="265:17" pos:end="265:55"><name pos:start="265:17" pos:end="265:33"><name pos:start="265:17" pos:end="265:20">port</name><operator pos:start="265:21" pos:end="265:22">-&gt;</operator><name pos:start="265:23" pos:end="265:33">wPortStatus</name></name> <operator pos:start="265:35" pos:end="265:36">&amp;=</operator> <operator pos:start="265:38" pos:end="265:38">~</operator><name pos:start="265:39" pos:end="265:55">PORT_STAT_SUSPEND</name></expr>;</expr_stmt>

                <break pos:start="267:17" pos:end="267:22">break;</break>

            <case pos:start="269:13" pos:end="269:32">case <expr pos:start="269:18" pos:end="269:31"><name pos:start="269:18" pos:end="269:31">PORT_C_SUSPEND</name></expr>:</case>

                <expr_stmt pos:start="271:17" pos:end="271:58"><expr pos:start="271:17" pos:end="271:57"><name pos:start="271:17" pos:end="271:33"><name pos:start="271:17" pos:end="271:20">port</name><operator pos:start="271:21" pos:end="271:22">-&gt;</operator><name pos:start="271:23" pos:end="271:33">wPortChange</name></name> <operator pos:start="271:35" pos:end="271:36">&amp;=</operator> <operator pos:start="271:38" pos:end="271:38">~</operator><name pos:start="271:39" pos:end="271:57">PORT_STAT_C_SUSPEND</name></expr>;</expr_stmt>

                <break pos:start="273:17" pos:end="273:22">break;</break>

            <case pos:start="275:13" pos:end="275:35">case <expr pos:start="275:18" pos:end="275:34"><name pos:start="275:18" pos:end="275:34">PORT_C_CONNECTION</name></expr>:</case>

                <expr_stmt pos:start="277:17" pos:end="277:61"><expr pos:start="277:17" pos:end="277:60"><name pos:start="277:17" pos:end="277:33"><name pos:start="277:17" pos:end="277:20">port</name><operator pos:start="277:21" pos:end="277:22">-&gt;</operator><name pos:start="277:23" pos:end="277:33">wPortChange</name></name> <operator pos:start="277:35" pos:end="277:36">&amp;=</operator> <operator pos:start="277:38" pos:end="277:38">~</operator><name pos:start="277:39" pos:end="277:60">PORT_STAT_C_CONNECTION</name></expr>;</expr_stmt>

                <break pos:start="279:17" pos:end="279:22">break;</break>

            <case pos:start="281:13" pos:end="281:36">case <expr pos:start="281:18" pos:end="281:35"><name pos:start="281:18" pos:end="281:35">PORT_C_OVERCURRENT</name></expr>:</case>

                <expr_stmt pos:start="283:17" pos:end="283:62"><expr pos:start="283:17" pos:end="283:61"><name pos:start="283:17" pos:end="283:33"><name pos:start="283:17" pos:end="283:20">port</name><operator pos:start="283:21" pos:end="283:22">-&gt;</operator><name pos:start="283:23" pos:end="283:33">wPortChange</name></name> <operator pos:start="283:35" pos:end="283:36">&amp;=</operator> <operator pos:start="283:38" pos:end="283:38">~</operator><name pos:start="283:39" pos:end="283:61">PORT_STAT_C_OVERCURRENT</name></expr>;</expr_stmt>

                <break pos:start="285:17" pos:end="285:22">break;</break>

            <case pos:start="287:13" pos:end="287:30">case <expr pos:start="287:18" pos:end="287:29"><name pos:start="287:18" pos:end="287:29">PORT_C_RESET</name></expr>:</case>

                <expr_stmt pos:start="289:17" pos:end="289:56"><expr pos:start="289:17" pos:end="289:55"><name pos:start="289:17" pos:end="289:33"><name pos:start="289:17" pos:end="289:20">port</name><operator pos:start="289:21" pos:end="289:22">-&gt;</operator><name pos:start="289:23" pos:end="289:33">wPortChange</name></name> <operator pos:start="289:35" pos:end="289:36">&amp;=</operator> <operator pos:start="289:38" pos:end="289:38">~</operator><name pos:start="289:39" pos:end="289:55">PORT_STAT_C_RESET</name></expr>;</expr_stmt>

                <break pos:start="291:17" pos:end="291:22">break;</break>

            <default pos:start="293:13" pos:end="293:20">default:</default>

                <goto pos:start="295:17" pos:end="295:26">goto <name pos:start="295:22" pos:end="295:25">fail</name>;</goto>

            </block_content>}</block></switch>

            <expr_stmt pos:start="299:13" pos:end="299:20"><expr pos:start="299:13" pos:end="299:19"><name pos:start="299:13" pos:end="299:15">ret</name> <operator pos:start="299:17" pos:end="299:17">=</operator> <literal type="number" pos:start="299:19" pos:end="299:19">0</literal></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="303:9" pos:end="303:14">break;</break>

    <case pos:start="305:5" pos:end="305:26">case <expr pos:start="305:10" pos:end="305:25"><name pos:start="305:10" pos:end="305:25">GetHubDescriptor</name></expr>:</case>

        <block pos:start="307:9" pos:end="353:9">{<block_content pos:start="309:13" pos:end="351:18">

            <decl_stmt pos:start="309:13" pos:end="309:52"><decl pos:start="309:13" pos:end="309:26"><type pos:start="309:13" pos:end="309:24"><name pos:start="309:13" pos:end="309:20">unsigned</name> <name pos:start="309:22" pos:end="309:24">int</name></type> <name pos:start="309:26" pos:end="309:26">n</name></decl>, <decl pos:start="309:29" pos:end="309:33"><type ref="prev" pos:start="309:13" pos:end="309:24"/><name pos:start="309:29" pos:end="309:33">limit</name></decl>, <decl pos:start="309:36" pos:end="309:51"><type ref="prev" pos:start="309:13" pos:end="309:24"/><name pos:start="309:36" pos:end="309:47">var_hub_size</name> <init pos:start="309:49" pos:end="309:51">= <expr pos:start="309:51" pos:end="309:51"><literal type="number" pos:start="309:51" pos:end="309:51">0</literal></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="311:13" pos:end="313:52"><expr pos:start="311:13" pos:end="313:51"><call pos:start="311:13" pos:end="313:51"><name pos:start="311:13" pos:end="311:18">memcpy</name><argument_list pos:start="311:19" pos:end="313:51">(<argument pos:start="311:20" pos:end="311:23"><expr pos:start="311:20" pos:end="311:23"><name pos:start="311:20" pos:end="311:23">data</name></expr></argument>, <argument pos:start="311:26" pos:end="311:48"><expr pos:start="311:26" pos:end="311:48"><name pos:start="311:26" pos:end="311:48">qemu_hub_hub_descriptor</name></expr></argument>,

                   <argument pos:start="313:20" pos:end="313:50"><expr pos:start="313:20" pos:end="313:50"><sizeof pos:start="313:20" pos:end="313:50">sizeof<argument_list pos:start="313:26" pos:end="313:50">(<argument pos:start="313:27" pos:end="313:49"><expr pos:start="313:27" pos:end="313:49"><name pos:start="313:27" pos:end="313:49">qemu_hub_hub_descriptor</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="315:13" pos:end="315:32"><expr pos:start="315:13" pos:end="315:31"><name pos:start="315:13" pos:end="315:19"><name pos:start="315:13" pos:end="315:16">data</name><index pos:start="315:17" pos:end="315:19">[<expr pos:start="315:18" pos:end="315:18"><literal type="number" pos:start="315:18" pos:end="315:18">2</literal></expr>]</index></name> <operator pos:start="315:21" pos:end="315:21">=</operator> <name pos:start="315:23" pos:end="315:31">NUM_PORTS</name></expr>;</expr_stmt>



            <comment type="block" pos:start="319:13" pos:end="319:43">/* fill DeviceRemovable bits */</comment>

            <expr_stmt pos:start="321:13" pos:end="321:50"><expr pos:start="321:13" pos:end="321:49"><name pos:start="321:13" pos:end="321:17">limit</name> <operator pos:start="321:19" pos:end="321:19">=</operator> <operator pos:start="321:21" pos:end="321:21">(</operator><operator pos:start="321:22" pos:end="321:22">(</operator><name pos:start="321:23" pos:end="321:31">NUM_PORTS</name> <operator pos:start="321:33" pos:end="321:33">+</operator> <literal type="number" pos:start="321:35" pos:end="321:37">1</literal> <operator pos:start="321:37" pos:end="321:37">+</operator> <literal type="number" pos:start="321:39" pos:end="321:39">7</literal><operator pos:start="321:40" pos:end="321:40">)</operator> <operator pos:start="321:42" pos:end="321:42">/</operator> <literal type="number" pos:start="321:44" pos:end="321:44">8</literal><operator pos:start="321:45" pos:end="321:45">)</operator> <operator pos:start="321:47" pos:end="321:47">+</operator> <literal type="number" pos:start="321:49" pos:end="321:49">7</literal></expr>;</expr_stmt>

            <for pos:start="323:13" pos:end="329:13">for <control pos:start="323:17" pos:end="323:39">(<init pos:start="323:18" pos:end="323:23"><expr pos:start="323:18" pos:end="323:22"><name pos:start="323:18" pos:end="323:18">n</name> <operator pos:start="323:20" pos:end="323:20">=</operator> <literal type="number" pos:start="323:22" pos:end="323:22">7</literal></expr>;</init> <condition pos:start="323:25" pos:end="323:34"><expr pos:start="323:25" pos:end="323:33"><name pos:start="323:25" pos:end="323:25">n</name> <operator pos:start="323:27" pos:end="323:27">&lt;</operator> <name pos:start="323:29" pos:end="323:33">limit</name></expr>;</condition> <incr pos:start="323:36" pos:end="323:38"><expr pos:start="323:36" pos:end="323:38"><name pos:start="323:36" pos:end="323:36">n</name><operator pos:start="323:37" pos:end="323:38">++</operator></expr></incr>)</control> <block pos:start="323:41" pos:end="329:13">{<block_content pos:start="325:17" pos:end="327:31">

                <expr_stmt pos:start="325:17" pos:end="325:31"><expr pos:start="325:17" pos:end="325:30"><name pos:start="325:17" pos:end="325:23"><name pos:start="325:17" pos:end="325:20">data</name><index pos:start="325:21" pos:end="325:23">[<expr pos:start="325:22" pos:end="325:22"><name pos:start="325:22" pos:end="325:22">n</name></expr>]</index></name> <operator pos:start="325:25" pos:end="325:25">=</operator> <literal type="number" pos:start="325:27" pos:end="325:30">0x00</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="327:17" pos:end="327:31"><expr pos:start="327:17" pos:end="327:30"><name pos:start="327:17" pos:end="327:28">var_hub_size</name><operator pos:start="327:29" pos:end="327:30">++</operator></expr>;</expr_stmt>

            </block_content>}</block></for>



            <comment type="block" pos:start="333:13" pos:end="333:43">/* fill PortPwrCtrlMask bits */</comment>

            <expr_stmt pos:start="335:13" pos:end="335:50"><expr pos:start="335:13" pos:end="335:49"><name pos:start="335:13" pos:end="335:17">limit</name> <operator pos:start="335:19" pos:end="335:19">=</operator> <name pos:start="335:21" pos:end="335:25">limit</name> <operator pos:start="335:27" pos:end="335:27">+</operator> <operator pos:start="335:29" pos:end="335:29">(</operator><operator pos:start="335:30" pos:end="335:30">(</operator><name pos:start="335:31" pos:end="335:39">NUM_PORTS</name> <operator pos:start="335:41" pos:end="335:41">+</operator> <literal type="number" pos:start="335:43" pos:end="335:43">7</literal><operator pos:start="335:44" pos:end="335:44">)</operator> <operator pos:start="335:46" pos:end="335:46">/</operator> <literal type="number" pos:start="335:48" pos:end="335:48">8</literal><operator pos:start="335:49" pos:end="335:49">)</operator></expr>;</expr_stmt>

            <for pos:start="337:13" pos:end="343:13">for <control pos:start="337:17" pos:end="337:33">(<init pos:start="337:18" pos:end="337:18">;</init><condition pos:start="337:19" pos:end="337:28"><expr pos:start="337:19" pos:end="337:27"><name pos:start="337:19" pos:end="337:19">n</name> <operator pos:start="337:21" pos:end="337:21">&lt;</operator> <name pos:start="337:23" pos:end="337:27">limit</name></expr>;</condition> <incr pos:start="337:30" pos:end="337:32"><expr pos:start="337:30" pos:end="337:32"><name pos:start="337:30" pos:end="337:30">n</name><operator pos:start="337:31" pos:end="337:32">++</operator></expr></incr>)</control> <block pos:start="337:35" pos:end="343:13">{<block_content pos:start="339:17" pos:end="341:31">

                <expr_stmt pos:start="339:17" pos:end="339:31"><expr pos:start="339:17" pos:end="339:30"><name pos:start="339:17" pos:end="339:23"><name pos:start="339:17" pos:end="339:20">data</name><index pos:start="339:21" pos:end="339:23">[<expr pos:start="339:22" pos:end="339:22"><name pos:start="339:22" pos:end="339:22">n</name></expr>]</index></name> <operator pos:start="339:25" pos:end="339:25">=</operator> <literal type="number" pos:start="339:27" pos:end="339:30">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="341:17" pos:end="341:31"><expr pos:start="341:17" pos:end="341:30"><name pos:start="341:17" pos:end="341:28">var_hub_size</name><operator pos:start="341:29" pos:end="341:30">++</operator></expr>;</expr_stmt>

            </block_content>}</block></for>



            <expr_stmt pos:start="347:13" pos:end="347:65"><expr pos:start="347:13" pos:end="347:64"><name pos:start="347:13" pos:end="347:15">ret</name> <operator pos:start="347:17" pos:end="347:17">=</operator> <sizeof pos:start="347:19" pos:end="347:49">sizeof<argument_list pos:start="347:25" pos:end="347:49">(<argument pos:start="347:26" pos:end="347:48"><expr pos:start="347:26" pos:end="347:48"><name pos:start="347:26" pos:end="347:48">qemu_hub_hub_descriptor</name></expr></argument>)</argument_list></sizeof> <operator pos:start="347:51" pos:end="347:51">+</operator> <name pos:start="347:53" pos:end="347:64">var_hub_size</name></expr>;</expr_stmt>

            <expr_stmt pos:start="349:13" pos:end="349:26"><expr pos:start="349:13" pos:end="349:25"><name pos:start="349:13" pos:end="349:19"><name pos:start="349:13" pos:end="349:16">data</name><index pos:start="349:17" pos:end="349:19">[<expr pos:start="349:18" pos:end="349:18"><literal type="number" pos:start="349:18" pos:end="349:18">0</literal></expr>]</index></name> <operator pos:start="349:21" pos:end="349:21">=</operator> <name pos:start="349:23" pos:end="349:25">ret</name></expr>;</expr_stmt>

            <break pos:start="351:13" pos:end="351:18">break;</break>

        </block_content>}</block>

    <default pos:start="355:5" pos:end="355:12">default:</default>

    <label pos:start="357:5" pos:end="357:9"><name pos:start="357:5" pos:end="357:8">fail</name>:</label>

        <expr_stmt pos:start="359:9" pos:end="359:28"><expr pos:start="359:9" pos:end="359:27"><name pos:start="359:9" pos:end="359:11">ret</name> <operator pos:start="359:13" pos:end="359:13">=</operator> <name pos:start="359:15" pos:end="359:27">USB_RET_STALL</name></expr>;</expr_stmt>

        <break pos:start="361:9" pos:end="361:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="365:5" pos:end="365:15">return <expr pos:start="365:12" pos:end="365:14"><name pos:start="365:12" pos:end="365:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
