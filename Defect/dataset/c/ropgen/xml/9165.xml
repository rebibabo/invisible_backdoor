<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9165.c" pos:tabs="8"><function pos:start="1:1" pos:end="235:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">decode_header</name><parameter_list pos:start="1:25" pos:end="1:40">(<parameter pos:start="1:26" pos:end="1:39"><decl pos:start="1:26" pos:end="1:39"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:36">SnowContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">s</name></decl></parameter>)</parameter_list><block pos:start="1:41" pos:end="235:1">{<block_content pos:start="3:5" pos:end="233:13">

    <decl_stmt pos:start="3:5" pos:end="3:25"><decl pos:start="3:5" pos:end="3:19"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:19">plane_index</name></decl>, <decl pos:start="3:22" pos:end="3:24"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:22" pos:end="3:24">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">uint8_t</name></type> <name pos:start="5:13" pos:end="5:22"><name pos:start="5:13" pos:end="5:18">kstate</name><index pos:start="5:19" pos:end="5:22">[<expr pos:start="5:20" pos:end="5:21"><literal type="number" pos:start="5:20" pos:end="5:21">32</literal></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:46"><expr pos:start="9:5" pos:end="9:45"><call pos:start="9:5" pos:end="9:45"><name pos:start="9:5" pos:end="9:10">memset</name><argument_list pos:start="9:11" pos:end="9:45">(<argument pos:start="9:12" pos:end="9:17"><expr pos:start="9:12" pos:end="9:17"><name pos:start="9:12" pos:end="9:17">kstate</name></expr></argument>, <argument pos:start="9:20" pos:end="9:28"><expr pos:start="9:20" pos:end="9:28"><name pos:start="9:20" pos:end="9:28">MID_STATE</name></expr></argument>, <argument pos:start="9:31" pos:end="9:44"><expr pos:start="9:31" pos:end="9:44"><sizeof pos:start="9:31" pos:end="9:44">sizeof<argument_list pos:start="9:37" pos:end="9:44">(<argument pos:start="9:38" pos:end="9:43"><expr pos:start="9:38" pos:end="9:43"><name pos:start="9:38" pos:end="9:43">kstate</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:40"><expr pos:start="13:5" pos:end="13:39"><name pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:15">keyframe</name></name><operator pos:start="13:16" pos:end="13:16">=</operator> <call pos:start="13:18" pos:end="13:39"><name pos:start="13:18" pos:end="13:24">get_rac</name><argument_list pos:start="13:25" pos:end="13:39">(<argument pos:start="13:26" pos:end="13:30"><expr pos:start="13:26" pos:end="13:30"><operator pos:start="13:26" pos:end="13:26">&amp;</operator><name pos:start="13:27" pos:end="13:30"><name pos:start="13:27" pos:end="13:27">s</name><operator pos:start="13:28" pos:end="13:29">-&gt;</operator><name pos:start="13:30" pos:end="13:30">c</name></name></expr></argument>, <argument pos:start="13:33" pos:end="13:38"><expr pos:start="13:33" pos:end="13:38"><name pos:start="13:33" pos:end="13:38">kstate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="29:5"><if pos:start="15:5" pos:end="29:5">if<condition pos:start="15:7" pos:end="15:38">(<expr pos:start="15:8" pos:end="15:37"><name pos:start="15:8" pos:end="15:18"><name pos:start="15:8" pos:end="15:8">s</name><operator pos:start="15:9" pos:end="15:10">-&gt;</operator><name pos:start="15:11" pos:end="15:18">keyframe</name></name> <operator pos:start="15:20" pos:end="15:21">||</operator> <name pos:start="15:23" pos:end="15:37"><name pos:start="15:23" pos:end="15:23">s</name><operator pos:start="15:24" pos:end="15:25">-&gt;</operator><name pos:start="15:26" pos:end="15:37">always_reset</name></name></expr>)</condition><block pos:start="15:39" pos:end="29:5">{<block_content pos:start="17:9" pos:end="27:30">

        <expr_stmt pos:start="17:9" pos:end="17:34"><expr pos:start="17:9" pos:end="17:33"><call pos:start="17:9" pos:end="17:33"><name pos:start="17:9" pos:end="17:30">ff_snow_reset_contexts</name><argument_list pos:start="17:31" pos:end="17:33">(<argument pos:start="17:32" pos:end="17:32"><expr pos:start="17:32" pos:end="17:32"><name pos:start="17:32" pos:end="17:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="27:30"><expr pos:start="19:9" pos:end="27:29"><name pos:start="19:9" pos:end="19:37"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:37">spatial_decomposition_type</name></name><operator pos:start="19:38" pos:end="19:38">=</operator>

        <name pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:15">qlog</name></name><operator pos:start="21:16" pos:end="21:16">=</operator>

        <name pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:16">qbias</name></name><operator pos:start="23:17" pos:end="23:17">=</operator>

        <name pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:19">mv_scale</name></name><operator pos:start="25:20" pos:end="25:20">=</operator>

        <name pos:start="27:9" pos:end="27:26"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:26">block_max_depth</name></name><operator pos:start="27:27" pos:end="27:27">=</operator> <literal type="number" pos:start="27:29" pos:end="27:29">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="113:5"><if pos:start="31:5" pos:end="113:5">if<condition pos:start="31:7" pos:end="31:19">(<expr pos:start="31:8" pos:end="31:18"><name pos:start="31:8" pos:end="31:18"><name pos:start="31:8" pos:end="31:8">s</name><operator pos:start="31:9" pos:end="31:10">-&gt;</operator><name pos:start="31:11" pos:end="31:18">keyframe</name></name></expr>)</condition><block pos:start="31:20" pos:end="113:5">{<block_content pos:start="33:9" pos:end="111:24">

        <macro pos:start="33:9" pos:end="33:36"><name pos:start="33:9" pos:end="33:13">GET_S</name><argument_list pos:start="33:14" pos:end="33:36">(<argument pos:start="33:15" pos:end="33:24">s-&gt;version</argument>, <argument pos:start="33:27" pos:end="33:35">tmp &lt;= <literal type="number" pos:start="33:34" pos:end="33:35">0U</literal></argument>)</argument_list></macro>

        <expr_stmt pos:start="35:9" pos:end="35:57"><expr pos:start="35:9" pos:end="35:56"><name pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:23">always_reset</name></name><operator pos:start="35:24" pos:end="35:24">=</operator> <call pos:start="35:26" pos:end="35:56"><name pos:start="35:26" pos:end="35:32">get_rac</name><argument_list pos:start="35:33" pos:end="35:56">(<argument pos:start="35:34" pos:end="35:38"><expr pos:start="35:34" pos:end="35:38"><operator pos:start="35:34" pos:end="35:34">&amp;</operator><name pos:start="35:35" pos:end="35:38"><name pos:start="35:35" pos:end="35:35">s</name><operator pos:start="35:36" pos:end="35:37">-&gt;</operator><name pos:start="35:38" pos:end="35:38">c</name></name></expr></argument>, <argument pos:start="35:41" pos:end="35:55"><expr pos:start="35:41" pos:end="35:55"><name pos:start="35:41" pos:end="35:55"><name pos:start="35:41" pos:end="35:41">s</name><operator pos:start="35:42" pos:end="35:43">-&gt;</operator><name pos:start="35:44" pos:end="35:55">header_state</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:78"><expr pos:start="37:9" pos:end="37:77"><name pos:start="37:9" pos:end="37:38"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:38">temporal_decomposition_type</name></name><operator pos:start="37:39" pos:end="37:39">=</operator> <call pos:start="37:41" pos:end="37:77"><name pos:start="37:41" pos:end="37:50">get_symbol</name><argument_list pos:start="37:51" pos:end="37:77">(<argument pos:start="37:52" pos:end="37:56"><expr pos:start="37:52" pos:end="37:56"><operator pos:start="37:52" pos:end="37:52">&amp;</operator><name pos:start="37:53" pos:end="37:56"><name pos:start="37:53" pos:end="37:53">s</name><operator pos:start="37:54" pos:end="37:55">-&gt;</operator><name pos:start="37:56" pos:end="37:56">c</name></name></expr></argument>, <argument pos:start="37:59" pos:end="37:73"><expr pos:start="37:59" pos:end="37:73"><name pos:start="37:59" pos:end="37:73"><name pos:start="37:59" pos:end="37:59">s</name><operator pos:start="37:60" pos:end="37:61">-&gt;</operator><name pos:start="37:62" pos:end="37:73">header_state</name></name></expr></argument>, <argument pos:start="37:76" pos:end="37:76"><expr pos:start="37:76" pos:end="37:76"><literal type="number" pos:start="37:76" pos:end="37:76">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:79"><expr pos:start="39:9" pos:end="39:78"><name pos:start="39:9" pos:end="39:39"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:39">temporal_decomposition_count</name></name><operator pos:start="39:40" pos:end="39:40">=</operator> <call pos:start="39:42" pos:end="39:78"><name pos:start="39:42" pos:end="39:51">get_symbol</name><argument_list pos:start="39:52" pos:end="39:78">(<argument pos:start="39:53" pos:end="39:57"><expr pos:start="39:53" pos:end="39:57"><operator pos:start="39:53" pos:end="39:53">&amp;</operator><name pos:start="39:54" pos:end="39:57"><name pos:start="39:54" pos:end="39:54">s</name><operator pos:start="39:55" pos:end="39:56">-&gt;</operator><name pos:start="39:57" pos:end="39:57">c</name></name></expr></argument>, <argument pos:start="39:60" pos:end="39:74"><expr pos:start="39:60" pos:end="39:74"><name pos:start="39:60" pos:end="39:74"><name pos:start="39:60" pos:end="39:60">s</name><operator pos:start="39:61" pos:end="39:62">-&gt;</operator><name pos:start="39:63" pos:end="39:74">header_state</name></name></expr></argument>, <argument pos:start="39:77" pos:end="39:77"><expr pos:start="39:77" pos:end="39:77"><literal type="number" pos:start="39:77" pos:end="39:77">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <macro pos:start="41:9" pos:end="41:83"><name pos:start="41:9" pos:end="41:13">GET_S</name><argument_list pos:start="41:14" pos:end="41:83">(<argument pos:start="41:15" pos:end="41:44">s-&gt;spatial_decomposition_count</argument>, <argument pos:start="41:47" pos:end="41:82"><literal type="number" pos:start="41:47" pos:end="41:47">0</literal> &lt; tmp &amp;&amp; tmp &lt;= MAX_DECOMPOSITIONS</argument>)</argument_list></macro>

        <expr_stmt pos:start="43:9" pos:end="43:66"><expr pos:start="43:9" pos:end="43:65"><name pos:start="43:9" pos:end="43:26"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:26">colorspace_type</name></name><operator pos:start="43:27" pos:end="43:27">=</operator> <call pos:start="43:29" pos:end="43:65"><name pos:start="43:29" pos:end="43:38">get_symbol</name><argument_list pos:start="43:39" pos:end="43:65">(<argument pos:start="43:40" pos:end="43:44"><expr pos:start="43:40" pos:end="43:44"><operator pos:start="43:40" pos:end="43:40">&amp;</operator><name pos:start="43:41" pos:end="43:44"><name pos:start="43:41" pos:end="43:41">s</name><operator pos:start="43:42" pos:end="43:43">-&gt;</operator><name pos:start="43:44" pos:end="43:44">c</name></name></expr></argument>, <argument pos:start="43:47" pos:end="43:61"><expr pos:start="43:47" pos:end="43:61"><name pos:start="43:47" pos:end="43:61"><name pos:start="43:47" pos:end="43:47">s</name><operator pos:start="43:48" pos:end="43:49">-&gt;</operator><name pos:start="43:50" pos:end="43:61">header_state</name></name></expr></argument>, <argument pos:start="43:64" pos:end="43:64"><expr pos:start="43:64" pos:end="43:64"><literal type="number" pos:start="43:64" pos:end="43:64">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="95:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:36">(<expr pos:start="45:13" pos:end="45:35"><name pos:start="45:13" pos:end="45:30"><name pos:start="45:13" pos:end="45:13">s</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:30">colorspace_type</name></name> <operator pos:start="45:32" pos:end="45:33">==</operator> <literal type="number" pos:start="45:35" pos:end="45:35">1</literal></expr>)</condition> <block pos:start="45:38" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:29">

            <expr_stmt pos:start="47:13" pos:end="47:48"><expr pos:start="47:13" pos:end="47:47"><name pos:start="47:13" pos:end="47:29"><name pos:start="47:13" pos:end="47:13">s</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:20">avctx</name><operator pos:start="47:21" pos:end="47:22">-&gt;</operator><name pos:start="47:23" pos:end="47:29">pix_fmt</name></name><operator pos:start="47:30" pos:end="47:30">=</operator> <name pos:start="47:32" pos:end="47:47">AV_PIX_FMT_GRAY8</name></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:29"><expr pos:start="49:13" pos:end="49:28"><name pos:start="49:13" pos:end="49:24"><name pos:start="49:13" pos:end="49:13">s</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:24">nb_planes</name></name> <operator pos:start="49:26" pos:end="49:26">=</operator> <literal type="number" pos:start="49:28" pos:end="49:28">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="51:11" pos:end="85:9">else if<condition pos:start="51:18" pos:end="51:42">(<expr pos:start="51:19" pos:end="51:41"><name pos:start="51:19" pos:end="51:36"><name pos:start="51:19" pos:end="51:19">s</name><operator pos:start="51:20" pos:end="51:21">-&gt;</operator><name pos:start="51:22" pos:end="51:36">colorspace_type</name></name> <operator pos:start="51:38" pos:end="51:39">==</operator> <literal type="number" pos:start="51:41" pos:end="51:41">0</literal></expr>)</condition> <block pos:start="51:44" pos:end="85:9">{<block_content pos:start="53:13" pos:end="83:29">

            <expr_stmt pos:start="53:13" pos:end="53:69"><expr pos:start="53:13" pos:end="53:68"><name pos:start="53:13" pos:end="53:29"><name pos:start="53:13" pos:end="53:13">s</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:29">chroma_h_shift</name></name><operator pos:start="53:30" pos:end="53:30">=</operator> <call pos:start="53:32" pos:end="53:68"><name pos:start="53:32" pos:end="53:41">get_symbol</name><argument_list pos:start="53:42" pos:end="53:68">(<argument pos:start="53:43" pos:end="53:47"><expr pos:start="53:43" pos:end="53:47"><operator pos:start="53:43" pos:end="53:43">&amp;</operator><name pos:start="53:44" pos:end="53:47"><name pos:start="53:44" pos:end="53:44">s</name><operator pos:start="53:45" pos:end="53:46">-&gt;</operator><name pos:start="53:47" pos:end="53:47">c</name></name></expr></argument>, <argument pos:start="53:50" pos:end="53:64"><expr pos:start="53:50" pos:end="53:64"><name pos:start="53:50" pos:end="53:64"><name pos:start="53:50" pos:end="53:50">s</name><operator pos:start="53:51" pos:end="53:52">-&gt;</operator><name pos:start="53:53" pos:end="53:64">header_state</name></name></expr></argument>, <argument pos:start="53:67" pos:end="53:67"><expr pos:start="53:67" pos:end="53:67"><literal type="number" pos:start="53:67" pos:end="53:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:69"><expr pos:start="55:13" pos:end="55:68"><name pos:start="55:13" pos:end="55:29"><name pos:start="55:13" pos:end="55:13">s</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:29">chroma_v_shift</name></name><operator pos:start="55:30" pos:end="55:30">=</operator> <call pos:start="55:32" pos:end="55:68"><name pos:start="55:32" pos:end="55:41">get_symbol</name><argument_list pos:start="55:42" pos:end="55:68">(<argument pos:start="55:43" pos:end="55:47"><expr pos:start="55:43" pos:end="55:47"><operator pos:start="55:43" pos:end="55:43">&amp;</operator><name pos:start="55:44" pos:end="55:47"><name pos:start="55:44" pos:end="55:44">s</name><operator pos:start="55:45" pos:end="55:46">-&gt;</operator><name pos:start="55:47" pos:end="55:47">c</name></name></expr></argument>, <argument pos:start="55:50" pos:end="55:64"><expr pos:start="55:50" pos:end="55:64"><name pos:start="55:50" pos:end="55:64"><name pos:start="55:50" pos:end="55:50">s</name><operator pos:start="55:51" pos:end="55:52">-&gt;</operator><name pos:start="55:53" pos:end="55:64">header_state</name></name></expr></argument>, <argument pos:start="55:67" pos:end="55:67"><expr pos:start="55:67" pos:end="55:67"><literal type="number" pos:start="55:67" pos:end="55:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="59:13" pos:end="81:13"><if pos:start="59:13" pos:end="63:13">if<condition pos:start="59:15" pos:end="59:62">(<expr pos:start="59:16" pos:end="59:61"><name pos:start="59:16" pos:end="59:32"><name pos:start="59:16" pos:end="59:16">s</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:32">chroma_h_shift</name></name> <operator pos:start="59:34" pos:end="59:35">==</operator> <literal type="number" pos:start="59:37" pos:end="59:37">1</literal> <operator pos:start="59:39" pos:end="59:40">&amp;&amp;</operator> <name pos:start="59:42" pos:end="59:58"><name pos:start="59:42" pos:end="59:42">s</name><operator pos:start="59:43" pos:end="59:44">-&gt;</operator><name pos:start="59:45" pos:end="59:58">chroma_v_shift</name></name><operator pos:start="59:59" pos:end="59:60">==</operator><literal type="number" pos:start="59:61" pos:end="59:61">1</literal></expr>)</condition><block pos:start="59:63" pos:end="63:13">{<block_content pos:start="61:17" pos:end="61:54">

                <expr_stmt pos:start="61:17" pos:end="61:54"><expr pos:start="61:17" pos:end="61:53"><name pos:start="61:17" pos:end="61:33"><name pos:start="61:17" pos:end="61:17">s</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:24">avctx</name><operator pos:start="61:25" pos:end="61:26">-&gt;</operator><name pos:start="61:27" pos:end="61:33">pix_fmt</name></name><operator pos:start="61:34" pos:end="61:34">=</operator> <name pos:start="61:36" pos:end="61:53">AV_PIX_FMT_YUV420P</name></expr>;</expr_stmt>

            </block_content>}</block></if><if type="elseif" pos:start="63:14" pos:end="67:13">else if<condition pos:start="63:21" pos:end="63:68">(<expr pos:start="63:22" pos:end="63:67"><name pos:start="63:22" pos:end="63:38"><name pos:start="63:22" pos:end="63:22">s</name><operator pos:start="63:23" pos:end="63:24">-&gt;</operator><name pos:start="63:25" pos:end="63:38">chroma_h_shift</name></name> <operator pos:start="63:40" pos:end="63:41">==</operator> <literal type="number" pos:start="63:43" pos:end="63:43">0</literal> <operator pos:start="63:45" pos:end="63:46">&amp;&amp;</operator> <name pos:start="63:48" pos:end="63:64"><name pos:start="63:48" pos:end="63:48">s</name><operator pos:start="63:49" pos:end="63:50">-&gt;</operator><name pos:start="63:51" pos:end="63:64">chroma_v_shift</name></name><operator pos:start="63:65" pos:end="63:66">==</operator><literal type="number" pos:start="63:67" pos:end="63:67">0</literal></expr>)</condition><block pos:start="63:69" pos:end="67:13">{<block_content pos:start="65:17" pos:end="65:54">

                <expr_stmt pos:start="65:17" pos:end="65:54"><expr pos:start="65:17" pos:end="65:53"><name pos:start="65:17" pos:end="65:33"><name pos:start="65:17" pos:end="65:17">s</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:24">avctx</name><operator pos:start="65:25" pos:end="65:26">-&gt;</operator><name pos:start="65:27" pos:end="65:33">pix_fmt</name></name><operator pos:start="65:34" pos:end="65:34">=</operator> <name pos:start="65:36" pos:end="65:53">AV_PIX_FMT_YUV444P</name></expr>;</expr_stmt>

            </block_content>}</block></if><if type="elseif" pos:start="67:14" pos:end="71:13">else if<condition pos:start="67:21" pos:end="67:68">(<expr pos:start="67:22" pos:end="67:67"><name pos:start="67:22" pos:end="67:38"><name pos:start="67:22" pos:end="67:22">s</name><operator pos:start="67:23" pos:end="67:24">-&gt;</operator><name pos:start="67:25" pos:end="67:38">chroma_h_shift</name></name> <operator pos:start="67:40" pos:end="67:41">==</operator> <literal type="number" pos:start="67:43" pos:end="67:43">2</literal> <operator pos:start="67:45" pos:end="67:46">&amp;&amp;</operator> <name pos:start="67:48" pos:end="67:64"><name pos:start="67:48" pos:end="67:48">s</name><operator pos:start="67:49" pos:end="67:50">-&gt;</operator><name pos:start="67:51" pos:end="67:64">chroma_v_shift</name></name><operator pos:start="67:65" pos:end="67:66">==</operator><literal type="number" pos:start="67:67" pos:end="67:67">2</literal></expr>)</condition><block pos:start="67:69" pos:end="71:13">{<block_content pos:start="69:17" pos:end="69:54">

                <expr_stmt pos:start="69:17" pos:end="69:54"><expr pos:start="69:17" pos:end="69:53"><name pos:start="69:17" pos:end="69:33"><name pos:start="69:17" pos:end="69:17">s</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:24">avctx</name><operator pos:start="69:25" pos:end="69:26">-&gt;</operator><name pos:start="69:27" pos:end="69:33">pix_fmt</name></name><operator pos:start="69:34" pos:end="69:34">=</operator> <name pos:start="69:36" pos:end="69:53">AV_PIX_FMT_YUV410P</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="71:15" pos:end="81:13">else <block pos:start="71:20" pos:end="81:13">{<block_content pos:start="73:17" pos:end="79:43">

                <expr_stmt pos:start="73:17" pos:end="73:122"><expr pos:start="73:17" pos:end="73:121"><call pos:start="73:17" pos:end="73:121"><name pos:start="73:17" pos:end="73:22">av_log</name><argument_list pos:start="73:23" pos:end="73:121">(<argument pos:start="73:24" pos:end="73:24"><expr pos:start="73:24" pos:end="73:24"><name pos:start="73:24" pos:end="73:24">s</name></expr></argument>, <argument pos:start="73:27" pos:end="73:38"><expr pos:start="73:27" pos:end="73:38"><name pos:start="73:27" pos:end="73:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="73:41" pos:end="73:82"><expr pos:start="73:41" pos:end="73:82"><literal type="string" pos:start="73:41" pos:end="73:82">"unsupported color subsample mode %d %d\n"</literal></expr></argument>, <argument pos:start="73:85" pos:end="73:101"><expr pos:start="73:85" pos:end="73:101"><name pos:start="73:85" pos:end="73:101"><name pos:start="73:85" pos:end="73:85">s</name><operator pos:start="73:86" pos:end="73:87">-&gt;</operator><name pos:start="73:88" pos:end="73:101">chroma_h_shift</name></name></expr></argument>, <argument pos:start="73:104" pos:end="73:120"><expr pos:start="73:104" pos:end="73:120"><name pos:start="73:104" pos:end="73:120"><name pos:start="73:104" pos:end="73:104">s</name><operator pos:start="73:105" pos:end="73:106">-&gt;</operator><name pos:start="73:107" pos:end="73:120">chroma_v_shift</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="75:17" pos:end="75:58"><expr pos:start="75:17" pos:end="75:57"><name pos:start="75:17" pos:end="75:33"><name pos:start="75:17" pos:end="75:17">s</name><operator pos:start="75:18" pos:end="75:19">-&gt;</operator><name pos:start="75:20" pos:end="75:33">chroma_h_shift</name></name> <operator pos:start="75:35" pos:end="75:35">=</operator> <name pos:start="75:37" pos:end="75:53"><name pos:start="75:37" pos:end="75:37">s</name><operator pos:start="75:38" pos:end="75:39">-&gt;</operator><name pos:start="75:40" pos:end="75:53">chroma_v_shift</name></name> <operator pos:start="75:55" pos:end="75:55">=</operator> <literal type="number" pos:start="75:57" pos:end="75:57">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="77:17" pos:end="77:54"><expr pos:start="77:17" pos:end="77:53"><name pos:start="77:17" pos:end="77:33"><name pos:start="77:17" pos:end="77:17">s</name><operator pos:start="77:18" pos:end="77:19">-&gt;</operator><name pos:start="77:20" pos:end="77:24">avctx</name><operator pos:start="77:25" pos:end="77:26">-&gt;</operator><name pos:start="77:27" pos:end="77:33">pix_fmt</name></name><operator pos:start="77:34" pos:end="77:34">=</operator> <name pos:start="77:36" pos:end="77:53">AV_PIX_FMT_YUV420P</name></expr>;</expr_stmt>

                <return pos:start="79:17" pos:end="79:43">return <expr pos:start="79:24" pos:end="79:42"><name pos:start="79:24" pos:end="79:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:29"><expr pos:start="83:13" pos:end="83:28"><name pos:start="83:13" pos:end="83:24"><name pos:start="83:13" pos:end="83:13">s</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:24">nb_planes</name></name> <operator pos:start="83:26" pos:end="83:26">=</operator> <literal type="number" pos:start="83:28" pos:end="83:28">3</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="85:11" pos:end="95:9">else <block pos:start="85:16" pos:end="95:9">{<block_content pos:start="87:13" pos:end="93:39">

            <expr_stmt pos:start="87:13" pos:end="87:65"><expr pos:start="87:13" pos:end="87:64"><call pos:start="87:13" pos:end="87:64"><name pos:start="87:13" pos:end="87:18">av_log</name><argument_list pos:start="87:19" pos:end="87:64">(<argument pos:start="87:20" pos:end="87:20"><expr pos:start="87:20" pos:end="87:20"><name pos:start="87:20" pos:end="87:20">s</name></expr></argument>, <argument pos:start="87:23" pos:end="87:34"><expr pos:start="87:23" pos:end="87:34"><name pos:start="87:23" pos:end="87:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="87:37" pos:end="87:63"><expr pos:start="87:37" pos:end="87:63"><literal type="string" pos:start="87:37" pos:end="87:63">"unsupported color space\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:54"><expr pos:start="89:13" pos:end="89:53"><name pos:start="89:13" pos:end="89:29"><name pos:start="89:13" pos:end="89:13">s</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:29">chroma_h_shift</name></name> <operator pos:start="89:31" pos:end="89:31">=</operator> <name pos:start="89:33" pos:end="89:49"><name pos:start="89:33" pos:end="89:33">s</name><operator pos:start="89:34" pos:end="89:35">-&gt;</operator><name pos:start="89:36" pos:end="89:49">chroma_v_shift</name></name> <operator pos:start="89:51" pos:end="89:51">=</operator> <literal type="number" pos:start="89:53" pos:end="89:53">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:50"><expr pos:start="91:13" pos:end="91:49"><name pos:start="91:13" pos:end="91:29"><name pos:start="91:13" pos:end="91:13">s</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:20">avctx</name><operator pos:start="91:21" pos:end="91:22">-&gt;</operator><name pos:start="91:23" pos:end="91:29">pix_fmt</name></name><operator pos:start="91:30" pos:end="91:30">=</operator> <name pos:start="91:32" pos:end="91:49">AV_PIX_FMT_YUV420P</name></expr>;</expr_stmt>

            <return pos:start="93:13" pos:end="93:39">return <expr pos:start="93:20" pos:end="93:38"><name pos:start="93:20" pos:end="93:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></else></if_stmt>





        <expr_stmt pos:start="101:9" pos:end="101:64"><expr pos:start="101:9" pos:end="101:63"><name pos:start="101:9" pos:end="101:30"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:30">spatial_scalability</name></name><operator pos:start="101:31" pos:end="101:31">=</operator> <call pos:start="101:33" pos:end="101:63"><name pos:start="101:33" pos:end="101:39">get_rac</name><argument_list pos:start="101:40" pos:end="101:63">(<argument pos:start="101:41" pos:end="101:45"><expr pos:start="101:41" pos:end="101:45"><operator pos:start="101:41" pos:end="101:41">&amp;</operator><name pos:start="101:42" pos:end="101:45"><name pos:start="101:42" pos:end="101:42">s</name><operator pos:start="101:43" pos:end="101:44">-&gt;</operator><name pos:start="101:45" pos:end="101:45">c</name></name></expr></argument>, <argument pos:start="101:48" pos:end="101:62"><expr pos:start="101:48" pos:end="101:62"><name pos:start="101:48" pos:end="101:62"><name pos:start="101:48" pos:end="101:48">s</name><operator pos:start="101:49" pos:end="101:50">-&gt;</operator><name pos:start="101:51" pos:end="101:62">header_state</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<comment type="line" pos:start="103:1" pos:end="103:63">//        s-&gt;rate_scalability= get_rac(&amp;s-&gt;c, s-&gt;header_state);</comment>

        <macro pos:start="105:9" pos:end="105:64"><name pos:start="105:9" pos:end="105:13">GET_S</name><argument_list pos:start="105:14" pos:end="105:64">(<argument pos:start="105:15" pos:end="105:31">s-&gt;max_ref_frames</argument>, <argument pos:start="105:34" pos:end="105:63">tmp &lt; (unsigned)MAX_REF_FRAMES</argument>)</argument_list></macro>

        <expr_stmt pos:start="107:9" pos:end="107:28"><expr pos:start="107:9" pos:end="107:27"><name pos:start="107:9" pos:end="107:25"><name pos:start="107:9" pos:end="107:9">s</name><operator pos:start="107:10" pos:end="107:11">-&gt;</operator><name pos:start="107:12" pos:end="107:25">max_ref_frames</name></name><operator pos:start="107:26" pos:end="107:27">++</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="111:9" pos:end="111:24"><expr pos:start="111:9" pos:end="111:23"><call pos:start="111:9" pos:end="111:23"><name pos:start="111:9" pos:end="111:20">decode_qlogs</name><argument_list pos:start="111:21" pos:end="111:23">(<argument pos:start="111:22" pos:end="111:22"><expr pos:start="111:22" pos:end="111:22"><name pos:start="111:22" pos:end="111:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="117:5" pos:end="165:5"><if pos:start="117:5" pos:end="165:5">if<condition pos:start="117:7" pos:end="117:20">(<expr pos:start="117:8" pos:end="117:19"><operator pos:start="117:8" pos:end="117:8">!</operator><name pos:start="117:9" pos:end="117:19"><name pos:start="117:9" pos:end="117:9">s</name><operator pos:start="117:10" pos:end="117:11">-&gt;</operator><name pos:start="117:12" pos:end="117:19">keyframe</name></name></expr>)</condition><block pos:start="117:21" pos:end="165:5">{<block_content pos:start="119:9" pos:end="163:9">

        <if_stmt pos:start="119:9" pos:end="155:9"><if pos:start="119:9" pos:end="155:9">if<condition pos:start="119:11" pos:end="119:43">(<expr pos:start="119:12" pos:end="119:42"><call pos:start="119:12" pos:end="119:42"><name pos:start="119:12" pos:end="119:18">get_rac</name><argument_list pos:start="119:19" pos:end="119:42">(<argument pos:start="119:20" pos:end="119:24"><expr pos:start="119:20" pos:end="119:24"><operator pos:start="119:20" pos:end="119:20">&amp;</operator><name pos:start="119:21" pos:end="119:24"><name pos:start="119:21" pos:end="119:21">s</name><operator pos:start="119:22" pos:end="119:23">-&gt;</operator><name pos:start="119:24" pos:end="119:24">c</name></name></expr></argument>, <argument pos:start="119:27" pos:end="119:41"><expr pos:start="119:27" pos:end="119:41"><name pos:start="119:27" pos:end="119:41"><name pos:start="119:27" pos:end="119:27">s</name><operator pos:start="119:28" pos:end="119:29">-&gt;</operator><name pos:start="119:30" pos:end="119:41">header_state</name></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="119:44" pos:end="155:9">{<block_content pos:start="121:13" pos:end="153:87">

            <for pos:start="121:13" pos:end="147:13">for<control pos:start="121:16" pos:end="121:81">(<init pos:start="121:17" pos:end="121:30"><expr pos:start="121:17" pos:end="121:29"><name pos:start="121:17" pos:end="121:27">plane_index</name><operator pos:start="121:28" pos:end="121:28">=</operator><literal type="number" pos:start="121:29" pos:end="121:29">0</literal></expr>;</init> <condition pos:start="121:32" pos:end="121:66"><expr pos:start="121:32" pos:end="121:65"><name pos:start="121:32" pos:end="121:42">plane_index</name><operator pos:start="121:43" pos:end="121:43">&lt;</operator><call pos:start="121:44" pos:end="121:65"><name pos:start="121:44" pos:end="121:48">FFMIN</name><argument_list pos:start="121:49" pos:end="121:65">(<argument pos:start="121:50" pos:end="121:61"><expr pos:start="121:50" pos:end="121:61"><name pos:start="121:50" pos:end="121:61"><name pos:start="121:50" pos:end="121:50">s</name><operator pos:start="121:51" pos:end="121:52">-&gt;</operator><name pos:start="121:53" pos:end="121:61">nb_planes</name></name></expr></argument>, <argument pos:start="121:64" pos:end="121:64"><expr pos:start="121:64" pos:end="121:64"><literal type="number" pos:start="121:64" pos:end="121:64">2</literal></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="121:68" pos:end="121:80"><expr pos:start="121:68" pos:end="121:80"><name pos:start="121:68" pos:end="121:78">plane_index</name><operator pos:start="121:79" pos:end="121:80">++</operator></expr></incr>)</control><block pos:start="121:82" pos:end="147:13">{<block_content pos:start="123:17" pos:end="145:37">

                <decl_stmt pos:start="123:17" pos:end="123:36"><decl pos:start="123:17" pos:end="123:25"><type pos:start="123:17" pos:end="123:19"><name pos:start="123:17" pos:end="123:19">int</name></type> <name pos:start="123:21" pos:end="123:25">htaps</name></decl>, <decl pos:start="123:28" pos:end="123:28"><type ref="prev" pos:start="123:17" pos:end="123:19"/><name pos:start="123:28" pos:end="123:28">i</name></decl>, <decl pos:start="123:31" pos:end="123:35"><type ref="prev" pos:start="123:17" pos:end="123:19"/><name pos:start="123:31" pos:end="123:33">sum</name><init pos:start="123:34" pos:end="123:35">=<expr pos:start="123:35" pos:end="123:35"><literal type="number" pos:start="123:35" pos:end="123:35">0</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="125:17" pos:end="125:49"><decl pos:start="125:17" pos:end="125:48"><type pos:start="125:17" pos:end="125:23"><name pos:start="125:17" pos:end="125:21">Plane</name> <modifier pos:start="125:23" pos:end="125:23">*</modifier></type><name pos:start="125:24" pos:end="125:24">p</name><init pos:start="125:25" pos:end="125:48">= <expr pos:start="125:27" pos:end="125:48"><operator pos:start="125:27" pos:end="125:27">&amp;</operator><name pos:start="125:28" pos:end="125:48"><name pos:start="125:28" pos:end="125:28">s</name><operator pos:start="125:29" pos:end="125:30">-&gt;</operator><name pos:start="125:31" pos:end="125:35">plane</name><index pos:start="125:36" pos:end="125:48">[<expr pos:start="125:37" pos:end="125:47"><name pos:start="125:37" pos:end="125:47">plane_index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="127:17" pos:end="127:60"><expr pos:start="127:17" pos:end="127:59"><name pos:start="127:17" pos:end="127:26"><name pos:start="127:17" pos:end="127:17">p</name><operator pos:start="127:18" pos:end="127:19">-&gt;</operator><name pos:start="127:20" pos:end="127:26">diag_mc</name></name><operator pos:start="127:27" pos:end="127:27">=</operator> <call pos:start="127:29" pos:end="127:59"><name pos:start="127:29" pos:end="127:35">get_rac</name><argument_list pos:start="127:36" pos:end="127:59">(<argument pos:start="127:37" pos:end="127:41"><expr pos:start="127:37" pos:end="127:41"><operator pos:start="127:37" pos:end="127:37">&amp;</operator><name pos:start="127:38" pos:end="127:41"><name pos:start="127:38" pos:end="127:38">s</name><operator pos:start="127:39" pos:end="127:40">-&gt;</operator><name pos:start="127:41" pos:end="127:41">c</name></name></expr></argument>, <argument pos:start="127:44" pos:end="127:58"><expr pos:start="127:44" pos:end="127:58"><name pos:start="127:44" pos:end="127:58"><name pos:start="127:44" pos:end="127:44">s</name><operator pos:start="127:45" pos:end="127:46">-&gt;</operator><name pos:start="127:47" pos:end="127:58">header_state</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="129:17" pos:end="129:67"><expr pos:start="129:17" pos:end="129:66"><name pos:start="129:17" pos:end="129:21">htaps</name><operator pos:start="129:22" pos:end="129:22">=</operator> <call pos:start="129:24" pos:end="129:60"><name pos:start="129:24" pos:end="129:33">get_symbol</name><argument_list pos:start="129:34" pos:end="129:60">(<argument pos:start="129:35" pos:end="129:39"><expr pos:start="129:35" pos:end="129:39"><operator pos:start="129:35" pos:end="129:35">&amp;</operator><name pos:start="129:36" pos:end="129:39"><name pos:start="129:36" pos:end="129:36">s</name><operator pos:start="129:37" pos:end="129:38">-&gt;</operator><name pos:start="129:39" pos:end="129:39">c</name></name></expr></argument>, <argument pos:start="129:42" pos:end="129:56"><expr pos:start="129:42" pos:end="129:56"><name pos:start="129:42" pos:end="129:56"><name pos:start="129:42" pos:end="129:42">s</name><operator pos:start="129:43" pos:end="129:44">-&gt;</operator><name pos:start="129:45" pos:end="129:56">header_state</name></name></expr></argument>, <argument pos:start="129:59" pos:end="129:59"><expr pos:start="129:59" pos:end="129:59"><literal type="number" pos:start="129:59" pos:end="129:59">0</literal></expr></argument>)</argument_list></call><operator pos:start="129:61" pos:end="129:61">*</operator><literal type="number" pos:start="129:62" pos:end="129:64">2</literal> <operator pos:start="129:64" pos:end="129:64">+</operator> <literal type="number" pos:start="129:66" pos:end="129:66">2</literal></expr>;</expr_stmt>

                <if_stmt pos:start="131:17" pos:end="133:47"><if pos:start="131:17" pos:end="133:47">if<condition pos:start="131:19" pos:end="131:60">(<expr pos:start="131:20" pos:end="131:59"><operator pos:start="131:20" pos:end="131:20">(</operator><name pos:start="131:21" pos:end="131:28">unsigned</name><operator pos:start="131:29" pos:end="131:29">)</operator><name pos:start="131:30" pos:end="131:34">htaps</name> <operator pos:start="131:36" pos:end="131:37">&gt;=</operator> <name pos:start="131:39" pos:end="131:47">HTAPS_MAX</name> <operator pos:start="131:49" pos:end="131:50">||</operator> <name pos:start="131:52" pos:end="131:56">htaps</name><operator pos:start="131:57" pos:end="131:58">==</operator><literal type="number" pos:start="131:59" pos:end="131:59">0</literal></expr>)</condition><block type="pseudo" pos:start="133:21" pos:end="133:47"><block_content pos:start="133:21" pos:end="133:47">

                    <return pos:start="133:21" pos:end="133:47">return <expr pos:start="133:28" pos:end="133:46"><name pos:start="133:28" pos:end="133:46">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="135:17" pos:end="135:32"><expr pos:start="135:17" pos:end="135:31"><name pos:start="135:17" pos:end="135:24"><name pos:start="135:17" pos:end="135:17">p</name><operator pos:start="135:18" pos:end="135:19">-&gt;</operator><name pos:start="135:20" pos:end="135:24">htaps</name></name><operator pos:start="135:25" pos:end="135:25">=</operator> <name pos:start="135:27" pos:end="135:31">htaps</name></expr>;</expr_stmt>

                <for pos:start="137:17" pos:end="143:17">for<control pos:start="137:20" pos:end="137:39">(<init pos:start="137:21" pos:end="137:31"><expr pos:start="137:21" pos:end="137:30"><name pos:start="137:21" pos:end="137:21">i</name><operator pos:start="137:22" pos:end="137:22">=</operator> <name pos:start="137:24" pos:end="137:28">htaps</name><operator pos:start="137:29" pos:end="137:29">/</operator><literal type="number" pos:start="137:30" pos:end="137:30">2</literal></expr>;</init> <condition pos:start="137:33" pos:end="137:34"><expr pos:start="137:33" pos:end="137:33"><name pos:start="137:33" pos:end="137:33">i</name></expr>;</condition> <incr pos:start="137:36" pos:end="137:38"><expr pos:start="137:36" pos:end="137:38"><name pos:start="137:36" pos:end="137:36">i</name><operator pos:start="137:37" pos:end="137:38">--</operator></expr></incr>)</control><block pos:start="137:40" pos:end="143:17">{<block_content pos:start="139:21" pos:end="141:40">

                    <expr_stmt pos:start="139:21" pos:end="139:86"><expr pos:start="139:21" pos:end="139:85"><name pos:start="139:21" pos:end="139:32"><name pos:start="139:21" pos:end="139:21">p</name><operator pos:start="139:22" pos:end="139:23">-&gt;</operator><name pos:start="139:24" pos:end="139:29">hcoeff</name><index pos:start="139:30" pos:end="139:32">[<expr pos:start="139:31" pos:end="139:31"><name pos:start="139:31" pos:end="139:31">i</name></expr>]</index></name><operator pos:start="139:33" pos:end="139:33">=</operator> <call pos:start="139:35" pos:end="139:71"><name pos:start="139:35" pos:end="139:44">get_symbol</name><argument_list pos:start="139:45" pos:end="139:71">(<argument pos:start="139:46" pos:end="139:50"><expr pos:start="139:46" pos:end="139:50"><operator pos:start="139:46" pos:end="139:46">&amp;</operator><name pos:start="139:47" pos:end="139:50"><name pos:start="139:47" pos:end="139:47">s</name><operator pos:start="139:48" pos:end="139:49">-&gt;</operator><name pos:start="139:50" pos:end="139:50">c</name></name></expr></argument>, <argument pos:start="139:53" pos:end="139:67"><expr pos:start="139:53" pos:end="139:67"><name pos:start="139:53" pos:end="139:67"><name pos:start="139:53" pos:end="139:53">s</name><operator pos:start="139:54" pos:end="139:55">-&gt;</operator><name pos:start="139:56" pos:end="139:67">header_state</name></name></expr></argument>, <argument pos:start="139:70" pos:end="139:70"><expr pos:start="139:70" pos:end="139:70"><literal type="number" pos:start="139:70" pos:end="139:70">0</literal></expr></argument>)</argument_list></call> <operator pos:start="139:73" pos:end="139:73">*</operator> <operator pos:start="139:75" pos:end="139:75">(</operator><literal type="number" pos:start="139:76" pos:end="139:77">1</literal><operator pos:start="139:77" pos:end="139:77">-</operator><literal type="number" pos:start="139:78" pos:end="139:78">2</literal><operator pos:start="139:79" pos:end="139:79">*</operator><operator pos:start="139:80" pos:end="139:80">(</operator><name pos:start="139:81" pos:end="139:81">i</name><operator pos:start="139:82" pos:end="139:82">&amp;</operator><literal type="number" pos:start="139:83" pos:end="139:83">1</literal><operator pos:start="139:84" pos:end="139:84">)</operator><operator pos:start="139:85" pos:end="139:85">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="141:21" pos:end="141:40"><expr pos:start="141:21" pos:end="141:39"><name pos:start="141:21" pos:end="141:23">sum</name> <operator pos:start="141:25" pos:end="141:26">+=</operator> <name pos:start="141:28" pos:end="141:39"><name pos:start="141:28" pos:end="141:28">p</name><operator pos:start="141:29" pos:end="141:30">-&gt;</operator><name pos:start="141:31" pos:end="141:36">hcoeff</name><index pos:start="141:37" pos:end="141:39">[<expr pos:start="141:38" pos:end="141:38"><name pos:start="141:38" pos:end="141:38">i</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="145:17" pos:end="145:37"><expr pos:start="145:17" pos:end="145:36"><name pos:start="145:17" pos:end="145:28"><name pos:start="145:17" pos:end="145:17">p</name><operator pos:start="145:18" pos:end="145:19">-&gt;</operator><name pos:start="145:20" pos:end="145:25">hcoeff</name><index pos:start="145:26" pos:end="145:28">[<expr pos:start="145:27" pos:end="145:27"><literal type="number" pos:start="145:27" pos:end="145:27">0</literal></expr>]</index></name><operator pos:start="145:29" pos:end="145:29">=</operator> <literal type="number" pos:start="145:31" pos:end="145:33">32</literal><operator pos:start="145:33" pos:end="145:33">-</operator><name pos:start="145:34" pos:end="145:36">sum</name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="149:13" pos:end="149:53"><expr pos:start="149:13" pos:end="149:52"><name pos:start="149:13" pos:end="149:23"><name pos:start="149:13" pos:end="149:13">s</name><operator pos:start="149:14" pos:end="149:15">-&gt;</operator><name pos:start="149:16" pos:end="149:20">plane</name><index pos:start="149:21" pos:end="149:23">[<expr pos:start="149:22" pos:end="149:22"><literal type="number" pos:start="149:22" pos:end="149:22">2</literal></expr>]</index></name><operator pos:start="149:24" pos:end="149:24">.</operator><name pos:start="149:25" pos:end="149:31">diag_mc</name><operator pos:start="149:32" pos:end="149:32">=</operator> <name pos:start="149:34" pos:end="149:44"><name pos:start="149:34" pos:end="149:34">s</name><operator pos:start="149:35" pos:end="149:36">-&gt;</operator><name pos:start="149:37" pos:end="149:41">plane</name><index pos:start="149:42" pos:end="149:44">[<expr pos:start="149:43" pos:end="149:43"><literal type="number" pos:start="149:43" pos:end="149:43">1</literal></expr>]</index></name><operator pos:start="149:45" pos:end="149:45">.</operator><name pos:start="149:46" pos:end="149:52">diag_mc</name></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:51"><expr pos:start="151:13" pos:end="151:50"><name pos:start="151:13" pos:end="151:23"><name pos:start="151:13" pos:end="151:13">s</name><operator pos:start="151:14" pos:end="151:15">-&gt;</operator><name pos:start="151:16" pos:end="151:20">plane</name><index pos:start="151:21" pos:end="151:23">[<expr pos:start="151:22" pos:end="151:22"><literal type="number" pos:start="151:22" pos:end="151:22">2</literal></expr>]</index></name><operator pos:start="151:24" pos:end="151:24">.</operator><name pos:start="151:25" pos:end="151:29">htaps</name>  <operator pos:start="151:32" pos:end="151:32">=</operator> <name pos:start="151:34" pos:end="151:44"><name pos:start="151:34" pos:end="151:34">s</name><operator pos:start="151:35" pos:end="151:36">-&gt;</operator><name pos:start="151:37" pos:end="151:41">plane</name><index pos:start="151:42" pos:end="151:44">[<expr pos:start="151:43" pos:end="151:43"><literal type="number" pos:start="151:43" pos:end="151:43">1</literal></expr>]</index></name><operator pos:start="151:45" pos:end="151:45">.</operator><name pos:start="151:46" pos:end="151:50">htaps</name></expr>;</expr_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:87"><expr pos:start="153:13" pos:end="153:86"><call pos:start="153:13" pos:end="153:86"><name pos:start="153:13" pos:end="153:18">memcpy</name><argument_list pos:start="153:19" pos:end="153:86">(<argument pos:start="153:20" pos:end="153:37"><expr pos:start="153:20" pos:end="153:37"><name pos:start="153:20" pos:end="153:30"><name pos:start="153:20" pos:end="153:20">s</name><operator pos:start="153:21" pos:end="153:22">-&gt;</operator><name pos:start="153:23" pos:end="153:27">plane</name><index pos:start="153:28" pos:end="153:30">[<expr pos:start="153:29" pos:end="153:29"><literal type="number" pos:start="153:29" pos:end="153:29">2</literal></expr>]</index></name><operator pos:start="153:31" pos:end="153:31">.</operator><name pos:start="153:32" pos:end="153:37">hcoeff</name></expr></argument>, <argument pos:start="153:40" pos:end="153:57"><expr pos:start="153:40" pos:end="153:57"><name pos:start="153:40" pos:end="153:50"><name pos:start="153:40" pos:end="153:40">s</name><operator pos:start="153:41" pos:end="153:42">-&gt;</operator><name pos:start="153:43" pos:end="153:47">plane</name><index pos:start="153:48" pos:end="153:50">[<expr pos:start="153:49" pos:end="153:49"><literal type="number" pos:start="153:49" pos:end="153:49">1</literal></expr>]</index></name><operator pos:start="153:51" pos:end="153:51">.</operator><name pos:start="153:52" pos:end="153:57">hcoeff</name></expr></argument>, <argument pos:start="153:60" pos:end="153:85"><expr pos:start="153:60" pos:end="153:85"><sizeof pos:start="153:60" pos:end="153:85">sizeof<argument_list pos:start="153:66" pos:end="153:85">(<argument pos:start="153:67" pos:end="153:84"><expr pos:start="153:67" pos:end="153:84"><name pos:start="153:67" pos:end="153:77"><name pos:start="153:67" pos:end="153:67">s</name><operator pos:start="153:68" pos:end="153:69">-&gt;</operator><name pos:start="153:70" pos:end="153:74">plane</name><index pos:start="153:75" pos:end="153:77">[<expr pos:start="153:76" pos:end="153:76"><literal type="number" pos:start="153:76" pos:end="153:76">1</literal></expr>]</index></name><operator pos:start="153:78" pos:end="153:78">.</operator><name pos:start="153:79" pos:end="153:84">hcoeff</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="157:9" pos:end="163:9"><if pos:start="157:9" pos:end="163:9">if<condition pos:start="157:11" pos:end="157:43">(<expr pos:start="157:12" pos:end="157:42"><call pos:start="157:12" pos:end="157:42"><name pos:start="157:12" pos:end="157:18">get_rac</name><argument_list pos:start="157:19" pos:end="157:42">(<argument pos:start="157:20" pos:end="157:24"><expr pos:start="157:20" pos:end="157:24"><operator pos:start="157:20" pos:end="157:20">&amp;</operator><name pos:start="157:21" pos:end="157:24"><name pos:start="157:21" pos:end="157:21">s</name><operator pos:start="157:22" pos:end="157:23">-&gt;</operator><name pos:start="157:24" pos:end="157:24">c</name></name></expr></argument>, <argument pos:start="157:27" pos:end="157:41"><expr pos:start="157:27" pos:end="157:41"><name pos:start="157:27" pos:end="157:41"><name pos:start="157:27" pos:end="157:27">s</name><operator pos:start="157:28" pos:end="157:29">-&gt;</operator><name pos:start="157:30" pos:end="157:41">header_state</name></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="157:44" pos:end="163:9">{<block_content pos:start="159:13" pos:end="161:28">

            <macro pos:start="159:13" pos:end="159:87"><name pos:start="159:13" pos:end="159:17">GET_S</name><argument_list pos:start="159:18" pos:end="159:87">(<argument pos:start="159:19" pos:end="159:48">s-&gt;spatial_decomposition_count</argument>, <argument pos:start="159:51" pos:end="159:86"><literal type="number" pos:start="159:51" pos:end="159:51">0</literal> &lt; tmp &amp;&amp; tmp &lt;= MAX_DECOMPOSITIONS</argument>)</argument_list></macro>

            <expr_stmt pos:start="161:13" pos:end="161:28"><expr pos:start="161:13" pos:end="161:27"><call pos:start="161:13" pos:end="161:27"><name pos:start="161:13" pos:end="161:24">decode_qlogs</name><argument_list pos:start="161:25" pos:end="161:27">(<argument pos:start="161:26" pos:end="161:26"><expr pos:start="161:26" pos:end="161:26"><name pos:start="161:26" pos:end="161:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="169:5" pos:end="169:74"><expr pos:start="169:5" pos:end="169:73"><name pos:start="169:5" pos:end="169:33"><name pos:start="169:5" pos:end="169:5">s</name><operator pos:start="169:6" pos:end="169:7">-&gt;</operator><name pos:start="169:8" pos:end="169:33">spatial_decomposition_type</name></name><operator pos:start="169:34" pos:end="169:35">+=</operator> <call pos:start="169:37" pos:end="169:73"><name pos:start="169:37" pos:end="169:46">get_symbol</name><argument_list pos:start="169:47" pos:end="169:73">(<argument pos:start="169:48" pos:end="169:52"><expr pos:start="169:48" pos:end="169:52"><operator pos:start="169:48" pos:end="169:48">&amp;</operator><name pos:start="169:49" pos:end="169:52"><name pos:start="169:49" pos:end="169:49">s</name><operator pos:start="169:50" pos:end="169:51">-&gt;</operator><name pos:start="169:52" pos:end="169:52">c</name></name></expr></argument>, <argument pos:start="169:55" pos:end="169:69"><expr pos:start="169:55" pos:end="169:69"><name pos:start="169:55" pos:end="169:69"><name pos:start="169:55" pos:end="169:55">s</name><operator pos:start="169:56" pos:end="169:57">-&gt;</operator><name pos:start="169:58" pos:end="169:69">header_state</name></name></expr></argument>, <argument pos:start="169:72" pos:end="169:72"><expr pos:start="169:72" pos:end="169:72"><literal type="number" pos:start="169:72" pos:end="169:72">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="171:5" pos:end="177:5"><if pos:start="171:5" pos:end="177:5">if<condition pos:start="171:7" pos:end="171:42">(<expr pos:start="171:8" pos:end="171:41"><name pos:start="171:8" pos:end="171:36"><name pos:start="171:8" pos:end="171:8">s</name><operator pos:start="171:9" pos:end="171:10">-&gt;</operator><name pos:start="171:11" pos:end="171:36">spatial_decomposition_type</name></name> <operator pos:start="171:38" pos:end="171:38">&gt;</operator> <literal type="number" pos:start="171:40" pos:end="171:41">1U</literal></expr>)</condition><block pos:start="171:43" pos:end="177:5">{<block_content pos:start="173:9" pos:end="175:35">

        <expr_stmt pos:start="173:9" pos:end="173:119"><expr pos:start="173:9" pos:end="173:118"><call pos:start="173:9" pos:end="173:118"><name pos:start="173:9" pos:end="173:14">av_log</name><argument_list pos:start="173:15" pos:end="173:118">(<argument pos:start="173:16" pos:end="173:23"><expr pos:start="173:16" pos:end="173:23"><name pos:start="173:16" pos:end="173:23"><name pos:start="173:16" pos:end="173:16">s</name><operator pos:start="173:17" pos:end="173:18">-&gt;</operator><name pos:start="173:19" pos:end="173:23">avctx</name></name></expr></argument>, <argument pos:start="173:26" pos:end="173:37"><expr pos:start="173:26" pos:end="173:37"><name pos:start="173:26" pos:end="173:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="173:40" pos:end="173:86"><expr pos:start="173:40" pos:end="173:86"><literal type="string" pos:start="173:40" pos:end="173:86">"spatial_decomposition_type %d not supported\n"</literal></expr></argument>, <argument pos:start="173:89" pos:end="173:117"><expr pos:start="173:89" pos:end="173:117"><name pos:start="173:89" pos:end="173:117"><name pos:start="173:89" pos:end="173:89">s</name><operator pos:start="173:90" pos:end="173:91">-&gt;</operator><name pos:start="173:92" pos:end="173:117">spatial_decomposition_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="175:9" pos:end="175:35">return <expr pos:start="175:16" pos:end="175:34"><name pos:start="175:16" pos:end="175:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="179:5" pos:end="187:5"><if pos:start="179:5" pos:end="187:5">if<condition pos:start="179:7" pos:end="181:93">(<expr pos:start="179:8" pos:end="181:92"><call pos:start="179:8" pos:end="181:49"><name pos:start="179:8" pos:end="179:12">FFMIN</name><argument_list pos:start="179:13" pos:end="181:49">(<argument pos:start="179:14" pos:end="179:48"><expr pos:start="179:14" pos:end="179:48"><name pos:start="179:14" pos:end="179:29"><name pos:start="179:14" pos:end="179:14">s</name><operator pos:start="179:15" pos:end="179:16">-&gt;</operator><name pos:start="179:17" pos:end="179:21">avctx</name><operator pos:start="179:22" pos:end="179:23">-&gt;</operator> <name pos:start="179:25" pos:end="179:29">width</name></name><operator pos:start="179:30" pos:end="179:31">&gt;&gt;</operator><name pos:start="179:32" pos:end="179:48"><name pos:start="179:32" pos:end="179:32">s</name><operator pos:start="179:33" pos:end="179:34">-&gt;</operator><name pos:start="179:35" pos:end="179:48">chroma_h_shift</name></name></expr></argument>,

             <argument pos:start="181:14" pos:end="181:48"><expr pos:start="181:14" pos:end="181:48"><name pos:start="181:14" pos:end="181:29"><name pos:start="181:14" pos:end="181:14">s</name><operator pos:start="181:15" pos:end="181:16">-&gt;</operator><name pos:start="181:17" pos:end="181:21">avctx</name><operator pos:start="181:22" pos:end="181:23">-&gt;</operator><name pos:start="181:24" pos:end="181:29">height</name></name><operator pos:start="181:30" pos:end="181:31">&gt;&gt;</operator><name pos:start="181:32" pos:end="181:48"><name pos:start="181:32" pos:end="181:32">s</name><operator pos:start="181:33" pos:end="181:34">-&gt;</operator><name pos:start="181:35" pos:end="181:48">chroma_v_shift</name></name></expr></argument>)</argument_list></call> <operator pos:start="181:51" pos:end="181:52">&gt;&gt;</operator> <operator pos:start="181:54" pos:end="181:54">(</operator><name pos:start="181:55" pos:end="181:84"><name pos:start="181:55" pos:end="181:55">s</name><operator pos:start="181:56" pos:end="181:57">-&gt;</operator><name pos:start="181:58" pos:end="181:84">spatial_decomposition_count</name></name><operator pos:start="181:85" pos:end="181:85">-</operator><literal type="number" pos:start="181:86" pos:end="181:86">1</literal><operator pos:start="181:87" pos:end="181:87">)</operator> <operator pos:start="181:89" pos:end="181:90">&lt;=</operator> <literal type="number" pos:start="181:92" pos:end="181:92">1</literal></expr>)</condition><block pos:start="181:94" pos:end="187:5">{<block_content pos:start="183:9" pos:end="185:35">

        <expr_stmt pos:start="183:9" pos:end="183:126"><expr pos:start="183:9" pos:end="183:125"><call pos:start="183:9" pos:end="183:125"><name pos:start="183:9" pos:end="183:14">av_log</name><argument_list pos:start="183:15" pos:end="183:125">(<argument pos:start="183:16" pos:end="183:23"><expr pos:start="183:16" pos:end="183:23"><name pos:start="183:16" pos:end="183:23"><name pos:start="183:16" pos:end="183:16">s</name><operator pos:start="183:17" pos:end="183:18">-&gt;</operator><name pos:start="183:19" pos:end="183:23">avctx</name></name></expr></argument>, <argument pos:start="183:26" pos:end="183:37"><expr pos:start="183:26" pos:end="183:37"><name pos:start="183:26" pos:end="183:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="183:40" pos:end="183:92"><expr pos:start="183:40" pos:end="183:92"><literal type="string" pos:start="183:40" pos:end="183:92">"spatial_decomposition_count %d too large for size\n"</literal></expr></argument>, <argument pos:start="183:95" pos:end="183:124"><expr pos:start="183:95" pos:end="183:124"><name pos:start="183:95" pos:end="183:124"><name pos:start="183:95" pos:end="183:95">s</name><operator pos:start="183:96" pos:end="183:97">-&gt;</operator><name pos:start="183:98" pos:end="183:124">spatial_decomposition_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="185:9" pos:end="185:35">return <expr pos:start="185:16" pos:end="185:34"><name pos:start="185:16" pos:end="185:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="189:5" pos:end="195:5"><if pos:start="189:5" pos:end="195:5">if <condition pos:start="189:8" pos:end="189:34">(<expr pos:start="189:9" pos:end="189:33"><name pos:start="189:9" pos:end="189:23"><name pos:start="189:9" pos:end="189:9">s</name><operator pos:start="189:10" pos:end="189:11">-&gt;</operator><name pos:start="189:12" pos:end="189:16">avctx</name><operator pos:start="189:17" pos:end="189:18">-&gt;</operator><name pos:start="189:19" pos:end="189:23">width</name></name> <operator pos:start="189:25" pos:end="189:25">&gt;</operator> <literal type="number" pos:start="189:27" pos:end="189:32">65536</literal><operator pos:start="189:32" pos:end="189:32">-</operator><literal type="number" pos:start="189:33" pos:end="189:33">4</literal></expr>)</condition> <block pos:start="189:36" pos:end="195:5">{<block_content pos:start="191:9" pos:end="193:35">

        <expr_stmt pos:start="191:9" pos:end="191:83"><expr pos:start="191:9" pos:end="191:82"><call pos:start="191:9" pos:end="191:82"><name pos:start="191:9" pos:end="191:14">av_log</name><argument_list pos:start="191:15" pos:end="191:82">(<argument pos:start="191:16" pos:end="191:23"><expr pos:start="191:16" pos:end="191:23"><name pos:start="191:16" pos:end="191:23"><name pos:start="191:16" pos:end="191:16">s</name><operator pos:start="191:17" pos:end="191:18">-&gt;</operator><name pos:start="191:19" pos:end="191:23">avctx</name></name></expr></argument>, <argument pos:start="191:26" pos:end="191:37"><expr pos:start="191:26" pos:end="191:37"><name pos:start="191:26" pos:end="191:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="191:40" pos:end="191:64"><expr pos:start="191:40" pos:end="191:64"><literal type="string" pos:start="191:40" pos:end="191:64">"Width %d is too large\n"</literal></expr></argument>, <argument pos:start="191:67" pos:end="191:81"><expr pos:start="191:67" pos:end="191:81"><name pos:start="191:67" pos:end="191:81"><name pos:start="191:67" pos:end="191:67">s</name><operator pos:start="191:68" pos:end="191:69">-&gt;</operator><name pos:start="191:70" pos:end="191:74">avctx</name><operator pos:start="191:75" pos:end="191:76">-&gt;</operator><name pos:start="191:77" pos:end="191:81">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="193:9" pos:end="193:35">return <expr pos:start="193:16" pos:end="193:34"><name pos:start="193:16" pos:end="193:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>





    <expr_stmt pos:start="201:5" pos:end="201:63"><expr pos:start="201:5" pos:end="201:62"><name pos:start="201:5" pos:end="201:11"><name pos:start="201:5" pos:end="201:5">s</name><operator pos:start="201:6" pos:end="201:7">-&gt;</operator><name pos:start="201:8" pos:end="201:11">qlog</name></name>           <operator pos:start="201:23" pos:end="201:24">+=</operator> <call pos:start="201:26" pos:end="201:62"><name pos:start="201:26" pos:end="201:35">get_symbol</name><argument_list pos:start="201:36" pos:end="201:62">(<argument pos:start="201:37" pos:end="201:41"><expr pos:start="201:37" pos:end="201:41"><operator pos:start="201:37" pos:end="201:37">&amp;</operator><name pos:start="201:38" pos:end="201:41"><name pos:start="201:38" pos:end="201:38">s</name><operator pos:start="201:39" pos:end="201:40">-&gt;</operator><name pos:start="201:41" pos:end="201:41">c</name></name></expr></argument>, <argument pos:start="201:44" pos:end="201:58"><expr pos:start="201:44" pos:end="201:58"><name pos:start="201:44" pos:end="201:58"><name pos:start="201:44" pos:end="201:44">s</name><operator pos:start="201:45" pos:end="201:46">-&gt;</operator><name pos:start="201:47" pos:end="201:58">header_state</name></name></expr></argument>, <argument pos:start="201:61" pos:end="201:61"><expr pos:start="201:61" pos:end="201:61"><literal type="number" pos:start="201:61" pos:end="201:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="203:5" pos:end="203:63"><expr pos:start="203:5" pos:end="203:62"><name pos:start="203:5" pos:end="203:15"><name pos:start="203:5" pos:end="203:5">s</name><operator pos:start="203:6" pos:end="203:7">-&gt;</operator><name pos:start="203:8" pos:end="203:15">mv_scale</name></name>       <operator pos:start="203:23" pos:end="203:24">+=</operator> <call pos:start="203:26" pos:end="203:62"><name pos:start="203:26" pos:end="203:35">get_symbol</name><argument_list pos:start="203:36" pos:end="203:62">(<argument pos:start="203:37" pos:end="203:41"><expr pos:start="203:37" pos:end="203:41"><operator pos:start="203:37" pos:end="203:37">&amp;</operator><name pos:start="203:38" pos:end="203:41"><name pos:start="203:38" pos:end="203:38">s</name><operator pos:start="203:39" pos:end="203:40">-&gt;</operator><name pos:start="203:41" pos:end="203:41">c</name></name></expr></argument>, <argument pos:start="203:44" pos:end="203:58"><expr pos:start="203:44" pos:end="203:58"><name pos:start="203:44" pos:end="203:58"><name pos:start="203:44" pos:end="203:44">s</name><operator pos:start="203:45" pos:end="203:46">-&gt;</operator><name pos:start="203:47" pos:end="203:58">header_state</name></name></expr></argument>, <argument pos:start="203:61" pos:end="203:61"><expr pos:start="203:61" pos:end="203:61"><literal type="number" pos:start="203:61" pos:end="203:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="205:5" pos:end="205:63"><expr pos:start="205:5" pos:end="205:62"><name pos:start="205:5" pos:end="205:12"><name pos:start="205:5" pos:end="205:5">s</name><operator pos:start="205:6" pos:end="205:7">-&gt;</operator><name pos:start="205:8" pos:end="205:12">qbias</name></name>          <operator pos:start="205:23" pos:end="205:24">+=</operator> <call pos:start="205:26" pos:end="205:62"><name pos:start="205:26" pos:end="205:35">get_symbol</name><argument_list pos:start="205:36" pos:end="205:62">(<argument pos:start="205:37" pos:end="205:41"><expr pos:start="205:37" pos:end="205:41"><operator pos:start="205:37" pos:end="205:37">&amp;</operator><name pos:start="205:38" pos:end="205:41"><name pos:start="205:38" pos:end="205:38">s</name><operator pos:start="205:39" pos:end="205:40">-&gt;</operator><name pos:start="205:41" pos:end="205:41">c</name></name></expr></argument>, <argument pos:start="205:44" pos:end="205:58"><expr pos:start="205:44" pos:end="205:58"><name pos:start="205:44" pos:end="205:58"><name pos:start="205:44" pos:end="205:44">s</name><operator pos:start="205:45" pos:end="205:46">-&gt;</operator><name pos:start="205:47" pos:end="205:58">header_state</name></name></expr></argument>, <argument pos:start="205:61" pos:end="205:61"><expr pos:start="205:61" pos:end="205:61"><literal type="number" pos:start="205:61" pos:end="205:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="207:5" pos:end="207:63"><expr pos:start="207:5" pos:end="207:62"><name pos:start="207:5" pos:end="207:22"><name pos:start="207:5" pos:end="207:5">s</name><operator pos:start="207:6" pos:end="207:7">-&gt;</operator><name pos:start="207:8" pos:end="207:22">block_max_depth</name></name><operator pos:start="207:23" pos:end="207:24">+=</operator> <call pos:start="207:26" pos:end="207:62"><name pos:start="207:26" pos:end="207:35">get_symbol</name><argument_list pos:start="207:36" pos:end="207:62">(<argument pos:start="207:37" pos:end="207:41"><expr pos:start="207:37" pos:end="207:41"><operator pos:start="207:37" pos:end="207:37">&amp;</operator><name pos:start="207:38" pos:end="207:41"><name pos:start="207:38" pos:end="207:38">s</name><operator pos:start="207:39" pos:end="207:40">-&gt;</operator><name pos:start="207:41" pos:end="207:41">c</name></name></expr></argument>, <argument pos:start="207:44" pos:end="207:58"><expr pos:start="207:44" pos:end="207:58"><name pos:start="207:44" pos:end="207:58"><name pos:start="207:44" pos:end="207:44">s</name><operator pos:start="207:45" pos:end="207:46">-&gt;</operator><name pos:start="207:47" pos:end="207:58">header_state</name></name></expr></argument>, <argument pos:start="207:61" pos:end="207:61"><expr pos:start="207:61" pos:end="207:61"><literal type="number" pos:start="207:61" pos:end="207:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="209:5" pos:end="219:5"><if pos:start="209:5" pos:end="219:5">if<condition pos:start="209:7" pos:end="209:78">(<expr pos:start="209:8" pos:end="209:77"><name pos:start="209:8" pos:end="209:25"><name pos:start="209:8" pos:end="209:8">s</name><operator pos:start="209:9" pos:end="209:10">-&gt;</operator><name pos:start="209:11" pos:end="209:25">block_max_depth</name></name> <operator pos:start="209:27" pos:end="209:27">&gt;</operator> <literal type="number" pos:start="209:29" pos:end="209:29">1</literal> <operator pos:start="209:31" pos:end="209:32">||</operator> <name pos:start="209:34" pos:end="209:51"><name pos:start="209:34" pos:end="209:34">s</name><operator pos:start="209:35" pos:end="209:36">-&gt;</operator><name pos:start="209:37" pos:end="209:51">block_max_depth</name></name> <operator pos:start="209:53" pos:end="209:53">&lt;</operator> <literal type="number" pos:start="209:55" pos:end="209:55">0</literal> <operator pos:start="209:57" pos:end="209:58">||</operator> <name pos:start="209:60" pos:end="209:70"><name pos:start="209:60" pos:end="209:60">s</name><operator pos:start="209:61" pos:end="209:62">-&gt;</operator><name pos:start="209:63" pos:end="209:70">mv_scale</name></name> <operator pos:start="209:72" pos:end="209:72">&gt;</operator> <literal type="number" pos:start="209:74" pos:end="209:77">256U</literal></expr>)</condition><block pos:start="209:79" pos:end="219:5">{<block_content pos:start="211:9" pos:end="217:35">

        <expr_stmt pos:start="211:9" pos:end="211:97"><expr pos:start="211:9" pos:end="211:96"><call pos:start="211:9" pos:end="211:96"><name pos:start="211:9" pos:end="211:14">av_log</name><argument_list pos:start="211:15" pos:end="211:96">(<argument pos:start="211:16" pos:end="211:23"><expr pos:start="211:16" pos:end="211:23"><name pos:start="211:16" pos:end="211:23"><name pos:start="211:16" pos:end="211:16">s</name><operator pos:start="211:17" pos:end="211:18">-&gt;</operator><name pos:start="211:19" pos:end="211:23">avctx</name></name></expr></argument>, <argument pos:start="211:26" pos:end="211:37"><expr pos:start="211:26" pos:end="211:37"><name pos:start="211:26" pos:end="211:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="211:40" pos:end="211:75"><expr pos:start="211:40" pos:end="211:75"><literal type="string" pos:start="211:40" pos:end="211:75">"block_max_depth= %d is too large\n"</literal></expr></argument>, <argument pos:start="211:78" pos:end="211:95"><expr pos:start="211:78" pos:end="211:95"><name pos:start="211:78" pos:end="211:95"><name pos:start="211:78" pos:end="211:78">s</name><operator pos:start="211:79" pos:end="211:80">-&gt;</operator><name pos:start="211:81" pos:end="211:95">block_max_depth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="213:9" pos:end="213:30"><expr pos:start="213:9" pos:end="213:29"><name pos:start="213:9" pos:end="213:26"><name pos:start="213:9" pos:end="213:9">s</name><operator pos:start="213:10" pos:end="213:11">-&gt;</operator><name pos:start="213:12" pos:end="213:26">block_max_depth</name></name><operator pos:start="213:27" pos:end="213:27">=</operator> <literal type="number" pos:start="213:29" pos:end="213:29">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="215:9" pos:end="215:24"><expr pos:start="215:9" pos:end="215:23"><name pos:start="215:9" pos:end="215:19"><name pos:start="215:9" pos:end="215:9">s</name><operator pos:start="215:10" pos:end="215:11">-&gt;</operator><name pos:start="215:12" pos:end="215:19">mv_scale</name></name> <operator pos:start="215:21" pos:end="215:21">=</operator> <literal type="number" pos:start="215:23" pos:end="215:23">0</literal></expr>;</expr_stmt>

        <return pos:start="217:9" pos:end="217:35">return <expr pos:start="217:16" pos:end="217:34"><name pos:start="217:16" pos:end="217:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="221:5" pos:end="229:5"><if pos:start="221:5" pos:end="229:5">if <condition pos:start="221:8" pos:end="221:30">(<expr pos:start="221:9" pos:end="221:29"><call pos:start="221:9" pos:end="221:23"><name pos:start="221:9" pos:end="221:13">FFABS</name><argument_list pos:start="221:14" pos:end="221:23">(<argument pos:start="221:15" pos:end="221:22"><expr pos:start="221:15" pos:end="221:22"><name pos:start="221:15" pos:end="221:22"><name pos:start="221:15" pos:end="221:15">s</name><operator pos:start="221:16" pos:end="221:17">-&gt;</operator><name pos:start="221:18" pos:end="221:22">qbias</name></name></expr></argument>)</argument_list></call> <operator pos:start="221:25" pos:end="221:25">&gt;</operator> <literal type="number" pos:start="221:27" pos:end="221:29">127</literal></expr>)</condition> <block pos:start="221:32" pos:end="229:5">{<block_content pos:start="223:9" pos:end="227:35">

        <expr_stmt pos:start="223:9" pos:end="223:76"><expr pos:start="223:9" pos:end="223:75"><call pos:start="223:9" pos:end="223:75"><name pos:start="223:9" pos:end="223:14">av_log</name><argument_list pos:start="223:15" pos:end="223:75">(<argument pos:start="223:16" pos:end="223:23"><expr pos:start="223:16" pos:end="223:23"><name pos:start="223:16" pos:end="223:23"><name pos:start="223:16" pos:end="223:16">s</name><operator pos:start="223:17" pos:end="223:18">-&gt;</operator><name pos:start="223:19" pos:end="223:23">avctx</name></name></expr></argument>, <argument pos:start="223:26" pos:end="223:37"><expr pos:start="223:26" pos:end="223:37"><name pos:start="223:26" pos:end="223:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="223:40" pos:end="223:64"><expr pos:start="223:40" pos:end="223:64"><literal type="string" pos:start="223:40" pos:end="223:64">"qbias %d is too large\n"</literal></expr></argument>, <argument pos:start="223:67" pos:end="223:74"><expr pos:start="223:67" pos:end="223:74"><name pos:start="223:67" pos:end="223:74"><name pos:start="223:67" pos:end="223:67">s</name><operator pos:start="223:68" pos:end="223:69">-&gt;</operator><name pos:start="223:70" pos:end="223:74">qbias</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="225:9" pos:end="225:21"><expr pos:start="225:9" pos:end="225:20"><name pos:start="225:9" pos:end="225:16"><name pos:start="225:9" pos:end="225:9">s</name><operator pos:start="225:10" pos:end="225:11">-&gt;</operator><name pos:start="225:12" pos:end="225:16">qbias</name></name> <operator pos:start="225:18" pos:end="225:18">=</operator> <literal type="number" pos:start="225:20" pos:end="225:20">0</literal></expr>;</expr_stmt>

        <return pos:start="227:9" pos:end="227:35">return <expr pos:start="227:16" pos:end="227:34"><name pos:start="227:16" pos:end="227:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="233:5" pos:end="233:13">return <expr pos:start="233:12" pos:end="233:12"><literal type="number" pos:start="233:12" pos:end="233:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
