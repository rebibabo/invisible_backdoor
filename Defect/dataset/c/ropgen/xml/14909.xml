<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14909.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:29">qemu_savevm_state_iterate</name><parameter_list pos:start="1:30" pos:end="1:56">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:37">Monitor</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">mon</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:55"><decl pos:start="1:45" pos:end="1:55"><type pos:start="1:45" pos:end="1:55"><name pos:start="1:45" pos:end="1:52">QEMUFile</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:55">f</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:15">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">SaveStateEntry</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:22">se</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name> <init pos:start="7:13" pos:end="7:15">= <expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">1</literal></expr></init></decl>;</decl_stmt>



    <macro pos:start="11:5" pos:end="11:47"><name pos:start="11:5" pos:end="11:18">QTAILQ_FOREACH</name><argument_list pos:start="11:19" pos:end="11:47">(<argument pos:start="11:20" pos:end="11:21">se</argument>, <argument pos:start="11:24" pos:end="11:39">&amp;savevm_handlers</argument>, <argument pos:start="11:42" pos:end="11:46">entry</argument>)</argument_list></macro> <block pos:start="11:49" pos:end="43:5">{<block_content pos:start="13:9" pos:end="41:9">

        <if_stmt pos:start="13:9" pos:end="15:21"><if pos:start="13:9" pos:end="15:21">if <condition pos:start="13:12" pos:end="13:40">(<expr pos:start="13:13" pos:end="13:39"><name pos:start="13:13" pos:end="13:31"><name pos:start="13:13" pos:end="13:14">se</name><operator pos:start="13:15" pos:end="13:16">-&gt;</operator><name pos:start="13:17" pos:end="13:31">save_live_state</name></name> <operator pos:start="13:33" pos:end="13:34">==</operator> <name pos:start="13:36" pos:end="13:39">NULL</name></expr>)</condition><block type="pseudo" pos:start="15:13" pos:end="15:21"><block_content pos:start="15:13" pos:end="15:21">

            <continue pos:start="15:13" pos:end="15:21">continue;</continue></block_content></block></if></if_stmt>



        <comment type="block" pos:start="19:9" pos:end="19:26">/* Section type */</comment>

        <expr_stmt pos:start="21:9" pos:end="21:47"><expr pos:start="21:9" pos:end="21:46"><call pos:start="21:9" pos:end="21:46"><name pos:start="21:9" pos:end="21:21">qemu_put_byte</name><argument_list pos:start="21:22" pos:end="21:46">(<argument pos:start="21:23" pos:end="21:23"><expr pos:start="21:23" pos:end="21:23"><name pos:start="21:23" pos:end="21:23">f</name></expr></argument>, <argument pos:start="21:26" pos:end="21:45"><expr pos:start="21:26" pos:end="21:45"><name pos:start="21:26" pos:end="21:45">QEMU_VM_SECTION_PART</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:41"><expr pos:start="23:9" pos:end="23:40"><call pos:start="23:9" pos:end="23:40"><name pos:start="23:9" pos:end="23:21">qemu_put_be32</name><argument_list pos:start="23:22" pos:end="23:40">(<argument pos:start="23:23" pos:end="23:23"><expr pos:start="23:23" pos:end="23:23"><name pos:start="23:23" pos:end="23:23">f</name></expr></argument>, <argument pos:start="23:26" pos:end="23:39"><expr pos:start="23:26" pos:end="23:39"><name pos:start="23:26" pos:end="23:39"><name pos:start="23:26" pos:end="23:27">se</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:39">section_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="27:9" pos:end="27:76"><expr pos:start="27:9" pos:end="27:75"><name pos:start="27:9" pos:end="27:11">ret</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <call pos:start="27:15" pos:end="27:75"><name pos:start="27:15" pos:end="27:33"><name pos:start="27:15" pos:end="27:16">se</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:33">save_live_state</name></name><argument_list pos:start="27:34" pos:end="27:75">(<argument pos:start="27:35" pos:end="27:37"><expr pos:start="27:35" pos:end="27:37"><name pos:start="27:35" pos:end="27:37">mon</name></expr></argument>, <argument pos:start="27:40" pos:end="27:40"><expr pos:start="27:40" pos:end="27:40"><name pos:start="27:40" pos:end="27:40">f</name></expr></argument>, <argument pos:start="27:43" pos:end="27:62"><expr pos:start="27:43" pos:end="27:62"><name pos:start="27:43" pos:end="27:62">QEMU_VM_SECTION_PART</name></expr></argument>, <argument pos:start="27:65" pos:end="27:74"><expr pos:start="27:65" pos:end="27:74"><name pos:start="27:65" pos:end="27:74"><name pos:start="27:65" pos:end="27:66">se</name><operator pos:start="27:67" pos:end="27:68">-&gt;</operator><name pos:start="27:69" pos:end="27:74">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="41:9"><if pos:start="29:9" pos:end="41:9">if <condition pos:start="29:12" pos:end="29:17">(<expr pos:start="29:13" pos:end="29:16"><operator pos:start="29:13" pos:end="29:13">!</operator><name pos:start="29:14" pos:end="29:16">ret</name></expr>)</condition> <block pos:start="29:19" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:18">

            <comment type="block" pos:start="31:13" pos:end="37:51">/* Do not proceed to the next vmstate before this one reported

               completion of the current stage. This serializes the migration

               and reduces the probability that a faster changing state is

               synchronized over and over again. */</comment>

            <break pos:start="39:13" pos:end="39:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>

    <if_stmt pos:start="45:5" pos:end="49:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:17">(<expr pos:start="45:9" pos:end="45:16"><name pos:start="45:9" pos:end="45:11">ret</name> <operator pos:start="45:13" pos:end="45:14">!=</operator> <literal type="number" pos:start="45:16" pos:end="45:16">0</literal></expr>)</condition> <block pos:start="45:19" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:19">

        <return pos:start="47:9" pos:end="47:19">return <expr pos:start="47:16" pos:end="47:18"><name pos:start="47:16" pos:end="47:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:33"><expr pos:start="51:5" pos:end="51:32"><name pos:start="51:5" pos:end="51:7">ret</name> <operator pos:start="51:9" pos:end="51:9">=</operator> <call pos:start="51:11" pos:end="51:32"><name pos:start="51:11" pos:end="51:29">qemu_file_get_error</name><argument_list pos:start="51:30" pos:end="51:32">(<argument pos:start="51:31" pos:end="51:31"><expr pos:start="51:31" pos:end="51:31"><name pos:start="51:31" pos:end="51:31">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="57:5"><if pos:start="53:5" pos:end="57:5">if <condition pos:start="53:8" pos:end="53:17">(<expr pos:start="53:9" pos:end="53:16"><name pos:start="53:9" pos:end="53:11">ret</name> <operator pos:start="53:13" pos:end="53:14">!=</operator> <literal type="number" pos:start="53:16" pos:end="53:16">0</literal></expr>)</condition> <block pos:start="53:19" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:41">

        <expr_stmt pos:start="55:9" pos:end="55:41"><expr pos:start="55:9" pos:end="55:40"><call pos:start="55:9" pos:end="55:40"><name pos:start="55:9" pos:end="55:32">qemu_savevm_state_cancel</name><argument_list pos:start="55:33" pos:end="55:40">(<argument pos:start="55:34" pos:end="55:36"><expr pos:start="55:34" pos:end="55:36"><name pos:start="55:34" pos:end="55:36">mon</name></expr></argument>, <argument pos:start="55:39" pos:end="55:39"><expr pos:start="55:39" pos:end="55:39"><name pos:start="55:39" pos:end="55:39">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="59:5" pos:end="59:15">return <expr pos:start="59:12" pos:end="59:14"><name pos:start="59:12" pos:end="59:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
