<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24774.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:27">kvm_setup_guest_memory</name><parameter_list pos:start="1:28" pos:end="1:53">(<parameter pos:start="1:29" pos:end="1:39"><decl pos:start="1:29" pos:end="1:39"><type pos:start="1:29" pos:end="1:39"><name pos:start="1:29" pos:end="1:32">void</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:39">start</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:52"><decl pos:start="1:42" pos:end="1:52"><type pos:start="1:42" pos:end="1:52"><name pos:start="1:42" pos:end="1:47">size_t</name></type> <name pos:start="1:49" pos:end="1:52">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:5">

    <if_stmt pos:start="5:5" pos:end="31:5"><if pos:start="5:5" pos:end="31:5">if <condition pos:start="5:8" pos:end="5:28">(<expr pos:start="5:9" pos:end="5:27"><operator pos:start="5:9" pos:end="5:9">!</operator><call pos:start="5:10" pos:end="5:27"><name pos:start="5:10" pos:end="5:25">kvm_has_sync_mmu</name><argument_list pos:start="5:26" pos:end="5:27">()</argument_list></call></expr>)</condition> <block pos:start="5:30" pos:end="31:5">{<block_content pos:start="9:9" pos:end="30:0">

<cpp:ifdef pos:start="7:1" pos:end="7:20">#<cpp:directive pos:start="7:2" pos:end="7:6">ifdef</cpp:directive> <name pos:start="7:8" pos:end="7:20">MADV_DONTFORK</name></cpp:ifdef>

        <decl_stmt pos:start="9:9" pos:end="9:54"><decl pos:start="9:9" pos:end="9:53"><type pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">int</name></type> <name pos:start="9:13" pos:end="9:15">ret</name> <init pos:start="9:17" pos:end="9:53">= <expr pos:start="9:19" pos:end="9:53"><call pos:start="9:19" pos:end="9:53"><name pos:start="9:19" pos:end="9:25">madvise</name><argument_list pos:start="9:26" pos:end="9:53">(<argument pos:start="9:27" pos:end="9:31"><expr pos:start="9:27" pos:end="9:31"><name pos:start="9:27" pos:end="9:31">start</name></expr></argument>, <argument pos:start="9:34" pos:end="9:37"><expr pos:start="9:34" pos:end="9:37"><name pos:start="9:34" pos:end="9:37">size</name></expr></argument>, <argument pos:start="9:40" pos:end="9:52"><expr pos:start="9:40" pos:end="9:52"><name pos:start="9:40" pos:end="9:52">MADV_DONTFORK</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="13:9" pos:end="22:0"><if pos:start="13:9" pos:end="22:0">if <condition pos:start="13:12" pos:end="13:16">(<expr pos:start="13:13" pos:end="13:15"><name pos:start="13:13" pos:end="13:15">ret</name></expr>)</condition> <block pos:start="13:18" pos:end="22:0">{<block_content pos:start="15:13" pos:end="17:20">

            <expr_stmt pos:start="15:13" pos:end="15:30"><expr pos:start="15:13" pos:end="15:29"><call pos:start="15:13" pos:end="15:29"><name pos:start="15:13" pos:end="15:18">perror</name><argument_list pos:start="15:19" pos:end="15:29">(<argument pos:start="15:20" pos:end="15:28"><expr pos:start="15:20" pos:end="15:28"><literal type="string" pos:start="15:20" pos:end="15:28">"madvice"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="17:13" pos:end="17:20"><expr pos:start="17:13" pos:end="17:19"><call pos:start="17:13" pos:end="17:19"><name pos:start="17:13" pos:end="17:16">exit</name><argument_list pos:start="17:17" pos:end="17:19">(<argument pos:start="17:18" pos:end="17:18"><expr pos:start="17:18" pos:end="17:18"><literal type="number" pos:start="17:18" pos:end="17:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:else pos:start="21:1" pos:end="21:5">#<cpp:directive pos:start="21:2" pos:end="21:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="23:9" pos:end="25:74"><expr pos:start="23:9" pos:end="25:73"><call pos:start="23:9" pos:end="25:73"><name pos:start="23:9" pos:end="23:15">fprintf</name><argument_list pos:start="23:16" pos:end="25:73">(<argument pos:start="23:17" pos:end="23:22"><expr pos:start="23:17" pos:end="23:22"><name pos:start="23:17" pos:end="23:22">stderr</name></expr></argument>,

                <argument pos:start="25:17" pos:end="25:72"><expr pos:start="25:17" pos:end="25:72"><literal type="string" pos:start="25:17" pos:end="25:72">"Need MADV_DONTFORK in absence of synchronous KVM MMU\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="30:0"><expr pos:start="27:9" pos:end="27:15"><call pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:12">exit</name><argument_list pos:start="27:13" pos:end="27:15">(<argument pos:start="27:14" pos:end="27:14"><expr pos:start="27:14" pos:end="27:14"><literal type="number" pos:start="27:14" pos:end="27:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="29:1" pos:end="29:6">#<cpp:directive pos:start="29:2" pos:end="29:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
