<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20554.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">mpeg_decode_frame</name><parameter_list pos:start="1:29" pos:end="5:62">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:39"><decl pos:start="3:30" pos:end="3:39"><type pos:start="3:30" pos:end="3:39"><name pos:start="3:30" pos:end="3:33">void</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:39">data</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:55"><decl pos:start="3:42" pos:end="3:55"><type pos:start="3:42" pos:end="3:55"><name pos:start="3:42" pos:end="3:44">int</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:55">data_size</name></decl></parameter>,

                             <parameter pos:start="5:30" pos:end="5:47"><decl pos:start="5:30" pos:end="5:47"><type pos:start="5:30" pos:end="5:47"><specifier pos:start="5:30" pos:end="5:34">const</specifier> <name pos:start="5:36" pos:end="5:42">uint8_t</name> <modifier pos:start="5:44" pos:end="5:44">*</modifier></type><name pos:start="5:45" pos:end="5:47">buf</name></decl></parameter>, <parameter pos:start="5:50" pos:end="5:61"><decl pos:start="5:50" pos:end="5:61"><type pos:start="5:50" pos:end="5:61"><name pos:start="5:50" pos:end="5:52">int</name></type> <name pos:start="5:54" pos:end="5:61">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="97:1">{<block_content pos:start="9:5" pos:end="95:67">

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:38"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">Mpeg1Context</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:19">s</name> <init pos:start="9:21" pos:end="9:38">= <expr pos:start="9:23" pos:end="9:38"><name pos:start="9:23" pos:end="9:38"><name pos:start="9:23" pos:end="9:27">avctx</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">AVFrame</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:20">picture</name> <init pos:start="11:22" pos:end="11:27">= <expr pos:start="11:24" pos:end="11:27"><name pos:start="11:24" pos:end="11:27">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:42"><decl pos:start="13:5" pos:end="13:41"><type pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:18">MpegEncContext</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:22">s2</name> <init pos:start="13:24" pos:end="13:41">= <expr pos:start="13:26" pos:end="13:41"><operator pos:start="13:26" pos:end="13:26">&amp;</operator><name pos:start="13:27" pos:end="13:41"><name pos:start="13:27" pos:end="13:27">s</name><operator pos:start="13:28" pos:end="13:29">-&gt;</operator><name pos:start="13:30" pos:end="13:41">mpeg_enc_ctx</name></name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:36"><expr pos:start="15:5" pos:end="15:35"><call pos:start="15:5" pos:end="15:35"><name pos:start="15:5" pos:end="15:11">dprintf</name><argument_list pos:start="15:12" pos:end="15:35">(<argument pos:start="15:13" pos:end="15:17"><expr pos:start="15:13" pos:end="15:17"><name pos:start="15:13" pos:end="15:17">avctx</name></expr></argument>, <argument pos:start="15:20" pos:end="15:34"><expr pos:start="15:20" pos:end="15:34"><literal type="string" pos:start="15:20" pos:end="15:34">"fill_buffer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="37:5"><if pos:start="19:5" pos:end="37:5">if <condition pos:start="19:8" pos:end="19:73">(<expr pos:start="19:9" pos:end="19:72"><name pos:start="19:9" pos:end="19:16">buf_size</name> <operator pos:start="19:18" pos:end="19:19">==</operator> <literal type="number" pos:start="19:21" pos:end="19:21">0</literal> <operator pos:start="19:23" pos:end="19:24">||</operator> <operator pos:start="19:26" pos:end="19:26">(</operator><name pos:start="19:27" pos:end="19:34">buf_size</name> <operator pos:start="19:36" pos:end="19:37">==</operator> <literal type="number" pos:start="19:39" pos:end="19:39">4</literal> <operator pos:start="19:41" pos:end="19:42">&amp;&amp;</operator> <call pos:start="19:44" pos:end="19:55"><name pos:start="19:44" pos:end="19:50">AV_RB32</name><argument_list pos:start="19:51" pos:end="19:55">(<argument pos:start="19:52" pos:end="19:54"><expr pos:start="19:52" pos:end="19:54"><name pos:start="19:52" pos:end="19:54">buf</name></expr></argument>)</argument_list></call> <operator pos:start="19:57" pos:end="19:58">==</operator> <name pos:start="19:60" pos:end="19:71">SEQ_END_CODE</name><operator pos:start="19:72" pos:end="19:72">)</operator></expr>)</condition> <block pos:start="19:75" pos:end="37:5">{<block_content pos:start="23:9" pos:end="35:24">

        <comment type="block" pos:start="21:9" pos:end="21:43">/* special case for last picture */</comment>

        <if_stmt pos:start="23:9" pos:end="33:9"><if pos:start="23:9" pos:end="33:9">if <condition pos:start="23:12" pos:end="23:53">(<expr pos:start="23:13" pos:end="23:52"><name pos:start="23:13" pos:end="23:25"><name pos:start="23:13" pos:end="23:14">s2</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:25">low_delay</name></name><operator pos:start="23:26" pos:end="23:27">==</operator><literal type="number" pos:start="23:28" pos:end="23:28">0</literal> <operator pos:start="23:30" pos:end="23:31">&amp;&amp;</operator> <name pos:start="23:33" pos:end="23:52"><name pos:start="23:33" pos:end="23:34">s2</name><operator pos:start="23:35" pos:end="23:36">-&gt;</operator><name pos:start="23:37" pos:end="23:52">next_picture_ptr</name></name></expr>)</condition> <block pos:start="23:55" pos:end="33:9">{<block_content pos:start="25:13" pos:end="31:41">

            <expr_stmt pos:start="25:13" pos:end="25:54"><expr pos:start="25:13" pos:end="25:53"><operator pos:start="25:13" pos:end="25:13">*</operator><name pos:start="25:14" pos:end="25:20">picture</name><operator pos:start="25:21" pos:end="25:21">=</operator> <operator pos:start="25:23" pos:end="25:23">*</operator><operator pos:start="25:24" pos:end="25:24">(</operator><name pos:start="25:25" pos:end="25:31">AVFrame</name><operator pos:start="25:32" pos:end="25:32">*</operator><operator pos:start="25:33" pos:end="25:33">)</operator><name pos:start="25:34" pos:end="25:53"><name pos:start="25:34" pos:end="25:35">s2</name><operator pos:start="25:36" pos:end="25:37">-&gt;</operator><name pos:start="25:38" pos:end="25:53">next_picture_ptr</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:39"><expr pos:start="27:13" pos:end="27:38"><name pos:start="27:13" pos:end="27:32"><name pos:start="27:13" pos:end="27:14">s2</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:32">next_picture_ptr</name></name><operator pos:start="27:33" pos:end="27:33">=</operator> <name pos:start="27:35" pos:end="27:38">NULL</name></expr>;</expr_stmt>



            <expr_stmt pos:start="31:13" pos:end="31:41"><expr pos:start="31:13" pos:end="31:40"><operator pos:start="31:13" pos:end="31:13">*</operator><name pos:start="31:14" pos:end="31:22">data_size</name> <operator pos:start="31:24" pos:end="31:24">=</operator> <sizeof pos:start="31:26" pos:end="31:40">sizeof<argument_list pos:start="31:32" pos:end="31:40">(<argument pos:start="31:33" pos:end="31:39"><expr pos:start="31:33" pos:end="31:39"><name pos:start="31:33" pos:end="31:39">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="35:9" pos:end="35:24">return <expr pos:start="35:16" pos:end="35:23"><name pos:start="35:16" pos:end="35:23">buf_size</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="76:0"><if pos:start="41:5" pos:end="76:0">if<condition pos:start="41:7" pos:end="41:38">(<expr pos:start="41:8" pos:end="41:37"><name pos:start="41:8" pos:end="41:16"><name pos:start="41:8" pos:end="41:9">s2</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:16">flags</name></name><operator pos:start="41:17" pos:end="41:17">&amp;</operator><name pos:start="41:18" pos:end="41:37">CODEC_FLAG_TRUNCATED</name></expr>)</condition><block pos:start="41:39" pos:end="76:0">{<block_content pos:start="43:9" pos:end="49:28">

        <decl_stmt pos:start="43:9" pos:end="43:77"><decl pos:start="43:9" pos:end="43:76"><type pos:start="43:9" pos:end="43:11"><name pos:start="43:9" pos:end="43:11">int</name></type> <name pos:start="43:13" pos:end="43:16">next</name><init pos:start="43:17" pos:end="43:76">= <expr pos:start="43:19" pos:end="43:76"><call pos:start="43:19" pos:end="43:76"><name pos:start="43:19" pos:end="43:41">ff_mpeg1_find_frame_end</name><argument_list pos:start="43:42" pos:end="43:76">(<argument pos:start="43:43" pos:end="43:60"><expr pos:start="43:43" pos:end="43:60"><operator pos:start="43:43" pos:end="43:43">&amp;</operator><name pos:start="43:44" pos:end="43:60"><name pos:start="43:44" pos:end="43:45">s2</name><operator pos:start="43:46" pos:end="43:47">-&gt;</operator><name pos:start="43:48" pos:end="43:60">parse_context</name></name></expr></argument>, <argument pos:start="43:63" pos:end="43:65"><expr pos:start="43:63" pos:end="43:65"><name pos:start="43:63" pos:end="43:65">buf</name></expr></argument>, <argument pos:start="43:68" pos:end="43:75"><expr pos:start="43:68" pos:end="43:75"><name pos:start="43:68" pos:end="43:75">buf_size</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="47:9" pos:end="49:28"><if pos:start="47:9" pos:end="49:28">if<condition pos:start="47:11" pos:end="47:95">( <expr pos:start="47:13" pos:end="47:93"><call pos:start="47:13" pos:end="47:89"><name pos:start="47:13" pos:end="47:28">ff_combine_frame</name><argument_list pos:start="47:29" pos:end="47:89">(<argument pos:start="47:30" pos:end="47:47"><expr pos:start="47:30" pos:end="47:47"><operator pos:start="47:30" pos:end="47:30">&amp;</operator><name pos:start="47:31" pos:end="47:47"><name pos:start="47:31" pos:end="47:32">s2</name><operator pos:start="47:33" pos:end="47:34">-&gt;</operator><name pos:start="47:35" pos:end="47:47">parse_context</name></name></expr></argument>, <argument pos:start="47:50" pos:end="47:53"><expr pos:start="47:50" pos:end="47:53"><name pos:start="47:50" pos:end="47:53">next</name></expr></argument>, <argument pos:start="47:56" pos:end="47:77"><expr pos:start="47:56" pos:end="47:77"><operator pos:start="47:56" pos:end="47:56">(</operator><specifier pos:start="47:57" pos:end="47:61">const</specifier> <name pos:start="47:63" pos:end="47:69">uint8_t</name> <operator pos:start="47:71" pos:end="47:71">*</operator><operator pos:start="47:72" pos:end="47:72">*</operator><operator pos:start="47:73" pos:end="47:73">)</operator><operator pos:start="47:74" pos:end="47:74">&amp;</operator><name pos:start="47:75" pos:end="47:77">buf</name></expr></argument>, <argument pos:start="47:80" pos:end="47:88"><expr pos:start="47:80" pos:end="47:88"><operator pos:start="47:80" pos:end="47:80">&amp;</operator><name pos:start="47:81" pos:end="47:88">buf_size</name></expr></argument>)</argument_list></call> <operator pos:start="47:91" pos:end="47:91">&lt;</operator> <literal type="number" pos:start="47:93" pos:end="47:93">0</literal></expr> )</condition><block type="pseudo" pos:start="49:13" pos:end="49:28"><block_content pos:start="49:13" pos:end="49:28">

            <return pos:start="49:13" pos:end="49:28">return <expr pos:start="49:20" pos:end="49:27"><name pos:start="49:20" pos:end="49:27">buf_size</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



<cpp:if pos:start="55:1" pos:end="55:5">#<cpp:directive pos:start="55:2" pos:end="55:3">if</cpp:directive> <expr pos:start="55:5" pos:end="55:5"><literal type="number" pos:start="55:5" pos:end="55:5">0</literal></expr></cpp:if>

    if (s-&gt;repeat_field % 2 == 1) {

        s-&gt;repeat_field++;

        <comment type="line" pos:start="61:9" pos:end="61:117">//fprintf(stderr,"\nRepeating last frame: %d -&gt; %d! pict: %d %d", avctx-&gt;frame_number-1, avctx-&gt;frame_number,</comment>

        <comment type="line" pos:start="63:9" pos:end="63:55">//        s2-&gt;picture_number, s-&gt;repeat_field);</comment>

        if (avctx-&gt;flags &amp; CODEC_FLAG_REPEAT_FIELD) {

            *data_size = sizeof(AVPicture);

            goto the_end;

        }

    }

<cpp:endif pos:start="75:1" pos:end="75:6">#<cpp:directive pos:start="75:2" pos:end="75:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="79:5" pos:end="81:34"><if pos:start="79:5" pos:end="81:34">if<condition pos:start="79:7" pos:end="79:75">(<expr pos:start="79:8" pos:end="79:74"><name pos:start="79:8" pos:end="79:32"><name pos:start="79:8" pos:end="79:8">s</name><operator pos:start="79:9" pos:end="79:10">-&gt;</operator><name pos:start="79:11" pos:end="79:32">mpeg_enc_ctx_allocated</name></name><operator pos:start="79:33" pos:end="79:34">==</operator><literal type="number" pos:start="79:35" pos:end="79:35">0</literal> <operator pos:start="79:37" pos:end="79:38">&amp;&amp;</operator> <name pos:start="79:40" pos:end="79:55"><name pos:start="79:40" pos:end="79:44">avctx</name><operator pos:start="79:45" pos:end="79:46">-&gt;</operator><name pos:start="79:47" pos:end="79:55">codec_tag</name></name> <operator pos:start="79:57" pos:end="79:58">==</operator> <call pos:start="79:60" pos:end="79:74"><name pos:start="79:60" pos:end="79:66">AV_RL32</name><argument_list pos:start="79:67" pos:end="79:74">(<argument pos:start="79:68" pos:end="79:73"><expr pos:start="79:68" pos:end="79:73"><literal type="string" pos:start="79:68" pos:end="79:73">"VCR2"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="81:9" pos:end="81:34"><block_content pos:start="81:9" pos:end="81:34">

        <expr_stmt pos:start="81:9" pos:end="81:34"><expr pos:start="81:9" pos:end="81:33"><call pos:start="81:9" pos:end="81:33"><name pos:start="81:9" pos:end="81:26">vcr2_init_sequence</name><argument_list pos:start="81:27" pos:end="81:33">(<argument pos:start="81:28" pos:end="81:32"><expr pos:start="81:28" pos:end="81:32"><name pos:start="81:28" pos:end="81:32">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:22"><expr pos:start="85:5" pos:end="85:21"><name pos:start="85:5" pos:end="85:18"><name pos:start="85:5" pos:end="85:5">s</name><operator pos:start="85:6" pos:end="85:7">-&gt;</operator><name pos:start="85:8" pos:end="85:18">slice_count</name></name><operator pos:start="85:19" pos:end="85:19">=</operator> <literal type="number" pos:start="85:21" pos:end="85:21">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="89:5" pos:end="91:90"><if pos:start="89:5" pos:end="91:90">if<condition pos:start="89:7" pos:end="89:48">(<expr pos:start="89:8" pos:end="89:47"><name pos:start="89:8" pos:end="89:23"><name pos:start="89:8" pos:end="89:12">avctx</name><operator pos:start="89:13" pos:end="89:14">-&gt;</operator><name pos:start="89:15" pos:end="89:23">extradata</name></name> <operator pos:start="89:25" pos:end="89:26">&amp;&amp;</operator> <operator pos:start="89:28" pos:end="89:28">!</operator><name pos:start="89:29" pos:end="89:47"><name pos:start="89:29" pos:end="89:33">avctx</name><operator pos:start="89:34" pos:end="89:35">-&gt;</operator><name pos:start="89:36" pos:end="89:47">frame_number</name></name></expr>)</condition><block type="pseudo" pos:start="91:9" pos:end="91:90"><block_content pos:start="91:9" pos:end="91:90">

        <expr_stmt pos:start="91:9" pos:end="91:90"><expr pos:start="91:9" pos:end="91:89"><call pos:start="91:9" pos:end="91:89"><name pos:start="91:9" pos:end="91:21">decode_chunks</name><argument_list pos:start="91:22" pos:end="91:89">(<argument pos:start="91:23" pos:end="91:27"><expr pos:start="91:23" pos:end="91:27"><name pos:start="91:23" pos:end="91:27">avctx</name></expr></argument>, <argument pos:start="91:30" pos:end="91:36"><expr pos:start="91:30" pos:end="91:36"><name pos:start="91:30" pos:end="91:36">picture</name></expr></argument>, <argument pos:start="91:39" pos:end="91:47"><expr pos:start="91:39" pos:end="91:47"><name pos:start="91:39" pos:end="91:47">data_size</name></expr></argument>, <argument pos:start="91:50" pos:end="91:65"><expr pos:start="91:50" pos:end="91:65"><name pos:start="91:50" pos:end="91:65"><name pos:start="91:50" pos:end="91:54">avctx</name><operator pos:start="91:55" pos:end="91:56">-&gt;</operator><name pos:start="91:57" pos:end="91:65">extradata</name></name></expr></argument>, <argument pos:start="91:68" pos:end="91:88"><expr pos:start="91:68" pos:end="91:88"><name pos:start="91:68" pos:end="91:88"><name pos:start="91:68" pos:end="91:72">avctx</name><operator pos:start="91:73" pos:end="91:74">-&gt;</operator><name pos:start="91:75" pos:end="91:88">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="95:5" pos:end="95:67">return <expr pos:start="95:12" pos:end="95:66"><call pos:start="95:12" pos:end="95:66"><name pos:start="95:12" pos:end="95:24">decode_chunks</name><argument_list pos:start="95:25" pos:end="95:66">(<argument pos:start="95:26" pos:end="95:30"><expr pos:start="95:26" pos:end="95:30"><name pos:start="95:26" pos:end="95:30">avctx</name></expr></argument>, <argument pos:start="95:33" pos:end="95:39"><expr pos:start="95:33" pos:end="95:39"><name pos:start="95:33" pos:end="95:39">picture</name></expr></argument>, <argument pos:start="95:42" pos:end="95:50"><expr pos:start="95:42" pos:end="95:50"><name pos:start="95:42" pos:end="95:50">data_size</name></expr></argument>, <argument pos:start="95:53" pos:end="95:55"><expr pos:start="95:53" pos:end="95:55"><name pos:start="95:53" pos:end="95:55">buf</name></expr></argument>, <argument pos:start="95:58" pos:end="95:65"><expr pos:start="95:58" pos:end="95:65"><name pos:start="95:58" pos:end="95:65">buf_size</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
