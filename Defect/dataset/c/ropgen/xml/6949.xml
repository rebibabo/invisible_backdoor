<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6949.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">read_huffman_tables</name><parameter_list pos:start="1:31" pos:end="1:72">(<parameter pos:start="1:32" pos:end="1:45"><decl pos:start="1:32" pos:end="1:45"><type pos:start="1:32" pos:end="1:45"><name pos:start="1:32" pos:end="1:42">HYuvContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:59"><decl pos:start="1:48" pos:end="1:59"><type pos:start="1:48" pos:end="1:59"><name pos:start="1:48" pos:end="1:54">uint8_t</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:59">src</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:71"><decl pos:start="1:62" pos:end="1:71"><type pos:start="1:62" pos:end="1:71"><name pos:start="1:62" pos:end="1:64">int</name></type> <name pos:start="1:66" pos:end="1:71">length</name></decl></parameter>)</parameter_list><block pos:start="1:73" pos:end="49:1">{<block_content pos:start="3:5" pos:end="47:37">

    <decl_stmt pos:start="3:5" pos:end="3:21"><decl pos:start="3:5" pos:end="3:20"><type pos:start="3:5" pos:end="3:17"><name pos:start="3:5" pos:end="3:17">GetBitContext</name></type> <name pos:start="3:19" pos:end="3:20">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:38"><expr pos:start="9:5" pos:end="9:37"><call pos:start="9:5" pos:end="9:37"><name pos:start="9:5" pos:end="9:17">init_get_bits</name><argument_list pos:start="9:18" pos:end="9:37">(<argument pos:start="9:19" pos:end="9:21"><expr pos:start="9:19" pos:end="9:21"><operator pos:start="9:19" pos:end="9:19">&amp;</operator><name pos:start="9:20" pos:end="9:21">gb</name></expr></argument>, <argument pos:start="9:24" pos:end="9:26"><expr pos:start="9:24" pos:end="9:26"><name pos:start="9:24" pos:end="9:26">src</name></expr></argument>, <argument pos:start="9:29" pos:end="9:36"><expr pos:start="9:29" pos:end="9:36"><name pos:start="9:29" pos:end="9:34">length</name><operator pos:start="9:35" pos:end="9:35">*</operator><literal type="number" pos:start="9:36" pos:end="9:36">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="13:5" pos:end="39:5">for<control pos:start="13:8" pos:end="13:22">(<init pos:start="13:9" pos:end="13:12"><expr pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:9">i</name><operator pos:start="13:10" pos:end="13:10">=</operator><literal type="number" pos:start="13:11" pos:end="13:11">0</literal></expr>;</init> <condition pos:start="13:14" pos:end="13:17"><expr pos:start="13:14" pos:end="13:16"><name pos:start="13:14" pos:end="13:14">i</name><operator pos:start="13:15" pos:end="13:15">&lt;</operator><literal type="number" pos:start="13:16" pos:end="13:16">3</literal></expr>;</condition> <incr pos:start="13:19" pos:end="13:21"><expr pos:start="13:19" pos:end="13:21"><name pos:start="13:19" pos:end="13:19">i</name><operator pos:start="13:20" pos:end="13:21">++</operator></expr></incr>)</control><block pos:start="13:23" pos:end="39:5">{<block_content pos:start="15:9" pos:end="37:82">

        <expr_stmt pos:start="15:9" pos:end="15:39"><expr pos:start="15:9" pos:end="15:38"><call pos:start="15:9" pos:end="15:38"><name pos:start="15:9" pos:end="15:22">read_len_table</name><argument_list pos:start="15:23" pos:end="15:38">(<argument pos:start="15:24" pos:end="15:32"><expr pos:start="15:24" pos:end="15:32"><name pos:start="15:24" pos:end="15:32"><name pos:start="15:24" pos:end="15:24">s</name><operator pos:start="15:25" pos:end="15:26">-&gt;</operator><name pos:start="15:27" pos:end="15:29">len</name><index pos:start="15:30" pos:end="15:32">[<expr pos:start="15:31" pos:end="15:31"><name pos:start="15:31" pos:end="15:31">i</name></expr>]</index></name></expr></argument>, <argument pos:start="15:35" pos:end="15:37"><expr pos:start="15:35" pos:end="15:37"><operator pos:start="15:35" pos:end="15:35">&amp;</operator><name pos:start="15:36" pos:end="15:37">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="19:9" pos:end="34:0"><if pos:start="19:9" pos:end="34:0">if<condition pos:start="19:11" pos:end="19:56">(<expr pos:start="19:12" pos:end="19:55"><call pos:start="19:12" pos:end="19:53"><name pos:start="19:12" pos:end="19:30">generate_bits_table</name><argument_list pos:start="19:31" pos:end="19:53">(<argument pos:start="19:32" pos:end="19:41"><expr pos:start="19:32" pos:end="19:41"><name pos:start="19:32" pos:end="19:41"><name pos:start="19:32" pos:end="19:32">s</name><operator pos:start="19:33" pos:end="19:34">-&gt;</operator><name pos:start="19:35" pos:end="19:38">bits</name><index pos:start="19:39" pos:end="19:41">[<expr pos:start="19:40" pos:end="19:40"><name pos:start="19:40" pos:end="19:40">i</name></expr>]</index></name></expr></argument>, <argument pos:start="19:44" pos:end="19:52"><expr pos:start="19:44" pos:end="19:52"><name pos:start="19:44" pos:end="19:52"><name pos:start="19:44" pos:end="19:44">s</name><operator pos:start="19:45" pos:end="19:46">-&gt;</operator><name pos:start="19:47" pos:end="19:49">len</name><index pos:start="19:50" pos:end="19:52">[<expr pos:start="19:51" pos:end="19:51"><name pos:start="19:51" pos:end="19:51">i</name></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="19:54" pos:end="19:54">&lt;</operator><literal type="number" pos:start="19:55" pos:end="19:55">0</literal></expr>)</condition><block pos:start="19:57" pos:end="34:0">{<block_content pos:start="21:13" pos:end="21:22">

            <return pos:start="21:13" pos:end="21:22">return <expr pos:start="21:20" pos:end="21:21"><operator pos:start="21:20" pos:end="21:20">-</operator><literal type="number" pos:start="21:21" pos:end="21:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

<cpp:if pos:start="25:1" pos:end="25:5">#<cpp:directive pos:start="25:2" pos:end="25:3">if</cpp:directive> <expr pos:start="25:5" pos:end="25:5"><literal type="number" pos:start="25:5" pos:end="25:5">0</literal></expr></cpp:if>

for(j=0; j&lt;256; j++){

printf("%6X, %2d,  %3d\n", s-&gt;bits[i][j], s-&gt;len[i][j], j);

}

<cpp:endif pos:start="33:1" pos:end="33:6">#<cpp:directive pos:start="33:2" pos:end="33:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="35:9" pos:end="35:29"><expr pos:start="35:9" pos:end="35:28"><call pos:start="35:9" pos:end="35:28"><name pos:start="35:9" pos:end="35:16">free_vlc</name><argument_list pos:start="35:17" pos:end="35:28">(<argument pos:start="35:18" pos:end="35:27"><expr pos:start="35:18" pos:end="35:27"><operator pos:start="35:18" pos:end="35:18">&amp;</operator><name pos:start="35:19" pos:end="35:27"><name pos:start="35:19" pos:end="35:19">s</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:24">vlc</name><index pos:start="35:25" pos:end="35:27">[<expr pos:start="35:26" pos:end="35:26"><name pos:start="35:26" pos:end="35:26">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:82"><expr pos:start="37:9" pos:end="37:81"><call pos:start="37:9" pos:end="37:81"><name pos:start="37:9" pos:end="37:16">init_vlc</name><argument_list pos:start="37:17" pos:end="37:81">(<argument pos:start="37:18" pos:end="37:27"><expr pos:start="37:18" pos:end="37:27"><operator pos:start="37:18" pos:end="37:18">&amp;</operator><name pos:start="37:19" pos:end="37:27"><name pos:start="37:19" pos:end="37:19">s</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:24">vlc</name><index pos:start="37:25" pos:end="37:27">[<expr pos:start="37:26" pos:end="37:26"><name pos:start="37:26" pos:end="37:26">i</name></expr>]</index></name></expr></argument>, <argument pos:start="37:30" pos:end="37:37"><expr pos:start="37:30" pos:end="37:37"><name pos:start="37:30" pos:end="37:37">VLC_BITS</name></expr></argument>, <argument pos:start="37:40" pos:end="37:42"><expr pos:start="37:40" pos:end="37:42"><literal type="number" pos:start="37:40" pos:end="37:42">256</literal></expr></argument>, <argument pos:start="37:45" pos:end="37:53"><expr pos:start="37:45" pos:end="37:53"><name pos:start="37:45" pos:end="37:53"><name pos:start="37:45" pos:end="37:45">s</name><operator pos:start="37:46" pos:end="37:47">-&gt;</operator><name pos:start="37:48" pos:end="37:50">len</name><index pos:start="37:51" pos:end="37:53">[<expr pos:start="37:52" pos:end="37:52"><name pos:start="37:52" pos:end="37:52">i</name></expr>]</index></name></expr></argument>, <argument pos:start="37:56" pos:end="37:56"><expr pos:start="37:56" pos:end="37:56"><literal type="number" pos:start="37:56" pos:end="37:56">1</literal></expr></argument>, <argument pos:start="37:59" pos:end="37:59"><expr pos:start="37:59" pos:end="37:59"><literal type="number" pos:start="37:59" pos:end="37:59">1</literal></expr></argument>, <argument pos:start="37:62" pos:end="37:71"><expr pos:start="37:62" pos:end="37:71"><name pos:start="37:62" pos:end="37:71"><name pos:start="37:62" pos:end="37:62">s</name><operator pos:start="37:63" pos:end="37:64">-&gt;</operator><name pos:start="37:65" pos:end="37:68">bits</name><index pos:start="37:69" pos:end="37:71">[<expr pos:start="37:70" pos:end="37:70"><name pos:start="37:70" pos:end="37:70">i</name></expr>]</index></name></expr></argument>, <argument pos:start="37:74" pos:end="37:74"><expr pos:start="37:74" pos:end="37:74"><literal type="number" pos:start="37:74" pos:end="37:74">4</literal></expr></argument>, <argument pos:start="37:77" pos:end="37:77"><expr pos:start="37:77" pos:end="37:77"><literal type="number" pos:start="37:77" pos:end="37:77">4</literal></expr></argument>, <argument pos:start="37:80" pos:end="37:80"><expr pos:start="37:80" pos:end="37:80"><literal type="number" pos:start="37:80" pos:end="37:80">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="43:5" pos:end="43:29"><expr pos:start="43:5" pos:end="43:28"><call pos:start="43:5" pos:end="43:28"><name pos:start="43:5" pos:end="43:25">generate_joint_tables</name><argument_list pos:start="43:26" pos:end="43:28">(<argument pos:start="43:27" pos:end="43:27"><expr pos:start="43:27" pos:end="43:27"><name pos:start="43:27" pos:end="43:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="47:5" pos:end="47:37">return <expr pos:start="47:12" pos:end="47:36"><operator pos:start="47:12" pos:end="47:12">(</operator><call pos:start="47:13" pos:end="47:31"><name pos:start="47:13" pos:end="47:26">get_bits_count</name><argument_list pos:start="47:27" pos:end="47:31">(<argument pos:start="47:28" pos:end="47:30"><expr pos:start="47:28" pos:end="47:30"><operator pos:start="47:28" pos:end="47:28">&amp;</operator><name pos:start="47:29" pos:end="47:30">gb</name></expr></argument>)</argument_list></call><operator pos:start="47:32" pos:end="47:32">+</operator><literal type="number" pos:start="47:33" pos:end="47:33">7</literal><operator pos:start="47:34" pos:end="47:34">)</operator><operator pos:start="47:35" pos:end="47:35">/</operator><literal type="number" pos:start="47:36" pos:end="47:36">8</literal></expr>;</return>

</block_content>}</block></function>
</unit>
