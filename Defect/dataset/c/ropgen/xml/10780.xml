<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10780.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:41">spapr_phb_vfio_finish_realize</name><parameter_list pos:start="1:42" pos:end="1:76">(<parameter pos:start="1:43" pos:end="1:61"><decl pos:start="1:43" pos:end="1:61"><type pos:start="1:43" pos:end="1:61"><name pos:start="1:43" pos:end="1:55">sPAPRPHBState</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">sphb</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:75"><decl pos:start="1:64" pos:end="1:75"><type pos:start="1:64" pos:end="1:75"><name pos:start="1:64" pos:end="1:68">Error</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier><modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:75">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="85:1">{<block_content pos:start="5:5" pos:end="83:59">

    <decl_stmt pos:start="5:5" pos:end="5:64"><decl pos:start="5:5" pos:end="5:63"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21">sPAPRPHBVFIOState</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:28">svphb</name> <init pos:start="5:30" pos:end="5:63">= <expr pos:start="5:32" pos:end="5:63"><call pos:start="5:32" pos:end="5:63"><name pos:start="5:32" pos:end="5:57">SPAPR_PCI_VFIO_HOST_BRIDGE</name><argument_list pos:start="5:58" pos:end="5:63">(<argument pos:start="5:59" pos:end="5:62"><expr pos:start="5:59" pos:end="5:62"><name pos:start="5:59" pos:end="5:62">sphb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:70"><decl pos:start="7:5" pos:end="7:69"><type pos:start="7:5" pos:end="7:36"><name pos:start="7:5" pos:end="7:36"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:36">vfio_iommu_spapr_tce_info</name></name></type> <name pos:start="7:38" pos:end="7:41">info</name> <init pos:start="7:43" pos:end="7:69">= <expr pos:start="7:45" pos:end="7:69"><block pos:start="7:45" pos:end="7:69">{ <expr pos:start="7:47" pos:end="7:67"><operator pos:start="7:47" pos:end="7:47">.</operator><name pos:start="7:48" pos:end="7:52">argsz</name> <operator pos:start="7:54" pos:end="7:54">=</operator> sizeof<operator pos:start="7:62" pos:end="7:62">(</operator><name pos:start="7:63" pos:end="7:66">info</name><operator pos:start="7:67" pos:end="7:67">)</operator></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">sPAPRTCETable</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:23">tcet</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:42"><decl pos:start="13:5" pos:end="13:41"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:18">liobn</name> <init pos:start="13:20" pos:end="13:41">= <expr pos:start="13:22" pos:end="13:41"><name pos:start="13:22" pos:end="13:41"><name pos:start="13:22" pos:end="13:26">svphb</name><operator pos:start="13:27" pos:end="13:28">-&gt;</operator><name pos:start="13:29" pos:end="13:31">phb</name><operator pos:start="13:32" pos:end="13:32">.</operator><name pos:start="13:33" pos:end="13:41">dma_liobn</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:34">(<expr pos:start="17:9" pos:end="17:33"><name pos:start="17:9" pos:end="17:27"><name pos:start="17:9" pos:end="17:13">svphb</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:27">iommugroupid</name></name> <operator pos:start="17:29" pos:end="17:30">==</operator> <operator pos:start="17:32" pos:end="17:32">-</operator><literal type="number" pos:start="17:33" pos:end="17:33">1</literal></expr>)</condition> <block pos:start="17:36" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:15">

        <expr_stmt pos:start="19:9" pos:end="19:73"><expr pos:start="19:9" pos:end="19:72"><call pos:start="19:9" pos:end="19:72"><name pos:start="19:9" pos:end="19:18">error_setg</name><argument_list pos:start="19:19" pos:end="19:72">(<argument pos:start="19:20" pos:end="19:23"><expr pos:start="19:20" pos:end="19:23"><name pos:start="19:20" pos:end="19:23">errp</name></expr></argument>, <argument pos:start="19:26" pos:end="19:50"><expr pos:start="19:26" pos:end="19:50"><literal type="string" pos:start="19:26" pos:end="19:50">"Wrong IOMMU group ID %d"</literal></expr></argument>, <argument pos:start="19:53" pos:end="19:71"><expr pos:start="19:53" pos:end="19:71"><name pos:start="19:53" pos:end="19:71"><name pos:start="19:53" pos:end="19:57">svphb</name><operator pos:start="19:58" pos:end="19:59">-&gt;</operator><name pos:start="19:60" pos:end="19:71">iommugroupid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="31:62"><expr pos:start="27:5" pos:end="31:61"><name pos:start="27:5" pos:end="27:7">ret</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="31:61"><name pos:start="27:11" pos:end="27:30">vfio_container_ioctl</name><argument_list pos:start="27:31" pos:end="31:61">(<argument pos:start="27:32" pos:end="27:51"><expr pos:start="27:32" pos:end="27:51"><operator pos:start="27:32" pos:end="27:32">&amp;</operator><name pos:start="27:33" pos:end="27:51"><name pos:start="27:33" pos:end="27:37">svphb</name><operator pos:start="27:38" pos:end="27:39">-&gt;</operator><name pos:start="27:40" pos:end="27:42">phb</name><operator pos:start="27:43" pos:end="27:43">.</operator><name pos:start="27:44" pos:end="27:51">iommu_as</name></name></expr></argument>, <argument pos:start="27:54" pos:end="27:72"><expr pos:start="27:54" pos:end="27:72"><name pos:start="27:54" pos:end="27:72"><name pos:start="27:54" pos:end="27:58">svphb</name><operator pos:start="27:59" pos:end="27:60">-&gt;</operator><name pos:start="27:61" pos:end="27:72">iommugroupid</name></name></expr></argument>,

                               <argument pos:start="29:32" pos:end="29:51"><expr pos:start="29:32" pos:end="29:51"><name pos:start="29:32" pos:end="29:51">VFIO_CHECK_EXTENSION</name></expr></argument>,

                               <argument pos:start="31:32" pos:end="31:60"><expr pos:start="31:32" pos:end="31:60"><operator pos:start="31:32" pos:end="31:32">(</operator><name pos:start="31:33" pos:end="31:36">void</name> <operator pos:start="31:38" pos:end="31:38">*</operator><operator pos:start="31:39" pos:end="31:39">)</operator> <name pos:start="31:41" pos:end="31:60">VFIO_SPAPR_TCE_IOMMU</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="41:5"><if pos:start="33:5" pos:end="41:5">if <condition pos:start="33:8" pos:end="33:17">(<expr pos:start="33:9" pos:end="33:16"><name pos:start="33:9" pos:end="33:11">ret</name> <operator pos:start="33:13" pos:end="33:14">!=</operator> <literal type="number" pos:start="33:16" pos:end="33:16">1</literal></expr>)</condition> <block pos:start="33:19" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:15">

        <expr_stmt pos:start="35:9" pos:end="37:73"><expr pos:start="35:9" pos:end="37:72"><call pos:start="35:9" pos:end="37:72"><name pos:start="35:9" pos:end="35:24">error_setg_errno</name><argument_list pos:start="35:25" pos:end="37:72">(<argument pos:start="35:26" pos:end="35:29"><expr pos:start="35:26" pos:end="35:29"><name pos:start="35:26" pos:end="35:29">errp</name></expr></argument>, <argument pos:start="35:32" pos:end="35:35"><expr pos:start="35:32" pos:end="35:35"><operator pos:start="35:32" pos:end="35:32">-</operator><name pos:start="35:33" pos:end="35:35">ret</name></expr></argument>,

                         <argument pos:start="37:26" pos:end="37:71"><expr pos:start="37:26" pos:end="37:71"><literal type="string" pos:start="37:26" pos:end="37:71">"spapr-vfio: SPAPR extension is not supported"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="47:69"><expr pos:start="45:5" pos:end="47:68"><name pos:start="45:5" pos:end="45:7">ret</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <call pos:start="45:11" pos:end="47:68"><name pos:start="45:11" pos:end="45:30">vfio_container_ioctl</name><argument_list pos:start="45:31" pos:end="47:68">(<argument pos:start="45:32" pos:end="45:51"><expr pos:start="45:32" pos:end="45:51"><operator pos:start="45:32" pos:end="45:32">&amp;</operator><name pos:start="45:33" pos:end="45:51"><name pos:start="45:33" pos:end="45:37">svphb</name><operator pos:start="45:38" pos:end="45:39">-&gt;</operator><name pos:start="45:40" pos:end="45:42">phb</name><operator pos:start="45:43" pos:end="45:43">.</operator><name pos:start="45:44" pos:end="45:51">iommu_as</name></name></expr></argument>, <argument pos:start="45:54" pos:end="45:72"><expr pos:start="45:54" pos:end="45:72"><name pos:start="45:54" pos:end="45:72"><name pos:start="45:54" pos:end="45:58">svphb</name><operator pos:start="45:59" pos:end="45:60">-&gt;</operator><name pos:start="45:61" pos:end="45:72">iommugroupid</name></name></expr></argument>,

                               <argument pos:start="47:32" pos:end="47:60"><expr pos:start="47:32" pos:end="47:60"><name pos:start="47:32" pos:end="47:60">VFIO_IOMMU_SPAPR_TCE_GET_INFO</name></expr></argument>, <argument pos:start="47:63" pos:end="47:67"><expr pos:start="47:63" pos:end="47:67"><operator pos:start="47:63" pos:end="47:63">&amp;</operator><name pos:start="47:64" pos:end="47:67">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="57:5"><if pos:start="49:5" pos:end="57:5">if <condition pos:start="49:8" pos:end="49:12">(<expr pos:start="49:9" pos:end="49:11"><name pos:start="49:9" pos:end="49:11">ret</name></expr>)</condition> <block pos:start="49:14" pos:end="57:5">{<block_content pos:start="51:9" pos:end="55:15">

        <expr_stmt pos:start="51:9" pos:end="53:71"><expr pos:start="51:9" pos:end="53:70"><call pos:start="51:9" pos:end="53:70"><name pos:start="51:9" pos:end="51:24">error_setg_errno</name><argument_list pos:start="51:25" pos:end="53:70">(<argument pos:start="51:26" pos:end="51:29"><expr pos:start="51:26" pos:end="51:29"><name pos:start="51:26" pos:end="51:29">errp</name></expr></argument>, <argument pos:start="51:32" pos:end="51:35"><expr pos:start="51:32" pos:end="51:35"><operator pos:start="51:32" pos:end="51:32">-</operator><name pos:start="51:33" pos:end="51:35">ret</name></expr></argument>,

                         <argument pos:start="53:26" pos:end="53:69"><expr pos:start="53:26" pos:end="53:69"><literal type="string" pos:start="53:26" pos:end="53:69">"spapr-vfio: get info from container failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="55:9" pos:end="55:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="67:37"><expr pos:start="61:5" pos:end="67:36"><name pos:start="61:5" pos:end="61:8">tcet</name> <operator pos:start="61:10" pos:end="61:10">=</operator> <call pos:start="61:12" pos:end="67:36"><name pos:start="61:12" pos:end="61:30">spapr_tce_new_table</name><argument_list pos:start="61:31" pos:end="67:36">(<argument pos:start="61:32" pos:end="61:43"><expr pos:start="61:32" pos:end="61:43"><call pos:start="61:32" pos:end="61:43"><name pos:start="61:32" pos:end="61:37">DEVICE</name><argument_list pos:start="61:38" pos:end="61:43">(<argument pos:start="61:39" pos:end="61:42"><expr pos:start="61:39" pos:end="61:42"><name pos:start="61:39" pos:end="61:42">sphb</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="61:46" pos:end="61:50"><expr pos:start="61:46" pos:end="61:50"><name pos:start="61:46" pos:end="61:50">liobn</name></expr></argument>, <argument pos:start="61:53" pos:end="61:75"><expr pos:start="61:53" pos:end="61:75"><name pos:start="61:53" pos:end="61:75"><name pos:start="61:53" pos:end="61:56">info</name><operator pos:start="61:57" pos:end="61:57">.</operator><name pos:start="61:58" pos:end="61:75">dma32_window_start</name></name></expr></argument>,

                               <argument pos:start="63:32" pos:end="63:51"><expr pos:start="63:32" pos:end="63:51"><name pos:start="63:32" pos:end="63:51">SPAPR_TCE_PAGE_SHIFT</name></expr></argument>,

                               <argument pos:start="65:32" pos:end="65:77"><expr pos:start="65:32" pos:end="65:77"><name pos:start="65:32" pos:end="65:53"><name pos:start="65:32" pos:end="65:35">info</name><operator pos:start="65:36" pos:end="65:36">.</operator><name pos:start="65:37" pos:end="65:53">dma32_window_size</name></name> <operator pos:start="65:55" pos:end="65:56">&gt;&gt;</operator> <name pos:start="65:58" pos:end="65:77">SPAPR_TCE_PAGE_SHIFT</name></expr></argument>,

                               <argument pos:start="67:32" pos:end="67:35"><expr pos:start="67:32" pos:end="67:35"><name pos:start="67:32" pos:end="67:35">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="69:5" pos:end="75:5"><if pos:start="69:5" pos:end="75:5">if <condition pos:start="69:8" pos:end="69:14">(<expr pos:start="69:9" pos:end="69:13"><operator pos:start="69:9" pos:end="69:9">!</operator><name pos:start="69:10" pos:end="69:13">tcet</name></expr>)</condition> <block pos:start="69:16" pos:end="75:5">{<block_content pos:start="71:9" pos:end="73:15">

        <expr_stmt pos:start="71:9" pos:end="71:72"><expr pos:start="71:9" pos:end="71:71"><call pos:start="71:9" pos:end="71:71"><name pos:start="71:9" pos:end="71:18">error_setg</name><argument_list pos:start="71:19" pos:end="71:71">(<argument pos:start="71:20" pos:end="71:23"><expr pos:start="71:20" pos:end="71:23"><name pos:start="71:20" pos:end="71:23">errp</name></expr></argument>, <argument pos:start="71:26" pos:end="71:70"><expr pos:start="71:26" pos:end="71:70"><literal type="string" pos:start="71:26" pos:end="71:70">"spapr-vfio: failed to create VFIO TCE table"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="73:9" pos:end="73:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="79:5" pos:end="79:43">/* Register default 32bit DMA window */</comment>

    <expr_stmt pos:start="81:5" pos:end="83:59"><expr pos:start="81:5" pos:end="83:58"><call pos:start="81:5" pos:end="83:58"><name pos:start="81:5" pos:end="81:31">memory_region_add_subregion</name><argument_list pos:start="81:32" pos:end="83:58">(<argument pos:start="81:33" pos:end="81:49"><expr pos:start="81:33" pos:end="81:49"><operator pos:start="81:33" pos:end="81:33">&amp;</operator><name pos:start="81:34" pos:end="81:49"><name pos:start="81:34" pos:end="81:37">sphb</name><operator pos:start="81:38" pos:end="81:39">-&gt;</operator><name pos:start="81:40" pos:end="81:49">iommu_root</name></name></expr></argument>, <argument pos:start="81:52" pos:end="81:67"><expr pos:start="81:52" pos:end="81:67"><name pos:start="81:52" pos:end="81:67"><name pos:start="81:52" pos:end="81:55">tcet</name><operator pos:start="81:56" pos:end="81:57">-&gt;</operator><name pos:start="81:58" pos:end="81:67">bus_offset</name></name></expr></argument>,

                                <argument pos:start="83:33" pos:end="83:57"><expr pos:start="83:33" pos:end="83:57"><call pos:start="83:33" pos:end="83:57"><name pos:start="83:33" pos:end="83:51">spapr_tce_get_iommu</name><argument_list pos:start="83:52" pos:end="83:57">(<argument pos:start="83:53" pos:end="83:56"><expr pos:start="83:53" pos:end="83:56"><name pos:start="83:53" pos:end="83:56">tcet</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
