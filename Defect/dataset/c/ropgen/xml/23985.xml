<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23985.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">check_suspend_mode</name><parameter_list pos:start="1:31" pos:end="1:67">(<parameter pos:start="1:32" pos:end="1:52"><decl pos:start="1:32" pos:end="1:52"><type pos:start="1:32" pos:end="1:52"><name pos:start="1:32" pos:end="1:47">GuestSuspendMode</name></type> <name pos:start="1:49" pos:end="1:52">mode</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:66"><decl pos:start="1:55" pos:end="1:66"><type pos:start="1:55" pos:end="1:66"><name pos:start="1:55" pos:end="1:59">Error</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier><modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:66">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:5">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:29"><name pos:start="5:5" pos:end="5:29">SYSTEM_POWER_CAPABILITIES</name></type> <name pos:start="5:31" pos:end="5:42">sys_pwr_caps</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">Error</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:20">local_err</name> <init pos:start="7:22" pos:end="7:27">= <expr pos:start="7:24" pos:end="7:27"><name pos:start="7:24" pos:end="7:27">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:27">(<expr pos:start="11:9" pos:end="11:26"><call pos:start="11:9" pos:end="11:26"><name pos:start="11:9" pos:end="11:20">error_is_set</name><argument_list pos:start="11:21" pos:end="11:26">(<argument pos:start="11:22" pos:end="11:25"><expr pos:start="11:22" pos:end="11:25"><name pos:start="11:22" pos:end="11:25">errp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:29" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:15">

        <return pos:start="13:9" pos:end="13:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:52"><expr pos:start="17:5" pos:end="17:51"><call pos:start="17:5" pos:end="17:51"><name pos:start="17:5" pos:end="17:14">ZeroMemory</name><argument_list pos:start="17:15" pos:end="17:51">(<argument pos:start="17:16" pos:end="17:28"><expr pos:start="17:16" pos:end="17:28"><operator pos:start="17:16" pos:end="17:16">&amp;</operator><name pos:start="17:17" pos:end="17:28">sys_pwr_caps</name></expr></argument>, <argument pos:start="17:31" pos:end="17:50"><expr pos:start="17:31" pos:end="17:50"><sizeof pos:start="17:31" pos:end="17:50">sizeof<argument_list pos:start="17:37" pos:end="17:50">(<argument pos:start="17:38" pos:end="17:49"><expr pos:start="17:38" pos:end="17:49"><name pos:start="17:38" pos:end="17:49">sys_pwr_caps</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="27:5"><if pos:start="19:5" pos:end="27:5">if <condition pos:start="19:8" pos:end="19:43">(<expr pos:start="19:9" pos:end="19:42"><operator pos:start="19:9" pos:end="19:9">!</operator><call pos:start="19:10" pos:end="19:42"><name pos:start="19:10" pos:end="19:27">GetPwrCapabilities</name><argument_list pos:start="19:28" pos:end="19:42">(<argument pos:start="19:29" pos:end="19:41"><expr pos:start="19:29" pos:end="19:41"><operator pos:start="19:29" pos:end="19:29">&amp;</operator><name pos:start="19:30" pos:end="19:41">sys_pwr_caps</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:45" pos:end="27:5">{<block_content pos:start="21:9" pos:end="25:17">

        <expr_stmt pos:start="21:9" pos:end="23:68"><expr pos:start="21:9" pos:end="23:67"><call pos:start="21:9" pos:end="23:67"><name pos:start="21:9" pos:end="21:17">error_set</name><argument_list pos:start="21:18" pos:end="23:67">(<argument pos:start="21:19" pos:end="21:28"><expr pos:start="21:19" pos:end="21:28"><operator pos:start="21:19" pos:end="21:19">&amp;</operator><name pos:start="21:20" pos:end="21:28">local_err</name></expr></argument>, <argument pos:start="21:31" pos:end="21:53"><expr pos:start="21:31" pos:end="21:53"><name pos:start="21:31" pos:end="21:53">QERR_QGA_COMMAND_FAILED</name></expr></argument>,

                  <argument pos:start="23:19" pos:end="23:66"><expr pos:start="23:19" pos:end="23:66"><literal type="string" pos:start="23:19" pos:end="23:66">"failed to determine guest suspend capabilities"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="25:9" pos:end="25:17">goto <name pos:start="25:14" pos:end="25:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="31:5" pos:end="63:5">switch <condition pos:start="31:12" pos:end="31:17">(<expr pos:start="31:13" pos:end="31:16"><name pos:start="31:13" pos:end="31:16">mode</name></expr>)</condition> <block pos:start="31:19" pos:end="63:5">{<block_content pos:start="33:5" pos:end="61:38">

    <case pos:start="33:5" pos:end="33:33">case <expr pos:start="33:10" pos:end="33:32"><name pos:start="33:10" pos:end="33:32">GUEST_SUSPEND_MODE_DISK</name></expr>:</case>

        <if_stmt pos:start="35:9" pos:end="41:9"><if pos:start="35:9" pos:end="41:9">if <condition pos:start="35:12" pos:end="35:35">(<expr pos:start="35:13" pos:end="35:34"><operator pos:start="35:13" pos:end="35:13">!</operator><name pos:start="35:14" pos:end="35:34"><name pos:start="35:14" pos:end="35:25">sys_pwr_caps</name><operator pos:start="35:26" pos:end="35:26">.</operator><name pos:start="35:27" pos:end="35:34">SystemS4</name></name></expr>)</condition> <block pos:start="35:37" pos:end="41:9">{<block_content pos:start="37:13" pos:end="39:61">

            <expr_stmt pos:start="37:13" pos:end="39:61"><expr pos:start="37:13" pos:end="39:60"><call pos:start="37:13" pos:end="39:60"><name pos:start="37:13" pos:end="37:21">error_set</name><argument_list pos:start="37:22" pos:end="39:60">(<argument pos:start="37:23" pos:end="37:32"><expr pos:start="37:23" pos:end="37:32"><operator pos:start="37:23" pos:end="37:23">&amp;</operator><name pos:start="37:24" pos:end="37:32">local_err</name></expr></argument>, <argument pos:start="37:35" pos:end="37:57"><expr pos:start="37:35" pos:end="37:57"><name pos:start="37:35" pos:end="37:57">QERR_QGA_COMMAND_FAILED</name></expr></argument>,

                      <argument pos:start="39:23" pos:end="39:59"><expr pos:start="39:23" pos:end="39:59"><literal type="string" pos:start="39:23" pos:end="39:59">"suspend-to-disk not supported by OS"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>

    <case pos:start="45:5" pos:end="45:32">case <expr pos:start="45:10" pos:end="45:31"><name pos:start="45:10" pos:end="45:31">GUEST_SUSPEND_MODE_RAM</name></expr>:</case>

        <if_stmt pos:start="47:9" pos:end="53:9"><if pos:start="47:9" pos:end="53:9">if <condition pos:start="47:12" pos:end="47:35">(<expr pos:start="47:13" pos:end="47:34"><operator pos:start="47:13" pos:end="47:13">!</operator><name pos:start="47:14" pos:end="47:34"><name pos:start="47:14" pos:end="47:25">sys_pwr_caps</name><operator pos:start="47:26" pos:end="47:26">.</operator><name pos:start="47:27" pos:end="47:34">SystemS3</name></name></expr>)</condition> <block pos:start="47:37" pos:end="53:9">{<block_content pos:start="49:13" pos:end="51:60">

            <expr_stmt pos:start="49:13" pos:end="51:60"><expr pos:start="49:13" pos:end="51:59"><call pos:start="49:13" pos:end="51:59"><name pos:start="49:13" pos:end="49:21">error_set</name><argument_list pos:start="49:22" pos:end="51:59">(<argument pos:start="49:23" pos:end="49:32"><expr pos:start="49:23" pos:end="49:32"><operator pos:start="49:23" pos:end="49:23">&amp;</operator><name pos:start="49:24" pos:end="49:32">local_err</name></expr></argument>, <argument pos:start="49:35" pos:end="49:57"><expr pos:start="49:35" pos:end="49:57"><name pos:start="49:35" pos:end="49:57">QERR_QGA_COMMAND_FAILED</name></expr></argument>,

                      <argument pos:start="51:23" pos:end="51:58"><expr pos:start="51:23" pos:end="51:58"><literal type="string" pos:start="51:23" pos:end="51:58">"suspend-to-ram not supported by OS"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="55:9" pos:end="55:14">break;</break>

    <default pos:start="57:5" pos:end="57:12">default:</default>

        <expr_stmt pos:start="59:9" pos:end="61:38"><expr pos:start="59:9" pos:end="61:37"><call pos:start="59:9" pos:end="61:37"><name pos:start="59:9" pos:end="59:17">error_set</name><argument_list pos:start="59:18" pos:end="61:37">(<argument pos:start="59:19" pos:end="59:28"><expr pos:start="59:19" pos:end="59:28"><operator pos:start="59:19" pos:end="59:19">&amp;</operator><name pos:start="59:20" pos:end="59:28">local_err</name></expr></argument>, <argument pos:start="59:31" pos:end="59:58"><expr pos:start="59:31" pos:end="59:58"><name pos:start="59:31" pos:end="59:58">QERR_INVALID_PARAMETER_VALUE</name></expr></argument>, <argument pos:start="59:61" pos:end="59:66"><expr pos:start="59:61" pos:end="59:66"><literal type="string" pos:start="59:61" pos:end="59:66">"mode"</literal></expr></argument>,

                  <argument pos:start="61:19" pos:end="61:36"><expr pos:start="61:19" pos:end="61:36"><literal type="string" pos:start="61:19" pos:end="61:36">"GuestSuspendMode"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>



<label pos:start="67:1" pos:end="67:4"><name pos:start="67:1" pos:end="67:3">out</name>:</label>

    <if_stmt pos:start="69:5" pos:end="73:5"><if pos:start="69:5" pos:end="73:5">if <condition pos:start="69:8" pos:end="69:18">(<expr pos:start="69:9" pos:end="69:17"><name pos:start="69:9" pos:end="69:17">local_err</name></expr>)</condition> <block pos:start="69:20" pos:end="73:5">{<block_content pos:start="71:9" pos:end="71:41">

        <expr_stmt pos:start="71:9" pos:end="71:41"><expr pos:start="71:9" pos:end="71:40"><call pos:start="71:9" pos:end="71:40"><name pos:start="71:9" pos:end="71:23">error_propagate</name><argument_list pos:start="71:24" pos:end="71:40">(<argument pos:start="71:25" pos:end="71:28"><expr pos:start="71:25" pos:end="71:28"><name pos:start="71:25" pos:end="71:28">errp</name></expr></argument>, <argument pos:start="71:31" pos:end="71:39"><expr pos:start="71:31" pos:end="71:39"><name pos:start="71:31" pos:end="71:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
