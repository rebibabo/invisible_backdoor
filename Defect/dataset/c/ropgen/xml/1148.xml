<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1148.c" pos:tabs="8"><function pos:start="1:1" pos:end="171:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:20">ff_get_qtpalette</name><parameter_list pos:start="1:21" pos:end="1:70">(<parameter pos:start="1:22" pos:end="1:33"><decl pos:start="1:22" pos:end="1:33"><type pos:start="1:22" pos:end="1:33"><name pos:start="1:22" pos:end="1:24">int</name></type> <name pos:start="1:26" pos:end="1:33">codec_id</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:50"><decl pos:start="1:36" pos:end="1:50"><type pos:start="1:36" pos:end="1:50"><name pos:start="1:36" pos:end="1:46">AVIOContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:50">pb</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:69"><decl pos:start="1:53" pos:end="1:69"><type pos:start="1:53" pos:end="1:69"><name pos:start="1:53" pos:end="1:60">uint32_t</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:69">palette</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="171:1">{<block_content pos:start="5:5" pos:end="169:13">

    <decl_stmt pos:start="5:5" pos:end="5:53"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">tmp</name></decl>, <decl pos:start="5:14" pos:end="5:22"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:22">bit_depth</name></decl>, <decl pos:start="5:25" pos:end="5:38"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:25" pos:end="5:38">color_table_id</name></decl>, <decl pos:start="5:41" pos:end="5:49"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:41" pos:end="5:49">greyscale</name></decl>, <decl pos:start="5:52" pos:end="5:52"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:52" pos:end="5:52">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:32"><expr pos:start="9:5" pos:end="9:31"><call pos:start="9:5" pos:end="9:31"><name pos:start="9:5" pos:end="9:13">avio_seek</name><argument_list pos:start="9:14" pos:end="9:31">(<argument pos:start="9:15" pos:end="9:16"><expr pos:start="9:15" pos:end="9:16"><name pos:start="9:15" pos:end="9:16">pb</name></expr></argument>, <argument pos:start="9:19" pos:end="9:20"><expr pos:start="9:19" pos:end="9:20"><literal type="number" pos:start="9:19" pos:end="9:20">82</literal></expr></argument>, <argument pos:start="9:23" pos:end="9:30"><expr pos:start="9:23" pos:end="9:30"><name pos:start="9:23" pos:end="9:30">SEEK_CUR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:47">/* Get the bit depth and greyscale state */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:24"><expr pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:7">tmp</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:23"><name pos:start="15:11" pos:end="15:19">avio_rb16</name><argument_list pos:start="15:20" pos:end="15:23">(<argument pos:start="15:21" pos:end="15:22"><expr pos:start="15:21" pos:end="15:22"><name pos:start="15:21" pos:end="15:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:27"><expr pos:start="17:5" pos:end="17:26"><name pos:start="17:5" pos:end="17:13">bit_depth</name> <operator pos:start="17:15" pos:end="17:15">=</operator> <name pos:start="17:17" pos:end="17:19">tmp</name> <operator pos:start="17:21" pos:end="17:21">&amp;</operator> <literal type="number" pos:start="17:23" pos:end="17:26">0x1F</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:27"><expr pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:13">greyscale</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <name pos:start="19:17" pos:end="19:19">tmp</name> <operator pos:start="19:21" pos:end="19:21">&amp;</operator> <literal type="number" pos:start="19:23" pos:end="19:26">0x20</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:32">/* Get the color table ID */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:35"><expr pos:start="25:5" pos:end="25:34"><name pos:start="25:5" pos:end="25:18">color_table_id</name> <operator pos:start="25:20" pos:end="25:20">=</operator> <call pos:start="25:22" pos:end="25:34"><name pos:start="25:22" pos:end="25:30">avio_rb16</name><argument_list pos:start="25:31" pos:end="25:34">(<argument pos:start="25:32" pos:end="25:33"><expr pos:start="25:32" pos:end="25:33"><name pos:start="25:32" pos:end="25:33">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:55">/* Do not create a greyscale palette for Cinepak */</comment>

    <if_stmt pos:start="31:5" pos:end="33:17"><if pos:start="31:5" pos:end="33:17">if <condition pos:start="31:8" pos:end="31:53">(<expr pos:start="31:9" pos:end="31:52"><name pos:start="31:9" pos:end="31:17">greyscale</name> <operator pos:start="31:19" pos:end="31:20">&amp;&amp;</operator> <name pos:start="31:22" pos:end="31:29">codec_id</name> <operator pos:start="31:31" pos:end="31:32">==</operator> <name pos:start="31:34" pos:end="31:52">AV_CODEC_ID_CINEPAK</name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:17"><block_content pos:start="33:9" pos:end="33:17">

        <return pos:start="33:9" pos:end="33:17">return <expr pos:start="33:16" pos:end="33:16"><literal type="number" pos:start="33:16" pos:end="33:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:64">/* If the depth is 1, 2, 4, or 8 bpp, file is palettized. */</comment>

    <if_stmt pos:start="39:5" pos:end="165:5"><if pos:start="39:5" pos:end="165:5">if <condition pos:start="39:8" pos:end="39:79">(<expr pos:start="39:9" pos:end="39:78"><operator pos:start="39:9" pos:end="39:9">(</operator><name pos:start="39:10" pos:end="39:18">bit_depth</name> <operator pos:start="39:20" pos:end="39:21">==</operator> <literal type="number" pos:start="39:23" pos:end="39:23">1</literal> <operator pos:start="39:25" pos:end="39:26">||</operator> <name pos:start="39:28" pos:end="39:36">bit_depth</name> <operator pos:start="39:38" pos:end="39:39">==</operator> <literal type="number" pos:start="39:41" pos:end="39:41">2</literal> <operator pos:start="39:43" pos:end="39:44">||</operator> <name pos:start="39:46" pos:end="39:54">bit_depth</name> <operator pos:start="39:56" pos:end="39:57">==</operator> <literal type="number" pos:start="39:59" pos:end="39:59">4</literal> <operator pos:start="39:61" pos:end="39:62">||</operator> <name pos:start="39:64" pos:end="39:72">bit_depth</name> <operator pos:start="39:74" pos:end="39:75">==</operator> <literal type="number" pos:start="39:77" pos:end="39:77">8</literal><operator pos:start="39:78" pos:end="39:78">)</operator></expr>)</condition> <block pos:start="39:81" pos:end="165:5">{<block_content pos:start="41:9" pos:end="163:17">

        <decl_stmt pos:start="41:9" pos:end="41:48"><decl pos:start="41:9" pos:end="41:23"><type pos:start="41:9" pos:end="41:11"><name pos:start="41:9" pos:end="41:11">int</name></type> <name pos:start="41:13" pos:end="41:23">color_count</name></decl>, <decl pos:start="41:26" pos:end="41:36"><type ref="prev" pos:start="41:9" pos:end="41:11"/><name pos:start="41:26" pos:end="41:36">color_start</name></decl>, <decl pos:start="41:39" pos:end="41:47"><type ref="prev" pos:start="41:9" pos:end="41:11"/><name pos:start="41:39" pos:end="41:47">color_end</name></decl>;</decl_stmt>

        <decl_stmt pos:start="43:9" pos:end="43:28"><decl pos:start="43:9" pos:end="43:18"><type pos:start="43:9" pos:end="43:16"><name pos:start="43:9" pos:end="43:16">uint32_t</name></type> <name pos:start="43:18" pos:end="43:18">a</name></decl>, <decl pos:start="43:21" pos:end="43:21"><type ref="prev" pos:start="43:9" pos:end="43:16"/><name pos:start="43:21" pos:end="43:21">r</name></decl>, <decl pos:start="43:24" pos:end="43:24"><type ref="prev" pos:start="43:9" pos:end="43:16"/><name pos:start="43:24" pos:end="43:24">g</name></decl>, <decl pos:start="43:27" pos:end="43:27"><type ref="prev" pos:start="43:9" pos:end="43:16"/><name pos:start="43:27" pos:end="43:27">b</name></decl>;</decl_stmt>



        <comment type="block" pos:start="47:9" pos:end="49:52">/* Ignore the greyscale bit for 1-bit video and sample

         * descriptions containing a color table. */</comment>

        <if_stmt pos:start="51:9" pos:end="159:9"><if pos:start="51:9" pos:end="77:9">if <condition pos:start="51:12" pos:end="51:57">(<expr pos:start="51:13" pos:end="51:56"><name pos:start="51:13" pos:end="51:21">greyscale</name> <operator pos:start="51:23" pos:end="51:24">&amp;&amp;</operator> <name pos:start="51:26" pos:end="51:34">bit_depth</name> <operator pos:start="51:36" pos:end="51:36">&gt;</operator> <literal type="number" pos:start="51:38" pos:end="51:38">1</literal> <operator pos:start="51:40" pos:end="51:41">&amp;&amp;</operator> <name pos:start="51:43" pos:end="51:56">color_table_id</name></expr>)</condition> <block pos:start="51:59" pos:end="77:9">{<block_content pos:start="53:13" pos:end="75:13">

            <decl_stmt pos:start="53:13" pos:end="53:39"><decl pos:start="53:13" pos:end="53:27"><type pos:start="53:13" pos:end="53:15"><name pos:start="53:13" pos:end="53:15">int</name></type> <name pos:start="53:17" pos:end="53:27">color_index</name></decl>, <decl pos:start="53:30" pos:end="53:38"><type ref="prev" pos:start="53:13" pos:end="53:15"/><name pos:start="53:30" pos:end="53:38">color_dec</name></decl>;</decl_stmt>

            <comment type="block" pos:start="55:13" pos:end="55:47">/* compute the greyscale palette */</comment>

            <expr_stmt pos:start="57:13" pos:end="57:41"><expr pos:start="57:13" pos:end="57:40"><name pos:start="57:13" pos:end="57:23">color_count</name> <operator pos:start="57:25" pos:end="57:25">=</operator> <literal type="number" pos:start="57:27" pos:end="57:27">1</literal> <operator pos:start="57:29" pos:end="57:30">&lt;&lt;</operator> <name pos:start="57:32" pos:end="57:40">bit_depth</name></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:30"><expr pos:start="59:13" pos:end="59:29"><name pos:start="59:13" pos:end="59:23">color_index</name> <operator pos:start="59:25" pos:end="59:25">=</operator> <literal type="number" pos:start="59:27" pos:end="59:29">255</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:50"><expr pos:start="61:13" pos:end="61:49"><name pos:start="61:13" pos:end="61:21">color_dec</name>   <operator pos:start="61:25" pos:end="61:25">=</operator> <literal type="number" pos:start="61:27" pos:end="61:29">256</literal> <operator pos:start="61:31" pos:end="61:31">/</operator> <operator pos:start="61:33" pos:end="61:33">(</operator><name pos:start="61:34" pos:end="61:44">color_count</name> <operator pos:start="61:46" pos:end="61:46">-</operator> <literal type="number" pos:start="61:48" pos:end="61:48">1</literal><operator pos:start="61:49" pos:end="61:49">)</operator></expr>;</expr_stmt>

            <for pos:start="63:13" pos:end="75:13">for <control pos:start="63:17" pos:end="63:45">(<init pos:start="63:18" pos:end="63:23"><expr pos:start="63:18" pos:end="63:22"><name pos:start="63:18" pos:end="63:18">i</name> <operator pos:start="63:20" pos:end="63:20">=</operator> <literal type="number" pos:start="63:22" pos:end="63:22">0</literal></expr>;</init> <condition pos:start="63:25" pos:end="63:40"><expr pos:start="63:25" pos:end="63:39"><name pos:start="63:25" pos:end="63:25">i</name> <operator pos:start="63:27" pos:end="63:27">&lt;</operator> <name pos:start="63:29" pos:end="63:39">color_count</name></expr>;</condition> <incr pos:start="63:42" pos:end="63:44"><expr pos:start="63:42" pos:end="63:44"><name pos:start="63:42" pos:end="63:42">i</name><operator pos:start="63:43" pos:end="63:44">++</operator></expr></incr>)</control> <block pos:start="63:47" pos:end="75:13">{<block_content pos:start="65:17" pos:end="73:36">

                <expr_stmt pos:start="65:17" pos:end="65:40"><expr pos:start="65:17" pos:end="65:39"><name pos:start="65:17" pos:end="65:17">r</name> <operator pos:start="65:19" pos:end="65:19">=</operator> <name pos:start="65:21" pos:end="65:21">g</name> <operator pos:start="65:23" pos:end="65:23">=</operator> <name pos:start="65:25" pos:end="65:25">b</name> <operator pos:start="65:27" pos:end="65:27">=</operator> <name pos:start="65:29" pos:end="65:39">color_index</name></expr>;</expr_stmt>

                <expr_stmt pos:start="67:17" pos:end="67:72"><expr pos:start="67:17" pos:end="67:71"><name pos:start="67:17" pos:end="67:26"><name pos:start="67:17" pos:end="67:23">palette</name><index pos:start="67:24" pos:end="67:26">[<expr pos:start="67:25" pos:end="67:25"><name pos:start="67:25" pos:end="67:25">i</name></expr>]</index></name> <operator pos:start="67:28" pos:end="67:28">=</operator> <operator pos:start="67:30" pos:end="67:30">(</operator><literal type="number" pos:start="67:31" pos:end="67:35">0xFFU</literal> <operator pos:start="67:37" pos:end="67:38">&lt;&lt;</operator> <literal type="number" pos:start="67:40" pos:end="67:41">24</literal><operator pos:start="67:42" pos:end="67:42">)</operator> <operator pos:start="67:44" pos:end="67:44">|</operator> <operator pos:start="67:46" pos:end="67:46">(</operator><name pos:start="67:47" pos:end="67:47">r</name> <operator pos:start="67:49" pos:end="67:50">&lt;&lt;</operator> <literal type="number" pos:start="67:52" pos:end="67:53">16</literal><operator pos:start="67:54" pos:end="67:54">)</operator> <operator pos:start="67:56" pos:end="67:56">|</operator> <operator pos:start="67:58" pos:end="67:58">(</operator><name pos:start="67:59" pos:end="67:59">g</name> <operator pos:start="67:61" pos:end="67:62">&lt;&lt;</operator> <literal type="number" pos:start="67:64" pos:end="67:64">8</literal><operator pos:start="67:65" pos:end="67:65">)</operator> <operator pos:start="67:67" pos:end="67:67">|</operator> <operator pos:start="67:69" pos:end="67:69">(</operator><name pos:start="67:70" pos:end="67:70">b</name><operator pos:start="67:71" pos:end="67:71">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="69:17" pos:end="69:41"><expr pos:start="69:17" pos:end="69:40"><name pos:start="69:17" pos:end="69:27">color_index</name> <operator pos:start="69:29" pos:end="69:30">-=</operator> <name pos:start="69:32" pos:end="69:40">color_dec</name></expr>;</expr_stmt>

                <if_stmt pos:start="71:17" pos:end="73:36"><if pos:start="71:17" pos:end="73:36">if <condition pos:start="71:20" pos:end="71:36">(<expr pos:start="71:21" pos:end="71:35"><name pos:start="71:21" pos:end="71:31">color_index</name> <operator pos:start="71:33" pos:end="71:33">&lt;</operator> <literal type="number" pos:start="71:35" pos:end="71:35">0</literal></expr>)</condition><block type="pseudo" pos:start="73:21" pos:end="73:36"><block_content pos:start="73:21" pos:end="73:36">

                    <expr_stmt pos:start="73:21" pos:end="73:36"><expr pos:start="73:21" pos:end="73:35"><name pos:start="73:21" pos:end="73:31">color_index</name> <operator pos:start="73:33" pos:end="73:33">=</operator> <literal type="number" pos:start="73:35" pos:end="73:35">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <if type="elseif" pos:start="77:11" pos:end="117:9">else if <condition pos:start="77:19" pos:end="77:34">(<expr pos:start="77:20" pos:end="77:33"><name pos:start="77:20" pos:end="77:33">color_table_id</name></expr>)</condition> <block pos:start="77:36" pos:end="117:9">{<block_content pos:start="85:13" pos:end="115:13">

            <comment type="block" pos:start="79:13" pos:end="83:29">/* The color table ID is non-zero. Interpret this as

             * being -1, which means use the default Macintosh

             * color table */</comment>

            <decl_stmt pos:start="85:13" pos:end="85:39"><decl pos:start="85:13" pos:end="85:38"><type pos:start="85:13" pos:end="85:27"><specifier pos:start="85:13" pos:end="85:17">const</specifier> <name pos:start="85:19" pos:end="85:25">uint8_t</name> <modifier pos:start="85:27" pos:end="85:27">*</modifier></type><name pos:start="85:28" pos:end="85:38">color_table</name></decl>;</decl_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:41"><expr pos:start="87:13" pos:end="87:40"><name pos:start="87:13" pos:end="87:23">color_count</name> <operator pos:start="87:25" pos:end="87:25">=</operator> <literal type="number" pos:start="87:27" pos:end="87:27">1</literal> <operator pos:start="87:29" pos:end="87:30">&lt;&lt;</operator> <name pos:start="87:32" pos:end="87:40">bit_depth</name></expr>;</expr_stmt>

            <if_stmt pos:start="89:13" pos:end="103:56"><if pos:start="89:13" pos:end="91:54">if <condition pos:start="89:16" pos:end="89:31">(<expr pos:start="89:17" pos:end="89:30"><name pos:start="89:17" pos:end="89:25">bit_depth</name> <operator pos:start="89:27" pos:end="89:28">==</operator> <literal type="number" pos:start="89:30" pos:end="89:30">1</literal></expr>)</condition><block type="pseudo" pos:start="91:17" pos:end="91:54"><block_content pos:start="91:17" pos:end="91:54">

                <expr_stmt pos:start="91:17" pos:end="91:54"><expr pos:start="91:17" pos:end="91:53"><name pos:start="91:17" pos:end="91:27">color_table</name> <operator pos:start="91:29" pos:end="91:29">=</operator> <name pos:start="91:31" pos:end="91:53">ff_qt_default_palette_2</name></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="93:13" pos:end="95:54">else if <condition pos:start="93:21" pos:end="93:36">(<expr pos:start="93:22" pos:end="93:35"><name pos:start="93:22" pos:end="93:30">bit_depth</name> <operator pos:start="93:32" pos:end="93:33">==</operator> <literal type="number" pos:start="93:35" pos:end="93:35">2</literal></expr>)</condition><block type="pseudo" pos:start="95:17" pos:end="95:54"><block_content pos:start="95:17" pos:end="95:54">

                <expr_stmt pos:start="95:17" pos:end="95:54"><expr pos:start="95:17" pos:end="95:53"><name pos:start="95:17" pos:end="95:27">color_table</name> <operator pos:start="95:29" pos:end="95:29">=</operator> <name pos:start="95:31" pos:end="95:53">ff_qt_default_palette_4</name></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="97:13" pos:end="99:55">else if <condition pos:start="97:21" pos:end="97:36">(<expr pos:start="97:22" pos:end="97:35"><name pos:start="97:22" pos:end="97:30">bit_depth</name> <operator pos:start="97:32" pos:end="97:33">==</operator> <literal type="number" pos:start="97:35" pos:end="97:35">4</literal></expr>)</condition><block type="pseudo" pos:start="99:17" pos:end="99:55"><block_content pos:start="99:17" pos:end="99:55">

                <expr_stmt pos:start="99:17" pos:end="99:55"><expr pos:start="99:17" pos:end="99:54"><name pos:start="99:17" pos:end="99:27">color_table</name> <operator pos:start="99:29" pos:end="99:29">=</operator> <name pos:start="99:31" pos:end="99:54">ff_qt_default_palette_16</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="101:13" pos:end="103:56">else<block type="pseudo" pos:start="103:17" pos:end="103:56"><block_content pos:start="103:17" pos:end="103:56">

                <expr_stmt pos:start="103:17" pos:end="103:56"><expr pos:start="103:17" pos:end="103:55"><name pos:start="103:17" pos:end="103:27">color_table</name> <operator pos:start="103:29" pos:end="103:29">=</operator> <name pos:start="103:31" pos:end="103:55">ff_qt_default_palette_256</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <for pos:start="105:13" pos:end="115:13">for <control pos:start="105:17" pos:end="105:45">(<init pos:start="105:18" pos:end="105:23"><expr pos:start="105:18" pos:end="105:22"><name pos:start="105:18" pos:end="105:18">i</name> <operator pos:start="105:20" pos:end="105:20">=</operator> <literal type="number" pos:start="105:22" pos:end="105:22">0</literal></expr>;</init> <condition pos:start="105:25" pos:end="105:40"><expr pos:start="105:25" pos:end="105:39"><name pos:start="105:25" pos:end="105:25">i</name> <operator pos:start="105:27" pos:end="105:27">&lt;</operator> <name pos:start="105:29" pos:end="105:39">color_count</name></expr>;</condition> <incr pos:start="105:42" pos:end="105:44"><expr pos:start="105:42" pos:end="105:44"><name pos:start="105:42" pos:end="105:42">i</name><operator pos:start="105:43" pos:end="105:44">++</operator></expr></incr>)</control> <block pos:start="105:47" pos:end="115:13">{<block_content pos:start="107:17" pos:end="113:72">

                <expr_stmt pos:start="107:17" pos:end="107:43"><expr pos:start="107:17" pos:end="107:42"><name pos:start="107:17" pos:end="107:17">r</name> <operator pos:start="107:19" pos:end="107:19">=</operator> <name pos:start="107:21" pos:end="107:42"><name pos:start="107:21" pos:end="107:31">color_table</name><index pos:start="107:32" pos:end="107:42">[<expr pos:start="107:33" pos:end="107:41"><name pos:start="107:33" pos:end="107:33">i</name> <operator pos:start="107:35" pos:end="107:35">*</operator> <literal type="number" pos:start="107:37" pos:end="107:39">3</literal> <operator pos:start="107:39" pos:end="107:39">+</operator> <literal type="number" pos:start="107:41" pos:end="107:41">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="109:43"><expr pos:start="109:17" pos:end="109:42"><name pos:start="109:17" pos:end="109:17">g</name> <operator pos:start="109:19" pos:end="109:19">=</operator> <name pos:start="109:21" pos:end="109:42"><name pos:start="109:21" pos:end="109:31">color_table</name><index pos:start="109:32" pos:end="109:42">[<expr pos:start="109:33" pos:end="109:41"><name pos:start="109:33" pos:end="109:33">i</name> <operator pos:start="109:35" pos:end="109:35">*</operator> <literal type="number" pos:start="109:37" pos:end="109:39">3</literal> <operator pos:start="109:39" pos:end="109:39">+</operator> <literal type="number" pos:start="109:41" pos:end="109:41">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="111:17" pos:end="111:43"><expr pos:start="111:17" pos:end="111:42"><name pos:start="111:17" pos:end="111:17">b</name> <operator pos:start="111:19" pos:end="111:19">=</operator> <name pos:start="111:21" pos:end="111:42"><name pos:start="111:21" pos:end="111:31">color_table</name><index pos:start="111:32" pos:end="111:42">[<expr pos:start="111:33" pos:end="111:41"><name pos:start="111:33" pos:end="111:33">i</name> <operator pos:start="111:35" pos:end="111:35">*</operator> <literal type="number" pos:start="111:37" pos:end="111:39">3</literal> <operator pos:start="111:39" pos:end="111:39">+</operator> <literal type="number" pos:start="111:41" pos:end="111:41">2</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="113:17" pos:end="113:72"><expr pos:start="113:17" pos:end="113:71"><name pos:start="113:17" pos:end="113:26"><name pos:start="113:17" pos:end="113:23">palette</name><index pos:start="113:24" pos:end="113:26">[<expr pos:start="113:25" pos:end="113:25"><name pos:start="113:25" pos:end="113:25">i</name></expr>]</index></name> <operator pos:start="113:28" pos:end="113:28">=</operator> <operator pos:start="113:30" pos:end="113:30">(</operator><literal type="number" pos:start="113:31" pos:end="113:35">0xFFU</literal> <operator pos:start="113:37" pos:end="113:38">&lt;&lt;</operator> <literal type="number" pos:start="113:40" pos:end="113:41">24</literal><operator pos:start="113:42" pos:end="113:42">)</operator> <operator pos:start="113:44" pos:end="113:44">|</operator> <operator pos:start="113:46" pos:end="113:46">(</operator><name pos:start="113:47" pos:end="113:47">r</name> <operator pos:start="113:49" pos:end="113:50">&lt;&lt;</operator> <literal type="number" pos:start="113:52" pos:end="113:53">16</literal><operator pos:start="113:54" pos:end="113:54">)</operator> <operator pos:start="113:56" pos:end="113:56">|</operator> <operator pos:start="113:58" pos:end="113:58">(</operator><name pos:start="113:59" pos:end="113:59">g</name> <operator pos:start="113:61" pos:end="113:62">&lt;&lt;</operator> <literal type="number" pos:start="113:64" pos:end="113:64">8</literal><operator pos:start="113:65" pos:end="113:65">)</operator> <operator pos:start="113:67" pos:end="113:67">|</operator> <operator pos:start="113:69" pos:end="113:69">(</operator><name pos:start="113:70" pos:end="113:70">b</name><operator pos:start="113:71" pos:end="113:71">)</operator></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="117:11" pos:end="159:9">else <block pos:start="117:16" pos:end="159:9">{<block_content pos:start="123:13" pos:end="157:13">

            <comment type="block" pos:start="119:13" pos:end="121:29">/* The color table ID is 0; the color table is in the sample

             * description */</comment>

            <expr_stmt pos:start="123:13" pos:end="123:40"><expr pos:start="123:13" pos:end="123:39"><name pos:start="123:13" pos:end="123:23">color_start</name> <operator pos:start="123:25" pos:end="123:25">=</operator> <call pos:start="123:27" pos:end="123:39"><name pos:start="123:27" pos:end="123:35">avio_rb32</name><argument_list pos:start="123:36" pos:end="123:39">(<argument pos:start="123:37" pos:end="123:38"><expr pos:start="123:37" pos:end="123:38"><name pos:start="123:37" pos:end="123:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:26"><expr pos:start="125:13" pos:end="125:25"><call pos:start="125:13" pos:end="125:25"><name pos:start="125:13" pos:end="125:21">avio_rb16</name><argument_list pos:start="125:22" pos:end="125:25">(<argument pos:start="125:23" pos:end="125:24"><expr pos:start="125:23" pos:end="125:24"><name pos:start="125:23" pos:end="125:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="125:28" pos:end="125:50">/* color table flags */</comment>

            <expr_stmt pos:start="127:13" pos:end="127:38"><expr pos:start="127:13" pos:end="127:37"><name pos:start="127:13" pos:end="127:21">color_end</name> <operator pos:start="127:23" pos:end="127:23">=</operator> <call pos:start="127:25" pos:end="127:37"><name pos:start="127:25" pos:end="127:33">avio_rb16</name><argument_list pos:start="127:34" pos:end="127:37">(<argument pos:start="127:35" pos:end="127:36"><expr pos:start="127:35" pos:end="127:36"><name pos:start="127:35" pos:end="127:36">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="129:13" pos:end="157:13"><if pos:start="129:13" pos:end="157:13">if <condition pos:start="129:16" pos:end="129:59">(<expr pos:start="129:17" pos:end="129:58"><operator pos:start="129:17" pos:end="129:17">(</operator><name pos:start="129:18" pos:end="129:28">color_start</name> <operator pos:start="129:30" pos:end="129:31">&lt;=</operator> <literal type="number" pos:start="129:33" pos:end="129:35">255</literal><operator pos:start="129:36" pos:end="129:36">)</operator> <operator pos:start="129:38" pos:end="129:39">&amp;&amp;</operator> <operator pos:start="129:41" pos:end="129:41">(</operator><name pos:start="129:42" pos:end="129:50">color_end</name> <operator pos:start="129:52" pos:end="129:53">&lt;=</operator> <literal type="number" pos:start="129:55" pos:end="129:57">255</literal><operator pos:start="129:58" pos:end="129:58">)</operator></expr>)</condition> <block pos:start="129:61" pos:end="157:13">{<block_content pos:start="131:17" pos:end="155:17">

                <for pos:start="131:17" pos:end="155:17">for <control pos:start="131:21" pos:end="131:58">(<init pos:start="131:22" pos:end="131:37"><expr pos:start="131:22" pos:end="131:36"><name pos:start="131:22" pos:end="131:22">i</name> <operator pos:start="131:24" pos:end="131:24">=</operator> <name pos:start="131:26" pos:end="131:36">color_start</name></expr>;</init> <condition pos:start="131:39" pos:end="131:53"><expr pos:start="131:39" pos:end="131:52"><name pos:start="131:39" pos:end="131:39">i</name> <operator pos:start="131:41" pos:end="131:42">&lt;=</operator> <name pos:start="131:44" pos:end="131:52">color_end</name></expr>;</condition> <incr pos:start="131:55" pos:end="131:57"><expr pos:start="131:55" pos:end="131:57"><name pos:start="131:55" pos:end="131:55">i</name><operator pos:start="131:56" pos:end="131:57">++</operator></expr></incr>)</control> <block pos:start="131:60" pos:end="155:17">{<block_content pos:start="137:21" pos:end="153:73">

                    <comment type="block" pos:start="133:21" pos:end="135:49">/* each A, R, G, or B component is 16 bits;

                     * only use the top 8 bits */</comment>

                    <expr_stmt pos:start="137:21" pos:end="137:36"><expr pos:start="137:21" pos:end="137:35"><name pos:start="137:21" pos:end="137:21">a</name> <operator pos:start="137:23" pos:end="137:23">=</operator> <call pos:start="137:25" pos:end="137:35"><name pos:start="137:25" pos:end="137:31">avio_r8</name><argument_list pos:start="137:32" pos:end="137:35">(<argument pos:start="137:33" pos:end="137:34"><expr pos:start="137:33" pos:end="137:34"><name pos:start="137:33" pos:end="137:34">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="139:21" pos:end="139:32"><expr pos:start="139:21" pos:end="139:31"><call pos:start="139:21" pos:end="139:31"><name pos:start="139:21" pos:end="139:27">avio_r8</name><argument_list pos:start="139:28" pos:end="139:31">(<argument pos:start="139:29" pos:end="139:30"><expr pos:start="139:29" pos:end="139:30"><name pos:start="139:29" pos:end="139:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="141:21" pos:end="141:36"><expr pos:start="141:21" pos:end="141:35"><name pos:start="141:21" pos:end="141:21">r</name> <operator pos:start="141:23" pos:end="141:23">=</operator> <call pos:start="141:25" pos:end="141:35"><name pos:start="141:25" pos:end="141:31">avio_r8</name><argument_list pos:start="141:32" pos:end="141:35">(<argument pos:start="141:33" pos:end="141:34"><expr pos:start="141:33" pos:end="141:34"><name pos:start="141:33" pos:end="141:34">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="143:21" pos:end="143:32"><expr pos:start="143:21" pos:end="143:31"><call pos:start="143:21" pos:end="143:31"><name pos:start="143:21" pos:end="143:27">avio_r8</name><argument_list pos:start="143:28" pos:end="143:31">(<argument pos:start="143:29" pos:end="143:30"><expr pos:start="143:29" pos:end="143:30"><name pos:start="143:29" pos:end="143:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="145:21" pos:end="145:36"><expr pos:start="145:21" pos:end="145:35"><name pos:start="145:21" pos:end="145:21">g</name> <operator pos:start="145:23" pos:end="145:23">=</operator> <call pos:start="145:25" pos:end="145:35"><name pos:start="145:25" pos:end="145:31">avio_r8</name><argument_list pos:start="145:32" pos:end="145:35">(<argument pos:start="145:33" pos:end="145:34"><expr pos:start="145:33" pos:end="145:34"><name pos:start="145:33" pos:end="145:34">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="147:21" pos:end="147:32"><expr pos:start="147:21" pos:end="147:31"><call pos:start="147:21" pos:end="147:31"><name pos:start="147:21" pos:end="147:27">avio_r8</name><argument_list pos:start="147:28" pos:end="147:31">(<argument pos:start="147:29" pos:end="147:30"><expr pos:start="147:29" pos:end="147:30"><name pos:start="147:29" pos:end="147:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="149:21" pos:end="149:36"><expr pos:start="149:21" pos:end="149:35"><name pos:start="149:21" pos:end="149:21">b</name> <operator pos:start="149:23" pos:end="149:23">=</operator> <call pos:start="149:25" pos:end="149:35"><name pos:start="149:25" pos:end="149:31">avio_r8</name><argument_list pos:start="149:32" pos:end="149:35">(<argument pos:start="149:33" pos:end="149:34"><expr pos:start="149:33" pos:end="149:34"><name pos:start="149:33" pos:end="149:34">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="151:21" pos:end="151:32"><expr pos:start="151:21" pos:end="151:31"><call pos:start="151:21" pos:end="151:31"><name pos:start="151:21" pos:end="151:27">avio_r8</name><argument_list pos:start="151:28" pos:end="151:31">(<argument pos:start="151:29" pos:end="151:30"><expr pos:start="151:29" pos:end="151:30"><name pos:start="151:29" pos:end="151:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="153:21" pos:end="153:73"><expr pos:start="153:21" pos:end="153:72"><name pos:start="153:21" pos:end="153:30"><name pos:start="153:21" pos:end="153:27">palette</name><index pos:start="153:28" pos:end="153:30">[<expr pos:start="153:29" pos:end="153:29"><name pos:start="153:29" pos:end="153:29">i</name></expr>]</index></name> <operator pos:start="153:32" pos:end="153:32">=</operator> <operator pos:start="153:34" pos:end="153:34">(</operator><name pos:start="153:35" pos:end="153:35">a</name> <operator pos:start="153:37" pos:end="153:38">&lt;&lt;</operator> <literal type="number" pos:start="153:40" pos:end="153:41">24</literal> <operator pos:start="153:43" pos:end="153:43">)</operator> <operator pos:start="153:45" pos:end="153:45">|</operator> <operator pos:start="153:47" pos:end="153:47">(</operator><name pos:start="153:48" pos:end="153:48">r</name> <operator pos:start="153:50" pos:end="153:51">&lt;&lt;</operator> <literal type="number" pos:start="153:53" pos:end="153:54">16</literal><operator pos:start="153:55" pos:end="153:55">)</operator> <operator pos:start="153:57" pos:end="153:57">|</operator> <operator pos:start="153:59" pos:end="153:59">(</operator><name pos:start="153:60" pos:end="153:60">g</name> <operator pos:start="153:62" pos:end="153:63">&lt;&lt;</operator> <literal type="number" pos:start="153:65" pos:end="153:65">8</literal><operator pos:start="153:66" pos:end="153:66">)</operator> <operator pos:start="153:68" pos:end="153:68">|</operator> <operator pos:start="153:70" pos:end="153:70">(</operator><name pos:start="153:71" pos:end="153:71">b</name><operator pos:start="153:72" pos:end="153:72">)</operator></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <return pos:start="163:9" pos:end="163:17">return <expr pos:start="163:16" pos:end="163:16"><literal type="number" pos:start="163:16" pos:end="163:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="169:5" pos:end="169:13">return <expr pos:start="169:12" pos:end="169:12"><literal type="number" pos:start="169:12" pos:end="169:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
