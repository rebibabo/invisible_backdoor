<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18666.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:14">apic_sipi</name><parameter_list pos:start="1:15" pos:end="1:29">(<parameter pos:start="1:16" pos:end="1:28"><decl pos:start="1:16" pos:end="1:28"><type pos:start="1:16" pos:end="1:25"><name pos:start="1:16" pos:end="1:23">CPUState</name> <modifier pos:start="1:25" pos:end="1:25">*</modifier></type><name pos:start="1:26" pos:end="1:28">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:25">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">APICState</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">s</name> <init pos:start="5:18" pos:end="5:34">= <expr pos:start="5:20" pos:end="5:34"><name pos:start="5:20" pos:end="5:34"><name pos:start="5:20" pos:end="5:22">env</name><operator pos:start="5:23" pos:end="5:24">-&gt;</operator><name pos:start="5:25" pos:end="5:34">apic_state</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:49"><expr pos:start="9:5" pos:end="9:48"><call pos:start="9:5" pos:end="9:48"><name pos:start="9:5" pos:end="9:23">cpu_reset_interrupt</name><argument_list pos:start="9:24" pos:end="9:48">(<argument pos:start="9:25" pos:end="9:27"><expr pos:start="9:25" pos:end="9:27"><name pos:start="9:25" pos:end="9:27">env</name></expr></argument>, <argument pos:start="9:30" pos:end="9:47"><expr pos:start="9:30" pos:end="9:47"><name pos:start="9:30" pos:end="9:47">CPU_INTERRUPT_SIPI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="13:5" pos:end="15:15"><if pos:start="13:5" pos:end="15:15">if <condition pos:start="13:8" pos:end="13:26">(<expr pos:start="13:9" pos:end="13:25"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:25"><name pos:start="13:10" pos:end="13:10">s</name><operator pos:start="13:11" pos:end="13:12">-&gt;</operator><name pos:start="13:13" pos:end="13:25">wait_for_sipi</name></name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:15"><block_content pos:start="15:9" pos:end="15:15">

        <return pos:start="15:9" pos:end="15:15">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:17"><expr pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:7">env</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:12">eip</name></name> <operator pos:start="19:14" pos:end="19:14">=</operator> <literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="23:38"><expr pos:start="21:5" pos:end="23:37"><call pos:start="21:5" pos:end="23:37"><name pos:start="21:5" pos:end="21:26">cpu_x86_load_seg_cache</name><argument_list pos:start="21:27" pos:end="23:37">(<argument pos:start="21:28" pos:end="21:30"><expr pos:start="21:28" pos:end="21:30"><name pos:start="21:28" pos:end="21:30">env</name></expr></argument>, <argument pos:start="21:33" pos:end="21:36"><expr pos:start="21:33" pos:end="21:36"><name pos:start="21:33" pos:end="21:36">R_CS</name></expr></argument>, <argument pos:start="21:39" pos:end="21:57"><expr pos:start="21:39" pos:end="21:57"><name pos:start="21:39" pos:end="21:52"><name pos:start="21:39" pos:end="21:39">s</name><operator pos:start="21:40" pos:end="21:41">-&gt;</operator><name pos:start="21:42" pos:end="21:52">sipi_vector</name></name> <operator pos:start="21:54" pos:end="21:55">&lt;&lt;</operator> <literal type="number" pos:start="21:57" pos:end="21:57">8</literal></expr></argument>, <argument pos:start="21:60" pos:end="21:79"><expr pos:start="21:60" pos:end="21:79"><name pos:start="21:60" pos:end="21:73"><name pos:start="21:60" pos:end="21:60">s</name><operator pos:start="21:61" pos:end="21:62">-&gt;</operator><name pos:start="21:63" pos:end="21:73">sipi_vector</name></name> <operator pos:start="21:75" pos:end="21:76">&lt;&lt;</operator> <literal type="number" pos:start="21:78" pos:end="21:79">12</literal></expr></argument>,

                           <argument pos:start="23:28" pos:end="23:33"><expr pos:start="23:28" pos:end="23:33"><literal type="number" pos:start="23:28" pos:end="23:33">0xffff</literal></expr></argument>, <argument pos:start="23:36" pos:end="23:36"><expr pos:start="23:36" pos:end="23:36"><literal type="number" pos:start="23:36" pos:end="23:36">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:20"><expr pos:start="25:5" pos:end="25:19"><name pos:start="25:5" pos:end="25:15"><name pos:start="25:5" pos:end="25:7">env</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:15">halted</name></name> <operator pos:start="25:17" pos:end="25:17">=</operator> <literal type="number" pos:start="25:19" pos:end="25:19">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:25"><expr pos:start="27:5" pos:end="27:24"><name pos:start="27:5" pos:end="27:20"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:20">wait_for_sipi</name></name> <operator pos:start="27:22" pos:end="27:22">=</operator> <literal type="number" pos:start="27:24" pos:end="27:24">0</literal></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
