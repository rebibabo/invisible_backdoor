<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22599.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">mxf_read_local_tags</name><parameter_list pos:start="1:31" pos:end="1:128">(<parameter pos:start="1:32" pos:end="1:46"><decl pos:start="1:32" pos:end="1:46"><type pos:start="1:32" pos:end="1:46"><name pos:start="1:32" pos:end="1:41">MXFContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">mxf</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:62"><decl pos:start="1:49" pos:end="1:62"><type pos:start="1:49" pos:end="1:62"><name pos:start="1:49" pos:end="1:57">KLVPacket</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:62">klv</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:83"><function_decl pos:start="1:65" pos:end="1:83"><type pos:start="1:65" pos:end="1:67"><name pos:start="1:65" pos:end="1:67">int</name></type> (<modifier pos:start="1:70" pos:end="1:70">*</modifier><name pos:start="1:71" pos:end="1:80">read_child</name>)<parameter_list pos:start="1:82" pos:end="1:83">()</parameter_list></function_decl></parameter>, <parameter pos:start="1:86" pos:end="1:97"><decl pos:start="1:86" pos:end="1:97"><type pos:start="1:86" pos:end="1:97"><name pos:start="1:86" pos:end="1:88">int</name></type> <name pos:start="1:90" pos:end="1:97">ctx_size</name></decl></parameter>, <parameter pos:start="1:100" pos:end="1:127"><decl pos:start="1:100" pos:end="1:127"><type pos:start="1:100" pos:end="1:127"><name pos:start="1:100" pos:end="1:122"><name pos:start="1:100" pos:end="1:103">enum</name> <name pos:start="1:105" pos:end="1:122">MXFMetadataSetType</name></name></type> <name pos:start="1:124" pos:end="1:127">type</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="81:1">{<block_content pos:start="5:5" pos:end="79:57">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">ByteIOContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">pb</name> <init pos:start="5:23" pos:end="5:35">= <expr pos:start="5:25" pos:end="5:35"><name pos:start="5:25" pos:end="5:35"><name pos:start="5:25" pos:end="5:27">mxf</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:31">fc</name><operator pos:start="5:32" pos:end="5:33">-&gt;</operator><name pos:start="5:34" pos:end="5:35">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:64"><decl pos:start="7:5" pos:end="7:63"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">MXFMetadataSet</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:23">ctx</name> <init pos:start="7:25" pos:end="7:63">= <expr pos:start="7:27" pos:end="7:63"><ternary pos:start="7:27" pos:end="7:63"><condition pos:start="7:27" pos:end="7:36"><expr pos:start="7:27" pos:end="7:34"><name pos:start="7:27" pos:end="7:34">ctx_size</name></expr> ?</condition><then pos:start="7:38" pos:end="7:57"> <expr pos:start="7:38" pos:end="7:57"><call pos:start="7:38" pos:end="7:57"><name pos:start="7:38" pos:end="7:47">av_mallocz</name><argument_list pos:start="7:48" pos:end="7:57">(<argument pos:start="7:49" pos:end="7:56"><expr pos:start="7:49" pos:end="7:56"><name pos:start="7:49" pos:end="7:56">ctx_size</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="7:59" pos:end="7:63">: <expr pos:start="7:61" pos:end="7:63"><name pos:start="7:61" pos:end="7:63">mxf</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:51"><decl pos:start="9:5" pos:end="9:50"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:20">klv_end</name> <init pos:start="9:22" pos:end="9:50">= <expr pos:start="9:24" pos:end="9:50"><call pos:start="9:24" pos:end="9:36"><name pos:start="9:24" pos:end="9:32">url_ftell</name><argument_list pos:start="9:33" pos:end="9:36">(<argument pos:start="9:34" pos:end="9:35"><expr pos:start="9:34" pos:end="9:35"><name pos:start="9:34" pos:end="9:35">pb</name></expr></argument>)</argument_list></call> <operator pos:start="9:38" pos:end="9:38">+</operator> <name pos:start="9:40" pos:end="9:50"><name pos:start="9:40" pos:end="9:42">klv</name><operator pos:start="9:43" pos:end="9:44">-&gt;</operator><name pos:start="9:45" pos:end="9:50">length</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:18"><if pos:start="13:5" pos:end="15:18">if <condition pos:start="13:8" pos:end="13:13">(<expr pos:start="13:9" pos:end="13:12"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:12">ctx</name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:18"><block_content pos:start="15:9" pos:end="15:18">

        <return pos:start="15:9" pos:end="15:18">return <expr pos:start="15:16" pos:end="15:17"><operator pos:start="15:16" pos:end="15:16">-</operator><literal type="number" pos:start="15:17" pos:end="15:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <while pos:start="17:5" pos:end="75:5">while <condition pos:start="17:11" pos:end="17:39">(<expr pos:start="17:12" pos:end="17:38"><call pos:start="17:12" pos:end="17:24"><name pos:start="17:12" pos:end="17:20">url_ftell</name><argument_list pos:start="17:21" pos:end="17:24">(<argument pos:start="17:22" pos:end="17:23"><expr pos:start="17:22" pos:end="17:23"><name pos:start="17:22" pos:end="17:23">pb</name></expr></argument>)</argument_list></call> <operator pos:start="17:26" pos:end="17:26">+</operator> <literal type="number" pos:start="17:28" pos:end="17:28">4</literal> <operator pos:start="17:30" pos:end="17:30">&lt;</operator> <name pos:start="17:32" pos:end="17:38">klv_end</name></expr>)</condition> <block pos:start="17:41" pos:end="75:5">{<block_content pos:start="19:9" pos:end="73:38">

        <decl_stmt pos:start="19:9" pos:end="19:31"><decl pos:start="19:9" pos:end="19:30"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:15">tag</name> <init pos:start="19:17" pos:end="19:30">= <expr pos:start="19:19" pos:end="19:30"><call pos:start="19:19" pos:end="19:30"><name pos:start="19:19" pos:end="19:26">get_be16</name><argument_list pos:start="19:27" pos:end="19:30">(<argument pos:start="19:28" pos:end="19:29"><expr pos:start="19:28" pos:end="19:29"><name pos:start="19:28" pos:end="19:29">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="21:32"><decl pos:start="21:9" pos:end="21:31"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:16">size</name> <init pos:start="21:18" pos:end="21:31">= <expr pos:start="21:20" pos:end="21:31"><call pos:start="21:20" pos:end="21:31"><name pos:start="21:20" pos:end="21:27">get_be16</name><argument_list pos:start="21:28" pos:end="21:31">(<argument pos:start="21:29" pos:end="21:30"><expr pos:start="21:29" pos:end="21:30"><name pos:start="21:29" pos:end="21:30">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="21:34" pos:end="21:60">/* KLV specified by 0x53 */</comment>

        <decl_stmt pos:start="23:9" pos:end="23:45"><decl pos:start="23:9" pos:end="23:44"><type pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:16">uint64_t</name></type> <name pos:start="23:18" pos:end="23:21">next</name> <init pos:start="23:23" pos:end="23:44">= <expr pos:start="23:25" pos:end="23:44"><call pos:start="23:25" pos:end="23:37"><name pos:start="23:25" pos:end="23:33">url_ftell</name><argument_list pos:start="23:34" pos:end="23:37">(<argument pos:start="23:35" pos:end="23:36"><expr pos:start="23:35" pos:end="23:36"><name pos:start="23:35" pos:end="23:36">pb</name></expr></argument>)</argument_list></call> <operator pos:start="23:39" pos:end="23:39">+</operator> <name pos:start="23:41" pos:end="23:44">size</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:16"><decl pos:start="25:9" pos:end="25:15"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">UID</name></type> <name pos:start="25:13" pos:end="25:15">uid</name></decl>;</decl_stmt>



        <if_stmt pos:start="29:9" pos:end="35:9"><if pos:start="29:9" pos:end="35:9">if <condition pos:start="29:12" pos:end="29:18">(<expr pos:start="29:13" pos:end="29:17"><operator pos:start="29:13" pos:end="29:13">!</operator><name pos:start="29:14" pos:end="29:17">size</name></expr>)</condition> <block pos:start="29:20" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:21"> <comment type="block" pos:start="29:22" pos:end="29:86">/* ignore empty tag, needed for some files with empty UMID tag */</comment>

            <expr_stmt pos:start="31:13" pos:end="31:81"><expr pos:start="31:13" pos:end="31:80"><call pos:start="31:13" pos:end="31:80"><name pos:start="31:13" pos:end="31:18">av_log</name><argument_list pos:start="31:19" pos:end="31:80">(<argument pos:start="31:20" pos:end="31:26"><expr pos:start="31:20" pos:end="31:26"><name pos:start="31:20" pos:end="31:26"><name pos:start="31:20" pos:end="31:22">mxf</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:26">fc</name></name></expr></argument>, <argument pos:start="31:29" pos:end="31:40"><expr pos:start="31:29" pos:end="31:40"><name pos:start="31:29" pos:end="31:40">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="31:43" pos:end="31:74"><expr pos:start="31:43" pos:end="31:74"><literal type="string" pos:start="31:43" pos:end="31:74">"local tag 0x%04X with 0 size\n"</literal></expr></argument>, <argument pos:start="31:77" pos:end="31:79"><expr pos:start="31:77" pos:end="31:79"><name pos:start="31:77" pos:end="31:79">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="33:13" pos:end="33:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="37:9" pos:end="61:9"><if pos:start="37:9" pos:end="61:9">if <condition pos:start="37:12" pos:end="37:25">(<expr pos:start="37:13" pos:end="37:24"><name pos:start="37:13" pos:end="37:15">tag</name> <operator pos:start="37:17" pos:end="37:17">&gt;</operator> <literal type="number" pos:start="37:19" pos:end="37:24">0x7FFF</literal></expr>)</condition> <block pos:start="37:27" pos:end="61:9">{<block_content pos:start="39:13" pos:end="59:13"> <comment type="block" pos:start="37:29" pos:end="37:45">/* dynamic tag */</comment>

            <decl_stmt pos:start="39:13" pos:end="39:18"><decl pos:start="39:13" pos:end="39:17"><type pos:start="39:13" pos:end="39:15"><name pos:start="39:13" pos:end="39:15">int</name></type> <name pos:start="39:17" pos:end="39:17">i</name></decl>;</decl_stmt>

            <for pos:start="41:13" pos:end="59:13">for <control pos:start="41:17" pos:end="41:55">(<init pos:start="41:18" pos:end="41:23"><expr pos:start="41:18" pos:end="41:22"><name pos:start="41:18" pos:end="41:18">i</name> <operator pos:start="41:20" pos:end="41:20">=</operator> <literal type="number" pos:start="41:22" pos:end="41:22">0</literal></expr>;</init> <condition pos:start="41:25" pos:end="41:50"><expr pos:start="41:25" pos:end="41:49"><name pos:start="41:25" pos:end="41:25">i</name> <operator pos:start="41:27" pos:end="41:27">&lt;</operator> <name pos:start="41:29" pos:end="41:49"><name pos:start="41:29" pos:end="41:31">mxf</name><operator pos:start="41:32" pos:end="41:33">-&gt;</operator><name pos:start="41:34" pos:end="41:49">local_tags_count</name></name></expr>;</condition> <incr pos:start="41:52" pos:end="41:54"><expr pos:start="41:52" pos:end="41:54"><name pos:start="41:52" pos:end="41:52">i</name><operator pos:start="41:53" pos:end="41:54">++</operator></expr></incr>)</control> <block pos:start="41:57" pos:end="59:13">{<block_content pos:start="43:17" pos:end="57:17">

                <decl_stmt pos:start="43:17" pos:end="43:62"><decl pos:start="43:17" pos:end="43:61"><type pos:start="43:17" pos:end="43:19"><name pos:start="43:17" pos:end="43:19">int</name></type> <name pos:start="43:21" pos:end="43:29">local_tag</name> <init pos:start="43:31" pos:end="43:61">= <expr pos:start="43:33" pos:end="43:61"><call pos:start="43:33" pos:end="43:61"><name pos:start="43:33" pos:end="43:39">AV_RB16</name><argument_list pos:start="43:40" pos:end="43:61">(<argument pos:start="43:41" pos:end="43:60"><expr pos:start="43:41" pos:end="43:60"><name pos:start="43:41" pos:end="43:55"><name pos:start="43:41" pos:end="43:43">mxf</name><operator pos:start="43:44" pos:end="43:45">-&gt;</operator><name pos:start="43:46" pos:end="43:55">local_tags</name></name><operator pos:start="43:56" pos:end="43:56">+</operator><name pos:start="43:57" pos:end="43:57">i</name><operator pos:start="43:58" pos:end="43:58">*</operator><literal type="number" pos:start="43:59" pos:end="43:60">18</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="45:17" pos:end="57:17"><if pos:start="45:17" pos:end="57:17">if <condition pos:start="45:20" pos:end="45:37">(<expr pos:start="45:21" pos:end="45:36"><name pos:start="45:21" pos:end="45:29">local_tag</name> <operator pos:start="45:31" pos:end="45:32">==</operator> <name pos:start="45:34" pos:end="45:36">tag</name></expr>)</condition> <block pos:start="45:39" pos:end="57:17">{<block_content pos:start="47:21" pos:end="56:0">

                    <expr_stmt pos:start="47:21" pos:end="47:60"><expr pos:start="47:21" pos:end="47:59"><call pos:start="47:21" pos:end="47:59"><name pos:start="47:21" pos:end="47:26">memcpy</name><argument_list pos:start="47:27" pos:end="47:59">(<argument pos:start="47:28" pos:end="47:30"><expr pos:start="47:28" pos:end="47:30"><name pos:start="47:28" pos:end="47:30">uid</name></expr></argument>, <argument pos:start="47:33" pos:end="47:54"><expr pos:start="47:33" pos:end="47:54"><name pos:start="47:33" pos:end="47:47"><name pos:start="47:33" pos:end="47:35">mxf</name><operator pos:start="47:36" pos:end="47:37">-&gt;</operator><name pos:start="47:38" pos:end="47:47">local_tags</name></name><operator pos:start="47:48" pos:end="47:48">+</operator><name pos:start="47:49" pos:end="47:49">i</name><operator pos:start="47:50" pos:end="47:50">*</operator><literal type="number" pos:start="47:51" pos:end="47:53">18</literal><operator pos:start="47:53" pos:end="47:53">+</operator><literal type="number" pos:start="47:54" pos:end="47:54">2</literal></expr></argument>, <argument pos:start="47:57" pos:end="47:58"><expr pos:start="47:57" pos:end="47:58"><literal type="number" pos:start="47:57" pos:end="47:58">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="49:21" pos:end="52:0"><expr pos:start="49:21" pos:end="49:69"><call pos:start="49:21" pos:end="49:69"><name pos:start="49:21" pos:end="49:27">dprintf</name><argument_list pos:start="49:28" pos:end="49:69">(<argument pos:start="49:29" pos:end="49:35"><expr pos:start="49:29" pos:end="49:35"><name pos:start="49:29" pos:end="49:35"><name pos:start="49:29" pos:end="49:31">mxf</name><operator pos:start="49:32" pos:end="49:33">-&gt;</operator><name pos:start="49:34" pos:end="49:35">fc</name></name></expr></argument>, <argument pos:start="49:38" pos:end="49:57"><expr pos:start="49:38" pos:end="49:57"><literal type="string" pos:start="49:38" pos:end="49:57">"local tag 0x%04X\n"</literal></expr></argument>, <argument pos:start="49:60" pos:end="49:68"><expr pos:start="49:60" pos:end="49:68"><name pos:start="49:60" pos:end="49:68">local_tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="51:1" pos:end="51:12">#<cpp:directive pos:start="51:2" pos:end="51:6">ifdef</cpp:directive> <name pos:start="51:8" pos:end="51:12">DEBUG</name></cpp:ifdef>

                    <expr_stmt pos:start="53:21" pos:end="56:0"><expr pos:start="53:21" pos:end="53:50"><call pos:start="53:21" pos:end="53:50"><name pos:start="53:21" pos:end="53:29">PRINT_KEY</name><argument_list pos:start="53:30" pos:end="53:50">(<argument pos:start="53:31" pos:end="53:37"><expr pos:start="53:31" pos:end="53:37"><name pos:start="53:31" pos:end="53:37"><name pos:start="53:31" pos:end="53:33">mxf</name><operator pos:start="53:34" pos:end="53:35">-&gt;</operator><name pos:start="53:36" pos:end="53:37">fc</name></name></expr></argument>, <argument pos:start="53:40" pos:end="53:44"><expr pos:start="53:40" pos:end="53:44"><literal type="string" pos:start="53:40" pos:end="53:44">"uid"</literal></expr></argument>, <argument pos:start="53:47" pos:end="53:49"><expr pos:start="53:47" pos:end="53:49"><name pos:start="53:47" pos:end="53:49">uid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="55:1" pos:end="55:6">#<cpp:directive pos:start="55:2" pos:end="55:6">endif</cpp:directive></cpp:endif>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="63:9" pos:end="69:48"><if pos:start="63:9" pos:end="65:41">if <condition pos:start="63:12" pos:end="63:38">(<expr pos:start="63:13" pos:end="63:37"><name pos:start="63:13" pos:end="63:20">ctx_size</name> <operator pos:start="63:22" pos:end="63:23">&amp;&amp;</operator> <name pos:start="63:25" pos:end="63:27">tag</name> <operator pos:start="63:29" pos:end="63:30">==</operator> <literal type="number" pos:start="63:32" pos:end="63:37">0x3C0A</literal></expr>)</condition><block type="pseudo" pos:start="65:13" pos:end="65:41"><block_content pos:start="65:13" pos:end="65:41">

            <expr_stmt pos:start="65:13" pos:end="65:41"><expr pos:start="65:13" pos:end="65:40"><call pos:start="65:13" pos:end="65:40"><name pos:start="65:13" pos:end="65:22">get_buffer</name><argument_list pos:start="65:23" pos:end="65:40">(<argument pos:start="65:24" pos:end="65:25"><expr pos:start="65:24" pos:end="65:25"><name pos:start="65:24" pos:end="65:25">pb</name></expr></argument>, <argument pos:start="65:28" pos:end="65:35"><expr pos:start="65:28" pos:end="65:35"><name pos:start="65:28" pos:end="65:35"><name pos:start="65:28" pos:end="65:30">ctx</name><operator pos:start="65:31" pos:end="65:32">-&gt;</operator><name pos:start="65:33" pos:end="65:35">uid</name></name></expr></argument>, <argument pos:start="65:38" pos:end="65:39"><expr pos:start="65:38" pos:end="65:39"><literal type="number" pos:start="65:38" pos:end="65:39">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="67:9" pos:end="69:48">else<block type="pseudo" pos:start="69:13" pos:end="69:48"><block_content pos:start="69:13" pos:end="69:48">

            <expr_stmt pos:start="69:13" pos:end="69:48"><expr pos:start="69:13" pos:end="69:47"><call pos:start="69:13" pos:end="69:47"><name pos:start="69:13" pos:end="69:22">read_child</name><argument_list pos:start="69:23" pos:end="69:47">(<argument pos:start="69:24" pos:end="69:26"><expr pos:start="69:24" pos:end="69:26"><name pos:start="69:24" pos:end="69:26">ctx</name></expr></argument>, <argument pos:start="69:29" pos:end="69:30"><expr pos:start="69:29" pos:end="69:30"><name pos:start="69:29" pos:end="69:30">pb</name></expr></argument>, <argument pos:start="69:33" pos:end="69:35"><expr pos:start="69:33" pos:end="69:35"><name pos:start="69:33" pos:end="69:35">tag</name></expr></argument>, <argument pos:start="69:38" pos:end="69:41"><expr pos:start="69:38" pos:end="69:41"><name pos:start="69:38" pos:end="69:41">size</name></expr></argument>, <argument pos:start="69:44" pos:end="69:46"><expr pos:start="69:44" pos:end="69:46"><name pos:start="69:44" pos:end="69:46">uid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="73:9" pos:end="73:38"><expr pos:start="73:9" pos:end="73:37"><call pos:start="73:9" pos:end="73:37"><name pos:start="73:9" pos:end="73:17">url_fseek</name><argument_list pos:start="73:18" pos:end="73:37">(<argument pos:start="73:19" pos:end="73:20"><expr pos:start="73:19" pos:end="73:20"><name pos:start="73:19" pos:end="73:20">pb</name></expr></argument>, <argument pos:start="73:23" pos:end="73:26"><expr pos:start="73:23" pos:end="73:26"><name pos:start="73:23" pos:end="73:26">next</name></expr></argument>, <argument pos:start="73:29" pos:end="73:36"><expr pos:start="73:29" pos:end="73:36"><name pos:start="73:29" pos:end="73:36">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <if_stmt pos:start="77:5" pos:end="77:35"><if pos:start="77:5" pos:end="77:35">if <condition pos:start="77:8" pos:end="77:17">(<expr pos:start="77:9" pos:end="77:16"><name pos:start="77:9" pos:end="77:16">ctx_size</name></expr>)</condition><block type="pseudo" pos:start="77:19" pos:end="77:35"><block_content pos:start="77:19" pos:end="77:35"> <expr_stmt pos:start="77:19" pos:end="77:35"><expr pos:start="77:19" pos:end="77:34"><name pos:start="77:19" pos:end="77:27"><name pos:start="77:19" pos:end="77:21">ctx</name><operator pos:start="77:22" pos:end="77:23">-&gt;</operator><name pos:start="77:24" pos:end="77:27">type</name></name> <operator pos:start="77:29" pos:end="77:29">=</operator> <name pos:start="77:31" pos:end="77:34">type</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="79:5" pos:end="79:57">return <expr pos:start="79:12" pos:end="79:56"><ternary pos:start="79:12" pos:end="79:56"><condition pos:start="79:12" pos:end="79:21"><expr pos:start="79:12" pos:end="79:19"><name pos:start="79:12" pos:end="79:19">ctx_size</name></expr> ?</condition><then pos:start="79:23" pos:end="79:52"> <expr pos:start="79:23" pos:end="79:52"><call pos:start="79:23" pos:end="79:52"><name pos:start="79:23" pos:end="79:42">mxf_add_metadata_set</name><argument_list pos:start="79:43" pos:end="79:52">(<argument pos:start="79:44" pos:end="79:46"><expr pos:start="79:44" pos:end="79:46"><name pos:start="79:44" pos:end="79:46">mxf</name></expr></argument>, <argument pos:start="79:49" pos:end="79:51"><expr pos:start="79:49" pos:end="79:51"><name pos:start="79:49" pos:end="79:51">ctx</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="79:54" pos:end="79:56">: <expr pos:start="79:56" pos:end="79:56"><literal type="number" pos:start="79:56" pos:end="79:56">0</literal></expr></else></ternary></expr>;</return>

</block_content>}</block></function>
</unit>
