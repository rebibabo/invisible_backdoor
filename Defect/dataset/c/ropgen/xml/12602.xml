<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12602.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:37">virtio_pci_start_ioeventfd</name><parameter_list pos:start="1:38" pos:end="1:60">(<parameter pos:start="1:39" pos:end="1:59"><decl pos:start="1:39" pos:end="1:59"><type pos:start="1:39" pos:end="1:54"><name pos:start="1:39" pos:end="1:52">VirtIOPCIProxy</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:59">proxy</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:13">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">n</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">r</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="17:5"><if pos:start="9:5" pos:end="17:5">if <condition pos:start="9:8" pos:end="13:33">(<expr pos:start="9:9" pos:end="13:32"><operator pos:start="9:9" pos:end="9:9">!</operator><operator pos:start="9:10" pos:end="9:10">(</operator><name pos:start="9:11" pos:end="9:22"><name pos:start="9:11" pos:end="9:15">proxy</name><operator pos:start="9:16" pos:end="9:17">-&gt;</operator><name pos:start="9:18" pos:end="9:22">flags</name></name> <operator pos:start="9:24" pos:end="9:24">&amp;</operator> <name pos:start="9:26" pos:end="9:54">VIRTIO_PCI_FLAG_USE_IOEVENTFD</name><operator pos:start="9:55" pos:end="9:55">)</operator> <operator pos:start="9:57" pos:end="9:58">||</operator>

        <name pos:start="11:9" pos:end="11:33"><name pos:start="11:9" pos:end="11:13">proxy</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:33">ioeventfd_disabled</name></name> <operator pos:start="11:35" pos:end="11:36">||</operator>

        <name pos:start="13:9" pos:end="13:32"><name pos:start="13:9" pos:end="13:13">proxy</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:32">ioeventfd_started</name></name></expr>)</condition> <block pos:start="13:35" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:17">

        <return pos:start="15:9" pos:end="15:17">return <expr pos:start="15:16" pos:end="15:16"><literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="21:5" pos:end="43:5">for <control pos:start="21:9" pos:end="21:46">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">n</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:41"><expr pos:start="21:17" pos:end="21:40"><name pos:start="21:17" pos:end="21:17">n</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:40">VIRTIO_PCI_QUEUE_MAX</name></expr>;</condition> <incr pos:start="21:43" pos:end="21:45"><expr pos:start="21:43" pos:end="21:45"><name pos:start="21:43" pos:end="21:43">n</name><operator pos:start="21:44" pos:end="21:45">++</operator></expr></incr>)</control> <block pos:start="21:48" pos:end="43:5">{<block_content pos:start="23:9" pos:end="41:64">

        <if_stmt pos:start="23:9" pos:end="27:9"><if pos:start="23:9" pos:end="27:9">if <condition pos:start="23:12" pos:end="23:50">(<expr pos:start="23:13" pos:end="23:49"><operator pos:start="23:13" pos:end="23:13">!</operator><call pos:start="23:14" pos:end="23:49"><name pos:start="23:14" pos:end="23:33">virtio_queue_get_num</name><argument_list pos:start="23:34" pos:end="23:49">(<argument pos:start="23:35" pos:end="23:45"><expr pos:start="23:35" pos:end="23:45"><name pos:start="23:35" pos:end="23:45"><name pos:start="23:35" pos:end="23:39">proxy</name><operator pos:start="23:40" pos:end="23:41">-&gt;</operator><name pos:start="23:42" pos:end="23:45">vdev</name></name></expr></argument>, <argument pos:start="23:48" pos:end="23:48"><expr pos:start="23:48" pos:end="23:48"><name pos:start="23:48" pos:end="23:48">n</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:52" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:21">

            <continue pos:start="25:13" pos:end="25:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="31:9" pos:end="31:66"><expr pos:start="31:9" pos:end="31:65"><name pos:start="31:9" pos:end="31:9">r</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <call pos:start="31:13" pos:end="31:65"><name pos:start="31:13" pos:end="31:49">virtio_pci_set_host_notifier_internal</name><argument_list pos:start="31:50" pos:end="31:65">(<argument pos:start="31:51" pos:end="31:55"><expr pos:start="31:51" pos:end="31:55"><name pos:start="31:51" pos:end="31:55">proxy</name></expr></argument>, <argument pos:start="31:58" pos:end="31:58"><expr pos:start="31:58" pos:end="31:58"><name pos:start="31:58" pos:end="31:58">n</name></expr></argument>, <argument pos:start="31:61" pos:end="31:64"><expr pos:start="31:61" pos:end="31:64"><name pos:start="31:61" pos:end="31:64">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="37:9"><if pos:start="33:9" pos:end="37:9">if <condition pos:start="33:12" pos:end="33:18">(<expr pos:start="33:13" pos:end="33:17"><name pos:start="33:13" pos:end="33:13">r</name> <operator pos:start="33:15" pos:end="33:15">&lt;</operator> <literal type="number" pos:start="33:17" pos:end="33:17">0</literal></expr>)</condition> <block pos:start="33:20" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:30">

            <goto pos:start="35:13" pos:end="35:30">goto <name pos:start="35:18" pos:end="35:29">assign_error</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="41:9" pos:end="41:64"><expr pos:start="41:9" pos:end="41:63"><call pos:start="41:9" pos:end="41:63"><name pos:start="41:9" pos:end="41:47">virtio_pci_set_host_notifier_fd_handler</name><argument_list pos:start="41:48" pos:end="41:63">(<argument pos:start="41:49" pos:end="41:53"><expr pos:start="41:49" pos:end="41:53"><name pos:start="41:49" pos:end="41:53">proxy</name></expr></argument>, <argument pos:start="41:56" pos:end="41:56"><expr pos:start="41:56" pos:end="41:56"><name pos:start="41:56" pos:end="41:56">n</name></expr></argument>, <argument pos:start="41:59" pos:end="41:62"><expr pos:start="41:59" pos:end="41:62"><name pos:start="41:59" pos:end="41:62">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="45:5" pos:end="45:36"><expr pos:start="45:5" pos:end="45:35"><name pos:start="45:5" pos:end="45:28"><name pos:start="45:5" pos:end="45:9">proxy</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:28">ioeventfd_started</name></name> <operator pos:start="45:30" pos:end="45:30">=</operator> <name pos:start="45:32" pos:end="45:35">true</name></expr>;</expr_stmt>

    <return pos:start="47:5" pos:end="47:13">return <expr pos:start="47:12" pos:end="47:12"><literal type="number" pos:start="47:12" pos:end="47:12">0</literal></expr>;</return>



<label pos:start="51:1" pos:end="51:13"><name pos:start="51:1" pos:end="51:12">assign_error</name>:</label>

    <while pos:start="53:5" pos:end="67:5">while <condition pos:start="53:11" pos:end="53:20">(<expr pos:start="53:12" pos:end="53:19"><operator pos:start="53:12" pos:end="53:13">--</operator><name pos:start="53:14" pos:end="53:14">n</name> <operator pos:start="53:16" pos:end="53:17">&gt;=</operator> <literal type="number" pos:start="53:19" pos:end="53:19">0</literal></expr>)</condition> <block pos:start="53:22" pos:end="67:5">{<block_content pos:start="55:9" pos:end="65:63">

        <if_stmt pos:start="55:9" pos:end="59:9"><if pos:start="55:9" pos:end="59:9">if <condition pos:start="55:12" pos:end="55:50">(<expr pos:start="55:13" pos:end="55:49"><operator pos:start="55:13" pos:end="55:13">!</operator><call pos:start="55:14" pos:end="55:49"><name pos:start="55:14" pos:end="55:33">virtio_queue_get_num</name><argument_list pos:start="55:34" pos:end="55:49">(<argument pos:start="55:35" pos:end="55:45"><expr pos:start="55:35" pos:end="55:45"><name pos:start="55:35" pos:end="55:45"><name pos:start="55:35" pos:end="55:39">proxy</name><operator pos:start="55:40" pos:end="55:41">-&gt;</operator><name pos:start="55:42" pos:end="55:45">vdev</name></name></expr></argument>, <argument pos:start="55:48" pos:end="55:48"><expr pos:start="55:48" pos:end="55:48"><name pos:start="55:48" pos:end="55:48">n</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="55:52" pos:end="59:9">{<block_content pos:start="57:13" pos:end="57:21">

            <continue pos:start="57:13" pos:end="57:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="63:9" pos:end="63:65"><expr pos:start="63:9" pos:end="63:64"><call pos:start="63:9" pos:end="63:64"><name pos:start="63:9" pos:end="63:47">virtio_pci_set_host_notifier_fd_handler</name><argument_list pos:start="63:48" pos:end="63:64">(<argument pos:start="63:49" pos:end="63:53"><expr pos:start="63:49" pos:end="63:53"><name pos:start="63:49" pos:end="63:53">proxy</name></expr></argument>, <argument pos:start="63:56" pos:end="63:56"><expr pos:start="63:56" pos:end="63:56"><name pos:start="63:56" pos:end="63:56">n</name></expr></argument>, <argument pos:start="63:59" pos:end="63:63"><expr pos:start="63:59" pos:end="63:63"><name pos:start="63:59" pos:end="63:63">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:63"><expr pos:start="65:9" pos:end="65:62"><call pos:start="65:9" pos:end="65:62"><name pos:start="65:9" pos:end="65:45">virtio_pci_set_host_notifier_internal</name><argument_list pos:start="65:46" pos:end="65:62">(<argument pos:start="65:47" pos:end="65:51"><expr pos:start="65:47" pos:end="65:51"><name pos:start="65:47" pos:end="65:51">proxy</name></expr></argument>, <argument pos:start="65:54" pos:end="65:54"><expr pos:start="65:54" pos:end="65:54"><name pos:start="65:54" pos:end="65:54">n</name></expr></argument>, <argument pos:start="65:57" pos:end="65:61"><expr pos:start="65:57" pos:end="65:61"><name pos:start="65:57" pos:end="65:61">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="69:5" pos:end="69:37"><expr pos:start="69:5" pos:end="69:36"><name pos:start="69:5" pos:end="69:28"><name pos:start="69:5" pos:end="69:9">proxy</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:28">ioeventfd_started</name></name> <operator pos:start="69:30" pos:end="69:30">=</operator> <name pos:start="69:32" pos:end="69:36">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:37"><expr pos:start="71:5" pos:end="71:36"><name pos:start="71:5" pos:end="71:29"><name pos:start="71:5" pos:end="71:9">proxy</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:29">ioeventfd_disabled</name></name> <operator pos:start="71:31" pos:end="71:31">=</operator> <name pos:start="71:33" pos:end="71:36">true</name></expr>;</expr_stmt>

    <return pos:start="73:5" pos:end="73:13">return <expr pos:start="73:12" pos:end="73:12"><name pos:start="73:12" pos:end="73:12">r</name></expr>;</return>

</block_content>}</block></function>
</unit>
