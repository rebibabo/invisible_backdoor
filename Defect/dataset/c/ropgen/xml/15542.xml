<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15542.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:27">ne2000_read</name><parameter_list pos:start="1:28" pos:end="3:42">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:32">void</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:40">opaque</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:65"><decl pos:start="1:43" pos:end="1:65"><type pos:start="1:43" pos:end="1:65"><name pos:start="1:43" pos:end="1:60">target_phys_addr_t</name></type> <name pos:start="1:62" pos:end="1:65">addr</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:41"><decl pos:start="3:29" pos:end="3:41"><type pos:start="3:29" pos:end="3:41"><name pos:start="3:29" pos:end="3:36">unsigned</name></type> <name pos:start="3:38" pos:end="3:41">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="35:1">{<block_content pos:start="7:5" pos:end="33:43">

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">NE2000State</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">s</name> <init pos:start="7:20" pos:end="7:27">= <expr pos:start="7:22" pos:end="7:27"><name pos:start="7:22" pos:end="7:27">opaque</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="31:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:33">(<expr pos:start="11:9" pos:end="11:32"><name pos:start="11:9" pos:end="11:12">addr</name> <operator pos:start="11:14" pos:end="11:14">&lt;</operator> <literal type="number" pos:start="11:16" pos:end="11:19">0x10</literal> <operator pos:start="11:21" pos:end="11:22">&amp;&amp;</operator> <name pos:start="11:24" pos:end="11:27">size</name> <operator pos:start="11:29" pos:end="11:30">==</operator> <literal type="number" pos:start="11:32" pos:end="11:32">1</literal></expr>)</condition> <block pos:start="11:35" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:43">

        <return pos:start="13:9" pos:end="13:43">return <expr pos:start="13:16" pos:end="13:42"><call pos:start="13:16" pos:end="13:42"><name pos:start="13:16" pos:end="13:33">ne2000_ioport_read</name><argument_list pos:start="13:34" pos:end="13:42">(<argument pos:start="13:35" pos:end="13:35"><expr pos:start="13:35" pos:end="13:35"><name pos:start="13:35" pos:end="13:35">s</name></expr></argument>, <argument pos:start="13:38" pos:end="13:41"><expr pos:start="13:38" pos:end="13:41"><name pos:start="13:38" pos:end="13:41">addr</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="15:7" pos:end="27:5">else if <condition pos:start="15:15" pos:end="15:28">(<expr pos:start="15:16" pos:end="15:27"><name pos:start="15:16" pos:end="15:19">addr</name> <operator pos:start="15:21" pos:end="15:22">==</operator> <literal type="number" pos:start="15:24" pos:end="15:27">0x10</literal></expr>)</condition> <block pos:start="15:30" pos:end="27:5">{<block_content pos:start="17:9" pos:end="25:9">

        <if_stmt pos:start="17:9" pos:end="25:9"><if pos:start="17:9" pos:end="21:9">if <condition pos:start="17:12" pos:end="17:22">(<expr pos:start="17:13" pos:end="17:21"><name pos:start="17:13" pos:end="17:16">size</name> <operator pos:start="17:18" pos:end="17:19">&lt;=</operator> <literal type="number" pos:start="17:21" pos:end="17:21">2</literal></expr>)</condition> <block pos:start="17:24" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:52">

            <return pos:start="19:13" pos:end="19:52">return <expr pos:start="19:20" pos:end="19:51"><call pos:start="19:20" pos:end="19:51"><name pos:start="19:20" pos:end="19:42">ne2000_asic_ioport_read</name><argument_list pos:start="19:43" pos:end="19:51">(<argument pos:start="19:44" pos:end="19:44"><expr pos:start="19:44" pos:end="19:44"><name pos:start="19:44" pos:end="19:44">s</name></expr></argument>, <argument pos:start="19:47" pos:end="19:50"><expr pos:start="19:47" pos:end="19:50"><name pos:start="19:47" pos:end="19:50">addr</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if> <else pos:start="21:11" pos:end="25:9">else <block pos:start="21:16" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:53">

            <return pos:start="23:13" pos:end="23:53">return <expr pos:start="23:20" pos:end="23:52"><call pos:start="23:20" pos:end="23:52"><name pos:start="23:20" pos:end="23:43">ne2000_asic_ioport_readl</name><argument_list pos:start="23:44" pos:end="23:52">(<argument pos:start="23:45" pos:end="23:45"><expr pos:start="23:45" pos:end="23:45"><name pos:start="23:45" pos:end="23:45">s</name></expr></argument>, <argument pos:start="23:48" pos:end="23:51"><expr pos:start="23:48" pos:end="23:51"><name pos:start="23:48" pos:end="23:51">addr</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="27:7" pos:end="31:5">else if <condition pos:start="27:15" pos:end="27:41">(<expr pos:start="27:16" pos:end="27:40"><name pos:start="27:16" pos:end="27:19">addr</name> <operator pos:start="27:21" pos:end="27:22">==</operator> <literal type="number" pos:start="27:24" pos:end="27:27">0x1f</literal> <operator pos:start="27:29" pos:end="27:30">&amp;&amp;</operator> <name pos:start="27:32" pos:end="27:35">size</name> <operator pos:start="27:37" pos:end="27:38">==</operator> <literal type="number" pos:start="27:40" pos:end="27:40">1</literal></expr>)</condition> <block pos:start="27:43" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:49">

        <return pos:start="29:9" pos:end="29:49">return <expr pos:start="29:16" pos:end="29:48"><call pos:start="29:16" pos:end="29:48"><name pos:start="29:16" pos:end="29:39">ne2000_reset_ioport_read</name><argument_list pos:start="29:40" pos:end="29:48">(<argument pos:start="29:41" pos:end="29:41"><expr pos:start="29:41" pos:end="29:41"><name pos:start="29:41" pos:end="29:41">s</name></expr></argument>, <argument pos:start="29:44" pos:end="29:47"><expr pos:start="29:44" pos:end="29:47"><name pos:start="29:44" pos:end="29:47">addr</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="33:5" pos:end="33:43">return <expr pos:start="33:12" pos:end="33:42"><operator pos:start="33:12" pos:end="33:12">(</operator><operator pos:start="33:13" pos:end="33:13">(</operator><name pos:start="33:14" pos:end="33:21">uint64_t</name><operator pos:start="33:22" pos:end="33:22">)</operator><literal type="number" pos:start="33:23" pos:end="33:23">1</literal> <operator pos:start="33:25" pos:end="33:26">&lt;&lt;</operator> <operator pos:start="33:28" pos:end="33:28">(</operator><name pos:start="33:29" pos:end="33:32">size</name> <operator pos:start="33:34" pos:end="33:34">*</operator> <literal type="number" pos:start="33:36" pos:end="33:36">8</literal><operator pos:start="33:37" pos:end="33:37">)</operator><operator pos:start="33:38" pos:end="33:38">)</operator> <operator pos:start="33:40" pos:end="33:40">-</operator> <literal type="number" pos:start="33:42" pos:end="33:42">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
