<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2257.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">do_audio_out</name><parameter_list pos:start="1:25" pos:end="3:40">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:43"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:62"><decl pos:start="1:46" pos:end="1:62"><type pos:start="1:46" pos:end="1:62"><name pos:start="1:46" pos:end="1:57">OutputStream</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:62">ost</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:39"><decl pos:start="3:26" pos:end="3:39"><type pos:start="3:26" pos:end="3:39"><name pos:start="3:26" pos:end="3:32">AVFrame</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:39">frame</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="95:1">{<block_content pos:start="7:5" pos:end="93:5">

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">AVCodecContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:23">enc</name> <init pos:start="7:25" pos:end="7:38">= <expr pos:start="7:27" pos:end="7:38"><name pos:start="7:27" pos:end="7:38"><name pos:start="7:27" pos:end="7:29">ost</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:38">enc_ctx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">AVPacket</name></type> <name pos:start="9:14" pos:end="9:16">pkt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:18">got_packet</name> <init pos:start="11:20" pos:end="11:22">= <expr pos:start="11:22" pos:end="11:22"><literal type="number" pos:start="11:22" pos:end="11:22">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:25"><expr pos:start="15:5" pos:end="15:24"><call pos:start="15:5" pos:end="15:24"><name pos:start="15:5" pos:end="15:18">av_init_packet</name><argument_list pos:start="15:19" pos:end="15:24">(<argument pos:start="15:20" pos:end="15:23"><expr pos:start="15:20" pos:end="15:23"><operator pos:start="15:20" pos:end="15:20">&amp;</operator><name pos:start="15:21" pos:end="15:23">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:20"><expr pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:7">pkt</name><operator pos:start="17:8" pos:end="17:8">.</operator><name pos:start="17:9" pos:end="17:12">data</name></name> <operator pos:start="17:14" pos:end="17:14">=</operator> <name pos:start="17:16" pos:end="17:19">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:17"><expr pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:7">pkt</name><operator pos:start="19:8" pos:end="19:8">.</operator><name pos:start="19:9" pos:end="19:12">size</name></name> <operator pos:start="19:14" pos:end="19:14">=</operator> <literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="25:15"><if pos:start="23:5" pos:end="25:15">if <condition pos:start="23:8" pos:end="23:35">(<expr pos:start="23:9" pos:end="23:34"><operator pos:start="23:9" pos:end="23:9">!</operator><call pos:start="23:10" pos:end="23:34"><name pos:start="23:10" pos:end="23:29">check_recording_time</name><argument_list pos:start="23:30" pos:end="23:34">(<argument pos:start="23:31" pos:end="23:33"><expr pos:start="23:31" pos:end="23:33"><name pos:start="23:31" pos:end="23:33">ost</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:15"><block_content pos:start="25:9" pos:end="25:15">

        <return pos:start="25:9" pos:end="25:15">return;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="31:36"><if pos:start="29:5" pos:end="31:36">if <condition pos:start="29:8" pos:end="29:62">(<expr pos:start="29:9" pos:end="29:61"><name pos:start="29:9" pos:end="29:18"><name pos:start="29:9" pos:end="29:13">frame</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:18">pts</name></name> <operator pos:start="29:20" pos:end="29:21">==</operator> <name pos:start="29:23" pos:end="29:36">AV_NOPTS_VALUE</name> <operator pos:start="29:38" pos:end="29:39">||</operator> <name pos:start="29:41" pos:end="29:57">audio_sync_method</name> <operator pos:start="29:59" pos:end="29:59">&lt;</operator> <literal type="number" pos:start="29:61" pos:end="29:61">0</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:36"><block_content pos:start="31:9" pos:end="31:36">

        <expr_stmt pos:start="31:9" pos:end="31:36"><expr pos:start="31:9" pos:end="31:35"><name pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:13">frame</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:18">pts</name></name> <operator pos:start="31:20" pos:end="31:20">=</operator> <name pos:start="31:22" pos:end="31:35"><name pos:start="31:22" pos:end="31:24">ost</name><operator pos:start="31:25" pos:end="31:26">-&gt;</operator><name pos:start="31:27" pos:end="31:35">sync_opts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:52"><expr pos:start="33:5" pos:end="33:51"><name pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:7">ost</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:18">sync_opts</name></name> <operator pos:start="33:20" pos:end="33:20">=</operator> <name pos:start="33:22" pos:end="33:31"><name pos:start="33:22" pos:end="33:26">frame</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:31">pts</name></name> <operator pos:start="33:33" pos:end="33:33">+</operator> <name pos:start="33:35" pos:end="33:51"><name pos:start="33:35" pos:end="33:39">frame</name><operator pos:start="33:40" pos:end="33:41">-&gt;</operator><name pos:start="33:42" pos:end="33:51">nb_samples</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:46"><expr pos:start="35:5" pos:end="35:45"><name pos:start="35:5" pos:end="35:24"><name pos:start="35:5" pos:end="35:7">ost</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:24">samples_encoded</name></name> <operator pos:start="35:26" pos:end="35:27">+=</operator> <name pos:start="35:29" pos:end="35:45"><name pos:start="35:29" pos:end="35:33">frame</name><operator pos:start="35:34" pos:end="35:35">-&gt;</operator><name pos:start="35:36" pos:end="35:45">nb_samples</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:26"><expr pos:start="37:5" pos:end="37:25"><name pos:start="37:5" pos:end="37:23"><name pos:start="37:5" pos:end="37:7">ost</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:23">frames_encoded</name></name><operator pos:start="37:24" pos:end="37:25">++</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:38"><expr pos:start="41:5" pos:end="41:37"><call pos:start="41:5" pos:end="41:37"><name pos:start="41:5" pos:end="41:14">av_assert0</name><argument_list pos:start="41:15" pos:end="41:37">(<argument pos:start="41:16" pos:end="41:36"><expr pos:start="41:16" pos:end="41:36"><name pos:start="41:16" pos:end="41:23"><name pos:start="41:16" pos:end="41:18">pkt</name><operator pos:start="41:19" pos:end="41:19">.</operator><name pos:start="41:20" pos:end="41:23">size</name></name> <operator pos:start="41:25" pos:end="41:26">||</operator> <operator pos:start="41:28" pos:end="41:28">!</operator><name pos:start="41:29" pos:end="41:36"><name pos:start="41:29" pos:end="41:31">pkt</name><operator pos:start="41:32" pos:end="41:32">.</operator><name pos:start="41:33" pos:end="41:36">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:27"><expr pos:start="43:5" pos:end="43:26"><call pos:start="43:5" pos:end="43:26"><name pos:start="43:5" pos:end="43:20">update_benchmark</name><argument_list pos:start="43:21" pos:end="43:26">(<argument pos:start="43:22" pos:end="43:25"><expr pos:start="43:22" pos:end="43:25"><name pos:start="43:22" pos:end="43:25">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="55:5"><if pos:start="45:5" pos:end="55:5">if <condition pos:start="45:8" pos:end="45:17">(<expr pos:start="45:9" pos:end="45:16"><name pos:start="45:9" pos:end="45:16">debug_ts</name></expr>)</condition> <block pos:start="45:19" pos:end="55:5">{<block_content pos:start="47:9" pos:end="53:55">

        <expr_stmt pos:start="47:9" pos:end="53:55"><expr pos:start="47:9" pos:end="53:54"><call pos:start="47:9" pos:end="53:54"><name pos:start="47:9" pos:end="47:14">av_log</name><argument_list pos:start="47:15" pos:end="53:54">(<argument pos:start="47:16" pos:end="47:19"><expr pos:start="47:16" pos:end="47:19"><name pos:start="47:16" pos:end="47:19">NULL</name></expr></argument>, <argument pos:start="47:22" pos:end="47:32"><expr pos:start="47:22" pos:end="47:32"><name pos:start="47:22" pos:end="47:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="47:35" pos:end="49:65"><expr pos:start="47:35" pos:end="49:65"><literal type="string" pos:start="47:35" pos:end="47:58">"encoder &lt;- type:audio "</literal>

               <literal type="string" pos:start="49:16" pos:end="49:65">"frame_pts:%s frame_pts_time:%s time_base:%d/%d\n"</literal></expr></argument>,

               <argument pos:start="51:16" pos:end="51:36"><expr pos:start="51:16" pos:end="51:36"><call pos:start="51:16" pos:end="51:36"><name pos:start="51:16" pos:end="51:24">av_ts2str</name><argument_list pos:start="51:25" pos:end="51:36">(<argument pos:start="51:26" pos:end="51:35"><expr pos:start="51:26" pos:end="51:35"><name pos:start="51:26" pos:end="51:35"><name pos:start="51:26" pos:end="51:30">frame</name><operator pos:start="51:31" pos:end="51:32">-&gt;</operator><name pos:start="51:33" pos:end="51:35">pts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="51:39" pos:end="51:80"><expr pos:start="51:39" pos:end="51:80"><call pos:start="51:39" pos:end="51:80"><name pos:start="51:39" pos:end="51:51">av_ts2timestr</name><argument_list pos:start="51:52" pos:end="51:80">(<argument pos:start="51:53" pos:end="51:62"><expr pos:start="51:53" pos:end="51:62"><name pos:start="51:53" pos:end="51:62"><name pos:start="51:53" pos:end="51:57">frame</name><operator pos:start="51:58" pos:end="51:59">-&gt;</operator><name pos:start="51:60" pos:end="51:62">pts</name></name></expr></argument>, <argument pos:start="51:65" pos:end="51:79"><expr pos:start="51:65" pos:end="51:79"><operator pos:start="51:65" pos:end="51:65">&amp;</operator><name pos:start="51:66" pos:end="51:79"><name pos:start="51:66" pos:end="51:68">enc</name><operator pos:start="51:69" pos:end="51:70">-&gt;</operator><name pos:start="51:71" pos:end="51:79">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>,

               <argument pos:start="53:16" pos:end="53:33"><expr pos:start="53:16" pos:end="53:33"><name pos:start="53:16" pos:end="53:33"><name pos:start="53:16" pos:end="53:18">enc</name><operator pos:start="53:19" pos:end="53:20">-&gt;</operator><name pos:start="53:21" pos:end="53:29">time_base</name><operator pos:start="53:30" pos:end="53:30">.</operator><name pos:start="53:31" pos:end="53:33">num</name></name></expr></argument>, <argument pos:start="53:36" pos:end="53:53"><expr pos:start="53:36" pos:end="53:53"><name pos:start="53:36" pos:end="53:53"><name pos:start="53:36" pos:end="53:38">enc</name><operator pos:start="53:39" pos:end="53:40">-&gt;</operator><name pos:start="53:41" pos:end="53:49">time_base</name><operator pos:start="53:50" pos:end="53:50">.</operator><name pos:start="53:51" pos:end="53:53">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="59:5" pos:end="65:5"><if pos:start="59:5" pos:end="65:5">if <condition pos:start="59:8" pos:end="59:65">(<expr pos:start="59:9" pos:end="59:64"><call pos:start="59:9" pos:end="59:60"><name pos:start="59:9" pos:end="59:29">avcodec_encode_audio2</name><argument_list pos:start="59:30" pos:end="59:60">(<argument pos:start="59:31" pos:end="59:33"><expr pos:start="59:31" pos:end="59:33"><name pos:start="59:31" pos:end="59:33">enc</name></expr></argument>, <argument pos:start="59:36" pos:end="59:39"><expr pos:start="59:36" pos:end="59:39"><operator pos:start="59:36" pos:end="59:36">&amp;</operator><name pos:start="59:37" pos:end="59:39">pkt</name></expr></argument>, <argument pos:start="59:42" pos:end="59:46"><expr pos:start="59:42" pos:end="59:46"><name pos:start="59:42" pos:end="59:46">frame</name></expr></argument>, <argument pos:start="59:49" pos:end="59:59"><expr pos:start="59:49" pos:end="59:59"><operator pos:start="59:49" pos:end="59:49">&amp;</operator><name pos:start="59:50" pos:end="59:59">got_packet</name></expr></argument>)</argument_list></call> <operator pos:start="59:62" pos:end="59:62">&lt;</operator> <literal type="number" pos:start="59:64" pos:end="59:64">0</literal></expr>)</condition> <block pos:start="59:67" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:24">

        <expr_stmt pos:start="61:9" pos:end="61:86"><expr pos:start="61:9" pos:end="61:85"><call pos:start="61:9" pos:end="61:85"><name pos:start="61:9" pos:end="61:14">av_log</name><argument_list pos:start="61:15" pos:end="61:85">(<argument pos:start="61:16" pos:end="61:19"><expr pos:start="61:16" pos:end="61:19"><name pos:start="61:16" pos:end="61:19">NULL</name></expr></argument>, <argument pos:start="61:22" pos:end="61:33"><expr pos:start="61:22" pos:end="61:33"><name pos:start="61:22" pos:end="61:33">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="61:36" pos:end="61:84"><expr pos:start="61:36" pos:end="61:84"><literal type="string" pos:start="61:36" pos:end="61:84">"Audio encoding failed (avcodec_encode_audio2)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:24"><expr pos:start="63:9" pos:end="63:23"><call pos:start="63:9" pos:end="63:23"><name pos:start="63:9" pos:end="63:20">exit_program</name><argument_list pos:start="63:21" pos:end="63:23">(<argument pos:start="63:22" pos:end="63:22"><expr pos:start="63:22" pos:end="63:22"><literal type="number" pos:start="63:22" pos:end="63:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:72"><expr pos:start="67:5" pos:end="67:71"><call pos:start="67:5" pos:end="67:71"><name pos:start="67:5" pos:end="67:20">update_benchmark</name><argument_list pos:start="67:21" pos:end="67:71">(<argument pos:start="67:22" pos:end="67:41"><expr pos:start="67:22" pos:end="67:41"><literal type="string" pos:start="67:22" pos:end="67:41">"encode_audio %d.%d"</literal></expr></argument>, <argument pos:start="67:44" pos:end="67:58"><expr pos:start="67:44" pos:end="67:58"><name pos:start="67:44" pos:end="67:58"><name pos:start="67:44" pos:end="67:46">ost</name><operator pos:start="67:47" pos:end="67:48">-&gt;</operator><name pos:start="67:49" pos:end="67:58">file_index</name></name></expr></argument>, <argument pos:start="67:61" pos:end="67:70"><expr pos:start="67:61" pos:end="67:70"><name pos:start="67:61" pos:end="67:70"><name pos:start="67:61" pos:end="67:63">ost</name><operator pos:start="67:64" pos:end="67:65">-&gt;</operator><name pos:start="67:66" pos:end="67:70">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="71:5" pos:end="93:5"><if pos:start="71:5" pos:end="93:5">if <condition pos:start="71:8" pos:end="71:19">(<expr pos:start="71:9" pos:end="71:18"><name pos:start="71:9" pos:end="71:18">got_packet</name></expr>)</condition> <block pos:start="71:21" pos:end="93:5">{<block_content pos:start="73:9" pos:end="91:34">

        <expr_stmt pos:start="73:9" pos:end="73:71"><expr pos:start="73:9" pos:end="73:70"><call pos:start="73:9" pos:end="73:70"><name pos:start="73:9" pos:end="73:28">av_packet_rescale_ts</name><argument_list pos:start="73:29" pos:end="73:70">(<argument pos:start="73:30" pos:end="73:33"><expr pos:start="73:30" pos:end="73:33"><operator pos:start="73:30" pos:end="73:30">&amp;</operator><name pos:start="73:31" pos:end="73:33">pkt</name></expr></argument>, <argument pos:start="73:36" pos:end="73:49"><expr pos:start="73:36" pos:end="73:49"><name pos:start="73:36" pos:end="73:49"><name pos:start="73:36" pos:end="73:38">enc</name><operator pos:start="73:39" pos:end="73:40">-&gt;</operator><name pos:start="73:41" pos:end="73:49">time_base</name></name></expr></argument>, <argument pos:start="73:52" pos:end="73:69"><expr pos:start="73:52" pos:end="73:69"><name pos:start="73:52" pos:end="73:69"><name pos:start="73:52" pos:end="73:54">ost</name><operator pos:start="73:55" pos:end="73:56">-&gt;</operator><name pos:start="73:57" pos:end="73:58">st</name><operator pos:start="73:59" pos:end="73:60">-&gt;</operator><name pos:start="73:61" pos:end="73:69">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="77:9" pos:end="87:9"><if pos:start="77:9" pos:end="87:9">if <condition pos:start="77:12" pos:end="77:21">(<expr pos:start="77:13" pos:end="77:20"><name pos:start="77:13" pos:end="77:20">debug_ts</name></expr>)</condition> <block pos:start="77:23" pos:end="87:9">{<block_content pos:start="79:13" pos:end="85:84">

            <expr_stmt pos:start="79:13" pos:end="85:84"><expr pos:start="79:13" pos:end="85:83"><call pos:start="79:13" pos:end="85:83"><name pos:start="79:13" pos:end="79:18">av_log</name><argument_list pos:start="79:19" pos:end="85:83">(<argument pos:start="79:20" pos:end="79:23"><expr pos:start="79:20" pos:end="79:23"><name pos:start="79:20" pos:end="79:23">NULL</name></expr></argument>, <argument pos:start="79:26" pos:end="79:36"><expr pos:start="79:26" pos:end="79:36"><name pos:start="79:26" pos:end="79:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="79:39" pos:end="81:76"><expr pos:start="79:39" pos:end="81:76"><literal type="string" pos:start="79:39" pos:end="79:62">"encoder -&gt; type:audio "</literal>

                   <literal type="string" pos:start="81:20" pos:end="81:76">"pkt_pts:%s pkt_pts_time:%s pkt_dts:%s pkt_dts_time:%s\n"</literal></expr></argument>,

                   <argument pos:start="83:20" pos:end="83:37"><expr pos:start="83:20" pos:end="83:37"><call pos:start="83:20" pos:end="83:37"><name pos:start="83:20" pos:end="83:28">av_ts2str</name><argument_list pos:start="83:29" pos:end="83:37">(<argument pos:start="83:30" pos:end="83:36"><expr pos:start="83:30" pos:end="83:36"><name pos:start="83:30" pos:end="83:36"><name pos:start="83:30" pos:end="83:32">pkt</name><operator pos:start="83:33" pos:end="83:33">.</operator><name pos:start="83:34" pos:end="83:36">pts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="83:40" pos:end="83:82"><expr pos:start="83:40" pos:end="83:82"><call pos:start="83:40" pos:end="83:82"><name pos:start="83:40" pos:end="83:52">av_ts2timestr</name><argument_list pos:start="83:53" pos:end="83:82">(<argument pos:start="83:54" pos:end="83:60"><expr pos:start="83:54" pos:end="83:60"><name pos:start="83:54" pos:end="83:60"><name pos:start="83:54" pos:end="83:56">pkt</name><operator pos:start="83:57" pos:end="83:57">.</operator><name pos:start="83:58" pos:end="83:60">pts</name></name></expr></argument>, <argument pos:start="83:63" pos:end="83:81"><expr pos:start="83:63" pos:end="83:81"><operator pos:start="83:63" pos:end="83:63">&amp;</operator><name pos:start="83:64" pos:end="83:81"><name pos:start="83:64" pos:end="83:66">ost</name><operator pos:start="83:67" pos:end="83:68">-&gt;</operator><name pos:start="83:69" pos:end="83:70">st</name><operator pos:start="83:71" pos:end="83:72">-&gt;</operator><name pos:start="83:73" pos:end="83:81">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>,

                   <argument pos:start="85:20" pos:end="85:37"><expr pos:start="85:20" pos:end="85:37"><call pos:start="85:20" pos:end="85:37"><name pos:start="85:20" pos:end="85:28">av_ts2str</name><argument_list pos:start="85:29" pos:end="85:37">(<argument pos:start="85:30" pos:end="85:36"><expr pos:start="85:30" pos:end="85:36"><name pos:start="85:30" pos:end="85:36"><name pos:start="85:30" pos:end="85:32">pkt</name><operator pos:start="85:33" pos:end="85:33">.</operator><name pos:start="85:34" pos:end="85:36">dts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="85:40" pos:end="85:82"><expr pos:start="85:40" pos:end="85:82"><call pos:start="85:40" pos:end="85:82"><name pos:start="85:40" pos:end="85:52">av_ts2timestr</name><argument_list pos:start="85:53" pos:end="85:82">(<argument pos:start="85:54" pos:end="85:60"><expr pos:start="85:54" pos:end="85:60"><name pos:start="85:54" pos:end="85:60"><name pos:start="85:54" pos:end="85:56">pkt</name><operator pos:start="85:57" pos:end="85:57">.</operator><name pos:start="85:58" pos:end="85:60">dts</name></name></expr></argument>, <argument pos:start="85:63" pos:end="85:81"><expr pos:start="85:63" pos:end="85:81"><operator pos:start="85:63" pos:end="85:63">&amp;</operator><name pos:start="85:64" pos:end="85:81"><name pos:start="85:64" pos:end="85:66">ost</name><operator pos:start="85:67" pos:end="85:68">-&gt;</operator><name pos:start="85:69" pos:end="85:70">st</name><operator pos:start="85:71" pos:end="85:72">-&gt;</operator><name pos:start="85:73" pos:end="85:81">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="91:9" pos:end="91:34"><expr pos:start="91:9" pos:end="91:33"><call pos:start="91:9" pos:end="91:33"><name pos:start="91:9" pos:end="91:19">write_frame</name><argument_list pos:start="91:20" pos:end="91:33">(<argument pos:start="91:21" pos:end="91:21"><expr pos:start="91:21" pos:end="91:21"><name pos:start="91:21" pos:end="91:21">s</name></expr></argument>, <argument pos:start="91:24" pos:end="91:27"><expr pos:start="91:24" pos:end="91:27"><operator pos:start="91:24" pos:end="91:24">&amp;</operator><name pos:start="91:25" pos:end="91:27">pkt</name></expr></argument>, <argument pos:start="91:30" pos:end="91:32"><expr pos:start="91:30" pos:end="91:32"><name pos:start="91:30" pos:end="91:32">ost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
