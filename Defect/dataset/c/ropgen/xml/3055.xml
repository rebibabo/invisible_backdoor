<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3055.c" pos:tabs="8"><function pos:start="1:1" pos:end="123:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">disas_cond_select</name><parameter_list pos:start="1:30" pos:end="1:61">(<parameter pos:start="1:31" pos:end="1:45"><decl pos:start="1:31" pos:end="1:45"><type pos:start="1:31" pos:end="1:45"><name pos:start="1:31" pos:end="1:42">DisasContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:55">uint32_t</name></type> <name pos:start="1:57" pos:end="1:60">insn</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="123:1">{<block_content pos:start="5:5" pos:end="121:5">

    <decl_stmt pos:start="5:5" pos:end="5:58"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:12">unsigned</name> <name pos:start="5:14" pos:end="5:16">int</name></type> <name pos:start="5:18" pos:end="5:19">sf</name></decl>, <decl pos:start="5:22" pos:end="5:29"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:22" pos:end="5:29">else_inv</name></decl>, <decl pos:start="5:32" pos:end="5:33"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:32" pos:end="5:33">rm</name></decl>, <decl pos:start="5:36" pos:end="5:39"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:36" pos:end="5:39">cond</name></decl>, <decl pos:start="5:42" pos:end="5:49"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:42" pos:end="5:49">else_inc</name></decl>, <decl pos:start="5:52" pos:end="5:53"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:52" pos:end="5:53">rn</name></decl>, <decl pos:start="5:56" pos:end="5:57"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:56" pos:end="5:57">rd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">TCGv_i64</name></type> <name pos:start="7:14" pos:end="7:19">tcg_rd</name></decl>, <decl pos:start="7:22" pos:end="7:28"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:22" pos:end="7:28">tcg_src</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="19:5"><if pos:start="11:5" pos:end="19:5">if <condition pos:start="11:8" pos:end="11:57">(<expr pos:start="11:9" pos:end="11:56"><call pos:start="11:9" pos:end="11:30"><name pos:start="11:9" pos:end="11:17">extract32</name><argument_list pos:start="11:18" pos:end="11:30">(<argument pos:start="11:19" pos:end="11:22"><expr pos:start="11:19" pos:end="11:22"><name pos:start="11:19" pos:end="11:22">insn</name></expr></argument>, <argument pos:start="11:25" pos:end="11:26"><expr pos:start="11:25" pos:end="11:26"><literal type="number" pos:start="11:25" pos:end="11:26">29</literal></expr></argument>, <argument pos:start="11:29" pos:end="11:29"><expr pos:start="11:29" pos:end="11:29"><literal type="number" pos:start="11:29" pos:end="11:29">1</literal></expr></argument>)</argument_list></call> <operator pos:start="11:32" pos:end="11:33">||</operator> <call pos:start="11:35" pos:end="11:56"><name pos:start="11:35" pos:end="11:43">extract32</name><argument_list pos:start="11:44" pos:end="11:56">(<argument pos:start="11:45" pos:end="11:48"><expr pos:start="11:45" pos:end="11:48"><name pos:start="11:45" pos:end="11:48">insn</name></expr></argument>, <argument pos:start="11:51" pos:end="11:52"><expr pos:start="11:51" pos:end="11:52"><literal type="number" pos:start="11:51" pos:end="11:52">11</literal></expr></argument>, <argument pos:start="11:55" pos:end="11:55"><expr pos:start="11:55" pos:end="11:55"><literal type="number" pos:start="11:55" pos:end="11:55">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:59" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:15">

        <comment type="block" pos:start="13:9" pos:end="13:35">/* S == 1 or op2&lt;1&gt; == 1 */</comment>

        <expr_stmt pos:start="15:9" pos:end="15:32"><expr pos:start="15:9" pos:end="15:31"><call pos:start="15:9" pos:end="15:31"><name pos:start="15:9" pos:end="15:28">unallocated_encoding</name><argument_list pos:start="15:29" pos:end="15:31">(<argument pos:start="15:30" pos:end="15:30"><expr pos:start="15:30" pos:end="15:30"><name pos:start="15:30" pos:end="15:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:32"><expr pos:start="21:5" pos:end="21:31"><name pos:start="21:5" pos:end="21:6">sf</name> <operator pos:start="21:8" pos:end="21:8">=</operator> <call pos:start="21:10" pos:end="21:31"><name pos:start="21:10" pos:end="21:18">extract32</name><argument_list pos:start="21:19" pos:end="21:31">(<argument pos:start="21:20" pos:end="21:23"><expr pos:start="21:20" pos:end="21:23"><name pos:start="21:20" pos:end="21:23">insn</name></expr></argument>, <argument pos:start="21:26" pos:end="21:27"><expr pos:start="21:26" pos:end="21:27"><literal type="number" pos:start="21:26" pos:end="21:27">31</literal></expr></argument>, <argument pos:start="21:30" pos:end="21:30"><expr pos:start="21:30" pos:end="21:30"><literal type="number" pos:start="21:30" pos:end="21:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:38"><expr pos:start="23:5" pos:end="23:37"><name pos:start="23:5" pos:end="23:12">else_inv</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <call pos:start="23:16" pos:end="23:37"><name pos:start="23:16" pos:end="23:24">extract32</name><argument_list pos:start="23:25" pos:end="23:37">(<argument pos:start="23:26" pos:end="23:29"><expr pos:start="23:26" pos:end="23:29"><name pos:start="23:26" pos:end="23:29">insn</name></expr></argument>, <argument pos:start="23:32" pos:end="23:33"><expr pos:start="23:32" pos:end="23:33"><literal type="number" pos:start="23:32" pos:end="23:33">30</literal></expr></argument>, <argument pos:start="23:36" pos:end="23:36"><expr pos:start="23:36" pos:end="23:36"><literal type="number" pos:start="23:36" pos:end="23:36">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:32"><expr pos:start="25:5" pos:end="25:31"><name pos:start="25:5" pos:end="25:6">rm</name> <operator pos:start="25:8" pos:end="25:8">=</operator> <call pos:start="25:10" pos:end="25:31"><name pos:start="25:10" pos:end="25:18">extract32</name><argument_list pos:start="25:19" pos:end="25:31">(<argument pos:start="25:20" pos:end="25:23"><expr pos:start="25:20" pos:end="25:23"><name pos:start="25:20" pos:end="25:23">insn</name></expr></argument>, <argument pos:start="25:26" pos:end="25:27"><expr pos:start="25:26" pos:end="25:27"><literal type="number" pos:start="25:26" pos:end="25:27">16</literal></expr></argument>, <argument pos:start="25:30" pos:end="25:30"><expr pos:start="25:30" pos:end="25:30"><literal type="number" pos:start="25:30" pos:end="25:30">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:34"><expr pos:start="27:5" pos:end="27:33"><name pos:start="27:5" pos:end="27:8">cond</name> <operator pos:start="27:10" pos:end="27:10">=</operator> <call pos:start="27:12" pos:end="27:33"><name pos:start="27:12" pos:end="27:20">extract32</name><argument_list pos:start="27:21" pos:end="27:33">(<argument pos:start="27:22" pos:end="27:25"><expr pos:start="27:22" pos:end="27:25"><name pos:start="27:22" pos:end="27:25">insn</name></expr></argument>, <argument pos:start="27:28" pos:end="27:29"><expr pos:start="27:28" pos:end="27:29"><literal type="number" pos:start="27:28" pos:end="27:29">12</literal></expr></argument>, <argument pos:start="27:32" pos:end="27:32"><expr pos:start="27:32" pos:end="27:32"><literal type="number" pos:start="27:32" pos:end="27:32">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:38"><expr pos:start="29:5" pos:end="29:37"><name pos:start="29:5" pos:end="29:12">else_inc</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <call pos:start="29:16" pos:end="29:37"><name pos:start="29:16" pos:end="29:24">extract32</name><argument_list pos:start="29:25" pos:end="29:37">(<argument pos:start="29:26" pos:end="29:29"><expr pos:start="29:26" pos:end="29:29"><name pos:start="29:26" pos:end="29:29">insn</name></expr></argument>, <argument pos:start="29:32" pos:end="29:33"><expr pos:start="29:32" pos:end="29:33"><literal type="number" pos:start="29:32" pos:end="29:33">10</literal></expr></argument>, <argument pos:start="29:36" pos:end="29:36"><expr pos:start="29:36" pos:end="29:36"><literal type="number" pos:start="29:36" pos:end="29:36">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:31"><expr pos:start="31:5" pos:end="31:30"><name pos:start="31:5" pos:end="31:6">rn</name> <operator pos:start="31:8" pos:end="31:8">=</operator> <call pos:start="31:10" pos:end="31:30"><name pos:start="31:10" pos:end="31:18">extract32</name><argument_list pos:start="31:19" pos:end="31:30">(<argument pos:start="31:20" pos:end="31:23"><expr pos:start="31:20" pos:end="31:23"><name pos:start="31:20" pos:end="31:23">insn</name></expr></argument>, <argument pos:start="31:26" pos:end="31:26"><expr pos:start="31:26" pos:end="31:26"><literal type="number" pos:start="31:26" pos:end="31:26">5</literal></expr></argument>, <argument pos:start="31:29" pos:end="31:29"><expr pos:start="31:29" pos:end="31:29"><literal type="number" pos:start="31:29" pos:end="31:29">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:31"><expr pos:start="33:5" pos:end="33:30"><name pos:start="33:5" pos:end="33:6">rd</name> <operator pos:start="33:8" pos:end="33:8">=</operator> <call pos:start="33:10" pos:end="33:30"><name pos:start="33:10" pos:end="33:18">extract32</name><argument_list pos:start="33:19" pos:end="33:30">(<argument pos:start="33:20" pos:end="33:23"><expr pos:start="33:20" pos:end="33:23"><name pos:start="33:20" pos:end="33:23">insn</name></expr></argument>, <argument pos:start="33:26" pos:end="33:26"><expr pos:start="33:26" pos:end="33:26"><literal type="number" pos:start="33:26" pos:end="33:26">0</literal></expr></argument>, <argument pos:start="33:29" pos:end="33:29"><expr pos:start="33:29" pos:end="33:29"><literal type="number" pos:start="33:29" pos:end="33:29">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="37:5" pos:end="47:5"><if pos:start="37:5" pos:end="47:5">if <condition pos:start="37:8" pos:end="37:17">(<expr pos:start="37:9" pos:end="37:16"><name pos:start="37:9" pos:end="37:10">rd</name> <operator pos:start="37:12" pos:end="37:13">==</operator> <literal type="number" pos:start="37:15" pos:end="37:16">31</literal></expr>)</condition> <block pos:start="37:19" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:15">

        <comment type="block" pos:start="39:9" pos:end="43:11">/* silly no-op write; until we use movcond we must special-case

         * this to avoid a dead temporary across basic blocks.

         */</comment>

        <return pos:start="45:9" pos:end="45:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:28"><expr pos:start="51:5" pos:end="51:27"><name pos:start="51:5" pos:end="51:10">tcg_rd</name> <operator pos:start="51:12" pos:end="51:12">=</operator> <call pos:start="51:14" pos:end="51:27"><name pos:start="51:14" pos:end="51:20">cpu_reg</name><argument_list pos:start="51:21" pos:end="51:27">(<argument pos:start="51:22" pos:end="51:22"><expr pos:start="51:22" pos:end="51:22"><name pos:start="51:22" pos:end="51:22">s</name></expr></argument>, <argument pos:start="51:25" pos:end="51:26"><expr pos:start="51:25" pos:end="51:26"><name pos:start="51:25" pos:end="51:26">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="55:5" pos:end="121:5"><if pos:start="55:5" pos:end="61:5">if <condition pos:start="55:8" pos:end="55:21">(<expr pos:start="55:9" pos:end="55:20"><name pos:start="55:9" pos:end="55:12">cond</name> <operator pos:start="55:14" pos:end="55:15">&gt;=</operator> <literal type="number" pos:start="55:17" pos:end="55:20">0x0e</literal></expr>)</condition> <block pos:start="55:23" pos:end="61:5">{<block_content pos:start="57:9" pos:end="59:41"> <comment type="block" pos:start="55:25" pos:end="55:48">/* condition "always" */</comment>

        <expr_stmt pos:start="57:9" pos:end="57:42"><expr pos:start="57:9" pos:end="57:41"><name pos:start="57:9" pos:end="57:15">tcg_src</name> <operator pos:start="57:17" pos:end="57:17">=</operator> <call pos:start="57:19" pos:end="57:41"><name pos:start="57:19" pos:end="57:30">read_cpu_reg</name><argument_list pos:start="57:31" pos:end="57:41">(<argument pos:start="57:32" pos:end="57:32"><expr pos:start="57:32" pos:end="57:32"><name pos:start="57:32" pos:end="57:32">s</name></expr></argument>, <argument pos:start="57:35" pos:end="57:36"><expr pos:start="57:35" pos:end="57:36"><name pos:start="57:35" pos:end="57:36">rn</name></expr></argument>, <argument pos:start="57:39" pos:end="57:40"><expr pos:start="57:39" pos:end="57:40"><name pos:start="57:39" pos:end="57:40">sf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:41"><expr pos:start="59:9" pos:end="59:40"><call pos:start="59:9" pos:end="59:40"><name pos:start="59:9" pos:end="59:23">tcg_gen_mov_i64</name><argument_list pos:start="59:24" pos:end="59:40">(<argument pos:start="59:25" pos:end="59:30"><expr pos:start="59:25" pos:end="59:30"><name pos:start="59:25" pos:end="59:30">tcg_rd</name></expr></argument>, <argument pos:start="59:33" pos:end="59:39"><expr pos:start="59:33" pos:end="59:39"><name pos:start="59:33" pos:end="59:39">tcg_src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="61:7" pos:end="121:5">else <block pos:start="61:12" pos:end="121:5">{<block_content pos:start="69:9" pos:end="119:38">

        <comment type="block" pos:start="63:9" pos:end="67:11">/* OPTME: we could use movcond here, at the cost of duplicating

         * a lot of the arm_gen_test_cc() logic.

         */</comment>

        <decl_stmt pos:start="69:9" pos:end="69:42"><decl pos:start="69:9" pos:end="69:41"><type pos:start="69:9" pos:end="69:11"><name pos:start="69:9" pos:end="69:11">int</name></type> <name pos:start="69:13" pos:end="69:23">label_match</name> <init pos:start="69:25" pos:end="69:41">= <expr pos:start="69:27" pos:end="69:41"><call pos:start="69:27" pos:end="69:41"><name pos:start="69:27" pos:end="69:39">gen_new_label</name><argument_list pos:start="69:40" pos:end="69:41">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="71:9" pos:end="71:45"><decl pos:start="71:9" pos:end="71:44"><type pos:start="71:9" pos:end="71:11"><name pos:start="71:9" pos:end="71:11">int</name></type> <name pos:start="71:13" pos:end="71:26">label_continue</name> <init pos:start="71:28" pos:end="71:44">= <expr pos:start="71:30" pos:end="71:44"><call pos:start="71:30" pos:end="71:44"><name pos:start="71:30" pos:end="71:42">gen_new_label</name><argument_list pos:start="71:43" pos:end="71:44">()</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:43"><expr pos:start="75:9" pos:end="75:42"><call pos:start="75:9" pos:end="75:42"><name pos:start="75:9" pos:end="75:23">arm_gen_test_cc</name><argument_list pos:start="75:24" pos:end="75:42">(<argument pos:start="75:25" pos:end="75:28"><expr pos:start="75:25" pos:end="75:28"><name pos:start="75:25" pos:end="75:28">cond</name></expr></argument>, <argument pos:start="75:31" pos:end="75:41"><expr pos:start="75:31" pos:end="75:41"><name pos:start="75:31" pos:end="75:41">label_match</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="77:9" pos:end="77:22">/* nomatch: */</comment>

        <expr_stmt pos:start="79:9" pos:end="79:33"><expr pos:start="79:9" pos:end="79:32"><name pos:start="79:9" pos:end="79:15">tcg_src</name> <operator pos:start="79:17" pos:end="79:17">=</operator> <call pos:start="79:19" pos:end="79:32"><name pos:start="79:19" pos:end="79:25">cpu_reg</name><argument_list pos:start="79:26" pos:end="79:32">(<argument pos:start="79:27" pos:end="79:27"><expr pos:start="79:27" pos:end="79:27"><name pos:start="79:27" pos:end="79:27">s</name></expr></argument>, <argument pos:start="79:30" pos:end="79:31"><expr pos:start="79:30" pos:end="79:31"><name pos:start="79:30" pos:end="79:31">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="83:9" pos:end="99:9"><if pos:start="83:9" pos:end="87:9">if <condition pos:start="83:12" pos:end="83:33">(<expr pos:start="83:13" pos:end="83:32"><name pos:start="83:13" pos:end="83:20">else_inv</name> <operator pos:start="83:22" pos:end="83:23">&amp;&amp;</operator> <name pos:start="83:25" pos:end="83:32">else_inc</name></expr>)</condition> <block pos:start="83:35" pos:end="87:9">{<block_content pos:start="85:13" pos:end="85:45">

            <expr_stmt pos:start="85:13" pos:end="85:45"><expr pos:start="85:13" pos:end="85:44"><call pos:start="85:13" pos:end="85:44"><name pos:start="85:13" pos:end="85:27">tcg_gen_neg_i64</name><argument_list pos:start="85:28" pos:end="85:44">(<argument pos:start="85:29" pos:end="85:34"><expr pos:start="85:29" pos:end="85:34"><name pos:start="85:29" pos:end="85:34">tcg_rd</name></expr></argument>, <argument pos:start="85:37" pos:end="85:43"><expr pos:start="85:37" pos:end="85:43"><name pos:start="85:37" pos:end="85:43">tcg_src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="87:11" pos:end="91:9">else if <condition pos:start="87:19" pos:end="87:28">(<expr pos:start="87:20" pos:end="87:27"><name pos:start="87:20" pos:end="87:27">else_inv</name></expr>)</condition> <block pos:start="87:30" pos:end="91:9">{<block_content pos:start="89:13" pos:end="89:45">

            <expr_stmt pos:start="89:13" pos:end="89:45"><expr pos:start="89:13" pos:end="89:44"><call pos:start="89:13" pos:end="89:44"><name pos:start="89:13" pos:end="89:27">tcg_gen_not_i64</name><argument_list pos:start="89:28" pos:end="89:44">(<argument pos:start="89:29" pos:end="89:34"><expr pos:start="89:29" pos:end="89:34"><name pos:start="89:29" pos:end="89:34">tcg_rd</name></expr></argument>, <argument pos:start="89:37" pos:end="89:43"><expr pos:start="89:37" pos:end="89:43"><name pos:start="89:37" pos:end="89:43">tcg_src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="91:11" pos:end="95:9">else if <condition pos:start="91:19" pos:end="91:28">(<expr pos:start="91:20" pos:end="91:27"><name pos:start="91:20" pos:end="91:27">else_inc</name></expr>)</condition> <block pos:start="91:30" pos:end="95:9">{<block_content pos:start="93:13" pos:end="93:49">

            <expr_stmt pos:start="93:13" pos:end="93:49"><expr pos:start="93:13" pos:end="93:48"><call pos:start="93:13" pos:end="93:48"><name pos:start="93:13" pos:end="93:28">tcg_gen_addi_i64</name><argument_list pos:start="93:29" pos:end="93:48">(<argument pos:start="93:30" pos:end="93:35"><expr pos:start="93:30" pos:end="93:35"><name pos:start="93:30" pos:end="93:35">tcg_rd</name></expr></argument>, <argument pos:start="93:38" pos:end="93:44"><expr pos:start="93:38" pos:end="93:44"><name pos:start="93:38" pos:end="93:44">tcg_src</name></expr></argument>, <argument pos:start="93:47" pos:end="93:47"><expr pos:start="93:47" pos:end="93:47"><literal type="number" pos:start="93:47" pos:end="93:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="95:11" pos:end="99:9">else <block pos:start="95:16" pos:end="99:9">{<block_content pos:start="97:13" pos:end="97:45">

            <expr_stmt pos:start="97:13" pos:end="97:45"><expr pos:start="97:13" pos:end="97:44"><call pos:start="97:13" pos:end="97:44"><name pos:start="97:13" pos:end="97:27">tcg_gen_mov_i64</name><argument_list pos:start="97:28" pos:end="97:44">(<argument pos:start="97:29" pos:end="97:34"><expr pos:start="97:29" pos:end="97:34"><name pos:start="97:29" pos:end="97:34">tcg_rd</name></expr></argument>, <argument pos:start="97:37" pos:end="97:43"><expr pos:start="97:37" pos:end="97:43"><name pos:start="97:37" pos:end="97:43">tcg_src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="101:9" pos:end="105:9"><if pos:start="101:9" pos:end="105:9">if <condition pos:start="101:12" pos:end="101:16">(<expr pos:start="101:13" pos:end="101:15"><operator pos:start="101:13" pos:end="101:13">!</operator><name pos:start="101:14" pos:end="101:15">sf</name></expr>)</condition> <block pos:start="101:18" pos:end="105:9">{<block_content pos:start="103:13" pos:end="103:47">

            <expr_stmt pos:start="103:13" pos:end="103:47"><expr pos:start="103:13" pos:end="103:46"><call pos:start="103:13" pos:end="103:46"><name pos:start="103:13" pos:end="103:30">tcg_gen_ext32u_i64</name><argument_list pos:start="103:31" pos:end="103:46">(<argument pos:start="103:32" pos:end="103:37"><expr pos:start="103:32" pos:end="103:37"><name pos:start="103:32" pos:end="103:37">tcg_rd</name></expr></argument>, <argument pos:start="103:40" pos:end="103:45"><expr pos:start="103:40" pos:end="103:45"><name pos:start="103:40" pos:end="103:45">tcg_rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:35"><expr pos:start="107:9" pos:end="107:34"><call pos:start="107:9" pos:end="107:34"><name pos:start="107:9" pos:end="107:18">tcg_gen_br</name><argument_list pos:start="107:19" pos:end="107:34">(<argument pos:start="107:20" pos:end="107:33"><expr pos:start="107:20" pos:end="107:33"><name pos:start="107:20" pos:end="107:33">label_continue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="109:9" pos:end="109:20">/* match: */</comment>

        <expr_stmt pos:start="111:9" pos:end="111:35"><expr pos:start="111:9" pos:end="111:34"><call pos:start="111:9" pos:end="111:34"><name pos:start="111:9" pos:end="111:21">gen_set_label</name><argument_list pos:start="111:22" pos:end="111:34">(<argument pos:start="111:23" pos:end="111:33"><expr pos:start="111:23" pos:end="111:33"><name pos:start="111:23" pos:end="111:33">label_match</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:42"><expr pos:start="113:9" pos:end="113:41"><name pos:start="113:9" pos:end="113:15">tcg_src</name> <operator pos:start="113:17" pos:end="113:17">=</operator> <call pos:start="113:19" pos:end="113:41"><name pos:start="113:19" pos:end="113:30">read_cpu_reg</name><argument_list pos:start="113:31" pos:end="113:41">(<argument pos:start="113:32" pos:end="113:32"><expr pos:start="113:32" pos:end="113:32"><name pos:start="113:32" pos:end="113:32">s</name></expr></argument>, <argument pos:start="113:35" pos:end="113:36"><expr pos:start="113:35" pos:end="113:36"><name pos:start="113:35" pos:end="113:36">rn</name></expr></argument>, <argument pos:start="113:39" pos:end="113:40"><expr pos:start="113:39" pos:end="113:40"><name pos:start="113:39" pos:end="113:40">sf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:41"><expr pos:start="115:9" pos:end="115:40"><call pos:start="115:9" pos:end="115:40"><name pos:start="115:9" pos:end="115:23">tcg_gen_mov_i64</name><argument_list pos:start="115:24" pos:end="115:40">(<argument pos:start="115:25" pos:end="115:30"><expr pos:start="115:25" pos:end="115:30"><name pos:start="115:25" pos:end="115:30">tcg_rd</name></expr></argument>, <argument pos:start="115:33" pos:end="115:39"><expr pos:start="115:33" pos:end="115:39"><name pos:start="115:33" pos:end="115:39">tcg_src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="117:9" pos:end="117:23">/* continue: */</comment>

        <expr_stmt pos:start="119:9" pos:end="119:38"><expr pos:start="119:9" pos:end="119:37"><call pos:start="119:9" pos:end="119:37"><name pos:start="119:9" pos:end="119:21">gen_set_label</name><argument_list pos:start="119:22" pos:end="119:37">(<argument pos:start="119:23" pos:end="119:36"><expr pos:start="119:23" pos:end="119:36"><name pos:start="119:23" pos:end="119:36">label_continue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
