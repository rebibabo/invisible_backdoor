<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20834.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">do_token_in</name><parameter_list pos:start="1:23" pos:end="1:50">(<parameter pos:start="1:24" pos:end="1:35"><decl pos:start="1:24" pos:end="1:35"><type pos:start="1:24" pos:end="1:35"><name pos:start="1:24" pos:end="1:32">USBDevice</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:35">s</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:49"><decl pos:start="1:38" pos:end="1:49"><type pos:start="1:38" pos:end="1:49"><name pos:start="1:38" pos:end="1:46">USBPacket</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">p</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="95:1">{<block_content pos:start="5:5" pos:end="93:5">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:15">request</name></decl>, <decl pos:start="5:18" pos:end="5:22"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:18" pos:end="5:22">value</name></decl>, <decl pos:start="5:25" pos:end="5:29"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:25" pos:end="5:29">index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name> <init pos:start="7:13" pos:end="7:15">= <expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:42"><if pos:start="11:5" pos:end="13:42">if <condition pos:start="11:8" pos:end="11:22">(<expr pos:start="11:9" pos:end="11:21"><name pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:9">p</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:16">devep</name></name> <operator pos:start="11:18" pos:end="11:19">!=</operator> <literal type="number" pos:start="11:21" pos:end="11:21">0</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:42"><block_content pos:start="13:9" pos:end="13:42">

        <return pos:start="13:9" pos:end="13:42">return <expr pos:start="13:16" pos:end="13:41"><call pos:start="13:16" pos:end="13:41"><name pos:start="13:16" pos:end="13:35"><name pos:start="13:16" pos:end="13:16">s</name><operator pos:start="13:17" pos:end="13:18">-&gt;</operator><name pos:start="13:19" pos:end="13:22">info</name><operator pos:start="13:23" pos:end="13:24">-&gt;</operator><name pos:start="13:25" pos:end="13:35">handle_data</name></name><argument_list pos:start="13:36" pos:end="13:41">(<argument pos:start="13:37" pos:end="13:37"><expr pos:start="13:37" pos:end="13:37"><name pos:start="13:37" pos:end="13:37">s</name></expr></argument>, <argument pos:start="13:40" pos:end="13:40"><expr pos:start="13:40" pos:end="13:40"><name pos:start="13:40" pos:end="13:40">p</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:55"><expr pos:start="17:5" pos:end="17:54"><name pos:start="17:5" pos:end="17:11">request</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <operator pos:start="17:15" pos:end="17:15">(</operator><name pos:start="17:16" pos:end="17:30"><name pos:start="17:16" pos:end="17:16">s</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:27">setup_buf</name><index pos:start="17:28" pos:end="17:30">[<expr pos:start="17:29" pos:end="17:29"><literal type="number" pos:start="17:29" pos:end="17:29">0</literal></expr>]</index></name> <operator pos:start="17:32" pos:end="17:33">&lt;&lt;</operator> <literal type="number" pos:start="17:35" pos:end="17:35">8</literal><operator pos:start="17:36" pos:end="17:36">)</operator> <operator pos:start="17:38" pos:end="17:38">|</operator> <name pos:start="17:40" pos:end="17:54"><name pos:start="17:40" pos:end="17:40">s</name><operator pos:start="17:41" pos:end="17:42">-&gt;</operator><name pos:start="17:43" pos:end="17:51">setup_buf</name><index pos:start="17:52" pos:end="17:54">[<expr pos:start="17:53" pos:end="17:53"><literal type="number" pos:start="17:53" pos:end="17:53">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:55"><expr pos:start="19:5" pos:end="19:54"><name pos:start="19:5" pos:end="19:9">value</name>   <operator pos:start="19:13" pos:end="19:13">=</operator> <operator pos:start="19:15" pos:end="19:15">(</operator><name pos:start="19:16" pos:end="19:30"><name pos:start="19:16" pos:end="19:16">s</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:27">setup_buf</name><index pos:start="19:28" pos:end="19:30">[<expr pos:start="19:29" pos:end="19:29"><literal type="number" pos:start="19:29" pos:end="19:29">3</literal></expr>]</index></name> <operator pos:start="19:32" pos:end="19:33">&lt;&lt;</operator> <literal type="number" pos:start="19:35" pos:end="19:35">8</literal><operator pos:start="19:36" pos:end="19:36">)</operator> <operator pos:start="19:38" pos:end="19:38">|</operator> <name pos:start="19:40" pos:end="19:54"><name pos:start="19:40" pos:end="19:40">s</name><operator pos:start="19:41" pos:end="19:42">-&gt;</operator><name pos:start="19:43" pos:end="19:51">setup_buf</name><index pos:start="19:52" pos:end="19:54">[<expr pos:start="19:53" pos:end="19:53"><literal type="number" pos:start="19:53" pos:end="19:53">2</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:55"><expr pos:start="21:5" pos:end="21:54"><name pos:start="21:5" pos:end="21:9">index</name>   <operator pos:start="21:13" pos:end="21:13">=</operator> <operator pos:start="21:15" pos:end="21:15">(</operator><name pos:start="21:16" pos:end="21:30"><name pos:start="21:16" pos:end="21:16">s</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:27">setup_buf</name><index pos:start="21:28" pos:end="21:30">[<expr pos:start="21:29" pos:end="21:29"><literal type="number" pos:start="21:29" pos:end="21:29">5</literal></expr>]</index></name> <operator pos:start="21:32" pos:end="21:33">&lt;&lt;</operator> <literal type="number" pos:start="21:35" pos:end="21:35">8</literal><operator pos:start="21:36" pos:end="21:36">)</operator> <operator pos:start="21:38" pos:end="21:38">|</operator> <name pos:start="21:40" pos:end="21:54"><name pos:start="21:40" pos:end="21:40">s</name><operator pos:start="21:41" pos:end="21:42">-&gt;</operator><name pos:start="21:43" pos:end="21:51">setup_buf</name><index pos:start="21:52" pos:end="21:54">[<expr pos:start="21:53" pos:end="21:53"><literal type="number" pos:start="21:53" pos:end="21:53">4</literal></expr>]</index></name></expr>;</expr_stmt>

 

    <switch pos:start="25:5" pos:end="93:5">switch<condition pos:start="25:11" pos:end="25:26">(<expr pos:start="25:12" pos:end="25:25"><name pos:start="25:12" pos:end="25:25"><name pos:start="25:12" pos:end="25:12">s</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:25">setup_state</name></name></expr>)</condition> <block pos:start="25:28" pos:end="93:5">{<block_content pos:start="27:5" pos:end="91:29">

    <case pos:start="27:5" pos:end="27:25">case <expr pos:start="27:10" pos:end="27:24"><name pos:start="27:10" pos:end="27:24">SETUP_STATE_ACK</name></expr>:</case>

        <if_stmt pos:start="29:9" pos:end="49:9"><if pos:start="29:9" pos:end="49:9">if <condition pos:start="29:12" pos:end="29:44">(<expr pos:start="29:13" pos:end="29:43"><operator pos:start="29:13" pos:end="29:13">!</operator><operator pos:start="29:14" pos:end="29:14">(</operator><name pos:start="29:15" pos:end="29:29"><name pos:start="29:15" pos:end="29:15">s</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:26">setup_buf</name><index pos:start="29:27" pos:end="29:29">[<expr pos:start="29:28" pos:end="29:28"><literal type="number" pos:start="29:28" pos:end="29:28">0</literal></expr>]</index></name> <operator pos:start="29:31" pos:end="29:31">&amp;</operator> <name pos:start="29:33" pos:end="29:42">USB_DIR_IN</name><operator pos:start="29:43" pos:end="29:43">)</operator></expr>)</condition> <block pos:start="29:46" pos:end="49:9">{<block_content pos:start="31:13" pos:end="47:23">

            <expr_stmt pos:start="31:13" pos:end="33:69"><expr pos:start="31:13" pos:end="33:68"><name pos:start="31:13" pos:end="31:15">ret</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <call pos:start="31:19" pos:end="33:68"><name pos:start="31:19" pos:end="31:41"><name pos:start="31:19" pos:end="31:19">s</name><operator pos:start="31:20" pos:end="31:21">-&gt;</operator><name pos:start="31:22" pos:end="31:25">info</name><operator pos:start="31:26" pos:end="31:27">-&gt;</operator><name pos:start="31:28" pos:end="31:41">handle_control</name></name><argument_list pos:start="31:42" pos:end="33:68">(<argument pos:start="31:43" pos:end="31:43"><expr pos:start="31:43" pos:end="31:43"><name pos:start="31:43" pos:end="31:43">s</name></expr></argument>, <argument pos:start="31:46" pos:end="31:46"><expr pos:start="31:46" pos:end="31:46"><name pos:start="31:46" pos:end="31:46">p</name></expr></argument>, <argument pos:start="31:49" pos:end="31:55"><expr pos:start="31:49" pos:end="31:55"><name pos:start="31:49" pos:end="31:55">request</name></expr></argument>, <argument pos:start="31:58" pos:end="31:62"><expr pos:start="31:58" pos:end="31:62"><name pos:start="31:58" pos:end="31:62">value</name></expr></argument>, <argument pos:start="31:65" pos:end="31:69"><expr pos:start="31:65" pos:end="31:69"><name pos:start="31:65" pos:end="31:69">index</name></expr></argument>,

                                          <argument pos:start="33:43" pos:end="33:54"><expr pos:start="33:43" pos:end="33:54"><name pos:start="33:43" pos:end="33:54"><name pos:start="33:43" pos:end="33:43">s</name><operator pos:start="33:44" pos:end="33:45">-&gt;</operator><name pos:start="33:46" pos:end="33:54">setup_len</name></name></expr></argument>, <argument pos:start="33:57" pos:end="33:67"><expr pos:start="33:57" pos:end="33:67"><name pos:start="33:57" pos:end="33:67"><name pos:start="33:57" pos:end="33:57">s</name><operator pos:start="33:58" pos:end="33:59">-&gt;</operator><name pos:start="33:60" pos:end="33:67">data_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="35:13" pos:end="39:13"><if pos:start="35:13" pos:end="39:13">if <condition pos:start="35:16" pos:end="35:37">(<expr pos:start="35:17" pos:end="35:36"><name pos:start="35:17" pos:end="35:19">ret</name> <operator pos:start="35:21" pos:end="35:22">==</operator> <name pos:start="35:24" pos:end="35:36">USB_RET_ASYNC</name></expr>)</condition> <block pos:start="35:39" pos:end="39:13">{<block_content pos:start="37:17" pos:end="37:37">

                <return pos:start="37:17" pos:end="37:37">return <expr pos:start="37:24" pos:end="37:36"><name pos:start="37:24" pos:end="37:36">USB_RET_ASYNC</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:46"><expr pos:start="41:13" pos:end="41:45"><name pos:start="41:13" pos:end="41:26"><name pos:start="41:13" pos:end="41:13">s</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:26">setup_state</name></name> <operator pos:start="41:28" pos:end="41:28">=</operator> <name pos:start="41:30" pos:end="41:45">SETUP_STATE_IDLE</name></expr>;</expr_stmt>

            <if_stmt pos:start="43:13" pos:end="45:25"><if pos:start="43:13" pos:end="45:25">if <condition pos:start="43:16" pos:end="43:24">(<expr pos:start="43:17" pos:end="43:23"><name pos:start="43:17" pos:end="43:19">ret</name> <operator pos:start="43:21" pos:end="43:21">&gt;</operator> <literal type="number" pos:start="43:23" pos:end="43:23">0</literal></expr>)</condition><block type="pseudo" pos:start="45:17" pos:end="45:25"><block_content pos:start="45:17" pos:end="45:25">

                <return pos:start="45:17" pos:end="45:25">return <expr pos:start="45:24" pos:end="45:24"><literal type="number" pos:start="45:24" pos:end="45:24">0</literal></expr>;</return></block_content></block></if></if_stmt>

            <return pos:start="47:13" pos:end="47:23">return <expr pos:start="47:20" pos:end="47:22"><name pos:start="47:20" pos:end="47:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="53:9" pos:end="53:27">/* return 0 byte */</comment>

        <return pos:start="55:9" pos:end="55:17">return <expr pos:start="55:16" pos:end="55:16"><literal type="number" pos:start="55:16" pos:end="55:16">0</literal></expr>;</return>



    <case pos:start="59:5" pos:end="59:26">case <expr pos:start="59:10" pos:end="59:25"><name pos:start="59:10" pos:end="59:25">SETUP_STATE_DATA</name></expr>:</case>

        <if_stmt pos:start="61:9" pos:end="79:9"><if pos:start="61:9" pos:end="79:9">if <condition pos:start="61:12" pos:end="61:41">(<expr pos:start="61:13" pos:end="61:40"><name pos:start="61:13" pos:end="61:27"><name pos:start="61:13" pos:end="61:13">s</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:24">setup_buf</name><index pos:start="61:25" pos:end="61:27">[<expr pos:start="61:26" pos:end="61:26"><literal type="number" pos:start="61:26" pos:end="61:26">0</literal></expr>]</index></name> <operator pos:start="61:29" pos:end="61:29">&amp;</operator> <name pos:start="61:31" pos:end="61:40">USB_DIR_IN</name></expr>)</condition> <block pos:start="61:43" pos:end="79:9">{<block_content pos:start="63:13" pos:end="77:23">

            <decl_stmt pos:start="63:13" pos:end="63:52"><decl pos:start="63:13" pos:end="63:51"><type pos:start="63:13" pos:end="63:15"><name pos:start="63:13" pos:end="63:15">int</name></type> <name pos:start="63:17" pos:end="63:19">len</name> <init pos:start="63:21" pos:end="63:51">= <expr pos:start="63:23" pos:end="63:51"><name pos:start="63:23" pos:end="63:34"><name pos:start="63:23" pos:end="63:23">s</name><operator pos:start="63:24" pos:end="63:25">-&gt;</operator><name pos:start="63:26" pos:end="63:34">setup_len</name></name> <operator pos:start="63:36" pos:end="63:36">-</operator> <name pos:start="63:38" pos:end="63:51"><name pos:start="63:38" pos:end="63:38">s</name><operator pos:start="63:39" pos:end="63:40">-&gt;</operator><name pos:start="63:41" pos:end="63:51">setup_index</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="65:13" pos:end="67:29"><if pos:start="65:13" pos:end="67:29">if <condition pos:start="65:16" pos:end="65:29">(<expr pos:start="65:17" pos:end="65:28"><name pos:start="65:17" pos:end="65:19">len</name> <operator pos:start="65:21" pos:end="65:21">&gt;</operator> <name pos:start="65:23" pos:end="65:28"><name pos:start="65:23" pos:end="65:23">p</name><operator pos:start="65:24" pos:end="65:25">-&gt;</operator><name pos:start="65:26" pos:end="65:28">len</name></name></expr>)</condition><block type="pseudo" pos:start="67:17" pos:end="67:29"><block_content pos:start="67:17" pos:end="67:29">

                <expr_stmt pos:start="67:17" pos:end="67:29"><expr pos:start="67:17" pos:end="67:28"><name pos:start="67:17" pos:end="67:19">len</name> <operator pos:start="67:21" pos:end="67:21">=</operator> <name pos:start="67:23" pos:end="67:28"><name pos:start="67:23" pos:end="67:23">p</name><operator pos:start="67:24" pos:end="67:25">-&gt;</operator><name pos:start="67:26" pos:end="67:28">len</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:63"><expr pos:start="69:13" pos:end="69:62"><call pos:start="69:13" pos:end="69:62"><name pos:start="69:13" pos:end="69:18">memcpy</name><argument_list pos:start="69:19" pos:end="69:62">(<argument pos:start="69:20" pos:end="69:26"><expr pos:start="69:20" pos:end="69:26"><name pos:start="69:20" pos:end="69:26"><name pos:start="69:20" pos:end="69:20">p</name><operator pos:start="69:21" pos:end="69:22">-&gt;</operator><name pos:start="69:23" pos:end="69:26">data</name></name></expr></argument>, <argument pos:start="69:29" pos:end="69:56"><expr pos:start="69:29" pos:end="69:56"><name pos:start="69:29" pos:end="69:39"><name pos:start="69:29" pos:end="69:29">s</name><operator pos:start="69:30" pos:end="69:31">-&gt;</operator><name pos:start="69:32" pos:end="69:39">data_buf</name></name> <operator pos:start="69:41" pos:end="69:41">+</operator> <name pos:start="69:43" pos:end="69:56"><name pos:start="69:43" pos:end="69:43">s</name><operator pos:start="69:44" pos:end="69:45">-&gt;</operator><name pos:start="69:46" pos:end="69:56">setup_index</name></name></expr></argument>, <argument pos:start="69:59" pos:end="69:61"><expr pos:start="69:59" pos:end="69:61"><name pos:start="69:59" pos:end="69:61">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:34"><expr pos:start="71:13" pos:end="71:33"><name pos:start="71:13" pos:end="71:26"><name pos:start="71:13" pos:end="71:13">s</name><operator pos:start="71:14" pos:end="71:15">-&gt;</operator><name pos:start="71:16" pos:end="71:26">setup_index</name></name> <operator pos:start="71:28" pos:end="71:29">+=</operator> <name pos:start="71:31" pos:end="71:33">len</name></expr>;</expr_stmt>

            <if_stmt pos:start="73:13" pos:end="75:49"><if pos:start="73:13" pos:end="75:49">if <condition pos:start="73:16" pos:end="73:47">(<expr pos:start="73:17" pos:end="73:46"><name pos:start="73:17" pos:end="73:30"><name pos:start="73:17" pos:end="73:17">s</name><operator pos:start="73:18" pos:end="73:19">-&gt;</operator><name pos:start="73:20" pos:end="73:30">setup_index</name></name> <operator pos:start="73:32" pos:end="73:33">&gt;=</operator> <name pos:start="73:35" pos:end="73:46"><name pos:start="73:35" pos:end="73:35">s</name><operator pos:start="73:36" pos:end="73:37">-&gt;</operator><name pos:start="73:38" pos:end="73:46">setup_len</name></name></expr>)</condition><block type="pseudo" pos:start="75:17" pos:end="75:49"><block_content pos:start="75:17" pos:end="75:49">

                <expr_stmt pos:start="75:17" pos:end="75:49"><expr pos:start="75:17" pos:end="75:48"><name pos:start="75:17" pos:end="75:30"><name pos:start="75:17" pos:end="75:17">s</name><operator pos:start="75:18" pos:end="75:19">-&gt;</operator><name pos:start="75:20" pos:end="75:30">setup_state</name></name> <operator pos:start="75:32" pos:end="75:32">=</operator> <name pos:start="75:34" pos:end="75:48">SETUP_STATE_ACK</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <return pos:start="77:13" pos:end="77:23">return <expr pos:start="77:20" pos:end="77:22"><name pos:start="77:20" pos:end="77:22">len</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="83:9" pos:end="83:42"><expr pos:start="83:9" pos:end="83:41"><name pos:start="83:9" pos:end="83:22"><name pos:start="83:9" pos:end="83:9">s</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:22">setup_state</name></name> <operator pos:start="83:24" pos:end="83:24">=</operator> <name pos:start="83:26" pos:end="83:41">SETUP_STATE_IDLE</name></expr>;</expr_stmt>

        <return pos:start="85:9" pos:end="85:29">return <expr pos:start="85:16" pos:end="85:28"><name pos:start="85:16" pos:end="85:28">USB_RET_STALL</name></expr>;</return>



    <default pos:start="89:5" pos:end="89:12">default:</default>

        <return pos:start="91:9" pos:end="91:29">return <expr pos:start="91:16" pos:end="91:28"><name pos:start="91:16" pos:end="91:28">USB_RET_STALL</name></expr>;</return>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
