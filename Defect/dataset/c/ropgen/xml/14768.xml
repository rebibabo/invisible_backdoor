<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14768.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">virtio_net_device_exit</name><parameter_list pos:start="1:34" pos:end="1:52">(<parameter pos:start="1:35" pos:end="1:51"><decl pos:start="1:35" pos:end="1:51"><type pos:start="1:35" pos:end="1:47"><name pos:start="1:35" pos:end="1:45">DeviceState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:51">qdev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="85:1">{<block_content pos:start="5:5" pos:end="83:13">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">VirtIONet</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">n</name> <init pos:start="5:18" pos:end="5:35">= <expr pos:start="5:20" pos:end="5:35"><call pos:start="5:20" pos:end="5:35"><name pos:start="5:20" pos:end="5:29">VIRTIO_NET</name><argument_list pos:start="5:30" pos:end="5:35">(<argument pos:start="5:31" pos:end="5:34"><expr pos:start="5:31" pos:end="5:34"><name pos:start="5:31" pos:end="5:34">qdev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:44"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">VirtIODevice</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:22">vdev</name> <init pos:start="7:24" pos:end="7:44">= <expr pos:start="7:26" pos:end="7:44"><call pos:start="7:26" pos:end="7:44"><name pos:start="7:26" pos:end="7:38">VIRTIO_DEVICE</name><argument_list pos:start="7:39" pos:end="7:44">(<argument pos:start="7:40" pos:end="7:43"><expr pos:start="7:40" pos:end="7:43"><name pos:start="7:40" pos:end="7:43">qdev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:54">/* This will stop vhost backend if appropriate. */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:35"><expr pos:start="15:5" pos:end="15:34"><call pos:start="15:5" pos:end="15:34"><name pos:start="15:5" pos:end="15:25">virtio_net_set_status</name><argument_list pos:start="15:26" pos:end="15:34">(<argument pos:start="15:27" pos:end="15:30"><expr pos:start="15:27" pos:end="15:30"><name pos:start="15:27" pos:end="15:30">vdev</name></expr></argument>, <argument pos:start="15:33" pos:end="15:33"><expr pos:start="15:33" pos:end="15:33"><literal type="number" pos:start="15:33" pos:end="15:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:45"><expr pos:start="19:5" pos:end="19:44"><call pos:start="19:5" pos:end="19:44"><name pos:start="19:5" pos:end="19:21">unregister_savevm</name><argument_list pos:start="19:22" pos:end="19:44">(<argument pos:start="19:23" pos:end="19:26"><expr pos:start="19:23" pos:end="19:26"><name pos:start="19:23" pos:end="19:26">qdev</name></expr></argument>, <argument pos:start="19:29" pos:end="19:40"><expr pos:start="19:29" pos:end="19:40"><literal type="string" pos:start="19:29" pos:end="19:40">"virtio-net"</literal></expr></argument>, <argument pos:start="19:43" pos:end="19:43"><expr pos:start="19:43" pos:end="19:43"><name pos:start="19:43" pos:end="19:43">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:26">(<expr pos:start="23:9" pos:end="23:25"><name pos:start="23:9" pos:end="23:25"><name pos:start="23:9" pos:end="23:9">n</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:25">netclient_name</name></name></expr>)</condition> <block pos:start="23:28" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:33">

        <expr_stmt pos:start="25:9" pos:end="25:34"><expr pos:start="25:9" pos:end="25:33"><call pos:start="25:9" pos:end="25:33"><name pos:start="25:9" pos:end="25:14">g_free</name><argument_list pos:start="25:15" pos:end="25:33">(<argument pos:start="25:16" pos:end="25:32"><expr pos:start="25:16" pos:end="25:32"><name pos:start="25:16" pos:end="25:32"><name pos:start="25:16" pos:end="25:16">n</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:32">netclient_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:33"><expr pos:start="27:9" pos:end="27:32"><name pos:start="27:9" pos:end="27:25"><name pos:start="27:9" pos:end="27:9">n</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:25">netclient_name</name></name> <operator pos:start="27:27" pos:end="27:27">=</operator> <name pos:start="27:29" pos:end="27:32">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:26">(<expr pos:start="31:9" pos:end="31:25"><name pos:start="31:9" pos:end="31:25"><name pos:start="31:9" pos:end="31:9">n</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:25">netclient_type</name></name></expr>)</condition> <block pos:start="31:28" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:33">

        <expr_stmt pos:start="33:9" pos:end="33:34"><expr pos:start="33:9" pos:end="33:33"><call pos:start="33:9" pos:end="33:33"><name pos:start="33:9" pos:end="33:14">g_free</name><argument_list pos:start="33:15" pos:end="33:33">(<argument pos:start="33:16" pos:end="33:32"><expr pos:start="33:16" pos:end="33:32"><name pos:start="33:16" pos:end="33:32"><name pos:start="33:16" pos:end="33:16">n</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:32">netclient_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:33"><expr pos:start="35:9" pos:end="35:32"><name pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:9">n</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:25">netclient_type</name></name> <operator pos:start="35:27" pos:end="35:27">=</operator> <name pos:start="35:29" pos:end="35:32">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:30"><expr pos:start="41:5" pos:end="41:29"><call pos:start="41:5" pos:end="41:29"><name pos:start="41:5" pos:end="41:10">g_free</name><argument_list pos:start="41:11" pos:end="41:29">(<argument pos:start="41:12" pos:end="41:28"><expr pos:start="41:12" pos:end="41:28"><name pos:start="41:12" pos:end="41:28"><name pos:start="41:12" pos:end="41:12">n</name><operator pos:start="41:13" pos:end="41:14">-&gt;</operator><name pos:start="41:15" pos:end="41:23">mac_table</name><operator pos:start="41:24" pos:end="41:24">.</operator><name pos:start="41:25" pos:end="41:28">macs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:21"><expr pos:start="43:5" pos:end="43:20"><call pos:start="43:5" pos:end="43:20"><name pos:start="43:5" pos:end="43:10">g_free</name><argument_list pos:start="43:11" pos:end="43:20">(<argument pos:start="43:12" pos:end="43:19"><expr pos:start="43:12" pos:end="43:19"><name pos:start="43:12" pos:end="43:19"><name pos:start="43:12" pos:end="43:12">n</name><operator pos:start="43:13" pos:end="43:14">-&gt;</operator><name pos:start="43:15" pos:end="43:19">vlans</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="47:5" pos:end="71:5">for <control pos:start="47:9" pos:end="47:39">(<init pos:start="47:10" pos:end="47:15"><expr pos:start="47:10" pos:end="47:14"><name pos:start="47:10" pos:end="47:10">i</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <literal type="number" pos:start="47:14" pos:end="47:14">0</literal></expr>;</init> <condition pos:start="47:17" pos:end="47:34"><expr pos:start="47:17" pos:end="47:33"><name pos:start="47:17" pos:end="47:17">i</name> <operator pos:start="47:19" pos:end="47:19">&lt;</operator> <name pos:start="47:21" pos:end="47:33"><name pos:start="47:21" pos:end="47:21">n</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:33">max_queues</name></name></expr>;</condition> <incr pos:start="47:36" pos:end="47:38"><expr pos:start="47:36" pos:end="47:38"><name pos:start="47:36" pos:end="47:36">i</name><operator pos:start="47:37" pos:end="47:38">++</operator></expr></incr>)</control> <block pos:start="47:41" pos:end="71:5">{<block_content pos:start="49:9" pos:end="69:9">

        <decl_stmt pos:start="49:9" pos:end="49:39"><decl pos:start="49:9" pos:end="49:38"><type pos:start="49:9" pos:end="49:24"><name pos:start="49:9" pos:end="49:22">VirtIONetQueue</name> <modifier pos:start="49:24" pos:end="49:24">*</modifier></type><name pos:start="49:25" pos:end="49:25">q</name> <init pos:start="49:27" pos:end="49:38">= <expr pos:start="49:29" pos:end="49:38"><operator pos:start="49:29" pos:end="49:29">&amp;</operator><name pos:start="49:30" pos:end="49:38"><name pos:start="49:30" pos:end="49:30">n</name><operator pos:start="49:31" pos:end="49:32">-&gt;</operator><name pos:start="49:33" pos:end="49:35">vqs</name><index pos:start="49:36" pos:end="49:38">[<expr pos:start="49:37" pos:end="49:37"><name pos:start="49:37" pos:end="49:37">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="51:9" pos:end="51:58"><decl pos:start="51:9" pos:end="51:57"><type pos:start="51:9" pos:end="51:24"><name pos:start="51:9" pos:end="51:22">NetClientState</name> <modifier pos:start="51:24" pos:end="51:24">*</modifier></type><name pos:start="51:25" pos:end="51:26">nc</name> <init pos:start="51:28" pos:end="51:57">= <expr pos:start="51:30" pos:end="51:57"><call pos:start="51:30" pos:end="51:57"><name pos:start="51:30" pos:end="51:46">qemu_get_subqueue</name><argument_list pos:start="51:47" pos:end="51:57">(<argument pos:start="51:48" pos:end="51:53"><expr pos:start="51:48" pos:end="51:53"><name pos:start="51:48" pos:end="51:53"><name pos:start="51:48" pos:end="51:48">n</name><operator pos:start="51:49" pos:end="51:50">-&gt;</operator><name pos:start="51:51" pos:end="51:53">nic</name></name></expr></argument>, <argument pos:start="51:56" pos:end="51:56"><expr pos:start="51:56" pos:end="51:56"><name pos:start="51:56" pos:end="51:56">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="55:9" pos:end="55:38"><expr pos:start="55:9" pos:end="55:37"><call pos:start="55:9" pos:end="55:37"><name pos:start="55:9" pos:end="55:33">qemu_purge_queued_packets</name><argument_list pos:start="55:34" pos:end="55:37">(<argument pos:start="55:35" pos:end="55:36"><expr pos:start="55:35" pos:end="55:36"><name pos:start="55:35" pos:end="55:36">nc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="59:9" pos:end="69:9"><if pos:start="59:9" pos:end="65:9">if <condition pos:start="59:12" pos:end="59:24">(<expr pos:start="59:13" pos:end="59:23"><name pos:start="59:13" pos:end="59:23"><name pos:start="59:13" pos:end="59:13">q</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:23">tx_timer</name></name></expr>)</condition> <block pos:start="59:26" pos:end="65:9">{<block_content pos:start="61:13" pos:end="63:36">

            <expr_stmt pos:start="61:13" pos:end="61:35"><expr pos:start="61:13" pos:end="61:34"><call pos:start="61:13" pos:end="61:34"><name pos:start="61:13" pos:end="61:21">timer_del</name><argument_list pos:start="61:22" pos:end="61:34">(<argument pos:start="61:23" pos:end="61:33"><expr pos:start="61:23" pos:end="61:33"><name pos:start="61:23" pos:end="61:33"><name pos:start="61:23" pos:end="61:23">q</name><operator pos:start="61:24" pos:end="61:25">-&gt;</operator><name pos:start="61:26" pos:end="61:33">tx_timer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:36"><expr pos:start="63:13" pos:end="63:35"><call pos:start="63:13" pos:end="63:35"><name pos:start="63:13" pos:end="63:22">timer_free</name><argument_list pos:start="63:23" pos:end="63:35">(<argument pos:start="63:24" pos:end="63:34"><expr pos:start="63:24" pos:end="63:34"><name pos:start="63:24" pos:end="63:34"><name pos:start="63:24" pos:end="63:24">q</name><operator pos:start="63:25" pos:end="63:26">-&gt;</operator><name pos:start="63:27" pos:end="63:34">tx_timer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="65:11" pos:end="69:9">else if <condition pos:start="65:19" pos:end="65:28">(<expr pos:start="65:20" pos:end="65:27"><name pos:start="65:20" pos:end="65:27"><name pos:start="65:20" pos:end="65:20">q</name><operator pos:start="65:21" pos:end="65:22">-&gt;</operator><name pos:start="65:23" pos:end="65:27">tx_bh</name></name></expr>)</condition> <block pos:start="65:30" pos:end="69:9">{<block_content pos:start="67:13" pos:end="67:37">

            <expr_stmt pos:start="67:13" pos:end="67:37"><expr pos:start="67:13" pos:end="67:36"><call pos:start="67:13" pos:end="67:36"><name pos:start="67:13" pos:end="67:26">qemu_bh_delete</name><argument_list pos:start="67:27" pos:end="67:36">(<argument pos:start="67:28" pos:end="67:35"><expr pos:start="67:28" pos:end="67:35"><name pos:start="67:28" pos:end="67:35"><name pos:start="67:28" pos:end="67:28">q</name><operator pos:start="67:29" pos:end="67:30">-&gt;</operator><name pos:start="67:31" pos:end="67:35">tx_bh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="75:5" pos:end="75:19"><expr pos:start="75:5" pos:end="75:18"><call pos:start="75:5" pos:end="75:18"><name pos:start="75:5" pos:end="75:10">g_free</name><argument_list pos:start="75:11" pos:end="75:18">(<argument pos:start="75:12" pos:end="75:17"><expr pos:start="75:12" pos:end="75:17"><name pos:start="75:12" pos:end="75:17"><name pos:start="75:12" pos:end="75:12">n</name><operator pos:start="75:13" pos:end="75:14">-&gt;</operator><name pos:start="75:15" pos:end="75:17">vqs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:25"><expr pos:start="77:5" pos:end="77:24"><call pos:start="77:5" pos:end="77:24"><name pos:start="77:5" pos:end="77:16">qemu_del_nic</name><argument_list pos:start="77:17" pos:end="77:24">(<argument pos:start="77:18" pos:end="77:23"><expr pos:start="77:18" pos:end="77:23"><name pos:start="77:18" pos:end="77:23"><name pos:start="77:18" pos:end="77:18">n</name><operator pos:start="77:19" pos:end="77:20">-&gt;</operator><name pos:start="77:21" pos:end="77:23">nic</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:25"><expr pos:start="79:5" pos:end="79:24"><call pos:start="79:5" pos:end="79:24"><name pos:start="79:5" pos:end="79:18">virtio_cleanup</name><argument_list pos:start="79:19" pos:end="79:24">(<argument pos:start="79:20" pos:end="79:23"><expr pos:start="79:20" pos:end="79:23"><name pos:start="79:20" pos:end="79:23">vdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="83:5" pos:end="83:13">return <expr pos:start="83:12" pos:end="83:12"><literal type="number" pos:start="83:12" pos:end="83:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
