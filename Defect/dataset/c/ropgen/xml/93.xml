<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/93.c" pos:tabs="8"><function pos:start="1:1" pos:end="60:15"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:28">avcodec_decode_subtitle2</name><parameter_list pos:start="1:29" pos:end="3:45">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:67"><decl pos:start="1:53" pos:end="1:67"><type pos:start="1:53" pos:end="1:67"><name pos:start="1:53" pos:end="1:62">AVSubtitle</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:67">sub</name></decl></parameter>,
                             <parameter pos:start="2:30" pos:end="2:45"><decl pos:start="2:30" pos:end="2:45"><type pos:start="2:30" pos:end="2:45"><name pos:start="2:30" pos:end="2:32">int</name> <modifier pos:start="2:34" pos:end="2:34">*</modifier></type><name pos:start="2:35" pos:end="2:45">got_sub_ptr</name></decl></parameter>,
                             <parameter pos:start="3:30" pos:end="3:44"><decl pos:start="3:30" pos:end="3:44"><type pos:start="3:30" pos:end="3:44"><name pos:start="3:30" pos:end="3:37">AVPacket</name> <modifier pos:start="3:39" pos:end="3:39">*</modifier></type><name pos:start="3:40" pos:end="3:44">avpkt</name></decl></parameter>)</parameter_list>
<block pos:start="4:1" pos:end="60:15">{<block_content pos:start="5:5" pos:end="60:15">
    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:18"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:14">ret</name> <init pos:start="5:16" pos:end="5:18">= <expr pos:start="5:18" pos:end="5:18"><literal type="number" pos:start="5:18" pos:end="5:18">0</literal></expr></init></decl>;</decl_stmt>
    <if_stmt pos:start="6:5" pos:end="60:15"><if pos:start="6:5" pos:end="60:15">if <condition pos:start="6:8" pos:end="6:36">(<expr pos:start="6:9" pos:end="6:35"><operator pos:start="6:9" pos:end="6:9">!</operator><name pos:start="6:10" pos:end="6:20"><name pos:start="6:10" pos:end="6:14">avpkt</name><operator pos:start="6:15" pos:end="6:16">-&gt;</operator><name pos:start="6:17" pos:end="6:20">data</name></name> <operator pos:start="6:22" pos:end="6:23">&amp;&amp;</operator> <name pos:start="6:25" pos:end="6:35"><name pos:start="6:25" pos:end="6:29">avpkt</name><operator pos:start="6:30" pos:end="6:31">-&gt;</operator><name pos:start="6:32" pos:end="6:35">size</name></name></expr>)</condition> <block pos:start="6:38" pos:end="60:15">{<block_content pos:start="7:9" pos:end="60:15">
        <expr_stmt pos:start="7:9" pos:end="7:78"><expr pos:start="7:9" pos:end="7:77"><call pos:start="7:9" pos:end="7:77"><name pos:start="7:9" pos:end="7:14">av_log</name><argument_list pos:start="7:15" pos:end="7:77">(<argument pos:start="7:16" pos:end="7:20"><expr pos:start="7:16" pos:end="7:20"><name pos:start="7:16" pos:end="7:20">avctx</name></expr></argument>, <argument pos:start="7:23" pos:end="7:34"><expr pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="7:37" pos:end="7:76"><expr pos:start="7:37" pos:end="7:76"><literal type="string" pos:start="7:37" pos:end="7:76">"invalid packet: NULL data, size != 0\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="8:9" pos:end="8:31">return <expr pos:start="8:16" pos:end="8:30"><call pos:start="8:16" pos:end="8:30"><name pos:start="8:16" pos:end="8:22">AVERROR</name><argument_list pos:start="8:23" pos:end="8:30">(<argument pos:start="8:24" pos:end="8:29"><expr pos:start="8:24" pos:end="8:29"><name pos:start="8:24" pos:end="8:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>
    <if_stmt pos:start="9:5" pos:end="10:31"><if pos:start="9:5" pos:end="10:31">if <condition pos:start="9:8" pos:end="9:22">(<expr pos:start="9:9" pos:end="9:21"><operator pos:start="9:9" pos:end="9:9">!</operator><name pos:start="9:10" pos:end="9:21"><name pos:start="9:10" pos:end="9:14">avctx</name><operator pos:start="9:15" pos:end="9:16">-&gt;</operator><name pos:start="9:17" pos:end="9:21">codec</name></name></expr>)</condition><block type="pseudo" pos:start="10:9" pos:end="10:31"><block_content pos:start="10:9" pos:end="10:31">
        <return pos:start="10:9" pos:end="10:31">return <expr pos:start="10:16" pos:end="10:30"><call pos:start="10:16" pos:end="10:30"><name pos:start="10:16" pos:end="10:22">AVERROR</name><argument_list pos:start="10:23" pos:end="10:30">(<argument pos:start="10:24" pos:end="10:29"><expr pos:start="10:24" pos:end="10:29"><name pos:start="10:24" pos:end="10:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
    <if_stmt pos:start="11:5" pos:end="60:15"><if pos:start="11:5" pos:end="60:15">if <condition pos:start="11:8" pos:end="11:52">(<expr pos:start="11:9" pos:end="11:51"><name pos:start="11:9" pos:end="11:26"><name pos:start="11:9" pos:end="11:13">avctx</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:20">codec</name><operator pos:start="11:21" pos:end="11:22">-&gt;</operator><name pos:start="11:23" pos:end="11:26">type</name></name> <operator pos:start="11:28" pos:end="11:29">!=</operator> <name pos:start="11:31" pos:end="11:51">AVMEDIA_TYPE_SUBTITLE</name></expr>)</condition> <block pos:start="11:54" pos:end="60:15">{<block_content pos:start="12:9" pos:end="60:15">
        <expr_stmt pos:start="12:9" pos:end="12:74"><expr pos:start="12:9" pos:end="12:73"><call pos:start="12:9" pos:end="12:73"><name pos:start="12:9" pos:end="12:14">av_log</name><argument_list pos:start="12:15" pos:end="12:73">(<argument pos:start="12:16" pos:end="12:20"><expr pos:start="12:16" pos:end="12:20"><name pos:start="12:16" pos:end="12:20">avctx</name></expr></argument>, <argument pos:start="12:23" pos:end="12:34"><expr pos:start="12:23" pos:end="12:34"><name pos:start="12:23" pos:end="12:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="12:37" pos:end="12:72"><expr pos:start="12:37" pos:end="12:72"><literal type="string" pos:start="12:37" pos:end="12:72">"Invalid media type for subtitles\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="13:9" pos:end="13:31">return <expr pos:start="13:16" pos:end="13:30"><call pos:start="13:16" pos:end="13:30"><name pos:start="13:16" pos:end="13:22">AVERROR</name><argument_list pos:start="13:23" pos:end="13:30">(<argument pos:start="13:24" pos:end="13:29"><expr pos:start="13:24" pos:end="13:29"><name pos:start="13:24" pos:end="13:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>
    <expr_stmt pos:start="14:5" pos:end="14:21"><expr pos:start="14:5" pos:end="14:20"><operator pos:start="14:5" pos:end="14:5">*</operator><name pos:start="14:6" pos:end="14:16">got_sub_ptr</name> <operator pos:start="14:18" pos:end="14:18">=</operator> <literal type="number" pos:start="14:20" pos:end="14:20">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:39"><expr pos:start="15:5" pos:end="15:38"><call pos:start="15:5" pos:end="15:38"><name pos:start="15:5" pos:end="15:33">avcodec_get_subtitle_defaults</name><argument_list pos:start="15:34" pos:end="15:38">(<argument pos:start="15:35" pos:end="15:37"><expr pos:start="15:35" pos:end="15:37"><name pos:start="15:35" pos:end="15:37">sub</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="16:5" pos:end="60:15"><if pos:start="16:5" pos:end="60:15">if <condition pos:start="16:8" pos:end="16:70">(<expr pos:start="16:9" pos:end="16:69"><operator pos:start="16:9" pos:end="16:9">(</operator><name pos:start="16:10" pos:end="16:35"><name pos:start="16:10" pos:end="16:14">avctx</name><operator pos:start="16:15" pos:end="16:16">-&gt;</operator><name pos:start="16:17" pos:end="16:21">codec</name><operator pos:start="16:22" pos:end="16:23">-&gt;</operator><name pos:start="16:24" pos:end="16:35">capabilities</name></name> <operator pos:start="16:37" pos:end="16:37">&amp;</operator> <name pos:start="16:39" pos:end="16:53">CODEC_CAP_DELAY</name><operator pos:start="16:54" pos:end="16:54">)</operator> <operator pos:start="16:56" pos:end="16:57">||</operator> <name pos:start="16:59" pos:end="16:69"><name pos:start="16:59" pos:end="16:63">avpkt</name><operator pos:start="16:64" pos:end="16:65">-&gt;</operator><name pos:start="16:66" pos:end="16:69">size</name></name></expr>)</condition> <block pos:start="16:72" pos:end="60:15">{<block_content pos:start="17:9" pos:end="60:15">
        <decl_stmt pos:start="17:9" pos:end="17:29"><decl pos:start="17:9" pos:end="17:28"><type pos:start="17:9" pos:end="17:16"><name pos:start="17:9" pos:end="17:16">AVPacket</name></type> <name pos:start="17:18" pos:end="17:28">pkt_recoded</name></decl>;</decl_stmt>
        <decl_stmt pos:start="18:9" pos:end="18:30"><decl pos:start="18:9" pos:end="18:29"><type pos:start="18:9" pos:end="18:16"><name pos:start="18:9" pos:end="18:16">AVPacket</name></type> <name pos:start="18:18" pos:end="18:20">tmp</name> <init pos:start="18:22" pos:end="18:29">= <expr pos:start="18:24" pos:end="18:29"><operator pos:start="18:24" pos:end="18:24">*</operator><name pos:start="18:25" pos:end="18:29">avpkt</name></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="19:9" pos:end="19:56"><decl pos:start="19:9" pos:end="19:55"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:21">did_split</name> <init pos:start="19:23" pos:end="19:55">= <expr pos:start="19:25" pos:end="19:55"><call pos:start="19:25" pos:end="19:55"><name pos:start="19:25" pos:end="19:49">av_packet_split_side_data</name><argument_list pos:start="19:50" pos:end="19:55">(<argument pos:start="19:51" pos:end="19:54"><expr pos:start="19:51" pos:end="19:54"><operator pos:start="19:51" pos:end="19:51">&amp;</operator><name pos:start="19:52" pos:end="19:54">tmp</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <comment type="line" pos:start="20:9" pos:end="20:42">//apply_param_change(avctx, &amp;tmp);</comment>
        <expr_stmt pos:start="21:9" pos:end="21:26"><expr pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:19">pkt_recoded</name> <operator pos:start="21:21" pos:end="21:21">=</operator> <name pos:start="21:23" pos:end="21:25">tmp</name></expr>;</expr_stmt>
        <expr_stmt pos:start="22:9" pos:end="22:57"><expr pos:start="22:9" pos:end="22:56"><name pos:start="22:9" pos:end="22:11">ret</name> <operator pos:start="22:13" pos:end="22:13">=</operator> <call pos:start="22:15" pos:end="22:56"><name pos:start="22:15" pos:end="22:29">recode_subtitle</name><argument_list pos:start="22:30" pos:end="22:56">(<argument pos:start="22:31" pos:end="22:35"><expr pos:start="22:31" pos:end="22:35"><name pos:start="22:31" pos:end="22:35">avctx</name></expr></argument>, <argument pos:start="22:38" pos:end="22:49"><expr pos:start="22:38" pos:end="22:49"><operator pos:start="22:38" pos:end="22:38">&amp;</operator><name pos:start="22:39" pos:end="22:49">pkt_recoded</name></expr></argument>, <argument pos:start="22:52" pos:end="22:55"><expr pos:start="22:52" pos:end="22:55"><operator pos:start="22:52" pos:end="22:52">&amp;</operator><name pos:start="22:53" pos:end="22:55">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="23:9" pos:end="60:15"><if pos:start="23:9" pos:end="25:9">if <condition pos:start="23:12" pos:end="23:20">(<expr pos:start="23:13" pos:end="23:19"><name pos:start="23:13" pos:end="23:15">ret</name> <operator pos:start="23:17" pos:end="23:17">&lt;</operator> <literal type="number" pos:start="23:19" pos:end="23:19">0</literal></expr>)</condition> <block pos:start="23:22" pos:end="25:9">{<block_content pos:start="24:13" pos:end="24:29">
            <expr_stmt pos:start="24:13" pos:end="24:29"><expr pos:start="24:13" pos:end="24:28"><operator pos:start="24:13" pos:end="24:13">*</operator><name pos:start="24:14" pos:end="24:24">got_sub_ptr</name> <operator pos:start="24:26" pos:end="24:26">=</operator> <literal type="number" pos:start="24:28" pos:end="24:28">0</literal></expr>;</expr_stmt>
        </block_content>}</block></if> <else pos:start="25:11" pos:end="60:15">else <block pos:start="25:16" pos:end="60:15">{<block_content pos:start="26:13" pos:end="60:15">
            <expr_stmt pos:start="26:13" pos:end="26:48"><expr pos:start="26:13" pos:end="26:47"><name pos:start="26:13" pos:end="26:32"><name pos:start="26:13" pos:end="26:17">avctx</name><operator pos:start="26:18" pos:end="26:19">-&gt;</operator><name pos:start="26:20" pos:end="26:27">internal</name><operator pos:start="26:28" pos:end="26:29">-&gt;</operator><name pos:start="26:30" pos:end="26:32">pkt</name></name> <operator pos:start="26:34" pos:end="26:34">=</operator> <operator pos:start="26:36" pos:end="26:36">&amp;</operator><name pos:start="26:37" pos:end="26:47">pkt_recoded</name></expr>;</expr_stmt>
            <if_stmt pos:start="27:13" pos:end="29:77"><if pos:start="27:13" pos:end="29:77">if <condition pos:start="27:16" pos:end="27:72">(<expr pos:start="27:17" pos:end="27:71"><name pos:start="27:17" pos:end="27:39"><name pos:start="27:17" pos:end="27:21">avctx</name><operator pos:start="27:22" pos:end="27:23">-&gt;</operator><name pos:start="27:24" pos:end="27:35">pkt_timebase</name><operator pos:start="27:36" pos:end="27:36">.</operator><name pos:start="27:37" pos:end="27:39">den</name></name> <operator pos:start="27:41" pos:end="27:42">&amp;&amp;</operator> <name pos:start="27:44" pos:end="27:53"><name pos:start="27:44" pos:end="27:48">avpkt</name><operator pos:start="27:49" pos:end="27:50">-&gt;</operator><name pos:start="27:51" pos:end="27:53">pts</name></name> <operator pos:start="27:55" pos:end="27:56">!=</operator> <name pos:start="27:58" pos:end="27:71">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="28:17" pos:end="29:77"><block_content pos:start="28:17" pos:end="29:77">
                <expr_stmt pos:start="28:17" pos:end="29:77"><expr pos:start="28:17" pos:end="29:76"><name pos:start="28:17" pos:end="28:24"><name pos:start="28:17" pos:end="28:19">sub</name><operator pos:start="28:20" pos:end="28:21">-&gt;</operator><name pos:start="28:22" pos:end="28:24">pts</name></name> <operator pos:start="28:26" pos:end="28:26">=</operator> <call pos:start="28:28" pos:end="29:76"><name pos:start="28:28" pos:end="28:39">av_rescale_q</name><argument_list pos:start="28:40" pos:end="29:76">(<argument pos:start="28:41" pos:end="28:50"><expr pos:start="28:41" pos:end="28:50"><name pos:start="28:41" pos:end="28:50"><name pos:start="28:41" pos:end="28:45">avpkt</name><operator pos:start="28:46" pos:end="28:47">-&gt;</operator><name pos:start="28:48" pos:end="28:50">pts</name></name></expr></argument>,
                                        <argument pos:start="29:41" pos:end="29:59"><expr pos:start="29:41" pos:end="29:59"><name pos:start="29:41" pos:end="29:59"><name pos:start="29:41" pos:end="29:45">avctx</name><operator pos:start="29:46" pos:end="29:47">-&gt;</operator><name pos:start="29:48" pos:end="29:59">pkt_timebase</name></name></expr></argument>, <argument pos:start="29:62" pos:end="29:75"><expr pos:start="29:62" pos:end="29:75"><name pos:start="29:62" pos:end="29:75">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <expr_stmt pos:start="30:13" pos:end="30:78"><expr pos:start="30:13" pos:end="30:77"><name pos:start="30:13" pos:end="30:15">ret</name> <operator pos:start="30:17" pos:end="30:17">=</operator> <call pos:start="30:19" pos:end="30:77"><name pos:start="30:19" pos:end="30:38"><name pos:start="30:19" pos:end="30:23">avctx</name><operator pos:start="30:24" pos:end="30:25">-&gt;</operator><name pos:start="30:26" pos:end="30:30">codec</name><operator pos:start="30:31" pos:end="30:32">-&gt;</operator><name pos:start="30:33" pos:end="30:38">decode</name></name><argument_list pos:start="30:39" pos:end="30:77">(<argument pos:start="30:40" pos:end="30:44"><expr pos:start="30:40" pos:end="30:44"><name pos:start="30:40" pos:end="30:44">avctx</name></expr></argument>, <argument pos:start="30:47" pos:end="30:49"><expr pos:start="30:47" pos:end="30:49"><name pos:start="30:47" pos:end="30:49">sub</name></expr></argument>, <argument pos:start="30:52" pos:end="30:62"><expr pos:start="30:52" pos:end="30:62"><name pos:start="30:52" pos:end="30:62">got_sub_ptr</name></expr></argument>, <argument pos:start="30:65" pos:end="30:76"><expr pos:start="30:65" pos:end="30:76"><operator pos:start="30:65" pos:end="30:65">&amp;</operator><name pos:start="30:66" pos:end="30:76">pkt_recoded</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="31:13" pos:end="32:59"><expr pos:start="31:13" pos:end="32:58"><call pos:start="31:13" pos:end="32:58"><name pos:start="31:13" pos:end="31:22">av_assert1</name><argument_list pos:start="31:23" pos:end="32:58">(<argument pos:start="31:24" pos:end="32:57"><expr pos:start="31:24" pos:end="32:57"><operator pos:start="31:24" pos:end="31:24">(</operator><name pos:start="31:25" pos:end="31:27">ret</name> <operator pos:start="31:29" pos:end="31:30">&gt;=</operator> <literal type="number" pos:start="31:32" pos:end="31:32">0</literal><operator pos:start="31:33" pos:end="31:33">)</operator> <operator pos:start="31:35" pos:end="31:36">&gt;=</operator> <operator pos:start="31:38" pos:end="31:38">!</operator><operator pos:start="31:39" pos:end="31:39">!</operator><operator pos:start="31:40" pos:end="31:40">*</operator><name pos:start="31:41" pos:end="31:51">got_sub_ptr</name> <operator pos:start="31:53" pos:end="31:54">&amp;&amp;</operator>
                       <operator pos:start="32:24" pos:end="32:24">!</operator><operator pos:start="32:25" pos:end="32:25">!</operator><operator pos:start="32:26" pos:end="32:26">*</operator><name pos:start="32:27" pos:end="32:37">got_sub_ptr</name> <operator pos:start="32:39" pos:end="32:40">&gt;=</operator> <operator pos:start="32:42" pos:end="32:42">!</operator><operator pos:start="32:43" pos:end="32:43">!</operator><name pos:start="32:44" pos:end="32:57"><name pos:start="32:44" pos:end="32:46">sub</name><operator pos:start="32:47" pos:end="32:48">-&gt;</operator><name pos:start="32:49" pos:end="32:57">num_rects</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="33:13" pos:end="60:15"><if pos:start="33:13" pos:end="60:15">if <condition pos:start="33:16" pos:end="34:40">(<expr pos:start="33:17" pos:end="34:39"><name pos:start="33:17" pos:end="33:30"><name pos:start="33:17" pos:end="33:19">sub</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:30">num_rects</name></name> <operator pos:start="33:32" pos:end="33:33">&amp;&amp;</operator> <operator pos:start="33:35" pos:end="33:35">!</operator><name pos:start="33:36" pos:end="33:56"><name pos:start="33:36" pos:end="33:38">sub</name><operator pos:start="33:39" pos:end="33:40">-&gt;</operator><name pos:start="33:41" pos:end="33:56">end_display_time</name></name> <operator pos:start="33:58" pos:end="33:59">&amp;&amp;</operator> <name pos:start="33:61" pos:end="33:75"><name pos:start="33:61" pos:end="33:65">avpkt</name><operator pos:start="33:66" pos:end="33:67">-&gt;</operator><name pos:start="33:68" pos:end="33:75">duration</name></name> <operator pos:start="33:77" pos:end="33:78">&amp;&amp;</operator>
                <name pos:start="34:17" pos:end="34:39"><name pos:start="34:17" pos:end="34:21">avctx</name><operator pos:start="34:22" pos:end="34:23">-&gt;</operator><name pos:start="34:24" pos:end="34:35">pkt_timebase</name><operator pos:start="34:36" pos:end="34:36">.</operator><name pos:start="34:37" pos:end="34:39">num</name></name></expr>)</condition> <block pos:start="34:42" pos:end="60:15">{<block_content pos:start="35:17" pos:end="60:15">
                <decl_stmt pos:start="35:17" pos:end="35:44"><decl pos:start="35:17" pos:end="35:43"><type pos:start="35:17" pos:end="35:26"><name pos:start="35:17" pos:end="35:26">AVRational</name></type> <name pos:start="35:28" pos:end="35:29">ms</name> <init pos:start="35:31" pos:end="35:43">= <expr pos:start="35:33" pos:end="35:43"><block pos:start="35:33" pos:end="35:43">{ <expr pos:start="35:35" pos:end="35:35"><literal type="number" pos:start="35:35" pos:end="35:35">1</literal></expr>, <expr pos:start="35:38" pos:end="35:41"><literal type="number" pos:start="35:38" pos:end="35:41">1000</literal></expr> }</block></expr></init></decl>;</decl_stmt>
                <expr_stmt pos:start="36:17" pos:end="37:78"><expr pos:start="36:17" pos:end="37:77"><name pos:start="36:17" pos:end="36:37"><name pos:start="36:17" pos:end="36:19">sub</name><operator pos:start="36:20" pos:end="36:21">-&gt;</operator><name pos:start="36:22" pos:end="36:37">end_display_time</name></name> <operator pos:start="36:39" pos:end="36:39">=</operator> <call pos:start="36:41" pos:end="37:77"><name pos:start="36:41" pos:end="36:52">av_rescale_q</name><argument_list pos:start="36:53" pos:end="37:77">(<argument pos:start="36:54" pos:end="36:68"><expr pos:start="36:54" pos:end="36:68"><name pos:start="36:54" pos:end="36:68"><name pos:start="36:54" pos:end="36:58">avpkt</name><operator pos:start="36:59" pos:end="36:60">-&gt;</operator><name pos:start="36:61" pos:end="36:68">duration</name></name></expr></argument>,
                                                     <argument pos:start="37:54" pos:end="37:72"><expr pos:start="37:54" pos:end="37:72"><name pos:start="37:54" pos:end="37:72"><name pos:start="37:54" pos:end="37:58">avctx</name><operator pos:start="37:59" pos:end="37:60">-&gt;</operator><name pos:start="37:61" pos:end="37:72">pkt_timebase</name></name></expr></argument>, <argument pos:start="37:75" pos:end="37:76"><expr pos:start="37:75" pos:end="37:76"><name pos:start="37:75" pos:end="37:76">ms</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <for pos:start="38:13" pos:end="60:15">for <control pos:start="38:17" pos:end="38:48">(<init pos:start="38:18" pos:end="38:23"><expr pos:start="38:18" pos:end="38:22"><name pos:start="38:18" pos:end="38:18">i</name> <operator pos:start="38:20" pos:end="38:20">=</operator> <literal type="number" pos:start="38:22" pos:end="38:22">0</literal></expr>;</init> <condition pos:start="38:25" pos:end="38:43"><expr pos:start="38:25" pos:end="38:42"><name pos:start="38:25" pos:end="38:25">i</name> <operator pos:start="38:27" pos:end="38:27">&lt;</operator> <name pos:start="38:29" pos:end="38:42"><name pos:start="38:29" pos:end="38:31">sub</name><operator pos:start="38:32" pos:end="38:33">-&gt;</operator><name pos:start="38:34" pos:end="38:42">num_rects</name></name></expr>;</condition> <incr pos:start="38:45" pos:end="38:47"><expr pos:start="38:45" pos:end="38:47"><name pos:start="38:45" pos:end="38:45">i</name><operator pos:start="38:46" pos:end="38:47">++</operator></expr></incr>)</control> <block pos:start="38:50" pos:end="60:15">{<block_content pos:start="39:17" pos:end="60:15">
                <if_stmt pos:start="39:17" pos:end="60:15"><if pos:start="39:17" pos:end="60:15">if <condition pos:start="39:20" pos:end="39:74">(<expr pos:start="39:21" pos:end="39:73"><name pos:start="39:21" pos:end="39:33"><name pos:start="39:21" pos:end="39:23">sub</name><operator pos:start="39:24" pos:end="39:25">-&gt;</operator><name pos:start="39:26" pos:end="39:30">rects</name><index pos:start="39:31" pos:end="39:33">[<expr pos:start="39:32" pos:end="39:32"><name pos:start="39:32" pos:end="39:32">i</name></expr>]</index></name><operator pos:start="39:34" pos:end="39:35">-&gt;</operator><name pos:start="39:36" pos:end="39:38">ass</name> <operator pos:start="39:40" pos:end="39:41">&amp;&amp;</operator> <operator pos:start="39:43" pos:end="39:43">!</operator><call pos:start="39:44" pos:end="39:73"><name pos:start="39:44" pos:end="39:53">utf8_check</name><argument_list pos:start="39:54" pos:end="39:73">(<argument pos:start="39:55" pos:end="39:72"><expr pos:start="39:55" pos:end="39:72"><name pos:start="39:55" pos:end="39:67"><name pos:start="39:55" pos:end="39:57">sub</name><operator pos:start="39:58" pos:end="39:59">-&gt;</operator><name pos:start="39:60" pos:end="39:64">rects</name><index pos:start="39:65" pos:end="39:67">[<expr pos:start="39:66" pos:end="39:66"><name pos:start="39:66" pos:end="39:66">i</name></expr>]</index></name><operator pos:start="39:68" pos:end="39:69">-&gt;</operator><name pos:start="39:70" pos:end="39:72">ass</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:76" pos:end="60:15">{<block_content pos:start="40:21" pos:end="60:15">
                    <expr_stmt pos:start="40:21" pos:end="42:66"><expr pos:start="40:21" pos:end="42:65"><call pos:start="40:21" pos:end="42:65"><name pos:start="40:21" pos:end="40:26">av_log</name><argument_list pos:start="40:27" pos:end="42:65">(<argument pos:start="40:28" pos:end="40:32"><expr pos:start="40:28" pos:end="40:32"><name pos:start="40:28" pos:end="40:32">avctx</name></expr></argument>, <argument pos:start="40:35" pos:end="40:46"><expr pos:start="40:35" pos:end="40:46"><name pos:start="40:35" pos:end="40:46">AV_LOG_ERROR</name></expr></argument>,
                           <argument pos:start="41:28" pos:end="42:64"><expr pos:start="41:28" pos:end="42:64"><literal type="string" pos:start="41:28" pos:end="41:70">"Invalid UTF-8 in decoded subtitles text; "</literal>
                           <literal type="string" pos:start="42:28" pos:end="42:64">"maybe missing -sub_charenc option\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="43:21" pos:end="43:41"><expr pos:start="43:21" pos:end="43:40"><call pos:start="43:21" pos:end="43:40"><name pos:start="43:21" pos:end="43:35">avsubtitle_free</name><argument_list pos:start="43:36" pos:end="43:40">(<argument pos:start="43:37" pos:end="43:39"><expr pos:start="43:37" pos:end="43:39"><name pos:start="43:37" pos:end="43:39">sub</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <return pos:start="44:21" pos:end="44:47">return <expr pos:start="44:28" pos:end="44:46"><name pos:start="44:28" pos:end="44:46">AVERROR_INVALIDDATA</name></expr>;</return>
            <if_stmt pos:start="45:13" pos:end="60:15"><if pos:start="45:13" pos:end="60:15">if <condition pos:start="45:16" pos:end="45:45">(<expr pos:start="45:17" pos:end="45:44"><name pos:start="45:17" pos:end="45:24"><name pos:start="45:17" pos:end="45:19">tmp</name><operator pos:start="45:20" pos:end="45:20">.</operator><name pos:start="45:21" pos:end="45:24">data</name></name> <operator pos:start="45:26" pos:end="45:27">!=</operator> <name pos:start="45:29" pos:end="45:44"><name pos:start="45:29" pos:end="45:39">pkt_recoded</name><operator pos:start="45:40" pos:end="45:40">.</operator><name pos:start="45:41" pos:end="45:44">data</name></name></expr>)</condition> <block pos:start="45:47" pos:end="60:15">{<block_content pos:start="47:17" pos:end="60:15"> <comment type="line" pos:start="45:49" pos:end="45:65">// did we recode?</comment>
                <comment type="block" pos:start="46:17" pos:end="46:76">/* prevent from destroying side data from original packet */</comment>
                <expr_stmt pos:start="47:17" pos:end="47:45"><expr pos:start="47:17" pos:end="47:44"><name pos:start="47:17" pos:end="47:37"><name pos:start="47:17" pos:end="47:27">pkt_recoded</name><operator pos:start="47:28" pos:end="47:28">.</operator><name pos:start="47:29" pos:end="47:37">side_data</name></name> <operator pos:start="47:39" pos:end="47:39">=</operator> <name pos:start="47:41" pos:end="47:44">NULL</name></expr>;</expr_stmt>
                <expr_stmt pos:start="48:17" pos:end="48:48"><expr pos:start="48:17" pos:end="48:47"><name pos:start="48:17" pos:end="48:43"><name pos:start="48:17" pos:end="48:27">pkt_recoded</name><operator pos:start="48:28" pos:end="48:28">.</operator><name pos:start="48:29" pos:end="48:43">side_data_elems</name></name> <operator pos:start="48:45" pos:end="48:45">=</operator> <literal type="number" pos:start="48:47" pos:end="48:47">0</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="49:17" pos:end="49:45"><expr pos:start="49:17" pos:end="49:44"><call pos:start="49:17" pos:end="49:44"><name pos:start="49:17" pos:end="49:30">av_free_packet</name><argument_list pos:start="49:31" pos:end="49:44">(<argument pos:start="49:32" pos:end="49:43"><expr pos:start="49:32" pos:end="49:43"><operator pos:start="49:32" pos:end="49:32">&amp;</operator><name pos:start="49:33" pos:end="49:43">pkt_recoded</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="50:13" pos:end="53:32"><if pos:start="50:13" pos:end="51:32">if <condition pos:start="50:16" pos:end="50:74">(<expr pos:start="50:17" pos:end="50:73"><name pos:start="50:17" pos:end="50:46"><name pos:start="50:17" pos:end="50:21">avctx</name><operator pos:start="50:22" pos:end="50:23">-&gt;</operator><name pos:start="50:24" pos:end="50:39">codec_descriptor</name><operator pos:start="50:40" pos:end="50:41">-&gt;</operator><name pos:start="50:42" pos:end="50:46">props</name></name> <operator pos:start="50:48" pos:end="50:48">&amp;</operator> <name pos:start="50:50" pos:end="50:73">AV_CODEC_PROP_BITMAP_SUB</name></expr>)</condition><block type="pseudo" pos:start="51:17" pos:end="51:32"><block_content pos:start="51:17" pos:end="51:32">
                <expr_stmt pos:start="51:17" pos:end="51:32"><expr pos:start="51:17" pos:end="51:31"><name pos:start="51:17" pos:end="51:27"><name pos:start="51:17" pos:end="51:19">sub</name><operator pos:start="51:20" pos:end="51:21">-&gt;</operator><name pos:start="51:22" pos:end="51:27">format</name></name> <operator pos:start="51:29" pos:end="51:29">=</operator> <literal type="number" pos:start="51:31" pos:end="51:31">0</literal></expr>;</expr_stmt></block_content></block></if>
            <if type="elseif" pos:start="52:13" pos:end="53:32">else if <condition pos:start="52:21" pos:end="52:77">(<expr pos:start="52:22" pos:end="52:76"><name pos:start="52:22" pos:end="52:51"><name pos:start="52:22" pos:end="52:26">avctx</name><operator pos:start="52:27" pos:end="52:28">-&gt;</operator><name pos:start="52:29" pos:end="52:44">codec_descriptor</name><operator pos:start="52:45" pos:end="52:46">-&gt;</operator><name pos:start="52:47" pos:end="52:51">props</name></name> <operator pos:start="52:53" pos:end="52:53">&amp;</operator> <name pos:start="52:55" pos:end="52:76">AV_CODEC_PROP_TEXT_SUB</name></expr>)</condition><block type="pseudo" pos:start="53:17" pos:end="53:32"><block_content pos:start="53:17" pos:end="53:32">
                <expr_stmt pos:start="53:17" pos:end="53:32"><expr pos:start="53:17" pos:end="53:31"><name pos:start="53:17" pos:end="53:27"><name pos:start="53:17" pos:end="53:19">sub</name><operator pos:start="53:20" pos:end="53:21">-&gt;</operator><name pos:start="53:22" pos:end="53:27">format</name></name> <operator pos:start="53:29" pos:end="53:29">=</operator> <literal type="number" pos:start="53:31" pos:end="53:31">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <expr_stmt pos:start="54:13" pos:end="54:40"><expr pos:start="54:13" pos:end="54:39"><name pos:start="54:13" pos:end="54:32"><name pos:start="54:13" pos:end="54:17">avctx</name><operator pos:start="54:18" pos:end="54:19">-&gt;</operator><name pos:start="54:20" pos:end="54:27">internal</name><operator pos:start="54:28" pos:end="54:29">-&gt;</operator><name pos:start="54:30" pos:end="54:32">pkt</name></name> <operator pos:start="54:34" pos:end="54:34">=</operator> <name pos:start="54:36" pos:end="54:39">NULL</name></expr>;</expr_stmt>
            <expr_stmt pos:start="55:13" pos:end="55:43"><expr pos:start="55:13" pos:end="55:42"><call pos:start="55:13" pos:end="55:42"><name pos:start="55:13" pos:end="55:36">av_packet_free_side_data</name><argument_list pos:start="55:37" pos:end="55:42">(<argument pos:start="55:38" pos:end="55:41"><expr pos:start="55:38" pos:end="55:41"><operator pos:start="55:38" pos:end="55:38">&amp;</operator><name pos:start="55:39" pos:end="55:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="56:13" pos:end="57:34"><if pos:start="56:13" pos:end="57:34">if<condition pos:start="56:15" pos:end="56:31">(<expr pos:start="56:16" pos:end="56:30"><name pos:start="56:16" pos:end="56:18">ret</name> <operator pos:start="56:20" pos:end="56:21">==</operator> <name pos:start="56:23" pos:end="56:30"><name pos:start="56:23" pos:end="56:25">tmp</name><operator pos:start="56:26" pos:end="56:26">.</operator><name pos:start="56:27" pos:end="56:30">size</name></name></expr>)</condition><block type="pseudo" pos:start="57:17" pos:end="57:34"><block_content pos:start="57:17" pos:end="57:34">
                <expr_stmt pos:start="57:17" pos:end="57:34"><expr pos:start="57:17" pos:end="57:33"><name pos:start="57:17" pos:end="57:19">ret</name> <operator pos:start="57:21" pos:end="57:21">=</operator> <name pos:start="57:23" pos:end="57:33"><name pos:start="57:23" pos:end="57:27">avpkt</name><operator pos:start="57:28" pos:end="57:29">-&gt;</operator><name pos:start="57:30" pos:end="57:33">size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <if_stmt pos:start="58:9" pos:end="59:34"><if pos:start="58:9" pos:end="59:34">if <condition pos:start="58:12" pos:end="58:25">(<expr pos:start="58:13" pos:end="58:24"><operator pos:start="58:13" pos:end="58:13">*</operator><name pos:start="58:14" pos:end="58:24">got_sub_ptr</name></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:34"><block_content pos:start="59:13" pos:end="59:34">
            <expr_stmt pos:start="59:13" pos:end="59:34"><expr pos:start="59:13" pos:end="59:33"><name pos:start="59:13" pos:end="59:31"><name pos:start="59:13" pos:end="59:17">avctx</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:31">frame_number</name></name><operator pos:start="59:32" pos:end="59:33">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <return pos:start="60:5" pos:end="60:15">return <expr pos:start="60:12" pos:end="60:14"><name pos:start="60:12" pos:end="60:14">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
