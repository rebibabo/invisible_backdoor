<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8377.c" pos:tabs="8"><function pos:start="1:1" pos:end="21:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:28">put_dwords</name><parameter_list pos:start="1:29" pos:end="1:67">(<parameter pos:start="1:30" pos:end="1:42"><decl pos:start="1:30" pos:end="1:42"><type pos:start="1:30" pos:end="1:42"><name pos:start="1:30" pos:end="1:37">uint32_t</name></type> <name pos:start="1:39" pos:end="1:42">addr</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:57"><decl pos:start="1:45" pos:end="1:57"><type pos:start="1:45" pos:end="1:57"><name pos:start="1:45" pos:end="1:52">uint32_t</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">buf</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:66"><decl pos:start="1:60" pos:end="1:66"><type pos:start="1:60" pos:end="1:66"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:66">num</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="21:1">{<block_content pos:start="5:5" pos:end="19:13">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>



    <for pos:start="9:5" pos:end="15:5">for<control pos:start="9:8" pos:end="9:57">(<init pos:start="9:9" pos:end="9:14"><expr pos:start="9:9" pos:end="9:13"><name pos:start="9:9" pos:end="9:9">i</name> <operator pos:start="9:11" pos:end="9:11">=</operator> <literal type="number" pos:start="9:13" pos:end="9:13">0</literal></expr>;</init> <condition pos:start="9:16" pos:end="9:23"><expr pos:start="9:16" pos:end="9:22"><name pos:start="9:16" pos:end="9:16">i</name> <operator pos:start="9:18" pos:end="9:18">&lt;</operator> <name pos:start="9:20" pos:end="9:22">num</name></expr>;</condition> <incr pos:start="9:25" pos:end="9:56"><expr pos:start="9:25" pos:end="9:27"><name pos:start="9:25" pos:end="9:25">i</name><operator pos:start="9:26" pos:end="9:27">++</operator></expr><operator pos:start="9:28" pos:end="9:28">,</operator> <expr pos:start="9:30" pos:end="9:34"><name pos:start="9:30" pos:end="9:32">buf</name><operator pos:start="9:33" pos:end="9:34">++</operator></expr><operator pos:start="9:35" pos:end="9:35">,</operator> <expr pos:start="9:37" pos:end="9:56"><name pos:start="9:37" pos:end="9:40">addr</name> <operator pos:start="9:42" pos:end="9:43">+=</operator> <sizeof pos:start="9:45" pos:end="9:56">sizeof<argument_list pos:start="9:51" pos:end="9:56">(<argument pos:start="9:52" pos:end="9:55"><expr pos:start="9:52" pos:end="9:55"><operator pos:start="9:52" pos:end="9:52">*</operator><name pos:start="9:53" pos:end="9:55">buf</name></expr></argument>)</argument_list></sizeof></expr></incr>)</control> <block pos:start="9:59" pos:end="15:5">{<block_content pos:start="11:9" pos:end="13:69">

        <decl_stmt pos:start="11:9" pos:end="11:41"><decl pos:start="11:9" pos:end="11:40"><type pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:16">uint32_t</name></type> <name pos:start="11:18" pos:end="11:20">tmp</name> <init pos:start="11:22" pos:end="11:40">= <expr pos:start="11:24" pos:end="11:40"><call pos:start="11:24" pos:end="11:40"><name pos:start="11:24" pos:end="11:34">cpu_to_le32</name><argument_list pos:start="11:35" pos:end="11:40">(<argument pos:start="11:36" pos:end="11:39"><expr pos:start="11:36" pos:end="11:39"><operator pos:start="11:36" pos:end="11:36">*</operator><name pos:start="11:37" pos:end="11:39">buf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:69"><expr pos:start="13:9" pos:end="13:68"><call pos:start="13:9" pos:end="13:68"><name pos:start="13:9" pos:end="13:30">cpu_physical_memory_rw</name><argument_list pos:start="13:31" pos:end="13:68">(<argument pos:start="13:32" pos:end="13:35"><expr pos:start="13:32" pos:end="13:35"><name pos:start="13:32" pos:end="13:35">addr</name></expr></argument>,<argument pos:start="13:37" pos:end="13:51"><expr pos:start="13:37" pos:end="13:51"><operator pos:start="13:37" pos:end="13:37">(</operator><name pos:start="13:38" pos:end="13:44">uint8_t</name> <operator pos:start="13:46" pos:end="13:46">*</operator><operator pos:start="13:47" pos:end="13:47">)</operator><operator pos:start="13:48" pos:end="13:48">&amp;</operator><name pos:start="13:49" pos:end="13:51">tmp</name></expr></argument>, <argument pos:start="13:54" pos:end="13:64"><expr pos:start="13:54" pos:end="13:64"><sizeof pos:start="13:54" pos:end="13:64">sizeof<argument_list pos:start="13:60" pos:end="13:64">(<argument pos:start="13:61" pos:end="13:63"><expr pos:start="13:61" pos:end="13:63"><name pos:start="13:61" pos:end="13:63">tmp</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="13:67" pos:end="13:67"><expr pos:start="13:67" pos:end="13:67"><literal type="number" pos:start="13:67" pos:end="13:67">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="19:5" pos:end="19:13">return <expr pos:start="19:12" pos:end="19:12"><literal type="number" pos:start="19:12" pos:end="19:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
