<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18904.c" pos:tabs="8"><function pos:start="1:1" pos:end="199:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">audio_init</name> <parameter_list pos:start="1:24" pos:end="1:29">(<parameter pos:start="1:25" pos:end="1:28"><decl pos:start="1:25" pos:end="1:28"><type pos:start="1:25" pos:end="1:28"><name pos:start="1:25" pos:end="1:28">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="199:1">{<block_content pos:start="5:5" pos:end="197:50">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">size_t</name></type> <name pos:start="5:12" pos:end="5:12">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">done</name> <init pos:start="7:14" pos:end="7:16">= <expr pos:start="7:16" pos:end="7:16"><literal type="number" pos:start="7:16" pos:end="7:16">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:23">drvname</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:22">VMChangeStateEntry</name> <modifier pos:start="11:24" pos:end="11:24">*</modifier></type><name pos:start="11:25" pos:end="11:25">e</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:38"><decl pos:start="13:5" pos:end="13:37"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:14">AudioState</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:17">s</name> <init pos:start="13:19" pos:end="13:37">= <expr pos:start="13:21" pos:end="13:37"><operator pos:start="13:21" pos:end="13:21">&amp;</operator><name pos:start="13:22" pos:end="13:37">glob_audio_state</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:15">(<expr pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:14">drv</name></name></expr>)</condition> <block pos:start="17:17" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:15">

        <return pos:start="19:9" pos:end="19:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:33"><expr pos:start="25:5" pos:end="25:32"><call pos:start="25:5" pos:end="25:32"><name pos:start="25:5" pos:end="25:14">QLIST_INIT</name> <argument_list pos:start="25:16" pos:end="25:32">(<argument pos:start="25:17" pos:end="25:31"><expr pos:start="25:17" pos:end="25:31"><operator pos:start="25:17" pos:end="25:17">&amp;</operator><name pos:start="25:18" pos:end="25:31"><name pos:start="25:18" pos:end="25:18">s</name><operator pos:start="25:19" pos:end="25:20">-&gt;</operator><name pos:start="25:21" pos:end="25:31">hw_head_out</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:32"><expr pos:start="27:5" pos:end="27:31"><call pos:start="27:5" pos:end="27:31"><name pos:start="27:5" pos:end="27:14">QLIST_INIT</name> <argument_list pos:start="27:16" pos:end="27:31">(<argument pos:start="27:17" pos:end="27:30"><expr pos:start="27:17" pos:end="27:30"><operator pos:start="27:17" pos:end="27:17">&amp;</operator><name pos:start="27:18" pos:end="27:30"><name pos:start="27:18" pos:end="27:18">s</name><operator pos:start="27:19" pos:end="27:20">-&gt;</operator><name pos:start="27:21" pos:end="27:30">hw_head_in</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:30"><expr pos:start="29:5" pos:end="29:29"><call pos:start="29:5" pos:end="29:29"><name pos:start="29:5" pos:end="29:14">QLIST_INIT</name> <argument_list pos:start="29:16" pos:end="29:29">(<argument pos:start="29:17" pos:end="29:28"><expr pos:start="29:17" pos:end="29:28"><operator pos:start="29:17" pos:end="29:17">&amp;</operator><name pos:start="29:18" pos:end="29:28"><name pos:start="29:18" pos:end="29:18">s</name><operator pos:start="29:19" pos:end="29:20">-&gt;</operator><name pos:start="29:21" pos:end="29:28">cap_head</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:26"><expr pos:start="31:5" pos:end="31:25"><call pos:start="31:5" pos:end="31:25"><name pos:start="31:5" pos:end="31:10">atexit</name> <argument_list pos:start="31:12" pos:end="31:25">(<argument pos:start="31:13" pos:end="31:24"><expr pos:start="31:13" pos:end="31:24"><name pos:start="31:13" pos:end="31:24">audio_atexit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:54"><expr pos:start="35:5" pos:end="35:53"><name pos:start="35:5" pos:end="35:9"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:9">ts</name></name> <operator pos:start="35:11" pos:end="35:11">=</operator> <call pos:start="35:13" pos:end="35:53"><name pos:start="35:13" pos:end="35:26">qemu_new_timer</name> <argument_list pos:start="35:28" pos:end="35:53">(<argument pos:start="35:29" pos:end="35:36"><expr pos:start="35:29" pos:end="35:36"><name pos:start="35:29" pos:end="35:36">vm_clock</name></expr></argument>, <argument pos:start="35:39" pos:end="35:49"><expr pos:start="35:39" pos:end="35:49"><name pos:start="35:39" pos:end="35:49">audio_timer</name></expr></argument>, <argument pos:start="35:52" pos:end="35:52"><expr pos:start="35:52" pos:end="35:52"><name pos:start="35:52" pos:end="35:52">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:15">(<expr pos:start="37:9" pos:end="37:14"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:14"><name pos:start="37:10" pos:end="37:10">s</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:14">ts</name></name></expr>)</condition> <block pos:start="37:17" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:51">

        <expr_stmt pos:start="39:9" pos:end="39:51"><expr pos:start="39:9" pos:end="39:50"><call pos:start="39:9" pos:end="39:50"><name pos:start="39:9" pos:end="39:16">hw_error</name><argument_list pos:start="39:17" pos:end="39:50">(<argument pos:start="39:18" pos:end="39:49"><expr pos:start="39:18" pos:end="39:49"><literal type="string" pos:start="39:18" pos:end="39:49">"Could not create audio timer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:51"><expr pos:start="45:5" pos:end="45:50"><call pos:start="45:5" pos:end="45:50"><name pos:start="45:5" pos:end="45:25">audio_process_options</name> <argument_list pos:start="45:27" pos:end="45:50">(<argument pos:start="45:28" pos:end="45:34"><expr pos:start="45:28" pos:end="45:34"><literal type="string" pos:start="45:28" pos:end="45:34">"AUDIO"</literal></expr></argument>, <argument pos:start="45:37" pos:end="45:49"><expr pos:start="45:37" pos:end="45:49"><name pos:start="45:37" pos:end="45:49">audio_options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:51"><expr pos:start="49:5" pos:end="49:50"><name pos:start="49:5" pos:end="49:23"><name pos:start="49:5" pos:end="49:5">s</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:23">nb_hw_voices_out</name></name> <operator pos:start="49:25" pos:end="49:25">=</operator> <name pos:start="49:27" pos:end="49:50"><name pos:start="49:27" pos:end="49:30">conf</name><operator pos:start="49:31" pos:end="49:31">.</operator><name pos:start="49:32" pos:end="49:40">fixed_out</name><operator pos:start="49:41" pos:end="49:41">.</operator><name pos:start="49:42" pos:end="49:50">nb_voices</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:49"><expr pos:start="51:5" pos:end="51:48"><name pos:start="51:5" pos:end="51:22"><name pos:start="51:5" pos:end="51:5">s</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:22">nb_hw_voices_in</name></name> <operator pos:start="51:24" pos:end="51:24">=</operator> <name pos:start="51:26" pos:end="51:48"><name pos:start="51:26" pos:end="51:29">conf</name><operator pos:start="51:30" pos:end="51:30">.</operator><name pos:start="51:31" pos:end="51:38">fixed_in</name><operator pos:start="51:39" pos:end="51:39">.</operator><name pos:start="51:40" pos:end="51:48">nb_voices</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="55:5" pos:end="63:5"><if pos:start="55:5" pos:end="63:5">if <condition pos:start="55:8" pos:end="55:33">(<expr pos:start="55:9" pos:end="55:32"><name pos:start="55:9" pos:end="55:27"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:27">nb_hw_voices_out</name></name> <operator pos:start="55:29" pos:end="55:30">&lt;=</operator> <literal type="number" pos:start="55:32" pos:end="55:32">0</literal></expr>)</condition> <block pos:start="55:35" pos:end="63:5">{<block_content pos:start="57:9" pos:end="61:32">

        <expr_stmt pos:start="57:9" pos:end="59:36"><expr pos:start="57:9" pos:end="59:35"><call pos:start="57:9" pos:end="59:35"><name pos:start="57:9" pos:end="57:13">dolog</name> <argument_list pos:start="57:15" pos:end="59:35">(<argument pos:start="57:16" pos:end="57:67"><expr pos:start="57:16" pos:end="57:67"><literal type="string" pos:start="57:16" pos:end="57:67">"Bogus number of playback voices %d, setting to 1\n"</literal></expr></argument>,

               <argument pos:start="59:16" pos:end="59:34"><expr pos:start="59:16" pos:end="59:34"><name pos:start="59:16" pos:end="59:34"><name pos:start="59:16" pos:end="59:16">s</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:34">nb_hw_voices_out</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:32"><expr pos:start="61:9" pos:end="61:31"><name pos:start="61:9" pos:end="61:27"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:27">nb_hw_voices_out</name></name> <operator pos:start="61:29" pos:end="61:29">=</operator> <literal type="number" pos:start="61:31" pos:end="61:31">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="67:5" pos:end="75:5"><if pos:start="67:5" pos:end="75:5">if <condition pos:start="67:8" pos:end="67:32">(<expr pos:start="67:9" pos:end="67:31"><name pos:start="67:9" pos:end="67:26"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:26">nb_hw_voices_in</name></name> <operator pos:start="67:28" pos:end="67:29">&lt;=</operator> <literal type="number" pos:start="67:31" pos:end="67:31">0</literal></expr>)</condition> <block pos:start="67:34" pos:end="75:5">{<block_content pos:start="69:9" pos:end="73:31">

        <expr_stmt pos:start="69:9" pos:end="71:35"><expr pos:start="69:9" pos:end="71:34"><call pos:start="69:9" pos:end="71:34"><name pos:start="69:9" pos:end="69:13">dolog</name> <argument_list pos:start="69:15" pos:end="71:34">(<argument pos:start="69:16" pos:end="69:66"><expr pos:start="69:16" pos:end="69:66"><literal type="string" pos:start="69:16" pos:end="69:66">"Bogus number of capture voices %d, setting to 0\n"</literal></expr></argument>,

               <argument pos:start="71:16" pos:end="71:33"><expr pos:start="71:16" pos:end="71:33"><name pos:start="71:16" pos:end="71:33"><name pos:start="71:16" pos:end="71:16">s</name><operator pos:start="71:17" pos:end="71:18">-&gt;</operator><name pos:start="71:19" pos:end="71:33">nb_hw_voices_in</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:31"><expr pos:start="73:9" pos:end="73:30"><name pos:start="73:9" pos:end="73:26"><name pos:start="73:9" pos:end="73:9">s</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:26">nb_hw_voices_in</name></name> <operator pos:start="73:28" pos:end="73:28">=</operator> <literal type="number" pos:start="73:30" pos:end="73:30">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <block pos:start="79:5" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:68">

        <decl_stmt pos:start="81:9" pos:end="81:16"><decl pos:start="81:9" pos:end="81:15"><type pos:start="81:9" pos:end="81:11"><name pos:start="81:9" pos:end="81:11">int</name></type> <name pos:start="81:13" pos:end="81:15">def</name></decl>;</decl_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:68"><expr pos:start="83:9" pos:end="83:67"><name pos:start="83:9" pos:end="83:15">drvname</name> <operator pos:start="83:17" pos:end="83:17">=</operator> <call pos:start="83:19" pos:end="83:67"><name pos:start="83:19" pos:end="83:36">audio_get_conf_str</name> <argument_list pos:start="83:38" pos:end="83:67">(<argument pos:start="83:39" pos:end="83:54"><expr pos:start="83:39" pos:end="83:54"><literal type="string" pos:start="83:39" pos:end="83:54">"QEMU_AUDIO_DRV"</literal></expr></argument>, <argument pos:start="83:57" pos:end="83:60"><expr pos:start="83:57" pos:end="83:60"><name pos:start="83:57" pos:end="83:60">NULL</name></expr></argument>, <argument pos:start="83:63" pos:end="83:66"><expr pos:start="83:63" pos:end="83:66"><operator pos:start="83:63" pos:end="83:63">&amp;</operator><name pos:start="83:64" pos:end="83:66">def</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>



    <if_stmt pos:start="89:5" pos:end="119:5"><if pos:start="89:5" pos:end="119:5">if <condition pos:start="89:8" pos:end="89:16">(<expr pos:start="89:9" pos:end="89:15"><name pos:start="89:9" pos:end="89:15">drvname</name></expr>)</condition> <block pos:start="89:18" pos:end="119:5">{<block_content pos:start="91:9" pos:end="117:9">

        <decl_stmt pos:start="91:9" pos:end="91:22"><decl pos:start="91:9" pos:end="91:21"><type pos:start="91:9" pos:end="91:11"><name pos:start="91:9" pos:end="91:11">int</name></type> <name pos:start="91:13" pos:end="91:17">found</name> <init pos:start="91:19" pos:end="91:21">= <expr pos:start="91:21" pos:end="91:21"><literal type="number" pos:start="91:21" pos:end="91:21">0</literal></expr></init></decl>;</decl_stmt>



        <for pos:start="95:9" pos:end="107:9">for <control pos:start="95:13" pos:end="95:49">(<init pos:start="95:14" pos:end="95:19"><expr pos:start="95:14" pos:end="95:18"><name pos:start="95:14" pos:end="95:14">i</name> <operator pos:start="95:16" pos:end="95:16">=</operator> <literal type="number" pos:start="95:18" pos:end="95:18">0</literal></expr>;</init> <condition pos:start="95:21" pos:end="95:44"><expr pos:start="95:21" pos:end="95:43"><name pos:start="95:21" pos:end="95:21">i</name> <operator pos:start="95:23" pos:end="95:23">&lt;</operator> <call pos:start="95:25" pos:end="95:43"><name pos:start="95:25" pos:end="95:34">ARRAY_SIZE</name> <argument_list pos:start="95:36" pos:end="95:43">(<argument pos:start="95:37" pos:end="95:42"><expr pos:start="95:37" pos:end="95:42"><name pos:start="95:37" pos:end="95:42">drvtab</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="95:46" pos:end="95:48"><expr pos:start="95:46" pos:end="95:48"><name pos:start="95:46" pos:end="95:46">i</name><operator pos:start="95:47" pos:end="95:48">++</operator></expr></incr>)</control> <block pos:start="95:51" pos:end="107:9">{<block_content pos:start="97:13" pos:end="105:13">

            <if_stmt pos:start="97:13" pos:end="105:13"><if pos:start="97:13" pos:end="105:13">if <condition pos:start="97:16" pos:end="97:51">(<expr pos:start="97:17" pos:end="97:50"><operator pos:start="97:17" pos:end="97:17">!</operator><call pos:start="97:18" pos:end="97:50"><name pos:start="97:18" pos:end="97:23">strcmp</name> <argument_list pos:start="97:25" pos:end="97:50">(<argument pos:start="97:26" pos:end="97:32"><expr pos:start="97:26" pos:end="97:32"><name pos:start="97:26" pos:end="97:32">drvname</name></expr></argument>, <argument pos:start="97:35" pos:end="97:49"><expr pos:start="97:35" pos:end="97:49"><name pos:start="97:35" pos:end="97:43"><name pos:start="97:35" pos:end="97:40">drvtab</name><index pos:start="97:41" pos:end="97:43">[<expr pos:start="97:42" pos:end="97:42"><name pos:start="97:42" pos:end="97:42">i</name></expr>]</index></name><operator pos:start="97:44" pos:end="97:45">-&gt;</operator><name pos:start="97:46" pos:end="97:49">name</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="97:53" pos:end="105:13">{<block_content pos:start="99:17" pos:end="103:22">

                <expr_stmt pos:start="99:17" pos:end="99:57"><expr pos:start="99:17" pos:end="99:56"><name pos:start="99:17" pos:end="99:20">done</name> <operator pos:start="99:22" pos:end="99:22">=</operator> <operator pos:start="99:24" pos:end="99:24">!</operator><call pos:start="99:25" pos:end="99:56"><name pos:start="99:25" pos:end="99:41">audio_driver_init</name> <argument_list pos:start="99:43" pos:end="99:56">(<argument pos:start="99:44" pos:end="99:44"><expr pos:start="99:44" pos:end="99:44"><name pos:start="99:44" pos:end="99:44">s</name></expr></argument>, <argument pos:start="99:47" pos:end="99:55"><expr pos:start="99:47" pos:end="99:55"><name pos:start="99:47" pos:end="99:55"><name pos:start="99:47" pos:end="99:52">drvtab</name><index pos:start="99:53" pos:end="99:55">[<expr pos:start="99:54" pos:end="99:54"><name pos:start="99:54" pos:end="99:54">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="101:17" pos:end="101:26"><expr pos:start="101:17" pos:end="101:25"><name pos:start="101:17" pos:end="101:21">found</name> <operator pos:start="101:23" pos:end="101:23">=</operator> <literal type="number" pos:start="101:25" pos:end="101:25">1</literal></expr>;</expr_stmt>

                <break pos:start="103:17" pos:end="103:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="111:9" pos:end="117:9"><if pos:start="111:9" pos:end="117:9">if <condition pos:start="111:12" pos:end="111:19">(<expr pos:start="111:13" pos:end="111:18"><operator pos:start="111:13" pos:end="111:13">!</operator><name pos:start="111:14" pos:end="111:18">found</name></expr>)</condition> <block pos:start="111:21" pos:end="117:9">{<block_content pos:start="113:13" pos:end="115:71">

            <expr_stmt pos:start="113:13" pos:end="113:59"><expr pos:start="113:13" pos:end="113:58"><call pos:start="113:13" pos:end="113:58"><name pos:start="113:13" pos:end="113:17">dolog</name> <argument_list pos:start="113:19" pos:end="113:58">(<argument pos:start="113:20" pos:end="113:48"><expr pos:start="113:20" pos:end="113:48"><literal type="string" pos:start="113:20" pos:end="113:48">"Unknown audio driver `%s'\n"</literal></expr></argument>, <argument pos:start="113:51" pos:end="113:57"><expr pos:start="113:51" pos:end="113:57"><name pos:start="113:51" pos:end="113:57">drvname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:71"><expr pos:start="115:13" pos:end="115:70"><call pos:start="115:13" pos:end="115:70"><name pos:start="115:13" pos:end="115:17">dolog</name> <argument_list pos:start="115:19" pos:end="115:70">(<argument pos:start="115:20" pos:end="115:69"><expr pos:start="115:20" pos:end="115:69"><literal type="string" pos:start="115:20" pos:end="115:69">"Run with -audio-help to list available drivers\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="123:5" pos:end="135:5"><if pos:start="123:5" pos:end="135:5">if <condition pos:start="123:8" pos:end="123:14">(<expr pos:start="123:9" pos:end="123:13"><operator pos:start="123:9" pos:end="123:9">!</operator><name pos:start="123:10" pos:end="123:13">done</name></expr>)</condition> <block pos:start="123:16" pos:end="135:5">{<block_content pos:start="125:9" pos:end="133:9">

        <for pos:start="125:9" pos:end="133:9">for <control pos:start="125:13" pos:end="125:58">(<init pos:start="125:14" pos:end="125:19"><expr pos:start="125:14" pos:end="125:18"><name pos:start="125:14" pos:end="125:14">i</name> <operator pos:start="125:16" pos:end="125:16">=</operator> <literal type="number" pos:start="125:18" pos:end="125:18">0</literal></expr>;</init> <condition pos:start="125:21" pos:end="125:53"><expr pos:start="125:21" pos:end="125:52"><operator pos:start="125:21" pos:end="125:21">!</operator><name pos:start="125:22" pos:end="125:25">done</name> <operator pos:start="125:27" pos:end="125:28">&amp;&amp;</operator> <name pos:start="125:30" pos:end="125:30">i</name> <operator pos:start="125:32" pos:end="125:32">&lt;</operator> <call pos:start="125:34" pos:end="125:52"><name pos:start="125:34" pos:end="125:43">ARRAY_SIZE</name> <argument_list pos:start="125:45" pos:end="125:52">(<argument pos:start="125:46" pos:end="125:51"><expr pos:start="125:46" pos:end="125:51"><name pos:start="125:46" pos:end="125:51">drvtab</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="125:55" pos:end="125:57"><expr pos:start="125:55" pos:end="125:57"><name pos:start="125:55" pos:end="125:55">i</name><operator pos:start="125:56" pos:end="125:57">++</operator></expr></incr>)</control> <block pos:start="125:60" pos:end="133:9">{<block_content pos:start="127:13" pos:end="131:13">

            <if_stmt pos:start="127:13" pos:end="131:13"><if pos:start="127:13" pos:end="131:13">if <condition pos:start="127:16" pos:end="127:42">(<expr pos:start="127:17" pos:end="127:41"><name pos:start="127:17" pos:end="127:25"><name pos:start="127:17" pos:end="127:22">drvtab</name><index pos:start="127:23" pos:end="127:25">[<expr pos:start="127:24" pos:end="127:24"><name pos:start="127:24" pos:end="127:24">i</name></expr>]</index></name><operator pos:start="127:26" pos:end="127:27">-&gt;</operator><name pos:start="127:28" pos:end="127:41">can_be_default</name></expr>)</condition> <block pos:start="127:44" pos:end="131:13">{<block_content pos:start="129:17" pos:end="129:57">

                <expr_stmt pos:start="129:17" pos:end="129:57"><expr pos:start="129:17" pos:end="129:56"><name pos:start="129:17" pos:end="129:20">done</name> <operator pos:start="129:22" pos:end="129:22">=</operator> <operator pos:start="129:24" pos:end="129:24">!</operator><call pos:start="129:25" pos:end="129:56"><name pos:start="129:25" pos:end="129:41">audio_driver_init</name> <argument_list pos:start="129:43" pos:end="129:56">(<argument pos:start="129:44" pos:end="129:44"><expr pos:start="129:44" pos:end="129:44"><name pos:start="129:44" pos:end="129:44">s</name></expr></argument>, <argument pos:start="129:47" pos:end="129:55"><expr pos:start="129:47" pos:end="129:55"><name pos:start="129:47" pos:end="129:55"><name pos:start="129:47" pos:end="129:52">drvtab</name><index pos:start="129:53" pos:end="129:55">[<expr pos:start="129:54" pos:end="129:54"><name pos:start="129:54" pos:end="129:54">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="139:5" pos:end="155:5"><if pos:start="139:5" pos:end="155:5">if <condition pos:start="139:8" pos:end="139:14">(<expr pos:start="139:9" pos:end="139:13"><operator pos:start="139:9" pos:end="139:9">!</operator><name pos:start="139:10" pos:end="139:13">done</name></expr>)</condition> <block pos:start="139:16" pos:end="155:5">{<block_content pos:start="141:9" pos:end="153:9">

        <expr_stmt pos:start="141:9" pos:end="141:56"><expr pos:start="141:9" pos:end="141:55"><name pos:start="141:9" pos:end="141:12">done</name> <operator pos:start="141:14" pos:end="141:14">=</operator> <operator pos:start="141:16" pos:end="141:16">!</operator><call pos:start="141:17" pos:end="141:55"><name pos:start="141:17" pos:end="141:33">audio_driver_init</name> <argument_list pos:start="141:35" pos:end="141:55">(<argument pos:start="141:36" pos:end="141:36"><expr pos:start="141:36" pos:end="141:36"><name pos:start="141:36" pos:end="141:36">s</name></expr></argument>, <argument pos:start="141:39" pos:end="141:54"><expr pos:start="141:39" pos:end="141:54"><operator pos:start="141:39" pos:end="141:39">&amp;</operator><name pos:start="141:40" pos:end="141:54">no_audio_driver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="143:9" pos:end="153:9"><if pos:start="143:9" pos:end="147:9">if <condition pos:start="143:12" pos:end="143:18">(<expr pos:start="143:13" pos:end="143:17"><operator pos:start="143:13" pos:end="143:13">!</operator><name pos:start="143:14" pos:end="143:17">done</name></expr>)</condition> <block pos:start="143:20" pos:end="147:9">{<block_content pos:start="145:13" pos:end="145:63">

            <expr_stmt pos:start="145:13" pos:end="145:63"><expr pos:start="145:13" pos:end="145:62"><call pos:start="145:13" pos:end="145:62"><name pos:start="145:13" pos:end="145:20">hw_error</name><argument_list pos:start="145:21" pos:end="145:62">(<argument pos:start="145:22" pos:end="145:61"><expr pos:start="145:22" pos:end="145:61"><literal type="string" pos:start="145:22" pos:end="145:61">"Could not initialize audio subsystem\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if>

        <else pos:start="149:9" pos:end="153:9">else <block pos:start="149:14" pos:end="153:9">{<block_content pos:start="151:13" pos:end="151:67">

            <expr_stmt pos:start="151:13" pos:end="151:67"><expr pos:start="151:13" pos:end="151:66"><call pos:start="151:13" pos:end="151:66"><name pos:start="151:13" pos:end="151:17">dolog</name> <argument_list pos:start="151:19" pos:end="151:66">(<argument pos:start="151:20" pos:end="151:65"><expr pos:start="151:20" pos:end="151:65"><literal type="string" pos:start="151:20" pos:end="151:65">"warning: Using timer based audio emulation\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="159:5" pos:end="179:5"><if pos:start="159:5" pos:end="173:5">if <condition pos:start="159:8" pos:end="159:31">(<expr pos:start="159:9" pos:end="159:30"><name pos:start="159:9" pos:end="159:25"><name pos:start="159:9" pos:end="159:12">conf</name><operator pos:start="159:13" pos:end="159:13">.</operator><name pos:start="159:14" pos:end="159:19">period</name><operator pos:start="159:20" pos:end="159:20">.</operator><name pos:start="159:21" pos:end="159:25">hertz</name></name> <operator pos:start="159:27" pos:end="159:28">&lt;=</operator> <literal type="number" pos:start="159:30" pos:end="159:30">0</literal></expr>)</condition> <block pos:start="159:33" pos:end="173:5">{<block_content pos:start="161:9" pos:end="171:30">

        <if_stmt pos:start="161:9" pos:end="169:9"><if pos:start="161:9" pos:end="169:9">if <condition pos:start="161:12" pos:end="161:34">(<expr pos:start="161:13" pos:end="161:33"><name pos:start="161:13" pos:end="161:29"><name pos:start="161:13" pos:end="161:16">conf</name><operator pos:start="161:17" pos:end="161:17">.</operator><name pos:start="161:18" pos:end="161:23">period</name><operator pos:start="161:24" pos:end="161:24">.</operator><name pos:start="161:25" pos:end="161:29">hertz</name></name> <operator pos:start="161:31" pos:end="161:31">&lt;</operator> <literal type="number" pos:start="161:33" pos:end="161:33">0</literal></expr>)</condition> <block pos:start="161:36" pos:end="169:9">{<block_content pos:start="163:13" pos:end="167:38">

            <expr_stmt pos:start="163:13" pos:end="167:38"><expr pos:start="163:13" pos:end="167:37"><call pos:start="163:13" pos:end="167:37"><name pos:start="163:13" pos:end="163:17">dolog</name> <argument_list pos:start="163:19" pos:end="167:37">(<argument pos:start="163:20" pos:end="165:39"><expr pos:start="163:20" pos:end="165:39"><literal type="string" pos:start="163:20" pos:end="163:60">"warning: Timer period is negative - %d "</literal>

                   <literal type="string" pos:start="165:20" pos:end="165:39">"treating as zero\n"</literal></expr></argument>,

                   <argument pos:start="167:20" pos:end="167:36"><expr pos:start="167:20" pos:end="167:36"><name pos:start="167:20" pos:end="167:36"><name pos:start="167:20" pos:end="167:23">conf</name><operator pos:start="167:24" pos:end="167:24">.</operator><name pos:start="167:25" pos:end="167:30">period</name><operator pos:start="167:31" pos:end="167:31">.</operator><name pos:start="167:32" pos:end="167:36">hertz</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:30"><expr pos:start="171:9" pos:end="171:29"><name pos:start="171:9" pos:end="171:25"><name pos:start="171:9" pos:end="171:12">conf</name><operator pos:start="171:13" pos:end="171:13">.</operator><name pos:start="171:14" pos:end="171:19">period</name><operator pos:start="171:20" pos:end="171:20">.</operator><name pos:start="171:21" pos:end="171:25">ticks</name></name> <operator pos:start="171:27" pos:end="171:27">=</operator> <literal type="number" pos:start="171:29" pos:end="171:29">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="173:7" pos:end="179:5">else <block pos:start="173:12" pos:end="179:5">{<block_content pos:start="175:9" pos:end="177:66">

        <expr_stmt pos:start="175:9" pos:end="177:66"><expr pos:start="175:9" pos:end="177:65"><name pos:start="175:9" pos:end="175:25"><name pos:start="175:9" pos:end="175:12">conf</name><operator pos:start="175:13" pos:end="175:13">.</operator><name pos:start="175:14" pos:end="175:19">period</name><operator pos:start="175:20" pos:end="175:20">.</operator><name pos:start="175:21" pos:end="175:25">ticks</name></name> <operator pos:start="175:27" pos:end="175:27">=</operator>

            <call pos:start="177:13" pos:end="177:65"><name pos:start="177:13" pos:end="177:20">muldiv64</name> <argument_list pos:start="177:22" pos:end="177:65">(<argument pos:start="177:23" pos:end="177:23"><expr pos:start="177:23" pos:end="177:23"><literal type="number" pos:start="177:23" pos:end="177:23">1</literal></expr></argument>, <argument pos:start="177:26" pos:end="177:45"><expr pos:start="177:26" pos:end="177:45"><call pos:start="177:26" pos:end="177:45"><name pos:start="177:26" pos:end="177:42">get_ticks_per_sec</name> <argument_list pos:start="177:44" pos:end="177:45">()</argument_list></call></expr></argument>, <argument pos:start="177:48" pos:end="177:64"><expr pos:start="177:48" pos:end="177:64"><name pos:start="177:48" pos:end="177:64"><name pos:start="177:48" pos:end="177:51">conf</name><operator pos:start="177:52" pos:end="177:52">.</operator><name pos:start="177:53" pos:end="177:58">period</name><operator pos:start="177:59" pos:end="177:59">.</operator><name pos:start="177:60" pos:end="177:64">hertz</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="183:5" pos:end="183:76"><expr pos:start="183:5" pos:end="183:75"><name pos:start="183:5" pos:end="183:5">e</name> <operator pos:start="183:7" pos:end="183:7">=</operator> <call pos:start="183:9" pos:end="183:75"><name pos:start="183:9" pos:end="183:40">qemu_add_vm_change_state_handler</name> <argument_list pos:start="183:42" pos:end="183:75">(<argument pos:start="183:43" pos:end="183:71"><expr pos:start="183:43" pos:end="183:71"><name pos:start="183:43" pos:end="183:71">audio_vm_change_state_handler</name></expr></argument>, <argument pos:start="183:74" pos:end="183:74"><expr pos:start="183:74" pos:end="183:74"><name pos:start="183:74" pos:end="183:74">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="185:5" pos:end="191:5"><if pos:start="185:5" pos:end="191:5">if <condition pos:start="185:8" pos:end="185:11">(<expr pos:start="185:9" pos:end="185:10"><operator pos:start="185:9" pos:end="185:9">!</operator><name pos:start="185:10" pos:end="185:10">e</name></expr>)</condition> <block pos:start="185:13" pos:end="191:5">{<block_content pos:start="187:9" pos:end="189:76">

        <expr_stmt pos:start="187:9" pos:end="189:76"><expr pos:start="187:9" pos:end="189:75"><call pos:start="187:9" pos:end="189:75"><name pos:start="187:9" pos:end="187:13">dolog</name> <argument_list pos:start="187:15" pos:end="189:75">(<argument pos:start="187:16" pos:end="189:74"><expr pos:start="187:16" pos:end="189:74"><literal type="string" pos:start="187:16" pos:end="187:67">"warning: Could not register change state handler\n"</literal>

               <literal type="string" pos:start="189:16" pos:end="189:74">"(Audio can continue looping even after stopping the VM)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="195:5" pos:end="195:31"><expr pos:start="195:5" pos:end="195:30"><call pos:start="195:5" pos:end="195:30"><name pos:start="195:5" pos:end="195:14">QLIST_INIT</name> <argument_list pos:start="195:16" pos:end="195:30">(<argument pos:start="195:17" pos:end="195:29"><expr pos:start="195:17" pos:end="195:29"><operator pos:start="195:17" pos:end="195:17">&amp;</operator><name pos:start="195:18" pos:end="195:29"><name pos:start="195:18" pos:end="195:18">s</name><operator pos:start="195:19" pos:end="195:20">-&gt;</operator><name pos:start="195:21" pos:end="195:29">card_head</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="197:5" pos:end="197:50"><expr pos:start="197:5" pos:end="197:49"><call pos:start="197:5" pos:end="197:49"><name pos:start="197:5" pos:end="197:20">vmstate_register</name> <argument_list pos:start="197:22" pos:end="197:49">(<argument pos:start="197:23" pos:end="197:26"><expr pos:start="197:23" pos:end="197:26"><name pos:start="197:23" pos:end="197:26">NULL</name></expr></argument>, <argument pos:start="197:29" pos:end="197:29"><expr pos:start="197:29" pos:end="197:29"><literal type="number" pos:start="197:29" pos:end="197:29">0</literal></expr></argument>, <argument pos:start="197:32" pos:end="197:45"><expr pos:start="197:32" pos:end="197:45"><operator pos:start="197:32" pos:end="197:32">&amp;</operator><name pos:start="197:33" pos:end="197:45">vmstate_audio</name></expr></argument>, <argument pos:start="197:48" pos:end="197:48"><expr pos:start="197:48" pos:end="197:48"><name pos:start="197:48" pos:end="197:48">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
