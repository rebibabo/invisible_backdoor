<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15809.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:39">coef_test_compression</name><parameter_list pos:start="1:40" pos:end="1:49">(<parameter pos:start="1:41" pos:end="1:48"><decl pos:start="1:41" pos:end="1:48"><type pos:start="1:41" pos:end="1:43"><name pos:start="1:41" pos:end="1:43">int</name></type> <name pos:start="1:45" pos:end="1:48">coef</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="25:1">{<block_content pos:start="5:5" pos:end="23:17">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">tmp</name> <init pos:start="5:13" pos:end="5:23">= <expr pos:start="5:15" pos:end="5:23"><name pos:start="5:15" pos:end="5:18">coef</name> <operator pos:start="5:20" pos:end="5:21">&gt;&gt;</operator> <literal type="number" pos:start="5:23" pos:end="5:23">2</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">res</name> <init pos:start="7:13" pos:end="7:25">= <expr pos:start="7:15" pos:end="7:25"><call pos:start="7:15" pos:end="7:25"><name pos:start="7:15" pos:end="7:20">ff_ctz</name><argument_list pos:start="7:21" pos:end="7:25">(<argument pos:start="7:22" pos:end="7:24"><expr pos:start="7:22" pos:end="7:24"><name pos:start="7:22" pos:end="7:24">tmp</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="9:5" pos:end="23:17"><if pos:start="9:5" pos:end="11:17">if <condition pos:start="9:8" pos:end="9:16">(<expr pos:start="9:9" pos:end="9:15"><name pos:start="9:9" pos:end="9:11">res</name> <operator pos:start="9:13" pos:end="9:13">&gt;</operator> <literal type="number" pos:start="9:15" pos:end="9:15">1</literal></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:17"><block_content pos:start="11:9" pos:end="11:17">

        <return pos:start="11:9" pos:end="11:17">return <expr pos:start="11:16" pos:end="11:16"><literal type="number" pos:start="11:16" pos:end="11:16">1</literal></expr>;</return></block_content></block></if>       <comment type="block" pos:start="11:25" pos:end="11:55">/* ...00 -&gt;  compressable    */</comment>

    <if type="elseif" pos:start="13:5" pos:end="15:17">else if <condition pos:start="13:13" pos:end="13:22">(<expr pos:start="13:14" pos:end="13:21"><name pos:start="13:14" pos:end="13:16">res</name> <operator pos:start="13:18" pos:end="13:19">==</operator> <literal type="number" pos:start="13:21" pos:end="13:21">1</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:17"><block_content pos:start="15:9" pos:end="15:17">

        <return pos:start="15:9" pos:end="15:17">return <expr pos:start="15:16" pos:end="15:16"><literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr>;</return></block_content></block></if>       <comment type="block" pos:start="15:25" pos:end="15:55">/* ...10 -&gt;  uncompressable  */</comment>

    <if type="elseif" pos:start="17:5" pos:end="19:17">else if <condition pos:start="17:13" pos:end="17:34">(<expr pos:start="17:14" pos:end="17:33"><call pos:start="17:14" pos:end="17:29"><name pos:start="17:14" pos:end="17:19">ff_ctz</name><argument_list pos:start="17:20" pos:end="17:29">(<argument pos:start="17:21" pos:end="17:28"><expr pos:start="17:21" pos:end="17:28"><name pos:start="17:21" pos:end="17:23">tmp</name> <operator pos:start="17:25" pos:end="17:26">&gt;&gt;</operator> <literal type="number" pos:start="17:28" pos:end="17:28">1</literal></expr></argument>)</argument_list></call> <operator pos:start="17:31" pos:end="17:31">&gt;</operator> <literal type="number" pos:start="17:33" pos:end="17:33">0</literal></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:17"><block_content pos:start="19:9" pos:end="19:17">

        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</return></block_content></block></if>       <comment type="block" pos:start="19:25" pos:end="19:55">/* ...0 1 -&gt; uncompressable  */</comment>

    <else pos:start="21:5" pos:end="23:17">else<block type="pseudo" pos:start="23:9" pos:end="23:17"><block_content pos:start="23:9" pos:end="23:17">

        <return pos:start="23:9" pos:end="23:17">return <expr pos:start="23:16" pos:end="23:16"><literal type="number" pos:start="23:16" pos:end="23:16">1</literal></expr>;</return></block_content></block></else></if_stmt>       <comment type="block" pos:start="23:25" pos:end="23:55">/* ...1 1 -&gt; compressable    */</comment>

</block_content>}</block></function>
</unit>
