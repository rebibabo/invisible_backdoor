<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10203.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:38">sigp_stop_and_store_status</name><parameter_list pos:start="1:39" pos:end="1:73">(<parameter pos:start="1:40" pos:end="1:51"><decl pos:start="1:40" pos:end="1:51"><type pos:start="1:40" pos:end="1:51"><name pos:start="1:40" pos:end="1:47">CPUState</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:51">cs</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:72"><decl pos:start="1:54" pos:end="1:72"><type pos:start="1:54" pos:end="1:72"><name pos:start="1:54" pos:end="1:68">run_on_cpu_data</name></type> <name pos:start="1:70" pos:end="1:72">arg</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:41">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">S390CPU</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:16">cpu</name> <init pos:start="5:18" pos:end="5:31">= <expr pos:start="5:20" pos:end="5:31"><call pos:start="5:20" pos:end="5:31"><name pos:start="5:20" pos:end="5:27">S390_CPU</name><argument_list pos:start="5:28" pos:end="5:31">(<argument pos:start="5:29" pos:end="5:30"><expr pos:start="5:29" pos:end="5:30"><name pos:start="5:29" pos:end="5:30">cs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">SigpInfo</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">si</name> <init pos:start="7:18" pos:end="7:31">= <expr pos:start="7:20" pos:end="7:31"><name pos:start="7:20" pos:end="7:31"><name pos:start="7:20" pos:end="7:22">arg</name><operator pos:start="7:23" pos:end="7:23">.</operator><name pos:start="7:24" pos:end="7:31">host_ptr</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="13:6"><decl pos:start="9:5" pos:end="13:5"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:23">kvm_s390_irq</name></name></type> <name pos:start="9:25" pos:end="9:27">irq</name> <init pos:start="9:29" pos:end="13:5">= <expr pos:start="9:31" pos:end="13:5"><block pos:start="9:31" pos:end="13:5">{

        <expr pos:start="11:9" pos:end="11:34"><operator pos:start="11:9" pos:end="11:9">.</operator><name pos:start="11:10" pos:end="11:13">type</name> <operator pos:start="11:15" pos:end="11:15">=</operator> <name pos:start="11:17" pos:end="11:34">KVM_S390_SIGP_STOP</name></expr>,

    }</block></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:48">/* disabled wait - sleeping in user space */</comment>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:69">(<expr pos:start="19:9" pos:end="19:68"><call pos:start="19:9" pos:end="19:31"><name pos:start="19:9" pos:end="19:26">s390_cpu_get_state</name><argument_list pos:start="19:27" pos:end="19:31">(<argument pos:start="19:28" pos:end="19:30"><expr pos:start="19:28" pos:end="19:30"><name pos:start="19:28" pos:end="19:30">cpu</name></expr></argument>)</argument_list></call> <operator pos:start="19:33" pos:end="19:34">==</operator> <name pos:start="19:36" pos:end="19:54">CPU_STATE_OPERATING</name> <operator pos:start="19:56" pos:end="19:57">&amp;&amp;</operator> <name pos:start="19:59" pos:end="19:68"><name pos:start="19:59" pos:end="19:60">cs</name><operator pos:start="19:61" pos:end="19:62">-&gt;</operator><name pos:start="19:63" pos:end="19:68">halted</name></name></expr>)</condition> <block pos:start="19:71" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:51">

        <expr_stmt pos:start="21:9" pos:end="21:51"><expr pos:start="21:9" pos:end="21:50"><call pos:start="21:9" pos:end="21:50"><name pos:start="21:9" pos:end="21:26">s390_cpu_set_state</name><argument_list pos:start="21:27" pos:end="21:50">(<argument pos:start="21:28" pos:end="21:44"><expr pos:start="21:28" pos:end="21:44"><name pos:start="21:28" pos:end="21:44">CPU_STATE_STOPPED</name></expr></argument>, <argument pos:start="21:47" pos:end="21:49"><expr pos:start="21:47" pos:end="21:49"><name pos:start="21:47" pos:end="21:49">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="27:5" pos:end="49:5">switch <condition pos:start="27:12" pos:end="27:36">(<expr pos:start="27:13" pos:end="27:35"><call pos:start="27:13" pos:end="27:35"><name pos:start="27:13" pos:end="27:30">s390_cpu_get_state</name><argument_list pos:start="27:31" pos:end="27:35">(<argument pos:start="27:32" pos:end="27:34"><expr pos:start="27:32" pos:end="27:34"><name pos:start="27:32" pos:end="27:34">cpu</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:38" pos:end="49:5">{<block_content pos:start="29:5" pos:end="47:14">

    <case pos:start="29:5" pos:end="29:29">case <expr pos:start="29:10" pos:end="29:28"><name pos:start="29:10" pos:end="29:28">CPU_STATE_OPERATING</name></expr>:</case>

        <expr_stmt pos:start="31:9" pos:end="31:53"><expr pos:start="31:9" pos:end="31:52"><name pos:start="31:9" pos:end="31:27"><name pos:start="31:9" pos:end="31:11">cpu</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:16">env</name><operator pos:start="31:17" pos:end="31:17">.</operator><name pos:start="31:18" pos:end="31:27">sigp_order</name></name> <operator pos:start="31:29" pos:end="31:29">=</operator> <name pos:start="31:31" pos:end="31:52">SIGP_STOP_STORE_STATUS</name></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:43"><expr pos:start="33:9" pos:end="33:42"><call pos:start="33:9" pos:end="33:42"><name pos:start="33:9" pos:end="33:31">kvm_s390_vcpu_interrupt</name><argument_list pos:start="33:32" pos:end="33:42">(<argument pos:start="33:33" pos:end="33:35"><expr pos:start="33:33" pos:end="33:35"><name pos:start="33:33" pos:end="33:35">cpu</name></expr></argument>, <argument pos:start="33:38" pos:end="33:41"><expr pos:start="33:38" pos:end="33:41"><operator pos:start="33:38" pos:end="33:38">&amp;</operator><name pos:start="33:39" pos:end="33:41">irq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="35:9" pos:end="35:70">/* store will be performed when handling the stop intercept */</comment>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    <case pos:start="39:5" pos:end="39:27">case <expr pos:start="39:10" pos:end="39:26"><name pos:start="39:10" pos:end="39:26">CPU_STATE_STOPPED</name></expr>:</case>

        <comment type="block" pos:start="41:9" pos:end="41:52">/* already stopped, just store the status */</comment>

        <expr_stmt pos:start="43:9" pos:end="43:34"><expr pos:start="43:9" pos:end="43:33"><call pos:start="43:9" pos:end="43:33"><name pos:start="43:9" pos:end="43:29">cpu_synchronize_state</name><argument_list pos:start="43:30" pos:end="43:33">(<argument pos:start="43:31" pos:end="43:32"><expr pos:start="43:31" pos:end="43:32"><name pos:start="43:31" pos:end="43:32">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:73"><expr pos:start="45:9" pos:end="45:72"><call pos:start="45:9" pos:end="45:72"><name pos:start="45:9" pos:end="45:29">kvm_s390_store_status</name><argument_list pos:start="45:30" pos:end="45:72">(<argument pos:start="45:31" pos:end="45:33"><expr pos:start="45:31" pos:end="45:33"><name pos:start="45:31" pos:end="45:33">cpu</name></expr></argument>, <argument pos:start="45:36" pos:end="45:65"><expr pos:start="45:36" pos:end="45:65"><name pos:start="45:36" pos:end="45:65">KVM_S390_STORE_STATUS_DEF_ADDR</name></expr></argument>, <argument pos:start="45:68" pos:end="45:71"><expr pos:start="45:68" pos:end="45:71"><name pos:start="45:68" pos:end="45:71">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="47:9" pos:end="47:14">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="51:5" pos:end="51:41"><expr pos:start="51:5" pos:end="51:40"><name pos:start="51:5" pos:end="51:10"><name pos:start="51:5" pos:end="51:6">si</name><operator pos:start="51:7" pos:end="51:8">-&gt;</operator><name pos:start="51:9" pos:end="51:10">cc</name></name> <operator pos:start="51:12" pos:end="51:12">=</operator> <name pos:start="51:14" pos:end="51:40">SIGP_CC_ORDER_CODE_ACCEPTED</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
