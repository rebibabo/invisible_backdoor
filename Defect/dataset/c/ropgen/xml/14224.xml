<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14224.c" pos:tabs="8"><function pos:start="1:1" pos:end="17:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">realtime_init</name><parameter_list pos:start="1:26" pos:end="1:31">(<parameter pos:start="1:27" pos:end="1:30"><decl pos:start="1:27" pos:end="1:30"><type pos:start="1:27" pos:end="1:30"><name pos:start="1:27" pos:end="1:30">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="17:1">{<block_content pos:start="5:5" pos:end="15:5">

    <if_stmt pos:start="5:5" pos:end="15:5"><if pos:start="5:5" pos:end="15:5">if <condition pos:start="5:8" pos:end="5:21">(<expr pos:start="5:9" pos:end="5:20"><name pos:start="5:9" pos:end="5:20">enable_mlock</name></expr>)</condition> <block pos:start="5:23" pos:end="15:5">{<block_content pos:start="7:9" pos:end="13:9">

        <if_stmt pos:start="7:9" pos:end="13:9"><if pos:start="7:9" pos:end="13:9">if <condition pos:start="7:12" pos:end="7:27">(<expr pos:start="7:13" pos:end="7:26"><call pos:start="7:13" pos:end="7:22"><name pos:start="7:13" pos:end="7:20">os_mlock</name><argument_list pos:start="7:21" pos:end="7:22">()</argument_list></call> <operator pos:start="7:24" pos:end="7:24">&lt;</operator> <literal type="number" pos:start="7:26" pos:end="7:26">0</literal></expr>)</condition> <block pos:start="7:29" pos:end="13:9">{<block_content pos:start="9:13" pos:end="11:20">

            <expr_stmt pos:start="9:13" pos:end="9:61"><expr pos:start="9:13" pos:end="9:60"><call pos:start="9:13" pos:end="9:60"><name pos:start="9:13" pos:end="9:19">fprintf</name><argument_list pos:start="9:20" pos:end="9:60">(<argument pos:start="9:21" pos:end="9:26"><expr pos:start="9:21" pos:end="9:26"><name pos:start="9:21" pos:end="9:26">stderr</name></expr></argument>, <argument pos:start="9:29" pos:end="9:59"><expr pos:start="9:29" pos:end="9:59"><literal type="string" pos:start="9:29" pos:end="9:59">"qemu: locking memory failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="11:13" pos:end="11:20"><expr pos:start="11:13" pos:end="11:19"><call pos:start="11:13" pos:end="11:19"><name pos:start="11:13" pos:end="11:16">exit</name><argument_list pos:start="11:17" pos:end="11:19">(<argument pos:start="11:18" pos:end="11:18"><expr pos:start="11:18" pos:end="11:18"><literal type="number" pos:start="11:18" pos:end="11:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
