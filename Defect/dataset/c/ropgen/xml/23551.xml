<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23551.c" pos:tabs="8"><function pos:start="1:1" pos:end="131:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">cpu_dump_state</name> <parameter_list pos:start="1:21" pos:end="3:31">(<parameter pos:start="1:22" pos:end="1:34"><decl pos:start="1:22" pos:end="1:34"><type pos:start="1:22" pos:end="1:34"><name pos:start="1:22" pos:end="1:29">CPUState</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:34">env</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:43"><decl pos:start="1:37" pos:end="1:43"><type pos:start="1:37" pos:end="1:43"><name pos:start="1:37" pos:end="1:40">FILE</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">f</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:73"><decl pos:start="1:46" pos:end="1:73"><type pos:start="1:46" pos:end="1:73"><name pos:start="1:46" pos:end="1:61">fprintf_function</name></type> <name pos:start="1:63" pos:end="1:73">cpu_fprintf</name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:30"><decl pos:start="3:22" pos:end="3:30"><type pos:start="3:22" pos:end="3:30"><name pos:start="3:22" pos:end="3:24">int</name></type> <name pos:start="3:26" pos:end="3:30">flags</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="131:1">{<block_content pos:start="13:5" pos:end="130:0">

<cpp:define pos:start="7:1" pos:end="7:15">#<cpp:directive pos:start="7:2" pos:end="7:7">define</cpp:directive> <cpp:macro pos:start="7:9" pos:end="7:12"><name pos:start="7:9" pos:end="7:12">RGPL</name></cpp:macro>  <cpp:value pos:start="7:15" pos:end="7:15">4</cpp:value></cpp:define>

<cpp:define pos:start="9:1" pos:end="9:15">#<cpp:directive pos:start="9:2" pos:end="9:7">define</cpp:directive> <cpp:macro pos:start="9:9" pos:end="9:12"><name pos:start="9:9" pos:end="9:12">RFPL</name></cpp:macro>  <cpp:value pos:start="9:15" pos:end="9:15">4</cpp:value></cpp:define>



    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="21:55"><expr pos:start="17:5" pos:end="21:54"><call pos:start="17:5" pos:end="21:54"><name pos:start="17:5" pos:end="17:15">cpu_fprintf</name><argument_list pos:start="17:16" pos:end="21:54">(<argument pos:start="17:17" pos:end="17:17"><expr pos:start="17:17" pos:end="17:17"><name pos:start="17:17" pos:end="17:17">f</name></expr></argument>, <argument pos:start="17:20" pos:end="19:56"><expr pos:start="17:20" pos:end="19:56"><literal type="string" pos:start="17:20" pos:end="17:25">"NIP "</literal> <name pos:start="17:27" pos:end="17:39">TARGET_FMT_lx</name> <literal type="string" pos:start="17:41" pos:end="17:48">"   LR "</literal> <name pos:start="17:50" pos:end="17:62">TARGET_FMT_lx</name> <literal type="string" pos:start="17:64" pos:end="17:70">" CTR "</literal>

                <name pos:start="19:17" pos:end="19:29">TARGET_FMT_lx</name> <literal type="string" pos:start="19:31" pos:end="19:37">" XER "</literal> <name pos:start="19:39" pos:end="19:51">TARGET_FMT_lx</name> <literal type="string" pos:start="19:53" pos:end="19:56">"\n"</literal></expr></argument>,

                <argument pos:start="21:17" pos:end="21:24"><expr pos:start="21:17" pos:end="21:24"><name pos:start="21:17" pos:end="21:24"><name pos:start="21:17" pos:end="21:19">env</name><operator pos:start="21:20" pos:end="21:21">-&gt;</operator><name pos:start="21:22" pos:end="21:24">nip</name></name></expr></argument>, <argument pos:start="21:27" pos:end="21:33"><expr pos:start="21:27" pos:end="21:33"><name pos:start="21:27" pos:end="21:33"><name pos:start="21:27" pos:end="21:29">env</name><operator pos:start="21:30" pos:end="21:31">-&gt;</operator><name pos:start="21:32" pos:end="21:33">lr</name></name></expr></argument>, <argument pos:start="21:36" pos:end="21:43"><expr pos:start="21:36" pos:end="21:43"><name pos:start="21:36" pos:end="21:43"><name pos:start="21:36" pos:end="21:38">env</name><operator pos:start="21:39" pos:end="21:40">-&gt;</operator><name pos:start="21:41" pos:end="21:43">ctr</name></name></expr></argument>, <argument pos:start="21:46" pos:end="21:53"><expr pos:start="21:46" pos:end="21:53"><name pos:start="21:46" pos:end="21:53"><name pos:start="21:46" pos:end="21:48">env</name><operator pos:start="21:49" pos:end="21:50">-&gt;</operator><name pos:start="21:51" pos:end="21:53">xer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="30:0"><expr pos:start="23:5" pos:end="27:42"><call pos:start="23:5" pos:end="27:42"><name pos:start="23:5" pos:end="23:15">cpu_fprintf</name><argument_list pos:start="23:16" pos:end="27:42">(<argument pos:start="23:17" pos:end="23:17"><expr pos:start="23:17" pos:end="23:17"><name pos:start="23:17" pos:end="23:17">f</name></expr></argument>, <argument pos:start="23:20" pos:end="25:41"><expr pos:start="23:20" pos:end="25:41"><literal type="string" pos:start="23:20" pos:end="23:25">"MSR "</literal> <name pos:start="23:27" pos:end="23:39">TARGET_FMT_lx</name> <literal type="string" pos:start="23:41" pos:end="23:48">" HID0 "</literal> <name pos:start="23:50" pos:end="23:62">TARGET_FMT_lx</name> <literal type="string" pos:start="23:64" pos:end="23:70">"  HF "</literal>

                <name pos:start="25:17" pos:end="25:29">TARGET_FMT_lx</name> <literal type="string" pos:start="25:31" pos:end="25:41">" idx %d\n"</literal></expr></argument>, <argument pos:start="25:44" pos:end="25:51"><expr pos:start="25:44" pos:end="25:51"><name pos:start="25:44" pos:end="25:51"><name pos:start="25:44" pos:end="25:46">env</name><operator pos:start="25:47" pos:end="25:48">-&gt;</operator><name pos:start="25:49" pos:end="25:51">msr</name></name></expr></argument>, <argument pos:start="25:54" pos:end="25:71"><expr pos:start="25:54" pos:end="25:71"><name pos:start="25:54" pos:end="25:71"><name pos:start="25:54" pos:end="25:56">env</name><operator pos:start="25:57" pos:end="25:58">-&gt;</operator><name pos:start="25:59" pos:end="25:61">spr</name><index pos:start="25:62" pos:end="25:71">[<expr pos:start="25:63" pos:end="25:70"><name pos:start="25:63" pos:end="25:70">SPR_HID0</name></expr>]</index></name></expr></argument>,

                <argument pos:start="27:17" pos:end="27:27"><expr pos:start="27:17" pos:end="27:27"><name pos:start="27:17" pos:end="27:27"><name pos:start="27:17" pos:end="27:19">env</name><operator pos:start="27:20" pos:end="27:21">-&gt;</operator><name pos:start="27:22" pos:end="27:27">hflags</name></name></expr></argument>, <argument pos:start="27:30" pos:end="27:41"><expr pos:start="27:30" pos:end="27:41"><name pos:start="27:30" pos:end="27:41"><name pos:start="27:30" pos:end="27:32">env</name><operator pos:start="27:33" pos:end="27:34">-&gt;</operator><name pos:start="27:35" pos:end="27:41">mmu_idx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="29:1" pos:end="29:27">#<cpp:directive pos:start="29:2" pos:end="29:3">if</cpp:directive> <expr pos:start="29:5" pos:end="29:27"><operator pos:start="29:5" pos:end="29:5">!</operator><call pos:start="29:6" pos:end="29:27"><name pos:start="29:6" pos:end="29:12">defined</name><argument_list pos:start="29:13" pos:end="29:27">(<argument pos:start="29:14" pos:end="29:26"><expr pos:start="29:14" pos:end="29:26"><name pos:start="29:14" pos:end="29:26">NO_TIMER_DUMP</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="31:5" pos:end="52:0"><expr pos:start="31:5" pos:end="49:17"><call pos:start="31:5" pos:end="49:17"><name pos:start="31:5" pos:end="31:15">cpu_fprintf</name><argument_list pos:start="31:16" pos:end="49:17">(<argument pos:start="31:17" pos:end="31:17"><expr pos:start="31:17" pos:end="31:17"><name pos:start="31:17" pos:end="31:17">f</name></expr></argument>, <argument pos:start="31:20" pos:end="39:20"><expr pos:start="31:20" pos:end="39:20"><literal type="string" pos:start="31:20" pos:end="31:27">"TB %08"</literal> <name pos:start="31:29" pos:end="31:34">PRIu32</name> <literal type="string" pos:start="31:36" pos:end="31:41">" %08"</literal> <name pos:start="31:43" pos:end="34:0">PRIu64</name>

<cpp:if pos:start="33:1" pos:end="33:30">#<cpp:directive pos:start="33:2" pos:end="33:3">if</cpp:directive> <expr pos:start="33:5" pos:end="33:30"><operator pos:start="33:5" pos:end="33:5">!</operator><call pos:start="33:6" pos:end="33:30"><name pos:start="33:6" pos:end="33:12">defined</name><argument_list pos:start="33:13" pos:end="33:30">(<argument pos:start="33:14" pos:end="33:29"><expr pos:start="33:14" pos:end="33:29"><name pos:start="33:14" pos:end="33:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

                <literal type="string" pos:start="35:17" pos:end="35:27">" DECR %08"</literal> <name pos:start="35:29" pos:end="38:0">PRIu32</name>

<cpp:endif pos:start="37:1" pos:end="37:6">#<cpp:directive pos:start="37:2" pos:end="37:6">endif</cpp:directive></cpp:endif>

                <literal type="string" pos:start="39:17" pos:end="39:20">"\n"</literal></expr></argument>,

                <argument pos:start="41:17" pos:end="41:37"><expr pos:start="41:17" pos:end="41:37"><call pos:start="41:17" pos:end="41:37"><name pos:start="41:17" pos:end="41:32">cpu_ppc_load_tbu</name><argument_list pos:start="41:33" pos:end="41:37">(<argument pos:start="41:34" pos:end="41:36"><expr pos:start="41:34" pos:end="41:36"><name pos:start="41:34" pos:end="41:36">env</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="41:40" pos:end="44:0"><expr pos:start="41:40" pos:end="44:0"><call pos:start="41:40" pos:end="44:0"><name pos:start="41:40" pos:end="41:55">cpu_ppc_load_tbl</name><argument_list pos:start="41:56" pos:end="44:0">(<argument pos:start="41:57" pos:end="41:59"><expr pos:start="41:57" pos:end="41:59"><name pos:start="41:57" pos:end="41:59">env</name></expr></argument>)</argument_list></call></expr></argument>

<cpp:if pos:start="43:1" pos:end="43:30">#<cpp:directive pos:start="43:2" pos:end="43:3">if</cpp:directive> <expr pos:start="43:5" pos:end="43:30"><operator pos:start="43:5" pos:end="43:5">!</operator><call pos:start="43:6" pos:end="43:30"><name pos:start="43:6" pos:end="43:12">defined</name><argument_list pos:start="43:13" pos:end="43:30">(<argument pos:start="43:14" pos:end="43:29"><expr pos:start="43:14" pos:end="43:29"><name pos:start="43:14" pos:end="43:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

                , <argument pos:start="45:19" pos:end="48:0"><expr pos:start="45:19" pos:end="48:0"><call pos:start="45:19" pos:end="48:0"><name pos:start="45:19" pos:end="45:35">cpu_ppc_load_decr</name><argument_list pos:start="45:36" pos:end="48:0">(<argument pos:start="45:37" pos:end="45:39"><expr pos:start="45:37" pos:end="45:39"><name pos:start="45:37" pos:end="45:39">env</name></expr></argument>)</argument_list></call></expr></argument>

<cpp:endif pos:start="47:1" pos:end="47:6">#<cpp:directive pos:start="47:2" pos:end="47:6">endif</cpp:directive></cpp:endif>

                )</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="51:1" pos:end="51:6">#<cpp:directive pos:start="51:2" pos:end="51:6">endif</cpp:directive></cpp:endif>

    <for pos:start="53:5" pos:end="65:5">for <control pos:start="53:9" pos:end="53:28">(<init pos:start="53:10" pos:end="53:15"><expr pos:start="53:10" pos:end="53:14"><name pos:start="53:10" pos:end="53:10">i</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <literal type="number" pos:start="53:14" pos:end="53:14">0</literal></expr>;</init> <condition pos:start="53:17" pos:end="53:23"><expr pos:start="53:17" pos:end="53:22"><name pos:start="53:17" pos:end="53:17">i</name> <operator pos:start="53:19" pos:end="53:19">&lt;</operator> <literal type="number" pos:start="53:21" pos:end="53:22">32</literal></expr>;</condition> <incr pos:start="53:25" pos:end="53:27"><expr pos:start="53:25" pos:end="53:27"><name pos:start="53:25" pos:end="53:25">i</name><operator pos:start="53:26" pos:end="53:27">++</operator></expr></incr>)</control> <block pos:start="53:30" pos:end="65:5">{<block_content pos:start="55:9" pos:end="63:33">

        <if_stmt pos:start="55:9" pos:end="57:41"><if pos:start="55:9" pos:end="57:41">if <condition pos:start="55:12" pos:end="55:34">(<expr pos:start="55:13" pos:end="55:33"><operator pos:start="55:13" pos:end="55:13">(</operator><name pos:start="55:14" pos:end="55:14">i</name> <operator pos:start="55:16" pos:end="55:16">&amp;</operator> <operator pos:start="55:18" pos:end="55:18">(</operator><name pos:start="55:19" pos:end="55:22">RGPL</name> <operator pos:start="55:24" pos:end="55:24">-</operator> <literal type="number" pos:start="55:26" pos:end="55:26">1</literal><operator pos:start="55:27" pos:end="55:27">)</operator><operator pos:start="55:28" pos:end="55:28">)</operator> <operator pos:start="55:30" pos:end="55:31">==</operator> <literal type="number" pos:start="55:33" pos:end="55:33">0</literal></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:41"><block_content pos:start="57:13" pos:end="57:41">

            <expr_stmt pos:start="57:13" pos:end="57:41"><expr pos:start="57:13" pos:end="57:40"><call pos:start="57:13" pos:end="57:40"><name pos:start="57:13" pos:end="57:23">cpu_fprintf</name><argument_list pos:start="57:24" pos:end="57:40">(<argument pos:start="57:25" pos:end="57:25"><expr pos:start="57:25" pos:end="57:25"><name pos:start="57:25" pos:end="57:25">f</name></expr></argument>, <argument pos:start="57:28" pos:end="57:36"><expr pos:start="57:28" pos:end="57:36"><literal type="string" pos:start="57:28" pos:end="57:36">"GPR%02d"</literal></expr></argument>, <argument pos:start="57:39" pos:end="57:39"><expr pos:start="57:39" pos:end="57:39"><name pos:start="57:39" pos:end="57:39">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:61"><expr pos:start="59:9" pos:end="59:60"><call pos:start="59:9" pos:end="59:60"><name pos:start="59:9" pos:end="59:19">cpu_fprintf</name><argument_list pos:start="59:20" pos:end="59:60">(<argument pos:start="59:21" pos:end="59:21"><expr pos:start="59:21" pos:end="59:21"><name pos:start="59:21" pos:end="59:21">f</name></expr></argument>, <argument pos:start="59:24" pos:end="59:37"><expr pos:start="59:24" pos:end="59:37"><literal type="string" pos:start="59:24" pos:end="59:30">" %016"</literal> <name pos:start="59:32" pos:end="59:37">PRIx64</name></expr></argument>, <argument pos:start="59:40" pos:end="59:59"><expr pos:start="59:40" pos:end="59:59"><call pos:start="59:40" pos:end="59:59"><name pos:start="59:40" pos:end="59:51">ppc_dump_gpr</name><argument_list pos:start="59:52" pos:end="59:59">(<argument pos:start="59:53" pos:end="59:55"><expr pos:start="59:53" pos:end="59:55"><name pos:start="59:53" pos:end="59:55">env</name></expr></argument>, <argument pos:start="59:58" pos:end="59:58"><expr pos:start="59:58" pos:end="59:58"><name pos:start="59:58" pos:end="59:58">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="61:9" pos:end="63:33"><if pos:start="61:9" pos:end="63:33">if <condition pos:start="61:12" pos:end="61:43">(<expr pos:start="61:13" pos:end="61:42"><operator pos:start="61:13" pos:end="61:13">(</operator><name pos:start="61:14" pos:end="61:14">i</name> <operator pos:start="61:16" pos:end="61:16">&amp;</operator> <operator pos:start="61:18" pos:end="61:18">(</operator><name pos:start="61:19" pos:end="61:22">RGPL</name> <operator pos:start="61:24" pos:end="61:24">-</operator> <literal type="number" pos:start="61:26" pos:end="61:26">1</literal><operator pos:start="61:27" pos:end="61:27">)</operator><operator pos:start="61:28" pos:end="61:28">)</operator> <operator pos:start="61:30" pos:end="61:31">==</operator> <operator pos:start="61:33" pos:end="61:33">(</operator><name pos:start="61:34" pos:end="61:37">RGPL</name> <operator pos:start="61:39" pos:end="61:39">-</operator> <literal type="number" pos:start="61:41" pos:end="61:41">1</literal><operator pos:start="61:42" pos:end="61:42">)</operator></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:33"><block_content pos:start="63:13" pos:end="63:33">

            <expr_stmt pos:start="63:13" pos:end="63:33"><expr pos:start="63:13" pos:end="63:32"><call pos:start="63:13" pos:end="63:32"><name pos:start="63:13" pos:end="63:23">cpu_fprintf</name><argument_list pos:start="63:24" pos:end="63:32">(<argument pos:start="63:25" pos:end="63:25"><expr pos:start="63:25" pos:end="63:25"><name pos:start="63:25" pos:end="63:25">f</name></expr></argument>, <argument pos:start="63:28" pos:end="63:31"><expr pos:start="63:28" pos:end="63:31"><literal type="string" pos:start="63:28" pos:end="63:31">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="67:5" pos:end="67:26"><expr pos:start="67:5" pos:end="67:25"><call pos:start="67:5" pos:end="67:25"><name pos:start="67:5" pos:end="67:15">cpu_fprintf</name><argument_list pos:start="67:16" pos:end="67:25">(<argument pos:start="67:17" pos:end="67:17"><expr pos:start="67:17" pos:end="67:17"><name pos:start="67:17" pos:end="67:17">f</name></expr></argument>, <argument pos:start="67:20" pos:end="67:24"><expr pos:start="67:20" pos:end="67:24"><literal type="string" pos:start="67:20" pos:end="67:24">"CR "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="69:5" pos:end="71:44">for <control pos:start="69:9" pos:end="69:27">(<init pos:start="69:10" pos:end="69:15"><expr pos:start="69:10" pos:end="69:14"><name pos:start="69:10" pos:end="69:10">i</name> <operator pos:start="69:12" pos:end="69:12">=</operator> <literal type="number" pos:start="69:14" pos:end="69:14">0</literal></expr>;</init> <condition pos:start="69:17" pos:end="69:22"><expr pos:start="69:17" pos:end="69:21"><name pos:start="69:17" pos:end="69:17">i</name> <operator pos:start="69:19" pos:end="69:19">&lt;</operator> <literal type="number" pos:start="69:21" pos:end="69:21">8</literal></expr>;</condition> <incr pos:start="69:24" pos:end="69:26"><expr pos:start="69:24" pos:end="69:26"><name pos:start="69:24" pos:end="69:24">i</name><operator pos:start="69:25" pos:end="69:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="71:9" pos:end="71:44"><block_content pos:start="71:9" pos:end="71:44">

        <expr_stmt pos:start="71:9" pos:end="71:44"><expr pos:start="71:9" pos:end="71:43"><call pos:start="71:9" pos:end="71:43"><name pos:start="71:9" pos:end="71:19">cpu_fprintf</name><argument_list pos:start="71:20" pos:end="71:43">(<argument pos:start="71:21" pos:end="71:21"><expr pos:start="71:21" pos:end="71:21"><name pos:start="71:21" pos:end="71:21">f</name></expr></argument>, <argument pos:start="71:24" pos:end="71:29"><expr pos:start="71:24" pos:end="71:29"><literal type="string" pos:start="71:24" pos:end="71:29">"%01x"</literal></expr></argument>, <argument pos:start="71:32" pos:end="71:42"><expr pos:start="71:32" pos:end="71:42"><name pos:start="71:32" pos:end="71:42"><name pos:start="71:32" pos:end="71:34">env</name><operator pos:start="71:35" pos:end="71:36">-&gt;</operator><name pos:start="71:37" pos:end="71:39">crf</name><index pos:start="71:40" pos:end="71:42">[<expr pos:start="71:41" pos:end="71:41"><name pos:start="71:41" pos:end="71:41">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="73:5" pos:end="73:26"><expr pos:start="73:5" pos:end="73:25"><call pos:start="73:5" pos:end="73:25"><name pos:start="73:5" pos:end="73:15">cpu_fprintf</name><argument_list pos:start="73:16" pos:end="73:25">(<argument pos:start="73:17" pos:end="73:17"><expr pos:start="73:17" pos:end="73:17"><name pos:start="73:17" pos:end="73:17">f</name></expr></argument>, <argument pos:start="73:20" pos:end="73:24"><expr pos:start="73:20" pos:end="73:24"><literal type="string" pos:start="73:20" pos:end="73:24">"  ["</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="75:5" pos:end="93:5">for <control pos:start="75:9" pos:end="75:27">(<init pos:start="75:10" pos:end="75:15"><expr pos:start="75:10" pos:end="75:14"><name pos:start="75:10" pos:end="75:10">i</name> <operator pos:start="75:12" pos:end="75:12">=</operator> <literal type="number" pos:start="75:14" pos:end="75:14">0</literal></expr>;</init> <condition pos:start="75:17" pos:end="75:22"><expr pos:start="75:17" pos:end="75:21"><name pos:start="75:17" pos:end="75:17">i</name> <operator pos:start="75:19" pos:end="75:19">&lt;</operator> <literal type="number" pos:start="75:21" pos:end="75:21">8</literal></expr>;</condition> <incr pos:start="75:24" pos:end="75:26"><expr pos:start="75:24" pos:end="75:26"><name pos:start="75:24" pos:end="75:24">i</name><operator pos:start="75:25" pos:end="75:26">++</operator></expr></incr>)</control> <block pos:start="75:29" pos:end="93:5">{<block_content pos:start="77:9" pos:end="91:67">

        <decl_stmt pos:start="77:9" pos:end="77:21"><decl pos:start="77:9" pos:end="77:20"><type pos:start="77:9" pos:end="77:12"><name pos:start="77:9" pos:end="77:12">char</name></type> <name pos:start="77:14" pos:end="77:14">a</name> <init pos:start="77:16" pos:end="77:20">= <expr pos:start="77:18" pos:end="77:20"><literal type="char" pos:start="77:18" pos:end="77:20">'-'</literal></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="79:9" pos:end="89:20"><if pos:start="79:9" pos:end="81:20">if <condition pos:start="79:12" pos:end="79:31">(<expr pos:start="79:13" pos:end="79:30"><name pos:start="79:13" pos:end="79:23"><name pos:start="79:13" pos:end="79:15">env</name><operator pos:start="79:16" pos:end="79:17">-&gt;</operator><name pos:start="79:18" pos:end="79:20">crf</name><index pos:start="79:21" pos:end="79:23">[<expr pos:start="79:22" pos:end="79:22"><name pos:start="79:22" pos:end="79:22">i</name></expr>]</index></name> <operator pos:start="79:25" pos:end="79:25">&amp;</operator> <literal type="number" pos:start="79:27" pos:end="79:30">0x08</literal></expr>)</condition><block type="pseudo" pos:start="81:13" pos:end="81:20"><block_content pos:start="81:13" pos:end="81:20">

            <expr_stmt pos:start="81:13" pos:end="81:20"><expr pos:start="81:13" pos:end="81:19"><name pos:start="81:13" pos:end="81:13">a</name> <operator pos:start="81:15" pos:end="81:15">=</operator> <literal type="char" pos:start="81:17" pos:end="81:19">'L'</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="83:9" pos:end="85:20">else if <condition pos:start="83:17" pos:end="83:36">(<expr pos:start="83:18" pos:end="83:35"><name pos:start="83:18" pos:end="83:28"><name pos:start="83:18" pos:end="83:20">env</name><operator pos:start="83:21" pos:end="83:22">-&gt;</operator><name pos:start="83:23" pos:end="83:25">crf</name><index pos:start="83:26" pos:end="83:28">[<expr pos:start="83:27" pos:end="83:27"><name pos:start="83:27" pos:end="83:27">i</name></expr>]</index></name> <operator pos:start="83:30" pos:end="83:30">&amp;</operator> <literal type="number" pos:start="83:32" pos:end="83:35">0x04</literal></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:20"><block_content pos:start="85:13" pos:end="85:20">

            <expr_stmt pos:start="85:13" pos:end="85:20"><expr pos:start="85:13" pos:end="85:19"><name pos:start="85:13" pos:end="85:13">a</name> <operator pos:start="85:15" pos:end="85:15">=</operator> <literal type="char" pos:start="85:17" pos:end="85:19">'G'</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="87:9" pos:end="89:20">else if <condition pos:start="87:17" pos:end="87:36">(<expr pos:start="87:18" pos:end="87:35"><name pos:start="87:18" pos:end="87:28"><name pos:start="87:18" pos:end="87:20">env</name><operator pos:start="87:21" pos:end="87:22">-&gt;</operator><name pos:start="87:23" pos:end="87:25">crf</name><index pos:start="87:26" pos:end="87:28">[<expr pos:start="87:27" pos:end="87:27"><name pos:start="87:27" pos:end="87:27">i</name></expr>]</index></name> <operator pos:start="87:30" pos:end="87:30">&amp;</operator> <literal type="number" pos:start="87:32" pos:end="87:35">0x02</literal></expr>)</condition><block type="pseudo" pos:start="89:13" pos:end="89:20"><block_content pos:start="89:13" pos:end="89:20">

            <expr_stmt pos:start="89:13" pos:end="89:20"><expr pos:start="89:13" pos:end="89:19"><name pos:start="89:13" pos:end="89:13">a</name> <operator pos:start="89:15" pos:end="89:15">=</operator> <literal type="char" pos:start="89:17" pos:end="89:19">'E'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:67"><expr pos:start="91:9" pos:end="91:66"><call pos:start="91:9" pos:end="91:66"><name pos:start="91:9" pos:end="91:19">cpu_fprintf</name><argument_list pos:start="91:20" pos:end="91:66">(<argument pos:start="91:21" pos:end="91:21"><expr pos:start="91:21" pos:end="91:21"><name pos:start="91:21" pos:end="91:21">f</name></expr></argument>, <argument pos:start="91:24" pos:end="91:30"><expr pos:start="91:24" pos:end="91:30"><literal type="string" pos:start="91:24" pos:end="91:30">" %c%c"</literal></expr></argument>, <argument pos:start="91:33" pos:end="91:33"><expr pos:start="91:33" pos:end="91:33"><name pos:start="91:33" pos:end="91:33">a</name></expr></argument>, <argument pos:start="91:36" pos:end="91:65"><expr pos:start="91:36" pos:end="91:65"><ternary pos:start="91:36" pos:end="91:65"><condition pos:start="91:36" pos:end="91:55"><expr pos:start="91:36" pos:end="91:53"><name pos:start="91:36" pos:end="91:46"><name pos:start="91:36" pos:end="91:38">env</name><operator pos:start="91:39" pos:end="91:40">-&gt;</operator><name pos:start="91:41" pos:end="91:43">crf</name><index pos:start="91:44" pos:end="91:46">[<expr pos:start="91:45" pos:end="91:45"><name pos:start="91:45" pos:end="91:45">i</name></expr>]</index></name> <operator pos:start="91:48" pos:end="91:48">&amp;</operator> <literal type="number" pos:start="91:50" pos:end="91:53">0x01</literal></expr> ?</condition><then pos:start="91:57" pos:end="91:59"> <expr pos:start="91:57" pos:end="91:59"><literal type="char" pos:start="91:57" pos:end="91:59">'O'</literal></expr> </then><else pos:start="91:61" pos:end="91:65">: <expr pos:start="91:63" pos:end="91:65"><literal type="char" pos:start="91:63" pos:end="91:65">' '</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="95:5" pos:end="97:35"><expr pos:start="95:5" pos:end="97:34"><call pos:start="95:5" pos:end="97:34"><name pos:start="95:5" pos:end="95:15">cpu_fprintf</name><argument_list pos:start="95:16" pos:end="97:34">(<argument pos:start="95:17" pos:end="95:17"><expr pos:start="95:17" pos:end="95:17"><name pos:start="95:17" pos:end="95:17">f</name></expr></argument>, <argument pos:start="95:20" pos:end="95:59"><expr pos:start="95:20" pos:end="95:59"><literal type="string" pos:start="95:20" pos:end="95:40">" ]             RES "</literal> <name pos:start="95:42" pos:end="95:54">TARGET_FMT_lx</name> <literal type="string" pos:start="95:56" pos:end="95:59">"\n"</literal></expr></argument>,

                <argument pos:start="97:17" pos:end="97:33"><expr pos:start="97:17" pos:end="97:33"><name pos:start="97:17" pos:end="97:33"><name pos:start="97:17" pos:end="97:19">env</name><operator pos:start="97:20" pos:end="97:21">-&gt;</operator><name pos:start="97:22" pos:end="97:33">reserve_addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="99:5" pos:end="111:5">for <control pos:start="99:9" pos:end="99:28">(<init pos:start="99:10" pos:end="99:15"><expr pos:start="99:10" pos:end="99:14"><name pos:start="99:10" pos:end="99:10">i</name> <operator pos:start="99:12" pos:end="99:12">=</operator> <literal type="number" pos:start="99:14" pos:end="99:14">0</literal></expr>;</init> <condition pos:start="99:17" pos:end="99:23"><expr pos:start="99:17" pos:end="99:22"><name pos:start="99:17" pos:end="99:17">i</name> <operator pos:start="99:19" pos:end="99:19">&lt;</operator> <literal type="number" pos:start="99:21" pos:end="99:22">32</literal></expr>;</condition> <incr pos:start="99:25" pos:end="99:27"><expr pos:start="99:25" pos:end="99:27"><name pos:start="99:25" pos:end="99:25">i</name><operator pos:start="99:26" pos:end="99:27">++</operator></expr></incr>)</control> <block pos:start="99:30" pos:end="111:5">{<block_content pos:start="101:9" pos:end="109:33">

        <if_stmt pos:start="101:9" pos:end="103:41"><if pos:start="101:9" pos:end="103:41">if <condition pos:start="101:12" pos:end="101:34">(<expr pos:start="101:13" pos:end="101:33"><operator pos:start="101:13" pos:end="101:13">(</operator><name pos:start="101:14" pos:end="101:14">i</name> <operator pos:start="101:16" pos:end="101:16">&amp;</operator> <operator pos:start="101:18" pos:end="101:18">(</operator><name pos:start="101:19" pos:end="101:22">RFPL</name> <operator pos:start="101:24" pos:end="101:24">-</operator> <literal type="number" pos:start="101:26" pos:end="101:26">1</literal><operator pos:start="101:27" pos:end="101:27">)</operator><operator pos:start="101:28" pos:end="101:28">)</operator> <operator pos:start="101:30" pos:end="101:31">==</operator> <literal type="number" pos:start="101:33" pos:end="101:33">0</literal></expr>)</condition><block type="pseudo" pos:start="103:13" pos:end="103:41"><block_content pos:start="103:13" pos:end="103:41">

            <expr_stmt pos:start="103:13" pos:end="103:41"><expr pos:start="103:13" pos:end="103:40"><call pos:start="103:13" pos:end="103:40"><name pos:start="103:13" pos:end="103:23">cpu_fprintf</name><argument_list pos:start="103:24" pos:end="103:40">(<argument pos:start="103:25" pos:end="103:25"><expr pos:start="103:25" pos:end="103:25"><name pos:start="103:25" pos:end="103:25">f</name></expr></argument>, <argument pos:start="103:28" pos:end="103:36"><expr pos:start="103:28" pos:end="103:36"><literal type="string" pos:start="103:28" pos:end="103:36">"FPR%02d"</literal></expr></argument>, <argument pos:start="103:39" pos:end="103:39"><expr pos:start="103:39" pos:end="103:39"><name pos:start="103:39" pos:end="103:39">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:68"><expr pos:start="105:9" pos:end="105:67"><call pos:start="105:9" pos:end="105:67"><name pos:start="105:9" pos:end="105:19">cpu_fprintf</name><argument_list pos:start="105:20" pos:end="105:67">(<argument pos:start="105:21" pos:end="105:21"><expr pos:start="105:21" pos:end="105:21"><name pos:start="105:21" pos:end="105:21">f</name></expr></argument>, <argument pos:start="105:24" pos:end="105:37"><expr pos:start="105:24" pos:end="105:37"><literal type="string" pos:start="105:24" pos:end="105:30">" %016"</literal> <name pos:start="105:32" pos:end="105:37">PRIx64</name></expr></argument>, <argument pos:start="105:40" pos:end="105:66"><expr pos:start="105:40" pos:end="105:66"><operator pos:start="105:40" pos:end="105:40">*</operator><operator pos:start="105:41" pos:end="105:41">(</operator><operator pos:start="105:42" pos:end="105:42">(</operator><name pos:start="105:43" pos:end="105:50">uint64_t</name> <operator pos:start="105:52" pos:end="105:52">*</operator><operator pos:start="105:53" pos:end="105:53">)</operator><operator pos:start="105:54" pos:end="105:54">&amp;</operator><name pos:start="105:55" pos:end="105:65"><name pos:start="105:55" pos:end="105:57">env</name><operator pos:start="105:58" pos:end="105:59">-&gt;</operator><name pos:start="105:60" pos:end="105:62">fpr</name><index pos:start="105:63" pos:end="105:65">[<expr pos:start="105:64" pos:end="105:64"><name pos:start="105:64" pos:end="105:64">i</name></expr>]</index></name><operator pos:start="105:66" pos:end="105:66">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="107:9" pos:end="109:33"><if pos:start="107:9" pos:end="109:33">if <condition pos:start="107:12" pos:end="107:43">(<expr pos:start="107:13" pos:end="107:42"><operator pos:start="107:13" pos:end="107:13">(</operator><name pos:start="107:14" pos:end="107:14">i</name> <operator pos:start="107:16" pos:end="107:16">&amp;</operator> <operator pos:start="107:18" pos:end="107:18">(</operator><name pos:start="107:19" pos:end="107:22">RFPL</name> <operator pos:start="107:24" pos:end="107:24">-</operator> <literal type="number" pos:start="107:26" pos:end="107:26">1</literal><operator pos:start="107:27" pos:end="107:27">)</operator><operator pos:start="107:28" pos:end="107:28">)</operator> <operator pos:start="107:30" pos:end="107:31">==</operator> <operator pos:start="107:33" pos:end="107:33">(</operator><name pos:start="107:34" pos:end="107:37">RFPL</name> <operator pos:start="107:39" pos:end="107:39">-</operator> <literal type="number" pos:start="107:41" pos:end="107:41">1</literal><operator pos:start="107:42" pos:end="107:42">)</operator></expr>)</condition><block type="pseudo" pos:start="109:13" pos:end="109:33"><block_content pos:start="109:13" pos:end="109:33">

            <expr_stmt pos:start="109:13" pos:end="109:33"><expr pos:start="109:13" pos:end="109:32"><call pos:start="109:13" pos:end="109:32"><name pos:start="109:13" pos:end="109:23">cpu_fprintf</name><argument_list pos:start="109:24" pos:end="109:32">(<argument pos:start="109:25" pos:end="109:25"><expr pos:start="109:25" pos:end="109:25"><name pos:start="109:25" pos:end="109:25">f</name></expr></argument>, <argument pos:start="109:28" pos:end="109:31"><expr pos:start="109:28" pos:end="109:31"><literal type="string" pos:start="109:28" pos:end="109:31">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="113:5" pos:end="116:0"><expr pos:start="113:5" pos:end="113:46"><call pos:start="113:5" pos:end="113:46"><name pos:start="113:5" pos:end="113:15">cpu_fprintf</name><argument_list pos:start="113:16" pos:end="113:46">(<argument pos:start="113:17" pos:end="113:17"><expr pos:start="113:17" pos:end="113:17"><name pos:start="113:17" pos:end="113:17">f</name></expr></argument>, <argument pos:start="113:20" pos:end="113:33"><expr pos:start="113:20" pos:end="113:33"><literal type="string" pos:start="113:20" pos:end="113:33">"FPSCR %08x\n"</literal></expr></argument>, <argument pos:start="113:36" pos:end="113:45"><expr pos:start="113:36" pos:end="113:45"><name pos:start="113:36" pos:end="113:45"><name pos:start="113:36" pos:end="113:38">env</name><operator pos:start="113:39" pos:end="113:40">-&gt;</operator><name pos:start="113:41" pos:end="113:45">fpscr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="115:1" pos:end="115:30">#<cpp:directive pos:start="115:2" pos:end="115:3">if</cpp:directive> <expr pos:start="115:5" pos:end="115:30"><operator pos:start="115:5" pos:end="115:5">!</operator><call pos:start="115:6" pos:end="115:30"><name pos:start="115:6" pos:end="115:12">defined</name><argument_list pos:start="115:13" pos:end="115:30">(<argument pos:start="115:14" pos:end="115:29"><expr pos:start="115:14" pos:end="115:29"><name pos:start="115:14" pos:end="115:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="117:5" pos:end="130:0"><expr pos:start="117:5" pos:end="121:26"><call pos:start="117:5" pos:end="121:26"><name pos:start="117:5" pos:end="117:15">cpu_fprintf</name><argument_list pos:start="117:16" pos:end="121:26">(<argument pos:start="117:17" pos:end="117:17"><expr pos:start="117:17" pos:end="117:17"><name pos:start="117:17" pos:end="117:17">f</name></expr></argument>, <argument pos:start="117:20" pos:end="119:34"><expr pos:start="117:20" pos:end="119:34"><literal type="string" pos:start="117:20" pos:end="117:26">"SRR0 "</literal> <name pos:start="117:28" pos:end="117:40">TARGET_FMT_lx</name> <literal type="string" pos:start="117:42" pos:end="117:49">" SRR1 "</literal> <name pos:start="117:51" pos:end="117:63">TARGET_FMT_lx</name> <literal type="string" pos:start="117:65" pos:end="117:72">" SDR1 "</literal>

                <name pos:start="119:17" pos:end="119:29">TARGET_FMT_lx</name> <literal type="string" pos:start="119:31" pos:end="119:34">"\n"</literal></expr></argument>, <argument pos:start="119:37" pos:end="119:54"><expr pos:start="119:37" pos:end="119:54"><name pos:start="119:37" pos:end="119:54"><name pos:start="119:37" pos:end="119:39">env</name><operator pos:start="119:40" pos:end="119:41">-&gt;</operator><name pos:start="119:42" pos:end="119:44">spr</name><index pos:start="119:45" pos:end="119:54">[<expr pos:start="119:46" pos:end="119:53"><name pos:start="119:46" pos:end="119:53">SPR_SRR0</name></expr>]</index></name></expr></argument>, <argument pos:start="119:57" pos:end="119:74"><expr pos:start="119:57" pos:end="119:74"><name pos:start="119:57" pos:end="119:74"><name pos:start="119:57" pos:end="119:59">env</name><operator pos:start="119:60" pos:end="119:61">-&gt;</operator><name pos:start="119:62" pos:end="119:64">spr</name><index pos:start="119:65" pos:end="119:74">[<expr pos:start="119:66" pos:end="119:73"><name pos:start="119:66" pos:end="119:73">SPR_SRR1</name></expr>]</index></name></expr></argument>,

                <argument pos:start="121:17" pos:end="121:25"><expr pos:start="121:17" pos:end="121:25"><name pos:start="121:17" pos:end="121:25"><name pos:start="121:17" pos:end="121:19">env</name><operator pos:start="121:20" pos:end="121:21">-&gt;</operator><name pos:start="121:22" pos:end="121:25">sdr1</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="123:1" pos:end="123:6">#<cpp:directive pos:start="123:2" pos:end="123:6">endif</cpp:directive></cpp:endif>



<cpp:undef pos:start="127:1" pos:end="127:11">#<cpp:directive pos:start="127:2" pos:end="127:6">undef</cpp:directive> <name pos:start="127:8" pos:end="127:11">RGPL</name></cpp:undef>

<cpp:undef pos:start="129:1" pos:end="129:11">#<cpp:directive pos:start="129:2" pos:end="129:6">undef</cpp:directive> <name pos:start="129:8" pos:end="129:11">RFPL</name></cpp:undef>

</block_content>}</block></function>
</unit>
