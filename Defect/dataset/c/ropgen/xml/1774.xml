<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1774.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:19">nic_init</name><parameter_list pos:start="1:20" pos:end="1:56">(<parameter pos:start="1:21" pos:end="1:38"><decl pos:start="1:21" pos:end="1:38"><type pos:start="1:21" pos:end="1:38"><name pos:start="1:21" pos:end="1:29">PCIDevice</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:38">pci_dev</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:55"><decl pos:start="1:41" pos:end="1:55"><type pos:start="1:41" pos:end="1:55"><name pos:start="1:41" pos:end="1:48">uint32_t</name></type> <name pos:start="1:50" pos:end="1:55">device</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="95:1">{<block_content pos:start="5:5" pos:end="93:13">

    <decl_stmt pos:start="5:5" pos:end="5:68"><decl pos:start="5:5" pos:end="5:67"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">PCIEEPRO100State</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:23">d</name> <init pos:start="5:25" pos:end="5:67">= <expr pos:start="5:27" pos:end="5:67"><call pos:start="5:27" pos:end="5:67"><name pos:start="5:27" pos:end="5:35">DO_UPCAST</name><argument_list pos:start="5:36" pos:end="5:67">(<argument pos:start="5:37" pos:end="5:52"><expr pos:start="5:37" pos:end="5:52"><name pos:start="5:37" pos:end="5:52">PCIEEPRO100State</name></expr></argument>, <argument pos:start="5:55" pos:end="5:57"><expr pos:start="5:55" pos:end="5:57"><name pos:start="5:55" pos:end="5:57">dev</name></expr></argument>, <argument pos:start="5:60" pos:end="5:66"><expr pos:start="5:60" pos:end="5:66"><name pos:start="5:60" pos:end="5:66">pci_dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">EEPRO100State</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:17"><expr pos:start="11:5" pos:end="11:16"><call pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:10">logout</name><argument_list pos:start="11:11" pos:end="11:16">(<argument pos:start="11:12" pos:end="11:15"><expr pos:start="11:12" pos:end="11:15"><literal type="string" pos:start="11:12" pos:end="11:15">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:39"><expr pos:start="15:5" pos:end="15:38"><name pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:5">d</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:10">dev</name><operator pos:start="15:11" pos:end="15:11">.</operator><name pos:start="15:12" pos:end="15:21">unregister</name></name> <operator pos:start="15:23" pos:end="15:23">=</operator> <name pos:start="15:25" pos:end="15:38">pci_nic_uninit</name></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:21"><expr pos:start="19:5" pos:end="19:20"><name pos:start="19:5" pos:end="19:5">s</name> <operator pos:start="19:7" pos:end="19:7">=</operator> <operator pos:start="19:9" pos:end="19:9">&amp;</operator><name pos:start="19:10" pos:end="19:20"><name pos:start="19:10" pos:end="19:10">d</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:20">eepro100</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:23"><expr pos:start="21:5" pos:end="21:22"><name pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:13">device</name></name> <operator pos:start="21:15" pos:end="21:15">=</operator> <name pos:start="21:17" pos:end="21:22">device</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:25"><expr pos:start="23:5" pos:end="23:24"><name pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:14">pci_dev</name></name> <operator pos:start="23:16" pos:end="23:16">=</operator> <operator pos:start="23:18" pos:end="23:18">&amp;</operator><name pos:start="23:19" pos:end="23:24"><name pos:start="23:19" pos:end="23:19">d</name><operator pos:start="23:20" pos:end="23:21">-&gt;</operator><name pos:start="23:22" pos:end="23:24">dev</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:17"><expr pos:start="27:5" pos:end="27:16"><call pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:13">pci_reset</name><argument_list pos:start="27:14" pos:end="27:16">(<argument pos:start="27:15" pos:end="27:15"><expr pos:start="27:15" pos:end="27:15"><name pos:start="27:15" pos:end="27:15">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="31:5" pos:end="33:57">/* Add 64 * 2 EEPROM. i82557 and i82558 support a 64 word EEPROM,

     * i82559 and later support 64 or 256 word EEPROM. */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:44"><expr pos:start="35:5" pos:end="35:43"><name pos:start="35:5" pos:end="35:13"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:13">eeprom</name></name> <operator pos:start="35:15" pos:end="35:15">=</operator> <call pos:start="35:17" pos:end="35:43"><name pos:start="35:17" pos:end="35:30">eeprom93xx_new</name><argument_list pos:start="35:31" pos:end="35:43">(<argument pos:start="35:32" pos:end="35:42"><expr pos:start="35:32" pos:end="35:42"><name pos:start="35:32" pos:end="35:42">EEPROM_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="39:5" pos:end="39:39">/* Handler for memory-mapped I/O */</comment>

    <expr_stmt pos:start="41:5" pos:end="43:65"><expr pos:start="41:5" pos:end="43:64"><name pos:start="41:5" pos:end="41:26"><name pos:start="41:5" pos:end="41:5">d</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:15">eepro100</name><operator pos:start="41:16" pos:end="41:16">.</operator><name pos:start="41:17" pos:end="41:26">mmio_index</name></name> <operator pos:start="41:28" pos:end="41:28">=</operator>

        <call pos:start="43:9" pos:end="43:64"><name pos:start="43:9" pos:end="43:30">cpu_register_io_memory</name><argument_list pos:start="43:31" pos:end="43:64">(<argument pos:start="43:32" pos:end="43:44"><expr pos:start="43:32" pos:end="43:44"><name pos:start="43:32" pos:end="43:44">pci_mmio_read</name></expr></argument>, <argument pos:start="43:47" pos:end="43:60"><expr pos:start="43:47" pos:end="43:60"><name pos:start="43:47" pos:end="43:60">pci_mmio_write</name></expr></argument>, <argument pos:start="43:63" pos:end="43:63"><expr pos:start="43:63" pos:end="43:63"><name pos:start="43:63" pos:end="43:63">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="51:73"><expr pos:start="47:5" pos:end="51:72"><call pos:start="47:5" pos:end="51:72"><name pos:start="47:5" pos:end="47:20">pci_register_bar</name><argument_list pos:start="47:21" pos:end="51:72">(<argument pos:start="47:22" pos:end="47:28"><expr pos:start="47:22" pos:end="47:28"><operator pos:start="47:22" pos:end="47:22">&amp;</operator><name pos:start="47:23" pos:end="47:28"><name pos:start="47:23" pos:end="47:23">d</name><operator pos:start="47:24" pos:end="47:25">-&gt;</operator><name pos:start="47:26" pos:end="47:28">dev</name></name></expr></argument>, <argument pos:start="47:31" pos:end="47:31"><expr pos:start="47:31" pos:end="47:31"><literal type="number" pos:start="47:31" pos:end="47:31">0</literal></expr></argument>, <argument pos:start="47:34" pos:end="47:45"><expr pos:start="47:34" pos:end="47:45"><name pos:start="47:34" pos:end="47:45">PCI_MEM_SIZE</name></expr></argument>,

                           <argument pos:start="49:28" pos:end="51:57"><expr pos:start="49:28" pos:end="51:57"><name pos:start="49:28" pos:end="49:48">PCI_ADDRESS_SPACE_MEM</name> <operator pos:start="49:50" pos:end="49:50">|</operator>

                           <name pos:start="51:28" pos:end="51:57">PCI_ADDRESS_SPACE_MEM_PREFETCH</name></expr></argument>, <argument pos:start="51:60" pos:end="51:71"><expr pos:start="51:60" pos:end="51:71"><name pos:start="51:60" pos:end="51:71">pci_mmio_map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="55:36"><expr pos:start="53:5" pos:end="55:35"><call pos:start="53:5" pos:end="55:35"><name pos:start="53:5" pos:end="53:20">pci_register_bar</name><argument_list pos:start="53:21" pos:end="55:35">(<argument pos:start="53:22" pos:end="53:28"><expr pos:start="53:22" pos:end="53:28"><operator pos:start="53:22" pos:end="53:22">&amp;</operator><name pos:start="53:23" pos:end="53:28"><name pos:start="53:23" pos:end="53:23">d</name><operator pos:start="53:24" pos:end="53:25">-&gt;</operator><name pos:start="53:26" pos:end="53:28">dev</name></name></expr></argument>, <argument pos:start="53:31" pos:end="53:31"><expr pos:start="53:31" pos:end="53:31"><literal type="number" pos:start="53:31" pos:end="53:31">1</literal></expr></argument>, <argument pos:start="53:34" pos:end="53:44"><expr pos:start="53:34" pos:end="53:44"><name pos:start="53:34" pos:end="53:44">PCI_IO_SIZE</name></expr></argument>, <argument pos:start="53:47" pos:end="53:66"><expr pos:start="53:47" pos:end="53:66"><name pos:start="53:47" pos:end="53:66">PCI_ADDRESS_SPACE_IO</name></expr></argument>,

                           <argument pos:start="55:28" pos:end="55:34"><expr pos:start="55:28" pos:end="55:34"><name pos:start="55:28" pos:end="55:34">pci_map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="59:41"><expr pos:start="57:5" pos:end="59:40"><call pos:start="57:5" pos:end="59:40"><name pos:start="57:5" pos:end="57:20">pci_register_bar</name><argument_list pos:start="57:21" pos:end="59:40">(<argument pos:start="57:22" pos:end="57:28"><expr pos:start="57:22" pos:end="57:28"><operator pos:start="57:22" pos:end="57:22">&amp;</operator><name pos:start="57:23" pos:end="57:28"><name pos:start="57:23" pos:end="57:23">d</name><operator pos:start="57:24" pos:end="57:25">-&gt;</operator><name pos:start="57:26" pos:end="57:28">dev</name></name></expr></argument>, <argument pos:start="57:31" pos:end="57:31"><expr pos:start="57:31" pos:end="57:31"><literal type="number" pos:start="57:31" pos:end="57:31">2</literal></expr></argument>, <argument pos:start="57:34" pos:end="57:47"><expr pos:start="57:34" pos:end="57:47"><name pos:start="57:34" pos:end="57:47">PCI_FLASH_SIZE</name></expr></argument>, <argument pos:start="57:50" pos:end="57:70"><expr pos:start="57:50" pos:end="57:70"><name pos:start="57:50" pos:end="57:70">PCI_ADDRESS_SPACE_MEM</name></expr></argument>,

                           <argument pos:start="59:28" pos:end="59:39"><expr pos:start="59:28" pos:end="59:39"><name pos:start="59:28" pos:end="59:39">pci_mmio_map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:47"><expr pos:start="63:5" pos:end="63:46"><call pos:start="63:5" pos:end="63:46"><name pos:start="63:5" pos:end="63:20">qdev_get_macaddr</name><argument_list pos:start="63:21" pos:end="63:46">(<argument pos:start="63:22" pos:end="63:33"><expr pos:start="63:22" pos:end="63:33"><operator pos:start="63:22" pos:end="63:22">&amp;</operator><name pos:start="63:23" pos:end="63:33"><name pos:start="63:23" pos:end="63:23">d</name><operator pos:start="63:24" pos:end="63:25">-&gt;</operator><name pos:start="63:26" pos:end="63:28">dev</name><operator pos:start="63:29" pos:end="63:29">.</operator><name pos:start="63:30" pos:end="63:33">qdev</name></name></expr></argument>, <argument pos:start="63:36" pos:end="63:45"><expr pos:start="63:36" pos:end="63:45"><name pos:start="63:36" pos:end="63:45"><name pos:start="63:36" pos:end="63:36">s</name><operator pos:start="63:37" pos:end="63:38">-&gt;</operator><name pos:start="63:39" pos:end="63:45">macaddr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:57"><expr pos:start="65:5" pos:end="65:56"><call pos:start="65:5" pos:end="65:56"><name pos:start="65:5" pos:end="65:10">logout</name><argument_list pos:start="65:11" pos:end="65:56">(<argument pos:start="65:12" pos:end="65:26"><expr pos:start="65:12" pos:end="65:26"><literal type="string" pos:start="65:12" pos:end="65:26">"macaddr: %s\n"</literal></expr></argument>, <argument pos:start="65:29" pos:end="65:55"><expr pos:start="65:29" pos:end="65:55"><call pos:start="65:29" pos:end="65:55"><name pos:start="65:29" pos:end="65:36">nic_dump</name><argument_list pos:start="65:37" pos:end="65:55">(<argument pos:start="65:38" pos:end="65:51"><expr pos:start="65:38" pos:end="65:51"><operator pos:start="65:38" pos:end="65:38">&amp;</operator><name pos:start="65:39" pos:end="65:51"><name pos:start="65:39" pos:end="65:39">s</name><operator pos:start="65:40" pos:end="65:41">-&gt;</operator><name pos:start="65:42" pos:end="65:48">macaddr</name><index pos:start="65:49" pos:end="65:51">[<expr pos:start="65:50" pos:end="65:50"><literal type="number" pos:start="65:50" pos:end="65:50">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="65:54" pos:end="65:54"><expr pos:start="65:54" pos:end="65:54"><literal type="number" pos:start="65:54" pos:end="65:54">6</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:30"><expr pos:start="67:5" pos:end="67:29"><call pos:start="67:5" pos:end="67:29"><name pos:start="67:5" pos:end="67:10">assert</name><argument_list pos:start="67:11" pos:end="67:29">(<argument pos:start="67:12" pos:end="67:28"><expr pos:start="67:12" pos:end="67:28"><name pos:start="67:12" pos:end="67:23"><name pos:start="67:12" pos:end="67:12">s</name><operator pos:start="67:13" pos:end="67:14">-&gt;</operator><name pos:start="67:15" pos:end="67:20">region</name><index pos:start="67:21" pos:end="67:23">[<expr pos:start="67:22" pos:end="67:22"><literal type="number" pos:start="67:22" pos:end="67:22">1</literal></expr>]</index></name> <operator pos:start="67:25" pos:end="67:26">==</operator> <literal type="number" pos:start="67:28" pos:end="67:28">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:17"><expr pos:start="71:5" pos:end="71:16"><call pos:start="71:5" pos:end="71:16"><name pos:start="71:5" pos:end="71:13">nic_reset</name><argument_list pos:start="71:14" pos:end="71:16">(<argument pos:start="71:15" pos:end="71:15"><expr pos:start="71:15" pos:end="71:15"><name pos:start="71:15" pos:end="71:15">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="79:49"><expr pos:start="75:5" pos:end="79:48"><name pos:start="75:5" pos:end="75:9"><name pos:start="75:5" pos:end="75:5">s</name><operator pos:start="75:6" pos:end="75:7">-&gt;</operator><name pos:start="75:8" pos:end="75:9">vc</name></name> <operator pos:start="75:11" pos:end="75:11">=</operator> <call pos:start="75:13" pos:end="79:48"><name pos:start="75:13" pos:end="75:32">qdev_get_vlan_client</name><argument_list pos:start="75:33" pos:end="79:48">(<argument pos:start="75:34" pos:end="75:45"><expr pos:start="75:34" pos:end="75:45"><operator pos:start="75:34" pos:end="75:34">&amp;</operator><name pos:start="75:35" pos:end="75:45"><name pos:start="75:35" pos:end="75:35">d</name><operator pos:start="75:36" pos:end="75:37">-&gt;</operator><name pos:start="75:38" pos:end="75:40">dev</name><operator pos:start="75:41" pos:end="75:41">.</operator><name pos:start="75:42" pos:end="75:45">qdev</name></name></expr></argument>,

                                 <argument pos:start="77:34" pos:end="77:48"><expr pos:start="77:34" pos:end="77:48"><name pos:start="77:34" pos:end="77:48">nic_can_receive</name></expr></argument>, <argument pos:start="77:51" pos:end="77:61"><expr pos:start="77:51" pos:end="77:61"><name pos:start="77:51" pos:end="77:61">nic_receive</name></expr></argument>, <argument pos:start="77:64" pos:end="77:67"><expr pos:start="77:64" pos:end="77:67"><name pos:start="77:64" pos:end="77:67">NULL</name></expr></argument>,

                                 <argument pos:start="79:34" pos:end="79:44"><expr pos:start="79:34" pos:end="79:44"><name pos:start="79:34" pos:end="79:44">nic_cleanup</name></expr></argument>, <argument pos:start="79:47" pos:end="79:47"><expr pos:start="79:47" pos:end="79:47"><name pos:start="79:47" pos:end="79:47">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:48"><expr pos:start="83:5" pos:end="83:47"><call pos:start="83:5" pos:end="83:47"><name pos:start="83:5" pos:end="83:28">qemu_format_nic_info_str</name><argument_list pos:start="83:29" pos:end="83:47">(<argument pos:start="83:30" pos:end="83:34"><expr pos:start="83:30" pos:end="83:34"><name pos:start="83:30" pos:end="83:34"><name pos:start="83:30" pos:end="83:30">s</name><operator pos:start="83:31" pos:end="83:32">-&gt;</operator><name pos:start="83:33" pos:end="83:34">vc</name></name></expr></argument>, <argument pos:start="83:37" pos:end="83:46"><expr pos:start="83:37" pos:end="83:46"><name pos:start="83:37" pos:end="83:46"><name pos:start="83:37" pos:end="83:37">s</name><operator pos:start="83:38" pos:end="83:39">-&gt;</operator><name pos:start="83:40" pos:end="83:46">macaddr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:38"><expr pos:start="87:5" pos:end="87:37"><call pos:start="87:5" pos:end="87:37"><name pos:start="87:5" pos:end="87:23">qemu_register_reset</name><argument_list pos:start="87:24" pos:end="87:37">(<argument pos:start="87:25" pos:end="87:33"><expr pos:start="87:25" pos:end="87:33"><name pos:start="87:25" pos:end="87:33">nic_reset</name></expr></argument>, <argument pos:start="87:36" pos:end="87:36"><expr pos:start="87:36" pos:end="87:36"><name pos:start="87:36" pos:end="87:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:64"><expr pos:start="91:5" pos:end="91:63"><call pos:start="91:5" pos:end="91:63"><name pos:start="91:5" pos:end="91:19">register_savevm</name><argument_list pos:start="91:20" pos:end="91:63">(<argument pos:start="91:21" pos:end="91:32"><expr pos:start="91:21" pos:end="91:32"><name pos:start="91:21" pos:end="91:32"><name pos:start="91:21" pos:end="91:21">s</name><operator pos:start="91:22" pos:end="91:23">-&gt;</operator><name pos:start="91:24" pos:end="91:25">vc</name><operator pos:start="91:26" pos:end="91:27">-&gt;</operator><name pos:start="91:28" pos:end="91:32">model</name></name></expr></argument>, <argument pos:start="91:35" pos:end="91:36"><expr pos:start="91:35" pos:end="91:36"><operator pos:start="91:35" pos:end="91:35">-</operator><literal type="number" pos:start="91:36" pos:end="91:36">1</literal></expr></argument>, <argument pos:start="91:39" pos:end="91:39"><expr pos:start="91:39" pos:end="91:39"><literal type="number" pos:start="91:39" pos:end="91:39">3</literal></expr></argument>, <argument pos:start="91:42" pos:end="91:49"><expr pos:start="91:42" pos:end="91:49"><name pos:start="91:42" pos:end="91:49">nic_save</name></expr></argument>, <argument pos:start="91:52" pos:end="91:59"><expr pos:start="91:52" pos:end="91:59"><name pos:start="91:52" pos:end="91:59">nic_load</name></expr></argument>, <argument pos:start="91:62" pos:end="91:62"><expr pos:start="91:62" pos:end="91:62"><name pos:start="91:62" pos:end="91:62">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="93:5" pos:end="93:13">return <expr pos:start="93:12" pos:end="93:12"><literal type="number" pos:start="93:12" pos:end="93:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
