<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17806.c" pos:tabs="8"><function pos:start="1:1" pos:end="371:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">decode_dvd_subtitles</name><parameter_list pos:start="1:32" pos:end="3:65">(<parameter pos:start="1:33" pos:end="1:50"><decl pos:start="1:33" pos:end="1:50"><type pos:start="1:33" pos:end="1:50"><name pos:start="1:33" pos:end="1:45">DVDSubContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">ctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:74"><decl pos:start="1:53" pos:end="1:74"><type pos:start="1:53" pos:end="1:74"><name pos:start="1:53" pos:end="1:62">AVSubtitle</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:74">sub_header</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:50"><decl pos:start="3:33" pos:end="3:50"><type pos:start="3:33" pos:end="3:50"><specifier pos:start="3:33" pos:end="3:37">const</specifier> <name pos:start="3:39" pos:end="3:45">uint8_t</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:50">buf</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:64"><decl pos:start="3:53" pos:end="3:64"><type pos:start="3:53" pos:end="3:64"><name pos:start="3:53" pos:end="3:55">int</name></type> <name pos:start="3:57" pos:end="3:64">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="371:1">{<block_content pos:start="7:5" pos:end="369:14">

    <decl_stmt pos:start="7:5" pos:end="7:74"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:15">cmd_pos</name></decl>, <decl pos:start="7:18" pos:end="7:20"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:18" pos:end="7:20">pos</name></decl>, <decl pos:start="7:23" pos:end="7:25"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:23" pos:end="7:25">cmd</name></decl>, <decl pos:start="7:28" pos:end="7:29"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:28" pos:end="7:29">x1</name></decl>, <decl pos:start="7:32" pos:end="7:33"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:32" pos:end="7:33">y1</name></decl>, <decl pos:start="7:36" pos:end="7:37"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:36" pos:end="7:37">x2</name></decl>, <decl pos:start="7:40" pos:end="7:41"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:40" pos:end="7:41">y2</name></decl>, <decl pos:start="7:44" pos:end="7:50"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:44" pos:end="7:50">offset1</name></decl>, <decl pos:start="7:53" pos:end="7:59"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:53" pos:end="7:59">offset2</name></decl>, <decl pos:start="7:62" pos:end="7:73"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:62" pos:end="7:73">next_cmd_pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:19">big_offsets</name></decl>, <decl pos:start="9:22" pos:end="9:32"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:22" pos:end="9:32">offset_size</name></decl>, <decl pos:start="9:35" pos:end="9:45"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:35" pos:end="9:41">is_8bit</name> <init pos:start="9:43" pos:end="9:45">= <expr pos:start="9:45" pos:end="9:45"><literal type="number" pos:start="9:45" pos:end="9:45">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:38"><decl pos:start="11:5" pos:end="11:37"><type pos:start="11:5" pos:end="11:19"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">uint8_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:30">yuv_palette</name> <init pos:start="11:32" pos:end="11:37">= <expr pos:start="11:34" pos:end="11:37"><name pos:start="11:34" pos:end="11:37">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:59"><decl pos:start="13:5" pos:end="13:37"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:21">colormap</name> <init pos:start="13:23" pos:end="13:37">= <expr pos:start="13:25" pos:end="13:37"><name pos:start="13:25" pos:end="13:37"><name pos:start="13:25" pos:end="13:27">ctx</name><operator pos:start="13:28" pos:end="13:29">-&gt;</operator><name pos:start="13:30" pos:end="13:37">colormap</name></name></expr></init></decl>, <decl pos:start="13:40" pos:end="13:58"><type ref="prev" pos:start="13:5" pos:end="13:13"><modifier pos:start="13:40" pos:end="13:40">*</modifier></type><name pos:start="13:41" pos:end="13:45">alpha</name> <init pos:start="13:47" pos:end="13:58">= <expr pos:start="13:49" pos:end="13:58"><name pos:start="13:49" pos:end="13:58"><name pos:start="13:49" pos:end="13:51">ctx</name><operator pos:start="13:52" pos:end="13:53">-&gt;</operator><name pos:start="13:54" pos:end="13:58">alpha</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:13"><decl pos:start="15:5" pos:end="15:12"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:12">date</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:10"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:20"><decl pos:start="19:5" pos:end="19:19"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:15">is_menu</name> <init pos:start="19:17" pos:end="19:19">= <expr pos:start="19:19" pos:end="19:19"><literal type="number" pos:start="19:19" pos:end="19:19">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="25:18"><if pos:start="23:5" pos:end="25:18">if <condition pos:start="23:8" pos:end="23:22">(<expr pos:start="23:9" pos:end="23:21"><name pos:start="23:9" pos:end="23:16">buf_size</name> <operator pos:start="23:18" pos:end="23:18">&lt;</operator> <literal type="number" pos:start="23:20" pos:end="23:21">10</literal></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:18"><block_content pos:start="25:9" pos:end="25:18">

        <return pos:start="25:9" pos:end="25:18">return <expr pos:start="25:16" pos:end="25:17"><operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="45:5"><if pos:start="29:5" pos:end="37:5">if <condition pos:start="29:8" pos:end="29:26">(<expr pos:start="29:9" pos:end="29:25"><call pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:15">AV_RB16</name><argument_list pos:start="29:16" pos:end="29:20">(<argument pos:start="29:17" pos:end="29:19"><expr pos:start="29:17" pos:end="29:19"><name pos:start="29:17" pos:end="29:19">buf</name></expr></argument>)</argument_list></call> <operator pos:start="29:22" pos:end="29:23">==</operator> <literal type="number" pos:start="29:25" pos:end="29:25">0</literal></expr>)</condition> <block pos:start="29:28" pos:end="37:5">{<block_content pos:start="31:9" pos:end="35:20">   <comment type="block" pos:start="29:32" pos:end="29:70">/* HD subpicture with 4-byte offsets */</comment>

        <expr_stmt pos:start="31:9" pos:end="31:24"><expr pos:start="31:9" pos:end="31:23"><name pos:start="31:9" pos:end="31:19">big_offsets</name> <operator pos:start="31:21" pos:end="31:21">=</operator> <literal type="number" pos:start="31:23" pos:end="31:23">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:24"><expr pos:start="33:9" pos:end="33:23"><name pos:start="33:9" pos:end="33:19">offset_size</name> <operator pos:start="33:21" pos:end="33:21">=</operator> <literal type="number" pos:start="33:23" pos:end="33:23">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:20"><expr pos:start="35:9" pos:end="35:19"><name pos:start="35:9" pos:end="35:15">cmd_pos</name> <operator pos:start="35:17" pos:end="35:17">=</operator> <literal type="number" pos:start="35:19" pos:end="35:19">6</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="37:7" pos:end="45:5">else <block pos:start="37:12" pos:end="45:5">{<block_content pos:start="39:9" pos:end="43:20">

        <expr_stmt pos:start="39:9" pos:end="39:24"><expr pos:start="39:9" pos:end="39:23"><name pos:start="39:9" pos:end="39:19">big_offsets</name> <operator pos:start="39:21" pos:end="39:21">=</operator> <literal type="number" pos:start="39:23" pos:end="39:23">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:24"><expr pos:start="41:9" pos:end="41:23"><name pos:start="41:9" pos:end="41:19">offset_size</name> <operator pos:start="41:21" pos:end="41:21">=</operator> <literal type="number" pos:start="41:23" pos:end="41:23">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:20"><expr pos:start="43:9" pos:end="43:19"><name pos:start="43:9" pos:end="43:15">cmd_pos</name> <operator pos:start="43:17" pos:end="43:17">=</operator> <literal type="number" pos:start="43:19" pos:end="43:19">2</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:41"><expr pos:start="49:5" pos:end="49:40"><name pos:start="49:5" pos:end="49:11">cmd_pos</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <call pos:start="49:15" pos:end="49:40"><name pos:start="49:15" pos:end="49:25">READ_OFFSET</name><argument_list pos:start="49:26" pos:end="49:40">(<argument pos:start="49:27" pos:end="49:39"><expr pos:start="49:27" pos:end="49:39"><name pos:start="49:27" pos:end="49:29">buf</name> <operator pos:start="49:31" pos:end="49:31">+</operator> <name pos:start="49:33" pos:end="49:39">cmd_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="53:5" pos:end="55:31"><if pos:start="53:5" pos:end="55:31">if <condition pos:start="53:8" pos:end="53:60">(<expr pos:start="53:9" pos:end="53:59"><name pos:start="53:9" pos:end="53:32"><name pos:start="53:9" pos:end="53:15">cmd_pos</name> <argument_list type="generic" pos:start="53:17" pos:end="53:32">&lt; <argument pos:start="53:19" pos:end="53:30"><expr pos:start="53:19" pos:end="53:30"><literal type="number" pos:start="53:19" pos:end="53:19">0</literal> <operator pos:start="53:21" pos:end="53:22">||</operator> <name pos:start="53:24" pos:end="53:30">cmd_pos</name></expr></argument> &gt;</argument_list></name> <name pos:start="53:34" pos:end="53:41">buf_size</name> <operator pos:start="53:43" pos:end="53:43">-</operator> <literal type="number" pos:start="53:45" pos:end="53:47">2</literal> <operator pos:start="53:47" pos:end="53:47">-</operator> <name pos:start="53:49" pos:end="53:59">offset_size</name></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:31"><block_content pos:start="55:9" pos:end="55:31">

        <return pos:start="55:9" pos:end="55:31">return <expr pos:start="55:16" pos:end="55:30"><call pos:start="55:16" pos:end="55:30"><name pos:start="55:16" pos:end="55:22">AVERROR</name><argument_list pos:start="55:23" pos:end="55:30">(<argument pos:start="55:24" pos:end="55:29"><expr pos:start="55:24" pos:end="55:29"><name pos:start="55:24" pos:end="55:29">EAGAIN</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <while pos:start="59:5" pos:end="359:5">while <condition pos:start="59:11" pos:end="59:63">(<expr pos:start="59:12" pos:end="59:62"><name pos:start="59:12" pos:end="59:18">cmd_pos</name> <operator pos:start="59:20" pos:end="59:20">&gt;</operator> <literal type="number" pos:start="59:22" pos:end="59:22">0</literal> <operator pos:start="59:24" pos:end="59:25">&amp;&amp;</operator> <name pos:start="59:27" pos:end="59:33">cmd_pos</name> <operator pos:start="59:35" pos:end="59:35">&lt;</operator> <name pos:start="59:37" pos:end="59:44">buf_size</name> <operator pos:start="59:46" pos:end="59:46">-</operator> <literal type="number" pos:start="59:48" pos:end="59:50">2</literal> <operator pos:start="59:50" pos:end="59:50">-</operator> <name pos:start="59:52" pos:end="59:62">offset_size</name></expr>)</condition> <block pos:start="59:65" pos:end="359:5">{<block_content pos:start="61:9" pos:end="357:31">

        <expr_stmt pos:start="61:9" pos:end="61:38"><expr pos:start="61:9" pos:end="61:37"><name pos:start="61:9" pos:end="61:12">date</name> <operator pos:start="61:14" pos:end="61:14">=</operator> <call pos:start="61:16" pos:end="61:37"><name pos:start="61:16" pos:end="61:22">AV_RB16</name><argument_list pos:start="61:23" pos:end="61:37">(<argument pos:start="61:24" pos:end="61:36"><expr pos:start="61:24" pos:end="61:36"><name pos:start="61:24" pos:end="61:26">buf</name> <operator pos:start="61:28" pos:end="61:28">+</operator> <name pos:start="61:30" pos:end="61:36">cmd_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:54"><expr pos:start="63:9" pos:end="63:53"><name pos:start="63:9" pos:end="63:20">next_cmd_pos</name> <operator pos:start="63:22" pos:end="63:22">=</operator> <call pos:start="63:24" pos:end="63:53"><name pos:start="63:24" pos:end="63:34">READ_OFFSET</name><argument_list pos:start="63:35" pos:end="63:53">(<argument pos:start="63:36" pos:end="63:52"><expr pos:start="63:36" pos:end="63:52"><name pos:start="63:36" pos:end="63:38">buf</name> <operator pos:start="63:40" pos:end="63:40">+</operator> <name pos:start="63:42" pos:end="63:48">cmd_pos</name> <operator pos:start="63:50" pos:end="63:50">+</operator> <literal type="number" pos:start="63:52" pos:end="63:52">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="67:45"><expr pos:start="65:9" pos:end="67:44"><call pos:start="65:9" pos:end="67:44"><name pos:start="65:9" pos:end="65:15">av_dlog</name><argument_list pos:start="65:16" pos:end="67:44">(<argument pos:start="65:17" pos:end="65:20"><expr pos:start="65:17" pos:end="65:20"><name pos:start="65:17" pos:end="65:20">NULL</name></expr></argument>, <argument pos:start="65:23" pos:end="65:60"><expr pos:start="65:23" pos:end="65:60"><literal type="string" pos:start="65:23" pos:end="65:60">"cmd_pos=0x%04x next=0x%04x date=%d\n"</literal></expr></argument>,

                <argument pos:start="67:17" pos:end="67:23"><expr pos:start="67:17" pos:end="67:23"><name pos:start="67:17" pos:end="67:23">cmd_pos</name></expr></argument>, <argument pos:start="67:26" pos:end="67:37"><expr pos:start="67:26" pos:end="67:37"><name pos:start="67:26" pos:end="67:37">next_cmd_pos</name></expr></argument>, <argument pos:start="67:40" pos:end="67:43"><expr pos:start="67:40" pos:end="67:43"><name pos:start="67:40" pos:end="67:43">date</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:40"><expr pos:start="69:9" pos:end="69:39"><name pos:start="69:9" pos:end="69:11">pos</name> <operator pos:start="69:13" pos:end="69:13">=</operator> <name pos:start="69:15" pos:end="69:21">cmd_pos</name> <operator pos:start="69:23" pos:end="69:23">+</operator> <literal type="number" pos:start="69:25" pos:end="69:27">2</literal> <operator pos:start="69:27" pos:end="69:27">+</operator> <name pos:start="69:29" pos:end="69:39">offset_size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:21"><expr pos:start="71:9" pos:end="71:20"><name pos:start="71:9" pos:end="71:15">offset1</name> <operator pos:start="71:17" pos:end="71:17">=</operator> <operator pos:start="71:19" pos:end="71:19">-</operator><literal type="number" pos:start="71:20" pos:end="71:20">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:21"><expr pos:start="73:9" pos:end="73:20"><name pos:start="73:9" pos:end="73:15">offset2</name> <operator pos:start="73:17" pos:end="73:17">=</operator> <operator pos:start="73:19" pos:end="73:19">-</operator><literal type="number" pos:start="73:20" pos:end="73:20">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:30"><expr pos:start="75:9" pos:end="75:29"><name pos:start="75:9" pos:end="75:10">x1</name> <operator pos:start="75:12" pos:end="75:12">=</operator> <name pos:start="75:14" pos:end="75:15">y1</name> <operator pos:start="75:17" pos:end="75:17">=</operator> <name pos:start="75:19" pos:end="75:20">x2</name> <operator pos:start="75:22" pos:end="75:22">=</operator> <name pos:start="75:24" pos:end="75:25">y2</name> <operator pos:start="75:27" pos:end="75:27">=</operator> <literal type="number" pos:start="75:29" pos:end="75:29">0</literal></expr>;</expr_stmt>

        <while pos:start="77:9" pos:end="255:9">while <condition pos:start="77:15" pos:end="77:30">(<expr pos:start="77:16" pos:end="77:29"><name pos:start="77:16" pos:end="77:18">pos</name> <operator pos:start="77:20" pos:end="77:20">&lt;</operator> <name pos:start="77:22" pos:end="77:29">buf_size</name></expr>)</condition> <block pos:start="77:32" pos:end="255:9">{<block_content pos:start="79:13" pos:end="253:13">

            <expr_stmt pos:start="79:13" pos:end="79:29"><expr pos:start="79:13" pos:end="79:28"><name pos:start="79:13" pos:end="79:15">cmd</name> <operator pos:start="79:17" pos:end="79:17">=</operator> <name pos:start="79:19" pos:end="79:28"><name pos:start="79:19" pos:end="79:21">buf</name><index pos:start="79:22" pos:end="79:28">[<expr pos:start="79:23" pos:end="79:27"><name pos:start="79:23" pos:end="79:25">pos</name><operator pos:start="79:26" pos:end="79:27">++</operator></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:45"><expr pos:start="81:13" pos:end="81:44"><call pos:start="81:13" pos:end="81:44"><name pos:start="81:13" pos:end="81:19">av_dlog</name><argument_list pos:start="81:20" pos:end="81:44">(<argument pos:start="81:21" pos:end="81:24"><expr pos:start="81:21" pos:end="81:24"><name pos:start="81:21" pos:end="81:24">NULL</name></expr></argument>, <argument pos:start="81:27" pos:end="81:38"><expr pos:start="81:27" pos:end="81:38"><literal type="string" pos:start="81:27" pos:end="81:38">"cmd=%02x\n"</literal></expr></argument>, <argument pos:start="81:41" pos:end="81:43"><expr pos:start="81:41" pos:end="81:43"><name pos:start="81:41" pos:end="81:43">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="83:13" pos:end="253:13">switch<condition pos:start="83:19" pos:end="83:23">(<expr pos:start="83:20" pos:end="83:22"><name pos:start="83:20" pos:end="83:22">cmd</name></expr>)</condition> <block pos:start="83:25" pos:end="253:13">{<block_content pos:start="85:13" pos:end="251:29">

            <case pos:start="85:13" pos:end="85:22">case <expr pos:start="85:18" pos:end="85:21"><literal type="number" pos:start="85:18" pos:end="85:21">0x00</literal></expr>:</case>

                <comment type="block" pos:start="87:17" pos:end="87:37">/* menu subpicture */</comment>

                <expr_stmt pos:start="89:17" pos:end="89:28"><expr pos:start="89:17" pos:end="89:27"><name pos:start="89:17" pos:end="89:23">is_menu</name> <operator pos:start="89:25" pos:end="89:25">=</operator> <literal type="number" pos:start="89:27" pos:end="89:27">1</literal></expr>;</expr_stmt>

                <break pos:start="91:17" pos:end="91:22">break;</break>

            <case pos:start="93:13" pos:end="93:22">case <expr pos:start="93:18" pos:end="93:21"><literal type="number" pos:start="93:18" pos:end="93:21">0x01</literal></expr>:</case>

                <comment type="block" pos:start="95:17" pos:end="95:36">/* set start date */</comment>

                <expr_stmt pos:start="97:17" pos:end="97:67"><expr pos:start="97:17" pos:end="97:66"><name pos:start="97:17" pos:end="97:46"><name pos:start="97:17" pos:end="97:26">sub_header</name><operator pos:start="97:27" pos:end="97:28">-&gt;</operator><name pos:start="97:29" pos:end="97:46">start_display_time</name></name> <operator pos:start="97:48" pos:end="97:48">=</operator> <operator pos:start="97:50" pos:end="97:50">(</operator><name pos:start="97:51" pos:end="97:54">date</name> <operator pos:start="97:56" pos:end="97:57">&lt;&lt;</operator> <literal type="number" pos:start="97:59" pos:end="97:60">10</literal><operator pos:start="97:61" pos:end="97:61">)</operator> <operator pos:start="97:63" pos:end="97:63">/</operator> <literal type="number" pos:start="97:65" pos:end="97:66">90</literal></expr>;</expr_stmt>

                <break pos:start="99:17" pos:end="99:22">break;</break>

            <case pos:start="101:13" pos:end="101:22">case <expr pos:start="101:18" pos:end="101:21"><literal type="number" pos:start="101:18" pos:end="101:21">0x02</literal></expr>:</case>

                <comment type="block" pos:start="103:17" pos:end="103:34">/* set end date */</comment>

                <expr_stmt pos:start="105:17" pos:end="105:65"><expr pos:start="105:17" pos:end="105:64"><name pos:start="105:17" pos:end="105:44"><name pos:start="105:17" pos:end="105:26">sub_header</name><operator pos:start="105:27" pos:end="105:28">-&gt;</operator><name pos:start="105:29" pos:end="105:44">end_display_time</name></name> <operator pos:start="105:46" pos:end="105:46">=</operator> <operator pos:start="105:48" pos:end="105:48">(</operator><name pos:start="105:49" pos:end="105:52">date</name> <operator pos:start="105:54" pos:end="105:55">&lt;&lt;</operator> <literal type="number" pos:start="105:57" pos:end="105:58">10</literal><operator pos:start="105:59" pos:end="105:59">)</operator> <operator pos:start="105:61" pos:end="105:61">/</operator> <literal type="number" pos:start="105:63" pos:end="105:64">90</literal></expr>;</expr_stmt>

                <break pos:start="107:17" pos:end="107:22">break;</break>

            <case pos:start="109:13" pos:end="109:22">case <expr pos:start="109:18" pos:end="109:21"><literal type="number" pos:start="109:18" pos:end="109:21">0x03</literal></expr>:</case>

                <comment type="block" pos:start="111:17" pos:end="111:34">/* set colormap */</comment>

                <if_stmt pos:start="113:17" pos:end="115:30"><if pos:start="113:17" pos:end="115:30">if <condition pos:start="113:20" pos:end="113:41">(<expr pos:start="113:21" pos:end="113:40"><operator pos:start="113:21" pos:end="113:21">(</operator><name pos:start="113:22" pos:end="113:29">buf_size</name> <operator pos:start="113:31" pos:end="113:31">-</operator> <name pos:start="113:33" pos:end="113:35">pos</name><operator pos:start="113:36" pos:end="113:36">)</operator> <operator pos:start="113:38" pos:end="113:38">&lt;</operator> <literal type="number" pos:start="113:40" pos:end="113:40">2</literal></expr>)</condition><block type="pseudo" pos:start="115:21" pos:end="115:30"><block_content pos:start="115:21" pos:end="115:30">

                    <goto pos:start="115:21" pos:end="115:30">goto <name pos:start="115:26" pos:end="115:29">fail</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="117:17" pos:end="117:44"><expr pos:start="117:17" pos:end="117:43"><name pos:start="117:17" pos:end="117:27"><name pos:start="117:17" pos:end="117:24">colormap</name><index pos:start="117:25" pos:end="117:27">[<expr pos:start="117:26" pos:end="117:26"><literal type="number" pos:start="117:26" pos:end="117:26">3</literal></expr>]</index></name> <operator pos:start="117:29" pos:end="117:29">=</operator> <name pos:start="117:31" pos:end="117:38"><name pos:start="117:31" pos:end="117:33">buf</name><index pos:start="117:34" pos:end="117:38">[<expr pos:start="117:35" pos:end="117:37"><name pos:start="117:35" pos:end="117:37">pos</name></expr>]</index></name> <operator pos:start="117:40" pos:end="117:41">&gt;&gt;</operator> <literal type="number" pos:start="117:43" pos:end="117:43">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="119:17" pos:end="119:46"><expr pos:start="119:17" pos:end="119:45"><name pos:start="119:17" pos:end="119:27"><name pos:start="119:17" pos:end="119:24">colormap</name><index pos:start="119:25" pos:end="119:27">[<expr pos:start="119:26" pos:end="119:26"><literal type="number" pos:start="119:26" pos:end="119:26">2</literal></expr>]</index></name> <operator pos:start="119:29" pos:end="119:29">=</operator> <name pos:start="119:31" pos:end="119:38"><name pos:start="119:31" pos:end="119:33">buf</name><index pos:start="119:34" pos:end="119:38">[<expr pos:start="119:35" pos:end="119:37"><name pos:start="119:35" pos:end="119:37">pos</name></expr>]</index></name> <operator pos:start="119:40" pos:end="119:40">&amp;</operator> <literal type="number" pos:start="119:42" pos:end="119:45">0x0f</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="121:17" pos:end="121:48"><expr pos:start="121:17" pos:end="121:47"><name pos:start="121:17" pos:end="121:27"><name pos:start="121:17" pos:end="121:24">colormap</name><index pos:start="121:25" pos:end="121:27">[<expr pos:start="121:26" pos:end="121:26"><literal type="number" pos:start="121:26" pos:end="121:26">1</literal></expr>]</index></name> <operator pos:start="121:29" pos:end="121:29">=</operator> <name pos:start="121:31" pos:end="121:42"><name pos:start="121:31" pos:end="121:33">buf</name><index pos:start="121:34" pos:end="121:42">[<expr pos:start="121:35" pos:end="121:41"><name pos:start="121:35" pos:end="121:37">pos</name> <operator pos:start="121:39" pos:end="121:39">+</operator> <literal type="number" pos:start="121:41" pos:end="121:41">1</literal></expr>]</index></name> <operator pos:start="121:44" pos:end="121:45">&gt;&gt;</operator> <literal type="number" pos:start="121:47" pos:end="121:47">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="123:17" pos:end="123:50"><expr pos:start="123:17" pos:end="123:49"><name pos:start="123:17" pos:end="123:27"><name pos:start="123:17" pos:end="123:24">colormap</name><index pos:start="123:25" pos:end="123:27">[<expr pos:start="123:26" pos:end="123:26"><literal type="number" pos:start="123:26" pos:end="123:26">0</literal></expr>]</index></name> <operator pos:start="123:29" pos:end="123:29">=</operator> <name pos:start="123:31" pos:end="123:42"><name pos:start="123:31" pos:end="123:33">buf</name><index pos:start="123:34" pos:end="123:42">[<expr pos:start="123:35" pos:end="123:41"><name pos:start="123:35" pos:end="123:37">pos</name> <operator pos:start="123:39" pos:end="123:39">+</operator> <literal type="number" pos:start="123:41" pos:end="123:41">1</literal></expr>]</index></name> <operator pos:start="123:44" pos:end="123:44">&amp;</operator> <literal type="number" pos:start="123:46" pos:end="123:49">0x0f</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="125:17" pos:end="125:25"><expr pos:start="125:17" pos:end="125:24"><name pos:start="125:17" pos:end="125:19">pos</name> <operator pos:start="125:21" pos:end="125:22">+=</operator> <literal type="number" pos:start="125:24" pos:end="125:24">2</literal></expr>;</expr_stmt>

                <break pos:start="127:17" pos:end="127:22">break;</break>

            <case pos:start="129:13" pos:end="129:22">case <expr pos:start="129:18" pos:end="129:21"><literal type="number" pos:start="129:18" pos:end="129:21">0x04</literal></expr>:</case>

                <comment type="block" pos:start="131:17" pos:end="131:31">/* set alpha */</comment>

                <if_stmt pos:start="133:17" pos:end="135:30"><if pos:start="133:17" pos:end="135:30">if <condition pos:start="133:20" pos:end="133:41">(<expr pos:start="133:21" pos:end="133:40"><operator pos:start="133:21" pos:end="133:21">(</operator><name pos:start="133:22" pos:end="133:29">buf_size</name> <operator pos:start="133:31" pos:end="133:31">-</operator> <name pos:start="133:33" pos:end="133:35">pos</name><operator pos:start="133:36" pos:end="133:36">)</operator> <operator pos:start="133:38" pos:end="133:38">&lt;</operator> <literal type="number" pos:start="133:40" pos:end="133:40">2</literal></expr>)</condition><block type="pseudo" pos:start="135:21" pos:end="135:30"><block_content pos:start="135:21" pos:end="135:30">

                    <goto pos:start="135:21" pos:end="135:30">goto <name pos:start="135:26" pos:end="135:29">fail</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="137:17" pos:end="137:41"><expr pos:start="137:17" pos:end="137:40"><name pos:start="137:17" pos:end="137:24"><name pos:start="137:17" pos:end="137:21">alpha</name><index pos:start="137:22" pos:end="137:24">[<expr pos:start="137:23" pos:end="137:23"><literal type="number" pos:start="137:23" pos:end="137:23">3</literal></expr>]</index></name> <operator pos:start="137:26" pos:end="137:26">=</operator> <name pos:start="137:28" pos:end="137:35"><name pos:start="137:28" pos:end="137:30">buf</name><index pos:start="137:31" pos:end="137:35">[<expr pos:start="137:32" pos:end="137:34"><name pos:start="137:32" pos:end="137:34">pos</name></expr>]</index></name> <operator pos:start="137:37" pos:end="137:38">&gt;&gt;</operator> <literal type="number" pos:start="137:40" pos:end="137:40">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="139:17" pos:end="139:43"><expr pos:start="139:17" pos:end="139:42"><name pos:start="139:17" pos:end="139:24"><name pos:start="139:17" pos:end="139:21">alpha</name><index pos:start="139:22" pos:end="139:24">[<expr pos:start="139:23" pos:end="139:23"><literal type="number" pos:start="139:23" pos:end="139:23">2</literal></expr>]</index></name> <operator pos:start="139:26" pos:end="139:26">=</operator> <name pos:start="139:28" pos:end="139:35"><name pos:start="139:28" pos:end="139:30">buf</name><index pos:start="139:31" pos:end="139:35">[<expr pos:start="139:32" pos:end="139:34"><name pos:start="139:32" pos:end="139:34">pos</name></expr>]</index></name> <operator pos:start="139:37" pos:end="139:37">&amp;</operator> <literal type="number" pos:start="139:39" pos:end="139:42">0x0f</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="141:17" pos:end="141:45"><expr pos:start="141:17" pos:end="141:44"><name pos:start="141:17" pos:end="141:24"><name pos:start="141:17" pos:end="141:21">alpha</name><index pos:start="141:22" pos:end="141:24">[<expr pos:start="141:23" pos:end="141:23"><literal type="number" pos:start="141:23" pos:end="141:23">1</literal></expr>]</index></name> <operator pos:start="141:26" pos:end="141:26">=</operator> <name pos:start="141:28" pos:end="141:39"><name pos:start="141:28" pos:end="141:30">buf</name><index pos:start="141:31" pos:end="141:39">[<expr pos:start="141:32" pos:end="141:38"><name pos:start="141:32" pos:end="141:34">pos</name> <operator pos:start="141:36" pos:end="141:36">+</operator> <literal type="number" pos:start="141:38" pos:end="141:38">1</literal></expr>]</index></name> <operator pos:start="141:41" pos:end="141:42">&gt;&gt;</operator> <literal type="number" pos:start="141:44" pos:end="141:44">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="143:17" pos:end="143:47"><expr pos:start="143:17" pos:end="143:46"><name pos:start="143:17" pos:end="143:24"><name pos:start="143:17" pos:end="143:21">alpha</name><index pos:start="143:22" pos:end="143:24">[<expr pos:start="143:23" pos:end="143:23"><literal type="number" pos:start="143:23" pos:end="143:23">0</literal></expr>]</index></name> <operator pos:start="143:26" pos:end="143:26">=</operator> <name pos:start="143:28" pos:end="143:39"><name pos:start="143:28" pos:end="143:30">buf</name><index pos:start="143:31" pos:end="143:39">[<expr pos:start="143:32" pos:end="143:38"><name pos:start="143:32" pos:end="143:34">pos</name> <operator pos:start="143:36" pos:end="143:36">+</operator> <literal type="number" pos:start="143:38" pos:end="143:38">1</literal></expr>]</index></name> <operator pos:start="143:41" pos:end="143:41">&amp;</operator> <literal type="number" pos:start="143:43" pos:end="143:46">0x0f</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="145:17" pos:end="145:25"><expr pos:start="145:17" pos:end="145:24"><name pos:start="145:17" pos:end="145:19">pos</name> <operator pos:start="145:21" pos:end="145:22">+=</operator> <literal type="number" pos:start="145:24" pos:end="145:24">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:83"><expr pos:start="147:13" pos:end="147:82"><call pos:start="147:13" pos:end="147:82"><name pos:start="147:13" pos:end="147:19">av_dlog</name><argument_list pos:start="147:20" pos:end="147:82">(<argument pos:start="147:21" pos:end="147:24"><expr pos:start="147:21" pos:end="147:24"><name pos:start="147:21" pos:end="147:24">NULL</name></expr></argument>, <argument pos:start="147:27" pos:end="147:44"><expr pos:start="147:27" pos:end="147:44"><literal type="string" pos:start="147:27" pos:end="147:44">"alpha=%x%x%x%x\n"</literal></expr></argument>, <argument pos:start="147:47" pos:end="147:54"><expr pos:start="147:47" pos:end="147:54"><name pos:start="147:47" pos:end="147:54"><name pos:start="147:47" pos:end="147:51">alpha</name><index pos:start="147:52" pos:end="147:54">[<expr pos:start="147:53" pos:end="147:53"><literal type="number" pos:start="147:53" pos:end="147:53">0</literal></expr>]</index></name></expr></argument>,<argument pos:start="147:56" pos:end="147:63"><expr pos:start="147:56" pos:end="147:63"><name pos:start="147:56" pos:end="147:63"><name pos:start="147:56" pos:end="147:60">alpha</name><index pos:start="147:61" pos:end="147:63">[<expr pos:start="147:62" pos:end="147:62"><literal type="number" pos:start="147:62" pos:end="147:62">1</literal></expr>]</index></name></expr></argument>,<argument pos:start="147:65" pos:end="147:72"><expr pos:start="147:65" pos:end="147:72"><name pos:start="147:65" pos:end="147:72"><name pos:start="147:65" pos:end="147:69">alpha</name><index pos:start="147:70" pos:end="147:72">[<expr pos:start="147:71" pos:end="147:71"><literal type="number" pos:start="147:71" pos:end="147:71">2</literal></expr>]</index></name></expr></argument>,<argument pos:start="147:74" pos:end="147:81"><expr pos:start="147:74" pos:end="147:81"><name pos:start="147:74" pos:end="147:81"><name pos:start="147:74" pos:end="147:78">alpha</name><index pos:start="147:79" pos:end="147:81">[<expr pos:start="147:80" pos:end="147:80"><literal type="number" pos:start="147:80" pos:end="147:80">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="149:17" pos:end="149:22">break;</break>

            <case pos:start="151:13" pos:end="151:22">case <expr pos:start="151:18" pos:end="151:21"><literal type="number" pos:start="151:18" pos:end="151:21">0x05</literal></expr>:</case>

            <case pos:start="153:13" pos:end="153:22">case <expr pos:start="153:18" pos:end="153:21"><literal type="number" pos:start="153:18" pos:end="153:21">0x85</literal></expr>:</case>

                <if_stmt pos:start="155:17" pos:end="157:30"><if pos:start="155:17" pos:end="157:30">if <condition pos:start="155:20" pos:end="155:41">(<expr pos:start="155:21" pos:end="155:40"><operator pos:start="155:21" pos:end="155:21">(</operator><name pos:start="155:22" pos:end="155:29">buf_size</name> <operator pos:start="155:31" pos:end="155:31">-</operator> <name pos:start="155:33" pos:end="155:35">pos</name><operator pos:start="155:36" pos:end="155:36">)</operator> <operator pos:start="155:38" pos:end="155:38">&lt;</operator> <literal type="number" pos:start="155:40" pos:end="155:40">6</literal></expr>)</condition><block type="pseudo" pos:start="157:21" pos:end="157:30"><block_content pos:start="157:21" pos:end="157:30">

                    <goto pos:start="157:21" pos:end="157:30">goto <name pos:start="157:26" pos:end="157:29">fail</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="159:17" pos:end="159:59"><expr pos:start="159:17" pos:end="159:58"><name pos:start="159:17" pos:end="159:18">x1</name> <operator pos:start="159:20" pos:end="159:20">=</operator> <operator pos:start="159:22" pos:end="159:22">(</operator><name pos:start="159:23" pos:end="159:30"><name pos:start="159:23" pos:end="159:25">buf</name><index pos:start="159:26" pos:end="159:30">[<expr pos:start="159:27" pos:end="159:29"><name pos:start="159:27" pos:end="159:29">pos</name></expr>]</index></name> <operator pos:start="159:32" pos:end="159:33">&lt;&lt;</operator> <literal type="number" pos:start="159:35" pos:end="159:35">4</literal><operator pos:start="159:36" pos:end="159:36">)</operator> <operator pos:start="159:38" pos:end="159:38">|</operator> <operator pos:start="159:40" pos:end="159:40">(</operator><name pos:start="159:41" pos:end="159:52"><name pos:start="159:41" pos:end="159:43">buf</name><index pos:start="159:44" pos:end="159:52">[<expr pos:start="159:45" pos:end="159:51"><name pos:start="159:45" pos:end="159:47">pos</name> <operator pos:start="159:49" pos:end="159:49">+</operator> <literal type="number" pos:start="159:51" pos:end="159:51">1</literal></expr>]</index></name> <operator pos:start="159:54" pos:end="159:55">&gt;&gt;</operator> <literal type="number" pos:start="159:57" pos:end="159:57">4</literal><operator pos:start="159:58" pos:end="159:58">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="161:17" pos:end="161:65"><expr pos:start="161:17" pos:end="161:64"><name pos:start="161:17" pos:end="161:18">x2</name> <operator pos:start="161:20" pos:end="161:20">=</operator> <operator pos:start="161:22" pos:end="161:22">(</operator><operator pos:start="161:23" pos:end="161:23">(</operator><name pos:start="161:24" pos:end="161:35"><name pos:start="161:24" pos:end="161:26">buf</name><index pos:start="161:27" pos:end="161:35">[<expr pos:start="161:28" pos:end="161:34"><name pos:start="161:28" pos:end="161:30">pos</name> <operator pos:start="161:32" pos:end="161:32">+</operator> <literal type="number" pos:start="161:34" pos:end="161:34">1</literal></expr>]</index></name> <operator pos:start="161:37" pos:end="161:37">&amp;</operator> <literal type="number" pos:start="161:39" pos:end="161:42">0x0f</literal><operator pos:start="161:43" pos:end="161:43">)</operator> <operator pos:start="161:45" pos:end="161:46">&lt;&lt;</operator> <literal type="number" pos:start="161:48" pos:end="161:48">8</literal><operator pos:start="161:49" pos:end="161:49">)</operator> <operator pos:start="161:51" pos:end="161:51">|</operator> <name pos:start="161:53" pos:end="161:64"><name pos:start="161:53" pos:end="161:55">buf</name><index pos:start="161:56" pos:end="161:64">[<expr pos:start="161:57" pos:end="161:63"><name pos:start="161:57" pos:end="161:59">pos</name> <operator pos:start="161:61" pos:end="161:61">+</operator> <literal type="number" pos:start="161:63" pos:end="161:63">2</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="163:17" pos:end="163:63"><expr pos:start="163:17" pos:end="163:62"><name pos:start="163:17" pos:end="163:18">y1</name> <operator pos:start="163:20" pos:end="163:20">=</operator> <operator pos:start="163:22" pos:end="163:22">(</operator><name pos:start="163:23" pos:end="163:34"><name pos:start="163:23" pos:end="163:25">buf</name><index pos:start="163:26" pos:end="163:34">[<expr pos:start="163:27" pos:end="163:33"><name pos:start="163:27" pos:end="163:29">pos</name> <operator pos:start="163:31" pos:end="163:31">+</operator> <literal type="number" pos:start="163:33" pos:end="163:33">3</literal></expr>]</index></name> <operator pos:start="163:36" pos:end="163:37">&lt;&lt;</operator> <literal type="number" pos:start="163:39" pos:end="163:39">4</literal><operator pos:start="163:40" pos:end="163:40">)</operator> <operator pos:start="163:42" pos:end="163:42">|</operator> <operator pos:start="163:44" pos:end="163:44">(</operator><name pos:start="163:45" pos:end="163:56"><name pos:start="163:45" pos:end="163:47">buf</name><index pos:start="163:48" pos:end="163:56">[<expr pos:start="163:49" pos:end="163:55"><name pos:start="163:49" pos:end="163:51">pos</name> <operator pos:start="163:53" pos:end="163:53">+</operator> <literal type="number" pos:start="163:55" pos:end="163:55">4</literal></expr>]</index></name> <operator pos:start="163:58" pos:end="163:59">&gt;&gt;</operator> <literal type="number" pos:start="163:61" pos:end="163:61">4</literal><operator pos:start="163:62" pos:end="163:62">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="165:17" pos:end="165:65"><expr pos:start="165:17" pos:end="165:64"><name pos:start="165:17" pos:end="165:18">y2</name> <operator pos:start="165:20" pos:end="165:20">=</operator> <operator pos:start="165:22" pos:end="165:22">(</operator><operator pos:start="165:23" pos:end="165:23">(</operator><name pos:start="165:24" pos:end="165:35"><name pos:start="165:24" pos:end="165:26">buf</name><index pos:start="165:27" pos:end="165:35">[<expr pos:start="165:28" pos:end="165:34"><name pos:start="165:28" pos:end="165:30">pos</name> <operator pos:start="165:32" pos:end="165:32">+</operator> <literal type="number" pos:start="165:34" pos:end="165:34">4</literal></expr>]</index></name> <operator pos:start="165:37" pos:end="165:37">&amp;</operator> <literal type="number" pos:start="165:39" pos:end="165:42">0x0f</literal><operator pos:start="165:43" pos:end="165:43">)</operator> <operator pos:start="165:45" pos:end="165:46">&lt;&lt;</operator> <literal type="number" pos:start="165:48" pos:end="165:48">8</literal><operator pos:start="165:49" pos:end="165:49">)</operator> <operator pos:start="165:51" pos:end="165:51">|</operator> <name pos:start="165:53" pos:end="165:64"><name pos:start="165:53" pos:end="165:55">buf</name><index pos:start="165:56" pos:end="165:64">[<expr pos:start="165:57" pos:end="165:63"><name pos:start="165:57" pos:end="165:59">pos</name> <operator pos:start="165:61" pos:end="165:61">+</operator> <literal type="number" pos:start="165:63" pos:end="165:63">5</literal></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="167:17" pos:end="169:32"><if pos:start="167:17" pos:end="169:32">if <condition pos:start="167:20" pos:end="167:31">(<expr pos:start="167:21" pos:end="167:30"><name pos:start="167:21" pos:end="167:23">cmd</name> <operator pos:start="167:25" pos:end="167:25">&amp;</operator> <literal type="number" pos:start="167:27" pos:end="167:30">0x80</literal></expr>)</condition><block type="pseudo" pos:start="169:21" pos:end="169:32"><block_content pos:start="169:21" pos:end="169:32">

                    <expr_stmt pos:start="169:21" pos:end="169:32"><expr pos:start="169:21" pos:end="169:31"><name pos:start="169:21" pos:end="169:27">is_8bit</name> <operator pos:start="169:29" pos:end="169:29">=</operator> <literal type="number" pos:start="169:31" pos:end="169:31">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="171:17" pos:end="171:75"><expr pos:start="171:17" pos:end="171:74"><call pos:start="171:17" pos:end="171:74"><name pos:start="171:17" pos:end="171:23">av_dlog</name><argument_list pos:start="171:24" pos:end="171:74">(<argument pos:start="171:25" pos:end="171:28"><expr pos:start="171:25" pos:end="171:28"><name pos:start="171:25" pos:end="171:28">NULL</name></expr></argument>, <argument pos:start="171:31" pos:end="171:57"><expr pos:start="171:31" pos:end="171:57"><literal type="string" pos:start="171:31" pos:end="171:57">"x1=%d x2=%d y1=%d y2=%d\n"</literal></expr></argument>, <argument pos:start="171:60" pos:end="171:61"><expr pos:start="171:60" pos:end="171:61"><name pos:start="171:60" pos:end="171:61">x1</name></expr></argument>, <argument pos:start="171:64" pos:end="171:65"><expr pos:start="171:64" pos:end="171:65"><name pos:start="171:64" pos:end="171:65">x2</name></expr></argument>, <argument pos:start="171:68" pos:end="171:69"><expr pos:start="171:68" pos:end="171:69"><name pos:start="171:68" pos:end="171:69">y1</name></expr></argument>, <argument pos:start="171:72" pos:end="171:73"><expr pos:start="171:72" pos:end="171:73"><name pos:start="171:72" pos:end="171:73">y2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="173:17" pos:end="173:25"><expr pos:start="173:17" pos:end="173:24"><name pos:start="173:17" pos:end="173:19">pos</name> <operator pos:start="173:21" pos:end="173:22">+=</operator> <literal type="number" pos:start="173:24" pos:end="173:24">6</literal></expr>;</expr_stmt>

                <break pos:start="175:17" pos:end="175:22">break;</break>

            <case pos:start="177:13" pos:end="177:22">case <expr pos:start="177:18" pos:end="177:21"><literal type="number" pos:start="177:18" pos:end="177:21">0x06</literal></expr>:</case>

                <if_stmt pos:start="179:17" pos:end="181:30"><if pos:start="179:17" pos:end="181:30">if <condition pos:start="179:20" pos:end="179:41">(<expr pos:start="179:21" pos:end="179:40"><operator pos:start="179:21" pos:end="179:21">(</operator><name pos:start="179:22" pos:end="179:29">buf_size</name> <operator pos:start="179:31" pos:end="179:31">-</operator> <name pos:start="179:33" pos:end="179:35">pos</name><operator pos:start="179:36" pos:end="179:36">)</operator> <operator pos:start="179:38" pos:end="179:38">&lt;</operator> <literal type="number" pos:start="179:40" pos:end="179:40">4</literal></expr>)</condition><block type="pseudo" pos:start="181:21" pos:end="181:30"><block_content pos:start="181:21" pos:end="181:30">

                    <goto pos:start="181:21" pos:end="181:30">goto <name pos:start="181:26" pos:end="181:29">fail</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="183:17" pos:end="183:45"><expr pos:start="183:17" pos:end="183:44"><name pos:start="183:17" pos:end="183:23">offset1</name> <operator pos:start="183:25" pos:end="183:25">=</operator> <call pos:start="183:27" pos:end="183:44"><name pos:start="183:27" pos:end="183:33">AV_RB16</name><argument_list pos:start="183:34" pos:end="183:44">(<argument pos:start="183:35" pos:end="183:43"><expr pos:start="183:35" pos:end="183:43"><name pos:start="183:35" pos:end="183:37">buf</name> <operator pos:start="183:39" pos:end="183:39">+</operator> <name pos:start="183:41" pos:end="183:43">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="185:17" pos:end="185:49"><expr pos:start="185:17" pos:end="185:48"><name pos:start="185:17" pos:end="185:23">offset2</name> <operator pos:start="185:25" pos:end="185:25">=</operator> <call pos:start="185:27" pos:end="185:48"><name pos:start="185:27" pos:end="185:33">AV_RB16</name><argument_list pos:start="185:34" pos:end="185:48">(<argument pos:start="185:35" pos:end="185:47"><expr pos:start="185:35" pos:end="185:47"><name pos:start="185:35" pos:end="185:37">buf</name> <operator pos:start="185:39" pos:end="185:39">+</operator> <name pos:start="185:41" pos:end="185:43">pos</name> <operator pos:start="185:45" pos:end="185:45">+</operator> <literal type="number" pos:start="185:47" pos:end="185:47">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="187:17" pos:end="187:83"><expr pos:start="187:17" pos:end="187:82"><call pos:start="187:17" pos:end="187:82"><name pos:start="187:17" pos:end="187:23">av_dlog</name><argument_list pos:start="187:24" pos:end="187:82">(<argument pos:start="187:25" pos:end="187:28"><expr pos:start="187:25" pos:end="187:28"><name pos:start="187:25" pos:end="187:28">NULL</name></expr></argument>, <argument pos:start="187:31" pos:end="187:63"><expr pos:start="187:31" pos:end="187:63"><literal type="string" pos:start="187:31" pos:end="187:63">"offset1=0x%04x offset2=0x%04x\n"</literal></expr></argument>, <argument pos:start="187:66" pos:end="187:72"><expr pos:start="187:66" pos:end="187:72"><name pos:start="187:66" pos:end="187:72">offset1</name></expr></argument>, <argument pos:start="187:75" pos:end="187:81"><expr pos:start="187:75" pos:end="187:81"><name pos:start="187:75" pos:end="187:81">offset2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="189:17" pos:end="189:25"><expr pos:start="189:17" pos:end="189:24"><name pos:start="189:17" pos:end="189:19">pos</name> <operator pos:start="189:21" pos:end="189:22">+=</operator> <literal type="number" pos:start="189:24" pos:end="189:24">4</literal></expr>;</expr_stmt>

                <break pos:start="191:17" pos:end="191:22">break;</break>

            <case pos:start="193:13" pos:end="193:22">case <expr pos:start="193:18" pos:end="193:21"><literal type="number" pos:start="193:18" pos:end="193:21">0x86</literal></expr>:</case>

                <if_stmt pos:start="195:17" pos:end="197:30"><if pos:start="195:17" pos:end="197:30">if <condition pos:start="195:20" pos:end="195:41">(<expr pos:start="195:21" pos:end="195:40"><operator pos:start="195:21" pos:end="195:21">(</operator><name pos:start="195:22" pos:end="195:29">buf_size</name> <operator pos:start="195:31" pos:end="195:31">-</operator> <name pos:start="195:33" pos:end="195:35">pos</name><operator pos:start="195:36" pos:end="195:36">)</operator> <operator pos:start="195:38" pos:end="195:38">&lt;</operator> <literal type="number" pos:start="195:40" pos:end="195:40">8</literal></expr>)</condition><block type="pseudo" pos:start="197:21" pos:end="197:30"><block_content pos:start="197:21" pos:end="197:30">

                    <goto pos:start="197:21" pos:end="197:30">goto <name pos:start="197:26" pos:end="197:29">fail</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="199:17" pos:end="199:45"><expr pos:start="199:17" pos:end="199:44"><name pos:start="199:17" pos:end="199:23">offset1</name> <operator pos:start="199:25" pos:end="199:25">=</operator> <call pos:start="199:27" pos:end="199:44"><name pos:start="199:27" pos:end="199:33">AV_RB32</name><argument_list pos:start="199:34" pos:end="199:44">(<argument pos:start="199:35" pos:end="199:43"><expr pos:start="199:35" pos:end="199:43"><name pos:start="199:35" pos:end="199:37">buf</name> <operator pos:start="199:39" pos:end="199:39">+</operator> <name pos:start="199:41" pos:end="199:43">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="201:17" pos:end="201:49"><expr pos:start="201:17" pos:end="201:48"><name pos:start="201:17" pos:end="201:23">offset2</name> <operator pos:start="201:25" pos:end="201:25">=</operator> <call pos:start="201:27" pos:end="201:48"><name pos:start="201:27" pos:end="201:33">AV_RB32</name><argument_list pos:start="201:34" pos:end="201:48">(<argument pos:start="201:35" pos:end="201:47"><expr pos:start="201:35" pos:end="201:47"><name pos:start="201:35" pos:end="201:37">buf</name> <operator pos:start="201:39" pos:end="201:39">+</operator> <name pos:start="201:41" pos:end="201:43">pos</name> <operator pos:start="201:45" pos:end="201:45">+</operator> <literal type="number" pos:start="201:47" pos:end="201:47">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="203:17" pos:end="203:83"><expr pos:start="203:17" pos:end="203:82"><call pos:start="203:17" pos:end="203:82"><name pos:start="203:17" pos:end="203:23">av_dlog</name><argument_list pos:start="203:24" pos:end="203:82">(<argument pos:start="203:25" pos:end="203:28"><expr pos:start="203:25" pos:end="203:28"><name pos:start="203:25" pos:end="203:28">NULL</name></expr></argument>, <argument pos:start="203:31" pos:end="203:63"><expr pos:start="203:31" pos:end="203:63"><literal type="string" pos:start="203:31" pos:end="203:63">"offset1=0x%04x offset2=0x%04x\n"</literal></expr></argument>, <argument pos:start="203:66" pos:end="203:72"><expr pos:start="203:66" pos:end="203:72"><name pos:start="203:66" pos:end="203:72">offset1</name></expr></argument>, <argument pos:start="203:75" pos:end="203:81"><expr pos:start="203:75" pos:end="203:81"><name pos:start="203:75" pos:end="203:81">offset2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="205:17" pos:end="205:25"><expr pos:start="205:17" pos:end="205:24"><name pos:start="205:17" pos:end="205:19">pos</name> <operator pos:start="205:21" pos:end="205:22">+=</operator> <literal type="number" pos:start="205:24" pos:end="205:24">8</literal></expr>;</expr_stmt>

                <break pos:start="207:17" pos:end="207:22">break;</break>



            <case pos:start="211:13" pos:end="211:22">case <expr pos:start="211:18" pos:end="211:21"><literal type="number" pos:start="211:18" pos:end="211:21">0x83</literal></expr>:</case>

                <comment type="block" pos:start="213:17" pos:end="213:36">/* HD set palette */</comment>

                <if_stmt pos:start="215:17" pos:end="217:30"><if pos:start="215:17" pos:end="217:30">if <condition pos:start="215:20" pos:end="215:43">(<expr pos:start="215:21" pos:end="215:42"><operator pos:start="215:21" pos:end="215:21">(</operator><name pos:start="215:22" pos:end="215:29">buf_size</name> <operator pos:start="215:31" pos:end="215:31">-</operator> <name pos:start="215:33" pos:end="215:35">pos</name><operator pos:start="215:36" pos:end="215:36">)</operator> <operator pos:start="215:38" pos:end="215:38">&lt;</operator> <literal type="number" pos:start="215:40" pos:end="215:42">768</literal></expr>)</condition><block type="pseudo" pos:start="217:21" pos:end="217:30"><block_content pos:start="217:21" pos:end="217:30">

                    <goto pos:start="217:21" pos:end="217:30">goto <name pos:start="217:26" pos:end="217:29">fail</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="219:17" pos:end="219:40"><expr pos:start="219:17" pos:end="219:39"><name pos:start="219:17" pos:end="219:27">yuv_palette</name> <operator pos:start="219:29" pos:end="219:29">=</operator> <name pos:start="219:31" pos:end="219:33">buf</name> <operator pos:start="219:35" pos:end="219:35">+</operator> <name pos:start="219:37" pos:end="219:39">pos</name></expr>;</expr_stmt>

                <expr_stmt pos:start="221:17" pos:end="221:27"><expr pos:start="221:17" pos:end="221:26"><name pos:start="221:17" pos:end="221:19">pos</name> <operator pos:start="221:21" pos:end="221:22">+=</operator> <literal type="number" pos:start="221:24" pos:end="221:26">768</literal></expr>;</expr_stmt>

                <break pos:start="223:17" pos:end="223:22">break;</break>

            <case pos:start="225:13" pos:end="225:22">case <expr pos:start="225:18" pos:end="225:21"><literal type="number" pos:start="225:18" pos:end="225:21">0x84</literal></expr>:</case>

                <comment type="block" pos:start="227:17" pos:end="227:45">/* HD set contrast (alpha) */</comment>

                <if_stmt pos:start="229:17" pos:end="231:30"><if pos:start="229:17" pos:end="231:30">if <condition pos:start="229:20" pos:end="229:43">(<expr pos:start="229:21" pos:end="229:42"><operator pos:start="229:21" pos:end="229:21">(</operator><name pos:start="229:22" pos:end="229:29">buf_size</name> <operator pos:start="229:31" pos:end="229:31">-</operator> <name pos:start="229:33" pos:end="229:35">pos</name><operator pos:start="229:36" pos:end="229:36">)</operator> <operator pos:start="229:38" pos:end="229:38">&lt;</operator> <literal type="number" pos:start="229:40" pos:end="229:42">256</literal></expr>)</condition><block type="pseudo" pos:start="231:21" pos:end="231:30"><block_content pos:start="231:21" pos:end="231:30">

                    <goto pos:start="231:21" pos:end="231:30">goto <name pos:start="231:26" pos:end="231:29">fail</name>;</goto></block_content></block></if></if_stmt>

                <for pos:start="233:17" pos:end="235:49">for <control pos:start="233:21" pos:end="233:41">(<init pos:start="233:22" pos:end="233:27"><expr pos:start="233:22" pos:end="233:26"><name pos:start="233:22" pos:end="233:22">i</name> <operator pos:start="233:24" pos:end="233:24">=</operator> <literal type="number" pos:start="233:26" pos:end="233:26">0</literal></expr>;</init> <condition pos:start="233:29" pos:end="233:36"><expr pos:start="233:29" pos:end="233:35"><name pos:start="233:29" pos:end="233:29">i</name> <operator pos:start="233:31" pos:end="233:31">&lt;</operator> <literal type="number" pos:start="233:33" pos:end="233:35">256</literal></expr>;</condition> <incr pos:start="233:38" pos:end="233:40"><expr pos:start="233:38" pos:end="233:40"><name pos:start="233:38" pos:end="233:38">i</name><operator pos:start="233:39" pos:end="233:40">++</operator></expr></incr>)</control><block type="pseudo" pos:start="235:21" pos:end="235:49"><block_content pos:start="235:21" pos:end="235:49">

                    <expr_stmt pos:start="235:21" pos:end="235:49"><expr pos:start="235:21" pos:end="235:48"><name pos:start="235:21" pos:end="235:28"><name pos:start="235:21" pos:end="235:25">alpha</name><index pos:start="235:26" pos:end="235:28">[<expr pos:start="235:27" pos:end="235:27"><name pos:start="235:27" pos:end="235:27">i</name></expr>]</index></name> <operator pos:start="235:30" pos:end="235:30">=</operator> <literal type="number" pos:start="235:32" pos:end="235:37">0xFF</literal> <operator pos:start="235:37" pos:end="235:37">-</operator> <name pos:start="235:39" pos:end="235:48"><name pos:start="235:39" pos:end="235:41">buf</name><index pos:start="235:42" pos:end="235:48">[<expr pos:start="235:43" pos:end="235:47"><name pos:start="235:43" pos:end="235:45">pos</name><operator pos:start="235:46" pos:end="235:46">+</operator><name pos:start="235:47" pos:end="235:47">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                <expr_stmt pos:start="237:17" pos:end="237:27"><expr pos:start="237:17" pos:end="237:26"><name pos:start="237:17" pos:end="237:19">pos</name> <operator pos:start="237:21" pos:end="237:22">+=</operator> <literal type="number" pos:start="237:24" pos:end="237:26">256</literal></expr>;</expr_stmt>

                <break pos:start="239:17" pos:end="239:22">break;</break>



            <case pos:start="243:13" pos:end="243:22">case <expr pos:start="243:18" pos:end="243:21"><literal type="number" pos:start="243:18" pos:end="243:21">0xff</literal></expr>:</case>

                <goto pos:start="245:17" pos:end="245:29">goto <name pos:start="245:22" pos:end="245:28">the_end</name>;</goto>

            <default pos:start="247:13" pos:end="247:20">default:</default>

                <expr_stmt pos:start="249:17" pos:end="249:77"><expr pos:start="249:17" pos:end="249:76"><call pos:start="249:17" pos:end="249:76"><name pos:start="249:17" pos:end="249:23">av_dlog</name><argument_list pos:start="249:24" pos:end="249:76">(<argument pos:start="249:25" pos:end="249:28"><expr pos:start="249:25" pos:end="249:28"><name pos:start="249:25" pos:end="249:28">NULL</name></expr></argument>, <argument pos:start="249:31" pos:end="249:70"><expr pos:start="249:31" pos:end="249:70"><literal type="string" pos:start="249:31" pos:end="249:70">"unrecognised subpicture command 0x%x\n"</literal></expr></argument>, <argument pos:start="249:73" pos:end="249:75"><expr pos:start="249:73" pos:end="249:75"><name pos:start="249:73" pos:end="249:75">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="251:17" pos:end="251:29">goto <name pos:start="251:22" pos:end="251:28">the_end</name>;</goto>

            </block_content>}</block></switch>

        </block_content>}</block></while>

    <label pos:start="257:5" pos:end="257:12"><name pos:start="257:5" pos:end="257:11">the_end</name>:</label>

        <if_stmt pos:start="259:9" pos:end="343:9"><if pos:start="259:9" pos:end="343:9">if <condition pos:start="259:12" pos:end="259:25">(<expr pos:start="259:13" pos:end="259:24"><name pos:start="259:13" pos:end="259:19">offset1</name> <operator pos:start="259:21" pos:end="259:22">&gt;=</operator> <literal type="number" pos:start="259:24" pos:end="259:24">0</literal></expr>)</condition> <block pos:start="259:27" pos:end="343:9">{<block_content pos:start="261:13" pos:end="341:13">

            <decl_stmt pos:start="261:13" pos:end="261:21"><decl pos:start="261:13" pos:end="261:17"><type pos:start="261:13" pos:end="261:15"><name pos:start="261:13" pos:end="261:15">int</name></type> <name pos:start="261:17" pos:end="261:17">w</name></decl>, <decl pos:start="261:20" pos:end="261:20"><type ref="prev" pos:start="261:13" pos:end="261:15"/><name pos:start="261:20" pos:end="261:20">h</name></decl>;</decl_stmt>

            <decl_stmt pos:start="263:13" pos:end="263:28"><decl pos:start="263:13" pos:end="263:27"><type pos:start="263:13" pos:end="263:21"><name pos:start="263:13" pos:end="263:19">uint8_t</name> <modifier pos:start="263:21" pos:end="263:21">*</modifier></type><name pos:start="263:22" pos:end="263:27">bitmap</name></decl>;</decl_stmt>



            <comment type="block" pos:start="267:13" pos:end="267:35">/* decode the bitmap */</comment>

            <expr_stmt pos:start="269:13" pos:end="269:28"><expr pos:start="269:13" pos:end="269:27"><name pos:start="269:13" pos:end="269:13">w</name> <operator pos:start="269:15" pos:end="269:15">=</operator> <name pos:start="269:17" pos:end="269:18">x2</name> <operator pos:start="269:20" pos:end="269:20">-</operator> <name pos:start="269:22" pos:end="269:23">x1</name> <operator pos:start="269:25" pos:end="269:25">+</operator> <literal type="number" pos:start="269:27" pos:end="269:27">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="271:13" pos:end="273:22"><if pos:start="271:13" pos:end="273:22">if <condition pos:start="271:16" pos:end="271:22">(<expr pos:start="271:17" pos:end="271:21"><name pos:start="271:17" pos:end="271:17">w</name> <operator pos:start="271:19" pos:end="271:19">&lt;</operator> <literal type="number" pos:start="271:21" pos:end="271:21">0</literal></expr>)</condition><block type="pseudo" pos:start="273:17" pos:end="273:22"><block_content pos:start="273:17" pos:end="273:22">

                <expr_stmt pos:start="273:17" pos:end="273:22"><expr pos:start="273:17" pos:end="273:21"><name pos:start="273:17" pos:end="273:17">w</name> <operator pos:start="273:19" pos:end="273:19">=</operator> <literal type="number" pos:start="273:21" pos:end="273:21">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="275:13" pos:end="275:28"><expr pos:start="275:13" pos:end="275:27"><name pos:start="275:13" pos:end="275:13">h</name> <operator pos:start="275:15" pos:end="275:15">=</operator> <name pos:start="275:17" pos:end="275:18">y2</name> <operator pos:start="275:20" pos:end="275:20">-</operator> <name pos:start="275:22" pos:end="275:23">y1</name> <operator pos:start="275:25" pos:end="275:25">+</operator> <literal type="number" pos:start="275:27" pos:end="275:27">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="277:13" pos:end="279:22"><if pos:start="277:13" pos:end="279:22">if <condition pos:start="277:16" pos:end="277:22">(<expr pos:start="277:17" pos:end="277:21"><name pos:start="277:17" pos:end="277:17">h</name> <operator pos:start="277:19" pos:end="277:19">&lt;</operator> <literal type="number" pos:start="277:21" pos:end="277:21">0</literal></expr>)</condition><block type="pseudo" pos:start="279:17" pos:end="279:22"><block_content pos:start="279:17" pos:end="279:22">

                <expr_stmt pos:start="279:17" pos:end="279:22"><expr pos:start="279:17" pos:end="279:21"><name pos:start="279:17" pos:end="279:17">h</name> <operator pos:start="279:19" pos:end="279:19">=</operator> <literal type="number" pos:start="279:21" pos:end="279:21">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="281:13" pos:end="341:13"><if pos:start="281:13" pos:end="341:13">if <condition pos:start="281:16" pos:end="281:31">(<expr pos:start="281:17" pos:end="281:30"><name pos:start="281:17" pos:end="281:17">w</name> <operator pos:start="281:19" pos:end="281:19">&gt;</operator> <literal type="number" pos:start="281:21" pos:end="281:21">0</literal> <operator pos:start="281:23" pos:end="281:24">&amp;&amp;</operator> <name pos:start="281:26" pos:end="281:26">h</name> <operator pos:start="281:28" pos:end="281:28">&gt;</operator> <literal type="number" pos:start="281:30" pos:end="281:30">0</literal></expr>)</condition> <block pos:start="281:33" pos:end="341:13">{<block_content pos:start="283:17" pos:end="339:84">

                <expr_stmt pos:start="283:17" pos:end="283:40"><expr pos:start="283:17" pos:end="283:39"><call pos:start="283:17" pos:end="283:39"><name pos:start="283:17" pos:end="283:27">reset_rects</name><argument_list pos:start="283:28" pos:end="283:39">(<argument pos:start="283:29" pos:end="283:38"><expr pos:start="283:29" pos:end="283:38"><name pos:start="283:29" pos:end="283:38">sub_header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="287:17" pos:end="287:42"><expr pos:start="287:17" pos:end="287:41"><name pos:start="287:17" pos:end="287:22">bitmap</name> <operator pos:start="287:24" pos:end="287:24">=</operator> <call pos:start="287:26" pos:end="287:41"><name pos:start="287:26" pos:end="287:34">av_malloc</name><argument_list pos:start="287:35" pos:end="287:41">(<argument pos:start="287:36" pos:end="287:40"><expr pos:start="287:36" pos:end="287:40"><name pos:start="287:36" pos:end="287:36">w</name> <operator pos:start="287:38" pos:end="287:38">*</operator> <name pos:start="287:40" pos:end="287:40">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="289:17" pos:end="289:75"><expr pos:start="289:17" pos:end="289:74"><name pos:start="289:17" pos:end="289:33"><name pos:start="289:17" pos:end="289:26">sub_header</name><operator pos:start="289:27" pos:end="289:28">-&gt;</operator><name pos:start="289:29" pos:end="289:33">rects</name></name> <operator pos:start="289:35" pos:end="289:35">=</operator> <call pos:start="289:37" pos:end="289:74"><name pos:start="289:37" pos:end="289:46">av_mallocz</name><argument_list pos:start="289:47" pos:end="289:74">(<argument pos:start="289:48" pos:end="289:73"><expr pos:start="289:48" pos:end="289:73"><sizeof pos:start="289:48" pos:end="289:73">sizeof<argument_list pos:start="289:54" pos:end="289:73">(<argument pos:start="289:55" pos:end="289:72"><expr pos:start="289:55" pos:end="289:72"><operator pos:start="289:55" pos:end="289:55">*</operator><name pos:start="289:56" pos:end="289:72"><name pos:start="289:56" pos:end="289:65">sub_header</name><operator pos:start="289:66" pos:end="289:67">-&gt;</operator><name pos:start="289:68" pos:end="289:72">rects</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="291:17" pos:end="291:74"><expr pos:start="291:17" pos:end="291:73"><name pos:start="291:17" pos:end="291:36"><name pos:start="291:17" pos:end="291:26">sub_header</name><operator pos:start="291:27" pos:end="291:28">-&gt;</operator><name pos:start="291:29" pos:end="291:33">rects</name><index pos:start="291:34" pos:end="291:36">[<expr pos:start="291:35" pos:end="291:35"><literal type="number" pos:start="291:35" pos:end="291:35">0</literal></expr>]</index></name> <operator pos:start="291:38" pos:end="291:38">=</operator> <call pos:start="291:40" pos:end="291:73"><name pos:start="291:40" pos:end="291:49">av_mallocz</name><argument_list pos:start="291:50" pos:end="291:73">(<argument pos:start="291:51" pos:end="291:72"><expr pos:start="291:51" pos:end="291:72"><sizeof pos:start="291:51" pos:end="291:72">sizeof<argument_list pos:start="291:57" pos:end="291:72">(<argument pos:start="291:58" pos:end="291:71"><expr pos:start="291:58" pos:end="291:71"><name pos:start="291:58" pos:end="291:71">AVSubtitleRect</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="293:17" pos:end="293:42"><expr pos:start="293:17" pos:end="293:41"><name pos:start="293:17" pos:end="293:37"><name pos:start="293:17" pos:end="293:26">sub_header</name><operator pos:start="293:27" pos:end="293:28">-&gt;</operator><name pos:start="293:29" pos:end="293:37">num_rects</name></name> <operator pos:start="293:39" pos:end="293:39">=</operator> <literal type="number" pos:start="293:41" pos:end="293:41">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="295:17" pos:end="295:60"><expr pos:start="295:17" pos:end="295:59"><name pos:start="295:17" pos:end="295:36"><name pos:start="295:17" pos:end="295:26">sub_header</name><operator pos:start="295:27" pos:end="295:28">-&gt;</operator><name pos:start="295:29" pos:end="295:33">rects</name><index pos:start="295:34" pos:end="295:36">[<expr pos:start="295:35" pos:end="295:35"><literal type="number" pos:start="295:35" pos:end="295:35">0</literal></expr>]</index></name><operator pos:start="295:37" pos:end="295:38">-&gt;</operator><name pos:start="295:39" pos:end="295:50"><name pos:start="295:39" pos:end="295:42">pict</name><operator pos:start="295:43" pos:end="295:43">.</operator><name pos:start="295:44" pos:end="295:47">data</name><index pos:start="295:48" pos:end="295:50">[<expr pos:start="295:49" pos:end="295:49"><literal type="number" pos:start="295:49" pos:end="295:49">0</literal></expr>]</index></name> <operator pos:start="295:52" pos:end="295:52">=</operator> <name pos:start="295:54" pos:end="295:59">bitmap</name></expr>;</expr_stmt>

                <expr_stmt pos:start="297:17" pos:end="299:60"><expr pos:start="297:17" pos:end="299:59"><call pos:start="297:17" pos:end="299:59"><name pos:start="297:17" pos:end="297:26">decode_rle</name><argument_list pos:start="297:27" pos:end="299:59">(<argument pos:start="297:28" pos:end="297:33"><expr pos:start="297:28" pos:end="297:33"><name pos:start="297:28" pos:end="297:33">bitmap</name></expr></argument>, <argument pos:start="297:36" pos:end="297:40"><expr pos:start="297:36" pos:end="297:40"><name pos:start="297:36" pos:end="297:36">w</name> <operator pos:start="297:38" pos:end="297:38">*</operator> <literal type="number" pos:start="297:40" pos:end="297:40">2</literal></expr></argument>, <argument pos:start="297:43" pos:end="297:43"><expr pos:start="297:43" pos:end="297:43"><name pos:start="297:43" pos:end="297:43">w</name></expr></argument>, <argument pos:start="297:46" pos:end="297:56"><expr pos:start="297:46" pos:end="297:56"><operator pos:start="297:46" pos:end="297:46">(</operator><name pos:start="297:47" pos:end="297:47">h</name> <operator pos:start="297:49" pos:end="297:49">+</operator> <literal type="number" pos:start="297:51" pos:end="297:51">1</literal><operator pos:start="297:52" pos:end="297:52">)</operator> <operator pos:start="297:54" pos:end="297:54">/</operator> <literal type="number" pos:start="297:56" pos:end="297:56">2</literal></expr></argument>,

                           <argument pos:start="299:28" pos:end="299:30"><expr pos:start="299:28" pos:end="299:30"><name pos:start="299:28" pos:end="299:30">buf</name></expr></argument>, <argument pos:start="299:33" pos:end="299:39"><expr pos:start="299:33" pos:end="299:39"><name pos:start="299:33" pos:end="299:39">offset1</name></expr></argument>, <argument pos:start="299:42" pos:end="299:49"><expr pos:start="299:42" pos:end="299:49"><name pos:start="299:42" pos:end="299:49">buf_size</name></expr></argument>, <argument pos:start="299:52" pos:end="299:58"><expr pos:start="299:52" pos:end="299:58"><name pos:start="299:52" pos:end="299:58">is_8bit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="301:17" pos:end="303:60"><expr pos:start="301:17" pos:end="303:59"><call pos:start="301:17" pos:end="303:59"><name pos:start="301:17" pos:end="301:26">decode_rle</name><argument_list pos:start="301:27" pos:end="303:59">(<argument pos:start="301:28" pos:end="301:37"><expr pos:start="301:28" pos:end="301:37"><name pos:start="301:28" pos:end="301:33">bitmap</name> <operator pos:start="301:35" pos:end="301:35">+</operator> <name pos:start="301:37" pos:end="301:37">w</name></expr></argument>, <argument pos:start="301:40" pos:end="301:44"><expr pos:start="301:40" pos:end="301:44"><name pos:start="301:40" pos:end="301:40">w</name> <operator pos:start="301:42" pos:end="301:42">*</operator> <literal type="number" pos:start="301:44" pos:end="301:44">2</literal></expr></argument>, <argument pos:start="301:47" pos:end="301:47"><expr pos:start="301:47" pos:end="301:47"><name pos:start="301:47" pos:end="301:47">w</name></expr></argument>, <argument pos:start="301:50" pos:end="301:54"><expr pos:start="301:50" pos:end="301:54"><name pos:start="301:50" pos:end="301:50">h</name> <operator pos:start="301:52" pos:end="301:52">/</operator> <literal type="number" pos:start="301:54" pos:end="301:54">2</literal></expr></argument>,

                           <argument pos:start="303:28" pos:end="303:30"><expr pos:start="303:28" pos:end="303:30"><name pos:start="303:28" pos:end="303:30">buf</name></expr></argument>, <argument pos:start="303:33" pos:end="303:39"><expr pos:start="303:33" pos:end="303:39"><name pos:start="303:33" pos:end="303:39">offset2</name></expr></argument>, <argument pos:start="303:42" pos:end="303:49"><expr pos:start="303:42" pos:end="303:49"><name pos:start="303:42" pos:end="303:49">buf_size</name></expr></argument>, <argument pos:start="303:52" pos:end="303:58"><expr pos:start="303:52" pos:end="303:58"><name pos:start="303:52" pos:end="303:58">is_8bit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="305:17" pos:end="305:80"><expr pos:start="305:17" pos:end="305:79"><name pos:start="305:17" pos:end="305:36"><name pos:start="305:17" pos:end="305:26">sub_header</name><operator pos:start="305:27" pos:end="305:28">-&gt;</operator><name pos:start="305:29" pos:end="305:33">rects</name><index pos:start="305:34" pos:end="305:36">[<expr pos:start="305:35" pos:end="305:35"><literal type="number" pos:start="305:35" pos:end="305:35">0</literal></expr>]</index></name><operator pos:start="305:37" pos:end="305:38">-&gt;</operator><name pos:start="305:39" pos:end="305:50"><name pos:start="305:39" pos:end="305:42">pict</name><operator pos:start="305:43" pos:end="305:43">.</operator><name pos:start="305:44" pos:end="305:47">data</name><index pos:start="305:48" pos:end="305:50">[<expr pos:start="305:49" pos:end="305:49"><literal type="number" pos:start="305:49" pos:end="305:49">1</literal></expr>]</index></name> <operator pos:start="305:52" pos:end="305:52">=</operator> <call pos:start="305:54" pos:end="305:79"><name pos:start="305:54" pos:end="305:63">av_mallocz</name><argument_list pos:start="305:64" pos:end="305:79">(<argument pos:start="305:65" pos:end="305:78"><expr pos:start="305:65" pos:end="305:78"><name pos:start="305:65" pos:end="305:78">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="307:17" pos:end="325:17"><if pos:start="307:17" pos:end="317:17">if <condition pos:start="307:20" pos:end="307:28">(<expr pos:start="307:21" pos:end="307:27"><name pos:start="307:21" pos:end="307:27">is_8bit</name></expr>)</condition> <block pos:start="307:30" pos:end="317:17">{<block_content pos:start="309:21" pos:end="315:106">

                    <if_stmt pos:start="309:21" pos:end="311:34"><if pos:start="309:21" pos:end="311:34">if <condition pos:start="309:24" pos:end="309:37">(<expr pos:start="309:25" pos:end="309:36"><operator pos:start="309:25" pos:end="309:25">!</operator><name pos:start="309:26" pos:end="309:36">yuv_palette</name></expr>)</condition><block type="pseudo" pos:start="311:25" pos:end="311:34"><block_content pos:start="311:25" pos:end="311:34">

                        <goto pos:start="311:25" pos:end="311:34">goto <name pos:start="311:30" pos:end="311:33">fail</name>;</goto></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="313:21" pos:end="313:58"><expr pos:start="313:21" pos:end="313:57"><name pos:start="313:21" pos:end="313:40"><name pos:start="313:21" pos:end="313:30">sub_header</name><operator pos:start="313:31" pos:end="313:32">-&gt;</operator><name pos:start="313:33" pos:end="313:37">rects</name><index pos:start="313:38" pos:end="313:40">[<expr pos:start="313:39" pos:end="313:39"><literal type="number" pos:start="313:39" pos:end="313:39">0</literal></expr>]</index></name><operator pos:start="313:41" pos:end="313:42">-&gt;</operator><name pos:start="313:43" pos:end="313:51">nb_colors</name> <operator pos:start="313:53" pos:end="313:53">=</operator> <literal type="number" pos:start="313:55" pos:end="313:57">256</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="315:21" pos:end="315:106"><expr pos:start="315:21" pos:end="315:105"><call pos:start="315:21" pos:end="315:105"><name pos:start="315:21" pos:end="315:33">yuv_a_to_rgba</name><argument_list pos:start="315:34" pos:end="315:105">(<argument pos:start="315:35" pos:end="315:45"><expr pos:start="315:35" pos:end="315:45"><name pos:start="315:35" pos:end="315:45">yuv_palette</name></expr></argument>, <argument pos:start="315:48" pos:end="315:52"><expr pos:start="315:48" pos:end="315:52"><name pos:start="315:48" pos:end="315:52">alpha</name></expr></argument>, <argument pos:start="315:55" pos:end="315:99"><expr pos:start="315:55" pos:end="315:99"><operator pos:start="315:55" pos:end="315:55">(</operator><name pos:start="315:56" pos:end="315:63">uint32_t</name><operator pos:start="315:64" pos:end="315:64">*</operator><operator pos:start="315:65" pos:end="315:65">)</operator><name pos:start="315:66" pos:end="315:85"><name pos:start="315:66" pos:end="315:75">sub_header</name><operator pos:start="315:76" pos:end="315:77">-&gt;</operator><name pos:start="315:78" pos:end="315:82">rects</name><index pos:start="315:83" pos:end="315:85">[<expr pos:start="315:84" pos:end="315:84"><literal type="number" pos:start="315:84" pos:end="315:84">0</literal></expr>]</index></name><operator pos:start="315:86" pos:end="315:87">-&gt;</operator><name pos:start="315:88" pos:end="315:99"><name pos:start="315:88" pos:end="315:91">pict</name><operator pos:start="315:92" pos:end="315:92">.</operator><name pos:start="315:93" pos:end="315:96">data</name><index pos:start="315:97" pos:end="315:99">[<expr pos:start="315:98" pos:end="315:98"><literal type="number" pos:start="315:98" pos:end="315:98">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="315:102" pos:end="315:104"><expr pos:start="315:102" pos:end="315:104"><literal type="number" pos:start="315:102" pos:end="315:104">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="317:19" pos:end="325:17">else <block pos:start="317:24" pos:end="325:17">{<block_content pos:start="319:21" pos:end="323:44">

                    <expr_stmt pos:start="319:21" pos:end="319:56"><expr pos:start="319:21" pos:end="319:55"><name pos:start="319:21" pos:end="319:40"><name pos:start="319:21" pos:end="319:30">sub_header</name><operator pos:start="319:31" pos:end="319:32">-&gt;</operator><name pos:start="319:33" pos:end="319:37">rects</name><index pos:start="319:38" pos:end="319:40">[<expr pos:start="319:39" pos:end="319:39"><literal type="number" pos:start="319:39" pos:end="319:39">0</literal></expr>]</index></name><operator pos:start="319:41" pos:end="319:42">-&gt;</operator><name pos:start="319:43" pos:end="319:51">nb_colors</name> <operator pos:start="319:53" pos:end="319:53">=</operator> <literal type="number" pos:start="319:55" pos:end="319:55">4</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="321:21" pos:end="323:44"><expr pos:start="321:21" pos:end="323:43"><call pos:start="321:21" pos:end="323:43"><name pos:start="321:21" pos:end="321:33">guess_palette</name><argument_list pos:start="321:34" pos:end="323:43">(<argument pos:start="321:35" pos:end="321:37"><expr pos:start="321:35" pos:end="321:37"><name pos:start="321:35" pos:end="321:37">ctx</name></expr></argument>, <argument pos:start="321:40" pos:end="321:84"><expr pos:start="321:40" pos:end="321:84"><operator pos:start="321:40" pos:end="321:40">(</operator><name pos:start="321:41" pos:end="321:48">uint32_t</name><operator pos:start="321:49" pos:end="321:49">*</operator><operator pos:start="321:50" pos:end="321:50">)</operator><name pos:start="321:51" pos:end="321:70"><name pos:start="321:51" pos:end="321:60">sub_header</name><operator pos:start="321:61" pos:end="321:62">-&gt;</operator><name pos:start="321:63" pos:end="321:67">rects</name><index pos:start="321:68" pos:end="321:70">[<expr pos:start="321:69" pos:end="321:69"><literal type="number" pos:start="321:69" pos:end="321:69">0</literal></expr>]</index></name><operator pos:start="321:71" pos:end="321:72">-&gt;</operator><name pos:start="321:73" pos:end="321:84"><name pos:start="321:73" pos:end="321:76">pict</name><operator pos:start="321:77" pos:end="321:77">.</operator><name pos:start="321:78" pos:end="321:81">data</name><index pos:start="321:82" pos:end="321:84">[<expr pos:start="321:83" pos:end="321:83"><literal type="number" pos:start="321:83" pos:end="321:83">1</literal></expr>]</index></name></expr></argument>,

                                  <argument pos:start="323:35" pos:end="323:42"><expr pos:start="323:35" pos:end="323:42"><literal type="number" pos:start="323:35" pos:end="323:42">0xffff00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="327:17" pos:end="327:45"><expr pos:start="327:17" pos:end="327:44"><name pos:start="327:17" pos:end="327:36"><name pos:start="327:17" pos:end="327:26">sub_header</name><operator pos:start="327:27" pos:end="327:28">-&gt;</operator><name pos:start="327:29" pos:end="327:33">rects</name><index pos:start="327:34" pos:end="327:36">[<expr pos:start="327:35" pos:end="327:35"><literal type="number" pos:start="327:35" pos:end="327:35">0</literal></expr>]</index></name><operator pos:start="327:37" pos:end="327:38">-&gt;</operator><name pos:start="327:39" pos:end="327:39">x</name> <operator pos:start="327:41" pos:end="327:41">=</operator> <name pos:start="327:43" pos:end="327:44">x1</name></expr>;</expr_stmt>

                <expr_stmt pos:start="329:17" pos:end="329:45"><expr pos:start="329:17" pos:end="329:44"><name pos:start="329:17" pos:end="329:36"><name pos:start="329:17" pos:end="329:26">sub_header</name><operator pos:start="329:27" pos:end="329:28">-&gt;</operator><name pos:start="329:29" pos:end="329:33">rects</name><index pos:start="329:34" pos:end="329:36">[<expr pos:start="329:35" pos:end="329:35"><literal type="number" pos:start="329:35" pos:end="329:35">0</literal></expr>]</index></name><operator pos:start="329:37" pos:end="329:38">-&gt;</operator><name pos:start="329:39" pos:end="329:39">y</name> <operator pos:start="329:41" pos:end="329:41">=</operator> <name pos:start="329:43" pos:end="329:44">y1</name></expr>;</expr_stmt>

                <expr_stmt pos:start="331:17" pos:end="331:44"><expr pos:start="331:17" pos:end="331:43"><name pos:start="331:17" pos:end="331:36"><name pos:start="331:17" pos:end="331:26">sub_header</name><operator pos:start="331:27" pos:end="331:28">-&gt;</operator><name pos:start="331:29" pos:end="331:33">rects</name><index pos:start="331:34" pos:end="331:36">[<expr pos:start="331:35" pos:end="331:35"><literal type="number" pos:start="331:35" pos:end="331:35">0</literal></expr>]</index></name><operator pos:start="331:37" pos:end="331:38">-&gt;</operator><name pos:start="331:39" pos:end="331:39">w</name> <operator pos:start="331:41" pos:end="331:41">=</operator> <name pos:start="331:43" pos:end="331:43">w</name></expr>;</expr_stmt>

                <expr_stmt pos:start="333:17" pos:end="333:44"><expr pos:start="333:17" pos:end="333:43"><name pos:start="333:17" pos:end="333:36"><name pos:start="333:17" pos:end="333:26">sub_header</name><operator pos:start="333:27" pos:end="333:28">-&gt;</operator><name pos:start="333:29" pos:end="333:33">rects</name><index pos:start="333:34" pos:end="333:36">[<expr pos:start="333:35" pos:end="333:35"><literal type="number" pos:start="333:35" pos:end="333:35">0</literal></expr>]</index></name><operator pos:start="333:37" pos:end="333:38">-&gt;</operator><name pos:start="333:39" pos:end="333:39">h</name> <operator pos:start="333:41" pos:end="333:41">=</operator> <name pos:start="333:43" pos:end="333:43">h</name></expr>;</expr_stmt>

                <expr_stmt pos:start="335:17" pos:end="335:61"><expr pos:start="335:17" pos:end="335:60"><name pos:start="335:17" pos:end="335:36"><name pos:start="335:17" pos:end="335:26">sub_header</name><operator pos:start="335:27" pos:end="335:28">-&gt;</operator><name pos:start="335:29" pos:end="335:33">rects</name><index pos:start="335:34" pos:end="335:36">[<expr pos:start="335:35" pos:end="335:35"><literal type="number" pos:start="335:35" pos:end="335:35">0</literal></expr>]</index></name><operator pos:start="335:37" pos:end="335:38">-&gt;</operator><name pos:start="335:39" pos:end="335:42">type</name> <operator pos:start="335:44" pos:end="335:44">=</operator> <name pos:start="335:46" pos:end="335:60">SUBTITLE_BITMAP</name></expr>;</expr_stmt>

                <expr_stmt pos:start="337:17" pos:end="337:59"><expr pos:start="337:17" pos:end="337:58"><name pos:start="337:17" pos:end="337:36"><name pos:start="337:17" pos:end="337:26">sub_header</name><operator pos:start="337:27" pos:end="337:28">-&gt;</operator><name pos:start="337:29" pos:end="337:33">rects</name><index pos:start="337:34" pos:end="337:36">[<expr pos:start="337:35" pos:end="337:35"><literal type="number" pos:start="337:35" pos:end="337:35">0</literal></expr>]</index></name><operator pos:start="337:37" pos:end="337:38">-&gt;</operator><name pos:start="337:39" pos:end="337:54"><name pos:start="337:39" pos:end="337:42">pict</name><operator pos:start="337:43" pos:end="337:43">.</operator><name pos:start="337:44" pos:end="337:51">linesize</name><index pos:start="337:52" pos:end="337:54">[<expr pos:start="337:53" pos:end="337:53"><literal type="number" pos:start="337:53" pos:end="337:53">0</literal></expr>]</index></name> <operator pos:start="337:56" pos:end="337:56">=</operator> <name pos:start="337:58" pos:end="337:58">w</name></expr>;</expr_stmt>

                <expr_stmt pos:start="339:17" pos:end="339:84"><expr pos:start="339:17" pos:end="339:83"><name pos:start="339:17" pos:end="339:36"><name pos:start="339:17" pos:end="339:26">sub_header</name><operator pos:start="339:27" pos:end="339:28">-&gt;</operator><name pos:start="339:29" pos:end="339:33">rects</name><index pos:start="339:34" pos:end="339:36">[<expr pos:start="339:35" pos:end="339:35"><literal type="number" pos:start="339:35" pos:end="339:35">0</literal></expr>]</index></name><operator pos:start="339:37" pos:end="339:38">-&gt;</operator><name pos:start="339:39" pos:end="339:43">flags</name> <operator pos:start="339:45" pos:end="339:45">=</operator> <ternary pos:start="339:47" pos:end="339:83"><condition pos:start="339:47" pos:end="339:55"><expr pos:start="339:47" pos:end="339:53"><name pos:start="339:47" pos:end="339:53">is_menu</name></expr> ?</condition><then pos:start="339:57" pos:end="339:79"> <expr pos:start="339:57" pos:end="339:79"><name pos:start="339:57" pos:end="339:79">AV_SUBTITLE_FLAG_FORCED</name></expr> </then><else pos:start="339:81" pos:end="339:83">: <expr pos:start="339:83" pos:end="339:83"><literal type="number" pos:start="339:83" pos:end="339:83">0</literal></expr></else></ternary></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="345:9" pos:end="351:9"><if pos:start="345:9" pos:end="351:9">if <condition pos:start="345:12" pos:end="345:35">(<expr pos:start="345:13" pos:end="345:34"><name pos:start="345:13" pos:end="345:24">next_cmd_pos</name> <operator pos:start="345:26" pos:end="345:26">&lt;</operator> <name pos:start="345:28" pos:end="345:34">cmd_pos</name></expr>)</condition> <block pos:start="345:37" pos:end="351:9">{<block_content pos:start="347:13" pos:end="349:18">

            <expr_stmt pos:start="347:13" pos:end="347:67"><expr pos:start="347:13" pos:end="347:66"><call pos:start="347:13" pos:end="347:66"><name pos:start="347:13" pos:end="347:18">av_log</name><argument_list pos:start="347:19" pos:end="347:66">(<argument pos:start="347:20" pos:end="347:23"><expr pos:start="347:20" pos:end="347:23"><name pos:start="347:20" pos:end="347:23">NULL</name></expr></argument>, <argument pos:start="347:26" pos:end="347:37"><expr pos:start="347:26" pos:end="347:37"><name pos:start="347:26" pos:end="347:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="347:40" pos:end="347:65"><expr pos:start="347:40" pos:end="347:65"><literal type="string" pos:start="347:40" pos:end="347:65">"Invalid command offset\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="349:13" pos:end="349:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="353:9" pos:end="355:18"><if pos:start="353:9" pos:end="355:18">if <condition pos:start="353:12" pos:end="353:36">(<expr pos:start="353:13" pos:end="353:35"><name pos:start="353:13" pos:end="353:24">next_cmd_pos</name> <operator pos:start="353:26" pos:end="353:27">==</operator> <name pos:start="353:29" pos:end="353:35">cmd_pos</name></expr>)</condition><block type="pseudo" pos:start="355:13" pos:end="355:18"><block_content pos:start="355:13" pos:end="355:18">

            <break pos:start="355:13" pos:end="355:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="357:9" pos:end="357:31"><expr pos:start="357:9" pos:end="357:30"><name pos:start="357:9" pos:end="357:15">cmd_pos</name> <operator pos:start="357:17" pos:end="357:17">=</operator> <name pos:start="357:19" pos:end="357:30">next_cmd_pos</name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <if_stmt pos:start="361:5" pos:end="363:23"><if pos:start="361:5" pos:end="363:23">if <condition pos:start="361:8" pos:end="361:34">(<expr pos:start="361:9" pos:end="361:33"><name pos:start="361:9" pos:end="361:29"><name pos:start="361:9" pos:end="361:18">sub_header</name><operator pos:start="361:19" pos:end="361:20">-&gt;</operator><name pos:start="361:21" pos:end="361:29">num_rects</name></name> <operator pos:start="361:31" pos:end="361:31">&gt;</operator> <literal type="number" pos:start="361:33" pos:end="361:33">0</literal></expr>)</condition><block type="pseudo" pos:start="363:9" pos:end="363:23"><block_content pos:start="363:9" pos:end="363:23">

        <return pos:start="363:9" pos:end="363:23">return <expr pos:start="363:16" pos:end="363:22"><name pos:start="363:16" pos:end="363:22">is_menu</name></expr>;</return></block_content></block></if></if_stmt>

 <label pos:start="365:2" pos:end="365:6"><name pos:start="365:2" pos:end="365:5">fail</name>:</label>

    <expr_stmt pos:start="367:5" pos:end="367:28"><expr pos:start="367:5" pos:end="367:27"><call pos:start="367:5" pos:end="367:27"><name pos:start="367:5" pos:end="367:15">reset_rects</name><argument_list pos:start="367:16" pos:end="367:27">(<argument pos:start="367:17" pos:end="367:26"><expr pos:start="367:17" pos:end="367:26"><name pos:start="367:17" pos:end="367:26">sub_header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="369:5" pos:end="369:14">return <expr pos:start="369:12" pos:end="369:13"><operator pos:start="369:12" pos:end="369:12">-</operator><literal type="number" pos:start="369:13" pos:end="369:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
