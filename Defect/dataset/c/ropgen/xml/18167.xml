<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18167.c" pos:tabs="8"><function pos:start="1:1" pos:end="121:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">guess_ni_flag</name><parameter_list pos:start="1:25" pos:end="1:44">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:42"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="121:1">{<block_content pos:start="5:5" pos:end="119:13">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:22">last_start</name> <init pos:start="7:24" pos:end="7:26">= <expr pos:start="7:26" pos:end="7:26"><literal type="number" pos:start="7:26" pos:end="7:26">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:21">first_end</name>  <init pos:start="9:24" pos:end="9:34">= <expr pos:start="9:26" pos:end="9:34"><name pos:start="9:26" pos:end="9:34">INT64_MAX</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:41"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:18">oldpos</name>     <init pos:start="11:24" pos:end="11:41">= <expr pos:start="11:26" pos:end="11:41"><call pos:start="11:26" pos:end="11:41"><name pos:start="11:26" pos:end="11:34">avio_tell</name><argument_list pos:start="11:35" pos:end="11:41">(<argument pos:start="11:36" pos:end="11:40"><expr pos:start="11:36" pos:end="11:40"><name pos:start="11:36" pos:end="11:40"><name pos:start="11:36" pos:end="11:36">s</name><operator pos:start="11:37" pos:end="11:38">-&gt;</operator><name pos:start="11:39" pos:end="11:40">pb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:13"><decl pos:start="13:5" pos:end="13:12"><type pos:start="13:5" pos:end="13:9"><name pos:start="13:5" pos:end="13:7">int</name> <modifier pos:start="13:9" pos:end="13:9">*</modifier></type><name pos:start="13:10" pos:end="13:12">idx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:19"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int64_t</name></type> <name pos:start="15:13" pos:end="15:19">min_pos</name></decl>, <decl pos:start="15:22" pos:end="15:24"><type ref="prev" pos:start="15:5" pos:end="15:11"/><name pos:start="15:22" pos:end="15:24">pos</name></decl>;</decl_stmt>



    <for pos:start="19:5" pos:end="59:5">for <control pos:start="19:9" pos:end="19:39">(<init pos:start="19:10" pos:end="19:15"><expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">i</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</init> <condition pos:start="19:17" pos:end="19:34"><expr pos:start="19:17" pos:end="19:33"><name pos:start="19:17" pos:end="19:17">i</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <name pos:start="19:21" pos:end="19:33"><name pos:start="19:21" pos:end="19:21">s</name><operator pos:start="19:22" pos:end="19:23">-&gt;</operator><name pos:start="19:24" pos:end="19:33">nb_streams</name></name></expr>;</condition> <incr pos:start="19:36" pos:end="19:38"><expr pos:start="19:36" pos:end="19:38"><name pos:start="19:36" pos:end="19:36">i</name><operator pos:start="19:37" pos:end="19:38">++</operator></expr></incr>)</control> <block pos:start="19:41" pos:end="59:5">{<block_content pos:start="21:9" pos:end="57:53">

        <decl_stmt pos:start="21:9" pos:end="21:37"><decl pos:start="21:9" pos:end="21:36"><type pos:start="21:9" pos:end="21:18"><name pos:start="21:9" pos:end="21:16">AVStream</name> <modifier pos:start="21:18" pos:end="21:18">*</modifier></type><name pos:start="21:19" pos:end="21:20">st</name> <init pos:start="21:22" pos:end="21:36">= <expr pos:start="21:24" pos:end="21:36"><name pos:start="21:24" pos:end="21:36"><name pos:start="21:24" pos:end="21:24">s</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:33">streams</name><index pos:start="21:34" pos:end="21:36">[<expr pos:start="21:35" pos:end="21:35"><name pos:start="21:35" pos:end="21:35">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="23:9" pos:end="23:44"><decl pos:start="23:9" pos:end="23:43"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:13">n</name>        <init pos:start="23:22" pos:end="23:43">= <expr pos:start="23:24" pos:end="23:43"><name pos:start="23:24" pos:end="23:43"><name pos:start="23:24" pos:end="23:25">st</name><operator pos:start="23:26" pos:end="23:27">-&gt;</operator><name pos:start="23:28" pos:end="23:43">nb_index_entries</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:26"><decl pos:start="25:9" pos:end="25:25"><type pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:16">unsigned</name> <name pos:start="25:18" pos:end="25:20">int</name></type> <name pos:start="25:22" pos:end="25:25">size</name></decl>;</decl_stmt>



        <if_stmt pos:start="29:9" pos:end="31:21"><if pos:start="29:9" pos:end="31:21">if <condition pos:start="29:12" pos:end="29:19">(<expr pos:start="29:13" pos:end="29:18"><name pos:start="29:13" pos:end="29:13">n</name> <operator pos:start="29:15" pos:end="29:16">&lt;=</operator> <literal type="number" pos:start="29:18" pos:end="29:18">0</literal></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:21"><block_content pos:start="31:13" pos:end="31:21">

            <continue pos:start="31:13" pos:end="31:21">continue;</continue></block_content></block></if></if_stmt>



        <if_stmt pos:start="35:9" pos:end="47:9"><if pos:start="35:9" pos:end="47:9">if <condition pos:start="35:12" pos:end="35:19">(<expr pos:start="35:13" pos:end="35:18"><name pos:start="35:13" pos:end="35:13">n</name> <operator pos:start="35:15" pos:end="35:16">&gt;=</operator> <literal type="number" pos:start="35:18" pos:end="35:18">2</literal></expr>)</condition> <block pos:start="35:21" pos:end="47:9">{<block_content pos:start="37:13" pos:end="45:39">

            <decl_stmt pos:start="37:13" pos:end="37:51"><decl pos:start="37:13" pos:end="37:50"><type pos:start="37:13" pos:end="37:19"><name pos:start="37:13" pos:end="37:19">int64_t</name></type> <name pos:start="37:21" pos:end="37:23">pos</name> <init pos:start="37:25" pos:end="37:50">= <expr pos:start="37:27" pos:end="37:50"><name pos:start="37:27" pos:end="37:46"><name pos:start="37:27" pos:end="37:28">st</name><operator pos:start="37:29" pos:end="37:30">-&gt;</operator><name pos:start="37:31" pos:end="37:43">index_entries</name><index pos:start="37:44" pos:end="37:46">[<expr pos:start="37:45" pos:end="37:45"><literal type="number" pos:start="37:45" pos:end="37:45">0</literal></expr>]</index></name><operator pos:start="37:47" pos:end="37:47">.</operator><name pos:start="37:48" pos:end="37:50">pos</name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:48"><expr pos:start="39:13" pos:end="39:47"><call pos:start="39:13" pos:end="39:47"><name pos:start="39:13" pos:end="39:21">avio_seek</name><argument_list pos:start="39:22" pos:end="39:47">(<argument pos:start="39:23" pos:end="39:27"><expr pos:start="39:23" pos:end="39:27"><name pos:start="39:23" pos:end="39:27"><name pos:start="39:23" pos:end="39:23">s</name><operator pos:start="39:24" pos:end="39:25">-&gt;</operator><name pos:start="39:26" pos:end="39:27">pb</name></name></expr></argument>, <argument pos:start="39:30" pos:end="39:36"><expr pos:start="39:30" pos:end="39:36"><name pos:start="39:30" pos:end="39:32">pos</name> <operator pos:start="39:34" pos:end="39:34">+</operator> <literal type="number" pos:start="39:36" pos:end="39:36">4</literal></expr></argument>, <argument pos:start="39:39" pos:end="39:46"><expr pos:start="39:39" pos:end="39:46"><name pos:start="39:39" pos:end="39:46">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:36"><expr pos:start="41:13" pos:end="41:35"><name pos:start="41:13" pos:end="41:16">size</name> <operator pos:start="41:18" pos:end="41:18">=</operator> <call pos:start="41:20" pos:end="41:35"><name pos:start="41:20" pos:end="41:28">avio_rl32</name><argument_list pos:start="41:29" pos:end="41:35">(<argument pos:start="41:30" pos:end="41:34"><expr pos:start="41:30" pos:end="41:34"><name pos:start="41:30" pos:end="41:34"><name pos:start="41:30" pos:end="41:30">s</name><operator pos:start="41:31" pos:end="41:32">-&gt;</operator><name pos:start="41:33" pos:end="41:34">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="43:13" pos:end="45:39"><if pos:start="43:13" pos:end="45:39">if <condition pos:start="43:16" pos:end="43:54">(<expr pos:start="43:17" pos:end="43:53"><name pos:start="43:17" pos:end="43:19">pos</name> <operator pos:start="43:21" pos:end="43:21">+</operator> <name pos:start="43:23" pos:end="43:26">size</name> <operator pos:start="43:28" pos:end="43:28">&gt;</operator> <name pos:start="43:30" pos:end="43:49"><name pos:start="43:30" pos:end="43:31">st</name><operator pos:start="43:32" pos:end="43:33">-&gt;</operator><name pos:start="43:34" pos:end="43:46">index_entries</name><index pos:start="43:47" pos:end="43:49">[<expr pos:start="43:48" pos:end="43:48"><literal type="number" pos:start="43:48" pos:end="43:48">1</literal></expr>]</index></name><operator pos:start="43:50" pos:end="43:50">.</operator><name pos:start="43:51" pos:end="43:53">pos</name></expr>)</condition><block type="pseudo" pos:start="45:17" pos:end="45:39"><block_content pos:start="45:17" pos:end="45:39">

                <expr_stmt pos:start="45:17" pos:end="45:39"><expr pos:start="45:17" pos:end="45:38"><name pos:start="45:17" pos:end="45:26">last_start</name> <operator pos:start="45:28" pos:end="45:28">=</operator> <name pos:start="45:30" pos:end="45:38">INT64_MAX</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="51:9" pos:end="53:50"><if pos:start="51:9" pos:end="53:50">if <condition pos:start="51:12" pos:end="51:50">(<expr pos:start="51:13" pos:end="51:49"><name pos:start="51:13" pos:end="51:32"><name pos:start="51:13" pos:end="51:14">st</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:29">index_entries</name><index pos:start="51:30" pos:end="51:32">[<expr pos:start="51:31" pos:end="51:31"><literal type="number" pos:start="51:31" pos:end="51:31">0</literal></expr>]</index></name><operator pos:start="51:33" pos:end="51:33">.</operator><name pos:start="51:34" pos:end="51:36">pos</name> <operator pos:start="51:38" pos:end="51:38">&gt;</operator> <name pos:start="51:40" pos:end="51:49">last_start</name></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="53:50"><block_content pos:start="53:13" pos:end="53:50">

            <expr_stmt pos:start="53:13" pos:end="53:50"><expr pos:start="53:13" pos:end="53:49"><name pos:start="53:13" pos:end="53:22">last_start</name> <operator pos:start="53:24" pos:end="53:24">=</operator> <name pos:start="53:26" pos:end="53:45"><name pos:start="53:26" pos:end="53:27">st</name><operator pos:start="53:28" pos:end="53:29">-&gt;</operator><name pos:start="53:30" pos:end="53:42">index_entries</name><index pos:start="53:43" pos:end="53:45">[<expr pos:start="53:44" pos:end="53:44"><literal type="number" pos:start="53:44" pos:end="53:44">0</literal></expr>]</index></name><operator pos:start="53:46" pos:end="53:46">.</operator><name pos:start="53:47" pos:end="53:49">pos</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="55:9" pos:end="57:53"><if pos:start="55:9" pos:end="57:53">if <condition pos:start="55:12" pos:end="55:53">(<expr pos:start="55:13" pos:end="55:52"><name pos:start="55:13" pos:end="55:36"><name pos:start="55:13" pos:end="55:14">st</name><operator pos:start="55:15" pos:end="55:16">-&gt;</operator><name pos:start="55:17" pos:end="55:29">index_entries</name><index pos:start="55:30" pos:end="55:36">[<expr pos:start="55:31" pos:end="55:35"><name pos:start="55:31" pos:end="55:31">n</name> <operator pos:start="55:33" pos:end="55:33">-</operator> <literal type="number" pos:start="55:35" pos:end="55:35">1</literal></expr>]</index></name><operator pos:start="55:37" pos:end="55:37">.</operator><name pos:start="55:38" pos:end="55:40">pos</name> <operator pos:start="55:42" pos:end="55:42">&lt;</operator> <name pos:start="55:44" pos:end="55:52">first_end</name></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:53"><block_content pos:start="57:13" pos:end="57:53">

            <expr_stmt pos:start="57:13" pos:end="57:53"><expr pos:start="57:13" pos:end="57:52"><name pos:start="57:13" pos:end="57:21">first_end</name> <operator pos:start="57:23" pos:end="57:23">=</operator> <name pos:start="57:25" pos:end="57:48"><name pos:start="57:25" pos:end="57:26">st</name><operator pos:start="57:27" pos:end="57:28">-&gt;</operator><name pos:start="57:29" pos:end="57:41">index_entries</name><index pos:start="57:42" pos:end="57:48">[<expr pos:start="57:43" pos:end="57:47"><name pos:start="57:43" pos:end="57:43">n</name> <operator pos:start="57:45" pos:end="57:45">-</operator> <literal type="number" pos:start="57:47" pos:end="57:47">1</literal></expr>]</index></name><operator pos:start="57:49" pos:end="57:49">.</operator><name pos:start="57:50" pos:end="57:52">pos</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="61:5" pos:end="61:39"><expr pos:start="61:5" pos:end="61:38"><call pos:start="61:5" pos:end="61:38"><name pos:start="61:5" pos:end="61:13">avio_seek</name><argument_list pos:start="61:14" pos:end="61:38">(<argument pos:start="61:15" pos:end="61:19"><expr pos:start="61:15" pos:end="61:19"><name pos:start="61:15" pos:end="61:19"><name pos:start="61:15" pos:end="61:15">s</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:19">pb</name></name></expr></argument>, <argument pos:start="61:22" pos:end="61:27"><expr pos:start="61:22" pos:end="61:27"><name pos:start="61:22" pos:end="61:27">oldpos</name></expr></argument>, <argument pos:start="61:30" pos:end="61:37"><expr pos:start="61:30" pos:end="61:37"><name pos:start="61:30" pos:end="61:37">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="65:17"><if pos:start="63:5" pos:end="65:17">if <condition pos:start="63:8" pos:end="63:31">(<expr pos:start="63:9" pos:end="63:30"><name pos:start="63:9" pos:end="63:18">last_start</name> <operator pos:start="63:20" pos:end="63:20">&gt;</operator> <name pos:start="63:22" pos:end="63:30">first_end</name></expr>)</condition><block type="pseudo" pos:start="65:9" pos:end="65:17"><block_content pos:start="65:9" pos:end="65:17">

        <return pos:start="65:9" pos:end="65:17">return <expr pos:start="65:16" pos:end="65:16"><literal type="number" pos:start="65:16" pos:end="65:16">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:48"><expr pos:start="67:5" pos:end="67:47"><name pos:start="67:5" pos:end="67:7">idx</name><operator pos:start="67:8" pos:end="67:8">=</operator> <call pos:start="67:10" pos:end="67:47"><name pos:start="67:10" pos:end="67:18">av_calloc</name><argument_list pos:start="67:19" pos:end="67:47">(<argument pos:start="67:20" pos:end="67:32"><expr pos:start="67:20" pos:end="67:32"><name pos:start="67:20" pos:end="67:32"><name pos:start="67:20" pos:end="67:20">s</name><operator pos:start="67:21" pos:end="67:22">-&gt;</operator><name pos:start="67:23" pos:end="67:32">nb_streams</name></name></expr></argument>, <argument pos:start="67:35" pos:end="67:46"><expr pos:start="67:35" pos:end="67:46"><sizeof pos:start="67:35" pos:end="67:46">sizeof<argument_list pos:start="67:41" pos:end="67:46">(<argument pos:start="67:42" pos:end="67:45"><expr pos:start="67:42" pos:end="67:45"><operator pos:start="67:42" pos:end="67:42">*</operator><name pos:start="67:43" pos:end="67:45">idx</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="69:5" pos:end="71:17"><if pos:start="69:5" pos:end="71:17">if <condition pos:start="69:8" pos:end="69:13">(<expr pos:start="69:9" pos:end="69:12"><operator pos:start="69:9" pos:end="69:9">!</operator><name pos:start="69:10" pos:end="69:12">idx</name></expr>)</condition><block type="pseudo" pos:start="71:9" pos:end="71:17"><block_content pos:start="71:9" pos:end="71:17">

        <return pos:start="71:9" pos:end="71:17">return <expr pos:start="71:16" pos:end="71:16"><literal type="number" pos:start="71:16" pos:end="71:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <for pos:start="73:5" pos:end="115:5">for <control pos:start="73:9" pos:end="73:61">(<init pos:start="73:10" pos:end="73:23"><expr pos:start="73:10" pos:end="73:22"><name pos:start="73:10" pos:end="73:16">min_pos</name><operator pos:start="73:17" pos:end="73:17">=</operator><name pos:start="73:18" pos:end="73:20">pos</name><operator pos:start="73:21" pos:end="73:21">=</operator><literal type="number" pos:start="73:22" pos:end="73:22">0</literal></expr>;</init> <condition pos:start="73:25" pos:end="73:43"><expr pos:start="73:25" pos:end="73:42"><name pos:start="73:25" pos:end="73:31">min_pos</name><operator pos:start="73:32" pos:end="73:33">!=</operator><name pos:start="73:34" pos:end="73:42">INT64_MAX</name></expr>;</condition> <incr pos:start="73:45" pos:end="73:60"><expr pos:start="73:45" pos:end="73:60"><name pos:start="73:45" pos:end="73:47">pos</name><operator pos:start="73:48" pos:end="73:48">=</operator> <name pos:start="73:50" pos:end="73:56">min_pos</name><operator pos:start="73:57" pos:end="73:57">+</operator><literal type="number" pos:start="73:58" pos:end="73:60">1LU</literal></expr></incr>)</control> <block pos:start="73:63" pos:end="115:5">{<block_content pos:start="75:9" pos:end="113:9">

        <decl_stmt pos:start="75:9" pos:end="75:60"><decl pos:start="75:9" pos:end="75:37"><type pos:start="75:9" pos:end="75:15"><name pos:start="75:9" pos:end="75:15">int64_t</name></type> <name pos:start="75:17" pos:end="75:23">max_dts</name> <init pos:start="75:25" pos:end="75:37">= <expr pos:start="75:27" pos:end="75:37"><name pos:start="75:27" pos:end="75:35">INT64_MIN</name><operator pos:start="75:36" pos:end="75:36">/</operator><literal type="number" pos:start="75:37" pos:end="75:37">2</literal></expr></init></decl>, <decl pos:start="75:40" pos:end="75:59"><type ref="prev" pos:start="75:9" pos:end="75:15"/><name pos:start="75:40" pos:end="75:46">min_dts</name><init pos:start="75:47" pos:end="75:59">= <expr pos:start="75:49" pos:end="75:59"><name pos:start="75:49" pos:end="75:57">INT64_MAX</name><operator pos:start="75:58" pos:end="75:58">/</operator><literal type="number" pos:start="75:59" pos:end="75:59">2</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:28"><expr pos:start="77:9" pos:end="77:27"><name pos:start="77:9" pos:end="77:15">min_pos</name> <operator pos:start="77:17" pos:end="77:17">=</operator> <name pos:start="77:19" pos:end="77:27">INT64_MAX</name></expr>;</expr_stmt>



        <for pos:start="81:9" pos:end="105:9">for <control pos:start="81:13" pos:end="81:39">(<init pos:start="81:14" pos:end="81:17"><expr pos:start="81:14" pos:end="81:16"><name pos:start="81:14" pos:end="81:14">i</name><operator pos:start="81:15" pos:end="81:15">=</operator><literal type="number" pos:start="81:16" pos:end="81:16">0</literal></expr>;</init> <condition pos:start="81:19" pos:end="81:34"><expr pos:start="81:19" pos:end="81:33"><name pos:start="81:19" pos:end="81:19">i</name><operator pos:start="81:20" pos:end="81:20">&lt;</operator><name pos:start="81:21" pos:end="81:33"><name pos:start="81:21" pos:end="81:21">s</name><operator pos:start="81:22" pos:end="81:23">-&gt;</operator><name pos:start="81:24" pos:end="81:33">nb_streams</name></name></expr>;</condition> <incr pos:start="81:36" pos:end="81:38"><expr pos:start="81:36" pos:end="81:38"><name pos:start="81:36" pos:end="81:36">i</name><operator pos:start="81:37" pos:end="81:38">++</operator></expr></incr>)</control> <block pos:start="81:41" pos:end="105:9">{<block_content pos:start="83:13" pos:end="103:152">

            <decl_stmt pos:start="83:13" pos:end="83:41"><decl pos:start="83:13" pos:end="83:40"><type pos:start="83:13" pos:end="83:22"><name pos:start="83:13" pos:end="83:20">AVStream</name> <modifier pos:start="83:22" pos:end="83:22">*</modifier></type><name pos:start="83:23" pos:end="83:24">st</name> <init pos:start="83:26" pos:end="83:40">= <expr pos:start="83:28" pos:end="83:40"><name pos:start="83:28" pos:end="83:40"><name pos:start="83:28" pos:end="83:28">s</name><operator pos:start="83:29" pos:end="83:30">-&gt;</operator><name pos:start="83:31" pos:end="83:37">streams</name><index pos:start="83:38" pos:end="83:40">[<expr pos:start="83:39" pos:end="83:39"><name pos:start="83:39" pos:end="83:39">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="85:13" pos:end="85:43"><decl pos:start="85:13" pos:end="85:42"><type pos:start="85:13" pos:end="85:23"><name pos:start="85:13" pos:end="85:21">AVIStream</name> <modifier pos:start="85:23" pos:end="85:23">*</modifier></type><name pos:start="85:24" pos:end="85:26">ast</name> <init pos:start="85:28" pos:end="85:42">= <expr pos:start="85:30" pos:end="85:42"><name pos:start="85:30" pos:end="85:42"><name pos:start="85:30" pos:end="85:31">st</name><operator pos:start="85:32" pos:end="85:33">-&gt;</operator><name pos:start="85:34" pos:end="85:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="87:13" pos:end="87:40"><decl pos:start="87:13" pos:end="87:39"><type pos:start="87:13" pos:end="87:15"><name pos:start="87:13" pos:end="87:15">int</name></type> <name pos:start="87:17" pos:end="87:17">n</name><init pos:start="87:18" pos:end="87:39">= <expr pos:start="87:20" pos:end="87:39"><name pos:start="87:20" pos:end="87:39"><name pos:start="87:20" pos:end="87:21">st</name><operator pos:start="87:22" pos:end="87:23">-&gt;</operator><name pos:start="87:24" pos:end="87:39">nb_index_entries</name></name></expr></init></decl>;</decl_stmt>

            <while pos:start="89:13" pos:end="91:25">while <condition pos:start="89:19" pos:end="89:67">(<expr pos:start="89:20" pos:end="89:66"><name pos:start="89:20" pos:end="89:25"><name pos:start="89:20" pos:end="89:22">idx</name><index pos:start="89:23" pos:end="89:25">[<expr pos:start="89:24" pos:end="89:24"><name pos:start="89:24" pos:end="89:24">i</name></expr>]</index></name><operator pos:start="89:26" pos:end="89:26">&lt;</operator><name pos:start="89:27" pos:end="89:27">n</name> <operator pos:start="89:29" pos:end="89:30">&amp;&amp;</operator> <name pos:start="89:32" pos:end="89:56"><name pos:start="89:32" pos:end="89:33">st</name><operator pos:start="89:34" pos:end="89:35">-&gt;</operator><name pos:start="89:36" pos:end="89:48">index_entries</name><index pos:start="89:49" pos:end="89:56">[<expr pos:start="89:50" pos:end="89:55"><name pos:start="89:50" pos:end="89:55"><name pos:start="89:50" pos:end="89:52">idx</name><index pos:start="89:53" pos:end="89:55">[<expr pos:start="89:54" pos:end="89:54"><name pos:start="89:54" pos:end="89:54">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="89:57" pos:end="89:57">.</operator><name pos:start="89:58" pos:end="89:60">pos</name> <operator pos:start="89:62" pos:end="89:62">&lt;</operator> <name pos:start="89:64" pos:end="89:66">pos</name></expr>)</condition><block type="pseudo" pos:start="91:17" pos:end="91:25"><block_content pos:start="91:17" pos:end="91:25">

                <expr_stmt pos:start="91:17" pos:end="91:25"><expr pos:start="91:17" pos:end="91:24"><name pos:start="91:17" pos:end="91:22"><name pos:start="91:17" pos:end="91:19">idx</name><index pos:start="91:20" pos:end="91:22">[<expr pos:start="91:21" pos:end="91:21"><name pos:start="91:21" pos:end="91:21">i</name></expr>]</index></name><operator pos:start="91:23" pos:end="91:24">++</operator></expr>;</expr_stmt></block_content></block></while>

            <if_stmt pos:start="93:13" pos:end="99:13"><if pos:start="93:13" pos:end="99:13">if <condition pos:start="93:16" pos:end="93:27">(<expr pos:start="93:17" pos:end="93:26"><name pos:start="93:17" pos:end="93:22"><name pos:start="93:17" pos:end="93:19">idx</name><index pos:start="93:20" pos:end="93:22">[<expr pos:start="93:21" pos:end="93:21"><name pos:start="93:21" pos:end="93:21">i</name></expr>]</index></name> <operator pos:start="93:24" pos:end="93:24">&lt;</operator> <name pos:start="93:26" pos:end="93:26">n</name></expr>)</condition> <block pos:start="93:29" pos:end="99:13">{<block_content pos:start="95:17" pos:end="97:72">

                <expr_stmt pos:start="95:17" pos:end="95:150"><expr pos:start="95:17" pos:end="95:149"><name pos:start="95:17" pos:end="95:23">min_dts</name> <operator pos:start="95:25" pos:end="95:25">=</operator> <call pos:start="95:27" pos:end="95:149"><name pos:start="95:27" pos:end="95:31">FFMIN</name><argument_list pos:start="95:32" pos:end="95:149">(<argument pos:start="95:33" pos:end="95:39"><expr pos:start="95:33" pos:end="95:39"><name pos:start="95:33" pos:end="95:39">min_dts</name></expr></argument>, <argument pos:start="95:42" pos:end="95:148"><expr pos:start="95:42" pos:end="95:148"><call pos:start="95:42" pos:end="95:148"><name pos:start="95:42" pos:end="95:53">av_rescale_q</name><argument_list pos:start="95:54" pos:end="95:148">(<argument pos:start="95:55" pos:end="95:116"><expr pos:start="95:55" pos:end="95:116"><name pos:start="95:55" pos:end="95:79"><name pos:start="95:55" pos:end="95:56">st</name><operator pos:start="95:57" pos:end="95:58">-&gt;</operator><name pos:start="95:59" pos:end="95:71">index_entries</name><index pos:start="95:72" pos:end="95:79">[<expr pos:start="95:73" pos:end="95:78"><name pos:start="95:73" pos:end="95:78"><name pos:start="95:73" pos:end="95:75">idx</name><index pos:start="95:76" pos:end="95:78">[<expr pos:start="95:77" pos:end="95:77"><name pos:start="95:77" pos:end="95:77">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="95:80" pos:end="95:80">.</operator><name pos:start="95:81" pos:end="95:89">timestamp</name><operator pos:start="95:90" pos:end="95:90">/</operator><call pos:start="95:91" pos:end="95:116"><name pos:start="95:91" pos:end="95:95">FFMAX</name><argument_list pos:start="95:96" pos:end="95:116">(<argument pos:start="95:97" pos:end="95:112"><expr pos:start="95:97" pos:end="95:112"><name pos:start="95:97" pos:end="95:112"><name pos:start="95:97" pos:end="95:99">ast</name><operator pos:start="95:100" pos:end="95:101">-&gt;</operator><name pos:start="95:102" pos:end="95:112">sample_size</name></name></expr></argument>, <argument pos:start="95:115" pos:end="95:115"><expr pos:start="95:115" pos:end="95:115"><literal type="number" pos:start="95:115" pos:end="95:115">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="95:119" pos:end="95:131"><expr pos:start="95:119" pos:end="95:131"><name pos:start="95:119" pos:end="95:131"><name pos:start="95:119" pos:end="95:120">st</name><operator pos:start="95:121" pos:end="95:122">-&gt;</operator><name pos:start="95:123" pos:end="95:131">time_base</name></name></expr></argument>, <argument pos:start="95:134" pos:end="95:147"><expr pos:start="95:134" pos:end="95:147"><name pos:start="95:134" pos:end="95:147">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="97:17" pos:end="97:72"><expr pos:start="97:17" pos:end="97:71"><name pos:start="97:17" pos:end="97:23">min_pos</name> <operator pos:start="97:25" pos:end="97:25">=</operator> <call pos:start="97:27" pos:end="97:71"><name pos:start="97:27" pos:end="97:31">FFMIN</name><argument_list pos:start="97:32" pos:end="97:71">(<argument pos:start="97:33" pos:end="97:39"><expr pos:start="97:33" pos:end="97:39"><name pos:start="97:33" pos:end="97:39">min_pos</name></expr></argument>, <argument pos:start="97:42" pos:end="97:70"><expr pos:start="97:42" pos:end="97:70"><name pos:start="97:42" pos:end="97:66"><name pos:start="97:42" pos:end="97:43">st</name><operator pos:start="97:44" pos:end="97:45">-&gt;</operator><name pos:start="97:46" pos:end="97:58">index_entries</name><index pos:start="97:59" pos:end="97:66">[<expr pos:start="97:60" pos:end="97:65"><name pos:start="97:60" pos:end="97:65"><name pos:start="97:60" pos:end="97:62">idx</name><index pos:start="97:63" pos:end="97:65">[<expr pos:start="97:64" pos:end="97:64"><name pos:start="97:64" pos:end="97:64">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="97:67" pos:end="97:67">.</operator><name pos:start="97:68" pos:end="97:70">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="101:13" pos:end="103:152"><if pos:start="101:13" pos:end="103:152">if <condition pos:start="101:16" pos:end="101:23">(<expr pos:start="101:17" pos:end="101:22"><name pos:start="101:17" pos:end="101:22"><name pos:start="101:17" pos:end="101:19">idx</name><index pos:start="101:20" pos:end="101:22">[<expr pos:start="101:21" pos:end="101:21"><name pos:start="101:21" pos:end="101:21">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="103:17" pos:end="103:152"><block_content pos:start="103:17" pos:end="103:152">

                <expr_stmt pos:start="103:17" pos:end="103:152"><expr pos:start="103:17" pos:end="103:151"><name pos:start="103:17" pos:end="103:23">max_dts</name> <operator pos:start="103:25" pos:end="103:25">=</operator> <call pos:start="103:27" pos:end="103:151"><name pos:start="103:27" pos:end="103:31">FFMAX</name><argument_list pos:start="103:32" pos:end="103:151">(<argument pos:start="103:33" pos:end="103:39"><expr pos:start="103:33" pos:end="103:39"><name pos:start="103:33" pos:end="103:39">max_dts</name></expr></argument>, <argument pos:start="103:42" pos:end="103:150"><expr pos:start="103:42" pos:end="103:150"><call pos:start="103:42" pos:end="103:150"><name pos:start="103:42" pos:end="103:53">av_rescale_q</name><argument_list pos:start="103:54" pos:end="103:150">(<argument pos:start="103:55" pos:end="103:118"><expr pos:start="103:55" pos:end="103:118"><name pos:start="103:55" pos:end="103:81"><name pos:start="103:55" pos:end="103:56">st</name><operator pos:start="103:57" pos:end="103:58">-&gt;</operator><name pos:start="103:59" pos:end="103:71">index_entries</name><index pos:start="103:72" pos:end="103:81">[<expr pos:start="103:73" pos:end="103:80"><name pos:start="103:73" pos:end="103:78"><name pos:start="103:73" pos:end="103:75">idx</name><index pos:start="103:76" pos:end="103:78">[<expr pos:start="103:77" pos:end="103:77"><name pos:start="103:77" pos:end="103:77">i</name></expr>]</index></name><operator pos:start="103:79" pos:end="103:79">-</operator><literal type="number" pos:start="103:80" pos:end="103:80">1</literal></expr>]</index></name><operator pos:start="103:82" pos:end="103:82">.</operator><name pos:start="103:83" pos:end="103:91">timestamp</name><operator pos:start="103:92" pos:end="103:92">/</operator><call pos:start="103:93" pos:end="103:118"><name pos:start="103:93" pos:end="103:97">FFMAX</name><argument_list pos:start="103:98" pos:end="103:118">(<argument pos:start="103:99" pos:end="103:114"><expr pos:start="103:99" pos:end="103:114"><name pos:start="103:99" pos:end="103:114"><name pos:start="103:99" pos:end="103:101">ast</name><operator pos:start="103:102" pos:end="103:103">-&gt;</operator><name pos:start="103:104" pos:end="103:114">sample_size</name></name></expr></argument>, <argument pos:start="103:117" pos:end="103:117"><expr pos:start="103:117" pos:end="103:117"><literal type="number" pos:start="103:117" pos:end="103:117">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="103:121" pos:end="103:133"><expr pos:start="103:121" pos:end="103:133"><name pos:start="103:121" pos:end="103:133"><name pos:start="103:121" pos:end="103:122">st</name><operator pos:start="103:123" pos:end="103:124">-&gt;</operator><name pos:start="103:125" pos:end="103:133">time_base</name></name></expr></argument>, <argument pos:start="103:136" pos:end="103:149"><expr pos:start="103:136" pos:end="103:149"><name pos:start="103:136" pos:end="103:149">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="107:9" pos:end="113:9"><if pos:start="107:9" pos:end="113:9">if <condition pos:start="107:12" pos:end="107:47">(<expr pos:start="107:13" pos:end="107:46"><name pos:start="107:13" pos:end="107:19">max_dts</name> <operator pos:start="107:21" pos:end="107:21">-</operator> <name pos:start="107:23" pos:end="107:29">min_dts</name> <operator pos:start="107:31" pos:end="107:31">&gt;</operator> <literal type="number" pos:start="107:33" pos:end="107:33">2</literal><operator pos:start="107:34" pos:end="107:34">*</operator><name pos:start="107:35" pos:end="107:46">AV_TIME_BASE</name></expr>)</condition> <block pos:start="107:49" pos:end="113:9">{<block_content pos:start="109:13" pos:end="111:21">

            <expr_stmt pos:start="109:13" pos:end="109:25"><expr pos:start="109:13" pos:end="109:24"><call pos:start="109:13" pos:end="109:24"><name pos:start="109:13" pos:end="109:19">av_free</name><argument_list pos:start="109:20" pos:end="109:24">(<argument pos:start="109:21" pos:end="109:23"><expr pos:start="109:21" pos:end="109:23"><name pos:start="109:21" pos:end="109:23">idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="111:13" pos:end="111:21">return <expr pos:start="111:20" pos:end="111:20"><literal type="number" pos:start="111:20" pos:end="111:20">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="117:5" pos:end="117:17"><expr pos:start="117:5" pos:end="117:16"><call pos:start="117:5" pos:end="117:16"><name pos:start="117:5" pos:end="117:11">av_free</name><argument_list pos:start="117:12" pos:end="117:16">(<argument pos:start="117:13" pos:end="117:15"><expr pos:start="117:13" pos:end="117:15"><name pos:start="117:13" pos:end="117:15">idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="119:5" pos:end="119:13">return <expr pos:start="119:12" pos:end="119:12"><literal type="number" pos:start="119:12" pos:end="119:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
