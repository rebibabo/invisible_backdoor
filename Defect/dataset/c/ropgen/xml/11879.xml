<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11879.c" pos:tabs="8"><function pos:start="1:1" pos:end="112:1"><type pos:start="1:1" pos:end="1:28"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:23">av_always_inline</name> <name pos:start="1:25" pos:end="1:28">void</name></type> <name pos:start="1:30" pos:end="1:40">decode_line</name><parameter_list pos:start="1:41" pos:end="1:115">(<parameter pos:start="1:42" pos:end="1:55"><decl pos:start="1:42" pos:end="1:55"><type pos:start="1:42" pos:end="1:55"><name pos:start="1:42" pos:end="1:52">FFV1Context</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:55">s</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:62"><decl pos:start="1:58" pos:end="1:62"><type pos:start="1:58" pos:end="1:62"><name pos:start="1:58" pos:end="1:60">int</name></type> <name pos:start="1:62" pos:end="1:62">w</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:87"><decl pos:start="1:65" pos:end="1:87"><type pos:start="1:65" pos:end="1:84"><name pos:start="1:65" pos:end="1:76">int_fast16_t</name> <modifier pos:start="1:78" pos:end="1:78">*</modifier></type><name pos:start="1:79" pos:end="1:87"><name pos:start="1:79" pos:end="1:84">sample</name><index pos:start="1:85" pos:end="1:87">[<expr pos:start="1:86" pos:end="1:86"><literal type="number" pos:start="1:86" pos:end="1:86">2</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="1:90" pos:end="1:104"><decl pos:start="1:90" pos:end="1:104"><type pos:start="1:90" pos:end="1:104"><name pos:start="1:90" pos:end="1:92">int</name></type> <name pos:start="1:94" pos:end="1:104">plane_index</name></decl></parameter>, <parameter pos:start="1:107" pos:end="1:114"><decl pos:start="1:107" pos:end="1:114"><type pos:start="1:107" pos:end="1:114"><name pos:start="1:107" pos:end="1:109">int</name></type> <name pos:start="1:111" pos:end="1:114">bits</name></decl></parameter>)</parameter_list><block pos:start="1:116" pos:end="112:1">{<block_content pos:start="3:5" pos:end="110:28">

    <decl_stmt pos:start="3:5" pos:end="3:51"><decl pos:start="3:5" pos:end="3:50"><type pos:start="3:5" pos:end="3:24"><name pos:start="3:5" pos:end="3:16">PlaneContext</name> <modifier pos:start="3:18" pos:end="3:18">*</modifier> <specifier pos:start="3:20" pos:end="3:24">const</specifier></type> <name pos:start="3:26" pos:end="3:26">p</name><init pos:start="3:27" pos:end="3:50">= <expr pos:start="3:29" pos:end="3:50"><operator pos:start="3:29" pos:end="3:29">&amp;</operator><name pos:start="3:30" pos:end="3:50"><name pos:start="3:30" pos:end="3:30">s</name><operator pos:start="3:31" pos:end="3:32">-&gt;</operator><name pos:start="3:33" pos:end="3:37">plane</name><index pos:start="3:38" pos:end="3:50">[<expr pos:start="3:39" pos:end="3:49"><name pos:start="3:39" pos:end="3:49">plane_index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:14">RangeCoder</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier> <specifier pos:start="5:18" pos:end="5:22">const</specifier></type> <name pos:start="5:24" pos:end="5:24">c</name><init pos:start="5:25" pos:end="5:31">= <expr pos:start="5:27" pos:end="5:31"><operator pos:start="5:27" pos:end="5:27">&amp;</operator><name pos:start="5:28" pos:end="5:31"><name pos:start="5:28" pos:end="5:28">s</name><operator pos:start="5:29" pos:end="5:30">-&gt;</operator><name pos:start="5:31" pos:end="5:31">c</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">x</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:17">run_count</name><init pos:start="9:18" pos:end="9:19">=<expr pos:start="9:19" pos:end="9:19"><literal type="number" pos:start="9:19" pos:end="9:19">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">run_mode</name><init pos:start="11:17" pos:end="11:18">=<expr pos:start="11:18" pos:end="11:18"><literal type="number" pos:start="11:18" pos:end="11:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:32"><decl pos:start="13:5" pos:end="13:31"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:17">run_index</name><init pos:start="13:18" pos:end="13:31">= <expr pos:start="13:20" pos:end="13:31"><name pos:start="13:20" pos:end="13:31"><name pos:start="13:20" pos:end="13:20">s</name><operator pos:start="13:21" pos:end="13:22">-&gt;</operator><name pos:start="13:23" pos:end="13:31">run_index</name></name></expr></init></decl>;</decl_stmt>



    <for pos:start="17:5" pos:end="108:5">for<control pos:start="17:8" pos:end="17:22">(<init pos:start="17:9" pos:end="17:12"><expr pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:9">x</name><operator pos:start="17:10" pos:end="17:10">=</operator><literal type="number" pos:start="17:11" pos:end="17:11">0</literal></expr>;</init> <condition pos:start="17:14" pos:end="17:17"><expr pos:start="17:14" pos:end="17:16"><name pos:start="17:14" pos:end="17:14">x</name><operator pos:start="17:15" pos:end="17:15">&lt;</operator><name pos:start="17:16" pos:end="17:16">w</name></expr>;</condition> <incr pos:start="17:19" pos:end="17:21"><expr pos:start="17:19" pos:end="17:21"><name pos:start="17:19" pos:end="17:19">x</name><operator pos:start="17:20" pos:end="17:21">++</operator></expr></incr>)</control><block pos:start="17:23" pos:end="108:5">{<block_content pos:start="19:9" pos:end="106:85">

        <decl_stmt pos:start="19:9" pos:end="19:32"><decl pos:start="19:9" pos:end="19:16"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:16">diff</name></decl>, <decl pos:start="19:19" pos:end="19:25"><type ref="prev" pos:start="19:9" pos:end="19:11"/><name pos:start="19:19" pos:end="19:25">context</name></decl>, <decl pos:start="19:28" pos:end="19:31"><type ref="prev" pos:start="19:9" pos:end="19:11"/><name pos:start="19:28" pos:end="19:31">sign</name></decl>;</decl_stmt>



        <expr_stmt pos:start="23:9" pos:end="23:77"><expr pos:start="23:9" pos:end="23:76"><name pos:start="23:9" pos:end="23:15">context</name><operator pos:start="23:16" pos:end="23:16">=</operator> <call pos:start="23:18" pos:end="23:76"><name pos:start="23:18" pos:end="23:28">get_context</name><argument_list pos:start="23:29" pos:end="23:76">(<argument pos:start="23:30" pos:end="23:30"><expr pos:start="23:30" pos:end="23:30"><name pos:start="23:30" pos:end="23:30">s</name></expr></argument>, <argument pos:start="23:33" pos:end="23:45"><expr pos:start="23:33" pos:end="23:45"><name pos:start="23:33" pos:end="23:41"><name pos:start="23:33" pos:end="23:38">sample</name><index pos:start="23:39" pos:end="23:41">[<expr pos:start="23:40" pos:end="23:40"><literal type="number" pos:start="23:40" pos:end="23:40">1</literal></expr>]</index></name> <operator pos:start="23:43" pos:end="23:43">+</operator> <name pos:start="23:45" pos:end="23:45">x</name></expr></argument>, <argument pos:start="23:48" pos:end="23:60"><expr pos:start="23:48" pos:end="23:60"><name pos:start="23:48" pos:end="23:56"><name pos:start="23:48" pos:end="23:53">sample</name><index pos:start="23:54" pos:end="23:56">[<expr pos:start="23:55" pos:end="23:55"><literal type="number" pos:start="23:55" pos:end="23:55">0</literal></expr>]</index></name> <operator pos:start="23:58" pos:end="23:58">+</operator> <name pos:start="23:60" pos:end="23:60">x</name></expr></argument>, <argument pos:start="23:63" pos:end="23:75"><expr pos:start="23:63" pos:end="23:75"><name pos:start="23:63" pos:end="23:71"><name pos:start="23:63" pos:end="23:68">sample</name><index pos:start="23:69" pos:end="23:71">[<expr pos:start="23:70" pos:end="23:70"><literal type="number" pos:start="23:70" pos:end="23:70">1</literal></expr>]</index></name> <operator pos:start="23:73" pos:end="23:73">+</operator> <name pos:start="23:75" pos:end="23:75">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="33:19"><if pos:start="25:9" pos:end="31:9">if<condition pos:start="25:11" pos:end="25:23">(<expr pos:start="25:12" pos:end="25:22"><name pos:start="25:12" pos:end="25:18">context</name> <operator pos:start="25:20" pos:end="25:20">&lt;</operator> <literal type="number" pos:start="25:22" pos:end="25:22">0</literal></expr>)</condition><block pos:start="25:24" pos:end="31:9">{<block_content pos:start="27:13" pos:end="29:19">

            <expr_stmt pos:start="27:13" pos:end="27:30"><expr pos:start="27:13" pos:end="27:29"><name pos:start="27:13" pos:end="27:19">context</name><operator pos:start="27:20" pos:end="27:20">=</operator> <operator pos:start="27:22" pos:end="27:22">-</operator><name pos:start="27:23" pos:end="27:29">context</name></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:19"><expr pos:start="29:13" pos:end="29:18"><name pos:start="29:13" pos:end="29:16">sign</name><operator pos:start="29:17" pos:end="29:17">=</operator><literal type="number" pos:start="29:18" pos:end="29:18">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="31:10" pos:end="33:19">else<block type="pseudo" pos:start="33:13" pos:end="33:19"><block_content pos:start="33:13" pos:end="33:19">

            <expr_stmt pos:start="33:13" pos:end="33:19"><expr pos:start="33:13" pos:end="33:18"><name pos:start="33:13" pos:end="33:16">sign</name><operator pos:start="33:17" pos:end="33:17">=</operator><literal type="number" pos:start="33:18" pos:end="33:18">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>






        <if_stmt pos:start="40:9" pos:end="98:9"><if pos:start="40:9" pos:end="44:9">if<condition pos:start="40:11" pos:end="40:17">(<expr pos:start="40:12" pos:end="40:16"><name pos:start="40:12" pos:end="40:16"><name pos:start="40:12" pos:end="40:12">s</name><operator pos:start="40:13" pos:end="40:14">-&gt;</operator><name pos:start="40:15" pos:end="40:16">ac</name></name></expr>)</condition><block pos:start="40:18" pos:end="44:9">{<block_content pos:start="42:13" pos:end="42:61">

            <expr_stmt pos:start="42:13" pos:end="42:61"><expr pos:start="42:13" pos:end="42:60"><name pos:start="42:13" pos:end="42:16">diff</name><operator pos:start="42:17" pos:end="42:17">=</operator> <call pos:start="42:19" pos:end="42:60"><name pos:start="42:19" pos:end="42:35">get_symbol_inline</name><argument_list pos:start="42:36" pos:end="42:60">(<argument pos:start="42:37" pos:end="42:37"><expr pos:start="42:37" pos:end="42:37"><name pos:start="42:37" pos:end="42:37">c</name></expr></argument>, <argument pos:start="42:40" pos:end="42:56"><expr pos:start="42:40" pos:end="42:56"><name pos:start="42:40" pos:end="42:56"><name pos:start="42:40" pos:end="42:40">p</name><operator pos:start="42:41" pos:end="42:42">-&gt;</operator><name pos:start="42:43" pos:end="42:47">state</name><index pos:start="42:48" pos:end="42:56">[<expr pos:start="42:49" pos:end="42:55"><name pos:start="42:49" pos:end="42:55">context</name></expr>]</index></name></expr></argument>, <argument pos:start="42:59" pos:end="42:59"><expr pos:start="42:59" pos:end="42:59"><literal type="number" pos:start="42:59" pos:end="42:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="44:10" pos:end="98:9">else<block pos:start="44:14" pos:end="98:9">{<block_content pos:start="46:13" pos:end="92:75">

            <if_stmt pos:start="46:13" pos:end="46:55"><if pos:start="46:13" pos:end="46:55">if<condition pos:start="46:15" pos:end="46:43">(<expr pos:start="46:16" pos:end="46:42"><name pos:start="46:16" pos:end="46:22">context</name> <operator pos:start="46:24" pos:end="46:25">==</operator> <literal type="number" pos:start="46:27" pos:end="46:27">0</literal> <operator pos:start="46:29" pos:end="46:30">&amp;&amp;</operator> <name pos:start="46:32" pos:end="46:39">run_mode</name><operator pos:start="46:40" pos:end="46:41">==</operator><literal type="number" pos:start="46:42" pos:end="46:42">0</literal></expr>)</condition><block type="pseudo" pos:start="46:45" pos:end="46:55"><block_content pos:start="46:45" pos:end="46:55"> <expr_stmt pos:start="46:45" pos:end="46:55"><expr pos:start="46:45" pos:end="46:54"><name pos:start="46:45" pos:end="46:52">run_mode</name><operator pos:start="46:53" pos:end="46:53">=</operator><literal type="number" pos:start="46:54" pos:end="46:54">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="50:13" pos:end="92:75"><if pos:start="50:13" pos:end="90:13">if<condition pos:start="50:15" pos:end="50:24">(<expr pos:start="50:16" pos:end="50:23"><name pos:start="50:16" pos:end="50:23">run_mode</name></expr>)</condition><block pos:start="50:25" pos:end="90:13">{<block_content pos:start="52:17" pos:end="88:27">

                <if_stmt pos:start="52:17" pos:end="72:17"><if pos:start="52:17" pos:end="72:17">if<condition pos:start="52:19" pos:end="52:47">(<expr pos:start="52:20" pos:end="52:46"><name pos:start="52:20" pos:end="52:28">run_count</name><operator pos:start="52:29" pos:end="52:30">==</operator><literal type="number" pos:start="52:31" pos:end="52:31">0</literal> <operator pos:start="52:33" pos:end="52:34">&amp;&amp;</operator> <name pos:start="52:36" pos:end="52:43">run_mode</name><operator pos:start="52:44" pos:end="52:45">==</operator><literal type="number" pos:start="52:46" pos:end="52:46">1</literal></expr>)</condition><block pos:start="52:48" pos:end="72:17">{<block_content pos:start="54:21" pos:end="70:21">

                    <if_stmt pos:start="54:21" pos:end="70:21"><if pos:start="54:21" pos:end="60:21">if<condition pos:start="54:23" pos:end="54:41">(<expr pos:start="54:24" pos:end="54:40"><call pos:start="54:24" pos:end="54:40"><name pos:start="54:24" pos:end="54:32">get_bits1</name><argument_list pos:start="54:33" pos:end="54:40">(<argument pos:start="54:34" pos:end="54:39"><expr pos:start="54:34" pos:end="54:39"><operator pos:start="54:34" pos:end="54:34">&amp;</operator><name pos:start="54:35" pos:end="54:39"><name pos:start="54:35" pos:end="54:35">s</name><operator pos:start="54:36" pos:end="54:37">-&gt;</operator><name pos:start="54:38" pos:end="54:39">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="54:42" pos:end="60:21">{<block_content pos:start="56:25" pos:end="58:59">

                        <expr_stmt pos:start="56:25" pos:end="56:62"><expr pos:start="56:25" pos:end="56:61"><name pos:start="56:25" pos:end="56:33">run_count</name> <operator pos:start="56:35" pos:end="56:35">=</operator> <literal type="number" pos:start="56:37" pos:end="56:37">1</literal><operator pos:start="56:38" pos:end="56:39">&lt;&lt;</operator><name pos:start="56:40" pos:end="56:61"><name pos:start="56:40" pos:end="56:50">ff_log2_run</name><index pos:start="56:51" pos:end="56:61">[<expr pos:start="56:52" pos:end="56:60"><name pos:start="56:52" pos:end="56:60">run_index</name></expr>]</index></name></expr>;</expr_stmt>

                        <if_stmt pos:start="58:25" pos:end="58:59"><if pos:start="58:25" pos:end="58:59">if<condition pos:start="58:27" pos:end="58:46">(<expr pos:start="58:28" pos:end="58:45"><name pos:start="58:28" pos:end="58:28">x</name> <operator pos:start="58:30" pos:end="58:30">+</operator> <name pos:start="58:32" pos:end="58:40">run_count</name> <operator pos:start="58:42" pos:end="58:43">&lt;=</operator> <name pos:start="58:45" pos:end="58:45">w</name></expr>)</condition><block type="pseudo" pos:start="58:48" pos:end="58:59"><block_content pos:start="58:48" pos:end="58:59"> <expr_stmt pos:start="58:48" pos:end="58:59"><expr pos:start="58:48" pos:end="58:58"><name pos:start="58:48" pos:end="58:56">run_index</name><operator pos:start="58:57" pos:end="58:58">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></if><else pos:start="60:22" pos:end="70:21">else<block pos:start="60:26" pos:end="70:21">{<block_content pos:start="62:25" pos:end="68:35">

                        <if_stmt pos:start="62:25" pos:end="64:41"><if pos:start="62:25" pos:end="62:104">if<condition pos:start="62:27" pos:end="62:50">(<expr pos:start="62:28" pos:end="62:49"><name pos:start="62:28" pos:end="62:49"><name pos:start="62:28" pos:end="62:38">ff_log2_run</name><index pos:start="62:39" pos:end="62:49">[<expr pos:start="62:40" pos:end="62:48"><name pos:start="62:40" pos:end="62:48">run_index</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="62:52" pos:end="62:104"><block_content pos:start="62:52" pos:end="62:104"> <expr_stmt pos:start="62:52" pos:end="62:104"><expr pos:start="62:52" pos:end="62:103"><name pos:start="62:52" pos:end="62:60">run_count</name> <operator pos:start="62:62" pos:end="62:62">=</operator> <call pos:start="62:64" pos:end="62:103"><name pos:start="62:64" pos:end="62:71">get_bits</name><argument_list pos:start="62:72" pos:end="62:103">(<argument pos:start="62:73" pos:end="62:78"><expr pos:start="62:73" pos:end="62:78"><operator pos:start="62:73" pos:end="62:73">&amp;</operator><name pos:start="62:74" pos:end="62:78"><name pos:start="62:74" pos:end="62:74">s</name><operator pos:start="62:75" pos:end="62:76">-&gt;</operator><name pos:start="62:77" pos:end="62:78">gb</name></name></expr></argument>, <argument pos:start="62:81" pos:end="62:102"><expr pos:start="62:81" pos:end="62:102"><name pos:start="62:81" pos:end="62:102"><name pos:start="62:81" pos:end="62:91">ff_log2_run</name><index pos:start="62:92" pos:end="62:102">[<expr pos:start="62:93" pos:end="62:101"><name pos:start="62:93" pos:end="62:101">run_index</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="64:25" pos:end="64:41">else<block type="pseudo" pos:start="64:30" pos:end="64:41"><block_content pos:start="64:30" pos:end="64:41"> <expr_stmt pos:start="64:30" pos:end="64:41"><expr pos:start="64:30" pos:end="64:40"><name pos:start="64:30" pos:end="64:38">run_count</name><operator pos:start="64:39" pos:end="64:39">=</operator><literal type="number" pos:start="64:40" pos:end="64:40">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <if_stmt pos:start="66:25" pos:end="66:50"><if pos:start="66:25" pos:end="66:50">if<condition pos:start="66:27" pos:end="66:37">(<expr pos:start="66:28" pos:end="66:36"><name pos:start="66:28" pos:end="66:36">run_index</name></expr>)</condition><block type="pseudo" pos:start="66:39" pos:end="66:50"><block_content pos:start="66:39" pos:end="66:50"> <expr_stmt pos:start="66:39" pos:end="66:50"><expr pos:start="66:39" pos:end="66:49"><name pos:start="66:39" pos:end="66:47">run_index</name><operator pos:start="66:48" pos:end="66:49">--</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="68:25" pos:end="68:35"><expr pos:start="68:25" pos:end="68:34"><name pos:start="68:25" pos:end="68:32">run_mode</name><operator pos:start="68:33" pos:end="68:33">=</operator><literal type="number" pos:start="68:34" pos:end="68:34">2</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="74:17" pos:end="74:28"><expr pos:start="74:17" pos:end="74:27"><name pos:start="74:17" pos:end="74:25">run_count</name><operator pos:start="74:26" pos:end="74:27">--</operator></expr>;</expr_stmt>

                <if_stmt pos:start="76:17" pos:end="88:27"><if pos:start="76:17" pos:end="86:17">if<condition pos:start="76:19" pos:end="76:33">(<expr pos:start="76:20" pos:end="76:32"><name pos:start="76:20" pos:end="76:28">run_count</name> <operator pos:start="76:30" pos:end="76:30">&lt;</operator> <literal type="number" pos:start="76:32" pos:end="76:32">0</literal></expr>)</condition><block pos:start="76:34" pos:end="86:17">{<block_content pos:start="78:21" pos:end="84:39">

                    <expr_stmt pos:start="78:21" pos:end="78:31"><expr pos:start="78:21" pos:end="78:30"><name pos:start="78:21" pos:end="78:28">run_mode</name><operator pos:start="78:29" pos:end="78:29">=</operator><literal type="number" pos:start="78:30" pos:end="78:30">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="80:21" pos:end="80:32"><expr pos:start="80:21" pos:end="80:31"><name pos:start="80:21" pos:end="80:29">run_count</name><operator pos:start="80:30" pos:end="80:30">=</operator><literal type="number" pos:start="80:31" pos:end="80:31">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="82:21" pos:end="82:79"><expr pos:start="82:21" pos:end="82:78"><name pos:start="82:21" pos:end="82:24">diff</name><operator pos:start="82:25" pos:end="82:25">=</operator> <call pos:start="82:27" pos:end="82:78"><name pos:start="82:27" pos:end="82:40">get_vlc_symbol</name><argument_list pos:start="82:41" pos:end="82:78">(<argument pos:start="82:42" pos:end="82:47"><expr pos:start="82:42" pos:end="82:47"><operator pos:start="82:42" pos:end="82:42">&amp;</operator><name pos:start="82:43" pos:end="82:47"><name pos:start="82:43" pos:end="82:43">s</name><operator pos:start="82:44" pos:end="82:45">-&gt;</operator><name pos:start="82:46" pos:end="82:47">gb</name></name></expr></argument>, <argument pos:start="82:50" pos:end="82:71"><expr pos:start="82:50" pos:end="82:71"><operator pos:start="82:50" pos:end="82:50">&amp;</operator><name pos:start="82:51" pos:end="82:71"><name pos:start="82:51" pos:end="82:51">p</name><operator pos:start="82:52" pos:end="82:53">-&gt;</operator><name pos:start="82:54" pos:end="82:62">vlc_state</name><index pos:start="82:63" pos:end="82:71">[<expr pos:start="82:64" pos:end="82:70"><name pos:start="82:64" pos:end="82:70">context</name></expr>]</index></name></expr></argument>, <argument pos:start="82:74" pos:end="82:77"><expr pos:start="82:74" pos:end="82:77"><name pos:start="82:74" pos:end="82:77">bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="84:21" pos:end="84:39"><if pos:start="84:21" pos:end="84:39">if<condition pos:start="84:23" pos:end="84:31">(<expr pos:start="84:24" pos:end="84:30"><name pos:start="84:24" pos:end="84:27">diff</name><operator pos:start="84:28" pos:end="84:29">&gt;=</operator><literal type="number" pos:start="84:30" pos:end="84:30">0</literal></expr>)</condition><block type="pseudo" pos:start="84:33" pos:end="84:39"><block_content pos:start="84:33" pos:end="84:39"> <expr_stmt pos:start="84:33" pos:end="84:39"><expr pos:start="84:33" pos:end="84:38"><name pos:start="84:33" pos:end="84:36">diff</name><operator pos:start="84:37" pos:end="84:38">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if><else pos:start="86:18" pos:end="88:27">else<block type="pseudo" pos:start="88:21" pos:end="88:27"><block_content pos:start="88:21" pos:end="88:27">

                    <expr_stmt pos:start="88:21" pos:end="88:27"><expr pos:start="88:21" pos:end="88:26"><name pos:start="88:21" pos:end="88:24">diff</name><operator pos:start="88:25" pos:end="88:25">=</operator><literal type="number" pos:start="88:26" pos:end="88:26">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if><else pos:start="90:14" pos:end="92:75">else<block type="pseudo" pos:start="92:17" pos:end="92:75"><block_content pos:start="92:17" pos:end="92:75">

                <expr_stmt pos:start="92:17" pos:end="92:75"><expr pos:start="92:17" pos:end="92:74"><name pos:start="92:17" pos:end="92:20">diff</name><operator pos:start="92:21" pos:end="92:21">=</operator> <call pos:start="92:23" pos:end="92:74"><name pos:start="92:23" pos:end="92:36">get_vlc_symbol</name><argument_list pos:start="92:37" pos:end="92:74">(<argument pos:start="92:38" pos:end="92:43"><expr pos:start="92:38" pos:end="92:43"><operator pos:start="92:38" pos:end="92:38">&amp;</operator><name pos:start="92:39" pos:end="92:43"><name pos:start="92:39" pos:end="92:39">s</name><operator pos:start="92:40" pos:end="92:41">-&gt;</operator><name pos:start="92:42" pos:end="92:43">gb</name></name></expr></argument>, <argument pos:start="92:46" pos:end="92:67"><expr pos:start="92:46" pos:end="92:67"><operator pos:start="92:46" pos:end="92:46">&amp;</operator><name pos:start="92:47" pos:end="92:67"><name pos:start="92:47" pos:end="92:47">p</name><operator pos:start="92:48" pos:end="92:49">-&gt;</operator><name pos:start="92:50" pos:end="92:58">vlc_state</name><index pos:start="92:59" pos:end="92:67">[<expr pos:start="92:60" pos:end="92:66"><name pos:start="92:60" pos:end="92:66">context</name></expr>]</index></name></expr></argument>, <argument pos:start="92:70" pos:end="92:73"><expr pos:start="92:70" pos:end="92:73"><name pos:start="92:70" pos:end="92:73">bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



<comment type="line" pos:start="96:1" pos:end="96:133">//            printf("count:%d index:%d, mode:%d, x:%d y:%d pos:%d\n", run_count, run_index, run_mode, x, y, get_bits_count(&amp;s-&gt;gb));</comment>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="102:9" pos:end="102:29"><if pos:start="102:9" pos:end="102:29">if<condition pos:start="102:11" pos:end="102:16">(<expr pos:start="102:12" pos:end="102:15"><name pos:start="102:12" pos:end="102:15">sign</name></expr>)</condition><block type="pseudo" pos:start="102:18" pos:end="102:29"><block_content pos:start="102:18" pos:end="102:29"> <expr_stmt pos:start="102:18" pos:end="102:29"><expr pos:start="102:18" pos:end="102:28"><name pos:start="102:18" pos:end="102:21">diff</name><operator pos:start="102:22" pos:end="102:22">=</operator> <operator pos:start="102:24" pos:end="102:24">-</operator><name pos:start="102:25" pos:end="102:28">diff</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="106:9" pos:end="106:85"><expr pos:start="106:9" pos:end="106:84"><name pos:start="106:9" pos:end="106:20"><name pos:start="106:9" pos:end="106:14">sample</name><index pos:start="106:15" pos:end="106:17">[<expr pos:start="106:16" pos:end="106:16"><literal type="number" pos:start="106:16" pos:end="106:16">1</literal></expr>]</index><index pos:start="106:18" pos:end="106:20">[<expr pos:start="106:19" pos:end="106:19"><name pos:start="106:19" pos:end="106:19">x</name></expr>]</index></name><operator pos:start="106:21" pos:end="106:21">=</operator> <operator pos:start="106:23" pos:end="106:23">(</operator><call pos:start="106:24" pos:end="106:60"><name pos:start="106:24" pos:end="106:30">predict</name><argument_list pos:start="106:31" pos:end="106:60">(<argument pos:start="106:32" pos:end="106:44"><expr pos:start="106:32" pos:end="106:44"><name pos:start="106:32" pos:end="106:40"><name pos:start="106:32" pos:end="106:37">sample</name><index pos:start="106:38" pos:end="106:40">[<expr pos:start="106:39" pos:end="106:39"><literal type="number" pos:start="106:39" pos:end="106:39">1</literal></expr>]</index></name> <operator pos:start="106:42" pos:end="106:42">+</operator> <name pos:start="106:44" pos:end="106:44">x</name></expr></argument>, <argument pos:start="106:47" pos:end="106:59"><expr pos:start="106:47" pos:end="106:59"><name pos:start="106:47" pos:end="106:55"><name pos:start="106:47" pos:end="106:52">sample</name><index pos:start="106:53" pos:end="106:55">[<expr pos:start="106:54" pos:end="106:54"><literal type="number" pos:start="106:54" pos:end="106:54">0</literal></expr>]</index></name> <operator pos:start="106:57" pos:end="106:57">+</operator> <name pos:start="106:59" pos:end="106:59">x</name></expr></argument>)</argument_list></call> <operator pos:start="106:62" pos:end="106:62">+</operator> <name pos:start="106:64" pos:end="106:67">diff</name><operator pos:start="106:68" pos:end="106:68">)</operator> <operator pos:start="106:70" pos:end="106:70">&amp;</operator> <operator pos:start="106:72" pos:end="106:72">(</operator><operator pos:start="106:73" pos:end="106:73">(</operator><literal type="number" pos:start="106:74" pos:end="106:74">1</literal><operator pos:start="106:75" pos:end="106:76">&lt;&lt;</operator><name pos:start="106:77" pos:end="106:80">bits</name><operator pos:start="106:81" pos:end="106:81">)</operator><operator pos:start="106:82" pos:end="106:82">-</operator><literal type="number" pos:start="106:83" pos:end="106:83">1</literal><operator pos:start="106:84" pos:end="106:84">)</operator></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="110:5" pos:end="110:28"><expr pos:start="110:5" pos:end="110:27"><name pos:start="110:5" pos:end="110:16"><name pos:start="110:5" pos:end="110:5">s</name><operator pos:start="110:6" pos:end="110:7">-&gt;</operator><name pos:start="110:8" pos:end="110:16">run_index</name></name><operator pos:start="110:17" pos:end="110:17">=</operator> <name pos:start="110:19" pos:end="110:27">run_index</name></expr>;</expr_stmt>

</block_content>}</block></function></unit>
