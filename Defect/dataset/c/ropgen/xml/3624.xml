<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3624.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">long</name></type> <name pos:start="1:6" pos:end="1:20">do_rt_sigreturn</name><parameter_list pos:start="1:21" pos:end="1:38">(<parameter pos:start="1:22" pos:end="1:37"><decl pos:start="1:22" pos:end="1:37"><type pos:start="1:22" pos:end="1:34"><name pos:start="1:22" pos:end="1:32">CPUX86State</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:13">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:13">abi_ulong</name></type> <name pos:start="5:15" pos:end="5:24">frame_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:22">rt_sigframe</name></name> <modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:29">frame</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">sigset_t</name></type> <name pos:start="9:14" pos:end="9:16">set</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:38"><expr pos:start="13:5" pos:end="13:37"><name pos:start="13:5" pos:end="13:14">frame_addr</name> <operator pos:start="13:16" pos:end="13:16">=</operator> <name pos:start="13:18" pos:end="13:33"><name pos:start="13:18" pos:end="13:20">env</name><operator pos:start="13:21" pos:end="13:22">-&gt;</operator><name pos:start="13:23" pos:end="13:26">regs</name><index pos:start="13:27" pos:end="13:33">[<expr pos:start="13:28" pos:end="13:32"><name pos:start="13:28" pos:end="13:32">R_ESP</name></expr>]</index></name> <operator pos:start="13:35" pos:end="13:35">-</operator> <literal type="number" pos:start="13:37" pos:end="13:37">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:48"><expr pos:start="15:5" pos:end="15:47"><call pos:start="15:5" pos:end="15:47"><name pos:start="15:5" pos:end="15:30">trace_user_do_rt_sigreturn</name><argument_list pos:start="15:31" pos:end="15:47">(<argument pos:start="15:32" pos:end="15:34"><expr pos:start="15:32" pos:end="15:34"><name pos:start="15:32" pos:end="15:34">env</name></expr></argument>, <argument pos:start="15:37" pos:end="15:46"><expr pos:start="15:37" pos:end="15:46"><name pos:start="15:37" pos:end="15:46">frame_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="19:22"><if pos:start="17:5" pos:end="19:22">if <condition pos:start="17:8" pos:end="17:61">(<expr pos:start="17:9" pos:end="17:60"><operator pos:start="17:9" pos:end="17:9">!</operator><call pos:start="17:10" pos:end="17:60"><name pos:start="17:10" pos:end="17:25">lock_user_struct</name><argument_list pos:start="17:26" pos:end="17:60">(<argument pos:start="17:27" pos:end="17:37"><expr pos:start="17:27" pos:end="17:37"><name pos:start="17:27" pos:end="17:37">VERIFY_READ</name></expr></argument>, <argument pos:start="17:40" pos:end="17:44"><expr pos:start="17:40" pos:end="17:44"><name pos:start="17:40" pos:end="17:44">frame</name></expr></argument>, <argument pos:start="17:47" pos:end="17:56"><expr pos:start="17:47" pos:end="17:56"><name pos:start="17:47" pos:end="17:56">frame_addr</name></expr></argument>, <argument pos:start="17:59" pos:end="17:59"><expr pos:start="17:59" pos:end="17:59"><literal type="number" pos:start="17:59" pos:end="17:59">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:22"><block_content pos:start="19:9" pos:end="19:22">

        <goto pos:start="19:9" pos:end="19:22">goto <name pos:start="19:14" pos:end="19:21">badframe</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:56"><expr pos:start="21:5" pos:end="21:55"><call pos:start="21:5" pos:end="21:55"><name pos:start="21:5" pos:end="21:25">target_to_host_sigset</name><argument_list pos:start="21:26" pos:end="21:55">(<argument pos:start="21:27" pos:end="21:30"><expr pos:start="21:27" pos:end="21:30"><operator pos:start="21:27" pos:end="21:27">&amp;</operator><name pos:start="21:28" pos:end="21:30">set</name></expr></argument>, <argument pos:start="21:33" pos:end="21:54"><expr pos:start="21:33" pos:end="21:54"><operator pos:start="21:33" pos:end="21:33">&amp;</operator><name pos:start="21:34" pos:end="21:54"><name pos:start="21:34" pos:end="21:38">frame</name><operator pos:start="21:39" pos:end="21:40">-&gt;</operator><name pos:start="21:41" pos:end="21:42">uc</name><operator pos:start="21:43" pos:end="21:43">.</operator><name pos:start="21:44" pos:end="21:54">tuc_sigmask</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:22"><expr pos:start="23:5" pos:end="23:21"><call pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:15">set_sigmask</name><argument_list pos:start="23:16" pos:end="23:21">(<argument pos:start="23:17" pos:end="23:20"><expr pos:start="23:17" pos:end="23:20"><operator pos:start="23:17" pos:end="23:17">&amp;</operator><name pos:start="23:18" pos:end="23:20">set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:57">(<expr pos:start="27:9" pos:end="27:56"><call pos:start="27:9" pos:end="27:56"><name pos:start="27:9" pos:end="27:26">restore_sigcontext</name><argument_list pos:start="27:27" pos:end="27:56">(<argument pos:start="27:28" pos:end="27:30"><expr pos:start="27:28" pos:end="27:30"><name pos:start="27:28" pos:end="27:30">env</name></expr></argument>, <argument pos:start="27:33" pos:end="27:55"><expr pos:start="27:33" pos:end="27:55"><operator pos:start="27:33" pos:end="27:33">&amp;</operator><name pos:start="27:34" pos:end="27:55"><name pos:start="27:34" pos:end="27:38">frame</name><operator pos:start="27:39" pos:end="27:40">-&gt;</operator><name pos:start="27:41" pos:end="27:42">uc</name><operator pos:start="27:43" pos:end="27:43">.</operator><name pos:start="27:44" pos:end="27:55">tuc_mcontext</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:59" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:22">

        <goto pos:start="29:9" pos:end="29:22">goto <name pos:start="29:14" pos:end="29:21">badframe</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="37:61">(<expr pos:start="35:9" pos:end="37:60"><call pos:start="35:9" pos:end="37:49"><name pos:start="35:9" pos:end="35:22">do_sigaltstack</name><argument_list pos:start="35:23" pos:end="37:49">(<argument pos:start="35:24" pos:end="35:78"><expr pos:start="35:24" pos:end="35:78"><name pos:start="35:24" pos:end="35:33">frame_addr</name> <operator pos:start="35:35" pos:end="35:35">+</operator> <call pos:start="35:37" pos:end="35:78"><name pos:start="35:37" pos:end="35:44">offsetof</name><argument_list pos:start="35:45" pos:end="35:78">(<argument pos:start="35:46" pos:end="35:63"><expr pos:start="35:46" pos:end="35:63">struct <name pos:start="35:53" pos:end="35:63">rt_sigframe</name></expr></argument>, <argument pos:start="35:66" pos:end="35:77"><expr pos:start="35:66" pos:end="35:77"><name pos:start="35:66" pos:end="35:77"><name pos:start="35:66" pos:end="35:67">uc</name><operator pos:start="35:68" pos:end="35:68">.</operator><name pos:start="35:69" pos:end="35:77">tuc_stack</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="35:81" pos:end="35:81"><expr pos:start="35:81" pos:end="35:81"><literal type="number" pos:start="35:81" pos:end="35:81">0</literal></expr></argument>,

                       <argument pos:start="37:24" pos:end="37:48"><expr pos:start="37:24" pos:end="37:48"><call pos:start="37:24" pos:end="37:48"><name pos:start="37:24" pos:end="37:43">get_sp_from_cpustate</name><argument_list pos:start="37:44" pos:end="37:48">(<argument pos:start="37:45" pos:end="37:47"><expr pos:start="37:45" pos:end="37:47"><name pos:start="37:45" pos:end="37:47">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="37:51" pos:end="37:52">==</operator> <operator pos:start="37:54" pos:end="37:54">-</operator><name pos:start="37:55" pos:end="37:60">EFAULT</name></expr>)</condition> <block pos:start="37:63" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:22">

        <goto pos:start="39:9" pos:end="39:22">goto <name pos:start="39:14" pos:end="39:21">badframe</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:45"><expr pos:start="45:5" pos:end="45:44"><call pos:start="45:5" pos:end="45:44"><name pos:start="45:5" pos:end="45:22">unlock_user_struct</name><argument_list pos:start="45:23" pos:end="45:44">(<argument pos:start="45:24" pos:end="45:28"><expr pos:start="45:24" pos:end="45:28"><name pos:start="45:24" pos:end="45:28">frame</name></expr></argument>, <argument pos:start="45:31" pos:end="45:40"><expr pos:start="45:31" pos:end="45:40"><name pos:start="45:31" pos:end="45:40">frame_addr</name></expr></argument>, <argument pos:start="45:43" pos:end="45:43"><expr pos:start="45:43" pos:end="45:43"><literal type="number" pos:start="45:43" pos:end="45:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="47:5" pos:end="47:35">return <expr pos:start="47:12" pos:end="47:34"><operator pos:start="47:12" pos:end="47:12">-</operator><name pos:start="47:13" pos:end="47:34">TARGET_QEMU_ESIGRETURN</name></expr>;</return>



<label pos:start="51:1" pos:end="51:9"><name pos:start="51:1" pos:end="51:8">badframe</name>:</label>

    <expr_stmt pos:start="53:5" pos:end="53:45"><expr pos:start="53:5" pos:end="53:44"><call pos:start="53:5" pos:end="53:44"><name pos:start="53:5" pos:end="53:22">unlock_user_struct</name><argument_list pos:start="53:23" pos:end="53:44">(<argument pos:start="53:24" pos:end="53:28"><expr pos:start="53:24" pos:end="53:28"><name pos:start="53:24" pos:end="53:28">frame</name></expr></argument>, <argument pos:start="53:31" pos:end="53:40"><expr pos:start="53:31" pos:end="53:40"><name pos:start="53:31" pos:end="53:40">frame_addr</name></expr></argument>, <argument pos:start="53:43" pos:end="53:43"><expr pos:start="53:43" pos:end="53:43"><literal type="number" pos:start="53:43" pos:end="53:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:30"><expr pos:start="55:5" pos:end="55:29"><call pos:start="55:5" pos:end="55:29"><name pos:start="55:5" pos:end="55:13">force_sig</name><argument_list pos:start="55:14" pos:end="55:29">(<argument pos:start="55:15" pos:end="55:28"><expr pos:start="55:15" pos:end="55:28"><name pos:start="55:15" pos:end="55:28">TARGET_SIGSEGV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="57:5" pos:end="57:13">return <expr pos:start="57:12" pos:end="57:12"><literal type="number" pos:start="57:12" pos:end="57:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
