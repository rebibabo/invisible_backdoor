<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/359.c" pos:tabs="8"><function pos:start="1:1" pos:end="170:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:17">helper_rdmsr</name><parameter_list pos:start="1:18" pos:end="1:23">(<parameter pos:start="1:19" pos:end="1:22"><decl pos:start="1:19" pos:end="1:22"><type pos:start="1:19" pos:end="1:22"><name pos:start="1:19" pos:end="1:22">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="170:1">{<block_content pos:start="5:5" pos:end="168:32">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint64_t</name></type> <name pos:start="5:14" pos:end="5:16">val</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:54"><expr pos:start="9:5" pos:end="9:53"><call pos:start="9:5" pos:end="9:53"><name pos:start="9:5" pos:end="9:36">helper_svm_check_intercept_param</name><argument_list pos:start="9:37" pos:end="9:53">(<argument pos:start="9:38" pos:end="9:49"><expr pos:start="9:38" pos:end="9:49"><name pos:start="9:38" pos:end="9:49">SVM_EXIT_MSR</name></expr></argument>, <argument pos:start="9:52" pos:end="9:52"><expr pos:start="9:52" pos:end="9:52"><literal type="number" pos:start="9:52" pos:end="9:52">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="13:5" pos:end="164:5">switch<condition pos:start="13:11" pos:end="13:25">(<expr pos:start="13:12" pos:end="13:24"><operator pos:start="13:12" pos:end="13:12">(</operator><name pos:start="13:13" pos:end="13:20">uint32_t</name><operator pos:start="13:21" pos:end="13:21">)</operator><name pos:start="13:22" pos:end="13:24">ECX</name></expr>)</condition> <block pos:start="13:27" pos:end="164:5">{<block_content pos:start="15:5" pos:end="161:16">

    <case pos:start="15:5" pos:end="15:30">case <expr pos:start="15:10" pos:end="15:29"><name pos:start="15:10" pos:end="15:29">MSR_IA32_SYSENTER_CS</name></expr>:</case>

        <expr_stmt pos:start="17:9" pos:end="17:31"><expr pos:start="17:9" pos:end="17:30"><name pos:start="17:9" pos:end="17:11">val</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <name pos:start="17:15" pos:end="17:30"><name pos:start="17:15" pos:end="17:17">env</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:30">sysenter_cs</name></name></expr>;</expr_stmt>


    <case pos:start="20:5" pos:end="20:31">case <expr pos:start="20:10" pos:end="20:30"><name pos:start="20:10" pos:end="20:30">MSR_IA32_SYSENTER_ESP</name></expr>:</case>

        <expr_stmt pos:start="22:9" pos:end="22:32"><expr pos:start="22:9" pos:end="22:31"><name pos:start="22:9" pos:end="22:11">val</name> <operator pos:start="22:13" pos:end="22:13">=</operator> <name pos:start="22:15" pos:end="22:31"><name pos:start="22:15" pos:end="22:17">env</name><operator pos:start="22:18" pos:end="22:19">-&gt;</operator><name pos:start="22:20" pos:end="22:31">sysenter_esp</name></name></expr>;</expr_stmt>


    <case pos:start="25:5" pos:end="25:31">case <expr pos:start="25:10" pos:end="25:30"><name pos:start="25:10" pos:end="25:30">MSR_IA32_SYSENTER_EIP</name></expr>:</case>

        <expr_stmt pos:start="27:9" pos:end="27:32"><expr pos:start="27:9" pos:end="27:31"><name pos:start="27:9" pos:end="27:11">val</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <name pos:start="27:15" pos:end="27:31"><name pos:start="27:15" pos:end="27:17">env</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:31">sysenter_eip</name></name></expr>;</expr_stmt>


    <case pos:start="30:5" pos:end="30:27">case <expr pos:start="30:10" pos:end="30:26"><name pos:start="30:10" pos:end="30:26">MSR_IA32_APICBASE</name></expr>:</case>

        <expr_stmt pos:start="32:9" pos:end="32:37"><expr pos:start="32:9" pos:end="32:36"><name pos:start="32:9" pos:end="32:11">val</name> <operator pos:start="32:13" pos:end="32:13">=</operator> <call pos:start="32:15" pos:end="32:36"><name pos:start="32:15" pos:end="32:31">cpu_get_apic_base</name><argument_list pos:start="32:32" pos:end="32:36">(<argument pos:start="32:33" pos:end="32:35"><expr pos:start="32:33" pos:end="32:35"><name pos:start="32:33" pos:end="32:35">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <case pos:start="35:5" pos:end="35:18">case <expr pos:start="35:10" pos:end="35:17"><name pos:start="35:10" pos:end="35:17">MSR_EFER</name></expr>:</case>

        <expr_stmt pos:start="37:9" pos:end="37:24"><expr pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:11">val</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <name pos:start="37:15" pos:end="37:23"><name pos:start="37:15" pos:end="37:17">env</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:23">efer</name></name></expr>;</expr_stmt>


    <case pos:start="40:5" pos:end="40:18">case <expr pos:start="40:10" pos:end="40:17"><name pos:start="40:10" pos:end="40:17">MSR_STAR</name></expr>:</case>

        <expr_stmt pos:start="42:9" pos:end="42:24"><expr pos:start="42:9" pos:end="42:23"><name pos:start="42:9" pos:end="42:11">val</name> <operator pos:start="42:13" pos:end="42:13">=</operator> <name pos:start="42:15" pos:end="42:23"><name pos:start="42:15" pos:end="42:17">env</name><operator pos:start="42:18" pos:end="42:19">-&gt;</operator><name pos:start="42:20" pos:end="42:23">star</name></name></expr>;</expr_stmt>


    <case pos:start="45:5" pos:end="45:17">case <expr pos:start="45:10" pos:end="45:16"><name pos:start="45:10" pos:end="45:16">MSR_PAT</name></expr>:</case>

        <expr_stmt pos:start="47:9" pos:end="47:23"><expr pos:start="47:9" pos:end="47:22"><name pos:start="47:9" pos:end="47:11">val</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <name pos:start="47:15" pos:end="47:22"><name pos:start="47:15" pos:end="47:17">env</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:22">pat</name></name></expr>;</expr_stmt>


    <case pos:start="50:5" pos:end="50:25">case <expr pos:start="50:10" pos:end="50:24"><name pos:start="50:10" pos:end="50:24">MSR_VM_HSAVE_PA</name></expr>:</case>

        <expr_stmt pos:start="52:9" pos:end="52:28"><expr pos:start="52:9" pos:end="52:27"><name pos:start="52:9" pos:end="52:11">val</name> <operator pos:start="52:13" pos:end="52:13">=</operator> <name pos:start="52:15" pos:end="52:27"><name pos:start="52:15" pos:end="52:17">env</name><operator pos:start="52:18" pos:end="52:19">-&gt;</operator><name pos:start="52:20" pos:end="52:27">vm_hsave</name></name></expr>;</expr_stmt>


    <case pos:start="55:5" pos:end="55:30">case <expr pos:start="55:10" pos:end="55:29"><name pos:start="55:10" pos:end="55:29">MSR_IA32_PERF_STATUS</name></expr>:</case>

        <comment type="block" pos:start="57:9" pos:end="57:35">/* tsc_increment_by_tick */</comment>

        <expr_stmt pos:start="59:9" pos:end="59:22"><expr pos:start="59:9" pos:end="59:21"><name pos:start="59:9" pos:end="59:11">val</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <literal type="number" pos:start="59:15" pos:end="59:21">1000ULL</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="61:9" pos:end="61:28">/* CPU multiplier */</comment>

        <expr_stmt pos:start="63:9" pos:end="67:0"><expr pos:start="63:9" pos:end="63:39"><name pos:start="63:9" pos:end="63:11">val</name> <operator pos:start="63:13" pos:end="63:14">|=</operator> <operator pos:start="63:16" pos:end="63:16">(</operator><operator pos:start="63:17" pos:end="63:17">(</operator><operator pos:start="63:18" pos:end="63:18">(</operator><name pos:start="63:19" pos:end="63:26">uint64_t</name><operator pos:start="63:27" pos:end="63:27">)</operator><literal type="number" pos:start="63:28" pos:end="63:31">4ULL</literal><operator pos:start="63:32" pos:end="63:32">)</operator> <operator pos:start="63:34" pos:end="63:35">&lt;&lt;</operator> <literal type="number" pos:start="63:37" pos:end="63:38">40</literal><operator pos:start="63:39" pos:end="63:39">)</operator></expr>;</expr_stmt>


<cpp:ifdef pos:start="66:1" pos:end="66:20">#<cpp:directive pos:start="66:2" pos:end="66:6">ifdef</cpp:directive> <name pos:start="66:8" pos:end="66:20">TARGET_X86_64</name></cpp:ifdef>

    <case pos:start="68:5" pos:end="68:19">case <expr pos:start="68:10" pos:end="68:18"><name pos:start="68:10" pos:end="68:18">MSR_LSTAR</name></expr>:</case>

        <expr_stmt pos:start="70:9" pos:end="70:25"><expr pos:start="70:9" pos:end="70:24"><name pos:start="70:9" pos:end="70:11">val</name> <operator pos:start="70:13" pos:end="70:13">=</operator> <name pos:start="70:15" pos:end="70:24"><name pos:start="70:15" pos:end="70:17">env</name><operator pos:start="70:18" pos:end="70:19">-&gt;</operator><name pos:start="70:20" pos:end="70:24">lstar</name></name></expr>;</expr_stmt>


    <case pos:start="73:5" pos:end="73:19">case <expr pos:start="73:10" pos:end="73:18"><name pos:start="73:10" pos:end="73:18">MSR_CSTAR</name></expr>:</case>

        <expr_stmt pos:start="75:9" pos:end="75:25"><expr pos:start="75:9" pos:end="75:24"><name pos:start="75:9" pos:end="75:11">val</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <name pos:start="75:15" pos:end="75:24"><name pos:start="75:15" pos:end="75:17">env</name><operator pos:start="75:18" pos:end="75:19">-&gt;</operator><name pos:start="75:20" pos:end="75:24">cstar</name></name></expr>;</expr_stmt>


    <case pos:start="78:5" pos:end="78:19">case <expr pos:start="78:10" pos:end="78:18"><name pos:start="78:10" pos:end="78:18">MSR_FMASK</name></expr>:</case>

        <expr_stmt pos:start="80:9" pos:end="80:25"><expr pos:start="80:9" pos:end="80:24"><name pos:start="80:9" pos:end="80:11">val</name> <operator pos:start="80:13" pos:end="80:13">=</operator> <name pos:start="80:15" pos:end="80:24"><name pos:start="80:15" pos:end="80:17">env</name><operator pos:start="80:18" pos:end="80:19">-&gt;</operator><name pos:start="80:20" pos:end="80:24">fmask</name></name></expr>;</expr_stmt>


    <case pos:start="83:5" pos:end="83:20">case <expr pos:start="83:10" pos:end="83:19"><name pos:start="83:10" pos:end="83:19">MSR_FSBASE</name></expr>:</case>

        <expr_stmt pos:start="85:9" pos:end="85:35"><expr pos:start="85:9" pos:end="85:34"><name pos:start="85:9" pos:end="85:11">val</name> <operator pos:start="85:13" pos:end="85:13">=</operator> <name pos:start="85:15" pos:end="85:29"><name pos:start="85:15" pos:end="85:17">env</name><operator pos:start="85:18" pos:end="85:19">-&gt;</operator><name pos:start="85:20" pos:end="85:23">segs</name><index pos:start="85:24" pos:end="85:29">[<expr pos:start="85:25" pos:end="85:28"><name pos:start="85:25" pos:end="85:28">R_FS</name></expr>]</index></name><operator pos:start="85:30" pos:end="85:30">.</operator><name pos:start="85:31" pos:end="85:34">base</name></expr>;</expr_stmt>


    <case pos:start="88:5" pos:end="88:20">case <expr pos:start="88:10" pos:end="88:19"><name pos:start="88:10" pos:end="88:19">MSR_GSBASE</name></expr>:</case>

        <expr_stmt pos:start="90:9" pos:end="90:35"><expr pos:start="90:9" pos:end="90:34"><name pos:start="90:9" pos:end="90:11">val</name> <operator pos:start="90:13" pos:end="90:13">=</operator> <name pos:start="90:15" pos:end="90:29"><name pos:start="90:15" pos:end="90:17">env</name><operator pos:start="90:18" pos:end="90:19">-&gt;</operator><name pos:start="90:20" pos:end="90:23">segs</name><index pos:start="90:24" pos:end="90:29">[<expr pos:start="90:25" pos:end="90:28"><name pos:start="90:25" pos:end="90:28">R_GS</name></expr>]</index></name><operator pos:start="90:30" pos:end="90:30">.</operator><name pos:start="90:31" pos:end="90:34">base</name></expr>;</expr_stmt>


    <case pos:start="93:5" pos:end="93:26">case <expr pos:start="93:10" pos:end="93:25"><name pos:start="93:10" pos:end="93:25">MSR_KERNELGSBASE</name></expr>:</case>

        <expr_stmt pos:start="95:9" pos:end="101:0"><expr pos:start="95:9" pos:end="95:31"><name pos:start="95:9" pos:end="95:11">val</name> <operator pos:start="95:13" pos:end="95:13">=</operator> <name pos:start="95:15" pos:end="95:31"><name pos:start="95:15" pos:end="95:17">env</name><operator pos:start="95:18" pos:end="95:19">-&gt;</operator><name pos:start="95:20" pos:end="95:31">kernelgsbase</name></name></expr>;</expr_stmt>


<cpp:endif pos:start="98:1" pos:end="98:6">#<cpp:directive pos:start="98:2" pos:end="98:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="100:1" pos:end="100:16">#<cpp:directive pos:start="100:2" pos:end="100:6">ifdef</cpp:directive> <name pos:start="100:8" pos:end="100:16">USE_KQEMU</name></cpp:ifdef>

    <case pos:start="102:5" pos:end="102:26">case <expr pos:start="102:10" pos:end="102:25"><name pos:start="102:10" pos:end="102:25">MSR_QPI_COMMBASE</name></expr>:</case>

        <if_stmt pos:start="104:9" pos:end="116:0"><if pos:start="104:9" pos:end="108:9">if <condition pos:start="104:12" pos:end="104:31">(<expr pos:start="104:13" pos:end="104:30"><name pos:start="104:13" pos:end="104:30"><name pos:start="104:13" pos:end="104:15">env</name><operator pos:start="104:16" pos:end="104:17">-&gt;</operator><name pos:start="104:18" pos:end="104:30">kqemu_enabled</name></name></expr>)</condition> <block pos:start="104:33" pos:end="108:9">{<block_content pos:start="106:13" pos:end="106:34">

            <expr_stmt pos:start="106:13" pos:end="106:34"><expr pos:start="106:13" pos:end="106:33"><name pos:start="106:13" pos:end="106:15">val</name> <operator pos:start="106:17" pos:end="106:17">=</operator> <name pos:start="106:19" pos:end="106:33">kqemu_comm_base</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="108:11" pos:end="116:0">else <block pos:start="108:16" pos:end="116:0">{<block_content pos:start="110:13" pos:end="110:20">

            <expr_stmt pos:start="110:13" pos:end="110:20"><expr pos:start="110:13" pos:end="110:19"><name pos:start="110:13" pos:end="110:15">val</name> <operator pos:start="110:17" pos:end="110:17">=</operator> <literal type="number" pos:start="110:19" pos:end="110:19">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>


<cpp:endif pos:start="115:1" pos:end="115:6">#<cpp:directive pos:start="115:2" pos:end="115:6">endif</cpp:directive></cpp:endif>









































    <default pos:start="157:5" pos:end="157:12">default:</default>

        <comment type="block" pos:start="159:9" pos:end="159:30">/* XXX: exception ? */</comment>

        <expr_stmt pos:start="161:9" pos:end="161:16"><expr pos:start="161:9" pos:end="161:15"><name pos:start="161:9" pos:end="161:11">val</name> <operator pos:start="161:13" pos:end="161:13">=</operator> <literal type="number" pos:start="161:15" pos:end="161:15">0</literal></expr>;</expr_stmt>


    </block_content>}</block></switch>

    <expr_stmt pos:start="166:5" pos:end="166:26"><expr pos:start="166:5" pos:end="166:25"><name pos:start="166:5" pos:end="166:7">EAX</name> <operator pos:start="166:9" pos:end="166:9">=</operator> <operator pos:start="166:11" pos:end="166:11">(</operator><name pos:start="166:12" pos:end="166:19">uint32_t</name><operator pos:start="166:20" pos:end="166:20">)</operator><operator pos:start="166:21" pos:end="166:21">(</operator><name pos:start="166:22" pos:end="166:24">val</name><operator pos:start="166:25" pos:end="166:25">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="168:5" pos:end="168:32"><expr pos:start="168:5" pos:end="168:31"><name pos:start="168:5" pos:end="168:7">EDX</name> <operator pos:start="168:9" pos:end="168:9">=</operator> <operator pos:start="168:11" pos:end="168:11">(</operator><name pos:start="168:12" pos:end="168:19">uint32_t</name><operator pos:start="168:20" pos:end="168:20">)</operator><operator pos:start="168:21" pos:end="168:21">(</operator><name pos:start="168:22" pos:end="168:24">val</name> <operator pos:start="168:26" pos:end="168:27">&gt;&gt;</operator> <literal type="number" pos:start="168:29" pos:end="168:30">32</literal><operator pos:start="168:31" pos:end="168:31">)</operator></expr>;</expr_stmt>

</block_content>}</block></function></unit>
