<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6368.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:7"><name pos:start="1:1" pos:end="1:7">int64_t</name></type> <name pos:start="1:9" pos:end="1:27">qmp_guest_file_open</name><parameter_list pos:start="1:28" pos:end="1:91">(<parameter pos:start="1:29" pos:end="1:44"><decl pos:start="1:29" pos:end="1:44"><type pos:start="1:29" pos:end="1:44"><specifier pos:start="1:29" pos:end="1:33">const</specifier> <name pos:start="1:35" pos:end="1:38">char</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:44">path</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:59"><decl pos:start="1:47" pos:end="1:59"><type pos:start="1:47" pos:end="1:59"><name pos:start="1:47" pos:end="1:50">bool</name></type> <name pos:start="1:52" pos:end="1:59">has_mode</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:77"><decl pos:start="1:62" pos:end="1:77"><type pos:start="1:62" pos:end="1:77"><specifier pos:start="1:62" pos:end="1:66">const</specifier> <name pos:start="1:68" pos:end="1:71">char</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:77">mode</name></decl></parameter>, <parameter pos:start="1:80" pos:end="1:90"><decl pos:start="1:80" pos:end="1:90"><type pos:start="1:80" pos:end="1:90"><name pos:start="1:80" pos:end="1:84">Error</name> <modifier pos:start="1:86" pos:end="1:86">*</modifier><modifier pos:start="1:87" pos:end="1:87">*</modifier></type><name pos:start="1:88" pos:end="1:90">err</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="77:1">{<block_content pos:start="5:5" pos:end="75:18">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">FILE</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:12">fh</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:11"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">fd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:15">ret</name> <init pos:start="9:17" pos:end="9:20">= <expr pos:start="9:19" pos:end="9:20"><operator pos:start="9:19" pos:end="9:19">-</operator><literal type="number" pos:start="9:20" pos:end="9:20">1</literal></expr></init></decl>, <decl pos:start="9:23" pos:end="9:28"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:23" pos:end="9:28">handle</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:18">(<expr pos:start="13:9" pos:end="13:17"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:17">has_mode</name></expr>)</condition> <block pos:start="13:20" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:19">

        <expr_stmt pos:start="15:9" pos:end="15:19"><expr pos:start="15:9" pos:end="15:18"><name pos:start="15:9" pos:end="15:12">mode</name> <operator pos:start="15:14" pos:end="15:14">=</operator> <literal type="string" pos:start="15:16" pos:end="15:18">"r"</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:71"><expr pos:start="19:5" pos:end="19:70"><call pos:start="19:5" pos:end="19:70"><name pos:start="19:5" pos:end="19:8">slog</name><argument_list pos:start="19:9" pos:end="19:70">(<argument pos:start="19:10" pos:end="19:57"><expr pos:start="19:10" pos:end="19:57"><literal type="string" pos:start="19:10" pos:end="19:57">"guest-file-open called, filepath: %s, mode: %s"</literal></expr></argument>, <argument pos:start="19:60" pos:end="19:63"><expr pos:start="19:60" pos:end="19:63"><name pos:start="19:60" pos:end="19:63">path</name></expr></argument>, <argument pos:start="19:66" pos:end="19:69"><expr pos:start="19:66" pos:end="19:69"><name pos:start="19:66" pos:end="19:69">mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:27"><expr pos:start="21:5" pos:end="21:26"><name pos:start="21:5" pos:end="21:6">fh</name> <operator pos:start="21:8" pos:end="21:8">=</operator> <call pos:start="21:10" pos:end="21:26"><name pos:start="21:10" pos:end="21:14">fopen</name><argument_list pos:start="21:15" pos:end="21:26">(<argument pos:start="21:16" pos:end="21:19"><expr pos:start="21:16" pos:end="21:19"><name pos:start="21:16" pos:end="21:19">path</name></expr></argument>, <argument pos:start="21:22" pos:end="21:25"><expr pos:start="21:22" pos:end="21:25"><name pos:start="21:22" pos:end="21:25">mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="31:5">if <condition pos:start="23:8" pos:end="23:12">(<expr pos:start="23:9" pos:end="23:11"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:11">fh</name></expr>)</condition> <block pos:start="23:14" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:18">

        <expr_stmt pos:start="25:9" pos:end="27:37"><expr pos:start="25:9" pos:end="27:36"><call pos:start="25:9" pos:end="27:36"><name pos:start="25:9" pos:end="25:24">error_setg_errno</name><argument_list pos:start="25:25" pos:end="27:36">(<argument pos:start="25:26" pos:end="25:28"><expr pos:start="25:26" pos:end="25:28"><name pos:start="25:26" pos:end="25:28">err</name></expr></argument>, <argument pos:start="25:31" pos:end="25:35"><expr pos:start="25:31" pos:end="25:35"><name pos:start="25:31" pos:end="25:35">errno</name></expr></argument>, <argument pos:start="25:38" pos:end="25:76"><expr pos:start="25:38" pos:end="25:76"><literal type="string" pos:start="25:38" pos:end="25:76">"failed to open file '%s' (mode: '%s')"</literal></expr></argument>,

                         <argument pos:start="27:26" pos:end="27:29"><expr pos:start="27:26" pos:end="27:29"><name pos:start="27:26" pos:end="27:29">path</name></expr></argument>, <argument pos:start="27:32" pos:end="27:35"><expr pos:start="27:32" pos:end="27:35"><name pos:start="27:32" pos:end="27:35">mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:18">return <expr pos:start="29:16" pos:end="29:17"><operator pos:start="29:16" pos:end="29:16">-</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="35:5" pos:end="39:7">/* set fd non-blocking to avoid common use cases (like reading from a

     * named pipe) from hanging the agent

     */</comment>

    <expr_stmt pos:start="41:5" pos:end="41:20"><expr pos:start="41:5" pos:end="41:19"><name pos:start="41:5" pos:end="41:6">fd</name> <operator pos:start="41:8" pos:end="41:8">=</operator> <call pos:start="41:10" pos:end="41:19"><name pos:start="41:10" pos:end="41:15">fileno</name><argument_list pos:start="41:16" pos:end="41:19">(<argument pos:start="41:17" pos:end="41:18"><expr pos:start="41:17" pos:end="41:18"><name pos:start="41:17" pos:end="41:18">fh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:29"><expr pos:start="43:5" pos:end="43:28"><name pos:start="43:5" pos:end="43:7">ret</name> <operator pos:start="43:9" pos:end="43:9">=</operator> <call pos:start="43:11" pos:end="43:28"><name pos:start="43:11" pos:end="43:15">fcntl</name><argument_list pos:start="43:16" pos:end="43:28">(<argument pos:start="43:17" pos:end="43:18"><expr pos:start="43:17" pos:end="43:18"><name pos:start="43:17" pos:end="43:18">fd</name></expr></argument>, <argument pos:start="43:21" pos:end="43:27"><expr pos:start="43:21" pos:end="43:27"><name pos:start="43:21" pos:end="43:27">F_GETFL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:47"><expr pos:start="45:5" pos:end="45:46"><name pos:start="45:5" pos:end="45:7">ret</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <call pos:start="45:11" pos:end="45:46"><name pos:start="45:11" pos:end="45:15">fcntl</name><argument_list pos:start="45:16" pos:end="45:46">(<argument pos:start="45:17" pos:end="45:18"><expr pos:start="45:17" pos:end="45:18"><name pos:start="45:17" pos:end="45:18">fd</name></expr></argument>, <argument pos:start="45:21" pos:end="45:27"><expr pos:start="45:21" pos:end="45:27"><name pos:start="45:21" pos:end="45:27">F_SETFL</name></expr></argument>, <argument pos:start="45:30" pos:end="45:45"><expr pos:start="45:30" pos:end="45:45"><name pos:start="45:30" pos:end="45:32">ret</name> <operator pos:start="45:34" pos:end="45:34">|</operator> <name pos:start="45:36" pos:end="45:45">O_NONBLOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="57:5"><if pos:start="47:5" pos:end="57:5">if <condition pos:start="47:8" pos:end="47:18">(<expr pos:start="47:9" pos:end="47:17"><name pos:start="47:9" pos:end="47:11">ret</name> <operator pos:start="47:13" pos:end="47:14">==</operator> <operator pos:start="47:16" pos:end="47:16">-</operator><literal type="number" pos:start="47:17" pos:end="47:17">1</literal></expr>)</condition> <block pos:start="47:20" pos:end="57:5">{<block_content pos:start="49:9" pos:end="55:18">

        <expr_stmt pos:start="49:9" pos:end="51:31"><expr pos:start="49:9" pos:end="51:30"><call pos:start="49:9" pos:end="51:30"><name pos:start="49:9" pos:end="49:24">error_setg_errno</name><argument_list pos:start="49:25" pos:end="51:30">(<argument pos:start="49:26" pos:end="49:28"><expr pos:start="49:26" pos:end="49:28"><name pos:start="49:26" pos:end="49:28">err</name></expr></argument>, <argument pos:start="49:31" pos:end="49:35"><expr pos:start="49:31" pos:end="49:35"><name pos:start="49:31" pos:end="49:35">errno</name></expr></argument>, <argument pos:start="49:38" pos:end="49:76"><expr pos:start="49:38" pos:end="49:76"><literal type="string" pos:start="49:38" pos:end="49:76">"failed to make file '%s' non-blocking"</literal></expr></argument>,

                         <argument pos:start="51:26" pos:end="51:29"><expr pos:start="51:26" pos:end="51:29"><name pos:start="51:26" pos:end="51:29">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:19"><expr pos:start="53:9" pos:end="53:18"><call pos:start="53:9" pos:end="53:18"><name pos:start="53:9" pos:end="53:14">fclose</name><argument_list pos:start="53:15" pos:end="53:18">(<argument pos:start="53:16" pos:end="53:17"><expr pos:start="53:16" pos:end="53:17"><name pos:start="53:16" pos:end="53:17">fh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="55:9" pos:end="55:18">return <expr pos:start="55:16" pos:end="55:17"><operator pos:start="55:16" pos:end="55:16">-</operator><literal type="number" pos:start="55:17" pos:end="55:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:44"><expr pos:start="61:5" pos:end="61:43"><name pos:start="61:5" pos:end="61:10">handle</name> <operator pos:start="61:12" pos:end="61:12">=</operator> <call pos:start="61:14" pos:end="61:43"><name pos:start="61:14" pos:end="61:34">guest_file_handle_add</name><argument_list pos:start="61:35" pos:end="61:43">(<argument pos:start="61:36" pos:end="61:37"><expr pos:start="61:36" pos:end="61:37"><name pos:start="61:36" pos:end="61:37">fh</name></expr></argument>, <argument pos:start="61:40" pos:end="61:42"><expr pos:start="61:40" pos:end="61:42"><name pos:start="61:40" pos:end="61:42">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="69:5"><if pos:start="63:5" pos:end="69:5">if <condition pos:start="63:8" pos:end="63:26">(<expr pos:start="63:9" pos:end="63:25"><call pos:start="63:9" pos:end="63:25"><name pos:start="63:9" pos:end="63:20">error_is_set</name><argument_list pos:start="63:21" pos:end="63:25">(<argument pos:start="63:22" pos:end="63:24"><expr pos:start="63:22" pos:end="63:24"><name pos:start="63:22" pos:end="63:24">err</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="63:28" pos:end="69:5">{<block_content pos:start="65:9" pos:end="67:18">

        <expr_stmt pos:start="65:9" pos:end="65:19"><expr pos:start="65:9" pos:end="65:18"><call pos:start="65:9" pos:end="65:18"><name pos:start="65:9" pos:end="65:14">fclose</name><argument_list pos:start="65:15" pos:end="65:18">(<argument pos:start="65:16" pos:end="65:17"><expr pos:start="65:16" pos:end="65:17"><name pos:start="65:16" pos:end="65:17">fh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="67:9" pos:end="67:18">return <expr pos:start="67:16" pos:end="67:17"><operator pos:start="67:16" pos:end="67:16">-</operator><literal type="number" pos:start="67:17" pos:end="67:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:48"><expr pos:start="73:5" pos:end="73:47"><call pos:start="73:5" pos:end="73:47"><name pos:start="73:5" pos:end="73:8">slog</name><argument_list pos:start="73:9" pos:end="73:47">(<argument pos:start="73:10" pos:end="73:38"><expr pos:start="73:10" pos:end="73:38"><literal type="string" pos:start="73:10" pos:end="73:38">"guest-file-open, handle: %d"</literal></expr></argument>, <argument pos:start="73:41" pos:end="73:46"><expr pos:start="73:41" pos:end="73:46"><name pos:start="73:41" pos:end="73:46">handle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="75:5" pos:end="75:18">return <expr pos:start="75:12" pos:end="75:17"><name pos:start="75:12" pos:end="75:17">handle</name></expr>;</return>

</block_content>}</block></function>
</unit>
