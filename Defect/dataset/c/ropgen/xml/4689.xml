<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4689.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:17"><name pos:start="1:1" pos:end="1:15">AVFrameSideData</name> <modifier pos:start="1:17" pos:end="1:17">*</modifier></type><name pos:start="1:18" pos:end="1:39">av_frame_new_side_data</name><parameter_list pos:start="1:40" pos:end="5:49">(<parameter pos:start="1:41" pos:end="1:54"><decl pos:start="1:41" pos:end="1:54"><type pos:start="1:41" pos:end="1:54"><name pos:start="1:41" pos:end="1:47">AVFrame</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:54">frame</name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:69"><decl pos:start="3:41" pos:end="3:69"><type pos:start="3:41" pos:end="3:69"><name pos:start="3:41" pos:end="3:64"><name pos:start="3:41" pos:end="3:44">enum</name> <name pos:start="3:46" pos:end="3:64">AVFrameSideDataType</name></name></type> <name pos:start="3:66" pos:end="3:69">type</name></decl></parameter>,

                                        <parameter pos:start="5:41" pos:end="5:48"><decl pos:start="5:41" pos:end="5:48"><type pos:start="5:41" pos:end="5:48"><name pos:start="5:41" pos:end="5:43">int</name></type> <name pos:start="5:45" pos:end="5:48">size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="69:1">{<block_content pos:start="9:5" pos:end="67:15">

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">AVFrameSideData</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:24">ret</name></decl>, <decl pos:start="9:27" pos:end="9:31"><type ref="prev" pos:start="9:5" pos:end="9:21"><modifier pos:start="9:27" pos:end="9:27">*</modifier><modifier pos:start="9:28" pos:end="9:28">*</modifier></type><name pos:start="9:29" pos:end="9:31">tmp</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:20"><if pos:start="13:5" pos:end="15:20">if <condition pos:start="13:8" pos:end="13:70">(<expr pos:start="13:9" pos:end="13:69"><name pos:start="13:9" pos:end="13:27"><name pos:start="13:9" pos:end="13:13">frame</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:27">nb_side_data</name></name> <operator pos:start="13:29" pos:end="13:29">&gt;</operator> <name pos:start="13:31" pos:end="13:37">INT_MAX</name> <operator pos:start="13:39" pos:end="13:39">/</operator> <sizeof pos:start="13:41" pos:end="13:65">sizeof<argument_list pos:start="13:47" pos:end="13:65">(<argument pos:start="13:48" pos:end="13:64"><expr pos:start="13:48" pos:end="13:64"><operator pos:start="13:48" pos:end="13:48">*</operator><name pos:start="13:49" pos:end="13:64"><name pos:start="13:49" pos:end="13:53">frame</name><operator pos:start="13:54" pos:end="13:55">-&gt;</operator><name pos:start="13:56" pos:end="13:64">side_data</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="13:67" pos:end="13:67">-</operator> <literal type="number" pos:start="13:69" pos:end="13:69">1</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:20"><block_content pos:start="15:9" pos:end="15:20">

        <return pos:start="15:9" pos:end="15:20">return <expr pos:start="15:16" pos:end="15:19"><name pos:start="15:16" pos:end="15:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="21:76"><expr pos:start="19:5" pos:end="21:75"><name pos:start="19:5" pos:end="19:7">tmp</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="21:75"><name pos:start="19:11" pos:end="19:20">av_realloc</name><argument_list pos:start="19:21" pos:end="21:75">(<argument pos:start="19:22" pos:end="19:37"><expr pos:start="19:22" pos:end="19:37"><name pos:start="19:22" pos:end="19:37"><name pos:start="19:22" pos:end="19:26">frame</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:37">side_data</name></name></expr></argument>,

                     <argument pos:start="21:22" pos:end="21:74"><expr pos:start="21:22" pos:end="21:74"><operator pos:start="21:22" pos:end="21:22">(</operator><name pos:start="21:23" pos:end="21:41"><name pos:start="21:23" pos:end="21:27">frame</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:41">nb_side_data</name></name> <operator pos:start="21:43" pos:end="21:43">+</operator> <literal type="number" pos:start="21:45" pos:end="21:45">1</literal><operator pos:start="21:46" pos:end="21:46">)</operator> <operator pos:start="21:48" pos:end="21:48">*</operator> <sizeof pos:start="21:50" pos:end="21:74">sizeof<argument_list pos:start="21:56" pos:end="21:74">(<argument pos:start="21:57" pos:end="21:73"><expr pos:start="21:57" pos:end="21:73"><operator pos:start="21:57" pos:end="21:57">*</operator><name pos:start="21:58" pos:end="21:73"><name pos:start="21:58" pos:end="21:62">frame</name><operator pos:start="21:63" pos:end="21:64">-&gt;</operator><name pos:start="21:65" pos:end="21:73">side_data</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:20"><if pos:start="23:5" pos:end="25:20">if <condition pos:start="23:8" pos:end="23:13">(<expr pos:start="23:9" pos:end="23:12"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:12">tmp</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:20"><block_content pos:start="25:9" pos:end="25:20">

        <return pos:start="25:9" pos:end="25:20">return <expr pos:start="25:16" pos:end="25:19"><name pos:start="25:16" pos:end="25:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:27"><expr pos:start="27:5" pos:end="27:26"><name pos:start="27:5" pos:end="27:20"><name pos:start="27:5" pos:end="27:9">frame</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:20">side_data</name></name> <operator pos:start="27:22" pos:end="27:22">=</operator> <name pos:start="27:24" pos:end="27:26">tmp</name></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:35"><expr pos:start="31:5" pos:end="31:34"><name pos:start="31:5" pos:end="31:7">ret</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <call pos:start="31:11" pos:end="31:34"><name pos:start="31:11" pos:end="31:20">av_mallocz</name><argument_list pos:start="31:21" pos:end="31:34">(<argument pos:start="31:22" pos:end="31:33"><expr pos:start="31:22" pos:end="31:33"><sizeof pos:start="31:22" pos:end="31:33">sizeof<argument_list pos:start="31:28" pos:end="31:33">(<argument pos:start="31:29" pos:end="31:32"><expr pos:start="31:29" pos:end="31:32"><operator pos:start="31:29" pos:end="31:29">*</operator><name pos:start="31:30" pos:end="31:32">ret</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="35:20"><if pos:start="33:5" pos:end="35:20">if <condition pos:start="33:8" pos:end="33:13">(<expr pos:start="33:9" pos:end="33:12"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:12">ret</name></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:20"><block_content pos:start="35:9" pos:end="35:20">

        <return pos:start="35:9" pos:end="35:20">return <expr pos:start="35:16" pos:end="35:19"><name pos:start="35:16" pos:end="35:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="57:5"><if pos:start="39:5" pos:end="57:5">if <condition pos:start="39:8" pos:end="39:17">(<expr pos:start="39:9" pos:end="39:16"><name pos:start="39:9" pos:end="39:12">size</name> <operator pos:start="39:14" pos:end="39:14">&gt;</operator> <literal type="number" pos:start="39:16" pos:end="39:16">0</literal></expr>)</condition> <block pos:start="39:19" pos:end="57:5">{<block_content pos:start="41:9" pos:end="55:25">

        <expr_stmt pos:start="41:9" pos:end="41:41"><expr pos:start="41:9" pos:end="41:40"><name pos:start="41:9" pos:end="41:16"><name pos:start="41:9" pos:end="41:11">ret</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:16">buf</name></name> <operator pos:start="41:18" pos:end="41:18">=</operator> <call pos:start="41:20" pos:end="41:40"><name pos:start="41:20" pos:end="41:34">av_buffer_alloc</name><argument_list pos:start="41:35" pos:end="41:40">(<argument pos:start="41:36" pos:end="41:39"><expr pos:start="41:36" pos:end="41:39"><name pos:start="41:36" pos:end="41:39">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="49:9"><if pos:start="43:9" pos:end="49:9">if <condition pos:start="43:12" pos:end="43:22">(<expr pos:start="43:13" pos:end="43:21"><operator pos:start="43:13" pos:end="43:13">!</operator><name pos:start="43:14" pos:end="43:21"><name pos:start="43:14" pos:end="43:16">ret</name><operator pos:start="43:17" pos:end="43:18">-&gt;</operator><name pos:start="43:19" pos:end="43:21">buf</name></name></expr>)</condition> <block pos:start="43:24" pos:end="49:9">{<block_content pos:start="45:13" pos:end="47:24">

            <expr_stmt pos:start="45:13" pos:end="45:27"><expr pos:start="45:13" pos:end="45:26"><call pos:start="45:13" pos:end="45:26"><name pos:start="45:13" pos:end="45:20">av_freep</name><argument_list pos:start="45:21" pos:end="45:26">(<argument pos:start="45:22" pos:end="45:25"><expr pos:start="45:22" pos:end="45:25"><operator pos:start="45:22" pos:end="45:22">&amp;</operator><name pos:start="45:23" pos:end="45:25">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="47:13" pos:end="47:24">return <expr pos:start="47:20" pos:end="47:23"><name pos:start="47:20" pos:end="47:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="53:9" pos:end="53:35"><expr pos:start="53:9" pos:end="53:34"><name pos:start="53:9" pos:end="53:17"><name pos:start="53:9" pos:end="53:11">ret</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:17">data</name></name> <operator pos:start="53:19" pos:end="53:19">=</operator> <name pos:start="53:21" pos:end="53:34"><name pos:start="53:21" pos:end="53:23">ret</name><operator pos:start="53:24" pos:end="53:25">-&gt;</operator><name pos:start="53:26" pos:end="53:28">buf</name><operator pos:start="53:29" pos:end="53:30">-&gt;</operator><name pos:start="53:31" pos:end="53:34">data</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:25"><expr pos:start="55:9" pos:end="55:24"><name pos:start="55:9" pos:end="55:17"><name pos:start="55:9" pos:end="55:11">ret</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:17">size</name></name> <operator pos:start="55:19" pos:end="55:19">=</operator> <name pos:start="55:21" pos:end="55:24">size</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:21"><expr pos:start="59:5" pos:end="59:20"><name pos:start="59:5" pos:end="59:13"><name pos:start="59:5" pos:end="59:7">ret</name><operator pos:start="59:8" pos:end="59:9">-&gt;</operator><name pos:start="59:10" pos:end="59:13">type</name></name> <operator pos:start="59:15" pos:end="59:15">=</operator> <name pos:start="59:17" pos:end="59:20">type</name></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:50"><expr pos:start="63:5" pos:end="63:49"><name pos:start="63:5" pos:end="63:43"><name pos:start="63:5" pos:end="63:9">frame</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:20">side_data</name><index pos:start="63:21" pos:end="63:43">[<expr pos:start="63:22" pos:end="63:42"><name pos:start="63:22" pos:end="63:40"><name pos:start="63:22" pos:end="63:26">frame</name><operator pos:start="63:27" pos:end="63:28">-&gt;</operator><name pos:start="63:29" pos:end="63:40">nb_side_data</name></name><operator pos:start="63:41" pos:end="63:42">++</operator></expr>]</index></name> <operator pos:start="63:45" pos:end="63:45">=</operator> <name pos:start="63:47" pos:end="63:49">ret</name></expr>;</expr_stmt>



    <return pos:start="67:5" pos:end="67:15">return <expr pos:start="67:12" pos:end="67:14"><name pos:start="67:12" pos:end="67:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
