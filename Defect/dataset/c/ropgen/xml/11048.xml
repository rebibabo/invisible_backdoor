<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11048.c" pos:tabs="8"><function pos:start="1:1" pos:end="205:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">qemu_rdma_resolve_host</name><parameter_list pos:start="1:34" pos:end="1:66">(<parameter pos:start="1:35" pos:end="1:51"><decl pos:start="1:35" pos:end="1:51"><type pos:start="1:35" pos:end="1:51"><name pos:start="1:35" pos:end="1:45">RDMAContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:51">rdma</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:65"><decl pos:start="1:54" pos:end="1:65"><type pos:start="1:54" pos:end="1:65"><name pos:start="1:54" pos:end="1:58">Error</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier><modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:65">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="205:1">{<block_content pos:start="5:5" pos:end="203:14">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:19">addrinfo</name></name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:24">res</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:21"><name pos:start="9:10" pos:end="9:17">port_str</name><index pos:start="9:18" pos:end="9:21">[<expr pos:start="9:19" pos:end="9:20"><literal type="number" pos:start="9:19" pos:end="9:20">16</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:34"><type pos:start="11:5" pos:end="11:26"><name pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:24">rdma_cm_event</name></name> <modifier pos:start="11:26" pos:end="11:26">*</modifier></type><name pos:start="11:27" pos:end="11:34">cm_event</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">char</name></type> <name pos:start="13:10" pos:end="13:15"><name pos:start="13:10" pos:end="13:11">ip</name><index pos:start="13:12" pos:end="13:15">[<expr pos:start="13:13" pos:end="13:14"><literal type="number" pos:start="13:13" pos:end="13:14">40</literal></expr>]</index></name> <init pos:start="13:17" pos:end="13:27">= <expr pos:start="13:19" pos:end="13:27"><literal type="string" pos:start="13:19" pos:end="13:27">"unknown"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:10">struct</name> <name pos:start="15:12" pos:end="15:19">addrinfo</name></name> <modifier pos:start="15:21" pos:end="15:21">*</modifier></type><name pos:start="15:22" pos:end="15:22">e</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:54">(<expr pos:start="19:9" pos:end="19:53"><name pos:start="19:9" pos:end="19:18"><name pos:start="19:9" pos:end="19:12">rdma</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:18">host</name></name> <operator pos:start="19:20" pos:end="19:21">==</operator> <name pos:start="19:23" pos:end="19:26">NULL</name> <operator pos:start="19:28" pos:end="19:29">||</operator> <operator pos:start="19:31" pos:end="19:31">!</operator><call pos:start="19:32" pos:end="19:53"><name pos:start="19:32" pos:end="19:37">strcmp</name><argument_list pos:start="19:38" pos:end="19:53">(<argument pos:start="19:39" pos:end="19:48"><expr pos:start="19:39" pos:end="19:48"><name pos:start="19:39" pos:end="19:48"><name pos:start="19:39" pos:end="19:42">rdma</name><operator pos:start="19:43" pos:end="19:44">-&gt;</operator><name pos:start="19:45" pos:end="19:48">host</name></name></expr></argument>, <argument pos:start="19:51" pos:end="19:52"><expr pos:start="19:51" pos:end="19:52"><literal type="string" pos:start="19:51" pos:end="19:52">""</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:56" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:18">

        <expr_stmt pos:start="21:9" pos:end="21:54"><expr pos:start="21:9" pos:end="21:53"><call pos:start="21:9" pos:end="21:53"><name pos:start="21:9" pos:end="21:13">ERROR</name><argument_list pos:start="21:14" pos:end="21:53">(<argument pos:start="21:15" pos:end="21:18"><expr pos:start="21:15" pos:end="21:18"><name pos:start="21:15" pos:end="21:18">errp</name></expr></argument>, <argument pos:start="21:21" pos:end="21:52"><expr pos:start="21:21" pos:end="21:52"><literal type="string" pos:start="21:21" pos:end="21:52">"RDMA hostname has not been set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:27">/* create CM channel */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:48"><expr pos:start="31:5" pos:end="31:47"><name pos:start="31:5" pos:end="31:17"><name pos:start="31:5" pos:end="31:8">rdma</name><operator pos:start="31:9" pos:end="31:10">-&gt;</operator><name pos:start="31:11" pos:end="31:17">channel</name></name> <operator pos:start="31:19" pos:end="31:19">=</operator> <call pos:start="31:21" pos:end="31:47"><name pos:start="31:21" pos:end="31:45">rdma_create_event_channel</name><argument_list pos:start="31:46" pos:end="31:47">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:23">(<expr pos:start="33:9" pos:end="33:22"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:22"><name pos:start="33:10" pos:end="33:13">rdma</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:22">channel</name></name></expr>)</condition> <block pos:start="33:25" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:18">

        <expr_stmt pos:start="35:9" pos:end="35:51"><expr pos:start="35:9" pos:end="35:50"><call pos:start="35:9" pos:end="35:50"><name pos:start="35:9" pos:end="35:13">ERROR</name><argument_list pos:start="35:14" pos:end="35:50">(<argument pos:start="35:15" pos:end="35:18"><expr pos:start="35:15" pos:end="35:18"><name pos:start="35:15" pos:end="35:18">errp</name></expr></argument>, <argument pos:start="35:21" pos:end="35:49"><expr pos:start="35:21" pos:end="35:49"><literal type="string" pos:start="35:21" pos:end="35:49">"could not create CM channel"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:18">return <expr pos:start="37:16" pos:end="37:17"><operator pos:start="37:16" pos:end="37:16">-</operator><literal type="number" pos:start="37:17" pos:end="37:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:22">/* create CM id */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:73"><expr pos:start="45:5" pos:end="45:72"><name pos:start="45:5" pos:end="45:7">ret</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <call pos:start="45:11" pos:end="45:72"><name pos:start="45:11" pos:end="45:24">rdma_create_id</name><argument_list pos:start="45:25" pos:end="45:72">(<argument pos:start="45:26" pos:end="45:38"><expr pos:start="45:26" pos:end="45:38"><name pos:start="45:26" pos:end="45:38"><name pos:start="45:26" pos:end="45:29">rdma</name><operator pos:start="45:30" pos:end="45:31">-&gt;</operator><name pos:start="45:32" pos:end="45:38">channel</name></name></expr></argument>, <argument pos:start="45:41" pos:end="45:52"><expr pos:start="45:41" pos:end="45:52"><operator pos:start="45:41" pos:end="45:41">&amp;</operator><name pos:start="45:42" pos:end="45:52"><name pos:start="45:42" pos:end="45:45">rdma</name><operator pos:start="45:46" pos:end="45:47">-&gt;</operator><name pos:start="45:48" pos:end="45:52">cm_id</name></name></expr></argument>, <argument pos:start="45:55" pos:end="45:58"><expr pos:start="45:55" pos:end="45:58"><name pos:start="45:55" pos:end="45:58">NULL</name></expr></argument>, <argument pos:start="45:61" pos:end="45:71"><expr pos:start="45:61" pos:end="45:71"><name pos:start="45:61" pos:end="45:71">RDMA_PS_TCP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if <condition pos:start="47:8" pos:end="47:12">(<expr pos:start="47:9" pos:end="47:11"><name pos:start="47:9" pos:end="47:11">ret</name></expr>)</condition> <block pos:start="47:14" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:35">

        <expr_stmt pos:start="49:9" pos:end="49:51"><expr pos:start="49:9" pos:end="49:50"><call pos:start="49:9" pos:end="49:50"><name pos:start="49:9" pos:end="49:13">ERROR</name><argument_list pos:start="49:14" pos:end="49:50">(<argument pos:start="49:15" pos:end="49:18"><expr pos:start="49:15" pos:end="49:18"><name pos:start="49:15" pos:end="49:18">errp</name></expr></argument>, <argument pos:start="49:21" pos:end="49:49"><expr pos:start="49:21" pos:end="49:49"><literal type="string" pos:start="49:21" pos:end="49:49">"could not create channel id"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="51:9" pos:end="51:35">goto <name pos:start="51:14" pos:end="51:34">err_resolve_create_id</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:45"><expr pos:start="57:5" pos:end="57:44"><call pos:start="57:5" pos:end="57:44"><name pos:start="57:5" pos:end="57:12">snprintf</name><argument_list pos:start="57:13" pos:end="57:44">(<argument pos:start="57:14" pos:end="57:21"><expr pos:start="57:14" pos:end="57:21"><name pos:start="57:14" pos:end="57:21">port_str</name></expr></argument>, <argument pos:start="57:24" pos:end="57:25"><expr pos:start="57:24" pos:end="57:25"><literal type="number" pos:start="57:24" pos:end="57:25">16</literal></expr></argument>, <argument pos:start="57:28" pos:end="57:31"><expr pos:start="57:28" pos:end="57:31"><literal type="string" pos:start="57:28" pos:end="57:31">"%d"</literal></expr></argument>, <argument pos:start="57:34" pos:end="57:43"><expr pos:start="57:34" pos:end="57:43"><name pos:start="57:34" pos:end="57:43"><name pos:start="57:34" pos:end="57:37">rdma</name><operator pos:start="57:38" pos:end="57:39">-&gt;</operator><name pos:start="57:40" pos:end="57:43">port</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:24"><expr pos:start="59:5" pos:end="59:23"><name pos:start="59:5" pos:end="59:16"><name pos:start="59:5" pos:end="59:12">port_str</name><index pos:start="59:13" pos:end="59:16">[<expr pos:start="59:14" pos:end="59:15"><literal type="number" pos:start="59:14" pos:end="59:15">15</literal></expr>]</index></name> <operator pos:start="59:18" pos:end="59:18">=</operator> <literal type="char" pos:start="59:20" pos:end="59:23">'\0'</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:56"><expr pos:start="63:5" pos:end="63:55"><name pos:start="63:5" pos:end="63:7">ret</name> <operator pos:start="63:9" pos:end="63:9">=</operator> <call pos:start="63:11" pos:end="63:55"><name pos:start="63:11" pos:end="63:21">getaddrinfo</name><argument_list pos:start="63:22" pos:end="63:55">(<argument pos:start="63:23" pos:end="63:32"><expr pos:start="63:23" pos:end="63:32"><name pos:start="63:23" pos:end="63:32"><name pos:start="63:23" pos:end="63:26">rdma</name><operator pos:start="63:27" pos:end="63:28">-&gt;</operator><name pos:start="63:29" pos:end="63:32">host</name></name></expr></argument>, <argument pos:start="63:35" pos:end="63:42"><expr pos:start="63:35" pos:end="63:42"><name pos:start="63:35" pos:end="63:42">port_str</name></expr></argument>, <argument pos:start="63:45" pos:end="63:48"><expr pos:start="63:45" pos:end="63:48"><name pos:start="63:45" pos:end="63:48">NULL</name></expr></argument>, <argument pos:start="63:51" pos:end="63:54"><expr pos:start="63:51" pos:end="63:54"><operator pos:start="63:51" pos:end="63:51">&amp;</operator><name pos:start="63:52" pos:end="63:54">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="71:5"><if pos:start="65:5" pos:end="71:5">if <condition pos:start="65:8" pos:end="65:16">(<expr pos:start="65:9" pos:end="65:15"><name pos:start="65:9" pos:end="65:11">ret</name> <operator pos:start="65:13" pos:end="65:13">&lt;</operator> <literal type="number" pos:start="65:15" pos:end="65:15">0</literal></expr>)</condition> <block pos:start="65:18" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:34">

        <expr_stmt pos:start="67:9" pos:end="67:68"><expr pos:start="67:9" pos:end="67:67"><call pos:start="67:9" pos:end="67:67"><name pos:start="67:9" pos:end="67:13">ERROR</name><argument_list pos:start="67:14" pos:end="67:67">(<argument pos:start="67:15" pos:end="67:18"><expr pos:start="67:15" pos:end="67:18"><name pos:start="67:15" pos:end="67:18">errp</name></expr></argument>, <argument pos:start="67:21" pos:end="67:54"><expr pos:start="67:21" pos:end="67:54"><literal type="string" pos:start="67:21" pos:end="67:54">"could not getaddrinfo address %s"</literal></expr></argument>, <argument pos:start="67:57" pos:end="67:66"><expr pos:start="67:57" pos:end="67:66"><name pos:start="67:57" pos:end="67:66"><name pos:start="67:57" pos:end="67:60">rdma</name><operator pos:start="67:61" pos:end="67:62">-&gt;</operator><name pos:start="67:63" pos:end="67:66">host</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="69:9" pos:end="69:34">goto <name pos:start="69:14" pos:end="69:33">err_resolve_get_addr</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <for pos:start="75:5" pos:end="97:5">for <control pos:start="75:9" pos:end="75:44">(<init pos:start="75:10" pos:end="75:17"><expr pos:start="75:10" pos:end="75:16"><name pos:start="75:10" pos:end="75:10">e</name> <operator pos:start="75:12" pos:end="75:12">=</operator> <name pos:start="75:14" pos:end="75:16">res</name></expr>;</init> <condition pos:start="75:19" pos:end="75:28"><expr pos:start="75:19" pos:end="75:27"><name pos:start="75:19" pos:end="75:19">e</name> <operator pos:start="75:21" pos:end="75:22">!=</operator> <name pos:start="75:24" pos:end="75:27">NULL</name></expr>;</condition> <incr pos:start="75:30" pos:end="75:43"><expr pos:start="75:30" pos:end="75:43"><name pos:start="75:30" pos:end="75:30">e</name> <operator pos:start="75:32" pos:end="75:32">=</operator> <name pos:start="75:34" pos:end="75:43"><name pos:start="75:34" pos:end="75:34">e</name><operator pos:start="75:35" pos:end="75:36">-&gt;</operator><name pos:start="75:37" pos:end="75:43">ai_next</name></name></expr></incr>)</control> <block pos:start="75:46" pos:end="97:5">{<block_content pos:start="77:9" pos:end="95:9">

        <expr_stmt pos:start="77:9" pos:end="79:75"><expr pos:start="77:9" pos:end="79:74"><call pos:start="77:9" pos:end="79:74"><name pos:start="77:9" pos:end="77:17">inet_ntop</name><argument_list pos:start="77:18" pos:end="79:74">(<argument pos:start="77:19" pos:end="77:30"><expr pos:start="77:19" pos:end="77:30"><name pos:start="77:19" pos:end="77:30"><name pos:start="77:19" pos:end="77:19">e</name><operator pos:start="77:20" pos:end="77:21">-&gt;</operator><name pos:start="77:22" pos:end="77:30">ai_family</name></name></expr></argument>,

            <argument pos:start="79:13" pos:end="79:58"><expr pos:start="79:13" pos:end="79:58"><operator pos:start="79:13" pos:end="79:13">&amp;</operator><operator pos:start="79:14" pos:end="79:14">(</operator><operator pos:start="79:15" pos:end="79:15">(</operator>struct <name pos:start="79:23" pos:end="79:33">sockaddr_in</name> <operator pos:start="79:35" pos:end="79:35">*</operator><operator pos:start="79:36" pos:end="79:36">)</operator> <name pos:start="79:38" pos:end="79:47"><name pos:start="79:38" pos:end="79:38">e</name><operator pos:start="79:39" pos:end="79:40">-&gt;</operator><name pos:start="79:41" pos:end="79:47">ai_addr</name></name><operator pos:start="79:48" pos:end="79:48">)</operator><operator pos:start="79:49" pos:end="79:50">-&gt;</operator><name pos:start="79:51" pos:end="79:58">sin_addr</name></expr></argument>, <argument pos:start="79:61" pos:end="79:62"><expr pos:start="79:61" pos:end="79:62"><name pos:start="79:61" pos:end="79:62">ip</name></expr></argument>, <argument pos:start="79:65" pos:end="79:73"><expr pos:start="79:65" pos:end="79:73"><sizeof pos:start="79:65" pos:end="79:73">sizeof <name pos:start="79:72" pos:end="79:73">ip</name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:53"><expr pos:start="81:9" pos:end="81:52"><call pos:start="81:9" pos:end="81:52"><name pos:start="81:9" pos:end="81:15">DPRINTF</name><argument_list pos:start="81:16" pos:end="81:52">(<argument pos:start="81:17" pos:end="81:35"><expr pos:start="81:17" pos:end="81:35"><literal type="string" pos:start="81:17" pos:end="81:35">"Trying %s =&gt; %s\n"</literal></expr></argument>, <argument pos:start="81:38" pos:end="81:47"><expr pos:start="81:38" pos:end="81:47"><name pos:start="81:38" pos:end="81:47"><name pos:start="81:38" pos:end="81:41">rdma</name><operator pos:start="81:42" pos:end="81:43">-&gt;</operator><name pos:start="81:44" pos:end="81:47">host</name></name></expr></argument>, <argument pos:start="81:50" pos:end="81:51"><expr pos:start="81:50" pos:end="81:51"><name pos:start="81:50" pos:end="81:51">ip</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="85:9" pos:end="85:39">/* resolve the first address */</comment>

        <expr_stmt pos:start="87:9" pos:end="89:41"><expr pos:start="87:9" pos:end="89:40"><name pos:start="87:9" pos:end="87:11">ret</name> <operator pos:start="87:13" pos:end="87:13">=</operator> <call pos:start="87:15" pos:end="89:40"><name pos:start="87:15" pos:end="87:31">rdma_resolve_addr</name><argument_list pos:start="87:32" pos:end="89:40">(<argument pos:start="87:33" pos:end="87:43"><expr pos:start="87:33" pos:end="87:43"><name pos:start="87:33" pos:end="87:43"><name pos:start="87:33" pos:end="87:36">rdma</name><operator pos:start="87:37" pos:end="87:38">-&gt;</operator><name pos:start="87:39" pos:end="87:43">cm_id</name></name></expr></argument>, <argument pos:start="87:46" pos:end="87:49"><expr pos:start="87:46" pos:end="87:49"><name pos:start="87:46" pos:end="87:49">NULL</name></expr></argument>, <argument pos:start="87:52" pos:end="87:61"><expr pos:start="87:52" pos:end="87:61"><name pos:start="87:52" pos:end="87:61"><name pos:start="87:52" pos:end="87:52">e</name><operator pos:start="87:53" pos:end="87:54">-&gt;</operator><name pos:start="87:55" pos:end="87:61">ai_addr</name></name></expr></argument>,

                <argument pos:start="89:17" pos:end="89:39"><expr pos:start="89:17" pos:end="89:39"><name pos:start="89:17" pos:end="89:39">RDMA_RESOLVE_TIMEOUT_MS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="91:9" pos:end="95:9"><if pos:start="91:9" pos:end="95:9">if <condition pos:start="91:12" pos:end="91:17">(<expr pos:start="91:13" pos:end="91:16"><operator pos:start="91:13" pos:end="91:13">!</operator><name pos:start="91:14" pos:end="91:16">ret</name></expr>)</condition> <block pos:start="91:19" pos:end="95:9">{<block_content pos:start="93:13" pos:end="93:23">

            <goto pos:start="93:13" pos:end="93:23">goto <name pos:start="93:18" pos:end="93:22">route</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="101:5" pos:end="101:60"><expr pos:start="101:5" pos:end="101:59"><call pos:start="101:5" pos:end="101:59"><name pos:start="101:5" pos:end="101:9">ERROR</name><argument_list pos:start="101:10" pos:end="101:59">(<argument pos:start="101:11" pos:end="101:14"><expr pos:start="101:11" pos:end="101:14"><name pos:start="101:11" pos:end="101:14">errp</name></expr></argument>, <argument pos:start="101:17" pos:end="101:46"><expr pos:start="101:17" pos:end="101:46"><literal type="string" pos:start="101:17" pos:end="101:46">"could not resolve address %s"</literal></expr></argument>, <argument pos:start="101:49" pos:end="101:58"><expr pos:start="101:49" pos:end="101:58"><name pos:start="101:49" pos:end="101:58"><name pos:start="101:49" pos:end="101:52">rdma</name><operator pos:start="101:53" pos:end="101:54">-&gt;</operator><name pos:start="101:55" pos:end="101:58">host</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <goto pos:start="103:5" pos:end="103:30">goto <name pos:start="103:10" pos:end="103:29">err_resolve_get_addr</name>;</goto>



<label pos:start="107:1" pos:end="107:6"><name pos:start="107:1" pos:end="107:5">route</name>:</label>

    <expr_stmt pos:start="109:5" pos:end="109:59"><expr pos:start="109:5" pos:end="109:58"><call pos:start="109:5" pos:end="109:58"><name pos:start="109:5" pos:end="109:22">qemu_rdma_dump_gid</name><argument_list pos:start="109:23" pos:end="109:58">(<argument pos:start="109:24" pos:end="109:44"><expr pos:start="109:24" pos:end="109:44"><literal type="string" pos:start="109:24" pos:end="109:44">"source_resolve_addr"</literal></expr></argument>, <argument pos:start="109:47" pos:end="109:57"><expr pos:start="109:47" pos:end="109:57"><name pos:start="109:47" pos:end="109:57"><name pos:start="109:47" pos:end="109:50">rdma</name><operator pos:start="109:51" pos:end="109:52">-&gt;</operator><name pos:start="109:53" pos:end="109:57">cm_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="113:5" pos:end="113:54"><expr pos:start="113:5" pos:end="113:53"><name pos:start="113:5" pos:end="113:7">ret</name> <operator pos:start="113:9" pos:end="113:9">=</operator> <call pos:start="113:11" pos:end="113:53"><name pos:start="113:11" pos:end="113:27">rdma_get_cm_event</name><argument_list pos:start="113:28" pos:end="113:53">(<argument pos:start="113:29" pos:end="113:41"><expr pos:start="113:29" pos:end="113:41"><name pos:start="113:29" pos:end="113:41"><name pos:start="113:29" pos:end="113:32">rdma</name><operator pos:start="113:33" pos:end="113:34">-&gt;</operator><name pos:start="113:35" pos:end="113:41">channel</name></name></expr></argument>, <argument pos:start="113:44" pos:end="113:52"><expr pos:start="113:44" pos:end="113:52"><operator pos:start="113:44" pos:end="113:44">&amp;</operator><name pos:start="113:45" pos:end="113:52">cm_event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="115:5" pos:end="121:5"><if pos:start="115:5" pos:end="121:5">if <condition pos:start="115:8" pos:end="115:12">(<expr pos:start="115:9" pos:end="115:11"><name pos:start="115:9" pos:end="115:11">ret</name></expr>)</condition> <block pos:start="115:14" pos:end="121:5">{<block_content pos:start="117:9" pos:end="119:34">

        <expr_stmt pos:start="117:9" pos:end="117:61"><expr pos:start="117:9" pos:end="117:60"><call pos:start="117:9" pos:end="117:60"><name pos:start="117:9" pos:end="117:13">ERROR</name><argument_list pos:start="117:14" pos:end="117:60">(<argument pos:start="117:15" pos:end="117:18"><expr pos:start="117:15" pos:end="117:18"><name pos:start="117:15" pos:end="117:18">errp</name></expr></argument>, <argument pos:start="117:21" pos:end="117:59"><expr pos:start="117:21" pos:end="117:59"><literal type="string" pos:start="117:21" pos:end="117:59">"could not perform event_addr_resolved"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="119:9" pos:end="119:34">goto <name pos:start="119:14" pos:end="119:33">err_resolve_get_addr</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="125:5" pos:end="135:5"><if pos:start="125:5" pos:end="135:5">if <condition pos:start="125:8" pos:end="125:55">(<expr pos:start="125:9" pos:end="125:54"><name pos:start="125:9" pos:end="125:23"><name pos:start="125:9" pos:end="125:16">cm_event</name><operator pos:start="125:17" pos:end="125:18">-&gt;</operator><name pos:start="125:19" pos:end="125:23">event</name></name> <operator pos:start="125:25" pos:end="125:26">!=</operator> <name pos:start="125:28" pos:end="125:54">RDMA_CM_EVENT_ADDR_RESOLVED</name></expr>)</condition> <block pos:start="125:57" pos:end="135:5">{<block_content pos:start="127:9" pos:end="133:34">

        <expr_stmt pos:start="127:9" pos:end="129:49"><expr pos:start="127:9" pos:end="129:48"><call pos:start="127:9" pos:end="129:48"><name pos:start="127:9" pos:end="127:13">ERROR</name><argument_list pos:start="127:14" pos:end="129:48">(<argument pos:start="127:15" pos:end="127:18"><expr pos:start="127:15" pos:end="127:18"><name pos:start="127:15" pos:end="127:18">errp</name></expr></argument>, <argument pos:start="127:21" pos:end="127:64"><expr pos:start="127:21" pos:end="127:64"><literal type="string" pos:start="127:21" pos:end="127:64">"result not equal to event_addr_resolved %s"</literal></expr></argument>,

                <argument pos:start="129:17" pos:end="129:47"><expr pos:start="129:17" pos:end="129:47"><call pos:start="129:17" pos:end="129:47"><name pos:start="129:17" pos:end="129:30">rdma_event_str</name><argument_list pos:start="129:31" pos:end="129:47">(<argument pos:start="129:32" pos:end="129:46"><expr pos:start="129:32" pos:end="129:46"><name pos:start="129:32" pos:end="129:46"><name pos:start="129:32" pos:end="129:39">cm_event</name><operator pos:start="129:40" pos:end="129:41">-&gt;</operator><name pos:start="129:42" pos:end="129:46">event</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:36"><expr pos:start="131:9" pos:end="131:35"><call pos:start="131:9" pos:end="131:35"><name pos:start="131:9" pos:end="131:14">perror</name><argument_list pos:start="131:15" pos:end="131:35">(<argument pos:start="131:16" pos:end="131:34"><expr pos:start="131:16" pos:end="131:34"><literal type="string" pos:start="131:16" pos:end="131:34">"rdma_resolve_addr"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="133:9" pos:end="133:34">goto <name pos:start="133:14" pos:end="133:33">err_resolve_get_addr</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:32"><expr pos:start="137:5" pos:end="137:31"><call pos:start="137:5" pos:end="137:31"><name pos:start="137:5" pos:end="137:21">rdma_ack_cm_event</name><argument_list pos:start="137:22" pos:end="137:31">(<argument pos:start="137:23" pos:end="137:30"><expr pos:start="137:23" pos:end="137:30"><name pos:start="137:23" pos:end="137:30">cm_event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="141:5" pos:end="141:23">/* resolve route */</comment>

    <expr_stmt pos:start="143:5" pos:end="143:67"><expr pos:start="143:5" pos:end="143:66"><name pos:start="143:5" pos:end="143:7">ret</name> <operator pos:start="143:9" pos:end="143:9">=</operator> <call pos:start="143:11" pos:end="143:66"><name pos:start="143:11" pos:end="143:28">rdma_resolve_route</name><argument_list pos:start="143:29" pos:end="143:66">(<argument pos:start="143:30" pos:end="143:40"><expr pos:start="143:30" pos:end="143:40"><name pos:start="143:30" pos:end="143:40"><name pos:start="143:30" pos:end="143:33">rdma</name><operator pos:start="143:34" pos:end="143:35">-&gt;</operator><name pos:start="143:36" pos:end="143:40">cm_id</name></name></expr></argument>, <argument pos:start="143:43" pos:end="143:65"><expr pos:start="143:43" pos:end="143:65"><name pos:start="143:43" pos:end="143:65">RDMA_RESOLVE_TIMEOUT_MS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="145:5" pos:end="151:5"><if pos:start="145:5" pos:end="151:5">if <condition pos:start="145:8" pos:end="145:12">(<expr pos:start="145:9" pos:end="145:11"><name pos:start="145:9" pos:end="145:11">ret</name></expr>)</condition> <block pos:start="145:14" pos:end="151:5">{<block_content pos:start="147:9" pos:end="149:34">

        <expr_stmt pos:start="147:9" pos:end="147:52"><expr pos:start="147:9" pos:end="147:51"><call pos:start="147:9" pos:end="147:51"><name pos:start="147:9" pos:end="147:13">ERROR</name><argument_list pos:start="147:14" pos:end="147:51">(<argument pos:start="147:15" pos:end="147:18"><expr pos:start="147:15" pos:end="147:18"><name pos:start="147:15" pos:end="147:18">errp</name></expr></argument>, <argument pos:start="147:21" pos:end="147:50"><expr pos:start="147:21" pos:end="147:50"><literal type="string" pos:start="147:21" pos:end="147:50">"could not resolve rdma route"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="149:9" pos:end="149:34">goto <name pos:start="149:14" pos:end="149:33">err_resolve_get_addr</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="155:5" pos:end="155:54"><expr pos:start="155:5" pos:end="155:53"><name pos:start="155:5" pos:end="155:7">ret</name> <operator pos:start="155:9" pos:end="155:9">=</operator> <call pos:start="155:11" pos:end="155:53"><name pos:start="155:11" pos:end="155:27">rdma_get_cm_event</name><argument_list pos:start="155:28" pos:end="155:53">(<argument pos:start="155:29" pos:end="155:41"><expr pos:start="155:29" pos:end="155:41"><name pos:start="155:29" pos:end="155:41"><name pos:start="155:29" pos:end="155:32">rdma</name><operator pos:start="155:33" pos:end="155:34">-&gt;</operator><name pos:start="155:35" pos:end="155:41">channel</name></name></expr></argument>, <argument pos:start="155:44" pos:end="155:52"><expr pos:start="155:44" pos:end="155:52"><operator pos:start="155:44" pos:end="155:44">&amp;</operator><name pos:start="155:45" pos:end="155:52">cm_event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="157:5" pos:end="163:5"><if pos:start="157:5" pos:end="163:5">if <condition pos:start="157:8" pos:end="157:12">(<expr pos:start="157:9" pos:end="157:11"><name pos:start="157:9" pos:end="157:11">ret</name></expr>)</condition> <block pos:start="157:14" pos:end="163:5">{<block_content pos:start="159:9" pos:end="161:34">

        <expr_stmt pos:start="159:9" pos:end="159:62"><expr pos:start="159:9" pos:end="159:61"><call pos:start="159:9" pos:end="159:61"><name pos:start="159:9" pos:end="159:13">ERROR</name><argument_list pos:start="159:14" pos:end="159:61">(<argument pos:start="159:15" pos:end="159:18"><expr pos:start="159:15" pos:end="159:18"><name pos:start="159:15" pos:end="159:18">errp</name></expr></argument>, <argument pos:start="159:21" pos:end="159:60"><expr pos:start="159:21" pos:end="159:60"><literal type="string" pos:start="159:21" pos:end="159:60">"could not perform event_route_resolved"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="161:9" pos:end="161:34">goto <name pos:start="161:14" pos:end="161:33">err_resolve_get_addr</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="165:5" pos:end="175:5"><if pos:start="165:5" pos:end="175:5">if <condition pos:start="165:8" pos:end="165:56">(<expr pos:start="165:9" pos:end="165:55"><name pos:start="165:9" pos:end="165:23"><name pos:start="165:9" pos:end="165:16">cm_event</name><operator pos:start="165:17" pos:end="165:18">-&gt;</operator><name pos:start="165:19" pos:end="165:23">event</name></name> <operator pos:start="165:25" pos:end="165:26">!=</operator> <name pos:start="165:28" pos:end="165:55">RDMA_CM_EVENT_ROUTE_RESOLVED</name></expr>)</condition> <block pos:start="165:58" pos:end="175:5">{<block_content pos:start="167:9" pos:end="173:34">

        <expr_stmt pos:start="167:9" pos:end="169:57"><expr pos:start="167:9" pos:end="169:56"><call pos:start="167:9" pos:end="169:56"><name pos:start="167:9" pos:end="167:13">ERROR</name><argument_list pos:start="167:14" pos:end="169:56">(<argument pos:start="167:15" pos:end="167:18"><expr pos:start="167:15" pos:end="167:18"><name pos:start="167:15" pos:end="167:18">errp</name></expr></argument>, <argument pos:start="167:21" pos:end="167:66"><expr pos:start="167:21" pos:end="167:66"><literal type="string" pos:start="167:21" pos:end="167:66">"result not equal to event_route_resolved: %s"</literal></expr></argument>,

                        <argument pos:start="169:25" pos:end="169:55"><expr pos:start="169:25" pos:end="169:55"><call pos:start="169:25" pos:end="169:55"><name pos:start="169:25" pos:end="169:38">rdma_event_str</name><argument_list pos:start="169:39" pos:end="169:55">(<argument pos:start="169:40" pos:end="169:54"><expr pos:start="169:40" pos:end="169:54"><name pos:start="169:40" pos:end="169:54"><name pos:start="169:40" pos:end="169:47">cm_event</name><operator pos:start="169:48" pos:end="169:49">-&gt;</operator><name pos:start="169:50" pos:end="169:54">event</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:36"><expr pos:start="171:9" pos:end="171:35"><call pos:start="171:9" pos:end="171:35"><name pos:start="171:9" pos:end="171:25">rdma_ack_cm_event</name><argument_list pos:start="171:26" pos:end="171:35">(<argument pos:start="171:27" pos:end="171:34"><expr pos:start="171:27" pos:end="171:34"><name pos:start="171:27" pos:end="171:34">cm_event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="173:9" pos:end="173:34">goto <name pos:start="173:14" pos:end="173:33">err_resolve_get_addr</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="177:5" pos:end="177:32"><expr pos:start="177:5" pos:end="177:31"><call pos:start="177:5" pos:end="177:31"><name pos:start="177:5" pos:end="177:21">rdma_ack_cm_event</name><argument_list pos:start="177:22" pos:end="177:31">(<argument pos:start="177:23" pos:end="177:30"><expr pos:start="177:23" pos:end="177:30"><name pos:start="177:23" pos:end="177:30">cm_event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="179:5" pos:end="179:37"><expr pos:start="179:5" pos:end="179:36"><name pos:start="179:5" pos:end="179:15"><name pos:start="179:5" pos:end="179:8">rdma</name><operator pos:start="179:9" pos:end="179:10">-&gt;</operator><name pos:start="179:11" pos:end="179:15">verbs</name></name> <operator pos:start="179:17" pos:end="179:17">=</operator> <name pos:start="179:19" pos:end="179:36"><name pos:start="179:19" pos:end="179:22">rdma</name><operator pos:start="179:23" pos:end="179:24">-&gt;</operator><name pos:start="179:25" pos:end="179:29">cm_id</name><operator pos:start="179:30" pos:end="179:31">-&gt;</operator><name pos:start="179:32" pos:end="179:36">verbs</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="181:5" pos:end="181:65"><expr pos:start="181:5" pos:end="181:64"><call pos:start="181:5" pos:end="181:64"><name pos:start="181:5" pos:end="181:21">qemu_rdma_dump_id</name><argument_list pos:start="181:22" pos:end="181:64">(<argument pos:start="181:23" pos:end="181:43"><expr pos:start="181:23" pos:end="181:43"><literal type="string" pos:start="181:23" pos:end="181:43">"source_resolve_host"</literal></expr></argument>, <argument pos:start="181:46" pos:end="181:63"><expr pos:start="181:46" pos:end="181:63"><name pos:start="181:46" pos:end="181:63"><name pos:start="181:46" pos:end="181:49">rdma</name><operator pos:start="181:50" pos:end="181:51">-&gt;</operator><name pos:start="181:52" pos:end="181:56">cm_id</name><operator pos:start="181:57" pos:end="181:58">-&gt;</operator><name pos:start="181:59" pos:end="181:63">verbs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="183:5" pos:end="183:59"><expr pos:start="183:5" pos:end="183:58"><call pos:start="183:5" pos:end="183:58"><name pos:start="183:5" pos:end="183:22">qemu_rdma_dump_gid</name><argument_list pos:start="183:23" pos:end="183:58">(<argument pos:start="183:24" pos:end="183:44"><expr pos:start="183:24" pos:end="183:44"><literal type="string" pos:start="183:24" pos:end="183:44">"source_resolve_host"</literal></expr></argument>, <argument pos:start="183:47" pos:end="183:57"><expr pos:start="183:47" pos:end="183:57"><name pos:start="183:47" pos:end="183:57"><name pos:start="183:47" pos:end="183:50">rdma</name><operator pos:start="183:51" pos:end="183:52">-&gt;</operator><name pos:start="183:53" pos:end="183:57">cm_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="185:5" pos:end="185:13">return <expr pos:start="185:12" pos:end="185:12"><literal type="number" pos:start="185:12" pos:end="185:12">0</literal></expr>;</return>



<label pos:start="189:1" pos:end="189:21"><name pos:start="189:1" pos:end="189:20">err_resolve_get_addr</name>:</label>

    <expr_stmt pos:start="191:5" pos:end="191:33"><expr pos:start="191:5" pos:end="191:32"><call pos:start="191:5" pos:end="191:32"><name pos:start="191:5" pos:end="191:19">rdma_destroy_id</name><argument_list pos:start="191:20" pos:end="191:32">(<argument pos:start="191:21" pos:end="191:31"><expr pos:start="191:21" pos:end="191:31"><name pos:start="191:21" pos:end="191:31"><name pos:start="191:21" pos:end="191:24">rdma</name><operator pos:start="191:25" pos:end="191:26">-&gt;</operator><name pos:start="191:27" pos:end="191:31">cm_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="193:23"><expr pos:start="193:5" pos:end="193:22"><name pos:start="193:5" pos:end="193:15"><name pos:start="193:5" pos:end="193:8">rdma</name><operator pos:start="193:9" pos:end="193:10">-&gt;</operator><name pos:start="193:11" pos:end="193:15">cm_id</name></name> <operator pos:start="193:17" pos:end="193:17">=</operator> <name pos:start="193:19" pos:end="193:22">NULL</name></expr>;</expr_stmt>

<label pos:start="195:1" pos:end="195:22"><name pos:start="195:1" pos:end="195:21">err_resolve_create_id</name>:</label>

    <expr_stmt pos:start="197:5" pos:end="197:46"><expr pos:start="197:5" pos:end="197:45"><call pos:start="197:5" pos:end="197:45"><name pos:start="197:5" pos:end="197:30">rdma_destroy_event_channel</name><argument_list pos:start="197:31" pos:end="197:45">(<argument pos:start="197:32" pos:end="197:44"><expr pos:start="197:32" pos:end="197:44"><name pos:start="197:32" pos:end="197:44"><name pos:start="197:32" pos:end="197:35">rdma</name><operator pos:start="197:36" pos:end="197:37">-&gt;</operator><name pos:start="197:38" pos:end="197:44">channel</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:25"><expr pos:start="199:5" pos:end="199:24"><name pos:start="199:5" pos:end="199:17"><name pos:start="199:5" pos:end="199:8">rdma</name><operator pos:start="199:9" pos:end="199:10">-&gt;</operator><name pos:start="199:11" pos:end="199:17">channel</name></name> <operator pos:start="199:19" pos:end="199:19">=</operator> <name pos:start="199:21" pos:end="199:24">NULL</name></expr>;</expr_stmt>



    <return pos:start="203:5" pos:end="203:14">return <expr pos:start="203:12" pos:end="203:13"><operator pos:start="203:12" pos:end="203:12">-</operator><literal type="number" pos:start="203:13" pos:end="203:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
