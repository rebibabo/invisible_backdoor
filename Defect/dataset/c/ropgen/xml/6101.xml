<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6101.c" pos:tabs="8"><function pos:start="1:1" pos:end="437:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">do_audio_out</name><parameter_list pos:start="1:25" pos:end="7:54">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:43"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:44"><decl pos:start="3:26" pos:end="3:44"><type pos:start="3:26" pos:end="3:44"><name pos:start="3:26" pos:end="3:39">AVOutputStream</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:44">ost</name></decl></parameter>,

                         <parameter pos:start="5:26" pos:end="5:43"><decl pos:start="5:26" pos:end="5:43"><type pos:start="5:26" pos:end="5:43"><name pos:start="5:26" pos:end="5:38">AVInputStream</name> <modifier pos:start="5:40" pos:end="5:40">*</modifier></type><name pos:start="5:41" pos:end="5:43">ist</name></decl></parameter>,

                         <parameter pos:start="7:26" pos:end="7:43"><decl pos:start="7:26" pos:end="7:43"><type pos:start="7:26" pos:end="7:43"><name pos:start="7:26" pos:end="7:33">unsigned</name> <name pos:start="7:35" pos:end="7:38">char</name> <modifier pos:start="7:40" pos:end="7:40">*</modifier></type><name pos:start="7:41" pos:end="7:43">buf</name></decl></parameter>, <parameter pos:start="7:46" pos:end="7:53"><decl pos:start="7:46" pos:end="7:53"><type pos:start="7:46" pos:end="7:53"><name pos:start="7:46" pos:end="7:48">int</name></type> <name pos:start="7:50" pos:end="7:53">size</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="437:1">{<block_content pos:start="11:5" pos:end="435:5">

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:19">buftmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:43"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:26">audio_out_size</name></decl>, <decl pos:start="13:29" pos:end="13:42"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:29" pos:end="13:42">audio_buf_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:37"><decl pos:start="15:5" pos:end="15:36"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int64_t</name></type> <name pos:start="15:13" pos:end="15:30">allocated_for_size</name><init pos:start="15:31" pos:end="15:36">= <expr pos:start="15:33" pos:end="15:36"><name pos:start="15:33" pos:end="15:36">size</name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="19:5" pos:end="19:35"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:16">size_out</name></decl>, <decl pos:start="19:19" pos:end="19:29"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:19" pos:end="19:29">frame_bytes</name></decl>, <decl pos:start="19:32" pos:end="19:34"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:32" pos:end="19:34">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:40"><decl pos:start="21:5" pos:end="21:39"><type pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:18">AVCodecContext</name> <modifier pos:start="21:20" pos:end="21:20">*</modifier></type><name pos:start="21:21" pos:end="21:23">enc</name><init pos:start="21:24" pos:end="21:39">= <expr pos:start="21:26" pos:end="21:39"><name pos:start="21:26" pos:end="21:39"><name pos:start="21:26" pos:end="21:28">ost</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:32">st</name><operator pos:start="21:33" pos:end="21:34">-&gt;</operator><name pos:start="21:35" pos:end="21:39">codec</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:40"><decl pos:start="23:5" pos:end="23:39"><type pos:start="23:5" pos:end="23:20"><name pos:start="23:5" pos:end="23:18">AVCodecContext</name> <modifier pos:start="23:20" pos:end="23:20">*</modifier></type><name pos:start="23:21" pos:end="23:23">dec</name><init pos:start="23:24" pos:end="23:39">= <expr pos:start="23:26" pos:end="23:39"><name pos:start="23:26" pos:end="23:39"><name pos:start="23:26" pos:end="23:28">ist</name><operator pos:start="23:29" pos:end="23:30">-&gt;</operator><name pos:start="23:31" pos:end="23:32">st</name><operator pos:start="23:33" pos:end="23:34">-&gt;</operator><name pos:start="23:35" pos:end="23:39">codec</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:64"><decl pos:start="25:5" pos:end="25:63"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:13">osize</name><init pos:start="25:14" pos:end="25:63">= <expr pos:start="25:16" pos:end="25:63"><call pos:start="25:16" pos:end="25:61"><name pos:start="25:16" pos:end="25:44">av_get_bits_per_sample_format</name><argument_list pos:start="25:45" pos:end="25:61">(<argument pos:start="25:46" pos:end="25:60"><expr pos:start="25:46" pos:end="25:60"><name pos:start="25:46" pos:end="25:60"><name pos:start="25:46" pos:end="25:48">enc</name><operator pos:start="25:49" pos:end="25:50">-&gt;</operator><name pos:start="25:51" pos:end="25:60">sample_fmt</name></name></expr></argument>)</argument_list></call><operator pos:start="25:62" pos:end="25:62">/</operator><literal type="number" pos:start="25:63" pos:end="25:63">8</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:64"><decl pos:start="27:5" pos:end="27:63"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:13">isize</name><init pos:start="27:14" pos:end="27:63">= <expr pos:start="27:16" pos:end="27:63"><call pos:start="27:16" pos:end="27:61"><name pos:start="27:16" pos:end="27:44">av_get_bits_per_sample_format</name><argument_list pos:start="27:45" pos:end="27:61">(<argument pos:start="27:46" pos:end="27:60"><expr pos:start="27:46" pos:end="27:60"><name pos:start="27:46" pos:end="27:60"><name pos:start="27:46" pos:end="27:48">dec</name><operator pos:start="27:49" pos:end="27:50">-&gt;</operator><name pos:start="27:51" pos:end="27:60">sample_fmt</name></name></expr></argument>)</argument_list></call><operator pos:start="27:62" pos:end="27:62">/</operator><literal type="number" pos:start="27:63" pos:end="27:63">8</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:65"><decl pos:start="29:5" pos:end="29:64"><type pos:start="29:5" pos:end="29:13"><specifier pos:start="29:5" pos:end="29:9">const</specifier> <name pos:start="29:11" pos:end="29:13">int</name></type> <name pos:start="29:15" pos:end="29:23">coded_bps</name> <init pos:start="29:25" pos:end="29:64">= <expr pos:start="29:27" pos:end="29:64"><call pos:start="29:27" pos:end="29:64"><name pos:start="29:27" pos:end="29:48">av_get_bits_per_sample</name><argument_list pos:start="29:49" pos:end="29:64">(<argument pos:start="29:50" pos:end="29:63"><expr pos:start="29:50" pos:end="29:63"><name pos:start="29:50" pos:end="29:63"><name pos:start="29:50" pos:end="29:52">enc</name><operator pos:start="29:53" pos:end="29:54">-&gt;</operator><name pos:start="29:55" pos:end="29:59">codec</name><operator pos:start="29:60" pos:end="29:61">-&gt;</operator><name pos:start="29:62" pos:end="29:63">id</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



<label pos:start="33:1" pos:end="33:13"><name pos:start="33:1" pos:end="33:12">need_realloc</name>:</label>

    <expr_stmt pos:start="35:5" pos:end="35:91"><expr pos:start="35:5" pos:end="35:90"><name pos:start="35:5" pos:end="35:18">audio_buf_size</name><operator pos:start="35:19" pos:end="35:19">=</operator> <operator pos:start="35:21" pos:end="35:21">(</operator><name pos:start="35:22" pos:end="35:39">allocated_for_size</name> <operator pos:start="35:41" pos:end="35:41">+</operator> <name pos:start="35:43" pos:end="35:47">isize</name><operator pos:start="35:48" pos:end="35:48">*</operator><name pos:start="35:49" pos:end="35:61"><name pos:start="35:49" pos:end="35:51">dec</name><operator pos:start="35:52" pos:end="35:53">-&gt;</operator><name pos:start="35:54" pos:end="35:61">channels</name></name> <operator pos:start="35:63" pos:end="35:63">-</operator> <literal type="number" pos:start="35:65" pos:end="35:65">1</literal><operator pos:start="35:66" pos:end="35:66">)</operator> <operator pos:start="35:68" pos:end="35:68">/</operator> <operator pos:start="35:70" pos:end="35:70">(</operator><name pos:start="35:71" pos:end="35:75">isize</name><operator pos:start="35:76" pos:end="35:76">*</operator><name pos:start="35:77" pos:end="35:89"><name pos:start="35:77" pos:end="35:79">dec</name><operator pos:start="35:80" pos:end="35:81">-&gt;</operator><name pos:start="35:82" pos:end="35:89">channels</name></name><operator pos:start="35:90" pos:end="35:90">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:92"><expr pos:start="37:5" pos:end="37:91"><name pos:start="37:5" pos:end="37:18">audio_buf_size</name><operator pos:start="37:19" pos:end="37:19">=</operator> <operator pos:start="37:21" pos:end="37:21">(</operator><name pos:start="37:22" pos:end="37:35">audio_buf_size</name><operator pos:start="37:36" pos:end="37:36">*</operator><name pos:start="37:37" pos:end="37:52"><name pos:start="37:37" pos:end="37:39">enc</name><operator pos:start="37:40" pos:end="37:41">-&gt;</operator><name pos:start="37:42" pos:end="37:52">sample_rate</name></name> <operator pos:start="37:54" pos:end="37:54">+</operator> <name pos:start="37:56" pos:end="37:71"><name pos:start="37:56" pos:end="37:58">dec</name><operator pos:start="37:59" pos:end="37:60">-&gt;</operator><name pos:start="37:61" pos:end="37:71">sample_rate</name></name><operator pos:start="37:72" pos:end="37:72">)</operator> <operator pos:start="37:74" pos:end="37:74">/</operator> <name pos:start="37:76" pos:end="37:91"><name pos:start="37:76" pos:end="37:78">dec</name><operator pos:start="37:79" pos:end="37:80">-&gt;</operator><name pos:start="37:81" pos:end="37:91">sample_rate</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:45"><expr pos:start="39:5" pos:end="39:44"><name pos:start="39:5" pos:end="39:18">audio_buf_size</name><operator pos:start="39:19" pos:end="39:19">=</operator> <name pos:start="39:21" pos:end="39:34">audio_buf_size</name><operator pos:start="39:35" pos:end="39:35">*</operator><literal type="number" pos:start="39:36" pos:end="39:38">2</literal> <operator pos:start="39:38" pos:end="39:38">+</operator> <literal type="number" pos:start="39:40" pos:end="39:44">10000</literal></expr>;</expr_stmt> <comment type="line" pos:start="39:47" pos:end="39:96">//safety factors for the deprecated resampling API</comment>

    <expr_stmt pos:start="41:5" pos:end="41:59"><expr pos:start="41:5" pos:end="41:58"><name pos:start="41:5" pos:end="41:18">audio_buf_size</name><operator pos:start="41:19" pos:end="41:19">=</operator> <call pos:start="41:21" pos:end="41:58"><name pos:start="41:21" pos:end="41:25">FFMAX</name><argument_list pos:start="41:26" pos:end="41:58">(<argument pos:start="41:27" pos:end="41:40"><expr pos:start="41:27" pos:end="41:40"><name pos:start="41:27" pos:end="41:40">audio_buf_size</name></expr></argument>, <argument pos:start="41:43" pos:end="41:57"><expr pos:start="41:43" pos:end="41:57"><name pos:start="41:43" pos:end="41:57"><name pos:start="41:43" pos:end="41:45">enc</name><operator pos:start="41:46" pos:end="41:47">-&gt;</operator><name pos:start="41:48" pos:end="41:57">frame_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:41"><expr pos:start="43:5" pos:end="43:40"><name pos:start="43:5" pos:end="43:18">audio_buf_size</name><operator pos:start="43:19" pos:end="43:20">*=</operator> <name pos:start="43:22" pos:end="43:26">osize</name><operator pos:start="43:27" pos:end="43:27">*</operator><name pos:start="43:28" pos:end="43:40"><name pos:start="43:28" pos:end="43:30">enc</name><operator pos:start="43:31" pos:end="43:32">-&gt;</operator><name pos:start="43:33" pos:end="43:40">channels</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:83"><expr pos:start="47:5" pos:end="47:82"><name pos:start="47:5" pos:end="47:18">audio_out_size</name><operator pos:start="47:19" pos:end="47:19">=</operator> <call pos:start="47:21" pos:end="47:82"><name pos:start="47:21" pos:end="47:25">FFMAX</name><argument_list pos:start="47:26" pos:end="47:82">(<argument pos:start="47:27" pos:end="47:40"><expr pos:start="47:27" pos:end="47:40"><name pos:start="47:27" pos:end="47:40">audio_buf_size</name></expr></argument>, <argument pos:start="47:43" pos:end="47:81"><expr pos:start="47:43" pos:end="47:81"><name pos:start="47:43" pos:end="47:57"><name pos:start="47:43" pos:end="47:45">enc</name><operator pos:start="47:46" pos:end="47:47">-&gt;</operator><name pos:start="47:48" pos:end="47:57">frame_size</name></name> <operator pos:start="47:59" pos:end="47:59">*</operator> <name pos:start="47:61" pos:end="47:65">osize</name> <operator pos:start="47:67" pos:end="47:67">*</operator> <name pos:start="47:69" pos:end="47:81"><name pos:start="47:69" pos:end="47:71">enc</name><operator pos:start="47:72" pos:end="47:73">-&gt;</operator><name pos:start="47:74" pos:end="47:81">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="51:63"><if pos:start="49:5" pos:end="51:63">if<condition pos:start="49:7" pos:end="49:27">(<expr pos:start="49:8" pos:end="49:26"><name pos:start="49:8" pos:end="49:16">coded_bps</name> <operator pos:start="49:18" pos:end="49:18">&gt;</operator> <literal type="number" pos:start="49:20" pos:end="49:20">8</literal><operator pos:start="49:21" pos:end="49:21">*</operator><name pos:start="49:22" pos:end="49:26">osize</name></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:63"><block_content pos:start="51:9" pos:end="51:63">

        <expr_stmt pos:start="51:9" pos:end="51:63"><expr pos:start="51:9" pos:end="51:62"><name pos:start="51:9" pos:end="51:22">audio_out_size</name><operator pos:start="51:23" pos:end="51:23">=</operator> <name pos:start="51:25" pos:end="51:38">audio_out_size</name> <operator pos:start="51:40" pos:end="51:40">*</operator> <name pos:start="51:42" pos:end="51:50">coded_bps</name> <operator pos:start="51:52" pos:end="51:52">/</operator> <operator pos:start="51:54" pos:end="51:54">(</operator><literal type="number" pos:start="51:55" pos:end="51:55">8</literal><operator pos:start="51:56" pos:end="51:56">*</operator><name pos:start="51:57" pos:end="51:61">osize</name><operator pos:start="51:62" pos:end="51:62">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:41"><expr pos:start="53:5" pos:end="53:40"><name pos:start="53:5" pos:end="53:18">audio_out_size</name> <operator pos:start="53:20" pos:end="53:21">+=</operator> <name pos:start="53:23" pos:end="53:40">FF_MIN_BUFFER_SIZE</name></expr>;</expr_stmt>



    <if_stmt pos:start="57:5" pos:end="63:5"><if pos:start="57:5" pos:end="63:5">if<condition pos:start="57:7" pos:end="57:60">(<expr pos:start="57:8" pos:end="57:59"><name pos:start="57:8" pos:end="57:21">audio_out_size</name> <operator pos:start="57:23" pos:end="57:23">&gt;</operator> <name pos:start="57:25" pos:end="57:31">INT_MAX</name> <operator pos:start="57:33" pos:end="57:34">||</operator> <name pos:start="57:36" pos:end="57:49">audio_buf_size</name> <operator pos:start="57:51" pos:end="57:51">&gt;</operator> <name pos:start="57:53" pos:end="57:59">INT_MAX</name></expr>)</condition><block pos:start="57:61" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:23">

        <expr_stmt pos:start="59:9" pos:end="59:52"><expr pos:start="59:9" pos:end="59:51"><call pos:start="59:9" pos:end="59:51"><name pos:start="59:9" pos:end="59:15">fprintf</name><argument_list pos:start="59:16" pos:end="59:51">(<argument pos:start="59:17" pos:end="59:22"><expr pos:start="59:17" pos:end="59:22"><name pos:start="59:17" pos:end="59:22">stderr</name></expr></argument>, <argument pos:start="59:25" pos:end="59:50"><expr pos:start="59:25" pos:end="59:50"><literal type="string" pos:start="59:25" pos:end="59:50">"Buffer sizes too large\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:23"><expr pos:start="61:9" pos:end="61:22"><call pos:start="61:9" pos:end="61:22"><name pos:start="61:9" pos:end="61:19">ffmpeg_exit</name><argument_list pos:start="61:20" pos:end="61:22">(<argument pos:start="61:21" pos:end="61:21"><expr pos:start="61:21" pos:end="61:21"><literal type="number" pos:start="61:21" pos:end="61:21">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:74"><expr pos:start="67:5" pos:end="67:73"><call pos:start="67:5" pos:end="67:73"><name pos:start="67:5" pos:end="67:18">av_fast_malloc</name><argument_list pos:start="67:19" pos:end="67:73">(<argument pos:start="67:20" pos:end="67:29"><expr pos:start="67:20" pos:end="67:29"><operator pos:start="67:20" pos:end="67:20">&amp;</operator><name pos:start="67:21" pos:end="67:29">audio_buf</name></expr></argument>, <argument pos:start="67:32" pos:end="67:56"><expr pos:start="67:32" pos:end="67:56"><operator pos:start="67:32" pos:end="67:32">&amp;</operator><name pos:start="67:33" pos:end="67:56">allocated_audio_buf_size</name></expr></argument>, <argument pos:start="67:59" pos:end="67:72"><expr pos:start="67:59" pos:end="67:72"><name pos:start="67:59" pos:end="67:72">audio_buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:74"><expr pos:start="69:5" pos:end="69:73"><call pos:start="69:5" pos:end="69:73"><name pos:start="69:5" pos:end="69:18">av_fast_malloc</name><argument_list pos:start="69:19" pos:end="69:73">(<argument pos:start="69:20" pos:end="69:29"><expr pos:start="69:20" pos:end="69:29"><operator pos:start="69:20" pos:end="69:20">&amp;</operator><name pos:start="69:21" pos:end="69:29">audio_out</name></expr></argument>, <argument pos:start="69:32" pos:end="69:56"><expr pos:start="69:32" pos:end="69:56"><operator pos:start="69:32" pos:end="69:32">&amp;</operator><name pos:start="69:33" pos:end="69:56">allocated_audio_out_size</name></expr></argument>, <argument pos:start="69:59" pos:end="69:72"><expr pos:start="69:59" pos:end="69:72"><name pos:start="69:59" pos:end="69:72">audio_out_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="77:5"><if pos:start="71:5" pos:end="77:5">if <condition pos:start="71:8" pos:end="71:33">(<expr pos:start="71:9" pos:end="71:32"><operator pos:start="71:9" pos:end="71:9">!</operator><name pos:start="71:10" pos:end="71:18">audio_buf</name> <operator pos:start="71:20" pos:end="71:21">||</operator> <operator pos:start="71:23" pos:end="71:23">!</operator><name pos:start="71:24" pos:end="71:32">audio_out</name></expr>)</condition><block pos:start="71:34" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:23">

        <expr_stmt pos:start="73:9" pos:end="73:59"><expr pos:start="73:9" pos:end="73:58"><call pos:start="73:9" pos:end="73:58"><name pos:start="73:9" pos:end="73:15">fprintf</name><argument_list pos:start="73:16" pos:end="73:58">(<argument pos:start="73:17" pos:end="73:22"><expr pos:start="73:17" pos:end="73:22"><name pos:start="73:17" pos:end="73:22">stderr</name></expr></argument>, <argument pos:start="73:25" pos:end="73:57"><expr pos:start="73:25" pos:end="73:57"><literal type="string" pos:start="73:25" pos:end="73:57">"Out of memory in do_audio_out\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:23"><expr pos:start="75:9" pos:end="75:22"><call pos:start="75:9" pos:end="75:22"><name pos:start="75:9" pos:end="75:19">ffmpeg_exit</name><argument_list pos:start="75:20" pos:end="75:22">(<argument pos:start="75:21" pos:end="75:21"><expr pos:start="75:21" pos:end="75:21"><literal type="number" pos:start="75:21" pos:end="75:21">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="81:5" pos:end="83:32"><if pos:start="81:5" pos:end="83:32">if <condition pos:start="81:8" pos:end="81:39">(<expr pos:start="81:9" pos:end="81:38"><name pos:start="81:9" pos:end="81:21"><name pos:start="81:9" pos:end="81:11">enc</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:21">channels</name></name> <operator pos:start="81:23" pos:end="81:24">!=</operator> <name pos:start="81:26" pos:end="81:38"><name pos:start="81:26" pos:end="81:28">dec</name><operator pos:start="81:29" pos:end="81:30">-&gt;</operator><name pos:start="81:31" pos:end="81:38">channels</name></name></expr>)</condition><block type="pseudo" pos:start="83:9" pos:end="83:32"><block_content pos:start="83:9" pos:end="83:32">

        <expr_stmt pos:start="83:9" pos:end="83:32"><expr pos:start="83:9" pos:end="83:31"><name pos:start="83:9" pos:end="83:27"><name pos:start="83:9" pos:end="83:11">ost</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:27">audio_resample</name></name> <operator pos:start="83:29" pos:end="83:29">=</operator> <literal type="number" pos:start="83:31" pos:end="83:31">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="87:5" pos:end="118:0"><if pos:start="87:5" pos:end="118:0">if <condition pos:start="87:8" pos:end="87:46">(<expr pos:start="87:9" pos:end="87:45"><name pos:start="87:9" pos:end="87:27"><name pos:start="87:9" pos:end="87:11">ost</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:27">audio_resample</name></name> <operator pos:start="87:29" pos:end="87:30">&amp;&amp;</operator> <operator pos:start="87:32" pos:end="87:32">!</operator><name pos:start="87:33" pos:end="87:45"><name pos:start="87:33" pos:end="87:35">ost</name><operator pos:start="87:36" pos:end="87:37">-&gt;</operator><name pos:start="87:38" pos:end="87:45">resample</name></name></expr>)</condition> <block pos:start="87:48" pos:end="118:0">{<block_content pos:start="89:9" pos:end="111:9">

        <if_stmt pos:start="89:9" pos:end="91:94"><if pos:start="89:9" pos:end="91:94">if <condition pos:start="89:12" pos:end="89:46">(<expr pos:start="89:13" pos:end="89:45"><name pos:start="89:13" pos:end="89:27"><name pos:start="89:13" pos:end="89:15">dec</name><operator pos:start="89:16" pos:end="89:17">-&gt;</operator><name pos:start="89:18" pos:end="89:27">sample_fmt</name></name> <operator pos:start="89:29" pos:end="89:30">!=</operator> <name pos:start="89:32" pos:end="89:45">SAMPLE_FMT_S16</name></expr>)</condition><block type="pseudo" pos:start="91:13" pos:end="91:94"><block_content pos:start="91:13" pos:end="91:94">

            <expr_stmt pos:start="91:13" pos:end="91:94"><expr pos:start="91:13" pos:end="91:93"><call pos:start="91:13" pos:end="91:93"><name pos:start="91:13" pos:end="91:19">fprintf</name><argument_list pos:start="91:20" pos:end="91:93">(<argument pos:start="91:21" pos:end="91:26"><expr pos:start="91:21" pos:end="91:26"><name pos:start="91:21" pos:end="91:26">stderr</name></expr></argument>, <argument pos:start="91:29" pos:end="91:92"><expr pos:start="91:29" pos:end="91:92"><literal type="string" pos:start="91:29" pos:end="91:92">"Warning, using s16 intermediate sample format for resampling\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="93:9" pos:end="99:63"><expr pos:start="93:9" pos:end="99:62"><name pos:start="93:9" pos:end="93:21"><name pos:start="93:9" pos:end="93:11">ost</name><operator pos:start="93:12" pos:end="93:13">-&gt;</operator><name pos:start="93:14" pos:end="93:21">resample</name></name> <operator pos:start="93:23" pos:end="93:23">=</operator> <call pos:start="93:25" pos:end="99:62"><name pos:start="93:25" pos:end="93:46">av_audio_resample_init</name><argument_list pos:start="93:47" pos:end="99:62">(<argument pos:start="93:48" pos:end="93:60"><expr pos:start="93:48" pos:end="93:60"><name pos:start="93:48" pos:end="93:60"><name pos:start="93:48" pos:end="93:50">enc</name><operator pos:start="93:51" pos:end="93:52">-&gt;</operator><name pos:start="93:53" pos:end="93:60">channels</name></name></expr></argument>,    <argument pos:start="93:66" pos:end="93:78"><expr pos:start="93:66" pos:end="93:78"><name pos:start="93:66" pos:end="93:78"><name pos:start="93:66" pos:end="93:68">dec</name><operator pos:start="93:69" pos:end="93:70">-&gt;</operator><name pos:start="93:71" pos:end="93:78">channels</name></name></expr></argument>,

                                               <argument pos:start="95:48" pos:end="95:63"><expr pos:start="95:48" pos:end="95:63"><name pos:start="95:48" pos:end="95:63"><name pos:start="95:48" pos:end="95:50">enc</name><operator pos:start="95:51" pos:end="95:52">-&gt;</operator><name pos:start="95:53" pos:end="95:63">sample_rate</name></name></expr></argument>, <argument pos:start="95:66" pos:end="95:81"><expr pos:start="95:66" pos:end="95:81"><name pos:start="95:66" pos:end="95:81"><name pos:start="95:66" pos:end="95:68">dec</name><operator pos:start="95:69" pos:end="95:70">-&gt;</operator><name pos:start="95:71" pos:end="95:81">sample_rate</name></name></expr></argument>,

                                               <argument pos:start="97:48" pos:end="97:62"><expr pos:start="97:48" pos:end="97:62"><name pos:start="97:48" pos:end="97:62"><name pos:start="97:48" pos:end="97:50">enc</name><operator pos:start="97:51" pos:end="97:52">-&gt;</operator><name pos:start="97:53" pos:end="97:62">sample_fmt</name></name></expr></argument>,  <argument pos:start="97:66" pos:end="97:80"><expr pos:start="97:66" pos:end="97:80"><name pos:start="97:66" pos:end="97:80"><name pos:start="97:66" pos:end="97:68">dec</name><operator pos:start="97:69" pos:end="97:70">-&gt;</operator><name pos:start="97:71" pos:end="97:80">sample_fmt</name></name></expr></argument>,

                                               <argument pos:start="99:48" pos:end="99:49"><expr pos:start="99:48" pos:end="99:49"><literal type="number" pos:start="99:48" pos:end="99:49">16</literal></expr></argument>, <argument pos:start="99:52" pos:end="99:53"><expr pos:start="99:52" pos:end="99:53"><literal type="number" pos:start="99:52" pos:end="99:53">10</literal></expr></argument>, <argument pos:start="99:56" pos:end="99:56"><expr pos:start="99:56" pos:end="99:56"><literal type="number" pos:start="99:56" pos:end="99:56">0</literal></expr></argument>, <argument pos:start="99:59" pos:end="99:61"><expr pos:start="99:59" pos:end="99:61"><literal type="number" pos:start="99:59" pos:end="99:61">0.8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="101:9" pos:end="111:9"><if pos:start="101:9" pos:end="111:9">if <condition pos:start="101:12" pos:end="101:27">(<expr pos:start="101:13" pos:end="101:26"><operator pos:start="101:13" pos:end="101:13">!</operator><name pos:start="101:14" pos:end="101:26"><name pos:start="101:14" pos:end="101:16">ost</name><operator pos:start="101:17" pos:end="101:18">-&gt;</operator><name pos:start="101:19" pos:end="101:26">resample</name></name></expr>)</condition> <block pos:start="101:29" pos:end="111:9">{<block_content pos:start="103:13" pos:end="109:27">

            <expr_stmt pos:start="103:13" pos:end="107:53"><expr pos:start="103:13" pos:end="107:52"><call pos:start="103:13" pos:end="107:52"><name pos:start="103:13" pos:end="103:19">fprintf</name><argument_list pos:start="103:20" pos:end="107:52">(<argument pos:start="103:21" pos:end="103:26"><expr pos:start="103:21" pos:end="103:26"><name pos:start="103:21" pos:end="103:26">stderr</name></expr></argument>, <argument pos:start="103:29" pos:end="103:91"><expr pos:start="103:29" pos:end="103:91"><literal type="string" pos:start="103:29" pos:end="103:91">"Can not resample %d channels @ %d Hz to %d channels @ %d Hz\n"</literal></expr></argument>,

                    <argument pos:start="105:21" pos:end="105:33"><expr pos:start="105:21" pos:end="105:33"><name pos:start="105:21" pos:end="105:33"><name pos:start="105:21" pos:end="105:23">dec</name><operator pos:start="105:24" pos:end="105:25">-&gt;</operator><name pos:start="105:26" pos:end="105:33">channels</name></name></expr></argument>, <argument pos:start="105:36" pos:end="105:51"><expr pos:start="105:36" pos:end="105:51"><name pos:start="105:36" pos:end="105:51"><name pos:start="105:36" pos:end="105:38">dec</name><operator pos:start="105:39" pos:end="105:40">-&gt;</operator><name pos:start="105:41" pos:end="105:51">sample_rate</name></name></expr></argument>,

                    <argument pos:start="107:21" pos:end="107:33"><expr pos:start="107:21" pos:end="107:33"><name pos:start="107:21" pos:end="107:33"><name pos:start="107:21" pos:end="107:23">enc</name><operator pos:start="107:24" pos:end="107:25">-&gt;</operator><name pos:start="107:26" pos:end="107:33">channels</name></name></expr></argument>, <argument pos:start="107:36" pos:end="107:51"><expr pos:start="107:36" pos:end="107:51"><name pos:start="107:36" pos:end="107:51"><name pos:start="107:36" pos:end="107:38">enc</name><operator pos:start="107:39" pos:end="107:40">-&gt;</operator><name pos:start="107:41" pos:end="107:51">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:27"><expr pos:start="109:13" pos:end="109:26"><call pos:start="109:13" pos:end="109:26"><name pos:start="109:13" pos:end="109:23">ffmpeg_exit</name><argument_list pos:start="109:24" pos:end="109:26">(<argument pos:start="109:25" pos:end="109:25"><expr pos:start="109:25" pos:end="109:25"><literal type="number" pos:start="109:25" pos:end="109:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



<cpp:define pos:start="117:1" pos:end="117:51">#<cpp:directive pos:start="117:2" pos:end="117:7">define</cpp:directive> <cpp:macro pos:start="117:9" pos:end="117:27"><name pos:start="117:9" pos:end="117:22">MAKE_SFMT_PAIR</name><parameter_list pos:start="117:23" pos:end="117:27">(<parameter pos:start="117:24" pos:end="117:24"><type pos:start="117:24" pos:end="117:24"><name pos:start="117:24" pos:end="117:24">a</name></type></parameter>,<parameter pos:start="117:26" pos:end="117:26"><type pos:start="117:26" pos:end="117:26"><name pos:start="117:26" pos:end="117:26">b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="117:29" pos:end="117:51">((a)+SAMPLE_FMT_NB*(b))</cpp:value></cpp:define>

    <if_stmt pos:start="119:5" pos:end="145:5"><if pos:start="119:5" pos:end="145:5">if <condition pos:start="119:8" pos:end="121:76">(<expr pos:start="119:9" pos:end="121:75"><operator pos:start="119:9" pos:end="119:9">!</operator><name pos:start="119:10" pos:end="119:28"><name pos:start="119:10" pos:end="119:12">ost</name><operator pos:start="119:13" pos:end="119:14">-&gt;</operator><name pos:start="119:15" pos:end="119:28">audio_resample</name></name> <operator pos:start="119:30" pos:end="119:31">&amp;&amp;</operator> <name pos:start="119:33" pos:end="119:47"><name pos:start="119:33" pos:end="119:35">dec</name><operator pos:start="119:36" pos:end="119:37">-&gt;</operator><name pos:start="119:38" pos:end="119:47">sample_fmt</name></name><operator pos:start="119:48" pos:end="119:49">!=</operator><name pos:start="119:50" pos:end="119:64"><name pos:start="119:50" pos:end="119:52">enc</name><operator pos:start="119:53" pos:end="119:54">-&gt;</operator><name pos:start="119:55" pos:end="119:64">sample_fmt</name></name> <operator pos:start="119:66" pos:end="119:67">&amp;&amp;</operator>

        <call pos:start="121:9" pos:end="121:55"><name pos:start="121:9" pos:end="121:22">MAKE_SFMT_PAIR</name><argument_list pos:start="121:23" pos:end="121:55">(<argument pos:start="121:24" pos:end="121:38"><expr pos:start="121:24" pos:end="121:38"><name pos:start="121:24" pos:end="121:38"><name pos:start="121:24" pos:end="121:26">enc</name><operator pos:start="121:27" pos:end="121:28">-&gt;</operator><name pos:start="121:29" pos:end="121:38">sample_fmt</name></name></expr></argument>,<argument pos:start="121:40" pos:end="121:54"><expr pos:start="121:40" pos:end="121:54"><name pos:start="121:40" pos:end="121:54"><name pos:start="121:40" pos:end="121:42">dec</name><operator pos:start="121:43" pos:end="121:44">-&gt;</operator><name pos:start="121:45" pos:end="121:54">sample_fmt</name></name></expr></argument>)</argument_list></call><operator pos:start="121:56" pos:end="121:57">!=</operator><name pos:start="121:58" pos:end="121:75"><name pos:start="121:58" pos:end="121:60">ost</name><operator pos:start="121:61" pos:end="121:62">-&gt;</operator><name pos:start="121:63" pos:end="121:75">reformat_pair</name></name></expr>)</condition> <block pos:start="121:78" pos:end="145:5">{<block_content pos:start="123:9" pos:end="143:75">

        <if_stmt pos:start="123:9" pos:end="125:53"><if pos:start="123:9" pos:end="125:53">if <condition pos:start="123:12" pos:end="123:30">(<expr pos:start="123:13" pos:end="123:29"><name pos:start="123:13" pos:end="123:29"><name pos:start="123:13" pos:end="123:15">ost</name><operator pos:start="123:16" pos:end="123:17">-&gt;</operator><name pos:start="123:18" pos:end="123:29">reformat_ctx</name></name></expr>)</condition><block type="pseudo" pos:start="125:13" pos:end="125:53"><block_content pos:start="125:13" pos:end="125:53">

            <expr_stmt pos:start="125:13" pos:end="125:53"><expr pos:start="125:13" pos:end="125:52"><call pos:start="125:13" pos:end="125:52"><name pos:start="125:13" pos:end="125:33">av_audio_convert_free</name><argument_list pos:start="125:34" pos:end="125:52">(<argument pos:start="125:35" pos:end="125:51"><expr pos:start="125:35" pos:end="125:51"><name pos:start="125:35" pos:end="125:51"><name pos:start="125:35" pos:end="125:37">ost</name><operator pos:start="125:38" pos:end="125:39">-&gt;</operator><name pos:start="125:40" pos:end="125:51">reformat_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="127:9" pos:end="129:80"><expr pos:start="127:9" pos:end="129:79"><name pos:start="127:9" pos:end="127:25"><name pos:start="127:9" pos:end="127:11">ost</name><operator pos:start="127:12" pos:end="127:13">-&gt;</operator><name pos:start="127:14" pos:end="127:25">reformat_ctx</name></name> <operator pos:start="127:27" pos:end="127:27">=</operator> <call pos:start="127:29" pos:end="129:79"><name pos:start="127:29" pos:end="127:50">av_audio_convert_alloc</name><argument_list pos:start="127:51" pos:end="129:79">(<argument pos:start="127:52" pos:end="127:66"><expr pos:start="127:52" pos:end="127:66"><name pos:start="127:52" pos:end="127:66"><name pos:start="127:52" pos:end="127:54">enc</name><operator pos:start="127:55" pos:end="127:56">-&gt;</operator><name pos:start="127:57" pos:end="127:66">sample_fmt</name></name></expr></argument>, <argument pos:start="127:69" pos:end="127:69"><expr pos:start="127:69" pos:end="127:69"><literal type="number" pos:start="127:69" pos:end="127:69">1</literal></expr></argument>,

                                                   <argument pos:start="129:52" pos:end="129:66"><expr pos:start="129:52" pos:end="129:66"><name pos:start="129:52" pos:end="129:66"><name pos:start="129:52" pos:end="129:54">dec</name><operator pos:start="129:55" pos:end="129:56">-&gt;</operator><name pos:start="129:57" pos:end="129:66">sample_fmt</name></name></expr></argument>, <argument pos:start="129:69" pos:end="129:69"><expr pos:start="129:69" pos:end="129:69"><literal type="number" pos:start="129:69" pos:end="129:69">1</literal></expr></argument>, <argument pos:start="129:72" pos:end="129:75"><expr pos:start="129:72" pos:end="129:75"><name pos:start="129:72" pos:end="129:75">NULL</name></expr></argument>, <argument pos:start="129:78" pos:end="129:78"><expr pos:start="129:78" pos:end="129:78"><literal type="number" pos:start="129:78" pos:end="129:78">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="131:9" pos:end="141:9"><if pos:start="131:9" pos:end="141:9">if <condition pos:start="131:12" pos:end="131:31">(<expr pos:start="131:13" pos:end="131:30"><operator pos:start="131:13" pos:end="131:13">!</operator><name pos:start="131:14" pos:end="131:30"><name pos:start="131:14" pos:end="131:16">ost</name><operator pos:start="131:17" pos:end="131:18">-&gt;</operator><name pos:start="131:19" pos:end="131:30">reformat_ctx</name></name></expr>)</condition> <block pos:start="131:33" pos:end="141:9">{<block_content pos:start="133:13" pos:end="139:27">

            <expr_stmt pos:start="133:13" pos:end="137:62"><expr pos:start="133:13" pos:end="137:61"><call pos:start="133:13" pos:end="137:61"><name pos:start="133:13" pos:end="133:19">fprintf</name><argument_list pos:start="133:20" pos:end="137:61">(<argument pos:start="133:21" pos:end="133:26"><expr pos:start="133:21" pos:end="133:26"><name pos:start="133:21" pos:end="133:26">stderr</name></expr></argument>, <argument pos:start="133:29" pos:end="133:83"><expr pos:start="133:29" pos:end="133:83"><literal type="string" pos:start="133:29" pos:end="133:83">"Cannot convert %s sample format to %s sample format\n"</literal></expr></argument>,

                <argument pos:start="135:17" pos:end="135:60"><expr pos:start="135:17" pos:end="135:60"><call pos:start="135:17" pos:end="135:60"><name pos:start="135:17" pos:end="135:43">avcodec_get_sample_fmt_name</name><argument_list pos:start="135:44" pos:end="135:60">(<argument pos:start="135:45" pos:end="135:59"><expr pos:start="135:45" pos:end="135:59"><name pos:start="135:45" pos:end="135:59"><name pos:start="135:45" pos:end="135:47">dec</name><operator pos:start="135:48" pos:end="135:49">-&gt;</operator><name pos:start="135:50" pos:end="135:59">sample_fmt</name></name></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="137:17" pos:end="137:60"><expr pos:start="137:17" pos:end="137:60"><call pos:start="137:17" pos:end="137:60"><name pos:start="137:17" pos:end="137:43">avcodec_get_sample_fmt_name</name><argument_list pos:start="137:44" pos:end="137:60">(<argument pos:start="137:45" pos:end="137:59"><expr pos:start="137:45" pos:end="137:59"><name pos:start="137:45" pos:end="137:59"><name pos:start="137:45" pos:end="137:47">enc</name><operator pos:start="137:48" pos:end="137:49">-&gt;</operator><name pos:start="137:50" pos:end="137:59">sample_fmt</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:27"><expr pos:start="139:13" pos:end="139:26"><call pos:start="139:13" pos:end="139:26"><name pos:start="139:13" pos:end="139:23">ffmpeg_exit</name><argument_list pos:start="139:24" pos:end="139:26">(<argument pos:start="139:25" pos:end="139:25"><expr pos:start="139:25" pos:end="139:25"><literal type="number" pos:start="139:25" pos:end="139:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:75"><expr pos:start="143:9" pos:end="143:74"><name pos:start="143:9" pos:end="143:26"><name pos:start="143:9" pos:end="143:11">ost</name><operator pos:start="143:12" pos:end="143:13">-&gt;</operator><name pos:start="143:14" pos:end="143:26">reformat_pair</name></name><operator pos:start="143:27" pos:end="143:27">=</operator><call pos:start="143:28" pos:end="143:74"><name pos:start="143:28" pos:end="143:41">MAKE_SFMT_PAIR</name><argument_list pos:start="143:42" pos:end="143:74">(<argument pos:start="143:43" pos:end="143:57"><expr pos:start="143:43" pos:end="143:57"><name pos:start="143:43" pos:end="143:57"><name pos:start="143:43" pos:end="143:45">enc</name><operator pos:start="143:46" pos:end="143:47">-&gt;</operator><name pos:start="143:48" pos:end="143:57">sample_fmt</name></name></expr></argument>,<argument pos:start="143:59" pos:end="143:73"><expr pos:start="143:59" pos:end="143:73"><name pos:start="143:59" pos:end="143:73"><name pos:start="143:59" pos:end="143:61">dec</name><operator pos:start="143:62" pos:end="143:63">-&gt;</operator><name pos:start="143:64" pos:end="143:73">sample_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="149:5" pos:end="241:70"><if pos:start="149:5" pos:end="237:5">if<condition pos:start="149:7" pos:end="149:25">(<expr pos:start="149:8" pos:end="149:24"><name pos:start="149:8" pos:end="149:24">audio_sync_method</name></expr>)</condition><block pos:start="149:26" pos:end="237:5">{<block_content pos:start="151:9" pos:end="235:9">

        <decl_stmt pos:start="151:9" pos:end="153:62"><decl pos:start="151:9" pos:end="153:61"><type pos:start="151:9" pos:end="151:14"><name pos:start="151:9" pos:end="151:14">double</name></type> <name pos:start="151:16" pos:end="151:20">delta</name> <init pos:start="151:22" pos:end="153:61">= <expr pos:start="151:24" pos:end="153:61"><call pos:start="151:24" pos:end="151:41"><name pos:start="151:24" pos:end="151:36">get_sync_ipts</name><argument_list pos:start="151:37" pos:end="151:41">(<argument pos:start="151:38" pos:end="151:40"><expr pos:start="151:38" pos:end="151:40"><name pos:start="151:38" pos:end="151:40">ost</name></expr></argument>)</argument_list></call> <operator pos:start="151:43" pos:end="151:43">*</operator> <name pos:start="151:45" pos:end="151:60"><name pos:start="151:45" pos:end="151:47">enc</name><operator pos:start="151:48" pos:end="151:49">-&gt;</operator><name pos:start="151:50" pos:end="151:60">sample_rate</name></name> <operator pos:start="151:62" pos:end="151:62">-</operator> <name pos:start="151:64" pos:end="151:77"><name pos:start="151:64" pos:end="151:66">ost</name><operator pos:start="151:67" pos:end="151:68">-&gt;</operator><name pos:start="151:69" pos:end="151:77">sync_opts</name></name>

                <operator pos:start="153:17" pos:end="153:17">-</operator> <call pos:start="153:19" pos:end="153:41"><name pos:start="153:19" pos:end="153:30">av_fifo_size</name><argument_list pos:start="153:31" pos:end="153:41">(<argument pos:start="153:32" pos:end="153:40"><expr pos:start="153:32" pos:end="153:40"><name pos:start="153:32" pos:end="153:40"><name pos:start="153:32" pos:end="153:34">ost</name><operator pos:start="153:35" pos:end="153:36">-&gt;</operator><name pos:start="153:37" pos:end="153:40">fifo</name></name></expr></argument>)</argument_list></call><operator pos:start="153:42" pos:end="153:42">/</operator><operator pos:start="153:43" pos:end="153:43">(</operator><name pos:start="153:44" pos:end="153:56"><name pos:start="153:44" pos:end="153:46">enc</name><operator pos:start="153:47" pos:end="153:48">-&gt;</operator><name pos:start="153:49" pos:end="153:56">channels</name></name> <operator pos:start="153:58" pos:end="153:58">*</operator> <literal type="number" pos:start="153:60" pos:end="153:60">2</literal><operator pos:start="153:61" pos:end="153:61">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="155:9" pos:end="155:65"><decl pos:start="155:9" pos:end="155:64"><type pos:start="155:9" pos:end="155:14"><name pos:start="155:9" pos:end="155:14">double</name></type> <name pos:start="155:16" pos:end="155:21">idelta</name><init pos:start="155:22" pos:end="155:64">= <expr pos:start="155:24" pos:end="155:64"><name pos:start="155:24" pos:end="155:28">delta</name><operator pos:start="155:29" pos:end="155:29">*</operator><name pos:start="155:30" pos:end="155:45"><name pos:start="155:30" pos:end="155:32">dec</name><operator pos:start="155:33" pos:end="155:34">-&gt;</operator><name pos:start="155:35" pos:end="155:45">sample_rate</name></name> <operator pos:start="155:47" pos:end="155:47">/</operator> <name pos:start="155:49" pos:end="155:64"><name pos:start="155:49" pos:end="155:51">enc</name><operator pos:start="155:52" pos:end="155:53">-&gt;</operator><name pos:start="155:54" pos:end="155:64">sample_rate</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="157:9" pos:end="157:54"><decl pos:start="157:9" pos:end="157:53"><type pos:start="157:9" pos:end="157:11"><name pos:start="157:9" pos:end="157:11">int</name></type> <name pos:start="157:13" pos:end="157:22">byte_delta</name><init pos:start="157:23" pos:end="157:53">= <expr pos:start="157:25" pos:end="157:53"><operator pos:start="157:25" pos:end="157:25">(</operator><operator pos:start="157:26" pos:end="157:26">(</operator><name pos:start="157:27" pos:end="157:29">int</name><operator pos:start="157:30" pos:end="157:30">)</operator><name pos:start="157:31" pos:end="157:36">idelta</name><operator pos:start="157:37" pos:end="157:37">)</operator><operator pos:start="157:38" pos:end="157:38">*</operator><literal type="number" pos:start="157:39" pos:end="157:39">2</literal><operator pos:start="157:40" pos:end="157:40">*</operator><name pos:start="157:41" pos:end="157:53"><name pos:start="157:41" pos:end="157:43">dec</name><operator pos:start="157:44" pos:end="157:45">-&gt;</operator><name pos:start="157:46" pos:end="157:53">channels</name></name></expr></init></decl>;</decl_stmt>



        <comment type="line" pos:start="161:9" pos:end="161:30">//FIXME resample delay</comment>

        <if_stmt pos:start="163:9" pos:end="235:9"><if pos:start="163:9" pos:end="235:9">if<condition pos:start="163:11" pos:end="163:28">(<expr pos:start="163:12" pos:end="163:27"><call pos:start="163:12" pos:end="163:22"><name pos:start="163:12" pos:end="163:15">fabs</name><argument_list pos:start="163:16" pos:end="163:22">(<argument pos:start="163:17" pos:end="163:21"><expr pos:start="163:17" pos:end="163:21"><name pos:start="163:17" pos:end="163:21">delta</name></expr></argument>)</argument_list></call> <operator pos:start="163:24" pos:end="163:24">&gt;</operator> <literal type="number" pos:start="163:26" pos:end="163:27">50</literal></expr>)</condition><block pos:start="163:29" pos:end="235:9">{<block_content pos:start="165:13" pos:end="233:13">

            <if_stmt pos:start="165:13" pos:end="233:13"><if pos:start="165:13" pos:end="219:13">if<condition pos:start="165:15" pos:end="165:85">(<expr pos:start="165:16" pos:end="165:84"><name pos:start="165:16" pos:end="165:28"><name pos:start="165:16" pos:end="165:18">ist</name><operator pos:start="165:19" pos:end="165:20">-&gt;</operator><name pos:start="165:21" pos:end="165:28">is_start</name></name> <operator pos:start="165:30" pos:end="165:31">||</operator> <call pos:start="165:33" pos:end="165:43"><name pos:start="165:33" pos:end="165:36">fabs</name><argument_list pos:start="165:37" pos:end="165:43">(<argument pos:start="165:38" pos:end="165:42"><expr pos:start="165:38" pos:end="165:42"><name pos:start="165:38" pos:end="165:42">delta</name></expr></argument>)</argument_list></call> <operator pos:start="165:45" pos:end="165:45">&gt;</operator> <name pos:start="165:47" pos:end="165:67">audio_drift_threshold</name><operator pos:start="165:68" pos:end="165:68">*</operator><name pos:start="165:69" pos:end="165:84"><name pos:start="165:69" pos:end="165:71">enc</name><operator pos:start="165:72" pos:end="165:73">-&gt;</operator><name pos:start="165:74" pos:end="165:84">sample_rate</name></name></expr>)</condition><block pos:start="165:86" pos:end="219:13">{<block_content pos:start="167:17" pos:end="217:17">

                <if_stmt pos:start="167:17" pos:end="217:17"><if pos:start="167:17" pos:end="185:17">if<condition pos:start="167:19" pos:end="167:34">(<expr pos:start="167:20" pos:end="167:33"><name pos:start="167:20" pos:end="167:29">byte_delta</name> <operator pos:start="167:31" pos:end="167:31">&lt;</operator> <literal type="number" pos:start="167:33" pos:end="167:33">0</literal></expr>)</condition><block pos:start="167:35" pos:end="185:17">{<block_content pos:start="169:21" pos:end="183:36">

                    <expr_stmt pos:start="169:21" pos:end="169:57"><expr pos:start="169:21" pos:end="169:56"><name pos:start="169:21" pos:end="169:30">byte_delta</name><operator pos:start="169:31" pos:end="169:31">=</operator> <call pos:start="169:33" pos:end="169:56"><name pos:start="169:33" pos:end="169:37">FFMAX</name><argument_list pos:start="169:38" pos:end="169:56">(<argument pos:start="169:39" pos:end="169:48"><expr pos:start="169:39" pos:end="169:48"><name pos:start="169:39" pos:end="169:48">byte_delta</name></expr></argument>, <argument pos:start="169:51" pos:end="169:55"><expr pos:start="169:51" pos:end="169:55"><operator pos:start="169:51" pos:end="169:51">-</operator><name pos:start="169:52" pos:end="169:55">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="171:21" pos:end="171:39"><expr pos:start="171:21" pos:end="171:38"><name pos:start="171:21" pos:end="171:24">size</name> <operator pos:start="171:26" pos:end="171:27">+=</operator> <name pos:start="171:29" pos:end="171:38">byte_delta</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="173:21" pos:end="173:39"><expr pos:start="173:21" pos:end="173:38"><name pos:start="173:21" pos:end="173:23">buf</name>  <operator pos:start="173:26" pos:end="173:27">-=</operator> <name pos:start="173:29" pos:end="173:38">byte_delta</name></expr>;</expr_stmt>

                    <if_stmt pos:start="175:21" pos:end="177:86"><if pos:start="175:21" pos:end="177:86">if<condition pos:start="175:23" pos:end="175:35">(<expr pos:start="175:24" pos:end="175:34"><name pos:start="175:24" pos:end="175:30">verbose</name> <operator pos:start="175:32" pos:end="175:32">&gt;</operator> <literal type="number" pos:start="175:34" pos:end="175:34">2</literal></expr>)</condition><block type="pseudo" pos:start="177:25" pos:end="177:86"><block_content pos:start="177:25" pos:end="177:86">

                        <expr_stmt pos:start="177:25" pos:end="177:86"><expr pos:start="177:25" pos:end="177:85"><call pos:start="177:25" pos:end="177:85"><name pos:start="177:25" pos:end="177:31">fprintf</name><argument_list pos:start="177:32" pos:end="177:85">(<argument pos:start="177:33" pos:end="177:38"><expr pos:start="177:33" pos:end="177:38"><name pos:start="177:33" pos:end="177:38">stderr</name></expr></argument>, <argument pos:start="177:41" pos:end="177:71"><expr pos:start="177:41" pos:end="177:71"><literal type="string" pos:start="177:41" pos:end="177:71">"discarding %d audio samples\n"</literal></expr></argument>, <argument pos:start="177:74" pos:end="177:84"><expr pos:start="177:74" pos:end="177:84"><operator pos:start="177:74" pos:end="177:74">(</operator><name pos:start="177:75" pos:end="177:77">int</name><operator pos:start="177:78" pos:end="177:78">)</operator><operator pos:start="177:79" pos:end="177:79">-</operator><name pos:start="177:80" pos:end="177:84">delta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="179:21" pos:end="181:31"><if pos:start="179:21" pos:end="181:31">if<condition pos:start="179:23" pos:end="179:29">(<expr pos:start="179:24" pos:end="179:28"><operator pos:start="179:24" pos:end="179:24">!</operator><name pos:start="179:25" pos:end="179:28">size</name></expr>)</condition><block type="pseudo" pos:start="181:25" pos:end="181:31"><block_content pos:start="181:25" pos:end="181:31">

                        <return pos:start="181:25" pos:end="181:31">return;</return></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="183:21" pos:end="183:36"><expr pos:start="183:21" pos:end="183:35"><name pos:start="183:21" pos:end="183:33"><name pos:start="183:21" pos:end="183:23">ist</name><operator pos:start="183:24" pos:end="183:25">-&gt;</operator><name pos:start="183:26" pos:end="183:33">is_start</name></name><operator pos:start="183:34" pos:end="183:34">=</operator><literal type="number" pos:start="183:35" pos:end="183:35">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if><else pos:start="185:18" pos:end="217:17">else<block pos:start="185:22" pos:end="217:17">{<block_content pos:start="187:21" pos:end="215:92">

                    <decl_stmt pos:start="187:21" pos:end="187:52"><decl pos:start="187:21" pos:end="187:51"><type pos:start="187:21" pos:end="187:36"><specifier pos:start="187:21" pos:end="187:26">static</specifier> <name pos:start="187:28" pos:end="187:34">uint8_t</name> <modifier pos:start="187:36" pos:end="187:36">*</modifier></type><name pos:start="187:37" pos:end="187:45">input_tmp</name><init pos:start="187:46" pos:end="187:51">= <expr pos:start="187:48" pos:end="187:51"><name pos:start="187:48" pos:end="187:51">NULL</name></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="189:21" pos:end="189:72"><expr pos:start="189:21" pos:end="189:71"><name pos:start="189:21" pos:end="189:29">input_tmp</name><operator pos:start="189:30" pos:end="189:30">=</operator> <call pos:start="189:32" pos:end="189:71"><name pos:start="189:32" pos:end="189:41">av_realloc</name><argument_list pos:start="189:42" pos:end="189:71">(<argument pos:start="189:43" pos:end="189:51"><expr pos:start="189:43" pos:end="189:51"><name pos:start="189:43" pos:end="189:51">input_tmp</name></expr></argument>, <argument pos:start="189:54" pos:end="189:70"><expr pos:start="189:54" pos:end="189:70"><name pos:start="189:54" pos:end="189:63">byte_delta</name> <operator pos:start="189:65" pos:end="189:65">+</operator> <name pos:start="189:67" pos:end="189:70">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <if_stmt pos:start="193:21" pos:end="199:21"><if pos:start="193:21" pos:end="199:21">if<condition pos:start="193:23" pos:end="193:62">(<expr pos:start="193:24" pos:end="193:61"><name pos:start="193:24" pos:end="193:33">byte_delta</name> <operator pos:start="193:35" pos:end="193:35">&gt;</operator> <name pos:start="193:37" pos:end="193:54">allocated_for_size</name> <operator pos:start="193:56" pos:end="193:56">-</operator> <name pos:start="193:58" pos:end="193:61">size</name></expr>)</condition><block pos:start="193:63" pos:end="199:21">{<block_content pos:start="195:25" pos:end="197:42">

                        <expr_stmt pos:start="195:25" pos:end="195:71"><expr pos:start="195:25" pos:end="195:70"><name pos:start="195:25" pos:end="195:42">allocated_for_size</name><operator pos:start="195:43" pos:end="195:43">=</operator> <name pos:start="195:45" pos:end="195:54">byte_delta</name> <operator pos:start="195:56" pos:end="195:56">+</operator> <operator pos:start="195:58" pos:end="195:58">(</operator><name pos:start="195:59" pos:end="195:65">int64_t</name><operator pos:start="195:66" pos:end="195:66">)</operator><name pos:start="195:67" pos:end="195:70">size</name></expr>;</expr_stmt>

                        <goto pos:start="197:25" pos:end="197:42">goto <name pos:start="197:30" pos:end="197:41">need_realloc</name>;</goto>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="201:21" pos:end="201:36"><expr pos:start="201:21" pos:end="201:35"><name pos:start="201:21" pos:end="201:33"><name pos:start="201:21" pos:end="201:23">ist</name><operator pos:start="201:24" pos:end="201:25">-&gt;</operator><name pos:start="201:26" pos:end="201:33">is_start</name></name><operator pos:start="201:34" pos:end="201:34">=</operator><literal type="number" pos:start="201:35" pos:end="201:35">0</literal></expr>;</expr_stmt>



                    <expr_stmt pos:start="205:21" pos:end="205:53"><expr pos:start="205:21" pos:end="205:52"><call pos:start="205:21" pos:end="205:52"><name pos:start="205:21" pos:end="205:26">memset</name><argument_list pos:start="205:27" pos:end="205:52">(<argument pos:start="205:28" pos:end="205:36"><expr pos:start="205:28" pos:end="205:36"><name pos:start="205:28" pos:end="205:36">input_tmp</name></expr></argument>, <argument pos:start="205:39" pos:end="205:39"><expr pos:start="205:39" pos:end="205:39"><literal type="number" pos:start="205:39" pos:end="205:39">0</literal></expr></argument>, <argument pos:start="205:42" pos:end="205:51"><expr pos:start="205:42" pos:end="205:51"><name pos:start="205:42" pos:end="205:51">byte_delta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="207:21" pos:end="207:62"><expr pos:start="207:21" pos:end="207:61"><call pos:start="207:21" pos:end="207:61"><name pos:start="207:21" pos:end="207:26">memcpy</name><argument_list pos:start="207:27" pos:end="207:61">(<argument pos:start="207:28" pos:end="207:49"><expr pos:start="207:28" pos:end="207:49"><name pos:start="207:28" pos:end="207:36">input_tmp</name> <operator pos:start="207:38" pos:end="207:38">+</operator> <name pos:start="207:40" pos:end="207:49">byte_delta</name></expr></argument>, <argument pos:start="207:52" pos:end="207:54"><expr pos:start="207:52" pos:end="207:54"><name pos:start="207:52" pos:end="207:54">buf</name></expr></argument>, <argument pos:start="207:57" pos:end="207:60"><expr pos:start="207:57" pos:end="207:60"><name pos:start="207:57" pos:end="207:60">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="209:21" pos:end="209:35"><expr pos:start="209:21" pos:end="209:34"><name pos:start="209:21" pos:end="209:23">buf</name><operator pos:start="209:24" pos:end="209:24">=</operator> <name pos:start="209:26" pos:end="209:34">input_tmp</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="211:21" pos:end="211:39"><expr pos:start="211:21" pos:end="211:38"><name pos:start="211:21" pos:end="211:24">size</name> <operator pos:start="211:26" pos:end="211:27">+=</operator> <name pos:start="211:29" pos:end="211:38">byte_delta</name></expr>;</expr_stmt>

                    <if_stmt pos:start="213:21" pos:end="215:92"><if pos:start="213:21" pos:end="215:92">if<condition pos:start="213:23" pos:end="213:35">(<expr pos:start="213:24" pos:end="213:34"><name pos:start="213:24" pos:end="213:30">verbose</name> <operator pos:start="213:32" pos:end="213:32">&gt;</operator> <literal type="number" pos:start="213:34" pos:end="213:34">2</literal></expr>)</condition><block type="pseudo" pos:start="215:25" pos:end="215:92"><block_content pos:start="215:25" pos:end="215:92">

                        <expr_stmt pos:start="215:25" pos:end="215:92"><expr pos:start="215:25" pos:end="215:91"><call pos:start="215:25" pos:end="215:91"><name pos:start="215:25" pos:end="215:31">fprintf</name><argument_list pos:start="215:32" pos:end="215:91">(<argument pos:start="215:33" pos:end="215:38"><expr pos:start="215:33" pos:end="215:38"><name pos:start="215:33" pos:end="215:38">stderr</name></expr></argument>, <argument pos:start="215:41" pos:end="215:78"><expr pos:start="215:41" pos:end="215:78"><literal type="string" pos:start="215:41" pos:end="215:78">"adding %d audio samples of silence\n"</literal></expr></argument>, <argument pos:start="215:81" pos:end="215:90"><expr pos:start="215:81" pos:end="215:90"><operator pos:start="215:81" pos:end="215:81">(</operator><name pos:start="215:82" pos:end="215:84">int</name><operator pos:start="215:85" pos:end="215:85">)</operator><name pos:start="215:86" pos:end="215:90">delta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if><if type="elseif" pos:start="219:14" pos:end="233:13">else if<condition pos:start="219:21" pos:end="219:41">(<expr pos:start="219:22" pos:end="219:40"><name pos:start="219:22" pos:end="219:38">audio_sync_method</name><operator pos:start="219:39" pos:end="219:39">&gt;</operator><literal type="number" pos:start="219:40" pos:end="219:40">1</literal></expr>)</condition><block pos:start="219:42" pos:end="233:13">{<block_content pos:start="221:17" pos:end="231:107">

                <decl_stmt pos:start="221:17" pos:end="221:80"><decl pos:start="221:17" pos:end="221:79"><type pos:start="221:17" pos:end="221:19"><name pos:start="221:17" pos:end="221:19">int</name></type> <name pos:start="221:21" pos:end="221:24">comp</name><init pos:start="221:25" pos:end="221:79">= <expr pos:start="221:27" pos:end="221:79"><call pos:start="221:27" pos:end="221:79"><name pos:start="221:27" pos:end="221:33">av_clip</name><argument_list pos:start="221:34" pos:end="221:79">(<argument pos:start="221:35" pos:end="221:39"><expr pos:start="221:35" pos:end="221:39"><name pos:start="221:35" pos:end="221:39">delta</name></expr></argument>, <argument pos:start="221:42" pos:end="221:59"><expr pos:start="221:42" pos:end="221:59"><operator pos:start="221:42" pos:end="221:42">-</operator><name pos:start="221:43" pos:end="221:59">audio_sync_method</name></expr></argument>, <argument pos:start="221:62" pos:end="221:78"><expr pos:start="221:62" pos:end="221:78"><name pos:start="221:62" pos:end="221:78">audio_sync_method</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="223:17" pos:end="223:44"><expr pos:start="223:17" pos:end="223:43"><call pos:start="223:17" pos:end="223:43"><name pos:start="223:17" pos:end="223:22">assert</name><argument_list pos:start="223:23" pos:end="223:43">(<argument pos:start="223:24" pos:end="223:42"><expr pos:start="223:24" pos:end="223:42"><name pos:start="223:24" pos:end="223:42"><name pos:start="223:24" pos:end="223:26">ost</name><operator pos:start="223:27" pos:end="223:28">-&gt;</operator><name pos:start="223:29" pos:end="223:42">audio_resample</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="225:17" pos:end="227:132"><if pos:start="225:17" pos:end="227:132">if<condition pos:start="225:19" pos:end="225:31">(<expr pos:start="225:20" pos:end="225:30"><name pos:start="225:20" pos:end="225:26">verbose</name> <operator pos:start="225:28" pos:end="225:28">&gt;</operator> <literal type="number" pos:start="225:30" pos:end="225:30">2</literal></expr>)</condition><block type="pseudo" pos:start="227:21" pos:end="227:132"><block_content pos:start="227:21" pos:end="227:132">

                    <expr_stmt pos:start="227:21" pos:end="227:132"><expr pos:start="227:21" pos:end="227:131"><call pos:start="227:21" pos:end="227:131"><name pos:start="227:21" pos:end="227:27">fprintf</name><argument_list pos:start="227:28" pos:end="227:131">(<argument pos:start="227:29" pos:end="227:34"><expr pos:start="227:29" pos:end="227:34"><name pos:start="227:29" pos:end="227:34">stderr</name></expr></argument>, <argument pos:start="227:37" pos:end="227:99"><expr pos:start="227:37" pos:end="227:99"><literal type="string" pos:start="227:37" pos:end="227:99">"compensating audio timestamp drift:%f compensation:%d in:%d\n"</literal></expr></argument>, <argument pos:start="227:102" pos:end="227:106"><expr pos:start="227:102" pos:end="227:106"><name pos:start="227:102" pos:end="227:106">delta</name></expr></argument>, <argument pos:start="227:109" pos:end="227:112"><expr pos:start="227:109" pos:end="227:112"><name pos:start="227:109" pos:end="227:112">comp</name></expr></argument>, <argument pos:start="227:115" pos:end="227:130"><expr pos:start="227:115" pos:end="227:130"><name pos:start="227:115" pos:end="227:130"><name pos:start="227:115" pos:end="227:117">enc</name><operator pos:start="227:118" pos:end="227:119">-&gt;</operator><name pos:start="227:120" pos:end="227:130">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<comment type="line" pos:start="229:1" pos:end="229:226">//                fprintf(stderr, "drift:%f len:%d opts:%"PRId64" ipts:%"PRId64" fifo:%d\n", delta, -1, ost-&gt;sync_opts, (int64_t)(get_sync_ipts(ost) * enc-&gt;sample_rate), av_fifo_size(ost-&gt;fifo)/(ost-&gt;st-&gt;codec-&gt;channels * 2));</comment>

                <expr_stmt pos:start="231:17" pos:end="231:107"><expr pos:start="231:17" pos:end="231:106"><call pos:start="231:17" pos:end="231:106"><name pos:start="231:17" pos:end="231:38">av_resample_compensate</name><argument_list pos:start="231:39" pos:end="231:106">(<argument pos:start="231:40" pos:end="231:81"><expr pos:start="231:40" pos:end="231:81"><operator pos:start="231:40" pos:end="231:40">*</operator><operator pos:start="231:41" pos:end="231:41">(</operator>struct <name pos:start="231:49" pos:end="231:65">AVResampleContext</name><operator pos:start="231:66" pos:end="231:66">*</operator><operator pos:start="231:67" pos:end="231:67">*</operator><operator pos:start="231:68" pos:end="231:68">)</operator><name pos:start="231:69" pos:end="231:81"><name pos:start="231:69" pos:end="231:71">ost</name><operator pos:start="231:72" pos:end="231:73">-&gt;</operator><name pos:start="231:74" pos:end="231:81">resample</name></name></expr></argument>, <argument pos:start="231:84" pos:end="231:87"><expr pos:start="231:84" pos:end="231:87"><name pos:start="231:84" pos:end="231:87">comp</name></expr></argument>, <argument pos:start="231:90" pos:end="231:105"><expr pos:start="231:90" pos:end="231:105"><name pos:start="231:90" pos:end="231:105"><name pos:start="231:90" pos:end="231:92">enc</name><operator pos:start="231:93" pos:end="231:94">-&gt;</operator><name pos:start="231:95" pos:end="231:105">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if><else pos:start="237:6" pos:end="241:70">else<block type="pseudo" pos:start="239:9" pos:end="241:70"><block_content pos:start="239:9" pos:end="241:70">

        <expr_stmt pos:start="239:9" pos:end="241:70"><expr pos:start="239:9" pos:end="241:69"><name pos:start="239:9" pos:end="239:22"><name pos:start="239:9" pos:end="239:11">ost</name><operator pos:start="239:12" pos:end="239:13">-&gt;</operator><name pos:start="239:14" pos:end="239:22">sync_opts</name></name><operator pos:start="239:23" pos:end="239:23">=</operator> <call pos:start="239:25" pos:end="239:69"><name pos:start="239:25" pos:end="239:30">lrintf</name><argument_list pos:start="239:31" pos:end="239:69">(<argument pos:start="239:32" pos:end="239:68"><expr pos:start="239:32" pos:end="239:68"><call pos:start="239:32" pos:end="239:49"><name pos:start="239:32" pos:end="239:44">get_sync_ipts</name><argument_list pos:start="239:45" pos:end="239:49">(<argument pos:start="239:46" pos:end="239:48"><expr pos:start="239:46" pos:end="239:48"><name pos:start="239:46" pos:end="239:48">ost</name></expr></argument>)</argument_list></call> <operator pos:start="239:51" pos:end="239:51">*</operator> <name pos:start="239:53" pos:end="239:68"><name pos:start="239:53" pos:end="239:55">enc</name><operator pos:start="239:56" pos:end="239:57">-&gt;</operator><name pos:start="239:58" pos:end="239:68">sample_rate</name></name></expr></argument>)</argument_list></call>

                        <operator pos:start="241:25" pos:end="241:25">-</operator> <call pos:start="241:27" pos:end="241:49"><name pos:start="241:27" pos:end="241:38">av_fifo_size</name><argument_list pos:start="241:39" pos:end="241:49">(<argument pos:start="241:40" pos:end="241:48"><expr pos:start="241:40" pos:end="241:48"><name pos:start="241:40" pos:end="241:48"><name pos:start="241:40" pos:end="241:42">ost</name><operator pos:start="241:43" pos:end="241:44">-&gt;</operator><name pos:start="241:45" pos:end="241:48">fifo</name></name></expr></argument>)</argument_list></call><operator pos:start="241:50" pos:end="241:50">/</operator><operator pos:start="241:51" pos:end="241:51">(</operator><name pos:start="241:52" pos:end="241:64"><name pos:start="241:52" pos:end="241:54">enc</name><operator pos:start="241:55" pos:end="241:56">-&gt;</operator><name pos:start="241:57" pos:end="241:64">channels</name></name> <operator pos:start="241:66" pos:end="241:66">*</operator> <literal type="number" pos:start="241:68" pos:end="241:68">2</literal><operator pos:start="241:69" pos:end="241:69">)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="line" pos:start="241:72" pos:end="241:84">//FIXME wrong</comment>



    <if_stmt pos:start="245:5" pos:end="263:5"><if pos:start="245:5" pos:end="257:5">if <condition pos:start="245:8" pos:end="245:28">(<expr pos:start="245:9" pos:end="245:27"><name pos:start="245:9" pos:end="245:27"><name pos:start="245:9" pos:end="245:11">ost</name><operator pos:start="245:12" pos:end="245:13">-&gt;</operator><name pos:start="245:14" pos:end="245:27">audio_resample</name></name></expr>)</condition> <block pos:start="245:30" pos:end="257:5">{<block_content pos:start="247:9" pos:end="255:52">

        <expr_stmt pos:start="247:9" pos:end="247:27"><expr pos:start="247:9" pos:end="247:26"><name pos:start="247:9" pos:end="247:14">buftmp</name> <operator pos:start="247:16" pos:end="247:16">=</operator> <name pos:start="247:18" pos:end="247:26">audio_buf</name></expr>;</expr_stmt>

        <expr_stmt pos:start="249:9" pos:end="253:66"><expr pos:start="249:9" pos:end="253:65"><name pos:start="249:9" pos:end="249:16">size_out</name> <operator pos:start="249:18" pos:end="249:18">=</operator> <call pos:start="249:20" pos:end="253:65"><name pos:start="249:20" pos:end="249:33">audio_resample</name><argument_list pos:start="249:34" pos:end="253:65">(<argument pos:start="249:35" pos:end="249:47"><expr pos:start="249:35" pos:end="249:47"><name pos:start="249:35" pos:end="249:47"><name pos:start="249:35" pos:end="249:37">ost</name><operator pos:start="249:38" pos:end="249:39">-&gt;</operator><name pos:start="249:40" pos:end="249:47">resample</name></name></expr></argument>,

                                  <argument pos:start="251:35" pos:end="251:49"><expr pos:start="251:35" pos:end="251:49"><operator pos:start="251:35" pos:end="251:35">(</operator><name pos:start="251:36" pos:end="251:40">short</name> <operator pos:start="251:42" pos:end="251:42">*</operator><operator pos:start="251:43" pos:end="251:43">)</operator><name pos:start="251:44" pos:end="251:49">buftmp</name></expr></argument>, <argument pos:start="251:52" pos:end="251:63"><expr pos:start="251:52" pos:end="251:63"><operator pos:start="251:52" pos:end="251:52">(</operator><name pos:start="251:53" pos:end="251:57">short</name> <operator pos:start="251:59" pos:end="251:59">*</operator><operator pos:start="251:60" pos:end="251:60">)</operator><name pos:start="251:61" pos:end="251:63">buf</name></expr></argument>,

                                  <argument pos:start="253:35" pos:end="253:64"><expr pos:start="253:35" pos:end="253:64"><name pos:start="253:35" pos:end="253:38">size</name> <operator pos:start="253:40" pos:end="253:40">/</operator> <operator pos:start="253:42" pos:end="253:42">(</operator><name pos:start="253:43" pos:end="253:55"><name pos:start="253:43" pos:end="253:45">dec</name><operator pos:start="253:46" pos:end="253:47">-&gt;</operator><name pos:start="253:48" pos:end="253:55">channels</name></name> <operator pos:start="253:57" pos:end="253:57">*</operator> <name pos:start="253:59" pos:end="253:63">isize</name><operator pos:start="253:64" pos:end="253:64">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="255:9" pos:end="255:52"><expr pos:start="255:9" pos:end="255:51"><name pos:start="255:9" pos:end="255:16">size_out</name> <operator pos:start="255:18" pos:end="255:18">=</operator> <name pos:start="255:20" pos:end="255:27">size_out</name> <operator pos:start="255:29" pos:end="255:29">*</operator> <name pos:start="255:31" pos:end="255:43"><name pos:start="255:31" pos:end="255:33">enc</name><operator pos:start="255:34" pos:end="255:35">-&gt;</operator><name pos:start="255:36" pos:end="255:43">channels</name></name> <operator pos:start="255:45" pos:end="255:45">*</operator> <name pos:start="255:47" pos:end="255:51">osize</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="257:7" pos:end="263:5">else <block pos:start="257:12" pos:end="263:5">{<block_content pos:start="259:9" pos:end="261:24">

        <expr_stmt pos:start="259:9" pos:end="259:21"><expr pos:start="259:9" pos:end="259:20"><name pos:start="259:9" pos:end="259:14">buftmp</name> <operator pos:start="259:16" pos:end="259:16">=</operator> <name pos:start="259:18" pos:end="259:20">buf</name></expr>;</expr_stmt>

        <expr_stmt pos:start="261:9" pos:end="261:24"><expr pos:start="261:9" pos:end="261:23"><name pos:start="261:9" pos:end="261:16">size_out</name> <operator pos:start="261:18" pos:end="261:18">=</operator> <name pos:start="261:20" pos:end="261:23">size</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="267:5" pos:end="295:5"><if pos:start="267:5" pos:end="295:5">if <condition pos:start="267:8" pos:end="267:65">(<expr pos:start="267:9" pos:end="267:64"><operator pos:start="267:9" pos:end="267:9">!</operator><name pos:start="267:10" pos:end="267:28"><name pos:start="267:10" pos:end="267:12">ost</name><operator pos:start="267:13" pos:end="267:14">-&gt;</operator><name pos:start="267:15" pos:end="267:28">audio_resample</name></name> <operator pos:start="267:30" pos:end="267:31">&amp;&amp;</operator> <name pos:start="267:33" pos:end="267:47"><name pos:start="267:33" pos:end="267:35">dec</name><operator pos:start="267:36" pos:end="267:37">-&gt;</operator><name pos:start="267:38" pos:end="267:47">sample_fmt</name></name><operator pos:start="267:48" pos:end="267:49">!=</operator><name pos:start="267:50" pos:end="267:64"><name pos:start="267:50" pos:end="267:52">enc</name><operator pos:start="267:53" pos:end="267:54">-&gt;</operator><name pos:start="267:55" pos:end="267:64">sample_fmt</name></name></expr>)</condition> <block pos:start="267:67" pos:end="295:5">{<block_content pos:start="269:9" pos:end="293:29">

        <decl_stmt pos:start="269:9" pos:end="269:38"><decl pos:start="269:9" pos:end="269:37"><type pos:start="269:9" pos:end="269:20"><specifier pos:start="269:9" pos:end="269:13">const</specifier> <name pos:start="269:15" pos:end="269:18">void</name> <modifier pos:start="269:20" pos:end="269:20">*</modifier></type><name pos:start="269:21" pos:end="269:27"><name pos:start="269:21" pos:end="269:24">ibuf</name><index pos:start="269:25" pos:end="269:27">[<expr pos:start="269:26" pos:end="269:26"><literal type="number" pos:start="269:26" pos:end="269:26">6</literal></expr>]</index></name><init pos:start="269:28" pos:end="269:37">= <expr pos:start="269:30" pos:end="269:37"><block pos:start="269:30" pos:end="269:37">{<expr pos:start="269:31" pos:end="269:36"><name pos:start="269:31" pos:end="269:36">buftmp</name></expr>}</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="271:9" pos:end="271:35"><decl pos:start="271:9" pos:end="271:34"><type pos:start="271:9" pos:end="271:14"><name pos:start="271:9" pos:end="271:12">void</name> <modifier pos:start="271:14" pos:end="271:14">*</modifier></type><name pos:start="271:15" pos:end="271:21"><name pos:start="271:15" pos:end="271:18">obuf</name><index pos:start="271:19" pos:end="271:21">[<expr pos:start="271:20" pos:end="271:20"><literal type="number" pos:start="271:20" pos:end="271:20">6</literal></expr>]</index></name><init pos:start="271:22" pos:end="271:34">= <expr pos:start="271:24" pos:end="271:34"><block pos:start="271:24" pos:end="271:34">{<expr pos:start="271:25" pos:end="271:33"><name pos:start="271:25" pos:end="271:33">audio_buf</name></expr>}</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="273:9" pos:end="273:32"><decl pos:start="273:9" pos:end="273:31"><type pos:start="273:9" pos:end="273:11"><name pos:start="273:9" pos:end="273:11">int</name></type> <name pos:start="273:13" pos:end="273:22"><name pos:start="273:13" pos:end="273:19">istride</name><index pos:start="273:20" pos:end="273:22">[<expr pos:start="273:21" pos:end="273:21"><literal type="number" pos:start="273:21" pos:end="273:21">6</literal></expr>]</index></name><init pos:start="273:23" pos:end="273:31">= <expr pos:start="273:25" pos:end="273:31"><block pos:start="273:25" pos:end="273:31">{<expr pos:start="273:26" pos:end="273:30"><name pos:start="273:26" pos:end="273:30">isize</name></expr>}</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="275:9" pos:end="275:32"><decl pos:start="275:9" pos:end="275:31"><type pos:start="275:9" pos:end="275:11"><name pos:start="275:9" pos:end="275:11">int</name></type> <name pos:start="275:13" pos:end="275:22"><name pos:start="275:13" pos:end="275:19">ostride</name><index pos:start="275:20" pos:end="275:22">[<expr pos:start="275:21" pos:end="275:21"><literal type="number" pos:start="275:21" pos:end="275:21">6</literal></expr>]</index></name><init pos:start="275:23" pos:end="275:31">= <expr pos:start="275:25" pos:end="275:31"><block pos:start="275:25" pos:end="275:31">{<expr pos:start="275:26" pos:end="275:30"><name pos:start="275:26" pos:end="275:30">osize</name></expr>}</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="277:9" pos:end="277:37"><decl pos:start="277:9" pos:end="277:36"><type pos:start="277:9" pos:end="277:11"><name pos:start="277:9" pos:end="277:11">int</name></type> <name pos:start="277:13" pos:end="277:15">len</name><init pos:start="277:16" pos:end="277:36">= <expr pos:start="277:18" pos:end="277:36"><name pos:start="277:18" pos:end="277:25">size_out</name><operator pos:start="277:26" pos:end="277:26">/</operator><name pos:start="277:27" pos:end="277:36"><name pos:start="277:27" pos:end="277:33">istride</name><index pos:start="277:34" pos:end="277:36">[<expr pos:start="277:35" pos:end="277:35"><literal type="number" pos:start="277:35" pos:end="277:35">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="279:9" pos:end="289:9"><if pos:start="279:9" pos:end="289:9">if <condition pos:start="279:12" pos:end="279:85">(<expr pos:start="279:13" pos:end="279:84"><call pos:start="279:13" pos:end="279:82"><name pos:start="279:13" pos:end="279:28">av_audio_convert</name><argument_list pos:start="279:29" pos:end="279:82">(<argument pos:start="279:30" pos:end="279:46"><expr pos:start="279:30" pos:end="279:46"><name pos:start="279:30" pos:end="279:46"><name pos:start="279:30" pos:end="279:32">ost</name><operator pos:start="279:33" pos:end="279:34">-&gt;</operator><name pos:start="279:35" pos:end="279:46">reformat_ctx</name></name></expr></argument>, <argument pos:start="279:49" pos:end="279:52"><expr pos:start="279:49" pos:end="279:52"><name pos:start="279:49" pos:end="279:52">obuf</name></expr></argument>, <argument pos:start="279:55" pos:end="279:61"><expr pos:start="279:55" pos:end="279:61"><name pos:start="279:55" pos:end="279:61">ostride</name></expr></argument>, <argument pos:start="279:64" pos:end="279:67"><expr pos:start="279:64" pos:end="279:67"><name pos:start="279:64" pos:end="279:67">ibuf</name></expr></argument>, <argument pos:start="279:70" pos:end="279:76"><expr pos:start="279:70" pos:end="279:76"><name pos:start="279:70" pos:end="279:76">istride</name></expr></argument>, <argument pos:start="279:79" pos:end="279:81"><expr pos:start="279:79" pos:end="279:81"><name pos:start="279:79" pos:end="279:81">len</name></expr></argument>)</argument_list></call><operator pos:start="279:83" pos:end="279:83">&lt;</operator><literal type="number" pos:start="279:84" pos:end="279:84">0</literal></expr>)</condition> <block pos:start="279:87" pos:end="289:9">{<block_content pos:start="281:13" pos:end="287:19">

            <expr_stmt pos:start="281:13" pos:end="281:50"><expr pos:start="281:13" pos:end="281:49"><call pos:start="281:13" pos:end="281:49"><name pos:start="281:13" pos:end="281:18">printf</name><argument_list pos:start="281:19" pos:end="281:49">(<argument pos:start="281:20" pos:end="281:48"><expr pos:start="281:20" pos:end="281:48"><literal type="string" pos:start="281:20" pos:end="281:48">"av_audio_convert() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="283:13" pos:end="285:31"><if pos:start="283:13" pos:end="285:31">if <condition pos:start="283:16" pos:end="283:30">(<expr pos:start="283:17" pos:end="283:29"><name pos:start="283:17" pos:end="283:29">exit_on_error</name></expr>)</condition><block type="pseudo" pos:start="285:17" pos:end="285:31"><block_content pos:start="285:17" pos:end="285:31">

                <expr_stmt pos:start="285:17" pos:end="285:31"><expr pos:start="285:17" pos:end="285:30"><call pos:start="285:17" pos:end="285:30"><name pos:start="285:17" pos:end="285:27">ffmpeg_exit</name><argument_list pos:start="285:28" pos:end="285:30">(<argument pos:start="285:29" pos:end="285:29"><expr pos:start="285:29" pos:end="285:29"><literal type="number" pos:start="285:29" pos:end="285:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <return pos:start="287:13" pos:end="287:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="291:9" pos:end="291:27"><expr pos:start="291:9" pos:end="291:26"><name pos:start="291:9" pos:end="291:14">buftmp</name> <operator pos:start="291:16" pos:end="291:16">=</operator> <name pos:start="291:18" pos:end="291:26">audio_buf</name></expr>;</expr_stmt>

        <expr_stmt pos:start="293:9" pos:end="293:29"><expr pos:start="293:9" pos:end="293:28"><name pos:start="293:9" pos:end="293:16">size_out</name> <operator pos:start="293:18" pos:end="293:18">=</operator> <name pos:start="293:20" pos:end="293:22">len</name><operator pos:start="293:23" pos:end="293:23">*</operator><name pos:start="293:24" pos:end="293:28">osize</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="299:5" pos:end="299:47">/* now encode as many frames as possible */</comment>

    <if_stmt pos:start="301:5" pos:end="435:5"><if pos:start="301:5" pos:end="371:5">if <condition pos:start="301:8" pos:end="301:28">(<expr pos:start="301:9" pos:end="301:27"><name pos:start="301:9" pos:end="301:23"><name pos:start="301:9" pos:end="301:11">enc</name><operator pos:start="301:12" pos:end="301:13">-&gt;</operator><name pos:start="301:14" pos:end="301:23">frame_size</name></name> <operator pos:start="301:25" pos:end="301:25">&gt;</operator> <literal type="number" pos:start="301:27" pos:end="301:27">1</literal></expr>)</condition> <block pos:start="301:30" pos:end="371:5">{<block_content pos:start="305:9" pos:end="369:9">

        <comment type="block" pos:start="303:9" pos:end="303:42">/* output resampled raw samples */</comment>

        <if_stmt pos:start="305:9" pos:end="311:9"><if pos:start="305:9" pos:end="311:9">if <condition pos:start="305:12" pos:end="305:80">(<expr pos:start="305:13" pos:end="305:79"><call pos:start="305:13" pos:end="305:75"><name pos:start="305:13" pos:end="305:28">av_fifo_realloc2</name><argument_list pos:start="305:29" pos:end="305:75">(<argument pos:start="305:30" pos:end="305:38"><expr pos:start="305:30" pos:end="305:38"><name pos:start="305:30" pos:end="305:38"><name pos:start="305:30" pos:end="305:32">ost</name><operator pos:start="305:33" pos:end="305:34">-&gt;</operator><name pos:start="305:35" pos:end="305:38">fifo</name></name></expr></argument>, <argument pos:start="305:41" pos:end="305:74"><expr pos:start="305:41" pos:end="305:74"><call pos:start="305:41" pos:end="305:63"><name pos:start="305:41" pos:end="305:52">av_fifo_size</name><argument_list pos:start="305:53" pos:end="305:63">(<argument pos:start="305:54" pos:end="305:62"><expr pos:start="305:54" pos:end="305:62"><name pos:start="305:54" pos:end="305:62"><name pos:start="305:54" pos:end="305:56">ost</name><operator pos:start="305:57" pos:end="305:58">-&gt;</operator><name pos:start="305:59" pos:end="305:62">fifo</name></name></expr></argument>)</argument_list></call> <operator pos:start="305:65" pos:end="305:65">+</operator> <name pos:start="305:67" pos:end="305:74">size_out</name></expr></argument>)</argument_list></call> <operator pos:start="305:77" pos:end="305:77">&lt;</operator> <literal type="number" pos:start="305:79" pos:end="305:79">0</literal></expr>)</condition> <block pos:start="305:82" pos:end="311:9">{<block_content pos:start="307:13" pos:end="309:27">

            <expr_stmt pos:start="307:13" pos:end="307:59"><expr pos:start="307:13" pos:end="307:58"><call pos:start="307:13" pos:end="307:58"><name pos:start="307:13" pos:end="307:19">fprintf</name><argument_list pos:start="307:20" pos:end="307:58">(<argument pos:start="307:21" pos:end="307:26"><expr pos:start="307:21" pos:end="307:26"><name pos:start="307:21" pos:end="307:26">stderr</name></expr></argument>, <argument pos:start="307:29" pos:end="307:57"><expr pos:start="307:29" pos:end="307:57"><literal type="string" pos:start="307:29" pos:end="307:57">"av_fifo_realloc2() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="309:13" pos:end="309:27"><expr pos:start="309:13" pos:end="309:26"><call pos:start="309:13" pos:end="309:26"><name pos:start="309:13" pos:end="309:23">ffmpeg_exit</name><argument_list pos:start="309:24" pos:end="309:26">(<argument pos:start="309:25" pos:end="309:25"><expr pos:start="309:25" pos:end="309:25"><literal type="number" pos:start="309:25" pos:end="309:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="313:9" pos:end="313:65"><expr pos:start="313:9" pos:end="313:64"><call pos:start="313:9" pos:end="313:64"><name pos:start="313:9" pos:end="313:29">av_fifo_generic_write</name><argument_list pos:start="313:30" pos:end="313:64">(<argument pos:start="313:31" pos:end="313:39"><expr pos:start="313:31" pos:end="313:39"><name pos:start="313:31" pos:end="313:39"><name pos:start="313:31" pos:end="313:33">ost</name><operator pos:start="313:34" pos:end="313:35">-&gt;</operator><name pos:start="313:36" pos:end="313:39">fifo</name></name></expr></argument>, <argument pos:start="313:42" pos:end="313:47"><expr pos:start="313:42" pos:end="313:47"><name pos:start="313:42" pos:end="313:47">buftmp</name></expr></argument>, <argument pos:start="313:50" pos:end="313:57"><expr pos:start="313:50" pos:end="313:57"><name pos:start="313:50" pos:end="313:57">size_out</name></expr></argument>, <argument pos:start="313:60" pos:end="313:63"><expr pos:start="313:60" pos:end="313:63"><name pos:start="313:60" pos:end="313:63">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="317:9" pos:end="317:62"><expr pos:start="317:9" pos:end="317:61"><name pos:start="317:9" pos:end="317:19">frame_bytes</name> <operator pos:start="317:21" pos:end="317:21">=</operator> <name pos:start="317:23" pos:end="317:37"><name pos:start="317:23" pos:end="317:25">enc</name><operator pos:start="317:26" pos:end="317:27">-&gt;</operator><name pos:start="317:28" pos:end="317:37">frame_size</name></name> <operator pos:start="317:39" pos:end="317:39">*</operator> <name pos:start="317:41" pos:end="317:45">osize</name> <operator pos:start="317:47" pos:end="317:47">*</operator> <name pos:start="317:49" pos:end="317:61"><name pos:start="317:49" pos:end="317:51">enc</name><operator pos:start="317:52" pos:end="317:53">-&gt;</operator><name pos:start="317:54" pos:end="317:61">channels</name></name></expr>;</expr_stmt>



        <while pos:start="321:9" pos:end="369:9">while <condition pos:start="321:15" pos:end="321:54">(<expr pos:start="321:16" pos:end="321:53"><call pos:start="321:16" pos:end="321:38"><name pos:start="321:16" pos:end="321:27">av_fifo_size</name><argument_list pos:start="321:28" pos:end="321:38">(<argument pos:start="321:29" pos:end="321:37"><expr pos:start="321:29" pos:end="321:37"><name pos:start="321:29" pos:end="321:37"><name pos:start="321:29" pos:end="321:31">ost</name><operator pos:start="321:32" pos:end="321:33">-&gt;</operator><name pos:start="321:34" pos:end="321:37">fifo</name></name></expr></argument>)</argument_list></call> <operator pos:start="321:40" pos:end="321:41">&gt;=</operator> <name pos:start="321:43" pos:end="321:53">frame_bytes</name></expr>)</condition> <block pos:start="321:56" pos:end="369:9">{<block_content pos:start="323:13" pos:end="367:46">

            <decl_stmt pos:start="323:13" pos:end="323:25"><decl pos:start="323:13" pos:end="323:24"><type pos:start="323:13" pos:end="323:20"><name pos:start="323:13" pos:end="323:20">AVPacket</name></type> <name pos:start="323:22" pos:end="323:24">pkt</name></decl>;</decl_stmt>

            <expr_stmt pos:start="325:13" pos:end="325:33"><expr pos:start="325:13" pos:end="325:32"><call pos:start="325:13" pos:end="325:32"><name pos:start="325:13" pos:end="325:26">av_init_packet</name><argument_list pos:start="325:27" pos:end="325:32">(<argument pos:start="325:28" pos:end="325:31"><expr pos:start="325:28" pos:end="325:31"><operator pos:start="325:28" pos:end="325:28">&amp;</operator><name pos:start="325:29" pos:end="325:31">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="329:13" pos:end="329:74"><expr pos:start="329:13" pos:end="329:73"><call pos:start="329:13" pos:end="329:73"><name pos:start="329:13" pos:end="329:32">av_fifo_generic_read</name><argument_list pos:start="329:33" pos:end="329:73">(<argument pos:start="329:34" pos:end="329:42"><expr pos:start="329:34" pos:end="329:42"><name pos:start="329:34" pos:end="329:42"><name pos:start="329:34" pos:end="329:36">ost</name><operator pos:start="329:37" pos:end="329:38">-&gt;</operator><name pos:start="329:39" pos:end="329:42">fifo</name></name></expr></argument>, <argument pos:start="329:45" pos:end="329:53"><expr pos:start="329:45" pos:end="329:53"><name pos:start="329:45" pos:end="329:53">audio_buf</name></expr></argument>, <argument pos:start="329:56" pos:end="329:66"><expr pos:start="329:56" pos:end="329:66"><name pos:start="329:56" pos:end="329:66">frame_bytes</name></expr></argument>, <argument pos:start="329:69" pos:end="329:72"><expr pos:start="329:69" pos:end="329:72"><name pos:start="329:69" pos:end="329:72">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="line" pos:start="333:13" pos:end="333:80">//FIXME pass ost-&gt;sync_opts as AVFrame.pts in avcodec_encode_audio()</comment>



            <expr_stmt pos:start="337:13" pos:end="339:59"><expr pos:start="337:13" pos:end="339:58"><name pos:start="337:13" pos:end="337:15">ret</name> <operator pos:start="337:17" pos:end="337:17">=</operator> <call pos:start="337:19" pos:end="339:58"><name pos:start="337:19" pos:end="337:38">avcodec_encode_audio</name><argument_list pos:start="337:39" pos:end="339:58">(<argument pos:start="337:40" pos:end="337:42"><expr pos:start="337:40" pos:end="337:42"><name pos:start="337:40" pos:end="337:42">enc</name></expr></argument>, <argument pos:start="337:45" pos:end="337:53"><expr pos:start="337:45" pos:end="337:53"><name pos:start="337:45" pos:end="337:53">audio_out</name></expr></argument>, <argument pos:start="337:56" pos:end="337:69"><expr pos:start="337:56" pos:end="337:69"><name pos:start="337:56" pos:end="337:69">audio_out_size</name></expr></argument>,

                                       <argument pos:start="339:40" pos:end="339:57"><expr pos:start="339:40" pos:end="339:57"><operator pos:start="339:40" pos:end="339:40">(</operator><name pos:start="339:41" pos:end="339:45">short</name> <operator pos:start="339:47" pos:end="339:47">*</operator><operator pos:start="339:48" pos:end="339:48">)</operator><name pos:start="339:49" pos:end="339:57">audio_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="341:13" pos:end="347:13"><if pos:start="341:13" pos:end="347:13">if <condition pos:start="341:16" pos:end="341:24">(<expr pos:start="341:17" pos:end="341:23"><name pos:start="341:17" pos:end="341:19">ret</name> <operator pos:start="341:21" pos:end="341:21">&lt;</operator> <literal type="number" pos:start="341:23" pos:end="341:23">0</literal></expr>)</condition> <block pos:start="341:26" pos:end="347:13">{<block_content pos:start="343:17" pos:end="345:31">

                <expr_stmt pos:start="343:17" pos:end="343:59"><expr pos:start="343:17" pos:end="343:58"><call pos:start="343:17" pos:end="343:58"><name pos:start="343:17" pos:end="343:23">fprintf</name><argument_list pos:start="343:24" pos:end="343:58">(<argument pos:start="343:25" pos:end="343:30"><expr pos:start="343:25" pos:end="343:30"><name pos:start="343:25" pos:end="343:30">stderr</name></expr></argument>, <argument pos:start="343:33" pos:end="343:57"><expr pos:start="343:33" pos:end="343:57"><literal type="string" pos:start="343:33" pos:end="343:57">"Audio encoding failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="345:17" pos:end="345:31"><expr pos:start="345:17" pos:end="345:30"><call pos:start="345:17" pos:end="345:30"><name pos:start="345:17" pos:end="345:27">ffmpeg_exit</name><argument_list pos:start="345:28" pos:end="345:30">(<argument pos:start="345:29" pos:end="345:29"><expr pos:start="345:29" pos:end="345:29"><literal type="number" pos:start="345:29" pos:end="345:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="349:13" pos:end="349:30"><expr pos:start="349:13" pos:end="349:29"><name pos:start="349:13" pos:end="349:22">audio_size</name> <operator pos:start="349:24" pos:end="349:25">+=</operator> <name pos:start="349:27" pos:end="349:29">ret</name></expr>;</expr_stmt>

            <expr_stmt pos:start="351:13" pos:end="351:41"><expr pos:start="351:13" pos:end="351:40"><name pos:start="351:13" pos:end="351:28"><name pos:start="351:13" pos:end="351:15">pkt</name><operator pos:start="351:16" pos:end="351:16">.</operator><name pos:start="351:17" pos:end="351:28">stream_index</name></name><operator pos:start="351:29" pos:end="351:29">=</operator> <name pos:start="351:31" pos:end="351:40"><name pos:start="351:31" pos:end="351:33">ost</name><operator pos:start="351:34" pos:end="351:35">-&gt;</operator><name pos:start="351:36" pos:end="351:40">index</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="353:13" pos:end="353:32"><expr pos:start="353:13" pos:end="353:31"><name pos:start="353:13" pos:end="353:20"><name pos:start="353:13" pos:end="353:15">pkt</name><operator pos:start="353:16" pos:end="353:16">.</operator><name pos:start="353:17" pos:end="353:20">data</name></name><operator pos:start="353:21" pos:end="353:21">=</operator> <name pos:start="353:23" pos:end="353:31">audio_out</name></expr>;</expr_stmt>

            <expr_stmt pos:start="355:13" pos:end="355:26"><expr pos:start="355:13" pos:end="355:25"><name pos:start="355:13" pos:end="355:20"><name pos:start="355:13" pos:end="355:15">pkt</name><operator pos:start="355:16" pos:end="355:16">.</operator><name pos:start="355:17" pos:end="355:20">size</name></name><operator pos:start="355:21" pos:end="355:21">=</operator> <name pos:start="355:23" pos:end="355:25">ret</name></expr>;</expr_stmt>

            <if_stmt pos:start="357:13" pos:end="359:97"><if pos:start="357:13" pos:end="359:97">if<condition pos:start="357:15" pos:end="357:75">(<expr pos:start="357:16" pos:end="357:74"><name pos:start="357:16" pos:end="357:31"><name pos:start="357:16" pos:end="357:18">enc</name><operator pos:start="357:19" pos:end="357:20">-&gt;</operator><name pos:start="357:21" pos:end="357:31">coded_frame</name></name> <operator pos:start="357:33" pos:end="357:34">&amp;&amp;</operator> <name pos:start="357:36" pos:end="357:56"><name pos:start="357:36" pos:end="357:38">enc</name><operator pos:start="357:39" pos:end="357:40">-&gt;</operator><name pos:start="357:41" pos:end="357:51">coded_frame</name><operator pos:start="357:52" pos:end="357:53">-&gt;</operator><name pos:start="357:54" pos:end="357:56">pts</name></name> <operator pos:start="357:58" pos:end="357:59">!=</operator> <name pos:start="357:61" pos:end="357:74">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="359:17" pos:end="359:97"><block_content pos:start="359:17" pos:end="359:97">

                <expr_stmt pos:start="359:17" pos:end="359:97"><expr pos:start="359:17" pos:end="359:96"><name pos:start="359:17" pos:end="359:23"><name pos:start="359:17" pos:end="359:19">pkt</name><operator pos:start="359:20" pos:end="359:20">.</operator><name pos:start="359:21" pos:end="359:23">pts</name></name><operator pos:start="359:24" pos:end="359:24">=</operator> <call pos:start="359:26" pos:end="359:96"><name pos:start="359:26" pos:end="359:37">av_rescale_q</name><argument_list pos:start="359:38" pos:end="359:96">(<argument pos:start="359:39" pos:end="359:59"><expr pos:start="359:39" pos:end="359:59"><name pos:start="359:39" pos:end="359:59"><name pos:start="359:39" pos:end="359:41">enc</name><operator pos:start="359:42" pos:end="359:43">-&gt;</operator><name pos:start="359:44" pos:end="359:54">coded_frame</name><operator pos:start="359:55" pos:end="359:56">-&gt;</operator><name pos:start="359:57" pos:end="359:59">pts</name></name></expr></argument>, <argument pos:start="359:62" pos:end="359:75"><expr pos:start="359:62" pos:end="359:75"><name pos:start="359:62" pos:end="359:75"><name pos:start="359:62" pos:end="359:64">enc</name><operator pos:start="359:65" pos:end="359:66">-&gt;</operator><name pos:start="359:67" pos:end="359:75">time_base</name></name></expr></argument>, <argument pos:start="359:78" pos:end="359:95"><expr pos:start="359:78" pos:end="359:95"><name pos:start="359:78" pos:end="359:95"><name pos:start="359:78" pos:end="359:80">ost</name><operator pos:start="359:81" pos:end="359:82">-&gt;</operator><name pos:start="359:83" pos:end="359:84">st</name><operator pos:start="359:85" pos:end="359:86">-&gt;</operator><name pos:start="359:87" pos:end="359:95">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="361:13" pos:end="361:41"><expr pos:start="361:13" pos:end="361:40"><name pos:start="361:13" pos:end="361:21"><name pos:start="361:13" pos:end="361:15">pkt</name><operator pos:start="361:16" pos:end="361:16">.</operator><name pos:start="361:17" pos:end="361:21">flags</name></name> <operator pos:start="361:23" pos:end="361:24">|=</operator> <name pos:start="361:26" pos:end="361:40">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt>

            <expr_stmt pos:start="363:13" pos:end="363:92"><expr pos:start="363:13" pos:end="363:91"><call pos:start="363:13" pos:end="363:91"><name pos:start="363:13" pos:end="363:23">write_frame</name><argument_list pos:start="363:24" pos:end="363:91">(<argument pos:start="363:25" pos:end="363:25"><expr pos:start="363:25" pos:end="363:25"><name pos:start="363:25" pos:end="363:25">s</name></expr></argument>, <argument pos:start="363:28" pos:end="363:31"><expr pos:start="363:28" pos:end="363:31"><operator pos:start="363:28" pos:end="363:28">&amp;</operator><name pos:start="363:29" pos:end="363:31">pkt</name></expr></argument>, <argument pos:start="363:34" pos:end="363:36"><expr pos:start="363:34" pos:end="363:36"><name pos:start="363:34" pos:end="363:36">enc</name></expr></argument>, <argument pos:start="363:39" pos:end="363:90"><expr pos:start="363:39" pos:end="363:90"><name pos:start="363:39" pos:end="363:90"><name pos:start="363:39" pos:end="363:55">bitstream_filters</name><index pos:start="363:56" pos:end="363:72">[<expr pos:start="363:57" pos:end="363:71"><name pos:start="363:57" pos:end="363:71"><name pos:start="363:57" pos:end="363:59">ost</name><operator pos:start="363:60" pos:end="363:61">-&gt;</operator><name pos:start="363:62" pos:end="363:71">file_index</name></name></expr>]</index><index pos:start="363:73" pos:end="363:90">[<expr pos:start="363:74" pos:end="363:89"><name pos:start="363:74" pos:end="363:89"><name pos:start="363:74" pos:end="363:76">pkt</name><operator pos:start="363:77" pos:end="363:77">.</operator><name pos:start="363:78" pos:end="363:89">stream_index</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="367:13" pos:end="367:46"><expr pos:start="367:13" pos:end="367:45"><name pos:start="367:13" pos:end="367:26"><name pos:start="367:13" pos:end="367:15">ost</name><operator pos:start="367:16" pos:end="367:17">-&gt;</operator><name pos:start="367:18" pos:end="367:26">sync_opts</name></name> <operator pos:start="367:28" pos:end="367:29">+=</operator> <name pos:start="367:31" pos:end="367:45"><name pos:start="367:31" pos:end="367:33">enc</name><operator pos:start="367:34" pos:end="367:35">-&gt;</operator><name pos:start="367:36" pos:end="367:45">frame_size</name></name></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></if> <else pos:start="371:7" pos:end="435:5">else <block pos:start="371:12" pos:end="435:5">{<block_content pos:start="373:9" pos:end="433:88">

        <decl_stmt pos:start="373:9" pos:end="373:21"><decl pos:start="373:9" pos:end="373:20"><type pos:start="373:9" pos:end="373:16"><name pos:start="373:9" pos:end="373:16">AVPacket</name></type> <name pos:start="373:18" pos:end="373:20">pkt</name></decl>;</decl_stmt>

        <expr_stmt pos:start="375:9" pos:end="375:29"><expr pos:start="375:9" pos:end="375:28"><call pos:start="375:9" pos:end="375:28"><name pos:start="375:9" pos:end="375:22">av_init_packet</name><argument_list pos:start="375:23" pos:end="375:28">(<argument pos:start="375:24" pos:end="375:27"><expr pos:start="375:24" pos:end="375:27"><operator pos:start="375:24" pos:end="375:24">&amp;</operator><name pos:start="375:25" pos:end="375:27">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="379:9" pos:end="379:61"><expr pos:start="379:9" pos:end="379:60"><name pos:start="379:9" pos:end="379:22"><name pos:start="379:9" pos:end="379:11">ost</name><operator pos:start="379:12" pos:end="379:13">-&gt;</operator><name pos:start="379:14" pos:end="379:22">sync_opts</name></name> <operator pos:start="379:24" pos:end="379:25">+=</operator> <name pos:start="379:27" pos:end="379:34">size_out</name> <operator pos:start="379:36" pos:end="379:36">/</operator> <operator pos:start="379:38" pos:end="379:38">(</operator><name pos:start="379:39" pos:end="379:43">osize</name> <operator pos:start="379:45" pos:end="379:45">*</operator> <name pos:start="379:47" pos:end="379:59"><name pos:start="379:47" pos:end="379:49">enc</name><operator pos:start="379:50" pos:end="379:51">-&gt;</operator><name pos:start="379:52" pos:end="379:59">channels</name></name><operator pos:start="379:60" pos:end="379:60">)</operator></expr>;</expr_stmt>



        <comment type="block" pos:start="383:9" pos:end="383:32">/* output a pcm frame */</comment>

        <comment type="block" pos:start="385:9" pos:end="385:52">/* determine the size of the coded buffer */</comment>

        <expr_stmt pos:start="387:9" pos:end="387:26"><expr pos:start="387:9" pos:end="387:25"><name pos:start="387:9" pos:end="387:16">size_out</name> <operator pos:start="387:18" pos:end="387:19">/=</operator> <name pos:start="387:21" pos:end="387:25">osize</name></expr>;</expr_stmt>

        <if_stmt pos:start="389:9" pos:end="391:44"><if pos:start="389:9" pos:end="391:44">if <condition pos:start="389:12" pos:end="389:22">(<expr pos:start="389:13" pos:end="389:21"><name pos:start="389:13" pos:end="389:21">coded_bps</name></expr>)</condition><block type="pseudo" pos:start="391:13" pos:end="391:44"><block_content pos:start="391:13" pos:end="391:44">

            <expr_stmt pos:start="391:13" pos:end="391:44"><expr pos:start="391:13" pos:end="391:43"><name pos:start="391:13" pos:end="391:20">size_out</name> <operator pos:start="391:22" pos:end="391:22">=</operator> <name pos:start="391:24" pos:end="391:31">size_out</name><operator pos:start="391:32" pos:end="391:32">*</operator><name pos:start="391:33" pos:end="391:41">coded_bps</name><operator pos:start="391:42" pos:end="391:42">/</operator><literal type="number" pos:start="391:43" pos:end="391:43">8</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="395:9" pos:end="401:9"><if pos:start="395:9" pos:end="401:9">if<condition pos:start="395:11" pos:end="395:37">(<expr pos:start="395:12" pos:end="395:36"><name pos:start="395:12" pos:end="395:19">size_out</name> <operator pos:start="395:21" pos:end="395:21">&gt;</operator> <name pos:start="395:23" pos:end="395:36">audio_out_size</name></expr>)</condition><block pos:start="395:38" pos:end="401:9">{<block_content pos:start="397:13" pos:end="399:27">

            <expr_stmt pos:start="397:13" pos:end="397:71"><expr pos:start="397:13" pos:end="397:70"><call pos:start="397:13" pos:end="397:70"><name pos:start="397:13" pos:end="397:19">fprintf</name><argument_list pos:start="397:20" pos:end="397:70">(<argument pos:start="397:21" pos:end="397:26"><expr pos:start="397:21" pos:end="397:26"><name pos:start="397:21" pos:end="397:26">stderr</name></expr></argument>, <argument pos:start="397:29" pos:end="397:69"><expr pos:start="397:29" pos:end="397:69"><literal type="string" pos:start="397:29" pos:end="397:69">"Internal error, buffer size too small\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="399:13" pos:end="399:27"><expr pos:start="399:13" pos:end="399:26"><call pos:start="399:13" pos:end="399:26"><name pos:start="399:13" pos:end="399:23">ffmpeg_exit</name><argument_list pos:start="399:24" pos:end="399:26">(<argument pos:start="399:25" pos:end="399:25"><expr pos:start="399:25" pos:end="399:25"><literal type="number" pos:start="399:25" pos:end="399:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="line" pos:start="405:9" pos:end="405:76">//FIXME pass ost-&gt;sync_opts as AVFrame.pts in avcodec_encode_audio()</comment>

        <expr_stmt pos:start="407:9" pos:end="409:52"><expr pos:start="407:9" pos:end="409:51"><name pos:start="407:9" pos:end="407:11">ret</name> <operator pos:start="407:13" pos:end="407:13">=</operator> <call pos:start="407:15" pos:end="409:51"><name pos:start="407:15" pos:end="407:34">avcodec_encode_audio</name><argument_list pos:start="407:35" pos:end="409:51">(<argument pos:start="407:36" pos:end="407:38"><expr pos:start="407:36" pos:end="407:38"><name pos:start="407:36" pos:end="407:38">enc</name></expr></argument>, <argument pos:start="407:41" pos:end="407:49"><expr pos:start="407:41" pos:end="407:49"><name pos:start="407:41" pos:end="407:49">audio_out</name></expr></argument>, <argument pos:start="407:52" pos:end="407:59"><expr pos:start="407:52" pos:end="407:59"><name pos:start="407:52" pos:end="407:59">size_out</name></expr></argument>,

                                   <argument pos:start="409:36" pos:end="409:50"><expr pos:start="409:36" pos:end="409:50"><operator pos:start="409:36" pos:end="409:36">(</operator><name pos:start="409:37" pos:end="409:41">short</name> <operator pos:start="409:43" pos:end="409:43">*</operator><operator pos:start="409:44" pos:end="409:44">)</operator><name pos:start="409:45" pos:end="409:50">buftmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="411:9" pos:end="417:9"><if pos:start="411:9" pos:end="417:9">if <condition pos:start="411:12" pos:end="411:20">(<expr pos:start="411:13" pos:end="411:19"><name pos:start="411:13" pos:end="411:15">ret</name> <operator pos:start="411:17" pos:end="411:17">&lt;</operator> <literal type="number" pos:start="411:19" pos:end="411:19">0</literal></expr>)</condition> <block pos:start="411:22" pos:end="417:9">{<block_content pos:start="413:13" pos:end="415:27">

            <expr_stmt pos:start="413:13" pos:end="413:55"><expr pos:start="413:13" pos:end="413:54"><call pos:start="413:13" pos:end="413:54"><name pos:start="413:13" pos:end="413:19">fprintf</name><argument_list pos:start="413:20" pos:end="413:54">(<argument pos:start="413:21" pos:end="413:26"><expr pos:start="413:21" pos:end="413:26"><name pos:start="413:21" pos:end="413:26">stderr</name></expr></argument>, <argument pos:start="413:29" pos:end="413:53"><expr pos:start="413:29" pos:end="413:53"><literal type="string" pos:start="413:29" pos:end="413:53">"Audio encoding failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="415:13" pos:end="415:27"><expr pos:start="415:13" pos:end="415:26"><call pos:start="415:13" pos:end="415:26"><name pos:start="415:13" pos:end="415:23">ffmpeg_exit</name><argument_list pos:start="415:24" pos:end="415:26">(<argument pos:start="415:25" pos:end="415:25"><expr pos:start="415:25" pos:end="415:25"><literal type="number" pos:start="415:25" pos:end="415:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="419:9" pos:end="419:26"><expr pos:start="419:9" pos:end="419:25"><name pos:start="419:9" pos:end="419:18">audio_size</name> <operator pos:start="419:20" pos:end="419:21">+=</operator> <name pos:start="419:23" pos:end="419:25">ret</name></expr>;</expr_stmt>

        <expr_stmt pos:start="421:9" pos:end="421:37"><expr pos:start="421:9" pos:end="421:36"><name pos:start="421:9" pos:end="421:24"><name pos:start="421:9" pos:end="421:11">pkt</name><operator pos:start="421:12" pos:end="421:12">.</operator><name pos:start="421:13" pos:end="421:24">stream_index</name></name><operator pos:start="421:25" pos:end="421:25">=</operator> <name pos:start="421:27" pos:end="421:36"><name pos:start="421:27" pos:end="421:29">ost</name><operator pos:start="421:30" pos:end="421:31">-&gt;</operator><name pos:start="421:32" pos:end="421:36">index</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="423:9" pos:end="423:28"><expr pos:start="423:9" pos:end="423:27"><name pos:start="423:9" pos:end="423:16"><name pos:start="423:9" pos:end="423:11">pkt</name><operator pos:start="423:12" pos:end="423:12">.</operator><name pos:start="423:13" pos:end="423:16">data</name></name><operator pos:start="423:17" pos:end="423:17">=</operator> <name pos:start="423:19" pos:end="423:27">audio_out</name></expr>;</expr_stmt>

        <expr_stmt pos:start="425:9" pos:end="425:22"><expr pos:start="425:9" pos:end="425:21"><name pos:start="425:9" pos:end="425:16"><name pos:start="425:9" pos:end="425:11">pkt</name><operator pos:start="425:12" pos:end="425:12">.</operator><name pos:start="425:13" pos:end="425:16">size</name></name><operator pos:start="425:17" pos:end="425:17">=</operator> <name pos:start="425:19" pos:end="425:21">ret</name></expr>;</expr_stmt>

        <if_stmt pos:start="427:9" pos:end="429:93"><if pos:start="427:9" pos:end="429:93">if<condition pos:start="427:11" pos:end="427:71">(<expr pos:start="427:12" pos:end="427:70"><name pos:start="427:12" pos:end="427:27"><name pos:start="427:12" pos:end="427:14">enc</name><operator pos:start="427:15" pos:end="427:16">-&gt;</operator><name pos:start="427:17" pos:end="427:27">coded_frame</name></name> <operator pos:start="427:29" pos:end="427:30">&amp;&amp;</operator> <name pos:start="427:32" pos:end="427:52"><name pos:start="427:32" pos:end="427:34">enc</name><operator pos:start="427:35" pos:end="427:36">-&gt;</operator><name pos:start="427:37" pos:end="427:47">coded_frame</name><operator pos:start="427:48" pos:end="427:49">-&gt;</operator><name pos:start="427:50" pos:end="427:52">pts</name></name> <operator pos:start="427:54" pos:end="427:55">!=</operator> <name pos:start="427:57" pos:end="427:70">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="429:13" pos:end="429:93"><block_content pos:start="429:13" pos:end="429:93">

            <expr_stmt pos:start="429:13" pos:end="429:93"><expr pos:start="429:13" pos:end="429:92"><name pos:start="429:13" pos:end="429:19"><name pos:start="429:13" pos:end="429:15">pkt</name><operator pos:start="429:16" pos:end="429:16">.</operator><name pos:start="429:17" pos:end="429:19">pts</name></name><operator pos:start="429:20" pos:end="429:20">=</operator> <call pos:start="429:22" pos:end="429:92"><name pos:start="429:22" pos:end="429:33">av_rescale_q</name><argument_list pos:start="429:34" pos:end="429:92">(<argument pos:start="429:35" pos:end="429:55"><expr pos:start="429:35" pos:end="429:55"><name pos:start="429:35" pos:end="429:55"><name pos:start="429:35" pos:end="429:37">enc</name><operator pos:start="429:38" pos:end="429:39">-&gt;</operator><name pos:start="429:40" pos:end="429:50">coded_frame</name><operator pos:start="429:51" pos:end="429:52">-&gt;</operator><name pos:start="429:53" pos:end="429:55">pts</name></name></expr></argument>, <argument pos:start="429:58" pos:end="429:71"><expr pos:start="429:58" pos:end="429:71"><name pos:start="429:58" pos:end="429:71"><name pos:start="429:58" pos:end="429:60">enc</name><operator pos:start="429:61" pos:end="429:62">-&gt;</operator><name pos:start="429:63" pos:end="429:71">time_base</name></name></expr></argument>, <argument pos:start="429:74" pos:end="429:91"><expr pos:start="429:74" pos:end="429:91"><name pos:start="429:74" pos:end="429:91"><name pos:start="429:74" pos:end="429:76">ost</name><operator pos:start="429:77" pos:end="429:78">-&gt;</operator><name pos:start="429:79" pos:end="429:80">st</name><operator pos:start="429:81" pos:end="429:82">-&gt;</operator><name pos:start="429:83" pos:end="429:91">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="431:9" pos:end="431:37"><expr pos:start="431:9" pos:end="431:36"><name pos:start="431:9" pos:end="431:17"><name pos:start="431:9" pos:end="431:11">pkt</name><operator pos:start="431:12" pos:end="431:12">.</operator><name pos:start="431:13" pos:end="431:17">flags</name></name> <operator pos:start="431:19" pos:end="431:20">|=</operator> <name pos:start="431:22" pos:end="431:36">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt>

        <expr_stmt pos:start="433:9" pos:end="433:88"><expr pos:start="433:9" pos:end="433:87"><call pos:start="433:9" pos:end="433:87"><name pos:start="433:9" pos:end="433:19">write_frame</name><argument_list pos:start="433:20" pos:end="433:87">(<argument pos:start="433:21" pos:end="433:21"><expr pos:start="433:21" pos:end="433:21"><name pos:start="433:21" pos:end="433:21">s</name></expr></argument>, <argument pos:start="433:24" pos:end="433:27"><expr pos:start="433:24" pos:end="433:27"><operator pos:start="433:24" pos:end="433:24">&amp;</operator><name pos:start="433:25" pos:end="433:27">pkt</name></expr></argument>, <argument pos:start="433:30" pos:end="433:32"><expr pos:start="433:30" pos:end="433:32"><name pos:start="433:30" pos:end="433:32">enc</name></expr></argument>, <argument pos:start="433:35" pos:end="433:86"><expr pos:start="433:35" pos:end="433:86"><name pos:start="433:35" pos:end="433:86"><name pos:start="433:35" pos:end="433:51">bitstream_filters</name><index pos:start="433:52" pos:end="433:68">[<expr pos:start="433:53" pos:end="433:67"><name pos:start="433:53" pos:end="433:67"><name pos:start="433:53" pos:end="433:55">ost</name><operator pos:start="433:56" pos:end="433:57">-&gt;</operator><name pos:start="433:58" pos:end="433:67">file_index</name></name></expr>]</index><index pos:start="433:69" pos:end="433:86">[<expr pos:start="433:70" pos:end="433:85"><name pos:start="433:70" pos:end="433:85"><name pos:start="433:70" pos:end="433:72">pkt</name><operator pos:start="433:73" pos:end="433:73">.</operator><name pos:start="433:74" pos:end="433:85">stream_index</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
