<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13476.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">vda_h264_decode_slice</name><parameter_list pos:start="1:33" pos:end="5:47">(<parameter pos:start="1:34" pos:end="1:54"><decl pos:start="1:34" pos:end="1:54"><type pos:start="1:34" pos:end="1:54"><name pos:start="1:34" pos:end="1:47">AVCodecContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:54">avctx</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:54"><decl pos:start="3:34" pos:end="3:54"><type pos:start="3:34" pos:end="3:54"><specifier pos:start="3:34" pos:end="3:38">const</specifier> <name pos:start="3:40" pos:end="3:46">uint8_t</name> <modifier pos:start="3:48" pos:end="3:48">*</modifier></type><name pos:start="3:49" pos:end="3:54">buffer</name></decl></parameter>,

                                 <parameter pos:start="5:34" pos:end="5:46"><decl pos:start="5:34" pos:end="5:46"><type pos:start="5:34" pos:end="5:46"><name pos:start="5:34" pos:end="5:41">uint32_t</name></type> <name pos:start="5:43" pos:end="5:46">size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="51:1">{<block_content pos:start="9:5" pos:end="49:13">

    <decl_stmt pos:start="9:5" pos:end="9:77"><decl pos:start="9:5" pos:end="9:76"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">VDAContext</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:19">vda</name>                     <init pos:start="9:41" pos:end="9:76">= <expr pos:start="9:43" pos:end="9:76"><name pos:start="9:43" pos:end="9:76"><name pos:start="9:43" pos:end="9:47">avctx</name><operator pos:start="9:48" pos:end="9:49">-&gt;</operator><name pos:start="9:50" pos:end="9:57">internal</name><operator pos:start="9:58" pos:end="9:59">-&gt;</operator><name pos:start="9:60" pos:end="9:76">hwaccel_priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:65"><decl pos:start="11:5" pos:end="11:64"><type pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:22">vda_context</name></name> <modifier pos:start="11:24" pos:end="11:24">*</modifier></type><name pos:start="11:25" pos:end="11:31">vda_ctx</name>         <init pos:start="11:41" pos:end="11:64">= <expr pos:start="11:43" pos:end="11:64"><name pos:start="11:43" pos:end="11:64"><name pos:start="11:43" pos:end="11:47">avctx</name><operator pos:start="11:48" pos:end="11:49">-&gt;</operator><name pos:start="11:50" pos:end="11:64">hwaccel_context</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:14"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">void</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:13">tmp</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:18"><if pos:start="17:5" pos:end="19:18">if <condition pos:start="17:8" pos:end="17:26">(<expr pos:start="17:9" pos:end="17:25"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:25"><name pos:start="17:10" pos:end="17:16">vda_ctx</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:25">decoder</name></name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:18"><block_content pos:start="19:9" pos:end="19:18">

        <return pos:start="19:9" pos:end="19:18">return <expr pos:start="19:16" pos:end="19:17"><operator pos:start="19:16" pos:end="19:16">-</operator><literal type="number" pos:start="19:17" pos:end="19:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="27:58"><expr pos:start="23:5" pos:end="27:57"><name pos:start="23:5" pos:end="23:7">tmp</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="27:57"><name pos:start="23:11" pos:end="23:25">av_fast_realloc</name><argument_list pos:start="23:26" pos:end="27:57">(<argument pos:start="23:27" pos:end="23:40"><expr pos:start="23:27" pos:end="23:40"><name pos:start="23:27" pos:end="23:40"><name pos:start="23:27" pos:end="23:29">vda</name><operator pos:start="23:30" pos:end="23:31">-&gt;</operator><name pos:start="23:32" pos:end="23:40">bitstream</name></name></expr></argument>,

                          <argument pos:start="25:27" pos:end="25:46"><expr pos:start="25:27" pos:end="25:46"><operator pos:start="25:27" pos:end="25:27">&amp;</operator><name pos:start="25:28" pos:end="25:46"><name pos:start="25:28" pos:end="25:30">vda</name><operator pos:start="25:31" pos:end="25:32">-&gt;</operator><name pos:start="25:33" pos:end="25:46">allocated_size</name></name></expr></argument>,

                          <argument pos:start="27:27" pos:end="27:56"><expr pos:start="27:27" pos:end="27:56"><name pos:start="27:27" pos:end="27:45"><name pos:start="27:27" pos:end="27:29">vda</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:45">bitstream_size</name></name> <operator pos:start="27:47" pos:end="27:47">+</operator> <name pos:start="27:49" pos:end="27:52">size</name> <operator pos:start="27:54" pos:end="27:54">+</operator> <literal type="number" pos:start="27:56" pos:end="27:56">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="31:31"><if pos:start="29:5" pos:end="31:31">if <condition pos:start="29:8" pos:end="29:13">(<expr pos:start="29:9" pos:end="29:12"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:12">tmp</name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:31"><block_content pos:start="31:9" pos:end="31:31">

        <return pos:start="31:9" pos:end="31:31">return <expr pos:start="31:16" pos:end="31:30"><call pos:start="31:16" pos:end="31:30"><name pos:start="31:16" pos:end="31:22">AVERROR</name><argument_list pos:start="31:23" pos:end="31:30">(<argument pos:start="31:24" pos:end="31:29"><expr pos:start="31:24" pos:end="31:29"><name pos:start="31:24" pos:end="31:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:25"><expr pos:start="35:5" pos:end="35:24"><name pos:start="35:5" pos:end="35:18"><name pos:start="35:5" pos:end="35:7">vda</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:18">bitstream</name></name> <operator pos:start="35:20" pos:end="35:20">=</operator> <name pos:start="35:22" pos:end="35:24">tmp</name></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:56"><expr pos:start="39:5" pos:end="39:55"><call pos:start="39:5" pos:end="39:55"><name pos:start="39:5" pos:end="39:11">AV_WB32</name><argument_list pos:start="39:12" pos:end="39:55">(<argument pos:start="39:13" pos:end="39:48"><expr pos:start="39:13" pos:end="39:48"><name pos:start="39:13" pos:end="39:26"><name pos:start="39:13" pos:end="39:15">vda</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:26">bitstream</name></name> <operator pos:start="39:28" pos:end="39:28">+</operator> <name pos:start="39:30" pos:end="39:48"><name pos:start="39:30" pos:end="39:32">vda</name><operator pos:start="39:33" pos:end="39:34">-&gt;</operator><name pos:start="39:35" pos:end="39:48">bitstream_size</name></name></expr></argument>, <argument pos:start="39:51" pos:end="39:54"><expr pos:start="39:51" pos:end="39:54"><name pos:start="39:51" pos:end="39:54">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:67"><expr pos:start="41:5" pos:end="41:66"><call pos:start="41:5" pos:end="41:66"><name pos:start="41:5" pos:end="41:10">memcpy</name><argument_list pos:start="41:11" pos:end="41:66">(<argument pos:start="41:12" pos:end="41:51"><expr pos:start="41:12" pos:end="41:51"><name pos:start="41:12" pos:end="41:25"><name pos:start="41:12" pos:end="41:14">vda</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:25">bitstream</name></name> <operator pos:start="41:27" pos:end="41:27">+</operator> <name pos:start="41:29" pos:end="41:47"><name pos:start="41:29" pos:end="41:31">vda</name><operator pos:start="41:32" pos:end="41:33">-&gt;</operator><name pos:start="41:34" pos:end="41:47">bitstream_size</name></name> <operator pos:start="41:49" pos:end="41:49">+</operator> <literal type="number" pos:start="41:51" pos:end="41:51">4</literal></expr></argument>, <argument pos:start="41:54" pos:end="41:59"><expr pos:start="41:54" pos:end="41:59"><name pos:start="41:54" pos:end="41:59">buffer</name></expr></argument>, <argument pos:start="41:62" pos:end="41:65"><expr pos:start="41:62" pos:end="41:65"><name pos:start="41:62" pos:end="41:65">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:36"><expr pos:start="45:5" pos:end="45:35"><name pos:start="45:5" pos:end="45:23"><name pos:start="45:5" pos:end="45:7">vda</name><operator pos:start="45:8" pos:end="45:9">-&gt;</operator><name pos:start="45:10" pos:end="45:23">bitstream_size</name></name> <operator pos:start="45:25" pos:end="45:26">+=</operator> <name pos:start="45:28" pos:end="45:31">size</name> <operator pos:start="45:33" pos:end="45:33">+</operator> <literal type="number" pos:start="45:35" pos:end="45:35">4</literal></expr>;</expr_stmt>



    <return pos:start="49:5" pos:end="49:13">return <expr pos:start="49:12" pos:end="49:12"><literal type="number" pos:start="49:12" pos:end="49:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
