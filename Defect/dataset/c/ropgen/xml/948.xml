<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/948.c" pos:tabs="8"><function pos:start="1:1" pos:end="351:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">mjpeg_decode_frame</name><parameter_list pos:start="1:30" pos:end="5:55">(<parameter pos:start="1:31" pos:end="1:51"><decl pos:start="1:31" pos:end="1:51"><type pos:start="1:31" pos:end="1:51"><name pos:start="1:31" pos:end="1:44">AVCodecContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">avctx</name></decl></parameter>, 

                              <parameter pos:start="3:31" pos:end="3:40"><decl pos:start="3:31" pos:end="3:40"><type pos:start="3:31" pos:end="3:40"><name pos:start="3:31" pos:end="3:34">void</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:40">data</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:56"><decl pos:start="3:43" pos:end="3:56"><type pos:start="3:43" pos:end="3:56"><name pos:start="3:43" pos:end="3:45">int</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:56">data_size</name></decl></parameter>,

                              <parameter pos:start="5:31" pos:end="5:40"><decl pos:start="5:31" pos:end="5:40"><type pos:start="5:31" pos:end="5:40"><name pos:start="5:31" pos:end="5:35">UINT8</name> <modifier pos:start="5:37" pos:end="5:37">*</modifier></type><name pos:start="5:38" pos:end="5:40">buf</name></decl></parameter>, <parameter pos:start="5:43" pos:end="5:54"><decl pos:start="5:43" pos:end="5:54"><type pos:start="5:43" pos:end="5:54"><name pos:start="5:43" pos:end="5:45">int</name></type> <name pos:start="5:47" pos:end="5:54">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="351:1">{<block_content pos:start="9:5" pos:end="349:25">

    <decl_stmt pos:start="9:5" pos:end="9:45"><decl pos:start="9:5" pos:end="9:44"><type pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:22">MJpegDecodeContext</name> <modifier pos:start="9:24" pos:end="9:24">*</modifier></type><name pos:start="9:25" pos:end="9:25">s</name> <init pos:start="9:27" pos:end="9:44">= <expr pos:start="9:29" pos:end="9:44"><name pos:start="9:29" pos:end="9:44"><name pos:start="9:29" pos:end="9:33">avctx</name><operator pos:start="9:34" pos:end="9:35">-&gt;</operator><name pos:start="9:36" pos:end="9:44">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">UINT8</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:18">buf_end</name></decl>, <decl pos:start="11:21" pos:end="11:28"><type ref="prev" pos:start="11:5" pos:end="11:11"><modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:28">buf_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:21"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:21">start_code</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:30"><decl pos:start="15:5" pos:end="15:29"><type pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:13">AVPicture</name> <modifier pos:start="15:15" pos:end="15:15">*</modifier></type><name pos:start="15:16" pos:end="15:22">picture</name> <init pos:start="15:24" pos:end="15:29">= <expr pos:start="15:26" pos:end="15:29"><name pos:start="15:26" pos:end="15:29">data</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:19"><expr pos:start="19:5" pos:end="19:18"><operator pos:start="19:5" pos:end="19:5">*</operator><name pos:start="19:6" pos:end="19:14">data_size</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <literal type="number" pos:start="19:18" pos:end="19:18">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:34">/* no supplementary picture */</comment>

    <if_stmt pos:start="25:5" pos:end="27:17"><if pos:start="25:5" pos:end="27:17">if <condition pos:start="25:8" pos:end="25:22">(<expr pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:16">buf_size</name> <operator pos:start="25:18" pos:end="25:19">==</operator> <literal type="number" pos:start="25:21" pos:end="25:21">0</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:17"><block_content pos:start="27:9" pos:end="27:17">

        <return pos:start="27:9" pos:end="27:17">return <expr pos:start="27:16" pos:end="27:16"><literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:18"><expr pos:start="31:5" pos:end="31:17"><name pos:start="31:5" pos:end="31:11">buf_ptr</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <name pos:start="31:15" pos:end="31:17">buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:29"><expr pos:start="33:5" pos:end="33:28"><name pos:start="33:5" pos:end="33:11">buf_end</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <name pos:start="33:15" pos:end="33:17">buf</name> <operator pos:start="33:19" pos:end="33:19">+</operator> <name pos:start="33:21" pos:end="33:28">buf_size</name></expr>;</expr_stmt>

    <while pos:start="35:5" pos:end="341:5">while <condition pos:start="35:11" pos:end="35:29">(<expr pos:start="35:12" pos:end="35:28"><name pos:start="35:12" pos:end="35:18">buf_ptr</name> <operator pos:start="35:20" pos:end="35:20">&lt;</operator> <name pos:start="35:22" pos:end="35:28">buf_end</name></expr>)</condition> <block pos:start="35:31" pos:end="341:5">{<block_content pos:start="39:9" pos:end="339:9">

        <comment type="block" pos:start="37:9" pos:end="37:36">/* find start next marker */</comment>

        <expr_stmt pos:start="39:9" pos:end="39:52"><expr pos:start="39:9" pos:end="39:51"><name pos:start="39:9" pos:end="39:18">start_code</name> <operator pos:start="39:20" pos:end="39:20">=</operator> <call pos:start="39:22" pos:end="39:51"><name pos:start="39:22" pos:end="39:32">find_marker</name><argument_list pos:start="39:33" pos:end="39:51">(<argument pos:start="39:34" pos:end="39:41"><expr pos:start="39:34" pos:end="39:41"><operator pos:start="39:34" pos:end="39:34">&amp;</operator><name pos:start="39:35" pos:end="39:41">buf_ptr</name></expr></argument>, <argument pos:start="39:44" pos:end="39:50"><expr pos:start="39:44" pos:end="39:50"><name pos:start="39:44" pos:end="39:50">buf_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<block pos:start="41:9" pos:end="339:9">{<block_content pos:start="45:13" pos:end="337:13">

	    <comment type="block" pos:start="43:13" pos:end="43:21">/* EOF */</comment>

            <if_stmt pos:start="45:13" pos:end="337:13"><if pos:start="45:13" pos:end="49:13">if <condition pos:start="45:16" pos:end="45:31">(<expr pos:start="45:17" pos:end="45:30"><name pos:start="45:17" pos:end="45:26">start_code</name> <operator pos:start="45:28" pos:end="45:28">&lt;</operator> <literal type="number" pos:start="45:30" pos:end="45:30">0</literal></expr>)</condition> <block pos:start="45:33" pos:end="49:13">{<block_content pos:start="47:17" pos:end="47:29">

		<goto pos:start="47:17" pos:end="47:29">goto <name pos:start="47:22" pos:end="47:28">the_end</name>;</goto>

            </block_content>}</block></if> <else pos:start="49:15" pos:end="337:13">else <block pos:start="49:20" pos:end="337:13">{<block_content pos:start="51:17" pos:end="335:74">

                <expr_stmt pos:start="51:17" pos:end="51:91"><expr pos:start="51:17" pos:end="51:90"><call pos:start="51:17" pos:end="51:90"><name pos:start="51:17" pos:end="51:23">dprintf</name><argument_list pos:start="51:24" pos:end="51:90">(<argument pos:start="51:25" pos:end="51:58"><expr pos:start="51:25" pos:end="51:58"><literal type="string" pos:start="51:25" pos:end="51:58">"marker=%x avail_size_in_buf=%d\n"</literal></expr></argument>, <argument pos:start="51:61" pos:end="51:70"><expr pos:start="51:61" pos:end="51:70"><name pos:start="51:61" pos:end="51:70">start_code</name></expr></argument>, <argument pos:start="51:73" pos:end="51:89"><expr pos:start="51:73" pos:end="51:89"><name pos:start="51:73" pos:end="51:79">buf_end</name> <operator pos:start="51:81" pos:end="51:81">-</operator> <name pos:start="51:83" pos:end="51:89">buf_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		

		<if_stmt pos:start="55:17" pos:end="69:17"><if pos:start="55:17" pos:end="69:17">if <condition pos:start="55:20" pos:end="55:57">(<expr pos:start="55:21" pos:end="55:56"><operator pos:start="55:21" pos:end="55:21">(</operator><name pos:start="55:22" pos:end="55:28">buf_end</name> <operator pos:start="55:30" pos:end="55:30">-</operator> <name pos:start="55:32" pos:end="55:38">buf_ptr</name><operator pos:start="55:39" pos:end="55:39">)</operator> <operator pos:start="55:41" pos:end="55:41">&gt;</operator> <name pos:start="55:43" pos:end="55:56"><name pos:start="55:43" pos:end="55:43">s</name><operator pos:start="55:44" pos:end="55:45">-&gt;</operator><name pos:start="55:46" pos:end="55:56">buffer_size</name></name></expr>)</condition>

		<block pos:start="57:17" pos:end="69:17">{<block_content pos:start="59:21" pos:end="67:40">

		    <expr_stmt pos:start="59:21" pos:end="59:39"><expr pos:start="59:21" pos:end="59:38"><call pos:start="59:21" pos:end="59:38"><name pos:start="59:21" pos:end="59:27">av_free</name><argument_list pos:start="59:28" pos:end="59:38">(<argument pos:start="59:29" pos:end="59:37"><expr pos:start="59:29" pos:end="59:37"><name pos:start="59:29" pos:end="59:37"><name pos:start="59:29" pos:end="59:29">s</name><operator pos:start="59:30" pos:end="59:31">-&gt;</operator><name pos:start="59:32" pos:end="59:37">buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="61:21" pos:end="61:53"><expr pos:start="61:21" pos:end="61:52"><name pos:start="61:21" pos:end="61:34"><name pos:start="61:21" pos:end="61:21">s</name><operator pos:start="61:22" pos:end="61:23">-&gt;</operator><name pos:start="61:24" pos:end="61:34">buffer_size</name></name> <operator pos:start="61:36" pos:end="61:36">=</operator> <name pos:start="61:38" pos:end="61:44">buf_end</name><operator pos:start="61:45" pos:end="61:45">-</operator><name pos:start="61:46" pos:end="61:52">buf_ptr</name></expr>;</expr_stmt>

		    <expr_stmt pos:start="63:21" pos:end="63:58"><expr pos:start="63:21" pos:end="63:57"><name pos:start="63:21" pos:end="63:29"><name pos:start="63:21" pos:end="63:21">s</name><operator pos:start="63:22" pos:end="63:23">-&gt;</operator><name pos:start="63:24" pos:end="63:29">buffer</name></name> <operator pos:start="63:31" pos:end="63:31">=</operator> <call pos:start="63:33" pos:end="63:57"><name pos:start="63:33" pos:end="63:41">av_malloc</name><argument_list pos:start="63:42" pos:end="63:57">(<argument pos:start="63:43" pos:end="63:56"><expr pos:start="63:43" pos:end="63:56"><name pos:start="63:43" pos:end="63:56"><name pos:start="63:43" pos:end="63:43">s</name><operator pos:start="63:44" pos:end="63:45">-&gt;</operator><name pos:start="63:46" pos:end="63:56">buffer_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="65:21" pos:end="67:40"><expr pos:start="65:21" pos:end="67:39"><call pos:start="65:21" pos:end="67:39"><name pos:start="65:21" pos:end="65:27">dprintf</name><argument_list pos:start="65:28" pos:end="67:39">(<argument pos:start="65:29" pos:end="65:71"><expr pos:start="65:29" pos:end="65:71"><literal type="string" pos:start="65:29" pos:end="65:71">"buffer too small, expanding to %d bytes\n"</literal></expr></argument>,

			<argument pos:start="67:25" pos:end="67:38"><expr pos:start="67:25" pos:end="67:38"><name pos:start="67:25" pos:end="67:38"><name pos:start="67:25" pos:end="67:25">s</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:38">buffer_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		</block_content>}</block></if></if_stmt>

		

		<comment type="block" pos:start="73:17" pos:end="73:44">/* unescape buffer of SOS */</comment>

		<if_stmt pos:start="75:17" pos:end="129:70"><if pos:start="75:17" pos:end="125:17">if <condition pos:start="75:20" pos:end="75:38">(<expr pos:start="75:21" pos:end="75:37"><name pos:start="75:21" pos:end="75:30">start_code</name> <operator pos:start="75:32" pos:end="75:33">==</operator> <name pos:start="75:35" pos:end="75:37">SOS</name></expr>)</condition>

		<block pos:start="77:17" pos:end="125:17">{<block_content pos:start="79:21" pos:end="123:65">

		    <decl_stmt pos:start="79:21" pos:end="79:41"><decl pos:start="79:21" pos:end="79:40"><type pos:start="79:21" pos:end="79:27"><name pos:start="79:21" pos:end="79:25">UINT8</name> <modifier pos:start="79:27" pos:end="79:27">*</modifier></type><name pos:start="79:28" pos:end="79:30">src</name> <init pos:start="79:32" pos:end="79:40">= <expr pos:start="79:34" pos:end="79:40"><name pos:start="79:34" pos:end="79:40">buf_ptr</name></expr></init></decl>;</decl_stmt>

		    <decl_stmt pos:start="81:21" pos:end="81:43"><decl pos:start="81:21" pos:end="81:42"><type pos:start="81:21" pos:end="81:27"><name pos:start="81:21" pos:end="81:25">UINT8</name> <modifier pos:start="81:27" pos:end="81:27">*</modifier></type><name pos:start="81:28" pos:end="81:30">dst</name> <init pos:start="81:32" pos:end="81:42">= <expr pos:start="81:34" pos:end="81:42"><name pos:start="81:34" pos:end="81:42"><name pos:start="81:34" pos:end="81:34">s</name><operator pos:start="81:35" pos:end="81:36">-&gt;</operator><name pos:start="81:37" pos:end="81:42">buffer</name></name></expr></init></decl>;</decl_stmt>



		    <while pos:start="85:21" pos:end="115:21">while <condition pos:start="85:27" pos:end="85:39">(<expr pos:start="85:28" pos:end="85:38"><name pos:start="85:28" pos:end="85:30">src</name><operator pos:start="85:31" pos:end="85:31">&lt;</operator><name pos:start="85:32" pos:end="85:38">buf_end</name></expr>)</condition>

		    <block pos:start="87:21" pos:end="115:21">{<block_content pos:start="89:25" pos:end="113:25">

			<decl_stmt pos:start="89:25" pos:end="89:43"><decl pos:start="89:25" pos:end="89:42"><type pos:start="89:25" pos:end="89:29"><name pos:start="89:25" pos:end="89:29">UINT8</name></type> <name pos:start="89:31" pos:end="89:31">x</name> <init pos:start="89:33" pos:end="89:42">= <expr pos:start="89:35" pos:end="89:42"><operator pos:start="89:35" pos:end="89:35">*</operator><operator pos:start="89:36" pos:end="89:36">(</operator><name pos:start="89:37" pos:end="89:39">src</name><operator pos:start="89:40" pos:end="89:41">++</operator><operator pos:start="89:42" pos:end="89:42">)</operator></expr></init></decl>;</decl_stmt>



			<expr_stmt pos:start="93:25" pos:end="93:37"><expr pos:start="93:25" pos:end="93:36"><operator pos:start="93:25" pos:end="93:25">*</operator><operator pos:start="93:26" pos:end="93:26">(</operator><name pos:start="93:27" pos:end="93:29">dst</name><operator pos:start="93:30" pos:end="93:31">++</operator><operator pos:start="93:32" pos:end="93:32">)</operator> <operator pos:start="93:34" pos:end="93:34">=</operator> <name pos:start="93:36" pos:end="93:36">x</name></expr>;</expr_stmt>

			<if_stmt pos:start="95:25" pos:end="113:25"><if pos:start="95:25" pos:end="113:25">if <condition pos:start="95:28" pos:end="95:38">(<expr pos:start="95:29" pos:end="95:37"><name pos:start="95:29" pos:end="95:29">x</name> <operator pos:start="95:31" pos:end="95:32">==</operator> <literal type="number" pos:start="95:34" pos:end="95:37">0xff</literal></expr>)</condition>

			<block pos:start="97:25" pos:end="113:25">{<block_content pos:start="99:29" pos:end="111:38">

			    <while pos:start="99:29" pos:end="99:54">while<condition pos:start="99:34" pos:end="99:47">(<expr pos:start="99:35" pos:end="99:46"><operator pos:start="99:35" pos:end="99:35">*</operator><name pos:start="99:36" pos:end="99:38">src</name> <operator pos:start="99:40" pos:end="99:41">==</operator> <literal type="number" pos:start="99:43" pos:end="99:46">0xff</literal></expr>)</condition><block type="pseudo" pos:start="99:49" pos:end="99:54"><block_content pos:start="99:49" pos:end="99:54"> <expr_stmt pos:start="99:49" pos:end="99:54"><expr pos:start="99:49" pos:end="99:53"><name pos:start="99:49" pos:end="99:51">src</name><operator pos:start="99:52" pos:end="99:53">++</operator></expr>;</expr_stmt></block_content></block></while>



			    <expr_stmt pos:start="103:29" pos:end="103:41"><expr pos:start="103:29" pos:end="103:40"><name pos:start="103:29" pos:end="103:29">x</name> <operator pos:start="103:31" pos:end="103:31">=</operator> <operator pos:start="103:33" pos:end="103:33">*</operator><operator pos:start="103:34" pos:end="103:34">(</operator><name pos:start="103:35" pos:end="103:37">src</name><operator pos:start="103:38" pos:end="103:39">++</operator><operator pos:start="103:40" pos:end="103:40">)</operator></expr>;</expr_stmt>

			    <if_stmt pos:start="105:29" pos:end="111:38"><if pos:start="105:29" pos:end="107:45">if <condition pos:start="105:32" pos:end="105:55">(<expr pos:start="105:33" pos:end="105:54"><name pos:start="105:33" pos:end="105:33">x</name> <operator pos:start="105:35" pos:end="105:36">&gt;=</operator> <literal type="number" pos:start="105:38" pos:end="105:41">0xd0</literal> <operator pos:start="105:43" pos:end="105:44">&amp;&amp;</operator> <name pos:start="105:46" pos:end="105:46">x</name> <operator pos:start="105:48" pos:end="105:49">&lt;=</operator> <literal type="number" pos:start="105:51" pos:end="105:54">0xd7</literal></expr>)</condition><block type="pseudo" pos:start="107:33" pos:end="107:45"><block_content pos:start="107:33" pos:end="107:45">

				<expr_stmt pos:start="107:33" pos:end="107:45"><expr pos:start="107:33" pos:end="107:44"><operator pos:start="107:33" pos:end="107:33">*</operator><operator pos:start="107:34" pos:end="107:34">(</operator><name pos:start="107:35" pos:end="107:37">dst</name><operator pos:start="107:38" pos:end="107:39">++</operator><operator pos:start="107:40" pos:end="107:40">)</operator> <operator pos:start="107:42" pos:end="107:42">=</operator> <name pos:start="107:44" pos:end="107:44">x</name></expr>;</expr_stmt></block_content></block></if>

			    <if type="elseif" pos:start="109:29" pos:end="111:38">else if <condition pos:start="109:37" pos:end="109:39">(<expr pos:start="109:38" pos:end="109:38"><name pos:start="109:38" pos:end="109:38">x</name></expr>)</condition><block type="pseudo" pos:start="111:33" pos:end="111:38"><block_content pos:start="111:33" pos:end="111:38">

				<break pos:start="111:33" pos:end="111:38">break;</break></block_content></block></if></if_stmt>

			</block_content>}</block></if></if_stmt>

		    </block_content>}</block></while>

		    <expr_stmt pos:start="117:21" pos:end="117:70"><expr pos:start="117:21" pos:end="117:69"><call pos:start="117:21" pos:end="117:69"><name pos:start="117:21" pos:end="117:33">init_get_bits</name><argument_list pos:start="117:34" pos:end="117:69">(<argument pos:start="117:35" pos:end="117:40"><expr pos:start="117:35" pos:end="117:40"><operator pos:start="117:35" pos:end="117:35">&amp;</operator><name pos:start="117:36" pos:end="117:40"><name pos:start="117:36" pos:end="117:36">s</name><operator pos:start="117:37" pos:end="117:38">-&gt;</operator><name pos:start="117:39" pos:end="117:40">gb</name></name></expr></argument>, <argument pos:start="117:43" pos:end="117:51"><expr pos:start="117:43" pos:end="117:51"><name pos:start="117:43" pos:end="117:51"><name pos:start="117:43" pos:end="117:43">s</name><operator pos:start="117:44" pos:end="117:45">-&gt;</operator><name pos:start="117:46" pos:end="117:51">buffer</name></name></expr></argument>, <argument pos:start="117:54" pos:end="117:68"><expr pos:start="117:54" pos:end="117:68"><name pos:start="117:54" pos:end="117:56">dst</name> <operator pos:start="117:58" pos:end="117:58">-</operator> <name pos:start="117:60" pos:end="117:68"><name pos:start="117:60" pos:end="117:60">s</name><operator pos:start="117:61" pos:end="117:62">-&gt;</operator><name pos:start="117:63" pos:end="117:68">buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    

		    <expr_stmt pos:start="121:21" pos:end="123:65"><expr pos:start="121:21" pos:end="123:64"><call pos:start="121:21" pos:end="123:64"><name pos:start="121:21" pos:end="121:27">dprintf</name><argument_list pos:start="121:28" pos:end="123:64">(<argument pos:start="121:29" pos:end="121:57"><expr pos:start="121:29" pos:end="121:57"><literal type="string" pos:start="121:29" pos:end="121:57">"escaping removed %d bytes\n"</literal></expr></argument>,

			<argument pos:start="123:25" pos:end="123:63"><expr pos:start="123:25" pos:end="123:63"><operator pos:start="123:25" pos:end="123:25">(</operator><name pos:start="123:26" pos:end="123:32">buf_end</name> <operator pos:start="123:34" pos:end="123:34">-</operator> <name pos:start="123:36" pos:end="123:42">buf_ptr</name><operator pos:start="123:43" pos:end="123:43">)</operator> <operator pos:start="123:45" pos:end="123:45">-</operator> <operator pos:start="123:47" pos:end="123:47">(</operator><name pos:start="123:48" pos:end="123:50">dst</name> <operator pos:start="123:52" pos:end="123:52">-</operator> <name pos:start="123:54" pos:end="123:62"><name pos:start="123:54" pos:end="123:54">s</name><operator pos:start="123:55" pos:end="123:56">-&gt;</operator><name pos:start="123:57" pos:end="123:62">buffer</name></name><operator pos:start="123:63" pos:end="123:63">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		</block_content>}</block></if>

		<else pos:start="127:17" pos:end="129:70">else<block type="pseudo" pos:start="129:21" pos:end="129:70"><block_content pos:start="129:21" pos:end="129:70">

		    <expr_stmt pos:start="129:21" pos:end="129:70"><expr pos:start="129:21" pos:end="129:69"><call pos:start="129:21" pos:end="129:69"><name pos:start="129:21" pos:end="129:33">init_get_bits</name><argument_list pos:start="129:34" pos:end="129:69">(<argument pos:start="129:35" pos:end="129:40"><expr pos:start="129:35" pos:end="129:40"><operator pos:start="129:35" pos:end="129:35">&amp;</operator><name pos:start="129:36" pos:end="129:40"><name pos:start="129:36" pos:end="129:36">s</name><operator pos:start="129:37" pos:end="129:38">-&gt;</operator><name pos:start="129:39" pos:end="129:40">gb</name></name></expr></argument>, <argument pos:start="129:43" pos:end="129:49"><expr pos:start="129:43" pos:end="129:49"><name pos:start="129:43" pos:end="129:49">buf_ptr</name></expr></argument>, <argument pos:start="129:52" pos:end="129:68"><expr pos:start="129:52" pos:end="129:68"><name pos:start="129:52" pos:end="129:58">buf_end</name> <operator pos:start="129:60" pos:end="129:60">-</operator> <name pos:start="129:62" pos:end="129:68">buf_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

		

		<expr_stmt pos:start="133:17" pos:end="133:43"><expr pos:start="133:17" pos:end="133:42"><name pos:start="133:17" pos:end="133:29"><name pos:start="133:17" pos:end="133:17">s</name><operator pos:start="133:18" pos:end="133:19">-&gt;</operator><name pos:start="133:20" pos:end="133:29">start_code</name></name> <operator pos:start="133:31" pos:end="133:31">=</operator> <name pos:start="133:33" pos:end="133:42">start_code</name></expr>;</expr_stmt>



		<comment type="block" pos:start="137:17" pos:end="137:37">/* process markers */</comment>

		<if_stmt pos:start="139:17" pos:end="157:17"><if pos:start="139:17" pos:end="143:17">if <condition pos:start="139:20" pos:end="139:61">(<expr pos:start="139:21" pos:end="139:60"><name pos:start="139:21" pos:end="139:30">start_code</name> <operator pos:start="139:32" pos:end="139:33">&gt;=</operator> <literal type="number" pos:start="139:35" pos:end="139:38">0xd0</literal> <operator pos:start="139:40" pos:end="139:41">&amp;&amp;</operator> <name pos:start="139:43" pos:end="139:52">start_code</name> <operator pos:start="139:54" pos:end="139:55">&lt;=</operator> <literal type="number" pos:start="139:57" pos:end="139:60">0xd7</literal></expr>)</condition> <block pos:start="139:63" pos:end="143:17">{<block_content pos:start="141:21" pos:end="141:69">

		    <expr_stmt pos:start="141:21" pos:end="141:69"><expr pos:start="141:21" pos:end="141:68"><call pos:start="141:21" pos:end="141:68"><name pos:start="141:21" pos:end="141:27">dprintf</name><argument_list pos:start="141:28" pos:end="141:68">(<argument pos:start="141:29" pos:end="141:50"><expr pos:start="141:29" pos:end="141:50"><literal type="string" pos:start="141:29" pos:end="141:50">"restart marker: %d\n"</literal></expr></argument>, <argument pos:start="141:53" pos:end="141:67"><expr pos:start="141:53" pos:end="141:67"><name pos:start="141:53" pos:end="141:62">start_code</name><operator pos:start="141:63" pos:end="141:63">&amp;</operator><literal type="number" pos:start="141:64" pos:end="141:67">0x0f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		</block_content>}</block></if> <if type="elseif" pos:start="143:19" pos:end="157:17">else if <condition pos:start="143:27" pos:end="143:44">(<expr pos:start="143:28" pos:end="143:43"><name pos:start="143:28" pos:end="143:43"><name pos:start="143:28" pos:end="143:28">s</name><operator pos:start="143:29" pos:end="143:30">-&gt;</operator><name pos:start="143:31" pos:end="143:43">first_picture</name></name></expr>)</condition> <block pos:start="143:46" pos:end="157:17">{<block_content pos:start="147:21" pos:end="155:44">

		    <comment type="block" pos:start="145:21" pos:end="145:36">/* APP fields */</comment>

		    <if_stmt pos:start="147:21" pos:end="155:44"><if pos:start="147:21" pos:end="149:44">if <condition pos:start="147:24" pos:end="147:65">(<expr pos:start="147:25" pos:end="147:64"><name pos:start="147:25" pos:end="147:34">start_code</name> <operator pos:start="147:36" pos:end="147:37">&gt;=</operator> <literal type="number" pos:start="147:39" pos:end="147:42">0xe0</literal> <operator pos:start="147:44" pos:end="147:45">&amp;&amp;</operator> <name pos:start="147:47" pos:end="147:56">start_code</name> <operator pos:start="147:58" pos:end="147:59">&lt;=</operator> <literal type="number" pos:start="147:61" pos:end="147:64">0xef</literal></expr>)</condition><block type="pseudo" pos:start="149:25" pos:end="149:44"><block_content pos:start="149:25" pos:end="149:44">

			<expr_stmt pos:start="149:25" pos:end="149:44"><expr pos:start="149:25" pos:end="149:43"><call pos:start="149:25" pos:end="149:43"><name pos:start="149:25" pos:end="149:40">mjpeg_decode_app</name><argument_list pos:start="149:41" pos:end="149:43">(<argument pos:start="149:42" pos:end="149:42"><expr pos:start="149:42" pos:end="149:42"><name pos:start="149:42" pos:end="149:42">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

		    <comment type="block" pos:start="151:21" pos:end="151:33">/* Comment */</comment>

		    <if type="elseif" pos:start="153:21" pos:end="155:44">else if <condition pos:start="153:29" pos:end="153:47">(<expr pos:start="153:30" pos:end="153:46"><name pos:start="153:30" pos:end="153:39">start_code</name> <operator pos:start="153:41" pos:end="153:42">==</operator> <name pos:start="153:44" pos:end="153:46">COM</name></expr>)</condition><block type="pseudo" pos:start="155:25" pos:end="155:44"><block_content pos:start="155:25" pos:end="155:44">

			<expr_stmt pos:start="155:25" pos:end="155:44"><expr pos:start="155:25" pos:end="155:43"><call pos:start="155:25" pos:end="155:43"><name pos:start="155:25" pos:end="155:40">mjpeg_decode_com</name><argument_list pos:start="155:41" pos:end="155:43">(<argument pos:start="155:42" pos:end="155:42"><expr pos:start="155:42" pos:end="155:42"><name pos:start="155:42" pos:end="155:42">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

		</block_content>}</block></if></if_stmt>



                <switch pos:start="161:17" pos:end="323:17">switch<condition pos:start="161:23" pos:end="161:34">(<expr pos:start="161:24" pos:end="161:33"><name pos:start="161:24" pos:end="161:33">start_code</name></expr>)</condition> <block pos:start="161:36" pos:end="323:17">{<block_content pos:start="163:17" pos:end="315:26">

                <case pos:start="163:17" pos:end="163:25">case <expr pos:start="163:22" pos:end="163:24"><name pos:start="163:22" pos:end="163:24">SOI</name></expr>:</case>

		    <expr_stmt pos:start="165:21" pos:end="165:44"><expr pos:start="165:21" pos:end="165:43"><name pos:start="165:21" pos:end="165:39"><name pos:start="165:21" pos:end="165:21">s</name><operator pos:start="165:22" pos:end="165:23">-&gt;</operator><name pos:start="165:24" pos:end="165:39">restart_interval</name></name> <operator pos:start="165:41" pos:end="165:41">=</operator> <literal type="number" pos:start="165:43" pos:end="165:43">0</literal></expr>;</expr_stmt>

                    <comment type="block" pos:start="167:21" pos:end="167:46">/* nothing to do on SOI */</comment>

                    <break pos:start="169:21" pos:end="169:26">break;</break>

                <case pos:start="171:17" pos:end="171:25">case <expr pos:start="171:22" pos:end="171:24"><name pos:start="171:22" pos:end="171:24">DQT</name></expr>:</case>

                    <expr_stmt pos:start="173:21" pos:end="173:40"><expr pos:start="173:21" pos:end="173:39"><call pos:start="173:21" pos:end="173:39"><name pos:start="173:21" pos:end="173:36">mjpeg_decode_dqt</name><argument_list pos:start="173:37" pos:end="173:39">(<argument pos:start="173:38" pos:end="173:38"><expr pos:start="173:38" pos:end="173:38"><name pos:start="173:38" pos:end="173:38">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="175:21" pos:end="175:26">break;</break>

                <case pos:start="177:17" pos:end="177:25">case <expr pos:start="177:22" pos:end="177:24"><name pos:start="177:22" pos:end="177:24">DHT</name></expr>:</case>

                    <expr_stmt pos:start="179:21" pos:end="179:40"><expr pos:start="179:21" pos:end="179:39"><call pos:start="179:21" pos:end="179:39"><name pos:start="179:21" pos:end="179:36">mjpeg_decode_dht</name><argument_list pos:start="179:37" pos:end="179:39">(<argument pos:start="179:38" pos:end="179:38"><expr pos:start="179:38" pos:end="179:38"><name pos:start="179:38" pos:end="179:38">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="181:21" pos:end="181:26">break;</break>

                <case pos:start="183:17" pos:end="183:26">case <expr pos:start="183:22" pos:end="183:25"><name pos:start="183:22" pos:end="183:25">SOF0</name></expr>:</case>

                    <if_stmt pos:start="185:21" pos:end="187:34"><if pos:start="185:21" pos:end="187:34">if <condition pos:start="185:24" pos:end="185:49">(<expr pos:start="185:25" pos:end="185:48"><call pos:start="185:25" pos:end="185:44"><name pos:start="185:25" pos:end="185:41">mjpeg_decode_sof0</name><argument_list pos:start="185:42" pos:end="185:44">(<argument pos:start="185:43" pos:end="185:43"><expr pos:start="185:43" pos:end="185:43"><name pos:start="185:43" pos:end="185:43">s</name></expr></argument>)</argument_list></call> <operator pos:start="185:46" pos:end="185:46">&lt;</operator> <literal type="number" pos:start="185:48" pos:end="185:48">0</literal></expr>)</condition><block type="pseudo" pos:start="187:25" pos:end="187:34"><block_content pos:start="187:25" pos:end="187:34">

			<return pos:start="187:25" pos:end="187:34">return <expr pos:start="187:32" pos:end="187:33"><operator pos:start="187:32" pos:end="187:32">-</operator><literal type="number" pos:start="187:33" pos:end="187:33">1</literal></expr>;</return></block_content></block></if></if_stmt>

                    <break pos:start="189:21" pos:end="189:26">break;</break>

		<case pos:start="191:17" pos:end="191:25">case <expr pos:start="191:22" pos:end="191:24"><name pos:start="191:22" pos:end="191:24">EOI</name></expr>:</case>

<label pos:start="193:1" pos:end="193:11"><name pos:start="193:1" pos:end="193:10">eoi_parser</name>:</label>

		    <block pos:start="195:21" pos:end="263:21">{<block_content pos:start="197:25" pos:end="261:37">

                        <if_stmt pos:start="197:25" pos:end="207:25"><if pos:start="197:25" pos:end="207:25">if <condition pos:start="197:28" pos:end="197:42">(<expr pos:start="197:29" pos:end="197:41"><name pos:start="197:29" pos:end="197:41"><name pos:start="197:29" pos:end="197:29">s</name><operator pos:start="197:30" pos:end="197:31">-&gt;</operator><name pos:start="197:32" pos:end="197:41">interlaced</name></name></expr>)</condition> <block pos:start="197:44" pos:end="207:25">{<block_content pos:start="199:29" pos:end="205:49">

                            <expr_stmt pos:start="199:29" pos:end="199:49"><expr pos:start="199:29" pos:end="199:48"><name pos:start="199:29" pos:end="199:43"><name pos:start="199:29" pos:end="199:29">s</name><operator pos:start="199:30" pos:end="199:31">-&gt;</operator><name pos:start="199:32" pos:end="199:43">bottom_field</name></name> <operator pos:start="199:45" pos:end="199:46">^=</operator> <literal type="number" pos:start="199:48" pos:end="199:48">1</literal></expr>;</expr_stmt>

                            <comment type="block" pos:start="201:29" pos:end="201:78">/* if not bottom field, do not output image yet */</comment>

                            <if_stmt pos:start="203:29" pos:end="205:49"><if pos:start="203:29" pos:end="205:49">if <condition pos:start="203:32" pos:end="203:48">(<expr pos:start="203:33" pos:end="203:47"><name pos:start="203:33" pos:end="203:47"><name pos:start="203:33" pos:end="203:33">s</name><operator pos:start="203:34" pos:end="203:35">-&gt;</operator><name pos:start="203:36" pos:end="203:47">bottom_field</name></name></expr>)</condition><block type="pseudo" pos:start="205:33" pos:end="205:49"><block_content pos:start="205:33" pos:end="205:49">

                                <goto pos:start="205:33" pos:end="205:49">goto <name pos:start="205:38" pos:end="205:48">not_the_end</name>;</goto></block_content></block></if></if_stmt>

                        </block_content>}</block></if></if_stmt>

                        <for pos:start="209:25" pos:end="217:25">for<control pos:start="209:28" pos:end="209:40">(<init pos:start="209:29" pos:end="209:32"><expr pos:start="209:29" pos:end="209:31"><name pos:start="209:29" pos:end="209:29">i</name><operator pos:start="209:30" pos:end="209:30">=</operator><literal type="number" pos:start="209:31" pos:end="209:31">0</literal></expr>;</init><condition pos:start="209:33" pos:end="209:36"><expr pos:start="209:33" pos:end="209:35"><name pos:start="209:33" pos:end="209:33">i</name><operator pos:start="209:34" pos:end="209:34">&lt;</operator><literal type="number" pos:start="209:35" pos:end="209:35">3</literal></expr>;</condition><incr pos:start="209:37" pos:end="209:39"><expr pos:start="209:37" pos:end="209:39"><name pos:start="209:37" pos:end="209:37">i</name><operator pos:start="209:38" pos:end="209:39">++</operator></expr></incr>)</control> <block pos:start="209:42" pos:end="217:25">{<block_content pos:start="211:29" pos:end="215:69">

                            <expr_stmt pos:start="211:29" pos:end="211:69"><expr pos:start="211:29" pos:end="211:68"><name pos:start="211:29" pos:end="211:44"><name pos:start="211:29" pos:end="211:35">picture</name><operator pos:start="211:36" pos:end="211:37">-&gt;</operator><name pos:start="211:38" pos:end="211:41">data</name><index pos:start="211:42" pos:end="211:44">[<expr pos:start="211:43" pos:end="211:43"><name pos:start="211:43" pos:end="211:43">i</name></expr>]</index></name> <operator pos:start="211:46" pos:end="211:46">=</operator> <name pos:start="211:48" pos:end="211:68"><name pos:start="211:48" pos:end="211:48">s</name><operator pos:start="211:49" pos:end="211:50">-&gt;</operator><name pos:start="211:51" pos:end="211:65">current_picture</name><index pos:start="211:66" pos:end="211:68">[<expr pos:start="211:67" pos:end="211:67"><name pos:start="211:67" pos:end="211:67">i</name></expr>]</index></name></expr>;</expr_stmt>

			    <expr_stmt pos:start="213:29" pos:end="215:69"><expr pos:start="213:29" pos:end="215:68"><name pos:start="213:29" pos:end="213:48"><name pos:start="213:29" pos:end="213:35">picture</name><operator pos:start="213:36" pos:end="213:37">-&gt;</operator><name pos:start="213:38" pos:end="213:45">linesize</name><index pos:start="213:46" pos:end="213:48">[<expr pos:start="213:47" pos:end="213:47"><name pos:start="213:47" pos:end="213:47">i</name></expr>]</index></name> <operator pos:start="213:50" pos:end="213:50">=</operator> <ternary pos:start="213:52" pos:end="215:68"><condition pos:start="213:52" pos:end="213:68"><expr pos:start="213:52" pos:end="213:66"><operator pos:start="213:52" pos:end="213:52">(</operator><name pos:start="213:53" pos:end="213:65"><name pos:start="213:53" pos:end="213:53">s</name><operator pos:start="213:54" pos:end="213:55">-&gt;</operator><name pos:start="213:56" pos:end="213:65">interlaced</name></name><operator pos:start="213:66" pos:end="213:66">)</operator></expr> ?</condition><then pos:start="215:33" pos:end="215:51">

				<expr pos:start="215:33" pos:end="215:51"><name pos:start="215:33" pos:end="215:46"><name pos:start="215:33" pos:end="215:33">s</name><operator pos:start="215:34" pos:end="215:35">-&gt;</operator><name pos:start="215:36" pos:end="215:43">linesize</name><index pos:start="215:44" pos:end="215:46">[<expr pos:start="215:45" pos:end="215:45"><name pos:start="215:45" pos:end="215:45">i</name></expr>]</index></name> <operator pos:start="215:48" pos:end="215:49">&gt;&gt;</operator> <literal type="number" pos:start="215:51" pos:end="215:51">1</literal></expr> </then><else pos:start="215:53" pos:end="215:68">: <expr pos:start="215:55" pos:end="215:68"><name pos:start="215:55" pos:end="215:68"><name pos:start="215:55" pos:end="215:55">s</name><operator pos:start="215:56" pos:end="215:57">-&gt;</operator><name pos:start="215:58" pos:end="215:65">linesize</name><index pos:start="215:66" pos:end="215:68">[<expr pos:start="215:67" pos:end="215:67"><name pos:start="215:67" pos:end="215:67">i</name></expr>]</index></name></expr></else></ternary></expr>;</expr_stmt>

                        </block_content>}</block></for>

                        <expr_stmt pos:start="219:25" pos:end="219:55"><expr pos:start="219:25" pos:end="219:54"><operator pos:start="219:25" pos:end="219:25">*</operator><name pos:start="219:26" pos:end="219:34">data_size</name> <operator pos:start="219:36" pos:end="219:36">=</operator> <sizeof pos:start="219:38" pos:end="219:54">sizeof<argument_list pos:start="219:44" pos:end="219:54">(<argument pos:start="219:45" pos:end="219:53"><expr pos:start="219:45" pos:end="219:53"><name pos:start="219:45" pos:end="219:53">AVPicture</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

                        <expr_stmt pos:start="221:25" pos:end="221:50"><expr pos:start="221:25" pos:end="221:49"><name pos:start="221:25" pos:end="221:37"><name pos:start="221:25" pos:end="221:29">avctx</name><operator pos:start="221:30" pos:end="221:31">-&gt;</operator><name pos:start="221:32" pos:end="221:37">height</name></name> <operator pos:start="221:39" pos:end="221:39">=</operator> <name pos:start="221:41" pos:end="221:49"><name pos:start="221:41" pos:end="221:41">s</name><operator pos:start="221:42" pos:end="221:43">-&gt;</operator><name pos:start="221:44" pos:end="221:49">height</name></name></expr>;</expr_stmt>

                        <if_stmt pos:start="223:25" pos:end="225:47"><if pos:start="223:25" pos:end="225:47">if <condition pos:start="223:28" pos:end="223:42">(<expr pos:start="223:29" pos:end="223:41"><name pos:start="223:29" pos:end="223:41"><name pos:start="223:29" pos:end="223:29">s</name><operator pos:start="223:30" pos:end="223:31">-&gt;</operator><name pos:start="223:32" pos:end="223:41">interlaced</name></name></expr>)</condition><block type="pseudo" pos:start="225:29" pos:end="225:47"><block_content pos:start="225:29" pos:end="225:47">

                            <expr_stmt pos:start="225:29" pos:end="225:47"><expr pos:start="225:29" pos:end="225:46"><name pos:start="225:29" pos:end="225:41"><name pos:start="225:29" pos:end="225:33">avctx</name><operator pos:start="225:34" pos:end="225:35">-&gt;</operator><name pos:start="225:36" pos:end="225:41">height</name></name> <operator pos:start="225:43" pos:end="225:44">*=</operator> <literal type="number" pos:start="225:46" pos:end="225:46">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="227:25" pos:end="227:48"><expr pos:start="227:25" pos:end="227:47"><name pos:start="227:25" pos:end="227:36"><name pos:start="227:25" pos:end="227:29">avctx</name><operator pos:start="227:30" pos:end="227:31">-&gt;</operator><name pos:start="227:32" pos:end="227:36">width</name></name> <operator pos:start="227:38" pos:end="227:38">=</operator> <name pos:start="227:40" pos:end="227:47"><name pos:start="227:40" pos:end="227:40">s</name><operator pos:start="227:41" pos:end="227:42">-&gt;</operator><name pos:start="227:43" pos:end="227:47">width</name></name></expr>;</expr_stmt>

                        <comment type="block" pos:start="229:25" pos:end="229:54">/* XXX: not complete test ! */</comment>

                        <switch pos:start="231:25" pos:end="253:25">switch<condition pos:start="231:31" pos:end="231:68">(<expr pos:start="231:32" pos:end="231:67"><operator pos:start="231:32" pos:end="231:32">(</operator><name pos:start="231:33" pos:end="231:45"><name pos:start="231:33" pos:end="231:33">s</name><operator pos:start="231:34" pos:end="231:35">-&gt;</operator><name pos:start="231:36" pos:end="231:42">h_count</name><index pos:start="231:43" pos:end="231:45">[<expr pos:start="231:44" pos:end="231:44"><literal type="number" pos:start="231:44" pos:end="231:44">0</literal></expr>]</index></name> <operator pos:start="231:47" pos:end="231:48">&lt;&lt;</operator> <literal type="number" pos:start="231:50" pos:end="231:50">4</literal><operator pos:start="231:51" pos:end="231:51">)</operator> <operator pos:start="231:53" pos:end="231:53">|</operator> <name pos:start="231:55" pos:end="231:67"><name pos:start="231:55" pos:end="231:55">s</name><operator pos:start="231:56" pos:end="231:57">-&gt;</operator><name pos:start="231:58" pos:end="231:64">v_count</name><index pos:start="231:65" pos:end="231:67">[<expr pos:start="231:66" pos:end="231:66"><literal type="number" pos:start="231:66" pos:end="231:66">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="231:70" pos:end="253:25">{<block_content pos:start="233:25" pos:end="251:34">

                        <case pos:start="233:25" pos:end="233:34">case <expr pos:start="233:30" pos:end="233:33"><literal type="number" pos:start="233:30" pos:end="233:33">0x11</literal></expr>:</case>

                            <expr_stmt pos:start="235:29" pos:end="235:61"><expr pos:start="235:29" pos:end="235:60"><name pos:start="235:29" pos:end="235:42"><name pos:start="235:29" pos:end="235:33">avctx</name><operator pos:start="235:34" pos:end="235:35">-&gt;</operator><name pos:start="235:36" pos:end="235:42">pix_fmt</name></name> <operator pos:start="235:44" pos:end="235:44">=</operator> <name pos:start="235:46" pos:end="235:60">PIX_FMT_YUV444P</name></expr>;</expr_stmt>

                            <break pos:start="237:29" pos:end="237:34">break;</break>

                        <case pos:start="239:25" pos:end="239:34">case <expr pos:start="239:30" pos:end="239:33"><literal type="number" pos:start="239:30" pos:end="239:33">0x21</literal></expr>:</case>

                            <expr_stmt pos:start="241:29" pos:end="241:61"><expr pos:start="241:29" pos:end="241:60"><name pos:start="241:29" pos:end="241:42"><name pos:start="241:29" pos:end="241:33">avctx</name><operator pos:start="241:34" pos:end="241:35">-&gt;</operator><name pos:start="241:36" pos:end="241:42">pix_fmt</name></name> <operator pos:start="241:44" pos:end="241:44">=</operator> <name pos:start="241:46" pos:end="241:60">PIX_FMT_YUV422P</name></expr>;</expr_stmt>

                            <break pos:start="243:29" pos:end="243:34">break;</break>

                        <default pos:start="245:25" pos:end="245:32">default:</default>

                        <case pos:start="247:25" pos:end="247:34">case <expr pos:start="247:30" pos:end="247:33"><literal type="number" pos:start="247:30" pos:end="247:33">0x22</literal></expr>:</case>

                            <expr_stmt pos:start="249:29" pos:end="249:61"><expr pos:start="249:29" pos:end="249:60"><name pos:start="249:29" pos:end="249:42"><name pos:start="249:29" pos:end="249:33">avctx</name><operator pos:start="249:34" pos:end="249:35">-&gt;</operator><name pos:start="249:36" pos:end="249:42">pix_fmt</name></name> <operator pos:start="249:44" pos:end="249:44">=</operator> <name pos:start="249:46" pos:end="249:60">PIX_FMT_YUV420P</name></expr>;</expr_stmt>

                            <break pos:start="251:29" pos:end="251:34">break;</break>

                        </block_content>}</block></switch>

                        <comment type="block" pos:start="255:25" pos:end="255:43">/* dummy quality */</comment>

                        <comment type="block" pos:start="257:25" pos:end="257:55">/* XXX: infer it with matrix */</comment>

<comment type="line" pos:start="259:1" pos:end="259:44">//                    	avctx-&gt;quality = 3; </comment>

                        <goto pos:start="261:25" pos:end="261:37">goto <name pos:start="261:30" pos:end="261:36">the_end</name>;</goto>

                    </block_content>}</block>

		    <break pos:start="265:21" pos:end="265:26">break;</break>

                <case pos:start="267:17" pos:end="267:25">case <expr pos:start="267:22" pos:end="267:24"><name pos:start="267:22" pos:end="267:24">SOS</name></expr>:</case>

                    <expr_stmt pos:start="269:21" pos:end="269:40"><expr pos:start="269:21" pos:end="269:39"><call pos:start="269:21" pos:end="269:39"><name pos:start="269:21" pos:end="269:36">mjpeg_decode_sos</name><argument_list pos:start="269:37" pos:end="269:39">(<argument pos:start="269:38" pos:end="269:38"><expr pos:start="269:38" pos:end="269:38"><name pos:start="269:38" pos:end="269:38">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <comment type="block" pos:start="271:21" pos:end="271:65">/* buggy avid puts EOI every 10-20th frame */</comment>

		    <comment type="block" pos:start="273:21" pos:end="273:63">/* if restart period is over process EOI */</comment>

		    <if_stmt pos:start="275:21" pos:end="277:40"><if pos:start="275:21" pos:end="277:40">if <condition pos:start="275:24" pos:end="275:81">(<expr pos:start="275:25" pos:end="275:80"><operator pos:start="275:25" pos:end="275:25">(</operator><name pos:start="275:26" pos:end="275:38"><name pos:start="275:26" pos:end="275:26">s</name><operator pos:start="275:27" pos:end="275:28">-&gt;</operator><name pos:start="275:29" pos:end="275:38">buggy_avid</name></name> <operator pos:start="275:40" pos:end="275:41">&amp;&amp;</operator> <operator pos:start="275:43" pos:end="275:43">!</operator><name pos:start="275:44" pos:end="275:56"><name pos:start="275:44" pos:end="275:44">s</name><operator pos:start="275:45" pos:end="275:46">-&gt;</operator><name pos:start="275:47" pos:end="275:56">interlaced</name></name><operator pos:start="275:57" pos:end="275:57">)</operator> <operator pos:start="275:59" pos:end="275:60">||</operator> <name pos:start="275:62" pos:end="275:80"><name pos:start="275:62" pos:end="275:62">s</name><operator pos:start="275:63" pos:end="275:64">-&gt;</operator><name pos:start="275:65" pos:end="275:80">restart_interval</name></name></expr>)</condition><block type="pseudo" pos:start="277:25" pos:end="277:40"><block_content pos:start="277:25" pos:end="277:40">

			<goto pos:start="277:25" pos:end="277:40">goto <name pos:start="277:30" pos:end="277:39">eoi_parser</name>;</goto></block_content></block></if></if_stmt>

                    <break pos:start="279:21" pos:end="279:26">break;</break>

		<case pos:start="281:17" pos:end="281:25">case <expr pos:start="281:22" pos:end="281:24"><name pos:start="281:22" pos:end="281:24">DRI</name></expr>:</case>

		    <expr_stmt pos:start="283:21" pos:end="283:40"><expr pos:start="283:21" pos:end="283:39"><call pos:start="283:21" pos:end="283:39"><name pos:start="283:21" pos:end="283:36">mjpeg_decode_dri</name><argument_list pos:start="283:37" pos:end="283:39">(<argument pos:start="283:38" pos:end="283:38"><expr pos:start="283:38" pos:end="283:38"><name pos:start="283:38" pos:end="283:38">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="285:21" pos:end="285:26">break;</break>

		<case pos:start="287:17" pos:end="287:26">case <expr pos:start="287:22" pos:end="287:25"><name pos:start="287:22" pos:end="287:25">SOF1</name></expr>:</case>

		<case pos:start="289:17" pos:end="289:26">case <expr pos:start="289:22" pos:end="289:25"><name pos:start="289:22" pos:end="289:25">SOF2</name></expr>:</case>

		<case pos:start="291:17" pos:end="291:26">case <expr pos:start="291:22" pos:end="291:25"><name pos:start="291:22" pos:end="291:25">SOF3</name></expr>:</case>

		<case pos:start="293:17" pos:end="293:26">case <expr pos:start="293:22" pos:end="293:25"><name pos:start="293:22" pos:end="293:25">SOF5</name></expr>:</case>

		<case pos:start="295:17" pos:end="295:26">case <expr pos:start="295:22" pos:end="295:25"><name pos:start="295:22" pos:end="295:25">SOF6</name></expr>:</case>

		<case pos:start="297:17" pos:end="297:26">case <expr pos:start="297:22" pos:end="297:25"><name pos:start="297:22" pos:end="297:25">SOF7</name></expr>:</case>

		<case pos:start="299:17" pos:end="299:26">case <expr pos:start="299:22" pos:end="299:25"><name pos:start="299:22" pos:end="299:25">SOF9</name></expr>:</case>

		<case pos:start="301:17" pos:end="301:27">case <expr pos:start="301:22" pos:end="301:26"><name pos:start="301:22" pos:end="301:26">SOF10</name></expr>:</case>

		<case pos:start="303:17" pos:end="303:27">case <expr pos:start="303:22" pos:end="303:26"><name pos:start="303:22" pos:end="303:26">SOF11</name></expr>:</case>

		<case pos:start="305:17" pos:end="305:27">case <expr pos:start="305:22" pos:end="305:26"><name pos:start="305:22" pos:end="305:26">SOF13</name></expr>:</case>

		<case pos:start="307:17" pos:end="307:27">case <expr pos:start="307:22" pos:end="307:26"><name pos:start="307:22" pos:end="307:26">SOF14</name></expr>:</case>

		<case pos:start="309:17" pos:end="309:27">case <expr pos:start="309:22" pos:end="309:26"><name pos:start="309:22" pos:end="309:26">SOF15</name></expr>:</case>

		<case pos:start="311:17" pos:end="311:25">case <expr pos:start="311:22" pos:end="311:24"><name pos:start="311:22" pos:end="311:24">JPG</name></expr>:</case>

		    <expr_stmt pos:start="313:21" pos:end="313:80"><expr pos:start="313:21" pos:end="313:79"><call pos:start="313:21" pos:end="313:79"><name pos:start="313:21" pos:end="313:26">printf</name><argument_list pos:start="313:27" pos:end="313:79">(<argument pos:start="313:28" pos:end="313:66"><expr pos:start="313:28" pos:end="313:66"><literal type="string" pos:start="313:28" pos:end="313:66">"mjpeg: unsupported coding type (%x)\n"</literal></expr></argument>, <argument pos:start="313:69" pos:end="313:78"><expr pos:start="313:69" pos:end="313:78"><name pos:start="313:69" pos:end="313:78">start_code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="315:21" pos:end="315:26">break;</break>

<comment type="line" pos:start="317:1" pos:end="317:24">//		default:</comment>

<comment type="line" pos:start="319:1" pos:end="319:75">//		    printf("mjpeg: unsupported marker (%x)\n", start_code);</comment>

<comment type="line" pos:start="321:1" pos:end="321:26">//		    break;</comment>

                </block_content>}</block></switch>



<label pos:start="327:1" pos:end="327:12"><name pos:start="327:1" pos:end="327:11">not_the_end</name>:</label>

		<comment type="block" pos:start="329:17" pos:end="329:44">/* eof process start code */</comment>

		<expr_stmt pos:start="331:17" pos:end="331:56"><expr pos:start="331:17" pos:end="331:55"><name pos:start="331:17" pos:end="331:23">buf_ptr</name> <operator pos:start="331:25" pos:end="331:26">+=</operator> <operator pos:start="331:28" pos:end="331:28">(</operator><call pos:start="331:29" pos:end="331:50"><name pos:start="331:29" pos:end="331:42">get_bits_count</name><argument_list pos:start="331:43" pos:end="331:50">(<argument pos:start="331:44" pos:end="331:49"><expr pos:start="331:44" pos:end="331:49"><operator pos:start="331:44" pos:end="331:44">&amp;</operator><name pos:start="331:45" pos:end="331:49"><name pos:start="331:45" pos:end="331:45">s</name><operator pos:start="331:46" pos:end="331:47">-&gt;</operator><name pos:start="331:48" pos:end="331:49">gb</name></name></expr></argument>)</argument_list></call><operator pos:start="331:51" pos:end="331:51">+</operator><literal type="number" pos:start="331:52" pos:end="331:52">7</literal><operator pos:start="331:53" pos:end="331:53">)</operator><operator pos:start="331:54" pos:end="331:54">/</operator><literal type="number" pos:start="331:55" pos:end="331:55">8</literal></expr>;</expr_stmt>

		<expr_stmt pos:start="333:17" pos:end="335:74"><expr pos:start="333:17" pos:end="335:73"><call pos:start="333:17" pos:end="335:73"><name pos:start="333:17" pos:end="333:23">dprintf</name><argument_list pos:start="333:24" pos:end="335:73">(<argument pos:start="333:25" pos:end="333:65"><expr pos:start="333:25" pos:end="333:65"><literal type="string" pos:start="333:25" pos:end="333:65">"marker parser used %d bytes (%d bits)\n"</literal></expr></argument>,

		    <argument pos:start="335:21" pos:end="335:48"><expr pos:start="335:21" pos:end="335:48"><operator pos:start="335:21" pos:end="335:21">(</operator><call pos:start="335:22" pos:end="335:43"><name pos:start="335:22" pos:end="335:35">get_bits_count</name><argument_list pos:start="335:36" pos:end="335:43">(<argument pos:start="335:37" pos:end="335:42"><expr pos:start="335:37" pos:end="335:42"><operator pos:start="335:37" pos:end="335:37">&amp;</operator><name pos:start="335:38" pos:end="335:42"><name pos:start="335:38" pos:end="335:38">s</name><operator pos:start="335:39" pos:end="335:40">-&gt;</operator><name pos:start="335:41" pos:end="335:42">gb</name></name></expr></argument>)</argument_list></call><operator pos:start="335:44" pos:end="335:44">+</operator><literal type="number" pos:start="335:45" pos:end="335:45">7</literal><operator pos:start="335:46" pos:end="335:46">)</operator><operator pos:start="335:47" pos:end="335:47">/</operator><literal type="number" pos:start="335:48" pos:end="335:48">8</literal></expr></argument>, <argument pos:start="335:51" pos:end="335:72"><expr pos:start="335:51" pos:end="335:72"><call pos:start="335:51" pos:end="335:72"><name pos:start="335:51" pos:end="335:64">get_bits_count</name><argument_list pos:start="335:65" pos:end="335:72">(<argument pos:start="335:66" pos:end="335:71"><expr pos:start="335:66" pos:end="335:71"><operator pos:start="335:66" pos:end="335:66">&amp;</operator><name pos:start="335:67" pos:end="335:71"><name pos:start="335:67" pos:end="335:67">s</name><operator pos:start="335:68" pos:end="335:69">-&gt;</operator><name pos:start="335:70" pos:end="335:71">gb</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block>

    </block_content>}</block></while>

<label pos:start="343:1" pos:end="343:8"><name pos:start="343:1" pos:end="343:7">the_end</name>:</label>

    <expr_stmt pos:start="345:5" pos:end="345:71"><expr pos:start="345:5" pos:end="345:70"><call pos:start="345:5" pos:end="345:70"><name pos:start="345:5" pos:end="345:11">dprintf</name><argument_list pos:start="345:12" pos:end="345:70">(<argument pos:start="345:13" pos:end="345:50"><expr pos:start="345:13" pos:end="345:50"><literal type="string" pos:start="345:13" pos:end="345:50">"mjpeg decode frame unused %d bytes\n"</literal></expr></argument>, <argument pos:start="345:53" pos:end="345:69"><expr pos:start="345:53" pos:end="345:69"><name pos:start="345:53" pos:end="345:59">buf_end</name> <operator pos:start="345:61" pos:end="345:61">-</operator> <name pos:start="345:63" pos:end="345:69">buf_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<comment type="line" pos:start="347:1" pos:end="347:31">//    return buf_end - buf_ptr;</comment>

    <return pos:start="349:5" pos:end="349:25">return <expr pos:start="349:12" pos:end="349:24"><name pos:start="349:12" pos:end="349:18">buf_ptr</name> <operator pos:start="349:20" pos:end="349:20">-</operator> <name pos:start="349:22" pos:end="349:24">buf</name></expr>;</return>

</block_content>}</block></function>
</unit>
