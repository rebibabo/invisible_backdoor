<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18520.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">extract_exponents</name><parameter_list pos:start="1:30" pos:end="1:50">(<parameter pos:start="1:31" pos:end="1:49"><decl pos:start="1:31" pos:end="1:49"><type pos:start="1:31" pos:end="1:48"><name pos:start="1:31" pos:end="1:46">AC3EncodeContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:5">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">blk</name></decl>, <decl pos:start="5:14" pos:end="5:15"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:15">ch</name></decl>, <decl pos:start="5:18" pos:end="5:18"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:18" pos:end="5:18">i</name></decl>;</decl_stmt>



    <for pos:start="9:5" pos:end="45:5">for <control pos:start="9:9" pos:end="9:40">(<init pos:start="9:10" pos:end="9:16"><expr pos:start="9:10" pos:end="9:15"><name pos:start="9:10" pos:end="9:11">ch</name> <operator pos:start="9:13" pos:end="9:13">=</operator> <literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr>;</init> <condition pos:start="9:18" pos:end="9:34"><expr pos:start="9:18" pos:end="9:33"><name pos:start="9:18" pos:end="9:19">ch</name> <operator pos:start="9:21" pos:end="9:21">&lt;</operator> <name pos:start="9:23" pos:end="9:33"><name pos:start="9:23" pos:end="9:23">s</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:33">channels</name></name></expr>;</condition> <incr pos:start="9:36" pos:end="9:39"><expr pos:start="9:36" pos:end="9:39"><name pos:start="9:36" pos:end="9:37">ch</name><operator pos:start="9:38" pos:end="9:39">++</operator></expr></incr>)</control> <block pos:start="9:42" pos:end="45:5">{<block_content pos:start="11:9" pos:end="43:9">

        <for pos:start="11:9" pos:end="43:9">for <control pos:start="11:13" pos:end="11:50">(<init pos:start="11:14" pos:end="11:21"><expr pos:start="11:14" pos:end="11:20"><name pos:start="11:14" pos:end="11:16">blk</name> <operator pos:start="11:18" pos:end="11:18">=</operator> <literal type="number" pos:start="11:20" pos:end="11:20">0</literal></expr>;</init> <condition pos:start="11:23" pos:end="11:43"><expr pos:start="11:23" pos:end="11:42"><name pos:start="11:23" pos:end="11:25">blk</name> <operator pos:start="11:27" pos:end="11:27">&lt;</operator> <name pos:start="11:29" pos:end="11:42">AC3_MAX_BLOCKS</name></expr>;</condition> <incr pos:start="11:45" pos:end="11:49"><expr pos:start="11:45" pos:end="11:49"><name pos:start="11:45" pos:end="11:47">blk</name><operator pos:start="11:48" pos:end="11:49">++</operator></expr></incr>)</control> <block pos:start="11:52" pos:end="43:9">{<block_content pos:start="13:13" pos:end="41:13">

            <decl_stmt pos:start="13:13" pos:end="13:46"><decl pos:start="13:13" pos:end="13:45"><type pos:start="13:13" pos:end="13:22"><name pos:start="13:13" pos:end="13:20">AC3Block</name> <modifier pos:start="13:22" pos:end="13:22">*</modifier></type><name pos:start="13:23" pos:end="13:27">block</name> <init pos:start="13:29" pos:end="13:45">= <expr pos:start="13:31" pos:end="13:45"><operator pos:start="13:31" pos:end="13:31">&amp;</operator><name pos:start="13:32" pos:end="13:45"><name pos:start="13:32" pos:end="13:32">s</name><operator pos:start="13:33" pos:end="13:34">-&gt;</operator><name pos:start="13:35" pos:end="13:40">blocks</name><index pos:start="13:41" pos:end="13:45">[<expr pos:start="13:42" pos:end="13:44"><name pos:start="13:42" pos:end="13:44">blk</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <for pos:start="15:13" pos:end="41:13">for <control pos:start="15:17" pos:end="15:47">(<init pos:start="15:18" pos:end="15:23"><expr pos:start="15:18" pos:end="15:22"><name pos:start="15:18" pos:end="15:18">i</name> <operator pos:start="15:20" pos:end="15:20">=</operator> <literal type="number" pos:start="15:22" pos:end="15:22">0</literal></expr>;</init> <condition pos:start="15:25" pos:end="15:42"><expr pos:start="15:25" pos:end="15:41"><name pos:start="15:25" pos:end="15:25">i</name> <operator pos:start="15:27" pos:end="15:27">&lt;</operator> <name pos:start="15:29" pos:end="15:41">AC3_MAX_COEFS</name></expr>;</condition> <incr pos:start="15:44" pos:end="15:46"><expr pos:start="15:44" pos:end="15:46"><name pos:start="15:44" pos:end="15:44">i</name><operator pos:start="15:45" pos:end="15:46">++</operator></expr></incr>)</control> <block pos:start="15:49" pos:end="41:13">{<block_content pos:start="17:17" pos:end="39:38">

                <decl_stmt pos:start="17:17" pos:end="17:22"><decl pos:start="17:17" pos:end="17:21"><type pos:start="17:17" pos:end="17:19"><name pos:start="17:17" pos:end="17:19">int</name></type> <name pos:start="17:21" pos:end="17:21">e</name></decl>;</decl_stmt>

                <decl_stmt pos:start="19:17" pos:end="19:65"><decl pos:start="19:17" pos:end="19:64"><type pos:start="19:17" pos:end="19:19"><name pos:start="19:17" pos:end="19:19">int</name></type> <name pos:start="19:21" pos:end="19:21">v</name> <init pos:start="19:23" pos:end="19:64">= <expr pos:start="19:25" pos:end="19:64"><call pos:start="19:25" pos:end="19:64"><name pos:start="19:25" pos:end="19:27">abs</name><argument_list pos:start="19:28" pos:end="19:64">(<argument pos:start="19:29" pos:end="19:63"><expr pos:start="19:29" pos:end="19:63"><call pos:start="19:29" pos:end="19:63"><name pos:start="19:29" pos:end="19:38">SCALE_COEF</name><argument_list pos:start="19:39" pos:end="19:63">(<argument pos:start="19:40" pos:end="19:62"><expr pos:start="19:40" pos:end="19:62"><name pos:start="19:40" pos:end="19:62"><name pos:start="19:40" pos:end="19:44">block</name><operator pos:start="19:45" pos:end="19:46">-&gt;</operator><name pos:start="19:47" pos:end="19:55">mdct_coef</name><index pos:start="19:56" pos:end="19:59">[<expr pos:start="19:57" pos:end="19:58"><name pos:start="19:57" pos:end="19:58">ch</name></expr>]</index><index pos:start="19:60" pos:end="19:62">[<expr pos:start="19:61" pos:end="19:61"><name pos:start="19:61" pos:end="19:61">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="21:17" pos:end="37:17"><if pos:start="21:17" pos:end="23:27">if <condition pos:start="21:20" pos:end="21:27">(<expr pos:start="21:21" pos:end="21:26"><name pos:start="21:21" pos:end="21:21">v</name> <operator pos:start="21:23" pos:end="21:24">==</operator> <literal type="number" pos:start="21:26" pos:end="21:26">0</literal></expr>)</condition><block type="pseudo" pos:start="23:21" pos:end="23:27"><block_content pos:start="23:21" pos:end="23:27">

                    <expr_stmt pos:start="23:21" pos:end="23:27"><expr pos:start="23:21" pos:end="23:26"><name pos:start="23:21" pos:end="23:21">e</name> <operator pos:start="23:23" pos:end="23:23">=</operator> <literal type="number" pos:start="23:25" pos:end="23:26">24</literal></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="25:17" pos:end="37:17">else <block pos:start="25:22" pos:end="37:17">{<block_content pos:start="27:21" pos:end="35:21">

                    <expr_stmt pos:start="27:21" pos:end="27:63"><expr pos:start="27:21" pos:end="27:62"><name pos:start="27:21" pos:end="27:21">e</name> <operator pos:start="27:23" pos:end="27:23">=</operator> <literal type="number" pos:start="27:25" pos:end="27:28">23</literal> <operator pos:start="27:28" pos:end="27:28">-</operator> <call pos:start="27:30" pos:end="27:39"><name pos:start="27:30" pos:end="27:36">av_log2</name><argument_list pos:start="27:37" pos:end="27:39">(<argument pos:start="27:38" pos:end="27:38"><expr pos:start="27:38" pos:end="27:38"><name pos:start="27:38" pos:end="27:38">v</name></expr></argument>)</argument_list></call> <operator pos:start="27:41" pos:end="27:41">+</operator> <name pos:start="27:43" pos:end="27:62"><name pos:start="27:43" pos:end="27:47">block</name><operator pos:start="27:48" pos:end="27:49">-&gt;</operator><name pos:start="27:50" pos:end="27:58">exp_shift</name><index pos:start="27:59" pos:end="27:62">[<expr pos:start="27:60" pos:end="27:61"><name pos:start="27:60" pos:end="27:61">ch</name></expr>]</index></name></expr>;</expr_stmt>

                    <if_stmt pos:start="29:21" pos:end="35:21"><if pos:start="29:21" pos:end="35:21">if <condition pos:start="29:24" pos:end="29:32">(<expr pos:start="29:25" pos:end="29:31"><name pos:start="29:25" pos:end="29:25">e</name> <operator pos:start="29:27" pos:end="29:28">&gt;=</operator> <literal type="number" pos:start="29:30" pos:end="29:31">24</literal></expr>)</condition> <block pos:start="29:34" pos:end="35:21">{<block_content pos:start="31:25" pos:end="33:52">

                        <expr_stmt pos:start="31:25" pos:end="31:31"><expr pos:start="31:25" pos:end="31:30"><name pos:start="31:25" pos:end="31:25">e</name> <operator pos:start="31:27" pos:end="31:27">=</operator> <literal type="number" pos:start="31:29" pos:end="31:30">24</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="33:25" pos:end="33:52"><expr pos:start="33:25" pos:end="33:51"><name pos:start="33:25" pos:end="33:47"><name pos:start="33:25" pos:end="33:29">block</name><operator pos:start="33:30" pos:end="33:31">-&gt;</operator><name pos:start="33:32" pos:end="33:40">mdct_coef</name><index pos:start="33:41" pos:end="33:44">[<expr pos:start="33:42" pos:end="33:43"><name pos:start="33:42" pos:end="33:43">ch</name></expr>]</index><index pos:start="33:45" pos:end="33:47">[<expr pos:start="33:46" pos:end="33:46"><name pos:start="33:46" pos:end="33:46">i</name></expr>]</index></name> <operator pos:start="33:49" pos:end="33:49">=</operator> <literal type="number" pos:start="33:51" pos:end="33:51">0</literal></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="39:17" pos:end="39:38"><expr pos:start="39:17" pos:end="39:37"><name pos:start="39:17" pos:end="39:33"><name pos:start="39:17" pos:end="39:21">block</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:26">exp</name><index pos:start="39:27" pos:end="39:30">[<expr pos:start="39:28" pos:end="39:29"><name pos:start="39:28" pos:end="39:29">ch</name></expr>]</index><index pos:start="39:31" pos:end="39:33">[<expr pos:start="39:32" pos:end="39:32"><name pos:start="39:32" pos:end="39:32">i</name></expr>]</index></name> <operator pos:start="39:35" pos:end="39:35">=</operator> <name pos:start="39:37" pos:end="39:37">e</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
