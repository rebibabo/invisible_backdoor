<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17237.c" pos:tabs="8"><function pos:start="1:1" pos:end="138:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">init_filters</name><parameter_list pos:start="1:24" pos:end="1:50">(<parameter pos:start="1:25" pos:end="1:49"><decl pos:start="1:25" pos:end="1:49"><type pos:start="1:25" pos:end="1:36"><specifier pos:start="1:25" pos:end="1:29">const</specifier> <name pos:start="1:31" pos:end="1:34">char</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:49">filters_descr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="138:1">{<block_content pos:start="5:5" pos:end="136:13">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">char</name></type> <name pos:start="5:10" pos:end="5:18"><name pos:start="5:10" pos:end="5:13">args</name><index pos:start="5:14" pos:end="5:18">[<expr pos:start="5:15" pos:end="5:17"><literal type="number" pos:start="5:15" pos:end="5:17">512</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:60"><decl pos:start="9:5" pos:end="9:59"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVFilter</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:24">abuffersrc</name>  <init pos:start="9:27" pos:end="9:59">= <expr pos:start="9:29" pos:end="9:59"><call pos:start="9:29" pos:end="9:59"><name pos:start="9:29" pos:end="9:48">avfilter_get_by_name</name><argument_list pos:start="9:49" pos:end="9:59">(<argument pos:start="9:50" pos:end="9:58"><expr pos:start="9:50" pos:end="9:58"><literal type="string" pos:start="9:50" pos:end="9:58">"abuffer"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:64"><decl pos:start="11:5" pos:end="11:63"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">AVFilter</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:25">abuffersink</name> <init pos:start="11:27" pos:end="11:63">= <expr pos:start="11:29" pos:end="11:63"><call pos:start="11:29" pos:end="11:63"><name pos:start="11:29" pos:end="11:48">avfilter_get_by_name</name><argument_list pos:start="11:49" pos:end="11:63">(<argument pos:start="11:50" pos:end="11:62"><expr pos:start="11:50" pos:end="11:62"><literal type="string" pos:start="11:50" pos:end="11:62">"abuffersink"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:52"><decl pos:start="13:5" pos:end="13:51"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:17">AVFilterInOut</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:26">outputs</name> <init pos:start="13:28" pos:end="13:51">= <expr pos:start="13:30" pos:end="13:51"><call pos:start="13:30" pos:end="13:51"><name pos:start="13:30" pos:end="13:49">avfilter_inout_alloc</name><argument_list pos:start="13:50" pos:end="13:51">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:52"><decl pos:start="15:5" pos:end="15:51"><type pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:17">AVFilterInOut</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:25">inputs</name>  <init pos:start="15:28" pos:end="15:51">= <expr pos:start="15:30" pos:end="15:51"><call pos:start="15:30" pos:end="15:51"><name pos:start="15:30" pos:end="15:49">avfilter_inout_alloc</name><argument_list pos:start="15:50" pos:end="15:51">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:72"><decl pos:start="17:5" pos:end="17:71"><type pos:start="17:5" pos:end="17:29"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:29"><name pos:start="17:11" pos:end="17:14">enum</name> <name pos:start="17:16" pos:end="17:29">AVSampleFormat</name></name></type> <name pos:start="17:31" pos:end="17:43"><name pos:start="17:31" pos:end="17:41">sample_fmts</name><index pos:start="17:42" pos:end="17:43">[]</index></name> <init pos:start="17:45" pos:end="17:71">= <expr pos:start="17:47" pos:end="17:71"><block pos:start="17:47" pos:end="17:71">{ <expr pos:start="17:49" pos:end="17:65"><name pos:start="17:49" pos:end="17:65">AV_SAMPLE_FMT_S16</name></expr>, <expr pos:start="17:68" pos:end="17:69"><operator pos:start="17:68" pos:end="17:68">-</operator><literal type="number" pos:start="17:69" pos:end="17:69">1</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:70"><decl pos:start="19:5" pos:end="19:69"><type pos:start="19:5" pos:end="19:13"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:13">int</name></type> <name pos:start="19:15" pos:end="19:28"><name pos:start="19:15" pos:end="19:26">packing_fmts</name><index pos:start="19:27" pos:end="19:28">[]</index></name>                <init pos:start="19:45" pos:end="19:69">= <expr pos:start="19:47" pos:end="19:69"><block pos:start="19:47" pos:end="19:69">{ <expr pos:start="19:49" pos:end="19:63"><name pos:start="19:49" pos:end="19:63">AVFILTER_PACKED</name></expr>, <expr pos:start="19:66" pos:end="19:67"><operator pos:start="19:66" pos:end="19:66">-</operator><literal type="number" pos:start="19:67" pos:end="19:67">1</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:75"><decl pos:start="21:5" pos:end="21:74"><type pos:start="21:5" pos:end="21:19"><specifier pos:start="21:5" pos:end="21:9">const</specifier> <name pos:start="21:11" pos:end="21:17">int64_t</name> <modifier pos:start="21:19" pos:end="21:19">*</modifier></type><name pos:start="21:20" pos:end="21:28">chlayouts</name>                <init pos:start="21:45" pos:end="21:74">= <expr pos:start="21:47" pos:end="21:74"><name pos:start="21:47" pos:end="21:74">avfilter_all_channel_layouts</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:44"><decl pos:start="23:5" pos:end="23:43"><type pos:start="23:5" pos:end="23:25"><name pos:start="23:5" pos:end="23:23">AVABufferSinkParams</name> <modifier pos:start="23:25" pos:end="23:25">*</modifier></type><name pos:start="23:26" pos:end="23:43">abuffersink_params</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:32"><decl pos:start="25:5" pos:end="25:31"><type pos:start="25:5" pos:end="25:24"><specifier pos:start="25:5" pos:end="25:9">const</specifier> <name pos:start="25:11" pos:end="25:22">AVFilterLink</name> <modifier pos:start="25:24" pos:end="25:24">*</modifier></type><name pos:start="25:25" pos:end="25:31">outlink</name></decl>;</decl_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:42"><expr pos:start="29:5" pos:end="29:41"><name pos:start="29:5" pos:end="29:16">filter_graph</name> <operator pos:start="29:18" pos:end="29:18">=</operator> <call pos:start="29:20" pos:end="29:41"><name pos:start="29:20" pos:end="29:39">avfilter_graph_alloc</name><argument_list pos:start="29:40" pos:end="29:41">()</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:89">/* buffer audio source: the decoded frames from the decoder will be inserted here. */</comment>

    <if_stmt pos:start="35:5" pos:end="37:83"><if pos:start="35:5" pos:end="37:83">if <condition pos:start="35:8" pos:end="35:33">(<expr pos:start="35:9" pos:end="35:32"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:32"><name pos:start="35:10" pos:end="35:16">dec_ctx</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:32">channel_layout</name></name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:83"><block_content pos:start="37:9" pos:end="37:83">

        <expr_stmt pos:start="37:9" pos:end="37:83"><expr pos:start="37:9" pos:end="37:82"><name pos:start="37:9" pos:end="37:31"><name pos:start="37:9" pos:end="37:15">dec_ctx</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:31">channel_layout</name></name> <operator pos:start="37:33" pos:end="37:33">=</operator> <call pos:start="37:35" pos:end="37:82"><name pos:start="37:35" pos:end="37:63">av_get_default_channel_layout</name><argument_list pos:start="37:64" pos:end="37:82">(<argument pos:start="37:65" pos:end="37:81"><expr pos:start="37:65" pos:end="37:81"><name pos:start="37:65" pos:end="37:81"><name pos:start="37:65" pos:end="37:71">dec_ctx</name><operator pos:start="37:72" pos:end="37:73">-&gt;</operator><name pos:start="37:74" pos:end="37:81">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="39:5" pos:end="41:81"><expr pos:start="39:5" pos:end="41:80"><call pos:start="39:5" pos:end="41:80"><name pos:start="39:5" pos:end="39:12">snprintf</name><argument_list pos:start="39:13" pos:end="41:80">(<argument pos:start="39:14" pos:end="39:17"><expr pos:start="39:14" pos:end="39:17"><name pos:start="39:14" pos:end="39:17">args</name></expr></argument>, <argument pos:start="39:20" pos:end="39:31"><expr pos:start="39:20" pos:end="39:31"><sizeof pos:start="39:20" pos:end="39:31">sizeof<argument_list pos:start="39:26" pos:end="39:31">(<argument pos:start="39:27" pos:end="39:30"><expr pos:start="39:27" pos:end="39:30"><name pos:start="39:27" pos:end="39:30">args</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="39:34" pos:end="39:59"><expr pos:start="39:34" pos:end="39:59"><literal type="string" pos:start="39:34" pos:end="39:44">"%d:%d:0x%"</literal><name pos:start="39:45" pos:end="39:50">PRIx64</name><literal type="string" pos:start="39:51" pos:end="39:59">":packed"</literal></expr></argument>,

             <argument pos:start="41:14" pos:end="41:33"><expr pos:start="41:14" pos:end="41:33"><name pos:start="41:14" pos:end="41:33"><name pos:start="41:14" pos:end="41:20">dec_ctx</name><operator pos:start="41:21" pos:end="41:22">-&gt;</operator><name pos:start="41:23" pos:end="41:33">sample_rate</name></name></expr></argument>, <argument pos:start="41:36" pos:end="41:54"><expr pos:start="41:36" pos:end="41:54"><name pos:start="41:36" pos:end="41:54"><name pos:start="41:36" pos:end="41:42">dec_ctx</name><operator pos:start="41:43" pos:end="41:44">-&gt;</operator><name pos:start="41:45" pos:end="41:54">sample_fmt</name></name></expr></argument>, <argument pos:start="41:57" pos:end="41:79"><expr pos:start="41:57" pos:end="41:79"><name pos:start="41:57" pos:end="41:79"><name pos:start="41:57" pos:end="41:63">dec_ctx</name><operator pos:start="41:64" pos:end="41:65">-&gt;</operator><name pos:start="41:66" pos:end="41:79">channel_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="45:65"><expr pos:start="43:5" pos:end="45:64"><name pos:start="43:5" pos:end="43:7">ret</name> <operator pos:start="43:9" pos:end="43:9">=</operator> <call pos:start="43:11" pos:end="45:64"><name pos:start="43:11" pos:end="43:38">avfilter_graph_create_filter</name><argument_list pos:start="43:39" pos:end="45:64">(<argument pos:start="43:40" pos:end="43:53"><expr pos:start="43:40" pos:end="43:53"><operator pos:start="43:40" pos:end="43:40">&amp;</operator><name pos:start="43:41" pos:end="43:53">buffersrc_ctx</name></expr></argument>, <argument pos:start="43:56" pos:end="43:65"><expr pos:start="43:56" pos:end="43:65"><name pos:start="43:56" pos:end="43:65">abuffersrc</name></expr></argument>, <argument pos:start="43:68" pos:end="43:71"><expr pos:start="43:68" pos:end="43:71"><literal type="string" pos:start="43:68" pos:end="43:71">"in"</literal></expr></argument>,

                                       <argument pos:start="45:40" pos:end="45:43"><expr pos:start="45:40" pos:end="45:43"><name pos:start="45:40" pos:end="45:43">args</name></expr></argument>, <argument pos:start="45:46" pos:end="45:49"><expr pos:start="45:46" pos:end="45:49"><name pos:start="45:46" pos:end="45:49">NULL</name></expr></argument>, <argument pos:start="45:52" pos:end="45:63"><expr pos:start="45:52" pos:end="45:63"><name pos:start="45:52" pos:end="45:63">filter_graph</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if <condition pos:start="47:8" pos:end="47:16">(<expr pos:start="47:9" pos:end="47:15"><name pos:start="47:9" pos:end="47:11">ret</name> <operator pos:start="47:13" pos:end="47:13">&lt;</operator> <literal type="number" pos:start="47:15" pos:end="47:15">0</literal></expr>)</condition> <block pos:start="47:18" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:19">

        <expr_stmt pos:start="49:9" pos:end="49:74"><expr pos:start="49:9" pos:end="49:73"><call pos:start="49:9" pos:end="49:73"><name pos:start="49:9" pos:end="49:14">av_log</name><argument_list pos:start="49:15" pos:end="49:73">(<argument pos:start="49:16" pos:end="49:19"><expr pos:start="49:16" pos:end="49:19"><name pos:start="49:16" pos:end="49:19">NULL</name></expr></argument>, <argument pos:start="49:22" pos:end="49:33"><expr pos:start="49:22" pos:end="49:33"><name pos:start="49:22" pos:end="49:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="49:36" pos:end="49:72"><expr pos:start="49:36" pos:end="49:72"><literal type="string" pos:start="49:36" pos:end="49:72">"Cannot create audio buffer source\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:19">return <expr pos:start="51:16" pos:end="51:18"><name pos:start="51:16" pos:end="51:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="57:5" pos:end="57:59">/* buffer audio sink: to terminate the filter chain. */</comment>

    <expr_stmt pos:start="59:5" pos:end="59:55"><expr pos:start="59:5" pos:end="59:54"><name pos:start="59:5" pos:end="59:22">abuffersink_params</name> <operator pos:start="59:24" pos:end="59:24">=</operator> <call pos:start="59:26" pos:end="59:54"><name pos:start="59:26" pos:end="59:52">av_abuffersink_params_alloc</name><argument_list pos:start="59:53" pos:end="59:54">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:54"><expr pos:start="61:5" pos:end="61:53"><name pos:start="61:5" pos:end="61:35"><name pos:start="61:5" pos:end="61:22">abuffersink_params</name><operator pos:start="61:23" pos:end="61:24">-&gt;</operator><name pos:start="61:25" pos:end="61:35">sample_fmts</name></name>     <operator pos:start="61:41" pos:end="61:41">=</operator> <name pos:start="61:43" pos:end="61:53">sample_fmts</name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:52"><expr pos:start="63:5" pos:end="63:51"><name pos:start="63:5" pos:end="63:39"><name pos:start="63:5" pos:end="63:22">abuffersink_params</name><operator pos:start="63:23" pos:end="63:24">-&gt;</operator><name pos:start="63:25" pos:end="63:39">channel_layouts</name></name> <operator pos:start="63:41" pos:end="63:41">=</operator> <name pos:start="63:43" pos:end="63:51">chlayouts</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:55"><expr pos:start="65:5" pos:end="65:54"><name pos:start="65:5" pos:end="65:36"><name pos:start="65:5" pos:end="65:22">abuffersink_params</name><operator pos:start="65:23" pos:end="65:24">-&gt;</operator><name pos:start="65:25" pos:end="65:36">packing_fmts</name></name>    <operator pos:start="65:41" pos:end="65:41">=</operator> <name pos:start="65:43" pos:end="65:54">packing_fmts</name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="69:79"><expr pos:start="67:5" pos:end="69:78"><name pos:start="67:5" pos:end="67:7">ret</name> <operator pos:start="67:9" pos:end="67:9">=</operator> <call pos:start="67:11" pos:end="69:78"><name pos:start="67:11" pos:end="67:38">avfilter_graph_create_filter</name><argument_list pos:start="67:39" pos:end="69:78">(<argument pos:start="67:40" pos:end="67:54"><expr pos:start="67:40" pos:end="67:54"><operator pos:start="67:40" pos:end="67:40">&amp;</operator><name pos:start="67:41" pos:end="67:54">buffersink_ctx</name></expr></argument>, <argument pos:start="67:57" pos:end="67:67"><expr pos:start="67:57" pos:end="67:67"><name pos:start="67:57" pos:end="67:67">abuffersink</name></expr></argument>, <argument pos:start="67:70" pos:end="67:74"><expr pos:start="67:70" pos:end="67:74"><literal type="string" pos:start="67:70" pos:end="67:74">"out"</literal></expr></argument>,

                                       <argument pos:start="69:40" pos:end="69:43"><expr pos:start="69:40" pos:end="69:43"><name pos:start="69:40" pos:end="69:43">NULL</name></expr></argument>, <argument pos:start="69:46" pos:end="69:63"><expr pos:start="69:46" pos:end="69:63"><name pos:start="69:46" pos:end="69:63">abuffersink_params</name></expr></argument>, <argument pos:start="69:66" pos:end="69:77"><expr pos:start="69:66" pos:end="69:77"><name pos:start="69:66" pos:end="69:77">filter_graph</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <if_stmt pos:start="72:5" pos:end="78:5"><if pos:start="72:5" pos:end="78:5">if <condition pos:start="72:8" pos:end="72:16">(<expr pos:start="72:9" pos:end="72:15"><name pos:start="72:9" pos:end="72:11">ret</name> <operator pos:start="72:13" pos:end="72:13">&lt;</operator> <literal type="number" pos:start="72:15" pos:end="72:15">0</literal></expr>)</condition> <block pos:start="72:18" pos:end="78:5">{<block_content pos:start="74:9" pos:end="76:19">

        <expr_stmt pos:start="74:9" pos:end="74:72"><expr pos:start="74:9" pos:end="74:71"><call pos:start="74:9" pos:end="74:71"><name pos:start="74:9" pos:end="74:14">av_log</name><argument_list pos:start="74:15" pos:end="74:71">(<argument pos:start="74:16" pos:end="74:19"><expr pos:start="74:16" pos:end="74:19"><name pos:start="74:16" pos:end="74:19">NULL</name></expr></argument>, <argument pos:start="74:22" pos:end="74:33"><expr pos:start="74:22" pos:end="74:33"><name pos:start="74:22" pos:end="74:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="74:36" pos:end="74:70"><expr pos:start="74:36" pos:end="74:70"><literal type="string" pos:start="74:36" pos:end="74:70">"Cannot create audio buffer sink\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="76:9" pos:end="76:19">return <expr pos:start="76:16" pos:end="76:18"><name pos:start="76:16" pos:end="76:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="82:5" pos:end="82:41">/* Endpoints for the filter graph. */</comment>

    <expr_stmt pos:start="84:5" pos:end="84:42"><expr pos:start="84:5" pos:end="84:41"><name pos:start="84:5" pos:end="84:17"><name pos:start="84:5" pos:end="84:11">outputs</name><operator pos:start="84:12" pos:end="84:13">-&gt;</operator><name pos:start="84:14" pos:end="84:17">name</name></name>       <operator pos:start="84:25" pos:end="84:25">=</operator> <call pos:start="84:27" pos:end="84:41"><name pos:start="84:27" pos:end="84:35">av_strdup</name><argument_list pos:start="84:36" pos:end="84:41">(<argument pos:start="84:37" pos:end="84:40"><expr pos:start="84:37" pos:end="84:40"><literal type="string" pos:start="84:37" pos:end="84:40">"in"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="86:5" pos:end="86:40"><expr pos:start="86:5" pos:end="86:39"><name pos:start="86:5" pos:end="86:23"><name pos:start="86:5" pos:end="86:11">outputs</name><operator pos:start="86:12" pos:end="86:13">-&gt;</operator><name pos:start="86:14" pos:end="86:23">filter_ctx</name></name> <operator pos:start="86:25" pos:end="86:25">=</operator> <name pos:start="86:27" pos:end="86:39">buffersrc_ctx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="88:5" pos:end="88:28"><expr pos:start="88:5" pos:end="88:27"><name pos:start="88:5" pos:end="88:20"><name pos:start="88:5" pos:end="88:11">outputs</name><operator pos:start="88:12" pos:end="88:13">-&gt;</operator><name pos:start="88:14" pos:end="88:20">pad_idx</name></name>    <operator pos:start="88:25" pos:end="88:25">=</operator> <literal type="number" pos:start="88:27" pos:end="88:27">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="90:5" pos:end="90:31"><expr pos:start="90:5" pos:end="90:30"><name pos:start="90:5" pos:end="90:17"><name pos:start="90:5" pos:end="90:11">outputs</name><operator pos:start="90:12" pos:end="90:13">-&gt;</operator><name pos:start="90:14" pos:end="90:17">next</name></name>       <operator pos:start="90:25" pos:end="90:25">=</operator> <name pos:start="90:27" pos:end="90:30">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="94:5" pos:end="94:42"><expr pos:start="94:5" pos:end="94:41"><name pos:start="94:5" pos:end="94:16"><name pos:start="94:5" pos:end="94:10">inputs</name><operator pos:start="94:11" pos:end="94:12">-&gt;</operator><name pos:start="94:13" pos:end="94:16">name</name></name>       <operator pos:start="94:24" pos:end="94:24">=</operator> <call pos:start="94:26" pos:end="94:41"><name pos:start="94:26" pos:end="94:34">av_strdup</name><argument_list pos:start="94:35" pos:end="94:41">(<argument pos:start="94:36" pos:end="94:40"><expr pos:start="94:36" pos:end="94:40"><literal type="string" pos:start="94:36" pos:end="94:40">"out"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="96:5" pos:end="96:40"><expr pos:start="96:5" pos:end="96:39"><name pos:start="96:5" pos:end="96:22"><name pos:start="96:5" pos:end="96:10">inputs</name><operator pos:start="96:11" pos:end="96:12">-&gt;</operator><name pos:start="96:13" pos:end="96:22">filter_ctx</name></name> <operator pos:start="96:24" pos:end="96:24">=</operator> <name pos:start="96:26" pos:end="96:39">buffersink_ctx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="98:5" pos:end="98:27"><expr pos:start="98:5" pos:end="98:26"><name pos:start="98:5" pos:end="98:19"><name pos:start="98:5" pos:end="98:10">inputs</name><operator pos:start="98:11" pos:end="98:12">-&gt;</operator><name pos:start="98:13" pos:end="98:19">pad_idx</name></name>    <operator pos:start="98:24" pos:end="98:24">=</operator> <literal type="number" pos:start="98:26" pos:end="98:26">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="100:5" pos:end="100:30"><expr pos:start="100:5" pos:end="100:29"><name pos:start="100:5" pos:end="100:16"><name pos:start="100:5" pos:end="100:10">inputs</name><operator pos:start="100:11" pos:end="100:12">-&gt;</operator><name pos:start="100:13" pos:end="100:16">next</name></name>       <operator pos:start="100:24" pos:end="100:24">=</operator> <name pos:start="100:26" pos:end="100:29">NULL</name></expr>;</expr_stmt>



    <if_stmt pos:start="104:5" pos:end="108:19"><if pos:start="104:5" pos:end="108:19">if <condition pos:start="104:8" pos:end="106:66">(<expr pos:start="104:9" pos:end="106:65"><operator pos:start="104:9" pos:end="104:9">(</operator><name pos:start="104:10" pos:end="104:12">ret</name> <operator pos:start="104:14" pos:end="104:14">=</operator> <call pos:start="104:16" pos:end="106:60"><name pos:start="104:16" pos:end="104:35">avfilter_graph_parse</name><argument_list pos:start="104:36" pos:end="106:60">(<argument pos:start="104:37" pos:end="104:48"><expr pos:start="104:37" pos:end="104:48"><name pos:start="104:37" pos:end="104:48">filter_graph</name></expr></argument>, <argument pos:start="104:51" pos:end="104:62"><expr pos:start="104:51" pos:end="104:62"><name pos:start="104:51" pos:end="104:62">filter_descr</name></expr></argument>,

                                    <argument pos:start="106:37" pos:end="106:43"><expr pos:start="106:37" pos:end="106:43"><operator pos:start="106:37" pos:end="106:37">&amp;</operator><name pos:start="106:38" pos:end="106:43">inputs</name></expr></argument>, <argument pos:start="106:46" pos:end="106:53"><expr pos:start="106:46" pos:end="106:53"><operator pos:start="106:46" pos:end="106:46">&amp;</operator><name pos:start="106:47" pos:end="106:53">outputs</name></expr></argument>, <argument pos:start="106:56" pos:end="106:59"><expr pos:start="106:56" pos:end="106:59"><name pos:start="106:56" pos:end="106:59">NULL</name></expr></argument>)</argument_list></call><operator pos:start="106:61" pos:end="106:61">)</operator> <operator pos:start="106:63" pos:end="106:63">&lt;</operator> <literal type="number" pos:start="106:65" pos:end="106:65">0</literal></expr>)</condition><block type="pseudo" pos:start="108:9" pos:end="108:19"><block_content pos:start="108:9" pos:end="108:19">

        <return pos:start="108:9" pos:end="108:19">return <expr pos:start="108:16" pos:end="108:18"><name pos:start="108:16" pos:end="108:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="112:5" pos:end="114:19"><if pos:start="112:5" pos:end="114:19">if <condition pos:start="112:8" pos:end="112:62">(<expr pos:start="112:9" pos:end="112:61"><operator pos:start="112:9" pos:end="112:9">(</operator><name pos:start="112:10" pos:end="112:12">ret</name> <operator pos:start="112:14" pos:end="112:14">=</operator> <call pos:start="112:16" pos:end="112:56"><name pos:start="112:16" pos:end="112:36">avfilter_graph_config</name><argument_list pos:start="112:37" pos:end="112:56">(<argument pos:start="112:38" pos:end="112:49"><expr pos:start="112:38" pos:end="112:49"><name pos:start="112:38" pos:end="112:49">filter_graph</name></expr></argument>, <argument pos:start="112:52" pos:end="112:55"><expr pos:start="112:52" pos:end="112:55"><name pos:start="112:52" pos:end="112:55">NULL</name></expr></argument>)</argument_list></call><operator pos:start="112:57" pos:end="112:57">)</operator> <operator pos:start="112:59" pos:end="112:59">&lt;</operator> <literal type="number" pos:start="112:61" pos:end="112:61">0</literal></expr>)</condition><block type="pseudo" pos:start="114:9" pos:end="114:19"><block_content pos:start="114:9" pos:end="114:19">

        <return pos:start="114:9" pos:end="114:19">return <expr pos:start="114:16" pos:end="114:18"><name pos:start="114:16" pos:end="114:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="118:5" pos:end="120:68">/* Print summary of the sink buffer

     * Note: args buffer is reused to store channel layout string */</comment>

    <expr_stmt pos:start="122:5" pos:end="122:40"><expr pos:start="122:5" pos:end="122:39"><name pos:start="122:5" pos:end="122:11">outlink</name> <operator pos:start="122:13" pos:end="122:13">=</operator> <name pos:start="122:15" pos:end="122:39"><name pos:start="122:15" pos:end="122:28">buffersink_ctx</name><operator pos:start="122:29" pos:end="122:30">-&gt;</operator><name pos:start="122:31" pos:end="122:36">inputs</name><index pos:start="122:37" pos:end="122:39">[<expr pos:start="122:38" pos:end="122:38"><literal type="number" pos:start="122:38" pos:end="122:38">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="124:5" pos:end="124:82"><expr pos:start="124:5" pos:end="124:81"><call pos:start="124:5" pos:end="124:81"><name pos:start="124:5" pos:end="124:32">av_get_channel_layout_string</name><argument_list pos:start="124:33" pos:end="124:81">(<argument pos:start="124:34" pos:end="124:37"><expr pos:start="124:34" pos:end="124:37"><name pos:start="124:34" pos:end="124:37">args</name></expr></argument>, <argument pos:start="124:40" pos:end="124:51"><expr pos:start="124:40" pos:end="124:51"><sizeof pos:start="124:40" pos:end="124:51">sizeof<argument_list pos:start="124:46" pos:end="124:51">(<argument pos:start="124:47" pos:end="124:50"><expr pos:start="124:47" pos:end="124:50"><name pos:start="124:47" pos:end="124:50">args</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="124:54" pos:end="124:55"><expr pos:start="124:54" pos:end="124:55"><operator pos:start="124:54" pos:end="124:54">-</operator><literal type="number" pos:start="124:55" pos:end="124:55">1</literal></expr></argument>, <argument pos:start="124:58" pos:end="124:80"><expr pos:start="124:58" pos:end="124:80"><name pos:start="124:58" pos:end="124:80"><name pos:start="124:58" pos:end="124:64">outlink</name><operator pos:start="124:65" pos:end="124:66">-&gt;</operator><name pos:start="124:67" pos:end="124:80">channel_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="126:5" pos:end="132:17"><expr pos:start="126:5" pos:end="132:16"><call pos:start="126:5" pos:end="132:16"><name pos:start="126:5" pos:end="126:10">av_log</name><argument_list pos:start="126:11" pos:end="132:16">(<argument pos:start="126:12" pos:end="126:15"><expr pos:start="126:12" pos:end="126:15"><name pos:start="126:12" pos:end="126:15">NULL</name></expr></argument>, <argument pos:start="126:18" pos:end="126:28"><expr pos:start="126:18" pos:end="126:28"><name pos:start="126:18" pos:end="126:28">AV_LOG_INFO</name></expr></argument>, <argument pos:start="126:31" pos:end="126:71"><expr pos:start="126:31" pos:end="126:71"><literal type="string" pos:start="126:31" pos:end="126:71">"Output: srate:%dHz fmt:%s chlayout:%s\n"</literal></expr></argument>,

           <argument pos:start="128:12" pos:end="128:36"><expr pos:start="128:12" pos:end="128:36"><operator pos:start="128:12" pos:end="128:12">(</operator><name pos:start="128:13" pos:end="128:15">int</name><operator pos:start="128:16" pos:end="128:16">)</operator><name pos:start="128:17" pos:end="128:36"><name pos:start="128:17" pos:end="128:23">outlink</name><operator pos:start="128:24" pos:end="128:25">-&gt;</operator><name pos:start="128:26" pos:end="128:36">sample_rate</name></name></expr></argument>,

           <argument pos:start="130:12" pos:end="130:77"><expr pos:start="130:12" pos:end="130:77"><operator pos:start="130:12" pos:end="130:12">(</operator><name pos:start="130:13" pos:end="130:16">char</name> <operator pos:start="130:18" pos:end="130:18">*</operator><operator pos:start="130:19" pos:end="130:19">)</operator><call pos:start="130:20" pos:end="130:77"><name pos:start="130:20" pos:end="130:31">av_x_if_null</name><argument_list pos:start="130:32" pos:end="130:77">(<argument pos:start="130:33" pos:end="130:71"><expr pos:start="130:33" pos:end="130:71"><call pos:start="130:33" pos:end="130:71"><name pos:start="130:33" pos:end="130:54">av_get_sample_fmt_name</name><argument_list pos:start="130:55" pos:end="130:71">(<argument pos:start="130:56" pos:end="130:70"><expr pos:start="130:56" pos:end="130:70"><name pos:start="130:56" pos:end="130:70"><name pos:start="130:56" pos:end="130:62">outlink</name><operator pos:start="130:63" pos:end="130:64">-&gt;</operator><name pos:start="130:65" pos:end="130:70">format</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="130:74" pos:end="130:76"><expr pos:start="130:74" pos:end="130:76"><literal type="string" pos:start="130:74" pos:end="130:76">"?"</literal></expr></argument>)</argument_list></call></expr></argument>,

           <argument pos:start="132:12" pos:end="132:15"><expr pos:start="132:12" pos:end="132:15"><name pos:start="132:12" pos:end="132:15">args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="136:5" pos:end="136:13">return <expr pos:start="136:12" pos:end="136:12"><literal type="number" pos:start="136:12" pos:end="136:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
