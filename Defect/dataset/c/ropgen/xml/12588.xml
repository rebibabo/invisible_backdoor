<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12588.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">bool</name></type> <name pos:start="1:6" pos:end="1:31">address_space_access_valid</name><parameter_list pos:start="1:32" pos:end="1:86">(<parameter pos:start="1:33" pos:end="1:48"><decl pos:start="1:33" pos:end="1:48"><type pos:start="1:33" pos:end="1:48"><name pos:start="1:33" pos:end="1:44">AddressSpace</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">as</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:61"><decl pos:start="1:51" pos:end="1:61"><type pos:start="1:51" pos:end="1:61"><name pos:start="1:51" pos:end="1:56">hwaddr</name></type> <name pos:start="1:58" pos:end="1:61">addr</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:70"><decl pos:start="1:64" pos:end="1:70"><type pos:start="1:64" pos:end="1:70"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:70">len</name></decl></parameter>, <parameter pos:start="1:73" pos:end="1:85"><decl pos:start="1:73" pos:end="1:85"><type pos:start="1:73" pos:end="1:85"><name pos:start="1:73" pos:end="1:76">bool</name></type> <name pos:start="1:78" pos:end="1:85">is_write</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:16">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">MemoryRegion</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:20">mr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">hwaddr</name></type> <name pos:start="7:12" pos:end="7:12">l</name></decl>, <decl pos:start="7:15" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:10"/><name pos:start="7:15" pos:end="7:18">xlat</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:20"><expr pos:start="11:5" pos:end="11:19"><call pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">rcu_read_lock</name><argument_list pos:start="11:18" pos:end="11:19">()</argument_list></call></expr>;</expr_stmt>

    <while pos:start="13:5" pos:end="38:5">while <condition pos:start="13:11" pos:end="13:19">(<expr pos:start="13:12" pos:end="13:18"><name pos:start="13:12" pos:end="13:14">len</name> <operator pos:start="13:16" pos:end="13:16">&gt;</operator> <literal type="number" pos:start="13:18" pos:end="13:18">0</literal></expr>)</condition> <block pos:start="13:21" pos:end="38:5">{<block_content pos:start="15:9" pos:end="36:18">

        <expr_stmt pos:start="15:9" pos:end="15:16"><expr pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:9">l</name> <operator pos:start="15:11" pos:end="15:11">=</operator> <name pos:start="15:13" pos:end="15:15">len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:68"><expr pos:start="17:9" pos:end="17:67"><name pos:start="17:9" pos:end="17:10">mr</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <call pos:start="17:14" pos:end="17:67"><name pos:start="17:14" pos:end="17:36">address_space_translate</name><argument_list pos:start="17:37" pos:end="17:67">(<argument pos:start="17:38" pos:end="17:39"><expr pos:start="17:38" pos:end="17:39"><name pos:start="17:38" pos:end="17:39">as</name></expr></argument>, <argument pos:start="17:42" pos:end="17:45"><expr pos:start="17:42" pos:end="17:45"><name pos:start="17:42" pos:end="17:45">addr</name></expr></argument>, <argument pos:start="17:48" pos:end="17:52"><expr pos:start="17:48" pos:end="17:52"><operator pos:start="17:48" pos:end="17:48">&amp;</operator><name pos:start="17:49" pos:end="17:52">xlat</name></expr></argument>, <argument pos:start="17:55" pos:end="17:56"><expr pos:start="17:55" pos:end="17:56"><operator pos:start="17:55" pos:end="17:55">&amp;</operator><name pos:start="17:56" pos:end="17:56">l</name></expr></argument>, <argument pos:start="17:59" pos:end="17:66"><expr pos:start="17:59" pos:end="17:66"><name pos:start="17:59" pos:end="17:66">is_write</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="30:9"><if pos:start="19:9" pos:end="30:9">if <condition pos:start="19:12" pos:end="19:51">(<expr pos:start="19:13" pos:end="19:50"><operator pos:start="19:13" pos:end="19:13">!</operator><call pos:start="19:14" pos:end="19:50"><name pos:start="19:14" pos:end="19:36">memory_access_is_direct</name><argument_list pos:start="19:37" pos:end="19:50">(<argument pos:start="19:38" pos:end="19:39"><expr pos:start="19:38" pos:end="19:39"><name pos:start="19:38" pos:end="19:39">mr</name></expr></argument>, <argument pos:start="19:42" pos:end="19:49"><expr pos:start="19:42" pos:end="19:49"><name pos:start="19:42" pos:end="19:49">is_write</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:53" pos:end="30:9">{<block_content pos:start="21:13" pos:end="28:13">

            <expr_stmt pos:start="21:13" pos:end="21:48"><expr pos:start="21:13" pos:end="21:47"><name pos:start="21:13" pos:end="21:13">l</name> <operator pos:start="21:15" pos:end="21:15">=</operator> <call pos:start="21:17" pos:end="21:47"><name pos:start="21:17" pos:end="21:34">memory_access_size</name><argument_list pos:start="21:35" pos:end="21:47">(<argument pos:start="21:36" pos:end="21:37"><expr pos:start="21:36" pos:end="21:37"><name pos:start="21:36" pos:end="21:37">mr</name></expr></argument>, <argument pos:start="21:40" pos:end="21:40"><expr pos:start="21:40" pos:end="21:40"><name pos:start="21:40" pos:end="21:40">l</name></expr></argument>, <argument pos:start="21:43" pos:end="21:46"><expr pos:start="21:43" pos:end="21:46"><name pos:start="21:43" pos:end="21:46">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="23:13" pos:end="28:13"><if pos:start="23:13" pos:end="28:13">if <condition pos:start="23:16" pos:end="23:67">(<expr pos:start="23:17" pos:end="23:66"><operator pos:start="23:17" pos:end="23:17">!</operator><call pos:start="23:18" pos:end="23:66"><name pos:start="23:18" pos:end="23:43">memory_region_access_valid</name><argument_list pos:start="23:44" pos:end="23:66">(<argument pos:start="23:45" pos:end="23:46"><expr pos:start="23:45" pos:end="23:46"><name pos:start="23:45" pos:end="23:46">mr</name></expr></argument>, <argument pos:start="23:49" pos:end="23:52"><expr pos:start="23:49" pos:end="23:52"><name pos:start="23:49" pos:end="23:52">xlat</name></expr></argument>, <argument pos:start="23:55" pos:end="23:55"><expr pos:start="23:55" pos:end="23:55"><name pos:start="23:55" pos:end="23:55">l</name></expr></argument>, <argument pos:start="23:58" pos:end="23:65"><expr pos:start="23:58" pos:end="23:65"><name pos:start="23:58" pos:end="23:65">is_write</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:69" pos:end="28:13">{<block_content pos:start="26:17" pos:end="26:29">


                <return pos:start="26:17" pos:end="26:29">return <expr pos:start="26:24" pos:end="26:28"><name pos:start="26:24" pos:end="26:28">false</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="34:9" pos:end="34:17"><expr pos:start="34:9" pos:end="34:16"><name pos:start="34:9" pos:end="34:11">len</name> <operator pos:start="34:13" pos:end="34:14">-=</operator> <name pos:start="34:16" pos:end="34:16">l</name></expr>;</expr_stmt>

        <expr_stmt pos:start="36:9" pos:end="36:18"><expr pos:start="36:9" pos:end="36:17"><name pos:start="36:9" pos:end="36:12">addr</name> <operator pos:start="36:14" pos:end="36:15">+=</operator> <name pos:start="36:17" pos:end="36:17">l</name></expr>;</expr_stmt>

    </block_content>}</block></while>


    <return pos:start="41:5" pos:end="41:16">return <expr pos:start="41:12" pos:end="41:15"><name pos:start="41:12" pos:end="41:15">true</name></expr>;</return>

</block_content>}</block></function></unit>
