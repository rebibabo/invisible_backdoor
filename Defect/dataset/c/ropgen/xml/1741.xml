<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1741.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">local_lstat</name><parameter_list pos:start="1:23" pos:end="1:80">(<parameter pos:start="1:24" pos:end="1:40"><decl pos:start="1:24" pos:end="1:40"><type pos:start="1:24" pos:end="1:40"><name pos:start="1:24" pos:end="1:32">FsContext</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:40">fs_ctx</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:59"><decl pos:start="1:43" pos:end="1:59"><type pos:start="1:43" pos:end="1:59"><name pos:start="1:43" pos:end="1:50">V9fsPath</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:59">fs_path</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:79"><decl pos:start="1:62" pos:end="1:79"><type pos:start="1:62" pos:end="1:79"><name pos:start="1:62" pos:end="1:72"><name pos:start="1:62" pos:end="1:67">struct</name> <name pos:start="1:69" pos:end="1:72">stat</name></name> <modifier pos:start="1:74" pos:end="1:74">*</modifier></type><name pos:start="1:75" pos:end="1:79">stbuf</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:15">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:16">buffer</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:14">path</name> <init pos:start="9:16" pos:end="9:30">= <expr pos:start="9:18" pos:end="9:30"><name pos:start="9:18" pos:end="9:30"><name pos:start="9:18" pos:end="9:24">fs_path</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:30">data</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:33"><expr pos:start="13:5" pos:end="13:32"><name pos:start="13:5" pos:end="13:10">buffer</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <call pos:start="13:14" pos:end="13:32"><name pos:start="13:14" pos:end="13:18">rpath</name><argument_list pos:start="13:19" pos:end="13:32">(<argument pos:start="13:20" pos:end="13:25"><expr pos:start="13:20" pos:end="13:25"><name pos:start="13:20" pos:end="13:25">fs_ctx</name></expr></argument>, <argument pos:start="13:28" pos:end="13:31"><expr pos:start="13:28" pos:end="13:31"><name pos:start="13:28" pos:end="13:31">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:32"><expr pos:start="15:5" pos:end="15:31"><name pos:start="15:5" pos:end="15:7">err</name> <operator pos:start="15:9" pos:end="15:9">=</operator>  <call pos:start="15:12" pos:end="15:31"><name pos:start="15:12" pos:end="15:16">lstat</name><argument_list pos:start="15:17" pos:end="15:31">(<argument pos:start="15:18" pos:end="15:23"><expr pos:start="15:18" pos:end="15:23"><name pos:start="15:18" pos:end="15:23">buffer</name></expr></argument>, <argument pos:start="15:26" pos:end="15:30"><expr pos:start="15:26" pos:end="15:30"><name pos:start="15:26" pos:end="15:30">stbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:12">(<expr pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">err</name></expr>)</condition> <block pos:start="17:14" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:21">

        <goto pos:start="19:9" pos:end="19:21">goto <name pos:start="19:14" pos:end="19:20">err_out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="23:5" pos:end="65:5"><if pos:start="23:5" pos:end="61:5">if <condition pos:start="23:8" pos:end="23:46">(<expr pos:start="23:9" pos:end="23:45"><name pos:start="23:9" pos:end="23:28"><name pos:start="23:9" pos:end="23:14">fs_ctx</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:28">export_flags</name></name> <operator pos:start="23:30" pos:end="23:30">&amp;</operator> <name pos:start="23:32" pos:end="23:45">V9FS_SM_MAPPED</name></expr>)</condition> <block pos:start="23:48" pos:end="61:5">{<block_content pos:start="27:9" pos:end="59:9">

        <comment type="block" pos:start="25:9" pos:end="25:59">/* Actual credentials are part of extended attrs */</comment>

        <decl_stmt pos:start="27:9" pos:end="27:22"><decl pos:start="27:9" pos:end="27:21"><type pos:start="27:9" pos:end="27:13"><name pos:start="27:9" pos:end="27:13">uid_t</name></type> <name pos:start="27:15" pos:end="27:21">tmp_uid</name></decl>;</decl_stmt>

        <decl_stmt pos:start="29:9" pos:end="29:22"><decl pos:start="29:9" pos:end="29:21"><type pos:start="29:9" pos:end="29:13"><name pos:start="29:9" pos:end="29:13">gid_t</name></type> <name pos:start="29:15" pos:end="29:21">tmp_gid</name></decl>;</decl_stmt>

        <decl_stmt pos:start="31:9" pos:end="31:24"><decl pos:start="31:9" pos:end="31:23"><type pos:start="31:9" pos:end="31:14"><name pos:start="31:9" pos:end="31:14">mode_t</name></type> <name pos:start="31:16" pos:end="31:23">tmp_mode</name></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:22"><decl pos:start="33:9" pos:end="33:21"><type pos:start="33:9" pos:end="33:13"><name pos:start="33:9" pos:end="33:13">dev_t</name></type> <name pos:start="33:15" pos:end="33:21">tmp_dev</name></decl>;</decl_stmt>

        <if_stmt pos:start="35:9" pos:end="39:9"><if pos:start="35:9" pos:end="39:9">if <condition pos:start="35:12" pos:end="35:77">(<expr pos:start="35:13" pos:end="35:76"><call pos:start="35:13" pos:end="35:72"><name pos:start="35:13" pos:end="35:20">getxattr</name><argument_list pos:start="35:21" pos:end="35:72">(<argument pos:start="35:22" pos:end="35:27"><expr pos:start="35:22" pos:end="35:27"><name pos:start="35:22" pos:end="35:27">buffer</name></expr></argument>, <argument pos:start="35:30" pos:end="35:46"><expr pos:start="35:30" pos:end="35:46"><literal type="string" pos:start="35:30" pos:end="35:46">"user.virtfs.uid"</literal></expr></argument>, <argument pos:start="35:49" pos:end="35:56"><expr pos:start="35:49" pos:end="35:56"><operator pos:start="35:49" pos:end="35:49">&amp;</operator><name pos:start="35:50" pos:end="35:56">tmp_uid</name></expr></argument>, <argument pos:start="35:59" pos:end="35:71"><expr pos:start="35:59" pos:end="35:71"><sizeof pos:start="35:59" pos:end="35:71">sizeof<argument_list pos:start="35:65" pos:end="35:71">(<argument pos:start="35:66" pos:end="35:70"><expr pos:start="35:66" pos:end="35:70"><name pos:start="35:66" pos:end="35:70">uid_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="35:74" pos:end="35:74">&gt;</operator> <literal type="number" pos:start="35:76" pos:end="35:76">0</literal></expr>)</condition> <block pos:start="35:79" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:49">

            <expr_stmt pos:start="37:13" pos:end="37:49"><expr pos:start="37:13" pos:end="37:48"><name pos:start="37:13" pos:end="37:25"><name pos:start="37:13" pos:end="37:17">stbuf</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:25">st_uid</name></name> <operator pos:start="37:27" pos:end="37:27">=</operator> <call pos:start="37:29" pos:end="37:48"><name pos:start="37:29" pos:end="37:39">le32_to_cpu</name><argument_list pos:start="37:40" pos:end="37:48">(<argument pos:start="37:41" pos:end="37:47"><expr pos:start="37:41" pos:end="37:47"><name pos:start="37:41" pos:end="37:47">tmp_uid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="41:9" pos:end="45:9"><if pos:start="41:9" pos:end="45:9">if <condition pos:start="41:12" pos:end="41:77">(<expr pos:start="41:13" pos:end="41:76"><call pos:start="41:13" pos:end="41:72"><name pos:start="41:13" pos:end="41:20">getxattr</name><argument_list pos:start="41:21" pos:end="41:72">(<argument pos:start="41:22" pos:end="41:27"><expr pos:start="41:22" pos:end="41:27"><name pos:start="41:22" pos:end="41:27">buffer</name></expr></argument>, <argument pos:start="41:30" pos:end="41:46"><expr pos:start="41:30" pos:end="41:46"><literal type="string" pos:start="41:30" pos:end="41:46">"user.virtfs.gid"</literal></expr></argument>, <argument pos:start="41:49" pos:end="41:56"><expr pos:start="41:49" pos:end="41:56"><operator pos:start="41:49" pos:end="41:49">&amp;</operator><name pos:start="41:50" pos:end="41:56">tmp_gid</name></expr></argument>, <argument pos:start="41:59" pos:end="41:71"><expr pos:start="41:59" pos:end="41:71"><sizeof pos:start="41:59" pos:end="41:71">sizeof<argument_list pos:start="41:65" pos:end="41:71">(<argument pos:start="41:66" pos:end="41:70"><expr pos:start="41:66" pos:end="41:70"><name pos:start="41:66" pos:end="41:70">gid_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="41:74" pos:end="41:74">&gt;</operator> <literal type="number" pos:start="41:76" pos:end="41:76">0</literal></expr>)</condition> <block pos:start="41:79" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:49">

            <expr_stmt pos:start="43:13" pos:end="43:49"><expr pos:start="43:13" pos:end="43:48"><name pos:start="43:13" pos:end="43:25"><name pos:start="43:13" pos:end="43:17">stbuf</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:25">st_gid</name></name> <operator pos:start="43:27" pos:end="43:27">=</operator> <call pos:start="43:29" pos:end="43:48"><name pos:start="43:29" pos:end="43:39">le32_to_cpu</name><argument_list pos:start="43:40" pos:end="43:48">(<argument pos:start="43:41" pos:end="43:47"><expr pos:start="43:41" pos:end="43:47"><name pos:start="43:41" pos:end="43:47">tmp_gid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="47:9" pos:end="53:9"><if pos:start="47:9" pos:end="53:9">if <condition pos:start="47:12" pos:end="49:51">(<expr pos:start="47:13" pos:end="49:50"><call pos:start="47:13" pos:end="49:46"><name pos:start="47:13" pos:end="47:20">getxattr</name><argument_list pos:start="47:21" pos:end="49:46">(<argument pos:start="47:22" pos:end="47:27"><expr pos:start="47:22" pos:end="47:27"><name pos:start="47:22" pos:end="47:27">buffer</name></expr></argument>, <argument pos:start="47:30" pos:end="47:47"><expr pos:start="47:30" pos:end="47:47"><literal type="string" pos:start="47:30" pos:end="47:47">"user.virtfs.mode"</literal></expr></argument>,

                    <argument pos:start="49:21" pos:end="49:29"><expr pos:start="49:21" pos:end="49:29"><operator pos:start="49:21" pos:end="49:21">&amp;</operator><name pos:start="49:22" pos:end="49:29">tmp_mode</name></expr></argument>, <argument pos:start="49:32" pos:end="49:45"><expr pos:start="49:32" pos:end="49:45"><sizeof pos:start="49:32" pos:end="49:45">sizeof<argument_list pos:start="49:38" pos:end="49:45">(<argument pos:start="49:39" pos:end="49:44"><expr pos:start="49:39" pos:end="49:44"><name pos:start="49:39" pos:end="49:44">mode_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="49:48" pos:end="49:48">&gt;</operator> <literal type="number" pos:start="49:50" pos:end="49:50">0</literal></expr>)</condition> <block pos:start="49:53" pos:end="53:9">{<block_content pos:start="51:13" pos:end="51:51">

            <expr_stmt pos:start="51:13" pos:end="51:51"><expr pos:start="51:13" pos:end="51:50"><name pos:start="51:13" pos:end="51:26"><name pos:start="51:13" pos:end="51:17">stbuf</name><operator pos:start="51:18" pos:end="51:19">-&gt;</operator><name pos:start="51:20" pos:end="51:26">st_mode</name></name> <operator pos:start="51:28" pos:end="51:28">=</operator> <call pos:start="51:30" pos:end="51:50"><name pos:start="51:30" pos:end="51:40">le32_to_cpu</name><argument_list pos:start="51:41" pos:end="51:50">(<argument pos:start="51:42" pos:end="51:49"><expr pos:start="51:42" pos:end="51:49"><name pos:start="51:42" pos:end="51:49">tmp_mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="55:9" pos:end="59:9"><if pos:start="55:9" pos:end="59:9">if <condition pos:start="55:12" pos:end="55:78">(<expr pos:start="55:13" pos:end="55:77"><call pos:start="55:13" pos:end="55:73"><name pos:start="55:13" pos:end="55:20">getxattr</name><argument_list pos:start="55:21" pos:end="55:73">(<argument pos:start="55:22" pos:end="55:27"><expr pos:start="55:22" pos:end="55:27"><name pos:start="55:22" pos:end="55:27">buffer</name></expr></argument>, <argument pos:start="55:30" pos:end="55:47"><expr pos:start="55:30" pos:end="55:47"><literal type="string" pos:start="55:30" pos:end="55:47">"user.virtfs.rdev"</literal></expr></argument>, <argument pos:start="55:50" pos:end="55:57"><expr pos:start="55:50" pos:end="55:57"><operator pos:start="55:50" pos:end="55:50">&amp;</operator><name pos:start="55:51" pos:end="55:57">tmp_dev</name></expr></argument>, <argument pos:start="55:60" pos:end="55:72"><expr pos:start="55:60" pos:end="55:72"><sizeof pos:start="55:60" pos:end="55:72">sizeof<argument_list pos:start="55:66" pos:end="55:72">(<argument pos:start="55:67" pos:end="55:71"><expr pos:start="55:67" pos:end="55:71"><name pos:start="55:67" pos:end="55:71">dev_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="55:75" pos:end="55:75">&gt;</operator> <literal type="number" pos:start="55:77" pos:end="55:77">0</literal></expr>)</condition> <block pos:start="55:80" pos:end="59:9">{<block_content pos:start="57:13" pos:end="57:50">

            <expr_stmt pos:start="57:13" pos:end="57:50"><expr pos:start="57:13" pos:end="57:49"><name pos:start="57:13" pos:end="57:26"><name pos:start="57:13" pos:end="57:17">stbuf</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:26">st_rdev</name></name> <operator pos:start="57:28" pos:end="57:28">=</operator> <call pos:start="57:30" pos:end="57:49"><name pos:start="57:30" pos:end="57:40">le64_to_cpu</name><argument_list pos:start="57:41" pos:end="57:49">(<argument pos:start="57:42" pos:end="57:48"><expr pos:start="57:42" pos:end="57:48"><name pos:start="57:42" pos:end="57:48">tmp_dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="61:7" pos:end="65:5">else if <condition pos:start="61:15" pos:end="61:58">(<expr pos:start="61:16" pos:end="61:57"><name pos:start="61:16" pos:end="61:35"><name pos:start="61:16" pos:end="61:21">fs_ctx</name><operator pos:start="61:22" pos:end="61:23">-&gt;</operator><name pos:start="61:24" pos:end="61:35">export_flags</name></name> <operator pos:start="61:37" pos:end="61:37">&amp;</operator> <name pos:start="61:39" pos:end="61:57">V9FS_SM_MAPPED_FILE</name></expr>)</condition> <block pos:start="61:60" pos:end="65:5">{<block_content pos:start="63:9" pos:end="63:52">

        <expr_stmt pos:start="63:9" pos:end="63:52"><expr pos:start="63:9" pos:end="63:51"><call pos:start="63:9" pos:end="63:51"><name pos:start="63:9" pos:end="63:30">local_mapped_file_attr</name><argument_list pos:start="63:31" pos:end="63:51">(<argument pos:start="63:32" pos:end="63:37"><expr pos:start="63:32" pos:end="63:37"><name pos:start="63:32" pos:end="63:37">fs_ctx</name></expr></argument>, <argument pos:start="63:40" pos:end="63:43"><expr pos:start="63:40" pos:end="63:43"><name pos:start="63:40" pos:end="63:43">path</name></expr></argument>, <argument pos:start="63:46" pos:end="63:50"><expr pos:start="63:46" pos:end="63:50"><name pos:start="63:46" pos:end="63:50">stbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



<label pos:start="69:1" pos:end="69:8"><name pos:start="69:1" pos:end="69:7">err_out</name>:</label>

    <expr_stmt pos:start="71:5" pos:end="71:19"><expr pos:start="71:5" pos:end="71:18"><call pos:start="71:5" pos:end="71:18"><name pos:start="71:5" pos:end="71:10">g_free</name><argument_list pos:start="71:11" pos:end="71:18">(<argument pos:start="71:12" pos:end="71:17"><expr pos:start="71:12" pos:end="71:17"><name pos:start="71:12" pos:end="71:17">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="73:5" pos:end="73:15">return <expr pos:start="73:12" pos:end="73:14"><name pos:start="73:12" pos:end="73:14">err</name></expr>;</return>

</block_content>}</block></function>
</unit>
