<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18380.c" pos:tabs="8"><function pos:start="1:1" pos:end="169:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">jpeg2000_decode_packet</name><parameter_list pos:start="1:34" pos:end="7:73">(<parameter pos:start="1:35" pos:end="1:59"><decl pos:start="1:35" pos:end="1:59"><type pos:start="1:35" pos:end="1:59"><name pos:start="1:35" pos:end="1:56">Jpeg2000DecoderContext</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:59">s</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:61"><decl pos:start="3:35" pos:end="3:61"><type pos:start="3:35" pos:end="3:61"><name pos:start="3:35" pos:end="3:53">Jpeg2000CodingStyle</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:61">codsty</name></decl></parameter>,

                                  <parameter pos:start="5:35" pos:end="5:58"><decl pos:start="5:35" pos:end="5:58"><type pos:start="5:35" pos:end="5:58"><name pos:start="5:35" pos:end="5:50">Jpeg2000ResLevel</name> <modifier pos:start="5:52" pos:end="5:52">*</modifier></type><name pos:start="5:53" pos:end="5:58">rlevel</name></decl></parameter>, <parameter pos:start="5:61" pos:end="5:70"><decl pos:start="5:61" pos:end="5:70"><type pos:start="5:61" pos:end="5:70"><name pos:start="5:61" pos:end="5:63">int</name></type> <name pos:start="5:65" pos:end="5:70">precno</name></decl></parameter>,

                                  <parameter pos:start="7:35" pos:end="7:43"><decl pos:start="7:35" pos:end="7:43"><type pos:start="7:35" pos:end="7:43"><name pos:start="7:35" pos:end="7:37">int</name></type> <name pos:start="7:39" pos:end="7:43">layno</name></decl></parameter>, <parameter pos:start="7:46" pos:end="7:58"><decl pos:start="7:46" pos:end="7:58"><type pos:start="7:46" pos:end="7:58"><name pos:start="7:46" pos:end="7:52">uint8_t</name> <modifier pos:start="7:54" pos:end="7:54">*</modifier></type><name pos:start="7:55" pos:end="7:58">expn</name></decl></parameter>, <parameter pos:start="7:61" pos:end="7:72"><decl pos:start="7:61" pos:end="7:72"><type pos:start="7:61" pos:end="7:72"><name pos:start="7:61" pos:end="7:63">int</name></type> <name pos:start="7:65" pos:end="7:72">numgbits</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="169:1">{<block_content pos:start="11:5" pos:end="167:13">

    <decl_stmt pos:start="11:5" pos:end="11:44"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">bandno</name></decl>, <decl pos:start="11:17" pos:end="11:22"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:17" pos:end="11:22">cblkno</name></decl>, <decl pos:start="11:25" pos:end="11:27"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:25" pos:end="11:27">ret</name></decl>, <decl pos:start="11:30" pos:end="11:43"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:30" pos:end="11:43">nb_code_blocks</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="23:19"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:32">(<expr pos:start="15:9" pos:end="15:31"><operator pos:start="15:9" pos:end="15:9">!</operator><operator pos:start="15:10" pos:end="15:10">(</operator><name pos:start="15:11" pos:end="15:13">ret</name> <operator pos:start="15:15" pos:end="15:15">=</operator> <call pos:start="15:17" pos:end="15:30"><name pos:start="15:17" pos:end="15:24">get_bits</name><argument_list pos:start="15:25" pos:end="15:30">(<argument pos:start="15:26" pos:end="15:26"><expr pos:start="15:26" pos:end="15:26"><name pos:start="15:26" pos:end="15:26">s</name></expr></argument>, <argument pos:start="15:29" pos:end="15:29"><expr pos:start="15:29" pos:end="15:29"><literal type="number" pos:start="15:29" pos:end="15:29">1</literal></expr></argument>)</argument_list></call><operator pos:start="15:31" pos:end="15:31">)</operator></expr>)</condition> <block pos:start="15:34" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:17">

        <expr_stmt pos:start="17:9" pos:end="17:26"><expr pos:start="17:9" pos:end="17:25"><call pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:22">jpeg2000_flush</name><argument_list pos:start="17:23" pos:end="17:25">(<argument pos:start="17:24" pos:end="17:24"><expr pos:start="17:24" pos:end="17:24"><name pos:start="17:24" pos:end="17:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="21:7" pos:end="23:19">else if <condition pos:start="21:15" pos:end="21:23">(<expr pos:start="21:16" pos:end="21:22"><name pos:start="21:16" pos:end="21:18">ret</name> <operator pos:start="21:20" pos:end="21:20">&lt;</operator> <literal type="number" pos:start="21:22" pos:end="21:22">0</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:19"><block_content pos:start="23:9" pos:end="23:19">

        <return pos:start="23:9" pos:end="23:19">return <expr pos:start="23:16" pos:end="23:18"><name pos:start="23:16" pos:end="23:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="27:5" pos:end="101:5">for <control pos:start="27:9" pos:end="27:55">(<init pos:start="27:10" pos:end="27:20"><expr pos:start="27:10" pos:end="27:19"><name pos:start="27:10" pos:end="27:15">bandno</name> <operator pos:start="27:17" pos:end="27:17">=</operator> <literal type="number" pos:start="27:19" pos:end="27:19">0</literal></expr>;</init> <condition pos:start="27:22" pos:end="27:45"><expr pos:start="27:22" pos:end="27:44"><name pos:start="27:22" pos:end="27:27">bandno</name> <operator pos:start="27:29" pos:end="27:29">&lt;</operator> <name pos:start="27:31" pos:end="27:44"><name pos:start="27:31" pos:end="27:36">rlevel</name><operator pos:start="27:37" pos:end="27:38">-&gt;</operator><name pos:start="27:39" pos:end="27:44">nbands</name></name></expr>;</condition> <incr pos:start="27:47" pos:end="27:54"><expr pos:start="27:47" pos:end="27:54"><name pos:start="27:47" pos:end="27:52">bandno</name><operator pos:start="27:53" pos:end="27:54">++</operator></expr></incr>)</control> <block pos:start="27:57" pos:end="101:5">{<block_content pos:start="29:9" pos:end="99:9">

        <decl_stmt pos:start="29:9" pos:end="29:51"><decl pos:start="29:9" pos:end="29:50"><type pos:start="29:9" pos:end="29:22"><name pos:start="29:9" pos:end="29:20">Jpeg2000Band</name> <modifier pos:start="29:22" pos:end="29:22">*</modifier></type><name pos:start="29:23" pos:end="29:26">band</name> <init pos:start="29:28" pos:end="29:50">= <expr pos:start="29:30" pos:end="29:50"><name pos:start="29:30" pos:end="29:41"><name pos:start="29:30" pos:end="29:35">rlevel</name><operator pos:start="29:36" pos:end="29:37">-&gt;</operator><name pos:start="29:38" pos:end="29:41">band</name></name> <operator pos:start="29:43" pos:end="29:43">+</operator> <name pos:start="29:45" pos:end="29:50">bandno</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="31:9" pos:end="31:49"><decl pos:start="31:9" pos:end="31:48"><type pos:start="31:9" pos:end="31:22"><name pos:start="31:9" pos:end="31:20">Jpeg2000Prec</name> <modifier pos:start="31:22" pos:end="31:22">*</modifier></type><name pos:start="31:23" pos:end="31:26">prec</name> <init pos:start="31:28" pos:end="31:48">= <expr pos:start="31:30" pos:end="31:48"><name pos:start="31:30" pos:end="31:39"><name pos:start="31:30" pos:end="31:33">band</name><operator pos:start="31:34" pos:end="31:35">-&gt;</operator><name pos:start="31:36" pos:end="31:39">prec</name></name> <operator pos:start="31:41" pos:end="31:41">+</operator> <name pos:start="31:43" pos:end="31:48">precno</name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="35:9" pos:end="39:21"><if pos:start="35:9" pos:end="39:21">if <condition pos:start="35:12" pos:end="37:51">(<expr pos:start="35:13" pos:end="37:50"><name pos:start="35:13" pos:end="35:29"><name pos:start="35:13" pos:end="35:16">band</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:23">coord</name><index pos:start="35:24" pos:end="35:26">[<expr pos:start="35:25" pos:end="35:25"><literal type="number" pos:start="35:25" pos:end="35:25">0</literal></expr>]</index><index pos:start="35:27" pos:end="35:29">[<expr pos:start="35:28" pos:end="35:28"><literal type="number" pos:start="35:28" pos:end="35:28">0</literal></expr>]</index></name> <operator pos:start="35:31" pos:end="35:32">==</operator> <name pos:start="35:34" pos:end="35:50"><name pos:start="35:34" pos:end="35:37">band</name><operator pos:start="35:38" pos:end="35:39">-&gt;</operator><name pos:start="35:40" pos:end="35:44">coord</name><index pos:start="35:45" pos:end="35:47">[<expr pos:start="35:46" pos:end="35:46"><literal type="number" pos:start="35:46" pos:end="35:46">0</literal></expr>]</index><index pos:start="35:48" pos:end="35:50">[<expr pos:start="35:49" pos:end="35:49"><literal type="number" pos:start="35:49" pos:end="35:49">1</literal></expr>]</index></name> <operator pos:start="35:52" pos:end="35:53">||</operator>

            <name pos:start="37:13" pos:end="37:29"><name pos:start="37:13" pos:end="37:16">band</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:23">coord</name><index pos:start="37:24" pos:end="37:26">[<expr pos:start="37:25" pos:end="37:25"><literal type="number" pos:start="37:25" pos:end="37:25">1</literal></expr>]</index><index pos:start="37:27" pos:end="37:29">[<expr pos:start="37:28" pos:end="37:28"><literal type="number" pos:start="37:28" pos:end="37:28">0</literal></expr>]</index></name> <operator pos:start="37:31" pos:end="37:32">==</operator> <name pos:start="37:34" pos:end="37:50"><name pos:start="37:34" pos:end="37:37">band</name><operator pos:start="37:38" pos:end="37:39">-&gt;</operator><name pos:start="37:40" pos:end="37:44">coord</name><index pos:start="37:45" pos:end="37:47">[<expr pos:start="37:46" pos:end="37:46"><literal type="number" pos:start="37:46" pos:end="37:46">1</literal></expr>]</index><index pos:start="37:48" pos:end="37:50">[<expr pos:start="37:49" pos:end="37:49"><literal type="number" pos:start="37:49" pos:end="37:49">1</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:21"><block_content pos:start="39:13" pos:end="39:21">

            <continue pos:start="39:13" pos:end="39:21">continue;</continue></block_content></block></if></if_stmt>



        <expr_stmt pos:start="43:9" pos:end="45:52"><expr pos:start="43:9" pos:end="45:51"><name pos:start="43:9" pos:end="43:22">nb_code_blocks</name> <operator pos:start="43:24" pos:end="43:24">=</operator>  <name pos:start="43:27" pos:end="43:52"><name pos:start="43:27" pos:end="43:30">prec</name><operator pos:start="43:31" pos:end="43:32">-&gt;</operator><name pos:start="43:33" pos:end="43:52">nb_codeblocks_height</name></name> <operator pos:start="43:54" pos:end="43:54">*</operator>

                          <name pos:start="45:27" pos:end="45:51"><name pos:start="45:27" pos:end="45:30">prec</name><operator pos:start="45:31" pos:end="45:32">-&gt;</operator><name pos:start="45:33" pos:end="45:51">nb_codeblocks_width</name></name></expr>;</expr_stmt>

        <for pos:start="47:9" pos:end="99:9">for <control pos:start="47:13" pos:end="47:59">(<init pos:start="47:14" pos:end="47:24"><expr pos:start="47:14" pos:end="47:23"><name pos:start="47:14" pos:end="47:19">cblkno</name> <operator pos:start="47:21" pos:end="47:21">=</operator> <literal type="number" pos:start="47:23" pos:end="47:23">0</literal></expr>;</init> <condition pos:start="47:26" pos:end="47:49"><expr pos:start="47:26" pos:end="47:48"><name pos:start="47:26" pos:end="47:31">cblkno</name> <operator pos:start="47:33" pos:end="47:33">&lt;</operator> <name pos:start="47:35" pos:end="47:48">nb_code_blocks</name></expr>;</condition> <incr pos:start="47:51" pos:end="47:58"><expr pos:start="47:51" pos:end="47:58"><name pos:start="47:51" pos:end="47:56">cblkno</name><operator pos:start="47:57" pos:end="47:58">++</operator></expr></incr>)</control> <block pos:start="47:61" pos:end="99:9">{<block_content pos:start="49:13" pos:end="97:40">

            <decl_stmt pos:start="49:13" pos:end="49:53"><decl pos:start="49:13" pos:end="49:52"><type pos:start="49:13" pos:end="49:26"><name pos:start="49:13" pos:end="49:24">Jpeg2000Cblk</name> <modifier pos:start="49:26" pos:end="49:26">*</modifier></type><name pos:start="49:27" pos:end="49:30">cblk</name> <init pos:start="49:32" pos:end="49:52">= <expr pos:start="49:34" pos:end="49:52"><name pos:start="49:34" pos:end="49:43"><name pos:start="49:34" pos:end="49:37">prec</name><operator pos:start="49:38" pos:end="49:39">-&gt;</operator><name pos:start="49:40" pos:end="49:43">cblk</name></name> <operator pos:start="49:45" pos:end="49:45">+</operator> <name pos:start="49:47" pos:end="49:52">cblkno</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="51:13" pos:end="51:38"><decl pos:start="51:13" pos:end="51:20"><type pos:start="51:13" pos:end="51:15"><name pos:start="51:13" pos:end="51:15">int</name></type> <name pos:start="51:17" pos:end="51:20">incl</name></decl>, <decl pos:start="51:23" pos:end="51:31"><type ref="prev" pos:start="51:13" pos:end="51:15"/><name pos:start="51:23" pos:end="51:31">newpasses</name></decl>, <decl pos:start="51:34" pos:end="51:37"><type ref="prev" pos:start="51:13" pos:end="51:15"/><name pos:start="51:34" pos:end="51:37">llen</name></decl>;</decl_stmt>



            <if_stmt pos:start="55:13" pos:end="61:87"><if pos:start="55:13" pos:end="57:38">if <condition pos:start="55:16" pos:end="55:30">(<expr pos:start="55:17" pos:end="55:29"><name pos:start="55:17" pos:end="55:29"><name pos:start="55:17" pos:end="55:20">cblk</name><operator pos:start="55:21" pos:end="55:22">-&gt;</operator><name pos:start="55:23" pos:end="55:29">npasses</name></name></expr>)</condition><block type="pseudo" pos:start="57:17" pos:end="57:38"><block_content pos:start="57:17" pos:end="57:38">

                <expr_stmt pos:start="57:17" pos:end="57:38"><expr pos:start="57:17" pos:end="57:37"><name pos:start="57:17" pos:end="57:20">incl</name> <operator pos:start="57:22" pos:end="57:22">=</operator> <call pos:start="57:24" pos:end="57:37"><name pos:start="57:24" pos:end="57:31">get_bits</name><argument_list pos:start="57:32" pos:end="57:37">(<argument pos:start="57:33" pos:end="57:33"><expr pos:start="57:33" pos:end="57:33"><name pos:start="57:33" pos:end="57:33">s</name></expr></argument>, <argument pos:start="57:36" pos:end="57:36"><expr pos:start="57:36" pos:end="57:36"><literal type="number" pos:start="57:36" pos:end="57:36">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="59:13" pos:end="61:87">else<block type="pseudo" pos:start="61:17" pos:end="61:87"><block_content pos:start="61:17" pos:end="61:87">

                <expr_stmt pos:start="61:17" pos:end="61:87"><expr pos:start="61:17" pos:end="61:86"><name pos:start="61:17" pos:end="61:20">incl</name> <operator pos:start="61:22" pos:end="61:22">=</operator> <call pos:start="61:24" pos:end="61:77"><name pos:start="61:24" pos:end="61:38">tag_tree_decode</name><argument_list pos:start="61:39" pos:end="61:77">(<argument pos:start="61:40" pos:end="61:40"><expr pos:start="61:40" pos:end="61:40"><name pos:start="61:40" pos:end="61:40">s</name></expr></argument>, <argument pos:start="61:43" pos:end="61:65"><expr pos:start="61:43" pos:end="61:65"><name pos:start="61:43" pos:end="61:56"><name pos:start="61:43" pos:end="61:46">prec</name><operator pos:start="61:47" pos:end="61:48">-&gt;</operator><name pos:start="61:49" pos:end="61:56">cblkincl</name></name> <operator pos:start="61:58" pos:end="61:58">+</operator> <name pos:start="61:60" pos:end="61:65">cblkno</name></expr></argument>, <argument pos:start="61:68" pos:end="61:76"><expr pos:start="61:68" pos:end="61:76"><name pos:start="61:68" pos:end="61:72">layno</name> <operator pos:start="61:74" pos:end="61:74">+</operator> <literal type="number" pos:start="61:76" pos:end="61:76">1</literal></expr></argument>)</argument_list></call> <operator pos:start="61:79" pos:end="61:80">==</operator> <name pos:start="61:82" pos:end="61:86">layno</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <if_stmt pos:start="63:13" pos:end="69:28"><if pos:start="63:13" pos:end="65:25">if <condition pos:start="63:16" pos:end="63:22">(<expr pos:start="63:17" pos:end="63:21"><operator pos:start="63:17" pos:end="63:17">!</operator><name pos:start="63:18" pos:end="63:21">incl</name></expr>)</condition><block type="pseudo" pos:start="65:17" pos:end="65:25"><block_content pos:start="65:17" pos:end="65:25">

                <continue pos:start="65:17" pos:end="65:25">continue;</continue></block_content></block></if>

            <if type="elseif" pos:start="67:13" pos:end="69:28">else if <condition pos:start="67:21" pos:end="67:30">(<expr pos:start="67:22" pos:end="67:29"><name pos:start="67:22" pos:end="67:25">incl</name> <operator pos:start="67:27" pos:end="67:27">&lt;</operator> <literal type="number" pos:start="67:29" pos:end="67:29">0</literal></expr>)</condition><block type="pseudo" pos:start="69:17" pos:end="69:28"><block_content pos:start="69:17" pos:end="69:28">

                <return pos:start="69:17" pos:end="69:28">return <expr pos:start="69:24" pos:end="69:27"><name pos:start="69:24" pos:end="69:27">incl</name></expr>;</return></block_content></block></if></if_stmt>



            <if_stmt pos:start="73:13" pos:end="79:57"><if pos:start="73:13" pos:end="79:57">if <condition pos:start="73:16" pos:end="73:31">(<expr pos:start="73:17" pos:end="73:30"><operator pos:start="73:17" pos:end="73:17">!</operator><name pos:start="73:18" pos:end="73:30"><name pos:start="73:18" pos:end="73:21">cblk</name><operator pos:start="73:22" pos:end="73:23">-&gt;</operator><name pos:start="73:24" pos:end="73:30">npasses</name></name></expr>)</condition><block type="pseudo" pos:start="75:17" pos:end="79:57"><block_content pos:start="75:17" pos:end="79:57">

                <expr_stmt pos:start="75:17" pos:end="79:57"><expr pos:start="75:17" pos:end="79:56"><name pos:start="75:17" pos:end="75:33"><name pos:start="75:17" pos:end="75:20">cblk</name><operator pos:start="75:21" pos:end="75:22">-&gt;</operator><name pos:start="75:23" pos:end="75:33">nonzerobits</name></name> <operator pos:start="75:35" pos:end="75:35">=</operator> <name pos:start="75:37" pos:end="75:48"><name pos:start="75:37" pos:end="75:40">expn</name><index pos:start="75:41" pos:end="75:48">[<expr pos:start="75:42" pos:end="75:47"><name pos:start="75:42" pos:end="75:47">bandno</name></expr>]</index></name> <operator pos:start="75:50" pos:end="75:50">+</operator> <name pos:start="75:52" pos:end="75:59">numgbits</name> <operator pos:start="75:61" pos:end="75:61">-</operator> <literal type="number" pos:start="75:63" pos:end="75:65">1</literal> <operator pos:start="75:65" pos:end="75:65">-</operator>

                                    <call pos:start="77:37" pos:end="79:56"><name pos:start="77:37" pos:end="77:51">tag_tree_decode</name><argument_list pos:start="77:52" pos:end="79:56">(<argument pos:start="77:53" pos:end="77:53"><expr pos:start="77:53" pos:end="77:53"><name pos:start="77:53" pos:end="77:53">s</name></expr></argument>, <argument pos:start="77:56" pos:end="77:78"><expr pos:start="77:56" pos:end="77:78"><name pos:start="77:56" pos:end="77:69"><name pos:start="77:56" pos:end="77:59">prec</name><operator pos:start="77:60" pos:end="77:61">-&gt;</operator><name pos:start="77:62" pos:end="77:69">zerobits</name></name> <operator pos:start="77:71" pos:end="77:71">+</operator> <name pos:start="77:73" pos:end="77:78">cblkno</name></expr></argument>,

                                                    <argument pos:start="79:53" pos:end="79:55"><expr pos:start="79:53" pos:end="79:55"><literal type="number" pos:start="79:53" pos:end="79:55">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="81:13" pos:end="83:33"><if pos:start="81:13" pos:end="83:33">if <condition pos:start="81:16" pos:end="81:48">(<expr pos:start="81:17" pos:end="81:47"><operator pos:start="81:17" pos:end="81:17">(</operator><name pos:start="81:18" pos:end="81:26">newpasses</name> <operator pos:start="81:28" pos:end="81:28">=</operator> <call pos:start="81:30" pos:end="81:42"><name pos:start="81:30" pos:end="81:39">getnpasses</name><argument_list pos:start="81:40" pos:end="81:42">(<argument pos:start="81:41" pos:end="81:41"><expr pos:start="81:41" pos:end="81:41"><name pos:start="81:41" pos:end="81:41">s</name></expr></argument>)</argument_list></call><operator pos:start="81:43" pos:end="81:43">)</operator> <operator pos:start="81:45" pos:end="81:45">&lt;</operator> <literal type="number" pos:start="81:47" pos:end="81:47">0</literal></expr>)</condition><block type="pseudo" pos:start="83:17" pos:end="83:33"><block_content pos:start="83:17" pos:end="83:33">

                <return pos:start="83:17" pos:end="83:33">return <expr pos:start="83:24" pos:end="83:32"><name pos:start="83:24" pos:end="83:32">newpasses</name></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="85:13" pos:end="87:28"><if pos:start="85:13" pos:end="87:28">if <condition pos:start="85:16" pos:end="85:45">(<expr pos:start="85:17" pos:end="85:44"><operator pos:start="85:17" pos:end="85:17">(</operator><name pos:start="85:18" pos:end="85:21">llen</name> <operator pos:start="85:23" pos:end="85:23">=</operator> <call pos:start="85:25" pos:end="85:39"><name pos:start="85:25" pos:end="85:36">getlblockinc</name><argument_list pos:start="85:37" pos:end="85:39">(<argument pos:start="85:38" pos:end="85:38"><expr pos:start="85:38" pos:end="85:38"><name pos:start="85:38" pos:end="85:38">s</name></expr></argument>)</argument_list></call><operator pos:start="85:40" pos:end="85:40">)</operator> <operator pos:start="85:42" pos:end="85:42">&lt;</operator> <literal type="number" pos:start="85:44" pos:end="85:44">0</literal></expr>)</condition><block type="pseudo" pos:start="87:17" pos:end="87:28"><block_content pos:start="87:17" pos:end="87:28">

                <return pos:start="87:17" pos:end="87:28">return <expr pos:start="87:24" pos:end="87:27"><name pos:start="87:24" pos:end="87:27">llen</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:33"><expr pos:start="89:13" pos:end="89:32"><name pos:start="89:13" pos:end="89:24"><name pos:start="89:13" pos:end="89:16">cblk</name><operator pos:start="89:17" pos:end="89:18">-&gt;</operator><name pos:start="89:19" pos:end="89:24">lblock</name></name> <operator pos:start="89:26" pos:end="89:27">+=</operator> <name pos:start="89:29" pos:end="89:32">llen</name></expr>;</expr_stmt>

            <if_stmt pos:start="91:13" pos:end="93:27"><if pos:start="91:13" pos:end="93:27">if <condition pos:start="91:16" pos:end="91:75">(<expr pos:start="91:17" pos:end="91:74"><operator pos:start="91:17" pos:end="91:17">(</operator><name pos:start="91:18" pos:end="91:20">ret</name> <operator pos:start="91:22" pos:end="91:22">=</operator> <call pos:start="91:24" pos:end="91:69"><name pos:start="91:24" pos:end="91:31">get_bits</name><argument_list pos:start="91:32" pos:end="91:69">(<argument pos:start="91:33" pos:end="91:33"><expr pos:start="91:33" pos:end="91:33"><name pos:start="91:33" pos:end="91:33">s</name></expr></argument>, <argument pos:start="91:36" pos:end="91:68"><expr pos:start="91:36" pos:end="91:68"><call pos:start="91:36" pos:end="91:53"><name pos:start="91:36" pos:end="91:42">av_log2</name><argument_list pos:start="91:43" pos:end="91:53">(<argument pos:start="91:44" pos:end="91:52"><expr pos:start="91:44" pos:end="91:52"><name pos:start="91:44" pos:end="91:52">newpasses</name></expr></argument>)</argument_list></call> <operator pos:start="91:55" pos:end="91:55">+</operator> <name pos:start="91:57" pos:end="91:68"><name pos:start="91:57" pos:end="91:60">cblk</name><operator pos:start="91:61" pos:end="91:62">-&gt;</operator><name pos:start="91:63" pos:end="91:68">lblock</name></name></expr></argument>)</argument_list></call><operator pos:start="91:70" pos:end="91:70">)</operator> <operator pos:start="91:72" pos:end="91:72">&lt;</operator> <literal type="number" pos:start="91:74" pos:end="91:74">0</literal></expr>)</condition><block type="pseudo" pos:start="93:17" pos:end="93:27"><block_content pos:start="93:17" pos:end="93:27">

                <return pos:start="93:17" pos:end="93:27">return <expr pos:start="93:24" pos:end="93:26"><name pos:start="93:24" pos:end="93:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:34"><expr pos:start="95:13" pos:end="95:33"><name pos:start="95:13" pos:end="95:27"><name pos:start="95:13" pos:end="95:16">cblk</name><operator pos:start="95:17" pos:end="95:18">-&gt;</operator><name pos:start="95:19" pos:end="95:27">lengthinc</name></name> <operator pos:start="95:29" pos:end="95:29">=</operator> <name pos:start="95:31" pos:end="95:33">ret</name></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:40"><expr pos:start="97:13" pos:end="97:39"><name pos:start="97:13" pos:end="97:25"><name pos:start="97:13" pos:end="97:16">cblk</name><operator pos:start="97:17" pos:end="97:18">-&gt;</operator><name pos:start="97:19" pos:end="97:25">npasses</name></name>  <operator pos:start="97:28" pos:end="97:29">+=</operator> <name pos:start="97:31" pos:end="97:39">newpasses</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <expr_stmt pos:start="103:5" pos:end="103:22"><expr pos:start="103:5" pos:end="103:21"><call pos:start="103:5" pos:end="103:21"><name pos:start="103:5" pos:end="103:18">jpeg2000_flush</name><argument_list pos:start="103:19" pos:end="103:21">(<argument pos:start="103:20" pos:end="103:20"><expr pos:start="103:20" pos:end="103:20"><name pos:start="103:20" pos:end="103:20">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="107:5" pos:end="117:5"><if pos:start="107:5" pos:end="117:5">if <condition pos:start="107:8" pos:end="107:41">(<expr pos:start="107:9" pos:end="107:40"><name pos:start="107:9" pos:end="107:20"><name pos:start="107:9" pos:end="107:14">codsty</name><operator pos:start="107:15" pos:end="107:16">-&gt;</operator><name pos:start="107:17" pos:end="107:20">csty</name></name> <operator pos:start="107:22" pos:end="107:22">&amp;</operator> <name pos:start="107:24" pos:end="107:40">JPEG2000_CSTY_EPH</name></expr>)</condition> <block pos:start="107:43" pos:end="117:5">{<block_content pos:start="109:9" pos:end="115:70">

        <if_stmt pos:start="109:9" pos:end="115:70"><if pos:start="109:9" pos:end="111:39">if <condition pos:start="109:12" pos:end="109:57">(<expr pos:start="109:13" pos:end="109:56"><call pos:start="109:13" pos:end="109:40"><name pos:start="109:13" pos:end="109:33">bytestream2_peek_be16</name><argument_list pos:start="109:34" pos:end="109:40">(<argument pos:start="109:35" pos:end="109:39"><expr pos:start="109:35" pos:end="109:39"><operator pos:start="109:35" pos:end="109:35">&amp;</operator><name pos:start="109:36" pos:end="109:39"><name pos:start="109:36" pos:end="109:36">s</name><operator pos:start="109:37" pos:end="109:38">-&gt;</operator><name pos:start="109:39" pos:end="109:39">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="109:42" pos:end="109:43">==</operator> <name pos:start="109:45" pos:end="109:56">JPEG2000_EPH</name></expr>)</condition><block type="pseudo" pos:start="111:13" pos:end="111:39"><block_content pos:start="111:13" pos:end="111:39">

            <expr_stmt pos:start="111:13" pos:end="111:39"><expr pos:start="111:13" pos:end="111:38"><call pos:start="111:13" pos:end="111:38"><name pos:start="111:13" pos:end="111:28">bytestream2_skip</name><argument_list pos:start="111:29" pos:end="111:38">(<argument pos:start="111:30" pos:end="111:34"><expr pos:start="111:30" pos:end="111:34"><operator pos:start="111:30" pos:end="111:30">&amp;</operator><name pos:start="111:31" pos:end="111:34"><name pos:start="111:31" pos:end="111:31">s</name><operator pos:start="111:32" pos:end="111:33">-&gt;</operator><name pos:start="111:34" pos:end="111:34">g</name></name></expr></argument>, <argument pos:start="111:37" pos:end="111:37"><expr pos:start="111:37" pos:end="111:37"><literal type="number" pos:start="111:37" pos:end="111:37">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="113:9" pos:end="115:70">else<block type="pseudo" pos:start="115:13" pos:end="115:70"><block_content pos:start="115:13" pos:end="115:70">

            <expr_stmt pos:start="115:13" pos:end="115:70"><expr pos:start="115:13" pos:end="115:69"><call pos:start="115:13" pos:end="115:69"><name pos:start="115:13" pos:end="115:18">av_log</name><argument_list pos:start="115:19" pos:end="115:69">(<argument pos:start="115:20" pos:end="115:27"><expr pos:start="115:20" pos:end="115:27"><name pos:start="115:20" pos:end="115:27"><name pos:start="115:20" pos:end="115:20">s</name><operator pos:start="115:21" pos:end="115:22">-&gt;</operator><name pos:start="115:23" pos:end="115:27">avctx</name></name></expr></argument>, <argument pos:start="115:30" pos:end="115:41"><expr pos:start="115:30" pos:end="115:41"><name pos:start="115:30" pos:end="115:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="115:44" pos:end="115:68"><expr pos:start="115:44" pos:end="115:68"><literal type="string" pos:start="115:44" pos:end="115:68">"EPH marker not found.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="121:5" pos:end="165:5">for <control pos:start="121:9" pos:end="121:55">(<init pos:start="121:10" pos:end="121:20"><expr pos:start="121:10" pos:end="121:19"><name pos:start="121:10" pos:end="121:15">bandno</name> <operator pos:start="121:17" pos:end="121:17">=</operator> <literal type="number" pos:start="121:19" pos:end="121:19">0</literal></expr>;</init> <condition pos:start="121:22" pos:end="121:45"><expr pos:start="121:22" pos:end="121:44"><name pos:start="121:22" pos:end="121:27">bandno</name> <operator pos:start="121:29" pos:end="121:29">&lt;</operator> <name pos:start="121:31" pos:end="121:44"><name pos:start="121:31" pos:end="121:36">rlevel</name><operator pos:start="121:37" pos:end="121:38">-&gt;</operator><name pos:start="121:39" pos:end="121:44">nbands</name></name></expr>;</condition> <incr pos:start="121:47" pos:end="121:54"><expr pos:start="121:47" pos:end="121:54"><name pos:start="121:47" pos:end="121:52">bandno</name><operator pos:start="121:53" pos:end="121:54">++</operator></expr></incr>)</control> <block pos:start="121:57" pos:end="165:5">{<block_content pos:start="123:9" pos:end="163:9">

        <decl_stmt pos:start="123:9" pos:end="123:51"><decl pos:start="123:9" pos:end="123:50"><type pos:start="123:9" pos:end="123:22"><name pos:start="123:9" pos:end="123:20">Jpeg2000Band</name> <modifier pos:start="123:22" pos:end="123:22">*</modifier></type><name pos:start="123:23" pos:end="123:26">band</name> <init pos:start="123:28" pos:end="123:50">= <expr pos:start="123:30" pos:end="123:50"><name pos:start="123:30" pos:end="123:41"><name pos:start="123:30" pos:end="123:35">rlevel</name><operator pos:start="123:36" pos:end="123:37">-&gt;</operator><name pos:start="123:38" pos:end="123:41">band</name></name> <operator pos:start="123:43" pos:end="123:43">+</operator> <name pos:start="123:45" pos:end="123:50">bandno</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="125:9" pos:end="125:49"><decl pos:start="125:9" pos:end="125:48"><type pos:start="125:9" pos:end="125:22"><name pos:start="125:9" pos:end="125:20">Jpeg2000Prec</name> <modifier pos:start="125:22" pos:end="125:22">*</modifier></type><name pos:start="125:23" pos:end="125:26">prec</name> <init pos:start="125:28" pos:end="125:48">= <expr pos:start="125:30" pos:end="125:48"><name pos:start="125:30" pos:end="125:39"><name pos:start="125:30" pos:end="125:33">band</name><operator pos:start="125:34" pos:end="125:35">-&gt;</operator><name pos:start="125:36" pos:end="125:39">prec</name></name> <operator pos:start="125:41" pos:end="125:41">+</operator> <name pos:start="125:43" pos:end="125:48">precno</name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="129:9" pos:end="129:80"><expr pos:start="129:9" pos:end="129:79"><name pos:start="129:9" pos:end="129:22">nb_code_blocks</name> <operator pos:start="129:24" pos:end="129:24">=</operator> <name pos:start="129:26" pos:end="129:51"><name pos:start="129:26" pos:end="129:29">prec</name><operator pos:start="129:30" pos:end="129:31">-&gt;</operator><name pos:start="129:32" pos:end="129:51">nb_codeblocks_height</name></name> <operator pos:start="129:53" pos:end="129:53">*</operator> <name pos:start="129:55" pos:end="129:79"><name pos:start="129:55" pos:end="129:58">prec</name><operator pos:start="129:59" pos:end="129:60">-&gt;</operator><name pos:start="129:61" pos:end="129:79">nb_codeblocks_width</name></name></expr>;</expr_stmt>

        <for pos:start="131:9" pos:end="163:9">for <control pos:start="131:13" pos:end="131:59">(<init pos:start="131:14" pos:end="131:24"><expr pos:start="131:14" pos:end="131:23"><name pos:start="131:14" pos:end="131:19">cblkno</name> <operator pos:start="131:21" pos:end="131:21">=</operator> <literal type="number" pos:start="131:23" pos:end="131:23">0</literal></expr>;</init> <condition pos:start="131:26" pos:end="131:49"><expr pos:start="131:26" pos:end="131:48"><name pos:start="131:26" pos:end="131:31">cblkno</name> <operator pos:start="131:33" pos:end="131:33">&lt;</operator> <name pos:start="131:35" pos:end="131:48">nb_code_blocks</name></expr>;</condition> <incr pos:start="131:51" pos:end="131:58"><expr pos:start="131:51" pos:end="131:58"><name pos:start="131:51" pos:end="131:56">cblkno</name><operator pos:start="131:57" pos:end="131:58">++</operator></expr></incr>)</control> <block pos:start="131:61" pos:end="163:9">{<block_content pos:start="133:13" pos:end="161:32">

            <decl_stmt pos:start="133:13" pos:end="133:53"><decl pos:start="133:13" pos:end="133:52"><type pos:start="133:13" pos:end="133:26"><name pos:start="133:13" pos:end="133:24">Jpeg2000Cblk</name> <modifier pos:start="133:26" pos:end="133:26">*</modifier></type><name pos:start="133:27" pos:end="133:30">cblk</name> <init pos:start="133:32" pos:end="133:52">= <expr pos:start="133:34" pos:end="133:52"><name pos:start="133:34" pos:end="133:43"><name pos:start="133:34" pos:end="133:37">prec</name><operator pos:start="133:38" pos:end="133:39">-&gt;</operator><name pos:start="133:40" pos:end="133:43">cblk</name></name> <operator pos:start="133:45" pos:end="133:45">+</operator> <name pos:start="133:47" pos:end="133:52">cblkno</name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="135:13" pos:end="141:39"><if pos:start="135:13" pos:end="141:39">if <condition pos:start="135:16" pos:end="139:13">(   <expr pos:start="135:20" pos:end="137:55"><call pos:start="135:20" pos:end="135:52"><name pos:start="135:20" pos:end="135:45">bytestream2_get_bytes_left</name><argument_list pos:start="135:46" pos:end="135:52">(<argument pos:start="135:47" pos:end="135:51"><expr pos:start="135:47" pos:end="135:51"><operator pos:start="135:47" pos:end="135:47">&amp;</operator><name pos:start="135:48" pos:end="135:51"><name pos:start="135:48" pos:end="135:48">s</name><operator pos:start="135:49" pos:end="135:50">-&gt;</operator><name pos:start="135:51" pos:end="135:51">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="135:54" pos:end="135:54">&lt;</operator> <name pos:start="135:56" pos:end="135:70"><name pos:start="135:56" pos:end="135:59">cblk</name><operator pos:start="135:60" pos:end="135:61">-&gt;</operator><name pos:start="135:62" pos:end="135:70">lengthinc</name></name>

                <operator pos:start="137:17" pos:end="137:18">||</operator> <sizeof pos:start="137:20" pos:end="137:37">sizeof<argument_list pos:start="137:26" pos:end="137:37">(<argument pos:start="137:27" pos:end="137:36"><expr pos:start="137:27" pos:end="137:36"><name pos:start="137:27" pos:end="137:36"><name pos:start="137:27" pos:end="137:30">cblk</name><operator pos:start="137:31" pos:end="137:32">-&gt;</operator><name pos:start="137:33" pos:end="137:36">data</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="137:39" pos:end="137:39">&lt;</operator> <name pos:start="137:41" pos:end="137:55"><name pos:start="137:41" pos:end="137:44">cblk</name><operator pos:start="137:45" pos:end="137:46">-&gt;</operator><name pos:start="137:47" pos:end="137:55">lengthinc</name></name></expr>

            )</condition><block type="pseudo" pos:start="141:17" pos:end="141:39"><block_content pos:start="141:17" pos:end="141:39">

                <return pos:start="141:17" pos:end="141:39">return <expr pos:start="141:24" pos:end="141:38"><call pos:start="141:24" pos:end="141:38"><name pos:start="141:24" pos:end="141:30">AVERROR</name><argument_list pos:start="141:31" pos:end="141:38">(<argument pos:start="141:32" pos:end="141:37"><expr pos:start="141:32" pos:end="141:37"><name pos:start="141:32" pos:end="141:37">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <comment type="block" pos:start="143:13" pos:end="145:30">/* Code-block data can be empty. In that case initialize data

             * with 0xFFFF. */</comment>

            <if_stmt pos:start="147:13" pos:end="157:13"><if pos:start="147:13" pos:end="151:13">if <condition pos:start="147:16" pos:end="147:36">(<expr pos:start="147:17" pos:end="147:35"><name pos:start="147:17" pos:end="147:31"><name pos:start="147:17" pos:end="147:20">cblk</name><operator pos:start="147:21" pos:end="147:22">-&gt;</operator><name pos:start="147:23" pos:end="147:31">lengthinc</name></name> <operator pos:start="147:33" pos:end="147:33">&gt;</operator> <literal type="number" pos:start="147:35" pos:end="147:35">0</literal></expr>)</condition> <block pos:start="147:38" pos:end="151:13">{<block_content pos:start="149:17" pos:end="149:76">

                <expr_stmt pos:start="149:17" pos:end="149:76"><expr pos:start="149:17" pos:end="149:75"><call pos:start="149:17" pos:end="149:75"><name pos:start="149:17" pos:end="149:39">bytestream2_get_bufferu</name><argument_list pos:start="149:40" pos:end="149:75">(<argument pos:start="149:41" pos:end="149:45"><expr pos:start="149:41" pos:end="149:45"><operator pos:start="149:41" pos:end="149:41">&amp;</operator><name pos:start="149:42" pos:end="149:45"><name pos:start="149:42" pos:end="149:42">s</name><operator pos:start="149:43" pos:end="149:44">-&gt;</operator><name pos:start="149:45" pos:end="149:45">g</name></name></expr></argument>, <argument pos:start="149:48" pos:end="149:57"><expr pos:start="149:48" pos:end="149:57"><name pos:start="149:48" pos:end="149:57"><name pos:start="149:48" pos:end="149:51">cblk</name><operator pos:start="149:52" pos:end="149:53">-&gt;</operator><name pos:start="149:54" pos:end="149:57">data</name></name></expr></argument>, <argument pos:start="149:60" pos:end="149:74"><expr pos:start="149:60" pos:end="149:74"><name pos:start="149:60" pos:end="149:74"><name pos:start="149:60" pos:end="149:63">cblk</name><operator pos:start="149:64" pos:end="149:65">-&gt;</operator><name pos:start="149:66" pos:end="149:74">lengthinc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="151:15" pos:end="157:13">else <block pos:start="151:20" pos:end="157:13">{<block_content pos:start="153:17" pos:end="155:37">

                <expr_stmt pos:start="153:17" pos:end="153:37"><expr pos:start="153:17" pos:end="153:36"><name pos:start="153:17" pos:end="153:29"><name pos:start="153:17" pos:end="153:20">cblk</name><operator pos:start="153:21" pos:end="153:22">-&gt;</operator><name pos:start="153:23" pos:end="153:26">data</name><index pos:start="153:27" pos:end="153:29">[<expr pos:start="153:28" pos:end="153:28"><literal type="number" pos:start="153:28" pos:end="153:28">0</literal></expr>]</index></name> <operator pos:start="153:31" pos:end="153:31">=</operator> <literal type="number" pos:start="153:33" pos:end="153:36">0xFF</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="155:17" pos:end="155:37"><expr pos:start="155:17" pos:end="155:36"><name pos:start="155:17" pos:end="155:29"><name pos:start="155:17" pos:end="155:20">cblk</name><operator pos:start="155:21" pos:end="155:22">-&gt;</operator><name pos:start="155:23" pos:end="155:26">data</name><index pos:start="155:27" pos:end="155:29">[<expr pos:start="155:28" pos:end="155:28"><literal type="number" pos:start="155:28" pos:end="155:28">1</literal></expr>]</index></name> <operator pos:start="155:31" pos:end="155:31">=</operator> <literal type="number" pos:start="155:33" pos:end="155:36">0xFF</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:46"><expr pos:start="159:13" pos:end="159:45"><name pos:start="159:13" pos:end="159:24"><name pos:start="159:13" pos:end="159:16">cblk</name><operator pos:start="159:17" pos:end="159:18">-&gt;</operator><name pos:start="159:19" pos:end="159:24">length</name></name>   <operator pos:start="159:28" pos:end="159:29">+=</operator> <name pos:start="159:31" pos:end="159:45"><name pos:start="159:31" pos:end="159:34">cblk</name><operator pos:start="159:35" pos:end="159:36">-&gt;</operator><name pos:start="159:37" pos:end="159:45">lengthinc</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:32"><expr pos:start="161:13" pos:end="161:31"><name pos:start="161:13" pos:end="161:27"><name pos:start="161:13" pos:end="161:16">cblk</name><operator pos:start="161:17" pos:end="161:18">-&gt;</operator><name pos:start="161:19" pos:end="161:27">lengthinc</name></name> <operator pos:start="161:29" pos:end="161:29">=</operator> <literal type="number" pos:start="161:31" pos:end="161:31">0</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <return pos:start="167:5" pos:end="167:13">return <expr pos:start="167:12" pos:end="167:12"><literal type="number" pos:start="167:12" pos:end="167:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
