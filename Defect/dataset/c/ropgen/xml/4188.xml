<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4188.c" pos:tabs="8"><function pos:start="1:1" pos:end="401:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">adpcm_encode_frame</name><parameter_list pos:start="1:30" pos:end="3:75">(<parameter pos:start="1:31" pos:end="1:51"><decl pos:start="1:31" pos:end="1:51"><type pos:start="1:31" pos:end="1:51"><name pos:start="1:31" pos:end="1:44">AVCodecContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">avctx</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:48"><decl pos:start="3:29" pos:end="3:48"><type pos:start="3:29" pos:end="3:48"><name pos:start="3:29" pos:end="3:36">unsigned</name> <name pos:start="3:38" pos:end="3:41">char</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier></type><name pos:start="3:44" pos:end="3:48">frame</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:62"><decl pos:start="3:51" pos:end="3:62"><type pos:start="3:51" pos:end="3:62"><name pos:start="3:51" pos:end="3:53">int</name></type> <name pos:start="3:55" pos:end="3:62">buf_size</name></decl></parameter>, <parameter pos:start="3:65" pos:end="3:74"><decl pos:start="3:65" pos:end="3:74"><type pos:start="3:65" pos:end="3:74"><name pos:start="3:65" pos:end="3:68">void</name> <modifier pos:start="3:70" pos:end="3:70">*</modifier></type><name pos:start="3:71" pos:end="3:74">data</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="401:1">{<block_content pos:start="7:5" pos:end="399:23">

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">n</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">i</name></decl>, <decl pos:start="7:15" pos:end="7:16"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">short</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:18">samples</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:17">char</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:22">dst</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:39"><decl pos:start="13:5" pos:end="13:38"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:16">ADPCMContext</name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:19">c</name> <init pos:start="13:21" pos:end="13:38">= <expr pos:start="13:23" pos:end="13:38"><name pos:start="13:23" pos:end="13:38"><name pos:start="13:23" pos:end="13:27">avctx</name><operator pos:start="13:28" pos:end="13:29">-&gt;</operator><name pos:start="13:30" pos:end="13:38">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:16"><expr pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:7">dst</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <name pos:start="17:11" pos:end="17:15">frame</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:28"><expr pos:start="19:5" pos:end="19:27"><name pos:start="19:5" pos:end="19:11">samples</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <operator pos:start="19:15" pos:end="19:15">(</operator><name pos:start="19:16" pos:end="19:20">short</name> <operator pos:start="19:22" pos:end="19:22">*</operator><operator pos:start="19:23" pos:end="19:23">)</operator><name pos:start="19:24" pos:end="19:27">data</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:29"><expr pos:start="21:5" pos:end="21:28"><name pos:start="21:5" pos:end="21:6">st</name><operator pos:start="21:7" pos:end="21:7">=</operator> <name pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:13">avctx</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:23">channels</name></name> <operator pos:start="21:25" pos:end="21:26">==</operator> <literal type="number" pos:start="21:28" pos:end="21:28">2</literal></expr>;</expr_stmt>

<comment type="block" pos:start="23:1" pos:end="23:73">/*    n = (BLKSIZE - 4 * avctx-&gt;channels) / (2 * 8 * avctx-&gt;channels); */</comment>



    <switch pos:start="27:5" pos:end="397:5">switch<condition pos:start="27:11" pos:end="27:28">(<expr pos:start="27:12" pos:end="27:27"><name pos:start="27:12" pos:end="27:27"><name pos:start="27:12" pos:end="27:16">avctx</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:23">codec</name><operator pos:start="27:24" pos:end="27:25">-&gt;</operator><name pos:start="27:26" pos:end="27:27">id</name></name></expr>)</condition> <block pos:start="27:30" pos:end="397:5">{<block_content pos:start="29:5" pos:end="395:18">

    <case pos:start="29:5" pos:end="29:31">case <expr pos:start="29:10" pos:end="29:30"><name pos:start="29:10" pos:end="29:30">CODEC_ID_ADPCM_IMA_QT</name></expr>:</case> <comment type="block" pos:start="29:33" pos:end="29:78">/* XXX: can't test until we get .mov writer */</comment>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    <case pos:start="33:5" pos:end="33:32">case <expr pos:start="33:10" pos:end="33:31"><name pos:start="33:10" pos:end="33:31">CODEC_ID_ADPCM_IMA_WAV</name></expr>:</case>

        <expr_stmt pos:start="35:9" pos:end="35:34"><expr pos:start="35:9" pos:end="35:33"><name pos:start="35:9" pos:end="35:9">n</name> <operator pos:start="35:11" pos:end="35:11">=</operator> <name pos:start="35:13" pos:end="35:29"><name pos:start="35:13" pos:end="35:17">avctx</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:29">frame_size</name></name> <operator pos:start="35:31" pos:end="35:31">/</operator> <literal type="number" pos:start="35:33" pos:end="35:33">8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:64"><expr pos:start="37:13" pos:end="37:63"><name pos:start="37:13" pos:end="37:24"><name pos:start="37:13" pos:end="37:13">c</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:21">status</name><index pos:start="37:22" pos:end="37:24">[<expr pos:start="37:23" pos:end="37:23"><literal type="number" pos:start="37:23" pos:end="37:23">0</literal></expr>]</index></name><operator pos:start="37:25" pos:end="37:25">.</operator><name pos:start="37:26" pos:end="37:36">prev_sample</name> <operator pos:start="37:38" pos:end="37:38">=</operator> <operator pos:start="37:40" pos:end="37:40">(</operator><name pos:start="37:41" pos:end="37:46">signed</name> <name pos:start="37:48" pos:end="37:52">short</name><operator pos:start="37:53" pos:end="37:53">)</operator><name pos:start="37:54" pos:end="37:63"><name pos:start="37:54" pos:end="37:60">samples</name><index pos:start="37:61" pos:end="37:63">[<expr pos:start="37:62" pos:end="37:62"><literal type="number" pos:start="37:62" pos:end="37:62">0</literal></expr>]</index></name></expr>;</expr_stmt> <comment type="block" pos:start="37:66" pos:end="37:74">/* XXX */</comment>

<comment type="block" pos:start="39:1" pos:end="39:45">/*            c-&gt;status[0].step_index = 0; */</comment><comment type="block" pos:start="39:46" pos:end="39:94">/* XXX: not sure how to init the state machine */</comment>

            <expr_stmt pos:start="41:13" pos:end="41:64"><expr pos:start="41:13" pos:end="41:63"><call pos:start="41:13" pos:end="41:63"><name pos:start="41:13" pos:end="41:31">bytestream_put_le16</name><argument_list pos:start="41:32" pos:end="41:63">(<argument pos:start="41:33" pos:end="41:36"><expr pos:start="41:33" pos:end="41:36"><operator pos:start="41:33" pos:end="41:33">&amp;</operator><name pos:start="41:34" pos:end="41:36">dst</name></expr></argument>, <argument pos:start="41:39" pos:end="41:62"><expr pos:start="41:39" pos:end="41:62"><name pos:start="41:39" pos:end="41:50"><name pos:start="41:39" pos:end="41:39">c</name><operator pos:start="41:40" pos:end="41:41">-&gt;</operator><name pos:start="41:42" pos:end="41:47">status</name><index pos:start="41:48" pos:end="41:50">[<expr pos:start="41:49" pos:end="41:49"><literal type="number" pos:start="41:49" pos:end="41:49">0</literal></expr>]</index></name><operator pos:start="41:51" pos:end="41:51">.</operator><name pos:start="41:52" pos:end="41:62">prev_sample</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:60"><expr pos:start="43:13" pos:end="43:59"><operator pos:start="43:13" pos:end="43:13">*</operator><name pos:start="43:14" pos:end="43:16">dst</name><operator pos:start="43:17" pos:end="43:18">++</operator> <operator pos:start="43:20" pos:end="43:20">=</operator> <operator pos:start="43:22" pos:end="43:22">(</operator><name pos:start="43:23" pos:end="43:30">unsigned</name> <name pos:start="43:32" pos:end="43:35">char</name><operator pos:start="43:36" pos:end="43:36">)</operator><name pos:start="43:37" pos:end="43:48"><name pos:start="43:37" pos:end="43:37">c</name><operator pos:start="43:38" pos:end="43:39">-&gt;</operator><name pos:start="43:40" pos:end="43:45">status</name><index pos:start="43:46" pos:end="43:48">[<expr pos:start="43:47" pos:end="43:47"><literal type="number" pos:start="43:47" pos:end="43:47">0</literal></expr>]</index></name><operator pos:start="43:49" pos:end="43:49">.</operator><name pos:start="43:50" pos:end="43:59">step_index</name></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:23"><expr pos:start="45:13" pos:end="45:22"><operator pos:start="45:13" pos:end="45:13">*</operator><name pos:start="45:14" pos:end="45:16">dst</name><operator pos:start="45:17" pos:end="45:18">++</operator> <operator pos:start="45:20" pos:end="45:20">=</operator> <literal type="number" pos:start="45:22" pos:end="45:22">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="45:25" pos:end="45:37">/* unknown */</comment>

            <expr_stmt pos:start="47:13" pos:end="47:22"><expr pos:start="47:13" pos:end="47:21"><name pos:start="47:13" pos:end="47:19">samples</name><operator pos:start="47:20" pos:end="47:21">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="49:13" pos:end="63:13"><if pos:start="49:13" pos:end="63:13">if <condition pos:start="49:16" pos:end="49:37">(<expr pos:start="49:17" pos:end="49:36"><name pos:start="49:17" pos:end="49:31"><name pos:start="49:17" pos:end="49:21">avctx</name><operator pos:start="49:22" pos:end="49:23">-&gt;</operator><name pos:start="49:24" pos:end="49:31">channels</name></name> <operator pos:start="49:33" pos:end="49:34">==</operator> <literal type="number" pos:start="49:36" pos:end="49:36">2</literal></expr>)</condition> <block pos:start="49:39" pos:end="63:13">{<block_content pos:start="51:17" pos:end="61:26">

                <expr_stmt pos:start="51:17" pos:end="51:68"><expr pos:start="51:17" pos:end="51:67"><name pos:start="51:17" pos:end="51:28"><name pos:start="51:17" pos:end="51:17">c</name><operator pos:start="51:18" pos:end="51:19">-&gt;</operator><name pos:start="51:20" pos:end="51:25">status</name><index pos:start="51:26" pos:end="51:28">[<expr pos:start="51:27" pos:end="51:27"><literal type="number" pos:start="51:27" pos:end="51:27">1</literal></expr>]</index></name><operator pos:start="51:29" pos:end="51:29">.</operator><name pos:start="51:30" pos:end="51:40">prev_sample</name> <operator pos:start="51:42" pos:end="51:42">=</operator> <operator pos:start="51:44" pos:end="51:44">(</operator><name pos:start="51:45" pos:end="51:50">signed</name> <name pos:start="51:52" pos:end="51:56">short</name><operator pos:start="51:57" pos:end="51:57">)</operator><name pos:start="51:58" pos:end="51:67"><name pos:start="51:58" pos:end="51:64">samples</name><index pos:start="51:65" pos:end="51:67">[<expr pos:start="51:66" pos:end="51:66"><literal type="number" pos:start="51:66" pos:end="51:66">1</literal></expr>]</index></name></expr>;</expr_stmt>

<comment type="block" pos:start="53:1" pos:end="53:49">/*                c-&gt;status[1].step_index = 0; */</comment>

                <expr_stmt pos:start="55:17" pos:end="55:68"><expr pos:start="55:17" pos:end="55:67"><call pos:start="55:17" pos:end="55:67"><name pos:start="55:17" pos:end="55:35">bytestream_put_le16</name><argument_list pos:start="55:36" pos:end="55:67">(<argument pos:start="55:37" pos:end="55:40"><expr pos:start="55:37" pos:end="55:40"><operator pos:start="55:37" pos:end="55:37">&amp;</operator><name pos:start="55:38" pos:end="55:40">dst</name></expr></argument>, <argument pos:start="55:43" pos:end="55:66"><expr pos:start="55:43" pos:end="55:66"><name pos:start="55:43" pos:end="55:54"><name pos:start="55:43" pos:end="55:43">c</name><operator pos:start="55:44" pos:end="55:45">-&gt;</operator><name pos:start="55:46" pos:end="55:51">status</name><index pos:start="55:52" pos:end="55:54">[<expr pos:start="55:53" pos:end="55:53"><literal type="number" pos:start="55:53" pos:end="55:53">1</literal></expr>]</index></name><operator pos:start="55:55" pos:end="55:55">.</operator><name pos:start="55:56" pos:end="55:66">prev_sample</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="57:17" pos:end="57:64"><expr pos:start="57:17" pos:end="57:63"><operator pos:start="57:17" pos:end="57:17">*</operator><name pos:start="57:18" pos:end="57:20">dst</name><operator pos:start="57:21" pos:end="57:22">++</operator> <operator pos:start="57:24" pos:end="57:24">=</operator> <operator pos:start="57:26" pos:end="57:26">(</operator><name pos:start="57:27" pos:end="57:34">unsigned</name> <name pos:start="57:36" pos:end="57:39">char</name><operator pos:start="57:40" pos:end="57:40">)</operator><name pos:start="57:41" pos:end="57:52"><name pos:start="57:41" pos:end="57:41">c</name><operator pos:start="57:42" pos:end="57:43">-&gt;</operator><name pos:start="57:44" pos:end="57:49">status</name><index pos:start="57:50" pos:end="57:52">[<expr pos:start="57:51" pos:end="57:51"><literal type="number" pos:start="57:51" pos:end="57:51">1</literal></expr>]</index></name><operator pos:start="57:53" pos:end="57:53">.</operator><name pos:start="57:54" pos:end="57:63">step_index</name></expr>;</expr_stmt>

                <expr_stmt pos:start="59:17" pos:end="59:27"><expr pos:start="59:17" pos:end="59:26"><operator pos:start="59:17" pos:end="59:17">*</operator><name pos:start="59:18" pos:end="59:20">dst</name><operator pos:start="59:21" pos:end="59:22">++</operator> <operator pos:start="59:24" pos:end="59:24">=</operator> <literal type="number" pos:start="59:26" pos:end="59:26">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="61:17" pos:end="61:26"><expr pos:start="61:17" pos:end="61:25"><name pos:start="61:17" pos:end="61:23">samples</name><operator pos:start="61:24" pos:end="61:25">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="67:13" pos:end="67:92">/* stereo: 4 bytes (8 samples) for left, 4 bytes for right, 4 bytes left, ... */</comment>

            <if_stmt pos:start="69:13" pos:end="163:13"><if pos:start="69:13" pos:end="103:13">if<condition pos:start="69:15" pos:end="69:34">(<expr pos:start="69:16" pos:end="69:33"><name pos:start="69:16" pos:end="69:29"><name pos:start="69:16" pos:end="69:20">avctx</name><operator pos:start="69:21" pos:end="69:22">-&gt;</operator><name pos:start="69:23" pos:end="69:29">trellis</name></name> <operator pos:start="69:31" pos:end="69:31">&gt;</operator> <literal type="number" pos:start="69:33" pos:end="69:33">0</literal></expr>)</condition> <block pos:start="69:36" pos:end="103:13">{<block_content pos:start="71:17" pos:end="101:17">

                <decl_stmt pos:start="71:17" pos:end="71:36"><decl pos:start="71:17" pos:end="71:35"><type pos:start="71:17" pos:end="71:23"><name pos:start="71:17" pos:end="71:23">uint8_t</name></type> <name pos:start="71:25" pos:end="71:35"><name pos:start="71:25" pos:end="71:27">buf</name><index pos:start="71:28" pos:end="71:30">[<expr pos:start="71:29" pos:end="71:29"><literal type="number" pos:start="71:29" pos:end="71:29">2</literal></expr>]</index><index pos:start="71:31" pos:end="71:35">[<expr pos:start="71:32" pos:end="71:34"><name pos:start="71:32" pos:end="71:32">n</name><operator pos:start="71:33" pos:end="71:33">*</operator><literal type="number" pos:start="71:34" pos:end="71:34">8</literal></expr>]</index></name></decl>;</decl_stmt>

                <expr_stmt pos:start="73:17" pos:end="73:83"><expr pos:start="73:17" pos:end="73:82"><call pos:start="73:17" pos:end="73:82"><name pos:start="73:17" pos:end="73:38">adpcm_compress_trellis</name><argument_list pos:start="73:39" pos:end="73:82">(<argument pos:start="73:40" pos:end="73:44"><expr pos:start="73:40" pos:end="73:44"><name pos:start="73:40" pos:end="73:44">avctx</name></expr></argument>, <argument pos:start="73:47" pos:end="73:53"><expr pos:start="73:47" pos:end="73:53"><name pos:start="73:47" pos:end="73:53">samples</name></expr></argument>, <argument pos:start="73:56" pos:end="73:61"><expr pos:start="73:56" pos:end="73:61"><name pos:start="73:56" pos:end="73:61"><name pos:start="73:56" pos:end="73:58">buf</name><index pos:start="73:59" pos:end="73:61">[<expr pos:start="73:60" pos:end="73:60"><literal type="number" pos:start="73:60" pos:end="73:60">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="73:64" pos:end="73:76"><expr pos:start="73:64" pos:end="73:76"><operator pos:start="73:64" pos:end="73:64">&amp;</operator><name pos:start="73:65" pos:end="73:76"><name pos:start="73:65" pos:end="73:65">c</name><operator pos:start="73:66" pos:end="73:67">-&gt;</operator><name pos:start="73:68" pos:end="73:73">status</name><index pos:start="73:74" pos:end="73:76">[<expr pos:start="73:75" pos:end="73:75"><literal type="number" pos:start="73:75" pos:end="73:75">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="73:79" pos:end="73:81"><expr pos:start="73:79" pos:end="73:81"><name pos:start="73:79" pos:end="73:79">n</name><operator pos:start="73:80" pos:end="73:80">*</operator><literal type="number" pos:start="73:81" pos:end="73:81">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="75:17" pos:end="77:89"><if pos:start="75:17" pos:end="77:89">if<condition pos:start="75:19" pos:end="75:40">(<expr pos:start="75:20" pos:end="75:39"><name pos:start="75:20" pos:end="75:34"><name pos:start="75:20" pos:end="75:24">avctx</name><operator pos:start="75:25" pos:end="75:26">-&gt;</operator><name pos:start="75:27" pos:end="75:34">channels</name></name> <operator pos:start="75:36" pos:end="75:37">==</operator> <literal type="number" pos:start="75:39" pos:end="75:39">2</literal></expr>)</condition><block type="pseudo" pos:start="77:21" pos:end="77:89"><block_content pos:start="77:21" pos:end="77:89">

                    <expr_stmt pos:start="77:21" pos:end="77:89"><expr pos:start="77:21" pos:end="77:88"><call pos:start="77:21" pos:end="77:88"><name pos:start="77:21" pos:end="77:42">adpcm_compress_trellis</name><argument_list pos:start="77:43" pos:end="77:88">(<argument pos:start="77:44" pos:end="77:48"><expr pos:start="77:44" pos:end="77:48"><name pos:start="77:44" pos:end="77:48">avctx</name></expr></argument>, <argument pos:start="77:51" pos:end="77:59"><expr pos:start="77:51" pos:end="77:59"><name pos:start="77:51" pos:end="77:57">samples</name><operator pos:start="77:58" pos:end="77:58">+</operator><literal type="number" pos:start="77:59" pos:end="77:59">1</literal></expr></argument>, <argument pos:start="77:62" pos:end="77:67"><expr pos:start="77:62" pos:end="77:67"><name pos:start="77:62" pos:end="77:67"><name pos:start="77:62" pos:end="77:64">buf</name><index pos:start="77:65" pos:end="77:67">[<expr pos:start="77:66" pos:end="77:66"><literal type="number" pos:start="77:66" pos:end="77:66">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="77:70" pos:end="77:82"><expr pos:start="77:70" pos:end="77:82"><operator pos:start="77:70" pos:end="77:70">&amp;</operator><name pos:start="77:71" pos:end="77:82"><name pos:start="77:71" pos:end="77:71">c</name><operator pos:start="77:72" pos:end="77:73">-&gt;</operator><name pos:start="77:74" pos:end="77:79">status</name><index pos:start="77:80" pos:end="77:82">[<expr pos:start="77:81" pos:end="77:81"><literal type="number" pos:start="77:81" pos:end="77:81">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="77:85" pos:end="77:87"><expr pos:start="77:85" pos:end="77:87"><name pos:start="77:85" pos:end="77:85">n</name><operator pos:start="77:86" pos:end="77:86">*</operator><literal type="number" pos:start="77:87" pos:end="77:87">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <for pos:start="79:17" pos:end="101:17">for<control pos:start="79:20" pos:end="79:34">(<init pos:start="79:21" pos:end="79:24"><expr pos:start="79:21" pos:end="79:23"><name pos:start="79:21" pos:end="79:21">i</name><operator pos:start="79:22" pos:end="79:22">=</operator><literal type="number" pos:start="79:23" pos:end="79:23">0</literal></expr>;</init> <condition pos:start="79:26" pos:end="79:29"><expr pos:start="79:26" pos:end="79:28"><name pos:start="79:26" pos:end="79:26">i</name><operator pos:start="79:27" pos:end="79:27">&lt;</operator><name pos:start="79:28" pos:end="79:28">n</name></expr>;</condition> <incr pos:start="79:31" pos:end="79:33"><expr pos:start="79:31" pos:end="79:33"><name pos:start="79:31" pos:end="79:31">i</name><operator pos:start="79:32" pos:end="79:33">++</operator></expr></incr>)</control> <block pos:start="79:36" pos:end="101:17">{<block_content pos:start="81:21" pos:end="99:21">

                    <expr_stmt pos:start="81:21" pos:end="81:66"><expr pos:start="81:21" pos:end="81:65"><operator pos:start="81:21" pos:end="81:21">*</operator><name pos:start="81:22" pos:end="81:24">dst</name><operator pos:start="81:25" pos:end="81:26">++</operator> <operator pos:start="81:28" pos:end="81:28">=</operator> <name pos:start="81:30" pos:end="81:42"><name pos:start="81:30" pos:end="81:32">buf</name><index pos:start="81:33" pos:end="81:35">[<expr pos:start="81:34" pos:end="81:34"><literal type="number" pos:start="81:34" pos:end="81:34">0</literal></expr>]</index><index pos:start="81:36" pos:end="81:42">[<expr pos:start="81:37" pos:end="81:41"><literal type="number" pos:start="81:37" pos:end="81:37">8</literal><operator pos:start="81:38" pos:end="81:38">*</operator><name pos:start="81:39" pos:end="81:39">i</name><operator pos:start="81:40" pos:end="81:40">+</operator><literal type="number" pos:start="81:41" pos:end="81:41">0</literal></expr>]</index></name> <operator pos:start="81:44" pos:end="81:44">|</operator> <operator pos:start="81:46" pos:end="81:46">(</operator><name pos:start="81:47" pos:end="81:59"><name pos:start="81:47" pos:end="81:49">buf</name><index pos:start="81:50" pos:end="81:52">[<expr pos:start="81:51" pos:end="81:51"><literal type="number" pos:start="81:51" pos:end="81:51">0</literal></expr>]</index><index pos:start="81:53" pos:end="81:59">[<expr pos:start="81:54" pos:end="81:58"><literal type="number" pos:start="81:54" pos:end="81:54">8</literal><operator pos:start="81:55" pos:end="81:55">*</operator><name pos:start="81:56" pos:end="81:56">i</name><operator pos:start="81:57" pos:end="81:57">+</operator><literal type="number" pos:start="81:58" pos:end="81:58">1</literal></expr>]</index></name> <operator pos:start="81:61" pos:end="81:62">&lt;&lt;</operator> <literal type="number" pos:start="81:64" pos:end="81:64">4</literal><operator pos:start="81:65" pos:end="81:65">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="83:21" pos:end="83:66"><expr pos:start="83:21" pos:end="83:65"><operator pos:start="83:21" pos:end="83:21">*</operator><name pos:start="83:22" pos:end="83:24">dst</name><operator pos:start="83:25" pos:end="83:26">++</operator> <operator pos:start="83:28" pos:end="83:28">=</operator> <name pos:start="83:30" pos:end="83:42"><name pos:start="83:30" pos:end="83:32">buf</name><index pos:start="83:33" pos:end="83:35">[<expr pos:start="83:34" pos:end="83:34"><literal type="number" pos:start="83:34" pos:end="83:34">0</literal></expr>]</index><index pos:start="83:36" pos:end="83:42">[<expr pos:start="83:37" pos:end="83:41"><literal type="number" pos:start="83:37" pos:end="83:37">8</literal><operator pos:start="83:38" pos:end="83:38">*</operator><name pos:start="83:39" pos:end="83:39">i</name><operator pos:start="83:40" pos:end="83:40">+</operator><literal type="number" pos:start="83:41" pos:end="83:41">2</literal></expr>]</index></name> <operator pos:start="83:44" pos:end="83:44">|</operator> <operator pos:start="83:46" pos:end="83:46">(</operator><name pos:start="83:47" pos:end="83:59"><name pos:start="83:47" pos:end="83:49">buf</name><index pos:start="83:50" pos:end="83:52">[<expr pos:start="83:51" pos:end="83:51"><literal type="number" pos:start="83:51" pos:end="83:51">0</literal></expr>]</index><index pos:start="83:53" pos:end="83:59">[<expr pos:start="83:54" pos:end="83:58"><literal type="number" pos:start="83:54" pos:end="83:54">8</literal><operator pos:start="83:55" pos:end="83:55">*</operator><name pos:start="83:56" pos:end="83:56">i</name><operator pos:start="83:57" pos:end="83:57">+</operator><literal type="number" pos:start="83:58" pos:end="83:58">3</literal></expr>]</index></name> <operator pos:start="83:61" pos:end="83:62">&lt;&lt;</operator> <literal type="number" pos:start="83:64" pos:end="83:64">4</literal><operator pos:start="83:65" pos:end="83:65">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="85:21" pos:end="85:66"><expr pos:start="85:21" pos:end="85:65"><operator pos:start="85:21" pos:end="85:21">*</operator><name pos:start="85:22" pos:end="85:24">dst</name><operator pos:start="85:25" pos:end="85:26">++</operator> <operator pos:start="85:28" pos:end="85:28">=</operator> <name pos:start="85:30" pos:end="85:42"><name pos:start="85:30" pos:end="85:32">buf</name><index pos:start="85:33" pos:end="85:35">[<expr pos:start="85:34" pos:end="85:34"><literal type="number" pos:start="85:34" pos:end="85:34">0</literal></expr>]</index><index pos:start="85:36" pos:end="85:42">[<expr pos:start="85:37" pos:end="85:41"><literal type="number" pos:start="85:37" pos:end="85:37">8</literal><operator pos:start="85:38" pos:end="85:38">*</operator><name pos:start="85:39" pos:end="85:39">i</name><operator pos:start="85:40" pos:end="85:40">+</operator><literal type="number" pos:start="85:41" pos:end="85:41">4</literal></expr>]</index></name> <operator pos:start="85:44" pos:end="85:44">|</operator> <operator pos:start="85:46" pos:end="85:46">(</operator><name pos:start="85:47" pos:end="85:59"><name pos:start="85:47" pos:end="85:49">buf</name><index pos:start="85:50" pos:end="85:52">[<expr pos:start="85:51" pos:end="85:51"><literal type="number" pos:start="85:51" pos:end="85:51">0</literal></expr>]</index><index pos:start="85:53" pos:end="85:59">[<expr pos:start="85:54" pos:end="85:58"><literal type="number" pos:start="85:54" pos:end="85:54">8</literal><operator pos:start="85:55" pos:end="85:55">*</operator><name pos:start="85:56" pos:end="85:56">i</name><operator pos:start="85:57" pos:end="85:57">+</operator><literal type="number" pos:start="85:58" pos:end="85:58">5</literal></expr>]</index></name> <operator pos:start="85:61" pos:end="85:62">&lt;&lt;</operator> <literal type="number" pos:start="85:64" pos:end="85:64">4</literal><operator pos:start="85:65" pos:end="85:65">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="87:21" pos:end="87:66"><expr pos:start="87:21" pos:end="87:65"><operator pos:start="87:21" pos:end="87:21">*</operator><name pos:start="87:22" pos:end="87:24">dst</name><operator pos:start="87:25" pos:end="87:26">++</operator> <operator pos:start="87:28" pos:end="87:28">=</operator> <name pos:start="87:30" pos:end="87:42"><name pos:start="87:30" pos:end="87:32">buf</name><index pos:start="87:33" pos:end="87:35">[<expr pos:start="87:34" pos:end="87:34"><literal type="number" pos:start="87:34" pos:end="87:34">0</literal></expr>]</index><index pos:start="87:36" pos:end="87:42">[<expr pos:start="87:37" pos:end="87:41"><literal type="number" pos:start="87:37" pos:end="87:37">8</literal><operator pos:start="87:38" pos:end="87:38">*</operator><name pos:start="87:39" pos:end="87:39">i</name><operator pos:start="87:40" pos:end="87:40">+</operator><literal type="number" pos:start="87:41" pos:end="87:41">6</literal></expr>]</index></name> <operator pos:start="87:44" pos:end="87:44">|</operator> <operator pos:start="87:46" pos:end="87:46">(</operator><name pos:start="87:47" pos:end="87:59"><name pos:start="87:47" pos:end="87:49">buf</name><index pos:start="87:50" pos:end="87:52">[<expr pos:start="87:51" pos:end="87:51"><literal type="number" pos:start="87:51" pos:end="87:51">0</literal></expr>]</index><index pos:start="87:53" pos:end="87:59">[<expr pos:start="87:54" pos:end="87:58"><literal type="number" pos:start="87:54" pos:end="87:54">8</literal><operator pos:start="87:55" pos:end="87:55">*</operator><name pos:start="87:56" pos:end="87:56">i</name><operator pos:start="87:57" pos:end="87:57">+</operator><literal type="number" pos:start="87:58" pos:end="87:58">7</literal></expr>]</index></name> <operator pos:start="87:61" pos:end="87:62">&lt;&lt;</operator> <literal type="number" pos:start="87:64" pos:end="87:64">4</literal><operator pos:start="87:65" pos:end="87:65">)</operator></expr>;</expr_stmt>

                    <if_stmt pos:start="89:21" pos:end="99:21"><if pos:start="89:21" pos:end="99:21">if <condition pos:start="89:24" pos:end="89:45">(<expr pos:start="89:25" pos:end="89:44"><name pos:start="89:25" pos:end="89:39"><name pos:start="89:25" pos:end="89:29">avctx</name><operator pos:start="89:30" pos:end="89:31">-&gt;</operator><name pos:start="89:32" pos:end="89:39">channels</name></name> <operator pos:start="89:41" pos:end="89:42">==</operator> <literal type="number" pos:start="89:44" pos:end="89:44">2</literal></expr>)</condition> <block pos:start="89:47" pos:end="99:21">{<block_content pos:start="91:25" pos:end="97:70">

                        <expr_stmt pos:start="91:25" pos:end="91:70"><expr pos:start="91:25" pos:end="91:69"><operator pos:start="91:25" pos:end="91:25">*</operator><name pos:start="91:26" pos:end="91:28">dst</name><operator pos:start="91:29" pos:end="91:30">++</operator> <operator pos:start="91:32" pos:end="91:32">=</operator> <name pos:start="91:34" pos:end="91:46"><name pos:start="91:34" pos:end="91:36">buf</name><index pos:start="91:37" pos:end="91:39">[<expr pos:start="91:38" pos:end="91:38"><literal type="number" pos:start="91:38" pos:end="91:38">1</literal></expr>]</index><index pos:start="91:40" pos:end="91:46">[<expr pos:start="91:41" pos:end="91:45"><literal type="number" pos:start="91:41" pos:end="91:41">8</literal><operator pos:start="91:42" pos:end="91:42">*</operator><name pos:start="91:43" pos:end="91:43">i</name><operator pos:start="91:44" pos:end="91:44">+</operator><literal type="number" pos:start="91:45" pos:end="91:45">0</literal></expr>]</index></name> <operator pos:start="91:48" pos:end="91:48">|</operator> <operator pos:start="91:50" pos:end="91:50">(</operator><name pos:start="91:51" pos:end="91:63"><name pos:start="91:51" pos:end="91:53">buf</name><index pos:start="91:54" pos:end="91:56">[<expr pos:start="91:55" pos:end="91:55"><literal type="number" pos:start="91:55" pos:end="91:55">1</literal></expr>]</index><index pos:start="91:57" pos:end="91:63">[<expr pos:start="91:58" pos:end="91:62"><literal type="number" pos:start="91:58" pos:end="91:58">8</literal><operator pos:start="91:59" pos:end="91:59">*</operator><name pos:start="91:60" pos:end="91:60">i</name><operator pos:start="91:61" pos:end="91:61">+</operator><literal type="number" pos:start="91:62" pos:end="91:62">1</literal></expr>]</index></name> <operator pos:start="91:65" pos:end="91:66">&lt;&lt;</operator> <literal type="number" pos:start="91:68" pos:end="91:68">4</literal><operator pos:start="91:69" pos:end="91:69">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="93:25" pos:end="93:70"><expr pos:start="93:25" pos:end="93:69"><operator pos:start="93:25" pos:end="93:25">*</operator><name pos:start="93:26" pos:end="93:28">dst</name><operator pos:start="93:29" pos:end="93:30">++</operator> <operator pos:start="93:32" pos:end="93:32">=</operator> <name pos:start="93:34" pos:end="93:46"><name pos:start="93:34" pos:end="93:36">buf</name><index pos:start="93:37" pos:end="93:39">[<expr pos:start="93:38" pos:end="93:38"><literal type="number" pos:start="93:38" pos:end="93:38">1</literal></expr>]</index><index pos:start="93:40" pos:end="93:46">[<expr pos:start="93:41" pos:end="93:45"><literal type="number" pos:start="93:41" pos:end="93:41">8</literal><operator pos:start="93:42" pos:end="93:42">*</operator><name pos:start="93:43" pos:end="93:43">i</name><operator pos:start="93:44" pos:end="93:44">+</operator><literal type="number" pos:start="93:45" pos:end="93:45">2</literal></expr>]</index></name> <operator pos:start="93:48" pos:end="93:48">|</operator> <operator pos:start="93:50" pos:end="93:50">(</operator><name pos:start="93:51" pos:end="93:63"><name pos:start="93:51" pos:end="93:53">buf</name><index pos:start="93:54" pos:end="93:56">[<expr pos:start="93:55" pos:end="93:55"><literal type="number" pos:start="93:55" pos:end="93:55">1</literal></expr>]</index><index pos:start="93:57" pos:end="93:63">[<expr pos:start="93:58" pos:end="93:62"><literal type="number" pos:start="93:58" pos:end="93:58">8</literal><operator pos:start="93:59" pos:end="93:59">*</operator><name pos:start="93:60" pos:end="93:60">i</name><operator pos:start="93:61" pos:end="93:61">+</operator><literal type="number" pos:start="93:62" pos:end="93:62">3</literal></expr>]</index></name> <operator pos:start="93:65" pos:end="93:66">&lt;&lt;</operator> <literal type="number" pos:start="93:68" pos:end="93:68">4</literal><operator pos:start="93:69" pos:end="93:69">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="95:25" pos:end="95:70"><expr pos:start="95:25" pos:end="95:69"><operator pos:start="95:25" pos:end="95:25">*</operator><name pos:start="95:26" pos:end="95:28">dst</name><operator pos:start="95:29" pos:end="95:30">++</operator> <operator pos:start="95:32" pos:end="95:32">=</operator> <name pos:start="95:34" pos:end="95:46"><name pos:start="95:34" pos:end="95:36">buf</name><index pos:start="95:37" pos:end="95:39">[<expr pos:start="95:38" pos:end="95:38"><literal type="number" pos:start="95:38" pos:end="95:38">1</literal></expr>]</index><index pos:start="95:40" pos:end="95:46">[<expr pos:start="95:41" pos:end="95:45"><literal type="number" pos:start="95:41" pos:end="95:41">8</literal><operator pos:start="95:42" pos:end="95:42">*</operator><name pos:start="95:43" pos:end="95:43">i</name><operator pos:start="95:44" pos:end="95:44">+</operator><literal type="number" pos:start="95:45" pos:end="95:45">4</literal></expr>]</index></name> <operator pos:start="95:48" pos:end="95:48">|</operator> <operator pos:start="95:50" pos:end="95:50">(</operator><name pos:start="95:51" pos:end="95:63"><name pos:start="95:51" pos:end="95:53">buf</name><index pos:start="95:54" pos:end="95:56">[<expr pos:start="95:55" pos:end="95:55"><literal type="number" pos:start="95:55" pos:end="95:55">1</literal></expr>]</index><index pos:start="95:57" pos:end="95:63">[<expr pos:start="95:58" pos:end="95:62"><literal type="number" pos:start="95:58" pos:end="95:58">8</literal><operator pos:start="95:59" pos:end="95:59">*</operator><name pos:start="95:60" pos:end="95:60">i</name><operator pos:start="95:61" pos:end="95:61">+</operator><literal type="number" pos:start="95:62" pos:end="95:62">5</literal></expr>]</index></name> <operator pos:start="95:65" pos:end="95:66">&lt;&lt;</operator> <literal type="number" pos:start="95:68" pos:end="95:68">4</literal><operator pos:start="95:69" pos:end="95:69">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="97:25" pos:end="97:70"><expr pos:start="97:25" pos:end="97:69"><operator pos:start="97:25" pos:end="97:25">*</operator><name pos:start="97:26" pos:end="97:28">dst</name><operator pos:start="97:29" pos:end="97:30">++</operator> <operator pos:start="97:32" pos:end="97:32">=</operator> <name pos:start="97:34" pos:end="97:46"><name pos:start="97:34" pos:end="97:36">buf</name><index pos:start="97:37" pos:end="97:39">[<expr pos:start="97:38" pos:end="97:38"><literal type="number" pos:start="97:38" pos:end="97:38">1</literal></expr>]</index><index pos:start="97:40" pos:end="97:46">[<expr pos:start="97:41" pos:end="97:45"><literal type="number" pos:start="97:41" pos:end="97:41">8</literal><operator pos:start="97:42" pos:end="97:42">*</operator><name pos:start="97:43" pos:end="97:43">i</name><operator pos:start="97:44" pos:end="97:44">+</operator><literal type="number" pos:start="97:45" pos:end="97:45">6</literal></expr>]</index></name> <operator pos:start="97:48" pos:end="97:48">|</operator> <operator pos:start="97:50" pos:end="97:50">(</operator><name pos:start="97:51" pos:end="97:63"><name pos:start="97:51" pos:end="97:53">buf</name><index pos:start="97:54" pos:end="97:56">[<expr pos:start="97:55" pos:end="97:55"><literal type="number" pos:start="97:55" pos:end="97:55">1</literal></expr>]</index><index pos:start="97:57" pos:end="97:63">[<expr pos:start="97:58" pos:end="97:62"><literal type="number" pos:start="97:58" pos:end="97:58">8</literal><operator pos:start="97:59" pos:end="97:59">*</operator><name pos:start="97:60" pos:end="97:60">i</name><operator pos:start="97:61" pos:end="97:61">+</operator><literal type="number" pos:start="97:62" pos:end="97:62">7</literal></expr>]</index></name> <operator pos:start="97:65" pos:end="97:66">&lt;&lt;</operator> <literal type="number" pos:start="97:68" pos:end="97:68">4</literal><operator pos:start="97:69" pos:end="97:69">)</operator></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if> <else pos:start="103:15" pos:end="163:13">else<block type="pseudo" pos:start="105:13" pos:end="163:13"><block_content pos:start="105:13" pos:end="163:13">

            <for pos:start="105:13" pos:end="163:13">for <control pos:start="105:17" pos:end="105:28">(<init pos:start="105:18" pos:end="105:18">;</init> <condition pos:start="105:20" pos:end="105:23"><expr pos:start="105:20" pos:end="105:22"><name pos:start="105:20" pos:end="105:20">n</name><operator pos:start="105:21" pos:end="105:21">&gt;</operator><literal type="number" pos:start="105:22" pos:end="105:22">0</literal></expr>;</condition> <incr pos:start="105:25" pos:end="105:27"><expr pos:start="105:25" pos:end="105:27"><name pos:start="105:25" pos:end="105:25">n</name><operator pos:start="105:26" pos:end="105:27">--</operator></expr></incr>)</control> <block pos:start="105:30" pos:end="163:13">{<block_content pos:start="107:17" pos:end="161:47">

                <expr_stmt pos:start="107:17" pos:end="107:83"><expr pos:start="107:17" pos:end="107:82"><operator pos:start="107:17" pos:end="107:17">*</operator><name pos:start="107:18" pos:end="107:20">dst</name> <operator pos:start="107:22" pos:end="107:22">=</operator> <call pos:start="107:24" pos:end="107:75"><name pos:start="107:24" pos:end="107:48">adpcm_ima_compress_sample</name><argument_list pos:start="107:49" pos:end="107:75">(<argument pos:start="107:50" pos:end="107:62"><expr pos:start="107:50" pos:end="107:62"><operator pos:start="107:50" pos:end="107:50">&amp;</operator><name pos:start="107:51" pos:end="107:62"><name pos:start="107:51" pos:end="107:51">c</name><operator pos:start="107:52" pos:end="107:53">-&gt;</operator><name pos:start="107:54" pos:end="107:59">status</name><index pos:start="107:60" pos:end="107:62">[<expr pos:start="107:61" pos:end="107:61"><literal type="number" pos:start="107:61" pos:end="107:61">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="107:65" pos:end="107:74"><expr pos:start="107:65" pos:end="107:74"><name pos:start="107:65" pos:end="107:74"><name pos:start="107:65" pos:end="107:71">samples</name><index pos:start="107:72" pos:end="107:74">[<expr pos:start="107:73" pos:end="107:73"><literal type="number" pos:start="107:73" pos:end="107:73">0</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="107:77" pos:end="107:77">&amp;</operator> <literal type="number" pos:start="107:79" pos:end="107:82">0x0F</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="109:105"><expr pos:start="109:17" pos:end="109:104"><operator pos:start="109:17" pos:end="109:17">*</operator><name pos:start="109:18" pos:end="109:20">dst</name> <operator pos:start="109:22" pos:end="109:23">|=</operator> <operator pos:start="109:25" pos:end="109:25">(</operator><call pos:start="109:26" pos:end="109:91"><name pos:start="109:26" pos:end="109:50">adpcm_ima_compress_sample</name><argument_list pos:start="109:51" pos:end="109:91">(<argument pos:start="109:52" pos:end="109:64"><expr pos:start="109:52" pos:end="109:64"><operator pos:start="109:52" pos:end="109:52">&amp;</operator><name pos:start="109:53" pos:end="109:64"><name pos:start="109:53" pos:end="109:53">c</name><operator pos:start="109:54" pos:end="109:55">-&gt;</operator><name pos:start="109:56" pos:end="109:61">status</name><index pos:start="109:62" pos:end="109:64">[<expr pos:start="109:63" pos:end="109:63"><literal type="number" pos:start="109:63" pos:end="109:63">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="109:67" pos:end="109:90"><expr pos:start="109:67" pos:end="109:90"><name pos:start="109:67" pos:end="109:90"><name pos:start="109:67" pos:end="109:73">samples</name><index pos:start="109:74" pos:end="109:90">[<expr pos:start="109:75" pos:end="109:89"><name pos:start="109:75" pos:end="109:89"><name pos:start="109:75" pos:end="109:79">avctx</name><operator pos:start="109:80" pos:end="109:81">-&gt;</operator><name pos:start="109:82" pos:end="109:89">channels</name></name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="109:93" pos:end="109:94">&lt;&lt;</operator> <literal type="number" pos:start="109:96" pos:end="109:96">4</literal><operator pos:start="109:97" pos:end="109:97">)</operator> <operator pos:start="109:99" pos:end="109:99">&amp;</operator> <literal type="number" pos:start="109:101" pos:end="109:104">0xF0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="111:17" pos:end="111:22"><expr pos:start="111:17" pos:end="111:21"><name pos:start="111:17" pos:end="111:19">dst</name><operator pos:start="111:20" pos:end="111:21">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="113:17" pos:end="113:101"><expr pos:start="113:17" pos:end="113:100"><operator pos:start="113:17" pos:end="113:17">*</operator><name pos:start="113:18" pos:end="113:20">dst</name> <operator pos:start="113:22" pos:end="113:22">=</operator> <call pos:start="113:24" pos:end="113:93"><name pos:start="113:24" pos:end="113:48">adpcm_ima_compress_sample</name><argument_list pos:start="113:49" pos:end="113:93">(<argument pos:start="113:50" pos:end="113:62"><expr pos:start="113:50" pos:end="113:62"><operator pos:start="113:50" pos:end="113:50">&amp;</operator><name pos:start="113:51" pos:end="113:62"><name pos:start="113:51" pos:end="113:51">c</name><operator pos:start="113:52" pos:end="113:53">-&gt;</operator><name pos:start="113:54" pos:end="113:59">status</name><index pos:start="113:60" pos:end="113:62">[<expr pos:start="113:61" pos:end="113:61"><literal type="number" pos:start="113:61" pos:end="113:61">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="113:65" pos:end="113:92"><expr pos:start="113:65" pos:end="113:92"><name pos:start="113:65" pos:end="113:92"><name pos:start="113:65" pos:end="113:71">samples</name><index pos:start="113:72" pos:end="113:92">[<expr pos:start="113:73" pos:end="113:91"><name pos:start="113:73" pos:end="113:87"><name pos:start="113:73" pos:end="113:77">avctx</name><operator pos:start="113:78" pos:end="113:79">-&gt;</operator><name pos:start="113:80" pos:end="113:87">channels</name></name> <operator pos:start="113:89" pos:end="113:89">*</operator> <literal type="number" pos:start="113:91" pos:end="113:91">2</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="113:95" pos:end="113:95">&amp;</operator> <literal type="number" pos:start="113:97" pos:end="113:100">0x0F</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="115:17" pos:end="115:109"><expr pos:start="115:17" pos:end="115:108"><operator pos:start="115:17" pos:end="115:17">*</operator><name pos:start="115:18" pos:end="115:20">dst</name> <operator pos:start="115:22" pos:end="115:23">|=</operator> <operator pos:start="115:25" pos:end="115:25">(</operator><call pos:start="115:26" pos:end="115:95"><name pos:start="115:26" pos:end="115:50">adpcm_ima_compress_sample</name><argument_list pos:start="115:51" pos:end="115:95">(<argument pos:start="115:52" pos:end="115:64"><expr pos:start="115:52" pos:end="115:64"><operator pos:start="115:52" pos:end="115:52">&amp;</operator><name pos:start="115:53" pos:end="115:64"><name pos:start="115:53" pos:end="115:53">c</name><operator pos:start="115:54" pos:end="115:55">-&gt;</operator><name pos:start="115:56" pos:end="115:61">status</name><index pos:start="115:62" pos:end="115:64">[<expr pos:start="115:63" pos:end="115:63"><literal type="number" pos:start="115:63" pos:end="115:63">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="115:67" pos:end="115:94"><expr pos:start="115:67" pos:end="115:94"><name pos:start="115:67" pos:end="115:94"><name pos:start="115:67" pos:end="115:73">samples</name><index pos:start="115:74" pos:end="115:94">[<expr pos:start="115:75" pos:end="115:93"><name pos:start="115:75" pos:end="115:89"><name pos:start="115:75" pos:end="115:79">avctx</name><operator pos:start="115:80" pos:end="115:81">-&gt;</operator><name pos:start="115:82" pos:end="115:89">channels</name></name> <operator pos:start="115:91" pos:end="115:91">*</operator> <literal type="number" pos:start="115:93" pos:end="115:93">3</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="115:97" pos:end="115:98">&lt;&lt;</operator> <literal type="number" pos:start="115:100" pos:end="115:100">4</literal><operator pos:start="115:101" pos:end="115:101">)</operator> <operator pos:start="115:103" pos:end="115:103">&amp;</operator> <literal type="number" pos:start="115:105" pos:end="115:108">0xF0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="117:17" pos:end="117:22"><expr pos:start="117:17" pos:end="117:21"><name pos:start="117:17" pos:end="117:19">dst</name><operator pos:start="117:20" pos:end="117:21">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="119:17" pos:end="119:101"><expr pos:start="119:17" pos:end="119:100"><operator pos:start="119:17" pos:end="119:17">*</operator><name pos:start="119:18" pos:end="119:20">dst</name> <operator pos:start="119:22" pos:end="119:22">=</operator> <call pos:start="119:24" pos:end="119:93"><name pos:start="119:24" pos:end="119:48">adpcm_ima_compress_sample</name><argument_list pos:start="119:49" pos:end="119:93">(<argument pos:start="119:50" pos:end="119:62"><expr pos:start="119:50" pos:end="119:62"><operator pos:start="119:50" pos:end="119:50">&amp;</operator><name pos:start="119:51" pos:end="119:62"><name pos:start="119:51" pos:end="119:51">c</name><operator pos:start="119:52" pos:end="119:53">-&gt;</operator><name pos:start="119:54" pos:end="119:59">status</name><index pos:start="119:60" pos:end="119:62">[<expr pos:start="119:61" pos:end="119:61"><literal type="number" pos:start="119:61" pos:end="119:61">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="119:65" pos:end="119:92"><expr pos:start="119:65" pos:end="119:92"><name pos:start="119:65" pos:end="119:92"><name pos:start="119:65" pos:end="119:71">samples</name><index pos:start="119:72" pos:end="119:92">[<expr pos:start="119:73" pos:end="119:91"><name pos:start="119:73" pos:end="119:87"><name pos:start="119:73" pos:end="119:77">avctx</name><operator pos:start="119:78" pos:end="119:79">-&gt;</operator><name pos:start="119:80" pos:end="119:87">channels</name></name> <operator pos:start="119:89" pos:end="119:89">*</operator> <literal type="number" pos:start="119:91" pos:end="119:91">4</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="119:95" pos:end="119:95">&amp;</operator> <literal type="number" pos:start="119:97" pos:end="119:100">0x0F</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="121:17" pos:end="121:109"><expr pos:start="121:17" pos:end="121:108"><operator pos:start="121:17" pos:end="121:17">*</operator><name pos:start="121:18" pos:end="121:20">dst</name> <operator pos:start="121:22" pos:end="121:23">|=</operator> <operator pos:start="121:25" pos:end="121:25">(</operator><call pos:start="121:26" pos:end="121:95"><name pos:start="121:26" pos:end="121:50">adpcm_ima_compress_sample</name><argument_list pos:start="121:51" pos:end="121:95">(<argument pos:start="121:52" pos:end="121:64"><expr pos:start="121:52" pos:end="121:64"><operator pos:start="121:52" pos:end="121:52">&amp;</operator><name pos:start="121:53" pos:end="121:64"><name pos:start="121:53" pos:end="121:53">c</name><operator pos:start="121:54" pos:end="121:55">-&gt;</operator><name pos:start="121:56" pos:end="121:61">status</name><index pos:start="121:62" pos:end="121:64">[<expr pos:start="121:63" pos:end="121:63"><literal type="number" pos:start="121:63" pos:end="121:63">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="121:67" pos:end="121:94"><expr pos:start="121:67" pos:end="121:94"><name pos:start="121:67" pos:end="121:94"><name pos:start="121:67" pos:end="121:73">samples</name><index pos:start="121:74" pos:end="121:94">[<expr pos:start="121:75" pos:end="121:93"><name pos:start="121:75" pos:end="121:89"><name pos:start="121:75" pos:end="121:79">avctx</name><operator pos:start="121:80" pos:end="121:81">-&gt;</operator><name pos:start="121:82" pos:end="121:89">channels</name></name> <operator pos:start="121:91" pos:end="121:91">*</operator> <literal type="number" pos:start="121:93" pos:end="121:93">5</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="121:97" pos:end="121:98">&lt;&lt;</operator> <literal type="number" pos:start="121:100" pos:end="121:100">4</literal><operator pos:start="121:101" pos:end="121:101">)</operator> <operator pos:start="121:103" pos:end="121:103">&amp;</operator> <literal type="number" pos:start="121:105" pos:end="121:108">0xF0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="123:17" pos:end="123:22"><expr pos:start="123:17" pos:end="123:21"><name pos:start="123:17" pos:end="123:19">dst</name><operator pos:start="123:20" pos:end="123:21">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="125:17" pos:end="125:101"><expr pos:start="125:17" pos:end="125:100"><operator pos:start="125:17" pos:end="125:17">*</operator><name pos:start="125:18" pos:end="125:20">dst</name> <operator pos:start="125:22" pos:end="125:22">=</operator> <call pos:start="125:24" pos:end="125:93"><name pos:start="125:24" pos:end="125:48">adpcm_ima_compress_sample</name><argument_list pos:start="125:49" pos:end="125:93">(<argument pos:start="125:50" pos:end="125:62"><expr pos:start="125:50" pos:end="125:62"><operator pos:start="125:50" pos:end="125:50">&amp;</operator><name pos:start="125:51" pos:end="125:62"><name pos:start="125:51" pos:end="125:51">c</name><operator pos:start="125:52" pos:end="125:53">-&gt;</operator><name pos:start="125:54" pos:end="125:59">status</name><index pos:start="125:60" pos:end="125:62">[<expr pos:start="125:61" pos:end="125:61"><literal type="number" pos:start="125:61" pos:end="125:61">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="125:65" pos:end="125:92"><expr pos:start="125:65" pos:end="125:92"><name pos:start="125:65" pos:end="125:92"><name pos:start="125:65" pos:end="125:71">samples</name><index pos:start="125:72" pos:end="125:92">[<expr pos:start="125:73" pos:end="125:91"><name pos:start="125:73" pos:end="125:87"><name pos:start="125:73" pos:end="125:77">avctx</name><operator pos:start="125:78" pos:end="125:79">-&gt;</operator><name pos:start="125:80" pos:end="125:87">channels</name></name> <operator pos:start="125:89" pos:end="125:89">*</operator> <literal type="number" pos:start="125:91" pos:end="125:91">6</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="125:95" pos:end="125:95">&amp;</operator> <literal type="number" pos:start="125:97" pos:end="125:100">0x0F</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="127:17" pos:end="127:109"><expr pos:start="127:17" pos:end="127:108"><operator pos:start="127:17" pos:end="127:17">*</operator><name pos:start="127:18" pos:end="127:20">dst</name> <operator pos:start="127:22" pos:end="127:23">|=</operator> <operator pos:start="127:25" pos:end="127:25">(</operator><call pos:start="127:26" pos:end="127:95"><name pos:start="127:26" pos:end="127:50">adpcm_ima_compress_sample</name><argument_list pos:start="127:51" pos:end="127:95">(<argument pos:start="127:52" pos:end="127:64"><expr pos:start="127:52" pos:end="127:64"><operator pos:start="127:52" pos:end="127:52">&amp;</operator><name pos:start="127:53" pos:end="127:64"><name pos:start="127:53" pos:end="127:53">c</name><operator pos:start="127:54" pos:end="127:55">-&gt;</operator><name pos:start="127:56" pos:end="127:61">status</name><index pos:start="127:62" pos:end="127:64">[<expr pos:start="127:63" pos:end="127:63"><literal type="number" pos:start="127:63" pos:end="127:63">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="127:67" pos:end="127:94"><expr pos:start="127:67" pos:end="127:94"><name pos:start="127:67" pos:end="127:94"><name pos:start="127:67" pos:end="127:73">samples</name><index pos:start="127:74" pos:end="127:94">[<expr pos:start="127:75" pos:end="127:93"><name pos:start="127:75" pos:end="127:89"><name pos:start="127:75" pos:end="127:79">avctx</name><operator pos:start="127:80" pos:end="127:81">-&gt;</operator><name pos:start="127:82" pos:end="127:89">channels</name></name> <operator pos:start="127:91" pos:end="127:91">*</operator> <literal type="number" pos:start="127:93" pos:end="127:93">7</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="127:97" pos:end="127:98">&lt;&lt;</operator> <literal type="number" pos:start="127:100" pos:end="127:100">4</literal><operator pos:start="127:101" pos:end="127:101">)</operator> <operator pos:start="127:103" pos:end="127:103">&amp;</operator> <literal type="number" pos:start="127:105" pos:end="127:108">0xF0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="129:17" pos:end="129:22"><expr pos:start="129:17" pos:end="129:21"><name pos:start="129:17" pos:end="129:19">dst</name><operator pos:start="129:20" pos:end="129:21">++</operator></expr>;</expr_stmt>

                <comment type="block" pos:start="131:17" pos:end="131:35">/* right channel */</comment>

                <if_stmt pos:start="133:17" pos:end="159:17"><if pos:start="133:17" pos:end="159:17">if <condition pos:start="133:20" pos:end="133:41">(<expr pos:start="133:21" pos:end="133:40"><name pos:start="133:21" pos:end="133:35"><name pos:start="133:21" pos:end="133:25">avctx</name><operator pos:start="133:26" pos:end="133:27">-&gt;</operator><name pos:start="133:28" pos:end="133:35">channels</name></name> <operator pos:start="133:37" pos:end="133:38">==</operator> <literal type="number" pos:start="133:40" pos:end="133:40">2</literal></expr>)</condition> <block pos:start="133:43" pos:end="159:17">{<block_content pos:start="135:21" pos:end="157:26">

                    <expr_stmt pos:start="135:21" pos:end="135:80"><expr pos:start="135:21" pos:end="135:79"><operator pos:start="135:21" pos:end="135:21">*</operator><name pos:start="135:22" pos:end="135:24">dst</name> <operator pos:start="135:26" pos:end="135:26">=</operator> <call pos:start="135:28" pos:end="135:79"><name pos:start="135:28" pos:end="135:52">adpcm_ima_compress_sample</name><argument_list pos:start="135:53" pos:end="135:79">(<argument pos:start="135:54" pos:end="135:66"><expr pos:start="135:54" pos:end="135:66"><operator pos:start="135:54" pos:end="135:54">&amp;</operator><name pos:start="135:55" pos:end="135:66"><name pos:start="135:55" pos:end="135:55">c</name><operator pos:start="135:56" pos:end="135:57">-&gt;</operator><name pos:start="135:58" pos:end="135:63">status</name><index pos:start="135:64" pos:end="135:66">[<expr pos:start="135:65" pos:end="135:65"><literal type="number" pos:start="135:65" pos:end="135:65">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="135:69" pos:end="135:78"><expr pos:start="135:69" pos:end="135:78"><name pos:start="135:69" pos:end="135:78"><name pos:start="135:69" pos:end="135:75">samples</name><index pos:start="135:76" pos:end="135:78">[<expr pos:start="135:77" pos:end="135:77"><literal type="number" pos:start="135:77" pos:end="135:77">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="137:21" pos:end="137:86"><expr pos:start="137:21" pos:end="137:85"><operator pos:start="137:21" pos:end="137:21">*</operator><name pos:start="137:22" pos:end="137:24">dst</name> <operator pos:start="137:26" pos:end="137:27">|=</operator> <call pos:start="137:29" pos:end="137:80"><name pos:start="137:29" pos:end="137:53">adpcm_ima_compress_sample</name><argument_list pos:start="137:54" pos:end="137:80">(<argument pos:start="137:55" pos:end="137:67"><expr pos:start="137:55" pos:end="137:67"><operator pos:start="137:55" pos:end="137:55">&amp;</operator><name pos:start="137:56" pos:end="137:67"><name pos:start="137:56" pos:end="137:56">c</name><operator pos:start="137:57" pos:end="137:58">-&gt;</operator><name pos:start="137:59" pos:end="137:64">status</name><index pos:start="137:65" pos:end="137:67">[<expr pos:start="137:66" pos:end="137:66"><literal type="number" pos:start="137:66" pos:end="137:66">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="137:70" pos:end="137:79"><expr pos:start="137:70" pos:end="137:79"><name pos:start="137:70" pos:end="137:79"><name pos:start="137:70" pos:end="137:76">samples</name><index pos:start="137:77" pos:end="137:79">[<expr pos:start="137:78" pos:end="137:78"><literal type="number" pos:start="137:78" pos:end="137:78">3</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="137:82" pos:end="137:83">&lt;&lt;</operator> <literal type="number" pos:start="137:85" pos:end="137:85">4</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="139:21" pos:end="139:26"><expr pos:start="139:21" pos:end="139:25"><name pos:start="139:21" pos:end="139:23">dst</name><operator pos:start="139:24" pos:end="139:25">++</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="141:21" pos:end="141:80"><expr pos:start="141:21" pos:end="141:79"><operator pos:start="141:21" pos:end="141:21">*</operator><name pos:start="141:22" pos:end="141:24">dst</name> <operator pos:start="141:26" pos:end="141:26">=</operator> <call pos:start="141:28" pos:end="141:79"><name pos:start="141:28" pos:end="141:52">adpcm_ima_compress_sample</name><argument_list pos:start="141:53" pos:end="141:79">(<argument pos:start="141:54" pos:end="141:66"><expr pos:start="141:54" pos:end="141:66"><operator pos:start="141:54" pos:end="141:54">&amp;</operator><name pos:start="141:55" pos:end="141:66"><name pos:start="141:55" pos:end="141:55">c</name><operator pos:start="141:56" pos:end="141:57">-&gt;</operator><name pos:start="141:58" pos:end="141:63">status</name><index pos:start="141:64" pos:end="141:66">[<expr pos:start="141:65" pos:end="141:65"><literal type="number" pos:start="141:65" pos:end="141:65">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="141:69" pos:end="141:78"><expr pos:start="141:69" pos:end="141:78"><name pos:start="141:69" pos:end="141:78"><name pos:start="141:69" pos:end="141:75">samples</name><index pos:start="141:76" pos:end="141:78">[<expr pos:start="141:77" pos:end="141:77"><literal type="number" pos:start="141:77" pos:end="141:77">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="143:21" pos:end="143:86"><expr pos:start="143:21" pos:end="143:85"><operator pos:start="143:21" pos:end="143:21">*</operator><name pos:start="143:22" pos:end="143:24">dst</name> <operator pos:start="143:26" pos:end="143:27">|=</operator> <call pos:start="143:29" pos:end="143:80"><name pos:start="143:29" pos:end="143:53">adpcm_ima_compress_sample</name><argument_list pos:start="143:54" pos:end="143:80">(<argument pos:start="143:55" pos:end="143:67"><expr pos:start="143:55" pos:end="143:67"><operator pos:start="143:55" pos:end="143:55">&amp;</operator><name pos:start="143:56" pos:end="143:67"><name pos:start="143:56" pos:end="143:56">c</name><operator pos:start="143:57" pos:end="143:58">-&gt;</operator><name pos:start="143:59" pos:end="143:64">status</name><index pos:start="143:65" pos:end="143:67">[<expr pos:start="143:66" pos:end="143:66"><literal type="number" pos:start="143:66" pos:end="143:66">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="143:70" pos:end="143:79"><expr pos:start="143:70" pos:end="143:79"><name pos:start="143:70" pos:end="143:79"><name pos:start="143:70" pos:end="143:76">samples</name><index pos:start="143:77" pos:end="143:79">[<expr pos:start="143:78" pos:end="143:78"><literal type="number" pos:start="143:78" pos:end="143:78">7</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="143:82" pos:end="143:83">&lt;&lt;</operator> <literal type="number" pos:start="143:85" pos:end="143:85">4</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="145:21" pos:end="145:26"><expr pos:start="145:21" pos:end="145:25"><name pos:start="145:21" pos:end="145:23">dst</name><operator pos:start="145:24" pos:end="145:25">++</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="147:21" pos:end="147:80"><expr pos:start="147:21" pos:end="147:79"><operator pos:start="147:21" pos:end="147:21">*</operator><name pos:start="147:22" pos:end="147:24">dst</name> <operator pos:start="147:26" pos:end="147:26">=</operator> <call pos:start="147:28" pos:end="147:79"><name pos:start="147:28" pos:end="147:52">adpcm_ima_compress_sample</name><argument_list pos:start="147:53" pos:end="147:79">(<argument pos:start="147:54" pos:end="147:66"><expr pos:start="147:54" pos:end="147:66"><operator pos:start="147:54" pos:end="147:54">&amp;</operator><name pos:start="147:55" pos:end="147:66"><name pos:start="147:55" pos:end="147:55">c</name><operator pos:start="147:56" pos:end="147:57">-&gt;</operator><name pos:start="147:58" pos:end="147:63">status</name><index pos:start="147:64" pos:end="147:66">[<expr pos:start="147:65" pos:end="147:65"><literal type="number" pos:start="147:65" pos:end="147:65">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="147:69" pos:end="147:78"><expr pos:start="147:69" pos:end="147:78"><name pos:start="147:69" pos:end="147:78"><name pos:start="147:69" pos:end="147:75">samples</name><index pos:start="147:76" pos:end="147:78">[<expr pos:start="147:77" pos:end="147:77"><literal type="number" pos:start="147:77" pos:end="147:77">9</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="149:21" pos:end="149:87"><expr pos:start="149:21" pos:end="149:86"><operator pos:start="149:21" pos:end="149:21">*</operator><name pos:start="149:22" pos:end="149:24">dst</name> <operator pos:start="149:26" pos:end="149:27">|=</operator> <call pos:start="149:29" pos:end="149:81"><name pos:start="149:29" pos:end="149:53">adpcm_ima_compress_sample</name><argument_list pos:start="149:54" pos:end="149:81">(<argument pos:start="149:55" pos:end="149:67"><expr pos:start="149:55" pos:end="149:67"><operator pos:start="149:55" pos:end="149:55">&amp;</operator><name pos:start="149:56" pos:end="149:67"><name pos:start="149:56" pos:end="149:56">c</name><operator pos:start="149:57" pos:end="149:58">-&gt;</operator><name pos:start="149:59" pos:end="149:64">status</name><index pos:start="149:65" pos:end="149:67">[<expr pos:start="149:66" pos:end="149:66"><literal type="number" pos:start="149:66" pos:end="149:66">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="149:70" pos:end="149:80"><expr pos:start="149:70" pos:end="149:80"><name pos:start="149:70" pos:end="149:80"><name pos:start="149:70" pos:end="149:76">samples</name><index pos:start="149:77" pos:end="149:80">[<expr pos:start="149:78" pos:end="149:79"><literal type="number" pos:start="149:78" pos:end="149:79">11</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="149:83" pos:end="149:84">&lt;&lt;</operator> <literal type="number" pos:start="149:86" pos:end="149:86">4</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="151:21" pos:end="151:26"><expr pos:start="151:21" pos:end="151:25"><name pos:start="151:21" pos:end="151:23">dst</name><operator pos:start="151:24" pos:end="151:25">++</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="153:21" pos:end="153:81"><expr pos:start="153:21" pos:end="153:80"><operator pos:start="153:21" pos:end="153:21">*</operator><name pos:start="153:22" pos:end="153:24">dst</name> <operator pos:start="153:26" pos:end="153:26">=</operator> <call pos:start="153:28" pos:end="153:80"><name pos:start="153:28" pos:end="153:52">adpcm_ima_compress_sample</name><argument_list pos:start="153:53" pos:end="153:80">(<argument pos:start="153:54" pos:end="153:66"><expr pos:start="153:54" pos:end="153:66"><operator pos:start="153:54" pos:end="153:54">&amp;</operator><name pos:start="153:55" pos:end="153:66"><name pos:start="153:55" pos:end="153:55">c</name><operator pos:start="153:56" pos:end="153:57">-&gt;</operator><name pos:start="153:58" pos:end="153:63">status</name><index pos:start="153:64" pos:end="153:66">[<expr pos:start="153:65" pos:end="153:65"><literal type="number" pos:start="153:65" pos:end="153:65">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="153:69" pos:end="153:79"><expr pos:start="153:69" pos:end="153:79"><name pos:start="153:69" pos:end="153:79"><name pos:start="153:69" pos:end="153:75">samples</name><index pos:start="153:76" pos:end="153:79">[<expr pos:start="153:77" pos:end="153:78"><literal type="number" pos:start="153:77" pos:end="153:78">13</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="155:21" pos:end="155:87"><expr pos:start="155:21" pos:end="155:86"><operator pos:start="155:21" pos:end="155:21">*</operator><name pos:start="155:22" pos:end="155:24">dst</name> <operator pos:start="155:26" pos:end="155:27">|=</operator> <call pos:start="155:29" pos:end="155:81"><name pos:start="155:29" pos:end="155:53">adpcm_ima_compress_sample</name><argument_list pos:start="155:54" pos:end="155:81">(<argument pos:start="155:55" pos:end="155:67"><expr pos:start="155:55" pos:end="155:67"><operator pos:start="155:55" pos:end="155:55">&amp;</operator><name pos:start="155:56" pos:end="155:67"><name pos:start="155:56" pos:end="155:56">c</name><operator pos:start="155:57" pos:end="155:58">-&gt;</operator><name pos:start="155:59" pos:end="155:64">status</name><index pos:start="155:65" pos:end="155:67">[<expr pos:start="155:66" pos:end="155:66"><literal type="number" pos:start="155:66" pos:end="155:66">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="155:70" pos:end="155:80"><expr pos:start="155:70" pos:end="155:80"><name pos:start="155:70" pos:end="155:80"><name pos:start="155:70" pos:end="155:76">samples</name><index pos:start="155:77" pos:end="155:80">[<expr pos:start="155:78" pos:end="155:79"><literal type="number" pos:start="155:78" pos:end="155:79">15</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="155:83" pos:end="155:84">&lt;&lt;</operator> <literal type="number" pos:start="155:86" pos:end="155:86">4</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="157:21" pos:end="157:26"><expr pos:start="157:21" pos:end="157:25"><name pos:start="157:21" pos:end="157:23">dst</name><operator pos:start="157:24" pos:end="157:25">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="161:17" pos:end="161:47"><expr pos:start="161:17" pos:end="161:46"><name pos:start="161:17" pos:end="161:23">samples</name> <operator pos:start="161:25" pos:end="161:26">+=</operator> <literal type="number" pos:start="161:28" pos:end="161:28">8</literal> <operator pos:start="161:30" pos:end="161:30">*</operator> <name pos:start="161:32" pos:end="161:46"><name pos:start="161:32" pos:end="161:36">avctx</name><operator pos:start="161:37" pos:end="161:38">-&gt;</operator><name pos:start="161:39" pos:end="161:46">channels</name></name></expr>;</expr_stmt>

            </block_content>}</block></for></block_content></block></else></if_stmt>

        <break pos:start="165:9" pos:end="165:14">break;</break>

    <case pos:start="167:5" pos:end="167:28">case <expr pos:start="167:10" pos:end="167:27"><name pos:start="167:10" pos:end="167:27">CODEC_ID_ADPCM_SWF</name></expr>:</case>

    <block pos:start="169:5" pos:end="245:5">{<block_content pos:start="171:9" pos:end="243:14">

        <decl_stmt pos:start="171:9" pos:end="171:14"><decl pos:start="171:9" pos:end="171:13"><type pos:start="171:9" pos:end="171:11"><name pos:start="171:9" pos:end="171:11">int</name></type> <name pos:start="171:13" pos:end="171:13">i</name></decl>;</decl_stmt>

        <decl_stmt pos:start="173:9" pos:end="173:25"><decl pos:start="173:9" pos:end="173:24"><type pos:start="173:9" pos:end="173:21"><name pos:start="173:9" pos:end="173:21">PutBitContext</name></type> <name pos:start="173:23" pos:end="173:24">pb</name></decl>;</decl_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:44"><expr pos:start="175:9" pos:end="175:43"><call pos:start="175:9" pos:end="175:43"><name pos:start="175:9" pos:end="175:21">init_put_bits</name><argument_list pos:start="175:22" pos:end="175:43">(<argument pos:start="175:23" pos:end="175:25"><expr pos:start="175:23" pos:end="175:25"><operator pos:start="175:23" pos:end="175:23">&amp;</operator><name pos:start="175:24" pos:end="175:25">pb</name></expr></argument>, <argument pos:start="175:28" pos:end="175:30"><expr pos:start="175:28" pos:end="175:30"><name pos:start="175:28" pos:end="175:30">dst</name></expr></argument>, <argument pos:start="175:33" pos:end="175:42"><expr pos:start="175:33" pos:end="175:42"><name pos:start="175:33" pos:end="175:40">buf_size</name><operator pos:start="175:41" pos:end="175:41">*</operator><literal type="number" pos:start="175:42" pos:end="175:42">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="179:9" pos:end="179:32"><expr pos:start="179:9" pos:end="179:31"><name pos:start="179:9" pos:end="179:9">n</name> <operator pos:start="179:11" pos:end="179:11">=</operator> <name pos:start="179:13" pos:end="179:29"><name pos:start="179:13" pos:end="179:17">avctx</name><operator pos:start="179:18" pos:end="179:19">-&gt;</operator><name pos:start="179:20" pos:end="179:29">frame_size</name></name><operator pos:start="179:30" pos:end="179:30">-</operator><literal type="number" pos:start="179:31" pos:end="179:31">1</literal></expr>;</expr_stmt>



        <comment type="line" pos:start="183:9" pos:end="183:29">//Store AdpcmCodeSize</comment>

        <expr_stmt pos:start="185:9" pos:end="185:28"><expr pos:start="185:9" pos:end="185:27"><call pos:start="185:9" pos:end="185:27"><name pos:start="185:9" pos:end="185:16">put_bits</name><argument_list pos:start="185:17" pos:end="185:27">(<argument pos:start="185:18" pos:end="185:20"><expr pos:start="185:18" pos:end="185:20"><operator pos:start="185:18" pos:end="185:18">&amp;</operator><name pos:start="185:19" pos:end="185:20">pb</name></expr></argument>, <argument pos:start="185:23" pos:end="185:23"><expr pos:start="185:23" pos:end="185:23"><literal type="number" pos:start="185:23" pos:end="185:23">2</literal></expr></argument>, <argument pos:start="185:26" pos:end="185:26"><expr pos:start="185:26" pos:end="185:26"><literal type="number" pos:start="185:26" pos:end="185:26">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                <comment type="line" pos:start="185:45" pos:end="185:74">//Set 4bits flash adpcm format</comment>



        <comment type="line" pos:start="189:9" pos:end="189:32">//Init the encoder state</comment>

        <for pos:start="191:9" pos:end="201:9">for<control pos:start="191:12" pos:end="191:40">(<init pos:start="191:13" pos:end="191:16"><expr pos:start="191:13" pos:end="191:15"><name pos:start="191:13" pos:end="191:13">i</name><operator pos:start="191:14" pos:end="191:14">=</operator><literal type="number" pos:start="191:15" pos:end="191:15">0</literal></expr>;</init> <condition pos:start="191:18" pos:end="191:35"><expr pos:start="191:18" pos:end="191:34"><name pos:start="191:18" pos:end="191:18">i</name><operator pos:start="191:19" pos:end="191:19">&lt;</operator><name pos:start="191:20" pos:end="191:34"><name pos:start="191:20" pos:end="191:24">avctx</name><operator pos:start="191:25" pos:end="191:26">-&gt;</operator><name pos:start="191:27" pos:end="191:34">channels</name></name></expr>;</condition> <incr pos:start="191:37" pos:end="191:39"><expr pos:start="191:37" pos:end="191:39"><name pos:start="191:37" pos:end="191:37">i</name><operator pos:start="191:38" pos:end="191:39">++</operator></expr></incr>)</control><block pos:start="191:41" pos:end="201:9">{<block_content pos:start="193:13" pos:end="199:64">

            <expr_stmt pos:start="193:13" pos:end="193:78"><expr pos:start="193:13" pos:end="193:77"><name pos:start="193:13" pos:end="193:24"><name pos:start="193:13" pos:end="193:13">c</name><operator pos:start="193:14" pos:end="193:15">-&gt;</operator><name pos:start="193:16" pos:end="193:21">status</name><index pos:start="193:22" pos:end="193:24">[<expr pos:start="193:23" pos:end="193:23"><name pos:start="193:23" pos:end="193:23">i</name></expr>]</index></name><operator pos:start="193:25" pos:end="193:25">.</operator><name pos:start="193:26" pos:end="193:35">step_index</name> <operator pos:start="193:37" pos:end="193:37">=</operator> <call pos:start="193:39" pos:end="193:77"><name pos:start="193:39" pos:end="193:45">av_clip</name><argument_list pos:start="193:46" pos:end="193:77">(<argument pos:start="193:47" pos:end="193:69"><expr pos:start="193:47" pos:end="193:69"><name pos:start="193:47" pos:end="193:58"><name pos:start="193:47" pos:end="193:47">c</name><operator pos:start="193:48" pos:end="193:49">-&gt;</operator><name pos:start="193:50" pos:end="193:55">status</name><index pos:start="193:56" pos:end="193:58">[<expr pos:start="193:57" pos:end="193:57"><name pos:start="193:57" pos:end="193:57">i</name></expr>]</index></name><operator pos:start="193:59" pos:end="193:59">.</operator><name pos:start="193:60" pos:end="193:69">step_index</name></expr></argument>, <argument pos:start="193:72" pos:end="193:72"><expr pos:start="193:72" pos:end="193:72"><literal type="number" pos:start="193:72" pos:end="193:72">0</literal></expr></argument>, <argument pos:start="193:75" pos:end="193:76"><expr pos:start="193:75" pos:end="193:76"><literal type="number" pos:start="193:75" pos:end="193:76">63</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="193:80" pos:end="193:109">// clip step so it fits 6 bits</comment>

            <expr_stmt pos:start="195:13" pos:end="195:51"><expr pos:start="195:13" pos:end="195:50"><call pos:start="195:13" pos:end="195:50"><name pos:start="195:13" pos:end="195:20">put_bits</name><argument_list pos:start="195:21" pos:end="195:50">(<argument pos:start="195:22" pos:end="195:24"><expr pos:start="195:22" pos:end="195:24"><operator pos:start="195:22" pos:end="195:22">&amp;</operator><name pos:start="195:23" pos:end="195:24">pb</name></expr></argument>, <argument pos:start="195:27" pos:end="195:28"><expr pos:start="195:27" pos:end="195:28"><literal type="number" pos:start="195:27" pos:end="195:28">16</literal></expr></argument>, <argument pos:start="195:31" pos:end="195:49"><expr pos:start="195:31" pos:end="195:49"><name pos:start="195:31" pos:end="195:40"><name pos:start="195:31" pos:end="195:37">samples</name><index pos:start="195:38" pos:end="195:40">[<expr pos:start="195:39" pos:end="195:39"><name pos:start="195:39" pos:end="195:39">i</name></expr>]</index></name> <operator pos:start="195:42" pos:end="195:42">&amp;</operator> <literal type="number" pos:start="195:44" pos:end="195:49">0xFFFF</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="197:13" pos:end="197:54"><expr pos:start="197:13" pos:end="197:53"><call pos:start="197:13" pos:end="197:53"><name pos:start="197:13" pos:end="197:20">put_bits</name><argument_list pos:start="197:21" pos:end="197:53">(<argument pos:start="197:22" pos:end="197:24"><expr pos:start="197:22" pos:end="197:24"><operator pos:start="197:22" pos:end="197:22">&amp;</operator><name pos:start="197:23" pos:end="197:24">pb</name></expr></argument>, <argument pos:start="197:27" pos:end="197:27"><expr pos:start="197:27" pos:end="197:27"><literal type="number" pos:start="197:27" pos:end="197:27">6</literal></expr></argument>, <argument pos:start="197:30" pos:end="197:52"><expr pos:start="197:30" pos:end="197:52"><name pos:start="197:30" pos:end="197:41"><name pos:start="197:30" pos:end="197:30">c</name><operator pos:start="197:31" pos:end="197:32">-&gt;</operator><name pos:start="197:33" pos:end="197:38">status</name><index pos:start="197:39" pos:end="197:41">[<expr pos:start="197:40" pos:end="197:40"><name pos:start="197:40" pos:end="197:40">i</name></expr>]</index></name><operator pos:start="197:42" pos:end="197:42">.</operator><name pos:start="197:43" pos:end="197:52">step_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="199:13" pos:end="199:64"><expr pos:start="199:13" pos:end="199:63"><name pos:start="199:13" pos:end="199:24"><name pos:start="199:13" pos:end="199:13">c</name><operator pos:start="199:14" pos:end="199:15">-&gt;</operator><name pos:start="199:16" pos:end="199:21">status</name><index pos:start="199:22" pos:end="199:24">[<expr pos:start="199:23" pos:end="199:23"><name pos:start="199:23" pos:end="199:23">i</name></expr>]</index></name><operator pos:start="199:25" pos:end="199:25">.</operator><name pos:start="199:26" pos:end="199:36">prev_sample</name> <operator pos:start="199:38" pos:end="199:38">=</operator> <operator pos:start="199:40" pos:end="199:40">(</operator><name pos:start="199:41" pos:end="199:46">signed</name> <name pos:start="199:48" pos:end="199:52">short</name><operator pos:start="199:53" pos:end="199:53">)</operator><name pos:start="199:54" pos:end="199:63"><name pos:start="199:54" pos:end="199:60">samples</name><index pos:start="199:61" pos:end="199:63">[<expr pos:start="199:62" pos:end="199:62"><name pos:start="199:62" pos:end="199:62">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="205:9" pos:end="237:9"><if pos:start="205:9" pos:end="225:9">if<condition pos:start="205:11" pos:end="205:30">(<expr pos:start="205:12" pos:end="205:29"><name pos:start="205:12" pos:end="205:25"><name pos:start="205:12" pos:end="205:16">avctx</name><operator pos:start="205:17" pos:end="205:18">-&gt;</operator><name pos:start="205:19" pos:end="205:25">trellis</name></name> <operator pos:start="205:27" pos:end="205:27">&gt;</operator> <literal type="number" pos:start="205:29" pos:end="205:29">0</literal></expr>)</condition> <block pos:start="205:32" pos:end="225:9">{<block_content pos:start="207:13" pos:end="223:13">

            <decl_stmt pos:start="207:13" pos:end="207:30"><decl pos:start="207:13" pos:end="207:29"><type pos:start="207:13" pos:end="207:19"><name pos:start="207:13" pos:end="207:19">uint8_t</name></type> <name pos:start="207:21" pos:end="207:29"><name pos:start="207:21" pos:end="207:23">buf</name><index pos:start="207:24" pos:end="207:26">[<expr pos:start="207:25" pos:end="207:25"><literal type="number" pos:start="207:25" pos:end="207:25">2</literal></expr>]</index><index pos:start="207:27" pos:end="207:29">[<expr pos:start="207:28" pos:end="207:28"><name pos:start="207:28" pos:end="207:28">n</name></expr>]</index></name></decl>;</decl_stmt>

            <expr_stmt pos:start="209:13" pos:end="209:79"><expr pos:start="209:13" pos:end="209:78"><call pos:start="209:13" pos:end="209:78"><name pos:start="209:13" pos:end="209:34">adpcm_compress_trellis</name><argument_list pos:start="209:35" pos:end="209:78">(<argument pos:start="209:36" pos:end="209:40"><expr pos:start="209:36" pos:end="209:40"><name pos:start="209:36" pos:end="209:40">avctx</name></expr></argument>, <argument pos:start="209:43" pos:end="209:51"><expr pos:start="209:43" pos:end="209:51"><name pos:start="209:43" pos:end="209:49">samples</name><operator pos:start="209:50" pos:end="209:50">+</operator><literal type="number" pos:start="209:51" pos:end="209:51">2</literal></expr></argument>, <argument pos:start="209:54" pos:end="209:59"><expr pos:start="209:54" pos:end="209:59"><name pos:start="209:54" pos:end="209:59"><name pos:start="209:54" pos:end="209:56">buf</name><index pos:start="209:57" pos:end="209:59">[<expr pos:start="209:58" pos:end="209:58"><literal type="number" pos:start="209:58" pos:end="209:58">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="209:62" pos:end="209:74"><expr pos:start="209:62" pos:end="209:74"><operator pos:start="209:62" pos:end="209:62">&amp;</operator><name pos:start="209:63" pos:end="209:74"><name pos:start="209:63" pos:end="209:63">c</name><operator pos:start="209:64" pos:end="209:65">-&gt;</operator><name pos:start="209:66" pos:end="209:71">status</name><index pos:start="209:72" pos:end="209:74">[<expr pos:start="209:73" pos:end="209:73"><literal type="number" pos:start="209:73" pos:end="209:73">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="209:77" pos:end="209:77"><expr pos:start="209:77" pos:end="209:77"><name pos:start="209:77" pos:end="209:77">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="211:13" pos:end="213:83"><if pos:start="211:13" pos:end="213:83">if <condition pos:start="211:16" pos:end="211:37">(<expr pos:start="211:17" pos:end="211:36"><name pos:start="211:17" pos:end="211:31"><name pos:start="211:17" pos:end="211:21">avctx</name><operator pos:start="211:22" pos:end="211:23">-&gt;</operator><name pos:start="211:24" pos:end="211:31">channels</name></name> <operator pos:start="211:33" pos:end="211:34">==</operator> <literal type="number" pos:start="211:36" pos:end="211:36">2</literal></expr>)</condition><block type="pseudo" pos:start="213:17" pos:end="213:83"><block_content pos:start="213:17" pos:end="213:83">

                <expr_stmt pos:start="213:17" pos:end="213:83"><expr pos:start="213:17" pos:end="213:82"><call pos:start="213:17" pos:end="213:82"><name pos:start="213:17" pos:end="213:38">adpcm_compress_trellis</name><argument_list pos:start="213:39" pos:end="213:82">(<argument pos:start="213:40" pos:end="213:44"><expr pos:start="213:40" pos:end="213:44"><name pos:start="213:40" pos:end="213:44">avctx</name></expr></argument>, <argument pos:start="213:47" pos:end="213:55"><expr pos:start="213:47" pos:end="213:55"><name pos:start="213:47" pos:end="213:53">samples</name><operator pos:start="213:54" pos:end="213:54">+</operator><literal type="number" pos:start="213:55" pos:end="213:55">3</literal></expr></argument>, <argument pos:start="213:58" pos:end="213:63"><expr pos:start="213:58" pos:end="213:63"><name pos:start="213:58" pos:end="213:63"><name pos:start="213:58" pos:end="213:60">buf</name><index pos:start="213:61" pos:end="213:63">[<expr pos:start="213:62" pos:end="213:62"><literal type="number" pos:start="213:62" pos:end="213:62">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="213:66" pos:end="213:78"><expr pos:start="213:66" pos:end="213:78"><operator pos:start="213:66" pos:end="213:66">&amp;</operator><name pos:start="213:67" pos:end="213:78"><name pos:start="213:67" pos:end="213:67">c</name><operator pos:start="213:68" pos:end="213:69">-&gt;</operator><name pos:start="213:70" pos:end="213:75">status</name><index pos:start="213:76" pos:end="213:78">[<expr pos:start="213:77" pos:end="213:77"><literal type="number" pos:start="213:77" pos:end="213:77">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="213:81" pos:end="213:81"><expr pos:start="213:81" pos:end="213:81"><name pos:start="213:81" pos:end="213:81">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <for pos:start="215:13" pos:end="223:13">for<control pos:start="215:16" pos:end="215:30">(<init pos:start="215:17" pos:end="215:20"><expr pos:start="215:17" pos:end="215:19"><name pos:start="215:17" pos:end="215:17">i</name><operator pos:start="215:18" pos:end="215:18">=</operator><literal type="number" pos:start="215:19" pos:end="215:19">0</literal></expr>;</init> <condition pos:start="215:22" pos:end="215:25"><expr pos:start="215:22" pos:end="215:24"><name pos:start="215:22" pos:end="215:22">i</name><operator pos:start="215:23" pos:end="215:23">&lt;</operator><name pos:start="215:24" pos:end="215:24">n</name></expr>;</condition> <incr pos:start="215:27" pos:end="215:29"><expr pos:start="215:27" pos:end="215:29"><name pos:start="215:27" pos:end="215:27">i</name><operator pos:start="215:28" pos:end="215:29">++</operator></expr></incr>)</control> <block pos:start="215:32" pos:end="223:13">{<block_content pos:start="217:17" pos:end="221:48">

                <expr_stmt pos:start="217:17" pos:end="217:44"><expr pos:start="217:17" pos:end="217:43"><call pos:start="217:17" pos:end="217:43"><name pos:start="217:17" pos:end="217:24">put_bits</name><argument_list pos:start="217:25" pos:end="217:43">(<argument pos:start="217:26" pos:end="217:28"><expr pos:start="217:26" pos:end="217:28"><operator pos:start="217:26" pos:end="217:26">&amp;</operator><name pos:start="217:27" pos:end="217:28">pb</name></expr></argument>, <argument pos:start="217:31" pos:end="217:31"><expr pos:start="217:31" pos:end="217:31"><literal type="number" pos:start="217:31" pos:end="217:31">4</literal></expr></argument>, <argument pos:start="217:34" pos:end="217:42"><expr pos:start="217:34" pos:end="217:42"><name pos:start="217:34" pos:end="217:42"><name pos:start="217:34" pos:end="217:36">buf</name><index pos:start="217:37" pos:end="217:39">[<expr pos:start="217:38" pos:end="217:38"><literal type="number" pos:start="217:38" pos:end="217:38">0</literal></expr>]</index><index pos:start="217:40" pos:end="217:42">[<expr pos:start="217:41" pos:end="217:41"><name pos:start="217:41" pos:end="217:41">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="219:17" pos:end="221:48"><if pos:start="219:17" pos:end="221:48">if <condition pos:start="219:20" pos:end="219:41">(<expr pos:start="219:21" pos:end="219:40"><name pos:start="219:21" pos:end="219:35"><name pos:start="219:21" pos:end="219:25">avctx</name><operator pos:start="219:26" pos:end="219:27">-&gt;</operator><name pos:start="219:28" pos:end="219:35">channels</name></name> <operator pos:start="219:37" pos:end="219:38">==</operator> <literal type="number" pos:start="219:40" pos:end="219:40">2</literal></expr>)</condition><block type="pseudo" pos:start="221:21" pos:end="221:48"><block_content pos:start="221:21" pos:end="221:48">

                    <expr_stmt pos:start="221:21" pos:end="221:48"><expr pos:start="221:21" pos:end="221:47"><call pos:start="221:21" pos:end="221:47"><name pos:start="221:21" pos:end="221:28">put_bits</name><argument_list pos:start="221:29" pos:end="221:47">(<argument pos:start="221:30" pos:end="221:32"><expr pos:start="221:30" pos:end="221:32"><operator pos:start="221:30" pos:end="221:30">&amp;</operator><name pos:start="221:31" pos:end="221:32">pb</name></expr></argument>, <argument pos:start="221:35" pos:end="221:35"><expr pos:start="221:35" pos:end="221:35"><literal type="number" pos:start="221:35" pos:end="221:35">4</literal></expr></argument>, <argument pos:start="221:38" pos:end="221:46"><expr pos:start="221:38" pos:end="221:46"><name pos:start="221:38" pos:end="221:46"><name pos:start="221:38" pos:end="221:40">buf</name><index pos:start="221:41" pos:end="221:43">[<expr pos:start="221:42" pos:end="221:42"><literal type="number" pos:start="221:42" pos:end="221:42">1</literal></expr>]</index><index pos:start="221:44" pos:end="221:46">[<expr pos:start="221:45" pos:end="221:45"><name pos:start="221:45" pos:end="221:45">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="225:11" pos:end="237:9">else <block pos:start="225:16" pos:end="237:9">{<block_content pos:start="227:13" pos:end="235:13">

            <for pos:start="227:13" pos:end="235:13">for <control pos:start="227:17" pos:end="227:47">(<init pos:start="227:18" pos:end="227:21"><expr pos:start="227:18" pos:end="227:20"><name pos:start="227:18" pos:end="227:18">i</name><operator pos:start="227:19" pos:end="227:19">=</operator><literal type="number" pos:start="227:20" pos:end="227:20">1</literal></expr>;</init> <condition pos:start="227:23" pos:end="227:42"><expr pos:start="227:23" pos:end="227:41"><name pos:start="227:23" pos:end="227:23">i</name><operator pos:start="227:24" pos:end="227:24">&lt;</operator><name pos:start="227:25" pos:end="227:41"><name pos:start="227:25" pos:end="227:29">avctx</name><operator pos:start="227:30" pos:end="227:31">-&gt;</operator><name pos:start="227:32" pos:end="227:41">frame_size</name></name></expr>;</condition> <incr pos:start="227:44" pos:end="227:46"><expr pos:start="227:44" pos:end="227:46"><name pos:start="227:44" pos:end="227:44">i</name><operator pos:start="227:45" pos:end="227:46">++</operator></expr></incr>)</control> <block pos:start="227:49" pos:end="235:13">{<block_content pos:start="229:17" pos:end="233:101">

                <expr_stmt pos:start="229:17" pos:end="229:109"><expr pos:start="229:17" pos:end="229:108"><call pos:start="229:17" pos:end="229:108"><name pos:start="229:17" pos:end="229:24">put_bits</name><argument_list pos:start="229:25" pos:end="229:108">(<argument pos:start="229:26" pos:end="229:28"><expr pos:start="229:26" pos:end="229:28"><operator pos:start="229:26" pos:end="229:26">&amp;</operator><name pos:start="229:27" pos:end="229:28">pb</name></expr></argument>, <argument pos:start="229:31" pos:end="229:31"><expr pos:start="229:31" pos:end="229:31"><literal type="number" pos:start="229:31" pos:end="229:31">4</literal></expr></argument>, <argument pos:start="229:34" pos:end="229:107"><expr pos:start="229:34" pos:end="229:107"><call pos:start="229:34" pos:end="229:101"><name pos:start="229:34" pos:end="229:58">adpcm_ima_compress_sample</name><argument_list pos:start="229:59" pos:end="229:101">(<argument pos:start="229:60" pos:end="229:72"><expr pos:start="229:60" pos:end="229:72"><operator pos:start="229:60" pos:end="229:60">&amp;</operator><name pos:start="229:61" pos:end="229:72"><name pos:start="229:61" pos:end="229:61">c</name><operator pos:start="229:62" pos:end="229:63">-&gt;</operator><name pos:start="229:64" pos:end="229:69">status</name><index pos:start="229:70" pos:end="229:72">[<expr pos:start="229:71" pos:end="229:71"><literal type="number" pos:start="229:71" pos:end="229:71">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="229:75" pos:end="229:100"><expr pos:start="229:75" pos:end="229:100"><name pos:start="229:75" pos:end="229:100"><name pos:start="229:75" pos:end="229:81">samples</name><index pos:start="229:82" pos:end="229:100">[<expr pos:start="229:83" pos:end="229:99"><name pos:start="229:83" pos:end="229:97"><name pos:start="229:83" pos:end="229:87">avctx</name><operator pos:start="229:88" pos:end="229:89">-&gt;</operator><name pos:start="229:90" pos:end="229:97">channels</name></name><operator pos:start="229:98" pos:end="229:98">*</operator><name pos:start="229:99" pos:end="229:99">i</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="229:103" pos:end="229:103">&amp;</operator> <literal type="number" pos:start="229:105" pos:end="229:107">0xF</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="231:17" pos:end="233:101"><if pos:start="231:17" pos:end="233:101">if <condition pos:start="231:20" pos:end="231:41">(<expr pos:start="231:21" pos:end="231:40"><name pos:start="231:21" pos:end="231:35"><name pos:start="231:21" pos:end="231:25">avctx</name><operator pos:start="231:26" pos:end="231:27">-&gt;</operator><name pos:start="231:28" pos:end="231:35">channels</name></name> <operator pos:start="231:37" pos:end="231:38">==</operator> <literal type="number" pos:start="231:40" pos:end="231:40">2</literal></expr>)</condition><block type="pseudo" pos:start="233:21" pos:end="233:101"><block_content pos:start="233:21" pos:end="233:101">

                    <expr_stmt pos:start="233:21" pos:end="233:101"><expr pos:start="233:21" pos:end="233:100"><call pos:start="233:21" pos:end="233:100"><name pos:start="233:21" pos:end="233:28">put_bits</name><argument_list pos:start="233:29" pos:end="233:100">(<argument pos:start="233:30" pos:end="233:32"><expr pos:start="233:30" pos:end="233:32"><operator pos:start="233:30" pos:end="233:30">&amp;</operator><name pos:start="233:31" pos:end="233:32">pb</name></expr></argument>, <argument pos:start="233:35" pos:end="233:35"><expr pos:start="233:35" pos:end="233:35"><literal type="number" pos:start="233:35" pos:end="233:35">4</literal></expr></argument>, <argument pos:start="233:38" pos:end="233:99"><expr pos:start="233:38" pos:end="233:99"><call pos:start="233:38" pos:end="233:93"><name pos:start="233:38" pos:end="233:62">adpcm_ima_compress_sample</name><argument_list pos:start="233:63" pos:end="233:93">(<argument pos:start="233:64" pos:end="233:76"><expr pos:start="233:64" pos:end="233:76"><operator pos:start="233:64" pos:end="233:64">&amp;</operator><name pos:start="233:65" pos:end="233:76"><name pos:start="233:65" pos:end="233:65">c</name><operator pos:start="233:66" pos:end="233:67">-&gt;</operator><name pos:start="233:68" pos:end="233:73">status</name><index pos:start="233:74" pos:end="233:76">[<expr pos:start="233:75" pos:end="233:75"><literal type="number" pos:start="233:75" pos:end="233:75">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="233:79" pos:end="233:92"><expr pos:start="233:79" pos:end="233:92"><name pos:start="233:79" pos:end="233:92"><name pos:start="233:79" pos:end="233:85">samples</name><index pos:start="233:86" pos:end="233:92">[<expr pos:start="233:87" pos:end="233:91"><literal type="number" pos:start="233:87" pos:end="233:87">2</literal><operator pos:start="233:88" pos:end="233:88">*</operator><name pos:start="233:89" pos:end="233:89">i</name><operator pos:start="233:90" pos:end="233:90">+</operator><literal type="number" pos:start="233:91" pos:end="233:91">1</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="233:95" pos:end="233:95">&amp;</operator> <literal type="number" pos:start="233:97" pos:end="233:99">0xF</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="239:9" pos:end="239:28"><expr pos:start="239:9" pos:end="239:27"><call pos:start="239:9" pos:end="239:27"><name pos:start="239:9" pos:end="239:22">flush_put_bits</name><argument_list pos:start="239:23" pos:end="239:27">(<argument pos:start="239:24" pos:end="239:26"><expr pos:start="239:24" pos:end="239:26"><operator pos:start="239:24" pos:end="239:24">&amp;</operator><name pos:start="239:25" pos:end="239:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="241:9" pos:end="241:38"><expr pos:start="241:9" pos:end="241:37"><name pos:start="241:9" pos:end="241:11">dst</name> <operator pos:start="241:13" pos:end="241:14">+=</operator> <call pos:start="241:16" pos:end="241:34"><name pos:start="241:16" pos:end="241:29">put_bits_count</name><argument_list pos:start="241:30" pos:end="241:34">(<argument pos:start="241:31" pos:end="241:33"><expr pos:start="241:31" pos:end="241:33"><operator pos:start="241:31" pos:end="241:31">&amp;</operator><name pos:start="241:32" pos:end="241:33">pb</name></expr></argument>)</argument_list></call><operator pos:start="241:35" pos:end="241:36">&gt;&gt;</operator><literal type="number" pos:start="241:37" pos:end="241:37">3</literal></expr>;</expr_stmt>

        <break pos:start="243:9" pos:end="243:14">break;</break>

    </block_content>}</block>

    <case pos:start="247:5" pos:end="247:27">case <expr pos:start="247:10" pos:end="247:26"><name pos:start="247:10" pos:end="247:26">CODEC_ID_ADPCM_MS</name></expr>:</case>

        <for pos:start="249:9" pos:end="261:9">for<control pos:start="249:12" pos:end="249:40">(<init pos:start="249:13" pos:end="249:16"><expr pos:start="249:13" pos:end="249:15"><name pos:start="249:13" pos:end="249:13">i</name><operator pos:start="249:14" pos:end="249:14">=</operator><literal type="number" pos:start="249:15" pos:end="249:15">0</literal></expr>;</init> <condition pos:start="249:18" pos:end="249:35"><expr pos:start="249:18" pos:end="249:34"><name pos:start="249:18" pos:end="249:18">i</name><operator pos:start="249:19" pos:end="249:19">&lt;</operator><name pos:start="249:20" pos:end="249:34"><name pos:start="249:20" pos:end="249:24">avctx</name><operator pos:start="249:25" pos:end="249:26">-&gt;</operator><name pos:start="249:27" pos:end="249:34">channels</name></name></expr>;</condition> <incr pos:start="249:37" pos:end="249:39"><expr pos:start="249:37" pos:end="249:39"><name pos:start="249:37" pos:end="249:37">i</name><operator pos:start="249:38" pos:end="249:39">++</operator></expr></incr>)</control><block pos:start="249:41" pos:end="261:9">{<block_content pos:start="251:13" pos:end="259:57">

            <decl_stmt pos:start="251:13" pos:end="251:28"><decl pos:start="251:13" pos:end="251:27"><type pos:start="251:13" pos:end="251:15"><name pos:start="251:13" pos:end="251:15">int</name></type> <name pos:start="251:17" pos:end="251:25">predictor</name><init pos:start="251:26" pos:end="251:27">=<expr pos:start="251:27" pos:end="251:27"><literal type="number" pos:start="251:27" pos:end="251:27">0</literal></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="255:13" pos:end="255:31"><expr pos:start="255:13" pos:end="255:30"><operator pos:start="255:13" pos:end="255:13">*</operator><name pos:start="255:14" pos:end="255:16">dst</name><operator pos:start="255:17" pos:end="255:18">++</operator> <operator pos:start="255:20" pos:end="255:20">=</operator> <name pos:start="255:22" pos:end="255:30">predictor</name></expr>;</expr_stmt>

            <expr_stmt pos:start="257:13" pos:end="257:57"><expr pos:start="257:13" pos:end="257:56"><name pos:start="257:13" pos:end="257:24"><name pos:start="257:13" pos:end="257:13">c</name><operator pos:start="257:14" pos:end="257:15">-&gt;</operator><name pos:start="257:16" pos:end="257:21">status</name><index pos:start="257:22" pos:end="257:24">[<expr pos:start="257:23" pos:end="257:23"><name pos:start="257:23" pos:end="257:23">i</name></expr>]</index></name><operator pos:start="257:25" pos:end="257:25">.</operator><name pos:start="257:26" pos:end="257:31">coeff1</name> <operator pos:start="257:33" pos:end="257:33">=</operator> <name pos:start="257:35" pos:end="257:56"><name pos:start="257:35" pos:end="257:45">AdaptCoeff1</name><index pos:start="257:46" pos:end="257:56">[<expr pos:start="257:47" pos:end="257:55"><name pos:start="257:47" pos:end="257:55">predictor</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="259:13" pos:end="259:57"><expr pos:start="259:13" pos:end="259:56"><name pos:start="259:13" pos:end="259:24"><name pos:start="259:13" pos:end="259:13">c</name><operator pos:start="259:14" pos:end="259:15">-&gt;</operator><name pos:start="259:16" pos:end="259:21">status</name><index pos:start="259:22" pos:end="259:24">[<expr pos:start="259:23" pos:end="259:23"><name pos:start="259:23" pos:end="259:23">i</name></expr>]</index></name><operator pos:start="259:25" pos:end="259:25">.</operator><name pos:start="259:26" pos:end="259:31">coeff2</name> <operator pos:start="259:33" pos:end="259:33">=</operator> <name pos:start="259:35" pos:end="259:56"><name pos:start="259:35" pos:end="259:45">AdaptCoeff2</name><index pos:start="259:46" pos:end="259:56">[<expr pos:start="259:47" pos:end="259:55"><name pos:start="259:47" pos:end="259:55">predictor</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <for pos:start="263:9" pos:end="273:9">for<control pos:start="263:12" pos:end="263:40">(<init pos:start="263:13" pos:end="263:16"><expr pos:start="263:13" pos:end="263:15"><name pos:start="263:13" pos:end="263:13">i</name><operator pos:start="263:14" pos:end="263:14">=</operator><literal type="number" pos:start="263:15" pos:end="263:15">0</literal></expr>;</init> <condition pos:start="263:18" pos:end="263:35"><expr pos:start="263:18" pos:end="263:34"><name pos:start="263:18" pos:end="263:18">i</name><operator pos:start="263:19" pos:end="263:19">&lt;</operator><name pos:start="263:20" pos:end="263:34"><name pos:start="263:20" pos:end="263:24">avctx</name><operator pos:start="263:25" pos:end="263:26">-&gt;</operator><name pos:start="263:27" pos:end="263:34">channels</name></name></expr>;</condition> <incr pos:start="263:37" pos:end="263:39"><expr pos:start="263:37" pos:end="263:39"><name pos:start="263:37" pos:end="263:37">i</name><operator pos:start="263:38" pos:end="263:39">++</operator></expr></incr>)</control><block pos:start="263:41" pos:end="273:9">{<block_content pos:start="265:13" pos:end="271:59">

            <if_stmt pos:start="265:13" pos:end="267:41"><if pos:start="265:13" pos:end="267:41">if <condition pos:start="265:16" pos:end="265:41">(<expr pos:start="265:17" pos:end="265:40"><name pos:start="265:17" pos:end="265:28"><name pos:start="265:17" pos:end="265:17">c</name><operator pos:start="265:18" pos:end="265:19">-&gt;</operator><name pos:start="265:20" pos:end="265:25">status</name><index pos:start="265:26" pos:end="265:28">[<expr pos:start="265:27" pos:end="265:27"><name pos:start="265:27" pos:end="265:27">i</name></expr>]</index></name><operator pos:start="265:29" pos:end="265:29">.</operator><name pos:start="265:30" pos:end="265:35">idelta</name> <operator pos:start="265:37" pos:end="265:37">&lt;</operator> <literal type="number" pos:start="265:39" pos:end="265:40">16</literal></expr>)</condition><block type="pseudo" pos:start="267:17" pos:end="267:41"><block_content pos:start="267:17" pos:end="267:41">

                <expr_stmt pos:start="267:17" pos:end="267:41"><expr pos:start="267:17" pos:end="267:40"><name pos:start="267:17" pos:end="267:28"><name pos:start="267:17" pos:end="267:17">c</name><operator pos:start="267:18" pos:end="267:19">-&gt;</operator><name pos:start="267:20" pos:end="267:25">status</name><index pos:start="267:26" pos:end="267:28">[<expr pos:start="267:27" pos:end="267:27"><name pos:start="267:27" pos:end="267:27">i</name></expr>]</index></name><operator pos:start="267:29" pos:end="267:29">.</operator><name pos:start="267:30" pos:end="267:35">idelta</name> <operator pos:start="267:37" pos:end="267:37">=</operator> <literal type="number" pos:start="267:39" pos:end="267:40">16</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="271:13" pos:end="271:59"><expr pos:start="271:13" pos:end="271:58"><call pos:start="271:13" pos:end="271:58"><name pos:start="271:13" pos:end="271:31">bytestream_put_le16</name><argument_list pos:start="271:32" pos:end="271:58">(<argument pos:start="271:33" pos:end="271:36"><expr pos:start="271:33" pos:end="271:36"><operator pos:start="271:33" pos:end="271:33">&amp;</operator><name pos:start="271:34" pos:end="271:36">dst</name></expr></argument>, <argument pos:start="271:39" pos:end="271:57"><expr pos:start="271:39" pos:end="271:57"><name pos:start="271:39" pos:end="271:50"><name pos:start="271:39" pos:end="271:39">c</name><operator pos:start="271:40" pos:end="271:41">-&gt;</operator><name pos:start="271:42" pos:end="271:47">status</name><index pos:start="271:48" pos:end="271:50">[<expr pos:start="271:49" pos:end="271:49"><name pos:start="271:49" pos:end="271:49">i</name></expr>]</index></name><operator pos:start="271:51" pos:end="271:51">.</operator><name pos:start="271:52" pos:end="271:57">idelta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <for pos:start="275:9" pos:end="283:9">for<control pos:start="275:12" pos:end="275:40">(<init pos:start="275:13" pos:end="275:16"><expr pos:start="275:13" pos:end="275:15"><name pos:start="275:13" pos:end="275:13">i</name><operator pos:start="275:14" pos:end="275:14">=</operator><literal type="number" pos:start="275:15" pos:end="275:15">0</literal></expr>;</init> <condition pos:start="275:18" pos:end="275:35"><expr pos:start="275:18" pos:end="275:34"><name pos:start="275:18" pos:end="275:18">i</name><operator pos:start="275:19" pos:end="275:19">&lt;</operator><name pos:start="275:20" pos:end="275:34"><name pos:start="275:20" pos:end="275:24">avctx</name><operator pos:start="275:25" pos:end="275:26">-&gt;</operator><name pos:start="275:27" pos:end="275:34">channels</name></name></expr>;</condition> <incr pos:start="275:37" pos:end="275:39"><expr pos:start="275:37" pos:end="275:39"><name pos:start="275:37" pos:end="275:37">i</name><operator pos:start="275:38" pos:end="275:39">++</operator></expr></incr>)</control><block pos:start="275:41" pos:end="283:9">{<block_content pos:start="277:13" pos:end="281:60">

            <expr_stmt pos:start="277:13" pos:end="277:45"><expr pos:start="277:13" pos:end="277:44"><name pos:start="277:13" pos:end="277:24"><name pos:start="277:13" pos:end="277:13">c</name><operator pos:start="277:14" pos:end="277:15">-&gt;</operator><name pos:start="277:16" pos:end="277:21">status</name><index pos:start="277:22" pos:end="277:24">[<expr pos:start="277:23" pos:end="277:23"><name pos:start="277:23" pos:end="277:23">i</name></expr>]</index></name><operator pos:start="277:25" pos:end="277:25">.</operator><name pos:start="277:26" pos:end="277:32">sample1</name><operator pos:start="277:33" pos:end="277:33">=</operator> <operator pos:start="277:35" pos:end="277:35">*</operator><name pos:start="277:36" pos:end="277:42">samples</name><operator pos:start="277:43" pos:end="277:44">++</operator></expr>;</expr_stmt>



            <expr_stmt pos:start="281:13" pos:end="281:60"><expr pos:start="281:13" pos:end="281:59"><call pos:start="281:13" pos:end="281:59"><name pos:start="281:13" pos:end="281:31">bytestream_put_le16</name><argument_list pos:start="281:32" pos:end="281:59">(<argument pos:start="281:33" pos:end="281:36"><expr pos:start="281:33" pos:end="281:36"><operator pos:start="281:33" pos:end="281:33">&amp;</operator><name pos:start="281:34" pos:end="281:36">dst</name></expr></argument>, <argument pos:start="281:39" pos:end="281:58"><expr pos:start="281:39" pos:end="281:58"><name pos:start="281:39" pos:end="281:50"><name pos:start="281:39" pos:end="281:39">c</name><operator pos:start="281:40" pos:end="281:41">-&gt;</operator><name pos:start="281:42" pos:end="281:47">status</name><index pos:start="281:48" pos:end="281:50">[<expr pos:start="281:49" pos:end="281:49"><name pos:start="281:49" pos:end="281:49">i</name></expr>]</index></name><operator pos:start="281:51" pos:end="281:51">.</operator><name pos:start="281:52" pos:end="281:58">sample1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <for pos:start="285:9" pos:end="293:9">for<control pos:start="285:12" pos:end="285:40">(<init pos:start="285:13" pos:end="285:16"><expr pos:start="285:13" pos:end="285:15"><name pos:start="285:13" pos:end="285:13">i</name><operator pos:start="285:14" pos:end="285:14">=</operator><literal type="number" pos:start="285:15" pos:end="285:15">0</literal></expr>;</init> <condition pos:start="285:18" pos:end="285:35"><expr pos:start="285:18" pos:end="285:34"><name pos:start="285:18" pos:end="285:18">i</name><operator pos:start="285:19" pos:end="285:19">&lt;</operator><name pos:start="285:20" pos:end="285:34"><name pos:start="285:20" pos:end="285:24">avctx</name><operator pos:start="285:25" pos:end="285:26">-&gt;</operator><name pos:start="285:27" pos:end="285:34">channels</name></name></expr>;</condition> <incr pos:start="285:37" pos:end="285:39"><expr pos:start="285:37" pos:end="285:39"><name pos:start="285:37" pos:end="285:37">i</name><operator pos:start="285:38" pos:end="285:39">++</operator></expr></incr>)</control><block pos:start="285:41" pos:end="293:9">{<block_content pos:start="287:13" pos:end="291:60">

            <expr_stmt pos:start="287:13" pos:end="287:45"><expr pos:start="287:13" pos:end="287:44"><name pos:start="287:13" pos:end="287:24"><name pos:start="287:13" pos:end="287:13">c</name><operator pos:start="287:14" pos:end="287:15">-&gt;</operator><name pos:start="287:16" pos:end="287:21">status</name><index pos:start="287:22" pos:end="287:24">[<expr pos:start="287:23" pos:end="287:23"><name pos:start="287:23" pos:end="287:23">i</name></expr>]</index></name><operator pos:start="287:25" pos:end="287:25">.</operator><name pos:start="287:26" pos:end="287:32">sample2</name><operator pos:start="287:33" pos:end="287:33">=</operator> <operator pos:start="287:35" pos:end="287:35">*</operator><name pos:start="287:36" pos:end="287:42">samples</name><operator pos:start="287:43" pos:end="287:44">++</operator></expr>;</expr_stmt>



            <expr_stmt pos:start="291:13" pos:end="291:60"><expr pos:start="291:13" pos:end="291:59"><call pos:start="291:13" pos:end="291:59"><name pos:start="291:13" pos:end="291:31">bytestream_put_le16</name><argument_list pos:start="291:32" pos:end="291:59">(<argument pos:start="291:33" pos:end="291:36"><expr pos:start="291:33" pos:end="291:36"><operator pos:start="291:33" pos:end="291:33">&amp;</operator><name pos:start="291:34" pos:end="291:36">dst</name></expr></argument>, <argument pos:start="291:39" pos:end="291:58"><expr pos:start="291:39" pos:end="291:58"><name pos:start="291:39" pos:end="291:50"><name pos:start="291:39" pos:end="291:39">c</name><operator pos:start="291:40" pos:end="291:41">-&gt;</operator><name pos:start="291:42" pos:end="291:47">status</name><index pos:start="291:48" pos:end="291:50">[<expr pos:start="291:49" pos:end="291:49"><name pos:start="291:49" pos:end="291:49">i</name></expr>]</index></name><operator pos:start="291:51" pos:end="291:51">.</operator><name pos:start="291:52" pos:end="291:58">sample2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="297:9" pos:end="337:9"><if pos:start="297:9" pos:end="325:9">if<condition pos:start="297:11" pos:end="297:30">(<expr pos:start="297:12" pos:end="297:29"><name pos:start="297:12" pos:end="297:25"><name pos:start="297:12" pos:end="297:16">avctx</name><operator pos:start="297:17" pos:end="297:18">-&gt;</operator><name pos:start="297:19" pos:end="297:25">trellis</name></name> <operator pos:start="297:27" pos:end="297:27">&gt;</operator> <literal type="number" pos:start="297:29" pos:end="297:29">0</literal></expr>)</condition> <block pos:start="297:32" pos:end="325:9">{<block_content pos:start="299:13" pos:end="323:13">

            <decl_stmt pos:start="299:13" pos:end="299:59"><decl pos:start="299:13" pos:end="299:58"><type pos:start="299:13" pos:end="299:15"><name pos:start="299:13" pos:end="299:15">int</name></type> <name pos:start="299:17" pos:end="299:17">n</name> <init pos:start="299:19" pos:end="299:58">= <expr pos:start="299:21" pos:end="299:58"><name pos:start="299:21" pos:end="299:38"><name pos:start="299:21" pos:end="299:25">avctx</name><operator pos:start="299:26" pos:end="299:27">-&gt;</operator><name pos:start="299:28" pos:end="299:38">block_align</name></name> <operator pos:start="299:40" pos:end="299:40">-</operator> <literal type="number" pos:start="299:42" pos:end="299:42">7</literal><operator pos:start="299:43" pos:end="299:43">*</operator><name pos:start="299:44" pos:end="299:58"><name pos:start="299:44" pos:end="299:48">avctx</name><operator pos:start="299:49" pos:end="299:50">-&gt;</operator><name pos:start="299:51" pos:end="299:58">channels</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="301:13" pos:end="301:30"><decl pos:start="301:13" pos:end="301:29"><type pos:start="301:13" pos:end="301:19"><name pos:start="301:13" pos:end="301:19">uint8_t</name></type> <name pos:start="301:21" pos:end="301:29"><name pos:start="301:21" pos:end="301:23">buf</name><index pos:start="301:24" pos:end="301:26">[<expr pos:start="301:25" pos:end="301:25"><literal type="number" pos:start="301:25" pos:end="301:25">2</literal></expr>]</index><index pos:start="301:27" pos:end="301:29">[<expr pos:start="301:28" pos:end="301:28"><name pos:start="301:28" pos:end="301:28">n</name></expr>]</index></name></decl>;</decl_stmt>

            <if_stmt pos:start="303:13" pos:end="323:13"><if pos:start="303:13" pos:end="313:13">if<condition pos:start="303:15" pos:end="303:36">(<expr pos:start="303:16" pos:end="303:35"><name pos:start="303:16" pos:end="303:30"><name pos:start="303:16" pos:end="303:20">avctx</name><operator pos:start="303:21" pos:end="303:22">-&gt;</operator><name pos:start="303:23" pos:end="303:30">channels</name></name> <operator pos:start="303:32" pos:end="303:33">==</operator> <literal type="number" pos:start="303:35" pos:end="303:35">1</literal></expr>)</condition> <block pos:start="303:38" pos:end="313:13">{<block_content pos:start="305:17" pos:end="311:60">

                <expr_stmt pos:start="305:17" pos:end="305:23"><expr pos:start="305:17" pos:end="305:22"><name pos:start="305:17" pos:end="305:17">n</name> <operator pos:start="305:19" pos:end="305:20">*=</operator> <literal type="number" pos:start="305:22" pos:end="305:22">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="307:17" pos:end="307:81"><expr pos:start="307:17" pos:end="307:80"><call pos:start="307:17" pos:end="307:80"><name pos:start="307:17" pos:end="307:38">adpcm_compress_trellis</name><argument_list pos:start="307:39" pos:end="307:80">(<argument pos:start="307:40" pos:end="307:44"><expr pos:start="307:40" pos:end="307:44"><name pos:start="307:40" pos:end="307:44">avctx</name></expr></argument>, <argument pos:start="307:47" pos:end="307:53"><expr pos:start="307:47" pos:end="307:53"><name pos:start="307:47" pos:end="307:53">samples</name></expr></argument>, <argument pos:start="307:56" pos:end="307:61"><expr pos:start="307:56" pos:end="307:61"><name pos:start="307:56" pos:end="307:61"><name pos:start="307:56" pos:end="307:58">buf</name><index pos:start="307:59" pos:end="307:61">[<expr pos:start="307:60" pos:end="307:60"><literal type="number" pos:start="307:60" pos:end="307:60">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="307:64" pos:end="307:76"><expr pos:start="307:64" pos:end="307:76"><operator pos:start="307:64" pos:end="307:64">&amp;</operator><name pos:start="307:65" pos:end="307:76"><name pos:start="307:65" pos:end="307:65">c</name><operator pos:start="307:66" pos:end="307:67">-&gt;</operator><name pos:start="307:68" pos:end="307:73">status</name><index pos:start="307:74" pos:end="307:76">[<expr pos:start="307:75" pos:end="307:75"><literal type="number" pos:start="307:75" pos:end="307:75">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="307:79" pos:end="307:79"><expr pos:start="307:79" pos:end="307:79"><name pos:start="307:79" pos:end="307:79">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="309:17" pos:end="311:60">for<control pos:start="309:20" pos:end="309:35">(<init pos:start="309:21" pos:end="309:24"><expr pos:start="309:21" pos:end="309:23"><name pos:start="309:21" pos:end="309:21">i</name><operator pos:start="309:22" pos:end="309:22">=</operator><literal type="number" pos:start="309:23" pos:end="309:23">0</literal></expr>;</init> <condition pos:start="309:26" pos:end="309:29"><expr pos:start="309:26" pos:end="309:28"><name pos:start="309:26" pos:end="309:26">i</name><operator pos:start="309:27" pos:end="309:27">&lt;</operator><name pos:start="309:28" pos:end="309:28">n</name></expr>;</condition> <incr pos:start="309:31" pos:end="309:34"><expr pos:start="309:31" pos:end="309:34"><name pos:start="309:31" pos:end="309:31">i</name><operator pos:start="309:32" pos:end="309:33">+=</operator><literal type="number" pos:start="309:34" pos:end="309:34">2</literal></expr></incr>)</control><block type="pseudo" pos:start="311:21" pos:end="311:60"><block_content pos:start="311:21" pos:end="311:60">

                    <expr_stmt pos:start="311:21" pos:end="311:60"><expr pos:start="311:21" pos:end="311:59"><operator pos:start="311:21" pos:end="311:21">*</operator><name pos:start="311:22" pos:end="311:24">dst</name><operator pos:start="311:25" pos:end="311:26">++</operator> <operator pos:start="311:28" pos:end="311:28">=</operator> <operator pos:start="311:30" pos:end="311:30">(</operator><name pos:start="311:31" pos:end="311:39"><name pos:start="311:31" pos:end="311:33">buf</name><index pos:start="311:34" pos:end="311:36">[<expr pos:start="311:35" pos:end="311:35"><literal type="number" pos:start="311:35" pos:end="311:35">0</literal></expr>]</index><index pos:start="311:37" pos:end="311:39">[<expr pos:start="311:38" pos:end="311:38"><name pos:start="311:38" pos:end="311:38">i</name></expr>]</index></name> <operator pos:start="311:41" pos:end="311:42">&lt;&lt;</operator> <literal type="number" pos:start="311:44" pos:end="311:44">4</literal><operator pos:start="311:45" pos:end="311:45">)</operator> <operator pos:start="311:47" pos:end="311:47">|</operator> <name pos:start="311:49" pos:end="311:59"><name pos:start="311:49" pos:end="311:51">buf</name><index pos:start="311:52" pos:end="311:54">[<expr pos:start="311:53" pos:end="311:53"><literal type="number" pos:start="311:53" pos:end="311:53">0</literal></expr>]</index><index pos:start="311:55" pos:end="311:59">[<expr pos:start="311:56" pos:end="311:58"><name pos:start="311:56" pos:end="311:56">i</name><operator pos:start="311:57" pos:end="311:57">+</operator><literal type="number" pos:start="311:58" pos:end="311:58">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></if> <else pos:start="313:15" pos:end="323:13">else <block pos:start="313:20" pos:end="323:13">{<block_content pos:start="315:17" pos:end="321:58">

                <expr_stmt pos:start="315:17" pos:end="315:81"><expr pos:start="315:17" pos:end="315:80"><call pos:start="315:17" pos:end="315:80"><name pos:start="315:17" pos:end="315:38">adpcm_compress_trellis</name><argument_list pos:start="315:39" pos:end="315:80">(<argument pos:start="315:40" pos:end="315:44"><expr pos:start="315:40" pos:end="315:44"><name pos:start="315:40" pos:end="315:44">avctx</name></expr></argument>, <argument pos:start="315:47" pos:end="315:53"><expr pos:start="315:47" pos:end="315:53"><name pos:start="315:47" pos:end="315:53">samples</name></expr></argument>, <argument pos:start="315:56" pos:end="315:61"><expr pos:start="315:56" pos:end="315:61"><name pos:start="315:56" pos:end="315:61"><name pos:start="315:56" pos:end="315:58">buf</name><index pos:start="315:59" pos:end="315:61">[<expr pos:start="315:60" pos:end="315:60"><literal type="number" pos:start="315:60" pos:end="315:60">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="315:64" pos:end="315:76"><expr pos:start="315:64" pos:end="315:76"><operator pos:start="315:64" pos:end="315:64">&amp;</operator><name pos:start="315:65" pos:end="315:76"><name pos:start="315:65" pos:end="315:65">c</name><operator pos:start="315:66" pos:end="315:67">-&gt;</operator><name pos:start="315:68" pos:end="315:73">status</name><index pos:start="315:74" pos:end="315:76">[<expr pos:start="315:75" pos:end="315:75"><literal type="number" pos:start="315:75" pos:end="315:75">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="315:79" pos:end="315:79"><expr pos:start="315:79" pos:end="315:79"><name pos:start="315:79" pos:end="315:79">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="317:17" pos:end="317:83"><expr pos:start="317:17" pos:end="317:82"><call pos:start="317:17" pos:end="317:82"><name pos:start="317:17" pos:end="317:38">adpcm_compress_trellis</name><argument_list pos:start="317:39" pos:end="317:82">(<argument pos:start="317:40" pos:end="317:44"><expr pos:start="317:40" pos:end="317:44"><name pos:start="317:40" pos:end="317:44">avctx</name></expr></argument>, <argument pos:start="317:47" pos:end="317:55"><expr pos:start="317:47" pos:end="317:55"><name pos:start="317:47" pos:end="317:53">samples</name><operator pos:start="317:54" pos:end="317:54">+</operator><literal type="number" pos:start="317:55" pos:end="317:55">1</literal></expr></argument>, <argument pos:start="317:58" pos:end="317:63"><expr pos:start="317:58" pos:end="317:63"><name pos:start="317:58" pos:end="317:63"><name pos:start="317:58" pos:end="317:60">buf</name><index pos:start="317:61" pos:end="317:63">[<expr pos:start="317:62" pos:end="317:62"><literal type="number" pos:start="317:62" pos:end="317:62">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="317:66" pos:end="317:78"><expr pos:start="317:66" pos:end="317:78"><operator pos:start="317:66" pos:end="317:66">&amp;</operator><name pos:start="317:67" pos:end="317:78"><name pos:start="317:67" pos:end="317:67">c</name><operator pos:start="317:68" pos:end="317:69">-&gt;</operator><name pos:start="317:70" pos:end="317:75">status</name><index pos:start="317:76" pos:end="317:78">[<expr pos:start="317:77" pos:end="317:77"><literal type="number" pos:start="317:77" pos:end="317:77">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="317:81" pos:end="317:81"><expr pos:start="317:81" pos:end="317:81"><name pos:start="317:81" pos:end="317:81">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="319:17" pos:end="321:58">for<control pos:start="319:20" pos:end="319:34">(<init pos:start="319:21" pos:end="319:24"><expr pos:start="319:21" pos:end="319:23"><name pos:start="319:21" pos:end="319:21">i</name><operator pos:start="319:22" pos:end="319:22">=</operator><literal type="number" pos:start="319:23" pos:end="319:23">0</literal></expr>;</init> <condition pos:start="319:26" pos:end="319:29"><expr pos:start="319:26" pos:end="319:28"><name pos:start="319:26" pos:end="319:26">i</name><operator pos:start="319:27" pos:end="319:27">&lt;</operator><name pos:start="319:28" pos:end="319:28">n</name></expr>;</condition> <incr pos:start="319:31" pos:end="319:33"><expr pos:start="319:31" pos:end="319:33"><name pos:start="319:31" pos:end="319:31">i</name><operator pos:start="319:32" pos:end="319:33">++</operator></expr></incr>)</control><block type="pseudo" pos:start="321:21" pos:end="321:58"><block_content pos:start="321:21" pos:end="321:58">

                    <expr_stmt pos:start="321:21" pos:end="321:58"><expr pos:start="321:21" pos:end="321:57"><operator pos:start="321:21" pos:end="321:21">*</operator><name pos:start="321:22" pos:end="321:24">dst</name><operator pos:start="321:25" pos:end="321:26">++</operator> <operator pos:start="321:28" pos:end="321:28">=</operator> <operator pos:start="321:30" pos:end="321:30">(</operator><name pos:start="321:31" pos:end="321:39"><name pos:start="321:31" pos:end="321:33">buf</name><index pos:start="321:34" pos:end="321:36">[<expr pos:start="321:35" pos:end="321:35"><literal type="number" pos:start="321:35" pos:end="321:35">0</literal></expr>]</index><index pos:start="321:37" pos:end="321:39">[<expr pos:start="321:38" pos:end="321:38"><name pos:start="321:38" pos:end="321:38">i</name></expr>]</index></name> <operator pos:start="321:41" pos:end="321:42">&lt;&lt;</operator> <literal type="number" pos:start="321:44" pos:end="321:44">4</literal><operator pos:start="321:45" pos:end="321:45">)</operator> <operator pos:start="321:47" pos:end="321:47">|</operator> <name pos:start="321:49" pos:end="321:57"><name pos:start="321:49" pos:end="321:51">buf</name><index pos:start="321:52" pos:end="321:54">[<expr pos:start="321:53" pos:end="321:53"><literal type="number" pos:start="321:53" pos:end="321:53">1</literal></expr>]</index><index pos:start="321:55" pos:end="321:57">[<expr pos:start="321:56" pos:end="321:56"><name pos:start="321:56" pos:end="321:56">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="325:11" pos:end="337:9">else<block type="pseudo" pos:start="327:9" pos:end="337:9"><block_content pos:start="327:9" pos:end="337:9">

        <for pos:start="327:9" pos:end="337:9">for<control pos:start="327:12" pos:end="327:59">(<init pos:start="327:13" pos:end="327:32"><expr pos:start="327:13" pos:end="327:31"><name pos:start="327:13" pos:end="327:13">i</name><operator pos:start="327:14" pos:end="327:14">=</operator><literal type="number" pos:start="327:15" pos:end="327:15">7</literal><operator pos:start="327:16" pos:end="327:16">*</operator><name pos:start="327:17" pos:end="327:31"><name pos:start="327:17" pos:end="327:21">avctx</name><operator pos:start="327:22" pos:end="327:23">-&gt;</operator><name pos:start="327:24" pos:end="327:31">channels</name></name></expr>;</init> <condition pos:start="327:34" pos:end="327:54"><expr pos:start="327:34" pos:end="327:53"><name pos:start="327:34" pos:end="327:34">i</name><operator pos:start="327:35" pos:end="327:35">&lt;</operator><name pos:start="327:36" pos:end="327:53"><name pos:start="327:36" pos:end="327:40">avctx</name><operator pos:start="327:41" pos:end="327:42">-&gt;</operator><name pos:start="327:43" pos:end="327:53">block_align</name></name></expr>;</condition> <incr pos:start="327:56" pos:end="327:58"><expr pos:start="327:56" pos:end="327:58"><name pos:start="327:56" pos:end="327:56">i</name><operator pos:start="327:57" pos:end="327:58">++</operator></expr></incr>)</control> <block pos:start="327:61" pos:end="337:9">{<block_content pos:start="329:13" pos:end="335:28">

            <decl_stmt pos:start="329:13" pos:end="329:23"><decl pos:start="329:13" pos:end="329:22"><type pos:start="329:13" pos:end="329:15"><name pos:start="329:13" pos:end="329:15">int</name></type> <name pos:start="329:17" pos:end="329:22">nibble</name></decl>;</decl_stmt>

            <expr_stmt pos:start="331:13" pos:end="331:77"><expr pos:start="331:13" pos:end="331:76"><name pos:start="331:13" pos:end="331:18">nibble</name> <operator pos:start="331:20" pos:end="331:20">=</operator> <call pos:start="331:22" pos:end="331:73"><name pos:start="331:22" pos:end="331:45">adpcm_ms_compress_sample</name><argument_list pos:start="331:46" pos:end="331:73">(<argument pos:start="331:47" pos:end="331:60"><expr pos:start="331:47" pos:end="331:60"><operator pos:start="331:47" pos:end="331:47">&amp;</operator><name pos:start="331:48" pos:end="331:60"><name pos:start="331:48" pos:end="331:48">c</name><operator pos:start="331:49" pos:end="331:50">-&gt;</operator><name pos:start="331:51" pos:end="331:56">status</name><index pos:start="331:57" pos:end="331:60">[ <expr pos:start="331:59" pos:end="331:59"><literal type="number" pos:start="331:59" pos:end="331:59">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="331:63" pos:end="331:72"><expr pos:start="331:63" pos:end="331:72"><operator pos:start="331:63" pos:end="331:63">*</operator><name pos:start="331:64" pos:end="331:70">samples</name><operator pos:start="331:71" pos:end="331:72">++</operator></expr></argument>)</argument_list></call><operator pos:start="331:74" pos:end="331:75">&lt;&lt;</operator><literal type="number" pos:start="331:76" pos:end="331:76">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="333:13" pos:end="333:74"><expr pos:start="333:13" pos:end="333:73"><name pos:start="333:13" pos:end="333:18">nibble</name><operator pos:start="333:19" pos:end="333:20">|=</operator> <call pos:start="333:22" pos:end="333:73"><name pos:start="333:22" pos:end="333:45">adpcm_ms_compress_sample</name><argument_list pos:start="333:46" pos:end="333:73">(<argument pos:start="333:47" pos:end="333:60"><expr pos:start="333:47" pos:end="333:60"><operator pos:start="333:47" pos:end="333:47">&amp;</operator><name pos:start="333:48" pos:end="333:60"><name pos:start="333:48" pos:end="333:48">c</name><operator pos:start="333:49" pos:end="333:50">-&gt;</operator><name pos:start="333:51" pos:end="333:56">status</name><index pos:start="333:57" pos:end="333:60">[<expr pos:start="333:58" pos:end="333:59"><name pos:start="333:58" pos:end="333:59">st</name></expr>]</index></name></expr></argument>, <argument pos:start="333:63" pos:end="333:72"><expr pos:start="333:63" pos:end="333:72"><operator pos:start="333:63" pos:end="333:63">*</operator><name pos:start="333:64" pos:end="333:70">samples</name><operator pos:start="333:71" pos:end="333:72">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="335:13" pos:end="335:28"><expr pos:start="335:13" pos:end="335:27"><operator pos:start="335:13" pos:end="335:13">*</operator><name pos:start="335:14" pos:end="335:16">dst</name><operator pos:start="335:17" pos:end="335:18">++</operator> <operator pos:start="335:20" pos:end="335:20">=</operator> <name pos:start="335:22" pos:end="335:27">nibble</name></expr>;</expr_stmt>

        </block_content>}</block></for></block_content></block></else></if_stmt>

        <break pos:start="339:9" pos:end="339:14">break;</break>

    <case pos:start="341:5" pos:end="341:31">case <expr pos:start="341:10" pos:end="341:30"><name pos:start="341:10" pos:end="341:30">CODEC_ID_ADPCM_YAMAHA</name></expr>:</case>

        <expr_stmt pos:start="343:9" pos:end="343:34"><expr pos:start="343:9" pos:end="343:33"><name pos:start="343:9" pos:end="343:9">n</name> <operator pos:start="343:11" pos:end="343:11">=</operator> <name pos:start="343:13" pos:end="343:29"><name pos:start="343:13" pos:end="343:17">avctx</name><operator pos:start="343:18" pos:end="343:19">-&gt;</operator><name pos:start="343:20" pos:end="343:29">frame_size</name></name> <operator pos:start="343:31" pos:end="343:31">/</operator> <literal type="number" pos:start="343:33" pos:end="343:33">2</literal></expr>;</expr_stmt>

        <if_stmt pos:start="345:9" pos:end="389:9"><if pos:start="345:9" pos:end="371:9">if<condition pos:start="345:11" pos:end="345:30">(<expr pos:start="345:12" pos:end="345:29"><name pos:start="345:12" pos:end="345:25"><name pos:start="345:12" pos:end="345:16">avctx</name><operator pos:start="345:17" pos:end="345:18">-&gt;</operator><name pos:start="345:19" pos:end="345:25">trellis</name></name> <operator pos:start="345:27" pos:end="345:27">&gt;</operator> <literal type="number" pos:start="345:29" pos:end="345:29">0</literal></expr>)</condition> <block pos:start="345:32" pos:end="371:9">{<block_content pos:start="347:13" pos:end="369:13">

            <decl_stmt pos:start="347:13" pos:end="347:32"><decl pos:start="347:13" pos:end="347:31"><type pos:start="347:13" pos:end="347:19"><name pos:start="347:13" pos:end="347:19">uint8_t</name></type> <name pos:start="347:21" pos:end="347:31"><name pos:start="347:21" pos:end="347:23">buf</name><index pos:start="347:24" pos:end="347:26">[<expr pos:start="347:25" pos:end="347:25"><literal type="number" pos:start="347:25" pos:end="347:25">2</literal></expr>]</index><index pos:start="347:27" pos:end="347:31">[<expr pos:start="347:28" pos:end="347:30"><name pos:start="347:28" pos:end="347:28">n</name><operator pos:start="347:29" pos:end="347:29">*</operator><literal type="number" pos:start="347:30" pos:end="347:30">2</literal></expr>]</index></name></decl>;</decl_stmt>

            <expr_stmt pos:start="349:13" pos:end="349:19"><expr pos:start="349:13" pos:end="349:18"><name pos:start="349:13" pos:end="349:13">n</name> <operator pos:start="349:15" pos:end="349:16">*=</operator> <literal type="number" pos:start="349:18" pos:end="349:18">2</literal></expr>;</expr_stmt>

            <if_stmt pos:start="351:13" pos:end="369:13"><if pos:start="351:13" pos:end="359:13">if<condition pos:start="351:15" pos:end="351:36">(<expr pos:start="351:16" pos:end="351:35"><name pos:start="351:16" pos:end="351:30"><name pos:start="351:16" pos:end="351:20">avctx</name><operator pos:start="351:21" pos:end="351:22">-&gt;</operator><name pos:start="351:23" pos:end="351:30">channels</name></name> <operator pos:start="351:32" pos:end="351:33">==</operator> <literal type="number" pos:start="351:35" pos:end="351:35">1</literal></expr>)</condition> <block pos:start="351:38" pos:end="359:13">{<block_content pos:start="353:17" pos:end="357:60">

                <expr_stmt pos:start="353:17" pos:end="353:81"><expr pos:start="353:17" pos:end="353:80"><call pos:start="353:17" pos:end="353:80"><name pos:start="353:17" pos:end="353:38">adpcm_compress_trellis</name><argument_list pos:start="353:39" pos:end="353:80">(<argument pos:start="353:40" pos:end="353:44"><expr pos:start="353:40" pos:end="353:44"><name pos:start="353:40" pos:end="353:44">avctx</name></expr></argument>, <argument pos:start="353:47" pos:end="353:53"><expr pos:start="353:47" pos:end="353:53"><name pos:start="353:47" pos:end="353:53">samples</name></expr></argument>, <argument pos:start="353:56" pos:end="353:61"><expr pos:start="353:56" pos:end="353:61"><name pos:start="353:56" pos:end="353:61"><name pos:start="353:56" pos:end="353:58">buf</name><index pos:start="353:59" pos:end="353:61">[<expr pos:start="353:60" pos:end="353:60"><literal type="number" pos:start="353:60" pos:end="353:60">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="353:64" pos:end="353:76"><expr pos:start="353:64" pos:end="353:76"><operator pos:start="353:64" pos:end="353:64">&amp;</operator><name pos:start="353:65" pos:end="353:76"><name pos:start="353:65" pos:end="353:65">c</name><operator pos:start="353:66" pos:end="353:67">-&gt;</operator><name pos:start="353:68" pos:end="353:73">status</name><index pos:start="353:74" pos:end="353:76">[<expr pos:start="353:75" pos:end="353:75"><literal type="number" pos:start="353:75" pos:end="353:75">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="353:79" pos:end="353:79"><expr pos:start="353:79" pos:end="353:79"><name pos:start="353:79" pos:end="353:79">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="355:17" pos:end="357:60">for<control pos:start="355:20" pos:end="355:35">(<init pos:start="355:21" pos:end="355:24"><expr pos:start="355:21" pos:end="355:23"><name pos:start="355:21" pos:end="355:21">i</name><operator pos:start="355:22" pos:end="355:22">=</operator><literal type="number" pos:start="355:23" pos:end="355:23">0</literal></expr>;</init> <condition pos:start="355:26" pos:end="355:29"><expr pos:start="355:26" pos:end="355:28"><name pos:start="355:26" pos:end="355:26">i</name><operator pos:start="355:27" pos:end="355:27">&lt;</operator><name pos:start="355:28" pos:end="355:28">n</name></expr>;</condition> <incr pos:start="355:31" pos:end="355:34"><expr pos:start="355:31" pos:end="355:34"><name pos:start="355:31" pos:end="355:31">i</name><operator pos:start="355:32" pos:end="355:33">+=</operator><literal type="number" pos:start="355:34" pos:end="355:34">2</literal></expr></incr>)</control><block type="pseudo" pos:start="357:21" pos:end="357:60"><block_content pos:start="357:21" pos:end="357:60">

                    <expr_stmt pos:start="357:21" pos:end="357:60"><expr pos:start="357:21" pos:end="357:59"><operator pos:start="357:21" pos:end="357:21">*</operator><name pos:start="357:22" pos:end="357:24">dst</name><operator pos:start="357:25" pos:end="357:26">++</operator> <operator pos:start="357:28" pos:end="357:28">=</operator> <name pos:start="357:30" pos:end="357:38"><name pos:start="357:30" pos:end="357:32">buf</name><index pos:start="357:33" pos:end="357:35">[<expr pos:start="357:34" pos:end="357:34"><literal type="number" pos:start="357:34" pos:end="357:34">0</literal></expr>]</index><index pos:start="357:36" pos:end="357:38">[<expr pos:start="357:37" pos:end="357:37"><name pos:start="357:37" pos:end="357:37">i</name></expr>]</index></name> <operator pos:start="357:40" pos:end="357:40">|</operator> <operator pos:start="357:42" pos:end="357:42">(</operator><name pos:start="357:43" pos:end="357:53"><name pos:start="357:43" pos:end="357:45">buf</name><index pos:start="357:46" pos:end="357:48">[<expr pos:start="357:47" pos:end="357:47"><literal type="number" pos:start="357:47" pos:end="357:47">0</literal></expr>]</index><index pos:start="357:49" pos:end="357:53">[<expr pos:start="357:50" pos:end="357:52"><name pos:start="357:50" pos:end="357:50">i</name><operator pos:start="357:51" pos:end="357:51">+</operator><literal type="number" pos:start="357:52" pos:end="357:52">1</literal></expr>]</index></name> <operator pos:start="357:55" pos:end="357:56">&lt;&lt;</operator> <literal type="number" pos:start="357:58" pos:end="357:58">4</literal><operator pos:start="357:59" pos:end="357:59">)</operator></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></if> <else pos:start="359:15" pos:end="369:13">else <block pos:start="359:20" pos:end="369:13">{<block_content pos:start="361:17" pos:end="367:58">

                <expr_stmt pos:start="361:17" pos:end="361:81"><expr pos:start="361:17" pos:end="361:80"><call pos:start="361:17" pos:end="361:80"><name pos:start="361:17" pos:end="361:38">adpcm_compress_trellis</name><argument_list pos:start="361:39" pos:end="361:80">(<argument pos:start="361:40" pos:end="361:44"><expr pos:start="361:40" pos:end="361:44"><name pos:start="361:40" pos:end="361:44">avctx</name></expr></argument>, <argument pos:start="361:47" pos:end="361:53"><expr pos:start="361:47" pos:end="361:53"><name pos:start="361:47" pos:end="361:53">samples</name></expr></argument>, <argument pos:start="361:56" pos:end="361:61"><expr pos:start="361:56" pos:end="361:61"><name pos:start="361:56" pos:end="361:61"><name pos:start="361:56" pos:end="361:58">buf</name><index pos:start="361:59" pos:end="361:61">[<expr pos:start="361:60" pos:end="361:60"><literal type="number" pos:start="361:60" pos:end="361:60">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="361:64" pos:end="361:76"><expr pos:start="361:64" pos:end="361:76"><operator pos:start="361:64" pos:end="361:64">&amp;</operator><name pos:start="361:65" pos:end="361:76"><name pos:start="361:65" pos:end="361:65">c</name><operator pos:start="361:66" pos:end="361:67">-&gt;</operator><name pos:start="361:68" pos:end="361:73">status</name><index pos:start="361:74" pos:end="361:76">[<expr pos:start="361:75" pos:end="361:75"><literal type="number" pos:start="361:75" pos:end="361:75">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="361:79" pos:end="361:79"><expr pos:start="361:79" pos:end="361:79"><name pos:start="361:79" pos:end="361:79">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="363:17" pos:end="363:83"><expr pos:start="363:17" pos:end="363:82"><call pos:start="363:17" pos:end="363:82"><name pos:start="363:17" pos:end="363:38">adpcm_compress_trellis</name><argument_list pos:start="363:39" pos:end="363:82">(<argument pos:start="363:40" pos:end="363:44"><expr pos:start="363:40" pos:end="363:44"><name pos:start="363:40" pos:end="363:44">avctx</name></expr></argument>, <argument pos:start="363:47" pos:end="363:55"><expr pos:start="363:47" pos:end="363:55"><name pos:start="363:47" pos:end="363:53">samples</name><operator pos:start="363:54" pos:end="363:54">+</operator><literal type="number" pos:start="363:55" pos:end="363:55">1</literal></expr></argument>, <argument pos:start="363:58" pos:end="363:63"><expr pos:start="363:58" pos:end="363:63"><name pos:start="363:58" pos:end="363:63"><name pos:start="363:58" pos:end="363:60">buf</name><index pos:start="363:61" pos:end="363:63">[<expr pos:start="363:62" pos:end="363:62"><literal type="number" pos:start="363:62" pos:end="363:62">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="363:66" pos:end="363:78"><expr pos:start="363:66" pos:end="363:78"><operator pos:start="363:66" pos:end="363:66">&amp;</operator><name pos:start="363:67" pos:end="363:78"><name pos:start="363:67" pos:end="363:67">c</name><operator pos:start="363:68" pos:end="363:69">-&gt;</operator><name pos:start="363:70" pos:end="363:75">status</name><index pos:start="363:76" pos:end="363:78">[<expr pos:start="363:77" pos:end="363:77"><literal type="number" pos:start="363:77" pos:end="363:77">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="363:81" pos:end="363:81"><expr pos:start="363:81" pos:end="363:81"><name pos:start="363:81" pos:end="363:81">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="365:17" pos:end="367:58">for<control pos:start="365:20" pos:end="365:34">(<init pos:start="365:21" pos:end="365:24"><expr pos:start="365:21" pos:end="365:23"><name pos:start="365:21" pos:end="365:21">i</name><operator pos:start="365:22" pos:end="365:22">=</operator><literal type="number" pos:start="365:23" pos:end="365:23">0</literal></expr>;</init> <condition pos:start="365:26" pos:end="365:29"><expr pos:start="365:26" pos:end="365:28"><name pos:start="365:26" pos:end="365:26">i</name><operator pos:start="365:27" pos:end="365:27">&lt;</operator><name pos:start="365:28" pos:end="365:28">n</name></expr>;</condition> <incr pos:start="365:31" pos:end="365:33"><expr pos:start="365:31" pos:end="365:33"><name pos:start="365:31" pos:end="365:31">i</name><operator pos:start="365:32" pos:end="365:33">++</operator></expr></incr>)</control><block type="pseudo" pos:start="367:21" pos:end="367:58"><block_content pos:start="367:21" pos:end="367:58">

                    <expr_stmt pos:start="367:21" pos:end="367:58"><expr pos:start="367:21" pos:end="367:57"><operator pos:start="367:21" pos:end="367:21">*</operator><name pos:start="367:22" pos:end="367:24">dst</name><operator pos:start="367:25" pos:end="367:26">++</operator> <operator pos:start="367:28" pos:end="367:28">=</operator> <name pos:start="367:30" pos:end="367:38"><name pos:start="367:30" pos:end="367:32">buf</name><index pos:start="367:33" pos:end="367:35">[<expr pos:start="367:34" pos:end="367:34"><literal type="number" pos:start="367:34" pos:end="367:34">0</literal></expr>]</index><index pos:start="367:36" pos:end="367:38">[<expr pos:start="367:37" pos:end="367:37"><name pos:start="367:37" pos:end="367:37">i</name></expr>]</index></name> <operator pos:start="367:40" pos:end="367:40">|</operator> <operator pos:start="367:42" pos:end="367:42">(</operator><name pos:start="367:43" pos:end="367:51"><name pos:start="367:43" pos:end="367:45">buf</name><index pos:start="367:46" pos:end="367:48">[<expr pos:start="367:47" pos:end="367:47"><literal type="number" pos:start="367:47" pos:end="367:47">1</literal></expr>]</index><index pos:start="367:49" pos:end="367:51">[<expr pos:start="367:50" pos:end="367:50"><name pos:start="367:50" pos:end="367:50">i</name></expr>]</index></name> <operator pos:start="367:53" pos:end="367:54">&lt;&lt;</operator> <literal type="number" pos:start="367:56" pos:end="367:56">4</literal><operator pos:start="367:57" pos:end="367:57">)</operator></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="371:11" pos:end="389:9">else<block type="pseudo" pos:start="373:9" pos:end="389:9"><block_content pos:start="373:9" pos:end="389:9">

        <for pos:start="373:9" pos:end="389:9">for <control pos:start="373:13" pos:end="373:24">(<init pos:start="373:14" pos:end="373:14">;</init> <condition pos:start="373:16" pos:end="373:19"><expr pos:start="373:16" pos:end="373:18"><name pos:start="373:16" pos:end="373:16">n</name><operator pos:start="373:17" pos:end="373:17">&gt;</operator><literal type="number" pos:start="373:18" pos:end="373:18">0</literal></expr>;</condition> <incr pos:start="373:21" pos:end="373:23"><expr pos:start="373:21" pos:end="373:23"><name pos:start="373:21" pos:end="373:21">n</name><operator pos:start="373:22" pos:end="373:23">--</operator></expr></incr>)</control> <block pos:start="373:26" pos:end="389:9">{<block_content pos:start="375:13" pos:end="387:43">

            <for pos:start="375:13" pos:end="385:13">for<control pos:start="375:16" pos:end="375:48">(<init pos:start="375:17" pos:end="375:22"><expr pos:start="375:17" pos:end="375:21"><name pos:start="375:17" pos:end="375:17">i</name> <operator pos:start="375:19" pos:end="375:19">=</operator> <literal type="number" pos:start="375:21" pos:end="375:21">0</literal></expr>;</init> <condition pos:start="375:24" pos:end="375:43"><expr pos:start="375:24" pos:end="375:42"><name pos:start="375:24" pos:end="375:24">i</name> <operator pos:start="375:26" pos:end="375:26">&lt;</operator> <name pos:start="375:28" pos:end="375:42"><name pos:start="375:28" pos:end="375:32">avctx</name><operator pos:start="375:33" pos:end="375:34">-&gt;</operator><name pos:start="375:35" pos:end="375:42">channels</name></name></expr>;</condition> <incr pos:start="375:45" pos:end="375:47"><expr pos:start="375:45" pos:end="375:47"><name pos:start="375:45" pos:end="375:45">i</name><operator pos:start="375:46" pos:end="375:47">++</operator></expr></incr>)</control> <block pos:start="375:50" pos:end="385:13">{<block_content pos:start="377:17" pos:end="383:32">

                <decl_stmt pos:start="377:17" pos:end="377:27"><decl pos:start="377:17" pos:end="377:26"><type pos:start="377:17" pos:end="377:19"><name pos:start="377:17" pos:end="377:19">int</name></type> <name pos:start="377:21" pos:end="377:26">nibble</name></decl>;</decl_stmt>

                <expr_stmt pos:start="379:17" pos:end="379:82"><expr pos:start="379:17" pos:end="379:81"><name pos:start="379:17" pos:end="379:22">nibble</name>  <operator pos:start="379:25" pos:end="379:25">=</operator> <call pos:start="379:27" pos:end="379:81"><name pos:start="379:27" pos:end="379:54">adpcm_yamaha_compress_sample</name><argument_list pos:start="379:55" pos:end="379:81">(<argument pos:start="379:56" pos:end="379:68"><expr pos:start="379:56" pos:end="379:68"><operator pos:start="379:56" pos:end="379:56">&amp;</operator><name pos:start="379:57" pos:end="379:68"><name pos:start="379:57" pos:end="379:57">c</name><operator pos:start="379:58" pos:end="379:59">-&gt;</operator><name pos:start="379:60" pos:end="379:65">status</name><index pos:start="379:66" pos:end="379:68">[<expr pos:start="379:67" pos:end="379:67"><name pos:start="379:67" pos:end="379:67">i</name></expr>]</index></name></expr></argument>, <argument pos:start="379:71" pos:end="379:80"><expr pos:start="379:71" pos:end="379:80"><name pos:start="379:71" pos:end="379:80"><name pos:start="379:71" pos:end="379:77">samples</name><index pos:start="379:78" pos:end="379:80">[<expr pos:start="379:79" pos:end="379:79"><name pos:start="379:79" pos:end="379:79">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="381:17" pos:end="381:103"><expr pos:start="381:17" pos:end="381:102"><name pos:start="381:17" pos:end="381:22">nibble</name> <operator pos:start="381:24" pos:end="381:25">|=</operator> <call pos:start="381:27" pos:end="381:97"><name pos:start="381:27" pos:end="381:54">adpcm_yamaha_compress_sample</name><argument_list pos:start="381:55" pos:end="381:97">(<argument pos:start="381:56" pos:end="381:68"><expr pos:start="381:56" pos:end="381:68"><operator pos:start="381:56" pos:end="381:56">&amp;</operator><name pos:start="381:57" pos:end="381:68"><name pos:start="381:57" pos:end="381:57">c</name><operator pos:start="381:58" pos:end="381:59">-&gt;</operator><name pos:start="381:60" pos:end="381:65">status</name><index pos:start="381:66" pos:end="381:68">[<expr pos:start="381:67" pos:end="381:67"><name pos:start="381:67" pos:end="381:67">i</name></expr>]</index></name></expr></argument>, <argument pos:start="381:71" pos:end="381:96"><expr pos:start="381:71" pos:end="381:96"><name pos:start="381:71" pos:end="381:96"><name pos:start="381:71" pos:end="381:77">samples</name><index pos:start="381:78" pos:end="381:96">[<expr pos:start="381:79" pos:end="381:95"><name pos:start="381:79" pos:end="381:79">i</name><operator pos:start="381:80" pos:end="381:80">+</operator><name pos:start="381:81" pos:end="381:95"><name pos:start="381:81" pos:end="381:85">avctx</name><operator pos:start="381:86" pos:end="381:87">-&gt;</operator><name pos:start="381:88" pos:end="381:95">channels</name></name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="381:99" pos:end="381:100">&lt;&lt;</operator> <literal type="number" pos:start="381:102" pos:end="381:102">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="383:17" pos:end="383:32"><expr pos:start="383:17" pos:end="383:31"><operator pos:start="383:17" pos:end="383:17">*</operator><name pos:start="383:18" pos:end="383:20">dst</name><operator pos:start="383:21" pos:end="383:22">++</operator> <operator pos:start="383:24" pos:end="383:24">=</operator> <name pos:start="383:26" pos:end="383:31">nibble</name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="387:13" pos:end="387:43"><expr pos:start="387:13" pos:end="387:42"><name pos:start="387:13" pos:end="387:19">samples</name> <operator pos:start="387:21" pos:end="387:22">+=</operator> <literal type="number" pos:start="387:24" pos:end="387:24">2</literal> <operator pos:start="387:26" pos:end="387:26">*</operator> <name pos:start="387:28" pos:end="387:42"><name pos:start="387:28" pos:end="387:32">avctx</name><operator pos:start="387:33" pos:end="387:34">-&gt;</operator><name pos:start="387:35" pos:end="387:42">channels</name></name></expr>;</expr_stmt>

        </block_content>}</block></for></block_content></block></else></if_stmt>

        <break pos:start="391:9" pos:end="391:14">break;</break>

    <default pos:start="393:5" pos:end="393:12">default:</default>

        <return pos:start="395:9" pos:end="395:18">return <expr pos:start="395:16" pos:end="395:17"><operator pos:start="395:16" pos:end="395:16">-</operator><literal type="number" pos:start="395:17" pos:end="395:17">1</literal></expr>;</return>

    </block_content>}</block></switch>

    <return pos:start="399:5" pos:end="399:23">return <expr pos:start="399:12" pos:end="399:22"><name pos:start="399:12" pos:end="399:14">dst</name> <operator pos:start="399:16" pos:end="399:16">-</operator> <name pos:start="399:18" pos:end="399:22">frame</name></expr>;</return>

</block_content>}</block></function>
</unit>
