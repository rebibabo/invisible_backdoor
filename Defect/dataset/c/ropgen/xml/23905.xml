<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23905.c" pos:tabs="8"><function pos:start="1:1" pos:end="277:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:35">svq3_decode_init</name><parameter_list pos:start="1:36" pos:end="1:58">(<parameter pos:start="1:37" pos:end="1:57"><decl pos:start="1:37" pos:end="1:57"><type pos:start="1:37" pos:end="1:52"><name pos:start="1:37" pos:end="1:50">AVCodecContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:57">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="277:1">{<block_content pos:start="5:5" pos:end="275:13">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">SVQ3Context</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:21">svq3</name> <init pos:start="5:23" pos:end="5:40">= <expr pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:29">avctx</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">H264Context</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">h</name> <init pos:start="7:20" pos:end="7:29">= <expr pos:start="7:22" pos:end="7:29"><operator pos:start="7:22" pos:end="7:22">&amp;</operator><name pos:start="7:23" pos:end="7:29"><name pos:start="7:23" pos:end="7:26">svq3</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:29">h</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">MpegEncContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:21">s</name> <init pos:start="9:23" pos:end="9:29">= <expr pos:start="9:25" pos:end="9:29"><operator pos:start="9:25" pos:end="9:25">&amp;</operator><name pos:start="9:26" pos:end="9:29"><name pos:start="9:26" pos:end="9:26">h</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:29">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">m</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:17">char</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:28">extradata</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:33"><decl pos:start="15:5" pos:end="15:32"><type pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:17">char</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:32">extradata_end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:12">unsigned</name> <name pos:start="17:14" pos:end="17:16">int</name></type> <name pos:start="17:18" pos:end="17:21">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:25"><decl pos:start="19:5" pos:end="19:24"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:20">marker_found</name> <init pos:start="19:22" pos:end="19:24">= <expr pos:start="19:24" pos:end="19:24"><literal type="number" pos:start="19:24" pos:end="19:24">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="25:18"><if pos:start="23:5" pos:end="25:18">if <condition pos:start="23:8" pos:end="23:39">(<expr pos:start="23:9" pos:end="23:38"><call pos:start="23:9" pos:end="23:34"><name pos:start="23:9" pos:end="23:27">ff_h264_decode_init</name><argument_list pos:start="23:28" pos:end="23:34">(<argument pos:start="23:29" pos:end="23:33"><expr pos:start="23:29" pos:end="23:33"><name pos:start="23:29" pos:end="23:33">avctx</name></expr></argument>)</argument_list></call> <operator pos:start="23:36" pos:end="23:36">&lt;</operator> <literal type="number" pos:start="23:38" pos:end="23:38">0</literal></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:18"><block_content pos:start="25:9" pos:end="25:18">

        <return pos:start="25:9" pos:end="25:18">return <expr pos:start="25:16" pos:end="25:17"><operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:29"><expr pos:start="29:5" pos:end="29:28"><name pos:start="29:5" pos:end="29:12"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:12">flags</name></name>  <operator pos:start="29:15" pos:end="29:15">=</operator> <name pos:start="29:17" pos:end="29:28"><name pos:start="29:17" pos:end="29:21">avctx</name><operator pos:start="29:22" pos:end="29:23">-&gt;</operator><name pos:start="29:24" pos:end="29:28">flags</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:30"><expr pos:start="31:5" pos:end="31:29"><name pos:start="31:5" pos:end="31:13"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:13">flags2</name></name> <operator pos:start="31:15" pos:end="31:15">=</operator> <name pos:start="31:17" pos:end="31:29"><name pos:start="31:17" pos:end="31:21">avctx</name><operator pos:start="31:22" pos:end="31:23">-&gt;</operator><name pos:start="31:24" pos:end="31:29">flags2</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:27"><expr pos:start="33:5" pos:end="33:26"><name pos:start="33:5" pos:end="33:22"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:22">unrestricted_mv</name></name> <operator pos:start="33:24" pos:end="33:24">=</operator> <literal type="number" pos:start="33:26" pos:end="33:26">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:20"><expr pos:start="35:5" pos:end="35:19"><name pos:start="35:5" pos:end="35:17"><name pos:start="35:5" pos:end="35:5">h</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:17">is_complex</name></name><operator pos:start="35:18" pos:end="35:18">=</operator><literal type="number" pos:start="35:19" pos:end="35:19">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:33"><expr pos:start="37:5" pos:end="37:32"><name pos:start="37:5" pos:end="37:28"><name pos:start="37:5" pos:end="37:5">h</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:10">sps</name><operator pos:start="37:11" pos:end="37:11">.</operator><name pos:start="37:12" pos:end="37:28">chroma_format_idc</name></name> <operator pos:start="37:30" pos:end="37:30">=</operator> <literal type="number" pos:start="37:32" pos:end="37:32">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:47"><expr pos:start="39:5" pos:end="39:46"><name pos:start="39:5" pos:end="39:18"><name pos:start="39:5" pos:end="39:9">avctx</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:18">pix_fmt</name></name> <operator pos:start="39:20" pos:end="39:20">=</operator> <name pos:start="39:22" pos:end="39:46"><name pos:start="39:22" pos:end="39:26">avctx</name><operator pos:start="39:27" pos:end="39:28">-&gt;</operator><name pos:start="39:29" pos:end="39:33">codec</name><operator pos:start="39:34" pos:end="39:35">-&gt;</operator><name pos:start="39:36" pos:end="39:43">pix_fmts</name><index pos:start="39:44" pos:end="39:46">[<expr pos:start="39:45" pos:end="39:45"><literal type="number" pos:start="39:45" pos:end="39:45">0</literal></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="43:5" pos:end="271:5"><if pos:start="43:5" pos:end="271:5">if <condition pos:start="43:8" pos:end="43:32">(<expr pos:start="43:9" pos:end="43:31"><operator pos:start="43:9" pos:end="43:9">!</operator><name pos:start="43:10" pos:end="43:31"><name pos:start="43:10" pos:end="43:10">s</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:31">context_initialized</name></name></expr>)</condition> <block pos:start="43:34" pos:end="271:5">{<block_content pos:start="45:9" pos:end="269:9">

        <expr_stmt pos:start="45:9" pos:end="45:46"><expr pos:start="45:9" pos:end="45:45"><name pos:start="45:9" pos:end="45:23"><name pos:start="45:9" pos:end="45:9">h</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:20">chroma_qp</name><index pos:start="45:21" pos:end="45:23">[<expr pos:start="45:22" pos:end="45:22"><literal type="number" pos:start="45:22" pos:end="45:22">0</literal></expr>]</index></name> <operator pos:start="45:25" pos:end="45:25">=</operator> <name pos:start="45:27" pos:end="45:41"><name pos:start="45:27" pos:end="45:27">h</name><operator pos:start="45:28" pos:end="45:29">-&gt;</operator><name pos:start="45:30" pos:end="45:38">chroma_qp</name><index pos:start="45:39" pos:end="45:41">[<expr pos:start="45:40" pos:end="45:40"><literal type="number" pos:start="45:40" pos:end="45:40">1</literal></expr>]</index></name> <operator pos:start="45:43" pos:end="45:43">=</operator> <literal type="number" pos:start="45:45" pos:end="45:45">4</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="49:9" pos:end="49:32"><expr pos:start="49:9" pos:end="49:31"><name pos:start="49:9" pos:end="49:26"><name pos:start="49:9" pos:end="49:12">svq3</name><operator pos:start="49:13" pos:end="49:14">-&gt;</operator><name pos:start="49:15" pos:end="49:26">halfpel_flag</name></name>  <operator pos:start="49:29" pos:end="49:29">=</operator> <literal type="number" pos:start="49:31" pos:end="49:31">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:32"><expr pos:start="51:9" pos:end="51:31"><name pos:start="51:9" pos:end="51:27"><name pos:start="51:9" pos:end="51:12">svq3</name><operator pos:start="51:13" pos:end="51:14">-&gt;</operator><name pos:start="51:15" pos:end="51:27">thirdpel_flag</name></name> <operator pos:start="51:29" pos:end="51:29">=</operator> <literal type="number" pos:start="51:31" pos:end="51:31">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:32"><expr pos:start="53:9" pos:end="53:31"><name pos:start="53:9" pos:end="53:26"><name pos:start="53:9" pos:end="53:12">svq3</name><operator pos:start="53:13" pos:end="53:14">-&gt;</operator><name pos:start="53:15" pos:end="53:26">unknown_flag</name></name>  <operator pos:start="53:29" pos:end="53:29">=</operator> <literal type="number" pos:start="53:31" pos:end="53:31">0</literal></expr>;</expr_stmt>





        <comment type="block" pos:start="59:9" pos:end="59:58">/* prowl for the "SEQH" marker in the extradata */</comment>

        <expr_stmt pos:start="61:9" pos:end="61:54"><expr pos:start="61:9" pos:end="61:53"><name pos:start="61:9" pos:end="61:17">extradata</name> <operator pos:start="61:19" pos:end="61:19">=</operator> <operator pos:start="61:21" pos:end="61:21">(</operator><name pos:start="61:22" pos:end="61:29">unsigned</name> <name pos:start="61:31" pos:end="61:34">char</name> <operator pos:start="61:36" pos:end="61:36">*</operator><operator pos:start="61:37" pos:end="61:37">)</operator><name pos:start="61:38" pos:end="61:53"><name pos:start="61:38" pos:end="61:42">avctx</name><operator pos:start="61:43" pos:end="61:44">-&gt;</operator><name pos:start="61:45" pos:end="61:53">extradata</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:65"><expr pos:start="63:9" pos:end="63:64"><name pos:start="63:9" pos:end="63:21">extradata_end</name> <operator pos:start="63:23" pos:end="63:23">=</operator> <name pos:start="63:25" pos:end="63:40"><name pos:start="63:25" pos:end="63:29">avctx</name><operator pos:start="63:30" pos:end="63:31">-&gt;</operator><name pos:start="63:32" pos:end="63:40">extradata</name></name> <operator pos:start="63:42" pos:end="63:42">+</operator> <name pos:start="63:44" pos:end="63:64"><name pos:start="63:44" pos:end="63:48">avctx</name><operator pos:start="63:49" pos:end="63:50">-&gt;</operator><name pos:start="63:51" pos:end="63:64">extradata_size</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="81:9"><if pos:start="65:9" pos:end="81:9">if <condition pos:start="65:12" pos:end="65:22">(<expr pos:start="65:13" pos:end="65:21"><name pos:start="65:13" pos:end="65:21">extradata</name></expr>)</condition> <block pos:start="65:24" pos:end="81:9">{<block_content pos:start="67:13" pos:end="79:13">

            <for pos:start="67:13" pos:end="79:13">for <control pos:start="67:17" pos:end="67:59">(<init pos:start="67:18" pos:end="67:23"><expr pos:start="67:18" pos:end="67:22"><name pos:start="67:18" pos:end="67:18">m</name> <operator pos:start="67:20" pos:end="67:20">=</operator> <literal type="number" pos:start="67:22" pos:end="67:22">0</literal></expr>;</init> <condition pos:start="67:25" pos:end="67:54"><expr pos:start="67:25" pos:end="67:53"><name pos:start="67:25" pos:end="67:25">m</name> <operator pos:start="67:27" pos:end="67:27">+</operator> <literal type="number" pos:start="67:29" pos:end="67:29">8</literal> <operator pos:start="67:31" pos:end="67:31">&lt;</operator> <name pos:start="67:33" pos:end="67:53"><name pos:start="67:33" pos:end="67:37">avctx</name><operator pos:start="67:38" pos:end="67:39">-&gt;</operator><name pos:start="67:40" pos:end="67:53">extradata_size</name></name></expr>;</condition> <incr pos:start="67:56" pos:end="67:58"><expr pos:start="67:56" pos:end="67:58"><name pos:start="67:56" pos:end="67:56">m</name><operator pos:start="67:57" pos:end="67:58">++</operator></expr></incr>)</control> <block pos:start="67:61" pos:end="79:13">{<block_content pos:start="69:17" pos:end="77:28">

                <if_stmt pos:start="69:17" pos:end="75:17"><if pos:start="69:17" pos:end="75:17">if <condition pos:start="69:20" pos:end="69:50">(<expr pos:start="69:21" pos:end="69:49"><operator pos:start="69:21" pos:end="69:21">!</operator><call pos:start="69:22" pos:end="69:49"><name pos:start="69:22" pos:end="69:27">memcmp</name><argument_list pos:start="69:28" pos:end="69:49">(<argument pos:start="69:29" pos:end="69:37"><expr pos:start="69:29" pos:end="69:37"><name pos:start="69:29" pos:end="69:37">extradata</name></expr></argument>, <argument pos:start="69:40" pos:end="69:45"><expr pos:start="69:40" pos:end="69:45"><literal type="string" pos:start="69:40" pos:end="69:45">"SEQH"</literal></expr></argument>, <argument pos:start="69:48" pos:end="69:48"><expr pos:start="69:48" pos:end="69:48"><literal type="number" pos:start="69:48" pos:end="69:48">4</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="69:52" pos:end="75:17">{<block_content pos:start="71:21" pos:end="73:26">

                    <expr_stmt pos:start="71:21" pos:end="71:37"><expr pos:start="71:21" pos:end="71:36"><name pos:start="71:21" pos:end="71:32">marker_found</name> <operator pos:start="71:34" pos:end="71:34">=</operator> <literal type="number" pos:start="71:36" pos:end="71:36">1</literal></expr>;</expr_stmt>

                    <break pos:start="73:21" pos:end="73:26">break;</break>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="77:17" pos:end="77:28"><expr pos:start="77:17" pos:end="77:27"><name pos:start="77:17" pos:end="77:25">extradata</name><operator pos:start="77:26" pos:end="77:27">++</operator></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="85:9" pos:end="85:56">/* if a match was found, parse the extra data */</comment>

        <if_stmt pos:start="87:9" pos:end="243:9"><if pos:start="87:9" pos:end="243:9">if <condition pos:start="87:12" pos:end="87:25">(<expr pos:start="87:13" pos:end="87:24"><name pos:start="87:13" pos:end="87:24">marker_found</name></expr>)</condition> <block pos:start="87:27" pos:end="243:9">{<block_content pos:start="91:13" pos:end="241:13">



            <decl_stmt pos:start="91:13" pos:end="91:29"><decl pos:start="91:13" pos:end="91:28"><type pos:start="91:13" pos:end="91:25"><name pos:start="91:13" pos:end="91:25">GetBitContext</name></type> <name pos:start="91:27" pos:end="91:28">gb</name></decl>;</decl_stmt>

            <decl_stmt pos:start="93:13" pos:end="93:32"><decl pos:start="93:13" pos:end="93:31"><type pos:start="93:13" pos:end="93:15"><name pos:start="93:13" pos:end="93:15">int</name></type> <name pos:start="93:17" pos:end="93:31">frame_size_code</name></decl>;</decl_stmt>



            <expr_stmt pos:start="97:13" pos:end="97:42"><expr pos:start="97:13" pos:end="97:41"><name pos:start="97:13" pos:end="97:16">size</name> <operator pos:start="97:18" pos:end="97:18">=</operator> <call pos:start="97:20" pos:end="97:41"><name pos:start="97:20" pos:end="97:26">AV_RB32</name><argument_list pos:start="97:27" pos:end="97:41">(<argument pos:start="97:28" pos:end="97:40"><expr pos:start="97:28" pos:end="97:40"><operator pos:start="97:28" pos:end="97:28">&amp;</operator><name pos:start="97:29" pos:end="97:40"><name pos:start="97:29" pos:end="97:37">extradata</name><index pos:start="97:38" pos:end="97:40">[<expr pos:start="97:39" pos:end="97:39"><literal type="number" pos:start="97:39" pos:end="97:39">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="99:13" pos:end="101:43"><if pos:start="99:13" pos:end="101:43">if <condition pos:start="99:16" pos:end="99:53">(<expr pos:start="99:17" pos:end="99:52"><name pos:start="99:17" pos:end="99:20">size</name> <operator pos:start="99:22" pos:end="99:22">&gt;</operator> <name pos:start="99:24" pos:end="99:36">extradata_end</name> <operator pos:start="99:38" pos:end="99:38">-</operator> <name pos:start="99:40" pos:end="99:48">extradata</name> <operator pos:start="99:50" pos:end="99:50">-</operator> <literal type="number" pos:start="99:52" pos:end="99:52">8</literal></expr>)</condition><block type="pseudo" pos:start="101:17" pos:end="101:43"><block_content pos:start="101:17" pos:end="101:43">

                <return pos:start="101:17" pos:end="101:43">return <expr pos:start="101:24" pos:end="101:42"><name pos:start="101:24" pos:end="101:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:54"><expr pos:start="103:13" pos:end="103:53"><call pos:start="103:13" pos:end="103:53"><name pos:start="103:13" pos:end="103:25">init_get_bits</name><argument_list pos:start="103:26" pos:end="103:53">(<argument pos:start="103:27" pos:end="103:29"><expr pos:start="103:27" pos:end="103:29"><operator pos:start="103:27" pos:end="103:27">&amp;</operator><name pos:start="103:28" pos:end="103:29">gb</name></expr></argument>, <argument pos:start="103:32" pos:end="103:44"><expr pos:start="103:32" pos:end="103:44"><name pos:start="103:32" pos:end="103:40">extradata</name> <operator pos:start="103:42" pos:end="103:42">+</operator> <literal type="number" pos:start="103:44" pos:end="103:44">8</literal></expr></argument>, <argument pos:start="103:47" pos:end="103:52"><expr pos:start="103:47" pos:end="103:52"><name pos:start="103:47" pos:end="103:50">size</name><operator pos:start="103:51" pos:end="103:51">*</operator><literal type="number" pos:start="103:52" pos:end="103:52">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="107:13" pos:end="107:64">/* 'frame size code' and optional 'width, height' */</comment>

            <expr_stmt pos:start="109:13" pos:end="109:47"><expr pos:start="109:13" pos:end="109:46"><name pos:start="109:13" pos:end="109:27">frame_size_code</name> <operator pos:start="109:29" pos:end="109:29">=</operator> <call pos:start="109:31" pos:end="109:46"><name pos:start="109:31" pos:end="109:38">get_bits</name><argument_list pos:start="109:39" pos:end="109:46">(<argument pos:start="109:40" pos:end="109:42"><expr pos:start="109:40" pos:end="109:42"><operator pos:start="109:40" pos:end="109:40">&amp;</operator><name pos:start="109:41" pos:end="109:42">gb</name></expr></argument>, <argument pos:start="109:45" pos:end="109:45"><expr pos:start="109:45" pos:end="109:45"><literal type="number" pos:start="109:45" pos:end="109:45">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="111:13" pos:end="135:13">switch <condition pos:start="111:20" pos:end="111:36">(<expr pos:start="111:21" pos:end="111:35"><name pos:start="111:21" pos:end="111:35">frame_size_code</name></expr>)</condition> <block pos:start="111:38" pos:end="135:13">{<block_content pos:start="113:17" pos:end="133:26">

                <case pos:start="113:17" pos:end="113:23">case <expr pos:start="113:22" pos:end="113:22"><literal type="number" pos:start="113:22" pos:end="113:22">0</literal></expr>:</case> <expr_stmt pos:start="113:25" pos:end="113:43"><expr pos:start="113:25" pos:end="113:42"><name pos:start="113:25" pos:end="113:36"><name pos:start="113:25" pos:end="113:29">avctx</name><operator pos:start="113:30" pos:end="113:31">-&gt;</operator><name pos:start="113:32" pos:end="113:36">width</name></name> <operator pos:start="113:38" pos:end="113:38">=</operator> <literal type="number" pos:start="113:40" pos:end="113:42">160</literal></expr>;</expr_stmt> <expr_stmt pos:start="113:45" pos:end="113:64"><expr pos:start="113:45" pos:end="113:63"><name pos:start="113:45" pos:end="113:57"><name pos:start="113:45" pos:end="113:49">avctx</name><operator pos:start="113:50" pos:end="113:51">-&gt;</operator><name pos:start="113:52" pos:end="113:57">height</name></name> <operator pos:start="113:59" pos:end="113:59">=</operator> <literal type="number" pos:start="113:61" pos:end="113:63">120</literal></expr>;</expr_stmt> <break pos:start="113:66" pos:end="113:71">break;</break>

                <case pos:start="115:17" pos:end="115:23">case <expr pos:start="115:22" pos:end="115:22"><literal type="number" pos:start="115:22" pos:end="115:22">1</literal></expr>:</case> <expr_stmt pos:start="115:25" pos:end="115:43"><expr pos:start="115:25" pos:end="115:42"><name pos:start="115:25" pos:end="115:36"><name pos:start="115:25" pos:end="115:29">avctx</name><operator pos:start="115:30" pos:end="115:31">-&gt;</operator><name pos:start="115:32" pos:end="115:36">width</name></name> <operator pos:start="115:38" pos:end="115:38">=</operator> <literal type="number" pos:start="115:40" pos:end="115:42">128</literal></expr>;</expr_stmt> <expr_stmt pos:start="115:45" pos:end="115:64"><expr pos:start="115:45" pos:end="115:63"><name pos:start="115:45" pos:end="115:57"><name pos:start="115:45" pos:end="115:49">avctx</name><operator pos:start="115:50" pos:end="115:51">-&gt;</operator><name pos:start="115:52" pos:end="115:57">height</name></name> <operator pos:start="115:59" pos:end="115:59">=</operator>  <literal type="number" pos:start="115:62" pos:end="115:63">96</literal></expr>;</expr_stmt> <break pos:start="115:66" pos:end="115:71">break;</break>

                <case pos:start="117:17" pos:end="117:23">case <expr pos:start="117:22" pos:end="117:22"><literal type="number" pos:start="117:22" pos:end="117:22">2</literal></expr>:</case> <expr_stmt pos:start="117:25" pos:end="117:43"><expr pos:start="117:25" pos:end="117:42"><name pos:start="117:25" pos:end="117:36"><name pos:start="117:25" pos:end="117:29">avctx</name><operator pos:start="117:30" pos:end="117:31">-&gt;</operator><name pos:start="117:32" pos:end="117:36">width</name></name> <operator pos:start="117:38" pos:end="117:38">=</operator> <literal type="number" pos:start="117:40" pos:end="117:42">176</literal></expr>;</expr_stmt> <expr_stmt pos:start="117:45" pos:end="117:64"><expr pos:start="117:45" pos:end="117:63"><name pos:start="117:45" pos:end="117:57"><name pos:start="117:45" pos:end="117:49">avctx</name><operator pos:start="117:50" pos:end="117:51">-&gt;</operator><name pos:start="117:52" pos:end="117:57">height</name></name> <operator pos:start="117:59" pos:end="117:59">=</operator> <literal type="number" pos:start="117:61" pos:end="117:63">144</literal></expr>;</expr_stmt> <break pos:start="117:66" pos:end="117:71">break;</break>

                <case pos:start="119:17" pos:end="119:23">case <expr pos:start="119:22" pos:end="119:22"><literal type="number" pos:start="119:22" pos:end="119:22">3</literal></expr>:</case> <expr_stmt pos:start="119:25" pos:end="119:43"><expr pos:start="119:25" pos:end="119:42"><name pos:start="119:25" pos:end="119:36"><name pos:start="119:25" pos:end="119:29">avctx</name><operator pos:start="119:30" pos:end="119:31">-&gt;</operator><name pos:start="119:32" pos:end="119:36">width</name></name> <operator pos:start="119:38" pos:end="119:38">=</operator> <literal type="number" pos:start="119:40" pos:end="119:42">352</literal></expr>;</expr_stmt> <expr_stmt pos:start="119:45" pos:end="119:64"><expr pos:start="119:45" pos:end="119:63"><name pos:start="119:45" pos:end="119:57"><name pos:start="119:45" pos:end="119:49">avctx</name><operator pos:start="119:50" pos:end="119:51">-&gt;</operator><name pos:start="119:52" pos:end="119:57">height</name></name> <operator pos:start="119:59" pos:end="119:59">=</operator> <literal type="number" pos:start="119:61" pos:end="119:63">288</literal></expr>;</expr_stmt> <break pos:start="119:66" pos:end="119:71">break;</break>

                <case pos:start="121:17" pos:end="121:23">case <expr pos:start="121:22" pos:end="121:22"><literal type="number" pos:start="121:22" pos:end="121:22">4</literal></expr>:</case> <expr_stmt pos:start="121:25" pos:end="121:43"><expr pos:start="121:25" pos:end="121:42"><name pos:start="121:25" pos:end="121:36"><name pos:start="121:25" pos:end="121:29">avctx</name><operator pos:start="121:30" pos:end="121:31">-&gt;</operator><name pos:start="121:32" pos:end="121:36">width</name></name> <operator pos:start="121:38" pos:end="121:38">=</operator> <literal type="number" pos:start="121:40" pos:end="121:42">704</literal></expr>;</expr_stmt> <expr_stmt pos:start="121:45" pos:end="121:64"><expr pos:start="121:45" pos:end="121:63"><name pos:start="121:45" pos:end="121:57"><name pos:start="121:45" pos:end="121:49">avctx</name><operator pos:start="121:50" pos:end="121:51">-&gt;</operator><name pos:start="121:52" pos:end="121:57">height</name></name> <operator pos:start="121:59" pos:end="121:59">=</operator> <literal type="number" pos:start="121:61" pos:end="121:63">576</literal></expr>;</expr_stmt> <break pos:start="121:66" pos:end="121:71">break;</break>

                <case pos:start="123:17" pos:end="123:23">case <expr pos:start="123:22" pos:end="123:22"><literal type="number" pos:start="123:22" pos:end="123:22">5</literal></expr>:</case> <expr_stmt pos:start="123:25" pos:end="123:43"><expr pos:start="123:25" pos:end="123:42"><name pos:start="123:25" pos:end="123:36"><name pos:start="123:25" pos:end="123:29">avctx</name><operator pos:start="123:30" pos:end="123:31">-&gt;</operator><name pos:start="123:32" pos:end="123:36">width</name></name> <operator pos:start="123:38" pos:end="123:38">=</operator> <literal type="number" pos:start="123:40" pos:end="123:42">240</literal></expr>;</expr_stmt> <expr_stmt pos:start="123:45" pos:end="123:64"><expr pos:start="123:45" pos:end="123:63"><name pos:start="123:45" pos:end="123:57"><name pos:start="123:45" pos:end="123:49">avctx</name><operator pos:start="123:50" pos:end="123:51">-&gt;</operator><name pos:start="123:52" pos:end="123:57">height</name></name> <operator pos:start="123:59" pos:end="123:59">=</operator> <literal type="number" pos:start="123:61" pos:end="123:63">180</literal></expr>;</expr_stmt> <break pos:start="123:66" pos:end="123:71">break;</break>

                <case pos:start="125:17" pos:end="125:23">case <expr pos:start="125:22" pos:end="125:22"><literal type="number" pos:start="125:22" pos:end="125:22">6</literal></expr>:</case> <expr_stmt pos:start="125:25" pos:end="125:43"><expr pos:start="125:25" pos:end="125:42"><name pos:start="125:25" pos:end="125:36"><name pos:start="125:25" pos:end="125:29">avctx</name><operator pos:start="125:30" pos:end="125:31">-&gt;</operator><name pos:start="125:32" pos:end="125:36">width</name></name> <operator pos:start="125:38" pos:end="125:38">=</operator> <literal type="number" pos:start="125:40" pos:end="125:42">320</literal></expr>;</expr_stmt> <expr_stmt pos:start="125:45" pos:end="125:64"><expr pos:start="125:45" pos:end="125:63"><name pos:start="125:45" pos:end="125:57"><name pos:start="125:45" pos:end="125:49">avctx</name><operator pos:start="125:50" pos:end="125:51">-&gt;</operator><name pos:start="125:52" pos:end="125:57">height</name></name> <operator pos:start="125:59" pos:end="125:59">=</operator> <literal type="number" pos:start="125:61" pos:end="125:63">240</literal></expr>;</expr_stmt> <break pos:start="125:66" pos:end="125:71">break;</break>

                <case pos:start="127:17" pos:end="127:23">case <expr pos:start="127:22" pos:end="127:22"><literal type="number" pos:start="127:22" pos:end="127:22">7</literal></expr>:</case>

                    <expr_stmt pos:start="129:21" pos:end="129:54"><expr pos:start="129:21" pos:end="129:53"><name pos:start="129:21" pos:end="129:32"><name pos:start="129:21" pos:end="129:25">avctx</name><operator pos:start="129:26" pos:end="129:27">-&gt;</operator><name pos:start="129:28" pos:end="129:32">width</name></name>  <operator pos:start="129:35" pos:end="129:35">=</operator> <call pos:start="129:37" pos:end="129:53"><name pos:start="129:37" pos:end="129:44">get_bits</name><argument_list pos:start="129:45" pos:end="129:53">(<argument pos:start="129:46" pos:end="129:48"><expr pos:start="129:46" pos:end="129:48"><operator pos:start="129:46" pos:end="129:46">&amp;</operator><name pos:start="129:47" pos:end="129:48">gb</name></expr></argument>, <argument pos:start="129:51" pos:end="129:52"><expr pos:start="129:51" pos:end="129:52"><literal type="number" pos:start="129:51" pos:end="129:52">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="131:21" pos:end="131:54"><expr pos:start="131:21" pos:end="131:53"><name pos:start="131:21" pos:end="131:33"><name pos:start="131:21" pos:end="131:25">avctx</name><operator pos:start="131:26" pos:end="131:27">-&gt;</operator><name pos:start="131:28" pos:end="131:33">height</name></name> <operator pos:start="131:35" pos:end="131:35">=</operator> <call pos:start="131:37" pos:end="131:53"><name pos:start="131:37" pos:end="131:44">get_bits</name><argument_list pos:start="131:45" pos:end="131:53">(<argument pos:start="131:46" pos:end="131:48"><expr pos:start="131:46" pos:end="131:48"><operator pos:start="131:46" pos:end="131:46">&amp;</operator><name pos:start="131:47" pos:end="131:48">gb</name></expr></argument>, <argument pos:start="131:51" pos:end="131:52"><expr pos:start="131:51" pos:end="131:52"><literal type="number" pos:start="131:51" pos:end="131:52">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="133:21" pos:end="133:26">break;</break>

            </block_content>}</block></switch>



            <expr_stmt pos:start="139:13" pos:end="139:49"><expr pos:start="139:13" pos:end="139:48"><name pos:start="139:13" pos:end="139:30"><name pos:start="139:13" pos:end="139:16">svq3</name><operator pos:start="139:17" pos:end="139:18">-&gt;</operator><name pos:start="139:19" pos:end="139:30">halfpel_flag</name></name>  <operator pos:start="139:33" pos:end="139:33">=</operator> <call pos:start="139:35" pos:end="139:48"><name pos:start="139:35" pos:end="139:43">get_bits1</name><argument_list pos:start="139:44" pos:end="139:48">(<argument pos:start="139:45" pos:end="139:47"><expr pos:start="139:45" pos:end="139:47"><operator pos:start="139:45" pos:end="139:45">&amp;</operator><name pos:start="139:46" pos:end="139:47">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:49"><expr pos:start="141:13" pos:end="141:48"><name pos:start="141:13" pos:end="141:31"><name pos:start="141:13" pos:end="141:16">svq3</name><operator pos:start="141:17" pos:end="141:18">-&gt;</operator><name pos:start="141:19" pos:end="141:31">thirdpel_flag</name></name> <operator pos:start="141:33" pos:end="141:33">=</operator> <call pos:start="141:35" pos:end="141:48"><name pos:start="141:35" pos:end="141:43">get_bits1</name><argument_list pos:start="141:44" pos:end="141:48">(<argument pos:start="141:45" pos:end="141:47"><expr pos:start="141:45" pos:end="141:47"><operator pos:start="141:45" pos:end="141:45">&amp;</operator><name pos:start="141:46" pos:end="141:47">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="145:13" pos:end="145:32">/* unknown fields */</comment>

            <expr_stmt pos:start="147:13" pos:end="147:28"><expr pos:start="147:13" pos:end="147:27"><call pos:start="147:13" pos:end="147:27"><name pos:start="147:13" pos:end="147:22">skip_bits1</name><argument_list pos:start="147:23" pos:end="147:27">(<argument pos:start="147:24" pos:end="147:26"><expr pos:start="147:24" pos:end="147:26"><operator pos:start="147:24" pos:end="147:24">&amp;</operator><name pos:start="147:25" pos:end="147:26">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:28"><expr pos:start="149:13" pos:end="149:27"><call pos:start="149:13" pos:end="149:27"><name pos:start="149:13" pos:end="149:22">skip_bits1</name><argument_list pos:start="149:23" pos:end="149:27">(<argument pos:start="149:24" pos:end="149:26"><expr pos:start="149:24" pos:end="149:26"><operator pos:start="149:24" pos:end="149:24">&amp;</operator><name pos:start="149:25" pos:end="149:26">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:28"><expr pos:start="151:13" pos:end="151:27"><call pos:start="151:13" pos:end="151:27"><name pos:start="151:13" pos:end="151:22">skip_bits1</name><argument_list pos:start="151:23" pos:end="151:27">(<argument pos:start="151:24" pos:end="151:26"><expr pos:start="151:24" pos:end="151:26"><operator pos:start="151:24" pos:end="151:24">&amp;</operator><name pos:start="151:25" pos:end="151:26">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:28"><expr pos:start="153:13" pos:end="153:27"><call pos:start="153:13" pos:end="153:27"><name pos:start="153:13" pos:end="153:22">skip_bits1</name><argument_list pos:start="153:23" pos:end="153:27">(<argument pos:start="153:24" pos:end="153:26"><expr pos:start="153:24" pos:end="153:26"><operator pos:start="153:24" pos:end="153:24">&amp;</operator><name pos:start="153:25" pos:end="153:26">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="157:13" pos:end="157:42"><expr pos:start="157:13" pos:end="157:41"><name pos:start="157:13" pos:end="157:24"><name pos:start="157:13" pos:end="157:13">s</name><operator pos:start="157:14" pos:end="157:15">-&gt;</operator><name pos:start="157:16" pos:end="157:24">low_delay</name></name> <operator pos:start="157:26" pos:end="157:26">=</operator> <call pos:start="157:28" pos:end="157:41"><name pos:start="157:28" pos:end="157:36">get_bits1</name><argument_list pos:start="157:37" pos:end="157:41">(<argument pos:start="157:38" pos:end="157:40"><expr pos:start="157:38" pos:end="157:40"><operator pos:start="157:38" pos:end="157:38">&amp;</operator><name pos:start="157:39" pos:end="157:40">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="161:13" pos:end="161:31">/* unknown field */</comment>

            <expr_stmt pos:start="163:13" pos:end="163:28"><expr pos:start="163:13" pos:end="163:27"><call pos:start="163:13" pos:end="163:27"><name pos:start="163:13" pos:end="163:22">skip_bits1</name><argument_list pos:start="163:23" pos:end="163:27">(<argument pos:start="163:24" pos:end="163:26"><expr pos:start="163:24" pos:end="163:26"><operator pos:start="163:24" pos:end="163:24">&amp;</operator><name pos:start="163:25" pos:end="163:26">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <while pos:start="167:13" pos:end="171:13">while <condition pos:start="167:19" pos:end="167:34">(<expr pos:start="167:20" pos:end="167:33"><call pos:start="167:20" pos:end="167:33"><name pos:start="167:20" pos:end="167:28">get_bits1</name><argument_list pos:start="167:29" pos:end="167:33">(<argument pos:start="167:30" pos:end="167:32"><expr pos:start="167:30" pos:end="167:32"><operator pos:start="167:30" pos:end="167:30">&amp;</operator><name pos:start="167:31" pos:end="167:32">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="167:36" pos:end="171:13">{<block_content pos:start="169:17" pos:end="169:34">

                <expr_stmt pos:start="169:17" pos:end="169:34"><expr pos:start="169:17" pos:end="169:33"><call pos:start="169:17" pos:end="169:33"><name pos:start="169:17" pos:end="169:25">skip_bits</name><argument_list pos:start="169:26" pos:end="169:33">(<argument pos:start="169:27" pos:end="169:29"><expr pos:start="169:27" pos:end="169:29"><operator pos:start="169:27" pos:end="169:27">&amp;</operator><name pos:start="169:28" pos:end="169:29">gb</name></expr></argument>, <argument pos:start="169:32" pos:end="169:32"><expr pos:start="169:32" pos:end="169:32"><literal type="number" pos:start="169:32" pos:end="169:32">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></while>



            <expr_stmt pos:start="175:13" pos:end="175:48"><expr pos:start="175:13" pos:end="175:47"><name pos:start="175:13" pos:end="175:30"><name pos:start="175:13" pos:end="175:16">svq3</name><operator pos:start="175:17" pos:end="175:18">-&gt;</operator><name pos:start="175:19" pos:end="175:30">unknown_flag</name></name> <operator pos:start="175:32" pos:end="175:32">=</operator> <call pos:start="175:34" pos:end="175:47"><name pos:start="175:34" pos:end="175:42">get_bits1</name><argument_list pos:start="175:43" pos:end="175:47">(<argument pos:start="175:44" pos:end="175:46"><expr pos:start="175:44" pos:end="175:46"><operator pos:start="175:44" pos:end="175:44">&amp;</operator><name pos:start="175:45" pos:end="175:46">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="177:13" pos:end="177:48"><expr pos:start="177:13" pos:end="177:47"><name pos:start="177:13" pos:end="177:31"><name pos:start="177:13" pos:end="177:17">avctx</name><operator pos:start="177:18" pos:end="177:19">-&gt;</operator><name pos:start="177:20" pos:end="177:31">has_b_frames</name></name> <operator pos:start="177:33" pos:end="177:33">=</operator> <operator pos:start="177:35" pos:end="177:35">!</operator><name pos:start="177:36" pos:end="177:47"><name pos:start="177:36" pos:end="177:36">s</name><operator pos:start="177:37" pos:end="177:38">-&gt;</operator><name pos:start="177:39" pos:end="177:47">low_delay</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="179:13" pos:end="241:13"><if pos:start="179:13" pos:end="241:13">if <condition pos:start="179:16" pos:end="179:35">(<expr pos:start="179:17" pos:end="179:34"><name pos:start="179:17" pos:end="179:34"><name pos:start="179:17" pos:end="179:20">svq3</name><operator pos:start="179:21" pos:end="179:22">-&gt;</operator><name pos:start="179:23" pos:end="179:34">unknown_flag</name></name></expr>)</condition> <block pos:start="179:37" pos:end="241:13">{<block_content pos:start="183:17" pos:end="240:0">

<cpp:if pos:start="181:1" pos:end="181:15">#<cpp:directive pos:start="181:2" pos:end="181:3">if</cpp:directive> <expr pos:start="181:5" pos:end="181:15"><name pos:start="181:5" pos:end="181:15">CONFIG_ZLIB</name></expr></cpp:if>

                <decl_stmt pos:start="183:17" pos:end="183:68"><decl pos:start="183:17" pos:end="183:67"><type pos:start="183:17" pos:end="183:24"><name pos:start="183:17" pos:end="183:24">unsigned</name></type> <name pos:start="183:26" pos:end="183:40">watermark_width</name>  <init pos:start="183:43" pos:end="183:67">= <expr pos:start="183:45" pos:end="183:67"><call pos:start="183:45" pos:end="183:67"><name pos:start="183:45" pos:end="183:62">svq3_get_ue_golomb</name><argument_list pos:start="183:63" pos:end="183:67">(<argument pos:start="183:64" pos:end="183:66"><expr pos:start="183:64" pos:end="183:66"><operator pos:start="183:64" pos:end="183:64">&amp;</operator><name pos:start="183:65" pos:end="183:66">gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="185:17" pos:end="185:68"><decl pos:start="185:17" pos:end="185:67"><type pos:start="185:17" pos:end="185:24"><name pos:start="185:17" pos:end="185:24">unsigned</name></type> <name pos:start="185:26" pos:end="185:41">watermark_height</name> <init pos:start="185:43" pos:end="185:67">= <expr pos:start="185:45" pos:end="185:67"><call pos:start="185:45" pos:end="185:67"><name pos:start="185:45" pos:end="185:62">svq3_get_ue_golomb</name><argument_list pos:start="185:63" pos:end="185:67">(<argument pos:start="185:64" pos:end="185:66"><expr pos:start="185:64" pos:end="185:66"><operator pos:start="185:64" pos:end="185:64">&amp;</operator><name pos:start="185:65" pos:end="185:66">gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="187:17" pos:end="187:49"><decl pos:start="187:17" pos:end="187:48"><type pos:start="187:17" pos:end="187:19"><name pos:start="187:17" pos:end="187:19">int</name></type> <name pos:start="187:21" pos:end="187:22">u1</name> <init pos:start="187:24" pos:end="187:48">= <expr pos:start="187:26" pos:end="187:48"><call pos:start="187:26" pos:end="187:48"><name pos:start="187:26" pos:end="187:43">svq3_get_ue_golomb</name><argument_list pos:start="187:44" pos:end="187:48">(<argument pos:start="187:45" pos:end="187:47"><expr pos:start="187:45" pos:end="187:47"><operator pos:start="187:45" pos:end="187:45">&amp;</operator><name pos:start="187:46" pos:end="187:47">gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="189:17" pos:end="189:42"><decl pos:start="189:17" pos:end="189:41"><type pos:start="189:17" pos:end="189:19"><name pos:start="189:17" pos:end="189:19">int</name></type> <name pos:start="189:21" pos:end="189:22">u2</name> <init pos:start="189:24" pos:end="189:41">= <expr pos:start="189:26" pos:end="189:41"><call pos:start="189:26" pos:end="189:41"><name pos:start="189:26" pos:end="189:33">get_bits</name><argument_list pos:start="189:34" pos:end="189:41">(<argument pos:start="189:35" pos:end="189:37"><expr pos:start="189:35" pos:end="189:37"><operator pos:start="189:35" pos:end="189:35">&amp;</operator><name pos:start="189:36" pos:end="189:37">gb</name></expr></argument>, <argument pos:start="189:40" pos:end="189:40"><expr pos:start="189:40" pos:end="189:40"><literal type="number" pos:start="189:40" pos:end="189:40">8</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="191:17" pos:end="191:42"><decl pos:start="191:17" pos:end="191:41"><type pos:start="191:17" pos:end="191:19"><name pos:start="191:17" pos:end="191:19">int</name></type> <name pos:start="191:21" pos:end="191:22">u3</name> <init pos:start="191:24" pos:end="191:41">= <expr pos:start="191:26" pos:end="191:41"><call pos:start="191:26" pos:end="191:41"><name pos:start="191:26" pos:end="191:33">get_bits</name><argument_list pos:start="191:34" pos:end="191:41">(<argument pos:start="191:35" pos:end="191:37"><expr pos:start="191:35" pos:end="191:37"><operator pos:start="191:35" pos:end="191:35">&amp;</operator><name pos:start="191:36" pos:end="191:37">gb</name></expr></argument>, <argument pos:start="191:40" pos:end="191:40"><expr pos:start="191:40" pos:end="191:40"><literal type="number" pos:start="191:40" pos:end="191:40">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="193:17" pos:end="193:49"><decl pos:start="193:17" pos:end="193:48"><type pos:start="193:17" pos:end="193:19"><name pos:start="193:17" pos:end="193:19">int</name></type> <name pos:start="193:21" pos:end="193:22">u4</name> <init pos:start="193:24" pos:end="193:48">= <expr pos:start="193:26" pos:end="193:48"><call pos:start="193:26" pos:end="193:48"><name pos:start="193:26" pos:end="193:43">svq3_get_ue_golomb</name><argument_list pos:start="193:44" pos:end="193:48">(<argument pos:start="193:45" pos:end="193:47"><expr pos:start="193:45" pos:end="193:47"><operator pos:start="193:45" pos:end="193:45">&amp;</operator><name pos:start="193:46" pos:end="193:47">gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="195:17" pos:end="195:75"><decl pos:start="195:17" pos:end="195:74"><type pos:start="195:17" pos:end="195:29"><name pos:start="195:17" pos:end="195:24">unsigned</name> <name pos:start="195:26" pos:end="195:29">long</name></type> <name pos:start="195:31" pos:end="195:37">buf_len</name> <init pos:start="195:39" pos:end="195:74">= <expr pos:start="195:41" pos:end="195:74"><name pos:start="195:41" pos:end="195:55">watermark_width</name><operator pos:start="195:56" pos:end="195:56">*</operator><name pos:start="195:57" pos:end="195:72">watermark_height</name><operator pos:start="195:73" pos:end="195:73">*</operator><literal type="number" pos:start="195:74" pos:end="195:74">4</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="197:17" pos:end="197:56"><decl pos:start="197:17" pos:end="197:55"><type pos:start="197:17" pos:end="197:19"><name pos:start="197:17" pos:end="197:19">int</name></type> <name pos:start="197:21" pos:end="197:26">offset</name> <init pos:start="197:28" pos:end="197:55">= <expr pos:start="197:30" pos:end="197:55"><operator pos:start="197:30" pos:end="197:30">(</operator><call pos:start="197:31" pos:end="197:49"><name pos:start="197:31" pos:end="197:44">get_bits_count</name><argument_list pos:start="197:45" pos:end="197:49">(<argument pos:start="197:46" pos:end="197:48"><expr pos:start="197:46" pos:end="197:48"><operator pos:start="197:46" pos:end="197:46">&amp;</operator><name pos:start="197:47" pos:end="197:48">gb</name></expr></argument>)</argument_list></call><operator pos:start="197:50" pos:end="197:50">+</operator><literal type="number" pos:start="197:51" pos:end="197:51">7</literal><operator pos:start="197:52" pos:end="197:52">)</operator><operator pos:start="197:53" pos:end="197:54">&gt;&gt;</operator><literal type="number" pos:start="197:55" pos:end="197:55">3</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="199:17" pos:end="199:29"><decl pos:start="199:17" pos:end="199:28"><type pos:start="199:17" pos:end="199:25"><name pos:start="199:17" pos:end="199:23">uint8_t</name> <modifier pos:start="199:25" pos:end="199:25">*</modifier></type><name pos:start="199:26" pos:end="199:28">buf</name></decl>;</decl_stmt>



                <if_stmt pos:start="203:17" pos:end="205:30"><if pos:start="203:17" pos:end="205:30">if <condition pos:start="203:20" pos:end="203:76">(<expr pos:start="203:21" pos:end="203:75"><operator pos:start="203:21" pos:end="203:21">(</operator><name pos:start="203:22" pos:end="203:29">uint64_t</name><operator pos:start="203:30" pos:end="203:30">)</operator><name pos:start="203:31" pos:end="203:45">watermark_width</name><operator pos:start="203:46" pos:end="203:46">*</operator><literal type="number" pos:start="203:47" pos:end="203:47">4</literal> <operator pos:start="203:49" pos:end="203:49">&gt;</operator> <name pos:start="203:51" pos:end="203:58">UINT_MAX</name><operator pos:start="203:59" pos:end="203:59">/</operator><name pos:start="203:60" pos:end="203:75">watermark_height</name></expr>)</condition><block type="pseudo" pos:start="205:21" pos:end="205:30"><block_content pos:start="205:21" pos:end="205:30">

                    <return pos:start="205:21" pos:end="205:30">return <expr pos:start="205:28" pos:end="205:29"><operator pos:start="205:28" pos:end="205:28">-</operator><literal type="number" pos:start="205:29" pos:end="205:29">1</literal></expr>;</return></block_content></block></if></if_stmt>



                <expr_stmt pos:start="209:17" pos:end="209:41"><expr pos:start="209:17" pos:end="209:40"><name pos:start="209:17" pos:end="209:19">buf</name> <operator pos:start="209:21" pos:end="209:21">=</operator> <call pos:start="209:23" pos:end="209:40"><name pos:start="209:23" pos:end="209:31">av_malloc</name><argument_list pos:start="209:32" pos:end="209:40">(<argument pos:start="209:33" pos:end="209:39"><expr pos:start="209:33" pos:end="209:39"><name pos:start="209:33" pos:end="209:39">buf_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="211:17" pos:end="211:106"><expr pos:start="211:17" pos:end="211:105"><call pos:start="211:17" pos:end="211:105"><name pos:start="211:17" pos:end="211:22">av_log</name><argument_list pos:start="211:23" pos:end="211:105">(<argument pos:start="211:24" pos:end="211:28"><expr pos:start="211:24" pos:end="211:28"><name pos:start="211:24" pos:end="211:28">avctx</name></expr></argument>, <argument pos:start="211:31" pos:end="211:42"><expr pos:start="211:31" pos:end="211:42"><name pos:start="211:31" pos:end="211:42">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="211:45" pos:end="211:69"><expr pos:start="211:45" pos:end="211:69"><literal type="string" pos:start="211:45" pos:end="211:69">"watermark size: %dx%d\n"</literal></expr></argument>, <argument pos:start="211:72" pos:end="211:86"><expr pos:start="211:72" pos:end="211:86"><name pos:start="211:72" pos:end="211:86">watermark_width</name></expr></argument>, <argument pos:start="211:89" pos:end="211:104"><expr pos:start="211:89" pos:end="211:104"><name pos:start="211:89" pos:end="211:104">watermark_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="213:17" pos:end="213:130"><expr pos:start="213:17" pos:end="213:129"><call pos:start="213:17" pos:end="213:129"><name pos:start="213:17" pos:end="213:22">av_log</name><argument_list pos:start="213:23" pos:end="213:129">(<argument pos:start="213:24" pos:end="213:28"><expr pos:start="213:24" pos:end="213:28"><name pos:start="213:24" pos:end="213:28">avctx</name></expr></argument>, <argument pos:start="213:31" pos:end="213:42"><expr pos:start="213:31" pos:end="213:42"><name pos:start="213:31" pos:end="213:42">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="213:45" pos:end="213:104"><expr pos:start="213:45" pos:end="213:104"><literal type="string" pos:start="213:45" pos:end="213:104">"u1: %x u2: %x u3: %x compressed data size: %d offset: %d\n"</literal></expr></argument>, <argument pos:start="213:107" pos:end="213:108"><expr pos:start="213:107" pos:end="213:108"><name pos:start="213:107" pos:end="213:108">u1</name></expr></argument>, <argument pos:start="213:111" pos:end="213:112"><expr pos:start="213:111" pos:end="213:112"><name pos:start="213:111" pos:end="213:112">u2</name></expr></argument>, <argument pos:start="213:115" pos:end="213:116"><expr pos:start="213:115" pos:end="213:116"><name pos:start="213:115" pos:end="213:116">u3</name></expr></argument>, <argument pos:start="213:119" pos:end="213:120"><expr pos:start="213:119" pos:end="213:120"><name pos:start="213:119" pos:end="213:120">u4</name></expr></argument>, <argument pos:start="213:123" pos:end="213:128"><expr pos:start="213:123" pos:end="213:128"><name pos:start="213:123" pos:end="213:128">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="215:17" pos:end="223:17"><if pos:start="215:17" pos:end="223:17">if <condition pos:start="215:20" pos:end="215:93">(<expr pos:start="215:21" pos:end="215:92"><call pos:start="215:21" pos:end="215:84"><name pos:start="215:21" pos:end="215:30">uncompress</name><argument_list pos:start="215:31" pos:end="215:84">(<argument pos:start="215:32" pos:end="215:34"><expr pos:start="215:32" pos:end="215:34"><name pos:start="215:32" pos:end="215:34">buf</name></expr></argument>, <argument pos:start="215:37" pos:end="215:44"><expr pos:start="215:37" pos:end="215:44"><operator pos:start="215:37" pos:end="215:37">&amp;</operator><name pos:start="215:38" pos:end="215:44">buf_len</name></expr></argument>, <argument pos:start="215:47" pos:end="215:68"><expr pos:start="215:47" pos:end="215:68"><name pos:start="215:47" pos:end="215:55">extradata</name> <operator pos:start="215:57" pos:end="215:57">+</operator> <literal type="number" pos:start="215:59" pos:end="215:61">8</literal> <operator pos:start="215:61" pos:end="215:61">+</operator> <name pos:start="215:63" pos:end="215:68">offset</name></expr></argument>, <argument pos:start="215:71" pos:end="215:83"><expr pos:start="215:71" pos:end="215:83"><name pos:start="215:71" pos:end="215:74">size</name> <operator pos:start="215:76" pos:end="215:76">-</operator> <name pos:start="215:78" pos:end="215:83">offset</name></expr></argument>)</argument_list></call> <operator pos:start="215:86" pos:end="215:87">!=</operator> <name pos:start="215:89" pos:end="215:92">Z_OK</name></expr>)</condition> <block pos:start="215:95" pos:end="223:17">{<block_content pos:start="217:21" pos:end="221:30">

                    <expr_stmt pos:start="217:21" pos:end="217:89"><expr pos:start="217:21" pos:end="217:88"><call pos:start="217:21" pos:end="217:88"><name pos:start="217:21" pos:end="217:26">av_log</name><argument_list pos:start="217:27" pos:end="217:88">(<argument pos:start="217:28" pos:end="217:32"><expr pos:start="217:28" pos:end="217:32"><name pos:start="217:28" pos:end="217:32">avctx</name></expr></argument>, <argument pos:start="217:35" pos:end="217:46"><expr pos:start="217:35" pos:end="217:46"><name pos:start="217:35" pos:end="217:46">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="217:49" pos:end="217:87"><expr pos:start="217:49" pos:end="217:87"><literal type="string" pos:start="217:49" pos:end="217:87">"could not uncompress watermark logo\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="219:21" pos:end="219:33"><expr pos:start="219:21" pos:end="219:32"><call pos:start="219:21" pos:end="219:32"><name pos:start="219:21" pos:end="219:27">av_free</name><argument_list pos:start="219:28" pos:end="219:32">(<argument pos:start="219:29" pos:end="219:31"><expr pos:start="219:29" pos:end="219:31"><name pos:start="219:29" pos:end="219:31">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="221:21" pos:end="221:30">return <expr pos:start="221:28" pos:end="221:29"><operator pos:start="221:28" pos:end="221:28">-</operator><literal type="number" pos:start="221:29" pos:end="221:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="225:17" pos:end="225:79"><expr pos:start="225:17" pos:end="225:78"><name pos:start="225:17" pos:end="225:35"><name pos:start="225:17" pos:end="225:20">svq3</name><operator pos:start="225:21" pos:end="225:22">-&gt;</operator><name pos:start="225:23" pos:end="225:35">watermark_key</name></name> <operator pos:start="225:37" pos:end="225:37">=</operator> <call pos:start="225:39" pos:end="225:78"><name pos:start="225:39" pos:end="225:61">ff_svq1_packet_checksum</name><argument_list pos:start="225:62" pos:end="225:78">(<argument pos:start="225:63" pos:end="225:65"><expr pos:start="225:63" pos:end="225:65"><name pos:start="225:63" pos:end="225:65">buf</name></expr></argument>, <argument pos:start="225:68" pos:end="225:74"><expr pos:start="225:68" pos:end="225:74"><name pos:start="225:68" pos:end="225:74">buf_len</name></expr></argument>, <argument pos:start="225:77" pos:end="225:77"><expr pos:start="225:77" pos:end="225:77"><literal type="number" pos:start="225:77" pos:end="225:77">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="227:17" pos:end="227:86"><expr pos:start="227:17" pos:end="227:85"><name pos:start="227:17" pos:end="227:35"><name pos:start="227:17" pos:end="227:20">svq3</name><operator pos:start="227:21" pos:end="227:22">-&gt;</operator><name pos:start="227:23" pos:end="227:35">watermark_key</name></name> <operator pos:start="227:37" pos:end="227:37">=</operator> <name pos:start="227:39" pos:end="227:57"><name pos:start="227:39" pos:end="227:42">svq3</name><operator pos:start="227:43" pos:end="227:44">-&gt;</operator><name pos:start="227:45" pos:end="227:57">watermark_key</name></name> <operator pos:start="227:59" pos:end="227:60">&lt;&lt;</operator> <literal type="number" pos:start="227:62" pos:end="227:63">16</literal> <operator pos:start="227:65" pos:end="227:65">|</operator> <name pos:start="227:67" pos:end="227:85"><name pos:start="227:67" pos:end="227:70">svq3</name><operator pos:start="227:71" pos:end="227:72">-&gt;</operator><name pos:start="227:73" pos:end="227:85">watermark_key</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="229:17" pos:end="229:88"><expr pos:start="229:17" pos:end="229:87"><call pos:start="229:17" pos:end="229:87"><name pos:start="229:17" pos:end="229:22">av_log</name><argument_list pos:start="229:23" pos:end="229:87">(<argument pos:start="229:24" pos:end="229:28"><expr pos:start="229:24" pos:end="229:28"><name pos:start="229:24" pos:end="229:28">avctx</name></expr></argument>, <argument pos:start="229:31" pos:end="229:42"><expr pos:start="229:31" pos:end="229:42"><name pos:start="229:31" pos:end="229:42">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="229:45" pos:end="229:65"><expr pos:start="229:45" pos:end="229:65"><literal type="string" pos:start="229:45" pos:end="229:65">"watermark key %#x\n"</literal></expr></argument>, <argument pos:start="229:68" pos:end="229:86"><expr pos:start="229:68" pos:end="229:86"><name pos:start="229:68" pos:end="229:86"><name pos:start="229:68" pos:end="229:71">svq3</name><operator pos:start="229:72" pos:end="229:73">-&gt;</operator><name pos:start="229:74" pos:end="229:86">watermark_key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="231:17" pos:end="234:0"><expr pos:start="231:17" pos:end="231:28"><call pos:start="231:17" pos:end="231:28"><name pos:start="231:17" pos:end="231:23">av_free</name><argument_list pos:start="231:24" pos:end="231:28">(<argument pos:start="231:25" pos:end="231:27"><expr pos:start="231:25" pos:end="231:27"><name pos:start="231:25" pos:end="231:27">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="233:1" pos:end="233:5">#<cpp:directive pos:start="233:2" pos:end="233:5">else</cpp:directive></cpp:else>

                <expr_stmt pos:start="235:17" pos:end="235:119"><expr pos:start="235:17" pos:end="235:118"><call pos:start="235:17" pos:end="235:118"><name pos:start="235:17" pos:end="235:22">av_log</name><argument_list pos:start="235:23" pos:end="235:118">(<argument pos:start="235:24" pos:end="235:28"><expr pos:start="235:24" pos:end="235:28"><name pos:start="235:24" pos:end="235:28">avctx</name></expr></argument>, <argument pos:start="235:31" pos:end="235:42"><expr pos:start="235:31" pos:end="235:42"><name pos:start="235:31" pos:end="235:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="235:45" pos:end="235:117"><expr pos:start="235:45" pos:end="235:117"><literal type="string" pos:start="235:45" pos:end="235:117">"this svq3 file contains watermark which need zlib support compiled in\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="237:17" pos:end="240:0">return <expr pos:start="237:24" pos:end="237:25"><operator pos:start="237:24" pos:end="237:24">-</operator><literal type="number" pos:start="237:25" pos:end="237:25">1</literal></expr>;</return>

<cpp:endif pos:start="239:1" pos:end="239:6">#<cpp:directive pos:start="239:2" pos:end="239:6">endif</cpp:directive></cpp:endif>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="247:9" pos:end="247:33"><expr pos:start="247:9" pos:end="247:32"><name pos:start="247:9" pos:end="247:16"><name pos:start="247:9" pos:end="247:9">s</name><operator pos:start="247:10" pos:end="247:11">-&gt;</operator><name pos:start="247:12" pos:end="247:16">width</name></name>  <operator pos:start="247:19" pos:end="247:19">=</operator> <name pos:start="247:21" pos:end="247:32"><name pos:start="247:21" pos:end="247:25">avctx</name><operator pos:start="247:26" pos:end="247:27">-&gt;</operator><name pos:start="247:28" pos:end="247:32">width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="249:9" pos:end="249:34"><expr pos:start="249:9" pos:end="249:33"><name pos:start="249:9" pos:end="249:17"><name pos:start="249:9" pos:end="249:9">s</name><operator pos:start="249:10" pos:end="249:11">-&gt;</operator><name pos:start="249:12" pos:end="249:17">height</name></name> <operator pos:start="249:19" pos:end="249:19">=</operator> <name pos:start="249:21" pos:end="249:33"><name pos:start="249:21" pos:end="249:25">avctx</name><operator pos:start="249:26" pos:end="249:27">-&gt;</operator><name pos:start="249:28" pos:end="249:33">height</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="253:9" pos:end="255:22"><if pos:start="253:9" pos:end="255:22">if <condition pos:start="253:12" pos:end="253:38">(<expr pos:start="253:13" pos:end="253:37"><call pos:start="253:13" pos:end="253:33"><name pos:start="253:13" pos:end="253:30">ff_MPV_common_init</name><argument_list pos:start="253:31" pos:end="253:33">(<argument pos:start="253:32" pos:end="253:32"><expr pos:start="253:32" pos:end="253:32"><name pos:start="253:32" pos:end="253:32">s</name></expr></argument>)</argument_list></call> <operator pos:start="253:35" pos:end="253:35">&lt;</operator> <literal type="number" pos:start="253:37" pos:end="253:37">0</literal></expr>)</condition><block type="pseudo" pos:start="255:13" pos:end="255:22"><block_content pos:start="255:13" pos:end="255:22">

            <return pos:start="255:13" pos:end="255:22">return <expr pos:start="255:20" pos:end="255:21"><operator pos:start="255:20" pos:end="255:20">-</operator><literal type="number" pos:start="255:21" pos:end="255:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="259:9" pos:end="259:36"><expr pos:start="259:9" pos:end="259:35"><name pos:start="259:9" pos:end="259:19"><name pos:start="259:9" pos:end="259:9">h</name><operator pos:start="259:10" pos:end="259:11">-&gt;</operator><name pos:start="259:12" pos:end="259:19">b_stride</name></name> <operator pos:start="259:21" pos:end="259:21">=</operator> <literal type="number" pos:start="259:23" pos:end="259:23">4</literal><operator pos:start="259:24" pos:end="259:24">*</operator><name pos:start="259:25" pos:end="259:35"><name pos:start="259:25" pos:end="259:25">s</name><operator pos:start="259:26" pos:end="259:27">-&gt;</operator><name pos:start="259:28" pos:end="259:35">mb_width</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="263:9" pos:end="269:9"><if pos:start="263:9" pos:end="269:9">if <condition pos:start="263:12" pos:end="263:40">(<expr pos:start="263:13" pos:end="263:39"><call pos:start="263:13" pos:end="263:35"><name pos:start="263:13" pos:end="263:32">ff_h264_alloc_tables</name><argument_list pos:start="263:33" pos:end="263:35">(<argument pos:start="263:34" pos:end="263:34"><expr pos:start="263:34" pos:end="263:34"><name pos:start="263:34" pos:end="263:34">h</name></expr></argument>)</argument_list></call> <operator pos:start="263:37" pos:end="263:37">&lt;</operator> <literal type="number" pos:start="263:39" pos:end="263:39">0</literal></expr>)</condition> <block pos:start="263:42" pos:end="269:9">{<block_content pos:start="265:13" pos:end="267:35">

            <expr_stmt pos:start="265:13" pos:end="265:75"><expr pos:start="265:13" pos:end="265:74"><call pos:start="265:13" pos:end="265:74"><name pos:start="265:13" pos:end="265:18">av_log</name><argument_list pos:start="265:19" pos:end="265:74">(<argument pos:start="265:20" pos:end="265:24"><expr pos:start="265:20" pos:end="265:24"><name pos:start="265:20" pos:end="265:24">avctx</name></expr></argument>, <argument pos:start="265:27" pos:end="265:38"><expr pos:start="265:27" pos:end="265:38"><name pos:start="265:27" pos:end="265:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="265:41" pos:end="265:73"><expr pos:start="265:41" pos:end="265:73"><literal type="string" pos:start="265:41" pos:end="265:73">"svq3 memory allocation failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="267:13" pos:end="267:35">return <expr pos:start="267:20" pos:end="267:34"><call pos:start="267:20" pos:end="267:34"><name pos:start="267:20" pos:end="267:26">AVERROR</name><argument_list pos:start="267:27" pos:end="267:34">(<argument pos:start="267:28" pos:end="267:33"><expr pos:start="267:28" pos:end="267:33"><name pos:start="267:28" pos:end="267:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="275:5" pos:end="275:13">return <expr pos:start="275:12" pos:end="275:12"><literal type="number" pos:start="275:12" pos:end="275:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
