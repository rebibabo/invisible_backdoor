<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3676.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:19"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">encode_nals</name><parameter_list pos:start="1:23" pos:end="3:64">(<parameter pos:start="1:24" pos:end="1:42"><decl pos:start="1:24" pos:end="1:42"><type pos:start="1:24" pos:end="1:42"><name pos:start="1:24" pos:end="1:37">AVCodecContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">ctx</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:56"><decl pos:start="1:45" pos:end="1:56"><type pos:start="1:45" pos:end="1:56"><name pos:start="1:45" pos:end="1:51">uint8_t</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">buf</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:66"><decl pos:start="1:59" pos:end="1:66"><type pos:start="1:59" pos:end="1:66"><name pos:start="1:59" pos:end="1:61">int</name></type> <name pos:start="1:63" pos:end="1:66">size</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:39"><decl pos:start="3:24" pos:end="3:39"><type pos:start="3:24" pos:end="3:39"><name pos:start="3:24" pos:end="3:33">x264_nal_t</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:39">nals</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:49"><decl pos:start="3:42" pos:end="3:49"><type pos:start="3:42" pos:end="3:49"><name pos:start="3:42" pos:end="3:44">int</name></type> <name pos:start="3:46" pos:end="3:49">nnal</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:63"><decl pos:start="3:52" pos:end="3:63"><type pos:start="3:52" pos:end="3:63"><name pos:start="3:52" pos:end="3:54">int</name></type> <name pos:start="3:56" pos:end="3:63">skip_sei</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="63:19">{<block_content pos:start="7:5" pos:end="63:19">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">X264Context</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">x4</name> <init pos:start="7:21" pos:end="7:36">= <expr pos:start="7:23" pos:end="7:36"><name pos:start="7:23" pos:end="7:36"><name pos:start="7:23" pos:end="7:25">ctx</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:14">p</name> <init pos:start="9:16" pos:end="9:20">= <expr pos:start="9:18" pos:end="9:20"><name pos:start="9:18" pos:end="9:20">buf</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:51">/* Write the SEI as part of the first frame. */</comment>

    <if_stmt pos:start="17:5" pos:end="63:19"><if pos:start="17:5" pos:end="63:19">if <condition pos:start="17:8" pos:end="17:37">(<expr pos:start="17:9" pos:end="17:36"><name pos:start="17:9" pos:end="17:20"><name pos:start="17:9" pos:end="17:10">x4</name><operator pos:start="17:11" pos:end="17:12">-&gt;</operator><name pos:start="17:13" pos:end="17:20">sei_size</name></name> <operator pos:start="17:22" pos:end="17:22">&gt;</operator> <literal type="number" pos:start="17:24" pos:end="17:24">0</literal> <operator pos:start="17:26" pos:end="17:27">&amp;&amp;</operator> <name pos:start="17:29" pos:end="17:32">nnal</name> <operator pos:start="17:34" pos:end="17:34">&gt;</operator> <literal type="number" pos:start="17:36" pos:end="17:36">0</literal></expr>)</condition> <block pos:start="17:39" pos:end="63:19">{<block_content pos:start="19:9" pos:end="63:19">

        <if_stmt pos:start="19:9" pos:end="63:19"><if pos:start="19:9" pos:end="63:19">if <condition pos:start="19:12" pos:end="19:32">(<expr pos:start="19:13" pos:end="19:31"><name pos:start="19:13" pos:end="19:24"><name pos:start="19:13" pos:end="19:14">x4</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:24">sei_size</name></name> <operator pos:start="19:26" pos:end="19:26">&gt;</operator> <name pos:start="19:28" pos:end="19:31">size</name></expr>)</condition> <block pos:start="19:34" pos:end="63:19">{<block_content pos:start="22:13" pos:end="63:19">


            <return pos:start="22:13" pos:end="22:22">return <expr pos:start="22:20" pos:end="22:21"><operator pos:start="22:20" pos:end="22:20">-</operator><literal type="number" pos:start="22:21" pos:end="22:21">1</literal></expr>;</return>


        <expr_stmt pos:start="25:9" pos:end="25:41"><expr pos:start="25:9" pos:end="25:40"><call pos:start="25:9" pos:end="25:40"><name pos:start="25:9" pos:end="25:14">memcpy</name><argument_list pos:start="25:15" pos:end="25:40">(<argument pos:start="25:16" pos:end="25:16"><expr pos:start="25:16" pos:end="25:16"><name pos:start="25:16" pos:end="25:16">p</name></expr></argument>, <argument pos:start="25:19" pos:end="25:25"><expr pos:start="25:19" pos:end="25:25"><name pos:start="25:19" pos:end="25:25"><name pos:start="25:19" pos:end="25:20">x4</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:25">sei</name></name></expr></argument>, <argument pos:start="25:28" pos:end="25:39"><expr pos:start="25:28" pos:end="25:39"><name pos:start="25:28" pos:end="25:39"><name pos:start="25:28" pos:end="25:29">x4</name><operator pos:start="25:30" pos:end="25:31">-&gt;</operator><name pos:start="25:32" pos:end="25:39">sei_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:26"><expr pos:start="27:9" pos:end="27:25"><name pos:start="27:9" pos:end="27:9">p</name> <operator pos:start="27:11" pos:end="27:12">+=</operator> <name pos:start="27:14" pos:end="27:25"><name pos:start="27:14" pos:end="27:15">x4</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:25">sei_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:25"><expr pos:start="29:9" pos:end="29:24"><name pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:10">x4</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:20">sei_size</name></name> <operator pos:start="29:22" pos:end="29:22">=</operator> <literal type="number" pos:start="29:24" pos:end="29:24">0</literal></expr>;</expr_stmt>

        <comment type="line" pos:start="31:9" pos:end="31:36">// why is x4-&gt;sei not freed?</comment>




    <for pos:start="36:5" pos:end="63:19">for <control pos:start="36:9" pos:end="36:30">(<init pos:start="36:10" pos:end="36:15"><expr pos:start="36:10" pos:end="36:14"><name pos:start="36:10" pos:end="36:10">i</name> <operator pos:start="36:12" pos:end="36:12">=</operator> <literal type="number" pos:start="36:14" pos:end="36:14">0</literal></expr>;</init> <condition pos:start="36:17" pos:end="36:25"><expr pos:start="36:17" pos:end="36:24"><name pos:start="36:17" pos:end="36:17">i</name> <operator pos:start="36:19" pos:end="36:19">&lt;</operator> <name pos:start="36:21" pos:end="36:24">nnal</name></expr>;</condition> <incr pos:start="36:27" pos:end="36:29"><expr pos:start="36:27" pos:end="36:29"><name pos:start="36:27" pos:end="36:27">i</name><operator pos:start="36:28" pos:end="36:29">++</operator></expr></incr>)</control><block pos:start="36:31" pos:end="63:19">{<block_content pos:start="40:9" pos:end="63:19">

        <comment type="block" pos:start="38:9" pos:end="38:45">/* Don't put the SEI in extradata. */</comment>

        <if_stmt pos:start="40:9" pos:end="63:19"><if pos:start="40:9" pos:end="63:19">if <condition pos:start="40:12" pos:end="40:50">(<expr pos:start="40:13" pos:end="40:49"><name pos:start="40:13" pos:end="40:20">skip_sei</name> <operator pos:start="40:22" pos:end="40:23">&amp;&amp;</operator> <name pos:start="40:25" pos:end="40:31"><name pos:start="40:25" pos:end="40:28">nals</name><index pos:start="40:29" pos:end="40:31">[<expr pos:start="40:30" pos:end="40:30"><name pos:start="40:30" pos:end="40:30">i</name></expr>]</index></name><operator pos:start="40:32" pos:end="40:32">.</operator><name pos:start="40:33" pos:end="40:38">i_type</name> <operator pos:start="40:40" pos:end="40:41">==</operator> <name pos:start="40:43" pos:end="40:49">NAL_SEI</name></expr>)</condition> <block pos:start="40:52" pos:end="63:19">{<block_content pos:start="42:13" pos:end="63:19">

            <expr_stmt pos:start="42:13" pos:end="42:45"><expr pos:start="42:13" pos:end="42:44"><name pos:start="42:13" pos:end="42:24"><name pos:start="42:13" pos:end="42:14">x4</name><operator pos:start="42:15" pos:end="42:16">-&gt;</operator><name pos:start="42:17" pos:end="42:24">sei_size</name></name> <operator pos:start="42:26" pos:end="42:26">=</operator> <name pos:start="42:28" pos:end="42:34"><name pos:start="42:28" pos:end="42:31">nals</name><index pos:start="42:32" pos:end="42:34">[<expr pos:start="42:33" pos:end="42:33"><name pos:start="42:33" pos:end="42:33">i</name></expr>]</index></name><operator pos:start="42:35" pos:end="42:35">.</operator><name pos:start="42:36" pos:end="42:44">i_payload</name></expr>;</expr_stmt>

            <expr_stmt pos:start="44:13" pos:end="44:51"><expr pos:start="44:13" pos:end="44:50"><name pos:start="44:13" pos:end="44:19"><name pos:start="44:13" pos:end="44:14">x4</name><operator pos:start="44:15" pos:end="44:16">-&gt;</operator><name pos:start="44:17" pos:end="44:19">sei</name></name>      <operator pos:start="44:26" pos:end="44:26">=</operator> <call pos:start="44:28" pos:end="44:50"><name pos:start="44:28" pos:end="44:36">av_malloc</name><argument_list pos:start="44:37" pos:end="44:50">(<argument pos:start="44:38" pos:end="44:49"><expr pos:start="44:38" pos:end="44:49"><name pos:start="44:38" pos:end="44:49"><name pos:start="44:38" pos:end="44:39">x4</name><operator pos:start="44:40" pos:end="44:41">-&gt;</operator><name pos:start="44:42" pos:end="44:49">sei_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="46:13" pos:end="46:66"><expr pos:start="46:13" pos:end="46:65"><call pos:start="46:13" pos:end="46:65"><name pos:start="46:13" pos:end="46:18">memcpy</name><argument_list pos:start="46:19" pos:end="46:65">(<argument pos:start="46:20" pos:end="46:26"><expr pos:start="46:20" pos:end="46:26"><name pos:start="46:20" pos:end="46:26"><name pos:start="46:20" pos:end="46:21">x4</name><operator pos:start="46:22" pos:end="46:23">-&gt;</operator><name pos:start="46:24" pos:end="46:26">sei</name></name></expr></argument>, <argument pos:start="46:29" pos:end="46:45"><expr pos:start="46:29" pos:end="46:45"><name pos:start="46:29" pos:end="46:35"><name pos:start="46:29" pos:end="46:32">nals</name><index pos:start="46:33" pos:end="46:35">[<expr pos:start="46:34" pos:end="46:34"><name pos:start="46:34" pos:end="46:34">i</name></expr>]</index></name><operator pos:start="46:36" pos:end="46:36">.</operator><name pos:start="46:37" pos:end="46:45">p_payload</name></expr></argument>, <argument pos:start="46:48" pos:end="46:64"><expr pos:start="46:48" pos:end="46:64"><name pos:start="46:48" pos:end="46:54"><name pos:start="46:48" pos:end="46:51">nals</name><index pos:start="46:52" pos:end="46:54">[<expr pos:start="46:53" pos:end="46:53"><name pos:start="46:53" pos:end="46:53">i</name></expr>]</index></name><operator pos:start="46:55" pos:end="46:55">.</operator><name pos:start="46:56" pos:end="46:64">i_payload</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="48:13" pos:end="48:21">continue;</continue>







        <expr_stmt pos:start="56:9" pos:end="56:56"><expr pos:start="56:9" pos:end="56:55"><call pos:start="56:9" pos:end="56:55"><name pos:start="56:9" pos:end="56:14">memcpy</name><argument_list pos:start="56:15" pos:end="56:55">(<argument pos:start="56:16" pos:end="56:16"><expr pos:start="56:16" pos:end="56:16"><name pos:start="56:16" pos:end="56:16">p</name></expr></argument>, <argument pos:start="56:19" pos:end="56:35"><expr pos:start="56:19" pos:end="56:35"><name pos:start="56:19" pos:end="56:25"><name pos:start="56:19" pos:end="56:22">nals</name><index pos:start="56:23" pos:end="56:25">[<expr pos:start="56:24" pos:end="56:24"><name pos:start="56:24" pos:end="56:24">i</name></expr>]</index></name><operator pos:start="56:26" pos:end="56:26">.</operator><name pos:start="56:27" pos:end="56:35">p_payload</name></expr></argument>, <argument pos:start="56:38" pos:end="56:54"><expr pos:start="56:38" pos:end="56:54"><name pos:start="56:38" pos:end="56:44"><name pos:start="56:38" pos:end="56:41">nals</name><index pos:start="56:42" pos:end="56:44">[<expr pos:start="56:43" pos:end="56:43"><name pos:start="56:43" pos:end="56:43">i</name></expr>]</index></name><operator pos:start="56:45" pos:end="56:45">.</operator><name pos:start="56:46" pos:end="56:54">i_payload</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="58:9" pos:end="58:31"><expr pos:start="58:9" pos:end="58:30"><name pos:start="58:9" pos:end="58:9">p</name> <operator pos:start="58:11" pos:end="58:12">+=</operator> <name pos:start="58:14" pos:end="58:20"><name pos:start="58:14" pos:end="58:17">nals</name><index pos:start="58:18" pos:end="58:20">[<expr pos:start="58:19" pos:end="58:19"><name pos:start="58:19" pos:end="58:19">i</name></expr>]</index></name><operator pos:start="58:21" pos:end="58:21">.</operator><name pos:start="58:22" pos:end="58:30">i_payload</name></expr>;</expr_stmt>




    <return pos:start="63:5" pos:end="63:19">return <expr pos:start="63:12" pos:end="63:18"><name pos:start="63:12" pos:end="63:12">p</name> <operator pos:start="63:14" pos:end="63:14">-</operator> <name pos:start="63:16" pos:end="63:18">buf</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>
</unit>
