<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14338.c" pos:tabs="8"><function pos:start="1:1" pos:end="261:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">mxf_read_partition_pack</name><parameter_list pos:start="1:35" pos:end="1:110">(<parameter pos:start="1:36" pos:end="1:44"><decl pos:start="1:36" pos:end="1:44"><type pos:start="1:36" pos:end="1:44"><name pos:start="1:36" pos:end="1:39">void</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">arg</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:61"><decl pos:start="1:47" pos:end="1:61"><type pos:start="1:47" pos:end="1:61"><name pos:start="1:47" pos:end="1:57">AVIOContext</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:61">pb</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:70"><decl pos:start="1:64" pos:end="1:70"><type pos:start="1:64" pos:end="1:70"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:70">tag</name></decl></parameter>, <parameter pos:start="1:73" pos:end="1:80"><decl pos:start="1:73" pos:end="1:80"><type pos:start="1:73" pos:end="1:80"><name pos:start="1:73" pos:end="1:75">int</name></type> <name pos:start="1:77" pos:end="1:80">size</name></decl></parameter>, <parameter pos:start="1:83" pos:end="1:89"><decl pos:start="1:83" pos:end="1:89"><type pos:start="1:83" pos:end="1:89"><name pos:start="1:83" pos:end="1:85">UID</name></type> <name pos:start="1:87" pos:end="1:89">uid</name></decl></parameter>, <parameter pos:start="1:92" pos:end="1:109"><decl pos:start="1:92" pos:end="1:109"><type pos:start="1:92" pos:end="1:109"><name pos:start="1:92" pos:end="1:98">int64_t</name></type> <name pos:start="1:100" pos:end="1:109">klv_offset</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="261:1">{<block_content pos:start="5:5" pos:end="259:13">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">MXFContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">mxf</name> <init pos:start="5:21" pos:end="5:25">= <expr pos:start="5:23" pos:end="5:25"><name pos:start="5:23" pos:end="5:25">arg</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">MXFPartition</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:27">partition</name></decl>, <decl pos:start="7:30" pos:end="7:38"><type ref="prev" pos:start="7:5" pos:end="7:18"><modifier pos:start="7:30" pos:end="7:30">*</modifier></type><name pos:start="7:31" pos:end="7:38">tmp_part</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:11"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">UID</name></type> <name pos:start="9:9" pos:end="9:10">op</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:29">footer_partition</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:35"><decl pos:start="13:5" pos:end="13:34"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:34">nb_essence_containers</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:102"><expr pos:start="17:5" pos:end="17:101"><name pos:start="17:5" pos:end="17:12">tmp_part</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <call pos:start="17:16" pos:end="17:101"><name pos:start="17:16" pos:end="17:31">av_realloc_array</name><argument_list pos:start="17:32" pos:end="17:101">(<argument pos:start="17:33" pos:end="17:47"><expr pos:start="17:33" pos:end="17:47"><name pos:start="17:33" pos:end="17:47"><name pos:start="17:33" pos:end="17:35">mxf</name><operator pos:start="17:36" pos:end="17:37">-&gt;</operator><name pos:start="17:38" pos:end="17:47">partitions</name></name></expr></argument>, <argument pos:start="17:50" pos:end="17:74"><expr pos:start="17:50" pos:end="17:74"><name pos:start="17:50" pos:end="17:70"><name pos:start="17:50" pos:end="17:52">mxf</name><operator pos:start="17:53" pos:end="17:54">-&gt;</operator><name pos:start="17:55" pos:end="17:70">partitions_count</name></name> <operator pos:start="17:72" pos:end="17:72">+</operator> <literal type="number" pos:start="17:74" pos:end="17:74">1</literal></expr></argument>, <argument pos:start="17:77" pos:end="17:100"><expr pos:start="17:77" pos:end="17:100"><sizeof pos:start="17:77" pos:end="17:100">sizeof<argument_list pos:start="17:83" pos:end="17:100">(<argument pos:start="17:84" pos:end="17:99"><expr pos:start="17:84" pos:end="17:99"><operator pos:start="17:84" pos:end="17:84">*</operator><name pos:start="17:85" pos:end="17:99"><name pos:start="17:85" pos:end="17:87">mxf</name><operator pos:start="17:88" pos:end="17:89">-&gt;</operator><name pos:start="17:90" pos:end="17:99">partitions</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="21:31"><if pos:start="19:5" pos:end="21:31">if <condition pos:start="19:8" pos:end="19:18">(<expr pos:start="19:9" pos:end="19:17"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:17">tmp_part</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:31"><block_content pos:start="21:9" pos:end="21:31">

        <return pos:start="21:9" pos:end="21:31">return <expr pos:start="21:16" pos:end="21:30"><call pos:start="21:16" pos:end="21:30"><name pos:start="21:16" pos:end="21:22">AVERROR</name><argument_list pos:start="21:23" pos:end="21:30">(<argument pos:start="21:24" pos:end="21:29"><expr pos:start="21:24" pos:end="21:29"><name pos:start="21:24" pos:end="21:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:31"><expr pos:start="23:5" pos:end="23:30"><name pos:start="23:5" pos:end="23:19"><name pos:start="23:5" pos:end="23:7">mxf</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:19">partitions</name></name> <operator pos:start="23:21" pos:end="23:21">=</operator> <name pos:start="23:23" pos:end="23:30">tmp_part</name></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="47:5"><if pos:start="27:5" pos:end="41:5">if <condition pos:start="27:8" pos:end="27:30">(<expr pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:11">mxf</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:29">parsing_backward</name></name></expr>)</condition> <block pos:start="27:32" pos:end="41:5">{<block_content pos:start="33:9" pos:end="39:91">

        <comment type="block" pos:start="29:9" pos:end="31:72">/* insert the new partition pack in the middle

         * this makes the entries in mxf-&gt;partitions sorted by offset */</comment>

        <expr_stmt pos:start="33:9" pos:end="37:96"><expr pos:start="33:9" pos:end="37:95"><call pos:start="33:9" pos:end="37:95"><name pos:start="33:9" pos:end="33:15">memmove</name><argument_list pos:start="33:16" pos:end="37:95">(<argument pos:start="33:17" pos:end="33:63"><expr pos:start="33:17" pos:end="33:63"><operator pos:start="33:17" pos:end="33:17">&amp;</operator><name pos:start="33:18" pos:end="33:63"><name pos:start="33:18" pos:end="33:20">mxf</name><operator pos:start="33:21" pos:end="33:22">-&gt;</operator><name pos:start="33:23" pos:end="33:32">partitions</name><index pos:start="33:33" pos:end="33:63">[<expr pos:start="33:34" pos:end="33:62"><name pos:start="33:34" pos:end="33:60"><name pos:start="33:34" pos:end="33:36">mxf</name><operator pos:start="33:37" pos:end="33:38">-&gt;</operator><name pos:start="33:39" pos:end="33:60">last_forward_partition</name></name><operator pos:start="33:61" pos:end="33:61">+</operator><literal type="number" pos:start="33:62" pos:end="33:62">1</literal></expr>]</index></name></expr></argument>,

                <argument pos:start="35:17" pos:end="35:61"><expr pos:start="35:17" pos:end="35:61"><operator pos:start="35:17" pos:end="35:17">&amp;</operator><name pos:start="35:18" pos:end="35:61"><name pos:start="35:18" pos:end="35:20">mxf</name><operator pos:start="35:21" pos:end="35:22">-&gt;</operator><name pos:start="35:23" pos:end="35:32">partitions</name><index pos:start="35:33" pos:end="35:61">[<expr pos:start="35:34" pos:end="35:60"><name pos:start="35:34" pos:end="35:60"><name pos:start="35:34" pos:end="35:36">mxf</name><operator pos:start="35:37" pos:end="35:38">-&gt;</operator><name pos:start="35:39" pos:end="35:60">last_forward_partition</name></name></expr>]</index></name></expr></argument>,

                <argument pos:start="37:17" pos:end="37:94"><expr pos:start="37:17" pos:end="37:94"><operator pos:start="37:17" pos:end="37:17">(</operator><name pos:start="37:18" pos:end="37:38"><name pos:start="37:18" pos:end="37:20">mxf</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:38">partitions_count</name></name> <operator pos:start="37:40" pos:end="37:40">-</operator> <name pos:start="37:42" pos:end="37:68"><name pos:start="37:42" pos:end="37:44">mxf</name><operator pos:start="37:45" pos:end="37:46">-&gt;</operator><name pos:start="37:47" pos:end="37:68">last_forward_partition</name></name><operator pos:start="37:69" pos:end="37:69">)</operator><operator pos:start="37:70" pos:end="37:70">*</operator><sizeof pos:start="37:71" pos:end="37:94">sizeof<argument_list pos:start="37:77" pos:end="37:94">(<argument pos:start="37:78" pos:end="37:93"><expr pos:start="37:78" pos:end="37:93"><operator pos:start="37:78" pos:end="37:78">*</operator><name pos:start="37:79" pos:end="37:93"><name pos:start="37:79" pos:end="37:81">mxf</name><operator pos:start="37:82" pos:end="37:83">-&gt;</operator><name pos:start="37:84" pos:end="37:93">partitions</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:91"><expr pos:start="39:9" pos:end="39:90"><name pos:start="39:9" pos:end="39:17">partition</name> <operator pos:start="39:19" pos:end="39:19">=</operator> <name pos:start="39:21" pos:end="39:42"><name pos:start="39:21" pos:end="39:23">mxf</name><operator pos:start="39:24" pos:end="39:25">-&gt;</operator><name pos:start="39:26" pos:end="39:42">current_partition</name></name> <operator pos:start="39:44" pos:end="39:44">=</operator> <operator pos:start="39:46" pos:end="39:46">&amp;</operator><name pos:start="39:47" pos:end="39:90"><name pos:start="39:47" pos:end="39:49">mxf</name><operator pos:start="39:50" pos:end="39:51">-&gt;</operator><name pos:start="39:52" pos:end="39:61">partitions</name><index pos:start="39:62" pos:end="39:90">[<expr pos:start="39:63" pos:end="39:89"><name pos:start="39:63" pos:end="39:89"><name pos:start="39:63" pos:end="39:65">mxf</name><operator pos:start="39:66" pos:end="39:67">-&gt;</operator><name pos:start="39:68" pos:end="39:89">last_forward_partition</name></name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="41:7" pos:end="47:5">else <block pos:start="41:12" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:85">

        <expr_stmt pos:start="43:9" pos:end="43:38"><expr pos:start="43:9" pos:end="43:37"><name pos:start="43:9" pos:end="43:35"><name pos:start="43:9" pos:end="43:11">mxf</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:35">last_forward_partition</name></name><operator pos:start="43:36" pos:end="43:37">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:85"><expr pos:start="45:9" pos:end="45:84"><name pos:start="45:9" pos:end="45:17">partition</name> <operator pos:start="45:19" pos:end="45:19">=</operator> <name pos:start="45:21" pos:end="45:42"><name pos:start="45:21" pos:end="45:23">mxf</name><operator pos:start="45:24" pos:end="45:25">-&gt;</operator><name pos:start="45:26" pos:end="45:42">current_partition</name></name> <operator pos:start="45:44" pos:end="45:44">=</operator> <operator pos:start="45:46" pos:end="45:46">&amp;</operator><name pos:start="45:47" pos:end="45:84"><name pos:start="45:47" pos:end="45:49">mxf</name><operator pos:start="45:50" pos:end="45:51">-&gt;</operator><name pos:start="45:52" pos:end="45:61">partitions</name><index pos:start="45:62" pos:end="45:84">[<expr pos:start="45:63" pos:end="45:83"><name pos:start="45:63" pos:end="45:83"><name pos:start="45:63" pos:end="45:65">mxf</name><operator pos:start="45:66" pos:end="45:67">-&gt;</operator><name pos:start="45:68" pos:end="45:83">partitions_count</name></name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:45"><expr pos:start="51:5" pos:end="51:44"><call pos:start="51:5" pos:end="51:44"><name pos:start="51:5" pos:end="51:10">memset</name><argument_list pos:start="51:11" pos:end="51:44">(<argument pos:start="51:12" pos:end="51:20"><expr pos:start="51:12" pos:end="51:20"><name pos:start="51:12" pos:end="51:20">partition</name></expr></argument>, <argument pos:start="51:23" pos:end="51:23"><expr pos:start="51:23" pos:end="51:23"><literal type="number" pos:start="51:23" pos:end="51:23">0</literal></expr></argument>, <argument pos:start="51:26" pos:end="51:43"><expr pos:start="51:26" pos:end="51:43"><sizeof pos:start="51:26" pos:end="51:43">sizeof<argument_list pos:start="51:32" pos:end="51:43">(<argument pos:start="51:33" pos:end="51:42"><expr pos:start="51:33" pos:end="51:42"><operator pos:start="51:33" pos:end="51:33">*</operator><name pos:start="51:34" pos:end="51:42">partition</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:28"><expr pos:start="53:5" pos:end="53:27"><name pos:start="53:5" pos:end="53:25"><name pos:start="53:5" pos:end="53:7">mxf</name><operator pos:start="53:8" pos:end="53:9">-&gt;</operator><name pos:start="53:10" pos:end="53:25">partitions_count</name></name><operator pos:start="53:26" pos:end="53:27">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:63"><expr pos:start="55:5" pos:end="55:62"><name pos:start="55:5" pos:end="55:26"><name pos:start="55:5" pos:end="55:13">partition</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:26">pack_length</name></name> <operator pos:start="55:28" pos:end="55:28">=</operator> <call pos:start="55:30" pos:end="55:42"><name pos:start="55:30" pos:end="55:38">avio_tell</name><argument_list pos:start="55:39" pos:end="55:42">(<argument pos:start="55:40" pos:end="55:41"><expr pos:start="55:40" pos:end="55:41"><name pos:start="55:40" pos:end="55:41">pb</name></expr></argument>)</argument_list></call> <operator pos:start="55:44" pos:end="55:44">-</operator> <name pos:start="55:46" pos:end="55:55">klv_offset</name> <operator pos:start="55:57" pos:end="55:57">+</operator> <name pos:start="55:59" pos:end="55:62">size</name></expr>;</expr_stmt>



    <switch pos:start="59:5" pos:end="85:5">switch<condition pos:start="59:11" pos:end="59:19">(<expr pos:start="59:12" pos:end="59:18"><name pos:start="59:12" pos:end="59:18"><name pos:start="59:12" pos:end="59:14">uid</name><index pos:start="59:15" pos:end="59:18">[<expr pos:start="59:16" pos:end="59:17"><literal type="number" pos:start="59:16" pos:end="59:17">13</literal></expr>]</index></name></expr>)</condition> <block pos:start="59:21" pos:end="85:5">{<block_content pos:start="61:5" pos:end="83:35">

    <case pos:start="61:5" pos:end="61:11">case <expr pos:start="61:10" pos:end="61:10"><literal type="number" pos:start="61:10" pos:end="61:10">2</literal></expr>:</case>

        <expr_stmt pos:start="63:9" pos:end="63:33"><expr pos:start="63:9" pos:end="63:32"><name pos:start="63:9" pos:end="63:23"><name pos:start="63:9" pos:end="63:17">partition</name><operator pos:start="63:18" pos:end="63:19">-&gt;</operator><name pos:start="63:20" pos:end="63:23">type</name></name> <operator pos:start="63:25" pos:end="63:25">=</operator> <name pos:start="63:27" pos:end="63:32">Header</name></expr>;</expr_stmt>

        <break pos:start="65:9" pos:end="65:14">break;</break>

    <case pos:start="67:5" pos:end="67:11">case <expr pos:start="67:10" pos:end="67:10"><literal type="number" pos:start="67:10" pos:end="67:10">3</literal></expr>:</case>

        <expr_stmt pos:start="69:9" pos:end="69:40"><expr pos:start="69:9" pos:end="69:39"><name pos:start="69:9" pos:end="69:23"><name pos:start="69:9" pos:end="69:17">partition</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:23">type</name></name> <operator pos:start="69:25" pos:end="69:25">=</operator> <name pos:start="69:27" pos:end="69:39">BodyPartition</name></expr>;</expr_stmt>

        <break pos:start="71:9" pos:end="71:14">break;</break>

    <case pos:start="73:5" pos:end="73:11">case <expr pos:start="73:10" pos:end="73:10"><literal type="number" pos:start="73:10" pos:end="73:10">4</literal></expr>:</case>

        <expr_stmt pos:start="75:9" pos:end="75:33"><expr pos:start="75:9" pos:end="75:32"><name pos:start="75:9" pos:end="75:23"><name pos:start="75:9" pos:end="75:17">partition</name><operator pos:start="75:18" pos:end="75:19">-&gt;</operator><name pos:start="75:20" pos:end="75:23">type</name></name> <operator pos:start="75:25" pos:end="75:25">=</operator> <name pos:start="75:27" pos:end="75:32">Footer</name></expr>;</expr_stmt>

        <break pos:start="77:9" pos:end="77:14">break;</break>

    <default pos:start="79:5" pos:end="79:12">default:</default>

        <expr_stmt pos:start="81:9" pos:end="81:78"><expr pos:start="81:9" pos:end="81:77"><call pos:start="81:9" pos:end="81:77"><name pos:start="81:9" pos:end="81:14">av_log</name><argument_list pos:start="81:15" pos:end="81:77">(<argument pos:start="81:16" pos:end="81:22"><expr pos:start="81:16" pos:end="81:22"><name pos:start="81:16" pos:end="81:22"><name pos:start="81:16" pos:end="81:18">mxf</name><operator pos:start="81:19" pos:end="81:20">-&gt;</operator><name pos:start="81:21" pos:end="81:22">fc</name></name></expr></argument>, <argument pos:start="81:25" pos:end="81:36"><expr pos:start="81:25" pos:end="81:36"><name pos:start="81:25" pos:end="81:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="81:39" pos:end="81:67"><expr pos:start="81:39" pos:end="81:67"><literal type="string" pos:start="81:39" pos:end="81:67">"unknown partition type %i\n"</literal></expr></argument>, <argument pos:start="81:70" pos:end="81:76"><expr pos:start="81:70" pos:end="81:76"><name pos:start="81:70" pos:end="81:76"><name pos:start="81:70" pos:end="81:72">uid</name><index pos:start="81:73" pos:end="81:76">[<expr pos:start="81:74" pos:end="81:75"><literal type="number" pos:start="81:74" pos:end="81:75">13</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="83:9" pos:end="83:35">return <expr pos:start="83:16" pos:end="83:34"><name pos:start="83:16" pos:end="83:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></switch>



    <comment type="block" pos:start="89:5" pos:end="89:86">/* consider both footers to be closed (there is only Footer and CompleteFooter) */</comment>

    <expr_stmt pos:start="91:5" pos:end="91:68"><expr pos:start="91:5" pos:end="91:67"><name pos:start="91:5" pos:end="91:21"><name pos:start="91:5" pos:end="91:13">partition</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:21">closed</name></name> <operator pos:start="91:23" pos:end="91:23">=</operator> <name pos:start="91:25" pos:end="91:39"><name pos:start="91:25" pos:end="91:33">partition</name><operator pos:start="91:34" pos:end="91:35">-&gt;</operator><name pos:start="91:36" pos:end="91:39">type</name></name> <operator pos:start="91:41" pos:end="91:42">==</operator> <name pos:start="91:44" pos:end="91:49">Footer</name> <operator pos:start="91:51" pos:end="91:52">||</operator> <operator pos:start="91:54" pos:end="91:54">!</operator><operator pos:start="91:55" pos:end="91:55">(</operator><name pos:start="91:56" pos:end="91:62"><name pos:start="91:56" pos:end="91:58">uid</name><index pos:start="91:59" pos:end="91:62">[<expr pos:start="91:60" pos:end="91:61"><literal type="number" pos:start="91:60" pos:end="91:61">14</literal></expr>]</index></name> <operator pos:start="91:64" pos:end="91:64">&amp;</operator> <literal type="number" pos:start="91:66" pos:end="91:66">1</literal><operator pos:start="91:67" pos:end="91:67">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:38"><expr pos:start="93:5" pos:end="93:37"><name pos:start="93:5" pos:end="93:23"><name pos:start="93:5" pos:end="93:13">partition</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:23">complete</name></name> <operator pos:start="93:25" pos:end="93:25">=</operator> <name pos:start="93:27" pos:end="93:33"><name pos:start="93:27" pos:end="93:29">uid</name><index pos:start="93:30" pos:end="93:33">[<expr pos:start="93:31" pos:end="93:32"><literal type="number" pos:start="93:31" pos:end="93:32">14</literal></expr>]</index></name> <operator pos:start="93:35" pos:end="93:35">&gt;</operator> <literal type="number" pos:start="93:37" pos:end="93:37">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:21"><expr pos:start="95:5" pos:end="95:20"><call pos:start="95:5" pos:end="95:20"><name pos:start="95:5" pos:end="95:13">avio_skip</name><argument_list pos:start="95:14" pos:end="95:20">(<argument pos:start="95:15" pos:end="95:16"><expr pos:start="95:15" pos:end="95:16"><name pos:start="95:15" pos:end="95:16">pb</name></expr></argument>, <argument pos:start="95:19" pos:end="95:19"><expr pos:start="95:19" pos:end="95:19"><literal type="number" pos:start="95:19" pos:end="95:19">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:40"><expr pos:start="97:5" pos:end="97:39"><name pos:start="97:5" pos:end="97:23"><name pos:start="97:5" pos:end="97:13">partition</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:23">kag_size</name></name> <operator pos:start="97:25" pos:end="97:25">=</operator> <call pos:start="97:27" pos:end="97:39"><name pos:start="97:27" pos:end="97:35">avio_rb32</name><argument_list pos:start="97:36" pos:end="97:39">(<argument pos:start="97:37" pos:end="97:38"><expr pos:start="97:37" pos:end="97:38"><name pos:start="97:37" pos:end="97:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:46"><expr pos:start="99:5" pos:end="99:45"><name pos:start="99:5" pos:end="99:29"><name pos:start="99:5" pos:end="99:13">partition</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:29">this_partition</name></name> <operator pos:start="99:31" pos:end="99:31">=</operator> <call pos:start="99:33" pos:end="99:45"><name pos:start="99:33" pos:end="99:41">avio_rb64</name><argument_list pos:start="99:42" pos:end="99:45">(<argument pos:start="99:43" pos:end="99:44"><expr pos:start="99:43" pos:end="99:44"><name pos:start="99:43" pos:end="99:44">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:50"><expr pos:start="101:5" pos:end="101:49"><name pos:start="101:5" pos:end="101:33"><name pos:start="101:5" pos:end="101:13">partition</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:33">previous_partition</name></name> <operator pos:start="101:35" pos:end="101:35">=</operator> <call pos:start="101:37" pos:end="101:49"><name pos:start="101:37" pos:end="101:45">avio_rb64</name><argument_list pos:start="101:46" pos:end="101:49">(<argument pos:start="101:47" pos:end="101:48"><expr pos:start="101:47" pos:end="101:48"><name pos:start="101:47" pos:end="101:48">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:37"><expr pos:start="103:5" pos:end="103:36"><name pos:start="103:5" pos:end="103:20">footer_partition</name> <operator pos:start="103:22" pos:end="103:22">=</operator> <call pos:start="103:24" pos:end="103:36"><name pos:start="103:24" pos:end="103:32">avio_rb64</name><argument_list pos:start="103:33" pos:end="103:36">(<argument pos:start="103:34" pos:end="103:35"><expr pos:start="103:34" pos:end="103:35"><name pos:start="103:34" pos:end="103:35">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:49"><expr pos:start="105:5" pos:end="105:48"><name pos:start="105:5" pos:end="105:32"><name pos:start="105:5" pos:end="105:13">partition</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:32">header_byte_count</name></name> <operator pos:start="105:34" pos:end="105:34">=</operator> <call pos:start="105:36" pos:end="105:48"><name pos:start="105:36" pos:end="105:44">avio_rb64</name><argument_list pos:start="105:45" pos:end="105:48">(<argument pos:start="105:46" pos:end="105:47"><expr pos:start="105:46" pos:end="105:47"><name pos:start="105:46" pos:end="105:47">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:48"><expr pos:start="107:5" pos:end="107:47"><name pos:start="107:5" pos:end="107:31"><name pos:start="107:5" pos:end="107:13">partition</name><operator pos:start="107:14" pos:end="107:15">-&gt;</operator><name pos:start="107:16" pos:end="107:31">index_byte_count</name></name> <operator pos:start="107:33" pos:end="107:33">=</operator> <call pos:start="107:35" pos:end="107:47"><name pos:start="107:35" pos:end="107:43">avio_rb64</name><argument_list pos:start="107:44" pos:end="107:47">(<argument pos:start="107:45" pos:end="107:46"><expr pos:start="107:45" pos:end="107:46"><name pos:start="107:45" pos:end="107:46">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:41"><expr pos:start="109:5" pos:end="109:40"><name pos:start="109:5" pos:end="109:24"><name pos:start="109:5" pos:end="109:13">partition</name><operator pos:start="109:14" pos:end="109:15">-&gt;</operator><name pos:start="109:16" pos:end="109:24">index_sid</name></name> <operator pos:start="109:26" pos:end="109:26">=</operator> <call pos:start="109:28" pos:end="109:40"><name pos:start="109:28" pos:end="109:36">avio_rb32</name><argument_list pos:start="109:37" pos:end="109:40">(<argument pos:start="109:38" pos:end="109:39"><expr pos:start="109:38" pos:end="109:39"><name pos:start="109:38" pos:end="109:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:21"><expr pos:start="111:5" pos:end="111:20"><call pos:start="111:5" pos:end="111:20"><name pos:start="111:5" pos:end="111:13">avio_skip</name><argument_list pos:start="111:14" pos:end="111:20">(<argument pos:start="111:15" pos:end="111:16"><expr pos:start="111:15" pos:end="111:16"><name pos:start="111:15" pos:end="111:16">pb</name></expr></argument>, <argument pos:start="111:19" pos:end="111:19"><expr pos:start="111:19" pos:end="111:19"><literal type="number" pos:start="111:19" pos:end="111:19">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:40"><expr pos:start="113:5" pos:end="113:39"><name pos:start="113:5" pos:end="113:23"><name pos:start="113:5" pos:end="113:13">partition</name><operator pos:start="113:14" pos:end="113:15">-&gt;</operator><name pos:start="113:16" pos:end="113:23">body_sid</name></name> <operator pos:start="113:25" pos:end="113:25">=</operator> <call pos:start="113:27" pos:end="113:39"><name pos:start="113:27" pos:end="113:35">avio_rb32</name><argument_list pos:start="113:36" pos:end="113:39">(<argument pos:start="113:37" pos:end="113:38"><expr pos:start="113:37" pos:end="113:38"><name pos:start="113:37" pos:end="113:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:35"><expr pos:start="115:5" pos:end="115:34"><call pos:start="115:5" pos:end="115:34"><name pos:start="115:5" pos:end="115:13">avio_read</name><argument_list pos:start="115:14" pos:end="115:34">(<argument pos:start="115:15" pos:end="115:16"><expr pos:start="115:15" pos:end="115:16"><name pos:start="115:15" pos:end="115:16">pb</name></expr></argument>, <argument pos:start="115:19" pos:end="115:20"><expr pos:start="115:19" pos:end="115:20"><name pos:start="115:19" pos:end="115:20">op</name></expr></argument>, <argument pos:start="115:23" pos:end="115:33"><expr pos:start="115:23" pos:end="115:33"><sizeof pos:start="115:23" pos:end="115:33">sizeof<argument_list pos:start="115:29" pos:end="115:33">(<argument pos:start="115:30" pos:end="115:32"><expr pos:start="115:30" pos:end="115:32"><name pos:start="115:30" pos:end="115:32">UID</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:42"><expr pos:start="117:5" pos:end="117:41"><name pos:start="117:5" pos:end="117:25">nb_essence_containers</name> <operator pos:start="117:27" pos:end="117:27">=</operator> <call pos:start="117:29" pos:end="117:41"><name pos:start="117:29" pos:end="117:37">avio_rb32</name><argument_list pos:start="117:38" pos:end="117:41">(<argument pos:start="117:39" pos:end="117:40"><expr pos:start="117:39" pos:end="117:40"><name pos:start="117:39" pos:end="117:40">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="121:5" pos:end="121:69">/* some files don'thave FooterPartition set in every partition */</comment>

    <if_stmt pos:start="123:5" pos:end="139:5"><if pos:start="123:5" pos:end="139:5">if <condition pos:start="123:8" pos:end="123:25">(<expr pos:start="123:9" pos:end="123:24"><name pos:start="123:9" pos:end="123:24">footer_partition</name></expr>)</condition> <block pos:start="123:27" pos:end="139:5">{<block_content pos:start="125:9" pos:end="137:9">

        <if_stmt pos:start="125:9" pos:end="137:9"><if pos:start="125:9" pos:end="133:9">if <condition pos:start="125:12" pos:end="125:79">(<expr pos:start="125:13" pos:end="125:78"><name pos:start="125:13" pos:end="125:33"><name pos:start="125:13" pos:end="125:15">mxf</name><operator pos:start="125:16" pos:end="125:17">-&gt;</operator><name pos:start="125:18" pos:end="125:33">footer_partition</name></name> <operator pos:start="125:35" pos:end="125:36">&amp;&amp;</operator> <name pos:start="125:38" pos:end="125:58"><name pos:start="125:38" pos:end="125:40">mxf</name><operator pos:start="125:41" pos:end="125:42">-&gt;</operator><name pos:start="125:43" pos:end="125:58">footer_partition</name></name> <operator pos:start="125:60" pos:end="125:61">!=</operator> <name pos:start="125:63" pos:end="125:78">footer_partition</name></expr>)</condition> <block pos:start="125:81" pos:end="133:9">{<block_content pos:start="127:13" pos:end="131:60">

            <expr_stmt pos:start="127:13" pos:end="131:60"><expr pos:start="127:13" pos:end="131:59"><call pos:start="127:13" pos:end="131:59"><name pos:start="127:13" pos:end="127:18">av_log</name><argument_list pos:start="127:19" pos:end="131:59">(<argument pos:start="127:20" pos:end="127:26"><expr pos:start="127:20" pos:end="127:26"><name pos:start="127:20" pos:end="127:26"><name pos:start="127:20" pos:end="127:22">mxf</name><operator pos:start="127:23" pos:end="127:24">-&gt;</operator><name pos:start="127:25" pos:end="127:26">fc</name></name></expr></argument>, <argument pos:start="127:29" pos:end="127:40"><expr pos:start="127:29" pos:end="127:40"><name pos:start="127:29" pos:end="127:40">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="129:20" pos:end="129:81"><expr pos:start="129:20" pos:end="129:81"><literal type="string" pos:start="129:20" pos:end="129:58">"inconsistent FooterPartition value: %"</literal><name pos:start="129:59" pos:end="129:64">PRIu64</name><literal type="string" pos:start="129:65" pos:end="129:71">" != %"</literal><name pos:start="129:72" pos:end="129:77">PRIu64</name><literal type="string" pos:start="129:78" pos:end="129:81">"\n"</literal></expr></argument>,

                   <argument pos:start="131:20" pos:end="131:40"><expr pos:start="131:20" pos:end="131:40"><name pos:start="131:20" pos:end="131:40"><name pos:start="131:20" pos:end="131:22">mxf</name><operator pos:start="131:23" pos:end="131:24">-&gt;</operator><name pos:start="131:25" pos:end="131:40">footer_partition</name></name></expr></argument>, <argument pos:start="131:43" pos:end="131:58"><expr pos:start="131:43" pos:end="131:58"><name pos:start="131:43" pos:end="131:58">footer_partition</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="133:11" pos:end="137:9">else <block pos:start="133:16" pos:end="137:9">{<block_content pos:start="135:13" pos:end="135:53">

            <expr_stmt pos:start="135:13" pos:end="135:53"><expr pos:start="135:13" pos:end="135:52"><name pos:start="135:13" pos:end="135:33"><name pos:start="135:13" pos:end="135:15">mxf</name><operator pos:start="135:16" pos:end="135:17">-&gt;</operator><name pos:start="135:18" pos:end="135:33">footer_partition</name></name> <operator pos:start="135:35" pos:end="135:35">=</operator> <name pos:start="135:37" pos:end="135:52">footer_partition</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="143:5" pos:end="155:55"><expr pos:start="143:5" pos:end="155:54"><call pos:start="143:5" pos:end="155:54"><name pos:start="143:5" pos:end="143:11">av_dlog</name><argument_list pos:start="143:12" pos:end="155:54">(<argument pos:start="143:13" pos:end="143:19"><expr pos:start="143:13" pos:end="143:19"><name pos:start="143:13" pos:end="143:19"><name pos:start="143:13" pos:end="143:15">mxf</name><operator pos:start="143:16" pos:end="143:17">-&gt;</operator><name pos:start="143:18" pos:end="143:19">fc</name></name></expr></argument>,

            <argument pos:start="145:13" pos:end="149:74"><expr pos:start="145:13" pos:end="149:74"><literal type="string" pos:start="145:13" pos:end="145:48">"PartitionPack: ThisPartition = 0x%"</literal><name pos:start="145:49" pos:end="145:54">PRIX64</name>

            <literal type="string" pos:start="147:13" pos:end="147:39">", PreviousPartition = 0x%"</literal><name pos:start="147:40" pos:end="147:45">PRIX64</name><literal type="string" pos:start="147:46" pos:end="147:49">", "</literal>

            <literal type="string" pos:start="149:13" pos:end="149:35">"FooterPartition = 0x%"</literal><name pos:start="149:36" pos:end="149:41">PRIX64</name><literal type="string" pos:start="149:42" pos:end="149:74">", IndexSID = %i, BodySID = %i\n"</literal></expr></argument>,

            <argument pos:start="151:13" pos:end="151:37"><expr pos:start="151:13" pos:end="151:37"><name pos:start="151:13" pos:end="151:37"><name pos:start="151:13" pos:end="151:21">partition</name><operator pos:start="151:22" pos:end="151:23">-&gt;</operator><name pos:start="151:24" pos:end="151:37">this_partition</name></name></expr></argument>,

            <argument pos:start="153:13" pos:end="153:41"><expr pos:start="153:13" pos:end="153:41"><name pos:start="153:13" pos:end="153:41"><name pos:start="153:13" pos:end="153:21">partition</name><operator pos:start="153:22" pos:end="153:23">-&gt;</operator><name pos:start="153:24" pos:end="153:41">previous_partition</name></name></expr></argument>, <argument pos:start="153:44" pos:end="153:59"><expr pos:start="153:44" pos:end="153:59"><name pos:start="153:44" pos:end="153:59">footer_partition</name></expr></argument>,

            <argument pos:start="155:13" pos:end="155:32"><expr pos:start="155:13" pos:end="155:32"><name pos:start="155:13" pos:end="155:32"><name pos:start="155:13" pos:end="155:21">partition</name><operator pos:start="155:22" pos:end="155:23">-&gt;</operator><name pos:start="155:24" pos:end="155:32">index_sid</name></name></expr></argument>, <argument pos:start="155:35" pos:end="155:53"><expr pos:start="155:35" pos:end="155:53"><name pos:start="155:35" pos:end="155:53"><name pos:start="155:35" pos:end="155:43">partition</name><operator pos:start="155:44" pos:end="155:45">-&gt;</operator><name pos:start="155:46" pos:end="155:53">body_sid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="159:5" pos:end="159:47">/* sanity check PreviousPartition if set */</comment>

    <if_stmt pos:start="161:5" pos:end="171:5"><if pos:start="161:5" pos:end="171:5">if <condition pos:start="161:8" pos:end="163:66">(<expr pos:start="161:9" pos:end="163:65"><name pos:start="161:9" pos:end="161:37"><name pos:start="161:9" pos:end="161:17">partition</name><operator pos:start="161:18" pos:end="161:19">-&gt;</operator><name pos:start="161:20" pos:end="161:37">previous_partition</name></name> <operator pos:start="161:39" pos:end="161:40">&amp;&amp;</operator>

        <name pos:start="163:9" pos:end="163:19"><name pos:start="163:9" pos:end="163:11">mxf</name><operator pos:start="163:12" pos:end="163:13">-&gt;</operator><name pos:start="163:14" pos:end="163:19">run_in</name></name> <operator pos:start="163:21" pos:end="163:21">+</operator> <name pos:start="163:23" pos:end="163:51"><name pos:start="163:23" pos:end="163:31">partition</name><operator pos:start="163:32" pos:end="163:33">-&gt;</operator><name pos:start="163:34" pos:end="163:51">previous_partition</name></name> <operator pos:start="163:53" pos:end="163:54">&gt;=</operator> <name pos:start="163:56" pos:end="163:65">klv_offset</name></expr>)</condition> <block pos:start="163:68" pos:end="171:5">{<block_content pos:start="165:9" pos:end="169:35">

        <expr_stmt pos:start="165:9" pos:end="167:74"><expr pos:start="165:9" pos:end="167:73"><call pos:start="165:9" pos:end="167:73"><name pos:start="165:9" pos:end="165:14">av_log</name><argument_list pos:start="165:15" pos:end="167:73">(<argument pos:start="165:16" pos:end="165:22"><expr pos:start="165:16" pos:end="165:22"><name pos:start="165:16" pos:end="165:22"><name pos:start="165:16" pos:end="165:18">mxf</name><operator pos:start="165:19" pos:end="165:20">-&gt;</operator><name pos:start="165:21" pos:end="165:22">fc</name></name></expr></argument>, <argument pos:start="165:25" pos:end="165:36"><expr pos:start="165:25" pos:end="165:36"><name pos:start="165:25" pos:end="165:36">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="167:16" pos:end="167:72"><expr pos:start="167:16" pos:end="167:72"><literal type="string" pos:start="167:16" pos:end="167:72">"PreviousPartition points to this partition or forward\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="169:9" pos:end="169:35">return <expr pos:start="169:16" pos:end="169:34"><name pos:start="169:16" pos:end="169:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="175:5" pos:end="233:5"><if pos:start="175:5" pos:end="175:56">if      <condition pos:start="175:13" pos:end="175:40">(<expr pos:start="175:14" pos:end="175:39"><name pos:start="175:14" pos:end="175:19"><name pos:start="175:14" pos:end="175:15">op</name><index pos:start="175:16" pos:end="175:19">[<expr pos:start="175:17" pos:end="175:18"><literal type="number" pos:start="175:17" pos:end="175:18">12</literal></expr>]</index></name> <operator pos:start="175:21" pos:end="175:22">==</operator> <literal type="number" pos:start="175:24" pos:end="175:24">1</literal> <operator pos:start="175:26" pos:end="175:27">&amp;&amp;</operator> <name pos:start="175:29" pos:end="175:34"><name pos:start="175:29" pos:end="175:30">op</name><index pos:start="175:31" pos:end="175:34">[<expr pos:start="175:32" pos:end="175:33"><literal type="number" pos:start="175:32" pos:end="175:33">13</literal></expr>]</index></name> <operator pos:start="175:36" pos:end="175:37">==</operator> <literal type="number" pos:start="175:39" pos:end="175:39">1</literal></expr>)</condition><block type="pseudo" pos:start="175:42" pos:end="175:56"><block_content pos:start="175:42" pos:end="175:56"> <expr_stmt pos:start="175:42" pos:end="175:56"><expr pos:start="175:42" pos:end="175:55"><name pos:start="175:42" pos:end="175:48"><name pos:start="175:42" pos:end="175:44">mxf</name><operator pos:start="175:45" pos:end="175:46">-&gt;</operator><name pos:start="175:47" pos:end="175:48">op</name></name> <operator pos:start="175:50" pos:end="175:50">=</operator> <name pos:start="175:52" pos:end="175:55">OP1a</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="177:5" pos:end="177:56">else if <condition pos:start="177:13" pos:end="177:40">(<expr pos:start="177:14" pos:end="177:39"><name pos:start="177:14" pos:end="177:19"><name pos:start="177:14" pos:end="177:15">op</name><index pos:start="177:16" pos:end="177:19">[<expr pos:start="177:17" pos:end="177:18"><literal type="number" pos:start="177:17" pos:end="177:18">12</literal></expr>]</index></name> <operator pos:start="177:21" pos:end="177:22">==</operator> <literal type="number" pos:start="177:24" pos:end="177:24">1</literal> <operator pos:start="177:26" pos:end="177:27">&amp;&amp;</operator> <name pos:start="177:29" pos:end="177:34"><name pos:start="177:29" pos:end="177:30">op</name><index pos:start="177:31" pos:end="177:34">[<expr pos:start="177:32" pos:end="177:33"><literal type="number" pos:start="177:32" pos:end="177:33">13</literal></expr>]</index></name> <operator pos:start="177:36" pos:end="177:37">==</operator> <literal type="number" pos:start="177:39" pos:end="177:39">2</literal></expr>)</condition><block type="pseudo" pos:start="177:42" pos:end="177:56"><block_content pos:start="177:42" pos:end="177:56"> <expr_stmt pos:start="177:42" pos:end="177:56"><expr pos:start="177:42" pos:end="177:55"><name pos:start="177:42" pos:end="177:48"><name pos:start="177:42" pos:end="177:44">mxf</name><operator pos:start="177:45" pos:end="177:46">-&gt;</operator><name pos:start="177:47" pos:end="177:48">op</name></name> <operator pos:start="177:50" pos:end="177:50">=</operator> <name pos:start="177:52" pos:end="177:55">OP1b</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="179:5" pos:end="179:56">else if <condition pos:start="179:13" pos:end="179:40">(<expr pos:start="179:14" pos:end="179:39"><name pos:start="179:14" pos:end="179:19"><name pos:start="179:14" pos:end="179:15">op</name><index pos:start="179:16" pos:end="179:19">[<expr pos:start="179:17" pos:end="179:18"><literal type="number" pos:start="179:17" pos:end="179:18">12</literal></expr>]</index></name> <operator pos:start="179:21" pos:end="179:22">==</operator> <literal type="number" pos:start="179:24" pos:end="179:24">1</literal> <operator pos:start="179:26" pos:end="179:27">&amp;&amp;</operator> <name pos:start="179:29" pos:end="179:34"><name pos:start="179:29" pos:end="179:30">op</name><index pos:start="179:31" pos:end="179:34">[<expr pos:start="179:32" pos:end="179:33"><literal type="number" pos:start="179:32" pos:end="179:33">13</literal></expr>]</index></name> <operator pos:start="179:36" pos:end="179:37">==</operator> <literal type="number" pos:start="179:39" pos:end="179:39">3</literal></expr>)</condition><block type="pseudo" pos:start="179:42" pos:end="179:56"><block_content pos:start="179:42" pos:end="179:56"> <expr_stmt pos:start="179:42" pos:end="179:56"><expr pos:start="179:42" pos:end="179:55"><name pos:start="179:42" pos:end="179:48"><name pos:start="179:42" pos:end="179:44">mxf</name><operator pos:start="179:45" pos:end="179:46">-&gt;</operator><name pos:start="179:47" pos:end="179:48">op</name></name> <operator pos:start="179:50" pos:end="179:50">=</operator> <name pos:start="179:52" pos:end="179:55">OP1c</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="181:5" pos:end="181:56">else if <condition pos:start="181:13" pos:end="181:40">(<expr pos:start="181:14" pos:end="181:39"><name pos:start="181:14" pos:end="181:19"><name pos:start="181:14" pos:end="181:15">op</name><index pos:start="181:16" pos:end="181:19">[<expr pos:start="181:17" pos:end="181:18"><literal type="number" pos:start="181:17" pos:end="181:18">12</literal></expr>]</index></name> <operator pos:start="181:21" pos:end="181:22">==</operator> <literal type="number" pos:start="181:24" pos:end="181:24">2</literal> <operator pos:start="181:26" pos:end="181:27">&amp;&amp;</operator> <name pos:start="181:29" pos:end="181:34"><name pos:start="181:29" pos:end="181:30">op</name><index pos:start="181:31" pos:end="181:34">[<expr pos:start="181:32" pos:end="181:33"><literal type="number" pos:start="181:32" pos:end="181:33">13</literal></expr>]</index></name> <operator pos:start="181:36" pos:end="181:37">==</operator> <literal type="number" pos:start="181:39" pos:end="181:39">1</literal></expr>)</condition><block type="pseudo" pos:start="181:42" pos:end="181:56"><block_content pos:start="181:42" pos:end="181:56"> <expr_stmt pos:start="181:42" pos:end="181:56"><expr pos:start="181:42" pos:end="181:55"><name pos:start="181:42" pos:end="181:48"><name pos:start="181:42" pos:end="181:44">mxf</name><operator pos:start="181:45" pos:end="181:46">-&gt;</operator><name pos:start="181:47" pos:end="181:48">op</name></name> <operator pos:start="181:50" pos:end="181:50">=</operator> <name pos:start="181:52" pos:end="181:55">OP2a</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="183:5" pos:end="183:56">else if <condition pos:start="183:13" pos:end="183:40">(<expr pos:start="183:14" pos:end="183:39"><name pos:start="183:14" pos:end="183:19"><name pos:start="183:14" pos:end="183:15">op</name><index pos:start="183:16" pos:end="183:19">[<expr pos:start="183:17" pos:end="183:18"><literal type="number" pos:start="183:17" pos:end="183:18">12</literal></expr>]</index></name> <operator pos:start="183:21" pos:end="183:22">==</operator> <literal type="number" pos:start="183:24" pos:end="183:24">2</literal> <operator pos:start="183:26" pos:end="183:27">&amp;&amp;</operator> <name pos:start="183:29" pos:end="183:34"><name pos:start="183:29" pos:end="183:30">op</name><index pos:start="183:31" pos:end="183:34">[<expr pos:start="183:32" pos:end="183:33"><literal type="number" pos:start="183:32" pos:end="183:33">13</literal></expr>]</index></name> <operator pos:start="183:36" pos:end="183:37">==</operator> <literal type="number" pos:start="183:39" pos:end="183:39">2</literal></expr>)</condition><block type="pseudo" pos:start="183:42" pos:end="183:56"><block_content pos:start="183:42" pos:end="183:56"> <expr_stmt pos:start="183:42" pos:end="183:56"><expr pos:start="183:42" pos:end="183:55"><name pos:start="183:42" pos:end="183:48"><name pos:start="183:42" pos:end="183:44">mxf</name><operator pos:start="183:45" pos:end="183:46">-&gt;</operator><name pos:start="183:47" pos:end="183:48">op</name></name> <operator pos:start="183:50" pos:end="183:50">=</operator> <name pos:start="183:52" pos:end="183:55">OP2b</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="185:5" pos:end="185:56">else if <condition pos:start="185:13" pos:end="185:40">(<expr pos:start="185:14" pos:end="185:39"><name pos:start="185:14" pos:end="185:19"><name pos:start="185:14" pos:end="185:15">op</name><index pos:start="185:16" pos:end="185:19">[<expr pos:start="185:17" pos:end="185:18"><literal type="number" pos:start="185:17" pos:end="185:18">12</literal></expr>]</index></name> <operator pos:start="185:21" pos:end="185:22">==</operator> <literal type="number" pos:start="185:24" pos:end="185:24">2</literal> <operator pos:start="185:26" pos:end="185:27">&amp;&amp;</operator> <name pos:start="185:29" pos:end="185:34"><name pos:start="185:29" pos:end="185:30">op</name><index pos:start="185:31" pos:end="185:34">[<expr pos:start="185:32" pos:end="185:33"><literal type="number" pos:start="185:32" pos:end="185:33">13</literal></expr>]</index></name> <operator pos:start="185:36" pos:end="185:37">==</operator> <literal type="number" pos:start="185:39" pos:end="185:39">3</literal></expr>)</condition><block type="pseudo" pos:start="185:42" pos:end="185:56"><block_content pos:start="185:42" pos:end="185:56"> <expr_stmt pos:start="185:42" pos:end="185:56"><expr pos:start="185:42" pos:end="185:55"><name pos:start="185:42" pos:end="185:48"><name pos:start="185:42" pos:end="185:44">mxf</name><operator pos:start="185:45" pos:end="185:46">-&gt;</operator><name pos:start="185:47" pos:end="185:48">op</name></name> <operator pos:start="185:50" pos:end="185:50">=</operator> <name pos:start="185:52" pos:end="185:55">OP2c</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="187:5" pos:end="187:56">else if <condition pos:start="187:13" pos:end="187:40">(<expr pos:start="187:14" pos:end="187:39"><name pos:start="187:14" pos:end="187:19"><name pos:start="187:14" pos:end="187:15">op</name><index pos:start="187:16" pos:end="187:19">[<expr pos:start="187:17" pos:end="187:18"><literal type="number" pos:start="187:17" pos:end="187:18">12</literal></expr>]</index></name> <operator pos:start="187:21" pos:end="187:22">==</operator> <literal type="number" pos:start="187:24" pos:end="187:24">3</literal> <operator pos:start="187:26" pos:end="187:27">&amp;&amp;</operator> <name pos:start="187:29" pos:end="187:34"><name pos:start="187:29" pos:end="187:30">op</name><index pos:start="187:31" pos:end="187:34">[<expr pos:start="187:32" pos:end="187:33"><literal type="number" pos:start="187:32" pos:end="187:33">13</literal></expr>]</index></name> <operator pos:start="187:36" pos:end="187:37">==</operator> <literal type="number" pos:start="187:39" pos:end="187:39">1</literal></expr>)</condition><block type="pseudo" pos:start="187:42" pos:end="187:56"><block_content pos:start="187:42" pos:end="187:56"> <expr_stmt pos:start="187:42" pos:end="187:56"><expr pos:start="187:42" pos:end="187:55"><name pos:start="187:42" pos:end="187:48"><name pos:start="187:42" pos:end="187:44">mxf</name><operator pos:start="187:45" pos:end="187:46">-&gt;</operator><name pos:start="187:47" pos:end="187:48">op</name></name> <operator pos:start="187:50" pos:end="187:50">=</operator> <name pos:start="187:52" pos:end="187:55">OP3a</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="189:5" pos:end="189:56">else if <condition pos:start="189:13" pos:end="189:40">(<expr pos:start="189:14" pos:end="189:39"><name pos:start="189:14" pos:end="189:19"><name pos:start="189:14" pos:end="189:15">op</name><index pos:start="189:16" pos:end="189:19">[<expr pos:start="189:17" pos:end="189:18"><literal type="number" pos:start="189:17" pos:end="189:18">12</literal></expr>]</index></name> <operator pos:start="189:21" pos:end="189:22">==</operator> <literal type="number" pos:start="189:24" pos:end="189:24">3</literal> <operator pos:start="189:26" pos:end="189:27">&amp;&amp;</operator> <name pos:start="189:29" pos:end="189:34"><name pos:start="189:29" pos:end="189:30">op</name><index pos:start="189:31" pos:end="189:34">[<expr pos:start="189:32" pos:end="189:33"><literal type="number" pos:start="189:32" pos:end="189:33">13</literal></expr>]</index></name> <operator pos:start="189:36" pos:end="189:37">==</operator> <literal type="number" pos:start="189:39" pos:end="189:39">2</literal></expr>)</condition><block type="pseudo" pos:start="189:42" pos:end="189:56"><block_content pos:start="189:42" pos:end="189:56"> <expr_stmt pos:start="189:42" pos:end="189:56"><expr pos:start="189:42" pos:end="189:55"><name pos:start="189:42" pos:end="189:48"><name pos:start="189:42" pos:end="189:44">mxf</name><operator pos:start="189:45" pos:end="189:46">-&gt;</operator><name pos:start="189:47" pos:end="189:48">op</name></name> <operator pos:start="189:50" pos:end="189:50">=</operator> <name pos:start="189:52" pos:end="189:55">OP3b</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="191:5" pos:end="191:56">else if <condition pos:start="191:13" pos:end="191:40">(<expr pos:start="191:14" pos:end="191:39"><name pos:start="191:14" pos:end="191:19"><name pos:start="191:14" pos:end="191:15">op</name><index pos:start="191:16" pos:end="191:19">[<expr pos:start="191:17" pos:end="191:18"><literal type="number" pos:start="191:17" pos:end="191:18">12</literal></expr>]</index></name> <operator pos:start="191:21" pos:end="191:22">==</operator> <literal type="number" pos:start="191:24" pos:end="191:24">3</literal> <operator pos:start="191:26" pos:end="191:27">&amp;&amp;</operator> <name pos:start="191:29" pos:end="191:34"><name pos:start="191:29" pos:end="191:30">op</name><index pos:start="191:31" pos:end="191:34">[<expr pos:start="191:32" pos:end="191:33"><literal type="number" pos:start="191:32" pos:end="191:33">13</literal></expr>]</index></name> <operator pos:start="191:36" pos:end="191:37">==</operator> <literal type="number" pos:start="191:39" pos:end="191:39">3</literal></expr>)</condition><block type="pseudo" pos:start="191:42" pos:end="191:56"><block_content pos:start="191:42" pos:end="191:56"> <expr_stmt pos:start="191:42" pos:end="191:56"><expr pos:start="191:42" pos:end="191:55"><name pos:start="191:42" pos:end="191:48"><name pos:start="191:42" pos:end="191:44">mxf</name><operator pos:start="191:45" pos:end="191:46">-&gt;</operator><name pos:start="191:47" pos:end="191:48">op</name></name> <operator pos:start="191:50" pos:end="191:50">=</operator> <name pos:start="191:52" pos:end="191:55">OP3c</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="193:5" pos:end="193:61">else if <condition pos:start="193:13" pos:end="193:40">(<expr pos:start="193:14" pos:end="193:39"><name pos:start="193:14" pos:end="193:19"><name pos:start="193:14" pos:end="193:15">op</name><index pos:start="193:16" pos:end="193:19">[<expr pos:start="193:17" pos:end="193:18"><literal type="number" pos:start="193:17" pos:end="193:18">12</literal></expr>]</index></name> <operator pos:start="193:21" pos:end="193:22">==</operator> <literal type="number" pos:start="193:24" pos:end="193:25">64</literal><operator pos:start="193:26" pos:end="193:27">&amp;&amp;</operator> <name pos:start="193:29" pos:end="193:34"><name pos:start="193:29" pos:end="193:30">op</name><index pos:start="193:31" pos:end="193:34">[<expr pos:start="193:32" pos:end="193:33"><literal type="number" pos:start="193:32" pos:end="193:33">13</literal></expr>]</index></name> <operator pos:start="193:36" pos:end="193:37">==</operator> <literal type="number" pos:start="193:39" pos:end="193:39">1</literal></expr>)</condition><block type="pseudo" pos:start="193:42" pos:end="193:61"><block_content pos:start="193:42" pos:end="193:61"> <expr_stmt pos:start="193:42" pos:end="193:61"><expr pos:start="193:42" pos:end="193:60"><name pos:start="193:42" pos:end="193:48"><name pos:start="193:42" pos:end="193:44">mxf</name><operator pos:start="193:45" pos:end="193:46">-&gt;</operator><name pos:start="193:47" pos:end="193:48">op</name></name> <operator pos:start="193:50" pos:end="193:50">=</operator> <name pos:start="193:52" pos:end="193:60">OPSONYOpt</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="195:5" pos:end="227:5">else if <condition pos:start="195:13" pos:end="195:28">(<expr pos:start="195:14" pos:end="195:27"><name pos:start="195:14" pos:end="195:19"><name pos:start="195:14" pos:end="195:15">op</name><index pos:start="195:16" pos:end="195:19">[<expr pos:start="195:17" pos:end="195:18"><literal type="number" pos:start="195:17" pos:end="195:18">12</literal></expr>]</index></name> <operator pos:start="195:21" pos:end="195:22">==</operator> <literal type="number" pos:start="195:24" pos:end="195:27">0x10</literal></expr>)</condition> <block pos:start="195:30" pos:end="227:5">{<block_content pos:start="205:9" pos:end="225:29">

        <comment type="block" pos:start="197:9" pos:end="203:82">/* SMPTE 390m: "There shall be exactly one essence container"

         * The following block deals with files that violate this, namely:

         * 2011_DCPTEST_24FPS.V.mxf - two ECs, OP1a

         * abcdefghiv016f56415e.mxf - zero ECs, OPAtom, output by Avid AirSpeed */</comment>

        <if_stmt pos:start="205:9" pos:end="225:29"><if pos:start="205:9" pos:end="223:9">if <condition pos:start="205:12" pos:end="205:39">(<expr pos:start="205:13" pos:end="205:38"><name pos:start="205:13" pos:end="205:33">nb_essence_containers</name> <operator pos:start="205:35" pos:end="205:36">!=</operator> <literal type="number" pos:start="205:38" pos:end="205:38">1</literal></expr>)</condition> <block pos:start="205:41" pos:end="223:9">{<block_content pos:start="207:13" pos:end="221:25">

            <decl_stmt pos:start="207:13" pos:end="207:61"><decl pos:start="207:13" pos:end="207:60"><type pos:start="207:13" pos:end="207:17"><name pos:start="207:13" pos:end="207:17">MXFOP</name></type> <name pos:start="207:19" pos:end="207:20">op</name> <init pos:start="207:22" pos:end="207:60">= <expr pos:start="207:24" pos:end="207:60"><ternary pos:start="207:24" pos:end="207:60"><condition pos:start="207:24" pos:end="207:46"><expr pos:start="207:24" pos:end="207:44"><name pos:start="207:24" pos:end="207:44">nb_essence_containers</name></expr> ?</condition><then pos:start="207:48" pos:end="207:51"> <expr pos:start="207:48" pos:end="207:51"><name pos:start="207:48" pos:end="207:51">OP1a</name></expr> </then><else pos:start="207:53" pos:end="207:60">: <expr pos:start="207:55" pos:end="207:60"><name pos:start="207:55" pos:end="207:60">OPAtom</name></expr></else></ternary></expr></init></decl>;</decl_stmt>



            <comment type="block" pos:start="211:13" pos:end="211:31">/* only nag once */</comment>

            <if_stmt pos:start="213:13" pos:end="217:78"><if pos:start="213:13" pos:end="217:78">if <condition pos:start="213:16" pos:end="213:25">(<expr pos:start="213:17" pos:end="213:24"><operator pos:start="213:17" pos:end="213:17">!</operator><name pos:start="213:18" pos:end="213:24"><name pos:start="213:18" pos:end="213:20">mxf</name><operator pos:start="213:21" pos:end="213:22">-&gt;</operator><name pos:start="213:23" pos:end="213:24">op</name></name></expr>)</condition><block type="pseudo" pos:start="215:17" pos:end="217:78"><block_content pos:start="215:17" pos:end="217:78">

                <expr_stmt pos:start="215:17" pos:end="217:78"><expr pos:start="215:17" pos:end="217:77"><call pos:start="215:17" pos:end="217:77"><name pos:start="215:17" pos:end="215:22">av_log</name><argument_list pos:start="215:23" pos:end="217:77">(<argument pos:start="215:24" pos:end="215:30"><expr pos:start="215:24" pos:end="215:30"><name pos:start="215:24" pos:end="215:30"><name pos:start="215:24" pos:end="215:26">mxf</name><operator pos:start="215:27" pos:end="215:28">-&gt;</operator><name pos:start="215:29" pos:end="215:30">fc</name></name></expr></argument>, <argument pos:start="215:33" pos:end="215:46"><expr pos:start="215:33" pos:end="215:46"><name pos:start="215:33" pos:end="215:46">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="215:49" pos:end="215:88"><expr pos:start="215:49" pos:end="215:88"><literal type="string" pos:start="215:49" pos:end="215:88">"\"OPAtom\" with %u ECs - assuming %s\n"</literal></expr></argument>,

                       <argument pos:start="217:24" pos:end="217:44"><expr pos:start="217:24" pos:end="217:44"><name pos:start="217:24" pos:end="217:44">nb_essence_containers</name></expr></argument>, <argument pos:start="217:47" pos:end="217:76"><expr pos:start="217:47" pos:end="217:76"><ternary pos:start="217:47" pos:end="217:76"><condition pos:start="217:47" pos:end="217:58"><expr pos:start="217:47" pos:end="217:56"><name pos:start="217:47" pos:end="217:48">op</name> <operator pos:start="217:50" pos:end="217:51">==</operator> <name pos:start="217:53" pos:end="217:56">OP1a</name></expr> ?</condition><then pos:start="217:60" pos:end="217:65"> <expr pos:start="217:60" pos:end="217:65"><literal type="string" pos:start="217:60" pos:end="217:65">"OP1a"</literal></expr> </then><else pos:start="217:67" pos:end="217:76">: <expr pos:start="217:69" pos:end="217:76"><literal type="string" pos:start="217:69" pos:end="217:76">"OPAtom"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="221:13" pos:end="221:25"><expr pos:start="221:13" pos:end="221:24"><name pos:start="221:13" pos:end="221:19"><name pos:start="221:13" pos:end="221:15">mxf</name><operator pos:start="221:16" pos:end="221:17">-&gt;</operator><name pos:start="221:18" pos:end="221:19">op</name></name> <operator pos:start="221:21" pos:end="221:21">=</operator> <name pos:start="221:23" pos:end="221:24">op</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="223:11" pos:end="225:29">else<block type="pseudo" pos:start="225:13" pos:end="225:29"><block_content pos:start="225:13" pos:end="225:29">

            <expr_stmt pos:start="225:13" pos:end="225:29"><expr pos:start="225:13" pos:end="225:28"><name pos:start="225:13" pos:end="225:19"><name pos:start="225:13" pos:end="225:15">mxf</name><operator pos:start="225:16" pos:end="225:17">-&gt;</operator><name pos:start="225:18" pos:end="225:19">op</name></name> <operator pos:start="225:21" pos:end="225:21">=</operator> <name pos:start="225:23" pos:end="225:28">OPAtom</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="227:7" pos:end="233:5">else <block pos:start="227:12" pos:end="233:5">{<block_content pos:start="229:9" pos:end="231:23">

        <expr_stmt pos:start="229:9" pos:end="229:116"><expr pos:start="229:9" pos:end="229:115"><call pos:start="229:9" pos:end="229:115"><name pos:start="229:9" pos:end="229:14">av_log</name><argument_list pos:start="229:15" pos:end="229:115">(<argument pos:start="229:16" pos:end="229:22"><expr pos:start="229:16" pos:end="229:22"><name pos:start="229:16" pos:end="229:22"><name pos:start="229:16" pos:end="229:18">mxf</name><operator pos:start="229:19" pos:end="229:20">-&gt;</operator><name pos:start="229:21" pos:end="229:22">fc</name></name></expr></argument>, <argument pos:start="229:25" pos:end="229:36"><expr pos:start="229:25" pos:end="229:36"><name pos:start="229:25" pos:end="229:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="229:39" pos:end="229:98"><expr pos:start="229:39" pos:end="229:98"><literal type="string" pos:start="229:39" pos:end="229:98">"unknown operational pattern: %02xh %02xh - guessing OP1a\n"</literal></expr></argument>, <argument pos:start="229:101" pos:end="229:106"><expr pos:start="229:101" pos:end="229:106"><name pos:start="229:101" pos:end="229:106"><name pos:start="229:101" pos:end="229:102">op</name><index pos:start="229:103" pos:end="229:106">[<expr pos:start="229:104" pos:end="229:105"><literal type="number" pos:start="229:104" pos:end="229:105">12</literal></expr>]</index></name></expr></argument>, <argument pos:start="229:109" pos:end="229:114"><expr pos:start="229:109" pos:end="229:114"><name pos:start="229:109" pos:end="229:114"><name pos:start="229:109" pos:end="229:110">op</name><index pos:start="229:111" pos:end="229:114">[<expr pos:start="229:112" pos:end="229:113"><literal type="number" pos:start="229:112" pos:end="229:113">13</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="231:9" pos:end="231:23"><expr pos:start="231:9" pos:end="231:22"><name pos:start="231:9" pos:end="231:15"><name pos:start="231:9" pos:end="231:11">mxf</name><operator pos:start="231:12" pos:end="231:13">-&gt;</operator><name pos:start="231:14" pos:end="231:15">op</name></name> <operator pos:start="231:17" pos:end="231:17">=</operator> <name pos:start="231:19" pos:end="231:22">OP1a</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="237:5" pos:end="255:5"><if pos:start="237:5" pos:end="255:5">if <condition pos:start="237:8" pos:end="237:68">(<expr pos:start="237:9" pos:end="237:67"><name pos:start="237:9" pos:end="237:27"><name pos:start="237:9" pos:end="237:17">partition</name><operator pos:start="237:18" pos:end="237:19">-&gt;</operator><name pos:start="237:20" pos:end="237:27">kag_size</name></name> <operator pos:start="237:29" pos:end="237:30">&lt;=</operator> <literal type="number" pos:start="237:32" pos:end="237:32">0</literal> <operator pos:start="237:34" pos:end="237:35">||</operator> <name pos:start="237:37" pos:end="237:55"><name pos:start="237:37" pos:end="237:45">partition</name><operator pos:start="237:46" pos:end="237:47">-&gt;</operator><name pos:start="237:48" pos:end="237:55">kag_size</name></name> <operator pos:start="237:57" pos:end="237:57">&gt;</operator> <operator pos:start="237:59" pos:end="237:59">(</operator><literal type="number" pos:start="237:60" pos:end="237:60">1</literal> <operator pos:start="237:62" pos:end="237:63">&lt;&lt;</operator> <literal type="number" pos:start="237:65" pos:end="237:66">20</literal><operator pos:start="237:67" pos:end="237:67">)</operator></expr>)</condition> <block pos:start="237:70" pos:end="255:5">{<block_content pos:start="239:9" pos:end="253:69">

        <expr_stmt pos:start="239:9" pos:end="239:95"><expr pos:start="239:9" pos:end="239:94"><call pos:start="239:9" pos:end="239:94"><name pos:start="239:9" pos:end="239:14">av_log</name><argument_list pos:start="239:15" pos:end="239:94">(<argument pos:start="239:16" pos:end="239:22"><expr pos:start="239:16" pos:end="239:22"><name pos:start="239:16" pos:end="239:22"><name pos:start="239:16" pos:end="239:18">mxf</name><operator pos:start="239:19" pos:end="239:20">-&gt;</operator><name pos:start="239:21" pos:end="239:22">fc</name></name></expr></argument>, <argument pos:start="239:25" pos:end="239:38"><expr pos:start="239:25" pos:end="239:38"><name pos:start="239:25" pos:end="239:38">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="239:41" pos:end="239:72"><expr pos:start="239:41" pos:end="239:72"><literal type="string" pos:start="239:41" pos:end="239:72">"invalid KAGSize %i - guessing "</literal></expr></argument>, <argument pos:start="239:75" pos:end="239:93"><expr pos:start="239:75" pos:end="239:93"><name pos:start="239:75" pos:end="239:93"><name pos:start="239:75" pos:end="239:83">partition</name><operator pos:start="239:84" pos:end="239:85">-&gt;</operator><name pos:start="239:86" pos:end="239:93">kag_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="243:9" pos:end="249:36"><if pos:start="243:9" pos:end="245:38">if <condition pos:start="243:12" pos:end="243:33">(<expr pos:start="243:13" pos:end="243:32"><name pos:start="243:13" pos:end="243:19"><name pos:start="243:13" pos:end="243:15">mxf</name><operator pos:start="243:16" pos:end="243:17">-&gt;</operator><name pos:start="243:18" pos:end="243:19">op</name></name> <operator pos:start="243:21" pos:end="243:22">==</operator> <name pos:start="243:24" pos:end="243:32">OPSONYOpt</name></expr>)</condition><block type="pseudo" pos:start="245:13" pos:end="245:38"><block_content pos:start="245:13" pos:end="245:38">

            <expr_stmt pos:start="245:13" pos:end="245:38"><expr pos:start="245:13" pos:end="245:37"><name pos:start="245:13" pos:end="245:31"><name pos:start="245:13" pos:end="245:21">partition</name><operator pos:start="245:22" pos:end="245:23">-&gt;</operator><name pos:start="245:24" pos:end="245:31">kag_size</name></name> <operator pos:start="245:33" pos:end="245:33">=</operator> <literal type="number" pos:start="245:35" pos:end="245:37">512</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="247:9" pos:end="249:36">else<block type="pseudo" pos:start="249:13" pos:end="249:36"><block_content pos:start="249:13" pos:end="249:36">

            <expr_stmt pos:start="249:13" pos:end="249:36"><expr pos:start="249:13" pos:end="249:35"><name pos:start="249:13" pos:end="249:31"><name pos:start="249:13" pos:end="249:21">partition</name><operator pos:start="249:22" pos:end="249:23">-&gt;</operator><name pos:start="249:24" pos:end="249:31">kag_size</name></name> <operator pos:start="249:33" pos:end="249:33">=</operator> <literal type="number" pos:start="249:35" pos:end="249:35">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="253:9" pos:end="253:69"><expr pos:start="253:9" pos:end="253:68"><call pos:start="253:9" pos:end="253:68"><name pos:start="253:9" pos:end="253:14">av_log</name><argument_list pos:start="253:15" pos:end="253:68">(<argument pos:start="253:16" pos:end="253:22"><expr pos:start="253:16" pos:end="253:22"><name pos:start="253:16" pos:end="253:22"><name pos:start="253:16" pos:end="253:18">mxf</name><operator pos:start="253:19" pos:end="253:20">-&gt;</operator><name pos:start="253:21" pos:end="253:22">fc</name></name></expr></argument>, <argument pos:start="253:25" pos:end="253:38"><expr pos:start="253:25" pos:end="253:38"><name pos:start="253:25" pos:end="253:38">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="253:41" pos:end="253:46"><expr pos:start="253:41" pos:end="253:46"><literal type="string" pos:start="253:41" pos:end="253:46">"%i\n"</literal></expr></argument>, <argument pos:start="253:49" pos:end="253:67"><expr pos:start="253:49" pos:end="253:67"><name pos:start="253:49" pos:end="253:67"><name pos:start="253:49" pos:end="253:57">partition</name><operator pos:start="253:58" pos:end="253:59">-&gt;</operator><name pos:start="253:60" pos:end="253:67">kag_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="259:5" pos:end="259:13">return <expr pos:start="259:12" pos:end="259:12"><literal type="number" pos:start="259:12" pos:end="259:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
