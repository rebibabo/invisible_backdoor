<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5111.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">slirp_state_save</name><parameter_list pos:start="1:29" pos:end="1:55">(<parameter pos:start="1:30" pos:end="1:40"><decl pos:start="1:30" pos:end="1:40"><type pos:start="1:30" pos:end="1:40"><name pos:start="1:30" pos:end="1:37">QEMUFile</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">f</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:54"><decl pos:start="1:43" pos:end="1:54"><type pos:start="1:43" pos:end="1:54"><name pos:start="1:43" pos:end="1:46">void</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:54">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:31">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:9">Slirp</name> <modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:16">slirp</name> <init pos:start="5:18" pos:end="5:25">= <expr pos:start="5:20" pos:end="5:25"><name pos:start="5:20" pos:end="5:25">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:18">ex_list</name></name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:26">ex_ptr</name></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="31:9">for <control pos:start="11:9" pos:end="11:69">(<init pos:start="11:10" pos:end="11:35"><expr pos:start="11:10" pos:end="11:34"><name pos:start="11:10" pos:end="11:15">ex_ptr</name> <operator pos:start="11:17" pos:end="11:17">=</operator> <name pos:start="11:19" pos:end="11:34"><name pos:start="11:19" pos:end="11:23">slirp</name><operator pos:start="11:24" pos:end="11:25">-&gt;</operator><name pos:start="11:26" pos:end="11:34">exec_list</name></name></expr>;</init> <condition pos:start="11:37" pos:end="11:43"><expr pos:start="11:37" pos:end="11:42"><name pos:start="11:37" pos:end="11:42">ex_ptr</name></expr>;</condition> <incr pos:start="11:45" pos:end="11:68"><expr pos:start="11:45" pos:end="11:68"><name pos:start="11:45" pos:end="11:50">ex_ptr</name> <operator pos:start="11:52" pos:end="11:52">=</operator> <name pos:start="11:54" pos:end="11:68"><name pos:start="11:54" pos:end="11:59">ex_ptr</name><operator pos:start="11:60" pos:end="11:61">-&gt;</operator><name pos:start="11:62" pos:end="11:68">ex_next</name></name></expr></incr>)</control><block type="pseudo" pos:start="13:9" pos:end="31:9"><block_content pos:start="13:9" pos:end="31:9">

        <if_stmt pos:start="13:9" pos:end="31:9"><if pos:start="13:9" pos:end="31:9">if <condition pos:start="13:12" pos:end="13:32">(<expr pos:start="13:13" pos:end="13:31"><name pos:start="13:13" pos:end="13:26"><name pos:start="13:13" pos:end="13:18">ex_ptr</name><operator pos:start="13:19" pos:end="13:20">-&gt;</operator><name pos:start="13:21" pos:end="13:26">ex_pty</name></name> <operator pos:start="13:28" pos:end="13:29">==</operator> <literal type="number" pos:start="13:31" pos:end="13:31">3</literal></expr>)</condition> <block pos:start="13:34" pos:end="31:9">{<block_content pos:start="15:13" pos:end="29:67">

            <decl_stmt pos:start="15:13" pos:end="15:30"><decl pos:start="15:13" pos:end="15:29"><type pos:start="15:13" pos:end="15:27"><name pos:start="15:13" pos:end="15:25"><name pos:start="15:13" pos:end="15:18">struct</name> <name pos:start="15:20" pos:end="15:25">socket</name></name> <modifier pos:start="15:27" pos:end="15:27">*</modifier></type><name pos:start="15:28" pos:end="15:29">so</name></decl>;</decl_stmt>

            <expr_stmt pos:start="17:13" pos:end="19:64"><expr pos:start="17:13" pos:end="19:63"><name pos:start="17:13" pos:end="17:14">so</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <call pos:start="17:18" pos:end="19:63"><name pos:start="17:18" pos:end="17:38">slirp_find_ctl_socket</name><argument_list pos:start="17:39" pos:end="19:63">(<argument pos:start="17:40" pos:end="17:44"><expr pos:start="17:40" pos:end="17:44"><name pos:start="17:40" pos:end="17:44">slirp</name></expr></argument>, <argument pos:start="17:47" pos:end="17:61"><expr pos:start="17:47" pos:end="17:61"><name pos:start="17:47" pos:end="17:61"><name pos:start="17:47" pos:end="17:52">ex_ptr</name><operator pos:start="17:53" pos:end="17:54">-&gt;</operator><name pos:start="17:55" pos:end="17:61">ex_addr</name></name></expr></argument>,

                                       <argument pos:start="19:40" pos:end="19:62"><expr pos:start="19:40" pos:end="19:62"><call pos:start="19:40" pos:end="19:62"><name pos:start="19:40" pos:end="19:44">ntohs</name><argument_list pos:start="19:45" pos:end="19:62">(<argument pos:start="19:46" pos:end="19:61"><expr pos:start="19:46" pos:end="19:61"><name pos:start="19:46" pos:end="19:61"><name pos:start="19:46" pos:end="19:51">ex_ptr</name><operator pos:start="19:52" pos:end="19:53">-&gt;</operator><name pos:start="19:54" pos:end="19:61">ex_fport</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="21:13" pos:end="23:25"><if pos:start="21:13" pos:end="23:25">if <condition pos:start="21:16" pos:end="21:20">(<expr pos:start="21:17" pos:end="21:19"><operator pos:start="21:17" pos:end="21:17">!</operator><name pos:start="21:18" pos:end="21:19">so</name></expr>)</condition><block type="pseudo" pos:start="23:17" pos:end="23:25"><block_content pos:start="23:17" pos:end="23:25">

                <continue pos:start="23:17" pos:end="23:25">continue;</continue></block_content></block></if></if_stmt>



            <expr_stmt pos:start="27:13" pos:end="27:33"><expr pos:start="27:13" pos:end="27:32"><call pos:start="27:13" pos:end="27:32"><name pos:start="27:13" pos:end="27:25">qemu_put_byte</name><argument_list pos:start="27:26" pos:end="27:32">(<argument pos:start="27:27" pos:end="27:27"><expr pos:start="27:27" pos:end="27:27"><name pos:start="27:27" pos:end="27:27">f</name></expr></argument>, <argument pos:start="27:30" pos:end="27:31"><expr pos:start="27:30" pos:end="27:31"><literal type="number" pos:start="27:30" pos:end="27:31">42</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:67"><expr pos:start="29:13" pos:end="29:66"><call pos:start="29:13" pos:end="29:66"><name pos:start="29:13" pos:end="29:30">vmstate_save_state</name><argument_list pos:start="29:31" pos:end="29:66">(<argument pos:start="29:32" pos:end="29:32"><expr pos:start="29:32" pos:end="29:32"><name pos:start="29:32" pos:end="29:32">f</name></expr></argument>, <argument pos:start="29:35" pos:end="29:55"><expr pos:start="29:35" pos:end="29:55"><operator pos:start="29:35" pos:end="29:35">&amp;</operator><name pos:start="29:36" pos:end="29:55">vmstate_slirp_socket</name></expr></argument>, <argument pos:start="29:58" pos:end="29:59"><expr pos:start="29:58" pos:end="29:59"><name pos:start="29:58" pos:end="29:59">so</name></expr></argument>, <argument pos:start="29:62" pos:end="29:65"><expr pos:start="29:62" pos:end="29:65"><name pos:start="29:62" pos:end="29:65">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt></block_content></block></for>

    <expr_stmt pos:start="33:5" pos:end="33:24"><expr pos:start="33:5" pos:end="33:23"><call pos:start="33:5" pos:end="33:23"><name pos:start="33:5" pos:end="33:17">qemu_put_byte</name><argument_list pos:start="33:18" pos:end="33:23">(<argument pos:start="33:19" pos:end="33:19"><expr pos:start="33:19" pos:end="33:19"><name pos:start="33:19" pos:end="33:19">f</name></expr></argument>, <argument pos:start="33:22" pos:end="33:22"><expr pos:start="33:22" pos:end="33:22"><literal type="number" pos:start="33:22" pos:end="33:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:35"><expr pos:start="37:5" pos:end="37:34"><call pos:start="37:5" pos:end="37:34"><name pos:start="37:5" pos:end="37:17">qemu_put_be16</name><argument_list pos:start="37:18" pos:end="37:34">(<argument pos:start="37:19" pos:end="37:19"><expr pos:start="37:19" pos:end="37:19"><name pos:start="37:19" pos:end="37:19">f</name></expr></argument>, <argument pos:start="37:22" pos:end="37:33"><expr pos:start="37:22" pos:end="37:33"><name pos:start="37:22" pos:end="37:33"><name pos:start="37:22" pos:end="37:26">slirp</name><operator pos:start="37:27" pos:end="37:28">-&gt;</operator><name pos:start="37:29" pos:end="37:33">ip_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:31"><expr pos:start="41:5" pos:end="41:30"><call pos:start="41:5" pos:end="41:30"><name pos:start="41:5" pos:end="41:20">slirp_bootp_save</name><argument_list pos:start="41:21" pos:end="41:30">(<argument pos:start="41:22" pos:end="41:22"><expr pos:start="41:22" pos:end="41:22"><name pos:start="41:22" pos:end="41:22">f</name></expr></argument>, <argument pos:start="41:25" pos:end="41:29"><expr pos:start="41:25" pos:end="41:29"><name pos:start="41:25" pos:end="41:29">slirp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
