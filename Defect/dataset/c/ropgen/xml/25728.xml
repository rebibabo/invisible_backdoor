<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25728.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:37">kvm_dirty_pages_log_change</name><parameter_list pos:start="1:38" pos:end="5:52">(<parameter pos:start="1:39" pos:end="1:66"><decl pos:start="1:39" pos:end="1:66"><type pos:start="1:39" pos:end="1:66"><name pos:start="1:39" pos:end="1:56">target_phys_addr_t</name></type> <name pos:start="1:58" pos:end="1:66">phys_addr</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:95"><decl pos:start="1:69" pos:end="1:95"><type pos:start="1:69" pos:end="1:95"><name pos:start="1:69" pos:end="1:86">target_phys_addr_t</name></type> <name pos:start="1:88" pos:end="1:95">end_addr</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:52"><decl pos:start="3:39" pos:end="3:52"><type pos:start="3:39" pos:end="3:52"><name pos:start="3:39" pos:end="3:46">unsigned</name></type> <name pos:start="3:48" pos:end="3:52">flags</name></decl></parameter>,

                                      <parameter pos:start="5:39" pos:end="5:51"><decl pos:start="5:39" pos:end="5:51"><type pos:start="5:39" pos:end="5:51"><name pos:start="5:39" pos:end="5:46">unsigned</name></type> <name pos:start="5:48" pos:end="5:51">mask</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="39:1">{<block_content pos:start="9:5" pos:end="37:46">

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">KVMState</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:15">s</name> <init pos:start="9:17" pos:end="9:27">= <expr pos:start="9:19" pos:end="9:27"><name pos:start="9:19" pos:end="9:27">kvm_state</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:49"><decl pos:start="11:5" pos:end="11:48"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">KVMSlot</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:16">mem</name> <init pos:start="11:18" pos:end="11:48">= <expr pos:start="11:20" pos:end="11:48"><call pos:start="11:20" pos:end="11:48"><name pos:start="11:20" pos:end="11:34">kvm_lookup_slot</name><argument_list pos:start="11:35" pos:end="11:48">(<argument pos:start="11:36" pos:end="11:36"><expr pos:start="11:36" pos:end="11:36"><name pos:start="11:36" pos:end="11:36">s</name></expr></argument>, <argument pos:start="11:39" pos:end="11:47"><expr pos:start="11:39" pos:end="11:47"><name pos:start="11:39" pos:end="11:47">phys_addr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:20">(<expr pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:11">mem</name> <operator pos:start="13:13" pos:end="13:14">==</operator> <name pos:start="13:16" pos:end="13:19">NULL</name></expr>)</condition>  <block pos:start="13:23" pos:end="19:5">{<block_content pos:start="15:13" pos:end="17:27">

            <expr_stmt pos:start="15:13" pos:end="15:75"><expr pos:start="15:13" pos:end="15:74"><call pos:start="15:13" pos:end="15:74"><name pos:start="15:13" pos:end="15:19">dprintf</name><argument_list pos:start="15:20" pos:end="15:74">(<argument pos:start="15:21" pos:end="15:52"><expr pos:start="15:21" pos:end="15:52"><literal type="string" pos:start="15:21" pos:end="15:52">"invalid parameters %llx-%llx\n"</literal></expr></argument>, <argument pos:start="15:55" pos:end="15:63"><expr pos:start="15:55" pos:end="15:63"><name pos:start="15:55" pos:end="15:63">phys_addr</name></expr></argument>, <argument pos:start="15:66" pos:end="15:73"><expr pos:start="15:66" pos:end="15:73"><name pos:start="15:66" pos:end="15:73">end_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="17:13" pos:end="17:27">return <expr pos:start="17:20" pos:end="17:26"><operator pos:start="17:20" pos:end="17:20">-</operator><name pos:start="17:21" pos:end="17:26">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:41"><expr pos:start="23:5" pos:end="23:40"><name pos:start="23:5" pos:end="23:9">flags</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <operator pos:start="23:13" pos:end="23:13">(</operator><name pos:start="23:14" pos:end="23:23"><name pos:start="23:14" pos:end="23:16">mem</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:23">flags</name></name> <operator pos:start="23:25" pos:end="23:25">&amp;</operator> <operator pos:start="23:27" pos:end="23:27">~</operator><name pos:start="23:28" pos:end="23:31">mask</name><operator pos:start="23:32" pos:end="23:32">)</operator> <operator pos:start="23:34" pos:end="23:34">|</operator> <name pos:start="23:36" pos:end="23:40">flags</name></expr>;</expr_stmt>

    <comment type="block" pos:start="25:5" pos:end="25:49">/* Nothing changed, no need to issue ioctl */</comment>

    <if_stmt pos:start="27:5" pos:end="29:21"><if pos:start="27:5" pos:end="29:21">if <condition pos:start="27:8" pos:end="27:28">(<expr pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:13">flags</name> <operator pos:start="27:15" pos:end="27:16">==</operator> <name pos:start="27:18" pos:end="27:27"><name pos:start="27:18" pos:end="27:20">mem</name><operator pos:start="27:21" pos:end="27:22">-&gt;</operator><name pos:start="27:23" pos:end="27:27">flags</name></name></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:21"><block_content pos:start="29:13" pos:end="29:21">

            <return pos:start="29:13" pos:end="29:21">return <expr pos:start="29:20" pos:end="29:20"><literal type="number" pos:start="29:20" pos:end="29:20">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:23"><expr pos:start="33:5" pos:end="33:22"><name pos:start="33:5" pos:end="33:14"><name pos:start="33:5" pos:end="33:7">mem</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:14">flags</name></name> <operator pos:start="33:16" pos:end="33:16">=</operator> <name pos:start="33:18" pos:end="33:22">flags</name></expr>;</expr_stmt>



    <return pos:start="37:5" pos:end="37:46">return <expr pos:start="37:12" pos:end="37:45"><call pos:start="37:12" pos:end="37:45"><name pos:start="37:12" pos:end="37:37">kvm_set_user_memory_region</name><argument_list pos:start="37:38" pos:end="37:45">(<argument pos:start="37:39" pos:end="37:39"><expr pos:start="37:39" pos:end="37:39"><name pos:start="37:39" pos:end="37:39">s</name></expr></argument>, <argument pos:start="37:42" pos:end="37:44"><expr pos:start="37:42" pos:end="37:44"><name pos:start="37:42" pos:end="37:44">mem</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
