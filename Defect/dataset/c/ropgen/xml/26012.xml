<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26012.c" pos:tabs="8"><function pos:start="1:1" pos:end="215:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">decode_nal_units</name><parameter_list pos:start="1:28" pos:end="1:75">(<parameter pos:start="1:29" pos:end="1:42"><decl pos:start="1:29" pos:end="1:42"><type pos:start="1:29" pos:end="1:42"><name pos:start="1:29" pos:end="1:39">HEVCContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:62"><decl pos:start="1:45" pos:end="1:62"><type pos:start="1:45" pos:end="1:62"><specifier pos:start="1:45" pos:end="1:49">const</specifier> <name pos:start="1:51" pos:end="1:57">uint8_t</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:62">buf</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:74"><decl pos:start="1:65" pos:end="1:74"><type pos:start="1:65" pos:end="1:74"><name pos:start="1:65" pos:end="1:67">int</name></type> <name pos:start="1:69" pos:end="1:74">length</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="215:1">{<block_content pos:start="5:5" pos:end="213:15">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:19"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:19">consumed</name></decl>, <decl pos:start="5:22" pos:end="5:28"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:22" pos:end="5:24">ret</name> <init pos:start="5:26" pos:end="5:28">= <expr pos:start="5:28" pos:end="5:28"><literal type="number" pos:start="5:28" pos:end="5:28">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:18"><expr pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:5">s</name><operator pos:start="9:6" pos:end="9:7">-&gt;</operator><name pos:start="9:8" pos:end="9:10">ref</name></name> <operator pos:start="9:12" pos:end="9:12">=</operator> <name pos:start="9:14" pos:end="9:17">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:15"><expr pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:10">eos</name></name> <operator pos:start="11:12" pos:end="11:12">=</operator> <literal type="number" pos:start="11:14" pos:end="11:14">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="15:5" pos:end="17:39">/* split the input packet into NAL units, so we know the upper bound on the

     * number of slices in the frame */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:19"><expr pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:14">nb_nals</name></name> <operator pos:start="19:16" pos:end="19:16">=</operator> <literal type="number" pos:start="19:18" pos:end="19:18">0</literal></expr>;</expr_stmt>

    <while pos:start="21:5" pos:end="173:5">while <condition pos:start="21:11" pos:end="21:23">(<expr pos:start="21:12" pos:end="21:22"><name pos:start="21:12" pos:end="21:17">length</name> <operator pos:start="21:19" pos:end="21:20">&gt;=</operator> <literal type="number" pos:start="21:22" pos:end="21:22">4</literal></expr>)</condition> <block pos:start="21:25" pos:end="173:5">{<block_content pos:start="23:9" pos:end="171:27">

        <decl_stmt pos:start="23:9" pos:end="23:21"><decl pos:start="23:9" pos:end="23:20"><type pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:15">HEVCNAL</name> <modifier pos:start="23:17" pos:end="23:17">*</modifier></type><name pos:start="23:18" pos:end="23:20">nal</name></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:31"><decl pos:start="25:9" pos:end="25:30"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:26">extract_length</name> <init pos:start="25:28" pos:end="25:30">= <expr pos:start="25:30" pos:end="25:30"><literal type="number" pos:start="25:30" pos:end="25:30">0</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="29:9" pos:end="79:9"><if pos:start="29:9" pos:end="53:9">if <condition pos:start="29:12" pos:end="29:24">(<expr pos:start="29:13" pos:end="29:23"><name pos:start="29:13" pos:end="29:23"><name pos:start="29:13" pos:end="29:13">s</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:23">is_nalff</name></name></expr>)</condition> <block pos:start="29:26" pos:end="53:9">{<block_content pos:start="31:13" pos:end="51:13">

            <decl_stmt pos:start="31:13" pos:end="31:18"><decl pos:start="31:13" pos:end="31:17"><type pos:start="31:13" pos:end="31:15"><name pos:start="31:13" pos:end="31:15">int</name></type> <name pos:start="31:17" pos:end="31:17">i</name></decl>;</decl_stmt>

            <for pos:start="33:13" pos:end="35:64">for <control pos:start="33:17" pos:end="33:52">(<init pos:start="33:18" pos:end="33:23"><expr pos:start="33:18" pos:end="33:22"><name pos:start="33:18" pos:end="33:18">i</name> <operator pos:start="33:20" pos:end="33:20">=</operator> <literal type="number" pos:start="33:22" pos:end="33:22">0</literal></expr>;</init> <condition pos:start="33:25" pos:end="33:47"><expr pos:start="33:25" pos:end="33:46"><name pos:start="33:25" pos:end="33:25">i</name> <operator pos:start="33:27" pos:end="33:27">&lt;</operator> <name pos:start="33:29" pos:end="33:46"><name pos:start="33:29" pos:end="33:29">s</name><operator pos:start="33:30" pos:end="33:31">-&gt;</operator><name pos:start="33:32" pos:end="33:46">nal_length_size</name></name></expr>;</condition> <incr pos:start="33:49" pos:end="33:51"><expr pos:start="33:49" pos:end="33:51"><name pos:start="33:49" pos:end="33:49">i</name><operator pos:start="33:50" pos:end="33:51">++</operator></expr></incr>)</control><block type="pseudo" pos:start="35:17" pos:end="35:64"><block_content pos:start="35:17" pos:end="35:64">

                <expr_stmt pos:start="35:17" pos:end="35:64"><expr pos:start="35:17" pos:end="35:63"><name pos:start="35:17" pos:end="35:30">extract_length</name> <operator pos:start="35:32" pos:end="35:32">=</operator> <operator pos:start="35:34" pos:end="35:34">(</operator><name pos:start="35:35" pos:end="35:48">extract_length</name> <operator pos:start="35:50" pos:end="35:51">&lt;&lt;</operator> <literal type="number" pos:start="35:53" pos:end="35:53">8</literal><operator pos:start="35:54" pos:end="35:54">)</operator> <operator pos:start="35:56" pos:end="35:56">|</operator> <name pos:start="35:58" pos:end="35:63"><name pos:start="35:58" pos:end="35:60">buf</name><index pos:start="35:61" pos:end="35:63">[<expr pos:start="35:62" pos:end="35:62"><name pos:start="35:62" pos:end="35:62">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="37:13" pos:end="37:41"><expr pos:start="37:13" pos:end="37:40"><name pos:start="37:13" pos:end="37:15">buf</name>    <operator pos:start="37:20" pos:end="37:21">+=</operator> <name pos:start="37:23" pos:end="37:40"><name pos:start="37:23" pos:end="37:23">s</name><operator pos:start="37:24" pos:end="37:25">-&gt;</operator><name pos:start="37:26" pos:end="37:40">nal_length_size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:41"><expr pos:start="39:13" pos:end="39:40"><name pos:start="39:13" pos:end="39:18">length</name> <operator pos:start="39:20" pos:end="39:21">-=</operator> <name pos:start="39:23" pos:end="39:40"><name pos:start="39:23" pos:end="39:23">s</name><operator pos:start="39:24" pos:end="39:25">-&gt;</operator><name pos:start="39:26" pos:end="39:40">nal_length_size</name></name></expr>;</expr_stmt>



            <if_stmt pos:start="43:13" pos:end="51:13"><if pos:start="43:13" pos:end="51:13">if <condition pos:start="43:16" pos:end="43:40">(<expr pos:start="43:17" pos:end="43:39"><name pos:start="43:17" pos:end="43:30">extract_length</name> <operator pos:start="43:32" pos:end="43:32">&gt;</operator> <name pos:start="43:34" pos:end="43:39">length</name></expr>)</condition> <block pos:start="43:42" pos:end="51:13">{<block_content pos:start="45:17" pos:end="49:26">

                <expr_stmt pos:start="45:17" pos:end="45:75"><expr pos:start="45:17" pos:end="45:74"><call pos:start="45:17" pos:end="45:74"><name pos:start="45:17" pos:end="45:22">av_log</name><argument_list pos:start="45:23" pos:end="45:74">(<argument pos:start="45:24" pos:end="45:31"><expr pos:start="45:24" pos:end="45:31"><name pos:start="45:24" pos:end="45:31"><name pos:start="45:24" pos:end="45:24">s</name><operator pos:start="45:25" pos:end="45:26">-&gt;</operator><name pos:start="45:27" pos:end="45:31">avctx</name></name></expr></argument>, <argument pos:start="45:34" pos:end="45:45"><expr pos:start="45:34" pos:end="45:45"><name pos:start="45:34" pos:end="45:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="45:48" pos:end="45:73"><expr pos:start="45:48" pos:end="45:73"><literal type="string" pos:start="45:48" pos:end="45:73">"Invalid NAL unit size.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="47:17" pos:end="47:42"><expr pos:start="47:17" pos:end="47:41"><name pos:start="47:17" pos:end="47:19">ret</name> <operator pos:start="47:21" pos:end="47:21">=</operator> <name pos:start="47:23" pos:end="47:41">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

                <goto pos:start="49:17" pos:end="49:26">goto <name pos:start="49:22" pos:end="49:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="53:11" pos:end="79:9">else <block pos:start="53:16" pos:end="79:9">{<block_content pos:start="55:13" pos:end="77:24">

            <if_stmt pos:start="55:13" pos:end="63:13"><if pos:start="55:13" pos:end="63:13">if <condition pos:start="55:16" pos:end="55:28">(<expr pos:start="55:17" pos:end="55:27"><name pos:start="55:17" pos:end="55:22"><name pos:start="55:17" pos:end="55:19">buf</name><index pos:start="55:20" pos:end="55:22">[<expr pos:start="55:21" pos:end="55:21"><literal type="number" pos:start="55:21" pos:end="55:21">2</literal></expr>]</index></name> <operator pos:start="55:24" pos:end="55:25">==</operator> <literal type="number" pos:start="55:27" pos:end="55:27">0</literal></expr>)</condition> <block pos:start="55:30" pos:end="63:13">{<block_content pos:start="57:17" pos:end="61:25">

                <expr_stmt pos:start="57:17" pos:end="57:25"><expr pos:start="57:17" pos:end="57:24"><name pos:start="57:17" pos:end="57:22">length</name><operator pos:start="57:23" pos:end="57:24">--</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="59:17" pos:end="59:22"><expr pos:start="59:17" pos:end="59:21"><name pos:start="59:17" pos:end="59:19">buf</name><operator pos:start="59:20" pos:end="59:21">++</operator></expr>;</expr_stmt>

                <continue pos:start="61:17" pos:end="61:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="65:13" pos:end="71:13"><if pos:start="65:13" pos:end="71:13">if <condition pos:start="65:16" pos:end="65:58">(<expr pos:start="65:17" pos:end="65:57"><name pos:start="65:17" pos:end="65:22"><name pos:start="65:17" pos:end="65:19">buf</name><index pos:start="65:20" pos:end="65:22">[<expr pos:start="65:21" pos:end="65:21"><literal type="number" pos:start="65:21" pos:end="65:21">0</literal></expr>]</index></name> <operator pos:start="65:24" pos:end="65:25">!=</operator> <literal type="number" pos:start="65:27" pos:end="65:27">0</literal> <operator pos:start="65:29" pos:end="65:30">||</operator> <name pos:start="65:32" pos:end="65:37"><name pos:start="65:32" pos:end="65:34">buf</name><index pos:start="65:35" pos:end="65:37">[<expr pos:start="65:36" pos:end="65:36"><literal type="number" pos:start="65:36" pos:end="65:36">1</literal></expr>]</index></name> <operator pos:start="65:39" pos:end="65:40">!=</operator> <literal type="number" pos:start="65:42" pos:end="65:42">0</literal> <operator pos:start="65:44" pos:end="65:45">||</operator> <name pos:start="65:47" pos:end="65:52"><name pos:start="65:47" pos:end="65:49">buf</name><index pos:start="65:50" pos:end="65:52">[<expr pos:start="65:51" pos:end="65:51"><literal type="number" pos:start="65:51" pos:end="65:51">2</literal></expr>]</index></name> <operator pos:start="65:54" pos:end="65:55">!=</operator> <literal type="number" pos:start="65:57" pos:end="65:57">1</literal></expr>)</condition> <block pos:start="65:60" pos:end="71:13">{<block_content pos:start="67:17" pos:end="69:26">

                <expr_stmt pos:start="67:17" pos:end="67:42"><expr pos:start="67:17" pos:end="67:41"><name pos:start="67:17" pos:end="67:19">ret</name> <operator pos:start="67:21" pos:end="67:21">=</operator> <name pos:start="67:23" pos:end="67:41">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

                <goto pos:start="69:17" pos:end="69:26">goto <name pos:start="69:22" pos:end="69:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="75:13" pos:end="75:24"><expr pos:start="75:13" pos:end="75:23"><name pos:start="75:13" pos:end="75:15">buf</name>    <operator pos:start="75:20" pos:end="75:21">+=</operator> <literal type="number" pos:start="75:23" pos:end="75:23">3</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:24"><expr pos:start="77:13" pos:end="77:23"><name pos:start="77:13" pos:end="77:18">length</name> <operator pos:start="77:20" pos:end="77:21">-=</operator> <literal type="number" pos:start="77:23" pos:end="77:23">3</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="83:9" pos:end="85:36"><if pos:start="83:9" pos:end="85:36">if <condition pos:start="83:12" pos:end="83:25">(<expr pos:start="83:13" pos:end="83:24"><operator pos:start="83:13" pos:end="83:13">!</operator><name pos:start="83:14" pos:end="83:24"><name pos:start="83:14" pos:end="83:14">s</name><operator pos:start="83:15" pos:end="83:16">-&gt;</operator><name pos:start="83:17" pos:end="83:24">is_nalff</name></name></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:36"><block_content pos:start="85:13" pos:end="85:36">

            <expr_stmt pos:start="85:13" pos:end="85:36"><expr pos:start="85:13" pos:end="85:35"><name pos:start="85:13" pos:end="85:26">extract_length</name> <operator pos:start="85:28" pos:end="85:28">=</operator> <name pos:start="85:30" pos:end="85:35">length</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="89:9" pos:end="119:9"><if pos:start="89:9" pos:end="119:9">if <condition pos:start="89:12" pos:end="89:47">(<expr pos:start="89:13" pos:end="89:46"><name pos:start="89:13" pos:end="89:29"><name pos:start="89:13" pos:end="89:13">s</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:29">nals_allocated</name></name> <operator pos:start="89:31" pos:end="89:31">&lt;</operator> <name pos:start="89:33" pos:end="89:42"><name pos:start="89:33" pos:end="89:33">s</name><operator pos:start="89:34" pos:end="89:35">-&gt;</operator><name pos:start="89:36" pos:end="89:42">nb_nals</name></name> <operator pos:start="89:44" pos:end="89:44">+</operator> <literal type="number" pos:start="89:46" pos:end="89:46">1</literal></expr>)</condition> <block pos:start="89:49" pos:end="119:9">{<block_content pos:start="91:13" pos:end="117:41">

            <decl_stmt pos:start="91:13" pos:end="91:49"><decl pos:start="91:13" pos:end="91:48"><type pos:start="91:13" pos:end="91:15"><name pos:start="91:13" pos:end="91:15">int</name></type> <name pos:start="91:17" pos:end="91:24">new_size</name> <init pos:start="91:26" pos:end="91:48">= <expr pos:start="91:28" pos:end="91:48"><name pos:start="91:28" pos:end="91:44"><name pos:start="91:28" pos:end="91:28">s</name><operator pos:start="91:29" pos:end="91:30">-&gt;</operator><name pos:start="91:31" pos:end="91:44">nals_allocated</name></name> <operator pos:start="91:46" pos:end="91:46">+</operator> <literal type="number" pos:start="91:48" pos:end="91:48">1</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="93:13" pos:end="93:77"><decl pos:start="93:13" pos:end="93:76"><type pos:start="93:13" pos:end="93:21"><name pos:start="93:13" pos:end="93:19">HEVCNAL</name> <modifier pos:start="93:21" pos:end="93:21">*</modifier></type><name pos:start="93:22" pos:end="93:24">tmp</name> <init pos:start="93:26" pos:end="93:76">= <expr pos:start="93:28" pos:end="93:76"><call pos:start="93:28" pos:end="93:76"><name pos:start="93:28" pos:end="93:43">av_realloc_array</name><argument_list pos:start="93:44" pos:end="93:76">(<argument pos:start="93:45" pos:end="93:51"><expr pos:start="93:45" pos:end="93:51"><name pos:start="93:45" pos:end="93:51"><name pos:start="93:45" pos:end="93:45">s</name><operator pos:start="93:46" pos:end="93:47">-&gt;</operator><name pos:start="93:48" pos:end="93:51">nals</name></name></expr></argument>, <argument pos:start="93:54" pos:end="93:61"><expr pos:start="93:54" pos:end="93:61"><name pos:start="93:54" pos:end="93:61">new_size</name></expr></argument>, <argument pos:start="93:64" pos:end="93:75"><expr pos:start="93:64" pos:end="93:75"><sizeof pos:start="93:64" pos:end="93:75">sizeof<argument_list pos:start="93:70" pos:end="93:75">(<argument pos:start="93:71" pos:end="93:74"><expr pos:start="93:71" pos:end="93:74"><operator pos:start="93:71" pos:end="93:71">*</operator><name pos:start="93:72" pos:end="93:74">tmp</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="95:13" pos:end="101:13"><if pos:start="95:13" pos:end="101:13">if <condition pos:start="95:16" pos:end="95:21">(<expr pos:start="95:17" pos:end="95:20"><operator pos:start="95:17" pos:end="95:17">!</operator><name pos:start="95:18" pos:end="95:20">tmp</name></expr>)</condition> <block pos:start="95:23" pos:end="101:13">{<block_content pos:start="97:17" pos:end="99:26">

                <expr_stmt pos:start="97:17" pos:end="97:38"><expr pos:start="97:17" pos:end="97:37"><name pos:start="97:17" pos:end="97:19">ret</name> <operator pos:start="97:21" pos:end="97:21">=</operator> <call pos:start="97:23" pos:end="97:37"><name pos:start="97:23" pos:end="97:29">AVERROR</name><argument_list pos:start="97:30" pos:end="97:37">(<argument pos:start="97:31" pos:end="97:36"><expr pos:start="97:31" pos:end="97:36"><name pos:start="97:31" pos:end="97:36">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="99:17" pos:end="99:26">goto <name pos:start="99:22" pos:end="99:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:26"><expr pos:start="103:13" pos:end="103:25"><name pos:start="103:13" pos:end="103:19"><name pos:start="103:13" pos:end="103:13">s</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:19">nals</name></name> <operator pos:start="103:21" pos:end="103:21">=</operator> <name pos:start="103:23" pos:end="103:25">tmp</name></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:98"><expr pos:start="105:13" pos:end="105:97"><call pos:start="105:13" pos:end="105:97"><name pos:start="105:13" pos:end="105:18">memset</name><argument_list pos:start="105:19" pos:end="105:97">(<argument pos:start="105:20" pos:end="105:46"><expr pos:start="105:20" pos:end="105:46"><name pos:start="105:20" pos:end="105:26"><name pos:start="105:20" pos:end="105:20">s</name><operator pos:start="105:21" pos:end="105:22">-&gt;</operator><name pos:start="105:23" pos:end="105:26">nals</name></name> <operator pos:start="105:28" pos:end="105:28">+</operator> <name pos:start="105:30" pos:end="105:46"><name pos:start="105:30" pos:end="105:30">s</name><operator pos:start="105:31" pos:end="105:32">-&gt;</operator><name pos:start="105:33" pos:end="105:46">nals_allocated</name></name></expr></argument>, <argument pos:start="105:49" pos:end="105:49"><expr pos:start="105:49" pos:end="105:49"><literal type="number" pos:start="105:49" pos:end="105:49">0</literal></expr></argument>, <argument pos:start="105:52" pos:end="105:96"><expr pos:start="105:52" pos:end="105:96"><operator pos:start="105:52" pos:end="105:52">(</operator><name pos:start="105:53" pos:end="105:60">new_size</name> <operator pos:start="105:62" pos:end="105:62">-</operator> <name pos:start="105:64" pos:end="105:80"><name pos:start="105:64" pos:end="105:64">s</name><operator pos:start="105:65" pos:end="105:66">-&gt;</operator><name pos:start="105:67" pos:end="105:80">nals_allocated</name></name><operator pos:start="105:81" pos:end="105:81">)</operator> <operator pos:start="105:83" pos:end="105:83">*</operator> <sizeof pos:start="105:85" pos:end="105:96">sizeof<argument_list pos:start="105:91" pos:end="105:96">(<argument pos:start="105:92" pos:end="105:95"><expr pos:start="105:92" pos:end="105:95"><operator pos:start="105:92" pos:end="105:92">*</operator><name pos:start="105:93" pos:end="105:95">tmp</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:94"><expr pos:start="107:13" pos:end="107:93"><call pos:start="107:13" pos:end="107:93"><name pos:start="107:13" pos:end="107:29">av_reallocp_array</name><argument_list pos:start="107:30" pos:end="107:93">(<argument pos:start="107:31" pos:end="107:51"><expr pos:start="107:31" pos:end="107:51"><operator pos:start="107:31" pos:end="107:31">&amp;</operator><name pos:start="107:32" pos:end="107:51"><name pos:start="107:32" pos:end="107:32">s</name><operator pos:start="107:33" pos:end="107:34">-&gt;</operator><name pos:start="107:35" pos:end="107:51">skipped_bytes_nal</name></name></expr></argument>, <argument pos:start="107:54" pos:end="107:61"><expr pos:start="107:54" pos:end="107:61"><name pos:start="107:54" pos:end="107:61">new_size</name></expr></argument>, <argument pos:start="107:64" pos:end="107:92"><expr pos:start="107:64" pos:end="107:92"><sizeof pos:start="107:64" pos:end="107:92">sizeof<argument_list pos:start="107:70" pos:end="107:92">(<argument pos:start="107:71" pos:end="107:91"><expr pos:start="107:71" pos:end="107:91"><operator pos:start="107:71" pos:end="107:71">*</operator><name pos:start="107:72" pos:end="107:91"><name pos:start="107:72" pos:end="107:72">s</name><operator pos:start="107:73" pos:end="107:74">-&gt;</operator><name pos:start="107:75" pos:end="107:91">skipped_bytes_nal</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:112"><expr pos:start="109:13" pos:end="109:111"><call pos:start="109:13" pos:end="109:111"><name pos:start="109:13" pos:end="109:29">av_reallocp_array</name><argument_list pos:start="109:30" pos:end="109:111">(<argument pos:start="109:31" pos:end="109:60"><expr pos:start="109:31" pos:end="109:60"><operator pos:start="109:31" pos:end="109:31">&amp;</operator><name pos:start="109:32" pos:end="109:60"><name pos:start="109:32" pos:end="109:32">s</name><operator pos:start="109:33" pos:end="109:34">-&gt;</operator><name pos:start="109:35" pos:end="109:60">skipped_bytes_pos_size_nal</name></name></expr></argument>, <argument pos:start="109:63" pos:end="109:70"><expr pos:start="109:63" pos:end="109:70"><name pos:start="109:63" pos:end="109:70">new_size</name></expr></argument>, <argument pos:start="109:73" pos:end="109:110"><expr pos:start="109:73" pos:end="109:110"><sizeof pos:start="109:73" pos:end="109:110">sizeof<argument_list pos:start="109:79" pos:end="109:110">(<argument pos:start="109:80" pos:end="109:109"><expr pos:start="109:80" pos:end="109:109"><operator pos:start="109:80" pos:end="109:80">*</operator><name pos:start="109:81" pos:end="109:109"><name pos:start="109:81" pos:end="109:81">s</name><operator pos:start="109:82" pos:end="109:83">-&gt;</operator><name pos:start="109:84" pos:end="109:109">skipped_bytes_pos_size_nal</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:102"><expr pos:start="111:13" pos:end="111:101"><call pos:start="111:13" pos:end="111:101"><name pos:start="111:13" pos:end="111:29">av_reallocp_array</name><argument_list pos:start="111:30" pos:end="111:101">(<argument pos:start="111:31" pos:end="111:55"><expr pos:start="111:31" pos:end="111:55"><operator pos:start="111:31" pos:end="111:31">&amp;</operator><name pos:start="111:32" pos:end="111:55"><name pos:start="111:32" pos:end="111:32">s</name><operator pos:start="111:33" pos:end="111:34">-&gt;</operator><name pos:start="111:35" pos:end="111:55">skipped_bytes_pos_nal</name></name></expr></argument>, <argument pos:start="111:58" pos:end="111:65"><expr pos:start="111:58" pos:end="111:65"><name pos:start="111:58" pos:end="111:65">new_size</name></expr></argument>, <argument pos:start="111:68" pos:end="111:100"><expr pos:start="111:68" pos:end="111:100"><sizeof pos:start="111:68" pos:end="111:100">sizeof<argument_list pos:start="111:74" pos:end="111:100">(<argument pos:start="111:75" pos:end="111:99"><expr pos:start="111:75" pos:end="111:99"><operator pos:start="111:75" pos:end="111:75">*</operator><name pos:start="111:76" pos:end="111:99"><name pos:start="111:76" pos:end="111:76">s</name><operator pos:start="111:77" pos:end="111:78">-&gt;</operator><name pos:start="111:79" pos:end="111:99">skipped_bytes_pos_nal</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:68"><expr pos:start="113:13" pos:end="113:67"><name pos:start="113:13" pos:end="113:60"><name pos:start="113:13" pos:end="113:13">s</name><operator pos:start="113:14" pos:end="113:15">-&gt;</operator><name pos:start="113:16" pos:end="113:41">skipped_bytes_pos_size_nal</name><index pos:start="113:42" pos:end="113:60">[<expr pos:start="113:43" pos:end="113:59"><name pos:start="113:43" pos:end="113:59"><name pos:start="113:43" pos:end="113:43">s</name><operator pos:start="113:44" pos:end="113:45">-&gt;</operator><name pos:start="113:46" pos:end="113:59">nals_allocated</name></name></expr>]</index></name> <operator pos:start="113:62" pos:end="113:62">=</operator> <literal type="number" pos:start="113:64" pos:end="113:67">1024</literal></expr>;</expr_stmt> <comment type="line" pos:start="113:70" pos:end="113:91">// initial buffer size</comment>

            <expr_stmt pos:start="115:13" pos:end="115:155"><expr pos:start="115:13" pos:end="115:154"><name pos:start="115:13" pos:end="115:55"><name pos:start="115:13" pos:end="115:13">s</name><operator pos:start="115:14" pos:end="115:15">-&gt;</operator><name pos:start="115:16" pos:end="115:36">skipped_bytes_pos_nal</name><index pos:start="115:37" pos:end="115:55">[<expr pos:start="115:38" pos:end="115:54"><name pos:start="115:38" pos:end="115:54"><name pos:start="115:38" pos:end="115:38">s</name><operator pos:start="115:39" pos:end="115:40">-&gt;</operator><name pos:start="115:41" pos:end="115:54">nals_allocated</name></name></expr>]</index></name> <operator pos:start="115:57" pos:end="115:57">=</operator> <call pos:start="115:59" pos:end="115:154"><name pos:start="115:59" pos:end="115:73">av_malloc_array</name><argument_list pos:start="115:74" pos:end="115:154">(<argument pos:start="115:75" pos:end="115:122"><expr pos:start="115:75" pos:end="115:122"><name pos:start="115:75" pos:end="115:122"><name pos:start="115:75" pos:end="115:75">s</name><operator pos:start="115:76" pos:end="115:77">-&gt;</operator><name pos:start="115:78" pos:end="115:103">skipped_bytes_pos_size_nal</name><index pos:start="115:104" pos:end="115:122">[<expr pos:start="115:105" pos:end="115:121"><name pos:start="115:105" pos:end="115:121"><name pos:start="115:105" pos:end="115:105">s</name><operator pos:start="115:106" pos:end="115:107">-&gt;</operator><name pos:start="115:108" pos:end="115:121">nals_allocated</name></name></expr>]</index></name></expr></argument>, <argument pos:start="115:125" pos:end="115:153"><expr pos:start="115:125" pos:end="115:153"><sizeof pos:start="115:125" pos:end="115:153">sizeof<argument_list pos:start="115:131" pos:end="115:153">(<argument pos:start="115:132" pos:end="115:152"><expr pos:start="115:132" pos:end="115:152"><operator pos:start="115:132" pos:end="115:132">*</operator><name pos:start="115:133" pos:end="115:152"><name pos:start="115:133" pos:end="115:133">s</name><operator pos:start="115:134" pos:end="115:135">-&gt;</operator><name pos:start="115:136" pos:end="115:152">skipped_bytes_pos</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:41"><expr pos:start="117:13" pos:end="117:40"><name pos:start="117:13" pos:end="117:29"><name pos:start="117:13" pos:end="117:13">s</name><operator pos:start="117:14" pos:end="117:15">-&gt;</operator><name pos:start="117:16" pos:end="117:29">nals_allocated</name></name> <operator pos:start="117:31" pos:end="117:31">=</operator> <name pos:start="117:33" pos:end="117:40">new_size</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:78"><expr pos:start="121:9" pos:end="121:77"><name pos:start="121:9" pos:end="121:33"><name pos:start="121:9" pos:end="121:9">s</name><operator pos:start="121:10" pos:end="121:11">-&gt;</operator><name pos:start="121:12" pos:end="121:33">skipped_bytes_pos_size</name></name> <operator pos:start="121:35" pos:end="121:35">=</operator> <name pos:start="121:37" pos:end="121:77"><name pos:start="121:37" pos:end="121:37">s</name><operator pos:start="121:38" pos:end="121:39">-&gt;</operator><name pos:start="121:40" pos:end="121:65">skipped_bytes_pos_size_nal</name><index pos:start="121:66" pos:end="121:77">[<expr pos:start="121:67" pos:end="121:76"><name pos:start="121:67" pos:end="121:76"><name pos:start="121:67" pos:end="121:67">s</name><operator pos:start="121:68" pos:end="121:69">-&gt;</operator><name pos:start="121:70" pos:end="121:76">nb_nals</name></name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:68"><expr pos:start="123:9" pos:end="123:67"><name pos:start="123:9" pos:end="123:28"><name pos:start="123:9" pos:end="123:9">s</name><operator pos:start="123:10" pos:end="123:11">-&gt;</operator><name pos:start="123:12" pos:end="123:28">skipped_bytes_pos</name></name> <operator pos:start="123:30" pos:end="123:30">=</operator> <name pos:start="123:32" pos:end="123:67"><name pos:start="123:32" pos:end="123:32">s</name><operator pos:start="123:33" pos:end="123:34">-&gt;</operator><name pos:start="123:35" pos:end="123:55">skipped_bytes_pos_nal</name><index pos:start="123:56" pos:end="123:67">[<expr pos:start="123:57" pos:end="123:66"><name pos:start="123:57" pos:end="123:66"><name pos:start="123:57" pos:end="123:57">s</name><operator pos:start="123:58" pos:end="123:59">-&gt;</operator><name pos:start="123:60" pos:end="123:66">nb_nals</name></name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:35"><expr pos:start="125:9" pos:end="125:34"><name pos:start="125:9" pos:end="125:11">nal</name> <operator pos:start="125:13" pos:end="125:13">=</operator> <operator pos:start="125:15" pos:end="125:15">&amp;</operator><name pos:start="125:16" pos:end="125:34"><name pos:start="125:16" pos:end="125:16">s</name><operator pos:start="125:17" pos:end="125:18">-&gt;</operator><name pos:start="125:19" pos:end="125:22">nals</name><index pos:start="125:23" pos:end="125:34">[<expr pos:start="125:24" pos:end="125:33"><name pos:start="125:24" pos:end="125:33"><name pos:start="125:24" pos:end="125:24">s</name><operator pos:start="125:25" pos:end="125:26">-&gt;</operator><name pos:start="125:27" pos:end="125:33">nb_nals</name></name></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="129:9" pos:end="129:61"><expr pos:start="129:9" pos:end="129:60"><name pos:start="129:9" pos:end="129:16">consumed</name> <operator pos:start="129:18" pos:end="129:18">=</operator> <call pos:start="129:20" pos:end="129:60"><name pos:start="129:20" pos:end="129:31">extract_rbsp</name><argument_list pos:start="129:32" pos:end="129:60">(<argument pos:start="129:33" pos:end="129:33"><expr pos:start="129:33" pos:end="129:33"><name pos:start="129:33" pos:end="129:33">s</name></expr></argument>, <argument pos:start="129:36" pos:end="129:38"><expr pos:start="129:36" pos:end="129:38"><name pos:start="129:36" pos:end="129:38">buf</name></expr></argument>, <argument pos:start="129:41" pos:end="129:54"><expr pos:start="129:41" pos:end="129:54"><name pos:start="129:41" pos:end="129:54">extract_length</name></expr></argument>, <argument pos:start="129:57" pos:end="129:59"><expr pos:start="129:57" pos:end="129:59"><name pos:start="129:57" pos:end="129:59">nal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="133:9" pos:end="133:60"><expr pos:start="133:9" pos:end="133:59"><name pos:start="133:9" pos:end="133:40"><name pos:start="133:9" pos:end="133:9">s</name><operator pos:start="133:10" pos:end="133:11">-&gt;</operator><name pos:start="133:12" pos:end="133:28">skipped_bytes_nal</name><index pos:start="133:29" pos:end="133:40">[<expr pos:start="133:30" pos:end="133:39"><name pos:start="133:30" pos:end="133:39"><name pos:start="133:30" pos:end="133:30">s</name><operator pos:start="133:31" pos:end="133:32">-&gt;</operator><name pos:start="133:33" pos:end="133:39">nb_nals</name></name></expr>]</index></name> <operator pos:start="133:42" pos:end="133:42">=</operator> <name pos:start="133:44" pos:end="133:59"><name pos:start="133:44" pos:end="133:44">s</name><operator pos:start="133:45" pos:end="133:46">-&gt;</operator><name pos:start="133:47" pos:end="133:59">skipped_bytes</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:78"><expr pos:start="135:9" pos:end="135:77"><name pos:start="135:9" pos:end="135:49"><name pos:start="135:9" pos:end="135:9">s</name><operator pos:start="135:10" pos:end="135:11">-&gt;</operator><name pos:start="135:12" pos:end="135:37">skipped_bytes_pos_size_nal</name><index pos:start="135:38" pos:end="135:49">[<expr pos:start="135:39" pos:end="135:48"><name pos:start="135:39" pos:end="135:48"><name pos:start="135:39" pos:end="135:39">s</name><operator pos:start="135:40" pos:end="135:41">-&gt;</operator><name pos:start="135:42" pos:end="135:48">nb_nals</name></name></expr>]</index></name> <operator pos:start="135:51" pos:end="135:51">=</operator> <name pos:start="135:53" pos:end="135:77"><name pos:start="135:53" pos:end="135:53">s</name><operator pos:start="135:54" pos:end="135:55">-&gt;</operator><name pos:start="135:56" pos:end="135:77">skipped_bytes_pos_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:70"><expr pos:start="137:9" pos:end="137:69"><name pos:start="137:9" pos:end="137:46"><name pos:start="137:9" pos:end="137:9">s</name><operator pos:start="137:10" pos:end="137:11">-&gt;</operator><name pos:start="137:12" pos:end="137:32">skipped_bytes_pos_nal</name><index pos:start="137:33" pos:end="137:46">[<expr pos:start="137:34" pos:end="137:45"><name pos:start="137:34" pos:end="137:43"><name pos:start="137:34" pos:end="137:34">s</name><operator pos:start="137:35" pos:end="137:36">-&gt;</operator><name pos:start="137:37" pos:end="137:43">nb_nals</name></name><operator pos:start="137:44" pos:end="137:45">++</operator></expr>]</index></name> <operator pos:start="137:48" pos:end="137:48">=</operator> <name pos:start="137:50" pos:end="137:69"><name pos:start="137:50" pos:end="137:50">s</name><operator pos:start="137:51" pos:end="137:52">-&gt;</operator><name pos:start="137:53" pos:end="137:69">skipped_bytes_pos</name></name></expr>;</expr_stmt>





        <if_stmt pos:start="143:9" pos:end="149:9"><if pos:start="143:9" pos:end="149:9">if <condition pos:start="143:12" pos:end="143:25">(<expr pos:start="143:13" pos:end="143:24"><name pos:start="143:13" pos:end="143:20">consumed</name> <operator pos:start="143:22" pos:end="143:22">&lt;</operator> <literal type="number" pos:start="143:24" pos:end="143:24">0</literal></expr>)</condition> <block pos:start="143:27" pos:end="149:9">{<block_content pos:start="145:13" pos:end="147:22">

            <expr_stmt pos:start="145:13" pos:end="145:27"><expr pos:start="145:13" pos:end="145:26"><name pos:start="145:13" pos:end="145:15">ret</name> <operator pos:start="145:17" pos:end="145:17">=</operator> <name pos:start="145:19" pos:end="145:26">consumed</name></expr>;</expr_stmt>

            <goto pos:start="147:13" pos:end="147:22">goto <name pos:start="147:18" pos:end="147:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="153:9" pos:end="153:67"><expr pos:start="153:9" pos:end="153:66"><name pos:start="153:9" pos:end="153:11">ret</name> <operator pos:start="153:13" pos:end="153:13">=</operator> <call pos:start="153:15" pos:end="153:66"><name pos:start="153:15" pos:end="153:28">init_get_bits8</name><argument_list pos:start="153:29" pos:end="153:66">(<argument pos:start="153:30" pos:end="153:43"><expr pos:start="153:30" pos:end="153:43"><operator pos:start="153:30" pos:end="153:30">&amp;</operator><name pos:start="153:31" pos:end="153:43"><name pos:start="153:31" pos:end="153:31">s</name><operator pos:start="153:32" pos:end="153:33">-&gt;</operator><name pos:start="153:34" pos:end="153:39">HEVClc</name><operator pos:start="153:40" pos:end="153:41">-&gt;</operator><name pos:start="153:42" pos:end="153:43">gb</name></name></expr></argument>, <argument pos:start="153:46" pos:end="153:54"><expr pos:start="153:46" pos:end="153:54"><name pos:start="153:46" pos:end="153:54"><name pos:start="153:46" pos:end="153:48">nal</name><operator pos:start="153:49" pos:end="153:50">-&gt;</operator><name pos:start="153:51" pos:end="153:54">data</name></name></expr></argument>, <argument pos:start="153:57" pos:end="153:65"><expr pos:start="153:57" pos:end="153:65"><name pos:start="153:57" pos:end="153:65"><name pos:start="153:57" pos:end="153:59">nal</name><operator pos:start="153:60" pos:end="153:61">-&gt;</operator><name pos:start="153:62" pos:end="153:65">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="155:9" pos:end="157:22"><if pos:start="155:9" pos:end="157:22">if <condition pos:start="155:12" pos:end="155:20">(<expr pos:start="155:13" pos:end="155:19"><name pos:start="155:13" pos:end="155:15">ret</name> <operator pos:start="155:17" pos:end="155:17">&lt;</operator> <literal type="number" pos:start="155:19" pos:end="155:19">0</literal></expr>)</condition><block type="pseudo" pos:start="157:13" pos:end="157:22"><block_content pos:start="157:13" pos:end="157:22">

            <goto pos:start="157:13" pos:end="157:22">goto <name pos:start="157:18" pos:end="157:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:24"><expr pos:start="159:9" pos:end="159:23"><call pos:start="159:9" pos:end="159:23"><name pos:start="159:9" pos:end="159:20">hls_nal_unit</name><argument_list pos:start="159:21" pos:end="159:23">(<argument pos:start="159:22" pos:end="159:22"><expr pos:start="159:22" pos:end="159:22"><name pos:start="159:22" pos:end="159:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="163:9" pos:end="165:23"><if pos:start="163:9" pos:end="165:23">if <condition pos:start="163:12" pos:end="163:79">(<expr pos:start="163:13" pos:end="163:78"><name pos:start="163:13" pos:end="163:28"><name pos:start="163:13" pos:end="163:13">s</name><operator pos:start="163:14" pos:end="163:15">-&gt;</operator><name pos:start="163:16" pos:end="163:28">nal_unit_type</name></name> <operator pos:start="163:30" pos:end="163:31">==</operator> <name pos:start="163:33" pos:end="163:43">NAL_EOS_NUT</name> <operator pos:start="163:45" pos:end="163:46">||</operator> <name pos:start="163:48" pos:end="163:63"><name pos:start="163:48" pos:end="163:48">s</name><operator pos:start="163:49" pos:end="163:50">-&gt;</operator><name pos:start="163:51" pos:end="163:63">nal_unit_type</name></name> <operator pos:start="163:65" pos:end="163:66">==</operator> <name pos:start="163:68" pos:end="163:78">NAL_EOB_NUT</name></expr>)</condition><block type="pseudo" pos:start="165:13" pos:end="165:23"><block_content pos:start="165:13" pos:end="165:23">

            <expr_stmt pos:start="165:13" pos:end="165:23"><expr pos:start="165:13" pos:end="165:22"><name pos:start="165:13" pos:end="165:18"><name pos:start="165:13" pos:end="165:13">s</name><operator pos:start="165:14" pos:end="165:15">-&gt;</operator><name pos:start="165:16" pos:end="165:18">eos</name></name> <operator pos:start="165:20" pos:end="165:20">=</operator> <literal type="number" pos:start="165:22" pos:end="165:22">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="169:9" pos:end="169:27"><expr pos:start="169:9" pos:end="169:26"><name pos:start="169:9" pos:end="169:11">buf</name>    <operator pos:start="169:16" pos:end="169:17">+=</operator> <name pos:start="169:19" pos:end="169:26">consumed</name></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:27"><expr pos:start="171:9" pos:end="171:26"><name pos:start="171:9" pos:end="171:14">length</name> <operator pos:start="171:16" pos:end="171:17">-=</operator> <name pos:start="171:19" pos:end="171:26">consumed</name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <comment type="block" pos:start="177:5" pos:end="177:29">/* parse the NAL units */</comment>

    <for pos:start="179:5" pos:end="201:5">for <control pos:start="179:9" pos:end="179:36">(<init pos:start="179:10" pos:end="179:15"><expr pos:start="179:10" pos:end="179:14"><name pos:start="179:10" pos:end="179:10">i</name> <operator pos:start="179:12" pos:end="179:12">=</operator> <literal type="number" pos:start="179:14" pos:end="179:14">0</literal></expr>;</init> <condition pos:start="179:17" pos:end="179:31"><expr pos:start="179:17" pos:end="179:30"><name pos:start="179:17" pos:end="179:17">i</name> <operator pos:start="179:19" pos:end="179:19">&lt;</operator> <name pos:start="179:21" pos:end="179:30"><name pos:start="179:21" pos:end="179:21">s</name><operator pos:start="179:22" pos:end="179:23">-&gt;</operator><name pos:start="179:24" pos:end="179:30">nb_nals</name></name></expr>;</condition> <incr pos:start="179:33" pos:end="179:35"><expr pos:start="179:33" pos:end="179:35"><name pos:start="179:33" pos:end="179:33">i</name><operator pos:start="179:34" pos:end="179:35">++</operator></expr></incr>)</control> <block pos:start="179:38" pos:end="201:5">{<block_content pos:start="181:9" pos:end="199:9">

        <decl_stmt pos:start="181:9" pos:end="181:16"><decl pos:start="181:9" pos:end="181:15"><type pos:start="181:9" pos:end="181:11"><name pos:start="181:9" pos:end="181:11">int</name></type> <name pos:start="181:13" pos:end="181:15">ret</name></decl>;</decl_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:51"><expr pos:start="183:9" pos:end="183:50"><name pos:start="183:9" pos:end="183:24"><name pos:start="183:9" pos:end="183:9">s</name><operator pos:start="183:10" pos:end="183:11">-&gt;</operator><name pos:start="183:12" pos:end="183:24">skipped_bytes</name></name> <operator pos:start="183:26" pos:end="183:26">=</operator> <name pos:start="183:28" pos:end="183:50"><name pos:start="183:28" pos:end="183:28">s</name><operator pos:start="183:29" pos:end="183:30">-&gt;</operator><name pos:start="183:31" pos:end="183:47">skipped_bytes_nal</name><index pos:start="183:48" pos:end="183:50">[<expr pos:start="183:49" pos:end="183:49"><name pos:start="183:49" pos:end="183:49">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:59"><expr pos:start="185:9" pos:end="185:58"><name pos:start="185:9" pos:end="185:28"><name pos:start="185:9" pos:end="185:9">s</name><operator pos:start="185:10" pos:end="185:11">-&gt;</operator><name pos:start="185:12" pos:end="185:28">skipped_bytes_pos</name></name> <operator pos:start="185:30" pos:end="185:30">=</operator> <name pos:start="185:32" pos:end="185:58"><name pos:start="185:32" pos:end="185:32">s</name><operator pos:start="185:33" pos:end="185:34">-&gt;</operator><name pos:start="185:35" pos:end="185:55">skipped_bytes_pos_nal</name><index pos:start="185:56" pos:end="185:58">[<expr pos:start="185:57" pos:end="185:57"><name pos:start="185:57" pos:end="185:57">i</name></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="189:9" pos:end="189:67"><expr pos:start="189:9" pos:end="189:66"><name pos:start="189:9" pos:end="189:11">ret</name> <operator pos:start="189:13" pos:end="189:13">=</operator> <call pos:start="189:15" pos:end="189:66"><name pos:start="189:15" pos:end="189:29">decode_nal_unit</name><argument_list pos:start="189:30" pos:end="189:66">(<argument pos:start="189:31" pos:end="189:31"><expr pos:start="189:31" pos:end="189:31"><name pos:start="189:31" pos:end="189:31">s</name></expr></argument>, <argument pos:start="189:34" pos:end="189:48"><expr pos:start="189:34" pos:end="189:48"><name pos:start="189:34" pos:end="189:43"><name pos:start="189:34" pos:end="189:34">s</name><operator pos:start="189:35" pos:end="189:36">-&gt;</operator><name pos:start="189:37" pos:end="189:40">nals</name><index pos:start="189:41" pos:end="189:43">[<expr pos:start="189:42" pos:end="189:42"><name pos:start="189:42" pos:end="189:42">i</name></expr>]</index></name><operator pos:start="189:44" pos:end="189:44">.</operator><name pos:start="189:45" pos:end="189:48">data</name></expr></argument>, <argument pos:start="189:51" pos:end="189:65"><expr pos:start="189:51" pos:end="189:65"><name pos:start="189:51" pos:end="189:60"><name pos:start="189:51" pos:end="189:51">s</name><operator pos:start="189:52" pos:end="189:53">-&gt;</operator><name pos:start="189:54" pos:end="189:57">nals</name><index pos:start="189:58" pos:end="189:60">[<expr pos:start="189:59" pos:end="189:59"><name pos:start="189:59" pos:end="189:59">i</name></expr>]</index></name><operator pos:start="189:61" pos:end="189:61">.</operator><name pos:start="189:62" pos:end="189:65">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="191:9" pos:end="199:9"><if pos:start="191:9" pos:end="199:9">if <condition pos:start="191:12" pos:end="191:20">(<expr pos:start="191:13" pos:end="191:19"><name pos:start="191:13" pos:end="191:15">ret</name> <operator pos:start="191:17" pos:end="191:17">&lt;</operator> <literal type="number" pos:start="191:19" pos:end="191:19">0</literal></expr>)</condition> <block pos:start="191:22" pos:end="199:9">{<block_content pos:start="193:13" pos:end="197:26">

            <expr_stmt pos:start="193:13" pos:end="193:81"><expr pos:start="193:13" pos:end="193:80"><call pos:start="193:13" pos:end="193:80"><name pos:start="193:13" pos:end="193:18">av_log</name><argument_list pos:start="193:19" pos:end="193:80">(<argument pos:start="193:20" pos:end="193:27"><expr pos:start="193:20" pos:end="193:27"><name pos:start="193:20" pos:end="193:27"><name pos:start="193:20" pos:end="193:20">s</name><operator pos:start="193:21" pos:end="193:22">-&gt;</operator><name pos:start="193:23" pos:end="193:27">avctx</name></name></expr></argument>, <argument pos:start="193:30" pos:end="193:43"><expr pos:start="193:30" pos:end="193:43"><name pos:start="193:30" pos:end="193:43">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="193:46" pos:end="193:76"><expr pos:start="193:46" pos:end="193:76"><literal type="string" pos:start="193:46" pos:end="193:76">"Error parsing NAL unit #%d.\n"</literal></expr></argument>, <argument pos:start="193:79" pos:end="193:79"><expr pos:start="193:79" pos:end="193:79"><name pos:start="193:79" pos:end="193:79">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="195:13" pos:end="197:26"><if pos:start="195:13" pos:end="197:26">if <condition pos:start="195:16" pos:end="195:58">(<expr pos:start="195:17" pos:end="195:57"><name pos:start="195:17" pos:end="195:41"><name pos:start="195:17" pos:end="195:17">s</name><operator pos:start="195:18" pos:end="195:19">-&gt;</operator><name pos:start="195:20" pos:end="195:24">avctx</name><operator pos:start="195:25" pos:end="195:26">-&gt;</operator><name pos:start="195:27" pos:end="195:41">err_recognition</name></name> <operator pos:start="195:43" pos:end="195:43">&amp;</operator> <name pos:start="195:45" pos:end="195:57">AV_EF_EXPLODE</name></expr>)</condition><block type="pseudo" pos:start="197:17" pos:end="197:26"><block_content pos:start="197:17" pos:end="197:26">

                <goto pos:start="197:17" pos:end="197:26">goto <name pos:start="197:22" pos:end="197:25">fail</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



<label pos:start="205:1" pos:end="205:5"><name pos:start="205:1" pos:end="205:4">fail</name>:</label>

    <if_stmt pos:start="207:5" pos:end="209:59"><if pos:start="207:5" pos:end="209:59">if <condition pos:start="207:8" pos:end="207:53">(<expr pos:start="207:9" pos:end="207:52"><name pos:start="207:9" pos:end="207:14"><name pos:start="207:9" pos:end="207:9">s</name><operator pos:start="207:10" pos:end="207:11">-&gt;</operator><name pos:start="207:12" pos:end="207:14">ref</name></name> <operator pos:start="207:16" pos:end="207:17">&amp;&amp;</operator> <name pos:start="207:19" pos:end="207:33"><name pos:start="207:19" pos:end="207:19">s</name><operator pos:start="207:20" pos:end="207:21">-&gt;</operator><name pos:start="207:22" pos:end="207:33">threads_type</name></name> <operator pos:start="207:35" pos:end="207:36">==</operator> <name pos:start="207:38" pos:end="207:52">FF_THREAD_FRAME</name></expr>)</condition><block type="pseudo" pos:start="209:9" pos:end="209:59"><block_content pos:start="209:9" pos:end="209:59">

        <expr_stmt pos:start="209:9" pos:end="209:59"><expr pos:start="209:9" pos:end="209:58"><call pos:start="209:9" pos:end="209:58"><name pos:start="209:9" pos:end="209:33">ff_thread_report_progress</name><argument_list pos:start="209:34" pos:end="209:58">(<argument pos:start="209:35" pos:end="209:45"><expr pos:start="209:35" pos:end="209:45"><operator pos:start="209:35" pos:end="209:35">&amp;</operator><name pos:start="209:36" pos:end="209:45"><name pos:start="209:36" pos:end="209:36">s</name><operator pos:start="209:37" pos:end="209:38">-&gt;</operator><name pos:start="209:39" pos:end="209:41">ref</name><operator pos:start="209:42" pos:end="209:43">-&gt;</operator><name pos:start="209:44" pos:end="209:45">tf</name></name></expr></argument>, <argument pos:start="209:48" pos:end="209:54"><expr pos:start="209:48" pos:end="209:54"><name pos:start="209:48" pos:end="209:54">INT_MAX</name></expr></argument>, <argument pos:start="209:57" pos:end="209:57"><expr pos:start="209:57" pos:end="209:57"><literal type="number" pos:start="209:57" pos:end="209:57">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="213:5" pos:end="213:15">return <expr pos:start="213:12" pos:end="213:14"><name pos:start="213:12" pos:end="213:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
