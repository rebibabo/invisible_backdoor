<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19687.c" pos:tabs="8"><function pos:start="1:1" pos:end="613:1"><type pos:start="1:1" pos:end="1:8"><name pos:start="1:1" pos:end="1:8">uint32_t</name></type> <name pos:start="1:10" pos:end="1:28">ff_celt_encode_band</name><parameter_list pos:start="1:29" pos:end="7:74">(<parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:38">CeltFrame</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">f</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:61"><decl pos:start="1:44" pos:end="1:61"><type pos:start="1:44" pos:end="1:61"><name pos:start="1:44" pos:end="1:57">OpusRangeCoder</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:61">rc</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:77"><decl pos:start="1:64" pos:end="1:77"><type pos:start="1:64" pos:end="1:77"><specifier pos:start="1:64" pos:end="1:68">const</specifier> <name pos:start="1:70" pos:end="1:72">int</name></type> <name pos:start="1:74" pos:end="1:77">band</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:37"><decl pos:start="3:30" pos:end="3:37"><type pos:start="3:30" pos:end="3:37"><name pos:start="3:30" pos:end="3:34">float</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:37">X</name></decl></parameter>, <parameter pos:start="3:40" pos:end="3:47"><decl pos:start="3:40" pos:end="3:47"><type pos:start="3:40" pos:end="3:47"><name pos:start="3:40" pos:end="3:44">float</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:47">Y</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:54"><decl pos:start="3:50" pos:end="3:54"><type pos:start="3:50" pos:end="3:54"><name pos:start="3:50" pos:end="3:52">int</name></type> <name pos:start="3:54" pos:end="3:54">N</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:61"><decl pos:start="3:57" pos:end="3:61"><type pos:start="3:57" pos:end="3:61"><name pos:start="3:57" pos:end="3:59">int</name></type> <name pos:start="3:61" pos:end="3:61">b</name></decl></parameter>, <parameter pos:start="3:64" pos:end="3:78"><decl pos:start="3:64" pos:end="3:78"><type pos:start="3:64" pos:end="3:78"><name pos:start="3:64" pos:end="3:71">uint32_t</name></type> <name pos:start="3:73" pos:end="3:78">blocks</name></decl></parameter>,

                             <parameter pos:start="5:30" pos:end="5:43"><decl pos:start="5:30" pos:end="5:43"><type pos:start="5:30" pos:end="5:43"><name pos:start="5:30" pos:end="5:34">float</name> <modifier pos:start="5:36" pos:end="5:36">*</modifier></type><name pos:start="5:37" pos:end="5:43">lowband</name></decl></parameter>, <parameter pos:start="5:46" pos:end="5:57"><decl pos:start="5:46" pos:end="5:57"><type pos:start="5:46" pos:end="5:57"><name pos:start="5:46" pos:end="5:48">int</name></type> <name pos:start="5:50" pos:end="5:57">duration</name></decl></parameter>, <parameter pos:start="5:60" pos:end="5:77"><decl pos:start="5:60" pos:end="5:77"><type pos:start="5:60" pos:end="5:77"><name pos:start="5:60" pos:end="5:64">float</name> <modifier pos:start="5:66" pos:end="5:66">*</modifier></type><name pos:start="5:67" pos:end="5:77">lowband_out</name></decl></parameter>, <parameter pos:start="5:80" pos:end="5:88"><decl pos:start="5:80" pos:end="5:88"><type pos:start="5:80" pos:end="5:88"><name pos:start="5:80" pos:end="5:82">int</name></type> <name pos:start="5:84" pos:end="5:88">level</name></decl></parameter>,

                             <parameter pos:start="7:30" pos:end="7:39"><decl pos:start="7:30" pos:end="7:39"><type pos:start="7:30" pos:end="7:39"><name pos:start="7:30" pos:end="7:34">float</name></type> <name pos:start="7:36" pos:end="7:39">gain</name></decl></parameter>, <parameter pos:start="7:42" pos:end="7:63"><decl pos:start="7:42" pos:end="7:63"><type pos:start="7:42" pos:end="7:63"><name pos:start="7:42" pos:end="7:46">float</name> <modifier pos:start="7:48" pos:end="7:48">*</modifier></type><name pos:start="7:49" pos:end="7:63">lowband_scratch</name></decl></parameter>, <parameter pos:start="7:66" pos:end="7:73"><decl pos:start="7:66" pos:end="7:73"><type pos:start="7:66" pos:end="7:73"><name pos:start="7:66" pos:end="7:68">int</name></type> <name pos:start="7:70" pos:end="7:73">fill</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="613:1">{<block_content pos:start="11:5" pos:end="611:14">

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:19"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">uint8_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:24">cache</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:18">dualstereo</name></decl>, <decl pos:start="13:21" pos:end="13:25"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:21" pos:end="13:25">split</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:12">imid</name> <init pos:start="15:14" pos:end="15:16">= <expr pos:start="15:16" pos:end="15:16"><literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr></init></decl>, <decl pos:start="15:19" pos:end="15:27"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:19" pos:end="15:23">iside</name> <init pos:start="15:25" pos:end="15:27">= <expr pos:start="15:27" pos:end="15:27"><literal type="number" pos:start="15:27" pos:end="15:27">0</literal></expr></init></decl>;</decl_stmt>

    <comment type="line" pos:start="17:5" pos:end="17:22">//uint32_t N0 = N;</comment>

    <decl_stmt pos:start="19:5" pos:end="19:12"><decl pos:start="19:5" pos:end="19:11"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:11">N_B</name></decl>;</decl_stmt>

    <comment type="line" pos:start="21:5" pos:end="21:15">//int N_B0;</comment>

    <decl_stmt pos:start="23:5" pos:end="23:20"><decl pos:start="23:5" pos:end="23:19"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:10">B0</name> <init pos:start="23:12" pos:end="23:19">= <expr pos:start="23:14" pos:end="23:19"><name pos:start="23:14" pos:end="23:19">blocks</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:24"><decl pos:start="25:5" pos:end="25:23"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:19">time_divide</name> <init pos:start="25:21" pos:end="25:23">= <expr pos:start="25:23" pos:end="25:23"><literal type="number" pos:start="25:23" pos:end="25:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:22"><decl pos:start="27:5" pos:end="27:21"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:17">recombine</name> <init pos:start="27:19" pos:end="27:21">= <expr pos:start="27:21" pos:end="27:21"><literal type="number" pos:start="27:21" pos:end="27:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:16"><decl pos:start="29:5" pos:end="29:15"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:11">inv</name> <init pos:start="29:13" pos:end="29:15">= <expr pos:start="29:15" pos:end="29:15"><literal type="number" pos:start="29:15" pos:end="29:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:28"><decl pos:start="31:5" pos:end="31:17"><type pos:start="31:5" pos:end="31:9"><name pos:start="31:5" pos:end="31:9">float</name></type> <name pos:start="31:11" pos:end="31:13">mid</name> <init pos:start="31:15" pos:end="31:17">= <expr pos:start="31:17" pos:end="31:17"><literal type="number" pos:start="31:17" pos:end="31:17">0</literal></expr></init></decl>, <decl pos:start="31:20" pos:end="31:27"><type ref="prev" pos:start="31:5" pos:end="31:9"/><name pos:start="31:20" pos:end="31:23">side</name> <init pos:start="31:25" pos:end="31:27">= <expr pos:start="31:27" pos:end="31:27"><literal type="number" pos:start="31:27" pos:end="31:27">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:31"><decl pos:start="33:5" pos:end="33:30"><type pos:start="33:5" pos:end="33:7"><name pos:start="33:5" pos:end="33:7">int</name></type> <name pos:start="33:9" pos:end="33:18">longblocks</name> <init pos:start="33:20" pos:end="33:30">= <expr pos:start="33:22" pos:end="33:30"><operator pos:start="33:22" pos:end="33:22">(</operator><name pos:start="33:23" pos:end="33:24">B0</name> <operator pos:start="33:26" pos:end="33:27">==</operator> <literal type="number" pos:start="33:29" pos:end="33:29">1</literal><operator pos:start="33:30" pos:end="33:30">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:20"><decl pos:start="35:5" pos:end="35:19"><type pos:start="35:5" pos:end="35:12"><name pos:start="35:5" pos:end="35:12">uint32_t</name></type> <name pos:start="35:14" pos:end="35:15">cm</name> <init pos:start="35:17" pos:end="35:19">= <expr pos:start="35:19" pos:end="35:19"><literal type="number" pos:start="35:19" pos:end="35:19">0</literal></expr></init></decl>;</decl_stmt>



    <comment type="line" pos:start="39:5" pos:end="39:30">//N_B0 = N_B = N / blocks;</comment>

    <expr_stmt pos:start="41:5" pos:end="41:37"><expr pos:start="41:5" pos:end="41:36"><name pos:start="41:5" pos:end="41:9">split</name> <operator pos:start="41:11" pos:end="41:11">=</operator> <name pos:start="41:13" pos:end="41:22">dualstereo</name> <operator pos:start="41:24" pos:end="41:24">=</operator> <operator pos:start="41:26" pos:end="41:26">(</operator><name pos:start="41:27" pos:end="41:27">Y</name> <operator pos:start="41:29" pos:end="41:30">!=</operator> <name pos:start="41:32" pos:end="41:35">NULL</name><operator pos:start="41:36" pos:end="41:36">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="75:5"><if pos:start="45:5" pos:end="75:5">if <condition pos:start="45:8" pos:end="45:15">(<expr pos:start="45:9" pos:end="45:14"><name pos:start="45:9" pos:end="45:9">N</name> <operator pos:start="45:11" pos:end="45:12">==</operator> <literal type="number" pos:start="45:14" pos:end="45:14">1</literal></expr>)</condition> <block pos:start="45:17" pos:end="75:5">{<block_content pos:start="49:9" pos:end="73:17">

        <comment type="block" pos:start="47:9" pos:end="47:83">/* special case for one sample - the decoder's output will be +- 1.0f!!! */</comment>

        <decl_stmt pos:start="49:9" pos:end="49:14"><decl pos:start="49:9" pos:end="49:13"><type pos:start="49:9" pos:end="49:11"><name pos:start="49:9" pos:end="49:11">int</name></type> <name pos:start="49:13" pos:end="49:13">i</name></decl>;</decl_stmt>

        <decl_stmt pos:start="51:9" pos:end="51:21"><decl pos:start="51:9" pos:end="51:20"><type pos:start="51:9" pos:end="51:15"><name pos:start="51:9" pos:end="51:13">float</name> <modifier pos:start="51:15" pos:end="51:15">*</modifier></type><name pos:start="51:16" pos:end="51:16">x</name> <init pos:start="51:18" pos:end="51:20">= <expr pos:start="51:20" pos:end="51:20"><name pos:start="51:20" pos:end="51:20">X</name></expr></init></decl>;</decl_stmt>

        <for pos:start="53:9" pos:end="67:9">for <control pos:start="53:13" pos:end="53:41">(<init pos:start="53:14" pos:end="53:19"><expr pos:start="53:14" pos:end="53:18"><name pos:start="53:14" pos:end="53:14">i</name> <operator pos:start="53:16" pos:end="53:16">=</operator> <literal type="number" pos:start="53:18" pos:end="53:18">0</literal></expr>;</init> <condition pos:start="53:21" pos:end="53:36"><expr pos:start="53:21" pos:end="53:35"><name pos:start="53:21" pos:end="53:21">i</name> <operator pos:start="53:23" pos:end="53:24">&lt;=</operator> <name pos:start="53:26" pos:end="53:35">dualstereo</name></expr>;</condition> <incr pos:start="53:38" pos:end="53:40"><expr pos:start="53:38" pos:end="53:40"><name pos:start="53:38" pos:end="53:38">i</name><operator pos:start="53:39" pos:end="53:40">++</operator></expr></incr>)</control> <block pos:start="53:43" pos:end="67:9">{<block_content pos:start="55:13" pos:end="65:18">

            <if_stmt pos:start="55:13" pos:end="63:13"><if pos:start="55:13" pos:end="63:13">if <condition pos:start="55:16" pos:end="55:38">(<expr pos:start="55:17" pos:end="55:37"><name pos:start="55:17" pos:end="55:29"><name pos:start="55:17" pos:end="55:17">f</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:29">remaining2</name></name> <operator pos:start="55:31" pos:end="55:32">&gt;=</operator> <literal type="number" pos:start="55:34" pos:end="55:34">1</literal><operator pos:start="55:35" pos:end="55:36">&lt;&lt;</operator><literal type="number" pos:start="55:37" pos:end="55:37">3</literal></expr>)</condition> <block pos:start="55:40" pos:end="63:13">{<block_content pos:start="57:17" pos:end="61:40">

                <expr_stmt pos:start="57:17" pos:end="57:52"><expr pos:start="57:17" pos:end="57:51"><call pos:start="57:17" pos:end="57:51"><name pos:start="57:17" pos:end="57:34">ff_opus_rc_put_raw</name><argument_list pos:start="57:35" pos:end="57:51">(<argument pos:start="57:36" pos:end="57:37"><expr pos:start="57:36" pos:end="57:37"><name pos:start="57:36" pos:end="57:37">rc</name></expr></argument>, <argument pos:start="57:40" pos:end="57:47"><expr pos:start="57:40" pos:end="57:47"><name pos:start="57:40" pos:end="57:43"><name pos:start="57:40" pos:end="57:40">x</name><index pos:start="57:41" pos:end="57:43">[<expr pos:start="57:42" pos:end="57:42"><literal type="number" pos:start="57:42" pos:end="57:42">0</literal></expr>]</index></name> <operator pos:start="57:45" pos:end="57:45">&lt;</operator> <literal type="number" pos:start="57:47" pos:end="57:47">0</literal></expr></argument>, <argument pos:start="57:50" pos:end="57:50"><expr pos:start="57:50" pos:end="57:50"><literal type="number" pos:start="57:50" pos:end="57:50">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="59:17" pos:end="59:40"><expr pos:start="59:17" pos:end="59:39"><name pos:start="59:17" pos:end="59:29"><name pos:start="59:17" pos:end="59:17">f</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:29">remaining2</name></name> <operator pos:start="59:31" pos:end="59:32">-=</operator> <literal type="number" pos:start="59:34" pos:end="59:34">1</literal> <operator pos:start="59:36" pos:end="59:37">&lt;&lt;</operator> <literal type="number" pos:start="59:39" pos:end="59:39">3</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="61:17" pos:end="61:40"><expr pos:start="61:17" pos:end="61:39"><name pos:start="61:17" pos:end="61:17">b</name>             <operator pos:start="61:31" pos:end="61:32">-=</operator> <literal type="number" pos:start="61:34" pos:end="61:34">1</literal> <operator pos:start="61:36" pos:end="61:37">&lt;&lt;</operator> <literal type="number" pos:start="61:39" pos:end="61:39">3</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:18"><expr pos:start="65:13" pos:end="65:17"><name pos:start="65:13" pos:end="65:13">x</name> <operator pos:start="65:15" pos:end="65:15">=</operator> <name pos:start="65:17" pos:end="65:17">Y</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="69:9" pos:end="71:34"><if pos:start="69:9" pos:end="71:34">if <condition pos:start="69:12" pos:end="69:24">(<expr pos:start="69:13" pos:end="69:23"><name pos:start="69:13" pos:end="69:23">lowband_out</name></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:34"><block_content pos:start="71:13" pos:end="71:34">

            <expr_stmt pos:start="71:13" pos:end="71:34"><expr pos:start="71:13" pos:end="71:33"><name pos:start="71:13" pos:end="71:26"><name pos:start="71:13" pos:end="71:23">lowband_out</name><index pos:start="71:24" pos:end="71:26">[<expr pos:start="71:25" pos:end="71:25"><literal type="number" pos:start="71:25" pos:end="71:25">0</literal></expr>]</index></name> <operator pos:start="71:28" pos:end="71:28">=</operator> <name pos:start="71:30" pos:end="71:33"><name pos:start="71:30" pos:end="71:30">X</name><index pos:start="71:31" pos:end="71:33">[<expr pos:start="71:32" pos:end="71:32"><literal type="number" pos:start="71:32" pos:end="71:32">0</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <return pos:start="73:9" pos:end="73:17">return <expr pos:start="73:16" pos:end="73:16"><literal type="number" pos:start="73:16" pos:end="73:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="79:5" pos:end="155:5"><if pos:start="79:5" pos:end="155:5">if <condition pos:start="79:8" pos:end="79:34">(<expr pos:start="79:9" pos:end="79:33"><operator pos:start="79:9" pos:end="79:9">!</operator><name pos:start="79:10" pos:end="79:19">dualstereo</name> <operator pos:start="79:21" pos:end="79:22">&amp;&amp;</operator> <name pos:start="79:24" pos:end="79:28">level</name> <operator pos:start="79:30" pos:end="79:31">==</operator> <literal type="number" pos:start="79:33" pos:end="79:33">0</literal></expr>)</condition> <block pos:start="79:36" pos:end="155:5">{<block_content pos:start="81:9" pos:end="153:68">

        <decl_stmt pos:start="81:9" pos:end="81:43"><decl pos:start="81:9" pos:end="81:42"><type pos:start="81:9" pos:end="81:11"><name pos:start="81:9" pos:end="81:11">int</name></type> <name pos:start="81:13" pos:end="81:21">tf_change</name> <init pos:start="81:23" pos:end="81:42">= <expr pos:start="81:25" pos:end="81:42"><name pos:start="81:25" pos:end="81:42"><name pos:start="81:25" pos:end="81:25">f</name><operator pos:start="81:26" pos:end="81:27">-&gt;</operator><name pos:start="81:28" pos:end="81:36">tf_change</name><index pos:start="81:37" pos:end="81:42">[<expr pos:start="81:38" pos:end="81:41"><name pos:start="81:38" pos:end="81:41">band</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="83:9" pos:end="83:14"><decl pos:start="83:9" pos:end="83:13"><type pos:start="83:9" pos:end="83:11"><name pos:start="83:9" pos:end="83:11">int</name></type> <name pos:start="83:13" pos:end="83:13">k</name></decl>;</decl_stmt>

        <if_stmt pos:start="85:9" pos:end="87:34"><if pos:start="85:9" pos:end="87:34">if <condition pos:start="85:12" pos:end="85:26">(<expr pos:start="85:13" pos:end="85:25"><name pos:start="85:13" pos:end="85:21">tf_change</name> <operator pos:start="85:23" pos:end="85:23">&gt;</operator> <literal type="number" pos:start="85:25" pos:end="85:25">0</literal></expr>)</condition><block type="pseudo" pos:start="87:13" pos:end="87:34"><block_content pos:start="87:13" pos:end="87:34">

            <expr_stmt pos:start="87:13" pos:end="87:34"><expr pos:start="87:13" pos:end="87:33"><name pos:start="87:13" pos:end="87:21">recombine</name> <operator pos:start="87:23" pos:end="87:23">=</operator> <name pos:start="87:25" pos:end="87:33">tf_change</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <comment type="block" pos:start="89:9" pos:end="89:63">/* Band recombining to increase frequency resolution */</comment>



        <if_stmt pos:start="93:9" pos:end="105:9"><if pos:start="93:9" pos:end="105:9">if <condition pos:start="93:12" pos:end="95:71">(<expr pos:start="93:13" pos:end="95:70"><name pos:start="93:13" pos:end="93:19">lowband</name> <operator pos:start="93:21" pos:end="93:22">&amp;&amp;</operator>

            <operator pos:start="95:13" pos:end="95:13">(</operator><name pos:start="95:14" pos:end="95:22">recombine</name> <operator pos:start="95:24" pos:end="95:25">||</operator> <operator pos:start="95:27" pos:end="95:27">(</operator><operator pos:start="95:28" pos:end="95:28">(</operator><name pos:start="95:29" pos:end="95:31">N_B</name> <operator pos:start="95:33" pos:end="95:33">&amp;</operator> <literal type="number" pos:start="95:35" pos:end="95:35">1</literal><operator pos:start="95:36" pos:end="95:36">)</operator> <operator pos:start="95:38" pos:end="95:39">==</operator> <literal type="number" pos:start="95:41" pos:end="95:41">0</literal> <operator pos:start="95:43" pos:end="95:44">&amp;&amp;</operator> <name pos:start="95:46" pos:end="95:54">tf_change</name> <operator pos:start="95:56" pos:end="95:56">&lt;</operator> <literal type="number" pos:start="95:58" pos:end="95:58">0</literal><operator pos:start="95:59" pos:end="95:59">)</operator> <operator pos:start="95:61" pos:end="95:62">||</operator> <name pos:start="95:64" pos:end="95:65">B0</name> <operator pos:start="95:67" pos:end="95:67">&gt;</operator> <literal type="number" pos:start="95:69" pos:end="95:69">1</literal><operator pos:start="95:70" pos:end="95:70">)</operator></expr>)</condition> <block pos:start="95:73" pos:end="105:9">{<block_content pos:start="97:13" pos:end="103:38">

            <decl_stmt pos:start="97:13" pos:end="97:18"><decl pos:start="97:13" pos:end="97:17"><type pos:start="97:13" pos:end="97:15"><name pos:start="97:13" pos:end="97:15">int</name></type> <name pos:start="97:17" pos:end="97:17">j</name></decl>;</decl_stmt>

            <for pos:start="99:13" pos:end="101:48">for <control pos:start="99:17" pos:end="99:35">(<init pos:start="99:18" pos:end="99:23"><expr pos:start="99:18" pos:end="99:22"><name pos:start="99:18" pos:end="99:18">j</name> <operator pos:start="99:20" pos:end="99:20">=</operator> <literal type="number" pos:start="99:22" pos:end="99:22">0</literal></expr>;</init> <condition pos:start="99:25" pos:end="99:30"><expr pos:start="99:25" pos:end="99:29"><name pos:start="99:25" pos:end="99:25">j</name> <operator pos:start="99:27" pos:end="99:27">&lt;</operator> <name pos:start="99:29" pos:end="99:29">N</name></expr>;</condition> <incr pos:start="99:32" pos:end="99:34"><expr pos:start="99:32" pos:end="99:34"><name pos:start="99:32" pos:end="99:32">j</name><operator pos:start="99:33" pos:end="99:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="101:17" pos:end="101:48"><block_content pos:start="101:17" pos:end="101:48">

                <expr_stmt pos:start="101:17" pos:end="101:48"><expr pos:start="101:17" pos:end="101:47"><name pos:start="101:17" pos:end="101:34"><name pos:start="101:17" pos:end="101:31">lowband_scratch</name><index pos:start="101:32" pos:end="101:34">[<expr pos:start="101:33" pos:end="101:33"><name pos:start="101:33" pos:end="101:33">j</name></expr>]</index></name> <operator pos:start="101:36" pos:end="101:36">=</operator> <name pos:start="101:38" pos:end="101:47"><name pos:start="101:38" pos:end="101:44">lowband</name><index pos:start="101:45" pos:end="101:47">[<expr pos:start="101:46" pos:end="101:46"><name pos:start="101:46" pos:end="101:46">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="103:13" pos:end="103:38"><expr pos:start="103:13" pos:end="103:37"><name pos:start="103:13" pos:end="103:19">lowband</name> <operator pos:start="103:21" pos:end="103:21">=</operator> <name pos:start="103:23" pos:end="103:37">lowband_scratch</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <for pos:start="109:9" pos:end="115:9">for <control pos:start="109:13" pos:end="109:39">(<init pos:start="109:14" pos:end="109:19"><expr pos:start="109:14" pos:end="109:18"><name pos:start="109:14" pos:end="109:14">k</name> <operator pos:start="109:16" pos:end="109:16">=</operator> <literal type="number" pos:start="109:18" pos:end="109:18">0</literal></expr>;</init> <condition pos:start="109:21" pos:end="109:34"><expr pos:start="109:21" pos:end="109:33"><name pos:start="109:21" pos:end="109:21">k</name> <operator pos:start="109:23" pos:end="109:23">&lt;</operator> <name pos:start="109:25" pos:end="109:33">recombine</name></expr>;</condition> <incr pos:start="109:36" pos:end="109:38"><expr pos:start="109:36" pos:end="109:38"><name pos:start="109:36" pos:end="109:36">k</name><operator pos:start="109:37" pos:end="109:38">++</operator></expr></incr>)</control> <block pos:start="109:41" pos:end="115:9">{<block_content pos:start="111:13" pos:end="113:95">

            <expr_stmt pos:start="111:13" pos:end="111:42"><expr pos:start="111:13" pos:end="111:41"><call pos:start="111:13" pos:end="111:41"><name pos:start="111:13" pos:end="111:22">celt_haar1</name><argument_list pos:start="111:23" pos:end="111:41">(<argument pos:start="111:24" pos:end="111:24"><expr pos:start="111:24" pos:end="111:24"><name pos:start="111:24" pos:end="111:24">X</name></expr></argument>, <argument pos:start="111:27" pos:end="111:32"><expr pos:start="111:27" pos:end="111:32"><name pos:start="111:27" pos:end="111:27">N</name> <operator pos:start="111:29" pos:end="111:30">&gt;&gt;</operator> <name pos:start="111:32" pos:end="111:32">k</name></expr></argument>, <argument pos:start="111:35" pos:end="111:40"><expr pos:start="111:35" pos:end="111:40"><literal type="number" pos:start="111:35" pos:end="111:35">1</literal> <operator pos:start="111:37" pos:end="111:38">&lt;&lt;</operator> <name pos:start="111:40" pos:end="111:40">k</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:95"><expr pos:start="113:13" pos:end="113:94"><name pos:start="113:13" pos:end="113:16">fill</name> <operator pos:start="113:18" pos:end="113:18">=</operator> <name pos:start="113:20" pos:end="113:53"><name pos:start="113:20" pos:end="113:41">ff_celt_bit_interleave</name><index pos:start="113:42" pos:end="113:53">[<expr pos:start="113:43" pos:end="113:52"><name pos:start="113:43" pos:end="113:46">fill</name> <operator pos:start="113:48" pos:end="113:48">&amp;</operator> <literal type="number" pos:start="113:50" pos:end="113:52">0xF</literal></expr>]</index></name> <operator pos:start="113:55" pos:end="113:55">|</operator> <name pos:start="113:57" pos:end="113:89"><name pos:start="113:57" pos:end="113:78">ff_celt_bit_interleave</name><index pos:start="113:79" pos:end="113:89">[<expr pos:start="113:80" pos:end="113:88"><name pos:start="113:80" pos:end="113:83">fill</name> <operator pos:start="113:85" pos:end="113:86">&gt;&gt;</operator> <literal type="number" pos:start="113:88" pos:end="113:88">4</literal></expr>]</index></name> <operator pos:start="113:91" pos:end="113:92">&lt;&lt;</operator> <literal type="number" pos:start="113:94" pos:end="113:94">2</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="117:9" pos:end="117:29"><expr pos:start="117:9" pos:end="117:28"><name pos:start="117:9" pos:end="117:14">blocks</name> <operator pos:start="117:16" pos:end="117:18">&gt;&gt;=</operator> <name pos:start="117:20" pos:end="117:28">recombine</name></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:26"><expr pos:start="119:9" pos:end="119:25"><name pos:start="119:9" pos:end="119:11">N_B</name> <operator pos:start="119:13" pos:end="119:15">&lt;&lt;=</operator> <name pos:start="119:17" pos:end="119:25">recombine</name></expr>;</expr_stmt>



        <comment type="block" pos:start="123:9" pos:end="123:44">/* Increasing the time resolution */</comment>

        <while pos:start="125:9" pos:end="139:9">while <condition pos:start="125:15" pos:end="125:47">(<expr pos:start="125:16" pos:end="125:46"><operator pos:start="125:16" pos:end="125:16">(</operator><name pos:start="125:17" pos:end="125:19">N_B</name> <operator pos:start="125:21" pos:end="125:21">&amp;</operator> <literal type="number" pos:start="125:23" pos:end="125:23">1</literal><operator pos:start="125:24" pos:end="125:24">)</operator> <operator pos:start="125:26" pos:end="125:27">==</operator> <literal type="number" pos:start="125:29" pos:end="125:29">0</literal> <operator pos:start="125:31" pos:end="125:32">&amp;&amp;</operator> <name pos:start="125:34" pos:end="125:42">tf_change</name> <operator pos:start="125:44" pos:end="125:44">&lt;</operator> <literal type="number" pos:start="125:46" pos:end="125:46">0</literal></expr>)</condition> <block pos:start="125:49" pos:end="139:9">{<block_content pos:start="127:13" pos:end="137:24">

            <expr_stmt pos:start="127:13" pos:end="127:39"><expr pos:start="127:13" pos:end="127:38"><call pos:start="127:13" pos:end="127:38"><name pos:start="127:13" pos:end="127:22">celt_haar1</name><argument_list pos:start="127:23" pos:end="127:38">(<argument pos:start="127:24" pos:end="127:24"><expr pos:start="127:24" pos:end="127:24"><name pos:start="127:24" pos:end="127:24">X</name></expr></argument>, <argument pos:start="127:27" pos:end="127:29"><expr pos:start="127:27" pos:end="127:29"><name pos:start="127:27" pos:end="127:29">N_B</name></expr></argument>, <argument pos:start="127:32" pos:end="127:37"><expr pos:start="127:32" pos:end="127:37"><name pos:start="127:32" pos:end="127:37">blocks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:35"><expr pos:start="129:13" pos:end="129:34"><name pos:start="129:13" pos:end="129:16">fill</name> <operator pos:start="129:18" pos:end="129:19">|=</operator> <name pos:start="129:21" pos:end="129:24">fill</name> <operator pos:start="129:26" pos:end="129:27">&lt;&lt;</operator> <name pos:start="129:29" pos:end="129:34">blocks</name></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:25"><expr pos:start="131:13" pos:end="131:24"><name pos:start="131:13" pos:end="131:18">blocks</name> <operator pos:start="131:20" pos:end="131:22">&lt;&lt;=</operator> <literal type="number" pos:start="131:24" pos:end="131:24">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:22"><expr pos:start="133:13" pos:end="133:21"><name pos:start="133:13" pos:end="133:15">N_B</name> <operator pos:start="133:17" pos:end="133:19">&gt;&gt;=</operator> <literal type="number" pos:start="133:21" pos:end="133:21">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:26"><expr pos:start="135:13" pos:end="135:25"><name pos:start="135:13" pos:end="135:23">time_divide</name><operator pos:start="135:24" pos:end="135:25">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:24"><expr pos:start="137:13" pos:end="137:23"><name pos:start="137:13" pos:end="137:21">tf_change</name><operator pos:start="137:22" pos:end="137:23">++</operator></expr>;</expr_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="141:9" pos:end="141:20"><expr pos:start="141:9" pos:end="141:19"><name pos:start="141:9" pos:end="141:10">B0</name> <operator pos:start="141:12" pos:end="141:12">=</operator> <name pos:start="141:14" pos:end="141:19">blocks</name></expr>;</expr_stmt>

        <comment type="line" pos:start="143:9" pos:end="143:21">//N_B0 = N_B;</comment>



        <comment type="block" pos:start="147:9" pos:end="147:77">/* Reorganize the samples in time order instead of frequency order */</comment>

        <if_stmt pos:start="149:9" pos:end="153:68"><if pos:start="149:9" pos:end="153:68">if <condition pos:start="149:12" pos:end="149:19">(<expr pos:start="149:13" pos:end="149:18"><name pos:start="149:13" pos:end="149:14">B0</name> <operator pos:start="149:16" pos:end="149:16">&gt;</operator> <literal type="number" pos:start="149:18" pos:end="149:18">1</literal></expr>)</condition><block type="pseudo" pos:start="151:13" pos:end="153:68"><block_content pos:start="151:13" pos:end="153:68">

            <expr_stmt pos:start="151:13" pos:end="153:68"><expr pos:start="151:13" pos:end="153:67"><call pos:start="151:13" pos:end="153:67"><name pos:start="151:13" pos:end="151:38">celt_deinterleave_hadamard</name><argument_list pos:start="151:39" pos:end="153:67">(<argument pos:start="151:40" pos:end="151:49"><expr pos:start="151:40" pos:end="151:49"><name pos:start="151:40" pos:end="151:49"><name pos:start="151:40" pos:end="151:40">f</name><operator pos:start="151:41" pos:end="151:42">-&gt;</operator><name pos:start="151:43" pos:end="151:49">scratch</name></name></expr></argument>, <argument pos:start="151:52" pos:end="151:52"><expr pos:start="151:52" pos:end="151:52"><name pos:start="151:52" pos:end="151:52">X</name></expr></argument>, <argument pos:start="151:55" pos:end="151:70"><expr pos:start="151:55" pos:end="151:70"><name pos:start="151:55" pos:end="151:57">N_B</name> <operator pos:start="151:59" pos:end="151:60">&gt;&gt;</operator> <name pos:start="151:62" pos:end="151:70">recombine</name></expr></argument>,

                                       <argument pos:start="153:40" pos:end="153:54"><expr pos:start="153:40" pos:end="153:54"><name pos:start="153:40" pos:end="153:41">B0</name> <operator pos:start="153:43" pos:end="153:44">&lt;&lt;</operator> <name pos:start="153:46" pos:end="153:54">recombine</name></expr></argument>, <argument pos:start="153:57" pos:end="153:66"><expr pos:start="153:57" pos:end="153:66"><name pos:start="153:57" pos:end="153:66">longblocks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="159:5" pos:end="159:77">/* If we need 1.5 more bit than we can produce, split the band in two. */</comment>

    <expr_stmt pos:start="161:5" pos:end="163:72"><expr pos:start="161:5" pos:end="163:71"><name pos:start="161:5" pos:end="161:9">cache</name> <operator pos:start="161:11" pos:end="161:11">=</operator> <name pos:start="161:13" pos:end="161:30">ff_celt_cache_bits</name> <operator pos:start="161:32" pos:end="161:32">+</operator>

            <name pos:start="163:13" pos:end="163:71"><name pos:start="163:13" pos:end="163:31">ff_celt_cache_index</name><index pos:start="163:32" pos:end="163:71">[<expr pos:start="163:33" pos:end="163:70"><operator pos:start="163:33" pos:end="163:33">(</operator><name pos:start="163:34" pos:end="163:41">duration</name> <operator pos:start="163:43" pos:end="163:43">+</operator> <literal type="number" pos:start="163:45" pos:end="163:45">1</literal><operator pos:start="163:46" pos:end="163:46">)</operator> <operator pos:start="163:48" pos:end="163:48">*</operator> <name pos:start="163:50" pos:end="163:63">CELT_MAX_BANDS</name> <operator pos:start="163:65" pos:end="163:65">+</operator> <name pos:start="163:67" pos:end="163:70">band</name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="165:5" pos:end="181:5"><if pos:start="165:5" pos:end="181:5">if <condition pos:start="165:8" pos:end="165:74">(<expr pos:start="165:9" pos:end="165:73"><operator pos:start="165:9" pos:end="165:9">!</operator><name pos:start="165:10" pos:end="165:19">dualstereo</name> <operator pos:start="165:21" pos:end="165:22">&amp;&amp;</operator> <name pos:start="165:24" pos:end="165:31">duration</name> <operator pos:start="165:33" pos:end="165:34">&gt;=</operator> <literal type="number" pos:start="165:36" pos:end="165:36">0</literal> <operator pos:start="165:38" pos:end="165:39">&amp;&amp;</operator> <name pos:start="165:41" pos:end="165:41">b</name> <operator pos:start="165:43" pos:end="165:43">&gt;</operator> <name pos:start="165:45" pos:end="165:59"><name pos:start="165:45" pos:end="165:49">cache</name><index pos:start="165:50" pos:end="165:59">[<expr pos:start="165:51" pos:end="165:58"><name pos:start="165:51" pos:end="165:58"><name pos:start="165:51" pos:end="165:55">cache</name><index pos:start="165:56" pos:end="165:58">[<expr pos:start="165:57" pos:end="165:57"><literal type="number" pos:start="165:57" pos:end="165:57">0</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="165:61" pos:end="165:61">+</operator> <literal type="number" pos:start="165:63" pos:end="165:64">12</literal> <operator pos:start="165:66" pos:end="165:67">&amp;&amp;</operator> <name pos:start="165:69" pos:end="165:69">N</name> <operator pos:start="165:71" pos:end="165:71">&gt;</operator> <literal type="number" pos:start="165:73" pos:end="165:73">2</literal></expr>)</condition> <block pos:start="165:76" pos:end="181:5">{<block_content pos:start="167:9" pos:end="179:35">

        <expr_stmt pos:start="167:9" pos:end="167:16"><expr pos:start="167:9" pos:end="167:15"><name pos:start="167:9" pos:end="167:9">N</name> <operator pos:start="167:11" pos:end="167:13">&gt;&gt;=</operator> <literal type="number" pos:start="167:15" pos:end="167:15">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:18"><expr pos:start="169:9" pos:end="169:17"><name pos:start="169:9" pos:end="169:9">Y</name> <operator pos:start="169:11" pos:end="169:11">=</operator> <name pos:start="169:13" pos:end="169:13">X</name> <operator pos:start="169:15" pos:end="169:15">+</operator> <name pos:start="169:17" pos:end="169:17">N</name></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:18"><expr pos:start="171:9" pos:end="171:17"><name pos:start="171:9" pos:end="171:13">split</name> <operator pos:start="171:15" pos:end="171:15">=</operator> <literal type="number" pos:start="171:17" pos:end="171:17">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:22"><expr pos:start="173:9" pos:end="173:21"><name pos:start="173:9" pos:end="173:16">duration</name> <operator pos:start="173:18" pos:end="173:19">-=</operator> <literal type="number" pos:start="173:21" pos:end="173:21">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="175:9" pos:end="177:44"><if pos:start="175:9" pos:end="177:44">if <condition pos:start="175:12" pos:end="175:24">(<expr pos:start="175:13" pos:end="175:23"><name pos:start="175:13" pos:end="175:18">blocks</name> <operator pos:start="175:20" pos:end="175:21">==</operator> <literal type="number" pos:start="175:23" pos:end="175:23">1</literal></expr>)</condition><block type="pseudo" pos:start="177:13" pos:end="177:44"><block_content pos:start="177:13" pos:end="177:44">

            <expr_stmt pos:start="177:13" pos:end="177:44"><expr pos:start="177:13" pos:end="177:43"><name pos:start="177:13" pos:end="177:16">fill</name> <operator pos:start="177:18" pos:end="177:18">=</operator> <operator pos:start="177:20" pos:end="177:20">(</operator><name pos:start="177:21" pos:end="177:24">fill</name> <operator pos:start="177:26" pos:end="177:26">&amp;</operator> <literal type="number" pos:start="177:28" pos:end="177:28">1</literal><operator pos:start="177:29" pos:end="177:29">)</operator> <operator pos:start="177:31" pos:end="177:31">|</operator> <operator pos:start="177:33" pos:end="177:33">(</operator><name pos:start="177:34" pos:end="177:37">fill</name> <operator pos:start="177:39" pos:end="177:40">&lt;&lt;</operator> <literal type="number" pos:start="177:42" pos:end="177:42">1</literal><operator pos:start="177:43" pos:end="177:43">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:35"><expr pos:start="179:9" pos:end="179:34"><name pos:start="179:9" pos:end="179:14">blocks</name> <operator pos:start="179:16" pos:end="179:16">=</operator> <operator pos:start="179:18" pos:end="179:18">(</operator><name pos:start="179:19" pos:end="179:24">blocks</name> <operator pos:start="179:26" pos:end="179:26">+</operator> <literal type="number" pos:start="179:28" pos:end="179:28">1</literal><operator pos:start="179:29" pos:end="179:29">)</operator> <operator pos:start="179:31" pos:end="179:32">&gt;&gt;</operator> <literal type="number" pos:start="179:34" pos:end="179:34">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="185:5" pos:end="607:5"><if pos:start="185:5" pos:end="571:5">if <condition pos:start="185:8" pos:end="185:14">(<expr pos:start="185:9" pos:end="185:13"><name pos:start="185:9" pos:end="185:13">split</name></expr>)</condition> <block pos:start="185:16" pos:end="571:5">{<block_content pos:start="187:9" pos:end="569:9">

        <decl_stmt pos:start="187:9" pos:end="187:15"><decl pos:start="187:9" pos:end="187:14"><type pos:start="187:9" pos:end="187:11"><name pos:start="187:9" pos:end="187:11">int</name></type> <name pos:start="187:13" pos:end="187:14">qn</name></decl>;</decl_stmt>

        <decl_stmt pos:start="189:9" pos:end="189:58"><decl pos:start="189:9" pos:end="189:57"><type pos:start="189:9" pos:end="189:11"><name pos:start="189:9" pos:end="189:11">int</name></type> <name pos:start="189:13" pos:end="189:18">itheta</name> <init pos:start="189:20" pos:end="189:57">= <expr pos:start="189:22" pos:end="189:57"><call pos:start="189:22" pos:end="189:57"><name pos:start="189:22" pos:end="189:36">celt_calc_theta</name><argument_list pos:start="189:37" pos:end="189:57">(<argument pos:start="189:38" pos:end="189:38"><expr pos:start="189:38" pos:end="189:38"><name pos:start="189:38" pos:end="189:38">X</name></expr></argument>, <argument pos:start="189:41" pos:end="189:41"><expr pos:start="189:41" pos:end="189:41"><name pos:start="189:41" pos:end="189:41">Y</name></expr></argument>, <argument pos:start="189:44" pos:end="189:53"><expr pos:start="189:44" pos:end="189:53"><name pos:start="189:44" pos:end="189:53">dualstereo</name></expr></argument>, <argument pos:start="189:56" pos:end="189:56"><expr pos:start="189:56" pos:end="189:56"><name pos:start="189:56" pos:end="189:56">N</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="191:9" pos:end="191:32"><decl pos:start="191:9" pos:end="191:17"><type pos:start="191:9" pos:end="191:11"><name pos:start="191:9" pos:end="191:11">int</name></type> <name pos:start="191:13" pos:end="191:17">mbits</name></decl>, <decl pos:start="191:20" pos:end="191:24"><type ref="prev" pos:start="191:9" pos:end="191:11"/><name pos:start="191:20" pos:end="191:24">sbits</name></decl>, <decl pos:start="191:27" pos:end="191:31"><type ref="prev" pos:start="191:9" pos:end="191:11"/><name pos:start="191:27" pos:end="191:31">delta</name></decl>;</decl_stmt>

        <decl_stmt pos:start="193:9" pos:end="193:19"><decl pos:start="193:9" pos:end="193:18"><type pos:start="193:9" pos:end="193:11"><name pos:start="193:9" pos:end="193:11">int</name></type> <name pos:start="193:13" pos:end="193:18">qalloc</name></decl>;</decl_stmt>

        <decl_stmt pos:start="195:9" pos:end="195:22"><decl pos:start="195:9" pos:end="195:21"><type pos:start="195:9" pos:end="195:11"><name pos:start="195:9" pos:end="195:11">int</name></type> <name pos:start="195:13" pos:end="195:21">pulse_cap</name></decl>;</decl_stmt>

        <decl_stmt pos:start="197:9" pos:end="197:19"><decl pos:start="197:9" pos:end="197:18"><type pos:start="197:9" pos:end="197:11"><name pos:start="197:9" pos:end="197:11">int</name></type> <name pos:start="197:13" pos:end="197:18">offset</name></decl>;</decl_stmt>

        <decl_stmt pos:start="199:9" pos:end="199:22"><decl pos:start="199:9" pos:end="199:21"><type pos:start="199:9" pos:end="199:11"><name pos:start="199:9" pos:end="199:11">int</name></type> <name pos:start="199:13" pos:end="199:21">orig_fill</name></decl>;</decl_stmt>

        <decl_stmt pos:start="201:9" pos:end="201:17"><decl pos:start="201:9" pos:end="201:16"><type pos:start="201:9" pos:end="201:11"><name pos:start="201:9" pos:end="201:11">int</name></type> <name pos:start="201:13" pos:end="201:16">tell</name></decl>;</decl_stmt>



        <comment type="block" pos:start="205:9" pos:end="205:75">/* Decide on the resolution to give to the split parameter theta */</comment>

        <expr_stmt pos:start="207:9" pos:end="207:64"><expr pos:start="207:9" pos:end="207:63"><name pos:start="207:9" pos:end="207:17">pulse_cap</name> <operator pos:start="207:19" pos:end="207:19">=</operator> <name pos:start="207:21" pos:end="207:48"><name pos:start="207:21" pos:end="207:42">ff_celt_log_freq_range</name><index pos:start="207:43" pos:end="207:48">[<expr pos:start="207:44" pos:end="207:47"><name pos:start="207:44" pos:end="207:47">band</name></expr>]</index></name> <operator pos:start="207:50" pos:end="207:50">+</operator> <name pos:start="207:52" pos:end="207:59">duration</name> <operator pos:start="207:61" pos:end="207:61">*</operator> <literal type="number" pos:start="207:63" pos:end="207:63">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="209:9" pos:end="211:78"><expr pos:start="209:9" pos:end="211:77"><name pos:start="209:9" pos:end="209:14">offset</name> <operator pos:start="209:16" pos:end="209:16">=</operator> <operator pos:start="209:18" pos:end="209:18">(</operator><name pos:start="209:19" pos:end="209:27">pulse_cap</name> <operator pos:start="209:29" pos:end="209:30">&gt;&gt;</operator> <literal type="number" pos:start="209:32" pos:end="209:32">1</literal><operator pos:start="209:33" pos:end="209:33">)</operator> <operator pos:start="209:35" pos:end="209:35">-</operator> <operator pos:start="209:37" pos:end="209:37">(</operator><ternary pos:start="209:38" pos:end="211:76"><condition pos:start="209:38" pos:end="209:59"><expr pos:start="209:38" pos:end="209:57"><name pos:start="209:38" pos:end="209:47">dualstereo</name> <operator pos:start="209:49" pos:end="209:50">&amp;&amp;</operator> <name pos:start="209:52" pos:end="209:52">N</name> <operator pos:start="209:54" pos:end="209:55">==</operator> <literal type="number" pos:start="209:57" pos:end="209:57">2</literal></expr> ?</condition><then pos:start="209:61" pos:end="209:87"> <expr pos:start="209:61" pos:end="209:87"><name pos:start="209:61" pos:end="209:87">CELT_QTHETA_OFFSET_TWOPHASE</name></expr> </then><else pos:start="209:89" pos:end="211:76">:

                                                          <expr pos:start="211:59" pos:end="211:76"><name pos:start="211:59" pos:end="211:76">CELT_QTHETA_OFFSET</name></expr></else></ternary><operator pos:start="211:77" pos:end="211:77">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="213:9" pos:end="215:66"><expr pos:start="213:9" pos:end="215:65"><name pos:start="213:9" pos:end="213:10">qn</name> <operator pos:start="213:12" pos:end="213:12">=</operator> <ternary pos:start="213:14" pos:end="215:65"><condition pos:start="213:14" pos:end="213:58"><expr pos:start="213:14" pos:end="213:56"><operator pos:start="213:14" pos:end="213:14">(</operator><name pos:start="213:15" pos:end="213:24">dualstereo</name> <operator pos:start="213:26" pos:end="213:27">&amp;&amp;</operator> <name pos:start="213:29" pos:end="213:32">band</name> <operator pos:start="213:34" pos:end="213:35">&gt;=</operator> <name pos:start="213:37" pos:end="213:55"><name pos:start="213:37" pos:end="213:37">f</name><operator pos:start="213:38" pos:end="213:39">-&gt;</operator><name pos:start="213:40" pos:end="213:55">intensity_stereo</name></name><operator pos:start="213:56" pos:end="213:56">)</operator></expr> ?</condition><then pos:start="213:60" pos:end="213:60"> <expr pos:start="213:60" pos:end="213:60"><literal type="number" pos:start="213:60" pos:end="213:60">1</literal></expr> </then><else pos:start="213:62" pos:end="215:65">:

             <expr pos:start="215:14" pos:end="215:65"><call pos:start="215:14" pos:end="215:65"><name pos:start="215:14" pos:end="215:28">celt_compute_qn</name><argument_list pos:start="215:29" pos:end="215:65">(<argument pos:start="215:30" pos:end="215:30"><expr pos:start="215:30" pos:end="215:30"><name pos:start="215:30" pos:end="215:30">N</name></expr></argument>, <argument pos:start="215:33" pos:end="215:33"><expr pos:start="215:33" pos:end="215:33"><name pos:start="215:33" pos:end="215:33">b</name></expr></argument>, <argument pos:start="215:36" pos:end="215:41"><expr pos:start="215:36" pos:end="215:41"><name pos:start="215:36" pos:end="215:41">offset</name></expr></argument>, <argument pos:start="215:44" pos:end="215:52"><expr pos:start="215:44" pos:end="215:52"><name pos:start="215:44" pos:end="215:52">pulse_cap</name></expr></argument>, <argument pos:start="215:55" pos:end="215:64"><expr pos:start="215:55" pos:end="215:64"><name pos:start="215:55" pos:end="215:64">dualstereo</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="217:9" pos:end="217:37"><expr pos:start="217:9" pos:end="217:36"><name pos:start="217:9" pos:end="217:12">tell</name> <operator pos:start="217:14" pos:end="217:14">=</operator> <call pos:start="217:16" pos:end="217:36"><name pos:start="217:16" pos:end="217:32">opus_rc_tell_frac</name><argument_list pos:start="217:33" pos:end="217:36">(<argument pos:start="217:34" pos:end="217:35"><expr pos:start="217:34" pos:end="217:35"><name pos:start="217:34" pos:end="217:35">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="221:9" pos:end="295:9"><if pos:start="221:9" pos:end="261:9">if <condition pos:start="221:12" pos:end="221:20">(<expr pos:start="221:13" pos:end="221:19"><name pos:start="221:13" pos:end="221:14">qn</name> <operator pos:start="221:16" pos:end="221:17">!=</operator> <literal type="number" pos:start="221:19" pos:end="221:19">1</literal></expr>)</condition> <block pos:start="221:22" pos:end="261:9">{<block_content pos:start="225:13" pos:end="259:13">



            <expr_stmt pos:start="225:13" pos:end="225:46"><expr pos:start="225:13" pos:end="225:45"><name pos:start="225:13" pos:end="225:18">itheta</name> <operator pos:start="225:20" pos:end="225:20">=</operator> <operator pos:start="225:22" pos:end="225:22">(</operator><name pos:start="225:23" pos:end="225:28">itheta</name><operator pos:start="225:29" pos:end="225:29">*</operator><name pos:start="225:30" pos:end="225:31">qn</name> <operator pos:start="225:33" pos:end="225:33">+</operator> <literal type="number" pos:start="225:35" pos:end="225:38">8192</literal><operator pos:start="225:39" pos:end="225:39">)</operator> <operator pos:start="225:41" pos:end="225:42">&gt;&gt;</operator> <literal type="number" pos:start="225:44" pos:end="225:45">14</literal></expr>;</expr_stmt>



            <comment type="block" pos:start="229:13" pos:end="231:83">/* Entropy coding of the angle. We use a uniform pdf for the

             * time split, a step for stereo, and a triangular one for the rest. */</comment>

            <if_stmt pos:start="233:13" pos:end="243:56"><if pos:start="233:13" pos:end="235:61">if <condition pos:start="233:16" pos:end="233:36">(<expr pos:start="233:17" pos:end="233:35"><name pos:start="233:17" pos:end="233:26">dualstereo</name> <operator pos:start="233:28" pos:end="233:29">&amp;&amp;</operator> <name pos:start="233:31" pos:end="233:31">N</name> <operator pos:start="233:33" pos:end="233:33">&gt;</operator> <literal type="number" pos:start="233:35" pos:end="233:35">2</literal></expr>)</condition><block type="pseudo" pos:start="235:17" pos:end="235:61"><block_content pos:start="235:17" pos:end="235:61">

                <expr_stmt pos:start="235:17" pos:end="235:61"><expr pos:start="235:17" pos:end="235:60"><call pos:start="235:17" pos:end="235:60"><name pos:start="235:17" pos:end="235:40">ff_opus_rc_enc_uint_step</name><argument_list pos:start="235:41" pos:end="235:60">(<argument pos:start="235:42" pos:end="235:43"><expr pos:start="235:42" pos:end="235:43"><name pos:start="235:42" pos:end="235:43">rc</name></expr></argument>, <argument pos:start="235:46" pos:end="235:51"><expr pos:start="235:46" pos:end="235:51"><name pos:start="235:46" pos:end="235:51">itheta</name></expr></argument>, <argument pos:start="235:54" pos:end="235:59"><expr pos:start="235:54" pos:end="235:59"><name pos:start="235:54" pos:end="235:55">qn</name> <operator pos:start="235:57" pos:end="235:57">/</operator> <literal type="number" pos:start="235:59" pos:end="235:59">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="237:13" pos:end="239:56">else if <condition pos:start="237:21" pos:end="237:42">(<expr pos:start="237:22" pos:end="237:41"><name pos:start="237:22" pos:end="237:31">dualstereo</name> <operator pos:start="237:33" pos:end="237:34">||</operator> <name pos:start="237:36" pos:end="237:37">B0</name> <operator pos:start="237:39" pos:end="237:39">&gt;</operator> <literal type="number" pos:start="237:41" pos:end="237:41">1</literal></expr>)</condition><block type="pseudo" pos:start="239:17" pos:end="239:56"><block_content pos:start="239:17" pos:end="239:56">

                <expr_stmt pos:start="239:17" pos:end="239:56"><expr pos:start="239:17" pos:end="239:55"><call pos:start="239:17" pos:end="239:55"><name pos:start="239:17" pos:end="239:35">ff_opus_rc_enc_uint</name><argument_list pos:start="239:36" pos:end="239:55">(<argument pos:start="239:37" pos:end="239:38"><expr pos:start="239:37" pos:end="239:38"><name pos:start="239:37" pos:end="239:38">rc</name></expr></argument>, <argument pos:start="239:41" pos:end="239:46"><expr pos:start="239:41" pos:end="239:46"><name pos:start="239:41" pos:end="239:46">itheta</name></expr></argument>, <argument pos:start="239:49" pos:end="239:54"><expr pos:start="239:49" pos:end="239:54"><name pos:start="239:49" pos:end="239:50">qn</name> <operator pos:start="239:52" pos:end="239:52">+</operator> <literal type="number" pos:start="239:54" pos:end="239:54">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="241:13" pos:end="243:56">else<block type="pseudo" pos:start="243:17" pos:end="243:56"><block_content pos:start="243:17" pos:end="243:56">

                <expr_stmt pos:start="243:17" pos:end="243:56"><expr pos:start="243:17" pos:end="243:55"><call pos:start="243:17" pos:end="243:55"><name pos:start="243:17" pos:end="243:39">ff_opus_rc_enc_uint_tri</name><argument_list pos:start="243:40" pos:end="243:55">(<argument pos:start="243:41" pos:end="243:42"><expr pos:start="243:41" pos:end="243:42"><name pos:start="243:41" pos:end="243:42">rc</name></expr></argument>, <argument pos:start="243:45" pos:end="243:50"><expr pos:start="243:45" pos:end="243:50"><name pos:start="243:45" pos:end="243:50">itheta</name></expr></argument>, <argument pos:start="243:53" pos:end="243:54"><expr pos:start="243:53" pos:end="243:54"><name pos:start="243:53" pos:end="243:54">qn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="245:13" pos:end="245:41"><expr pos:start="245:13" pos:end="245:40"><name pos:start="245:13" pos:end="245:18">itheta</name> <operator pos:start="245:20" pos:end="245:20">=</operator> <name pos:start="245:22" pos:end="245:27">itheta</name> <operator pos:start="245:29" pos:end="245:29">*</operator> <literal type="number" pos:start="245:31" pos:end="245:35">16384</literal> <operator pos:start="245:37" pos:end="245:37">/</operator> <name pos:start="245:39" pos:end="245:40">qn</name></expr>;</expr_stmt>



            <if_stmt pos:start="249:13" pos:end="259:13"><if pos:start="249:13" pos:end="259:13">if <condition pos:start="249:16" pos:end="249:27">(<expr pos:start="249:17" pos:end="249:26"><name pos:start="249:17" pos:end="249:26">dualstereo</name></expr>)</condition> <block pos:start="249:29" pos:end="259:13">{<block_content pos:start="251:17" pos:end="257:53">

                <if_stmt pos:start="251:17" pos:end="257:53"><if pos:start="251:17" pos:end="253:113">if <condition pos:start="251:20" pos:end="251:32">(<expr pos:start="251:21" pos:end="251:31"><name pos:start="251:21" pos:end="251:26">itheta</name> <operator pos:start="251:28" pos:end="251:29">==</operator> <literal type="number" pos:start="251:31" pos:end="251:31">0</literal></expr>)</condition><block type="pseudo" pos:start="253:21" pos:end="253:113"><block_content pos:start="253:21" pos:end="253:113">

                    <expr_stmt pos:start="253:21" pos:end="253:113"><expr pos:start="253:21" pos:end="253:112"><call pos:start="253:21" pos:end="253:112"><name pos:start="253:21" pos:end="253:43">celt_stereo_is_decouple</name><argument_list pos:start="253:44" pos:end="253:112">(<argument pos:start="253:45" pos:end="253:45"><expr pos:start="253:45" pos:end="253:45"><name pos:start="253:45" pos:end="253:45">X</name></expr></argument>, <argument pos:start="253:48" pos:end="253:48"><expr pos:start="253:48" pos:end="253:48"><name pos:start="253:48" pos:end="253:48">Y</name></expr></argument>, <argument pos:start="253:51" pos:end="253:78"><expr pos:start="253:51" pos:end="253:78"><name pos:start="253:51" pos:end="253:61"><name pos:start="253:51" pos:end="253:51">f</name><operator pos:start="253:52" pos:end="253:53">-&gt;</operator><name pos:start="253:54" pos:end="253:58">block</name><index pos:start="253:59" pos:end="253:61">[<expr pos:start="253:60" pos:end="253:60"><literal type="number" pos:start="253:60" pos:end="253:60">0</literal></expr>]</index></name><operator pos:start="253:62" pos:end="253:62">.</operator><name pos:start="253:63" pos:end="253:78"><name pos:start="253:63" pos:end="253:72">lin_energy</name><index pos:start="253:73" pos:end="253:78">[<expr pos:start="253:74" pos:end="253:77"><name pos:start="253:74" pos:end="253:77">band</name></expr>]</index></name></expr></argument>, <argument pos:start="253:81" pos:end="253:108"><expr pos:start="253:81" pos:end="253:108"><name pos:start="253:81" pos:end="253:91"><name pos:start="253:81" pos:end="253:81">f</name><operator pos:start="253:82" pos:end="253:83">-&gt;</operator><name pos:start="253:84" pos:end="253:88">block</name><index pos:start="253:89" pos:end="253:91">[<expr pos:start="253:90" pos:end="253:90"><literal type="number" pos:start="253:90" pos:end="253:90">1</literal></expr>]</index></name><operator pos:start="253:92" pos:end="253:92">.</operator><name pos:start="253:93" pos:end="253:108"><name pos:start="253:93" pos:end="253:102">lin_energy</name><index pos:start="253:103" pos:end="253:108">[<expr pos:start="253:104" pos:end="253:107"><name pos:start="253:104" pos:end="253:107">band</name></expr>]</index></name></expr></argument>, <argument pos:start="253:111" pos:end="253:111"><expr pos:start="253:111" pos:end="253:111"><name pos:start="253:111" pos:end="253:111">N</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="255:17" pos:end="257:53">else<block type="pseudo" pos:start="257:21" pos:end="257:53"><block_content pos:start="257:21" pos:end="257:53">

                    <expr_stmt pos:start="257:21" pos:end="257:53"><expr pos:start="257:21" pos:end="257:52"><call pos:start="257:21" pos:end="257:52"><name pos:start="257:21" pos:end="257:43">celt_stereo_ms_decouple</name><argument_list pos:start="257:44" pos:end="257:52">(<argument pos:start="257:45" pos:end="257:45"><expr pos:start="257:45" pos:end="257:45"><name pos:start="257:45" pos:end="257:45">X</name></expr></argument>, <argument pos:start="257:48" pos:end="257:48"><expr pos:start="257:48" pos:end="257:48"><name pos:start="257:48" pos:end="257:48">Y</name></expr></argument>, <argument pos:start="257:51" pos:end="257:51"><expr pos:start="257:51" pos:end="257:51"><name pos:start="257:51" pos:end="257:51">N</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="261:11" pos:end="295:9">else if <condition pos:start="261:19" pos:end="261:30">(<expr pos:start="261:20" pos:end="261:29"><name pos:start="261:20" pos:end="261:29">dualstereo</name></expr>)</condition> <block pos:start="261:32" pos:end="295:9">{<block_content pos:start="263:14" pos:end="293:23">

             <expr_stmt pos:start="263:14" pos:end="263:33"><expr pos:start="263:14" pos:end="263:32"><name pos:start="263:14" pos:end="263:16">inv</name> <operator pos:start="263:18" pos:end="263:18">=</operator> <name pos:start="263:20" pos:end="263:25">itheta</name> <operator pos:start="263:27" pos:end="263:27">&gt;</operator> <literal type="number" pos:start="263:29" pos:end="263:32">8192</literal></expr>;</expr_stmt>

             <if_stmt pos:start="265:14" pos:end="275:14"><if pos:start="265:14" pos:end="275:14">if <condition pos:start="265:17" pos:end="265:21">(<expr pos:start="265:18" pos:end="265:20"><name pos:start="265:18" pos:end="265:20">inv</name></expr>)</condition>

             <block pos:start="267:14" pos:end="275:14">{<block_content pos:start="269:17" pos:end="273:32">

                <decl_stmt pos:start="269:17" pos:end="269:22"><decl pos:start="269:17" pos:end="269:21"><type pos:start="269:17" pos:end="269:19"><name pos:start="269:17" pos:end="269:19">int</name></type> <name pos:start="269:21" pos:end="269:21">j</name></decl>;</decl_stmt>

                <for pos:start="271:17" pos:end="273:32">for <control pos:start="271:21" pos:end="271:33">(<init pos:start="271:22" pos:end="271:25"><expr pos:start="271:22" pos:end="271:24"><name pos:start="271:22" pos:end="271:22">j</name><operator pos:start="271:23" pos:end="271:23">=</operator><literal type="number" pos:start="271:24" pos:end="271:24">0</literal></expr>;</init><condition pos:start="271:26" pos:end="271:29"><expr pos:start="271:26" pos:end="271:28"><name pos:start="271:26" pos:end="271:26">j</name><operator pos:start="271:27" pos:end="271:27">&lt;</operator><name pos:start="271:28" pos:end="271:28">N</name></expr>;</condition><incr pos:start="271:30" pos:end="271:32"><expr pos:start="271:30" pos:end="271:32"><name pos:start="271:30" pos:end="271:30">j</name><operator pos:start="271:31" pos:end="271:32">++</operator></expr></incr>)</control><block type="pseudo" pos:start="273:20" pos:end="273:32"><block_content pos:start="273:20" pos:end="273:32">

                   <expr_stmt pos:start="273:20" pos:end="273:32"><expr pos:start="273:20" pos:end="273:31"><name pos:start="273:20" pos:end="273:23"><name pos:start="273:20" pos:end="273:20">Y</name><index pos:start="273:21" pos:end="273:23">[<expr pos:start="273:22" pos:end="273:22"><name pos:start="273:22" pos:end="273:22">j</name></expr>]</index></name> <operator pos:start="273:25" pos:end="273:25">=</operator> <operator pos:start="273:27" pos:end="273:27">-</operator><name pos:start="273:28" pos:end="273:31"><name pos:start="273:28" pos:end="273:28">Y</name><index pos:start="273:29" pos:end="273:31">[<expr pos:start="273:30" pos:end="273:30"><name pos:start="273:30" pos:end="273:30">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

             </block_content>}</block></if></if_stmt>

             <expr_stmt pos:start="277:14" pos:end="277:106"><expr pos:start="277:14" pos:end="277:105"><call pos:start="277:14" pos:end="277:105"><name pos:start="277:14" pos:end="277:36">celt_stereo_is_decouple</name><argument_list pos:start="277:37" pos:end="277:105">(<argument pos:start="277:38" pos:end="277:38"><expr pos:start="277:38" pos:end="277:38"><name pos:start="277:38" pos:end="277:38">X</name></expr></argument>, <argument pos:start="277:41" pos:end="277:41"><expr pos:start="277:41" pos:end="277:41"><name pos:start="277:41" pos:end="277:41">Y</name></expr></argument>, <argument pos:start="277:44" pos:end="277:71"><expr pos:start="277:44" pos:end="277:71"><name pos:start="277:44" pos:end="277:54"><name pos:start="277:44" pos:end="277:44">f</name><operator pos:start="277:45" pos:end="277:46">-&gt;</operator><name pos:start="277:47" pos:end="277:51">block</name><index pos:start="277:52" pos:end="277:54">[<expr pos:start="277:53" pos:end="277:53"><literal type="number" pos:start="277:53" pos:end="277:53">0</literal></expr>]</index></name><operator pos:start="277:55" pos:end="277:55">.</operator><name pos:start="277:56" pos:end="277:71"><name pos:start="277:56" pos:end="277:65">lin_energy</name><index pos:start="277:66" pos:end="277:71">[<expr pos:start="277:67" pos:end="277:70"><name pos:start="277:67" pos:end="277:70">band</name></expr>]</index></name></expr></argument>, <argument pos:start="277:74" pos:end="277:101"><expr pos:start="277:74" pos:end="277:101"><name pos:start="277:74" pos:end="277:84"><name pos:start="277:74" pos:end="277:74">f</name><operator pos:start="277:75" pos:end="277:76">-&gt;</operator><name pos:start="277:77" pos:end="277:81">block</name><index pos:start="277:82" pos:end="277:84">[<expr pos:start="277:83" pos:end="277:83"><literal type="number" pos:start="277:83" pos:end="277:83">1</literal></expr>]</index></name><operator pos:start="277:85" pos:end="277:85">.</operator><name pos:start="277:86" pos:end="277:101"><name pos:start="277:86" pos:end="277:95">lin_energy</name><index pos:start="277:96" pos:end="277:101">[<expr pos:start="277:97" pos:end="277:100"><name pos:start="277:97" pos:end="277:100">band</name></expr>]</index></name></expr></argument>, <argument pos:start="277:104" pos:end="277:104"><expr pos:start="277:104" pos:end="277:104"><name pos:start="277:104" pos:end="277:104">N</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="281:13" pos:end="289:13"><if pos:start="281:13" pos:end="285:13">if <condition pos:start="281:16" pos:end="281:53">(<expr pos:start="281:17" pos:end="281:52"><name pos:start="281:17" pos:end="281:17">b</name> <operator pos:start="281:19" pos:end="281:19">&gt;</operator> <literal type="number" pos:start="281:21" pos:end="281:21">2</literal> <operator pos:start="281:23" pos:end="281:24">&lt;&lt;</operator> <literal type="number" pos:start="281:26" pos:end="281:26">3</literal> <operator pos:start="281:28" pos:end="281:29">&amp;&amp;</operator> <name pos:start="281:31" pos:end="281:43"><name pos:start="281:31" pos:end="281:31">f</name><operator pos:start="281:32" pos:end="281:33">-&gt;</operator><name pos:start="281:34" pos:end="281:43">remaining2</name></name> <operator pos:start="281:45" pos:end="281:45">&gt;</operator> <literal type="number" pos:start="281:47" pos:end="281:47">2</literal> <operator pos:start="281:49" pos:end="281:50">&lt;&lt;</operator> <literal type="number" pos:start="281:52" pos:end="281:52">3</literal></expr>)</condition> <block pos:start="281:55" pos:end="285:13">{<block_content pos:start="283:17" pos:end="283:47">

                <expr_stmt pos:start="283:17" pos:end="283:47"><expr pos:start="283:17" pos:end="283:46"><call pos:start="283:17" pos:end="283:46"><name pos:start="283:17" pos:end="283:34">ff_opus_rc_enc_log</name><argument_list pos:start="283:35" pos:end="283:46">(<argument pos:start="283:36" pos:end="283:37"><expr pos:start="283:36" pos:end="283:37"><name pos:start="283:36" pos:end="283:37">rc</name></expr></argument>, <argument pos:start="283:40" pos:end="283:42"><expr pos:start="283:40" pos:end="283:42"><name pos:start="283:40" pos:end="283:42">inv</name></expr></argument>, <argument pos:start="283:45" pos:end="283:45"><expr pos:start="283:45" pos:end="283:45"><literal type="number" pos:start="283:45" pos:end="283:45">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="285:15" pos:end="289:13">else <block pos:start="285:20" pos:end="289:13">{<block_content pos:start="287:17" pos:end="287:24">

                <expr_stmt pos:start="287:17" pos:end="287:24"><expr pos:start="287:17" pos:end="287:23"><name pos:start="287:17" pos:end="287:19">inv</name> <operator pos:start="287:21" pos:end="287:21">=</operator> <literal type="number" pos:start="287:23" pos:end="287:23">0</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <expr_stmt pos:start="293:13" pos:end="293:23"><expr pos:start="293:13" pos:end="293:22"><name pos:start="293:13" pos:end="293:18">itheta</name> <operator pos:start="293:20" pos:end="293:20">=</operator> <literal type="number" pos:start="293:22" pos:end="293:22">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="297:9" pos:end="297:46"><expr pos:start="297:9" pos:end="297:45"><name pos:start="297:9" pos:end="297:14">qalloc</name> <operator pos:start="297:16" pos:end="297:16">=</operator> <call pos:start="297:18" pos:end="297:38"><name pos:start="297:18" pos:end="297:34">opus_rc_tell_frac</name><argument_list pos:start="297:35" pos:end="297:38">(<argument pos:start="297:36" pos:end="297:37"><expr pos:start="297:36" pos:end="297:37"><name pos:start="297:36" pos:end="297:37">rc</name></expr></argument>)</argument_list></call> <operator pos:start="297:40" pos:end="297:40">-</operator> <name pos:start="297:42" pos:end="297:45">tell</name></expr>;</expr_stmt>

        <expr_stmt pos:start="299:9" pos:end="299:20"><expr pos:start="299:9" pos:end="299:19"><name pos:start="299:9" pos:end="299:9">b</name> <operator pos:start="299:11" pos:end="299:12">-=</operator> <name pos:start="299:14" pos:end="299:19">qalloc</name></expr>;</expr_stmt>



        <expr_stmt pos:start="303:9" pos:end="303:25"><expr pos:start="303:9" pos:end="303:24"><name pos:start="303:9" pos:end="303:17">orig_fill</name> <operator pos:start="303:19" pos:end="303:19">=</operator> <name pos:start="303:21" pos:end="303:24">fill</name></expr>;</expr_stmt>

        <if_stmt pos:start="305:9" pos:end="337:9"><if pos:start="305:9" pos:end="315:9">if <condition pos:start="305:12" pos:end="305:24">(<expr pos:start="305:13" pos:end="305:23"><name pos:start="305:13" pos:end="305:18">itheta</name> <operator pos:start="305:20" pos:end="305:21">==</operator> <literal type="number" pos:start="305:23" pos:end="305:23">0</literal></expr>)</condition> <block pos:start="305:26" pos:end="315:9">{<block_content pos:start="307:13" pos:end="313:27">

            <expr_stmt pos:start="307:13" pos:end="307:25"><expr pos:start="307:13" pos:end="307:24"><name pos:start="307:13" pos:end="307:16">imid</name> <operator pos:start="307:18" pos:end="307:18">=</operator> <literal type="number" pos:start="307:20" pos:end="307:24">32767</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="309:13" pos:end="309:22"><expr pos:start="309:13" pos:end="309:21"><name pos:start="309:13" pos:end="309:17">iside</name> <operator pos:start="309:19" pos:end="309:19">=</operator> <literal type="number" pos:start="309:21" pos:end="309:21">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="311:13" pos:end="311:47"><expr pos:start="311:13" pos:end="311:46"><name pos:start="311:13" pos:end="311:16">fill</name> <operator pos:start="311:18" pos:end="311:18">=</operator> <call pos:start="311:20" pos:end="311:46"><name pos:start="311:20" pos:end="311:32">av_mod_uintp2</name><argument_list pos:start="311:33" pos:end="311:46">(<argument pos:start="311:34" pos:end="311:37"><expr pos:start="311:34" pos:end="311:37"><name pos:start="311:34" pos:end="311:37">fill</name></expr></argument>, <argument pos:start="311:40" pos:end="311:45"><expr pos:start="311:40" pos:end="311:45"><name pos:start="311:40" pos:end="311:45">blocks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="313:13" pos:end="313:27"><expr pos:start="313:13" pos:end="313:26"><name pos:start="313:13" pos:end="313:17">delta</name> <operator pos:start="313:19" pos:end="313:19">=</operator> <operator pos:start="313:21" pos:end="313:21">-</operator><literal type="number" pos:start="313:22" pos:end="313:26">16384</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="315:11" pos:end="325:9">else if <condition pos:start="315:19" pos:end="315:35">(<expr pos:start="315:20" pos:end="315:34"><name pos:start="315:20" pos:end="315:25">itheta</name> <operator pos:start="315:27" pos:end="315:28">==</operator> <literal type="number" pos:start="315:30" pos:end="315:34">16384</literal></expr>)</condition> <block pos:start="315:37" pos:end="325:9">{<block_content pos:start="317:13" pos:end="323:26">

            <expr_stmt pos:start="317:13" pos:end="317:21"><expr pos:start="317:13" pos:end="317:20"><name pos:start="317:13" pos:end="317:16">imid</name> <operator pos:start="317:18" pos:end="317:18">=</operator> <literal type="number" pos:start="317:20" pos:end="317:20">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="319:13" pos:end="319:26"><expr pos:start="319:13" pos:end="319:25"><name pos:start="319:13" pos:end="319:17">iside</name> <operator pos:start="319:19" pos:end="319:19">=</operator> <literal type="number" pos:start="319:21" pos:end="319:25">32767</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="321:13" pos:end="321:50"><expr pos:start="321:13" pos:end="321:49"><name pos:start="321:13" pos:end="321:16">fill</name> <operator pos:start="321:18" pos:end="321:19">&amp;=</operator> <operator pos:start="321:21" pos:end="321:21">(</operator><operator pos:start="321:22" pos:end="321:22">(</operator><literal type="number" pos:start="321:23" pos:end="321:23">1</literal> <operator pos:start="321:25" pos:end="321:26">&lt;&lt;</operator> <name pos:start="321:28" pos:end="321:33">blocks</name><operator pos:start="321:34" pos:end="321:34">)</operator> <operator pos:start="321:36" pos:end="321:36">-</operator> <literal type="number" pos:start="321:38" pos:end="321:38">1</literal><operator pos:start="321:39" pos:end="321:39">)</operator> <operator pos:start="321:41" pos:end="321:42">&lt;&lt;</operator> <name pos:start="321:44" pos:end="321:49">blocks</name></expr>;</expr_stmt>

            <expr_stmt pos:start="323:13" pos:end="323:26"><expr pos:start="323:13" pos:end="323:25"><name pos:start="323:13" pos:end="323:17">delta</name> <operator pos:start="323:19" pos:end="323:19">=</operator> <literal type="number" pos:start="323:21" pos:end="323:25">16384</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="325:11" pos:end="337:9">else <block pos:start="325:16" pos:end="337:9">{<block_content pos:start="327:13" pos:end="335:73">

            <expr_stmt pos:start="327:13" pos:end="327:36"><expr pos:start="327:13" pos:end="327:35"><name pos:start="327:13" pos:end="327:16">imid</name> <operator pos:start="327:18" pos:end="327:18">=</operator> <call pos:start="327:20" pos:end="327:35"><name pos:start="327:20" pos:end="327:27">celt_cos</name><argument_list pos:start="327:28" pos:end="327:35">(<argument pos:start="327:29" pos:end="327:34"><expr pos:start="327:29" pos:end="327:34"><name pos:start="327:29" pos:end="327:34">itheta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="329:13" pos:end="329:43"><expr pos:start="329:13" pos:end="329:42"><name pos:start="329:13" pos:end="329:17">iside</name> <operator pos:start="329:19" pos:end="329:19">=</operator> <call pos:start="329:21" pos:end="329:42"><name pos:start="329:21" pos:end="329:28">celt_cos</name><argument_list pos:start="329:29" pos:end="329:42">(<argument pos:start="329:30" pos:end="329:41"><expr pos:start="329:30" pos:end="329:41"><literal type="number" pos:start="329:30" pos:end="329:35">16384</literal><operator pos:start="329:35" pos:end="329:35">-</operator><name pos:start="329:36" pos:end="329:41">itheta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="331:13" pos:end="333:28">/* This is the mid vs side allocation that minimizes squared error

            in that band. */</comment>

            <expr_stmt pos:start="335:13" pos:end="335:73"><expr pos:start="335:13" pos:end="335:72"><name pos:start="335:13" pos:end="335:17">delta</name> <operator pos:start="335:19" pos:end="335:19">=</operator> <call pos:start="335:21" pos:end="335:72"><name pos:start="335:21" pos:end="335:31">ROUND_MUL16</name><argument_list pos:start="335:32" pos:end="335:72">(<argument pos:start="335:33" pos:end="335:44"><expr pos:start="335:33" pos:end="335:44"><operator pos:start="335:33" pos:end="335:33">(</operator><name pos:start="335:34" pos:end="335:34">N</name> <operator pos:start="335:36" pos:end="335:36">-</operator> <literal type="number" pos:start="335:38" pos:end="335:38">1</literal><operator pos:start="335:39" pos:end="335:39">)</operator> <operator pos:start="335:41" pos:end="335:42">&lt;&lt;</operator> <literal type="number" pos:start="335:44" pos:end="335:44">7</literal></expr></argument>, <argument pos:start="335:47" pos:end="335:71"><expr pos:start="335:47" pos:end="335:71"><call pos:start="335:47" pos:end="335:71"><name pos:start="335:47" pos:end="335:58">celt_log2tan</name><argument_list pos:start="335:59" pos:end="335:71">(<argument pos:start="335:60" pos:end="335:64"><expr pos:start="335:60" pos:end="335:64"><name pos:start="335:60" pos:end="335:64">iside</name></expr></argument>, <argument pos:start="335:67" pos:end="335:70"><expr pos:start="335:67" pos:end="335:70"><name pos:start="335:67" pos:end="335:70">imid</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="341:9" pos:end="341:32"><expr pos:start="341:9" pos:end="341:31"><name pos:start="341:9" pos:end="341:11">mid</name>  <operator pos:start="341:14" pos:end="341:14">=</operator> <name pos:start="341:16" pos:end="341:19">imid</name>  <operator pos:start="341:22" pos:end="341:22">/</operator> <literal type="number" pos:start="341:24" pos:end="341:31">32768.0f</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="343:9" pos:end="343:32"><expr pos:start="343:9" pos:end="343:31"><name pos:start="343:9" pos:end="343:12">side</name> <operator pos:start="343:14" pos:end="343:14">=</operator> <name pos:start="343:16" pos:end="343:20">iside</name> <operator pos:start="343:22" pos:end="343:22">/</operator> <literal type="number" pos:start="343:24" pos:end="343:31">32768.0f</literal></expr>;</expr_stmt>



        <comment type="block" pos:start="347:9" pos:end="351:38">/* This is a special case for N=2 that only works for stereo and takes

        advantage of the fact that mid and side are orthogonal to encode

        the side with just one bit. */</comment>

        <if_stmt pos:start="353:9" pos:end="569:9"><if pos:start="353:9" pos:end="429:9">if <condition pos:start="353:12" pos:end="353:33">(<expr pos:start="353:13" pos:end="353:32"><name pos:start="353:13" pos:end="353:13">N</name> <operator pos:start="353:15" pos:end="353:16">==</operator> <literal type="number" pos:start="353:18" pos:end="353:18">2</literal> <operator pos:start="353:20" pos:end="353:21">&amp;&amp;</operator> <name pos:start="353:23" pos:end="353:32">dualstereo</name></expr>)</condition> <block pos:start="353:35" pos:end="429:9">{<block_content pos:start="355:13" pos:end="427:30">

            <decl_stmt pos:start="355:13" pos:end="355:18"><decl pos:start="355:13" pos:end="355:17"><type pos:start="355:13" pos:end="355:15"><name pos:start="355:13" pos:end="355:15">int</name></type> <name pos:start="355:17" pos:end="355:17">c</name></decl>;</decl_stmt>

            <decl_stmt pos:start="357:13" pos:end="357:25"><decl pos:start="357:13" pos:end="357:24"><type pos:start="357:13" pos:end="357:15"><name pos:start="357:13" pos:end="357:15">int</name></type> <name pos:start="357:17" pos:end="357:20">sign</name> <init pos:start="357:22" pos:end="357:24">= <expr pos:start="357:24" pos:end="357:24"><literal type="number" pos:start="357:24" pos:end="357:24">0</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="359:13" pos:end="359:22"><decl pos:start="359:13" pos:end="359:21"><type pos:start="359:13" pos:end="359:17"><name pos:start="359:13" pos:end="359:17">float</name></type> <name pos:start="359:19" pos:end="359:21">tmp</name></decl>;</decl_stmt>

            <decl_stmt pos:start="361:13" pos:end="361:27"><decl pos:start="361:13" pos:end="361:21"><type pos:start="361:13" pos:end="361:19"><name pos:start="361:13" pos:end="361:17">float</name> <modifier pos:start="361:19" pos:end="361:19">*</modifier></type><name pos:start="361:20" pos:end="361:21">x2</name></decl>, <decl pos:start="361:24" pos:end="361:26"><type ref="prev" pos:start="361:13" pos:end="361:19"><modifier pos:start="361:24" pos:end="361:24">*</modifier></type><name pos:start="361:25" pos:end="361:26">y2</name></decl>;</decl_stmt>

            <expr_stmt pos:start="363:13" pos:end="363:22"><expr pos:start="363:13" pos:end="363:21"><name pos:start="363:13" pos:end="363:17">mbits</name> <operator pos:start="363:19" pos:end="363:19">=</operator> <name pos:start="363:21" pos:end="363:21">b</name></expr>;</expr_stmt>

            <comment type="block" pos:start="365:13" pos:end="365:48">/* Only need one bit for the side */</comment>

            <expr_stmt pos:start="367:13" pos:end="367:66"><expr pos:start="367:13" pos:end="367:65"><name pos:start="367:13" pos:end="367:17">sbits</name> <operator pos:start="367:19" pos:end="367:19">=</operator> <ternary pos:start="367:21" pos:end="367:65"><condition pos:start="367:21" pos:end="367:54"><expr pos:start="367:21" pos:end="367:52"><operator pos:start="367:21" pos:end="367:21">(</operator><name pos:start="367:22" pos:end="367:27">itheta</name> <operator pos:start="367:29" pos:end="367:30">!=</operator> <literal type="number" pos:start="367:32" pos:end="367:32">0</literal> <operator pos:start="367:34" pos:end="367:35">&amp;&amp;</operator> <name pos:start="367:37" pos:end="367:42">itheta</name> <operator pos:start="367:44" pos:end="367:45">!=</operator> <literal type="number" pos:start="367:47" pos:end="367:51">16384</literal><operator pos:start="367:52" pos:end="367:52">)</operator></expr> ?</condition><then pos:start="367:56" pos:end="367:61"> <expr pos:start="367:56" pos:end="367:61"><literal type="number" pos:start="367:56" pos:end="367:56">1</literal> <operator pos:start="367:58" pos:end="367:59">&lt;&lt;</operator> <literal type="number" pos:start="367:61" pos:end="367:61">3</literal></expr> </then><else pos:start="367:63" pos:end="367:65">: <expr pos:start="367:65" pos:end="367:65"><literal type="number" pos:start="367:65" pos:end="367:65">0</literal></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="369:13" pos:end="369:27"><expr pos:start="369:13" pos:end="369:26"><name pos:start="369:13" pos:end="369:17">mbits</name> <operator pos:start="369:19" pos:end="369:20">-=</operator> <name pos:start="369:22" pos:end="369:26">sbits</name></expr>;</expr_stmt>

            <expr_stmt pos:start="371:13" pos:end="371:32"><expr pos:start="371:13" pos:end="371:31"><name pos:start="371:13" pos:end="371:13">c</name> <operator pos:start="371:15" pos:end="371:15">=</operator> <operator pos:start="371:17" pos:end="371:17">(</operator><name pos:start="371:18" pos:end="371:23">itheta</name> <operator pos:start="371:25" pos:end="371:25">&gt;</operator> <literal type="number" pos:start="371:27" pos:end="371:30">8192</literal><operator pos:start="371:31" pos:end="371:31">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="373:13" pos:end="373:42"><expr pos:start="373:13" pos:end="373:41"><name pos:start="373:13" pos:end="373:25"><name pos:start="373:13" pos:end="373:13">f</name><operator pos:start="373:14" pos:end="373:15">-&gt;</operator><name pos:start="373:16" pos:end="373:25">remaining2</name></name> <operator pos:start="373:27" pos:end="373:28">-=</operator> <name pos:start="373:30" pos:end="373:35">qalloc</name><operator pos:start="373:36" pos:end="373:36">+</operator><name pos:start="373:37" pos:end="373:41">sbits</name></expr>;</expr_stmt>



            <expr_stmt pos:start="377:13" pos:end="377:27"><expr pos:start="377:13" pos:end="377:26"><name pos:start="377:13" pos:end="377:14">x2</name> <operator pos:start="377:16" pos:end="377:16">=</operator> <ternary pos:start="377:18" pos:end="377:26"><condition pos:start="377:18" pos:end="377:20"><expr pos:start="377:18" pos:end="377:18"><name pos:start="377:18" pos:end="377:18">c</name></expr> ?</condition><then pos:start="377:22" pos:end="377:22"> <expr pos:start="377:22" pos:end="377:22"><name pos:start="377:22" pos:end="377:22">Y</name></expr> </then><else pos:start="377:24" pos:end="377:26">: <expr pos:start="377:26" pos:end="377:26"><name pos:start="377:26" pos:end="377:26">X</name></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="379:13" pos:end="379:27"><expr pos:start="379:13" pos:end="379:26"><name pos:start="379:13" pos:end="379:14">y2</name> <operator pos:start="379:16" pos:end="379:16">=</operator> <ternary pos:start="379:18" pos:end="379:26"><condition pos:start="379:18" pos:end="379:20"><expr pos:start="379:18" pos:end="379:18"><name pos:start="379:18" pos:end="379:18">c</name></expr> ?</condition><then pos:start="379:22" pos:end="379:22"> <expr pos:start="379:22" pos:end="379:22"><name pos:start="379:22" pos:end="379:22">X</name></expr> </then><else pos:start="379:24" pos:end="379:26">: <expr pos:start="379:26" pos:end="379:26"><name pos:start="379:26" pos:end="379:26">Y</name></expr></else></ternary></expr>;</expr_stmt>

            <if_stmt pos:start="381:13" pos:end="387:13"><if pos:start="381:13" pos:end="387:13">if <condition pos:start="381:16" pos:end="381:22">(<expr pos:start="381:17" pos:end="381:21"><name pos:start="381:17" pos:end="381:21">sbits</name></expr>)</condition> <block pos:start="381:24" pos:end="387:13">{<block_content pos:start="383:17" pos:end="385:48">

                <expr_stmt pos:start="383:17" pos:end="383:53"><expr pos:start="383:17" pos:end="383:52"><name pos:start="383:17" pos:end="383:20">sign</name> <operator pos:start="383:22" pos:end="383:22">=</operator> <name pos:start="383:24" pos:end="383:28"><name pos:start="383:24" pos:end="383:25">x2</name><index pos:start="383:26" pos:end="383:28">[<expr pos:start="383:27" pos:end="383:27"><literal type="number" pos:start="383:27" pos:end="383:27">0</literal></expr>]</index></name><operator pos:start="383:29" pos:end="383:29">*</operator><name pos:start="383:30" pos:end="383:34"><name pos:start="383:30" pos:end="383:31">y2</name><index pos:start="383:32" pos:end="383:34">[<expr pos:start="383:33" pos:end="383:33"><literal type="number" pos:start="383:33" pos:end="383:33">1</literal></expr>]</index></name> <operator pos:start="383:36" pos:end="383:36">-</operator> <name pos:start="383:38" pos:end="383:42"><name pos:start="383:38" pos:end="383:39">x2</name><index pos:start="383:40" pos:end="383:42">[<expr pos:start="383:41" pos:end="383:41"><literal type="number" pos:start="383:41" pos:end="383:41">1</literal></expr>]</index></name><operator pos:start="383:43" pos:end="383:43">*</operator><name pos:start="383:44" pos:end="383:48"><name pos:start="383:44" pos:end="383:45">y2</name><index pos:start="383:46" pos:end="383:48">[<expr pos:start="383:47" pos:end="383:47"><literal type="number" pos:start="383:47" pos:end="383:47">0</literal></expr>]</index></name> <operator pos:start="383:50" pos:end="383:50">&lt;</operator> <literal type="number" pos:start="383:52" pos:end="383:52">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="385:17" pos:end="385:48"><expr pos:start="385:17" pos:end="385:47"><call pos:start="385:17" pos:end="385:47"><name pos:start="385:17" pos:end="385:34">ff_opus_rc_put_raw</name><argument_list pos:start="385:35" pos:end="385:47">(<argument pos:start="385:36" pos:end="385:37"><expr pos:start="385:36" pos:end="385:37"><name pos:start="385:36" pos:end="385:37">rc</name></expr></argument>, <argument pos:start="385:40" pos:end="385:43"><expr pos:start="385:40" pos:end="385:43"><name pos:start="385:40" pos:end="385:43">sign</name></expr></argument>, <argument pos:start="385:46" pos:end="385:46"><expr pos:start="385:46" pos:end="385:46"><literal type="number" pos:start="385:46" pos:end="385:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="389:13" pos:end="389:32"><expr pos:start="389:13" pos:end="389:31"><name pos:start="389:13" pos:end="389:16">sign</name> <operator pos:start="389:18" pos:end="389:18">=</operator> <literal type="number" pos:start="389:20" pos:end="389:22">1</literal> <operator pos:start="389:22" pos:end="389:22">-</operator> <literal type="number" pos:start="389:24" pos:end="389:24">2</literal> <operator pos:start="389:26" pos:end="389:26">*</operator> <name pos:start="389:28" pos:end="389:31">sign</name></expr>;</expr_stmt>

            <comment type="block" pos:start="391:13" pos:end="393:70">/* We use orig_fill here because we want to fold the side, but if

            itheta==16384, we'll have cleared the low bits of fill. */</comment>

            <expr_stmt pos:start="395:13" pos:end="399:65"><expr pos:start="395:13" pos:end="399:64"><name pos:start="395:13" pos:end="395:14">cm</name> <operator pos:start="395:16" pos:end="395:16">=</operator> <call pos:start="395:18" pos:end="399:64"><name pos:start="395:18" pos:end="395:36">ff_celt_encode_band</name><argument_list pos:start="395:37" pos:end="399:64">(<argument pos:start="395:38" pos:end="395:38"><expr pos:start="395:38" pos:end="395:38"><name pos:start="395:38" pos:end="395:38">f</name></expr></argument>, <argument pos:start="395:41" pos:end="395:42"><expr pos:start="395:41" pos:end="395:42"><name pos:start="395:41" pos:end="395:42">rc</name></expr></argument>, <argument pos:start="395:45" pos:end="395:48"><expr pos:start="395:45" pos:end="395:48"><name pos:start="395:45" pos:end="395:48">band</name></expr></argument>, <argument pos:start="395:51" pos:end="395:52"><expr pos:start="395:51" pos:end="395:52"><name pos:start="395:51" pos:end="395:52">x2</name></expr></argument>, <argument pos:start="395:55" pos:end="395:58"><expr pos:start="395:55" pos:end="395:58"><name pos:start="395:55" pos:end="395:58">NULL</name></expr></argument>, <argument pos:start="395:61" pos:end="395:61"><expr pos:start="395:61" pos:end="395:61"><name pos:start="395:61" pos:end="395:61">N</name></expr></argument>, <argument pos:start="395:64" pos:end="395:68"><expr pos:start="395:64" pos:end="395:68"><name pos:start="395:64" pos:end="395:68">mbits</name></expr></argument>, <argument pos:start="395:71" pos:end="395:76"><expr pos:start="395:71" pos:end="395:76"><name pos:start="395:71" pos:end="395:76">blocks</name></expr></argument>,

                                     <argument pos:start="397:38" pos:end="397:44"><expr pos:start="397:38" pos:end="397:44"><name pos:start="397:38" pos:end="397:44">lowband</name></expr></argument>, <argument pos:start="397:47" pos:end="397:54"><expr pos:start="397:47" pos:end="397:54"><name pos:start="397:47" pos:end="397:54">duration</name></expr></argument>, <argument pos:start="397:57" pos:end="397:67"><expr pos:start="397:57" pos:end="397:67"><name pos:start="397:57" pos:end="397:67">lowband_out</name></expr></argument>, <argument pos:start="397:70" pos:end="397:74"><expr pos:start="397:70" pos:end="397:74"><name pos:start="397:70" pos:end="397:74">level</name></expr></argument>, <argument pos:start="397:77" pos:end="397:80"><expr pos:start="397:77" pos:end="397:80"><name pos:start="397:77" pos:end="397:80">gain</name></expr></argument>,

                                     <argument pos:start="399:38" pos:end="399:52"><expr pos:start="399:38" pos:end="399:52"><name pos:start="399:38" pos:end="399:52">lowband_scratch</name></expr></argument>, <argument pos:start="399:55" pos:end="399:63"><expr pos:start="399:55" pos:end="399:63"><name pos:start="399:55" pos:end="399:63">orig_fill</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="401:13" pos:end="403:80">/* We don't split N=2 bands, so cm is either 1 or 0 (for a fold-collapse),

            and there's no need to worry about mixing with the other channel. */</comment>

            <expr_stmt pos:start="405:13" pos:end="405:34"><expr pos:start="405:13" pos:end="405:33"><name pos:start="405:13" pos:end="405:17"><name pos:start="405:13" pos:end="405:14">y2</name><index pos:start="405:15" pos:end="405:17">[<expr pos:start="405:16" pos:end="405:16"><literal type="number" pos:start="405:16" pos:end="405:16">0</literal></expr>]</index></name> <operator pos:start="405:19" pos:end="405:19">=</operator> <operator pos:start="405:21" pos:end="405:21">-</operator><name pos:start="405:22" pos:end="405:25">sign</name> <operator pos:start="405:27" pos:end="405:27">*</operator> <name pos:start="405:29" pos:end="405:33"><name pos:start="405:29" pos:end="405:30">x2</name><index pos:start="405:31" pos:end="405:33">[<expr pos:start="405:32" pos:end="405:32"><literal type="number" pos:start="405:32" pos:end="405:32">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="407:13" pos:end="407:34"><expr pos:start="407:13" pos:end="407:33"><name pos:start="407:13" pos:end="407:17"><name pos:start="407:13" pos:end="407:14">y2</name><index pos:start="407:15" pos:end="407:17">[<expr pos:start="407:16" pos:end="407:16"><literal type="number" pos:start="407:16" pos:end="407:16">1</literal></expr>]</index></name> <operator pos:start="407:19" pos:end="407:19">=</operator>  <name pos:start="407:22" pos:end="407:25">sign</name> <operator pos:start="407:27" pos:end="407:27">*</operator> <name pos:start="407:29" pos:end="407:33"><name pos:start="407:29" pos:end="407:30">x2</name><index pos:start="407:31" pos:end="407:33">[<expr pos:start="407:32" pos:end="407:32"><literal type="number" pos:start="407:32" pos:end="407:32">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="409:13" pos:end="409:24"><expr pos:start="409:13" pos:end="409:23"><name pos:start="409:13" pos:end="409:16"><name pos:start="409:13" pos:end="409:13">X</name><index pos:start="409:14" pos:end="409:16">[<expr pos:start="409:15" pos:end="409:15"><literal type="number" pos:start="409:15" pos:end="409:15">0</literal></expr>]</index></name> <operator pos:start="409:18" pos:end="409:19">*=</operator> <name pos:start="409:21" pos:end="409:23">mid</name></expr>;</expr_stmt>

            <expr_stmt pos:start="411:13" pos:end="411:24"><expr pos:start="411:13" pos:end="411:23"><name pos:start="411:13" pos:end="411:16"><name pos:start="411:13" pos:end="411:13">X</name><index pos:start="411:14" pos:end="411:16">[<expr pos:start="411:15" pos:end="411:15"><literal type="number" pos:start="411:15" pos:end="411:15">1</literal></expr>]</index></name> <operator pos:start="411:18" pos:end="411:19">*=</operator> <name pos:start="411:21" pos:end="411:23">mid</name></expr>;</expr_stmt>

            <expr_stmt pos:start="413:13" pos:end="413:25"><expr pos:start="413:13" pos:end="413:24"><name pos:start="413:13" pos:end="413:16"><name pos:start="413:13" pos:end="413:13">Y</name><index pos:start="413:14" pos:end="413:16">[<expr pos:start="413:15" pos:end="413:15"><literal type="number" pos:start="413:15" pos:end="413:15">0</literal></expr>]</index></name> <operator pos:start="413:18" pos:end="413:19">*=</operator> <name pos:start="413:21" pos:end="413:24">side</name></expr>;</expr_stmt>

            <expr_stmt pos:start="415:13" pos:end="415:25"><expr pos:start="415:13" pos:end="415:24"><name pos:start="415:13" pos:end="415:16"><name pos:start="415:13" pos:end="415:13">Y</name><index pos:start="415:14" pos:end="415:16">[<expr pos:start="415:15" pos:end="415:15"><literal type="number" pos:start="415:15" pos:end="415:15">1</literal></expr>]</index></name> <operator pos:start="415:18" pos:end="415:19">*=</operator> <name pos:start="415:21" pos:end="415:24">side</name></expr>;</expr_stmt>

            <expr_stmt pos:start="417:13" pos:end="417:23"><expr pos:start="417:13" pos:end="417:22"><name pos:start="417:13" pos:end="417:15">tmp</name> <operator pos:start="417:17" pos:end="417:17">=</operator> <name pos:start="417:19" pos:end="417:22"><name pos:start="417:19" pos:end="417:19">X</name><index pos:start="417:20" pos:end="417:22">[<expr pos:start="417:21" pos:end="417:21"><literal type="number" pos:start="417:21" pos:end="417:21">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="419:13" pos:end="419:30"><expr pos:start="419:13" pos:end="419:29"><name pos:start="419:13" pos:end="419:16"><name pos:start="419:13" pos:end="419:13">X</name><index pos:start="419:14" pos:end="419:16">[<expr pos:start="419:15" pos:end="419:15"><literal type="number" pos:start="419:15" pos:end="419:15">0</literal></expr>]</index></name> <operator pos:start="419:18" pos:end="419:18">=</operator> <name pos:start="419:20" pos:end="419:22">tmp</name> <operator pos:start="419:24" pos:end="419:24">-</operator> <name pos:start="419:26" pos:end="419:29"><name pos:start="419:26" pos:end="419:26">Y</name><index pos:start="419:27" pos:end="419:29">[<expr pos:start="419:28" pos:end="419:28"><literal type="number" pos:start="419:28" pos:end="419:28">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="421:13" pos:end="421:30"><expr pos:start="421:13" pos:end="421:29"><name pos:start="421:13" pos:end="421:16"><name pos:start="421:13" pos:end="421:13">Y</name><index pos:start="421:14" pos:end="421:16">[<expr pos:start="421:15" pos:end="421:15"><literal type="number" pos:start="421:15" pos:end="421:15">0</literal></expr>]</index></name> <operator pos:start="421:18" pos:end="421:18">=</operator> <name pos:start="421:20" pos:end="421:22">tmp</name> <operator pos:start="421:24" pos:end="421:24">+</operator> <name pos:start="421:26" pos:end="421:29"><name pos:start="421:26" pos:end="421:26">Y</name><index pos:start="421:27" pos:end="421:29">[<expr pos:start="421:28" pos:end="421:28"><literal type="number" pos:start="421:28" pos:end="421:28">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="423:13" pos:end="423:23"><expr pos:start="423:13" pos:end="423:22"><name pos:start="423:13" pos:end="423:15">tmp</name> <operator pos:start="423:17" pos:end="423:17">=</operator> <name pos:start="423:19" pos:end="423:22"><name pos:start="423:19" pos:end="423:19">X</name><index pos:start="423:20" pos:end="423:22">[<expr pos:start="423:21" pos:end="423:21"><literal type="number" pos:start="423:21" pos:end="423:21">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="425:13" pos:end="425:30"><expr pos:start="425:13" pos:end="425:29"><name pos:start="425:13" pos:end="425:16"><name pos:start="425:13" pos:end="425:13">X</name><index pos:start="425:14" pos:end="425:16">[<expr pos:start="425:15" pos:end="425:15"><literal type="number" pos:start="425:15" pos:end="425:15">1</literal></expr>]</index></name> <operator pos:start="425:18" pos:end="425:18">=</operator> <name pos:start="425:20" pos:end="425:22">tmp</name> <operator pos:start="425:24" pos:end="425:24">-</operator> <name pos:start="425:26" pos:end="425:29"><name pos:start="425:26" pos:end="425:26">Y</name><index pos:start="425:27" pos:end="425:29">[<expr pos:start="425:28" pos:end="425:28"><literal type="number" pos:start="425:28" pos:end="425:28">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="427:13" pos:end="427:30"><expr pos:start="427:13" pos:end="427:29"><name pos:start="427:13" pos:end="427:16"><name pos:start="427:13" pos:end="427:13">Y</name><index pos:start="427:14" pos:end="427:16">[<expr pos:start="427:15" pos:end="427:15"><literal type="number" pos:start="427:15" pos:end="427:15">1</literal></expr>]</index></name> <operator pos:start="427:18" pos:end="427:18">=</operator> <name pos:start="427:20" pos:end="427:22">tmp</name> <operator pos:start="427:24" pos:end="427:24">+</operator> <name pos:start="427:26" pos:end="427:29"><name pos:start="427:26" pos:end="427:26">Y</name><index pos:start="427:27" pos:end="427:29">[<expr pos:start="427:28" pos:end="427:28"><literal type="number" pos:start="427:28" pos:end="427:28">1</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="429:11" pos:end="569:9">else <block pos:start="429:16" pos:end="569:9">{<block_content pos:start="433:13" pos:end="567:13">

            <comment type="block" pos:start="431:13" pos:end="431:37">/* "Normal" split code */</comment>

            <decl_stmt pos:start="433:13" pos:end="433:44"><decl pos:start="433:13" pos:end="433:43"><type pos:start="433:13" pos:end="433:19"><name pos:start="433:13" pos:end="433:17">float</name> <modifier pos:start="433:19" pos:end="433:19">*</modifier></type><name pos:start="433:20" pos:end="433:32">next_lowband2</name>     <init pos:start="433:38" pos:end="433:43">= <expr pos:start="433:40" pos:end="433:43"><name pos:start="433:40" pos:end="433:43">NULL</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="435:13" pos:end="435:44"><decl pos:start="435:13" pos:end="435:43"><type pos:start="435:13" pos:end="435:19"><name pos:start="435:13" pos:end="435:17">float</name> <modifier pos:start="435:19" pos:end="435:19">*</modifier></type><name pos:start="435:20" pos:end="435:36">next_lowband_out1</name> <init pos:start="435:38" pos:end="435:43">= <expr pos:start="435:40" pos:end="435:43"><name pos:start="435:40" pos:end="435:43">NULL</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="437:13" pos:end="437:31"><decl pos:start="437:13" pos:end="437:30"><type pos:start="437:13" pos:end="437:15"><name pos:start="437:13" pos:end="437:15">int</name></type> <name pos:start="437:17" pos:end="437:26">next_level</name> <init pos:start="437:28" pos:end="437:30">= <expr pos:start="437:30" pos:end="437:30"><literal type="number" pos:start="437:30" pos:end="437:30">0</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="439:13" pos:end="439:26"><decl pos:start="439:13" pos:end="439:25"><type pos:start="439:13" pos:end="439:15"><name pos:start="439:13" pos:end="439:15">int</name></type> <name pos:start="439:17" pos:end="439:25">rebalance</name></decl>;</decl_stmt>



            <comment type="block" pos:start="443:13" pos:end="445:35">/* Give more bits to low-energy MDCTs than they would

             * otherwise deserve */</comment>

            <if_stmt pos:start="447:13" pos:end="463:13"><if pos:start="447:13" pos:end="463:13">if <condition pos:start="447:16" pos:end="447:59">(<expr pos:start="447:17" pos:end="447:58"><name pos:start="447:17" pos:end="447:18">B0</name> <operator pos:start="447:20" pos:end="447:20">&gt;</operator> <literal type="number" pos:start="447:22" pos:end="447:22">1</literal> <operator pos:start="447:24" pos:end="447:25">&amp;&amp;</operator> <operator pos:start="447:27" pos:end="447:27">!</operator><name pos:start="447:28" pos:end="447:37">dualstereo</name> <operator pos:start="447:39" pos:end="447:40">&amp;&amp;</operator> <operator pos:start="447:42" pos:end="447:42">(</operator><name pos:start="447:43" pos:end="447:48">itheta</name> <operator pos:start="447:50" pos:end="447:50">&amp;</operator> <literal type="number" pos:start="447:52" pos:end="447:57">0x3fff</literal><operator pos:start="447:58" pos:end="447:58">)</operator></expr>)</condition> <block pos:start="447:61" pos:end="463:13">{<block_content pos:start="449:17" pos:end="461:73">

                <if_stmt pos:start="449:17" pos:end="461:73"><if pos:start="449:17" pos:end="453:53">if <condition pos:start="449:20" pos:end="449:34">(<expr pos:start="449:21" pos:end="449:33"><name pos:start="449:21" pos:end="449:26">itheta</name> <operator pos:start="449:28" pos:end="449:28">&gt;</operator> <literal type="number" pos:start="449:30" pos:end="449:33">8192</literal></expr>)</condition><block type="pseudo" pos:start="453:21" pos:end="453:53"><block_content pos:start="453:21" pos:end="453:53">

                    <comment type="block" pos:start="451:21" pos:end="451:66">/* Rough approximation for pre-echo masking */</comment>

                    <expr_stmt pos:start="453:21" pos:end="453:53"><expr pos:start="453:21" pos:end="453:52"><name pos:start="453:21" pos:end="453:25">delta</name> <operator pos:start="453:27" pos:end="453:28">-=</operator> <name pos:start="453:30" pos:end="453:34">delta</name> <operator pos:start="453:36" pos:end="453:37">&gt;&gt;</operator> <operator pos:start="453:39" pos:end="453:39">(</operator><literal type="number" pos:start="453:40" pos:end="453:42">4</literal> <operator pos:start="453:42" pos:end="453:42">-</operator> <name pos:start="453:44" pos:end="453:51">duration</name><operator pos:start="453:52" pos:end="453:52">)</operator></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="455:17" pos:end="461:73">else<block type="pseudo" pos:start="461:21" pos:end="461:73"><block_content pos:start="461:21" pos:end="461:73">

                    <comment type="block" pos:start="457:21" pos:end="459:42">/* Corresponds to a forward-masking slope of

                     * 1.5 dB per 10 ms */</comment>

                    <expr_stmt pos:start="461:21" pos:end="461:73"><expr pos:start="461:21" pos:end="461:72"><name pos:start="461:21" pos:end="461:25">delta</name> <operator pos:start="461:27" pos:end="461:27">=</operator> <call pos:start="461:29" pos:end="461:72"><name pos:start="461:29" pos:end="461:33">FFMIN</name><argument_list pos:start="461:34" pos:end="461:72">(<argument pos:start="461:35" pos:end="461:35"><expr pos:start="461:35" pos:end="461:35"><literal type="number" pos:start="461:35" pos:end="461:35">0</literal></expr></argument>, <argument pos:start="461:38" pos:end="461:71"><expr pos:start="461:38" pos:end="461:71"><name pos:start="461:38" pos:end="461:42">delta</name> <operator pos:start="461:44" pos:end="461:44">+</operator> <operator pos:start="461:46" pos:end="461:46">(</operator><name pos:start="461:47" pos:end="461:47">N</name> <operator pos:start="461:49" pos:end="461:50">&lt;&lt;</operator> <literal type="number" pos:start="461:52" pos:end="461:52">3</literal> <operator pos:start="461:54" pos:end="461:55">&gt;&gt;</operator> <operator pos:start="461:57" pos:end="461:57">(</operator><literal type="number" pos:start="461:58" pos:end="461:60">5</literal> <operator pos:start="461:60" pos:end="461:60">-</operator> <name pos:start="461:62" pos:end="461:69">duration</name><operator pos:start="461:70" pos:end="461:70">)</operator><operator pos:start="461:71" pos:end="461:71">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="465:13" pos:end="465:51"><expr pos:start="465:13" pos:end="465:50"><name pos:start="465:13" pos:end="465:17">mbits</name> <operator pos:start="465:19" pos:end="465:19">=</operator> <call pos:start="465:21" pos:end="465:50"><name pos:start="465:21" pos:end="465:27">av_clip</name><argument_list pos:start="465:28" pos:end="465:50">(<argument pos:start="465:29" pos:end="465:43"><expr pos:start="465:29" pos:end="465:43"><operator pos:start="465:29" pos:end="465:29">(</operator><name pos:start="465:30" pos:end="465:30">b</name> <operator pos:start="465:32" pos:end="465:32">-</operator> <name pos:start="465:34" pos:end="465:38">delta</name><operator pos:start="465:39" pos:end="465:39">)</operator> <operator pos:start="465:41" pos:end="465:41">/</operator> <literal type="number" pos:start="465:43" pos:end="465:43">2</literal></expr></argument>, <argument pos:start="465:46" pos:end="465:46"><expr pos:start="465:46" pos:end="465:46"><literal type="number" pos:start="465:46" pos:end="465:46">0</literal></expr></argument>, <argument pos:start="465:49" pos:end="465:49"><expr pos:start="465:49" pos:end="465:49"><name pos:start="465:49" pos:end="465:49">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="467:13" pos:end="467:30"><expr pos:start="467:13" pos:end="467:29"><name pos:start="467:13" pos:end="467:17">sbits</name> <operator pos:start="467:19" pos:end="467:19">=</operator> <name pos:start="467:21" pos:end="467:21">b</name> <operator pos:start="467:23" pos:end="467:23">-</operator> <name pos:start="467:25" pos:end="467:29">mbits</name></expr>;</expr_stmt>

            <expr_stmt pos:start="469:13" pos:end="469:36"><expr pos:start="469:13" pos:end="469:35"><name pos:start="469:13" pos:end="469:25"><name pos:start="469:13" pos:end="469:13">f</name><operator pos:start="469:14" pos:end="469:15">-&gt;</operator><name pos:start="469:16" pos:end="469:25">remaining2</name></name> <operator pos:start="469:27" pos:end="469:28">-=</operator> <name pos:start="469:30" pos:end="469:35">qalloc</name></expr>;</expr_stmt>



            <if_stmt pos:start="473:13" pos:end="475:44"><if pos:start="473:13" pos:end="475:44">if <condition pos:start="473:16" pos:end="473:39">(<expr pos:start="473:17" pos:end="473:38"><name pos:start="473:17" pos:end="473:23">lowband</name> <operator pos:start="473:25" pos:end="473:26">&amp;&amp;</operator> <operator pos:start="473:28" pos:end="473:28">!</operator><name pos:start="473:29" pos:end="473:38">dualstereo</name></expr>)</condition><block type="pseudo" pos:start="475:17" pos:end="475:44"><block_content pos:start="475:17" pos:end="475:44">

                <expr_stmt pos:start="475:17" pos:end="475:44"><expr pos:start="475:17" pos:end="475:43"><name pos:start="475:17" pos:end="475:29">next_lowband2</name> <operator pos:start="475:31" pos:end="475:31">=</operator> <name pos:start="475:33" pos:end="475:39">lowband</name> <operator pos:start="475:41" pos:end="475:41">+</operator> <name pos:start="475:43" pos:end="475:43">N</name></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="475:46" pos:end="475:69">/* &gt;32-bit split case */</comment>



            <comment type="block" pos:start="479:13" pos:end="481:52">/* Only stereo needs to pass on lowband_out.

             * Otherwise, it's handled at the end */</comment>

            <if_stmt pos:start="483:13" pos:end="489:39"><if pos:start="483:13" pos:end="485:48">if <condition pos:start="483:16" pos:end="483:27">(<expr pos:start="483:17" pos:end="483:26"><name pos:start="483:17" pos:end="483:26">dualstereo</name></expr>)</condition><block type="pseudo" pos:start="485:17" pos:end="485:48"><block_content pos:start="485:17" pos:end="485:48">

                <expr_stmt pos:start="485:17" pos:end="485:48"><expr pos:start="485:17" pos:end="485:47"><name pos:start="485:17" pos:end="485:33">next_lowband_out1</name> <operator pos:start="485:35" pos:end="485:35">=</operator> <name pos:start="485:37" pos:end="485:47">lowband_out</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="487:13" pos:end="489:39">else<block type="pseudo" pos:start="489:17" pos:end="489:39"><block_content pos:start="489:17" pos:end="489:39">

                <expr_stmt pos:start="489:17" pos:end="489:39"><expr pos:start="489:17" pos:end="489:38"><name pos:start="489:17" pos:end="489:26">next_level</name> <operator pos:start="489:28" pos:end="489:28">=</operator> <name pos:start="489:30" pos:end="489:34">level</name> <operator pos:start="489:36" pos:end="489:36">+</operator> <literal type="number" pos:start="489:38" pos:end="489:38">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <expr_stmt pos:start="493:13" pos:end="493:38"><expr pos:start="493:13" pos:end="493:37"><name pos:start="493:13" pos:end="493:21">rebalance</name> <operator pos:start="493:23" pos:end="493:23">=</operator> <name pos:start="493:25" pos:end="493:37"><name pos:start="493:25" pos:end="493:25">f</name><operator pos:start="493:26" pos:end="493:27">-&gt;</operator><name pos:start="493:28" pos:end="493:37">remaining2</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="495:13" pos:end="567:13"><if pos:start="495:13" pos:end="531:13">if <condition pos:start="495:16" pos:end="495:31">(<expr pos:start="495:17" pos:end="495:30"><name pos:start="495:17" pos:end="495:21">mbits</name> <operator pos:start="495:23" pos:end="495:24">&gt;=</operator> <name pos:start="495:26" pos:end="495:30">sbits</name></expr>)</condition> <block pos:start="495:33" pos:end="531:13">{<block_content pos:start="501:17" pos:end="529:92">

                <comment type="block" pos:start="497:17" pos:end="499:74">/* In stereo mode, we do not apply a scaling to the mid

                 * because we need the normalized mid for folding later */</comment>

                <expr_stmt pos:start="501:17" pos:end="507:64"><expr pos:start="501:17" pos:end="507:63"><name pos:start="501:17" pos:end="501:18">cm</name> <operator pos:start="501:20" pos:end="501:20">=</operator> <call pos:start="501:22" pos:end="507:63"><name pos:start="501:22" pos:end="501:40">ff_celt_encode_band</name><argument_list pos:start="501:41" pos:end="507:63">(<argument pos:start="501:42" pos:end="501:42"><expr pos:start="501:42" pos:end="501:42"><name pos:start="501:42" pos:end="501:42">f</name></expr></argument>, <argument pos:start="501:45" pos:end="501:46"><expr pos:start="501:45" pos:end="501:46"><name pos:start="501:45" pos:end="501:46">rc</name></expr></argument>, <argument pos:start="501:49" pos:end="501:52"><expr pos:start="501:49" pos:end="501:52"><name pos:start="501:49" pos:end="501:52">band</name></expr></argument>, <argument pos:start="501:55" pos:end="501:55"><expr pos:start="501:55" pos:end="501:55"><name pos:start="501:55" pos:end="501:55">X</name></expr></argument>, <argument pos:start="501:58" pos:end="501:61"><expr pos:start="501:58" pos:end="501:61"><name pos:start="501:58" pos:end="501:61">NULL</name></expr></argument>, <argument pos:start="501:64" pos:end="501:64"><expr pos:start="501:64" pos:end="501:64"><name pos:start="501:64" pos:end="501:64">N</name></expr></argument>, <argument pos:start="501:67" pos:end="501:71"><expr pos:start="501:67" pos:end="501:71"><name pos:start="501:67" pos:end="501:71">mbits</name></expr></argument>, <argument pos:start="501:74" pos:end="501:79"><expr pos:start="501:74" pos:end="501:79"><name pos:start="501:74" pos:end="501:79">blocks</name></expr></argument>,

                                         <argument pos:start="503:42" pos:end="503:48"><expr pos:start="503:42" pos:end="503:48"><name pos:start="503:42" pos:end="503:48">lowband</name></expr></argument>, <argument pos:start="503:51" pos:end="503:58"><expr pos:start="503:51" pos:end="503:58"><name pos:start="503:51" pos:end="503:58">duration</name></expr></argument>, <argument pos:start="503:61" pos:end="503:77"><expr pos:start="503:61" pos:end="503:77"><name pos:start="503:61" pos:end="503:77">next_lowband_out1</name></expr></argument>,

                                         <argument pos:start="505:42" pos:end="505:51"><expr pos:start="505:42" pos:end="505:51"><name pos:start="505:42" pos:end="505:51">next_level</name></expr></argument>, <argument pos:start="505:54" pos:end="505:85"><expr pos:start="505:54" pos:end="505:85"><ternary pos:start="505:54" pos:end="505:85"><condition pos:start="505:54" pos:end="505:65"><expr pos:start="505:54" pos:end="505:63"><name pos:start="505:54" pos:end="505:63">dualstereo</name></expr> ?</condition><then pos:start="505:67" pos:end="505:70"> <expr pos:start="505:67" pos:end="505:70"><literal type="number" pos:start="505:67" pos:end="505:70">1.0f</literal></expr> </then><else pos:start="505:72" pos:end="505:85">: <expr pos:start="505:74" pos:end="505:85"><operator pos:start="505:74" pos:end="505:74">(</operator><name pos:start="505:75" pos:end="505:78">gain</name> <operator pos:start="505:80" pos:end="505:80">*</operator> <name pos:start="505:82" pos:end="505:84">mid</name><operator pos:start="505:85" pos:end="505:85">)</operator></expr></else></ternary></expr></argument>,

                                         <argument pos:start="507:42" pos:end="507:56"><expr pos:start="507:42" pos:end="507:56"><name pos:start="507:42" pos:end="507:56">lowband_scratch</name></expr></argument>, <argument pos:start="507:59" pos:end="507:62"><expr pos:start="507:59" pos:end="507:62"><name pos:start="507:59" pos:end="507:62">fill</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="511:17" pos:end="511:64"><expr pos:start="511:17" pos:end="511:63"><name pos:start="511:17" pos:end="511:25">rebalance</name> <operator pos:start="511:27" pos:end="511:27">=</operator> <name pos:start="511:29" pos:end="511:33">mbits</name> <operator pos:start="511:35" pos:end="511:35">-</operator> <operator pos:start="511:37" pos:end="511:37">(</operator><name pos:start="511:38" pos:end="511:46">rebalance</name> <operator pos:start="511:48" pos:end="511:48">-</operator> <name pos:start="511:50" pos:end="511:62"><name pos:start="511:50" pos:end="511:50">f</name><operator pos:start="511:51" pos:end="511:52">-&gt;</operator><name pos:start="511:53" pos:end="511:62">remaining2</name></name><operator pos:start="511:63" pos:end="511:63">)</operator></expr>;</expr_stmt>

                <if_stmt pos:start="513:17" pos:end="515:50"><if pos:start="513:17" pos:end="515:50">if <condition pos:start="513:20" pos:end="513:54">(<expr pos:start="513:21" pos:end="513:53"><name pos:start="513:21" pos:end="513:29">rebalance</name> <operator pos:start="513:31" pos:end="513:31">&gt;</operator> <literal type="number" pos:start="513:33" pos:end="513:33">3</literal> <operator pos:start="513:35" pos:end="513:36">&lt;&lt;</operator> <literal type="number" pos:start="513:38" pos:end="513:38">3</literal> <operator pos:start="513:40" pos:end="513:41">&amp;&amp;</operator> <name pos:start="513:43" pos:end="513:48">itheta</name> <operator pos:start="513:50" pos:end="513:51">!=</operator> <literal type="number" pos:start="513:53" pos:end="513:53">0</literal></expr>)</condition><block type="pseudo" pos:start="515:21" pos:end="515:50"><block_content pos:start="515:21" pos:end="515:50">

                    <expr_stmt pos:start="515:21" pos:end="515:50"><expr pos:start="515:21" pos:end="515:49"><name pos:start="515:21" pos:end="515:25">sbits</name> <operator pos:start="515:27" pos:end="515:28">+=</operator> <name pos:start="515:30" pos:end="515:38">rebalance</name> <operator pos:start="515:40" pos:end="515:40">-</operator> <operator pos:start="515:42" pos:end="515:42">(</operator><literal type="number" pos:start="515:43" pos:end="515:43">3</literal> <operator pos:start="515:45" pos:end="515:46">&lt;&lt;</operator> <literal type="number" pos:start="515:48" pos:end="515:48">3</literal><operator pos:start="515:49" pos:end="515:49">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <comment type="block" pos:start="519:17" pos:end="521:61">/* For a stereo split, the high bits of fill are always zero,

                 * so no folding will be done to the side. */</comment>

                <expr_stmt pos:start="523:17" pos:end="529:92"><expr pos:start="523:17" pos:end="529:91"><name pos:start="523:17" pos:end="523:18">cm</name> <operator pos:start="523:20" pos:end="523:21">|=</operator> <call pos:start="523:23" pos:end="529:57"><name pos:start="523:23" pos:end="523:41">ff_celt_encode_band</name><argument_list pos:start="523:42" pos:end="529:57">(<argument pos:start="523:43" pos:end="523:43"><expr pos:start="523:43" pos:end="523:43"><name pos:start="523:43" pos:end="523:43">f</name></expr></argument>, <argument pos:start="523:46" pos:end="523:47"><expr pos:start="523:46" pos:end="523:47"><name pos:start="523:46" pos:end="523:47">rc</name></expr></argument>, <argument pos:start="523:50" pos:end="523:53"><expr pos:start="523:50" pos:end="523:53"><name pos:start="523:50" pos:end="523:53">band</name></expr></argument>, <argument pos:start="523:56" pos:end="523:56"><expr pos:start="523:56" pos:end="523:56"><name pos:start="523:56" pos:end="523:56">Y</name></expr></argument>, <argument pos:start="523:59" pos:end="523:62"><expr pos:start="523:59" pos:end="523:62"><name pos:start="523:59" pos:end="523:62">NULL</name></expr></argument>, <argument pos:start="523:65" pos:end="523:65"><expr pos:start="523:65" pos:end="523:65"><name pos:start="523:65" pos:end="523:65">N</name></expr></argument>, <argument pos:start="523:68" pos:end="523:72"><expr pos:start="523:68" pos:end="523:72"><name pos:start="523:68" pos:end="523:72">sbits</name></expr></argument>, <argument pos:start="523:75" pos:end="523:80"><expr pos:start="523:75" pos:end="523:80"><name pos:start="523:75" pos:end="523:80">blocks</name></expr></argument>,

                                          <argument pos:start="525:43" pos:end="525:55"><expr pos:start="525:43" pos:end="525:55"><name pos:start="525:43" pos:end="525:55">next_lowband2</name></expr></argument>, <argument pos:start="525:58" pos:end="525:65"><expr pos:start="525:58" pos:end="525:65"><name pos:start="525:58" pos:end="525:65">duration</name></expr></argument>, <argument pos:start="525:68" pos:end="525:71"><expr pos:start="525:68" pos:end="525:71"><name pos:start="525:68" pos:end="525:71">NULL</name></expr></argument>,

                                          <argument pos:start="527:43" pos:end="527:52"><expr pos:start="527:43" pos:end="527:52"><name pos:start="527:43" pos:end="527:52">next_level</name></expr></argument>, <argument pos:start="527:55" pos:end="527:65"><expr pos:start="527:55" pos:end="527:65"><name pos:start="527:55" pos:end="527:58">gain</name> <operator pos:start="527:60" pos:end="527:60">*</operator> <name pos:start="527:62" pos:end="527:65">side</name></expr></argument>, <argument pos:start="527:68" pos:end="527:71"><expr pos:start="527:68" pos:end="527:71"><name pos:start="527:68" pos:end="527:71">NULL</name></expr></argument>,

                                          <argument pos:start="529:43" pos:end="529:56"><expr pos:start="529:43" pos:end="529:56"><name pos:start="529:43" pos:end="529:46">fill</name> <operator pos:start="529:48" pos:end="529:49">&gt;&gt;</operator> <name pos:start="529:51" pos:end="529:56">blocks</name></expr></argument>)</argument_list></call> <operator pos:start="529:59" pos:end="529:60">&lt;&lt;</operator> <operator pos:start="529:62" pos:end="529:62">(</operator><operator pos:start="529:63" pos:end="529:63">(</operator><name pos:start="529:64" pos:end="529:65">B0</name> <operator pos:start="529:67" pos:end="529:68">&gt;&gt;</operator> <literal type="number" pos:start="529:70" pos:end="529:70">1</literal><operator pos:start="529:71" pos:end="529:71">)</operator> <operator pos:start="529:73" pos:end="529:73">&amp;</operator> <operator pos:start="529:75" pos:end="529:75">(</operator><name pos:start="529:76" pos:end="529:85">dualstereo</name> <operator pos:start="529:87" pos:end="529:87">-</operator> <literal type="number" pos:start="529:89" pos:end="529:89">1</literal><operator pos:start="529:90" pos:end="529:90">)</operator><operator pos:start="529:91" pos:end="529:91">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="531:15" pos:end="567:13">else <block pos:start="531:20" pos:end="567:13">{<block_content pos:start="537:17" pos:end="565:65">

                <comment type="block" pos:start="533:17" pos:end="535:61">/* For a stereo split, the high bits of fill are always zero,

                 * so no folding will be done to the side. */</comment>

                <expr_stmt pos:start="537:17" pos:end="543:91"><expr pos:start="537:17" pos:end="543:90"><name pos:start="537:17" pos:end="537:18">cm</name> <operator pos:start="537:20" pos:end="537:20">=</operator> <call pos:start="537:22" pos:end="543:56"><name pos:start="537:22" pos:end="537:40">ff_celt_encode_band</name><argument_list pos:start="537:41" pos:end="543:56">(<argument pos:start="537:42" pos:end="537:42"><expr pos:start="537:42" pos:end="537:42"><name pos:start="537:42" pos:end="537:42">f</name></expr></argument>, <argument pos:start="537:45" pos:end="537:46"><expr pos:start="537:45" pos:end="537:46"><name pos:start="537:45" pos:end="537:46">rc</name></expr></argument>, <argument pos:start="537:49" pos:end="537:52"><expr pos:start="537:49" pos:end="537:52"><name pos:start="537:49" pos:end="537:52">band</name></expr></argument>, <argument pos:start="537:55" pos:end="537:55"><expr pos:start="537:55" pos:end="537:55"><name pos:start="537:55" pos:end="537:55">Y</name></expr></argument>, <argument pos:start="537:58" pos:end="537:61"><expr pos:start="537:58" pos:end="537:61"><name pos:start="537:58" pos:end="537:61">NULL</name></expr></argument>, <argument pos:start="537:64" pos:end="537:64"><expr pos:start="537:64" pos:end="537:64"><name pos:start="537:64" pos:end="537:64">N</name></expr></argument>, <argument pos:start="537:67" pos:end="537:71"><expr pos:start="537:67" pos:end="537:71"><name pos:start="537:67" pos:end="537:71">sbits</name></expr></argument>, <argument pos:start="537:74" pos:end="537:79"><expr pos:start="537:74" pos:end="537:79"><name pos:start="537:74" pos:end="537:79">blocks</name></expr></argument>,

                                         <argument pos:start="539:42" pos:end="539:54"><expr pos:start="539:42" pos:end="539:54"><name pos:start="539:42" pos:end="539:54">next_lowband2</name></expr></argument>, <argument pos:start="539:57" pos:end="539:64"><expr pos:start="539:57" pos:end="539:64"><name pos:start="539:57" pos:end="539:64">duration</name></expr></argument>, <argument pos:start="539:67" pos:end="539:70"><expr pos:start="539:67" pos:end="539:70"><name pos:start="539:67" pos:end="539:70">NULL</name></expr></argument>,

                                         <argument pos:start="541:42" pos:end="541:51"><expr pos:start="541:42" pos:end="541:51"><name pos:start="541:42" pos:end="541:51">next_level</name></expr></argument>, <argument pos:start="541:54" pos:end="541:64"><expr pos:start="541:54" pos:end="541:64"><name pos:start="541:54" pos:end="541:57">gain</name> <operator pos:start="541:59" pos:end="541:59">*</operator> <name pos:start="541:61" pos:end="541:64">side</name></expr></argument>, <argument pos:start="541:67" pos:end="541:70"><expr pos:start="541:67" pos:end="541:70"><name pos:start="541:67" pos:end="541:70">NULL</name></expr></argument>,

                                         <argument pos:start="543:42" pos:end="543:55"><expr pos:start="543:42" pos:end="543:55"><name pos:start="543:42" pos:end="543:45">fill</name> <operator pos:start="543:47" pos:end="543:48">&gt;&gt;</operator> <name pos:start="543:50" pos:end="543:55">blocks</name></expr></argument>)</argument_list></call> <operator pos:start="543:58" pos:end="543:59">&lt;&lt;</operator> <operator pos:start="543:61" pos:end="543:61">(</operator><operator pos:start="543:62" pos:end="543:62">(</operator><name pos:start="543:63" pos:end="543:64">B0</name> <operator pos:start="543:66" pos:end="543:67">&gt;&gt;</operator> <literal type="number" pos:start="543:69" pos:end="543:69">1</literal><operator pos:start="543:70" pos:end="543:70">)</operator> <operator pos:start="543:72" pos:end="543:72">&amp;</operator> <operator pos:start="543:74" pos:end="543:74">(</operator><name pos:start="543:75" pos:end="543:84">dualstereo</name> <operator pos:start="543:86" pos:end="543:86">-</operator> <literal type="number" pos:start="543:88" pos:end="543:88">1</literal><operator pos:start="543:89" pos:end="543:89">)</operator><operator pos:start="543:90" pos:end="543:90">)</operator></expr>;</expr_stmt>



                <expr_stmt pos:start="547:17" pos:end="547:64"><expr pos:start="547:17" pos:end="547:63"><name pos:start="547:17" pos:end="547:25">rebalance</name> <operator pos:start="547:27" pos:end="547:27">=</operator> <name pos:start="547:29" pos:end="547:33">sbits</name> <operator pos:start="547:35" pos:end="547:35">-</operator> <operator pos:start="547:37" pos:end="547:37">(</operator><name pos:start="547:38" pos:end="547:46">rebalance</name> <operator pos:start="547:48" pos:end="547:48">-</operator> <name pos:start="547:50" pos:end="547:62"><name pos:start="547:50" pos:end="547:50">f</name><operator pos:start="547:51" pos:end="547:52">-&gt;</operator><name pos:start="547:53" pos:end="547:62">remaining2</name></name><operator pos:start="547:63" pos:end="547:63">)</operator></expr>;</expr_stmt>

                <if_stmt pos:start="549:17" pos:end="551:50"><if pos:start="549:17" pos:end="551:50">if <condition pos:start="549:20" pos:end="549:58">(<expr pos:start="549:21" pos:end="549:57"><name pos:start="549:21" pos:end="549:29">rebalance</name> <operator pos:start="549:31" pos:end="549:31">&gt;</operator> <literal type="number" pos:start="549:33" pos:end="549:33">3</literal> <operator pos:start="549:35" pos:end="549:36">&lt;&lt;</operator> <literal type="number" pos:start="549:38" pos:end="549:38">3</literal> <operator pos:start="549:40" pos:end="549:41">&amp;&amp;</operator> <name pos:start="549:43" pos:end="549:48">itheta</name> <operator pos:start="549:50" pos:end="549:51">!=</operator> <literal type="number" pos:start="549:53" pos:end="549:57">16384</literal></expr>)</condition><block type="pseudo" pos:start="551:21" pos:end="551:50"><block_content pos:start="551:21" pos:end="551:50">

                    <expr_stmt pos:start="551:21" pos:end="551:50"><expr pos:start="551:21" pos:end="551:49"><name pos:start="551:21" pos:end="551:25">mbits</name> <operator pos:start="551:27" pos:end="551:28">+=</operator> <name pos:start="551:30" pos:end="551:38">rebalance</name> <operator pos:start="551:40" pos:end="551:40">-</operator> <operator pos:start="551:42" pos:end="551:42">(</operator><literal type="number" pos:start="551:43" pos:end="551:43">3</literal> <operator pos:start="551:45" pos:end="551:46">&lt;&lt;</operator> <literal type="number" pos:start="551:48" pos:end="551:48">3</literal><operator pos:start="551:49" pos:end="551:49">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <comment type="block" pos:start="555:17" pos:end="557:66">/* In stereo mode, we do not apply a scaling to the mid because

                 * we need the normalized mid for folding later */</comment>

                <expr_stmt pos:start="559:17" pos:end="565:65"><expr pos:start="559:17" pos:end="565:64"><name pos:start="559:17" pos:end="559:18">cm</name> <operator pos:start="559:20" pos:end="559:21">|=</operator> <call pos:start="559:23" pos:end="565:64"><name pos:start="559:23" pos:end="559:41">ff_celt_encode_band</name><argument_list pos:start="559:42" pos:end="565:64">(<argument pos:start="559:43" pos:end="559:43"><expr pos:start="559:43" pos:end="559:43"><name pos:start="559:43" pos:end="559:43">f</name></expr></argument>, <argument pos:start="559:46" pos:end="559:47"><expr pos:start="559:46" pos:end="559:47"><name pos:start="559:46" pos:end="559:47">rc</name></expr></argument>, <argument pos:start="559:50" pos:end="559:53"><expr pos:start="559:50" pos:end="559:53"><name pos:start="559:50" pos:end="559:53">band</name></expr></argument>, <argument pos:start="559:56" pos:end="559:56"><expr pos:start="559:56" pos:end="559:56"><name pos:start="559:56" pos:end="559:56">X</name></expr></argument>, <argument pos:start="559:59" pos:end="559:62"><expr pos:start="559:59" pos:end="559:62"><name pos:start="559:59" pos:end="559:62">NULL</name></expr></argument>, <argument pos:start="559:65" pos:end="559:65"><expr pos:start="559:65" pos:end="559:65"><name pos:start="559:65" pos:end="559:65">N</name></expr></argument>, <argument pos:start="559:68" pos:end="559:72"><expr pos:start="559:68" pos:end="559:72"><name pos:start="559:68" pos:end="559:72">mbits</name></expr></argument>, <argument pos:start="559:75" pos:end="559:80"><expr pos:start="559:75" pos:end="559:80"><name pos:start="559:75" pos:end="559:80">blocks</name></expr></argument>,

                                          <argument pos:start="561:43" pos:end="561:49"><expr pos:start="561:43" pos:end="561:49"><name pos:start="561:43" pos:end="561:49">lowband</name></expr></argument>, <argument pos:start="561:52" pos:end="561:59"><expr pos:start="561:52" pos:end="561:59"><name pos:start="561:52" pos:end="561:59">duration</name></expr></argument>, <argument pos:start="561:62" pos:end="561:78"><expr pos:start="561:62" pos:end="561:78"><name pos:start="561:62" pos:end="561:78">next_lowband_out1</name></expr></argument>,

                                          <argument pos:start="563:43" pos:end="563:52"><expr pos:start="563:43" pos:end="563:52"><name pos:start="563:43" pos:end="563:52">next_level</name></expr></argument>, <argument pos:start="563:55" pos:end="563:86"><expr pos:start="563:55" pos:end="563:86"><ternary pos:start="563:55" pos:end="563:86"><condition pos:start="563:55" pos:end="563:66"><expr pos:start="563:55" pos:end="563:64"><name pos:start="563:55" pos:end="563:64">dualstereo</name></expr> ?</condition><then pos:start="563:68" pos:end="563:71"> <expr pos:start="563:68" pos:end="563:71"><literal type="number" pos:start="563:68" pos:end="563:71">1.0f</literal></expr> </then><else pos:start="563:73" pos:end="563:86">: <expr pos:start="563:75" pos:end="563:86"><operator pos:start="563:75" pos:end="563:75">(</operator><name pos:start="563:76" pos:end="563:79">gain</name> <operator pos:start="563:81" pos:end="563:81">*</operator> <name pos:start="563:83" pos:end="563:85">mid</name><operator pos:start="563:86" pos:end="563:86">)</operator></expr></else></ternary></expr></argument>,

                                          <argument pos:start="565:43" pos:end="565:57"><expr pos:start="565:43" pos:end="565:57"><name pos:start="565:43" pos:end="565:57">lowband_scratch</name></expr></argument>, <argument pos:start="565:60" pos:end="565:63"><expr pos:start="565:60" pos:end="565:63"><name pos:start="565:60" pos:end="565:63">fill</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="571:7" pos:end="607:5">else <block pos:start="571:12" pos:end="607:5">{<block_content pos:start="575:9" pos:end="605:9">

        <comment type="block" pos:start="573:9" pos:end="573:45">/* This is the basic no-split case */</comment>

        <decl_stmt pos:start="575:9" pos:end="575:56"><decl pos:start="575:9" pos:end="575:55"><type pos:start="575:9" pos:end="575:16"><name pos:start="575:9" pos:end="575:16">uint32_t</name></type> <name pos:start="575:18" pos:end="575:18">q</name>         <init pos:start="575:28" pos:end="575:55">= <expr pos:start="575:30" pos:end="575:55"><call pos:start="575:30" pos:end="575:55"><name pos:start="575:30" pos:end="575:45">celt_bits2pulses</name><argument_list pos:start="575:46" pos:end="575:55">(<argument pos:start="575:47" pos:end="575:51"><expr pos:start="575:47" pos:end="575:51"><name pos:start="575:47" pos:end="575:51">cache</name></expr></argument>, <argument pos:start="575:54" pos:end="575:54"><expr pos:start="575:54" pos:end="575:54"><name pos:start="575:54" pos:end="575:54">b</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="577:9" pos:end="577:56"><decl pos:start="577:9" pos:end="577:55"><type pos:start="577:9" pos:end="577:16"><name pos:start="577:9" pos:end="577:16">uint32_t</name></type> <name pos:start="577:18" pos:end="577:26">curr_bits</name> <init pos:start="577:28" pos:end="577:55">= <expr pos:start="577:30" pos:end="577:55"><call pos:start="577:30" pos:end="577:55"><name pos:start="577:30" pos:end="577:45">celt_pulses2bits</name><argument_list pos:start="577:46" pos:end="577:55">(<argument pos:start="577:47" pos:end="577:51"><expr pos:start="577:47" pos:end="577:51"><name pos:start="577:47" pos:end="577:51">cache</name></expr></argument>, <argument pos:start="577:54" pos:end="577:54"><expr pos:start="577:54" pos:end="577:54"><name pos:start="577:54" pos:end="577:54">q</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="579:9" pos:end="579:35"><expr pos:start="579:9" pos:end="579:34"><name pos:start="579:9" pos:end="579:21"><name pos:start="579:9" pos:end="579:9">f</name><operator pos:start="579:10" pos:end="579:11">-&gt;</operator><name pos:start="579:12" pos:end="579:21">remaining2</name></name> <operator pos:start="579:23" pos:end="579:24">-=</operator> <name pos:start="579:26" pos:end="579:34">curr_bits</name></expr>;</expr_stmt>



        <comment type="block" pos:start="583:9" pos:end="583:50">/* Ensures we can never bust the budget */</comment>

        <while pos:start="585:9" pos:end="593:9">while <condition pos:start="585:15" pos:end="585:42">(<expr pos:start="585:16" pos:end="585:41"><name pos:start="585:16" pos:end="585:28"><name pos:start="585:16" pos:end="585:16">f</name><operator pos:start="585:17" pos:end="585:18">-&gt;</operator><name pos:start="585:19" pos:end="585:28">remaining2</name></name> <operator pos:start="585:30" pos:end="585:30">&lt;</operator> <literal type="number" pos:start="585:32" pos:end="585:32">0</literal> <operator pos:start="585:34" pos:end="585:35">&amp;&amp;</operator> <name pos:start="585:37" pos:end="585:37">q</name> <operator pos:start="585:39" pos:end="585:39">&gt;</operator> <literal type="number" pos:start="585:41" pos:end="585:41">0</literal></expr>)</condition> <block pos:start="585:44" pos:end="593:9">{<block_content pos:start="587:13" pos:end="591:39">

            <expr_stmt pos:start="587:13" pos:end="587:39"><expr pos:start="587:13" pos:end="587:38"><name pos:start="587:13" pos:end="587:25"><name pos:start="587:13" pos:end="587:13">f</name><operator pos:start="587:14" pos:end="587:15">-&gt;</operator><name pos:start="587:16" pos:end="587:25">remaining2</name></name> <operator pos:start="587:27" pos:end="587:28">+=</operator> <name pos:start="587:30" pos:end="587:38">curr_bits</name></expr>;</expr_stmt>

            <expr_stmt pos:start="589:13" pos:end="589:58"><expr pos:start="589:13" pos:end="589:57"><name pos:start="589:13" pos:end="589:21">curr_bits</name>      <operator pos:start="589:28" pos:end="589:28">=</operator> <call pos:start="589:30" pos:end="589:57"><name pos:start="589:30" pos:end="589:45">celt_pulses2bits</name><argument_list pos:start="589:46" pos:end="589:57">(<argument pos:start="589:47" pos:end="589:51"><expr pos:start="589:47" pos:end="589:51"><name pos:start="589:47" pos:end="589:51">cache</name></expr></argument>, <argument pos:start="589:54" pos:end="589:56"><expr pos:start="589:54" pos:end="589:56"><operator pos:start="589:54" pos:end="589:55">--</operator><name pos:start="589:56" pos:end="589:56">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="591:13" pos:end="591:39"><expr pos:start="591:13" pos:end="591:38"><name pos:start="591:13" pos:end="591:25"><name pos:start="591:13" pos:end="591:13">f</name><operator pos:start="591:14" pos:end="591:15">-&gt;</operator><name pos:start="591:16" pos:end="591:25">remaining2</name></name> <operator pos:start="591:27" pos:end="591:28">-=</operator> <name pos:start="591:30" pos:end="591:38">curr_bits</name></expr>;</expr_stmt>

        </block_content>}</block></while>



        <if_stmt pos:start="597:9" pos:end="605:9"><if pos:start="597:9" pos:end="605:9">if <condition pos:start="597:12" pos:end="597:19">(<expr pos:start="597:13" pos:end="597:18"><name pos:start="597:13" pos:end="597:13">q</name> <operator pos:start="597:15" pos:end="597:16">!=</operator> <literal type="number" pos:start="597:18" pos:end="597:18">0</literal></expr>)</condition> <block pos:start="597:21" pos:end="605:9">{<block_content pos:start="601:13" pos:end="603:57">

            <comment type="block" pos:start="599:13" pos:end="599:52">/* Finally do the actual quantization */</comment>

            <expr_stmt pos:start="601:13" pos:end="603:57"><expr pos:start="601:13" pos:end="603:56"><name pos:start="601:13" pos:end="601:14">cm</name> <operator pos:start="601:16" pos:end="601:16">=</operator> <call pos:start="601:18" pos:end="603:56"><name pos:start="601:18" pos:end="601:31">celt_alg_quant</name><argument_list pos:start="601:32" pos:end="603:56">(<argument pos:start="601:33" pos:end="601:34"><expr pos:start="601:33" pos:end="601:34"><name pos:start="601:33" pos:end="601:34">rc</name></expr></argument>, <argument pos:start="601:37" pos:end="601:37"><expr pos:start="601:37" pos:end="601:37"><name pos:start="601:37" pos:end="601:37">X</name></expr></argument>, <argument pos:start="601:40" pos:end="601:40"><expr pos:start="601:40" pos:end="601:40"><name pos:start="601:40" pos:end="601:40">N</name></expr></argument>, <argument pos:start="601:43" pos:end="601:87"><expr pos:start="601:43" pos:end="601:87"><ternary pos:start="601:43" pos:end="601:87"><condition pos:start="601:43" pos:end="601:51"><expr pos:start="601:43" pos:end="601:49"><operator pos:start="601:43" pos:end="601:43">(</operator><name pos:start="601:44" pos:end="601:44">q</name> <operator pos:start="601:46" pos:end="601:46">&lt;</operator> <literal type="number" pos:start="601:48" pos:end="601:48">8</literal><operator pos:start="601:49" pos:end="601:49">)</operator></expr> ?</condition><then pos:start="601:53" pos:end="601:53"> <expr pos:start="601:53" pos:end="601:53"><name pos:start="601:53" pos:end="601:53">q</name></expr> </then><else pos:start="601:55" pos:end="601:87">: <expr pos:start="601:57" pos:end="601:87"><operator pos:start="601:57" pos:end="601:57">(</operator><literal type="number" pos:start="601:58" pos:end="601:60">8</literal> <operator pos:start="601:60" pos:end="601:60">+</operator> <operator pos:start="601:62" pos:end="601:62">(</operator><name pos:start="601:63" pos:end="601:63">q</name> <operator pos:start="601:65" pos:end="601:65">&amp;</operator> <literal type="number" pos:start="601:67" pos:end="601:67">7</literal><operator pos:start="601:68" pos:end="601:68">)</operator><operator pos:start="601:69" pos:end="601:69">)</operator> <operator pos:start="601:71" pos:end="601:72">&lt;&lt;</operator> <operator pos:start="601:74" pos:end="601:74">(</operator><operator pos:start="601:75" pos:end="601:75">(</operator><name pos:start="601:76" pos:end="601:76">q</name> <operator pos:start="601:78" pos:end="601:79">&gt;&gt;</operator> <literal type="number" pos:start="601:81" pos:end="601:81">3</literal><operator pos:start="601:82" pos:end="601:82">)</operator> <operator pos:start="601:84" pos:end="601:84">-</operator> <literal type="number" pos:start="601:86" pos:end="601:86">1</literal><operator pos:start="601:87" pos:end="601:87">)</operator></expr></else></ternary></expr></argument>,

                                <argument pos:start="603:33" pos:end="603:41"><expr pos:start="603:33" pos:end="603:41"><name pos:start="603:33" pos:end="603:41"><name pos:start="603:33" pos:end="603:33">f</name><operator pos:start="603:34" pos:end="603:35">-&gt;</operator><name pos:start="603:36" pos:end="603:41">spread</name></name></expr></argument>, <argument pos:start="603:44" pos:end="603:49"><expr pos:start="603:44" pos:end="603:49"><name pos:start="603:44" pos:end="603:49">blocks</name></expr></argument>, <argument pos:start="603:52" pos:end="603:55"><expr pos:start="603:52" pos:end="603:55"><name pos:start="603:52" pos:end="603:55">gain</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="611:5" pos:end="611:14">return <expr pos:start="611:12" pos:end="611:13"><name pos:start="611:12" pos:end="611:13">cm</name></expr>;</return>

</block_content>}</block></function>
</unit>
