<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15554.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:40">mkv_write_native_codecprivate</name><parameter_list pos:start="1:41" pos:end="5:61">(<parameter pos:start="1:42" pos:end="1:59"><decl pos:start="1:42" pos:end="1:59"><type pos:start="1:42" pos:end="1:59"><name pos:start="1:42" pos:end="1:56">AVFormatContext</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:59">s</name></decl></parameter>,

                                         <parameter pos:start="3:42" pos:end="3:63"><decl pos:start="3:42" pos:end="3:63"><type pos:start="3:42" pos:end="3:63"><name pos:start="3:42" pos:end="3:58">AVCodecParameters</name> <modifier pos:start="3:60" pos:end="3:60">*</modifier></type><name pos:start="3:61" pos:end="3:63">par</name></decl></parameter>,

                                         <parameter pos:start="5:42" pos:end="5:60"><decl pos:start="5:42" pos:end="5:60"><type pos:start="5:42" pos:end="5:60"><name pos:start="5:42" pos:end="5:52">AVIOContext</name> <modifier pos:start="5:54" pos:end="5:54">*</modifier></type><name pos:start="5:55" pos:end="5:60">dyn_cp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="77:1">{<block_content pos:start="9:5" pos:end="75:13">

    <switch pos:start="9:5" pos:end="71:5">switch <condition pos:start="9:12" pos:end="9:26">(<expr pos:start="9:13" pos:end="9:25"><name pos:start="9:13" pos:end="9:25"><name pos:start="9:13" pos:end="9:15">par</name><operator pos:start="9:16" pos:end="9:17">-&gt;</operator><name pos:start="9:18" pos:end="9:25">codec_id</name></name></expr>)</condition> <block pos:start="9:28" pos:end="71:5">{<block_content pos:start="11:5" pos:end="69:68">

    <case pos:start="11:5" pos:end="11:28">case <expr pos:start="11:10" pos:end="11:27"><name pos:start="11:10" pos:end="11:27">AV_CODEC_ID_VORBIS</name></expr>:</case>

    <case pos:start="13:5" pos:end="13:28">case <expr pos:start="13:10" pos:end="13:27"><name pos:start="13:10" pos:end="13:27">AV_CODEC_ID_THEORA</name></expr>:</case>

        <return pos:start="15:9" pos:end="15:50">return <expr pos:start="15:16" pos:end="15:49"><call pos:start="15:16" pos:end="15:49"><name pos:start="15:16" pos:end="15:33">put_xiph_codecpriv</name><argument_list pos:start="15:34" pos:end="15:49">(<argument pos:start="15:35" pos:end="15:35"><expr pos:start="15:35" pos:end="15:35"><name pos:start="15:35" pos:end="15:35">s</name></expr></argument>, <argument pos:start="15:38" pos:end="15:43"><expr pos:start="15:38" pos:end="15:43"><name pos:start="15:38" pos:end="15:43">dyn_cp</name></expr></argument>, <argument pos:start="15:46" pos:end="15:48"><expr pos:start="15:46" pos:end="15:48"><name pos:start="15:46" pos:end="15:48">par</name></expr></argument>)</argument_list></call></expr>;</return>

    <case pos:start="17:5" pos:end="17:26">case <expr pos:start="17:10" pos:end="17:25"><name pos:start="17:10" pos:end="17:25">AV_CODEC_ID_FLAC</name></expr>:</case>

        <return pos:start="19:9" pos:end="19:50">return <expr pos:start="19:16" pos:end="19:49"><call pos:start="19:16" pos:end="19:49"><name pos:start="19:16" pos:end="19:33">put_flac_codecpriv</name><argument_list pos:start="19:34" pos:end="19:49">(<argument pos:start="19:35" pos:end="19:35"><expr pos:start="19:35" pos:end="19:35"><name pos:start="19:35" pos:end="19:35">s</name></expr></argument>, <argument pos:start="19:38" pos:end="19:43"><expr pos:start="19:38" pos:end="19:43"><name pos:start="19:38" pos:end="19:43">dyn_cp</name></expr></argument>, <argument pos:start="19:46" pos:end="19:48"><expr pos:start="19:46" pos:end="19:48"><name pos:start="19:46" pos:end="19:48">par</name></expr></argument>)</argument_list></call></expr>;</return>

    <case pos:start="21:5" pos:end="21:29">case <expr pos:start="21:10" pos:end="21:28"><name pos:start="21:10" pos:end="21:28">AV_CODEC_ID_WAVPACK</name></expr>:</case>

        <return pos:start="23:9" pos:end="23:45">return <expr pos:start="23:16" pos:end="23:44"><call pos:start="23:16" pos:end="23:44"><name pos:start="23:16" pos:end="23:31">put_wv_codecpriv</name><argument_list pos:start="23:32" pos:end="23:44">(<argument pos:start="23:33" pos:end="23:38"><expr pos:start="23:33" pos:end="23:38"><name pos:start="23:33" pos:end="23:38">dyn_cp</name></expr></argument>, <argument pos:start="23:41" pos:end="23:43"><expr pos:start="23:41" pos:end="23:43"><name pos:start="23:41" pos:end="23:43">par</name></expr></argument>)</argument_list></call></expr>;</return>

    <case pos:start="25:5" pos:end="25:26">case <expr pos:start="25:10" pos:end="25:25"><name pos:start="25:10" pos:end="25:25">AV_CODEC_ID_H264</name></expr>:</case>

        <return pos:start="27:9" pos:end="29:55">return <expr pos:start="27:16" pos:end="29:54"><call pos:start="27:16" pos:end="29:54"><name pos:start="27:16" pos:end="27:33">ff_isom_write_avcc</name><argument_list pos:start="27:34" pos:end="29:54">(<argument pos:start="27:35" pos:end="27:40"><expr pos:start="27:35" pos:end="27:40"><name pos:start="27:35" pos:end="27:40">dyn_cp</name></expr></argument>, <argument pos:start="27:43" pos:end="27:56"><expr pos:start="27:43" pos:end="27:56"><name pos:start="27:43" pos:end="27:56"><name pos:start="27:43" pos:end="27:45">par</name><operator pos:start="27:46" pos:end="27:47">-&gt;</operator><name pos:start="27:48" pos:end="27:56">extradata</name></name></expr></argument>,

                                  <argument pos:start="29:35" pos:end="29:53"><expr pos:start="29:35" pos:end="29:53"><name pos:start="29:35" pos:end="29:53"><name pos:start="29:35" pos:end="29:37">par</name><operator pos:start="29:38" pos:end="29:39">-&gt;</operator><name pos:start="29:40" pos:end="29:53">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</return>

    <case pos:start="31:5" pos:end="31:26">case <expr pos:start="31:10" pos:end="31:25"><name pos:start="31:10" pos:end="31:25">AV_CODEC_ID_HEVC</name></expr>:</case>

        <expr_stmt pos:start="33:9" pos:end="35:51"><expr pos:start="33:9" pos:end="35:50"><call pos:start="33:9" pos:end="35:50"><name pos:start="33:9" pos:end="33:26">ff_isom_write_hvcc</name><argument_list pos:start="33:27" pos:end="35:50">(<argument pos:start="33:28" pos:end="33:33"><expr pos:start="33:28" pos:end="33:33"><name pos:start="33:28" pos:end="33:33">dyn_cp</name></expr></argument>, <argument pos:start="33:36" pos:end="33:49"><expr pos:start="33:36" pos:end="33:49"><name pos:start="33:36" pos:end="33:49"><name pos:start="33:36" pos:end="33:38">par</name><operator pos:start="33:39" pos:end="33:40">-&gt;</operator><name pos:start="33:41" pos:end="33:49">extradata</name></name></expr></argument>,

                           <argument pos:start="35:28" pos:end="35:46"><expr pos:start="35:28" pos:end="35:46"><name pos:start="35:28" pos:end="35:46"><name pos:start="35:28" pos:end="35:30">par</name><operator pos:start="35:31" pos:end="35:32">-&gt;</operator><name pos:start="35:33" pos:end="35:46">extradata_size</name></name></expr></argument>, <argument pos:start="35:49" pos:end="35:49"><expr pos:start="35:49" pos:end="35:49"><literal type="number" pos:start="35:49" pos:end="35:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:17">return <expr pos:start="37:16" pos:end="37:16"><literal type="number" pos:start="37:16" pos:end="37:16">0</literal></expr>;</return>

    <case pos:start="39:5" pos:end="39:26">case <expr pos:start="39:10" pos:end="39:25"><name pos:start="39:10" pos:end="39:25">AV_CODEC_ID_ALAC</name></expr>:</case>

        <if_stmt pos:start="41:9" pos:end="55:49"><if pos:start="41:9" pos:end="51:9">if <condition pos:start="41:12" pos:end="41:37">(<expr pos:start="41:13" pos:end="41:36"><name pos:start="41:13" pos:end="41:31"><name pos:start="41:13" pos:end="41:15">par</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:31">extradata_size</name></name> <operator pos:start="41:33" pos:end="41:33">&lt;</operator> <literal type="number" pos:start="41:35" pos:end="41:36">36</literal></expr>)</condition> <block pos:start="41:39" pos:end="51:9">{<block_content pos:start="43:13" pos:end="49:39">

            <expr_stmt pos:start="43:13" pos:end="47:38"><expr pos:start="43:13" pos:end="47:37"><call pos:start="43:13" pos:end="47:37"><name pos:start="43:13" pos:end="43:18">av_log</name><argument_list pos:start="43:19" pos:end="47:37">(<argument pos:start="43:20" pos:end="43:20"><expr pos:start="43:20" pos:end="43:20"><name pos:start="43:20" pos:end="43:20">s</name></expr></argument>, <argument pos:start="43:23" pos:end="43:34"><expr pos:start="43:23" pos:end="43:34"><name pos:start="43:23" pos:end="43:34">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="45:20" pos:end="47:36"><expr pos:start="45:20" pos:end="47:36"><literal type="string" pos:start="45:20" pos:end="45:69">"Invalid extradata found, ALAC expects a 36-byte "</literal>

                   <literal type="string" pos:start="47:20" pos:end="47:36">"QuickTime atom."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="49:13" pos:end="49:39">return <expr pos:start="49:20" pos:end="49:38"><name pos:start="49:20" pos:end="49:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if> <else pos:start="51:11" pos:end="55:49">else<block type="pseudo" pos:start="53:13" pos:end="55:49"><block_content pos:start="53:13" pos:end="55:49">

            <expr_stmt pos:start="53:13" pos:end="55:49"><expr pos:start="53:13" pos:end="55:48"><call pos:start="53:13" pos:end="55:48"><name pos:start="53:13" pos:end="53:22">avio_write</name><argument_list pos:start="53:23" pos:end="55:48">(<argument pos:start="53:24" pos:end="53:29"><expr pos:start="53:24" pos:end="53:29"><name pos:start="53:24" pos:end="53:29">dyn_cp</name></expr></argument>, <argument pos:start="53:32" pos:end="53:50"><expr pos:start="53:32" pos:end="53:50"><name pos:start="53:32" pos:end="53:45"><name pos:start="53:32" pos:end="53:34">par</name><operator pos:start="53:35" pos:end="53:36">-&gt;</operator><name pos:start="53:37" pos:end="53:45">extradata</name></name> <operator pos:start="53:47" pos:end="53:47">+</operator> <literal type="number" pos:start="53:49" pos:end="53:50">12</literal></expr></argument>,

                       <argument pos:start="55:24" pos:end="55:47"><expr pos:start="55:24" pos:end="55:47"><name pos:start="55:24" pos:end="55:42"><name pos:start="55:24" pos:end="55:26">par</name><operator pos:start="55:27" pos:end="55:28">-&gt;</operator><name pos:start="55:29" pos:end="55:42">extradata_size</name></name> <operator pos:start="55:44" pos:end="55:44">-</operator> <literal type="number" pos:start="55:46" pos:end="55:47">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <break pos:start="57:9" pos:end="57:14">break;</break>

    <default pos:start="59:5" pos:end="59:12">default:</default>

        <if_stmt pos:start="61:9" pos:end="69:68"><if pos:start="61:9" pos:end="67:9">if <condition pos:start="61:12" pos:end="63:90">(<expr pos:start="61:13" pos:end="63:89"><name pos:start="61:13" pos:end="61:25"><name pos:start="61:13" pos:end="61:15">par</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:25">codec_id</name></name> <operator pos:start="61:27" pos:end="61:28">==</operator> <name pos:start="61:30" pos:end="61:47">AV_CODEC_ID_PRORES</name> <operator pos:start="61:49" pos:end="61:50">&amp;&amp;</operator>

            <call pos:start="63:13" pos:end="63:67"><name pos:start="63:13" pos:end="63:27">ff_codec_get_id</name><argument_list pos:start="63:28" pos:end="63:67">(<argument pos:start="63:29" pos:end="63:50"><expr pos:start="63:29" pos:end="63:50"><name pos:start="63:29" pos:end="63:50">ff_codec_movvideo_tags</name></expr></argument>, <argument pos:start="63:53" pos:end="63:66"><expr pos:start="63:53" pos:end="63:66"><name pos:start="63:53" pos:end="63:66"><name pos:start="63:53" pos:end="63:55">par</name><operator pos:start="63:56" pos:end="63:57">-&gt;</operator><name pos:start="63:58" pos:end="63:66">codec_tag</name></name></expr></argument>)</argument_list></call> <operator pos:start="63:69" pos:end="63:70">==</operator> <name pos:start="63:72" pos:end="63:89">AV_CODEC_ID_PRORES</name></expr>)</condition> <block pos:start="63:92" pos:end="67:9">{<block_content pos:start="65:13" pos:end="65:46">

            <expr_stmt pos:start="65:13" pos:end="65:46"><expr pos:start="65:13" pos:end="65:45"><call pos:start="65:13" pos:end="65:45"><name pos:start="65:13" pos:end="65:21">avio_wl32</name><argument_list pos:start="65:22" pos:end="65:45">(<argument pos:start="65:23" pos:end="65:28"><expr pos:start="65:23" pos:end="65:28"><name pos:start="65:23" pos:end="65:28">dyn_cp</name></expr></argument>, <argument pos:start="65:31" pos:end="65:44"><expr pos:start="65:31" pos:end="65:44"><name pos:start="65:31" pos:end="65:44"><name pos:start="65:31" pos:end="65:33">par</name><operator pos:start="65:34" pos:end="65:35">-&gt;</operator><name pos:start="65:36" pos:end="65:44">codec_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="67:11" pos:end="69:68">else if <condition pos:start="67:19" pos:end="67:75">(<expr pos:start="67:20" pos:end="67:74"><name pos:start="67:20" pos:end="67:38"><name pos:start="67:20" pos:end="67:22">par</name><operator pos:start="67:23" pos:end="67:24">-&gt;</operator><name pos:start="67:25" pos:end="67:38">extradata_size</name></name> <operator pos:start="67:40" pos:end="67:41">&amp;&amp;</operator> <name pos:start="67:43" pos:end="67:55"><name pos:start="67:43" pos:end="67:45">par</name><operator pos:start="67:46" pos:end="67:47">-&gt;</operator><name pos:start="67:48" pos:end="67:55">codec_id</name></name> <operator pos:start="67:57" pos:end="67:58">!=</operator> <name pos:start="67:60" pos:end="67:74">AV_CODEC_ID_TTA</name></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:68"><block_content pos:start="69:13" pos:end="69:68">

            <expr_stmt pos:start="69:13" pos:end="69:68"><expr pos:start="69:13" pos:end="69:67"><call pos:start="69:13" pos:end="69:67"><name pos:start="69:13" pos:end="69:22">avio_write</name><argument_list pos:start="69:23" pos:end="69:67">(<argument pos:start="69:24" pos:end="69:29"><expr pos:start="69:24" pos:end="69:29"><name pos:start="69:24" pos:end="69:29">dyn_cp</name></expr></argument>, <argument pos:start="69:32" pos:end="69:45"><expr pos:start="69:32" pos:end="69:45"><name pos:start="69:32" pos:end="69:45"><name pos:start="69:32" pos:end="69:34">par</name><operator pos:start="69:35" pos:end="69:36">-&gt;</operator><name pos:start="69:37" pos:end="69:45">extradata</name></name></expr></argument>, <argument pos:start="69:48" pos:end="69:66"><expr pos:start="69:48" pos:end="69:66"><name pos:start="69:48" pos:end="69:66"><name pos:start="69:48" pos:end="69:50">par</name><operator pos:start="69:51" pos:end="69:52">-&gt;</operator><name pos:start="69:53" pos:end="69:66">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></switch>



    <return pos:start="75:5" pos:end="75:13">return <expr pos:start="75:12" pos:end="75:12"><literal type="number" pos:start="75:12" pos:end="75:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
