<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15355.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:39">nvenc_setup_surfaces</name><parameter_list pos:start="1:40" pos:end="1:62">(<parameter pos:start="1:41" pos:end="1:61"><decl pos:start="1:41" pos:end="1:61"><type pos:start="1:41" pos:end="1:56"><name pos:start="1:41" pos:end="1:54">AVCodecContext</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:61">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:5" pos:end="81:13">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">NvencContext</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:21">ctx</name> <init pos:start="5:23" pos:end="5:40">= <expr pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:29">avctx</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:14">res</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:79"><expr pos:start="11:5" pos:end="11:78"><name pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:7">ctx</name><operator pos:start="11:8" pos:end="11:9">-&gt;</operator><name pos:start="11:10" pos:end="11:17">surfaces</name></name> <operator pos:start="11:19" pos:end="11:19">=</operator> <call pos:start="11:21" pos:end="11:78"><name pos:start="11:21" pos:end="11:36">av_mallocz_array</name><argument_list pos:start="11:37" pos:end="11:78">(<argument pos:start="11:38" pos:end="11:53"><expr pos:start="11:38" pos:end="11:53"><name pos:start="11:38" pos:end="11:53"><name pos:start="11:38" pos:end="11:40">ctx</name><operator pos:start="11:41" pos:end="11:42">-&gt;</operator><name pos:start="11:43" pos:end="11:53">nb_surfaces</name></name></expr></argument>, <argument pos:start="11:56" pos:end="11:77"><expr pos:start="11:56" pos:end="11:77"><sizeof pos:start="11:56" pos:end="11:77">sizeof<argument_list pos:start="11:62" pos:end="11:77">(<argument pos:start="11:63" pos:end="11:76"><expr pos:start="11:63" pos:end="11:76"><operator pos:start="11:63" pos:end="11:63">*</operator><name pos:start="11:64" pos:end="11:76"><name pos:start="11:64" pos:end="11:66">ctx</name><operator pos:start="11:67" pos:end="11:68">-&gt;</operator><name pos:start="11:69" pos:end="11:76">surfaces</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="15:31"><if pos:start="13:5" pos:end="15:31">if <condition pos:start="13:8" pos:end="13:23">(<expr pos:start="13:9" pos:end="13:22"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:22"><name pos:start="13:10" pos:end="13:12">ctx</name><operator pos:start="13:13" pos:end="13:14">-&gt;</operator><name pos:start="13:15" pos:end="13:22">surfaces</name></name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:31"><block_content pos:start="15:9" pos:end="15:31">

        <return pos:start="15:9" pos:end="15:31">return <expr pos:start="15:16" pos:end="15:30"><call pos:start="15:16" pos:end="15:30"><name pos:start="15:16" pos:end="15:22">AVERROR</name><argument_list pos:start="15:23" pos:end="15:30">(<argument pos:start="15:24" pos:end="15:29"><expr pos:start="15:24" pos:end="15:29"><name pos:start="15:24" pos:end="15:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:76"><expr pos:start="19:5" pos:end="19:75"><name pos:start="19:5" pos:end="19:23"><name pos:start="19:5" pos:end="19:7">ctx</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:23">timestamp_list</name></name> <operator pos:start="19:25" pos:end="19:25">=</operator> <call pos:start="19:27" pos:end="19:75"><name pos:start="19:27" pos:end="19:39">av_fifo_alloc</name><argument_list pos:start="19:40" pos:end="19:75">(<argument pos:start="19:41" pos:end="19:74"><expr pos:start="19:41" pos:end="19:74"><name pos:start="19:41" pos:end="19:56"><name pos:start="19:41" pos:end="19:43">ctx</name><operator pos:start="19:44" pos:end="19:45">-&gt;</operator><name pos:start="19:46" pos:end="19:56">nb_surfaces</name></name> <operator pos:start="19:58" pos:end="19:58">*</operator> <sizeof pos:start="19:60" pos:end="19:74">sizeof<argument_list pos:start="19:66" pos:end="19:74">(<argument pos:start="19:67" pos:end="19:73"><expr pos:start="19:67" pos:end="19:73"><name pos:start="19:67" pos:end="19:73">int64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:31"><if pos:start="21:5" pos:end="23:31">if <condition pos:start="21:8" pos:end="21:29">(<expr pos:start="21:9" pos:end="21:28"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:28"><name pos:start="21:10" pos:end="21:12">ctx</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:28">timestamp_list</name></name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:31"><block_content pos:start="23:9" pos:end="23:31">

        <return pos:start="23:9" pos:end="23:31">return <expr pos:start="23:16" pos:end="23:30"><call pos:start="23:16" pos:end="23:30"><name pos:start="23:16" pos:end="23:22">AVERROR</name><argument_list pos:start="23:23" pos:end="23:30">(<argument pos:start="23:24" pos:end="23:29"><expr pos:start="23:24" pos:end="23:29"><name pos:start="23:24" pos:end="23:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:88"><expr pos:start="27:5" pos:end="27:87"><name pos:start="27:5" pos:end="27:29"><name pos:start="27:5" pos:end="27:7">ctx</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:29">unused_surface_queue</name></name> <operator pos:start="27:31" pos:end="27:31">=</operator> <call pos:start="27:33" pos:end="27:87"><name pos:start="27:33" pos:end="27:45">av_fifo_alloc</name><argument_list pos:start="27:46" pos:end="27:87">(<argument pos:start="27:47" pos:end="27:86"><expr pos:start="27:47" pos:end="27:86"><name pos:start="27:47" pos:end="27:62"><name pos:start="27:47" pos:end="27:49">ctx</name><operator pos:start="27:50" pos:end="27:51">-&gt;</operator><name pos:start="27:52" pos:end="27:62">nb_surfaces</name></name> <operator pos:start="27:64" pos:end="27:64">*</operator> <sizeof pos:start="27:66" pos:end="27:86">sizeof<argument_list pos:start="27:72" pos:end="27:86">(<argument pos:start="27:73" pos:end="27:85"><expr pos:start="27:73" pos:end="27:85"><name pos:start="27:73" pos:end="27:84">NvencSurface</name><operator pos:start="27:85" pos:end="27:85">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="31:31"><if pos:start="29:5" pos:end="31:31">if <condition pos:start="29:8" pos:end="29:35">(<expr pos:start="29:9" pos:end="29:34"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:34"><name pos:start="29:10" pos:end="29:12">ctx</name><operator pos:start="29:13" pos:end="29:14">-&gt;</operator><name pos:start="29:15" pos:end="29:34">unused_surface_queue</name></name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:31"><block_content pos:start="31:9" pos:end="31:31">

        <return pos:start="31:9" pos:end="31:31">return <expr pos:start="31:16" pos:end="31:30"><call pos:start="31:16" pos:end="31:30"><name pos:start="31:16" pos:end="31:22">AVERROR</name><argument_list pos:start="31:23" pos:end="31:30">(<argument pos:start="31:24" pos:end="31:29"><expr pos:start="31:24" pos:end="31:29"><name pos:start="31:24" pos:end="31:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:88"><expr pos:start="35:5" pos:end="35:87"><name pos:start="35:5" pos:end="35:29"><name pos:start="35:5" pos:end="35:7">ctx</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:29">output_surface_queue</name></name> <operator pos:start="35:31" pos:end="35:31">=</operator> <call pos:start="35:33" pos:end="35:87"><name pos:start="35:33" pos:end="35:45">av_fifo_alloc</name><argument_list pos:start="35:46" pos:end="35:87">(<argument pos:start="35:47" pos:end="35:86"><expr pos:start="35:47" pos:end="35:86"><name pos:start="35:47" pos:end="35:62"><name pos:start="35:47" pos:end="35:49">ctx</name><operator pos:start="35:50" pos:end="35:51">-&gt;</operator><name pos:start="35:52" pos:end="35:62">nb_surfaces</name></name> <operator pos:start="35:64" pos:end="35:64">*</operator> <sizeof pos:start="35:66" pos:end="35:86">sizeof<argument_list pos:start="35:72" pos:end="35:86">(<argument pos:start="35:73" pos:end="35:85"><expr pos:start="35:73" pos:end="35:85"><name pos:start="35:73" pos:end="35:84">NvencSurface</name><operator pos:start="35:85" pos:end="35:85">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="39:31"><if pos:start="37:5" pos:end="39:31">if <condition pos:start="37:8" pos:end="37:35">(<expr pos:start="37:9" pos:end="37:34"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:34"><name pos:start="37:10" pos:end="37:12">ctx</name><operator pos:start="37:13" pos:end="37:14">-&gt;</operator><name pos:start="37:15" pos:end="37:34">output_surface_queue</name></name></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:31"><block_content pos:start="39:9" pos:end="39:31">

        <return pos:start="39:9" pos:end="39:31">return <expr pos:start="39:16" pos:end="39:30"><call pos:start="39:16" pos:end="39:30"><name pos:start="39:16" pos:end="39:22">AVERROR</name><argument_list pos:start="39:23" pos:end="39:30">(<argument pos:start="39:24" pos:end="39:29"><expr pos:start="39:24" pos:end="39:29"><name pos:start="39:24" pos:end="39:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:94"><expr pos:start="41:5" pos:end="41:93"><name pos:start="41:5" pos:end="41:35"><name pos:start="41:5" pos:end="41:7">ctx</name><operator pos:start="41:8" pos:end="41:9">-&gt;</operator><name pos:start="41:10" pos:end="41:35">output_surface_ready_queue</name></name> <operator pos:start="41:37" pos:end="41:37">=</operator> <call pos:start="41:39" pos:end="41:93"><name pos:start="41:39" pos:end="41:51">av_fifo_alloc</name><argument_list pos:start="41:52" pos:end="41:93">(<argument pos:start="41:53" pos:end="41:92"><expr pos:start="41:53" pos:end="41:92"><name pos:start="41:53" pos:end="41:68"><name pos:start="41:53" pos:end="41:55">ctx</name><operator pos:start="41:56" pos:end="41:57">-&gt;</operator><name pos:start="41:58" pos:end="41:68">nb_surfaces</name></name> <operator pos:start="41:70" pos:end="41:70">*</operator> <sizeof pos:start="41:72" pos:end="41:92">sizeof<argument_list pos:start="41:78" pos:end="41:92">(<argument pos:start="41:79" pos:end="41:91"><expr pos:start="41:79" pos:end="41:91"><name pos:start="41:79" pos:end="41:90">NvencSurface</name><operator pos:start="41:91" pos:end="41:91">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="45:31"><if pos:start="43:5" pos:end="45:31">if <condition pos:start="43:8" pos:end="43:41">(<expr pos:start="43:9" pos:end="43:40"><operator pos:start="43:9" pos:end="43:9">!</operator><name pos:start="43:10" pos:end="43:40"><name pos:start="43:10" pos:end="43:12">ctx</name><operator pos:start="43:13" pos:end="43:14">-&gt;</operator><name pos:start="43:15" pos:end="43:40">output_surface_ready_queue</name></name></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:31"><block_content pos:start="45:9" pos:end="45:31">

        <return pos:start="45:9" pos:end="45:31">return <expr pos:start="45:16" pos:end="45:30"><call pos:start="45:16" pos:end="45:30"><name pos:start="45:16" pos:end="45:22">AVERROR</name><argument_list pos:start="45:23" pos:end="45:30">(<argument pos:start="45:24" pos:end="45:29"><expr pos:start="45:24" pos:end="45:29"><name pos:start="45:24" pos:end="45:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:36"><expr pos:start="49:5" pos:end="49:35"><name pos:start="49:5" pos:end="49:7">res</name> <operator pos:start="49:9" pos:end="49:9">=</operator> <call pos:start="49:11" pos:end="49:35"><name pos:start="49:11" pos:end="49:28">nvenc_push_context</name><argument_list pos:start="49:29" pos:end="49:35">(<argument pos:start="49:30" pos:end="49:34"><expr pos:start="49:30" pos:end="49:34"><name pos:start="49:30" pos:end="49:34">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="53:19"><if pos:start="51:5" pos:end="53:19">if <condition pos:start="51:8" pos:end="51:16">(<expr pos:start="51:9" pos:end="51:15"><name pos:start="51:9" pos:end="51:11">res</name> <operator pos:start="51:13" pos:end="51:13">&lt;</operator> <literal type="number" pos:start="51:15" pos:end="51:15">0</literal></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:19"><block_content pos:start="53:9" pos:end="53:19">

        <return pos:start="53:9" pos:end="53:19">return <expr pos:start="53:16" pos:end="53:18"><name pos:start="53:16" pos:end="53:18">res</name></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="57:5" pos:end="69:5">for <control pos:start="57:9" pos:end="57:42">(<init pos:start="57:10" pos:end="57:15"><expr pos:start="57:10" pos:end="57:14"><name pos:start="57:10" pos:end="57:10">i</name> <operator pos:start="57:12" pos:end="57:12">=</operator> <literal type="number" pos:start="57:14" pos:end="57:14">0</literal></expr>;</init> <condition pos:start="57:17" pos:end="57:37"><expr pos:start="57:17" pos:end="57:36"><name pos:start="57:17" pos:end="57:17">i</name> <operator pos:start="57:19" pos:end="57:19">&lt;</operator> <name pos:start="57:21" pos:end="57:36"><name pos:start="57:21" pos:end="57:23">ctx</name><operator pos:start="57:24" pos:end="57:25">-&gt;</operator><name pos:start="57:26" pos:end="57:36">nb_surfaces</name></name></expr>;</condition> <incr pos:start="57:39" pos:end="57:41"><expr pos:start="57:39" pos:end="57:41"><name pos:start="57:39" pos:end="57:39">i</name><operator pos:start="57:40" pos:end="57:41">++</operator></expr></incr>)</control> <block pos:start="57:44" pos:end="69:5">{<block_content pos:start="59:9" pos:end="67:9">

        <if_stmt pos:start="59:9" pos:end="67:9"><if pos:start="59:9" pos:end="67:9">if <condition pos:start="59:12" pos:end="59:54">(<expr pos:start="59:13" pos:end="59:53"><operator pos:start="59:13" pos:end="59:13">(</operator><name pos:start="59:14" pos:end="59:16">res</name> <operator pos:start="59:18" pos:end="59:18">=</operator> <call pos:start="59:20" pos:end="59:48"><name pos:start="59:20" pos:end="59:38">nvenc_alloc_surface</name><argument_list pos:start="59:39" pos:end="59:48">(<argument pos:start="59:40" pos:end="59:44"><expr pos:start="59:40" pos:end="59:44"><name pos:start="59:40" pos:end="59:44">avctx</name></expr></argument>, <argument pos:start="59:47" pos:end="59:47"><expr pos:start="59:47" pos:end="59:47"><name pos:start="59:47" pos:end="59:47">i</name></expr></argument>)</argument_list></call><operator pos:start="59:49" pos:end="59:49">)</operator> <operator pos:start="59:51" pos:end="59:51">&lt;</operator> <literal type="number" pos:start="59:53" pos:end="59:53">0</literal></expr>)</condition>

        <block pos:start="61:9" pos:end="67:9">{<block_content pos:start="63:13" pos:end="65:23">

            <expr_stmt pos:start="63:13" pos:end="63:37"><expr pos:start="63:13" pos:end="63:36"><call pos:start="63:13" pos:end="63:36"><name pos:start="63:13" pos:end="63:29">nvenc_pop_context</name><argument_list pos:start="63:30" pos:end="63:36">(<argument pos:start="63:31" pos:end="63:35"><expr pos:start="63:31" pos:end="63:35"><name pos:start="63:31" pos:end="63:35">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="65:13" pos:end="65:23">return <expr pos:start="65:20" pos:end="65:22"><name pos:start="65:20" pos:end="65:22">res</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="73:5" pos:end="73:35"><expr pos:start="73:5" pos:end="73:34"><name pos:start="73:5" pos:end="73:7">res</name> <operator pos:start="73:9" pos:end="73:9">=</operator> <call pos:start="73:11" pos:end="73:34"><name pos:start="73:11" pos:end="73:27">nvenc_pop_context</name><argument_list pos:start="73:28" pos:end="73:34">(<argument pos:start="73:29" pos:end="73:33"><expr pos:start="73:29" pos:end="73:33"><name pos:start="73:29" pos:end="73:33">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="77:19"><if pos:start="75:5" pos:end="77:19">if <condition pos:start="75:8" pos:end="75:16">(<expr pos:start="75:9" pos:end="75:15"><name pos:start="75:9" pos:end="75:11">res</name> <operator pos:start="75:13" pos:end="75:13">&lt;</operator> <literal type="number" pos:start="75:15" pos:end="75:15">0</literal></expr>)</condition><block type="pseudo" pos:start="77:9" pos:end="77:19"><block_content pos:start="77:9" pos:end="77:19">

        <return pos:start="77:9" pos:end="77:19">return <expr pos:start="77:16" pos:end="77:18"><name pos:start="77:16" pos:end="77:18">res</name></expr>;</return></block_content></block></if></if_stmt>



    <return pos:start="81:5" pos:end="81:13">return <expr pos:start="81:12" pos:end="81:12"><literal type="number" pos:start="81:12" pos:end="81:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
