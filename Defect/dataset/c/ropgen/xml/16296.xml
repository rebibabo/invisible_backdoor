<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16296.c" pos:tabs="8"><function pos:start="1:1" pos:end="105:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">decode_lt_rps</name><parameter_list pos:start="1:25" pos:end="1:77">(<parameter pos:start="1:26" pos:end="1:39"><decl pos:start="1:26" pos:end="1:39"><type pos:start="1:26" pos:end="1:39"><name pos:start="1:26" pos:end="1:36">HEVCContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">s</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:57"><decl pos:start="1:42" pos:end="1:57"><type pos:start="1:42" pos:end="1:57"><name pos:start="1:42" pos:end="1:52">LongTermRPS</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">rps</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:76"><decl pos:start="1:60" pos:end="1:76"><type pos:start="1:60" pos:end="1:76"><name pos:start="1:60" pos:end="1:72">GetBitContext</name> <modifier pos:start="1:74" pos:end="1:74">*</modifier></type><name pos:start="1:75" pos:end="1:76">gb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="105:1">{<block_content pos:start="5:5" pos:end="103:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:19"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:17">HEVCSPS</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">sps</name> <init pos:start="5:24" pos:end="5:34">= <expr pos:start="5:26" pos:end="5:34"><name pos:start="5:26" pos:end="5:34"><name pos:start="5:26" pos:end="5:26">s</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:30">ps</name><operator pos:start="5:31" pos:end="5:31">.</operator><name pos:start="5:32" pos:end="5:34">sps</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:52"><decl pos:start="7:5" pos:end="7:51"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:19">max_poc_lsb</name>    <init pos:start="7:24" pos:end="7:51">= <expr pos:start="7:26" pos:end="7:51"><literal type="number" pos:start="7:26" pos:end="7:26">1</literal> <operator pos:start="7:28" pos:end="7:29">&lt;&lt;</operator> <name pos:start="7:31" pos:end="7:51"><name pos:start="7:31" pos:end="7:33">sps</name><operator pos:start="7:34" pos:end="7:35">-&gt;</operator><name pos:start="7:36" pos:end="7:51">log2_max_poc_lsb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:22">prev_delta_msb</name> <init pos:start="9:24" pos:end="9:26">= <expr pos:start="9:26" pos:end="9:26"><literal type="number" pos:start="9:26" pos:end="9:26">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:23">nb_sps</name> <init pos:start="11:25" pos:end="11:27">= <expr pos:start="11:27" pos:end="11:27"><literal type="number" pos:start="11:27" pos:end="11:27">0</literal></expr></init></decl>, <decl pos:start="11:30" pos:end="11:34"><type ref="prev" pos:start="11:5" pos:end="11:16"/><name pos:start="11:30" pos:end="11:34">nb_sh</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:21"><expr pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:7">rps</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:16">nb_refs</name></name> <operator pos:start="17:18" pos:end="17:18">=</operator> <literal type="number" pos:start="17:20" pos:end="17:20">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="21:17"><if pos:start="19:5" pos:end="21:17">if <condition pos:start="19:8" pos:end="19:46">(<expr pos:start="19:9" pos:end="19:45"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:45"><name pos:start="19:10" pos:end="19:12">sps</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:45">long_term_ref_pics_present_flag</name></name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:17"><block_content pos:start="21:9" pos:end="21:17">

        <return pos:start="21:9" pos:end="21:17">return <expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="27:40"><if pos:start="25:5" pos:end="27:40">if <condition pos:start="25:8" pos:end="25:44">(<expr pos:start="25:9" pos:end="25:43"><name pos:start="25:9" pos:end="25:39"><name pos:start="25:9" pos:end="25:11">sps</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:39">num_long_term_ref_pics_sps</name></name> <operator pos:start="25:41" pos:end="25:41">&gt;</operator> <literal type="number" pos:start="25:43" pos:end="25:43">0</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:40"><block_content pos:start="27:9" pos:end="27:40">

        <expr_stmt pos:start="27:9" pos:end="27:40"><expr pos:start="27:9" pos:end="27:39"><name pos:start="27:9" pos:end="27:14">nb_sps</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <call pos:start="27:18" pos:end="27:39"><name pos:start="27:18" pos:end="27:35">get_ue_golomb_long</name><argument_list pos:start="27:36" pos:end="27:39">(<argument pos:start="27:37" pos:end="27:38"><expr pos:start="27:37" pos:end="27:38"><name pos:start="27:37" pos:end="27:38">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:35"><expr pos:start="29:5" pos:end="29:34"><name pos:start="29:5" pos:end="29:9">nb_sh</name> <operator pos:start="29:11" pos:end="29:11">=</operator> <call pos:start="29:13" pos:end="29:34"><name pos:start="29:13" pos:end="29:30">get_ue_golomb_long</name><argument_list pos:start="29:31" pos:end="29:34">(<argument pos:start="29:32" pos:end="29:33"><expr pos:start="29:32" pos:end="29:33"><name pos:start="29:32" pos:end="29:33">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="35:35"><if pos:start="33:5" pos:end="35:35">if <condition pos:start="33:8" pos:end="33:49">(<expr pos:start="33:9" pos:end="33:48"><name pos:start="33:9" pos:end="33:14">nb_sps</name> <operator pos:start="33:16" pos:end="33:16">&gt;</operator> <name pos:start="33:18" pos:end="33:48"><name pos:start="33:18" pos:end="33:20">sps</name><operator pos:start="33:21" pos:end="33:22">-&gt;</operator><name pos:start="33:23" pos:end="33:48">num_long_term_ref_pics_sps</name></name></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:35"><block_content pos:start="35:9" pos:end="35:35">

        <return pos:start="35:9" pos:end="35:35">return <expr pos:start="35:16" pos:end="35:34"><name pos:start="35:16" pos:end="35:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="39:35"><if pos:start="37:5" pos:end="39:35">if <condition pos:start="37:8" pos:end="37:60">(<expr pos:start="37:9" pos:end="37:59"><name pos:start="37:9" pos:end="37:13">nb_sh</name> <operator pos:start="37:15" pos:end="37:15">+</operator> <operator pos:start="37:17" pos:end="37:17">(</operator><name pos:start="37:18" pos:end="37:25">uint64_t</name><operator pos:start="37:26" pos:end="37:26">)</operator><name pos:start="37:27" pos:end="37:32">nb_sps</name> <operator pos:start="37:34" pos:end="37:34">&gt;</operator> <call pos:start="37:36" pos:end="37:59"><name pos:start="37:36" pos:end="37:49">FF_ARRAY_ELEMS</name><argument_list pos:start="37:50" pos:end="37:59">(<argument pos:start="37:51" pos:end="37:58"><expr pos:start="37:51" pos:end="37:58"><name pos:start="37:51" pos:end="37:58"><name pos:start="37:51" pos:end="37:53">rps</name><operator pos:start="37:54" pos:end="37:55">-&gt;</operator><name pos:start="37:56" pos:end="37:58">poc</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:35"><block_content pos:start="39:9" pos:end="39:35">

        <return pos:start="39:9" pos:end="39:35">return <expr pos:start="39:16" pos:end="39:34"><name pos:start="39:16" pos:end="39:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:34"><expr pos:start="43:5" pos:end="43:33"><name pos:start="43:5" pos:end="43:16"><name pos:start="43:5" pos:end="43:7">rps</name><operator pos:start="43:8" pos:end="43:9">-&gt;</operator><name pos:start="43:10" pos:end="43:16">nb_refs</name></name> <operator pos:start="43:18" pos:end="43:18">=</operator> <name pos:start="43:20" pos:end="43:24">nb_sh</name> <operator pos:start="43:26" pos:end="43:26">+</operator> <name pos:start="43:28" pos:end="43:33">nb_sps</name></expr>;</expr_stmt>



    <for pos:start="47:5" pos:end="99:5">for <control pos:start="47:9" pos:end="47:38">(<init pos:start="47:10" pos:end="47:15"><expr pos:start="47:10" pos:end="47:14"><name pos:start="47:10" pos:end="47:10">i</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <literal type="number" pos:start="47:14" pos:end="47:14">0</literal></expr>;</init> <condition pos:start="47:17" pos:end="47:33"><expr pos:start="47:17" pos:end="47:32"><name pos:start="47:17" pos:end="47:17">i</name> <operator pos:start="47:19" pos:end="47:19">&lt;</operator> <name pos:start="47:21" pos:end="47:32"><name pos:start="47:21" pos:end="47:23">rps</name><operator pos:start="47:24" pos:end="47:25">-&gt;</operator><name pos:start="47:26" pos:end="47:32">nb_refs</name></name></expr>;</condition> <incr pos:start="47:35" pos:end="47:37"><expr pos:start="47:35" pos:end="47:37"><name pos:start="47:35" pos:end="47:35">i</name><operator pos:start="47:36" pos:end="47:37">++</operator></expr></incr>)</control> <block pos:start="47:40" pos:end="99:5">{<block_content pos:start="49:9" pos:end="97:9">

        <decl_stmt pos:start="49:9" pos:end="49:38"><decl pos:start="49:9" pos:end="49:37"><type pos:start="49:9" pos:end="49:15"><name pos:start="49:9" pos:end="49:15">uint8_t</name></type> <name pos:start="49:17" pos:end="49:37">delta_poc_msb_present</name></decl>;</decl_stmt>



        <if_stmt pos:start="53:9" pos:end="75:9"><if pos:start="53:9" pos:end="69:9">if <condition pos:start="53:12" pos:end="53:23">(<expr pos:start="53:13" pos:end="53:22"><name pos:start="53:13" pos:end="53:13">i</name> <operator pos:start="53:15" pos:end="53:15">&lt;</operator> <name pos:start="53:17" pos:end="53:22">nb_sps</name></expr>)</condition> <block pos:start="53:25" pos:end="69:9">{<block_content pos:start="55:13" pos:end="67:73">

            <decl_stmt pos:start="55:13" pos:end="55:35"><decl pos:start="55:13" pos:end="55:34"><type pos:start="55:13" pos:end="55:19"><name pos:start="55:13" pos:end="55:19">uint8_t</name></type> <name pos:start="55:21" pos:end="55:30">lt_idx_sps</name> <init pos:start="55:32" pos:end="55:34">= <expr pos:start="55:34" pos:end="55:34"><literal type="number" pos:start="55:34" pos:end="55:34">0</literal></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="59:13" pos:end="61:89"><if pos:start="59:13" pos:end="61:89">if <condition pos:start="59:16" pos:end="59:52">(<expr pos:start="59:17" pos:end="59:51"><name pos:start="59:17" pos:end="59:47"><name pos:start="59:17" pos:end="59:19">sps</name><operator pos:start="59:20" pos:end="59:21">-&gt;</operator><name pos:start="59:22" pos:end="59:47">num_long_term_ref_pics_sps</name></name> <operator pos:start="59:49" pos:end="59:49">&gt;</operator> <literal type="number" pos:start="59:51" pos:end="59:51">1</literal></expr>)</condition><block type="pseudo" pos:start="61:17" pos:end="61:89"><block_content pos:start="61:17" pos:end="61:89">

                <expr_stmt pos:start="61:17" pos:end="61:89"><expr pos:start="61:17" pos:end="61:88"><name pos:start="61:17" pos:end="61:26">lt_idx_sps</name> <operator pos:start="61:28" pos:end="61:28">=</operator> <call pos:start="61:30" pos:end="61:88"><name pos:start="61:30" pos:end="61:37">get_bits</name><argument_list pos:start="61:38" pos:end="61:88">(<argument pos:start="61:39" pos:end="61:40"><expr pos:start="61:39" pos:end="61:40"><name pos:start="61:39" pos:end="61:40">gb</name></expr></argument>, <argument pos:start="61:43" pos:end="61:87"><expr pos:start="61:43" pos:end="61:87"><call pos:start="61:43" pos:end="61:87"><name pos:start="61:43" pos:end="61:54">av_ceil_log2</name><argument_list pos:start="61:55" pos:end="61:87">(<argument pos:start="61:56" pos:end="61:86"><expr pos:start="61:56" pos:end="61:86"><name pos:start="61:56" pos:end="61:86"><name pos:start="61:56" pos:end="61:58">sps</name><operator pos:start="61:59" pos:end="61:60">-&gt;</operator><name pos:start="61:61" pos:end="61:86">num_long_term_ref_pics_sps</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="65:13" pos:end="65:67"><expr pos:start="65:13" pos:end="65:66"><name pos:start="65:13" pos:end="65:23"><name pos:start="65:13" pos:end="65:15">rps</name><operator pos:start="65:16" pos:end="65:17">-&gt;</operator><name pos:start="65:18" pos:end="65:20">poc</name><index pos:start="65:21" pos:end="65:23">[<expr pos:start="65:22" pos:end="65:22"><name pos:start="65:22" pos:end="65:22">i</name></expr>]</index></name>  <operator pos:start="65:26" pos:end="65:26">=</operator> <name pos:start="65:28" pos:end="65:66"><name pos:start="65:28" pos:end="65:30">sps</name><operator pos:start="65:31" pos:end="65:32">-&gt;</operator><name pos:start="65:33" pos:end="65:54">lt_ref_pic_poc_lsb_sps</name><index pos:start="65:55" pos:end="65:66">[<expr pos:start="65:56" pos:end="65:65"><name pos:start="65:56" pos:end="65:65">lt_idx_sps</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:73"><expr pos:start="67:13" pos:end="67:72"><name pos:start="67:13" pos:end="67:24"><name pos:start="67:13" pos:end="67:15">rps</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:21">used</name><index pos:start="67:22" pos:end="67:24">[<expr pos:start="67:23" pos:end="67:23"><name pos:start="67:23" pos:end="67:23">i</name></expr>]</index></name> <operator pos:start="67:26" pos:end="67:26">=</operator> <name pos:start="67:28" pos:end="67:72"><name pos:start="67:28" pos:end="67:30">sps</name><operator pos:start="67:31" pos:end="67:32">-&gt;</operator><name pos:start="67:33" pos:end="67:60">used_by_curr_pic_lt_sps_flag</name><index pos:start="67:61" pos:end="67:72">[<expr pos:start="67:62" pos:end="67:71"><name pos:start="67:62" pos:end="67:71">lt_idx_sps</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="69:11" pos:end="75:9">else <block pos:start="69:16" pos:end="75:9">{<block_content pos:start="71:13" pos:end="73:41">

            <expr_stmt pos:start="71:13" pos:end="71:63"><expr pos:start="71:13" pos:end="71:62"><name pos:start="71:13" pos:end="71:23"><name pos:start="71:13" pos:end="71:15">rps</name><operator pos:start="71:16" pos:end="71:17">-&gt;</operator><name pos:start="71:18" pos:end="71:20">poc</name><index pos:start="71:21" pos:end="71:23">[<expr pos:start="71:22" pos:end="71:22"><name pos:start="71:22" pos:end="71:22">i</name></expr>]</index></name>  <operator pos:start="71:26" pos:end="71:26">=</operator> <call pos:start="71:28" pos:end="71:62"><name pos:start="71:28" pos:end="71:35">get_bits</name><argument_list pos:start="71:36" pos:end="71:62">(<argument pos:start="71:37" pos:end="71:38"><expr pos:start="71:37" pos:end="71:38"><name pos:start="71:37" pos:end="71:38">gb</name></expr></argument>, <argument pos:start="71:41" pos:end="71:61"><expr pos:start="71:41" pos:end="71:61"><name pos:start="71:41" pos:end="71:61"><name pos:start="71:41" pos:end="71:43">sps</name><operator pos:start="71:44" pos:end="71:45">-&gt;</operator><name pos:start="71:46" pos:end="71:61">log2_max_poc_lsb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:41"><expr pos:start="73:13" pos:end="73:40"><name pos:start="73:13" pos:end="73:24"><name pos:start="73:13" pos:end="73:15">rps</name><operator pos:start="73:16" pos:end="73:17">-&gt;</operator><name pos:start="73:18" pos:end="73:21">used</name><index pos:start="73:22" pos:end="73:24">[<expr pos:start="73:23" pos:end="73:23"><name pos:start="73:23" pos:end="73:23">i</name></expr>]</index></name> <operator pos:start="73:26" pos:end="73:26">=</operator> <call pos:start="73:28" pos:end="73:40"><name pos:start="73:28" pos:end="73:36">get_bits1</name><argument_list pos:start="73:37" pos:end="73:40">(<argument pos:start="73:38" pos:end="73:39"><expr pos:start="73:38" pos:end="73:39"><name pos:start="73:38" pos:end="73:39">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="79:9" pos:end="79:46"><expr pos:start="79:9" pos:end="79:45"><name pos:start="79:9" pos:end="79:29">delta_poc_msb_present</name> <operator pos:start="79:31" pos:end="79:31">=</operator> <call pos:start="79:33" pos:end="79:45"><name pos:start="79:33" pos:end="79:41">get_bits1</name><argument_list pos:start="79:42" pos:end="79:45">(<argument pos:start="79:43" pos:end="79:44"><expr pos:start="79:43" pos:end="79:44"><name pos:start="79:43" pos:end="79:44">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="81:9" pos:end="97:9"><if pos:start="81:9" pos:end="97:9">if <condition pos:start="81:12" pos:end="81:34">(<expr pos:start="81:13" pos:end="81:33"><name pos:start="81:13" pos:end="81:33">delta_poc_msb_present</name></expr>)</condition> <block pos:start="81:36" pos:end="97:9">{<block_content pos:start="83:13" pos:end="95:35">

            <decl_stmt pos:start="83:13" pos:end="83:47"><decl pos:start="83:13" pos:end="83:46"><type pos:start="83:13" pos:end="83:15"><name pos:start="83:13" pos:end="83:15">int</name></type> <name pos:start="83:17" pos:end="83:21">delta</name> <init pos:start="83:23" pos:end="83:46">= <expr pos:start="83:25" pos:end="83:46"><call pos:start="83:25" pos:end="83:46"><name pos:start="83:25" pos:end="83:42">get_ue_golomb_long</name><argument_list pos:start="83:43" pos:end="83:46">(<argument pos:start="83:44" pos:end="83:45"><expr pos:start="83:44" pos:end="83:45"><name pos:start="83:44" pos:end="83:45">gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="87:13" pos:end="89:40"><if pos:start="87:13" pos:end="89:40">if <condition pos:start="87:16" pos:end="87:33">(<expr pos:start="87:17" pos:end="87:32"><name pos:start="87:17" pos:end="87:17">i</name> <operator pos:start="87:19" pos:end="87:20">&amp;&amp;</operator> <name pos:start="87:22" pos:end="87:22">i</name> <operator pos:start="87:24" pos:end="87:25">!=</operator> <name pos:start="87:27" pos:end="87:32">nb_sps</name></expr>)</condition><block type="pseudo" pos:start="89:17" pos:end="89:40"><block_content pos:start="89:17" pos:end="89:40">

                <expr_stmt pos:start="89:17" pos:end="89:40"><expr pos:start="89:17" pos:end="89:39"><name pos:start="89:17" pos:end="89:21">delta</name> <operator pos:start="89:23" pos:end="89:24">+=</operator> <name pos:start="89:26" pos:end="89:39">prev_delta_msb</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="93:13" pos:end="93:82"><expr pos:start="93:13" pos:end="93:81"><name pos:start="93:13" pos:end="93:23"><name pos:start="93:13" pos:end="93:15">rps</name><operator pos:start="93:16" pos:end="93:17">-&gt;</operator><name pos:start="93:18" pos:end="93:20">poc</name><index pos:start="93:21" pos:end="93:23">[<expr pos:start="93:22" pos:end="93:22"><name pos:start="93:22" pos:end="93:22">i</name></expr>]</index></name> <operator pos:start="93:25" pos:end="93:26">+=</operator> <name pos:start="93:28" pos:end="93:33"><name pos:start="93:28" pos:end="93:28">s</name><operator pos:start="93:29" pos:end="93:30">-&gt;</operator><name pos:start="93:31" pos:end="93:33">poc</name></name> <operator pos:start="93:35" pos:end="93:35">-</operator> <name pos:start="93:37" pos:end="93:41">delta</name> <operator pos:start="93:43" pos:end="93:43">*</operator> <name pos:start="93:45" pos:end="93:55">max_poc_lsb</name> <operator pos:start="93:57" pos:end="93:57">-</operator> <name pos:start="93:59" pos:end="93:81"><name pos:start="93:59" pos:end="93:59">s</name><operator pos:start="93:60" pos:end="93:61">-&gt;</operator><name pos:start="93:62" pos:end="93:63">sh</name><operator pos:start="93:64" pos:end="93:64">.</operator><name pos:start="93:65" pos:end="93:81">pic_order_cnt_lsb</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:35"><expr pos:start="95:13" pos:end="95:34"><name pos:start="95:13" pos:end="95:26">prev_delta_msb</name> <operator pos:start="95:28" pos:end="95:28">=</operator> <name pos:start="95:30" pos:end="95:34">delta</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <return pos:start="103:5" pos:end="103:13">return <expr pos:start="103:12" pos:end="103:12"><literal type="number" pos:start="103:12" pos:end="103:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
