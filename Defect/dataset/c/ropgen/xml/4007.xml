<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4007.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:18">hmp_info_cpus</name><parameter_list pos:start="1:19" pos:end="1:52">(<parameter pos:start="1:20" pos:end="1:31"><decl pos:start="1:20" pos:end="1:31"><type pos:start="1:20" pos:end="1:31"><name pos:start="1:20" pos:end="1:26">Monitor</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:31">mon</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:51"><decl pos:start="1:34" pos:end="1:51"><type pos:start="1:34" pos:end="1:51"><specifier pos:start="1:34" pos:end="1:38">const</specifier> <name pos:start="1:40" pos:end="1:44">QDict</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">qdict</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="93:1">{<block_content pos:start="5:5" pos:end="91:36">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">CpuInfoList</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:25">cpu_list</name></decl>, <decl pos:start="5:28" pos:end="5:31"><type ref="prev" pos:start="5:5" pos:end="5:17"><modifier pos:start="5:28" pos:end="5:28">*</modifier></type><name pos:start="5:29" pos:end="5:31">cpu</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:36"><expr pos:start="9:5" pos:end="9:35"><name pos:start="9:5" pos:end="9:12">cpu_list</name> <operator pos:start="9:14" pos:end="9:14">=</operator> <call pos:start="9:16" pos:end="9:35"><name pos:start="9:16" pos:end="9:29">qmp_query_cpus</name><argument_list pos:start="9:30" pos:end="9:35">(<argument pos:start="9:31" pos:end="9:34"><expr pos:start="9:31" pos:end="9:34"><name pos:start="9:31" pos:end="9:34">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="13:5" pos:end="87:5">for <control pos:start="13:9" pos:end="13:46">(<init pos:start="13:10" pos:end="13:24"><expr pos:start="13:10" pos:end="13:23"><name pos:start="13:10" pos:end="13:12">cpu</name> <operator pos:start="13:14" pos:end="13:14">=</operator> <name pos:start="13:16" pos:end="13:23">cpu_list</name></expr>;</init> <condition pos:start="13:26" pos:end="13:29"><expr pos:start="13:26" pos:end="13:28"><name pos:start="13:26" pos:end="13:28">cpu</name></expr>;</condition> <incr pos:start="13:31" pos:end="13:45"><expr pos:start="13:31" pos:end="13:45"><name pos:start="13:31" pos:end="13:33">cpu</name> <operator pos:start="13:35" pos:end="13:35">=</operator> <name pos:start="13:37" pos:end="13:45"><name pos:start="13:37" pos:end="13:39">cpu</name><operator pos:start="13:40" pos:end="13:41">-&gt;</operator><name pos:start="13:42" pos:end="13:45">next</name></name></expr></incr>)</control> <block pos:start="13:48" pos:end="87:5">{<block_content pos:start="15:9" pos:end="85:79">

        <decl_stmt pos:start="15:9" pos:end="15:25"><decl pos:start="15:9" pos:end="15:24"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:18">active</name> <init pos:start="15:20" pos:end="15:24">= <expr pos:start="15:22" pos:end="15:24"><literal type="char" pos:start="15:22" pos:end="15:24">' '</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="19:9" pos:end="23:9"><if pos:start="19:9" pos:end="23:9">if <condition pos:start="19:12" pos:end="19:55">(<expr pos:start="19:13" pos:end="19:54"><name pos:start="19:13" pos:end="19:27"><name pos:start="19:13" pos:end="19:15">cpu</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:22">value</name><operator pos:start="19:23" pos:end="19:24">-&gt;</operator><name pos:start="19:25" pos:end="19:27">CPU</name></name> <operator pos:start="19:29" pos:end="19:30">==</operator> <call pos:start="19:32" pos:end="19:54"><name pos:start="19:32" pos:end="19:52">monitor_get_cpu_index</name><argument_list pos:start="19:53" pos:end="19:54">()</argument_list></call></expr>)</condition> <block pos:start="19:57" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:25">

            <expr_stmt pos:start="21:13" pos:end="21:25"><expr pos:start="21:13" pos:end="21:24"><name pos:start="21:13" pos:end="21:18">active</name> <operator pos:start="21:20" pos:end="21:20">=</operator> <literal type="char" pos:start="21:22" pos:end="21:24">'*'</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="27:9" pos:end="27:77"><expr pos:start="27:9" pos:end="27:76"><call pos:start="27:9" pos:end="27:76"><name pos:start="27:9" pos:end="27:22">monitor_printf</name><argument_list pos:start="27:23" pos:end="27:76">(<argument pos:start="27:24" pos:end="27:26"><expr pos:start="27:24" pos:end="27:26"><name pos:start="27:24" pos:end="27:26">mon</name></expr></argument>, <argument pos:start="27:29" pos:end="27:50"><expr pos:start="27:29" pos:end="27:50"><literal type="string" pos:start="27:29" pos:end="27:39">"%c CPU #%"</literal> <name pos:start="27:41" pos:end="27:46">PRId64</name> <literal type="string" pos:start="27:48" pos:end="27:50">":"</literal></expr></argument>, <argument pos:start="27:53" pos:end="27:58"><expr pos:start="27:53" pos:end="27:58"><name pos:start="27:53" pos:end="27:58">active</name></expr></argument>, <argument pos:start="27:61" pos:end="27:75"><expr pos:start="27:61" pos:end="27:75"><name pos:start="27:61" pos:end="27:75"><name pos:start="27:61" pos:end="27:63">cpu</name><operator pos:start="27:64" pos:end="27:65">-&gt;</operator><name pos:start="27:66" pos:end="27:70">value</name><operator pos:start="27:71" pos:end="27:72">-&gt;</operator><name pos:start="27:73" pos:end="27:75">CPU</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <switch pos:start="31:9" pos:end="73:9">switch <condition pos:start="31:16" pos:end="31:33">(<expr pos:start="31:17" pos:end="31:32"><name pos:start="31:17" pos:end="31:32"><name pos:start="31:17" pos:end="31:19">cpu</name><operator pos:start="31:20" pos:end="31:21">-&gt;</operator><name pos:start="31:22" pos:end="31:26">value</name><operator pos:start="31:27" pos:end="31:28">-&gt;</operator><name pos:start="31:29" pos:end="31:32">arch</name></name></expr>)</condition> <block pos:start="31:35" pos:end="73:9">{<block_content pos:start="33:9" pos:end="71:18">

        <case pos:start="33:9" pos:end="33:31">case <expr pos:start="33:14" pos:end="33:30"><name pos:start="33:14" pos:end="33:30">CPU_INFO_ARCH_X86</name></expr>:</case>

            <expr_stmt pos:start="35:13" pos:end="35:76"><expr pos:start="35:13" pos:end="35:75"><call pos:start="35:13" pos:end="35:75"><name pos:start="35:13" pos:end="35:26">monitor_printf</name><argument_list pos:start="35:27" pos:end="35:75">(<argument pos:start="35:28" pos:end="35:30"><expr pos:start="35:28" pos:end="35:30"><name pos:start="35:28" pos:end="35:30">mon</name></expr></argument>, <argument pos:start="35:33" pos:end="35:51"><expr pos:start="35:33" pos:end="35:51"><literal type="string" pos:start="35:33" pos:end="35:44">" pc=0x%016"</literal> <name pos:start="35:46" pos:end="35:51">PRIx64</name></expr></argument>, <argument pos:start="35:54" pos:end="35:74"><expr pos:start="35:54" pos:end="35:74"><name pos:start="35:54" pos:end="35:74"><name pos:start="35:54" pos:end="35:56">cpu</name><operator pos:start="35:57" pos:end="35:58">-&gt;</operator><name pos:start="35:59" pos:end="35:63">value</name><operator pos:start="35:64" pos:end="35:65">-&gt;</operator><name pos:start="35:66" pos:end="35:66">u</name><operator pos:start="35:67" pos:end="35:67">.</operator><name pos:start="35:68" pos:end="35:70">x86</name><operator pos:start="35:71" pos:end="35:72">-&gt;</operator><name pos:start="35:73" pos:end="35:74">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="37:13" pos:end="37:18">break;</break>

        <case pos:start="39:9" pos:end="39:31">case <expr pos:start="39:14" pos:end="39:30"><name pos:start="39:14" pos:end="39:30">CPU_INFO_ARCH_PPC</name></expr>:</case>

            <expr_stmt pos:start="41:13" pos:end="41:78"><expr pos:start="41:13" pos:end="41:77"><call pos:start="41:13" pos:end="41:77"><name pos:start="41:13" pos:end="41:26">monitor_printf</name><argument_list pos:start="41:27" pos:end="41:77">(<argument pos:start="41:28" pos:end="41:30"><expr pos:start="41:28" pos:end="41:30"><name pos:start="41:28" pos:end="41:30">mon</name></expr></argument>, <argument pos:start="41:33" pos:end="41:52"><expr pos:start="41:33" pos:end="41:52"><literal type="string" pos:start="41:33" pos:end="41:45">" nip=0x%016"</literal> <name pos:start="41:47" pos:end="41:52">PRIx64</name></expr></argument>, <argument pos:start="41:55" pos:end="41:76"><expr pos:start="41:55" pos:end="41:76"><name pos:start="41:55" pos:end="41:76"><name pos:start="41:55" pos:end="41:57">cpu</name><operator pos:start="41:58" pos:end="41:59">-&gt;</operator><name pos:start="41:60" pos:end="41:64">value</name><operator pos:start="41:65" pos:end="41:66">-&gt;</operator><name pos:start="41:67" pos:end="41:67">u</name><operator pos:start="41:68" pos:end="41:68">.</operator><name pos:start="41:69" pos:end="41:71">ppc</name><operator pos:start="41:72" pos:end="41:73">-&gt;</operator><name pos:start="41:74" pos:end="41:76">nip</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="43:13" pos:end="43:18">break;</break>

        <case pos:start="45:9" pos:end="45:33">case <expr pos:start="45:14" pos:end="45:32"><name pos:start="45:14" pos:end="45:32">CPU_INFO_ARCH_SPARC</name></expr>:</case>

            <expr_stmt pos:start="47:13" pos:end="49:54"><expr pos:start="47:13" pos:end="49:53"><call pos:start="47:13" pos:end="49:53"><name pos:start="47:13" pos:end="47:26">monitor_printf</name><argument_list pos:start="47:27" pos:end="49:53">(<argument pos:start="47:28" pos:end="47:30"><expr pos:start="47:28" pos:end="47:30"><name pos:start="47:28" pos:end="47:30">mon</name></expr></argument>, <argument pos:start="47:33" pos:end="47:51"><expr pos:start="47:33" pos:end="47:51"><literal type="string" pos:start="47:33" pos:end="47:44">" pc=0x%016"</literal> <name pos:start="47:46" pos:end="47:51">PRIx64</name></expr></argument>,

                           <argument pos:start="49:28" pos:end="49:52"><expr pos:start="49:28" pos:end="49:52"><name pos:start="49:28" pos:end="49:52"><name pos:start="49:28" pos:end="49:30">cpu</name><operator pos:start="49:31" pos:end="49:32">-&gt;</operator><name pos:start="49:33" pos:end="49:37">value</name><operator pos:start="49:38" pos:end="49:39">-&gt;</operator><name pos:start="49:40" pos:end="49:40">u</name><operator pos:start="49:41" pos:end="49:41">.</operator><name pos:start="49:42" pos:end="49:48">q_sparc</name><operator pos:start="49:49" pos:end="49:50">-&gt;</operator><name pos:start="49:51" pos:end="49:52">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="53:55"><expr pos:start="51:13" pos:end="53:54"><call pos:start="51:13" pos:end="53:54"><name pos:start="51:13" pos:end="51:26">monitor_printf</name><argument_list pos:start="51:27" pos:end="53:54">(<argument pos:start="51:28" pos:end="51:30"><expr pos:start="51:28" pos:end="51:30"><name pos:start="51:28" pos:end="51:30">mon</name></expr></argument>, <argument pos:start="51:33" pos:end="51:52"><expr pos:start="51:33" pos:end="51:52"><literal type="string" pos:start="51:33" pos:end="51:45">" npc=0x%016"</literal> <name pos:start="51:47" pos:end="51:52">PRIx64</name></expr></argument>,

                           <argument pos:start="53:28" pos:end="53:53"><expr pos:start="53:28" pos:end="53:53"><name pos:start="53:28" pos:end="53:53"><name pos:start="53:28" pos:end="53:30">cpu</name><operator pos:start="53:31" pos:end="53:32">-&gt;</operator><name pos:start="53:33" pos:end="53:37">value</name><operator pos:start="53:38" pos:end="53:39">-&gt;</operator><name pos:start="53:40" pos:end="53:40">u</name><operator pos:start="53:41" pos:end="53:41">.</operator><name pos:start="53:42" pos:end="53:48">q_sparc</name><operator pos:start="53:49" pos:end="53:50">-&gt;</operator><name pos:start="53:51" pos:end="53:53">npc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="55:13" pos:end="55:18">break;</break>

        <case pos:start="57:9" pos:end="57:32">case <expr pos:start="57:14" pos:end="57:31"><name pos:start="57:14" pos:end="57:31">CPU_INFO_ARCH_MIPS</name></expr>:</case>

            <expr_stmt pos:start="59:13" pos:end="59:79"><expr pos:start="59:13" pos:end="59:78"><call pos:start="59:13" pos:end="59:78"><name pos:start="59:13" pos:end="59:26">monitor_printf</name><argument_list pos:start="59:27" pos:end="59:78">(<argument pos:start="59:28" pos:end="59:30"><expr pos:start="59:28" pos:end="59:30"><name pos:start="59:28" pos:end="59:30">mon</name></expr></argument>, <argument pos:start="59:33" pos:end="59:51"><expr pos:start="59:33" pos:end="59:51"><literal type="string" pos:start="59:33" pos:end="59:44">" PC=0x%016"</literal> <name pos:start="59:46" pos:end="59:51">PRIx64</name></expr></argument>, <argument pos:start="59:54" pos:end="59:77"><expr pos:start="59:54" pos:end="59:77"><name pos:start="59:54" pos:end="59:77"><name pos:start="59:54" pos:end="59:56">cpu</name><operator pos:start="59:57" pos:end="59:58">-&gt;</operator><name pos:start="59:59" pos:end="59:63">value</name><operator pos:start="59:64" pos:end="59:65">-&gt;</operator><name pos:start="59:66" pos:end="59:66">u</name><operator pos:start="59:67" pos:end="59:67">.</operator><name pos:start="59:68" pos:end="59:73">q_mips</name><operator pos:start="59:74" pos:end="59:75">-&gt;</operator><name pos:start="59:76" pos:end="59:77">PC</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="61:13" pos:end="61:18">break;</break>

        <case pos:start="63:9" pos:end="63:35">case <expr pos:start="63:14" pos:end="63:34"><name pos:start="63:14" pos:end="63:34">CPU_INFO_ARCH_TRICORE</name></expr>:</case>

            <expr_stmt pos:start="65:13" pos:end="65:80"><expr pos:start="65:13" pos:end="65:79"><call pos:start="65:13" pos:end="65:79"><name pos:start="65:13" pos:end="65:26">monitor_printf</name><argument_list pos:start="65:27" pos:end="65:79">(<argument pos:start="65:28" pos:end="65:30"><expr pos:start="65:28" pos:end="65:30"><name pos:start="65:28" pos:end="65:30">mon</name></expr></argument>, <argument pos:start="65:33" pos:end="65:51"><expr pos:start="65:33" pos:end="65:51"><literal type="string" pos:start="65:33" pos:end="65:44">" PC=0x%016"</literal> <name pos:start="65:46" pos:end="65:51">PRIx64</name></expr></argument>, <argument pos:start="65:54" pos:end="65:78"><expr pos:start="65:54" pos:end="65:78"><name pos:start="65:54" pos:end="65:78"><name pos:start="65:54" pos:end="65:56">cpu</name><operator pos:start="65:57" pos:end="65:58">-&gt;</operator><name pos:start="65:59" pos:end="65:63">value</name><operator pos:start="65:64" pos:end="65:65">-&gt;</operator><name pos:start="65:66" pos:end="65:66">u</name><operator pos:start="65:67" pos:end="65:67">.</operator><name pos:start="65:68" pos:end="65:74">tricore</name><operator pos:start="65:75" pos:end="65:76">-&gt;</operator><name pos:start="65:77" pos:end="65:78">PC</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="67:13" pos:end="67:18">break;</break>

        <default pos:start="69:9" pos:end="69:16">default:</default>

            <break pos:start="71:13" pos:end="71:18">break;</break>

        </block_content>}</block></switch>



        <if_stmt pos:start="77:9" pos:end="81:9"><if pos:start="77:9" pos:end="81:9">if <condition pos:start="77:12" pos:end="77:31">(<expr pos:start="77:13" pos:end="77:30"><name pos:start="77:13" pos:end="77:30"><name pos:start="77:13" pos:end="77:15">cpu</name><operator pos:start="77:16" pos:end="77:17">-&gt;</operator><name pos:start="77:18" pos:end="77:22">value</name><operator pos:start="77:23" pos:end="77:24">-&gt;</operator><name pos:start="77:25" pos:end="77:30">halted</name></name></expr>)</condition> <block pos:start="77:33" pos:end="81:9">{<block_content pos:start="79:13" pos:end="79:45">

            <expr_stmt pos:start="79:13" pos:end="79:45"><expr pos:start="79:13" pos:end="79:44"><call pos:start="79:13" pos:end="79:44"><name pos:start="79:13" pos:end="79:26">monitor_printf</name><argument_list pos:start="79:27" pos:end="79:44">(<argument pos:start="79:28" pos:end="79:30"><expr pos:start="79:28" pos:end="79:30"><name pos:start="79:28" pos:end="79:30">mon</name></expr></argument>, <argument pos:start="79:33" pos:end="79:43"><expr pos:start="79:33" pos:end="79:43"><literal type="string" pos:start="79:33" pos:end="79:43">" (halted)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="85:9" pos:end="85:79"><expr pos:start="85:9" pos:end="85:78"><call pos:start="85:9" pos:end="85:78"><name pos:start="85:9" pos:end="85:22">monitor_printf</name><argument_list pos:start="85:23" pos:end="85:78">(<argument pos:start="85:24" pos:end="85:26"><expr pos:start="85:24" pos:end="85:26"><name pos:start="85:24" pos:end="85:26">mon</name></expr></argument>, <argument pos:start="85:29" pos:end="85:54"><expr pos:start="85:29" pos:end="85:54"><literal type="string" pos:start="85:29" pos:end="85:42">" thread_id=%"</literal> <name pos:start="85:44" pos:end="85:49">PRId64</name> <literal type="string" pos:start="85:51" pos:end="85:54">"\n"</literal></expr></argument>, <argument pos:start="85:57" pos:end="85:77"><expr pos:start="85:57" pos:end="85:77"><name pos:start="85:57" pos:end="85:77"><name pos:start="85:57" pos:end="85:59">cpu</name><operator pos:start="85:60" pos:end="85:61">-&gt;</operator><name pos:start="85:62" pos:end="85:66">value</name><operator pos:start="85:67" pos:end="85:68">-&gt;</operator><name pos:start="85:69" pos:end="85:77">thread_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="91:5" pos:end="91:36"><expr pos:start="91:5" pos:end="91:35"><call pos:start="91:5" pos:end="91:35"><name pos:start="91:5" pos:end="91:25">qapi_free_CpuInfoList</name><argument_list pos:start="91:26" pos:end="91:35">(<argument pos:start="91:27" pos:end="91:34"><expr pos:start="91:27" pos:end="91:34"><name pos:start="91:27" pos:end="91:34">cpu_list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
