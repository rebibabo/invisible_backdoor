<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5851.c" pos:tabs="8"><function pos:start="1:1" pos:end="66:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">vp8_lossy_decode_frame</name><parameter_list pos:start="1:34" pos:end="5:57">(<parameter pos:start="1:35" pos:end="1:55"><decl pos:start="1:35" pos:end="1:55"><type pos:start="1:35" pos:end="1:55"><name pos:start="1:35" pos:end="1:48">AVCodecContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:55">avctx</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:67"><decl pos:start="1:58" pos:end="1:67"><type pos:start="1:58" pos:end="1:67"><name pos:start="1:58" pos:end="1:64">AVFrame</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:67">p</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:48"><decl pos:start="3:35" pos:end="3:48"><type pos:start="3:35" pos:end="3:48"><name pos:start="3:35" pos:end="3:37">int</name> <modifier pos:start="3:39" pos:end="3:39">*</modifier></type><name pos:start="3:40" pos:end="3:48">got_frame</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:69"><decl pos:start="3:51" pos:end="3:69"><type pos:start="3:51" pos:end="3:69"><name pos:start="3:51" pos:end="3:57">uint8_t</name> <modifier pos:start="3:59" pos:end="3:59">*</modifier></type><name pos:start="3:60" pos:end="3:69">data_start</name></decl></parameter>,

                                  <parameter pos:start="5:35" pos:end="5:56"><decl pos:start="5:35" pos:end="5:56"><type pos:start="5:35" pos:end="5:56"><name pos:start="5:35" pos:end="5:42">unsigned</name> <name pos:start="5:44" pos:end="5:46">int</name></type> <name pos:start="5:48" pos:end="5:56">data_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="66:1">{<block_content pos:start="9:5" pos:end="63:5">

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">WebPContext</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:18">s</name> <init pos:start="9:20" pos:end="9:37">= <expr pos:start="9:22" pos:end="9:37"><name pos:start="9:22" pos:end="9:37"><name pos:start="9:22" pos:end="9:26">avctx</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">AVPacket</name></type> <name pos:start="11:14" pos:end="11:16">pkt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="27:5"><if pos:start="17:5" pos:end="27:5">if <condition pos:start="17:8" pos:end="17:24">(<expr pos:start="17:9" pos:end="17:23"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:23"><name pos:start="17:10" pos:end="17:10">s</name><operator pos:start="17:11" pos:end="17:12">-&gt;</operator><name pos:start="17:13" pos:end="17:23">initialized</name></name></expr>)</condition> <block pos:start="17:26" pos:end="27:5">{<block_content pos:start="19:9" pos:end="25:49">

        <expr_stmt pos:start="19:9" pos:end="19:34"><expr pos:start="19:9" pos:end="19:33"><call pos:start="19:9" pos:end="19:33"><name pos:start="19:9" pos:end="19:26">ff_vp8_decode_init</name><argument_list pos:start="19:27" pos:end="19:33">(<argument pos:start="19:28" pos:end="19:32"><expr pos:start="19:28" pos:end="19:32"><name pos:start="19:28" pos:end="19:32">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:27"><expr pos:start="21:9" pos:end="21:26"><name pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:22">initialized</name></name> <operator pos:start="21:24" pos:end="21:24">=</operator> <literal type="number" pos:start="21:26" pos:end="21:26">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="25:49"><if pos:start="23:9" pos:end="25:49">if <condition pos:start="23:12" pos:end="23:25">(<expr pos:start="23:13" pos:end="23:24"><name pos:start="23:13" pos:end="23:24"><name pos:start="23:13" pos:end="23:13">s</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:24">has_alpha</name></name></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:49"><block_content pos:start="25:13" pos:end="25:49">

            <expr_stmt pos:start="25:13" pos:end="25:49"><expr pos:start="25:13" pos:end="25:48"><name pos:start="25:13" pos:end="25:26"><name pos:start="25:13" pos:end="25:17">avctx</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:26">pix_fmt</name></name> <operator pos:start="25:28" pos:end="25:28">=</operator> <name pos:start="25:30" pos:end="25:48">AV_PIX_FMT_YUVA420P</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:20"><expr pos:start="29:5" pos:end="29:19"><name pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:15">lossless</name></name> <operator pos:start="29:17" pos:end="29:17">=</operator> <literal type="number" pos:start="29:19" pos:end="29:19">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:28">(<expr pos:start="33:9" pos:end="33:27"><name pos:start="33:9" pos:end="33:17">data_size</name> <operator pos:start="33:19" pos:end="33:19">&gt;</operator> <name pos:start="33:21" pos:end="33:27">INT_MAX</name></expr>)</condition> <block pos:start="33:30" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:36">

        <expr_stmt pos:start="35:9" pos:end="35:64"><expr pos:start="35:9" pos:end="35:63"><call pos:start="35:9" pos:end="35:63"><name pos:start="35:9" pos:end="35:14">av_log</name><argument_list pos:start="35:15" pos:end="35:63">(<argument pos:start="35:16" pos:end="35:20"><expr pos:start="35:16" pos:end="35:20"><name pos:start="35:16" pos:end="35:20">avctx</name></expr></argument>, <argument pos:start="35:23" pos:end="35:34"><expr pos:start="35:23" pos:end="35:34"><name pos:start="35:23" pos:end="35:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="35:37" pos:end="35:62"><expr pos:start="35:37" pos:end="35:62"><literal type="string" pos:start="35:37" pos:end="35:62">"unsupported chunk size\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:36">return <expr pos:start="37:16" pos:end="37:35"><name pos:start="37:16" pos:end="37:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:25"><expr pos:start="43:5" pos:end="43:24"><call pos:start="43:5" pos:end="43:24"><name pos:start="43:5" pos:end="43:18">av_init_packet</name><argument_list pos:start="43:19" pos:end="43:24">(<argument pos:start="43:20" pos:end="43:23"><expr pos:start="43:20" pos:end="43:23"><operator pos:start="43:20" pos:end="43:20">&amp;</operator><name pos:start="43:21" pos:end="43:23">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:26"><expr pos:start="45:5" pos:end="45:25"><name pos:start="45:5" pos:end="45:12"><name pos:start="45:5" pos:end="45:7">pkt</name><operator pos:start="45:8" pos:end="45:8">.</operator><name pos:start="45:9" pos:end="45:12">data</name></name> <operator pos:start="45:14" pos:end="45:14">=</operator> <name pos:start="45:16" pos:end="45:25">data_start</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:25"><expr pos:start="47:5" pos:end="47:24"><name pos:start="47:5" pos:end="47:12"><name pos:start="47:5" pos:end="47:7">pkt</name><operator pos:start="47:8" pos:end="47:8">.</operator><name pos:start="47:9" pos:end="47:12">size</name></name> <operator pos:start="47:14" pos:end="47:14">=</operator> <name pos:start="47:16" pos:end="47:24">data_size</name></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:57"><expr pos:start="51:5" pos:end="51:56"><name pos:start="51:5" pos:end="51:7">ret</name> <operator pos:start="51:9" pos:end="51:9">=</operator> <call pos:start="51:11" pos:end="51:56"><name pos:start="51:11" pos:end="51:29">ff_vp8_decode_frame</name><argument_list pos:start="51:30" pos:end="51:56">(<argument pos:start="51:31" pos:end="51:35"><expr pos:start="51:31" pos:end="51:35"><name pos:start="51:31" pos:end="51:35">avctx</name></expr></argument>, <argument pos:start="51:38" pos:end="51:38"><expr pos:start="51:38" pos:end="51:38"><name pos:start="51:38" pos:end="51:38">p</name></expr></argument>, <argument pos:start="51:41" pos:end="51:49"><expr pos:start="51:41" pos:end="51:49"><name pos:start="51:41" pos:end="51:49">got_frame</name></expr></argument>, <argument pos:start="51:52" pos:end="51:55"><expr pos:start="51:52" pos:end="51:55"><operator pos:start="51:52" pos:end="51:52">&amp;</operator><name pos:start="51:53" pos:end="51:55">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="55:5" pos:end="63:5"><if pos:start="55:5" pos:end="63:5">if <condition pos:start="55:8" pos:end="55:21">(<expr pos:start="55:9" pos:end="55:20"><name pos:start="55:9" pos:end="55:20"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:20">has_alpha</name></name></expr>)</condition> <block pos:start="55:23" pos:end="63:5">{<block_content pos:start="57:9" pos:end="59:57">

        <expr_stmt pos:start="57:9" pos:end="59:57"><expr pos:start="57:9" pos:end="59:56"><name pos:start="57:9" pos:end="57:11">ret</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <call pos:start="57:15" pos:end="59:56"><name pos:start="57:15" pos:end="57:36">vp8_lossy_decode_alpha</name><argument_list pos:start="57:37" pos:end="59:56">(<argument pos:start="57:38" pos:end="57:42"><expr pos:start="57:38" pos:end="57:42"><name pos:start="57:38" pos:end="57:42">avctx</name></expr></argument>, <argument pos:start="57:45" pos:end="57:45"><expr pos:start="57:45" pos:end="57:45"><name pos:start="57:45" pos:end="57:45">p</name></expr></argument>, <argument pos:start="57:48" pos:end="57:60"><expr pos:start="57:48" pos:end="57:60"><name pos:start="57:48" pos:end="57:60"><name pos:start="57:48" pos:end="57:48">s</name><operator pos:start="57:49" pos:end="57:50">-&gt;</operator><name pos:start="57:51" pos:end="57:60">alpha_data</name></name></expr></argument>,

                                     <argument pos:start="59:38" pos:end="59:55"><expr pos:start="59:38" pos:end="59:55"><name pos:start="59:38" pos:end="59:55"><name pos:start="59:38" pos:end="59:38">s</name><operator pos:start="59:39" pos:end="59:40">-&gt;</operator><name pos:start="59:41" pos:end="59:55">alpha_data_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    </block_content>}</block></if></if_stmt>


</block_content>}</block></function></unit>
