<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15353.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:30">omap_mpui_read</name><parameter_list pos:start="1:31" pos:end="3:45">(<parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:43"><name pos:start="1:32" pos:end="1:35">void</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:43">opaque</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:68"><decl pos:start="1:46" pos:end="1:68"><type pos:start="1:46" pos:end="1:68"><name pos:start="1:46" pos:end="1:63">target_phys_addr_t</name></type> <name pos:start="1:65" pos:end="1:68">addr</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:44"><decl pos:start="3:32" pos:end="3:44"><type pos:start="3:32" pos:end="3:44"><name pos:start="3:32" pos:end="3:39">unsigned</name></type> <name pos:start="3:41" pos:end="3:44">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="63:1">{<block_content pos:start="7:5" pos:end="61:13">

    <decl_stmt pos:start="7:5" pos:end="7:68"><decl pos:start="7:5" pos:end="7:67"><type pos:start="7:5" pos:end="7:29"><name pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:27">omap_mpu_state_s</name></name> <modifier pos:start="7:29" pos:end="7:29">*</modifier></type><name pos:start="7:30" pos:end="7:30">s</name> <init pos:start="7:32" pos:end="7:67">= <expr pos:start="7:34" pos:end="7:67"><operator pos:start="7:34" pos:end="7:34">(</operator>struct <name pos:start="7:42" pos:end="7:57">omap_mpu_state_s</name> <operator pos:start="7:59" pos:end="7:59">*</operator><operator pos:start="7:60" pos:end="7:60">)</operator> <name pos:start="7:62" pos:end="7:67">opaque</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:18">(<expr pos:start="11:9" pos:end="11:17"><name pos:start="11:9" pos:end="11:12">size</name> <operator pos:start="11:14" pos:end="11:15">!=</operator> <literal type="number" pos:start="11:17" pos:end="11:17">4</literal></expr>)</condition> <block pos:start="11:20" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:50">

        <return pos:start="13:9" pos:end="13:50">return <expr pos:start="13:16" pos:end="13:49"><call pos:start="13:16" pos:end="13:49"><name pos:start="13:16" pos:end="13:35">omap_badwidth_read32</name><argument_list pos:start="13:36" pos:end="13:49">(<argument pos:start="13:37" pos:end="13:42"><expr pos:start="13:37" pos:end="13:42"><name pos:start="13:37" pos:end="13:42">opaque</name></expr></argument>, <argument pos:start="13:45" pos:end="13:48"><expr pos:start="13:45" pos:end="13:48"><name pos:start="13:45" pos:end="13:48">addr</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="19:5" pos:end="55:5">switch <condition pos:start="19:12" pos:end="19:17">(<expr pos:start="19:13" pos:end="19:16"><name pos:start="19:13" pos:end="19:16">addr</name></expr>)</condition> <block pos:start="19:19" pos:end="55:5">{<block_content pos:start="21:5" pos:end="53:26">

    <case pos:start="21:5" pos:end="21:14">case <expr pos:start="21:10" pos:end="21:13"><literal type="number" pos:start="21:10" pos:end="21:13">0x00</literal></expr>:</case>	<comment type="block" pos:start="21:17" pos:end="21:26">/* CTRL */</comment>

        <return pos:start="23:9" pos:end="23:28">return <expr pos:start="23:16" pos:end="23:27"><name pos:start="23:16" pos:end="23:27"><name pos:start="23:16" pos:end="23:16">s</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:27">mpui_ctrl</name></name></expr>;</return>

    <case pos:start="25:5" pos:end="25:14">case <expr pos:start="25:10" pos:end="25:13"><literal type="number" pos:start="25:10" pos:end="25:13">0x04</literal></expr>:</case>	<comment type="block" pos:start="25:17" pos:end="25:32">/* DEBUG_ADDR */</comment>

        <return pos:start="27:9" pos:end="27:26">return <expr pos:start="27:16" pos:end="27:25"><literal type="number" pos:start="27:16" pos:end="27:25">0x01ffffff</literal></expr>;</return>

    <case pos:start="29:5" pos:end="29:14">case <expr pos:start="29:10" pos:end="29:13"><literal type="number" pos:start="29:10" pos:end="29:13">0x08</literal></expr>:</case>	<comment type="block" pos:start="29:17" pos:end="29:32">/* DEBUG_DATA */</comment>

        <return pos:start="31:9" pos:end="31:26">return <expr pos:start="31:16" pos:end="31:25"><literal type="number" pos:start="31:16" pos:end="31:25">0xffffffff</literal></expr>;</return>

    <case pos:start="33:5" pos:end="33:14">case <expr pos:start="33:10" pos:end="33:13"><literal type="number" pos:start="33:10" pos:end="33:13">0x0c</literal></expr>:</case>	<comment type="block" pos:start="33:17" pos:end="33:32">/* DEBUG_FLAG */</comment>

        <return pos:start="35:9" pos:end="35:26">return <expr pos:start="35:16" pos:end="35:25"><literal type="number" pos:start="35:16" pos:end="35:25">0x00000800</literal></expr>;</return>

    <case pos:start="37:5" pos:end="37:14">case <expr pos:start="37:10" pos:end="37:13"><literal type="number" pos:start="37:10" pos:end="37:13">0x10</literal></expr>:</case>	<comment type="block" pos:start="37:17" pos:end="37:28">/* STATUS */</comment>

        <return pos:start="39:9" pos:end="39:26">return <expr pos:start="39:16" pos:end="39:25"><literal type="number" pos:start="39:16" pos:end="39:25">0x00000000</literal></expr>;</return>



    <comment type="block" pos:start="43:5" pos:end="43:24">/* Not in OMAP310 */</comment>

    <case pos:start="45:5" pos:end="45:14">case <expr pos:start="45:10" pos:end="45:13"><literal type="number" pos:start="45:10" pos:end="45:13">0x14</literal></expr>:</case>	<comment type="block" pos:start="45:17" pos:end="45:32">/* DSP_STATUS */</comment>

    <case pos:start="47:5" pos:end="47:14">case <expr pos:start="47:10" pos:end="47:13"><literal type="number" pos:start="47:10" pos:end="47:13">0x18</literal></expr>:</case>	<comment type="block" pos:start="47:17" pos:end="47:37">/* DSP_BOOT_CONFIG */</comment>

        <return pos:start="49:9" pos:end="49:26">return <expr pos:start="49:16" pos:end="49:25"><literal type="number" pos:start="49:16" pos:end="49:25">0x00000000</literal></expr>;</return>

    <case pos:start="51:5" pos:end="51:14">case <expr pos:start="51:10" pos:end="51:13"><literal type="number" pos:start="51:10" pos:end="51:13">0x1c</literal></expr>:</case>	<comment type="block" pos:start="51:17" pos:end="51:37">/* DSP_MPUI_CONFIG */</comment>

        <return pos:start="53:9" pos:end="53:26">return <expr pos:start="53:16" pos:end="53:25"><literal type="number" pos:start="53:16" pos:end="53:25">0x0000ffff</literal></expr>;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="59:5" pos:end="59:23"><expr pos:start="59:5" pos:end="59:22"><call pos:start="59:5" pos:end="59:22"><name pos:start="59:5" pos:end="59:16">OMAP_BAD_REG</name><argument_list pos:start="59:17" pos:end="59:22">(<argument pos:start="59:18" pos:end="59:21"><expr pos:start="59:18" pos:end="59:21"><name pos:start="59:18" pos:end="59:21">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="61:5" pos:end="61:13">return <expr pos:start="61:12" pos:end="61:12"><literal type="number" pos:start="61:12" pos:end="61:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
