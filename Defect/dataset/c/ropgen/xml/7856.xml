<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7856.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">intel_hda_update_irq</name><parameter_list pos:start="1:33" pos:end="1:50">(<parameter pos:start="1:34" pos:end="1:49"><decl pos:start="1:34" pos:end="1:49"><type pos:start="1:34" pos:end="1:48"><name pos:start="1:34" pos:end="1:46">IntelHDAState</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">d</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:5">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">bool</name></type> <name pos:start="5:10" pos:end="5:12">msi</name> <init pos:start="5:14" pos:end="5:35">= <expr pos:start="5:16" pos:end="5:35"><call pos:start="5:16" pos:end="5:35"><name pos:start="5:16" pos:end="5:26">msi_enabled</name><argument_list pos:start="5:27" pos:end="5:35">(<argument pos:start="5:28" pos:end="5:34"><expr pos:start="5:28" pos:end="5:34"><operator pos:start="5:28" pos:end="5:28">&amp;</operator><name pos:start="5:29" pos:end="5:34"><name pos:start="5:29" pos:end="5:29">d</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:34">pci</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">level</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:32"><expr pos:start="11:5" pos:end="11:31"><call pos:start="11:5" pos:end="11:31"><name pos:start="11:5" pos:end="11:28">intel_hda_update_int_sts</name><argument_list pos:start="11:29" pos:end="11:31">(<argument pos:start="11:30" pos:end="11:30"><expr pos:start="11:30" pos:end="11:30"><name pos:start="11:30" pos:end="11:30">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="21:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:59">(<expr pos:start="13:9" pos:end="13:58"><name pos:start="13:9" pos:end="13:18"><name pos:start="13:9" pos:end="13:9">d</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:18">int_sts</name></name> <operator pos:start="13:20" pos:end="13:20">&amp;</operator> <operator pos:start="13:22" pos:end="13:22">(</operator><literal type="number" pos:start="13:23" pos:end="13:24">1U</literal> <operator pos:start="13:26" pos:end="13:27">&lt;&lt;</operator> <literal type="number" pos:start="13:29" pos:end="13:30">31</literal><operator pos:start="13:31" pos:end="13:31">)</operator> <operator pos:start="13:33" pos:end="13:34">&amp;&amp;</operator> <name pos:start="13:36" pos:end="13:45"><name pos:start="13:36" pos:end="13:36">d</name><operator pos:start="13:37" pos:end="13:38">-&gt;</operator><name pos:start="13:39" pos:end="13:45">int_ctl</name></name> <operator pos:start="13:47" pos:end="13:47">&amp;</operator> <operator pos:start="13:49" pos:end="13:49">(</operator><literal type="number" pos:start="13:50" pos:end="13:51">1U</literal> <operator pos:start="13:53" pos:end="13:54">&lt;&lt;</operator> <literal type="number" pos:start="13:56" pos:end="13:57">31</literal><operator pos:start="13:58" pos:end="13:58">)</operator></expr>)</condition> <block pos:start="13:61" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:18">

        <expr_stmt pos:start="15:9" pos:end="15:18"><expr pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:13">level</name> <operator pos:start="15:15" pos:end="15:15">=</operator> <literal type="number" pos:start="15:17" pos:end="15:17">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="17:7" pos:end="21:5">else <block pos:start="17:12" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:18">

        <expr_stmt pos:start="19:9" pos:end="19:18"><expr pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:13">level</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <literal type="number" pos:start="19:17" pos:end="19:17">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="25:40"><expr pos:start="23:5" pos:end="25:39"><call pos:start="23:5" pos:end="25:39"><name pos:start="23:5" pos:end="23:10">dprint</name><argument_list pos:start="23:11" pos:end="25:39">(<argument pos:start="23:12" pos:end="23:12"><expr pos:start="23:12" pos:end="23:12"><name pos:start="23:12" pos:end="23:12">d</name></expr></argument>, <argument pos:start="23:15" pos:end="23:15"><expr pos:start="23:15" pos:end="23:15"><literal type="number" pos:start="23:15" pos:end="23:15">2</literal></expr></argument>, <argument pos:start="23:18" pos:end="23:38"><expr pos:start="23:18" pos:end="23:38"><literal type="string" pos:start="23:18" pos:end="23:38">"%s: level %d [%s]\n"</literal></expr></argument>, <argument pos:start="23:41" pos:end="23:52"><expr pos:start="23:41" pos:end="23:52"><name pos:start="23:41" pos:end="23:52">__FUNCTION__</name></expr></argument>,

           <argument pos:start="25:12" pos:end="25:16"><expr pos:start="25:12" pos:end="25:16"><name pos:start="25:12" pos:end="25:16">level</name></expr></argument>, <argument pos:start="25:19" pos:end="25:38"><expr pos:start="25:19" pos:end="25:38"><ternary pos:start="25:19" pos:end="25:38"><condition pos:start="25:19" pos:end="25:23"><expr pos:start="25:19" pos:end="25:21"><name pos:start="25:19" pos:end="25:21">msi</name></expr> ?</condition><then pos:start="25:25" pos:end="25:29"> <expr pos:start="25:25" pos:end="25:29"><literal type="string" pos:start="25:25" pos:end="25:29">"msi"</literal></expr> </then><else pos:start="25:31" pos:end="25:38">: <expr pos:start="25:33" pos:end="25:38"><literal type="string" pos:start="25:33" pos:end="25:38">"intx"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="39:5"><if pos:start="27:5" pos:end="35:5">if <condition pos:start="27:8" pos:end="27:12">(<expr pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:11">msi</name></expr>)</condition> <block pos:start="27:14" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:9">

        <if_stmt pos:start="29:9" pos:end="33:9"><if pos:start="29:9" pos:end="33:9">if <condition pos:start="29:12" pos:end="29:18">(<expr pos:start="29:13" pos:end="29:17"><name pos:start="29:13" pos:end="29:17">level</name></expr>)</condition> <block pos:start="29:20" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:35">

            <expr_stmt pos:start="31:13" pos:end="31:35"><expr pos:start="31:13" pos:end="31:34"><call pos:start="31:13" pos:end="31:34"><name pos:start="31:13" pos:end="31:22">msi_notify</name><argument_list pos:start="31:23" pos:end="31:34">(<argument pos:start="31:24" pos:end="31:30"><expr pos:start="31:24" pos:end="31:30"><operator pos:start="31:24" pos:end="31:24">&amp;</operator><name pos:start="31:25" pos:end="31:30"><name pos:start="31:25" pos:end="31:25">d</name><operator pos:start="31:26" pos:end="31:27">-&gt;</operator><name pos:start="31:28" pos:end="31:30">pci</name></name></expr></argument>, <argument pos:start="31:33" pos:end="31:33"><expr pos:start="31:33" pos:end="31:33"><literal type="number" pos:start="31:33" pos:end="31:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="35:7" pos:end="39:5">else <block pos:start="35:12" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:36">

        <expr_stmt pos:start="37:9" pos:end="37:36"><expr pos:start="37:9" pos:end="37:35"><call pos:start="37:9" pos:end="37:35"><name pos:start="37:9" pos:end="37:19">pci_set_irq</name><argument_list pos:start="37:20" pos:end="37:35">(<argument pos:start="37:21" pos:end="37:27"><expr pos:start="37:21" pos:end="37:27"><operator pos:start="37:21" pos:end="37:21">&amp;</operator><name pos:start="37:22" pos:end="37:27"><name pos:start="37:22" pos:end="37:22">d</name><operator pos:start="37:23" pos:end="37:24">-&gt;</operator><name pos:start="37:25" pos:end="37:27">pci</name></name></expr></argument>, <argument pos:start="37:30" pos:end="37:34"><expr pos:start="37:30" pos:end="37:34"><name pos:start="37:30" pos:end="37:34">level</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
