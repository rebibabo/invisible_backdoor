<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12863.c" pos:tabs="8"><function pos:start="1:1" pos:end="127:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">mpegts_set_stream_info</name><parameter_list pos:start="1:34" pos:end="3:79">(<parameter pos:start="1:35" pos:end="1:46"><decl pos:start="1:35" pos:end="1:46"><type pos:start="1:35" pos:end="1:46"><name pos:start="1:35" pos:end="1:42">AVStream</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:46">st</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:63"><decl pos:start="1:49" pos:end="1:63"><type pos:start="1:49" pos:end="1:63"><name pos:start="1:49" pos:end="1:58">PESContext</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">pes</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:54"><decl pos:start="3:35" pos:end="3:54"><type pos:start="3:35" pos:end="3:54"><name pos:start="3:35" pos:end="3:42">uint32_t</name></type> <name pos:start="3:44" pos:end="3:54">stream_type</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:78"><decl pos:start="3:57" pos:end="3:78"><type pos:start="3:57" pos:end="3:78"><name pos:start="3:57" pos:end="3:64">uint32_t</name></type> <name pos:start="3:66" pos:end="3:78">prog_reg_desc</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="127:1">{<block_content pos:start="7:5" pos:end="125:13">

    <decl_stmt pos:start="7:5" pos:end="7:46"><decl pos:start="7:5" pos:end="7:45"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:22">old_codec_type</name><init pos:start="7:23" pos:end="7:45">= <expr pos:start="7:25" pos:end="7:45"><name pos:start="7:25" pos:end="7:45"><name pos:start="7:25" pos:end="7:26">st</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:33">codec</name><operator pos:start="7:34" pos:end="7:35">-&gt;</operator><name pos:start="7:36" pos:end="7:45">codec_type</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:44"><decl pos:start="9:5" pos:end="9:43"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:20">old_codec_id</name>  <init pos:start="9:23" pos:end="9:43">= <expr pos:start="9:25" pos:end="9:43"><name pos:start="9:25" pos:end="9:43"><name pos:start="9:25" pos:end="9:26">st</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:33">codec</name><operator pos:start="9:34" pos:end="9:35">-&gt;</operator><name pos:start="9:36" pos:end="9:43">codec_id</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:71">(<expr pos:start="13:9" pos:end="13:70"><name pos:start="13:9" pos:end="13:20">old_codec_id</name> <operator pos:start="13:22" pos:end="13:23">!=</operator> <name pos:start="13:25" pos:end="13:40">AV_CODEC_ID_NONE</name> <operator pos:start="13:42" pos:end="13:43">&amp;&amp;</operator> <call pos:start="13:45" pos:end="13:70"><name pos:start="13:45" pos:end="13:59">avcodec_is_open</name><argument_list pos:start="13:60" pos:end="13:70">(<argument pos:start="13:61" pos:end="13:69"><expr pos:start="13:61" pos:end="13:69"><name pos:start="13:61" pos:end="13:69"><name pos:start="13:61" pos:end="13:62">st</name><operator pos:start="13:63" pos:end="13:64">-&gt;</operator><name pos:start="13:65" pos:end="13:69">codec</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:73" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:17">

        <expr_stmt pos:start="15:9" pos:end="15:85"><expr pos:start="15:9" pos:end="15:84"><call pos:start="15:9" pos:end="15:84"><name pos:start="15:9" pos:end="15:14">av_log</name><argument_list pos:start="15:15" pos:end="15:84">(<argument pos:start="15:16" pos:end="15:26"><expr pos:start="15:16" pos:end="15:26"><name pos:start="15:16" pos:end="15:26"><name pos:start="15:16" pos:end="15:18">pes</name><operator pos:start="15:19" pos:end="15:20">-&gt;</operator><name pos:start="15:21" pos:end="15:26">stream</name></name></expr></argument>, <argument pos:start="15:29" pos:end="15:40"><expr pos:start="15:29" pos:end="15:40"><name pos:start="15:29" pos:end="15:40">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="15:43" pos:end="15:83"><expr pos:start="15:43" pos:end="15:83"><literal type="string" pos:start="15:43" pos:end="15:83">"cannot set stream info, codec is open\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:17">return <expr pos:start="17:16" pos:end="17:16"><literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:42"><expr pos:start="23:5" pos:end="23:41"><call pos:start="23:5" pos:end="23:41"><name pos:start="23:5" pos:end="23:23">avpriv_set_pts_info</name><argument_list pos:start="23:24" pos:end="23:41">(<argument pos:start="23:25" pos:end="23:26"><expr pos:start="23:25" pos:end="23:26"><name pos:start="23:25" pos:end="23:26">st</name></expr></argument>, <argument pos:start="23:29" pos:end="23:30"><expr pos:start="23:29" pos:end="23:30"><literal type="number" pos:start="23:29" pos:end="23:30">33</literal></expr></argument>, <argument pos:start="23:33" pos:end="23:33"><expr pos:start="23:33" pos:end="23:33"><literal type="number" pos:start="23:33" pos:end="23:33">1</literal></expr></argument>, <argument pos:start="23:36" pos:end="23:40"><expr pos:start="23:36" pos:end="23:40"><literal type="number" pos:start="23:36" pos:end="23:40">90000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:24"><expr pos:start="25:5" pos:end="25:23"><name pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:6">st</name><operator pos:start="25:7" pos:end="25:8">-&gt;</operator><name pos:start="25:9" pos:end="25:17">priv_data</name></name> <operator pos:start="25:19" pos:end="25:19">=</operator> <name pos:start="25:21" pos:end="25:23">pes</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:46"><expr pos:start="27:5" pos:end="27:45"><name pos:start="27:5" pos:end="27:25"><name pos:start="27:5" pos:end="27:6">st</name><operator pos:start="27:7" pos:end="27:8">-&gt;</operator><name pos:start="27:9" pos:end="27:13">codec</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:25">codec_type</name></name> <operator pos:start="27:27" pos:end="27:27">=</operator> <name pos:start="27:29" pos:end="27:45">AVMEDIA_TYPE_DATA</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:45"><expr pos:start="29:5" pos:end="29:44"><name pos:start="29:5" pos:end="29:23"><name pos:start="29:5" pos:end="29:6">st</name><operator pos:start="29:7" pos:end="29:8">-&gt;</operator><name pos:start="29:9" pos:end="29:13">codec</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:23">codec_id</name></name>   <operator pos:start="29:27" pos:end="29:27">=</operator> <name pos:start="29:29" pos:end="29:44">AV_CODEC_ID_NONE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:43"><expr pos:start="31:5" pos:end="31:42"><name pos:start="31:5" pos:end="31:20"><name pos:start="31:5" pos:end="31:6">st</name><operator pos:start="31:7" pos:end="31:8">-&gt;</operator><name pos:start="31:9" pos:end="31:20">need_parsing</name></name> <operator pos:start="31:22" pos:end="31:22">=</operator> <name pos:start="31:24" pos:end="31:42">AVSTREAM_PARSE_FULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:17"><expr pos:start="33:5" pos:end="33:16"><name pos:start="33:5" pos:end="33:11"><name pos:start="33:5" pos:end="33:7">pes</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:11">st</name></name> <operator pos:start="33:13" pos:end="33:13">=</operator> <name pos:start="33:15" pos:end="33:16">st</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:35"><expr pos:start="35:5" pos:end="35:34"><name pos:start="35:5" pos:end="35:20"><name pos:start="35:5" pos:end="35:7">pes</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:20">stream_type</name></name> <operator pos:start="35:22" pos:end="35:22">=</operator> <name pos:start="35:24" pos:end="35:34">stream_type</name></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="43:73"><expr pos:start="39:5" pos:end="43:72"><call pos:start="39:5" pos:end="43:72"><name pos:start="39:5" pos:end="39:10">av_log</name><argument_list pos:start="39:11" pos:end="43:72">(<argument pos:start="39:12" pos:end="39:22"><expr pos:start="39:12" pos:end="39:22"><name pos:start="39:12" pos:end="39:22"><name pos:start="39:12" pos:end="39:14">pes</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:22">stream</name></name></expr></argument>, <argument pos:start="39:25" pos:end="39:36"><expr pos:start="39:25" pos:end="39:36"><name pos:start="39:25" pos:end="39:36">AV_LOG_DEBUG</name></expr></argument>,

           <argument pos:start="41:12" pos:end="41:65"><expr pos:start="41:12" pos:end="41:65"><literal type="string" pos:start="41:12" pos:end="41:65">"stream=%d stream_type=%x pid=%x prog_reg_desc=%.4s\n"</literal></expr></argument>,

           <argument pos:start="43:12" pos:end="43:20"><expr pos:start="43:12" pos:end="43:20"><name pos:start="43:12" pos:end="43:20"><name pos:start="43:12" pos:end="43:13">st</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:20">index</name></name></expr></argument>, <argument pos:start="43:23" pos:end="43:38"><expr pos:start="43:23" pos:end="43:38"><name pos:start="43:23" pos:end="43:38"><name pos:start="43:23" pos:end="43:25">pes</name><operator pos:start="43:26" pos:end="43:27">-&gt;</operator><name pos:start="43:28" pos:end="43:38">stream_type</name></name></expr></argument>, <argument pos:start="43:41" pos:end="43:48"><expr pos:start="43:41" pos:end="43:48"><name pos:start="43:41" pos:end="43:48"><name pos:start="43:41" pos:end="43:43">pes</name><operator pos:start="43:44" pos:end="43:45">-&gt;</operator><name pos:start="43:46" pos:end="43:48">pid</name></name></expr></argument>, <argument pos:start="43:51" pos:end="43:71"><expr pos:start="43:51" pos:end="43:71"><operator pos:start="43:51" pos:end="43:51">(</operator><name pos:start="43:52" pos:end="43:55">char</name><operator pos:start="43:56" pos:end="43:56">*</operator><operator pos:start="43:57" pos:end="43:57">)</operator><operator pos:start="43:58" pos:end="43:58">&amp;</operator><name pos:start="43:59" pos:end="43:71">prog_reg_desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:44"><expr pos:start="47:5" pos:end="47:43"><name pos:start="47:5" pos:end="47:24"><name pos:start="47:5" pos:end="47:6">st</name><operator pos:start="47:7" pos:end="47:8">-&gt;</operator><name pos:start="47:9" pos:end="47:13">codec</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:24">codec_tag</name></name> <operator pos:start="47:26" pos:end="47:26">=</operator> <name pos:start="47:28" pos:end="47:43"><name pos:start="47:28" pos:end="47:30">pes</name><operator pos:start="47:31" pos:end="47:32">-&gt;</operator><name pos:start="47:33" pos:end="47:43">stream_type</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:61"><expr pos:start="51:5" pos:end="51:60"><call pos:start="51:5" pos:end="51:60"><name pos:start="51:5" pos:end="51:27">mpegts_find_stream_type</name><argument_list pos:start="51:28" pos:end="51:60">(<argument pos:start="51:29" pos:end="51:30"><expr pos:start="51:29" pos:end="51:30"><name pos:start="51:29" pos:end="51:30">st</name></expr></argument>, <argument pos:start="51:33" pos:end="51:48"><expr pos:start="51:33" pos:end="51:48"><name pos:start="51:33" pos:end="51:48"><name pos:start="51:33" pos:end="51:35">pes</name><operator pos:start="51:36" pos:end="51:37">-&gt;</operator><name pos:start="51:38" pos:end="51:48">stream_type</name></name></expr></argument>, <argument pos:start="51:51" pos:end="51:59"><expr pos:start="51:51" pos:end="51:59"><name pos:start="51:51" pos:end="51:59">ISO_types</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="109:5"><if pos:start="53:5" pos:end="109:5">if <condition pos:start="53:8" pos:end="57:48">(<expr pos:start="53:9" pos:end="57:47"><operator pos:start="53:9" pos:end="53:9">(</operator><name pos:start="53:10" pos:end="53:22">prog_reg_desc</name> <operator pos:start="53:24" pos:end="53:25">==</operator> <call pos:start="53:27" pos:end="53:41"><name pos:start="53:27" pos:end="53:33">AV_RL32</name><argument_list pos:start="53:34" pos:end="53:41">(<argument pos:start="53:35" pos:end="53:40"><expr pos:start="53:35" pos:end="53:40"><literal type="string" pos:start="53:35" pos:end="53:40">"HDMV"</literal></expr></argument>)</argument_list></call> <operator pos:start="53:43" pos:end="53:44">||</operator>

         <name pos:start="55:10" pos:end="55:22">prog_reg_desc</name> <operator pos:start="55:24" pos:end="55:25">==</operator> <call pos:start="55:27" pos:end="55:41"><name pos:start="55:27" pos:end="55:33">AV_RL32</name><argument_list pos:start="55:34" pos:end="55:41">(<argument pos:start="55:35" pos:end="55:40"><expr pos:start="55:35" pos:end="55:40"><literal type="string" pos:start="55:35" pos:end="55:40">"HDPR"</literal></expr></argument>)</argument_list></call><operator pos:start="55:42" pos:end="55:42">)</operator> <operator pos:start="55:44" pos:end="55:45">&amp;&amp;</operator>

        <name pos:start="57:9" pos:end="57:27"><name pos:start="57:9" pos:end="57:10">st</name><operator pos:start="57:11" pos:end="57:12">-&gt;</operator><name pos:start="57:13" pos:end="57:17">codec</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:27">codec_id</name></name> <operator pos:start="57:29" pos:end="57:30">==</operator> <name pos:start="57:32" pos:end="57:47">AV_CODEC_ID_NONE</name></expr>)</condition> <block pos:start="57:50" pos:end="109:5">{<block_content pos:start="59:9" pos:end="107:9">

        <expr_stmt pos:start="59:9" pos:end="59:66"><expr pos:start="59:9" pos:end="59:65"><call pos:start="59:9" pos:end="59:65"><name pos:start="59:9" pos:end="59:31">mpegts_find_stream_type</name><argument_list pos:start="59:32" pos:end="59:65">(<argument pos:start="59:33" pos:end="59:34"><expr pos:start="59:33" pos:end="59:34"><name pos:start="59:33" pos:end="59:34">st</name></expr></argument>, <argument pos:start="59:37" pos:end="59:52"><expr pos:start="59:37" pos:end="59:52"><name pos:start="59:37" pos:end="59:52"><name pos:start="59:37" pos:end="59:39">pes</name><operator pos:start="59:40" pos:end="59:41">-&gt;</operator><name pos:start="59:42" pos:end="59:52">stream_type</name></name></expr></argument>, <argument pos:start="59:55" pos:end="59:64"><expr pos:start="59:55" pos:end="59:64"><name pos:start="59:55" pos:end="59:64">HDMV_types</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="61:9" pos:end="107:9"><if pos:start="61:9" pos:end="107:9">if <condition pos:start="61:12" pos:end="61:37">(<expr pos:start="61:13" pos:end="61:36"><name pos:start="61:13" pos:end="61:28"><name pos:start="61:13" pos:end="61:15">pes</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:28">stream_type</name></name> <operator pos:start="61:30" pos:end="61:31">==</operator> <literal type="number" pos:start="61:33" pos:end="61:36">0x83</literal></expr>)</condition> <block pos:start="61:39" pos:end="107:9">{<block_content pos:start="67:13" pos:end="105:51">

            <comment type="line" pos:start="63:13" pos:end="63:75">// HDMV TrueHD streams also contain an AC3 coded version of the</comment>

            <comment type="line" pos:start="65:13" pos:end="65:57">// audio track - add a second stream for this</comment>

            <decl_stmt pos:start="67:13" pos:end="67:29"><decl pos:start="67:13" pos:end="67:28"><type pos:start="67:13" pos:end="67:22"><name pos:start="67:13" pos:end="67:20">AVStream</name> <modifier pos:start="67:22" pos:end="67:22">*</modifier></type><name pos:start="67:23" pos:end="67:28">sub_st</name></decl>;</decl_stmt>

            <comment type="line" pos:start="69:13" pos:end="69:57">// priv_data cannot be shared between streams</comment>

            <decl_stmt pos:start="71:13" pos:end="71:62"><decl pos:start="71:13" pos:end="71:61"><type pos:start="71:13" pos:end="71:24"><name pos:start="71:13" pos:end="71:22">PESContext</name> <modifier pos:start="71:24" pos:end="71:24">*</modifier></type><name pos:start="71:25" pos:end="71:31">sub_pes</name> <init pos:start="71:33" pos:end="71:61">= <expr pos:start="71:35" pos:end="71:61"><call pos:start="71:35" pos:end="71:61"><name pos:start="71:35" pos:end="71:43">av_malloc</name><argument_list pos:start="71:44" pos:end="71:61">(<argument pos:start="71:45" pos:end="71:60"><expr pos:start="71:45" pos:end="71:60"><sizeof pos:start="71:45" pos:end="71:60">sizeof<argument_list pos:start="71:51" pos:end="71:60">(<argument pos:start="71:52" pos:end="71:59"><expr pos:start="71:52" pos:end="71:59"><operator pos:start="71:52" pos:end="71:52">*</operator><name pos:start="71:53" pos:end="71:59">sub_pes</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="73:13" pos:end="75:39"><if pos:start="73:13" pos:end="75:39">if <condition pos:start="73:16" pos:end="73:25">(<expr pos:start="73:17" pos:end="73:24"><operator pos:start="73:17" pos:end="73:17">!</operator><name pos:start="73:18" pos:end="73:24">sub_pes</name></expr>)</condition><block type="pseudo" pos:start="75:17" pos:end="75:39"><block_content pos:start="75:17" pos:end="75:39">

                <return pos:start="75:17" pos:end="75:39">return <expr pos:start="75:24" pos:end="75:38"><call pos:start="75:24" pos:end="75:38"><name pos:start="75:24" pos:end="75:30">AVERROR</name><argument_list pos:start="75:31" pos:end="75:38">(<argument pos:start="75:32" pos:end="75:37"><expr pos:start="75:32" pos:end="75:37"><name pos:start="75:32" pos:end="75:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:51"><expr pos:start="77:13" pos:end="77:50"><call pos:start="77:13" pos:end="77:50"><name pos:start="77:13" pos:end="77:18">memcpy</name><argument_list pos:start="77:19" pos:end="77:50">(<argument pos:start="77:20" pos:end="77:26"><expr pos:start="77:20" pos:end="77:26"><name pos:start="77:20" pos:end="77:26">sub_pes</name></expr></argument>, <argument pos:start="77:29" pos:end="77:31"><expr pos:start="77:29" pos:end="77:31"><name pos:start="77:29" pos:end="77:31">pes</name></expr></argument>, <argument pos:start="77:34" pos:end="77:49"><expr pos:start="77:34" pos:end="77:49"><sizeof pos:start="77:34" pos:end="77:49">sizeof<argument_list pos:start="77:40" pos:end="77:49">(<argument pos:start="77:41" pos:end="77:48"><expr pos:start="77:41" pos:end="77:48"><operator pos:start="77:41" pos:end="77:41">*</operator><name pos:start="77:42" pos:end="77:48">sub_pes</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="81:13" pos:end="81:60"><expr pos:start="81:13" pos:end="81:59"><name pos:start="81:13" pos:end="81:18">sub_st</name> <operator pos:start="81:20" pos:end="81:20">=</operator> <call pos:start="81:22" pos:end="81:59"><name pos:start="81:22" pos:end="81:40">avformat_new_stream</name><argument_list pos:start="81:41" pos:end="81:59">(<argument pos:start="81:42" pos:end="81:52"><expr pos:start="81:42" pos:end="81:52"><name pos:start="81:42" pos:end="81:52"><name pos:start="81:42" pos:end="81:44">pes</name><operator pos:start="81:45" pos:end="81:46">-&gt;</operator><name pos:start="81:47" pos:end="81:52">stream</name></name></expr></argument>, <argument pos:start="81:55" pos:end="81:58"><expr pos:start="81:55" pos:end="81:58"><name pos:start="81:55" pos:end="81:58">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="83:13" pos:end="89:13"><if pos:start="83:13" pos:end="89:13">if <condition pos:start="83:16" pos:end="83:24">(<expr pos:start="83:17" pos:end="83:23"><operator pos:start="83:17" pos:end="83:17">!</operator><name pos:start="83:18" pos:end="83:23">sub_st</name></expr>)</condition> <block pos:start="83:26" pos:end="89:13">{<block_content pos:start="85:17" pos:end="87:39">

                <expr_stmt pos:start="85:17" pos:end="85:33"><expr pos:start="85:17" pos:end="85:32"><call pos:start="85:17" pos:end="85:32"><name pos:start="85:17" pos:end="85:23">av_free</name><argument_list pos:start="85:24" pos:end="85:32">(<argument pos:start="85:25" pos:end="85:31"><expr pos:start="85:25" pos:end="85:31"><name pos:start="85:25" pos:end="85:31">sub_pes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="87:17" pos:end="87:39">return <expr pos:start="87:24" pos:end="87:38"><call pos:start="87:24" pos:end="87:38"><name pos:start="87:24" pos:end="87:30">AVERROR</name><argument_list pos:start="87:31" pos:end="87:38">(<argument pos:start="87:32" pos:end="87:37"><expr pos:start="87:32" pos:end="87:37"><name pos:start="87:32" pos:end="87:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="93:13" pos:end="93:34"><expr pos:start="93:13" pos:end="93:33"><name pos:start="93:13" pos:end="93:22"><name pos:start="93:13" pos:end="93:18">sub_st</name><operator pos:start="93:19" pos:end="93:20">-&gt;</operator><name pos:start="93:21" pos:end="93:22">id</name></name> <operator pos:start="93:24" pos:end="93:24">=</operator> <name pos:start="93:26" pos:end="93:33"><name pos:start="93:26" pos:end="93:28">pes</name><operator pos:start="93:29" pos:end="93:30">-&gt;</operator><name pos:start="93:31" pos:end="93:33">pid</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:54"><expr pos:start="95:13" pos:end="95:53"><call pos:start="95:13" pos:end="95:53"><name pos:start="95:13" pos:end="95:31">avpriv_set_pts_info</name><argument_list pos:start="95:32" pos:end="95:53">(<argument pos:start="95:33" pos:end="95:38"><expr pos:start="95:33" pos:end="95:38"><name pos:start="95:33" pos:end="95:38">sub_st</name></expr></argument>, <argument pos:start="95:41" pos:end="95:42"><expr pos:start="95:41" pos:end="95:42"><literal type="number" pos:start="95:41" pos:end="95:42">33</literal></expr></argument>, <argument pos:start="95:45" pos:end="95:45"><expr pos:start="95:45" pos:end="95:45"><literal type="number" pos:start="95:45" pos:end="95:45">1</literal></expr></argument>, <argument pos:start="95:48" pos:end="95:52"><expr pos:start="95:48" pos:end="95:52"><literal type="number" pos:start="95:48" pos:end="95:52">90000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:40"><expr pos:start="97:13" pos:end="97:39"><name pos:start="97:13" pos:end="97:29"><name pos:start="97:13" pos:end="97:18">sub_st</name><operator pos:start="97:19" pos:end="97:20">-&gt;</operator><name pos:start="97:21" pos:end="97:29">priv_data</name></name> <operator pos:start="97:31" pos:end="97:31">=</operator> <name pos:start="97:33" pos:end="97:39">sub_pes</name></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:59"><expr pos:start="99:13" pos:end="99:58"><name pos:start="99:13" pos:end="99:37"><name pos:start="99:13" pos:end="99:18">sub_st</name><operator pos:start="99:19" pos:end="99:20">-&gt;</operator><name pos:start="99:21" pos:end="99:25">codec</name><operator pos:start="99:26" pos:end="99:27">-&gt;</operator><name pos:start="99:28" pos:end="99:37">codec_type</name></name> <operator pos:start="99:39" pos:end="99:39">=</operator> <name pos:start="99:41" pos:end="99:58">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:56"><expr pos:start="101:13" pos:end="101:55"><name pos:start="101:13" pos:end="101:35"><name pos:start="101:13" pos:end="101:18">sub_st</name><operator pos:start="101:19" pos:end="101:20">-&gt;</operator><name pos:start="101:21" pos:end="101:25">codec</name><operator pos:start="101:26" pos:end="101:27">-&gt;</operator><name pos:start="101:28" pos:end="101:35">codec_id</name></name>   <operator pos:start="101:39" pos:end="101:39">=</operator> <name pos:start="101:41" pos:end="101:55">AV_CODEC_ID_AC3</name></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:55"><expr pos:start="103:13" pos:end="103:54"><name pos:start="103:13" pos:end="103:32"><name pos:start="103:13" pos:end="103:18">sub_st</name><operator pos:start="103:19" pos:end="103:20">-&gt;</operator><name pos:start="103:21" pos:end="103:32">need_parsing</name></name> <operator pos:start="103:34" pos:end="103:34">=</operator> <name pos:start="103:36" pos:end="103:54">AVSTREAM_PARSE_FULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:51"><expr pos:start="105:13" pos:end="105:50"><name pos:start="105:13" pos:end="105:27"><name pos:start="105:13" pos:end="105:19">sub_pes</name><operator pos:start="105:20" pos:end="105:21">-&gt;</operator><name pos:start="105:22" pos:end="105:27">sub_st</name></name> <operator pos:start="105:29" pos:end="105:29">=</operator> <name pos:start="105:31" pos:end="105:41"><name pos:start="105:31" pos:end="105:33">pes</name><operator pos:start="105:34" pos:end="105:35">-&gt;</operator><name pos:start="105:36" pos:end="105:41">sub_st</name></name> <operator pos:start="105:43" pos:end="105:43">=</operator> <name pos:start="105:45" pos:end="105:50">sub_st</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="111:5" pos:end="113:66"><if pos:start="111:5" pos:end="113:66">if <condition pos:start="111:8" pos:end="111:48">(<expr pos:start="111:9" pos:end="111:47"><name pos:start="111:9" pos:end="111:27"><name pos:start="111:9" pos:end="111:10">st</name><operator pos:start="111:11" pos:end="111:12">-&gt;</operator><name pos:start="111:13" pos:end="111:17">codec</name><operator pos:start="111:18" pos:end="111:19">-&gt;</operator><name pos:start="111:20" pos:end="111:27">codec_id</name></name> <operator pos:start="111:29" pos:end="111:30">==</operator> <name pos:start="111:32" pos:end="111:47">AV_CODEC_ID_NONE</name></expr>)</condition><block type="pseudo" pos:start="113:9" pos:end="113:66"><block_content pos:start="113:9" pos:end="113:66">

        <expr_stmt pos:start="113:9" pos:end="113:66"><expr pos:start="113:9" pos:end="113:65"><call pos:start="113:9" pos:end="113:65"><name pos:start="113:9" pos:end="113:31">mpegts_find_stream_type</name><argument_list pos:start="113:32" pos:end="113:65">(<argument pos:start="113:33" pos:end="113:34"><expr pos:start="113:33" pos:end="113:34"><name pos:start="113:33" pos:end="113:34">st</name></expr></argument>, <argument pos:start="113:37" pos:end="113:52"><expr pos:start="113:37" pos:end="113:52"><name pos:start="113:37" pos:end="113:52"><name pos:start="113:37" pos:end="113:39">pes</name><operator pos:start="113:40" pos:end="113:41">-&gt;</operator><name pos:start="113:42" pos:end="113:52">stream_type</name></name></expr></argument>, <argument pos:start="113:55" pos:end="113:64"><expr pos:start="113:55" pos:end="113:64"><name pos:start="113:55" pos:end="113:64">MISC_types</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="115:5" pos:end="121:5"><if pos:start="115:5" pos:end="121:5">if <condition pos:start="115:8" pos:end="115:48">(<expr pos:start="115:9" pos:end="115:47"><name pos:start="115:9" pos:end="115:27"><name pos:start="115:9" pos:end="115:10">st</name><operator pos:start="115:11" pos:end="115:12">-&gt;</operator><name pos:start="115:13" pos:end="115:17">codec</name><operator pos:start="115:18" pos:end="115:19">-&gt;</operator><name pos:start="115:20" pos:end="115:27">codec_id</name></name> <operator pos:start="115:29" pos:end="115:30">==</operator> <name pos:start="115:32" pos:end="115:47">AV_CODEC_ID_NONE</name></expr>)</condition><block pos:start="115:49" pos:end="121:5">{<block_content pos:start="117:9" pos:end="119:46">

        <expr_stmt pos:start="117:9" pos:end="117:44"><expr pos:start="117:9" pos:end="117:43"><name pos:start="117:9" pos:end="117:27"><name pos:start="117:9" pos:end="117:10">st</name><operator pos:start="117:11" pos:end="117:12">-&gt;</operator><name pos:start="117:13" pos:end="117:17">codec</name><operator pos:start="117:18" pos:end="117:19">-&gt;</operator><name pos:start="117:20" pos:end="117:27">codec_id</name></name>  <operator pos:start="117:30" pos:end="117:30">=</operator> <name pos:start="117:32" pos:end="117:43">old_codec_id</name></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:46"><expr pos:start="119:9" pos:end="119:45"><name pos:start="119:9" pos:end="119:29"><name pos:start="119:9" pos:end="119:10">st</name><operator pos:start="119:11" pos:end="119:12">-&gt;</operator><name pos:start="119:13" pos:end="119:17">codec</name><operator pos:start="119:18" pos:end="119:19">-&gt;</operator><name pos:start="119:20" pos:end="119:29">codec_type</name></name><operator pos:start="119:30" pos:end="119:30">=</operator> <name pos:start="119:32" pos:end="119:45">old_codec_type</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="125:5" pos:end="125:13">return <expr pos:start="125:12" pos:end="125:12"><literal type="number" pos:start="125:12" pos:end="125:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
