<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19347.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:37">virtio_net_handle_offloads</name><parameter_list pos:start="1:38" pos:end="3:77">(<parameter pos:start="1:39" pos:end="1:50"><decl pos:start="1:39" pos:end="1:50"><type pos:start="1:39" pos:end="1:50"><name pos:start="1:39" pos:end="1:47">VirtIONet</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">n</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:63"><decl pos:start="1:53" pos:end="1:63"><type pos:start="1:53" pos:end="1:63"><name pos:start="1:53" pos:end="1:59">uint8_t</name></type> <name pos:start="1:61" pos:end="1:63">cmd</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:54"><decl pos:start="3:38" pos:end="3:54"><type pos:start="3:38" pos:end="3:54"><name pos:start="3:38" pos:end="3:49"><name pos:start="3:38" pos:end="3:43">struct</name> <name pos:start="3:45" pos:end="3:49">iovec</name></name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:54">iov</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:76"><decl pos:start="3:57" pos:end="3:76"><type pos:start="3:57" pos:end="3:76"><name pos:start="3:57" pos:end="3:64">unsigned</name> <name pos:start="3:66" pos:end="3:68">int</name></type> <name pos:start="3:70" pos:end="3:76">iov_cnt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="71:1">{<block_content pos:start="7:5" pos:end="69:5">

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">VirtIODevice</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:22">vdev</name> <init pos:start="7:24" pos:end="7:41">= <expr pos:start="7:26" pos:end="7:41"><call pos:start="7:26" pos:end="7:41"><name pos:start="7:26" pos:end="7:38">VIRTIO_DEVICE</name><argument_list pos:start="7:39" pos:end="7:41">(<argument pos:start="7:40" pos:end="7:40"><expr pos:start="7:40" pos:end="7:40"><name pos:start="7:40" pos:end="7:40">n</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:21">offloads</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">size_t</name></type> <name pos:start="11:12" pos:end="11:12">s</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:74">(<expr pos:start="15:9" pos:end="15:73"><operator pos:start="15:9" pos:end="15:9">!</operator><operator pos:start="15:10" pos:end="15:10">(</operator><operator pos:start="15:11" pos:end="15:11">(</operator><literal type="number" pos:start="15:12" pos:end="15:12">1</literal> <operator pos:start="15:14" pos:end="15:15">&lt;&lt;</operator> <name pos:start="15:17" pos:end="15:48">VIRTIO_NET_F_CTRL_GUEST_OFFLOADS</name><operator pos:start="15:49" pos:end="15:49">)</operator> <operator pos:start="15:51" pos:end="15:51">&amp;</operator> <name pos:start="15:53" pos:end="15:72"><name pos:start="15:53" pos:end="15:56">vdev</name><operator pos:start="15:57" pos:end="15:58">-&gt;</operator><name pos:start="15:59" pos:end="15:72">guest_features</name></name><operator pos:start="15:73" pos:end="15:73">)</operator></expr>)</condition> <block pos:start="15:76" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:30">

        <return pos:start="17:9" pos:end="17:30">return <expr pos:start="17:16" pos:end="17:29"><name pos:start="17:16" pos:end="17:29">VIRTIO_NET_ERR</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:65"><expr pos:start="23:5" pos:end="23:64"><name pos:start="23:5" pos:end="23:5">s</name> <operator pos:start="23:7" pos:end="23:7">=</operator> <call pos:start="23:9" pos:end="23:64"><name pos:start="23:9" pos:end="23:18">iov_to_buf</name><argument_list pos:start="23:19" pos:end="23:64">(<argument pos:start="23:20" pos:end="23:22"><expr pos:start="23:20" pos:end="23:22"><name pos:start="23:20" pos:end="23:22">iov</name></expr></argument>, <argument pos:start="23:25" pos:end="23:31"><expr pos:start="23:25" pos:end="23:31"><name pos:start="23:25" pos:end="23:31">iov_cnt</name></expr></argument>, <argument pos:start="23:34" pos:end="23:34"><expr pos:start="23:34" pos:end="23:34"><literal type="number" pos:start="23:34" pos:end="23:34">0</literal></expr></argument>, <argument pos:start="23:37" pos:end="23:45"><expr pos:start="23:37" pos:end="23:45"><operator pos:start="23:37" pos:end="23:37">&amp;</operator><name pos:start="23:38" pos:end="23:45">offloads</name></expr></argument>, <argument pos:start="23:48" pos:end="23:63"><expr pos:start="23:48" pos:end="23:63"><sizeof pos:start="23:48" pos:end="23:63">sizeof<argument_list pos:start="23:54" pos:end="23:63">(<argument pos:start="23:55" pos:end="23:62"><expr pos:start="23:55" pos:end="23:62"><name pos:start="23:55" pos:end="23:62">offloads</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:30">(<expr pos:start="25:9" pos:end="25:29"><name pos:start="25:9" pos:end="25:9">s</name> <operator pos:start="25:11" pos:end="25:12">!=</operator> <sizeof pos:start="25:14" pos:end="25:29">sizeof<argument_list pos:start="25:20" pos:end="25:29">(<argument pos:start="25:21" pos:end="25:28"><expr pos:start="25:21" pos:end="25:28"><name pos:start="25:21" pos:end="25:28">offloads</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="25:32" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:30">

        <return pos:start="27:9" pos:end="27:30">return <expr pos:start="27:16" pos:end="27:29"><name pos:start="27:16" pos:end="27:29">VIRTIO_NET_ERR</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="69:5"><if pos:start="33:5" pos:end="65:5">if <condition pos:start="33:8" pos:end="33:50">(<expr pos:start="33:9" pos:end="33:49"><name pos:start="33:9" pos:end="33:11">cmd</name> <operator pos:start="33:13" pos:end="33:14">==</operator> <name pos:start="33:16" pos:end="33:49">VIRTIO_NET_CTRL_GUEST_OFFLOADS_SET</name></expr>)</condition> <block pos:start="33:52" pos:end="65:5">{<block_content pos:start="35:9" pos:end="63:29">

        <decl_stmt pos:start="35:9" pos:end="35:36"><decl pos:start="35:9" pos:end="35:35"><type pos:start="35:9" pos:end="35:16"><name pos:start="35:9" pos:end="35:16">uint64_t</name></type> <name pos:start="35:18" pos:end="35:35">supported_offloads</name></decl>;</decl_stmt>



        <if_stmt pos:start="39:9" pos:end="43:9"><if pos:start="39:9" pos:end="43:9">if <condition pos:start="39:12" pos:end="39:29">(<expr pos:start="39:13" pos:end="39:28"><operator pos:start="39:13" pos:end="39:13">!</operator><name pos:start="39:14" pos:end="39:28"><name pos:start="39:14" pos:end="39:14">n</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:28">has_vnet_hdr</name></name></expr>)</condition> <block pos:start="39:31" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:34">

            <return pos:start="41:13" pos:end="41:34">return <expr pos:start="41:20" pos:end="41:33"><name pos:start="41:20" pos:end="41:33">VIRTIO_NET_ERR</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="47:9" pos:end="47:68"><expr pos:start="47:9" pos:end="47:67"><name pos:start="47:9" pos:end="47:26">supported_offloads</name> <operator pos:start="47:28" pos:end="47:28">=</operator> <call pos:start="47:30" pos:end="47:67"><name pos:start="47:30" pos:end="47:64">virtio_net_supported_guest_offloads</name><argument_list pos:start="47:65" pos:end="47:67">(<argument pos:start="47:66" pos:end="47:66"><expr pos:start="47:66" pos:end="47:66"><name pos:start="47:66" pos:end="47:66">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="53:9"><if pos:start="49:9" pos:end="53:9">if <condition pos:start="49:12" pos:end="49:43">(<expr pos:start="49:13" pos:end="49:42"><name pos:start="49:13" pos:end="49:20">offloads</name> <operator pos:start="49:22" pos:end="49:22">&amp;</operator> <operator pos:start="49:24" pos:end="49:24">~</operator><name pos:start="49:25" pos:end="49:42">supported_offloads</name></expr>)</condition> <block pos:start="49:45" pos:end="53:9">{<block_content pos:start="51:13" pos:end="51:34">

            <return pos:start="51:13" pos:end="51:34">return <expr pos:start="51:20" pos:end="51:33"><name pos:start="51:20" pos:end="51:33">VIRTIO_NET_ERR</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="57:9" pos:end="57:42"><expr pos:start="57:9" pos:end="57:41"><name pos:start="57:9" pos:end="57:30"><name pos:start="57:9" pos:end="57:9">n</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:30">curr_guest_offloads</name></name> <operator pos:start="57:32" pos:end="57:32">=</operator> <name pos:start="57:34" pos:end="57:41">offloads</name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:43"><expr pos:start="59:9" pos:end="59:42"><call pos:start="59:9" pos:end="59:42"><name pos:start="59:9" pos:end="59:39">virtio_net_apply_guest_offloads</name><argument_list pos:start="59:40" pos:end="59:42">(<argument pos:start="59:41" pos:end="59:41"><expr pos:start="59:41" pos:end="59:41"><name pos:start="59:41" pos:end="59:41">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <return pos:start="63:9" pos:end="63:29">return <expr pos:start="63:16" pos:end="63:28"><name pos:start="63:16" pos:end="63:28">VIRTIO_NET_OK</name></expr>;</return>

    </block_content>}</block></if> <else pos:start="65:7" pos:end="69:5">else <block pos:start="65:12" pos:end="69:5">{<block_content pos:start="67:9" pos:end="67:30">

        <return pos:start="67:9" pos:end="67:30">return <expr pos:start="67:16" pos:end="67:29"><name pos:start="67:16" pos:end="67:29">VIRTIO_NET_ERR</name></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
