<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4367.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:21">update_dimensions</name><parameter_list pos:start="1:22" pos:end="1:71">(<parameter pos:start="1:23" pos:end="1:35"><decl pos:start="1:23" pos:end="1:35"><type pos:start="1:23" pos:end="1:35"><name pos:start="1:23" pos:end="1:32">VP8Context</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:35">s</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:46"><decl pos:start="1:38" pos:end="1:46"><type pos:start="1:38" pos:end="1:46"><name pos:start="1:38" pos:end="1:40">int</name></type> <name pos:start="1:42" pos:end="1:46">width</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:58"><decl pos:start="1:49" pos:end="1:58"><type pos:start="1:49" pos:end="1:58"><name pos:start="1:49" pos:end="1:51">int</name></type> <name pos:start="1:53" pos:end="1:58">height</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:70"><decl pos:start="1:61" pos:end="1:70"><type pos:start="1:61" pos:end="1:70"><name pos:start="1:61" pos:end="1:63">int</name></type> <name pos:start="1:65" pos:end="1:70">is_vp7</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="93:1">{<block_content pos:start="5:5" pos:end="91:13">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">AVCodecContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:25">avctx</name> <init pos:start="5:27" pos:end="5:36">= <expr pos:start="5:29" pos:end="5:36"><name pos:start="5:29" pos:end="5:36"><name pos:start="5:29" pos:end="5:29">s</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:36">avctx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:14">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="25:5"><if pos:start="11:5" pos:end="25:5">if <condition pos:start="11:8" pos:end="13:35">(<expr pos:start="11:9" pos:end="13:34"><name pos:start="11:9" pos:end="11:13">width</name>  <operator pos:start="11:16" pos:end="11:17">!=</operator> <name pos:start="11:19" pos:end="11:33"><name pos:start="11:19" pos:end="11:19">s</name><operator pos:start="11:20" pos:end="11:21">-&gt;</operator><name pos:start="11:22" pos:end="11:26">avctx</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:33">width</name></name> <operator pos:start="11:35" pos:end="11:36">||</operator>

        <name pos:start="13:9" pos:end="13:14">height</name> <operator pos:start="13:16" pos:end="13:17">!=</operator> <name pos:start="13:19" pos:end="13:34"><name pos:start="13:19" pos:end="13:19">s</name><operator pos:start="13:20" pos:end="13:21">-&gt;</operator><name pos:start="13:22" pos:end="13:26">avctx</name><operator pos:start="13:27" pos:end="13:28">-&gt;</operator><name pos:start="13:29" pos:end="13:34">height</name></name></expr>)</condition> <block pos:start="13:37" pos:end="25:5">{<block_content pos:start="15:9" pos:end="23:23">

        <expr_stmt pos:start="15:9" pos:end="15:43"><expr pos:start="15:9" pos:end="15:42"><call pos:start="15:9" pos:end="15:42"><name pos:start="15:9" pos:end="15:29">vp8_decode_flush_impl</name><argument_list pos:start="15:30" pos:end="15:42">(<argument pos:start="15:31" pos:end="15:38"><expr pos:start="15:31" pos:end="15:38"><name pos:start="15:31" pos:end="15:38"><name pos:start="15:31" pos:end="15:31">s</name><operator pos:start="15:32" pos:end="15:33">-&gt;</operator><name pos:start="15:34" pos:end="15:38">avctx</name></name></expr></argument>, <argument pos:start="15:41" pos:end="15:41"><expr pos:start="15:41" pos:end="15:41"><literal type="number" pos:start="15:41" pos:end="15:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="19:9" pos:end="19:57"><expr pos:start="19:9" pos:end="19:56"><name pos:start="19:9" pos:end="19:11">ret</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:56"><name pos:start="19:15" pos:end="19:31">ff_set_dimensions</name><argument_list pos:start="19:32" pos:end="19:56">(<argument pos:start="19:33" pos:end="19:40"><expr pos:start="19:33" pos:end="19:40"><name pos:start="19:33" pos:end="19:40"><name pos:start="19:33" pos:end="19:33">s</name><operator pos:start="19:34" pos:end="19:35">-&gt;</operator><name pos:start="19:36" pos:end="19:40">avctx</name></name></expr></argument>, <argument pos:start="19:43" pos:end="19:47"><expr pos:start="19:43" pos:end="19:47"><name pos:start="19:43" pos:end="19:47">width</name></expr></argument>, <argument pos:start="19:50" pos:end="19:55"><expr pos:start="19:50" pos:end="19:55"><name pos:start="19:50" pos:end="19:55">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="23:23"><if pos:start="21:9" pos:end="23:23">if <condition pos:start="21:12" pos:end="21:20">(<expr pos:start="21:13" pos:end="21:19"><name pos:start="21:13" pos:end="21:15">ret</name> <operator pos:start="21:17" pos:end="21:17">&lt;</operator> <literal type="number" pos:start="21:19" pos:end="21:19">0</literal></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:23"><block_content pos:start="23:13" pos:end="23:23">

            <return pos:start="23:13" pos:end="23:23">return <expr pos:start="23:20" pos:end="23:22"><name pos:start="23:20" pos:end="23:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:54"><expr pos:start="29:5" pos:end="29:53"><name pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:15">mb_width</name></name>  <operator pos:start="29:18" pos:end="29:18">=</operator> <operator pos:start="29:20" pos:end="29:20">(</operator><name pos:start="29:21" pos:end="29:41"><name pos:start="29:21" pos:end="29:21">s</name><operator pos:start="29:22" pos:end="29:23">-&gt;</operator><name pos:start="29:24" pos:end="29:28">avctx</name><operator pos:start="29:29" pos:end="29:30">-&gt;</operator><name pos:start="29:31" pos:end="29:41">coded_width</name></name>  <operator pos:start="29:44" pos:end="29:44">+</operator> <literal type="number" pos:start="29:46" pos:end="29:47">15</literal><operator pos:start="29:48" pos:end="29:48">)</operator> <operator pos:start="29:50" pos:end="29:50">/</operator> <literal type="number" pos:start="29:52" pos:end="29:53">16</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:54"><expr pos:start="31:5" pos:end="31:53"><name pos:start="31:5" pos:end="31:16"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:16">mb_height</name></name> <operator pos:start="31:18" pos:end="31:18">=</operator> <operator pos:start="31:20" pos:end="31:20">(</operator><name pos:start="31:21" pos:end="31:42"><name pos:start="31:21" pos:end="31:21">s</name><operator pos:start="31:22" pos:end="31:23">-&gt;</operator><name pos:start="31:24" pos:end="31:28">avctx</name><operator pos:start="31:29" pos:end="31:30">-&gt;</operator><name pos:start="31:31" pos:end="31:42">coded_height</name></name> <operator pos:start="31:44" pos:end="31:44">+</operator> <literal type="number" pos:start="31:46" pos:end="31:47">15</literal><operator pos:start="31:48" pos:end="31:48">)</operator> <operator pos:start="31:50" pos:end="31:50">/</operator> <literal type="number" pos:start="31:52" pos:end="31:53">16</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="37:75"><expr pos:start="35:5" pos:end="37:74"><name pos:start="35:5" pos:end="35:16"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:16">mb_layout</name></name> <operator pos:start="35:18" pos:end="35:18">=</operator> <name pos:start="35:20" pos:end="35:25">is_vp7</name> <operator pos:start="35:27" pos:end="35:28">||</operator> <name pos:start="35:30" pos:end="35:54"><name pos:start="35:30" pos:end="35:34">avctx</name><operator pos:start="35:35" pos:end="35:36">-&gt;</operator><name pos:start="35:37" pos:end="35:54">active_thread_type</name></name> <operator pos:start="35:56" pos:end="35:57">==</operator> <name pos:start="35:59" pos:end="35:73">FF_THREAD_SLICE</name> <operator pos:start="35:75" pos:end="35:76">&amp;&amp;</operator>

                   <call pos:start="37:20" pos:end="37:70"><name pos:start="37:20" pos:end="37:24">FFMIN</name><argument_list pos:start="37:25" pos:end="37:70">(<argument pos:start="37:26" pos:end="37:48"><expr pos:start="37:26" pos:end="37:48"><name pos:start="37:26" pos:end="37:48"><name pos:start="37:26" pos:end="37:26">s</name><operator pos:start="37:27" pos:end="37:28">-&gt;</operator><name pos:start="37:29" pos:end="37:48">num_coeff_partitions</name></name></expr></argument>, <argument pos:start="37:51" pos:end="37:69"><expr pos:start="37:51" pos:end="37:69"><name pos:start="37:51" pos:end="37:69"><name pos:start="37:51" pos:end="37:55">avctx</name><operator pos:start="37:56" pos:end="37:57">-&gt;</operator><name pos:start="37:58" pos:end="37:69">thread_count</name></name></expr></argument>)</argument_list></call> <operator pos:start="37:72" pos:end="37:72">&gt;</operator> <literal type="number" pos:start="37:74" pos:end="37:74">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="51:66"><if pos:start="39:5" pos:end="47:5">if <condition pos:start="39:8" pos:end="39:22">(<expr pos:start="39:9" pos:end="39:21"><operator pos:start="39:9" pos:end="39:9">!</operator><name pos:start="39:10" pos:end="39:21"><name pos:start="39:10" pos:end="39:10">s</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:21">mb_layout</name></name></expr>)</condition> <block pos:start="39:24" pos:end="47:5">{<block_content pos:start="41:9" pos:end="45:64"> <comment type="line" pos:start="39:26" pos:end="39:58">// Frame threading and one thread</comment>

        <expr_stmt pos:start="41:9" pos:end="43:72"><expr pos:start="41:9" pos:end="43:71"><name pos:start="41:9" pos:end="41:27"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:27">macroblocks_base</name></name>       <operator pos:start="41:35" pos:end="41:35">=</operator> <call pos:start="41:37" pos:end="43:71"><name pos:start="41:37" pos:end="41:46">av_mallocz</name><argument_list pos:start="41:47" pos:end="43:71">(<argument pos:start="41:48" pos:end="43:70"><expr pos:start="41:48" pos:end="43:70"><operator pos:start="41:48" pos:end="41:48">(</operator><name pos:start="41:49" pos:end="41:59"><name pos:start="41:49" pos:end="41:49">s</name><operator pos:start="41:50" pos:end="41:51">-&gt;</operator><name pos:start="41:52" pos:end="41:59">mb_width</name></name> <operator pos:start="41:61" pos:end="41:61">+</operator> <name pos:start="41:63" pos:end="41:74"><name pos:start="41:63" pos:end="41:63">s</name><operator pos:start="41:64" pos:end="41:65">-&gt;</operator><name pos:start="41:66" pos:end="41:74">mb_height</name></name> <operator pos:start="41:76" pos:end="41:76">*</operator> <literal type="number" pos:start="41:78" pos:end="41:80">2</literal> <operator pos:start="41:80" pos:end="41:80">+</operator> <literal type="number" pos:start="41:82" pos:end="41:82">1</literal><operator pos:start="41:83" pos:end="41:83">)</operator> <operator pos:start="41:85" pos:end="41:85">*</operator>

                                               <sizeof pos:start="43:48" pos:end="43:70">sizeof<argument_list pos:start="43:54" pos:end="43:70">(<argument pos:start="43:55" pos:end="43:69"><expr pos:start="43:55" pos:end="43:69"><operator pos:start="43:55" pos:end="43:55">*</operator><name pos:start="43:56" pos:end="43:69"><name pos:start="43:56" pos:end="43:56">s</name><operator pos:start="43:57" pos:end="43:58">-&gt;</operator><name pos:start="43:59" pos:end="43:69">macroblocks</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:64"><expr pos:start="45:9" pos:end="45:63"><name pos:start="45:9" pos:end="45:33"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:33">intra4x4_pred_mode_top</name></name> <operator pos:start="45:35" pos:end="45:35">=</operator> <call pos:start="45:37" pos:end="45:63"><name pos:start="45:37" pos:end="45:46">av_mallocz</name><argument_list pos:start="45:47" pos:end="45:63">(<argument pos:start="45:48" pos:end="45:62"><expr pos:start="45:48" pos:end="45:62"><name pos:start="45:48" pos:end="45:58"><name pos:start="45:48" pos:end="45:48">s</name><operator pos:start="45:49" pos:end="45:50">-&gt;</operator><name pos:start="45:51" pos:end="45:58">mb_width</name></name> <operator pos:start="45:60" pos:end="45:60">*</operator> <literal type="number" pos:start="45:62" pos:end="45:62">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="47:7" pos:end="51:66">else<block type="pseudo" pos:start="49:9" pos:end="51:66"><block_content pos:start="49:9" pos:end="51:66"> <comment type="line" pos:start="47:12" pos:end="47:30">// Sliced threading</comment>

        <expr_stmt pos:start="49:9" pos:end="51:66"><expr pos:start="49:9" pos:end="51:65"><name pos:start="49:9" pos:end="49:27"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:27">macroblocks_base</name></name> <operator pos:start="49:29" pos:end="49:29">=</operator> <call pos:start="49:31" pos:end="51:65"><name pos:start="49:31" pos:end="49:40">av_mallocz</name><argument_list pos:start="49:41" pos:end="51:65">(<argument pos:start="49:42" pos:end="51:64"><expr pos:start="49:42" pos:end="51:64"><operator pos:start="49:42" pos:end="49:42">(</operator><name pos:start="49:43" pos:end="49:53"><name pos:start="49:43" pos:end="49:43">s</name><operator pos:start="49:44" pos:end="49:45">-&gt;</operator><name pos:start="49:46" pos:end="49:53">mb_width</name></name> <operator pos:start="49:55" pos:end="49:55">+</operator> <literal type="number" pos:start="49:57" pos:end="49:57">2</literal><operator pos:start="49:58" pos:end="49:58">)</operator> <operator pos:start="49:60" pos:end="49:60">*</operator> <operator pos:start="49:62" pos:end="49:62">(</operator><name pos:start="49:63" pos:end="49:74"><name pos:start="49:63" pos:end="49:63">s</name><operator pos:start="49:64" pos:end="49:65">-&gt;</operator><name pos:start="49:66" pos:end="49:74">mb_height</name></name> <operator pos:start="49:76" pos:end="49:76">+</operator> <literal type="number" pos:start="49:78" pos:end="49:78">2</literal><operator pos:start="49:79" pos:end="49:79">)</operator> <operator pos:start="49:81" pos:end="49:81">*</operator>

                                         <sizeof pos:start="51:42" pos:end="51:64">sizeof<argument_list pos:start="51:48" pos:end="51:64">(<argument pos:start="51:49" pos:end="51:63"><expr pos:start="51:49" pos:end="51:63"><operator pos:start="51:49" pos:end="51:49">*</operator><name pos:start="51:50" pos:end="51:63"><name pos:start="51:50" pos:end="51:50">s</name><operator pos:start="51:51" pos:end="51:52">-&gt;</operator><name pos:start="51:53" pos:end="51:63">macroblocks</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:67"><expr pos:start="53:5" pos:end="53:66"><name pos:start="53:5" pos:end="53:14"><name pos:start="53:5" pos:end="53:5">s</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:14">top_nnz</name></name>     <operator pos:start="53:20" pos:end="53:20">=</operator> <call pos:start="53:22" pos:end="53:66"><name pos:start="53:22" pos:end="53:31">av_mallocz</name><argument_list pos:start="53:32" pos:end="53:66">(<argument pos:start="53:33" pos:end="53:65"><expr pos:start="53:33" pos:end="53:65"><name pos:start="53:33" pos:end="53:43"><name pos:start="53:33" pos:end="53:33">s</name><operator pos:start="53:34" pos:end="53:35">-&gt;</operator><name pos:start="53:36" pos:end="53:43">mb_width</name></name> <operator pos:start="53:45" pos:end="53:45">*</operator> <sizeof pos:start="53:47" pos:end="53:65">sizeof<argument_list pos:start="53:53" pos:end="53:65">(<argument pos:start="53:54" pos:end="53:64"><expr pos:start="53:54" pos:end="53:64"><operator pos:start="53:54" pos:end="53:54">*</operator><name pos:start="53:55" pos:end="53:64"><name pos:start="53:55" pos:end="53:55">s</name><operator pos:start="53:56" pos:end="53:57">-&gt;</operator><name pos:start="53:58" pos:end="53:64">top_nnz</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:76"><expr pos:start="55:5" pos:end="55:75"><name pos:start="55:5" pos:end="55:17"><name pos:start="55:5" pos:end="55:5">s</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:17">top_border</name></name>  <operator pos:start="55:20" pos:end="55:20">=</operator> <call pos:start="55:22" pos:end="55:75"><name pos:start="55:22" pos:end="55:31">av_mallocz</name><argument_list pos:start="55:32" pos:end="55:75">(<argument pos:start="55:33" pos:end="55:74"><expr pos:start="55:33" pos:end="55:74"><operator pos:start="55:33" pos:end="55:33">(</operator><name pos:start="55:34" pos:end="55:44"><name pos:start="55:34" pos:end="55:34">s</name><operator pos:start="55:35" pos:end="55:36">-&gt;</operator><name pos:start="55:37" pos:end="55:44">mb_width</name></name> <operator pos:start="55:46" pos:end="55:46">+</operator> <literal type="number" pos:start="55:48" pos:end="55:48">1</literal><operator pos:start="55:49" pos:end="55:49">)</operator> <operator pos:start="55:51" pos:end="55:51">*</operator> <sizeof pos:start="55:53" pos:end="55:74">sizeof<argument_list pos:start="55:59" pos:end="55:74">(<argument pos:start="55:60" pos:end="55:73"><expr pos:start="55:60" pos:end="55:73"><operator pos:start="55:60" pos:end="55:60">*</operator><name pos:start="55:61" pos:end="55:73"><name pos:start="55:61" pos:end="55:61">s</name><operator pos:start="55:62" pos:end="55:63">-&gt;</operator><name pos:start="55:64" pos:end="55:73">top_border</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:69"><expr pos:start="57:5" pos:end="57:68"><name pos:start="57:5" pos:end="57:18"><name pos:start="57:5" pos:end="57:5">s</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:18">thread_data</name></name> <operator pos:start="57:20" pos:end="57:20">=</operator> <call pos:start="57:22" pos:end="57:68"><name pos:start="57:22" pos:end="57:31">av_mallocz</name><argument_list pos:start="57:32" pos:end="57:68">(<argument pos:start="57:33" pos:end="57:67"><expr pos:start="57:33" pos:end="57:67"><name pos:start="57:33" pos:end="57:43">MAX_THREADS</name> <operator pos:start="57:45" pos:end="57:45">*</operator> <sizeof pos:start="57:47" pos:end="57:67">sizeof<argument_list pos:start="57:53" pos:end="57:67">(<argument pos:start="57:54" pos:end="57:66"><expr pos:start="57:54" pos:end="57:66"><name pos:start="57:54" pos:end="57:66">VP8ThreadData</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="61:5" pos:end="75:5">for <control pos:start="61:9" pos:end="61:37">(<init pos:start="61:10" pos:end="61:15"><expr pos:start="61:10" pos:end="61:14"><name pos:start="61:10" pos:end="61:10">i</name> <operator pos:start="61:12" pos:end="61:12">=</operator> <literal type="number" pos:start="61:14" pos:end="61:14">0</literal></expr>;</init> <condition pos:start="61:17" pos:end="61:32"><expr pos:start="61:17" pos:end="61:31"><name pos:start="61:17" pos:end="61:17">i</name> <operator pos:start="61:19" pos:end="61:19">&lt;</operator> <name pos:start="61:21" pos:end="61:31">MAX_THREADS</name></expr>;</condition> <incr pos:start="61:34" pos:end="61:36"><expr pos:start="61:34" pos:end="61:36"><name pos:start="61:34" pos:end="61:34">i</name><operator pos:start="61:35" pos:end="61:36">++</operator></expr></incr>)</control> <block pos:start="61:39" pos:end="75:5">{<block_content pos:start="63:9" pos:end="74:0">

        <expr_stmt pos:start="63:9" pos:end="68:0"><expr pos:start="63:9" pos:end="65:80"><name pos:start="63:9" pos:end="63:25"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:22">thread_data</name><index pos:start="63:23" pos:end="63:25">[<expr pos:start="63:24" pos:end="63:24"><name pos:start="63:24" pos:end="63:24">i</name></expr>]</index></name><operator pos:start="63:26" pos:end="63:26">.</operator><name pos:start="63:27" pos:end="63:41">filter_strength</name> <operator pos:start="63:43" pos:end="63:43">=</operator>

            <call pos:start="65:13" pos:end="65:80"><name pos:start="65:13" pos:end="65:22">av_mallocz</name><argument_list pos:start="65:23" pos:end="65:80">(<argument pos:start="65:24" pos:end="65:79"><expr pos:start="65:24" pos:end="65:79"><name pos:start="65:24" pos:end="65:34"><name pos:start="65:24" pos:end="65:24">s</name><operator pos:start="65:25" pos:end="65:26">-&gt;</operator><name pos:start="65:27" pos:end="65:34">mb_width</name></name> <operator pos:start="65:36" pos:end="65:36">*</operator> <sizeof pos:start="65:38" pos:end="65:79">sizeof<argument_list pos:start="65:44" pos:end="65:79">(<argument pos:start="65:45" pos:end="65:78"><expr pos:start="65:45" pos:end="65:78"><operator pos:start="65:45" pos:end="65:45">*</operator><name pos:start="65:46" pos:end="65:62"><name pos:start="65:46" pos:end="65:46">s</name><operator pos:start="65:47" pos:end="65:48">-&gt;</operator><name pos:start="65:49" pos:end="65:59">thread_data</name><index pos:start="65:60" pos:end="65:62">[<expr pos:start="65:61" pos:end="65:61"><literal type="number" pos:start="65:61" pos:end="65:61">0</literal></expr>]</index></name><operator pos:start="65:63" pos:end="65:63">.</operator><name pos:start="65:64" pos:end="65:78">filter_strength</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="67:1" pos:end="67:16">#<cpp:directive pos:start="67:2" pos:end="67:3">if</cpp:directive> <expr pos:start="67:5" pos:end="67:16"><name pos:start="67:5" pos:end="67:16">HAVE_THREADS</name></expr></cpp:if>

        <expr_stmt pos:start="69:9" pos:end="69:58"><expr pos:start="69:9" pos:end="69:57"><call pos:start="69:9" pos:end="69:57"><name pos:start="69:9" pos:end="69:26">pthread_mutex_init</name><argument_list pos:start="69:27" pos:end="69:57">(<argument pos:start="69:28" pos:end="69:50"><expr pos:start="69:28" pos:end="69:50"><operator pos:start="69:28" pos:end="69:28">&amp;</operator><name pos:start="69:29" pos:end="69:45"><name pos:start="69:29" pos:end="69:29">s</name><operator pos:start="69:30" pos:end="69:31">-&gt;</operator><name pos:start="69:32" pos:end="69:42">thread_data</name><index pos:start="69:43" pos:end="69:45">[<expr pos:start="69:44" pos:end="69:44"><name pos:start="69:44" pos:end="69:44">i</name></expr>]</index></name><operator pos:start="69:46" pos:end="69:46">.</operator><name pos:start="69:47" pos:end="69:50">lock</name></expr></argument>, <argument pos:start="69:53" pos:end="69:56"><expr pos:start="69:53" pos:end="69:56"><name pos:start="69:53" pos:end="69:56">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="74:0"><expr pos:start="71:9" pos:end="71:56"><call pos:start="71:9" pos:end="71:56"><name pos:start="71:9" pos:end="71:25">pthread_cond_init</name><argument_list pos:start="71:26" pos:end="71:56">(<argument pos:start="71:27" pos:end="71:49"><expr pos:start="71:27" pos:end="71:49"><operator pos:start="71:27" pos:end="71:27">&amp;</operator><name pos:start="71:28" pos:end="71:44"><name pos:start="71:28" pos:end="71:28">s</name><operator pos:start="71:29" pos:end="71:30">-&gt;</operator><name pos:start="71:31" pos:end="71:41">thread_data</name><index pos:start="71:42" pos:end="71:44">[<expr pos:start="71:43" pos:end="71:43"><name pos:start="71:43" pos:end="71:43">i</name></expr>]</index></name><operator pos:start="71:45" pos:end="71:45">.</operator><name pos:start="71:46" pos:end="71:49">cond</name></expr></argument>, <argument pos:start="71:52" pos:end="71:55"><expr pos:start="71:52" pos:end="71:55"><name pos:start="71:52" pos:end="71:55">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="73:1" pos:end="73:6">#<cpp:directive pos:start="73:2" pos:end="73:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></for>



    <if_stmt pos:start="79:5" pos:end="83:31"><if pos:start="79:5" pos:end="83:31">if <condition pos:start="79:8" pos:end="81:54">(<expr pos:start="79:9" pos:end="81:53"><operator pos:start="79:9" pos:end="79:9">!</operator><name pos:start="79:10" pos:end="79:28"><name pos:start="79:10" pos:end="79:10">s</name><operator pos:start="79:11" pos:end="79:12">-&gt;</operator><name pos:start="79:13" pos:end="79:28">macroblocks_base</name></name> <operator pos:start="79:30" pos:end="79:31">||</operator> <operator pos:start="79:33" pos:end="79:33">!</operator><name pos:start="79:34" pos:end="79:43"><name pos:start="79:34" pos:end="79:34">s</name><operator pos:start="79:35" pos:end="79:36">-&gt;</operator><name pos:start="79:37" pos:end="79:43">top_nnz</name></name> <operator pos:start="79:45" pos:end="79:46">||</operator> <operator pos:start="79:48" pos:end="79:48">!</operator><name pos:start="79:49" pos:end="79:61"><name pos:start="79:49" pos:end="79:49">s</name><operator pos:start="79:50" pos:end="79:51">-&gt;</operator><name pos:start="79:52" pos:end="79:61">top_border</name></name> <operator pos:start="79:63" pos:end="79:64">||</operator>

        <operator pos:start="81:9" pos:end="81:9">(</operator><operator pos:start="81:10" pos:end="81:10">!</operator><name pos:start="81:11" pos:end="81:35"><name pos:start="81:11" pos:end="81:11">s</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:35">intra4x4_pred_mode_top</name></name> <operator pos:start="81:37" pos:end="81:38">&amp;&amp;</operator> <operator pos:start="81:40" pos:end="81:40">!</operator><name pos:start="81:41" pos:end="81:52"><name pos:start="81:41" pos:end="81:41">s</name><operator pos:start="81:42" pos:end="81:43">-&gt;</operator><name pos:start="81:44" pos:end="81:52">mb_layout</name></name><operator pos:start="81:53" pos:end="81:53">)</operator></expr>)</condition><block type="pseudo" pos:start="83:9" pos:end="83:31"><block_content pos:start="83:9" pos:end="83:31">

        <return pos:start="83:9" pos:end="83:31">return <expr pos:start="83:16" pos:end="83:30"><call pos:start="83:16" pos:end="83:30"><name pos:start="83:16" pos:end="83:22">AVERROR</name><argument_list pos:start="83:23" pos:end="83:30">(<argument pos:start="83:24" pos:end="83:29"><expr pos:start="83:24" pos:end="83:29"><name pos:start="83:24" pos:end="83:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:45"><expr pos:start="87:5" pos:end="87:44"><name pos:start="87:5" pos:end="87:18"><name pos:start="87:5" pos:end="87:5">s</name><operator pos:start="87:6" pos:end="87:7">-&gt;</operator><name pos:start="87:8" pos:end="87:18">macroblocks</name></name> <operator pos:start="87:20" pos:end="87:20">=</operator> <name pos:start="87:22" pos:end="87:40"><name pos:start="87:22" pos:end="87:22">s</name><operator pos:start="87:23" pos:end="87:24">-&gt;</operator><name pos:start="87:25" pos:end="87:40">macroblocks_base</name></name> <operator pos:start="87:42" pos:end="87:42">+</operator> <literal type="number" pos:start="87:44" pos:end="87:44">1</literal></expr>;</expr_stmt>



    <return pos:start="91:5" pos:end="91:13">return <expr pos:start="91:12" pos:end="91:12"><literal type="number" pos:start="91:12" pos:end="91:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
