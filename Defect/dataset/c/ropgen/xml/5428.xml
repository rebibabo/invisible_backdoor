<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5428.c" pos:tabs="8"><function pos:start="1:1" pos:end="115:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:37">decode_block_intra</name><parameter_list pos:start="1:38" pos:end="1:69">(<parameter pos:start="1:39" pos:end="1:51"><decl pos:start="1:39" pos:end="1:51"><type pos:start="1:39" pos:end="1:51"><name pos:start="1:39" pos:end="1:48">MadContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">s</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:68"><decl pos:start="1:54" pos:end="1:68"><type pos:start="1:54" pos:end="1:68"><name pos:start="1:54" pos:end="1:60">int16_t</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type> <name pos:start="1:64" pos:end="1:68">block</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="115:1">{<block_content pos:start="5:5" pos:end="113:5">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">level</name></decl>, <decl pos:start="5:16" pos:end="5:16"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:16" pos:end="5:16">i</name></decl>, <decl pos:start="5:19" pos:end="5:19"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:19" pos:end="5:19">j</name></decl>, <decl pos:start="5:22" pos:end="5:24"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:22" pos:end="5:24">run</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">RLTable</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:15">rl</name> <init pos:start="7:17" pos:end="7:30">= <expr pos:start="7:19" pos:end="7:30"><operator pos:start="7:19" pos:end="7:19">&amp;</operator><name pos:start="7:20" pos:end="7:30">ff_rl_mpeg1</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:55"><decl pos:start="9:5" pos:end="9:54"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:28">scantable</name> <init pos:start="9:30" pos:end="9:54">= <expr pos:start="9:32" pos:end="9:54"><name pos:start="9:32" pos:end="9:54"><name pos:start="9:32" pos:end="9:32">s</name><operator pos:start="9:33" pos:end="9:34">-&gt;</operator><name pos:start="9:35" pos:end="9:43">scantable</name><operator pos:start="9:44" pos:end="9:44">.</operator><name pos:start="9:45" pos:end="9:54">permutated</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:44"><decl pos:start="11:5" pos:end="11:43"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">int16_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:25">quant_matrix</name> <init pos:start="11:27" pos:end="11:43">= <expr pos:start="11:29" pos:end="11:43"><name pos:start="11:29" pos:end="11:43"><name pos:start="11:29" pos:end="11:29">s</name><operator pos:start="11:30" pos:end="11:31">-&gt;</operator><name pos:start="11:32" pos:end="11:43">quant_matrix</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:62"><expr pos:start="15:5" pos:end="15:61"><name pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:9">block</name><index pos:start="15:10" pos:end="15:12">[<expr pos:start="15:11" pos:end="15:11"><literal type="number" pos:start="15:11" pos:end="15:11">0</literal></expr>]</index></name> <operator pos:start="15:14" pos:end="15:14">=</operator> <operator pos:start="15:16" pos:end="15:16">(</operator><literal type="number" pos:start="15:17" pos:end="15:21">128</literal> <operator pos:start="15:21" pos:end="15:21">+</operator> <call pos:start="15:23" pos:end="15:42"><name pos:start="15:23" pos:end="15:31">get_sbits</name><argument_list pos:start="15:32" pos:end="15:42">(<argument pos:start="15:33" pos:end="15:38"><expr pos:start="15:33" pos:end="15:38"><operator pos:start="15:33" pos:end="15:33">&amp;</operator><name pos:start="15:34" pos:end="15:38"><name pos:start="15:34" pos:end="15:34">s</name><operator pos:start="15:35" pos:end="15:36">-&gt;</operator><name pos:start="15:37" pos:end="15:38">gb</name></name></expr></argument>, <argument pos:start="15:41" pos:end="15:41"><expr pos:start="15:41" pos:end="15:41"><literal type="number" pos:start="15:41" pos:end="15:41">8</literal></expr></argument>)</argument_list></call><operator pos:start="15:43" pos:end="15:43">)</operator> <operator pos:start="15:45" pos:end="15:45">*</operator> <name pos:start="15:47" pos:end="15:61"><name pos:start="15:47" pos:end="15:58">quant_matrix</name><index pos:start="15:59" pos:end="15:61">[<expr pos:start="15:60" pos:end="15:60"><literal type="number" pos:start="15:60" pos:end="15:60">0</literal></expr>]</index></name></expr>;</expr_stmt>



    <comment type="block" pos:start="19:5" pos:end="21:60">/* The RL decoder is derived from mpeg1_decode_block_intra;

       Escaped level and run values a decoded differently */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:10"><expr pos:start="23:5" pos:end="23:9"><name pos:start="23:5" pos:end="23:5">i</name> <operator pos:start="23:7" pos:end="23:7">=</operator> <literal type="number" pos:start="23:9" pos:end="23:9">0</literal></expr>;</expr_stmt>

    <block pos:start="25:5" pos:end="113:5">{<block_content pos:start="27:9" pos:end="111:33">

        <expr_stmt pos:start="27:9" pos:end="27:32"><expr pos:start="27:9" pos:end="27:31"><call pos:start="27:9" pos:end="27:31"><name pos:start="27:9" pos:end="27:19">OPEN_READER</name><argument_list pos:start="27:20" pos:end="27:31">(<argument pos:start="27:21" pos:end="27:22"><expr pos:start="27:21" pos:end="27:22"><name pos:start="27:21" pos:end="27:22">re</name></expr></argument>, <argument pos:start="27:25" pos:end="27:30"><expr pos:start="27:25" pos:end="27:30"><operator pos:start="27:25" pos:end="27:25">&amp;</operator><name pos:start="27:26" pos:end="27:30"><name pos:start="27:26" pos:end="27:26">s</name><operator pos:start="27:27" pos:end="27:28">-&gt;</operator><name pos:start="27:29" pos:end="27:30">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="29:9" pos:end="29:51">/* now quantify &amp; encode AC coefficients */</comment>

        <for pos:start="31:9" pos:end="109:9">for <control pos:start="31:13" pos:end="31:16">(<init pos:start="31:14" pos:end="31:14">;</init><condition pos:start="31:15" pos:end="31:15">;</condition><incr/>)</control> <block pos:start="31:18" pos:end="109:9">{<block_content pos:start="33:13" pos:end="107:29">

            <expr_stmt pos:start="33:13" pos:end="33:37"><expr pos:start="33:13" pos:end="33:36"><call pos:start="33:13" pos:end="33:36"><name pos:start="33:13" pos:end="33:24">UPDATE_CACHE</name><argument_list pos:start="33:25" pos:end="33:36">(<argument pos:start="33:26" pos:end="33:27"><expr pos:start="33:26" pos:end="33:27"><name pos:start="33:26" pos:end="33:27">re</name></expr></argument>, <argument pos:start="33:30" pos:end="33:35"><expr pos:start="33:30" pos:end="33:35"><operator pos:start="33:30" pos:end="33:30">&amp;</operator><name pos:start="33:31" pos:end="33:35"><name pos:start="33:31" pos:end="33:31">s</name><operator pos:start="33:32" pos:end="33:33">-&gt;</operator><name pos:start="33:34" pos:end="33:35">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:82"><expr pos:start="35:13" pos:end="35:81"><call pos:start="35:13" pos:end="35:81"><name pos:start="35:13" pos:end="35:22">GET_RL_VLC</name><argument_list pos:start="35:23" pos:end="35:81">(<argument pos:start="35:24" pos:end="35:28"><expr pos:start="35:24" pos:end="35:28"><name pos:start="35:24" pos:end="35:28">level</name></expr></argument>, <argument pos:start="35:31" pos:end="35:33"><expr pos:start="35:31" pos:end="35:33"><name pos:start="35:31" pos:end="35:33">run</name></expr></argument>, <argument pos:start="35:36" pos:end="35:37"><expr pos:start="35:36" pos:end="35:37"><name pos:start="35:36" pos:end="35:37">re</name></expr></argument>, <argument pos:start="35:40" pos:end="35:45"><expr pos:start="35:40" pos:end="35:45"><operator pos:start="35:40" pos:end="35:40">&amp;</operator><name pos:start="35:41" pos:end="35:45"><name pos:start="35:41" pos:end="35:41">s</name><operator pos:start="35:42" pos:end="35:43">-&gt;</operator><name pos:start="35:44" pos:end="35:45">gb</name></name></expr></argument>, <argument pos:start="35:48" pos:end="35:60"><expr pos:start="35:48" pos:end="35:60"><name pos:start="35:48" pos:end="35:60"><name pos:start="35:48" pos:end="35:49">rl</name><operator pos:start="35:50" pos:end="35:51">-&gt;</operator><name pos:start="35:52" pos:end="35:57">rl_vlc</name><index pos:start="35:58" pos:end="35:60">[<expr pos:start="35:59" pos:end="35:59"><literal type="number" pos:start="35:59" pos:end="35:59">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="35:63" pos:end="35:74"><expr pos:start="35:63" pos:end="35:74"><name pos:start="35:63" pos:end="35:74">TEX_VLC_BITS</name></expr></argument>, <argument pos:start="35:77" pos:end="35:77"><expr pos:start="35:77" pos:end="35:77"><literal type="number" pos:start="35:77" pos:end="35:77">2</literal></expr></argument>, <argument pos:start="35:80" pos:end="35:80"><expr pos:start="35:80" pos:end="35:80"><literal type="number" pos:start="35:80" pos:end="35:80">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="39:13" pos:end="95:13"><if pos:start="39:13" pos:end="43:13">if <condition pos:start="39:16" pos:end="39:29">(<expr pos:start="39:17" pos:end="39:28"><name pos:start="39:17" pos:end="39:21">level</name> <operator pos:start="39:23" pos:end="39:24">==</operator> <literal type="number" pos:start="39:26" pos:end="39:28">127</literal></expr>)</condition> <block pos:start="39:31" pos:end="43:13">{<block_content pos:start="41:17" pos:end="41:22">

                <break pos:start="41:17" pos:end="41:22">break;</break>

            </block_content>}</block></if> <if type="elseif" pos:start="43:15" pos:end="57:13">else if <condition pos:start="43:23" pos:end="43:34">(<expr pos:start="43:24" pos:end="43:33"><name pos:start="43:24" pos:end="43:28">level</name> <operator pos:start="43:30" pos:end="43:31">!=</operator> <literal type="number" pos:start="43:33" pos:end="43:33">0</literal></expr>)</condition> <block pos:start="43:36" pos:end="57:13">{<block_content pos:start="45:17" pos:end="55:46">

                <expr_stmt pos:start="45:17" pos:end="45:25"><expr pos:start="45:17" pos:end="45:24"><name pos:start="45:17" pos:end="45:17">i</name> <operator pos:start="45:19" pos:end="45:20">+=</operator> <name pos:start="45:22" pos:end="45:24">run</name></expr>;</expr_stmt>

                <expr_stmt pos:start="47:17" pos:end="47:33"><expr pos:start="47:17" pos:end="47:32"><name pos:start="47:17" pos:end="47:17">j</name> <operator pos:start="47:19" pos:end="47:19">=</operator> <name pos:start="47:21" pos:end="47:32"><name pos:start="47:21" pos:end="47:29">scantable</name><index pos:start="47:30" pos:end="47:32">[<expr pos:start="47:31" pos:end="47:31"><name pos:start="47:31" pos:end="47:31">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="49:17" pos:end="49:53"><expr pos:start="49:17" pos:end="49:52"><name pos:start="49:17" pos:end="49:21">level</name> <operator pos:start="49:23" pos:end="49:23">=</operator> <operator pos:start="49:25" pos:end="49:25">(</operator><name pos:start="49:26" pos:end="49:30">level</name><operator pos:start="49:31" pos:end="49:31">*</operator><name pos:start="49:32" pos:end="49:46"><name pos:start="49:32" pos:end="49:43">quant_matrix</name><index pos:start="49:44" pos:end="49:46">[<expr pos:start="49:45" pos:end="49:45"><name pos:start="49:45" pos:end="49:45">j</name></expr>]</index></name><operator pos:start="49:47" pos:end="49:47">)</operator> <operator pos:start="49:49" pos:end="49:50">&gt;&gt;</operator> <literal type="number" pos:start="49:52" pos:end="49:52">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="51:17" pos:end="51:36"><expr pos:start="51:17" pos:end="51:35"><name pos:start="51:17" pos:end="51:21">level</name> <operator pos:start="51:23" pos:end="51:23">=</operator> <operator pos:start="51:25" pos:end="51:25">(</operator><name pos:start="51:26" pos:end="51:30">level</name><operator pos:start="51:31" pos:end="51:31">-</operator><literal type="number" pos:start="51:32" pos:end="51:32">1</literal><operator pos:start="51:33" pos:end="51:33">)</operator><operator pos:start="51:34" pos:end="51:34">|</operator><literal type="number" pos:start="51:35" pos:end="51:35">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="53:17" pos:end="53:88"><expr pos:start="53:17" pos:end="53:87"><name pos:start="53:17" pos:end="53:21">level</name> <operator pos:start="53:23" pos:end="53:23">=</operator> <operator pos:start="53:25" pos:end="53:25">(</operator><name pos:start="53:26" pos:end="53:30">level</name> <operator pos:start="53:32" pos:end="53:32">^</operator> <call pos:start="53:34" pos:end="53:58"><name pos:start="53:34" pos:end="53:43">SHOW_SBITS</name><argument_list pos:start="53:44" pos:end="53:58">(<argument pos:start="53:45" pos:end="53:46"><expr pos:start="53:45" pos:end="53:46"><name pos:start="53:45" pos:end="53:46">re</name></expr></argument>, <argument pos:start="53:49" pos:end="53:54"><expr pos:start="53:49" pos:end="53:54"><operator pos:start="53:49" pos:end="53:49">&amp;</operator><name pos:start="53:50" pos:end="53:54"><name pos:start="53:50" pos:end="53:50">s</name><operator pos:start="53:51" pos:end="53:52">-&gt;</operator><name pos:start="53:53" pos:end="53:54">gb</name></name></expr></argument>, <argument pos:start="53:57" pos:end="53:57"><expr pos:start="53:57" pos:end="53:57"><literal type="number" pos:start="53:57" pos:end="53:57">1</literal></expr></argument>)</argument_list></call><operator pos:start="53:59" pos:end="53:59">)</operator> <operator pos:start="53:61" pos:end="53:61">-</operator> <call pos:start="53:63" pos:end="53:87"><name pos:start="53:63" pos:end="53:72">SHOW_SBITS</name><argument_list pos:start="53:73" pos:end="53:87">(<argument pos:start="53:74" pos:end="53:75"><expr pos:start="53:74" pos:end="53:75"><name pos:start="53:74" pos:end="53:75">re</name></expr></argument>, <argument pos:start="53:78" pos:end="53:83"><expr pos:start="53:78" pos:end="53:83"><operator pos:start="53:78" pos:end="53:78">&amp;</operator><name pos:start="53:79" pos:end="53:83"><name pos:start="53:79" pos:end="53:79">s</name><operator pos:start="53:80" pos:end="53:81">-&gt;</operator><name pos:start="53:82" pos:end="53:83">gb</name></name></expr></argument>, <argument pos:start="53:86" pos:end="53:86"><expr pos:start="53:86" pos:end="53:86"><literal type="number" pos:start="53:86" pos:end="53:86">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="55:17" pos:end="55:46"><expr pos:start="55:17" pos:end="55:45"><call pos:start="55:17" pos:end="55:45"><name pos:start="55:17" pos:end="55:30">LAST_SKIP_BITS</name><argument_list pos:start="55:31" pos:end="55:45">(<argument pos:start="55:32" pos:end="55:33"><expr pos:start="55:32" pos:end="55:33"><name pos:start="55:32" pos:end="55:33">re</name></expr></argument>, <argument pos:start="55:36" pos:end="55:41"><expr pos:start="55:36" pos:end="55:41"><operator pos:start="55:36" pos:end="55:36">&amp;</operator><name pos:start="55:37" pos:end="55:41"><name pos:start="55:37" pos:end="55:37">s</name><operator pos:start="55:38" pos:end="55:39">-&gt;</operator><name pos:start="55:40" pos:end="55:41">gb</name></name></expr></argument>, <argument pos:start="55:44" pos:end="55:44"><expr pos:start="55:44" pos:end="55:44"><literal type="number" pos:start="55:44" pos:end="55:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="57:15" pos:end="95:13">else <block pos:start="57:20" pos:end="95:13">{<block_content pos:start="61:17" pos:end="93:17">

                <comment type="block" pos:start="59:17" pos:end="59:28">/* escape */</comment>

                <expr_stmt pos:start="61:17" pos:end="61:41"><expr pos:start="61:17" pos:end="61:40"><call pos:start="61:17" pos:end="61:40"><name pos:start="61:17" pos:end="61:28">UPDATE_CACHE</name><argument_list pos:start="61:29" pos:end="61:40">(<argument pos:start="61:30" pos:end="61:31"><expr pos:start="61:30" pos:end="61:31"><name pos:start="61:30" pos:end="61:31">re</name></expr></argument>, <argument pos:start="61:34" pos:end="61:39"><expr pos:start="61:34" pos:end="61:39"><operator pos:start="61:34" pos:end="61:34">&amp;</operator><name pos:start="61:35" pos:end="61:39"><name pos:start="61:35" pos:end="61:35">s</name><operator pos:start="61:36" pos:end="61:37">-&gt;</operator><name pos:start="61:38" pos:end="61:39">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="63:17" pos:end="63:51"><expr pos:start="63:17" pos:end="63:50"><name pos:start="63:17" pos:end="63:21">level</name> <operator pos:start="63:23" pos:end="63:23">=</operator> <call pos:start="63:25" pos:end="63:50"><name pos:start="63:25" pos:end="63:34">SHOW_SBITS</name><argument_list pos:start="63:35" pos:end="63:50">(<argument pos:start="63:36" pos:end="63:37"><expr pos:start="63:36" pos:end="63:37"><name pos:start="63:36" pos:end="63:37">re</name></expr></argument>, <argument pos:start="63:40" pos:end="63:45"><expr pos:start="63:40" pos:end="63:45"><operator pos:start="63:40" pos:end="63:40">&amp;</operator><name pos:start="63:41" pos:end="63:45"><name pos:start="63:41" pos:end="63:41">s</name><operator pos:start="63:42" pos:end="63:43">-&gt;</operator><name pos:start="63:44" pos:end="63:45">gb</name></name></expr></argument>, <argument pos:start="63:48" pos:end="63:49"><expr pos:start="63:48" pos:end="63:49"><literal type="number" pos:start="63:48" pos:end="63:49">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="63:53" pos:end="63:78"><expr pos:start="63:53" pos:end="63:77"><call pos:start="63:53" pos:end="63:77"><name pos:start="63:53" pos:end="63:61">SKIP_BITS</name><argument_list pos:start="63:62" pos:end="63:77">(<argument pos:start="63:63" pos:end="63:64"><expr pos:start="63:63" pos:end="63:64"><name pos:start="63:63" pos:end="63:64">re</name></expr></argument>, <argument pos:start="63:67" pos:end="63:72"><expr pos:start="63:67" pos:end="63:72"><operator pos:start="63:67" pos:end="63:67">&amp;</operator><name pos:start="63:68" pos:end="63:72"><name pos:start="63:68" pos:end="63:68">s</name><operator pos:start="63:69" pos:end="63:70">-&gt;</operator><name pos:start="63:71" pos:end="63:72">gb</name></name></expr></argument>, <argument pos:start="63:75" pos:end="63:76"><expr pos:start="63:75" pos:end="63:76"><literal type="number" pos:start="63:75" pos:end="63:76">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="67:17" pos:end="67:41"><expr pos:start="67:17" pos:end="67:40"><call pos:start="67:17" pos:end="67:40"><name pos:start="67:17" pos:end="67:28">UPDATE_CACHE</name><argument_list pos:start="67:29" pos:end="67:40">(<argument pos:start="67:30" pos:end="67:31"><expr pos:start="67:30" pos:end="67:31"><name pos:start="67:30" pos:end="67:31">re</name></expr></argument>, <argument pos:start="67:34" pos:end="67:39"><expr pos:start="67:34" pos:end="67:39"><operator pos:start="67:34" pos:end="67:34">&amp;</operator><name pos:start="67:35" pos:end="67:39"><name pos:start="67:35" pos:end="67:35">s</name><operator pos:start="67:36" pos:end="67:37">-&gt;</operator><name pos:start="67:38" pos:end="67:39">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="69:17" pos:end="69:50"><expr pos:start="69:17" pos:end="69:49"><name pos:start="69:17" pos:end="69:19">run</name> <operator pos:start="69:21" pos:end="69:21">=</operator> <call pos:start="69:23" pos:end="69:47"><name pos:start="69:23" pos:end="69:32">SHOW_UBITS</name><argument_list pos:start="69:33" pos:end="69:47">(<argument pos:start="69:34" pos:end="69:35"><expr pos:start="69:34" pos:end="69:35"><name pos:start="69:34" pos:end="69:35">re</name></expr></argument>, <argument pos:start="69:38" pos:end="69:43"><expr pos:start="69:38" pos:end="69:43"><operator pos:start="69:38" pos:end="69:38">&amp;</operator><name pos:start="69:39" pos:end="69:43"><name pos:start="69:39" pos:end="69:39">s</name><operator pos:start="69:40" pos:end="69:41">-&gt;</operator><name pos:start="69:42" pos:end="69:43">gb</name></name></expr></argument>, <argument pos:start="69:46" pos:end="69:46"><expr pos:start="69:46" pos:end="69:46"><literal type="number" pos:start="69:46" pos:end="69:46">6</literal></expr></argument>)</argument_list></call><operator pos:start="69:48" pos:end="69:48">+</operator><literal type="number" pos:start="69:49" pos:end="69:49">1</literal></expr>;</expr_stmt> <expr_stmt pos:start="69:52" pos:end="69:81"><expr pos:start="69:52" pos:end="69:80"><call pos:start="69:52" pos:end="69:80"><name pos:start="69:52" pos:end="69:65">LAST_SKIP_BITS</name><argument_list pos:start="69:66" pos:end="69:80">(<argument pos:start="69:67" pos:end="69:68"><expr pos:start="69:67" pos:end="69:68"><name pos:start="69:67" pos:end="69:68">re</name></expr></argument>, <argument pos:start="69:71" pos:end="69:76"><expr pos:start="69:71" pos:end="69:76"><operator pos:start="69:71" pos:end="69:71">&amp;</operator><name pos:start="69:72" pos:end="69:76"><name pos:start="69:72" pos:end="69:72">s</name><operator pos:start="69:73" pos:end="69:74">-&gt;</operator><name pos:start="69:75" pos:end="69:76">gb</name></name></expr></argument>, <argument pos:start="69:79" pos:end="69:79"><expr pos:start="69:79" pos:end="69:79"><literal type="number" pos:start="69:79" pos:end="69:79">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="73:17" pos:end="73:25"><expr pos:start="73:17" pos:end="73:24"><name pos:start="73:17" pos:end="73:17">i</name> <operator pos:start="73:19" pos:end="73:20">+=</operator> <name pos:start="73:22" pos:end="73:24">run</name></expr>;</expr_stmt>

                <expr_stmt pos:start="75:17" pos:end="75:33"><expr pos:start="75:17" pos:end="75:32"><name pos:start="75:17" pos:end="75:17">j</name> <operator pos:start="75:19" pos:end="75:19">=</operator> <name pos:start="75:21" pos:end="75:32"><name pos:start="75:21" pos:end="75:29">scantable</name><index pos:start="75:30" pos:end="75:32">[<expr pos:start="75:31" pos:end="75:31"><name pos:start="75:31" pos:end="75:31">i</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="77:17" pos:end="93:17"><if pos:start="77:17" pos:end="87:17">if <condition pos:start="77:20" pos:end="77:30">(<expr pos:start="77:21" pos:end="77:29"><name pos:start="77:21" pos:end="77:25">level</name> <operator pos:start="77:27" pos:end="77:27">&lt;</operator> <literal type="number" pos:start="77:29" pos:end="77:29">0</literal></expr>)</condition> <block pos:start="77:32" pos:end="87:17">{<block_content pos:start="79:21" pos:end="85:35">

                    <expr_stmt pos:start="79:21" pos:end="79:35"><expr pos:start="79:21" pos:end="79:34"><name pos:start="79:21" pos:end="79:25">level</name> <operator pos:start="79:27" pos:end="79:27">=</operator> <operator pos:start="79:29" pos:end="79:29">-</operator><name pos:start="79:30" pos:end="79:34">level</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="81:21" pos:end="81:57"><expr pos:start="81:21" pos:end="81:56"><name pos:start="81:21" pos:end="81:25">level</name> <operator pos:start="81:27" pos:end="81:27">=</operator> <operator pos:start="81:29" pos:end="81:29">(</operator><name pos:start="81:30" pos:end="81:34">level</name><operator pos:start="81:35" pos:end="81:35">*</operator><name pos:start="81:36" pos:end="81:50"><name pos:start="81:36" pos:end="81:47">quant_matrix</name><index pos:start="81:48" pos:end="81:50">[<expr pos:start="81:49" pos:end="81:49"><name pos:start="81:49" pos:end="81:49">j</name></expr>]</index></name><operator pos:start="81:51" pos:end="81:51">)</operator> <operator pos:start="81:53" pos:end="81:54">&gt;&gt;</operator> <literal type="number" pos:start="81:56" pos:end="81:56">4</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="83:21" pos:end="83:40"><expr pos:start="83:21" pos:end="83:39"><name pos:start="83:21" pos:end="83:25">level</name> <operator pos:start="83:27" pos:end="83:27">=</operator> <operator pos:start="83:29" pos:end="83:29">(</operator><name pos:start="83:30" pos:end="83:34">level</name><operator pos:start="83:35" pos:end="83:35">-</operator><literal type="number" pos:start="83:36" pos:end="83:36">1</literal><operator pos:start="83:37" pos:end="83:37">)</operator><operator pos:start="83:38" pos:end="83:38">|</operator><literal type="number" pos:start="83:39" pos:end="83:39">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="85:21" pos:end="85:35"><expr pos:start="85:21" pos:end="85:34"><name pos:start="85:21" pos:end="85:25">level</name> <operator pos:start="85:27" pos:end="85:27">=</operator> <operator pos:start="85:29" pos:end="85:29">-</operator><name pos:start="85:30" pos:end="85:34">level</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="87:19" pos:end="93:17">else <block pos:start="87:24" pos:end="93:17">{<block_content pos:start="89:21" pos:end="91:40">

                    <expr_stmt pos:start="89:21" pos:end="89:57"><expr pos:start="89:21" pos:end="89:56"><name pos:start="89:21" pos:end="89:25">level</name> <operator pos:start="89:27" pos:end="89:27">=</operator> <operator pos:start="89:29" pos:end="89:29">(</operator><name pos:start="89:30" pos:end="89:34">level</name><operator pos:start="89:35" pos:end="89:35">*</operator><name pos:start="89:36" pos:end="89:50"><name pos:start="89:36" pos:end="89:47">quant_matrix</name><index pos:start="89:48" pos:end="89:50">[<expr pos:start="89:49" pos:end="89:49"><name pos:start="89:49" pos:end="89:49">j</name></expr>]</index></name><operator pos:start="89:51" pos:end="89:51">)</operator> <operator pos:start="89:53" pos:end="89:54">&gt;&gt;</operator> <literal type="number" pos:start="89:56" pos:end="89:56">4</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="91:21" pos:end="91:40"><expr pos:start="91:21" pos:end="91:39"><name pos:start="91:21" pos:end="91:25">level</name> <operator pos:start="91:27" pos:end="91:27">=</operator> <operator pos:start="91:29" pos:end="91:29">(</operator><name pos:start="91:30" pos:end="91:34">level</name><operator pos:start="91:35" pos:end="91:35">-</operator><literal type="number" pos:start="91:36" pos:end="91:36">1</literal><operator pos:start="91:37" pos:end="91:37">)</operator><operator pos:start="91:38" pos:end="91:38">|</operator><literal type="number" pos:start="91:39" pos:end="91:39">1</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="97:13" pos:end="103:13"><if pos:start="97:13" pos:end="103:13">if <condition pos:start="97:16" pos:end="97:23">(<expr pos:start="97:17" pos:end="97:22"><name pos:start="97:17" pos:end="97:17">i</name> <operator pos:start="97:19" pos:end="97:19">&gt;</operator> <literal type="number" pos:start="97:21" pos:end="97:22">63</literal></expr>)</condition> <block pos:start="97:25" pos:end="103:13">{<block_content pos:start="99:17" pos:end="101:23">

                <expr_stmt pos:start="99:17" pos:end="99:94"><expr pos:start="99:17" pos:end="99:93"><call pos:start="99:17" pos:end="99:93"><name pos:start="99:17" pos:end="99:22">av_log</name><argument_list pos:start="99:23" pos:end="99:93">(<argument pos:start="99:24" pos:end="99:31"><expr pos:start="99:24" pos:end="99:31"><name pos:start="99:24" pos:end="99:31"><name pos:start="99:24" pos:end="99:24">s</name><operator pos:start="99:25" pos:end="99:26">-&gt;</operator><name pos:start="99:27" pos:end="99:31">avctx</name></name></expr></argument>, <argument pos:start="99:34" pos:end="99:45"><expr pos:start="99:34" pos:end="99:45"><name pos:start="99:34" pos:end="99:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="99:48" pos:end="99:74"><expr pos:start="99:48" pos:end="99:74"><literal type="string" pos:start="99:48" pos:end="99:74">"ac-tex damaged at %d %d\n"</literal></expr></argument>, <argument pos:start="99:77" pos:end="99:83"><expr pos:start="99:77" pos:end="99:83"><name pos:start="99:77" pos:end="99:83"><name pos:start="99:77" pos:end="99:77">s</name><operator pos:start="99:78" pos:end="99:79">-&gt;</operator><name pos:start="99:80" pos:end="99:83">mb_x</name></name></expr></argument>, <argument pos:start="99:86" pos:end="99:92"><expr pos:start="99:86" pos:end="99:92"><name pos:start="99:86" pos:end="99:92"><name pos:start="99:86" pos:end="99:86">s</name><operator pos:start="99:87" pos:end="99:88">-&gt;</operator><name pos:start="99:89" pos:end="99:92">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="101:17" pos:end="101:23">return;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="107:13" pos:end="107:29"><expr pos:start="107:13" pos:end="107:28"><name pos:start="107:13" pos:end="107:20"><name pos:start="107:13" pos:end="107:17">block</name><index pos:start="107:18" pos:end="107:20">[<expr pos:start="107:19" pos:end="107:19"><name pos:start="107:19" pos:end="107:19">j</name></expr>]</index></name> <operator pos:start="107:22" pos:end="107:22">=</operator> <name pos:start="107:24" pos:end="107:28">level</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="111:9" pos:end="111:33"><expr pos:start="111:9" pos:end="111:32"><call pos:start="111:9" pos:end="111:32"><name pos:start="111:9" pos:end="111:20">CLOSE_READER</name><argument_list pos:start="111:21" pos:end="111:32">(<argument pos:start="111:22" pos:end="111:23"><expr pos:start="111:22" pos:end="111:23"><name pos:start="111:22" pos:end="111:23">re</name></expr></argument>, <argument pos:start="111:26" pos:end="111:31"><expr pos:start="111:26" pos:end="111:31"><operator pos:start="111:26" pos:end="111:26">&amp;</operator><name pos:start="111:27" pos:end="111:31"><name pos:start="111:27" pos:end="111:27">s</name><operator pos:start="111:28" pos:end="111:29">-&gt;</operator><name pos:start="111:30" pos:end="111:31">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>

</block_content>}</block></function>
</unit>
