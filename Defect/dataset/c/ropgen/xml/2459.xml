<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2459.c" pos:tabs="8"><function pos:start="1:1" pos:end="235:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">flush_packet</name><parameter_list pos:start="1:25" pos:end="3:63">(<parameter pos:start="1:26" pos:end="1:45"><decl pos:start="1:26" pos:end="1:45"><type pos:start="1:26" pos:end="1:45"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">ctx</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:63"><decl pos:start="1:48" pos:end="1:63"><type pos:start="1:48" pos:end="1:63"><name pos:start="1:48" pos:end="1:50">int</name></type> <name pos:start="1:52" pos:end="1:63">stream_index</name></decl></parameter>, 

                         <parameter pos:start="3:26" pos:end="3:36"><decl pos:start="3:26" pos:end="3:36"><type pos:start="3:26" pos:end="3:36"><name pos:start="3:26" pos:end="3:32">int64_t</name></type> <name pos:start="3:34" pos:end="3:36">pts</name></decl></parameter>, <parameter pos:start="3:39" pos:end="3:49"><decl pos:start="3:39" pos:end="3:49"><type pos:start="3:39" pos:end="3:49"><name pos:start="3:39" pos:end="3:45">int64_t</name></type> <name pos:start="3:47" pos:end="3:49">dts</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:62"><decl pos:start="3:52" pos:end="3:62"><type pos:start="3:52" pos:end="3:62"><name pos:start="3:52" pos:end="3:58">int64_t</name></type> <name pos:start="3:60" pos:end="3:62">scr</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="235:1">{<block_content pos:start="7:5" pos:end="233:28">

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">MpegMuxContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:38">= <expr pos:start="7:25" pos:end="7:38"><name pos:start="7:25" pos:end="7:38"><name pos:start="7:25" pos:end="7:27">ctx</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:63"><decl pos:start="9:5" pos:end="9:62"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">StreamInfo</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:22">stream</name> <init pos:start="9:24" pos:end="9:62">= <expr pos:start="9:26" pos:end="9:62"><name pos:start="9:26" pos:end="9:51"><name pos:start="9:26" pos:end="9:28">ctx</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:37">streams</name><index pos:start="9:38" pos:end="9:51">[<expr pos:start="9:39" pos:end="9:50"><name pos:start="9:39" pos:end="9:50">stream_index</name></expr>]</index></name><operator pos:start="9:52" pos:end="9:53">-&gt;</operator><name pos:start="9:54" pos:end="9:62">priv_data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:20">buf_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:77"><decl pos:start="13:5" pos:end="13:12"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">size</name></decl>, <decl pos:start="13:15" pos:end="13:26"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:15" pos:end="13:26">payload_size</name></decl>, <decl pos:start="13:29" pos:end="13:37"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:29" pos:end="13:37">startcode</name></decl>, <decl pos:start="13:40" pos:end="13:41"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:40" pos:end="13:41">id</name></decl>, <decl pos:start="13:44" pos:end="13:46"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:44" pos:end="13:46">len</name></decl>, <decl pos:start="13:49" pos:end="13:61"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:49" pos:end="13:61">stuffing_size</name></decl>, <decl pos:start="13:64" pos:end="13:64"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:64" pos:end="13:64">i</name></decl>, <decl pos:start="13:67" pos:end="13:76"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:67" pos:end="13:76">header_len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">uint8_t</name></type> <name pos:start="15:13" pos:end="15:23"><name pos:start="15:13" pos:end="15:18">buffer</name><index pos:start="15:19" pos:end="15:23">[<expr pos:start="15:20" pos:end="15:22"><literal type="number" pos:start="15:20" pos:end="15:22">128</literal></expr>]</index></name></decl>;</decl_stmt>

    

    <expr_stmt pos:start="19:5" pos:end="30:0"><expr pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:6">id</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <name pos:start="19:10" pos:end="19:19"><name pos:start="19:10" pos:end="19:15">stream</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:19">id</name></name></expr>;</expr_stmt>

    

<cpp:if pos:start="23:1" pos:end="23:5">#<cpp:directive pos:start="23:2" pos:end="23:3">if</cpp:directive> <expr pos:start="23:5" pos:end="23:5"><literal type="number" pos:start="23:5" pos:end="23:5">0</literal></expr></cpp:if>

    printf("packet ID=%2x PTS=%0.3f\n", 

           id, pts / 90000.0);

<cpp:endif pos:start="29:1" pos:end="29:6">#<cpp:directive pos:start="29:2" pos:end="29:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="33:5" pos:end="33:21"><expr pos:start="33:5" pos:end="33:20"><name pos:start="33:5" pos:end="33:11">buf_ptr</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <name pos:start="33:15" pos:end="33:20">buffer</name></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="51:5"><if pos:start="35:5" pos:end="51:5">if <condition pos:start="35:8" pos:end="35:56">(<expr pos:start="35:9" pos:end="35:55"><operator pos:start="35:9" pos:end="35:9">(</operator><operator pos:start="35:10" pos:end="35:10">(</operator><name pos:start="35:11" pos:end="35:26"><name pos:start="35:11" pos:end="35:11">s</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:26">packet_number</name></name> <operator pos:start="35:28" pos:end="35:28">%</operator> <name pos:start="35:30" pos:end="35:48"><name pos:start="35:30" pos:end="35:30">s</name><operator pos:start="35:31" pos:end="35:32">-&gt;</operator><name pos:start="35:33" pos:end="35:48">pack_header_freq</name></name><operator pos:start="35:49" pos:end="35:49">)</operator> <operator pos:start="35:51" pos:end="35:52">==</operator> <literal type="number" pos:start="35:54" pos:end="35:54">0</literal><operator pos:start="35:55" pos:end="35:55">)</operator></expr>)</condition> <block pos:start="35:58" pos:end="51:5">{<block_content pos:start="39:9" pos:end="49:9">

        <comment type="block" pos:start="37:9" pos:end="37:54">/* output pack and systems header if needed */</comment>

        <expr_stmt pos:start="39:9" pos:end="39:50"><expr pos:start="39:9" pos:end="39:49"><name pos:start="39:9" pos:end="39:12">size</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <call pos:start="39:16" pos:end="39:49"><name pos:start="39:16" pos:end="39:30">put_pack_header</name><argument_list pos:start="39:31" pos:end="39:49">(<argument pos:start="39:32" pos:end="39:34"><expr pos:start="39:32" pos:end="39:34"><name pos:start="39:32" pos:end="39:34">ctx</name></expr></argument>, <argument pos:start="39:37" pos:end="39:43"><expr pos:start="39:37" pos:end="39:43"><name pos:start="39:37" pos:end="39:43">buf_ptr</name></expr></argument>, <argument pos:start="39:46" pos:end="39:48"><expr pos:start="39:46" pos:end="39:48"><name pos:start="39:46" pos:end="39:48">scr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:24"><expr pos:start="41:9" pos:end="41:23"><name pos:start="41:9" pos:end="41:15">buf_ptr</name> <operator pos:start="41:17" pos:end="41:18">+=</operator> <name pos:start="41:20" pos:end="41:23">size</name></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="49:9"><if pos:start="43:9" pos:end="49:9">if <condition pos:start="43:12" pos:end="43:60">(<expr pos:start="43:13" pos:end="43:59"><operator pos:start="43:13" pos:end="43:13">(</operator><name pos:start="43:14" pos:end="43:29"><name pos:start="43:14" pos:end="43:14">s</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:29">packet_number</name></name> <operator pos:start="43:31" pos:end="43:31">%</operator> <name pos:start="43:33" pos:end="43:53"><name pos:start="43:33" pos:end="43:33">s</name><operator pos:start="43:34" pos:end="43:35">-&gt;</operator><name pos:start="43:36" pos:end="43:53">system_header_freq</name></name><operator pos:start="43:54" pos:end="43:54">)</operator> <operator pos:start="43:56" pos:end="43:57">==</operator> <literal type="number" pos:start="43:59" pos:end="43:59">0</literal></expr>)</condition> <block pos:start="43:62" pos:end="49:9">{<block_content pos:start="45:13" pos:end="47:28">

            <expr_stmt pos:start="45:13" pos:end="45:51"><expr pos:start="45:13" pos:end="45:50"><name pos:start="45:13" pos:end="45:16">size</name> <operator pos:start="45:18" pos:end="45:18">=</operator> <call pos:start="45:20" pos:end="45:50"><name pos:start="45:20" pos:end="45:36">put_system_header</name><argument_list pos:start="45:37" pos:end="45:50">(<argument pos:start="45:38" pos:end="45:40"><expr pos:start="45:38" pos:end="45:40"><name pos:start="45:38" pos:end="45:40">ctx</name></expr></argument>, <argument pos:start="45:43" pos:end="45:49"><expr pos:start="45:43" pos:end="45:49"><name pos:start="45:43" pos:end="45:49">buf_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:28"><expr pos:start="47:13" pos:end="47:27"><name pos:start="47:13" pos:end="47:19">buf_ptr</name> <operator pos:start="47:21" pos:end="47:22">+=</operator> <name pos:start="47:24" pos:end="47:27">size</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:28"><expr pos:start="53:5" pos:end="53:27"><name pos:start="53:5" pos:end="53:8">size</name> <operator pos:start="53:10" pos:end="53:10">=</operator> <name pos:start="53:12" pos:end="53:18">buf_ptr</name> <operator pos:start="53:20" pos:end="53:20">-</operator> <name pos:start="53:22" pos:end="53:27">buffer</name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:39"><expr pos:start="55:5" pos:end="55:38"><call pos:start="55:5" pos:end="55:38"><name pos:start="55:5" pos:end="55:14">put_buffer</name><argument_list pos:start="55:15" pos:end="55:38">(<argument pos:start="55:16" pos:end="55:23"><expr pos:start="55:16" pos:end="55:23"><operator pos:start="55:16" pos:end="55:16">&amp;</operator><name pos:start="55:17" pos:end="55:23"><name pos:start="55:17" pos:end="55:19">ctx</name><operator pos:start="55:20" pos:end="55:21">-&gt;</operator><name pos:start="55:22" pos:end="55:23">pb</name></name></expr></argument>, <argument pos:start="55:26" pos:end="55:31"><expr pos:start="55:26" pos:end="55:31"><name pos:start="55:26" pos:end="55:31">buffer</name></expr></argument>, <argument pos:start="55:34" pos:end="55:37"><expr pos:start="55:34" pos:end="55:37"><name pos:start="55:34" pos:end="55:37">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="59:5" pos:end="59:23">/* packet header */</comment>

    <if_stmt pos:start="61:5" pos:end="69:5"><if pos:start="61:5" pos:end="65:5">if <condition pos:start="61:8" pos:end="61:20">(<expr pos:start="61:9" pos:end="61:19"><name pos:start="61:9" pos:end="61:19"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:19">is_mpeg2</name></name></expr>)</condition> <block pos:start="61:22" pos:end="65:5">{<block_content pos:start="63:9" pos:end="63:23">

        <expr_stmt pos:start="63:9" pos:end="63:23"><expr pos:start="63:9" pos:end="63:22"><name pos:start="63:9" pos:end="63:18">header_len</name> <operator pos:start="63:20" pos:end="63:20">=</operator> <literal type="number" pos:start="63:22" pos:end="63:22">3</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="65:7" pos:end="69:5">else <block pos:start="65:12" pos:end="69:5">{<block_content pos:start="67:9" pos:end="67:23">

        <expr_stmt pos:start="67:9" pos:end="67:23"><expr pos:start="67:9" pos:end="67:22"><name pos:start="67:9" pos:end="67:18">header_len</name> <operator pos:start="67:20" pos:end="67:20">=</operator> <literal type="number" pos:start="67:22" pos:end="67:22">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="71:5" pos:end="87:5"><if pos:start="71:5" pos:end="81:5">if <condition pos:start="71:8" pos:end="71:30">(<expr pos:start="71:9" pos:end="71:29"><name pos:start="71:9" pos:end="71:11">pts</name> <operator pos:start="71:13" pos:end="71:14">!=</operator> <name pos:start="71:16" pos:end="71:29">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="71:32" pos:end="81:5">{<block_content pos:start="73:9" pos:end="79:28">

        <if_stmt pos:start="73:9" pos:end="79:28"><if pos:start="73:9" pos:end="75:32">if <condition pos:start="73:12" pos:end="73:34">(<expr pos:start="73:13" pos:end="73:33"><name pos:start="73:13" pos:end="73:15">dts</name> <operator pos:start="73:17" pos:end="73:18">!=</operator> <name pos:start="73:20" pos:end="73:33">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="75:13" pos:end="75:32"><block_content pos:start="75:13" pos:end="75:32">

            <expr_stmt pos:start="75:13" pos:end="75:32"><expr pos:start="75:13" pos:end="75:31"><name pos:start="75:13" pos:end="75:22">header_len</name> <operator pos:start="75:24" pos:end="75:25">+=</operator> <literal type="number" pos:start="75:27" pos:end="75:29">5</literal> <operator pos:start="75:29" pos:end="75:29">+</operator> <literal type="number" pos:start="75:31" pos:end="75:31">5</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="77:9" pos:end="79:28">else<block type="pseudo" pos:start="79:13" pos:end="79:28"><block_content pos:start="79:13" pos:end="79:28">

            <expr_stmt pos:start="79:13" pos:end="79:28"><expr pos:start="79:13" pos:end="79:27"><name pos:start="79:13" pos:end="79:22">header_len</name> <operator pos:start="79:24" pos:end="79:25">+=</operator> <literal type="number" pos:start="79:27" pos:end="79:27">5</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="81:7" pos:end="87:5">else <block pos:start="81:12" pos:end="87:5">{<block_content pos:start="83:9" pos:end="85:25">

        <if_stmt pos:start="83:9" pos:end="85:25"><if pos:start="83:9" pos:end="85:25">if <condition pos:start="83:12" pos:end="83:25">(<expr pos:start="83:13" pos:end="83:24"><operator pos:start="83:13" pos:end="83:13">!</operator><name pos:start="83:14" pos:end="83:24"><name pos:start="83:14" pos:end="83:14">s</name><operator pos:start="83:15" pos:end="83:16">-&gt;</operator><name pos:start="83:17" pos:end="83:24">is_mpeg2</name></name></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:25"><block_content pos:start="85:13" pos:end="85:25">

            <expr_stmt pos:start="85:13" pos:end="85:25"><expr pos:start="85:13" pos:end="85:24"><name pos:start="85:13" pos:end="85:22">header_len</name><operator pos:start="85:23" pos:end="85:24">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:60"><expr pos:start="91:5" pos:end="91:59"><name pos:start="91:5" pos:end="91:16">payload_size</name> <operator pos:start="91:18" pos:end="91:18">=</operator> <name pos:start="91:20" pos:end="91:33"><name pos:start="91:20" pos:end="91:20">s</name><operator pos:start="91:21" pos:end="91:22">-&gt;</operator><name pos:start="91:23" pos:end="91:33">packet_size</name></name> <operator pos:start="91:35" pos:end="91:35">-</operator> <operator pos:start="91:37" pos:end="91:37">(</operator><name pos:start="91:38" pos:end="91:41">size</name> <operator pos:start="91:43" pos:end="91:43">+</operator> <literal type="number" pos:start="91:45" pos:end="91:47">6</literal> <operator pos:start="91:47" pos:end="91:47">+</operator> <name pos:start="91:49" pos:end="91:58">header_len</name><operator pos:start="91:59" pos:end="91:59">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="93:5" pos:end="103:5"><if pos:start="93:5" pos:end="99:5">if <condition pos:start="93:8" pos:end="93:18">(<expr pos:start="93:9" pos:end="93:17"><name pos:start="93:9" pos:end="93:10">id</name> <operator pos:start="93:12" pos:end="93:12">&lt;</operator> <literal type="number" pos:start="93:14" pos:end="93:17">0xc0</literal></expr>)</condition> <block pos:start="93:20" pos:end="99:5">{<block_content pos:start="95:9" pos:end="97:26">

        <expr_stmt pos:start="95:9" pos:end="95:37"><expr pos:start="95:9" pos:end="95:36"><name pos:start="95:9" pos:end="95:17">startcode</name> <operator pos:start="95:19" pos:end="95:19">=</operator> <name pos:start="95:21" pos:end="95:36">PRIVATE_STREAM_1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:26"><expr pos:start="97:9" pos:end="97:25"><name pos:start="97:9" pos:end="97:20">payload_size</name> <operator pos:start="97:22" pos:end="97:23">-=</operator> <literal type="number" pos:start="97:25" pos:end="97:25">4</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="99:7" pos:end="103:5">else <block pos:start="99:12" pos:end="103:5">{<block_content pos:start="101:9" pos:end="101:31">

        <expr_stmt pos:start="101:9" pos:end="101:31"><expr pos:start="101:9" pos:end="101:30"><name pos:start="101:9" pos:end="101:17">startcode</name> <operator pos:start="101:19" pos:end="101:19">=</operator> <literal type="number" pos:start="101:21" pos:end="101:27">0x100</literal> <operator pos:start="101:27" pos:end="101:27">+</operator> <name pos:start="101:29" pos:end="101:30">id</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:54"><expr pos:start="105:5" pos:end="105:53"><name pos:start="105:5" pos:end="105:17">stuffing_size</name> <operator pos:start="105:19" pos:end="105:19">=</operator> <name pos:start="105:21" pos:end="105:32">payload_size</name> <operator pos:start="105:34" pos:end="105:34">-</operator> <name pos:start="105:36" pos:end="105:53"><name pos:start="105:36" pos:end="105:41">stream</name><operator pos:start="105:42" pos:end="105:43">-&gt;</operator><name pos:start="105:44" pos:end="105:53">buffer_ptr</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="107:5" pos:end="109:26"><if pos:start="107:5" pos:end="109:26">if <condition pos:start="107:8" pos:end="107:26">(<expr pos:start="107:9" pos:end="107:25"><name pos:start="107:9" pos:end="107:21">stuffing_size</name> <operator pos:start="107:23" pos:end="107:23">&lt;</operator> <literal type="number" pos:start="107:25" pos:end="107:25">0</literal></expr>)</condition><block type="pseudo" pos:start="109:9" pos:end="109:26"><block_content pos:start="109:9" pos:end="109:26">

        <expr_stmt pos:start="109:9" pos:end="109:26"><expr pos:start="109:9" pos:end="109:25"><name pos:start="109:9" pos:end="109:21">stuffing_size</name> <operator pos:start="109:23" pos:end="109:23">=</operator> <literal type="number" pos:start="109:25" pos:end="109:25">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="113:5" pos:end="113:34"><expr pos:start="113:5" pos:end="113:33"><call pos:start="113:5" pos:end="113:33"><name pos:start="113:5" pos:end="113:12">put_be32</name><argument_list pos:start="113:13" pos:end="113:33">(<argument pos:start="113:14" pos:end="113:21"><expr pos:start="113:14" pos:end="113:21"><operator pos:start="113:14" pos:end="113:14">&amp;</operator><name pos:start="113:15" pos:end="113:21"><name pos:start="113:15" pos:end="113:17">ctx</name><operator pos:start="113:18" pos:end="113:19">-&gt;</operator><name pos:start="113:20" pos:end="113:21">pb</name></name></expr></argument>, <argument pos:start="113:24" pos:end="113:32"><expr pos:start="113:24" pos:end="113:32"><name pos:start="113:24" pos:end="113:32">startcode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="117:5" pos:end="117:50"><expr pos:start="117:5" pos:end="117:49"><call pos:start="117:5" pos:end="117:49"><name pos:start="117:5" pos:end="117:12">put_be16</name><argument_list pos:start="117:13" pos:end="117:49">(<argument pos:start="117:14" pos:end="117:21"><expr pos:start="117:14" pos:end="117:21"><operator pos:start="117:14" pos:end="117:14">&amp;</operator><name pos:start="117:15" pos:end="117:21"><name pos:start="117:15" pos:end="117:17">ctx</name><operator pos:start="117:18" pos:end="117:19">-&gt;</operator><name pos:start="117:20" pos:end="117:21">pb</name></name></expr></argument>, <argument pos:start="117:24" pos:end="117:48"><expr pos:start="117:24" pos:end="117:48"><name pos:start="117:24" pos:end="117:35">payload_size</name> <operator pos:start="117:37" pos:end="117:37">+</operator> <name pos:start="117:39" pos:end="117:48">header_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="119:5" pos:end="119:18">/* stuffing */</comment>

    <for pos:start="121:5" pos:end="123:33">for<control pos:start="121:8" pos:end="121:32">(<init pos:start="121:9" pos:end="121:12"><expr pos:start="121:9" pos:end="121:11"><name pos:start="121:9" pos:end="121:9">i</name><operator pos:start="121:10" pos:end="121:10">=</operator><literal type="number" pos:start="121:11" pos:end="121:11">0</literal></expr>;</init><condition pos:start="121:13" pos:end="121:28"><expr pos:start="121:13" pos:end="121:27"><name pos:start="121:13" pos:end="121:13">i</name><operator pos:start="121:14" pos:end="121:14">&lt;</operator><name pos:start="121:15" pos:end="121:27">stuffing_size</name></expr>;</condition><incr pos:start="121:29" pos:end="121:31"><expr pos:start="121:29" pos:end="121:31"><name pos:start="121:29" pos:end="121:29">i</name><operator pos:start="121:30" pos:end="121:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="123:9" pos:end="123:33"><block_content pos:start="123:9" pos:end="123:33">

        <expr_stmt pos:start="123:9" pos:end="123:33"><expr pos:start="123:9" pos:end="123:32"><call pos:start="123:9" pos:end="123:32"><name pos:start="123:9" pos:end="123:16">put_byte</name><argument_list pos:start="123:17" pos:end="123:32">(<argument pos:start="123:18" pos:end="123:25"><expr pos:start="123:18" pos:end="123:25"><operator pos:start="123:18" pos:end="123:18">&amp;</operator><name pos:start="123:19" pos:end="123:25"><name pos:start="123:19" pos:end="123:21">ctx</name><operator pos:start="123:22" pos:end="123:23">-&gt;</operator><name pos:start="123:24" pos:end="123:25">pb</name></name></expr></argument>, <argument pos:start="123:28" pos:end="123:31"><expr pos:start="123:28" pos:end="123:31"><literal type="number" pos:start="123:28" pos:end="123:31">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <if_stmt pos:start="127:5" pos:end="185:5"><if pos:start="127:5" pos:end="163:5">if <condition pos:start="127:8" pos:end="127:20">(<expr pos:start="127:9" pos:end="127:19"><name pos:start="127:9" pos:end="127:19"><name pos:start="127:9" pos:end="127:9">s</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:19">is_mpeg2</name></name></expr>)</condition> <block pos:start="127:22" pos:end="163:5">{<block_content pos:start="129:9" pos:end="161:9">

        <expr_stmt pos:start="129:9" pos:end="129:33"><expr pos:start="129:9" pos:end="129:32"><call pos:start="129:9" pos:end="129:32"><name pos:start="129:9" pos:end="129:16">put_byte</name><argument_list pos:start="129:17" pos:end="129:32">(<argument pos:start="129:18" pos:end="129:25"><expr pos:start="129:18" pos:end="129:25"><operator pos:start="129:18" pos:end="129:18">&amp;</operator><name pos:start="129:19" pos:end="129:25"><name pos:start="129:19" pos:end="129:21">ctx</name><operator pos:start="129:22" pos:end="129:23">-&gt;</operator><name pos:start="129:24" pos:end="129:25">pb</name></name></expr></argument>, <argument pos:start="129:28" pos:end="129:31"><expr pos:start="129:28" pos:end="129:31"><literal type="number" pos:start="129:28" pos:end="129:31">0x80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="129:35" pos:end="129:48">/* mpeg2 id */</comment>



        <if_stmt pos:start="133:9" pos:end="161:9"><if pos:start="133:9" pos:end="155:9">if <condition pos:start="133:12" pos:end="133:34">(<expr pos:start="133:13" pos:end="133:33"><name pos:start="133:13" pos:end="133:15">pts</name> <operator pos:start="133:17" pos:end="133:18">!=</operator> <name pos:start="133:20" pos:end="133:33">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="133:36" pos:end="155:9">{<block_content pos:start="135:13" pos:end="153:13">

            <if_stmt pos:start="135:13" pos:end="153:13"><if pos:start="135:13" pos:end="145:13">if <condition pos:start="135:16" pos:end="135:38">(<expr pos:start="135:17" pos:end="135:37"><name pos:start="135:17" pos:end="135:19">dts</name> <operator pos:start="135:21" pos:end="135:22">!=</operator> <name pos:start="135:24" pos:end="135:37">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="135:40" pos:end="145:13">{<block_content pos:start="137:17" pos:end="143:51">

                <expr_stmt pos:start="137:17" pos:end="137:41"><expr pos:start="137:17" pos:end="137:40"><call pos:start="137:17" pos:end="137:40"><name pos:start="137:17" pos:end="137:24">put_byte</name><argument_list pos:start="137:25" pos:end="137:40">(<argument pos:start="137:26" pos:end="137:33"><expr pos:start="137:26" pos:end="137:33"><operator pos:start="137:26" pos:end="137:26">&amp;</operator><name pos:start="137:27" pos:end="137:33"><name pos:start="137:27" pos:end="137:29">ctx</name><operator pos:start="137:30" pos:end="137:31">-&gt;</operator><name pos:start="137:32" pos:end="137:33">pb</name></name></expr></argument>, <argument pos:start="137:36" pos:end="137:39"><expr pos:start="137:36" pos:end="137:39"><literal type="number" pos:start="137:36" pos:end="137:39">0xc0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="137:43" pos:end="137:53">/* flags */</comment>

                <expr_stmt pos:start="139:17" pos:end="139:51"><expr pos:start="139:17" pos:end="139:50"><call pos:start="139:17" pos:end="139:50"><name pos:start="139:17" pos:end="139:24">put_byte</name><argument_list pos:start="139:25" pos:end="139:50">(<argument pos:start="139:26" pos:end="139:33"><expr pos:start="139:26" pos:end="139:33"><operator pos:start="139:26" pos:end="139:26">&amp;</operator><name pos:start="139:27" pos:end="139:33"><name pos:start="139:27" pos:end="139:29">ctx</name><operator pos:start="139:30" pos:end="139:31">-&gt;</operator><name pos:start="139:32" pos:end="139:33">pb</name></name></expr></argument>, <argument pos:start="139:36" pos:end="139:49"><expr pos:start="139:36" pos:end="139:49"><name pos:start="139:36" pos:end="139:45">header_len</name> <operator pos:start="139:47" pos:end="139:47">-</operator> <literal type="number" pos:start="139:49" pos:end="139:49">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="141:17" pos:end="141:51"><expr pos:start="141:17" pos:end="141:50"><call pos:start="141:17" pos:end="141:50"><name pos:start="141:17" pos:end="141:29">put_timestamp</name><argument_list pos:start="141:30" pos:end="141:50">(<argument pos:start="141:31" pos:end="141:38"><expr pos:start="141:31" pos:end="141:38"><operator pos:start="141:31" pos:end="141:31">&amp;</operator><name pos:start="141:32" pos:end="141:38"><name pos:start="141:32" pos:end="141:34">ctx</name><operator pos:start="141:35" pos:end="141:36">-&gt;</operator><name pos:start="141:37" pos:end="141:38">pb</name></name></expr></argument>, <argument pos:start="141:41" pos:end="141:44"><expr pos:start="141:41" pos:end="141:44"><literal type="number" pos:start="141:41" pos:end="141:44">0x03</literal></expr></argument>, <argument pos:start="141:47" pos:end="141:49"><expr pos:start="141:47" pos:end="141:49"><name pos:start="141:47" pos:end="141:49">pts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="143:17" pos:end="143:51"><expr pos:start="143:17" pos:end="143:50"><call pos:start="143:17" pos:end="143:50"><name pos:start="143:17" pos:end="143:29">put_timestamp</name><argument_list pos:start="143:30" pos:end="143:50">(<argument pos:start="143:31" pos:end="143:38"><expr pos:start="143:31" pos:end="143:38"><operator pos:start="143:31" pos:end="143:31">&amp;</operator><name pos:start="143:32" pos:end="143:38"><name pos:start="143:32" pos:end="143:34">ctx</name><operator pos:start="143:35" pos:end="143:36">-&gt;</operator><name pos:start="143:37" pos:end="143:38">pb</name></name></expr></argument>, <argument pos:start="143:41" pos:end="143:44"><expr pos:start="143:41" pos:end="143:44"><literal type="number" pos:start="143:41" pos:end="143:44">0x01</literal></expr></argument>, <argument pos:start="143:47" pos:end="143:49"><expr pos:start="143:47" pos:end="143:49"><name pos:start="143:47" pos:end="143:49">dts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="145:15" pos:end="153:13">else <block pos:start="145:20" pos:end="153:13">{<block_content pos:start="147:17" pos:end="151:51">

                <expr_stmt pos:start="147:17" pos:end="147:41"><expr pos:start="147:17" pos:end="147:40"><call pos:start="147:17" pos:end="147:40"><name pos:start="147:17" pos:end="147:24">put_byte</name><argument_list pos:start="147:25" pos:end="147:40">(<argument pos:start="147:26" pos:end="147:33"><expr pos:start="147:26" pos:end="147:33"><operator pos:start="147:26" pos:end="147:26">&amp;</operator><name pos:start="147:27" pos:end="147:33"><name pos:start="147:27" pos:end="147:29">ctx</name><operator pos:start="147:30" pos:end="147:31">-&gt;</operator><name pos:start="147:32" pos:end="147:33">pb</name></name></expr></argument>, <argument pos:start="147:36" pos:end="147:39"><expr pos:start="147:36" pos:end="147:39"><literal type="number" pos:start="147:36" pos:end="147:39">0x80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="147:43" pos:end="147:53">/* flags */</comment>

                <expr_stmt pos:start="149:17" pos:end="149:51"><expr pos:start="149:17" pos:end="149:50"><call pos:start="149:17" pos:end="149:50"><name pos:start="149:17" pos:end="149:24">put_byte</name><argument_list pos:start="149:25" pos:end="149:50">(<argument pos:start="149:26" pos:end="149:33"><expr pos:start="149:26" pos:end="149:33"><operator pos:start="149:26" pos:end="149:26">&amp;</operator><name pos:start="149:27" pos:end="149:33"><name pos:start="149:27" pos:end="149:29">ctx</name><operator pos:start="149:30" pos:end="149:31">-&gt;</operator><name pos:start="149:32" pos:end="149:33">pb</name></name></expr></argument>, <argument pos:start="149:36" pos:end="149:49"><expr pos:start="149:36" pos:end="149:49"><name pos:start="149:36" pos:end="149:45">header_len</name> <operator pos:start="149:47" pos:end="149:47">-</operator> <literal type="number" pos:start="149:49" pos:end="149:49">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="151:17" pos:end="151:51"><expr pos:start="151:17" pos:end="151:50"><call pos:start="151:17" pos:end="151:50"><name pos:start="151:17" pos:end="151:29">put_timestamp</name><argument_list pos:start="151:30" pos:end="151:50">(<argument pos:start="151:31" pos:end="151:38"><expr pos:start="151:31" pos:end="151:38"><operator pos:start="151:31" pos:end="151:31">&amp;</operator><name pos:start="151:32" pos:end="151:38"><name pos:start="151:32" pos:end="151:34">ctx</name><operator pos:start="151:35" pos:end="151:36">-&gt;</operator><name pos:start="151:37" pos:end="151:38">pb</name></name></expr></argument>, <argument pos:start="151:41" pos:end="151:44"><expr pos:start="151:41" pos:end="151:44"><literal type="number" pos:start="151:41" pos:end="151:44">0x02</literal></expr></argument>, <argument pos:start="151:47" pos:end="151:49"><expr pos:start="151:47" pos:end="151:49"><name pos:start="151:47" pos:end="151:49">pts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="155:11" pos:end="161:9">else <block pos:start="155:16" pos:end="161:9">{<block_content pos:start="157:13" pos:end="159:47">

            <expr_stmt pos:start="157:13" pos:end="157:37"><expr pos:start="157:13" pos:end="157:36"><call pos:start="157:13" pos:end="157:36"><name pos:start="157:13" pos:end="157:20">put_byte</name><argument_list pos:start="157:21" pos:end="157:36">(<argument pos:start="157:22" pos:end="157:29"><expr pos:start="157:22" pos:end="157:29"><operator pos:start="157:22" pos:end="157:22">&amp;</operator><name pos:start="157:23" pos:end="157:29"><name pos:start="157:23" pos:end="157:25">ctx</name><operator pos:start="157:26" pos:end="157:27">-&gt;</operator><name pos:start="157:28" pos:end="157:29">pb</name></name></expr></argument>, <argument pos:start="157:32" pos:end="157:35"><expr pos:start="157:32" pos:end="157:35"><literal type="number" pos:start="157:32" pos:end="157:35">0x00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="157:39" pos:end="157:49">/* flags */</comment>

            <expr_stmt pos:start="159:13" pos:end="159:47"><expr pos:start="159:13" pos:end="159:46"><call pos:start="159:13" pos:end="159:46"><name pos:start="159:13" pos:end="159:20">put_byte</name><argument_list pos:start="159:21" pos:end="159:46">(<argument pos:start="159:22" pos:end="159:29"><expr pos:start="159:22" pos:end="159:29"><operator pos:start="159:22" pos:end="159:22">&amp;</operator><name pos:start="159:23" pos:end="159:29"><name pos:start="159:23" pos:end="159:25">ctx</name><operator pos:start="159:26" pos:end="159:27">-&gt;</operator><name pos:start="159:28" pos:end="159:29">pb</name></name></expr></argument>, <argument pos:start="159:32" pos:end="159:45"><expr pos:start="159:32" pos:end="159:45"><name pos:start="159:32" pos:end="159:41">header_len</name> <operator pos:start="159:43" pos:end="159:43">-</operator> <literal type="number" pos:start="159:45" pos:end="159:45">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="163:7" pos:end="185:5">else <block pos:start="163:12" pos:end="185:5">{<block_content pos:start="165:9" pos:end="183:9">

        <if_stmt pos:start="165:9" pos:end="183:9"><if pos:start="165:9" pos:end="179:9">if <condition pos:start="165:12" pos:end="165:34">(<expr pos:start="165:13" pos:end="165:33"><name pos:start="165:13" pos:end="165:15">pts</name> <operator pos:start="165:17" pos:end="165:18">!=</operator> <name pos:start="165:20" pos:end="165:33">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="165:36" pos:end="179:9">{<block_content pos:start="167:13" pos:end="177:13">

            <if_stmt pos:start="167:13" pos:end="177:13"><if pos:start="167:13" pos:end="173:13">if <condition pos:start="167:16" pos:end="167:38">(<expr pos:start="167:17" pos:end="167:37"><name pos:start="167:17" pos:end="167:19">dts</name> <operator pos:start="167:21" pos:end="167:22">!=</operator> <name pos:start="167:24" pos:end="167:37">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="167:40" pos:end="173:13">{<block_content pos:start="169:17" pos:end="171:51">

                <expr_stmt pos:start="169:17" pos:end="169:51"><expr pos:start="169:17" pos:end="169:50"><call pos:start="169:17" pos:end="169:50"><name pos:start="169:17" pos:end="169:29">put_timestamp</name><argument_list pos:start="169:30" pos:end="169:50">(<argument pos:start="169:31" pos:end="169:38"><expr pos:start="169:31" pos:end="169:38"><operator pos:start="169:31" pos:end="169:31">&amp;</operator><name pos:start="169:32" pos:end="169:38"><name pos:start="169:32" pos:end="169:34">ctx</name><operator pos:start="169:35" pos:end="169:36">-&gt;</operator><name pos:start="169:37" pos:end="169:38">pb</name></name></expr></argument>, <argument pos:start="169:41" pos:end="169:44"><expr pos:start="169:41" pos:end="169:44"><literal type="number" pos:start="169:41" pos:end="169:44">0x03</literal></expr></argument>, <argument pos:start="169:47" pos:end="169:49"><expr pos:start="169:47" pos:end="169:49"><name pos:start="169:47" pos:end="169:49">pts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="171:17" pos:end="171:51"><expr pos:start="171:17" pos:end="171:50"><call pos:start="171:17" pos:end="171:50"><name pos:start="171:17" pos:end="171:29">put_timestamp</name><argument_list pos:start="171:30" pos:end="171:50">(<argument pos:start="171:31" pos:end="171:38"><expr pos:start="171:31" pos:end="171:38"><operator pos:start="171:31" pos:end="171:31">&amp;</operator><name pos:start="171:32" pos:end="171:38"><name pos:start="171:32" pos:end="171:34">ctx</name><operator pos:start="171:35" pos:end="171:36">-&gt;</operator><name pos:start="171:37" pos:end="171:38">pb</name></name></expr></argument>, <argument pos:start="171:41" pos:end="171:44"><expr pos:start="171:41" pos:end="171:44"><literal type="number" pos:start="171:41" pos:end="171:44">0x01</literal></expr></argument>, <argument pos:start="171:47" pos:end="171:49"><expr pos:start="171:47" pos:end="171:49"><name pos:start="171:47" pos:end="171:49">dts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="173:15" pos:end="177:13">else <block pos:start="173:20" pos:end="177:13">{<block_content pos:start="175:17" pos:end="175:51">

                <expr_stmt pos:start="175:17" pos:end="175:51"><expr pos:start="175:17" pos:end="175:50"><call pos:start="175:17" pos:end="175:50"><name pos:start="175:17" pos:end="175:29">put_timestamp</name><argument_list pos:start="175:30" pos:end="175:50">(<argument pos:start="175:31" pos:end="175:38"><expr pos:start="175:31" pos:end="175:38"><operator pos:start="175:31" pos:end="175:31">&amp;</operator><name pos:start="175:32" pos:end="175:38"><name pos:start="175:32" pos:end="175:34">ctx</name><operator pos:start="175:35" pos:end="175:36">-&gt;</operator><name pos:start="175:37" pos:end="175:38">pb</name></name></expr></argument>, <argument pos:start="175:41" pos:end="175:44"><expr pos:start="175:41" pos:end="175:44"><literal type="number" pos:start="175:41" pos:end="175:44">0x02</literal></expr></argument>, <argument pos:start="175:47" pos:end="175:49"><expr pos:start="175:47" pos:end="175:49"><name pos:start="175:47" pos:end="175:49">pts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="179:11" pos:end="183:9">else <block pos:start="179:16" pos:end="183:9">{<block_content pos:start="181:13" pos:end="181:37">

            <expr_stmt pos:start="181:13" pos:end="181:37"><expr pos:start="181:13" pos:end="181:36"><call pos:start="181:13" pos:end="181:36"><name pos:start="181:13" pos:end="181:20">put_byte</name><argument_list pos:start="181:21" pos:end="181:36">(<argument pos:start="181:22" pos:end="181:29"><expr pos:start="181:22" pos:end="181:29"><operator pos:start="181:22" pos:end="181:22">&amp;</operator><name pos:start="181:23" pos:end="181:29"><name pos:start="181:23" pos:end="181:25">ctx</name><operator pos:start="181:26" pos:end="181:27">-&gt;</operator><name pos:start="181:28" pos:end="181:29">pb</name></name></expr></argument>, <argument pos:start="181:32" pos:end="181:35"><expr pos:start="181:32" pos:end="181:35"><literal type="number" pos:start="181:32" pos:end="181:35">0x0f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="189:5" pos:end="205:5"><if pos:start="189:5" pos:end="205:5">if <condition pos:start="189:8" pos:end="189:38">(<expr pos:start="189:9" pos:end="189:37"><name pos:start="189:9" pos:end="189:17">startcode</name> <operator pos:start="189:19" pos:end="189:20">==</operator> <name pos:start="189:22" pos:end="189:37">PRIVATE_STREAM_1</name></expr>)</condition> <block pos:start="189:40" pos:end="205:5">{<block_content pos:start="191:9" pos:end="203:9">

        <expr_stmt pos:start="191:9" pos:end="191:31"><expr pos:start="191:9" pos:end="191:30"><call pos:start="191:9" pos:end="191:30"><name pos:start="191:9" pos:end="191:16">put_byte</name><argument_list pos:start="191:17" pos:end="191:30">(<argument pos:start="191:18" pos:end="191:25"><expr pos:start="191:18" pos:end="191:25"><operator pos:start="191:18" pos:end="191:18">&amp;</operator><name pos:start="191:19" pos:end="191:25"><name pos:start="191:19" pos:end="191:21">ctx</name><operator pos:start="191:22" pos:end="191:23">-&gt;</operator><name pos:start="191:24" pos:end="191:25">pb</name></name></expr></argument>, <argument pos:start="191:28" pos:end="191:29"><expr pos:start="191:28" pos:end="191:29"><name pos:start="191:28" pos:end="191:29">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="193:9" pos:end="203:9"><if pos:start="193:9" pos:end="203:9">if <condition pos:start="193:12" pos:end="193:37">(<expr pos:start="193:13" pos:end="193:36"><name pos:start="193:13" pos:end="193:14">id</name> <operator pos:start="193:16" pos:end="193:17">&gt;=</operator> <literal type="number" pos:start="193:19" pos:end="193:22">0x80</literal> <operator pos:start="193:24" pos:end="193:25">&amp;&amp;</operator> <name pos:start="193:27" pos:end="193:28">id</name> <operator pos:start="193:30" pos:end="193:31">&lt;=</operator> <literal type="number" pos:start="193:33" pos:end="193:36">0xbf</literal></expr>)</condition> <block pos:start="193:39" pos:end="203:9">{<block_content pos:start="197:13" pos:end="201:34">

            <comment type="block" pos:start="195:13" pos:end="195:45">/* XXX: need to check AC3 spec */</comment>

            <expr_stmt pos:start="197:13" pos:end="197:34"><expr pos:start="197:13" pos:end="197:33"><call pos:start="197:13" pos:end="197:33"><name pos:start="197:13" pos:end="197:20">put_byte</name><argument_list pos:start="197:21" pos:end="197:33">(<argument pos:start="197:22" pos:end="197:29"><expr pos:start="197:22" pos:end="197:29"><operator pos:start="197:22" pos:end="197:22">&amp;</operator><name pos:start="197:23" pos:end="197:29"><name pos:start="197:23" pos:end="197:25">ctx</name><operator pos:start="197:26" pos:end="197:27">-&gt;</operator><name pos:start="197:28" pos:end="197:29">pb</name></name></expr></argument>, <argument pos:start="197:32" pos:end="197:32"><expr pos:start="197:32" pos:end="197:32"><literal type="number" pos:start="197:32" pos:end="197:32">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="199:13" pos:end="199:34"><expr pos:start="199:13" pos:end="199:33"><call pos:start="199:13" pos:end="199:33"><name pos:start="199:13" pos:end="199:20">put_byte</name><argument_list pos:start="199:21" pos:end="199:33">(<argument pos:start="199:22" pos:end="199:29"><expr pos:start="199:22" pos:end="199:29"><operator pos:start="199:22" pos:end="199:22">&amp;</operator><name pos:start="199:23" pos:end="199:29"><name pos:start="199:23" pos:end="199:25">ctx</name><operator pos:start="199:26" pos:end="199:27">-&gt;</operator><name pos:start="199:28" pos:end="199:29">pb</name></name></expr></argument>, <argument pos:start="199:32" pos:end="199:32"><expr pos:start="199:32" pos:end="199:32"><literal type="number" pos:start="199:32" pos:end="199:32">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="201:13" pos:end="201:34"><expr pos:start="201:13" pos:end="201:33"><call pos:start="201:13" pos:end="201:33"><name pos:start="201:13" pos:end="201:20">put_byte</name><argument_list pos:start="201:21" pos:end="201:33">(<argument pos:start="201:22" pos:end="201:29"><expr pos:start="201:22" pos:end="201:29"><operator pos:start="201:22" pos:end="201:22">&amp;</operator><name pos:start="201:23" pos:end="201:29"><name pos:start="201:23" pos:end="201:25">ctx</name><operator pos:start="201:26" pos:end="201:27">-&gt;</operator><name pos:start="201:28" pos:end="201:29">pb</name></name></expr></argument>, <argument pos:start="201:32" pos:end="201:32"><expr pos:start="201:32" pos:end="201:32"><literal type="number" pos:start="201:32" pos:end="201:32">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="209:5" pos:end="209:21">/* output data */</comment>

    <expr_stmt pos:start="211:5" pos:end="211:71"><expr pos:start="211:5" pos:end="211:70"><call pos:start="211:5" pos:end="211:70"><name pos:start="211:5" pos:end="211:14">put_buffer</name><argument_list pos:start="211:15" pos:end="211:70">(<argument pos:start="211:16" pos:end="211:23"><expr pos:start="211:16" pos:end="211:23"><operator pos:start="211:16" pos:end="211:16">&amp;</operator><name pos:start="211:17" pos:end="211:23"><name pos:start="211:17" pos:end="211:19">ctx</name><operator pos:start="211:20" pos:end="211:21">-&gt;</operator><name pos:start="211:22" pos:end="211:23">pb</name></name></expr></argument>, <argument pos:start="211:26" pos:end="211:39"><expr pos:start="211:26" pos:end="211:39"><name pos:start="211:26" pos:end="211:39"><name pos:start="211:26" pos:end="211:31">stream</name><operator pos:start="211:32" pos:end="211:33">-&gt;</operator><name pos:start="211:34" pos:end="211:39">buffer</name></name></expr></argument>, <argument pos:start="211:42" pos:end="211:69"><expr pos:start="211:42" pos:end="211:69"><name pos:start="211:42" pos:end="211:53">payload_size</name> <operator pos:start="211:55" pos:end="211:55">-</operator> <name pos:start="211:57" pos:end="211:69">stuffing_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="213:5" pos:end="213:31"><expr pos:start="213:5" pos:end="213:30"><call pos:start="213:5" pos:end="213:30"><name pos:start="213:5" pos:end="213:20">put_flush_packet</name><argument_list pos:start="213:21" pos:end="213:30">(<argument pos:start="213:22" pos:end="213:29"><expr pos:start="213:22" pos:end="213:29"><operator pos:start="213:22" pos:end="213:22">&amp;</operator><name pos:start="213:23" pos:end="213:29"><name pos:start="213:23" pos:end="213:25">ctx</name><operator pos:start="213:26" pos:end="213:27">-&gt;</operator><name pos:start="213:28" pos:end="213:29">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    

    <comment type="block" pos:start="217:5" pos:end="217:33">/* preserve remaining data */</comment>

    <expr_stmt pos:start="219:5" pos:end="219:44"><expr pos:start="219:5" pos:end="219:43"><name pos:start="219:5" pos:end="219:7">len</name> <operator pos:start="219:9" pos:end="219:9">=</operator> <name pos:start="219:11" pos:end="219:28"><name pos:start="219:11" pos:end="219:16">stream</name><operator pos:start="219:17" pos:end="219:18">-&gt;</operator><name pos:start="219:19" pos:end="219:28">buffer_ptr</name></name> <operator pos:start="219:30" pos:end="219:30">-</operator> <name pos:start="219:32" pos:end="219:43">payload_size</name></expr>;</expr_stmt>

    <if_stmt pos:start="221:5" pos:end="223:16"><if pos:start="221:5" pos:end="223:16">if <condition pos:start="221:8" pos:end="221:16">(<expr pos:start="221:9" pos:end="221:15"><name pos:start="221:9" pos:end="221:11">len</name> <operator pos:start="221:13" pos:end="221:13">&lt;</operator> <literal type="number" pos:start="221:15" pos:end="221:15">0</literal></expr>)</condition><block type="pseudo" pos:start="223:9" pos:end="223:16"><block_content pos:start="223:9" pos:end="223:16"> 

        <expr_stmt pos:start="223:9" pos:end="223:16"><expr pos:start="223:9" pos:end="223:15"><name pos:start="223:9" pos:end="223:11">len</name> <operator pos:start="223:13" pos:end="223:13">=</operator> <literal type="number" pos:start="223:15" pos:end="223:15">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="225:5" pos:end="225:76"><expr pos:start="225:5" pos:end="225:75"><call pos:start="225:5" pos:end="225:75"><name pos:start="225:5" pos:end="225:11">memmove</name><argument_list pos:start="225:12" pos:end="225:75">(<argument pos:start="225:13" pos:end="225:26"><expr pos:start="225:13" pos:end="225:26"><name pos:start="225:13" pos:end="225:26"><name pos:start="225:13" pos:end="225:18">stream</name><operator pos:start="225:19" pos:end="225:20">-&gt;</operator><name pos:start="225:21" pos:end="225:26">buffer</name></name></expr></argument>, <argument pos:start="225:29" pos:end="225:69"><expr pos:start="225:29" pos:end="225:69"><name pos:start="225:29" pos:end="225:42"><name pos:start="225:29" pos:end="225:34">stream</name><operator pos:start="225:35" pos:end="225:36">-&gt;</operator><name pos:start="225:37" pos:end="225:42">buffer</name></name> <operator pos:start="225:44" pos:end="225:44">+</operator> <name pos:start="225:46" pos:end="225:63"><name pos:start="225:46" pos:end="225:51">stream</name><operator pos:start="225:52" pos:end="225:53">-&gt;</operator><name pos:start="225:54" pos:end="225:63">buffer_ptr</name></name> <operator pos:start="225:65" pos:end="225:65">-</operator> <name pos:start="225:67" pos:end="225:69">len</name></expr></argument>, <argument pos:start="225:72" pos:end="225:74"><expr pos:start="225:72" pos:end="225:74"><name pos:start="225:72" pos:end="225:74">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="227:5" pos:end="227:29"><expr pos:start="227:5" pos:end="227:28"><name pos:start="227:5" pos:end="227:22"><name pos:start="227:5" pos:end="227:10">stream</name><operator pos:start="227:11" pos:end="227:12">-&gt;</operator><name pos:start="227:13" pos:end="227:22">buffer_ptr</name></name> <operator pos:start="227:24" pos:end="227:24">=</operator> <name pos:start="227:26" pos:end="227:28">len</name></expr>;</expr_stmt>



    <expr_stmt pos:start="231:5" pos:end="231:23"><expr pos:start="231:5" pos:end="231:22"><name pos:start="231:5" pos:end="231:20"><name pos:start="231:5" pos:end="231:5">s</name><operator pos:start="231:6" pos:end="231:7">-&gt;</operator><name pos:start="231:8" pos:end="231:20">packet_number</name></name><operator pos:start="231:21" pos:end="231:22">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="233:5" pos:end="233:28"><expr pos:start="233:5" pos:end="233:27"><name pos:start="233:5" pos:end="233:25"><name pos:start="233:5" pos:end="233:10">stream</name><operator pos:start="233:11" pos:end="233:12">-&gt;</operator><name pos:start="233:13" pos:end="233:25">packet_number</name></name><operator pos:start="233:26" pos:end="233:27">++</operator></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
