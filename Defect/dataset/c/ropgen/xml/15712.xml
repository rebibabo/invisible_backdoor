<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15712.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">detect_stream_specific</name><parameter_list pos:start="1:34" pos:end="1:64">(<parameter pos:start="1:35" pos:end="1:54"><decl pos:start="1:35" pos:end="1:54"><type pos:start="1:35" pos:end="1:54"><name pos:start="1:35" pos:end="1:49">AVFormatContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">avf</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:63"><decl pos:start="1:57" pos:end="1:63"><type pos:start="1:57" pos:end="1:63"><name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:63">idx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:13">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">ConcatContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">cat</name> <init pos:start="5:24" pos:end="5:39">= <expr pos:start="5:26" pos:end="5:39"><name pos:start="5:26" pos:end="5:39"><name pos:start="5:26" pos:end="5:28">avf</name><operator pos:start="5:29" pos:end="5:30">-&gt;</operator><name pos:start="5:31" pos:end="5:39">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name> <init pos:start="7:18" pos:end="7:41">= <expr pos:start="7:20" pos:end="7:41"><name pos:start="7:20" pos:end="7:41"><name pos:start="7:20" pos:end="7:22">cat</name><operator pos:start="7:23" pos:end="7:24">-&gt;</operator><name pos:start="7:25" pos:end="7:27">avf</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:36">streams</name><index pos:start="7:37" pos:end="7:41">[<expr pos:start="7:38" pos:end="7:40"><name pos:start="7:38" pos:end="7:40">idx</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:52"><decl pos:start="9:5" pos:end="9:51"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">ConcatStream</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:20">cs</name> <init pos:start="9:22" pos:end="9:51">= <expr pos:start="9:24" pos:end="9:51"><operator pos:start="9:24" pos:end="9:24">&amp;</operator><name pos:start="9:25" pos:end="9:51"><name pos:start="9:25" pos:end="9:27">cat</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:37">cur_file</name><operator pos:start="9:38" pos:end="9:39">-&gt;</operator><name pos:start="9:40" pos:end="9:46">streams</name><index pos:start="9:47" pos:end="9:51">[<expr pos:start="9:48" pos:end="9:50"><name pos:start="9:48" pos:end="9:50">idx</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:30"><name pos:start="11:5" pos:end="11:28">AVBitStreamFilterContext</name> <modifier pos:start="11:30" pos:end="11:30">*</modifier></type><name pos:start="11:31" pos:end="11:33">bsf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="71:5"><if pos:start="17:5" pos:end="71:5">if <condition pos:start="17:8" pos:end="19:84">(<expr pos:start="17:9" pos:end="19:83"><name pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:11">cat</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:25">auto_convert</name></name> <operator pos:start="17:27" pos:end="17:28">&amp;&amp;</operator> <name pos:start="17:30" pos:end="17:51"><name pos:start="17:30" pos:end="17:31">st</name><operator pos:start="17:32" pos:end="17:33">-&gt;</operator><name pos:start="17:34" pos:end="17:41">codecpar</name><operator pos:start="17:42" pos:end="17:43">-&gt;</operator><name pos:start="17:44" pos:end="17:51">codec_id</name></name> <operator pos:start="17:53" pos:end="17:54">==</operator> <name pos:start="17:56" pos:end="17:71">AV_CODEC_ID_H264</name> <operator pos:start="17:73" pos:end="17:74">&amp;&amp;</operator>

        <operator pos:start="19:9" pos:end="19:9">(</operator><name pos:start="19:10" pos:end="19:37"><name pos:start="19:10" pos:end="19:11">st</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:21">codecpar</name><operator pos:start="19:22" pos:end="19:23">-&gt;</operator><name pos:start="19:24" pos:end="19:37">extradata_size</name></name> <operator pos:start="19:39" pos:end="19:39">&lt;</operator> <literal type="number" pos:start="19:41" pos:end="19:41">4</literal> <operator pos:start="19:43" pos:end="19:44">||</operator> <call pos:start="19:46" pos:end="19:77"><name pos:start="19:46" pos:end="19:52">AV_RB32</name><argument_list pos:start="19:53" pos:end="19:77">(<argument pos:start="19:54" pos:end="19:76"><expr pos:start="19:54" pos:end="19:76"><name pos:start="19:54" pos:end="19:76"><name pos:start="19:54" pos:end="19:55">st</name><operator pos:start="19:56" pos:end="19:57">-&gt;</operator><name pos:start="19:58" pos:end="19:65">codecpar</name><operator pos:start="19:66" pos:end="19:67">-&gt;</operator><name pos:start="19:68" pos:end="19:76">extradata</name></name></expr></argument>)</argument_list></call> <operator pos:start="19:79" pos:end="19:80">!=</operator> <literal type="number" pos:start="19:82" pos:end="19:82">1</literal><operator pos:start="19:83" pos:end="19:83">)</operator></expr>)</condition> <block pos:start="19:86" pos:end="71:5">{<block_content pos:start="21:9" pos:end="67:9">

        <expr_stmt pos:start="21:9" pos:end="23:69"><expr pos:start="21:9" pos:end="23:68"><call pos:start="21:9" pos:end="23:68"><name pos:start="21:9" pos:end="21:14">av_log</name><argument_list pos:start="21:15" pos:end="23:68">(<argument pos:start="21:16" pos:end="21:23"><expr pos:start="21:16" pos:end="21:23"><name pos:start="21:16" pos:end="21:23"><name pos:start="21:16" pos:end="21:18">cat</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:23">avf</name></name></expr></argument>, <argument pos:start="21:26" pos:end="21:36"><expr pos:start="21:26" pos:end="21:36"><name pos:start="21:26" pos:end="21:36">AV_LOG_INFO</name></expr></argument>,

               <argument pos:start="23:16" pos:end="23:67"><expr pos:start="23:16" pos:end="23:67"><literal type="string" pos:start="23:16" pos:end="23:67">"Auto-inserting h264_mp4toannexb bitstream filter\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="33:9"><if pos:start="25:9" pos:end="33:9">if <condition pos:start="25:12" pos:end="25:66">(<expr pos:start="25:13" pos:end="25:65"><operator pos:start="25:13" pos:end="25:13">!</operator><operator pos:start="25:14" pos:end="25:14">(</operator><name pos:start="25:15" pos:end="25:17">bsf</name> <operator pos:start="25:19" pos:end="25:19">=</operator> <call pos:start="25:21" pos:end="25:64"><name pos:start="25:21" pos:end="25:44">av_bitstream_filter_init</name><argument_list pos:start="25:45" pos:end="25:64">(<argument pos:start="25:46" pos:end="25:63"><expr pos:start="25:46" pos:end="25:63"><literal type="string" pos:start="25:46" pos:end="25:63">"h264_mp4toannexb"</literal></expr></argument>)</argument_list></call><operator pos:start="25:65" pos:end="25:65">)</operator></expr>)</condition> <block pos:start="25:68" pos:end="33:9">{<block_content pos:start="27:13" pos:end="31:41">

            <expr_stmt pos:start="27:13" pos:end="29:51"><expr pos:start="27:13" pos:end="29:50"><call pos:start="27:13" pos:end="29:50"><name pos:start="27:13" pos:end="27:18">av_log</name><argument_list pos:start="27:19" pos:end="29:50">(<argument pos:start="27:20" pos:end="27:22"><expr pos:start="27:20" pos:end="27:22"><name pos:start="27:20" pos:end="27:22">avf</name></expr></argument>, <argument pos:start="27:25" pos:end="27:36"><expr pos:start="27:25" pos:end="27:36"><name pos:start="27:25" pos:end="27:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="27:39" pos:end="29:49"><expr pos:start="27:39" pos:end="29:49"><literal type="string" pos:start="27:39" pos:end="27:74">"h264_mp4toannexb bitstream filter "</literal>

                   <literal type="string" pos:start="29:20" pos:end="29:49">"required for H.264 streams\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="31:13" pos:end="31:41">return <expr pos:start="31:20" pos:end="31:40"><name pos:start="31:20" pos:end="31:40">AVERROR_BSF_NOT_FOUND</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:22"><expr pos:start="35:9" pos:end="35:21"><name pos:start="35:9" pos:end="35:15"><name pos:start="35:9" pos:end="35:10">cs</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:15">bsf</name></name> <operator pos:start="35:17" pos:end="35:17">=</operator> <name pos:start="35:19" pos:end="35:21">bsf</name></expr>;</expr_stmt>



        <expr_stmt pos:start="39:9" pos:end="39:49"><expr pos:start="39:9" pos:end="39:48"><name pos:start="39:9" pos:end="39:17"><name pos:start="39:9" pos:end="39:10">cs</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:17">avctx</name></name> <operator pos:start="39:19" pos:end="39:19">=</operator> <call pos:start="39:21" pos:end="39:48"><name pos:start="39:21" pos:end="39:42">avcodec_alloc_context3</name><argument_list pos:start="39:43" pos:end="39:48">(<argument pos:start="39:44" pos:end="39:47"><expr pos:start="39:44" pos:end="39:47"><name pos:start="39:44" pos:end="39:47">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="43:35"><if pos:start="41:9" pos:end="43:35">if <condition pos:start="41:12" pos:end="41:23">(<expr pos:start="41:13" pos:end="41:22"><operator pos:start="41:13" pos:end="41:13">!</operator><name pos:start="41:14" pos:end="41:22"><name pos:start="41:14" pos:end="41:15">cs</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:22">avctx</name></name></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:35"><block_content pos:start="43:13" pos:end="43:35">

            <return pos:start="43:13" pos:end="43:35">return <expr pos:start="43:20" pos:end="43:34"><call pos:start="43:20" pos:end="43:34"><name pos:start="43:20" pos:end="43:26">AVERROR</name><argument_list pos:start="43:27" pos:end="43:34">(<argument pos:start="43:28" pos:end="43:33"><expr pos:start="43:28" pos:end="43:33"><name pos:start="43:28" pos:end="43:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <comment type="block" pos:start="47:9" pos:end="51:53">/* This really should be part of the bsf work.

           Note: input bitstream filtering will not work with bsf that

           create extradata from the first packet. */</comment>

        <expr_stmt pos:start="53:9" pos:end="53:43"><expr pos:start="53:9" pos:end="53:42"><call pos:start="53:9" pos:end="53:42"><name pos:start="53:9" pos:end="53:16">av_freep</name><argument_list pos:start="53:17" pos:end="53:42">(<argument pos:start="53:18" pos:end="53:41"><expr pos:start="53:18" pos:end="53:41"><operator pos:start="53:18" pos:end="53:18">&amp;</operator><name pos:start="53:19" pos:end="53:41"><name pos:start="53:19" pos:end="53:20">st</name><operator pos:start="53:21" pos:end="53:22">-&gt;</operator><name pos:start="53:23" pos:end="53:30">codecpar</name><operator pos:start="53:31" pos:end="53:32">-&gt;</operator><name pos:start="53:33" pos:end="53:41">extradata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:41"><expr pos:start="55:9" pos:end="55:40"><name pos:start="55:9" pos:end="55:36"><name pos:start="55:9" pos:end="55:10">st</name><operator pos:start="55:11" pos:end="55:12">-&gt;</operator><name pos:start="55:13" pos:end="55:20">codecpar</name><operator pos:start="55:21" pos:end="55:22">-&gt;</operator><name pos:start="55:23" pos:end="55:36">extradata_size</name></name> <operator pos:start="55:38" pos:end="55:38">=</operator> <literal type="number" pos:start="55:40" pos:end="55:40">0</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="59:9" pos:end="59:69"><expr pos:start="59:9" pos:end="59:68"><name pos:start="59:9" pos:end="59:11">ret</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <call pos:start="59:15" pos:end="59:68"><name pos:start="59:15" pos:end="59:43">avcodec_parameters_to_context</name><argument_list pos:start="59:44" pos:end="59:68">(<argument pos:start="59:45" pos:end="59:53"><expr pos:start="59:45" pos:end="59:53"><name pos:start="59:45" pos:end="59:53"><name pos:start="59:45" pos:end="59:46">cs</name><operator pos:start="59:47" pos:end="59:48">-&gt;</operator><name pos:start="59:49" pos:end="59:53">avctx</name></name></expr></argument>, <argument pos:start="59:56" pos:end="59:67"><expr pos:start="59:56" pos:end="59:67"><name pos:start="59:56" pos:end="59:67"><name pos:start="59:56" pos:end="59:57">st</name><operator pos:start="59:58" pos:end="59:59">-&gt;</operator><name pos:start="59:60" pos:end="59:67">codecpar</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="61:9" pos:end="67:9"><if pos:start="61:9" pos:end="67:9">if <condition pos:start="61:12" pos:end="61:20">(<expr pos:start="61:13" pos:end="61:19"><name pos:start="61:13" pos:end="61:15">ret</name> <operator pos:start="61:17" pos:end="61:17">&lt;</operator> <literal type="number" pos:start="61:19" pos:end="61:19">0</literal></expr>)</condition> <block pos:start="61:22" pos:end="67:9">{<block_content pos:start="63:13" pos:end="65:23">

            <expr_stmt pos:start="63:13" pos:end="63:45"><expr pos:start="63:13" pos:end="63:44"><call pos:start="63:13" pos:end="63:44"><name pos:start="63:13" pos:end="63:32">avcodec_free_context</name><argument_list pos:start="63:33" pos:end="63:44">(<argument pos:start="63:34" pos:end="63:43"><expr pos:start="63:34" pos:end="63:43"><operator pos:start="63:34" pos:end="63:34">&amp;</operator><name pos:start="63:35" pos:end="63:43"><name pos:start="63:35" pos:end="63:36">cs</name><operator pos:start="63:37" pos:end="63:38">-&gt;</operator><name pos:start="63:39" pos:end="63:43">avctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="65:13" pos:end="65:23">return <expr pos:start="65:20" pos:end="65:22"><name pos:start="65:20" pos:end="65:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



    </block_content>}</block></if></if_stmt>

    <return pos:start="73:5" pos:end="73:13">return <expr pos:start="73:12" pos:end="73:12"><literal type="number" pos:start="73:12" pos:end="73:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
