<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19640.c" pos:tabs="8"><function pos:start="1:1" pos:end="153:1"><type pos:start="1:1" pos:end="1:23"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name> <name pos:start="1:12" pos:end="1:23">coroutine_fn</name></type> <name pos:start="1:25" pos:end="1:38">iscsi_co_readv</name><parameter_list pos:start="1:39" pos:end="5:57">(<parameter pos:start="1:40" pos:end="1:59"><decl pos:start="1:40" pos:end="1:59"><type pos:start="1:40" pos:end="1:59"><name pos:start="1:40" pos:end="1:55">BlockDriverState</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:59">bs</name></decl></parameter>,

                                       <parameter pos:start="3:40" pos:end="3:57"><decl pos:start="3:40" pos:end="3:57"><type pos:start="3:40" pos:end="3:57"><name pos:start="3:40" pos:end="3:46">int64_t</name></type> <name pos:start="3:48" pos:end="3:57">sector_num</name></decl></parameter>, <parameter pos:start="3:60" pos:end="3:73"><decl pos:start="3:60" pos:end="3:73"><type pos:start="3:60" pos:end="3:73"><name pos:start="3:60" pos:end="3:62">int</name></type> <name pos:start="3:64" pos:end="3:73">nb_sectors</name></decl></parameter>,

                                       <parameter pos:start="5:40" pos:end="5:56"><decl pos:start="5:40" pos:end="5:56"><type pos:start="5:40" pos:end="5:56"><name pos:start="5:40" pos:end="5:51">QEMUIOVector</name> <modifier pos:start="5:53" pos:end="5:53">*</modifier></type><name pos:start="5:54" pos:end="5:56">iov</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="153:1">{<block_content pos:start="9:5" pos:end="151:13">

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">IscsiLun</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:22">iscsilun</name> <init pos:start="9:24" pos:end="9:35">= <expr pos:start="9:26" pos:end="9:35"><name pos:start="9:26" pos:end="9:35"><name pos:start="9:26" pos:end="9:27">bs</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:35">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:20">IscsiTask</name></name></type> <name pos:start="11:22" pos:end="11:26">iTask</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint64_t</name></type> <name pos:start="13:14" pos:end="13:16">lba</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:24">num_sectors</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:73">(<expr pos:start="19:9" pos:end="19:72"><operator pos:start="19:9" pos:end="19:9">!</operator><call pos:start="19:10" pos:end="19:72"><name pos:start="19:10" pos:end="19:38">is_sector_request_lun_aligned</name><argument_list pos:start="19:39" pos:end="19:72">(<argument pos:start="19:40" pos:end="19:49"><expr pos:start="19:40" pos:end="19:49"><name pos:start="19:40" pos:end="19:49">sector_num</name></expr></argument>, <argument pos:start="19:52" pos:end="19:61"><expr pos:start="19:52" pos:end="19:61"><name pos:start="19:52" pos:end="19:61">nb_sectors</name></expr></argument>, <argument pos:start="19:64" pos:end="19:71"><expr pos:start="19:64" pos:end="19:71"><name pos:start="19:64" pos:end="19:71">iscsilun</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:75" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:23">

        <return pos:start="21:9" pos:end="21:23">return <expr pos:start="21:16" pos:end="21:22"><operator pos:start="21:16" pos:end="21:16">-</operator><name pos:start="21:17" pos:end="21:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if <condition pos:start="27:8" pos:end="27:78">(<expr pos:start="27:9" pos:end="27:77"><name pos:start="27:9" pos:end="27:34"><name pos:start="27:9" pos:end="27:10">bs</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:14">bl</name><operator pos:start="27:15" pos:end="27:15">.</operator><name pos:start="27:16" pos:end="27:34">max_transfer_length</name></name> <operator pos:start="27:36" pos:end="27:37">&amp;&amp;</operator> <name pos:start="27:39" pos:end="27:48">nb_sectors</name> <operator pos:start="27:50" pos:end="27:50">&gt;</operator> <name pos:start="27:52" pos:end="27:77"><name pos:start="27:52" pos:end="27:53">bs</name><operator pos:start="27:54" pos:end="27:55">-&gt;</operator><name pos:start="27:56" pos:end="27:57">bl</name><operator pos:start="27:58" pos:end="27:58">.</operator><name pos:start="27:59" pos:end="27:77">max_transfer_length</name></name></expr>)</condition> <block pos:start="27:80" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:23">

        <expr_stmt pos:start="29:9" pos:end="31:78"><expr pos:start="29:9" pos:end="31:77"><call pos:start="29:9" pos:end="31:77"><name pos:start="29:9" pos:end="29:20">error_report</name><argument_list pos:start="29:21" pos:end="31:77">(<argument pos:start="29:22" pos:end="31:36"><expr pos:start="29:22" pos:end="31:36"><literal type="string" pos:start="29:22" pos:end="29:76">"iSCSI Error: Read of %d sectors exceeds max_xfer_len "</literal>

                     <literal type="string" pos:start="31:22" pos:end="31:36">"of %d sectors"</literal></expr></argument>, <argument pos:start="31:39" pos:end="31:48"><expr pos:start="31:39" pos:end="31:48"><name pos:start="31:39" pos:end="31:48">nb_sectors</name></expr></argument>, <argument pos:start="31:51" pos:end="31:76"><expr pos:start="31:51" pos:end="31:76"><name pos:start="31:51" pos:end="31:76"><name pos:start="31:51" pos:end="31:52">bs</name><operator pos:start="31:53" pos:end="31:54">-&gt;</operator><name pos:start="31:55" pos:end="31:56">bl</name><operator pos:start="31:57" pos:end="31:57">.</operator><name pos:start="31:58" pos:end="31:76">max_transfer_length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:23">return <expr pos:start="33:16" pos:end="33:22"><operator pos:start="33:16" pos:end="33:16">-</operator><name pos:start="33:17" pos:end="33:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="65:5"><if pos:start="39:5" pos:end="65:5">if <condition pos:start="39:8" pos:end="41:76">(<expr pos:start="39:9" pos:end="41:75"><name pos:start="39:9" pos:end="39:23"><name pos:start="39:9" pos:end="39:16">iscsilun</name><operator pos:start="39:17" pos:end="39:18">-&gt;</operator><name pos:start="39:19" pos:end="39:23">lbprz</name></name> <operator pos:start="39:25" pos:end="39:26">&amp;&amp;</operator> <name pos:start="39:28" pos:end="39:37">nb_sectors</name> <operator pos:start="39:39" pos:end="39:40">&gt;=</operator> <name pos:start="39:42" pos:end="39:63">ISCSI_CHECKALLOC_THRES</name> <operator pos:start="39:65" pos:end="39:66">&amp;&amp;</operator>

        <operator pos:start="41:9" pos:end="41:9">!</operator><call pos:start="41:10" pos:end="41:75"><name pos:start="41:10" pos:end="41:41">iscsi_allocationmap_is_allocated</name><argument_list pos:start="41:42" pos:end="41:75">(<argument pos:start="41:43" pos:end="41:50"><expr pos:start="41:43" pos:end="41:50"><name pos:start="41:43" pos:end="41:50">iscsilun</name></expr></argument>, <argument pos:start="41:53" pos:end="41:62"><expr pos:start="41:53" pos:end="41:62"><name pos:start="41:53" pos:end="41:62">sector_num</name></expr></argument>, <argument pos:start="41:65" pos:end="41:74"><expr pos:start="41:65" pos:end="41:74"><name pos:start="41:65" pos:end="41:74">nb_sectors</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:78" pos:end="65:5">{<block_content pos:start="43:9" pos:end="63:9">

        <decl_stmt pos:start="43:9" pos:end="43:20"><decl pos:start="43:9" pos:end="43:19"><type pos:start="43:9" pos:end="43:15"><name pos:start="43:9" pos:end="43:15">int64_t</name></type> <name pos:start="43:17" pos:end="43:19">ret</name></decl>;</decl_stmt>

        <decl_stmt pos:start="45:9" pos:end="45:17"><decl pos:start="45:9" pos:end="45:16"><type pos:start="45:9" pos:end="45:11"><name pos:start="45:9" pos:end="45:11">int</name></type> <name pos:start="45:13" pos:end="45:16">pnum</name></decl>;</decl_stmt>

        <decl_stmt pos:start="47:9" pos:end="47:31"><decl pos:start="47:9" pos:end="47:30"><type pos:start="47:9" pos:end="47:26"><name pos:start="47:9" pos:end="47:24">BlockDriverState</name> <modifier pos:start="47:26" pos:end="47:26">*</modifier></type><name pos:start="47:27" pos:end="47:30">file</name></decl>;</decl_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:79"><expr pos:start="49:9" pos:end="49:78"><name pos:start="49:9" pos:end="49:11">ret</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <call pos:start="49:15" pos:end="49:78"><name pos:start="49:15" pos:end="49:39">iscsi_co_get_block_status</name><argument_list pos:start="49:40" pos:end="49:78">(<argument pos:start="49:41" pos:end="49:42"><expr pos:start="49:41" pos:end="49:42"><name pos:start="49:41" pos:end="49:42">bs</name></expr></argument>, <argument pos:start="49:45" pos:end="49:54"><expr pos:start="49:45" pos:end="49:54"><name pos:start="49:45" pos:end="49:54">sector_num</name></expr></argument>, <argument pos:start="49:57" pos:end="49:63"><expr pos:start="49:57" pos:end="49:63"><name pos:start="49:57" pos:end="49:63">INT_MAX</name></expr></argument>, <argument pos:start="49:66" pos:end="49:70"><expr pos:start="49:66" pos:end="49:70"><operator pos:start="49:66" pos:end="49:66">&amp;</operator><name pos:start="49:67" pos:end="49:70">pnum</name></expr></argument>, <argument pos:start="49:73" pos:end="49:77"><expr pos:start="49:73" pos:end="49:77"><operator pos:start="49:73" pos:end="49:73">&amp;</operator><name pos:start="49:74" pos:end="49:77">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="51:9" pos:end="55:9"><if pos:start="51:9" pos:end="55:9">if <condition pos:start="51:12" pos:end="51:20">(<expr pos:start="51:13" pos:end="51:19"><name pos:start="51:13" pos:end="51:15">ret</name> <operator pos:start="51:17" pos:end="51:17">&lt;</operator> <literal type="number" pos:start="51:19" pos:end="51:19">0</literal></expr>)</condition> <block pos:start="51:22" pos:end="55:9">{<block_content pos:start="53:13" pos:end="53:23">

            <return pos:start="53:13" pos:end="53:23">return <expr pos:start="53:20" pos:end="53:22"><name pos:start="53:20" pos:end="53:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="57:9" pos:end="63:9"><if pos:start="57:9" pos:end="63:9">if <condition pos:start="57:12" pos:end="57:56">(<expr pos:start="57:13" pos:end="57:55"><name pos:start="57:13" pos:end="57:15">ret</name> <operator pos:start="57:17" pos:end="57:17">&amp;</operator> <name pos:start="57:19" pos:end="57:33">BDRV_BLOCK_ZERO</name> <operator pos:start="57:35" pos:end="57:36">&amp;&amp;</operator> <name pos:start="57:38" pos:end="57:41">pnum</name> <operator pos:start="57:43" pos:end="57:44">&gt;=</operator> <name pos:start="57:46" pos:end="57:55">nb_sectors</name></expr>)</condition> <block pos:start="57:58" pos:end="63:9">{<block_content pos:start="59:13" pos:end="61:21">

            <expr_stmt pos:start="59:13" pos:end="59:55"><expr pos:start="59:13" pos:end="59:54"><call pos:start="59:13" pos:end="59:54"><name pos:start="59:13" pos:end="59:29">qemu_iovec_memset</name><argument_list pos:start="59:30" pos:end="59:54">(<argument pos:start="59:31" pos:end="59:33"><expr pos:start="59:31" pos:end="59:33"><name pos:start="59:31" pos:end="59:33">iov</name></expr></argument>, <argument pos:start="59:36" pos:end="59:36"><expr pos:start="59:36" pos:end="59:36"><literal type="number" pos:start="59:36" pos:end="59:36">0</literal></expr></argument>, <argument pos:start="59:39" pos:end="59:42"><expr pos:start="59:39" pos:end="59:42"><literal type="number" pos:start="59:39" pos:end="59:42">0x00</literal></expr></argument>, <argument pos:start="59:45" pos:end="59:53"><expr pos:start="59:45" pos:end="59:53"><name pos:start="59:45" pos:end="59:53"><name pos:start="59:45" pos:end="59:47">iov</name><operator pos:start="59:48" pos:end="59:49">-&gt;</operator><name pos:start="59:50" pos:end="59:53">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="61:13" pos:end="61:21">return <expr pos:start="61:20" pos:end="61:20"><literal type="number" pos:start="61:20" pos:end="61:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:48"><expr pos:start="69:5" pos:end="69:47"><name pos:start="69:5" pos:end="69:7">lba</name> <operator pos:start="69:9" pos:end="69:9">=</operator> <call pos:start="69:11" pos:end="69:47"><name pos:start="69:11" pos:end="69:25">sector_qemu2lun</name><argument_list pos:start="69:26" pos:end="69:47">(<argument pos:start="69:27" pos:end="69:36"><expr pos:start="69:27" pos:end="69:36"><name pos:start="69:27" pos:end="69:36">sector_num</name></expr></argument>, <argument pos:start="69:39" pos:end="69:46"><expr pos:start="69:39" pos:end="69:46"><name pos:start="69:39" pos:end="69:46">iscsilun</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:56"><expr pos:start="71:5" pos:end="71:55"><name pos:start="71:5" pos:end="71:15">num_sectors</name> <operator pos:start="71:17" pos:end="71:17">=</operator> <call pos:start="71:19" pos:end="71:55"><name pos:start="71:19" pos:end="71:33">sector_qemu2lun</name><argument_list pos:start="71:34" pos:end="71:55">(<argument pos:start="71:35" pos:end="71:44"><expr pos:start="71:35" pos:end="71:44"><name pos:start="71:35" pos:end="71:44">nb_sectors</name></expr></argument>, <argument pos:start="71:47" pos:end="71:54"><expr pos:start="71:47" pos:end="71:54"><name pos:start="71:47" pos:end="71:54">iscsilun</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:46"><expr pos:start="75:5" pos:end="75:45"><call pos:start="75:5" pos:end="75:45"><name pos:start="75:5" pos:end="75:27">iscsi_co_init_iscsitask</name><argument_list pos:start="75:28" pos:end="75:45">(<argument pos:start="75:29" pos:end="75:36"><expr pos:start="75:29" pos:end="75:36"><name pos:start="75:29" pos:end="75:36">iscsilun</name></expr></argument>, <argument pos:start="75:39" pos:end="75:44"><expr pos:start="75:39" pos:end="75:44"><operator pos:start="75:39" pos:end="75:39">&amp;</operator><name pos:start="75:40" pos:end="75:44">iTask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="77:1" pos:end="77:6"><name pos:start="77:1" pos:end="77:5">retry</name>:</label>

    <if_stmt pos:start="79:5" pos:end="101:5"><if pos:start="79:5" pos:end="89:5">if <condition pos:start="79:8" pos:end="79:32">(<expr pos:start="79:9" pos:end="79:31"><name pos:start="79:9" pos:end="79:31"><name pos:start="79:9" pos:end="79:16">iscsilun</name><operator pos:start="79:17" pos:end="79:18">-&gt;</operator><name pos:start="79:19" pos:end="79:31">use_16_for_rw</name></name></expr>)</condition> <block pos:start="79:34" pos:end="89:5">{<block_content pos:start="81:9" pos:end="87:68">

        <expr_stmt pos:start="81:9" pos:end="87:68"><expr pos:start="81:9" pos:end="87:67"><name pos:start="81:9" pos:end="81:18"><name pos:start="81:9" pos:end="81:13">iTask</name><operator pos:start="81:14" pos:end="81:14">.</operator><name pos:start="81:15" pos:end="81:18">task</name></name> <operator pos:start="81:20" pos:end="81:20">=</operator> <call pos:start="81:22" pos:end="87:67"><name pos:start="81:22" pos:end="81:38">iscsi_read16_task</name><argument_list pos:start="81:39" pos:end="87:67">(<argument pos:start="81:40" pos:end="81:54"><expr pos:start="81:40" pos:end="81:54"><name pos:start="81:40" pos:end="81:54"><name pos:start="81:40" pos:end="81:47">iscsilun</name><operator pos:start="81:48" pos:end="81:49">-&gt;</operator><name pos:start="81:50" pos:end="81:54">iscsi</name></name></expr></argument>, <argument pos:start="81:57" pos:end="81:69"><expr pos:start="81:57" pos:end="81:69"><name pos:start="81:57" pos:end="81:69"><name pos:start="81:57" pos:end="81:64">iscsilun</name><operator pos:start="81:65" pos:end="81:66">-&gt;</operator><name pos:start="81:67" pos:end="81:69">lun</name></name></expr></argument>, <argument pos:start="81:72" pos:end="81:74"><expr pos:start="81:72" pos:end="81:74"><name pos:start="81:72" pos:end="81:74">lba</name></expr></argument>,

                                       <argument pos:start="83:40" pos:end="83:73"><expr pos:start="83:40" pos:end="83:73"><name pos:start="83:40" pos:end="83:50">num_sectors</name> <operator pos:start="83:52" pos:end="83:52">*</operator> <name pos:start="83:54" pos:end="83:73"><name pos:start="83:54" pos:end="83:61">iscsilun</name><operator pos:start="83:62" pos:end="83:63">-&gt;</operator><name pos:start="83:64" pos:end="83:73">block_size</name></name></expr></argument>,

                                       <argument pos:start="85:40" pos:end="85:59"><expr pos:start="85:40" pos:end="85:59"><name pos:start="85:40" pos:end="85:59"><name pos:start="85:40" pos:end="85:47">iscsilun</name><operator pos:start="85:48" pos:end="85:49">-&gt;</operator><name pos:start="85:50" pos:end="85:59">block_size</name></name></expr></argument>, <argument pos:start="85:62" pos:end="85:62"><expr pos:start="85:62" pos:end="85:62"><literal type="number" pos:start="85:62" pos:end="85:62">0</literal></expr></argument>, <argument pos:start="85:65" pos:end="85:65"><expr pos:start="85:65" pos:end="85:65"><literal type="number" pos:start="85:65" pos:end="85:65">0</literal></expr></argument>, <argument pos:start="85:68" pos:end="85:68"><expr pos:start="85:68" pos:end="85:68"><literal type="number" pos:start="85:68" pos:end="85:68">0</literal></expr></argument>, <argument pos:start="85:71" pos:end="85:71"><expr pos:start="85:71" pos:end="85:71"><literal type="number" pos:start="85:71" pos:end="85:71">0</literal></expr></argument>, <argument pos:start="85:74" pos:end="85:74"><expr pos:start="85:74" pos:end="85:74"><literal type="number" pos:start="85:74" pos:end="85:74">0</literal></expr></argument>,

                                       <argument pos:start="87:40" pos:end="87:58"><expr pos:start="87:40" pos:end="87:58"><name pos:start="87:40" pos:end="87:58">iscsi_co_generic_cb</name></expr></argument>, <argument pos:start="87:61" pos:end="87:66"><expr pos:start="87:61" pos:end="87:66"><operator pos:start="87:61" pos:end="87:61">&amp;</operator><name pos:start="87:62" pos:end="87:66">iTask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="89:7" pos:end="101:5">else <block pos:start="89:12" pos:end="101:5">{<block_content pos:start="91:9" pos:end="99:68">

        <expr_stmt pos:start="91:9" pos:end="99:68"><expr pos:start="91:9" pos:end="99:67"><name pos:start="91:9" pos:end="91:18"><name pos:start="91:9" pos:end="91:13">iTask</name><operator pos:start="91:14" pos:end="91:14">.</operator><name pos:start="91:15" pos:end="91:18">task</name></name> <operator pos:start="91:20" pos:end="91:20">=</operator> <call pos:start="91:22" pos:end="99:67"><name pos:start="91:22" pos:end="91:38">iscsi_read10_task</name><argument_list pos:start="91:39" pos:end="99:67">(<argument pos:start="91:40" pos:end="91:54"><expr pos:start="91:40" pos:end="91:54"><name pos:start="91:40" pos:end="91:54"><name pos:start="91:40" pos:end="91:47">iscsilun</name><operator pos:start="91:48" pos:end="91:49">-&gt;</operator><name pos:start="91:50" pos:end="91:54">iscsi</name></name></expr></argument>, <argument pos:start="91:57" pos:end="91:69"><expr pos:start="91:57" pos:end="91:69"><name pos:start="91:57" pos:end="91:69"><name pos:start="91:57" pos:end="91:64">iscsilun</name><operator pos:start="91:65" pos:end="91:66">-&gt;</operator><name pos:start="91:67" pos:end="91:69">lun</name></name></expr></argument>, <argument pos:start="91:72" pos:end="91:74"><expr pos:start="91:72" pos:end="91:74"><name pos:start="91:72" pos:end="91:74">lba</name></expr></argument>,

                                       <argument pos:start="93:40" pos:end="93:73"><expr pos:start="93:40" pos:end="93:73"><name pos:start="93:40" pos:end="93:50">num_sectors</name> <operator pos:start="93:52" pos:end="93:52">*</operator> <name pos:start="93:54" pos:end="93:73"><name pos:start="93:54" pos:end="93:61">iscsilun</name><operator pos:start="93:62" pos:end="93:63">-&gt;</operator><name pos:start="93:64" pos:end="93:73">block_size</name></name></expr></argument>,

                                       <argument pos:start="95:40" pos:end="95:59"><expr pos:start="95:40" pos:end="95:59"><name pos:start="95:40" pos:end="95:59"><name pos:start="95:40" pos:end="95:47">iscsilun</name><operator pos:start="95:48" pos:end="95:49">-&gt;</operator><name pos:start="95:50" pos:end="95:59">block_size</name></name></expr></argument>,

                                       <argument pos:start="97:40" pos:end="97:40"><expr pos:start="97:40" pos:end="97:40"><literal type="number" pos:start="97:40" pos:end="97:40">0</literal></expr></argument>, <argument pos:start="97:43" pos:end="97:43"><expr pos:start="97:43" pos:end="97:43"><literal type="number" pos:start="97:43" pos:end="97:43">0</literal></expr></argument>, <argument pos:start="97:46" pos:end="97:46"><expr pos:start="97:46" pos:end="97:46"><literal type="number" pos:start="97:46" pos:end="97:46">0</literal></expr></argument>, <argument pos:start="97:49" pos:end="97:49"><expr pos:start="97:49" pos:end="97:49"><literal type="number" pos:start="97:49" pos:end="97:49">0</literal></expr></argument>, <argument pos:start="97:52" pos:end="97:52"><expr pos:start="97:52" pos:end="97:52"><literal type="number" pos:start="97:52" pos:end="97:52">0</literal></expr></argument>,

                                       <argument pos:start="99:40" pos:end="99:58"><expr pos:start="99:40" pos:end="99:58"><name pos:start="99:40" pos:end="99:58">iscsi_co_generic_cb</name></expr></argument>, <argument pos:start="99:61" pos:end="99:66"><expr pos:start="99:61" pos:end="99:66"><operator pos:start="99:61" pos:end="99:61">&amp;</operator><name pos:start="99:62" pos:end="99:66">iTask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="103:5" pos:end="107:5"><if pos:start="103:5" pos:end="107:5">if <condition pos:start="103:8" pos:end="103:27">(<expr pos:start="103:9" pos:end="103:26"><name pos:start="103:9" pos:end="103:18"><name pos:start="103:9" pos:end="103:13">iTask</name><operator pos:start="103:14" pos:end="103:14">.</operator><name pos:start="103:15" pos:end="103:18">task</name></name> <operator pos:start="103:20" pos:end="103:21">==</operator> <name pos:start="103:23" pos:end="103:26">NULL</name></expr>)</condition> <block pos:start="103:29" pos:end="107:5">{<block_content pos:start="105:9" pos:end="105:23">

        <return pos:start="105:9" pos:end="105:23">return <expr pos:start="105:16" pos:end="105:22"><operator pos:start="105:16" pos:end="105:16">-</operator><name pos:start="105:17" pos:end="105:22">ENOMEM</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:80"><expr pos:start="109:5" pos:end="109:79"><call pos:start="109:5" pos:end="109:79"><name pos:start="109:5" pos:end="109:24">scsi_task_set_iov_in</name><argument_list pos:start="109:25" pos:end="109:79">(<argument pos:start="109:26" pos:end="109:35"><expr pos:start="109:26" pos:end="109:35"><name pos:start="109:26" pos:end="109:35"><name pos:start="109:26" pos:end="109:30">iTask</name><operator pos:start="109:31" pos:end="109:31">.</operator><name pos:start="109:32" pos:end="109:35">task</name></name></expr></argument>, <argument pos:start="109:38" pos:end="109:67"><expr pos:start="109:38" pos:end="109:67"><operator pos:start="109:38" pos:end="109:38">(</operator>struct <name pos:start="109:46" pos:end="109:55">scsi_iovec</name> <operator pos:start="109:57" pos:end="109:57">*</operator><operator pos:start="109:58" pos:end="109:58">)</operator> <name pos:start="109:60" pos:end="109:67"><name pos:start="109:60" pos:end="109:62">iov</name><operator pos:start="109:63" pos:end="109:64">-&gt;</operator><name pos:start="109:65" pos:end="109:67">iov</name></name></expr></argument>, <argument pos:start="109:70" pos:end="109:78"><expr pos:start="109:70" pos:end="109:78"><name pos:start="109:70" pos:end="109:78"><name pos:start="109:70" pos:end="109:72">iov</name><operator pos:start="109:73" pos:end="109:74">-&gt;</operator><name pos:start="109:75" pos:end="109:78">niov</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="113:5" pos:end="119:5">while <condition pos:start="113:11" pos:end="113:27">(<expr pos:start="113:12" pos:end="113:26"><operator pos:start="113:12" pos:end="113:12">!</operator><name pos:start="113:13" pos:end="113:26"><name pos:start="113:13" pos:end="113:17">iTask</name><operator pos:start="113:18" pos:end="113:18">.</operator><name pos:start="113:19" pos:end="113:26">complete</name></name></expr>)</condition> <block pos:start="113:29" pos:end="119:5">{<block_content pos:start="115:9" pos:end="117:31">

        <expr_stmt pos:start="115:9" pos:end="115:35"><expr pos:start="115:9" pos:end="115:34"><call pos:start="115:9" pos:end="115:34"><name pos:start="115:9" pos:end="115:24">iscsi_set_events</name><argument_list pos:start="115:25" pos:end="115:34">(<argument pos:start="115:26" pos:end="115:33"><expr pos:start="115:26" pos:end="115:33"><name pos:start="115:26" pos:end="115:33">iscsilun</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:31"><expr pos:start="117:9" pos:end="117:30"><call pos:start="117:9" pos:end="117:30"><name pos:start="117:9" pos:end="117:28">qemu_coroutine_yield</name><argument_list pos:start="117:29" pos:end="117:30">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="123:5" pos:end="129:5"><if pos:start="123:5" pos:end="129:5">if <condition pos:start="123:8" pos:end="123:27">(<expr pos:start="123:9" pos:end="123:26"><name pos:start="123:9" pos:end="123:18"><name pos:start="123:9" pos:end="123:13">iTask</name><operator pos:start="123:14" pos:end="123:14">.</operator><name pos:start="123:15" pos:end="123:18">task</name></name> <operator pos:start="123:20" pos:end="123:21">!=</operator> <name pos:start="123:23" pos:end="123:26">NULL</name></expr>)</condition> <block pos:start="123:29" pos:end="129:5">{<block_content pos:start="125:9" pos:end="127:26">

        <expr_stmt pos:start="125:9" pos:end="125:40"><expr pos:start="125:9" pos:end="125:39"><call pos:start="125:9" pos:end="125:39"><name pos:start="125:9" pos:end="125:27">scsi_free_scsi_task</name><argument_list pos:start="125:28" pos:end="125:39">(<argument pos:start="125:29" pos:end="125:38"><expr pos:start="125:29" pos:end="125:38"><name pos:start="125:29" pos:end="125:38"><name pos:start="125:29" pos:end="125:33">iTask</name><operator pos:start="125:34" pos:end="125:34">.</operator><name pos:start="125:35" pos:end="125:38">task</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:26"><expr pos:start="127:9" pos:end="127:25"><name pos:start="127:9" pos:end="127:18"><name pos:start="127:9" pos:end="127:13">iTask</name><operator pos:start="127:14" pos:end="127:14">.</operator><name pos:start="127:15" pos:end="127:18">task</name></name> <operator pos:start="127:20" pos:end="127:20">=</operator> <name pos:start="127:22" pos:end="127:25">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="133:5" pos:end="139:5"><if pos:start="133:5" pos:end="139:5">if <condition pos:start="133:8" pos:end="133:23">(<expr pos:start="133:9" pos:end="133:22"><name pos:start="133:9" pos:end="133:22"><name pos:start="133:9" pos:end="133:13">iTask</name><operator pos:start="133:14" pos:end="133:14">.</operator><name pos:start="133:15" pos:end="133:22">do_retry</name></name></expr>)</condition> <block pos:start="133:25" pos:end="139:5">{<block_content pos:start="135:9" pos:end="137:19">

        <expr_stmt pos:start="135:9" pos:end="135:27"><expr pos:start="135:9" pos:end="135:26"><name pos:start="135:9" pos:end="135:22"><name pos:start="135:9" pos:end="135:13">iTask</name><operator pos:start="135:14" pos:end="135:14">.</operator><name pos:start="135:15" pos:end="135:22">complete</name></name> <operator pos:start="135:24" pos:end="135:24">=</operator> <literal type="number" pos:start="135:26" pos:end="135:26">0</literal></expr>;</expr_stmt>

        <goto pos:start="137:9" pos:end="137:19">goto <name pos:start="137:14" pos:end="137:18">retry</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="143:5" pos:end="147:5"><if pos:start="143:5" pos:end="147:5">if <condition pos:start="143:8" pos:end="143:41">(<expr pos:start="143:9" pos:end="143:40"><name pos:start="143:9" pos:end="143:20"><name pos:start="143:9" pos:end="143:13">iTask</name><operator pos:start="143:14" pos:end="143:14">.</operator><name pos:start="143:15" pos:end="143:20">status</name></name> <operator pos:start="143:22" pos:end="143:23">!=</operator> <name pos:start="143:25" pos:end="143:40">SCSI_STATUS_GOOD</name></expr>)</condition> <block pos:start="143:43" pos:end="147:5">{<block_content pos:start="145:9" pos:end="145:30">

        <return pos:start="145:9" pos:end="145:30">return <expr pos:start="145:16" pos:end="145:29"><name pos:start="145:16" pos:end="145:29"><name pos:start="145:16" pos:end="145:20">iTask</name><operator pos:start="145:21" pos:end="145:21">.</operator><name pos:start="145:22" pos:end="145:29">err_code</name></name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="151:5" pos:end="151:13">return <expr pos:start="151:12" pos:end="151:12"><literal type="number" pos:start="151:12" pos:end="151:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
