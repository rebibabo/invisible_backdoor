<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7029.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:34">qvirtio_scsi_alloc</name><parameter_list pos:start="1:35" pos:end="3:52">(<parameter pos:start="1:36" pos:end="1:50"><decl pos:start="1:36" pos:end="1:50"><type pos:start="1:36" pos:end="1:50"><name pos:start="1:36" pos:end="1:46">QVirtIOSCSI</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:50">vs</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:69"><decl pos:start="1:53" pos:end="1:69"><type pos:start="1:53" pos:end="1:69"><name pos:start="1:53" pos:end="1:58">size_t</name></type> <name pos:start="1:60" pos:end="1:69">alloc_size</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:51"><decl pos:start="3:36" pos:end="3:51"><type pos:start="3:36" pos:end="3:51"><specifier pos:start="3:36" pos:end="3:40">const</specifier> <name pos:start="3:42" pos:end="3:45">void</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:51">data</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="23:1">{<block_content pos:start="7:5" pos:end="21:16">

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:17">addr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:46"><expr pos:start="11:5" pos:end="11:45"><name pos:start="11:5" pos:end="11:8">addr</name> <operator pos:start="11:10" pos:end="11:10">=</operator> <call pos:start="11:12" pos:end="11:45"><name pos:start="11:12" pos:end="11:22">guest_alloc</name><argument_list pos:start="11:23" pos:end="11:45">(<argument pos:start="11:24" pos:end="11:32"><expr pos:start="11:24" pos:end="11:32"><name pos:start="11:24" pos:end="11:32"><name pos:start="11:24" pos:end="11:25">vs</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:32">alloc</name></name></expr></argument>, <argument pos:start="11:35" pos:end="11:44"><expr pos:start="11:35" pos:end="11:44"><name pos:start="11:35" pos:end="11:44">alloc_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:13">(<expr pos:start="13:9" pos:end="13:12"><name pos:start="13:9" pos:end="13:12">data</name></expr>)</condition> <block pos:start="13:15" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:41">

        <expr_stmt pos:start="15:9" pos:end="15:41"><expr pos:start="15:9" pos:end="15:40"><call pos:start="15:9" pos:end="15:40"><name pos:start="15:9" pos:end="15:16">memwrite</name><argument_list pos:start="15:17" pos:end="15:40">(<argument pos:start="15:18" pos:end="15:21"><expr pos:start="15:18" pos:end="15:21"><name pos:start="15:18" pos:end="15:21">addr</name></expr></argument>, <argument pos:start="15:24" pos:end="15:27"><expr pos:start="15:24" pos:end="15:27"><name pos:start="15:24" pos:end="15:27">data</name></expr></argument>, <argument pos:start="15:30" pos:end="15:39"><expr pos:start="15:30" pos:end="15:39"><name pos:start="15:30" pos:end="15:39">alloc_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="21:5" pos:end="21:16">return <expr pos:start="21:12" pos:end="21:15"><name pos:start="21:12" pos:end="21:15">addr</name></expr>;</return>

</block_content>}</block></function>
</unit>
