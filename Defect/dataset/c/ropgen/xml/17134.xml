<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17134.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">pte_check_hash32</name><parameter_list pos:start="1:28" pos:end="3:71">(<parameter pos:start="1:29" pos:end="1:42"><decl pos:start="1:29" pos:end="1:42"><type pos:start="1:29" pos:end="1:42"><name pos:start="1:29" pos:end="1:37">mmu_ctx_t</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">ctx</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:61"><decl pos:start="1:45" pos:end="1:61"><type pos:start="1:45" pos:end="1:61"><name pos:start="1:45" pos:end="1:56">target_ulong</name></type> <name pos:start="1:58" pos:end="1:61">pte0</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:45"><decl pos:start="3:29" pos:end="3:45"><type pos:start="3:29" pos:end="3:45"><name pos:start="3:29" pos:end="3:40">target_ulong</name></type> <name pos:start="3:42" pos:end="3:45">pte1</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:52"><decl pos:start="3:48" pos:end="3:52"><type pos:start="3:48" pos:end="3:52"><name pos:start="3:48" pos:end="3:50">int</name></type> <name pos:start="3:52" pos:end="3:52">h</name></decl></parameter>, <parameter pos:start="3:55" pos:end="3:60"><decl pos:start="3:55" pos:end="3:60"><type pos:start="3:55" pos:end="3:60"><name pos:start="3:55" pos:end="3:57">int</name></type> <name pos:start="3:59" pos:end="3:60">rw</name></decl></parameter>, <parameter pos:start="3:63" pos:end="3:70"><decl pos:start="3:63" pos:end="3:70"><type pos:start="3:63" pos:end="3:70"><name pos:start="3:63" pos:end="3:65">int</name></type> <name pos:start="3:67" pos:end="3:70">type</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="81:1">{<block_content pos:start="7:5" pos:end="79:15">

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:16">target_ulong</name></type> <name pos:start="7:18" pos:end="7:21">ptem</name></decl>, <decl pos:start="7:24" pos:end="7:28"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:24" pos:end="7:28">mmask</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">access</name></decl>, <decl pos:start="9:17" pos:end="9:19"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:17" pos:end="9:19">ret</name></decl>, <decl pos:start="9:22" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:22" pos:end="9:25">pteh</name></decl>, <decl pos:start="9:28" pos:end="9:31"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:28" pos:end="9:31">ptev</name></decl>, <decl pos:start="9:34" pos:end="9:35"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:34" pos:end="9:35">pp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:13"><expr pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:7">ret</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <operator pos:start="13:11" pos:end="13:11">-</operator><literal type="number" pos:start="13:12" pos:end="13:12">1</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="15:5" pos:end="15:40">/* Check validity and table match */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:37"><expr pos:start="17:5" pos:end="17:36"><name pos:start="17:5" pos:end="17:8">ptev</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <call pos:start="17:12" pos:end="17:36"><name pos:start="17:12" pos:end="17:30">pte_is_valid_hash32</name><argument_list pos:start="17:31" pos:end="17:36">(<argument pos:start="17:32" pos:end="17:35"><expr pos:start="17:32" pos:end="17:35"><name pos:start="17:32" pos:end="17:35">pte0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:27"><expr pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:8">pteh</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <operator pos:start="19:12" pos:end="19:12">(</operator><name pos:start="19:13" pos:end="19:16">pte0</name> <operator pos:start="19:18" pos:end="19:19">&gt;&gt;</operator> <literal type="number" pos:start="19:21" pos:end="19:21">6</literal><operator pos:start="19:22" pos:end="19:22">)</operator> <operator pos:start="19:24" pos:end="19:24">&amp;</operator> <literal type="number" pos:start="19:26" pos:end="19:26">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="75:5"><if pos:start="21:5" pos:end="75:5">if <condition pos:start="21:8" pos:end="21:26">(<expr pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:12">ptev</name> <operator pos:start="21:14" pos:end="21:15">&amp;&amp;</operator> <name pos:start="21:17" pos:end="21:17">h</name> <operator pos:start="21:19" pos:end="21:20">==</operator> <name pos:start="21:22" pos:end="21:25">pteh</name></expr>)</condition> <block pos:start="21:28" pos:end="75:5">{<block_content pos:start="25:9" pos:end="73:9">

        <comment type="block" pos:start="23:9" pos:end="23:30">/* Check vsid &amp; api */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:36"><expr pos:start="25:9" pos:end="25:35"><name pos:start="25:9" pos:end="25:12">ptem</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <name pos:start="25:16" pos:end="25:19">pte0</name> <operator pos:start="25:21" pos:end="25:21">&amp;</operator> <name pos:start="25:23" pos:end="25:35">PTE_PTEM_MASK</name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:31"><expr pos:start="27:9" pos:end="27:30"><name pos:start="27:9" pos:end="27:13">mmask</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <name pos:start="27:17" pos:end="27:30">PTE_CHECK_MASK</name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:31"><expr pos:start="29:9" pos:end="29:30"><name pos:start="29:9" pos:end="29:10">pp</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <name pos:start="29:14" pos:end="29:17">pte1</name> <operator pos:start="29:19" pos:end="29:19">&amp;</operator> <literal type="number" pos:start="29:21" pos:end="29:30">0x00000003</literal></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="73:9"><if pos:start="31:9" pos:end="73:9">if <condition pos:start="31:12" pos:end="31:30">(<expr pos:start="31:13" pos:end="31:29"><name pos:start="31:13" pos:end="31:16">ptem</name> <operator pos:start="31:18" pos:end="31:19">==</operator> <name pos:start="31:21" pos:end="31:29"><name pos:start="31:21" pos:end="31:23">ctx</name><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:29">ptem</name></name></expr>)</condition> <block pos:start="31:32" pos:end="73:9">{<block_content pos:start="33:13" pos:end="71:13">

            <if_stmt pos:start="33:13" pos:end="45:13"><if pos:start="33:13" pos:end="45:13">if <condition pos:start="33:16" pos:end="33:44">(<expr pos:start="33:17" pos:end="33:43"><name pos:start="33:17" pos:end="33:26"><name pos:start="33:17" pos:end="33:19">ctx</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:26">raddr</name></name> <operator pos:start="33:28" pos:end="33:29">!=</operator> <operator pos:start="33:31" pos:end="33:31">(</operator><name pos:start="33:32" pos:end="33:37">hwaddr</name><operator pos:start="33:38" pos:end="33:38">)</operator><operator pos:start="33:39" pos:end="33:39">-</operator><literal type="number" pos:start="33:40" pos:end="33:43">1ULL</literal></expr>)</condition> <block pos:start="33:46" pos:end="45:13">{<block_content pos:start="37:17" pos:end="43:17">

                <comment type="block" pos:start="35:17" pos:end="35:66">/* all matches should have equal RPN, WIMG &amp; PP */</comment>

                <if_stmt pos:start="37:17" pos:end="43:17"><if pos:start="37:17" pos:end="43:17">if <condition pos:start="37:20" pos:end="37:59">(<expr pos:start="37:21" pos:end="37:58"><operator pos:start="37:21" pos:end="37:21">(</operator><name pos:start="37:22" pos:end="37:31"><name pos:start="37:22" pos:end="37:24">ctx</name><operator pos:start="37:25" pos:end="37:26">-&gt;</operator><name pos:start="37:27" pos:end="37:31">raddr</name></name> <operator pos:start="37:33" pos:end="37:33">&amp;</operator> <name pos:start="37:35" pos:end="37:39">mmask</name><operator pos:start="37:40" pos:end="37:40">)</operator> <operator pos:start="37:42" pos:end="37:43">!=</operator> <operator pos:start="37:45" pos:end="37:45">(</operator><name pos:start="37:46" pos:end="37:49">pte1</name> <operator pos:start="37:51" pos:end="37:51">&amp;</operator> <name pos:start="37:53" pos:end="37:57">mmask</name><operator pos:start="37:58" pos:end="37:58">)</operator></expr>)</condition> <block pos:start="37:61" pos:end="43:17">{<block_content pos:start="39:21" pos:end="41:30">

                    <expr_stmt pos:start="39:21" pos:end="39:50"><expr pos:start="39:21" pos:end="39:49"><call pos:start="39:21" pos:end="39:49"><name pos:start="39:21" pos:end="39:28">qemu_log</name><argument_list pos:start="39:29" pos:end="39:49">(<argument pos:start="39:30" pos:end="39:48"><expr pos:start="39:30" pos:end="39:48"><literal type="string" pos:start="39:30" pos:end="39:48">"Bad RPN/WIMG/PP\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="41:21" pos:end="41:30">return <expr pos:start="41:28" pos:end="41:29"><operator pos:start="41:28" pos:end="41:28">-</operator><literal type="number" pos:start="41:29" pos:end="41:29">3</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="47:13" pos:end="47:39">/* Compute access rights */</comment>

            <expr_stmt pos:start="49:13" pos:end="49:53"><expr pos:start="49:13" pos:end="49:52"><name pos:start="49:13" pos:end="49:18">access</name> <operator pos:start="49:20" pos:end="49:20">=</operator> <call pos:start="49:22" pos:end="49:52"><name pos:start="49:22" pos:end="49:29">pp_check</name><argument_list pos:start="49:30" pos:end="49:52">(<argument pos:start="49:31" pos:end="49:38"><expr pos:start="49:31" pos:end="49:38"><name pos:start="49:31" pos:end="49:38"><name pos:start="49:31" pos:end="49:33">ctx</name><operator pos:start="49:34" pos:end="49:35">-&gt;</operator><name pos:start="49:36" pos:end="49:38">key</name></name></expr></argument>, <argument pos:start="49:41" pos:end="49:42"><expr pos:start="49:41" pos:end="49:42"><name pos:start="49:41" pos:end="49:42">pp</name></expr></argument>, <argument pos:start="49:45" pos:end="49:51"><expr pos:start="49:45" pos:end="49:51"><name pos:start="49:45" pos:end="49:51"><name pos:start="49:45" pos:end="49:47">ctx</name><operator pos:start="49:48" pos:end="49:49">-&gt;</operator><name pos:start="49:50" pos:end="49:51">nx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="51:13" pos:end="51:52">/* Keep the matching PTE informations */</comment>

            <expr_stmt pos:start="53:13" pos:end="53:30"><expr pos:start="53:13" pos:end="53:29"><name pos:start="53:13" pos:end="53:22"><name pos:start="53:13" pos:end="53:15">ctx</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:22">raddr</name></name> <operator pos:start="53:24" pos:end="53:24">=</operator> <name pos:start="53:26" pos:end="53:29">pte1</name></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:31"><expr pos:start="55:13" pos:end="55:30"><name pos:start="55:13" pos:end="55:21"><name pos:start="55:13" pos:end="55:15">ctx</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:21">prot</name></name> <operator pos:start="55:23" pos:end="55:23">=</operator> <name pos:start="55:25" pos:end="55:30">access</name></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:50"><expr pos:start="57:13" pos:end="57:49"><name pos:start="57:13" pos:end="57:15">ret</name> <operator pos:start="57:17" pos:end="57:17">=</operator> <call pos:start="57:19" pos:end="57:49"><name pos:start="57:19" pos:end="57:28">check_prot</name><argument_list pos:start="57:29" pos:end="57:49">(<argument pos:start="57:30" pos:end="57:38"><expr pos:start="57:30" pos:end="57:38"><name pos:start="57:30" pos:end="57:38"><name pos:start="57:30" pos:end="57:32">ctx</name><operator pos:start="57:33" pos:end="57:34">-&gt;</operator><name pos:start="57:35" pos:end="57:38">prot</name></name></expr></argument>, <argument pos:start="57:41" pos:end="57:42"><expr pos:start="57:41" pos:end="57:42"><name pos:start="57:41" pos:end="57:42">rw</name></expr></argument>, <argument pos:start="57:45" pos:end="57:48"><expr pos:start="57:45" pos:end="57:48"><name pos:start="57:45" pos:end="57:48">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="59:13" pos:end="71:13"><if pos:start="59:13" pos:end="65:13">if <condition pos:start="59:16" pos:end="59:25">(<expr pos:start="59:17" pos:end="59:24"><name pos:start="59:17" pos:end="59:19">ret</name> <operator pos:start="59:21" pos:end="59:22">==</operator> <literal type="number" pos:start="59:24" pos:end="59:24">0</literal></expr>)</condition> <block pos:start="59:27" pos:end="65:13">{<block_content pos:start="63:17" pos:end="63:50">

                <comment type="block" pos:start="61:17" pos:end="61:36">/* Access granted */</comment>

                <expr_stmt pos:start="63:17" pos:end="63:50"><expr pos:start="63:17" pos:end="63:49"><call pos:start="63:17" pos:end="63:49"><name pos:start="63:17" pos:end="63:23">LOG_MMU</name><argument_list pos:start="63:24" pos:end="63:49">(<argument pos:start="63:25" pos:end="63:48"><expr pos:start="63:25" pos:end="63:48"><literal type="string" pos:start="63:25" pos:end="63:48">"PTE access granted !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="65:15" pos:end="71:13">else <block pos:start="65:20" pos:end="71:13">{<block_content pos:start="69:17" pos:end="69:49">

                <comment type="block" pos:start="67:17" pos:end="67:44">/* Access right violation */</comment>

                <expr_stmt pos:start="69:17" pos:end="69:49"><expr pos:start="69:17" pos:end="69:48"><call pos:start="69:17" pos:end="69:48"><name pos:start="69:17" pos:end="69:23">LOG_MMU</name><argument_list pos:start="69:24" pos:end="69:48">(<argument pos:start="69:25" pos:end="69:47"><expr pos:start="69:25" pos:end="69:47"><literal type="string" pos:start="69:25" pos:end="69:47">"PTE access rejected\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="79:5" pos:end="79:15">return <expr pos:start="79:12" pos:end="79:14"><name pos:start="79:12" pos:end="79:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
