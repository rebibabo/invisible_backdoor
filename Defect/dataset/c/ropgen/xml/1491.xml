<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1491.c" pos:tabs="8"><function pos:start="1:1" pos:end="197:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:26">helper_booke206_tlbwe</name><parameter_list pos:start="1:27" pos:end="1:44">(<parameter pos:start="1:28" pos:end="1:43"><decl pos:start="1:28" pos:end="1:43"><type pos:start="1:28" pos:end="1:40"><name pos:start="1:28" pos:end="1:38">CPUPPCState</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="197:1">{<block_content pos:start="5:5" pos:end="195:5">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">PowerPCCPU</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">cpu</name> <init pos:start="5:21" pos:end="5:42">= <expr pos:start="5:23" pos:end="5:42"><call pos:start="5:23" pos:end="5:42"><name pos:start="5:23" pos:end="5:37">ppc_env_get_cpu</name><argument_list pos:start="5:38" pos:end="5:42">(<argument pos:start="5:39" pos:end="5:41"><expr pos:start="5:39" pos:end="5:41"><name pos:start="5:39" pos:end="5:41">env</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:20">tlbncfg</name></decl>, <decl pos:start="7:23" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:23" pos:end="7:26">tlbn</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">ppcmas_tlb_t</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:21">tlb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:21">size_tlb</name></decl>, <decl pos:start="11:24" pos:end="11:30"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:24" pos:end="11:30">size_ps</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:16">target_ulong</name></type> <name pos:start="13:18" pos:end="13:21">mask</name></decl>;</decl_stmt>





    <switch pos:start="19:5" pos:end="51:5">switch <condition pos:start="19:12" pos:end="19:52">(<expr pos:start="19:13" pos:end="19:51"><name pos:start="19:13" pos:end="19:36"><name pos:start="19:13" pos:end="19:15">env</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:20">spr</name><index pos:start="19:21" pos:end="19:36">[<expr pos:start="19:22" pos:end="19:35"><name pos:start="19:22" pos:end="19:35">SPR_BOOKE_MAS0</name></expr>]</index></name> <operator pos:start="19:38" pos:end="19:38">&amp;</operator> <name pos:start="19:40" pos:end="19:51">MAS0_WQ_MASK</name></expr>)</condition> <block pos:start="19:54" pos:end="51:5">{<block_content pos:start="21:5" pos:end="49:15">

    <case pos:start="21:5" pos:end="21:24">case <expr pos:start="21:10" pos:end="21:23"><name pos:start="21:10" pos:end="21:23">MAS0_WQ_ALWAYS</name></expr>:</case>

        <comment type="block" pos:start="23:9" pos:end="23:42">/* good to go, write that entry */</comment>

        <break pos:start="25:9" pos:end="25:14">break;</break>

    <case pos:start="27:5" pos:end="27:22">case <expr pos:start="27:10" pos:end="27:21"><name pos:start="27:10" pos:end="27:21">MAS0_WQ_COND</name></expr>:</case>

        <comment type="block" pos:start="29:9" pos:end="29:35">/* XXX check if reserved */</comment>

        <if_stmt pos:start="31:9" pos:end="35:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:14">(<expr pos:start="31:13" pos:end="31:13"><literal type="number" pos:start="31:13" pos:end="31:13">0</literal></expr>)</condition> <block pos:start="31:16" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:19">

            <return pos:start="33:13" pos:end="33:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    <case pos:start="39:5" pos:end="39:26">case <expr pos:start="39:10" pos:end="39:25"><name pos:start="39:10" pos:end="39:25">MAS0_WQ_CLR_RSRV</name></expr>:</case>

        <comment type="block" pos:start="41:9" pos:end="41:29">/* XXX clear entry */</comment>

        <return pos:start="43:9" pos:end="43:15">return;</return>

    <default pos:start="45:5" pos:end="45:12">default:</default>

        <comment type="block" pos:start="47:9" pos:end="47:32">/* no idea what to do */</comment>

        <return pos:start="49:9" pos:end="49:15">return;</return>

    </block_content>}</block></switch>



    <if_stmt pos:start="55:5" pos:end="65:5"><if pos:start="55:5" pos:end="65:5">if <condition pos:start="55:8" pos:end="57:16">(<expr pos:start="55:9" pos:end="57:15"><operator pos:start="55:9" pos:end="55:9">(</operator><operator pos:start="55:10" pos:end="55:10">(</operator><name pos:start="55:11" pos:end="55:34"><name pos:start="55:11" pos:end="55:13">env</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:18">spr</name><index pos:start="55:19" pos:end="55:34">[<expr pos:start="55:20" pos:end="55:33"><name pos:start="55:20" pos:end="55:33">SPR_BOOKE_MAS0</name></expr>]</index></name> <operator pos:start="55:36" pos:end="55:36">&amp;</operator> <name pos:start="55:38" pos:end="55:47">MAS0_ATSEL</name><operator pos:start="55:48" pos:end="55:48">)</operator> <operator pos:start="55:50" pos:end="55:51">==</operator> <name pos:start="55:53" pos:end="55:67">MAS0_ATSEL_LRAT</name><operator pos:start="55:68" pos:end="55:68">)</operator> <operator pos:start="55:70" pos:end="55:71">&amp;&amp;</operator>

        <operator pos:start="57:9" pos:end="57:9">!</operator><name pos:start="57:10" pos:end="57:15">msr_gs</name></expr>)</condition> <block pos:start="57:18" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:15">

        <comment type="block" pos:start="59:9" pos:end="59:58">/* XXX we don't support direct LRAT setting yet */</comment>

        <expr_stmt pos:start="61:9" pos:end="61:65"><expr pos:start="61:9" pos:end="61:64"><call pos:start="61:9" pos:end="61:64"><name pos:start="61:9" pos:end="61:15">fprintf</name><argument_list pos:start="61:16" pos:end="61:64">(<argument pos:start="61:17" pos:end="61:22"><expr pos:start="61:17" pos:end="61:22"><name pos:start="61:17" pos:end="61:22">stderr</name></expr></argument>, <argument pos:start="61:25" pos:end="61:63"><expr pos:start="61:25" pos:end="61:63"><literal type="string" pos:start="61:25" pos:end="61:63">"cpu: don't support LRAT setting yet\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="63:9" pos:end="63:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:78"><expr pos:start="69:5" pos:end="69:77"><name pos:start="69:5" pos:end="69:8">tlbn</name> <operator pos:start="69:10" pos:end="69:10">=</operator> <operator pos:start="69:12" pos:end="69:12">(</operator><name pos:start="69:13" pos:end="69:36"><name pos:start="69:13" pos:end="69:15">env</name><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:20">spr</name><index pos:start="69:21" pos:end="69:36">[<expr pos:start="69:22" pos:end="69:35"><name pos:start="69:22" pos:end="69:35">SPR_BOOKE_MAS0</name></expr>]</index></name> <operator pos:start="69:38" pos:end="69:38">&amp;</operator> <name pos:start="69:40" pos:end="69:55">MAS0_TLBSEL_MASK</name><operator pos:start="69:56" pos:end="69:56">)</operator> <operator pos:start="69:58" pos:end="69:59">&gt;&gt;</operator> <name pos:start="69:61" pos:end="69:77">MAS0_TLBSEL_SHIFT</name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:49"><expr pos:start="71:5" pos:end="71:48"><name pos:start="71:5" pos:end="71:11">tlbncfg</name> <operator pos:start="71:13" pos:end="71:13">=</operator> <name pos:start="71:15" pos:end="71:48"><name pos:start="71:15" pos:end="71:17">env</name><operator pos:start="71:18" pos:end="71:19">-&gt;</operator><name pos:start="71:20" pos:end="71:22">spr</name><index pos:start="71:23" pos:end="71:48">[<expr pos:start="71:24" pos:end="71:47"><name pos:start="71:24" pos:end="71:40">SPR_BOOKE_TLB0CFG</name> <operator pos:start="71:42" pos:end="71:42">+</operator> <name pos:start="71:44" pos:end="71:47">tlbn</name></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:32"><expr pos:start="75:5" pos:end="75:31"><name pos:start="75:5" pos:end="75:7">tlb</name> <operator pos:start="75:9" pos:end="75:9">=</operator> <call pos:start="75:11" pos:end="75:31"><name pos:start="75:11" pos:end="75:26">booke206_cur_tlb</name><argument_list pos:start="75:27" pos:end="75:31">(<argument pos:start="75:28" pos:end="75:30"><expr pos:start="75:28" pos:end="75:30"><name pos:start="75:28" pos:end="75:30">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="79:5" pos:end="87:5"><if pos:start="79:5" pos:end="87:5">if <condition pos:start="79:8" pos:end="79:13">(<expr pos:start="79:9" pos:end="79:12"><operator pos:start="79:9" pos:end="79:9">!</operator><name pos:start="79:10" pos:end="79:12">tlb</name></expr>)</condition> <block pos:start="79:15" pos:end="87:5">{<block_content pos:start="81:9" pos:end="85:66">

        <expr_stmt pos:start="81:9" pos:end="85:66"><expr pos:start="81:9" pos:end="85:65"><call pos:start="81:9" pos:end="85:65"><name pos:start="81:9" pos:end="81:30">raise_exception_err_ra</name><argument_list pos:start="81:31" pos:end="85:65">(<argument pos:start="81:32" pos:end="81:34"><expr pos:start="81:32" pos:end="81:34"><name pos:start="81:32" pos:end="81:34">env</name></expr></argument>, <argument pos:start="81:37" pos:end="81:56"><expr pos:start="81:37" pos:end="81:56"><name pos:start="81:37" pos:end="81:56">POWERPC_EXCP_PROGRAM</name></expr></argument>,

                               <argument pos:start="83:32" pos:end="85:55"><expr pos:start="83:32" pos:end="85:55"><name pos:start="83:32" pos:end="83:49">POWERPC_EXCP_INVAL</name> <operator pos:start="83:51" pos:end="83:51">|</operator>

                               <name pos:start="85:32" pos:end="85:55">POWERPC_EXCP_INVAL_INVAL</name></expr></argument>, <argument pos:start="85:58" pos:end="85:64"><expr pos:start="85:58" pos:end="85:64"><call pos:start="85:58" pos:end="85:64"><name pos:start="85:58" pos:end="85:62">GETPC</name><argument_list pos:start="85:63" pos:end="85:64">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="91:5" pos:end="91:49">/* check that we support the targeted size */</comment>

    <expr_stmt pos:start="93:5" pos:end="93:80"><expr pos:start="93:5" pos:end="93:79"><name pos:start="93:5" pos:end="93:12">size_tlb</name> <operator pos:start="93:14" pos:end="93:14">=</operator> <operator pos:start="93:16" pos:end="93:16">(</operator><name pos:start="93:17" pos:end="93:40"><name pos:start="93:17" pos:end="93:19">env</name><operator pos:start="93:20" pos:end="93:21">-&gt;</operator><name pos:start="93:22" pos:end="93:24">spr</name><index pos:start="93:25" pos:end="93:40">[<expr pos:start="93:26" pos:end="93:39"><name pos:start="93:26" pos:end="93:39">SPR_BOOKE_MAS1</name></expr>]</index></name> <operator pos:start="93:42" pos:end="93:42">&amp;</operator> <name pos:start="93:44" pos:end="93:58">MAS1_TSIZE_MASK</name><operator pos:start="93:59" pos:end="93:59">)</operator> <operator pos:start="93:61" pos:end="93:62">&gt;&gt;</operator> <name pos:start="93:64" pos:end="93:79">MAS1_TSIZE_SHIFT</name></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:41"><expr pos:start="95:5" pos:end="95:40"><name pos:start="95:5" pos:end="95:11">size_ps</name> <operator pos:start="95:13" pos:end="95:13">=</operator> <call pos:start="95:15" pos:end="95:40"><name pos:start="95:15" pos:end="95:29">booke206_tlbnps</name><argument_list pos:start="95:30" pos:end="95:40">(<argument pos:start="95:31" pos:end="95:33"><expr pos:start="95:31" pos:end="95:33"><name pos:start="95:31" pos:end="95:33">env</name></expr></argument>, <argument pos:start="95:36" pos:end="95:39"><expr pos:start="95:36" pos:end="95:39"><name pos:start="95:36" pos:end="95:39">tlbn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="97:5" pos:end="107:5"><if pos:start="97:5" pos:end="107:5">if <condition pos:start="97:8" pos:end="99:37">(<expr pos:start="97:9" pos:end="99:36"><operator pos:start="97:9" pos:end="97:9">(</operator><name pos:start="97:10" pos:end="97:33"><name pos:start="97:10" pos:end="97:12">env</name><operator pos:start="97:13" pos:end="97:14">-&gt;</operator><name pos:start="97:15" pos:end="97:17">spr</name><index pos:start="97:18" pos:end="97:33">[<expr pos:start="97:19" pos:end="97:32"><name pos:start="97:19" pos:end="97:32">SPR_BOOKE_MAS1</name></expr>]</index></name> <operator pos:start="97:35" pos:end="97:35">&amp;</operator> <name pos:start="97:37" pos:end="97:46">MAS1_VALID</name><operator pos:start="97:47" pos:end="97:47">)</operator> <operator pos:start="97:49" pos:end="97:50">&amp;&amp;</operator> <operator pos:start="97:52" pos:end="97:52">(</operator><name pos:start="97:53" pos:end="97:59">tlbncfg</name> <operator pos:start="97:61" pos:end="97:61">&amp;</operator> <name pos:start="97:63" pos:end="97:75">TLBnCFG_AVAIL</name><operator pos:start="97:76" pos:end="97:76">)</operator> <operator pos:start="97:78" pos:end="97:79">&amp;&amp;</operator>

        <operator pos:start="99:9" pos:end="99:9">!</operator><operator pos:start="99:10" pos:end="99:10">(</operator><name pos:start="99:11" pos:end="99:17">size_ps</name> <operator pos:start="99:19" pos:end="99:19">&amp;</operator> <operator pos:start="99:21" pos:end="99:21">(</operator><literal type="number" pos:start="99:22" pos:end="99:22">1</literal> <operator pos:start="99:24" pos:end="99:25">&lt;&lt;</operator> <name pos:start="99:27" pos:end="99:34">size_tlb</name><operator pos:start="99:35" pos:end="99:35">)</operator><operator pos:start="99:36" pos:end="99:36">)</operator></expr>)</condition> <block pos:start="99:39" pos:end="107:5">{<block_content pos:start="101:9" pos:end="105:66">

        <expr_stmt pos:start="101:9" pos:end="105:66"><expr pos:start="101:9" pos:end="105:65"><call pos:start="101:9" pos:end="105:65"><name pos:start="101:9" pos:end="101:30">raise_exception_err_ra</name><argument_list pos:start="101:31" pos:end="105:65">(<argument pos:start="101:32" pos:end="101:34"><expr pos:start="101:32" pos:end="101:34"><name pos:start="101:32" pos:end="101:34">env</name></expr></argument>, <argument pos:start="101:37" pos:end="101:56"><expr pos:start="101:37" pos:end="101:56"><name pos:start="101:37" pos:end="101:56">POWERPC_EXCP_PROGRAM</name></expr></argument>,

                               <argument pos:start="103:32" pos:end="105:55"><expr pos:start="103:32" pos:end="105:55"><name pos:start="103:32" pos:end="103:49">POWERPC_EXCP_INVAL</name> <operator pos:start="103:51" pos:end="103:51">|</operator>

                               <name pos:start="105:32" pos:end="105:55">POWERPC_EXCP_INVAL_INVAL</name></expr></argument>, <argument pos:start="105:58" pos:end="105:64"><expr pos:start="105:58" pos:end="105:64"><call pos:start="105:58" pos:end="105:64"><name pos:start="105:58" pos:end="105:62">GETPC</name><argument_list pos:start="105:63" pos:end="105:64">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="111:5" pos:end="115:5"><if pos:start="111:5" pos:end="115:5">if <condition pos:start="111:8" pos:end="111:15">(<expr pos:start="111:9" pos:end="111:14"><name pos:start="111:9" pos:end="111:14">msr_gs</name></expr>)</condition> <block pos:start="111:17" pos:end="115:5">{<block_content pos:start="113:9" pos:end="113:59">

        <expr_stmt pos:start="113:9" pos:end="113:59"><expr pos:start="113:9" pos:end="113:58"><call pos:start="113:9" pos:end="113:58"><name pos:start="113:9" pos:end="113:17">cpu_abort</name><argument_list pos:start="113:18" pos:end="113:58">(<argument pos:start="113:19" pos:end="113:26"><expr pos:start="113:19" pos:end="113:26"><call pos:start="113:19" pos:end="113:26"><name pos:start="113:19" pos:end="113:21">CPU</name><argument_list pos:start="113:22" pos:end="113:26">(<argument pos:start="113:23" pos:end="113:25"><expr pos:start="113:23" pos:end="113:25"><name pos:start="113:23" pos:end="113:25">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="113:29" pos:end="113:57"><expr pos:start="113:29" pos:end="113:57"><literal type="string" pos:start="113:29" pos:end="113:57">"missing HV implementation\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="117:5" pos:end="119:33"><expr pos:start="117:5" pos:end="119:32"><name pos:start="117:5" pos:end="117:15"><name pos:start="117:5" pos:end="117:7">tlb</name><operator pos:start="117:8" pos:end="117:9">-&gt;</operator><name pos:start="117:10" pos:end="117:15">mas7_3</name></name> <operator pos:start="117:17" pos:end="117:17">=</operator> <operator pos:start="117:19" pos:end="117:19">(</operator><operator pos:start="117:20" pos:end="117:20">(</operator><name pos:start="117:21" pos:end="117:28">uint64_t</name><operator pos:start="117:29" pos:end="117:29">)</operator><name pos:start="117:30" pos:end="117:53"><name pos:start="117:30" pos:end="117:32">env</name><operator pos:start="117:33" pos:end="117:34">-&gt;</operator><name pos:start="117:35" pos:end="117:37">spr</name><index pos:start="117:38" pos:end="117:53">[<expr pos:start="117:39" pos:end="117:52"><name pos:start="117:39" pos:end="117:52">SPR_BOOKE_MAS7</name></expr>]</index></name> <operator pos:start="117:55" pos:end="117:56">&lt;&lt;</operator> <literal type="number" pos:start="117:58" pos:end="117:59">32</literal><operator pos:start="117:60" pos:end="117:60">)</operator> <operator pos:start="117:62" pos:end="117:62">|</operator>

        <name pos:start="119:9" pos:end="119:32"><name pos:start="119:9" pos:end="119:11">env</name><operator pos:start="119:12" pos:end="119:13">-&gt;</operator><name pos:start="119:14" pos:end="119:16">spr</name><index pos:start="119:17" pos:end="119:32">[<expr pos:start="119:18" pos:end="119:31"><name pos:start="119:18" pos:end="119:31">SPR_BOOKE_MAS3</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:41"><expr pos:start="121:5" pos:end="121:40"><name pos:start="121:5" pos:end="121:13"><name pos:start="121:5" pos:end="121:7">tlb</name><operator pos:start="121:8" pos:end="121:9">-&gt;</operator><name pos:start="121:10" pos:end="121:13">mas1</name></name> <operator pos:start="121:15" pos:end="121:15">=</operator> <name pos:start="121:17" pos:end="121:40"><name pos:start="121:17" pos:end="121:19">env</name><operator pos:start="121:20" pos:end="121:21">-&gt;</operator><name pos:start="121:22" pos:end="121:24">spr</name><index pos:start="121:25" pos:end="121:40">[<expr pos:start="121:26" pos:end="121:39"><name pos:start="121:26" pos:end="121:39">SPR_BOOKE_MAS1</name></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="125:5" pos:end="145:5"><if pos:start="125:5" pos:end="131:5">if <condition pos:start="125:8" pos:end="125:63">(<expr pos:start="125:9" pos:end="125:62"><operator pos:start="125:9" pos:end="125:9">(</operator><name pos:start="125:10" pos:end="125:29"><name pos:start="125:10" pos:end="125:12">env</name><operator pos:start="125:13" pos:end="125:14">-&gt;</operator><name pos:start="125:15" pos:end="125:17">spr</name><index pos:start="125:18" pos:end="125:29">[<expr pos:start="125:19" pos:end="125:28"><name pos:start="125:19" pos:end="125:28">SPR_MMUCFG</name></expr>]</index></name> <operator pos:start="125:31" pos:end="125:31">&amp;</operator> <name pos:start="125:33" pos:end="125:43">MMUCFG_MAVN</name><operator pos:start="125:44" pos:end="125:44">)</operator> <operator pos:start="125:46" pos:end="125:47">==</operator> <name pos:start="125:49" pos:end="125:62">MMUCFG_MAVN_V2</name></expr>)</condition> <block pos:start="125:65" pos:end="131:5">{<block_content pos:start="129:9" pos:end="129:49">

        <comment type="block" pos:start="127:9" pos:end="127:71">/* For TLB which has a fixed size TSIZE is ignored with MAV2 */</comment>

        <expr_stmt pos:start="129:9" pos:end="129:49"><expr pos:start="129:9" pos:end="129:48"><call pos:start="129:9" pos:end="129:48"><name pos:start="129:9" pos:end="129:32">booke206_fixed_size_tlbn</name><argument_list pos:start="129:33" pos:end="129:48">(<argument pos:start="129:34" pos:end="129:36"><expr pos:start="129:34" pos:end="129:36"><name pos:start="129:34" pos:end="129:36">env</name></expr></argument>, <argument pos:start="129:39" pos:end="129:42"><expr pos:start="129:39" pos:end="129:42"><name pos:start="129:39" pos:end="129:42">tlbn</name></expr></argument>, <argument pos:start="129:45" pos:end="129:47"><expr pos:start="129:45" pos:end="129:47"><name pos:start="129:45" pos:end="129:47">tlb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="131:7" pos:end="145:5">else <block pos:start="131:12" pos:end="145:5">{<block_content pos:start="133:9" pos:end="143:9">

        <if_stmt pos:start="133:9" pos:end="143:9"><if pos:start="133:9" pos:end="143:9">if <condition pos:start="133:12" pos:end="133:39">(<expr pos:start="133:13" pos:end="133:38"><operator pos:start="133:13" pos:end="133:13">!</operator><operator pos:start="133:14" pos:end="133:14">(</operator><name pos:start="133:15" pos:end="133:21">tlbncfg</name> <operator pos:start="133:23" pos:end="133:23">&amp;</operator> <name pos:start="133:25" pos:end="133:37">TLBnCFG_AVAIL</name><operator pos:start="133:38" pos:end="133:38">)</operator></expr>)</condition> <block pos:start="133:41" pos:end="143:9">{<block_content pos:start="137:13" pos:end="141:59">

            <comment type="block" pos:start="135:13" pos:end="135:63">/* force !AVAIL TLB entries to correct page size */</comment>

            <expr_stmt pos:start="137:13" pos:end="137:42"><expr pos:start="137:13" pos:end="137:41"><name pos:start="137:13" pos:end="137:21"><name pos:start="137:13" pos:end="137:15">tlb</name><operator pos:start="137:16" pos:end="137:17">-&gt;</operator><name pos:start="137:18" pos:end="137:21">mas1</name></name> <operator pos:start="137:23" pos:end="137:24">&amp;=</operator> <operator pos:start="137:26" pos:end="137:26">~</operator><name pos:start="137:27" pos:end="137:41">MAS1_TSIZE_MASK</name></expr>;</expr_stmt>

            <comment type="block" pos:start="139:13" pos:end="139:50">/* XXX can be configured in MMUCSR0 */</comment>

            <expr_stmt pos:start="141:13" pos:end="141:59"><expr pos:start="141:13" pos:end="141:58"><name pos:start="141:13" pos:end="141:21"><name pos:start="141:13" pos:end="141:15">tlb</name><operator pos:start="141:16" pos:end="141:17">-&gt;</operator><name pos:start="141:18" pos:end="141:21">mas1</name></name> <operator pos:start="141:23" pos:end="141:24">|=</operator> <operator pos:start="141:26" pos:end="141:26">(</operator><name pos:start="141:27" pos:end="141:33">tlbncfg</name> <operator pos:start="141:35" pos:end="141:35">&amp;</operator> <name pos:start="141:37" pos:end="141:51">TLBnCFG_MINSIZE</name><operator pos:start="141:52" pos:end="141:52">)</operator> <operator pos:start="141:54" pos:end="141:55">&gt;&gt;</operator> <literal type="number" pos:start="141:57" pos:end="141:58">12</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="149:5" pos:end="149:72">/* Make a mask from TLB size to discard invalid bits in EPN field */</comment>

    <expr_stmt pos:start="151:5" pos:end="151:54"><expr pos:start="151:5" pos:end="151:53"><name pos:start="151:5" pos:end="151:8">mask</name> <operator pos:start="151:10" pos:end="151:10">=</operator> <operator pos:start="151:12" pos:end="151:12">~</operator><operator pos:start="151:13" pos:end="151:13">(</operator><call pos:start="151:14" pos:end="151:48"><name pos:start="151:14" pos:end="151:38">booke206_tlb_to_page_size</name><argument_list pos:start="151:39" pos:end="151:48">(<argument pos:start="151:40" pos:end="151:42"><expr pos:start="151:40" pos:end="151:42"><name pos:start="151:40" pos:end="151:42">env</name></expr></argument>, <argument pos:start="151:45" pos:end="151:47"><expr pos:start="151:45" pos:end="151:47"><name pos:start="151:45" pos:end="151:47">tlb</name></expr></argument>)</argument_list></call> <operator pos:start="151:50" pos:end="151:50">-</operator> <literal type="number" pos:start="151:52" pos:end="151:52">1</literal><operator pos:start="151:53" pos:end="151:53">)</operator></expr>;</expr_stmt>

    <comment type="block" pos:start="153:5" pos:end="153:40">/* Add a mask for page attributes */</comment>

    <expr_stmt pos:start="155:5" pos:end="155:77"><expr pos:start="155:5" pos:end="155:76"><name pos:start="155:5" pos:end="155:8">mask</name> <operator pos:start="155:10" pos:end="155:11">|=</operator> <name pos:start="155:13" pos:end="155:20">MAS2_ACM</name> <operator pos:start="155:22" pos:end="155:22">|</operator> <name pos:start="155:24" pos:end="155:31">MAS2_VLE</name> <operator pos:start="155:33" pos:end="155:33">|</operator> <name pos:start="155:35" pos:end="155:40">MAS2_W</name> <operator pos:start="155:42" pos:end="155:42">|</operator> <name pos:start="155:44" pos:end="155:49">MAS2_I</name> <operator pos:start="155:51" pos:end="155:51">|</operator> <name pos:start="155:53" pos:end="155:58">MAS2_M</name> <operator pos:start="155:60" pos:end="155:60">|</operator> <name pos:start="155:62" pos:end="155:67">MAS2_G</name> <operator pos:start="155:69" pos:end="155:69">|</operator> <name pos:start="155:71" pos:end="155:76">MAS2_E</name></expr>;</expr_stmt>



    <if_stmt pos:start="159:5" pos:end="169:5"><if pos:start="159:5" pos:end="169:5">if <condition pos:start="159:8" pos:end="159:16">(<expr pos:start="159:9" pos:end="159:15"><operator pos:start="159:9" pos:end="159:9">!</operator><name pos:start="159:10" pos:end="159:15">msr_cm</name></expr>)</condition> <block pos:start="159:18" pos:end="169:5">{<block_content pos:start="167:9" pos:end="167:27">

        <comment type="block" pos:start="161:9" pos:end="165:11">/* Executing a tlbwe instruction in 32-bit mode will set

         * bits 0:31 of the TLB EPN field to zero.

         */</comment>

        <expr_stmt pos:start="167:9" pos:end="167:27"><expr pos:start="167:9" pos:end="167:26"><name pos:start="167:9" pos:end="167:12">mask</name> <operator pos:start="167:14" pos:end="167:15">&amp;=</operator> <literal type="number" pos:start="167:17" pos:end="167:26">0xffffffff</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="173:5" pos:end="173:48"><expr pos:start="173:5" pos:end="173:47"><name pos:start="173:5" pos:end="173:13"><name pos:start="173:5" pos:end="173:7">tlb</name><operator pos:start="173:8" pos:end="173:9">-&gt;</operator><name pos:start="173:10" pos:end="173:13">mas2</name></name> <operator pos:start="173:15" pos:end="173:15">=</operator> <name pos:start="173:17" pos:end="173:40"><name pos:start="173:17" pos:end="173:19">env</name><operator pos:start="173:20" pos:end="173:21">-&gt;</operator><name pos:start="173:22" pos:end="173:24">spr</name><index pos:start="173:25" pos:end="173:40">[<expr pos:start="173:26" pos:end="173:39"><name pos:start="173:26" pos:end="173:39">SPR_BOOKE_MAS2</name></expr>]</index></name> <operator pos:start="173:42" pos:end="173:42">&amp;</operator> <name pos:start="173:44" pos:end="173:47">mask</name></expr>;</expr_stmt>



    <if_stmt pos:start="177:5" pos:end="183:5"><if pos:start="177:5" pos:end="183:5">if <condition pos:start="177:8" pos:end="177:35">(<expr pos:start="177:9" pos:end="177:34"><operator pos:start="177:9" pos:end="177:9">!</operator><operator pos:start="177:10" pos:end="177:10">(</operator><name pos:start="177:11" pos:end="177:17">tlbncfg</name> <operator pos:start="177:19" pos:end="177:19">&amp;</operator> <name pos:start="177:21" pos:end="177:33">TLBnCFG_IPROT</name><operator pos:start="177:34" pos:end="177:34">)</operator></expr>)</condition> <block pos:start="177:37" pos:end="183:5">{<block_content pos:start="181:9" pos:end="181:33">

        <comment type="block" pos:start="179:9" pos:end="179:39">/* no IPROT supported by TLB */</comment>

        <expr_stmt pos:start="181:9" pos:end="181:33"><expr pos:start="181:9" pos:end="181:32"><name pos:start="181:9" pos:end="181:17"><name pos:start="181:9" pos:end="181:11">tlb</name><operator pos:start="181:12" pos:end="181:13">-&gt;</operator><name pos:start="181:14" pos:end="181:17">mas1</name></name> <operator pos:start="181:19" pos:end="181:20">&amp;=</operator> <operator pos:start="181:22" pos:end="181:22">~</operator><name pos:start="181:23" pos:end="181:32">MAS1_IPROT</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="187:5" pos:end="195:5"><if pos:start="187:5" pos:end="191:5">if <condition pos:start="187:8" pos:end="187:64">(<expr pos:start="187:9" pos:end="187:63"><call pos:start="187:9" pos:end="187:43"><name pos:start="187:9" pos:end="187:33">booke206_tlb_to_page_size</name><argument_list pos:start="187:34" pos:end="187:43">(<argument pos:start="187:35" pos:end="187:37"><expr pos:start="187:35" pos:end="187:37"><name pos:start="187:35" pos:end="187:37">env</name></expr></argument>, <argument pos:start="187:40" pos:end="187:42"><expr pos:start="187:40" pos:end="187:42"><name pos:start="187:40" pos:end="187:42">tlb</name></expr></argument>)</argument_list></call> <operator pos:start="187:45" pos:end="187:46">==</operator> <name pos:start="187:48" pos:end="187:63">TARGET_PAGE_SIZE</name></expr>)</condition> <block pos:start="187:66" pos:end="191:5">{<block_content pos:start="189:9" pos:end="189:60">

        <expr_stmt pos:start="189:9" pos:end="189:60"><expr pos:start="189:9" pos:end="189:59"><call pos:start="189:9" pos:end="189:59"><name pos:start="189:9" pos:end="189:22">tlb_flush_page</name><argument_list pos:start="189:23" pos:end="189:59">(<argument pos:start="189:24" pos:end="189:31"><expr pos:start="189:24" pos:end="189:31"><call pos:start="189:24" pos:end="189:31"><name pos:start="189:24" pos:end="189:26">CPU</name><argument_list pos:start="189:27" pos:end="189:31">(<argument pos:start="189:28" pos:end="189:30"><expr pos:start="189:28" pos:end="189:30"><name pos:start="189:28" pos:end="189:30">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="189:34" pos:end="189:58"><expr pos:start="189:34" pos:end="189:58"><name pos:start="189:34" pos:end="189:42"><name pos:start="189:34" pos:end="189:36">tlb</name><operator pos:start="189:37" pos:end="189:38">-&gt;</operator><name pos:start="189:39" pos:end="189:42">mas2</name></name> <operator pos:start="189:44" pos:end="189:44">&amp;</operator> <name pos:start="189:46" pos:end="189:58">MAS2_EPN_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="191:7" pos:end="195:5">else <block pos:start="191:12" pos:end="195:5">{<block_content pos:start="193:9" pos:end="193:28">

        <expr_stmt pos:start="193:9" pos:end="193:28"><expr pos:start="193:9" pos:end="193:27"><call pos:start="193:9" pos:end="193:27"><name pos:start="193:9" pos:end="193:17">tlb_flush</name><argument_list pos:start="193:18" pos:end="193:27">(<argument pos:start="193:19" pos:end="193:26"><expr pos:start="193:19" pos:end="193:26"><call pos:start="193:19" pos:end="193:26"><name pos:start="193:19" pos:end="193:21">CPU</name><argument_list pos:start="193:22" pos:end="193:26">(<argument pos:start="193:23" pos:end="193:25"><expr pos:start="193:23" pos:end="193:25"><name pos:start="193:23" pos:end="193:25">cpu</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
