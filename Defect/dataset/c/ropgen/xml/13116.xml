<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13116.c" pos:tabs="8"><function pos:start="1:1" pos:end="135:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:35">coupling_strategy</name><parameter_list pos:start="1:36" pos:end="3:62">(<parameter pos:start="1:37" pos:end="1:55"><decl pos:start="1:37" pos:end="1:55"><type pos:start="1:37" pos:end="1:55"><name pos:start="1:37" pos:end="1:52">AC3DecodeContext</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:55">s</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:64"><decl pos:start="1:58" pos:end="1:64"><type pos:start="1:58" pos:end="1:64"><name pos:start="1:58" pos:end="1:60">int</name></type> <name pos:start="1:62" pos:end="1:64">blk</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:61"><decl pos:start="3:37" pos:end="3:61"><type pos:start="3:37" pos:end="3:61"><name pos:start="3:37" pos:end="3:43">uint8_t</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:61">bit_alloc_stages</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="135:1">{<block_content pos:start="7:5" pos:end="133:13">

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">GetBitContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">bc</name> <init pos:start="7:23" pos:end="7:31">= <expr pos:start="7:25" pos:end="7:31"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:31"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:31">gbc</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:38"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:20">fbw_channels</name> <init pos:start="9:22" pos:end="9:38">= <expr pos:start="9:24" pos:end="9:38"><name pos:start="9:24" pos:end="9:38"><name pos:start="9:24" pos:end="9:24">s</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:38">fbw_channels</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:39"><decl pos:start="11:5" pos:end="11:38"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:20">channel_mode</name> <init pos:start="11:22" pos:end="11:38">= <expr pos:start="11:24" pos:end="11:38"><name pos:start="11:24" pos:end="11:38"><name pos:start="11:24" pos:end="11:24">s</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:38">channel_mode</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:11"><decl pos:start="13:5" pos:end="13:10"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:10">ch</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:50"><expr pos:start="17:5" pos:end="17:49"><call pos:start="17:5" pos:end="17:49"><name pos:start="17:5" pos:end="17:10">memset</name><argument_list pos:start="17:11" pos:end="17:49">(<argument pos:start="17:12" pos:end="17:27"><expr pos:start="17:12" pos:end="17:27"><name pos:start="17:12" pos:end="17:27">bit_alloc_stages</name></expr></argument>, <argument pos:start="17:30" pos:end="17:30"><expr pos:start="17:30" pos:end="17:30"><literal type="number" pos:start="17:30" pos:end="17:30">3</literal></expr></argument>, <argument pos:start="17:33" pos:end="17:48"><expr pos:start="17:33" pos:end="17:48"><name pos:start="17:33" pos:end="17:48">AC3_MAX_CHANNELS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="21:43"><if pos:start="19:5" pos:end="21:43">if <condition pos:start="19:8" pos:end="19:17">(<expr pos:start="19:9" pos:end="19:16"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:16"><name pos:start="19:10" pos:end="19:10">s</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:16">eac3</name></name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:43"><block_content pos:start="21:9" pos:end="21:43">

        <expr_stmt pos:start="21:9" pos:end="21:43"><expr pos:start="21:9" pos:end="21:42"><name pos:start="21:9" pos:end="21:26"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:21">cpl_in_use</name><index pos:start="21:22" pos:end="21:26">[<expr pos:start="21:23" pos:end="21:25"><name pos:start="21:23" pos:end="21:25">blk</name></expr>]</index></name> <operator pos:start="21:28" pos:end="21:28">=</operator> <call pos:start="21:30" pos:end="21:42"><name pos:start="21:30" pos:end="21:38">get_bits1</name><argument_list pos:start="21:39" pos:end="21:42">(<argument pos:start="21:40" pos:end="21:41"><expr pos:start="21:40" pos:end="21:41"><name pos:start="21:40" pos:end="21:41">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="23:5" pos:end="129:5"><if pos:start="23:5" pos:end="113:5">if <condition pos:start="23:8" pos:end="23:27">(<expr pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:21">cpl_in_use</name><index pos:start="23:22" pos:end="23:26">[<expr pos:start="23:23" pos:end="23:25"><name pos:start="23:23" pos:end="23:25">blk</name></expr>]</index></name></expr>)</condition> <block pos:start="23:29" pos:end="113:5">{<block_content pos:start="27:9" pos:end="111:68">

        <comment type="block" pos:start="25:9" pos:end="25:29">/* coupling in use */</comment>

        <decl_stmt pos:start="27:9" pos:end="27:47"><decl pos:start="27:9" pos:end="27:29"><type pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:11">int</name></type> <name pos:start="27:13" pos:end="27:29">cpl_start_subband</name></decl>, <decl pos:start="27:32" pos:end="27:46"><type ref="prev" pos:start="27:9" pos:end="27:11"/><name pos:start="27:32" pos:end="27:46">cpl_end_subband</name></decl>;</decl_stmt>



        <if_stmt pos:start="31:9" pos:end="37:9"><if pos:start="31:9" pos:end="37:9">if <condition pos:start="31:12" pos:end="31:45">(<expr pos:start="31:13" pos:end="31:44"><name pos:start="31:13" pos:end="31:24">channel_mode</name> <operator pos:start="31:26" pos:end="31:26">&lt;</operator> <name pos:start="31:28" pos:end="31:44">AC3_CHMODE_STEREO</name></expr>)</condition> <block pos:start="31:47" pos:end="37:9">{<block_content pos:start="33:13" pos:end="35:39">

            <expr_stmt pos:start="33:13" pos:end="33:90"><expr pos:start="33:13" pos:end="33:89"><call pos:start="33:13" pos:end="33:89"><name pos:start="33:13" pos:end="33:18">av_log</name><argument_list pos:start="33:19" pos:end="33:89">(<argument pos:start="33:20" pos:end="33:27"><expr pos:start="33:20" pos:end="33:27"><name pos:start="33:20" pos:end="33:27"><name pos:start="33:20" pos:end="33:20">s</name><operator pos:start="33:21" pos:end="33:22">-&gt;</operator><name pos:start="33:23" pos:end="33:27">avctx</name></name></expr></argument>, <argument pos:start="33:30" pos:end="33:41"><expr pos:start="33:30" pos:end="33:41"><name pos:start="33:30" pos:end="33:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:44" pos:end="33:88"><expr pos:start="33:44" pos:end="33:88"><literal type="string" pos:start="33:44" pos:end="33:88">"coupling not allowed in mono or dual-mono\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="35:13" pos:end="35:39">return <expr pos:start="35:20" pos:end="35:38"><name pos:start="35:20" pos:end="35:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="41:9" pos:end="41:41">/* check for enhanced coupling */</comment>

        <if_stmt pos:start="43:9" pos:end="51:9"><if pos:start="43:9" pos:end="51:9">if <condition pos:start="43:12" pos:end="43:37">(<expr pos:start="43:13" pos:end="43:36"><name pos:start="43:13" pos:end="43:19"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:19">eac3</name></name> <operator pos:start="43:21" pos:end="43:22">&amp;&amp;</operator> <call pos:start="43:24" pos:end="43:36"><name pos:start="43:24" pos:end="43:32">get_bits1</name><argument_list pos:start="43:33" pos:end="43:36">(<argument pos:start="43:34" pos:end="43:35"><expr pos:start="43:34" pos:end="43:35"><name pos:start="43:34" pos:end="43:35">bc</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:39" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:40">

            <comment type="block" pos:start="45:13" pos:end="45:61">/* TODO: parse enhanced coupling strategy info */</comment>

            <expr_stmt pos:start="47:13" pos:end="47:65"><expr pos:start="47:13" pos:end="47:64"><call pos:start="47:13" pos:end="47:64"><name pos:start="47:13" pos:end="47:33">avpriv_request_sample</name><argument_list pos:start="47:34" pos:end="47:64">(<argument pos:start="47:35" pos:end="47:42"><expr pos:start="47:35" pos:end="47:42"><name pos:start="47:35" pos:end="47:42"><name pos:start="47:35" pos:end="47:35">s</name><operator pos:start="47:36" pos:end="47:37">-&gt;</operator><name pos:start="47:38" pos:end="47:42">avctx</name></name></expr></argument>, <argument pos:start="47:45" pos:end="47:63"><expr pos:start="47:45" pos:end="47:63"><literal type="string" pos:start="47:45" pos:end="47:63">"Enhanced coupling"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="49:13" pos:end="49:40">return <expr pos:start="49:20" pos:end="49:39"><name pos:start="49:20" pos:end="49:39">AVERROR_PATCHWELCOME</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="55:9" pos:end="55:50">/* determine which channels are coupled */</comment>

        <if_stmt pos:start="57:9" pos:end="69:9"><if pos:start="57:9" pos:end="63:9">if <condition pos:start="57:12" pos:end="57:60">(<expr pos:start="57:13" pos:end="57:59"><name pos:start="57:13" pos:end="57:19"><name pos:start="57:13" pos:end="57:13">s</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:19">eac3</name></name> <operator pos:start="57:21" pos:end="57:22">&amp;&amp;</operator> <name pos:start="57:24" pos:end="57:38"><name pos:start="57:24" pos:end="57:24">s</name><operator pos:start="57:25" pos:end="57:26">-&gt;</operator><name pos:start="57:27" pos:end="57:38">channel_mode</name></name> <operator pos:start="57:40" pos:end="57:41">==</operator> <name pos:start="57:43" pos:end="57:59">AC3_CHMODE_STEREO</name></expr>)</condition> <block pos:start="57:62" pos:end="63:9">{<block_content pos:start="59:13" pos:end="61:37">

            <expr_stmt pos:start="59:13" pos:end="59:37"><expr pos:start="59:13" pos:end="59:36"><name pos:start="59:13" pos:end="59:32"><name pos:start="59:13" pos:end="59:13">s</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:29">channel_in_cpl</name><index pos:start="59:30" pos:end="59:32">[<expr pos:start="59:31" pos:end="59:31"><literal type="number" pos:start="59:31" pos:end="59:31">1</literal></expr>]</index></name> <operator pos:start="59:34" pos:end="59:34">=</operator> <literal type="number" pos:start="59:36" pos:end="59:36">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:37"><expr pos:start="61:13" pos:end="61:36"><name pos:start="61:13" pos:end="61:32"><name pos:start="61:13" pos:end="61:13">s</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:29">channel_in_cpl</name><index pos:start="61:30" pos:end="61:32">[<expr pos:start="61:31" pos:end="61:31"><literal type="number" pos:start="61:31" pos:end="61:31">2</literal></expr>]</index></name> <operator pos:start="61:34" pos:end="61:34">=</operator> <literal type="number" pos:start="61:36" pos:end="61:36">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="63:11" pos:end="69:9">else <block pos:start="63:16" pos:end="69:9">{<block_content pos:start="65:13" pos:end="67:54">

            <for pos:start="65:13" pos:end="67:54">for <control pos:start="65:17" pos:end="65:50">(<init pos:start="65:18" pos:end="65:24"><expr pos:start="65:18" pos:end="65:23"><name pos:start="65:18" pos:end="65:19">ch</name> <operator pos:start="65:21" pos:end="65:21">=</operator> <literal type="number" pos:start="65:23" pos:end="65:23">1</literal></expr>;</init> <condition pos:start="65:26" pos:end="65:44"><expr pos:start="65:26" pos:end="65:43"><name pos:start="65:26" pos:end="65:27">ch</name> <operator pos:start="65:29" pos:end="65:30">&lt;=</operator> <name pos:start="65:32" pos:end="65:43">fbw_channels</name></expr>;</condition> <incr pos:start="65:46" pos:end="65:49"><expr pos:start="65:46" pos:end="65:49"><name pos:start="65:46" pos:end="65:47">ch</name><operator pos:start="65:48" pos:end="65:49">++</operator></expr></incr>)</control><block type="pseudo" pos:start="67:17" pos:end="67:54"><block_content pos:start="67:17" pos:end="67:54">

                <expr_stmt pos:start="67:17" pos:end="67:54"><expr pos:start="67:17" pos:end="67:53"><name pos:start="67:17" pos:end="67:37"><name pos:start="67:17" pos:end="67:17">s</name><operator pos:start="67:18" pos:end="67:19">-&gt;</operator><name pos:start="67:20" pos:end="67:33">channel_in_cpl</name><index pos:start="67:34" pos:end="67:37">[<expr pos:start="67:35" pos:end="67:36"><name pos:start="67:35" pos:end="67:36">ch</name></expr>]</index></name> <operator pos:start="67:39" pos:end="67:39">=</operator> <call pos:start="67:41" pos:end="67:53"><name pos:start="67:41" pos:end="67:49">get_bits1</name><argument_list pos:start="67:50" pos:end="67:53">(<argument pos:start="67:51" pos:end="67:52"><expr pos:start="67:51" pos:end="67:52"><name pos:start="67:51" pos:end="67:52">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></else></if_stmt>



        <comment type="block" pos:start="73:9" pos:end="73:32">/* phase flags in use */</comment>

        <if_stmt pos:start="75:9" pos:end="77:50"><if pos:start="75:9" pos:end="77:50">if <condition pos:start="75:12" pos:end="75:46">(<expr pos:start="75:13" pos:end="75:45"><name pos:start="75:13" pos:end="75:24">channel_mode</name> <operator pos:start="75:26" pos:end="75:27">==</operator> <name pos:start="75:29" pos:end="75:45">AC3_CHMODE_STEREO</name></expr>)</condition><block type="pseudo" pos:start="77:13" pos:end="77:50"><block_content pos:start="77:13" pos:end="77:50">

            <expr_stmt pos:start="77:13" pos:end="77:50"><expr pos:start="77:13" pos:end="77:49"><name pos:start="77:13" pos:end="77:33"><name pos:start="77:13" pos:end="77:13">s</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:33">phase_flags_in_use</name></name> <operator pos:start="77:35" pos:end="77:35">=</operator> <call pos:start="77:37" pos:end="77:49"><name pos:start="77:37" pos:end="77:45">get_bits1</name><argument_list pos:start="77:46" pos:end="77:49">(<argument pos:start="77:47" pos:end="77:48"><expr pos:start="77:47" pos:end="77:48"><name pos:start="77:47" pos:end="77:48">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <comment type="block" pos:start="81:9" pos:end="81:38">/* coupling frequency range */</comment>

        <expr_stmt pos:start="83:9" pos:end="83:44"><expr pos:start="83:9" pos:end="83:43"><name pos:start="83:9" pos:end="83:25">cpl_start_subband</name> <operator pos:start="83:27" pos:end="83:27">=</operator> <call pos:start="83:29" pos:end="83:43"><name pos:start="83:29" pos:end="83:36">get_bits</name><argument_list pos:start="83:37" pos:end="83:43">(<argument pos:start="83:38" pos:end="83:39"><expr pos:start="83:38" pos:end="83:39"><name pos:start="83:38" pos:end="83:39">bc</name></expr></argument>, <argument pos:start="83:42" pos:end="83:42"><expr pos:start="83:42" pos:end="83:42"><literal type="number" pos:start="83:42" pos:end="83:42">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="87:62"><expr pos:start="85:9" pos:end="87:61"><name pos:start="85:9" pos:end="85:23">cpl_end_subband</name> <operator pos:start="85:25" pos:end="85:25">=</operator> <ternary pos:start="85:27" pos:end="87:61"><condition pos:start="85:27" pos:end="85:41"><expr pos:start="85:27" pos:end="85:39"><name pos:start="85:27" pos:end="85:39"><name pos:start="85:27" pos:end="85:27">s</name><operator pos:start="85:28" pos:end="85:29">-&gt;</operator><name pos:start="85:30" pos:end="85:39">spx_in_use</name></name></expr> ?</condition><then pos:start="85:43" pos:end="85:75"> <expr pos:start="85:43" pos:end="85:75"><operator pos:start="85:43" pos:end="85:43">(</operator><name pos:start="85:44" pos:end="85:64"><name pos:start="85:44" pos:end="85:44">s</name><operator pos:start="85:45" pos:end="85:46">-&gt;</operator><name pos:start="85:47" pos:end="85:64">spx_src_start_freq</name></name> <operator pos:start="85:66" pos:end="85:66">-</operator> <literal type="number" pos:start="85:68" pos:end="85:69">37</literal><operator pos:start="85:70" pos:end="85:70">)</operator> <operator pos:start="85:72" pos:end="85:72">/</operator> <literal type="number" pos:start="85:74" pos:end="85:75">12</literal></expr> </then><else pos:start="85:77" pos:end="87:61">:

                                          <expr pos:start="87:43" pos:end="87:61"><call pos:start="87:43" pos:end="87:57"><name pos:start="87:43" pos:end="87:50">get_bits</name><argument_list pos:start="87:51" pos:end="87:57">(<argument pos:start="87:52" pos:end="87:53"><expr pos:start="87:52" pos:end="87:53"><name pos:start="87:52" pos:end="87:53">bc</name></expr></argument>, <argument pos:start="87:56" pos:end="87:56"><expr pos:start="87:56" pos:end="87:56"><literal type="number" pos:start="87:56" pos:end="87:56">4</literal></expr></argument>)</argument_list></call> <operator pos:start="87:59" pos:end="87:59">+</operator> <literal type="number" pos:start="87:61" pos:end="87:61">3</literal></expr></else></ternary></expr>;</expr_stmt>

        <if_stmt pos:start="89:9" pos:end="97:9"><if pos:start="89:9" pos:end="97:9">if <condition pos:start="89:12" pos:end="89:49">(<expr pos:start="89:13" pos:end="89:48"><name pos:start="89:13" pos:end="89:29">cpl_start_subband</name> <operator pos:start="89:31" pos:end="89:32">&gt;=</operator> <name pos:start="89:34" pos:end="89:48">cpl_end_subband</name></expr>)</condition> <block pos:start="89:51" pos:end="97:9">{<block_content pos:start="91:13" pos:end="95:39">

            <expr_stmt pos:start="91:13" pos:end="93:55"><expr pos:start="91:13" pos:end="93:54"><call pos:start="91:13" pos:end="93:54"><name pos:start="91:13" pos:end="91:18">av_log</name><argument_list pos:start="91:19" pos:end="93:54">(<argument pos:start="91:20" pos:end="91:27"><expr pos:start="91:20" pos:end="91:27"><name pos:start="91:20" pos:end="91:27"><name pos:start="91:20" pos:end="91:20">s</name><operator pos:start="91:21" pos:end="91:22">-&gt;</operator><name pos:start="91:23" pos:end="91:27">avctx</name></name></expr></argument>, <argument pos:start="91:30" pos:end="91:41"><expr pos:start="91:30" pos:end="91:41"><name pos:start="91:30" pos:end="91:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="91:44" pos:end="91:80"><expr pos:start="91:44" pos:end="91:80"><literal type="string" pos:start="91:44" pos:end="91:80">"invalid coupling range (%d &gt;= %d)\n"</literal></expr></argument>,

                   <argument pos:start="93:20" pos:end="93:36"><expr pos:start="93:20" pos:end="93:36"><name pos:start="93:20" pos:end="93:36">cpl_start_subband</name></expr></argument>, <argument pos:start="93:39" pos:end="93:53"><expr pos:start="93:39" pos:end="93:53"><name pos:start="93:39" pos:end="93:53">cpl_end_subband</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="95:13" pos:end="95:39">return <expr pos:start="95:20" pos:end="95:38"><name pos:start="95:20" pos:end="95:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:60"><expr pos:start="99:9" pos:end="99:59"><name pos:start="99:9" pos:end="99:29"><name pos:start="99:9" pos:end="99:9">s</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:21">start_freq</name><index pos:start="99:22" pos:end="99:29">[<expr pos:start="99:23" pos:end="99:28"><name pos:start="99:23" pos:end="99:28">CPL_CH</name></expr>]</index></name> <operator pos:start="99:31" pos:end="99:31">=</operator> <name pos:start="99:33" pos:end="99:49">cpl_start_subband</name> <operator pos:start="99:51" pos:end="99:51">*</operator> <literal type="number" pos:start="99:53" pos:end="99:56">12</literal> <operator pos:start="99:56" pos:end="99:56">+</operator> <literal type="number" pos:start="99:58" pos:end="99:59">37</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:60"><expr pos:start="101:9" pos:end="101:59"><name pos:start="101:9" pos:end="101:27"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:19">end_freq</name><index pos:start="101:20" pos:end="101:27">[<expr pos:start="101:21" pos:end="101:26"><name pos:start="101:21" pos:end="101:26">CPL_CH</name></expr>]</index></name>   <operator pos:start="101:31" pos:end="101:31">=</operator> <name pos:start="101:33" pos:end="101:47">cpl_end_subband</name>   <operator pos:start="101:51" pos:end="101:51">*</operator> <literal type="number" pos:start="101:53" pos:end="101:56">12</literal> <operator pos:start="101:56" pos:end="101:56">+</operator> <literal type="number" pos:start="101:58" pos:end="101:59">37</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="105:9" pos:end="111:68"><expr pos:start="105:9" pos:end="111:67"><call pos:start="105:9" pos:end="111:67"><name pos:start="105:9" pos:end="105:29">decode_band_structure</name><argument_list pos:start="105:30" pos:end="111:67">(<argument pos:start="105:31" pos:end="105:32"><expr pos:start="105:31" pos:end="105:32"><name pos:start="105:31" pos:end="105:32">bc</name></expr></argument>, <argument pos:start="105:35" pos:end="105:37"><expr pos:start="105:35" pos:end="105:37"><name pos:start="105:35" pos:end="105:37">blk</name></expr></argument>, <argument pos:start="105:40" pos:end="105:46"><expr pos:start="105:40" pos:end="105:46"><name pos:start="105:40" pos:end="105:46"><name pos:start="105:40" pos:end="105:40">s</name><operator pos:start="105:41" pos:end="105:42">-&gt;</operator><name pos:start="105:43" pos:end="105:46">eac3</name></name></expr></argument>, <argument pos:start="105:49" pos:end="105:49"><expr pos:start="105:49" pos:end="105:49"><literal type="number" pos:start="105:49" pos:end="105:49">0</literal></expr></argument>, <argument pos:start="105:52" pos:end="105:68"><expr pos:start="105:52" pos:end="105:68"><name pos:start="105:52" pos:end="105:68">cpl_start_subband</name></expr></argument>,

                              <argument pos:start="107:31" pos:end="107:45"><expr pos:start="107:31" pos:end="107:45"><name pos:start="107:31" pos:end="107:45">cpl_end_subband</name></expr></argument>,

                              <argument pos:start="109:31" pos:end="109:61"><expr pos:start="109:31" pos:end="109:61"><name pos:start="109:31" pos:end="109:61">ff_eac3_default_cpl_band_struct</name></expr></argument>,

                              <argument pos:start="111:31" pos:end="111:47"><expr pos:start="111:31" pos:end="111:47"><operator pos:start="111:31" pos:end="111:31">&amp;</operator><name pos:start="111:32" pos:end="111:47"><name pos:start="111:32" pos:end="111:32">s</name><operator pos:start="111:33" pos:end="111:34">-&gt;</operator><name pos:start="111:35" pos:end="111:47">num_cpl_bands</name></name></expr></argument>, <argument pos:start="111:50" pos:end="111:66"><expr pos:start="111:50" pos:end="111:66"><name pos:start="111:50" pos:end="111:66"><name pos:start="111:50" pos:end="111:50">s</name><operator pos:start="111:51" pos:end="111:52">-&gt;</operator><name pos:start="111:53" pos:end="111:66">cpl_band_sizes</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="113:7" pos:end="129:5">else <block pos:start="113:12" pos:end="129:5">{<block_content pos:start="117:9" pos:end="127:34">

        <comment type="block" pos:start="115:9" pos:end="115:33">/* coupling not in use */</comment>

        <for pos:start="117:9" pos:end="123:9">for <control pos:start="117:13" pos:end="117:46">(<init pos:start="117:14" pos:end="117:20"><expr pos:start="117:14" pos:end="117:19"><name pos:start="117:14" pos:end="117:15">ch</name> <operator pos:start="117:17" pos:end="117:17">=</operator> <literal type="number" pos:start="117:19" pos:end="117:19">1</literal></expr>;</init> <condition pos:start="117:22" pos:end="117:40"><expr pos:start="117:22" pos:end="117:39"><name pos:start="117:22" pos:end="117:23">ch</name> <operator pos:start="117:25" pos:end="117:26">&lt;=</operator> <name pos:start="117:28" pos:end="117:39">fbw_channels</name></expr>;</condition> <incr pos:start="117:42" pos:end="117:45"><expr pos:start="117:42" pos:end="117:45"><name pos:start="117:42" pos:end="117:43">ch</name><operator pos:start="117:44" pos:end="117:45">++</operator></expr></incr>)</control> <block pos:start="117:48" pos:end="123:9">{<block_content pos:start="119:13" pos:end="121:40">

            <expr_stmt pos:start="119:13" pos:end="119:38"><expr pos:start="119:13" pos:end="119:37"><name pos:start="119:13" pos:end="119:33"><name pos:start="119:13" pos:end="119:13">s</name><operator pos:start="119:14" pos:end="119:15">-&gt;</operator><name pos:start="119:16" pos:end="119:29">channel_in_cpl</name><index pos:start="119:30" pos:end="119:33">[<expr pos:start="119:31" pos:end="119:32"><name pos:start="119:31" pos:end="119:32">ch</name></expr>]</index></name> <operator pos:start="119:35" pos:end="119:35">=</operator> <literal type="number" pos:start="119:37" pos:end="119:37">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:40"><expr pos:start="121:13" pos:end="121:39"><name pos:start="121:13" pos:end="121:35"><name pos:start="121:13" pos:end="121:13">s</name><operator pos:start="121:14" pos:end="121:15">-&gt;</operator><name pos:start="121:16" pos:end="121:31">first_cpl_coords</name><index pos:start="121:32" pos:end="121:35">[<expr pos:start="121:33" pos:end="121:34"><name pos:start="121:33" pos:end="121:34">ch</name></expr>]</index></name> <operator pos:start="121:37" pos:end="121:37">=</operator> <literal type="number" pos:start="121:39" pos:end="121:39">1</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="125:9" pos:end="125:36"><expr pos:start="125:9" pos:end="125:35"><name pos:start="125:9" pos:end="125:25"><name pos:start="125:9" pos:end="125:9">s</name><operator pos:start="125:10" pos:end="125:11">-&gt;</operator><name pos:start="125:12" pos:end="125:25">first_cpl_leak</name></name> <operator pos:start="125:27" pos:end="125:27">=</operator> <name pos:start="125:29" pos:end="125:35"><name pos:start="125:29" pos:end="125:29">s</name><operator pos:start="125:30" pos:end="125:31">-&gt;</operator><name pos:start="125:32" pos:end="125:35">eac3</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:34"><expr pos:start="127:9" pos:end="127:33"><name pos:start="127:9" pos:end="127:29"><name pos:start="127:9" pos:end="127:9">s</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:29">phase_flags_in_use</name></name> <operator pos:start="127:31" pos:end="127:31">=</operator> <literal type="number" pos:start="127:33" pos:end="127:33">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="133:5" pos:end="133:13">return <expr pos:start="133:12" pos:end="133:12"><literal type="number" pos:start="133:12" pos:end="133:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
