<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2750.c" pos:tabs="8"><function pos:start="1:1" pos:end="175:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:32">mpeg1_encode_picture_header</name><parameter_list pos:start="1:33" pos:end="1:71">(<parameter pos:start="1:34" pos:end="1:50"><decl pos:start="1:34" pos:end="1:50"><type pos:start="1:34" pos:end="1:50"><name pos:start="1:34" pos:end="1:47">MpegEncContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">s</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:70"><decl pos:start="1:53" pos:end="1:70"><type pos:start="1:53" pos:end="1:70"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:70">picture_number</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="175:1">{<block_content pos:start="5:5" pos:end="173:36">

    <expr_stmt pos:start="5:5" pos:end="5:36"><expr pos:start="5:5" pos:end="5:35"><call pos:start="5:5" pos:end="5:35"><name pos:start="5:5" pos:end="5:32">mpeg1_encode_sequence_header</name><argument_list pos:start="5:33" pos:end="5:35">(<argument pos:start="5:34" pos:end="5:34"><expr pos:start="5:34" pos:end="5:34"><name pos:start="5:34" pos:end="5:34">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="9:5" pos:end="9:30">/* mpeg1 picture header */</comment>

    <expr_stmt pos:start="11:5" pos:end="11:38"><expr pos:start="11:5" pos:end="11:37"><call pos:start="11:5" pos:end="11:37"><name pos:start="11:5" pos:end="11:14">put_header</name><argument_list pos:start="11:15" pos:end="11:37">(<argument pos:start="11:16" pos:end="11:16"><expr pos:start="11:16" pos:end="11:16"><name pos:start="11:16" pos:end="11:16">s</name></expr></argument>, <argument pos:start="11:19" pos:end="11:36"><expr pos:start="11:19" pos:end="11:36"><name pos:start="11:19" pos:end="11:36">PICTURE_START_CODE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="13:5" pos:end="13:28">/* temporal reference */</comment>



    <comment type="line" pos:start="17:5" pos:end="17:63">// RAL: s-&gt;picture_number instead of s-&gt;fake_picture_number</comment>

    <expr_stmt pos:start="19:5" pos:end="21:58"><expr pos:start="19:5" pos:end="21:57"><call pos:start="19:5" pos:end="21:57"><name pos:start="19:5" pos:end="19:12">put_bits</name><argument_list pos:start="19:13" pos:end="21:57">(<argument pos:start="19:14" pos:end="19:19"><expr pos:start="19:14" pos:end="19:19"><operator pos:start="19:14" pos:end="19:14">&amp;</operator><name pos:start="19:15" pos:end="19:19"><name pos:start="19:15" pos:end="19:15">s</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:19">pb</name></name></expr></argument>, <argument pos:start="19:22" pos:end="19:23"><expr pos:start="19:22" pos:end="19:23"><literal type="number" pos:start="19:22" pos:end="19:23">10</literal></expr></argument>, <argument pos:start="19:26" pos:end="21:56"><expr pos:start="19:26" pos:end="21:56"><operator pos:start="19:26" pos:end="19:26">(</operator><name pos:start="19:27" pos:end="19:43"><name pos:start="19:27" pos:end="19:27">s</name><operator pos:start="19:28" pos:end="19:29">-&gt;</operator><name pos:start="19:30" pos:end="19:43">picture_number</name></name> <operator pos:start="19:45" pos:end="19:45">-</operator> 

                          <name pos:start="21:27" pos:end="21:47"><name pos:start="21:27" pos:end="21:27">s</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:47">gop_picture_number</name></name><operator pos:start="21:48" pos:end="21:48">)</operator> <operator pos:start="21:50" pos:end="21:50">&amp;</operator> <literal type="number" pos:start="21:52" pos:end="21:56">0x3ff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

    <expr_stmt pos:start="23:5" pos:end="23:29"><expr pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:26"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:26">fake_picture_number</name></name><operator pos:start="23:27" pos:end="23:28">++</operator></expr>;</expr_stmt>

    

    <expr_stmt pos:start="27:5" pos:end="27:38"><expr pos:start="27:5" pos:end="27:37"><call pos:start="27:5" pos:end="27:37"><name pos:start="27:5" pos:end="27:12">put_bits</name><argument_list pos:start="27:13" pos:end="27:37">(<argument pos:start="27:14" pos:end="27:19"><expr pos:start="27:14" pos:end="27:19"><operator pos:start="27:14" pos:end="27:14">&amp;</operator><name pos:start="27:15" pos:end="27:19"><name pos:start="27:15" pos:end="27:15">s</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:19">pb</name></name></expr></argument>, <argument pos:start="27:22" pos:end="27:22"><expr pos:start="27:22" pos:end="27:22"><literal type="number" pos:start="27:22" pos:end="27:22">3</literal></expr></argument>, <argument pos:start="27:25" pos:end="27:36"><expr pos:start="27:25" pos:end="27:36"><name pos:start="27:25" pos:end="27:36"><name pos:start="27:25" pos:end="27:25">s</name><operator pos:start="27:26" pos:end="27:27">-&gt;</operator><name pos:start="27:28" pos:end="27:36">pict_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:58"><expr pos:start="31:5" pos:end="31:57"><name pos:start="31:5" pos:end="31:20"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:20">vbv_delay_ptr</name></name><operator pos:start="31:21" pos:end="31:21">=</operator> <name pos:start="31:23" pos:end="31:31"><name pos:start="31:23" pos:end="31:23">s</name><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:27">pb</name><operator pos:start="31:28" pos:end="31:28">.</operator><name pos:start="31:29" pos:end="31:31">buf</name></name> <operator pos:start="31:33" pos:end="31:33">+</operator> <call pos:start="31:35" pos:end="31:55"><name pos:start="31:35" pos:end="31:47">get_bit_count</name><argument_list pos:start="31:48" pos:end="31:55">(<argument pos:start="31:49" pos:end="31:54"><expr pos:start="31:49" pos:end="31:54"><operator pos:start="31:49" pos:end="31:49">&amp;</operator><name pos:start="31:50" pos:end="31:54"><name pos:start="31:50" pos:end="31:50">s</name><operator pos:start="31:51" pos:end="31:52">-&gt;</operator><name pos:start="31:53" pos:end="31:54">pb</name></name></expr></argument>)</argument_list></call><operator pos:start="31:56" pos:end="31:56">/</operator><literal type="number" pos:start="31:57" pos:end="31:57">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:33"><expr pos:start="33:5" pos:end="33:32"><call pos:start="33:5" pos:end="33:32"><name pos:start="33:5" pos:end="33:12">put_bits</name><argument_list pos:start="33:13" pos:end="33:32">(<argument pos:start="33:14" pos:end="33:19"><expr pos:start="33:14" pos:end="33:19"><operator pos:start="33:14" pos:end="33:14">&amp;</operator><name pos:start="33:15" pos:end="33:19"><name pos:start="33:15" pos:end="33:15">s</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:19">pb</name></name></expr></argument>, <argument pos:start="33:22" pos:end="33:23"><expr pos:start="33:22" pos:end="33:23"><literal type="number" pos:start="33:22" pos:end="33:23">16</literal></expr></argument>, <argument pos:start="33:26" pos:end="33:31"><expr pos:start="33:26" pos:end="33:31"><literal type="number" pos:start="33:26" pos:end="33:31">0xFFFF</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="33:35" pos:end="33:49">/* vbv_delay */</comment>

    

    <comment type="line" pos:start="37:5" pos:end="37:51">// RAL: Forward f_code also needed for B frames</comment>

    <if_stmt pos:start="39:5" pos:end="51:5"><if pos:start="39:5" pos:end="51:5">if <condition pos:start="39:8" pos:end="39:57">(<expr pos:start="39:9" pos:end="39:56"><name pos:start="39:9" pos:end="39:20"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:20">pict_type</name></name> <operator pos:start="39:22" pos:end="39:23">==</operator> <name pos:start="39:25" pos:end="39:30">P_TYPE</name> <operator pos:start="39:32" pos:end="39:33">||</operator> <name pos:start="39:35" pos:end="39:46"><name pos:start="39:35" pos:end="39:35">s</name><operator pos:start="39:36" pos:end="39:37">-&gt;</operator><name pos:start="39:38" pos:end="39:46">pict_type</name></name> <operator pos:start="39:48" pos:end="39:49">==</operator> <name pos:start="39:51" pos:end="39:56">B_TYPE</name></expr>)</condition> <block pos:start="39:59" pos:end="51:5">{<block_content pos:start="41:9" pos:end="49:35">

        <expr_stmt pos:start="41:9" pos:end="41:31"><expr pos:start="41:9" pos:end="41:30"><call pos:start="41:9" pos:end="41:30"><name pos:start="41:9" pos:end="41:16">put_bits</name><argument_list pos:start="41:17" pos:end="41:30">(<argument pos:start="41:18" pos:end="41:23"><expr pos:start="41:18" pos:end="41:23"><operator pos:start="41:18" pos:end="41:18">&amp;</operator><name pos:start="41:19" pos:end="41:23"><name pos:start="41:19" pos:end="41:19">s</name><operator pos:start="41:20" pos:end="41:21">-&gt;</operator><name pos:start="41:22" pos:end="41:23">pb</name></name></expr></argument>, <argument pos:start="41:26" pos:end="41:26"><expr pos:start="41:26" pos:end="41:26"><literal type="number" pos:start="41:26" pos:end="41:26">1</literal></expr></argument>, <argument pos:start="41:29" pos:end="41:29"><expr pos:start="41:29" pos:end="41:29"><literal type="number" pos:start="41:29" pos:end="41:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="41:33" pos:end="41:58">/* half pel coordinates */</comment>

        <if_stmt pos:start="43:9" pos:end="49:35"><if pos:start="43:9" pos:end="45:43">if<condition pos:start="43:11" pos:end="43:46">(<expr pos:start="43:12" pos:end="43:45"><name pos:start="43:12" pos:end="43:22"><name pos:start="43:12" pos:end="43:12">s</name><operator pos:start="43:13" pos:end="43:14">-&gt;</operator><name pos:start="43:15" pos:end="43:22">codec_id</name></name> <operator pos:start="43:24" pos:end="43:25">==</operator> <name pos:start="43:27" pos:end="43:45">CODEC_ID_MPEG1VIDEO</name></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:43"><block_content pos:start="45:13" pos:end="45:43">

            <expr_stmt pos:start="45:13" pos:end="45:43"><expr pos:start="45:13" pos:end="45:42"><call pos:start="45:13" pos:end="45:42"><name pos:start="45:13" pos:end="45:20">put_bits</name><argument_list pos:start="45:21" pos:end="45:42">(<argument pos:start="45:22" pos:end="45:27"><expr pos:start="45:22" pos:end="45:27"><operator pos:start="45:22" pos:end="45:22">&amp;</operator><name pos:start="45:23" pos:end="45:27"><name pos:start="45:23" pos:end="45:23">s</name><operator pos:start="45:24" pos:end="45:25">-&gt;</operator><name pos:start="45:26" pos:end="45:27">pb</name></name></expr></argument>, <argument pos:start="45:30" pos:end="45:30"><expr pos:start="45:30" pos:end="45:30"><literal type="number" pos:start="45:30" pos:end="45:30">3</literal></expr></argument>, <argument pos:start="45:33" pos:end="45:41"><expr pos:start="45:33" pos:end="45:41"><name pos:start="45:33" pos:end="45:41"><name pos:start="45:33" pos:end="45:33">s</name><operator pos:start="45:34" pos:end="45:35">-&gt;</operator><name pos:start="45:36" pos:end="45:41">f_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if> <comment type="block" pos:start="45:45" pos:end="45:64">/* forward_f_code */</comment>

        <else pos:start="47:9" pos:end="49:35">else<block type="pseudo" pos:start="49:13" pos:end="49:35"><block_content pos:start="49:13" pos:end="49:35">

            <expr_stmt pos:start="49:13" pos:end="49:35"><expr pos:start="49:13" pos:end="49:34"><call pos:start="49:13" pos:end="49:34"><name pos:start="49:13" pos:end="49:20">put_bits</name><argument_list pos:start="49:21" pos:end="49:34">(<argument pos:start="49:22" pos:end="49:27"><expr pos:start="49:22" pos:end="49:27"><operator pos:start="49:22" pos:end="49:22">&amp;</operator><name pos:start="49:23" pos:end="49:27"><name pos:start="49:23" pos:end="49:23">s</name><operator pos:start="49:24" pos:end="49:25">-&gt;</operator><name pos:start="49:26" pos:end="49:27">pb</name></name></expr></argument>, <argument pos:start="49:30" pos:end="49:30"><expr pos:start="49:30" pos:end="49:30"><literal type="number" pos:start="49:30" pos:end="49:30">3</literal></expr></argument>, <argument pos:start="49:33" pos:end="49:33"><expr pos:start="49:33" pos:end="49:33"><literal type="number" pos:start="49:33" pos:end="49:33">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="block" pos:start="49:37" pos:end="49:56">/* forward_f_code */</comment>

    </block_content>}</block></if></if_stmt>

    

    <comment type="line" pos:start="55:5" pos:end="55:50">// RAL: Backward f_code necessary for B frames</comment>

    <if_stmt pos:start="57:5" pos:end="69:5"><if pos:start="57:5" pos:end="69:5">if <condition pos:start="57:8" pos:end="57:31">(<expr pos:start="57:9" pos:end="57:30"><name pos:start="57:9" pos:end="57:20"><name pos:start="57:9" pos:end="57:9">s</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:20">pict_type</name></name> <operator pos:start="57:22" pos:end="57:23">==</operator> <name pos:start="57:25" pos:end="57:30">B_TYPE</name></expr>)</condition> <block pos:start="57:33" pos:end="69:5">{<block_content pos:start="59:9" pos:end="67:35">

        <expr_stmt pos:start="59:9" pos:end="59:31"><expr pos:start="59:9" pos:end="59:30"><call pos:start="59:9" pos:end="59:30"><name pos:start="59:9" pos:end="59:16">put_bits</name><argument_list pos:start="59:17" pos:end="59:30">(<argument pos:start="59:18" pos:end="59:23"><expr pos:start="59:18" pos:end="59:23"><operator pos:start="59:18" pos:end="59:18">&amp;</operator><name pos:start="59:19" pos:end="59:23"><name pos:start="59:19" pos:end="59:19">s</name><operator pos:start="59:20" pos:end="59:21">-&gt;</operator><name pos:start="59:22" pos:end="59:23">pb</name></name></expr></argument>, <argument pos:start="59:26" pos:end="59:26"><expr pos:start="59:26" pos:end="59:26"><literal type="number" pos:start="59:26" pos:end="59:26">1</literal></expr></argument>, <argument pos:start="59:29" pos:end="59:29"><expr pos:start="59:29" pos:end="59:29"><literal type="number" pos:start="59:29" pos:end="59:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="59:33" pos:end="59:58">/* half pel coordinates */</comment>

        <if_stmt pos:start="61:9" pos:end="67:35"><if pos:start="61:9" pos:end="63:43">if<condition pos:start="61:11" pos:end="61:46">(<expr pos:start="61:12" pos:end="61:45"><name pos:start="61:12" pos:end="61:22"><name pos:start="61:12" pos:end="61:12">s</name><operator pos:start="61:13" pos:end="61:14">-&gt;</operator><name pos:start="61:15" pos:end="61:22">codec_id</name></name> <operator pos:start="61:24" pos:end="61:25">==</operator> <name pos:start="61:27" pos:end="61:45">CODEC_ID_MPEG1VIDEO</name></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:43"><block_content pos:start="63:13" pos:end="63:43">

            <expr_stmt pos:start="63:13" pos:end="63:43"><expr pos:start="63:13" pos:end="63:42"><call pos:start="63:13" pos:end="63:42"><name pos:start="63:13" pos:end="63:20">put_bits</name><argument_list pos:start="63:21" pos:end="63:42">(<argument pos:start="63:22" pos:end="63:27"><expr pos:start="63:22" pos:end="63:27"><operator pos:start="63:22" pos:end="63:22">&amp;</operator><name pos:start="63:23" pos:end="63:27"><name pos:start="63:23" pos:end="63:23">s</name><operator pos:start="63:24" pos:end="63:25">-&gt;</operator><name pos:start="63:26" pos:end="63:27">pb</name></name></expr></argument>, <argument pos:start="63:30" pos:end="63:30"><expr pos:start="63:30" pos:end="63:30"><literal type="number" pos:start="63:30" pos:end="63:30">3</literal></expr></argument>, <argument pos:start="63:33" pos:end="63:41"><expr pos:start="63:33" pos:end="63:41"><name pos:start="63:33" pos:end="63:41"><name pos:start="63:33" pos:end="63:33">s</name><operator pos:start="63:34" pos:end="63:35">-&gt;</operator><name pos:start="63:36" pos:end="63:41">b_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if> <comment type="block" pos:start="63:45" pos:end="63:65">/* backward_f_code */</comment>

        <else pos:start="65:9" pos:end="67:35">else<block type="pseudo" pos:start="67:13" pos:end="67:35"><block_content pos:start="67:13" pos:end="67:35">

            <expr_stmt pos:start="67:13" pos:end="67:35"><expr pos:start="67:13" pos:end="67:34"><call pos:start="67:13" pos:end="67:34"><name pos:start="67:13" pos:end="67:20">put_bits</name><argument_list pos:start="67:21" pos:end="67:34">(<argument pos:start="67:22" pos:end="67:27"><expr pos:start="67:22" pos:end="67:27"><operator pos:start="67:22" pos:end="67:22">&amp;</operator><name pos:start="67:23" pos:end="67:27"><name pos:start="67:23" pos:end="67:23">s</name><operator pos:start="67:24" pos:end="67:25">-&gt;</operator><name pos:start="67:26" pos:end="67:27">pb</name></name></expr></argument>, <argument pos:start="67:30" pos:end="67:30"><expr pos:start="67:30" pos:end="67:30"><literal type="number" pos:start="67:30" pos:end="67:30">3</literal></expr></argument>, <argument pos:start="67:33" pos:end="67:33"><expr pos:start="67:33" pos:end="67:33"><literal type="number" pos:start="67:33" pos:end="67:33">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="block" pos:start="67:37" pos:end="67:57">/* backward_f_code */</comment>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:27"><expr pos:start="73:5" pos:end="73:26"><call pos:start="73:5" pos:end="73:26"><name pos:start="73:5" pos:end="73:12">put_bits</name><argument_list pos:start="73:13" pos:end="73:26">(<argument pos:start="73:14" pos:end="73:19"><expr pos:start="73:14" pos:end="73:19"><operator pos:start="73:14" pos:end="73:14">&amp;</operator><name pos:start="73:15" pos:end="73:19"><name pos:start="73:15" pos:end="73:15">s</name><operator pos:start="73:16" pos:end="73:17">-&gt;</operator><name pos:start="73:18" pos:end="73:19">pb</name></name></expr></argument>, <argument pos:start="73:22" pos:end="73:22"><expr pos:start="73:22" pos:end="73:22"><literal type="number" pos:start="73:22" pos:end="73:22">1</literal></expr></argument>, <argument pos:start="73:25" pos:end="73:25"><expr pos:start="73:25" pos:end="73:25"><literal type="number" pos:start="73:25" pos:end="73:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="73:29" pos:end="73:51">/* extra bit picture */</comment>



    <expr_stmt pos:start="77:5" pos:end="77:32"><expr pos:start="77:5" pos:end="77:31"><name pos:start="77:5" pos:end="77:27"><name pos:start="77:5" pos:end="77:5">s</name><operator pos:start="77:6" pos:end="77:7">-&gt;</operator><name pos:start="77:8" pos:end="77:27">frame_pred_frame_dct</name></name> <operator pos:start="77:29" pos:end="77:29">=</operator> <literal type="number" pos:start="77:31" pos:end="77:31">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="151:5"><if pos:start="79:5" pos:end="151:5">if<condition pos:start="79:7" pos:end="79:42">(<expr pos:start="79:8" pos:end="79:41"><name pos:start="79:8" pos:end="79:18"><name pos:start="79:8" pos:end="79:8">s</name><operator pos:start="79:9" pos:end="79:10">-&gt;</operator><name pos:start="79:11" pos:end="79:18">codec_id</name></name> <operator pos:start="79:20" pos:end="79:21">==</operator> <name pos:start="79:23" pos:end="79:41">CODEC_ID_MPEG2VIDEO</name></expr>)</condition><block pos:start="79:43" pos:end="151:5">{<block_content pos:start="81:9" pos:end="149:31">

        <expr_stmt pos:start="81:9" pos:end="81:38"><expr pos:start="81:9" pos:end="81:37"><call pos:start="81:9" pos:end="81:37"><name pos:start="81:9" pos:end="81:18">put_header</name><argument_list pos:start="81:19" pos:end="81:37">(<argument pos:start="81:20" pos:end="81:20"><expr pos:start="81:20" pos:end="81:20"><name pos:start="81:20" pos:end="81:20">s</name></expr></argument>, <argument pos:start="81:23" pos:end="81:36"><expr pos:start="81:23" pos:end="81:36"><name pos:start="81:23" pos:end="81:36">EXT_START_CODE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:31"><expr pos:start="83:9" pos:end="83:30"><call pos:start="83:9" pos:end="83:30"><name pos:start="83:9" pos:end="83:16">put_bits</name><argument_list pos:start="83:17" pos:end="83:30">(<argument pos:start="83:18" pos:end="83:23"><expr pos:start="83:18" pos:end="83:23"><operator pos:start="83:18" pos:end="83:18">&amp;</operator><name pos:start="83:19" pos:end="83:23"><name pos:start="83:19" pos:end="83:19">s</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:23">pb</name></name></expr></argument>, <argument pos:start="83:26" pos:end="83:26"><expr pos:start="83:26" pos:end="83:26"><literal type="number" pos:start="83:26" pos:end="83:26">4</literal></expr></argument>, <argument pos:start="83:29" pos:end="83:29"><expr pos:start="83:29" pos:end="83:29"><literal type="number" pos:start="83:29" pos:end="83:29">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="83:33" pos:end="83:41">//pic ext</comment>

        <if_stmt pos:start="85:9" pos:end="95:9"><if pos:start="85:9" pos:end="91:9">if <condition pos:start="85:12" pos:end="85:61">(<expr pos:start="85:13" pos:end="85:60"><name pos:start="85:13" pos:end="85:24"><name pos:start="85:13" pos:end="85:13">s</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:24">pict_type</name></name> <operator pos:start="85:26" pos:end="85:27">==</operator> <name pos:start="85:29" pos:end="85:34">P_TYPE</name> <operator pos:start="85:36" pos:end="85:37">||</operator> <name pos:start="85:39" pos:end="85:50"><name pos:start="85:39" pos:end="85:39">s</name><operator pos:start="85:40" pos:end="85:41">-&gt;</operator><name pos:start="85:42" pos:end="85:50">pict_type</name></name> <operator pos:start="85:52" pos:end="85:53">==</operator> <name pos:start="85:55" pos:end="85:60">B_TYPE</name></expr>)</condition> <block pos:start="85:63" pos:end="91:9">{<block_content pos:start="87:13" pos:end="89:43">

            <expr_stmt pos:start="87:13" pos:end="87:43"><expr pos:start="87:13" pos:end="87:42"><call pos:start="87:13" pos:end="87:42"><name pos:start="87:13" pos:end="87:20">put_bits</name><argument_list pos:start="87:21" pos:end="87:42">(<argument pos:start="87:22" pos:end="87:27"><expr pos:start="87:22" pos:end="87:27"><operator pos:start="87:22" pos:end="87:22">&amp;</operator><name pos:start="87:23" pos:end="87:27"><name pos:start="87:23" pos:end="87:23">s</name><operator pos:start="87:24" pos:end="87:25">-&gt;</operator><name pos:start="87:26" pos:end="87:27">pb</name></name></expr></argument>, <argument pos:start="87:30" pos:end="87:30"><expr pos:start="87:30" pos:end="87:30"><literal type="number" pos:start="87:30" pos:end="87:30">4</literal></expr></argument>, <argument pos:start="87:33" pos:end="87:41"><expr pos:start="87:33" pos:end="87:41"><name pos:start="87:33" pos:end="87:41"><name pos:start="87:33" pos:end="87:33">s</name><operator pos:start="87:34" pos:end="87:35">-&gt;</operator><name pos:start="87:36" pos:end="87:41">f_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:43"><expr pos:start="89:13" pos:end="89:42"><call pos:start="89:13" pos:end="89:42"><name pos:start="89:13" pos:end="89:20">put_bits</name><argument_list pos:start="89:21" pos:end="89:42">(<argument pos:start="89:22" pos:end="89:27"><expr pos:start="89:22" pos:end="89:27"><operator pos:start="89:22" pos:end="89:22">&amp;</operator><name pos:start="89:23" pos:end="89:27"><name pos:start="89:23" pos:end="89:23">s</name><operator pos:start="89:24" pos:end="89:25">-&gt;</operator><name pos:start="89:26" pos:end="89:27">pb</name></name></expr></argument>, <argument pos:start="89:30" pos:end="89:30"><expr pos:start="89:30" pos:end="89:30"><literal type="number" pos:start="89:30" pos:end="89:30">4</literal></expr></argument>, <argument pos:start="89:33" pos:end="89:41"><expr pos:start="89:33" pos:end="89:41"><name pos:start="89:33" pos:end="89:41"><name pos:start="89:33" pos:end="89:33">s</name><operator pos:start="89:34" pos:end="89:35">-&gt;</operator><name pos:start="89:36" pos:end="89:41">f_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="91:10" pos:end="95:9">else<block pos:start="91:14" pos:end="95:9">{<block_content pos:start="93:13" pos:end="93:37">

            <expr_stmt pos:start="93:13" pos:end="93:37"><expr pos:start="93:13" pos:end="93:36"><call pos:start="93:13" pos:end="93:36"><name pos:start="93:13" pos:end="93:20">put_bits</name><argument_list pos:start="93:21" pos:end="93:36">(<argument pos:start="93:22" pos:end="93:27"><expr pos:start="93:22" pos:end="93:27"><operator pos:start="93:22" pos:end="93:22">&amp;</operator><name pos:start="93:23" pos:end="93:27"><name pos:start="93:23" pos:end="93:23">s</name><operator pos:start="93:24" pos:end="93:25">-&gt;</operator><name pos:start="93:26" pos:end="93:27">pb</name></name></expr></argument>, <argument pos:start="93:30" pos:end="93:30"><expr pos:start="93:30" pos:end="93:30"><literal type="number" pos:start="93:30" pos:end="93:30">8</literal></expr></argument>, <argument pos:start="93:33" pos:end="93:35"><expr pos:start="93:33" pos:end="93:35"><literal type="number" pos:start="93:33" pos:end="93:35">255</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="97:9" pos:end="107:9"><if pos:start="97:9" pos:end="103:9">if <condition pos:start="97:12" pos:end="97:35">(<expr pos:start="97:13" pos:end="97:34"><name pos:start="97:13" pos:end="97:24"><name pos:start="97:13" pos:end="97:13">s</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:24">pict_type</name></name> <operator pos:start="97:26" pos:end="97:27">==</operator> <name pos:start="97:29" pos:end="97:34">B_TYPE</name></expr>)</condition> <block pos:start="97:37" pos:end="103:9">{<block_content pos:start="99:13" pos:end="101:43">

            <expr_stmt pos:start="99:13" pos:end="99:43"><expr pos:start="99:13" pos:end="99:42"><call pos:start="99:13" pos:end="99:42"><name pos:start="99:13" pos:end="99:20">put_bits</name><argument_list pos:start="99:21" pos:end="99:42">(<argument pos:start="99:22" pos:end="99:27"><expr pos:start="99:22" pos:end="99:27"><operator pos:start="99:22" pos:end="99:22">&amp;</operator><name pos:start="99:23" pos:end="99:27"><name pos:start="99:23" pos:end="99:23">s</name><operator pos:start="99:24" pos:end="99:25">-&gt;</operator><name pos:start="99:26" pos:end="99:27">pb</name></name></expr></argument>, <argument pos:start="99:30" pos:end="99:30"><expr pos:start="99:30" pos:end="99:30"><literal type="number" pos:start="99:30" pos:end="99:30">4</literal></expr></argument>, <argument pos:start="99:33" pos:end="99:41"><expr pos:start="99:33" pos:end="99:41"><name pos:start="99:33" pos:end="99:41"><name pos:start="99:33" pos:end="99:33">s</name><operator pos:start="99:34" pos:end="99:35">-&gt;</operator><name pos:start="99:36" pos:end="99:41">b_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:43"><expr pos:start="101:13" pos:end="101:42"><call pos:start="101:13" pos:end="101:42"><name pos:start="101:13" pos:end="101:20">put_bits</name><argument_list pos:start="101:21" pos:end="101:42">(<argument pos:start="101:22" pos:end="101:27"><expr pos:start="101:22" pos:end="101:27"><operator pos:start="101:22" pos:end="101:22">&amp;</operator><name pos:start="101:23" pos:end="101:27"><name pos:start="101:23" pos:end="101:23">s</name><operator pos:start="101:24" pos:end="101:25">-&gt;</operator><name pos:start="101:26" pos:end="101:27">pb</name></name></expr></argument>, <argument pos:start="101:30" pos:end="101:30"><expr pos:start="101:30" pos:end="101:30"><literal type="number" pos:start="101:30" pos:end="101:30">4</literal></expr></argument>, <argument pos:start="101:33" pos:end="101:41"><expr pos:start="101:33" pos:end="101:41"><name pos:start="101:33" pos:end="101:41"><name pos:start="101:33" pos:end="101:33">s</name><operator pos:start="101:34" pos:end="101:35">-&gt;</operator><name pos:start="101:36" pos:end="101:41">b_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="103:10" pos:end="107:9">else<block pos:start="103:14" pos:end="107:9">{<block_content pos:start="105:13" pos:end="105:37">

            <expr_stmt pos:start="105:13" pos:end="105:37"><expr pos:start="105:13" pos:end="105:36"><call pos:start="105:13" pos:end="105:36"><name pos:start="105:13" pos:end="105:20">put_bits</name><argument_list pos:start="105:21" pos:end="105:36">(<argument pos:start="105:22" pos:end="105:27"><expr pos:start="105:22" pos:end="105:27"><operator pos:start="105:22" pos:end="105:22">&amp;</operator><name pos:start="105:23" pos:end="105:27"><name pos:start="105:23" pos:end="105:23">s</name><operator pos:start="105:24" pos:end="105:25">-&gt;</operator><name pos:start="105:26" pos:end="105:27">pb</name></name></expr></argument>, <argument pos:start="105:30" pos:end="105:30"><expr pos:start="105:30" pos:end="105:30"><literal type="number" pos:start="105:30" pos:end="105:30">8</literal></expr></argument>, <argument pos:start="105:33" pos:end="105:35"><expr pos:start="105:33" pos:end="105:35"><literal type="number" pos:start="105:33" pos:end="105:35">255</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:51"><expr pos:start="109:9" pos:end="109:50"><call pos:start="109:9" pos:end="109:50"><name pos:start="109:9" pos:end="109:16">put_bits</name><argument_list pos:start="109:17" pos:end="109:50">(<argument pos:start="109:18" pos:end="109:23"><expr pos:start="109:18" pos:end="109:23"><operator pos:start="109:18" pos:end="109:18">&amp;</operator><name pos:start="109:19" pos:end="109:23"><name pos:start="109:19" pos:end="109:19">s</name><operator pos:start="109:20" pos:end="109:21">-&gt;</operator><name pos:start="109:22" pos:end="109:23">pb</name></name></expr></argument>, <argument pos:start="109:26" pos:end="109:26"><expr pos:start="109:26" pos:end="109:26"><literal type="number" pos:start="109:26" pos:end="109:26">2</literal></expr></argument>, <argument pos:start="109:29" pos:end="109:49"><expr pos:start="109:29" pos:end="109:49"><name pos:start="109:29" pos:end="109:49"><name pos:start="109:29" pos:end="109:29">s</name><operator pos:start="109:30" pos:end="109:31">-&gt;</operator><name pos:start="109:32" pos:end="109:49">intra_dc_precision</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:62"><expr pos:start="111:9" pos:end="111:61"><call pos:start="111:9" pos:end="111:61"><name pos:start="111:9" pos:end="111:16">put_bits</name><argument_list pos:start="111:17" pos:end="111:61">(<argument pos:start="111:18" pos:end="111:23"><expr pos:start="111:18" pos:end="111:23"><operator pos:start="111:18" pos:end="111:18">&amp;</operator><name pos:start="111:19" pos:end="111:23"><name pos:start="111:19" pos:end="111:19">s</name><operator pos:start="111:20" pos:end="111:21">-&gt;</operator><name pos:start="111:22" pos:end="111:23">pb</name></name></expr></argument>, <argument pos:start="111:26" pos:end="111:26"><expr pos:start="111:26" pos:end="111:26"><literal type="number" pos:start="111:26" pos:end="111:26">2</literal></expr></argument>, <argument pos:start="111:29" pos:end="111:60"><expr pos:start="111:29" pos:end="111:60"><name pos:start="111:29" pos:end="111:48"><name pos:start="111:29" pos:end="111:29">s</name><operator pos:start="111:30" pos:end="111:31">-&gt;</operator><name pos:start="111:32" pos:end="111:48">picture_structure</name></name><operator pos:start="111:49" pos:end="111:49">=</operator> <name pos:start="111:51" pos:end="111:60">PICT_FRAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="113:9" pos:end="121:9"><if pos:start="113:9" pos:end="117:9">if <condition pos:start="113:12" pos:end="113:36">(<expr pos:start="113:13" pos:end="113:35"><name pos:start="113:13" pos:end="113:35"><name pos:start="113:13" pos:end="113:13">s</name><operator pos:start="113:14" pos:end="113:15">-&gt;</operator><name pos:start="113:16" pos:end="113:35">progressive_sequence</name></name></expr>)</condition> <block pos:start="113:38" pos:end="117:9">{<block_content pos:start="115:13" pos:end="115:35">

            <expr_stmt pos:start="115:13" pos:end="115:35"><expr pos:start="115:13" pos:end="115:34"><call pos:start="115:13" pos:end="115:34"><name pos:start="115:13" pos:end="115:20">put_bits</name><argument_list pos:start="115:21" pos:end="115:34">(<argument pos:start="115:22" pos:end="115:27"><expr pos:start="115:22" pos:end="115:27"><operator pos:start="115:22" pos:end="115:22">&amp;</operator><name pos:start="115:23" pos:end="115:27"><name pos:start="115:23" pos:end="115:23">s</name><operator pos:start="115:24" pos:end="115:25">-&gt;</operator><name pos:start="115:26" pos:end="115:27">pb</name></name></expr></argument>, <argument pos:start="115:30" pos:end="115:30"><expr pos:start="115:30" pos:end="115:30"><literal type="number" pos:start="115:30" pos:end="115:30">1</literal></expr></argument>, <argument pos:start="115:33" pos:end="115:33"><expr pos:start="115:33" pos:end="115:33"><literal type="number" pos:start="115:33" pos:end="115:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="115:37" pos:end="115:51">/* no repeat */</comment>

        </block_content>}</block></if> <else pos:start="117:11" pos:end="121:9">else <block pos:start="117:16" pos:end="121:9">{<block_content pos:start="119:13" pos:end="119:73">

            <expr_stmt pos:start="119:13" pos:end="119:73"><expr pos:start="119:13" pos:end="119:72"><call pos:start="119:13" pos:end="119:72"><name pos:start="119:13" pos:end="119:20">put_bits</name><argument_list pos:start="119:21" pos:end="119:72">(<argument pos:start="119:22" pos:end="119:27"><expr pos:start="119:22" pos:end="119:27"><operator pos:start="119:22" pos:end="119:22">&amp;</operator><name pos:start="119:23" pos:end="119:27"><name pos:start="119:23" pos:end="119:23">s</name><operator pos:start="119:24" pos:end="119:25">-&gt;</operator><name pos:start="119:26" pos:end="119:27">pb</name></name></expr></argument>, <argument pos:start="119:30" pos:end="119:30"><expr pos:start="119:30" pos:end="119:30"><literal type="number" pos:start="119:30" pos:end="119:30">1</literal></expr></argument>, <argument pos:start="119:33" pos:end="119:71"><expr pos:start="119:33" pos:end="119:71"><name pos:start="119:33" pos:end="119:71"><name pos:start="119:33" pos:end="119:33">s</name><operator pos:start="119:34" pos:end="119:35">-&gt;</operator><name pos:start="119:36" pos:end="119:54">current_picture_ptr</name><operator pos:start="119:55" pos:end="119:56">-&gt;</operator><name pos:start="119:57" pos:end="119:71">top_field_first</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <comment type="block" pos:start="123:9" pos:end="125:22">/* XXX: optimize the generation of this flag with entropy

           measures */</comment>

        <expr_stmt pos:start="127:9" pos:end="127:58"><expr pos:start="127:9" pos:end="127:57"><name pos:start="127:9" pos:end="127:31"><name pos:start="127:9" pos:end="127:9">s</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:31">frame_pred_frame_dct</name></name> <operator pos:start="127:33" pos:end="127:33">=</operator> <name pos:start="127:35" pos:end="127:57"><name pos:start="127:35" pos:end="127:35">s</name><operator pos:start="127:36" pos:end="127:37">-&gt;</operator><name pos:start="127:38" pos:end="127:57">progressive_sequence</name></name></expr>;</expr_stmt>

        

        <expr_stmt pos:start="131:9" pos:end="131:53"><expr pos:start="131:9" pos:end="131:52"><call pos:start="131:9" pos:end="131:52"><name pos:start="131:9" pos:end="131:16">put_bits</name><argument_list pos:start="131:17" pos:end="131:52">(<argument pos:start="131:18" pos:end="131:23"><expr pos:start="131:18" pos:end="131:23"><operator pos:start="131:18" pos:end="131:18">&amp;</operator><name pos:start="131:19" pos:end="131:23"><name pos:start="131:19" pos:end="131:19">s</name><operator pos:start="131:20" pos:end="131:21">-&gt;</operator><name pos:start="131:22" pos:end="131:23">pb</name></name></expr></argument>, <argument pos:start="131:26" pos:end="131:26"><expr pos:start="131:26" pos:end="131:26"><literal type="number" pos:start="131:26" pos:end="131:26">1</literal></expr></argument>, <argument pos:start="131:29" pos:end="131:51"><expr pos:start="131:29" pos:end="131:51"><name pos:start="131:29" pos:end="131:51"><name pos:start="131:29" pos:end="131:29">s</name><operator pos:start="131:30" pos:end="131:31">-&gt;</operator><name pos:start="131:32" pos:end="131:51">frame_pred_frame_dct</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:59"><expr pos:start="133:9" pos:end="133:58"><call pos:start="133:9" pos:end="133:58"><name pos:start="133:9" pos:end="133:16">put_bits</name><argument_list pos:start="133:17" pos:end="133:58">(<argument pos:start="133:18" pos:end="133:23"><expr pos:start="133:18" pos:end="133:23"><operator pos:start="133:18" pos:end="133:18">&amp;</operator><name pos:start="133:19" pos:end="133:23"><name pos:start="133:19" pos:end="133:19">s</name><operator pos:start="133:20" pos:end="133:21">-&gt;</operator><name pos:start="133:22" pos:end="133:23">pb</name></name></expr></argument>, <argument pos:start="133:26" pos:end="133:26"><expr pos:start="133:26" pos:end="133:26"><literal type="number" pos:start="133:26" pos:end="133:26">1</literal></expr></argument>, <argument pos:start="133:29" pos:end="133:57"><expr pos:start="133:29" pos:end="133:57"><name pos:start="133:29" pos:end="133:57"><name pos:start="133:29" pos:end="133:29">s</name><operator pos:start="133:30" pos:end="133:31">-&gt;</operator><name pos:start="133:32" pos:end="133:57">concealment_motion_vectors</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:45"><expr pos:start="135:9" pos:end="135:44"><call pos:start="135:9" pos:end="135:44"><name pos:start="135:9" pos:end="135:16">put_bits</name><argument_list pos:start="135:17" pos:end="135:44">(<argument pos:start="135:18" pos:end="135:23"><expr pos:start="135:18" pos:end="135:23"><operator pos:start="135:18" pos:end="135:18">&amp;</operator><name pos:start="135:19" pos:end="135:23"><name pos:start="135:19" pos:end="135:19">s</name><operator pos:start="135:20" pos:end="135:21">-&gt;</operator><name pos:start="135:22" pos:end="135:23">pb</name></name></expr></argument>, <argument pos:start="135:26" pos:end="135:26"><expr pos:start="135:26" pos:end="135:26"><literal type="number" pos:start="135:26" pos:end="135:26">1</literal></expr></argument>, <argument pos:start="135:29" pos:end="135:43"><expr pos:start="135:29" pos:end="135:43"><name pos:start="135:29" pos:end="135:43"><name pos:start="135:29" pos:end="135:29">s</name><operator pos:start="135:30" pos:end="135:31">-&gt;</operator><name pos:start="135:32" pos:end="135:43">q_scale_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:49"><expr pos:start="137:9" pos:end="137:48"><call pos:start="137:9" pos:end="137:48"><name pos:start="137:9" pos:end="137:16">put_bits</name><argument_list pos:start="137:17" pos:end="137:48">(<argument pos:start="137:18" pos:end="137:23"><expr pos:start="137:18" pos:end="137:23"><operator pos:start="137:18" pos:end="137:18">&amp;</operator><name pos:start="137:19" pos:end="137:23"><name pos:start="137:19" pos:end="137:19">s</name><operator pos:start="137:20" pos:end="137:21">-&gt;</operator><name pos:start="137:22" pos:end="137:23">pb</name></name></expr></argument>, <argument pos:start="137:26" pos:end="137:26"><expr pos:start="137:26" pos:end="137:26"><literal type="number" pos:start="137:26" pos:end="137:26">1</literal></expr></argument>, <argument pos:start="137:29" pos:end="137:47"><expr pos:start="137:29" pos:end="137:47"><name pos:start="137:29" pos:end="137:47"><name pos:start="137:29" pos:end="137:29">s</name><operator pos:start="137:30" pos:end="137:31">-&gt;</operator><name pos:start="137:32" pos:end="137:47">intra_vlc_format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:47"><expr pos:start="139:9" pos:end="139:46"><call pos:start="139:9" pos:end="139:46"><name pos:start="139:9" pos:end="139:16">put_bits</name><argument_list pos:start="139:17" pos:end="139:46">(<argument pos:start="139:18" pos:end="139:23"><expr pos:start="139:18" pos:end="139:23"><operator pos:start="139:18" pos:end="139:18">&amp;</operator><name pos:start="139:19" pos:end="139:23"><name pos:start="139:19" pos:end="139:19">s</name><operator pos:start="139:20" pos:end="139:21">-&gt;</operator><name pos:start="139:22" pos:end="139:23">pb</name></name></expr></argument>, <argument pos:start="139:26" pos:end="139:26"><expr pos:start="139:26" pos:end="139:26"><literal type="number" pos:start="139:26" pos:end="139:26">1</literal></expr></argument>, <argument pos:start="139:29" pos:end="139:45"><expr pos:start="139:29" pos:end="139:45"><name pos:start="139:29" pos:end="139:45"><name pos:start="139:29" pos:end="139:29">s</name><operator pos:start="139:30" pos:end="139:31">-&gt;</operator><name pos:start="139:32" pos:end="139:45">alternate_scan</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:51"><expr pos:start="141:9" pos:end="141:50"><call pos:start="141:9" pos:end="141:50"><name pos:start="141:9" pos:end="141:16">put_bits</name><argument_list pos:start="141:17" pos:end="141:50">(<argument pos:start="141:18" pos:end="141:23"><expr pos:start="141:18" pos:end="141:23"><operator pos:start="141:18" pos:end="141:18">&amp;</operator><name pos:start="141:19" pos:end="141:23"><name pos:start="141:19" pos:end="141:19">s</name><operator pos:start="141:20" pos:end="141:21">-&gt;</operator><name pos:start="141:22" pos:end="141:23">pb</name></name></expr></argument>, <argument pos:start="141:26" pos:end="141:26"><expr pos:start="141:26" pos:end="141:26"><literal type="number" pos:start="141:26" pos:end="141:26">1</literal></expr></argument>, <argument pos:start="141:29" pos:end="141:49"><expr pos:start="141:29" pos:end="141:49"><name pos:start="141:29" pos:end="141:49"><name pos:start="141:29" pos:end="141:29">s</name><operator pos:start="141:30" pos:end="141:31">-&gt;</operator><name pos:start="141:32" pos:end="141:49">repeat_first_field</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:50"><expr pos:start="143:9" pos:end="143:49"><call pos:start="143:9" pos:end="143:49"><name pos:start="143:9" pos:end="143:16">put_bits</name><argument_list pos:start="143:17" pos:end="143:49">(<argument pos:start="143:18" pos:end="143:23"><expr pos:start="143:18" pos:end="143:23"><operator pos:start="143:18" pos:end="143:18">&amp;</operator><name pos:start="143:19" pos:end="143:23"><name pos:start="143:19" pos:end="143:19">s</name><operator pos:start="143:20" pos:end="143:21">-&gt;</operator><name pos:start="143:22" pos:end="143:23">pb</name></name></expr></argument>, <argument pos:start="143:26" pos:end="143:26"><expr pos:start="143:26" pos:end="143:26"><literal type="number" pos:start="143:26" pos:end="143:26">1</literal></expr></argument>, <argument pos:start="143:29" pos:end="143:48"><expr pos:start="143:29" pos:end="143:48"><name pos:start="143:29" pos:end="143:46"><name pos:start="143:29" pos:end="143:29">s</name><operator pos:start="143:30" pos:end="143:31">-&gt;</operator><name pos:start="143:32" pos:end="143:46">chroma_420_type</name></name><operator pos:start="143:47" pos:end="143:47">=</operator><literal type="number" pos:start="143:48" pos:end="143:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:55"><expr pos:start="145:9" pos:end="145:54"><name pos:start="145:9" pos:end="145:28"><name pos:start="145:9" pos:end="145:9">s</name><operator pos:start="145:10" pos:end="145:11">-&gt;</operator><name pos:start="145:12" pos:end="145:28">progressive_frame</name></name> <operator pos:start="145:30" pos:end="145:30">=</operator> <name pos:start="145:32" pos:end="145:54"><name pos:start="145:32" pos:end="145:32">s</name><operator pos:start="145:33" pos:end="145:34">-&gt;</operator><name pos:start="145:35" pos:end="145:54">progressive_sequence</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:50"><expr pos:start="147:9" pos:end="147:49"><call pos:start="147:9" pos:end="147:49"><name pos:start="147:9" pos:end="147:16">put_bits</name><argument_list pos:start="147:17" pos:end="147:49">(<argument pos:start="147:18" pos:end="147:23"><expr pos:start="147:18" pos:end="147:23"><operator pos:start="147:18" pos:end="147:18">&amp;</operator><name pos:start="147:19" pos:end="147:23"><name pos:start="147:19" pos:end="147:19">s</name><operator pos:start="147:20" pos:end="147:21">-&gt;</operator><name pos:start="147:22" pos:end="147:23">pb</name></name></expr></argument>, <argument pos:start="147:26" pos:end="147:26"><expr pos:start="147:26" pos:end="147:26"><literal type="number" pos:start="147:26" pos:end="147:26">1</literal></expr></argument>, <argument pos:start="147:29" pos:end="147:48"><expr pos:start="147:29" pos:end="147:48"><name pos:start="147:29" pos:end="147:48"><name pos:start="147:29" pos:end="147:29">s</name><operator pos:start="147:30" pos:end="147:31">-&gt;</operator><name pos:start="147:32" pos:end="147:48">progressive_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:31"><expr pos:start="149:9" pos:end="149:30"><call pos:start="149:9" pos:end="149:30"><name pos:start="149:9" pos:end="149:16">put_bits</name><argument_list pos:start="149:17" pos:end="149:30">(<argument pos:start="149:18" pos:end="149:23"><expr pos:start="149:18" pos:end="149:23"><operator pos:start="149:18" pos:end="149:18">&amp;</operator><name pos:start="149:19" pos:end="149:23"><name pos:start="149:19" pos:end="149:19">s</name><operator pos:start="149:20" pos:end="149:21">-&gt;</operator><name pos:start="149:22" pos:end="149:23">pb</name></name></expr></argument>, <argument pos:start="149:26" pos:end="149:26"><expr pos:start="149:26" pos:end="149:26"><literal type="number" pos:start="149:26" pos:end="149:26">1</literal></expr></argument>, <argument pos:start="149:29" pos:end="149:29"><expr pos:start="149:29" pos:end="149:29"><literal type="number" pos:start="149:29" pos:end="149:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="149:33" pos:end="149:56">//composite_display_flag</comment>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="153:5" pos:end="167:5"><if pos:start="153:5" pos:end="167:5">if<condition pos:start="153:7" pos:end="153:46">(<expr pos:start="153:8" pos:end="153:45"><name pos:start="153:8" pos:end="153:15"><name pos:start="153:8" pos:end="153:8">s</name><operator pos:start="153:9" pos:end="153:10">-&gt;</operator><name pos:start="153:11" pos:end="153:15">flags</name></name> <operator pos:start="153:17" pos:end="153:17">&amp;</operator> <name pos:start="153:19" pos:end="153:45">CODEC_FLAG_SVCD_SCAN_OFFSET</name></expr>)</condition><block pos:start="153:47" pos:end="167:5">{<block_content pos:start="155:9" pos:end="165:9">

        <decl_stmt pos:start="155:9" pos:end="155:14"><decl pos:start="155:9" pos:end="155:13"><type pos:start="155:9" pos:end="155:11"><name pos:start="155:9" pos:end="155:11">int</name></type> <name pos:start="155:13" pos:end="155:13">i</name></decl>;</decl_stmt>



        <expr_stmt pos:start="159:9" pos:end="159:39"><expr pos:start="159:9" pos:end="159:38"><call pos:start="159:9" pos:end="159:38"><name pos:start="159:9" pos:end="159:18">put_header</name><argument_list pos:start="159:19" pos:end="159:38">(<argument pos:start="159:20" pos:end="159:20"><expr pos:start="159:20" pos:end="159:20"><name pos:start="159:20" pos:end="159:20">s</name></expr></argument>, <argument pos:start="159:23" pos:end="159:37"><expr pos:start="159:23" pos:end="159:37"><name pos:start="159:23" pos:end="159:37">USER_START_CODE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="161:9" pos:end="165:9">for<control pos:start="161:12" pos:end="161:61">(<init pos:start="161:13" pos:end="161:16"><expr pos:start="161:13" pos:end="161:15"><name pos:start="161:13" pos:end="161:13">i</name><operator pos:start="161:14" pos:end="161:14">=</operator><literal type="number" pos:start="161:15" pos:end="161:15">0</literal></expr>;</init> <condition pos:start="161:18" pos:end="161:56"><expr pos:start="161:18" pos:end="161:55"><name pos:start="161:18" pos:end="161:18">i</name><operator pos:start="161:19" pos:end="161:19">&lt;</operator><sizeof pos:start="161:20" pos:end="161:55">sizeof<argument_list pos:start="161:26" pos:end="161:55">(<argument pos:start="161:27" pos:end="161:54"><expr pos:start="161:27" pos:end="161:54"><name pos:start="161:27" pos:end="161:54">svcd_scan_offset_placeholder</name></expr></argument>)</argument_list></sizeof></expr>;</condition> <incr pos:start="161:58" pos:end="161:60"><expr pos:start="161:58" pos:end="161:60"><name pos:start="161:58" pos:end="161:58">i</name><operator pos:start="161:59" pos:end="161:60">++</operator></expr></incr>)</control><block pos:start="161:62" pos:end="165:9">{<block_content pos:start="163:13" pos:end="163:65">

            <expr_stmt pos:start="163:13" pos:end="163:65"><expr pos:start="163:13" pos:end="163:64"><call pos:start="163:13" pos:end="163:64"><name pos:start="163:13" pos:end="163:20">put_bits</name><argument_list pos:start="163:21" pos:end="163:64">(<argument pos:start="163:22" pos:end="163:27"><expr pos:start="163:22" pos:end="163:27"><operator pos:start="163:22" pos:end="163:22">&amp;</operator><name pos:start="163:23" pos:end="163:27"><name pos:start="163:23" pos:end="163:23">s</name><operator pos:start="163:24" pos:end="163:25">-&gt;</operator><name pos:start="163:26" pos:end="163:27">pb</name></name></expr></argument>, <argument pos:start="163:30" pos:end="163:30"><expr pos:start="163:30" pos:end="163:30"><literal type="number" pos:start="163:30" pos:end="163:30">8</literal></expr></argument>, <argument pos:start="163:33" pos:end="163:63"><expr pos:start="163:33" pos:end="163:63"><name pos:start="163:33" pos:end="163:63"><name pos:start="163:33" pos:end="163:60">svcd_scan_offset_placeholder</name><index pos:start="163:61" pos:end="163:63">[<expr pos:start="163:62" pos:end="163:62"><name pos:start="163:62" pos:end="163:62">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    

    <expr_stmt pos:start="171:5" pos:end="171:14"><expr pos:start="171:5" pos:end="171:13"><name pos:start="171:5" pos:end="171:11"><name pos:start="171:5" pos:end="171:5">s</name><operator pos:start="171:6" pos:end="171:7">-&gt;</operator><name pos:start="171:8" pos:end="171:11">mb_y</name></name><operator pos:start="171:12" pos:end="171:12">=</operator><literal type="number" pos:start="171:13" pos:end="171:13">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="173:5" pos:end="173:36"><expr pos:start="173:5" pos:end="173:35"><call pos:start="173:5" pos:end="173:35"><name pos:start="173:5" pos:end="173:32">ff_mpeg1_encode_slice_header</name><argument_list pos:start="173:33" pos:end="173:35">(<argument pos:start="173:34" pos:end="173:34"><expr pos:start="173:34" pos:end="173:34"><name pos:start="173:34" pos:end="173:34">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
