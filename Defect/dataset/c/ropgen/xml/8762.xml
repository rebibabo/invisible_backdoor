<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8762.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">migrate_fd_put_ready</name><parameter_list pos:start="1:33" pos:end="1:46">(<parameter pos:start="1:34" pos:end="1:45"><decl pos:start="1:34" pos:end="1:45"><type pos:start="1:34" pos:end="1:39"><name pos:start="1:34" pos:end="1:37">void</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:45">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:5">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MigrationState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:30">= <expr pos:start="5:25" pos:end="5:30"><name pos:start="5:25" pos:end="5:30">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:37">(<expr pos:start="11:9" pos:end="11:36"><name pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:9">s</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:16">state</name></name> <operator pos:start="11:18" pos:end="11:19">!=</operator> <name pos:start="11:21" pos:end="11:36">MIG_STATE_ACTIVE</name></expr>)</condition> <block pos:start="11:39" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:15">

        <expr_stmt pos:start="13:9" pos:end="13:69"><expr pos:start="13:9" pos:end="13:68"><call pos:start="13:9" pos:end="13:68"><name pos:start="13:9" pos:end="13:15">DPRINTF</name><argument_list pos:start="13:16" pos:end="13:68">(<argument pos:start="13:17" pos:end="13:67"><expr pos:start="13:17" pos:end="13:67"><literal type="string" pos:start="13:17" pos:end="13:67">"put_ready returning because of non-active state\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:25"><expr pos:start="21:5" pos:end="21:24"><call pos:start="21:5" pos:end="21:24"><name pos:start="21:5" pos:end="21:11">DPRINTF</name><argument_list pos:start="21:12" pos:end="21:24">(<argument pos:start="21:13" pos:end="21:23"><expr pos:start="21:13" pos:end="21:23"><literal type="string" pos:start="21:13" pos:end="21:23">"iterate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:53"><expr pos:start="23:5" pos:end="23:52"><name pos:start="23:5" pos:end="23:7">ret</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:52"><name pos:start="23:11" pos:end="23:35">qemu_savevm_state_iterate</name><argument_list pos:start="23:36" pos:end="23:52">(<argument pos:start="23:37" pos:end="23:42"><expr pos:start="23:37" pos:end="23:42"><name pos:start="23:37" pos:end="23:42"><name pos:start="23:37" pos:end="23:37">s</name><operator pos:start="23:38" pos:end="23:39">-&gt;</operator><name pos:start="23:40" pos:end="23:42">mon</name></name></expr></argument>, <argument pos:start="23:45" pos:end="23:51"><expr pos:start="23:45" pos:end="23:51"><name pos:start="23:45" pos:end="23:51"><name pos:start="23:45" pos:end="23:45">s</name><operator pos:start="23:46" pos:end="23:47">-&gt;</operator><name pos:start="23:48" pos:end="23:51">file</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="61:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:16">(<expr pos:start="25:9" pos:end="25:15"><name pos:start="25:9" pos:end="25:11">ret</name> <operator pos:start="25:13" pos:end="25:13">&lt;</operator> <literal type="number" pos:start="25:15" pos:end="25:15">0</literal></expr>)</condition> <block pos:start="25:18" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:28">

        <expr_stmt pos:start="27:9" pos:end="27:28"><expr pos:start="27:9" pos:end="27:27"><call pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:24">migrate_fd_error</name><argument_list pos:start="27:25" pos:end="27:27">(<argument pos:start="27:26" pos:end="27:26"><expr pos:start="27:26" pos:end="27:26"><name pos:start="27:26" pos:end="27:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="29:7" pos:end="61:5">else if <condition pos:start="29:15" pos:end="29:24">(<expr pos:start="29:16" pos:end="29:23"><name pos:start="29:16" pos:end="29:18">ret</name> <operator pos:start="29:20" pos:end="29:21">==</operator> <literal type="number" pos:start="29:23" pos:end="29:23">1</literal></expr>)</condition> <block pos:start="29:26" pos:end="61:5">{<block_content pos:start="31:9" pos:end="59:9">

        <decl_stmt pos:start="31:9" pos:end="31:51"><decl pos:start="31:9" pos:end="31:50"><type pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">int</name></type> <name pos:start="31:13" pos:end="31:26">old_vm_running</name> <init pos:start="31:28" pos:end="31:50">= <expr pos:start="31:30" pos:end="31:50"><call pos:start="31:30" pos:end="31:50"><name pos:start="31:30" pos:end="31:48">runstate_is_running</name><argument_list pos:start="31:49" pos:end="31:50">()</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="35:9" pos:end="35:36"><expr pos:start="35:9" pos:end="35:35"><call pos:start="35:9" pos:end="35:35"><name pos:start="35:9" pos:end="35:15">DPRINTF</name><argument_list pos:start="35:16" pos:end="35:35">(<argument pos:start="35:17" pos:end="35:34"><expr pos:start="35:17" pos:end="35:34"><literal type="string" pos:start="35:17" pos:end="35:34">"done iterating\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:54"><expr pos:start="37:9" pos:end="37:53"><call pos:start="37:9" pos:end="37:53"><name pos:start="37:9" pos:end="37:27">vm_stop_force_state</name><argument_list pos:start="37:28" pos:end="37:53">(<argument pos:start="37:29" pos:end="37:52"><expr pos:start="37:29" pos:end="37:52"><name pos:start="37:29" pos:end="37:52">RUN_STATE_FINISH_MIGRATE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="41:9" pos:end="49:9"><if pos:start="41:9" pos:end="45:9">if <condition pos:start="41:12" pos:end="41:60">(<expr pos:start="41:13" pos:end="41:59"><call pos:start="41:13" pos:end="41:55"><name pos:start="41:13" pos:end="41:38">qemu_savevm_state_complete</name><argument_list pos:start="41:39" pos:end="41:55">(<argument pos:start="41:40" pos:end="41:45"><expr pos:start="41:40" pos:end="41:45"><name pos:start="41:40" pos:end="41:45"><name pos:start="41:40" pos:end="41:40">s</name><operator pos:start="41:41" pos:end="41:42">-&gt;</operator><name pos:start="41:43" pos:end="41:45">mon</name></name></expr></argument>, <argument pos:start="41:48" pos:end="41:54"><expr pos:start="41:48" pos:end="41:54"><name pos:start="41:48" pos:end="41:54"><name pos:start="41:48" pos:end="41:48">s</name><operator pos:start="41:49" pos:end="41:50">-&gt;</operator><name pos:start="41:51" pos:end="41:54">file</name></name></expr></argument>)</argument_list></call> <operator pos:start="41:57" pos:end="41:57">&lt;</operator> <literal type="number" pos:start="41:59" pos:end="41:59">0</literal></expr>)</condition> <block pos:start="41:62" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:32">

            <expr_stmt pos:start="43:13" pos:end="43:32"><expr pos:start="43:13" pos:end="43:31"><call pos:start="43:13" pos:end="43:31"><name pos:start="43:13" pos:end="43:28">migrate_fd_error</name><argument_list pos:start="43:29" pos:end="43:31">(<argument pos:start="43:30" pos:end="43:30"><expr pos:start="43:30" pos:end="43:30"><name pos:start="43:30" pos:end="43:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="45:11" pos:end="49:9">else <block pos:start="45:16" pos:end="49:9">{<block_content pos:start="47:13" pos:end="47:36">

            <expr_stmt pos:start="47:13" pos:end="47:36"><expr pos:start="47:13" pos:end="47:35"><call pos:start="47:13" pos:end="47:35"><name pos:start="47:13" pos:end="47:32">migrate_fd_completed</name><argument_list pos:start="47:33" pos:end="47:35">(<argument pos:start="47:34" pos:end="47:34"><expr pos:start="47:34" pos:end="47:34"><name pos:start="47:34" pos:end="47:34">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="51:9" pos:end="59:9"><if pos:start="51:9" pos:end="59:9">if <condition pos:start="51:12" pos:end="51:44">(<expr pos:start="51:13" pos:end="51:43"><name pos:start="51:13" pos:end="51:20"><name pos:start="51:13" pos:end="51:13">s</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:20">state</name></name> <operator pos:start="51:22" pos:end="51:23">!=</operator> <name pos:start="51:25" pos:end="51:43">MIG_STATE_COMPLETED</name></expr>)</condition> <block pos:start="51:46" pos:end="59:9">{<block_content pos:start="53:13" pos:end="57:13">

            <if_stmt pos:start="53:13" pos:end="57:13"><if pos:start="53:13" pos:end="57:13">if <condition pos:start="53:16" pos:end="53:31">(<expr pos:start="53:17" pos:end="53:30"><name pos:start="53:17" pos:end="53:30">old_vm_running</name></expr>)</condition> <block pos:start="53:33" pos:end="57:13">{<block_content pos:start="55:17" pos:end="55:27">

                <expr_stmt pos:start="55:17" pos:end="55:27"><expr pos:start="55:17" pos:end="55:26"><call pos:start="55:17" pos:end="55:26"><name pos:start="55:17" pos:end="55:24">vm_start</name><argument_list pos:start="55:25" pos:end="55:26">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
