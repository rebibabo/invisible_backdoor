<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10818.c" pos:tabs="8"><function pos:start="1:1" pos:end="165:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">av_dump_format</name><parameter_list pos:start="1:20" pos:end="3:51">(<parameter pos:start="1:21" pos:end="1:39"><decl pos:start="1:21" pos:end="1:39"><type pos:start="1:21" pos:end="1:39"><name pos:start="1:21" pos:end="1:35">AVFormatContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:39">ic</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:50"><decl pos:start="1:42" pos:end="1:50"><type pos:start="1:42" pos:end="1:50"><name pos:start="1:42" pos:end="1:44">int</name></type> <name pos:start="1:46" pos:end="1:50">index</name></decl></parameter>,

                    <parameter pos:start="3:21" pos:end="3:35"><decl pos:start="3:21" pos:end="3:35"><type pos:start="3:21" pos:end="3:35"><specifier pos:start="3:21" pos:end="3:25">const</specifier> <name pos:start="3:27" pos:end="3:30">char</name> <modifier pos:start="3:32" pos:end="3:32">*</modifier></type><name pos:start="3:33" pos:end="3:35">url</name></decl></parameter>, <parameter pos:start="3:38" pos:end="3:50"><decl pos:start="3:38" pos:end="3:50"><type pos:start="3:38" pos:end="3:50"><name pos:start="3:38" pos:end="3:40">int</name></type> <name pos:start="3:42" pos:end="3:50">is_output</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="165:1">{<block_content pos:start="7:5" pos:end="163:21">

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:74"><decl pos:start="9:5" pos:end="9:73"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:20">printed</name> <init pos:start="9:22" pos:end="9:73">= <expr pos:start="9:24" pos:end="9:73"><ternary pos:start="9:24" pos:end="9:73"><condition pos:start="9:24" pos:end="9:39"><expr pos:start="9:24" pos:end="9:37"><name pos:start="9:24" pos:end="9:37"><name pos:start="9:24" pos:end="9:25">ic</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:37">nb_streams</name></name></expr> ?</condition><then pos:start="9:41" pos:end="9:66"> <expr pos:start="9:41" pos:end="9:66"><call pos:start="9:41" pos:end="9:66"><name pos:start="9:41" pos:end="9:50">av_mallocz</name><argument_list pos:start="9:51" pos:end="9:66">(<argument pos:start="9:52" pos:end="9:65"><expr pos:start="9:52" pos:end="9:65"><name pos:start="9:52" pos:end="9:65"><name pos:start="9:52" pos:end="9:53">ic</name><operator pos:start="9:54" pos:end="9:55">-&gt;</operator><name pos:start="9:56" pos:end="9:65">nb_streams</name></name></expr></argument>)</argument_list></call></expr> </then><else pos:start="9:68" pos:end="9:73">: <expr pos:start="9:70" pos:end="9:73"><name pos:start="9:70" pos:end="9:73">NULL</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="11:5" pos:end="13:15"><if pos:start="11:5" pos:end="13:15">if <condition pos:start="11:8" pos:end="11:35">(<expr pos:start="11:9" pos:end="11:34"><name pos:start="11:9" pos:end="11:22"><name pos:start="11:9" pos:end="11:10">ic</name><operator pos:start="11:11" pos:end="11:12">-&gt;</operator><name pos:start="11:13" pos:end="11:22">nb_streams</name></name> <operator pos:start="11:24" pos:end="11:25">&amp;&amp;</operator> <operator pos:start="11:27" pos:end="11:27">!</operator><name pos:start="11:28" pos:end="11:34">printed</name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:15"><block_content pos:start="13:9" pos:end="13:15">

        <return pos:start="13:9" pos:end="13:15">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="25:43"><expr pos:start="17:5" pos:end="25:42"><call pos:start="17:5" pos:end="25:42"><name pos:start="17:5" pos:end="17:10">av_log</name><argument_list pos:start="17:11" pos:end="25:42">(<argument pos:start="17:12" pos:end="17:15"><expr pos:start="17:12" pos:end="17:15"><name pos:start="17:12" pos:end="17:15">NULL</name></expr></argument>, <argument pos:start="17:18" pos:end="17:28"><expr pos:start="17:18" pos:end="17:28"><name pos:start="17:18" pos:end="17:28">AV_LOG_INFO</name></expr></argument>, <argument pos:start="17:31" pos:end="17:54"><expr pos:start="17:31" pos:end="17:54"><literal type="string" pos:start="17:31" pos:end="17:54">"%s #%d, %s, %s '%s':\n"</literal></expr></argument>,

           <argument pos:start="19:12" pos:end="19:41"><expr pos:start="19:12" pos:end="19:41"><ternary pos:start="19:12" pos:end="19:41"><condition pos:start="19:12" pos:end="19:22"><expr pos:start="19:12" pos:end="19:20"><name pos:start="19:12" pos:end="19:20">is_output</name></expr> ?</condition><then pos:start="19:24" pos:end="19:31"> <expr pos:start="19:24" pos:end="19:31"><literal type="string" pos:start="19:24" pos:end="19:31">"Output"</literal></expr> </then><else pos:start="19:33" pos:end="19:41">: <expr pos:start="19:35" pos:end="19:41"><literal type="string" pos:start="19:35" pos:end="19:41">"Input"</literal></expr></else></ternary></expr></argument>,

           <argument pos:start="21:12" pos:end="21:16"><expr pos:start="21:12" pos:end="21:16"><name pos:start="21:12" pos:end="21:16">index</name></expr></argument>,

           <argument pos:start="23:12" pos:end="23:60"><expr pos:start="23:12" pos:end="23:60"><ternary pos:start="23:12" pos:end="23:60"><condition pos:start="23:12" pos:end="23:22"><expr pos:start="23:12" pos:end="23:20"><name pos:start="23:12" pos:end="23:20">is_output</name></expr> ?</condition><then pos:start="23:24" pos:end="23:40"> <expr pos:start="23:24" pos:end="23:40"><name pos:start="23:24" pos:end="23:40"><name pos:start="23:24" pos:end="23:25">ic</name><operator pos:start="23:26" pos:end="23:27">-&gt;</operator><name pos:start="23:28" pos:end="23:34">oformat</name><operator pos:start="23:35" pos:end="23:36">-&gt;</operator><name pos:start="23:37" pos:end="23:40">name</name></name></expr> </then><else pos:start="23:42" pos:end="23:60">: <expr pos:start="23:44" pos:end="23:60"><name pos:start="23:44" pos:end="23:60"><name pos:start="23:44" pos:end="23:45">ic</name><operator pos:start="23:46" pos:end="23:47">-&gt;</operator><name pos:start="23:48" pos:end="23:54">iformat</name><operator pos:start="23:55" pos:end="23:56">-&gt;</operator><name pos:start="23:57" pos:end="23:60">name</name></name></expr></else></ternary></expr></argument>,

           <argument pos:start="25:12" pos:end="25:36"><expr pos:start="25:12" pos:end="25:36"><ternary pos:start="25:12" pos:end="25:36"><condition pos:start="25:12" pos:end="25:22"><expr pos:start="25:12" pos:end="25:20"><name pos:start="25:12" pos:end="25:20">is_output</name></expr> ?</condition><then pos:start="25:24" pos:end="25:27"> <expr pos:start="25:24" pos:end="25:27"><literal type="string" pos:start="25:24" pos:end="25:27">"to"</literal></expr> </then><else pos:start="25:29" pos:end="25:36">: <expr pos:start="25:31" pos:end="25:36"><literal type="string" pos:start="25:31" pos:end="25:36">"from"</literal></expr></else></ternary></expr></argument>, <argument pos:start="25:39" pos:end="25:41"><expr pos:start="25:39" pos:end="25:41"><name pos:start="25:39" pos:end="25:41">url</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:44"><expr pos:start="27:5" pos:end="27:43"><call pos:start="27:5" pos:end="27:43"><name pos:start="27:5" pos:end="27:17">dump_metadata</name><argument_list pos:start="27:18" pos:end="27:43">(<argument pos:start="27:19" pos:end="27:22"><expr pos:start="27:19" pos:end="27:22"><name pos:start="27:19" pos:end="27:22">NULL</name></expr></argument>, <argument pos:start="27:25" pos:end="27:36"><expr pos:start="27:25" pos:end="27:36"><name pos:start="27:25" pos:end="27:36"><name pos:start="27:25" pos:end="27:26">ic</name><operator pos:start="27:27" pos:end="27:28">-&gt;</operator><name pos:start="27:29" pos:end="27:36">metadata</name></name></expr></argument>, <argument pos:start="27:39" pos:end="27:42"><expr pos:start="27:39" pos:end="27:42"><literal type="string" pos:start="27:39" pos:end="27:42">"  "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="91:5"><if pos:start="31:5" pos:end="91:5">if <condition pos:start="31:8" pos:end="31:19">(<expr pos:start="31:9" pos:end="31:18"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:18">is_output</name></expr>)</condition> <block pos:start="31:21" pos:end="91:5">{<block_content pos:start="33:9" pos:end="89:40">

        <expr_stmt pos:start="33:9" pos:end="33:50"><expr pos:start="33:9" pos:end="33:49"><call pos:start="33:9" pos:end="33:49"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="33:49">(<argument pos:start="33:16" pos:end="33:19"><expr pos:start="33:16" pos:end="33:19"><name pos:start="33:16" pos:end="33:19">NULL</name></expr></argument>, <argument pos:start="33:22" pos:end="33:32"><expr pos:start="33:22" pos:end="33:32"><name pos:start="33:22" pos:end="33:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="33:35" pos:end="33:48"><expr pos:start="33:35" pos:end="33:48"><literal type="string" pos:start="33:35" pos:end="33:48">"  Duration: "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="61:9"><if pos:start="35:9" pos:end="57:9">if <condition pos:start="35:12" pos:end="35:43">(<expr pos:start="35:13" pos:end="35:42"><name pos:start="35:13" pos:end="35:24"><name pos:start="35:13" pos:end="35:14">ic</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:24">duration</name></name> <operator pos:start="35:26" pos:end="35:27">!=</operator> <name pos:start="35:29" pos:end="35:42">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="35:45" pos:end="57:9">{<block_content pos:start="37:13" pos:end="55:46">

            <decl_stmt pos:start="37:13" pos:end="37:38"><decl pos:start="37:13" pos:end="37:21"><type pos:start="37:13" pos:end="37:15"><name pos:start="37:13" pos:end="37:15">int</name></type> <name pos:start="37:17" pos:end="37:21">hours</name></decl>, <decl pos:start="37:24" pos:end="37:27"><type ref="prev" pos:start="37:13" pos:end="37:15"/><name pos:start="37:24" pos:end="37:27">mins</name></decl>, <decl pos:start="37:30" pos:end="37:33"><type ref="prev" pos:start="37:13" pos:end="37:15"/><name pos:start="37:30" pos:end="37:33">secs</name></decl>, <decl pos:start="37:36" pos:end="37:37"><type ref="prev" pos:start="37:13" pos:end="37:15"/><name pos:start="37:36" pos:end="37:37">us</name></decl>;</decl_stmt>

            <decl_stmt pos:start="39:13" pos:end="39:92"><decl pos:start="39:13" pos:end="39:91"><type pos:start="39:13" pos:end="39:19"><name pos:start="39:13" pos:end="39:19">int64_t</name></type> <name pos:start="39:21" pos:end="39:28">duration</name> <init pos:start="39:30" pos:end="39:91">= <expr pos:start="39:32" pos:end="39:91"><name pos:start="39:32" pos:end="39:43"><name pos:start="39:32" pos:end="39:33">ic</name><operator pos:start="39:34" pos:end="39:35">-&gt;</operator><name pos:start="39:36" pos:end="39:43">duration</name></name> <operator pos:start="39:45" pos:end="39:45">+</operator> <operator pos:start="39:47" pos:end="39:47">(</operator><ternary pos:start="39:48" pos:end="39:90"><condition pos:start="39:48" pos:end="39:81"><expr pos:start="39:48" pos:end="39:79"><name pos:start="39:48" pos:end="39:59"><name pos:start="39:48" pos:end="39:49">ic</name><operator pos:start="39:50" pos:end="39:51">-&gt;</operator><name pos:start="39:52" pos:end="39:59">duration</name></name> <operator pos:start="39:61" pos:end="39:62">&lt;=</operator> <name pos:start="39:64" pos:end="39:72">INT64_MAX</name> <operator pos:start="39:74" pos:end="39:74">-</operator> <literal type="number" pos:start="39:76" pos:end="39:79">5000</literal></expr> ?</condition><then pos:start="39:83" pos:end="39:86"> <expr pos:start="39:83" pos:end="39:86"><literal type="number" pos:start="39:83" pos:end="39:86">5000</literal></expr> </then><else pos:start="39:88" pos:end="39:90">: <expr pos:start="39:90" pos:end="39:90"><literal type="number" pos:start="39:90" pos:end="39:90">0</literal></expr></else></ternary><operator pos:start="39:91" pos:end="39:91">)</operator></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:44"><expr pos:start="41:13" pos:end="41:43"><name pos:start="41:13" pos:end="41:16">secs</name>  <operator pos:start="41:19" pos:end="41:19">=</operator> <name pos:start="41:21" pos:end="41:28">duration</name> <operator pos:start="41:30" pos:end="41:30">/</operator> <name pos:start="41:32" pos:end="41:43">AV_TIME_BASE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:44"><expr pos:start="43:13" pos:end="43:43"><name pos:start="43:13" pos:end="43:14">us</name>    <operator pos:start="43:19" pos:end="43:19">=</operator> <name pos:start="43:21" pos:end="43:28">duration</name> <operator pos:start="43:30" pos:end="43:30">%</operator> <name pos:start="43:32" pos:end="43:43">AV_TIME_BASE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:30"><expr pos:start="45:13" pos:end="45:29"><name pos:start="45:13" pos:end="45:16">mins</name>  <operator pos:start="45:19" pos:end="45:19">=</operator> <name pos:start="45:21" pos:end="45:24">secs</name> <operator pos:start="45:26" pos:end="45:26">/</operator> <literal type="number" pos:start="45:28" pos:end="45:29">60</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:23"><expr pos:start="47:13" pos:end="47:22"><name pos:start="47:13" pos:end="47:16">secs</name> <operator pos:start="47:18" pos:end="47:19">%=</operator> <literal type="number" pos:start="47:21" pos:end="47:22">60</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:30"><expr pos:start="49:13" pos:end="49:29"><name pos:start="49:13" pos:end="49:17">hours</name> <operator pos:start="49:19" pos:end="49:19">=</operator> <name pos:start="49:21" pos:end="49:24">mins</name> <operator pos:start="49:26" pos:end="49:26">/</operator> <literal type="number" pos:start="49:28" pos:end="49:29">60</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:23"><expr pos:start="51:13" pos:end="51:22"><name pos:start="51:13" pos:end="51:16">mins</name> <operator pos:start="51:18" pos:end="51:19">%=</operator> <literal type="number" pos:start="51:21" pos:end="51:22">60</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="55:46"><expr pos:start="53:13" pos:end="55:45"><call pos:start="53:13" pos:end="55:45"><name pos:start="53:13" pos:end="53:18">av_log</name><argument_list pos:start="53:19" pos:end="55:45">(<argument pos:start="53:20" pos:end="53:23"><expr pos:start="53:20" pos:end="53:23"><name pos:start="53:20" pos:end="53:23">NULL</name></expr></argument>, <argument pos:start="53:26" pos:end="53:36"><expr pos:start="53:26" pos:end="53:36"><name pos:start="53:26" pos:end="53:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="53:39" pos:end="53:59"><expr pos:start="53:39" pos:end="53:59"><literal type="string" pos:start="53:39" pos:end="53:59">"%02d:%02d:%02d.%02d"</literal></expr></argument>, <argument pos:start="53:62" pos:end="53:66"><expr pos:start="53:62" pos:end="53:66"><name pos:start="53:62" pos:end="53:66">hours</name></expr></argument>, <argument pos:start="53:69" pos:end="53:72"><expr pos:start="53:69" pos:end="53:72"><name pos:start="53:69" pos:end="53:72">mins</name></expr></argument>, <argument pos:start="53:75" pos:end="53:78"><expr pos:start="53:75" pos:end="53:78"><name pos:start="53:75" pos:end="53:78">secs</name></expr></argument>,

                   <argument pos:start="55:20" pos:end="55:44"><expr pos:start="55:20" pos:end="55:44"><operator pos:start="55:20" pos:end="55:20">(</operator><literal type="number" pos:start="55:21" pos:end="55:23">100</literal> <operator pos:start="55:25" pos:end="55:25">*</operator> <name pos:start="55:27" pos:end="55:28">us</name><operator pos:start="55:29" pos:end="55:29">)</operator> <operator pos:start="55:31" pos:end="55:31">/</operator> <name pos:start="55:33" pos:end="55:44">AV_TIME_BASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="57:11" pos:end="61:9">else <block pos:start="57:16" pos:end="61:9">{<block_content pos:start="59:13" pos:end="59:45">

            <expr_stmt pos:start="59:13" pos:end="59:45"><expr pos:start="59:13" pos:end="59:44"><call pos:start="59:13" pos:end="59:44"><name pos:start="59:13" pos:end="59:18">av_log</name><argument_list pos:start="59:19" pos:end="59:44">(<argument pos:start="59:20" pos:end="59:23"><expr pos:start="59:20" pos:end="59:23"><name pos:start="59:20" pos:end="59:23">NULL</name></expr></argument>, <argument pos:start="59:26" pos:end="59:36"><expr pos:start="59:26" pos:end="59:36"><name pos:start="59:26" pos:end="59:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="59:39" pos:end="59:43"><expr pos:start="59:39" pos:end="59:43"><literal type="string" pos:start="59:39" pos:end="59:43">"N/A"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="63:9" pos:end="77:9"><if pos:start="63:9" pos:end="77:9">if <condition pos:start="63:12" pos:end="63:45">(<expr pos:start="63:13" pos:end="63:44"><name pos:start="63:13" pos:end="63:26"><name pos:start="63:13" pos:end="63:14">ic</name><operator pos:start="63:15" pos:end="63:16">-&gt;</operator><name pos:start="63:17" pos:end="63:26">start_time</name></name> <operator pos:start="63:28" pos:end="63:29">!=</operator> <name pos:start="63:31" pos:end="63:44">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="63:47" pos:end="77:9">{<block_content pos:start="65:13" pos:end="75:70">

            <decl_stmt pos:start="65:13" pos:end="65:25"><decl pos:start="65:13" pos:end="65:20"><type pos:start="65:13" pos:end="65:15"><name pos:start="65:13" pos:end="65:15">int</name></type> <name pos:start="65:17" pos:end="65:20">secs</name></decl>, <decl pos:start="65:23" pos:end="65:24"><type ref="prev" pos:start="65:13" pos:end="65:15"/><name pos:start="65:23" pos:end="65:24">us</name></decl>;</decl_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:51"><expr pos:start="67:13" pos:end="67:50"><call pos:start="67:13" pos:end="67:50"><name pos:start="67:13" pos:end="67:18">av_log</name><argument_list pos:start="67:19" pos:end="67:50">(<argument pos:start="67:20" pos:end="67:23"><expr pos:start="67:20" pos:end="67:23"><name pos:start="67:20" pos:end="67:23">NULL</name></expr></argument>, <argument pos:start="67:26" pos:end="67:36"><expr pos:start="67:26" pos:end="67:36"><name pos:start="67:26" pos:end="67:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="67:39" pos:end="67:49"><expr pos:start="67:39" pos:end="67:49"><literal type="string" pos:start="67:39" pos:end="67:49">", start: "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:49"><expr pos:start="69:13" pos:end="69:48"><name pos:start="69:13" pos:end="69:16">secs</name> <operator pos:start="69:18" pos:end="69:18">=</operator> <name pos:start="69:20" pos:end="69:33"><name pos:start="69:20" pos:end="69:21">ic</name><operator pos:start="69:22" pos:end="69:23">-&gt;</operator><name pos:start="69:24" pos:end="69:33">start_time</name></name> <operator pos:start="69:35" pos:end="69:35">/</operator> <name pos:start="69:37" pos:end="69:48">AV_TIME_BASE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:56"><expr pos:start="71:13" pos:end="71:55"><name pos:start="71:13" pos:end="71:14">us</name>   <operator pos:start="71:18" pos:end="71:18">=</operator> <call pos:start="71:20" pos:end="71:55"><name pos:start="71:20" pos:end="71:24">llabs</name><argument_list pos:start="71:25" pos:end="71:55">(<argument pos:start="71:26" pos:end="71:54"><expr pos:start="71:26" pos:end="71:54"><name pos:start="71:26" pos:end="71:39"><name pos:start="71:26" pos:end="71:27">ic</name><operator pos:start="71:28" pos:end="71:29">-&gt;</operator><name pos:start="71:30" pos:end="71:39">start_time</name></name> <operator pos:start="71:41" pos:end="71:41">%</operator> <name pos:start="71:43" pos:end="71:54">AV_TIME_BASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="75:70"><expr pos:start="73:13" pos:end="75:69"><call pos:start="73:13" pos:end="75:69"><name pos:start="73:13" pos:end="73:18">av_log</name><argument_list pos:start="73:19" pos:end="75:69">(<argument pos:start="73:20" pos:end="73:23"><expr pos:start="73:20" pos:end="73:23"><name pos:start="73:20" pos:end="73:23">NULL</name></expr></argument>, <argument pos:start="73:26" pos:end="73:36"><expr pos:start="73:26" pos:end="73:36"><name pos:start="73:26" pos:end="73:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="73:39" pos:end="73:47"><expr pos:start="73:39" pos:end="73:47"><literal type="string" pos:start="73:39" pos:end="73:47">"%d.%06d"</literal></expr></argument>,

                   <argument pos:start="75:20" pos:end="75:23"><expr pos:start="75:20" pos:end="75:23"><name pos:start="75:20" pos:end="75:23">secs</name></expr></argument>, <argument pos:start="75:26" pos:end="75:68"><expr pos:start="75:26" pos:end="75:68"><operator pos:start="75:26" pos:end="75:26">(</operator><name pos:start="75:27" pos:end="75:29">int</name><operator pos:start="75:30" pos:end="75:30">)</operator> <call pos:start="75:32" pos:end="75:68"><name pos:start="75:32" pos:end="75:41">av_rescale</name><argument_list pos:start="75:42" pos:end="75:68">(<argument pos:start="75:43" pos:end="75:44"><expr pos:start="75:43" pos:end="75:44"><name pos:start="75:43" pos:end="75:44">us</name></expr></argument>, <argument pos:start="75:47" pos:end="75:53"><expr pos:start="75:47" pos:end="75:53"><literal type="number" pos:start="75:47" pos:end="75:53">1000000</literal></expr></argument>, <argument pos:start="75:56" pos:end="75:67"><expr pos:start="75:56" pos:end="75:67"><name pos:start="75:56" pos:end="75:67">AV_TIME_BASE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:49"><expr pos:start="79:9" pos:end="79:48"><call pos:start="79:9" pos:end="79:48"><name pos:start="79:9" pos:end="79:14">av_log</name><argument_list pos:start="79:15" pos:end="79:48">(<argument pos:start="79:16" pos:end="79:19"><expr pos:start="79:16" pos:end="79:19"><name pos:start="79:16" pos:end="79:19">NULL</name></expr></argument>, <argument pos:start="79:22" pos:end="79:32"><expr pos:start="79:22" pos:end="79:32"><name pos:start="79:22" pos:end="79:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="79:35" pos:end="79:47"><expr pos:start="79:35" pos:end="79:47"><literal type="string" pos:start="79:35" pos:end="79:47">", bitrate: "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="81:9" pos:end="87:45"><if pos:start="81:9" pos:end="83:86">if <condition pos:start="81:12" pos:end="81:25">(<expr pos:start="81:13" pos:end="81:24"><name pos:start="81:13" pos:end="81:24"><name pos:start="81:13" pos:end="81:14">ic</name><operator pos:start="81:15" pos:end="81:16">-&gt;</operator><name pos:start="81:17" pos:end="81:24">bit_rate</name></name></expr>)</condition><block type="pseudo" pos:start="83:13" pos:end="83:86"><block_content pos:start="83:13" pos:end="83:86">

            <expr_stmt pos:start="83:13" pos:end="83:86"><expr pos:start="83:13" pos:end="83:85"><call pos:start="83:13" pos:end="83:85"><name pos:start="83:13" pos:end="83:18">av_log</name><argument_list pos:start="83:19" pos:end="83:85">(<argument pos:start="83:20" pos:end="83:23"><expr pos:start="83:20" pos:end="83:23"><name pos:start="83:20" pos:end="83:23">NULL</name></expr></argument>, <argument pos:start="83:26" pos:end="83:36"><expr pos:start="83:26" pos:end="83:36"><name pos:start="83:26" pos:end="83:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="83:39" pos:end="83:54"><expr pos:start="83:39" pos:end="83:54"><literal type="string" pos:start="83:39" pos:end="83:41">"%"</literal><name pos:start="83:42" pos:end="83:47">PRId64</name><literal type="string" pos:start="83:48" pos:end="83:54">" kb/s"</literal></expr></argument>, <argument pos:start="83:57" pos:end="83:84"><expr pos:start="83:57" pos:end="83:84"><operator pos:start="83:57" pos:end="83:57">(</operator><name pos:start="83:58" pos:end="83:64">int64_t</name><operator pos:start="83:65" pos:end="83:65">)</operator><name pos:start="83:66" pos:end="83:77"><name pos:start="83:66" pos:end="83:67">ic</name><operator pos:start="83:68" pos:end="83:69">-&gt;</operator><name pos:start="83:70" pos:end="83:77">bit_rate</name></name> <operator pos:start="83:79" pos:end="83:79">/</operator> <literal type="number" pos:start="83:81" pos:end="83:84">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="85:9" pos:end="87:45">else<block type="pseudo" pos:start="87:13" pos:end="87:45"><block_content pos:start="87:13" pos:end="87:45">

            <expr_stmt pos:start="87:13" pos:end="87:45"><expr pos:start="87:13" pos:end="87:44"><call pos:start="87:13" pos:end="87:44"><name pos:start="87:13" pos:end="87:18">av_log</name><argument_list pos:start="87:19" pos:end="87:44">(<argument pos:start="87:20" pos:end="87:23"><expr pos:start="87:20" pos:end="87:23"><name pos:start="87:20" pos:end="87:23">NULL</name></expr></argument>, <argument pos:start="87:26" pos:end="87:36"><expr pos:start="87:26" pos:end="87:36"><name pos:start="87:26" pos:end="87:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="87:39" pos:end="87:43"><expr pos:start="87:39" pos:end="87:43"><literal type="string" pos:start="87:39" pos:end="87:43">"N/A"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:40"><expr pos:start="89:9" pos:end="89:39"><call pos:start="89:9" pos:end="89:39"><name pos:start="89:9" pos:end="89:14">av_log</name><argument_list pos:start="89:15" pos:end="89:39">(<argument pos:start="89:16" pos:end="89:19"><expr pos:start="89:16" pos:end="89:19"><name pos:start="89:16" pos:end="89:19">NULL</name></expr></argument>, <argument pos:start="89:22" pos:end="89:32"><expr pos:start="89:22" pos:end="89:32"><name pos:start="89:22" pos:end="89:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="89:35" pos:end="89:38"><expr pos:start="89:35" pos:end="89:38"><literal type="string" pos:start="89:35" pos:end="89:38">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="95:5" pos:end="113:5">for <control pos:start="95:9" pos:end="95:41">(<init pos:start="95:10" pos:end="95:15"><expr pos:start="95:10" pos:end="95:14"><name pos:start="95:10" pos:end="95:10">i</name> <operator pos:start="95:12" pos:end="95:12">=</operator> <literal type="number" pos:start="95:14" pos:end="95:14">0</literal></expr>;</init> <condition pos:start="95:17" pos:end="95:36"><expr pos:start="95:17" pos:end="95:35"><name pos:start="95:17" pos:end="95:17">i</name> <operator pos:start="95:19" pos:end="95:19">&lt;</operator> <name pos:start="95:21" pos:end="95:35"><name pos:start="95:21" pos:end="95:22">ic</name><operator pos:start="95:23" pos:end="95:24">-&gt;</operator><name pos:start="95:25" pos:end="95:35">nb_chapters</name></name></expr>;</condition> <incr pos:start="95:38" pos:end="95:40"><expr pos:start="95:38" pos:end="95:40"><name pos:start="95:38" pos:end="95:38">i</name><operator pos:start="95:39" pos:end="95:40">++</operator></expr></incr>)</control> <block pos:start="95:43" pos:end="113:5">{<block_content pos:start="97:9" pos:end="111:50">

        <decl_stmt pos:start="97:9" pos:end="97:40"><decl pos:start="97:9" pos:end="97:39"><type pos:start="97:9" pos:end="97:19"><name pos:start="97:9" pos:end="97:17">AVChapter</name> <modifier pos:start="97:19" pos:end="97:19">*</modifier></type><name pos:start="97:20" pos:end="97:21">ch</name> <init pos:start="97:23" pos:end="97:39">= <expr pos:start="97:25" pos:end="97:39"><name pos:start="97:25" pos:end="97:39"><name pos:start="97:25" pos:end="97:26">ic</name><operator pos:start="97:27" pos:end="97:28">-&gt;</operator><name pos:start="97:29" pos:end="97:36">chapters</name><index pos:start="97:37" pos:end="97:39">[<expr pos:start="97:38" pos:end="97:38"><name pos:start="97:38" pos:end="97:38">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:68"><expr pos:start="99:9" pos:end="99:67"><call pos:start="99:9" pos:end="99:67"><name pos:start="99:9" pos:end="99:14">av_log</name><argument_list pos:start="99:15" pos:end="99:67">(<argument pos:start="99:16" pos:end="99:19"><expr pos:start="99:16" pos:end="99:19"><name pos:start="99:16" pos:end="99:19">NULL</name></expr></argument>, <argument pos:start="99:22" pos:end="99:32"><expr pos:start="99:22" pos:end="99:32"><name pos:start="99:22" pos:end="99:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="99:35" pos:end="99:56"><expr pos:start="99:35" pos:end="99:56"><literal type="string" pos:start="99:35" pos:end="99:56">"    Chapter #%d:%d: "</literal></expr></argument>, <argument pos:start="99:59" pos:end="99:63"><expr pos:start="99:59" pos:end="99:63"><name pos:start="99:59" pos:end="99:63">index</name></expr></argument>, <argument pos:start="99:66" pos:end="99:66"><expr pos:start="99:66" pos:end="99:66"><name pos:start="99:66" pos:end="99:66">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="103:64"><expr pos:start="101:9" pos:end="103:63"><call pos:start="101:9" pos:end="103:63"><name pos:start="101:9" pos:end="101:14">av_log</name><argument_list pos:start="101:15" pos:end="103:63">(<argument pos:start="101:16" pos:end="101:19"><expr pos:start="101:16" pos:end="101:19"><name pos:start="101:16" pos:end="101:19">NULL</name></expr></argument>, <argument pos:start="101:22" pos:end="101:32"><expr pos:start="101:22" pos:end="101:32"><name pos:start="101:22" pos:end="101:32">AV_LOG_INFO</name></expr></argument>,

               <argument pos:start="103:16" pos:end="103:27"><expr pos:start="103:16" pos:end="103:27"><literal type="string" pos:start="103:16" pos:end="103:27">"start %f, "</literal></expr></argument>, <argument pos:start="103:30" pos:end="103:62"><expr pos:start="103:30" pos:end="103:62"><name pos:start="103:30" pos:end="103:38"><name pos:start="103:30" pos:end="103:31">ch</name><operator pos:start="103:32" pos:end="103:33">-&gt;</operator><name pos:start="103:34" pos:end="103:38">start</name></name> <operator pos:start="103:40" pos:end="103:40">*</operator> <call pos:start="103:42" pos:end="103:62"><name pos:start="103:42" pos:end="103:47">av_q2d</name><argument_list pos:start="103:48" pos:end="103:62">(<argument pos:start="103:49" pos:end="103:61"><expr pos:start="103:49" pos:end="103:61"><name pos:start="103:49" pos:end="103:61"><name pos:start="103:49" pos:end="103:50">ch</name><operator pos:start="103:51" pos:end="103:52">-&gt;</operator><name pos:start="103:53" pos:end="103:61">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="107:60"><expr pos:start="105:9" pos:end="107:59"><call pos:start="105:9" pos:end="107:59"><name pos:start="105:9" pos:end="105:14">av_log</name><argument_list pos:start="105:15" pos:end="107:59">(<argument pos:start="105:16" pos:end="105:19"><expr pos:start="105:16" pos:end="105:19"><name pos:start="105:16" pos:end="105:19">NULL</name></expr></argument>, <argument pos:start="105:22" pos:end="105:32"><expr pos:start="105:22" pos:end="105:32"><name pos:start="105:22" pos:end="105:32">AV_LOG_INFO</name></expr></argument>,

               <argument pos:start="107:16" pos:end="107:25"><expr pos:start="107:16" pos:end="107:25"><literal type="string" pos:start="107:16" pos:end="107:25">"end %f\n"</literal></expr></argument>, <argument pos:start="107:28" pos:end="107:58"><expr pos:start="107:28" pos:end="107:58"><name pos:start="107:28" pos:end="107:34"><name pos:start="107:28" pos:end="107:29">ch</name><operator pos:start="107:30" pos:end="107:31">-&gt;</operator><name pos:start="107:32" pos:end="107:34">end</name></name> <operator pos:start="107:36" pos:end="107:36">*</operator> <call pos:start="107:38" pos:end="107:58"><name pos:start="107:38" pos:end="107:43">av_q2d</name><argument_list pos:start="107:44" pos:end="107:58">(<argument pos:start="107:45" pos:end="107:57"><expr pos:start="107:45" pos:end="107:57"><name pos:start="107:45" pos:end="107:57"><name pos:start="107:45" pos:end="107:46">ch</name><operator pos:start="107:47" pos:end="107:48">-&gt;</operator><name pos:start="107:49" pos:end="107:57">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="111:9" pos:end="111:50"><expr pos:start="111:9" pos:end="111:49"><call pos:start="111:9" pos:end="111:49"><name pos:start="111:9" pos:end="111:21">dump_metadata</name><argument_list pos:start="111:22" pos:end="111:49">(<argument pos:start="111:23" pos:end="111:26"><expr pos:start="111:23" pos:end="111:26"><name pos:start="111:23" pos:end="111:26">NULL</name></expr></argument>, <argument pos:start="111:29" pos:end="111:40"><expr pos:start="111:29" pos:end="111:40"><name pos:start="111:29" pos:end="111:40"><name pos:start="111:29" pos:end="111:30">ch</name><operator pos:start="111:31" pos:end="111:32">-&gt;</operator><name pos:start="111:33" pos:end="111:40">metadata</name></name></expr></argument>, <argument pos:start="111:43" pos:end="111:48"><expr pos:start="111:43" pos:end="111:48"><literal type="string" pos:start="111:43" pos:end="111:48">"    "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="117:5" pos:end="151:5"><if pos:start="117:5" pos:end="151:5">if <condition pos:start="117:8" pos:end="117:24">(<expr pos:start="117:9" pos:end="117:23"><name pos:start="117:9" pos:end="117:23"><name pos:start="117:9" pos:end="117:10">ic</name><operator pos:start="117:11" pos:end="117:12">-&gt;</operator><name pos:start="117:13" pos:end="117:23">nb_programs</name></name></expr>)</condition> <block pos:start="117:26" pos:end="151:5">{<block_content pos:start="119:9" pos:end="149:56">

        <decl_stmt pos:start="119:9" pos:end="119:28"><decl pos:start="119:9" pos:end="119:13"><type pos:start="119:9" pos:end="119:11"><name pos:start="119:9" pos:end="119:11">int</name></type> <name pos:start="119:13" pos:end="119:13">j</name></decl>, <decl pos:start="119:16" pos:end="119:16"><type ref="prev" pos:start="119:9" pos:end="119:11"/><name pos:start="119:16" pos:end="119:16">k</name></decl>, <decl pos:start="119:19" pos:end="119:27"><type ref="prev" pos:start="119:9" pos:end="119:11"/><name pos:start="119:19" pos:end="119:23">total</name> <init pos:start="119:25" pos:end="119:27">= <expr pos:start="119:27" pos:end="119:27"><literal type="number" pos:start="119:27" pos:end="119:27">0</literal></expr></init></decl>;</decl_stmt>

        <for pos:start="121:9" pos:end="145:9">for <control pos:start="121:13" pos:end="121:45">(<init pos:start="121:14" pos:end="121:19"><expr pos:start="121:14" pos:end="121:18"><name pos:start="121:14" pos:end="121:14">j</name> <operator pos:start="121:16" pos:end="121:16">=</operator> <literal type="number" pos:start="121:18" pos:end="121:18">0</literal></expr>;</init> <condition pos:start="121:21" pos:end="121:40"><expr pos:start="121:21" pos:end="121:39"><name pos:start="121:21" pos:end="121:21">j</name> <operator pos:start="121:23" pos:end="121:23">&lt;</operator> <name pos:start="121:25" pos:end="121:39"><name pos:start="121:25" pos:end="121:26">ic</name><operator pos:start="121:27" pos:end="121:28">-&gt;</operator><name pos:start="121:29" pos:end="121:39">nb_programs</name></name></expr>;</condition> <incr pos:start="121:42" pos:end="121:44"><expr pos:start="121:42" pos:end="121:44"><name pos:start="121:42" pos:end="121:42">j</name><operator pos:start="121:43" pos:end="121:44">++</operator></expr></incr>)</control> <block pos:start="121:47" pos:end="145:9">{<block_content pos:start="123:13" pos:end="143:56">

            <decl_stmt pos:start="123:13" pos:end="125:67"><decl pos:start="123:13" pos:end="125:66"><type pos:start="123:13" pos:end="123:31"><name pos:start="123:13" pos:end="123:29">AVDictionaryEntry</name> <modifier pos:start="123:31" pos:end="123:31">*</modifier></type><name pos:start="123:32" pos:end="123:35">name</name> <init pos:start="123:37" pos:end="125:66">= <expr pos:start="123:39" pos:end="125:66"><call pos:start="123:39" pos:end="125:66"><name pos:start="123:39" pos:end="123:49">av_dict_get</name><argument_list pos:start="123:50" pos:end="125:66">(<argument pos:start="123:51" pos:end="123:75"><expr pos:start="123:51" pos:end="123:75"><name pos:start="123:51" pos:end="123:65"><name pos:start="123:51" pos:end="123:52">ic</name><operator pos:start="123:53" pos:end="123:54">-&gt;</operator><name pos:start="123:55" pos:end="123:62">programs</name><index pos:start="123:63" pos:end="123:65">[<expr pos:start="123:64" pos:end="123:64"><name pos:start="123:64" pos:end="123:64">j</name></expr>]</index></name><operator pos:start="123:66" pos:end="123:67">-&gt;</operator><name pos:start="123:68" pos:end="123:75">metadata</name></expr></argument>,

                                                  <argument pos:start="125:51" pos:end="125:56"><expr pos:start="125:51" pos:end="125:56"><literal type="string" pos:start="125:51" pos:end="125:56">"name"</literal></expr></argument>, <argument pos:start="125:59" pos:end="125:62"><expr pos:start="125:59" pos:end="125:62"><name pos:start="125:59" pos:end="125:62">NULL</name></expr></argument>, <argument pos:start="125:65" pos:end="125:65"><expr pos:start="125:65" pos:end="125:65"><literal type="number" pos:start="125:65" pos:end="125:65">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="127:13" pos:end="129:44"><expr pos:start="127:13" pos:end="129:43"><call pos:start="127:13" pos:end="129:43"><name pos:start="127:13" pos:end="127:18">av_log</name><argument_list pos:start="127:19" pos:end="129:43">(<argument pos:start="127:20" pos:end="127:23"><expr pos:start="127:20" pos:end="127:23"><name pos:start="127:20" pos:end="127:23">NULL</name></expr></argument>, <argument pos:start="127:26" pos:end="127:36"><expr pos:start="127:26" pos:end="127:36"><name pos:start="127:26" pos:end="127:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="127:39" pos:end="127:57"><expr pos:start="127:39" pos:end="127:57"><literal type="string" pos:start="127:39" pos:end="127:57">"  Program %d %s\n"</literal></expr></argument>, <argument pos:start="127:60" pos:end="127:78"><expr pos:start="127:60" pos:end="127:78"><name pos:start="127:60" pos:end="127:74"><name pos:start="127:60" pos:end="127:61">ic</name><operator pos:start="127:62" pos:end="127:63">-&gt;</operator><name pos:start="127:64" pos:end="127:71">programs</name><index pos:start="127:72" pos:end="127:74">[<expr pos:start="127:73" pos:end="127:73"><name pos:start="127:73" pos:end="127:73">j</name></expr>]</index></name><operator pos:start="127:75" pos:end="127:76">-&gt;</operator><name pos:start="127:77" pos:end="127:78">id</name></expr></argument>,

                   <argument pos:start="129:20" pos:end="129:42"><expr pos:start="129:20" pos:end="129:42"><ternary pos:start="129:20" pos:end="129:42"><condition pos:start="129:20" pos:end="129:25"><expr pos:start="129:20" pos:end="129:23"><name pos:start="129:20" pos:end="129:23">name</name></expr> ?</condition><then pos:start="129:27" pos:end="129:37"> <expr pos:start="129:27" pos:end="129:37"><name pos:start="129:27" pos:end="129:37"><name pos:start="129:27" pos:end="129:30">name</name><operator pos:start="129:31" pos:end="129:32">-&gt;</operator><name pos:start="129:33" pos:end="129:37">value</name></name></expr> </then><else pos:start="129:39" pos:end="129:42">: <expr pos:start="129:41" pos:end="129:42"><literal type="string" pos:start="129:41" pos:end="129:42">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:67"><expr pos:start="131:13" pos:end="131:66"><call pos:start="131:13" pos:end="131:66"><name pos:start="131:13" pos:end="131:25">dump_metadata</name><argument_list pos:start="131:26" pos:end="131:66">(<argument pos:start="131:27" pos:end="131:30"><expr pos:start="131:27" pos:end="131:30"><name pos:start="131:27" pos:end="131:30">NULL</name></expr></argument>, <argument pos:start="131:33" pos:end="131:57"><expr pos:start="131:33" pos:end="131:57"><name pos:start="131:33" pos:end="131:47"><name pos:start="131:33" pos:end="131:34">ic</name><operator pos:start="131:35" pos:end="131:36">-&gt;</operator><name pos:start="131:37" pos:end="131:44">programs</name><index pos:start="131:45" pos:end="131:47">[<expr pos:start="131:46" pos:end="131:46"><name pos:start="131:46" pos:end="131:46">j</name></expr>]</index></name><operator pos:start="131:48" pos:end="131:49">-&gt;</operator><name pos:start="131:50" pos:end="131:57">metadata</name></expr></argument>, <argument pos:start="131:60" pos:end="131:65"><expr pos:start="131:60" pos:end="131:65"><literal type="string" pos:start="131:60" pos:end="131:65">"    "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="133:13" pos:end="141:13">for <control pos:start="133:17" pos:end="133:68">(<init pos:start="133:18" pos:end="133:23"><expr pos:start="133:18" pos:end="133:22"><name pos:start="133:18" pos:end="133:18">k</name> <operator pos:start="133:20" pos:end="133:20">=</operator> <literal type="number" pos:start="133:22" pos:end="133:22">0</literal></expr>;</init> <condition pos:start="133:25" pos:end="133:63"><expr pos:start="133:25" pos:end="133:62"><name pos:start="133:25" pos:end="133:25">k</name> <operator pos:start="133:27" pos:end="133:27">&lt;</operator> <name pos:start="133:29" pos:end="133:43"><name pos:start="133:29" pos:end="133:30">ic</name><operator pos:start="133:31" pos:end="133:32">-&gt;</operator><name pos:start="133:33" pos:end="133:40">programs</name><index pos:start="133:41" pos:end="133:43">[<expr pos:start="133:42" pos:end="133:42"><name pos:start="133:42" pos:end="133:42">j</name></expr>]</index></name><operator pos:start="133:44" pos:end="133:45">-&gt;</operator><name pos:start="133:46" pos:end="133:62">nb_stream_indexes</name></expr>;</condition> <incr pos:start="133:65" pos:end="133:67"><expr pos:start="133:65" pos:end="133:67"><name pos:start="133:65" pos:end="133:65">k</name><operator pos:start="133:66" pos:end="133:67">++</operator></expr></incr>)</control> <block pos:start="133:70" pos:end="141:13">{<block_content pos:start="135:17" pos:end="139:62">

                <expr_stmt pos:start="135:17" pos:end="137:53"><expr pos:start="135:17" pos:end="137:52"><call pos:start="135:17" pos:end="137:52"><name pos:start="135:17" pos:end="135:34">dump_stream_format</name><argument_list pos:start="135:35" pos:end="137:52">(<argument pos:start="135:36" pos:end="135:37"><expr pos:start="135:36" pos:end="135:37"><name pos:start="135:36" pos:end="135:37">ic</name></expr></argument>, <argument pos:start="135:40" pos:end="135:71"><expr pos:start="135:40" pos:end="135:71"><name pos:start="135:40" pos:end="135:54"><name pos:start="135:40" pos:end="135:41">ic</name><operator pos:start="135:42" pos:end="135:43">-&gt;</operator><name pos:start="135:44" pos:end="135:51">programs</name><index pos:start="135:52" pos:end="135:54">[<expr pos:start="135:53" pos:end="135:53"><name pos:start="135:53" pos:end="135:53">j</name></expr>]</index></name><operator pos:start="135:55" pos:end="135:56">-&gt;</operator><name pos:start="135:57" pos:end="135:71"><name pos:start="135:57" pos:end="135:68">stream_index</name><index pos:start="135:69" pos:end="135:71">[<expr pos:start="135:70" pos:end="135:70"><name pos:start="135:70" pos:end="135:70">k</name></expr>]</index></name></expr></argument>,

                                   <argument pos:start="137:36" pos:end="137:40"><expr pos:start="137:36" pos:end="137:40"><name pos:start="137:36" pos:end="137:40">index</name></expr></argument>, <argument pos:start="137:43" pos:end="137:51"><expr pos:start="137:43" pos:end="137:51"><name pos:start="137:43" pos:end="137:51">is_output</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="139:17" pos:end="139:62"><expr pos:start="139:17" pos:end="139:61"><name pos:start="139:17" pos:end="139:57"><name pos:start="139:17" pos:end="139:23">printed</name><index pos:start="139:24" pos:end="139:57">[<expr pos:start="139:25" pos:end="139:56"><name pos:start="139:25" pos:end="139:39"><name pos:start="139:25" pos:end="139:26">ic</name><operator pos:start="139:27" pos:end="139:28">-&gt;</operator><name pos:start="139:29" pos:end="139:36">programs</name><index pos:start="139:37" pos:end="139:39">[<expr pos:start="139:38" pos:end="139:38"><name pos:start="139:38" pos:end="139:38">j</name></expr>]</index></name><operator pos:start="139:40" pos:end="139:41">-&gt;</operator><name pos:start="139:42" pos:end="139:56"><name pos:start="139:42" pos:end="139:53">stream_index</name><index pos:start="139:54" pos:end="139:56">[<expr pos:start="139:55" pos:end="139:55"><name pos:start="139:55" pos:end="139:55">k</name></expr>]</index></name></expr>]</index></name> <operator pos:start="139:59" pos:end="139:59">=</operator> <literal type="number" pos:start="139:61" pos:end="139:61">1</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="143:13" pos:end="143:56"><expr pos:start="143:13" pos:end="143:55"><name pos:start="143:13" pos:end="143:17">total</name> <operator pos:start="143:19" pos:end="143:20">+=</operator> <name pos:start="143:22" pos:end="143:36"><name pos:start="143:22" pos:end="143:23">ic</name><operator pos:start="143:24" pos:end="143:25">-&gt;</operator><name pos:start="143:26" pos:end="143:33">programs</name><index pos:start="143:34" pos:end="143:36">[<expr pos:start="143:35" pos:end="143:35"><name pos:start="143:35" pos:end="143:35">j</name></expr>]</index></name><operator pos:start="143:37" pos:end="143:38">-&gt;</operator><name pos:start="143:39" pos:end="143:55">nb_stream_indexes</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="147:9" pos:end="149:56"><if pos:start="147:9" pos:end="149:56">if <condition pos:start="147:12" pos:end="147:35">(<expr pos:start="147:13" pos:end="147:34"><name pos:start="147:13" pos:end="147:17">total</name> <operator pos:start="147:19" pos:end="147:19">&lt;</operator> <name pos:start="147:21" pos:end="147:34"><name pos:start="147:21" pos:end="147:22">ic</name><operator pos:start="147:23" pos:end="147:24">-&gt;</operator><name pos:start="147:25" pos:end="147:34">nb_streams</name></name></expr>)</condition><block type="pseudo" pos:start="149:13" pos:end="149:56"><block_content pos:start="149:13" pos:end="149:56">

            <expr_stmt pos:start="149:13" pos:end="149:56"><expr pos:start="149:13" pos:end="149:55"><call pos:start="149:13" pos:end="149:55"><name pos:start="149:13" pos:end="149:18">av_log</name><argument_list pos:start="149:19" pos:end="149:55">(<argument pos:start="149:20" pos:end="149:23"><expr pos:start="149:20" pos:end="149:23"><name pos:start="149:20" pos:end="149:23">NULL</name></expr></argument>, <argument pos:start="149:26" pos:end="149:36"><expr pos:start="149:26" pos:end="149:36"><name pos:start="149:26" pos:end="149:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="149:39" pos:end="149:54"><expr pos:start="149:39" pos:end="149:54"><literal type="string" pos:start="149:39" pos:end="149:54">"  No Program\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="155:5" pos:end="159:56">for <control pos:start="155:9" pos:end="155:40">(<init pos:start="155:10" pos:end="155:15"><expr pos:start="155:10" pos:end="155:14"><name pos:start="155:10" pos:end="155:10">i</name> <operator pos:start="155:12" pos:end="155:12">=</operator> <literal type="number" pos:start="155:14" pos:end="155:14">0</literal></expr>;</init> <condition pos:start="155:17" pos:end="155:35"><expr pos:start="155:17" pos:end="155:34"><name pos:start="155:17" pos:end="155:17">i</name> <operator pos:start="155:19" pos:end="155:19">&lt;</operator> <name pos:start="155:21" pos:end="155:34"><name pos:start="155:21" pos:end="155:22">ic</name><operator pos:start="155:23" pos:end="155:24">-&gt;</operator><name pos:start="155:25" pos:end="155:34">nb_streams</name></name></expr>;</condition> <incr pos:start="155:37" pos:end="155:39"><expr pos:start="155:37" pos:end="155:39"><name pos:start="155:37" pos:end="155:37">i</name><operator pos:start="155:38" pos:end="155:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="157:9" pos:end="159:56"><block_content pos:start="157:9" pos:end="159:56">

        <if_stmt pos:start="157:9" pos:end="159:56"><if pos:start="157:9" pos:end="159:56">if <condition pos:start="157:12" pos:end="157:24">(<expr pos:start="157:13" pos:end="157:23"><operator pos:start="157:13" pos:end="157:13">!</operator><name pos:start="157:14" pos:end="157:23"><name pos:start="157:14" pos:end="157:20">printed</name><index pos:start="157:21" pos:end="157:23">[<expr pos:start="157:22" pos:end="157:22"><name pos:start="157:22" pos:end="157:22">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="159:13" pos:end="159:56"><block_content pos:start="159:13" pos:end="159:56">

            <expr_stmt pos:start="159:13" pos:end="159:56"><expr pos:start="159:13" pos:end="159:55"><call pos:start="159:13" pos:end="159:55"><name pos:start="159:13" pos:end="159:30">dump_stream_format</name><argument_list pos:start="159:31" pos:end="159:55">(<argument pos:start="159:32" pos:end="159:33"><expr pos:start="159:32" pos:end="159:33"><name pos:start="159:32" pos:end="159:33">ic</name></expr></argument>, <argument pos:start="159:36" pos:end="159:36"><expr pos:start="159:36" pos:end="159:36"><name pos:start="159:36" pos:end="159:36">i</name></expr></argument>, <argument pos:start="159:39" pos:end="159:43"><expr pos:start="159:39" pos:end="159:43"><name pos:start="159:39" pos:end="159:43">index</name></expr></argument>, <argument pos:start="159:46" pos:end="159:54"><expr pos:start="159:46" pos:end="159:54"><name pos:start="159:46" pos:end="159:54">is_output</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>



    <expr_stmt pos:start="163:5" pos:end="163:21"><expr pos:start="163:5" pos:end="163:20"><call pos:start="163:5" pos:end="163:20"><name pos:start="163:5" pos:end="163:11">av_free</name><argument_list pos:start="163:12" pos:end="163:20">(<argument pos:start="163:13" pos:end="163:19"><expr pos:start="163:13" pos:end="163:19"><name pos:start="163:13" pos:end="163:19">printed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
