<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/880.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">v9fs_open_post_lstat</name><parameter_list pos:start="1:33" pos:end="1:74">(<parameter pos:start="1:34" pos:end="1:45"><decl pos:start="1:34" pos:end="1:45"><type pos:start="1:34" pos:end="1:45"><name pos:start="1:34" pos:end="1:42">V9fsState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:64"><decl pos:start="1:48" pos:end="1:64"><type pos:start="1:48" pos:end="1:64"><name pos:start="1:48" pos:end="1:60">V9fsOpenState</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:64">vs</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:73"><decl pos:start="1:67" pos:end="1:73"><type pos:start="1:67" pos:end="1:73"><name pos:start="1:67" pos:end="1:69">int</name></type> <name pos:start="1:71" pos:end="1:73">err</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:18">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">flags</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="15:5"><if pos:start="9:5" pos:end="15:5">if <condition pos:start="9:8" pos:end="9:12">(<expr pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">err</name></expr>)</condition> <block pos:start="9:14" pos:end="15:5">{<block_content pos:start="11:9" pos:end="13:17">

        <expr_stmt pos:start="11:9" pos:end="11:21"><expr pos:start="11:9" pos:end="11:20"><name pos:start="11:9" pos:end="11:11">err</name> <operator pos:start="11:13" pos:end="11:13">=</operator> <operator pos:start="11:15" pos:end="11:15">-</operator><name pos:start="11:16" pos:end="11:20">errno</name></expr>;</expr_stmt>

        <goto pos:start="13:9" pos:end="13:17">goto <name pos:start="13:14" pos:end="13:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:38"><expr pos:start="19:5" pos:end="19:37"><call pos:start="19:5" pos:end="19:37"><name pos:start="19:5" pos:end="19:15">stat_to_qid</name><argument_list pos:start="19:16" pos:end="19:37">(<argument pos:start="19:17" pos:end="19:26"><expr pos:start="19:17" pos:end="19:26"><operator pos:start="19:17" pos:end="19:17">&amp;</operator><name pos:start="19:18" pos:end="19:26"><name pos:start="19:18" pos:end="19:19">vs</name><operator pos:start="19:20" pos:end="19:21">-&gt;</operator><name pos:start="19:22" pos:end="19:26">stbuf</name></name></expr></argument>, <argument pos:start="19:29" pos:end="19:36"><expr pos:start="19:29" pos:end="19:36"><operator pos:start="19:29" pos:end="19:29">&amp;</operator><name pos:start="19:30" pos:end="19:36"><name pos:start="19:30" pos:end="19:31">vs</name><operator pos:start="19:32" pos:end="19:33">-&gt;</operator><name pos:start="19:34" pos:end="19:36">qid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="53:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:35">(<expr pos:start="23:9" pos:end="23:34"><call pos:start="23:9" pos:end="23:34"><name pos:start="23:9" pos:end="23:15">S_ISDIR</name><argument_list pos:start="23:16" pos:end="23:34">(<argument pos:start="23:17" pos:end="23:33"><expr pos:start="23:17" pos:end="23:33"><name pos:start="23:17" pos:end="23:33"><name pos:start="23:17" pos:end="23:18">vs</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:25">stbuf</name><operator pos:start="23:26" pos:end="23:26">.</operator><name pos:start="23:27" pos:end="23:33">st_mode</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:37" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:43">

        <expr_stmt pos:start="25:9" pos:end="25:63"><expr pos:start="25:9" pos:end="25:62"><name pos:start="25:9" pos:end="25:24"><name pos:start="25:9" pos:end="25:10">vs</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:16">fidp</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:20">fs</name><operator pos:start="25:21" pos:end="25:21">.</operator><name pos:start="25:22" pos:end="25:24">dir</name></name> <operator pos:start="25:26" pos:end="25:26">=</operator> <call pos:start="25:28" pos:end="25:62"><name pos:start="25:28" pos:end="25:42">v9fs_do_opendir</name><argument_list pos:start="25:43" pos:end="25:62">(<argument pos:start="25:44" pos:end="25:44"><expr pos:start="25:44" pos:end="25:44"><name pos:start="25:44" pos:end="25:44">s</name></expr></argument>, <argument pos:start="25:47" pos:end="25:61"><expr pos:start="25:47" pos:end="25:61"><operator pos:start="25:47" pos:end="25:47">&amp;</operator><name pos:start="25:48" pos:end="25:61"><name pos:start="25:48" pos:end="25:49">vs</name><operator pos:start="25:50" pos:end="25:51">-&gt;</operator><name pos:start="25:52" pos:end="25:55">fidp</name><operator pos:start="25:56" pos:end="25:57">-&gt;</operator><name pos:start="25:58" pos:end="25:61">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:43"><expr pos:start="27:9" pos:end="27:42"><call pos:start="27:9" pos:end="27:42"><name pos:start="27:9" pos:end="27:30">v9fs_open_post_opendir</name><argument_list pos:start="27:31" pos:end="27:42">(<argument pos:start="27:32" pos:end="27:32"><expr pos:start="27:32" pos:end="27:32"><name pos:start="27:32" pos:end="27:32">s</name></expr></argument>, <argument pos:start="27:35" pos:end="27:36"><expr pos:start="27:35" pos:end="27:36"><name pos:start="27:35" pos:end="27:36">vs</name></expr></argument>, <argument pos:start="27:39" pos:end="27:41"><expr pos:start="27:39" pos:end="27:41"><name pos:start="27:39" pos:end="27:41">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="53:5">else <block pos:start="29:12" pos:end="53:5">{<block_content pos:start="31:9" pos:end="51:40">

        <if_stmt pos:start="31:9" pos:end="47:9"><if pos:start="31:9" pos:end="43:9">if <condition pos:start="31:12" pos:end="31:49">(<expr pos:start="31:13" pos:end="31:48"><name pos:start="31:13" pos:end="31:28"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:28">proto_version</name></name> <operator pos:start="31:30" pos:end="31:31">==</operator> <name pos:start="31:33" pos:end="31:48">V9FS_PROTO_2000L</name></expr>)</condition> <block pos:start="31:51" pos:end="43:9">{<block_content pos:start="33:13" pos:end="41:29">

            <if_stmt pos:start="33:13" pos:end="39:13"><if pos:start="33:13" pos:end="39:13">if <condition pos:start="33:16" pos:end="33:39">(<expr pos:start="33:17" pos:end="33:38"><operator pos:start="33:17" pos:end="33:17">!</operator><call pos:start="33:18" pos:end="33:38"><name pos:start="33:18" pos:end="33:28">valid_flags</name><argument_list pos:start="33:29" pos:end="33:38">(<argument pos:start="33:30" pos:end="33:37"><expr pos:start="33:30" pos:end="33:37"><name pos:start="33:30" pos:end="33:37"><name pos:start="33:30" pos:end="33:31">vs</name><operator pos:start="33:32" pos:end="33:33">-&gt;</operator><name pos:start="33:34" pos:end="33:37">mode</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:41" pos:end="39:13">{<block_content pos:start="35:17" pos:end="37:25">

                <expr_stmt pos:start="35:17" pos:end="35:30"><expr pos:start="35:17" pos:end="35:29"><name pos:start="35:17" pos:end="35:19">err</name> <operator pos:start="35:21" pos:end="35:21">=</operator> <operator pos:start="35:23" pos:end="35:23">-</operator><name pos:start="35:24" pos:end="35:29">EINVAL</name></expr>;</expr_stmt>

                <goto pos:start="37:17" pos:end="37:25">goto <name pos:start="37:22" pos:end="37:24">out</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:29"><expr pos:start="41:13" pos:end="41:28"><name pos:start="41:13" pos:end="41:17">flags</name> <operator pos:start="41:19" pos:end="41:19">=</operator> <name pos:start="41:21" pos:end="41:28"><name pos:start="41:21" pos:end="41:22">vs</name><operator pos:start="41:23" pos:end="41:24">-&gt;</operator><name pos:start="41:25" pos:end="41:28">mode</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="43:11" pos:end="47:9">else <block pos:start="43:16" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:46">

            <expr_stmt pos:start="45:13" pos:end="45:46"><expr pos:start="45:13" pos:end="45:45"><name pos:start="45:13" pos:end="45:17">flags</name> <operator pos:start="45:19" pos:end="45:19">=</operator> <call pos:start="45:21" pos:end="45:45"><name pos:start="45:21" pos:end="45:35">omode_to_uflags</name><argument_list pos:start="45:36" pos:end="45:45">(<argument pos:start="45:37" pos:end="45:44"><expr pos:start="45:37" pos:end="45:44"><name pos:start="45:37" pos:end="45:44"><name pos:start="45:37" pos:end="45:38">vs</name><operator pos:start="45:39" pos:end="45:40">-&gt;</operator><name pos:start="45:41" pos:end="45:44">mode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:66"><expr pos:start="49:9" pos:end="49:65"><name pos:start="49:9" pos:end="49:23"><name pos:start="49:9" pos:end="49:10">vs</name><operator pos:start="49:11" pos:end="49:12">-&gt;</operator><name pos:start="49:13" pos:end="49:16">fidp</name><operator pos:start="49:17" pos:end="49:18">-&gt;</operator><name pos:start="49:19" pos:end="49:20">fs</name><operator pos:start="49:21" pos:end="49:21">.</operator><name pos:start="49:22" pos:end="49:23">fd</name></name> <operator pos:start="49:25" pos:end="49:25">=</operator> <call pos:start="49:27" pos:end="49:65"><name pos:start="49:27" pos:end="49:38">v9fs_do_open</name><argument_list pos:start="49:39" pos:end="49:65">(<argument pos:start="49:40" pos:end="49:40"><expr pos:start="49:40" pos:end="49:40"><name pos:start="49:40" pos:end="49:40">s</name></expr></argument>, <argument pos:start="49:43" pos:end="49:57"><expr pos:start="49:43" pos:end="49:57"><operator pos:start="49:43" pos:end="49:43">&amp;</operator><name pos:start="49:44" pos:end="49:57"><name pos:start="49:44" pos:end="49:45">vs</name><operator pos:start="49:46" pos:end="49:47">-&gt;</operator><name pos:start="49:48" pos:end="49:51">fidp</name><operator pos:start="49:52" pos:end="49:53">-&gt;</operator><name pos:start="49:54" pos:end="49:57">path</name></name></expr></argument>, <argument pos:start="49:60" pos:end="49:64"><expr pos:start="49:60" pos:end="49:64"><name pos:start="49:60" pos:end="49:64">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:40"><expr pos:start="51:9" pos:end="51:39"><call pos:start="51:9" pos:end="51:39"><name pos:start="51:9" pos:end="51:27">v9fs_open_post_open</name><argument_list pos:start="51:28" pos:end="51:39">(<argument pos:start="51:29" pos:end="51:29"><expr pos:start="51:29" pos:end="51:29"><name pos:start="51:29" pos:end="51:29">s</name></expr></argument>, <argument pos:start="51:32" pos:end="51:33"><expr pos:start="51:32" pos:end="51:33"><name pos:start="51:32" pos:end="51:33">vs</name></expr></argument>, <argument pos:start="51:36" pos:end="51:38"><expr pos:start="51:36" pos:end="51:38"><name pos:start="51:36" pos:end="51:38">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="55:5" pos:end="55:11">return;</return>

<label pos:start="57:1" pos:end="57:4"><name pos:start="57:1" pos:end="57:3">out</name>:</label>

    <expr_stmt pos:start="59:5" pos:end="59:34"><expr pos:start="59:5" pos:end="59:33"><call pos:start="59:5" pos:end="59:33"><name pos:start="59:5" pos:end="59:16">complete_pdu</name><argument_list pos:start="59:17" pos:end="59:33">(<argument pos:start="59:18" pos:end="59:18"><expr pos:start="59:18" pos:end="59:18"><name pos:start="59:18" pos:end="59:18">s</name></expr></argument>, <argument pos:start="59:21" pos:end="59:27"><expr pos:start="59:21" pos:end="59:27"><name pos:start="59:21" pos:end="59:27"><name pos:start="59:21" pos:end="59:22">vs</name><operator pos:start="59:23" pos:end="59:24">-&gt;</operator><name pos:start="59:25" pos:end="59:27">pdu</name></name></expr></argument>, <argument pos:start="59:30" pos:end="59:32"><expr pos:start="59:30" pos:end="59:32"><name pos:start="59:30" pos:end="59:32">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:18"><expr pos:start="61:5" pos:end="61:17"><call pos:start="61:5" pos:end="61:17"><name pos:start="61:5" pos:end="61:13">qemu_free</name><argument_list pos:start="61:14" pos:end="61:17">(<argument pos:start="61:15" pos:end="61:16"><expr pos:start="61:15" pos:end="61:16"><name pos:start="61:15" pos:end="61:16">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
