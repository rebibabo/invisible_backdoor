<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11890.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">char</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:20">getstr8</name><parameter_list pos:start="1:21" pos:end="1:62">(<parameter pos:start="1:22" pos:end="1:39"><decl pos:start="1:22" pos:end="1:39"><type pos:start="1:22" pos:end="1:39"><specifier pos:start="1:22" pos:end="1:26">const</specifier> <name pos:start="1:28" pos:end="1:34">uint8_t</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier><modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:39">pp</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:61"><decl pos:start="1:42" pos:end="1:61"><type pos:start="1:42" pos:end="1:61"><specifier pos:start="1:42" pos:end="1:46">const</specifier> <name pos:start="1:48" pos:end="1:54">uint8_t</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:61">p_end</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:15">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:13">str</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:14"><expr pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:5">p</name>   <operator pos:start="13:9" pos:end="13:9">=</operator> <operator pos:start="13:11" pos:end="13:11">*</operator><name pos:start="13:12" pos:end="13:13">pp</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:26"><expr pos:start="15:5" pos:end="15:25"><name pos:start="15:5" pos:end="15:7">len</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:25"><name pos:start="15:11" pos:end="15:14">get8</name><argument_list pos:start="15:15" pos:end="15:25">(<argument pos:start="15:16" pos:end="15:17"><expr pos:start="15:16" pos:end="15:17"><operator pos:start="15:16" pos:end="15:16">&amp;</operator><name pos:start="15:17" pos:end="15:17">p</name></expr></argument>, <argument pos:start="15:20" pos:end="15:24"><expr pos:start="15:20" pos:end="15:24"><name pos:start="15:20" pos:end="15:24">p_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="19:20"><if pos:start="17:5" pos:end="19:20">if <condition pos:start="17:8" pos:end="17:16">(<expr pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:11">len</name> <operator pos:start="17:13" pos:end="17:13">&lt;</operator> <literal type="number" pos:start="17:15" pos:end="17:15">0</literal></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:20"><block_content pos:start="19:9" pos:end="19:20">

        <return pos:start="19:9" pos:end="19:20">return <expr pos:start="19:16" pos:end="19:19"><name pos:start="19:16" pos:end="19:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="21:5" pos:end="23:20"><if pos:start="21:5" pos:end="23:20">if <condition pos:start="21:8" pos:end="21:26">(<expr pos:start="21:9" pos:end="21:25"><operator pos:start="21:9" pos:end="21:9">(</operator><name pos:start="21:10" pos:end="21:10">p</name> <operator pos:start="21:12" pos:end="21:12">+</operator> <name pos:start="21:14" pos:end="21:16">len</name><operator pos:start="21:17" pos:end="21:17">)</operator> <operator pos:start="21:19" pos:end="21:19">&gt;</operator> <name pos:start="21:21" pos:end="21:25">p_end</name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:20"><block_content pos:start="23:9" pos:end="23:20">

        <return pos:start="23:9" pos:end="23:20">return <expr pos:start="23:16" pos:end="23:19"><name pos:start="23:16" pos:end="23:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:29"><expr pos:start="25:5" pos:end="25:28"><name pos:start="25:5" pos:end="25:7">str</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:28"><name pos:start="25:11" pos:end="25:19">av_malloc</name><argument_list pos:start="25:20" pos:end="25:28">(<argument pos:start="25:21" pos:end="25:27"><expr pos:start="25:21" pos:end="25:27"><name pos:start="25:21" pos:end="25:23">len</name> <operator pos:start="25:25" pos:end="25:25">+</operator> <literal type="number" pos:start="25:27" pos:end="25:27">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="29:20"><if pos:start="27:5" pos:end="29:20">if <condition pos:start="27:8" pos:end="27:13">(<expr pos:start="27:9" pos:end="27:12"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:12">str</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:20"><block_content pos:start="29:9" pos:end="29:20">

        <return pos:start="29:9" pos:end="29:20">return <expr pos:start="29:16" pos:end="29:19"><name pos:start="29:16" pos:end="29:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:24"><expr pos:start="31:5" pos:end="31:23"><call pos:start="31:5" pos:end="31:23"><name pos:start="31:5" pos:end="31:10">memcpy</name><argument_list pos:start="31:11" pos:end="31:23">(<argument pos:start="31:12" pos:end="31:14"><expr pos:start="31:12" pos:end="31:14"><name pos:start="31:12" pos:end="31:14">str</name></expr></argument>, <argument pos:start="31:17" pos:end="31:17"><expr pos:start="31:17" pos:end="31:17"><name pos:start="31:17" pos:end="31:17">p</name></expr></argument>, <argument pos:start="31:20" pos:end="31:22"><expr pos:start="31:20" pos:end="31:22"><name pos:start="31:20" pos:end="31:22">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:20"><expr pos:start="33:5" pos:end="33:19"><name pos:start="33:5" pos:end="33:12"><name pos:start="33:5" pos:end="33:7">str</name><index pos:start="33:8" pos:end="33:12">[<expr pos:start="33:9" pos:end="33:11"><name pos:start="33:9" pos:end="33:11">len</name></expr>]</index></name> <operator pos:start="33:14" pos:end="33:14">=</operator> <literal type="char" pos:start="33:16" pos:end="33:19">'\0'</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:14"><expr pos:start="35:5" pos:end="35:13"><name pos:start="35:5" pos:end="35:5">p</name>  <operator pos:start="35:8" pos:end="35:9">+=</operator> <name pos:start="35:11" pos:end="35:13">len</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:12"><expr pos:start="37:5" pos:end="37:11"><operator pos:start="37:5" pos:end="37:5">*</operator><name pos:start="37:6" pos:end="37:7">pp</name> <operator pos:start="37:9" pos:end="37:9">=</operator> <name pos:start="37:11" pos:end="37:11">p</name></expr>;</expr_stmt>

    <return pos:start="39:5" pos:end="39:15">return <expr pos:start="39:12" pos:end="39:14"><name pos:start="39:12" pos:end="39:14">str</name></expr>;</return>

</block_content>}</block></function>
</unit>
