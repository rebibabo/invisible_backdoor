<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7679.c" pos:tabs="8"><function pos:start="1:1" pos:end="191:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">read_header</name><parameter_list pos:start="1:23" pos:end="1:42">(<parameter pos:start="1:24" pos:end="1:41"><decl pos:start="1:24" pos:end="1:41"><type pos:start="1:24" pos:end="1:40"><name pos:start="1:24" pos:end="1:38">AVFormatContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="191:1">{<block_content pos:start="5:5" pos:end="189:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">WtvContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">wtv</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:19">root_sector</name></decl>, <decl pos:start="7:22" pos:end="7:30"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:22" pos:end="7:30">root_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:33"><name pos:start="9:13" pos:end="9:16">root</name><index pos:start="9:17" pos:end="9:33">[<expr pos:start="9:18" pos:end="9:32"><name pos:start="9:18" pos:end="9:32">WTV_SECTOR_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">AVIOContext</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:19">pb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:24">timeline_pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int64_t</name></type> <name pos:start="15:13" pos:end="15:15">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="23:41"><expr pos:start="19:5" pos:end="23:40"><name pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:7">wtv</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:14">epoch</name></name>          <operator pos:start="19:25" pos:end="19:25">=</operator>

    <name pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:7">wtv</name><operator pos:start="21:8" pos:end="21:9">-&gt;</operator><name pos:start="21:10" pos:end="21:12">pts</name></name>            <operator pos:start="21:25" pos:end="21:25">=</operator>

    <name pos:start="23:5" pos:end="23:23"><name pos:start="23:5" pos:end="23:7">wtv</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:23">last_valid_pts</name></name> <operator pos:start="23:25" pos:end="23:25">=</operator> <name pos:start="23:27" pos:end="23:40">AV_NOPTS_VALUE</name></expr>;</expr_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:36">/* read root directory sector */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:27"><expr pos:start="29:5" pos:end="29:26"><call pos:start="29:5" pos:end="29:26"><name pos:start="29:5" pos:end="29:13">avio_skip</name><argument_list pos:start="29:14" pos:end="29:26">(<argument pos:start="29:15" pos:end="29:19"><expr pos:start="29:15" pos:end="29:19"><name pos:start="29:15" pos:end="29:19"><name pos:start="29:15" pos:end="29:15">s</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:19">pb</name></name></expr></argument>, <argument pos:start="29:22" pos:end="29:25"><expr pos:start="29:22" pos:end="29:25"><literal type="number" pos:start="29:22" pos:end="29:25">0x30</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:33"><expr pos:start="31:5" pos:end="31:32"><name pos:start="31:5" pos:end="31:13">root_size</name> <operator pos:start="31:15" pos:end="31:15">=</operator> <call pos:start="31:17" pos:end="31:32"><name pos:start="31:17" pos:end="31:25">avio_rl32</name><argument_list pos:start="31:26" pos:end="31:32">(<argument pos:start="31:27" pos:end="31:31"><expr pos:start="31:27" pos:end="31:31"><name pos:start="31:27" pos:end="31:31"><name pos:start="31:27" pos:end="31:27">s</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:31">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:33">(<expr pos:start="33:9" pos:end="33:32"><name pos:start="33:9" pos:end="33:17">root_size</name> <operator pos:start="33:19" pos:end="33:19">&gt;</operator> <sizeof pos:start="33:21" pos:end="33:32">sizeof<argument_list pos:start="33:27" pos:end="33:32">(<argument pos:start="33:28" pos:end="33:31"><expr pos:start="33:28" pos:end="33:31"><name pos:start="33:28" pos:end="33:31">root</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="33:35" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:35">

        <expr_stmt pos:start="35:9" pos:end="35:77"><expr pos:start="35:9" pos:end="35:76"><call pos:start="35:9" pos:end="35:76"><name pos:start="35:9" pos:end="35:14">av_log</name><argument_list pos:start="35:15" pos:end="35:76">(<argument pos:start="35:16" pos:end="35:16"><expr pos:start="35:16" pos:end="35:16"><name pos:start="35:16" pos:end="35:16">s</name></expr></argument>, <argument pos:start="35:19" pos:end="35:30"><expr pos:start="35:19" pos:end="35:30"><name pos:start="35:19" pos:end="35:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="35:33" pos:end="35:75"><expr pos:start="35:33" pos:end="35:75"><literal type="string" pos:start="35:33" pos:end="35:75">"root directory size exceeds sector size\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:35">return <expr pos:start="37:16" pos:end="37:34"><name pos:start="37:16" pos:end="37:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:24"><expr pos:start="41:5" pos:end="41:23"><call pos:start="41:5" pos:end="41:23"><name pos:start="41:5" pos:end="41:13">avio_skip</name><argument_list pos:start="41:14" pos:end="41:23">(<argument pos:start="41:15" pos:end="41:19"><expr pos:start="41:15" pos:end="41:19"><name pos:start="41:15" pos:end="41:19"><name pos:start="41:15" pos:end="41:15">s</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:19">pb</name></name></expr></argument>, <argument pos:start="41:22" pos:end="41:22"><expr pos:start="41:22" pos:end="41:22"><literal type="number" pos:start="41:22" pos:end="41:22">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:35"><expr pos:start="43:5" pos:end="43:34"><name pos:start="43:5" pos:end="43:15">root_sector</name> <operator pos:start="43:17" pos:end="43:17">=</operator> <call pos:start="43:19" pos:end="43:34"><name pos:start="43:19" pos:end="43:27">avio_rl32</name><argument_list pos:start="43:28" pos:end="43:34">(<argument pos:start="43:29" pos:end="43:33"><expr pos:start="43:29" pos:end="43:33"><name pos:start="43:29" pos:end="43:33"><name pos:start="43:29" pos:end="43:29">s</name><operator pos:start="43:30" pos:end="43:31">-&gt;</operator><name pos:start="43:32" pos:end="43:33">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:48"><expr pos:start="47:5" pos:end="47:47"><name pos:start="47:5" pos:end="47:7">ret</name> <operator pos:start="47:9" pos:end="47:9">=</operator> <call pos:start="47:11" pos:end="47:47"><name pos:start="47:11" pos:end="47:24">seek_by_sector</name><argument_list pos:start="47:25" pos:end="47:47">(<argument pos:start="47:26" pos:end="47:30"><expr pos:start="47:26" pos:end="47:30"><name pos:start="47:26" pos:end="47:30"><name pos:start="47:26" pos:end="47:26">s</name><operator pos:start="47:27" pos:end="47:28">-&gt;</operator><name pos:start="47:29" pos:end="47:30">pb</name></name></expr></argument>, <argument pos:start="47:33" pos:end="47:43"><expr pos:start="47:33" pos:end="47:43"><name pos:start="47:33" pos:end="47:43">root_sector</name></expr></argument>, <argument pos:start="47:46" pos:end="47:46"><expr pos:start="47:46" pos:end="47:46"><literal type="number" pos:start="47:46" pos:end="47:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="51:19"><if pos:start="49:5" pos:end="51:19">if <condition pos:start="49:8" pos:end="49:16">(<expr pos:start="49:9" pos:end="49:15"><name pos:start="49:9" pos:end="49:11">ret</name> <operator pos:start="49:13" pos:end="49:13">&lt;</operator> <literal type="number" pos:start="49:15" pos:end="49:15">0</literal></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:19"><block_content pos:start="51:9" pos:end="51:19">

        <return pos:start="51:9" pos:end="51:19">return <expr pos:start="51:16" pos:end="51:18"><name pos:start="51:16" pos:end="51:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:50"><expr pos:start="53:5" pos:end="53:49"><name pos:start="53:5" pos:end="53:13">root_size</name> <operator pos:start="53:15" pos:end="53:15">=</operator> <call pos:start="53:17" pos:end="53:49"><name pos:start="53:17" pos:end="53:25">avio_read</name><argument_list pos:start="53:26" pos:end="53:49">(<argument pos:start="53:27" pos:end="53:31"><expr pos:start="53:27" pos:end="53:31"><name pos:start="53:27" pos:end="53:31"><name pos:start="53:27" pos:end="53:27">s</name><operator pos:start="53:28" pos:end="53:29">-&gt;</operator><name pos:start="53:30" pos:end="53:31">pb</name></name></expr></argument>, <argument pos:start="53:34" pos:end="53:37"><expr pos:start="53:34" pos:end="53:37"><name pos:start="53:34" pos:end="53:37">root</name></expr></argument>, <argument pos:start="53:40" pos:end="53:48"><expr pos:start="53:40" pos:end="53:48"><name pos:start="53:40" pos:end="53:48">root_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="57:35"><if pos:start="55:5" pos:end="57:35">if <condition pos:start="55:8" pos:end="55:22">(<expr pos:start="55:9" pos:end="55:21"><name pos:start="55:9" pos:end="55:17">root_size</name> <operator pos:start="55:19" pos:end="55:19">&lt;</operator> <literal type="number" pos:start="55:21" pos:end="55:21">0</literal></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:35"><block_content pos:start="57:9" pos:end="57:35">

        <return pos:start="57:9" pos:end="57:35">return <expr pos:start="57:16" pos:end="57:34"><name pos:start="57:16" pos:end="57:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="61:5" pos:end="61:48">/* parse chunks up until first data chunk */</comment>

    <expr_stmt pos:start="63:5" pos:end="63:65"><expr pos:start="63:5" pos:end="63:64"><name pos:start="63:5" pos:end="63:11"><name pos:start="63:5" pos:end="63:7">wtv</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:11">pb</name></name> <operator pos:start="63:13" pos:end="63:13">=</operator> <call pos:start="63:15" pos:end="63:64"><name pos:start="63:15" pos:end="63:26">wtvfile_open</name><argument_list pos:start="63:27" pos:end="63:64">(<argument pos:start="63:28" pos:end="63:28"><expr pos:start="63:28" pos:end="63:28"><name pos:start="63:28" pos:end="63:28">s</name></expr></argument>, <argument pos:start="63:31" pos:end="63:34"><expr pos:start="63:31" pos:end="63:34"><name pos:start="63:31" pos:end="63:34">root</name></expr></argument>, <argument pos:start="63:37" pos:end="63:45"><expr pos:start="63:37" pos:end="63:45"><name pos:start="63:37" pos:end="63:45">root_size</name></expr></argument>, <argument pos:start="63:48" pos:end="63:63"><expr pos:start="63:48" pos:end="63:63"><name pos:start="63:48" pos:end="63:63">ff_timeline_le16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="71:5"><if pos:start="65:5" pos:end="71:5">if <condition pos:start="65:8" pos:end="65:17">(<expr pos:start="65:9" pos:end="65:16"><operator pos:start="65:9" pos:end="65:9">!</operator><name pos:start="65:10" pos:end="65:16"><name pos:start="65:10" pos:end="65:12">wtv</name><operator pos:start="65:13" pos:end="65:14">-&gt;</operator><name pos:start="65:15" pos:end="65:16">pb</name></name></expr>)</condition> <block pos:start="65:19" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:35">

        <expr_stmt pos:start="67:9" pos:end="67:59"><expr pos:start="67:9" pos:end="67:58"><call pos:start="67:9" pos:end="67:58"><name pos:start="67:9" pos:end="67:14">av_log</name><argument_list pos:start="67:15" pos:end="67:58">(<argument pos:start="67:16" pos:end="67:16"><expr pos:start="67:16" pos:end="67:16"><name pos:start="67:16" pos:end="67:16">s</name></expr></argument>, <argument pos:start="67:19" pos:end="67:30"><expr pos:start="67:19" pos:end="67:30"><name pos:start="67:19" pos:end="67:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="67:33" pos:end="67:57"><expr pos:start="67:33" pos:end="67:57"><literal type="string" pos:start="67:33" pos:end="67:57">"timeline data missing\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="69:9" pos:end="69:35">return <expr pos:start="69:16" pos:end="69:34"><name pos:start="69:16" pos:end="69:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:46"><expr pos:start="75:5" pos:end="75:45"><name pos:start="75:5" pos:end="75:7">ret</name> <operator pos:start="75:9" pos:end="75:9">=</operator> <call pos:start="75:11" pos:end="75:45"><name pos:start="75:11" pos:end="75:22">parse_chunks</name><argument_list pos:start="75:23" pos:end="75:45">(<argument pos:start="75:24" pos:end="75:24"><expr pos:start="75:24" pos:end="75:24"><name pos:start="75:24" pos:end="75:24">s</name></expr></argument>, <argument pos:start="75:27" pos:end="75:38"><expr pos:start="75:27" pos:end="75:38"><name pos:start="75:27" pos:end="75:38">SEEK_TO_DATA</name></expr></argument>, <argument pos:start="75:41" pos:end="75:41"><expr pos:start="75:41" pos:end="75:41"><literal type="number" pos:start="75:41" pos:end="75:41">0</literal></expr></argument>, <argument pos:start="75:44" pos:end="75:44"><expr pos:start="75:44" pos:end="75:44"><literal type="number" pos:start="75:44" pos:end="75:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="79:19"><if pos:start="77:5" pos:end="79:19">if <condition pos:start="77:8" pos:end="77:16">(<expr pos:start="77:9" pos:end="77:15"><name pos:start="77:9" pos:end="77:11">ret</name> <operator pos:start="77:13" pos:end="77:13">&lt;</operator> <literal type="number" pos:start="77:15" pos:end="77:15">0</literal></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:19"><block_content pos:start="79:9" pos:end="79:19">

        <return pos:start="79:9" pos:end="79:19">return <expr pos:start="79:16" pos:end="79:18"><name pos:start="79:16" pos:end="79:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:38"><expr pos:start="81:5" pos:end="81:37"><call pos:start="81:5" pos:end="81:37"><name pos:start="81:5" pos:end="81:13">avio_seek</name><argument_list pos:start="81:14" pos:end="81:37">(<argument pos:start="81:15" pos:end="81:21"><expr pos:start="81:15" pos:end="81:21"><name pos:start="81:15" pos:end="81:21"><name pos:start="81:15" pos:end="81:17">wtv</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:21">pb</name></name></expr></argument>, <argument pos:start="81:24" pos:end="81:26"><expr pos:start="81:24" pos:end="81:26"><operator pos:start="81:24" pos:end="81:24">-</operator><literal type="number" pos:start="81:25" pos:end="81:26">32</literal></expr></argument>, <argument pos:start="81:29" pos:end="81:36"><expr pos:start="81:29" pos:end="81:36"><name pos:start="81:29" pos:end="81:36">SEEK_CUR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:36"><expr pos:start="85:5" pos:end="85:35"><name pos:start="85:5" pos:end="85:16">timeline_pos</name> <operator pos:start="85:18" pos:end="85:18">=</operator> <call pos:start="85:20" pos:end="85:35"><name pos:start="85:20" pos:end="85:28">avio_tell</name><argument_list pos:start="85:29" pos:end="85:35">(<argument pos:start="85:30" pos:end="85:34"><expr pos:start="85:30" pos:end="85:34"><name pos:start="85:30" pos:end="85:34"><name pos:start="85:30" pos:end="85:30">s</name><operator pos:start="85:31" pos:end="85:32">-&gt;</operator><name pos:start="85:33" pos:end="85:34">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="85:38" pos:end="85:72">// save before opening another file</comment>



    <comment type="block" pos:start="89:5" pos:end="89:23">/* read metadata */</comment>

    <expr_stmt pos:start="91:5" pos:end="91:81"><expr pos:start="91:5" pos:end="91:80"><name pos:start="91:5" pos:end="91:6">pb</name> <operator pos:start="91:8" pos:end="91:8">=</operator> <call pos:start="91:10" pos:end="91:80"><name pos:start="91:10" pos:end="91:21">wtvfile_open</name><argument_list pos:start="91:22" pos:end="91:80">(<argument pos:start="91:23" pos:end="91:23"><expr pos:start="91:23" pos:end="91:23"><name pos:start="91:23" pos:end="91:23">s</name></expr></argument>, <argument pos:start="91:26" pos:end="91:29"><expr pos:start="91:26" pos:end="91:29"><name pos:start="91:26" pos:end="91:29">root</name></expr></argument>, <argument pos:start="91:32" pos:end="91:40"><expr pos:start="91:32" pos:end="91:40"><name pos:start="91:32" pos:end="91:40">root_size</name></expr></argument>, <argument pos:start="91:43" pos:end="91:79"><expr pos:start="91:43" pos:end="91:79"><name pos:start="91:43" pos:end="91:79">ff_table_0_entries_legacy_attrib_le16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="93:5" pos:end="99:5"><if pos:start="93:5" pos:end="99:5">if <condition pos:start="93:8" pos:end="93:11">(<expr pos:start="93:9" pos:end="93:10"><name pos:start="93:9" pos:end="93:10">pb</name></expr>)</condition> <block pos:start="93:13" pos:end="99:5">{<block_content pos:start="95:9" pos:end="97:26">

        <expr_stmt pos:start="95:9" pos:end="95:35"><expr pos:start="95:9" pos:end="95:34"><call pos:start="95:9" pos:end="95:34"><name pos:start="95:9" pos:end="95:27">parse_legacy_attrib</name><argument_list pos:start="95:28" pos:end="95:34">(<argument pos:start="95:29" pos:end="95:29"><expr pos:start="95:29" pos:end="95:29"><name pos:start="95:29" pos:end="95:29">s</name></expr></argument>, <argument pos:start="95:32" pos:end="95:33"><expr pos:start="95:32" pos:end="95:33"><name pos:start="95:32" pos:end="95:33">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:26"><expr pos:start="97:9" pos:end="97:25"><call pos:start="97:9" pos:end="97:25"><name pos:start="97:9" pos:end="97:21">wtvfile_close</name><argument_list pos:start="97:22" pos:end="97:25">(<argument pos:start="97:23" pos:end="97:24"><expr pos:start="97:23" pos:end="97:24"><name pos:start="97:23" pos:end="97:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:38"><expr pos:start="103:5" pos:end="103:37"><name pos:start="103:5" pos:end="103:16"><name pos:start="103:5" pos:end="103:5">s</name><operator pos:start="103:6" pos:end="103:7">-&gt;</operator><name pos:start="103:8" pos:end="103:16">ctx_flags</name></name> <operator pos:start="103:18" pos:end="103:19">|=</operator> <name pos:start="103:21" pos:end="103:37">AVFMTCTX_NOHEADER</name></expr>;</expr_stmt> <comment type="line" pos:start="103:40" pos:end="103:66">// Needed for noStreams.wtv</comment>



    <comment type="block" pos:start="107:5" pos:end="107:25">/* read seek index */</comment>

    <if_stmt pos:start="109:5" pos:end="183:5"><if pos:start="109:5" pos:end="183:5">if <condition pos:start="109:8" pos:end="109:22">(<expr pos:start="109:9" pos:end="109:21"><name pos:start="109:9" pos:end="109:21"><name pos:start="109:9" pos:end="109:9">s</name><operator pos:start="109:10" pos:end="109:11">-&gt;</operator><name pos:start="109:12" pos:end="109:21">nb_streams</name></name></expr>)</condition> <block pos:start="109:24" pos:end="183:5">{<block_content pos:start="111:9" pos:end="181:9">

        <decl_stmt pos:start="111:9" pos:end="111:37"><decl pos:start="111:9" pos:end="111:36"><type pos:start="111:9" pos:end="111:18"><name pos:start="111:9" pos:end="111:16">AVStream</name> <modifier pos:start="111:18" pos:end="111:18">*</modifier></type><name pos:start="111:19" pos:end="111:20">st</name> <init pos:start="111:22" pos:end="111:36">= <expr pos:start="111:24" pos:end="111:36"><name pos:start="111:24" pos:end="111:36"><name pos:start="111:24" pos:end="111:24">s</name><operator pos:start="111:25" pos:end="111:26">-&gt;</operator><name pos:start="111:27" pos:end="111:33">streams</name><index pos:start="111:34" pos:end="111:36">[<expr pos:start="111:35" pos:end="111:35"><literal type="number" pos:start="111:35" pos:end="111:35">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:76"><expr pos:start="113:9" pos:end="113:75"><name pos:start="113:9" pos:end="113:10">pb</name> <operator pos:start="113:12" pos:end="113:12">=</operator> <call pos:start="113:14" pos:end="113:75"><name pos:start="113:14" pos:end="113:25">wtvfile_open</name><argument_list pos:start="113:26" pos:end="113:75">(<argument pos:start="113:27" pos:end="113:27"><expr pos:start="113:27" pos:end="113:27"><name pos:start="113:27" pos:end="113:27">s</name></expr></argument>, <argument pos:start="113:30" pos:end="113:33"><expr pos:start="113:30" pos:end="113:33"><name pos:start="113:30" pos:end="113:33">root</name></expr></argument>, <argument pos:start="113:36" pos:end="113:44"><expr pos:start="113:36" pos:end="113:44"><name pos:start="113:36" pos:end="113:44">root_size</name></expr></argument>, <argument pos:start="113:47" pos:end="113:74"><expr pos:start="113:47" pos:end="113:74"><name pos:start="113:47" pos:end="113:74">ff_table_0_entries_time_le16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="115:9" pos:end="181:9"><if pos:start="115:9" pos:end="181:9">if <condition pos:start="115:12" pos:end="115:15">(<expr pos:start="115:13" pos:end="115:14"><name pos:start="115:13" pos:end="115:14">pb</name></expr>)</condition> <block pos:start="115:17" pos:end="181:9">{<block_content pos:start="117:13" pos:end="179:13">

            <while pos:start="117:13" pos:end="131:13">while<condition pos:start="117:18" pos:end="117:20">(<expr pos:start="117:19" pos:end="117:19"><literal type="number" pos:start="117:19" pos:end="117:19">1</literal></expr>)</condition> <block pos:start="117:22" pos:end="131:13">{<block_content pos:start="119:17" pos:end="129:80">

                <decl_stmt pos:start="119:17" pos:end="119:51"><decl pos:start="119:17" pos:end="119:50"><type pos:start="119:17" pos:end="119:24"><name pos:start="119:17" pos:end="119:24">uint64_t</name></type> <name pos:start="119:26" pos:end="119:34">timestamp</name> <init pos:start="119:36" pos:end="119:50">= <expr pos:start="119:38" pos:end="119:50"><call pos:start="119:38" pos:end="119:50"><name pos:start="119:38" pos:end="119:46">avio_rl64</name><argument_list pos:start="119:47" pos:end="119:50">(<argument pos:start="119:48" pos:end="119:49"><expr pos:start="119:48" pos:end="119:49"><name pos:start="119:48" pos:end="119:49">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="121:17" pos:end="121:51"><decl pos:start="121:17" pos:end="121:50"><type pos:start="121:17" pos:end="121:24"><name pos:start="121:17" pos:end="121:24">uint64_t</name></type> <name pos:start="121:26" pos:end="121:33">frame_nb</name>  <init pos:start="121:36" pos:end="121:50">= <expr pos:start="121:38" pos:end="121:50"><call pos:start="121:38" pos:end="121:50"><name pos:start="121:38" pos:end="121:46">avio_rl64</name><argument_list pos:start="121:47" pos:end="121:50">(<argument pos:start="121:48" pos:end="121:49"><expr pos:start="121:48" pos:end="121:49"><name pos:start="121:48" pos:end="121:49">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="123:17" pos:end="125:26"><if pos:start="123:17" pos:end="125:26">if <condition pos:start="123:20" pos:end="123:34">(<expr pos:start="123:21" pos:end="123:33"><call pos:start="123:21" pos:end="123:33"><name pos:start="123:21" pos:end="123:29">avio_feof</name><argument_list pos:start="123:30" pos:end="123:33">(<argument pos:start="123:31" pos:end="123:32"><expr pos:start="123:31" pos:end="123:32"><name pos:start="123:31" pos:end="123:32">pb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="125:21" pos:end="125:26"><block_content pos:start="125:21" pos:end="125:26">

                    <break pos:start="125:21" pos:end="125:26">break;</break></block_content></block></if></if_stmt>

                <expr_stmt pos:start="127:17" pos:end="129:80"><expr pos:start="127:17" pos:end="129:79"><call pos:start="127:17" pos:end="129:79"><name pos:start="127:17" pos:end="127:34">ff_add_index_entry</name><argument_list pos:start="127:35" pos:end="129:79">(<argument pos:start="127:36" pos:end="127:54"><expr pos:start="127:36" pos:end="127:54"><operator pos:start="127:36" pos:end="127:36">&amp;</operator><name pos:start="127:37" pos:end="127:54"><name pos:start="127:37" pos:end="127:39">wtv</name><operator pos:start="127:40" pos:end="127:41">-&gt;</operator><name pos:start="127:42" pos:end="127:54">index_entries</name></name></expr></argument>, <argument pos:start="127:57" pos:end="127:78"><expr pos:start="127:57" pos:end="127:78"><operator pos:start="127:57" pos:end="127:57">&amp;</operator><name pos:start="127:58" pos:end="127:78"><name pos:start="127:58" pos:end="127:60">wtv</name><operator pos:start="127:61" pos:end="127:62">-&gt;</operator><name pos:start="127:63" pos:end="127:78">nb_index_entries</name></name></expr></argument>, <argument pos:start="127:81" pos:end="127:114"><expr pos:start="127:81" pos:end="127:114"><operator pos:start="127:81" pos:end="127:81">&amp;</operator><name pos:start="127:82" pos:end="127:114"><name pos:start="127:82" pos:end="127:84">wtv</name><operator pos:start="127:85" pos:end="127:86">-&gt;</operator><name pos:start="127:87" pos:end="127:114">index_entries_allocated_size</name></name></expr></argument>,

                                   <argument pos:start="129:36" pos:end="129:36"><expr pos:start="129:36" pos:end="129:36"><literal type="number" pos:start="129:36" pos:end="129:36">0</literal></expr></argument>, <argument pos:start="129:39" pos:end="129:47"><expr pos:start="129:39" pos:end="129:47"><name pos:start="129:39" pos:end="129:47">timestamp</name></expr></argument>, <argument pos:start="129:50" pos:end="129:57"><expr pos:start="129:50" pos:end="129:57"><name pos:start="129:50" pos:end="129:57">frame_nb</name></expr></argument>, <argument pos:start="129:60" pos:end="129:60"><expr pos:start="129:60" pos:end="129:60"><literal type="number" pos:start="129:60" pos:end="129:60">0</literal></expr></argument>, <argument pos:start="129:63" pos:end="129:78"><expr pos:start="129:63" pos:end="129:78"><name pos:start="129:63" pos:end="129:78">AVINDEX_KEYFRAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></while>

            <expr_stmt pos:start="133:13" pos:end="133:30"><expr pos:start="133:13" pos:end="133:29"><call pos:start="133:13" pos:end="133:29"><name pos:start="133:13" pos:end="133:25">wtvfile_close</name><argument_list pos:start="133:26" pos:end="133:29">(<argument pos:start="133:27" pos:end="133:28"><expr pos:start="133:27" pos:end="133:28"><name pos:start="133:27" pos:end="133:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="137:13" pos:end="179:13"><if pos:start="137:13" pos:end="179:13">if <condition pos:start="137:16" pos:end="137:38">(<expr pos:start="137:17" pos:end="137:37"><name pos:start="137:17" pos:end="137:37"><name pos:start="137:17" pos:end="137:19">wtv</name><operator pos:start="137:20" pos:end="137:21">-&gt;</operator><name pos:start="137:22" pos:end="137:37">nb_index_entries</name></name></expr>)</condition> <block pos:start="137:40" pos:end="179:13">{<block_content pos:start="139:17" pos:end="177:17">

                <expr_stmt pos:start="139:17" pos:end="139:95"><expr pos:start="139:17" pos:end="139:94"><name pos:start="139:17" pos:end="139:18">pb</name> <operator pos:start="139:20" pos:end="139:20">=</operator> <call pos:start="139:22" pos:end="139:94"><name pos:start="139:22" pos:end="139:33">wtvfile_open</name><argument_list pos:start="139:34" pos:end="139:94">(<argument pos:start="139:35" pos:end="139:35"><expr pos:start="139:35" pos:end="139:35"><name pos:start="139:35" pos:end="139:35">s</name></expr></argument>, <argument pos:start="139:38" pos:end="139:41"><expr pos:start="139:38" pos:end="139:41"><name pos:start="139:38" pos:end="139:41">root</name></expr></argument>, <argument pos:start="139:44" pos:end="139:52"><expr pos:start="139:44" pos:end="139:52"><name pos:start="139:44" pos:end="139:52">root_size</name></expr></argument>, <argument pos:start="139:55" pos:end="139:93"><expr pos:start="139:55" pos:end="139:93"><name pos:start="139:55" pos:end="139:93">ff_timeline_table_0_entries_Events_le16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="141:17" pos:end="177:17"><if pos:start="141:17" pos:end="177:17">if <condition pos:start="141:20" pos:end="141:23">(<expr pos:start="141:21" pos:end="141:22"><name pos:start="141:21" pos:end="141:22">pb</name></expr>)</condition> <block pos:start="141:25" pos:end="177:17">{<block_content pos:start="143:21" pos:end="175:52">

                    <decl_stmt pos:start="143:21" pos:end="143:57"><decl pos:start="143:21" pos:end="143:56"><type pos:start="143:21" pos:end="143:34"><name pos:start="143:21" pos:end="143:32">AVIndexEntry</name> <modifier pos:start="143:34" pos:end="143:34">*</modifier></type><name pos:start="143:35" pos:end="143:35">e</name> <init pos:start="143:37" pos:end="143:56">= <expr pos:start="143:39" pos:end="143:56"><name pos:start="143:39" pos:end="143:56"><name pos:start="143:39" pos:end="143:41">wtv</name><operator pos:start="143:42" pos:end="143:43">-&gt;</operator><name pos:start="143:44" pos:end="143:56">index_entries</name></name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="145:21" pos:end="145:89"><decl pos:start="145:21" pos:end="145:88"><type pos:start="145:21" pos:end="145:34"><name pos:start="145:21" pos:end="145:32">AVIndexEntry</name> <modifier pos:start="145:34" pos:end="145:34">*</modifier></type><name pos:start="145:35" pos:end="145:39">e_end</name> <init pos:start="145:41" pos:end="145:88">= <expr pos:start="145:43" pos:end="145:88"><name pos:start="145:43" pos:end="145:60"><name pos:start="145:43" pos:end="145:45">wtv</name><operator pos:start="145:46" pos:end="145:47">-&gt;</operator><name pos:start="145:48" pos:end="145:60">index_entries</name></name> <operator pos:start="145:62" pos:end="145:62">+</operator> <name pos:start="145:64" pos:end="145:84"><name pos:start="145:64" pos:end="145:66">wtv</name><operator pos:start="145:67" pos:end="145:68">-&gt;</operator><name pos:start="145:69" pos:end="145:84">nb_index_entries</name></name> <operator pos:start="145:86" pos:end="145:86">-</operator> <literal type="number" pos:start="145:88" pos:end="145:88">1</literal></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="147:21" pos:end="147:47"><decl pos:start="147:21" pos:end="147:46"><type pos:start="147:21" pos:end="147:28"><name pos:start="147:21" pos:end="147:28">uint64_t</name></type> <name pos:start="147:30" pos:end="147:42">last_position</name> <init pos:start="147:44" pos:end="147:46">= <expr pos:start="147:46" pos:end="147:46"><literal type="number" pos:start="147:46" pos:end="147:46">0</literal></expr></init></decl>;</decl_stmt>

                    <while pos:start="149:21" pos:end="169:21">while <condition pos:start="149:27" pos:end="149:29">(<expr pos:start="149:28" pos:end="149:28"><literal type="number" pos:start="149:28" pos:end="149:28">1</literal></expr>)</condition> <block pos:start="149:31" pos:end="169:21">{<block_content pos:start="151:25" pos:end="167:49">

                        <decl_stmt pos:start="151:25" pos:end="151:58"><decl pos:start="151:25" pos:end="151:57"><type pos:start="151:25" pos:end="151:32"><name pos:start="151:25" pos:end="151:32">uint64_t</name></type> <name pos:start="151:34" pos:end="151:41">frame_nb</name> <init pos:start="151:43" pos:end="151:57">= <expr pos:start="151:45" pos:end="151:57"><call pos:start="151:45" pos:end="151:57"><name pos:start="151:45" pos:end="151:53">avio_rl64</name><argument_list pos:start="151:54" pos:end="151:57">(<argument pos:start="151:55" pos:end="151:56"><expr pos:start="151:55" pos:end="151:56"><name pos:start="151:55" pos:end="151:56">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="153:25" pos:end="153:58"><decl pos:start="153:25" pos:end="153:57"><type pos:start="153:25" pos:end="153:32"><name pos:start="153:25" pos:end="153:32">uint64_t</name></type> <name pos:start="153:34" pos:end="153:41">position</name> <init pos:start="153:43" pos:end="153:57">= <expr pos:start="153:45" pos:end="153:57"><call pos:start="153:45" pos:end="153:57"><name pos:start="153:45" pos:end="153:53">avio_rl64</name><argument_list pos:start="153:54" pos:end="153:57">(<argument pos:start="153:55" pos:end="153:56"><expr pos:start="153:55" pos:end="153:56"><name pos:start="153:55" pos:end="153:56">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                        <while pos:start="155:25" pos:end="161:25">while <condition pos:start="155:31" pos:end="155:64">(<expr pos:start="155:32" pos:end="155:63"><name pos:start="155:32" pos:end="155:39">frame_nb</name> <operator pos:start="155:41" pos:end="155:41">&gt;</operator> <name pos:start="155:43" pos:end="155:49"><name pos:start="155:43" pos:end="155:43">e</name><operator pos:start="155:44" pos:end="155:45">-&gt;</operator><name pos:start="155:46" pos:end="155:49">size</name></name> <operator pos:start="155:51" pos:end="155:52">&amp;&amp;</operator> <name pos:start="155:54" pos:end="155:54">e</name> <operator pos:start="155:56" pos:end="155:57">&lt;=</operator> <name pos:start="155:59" pos:end="155:63">e_end</name></expr>)</condition> <block pos:start="155:66" pos:end="161:25">{<block_content pos:start="157:29" pos:end="159:32">

                            <expr_stmt pos:start="157:29" pos:end="157:51"><expr pos:start="157:29" pos:end="157:50"><name pos:start="157:29" pos:end="157:34"><name pos:start="157:29" pos:end="157:29">e</name><operator pos:start="157:30" pos:end="157:31">-&gt;</operator><name pos:start="157:32" pos:end="157:34">pos</name></name> <operator pos:start="157:36" pos:end="157:36">=</operator> <name pos:start="157:38" pos:end="157:50">last_position</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="159:29" pos:end="159:32"><expr pos:start="159:29" pos:end="159:31"><name pos:start="159:29" pos:end="159:29">e</name><operator pos:start="159:30" pos:end="159:31">++</operator></expr>;</expr_stmt>

                        </block_content>}</block></while>

                        <if_stmt pos:start="163:25" pos:end="165:34"><if pos:start="163:25" pos:end="165:34">if <condition pos:start="163:28" pos:end="163:42">(<expr pos:start="163:29" pos:end="163:41"><call pos:start="163:29" pos:end="163:41"><name pos:start="163:29" pos:end="163:37">avio_feof</name><argument_list pos:start="163:38" pos:end="163:41">(<argument pos:start="163:39" pos:end="163:40"><expr pos:start="163:39" pos:end="163:40"><name pos:start="163:39" pos:end="163:40">pb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="165:29" pos:end="165:34"><block_content pos:start="165:29" pos:end="165:34">

                            <break pos:start="165:29" pos:end="165:34">break;</break></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="167:25" pos:end="167:49"><expr pos:start="167:25" pos:end="167:48"><name pos:start="167:25" pos:end="167:37">last_position</name> <operator pos:start="167:39" pos:end="167:39">=</operator> <name pos:start="167:41" pos:end="167:48">position</name></expr>;</expr_stmt>

                    </block_content>}</block></while>

                    <expr_stmt pos:start="171:21" pos:end="171:47"><expr pos:start="171:21" pos:end="171:46"><name pos:start="171:21" pos:end="171:30"><name pos:start="171:21" pos:end="171:25">e_end</name><operator pos:start="171:26" pos:end="171:27">-&gt;</operator><name pos:start="171:28" pos:end="171:30">pos</name></name> <operator pos:start="171:32" pos:end="171:32">=</operator> <name pos:start="171:34" pos:end="171:46">last_position</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="173:21" pos:end="173:38"><expr pos:start="173:21" pos:end="173:37"><call pos:start="173:21" pos:end="173:37"><name pos:start="173:21" pos:end="173:33">wtvfile_close</name><argument_list pos:start="173:34" pos:end="173:37">(<argument pos:start="173:35" pos:end="173:36"><expr pos:start="173:35" pos:end="173:36"><name pos:start="173:35" pos:end="173:36">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="175:21" pos:end="175:52"><expr pos:start="175:21" pos:end="175:51"><name pos:start="175:21" pos:end="175:32"><name pos:start="175:21" pos:end="175:22">st</name><operator pos:start="175:23" pos:end="175:24">-&gt;</operator><name pos:start="175:25" pos:end="175:32">duration</name></name> <operator pos:start="175:34" pos:end="175:34">=</operator> <name pos:start="175:36" pos:end="175:51"><name pos:start="175:36" pos:end="175:40">e_end</name><operator pos:start="175:41" pos:end="175:42">-&gt;</operator><name pos:start="175:43" pos:end="175:51">timestamp</name></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="187:5" pos:end="187:45"><expr pos:start="187:5" pos:end="187:44"><call pos:start="187:5" pos:end="187:44"><name pos:start="187:5" pos:end="187:13">avio_seek</name><argument_list pos:start="187:14" pos:end="187:44">(<argument pos:start="187:15" pos:end="187:19"><expr pos:start="187:15" pos:end="187:19"><name pos:start="187:15" pos:end="187:19"><name pos:start="187:15" pos:end="187:15">s</name><operator pos:start="187:16" pos:end="187:17">-&gt;</operator><name pos:start="187:18" pos:end="187:19">pb</name></name></expr></argument>, <argument pos:start="187:22" pos:end="187:33"><expr pos:start="187:22" pos:end="187:33"><name pos:start="187:22" pos:end="187:33">timeline_pos</name></expr></argument>, <argument pos:start="187:36" pos:end="187:43"><expr pos:start="187:36" pos:end="187:43"><name pos:start="187:36" pos:end="187:43">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="189:5" pos:end="189:13">return <expr pos:start="189:12" pos:end="189:12"><literal type="number" pos:start="189:12" pos:end="189:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
