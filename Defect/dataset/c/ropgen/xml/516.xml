<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/516.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:23"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">hnm_decode_frame</name><parameter_list pos:start="1:28" pos:end="3:60">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:61"><decl pos:start="1:52" pos:end="1:61"><type pos:start="1:52" pos:end="1:61"><name pos:start="1:52" pos:end="1:55">void</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">data</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:42"><decl pos:start="3:29" pos:end="3:42"><type pos:start="3:29" pos:end="3:42"><name pos:start="3:29" pos:end="3:31">int</name> <modifier pos:start="3:33" pos:end="3:33">*</modifier></type><name pos:start="3:34" pos:end="3:42">got_frame</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:59"><decl pos:start="3:45" pos:end="3:59"><type pos:start="3:45" pos:end="3:59"><name pos:start="3:45" pos:end="3:52">AVPacket</name> <modifier pos:start="3:54" pos:end="3:54">*</modifier></type><name pos:start="3:55" pos:end="3:59">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="103:23">{<block_content pos:start="7:5" pos:end="103:23">

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">AVFrame</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:18">frame</name> <init pos:start="7:20" pos:end="7:25">= <expr pos:start="7:22" pos:end="7:25"><name pos:start="7:22" pos:end="7:25">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:45"><decl pos:start="9:5" pos:end="9:44"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">Hnm4VideoContext</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:25">hnm</name> <init pos:start="9:27" pos:end="9:44">= <expr pos:start="9:29" pos:end="9:44"><name pos:start="9:29" pos:end="9:44"><name pos:start="9:29" pos:end="9:33">avctx</name><operator pos:start="9:34" pos:end="9:35">-&gt;</operator><name pos:start="9:36" pos:end="9:44">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint16_t</name></type> <name pos:start="13:14" pos:end="13:21">chunk_id</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="103:23"><if pos:start="17:5" pos:end="103:23">if <condition pos:start="17:8" pos:end="17:24">(<expr pos:start="17:9" pos:end="17:23"><name pos:start="17:9" pos:end="17:19"><name pos:start="17:9" pos:end="17:13">avpkt</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:19">size</name></name> <operator pos:start="17:21" pos:end="17:21">&lt;</operator> <literal type="number" pos:start="17:23" pos:end="17:23">8</literal></expr>)</condition> <block pos:start="17:26" pos:end="103:23">{<block_content pos:start="24:5" pos:end="103:23">






    <if_stmt pos:start="24:5" pos:end="26:19"><if pos:start="24:5" pos:end="26:19">if <condition pos:start="24:8" pos:end="24:51">(<expr pos:start="24:9" pos:end="24:50"><operator pos:start="24:9" pos:end="24:9">(</operator><name pos:start="24:10" pos:end="24:12">ret</name> <operator pos:start="24:14" pos:end="24:14">=</operator> <call pos:start="24:16" pos:end="24:45"><name pos:start="24:16" pos:end="24:28">ff_get_buffer</name><argument_list pos:start="24:29" pos:end="24:45">(<argument pos:start="24:30" pos:end="24:34"><expr pos:start="24:30" pos:end="24:34"><name pos:start="24:30" pos:end="24:34">avctx</name></expr></argument>, <argument pos:start="24:37" pos:end="24:41"><expr pos:start="24:37" pos:end="24:41"><name pos:start="24:37" pos:end="24:41">frame</name></expr></argument>, <argument pos:start="24:44" pos:end="24:44"><expr pos:start="24:44" pos:end="24:44"><literal type="number" pos:start="24:44" pos:end="24:44">0</literal></expr></argument>)</argument_list></call><operator pos:start="24:46" pos:end="24:46">)</operator> <operator pos:start="24:48" pos:end="24:48">&lt;</operator> <literal type="number" pos:start="24:50" pos:end="24:50">0</literal></expr>)</condition><block type="pseudo" pos:start="26:9" pos:end="26:19"><block_content pos:start="26:9" pos:end="26:19">

        <return pos:start="26:9" pos:end="26:19">return <expr pos:start="26:16" pos:end="26:18"><name pos:start="26:16" pos:end="26:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="30:5" pos:end="30:40"><expr pos:start="30:5" pos:end="30:39"><name pos:start="30:5" pos:end="30:12">chunk_id</name> <operator pos:start="30:14" pos:end="30:14">=</operator> <call pos:start="30:16" pos:end="30:39"><name pos:start="30:16" pos:end="30:22">AV_RL16</name><argument_list pos:start="30:23" pos:end="30:39">(<argument pos:start="30:24" pos:end="30:38"><expr pos:start="30:24" pos:end="30:38"><name pos:start="30:24" pos:end="30:34"><name pos:start="30:24" pos:end="30:28">avpkt</name><operator pos:start="30:29" pos:end="30:30">-&gt;</operator><name pos:start="30:31" pos:end="30:34">data</name></name> <operator pos:start="30:36" pos:end="30:36">+</operator> <literal type="number" pos:start="30:38" pos:end="30:38">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="34:5" pos:end="103:23"><if pos:start="34:5" pos:end="40:5">if <condition pos:start="34:8" pos:end="34:37">(<expr pos:start="34:9" pos:end="34:36"><name pos:start="34:9" pos:end="34:16">chunk_id</name> <operator pos:start="34:18" pos:end="34:19">==</operator> <name pos:start="34:21" pos:end="34:36">HNM4_CHUNK_ID_PL</name></expr>)</condition> <block pos:start="34:39" pos:end="40:5">{<block_content pos:start="36:9" pos:end="38:39">

        <expr_stmt pos:start="36:9" pos:end="36:60"><expr pos:start="36:9" pos:end="36:59"><call pos:start="36:9" pos:end="36:59"><name pos:start="36:9" pos:end="36:26">hnm_update_palette</name><argument_list pos:start="36:27" pos:end="36:59">(<argument pos:start="36:28" pos:end="36:32"><expr pos:start="36:28" pos:end="36:32"><name pos:start="36:28" pos:end="36:32">avctx</name></expr></argument>, <argument pos:start="36:35" pos:end="36:45"><expr pos:start="36:35" pos:end="36:45"><name pos:start="36:35" pos:end="36:45"><name pos:start="36:35" pos:end="36:39">avpkt</name><operator pos:start="36:40" pos:end="36:41">-&gt;</operator><name pos:start="36:42" pos:end="36:45">data</name></name></expr></argument>, <argument pos:start="36:48" pos:end="36:58"><expr pos:start="36:48" pos:end="36:58"><name pos:start="36:48" pos:end="36:58"><name pos:start="36:48" pos:end="36:52">avpkt</name><operator pos:start="36:53" pos:end="36:54">-&gt;</operator><name pos:start="36:55" pos:end="36:58">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="38:9" pos:end="38:39"><expr pos:start="38:9" pos:end="38:38"><name pos:start="38:9" pos:end="38:34"><name pos:start="38:9" pos:end="38:13">frame</name><operator pos:start="38:14" pos:end="38:15">-&gt;</operator><name pos:start="38:16" pos:end="38:34">palette_has_changed</name></name> <operator pos:start="38:36" pos:end="38:36">=</operator> <literal type="number" pos:start="38:38" pos:end="38:38">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="40:7" pos:end="68:5">else if <condition pos:start="40:15" pos:end="40:44">(<expr pos:start="40:16" pos:end="40:43"><name pos:start="40:16" pos:end="40:23">chunk_id</name> <operator pos:start="40:25" pos:end="40:26">==</operator> <name pos:start="40:28" pos:end="40:43">HNM4_CHUNK_ID_IZ</name></expr>)</condition> <block pos:start="40:46" pos:end="68:5">{<block_content pos:start="46:9" pos:end="66:23">





        <expr_stmt pos:start="46:9" pos:end="46:69"><expr pos:start="46:9" pos:end="46:68"><call pos:start="46:9" pos:end="46:68"><name pos:start="46:9" pos:end="46:25">unpack_intraframe</name><argument_list pos:start="46:26" pos:end="46:68">(<argument pos:start="46:27" pos:end="46:31"><expr pos:start="46:27" pos:end="46:31"><name pos:start="46:27" pos:end="46:31">avctx</name></expr></argument>, <argument pos:start="46:34" pos:end="46:49"><expr pos:start="46:34" pos:end="46:49"><name pos:start="46:34" pos:end="46:44"><name pos:start="46:34" pos:end="46:38">avpkt</name><operator pos:start="46:39" pos:end="46:40">-&gt;</operator><name pos:start="46:41" pos:end="46:44">data</name></name> <operator pos:start="46:46" pos:end="46:46">+</operator> <literal type="number" pos:start="46:48" pos:end="46:49">12</literal></expr></argument>, <argument pos:start="46:52" pos:end="46:67"><expr pos:start="46:52" pos:end="46:67"><name pos:start="46:52" pos:end="46:62"><name pos:start="46:52" pos:end="46:56">avpkt</name><operator pos:start="46:57" pos:end="46:58">-&gt;</operator><name pos:start="46:59" pos:end="46:62">size</name></name> <operator pos:start="46:64" pos:end="46:64">-</operator> <literal type="number" pos:start="46:66" pos:end="46:67">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="48:9" pos:end="48:70"><expr pos:start="48:9" pos:end="48:69"><call pos:start="48:9" pos:end="48:69"><name pos:start="48:9" pos:end="48:14">memcpy</name><argument_list pos:start="48:15" pos:end="48:69">(<argument pos:start="48:16" pos:end="48:28"><expr pos:start="48:16" pos:end="48:28"><name pos:start="48:16" pos:end="48:28"><name pos:start="48:16" pos:end="48:18">hnm</name><operator pos:start="48:19" pos:end="48:20">-&gt;</operator><name pos:start="48:21" pos:end="48:28">previous</name></name></expr></argument>, <argument pos:start="48:31" pos:end="48:42"><expr pos:start="48:31" pos:end="48:42"><name pos:start="48:31" pos:end="48:42"><name pos:start="48:31" pos:end="48:33">hnm</name><operator pos:start="48:34" pos:end="48:35">-&gt;</operator><name pos:start="48:36" pos:end="48:42">current</name></name></expr></argument>, <argument pos:start="48:45" pos:end="48:68"><expr pos:start="48:45" pos:end="48:68"><name pos:start="48:45" pos:end="48:54"><name pos:start="48:45" pos:end="48:47">hnm</name><operator pos:start="48:48" pos:end="48:49">-&gt;</operator><name pos:start="48:50" pos:end="48:54">width</name></name> <operator pos:start="48:56" pos:end="48:56">*</operator> <name pos:start="48:58" pos:end="48:68"><name pos:start="48:58" pos:end="48:60">hnm</name><operator pos:start="48:61" pos:end="48:62">-&gt;</operator><name pos:start="48:63" pos:end="48:68">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="50:9" pos:end="56:45"><if pos:start="50:9" pos:end="52:75">if <condition pos:start="50:12" pos:end="50:33">(<expr pos:start="50:13" pos:end="50:32"><name pos:start="50:13" pos:end="50:24"><name pos:start="50:13" pos:end="50:15">hnm</name><operator pos:start="50:16" pos:end="50:17">-&gt;</operator><name pos:start="50:18" pos:end="50:24">version</name></name> <operator pos:start="50:26" pos:end="50:27">==</operator> <literal type="number" pos:start="50:29" pos:end="50:32">0x4a</literal></expr>)</condition><block type="pseudo" pos:start="52:13" pos:end="52:75"><block_content pos:start="52:13" pos:end="52:75">

            <expr_stmt pos:start="52:13" pos:end="52:75"><expr pos:start="52:13" pos:end="52:74"><call pos:start="52:13" pos:end="52:74"><name pos:start="52:13" pos:end="52:18">memcpy</name><argument_list pos:start="52:19" pos:end="52:74">(<argument pos:start="52:20" pos:end="52:33"><expr pos:start="52:20" pos:end="52:33"><name pos:start="52:20" pos:end="52:33"><name pos:start="52:20" pos:end="52:22">hnm</name><operator pos:start="52:23" pos:end="52:24">-&gt;</operator><name pos:start="52:25" pos:end="52:33">processed</name></name></expr></argument>, <argument pos:start="52:36" pos:end="52:47"><expr pos:start="52:36" pos:end="52:47"><name pos:start="52:36" pos:end="52:47"><name pos:start="52:36" pos:end="52:38">hnm</name><operator pos:start="52:39" pos:end="52:40">-&gt;</operator><name pos:start="52:41" pos:end="52:47">current</name></name></expr></argument>, <argument pos:start="52:50" pos:end="52:73"><expr pos:start="52:50" pos:end="52:73"><name pos:start="52:50" pos:end="52:59"><name pos:start="52:50" pos:end="52:52">hnm</name><operator pos:start="52:53" pos:end="52:54">-&gt;</operator><name pos:start="52:55" pos:end="52:59">width</name></name> <operator pos:start="52:61" pos:end="52:61">*</operator> <name pos:start="52:63" pos:end="52:73"><name pos:start="52:63" pos:end="52:65">hnm</name><operator pos:start="52:66" pos:end="52:67">-&gt;</operator><name pos:start="52:68" pos:end="52:73">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="54:9" pos:end="56:45">else<block type="pseudo" pos:start="56:13" pos:end="56:45"><block_content pos:start="56:13" pos:end="56:45">

            <expr_stmt pos:start="56:13" pos:end="56:45"><expr pos:start="56:13" pos:end="56:44"><call pos:start="56:13" pos:end="56:44"><name pos:start="56:13" pos:end="56:37">postprocess_current_frame</name><argument_list pos:start="56:38" pos:end="56:44">(<argument pos:start="56:39" pos:end="56:43"><expr pos:start="56:39" pos:end="56:43"><name pos:start="56:39" pos:end="56:43">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="58:9" pos:end="58:43"><expr pos:start="58:9" pos:end="58:42"><call pos:start="58:9" pos:end="58:42"><name pos:start="58:9" pos:end="58:28">copy_processed_frame</name><argument_list pos:start="58:29" pos:end="58:42">(<argument pos:start="58:30" pos:end="58:34"><expr pos:start="58:30" pos:end="58:34"><name pos:start="58:30" pos:end="58:34">avctx</name></expr></argument>, <argument pos:start="58:37" pos:end="58:41"><expr pos:start="58:37" pos:end="58:41"><name pos:start="58:37" pos:end="58:41">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="60:9" pos:end="60:45"><expr pos:start="60:9" pos:end="60:44"><name pos:start="60:9" pos:end="60:24"><name pos:start="60:9" pos:end="60:13">frame</name><operator pos:start="60:14" pos:end="60:15">-&gt;</operator><name pos:start="60:16" pos:end="60:24">pict_type</name></name> <operator pos:start="60:26" pos:end="60:26">=</operator> <name pos:start="60:28" pos:end="60:44">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

        <expr_stmt pos:start="62:9" pos:end="62:29"><expr pos:start="62:9" pos:end="62:28"><name pos:start="62:9" pos:end="62:24"><name pos:start="62:9" pos:end="62:13">frame</name><operator pos:start="62:14" pos:end="62:15">-&gt;</operator><name pos:start="62:16" pos:end="62:24">key_frame</name></name> <operator pos:start="62:26" pos:end="62:26">=</operator> <literal type="number" pos:start="62:28" pos:end="62:28">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="64:9" pos:end="64:54"><expr pos:start="64:9" pos:end="64:53"><call pos:start="64:9" pos:end="64:53"><name pos:start="64:9" pos:end="64:14">memcpy</name><argument_list pos:start="64:15" pos:end="64:53">(<argument pos:start="64:16" pos:end="64:29"><expr pos:start="64:16" pos:end="64:29"><name pos:start="64:16" pos:end="64:29"><name pos:start="64:16" pos:end="64:20">frame</name><operator pos:start="64:21" pos:end="64:22">-&gt;</operator><name pos:start="64:23" pos:end="64:26">data</name><index pos:start="64:27" pos:end="64:29">[<expr pos:start="64:28" pos:end="64:28"><literal type="number" pos:start="64:28" pos:end="64:28">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="64:32" pos:end="64:43"><expr pos:start="64:32" pos:end="64:43"><name pos:start="64:32" pos:end="64:43"><name pos:start="64:32" pos:end="64:34">hnm</name><operator pos:start="64:35" pos:end="64:36">-&gt;</operator><name pos:start="64:37" pos:end="64:43">palette</name></name></expr></argument>, <argument pos:start="64:46" pos:end="64:52"><expr pos:start="64:46" pos:end="64:52"><literal type="number" pos:start="64:46" pos:end="64:48">256</literal> <operator pos:start="64:50" pos:end="64:50">*</operator> <literal type="number" pos:start="64:52" pos:end="64:52">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="66:9" pos:end="66:23"><expr pos:start="66:9" pos:end="66:22"><operator pos:start="66:9" pos:end="66:9">*</operator><name pos:start="66:10" pos:end="66:18">got_frame</name> <operator pos:start="66:20" pos:end="66:20">=</operator> <literal type="number" pos:start="66:22" pos:end="66:22">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="68:7" pos:end="103:23">else if <condition pos:start="68:15" pos:end="68:44">(<expr pos:start="68:16" pos:end="68:43"><name pos:start="68:16" pos:end="68:23">chunk_id</name> <operator pos:start="68:25" pos:end="68:26">==</operator> <name pos:start="68:28" pos:end="68:43">HNM4_CHUNK_ID_IU</name></expr>)</condition> <block pos:start="68:46" pos:end="103:23">{<block_content pos:start="70:9" pos:end="103:23">

        <if_stmt pos:start="70:9" pos:end="95:5"><if pos:start="70:9" pos:end="76:9">if <condition pos:start="70:12" pos:end="70:33">(<expr pos:start="70:13" pos:end="70:32"><name pos:start="70:13" pos:end="70:24"><name pos:start="70:13" pos:end="70:15">hnm</name><operator pos:start="70:16" pos:end="70:17">-&gt;</operator><name pos:start="70:18" pos:end="70:24">version</name></name> <operator pos:start="70:26" pos:end="70:27">==</operator> <literal type="number" pos:start="70:29" pos:end="70:32">0x4a</literal></expr>)</condition> <block pos:start="70:35" pos:end="76:9">{<block_content pos:start="72:13" pos:end="74:75">

            <expr_stmt pos:start="72:13" pos:end="72:75"><expr pos:start="72:13" pos:end="72:74"><call pos:start="72:13" pos:end="72:74"><name pos:start="72:13" pos:end="72:33">decode_interframe_v4a</name><argument_list pos:start="72:34" pos:end="72:74">(<argument pos:start="72:35" pos:end="72:39"><expr pos:start="72:35" pos:end="72:39"><name pos:start="72:35" pos:end="72:39">avctx</name></expr></argument>, <argument pos:start="72:42" pos:end="72:56"><expr pos:start="72:42" pos:end="72:56"><name pos:start="72:42" pos:end="72:52"><name pos:start="72:42" pos:end="72:46">avpkt</name><operator pos:start="72:47" pos:end="72:48">-&gt;</operator><name pos:start="72:49" pos:end="72:52">data</name></name> <operator pos:start="72:54" pos:end="72:54">+</operator> <literal type="number" pos:start="72:56" pos:end="72:56">8</literal></expr></argument>, <argument pos:start="72:59" pos:end="72:73"><expr pos:start="72:59" pos:end="72:73"><name pos:start="72:59" pos:end="72:69"><name pos:start="72:59" pos:end="72:63">avpkt</name><operator pos:start="72:64" pos:end="72:65">-&gt;</operator><name pos:start="72:66" pos:end="72:69">size</name></name> <operator pos:start="72:71" pos:end="72:71">-</operator> <literal type="number" pos:start="72:73" pos:end="72:73">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="74:13" pos:end="74:75"><expr pos:start="74:13" pos:end="74:74"><call pos:start="74:13" pos:end="74:74"><name pos:start="74:13" pos:end="74:18">memcpy</name><argument_list pos:start="74:19" pos:end="74:74">(<argument pos:start="74:20" pos:end="74:33"><expr pos:start="74:20" pos:end="74:33"><name pos:start="74:20" pos:end="74:33"><name pos:start="74:20" pos:end="74:22">hnm</name><operator pos:start="74:23" pos:end="74:24">-&gt;</operator><name pos:start="74:25" pos:end="74:33">processed</name></name></expr></argument>, <argument pos:start="74:36" pos:end="74:47"><expr pos:start="74:36" pos:end="74:47"><name pos:start="74:36" pos:end="74:47"><name pos:start="74:36" pos:end="74:38">hnm</name><operator pos:start="74:39" pos:end="74:40">-&gt;</operator><name pos:start="74:41" pos:end="74:47">current</name></name></expr></argument>, <argument pos:start="74:50" pos:end="74:73"><expr pos:start="74:50" pos:end="74:73"><name pos:start="74:50" pos:end="74:59"><name pos:start="74:50" pos:end="74:52">hnm</name><operator pos:start="74:53" pos:end="74:54">-&gt;</operator><name pos:start="74:55" pos:end="74:59">width</name></name> <operator pos:start="74:61" pos:end="74:61">*</operator> <name pos:start="74:63" pos:end="74:73"><name pos:start="74:63" pos:end="74:65">hnm</name><operator pos:start="74:66" pos:end="74:67">-&gt;</operator><name pos:start="74:68" pos:end="74:73">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="76:11" pos:end="95:5">else <block pos:start="76:16" pos:end="95:5">{<block_content pos:start="78:13" pos:end="93:30">

            <expr_stmt pos:start="78:13" pos:end="78:74"><expr pos:start="78:13" pos:end="78:73"><call pos:start="78:13" pos:end="78:73"><name pos:start="78:13" pos:end="78:32">decode_interframe_v4</name><argument_list pos:start="78:33" pos:end="78:73">(<argument pos:start="78:34" pos:end="78:38"><expr pos:start="78:34" pos:end="78:38"><name pos:start="78:34" pos:end="78:38">avctx</name></expr></argument>, <argument pos:start="78:41" pos:end="78:55"><expr pos:start="78:41" pos:end="78:55"><name pos:start="78:41" pos:end="78:51"><name pos:start="78:41" pos:end="78:45">avpkt</name><operator pos:start="78:46" pos:end="78:47">-&gt;</operator><name pos:start="78:48" pos:end="78:51">data</name></name> <operator pos:start="78:53" pos:end="78:53">+</operator> <literal type="number" pos:start="78:55" pos:end="78:55">8</literal></expr></argument>, <argument pos:start="78:58" pos:end="78:72"><expr pos:start="78:58" pos:end="78:72"><name pos:start="78:58" pos:end="78:68"><name pos:start="78:58" pos:end="78:62">avpkt</name><operator pos:start="78:63" pos:end="78:64">-&gt;</operator><name pos:start="78:65" pos:end="78:68">size</name></name> <operator pos:start="78:70" pos:end="78:70">-</operator> <literal type="number" pos:start="78:72" pos:end="78:72">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="80:13" pos:end="80:45"><expr pos:start="80:13" pos:end="80:44"><call pos:start="80:13" pos:end="80:44"><name pos:start="80:13" pos:end="80:37">postprocess_current_frame</name><argument_list pos:start="80:38" pos:end="80:44">(<argument pos:start="80:39" pos:end="80:43"><expr pos:start="80:39" pos:end="80:43"><name pos:start="80:39" pos:end="80:43">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


        <expr_stmt pos:start="83:9" pos:end="83:43"><expr pos:start="83:9" pos:end="83:42"><call pos:start="83:9" pos:end="83:42"><name pos:start="83:9" pos:end="83:28">copy_processed_frame</name><argument_list pos:start="83:29" pos:end="83:42">(<argument pos:start="83:30" pos:end="83:34"><expr pos:start="83:30" pos:end="83:34"><name pos:start="83:30" pos:end="83:34">avctx</name></expr></argument>, <argument pos:start="83:37" pos:end="83:41"><expr pos:start="83:37" pos:end="83:41"><name pos:start="83:37" pos:end="83:41">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:45"><expr pos:start="85:9" pos:end="85:44"><name pos:start="85:9" pos:end="85:24"><name pos:start="85:9" pos:end="85:13">frame</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:24">pict_type</name></name> <operator pos:start="85:26" pos:end="85:26">=</operator> <name pos:start="85:28" pos:end="85:44">AV_PICTURE_TYPE_P</name></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:29"><expr pos:start="87:9" pos:end="87:28"><name pos:start="87:9" pos:end="87:24"><name pos:start="87:9" pos:end="87:13">frame</name><operator pos:start="87:14" pos:end="87:15">-&gt;</operator><name pos:start="87:16" pos:end="87:24">key_frame</name></name> <operator pos:start="87:26" pos:end="87:26">=</operator> <literal type="number" pos:start="87:28" pos:end="87:28">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:54"><expr pos:start="89:9" pos:end="89:53"><call pos:start="89:9" pos:end="89:53"><name pos:start="89:9" pos:end="89:14">memcpy</name><argument_list pos:start="89:15" pos:end="89:53">(<argument pos:start="89:16" pos:end="89:29"><expr pos:start="89:16" pos:end="89:29"><name pos:start="89:16" pos:end="89:29"><name pos:start="89:16" pos:end="89:20">frame</name><operator pos:start="89:21" pos:end="89:22">-&gt;</operator><name pos:start="89:23" pos:end="89:26">data</name><index pos:start="89:27" pos:end="89:29">[<expr pos:start="89:28" pos:end="89:28"><literal type="number" pos:start="89:28" pos:end="89:28">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="89:32" pos:end="89:43"><expr pos:start="89:32" pos:end="89:43"><name pos:start="89:32" pos:end="89:43"><name pos:start="89:32" pos:end="89:34">hnm</name><operator pos:start="89:35" pos:end="89:36">-&gt;</operator><name pos:start="89:37" pos:end="89:43">palette</name></name></expr></argument>, <argument pos:start="89:46" pos:end="89:52"><expr pos:start="89:46" pos:end="89:52"><literal type="number" pos:start="89:46" pos:end="89:48">256</literal> <operator pos:start="89:50" pos:end="89:50">*</operator> <literal type="number" pos:start="89:52" pos:end="89:52">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:23"><expr pos:start="91:9" pos:end="91:22"><operator pos:start="91:9" pos:end="91:9">*</operator><name pos:start="91:10" pos:end="91:18">got_frame</name> <operator pos:start="91:20" pos:end="91:20">=</operator> <literal type="number" pos:start="91:22" pos:end="91:22">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:30"><expr pos:start="93:9" pos:end="93:29"><call pos:start="93:9" pos:end="93:29"><name pos:start="93:9" pos:end="93:24">hnm_flip_buffers</name><argument_list pos:start="93:25" pos:end="93:29">(<argument pos:start="93:26" pos:end="93:28"><expr pos:start="93:26" pos:end="93:28"><name pos:start="93:26" pos:end="93:28">hnm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt> <if_stmt pos:start="95:7" pos:end="103:23"><else pos:start="95:7" pos:end="103:23">else <block pos:start="95:12" pos:end="103:23">{<block_content pos:start="97:9" pos:end="103:23">

        <expr_stmt pos:start="97:9" pos:end="97:72"><expr pos:start="97:9" pos:end="97:71"><call pos:start="97:9" pos:end="97:71"><name pos:start="97:9" pos:end="97:14">av_log</name><argument_list pos:start="97:15" pos:end="97:71">(<argument pos:start="97:16" pos:end="97:20"><expr pos:start="97:16" pos:end="97:20"><name pos:start="97:16" pos:end="97:20">avctx</name></expr></argument>, <argument pos:start="97:23" pos:end="97:34"><expr pos:start="97:23" pos:end="97:34"><name pos:start="97:23" pos:end="97:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="97:37" pos:end="97:60"><expr pos:start="97:37" pos:end="97:60"><literal type="string" pos:start="97:37" pos:end="97:60">"invalid chunk id: %d\n"</literal></expr></argument>, <argument pos:start="97:63" pos:end="97:70"><expr pos:start="97:63" pos:end="97:70"><name pos:start="97:63" pos:end="97:70">chunk_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <return pos:start="103:5" pos:end="103:23">return <expr pos:start="103:12" pos:end="103:22"><name pos:start="103:12" pos:end="103:22"><name pos:start="103:12" pos:end="103:16">avpkt</name><operator pos:start="103:17" pos:end="103:18">-&gt;</operator><name pos:start="103:19" pos:end="103:22">size</name></name></expr>;</return></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>
</unit>
