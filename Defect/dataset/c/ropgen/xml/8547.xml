<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8547.c" pos:tabs="8"><function pos:start="1:1" pos:end="283:1"><type pos:start="1:1" pos:end="1:27"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:23">av_always_inline</name> <name pos:start="1:25" pos:end="1:27">int</name></type> <name pos:start="1:29" pos:end="1:58">vorbis_residue_decode_internal</name><parameter_list pos:start="1:59" pos:end="13:71">(<parameter pos:start="1:60" pos:end="1:77"><decl pos:start="1:60" pos:end="1:77"><type pos:start="1:60" pos:end="1:77"><name pos:start="1:60" pos:end="1:73">vorbis_context</name> <modifier pos:start="1:75" pos:end="1:75">*</modifier></type><name pos:start="1:76" pos:end="1:77">vc</name></decl></parameter>,

                                                           <parameter pos:start="3:60" pos:end="3:77"><decl pos:start="3:60" pos:end="3:77"><type pos:start="3:60" pos:end="3:77"><name pos:start="3:60" pos:end="3:73">vorbis_residue</name> <modifier pos:start="3:75" pos:end="3:75">*</modifier></type><name pos:start="3:76" pos:end="3:77">vr</name></decl></parameter>,

                                                           <parameter pos:start="5:60" pos:end="5:74"><decl pos:start="5:60" pos:end="5:74"><type pos:start="5:60" pos:end="5:74"><name pos:start="5:60" pos:end="5:71">uint_fast8_t</name></type> <name pos:start="5:73" pos:end="5:74">ch</name></decl></parameter>,

                                                           <parameter pos:start="7:60" pos:end="7:86"><decl pos:start="7:60" pos:end="7:86"><type pos:start="7:60" pos:end="7:86"><name pos:start="7:60" pos:end="7:71">uint_fast8_t</name> <modifier pos:start="7:73" pos:end="7:73">*</modifier></type><name pos:start="7:74" pos:end="7:86">do_not_decode</name></decl></parameter>,

                                                           <parameter pos:start="9:60" pos:end="9:69"><decl pos:start="9:60" pos:end="9:69"><type pos:start="9:60" pos:end="9:69"><name pos:start="9:60" pos:end="9:64">float</name> <modifier pos:start="9:66" pos:end="9:66">*</modifier></type><name pos:start="9:67" pos:end="9:69">vec</name></decl></parameter>,

                                                           <parameter pos:start="11:60" pos:end="11:77"><decl pos:start="11:60" pos:end="11:77"><type pos:start="11:60" pos:end="11:77"><name pos:start="11:60" pos:end="11:72">uint_fast16_t</name></type> <name pos:start="11:74" pos:end="11:77">vlen</name></decl></parameter>,

                                                           <parameter pos:start="13:60" pos:end="13:70"><decl pos:start="13:60" pos:end="13:70"><type pos:start="13:60" pos:end="13:70"><name pos:start="13:60" pos:end="13:62">int</name></type> <name pos:start="13:64" pos:end="13:70">vr_type</name></decl></parameter>)</parameter_list>

<block pos:start="15:1" pos:end="283:1">{<block_content pos:start="17:5" pos:end="281:13">

    <decl_stmt pos:start="17:5" pos:end="17:32"><decl pos:start="17:5" pos:end="17:31"><type pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:17">GetBitContext</name> <modifier pos:start="17:19" pos:end="17:19">*</modifier></type><name pos:start="17:20" pos:end="17:21">gb</name> <init pos:start="17:23" pos:end="17:31">= <expr pos:start="17:25" pos:end="17:31"><operator pos:start="17:25" pos:end="17:25">&amp;</operator><name pos:start="17:26" pos:end="17:31"><name pos:start="17:26" pos:end="17:27">vc</name><operator pos:start="17:28" pos:end="17:29">-&gt;</operator><name pos:start="17:30" pos:end="17:31">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:65"><decl pos:start="19:5" pos:end="19:64"><type pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:16">uint_fast8_t</name></type> <name pos:start="19:18" pos:end="19:22">c_p_c</name> <init pos:start="19:24" pos:end="19:64">= <expr pos:start="19:26" pos:end="19:64"><name pos:start="19:26" pos:end="19:53"><name pos:start="19:26" pos:end="19:27">vc</name><operator pos:start="19:28" pos:end="19:29">-&gt;</operator><name pos:start="19:30" pos:end="19:38">codebooks</name><index pos:start="19:39" pos:end="19:53">[<expr pos:start="19:40" pos:end="19:52"><name pos:start="19:40" pos:end="19:52"><name pos:start="19:40" pos:end="19:41">vr</name><operator pos:start="19:42" pos:end="19:43">-&gt;</operator><name pos:start="19:44" pos:end="19:52">classbook</name></name></expr>]</index></name><operator pos:start="19:54" pos:end="19:54">.</operator><name pos:start="19:55" pos:end="19:64">dimensions</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:50"><decl pos:start="21:5" pos:end="21:49"><type pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:17">uint_fast16_t</name></type> <name pos:start="21:19" pos:end="21:30">ptns_to_read</name> <init pos:start="21:32" pos:end="21:49">= <expr pos:start="21:34" pos:end="21:49"><name pos:start="21:34" pos:end="21:49"><name pos:start="21:34" pos:end="21:35">vr</name><operator pos:start="21:36" pos:end="21:37">-&gt;</operator><name pos:start="21:38" pos:end="21:49">ptns_to_read</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:42"><decl pos:start="23:5" pos:end="23:41"><type pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:16">uint_fast8_t</name> <modifier pos:start="23:18" pos:end="23:18">*</modifier></type><name pos:start="23:19" pos:end="23:26">classifs</name> <init pos:start="23:28" pos:end="23:41">= <expr pos:start="23:30" pos:end="23:41"><name pos:start="23:30" pos:end="23:41"><name pos:start="23:30" pos:end="23:31">vr</name><operator pos:start="23:32" pos:end="23:33">-&gt;</operator><name pos:start="23:34" pos:end="23:41">classifs</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:22"><decl pos:start="25:5" pos:end="25:21"><type pos:start="25:5" pos:end="25:16"><name pos:start="25:5" pos:end="25:16">uint_fast8_t</name></type> <name pos:start="25:18" pos:end="25:21">pass</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:25"><decl pos:start="27:5" pos:end="27:24"><type pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:16">uint_fast8_t</name></type> <name pos:start="27:18" pos:end="27:24">ch_used</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:23"><decl pos:start="29:5" pos:end="29:18"><type pos:start="29:5" pos:end="29:16"><name pos:start="29:5" pos:end="29:16">uint_fast8_t</name></type> <name pos:start="29:18" pos:end="29:18">i</name></decl>,<decl pos:start="29:20" pos:end="29:20"><type ref="prev" pos:start="29:5" pos:end="29:16"/><name pos:start="29:20" pos:end="29:20">j</name></decl>,<decl pos:start="29:22" pos:end="29:22"><type ref="prev" pos:start="29:5" pos:end="29:16"/><name pos:start="29:22" pos:end="29:22">l</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:20"><decl pos:start="31:5" pos:end="31:19"><type pos:start="31:5" pos:end="31:17"><name pos:start="31:5" pos:end="31:17">uint_fast16_t</name></type> <name pos:start="31:19" pos:end="31:19">k</name></decl>;</decl_stmt>



    <if_stmt pos:start="35:5" pos:end="51:5"><if pos:start="35:5" pos:end="47:5">if <condition pos:start="35:8" pos:end="35:21">(<expr pos:start="35:9" pos:end="35:20"><name pos:start="35:9" pos:end="35:15">vr_type</name> <operator pos:start="35:17" pos:end="35:18">==</operator> <literal type="number" pos:start="35:20" pos:end="35:20">2</literal></expr>)</condition> <block pos:start="35:23" pos:end="47:5">{<block_content pos:start="37:9" pos:end="45:20">

        <for pos:start="37:9" pos:end="39:49">for <control pos:start="37:13" pos:end="37:32">(<init pos:start="37:14" pos:end="37:19"><expr pos:start="37:14" pos:end="37:18"><name pos:start="37:14" pos:end="37:14">j</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <literal type="number" pos:start="37:18" pos:end="37:18">1</literal></expr>;</init> <condition pos:start="37:21" pos:end="37:27"><expr pos:start="37:21" pos:end="37:26"><name pos:start="37:21" pos:end="37:21">j</name> <operator pos:start="37:23" pos:end="37:23">&lt;</operator> <name pos:start="37:25" pos:end="37:26">ch</name></expr>;</condition> <incr pos:start="37:29" pos:end="37:31"><expr pos:start="37:29" pos:end="37:31"><operator pos:start="37:29" pos:end="37:30">++</operator><name pos:start="37:31" pos:end="37:31">j</name></expr></incr>)</control><block type="pseudo" pos:start="39:13" pos:end="39:49"><block_content pos:start="39:13" pos:end="39:49">

            <expr_stmt pos:start="39:13" pos:end="39:49"><expr pos:start="39:13" pos:end="39:48"><name pos:start="39:13" pos:end="39:28"><name pos:start="39:13" pos:end="39:25">do_not_decode</name><index pos:start="39:26" pos:end="39:28">[<expr pos:start="39:27" pos:end="39:27"><literal type="number" pos:start="39:27" pos:end="39:27">0</literal></expr>]</index></name> <operator pos:start="39:30" pos:end="39:31">&amp;=</operator> <name pos:start="39:33" pos:end="39:48"><name pos:start="39:33" pos:end="39:45">do_not_decode</name><index pos:start="39:46" pos:end="39:48">[<expr pos:start="39:47" pos:end="39:47"><name pos:start="39:47" pos:end="39:47">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>  <comment type="line" pos:start="39:52" pos:end="39:78">// FIXME - clobbering input</comment>

        <if_stmt pos:start="41:9" pos:end="43:21"><if pos:start="41:9" pos:end="43:21">if <condition pos:start="41:12" pos:end="41:29">(<expr pos:start="41:13" pos:end="41:28"><name pos:start="41:13" pos:end="41:28"><name pos:start="41:13" pos:end="41:25">do_not_decode</name><index pos:start="41:26" pos:end="41:28">[<expr pos:start="41:27" pos:end="41:27"><literal type="number" pos:start="41:27" pos:end="41:27">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:21"><block_content pos:start="43:13" pos:end="43:21">

            <return pos:start="43:13" pos:end="43:21">return <expr pos:start="43:20" pos:end="43:20"><literal type="number" pos:start="43:20" pos:end="43:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:20"><expr pos:start="45:9" pos:end="45:19"><name pos:start="45:9" pos:end="45:15">ch_used</name> <operator pos:start="45:17" pos:end="45:17">=</operator> <literal type="number" pos:start="45:19" pos:end="45:19">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="47:7" pos:end="51:5">else <block pos:start="47:12" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:21">

        <expr_stmt pos:start="49:9" pos:end="49:21"><expr pos:start="49:9" pos:end="49:20"><name pos:start="49:9" pos:end="49:15">ch_used</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <name pos:start="49:19" pos:end="49:20">ch</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:80"><expr pos:start="55:5" pos:end="55:79"><call pos:start="55:5" pos:end="55:79"><name pos:start="55:5" pos:end="55:12">AV_DEBUG</name><argument_list pos:start="55:13" pos:end="55:79">(<argument pos:start="55:14" pos:end="55:67"><expr pos:start="55:14" pos:end="55:67"><literal type="string" pos:start="55:14" pos:end="55:67">" residue type 0/1/2 decode begin, ch: %d  cpc %d  \n"</literal></expr></argument>, <argument pos:start="55:70" pos:end="55:71"><expr pos:start="55:70" pos:end="55:71"><name pos:start="55:70" pos:end="55:71">ch</name></expr></argument>, <argument pos:start="55:74" pos:end="55:78"><expr pos:start="55:74" pos:end="55:78"><name pos:start="55:74" pos:end="55:78">c_p_c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="59:5" pos:end="279:5">for <control pos:start="59:9" pos:end="59:47">(<init pos:start="59:10" pos:end="59:18"><expr pos:start="59:10" pos:end="59:17"><name pos:start="59:10" pos:end="59:13">pass</name> <operator pos:start="59:15" pos:end="59:15">=</operator> <literal type="number" pos:start="59:17" pos:end="59:17">0</literal></expr>;</init> <condition pos:start="59:20" pos:end="59:39"><expr pos:start="59:20" pos:end="59:38"><name pos:start="59:20" pos:end="59:23">pass</name> <operator pos:start="59:25" pos:end="59:26">&lt;=</operator> <name pos:start="59:28" pos:end="59:38"><name pos:start="59:28" pos:end="59:29">vr</name><operator pos:start="59:30" pos:end="59:31">-&gt;</operator><name pos:start="59:32" pos:end="59:38">maxpass</name></name></expr>;</condition> <incr pos:start="59:41" pos:end="59:46"><expr pos:start="59:41" pos:end="59:46"><operator pos:start="59:41" pos:end="59:42">++</operator><name pos:start="59:43" pos:end="59:46">pass</name></expr></incr>)</control> <block pos:start="59:49" pos:end="279:5">{<block_content pos:start="61:9" pos:end="277:9"> <comment type="line" pos:start="59:51" pos:end="59:68">// FIXME OPTIMIZE?</comment>

        <decl_stmt pos:start="61:9" pos:end="61:30"><decl pos:start="61:9" pos:end="61:29"><type pos:start="61:9" pos:end="61:21"><name pos:start="61:9" pos:end="61:21">uint_fast16_t</name></type> <name pos:start="61:23" pos:end="61:29">voffset</name></decl>;</decl_stmt>

        <decl_stmt pos:start="63:9" pos:end="63:38"><decl pos:start="63:9" pos:end="63:37"><type pos:start="63:9" pos:end="63:21"><name pos:start="63:9" pos:end="63:21">uint_fast16_t</name></type> <name pos:start="63:23" pos:end="63:37">partition_count</name></decl>;</decl_stmt>

        <decl_stmt pos:start="65:9" pos:end="65:43"><decl pos:start="65:9" pos:end="65:42"><type pos:start="65:9" pos:end="65:21"><name pos:start="65:9" pos:end="65:21">uint_fast16_t</name></type> <name pos:start="65:23" pos:end="65:42">j_times_ptns_to_read</name></decl>;</decl_stmt>



        <expr_stmt pos:start="69:9" pos:end="69:28"><expr pos:start="69:9" pos:end="69:27"><name pos:start="69:9" pos:end="69:15">voffset</name> <operator pos:start="69:17" pos:end="69:17">=</operator> <name pos:start="69:19" pos:end="69:27"><name pos:start="69:19" pos:end="69:20">vr</name><operator pos:start="69:21" pos:end="69:22">-&gt;</operator><name pos:start="69:23" pos:end="69:27">begin</name></name></expr>;</expr_stmt>

        <for pos:start="71:9" pos:end="277:9">for <control pos:start="71:13" pos:end="71:66">(<init pos:start="71:14" pos:end="71:33"><expr pos:start="71:14" pos:end="71:32"><name pos:start="71:14" pos:end="71:28">partition_count</name> <operator pos:start="71:30" pos:end="71:30">=</operator> <literal type="number" pos:start="71:32" pos:end="71:32">0</literal></expr>;</init> <condition pos:start="71:35" pos:end="71:65"><expr pos:start="71:35" pos:end="71:64"><name pos:start="71:35" pos:end="71:49">partition_count</name> <operator pos:start="71:51" pos:end="71:51">&lt;</operator> <name pos:start="71:53" pos:end="71:64">ptns_to_read</name></expr>;</condition><incr/>)</control> <block pos:start="71:68" pos:end="277:9">{<block_content pos:start="73:13" pos:end="275:13">  <comment type="line" pos:start="71:71" pos:end="71:90">// SPEC        error</comment>

            <if_stmt pos:start="73:13" pos:end="115:13"><if pos:start="73:13" pos:end="115:13">if <condition pos:start="73:16" pos:end="73:22">(<expr pos:start="73:17" pos:end="73:21"><operator pos:start="73:17" pos:end="73:17">!</operator><name pos:start="73:18" pos:end="73:21">pass</name></expr>)</condition> <block pos:start="73:24" pos:end="115:13">{<block_content pos:start="75:17" pos:end="113:17">

                <decl_stmt pos:start="75:17" pos:end="75:78"><decl pos:start="75:17" pos:end="75:77"><type pos:start="75:17" pos:end="75:29"><name pos:start="75:17" pos:end="75:29">uint_fast32_t</name></type> <name pos:start="75:31" pos:end="75:43">inverse_class</name> <init pos:start="75:45" pos:end="75:77">= <expr pos:start="75:47" pos:end="75:77"><name pos:start="75:47" pos:end="75:77"><name pos:start="75:47" pos:end="75:56">ff_inverse</name><index pos:start="75:57" pos:end="75:77">[<expr pos:start="75:58" pos:end="75:76"><name pos:start="75:58" pos:end="75:76"><name pos:start="75:58" pos:end="75:59">vr</name><operator pos:start="75:60" pos:end="75:61">-&gt;</operator><name pos:start="75:62" pos:end="75:76">classifications</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <for pos:start="77:17" pos:end="113:17">for <control pos:start="77:21" pos:end="77:71">(<init pos:start="77:22" pos:end="77:53"><expr pos:start="77:22" pos:end="77:45"><name pos:start="77:22" pos:end="77:41">j_times_ptns_to_read</name> <operator pos:start="77:43" pos:end="77:43">=</operator> <literal type="number" pos:start="77:45" pos:end="77:45">0</literal></expr><operator pos:start="77:46" pos:end="77:46">,</operator> <expr pos:start="77:48" pos:end="77:52"><name pos:start="77:48" pos:end="77:48">j</name> <operator pos:start="77:50" pos:end="77:50">=</operator> <literal type="number" pos:start="77:52" pos:end="77:52">0</literal></expr>;</init> <condition pos:start="77:55" pos:end="77:66"><expr pos:start="77:55" pos:end="77:65"><name pos:start="77:55" pos:end="77:55">j</name> <operator pos:start="77:57" pos:end="77:57">&lt;</operator> <name pos:start="77:59" pos:end="77:65">ch_used</name></expr>;</condition> <incr pos:start="77:68" pos:end="77:70"><expr pos:start="77:68" pos:end="77:70"><operator pos:start="77:68" pos:end="77:69">++</operator><name pos:start="77:70" pos:end="77:70">j</name></expr></incr>)</control> <block pos:start="77:73" pos:end="113:17">{<block_content pos:start="79:21" pos:end="111:57">

                    <if_stmt pos:start="79:21" pos:end="109:21"><if pos:start="79:21" pos:end="109:21">if <condition pos:start="79:24" pos:end="79:42">(<expr pos:start="79:25" pos:end="79:41"><operator pos:start="79:25" pos:end="79:25">!</operator><name pos:start="79:26" pos:end="79:41"><name pos:start="79:26" pos:end="79:38">do_not_decode</name><index pos:start="79:39" pos:end="79:41">[<expr pos:start="79:40" pos:end="79:40"><name pos:start="79:40" pos:end="79:40">j</name></expr>]</index></name></expr>)</condition> <block pos:start="79:44" pos:end="109:21">{<block_content pos:start="81:25" pos:end="107:25">

                        <decl_stmt pos:start="81:25" pos:end="83:65"><decl pos:start="81:25" pos:end="83:64"><type pos:start="81:25" pos:end="81:37"><name pos:start="81:25" pos:end="81:37">uint_fast32_t</name></type> <name pos:start="81:39" pos:end="81:42">temp</name> <init pos:start="81:44" pos:end="83:64">= <expr pos:start="81:46" pos:end="83:64"><call pos:start="81:46" pos:end="83:64"><name pos:start="81:46" pos:end="81:53">get_vlc2</name><argument_list pos:start="81:54" pos:end="83:64">(<argument pos:start="81:55" pos:end="81:56"><expr pos:start="81:55" pos:end="81:56"><name pos:start="81:55" pos:end="81:56">gb</name></expr></argument>, <argument pos:start="81:59" pos:end="81:96"><expr pos:start="81:59" pos:end="81:96"><name pos:start="81:59" pos:end="81:86"><name pos:start="81:59" pos:end="81:60">vc</name><operator pos:start="81:61" pos:end="81:62">-&gt;</operator><name pos:start="81:63" pos:end="81:71">codebooks</name><index pos:start="81:72" pos:end="81:86">[<expr pos:start="81:73" pos:end="81:85"><name pos:start="81:73" pos:end="81:85"><name pos:start="81:73" pos:end="81:74">vr</name><operator pos:start="81:75" pos:end="81:76">-&gt;</operator><name pos:start="81:77" pos:end="81:85">classbook</name></name></expr>]</index></name><operator pos:start="81:87" pos:end="81:87">.</operator><name pos:start="81:88" pos:end="81:96"><name pos:start="81:88" pos:end="81:90">vlc</name><operator pos:start="81:91" pos:end="81:91">.</operator><name pos:start="81:92" pos:end="81:96">table</name></name></expr></argument>,

                        <argument pos:start="83:25" pos:end="83:60"><expr pos:start="83:25" pos:end="83:60"><name pos:start="83:25" pos:end="83:52"><name pos:start="83:25" pos:end="83:26">vc</name><operator pos:start="83:27" pos:end="83:28">-&gt;</operator><name pos:start="83:29" pos:end="83:37">codebooks</name><index pos:start="83:38" pos:end="83:52">[<expr pos:start="83:39" pos:end="83:51"><name pos:start="83:39" pos:end="83:51"><name pos:start="83:39" pos:end="83:40">vr</name><operator pos:start="83:41" pos:end="83:42">-&gt;</operator><name pos:start="83:43" pos:end="83:51">classbook</name></name></expr>]</index></name><operator pos:start="83:53" pos:end="83:53">.</operator><name pos:start="83:54" pos:end="83:60">nb_bits</name></expr></argument>, <argument pos:start="83:63" pos:end="83:63"><expr pos:start="83:63" pos:end="83:63"><literal type="number" pos:start="83:63" pos:end="83:63">3</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                        <expr_stmt pos:start="87:25" pos:end="87:59"><expr pos:start="87:25" pos:end="87:58"><call pos:start="87:25" pos:end="87:58"><name pos:start="87:25" pos:end="87:32">AV_DEBUG</name><argument_list pos:start="87:33" pos:end="87:58">(<argument pos:start="87:34" pos:end="87:51"><expr pos:start="87:34" pos:end="87:51"><literal type="string" pos:start="87:34" pos:end="87:51">"Classword: %d \n"</literal></expr></argument>, <argument pos:start="87:54" pos:end="87:57"><expr pos:start="87:54" pos:end="87:57"><name pos:start="87:54" pos:end="87:57">temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                        <expr_stmt pos:start="91:25" pos:end="91:73"><expr pos:start="91:25" pos:end="91:72"><call pos:start="91:25" pos:end="91:72"><name pos:start="91:25" pos:end="91:30">assert</name><argument_list pos:start="91:31" pos:end="91:72">(<argument pos:start="91:32" pos:end="91:71"><expr pos:start="91:32" pos:end="91:71"><name pos:start="91:32" pos:end="91:50"><name pos:start="91:32" pos:end="91:33">vr</name><operator pos:start="91:34" pos:end="91:35">-&gt;</operator><name pos:start="91:36" pos:end="91:50">classifications</name></name> <operator pos:start="91:52" pos:end="91:52">&gt;</operator> <literal type="number" pos:start="91:54" pos:end="91:54">1</literal> <operator pos:start="91:56" pos:end="91:57">&amp;&amp;</operator> <name pos:start="91:59" pos:end="91:62">temp</name> <operator pos:start="91:64" pos:end="91:65">&lt;=</operator> <literal type="number" pos:start="91:67" pos:end="91:71">65536</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="91:75" pos:end="91:96">//needed for inverse[]</comment>

                        <for pos:start="93:25" pos:end="107:25">for <control pos:start="93:29" pos:end="93:51">(<init pos:start="93:30" pos:end="93:35"><expr pos:start="93:30" pos:end="93:34"><name pos:start="93:30" pos:end="93:30">i</name> <operator pos:start="93:32" pos:end="93:32">=</operator> <literal type="number" pos:start="93:34" pos:end="93:34">0</literal></expr>;</init> <condition pos:start="93:37" pos:end="93:46"><expr pos:start="93:37" pos:end="93:45"><name pos:start="93:37" pos:end="93:37">i</name> <operator pos:start="93:39" pos:end="93:39">&lt;</operator> <name pos:start="93:41" pos:end="93:45">c_p_c</name></expr>;</condition> <incr pos:start="93:48" pos:end="93:50"><expr pos:start="93:48" pos:end="93:50"><operator pos:start="93:48" pos:end="93:49">++</operator><name pos:start="93:50" pos:end="93:50">i</name></expr></incr>)</control> <block pos:start="93:53" pos:end="107:25">{<block_content pos:start="95:29" pos:end="105:41">

                            <decl_stmt pos:start="95:29" pos:end="95:48"><decl pos:start="95:29" pos:end="95:47"><type pos:start="95:29" pos:end="95:41"><name pos:start="95:29" pos:end="95:41">uint_fast32_t</name></type> <name pos:start="95:43" pos:end="95:47">temp2</name></decl>;</decl_stmt>



                            <expr_stmt pos:start="99:29" pos:end="99:82"><expr pos:start="99:29" pos:end="99:81"><name pos:start="99:29" pos:end="99:33">temp2</name> <operator pos:start="99:35" pos:end="99:35">=</operator> <operator pos:start="99:37" pos:end="99:37">(</operator><operator pos:start="99:38" pos:end="99:38">(</operator><operator pos:start="99:39" pos:end="99:39">(</operator><name pos:start="99:40" pos:end="99:52">uint_fast64_t</name><operator pos:start="99:53" pos:end="99:53">)</operator><name pos:start="99:54" pos:end="99:57">temp</name><operator pos:start="99:58" pos:end="99:58">)</operator> <operator pos:start="99:60" pos:end="99:60">*</operator> <name pos:start="99:62" pos:end="99:74">inverse_class</name><operator pos:start="99:75" pos:end="99:75">)</operator> <operator pos:start="99:77" pos:end="99:78">&gt;&gt;</operator> <literal type="number" pos:start="99:80" pos:end="99:81">32</literal></expr>;</expr_stmt>

                            <if_stmt pos:start="101:29" pos:end="103:134"><if pos:start="101:29" pos:end="103:134">if <condition pos:start="101:32" pos:end="101:79">(<expr pos:start="101:33" pos:end="101:78"><name pos:start="101:33" pos:end="101:47">partition_count</name> <operator pos:start="101:49" pos:end="101:49">+</operator> <name pos:start="101:51" pos:end="101:55">c_p_c</name> <operator pos:start="101:57" pos:end="101:57">-</operator> <literal type="number" pos:start="101:59" pos:end="101:61">1</literal> <operator pos:start="101:61" pos:end="101:61">-</operator> <name pos:start="101:63" pos:end="101:63">i</name> <operator pos:start="101:65" pos:end="101:65">&lt;</operator> <name pos:start="101:67" pos:end="101:78">ptns_to_read</name></expr>)</condition><block type="pseudo" pos:start="103:33" pos:end="103:134"><block_content pos:start="103:33" pos:end="103:134">

                                <expr_stmt pos:start="103:33" pos:end="103:134"><expr pos:start="103:33" pos:end="103:133"><name pos:start="103:33" pos:end="103:96"><name pos:start="103:33" pos:end="103:40">classifs</name><index pos:start="103:41" pos:end="103:96">[<expr pos:start="103:42" pos:end="103:95"><name pos:start="103:42" pos:end="103:61">j_times_ptns_to_read</name> <operator pos:start="103:63" pos:end="103:63">+</operator> <name pos:start="103:65" pos:end="103:79">partition_count</name> <operator pos:start="103:81" pos:end="103:81">+</operator> <name pos:start="103:83" pos:end="103:87">c_p_c</name> <operator pos:start="103:89" pos:end="103:89">-</operator> <literal type="number" pos:start="103:91" pos:end="103:91">1</literal> <operator pos:start="103:93" pos:end="103:93">-</operator> <name pos:start="103:95" pos:end="103:95">i</name></expr>]</index></name> <operator pos:start="103:98" pos:end="103:98">=</operator> <name pos:start="103:100" pos:end="103:103">temp</name> <operator pos:start="103:105" pos:end="103:105">-</operator> <name pos:start="103:107" pos:end="103:111">temp2</name> <operator pos:start="103:113" pos:end="103:113">*</operator> <name pos:start="103:115" pos:end="103:133"><name pos:start="103:115" pos:end="103:116">vr</name><operator pos:start="103:117" pos:end="103:118">-&gt;</operator><name pos:start="103:119" pos:end="103:133">classifications</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                            <expr_stmt pos:start="105:29" pos:end="105:41"><expr pos:start="105:29" pos:end="105:40"><name pos:start="105:29" pos:end="105:32">temp</name> <operator pos:start="105:34" pos:end="105:34">=</operator> <name pos:start="105:36" pos:end="105:40">temp2</name></expr>;</expr_stmt>

                        </block_content>}</block></for>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="111:21" pos:end="111:57"><expr pos:start="111:21" pos:end="111:56"><name pos:start="111:21" pos:end="111:40">j_times_ptns_to_read</name> <operator pos:start="111:42" pos:end="111:43">+=</operator> <name pos:start="111:45" pos:end="111:56">ptns_to_read</name></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

            <for pos:start="117:13" pos:end="275:13">for <control pos:start="117:17" pos:end="117:77">(<init pos:start="117:18" pos:end="117:23"><expr pos:start="117:18" pos:end="117:22"><name pos:start="117:18" pos:end="117:18">i</name> <operator pos:start="117:20" pos:end="117:20">=</operator> <literal type="number" pos:start="117:22" pos:end="117:22">0</literal></expr>;</init> <condition pos:start="117:25" pos:end="117:72"><expr pos:start="117:25" pos:end="117:71"><operator pos:start="117:25" pos:end="117:25">(</operator><name pos:start="117:26" pos:end="117:26">i</name> <operator pos:start="117:28" pos:end="117:28">&lt;</operator> <name pos:start="117:30" pos:end="117:34">c_p_c</name><operator pos:start="117:35" pos:end="117:35">)</operator> <operator pos:start="117:37" pos:end="117:38">&amp;&amp;</operator> <operator pos:start="117:40" pos:end="117:40">(</operator><name pos:start="117:41" pos:end="117:55">partition_count</name> <operator pos:start="117:57" pos:end="117:57">&lt;</operator> <name pos:start="117:59" pos:end="117:70">ptns_to_read</name><operator pos:start="117:71" pos:end="117:71">)</operator></expr>;</condition> <incr pos:start="117:74" pos:end="117:76"><expr pos:start="117:74" pos:end="117:76"><operator pos:start="117:74" pos:end="117:75">++</operator><name pos:start="117:76" pos:end="117:76">i</name></expr></incr>)</control> <block pos:start="117:79" pos:end="275:13">{<block_content pos:start="119:17" pos:end="273:46">

                <for pos:start="119:17" pos:end="269:17">for <control pos:start="119:21" pos:end="119:71">(<init pos:start="119:22" pos:end="119:53"><expr pos:start="119:22" pos:end="119:45"><name pos:start="119:22" pos:end="119:41">j_times_ptns_to_read</name> <operator pos:start="119:43" pos:end="119:43">=</operator> <literal type="number" pos:start="119:45" pos:end="119:45">0</literal></expr><operator pos:start="119:46" pos:end="119:46">,</operator> <expr pos:start="119:48" pos:end="119:52"><name pos:start="119:48" pos:end="119:48">j</name> <operator pos:start="119:50" pos:end="119:50">=</operator> <literal type="number" pos:start="119:52" pos:end="119:52">0</literal></expr>;</init> <condition pos:start="119:55" pos:end="119:66"><expr pos:start="119:55" pos:end="119:65"><name pos:start="119:55" pos:end="119:55">j</name> <operator pos:start="119:57" pos:end="119:57">&lt;</operator> <name pos:start="119:59" pos:end="119:65">ch_used</name></expr>;</condition> <incr pos:start="119:68" pos:end="119:70"><expr pos:start="119:68" pos:end="119:70"><operator pos:start="119:68" pos:end="119:69">++</operator><name pos:start="119:70" pos:end="119:70">j</name></expr></incr>)</control> <block pos:start="119:73" pos:end="269:17">{<block_content pos:start="121:21" pos:end="267:57">

                    <decl_stmt pos:start="121:21" pos:end="121:40"><decl pos:start="121:21" pos:end="121:39"><type pos:start="121:21" pos:end="121:33"><name pos:start="121:21" pos:end="121:33">uint_fast16_t</name></type> <name pos:start="121:35" pos:end="121:39">voffs</name></decl>;</decl_stmt>



                    <if_stmt pos:start="125:21" pos:end="265:21"><if pos:start="125:21" pos:end="265:21">if <condition pos:start="125:24" pos:end="125:42">(<expr pos:start="125:25" pos:end="125:41"><operator pos:start="125:25" pos:end="125:25">!</operator><name pos:start="125:26" pos:end="125:41"><name pos:start="125:26" pos:end="125:38">do_not_decode</name><index pos:start="125:39" pos:end="125:41">[<expr pos:start="125:40" pos:end="125:40"><name pos:start="125:40" pos:end="125:40">j</name></expr>]</index></name></expr>)</condition> <block pos:start="125:44" pos:end="265:21">{<block_content pos:start="127:25" pos:end="263:25">

                        <decl_stmt pos:start="127:25" pos:end="127:94"><decl pos:start="127:25" pos:end="127:93"><type pos:start="127:25" pos:end="127:36"><name pos:start="127:25" pos:end="127:36">uint_fast8_t</name></type> <name pos:start="127:38" pos:end="127:44">vqclass</name> <init pos:start="127:46" pos:end="127:93">= <expr pos:start="127:48" pos:end="127:93"><name pos:start="127:48" pos:end="127:93"><name pos:start="127:48" pos:end="127:55">classifs</name><index pos:start="127:56" pos:end="127:93">[<expr pos:start="127:57" pos:end="127:92"><name pos:start="127:57" pos:end="127:76">j_times_ptns_to_read</name><operator pos:start="127:77" pos:end="127:77">+</operator><name pos:start="127:78" pos:end="127:92">partition_count</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="129:25" pos:end="129:71"><decl pos:start="129:25" pos:end="129:70"><type pos:start="129:25" pos:end="129:36"><name pos:start="129:25" pos:end="129:36">int_fast16_t</name></type> <name pos:start="129:38" pos:end="129:43">vqbook</name> <init pos:start="129:45" pos:end="129:70">= <expr pos:start="129:47" pos:end="129:70"><name pos:start="129:47" pos:end="129:70"><name pos:start="129:47" pos:end="129:48">vr</name><operator pos:start="129:49" pos:end="129:50">-&gt;</operator><name pos:start="129:51" pos:end="129:55">books</name><index pos:start="129:56" pos:end="129:64">[<expr pos:start="129:57" pos:end="129:63"><name pos:start="129:57" pos:end="129:63">vqclass</name></expr>]</index><index pos:start="129:65" pos:end="129:70">[<expr pos:start="129:66" pos:end="129:69"><name pos:start="129:66" pos:end="129:69">pass</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



                        <if_stmt pos:start="133:25" pos:end="263:25"><if pos:start="133:25" pos:end="263:25">if <condition pos:start="133:28" pos:end="133:77">(<expr pos:start="133:29" pos:end="133:76"><name pos:start="133:29" pos:end="133:34">vqbook</name> <operator pos:start="133:36" pos:end="133:37">&gt;=</operator> <literal type="number" pos:start="133:39" pos:end="133:39">0</literal> <operator pos:start="133:41" pos:end="133:42">&amp;&amp;</operator> <name pos:start="133:44" pos:end="133:64"><name pos:start="133:44" pos:end="133:45">vc</name><operator pos:start="133:46" pos:end="133:47">-&gt;</operator><name pos:start="133:48" pos:end="133:56">codebooks</name><index pos:start="133:57" pos:end="133:64">[<expr pos:start="133:58" pos:end="133:63"><name pos:start="133:58" pos:end="133:63">vqbook</name></expr>]</index></name><operator pos:start="133:65" pos:end="133:65">.</operator><name pos:start="133:66" pos:end="133:76">codevectors</name></expr>)</condition> <block pos:start="133:79" pos:end="263:25">{<block_content pos:start="135:29" pos:end="261:29">

                            <decl_stmt pos:start="135:29" pos:end="135:48"><decl pos:start="135:29" pos:end="135:47"><type pos:start="135:29" pos:end="135:41"><name pos:start="135:29" pos:end="135:41">uint_fast16_t</name></type> <name pos:start="135:43" pos:end="135:47">coffs</name></decl>;</decl_stmt>

                            <decl_stmt pos:start="137:29" pos:end="137:77"><decl pos:start="137:29" pos:end="137:76"><type pos:start="137:29" pos:end="137:36"><name pos:start="137:29" pos:end="137:36">unsigned</name></type> <name pos:start="137:38" pos:end="137:40">dim</name> <init pos:start="137:42" pos:end="137:76">=  <expr pos:start="137:45" pos:end="137:76"><name pos:start="137:45" pos:end="137:65"><name pos:start="137:45" pos:end="137:46">vc</name><operator pos:start="137:47" pos:end="137:48">-&gt;</operator><name pos:start="137:49" pos:end="137:57">codebooks</name><index pos:start="137:58" pos:end="137:65">[<expr pos:start="137:59" pos:end="137:64"><name pos:start="137:59" pos:end="137:64">vqbook</name></expr>]</index></name><operator pos:start="137:66" pos:end="137:66">.</operator><name pos:start="137:67" pos:end="137:76">dimensions</name></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="137:79" pos:end="137:128">// not uint_fast8_t: 64bit is slower here on amd64</comment>

                            <decl_stmt pos:start="139:29" pos:end="141:93"><decl pos:start="139:29" pos:end="141:92"><type pos:start="139:29" pos:end="139:41"><name pos:start="139:29" pos:end="139:41">uint_fast16_t</name></type> <name pos:start="139:43" pos:end="139:46">step</name> <init pos:start="139:48" pos:end="141:92">= <expr pos:start="139:50" pos:end="141:92"><ternary pos:start="139:50" pos:end="141:92"><condition pos:start="139:50" pos:end="139:59"><expr pos:start="139:50" pos:end="139:57"><name pos:start="139:50" pos:end="139:52">dim</name> <operator pos:start="139:54" pos:end="139:55">==</operator> <literal type="number" pos:start="139:57" pos:end="139:57">1</literal></expr> ?</condition><then pos:start="139:61" pos:end="139:78"> <expr pos:start="139:61" pos:end="139:78"><name pos:start="139:61" pos:end="139:78"><name pos:start="139:61" pos:end="139:62">vr</name><operator pos:start="139:63" pos:end="139:64">-&gt;</operator><name pos:start="139:65" pos:end="139:78">partition_size</name></name></expr>

                                                          </then><else pos:start="141:59" pos:end="141:92">: <expr pos:start="141:61" pos:end="141:92"><call pos:start="141:61" pos:end="141:92"><name pos:start="141:61" pos:end="141:67">FASTDIV</name><argument_list pos:start="141:68" pos:end="141:92">(<argument pos:start="141:69" pos:end="141:86"><expr pos:start="141:69" pos:end="141:86"><name pos:start="141:69" pos:end="141:86"><name pos:start="141:69" pos:end="141:70">vr</name><operator pos:start="141:71" pos:end="141:72">-&gt;</operator><name pos:start="141:73" pos:end="141:86">partition_size</name></name></expr></argument>, <argument pos:start="141:89" pos:end="141:91"><expr pos:start="141:89" pos:end="141:91"><name pos:start="141:89" pos:end="141:91">dim</name></expr></argument>)</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>

                            <decl_stmt pos:start="143:29" pos:end="143:77"><decl pos:start="143:29" pos:end="143:76"><type pos:start="143:29" pos:end="143:43"><name pos:start="143:29" pos:end="143:43">vorbis_codebook</name></type> <name pos:start="143:45" pos:end="143:52">codebook</name> <init pos:start="143:54" pos:end="143:76">= <expr pos:start="143:56" pos:end="143:76"><name pos:start="143:56" pos:end="143:76"><name pos:start="143:56" pos:end="143:57">vc</name><operator pos:start="143:58" pos:end="143:59">-&gt;</operator><name pos:start="143:60" pos:end="143:68">codebooks</name><index pos:start="143:69" pos:end="143:76">[<expr pos:start="143:70" pos:end="143:75"><name pos:start="143:70" pos:end="143:75">vqbook</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



                            <if_stmt pos:start="147:29" pos:end="261:29"><if pos:start="147:29" pos:end="163:29">if <condition pos:start="147:32" pos:end="147:45">(<expr pos:start="147:33" pos:end="147:44"><name pos:start="147:33" pos:end="147:39">vr_type</name> <operator pos:start="147:41" pos:end="147:42">==</operator> <literal type="number" pos:start="147:44" pos:end="147:44">0</literal></expr>)</condition> <block pos:start="147:47" pos:end="163:29">{<block_content pos:start="151:33" pos:end="161:33">



                                <expr_stmt pos:start="151:33" pos:end="151:55"><expr pos:start="151:33" pos:end="151:54"><name pos:start="151:33" pos:end="151:37">voffs</name> <operator pos:start="151:39" pos:end="151:39">=</operator> <name pos:start="151:41" pos:end="151:47">voffset</name><operator pos:start="151:48" pos:end="151:48">+</operator><name pos:start="151:49" pos:end="151:49">j</name><operator pos:start="151:50" pos:end="151:50">*</operator><name pos:start="151:51" pos:end="151:54">vlen</name></expr>;</expr_stmt>

                                <for pos:start="153:33" pos:end="161:33">for <control pos:start="153:37" pos:end="153:58">(<init pos:start="153:38" pos:end="153:43"><expr pos:start="153:38" pos:end="153:42"><name pos:start="153:38" pos:end="153:38">k</name> <operator pos:start="153:40" pos:end="153:40">=</operator> <literal type="number" pos:start="153:42" pos:end="153:42">0</literal></expr>;</init> <condition pos:start="153:45" pos:end="153:53"><expr pos:start="153:45" pos:end="153:52"><name pos:start="153:45" pos:end="153:45">k</name> <operator pos:start="153:47" pos:end="153:47">&lt;</operator> <name pos:start="153:49" pos:end="153:52">step</name></expr>;</condition> <incr pos:start="153:55" pos:end="153:57"><expr pos:start="153:55" pos:end="153:57"><operator pos:start="153:55" pos:end="153:56">++</operator><name pos:start="153:57" pos:end="153:57">k</name></expr></incr>)</control> <block pos:start="153:60" pos:end="161:33">{<block_content pos:start="155:37" pos:end="159:101">

                                    <expr_stmt pos:start="155:37" pos:end="155:104"><expr pos:start="155:37" pos:end="155:103"><name pos:start="155:37" pos:end="155:41">coffs</name> <operator pos:start="155:43" pos:end="155:43">=</operator> <call pos:start="155:45" pos:end="155:97"><name pos:start="155:45" pos:end="155:52">get_vlc2</name><argument_list pos:start="155:53" pos:end="155:97">(<argument pos:start="155:54" pos:end="155:55"><expr pos:start="155:54" pos:end="155:55"><name pos:start="155:54" pos:end="155:55">gb</name></expr></argument>, <argument pos:start="155:58" pos:end="155:75"><expr pos:start="155:58" pos:end="155:75"><name pos:start="155:58" pos:end="155:75"><name pos:start="155:58" pos:end="155:65">codebook</name><operator pos:start="155:66" pos:end="155:66">.</operator><name pos:start="155:67" pos:end="155:69">vlc</name><operator pos:start="155:70" pos:end="155:70">.</operator><name pos:start="155:71" pos:end="155:75">table</name></name></expr></argument>, <argument pos:start="155:78" pos:end="155:93"><expr pos:start="155:78" pos:end="155:93"><name pos:start="155:78" pos:end="155:93"><name pos:start="155:78" pos:end="155:85">codebook</name><operator pos:start="155:86" pos:end="155:86">.</operator><name pos:start="155:87" pos:end="155:93">nb_bits</name></name></expr></argument>, <argument pos:start="155:96" pos:end="155:96"><expr pos:start="155:96" pos:end="155:96"><literal type="number" pos:start="155:96" pos:end="155:96">3</literal></expr></argument>)</argument_list></call> <operator pos:start="155:99" pos:end="155:99">*</operator> <name pos:start="155:101" pos:end="155:103">dim</name></expr>;</expr_stmt>

                                    <for pos:start="157:37" pos:end="159:101">for <control pos:start="157:41" pos:end="157:61">(<init pos:start="157:42" pos:end="157:47"><expr pos:start="157:42" pos:end="157:46"><name pos:start="157:42" pos:end="157:42">l</name> <operator pos:start="157:44" pos:end="157:44">=</operator> <literal type="number" pos:start="157:46" pos:end="157:46">0</literal></expr>;</init> <condition pos:start="157:49" pos:end="157:56"><expr pos:start="157:49" pos:end="157:55"><name pos:start="157:49" pos:end="157:49">l</name> <operator pos:start="157:51" pos:end="157:51">&lt;</operator> <name pos:start="157:53" pos:end="157:55">dim</name></expr>;</condition> <incr pos:start="157:58" pos:end="157:60"><expr pos:start="157:58" pos:end="157:60"><operator pos:start="157:58" pos:end="157:59">++</operator><name pos:start="157:60" pos:end="157:60">l</name></expr></incr>)</control><block type="pseudo" pos:start="159:41" pos:end="159:101"><block_content pos:start="159:41" pos:end="159:101">

                                        <expr_stmt pos:start="159:41" pos:end="159:101"><expr pos:start="159:41" pos:end="159:100"><name pos:start="159:41" pos:end="159:65"><name pos:start="159:41" pos:end="159:43">vec</name><index pos:start="159:44" pos:end="159:65">[<expr pos:start="159:45" pos:end="159:64"><name pos:start="159:45" pos:end="159:49">voffs</name> <operator pos:start="159:51" pos:end="159:51">+</operator> <name pos:start="159:53" pos:end="159:53">k</name> <operator pos:start="159:55" pos:end="159:55">+</operator> <name pos:start="159:57" pos:end="159:57">l</name> <operator pos:start="159:59" pos:end="159:59">*</operator> <name pos:start="159:61" pos:end="159:64">step</name></expr>]</index></name> <operator pos:start="159:67" pos:end="159:68">+=</operator> <name pos:start="159:70" pos:end="159:100"><name pos:start="159:70" pos:end="159:77">codebook</name><operator pos:start="159:78" pos:end="159:78">.</operator><name pos:start="159:79" pos:end="159:89">codevectors</name><index pos:start="159:90" pos:end="159:100">[<expr pos:start="159:91" pos:end="159:99"><name pos:start="159:91" pos:end="159:95">coffs</name> <operator pos:start="159:97" pos:end="159:97">+</operator> <name pos:start="159:99" pos:end="159:99">l</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>  <comment type="line" pos:start="159:104" pos:end="159:112">// FPMATH</comment>

                                </block_content>}</block></for>

                            </block_content>}</block></if> <if type="elseif" pos:start="163:31" pos:end="183:29">else if <condition pos:start="163:39" pos:end="163:52">(<expr pos:start="163:40" pos:end="163:51"><name pos:start="163:40" pos:end="163:46">vr_type</name> <operator pos:start="163:48" pos:end="163:49">==</operator> <literal type="number" pos:start="163:51" pos:end="163:51">1</literal></expr>)</condition> <block pos:start="163:54" pos:end="183:29">{<block_content pos:start="165:33" pos:end="181:33">

                                <expr_stmt pos:start="165:33" pos:end="165:59"><expr pos:start="165:33" pos:end="165:58"><name pos:start="165:33" pos:end="165:37">voffs</name> <operator pos:start="165:39" pos:end="165:39">=</operator> <name pos:start="165:41" pos:end="165:47">voffset</name> <operator pos:start="165:49" pos:end="165:49">+</operator> <name pos:start="165:51" pos:end="165:51">j</name> <operator pos:start="165:53" pos:end="165:53">*</operator> <name pos:start="165:55" pos:end="165:58">vlen</name></expr>;</expr_stmt>

                                <for pos:start="167:33" pos:end="181:33">for <control pos:start="167:37" pos:end="167:58">(<init pos:start="167:38" pos:end="167:43"><expr pos:start="167:38" pos:end="167:42"><name pos:start="167:38" pos:end="167:38">k</name> <operator pos:start="167:40" pos:end="167:40">=</operator> <literal type="number" pos:start="167:42" pos:end="167:42">0</literal></expr>;</init> <condition pos:start="167:45" pos:end="167:53"><expr pos:start="167:45" pos:end="167:52"><name pos:start="167:45" pos:end="167:45">k</name> <operator pos:start="167:47" pos:end="167:47">&lt;</operator> <name pos:start="167:49" pos:end="167:52">step</name></expr>;</condition> <incr pos:start="167:55" pos:end="167:57"><expr pos:start="167:55" pos:end="167:57"><operator pos:start="167:55" pos:end="167:56">++</operator><name pos:start="167:57" pos:end="167:57">k</name></expr></incr>)</control> <block pos:start="167:60" pos:end="181:33">{<block_content pos:start="169:37" pos:end="179:37">

                                    <expr_stmt pos:start="169:37" pos:end="169:104"><expr pos:start="169:37" pos:end="169:103"><name pos:start="169:37" pos:end="169:41">coffs</name> <operator pos:start="169:43" pos:end="169:43">=</operator> <call pos:start="169:45" pos:end="169:97"><name pos:start="169:45" pos:end="169:52">get_vlc2</name><argument_list pos:start="169:53" pos:end="169:97">(<argument pos:start="169:54" pos:end="169:55"><expr pos:start="169:54" pos:end="169:55"><name pos:start="169:54" pos:end="169:55">gb</name></expr></argument>, <argument pos:start="169:58" pos:end="169:75"><expr pos:start="169:58" pos:end="169:75"><name pos:start="169:58" pos:end="169:75"><name pos:start="169:58" pos:end="169:65">codebook</name><operator pos:start="169:66" pos:end="169:66">.</operator><name pos:start="169:67" pos:end="169:69">vlc</name><operator pos:start="169:70" pos:end="169:70">.</operator><name pos:start="169:71" pos:end="169:75">table</name></name></expr></argument>, <argument pos:start="169:78" pos:end="169:93"><expr pos:start="169:78" pos:end="169:93"><name pos:start="169:78" pos:end="169:93"><name pos:start="169:78" pos:end="169:85">codebook</name><operator pos:start="169:86" pos:end="169:86">.</operator><name pos:start="169:87" pos:end="169:93">nb_bits</name></name></expr></argument>, <argument pos:start="169:96" pos:end="169:96"><expr pos:start="169:96" pos:end="169:96"><literal type="number" pos:start="169:96" pos:end="169:96">3</literal></expr></argument>)</argument_list></call> <operator pos:start="169:99" pos:end="169:99">*</operator> <name pos:start="169:101" pos:end="169:103">dim</name></expr>;</expr_stmt>

                                    <for pos:start="171:37" pos:end="179:37">for <control pos:start="171:41" pos:end="171:70">(<init pos:start="171:42" pos:end="171:47"><expr pos:start="171:42" pos:end="171:46"><name pos:start="171:42" pos:end="171:42">l</name> <operator pos:start="171:44" pos:end="171:44">=</operator> <literal type="number" pos:start="171:46" pos:end="171:46">0</literal></expr>;</init> <condition pos:start="171:49" pos:end="171:56"><expr pos:start="171:49" pos:end="171:55"><name pos:start="171:49" pos:end="171:49">l</name> <operator pos:start="171:51" pos:end="171:51">&lt;</operator> <name pos:start="171:53" pos:end="171:55">dim</name></expr>;</condition> <incr pos:start="171:58" pos:end="171:69"><expr pos:start="171:58" pos:end="171:60"><operator pos:start="171:58" pos:end="171:59">++</operator><name pos:start="171:60" pos:end="171:60">l</name></expr><operator pos:start="171:61" pos:end="171:61">,</operator> <expr pos:start="171:63" pos:end="171:69"><operator pos:start="171:63" pos:end="171:64">++</operator><name pos:start="171:65" pos:end="171:69">voffs</name></expr></incr>)</control> <block pos:start="171:72" pos:end="179:37">{<block_content pos:start="173:41" pos:end="177:170">

                                        <expr_stmt pos:start="173:41" pos:end="173:82"><expr pos:start="173:41" pos:end="173:81"><name pos:start="173:41" pos:end="173:50"><name pos:start="173:41" pos:end="173:43">vec</name><index pos:start="173:44" pos:end="173:50">[<expr pos:start="173:45" pos:end="173:49"><name pos:start="173:45" pos:end="173:49">voffs</name></expr>]</index></name><operator pos:start="173:51" pos:end="173:52">+=</operator><name pos:start="173:53" pos:end="173:81"><name pos:start="173:53" pos:end="173:60">codebook</name><operator pos:start="173:61" pos:end="173:61">.</operator><name pos:start="173:62" pos:end="173:72">codevectors</name><index pos:start="173:73" pos:end="173:81">[<expr pos:start="173:74" pos:end="173:80"><name pos:start="173:74" pos:end="173:78">coffs</name><operator pos:start="173:79" pos:end="173:79">+</operator><name pos:start="173:80" pos:end="173:80">l</name></expr>]</index></name></expr>;</expr_stmt>  <comment type="line" pos:start="173:85" pos:end="173:93">// FPMATH</comment>



                                        <expr_stmt pos:start="177:41" pos:end="177:170"><expr pos:start="177:41" pos:end="177:169"><call pos:start="177:41" pos:end="177:169"><name pos:start="177:41" pos:end="177:48">AV_DEBUG</name><argument_list pos:start="177:49" pos:end="177:169">(<argument pos:start="177:50" pos:end="177:105"><expr pos:start="177:50" pos:end="177:105"><literal type="string" pos:start="177:50" pos:end="177:105">" pass %d offs: %d curr: %f change: %f cv offs.: %d  \n"</literal></expr></argument>, <argument pos:start="177:108" pos:end="177:111"><expr pos:start="177:108" pos:end="177:111"><name pos:start="177:108" pos:end="177:111">pass</name></expr></argument>, <argument pos:start="177:114" pos:end="177:118"><expr pos:start="177:114" pos:end="177:118"><name pos:start="177:114" pos:end="177:118">voffs</name></expr></argument>, <argument pos:start="177:121" pos:end="177:130"><expr pos:start="177:121" pos:end="177:130"><name pos:start="177:121" pos:end="177:130"><name pos:start="177:121" pos:end="177:123">vec</name><index pos:start="177:124" pos:end="177:130">[<expr pos:start="177:125" pos:end="177:129"><name pos:start="177:125" pos:end="177:129">voffs</name></expr>]</index></name></expr></argument>, <argument pos:start="177:133" pos:end="177:161"><expr pos:start="177:133" pos:end="177:161"><name pos:start="177:133" pos:end="177:161"><name pos:start="177:133" pos:end="177:140">codebook</name><operator pos:start="177:141" pos:end="177:141">.</operator><name pos:start="177:142" pos:end="177:152">codevectors</name><index pos:start="177:153" pos:end="177:161">[<expr pos:start="177:154" pos:end="177:160"><name pos:start="177:154" pos:end="177:158">coffs</name><operator pos:start="177:159" pos:end="177:159">+</operator><name pos:start="177:160" pos:end="177:160">l</name></expr>]</index></name></expr></argument>, <argument pos:start="177:164" pos:end="177:168"><expr pos:start="177:164" pos:end="177:168"><name pos:start="177:164" pos:end="177:168">coffs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    </block_content>}</block></for>

                                </block_content>}</block></for>

                            </block_content>}</block></if> <if type="elseif" pos:start="183:31" pos:end="239:29">else if <condition pos:start="183:39" pos:end="183:103">(<expr pos:start="183:40" pos:end="183:102"><name pos:start="183:40" pos:end="183:46">vr_type</name> <operator pos:start="183:48" pos:end="183:49">==</operator> <literal type="number" pos:start="183:51" pos:end="183:51">2</literal> <operator pos:start="183:53" pos:end="183:54">&amp;&amp;</operator> <name pos:start="183:56" pos:end="183:57">ch</name> <operator pos:start="183:59" pos:end="183:60">==</operator> <literal type="number" pos:start="183:62" pos:end="183:62">2</literal> <operator pos:start="183:64" pos:end="183:65">&amp;&amp;</operator> <operator pos:start="183:67" pos:end="183:67">(</operator><name pos:start="183:68" pos:end="183:74">voffset</name> <operator pos:start="183:76" pos:end="183:76">&amp;</operator> <literal type="number" pos:start="183:78" pos:end="183:78">1</literal><operator pos:start="183:79" pos:end="183:79">)</operator> <operator pos:start="183:81" pos:end="183:82">==</operator> <literal type="number" pos:start="183:84" pos:end="183:84">0</literal> <operator pos:start="183:86" pos:end="183:87">&amp;&amp;</operator> <operator pos:start="183:89" pos:end="183:89">(</operator><name pos:start="183:90" pos:end="183:92">dim</name> <operator pos:start="183:94" pos:end="183:94">&amp;</operator> <literal type="number" pos:start="183:96" pos:end="183:96">1</literal><operator pos:start="183:97" pos:end="183:97">)</operator> <operator pos:start="183:99" pos:end="183:100">==</operator> <literal type="number" pos:start="183:102" pos:end="183:102">0</literal></expr>)</condition> <block pos:start="183:105" pos:end="239:29">{<block_content pos:start="185:33" pos:end="235:33"> <comment type="line" pos:start="183:107" pos:end="183:137">// most frequent case optimized</comment>

                                <expr_stmt pos:start="185:33" pos:end="185:53"><expr pos:start="185:33" pos:end="185:52"><name pos:start="185:33" pos:end="185:37">voffs</name> <operator pos:start="185:39" pos:end="185:39">=</operator> <name pos:start="185:41" pos:end="185:47">voffset</name> <operator pos:start="185:49" pos:end="185:50">&gt;&gt;</operator> <literal type="number" pos:start="185:52" pos:end="185:52">1</literal></expr>;</expr_stmt>



                                <if_stmt pos:start="189:33" pos:end="235:33"><if pos:start="189:33" pos:end="201:33">if <condition pos:start="189:36" pos:end="189:45">(<expr pos:start="189:37" pos:end="189:44"><name pos:start="189:37" pos:end="189:39">dim</name> <operator pos:start="189:41" pos:end="189:42">==</operator> <literal type="number" pos:start="189:44" pos:end="189:44">2</literal></expr>)</condition> <block pos:start="189:47" pos:end="201:33">{<block_content pos:start="191:37" pos:end="199:37">

                                    <for pos:start="191:37" pos:end="199:37">for <control pos:start="191:41" pos:end="191:62">(<init pos:start="191:42" pos:end="191:47"><expr pos:start="191:42" pos:end="191:46"><name pos:start="191:42" pos:end="191:42">k</name> <operator pos:start="191:44" pos:end="191:44">=</operator> <literal type="number" pos:start="191:46" pos:end="191:46">0</literal></expr>;</init> <condition pos:start="191:49" pos:end="191:57"><expr pos:start="191:49" pos:end="191:56"><name pos:start="191:49" pos:end="191:49">k</name> <operator pos:start="191:51" pos:end="191:51">&lt;</operator> <name pos:start="191:53" pos:end="191:56">step</name></expr>;</condition> <incr pos:start="191:59" pos:end="191:61"><expr pos:start="191:59" pos:end="191:61"><operator pos:start="191:59" pos:end="191:60">++</operator><name pos:start="191:61" pos:end="191:61">k</name></expr></incr>)</control> <block pos:start="191:64" pos:end="199:37">{<block_content pos:start="193:41" pos:end="197:97">

                                        <expr_stmt pos:start="193:41" pos:end="193:106"><expr pos:start="193:41" pos:end="193:105"><name pos:start="193:41" pos:end="193:45">coffs</name> <operator pos:start="193:47" pos:end="193:47">=</operator> <call pos:start="193:49" pos:end="193:101"><name pos:start="193:49" pos:end="193:56">get_vlc2</name><argument_list pos:start="193:57" pos:end="193:101">(<argument pos:start="193:58" pos:end="193:59"><expr pos:start="193:58" pos:end="193:59"><name pos:start="193:58" pos:end="193:59">gb</name></expr></argument>, <argument pos:start="193:62" pos:end="193:79"><expr pos:start="193:62" pos:end="193:79"><name pos:start="193:62" pos:end="193:79"><name pos:start="193:62" pos:end="193:69">codebook</name><operator pos:start="193:70" pos:end="193:70">.</operator><name pos:start="193:71" pos:end="193:73">vlc</name><operator pos:start="193:74" pos:end="193:74">.</operator><name pos:start="193:75" pos:end="193:79">table</name></name></expr></argument>, <argument pos:start="193:82" pos:end="193:97"><expr pos:start="193:82" pos:end="193:97"><name pos:start="193:82" pos:end="193:97"><name pos:start="193:82" pos:end="193:89">codebook</name><operator pos:start="193:90" pos:end="193:90">.</operator><name pos:start="193:91" pos:end="193:97">nb_bits</name></name></expr></argument>, <argument pos:start="193:100" pos:end="193:100"><expr pos:start="193:100" pos:end="193:100"><literal type="number" pos:start="193:100" pos:end="193:100">3</literal></expr></argument>)</argument_list></call> <operator pos:start="193:103" pos:end="193:103">*</operator> <literal type="number" pos:start="193:105" pos:end="193:105">2</literal></expr>;</expr_stmt>

                                        <expr_stmt pos:start="195:41" pos:end="195:97"><expr pos:start="195:41" pos:end="195:96"><name pos:start="195:41" pos:end="195:61"><name pos:start="195:41" pos:end="195:43">vec</name><index pos:start="195:44" pos:end="195:61">[<expr pos:start="195:45" pos:end="195:53"><name pos:start="195:45" pos:end="195:49">voffs</name> <operator pos:start="195:51" pos:end="195:51">+</operator> <name pos:start="195:53" pos:end="195:53">k</name></expr>       ]</index></name> <operator pos:start="195:63" pos:end="195:64">+=</operator> <name pos:start="195:66" pos:end="195:96"><name pos:start="195:66" pos:end="195:73">codebook</name><operator pos:start="195:74" pos:end="195:74">.</operator><name pos:start="195:75" pos:end="195:85">codevectors</name><index pos:start="195:86" pos:end="195:96">[<expr pos:start="195:87" pos:end="195:91"><name pos:start="195:87" pos:end="195:91">coffs</name></expr>    ]</index></name></expr>;</expr_stmt>  <comment type="line" pos:start="195:100" pos:end="195:108">// FPMATH</comment>

                                        <expr_stmt pos:start="197:41" pos:end="197:97"><expr pos:start="197:41" pos:end="197:96"><name pos:start="197:41" pos:end="197:61"><name pos:start="197:41" pos:end="197:43">vec</name><index pos:start="197:44" pos:end="197:61">[<expr pos:start="197:45" pos:end="197:60"><name pos:start="197:45" pos:end="197:49">voffs</name> <operator pos:start="197:51" pos:end="197:51">+</operator> <name pos:start="197:53" pos:end="197:53">k</name> <operator pos:start="197:55" pos:end="197:55">+</operator> <name pos:start="197:57" pos:end="197:60">vlen</name></expr>]</index></name> <operator pos:start="197:63" pos:end="197:64">+=</operator> <name pos:start="197:66" pos:end="197:96"><name pos:start="197:66" pos:end="197:73">codebook</name><operator pos:start="197:74" pos:end="197:74">.</operator><name pos:start="197:75" pos:end="197:85">codevectors</name><index pos:start="197:86" pos:end="197:96">[<expr pos:start="197:87" pos:end="197:95"><name pos:start="197:87" pos:end="197:91">coffs</name> <operator pos:start="197:93" pos:end="197:93">+</operator> <literal type="number" pos:start="197:95" pos:end="197:95">1</literal></expr>]</index></name></expr>;</expr_stmt>  <comment type="line" pos:start="197:100" pos:end="197:108">// FPMATH</comment>

                                    </block_content>}</block></for>

                                </block_content>}</block></if> <if type="elseif" pos:start="201:35" pos:end="217:33">else if <condition pos:start="201:43" pos:end="201:52">(<expr pos:start="201:44" pos:end="201:51"><name pos:start="201:44" pos:end="201:46">dim</name> <operator pos:start="201:48" pos:end="201:49">==</operator> <literal type="number" pos:start="201:51" pos:end="201:51">4</literal></expr>)</condition> <block pos:start="201:54" pos:end="217:33">{<block_content pos:start="203:37" pos:end="215:37">

                                    <for pos:start="203:37" pos:end="215:37">for <control pos:start="203:41" pos:end="203:74">(<init pos:start="203:42" pos:end="203:47"><expr pos:start="203:42" pos:end="203:46"><name pos:start="203:42" pos:end="203:42">k</name> <operator pos:start="203:44" pos:end="203:44">=</operator> <literal type="number" pos:start="203:46" pos:end="203:46">0</literal></expr>;</init> <condition pos:start="203:49" pos:end="203:57"><expr pos:start="203:49" pos:end="203:56"><name pos:start="203:49" pos:end="203:49">k</name> <operator pos:start="203:51" pos:end="203:51">&lt;</operator> <name pos:start="203:53" pos:end="203:56">step</name></expr>;</condition> <incr pos:start="203:59" pos:end="203:73"><expr pos:start="203:59" pos:end="203:61"><operator pos:start="203:59" pos:end="203:60">++</operator><name pos:start="203:61" pos:end="203:61">k</name></expr><operator pos:start="203:62" pos:end="203:62">,</operator> <expr pos:start="203:64" pos:end="203:73"><name pos:start="203:64" pos:end="203:68">voffs</name> <operator pos:start="203:70" pos:end="203:71">+=</operator> <literal type="number" pos:start="203:73" pos:end="203:73">2</literal></expr></incr>)</control> <block pos:start="203:76" pos:end="215:37">{<block_content pos:start="205:41" pos:end="213:97">

                                        <expr_stmt pos:start="205:41" pos:end="205:106"><expr pos:start="205:41" pos:end="205:105"><name pos:start="205:41" pos:end="205:45">coffs</name> <operator pos:start="205:47" pos:end="205:47">=</operator> <call pos:start="205:49" pos:end="205:101"><name pos:start="205:49" pos:end="205:56">get_vlc2</name><argument_list pos:start="205:57" pos:end="205:101">(<argument pos:start="205:58" pos:end="205:59"><expr pos:start="205:58" pos:end="205:59"><name pos:start="205:58" pos:end="205:59">gb</name></expr></argument>, <argument pos:start="205:62" pos:end="205:79"><expr pos:start="205:62" pos:end="205:79"><name pos:start="205:62" pos:end="205:79"><name pos:start="205:62" pos:end="205:69">codebook</name><operator pos:start="205:70" pos:end="205:70">.</operator><name pos:start="205:71" pos:end="205:73">vlc</name><operator pos:start="205:74" pos:end="205:74">.</operator><name pos:start="205:75" pos:end="205:79">table</name></name></expr></argument>, <argument pos:start="205:82" pos:end="205:97"><expr pos:start="205:82" pos:end="205:97"><name pos:start="205:82" pos:end="205:97"><name pos:start="205:82" pos:end="205:89">codebook</name><operator pos:start="205:90" pos:end="205:90">.</operator><name pos:start="205:91" pos:end="205:97">nb_bits</name></name></expr></argument>, <argument pos:start="205:100" pos:end="205:100"><expr pos:start="205:100" pos:end="205:100"><literal type="number" pos:start="205:100" pos:end="205:100">3</literal></expr></argument>)</argument_list></call> <operator pos:start="205:103" pos:end="205:103">*</operator> <literal type="number" pos:start="205:105" pos:end="205:105">4</literal></expr>;</expr_stmt>

                                        <expr_stmt pos:start="207:41" pos:end="207:97"><expr pos:start="207:41" pos:end="207:96"><name pos:start="207:41" pos:end="207:61"><name pos:start="207:41" pos:end="207:43">vec</name><index pos:start="207:44" pos:end="207:61">[<expr pos:start="207:45" pos:end="207:49"><name pos:start="207:45" pos:end="207:49">voffs</name></expr>           ]</index></name> <operator pos:start="207:63" pos:end="207:64">+=</operator> <name pos:start="207:66" pos:end="207:96"><name pos:start="207:66" pos:end="207:73">codebook</name><operator pos:start="207:74" pos:end="207:74">.</operator><name pos:start="207:75" pos:end="207:85">codevectors</name><index pos:start="207:86" pos:end="207:96">[<expr pos:start="207:87" pos:end="207:91"><name pos:start="207:87" pos:end="207:91">coffs</name></expr>    ]</index></name></expr>;</expr_stmt>  <comment type="line" pos:start="207:100" pos:end="207:108">// FPMATH</comment>

                                        <expr_stmt pos:start="209:41" pos:end="209:97"><expr pos:start="209:41" pos:end="209:96"><name pos:start="209:41" pos:end="209:61"><name pos:start="209:41" pos:end="209:43">vec</name><index pos:start="209:44" pos:end="209:61">[<expr pos:start="209:45" pos:end="209:53"><name pos:start="209:45" pos:end="209:49">voffs</name> <operator pos:start="209:51" pos:end="209:51">+</operator> <literal type="number" pos:start="209:53" pos:end="209:53">1</literal></expr>       ]</index></name> <operator pos:start="209:63" pos:end="209:64">+=</operator> <name pos:start="209:66" pos:end="209:96"><name pos:start="209:66" pos:end="209:73">codebook</name><operator pos:start="209:74" pos:end="209:74">.</operator><name pos:start="209:75" pos:end="209:85">codevectors</name><index pos:start="209:86" pos:end="209:96">[<expr pos:start="209:87" pos:end="209:95"><name pos:start="209:87" pos:end="209:91">coffs</name> <operator pos:start="209:93" pos:end="209:93">+</operator> <literal type="number" pos:start="209:95" pos:end="209:95">2</literal></expr>]</index></name></expr>;</expr_stmt>  <comment type="line" pos:start="209:100" pos:end="209:108">// FPMATH</comment>

                                        <expr_stmt pos:start="211:41" pos:end="211:97"><expr pos:start="211:41" pos:end="211:96"><name pos:start="211:41" pos:end="211:61"><name pos:start="211:41" pos:end="211:43">vec</name><index pos:start="211:44" pos:end="211:61">[<expr pos:start="211:45" pos:end="211:56"><name pos:start="211:45" pos:end="211:49">voffs</name> <operator pos:start="211:51" pos:end="211:51">+</operator> <name pos:start="211:53" pos:end="211:56">vlen</name></expr>    ]</index></name> <operator pos:start="211:63" pos:end="211:64">+=</operator> <name pos:start="211:66" pos:end="211:96"><name pos:start="211:66" pos:end="211:73">codebook</name><operator pos:start="211:74" pos:end="211:74">.</operator><name pos:start="211:75" pos:end="211:85">codevectors</name><index pos:start="211:86" pos:end="211:96">[<expr pos:start="211:87" pos:end="211:95"><name pos:start="211:87" pos:end="211:91">coffs</name> <operator pos:start="211:93" pos:end="211:93">+</operator> <literal type="number" pos:start="211:95" pos:end="211:95">1</literal></expr>]</index></name></expr>;</expr_stmt>  <comment type="line" pos:start="211:100" pos:end="211:108">// FPMATH</comment>

                                        <expr_stmt pos:start="213:41" pos:end="213:97"><expr pos:start="213:41" pos:end="213:96"><name pos:start="213:41" pos:end="213:61"><name pos:start="213:41" pos:end="213:43">vec</name><index pos:start="213:44" pos:end="213:61">[<expr pos:start="213:45" pos:end="213:60"><name pos:start="213:45" pos:end="213:49">voffs</name> <operator pos:start="213:51" pos:end="213:51">+</operator> <name pos:start="213:53" pos:end="213:56">vlen</name> <operator pos:start="213:58" pos:end="213:58">+</operator> <literal type="number" pos:start="213:60" pos:end="213:60">1</literal></expr>]</index></name> <operator pos:start="213:63" pos:end="213:64">+=</operator> <name pos:start="213:66" pos:end="213:96"><name pos:start="213:66" pos:end="213:73">codebook</name><operator pos:start="213:74" pos:end="213:74">.</operator><name pos:start="213:75" pos:end="213:85">codevectors</name><index pos:start="213:86" pos:end="213:96">[<expr pos:start="213:87" pos:end="213:95"><name pos:start="213:87" pos:end="213:91">coffs</name> <operator pos:start="213:93" pos:end="213:93">+</operator> <literal type="number" pos:start="213:95" pos:end="213:95">3</literal></expr>]</index></name></expr>;</expr_stmt>  <comment type="line" pos:start="213:100" pos:end="213:108">// FPMATH</comment>

                                    </block_content>}</block></for>

                                </block_content>}</block></if> <else pos:start="217:35" pos:end="235:33">else<block type="pseudo" pos:start="219:33" pos:end="235:33"><block_content pos:start="219:33" pos:end="235:33">

                                <for pos:start="219:33" pos:end="235:33">for <control pos:start="219:37" pos:end="219:58">(<init pos:start="219:38" pos:end="219:43"><expr pos:start="219:38" pos:end="219:42"><name pos:start="219:38" pos:end="219:38">k</name> <operator pos:start="219:40" pos:end="219:40">=</operator> <literal type="number" pos:start="219:42" pos:end="219:42">0</literal></expr>;</init> <condition pos:start="219:45" pos:end="219:53"><expr pos:start="219:45" pos:end="219:52"><name pos:start="219:45" pos:end="219:45">k</name> <operator pos:start="219:47" pos:end="219:47">&lt;</operator> <name pos:start="219:49" pos:end="219:52">step</name></expr>;</condition> <incr pos:start="219:55" pos:end="219:57"><expr pos:start="219:55" pos:end="219:57"><operator pos:start="219:55" pos:end="219:56">++</operator><name pos:start="219:57" pos:end="219:57">k</name></expr></incr>)</control> <block pos:start="219:60" pos:end="235:33">{<block_content pos:start="221:37" pos:end="233:37">

                                    <expr_stmt pos:start="221:37" pos:end="221:104"><expr pos:start="221:37" pos:end="221:103"><name pos:start="221:37" pos:end="221:41">coffs</name> <operator pos:start="221:43" pos:end="221:43">=</operator> <call pos:start="221:45" pos:end="221:97"><name pos:start="221:45" pos:end="221:52">get_vlc2</name><argument_list pos:start="221:53" pos:end="221:97">(<argument pos:start="221:54" pos:end="221:55"><expr pos:start="221:54" pos:end="221:55"><name pos:start="221:54" pos:end="221:55">gb</name></expr></argument>, <argument pos:start="221:58" pos:end="221:75"><expr pos:start="221:58" pos:end="221:75"><name pos:start="221:58" pos:end="221:75"><name pos:start="221:58" pos:end="221:65">codebook</name><operator pos:start="221:66" pos:end="221:66">.</operator><name pos:start="221:67" pos:end="221:69">vlc</name><operator pos:start="221:70" pos:end="221:70">.</operator><name pos:start="221:71" pos:end="221:75">table</name></name></expr></argument>, <argument pos:start="221:78" pos:end="221:93"><expr pos:start="221:78" pos:end="221:93"><name pos:start="221:78" pos:end="221:93"><name pos:start="221:78" pos:end="221:85">codebook</name><operator pos:start="221:86" pos:end="221:86">.</operator><name pos:start="221:87" pos:end="221:93">nb_bits</name></name></expr></argument>, <argument pos:start="221:96" pos:end="221:96"><expr pos:start="221:96" pos:end="221:96"><literal type="number" pos:start="221:96" pos:end="221:96">3</literal></expr></argument>)</argument_list></call> <operator pos:start="221:99" pos:end="221:99">*</operator> <name pos:start="221:101" pos:end="221:103">dim</name></expr>;</expr_stmt>

                                    <for pos:start="223:37" pos:end="233:37">for <control pos:start="223:41" pos:end="223:73">(<init pos:start="223:42" pos:end="223:47"><expr pos:start="223:42" pos:end="223:46"><name pos:start="223:42" pos:end="223:42">l</name> <operator pos:start="223:44" pos:end="223:44">=</operator> <literal type="number" pos:start="223:46" pos:end="223:46">0</literal></expr>;</init> <condition pos:start="223:49" pos:end="223:56"><expr pos:start="223:49" pos:end="223:55"><name pos:start="223:49" pos:end="223:49">l</name> <operator pos:start="223:51" pos:end="223:51">&lt;</operator> <name pos:start="223:53" pos:end="223:55">dim</name></expr>;</condition> <incr pos:start="223:58" pos:end="223:72"><expr pos:start="223:58" pos:end="223:63"><name pos:start="223:58" pos:end="223:58">l</name> <operator pos:start="223:60" pos:end="223:61">+=</operator> <literal type="number" pos:start="223:63" pos:end="223:63">2</literal></expr><operator pos:start="223:64" pos:end="223:64">,</operator> <expr pos:start="223:66" pos:end="223:72"><name pos:start="223:66" pos:end="223:70">voffs</name><operator pos:start="223:71" pos:end="223:72">++</operator></expr></incr>)</control> <block pos:start="223:75" pos:end="233:37">{<block_content pos:start="225:41" pos:end="231:236">

                                        <expr_stmt pos:start="225:41" pos:end="225:97"><expr pos:start="225:41" pos:end="225:96"><name pos:start="225:41" pos:end="225:57"><name pos:start="225:41" pos:end="225:43">vec</name><index pos:start="225:44" pos:end="225:57">[<expr pos:start="225:45" pos:end="225:49"><name pos:start="225:45" pos:end="225:49">voffs</name></expr>       ]</index></name> <operator pos:start="225:59" pos:end="225:60">+=</operator> <name pos:start="225:62" pos:end="225:96"><name pos:start="225:62" pos:end="225:69">codebook</name><operator pos:start="225:70" pos:end="225:70">.</operator><name pos:start="225:71" pos:end="225:81">codevectors</name><index pos:start="225:82" pos:end="225:96">[<expr pos:start="225:83" pos:end="225:91"><name pos:start="225:83" pos:end="225:87">coffs</name> <operator pos:start="225:89" pos:end="225:89">+</operator> <name pos:start="225:91" pos:end="225:91">l</name></expr>    ]</index></name></expr>;</expr_stmt>  <comment type="line" pos:start="225:100" pos:end="225:108">// FPMATH</comment>

                                        <expr_stmt pos:start="227:41" pos:end="227:97"><expr pos:start="227:41" pos:end="227:96"><name pos:start="227:41" pos:end="227:57"><name pos:start="227:41" pos:end="227:43">vec</name><index pos:start="227:44" pos:end="227:57">[<expr pos:start="227:45" pos:end="227:56"><name pos:start="227:45" pos:end="227:49">voffs</name> <operator pos:start="227:51" pos:end="227:51">+</operator> <name pos:start="227:53" pos:end="227:56">vlen</name></expr>]</index></name> <operator pos:start="227:59" pos:end="227:60">+=</operator> <name pos:start="227:62" pos:end="227:96"><name pos:start="227:62" pos:end="227:69">codebook</name><operator pos:start="227:70" pos:end="227:70">.</operator><name pos:start="227:71" pos:end="227:81">codevectors</name><index pos:start="227:82" pos:end="227:96">[<expr pos:start="227:83" pos:end="227:95"><name pos:start="227:83" pos:end="227:87">coffs</name> <operator pos:start="227:89" pos:end="227:89">+</operator> <name pos:start="227:91" pos:end="227:91">l</name> <operator pos:start="227:93" pos:end="227:93">+</operator> <literal type="number" pos:start="227:95" pos:end="227:95">1</literal></expr>]</index></name></expr>;</expr_stmt>  <comment type="line" pos:start="227:100" pos:end="227:108">// FPMATH</comment>



                                        <expr_stmt pos:start="231:41" pos:end="231:236"><expr pos:start="231:41" pos:end="231:235"><call pos:start="231:41" pos:end="231:235"><name pos:start="231:41" pos:end="231:48">AV_DEBUG</name><argument_list pos:start="231:49" pos:end="231:235">(<argument pos:start="231:50" pos:end="231:108"><expr pos:start="231:50" pos:end="231:108"><literal type="string" pos:start="231:50" pos:end="231:108">" pass %d offs: %d curr: %f change: %f cv offs.: %d+%d  \n"</literal></expr></argument>, <argument pos:start="231:111" pos:end="231:114"><expr pos:start="231:111" pos:end="231:114"><name pos:start="231:111" pos:end="231:114">pass</name></expr></argument>, <argument pos:start="231:117" pos:end="231:150"><expr pos:start="231:117" pos:end="231:150"><name pos:start="231:117" pos:end="231:123">voffset</name> <operator pos:start="231:125" pos:end="231:125">/</operator> <name pos:start="231:127" pos:end="231:128">ch</name> <operator pos:start="231:130" pos:end="231:130">+</operator> <operator pos:start="231:132" pos:end="231:132">(</operator><name pos:start="231:133" pos:end="231:137">voffs</name> <operator pos:start="231:139" pos:end="231:139">%</operator> <name pos:start="231:141" pos:end="231:142">ch</name><operator pos:start="231:143" pos:end="231:143">)</operator> <operator pos:start="231:145" pos:end="231:145">*</operator> <name pos:start="231:147" pos:end="231:150">vlen</name></expr></argument>, <argument pos:start="231:153" pos:end="231:191"><expr pos:start="231:153" pos:end="231:191"><name pos:start="231:153" pos:end="231:191"><name pos:start="231:153" pos:end="231:155">vec</name><index pos:start="231:156" pos:end="231:191">[<expr pos:start="231:157" pos:end="231:190"><name pos:start="231:157" pos:end="231:163">voffset</name> <operator pos:start="231:165" pos:end="231:165">/</operator> <name pos:start="231:167" pos:end="231:168">ch</name> <operator pos:start="231:170" pos:end="231:170">+</operator> <operator pos:start="231:172" pos:end="231:172">(</operator><name pos:start="231:173" pos:end="231:177">voffs</name> <operator pos:start="231:179" pos:end="231:179">%</operator> <name pos:start="231:181" pos:end="231:182">ch</name><operator pos:start="231:183" pos:end="231:183">)</operator> <operator pos:start="231:185" pos:end="231:185">*</operator> <name pos:start="231:187" pos:end="231:190">vlen</name></expr>]</index></name></expr></argument>, <argument pos:start="231:194" pos:end="231:224"><expr pos:start="231:194" pos:end="231:224"><name pos:start="231:194" pos:end="231:224"><name pos:start="231:194" pos:end="231:201">codebook</name><operator pos:start="231:202" pos:end="231:202">.</operator><name pos:start="231:203" pos:end="231:213">codevectors</name><index pos:start="231:214" pos:end="231:224">[<expr pos:start="231:215" pos:end="231:223"><name pos:start="231:215" pos:end="231:219">coffs</name> <operator pos:start="231:221" pos:end="231:221">+</operator> <name pos:start="231:223" pos:end="231:223">l</name></expr>]</index></name></expr></argument>, <argument pos:start="231:227" pos:end="231:231"><expr pos:start="231:227" pos:end="231:231"><name pos:start="231:227" pos:end="231:231">coffs</name></expr></argument>, <argument pos:start="231:234" pos:end="231:234"><expr pos:start="231:234" pos:end="231:234"><name pos:start="231:234" pos:end="231:234">l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    </block_content>}</block></for>

                                </block_content>}</block></for></block_content></block></else></if_stmt>



                            </block_content>}</block></if> <if type="elseif" pos:start="239:31" pos:end="261:29">else if <condition pos:start="239:39" pos:end="239:52">(<expr pos:start="239:40" pos:end="239:51"><name pos:start="239:40" pos:end="239:46">vr_type</name> <operator pos:start="239:48" pos:end="239:49">==</operator> <literal type="number" pos:start="239:51" pos:end="239:51">2</literal></expr>)</condition> <block pos:start="239:54" pos:end="261:29">{<block_content pos:start="241:33" pos:end="259:33">

                                <expr_stmt pos:start="241:33" pos:end="241:48"><expr pos:start="241:33" pos:end="241:47"><name pos:start="241:33" pos:end="241:37">voffs</name> <operator pos:start="241:39" pos:end="241:39">=</operator> <name pos:start="241:41" pos:end="241:47">voffset</name></expr>;</expr_stmt>



                                <for pos:start="245:33" pos:end="259:33">for <control pos:start="245:37" pos:end="245:58">(<init pos:start="245:38" pos:end="245:43"><expr pos:start="245:38" pos:end="245:42"><name pos:start="245:38" pos:end="245:38">k</name> <operator pos:start="245:40" pos:end="245:40">=</operator> <literal type="number" pos:start="245:42" pos:end="245:42">0</literal></expr>;</init> <condition pos:start="245:45" pos:end="245:53"><expr pos:start="245:45" pos:end="245:52"><name pos:start="245:45" pos:end="245:45">k</name> <operator pos:start="245:47" pos:end="245:47">&lt;</operator> <name pos:start="245:49" pos:end="245:52">step</name></expr>;</condition> <incr pos:start="245:55" pos:end="245:57"><expr pos:start="245:55" pos:end="245:57"><operator pos:start="245:55" pos:end="245:56">++</operator><name pos:start="245:57" pos:end="245:57">k</name></expr></incr>)</control> <block pos:start="245:60" pos:end="259:33">{<block_content pos:start="247:37" pos:end="257:37">

                                    <expr_stmt pos:start="247:37" pos:end="247:104"><expr pos:start="247:37" pos:end="247:103"><name pos:start="247:37" pos:end="247:41">coffs</name> <operator pos:start="247:43" pos:end="247:43">=</operator> <call pos:start="247:45" pos:end="247:97"><name pos:start="247:45" pos:end="247:52">get_vlc2</name><argument_list pos:start="247:53" pos:end="247:97">(<argument pos:start="247:54" pos:end="247:55"><expr pos:start="247:54" pos:end="247:55"><name pos:start="247:54" pos:end="247:55">gb</name></expr></argument>, <argument pos:start="247:58" pos:end="247:75"><expr pos:start="247:58" pos:end="247:75"><name pos:start="247:58" pos:end="247:75"><name pos:start="247:58" pos:end="247:65">codebook</name><operator pos:start="247:66" pos:end="247:66">.</operator><name pos:start="247:67" pos:end="247:69">vlc</name><operator pos:start="247:70" pos:end="247:70">.</operator><name pos:start="247:71" pos:end="247:75">table</name></name></expr></argument>, <argument pos:start="247:78" pos:end="247:93"><expr pos:start="247:78" pos:end="247:93"><name pos:start="247:78" pos:end="247:93"><name pos:start="247:78" pos:end="247:85">codebook</name><operator pos:start="247:86" pos:end="247:86">.</operator><name pos:start="247:87" pos:end="247:93">nb_bits</name></name></expr></argument>, <argument pos:start="247:96" pos:end="247:96"><expr pos:start="247:96" pos:end="247:96"><literal type="number" pos:start="247:96" pos:end="247:96">3</literal></expr></argument>)</argument_list></call> <operator pos:start="247:99" pos:end="247:99">*</operator> <name pos:start="247:101" pos:end="247:103">dim</name></expr>;</expr_stmt>

                                    <for pos:start="249:37" pos:end="257:37">for <control pos:start="249:41" pos:end="249:70">(<init pos:start="249:42" pos:end="249:47"><expr pos:start="249:42" pos:end="249:46"><name pos:start="249:42" pos:end="249:42">l</name> <operator pos:start="249:44" pos:end="249:44">=</operator> <literal type="number" pos:start="249:46" pos:end="249:46">0</literal></expr>;</init> <condition pos:start="249:49" pos:end="249:56"><expr pos:start="249:49" pos:end="249:55"><name pos:start="249:49" pos:end="249:49">l</name> <operator pos:start="249:51" pos:end="249:51">&lt;</operator> <name pos:start="249:53" pos:end="249:55">dim</name></expr>;</condition> <incr pos:start="249:58" pos:end="249:69"><expr pos:start="249:58" pos:end="249:60"><operator pos:start="249:58" pos:end="249:59">++</operator><name pos:start="249:60" pos:end="249:60">l</name></expr><operator pos:start="249:61" pos:end="249:61">,</operator> <expr pos:start="249:63" pos:end="249:69"><operator pos:start="249:63" pos:end="249:64">++</operator><name pos:start="249:65" pos:end="249:69">voffs</name></expr></incr>)</control> <block pos:start="249:72" pos:end="257:37">{<block_content pos:start="251:41" pos:end="255:236">

                                        <expr_stmt pos:start="251:41" pos:end="251:113"><expr pos:start="251:41" pos:end="251:112"><name pos:start="251:41" pos:end="251:77"><name pos:start="251:41" pos:end="251:43">vec</name><index pos:start="251:44" pos:end="251:77">[<expr pos:start="251:45" pos:end="251:76"><name pos:start="251:45" pos:end="251:49">voffs</name> <operator pos:start="251:51" pos:end="251:51">/</operator> <name pos:start="251:53" pos:end="251:54">ch</name> <operator pos:start="251:56" pos:end="251:56">+</operator> <operator pos:start="251:58" pos:end="251:58">(</operator><name pos:start="251:59" pos:end="251:63">voffs</name> <operator pos:start="251:65" pos:end="251:65">%</operator> <name pos:start="251:67" pos:end="251:68">ch</name><operator pos:start="251:69" pos:end="251:69">)</operator> <operator pos:start="251:71" pos:end="251:71">*</operator> <name pos:start="251:73" pos:end="251:76">vlen</name></expr>]</index></name> <operator pos:start="251:79" pos:end="251:80">+=</operator> <name pos:start="251:82" pos:end="251:112"><name pos:start="251:82" pos:end="251:89">codebook</name><operator pos:start="251:90" pos:end="251:90">.</operator><name pos:start="251:91" pos:end="251:101">codevectors</name><index pos:start="251:102" pos:end="251:112">[<expr pos:start="251:103" pos:end="251:111"><name pos:start="251:103" pos:end="251:107">coffs</name> <operator pos:start="251:109" pos:end="251:109">+</operator> <name pos:start="251:111" pos:end="251:111">l</name></expr>]</index></name></expr>;</expr_stmt>  <comment type="line" pos:start="251:116" pos:end="251:168">// FPMATH FIXME use if and counter instead of / and %</comment>



                                        <expr_stmt pos:start="255:41" pos:end="255:236"><expr pos:start="255:41" pos:end="255:235"><call pos:start="255:41" pos:end="255:235"><name pos:start="255:41" pos:end="255:48">AV_DEBUG</name><argument_list pos:start="255:49" pos:end="255:235">(<argument pos:start="255:50" pos:end="255:108"><expr pos:start="255:50" pos:end="255:108"><literal type="string" pos:start="255:50" pos:end="255:108">" pass %d offs: %d curr: %f change: %f cv offs.: %d+%d  \n"</literal></expr></argument>, <argument pos:start="255:111" pos:end="255:114"><expr pos:start="255:111" pos:end="255:114"><name pos:start="255:111" pos:end="255:114">pass</name></expr></argument>, <argument pos:start="255:117" pos:end="255:150"><expr pos:start="255:117" pos:end="255:150"><name pos:start="255:117" pos:end="255:123">voffset</name> <operator pos:start="255:125" pos:end="255:125">/</operator> <name pos:start="255:127" pos:end="255:128">ch</name> <operator pos:start="255:130" pos:end="255:130">+</operator> <operator pos:start="255:132" pos:end="255:132">(</operator><name pos:start="255:133" pos:end="255:137">voffs</name> <operator pos:start="255:139" pos:end="255:139">%</operator> <name pos:start="255:141" pos:end="255:142">ch</name><operator pos:start="255:143" pos:end="255:143">)</operator> <operator pos:start="255:145" pos:end="255:145">*</operator> <name pos:start="255:147" pos:end="255:150">vlen</name></expr></argument>, <argument pos:start="255:153" pos:end="255:191"><expr pos:start="255:153" pos:end="255:191"><name pos:start="255:153" pos:end="255:191"><name pos:start="255:153" pos:end="255:155">vec</name><index pos:start="255:156" pos:end="255:191">[<expr pos:start="255:157" pos:end="255:190"><name pos:start="255:157" pos:end="255:163">voffset</name> <operator pos:start="255:165" pos:end="255:165">/</operator> <name pos:start="255:167" pos:end="255:168">ch</name> <operator pos:start="255:170" pos:end="255:170">+</operator> <operator pos:start="255:172" pos:end="255:172">(</operator><name pos:start="255:173" pos:end="255:177">voffs</name> <operator pos:start="255:179" pos:end="255:179">%</operator> <name pos:start="255:181" pos:end="255:182">ch</name><operator pos:start="255:183" pos:end="255:183">)</operator> <operator pos:start="255:185" pos:end="255:185">*</operator> <name pos:start="255:187" pos:end="255:190">vlen</name></expr>]</index></name></expr></argument>, <argument pos:start="255:194" pos:end="255:224"><expr pos:start="255:194" pos:end="255:224"><name pos:start="255:194" pos:end="255:224"><name pos:start="255:194" pos:end="255:201">codebook</name><operator pos:start="255:202" pos:end="255:202">.</operator><name pos:start="255:203" pos:end="255:213">codevectors</name><index pos:start="255:214" pos:end="255:224">[<expr pos:start="255:215" pos:end="255:223"><name pos:start="255:215" pos:end="255:219">coffs</name> <operator pos:start="255:221" pos:end="255:221">+</operator> <name pos:start="255:223" pos:end="255:223">l</name></expr>]</index></name></expr></argument>, <argument pos:start="255:227" pos:end="255:231"><expr pos:start="255:227" pos:end="255:231"><name pos:start="255:227" pos:end="255:231">coffs</name></expr></argument>, <argument pos:start="255:234" pos:end="255:234"><expr pos:start="255:234" pos:end="255:234"><name pos:start="255:234" pos:end="255:234">l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    </block_content>}</block></for>

                                </block_content>}</block></for>

                            </block_content>}</block></if></if_stmt>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="267:21" pos:end="267:57"><expr pos:start="267:21" pos:end="267:56"><name pos:start="267:21" pos:end="267:40">j_times_ptns_to_read</name> <operator pos:start="267:42" pos:end="267:43">+=</operator> <name pos:start="267:45" pos:end="267:56">ptns_to_read</name></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="271:17" pos:end="271:34"><expr pos:start="271:17" pos:end="271:33"><operator pos:start="271:17" pos:end="271:18">++</operator><name pos:start="271:19" pos:end="271:33">partition_count</name></expr>;</expr_stmt>

                <expr_stmt pos:start="273:17" pos:end="273:46"><expr pos:start="273:17" pos:end="273:45"><name pos:start="273:17" pos:end="273:23">voffset</name> <operator pos:start="273:25" pos:end="273:26">+=</operator> <name pos:start="273:28" pos:end="273:45"><name pos:start="273:28" pos:end="273:29">vr</name><operator pos:start="273:30" pos:end="273:31">-&gt;</operator><name pos:start="273:32" pos:end="273:45">partition_size</name></name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <return pos:start="281:5" pos:end="281:13">return <expr pos:start="281:12" pos:end="281:12"><literal type="number" pos:start="281:12" pos:end="281:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
