<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8346.c" pos:tabs="8"><function pos:start="1:1" pos:end="169:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:17">do_store_msr</name> <parameter_list pos:start="1:19" pos:end="1:56">(<parameter pos:start="1:20" pos:end="1:35"><decl pos:start="1:20" pos:end="1:35"><type pos:start="1:20" pos:end="1:35"><name pos:start="1:20" pos:end="1:30">CPUPPCState</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:35">env</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:55"><decl pos:start="1:38" pos:end="1:55"><type pos:start="1:38" pos:end="1:55"><name pos:start="1:38" pos:end="1:49">target_ulong</name></type> <name pos:start="1:51" pos:end="1:55">value</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="169:1">{<block_content pos:start="5:5" pos:end="167:5">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:16">enter_pm</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:27"><expr pos:start="9:5" pos:end="9:26"><name pos:start="9:5" pos:end="9:9">value</name> <operator pos:start="9:11" pos:end="9:12">&amp;=</operator> <name pos:start="9:14" pos:end="9:26"><name pos:start="9:14" pos:end="9:16">env</name><operator pos:start="9:17" pos:end="9:18">-&gt;</operator><name pos:start="9:19" pos:end="9:26">msr_mask</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="32:0"><if pos:start="11:5" pos:end="32:0">if <condition pos:start="11:8" pos:end="13:42">(<expr pos:start="11:9" pos:end="13:41"><operator pos:start="11:9" pos:end="11:9">(</operator><operator pos:start="11:10" pos:end="11:10">(</operator><name pos:start="11:11" pos:end="11:15">value</name> <operator pos:start="11:17" pos:end="11:18">&gt;&gt;</operator> <name pos:start="11:20" pos:end="11:25">MSR_IR</name><operator pos:start="11:26" pos:end="11:26">)</operator> <operator pos:start="11:28" pos:end="11:28">&amp;</operator> <literal type="number" pos:start="11:30" pos:end="11:30">1</literal><operator pos:start="11:31" pos:end="11:31">)</operator> <operator pos:start="11:33" pos:end="11:34">!=</operator> <name pos:start="11:36" pos:end="11:41">msr_ir</name> <operator pos:start="11:43" pos:end="11:44">||</operator>

        <operator pos:start="13:9" pos:end="13:9">(</operator><operator pos:start="13:10" pos:end="13:10">(</operator><name pos:start="13:11" pos:end="13:15">value</name> <operator pos:start="13:17" pos:end="13:18">&gt;&gt;</operator> <name pos:start="13:20" pos:end="13:25">MSR_DR</name><operator pos:start="13:26" pos:end="13:26">)</operator> <operator pos:start="13:28" pos:end="13:28">&amp;</operator> <literal type="number" pos:start="13:30" pos:end="13:30">1</literal><operator pos:start="13:31" pos:end="13:31">)</operator> <operator pos:start="13:33" pos:end="13:34">!=</operator> <name pos:start="13:36" pos:end="13:41">msr_dr</name></expr>)</condition> <block pos:start="13:44" pos:end="32:0">{<block_content pos:start="17:9" pos:end="19:55">

        <comment type="block" pos:start="15:9" pos:end="15:58">/* Flush all tlb when changing translation mode */</comment>

        <expr_stmt pos:start="17:9" pos:end="17:26"><expr pos:start="17:9" pos:end="17:25"><call pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:17">tlb_flush</name><argument_list pos:start="17:18" pos:end="17:25">(<argument pos:start="17:19" pos:end="17:21"><expr pos:start="17:19" pos:end="17:21"><name pos:start="17:19" pos:end="17:21">env</name></expr></argument>, <argument pos:start="17:24" pos:end="17:24"><expr pos:start="17:24" pos:end="17:24"><literal type="number" pos:start="17:24" pos:end="17:24">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:55"><expr pos:start="19:9" pos:end="19:54"><name pos:start="19:9" pos:end="19:30"><name pos:start="19:9" pos:end="19:11">env</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:30">interrupt_request</name></name> <operator pos:start="19:32" pos:end="19:33">|=</operator> <name pos:start="19:35" pos:end="19:54">CPU_INTERRUPT_EXITTB</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:if pos:start="23:1" pos:end="23:5">#<cpp:directive pos:start="23:2" pos:end="23:3">if</cpp:directive> <expr pos:start="23:5" pos:end="23:5"><literal type="number" pos:start="23:5" pos:end="23:5">0</literal></expr></cpp:if>

    if (loglevel != 0) {

        fprintf(logfile, "%s: T0 %08lx\n", __func__, value);

    }

<cpp:endif pos:start="31:1" pos:end="31:6">#<cpp:directive pos:start="31:2" pos:end="31:6">endif</cpp:directive></cpp:endif>

    <switch pos:start="33:5" pos:end="56:0">switch <condition pos:start="33:12" pos:end="33:26">(<expr pos:start="33:13" pos:end="33:25"><call pos:start="33:13" pos:end="33:25"><name pos:start="33:13" pos:end="33:20">PPC_EXCP</name><argument_list pos:start="33:21" pos:end="33:25">(<argument pos:start="33:22" pos:end="33:24"><expr pos:start="33:22" pos:end="33:24"><name pos:start="33:22" pos:end="33:24">env</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:28" pos:end="56:0">{<block_content pos:start="35:5" pos:end="51:14">

    <case pos:start="35:5" pos:end="35:28">case <expr pos:start="35:10" pos:end="35:27"><name pos:start="35:10" pos:end="35:27">PPC_FLAGS_EXCP_602</name></expr>:</case>

    <case pos:start="37:5" pos:end="37:28">case <expr pos:start="37:10" pos:end="37:27"><name pos:start="37:10" pos:end="37:27">PPC_FLAGS_EXCP_603</name></expr>:</case>

        <if_stmt pos:start="39:9" pos:end="45:9"><if pos:start="39:9" pos:end="45:9">if <condition pos:start="39:12" pos:end="39:50">(<expr pos:start="39:13" pos:end="39:49"><operator pos:start="39:13" pos:end="39:13">(</operator><operator pos:start="39:14" pos:end="39:14">(</operator><name pos:start="39:15" pos:end="39:19">value</name> <operator pos:start="39:21" pos:end="39:22">&gt;&gt;</operator> <name pos:start="39:24" pos:end="39:31">MSR_TGPR</name><operator pos:start="39:32" pos:end="39:32">)</operator> <operator pos:start="39:34" pos:end="39:34">&amp;</operator> <literal type="number" pos:start="39:36" pos:end="39:36">1</literal><operator pos:start="39:37" pos:end="39:37">)</operator> <operator pos:start="39:39" pos:end="39:40">!=</operator> <name pos:start="39:42" pos:end="39:49">msr_tgpr</name></expr>)</condition> <block pos:start="39:52" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:31">

            <comment type="block" pos:start="41:13" pos:end="41:58">/* Swap temporary saved registers with GPRs */</comment>

            <expr_stmt pos:start="43:13" pos:end="43:31"><expr pos:start="43:13" pos:end="43:30"><call pos:start="43:13" pos:end="43:30"><name pos:start="43:13" pos:end="43:25">swap_gpr_tgpr</name><argument_list pos:start="43:26" pos:end="43:30">(<argument pos:start="43:27" pos:end="43:29"><expr pos:start="43:27" pos:end="43:29"><name pos:start="43:27" pos:end="43:29">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="47:9" pos:end="47:14">break;</break>

    <default pos:start="49:5" pos:end="49:12">default:</default>

        <break pos:start="51:9" pos:end="51:14">break;</break>

    </block_content>}</block></switch>

<cpp:if pos:start="55:1" pos:end="55:26">#<cpp:directive pos:start="55:2" pos:end="55:3">if</cpp:directive> <expr pos:start="55:5" pos:end="55:26"><call pos:start="55:5" pos:end="55:26"><name pos:start="55:5" pos:end="55:11">defined</name> <argument_list pos:start="55:13" pos:end="55:26">(<argument pos:start="55:14" pos:end="55:25"><expr pos:start="55:14" pos:end="55:25"><name pos:start="55:14" pos:end="55:25">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="57:5" pos:end="57:39"><expr pos:start="57:5" pos:end="57:38"><name pos:start="57:5" pos:end="57:10">msr_sf</name>   <operator pos:start="57:14" pos:end="57:14">=</operator> <operator pos:start="57:16" pos:end="57:16">(</operator><name pos:start="57:17" pos:end="57:21">value</name> <operator pos:start="57:23" pos:end="57:24">&gt;&gt;</operator> <name pos:start="57:26" pos:end="57:31">MSR_SF</name><operator pos:start="57:32" pos:end="57:32">)</operator>   <operator pos:start="57:36" pos:end="57:36">&amp;</operator> <literal type="number" pos:start="57:38" pos:end="57:38">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:39"><expr pos:start="59:5" pos:end="59:38"><name pos:start="59:5" pos:end="59:11">msr_isf</name>  <operator pos:start="59:14" pos:end="59:14">=</operator> <operator pos:start="59:16" pos:end="59:16">(</operator><name pos:start="59:17" pos:end="59:21">value</name> <operator pos:start="59:23" pos:end="59:24">&gt;&gt;</operator> <name pos:start="59:26" pos:end="59:32">MSR_ISF</name><operator pos:start="59:33" pos:end="59:33">)</operator>  <operator pos:start="59:36" pos:end="59:36">&amp;</operator> <literal type="number" pos:start="59:38" pos:end="59:38">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="64:0"><expr pos:start="61:5" pos:end="61:38"><name pos:start="61:5" pos:end="61:10">msr_hv</name>   <operator pos:start="61:14" pos:end="61:14">=</operator> <operator pos:start="61:16" pos:end="61:16">(</operator><name pos:start="61:17" pos:end="61:21">value</name> <operator pos:start="61:23" pos:end="61:24">&gt;&gt;</operator> <name pos:start="61:26" pos:end="61:31">MSR_HV</name><operator pos:start="61:32" pos:end="61:32">)</operator>   <operator pos:start="61:36" pos:end="61:36">&amp;</operator> <literal type="number" pos:start="61:38" pos:end="61:38">1</literal></expr>;</expr_stmt>

<cpp:endif pos:start="63:1" pos:end="63:6">#<cpp:directive pos:start="63:2" pos:end="63:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="65:5" pos:end="65:39"><expr pos:start="65:5" pos:end="65:38"><name pos:start="65:5" pos:end="65:12">msr_ucle</name> <operator pos:start="65:14" pos:end="65:14">=</operator> <operator pos:start="65:16" pos:end="65:16">(</operator><name pos:start="65:17" pos:end="65:21">value</name> <operator pos:start="65:23" pos:end="65:24">&gt;&gt;</operator> <name pos:start="65:26" pos:end="65:33">MSR_UCLE</name><operator pos:start="65:34" pos:end="65:34">)</operator> <operator pos:start="65:36" pos:end="65:36">&amp;</operator> <literal type="number" pos:start="65:38" pos:end="65:38">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:39"><expr pos:start="67:5" pos:end="67:38"><name pos:start="67:5" pos:end="67:10">msr_vr</name>   <operator pos:start="67:14" pos:end="67:14">=</operator> <operator pos:start="67:16" pos:end="67:16">(</operator><name pos:start="67:17" pos:end="67:21">value</name> <operator pos:start="67:23" pos:end="67:24">&gt;&gt;</operator> <name pos:start="67:26" pos:end="67:31">MSR_VR</name><operator pos:start="67:32" pos:end="67:32">)</operator>   <operator pos:start="67:36" pos:end="67:36">&amp;</operator> <literal type="number" pos:start="67:38" pos:end="67:38">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="67:41" pos:end="67:54">/* VR / SPE */</comment>

    <expr_stmt pos:start="69:5" pos:end="69:39"><expr pos:start="69:5" pos:end="69:38"><name pos:start="69:5" pos:end="69:10">msr_ap</name>   <operator pos:start="69:14" pos:end="69:14">=</operator> <operator pos:start="69:16" pos:end="69:16">(</operator><name pos:start="69:17" pos:end="69:21">value</name> <operator pos:start="69:23" pos:end="69:24">&gt;&gt;</operator> <name pos:start="69:26" pos:end="69:31">MSR_AP</name><operator pos:start="69:32" pos:end="69:32">)</operator>   <operator pos:start="69:36" pos:end="69:36">&amp;</operator> <literal type="number" pos:start="69:38" pos:end="69:38">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:39"><expr pos:start="71:5" pos:end="71:38"><name pos:start="71:5" pos:end="71:10">msr_sa</name>   <operator pos:start="71:14" pos:end="71:14">=</operator> <operator pos:start="71:16" pos:end="71:16">(</operator><name pos:start="71:17" pos:end="71:21">value</name> <operator pos:start="71:23" pos:end="71:24">&gt;&gt;</operator> <name pos:start="71:26" pos:end="71:31">MSR_SA</name><operator pos:start="71:32" pos:end="71:32">)</operator>   <operator pos:start="71:36" pos:end="71:36">&amp;</operator> <literal type="number" pos:start="71:38" pos:end="71:38">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:39"><expr pos:start="73:5" pos:end="73:38"><name pos:start="73:5" pos:end="73:11">msr_key</name>  <operator pos:start="73:14" pos:end="73:14">=</operator> <operator pos:start="73:16" pos:end="73:16">(</operator><name pos:start="73:17" pos:end="73:21">value</name> <operator pos:start="73:23" pos:end="73:24">&gt;&gt;</operator> <name pos:start="73:26" pos:end="73:32">MSR_KEY</name><operator pos:start="73:33" pos:end="73:33">)</operator>  <operator pos:start="73:36" pos:end="73:36">&amp;</operator> <literal type="number" pos:start="73:38" pos:end="73:38">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:39"><expr pos:start="75:5" pos:end="75:38"><name pos:start="75:5" pos:end="75:11">msr_pow</name>  <operator pos:start="75:14" pos:end="75:14">=</operator> <operator pos:start="75:16" pos:end="75:16">(</operator><name pos:start="75:17" pos:end="75:21">value</name> <operator pos:start="75:23" pos:end="75:24">&gt;&gt;</operator> <name pos:start="75:26" pos:end="75:32">MSR_POW</name><operator pos:start="75:33" pos:end="75:33">)</operator>  <operator pos:start="75:36" pos:end="75:36">&amp;</operator> <literal type="number" pos:start="75:38" pos:end="75:38">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="75:41" pos:end="75:54">/* POW / WE */</comment>

    <expr_stmt pos:start="77:5" pos:end="77:39"><expr pos:start="77:5" pos:end="77:38"><name pos:start="77:5" pos:end="77:11">msr_tlb</name>  <operator pos:start="77:14" pos:end="77:14">=</operator> <operator pos:start="77:16" pos:end="77:16">(</operator><name pos:start="77:17" pos:end="77:21">value</name> <operator pos:start="77:23" pos:end="77:24">&gt;&gt;</operator> <name pos:start="77:26" pos:end="77:32">MSR_TLB</name><operator pos:start="77:33" pos:end="77:33">)</operator>  <operator pos:start="77:36" pos:end="77:36">&amp;</operator> <literal type="number" pos:start="77:38" pos:end="77:38">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="77:41" pos:end="77:61">/* TLB / TGPR / CE */</comment>

    <expr_stmt pos:start="79:5" pos:end="79:39"><expr pos:start="79:5" pos:end="79:38"><name pos:start="79:5" pos:end="79:11">msr_ile</name>  <operator pos:start="79:14" pos:end="79:14">=</operator> <operator pos:start="79:16" pos:end="79:16">(</operator><name pos:start="79:17" pos:end="79:21">value</name> <operator pos:start="79:23" pos:end="79:24">&gt;&gt;</operator> <name pos:start="79:26" pos:end="79:32">MSR_ILE</name><operator pos:start="79:33" pos:end="79:33">)</operator>  <operator pos:start="79:36" pos:end="79:36">&amp;</operator> <literal type="number" pos:start="79:38" pos:end="79:38">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:39"><expr pos:start="81:5" pos:end="81:38"><name pos:start="81:5" pos:end="81:10">msr_ee</name>   <operator pos:start="81:14" pos:end="81:14">=</operator> <operator pos:start="81:16" pos:end="81:16">(</operator><name pos:start="81:17" pos:end="81:21">value</name> <operator pos:start="81:23" pos:end="81:24">&gt;&gt;</operator> <name pos:start="81:26" pos:end="81:31">MSR_EE</name><operator pos:start="81:32" pos:end="81:32">)</operator>   <operator pos:start="81:36" pos:end="81:36">&amp;</operator> <literal type="number" pos:start="81:38" pos:end="81:38">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:39"><expr pos:start="83:5" pos:end="83:38"><name pos:start="83:5" pos:end="83:10">msr_pr</name>   <operator pos:start="83:14" pos:end="83:14">=</operator> <operator pos:start="83:16" pos:end="83:16">(</operator><name pos:start="83:17" pos:end="83:21">value</name> <operator pos:start="83:23" pos:end="83:24">&gt;&gt;</operator> <name pos:start="83:26" pos:end="83:31">MSR_PR</name><operator pos:start="83:32" pos:end="83:32">)</operator>   <operator pos:start="83:36" pos:end="83:36">&amp;</operator> <literal type="number" pos:start="83:38" pos:end="83:38">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:39"><expr pos:start="85:5" pos:end="85:38"><name pos:start="85:5" pos:end="85:10">msr_fp</name>   <operator pos:start="85:14" pos:end="85:14">=</operator> <operator pos:start="85:16" pos:end="85:16">(</operator><name pos:start="85:17" pos:end="85:21">value</name> <operator pos:start="85:23" pos:end="85:24">&gt;&gt;</operator> <name pos:start="85:26" pos:end="85:31">MSR_FP</name><operator pos:start="85:32" pos:end="85:32">)</operator>   <operator pos:start="85:36" pos:end="85:36">&amp;</operator> <literal type="number" pos:start="85:38" pos:end="85:38">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:39"><expr pos:start="87:5" pos:end="87:38"><name pos:start="87:5" pos:end="87:10">msr_me</name>   <operator pos:start="87:14" pos:end="87:14">=</operator> <operator pos:start="87:16" pos:end="87:16">(</operator><name pos:start="87:17" pos:end="87:21">value</name> <operator pos:start="87:23" pos:end="87:24">&gt;&gt;</operator> <name pos:start="87:26" pos:end="87:31">MSR_ME</name><operator pos:start="87:32" pos:end="87:32">)</operator>   <operator pos:start="87:36" pos:end="87:36">&amp;</operator> <literal type="number" pos:start="87:38" pos:end="87:38">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:39"><expr pos:start="89:5" pos:end="89:38"><name pos:start="89:5" pos:end="89:11">msr_fe0</name>  <operator pos:start="89:14" pos:end="89:14">=</operator> <operator pos:start="89:16" pos:end="89:16">(</operator><name pos:start="89:17" pos:end="89:21">value</name> <operator pos:start="89:23" pos:end="89:24">&gt;&gt;</operator> <name pos:start="89:26" pos:end="89:32">MSR_FE0</name><operator pos:start="89:33" pos:end="89:33">)</operator>  <operator pos:start="89:36" pos:end="89:36">&amp;</operator> <literal type="number" pos:start="89:38" pos:end="89:38">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:39"><expr pos:start="91:5" pos:end="91:38"><name pos:start="91:5" pos:end="91:10">msr_se</name>   <operator pos:start="91:14" pos:end="91:14">=</operator> <operator pos:start="91:16" pos:end="91:16">(</operator><name pos:start="91:17" pos:end="91:21">value</name> <operator pos:start="91:23" pos:end="91:24">&gt;&gt;</operator> <name pos:start="91:26" pos:end="91:31">MSR_SE</name><operator pos:start="91:32" pos:end="91:32">)</operator>   <operator pos:start="91:36" pos:end="91:36">&amp;</operator> <literal type="number" pos:start="91:38" pos:end="91:38">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="91:41" pos:end="91:61">/* SE / DWE / UBLE */</comment>

    <expr_stmt pos:start="93:5" pos:end="93:39"><expr pos:start="93:5" pos:end="93:38"><name pos:start="93:5" pos:end="93:10">msr_be</name>   <operator pos:start="93:14" pos:end="93:14">=</operator> <operator pos:start="93:16" pos:end="93:16">(</operator><name pos:start="93:17" pos:end="93:21">value</name> <operator pos:start="93:23" pos:end="93:24">&gt;&gt;</operator> <name pos:start="93:26" pos:end="93:31">MSR_BE</name><operator pos:start="93:32" pos:end="93:32">)</operator>   <operator pos:start="93:36" pos:end="93:36">&amp;</operator> <literal type="number" pos:start="93:38" pos:end="93:38">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="93:41" pos:end="93:53">/* BE / DE */</comment>

    <expr_stmt pos:start="95:5" pos:end="95:39"><expr pos:start="95:5" pos:end="95:38"><name pos:start="95:5" pos:end="95:11">msr_fe1</name>  <operator pos:start="95:14" pos:end="95:14">=</operator> <operator pos:start="95:16" pos:end="95:16">(</operator><name pos:start="95:17" pos:end="95:21">value</name> <operator pos:start="95:23" pos:end="95:24">&gt;&gt;</operator> <name pos:start="95:26" pos:end="95:32">MSR_FE1</name><operator pos:start="95:33" pos:end="95:33">)</operator>  <operator pos:start="95:36" pos:end="95:36">&amp;</operator> <literal type="number" pos:start="95:38" pos:end="95:38">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:39"><expr pos:start="97:5" pos:end="97:38"><name pos:start="97:5" pos:end="97:10">msr_al</name>   <operator pos:start="97:14" pos:end="97:14">=</operator> <operator pos:start="97:16" pos:end="97:16">(</operator><name pos:start="97:17" pos:end="97:21">value</name> <operator pos:start="97:23" pos:end="97:24">&gt;&gt;</operator> <name pos:start="97:26" pos:end="97:31">MSR_AL</name><operator pos:start="97:32" pos:end="97:32">)</operator>   <operator pos:start="97:36" pos:end="97:36">&amp;</operator> <literal type="number" pos:start="97:38" pos:end="97:38">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:39"><expr pos:start="99:5" pos:end="99:38"><name pos:start="99:5" pos:end="99:10">msr_ip</name>   <operator pos:start="99:14" pos:end="99:14">=</operator> <operator pos:start="99:16" pos:end="99:16">(</operator><name pos:start="99:17" pos:end="99:21">value</name> <operator pos:start="99:23" pos:end="99:24">&gt;&gt;</operator> <name pos:start="99:26" pos:end="99:31">MSR_IP</name><operator pos:start="99:32" pos:end="99:32">)</operator>   <operator pos:start="99:36" pos:end="99:36">&amp;</operator> <literal type="number" pos:start="99:38" pos:end="99:38">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:39"><expr pos:start="101:5" pos:end="101:38"><name pos:start="101:5" pos:end="101:10">msr_ir</name>   <operator pos:start="101:14" pos:end="101:14">=</operator> <operator pos:start="101:16" pos:end="101:16">(</operator><name pos:start="101:17" pos:end="101:21">value</name> <operator pos:start="101:23" pos:end="101:24">&gt;&gt;</operator> <name pos:start="101:26" pos:end="101:31">MSR_IR</name><operator pos:start="101:32" pos:end="101:32">)</operator>   <operator pos:start="101:36" pos:end="101:36">&amp;</operator> <literal type="number" pos:start="101:38" pos:end="101:38">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="101:41" pos:end="101:53">/* IR / IS */</comment>

    <expr_stmt pos:start="103:5" pos:end="103:39"><expr pos:start="103:5" pos:end="103:38"><name pos:start="103:5" pos:end="103:10">msr_dr</name>   <operator pos:start="103:14" pos:end="103:14">=</operator> <operator pos:start="103:16" pos:end="103:16">(</operator><name pos:start="103:17" pos:end="103:21">value</name> <operator pos:start="103:23" pos:end="103:24">&gt;&gt;</operator> <name pos:start="103:26" pos:end="103:31">MSR_DR</name><operator pos:start="103:32" pos:end="103:32">)</operator>   <operator pos:start="103:36" pos:end="103:36">&amp;</operator> <literal type="number" pos:start="103:38" pos:end="103:38">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="103:41" pos:end="103:53">/* DR / DS */</comment>

    <expr_stmt pos:start="105:5" pos:end="105:39"><expr pos:start="105:5" pos:end="105:38"><name pos:start="105:5" pos:end="105:10">msr_pe</name>   <operator pos:start="105:14" pos:end="105:14">=</operator> <operator pos:start="105:16" pos:end="105:16">(</operator><name pos:start="105:17" pos:end="105:21">value</name> <operator pos:start="105:23" pos:end="105:24">&gt;&gt;</operator> <name pos:start="105:26" pos:end="105:31">MSR_PE</name><operator pos:start="105:32" pos:end="105:32">)</operator>   <operator pos:start="105:36" pos:end="105:36">&amp;</operator> <literal type="number" pos:start="105:38" pos:end="105:38">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="105:41" pos:end="105:53">/* PE / EP */</comment>

    <expr_stmt pos:start="107:5" pos:end="107:39"><expr pos:start="107:5" pos:end="107:38"><name pos:start="107:5" pos:end="107:10">msr_px</name>   <operator pos:start="107:14" pos:end="107:14">=</operator> <operator pos:start="107:16" pos:end="107:16">(</operator><name pos:start="107:17" pos:end="107:21">value</name> <operator pos:start="107:23" pos:end="107:24">&gt;&gt;</operator> <name pos:start="107:26" pos:end="107:31">MSR_PX</name><operator pos:start="107:32" pos:end="107:32">)</operator>   <operator pos:start="107:36" pos:end="107:36">&amp;</operator> <literal type="number" pos:start="107:38" pos:end="107:38">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="107:41" pos:end="107:54">/* PX / PMM */</comment>

    <expr_stmt pos:start="109:5" pos:end="109:39"><expr pos:start="109:5" pos:end="109:38"><name pos:start="109:5" pos:end="109:10">msr_ri</name>   <operator pos:start="109:14" pos:end="109:14">=</operator> <operator pos:start="109:16" pos:end="109:16">(</operator><name pos:start="109:17" pos:end="109:21">value</name> <operator pos:start="109:23" pos:end="109:24">&gt;&gt;</operator> <name pos:start="109:26" pos:end="109:31">MSR_RI</name><operator pos:start="109:32" pos:end="109:32">)</operator>   <operator pos:start="109:36" pos:end="109:36">&amp;</operator> <literal type="number" pos:start="109:38" pos:end="109:38">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:39"><expr pos:start="111:5" pos:end="111:38"><name pos:start="111:5" pos:end="111:10">msr_le</name>   <operator pos:start="111:14" pos:end="111:14">=</operator> <operator pos:start="111:16" pos:end="111:16">(</operator><name pos:start="111:17" pos:end="111:21">value</name> <operator pos:start="111:23" pos:end="111:24">&gt;&gt;</operator> <name pos:start="111:26" pos:end="111:31">MSR_LE</name><operator pos:start="111:32" pos:end="111:32">)</operator>   <operator pos:start="111:36" pos:end="111:36">&amp;</operator> <literal type="number" pos:start="111:38" pos:end="111:38">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:27"><expr pos:start="113:5" pos:end="113:26"><call pos:start="113:5" pos:end="113:26"><name pos:start="113:5" pos:end="113:21">do_compute_hflags</name><argument_list pos:start="113:22" pos:end="113:26">(<argument pos:start="113:23" pos:end="113:25"><expr pos:start="113:23" pos:end="113:25"><name pos:start="113:23" pos:end="113:25">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="117:5" pos:end="117:17"><expr pos:start="117:5" pos:end="117:16"><name pos:start="117:5" pos:end="117:12">enter_pm</name> <operator pos:start="117:14" pos:end="117:14">=</operator> <literal type="number" pos:start="117:16" pos:end="117:16">0</literal></expr>;</expr_stmt>

    <switch pos:start="119:5" pos:end="155:5">switch <condition pos:start="119:12" pos:end="119:26">(<expr pos:start="119:13" pos:end="119:25"><call pos:start="119:13" pos:end="119:25"><name pos:start="119:13" pos:end="119:20">PPC_EXCP</name><argument_list pos:start="119:21" pos:end="119:25">(<argument pos:start="119:22" pos:end="119:24"><expr pos:start="119:22" pos:end="119:24"><name pos:start="119:22" pos:end="119:24">env</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="119:28" pos:end="155:5">{<block_content pos:start="121:5" pos:end="153:14">

    <case pos:start="121:5" pos:end="121:28">case <expr pos:start="121:10" pos:end="121:27"><name pos:start="121:10" pos:end="121:27">PPC_FLAGS_EXCP_603</name></expr>:</case>

        <comment type="block" pos:start="123:9" pos:end="127:11">/* Don't handle SLEEP mode: we should disable all clocks...

         * No dynamic power-management.

         */</comment>

        <if_stmt pos:start="129:9" pos:end="131:25"><if pos:start="129:9" pos:end="131:25">if <condition pos:start="129:12" pos:end="129:67">(<expr pos:start="129:13" pos:end="129:66"><name pos:start="129:13" pos:end="129:19">msr_pow</name> <operator pos:start="129:21" pos:end="129:22">==</operator> <literal type="number" pos:start="129:24" pos:end="129:24">1</literal> <operator pos:start="129:26" pos:end="129:27">&amp;&amp;</operator> <operator pos:start="129:29" pos:end="129:29">(</operator><name pos:start="129:30" pos:end="129:47"><name pos:start="129:30" pos:end="129:32">env</name><operator pos:start="129:33" pos:end="129:34">-&gt;</operator><name pos:start="129:35" pos:end="129:37">spr</name><index pos:start="129:38" pos:end="129:47">[<expr pos:start="129:39" pos:end="129:46"><name pos:start="129:39" pos:end="129:46">SPR_HID0</name></expr>]</index></name> <operator pos:start="129:49" pos:end="129:49">&amp;</operator> <literal type="number" pos:start="129:51" pos:end="129:60">0x00C00000</literal><operator pos:start="129:61" pos:end="129:61">)</operator> <operator pos:start="129:63" pos:end="129:64">!=</operator> <literal type="number" pos:start="129:66" pos:end="129:66">0</literal></expr>)</condition><block type="pseudo" pos:start="131:13" pos:end="131:25"><block_content pos:start="131:13" pos:end="131:25">

            <expr_stmt pos:start="131:13" pos:end="131:25"><expr pos:start="131:13" pos:end="131:24"><name pos:start="131:13" pos:end="131:20">enter_pm</name> <operator pos:start="131:22" pos:end="131:22">=</operator> <literal type="number" pos:start="131:24" pos:end="131:24">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="133:9" pos:end="133:14">break;</break>

    <case pos:start="135:5" pos:end="135:28">case <expr pos:start="135:10" pos:end="135:27"><name pos:start="135:10" pos:end="135:27">PPC_FLAGS_EXCP_604</name></expr>:</case>

        <if_stmt pos:start="137:9" pos:end="139:25"><if pos:start="137:9" pos:end="139:25">if <condition pos:start="137:12" pos:end="137:25">(<expr pos:start="137:13" pos:end="137:24"><name pos:start="137:13" pos:end="137:19">msr_pow</name> <operator pos:start="137:21" pos:end="137:22">==</operator> <literal type="number" pos:start="137:24" pos:end="137:24">1</literal></expr>)</condition><block type="pseudo" pos:start="139:13" pos:end="139:25"><block_content pos:start="139:13" pos:end="139:25">

            <expr_stmt pos:start="139:13" pos:end="139:25"><expr pos:start="139:13" pos:end="139:24"><name pos:start="139:13" pos:end="139:20">enter_pm</name> <operator pos:start="139:22" pos:end="139:22">=</operator> <literal type="number" pos:start="139:24" pos:end="139:24">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="141:9" pos:end="141:14">break;</break>

    <case pos:start="143:5" pos:end="143:28">case <expr pos:start="143:10" pos:end="143:27"><name pos:start="143:10" pos:end="143:27">PPC_FLAGS_EXCP_7x0</name></expr>:</case>

        <if_stmt pos:start="145:9" pos:end="147:25"><if pos:start="145:9" pos:end="147:25">if <condition pos:start="145:12" pos:end="145:67">(<expr pos:start="145:13" pos:end="145:66"><name pos:start="145:13" pos:end="145:19">msr_pow</name> <operator pos:start="145:21" pos:end="145:22">==</operator> <literal type="number" pos:start="145:24" pos:end="145:24">1</literal> <operator pos:start="145:26" pos:end="145:27">&amp;&amp;</operator> <operator pos:start="145:29" pos:end="145:29">(</operator><name pos:start="145:30" pos:end="145:47"><name pos:start="145:30" pos:end="145:32">env</name><operator pos:start="145:33" pos:end="145:34">-&gt;</operator><name pos:start="145:35" pos:end="145:37">spr</name><index pos:start="145:38" pos:end="145:47">[<expr pos:start="145:39" pos:end="145:46"><name pos:start="145:39" pos:end="145:46">SPR_HID0</name></expr>]</index></name> <operator pos:start="145:49" pos:end="145:49">&amp;</operator> <literal type="number" pos:start="145:51" pos:end="145:60">0x00E00000</literal><operator pos:start="145:61" pos:end="145:61">)</operator> <operator pos:start="145:63" pos:end="145:64">!=</operator> <literal type="number" pos:start="145:66" pos:end="145:66">0</literal></expr>)</condition><block type="pseudo" pos:start="147:13" pos:end="147:25"><block_content pos:start="147:13" pos:end="147:25">

            <expr_stmt pos:start="147:13" pos:end="147:25"><expr pos:start="147:13" pos:end="147:24"><name pos:start="147:13" pos:end="147:20">enter_pm</name> <operator pos:start="147:22" pos:end="147:22">=</operator> <literal type="number" pos:start="147:24" pos:end="147:24">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="149:9" pos:end="149:14">break;</break>

    <default pos:start="151:5" pos:end="151:12">default:</default>

        <break pos:start="153:9" pos:end="153:14">break;</break>

    </block_content>}</block></switch>

    <if_stmt pos:start="157:5" pos:end="167:5"><if pos:start="157:5" pos:end="167:5">if <condition pos:start="157:8" pos:end="157:17">(<expr pos:start="157:9" pos:end="157:16"><name pos:start="157:9" pos:end="157:16">enter_pm</name></expr>)</condition> <block pos:start="157:19" pos:end="167:5">{<block_content pos:start="161:9" pos:end="165:24">

        <comment type="block" pos:start="159:9" pos:end="159:39">/* power save: exit cpu loop */</comment>

        <expr_stmt pos:start="161:9" pos:end="161:24"><expr pos:start="161:9" pos:end="161:23"><name pos:start="161:9" pos:end="161:19"><name pos:start="161:9" pos:end="161:11">env</name><operator pos:start="161:12" pos:end="161:13">-&gt;</operator><name pos:start="161:14" pos:end="161:19">halted</name></name> <operator pos:start="161:21" pos:end="161:21">=</operator> <literal type="number" pos:start="161:23" pos:end="161:23">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:40"><expr pos:start="163:9" pos:end="163:39"><name pos:start="163:9" pos:end="163:28"><name pos:start="163:9" pos:end="163:11">env</name><operator pos:start="163:12" pos:end="163:13">-&gt;</operator><name pos:start="163:14" pos:end="163:28">exception_index</name></name> <operator pos:start="163:30" pos:end="163:30">=</operator> <name pos:start="163:32" pos:end="163:39">EXCP_HLT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:24"><expr pos:start="165:9" pos:end="165:23"><call pos:start="165:9" pos:end="165:23"><name pos:start="165:9" pos:end="165:21">cpu_loop_exit</name><argument_list pos:start="165:22" pos:end="165:23">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
