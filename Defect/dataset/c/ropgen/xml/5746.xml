<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5746.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">scsi_read_data</name><parameter_list pos:start="1:27" pos:end="1:55">(<parameter pos:start="1:28" pos:end="1:40"><decl pos:start="1:28" pos:end="1:40"><type pos:start="1:28" pos:end="1:40"><name pos:start="1:28" pos:end="1:37">SCSIDevice</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">d</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:54"><decl pos:start="1:43" pos:end="1:54"><type pos:start="1:43" pos:end="1:54"><name pos:start="1:43" pos:end="1:50">uint32_t</name></type> <name pos:start="1:52" pos:end="1:54">tag</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:25">

    <decl_stmt pos:start="5:5" pos:end="5:57"><decl pos:start="5:5" pos:end="5:56"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">SCSIDiskState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:56">= <expr pos:start="5:24" pos:end="5:56"><call pos:start="5:24" pos:end="5:56"><name pos:start="5:24" pos:end="5:32">DO_UPCAST</name><argument_list pos:start="5:33" pos:end="5:56">(<argument pos:start="5:34" pos:end="5:46"><expr pos:start="5:34" pos:end="5:46"><name pos:start="5:34" pos:end="5:46">SCSIDiskState</name></expr></argument>, <argument pos:start="5:49" pos:end="5:52"><expr pos:start="5:49" pos:end="5:52"><name pos:start="5:49" pos:end="5:52">qdev</name></expr></argument>, <argument pos:start="5:55" pos:end="5:55"><expr pos:start="5:55" pos:end="5:55"><name pos:start="5:55" pos:end="5:55">d</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">SCSIDiskReq</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">r</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:34"><expr pos:start="11:5" pos:end="11:33"><name pos:start="11:5" pos:end="11:5">r</name> <operator pos:start="11:7" pos:end="11:7">=</operator> <call pos:start="11:9" pos:end="11:33"><name pos:start="11:9" pos:end="11:25">scsi_find_request</name><argument_list pos:start="11:26" pos:end="11:33">(<argument pos:start="11:27" pos:end="11:27"><expr pos:start="11:27" pos:end="11:27"><name pos:start="11:27" pos:end="11:27">s</name></expr></argument>, <argument pos:start="11:30" pos:end="11:32"><expr pos:start="11:30" pos:end="11:32"><name pos:start="11:30" pos:end="11:32">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="23:5"><if pos:start="13:5" pos:end="23:5">if <condition pos:start="13:8" pos:end="13:11">(<expr pos:start="13:9" pos:end="13:10"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:10">r</name></expr>)</condition> <block pos:start="13:13" pos:end="23:5">{<block_content pos:start="15:9" pos:end="21:15">

        <expr_stmt pos:start="15:9" pos:end="15:41"><expr pos:start="15:9" pos:end="15:40"><call pos:start="15:9" pos:end="15:40"><name pos:start="15:9" pos:end="15:12">BADF</name><argument_list pos:start="15:13" pos:end="15:40">(<argument pos:start="15:14" pos:end="15:34"><expr pos:start="15:14" pos:end="15:34"><literal type="string" pos:start="15:14" pos:end="15:34">"Bad read tag 0x%x\n"</literal></expr></argument>, <argument pos:start="15:37" pos:end="15:39"><expr pos:start="15:37" pos:end="15:39"><name pos:start="15:37" pos:end="15:39">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="17:9" pos:end="17:43">/* ??? This is the wrong error.  */</comment>

        <expr_stmt pos:start="19:9" pos:end="19:66"><expr pos:start="19:9" pos:end="19:65"><call pos:start="19:9" pos:end="19:65"><name pos:start="19:9" pos:end="19:29">scsi_command_complete</name><argument_list pos:start="19:30" pos:end="19:65">(<argument pos:start="19:31" pos:end="19:31"><expr pos:start="19:31" pos:end="19:31"><name pos:start="19:31" pos:end="19:31">r</name></expr></argument>, <argument pos:start="19:34" pos:end="19:48"><expr pos:start="19:34" pos:end="19:48"><name pos:start="19:34" pos:end="19:48">CHECK_CONDITION</name></expr></argument>, <argument pos:start="19:51" pos:end="19:64"><expr pos:start="19:51" pos:end="19:64"><name pos:start="19:51" pos:end="19:64">HARDWARE_ERROR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:25"><expr pos:start="27:5" pos:end="27:24"><call pos:start="27:5" pos:end="27:24"><name pos:start="27:5" pos:end="27:21">scsi_read_request</name><argument_list pos:start="27:22" pos:end="27:24">(<argument pos:start="27:23" pos:end="27:23"><expr pos:start="27:23" pos:end="27:23"><name pos:start="27:23" pos:end="27:23">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
