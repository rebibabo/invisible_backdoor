<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25631.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:23"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name> <name pos:start="1:12" pos:end="1:23">coroutine_fn</name></type> <name pos:start="1:25" pos:end="1:43">cow_co_is_allocated</name><parameter_list pos:start="1:44" pos:end="3:58">(<parameter pos:start="1:45" pos:end="1:64"><decl pos:start="1:45" pos:end="1:64"><type pos:start="1:45" pos:end="1:64"><name pos:start="1:45" pos:end="1:60">BlockDriverState</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:64">bs</name></decl></parameter>,

        <parameter pos:start="3:9" pos:end="3:26"><decl pos:start="3:9" pos:end="3:26"><type pos:start="3:9" pos:end="3:26"><name pos:start="3:9" pos:end="3:15">int64_t</name></type> <name pos:start="3:17" pos:end="3:26">sector_num</name></decl></parameter>, <parameter pos:start="3:29" pos:end="3:42"><decl pos:start="3:29" pos:end="3:42"><type pos:start="3:29" pos:end="3:42"><name pos:start="3:29" pos:end="3:31">int</name></type> <name pos:start="3:33" pos:end="3:42">nb_sectors</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:57"><decl pos:start="3:45" pos:end="3:57"><type pos:start="3:45" pos:end="3:57"><name pos:start="3:45" pos:end="3:47">int</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:57">num_same</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="69:1">{<block_content pos:start="7:5" pos:end="67:19">

    <decl_stmt pos:start="7:5" pos:end="7:67"><decl pos:start="7:5" pos:end="7:66"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:18">bitnum</name> <init pos:start="7:20" pos:end="7:66">= <expr pos:start="7:22" pos:end="7:66"><name pos:start="7:22" pos:end="7:31">sector_num</name> <operator pos:start="7:33" pos:end="7:33">+</operator> <sizeof pos:start="7:35" pos:end="7:62">sizeof<argument_list pos:start="7:41" pos:end="7:62">(<argument pos:start="7:42" pos:end="7:61"><expr pos:start="7:42" pos:end="7:61">struct <name pos:start="7:49" pos:end="7:61">cow_header_v2</name></expr></argument>)</argument_list></sizeof> <operator pos:start="7:64" pos:end="7:64">*</operator> <literal type="number" pos:start="7:66" pos:end="7:66">8</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:55"><decl pos:start="9:5" pos:end="9:54"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:19">offset</name> <init pos:start="9:21" pos:end="9:54">= <expr pos:start="9:23" pos:end="9:54"><operator pos:start="9:23" pos:end="9:23">(</operator><name pos:start="9:24" pos:end="9:29">bitnum</name> <operator pos:start="9:31" pos:end="9:31">/</operator> <literal type="number" pos:start="9:33" pos:end="9:33">8</literal><operator pos:start="9:34" pos:end="9:34">)</operator> <operator pos:start="9:36" pos:end="9:36">&amp;</operator> <operator pos:start="9:38" pos:end="9:38">-</operator><name pos:start="9:39" pos:end="9:54">BDRV_SECTOR_SIZE</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">bool</name></type> <name pos:start="11:10" pos:end="11:14">first</name> <init pos:start="11:16" pos:end="11:21">= <expr pos:start="11:18" pos:end="11:21"><name pos:start="11:18" pos:end="11:21">true</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:30"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:15">changed</name> <init pos:start="13:17" pos:end="13:19">= <expr pos:start="13:19" pos:end="13:19"><literal type="number" pos:start="13:19" pos:end="13:19">0</literal></expr></init></decl>, <decl pos:start="13:22" pos:end="13:29"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:22" pos:end="13:25">same</name> <init pos:start="13:27" pos:end="13:29">= <expr pos:start="13:29" pos:end="13:29"><literal type="number" pos:start="13:29" pos:end="13:29">0</literal></expr></init></decl>;</decl_stmt>



    <do pos:start="17:5" pos:end="61:25">do <block pos:start="17:8" pos:end="61:5">{<block_content pos:start="19:9" pos:end="59:35">

        <decl_stmt pos:start="19:9" pos:end="19:16"><decl pos:start="19:9" pos:end="19:15"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:15">ret</name></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="21:41"><decl pos:start="21:9" pos:end="21:40"><type pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:15">uint8_t</name></type> <name pos:start="21:17" pos:end="21:40"><name pos:start="21:17" pos:end="21:22">bitmap</name><index pos:start="21:23" pos:end="21:40">[<expr pos:start="21:24" pos:end="21:39"><name pos:start="21:24" pos:end="21:39">BDRV_SECTOR_SIZE</name></expr>]</index></name></decl>;</decl_stmt>



        <expr_stmt pos:start="25:9" pos:end="25:45"><expr pos:start="25:9" pos:end="25:44"><name pos:start="25:9" pos:end="25:14">bitnum</name> <operator pos:start="25:16" pos:end="25:17">&amp;=</operator> <name pos:start="25:19" pos:end="25:40">BITS_PER_BITMAP_SECTOR</name> <operator pos:start="25:42" pos:end="25:42">-</operator> <literal type="number" pos:start="25:44" pos:end="25:44">1</literal></expr>;</expr_stmt>

        <decl_stmt pos:start="27:9" pos:end="27:75"><decl pos:start="27:9" pos:end="27:74"><type pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:11">int</name></type> <name pos:start="27:13" pos:end="27:23">sector_bits</name> <init pos:start="27:25" pos:end="27:74">= <expr pos:start="27:27" pos:end="27:74"><call pos:start="27:27" pos:end="27:74"><name pos:start="27:27" pos:end="27:29">MIN</name><argument_list pos:start="27:30" pos:end="27:74">(<argument pos:start="27:31" pos:end="27:40"><expr pos:start="27:31" pos:end="27:40"><name pos:start="27:31" pos:end="27:40">nb_sectors</name></expr></argument>, <argument pos:start="27:43" pos:end="27:73"><expr pos:start="27:43" pos:end="27:73"><name pos:start="27:43" pos:end="27:64">BITS_PER_BITMAP_SECTOR</name> <operator pos:start="27:66" pos:end="27:66">-</operator> <name pos:start="27:68" pos:end="27:73">bitnum</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="31:9" pos:end="31:68"><expr pos:start="31:9" pos:end="31:67"><name pos:start="31:9" pos:end="31:11">ret</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <call pos:start="31:15" pos:end="31:67"><name pos:start="31:15" pos:end="31:24">bdrv_pread</name><argument_list pos:start="31:25" pos:end="31:67">(<argument pos:start="31:26" pos:end="31:33"><expr pos:start="31:26" pos:end="31:33"><name pos:start="31:26" pos:end="31:33"><name pos:start="31:26" pos:end="31:27">bs</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:33">file</name></name></expr></argument>, <argument pos:start="31:36" pos:end="31:41"><expr pos:start="31:36" pos:end="31:41"><name pos:start="31:36" pos:end="31:41">offset</name></expr></argument>, <argument pos:start="31:44" pos:end="31:50"><expr pos:start="31:44" pos:end="31:50"><operator pos:start="31:44" pos:end="31:44">&amp;</operator><name pos:start="31:45" pos:end="31:50">bitmap</name></expr></argument>, <argument pos:start="31:53" pos:end="31:66"><expr pos:start="31:53" pos:end="31:66"><sizeof pos:start="31:53" pos:end="31:66">sizeof<argument_list pos:start="31:59" pos:end="31:66">(<argument pos:start="31:60" pos:end="31:65"><expr pos:start="31:60" pos:end="31:65"><name pos:start="31:60" pos:end="31:65">bitmap</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="37:9"><if pos:start="33:9" pos:end="37:9">if <condition pos:start="33:12" pos:end="33:20">(<expr pos:start="33:13" pos:end="33:19"><name pos:start="33:13" pos:end="33:15">ret</name> <operator pos:start="33:17" pos:end="33:17">&lt;</operator> <literal type="number" pos:start="33:19" pos:end="33:19">0</literal></expr>)</condition> <block pos:start="33:22" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:23">

            <return pos:start="35:13" pos:end="35:23">return <expr pos:start="35:20" pos:end="35:22"><name pos:start="35:20" pos:end="35:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="41:9" pos:end="47:9"><if pos:start="41:9" pos:end="47:9">if <condition pos:start="41:12" pos:end="41:18">(<expr pos:start="41:13" pos:end="41:17"><name pos:start="41:13" pos:end="41:17">first</name></expr>)</condition> <block pos:start="41:20" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:26">

            <expr_stmt pos:start="43:13" pos:end="43:51"><expr pos:start="43:13" pos:end="43:50"><name pos:start="43:13" pos:end="43:19">changed</name> <operator pos:start="43:21" pos:end="43:21">=</operator> <call pos:start="43:23" pos:end="43:50"><name pos:start="43:23" pos:end="43:34">cow_test_bit</name><argument_list pos:start="43:35" pos:end="43:50">(<argument pos:start="43:36" pos:end="43:41"><expr pos:start="43:36" pos:end="43:41"><name pos:start="43:36" pos:end="43:41">bitnum</name></expr></argument>, <argument pos:start="43:44" pos:end="43:49"><expr pos:start="43:44" pos:end="43:49"><name pos:start="43:44" pos:end="43:49">bitmap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:26"><expr pos:start="45:13" pos:end="45:25"><name pos:start="45:13" pos:end="45:17">first</name> <operator pos:start="45:19" pos:end="45:19">=</operator> <name pos:start="45:21" pos:end="45:25">false</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="51:9" pos:end="51:69"><expr pos:start="51:9" pos:end="51:68"><name pos:start="51:9" pos:end="51:12">same</name> <operator pos:start="51:14" pos:end="51:15">+=</operator> <call pos:start="51:17" pos:end="51:68"><name pos:start="51:17" pos:end="51:31">cow_find_streak</name><argument_list pos:start="51:32" pos:end="51:68">(<argument pos:start="51:33" pos:end="51:38"><expr pos:start="51:33" pos:end="51:38"><name pos:start="51:33" pos:end="51:38">bitmap</name></expr></argument>, <argument pos:start="51:41" pos:end="51:47"><expr pos:start="51:41" pos:end="51:47"><name pos:start="51:41" pos:end="51:47">changed</name></expr></argument>, <argument pos:start="51:50" pos:end="51:55"><expr pos:start="51:50" pos:end="51:55"><name pos:start="51:50" pos:end="51:55">bitnum</name></expr></argument>, <argument pos:start="51:58" pos:end="51:67"><expr pos:start="51:58" pos:end="51:67"><name pos:start="51:58" pos:end="51:67">nb_sectors</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="55:9" pos:end="55:30"><expr pos:start="55:9" pos:end="55:29"><name pos:start="55:9" pos:end="55:14">bitnum</name> <operator pos:start="55:16" pos:end="55:17">+=</operator> <name pos:start="55:19" pos:end="55:29">sector_bits</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:34"><expr pos:start="57:9" pos:end="57:33"><name pos:start="57:9" pos:end="57:18">nb_sectors</name> <operator pos:start="57:20" pos:end="57:21">-=</operator> <name pos:start="57:23" pos:end="57:33">sector_bits</name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:35"><expr pos:start="59:9" pos:end="59:34"><name pos:start="59:9" pos:end="59:14">offset</name> <operator pos:start="59:16" pos:end="59:17">+=</operator> <name pos:start="59:19" pos:end="59:34">BDRV_SECTOR_SIZE</name></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="61:13" pos:end="61:24">(<expr pos:start="61:14" pos:end="61:23"><name pos:start="61:14" pos:end="61:23">nb_sectors</name></expr>)</condition>;</do>



    <expr_stmt pos:start="65:5" pos:end="65:21"><expr pos:start="65:5" pos:end="65:20"><operator pos:start="65:5" pos:end="65:5">*</operator><name pos:start="65:6" pos:end="65:13">num_same</name> <operator pos:start="65:15" pos:end="65:15">=</operator> <name pos:start="65:17" pos:end="65:20">same</name></expr>;</expr_stmt>

    <return pos:start="67:5" pos:end="67:19">return <expr pos:start="67:12" pos:end="67:18"><name pos:start="67:12" pos:end="67:18">changed</name></expr>;</return>

</block_content>}</block></function>
</unit>
