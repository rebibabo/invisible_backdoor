<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11738.c" pos:tabs="8"><function pos:start="1:1" pos:end="155:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">bool</name></type> <name pos:start="1:13" pos:end="1:39">vmxnet_tx_pkt_parse_headers</name><parameter_list pos:start="1:40" pos:end="1:64">(<parameter pos:start="1:41" pos:end="1:63"><decl pos:start="1:41" pos:end="1:63"><type pos:start="1:41" pos:end="1:63"><name pos:start="1:41" pos:end="1:58"><name pos:start="1:41" pos:end="1:46">struct</name> <name pos:start="1:48" pos:end="1:58">VmxnetTxPkt</name></name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="155:1">{<block_content pos:start="5:5" pos:end="153:16">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:16">iovec</name></name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:24">l2_hdr</name></decl>, <decl pos:start="5:27" pos:end="5:33"><type ref="prev" pos:start="5:5" pos:end="5:18"><modifier pos:start="5:27" pos:end="5:27">*</modifier></type><name pos:start="5:28" pos:end="5:33">l3_hdr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">size_t</name></type> <name pos:start="7:12" pos:end="7:21">bytes_read</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">size_t</name></type> <name pos:start="9:12" pos:end="9:26">full_ip6hdr_len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint16_t</name></type> <name pos:start="11:14" pos:end="11:21">l3_proto</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:16"><expr pos:start="15:5" pos:end="15:15"><call pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:10">assert</name><argument_list pos:start="15:11" pos:end="15:15">(<argument pos:start="15:12" pos:end="15:14"><expr pos:start="15:12" pos:end="15:14"><name pos:start="15:12" pos:end="15:14">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:49"><expr pos:start="19:5" pos:end="19:48"><name pos:start="19:5" pos:end="19:10">l2_hdr</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <operator pos:start="19:14" pos:end="19:14">&amp;</operator><name pos:start="19:15" pos:end="19:48"><name pos:start="19:15" pos:end="19:17">pkt</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:22">vec</name><index pos:start="19:23" pos:end="19:48">[<expr pos:start="19:24" pos:end="19:47"><name pos:start="19:24" pos:end="19:47">VMXNET_TX_PKT_L2HDR_FRAG</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:49"><expr pos:start="21:5" pos:end="21:48"><name pos:start="21:5" pos:end="21:10">l3_hdr</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <operator pos:start="21:14" pos:end="21:14">&amp;</operator><name pos:start="21:15" pos:end="21:48"><name pos:start="21:15" pos:end="21:17">pkt</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:22">vec</name><index pos:start="21:23" pos:end="21:48">[<expr pos:start="21:24" pos:end="21:47"><name pos:start="21:24" pos:end="21:47">VMXNET_TX_PKT_L3HDR_FRAG</name></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="27:48"><expr pos:start="25:5" pos:end="27:47"><name pos:start="25:5" pos:end="25:14">bytes_read</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <call pos:start="25:18" pos:end="27:47"><name pos:start="25:18" pos:end="25:27">iov_to_buf</name><argument_list pos:start="25:28" pos:end="27:47">(<argument pos:start="25:29" pos:end="25:36"><expr pos:start="25:29" pos:end="25:36"><name pos:start="25:29" pos:end="25:36"><name pos:start="25:29" pos:end="25:31">pkt</name><operator pos:start="25:32" pos:end="25:33">-&gt;</operator><name pos:start="25:34" pos:end="25:36">raw</name></name></expr></argument>, <argument pos:start="25:39" pos:end="25:52"><expr pos:start="25:39" pos:end="25:52"><name pos:start="25:39" pos:end="25:52"><name pos:start="25:39" pos:end="25:41">pkt</name><operator pos:start="25:42" pos:end="25:43">-&gt;</operator><name pos:start="25:44" pos:end="25:52">raw_frags</name></name></expr></argument>, <argument pos:start="25:55" pos:end="25:55"><expr pos:start="25:55" pos:end="25:55"><literal type="number" pos:start="25:55" pos:end="25:55">0</literal></expr></argument>, <argument pos:start="25:58" pos:end="25:73"><expr pos:start="25:58" pos:end="25:73"><name pos:start="25:58" pos:end="25:73"><name pos:start="25:58" pos:end="25:63">l2_hdr</name><operator pos:start="25:64" pos:end="25:65">-&gt;</operator><name pos:start="25:66" pos:end="25:73">iov_base</name></name></expr></argument>,

                            <argument pos:start="27:29" pos:end="27:46"><expr pos:start="27:29" pos:end="27:46"><name pos:start="27:29" pos:end="27:46">ETH_MAX_L2_HDR_LEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="39:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:40">(<expr pos:start="29:9" pos:end="29:39"><name pos:start="29:9" pos:end="29:18">bytes_read</name> <operator pos:start="29:20" pos:end="29:20">&lt;</operator> <name pos:start="29:22" pos:end="29:39">ETH_MAX_L2_HDR_LEN</name></expr>)</condition> <block pos:start="29:42" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:21">

        <expr_stmt pos:start="31:9" pos:end="31:28"><expr pos:start="31:9" pos:end="31:27"><name pos:start="31:9" pos:end="31:23"><name pos:start="31:9" pos:end="31:14">l2_hdr</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:23">iov_len</name></name> <operator pos:start="31:25" pos:end="31:25">=</operator> <literal type="number" pos:start="31:27" pos:end="31:27">0</literal></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:21">return <expr pos:start="33:16" pos:end="33:20"><name pos:start="33:16" pos:end="33:20">false</name></expr>;</return>

    </block_content>}</block></if> <else pos:start="35:7" pos:end="39:5">else <block pos:start="35:12" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:66">

        <expr_stmt pos:start="37:9" pos:end="37:66"><expr pos:start="37:9" pos:end="37:65"><name pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:14">l2_hdr</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:23">iov_len</name></name> <operator pos:start="37:25" pos:end="37:25">=</operator> <call pos:start="37:27" pos:end="37:65"><name pos:start="37:27" pos:end="37:47">eth_get_l2_hdr_length</name><argument_list pos:start="37:48" pos:end="37:65">(<argument pos:start="37:49" pos:end="37:64"><expr pos:start="37:49" pos:end="37:64"><name pos:start="37:49" pos:end="37:64"><name pos:start="37:49" pos:end="37:54">l2_hdr</name><operator pos:start="37:55" pos:end="37:56">-&gt;</operator><name pos:start="37:57" pos:end="37:64">iov_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:67"><expr pos:start="43:5" pos:end="43:66"><name pos:start="43:5" pos:end="43:12">l3_proto</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <call pos:start="43:16" pos:end="43:66"><name pos:start="43:16" pos:end="43:31">eth_get_l3_proto</name><argument_list pos:start="43:32" pos:end="43:66">(<argument pos:start="43:33" pos:end="43:48"><expr pos:start="43:33" pos:end="43:48"><name pos:start="43:33" pos:end="43:48"><name pos:start="43:33" pos:end="43:38">l2_hdr</name><operator pos:start="43:39" pos:end="43:40">-&gt;</operator><name pos:start="43:41" pos:end="43:48">iov_base</name></name></expr></argument>, <argument pos:start="43:51" pos:end="43:65"><expr pos:start="43:51" pos:end="43:65"><name pos:start="43:51" pos:end="43:65"><name pos:start="43:51" pos:end="43:56">l2_hdr</name><operator pos:start="43:57" pos:end="43:58">-&gt;</operator><name pos:start="43:59" pos:end="43:65">iov_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="47:5" pos:end="145:5">switch <condition pos:start="47:12" pos:end="47:21">(<expr pos:start="47:13" pos:end="47:20"><name pos:start="47:13" pos:end="47:20">l3_proto</name></expr>)</condition> <block pos:start="47:23" pos:end="145:5">{<block_content pos:start="49:5" pos:end="143:14">

    <case pos:start="49:5" pos:end="49:18">case <expr pos:start="49:10" pos:end="49:17"><name pos:start="49:10" pos:end="49:17">ETH_P_IP</name></expr>:</case>

        <expr_stmt pos:start="51:9" pos:end="51:57"><expr pos:start="51:9" pos:end="51:56"><name pos:start="51:9" pos:end="51:24"><name pos:start="51:9" pos:end="51:14">l3_hdr</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:24">iov_base</name></name> <operator pos:start="51:26" pos:end="51:26">=</operator> <call pos:start="51:28" pos:end="51:56"><name pos:start="51:28" pos:end="51:35">g_malloc</name><argument_list pos:start="51:36" pos:end="51:56">(<argument pos:start="51:37" pos:end="51:55"><expr pos:start="51:37" pos:end="51:55"><name pos:start="51:37" pos:end="51:55">ETH_MAX_IP4_HDR_LEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="55:9" pos:end="57:76"><expr pos:start="55:9" pos:end="57:75"><name pos:start="55:9" pos:end="55:18">bytes_read</name> <operator pos:start="55:20" pos:end="55:20">=</operator> <call pos:start="55:22" pos:end="57:75"><name pos:start="55:22" pos:end="55:31">iov_to_buf</name><argument_list pos:start="55:32" pos:end="57:75">(<argument pos:start="55:33" pos:end="55:40"><expr pos:start="55:33" pos:end="55:40"><name pos:start="55:33" pos:end="55:40"><name pos:start="55:33" pos:end="55:35">pkt</name><operator pos:start="55:36" pos:end="55:37">-&gt;</operator><name pos:start="55:38" pos:end="55:40">raw</name></name></expr></argument>, <argument pos:start="55:43" pos:end="55:56"><expr pos:start="55:43" pos:end="55:56"><name pos:start="55:43" pos:end="55:56"><name pos:start="55:43" pos:end="55:45">pkt</name><operator pos:start="55:46" pos:end="55:47">-&gt;</operator><name pos:start="55:48" pos:end="55:56">raw_frags</name></name></expr></argument>, <argument pos:start="55:59" pos:end="55:73"><expr pos:start="55:59" pos:end="55:73"><name pos:start="55:59" pos:end="55:73"><name pos:start="55:59" pos:end="55:64">l2_hdr</name><operator pos:start="55:65" pos:end="55:66">-&gt;</operator><name pos:start="55:67" pos:end="55:73">iov_len</name></name></expr></argument>,

                                <argument pos:start="57:33" pos:end="57:48"><expr pos:start="57:33" pos:end="57:48"><name pos:start="57:33" pos:end="57:48"><name pos:start="57:33" pos:end="57:38">l3_hdr</name><operator pos:start="57:39" pos:end="57:40">-&gt;</operator><name pos:start="57:41" pos:end="57:48">iov_base</name></name></expr></argument>, <argument pos:start="57:51" pos:end="57:74"><expr pos:start="57:51" pos:end="57:74"><sizeof pos:start="57:51" pos:end="57:74">sizeof<argument_list pos:start="57:57" pos:end="57:74">(<argument pos:start="57:58" pos:end="57:73"><expr pos:start="57:58" pos:end="57:73">struct <name pos:start="57:65" pos:end="57:73">ip_header</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="61:9" pos:end="67:9"><if pos:start="61:9" pos:end="67:9">if <condition pos:start="61:12" pos:end="61:50">(<expr pos:start="61:13" pos:end="61:49"><name pos:start="61:13" pos:end="61:22">bytes_read</name> <operator pos:start="61:24" pos:end="61:24">&lt;</operator> <sizeof pos:start="61:26" pos:end="61:49">sizeof<argument_list pos:start="61:32" pos:end="61:49">(<argument pos:start="61:33" pos:end="61:48"><expr pos:start="61:33" pos:end="61:48">struct <name pos:start="61:40" pos:end="61:48">ip_header</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="61:52" pos:end="67:9">{<block_content pos:start="63:13" pos:end="65:25">

            <expr_stmt pos:start="63:13" pos:end="63:32"><expr pos:start="63:13" pos:end="63:31"><name pos:start="63:13" pos:end="63:27"><name pos:start="63:13" pos:end="63:18">l3_hdr</name><operator pos:start="63:19" pos:end="63:20">-&gt;</operator><name pos:start="63:21" pos:end="63:27">iov_len</name></name> <operator pos:start="63:29" pos:end="63:29">=</operator> <literal type="number" pos:start="63:31" pos:end="63:31">0</literal></expr>;</expr_stmt>

            <return pos:start="65:13" pos:end="65:25">return <expr pos:start="65:20" pos:end="65:24"><name pos:start="65:20" pos:end="65:24">false</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="71:9" pos:end="71:59"><expr pos:start="71:9" pos:end="71:58"><name pos:start="71:9" pos:end="71:23"><name pos:start="71:9" pos:end="71:14">l3_hdr</name><operator pos:start="71:15" pos:end="71:16">-&gt;</operator><name pos:start="71:17" pos:end="71:23">iov_len</name></name> <operator pos:start="71:25" pos:end="71:25">=</operator> <call pos:start="71:27" pos:end="71:58"><name pos:start="71:27" pos:end="71:40">IP_HDR_GET_LEN</name><argument_list pos:start="71:41" pos:end="71:58">(<argument pos:start="71:42" pos:end="71:57"><expr pos:start="71:42" pos:end="71:57"><name pos:start="71:42" pos:end="71:57"><name pos:start="71:42" pos:end="71:47">l3_hdr</name><operator pos:start="71:48" pos:end="71:49">-&gt;</operator><name pos:start="71:50" pos:end="71:57">iov_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:69"><expr pos:start="73:9" pos:end="73:68"><name pos:start="73:9" pos:end="73:20"><name pos:start="73:9" pos:end="73:11">pkt</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:20">l4proto</name></name> <operator pos:start="73:22" pos:end="73:22">=</operator> <operator pos:start="73:24" pos:end="73:24">(</operator><operator pos:start="73:25" pos:end="73:25">(</operator>struct <name pos:start="73:33" pos:end="73:41">ip_header</name> <operator pos:start="73:43" pos:end="73:43">*</operator><operator pos:start="73:44" pos:end="73:44">)</operator> <name pos:start="73:46" pos:end="73:61"><name pos:start="73:46" pos:end="73:51">l3_hdr</name><operator pos:start="73:52" pos:end="73:53">-&gt;</operator><name pos:start="73:54" pos:end="73:61">iov_base</name></name><operator pos:start="73:62" pos:end="73:62">)</operator><operator pos:start="73:63" pos:end="73:64">-&gt;</operator><name pos:start="73:65" pos:end="73:68">ip_p</name></expr>;</expr_stmt>



        <comment type="block" pos:start="77:9" pos:end="77:44">/* copy optional IPv4 header data */</comment>

        <expr_stmt pos:start="79:9" pos:end="85:76"><expr pos:start="79:9" pos:end="85:75"><name pos:start="79:9" pos:end="79:18">bytes_read</name> <operator pos:start="79:20" pos:end="79:20">=</operator> <call pos:start="79:22" pos:end="85:75"><name pos:start="79:22" pos:end="79:31">iov_to_buf</name><argument_list pos:start="79:32" pos:end="85:75">(<argument pos:start="79:33" pos:end="79:40"><expr pos:start="79:33" pos:end="79:40"><name pos:start="79:33" pos:end="79:40"><name pos:start="79:33" pos:end="79:35">pkt</name><operator pos:start="79:36" pos:end="79:37">-&gt;</operator><name pos:start="79:38" pos:end="79:40">raw</name></name></expr></argument>, <argument pos:start="79:43" pos:end="79:56"><expr pos:start="79:43" pos:end="79:56"><name pos:start="79:43" pos:end="79:56"><name pos:start="79:43" pos:end="79:45">pkt</name><operator pos:start="79:46" pos:end="79:47">-&gt;</operator><name pos:start="79:48" pos:end="79:56">raw_frags</name></name></expr></argument>,

                                <argument pos:start="81:33" pos:end="81:74"><expr pos:start="81:33" pos:end="81:74"><name pos:start="81:33" pos:end="81:47"><name pos:start="81:33" pos:end="81:38">l2_hdr</name><operator pos:start="81:39" pos:end="81:40">-&gt;</operator><name pos:start="81:41" pos:end="81:47">iov_len</name></name> <operator pos:start="81:49" pos:end="81:49">+</operator> <sizeof pos:start="81:51" pos:end="81:74">sizeof<argument_list pos:start="81:57" pos:end="81:74">(<argument pos:start="81:58" pos:end="81:73"><expr pos:start="81:58" pos:end="81:73">struct <name pos:start="81:65" pos:end="81:73">ip_header</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                                <argument pos:start="83:33" pos:end="83:75"><expr pos:start="83:33" pos:end="83:75"><name pos:start="83:33" pos:end="83:48"><name pos:start="83:33" pos:end="83:38">l3_hdr</name><operator pos:start="83:39" pos:end="83:40">-&gt;</operator><name pos:start="83:41" pos:end="83:48">iov_base</name></name> <operator pos:start="83:50" pos:end="83:50">+</operator> <sizeof pos:start="83:52" pos:end="83:75">sizeof<argument_list pos:start="83:58" pos:end="83:75">(<argument pos:start="83:59" pos:end="83:74"><expr pos:start="83:59" pos:end="83:74">struct <name pos:start="83:66" pos:end="83:74">ip_header</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                                <argument pos:start="85:33" pos:end="85:74"><expr pos:start="85:33" pos:end="85:74"><name pos:start="85:33" pos:end="85:47"><name pos:start="85:33" pos:end="85:38">l3_hdr</name><operator pos:start="85:39" pos:end="85:40">-&gt;</operator><name pos:start="85:41" pos:end="85:47">iov_len</name></name> <operator pos:start="85:49" pos:end="85:49">-</operator> <sizeof pos:start="85:51" pos:end="85:74">sizeof<argument_list pos:start="85:57" pos:end="85:74">(<argument pos:start="85:58" pos:end="85:73"><expr pos:start="85:58" pos:end="85:73">struct <name pos:start="85:65" pos:end="85:73">ip_header</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="87:9" pos:end="93:9"><if pos:start="87:9" pos:end="93:9">if <condition pos:start="87:12" pos:end="87:68">(<expr pos:start="87:13" pos:end="87:67"><name pos:start="87:13" pos:end="87:22">bytes_read</name> <operator pos:start="87:24" pos:end="87:24">&lt;</operator> <name pos:start="87:26" pos:end="87:40"><name pos:start="87:26" pos:end="87:31">l3_hdr</name><operator pos:start="87:32" pos:end="87:33">-&gt;</operator><name pos:start="87:34" pos:end="87:40">iov_len</name></name> <operator pos:start="87:42" pos:end="87:42">-</operator> <sizeof pos:start="87:44" pos:end="87:67">sizeof<argument_list pos:start="87:50" pos:end="87:67">(<argument pos:start="87:51" pos:end="87:66"><expr pos:start="87:51" pos:end="87:66">struct <name pos:start="87:58" pos:end="87:66">ip_header</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="87:70" pos:end="93:9">{<block_content pos:start="89:13" pos:end="91:25">

            <expr_stmt pos:start="89:13" pos:end="89:32"><expr pos:start="89:13" pos:end="89:31"><name pos:start="89:13" pos:end="89:27"><name pos:start="89:13" pos:end="89:18">l3_hdr</name><operator pos:start="89:19" pos:end="89:20">-&gt;</operator><name pos:start="89:21" pos:end="89:27">iov_len</name></name> <operator pos:start="89:29" pos:end="89:29">=</operator> <literal type="number" pos:start="89:31" pos:end="89:31">0</literal></expr>;</expr_stmt>

            <return pos:start="91:13" pos:end="91:25">return <expr pos:start="91:20" pos:end="91:24"><name pos:start="91:20" pos:end="91:24">false</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="95:9" pos:end="95:14">break;</break>



    <case pos:start="99:5" pos:end="99:20">case <expr pos:start="99:10" pos:end="99:19"><name pos:start="99:10" pos:end="99:19">ETH_P_IPV6</name></expr>:</case>

        <if_stmt pos:start="101:9" pos:end="109:9"><if pos:start="101:9" pos:end="109:9">if <condition pos:start="101:12" pos:end="103:64">(<expr pos:start="101:13" pos:end="103:63"><operator pos:start="101:13" pos:end="101:13">!</operator><call pos:start="101:14" pos:end="103:63"><name pos:start="101:14" pos:end="101:31">eth_parse_ipv6_hdr</name><argument_list pos:start="101:32" pos:end="103:63">(<argument pos:start="101:33" pos:end="101:40"><expr pos:start="101:33" pos:end="101:40"><name pos:start="101:33" pos:end="101:40"><name pos:start="101:33" pos:end="101:35">pkt</name><operator pos:start="101:36" pos:end="101:37">-&gt;</operator><name pos:start="101:38" pos:end="101:40">raw</name></name></expr></argument>, <argument pos:start="101:43" pos:end="101:56"><expr pos:start="101:43" pos:end="101:56"><name pos:start="101:43" pos:end="101:56"><name pos:start="101:43" pos:end="101:45">pkt</name><operator pos:start="101:46" pos:end="101:47">-&gt;</operator><name pos:start="101:48" pos:end="101:56">raw_frags</name></name></expr></argument>, <argument pos:start="101:59" pos:end="101:73"><expr pos:start="101:59" pos:end="101:73"><name pos:start="101:59" pos:end="101:73"><name pos:start="101:59" pos:end="101:64">l2_hdr</name><operator pos:start="101:65" pos:end="101:66">-&gt;</operator><name pos:start="101:67" pos:end="101:73">iov_len</name></name></expr></argument>,

                               <argument pos:start="103:32" pos:end="103:44"><expr pos:start="103:32" pos:end="103:44"><operator pos:start="103:32" pos:end="103:32">&amp;</operator><name pos:start="103:33" pos:end="103:44"><name pos:start="103:33" pos:end="103:35">pkt</name><operator pos:start="103:36" pos:end="103:37">-&gt;</operator><name pos:start="103:38" pos:end="103:44">l4proto</name></name></expr></argument>, <argument pos:start="103:47" pos:end="103:62"><expr pos:start="103:47" pos:end="103:62"><operator pos:start="103:47" pos:end="103:47">&amp;</operator><name pos:start="103:48" pos:end="103:62">full_ip6hdr_len</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="103:66" pos:end="109:9">{<block_content pos:start="105:13" pos:end="107:25">

            <expr_stmt pos:start="105:13" pos:end="105:32"><expr pos:start="105:13" pos:end="105:31"><name pos:start="105:13" pos:end="105:27"><name pos:start="105:13" pos:end="105:18">l3_hdr</name><operator pos:start="105:19" pos:end="105:20">-&gt;</operator><name pos:start="105:21" pos:end="105:27">iov_len</name></name> <operator pos:start="105:29" pos:end="105:29">=</operator> <literal type="number" pos:start="105:31" pos:end="105:31">0</literal></expr>;</expr_stmt>

            <return pos:start="107:13" pos:end="107:25">return <expr pos:start="107:20" pos:end="107:24"><name pos:start="107:20" pos:end="107:24">false</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="113:9" pos:end="113:53"><expr pos:start="113:9" pos:end="113:52"><name pos:start="113:9" pos:end="113:24"><name pos:start="113:9" pos:end="113:14">l3_hdr</name><operator pos:start="113:15" pos:end="113:16">-&gt;</operator><name pos:start="113:17" pos:end="113:24">iov_base</name></name> <operator pos:start="113:26" pos:end="113:26">=</operator> <call pos:start="113:28" pos:end="113:52"><name pos:start="113:28" pos:end="113:35">g_malloc</name><argument_list pos:start="113:36" pos:end="113:52">(<argument pos:start="113:37" pos:end="113:51"><expr pos:start="113:37" pos:end="113:51"><name pos:start="113:37" pos:end="113:51">full_ip6hdr_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="117:9" pos:end="119:67"><expr pos:start="117:9" pos:end="119:66"><name pos:start="117:9" pos:end="117:18">bytes_read</name> <operator pos:start="117:20" pos:end="117:20">=</operator> <call pos:start="117:22" pos:end="119:66"><name pos:start="117:22" pos:end="117:31">iov_to_buf</name><argument_list pos:start="117:32" pos:end="119:66">(<argument pos:start="117:33" pos:end="117:40"><expr pos:start="117:33" pos:end="117:40"><name pos:start="117:33" pos:end="117:40"><name pos:start="117:33" pos:end="117:35">pkt</name><operator pos:start="117:36" pos:end="117:37">-&gt;</operator><name pos:start="117:38" pos:end="117:40">raw</name></name></expr></argument>, <argument pos:start="117:43" pos:end="117:56"><expr pos:start="117:43" pos:end="117:56"><name pos:start="117:43" pos:end="117:56"><name pos:start="117:43" pos:end="117:45">pkt</name><operator pos:start="117:46" pos:end="117:47">-&gt;</operator><name pos:start="117:48" pos:end="117:56">raw_frags</name></name></expr></argument>, <argument pos:start="117:59" pos:end="117:73"><expr pos:start="117:59" pos:end="117:73"><name pos:start="117:59" pos:end="117:73"><name pos:start="117:59" pos:end="117:64">l2_hdr</name><operator pos:start="117:65" pos:end="117:66">-&gt;</operator><name pos:start="117:67" pos:end="117:73">iov_len</name></name></expr></argument>,

                                <argument pos:start="119:33" pos:end="119:48"><expr pos:start="119:33" pos:end="119:48"><name pos:start="119:33" pos:end="119:48"><name pos:start="119:33" pos:end="119:38">l3_hdr</name><operator pos:start="119:39" pos:end="119:40">-&gt;</operator><name pos:start="119:41" pos:end="119:48">iov_base</name></name></expr></argument>, <argument pos:start="119:51" pos:end="119:65"><expr pos:start="119:51" pos:end="119:65"><name pos:start="119:51" pos:end="119:65">full_ip6hdr_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="123:9" pos:end="133:9"><if pos:start="123:9" pos:end="129:9">if <condition pos:start="123:12" pos:end="123:41">(<expr pos:start="123:13" pos:end="123:40"><name pos:start="123:13" pos:end="123:22">bytes_read</name> <operator pos:start="123:24" pos:end="123:24">&lt;</operator> <name pos:start="123:26" pos:end="123:40">full_ip6hdr_len</name></expr>)</condition> <block pos:start="123:43" pos:end="129:9">{<block_content pos:start="125:13" pos:end="127:25">

            <expr_stmt pos:start="125:13" pos:end="125:32"><expr pos:start="125:13" pos:end="125:31"><name pos:start="125:13" pos:end="125:27"><name pos:start="125:13" pos:end="125:18">l3_hdr</name><operator pos:start="125:19" pos:end="125:20">-&gt;</operator><name pos:start="125:21" pos:end="125:27">iov_len</name></name> <operator pos:start="125:29" pos:end="125:29">=</operator> <literal type="number" pos:start="125:31" pos:end="125:31">0</literal></expr>;</expr_stmt>

            <return pos:start="127:13" pos:end="127:25">return <expr pos:start="127:20" pos:end="127:24"><name pos:start="127:20" pos:end="127:24">false</name></expr>;</return>

        </block_content>}</block></if> <else pos:start="129:11" pos:end="133:9">else <block pos:start="129:16" pos:end="133:9">{<block_content pos:start="131:13" pos:end="131:46">

            <expr_stmt pos:start="131:13" pos:end="131:46"><expr pos:start="131:13" pos:end="131:45"><name pos:start="131:13" pos:end="131:27"><name pos:start="131:13" pos:end="131:18">l3_hdr</name><operator pos:start="131:19" pos:end="131:20">-&gt;</operator><name pos:start="131:21" pos:end="131:27">iov_len</name></name> <operator pos:start="131:29" pos:end="131:29">=</operator> <name pos:start="131:31" pos:end="131:45">full_ip6hdr_len</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="135:9" pos:end="135:14">break;</break>



    <default pos:start="139:5" pos:end="139:12">default:</default>

        <expr_stmt pos:start="141:9" pos:end="141:28"><expr pos:start="141:9" pos:end="141:27"><name pos:start="141:9" pos:end="141:23"><name pos:start="141:9" pos:end="141:14">l3_hdr</name><operator pos:start="141:15" pos:end="141:16">-&gt;</operator><name pos:start="141:17" pos:end="141:23">iov_len</name></name> <operator pos:start="141:25" pos:end="141:25">=</operator> <literal type="number" pos:start="141:27" pos:end="141:27">0</literal></expr>;</expr_stmt>

        <break pos:start="143:9" pos:end="143:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="149:5" pos:end="149:41"><expr pos:start="149:5" pos:end="149:40"><call pos:start="149:5" pos:end="149:40"><name pos:start="149:5" pos:end="149:35">vmxnet_tx_pkt_calculate_hdr_len</name><argument_list pos:start="149:36" pos:end="149:40">(<argument pos:start="149:37" pos:end="149:39"><expr pos:start="149:37" pos:end="149:39"><name pos:start="149:37" pos:end="149:39">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:61"><expr pos:start="151:5" pos:end="151:60"><name pos:start="151:5" pos:end="151:20"><name pos:start="151:5" pos:end="151:7">pkt</name><operator pos:start="151:8" pos:end="151:9">-&gt;</operator><name pos:start="151:10" pos:end="151:20">packet_type</name></name> <operator pos:start="151:22" pos:end="151:22">=</operator> <call pos:start="151:24" pos:end="151:60"><name pos:start="151:24" pos:end="151:42">get_eth_packet_type</name><argument_list pos:start="151:43" pos:end="151:60">(<argument pos:start="151:44" pos:end="151:59"><expr pos:start="151:44" pos:end="151:59"><name pos:start="151:44" pos:end="151:59"><name pos:start="151:44" pos:end="151:49">l2_hdr</name><operator pos:start="151:50" pos:end="151:51">-&gt;</operator><name pos:start="151:52" pos:end="151:59">iov_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="153:5" pos:end="153:16">return <expr pos:start="153:12" pos:end="153:15"><name pos:start="153:12" pos:end="153:15">true</name></expr>;</return>

</block_content>}</block></function>
</unit>
