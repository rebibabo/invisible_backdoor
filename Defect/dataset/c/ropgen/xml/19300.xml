<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19300.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">pxb_dev_initfn</name><parameter_list pos:start="1:26" pos:end="1:41">(<parameter pos:start="1:27" pos:end="1:40"><decl pos:start="1:27" pos:end="1:40"><type pos:start="1:27" pos:end="1:37"><name pos:start="1:27" pos:end="1:35">PCIDevice</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="91:1">{<block_content pos:start="5:5" pos:end="89:13">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:10">PXBDev</name> <modifier pos:start="5:12" pos:end="5:12">*</modifier></type><name pos:start="5:13" pos:end="5:15">pxb</name> <init pos:start="5:17" pos:end="5:30">= <expr pos:start="5:19" pos:end="5:30"><call pos:start="5:19" pos:end="5:30"><name pos:start="5:19" pos:end="5:25">PXB_DEV</name><argument_list pos:start="5:26" pos:end="5:30">(<argument pos:start="5:27" pos:end="5:29"><expr pos:start="5:27" pos:end="5:29"><name pos:start="5:27" pos:end="5:29">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">DeviceState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">ds</name></decl>, <decl pos:start="7:22" pos:end="7:25"><type ref="prev" pos:start="7:5" pos:end="7:17"><modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:25">bds</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:10">PCIBus</name> <modifier pos:start="9:12" pos:end="9:12">*</modifier></type><name pos:start="9:13" pos:end="9:15">bus</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:31"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:24">dev_name</name> <init pos:start="11:26" pos:end="11:31">= <expr pos:start="11:28" pos:end="11:31"><name pos:start="11:28" pos:end="11:31">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="23:5"><if pos:start="15:5" pos:end="23:5">if <condition pos:start="15:8" pos:end="17:40">(<expr pos:start="15:9" pos:end="17:39"><name pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:11">pxb</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:22">numa_node</name></name> <operator pos:start="15:24" pos:end="15:25">!=</operator> <name pos:start="15:27" pos:end="15:46">NUMA_NODE_UNASSIGNED</name> <operator pos:start="15:48" pos:end="15:49">&amp;&amp;</operator>

        <name pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:11">pxb</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:22">numa_node</name></name> <operator pos:start="17:24" pos:end="17:25">&gt;=</operator> <name pos:start="17:27" pos:end="17:39">nb_numa_nodes</name></expr>)</condition> <block pos:start="17:42" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:23">

        <expr_stmt pos:start="19:9" pos:end="19:62"><expr pos:start="19:9" pos:end="19:61"><call pos:start="19:9" pos:end="19:61"><name pos:start="19:9" pos:end="19:20">error_report</name><argument_list pos:start="19:21" pos:end="19:61">(<argument pos:start="19:22" pos:end="19:44"><expr pos:start="19:22" pos:end="19:44"><literal type="string" pos:start="19:22" pos:end="19:44">"Illegal numa node %d."</literal></expr></argument>, <argument pos:start="19:47" pos:end="19:60"><expr pos:start="19:47" pos:end="19:60"><name pos:start="19:47" pos:end="19:60"><name pos:start="19:47" pos:end="19:49">pxb</name><operator pos:start="19:50" pos:end="19:51">-&gt;</operator><name pos:start="19:52" pos:end="19:60">numa_node</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:23">return <expr pos:start="21:16" pos:end="21:22"><operator pos:start="21:16" pos:end="21:16">-</operator><name pos:start="21:17" pos:end="21:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:38">(<expr pos:start="27:9" pos:end="27:37"><name pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:11">dev</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:17">qdev</name><operator pos:start="27:18" pos:end="27:18">.</operator><name pos:start="27:19" pos:end="27:20">id</name></name> <operator pos:start="27:22" pos:end="27:23">&amp;&amp;</operator> <operator pos:start="27:25" pos:end="27:25">*</operator><name pos:start="27:26" pos:end="27:37"><name pos:start="27:26" pos:end="27:28">dev</name><operator pos:start="27:29" pos:end="27:30">-&gt;</operator><name pos:start="27:31" pos:end="27:34">qdev</name><operator pos:start="27:35" pos:end="27:35">.</operator><name pos:start="27:36" pos:end="27:37">id</name></name></expr>)</condition> <block pos:start="27:40" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:32">

        <expr_stmt pos:start="29:9" pos:end="29:32"><expr pos:start="29:9" pos:end="29:31"><name pos:start="29:9" pos:end="29:16">dev_name</name> <operator pos:start="29:18" pos:end="29:18">=</operator> <name pos:start="29:20" pos:end="29:31"><name pos:start="29:20" pos:end="29:22">dev</name><operator pos:start="29:23" pos:end="29:24">-&gt;</operator><name pos:start="29:25" pos:end="29:28">qdev</name><operator pos:start="29:29" pos:end="29:29">.</operator><name pos:start="29:30" pos:end="29:31">id</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:42"><expr pos:start="35:5" pos:end="35:41"><name pos:start="35:5" pos:end="35:6">ds</name> <operator pos:start="35:8" pos:end="35:8">=</operator> <call pos:start="35:10" pos:end="35:41"><name pos:start="35:10" pos:end="35:20">qdev_create</name><argument_list pos:start="35:21" pos:end="35:41">(<argument pos:start="35:22" pos:end="35:25"><expr pos:start="35:22" pos:end="35:25"><name pos:start="35:22" pos:end="35:25">NULL</name></expr></argument>, <argument pos:start="35:28" pos:end="35:40"><expr pos:start="35:28" pos:end="35:40"><name pos:start="35:28" pos:end="35:40">TYPE_PXB_HOST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:71"><expr pos:start="37:5" pos:end="37:70"><name pos:start="37:5" pos:end="37:7">bus</name> <operator pos:start="37:9" pos:end="37:9">=</operator> <call pos:start="37:11" pos:end="37:70"><name pos:start="37:11" pos:end="37:21">pci_bus_new</name><argument_list pos:start="37:22" pos:end="37:70">(<argument pos:start="37:23" pos:end="37:24"><expr pos:start="37:23" pos:end="37:24"><name pos:start="37:23" pos:end="37:24">ds</name></expr></argument>, <argument pos:start="37:27" pos:end="37:40"><expr pos:start="37:27" pos:end="37:40"><literal type="string" pos:start="37:27" pos:end="37:40">"pxb-internal"</literal></expr></argument>, <argument pos:start="37:43" pos:end="37:46"><expr pos:start="37:43" pos:end="37:46"><name pos:start="37:43" pos:end="37:46">NULL</name></expr></argument>, <argument pos:start="37:49" pos:end="37:52"><expr pos:start="37:49" pos:end="37:52"><name pos:start="37:49" pos:end="37:52">NULL</name></expr></argument>, <argument pos:start="37:55" pos:end="37:55"><expr pos:start="37:55" pos:end="37:55"><literal type="number" pos:start="37:55" pos:end="37:55">0</literal></expr></argument>, <argument pos:start="37:58" pos:end="37:69"><expr pos:start="37:58" pos:end="37:69"><name pos:start="37:58" pos:end="37:69">TYPE_PXB_BUS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:26"><expr pos:start="41:5" pos:end="41:25"><name pos:start="41:5" pos:end="41:19"><name pos:start="41:5" pos:end="41:7">bus</name><operator pos:start="41:8" pos:end="41:9">-&gt;</operator><name pos:start="41:10" pos:end="41:19">parent_dev</name></name> <operator pos:start="41:21" pos:end="41:21">=</operator> <name pos:start="41:23" pos:end="41:25">dev</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:57"><expr pos:start="43:5" pos:end="43:56"><name pos:start="43:5" pos:end="43:26"><name pos:start="43:5" pos:end="43:7">bus</name><operator pos:start="43:8" pos:end="43:9">-&gt;</operator><name pos:start="43:10" pos:end="43:26">address_space_mem</name></name> <operator pos:start="43:28" pos:end="43:28">=</operator> <name pos:start="43:30" pos:end="43:56"><name pos:start="43:30" pos:end="43:32">dev</name><operator pos:start="43:33" pos:end="43:34">-&gt;</operator><name pos:start="43:35" pos:end="43:37">bus</name><operator pos:start="43:38" pos:end="43:39">-&gt;</operator><name pos:start="43:40" pos:end="43:56">address_space_mem</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:55"><expr pos:start="45:5" pos:end="45:54"><name pos:start="45:5" pos:end="45:25"><name pos:start="45:5" pos:end="45:7">bus</name><operator pos:start="45:8" pos:end="45:9">-&gt;</operator><name pos:start="45:10" pos:end="45:25">address_space_io</name></name> <operator pos:start="45:27" pos:end="45:27">=</operator> <name pos:start="45:29" pos:end="45:54"><name pos:start="45:29" pos:end="45:31">dev</name><operator pos:start="45:32" pos:end="45:33">-&gt;</operator><name pos:start="45:34" pos:end="45:36">bus</name><operator pos:start="45:37" pos:end="45:38">-&gt;</operator><name pos:start="45:39" pos:end="45:54">address_space_io</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:34"><expr pos:start="47:5" pos:end="47:33"><name pos:start="47:5" pos:end="47:16"><name pos:start="47:5" pos:end="47:7">bus</name><operator pos:start="47:8" pos:end="47:9">-&gt;</operator><name pos:start="47:10" pos:end="47:16">map_irq</name></name> <operator pos:start="47:18" pos:end="47:18">=</operator> <name pos:start="47:20" pos:end="47:33">pxb_map_irq_fn</name></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:46"><expr pos:start="51:5" pos:end="51:45"><name pos:start="51:5" pos:end="51:7">bds</name> <operator pos:start="51:9" pos:end="51:9">=</operator> <call pos:start="51:11" pos:end="51:45"><name pos:start="51:11" pos:end="51:21">qdev_create</name><argument_list pos:start="51:22" pos:end="51:45">(<argument pos:start="51:23" pos:end="51:30"><expr pos:start="51:23" pos:end="51:30"><call pos:start="51:23" pos:end="51:30"><name pos:start="51:23" pos:end="51:25">BUS</name><argument_list pos:start="51:26" pos:end="51:30">(<argument pos:start="51:27" pos:end="51:29"><expr pos:start="51:27" pos:end="51:29"><name pos:start="51:27" pos:end="51:29">bus</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="51:33" pos:end="51:44"><expr pos:start="51:33" pos:end="51:44"><literal type="string" pos:start="51:33" pos:end="51:44">"pci-bridge"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:23"><expr pos:start="53:5" pos:end="53:22"><name pos:start="53:5" pos:end="53:11"><name pos:start="53:5" pos:end="53:7">bds</name><operator pos:start="53:8" pos:end="53:9">-&gt;</operator><name pos:start="53:10" pos:end="53:11">id</name></name> <operator pos:start="53:13" pos:end="53:13">=</operator> <name pos:start="53:15" pos:end="53:22">dev_name</name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:74"><expr pos:start="55:5" pos:end="55:73"><call pos:start="55:5" pos:end="55:73"><name pos:start="55:5" pos:end="55:23">qdev_prop_set_uint8</name><argument_list pos:start="55:24" pos:end="55:73">(<argument pos:start="55:25" pos:end="55:27"><expr pos:start="55:25" pos:end="55:27"><name pos:start="55:25" pos:end="55:27">bds</name></expr></argument>, <argument pos:start="55:30" pos:end="55:59"><expr pos:start="55:30" pos:end="55:59"><name pos:start="55:30" pos:end="55:59">PCI_BRIDGE_DEV_PROP_CHASSIS_NR</name></expr></argument>, <argument pos:start="55:62" pos:end="55:72"><expr pos:start="55:62" pos:end="55:72"><name pos:start="55:62" pos:end="55:72"><name pos:start="55:62" pos:end="55:64">pxb</name><operator pos:start="55:65" pos:end="55:66">-&gt;</operator><name pos:start="55:67" pos:end="55:72">bus_nr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:60"><expr pos:start="57:5" pos:end="57:59"><call pos:start="57:5" pos:end="57:59"><name pos:start="57:5" pos:end="57:21">qdev_prop_set_bit</name><argument_list pos:start="57:22" pos:end="57:59">(<argument pos:start="57:23" pos:end="57:25"><expr pos:start="57:23" pos:end="57:25"><name pos:start="57:23" pos:end="57:25">bds</name></expr></argument>, <argument pos:start="57:28" pos:end="57:51"><expr pos:start="57:28" pos:end="57:51"><name pos:start="57:28" pos:end="57:51">PCI_BRIDGE_DEV_PROP_SHPC</name></expr></argument>, <argument pos:start="57:54" pos:end="57:58"><expr pos:start="57:54" pos:end="57:58"><name pos:start="57:54" pos:end="57:58">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:35"><expr pos:start="61:5" pos:end="61:34"><call pos:start="61:5" pos:end="61:23"><name pos:start="61:5" pos:end="61:19">PCI_HOST_BRIDGE</name><argument_list pos:start="61:20" pos:end="61:23">(<argument pos:start="61:21" pos:end="61:22"><expr pos:start="61:21" pos:end="61:22"><name pos:start="61:21" pos:end="61:22">ds</name></expr></argument>)</argument_list></call><operator pos:start="61:24" pos:end="61:25">-&gt;</operator><name pos:start="61:26" pos:end="61:28">bus</name> <operator pos:start="61:30" pos:end="61:30">=</operator> <name pos:start="61:32" pos:end="61:34">bus</name></expr>;</expr_stmt>



    <if_stmt pos:start="65:5" pos:end="69:5"><if pos:start="65:5" pos:end="69:5">if <condition pos:start="65:8" pos:end="65:35">(<expr pos:start="65:9" pos:end="65:34"><call pos:start="65:9" pos:end="65:34"><name pos:start="65:9" pos:end="65:24">pxb_register_bus</name><argument_list pos:start="65:25" pos:end="65:34">(<argument pos:start="65:26" pos:end="65:28"><expr pos:start="65:26" pos:end="65:28"><name pos:start="65:26" pos:end="65:28">dev</name></expr></argument>, <argument pos:start="65:31" pos:end="65:33"><expr pos:start="65:31" pos:end="65:33"><name pos:start="65:31" pos:end="65:33">bus</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="65:37" pos:end="69:5">{<block_content pos:start="67:9" pos:end="67:23">

        <return pos:start="67:9" pos:end="67:23">return <expr pos:start="67:16" pos:end="67:22"><operator pos:start="67:16" pos:end="67:16">-</operator><name pos:start="67:17" pos:end="67:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:25"><expr pos:start="73:5" pos:end="73:24"><call pos:start="73:5" pos:end="73:24"><name pos:start="73:5" pos:end="73:20">qdev_init_nofail</name><argument_list pos:start="73:21" pos:end="73:24">(<argument pos:start="73:22" pos:end="73:23"><expr pos:start="73:22" pos:end="73:23"><name pos:start="73:22" pos:end="73:23">ds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:26"><expr pos:start="75:5" pos:end="75:25"><call pos:start="75:5" pos:end="75:25"><name pos:start="75:5" pos:end="75:20">qdev_init_nofail</name><argument_list pos:start="75:21" pos:end="75:25">(<argument pos:start="75:22" pos:end="75:24"><expr pos:start="75:22" pos:end="75:24"><name pos:start="75:22" pos:end="75:24">bds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="79:5" pos:end="81:72"><expr pos:start="79:5" pos:end="81:71"><call pos:start="79:5" pos:end="81:71"><name pos:start="79:5" pos:end="79:30">pci_word_test_and_set_mask</name><argument_list pos:start="79:31" pos:end="81:71">(<argument pos:start="79:32" pos:end="79:55"><expr pos:start="79:32" pos:end="79:55"><name pos:start="79:32" pos:end="79:42"><name pos:start="79:32" pos:end="79:34">dev</name><operator pos:start="79:35" pos:end="79:36">-&gt;</operator><name pos:start="79:37" pos:end="79:42">config</name></name> <operator pos:start="79:44" pos:end="79:44">+</operator> <name pos:start="79:46" pos:end="79:55">PCI_STATUS</name></expr></argument>,

                               <argument pos:start="81:32" pos:end="81:70"><expr pos:start="81:32" pos:end="81:70"><name pos:start="81:32" pos:end="81:47">PCI_STATUS_66MHZ</name> <operator pos:start="81:49" pos:end="81:49">|</operator> <name pos:start="81:51" pos:end="81:70">PCI_STATUS_FAST_BACK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:61"><expr pos:start="83:5" pos:end="83:60"><call pos:start="83:5" pos:end="83:60"><name pos:start="83:5" pos:end="83:24">pci_config_set_class</name><argument_list pos:start="83:25" pos:end="83:60">(<argument pos:start="83:26" pos:end="83:36"><expr pos:start="83:26" pos:end="83:36"><name pos:start="83:26" pos:end="83:36"><name pos:start="83:26" pos:end="83:28">dev</name><operator pos:start="83:29" pos:end="83:30">-&gt;</operator><name pos:start="83:31" pos:end="83:36">config</name></name></expr></argument>, <argument pos:start="83:39" pos:end="83:59"><expr pos:start="83:39" pos:end="83:59"><name pos:start="83:39" pos:end="83:59">PCI_CLASS_BRIDGE_HOST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:72"><expr pos:start="87:5" pos:end="87:71"><name pos:start="87:5" pos:end="87:16">pxb_dev_list</name> <operator pos:start="87:18" pos:end="87:18">=</operator> <call pos:start="87:20" pos:end="87:71"><name pos:start="87:20" pos:end="87:39">g_list_insert_sorted</name><argument_list pos:start="87:40" pos:end="87:71">(<argument pos:start="87:41" pos:end="87:52"><expr pos:start="87:41" pos:end="87:52"><name pos:start="87:41" pos:end="87:52">pxb_dev_list</name></expr></argument>, <argument pos:start="87:55" pos:end="87:57"><expr pos:start="87:55" pos:end="87:57"><name pos:start="87:55" pos:end="87:57">pxb</name></expr></argument>, <argument pos:start="87:60" pos:end="87:70"><expr pos:start="87:60" pos:end="87:70"><name pos:start="87:60" pos:end="87:70">pxb_compare</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="89:5" pos:end="89:13">return <expr pos:start="89:12" pos:end="89:12"><literal type="number" pos:start="89:12" pos:end="89:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
