<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9136.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">apply_unsharp</name><parameter_list pos:start="1:26" pos:end="5:65">(      <parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:39">uint8_t</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">dst</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:60"><decl pos:start="1:47" pos:end="1:60"><type pos:start="1:47" pos:end="1:60"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:60">dst_stride</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:44"><decl pos:start="3:27" pos:end="3:44"><type pos:start="3:27" pos:end="3:44"><specifier pos:start="3:27" pos:end="3:31">const</specifier> <name pos:start="3:33" pos:end="3:39">uint8_t</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:44">src</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:60"><decl pos:start="3:47" pos:end="3:60"><type pos:start="3:47" pos:end="3:60"><name pos:start="3:47" pos:end="3:49">int</name></type> <name pos:start="3:51" pos:end="3:60">src_stride</name></decl></parameter>,

                          <parameter pos:start="5:27" pos:end="5:35"><decl pos:start="5:27" pos:end="5:35"><type pos:start="5:27" pos:end="5:35"><name pos:start="5:27" pos:end="5:29">int</name></type> <name pos:start="5:31" pos:end="5:35">width</name></decl></parameter>, <parameter pos:start="5:38" pos:end="5:47"><decl pos:start="5:38" pos:end="5:47"><type pos:start="5:38" pos:end="5:47"><name pos:start="5:38" pos:end="5:40">int</name></type> <name pos:start="5:42" pos:end="5:47">height</name></decl></parameter>, <parameter pos:start="5:50" pos:end="5:64"><decl pos:start="5:50" pos:end="5:64"><type pos:start="5:50" pos:end="5:64"><name pos:start="5:50" pos:end="5:60">FilterParam</name> <modifier pos:start="5:62" pos:end="5:62">*</modifier></type><name pos:start="5:63" pos:end="5:64">fp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="103:1">{<block_content pos:start="9:5" pos:end="101:5">

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:12">uint32_t</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier><modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:17">sc</name> <init pos:start="9:19" pos:end="9:26">= <expr pos:start="9:21" pos:end="9:26"><name pos:start="9:21" pos:end="9:26"><name pos:start="9:21" pos:end="9:22">fp</name><operator pos:start="9:23" pos:end="9:24">-&gt;</operator><name pos:start="9:25" pos:end="9:26">sc</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:49"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:36"><name pos:start="11:14" pos:end="11:15">sr</name><index pos:start="11:16" pos:end="11:36">[<expr pos:start="11:17" pos:end="11:35"><name pos:start="11:17" pos:end="11:31">MAX_MATRIX_SIZE</name> <operator pos:start="11:33" pos:end="11:33">-</operator> <literal type="number" pos:start="11:35" pos:end="11:35">1</literal></expr>]</index></name></decl>, <decl pos:start="11:39" pos:end="11:42"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:39" pos:end="11:42">tmp1</name></decl>, <decl pos:start="11:45" pos:end="11:48"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:45" pos:end="11:48">tmp2</name></decl>;</decl_stmt>



    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int32_t</name></type> <name pos:start="15:13" pos:end="15:15">res</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:16"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">x</name></decl>, <decl pos:start="17:12" pos:end="17:12"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:12" pos:end="17:12">y</name></decl>, <decl pos:start="17:15" pos:end="17:15"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:15" pos:end="17:15">z</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:31"><decl pos:start="19:5" pos:end="19:30"><type pos:start="19:5" pos:end="19:19"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:17">uint8_t</name> <modifier pos:start="19:19" pos:end="19:19">*</modifier></type><name pos:start="19:20" pos:end="19:23">src2</name> <init pos:start="19:25" pos:end="19:30">= <expr pos:start="19:27" pos:end="19:30"><name pos:start="19:27" pos:end="19:30">NULL</name></expr></init></decl>;</decl_stmt>  <comment type="line" pos:start="19:34" pos:end="19:52">//silence a warning</comment>



    <if_stmt pos:start="23:5" pos:end="37:5"><if pos:start="23:5" pos:end="37:5">if <condition pos:start="23:8" pos:end="23:20">(<expr pos:start="23:9" pos:end="23:19"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:19"><name pos:start="23:10" pos:end="23:11">fp</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:19">amount</name></name></expr>)</condition> <block pos:start="23:22" pos:end="37:5">{<block_content pos:start="25:9" pos:end="35:15">

        <if_stmt pos:start="25:9" pos:end="33:40"><if pos:start="25:9" pos:end="27:50">if <condition pos:start="25:12" pos:end="25:37">(<expr pos:start="25:13" pos:end="25:36"><name pos:start="25:13" pos:end="25:22">dst_stride</name> <operator pos:start="25:24" pos:end="25:25">==</operator> <name pos:start="25:27" pos:end="25:36">src_stride</name></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:50"><block_content pos:start="27:13" pos:end="27:50">

            <expr_stmt pos:start="27:13" pos:end="27:50"><expr pos:start="27:13" pos:end="27:49"><call pos:start="27:13" pos:end="27:49"><name pos:start="27:13" pos:end="27:18">memcpy</name><argument_list pos:start="27:19" pos:end="27:49">(<argument pos:start="27:20" pos:end="27:22"><expr pos:start="27:20" pos:end="27:22"><name pos:start="27:20" pos:end="27:22">dst</name></expr></argument>, <argument pos:start="27:25" pos:end="27:27"><expr pos:start="27:25" pos:end="27:27"><name pos:start="27:25" pos:end="27:27">src</name></expr></argument>, <argument pos:start="27:30" pos:end="27:48"><expr pos:start="27:30" pos:end="27:48"><name pos:start="27:30" pos:end="27:39">src_stride</name> <operator pos:start="27:41" pos:end="27:41">*</operator> <name pos:start="27:43" pos:end="27:48">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="29:9" pos:end="33:40">else<block type="pseudo" pos:start="31:13" pos:end="33:40"><block_content pos:start="31:13" pos:end="33:40">

            <for pos:start="31:13" pos:end="33:40">for <control pos:start="31:17" pos:end="31:78">(<init pos:start="31:18" pos:end="31:23"><expr pos:start="31:18" pos:end="31:22"><name pos:start="31:18" pos:end="31:18">y</name> <operator pos:start="31:20" pos:end="31:20">=</operator> <literal type="number" pos:start="31:22" pos:end="31:22">0</literal></expr>;</init> <condition pos:start="31:25" pos:end="31:35"><expr pos:start="31:25" pos:end="31:34"><name pos:start="31:25" pos:end="31:25">y</name> <operator pos:start="31:27" pos:end="31:27">&lt;</operator> <name pos:start="31:29" pos:end="31:34">height</name></expr>;</condition> <incr pos:start="31:37" pos:end="31:77"><expr pos:start="31:37" pos:end="31:39"><name pos:start="31:37" pos:end="31:37">y</name><operator pos:start="31:38" pos:end="31:39">++</operator></expr><operator pos:start="31:40" pos:end="31:40">,</operator> <expr pos:start="31:42" pos:end="31:58"><name pos:start="31:42" pos:end="31:44">dst</name> <operator pos:start="31:46" pos:end="31:47">+=</operator> <name pos:start="31:49" pos:end="31:58">dst_stride</name></expr><operator pos:start="31:59" pos:end="31:59">,</operator> <expr pos:start="31:61" pos:end="31:77"><name pos:start="31:61" pos:end="31:63">src</name> <operator pos:start="31:65" pos:end="31:66">+=</operator> <name pos:start="31:68" pos:end="31:77">src_stride</name></expr></incr>)</control><block type="pseudo" pos:start="33:17" pos:end="33:40"><block_content pos:start="33:17" pos:end="33:40">

                <expr_stmt pos:start="33:17" pos:end="33:40"><expr pos:start="33:17" pos:end="33:39"><call pos:start="33:17" pos:end="33:39"><name pos:start="33:17" pos:end="33:22">memcpy</name><argument_list pos:start="33:23" pos:end="33:39">(<argument pos:start="33:24" pos:end="33:26"><expr pos:start="33:24" pos:end="33:26"><name pos:start="33:24" pos:end="33:26">dst</name></expr></argument>, <argument pos:start="33:29" pos:end="33:31"><expr pos:start="33:29" pos:end="33:31"><name pos:start="33:29" pos:end="33:31">src</name></expr></argument>, <argument pos:start="33:34" pos:end="33:38"><expr pos:start="33:34" pos:end="33:38"><name pos:start="33:34" pos:end="33:38">width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></else></if_stmt>

        <return pos:start="35:9" pos:end="35:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="41:5" pos:end="43:71">for <control pos:start="41:9" pos:end="41:41">(<init pos:start="41:10" pos:end="41:15"><expr pos:start="41:10" pos:end="41:14"><name pos:start="41:10" pos:end="41:10">y</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <literal type="number" pos:start="41:14" pos:end="41:14">0</literal></expr>;</init> <condition pos:start="41:17" pos:end="41:36"><expr pos:start="41:17" pos:end="41:35"><name pos:start="41:17" pos:end="41:17">y</name> <operator pos:start="41:19" pos:end="41:19">&lt;</operator> <literal type="number" pos:start="41:21" pos:end="41:21">2</literal> <operator pos:start="41:23" pos:end="41:23">*</operator> <name pos:start="41:25" pos:end="41:35"><name pos:start="41:25" pos:end="41:26">fp</name><operator pos:start="41:27" pos:end="41:28">-&gt;</operator><name pos:start="41:29" pos:end="41:35">steps_y</name></name></expr>;</condition> <incr pos:start="41:38" pos:end="41:40"><expr pos:start="41:38" pos:end="41:40"><name pos:start="41:38" pos:end="41:38">y</name><operator pos:start="41:39" pos:end="41:40">++</operator></expr></incr>)</control><block type="pseudo" pos:start="43:9" pos:end="43:71"><block_content pos:start="43:9" pos:end="43:71">

        <expr_stmt pos:start="43:9" pos:end="43:71"><expr pos:start="43:9" pos:end="43:70"><call pos:start="43:9" pos:end="43:70"><name pos:start="43:9" pos:end="43:14">memset</name><argument_list pos:start="43:15" pos:end="43:70">(<argument pos:start="43:16" pos:end="43:20"><expr pos:start="43:16" pos:end="43:20"><name pos:start="43:16" pos:end="43:20"><name pos:start="43:16" pos:end="43:17">sc</name><index pos:start="43:18" pos:end="43:20">[<expr pos:start="43:19" pos:end="43:19"><name pos:start="43:19" pos:end="43:19">y</name></expr>]</index></name></expr></argument>, <argument pos:start="43:23" pos:end="43:23"><expr pos:start="43:23" pos:end="43:23"><literal type="number" pos:start="43:23" pos:end="43:23">0</literal></expr></argument>, <argument pos:start="43:26" pos:end="43:69"><expr pos:start="43:26" pos:end="43:69"><sizeof pos:start="43:26" pos:end="43:41">sizeof<argument_list pos:start="43:32" pos:end="43:41">(<argument pos:start="43:33" pos:end="43:40"><expr pos:start="43:33" pos:end="43:40"><name pos:start="43:33" pos:end="43:40"><name pos:start="43:33" pos:end="43:34">sc</name><index pos:start="43:35" pos:end="43:37">[<expr pos:start="43:36" pos:end="43:36"><name pos:start="43:36" pos:end="43:36">y</name></expr>]</index><index pos:start="43:38" pos:end="43:40">[<expr pos:start="43:39" pos:end="43:39"><literal type="number" pos:start="43:39" pos:end="43:39">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof> <operator pos:start="43:43" pos:end="43:43">*</operator> <operator pos:start="43:45" pos:end="43:45">(</operator><name pos:start="43:46" pos:end="43:50">width</name> <operator pos:start="43:52" pos:end="43:52">+</operator> <literal type="number" pos:start="43:54" pos:end="43:54">2</literal> <operator pos:start="43:56" pos:end="43:56">*</operator> <name pos:start="43:58" pos:end="43:68"><name pos:start="43:58" pos:end="43:59">fp</name><operator pos:start="43:60" pos:end="43:61">-&gt;</operator><name pos:start="43:62" pos:end="43:68">steps_x</name></name><operator pos:start="43:69" pos:end="43:69">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <for pos:start="47:5" pos:end="101:5">for <control pos:start="47:9" pos:end="47:57">(<init pos:start="47:10" pos:end="47:26"><expr pos:start="47:10" pos:end="47:25"><name pos:start="47:10" pos:end="47:10">y</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <operator pos:start="47:14" pos:end="47:14">-</operator><name pos:start="47:15" pos:end="47:25"><name pos:start="47:15" pos:end="47:16">fp</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:25">steps_y</name></name></expr>;</init> <condition pos:start="47:28" pos:end="47:52"><expr pos:start="47:28" pos:end="47:51"><name pos:start="47:28" pos:end="47:28">y</name> <operator pos:start="47:30" pos:end="47:30">&lt;</operator> <name pos:start="47:32" pos:end="47:37">height</name> <operator pos:start="47:39" pos:end="47:39">+</operator> <name pos:start="47:41" pos:end="47:51"><name pos:start="47:41" pos:end="47:42">fp</name><operator pos:start="47:43" pos:end="47:44">-&gt;</operator><name pos:start="47:45" pos:end="47:51">steps_y</name></name></expr>;</condition> <incr pos:start="47:54" pos:end="47:56"><expr pos:start="47:54" pos:end="47:56"><name pos:start="47:54" pos:end="47:54">y</name><operator pos:start="47:55" pos:end="47:56">++</operator></expr></incr>)</control> <block pos:start="47:59" pos:end="101:5">{<block_content pos:start="49:9" pos:end="99:9">

        <if_stmt pos:start="49:9" pos:end="51:23"><if pos:start="49:9" pos:end="51:23">if <condition pos:start="49:12" pos:end="49:23">(<expr pos:start="49:13" pos:end="49:22"><name pos:start="49:13" pos:end="49:13">y</name> <operator pos:start="49:15" pos:end="49:15">&lt;</operator> <name pos:start="49:17" pos:end="49:22">height</name></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:23"><block_content pos:start="51:13" pos:end="51:23">

            <expr_stmt pos:start="51:13" pos:end="51:23"><expr pos:start="51:13" pos:end="51:22"><name pos:start="51:13" pos:end="51:16">src2</name> <operator pos:start="51:18" pos:end="51:18">=</operator> <name pos:start="51:20" pos:end="51:22">src</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="55:9" pos:end="55:61"><expr pos:start="55:9" pos:end="55:60"><call pos:start="55:9" pos:end="55:60"><name pos:start="55:9" pos:end="55:14">memset</name><argument_list pos:start="55:15" pos:end="55:60">(<argument pos:start="55:16" pos:end="55:17"><expr pos:start="55:16" pos:end="55:17"><name pos:start="55:16" pos:end="55:17">sr</name></expr></argument>, <argument pos:start="55:20" pos:end="55:20"><expr pos:start="55:20" pos:end="55:20"><literal type="number" pos:start="55:20" pos:end="55:20">0</literal></expr></argument>, <argument pos:start="55:23" pos:end="55:59"><expr pos:start="55:23" pos:end="55:59"><sizeof pos:start="55:23" pos:end="55:35">sizeof<argument_list pos:start="55:29" pos:end="55:35">(<argument pos:start="55:30" pos:end="55:34"><expr pos:start="55:30" pos:end="55:34"><name pos:start="55:30" pos:end="55:34"><name pos:start="55:30" pos:end="55:31">sr</name><index pos:start="55:32" pos:end="55:34">[<expr pos:start="55:33" pos:end="55:33"><literal type="number" pos:start="55:33" pos:end="55:33">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof> <operator pos:start="55:37" pos:end="55:37">*</operator> <operator pos:start="55:39" pos:end="55:39">(</operator><literal type="number" pos:start="55:40" pos:end="55:40">2</literal> <operator pos:start="55:42" pos:end="55:42">*</operator> <name pos:start="55:44" pos:end="55:54"><name pos:start="55:44" pos:end="55:45">fp</name><operator pos:start="55:46" pos:end="55:47">-&gt;</operator><name pos:start="55:48" pos:end="55:54">steps_x</name></name> <operator pos:start="55:56" pos:end="55:56">-</operator> <literal type="number" pos:start="55:58" pos:end="55:58">1</literal><operator pos:start="55:59" pos:end="55:59">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="57:9" pos:end="91:9">for <control pos:start="57:13" pos:end="57:60">(<init pos:start="57:14" pos:end="57:30"><expr pos:start="57:14" pos:end="57:29"><name pos:start="57:14" pos:end="57:14">x</name> <operator pos:start="57:16" pos:end="57:16">=</operator> <operator pos:start="57:18" pos:end="57:18">-</operator><name pos:start="57:19" pos:end="57:29"><name pos:start="57:19" pos:end="57:20">fp</name><operator pos:start="57:21" pos:end="57:22">-&gt;</operator><name pos:start="57:23" pos:end="57:29">steps_x</name></name></expr>;</init> <condition pos:start="57:32" pos:end="57:55"><expr pos:start="57:32" pos:end="57:54"><name pos:start="57:32" pos:end="57:32">x</name> <operator pos:start="57:34" pos:end="57:34">&lt;</operator> <name pos:start="57:36" pos:end="57:40">width</name> <operator pos:start="57:42" pos:end="57:42">+</operator> <name pos:start="57:44" pos:end="57:54"><name pos:start="57:44" pos:end="57:45">fp</name><operator pos:start="57:46" pos:end="57:47">-&gt;</operator><name pos:start="57:48" pos:end="57:54">steps_x</name></name></expr>;</condition> <incr pos:start="57:57" pos:end="57:59"><expr pos:start="57:57" pos:end="57:59"><name pos:start="57:57" pos:end="57:57">x</name><operator pos:start="57:58" pos:end="57:59">++</operator></expr></incr>)</control> <block pos:start="57:62" pos:end="91:9">{<block_content pos:start="59:13" pos:end="89:13">

            <expr_stmt pos:start="59:13" pos:end="59:75"><expr pos:start="59:13" pos:end="59:74"><name pos:start="59:13" pos:end="59:16">tmp1</name> <operator pos:start="59:18" pos:end="59:18">=</operator> <ternary pos:start="59:20" pos:end="59:74"><condition pos:start="59:20" pos:end="59:27"><expr pos:start="59:20" pos:end="59:25"><name pos:start="59:20" pos:end="59:20">x</name> <operator pos:start="59:22" pos:end="59:23">&lt;=</operator> <literal type="number" pos:start="59:25" pos:end="59:25">0</literal></expr> ?</condition><then pos:start="59:29" pos:end="59:35"> <expr pos:start="59:29" pos:end="59:35"><name pos:start="59:29" pos:end="59:35"><name pos:start="59:29" pos:end="59:32">src2</name><index pos:start="59:33" pos:end="59:35">[<expr pos:start="59:34" pos:end="59:34"><literal type="number" pos:start="59:34" pos:end="59:34">0</literal></expr>]</index></name></expr> </then><else pos:start="59:37" pos:end="59:74">: <expr pos:start="59:39" pos:end="59:74"><ternary pos:start="59:39" pos:end="59:74"><condition pos:start="59:39" pos:end="59:50"><expr pos:start="59:39" pos:end="59:48"><name pos:start="59:39" pos:end="59:39">x</name> <operator pos:start="59:41" pos:end="59:42">&gt;=</operator> <name pos:start="59:44" pos:end="59:48">width</name></expr> ?</condition><then pos:start="59:52" pos:end="59:64"> <expr pos:start="59:52" pos:end="59:64"><name pos:start="59:52" pos:end="59:64"><name pos:start="59:52" pos:end="59:55">src2</name><index pos:start="59:56" pos:end="59:64">[<expr pos:start="59:57" pos:end="59:63"><name pos:start="59:57" pos:end="59:61">width</name><operator pos:start="59:62" pos:end="59:62">-</operator><literal type="number" pos:start="59:63" pos:end="59:63">1</literal></expr>]</index></name></expr> </then><else pos:start="59:66" pos:end="59:74">: <expr pos:start="59:68" pos:end="59:74"><name pos:start="59:68" pos:end="59:74"><name pos:start="59:68" pos:end="59:71">src2</name><index pos:start="59:72" pos:end="59:74">[<expr pos:start="59:73" pos:end="59:73"><name pos:start="59:73" pos:end="59:73">x</name></expr>]</index></name></expr></else></ternary></expr></else></ternary></expr>;</expr_stmt>

            <for pos:start="61:13" pos:end="67:13">for <control pos:start="61:17" pos:end="61:52">(<init pos:start="61:18" pos:end="61:23"><expr pos:start="61:18" pos:end="61:22"><name pos:start="61:18" pos:end="61:18">z</name> <operator pos:start="61:20" pos:end="61:20">=</operator> <literal type="number" pos:start="61:22" pos:end="61:22">0</literal></expr>;</init> <condition pos:start="61:25" pos:end="61:44"><expr pos:start="61:25" pos:end="61:43"><name pos:start="61:25" pos:end="61:25">z</name> <operator pos:start="61:27" pos:end="61:27">&lt;</operator> <name pos:start="61:29" pos:end="61:39"><name pos:start="61:29" pos:end="61:30">fp</name><operator pos:start="61:31" pos:end="61:32">-&gt;</operator><name pos:start="61:33" pos:end="61:39">steps_x</name></name> <operator pos:start="61:41" pos:end="61:41">*</operator> <literal type="number" pos:start="61:43" pos:end="61:43">2</literal></expr>;</condition> <incr pos:start="61:46" pos:end="61:51"><expr pos:start="61:46" pos:end="61:51"><name pos:start="61:46" pos:end="61:46">z</name> <operator pos:start="61:48" pos:end="61:49">+=</operator> <literal type="number" pos:start="61:51" pos:end="61:51">2</literal></expr></incr>)</control> <block pos:start="61:54" pos:end="67:13">{<block_content pos:start="63:17" pos:end="65:58">

                <expr_stmt pos:start="63:17" pos:end="63:40"><expr pos:start="63:17" pos:end="63:39"><name pos:start="63:17" pos:end="63:20">tmp2</name> <operator pos:start="63:22" pos:end="63:22">=</operator> <name pos:start="63:24" pos:end="63:32"><name pos:start="63:24" pos:end="63:25">sr</name><index pos:start="63:26" pos:end="63:32">[<expr pos:start="63:27" pos:end="63:31"><name pos:start="63:27" pos:end="63:27">z</name> <operator pos:start="63:29" pos:end="63:29">+</operator> <literal type="number" pos:start="63:31" pos:end="63:31">0</literal></expr>]</index></name> <operator pos:start="63:34" pos:end="63:34">+</operator> <name pos:start="63:36" pos:end="63:39">tmp1</name></expr>;</expr_stmt> <expr_stmt pos:start="63:42" pos:end="63:58"><expr pos:start="63:42" pos:end="63:57"><name pos:start="63:42" pos:end="63:50"><name pos:start="63:42" pos:end="63:43">sr</name><index pos:start="63:44" pos:end="63:50">[<expr pos:start="63:45" pos:end="63:49"><name pos:start="63:45" pos:end="63:45">z</name> <operator pos:start="63:47" pos:end="63:47">+</operator> <literal type="number" pos:start="63:49" pos:end="63:49">0</literal></expr>]</index></name> <operator pos:start="63:52" pos:end="63:52">=</operator> <name pos:start="63:54" pos:end="63:57">tmp1</name></expr>;</expr_stmt>

                <expr_stmt pos:start="65:17" pos:end="65:40"><expr pos:start="65:17" pos:end="65:39"><name pos:start="65:17" pos:end="65:20">tmp1</name> <operator pos:start="65:22" pos:end="65:22">=</operator> <name pos:start="65:24" pos:end="65:32"><name pos:start="65:24" pos:end="65:25">sr</name><index pos:start="65:26" pos:end="65:32">[<expr pos:start="65:27" pos:end="65:31"><name pos:start="65:27" pos:end="65:27">z</name> <operator pos:start="65:29" pos:end="65:29">+</operator> <literal type="number" pos:start="65:31" pos:end="65:31">1</literal></expr>]</index></name> <operator pos:start="65:34" pos:end="65:34">+</operator> <name pos:start="65:36" pos:end="65:39">tmp2</name></expr>;</expr_stmt> <expr_stmt pos:start="65:42" pos:end="65:58"><expr pos:start="65:42" pos:end="65:57"><name pos:start="65:42" pos:end="65:50"><name pos:start="65:42" pos:end="65:43">sr</name><index pos:start="65:44" pos:end="65:50">[<expr pos:start="65:45" pos:end="65:49"><name pos:start="65:45" pos:end="65:45">z</name> <operator pos:start="65:47" pos:end="65:47">+</operator> <literal type="number" pos:start="65:49" pos:end="65:49">1</literal></expr>]</index></name> <operator pos:start="65:52" pos:end="65:52">=</operator> <name pos:start="65:54" pos:end="65:57">tmp2</name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <for pos:start="69:13" pos:end="75:13">for <control pos:start="69:17" pos:end="69:52">(<init pos:start="69:18" pos:end="69:23"><expr pos:start="69:18" pos:end="69:22"><name pos:start="69:18" pos:end="69:18">z</name> <operator pos:start="69:20" pos:end="69:20">=</operator> <literal type="number" pos:start="69:22" pos:end="69:22">0</literal></expr>;</init> <condition pos:start="69:25" pos:end="69:44"><expr pos:start="69:25" pos:end="69:43"><name pos:start="69:25" pos:end="69:25">z</name> <operator pos:start="69:27" pos:end="69:27">&lt;</operator> <name pos:start="69:29" pos:end="69:39"><name pos:start="69:29" pos:end="69:30">fp</name><operator pos:start="69:31" pos:end="69:32">-&gt;</operator><name pos:start="69:33" pos:end="69:39">steps_y</name></name> <operator pos:start="69:41" pos:end="69:41">*</operator> <literal type="number" pos:start="69:43" pos:end="69:43">2</literal></expr>;</condition> <incr pos:start="69:46" pos:end="69:51"><expr pos:start="69:46" pos:end="69:51"><name pos:start="69:46" pos:end="69:46">z</name> <operator pos:start="69:48" pos:end="69:49">+=</operator> <literal type="number" pos:start="69:51" pos:end="69:51">2</literal></expr></incr>)</control> <block pos:start="69:54" pos:end="75:13">{<block_content pos:start="71:17" pos:end="73:92">

                <expr_stmt pos:start="71:17" pos:end="71:57"><expr pos:start="71:17" pos:end="71:56"><name pos:start="71:17" pos:end="71:20">tmp2</name> <operator pos:start="71:22" pos:end="71:22">=</operator> <name pos:start="71:24" pos:end="71:49"><name pos:start="71:24" pos:end="71:25">sc</name><index pos:start="71:26" pos:end="71:32">[<expr pos:start="71:27" pos:end="71:31"><name pos:start="71:27" pos:end="71:27">z</name> <operator pos:start="71:29" pos:end="71:29">+</operator> <literal type="number" pos:start="71:31" pos:end="71:31">0</literal></expr>]</index><index pos:start="71:33" pos:end="71:49">[<expr pos:start="71:34" pos:end="71:48"><name pos:start="71:34" pos:end="71:34">x</name> <operator pos:start="71:36" pos:end="71:36">+</operator> <name pos:start="71:38" pos:end="71:48"><name pos:start="71:38" pos:end="71:39">fp</name><operator pos:start="71:40" pos:end="71:41">-&gt;</operator><name pos:start="71:42" pos:end="71:48">steps_x</name></name></expr>]</index></name> <operator pos:start="71:51" pos:end="71:51">+</operator> <name pos:start="71:53" pos:end="71:56">tmp1</name></expr>;</expr_stmt> <expr_stmt pos:start="71:59" pos:end="71:92"><expr pos:start="71:59" pos:end="71:91"><name pos:start="71:59" pos:end="71:84"><name pos:start="71:59" pos:end="71:60">sc</name><index pos:start="71:61" pos:end="71:67">[<expr pos:start="71:62" pos:end="71:66"><name pos:start="71:62" pos:end="71:62">z</name> <operator pos:start="71:64" pos:end="71:64">+</operator> <literal type="number" pos:start="71:66" pos:end="71:66">0</literal></expr>]</index><index pos:start="71:68" pos:end="71:84">[<expr pos:start="71:69" pos:end="71:83"><name pos:start="71:69" pos:end="71:69">x</name> <operator pos:start="71:71" pos:end="71:71">+</operator> <name pos:start="71:73" pos:end="71:83"><name pos:start="71:73" pos:end="71:74">fp</name><operator pos:start="71:75" pos:end="71:76">-&gt;</operator><name pos:start="71:77" pos:end="71:83">steps_x</name></name></expr>]</index></name> <operator pos:start="71:86" pos:end="71:86">=</operator> <name pos:start="71:88" pos:end="71:91">tmp1</name></expr>;</expr_stmt>

                <expr_stmt pos:start="73:17" pos:end="73:57"><expr pos:start="73:17" pos:end="73:56"><name pos:start="73:17" pos:end="73:20">tmp1</name> <operator pos:start="73:22" pos:end="73:22">=</operator> <name pos:start="73:24" pos:end="73:49"><name pos:start="73:24" pos:end="73:25">sc</name><index pos:start="73:26" pos:end="73:32">[<expr pos:start="73:27" pos:end="73:31"><name pos:start="73:27" pos:end="73:27">z</name> <operator pos:start="73:29" pos:end="73:29">+</operator> <literal type="number" pos:start="73:31" pos:end="73:31">1</literal></expr>]</index><index pos:start="73:33" pos:end="73:49">[<expr pos:start="73:34" pos:end="73:48"><name pos:start="73:34" pos:end="73:34">x</name> <operator pos:start="73:36" pos:end="73:36">+</operator> <name pos:start="73:38" pos:end="73:48"><name pos:start="73:38" pos:end="73:39">fp</name><operator pos:start="73:40" pos:end="73:41">-&gt;</operator><name pos:start="73:42" pos:end="73:48">steps_x</name></name></expr>]</index></name> <operator pos:start="73:51" pos:end="73:51">+</operator> <name pos:start="73:53" pos:end="73:56">tmp2</name></expr>;</expr_stmt> <expr_stmt pos:start="73:59" pos:end="73:92"><expr pos:start="73:59" pos:end="73:91"><name pos:start="73:59" pos:end="73:84"><name pos:start="73:59" pos:end="73:60">sc</name><index pos:start="73:61" pos:end="73:67">[<expr pos:start="73:62" pos:end="73:66"><name pos:start="73:62" pos:end="73:62">z</name> <operator pos:start="73:64" pos:end="73:64">+</operator> <literal type="number" pos:start="73:66" pos:end="73:66">1</literal></expr>]</index><index pos:start="73:68" pos:end="73:84">[<expr pos:start="73:69" pos:end="73:83"><name pos:start="73:69" pos:end="73:69">x</name> <operator pos:start="73:71" pos:end="73:71">+</operator> <name pos:start="73:73" pos:end="73:83"><name pos:start="73:73" pos:end="73:74">fp</name><operator pos:start="73:75" pos:end="73:76">-&gt;</operator><name pos:start="73:77" pos:end="73:83">steps_x</name></name></expr>]</index></name> <operator pos:start="73:86" pos:end="73:86">=</operator> <name pos:start="73:88" pos:end="73:91">tmp2</name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <if_stmt pos:start="77:13" pos:end="89:13"><if pos:start="77:13" pos:end="89:13">if <condition pos:start="77:16" pos:end="77:53">(<expr pos:start="77:17" pos:end="77:52"><name pos:start="77:17" pos:end="77:17">x</name> <operator pos:start="77:19" pos:end="77:20">&gt;=</operator> <name pos:start="77:22" pos:end="77:32"><name pos:start="77:22" pos:end="77:23">fp</name><operator pos:start="77:24" pos:end="77:25">-&gt;</operator><name pos:start="77:26" pos:end="77:32">steps_x</name></name> <operator pos:start="77:34" pos:end="77:35">&amp;&amp;</operator> <name pos:start="77:37" pos:end="77:37">y</name> <operator pos:start="77:39" pos:end="77:40">&gt;=</operator> <name pos:start="77:42" pos:end="77:52"><name pos:start="77:42" pos:end="77:43">fp</name><operator pos:start="77:44" pos:end="77:45">-&gt;</operator><name pos:start="77:46" pos:end="77:52">steps_y</name></name></expr>)</condition> <block pos:start="77:55" pos:end="89:13">{<block_content pos:start="79:17" pos:end="87:42">

                <decl_stmt pos:start="79:17" pos:end="79:86"><decl pos:start="79:17" pos:end="79:85"><type pos:start="79:17" pos:end="79:31"><specifier pos:start="79:17" pos:end="79:21">const</specifier> <name pos:start="79:23" pos:end="79:29">uint8_t</name> <modifier pos:start="79:31" pos:end="79:31">*</modifier></type><name pos:start="79:32" pos:end="79:34">srx</name> <init pos:start="79:36" pos:end="79:85">= <expr pos:start="79:38" pos:end="79:85"><name pos:start="79:38" pos:end="79:40">src</name> <operator pos:start="79:42" pos:end="79:42">-</operator> <name pos:start="79:44" pos:end="79:54"><name pos:start="79:44" pos:end="79:45">fp</name><operator pos:start="79:46" pos:end="79:47">-&gt;</operator><name pos:start="79:48" pos:end="79:54">steps_y</name></name> <operator pos:start="79:56" pos:end="79:56">*</operator> <name pos:start="79:58" pos:end="79:67">src_stride</name> <operator pos:start="79:69" pos:end="79:69">+</operator> <name pos:start="79:71" pos:end="79:71">x</name> <operator pos:start="79:73" pos:end="79:73">-</operator> <name pos:start="79:75" pos:end="79:85"><name pos:start="79:75" pos:end="79:76">fp</name><operator pos:start="79:77" pos:end="79:78">-&gt;</operator><name pos:start="79:79" pos:end="79:85">steps_x</name></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="81:17" pos:end="81:86"><decl pos:start="81:17" pos:end="81:85"><type pos:start="81:17" pos:end="81:25"><name pos:start="81:17" pos:end="81:23">uint8_t</name> <modifier pos:start="81:25" pos:end="81:25">*</modifier></type><name pos:start="81:26" pos:end="81:28">dsx</name>       <init pos:start="81:36" pos:end="81:85">= <expr pos:start="81:38" pos:end="81:85"><name pos:start="81:38" pos:end="81:40">dst</name> <operator pos:start="81:42" pos:end="81:42">-</operator> <name pos:start="81:44" pos:end="81:54"><name pos:start="81:44" pos:end="81:45">fp</name><operator pos:start="81:46" pos:end="81:47">-&gt;</operator><name pos:start="81:48" pos:end="81:54">steps_y</name></name> <operator pos:start="81:56" pos:end="81:56">*</operator> <name pos:start="81:58" pos:end="81:67">dst_stride</name> <operator pos:start="81:69" pos:end="81:69">+</operator> <name pos:start="81:71" pos:end="81:71">x</name> <operator pos:start="81:73" pos:end="81:73">-</operator> <name pos:start="81:75" pos:end="81:85"><name pos:start="81:75" pos:end="81:76">fp</name><operator pos:start="81:77" pos:end="81:78">-&gt;</operator><name pos:start="81:79" pos:end="81:85">steps_x</name></name></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="85:17" pos:end="85:132"><expr pos:start="85:17" pos:end="85:131"><name pos:start="85:17" pos:end="85:19">res</name> <operator pos:start="85:21" pos:end="85:21">=</operator> <operator pos:start="85:23" pos:end="85:23">(</operator><name pos:start="85:24" pos:end="85:30">int32_t</name><operator pos:start="85:31" pos:end="85:31">)</operator><operator pos:start="85:32" pos:end="85:32">*</operator><name pos:start="85:33" pos:end="85:35">srx</name> <operator pos:start="85:37" pos:end="85:37">+</operator> <operator pos:start="85:39" pos:end="85:39">(</operator><operator pos:start="85:40" pos:end="85:40">(</operator><operator pos:start="85:41" pos:end="85:41">(</operator><operator pos:start="85:42" pos:end="85:42">(</operator><name pos:start="85:43" pos:end="85:49">int32_t</name><operator pos:start="85:50" pos:end="85:50">)</operator> <operator pos:start="85:52" pos:end="85:52">*</operator> <name pos:start="85:54" pos:end="85:56">srx</name> <operator pos:start="85:58" pos:end="85:58">-</operator> <operator pos:start="85:60" pos:end="85:60">(</operator><name pos:start="85:61" pos:end="85:67">int32_t</name><operator pos:start="85:68" pos:end="85:68">)</operator><operator pos:start="85:69" pos:end="85:69">(</operator><operator pos:start="85:70" pos:end="85:70">(</operator><name pos:start="85:71" pos:end="85:74">tmp1</name> <operator pos:start="85:76" pos:end="85:76">+</operator> <name pos:start="85:78" pos:end="85:90"><name pos:start="85:78" pos:end="85:79">fp</name><operator pos:start="85:80" pos:end="85:81">-&gt;</operator><name pos:start="85:82" pos:end="85:90">halfscale</name></name><operator pos:start="85:91" pos:end="85:91">)</operator> <operator pos:start="85:93" pos:end="85:94">&gt;&gt;</operator> <name pos:start="85:96" pos:end="85:108"><name pos:start="85:96" pos:end="85:97">fp</name><operator pos:start="85:98" pos:end="85:99">-&gt;</operator><name pos:start="85:100" pos:end="85:108">scalebits</name></name><operator pos:start="85:109" pos:end="85:109">)</operator><operator pos:start="85:110" pos:end="85:110">)</operator> <operator pos:start="85:112" pos:end="85:112">*</operator> <name pos:start="85:114" pos:end="85:123"><name pos:start="85:114" pos:end="85:115">fp</name><operator pos:start="85:116" pos:end="85:117">-&gt;</operator><name pos:start="85:118" pos:end="85:123">amount</name></name><operator pos:start="85:124" pos:end="85:124">)</operator> <operator pos:start="85:126" pos:end="85:127">&gt;&gt;</operator> <literal type="number" pos:start="85:129" pos:end="85:130">16</literal><operator pos:start="85:131" pos:end="85:131">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="87:17" pos:end="87:42"><expr pos:start="87:17" pos:end="87:41"><operator pos:start="87:17" pos:end="87:17">*</operator><name pos:start="87:18" pos:end="87:20">dsx</name> <operator pos:start="87:22" pos:end="87:22">=</operator> <call pos:start="87:24" pos:end="87:41"><name pos:start="87:24" pos:end="87:36">av_clip_uint8</name><argument_list pos:start="87:37" pos:end="87:41">(<argument pos:start="87:38" pos:end="87:40"><expr pos:start="87:38" pos:end="87:40"><name pos:start="87:38" pos:end="87:40">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="93:9" pos:end="99:9"><if pos:start="93:9" pos:end="99:9">if <condition pos:start="93:12" pos:end="93:19">(<expr pos:start="93:13" pos:end="93:18"><name pos:start="93:13" pos:end="93:13">y</name> <operator pos:start="93:15" pos:end="93:16">&gt;=</operator> <literal type="number" pos:start="93:18" pos:end="93:18">0</literal></expr>)</condition> <block pos:start="93:21" pos:end="99:9">{<block_content pos:start="95:13" pos:end="97:30">

            <expr_stmt pos:start="95:13" pos:end="95:30"><expr pos:start="95:13" pos:end="95:29"><name pos:start="95:13" pos:end="95:15">dst</name> <operator pos:start="95:17" pos:end="95:18">+=</operator> <name pos:start="95:20" pos:end="95:29">dst_stride</name></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:30"><expr pos:start="97:13" pos:end="97:29"><name pos:start="97:13" pos:end="97:15">src</name> <operator pos:start="97:17" pos:end="97:18">+=</operator> <name pos:start="97:20" pos:end="97:29">src_stride</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
