<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18431.c" pos:tabs="8"><function pos:start="1:1" pos:end="259:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:35">PREFIX_h264_chroma_mc8_altivec</name><parameter_list pos:start="1:36" pos:end="3:68">(<parameter pos:start="1:37" pos:end="1:49"><decl pos:start="1:37" pos:end="1:49"><type pos:start="1:37" pos:end="1:49"><name pos:start="1:37" pos:end="1:43">uint8_t</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type> <name pos:start="1:47" pos:end="1:49">dst</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:64"><decl pos:start="1:52" pos:end="1:64"><type pos:start="1:52" pos:end="1:64"><name pos:start="1:52" pos:end="1:58">uint8_t</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type> <name pos:start="1:62" pos:end="1:64">src</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:46"><decl pos:start="3:37" pos:end="3:46"><type pos:start="3:37" pos:end="3:46"><name pos:start="3:37" pos:end="3:39">int</name></type> <name pos:start="3:41" pos:end="3:46">stride</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:53"><decl pos:start="3:49" pos:end="3:53"><type pos:start="3:49" pos:end="3:53"><name pos:start="3:49" pos:end="3:51">int</name></type> <name pos:start="3:53" pos:end="3:53">h</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:60"><decl pos:start="3:56" pos:end="3:60"><type pos:start="3:56" pos:end="3:60"><name pos:start="3:56" pos:end="3:58">int</name></type> <name pos:start="3:60" pos:end="3:60">x</name></decl></parameter>, <parameter pos:start="3:63" pos:end="3:67"><decl pos:start="3:63" pos:end="3:67"><type pos:start="3:63" pos:end="3:67"><name pos:start="3:63" pos:end="3:65">int</name></type> <name pos:start="3:67" pos:end="3:67">y</name></decl></parameter>)</parameter_list> <block pos:start="3:70" pos:end="259:1">{<block_content pos:start="5:3" pos:end="257:59">

  <expr_stmt pos:start="5:3" pos:end="5:54"><expr pos:start="5:3" pos:end="5:53"><call pos:start="5:3" pos:end="5:53"><name pos:start="5:3" pos:end="5:22">POWERPC_PERF_DECLARE</name><argument_list pos:start="5:23" pos:end="5:53">(<argument pos:start="5:24" pos:end="5:49"><expr pos:start="5:24" pos:end="5:49"><name pos:start="5:24" pos:end="5:49">PREFIX_h264_chroma_mc8_num</name></expr></argument>, <argument pos:start="5:52" pos:end="5:52"><expr pos:start="5:52" pos:end="5:52"><literal type="number" pos:start="5:52" pos:end="5:52">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <macro pos:start="7:5" pos:end="7:43"><name pos:start="7:5" pos:end="7:22">DECLARE_ALIGNED_16</name><argument_list pos:start="7:23" pos:end="7:43">(<argument pos:start="7:24" pos:end="7:33">signed int</argument>, <argument pos:start="7:36" pos:end="7:42">ABCD[<literal type="number" pos:start="7:41" pos:end="7:41">4</literal>]</argument>)</argument_list></macro> <expr_stmt pos:start="7:45" pos:end="15:46"><expr pos:start="7:45" pos:end="15:45"><operator pos:start="7:45" pos:end="7:45">=</operator>

                        <block pos:start="9:25" pos:end="15:45">{<expr pos:start="9:26" pos:end="9:44"><operator pos:start="9:26" pos:end="9:26">(</operator><operator pos:start="9:27" pos:end="9:27">(</operator><literal type="number" pos:start="9:28" pos:end="9:30">8</literal> <operator pos:start="9:30" pos:end="9:30">-</operator> <name pos:start="9:32" pos:end="9:32">x</name><operator pos:start="9:33" pos:end="9:33">)</operator> <operator pos:start="9:35" pos:end="9:35">*</operator> <operator pos:start="9:37" pos:end="9:37">(</operator><literal type="number" pos:start="9:38" pos:end="9:40">8</literal> <operator pos:start="9:40" pos:end="9:40">-</operator> <name pos:start="9:42" pos:end="9:42">y</name><operator pos:start="9:43" pos:end="9:43">)</operator><operator pos:start="9:44" pos:end="9:44">)</operator></expr>,

                         <expr pos:start="11:26" pos:end="11:44"><operator pos:start="11:26" pos:end="11:26">(</operator><operator pos:start="11:27" pos:end="11:27">(</operator>    <name pos:start="11:32" pos:end="11:32">x</name><operator pos:start="11:33" pos:end="11:33">)</operator> <operator pos:start="11:35" pos:end="11:35">*</operator> <operator pos:start="11:37" pos:end="11:37">(</operator><literal type="number" pos:start="11:38" pos:end="11:40">8</literal> <operator pos:start="11:40" pos:end="11:40">-</operator> <name pos:start="11:42" pos:end="11:42">y</name><operator pos:start="11:43" pos:end="11:43">)</operator><operator pos:start="11:44" pos:end="11:44">)</operator></expr>,

                         <expr pos:start="13:26" pos:end="13:44"><operator pos:start="13:26" pos:end="13:26">(</operator><operator pos:start="13:27" pos:end="13:27">(</operator><literal type="number" pos:start="13:28" pos:end="13:30">8</literal> <operator pos:start="13:30" pos:end="13:30">-</operator> <name pos:start="13:32" pos:end="13:32">x</name><operator pos:start="13:33" pos:end="13:33">)</operator> <operator pos:start="13:35" pos:end="13:35">*</operator> <operator pos:start="13:37" pos:end="13:37">(</operator>    <name pos:start="13:42" pos:end="13:42">y</name><operator pos:start="13:43" pos:end="13:43">)</operator><operator pos:start="13:44" pos:end="13:44">)</operator></expr>,

                         <expr pos:start="15:26" pos:end="15:44"><operator pos:start="15:26" pos:end="15:26">(</operator><operator pos:start="15:27" pos:end="15:27">(</operator>    <name pos:start="15:32" pos:end="15:32">x</name><operator pos:start="15:33" pos:end="15:33">)</operator> <operator pos:start="15:35" pos:end="15:35">*</operator> <operator pos:start="15:37" pos:end="15:37">(</operator>    <name pos:start="15:42" pos:end="15:42">y</name><operator pos:start="15:43" pos:end="15:43">)</operator><operator pos:start="15:44" pos:end="15:44">)</operator></expr>}</block></expr>;</expr_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:16"><specifier pos:start="17:5" pos:end="17:12">register</specifier> <name pos:start="17:14" pos:end="17:16">int</name></type> <name pos:start="17:18" pos:end="17:18">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:17"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:10">vec_u8</name></type> <name pos:start="19:12" pos:end="19:16">fperm</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:42"><decl pos:start="21:5" pos:end="21:41"><type pos:start="21:5" pos:end="21:17"><specifier pos:start="21:5" pos:end="21:9">const</specifier> <name pos:start="21:11" pos:end="21:17">vec_s32</name></type> <name pos:start="21:19" pos:end="21:23">vABCD</name> <init pos:start="21:25" pos:end="21:41">= <expr pos:start="21:27" pos:end="21:41"><call pos:start="21:27" pos:end="21:41"><name pos:start="21:27" pos:end="21:32">vec_ld</name><argument_list pos:start="21:33" pos:end="21:41">(<argument pos:start="21:34" pos:end="21:34"><expr pos:start="21:34" pos:end="21:34"><literal type="number" pos:start="21:34" pos:end="21:34">0</literal></expr></argument>, <argument pos:start="21:37" pos:end="21:40"><expr pos:start="21:37" pos:end="21:40"><name pos:start="21:37" pos:end="21:40">ABCD</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:52"><decl pos:start="23:5" pos:end="23:51"><type pos:start="23:5" pos:end="23:17"><specifier pos:start="23:5" pos:end="23:9">const</specifier> <name pos:start="23:11" pos:end="23:17">vec_s16</name></type> <name pos:start="23:19" pos:end="23:20">vA</name> <init pos:start="23:22" pos:end="23:51">= <expr pos:start="23:24" pos:end="23:51"><call pos:start="23:24" pos:end="23:51"><name pos:start="23:24" pos:end="23:32">vec_splat</name><argument_list pos:start="23:33" pos:end="23:51">(<argument pos:start="23:34" pos:end="23:47"><expr pos:start="23:34" pos:end="23:47"><operator pos:start="23:34" pos:end="23:34">(</operator><name pos:start="23:35" pos:end="23:41">vec_s16</name><operator pos:start="23:42" pos:end="23:42">)</operator><name pos:start="23:43" pos:end="23:47">vABCD</name></expr></argument>, <argument pos:start="23:50" pos:end="23:50"><expr pos:start="23:50" pos:end="23:50"><literal type="number" pos:start="23:50" pos:end="23:50">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:52"><decl pos:start="25:5" pos:end="25:51"><type pos:start="25:5" pos:end="25:17"><specifier pos:start="25:5" pos:end="25:9">const</specifier> <name pos:start="25:11" pos:end="25:17">vec_s16</name></type> <name pos:start="25:19" pos:end="25:20">vB</name> <init pos:start="25:22" pos:end="25:51">= <expr pos:start="25:24" pos:end="25:51"><call pos:start="25:24" pos:end="25:51"><name pos:start="25:24" pos:end="25:32">vec_splat</name><argument_list pos:start="25:33" pos:end="25:51">(<argument pos:start="25:34" pos:end="25:47"><expr pos:start="25:34" pos:end="25:47"><operator pos:start="25:34" pos:end="25:34">(</operator><name pos:start="25:35" pos:end="25:41">vec_s16</name><operator pos:start="25:42" pos:end="25:42">)</operator><name pos:start="25:43" pos:end="25:47">vABCD</name></expr></argument>, <argument pos:start="25:50" pos:end="25:50"><expr pos:start="25:50" pos:end="25:50"><literal type="number" pos:start="25:50" pos:end="25:50">3</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:52"><decl pos:start="27:5" pos:end="27:51"><type pos:start="27:5" pos:end="27:17"><specifier pos:start="27:5" pos:end="27:9">const</specifier> <name pos:start="27:11" pos:end="27:17">vec_s16</name></type> <name pos:start="27:19" pos:end="27:20">vC</name> <init pos:start="27:22" pos:end="27:51">= <expr pos:start="27:24" pos:end="27:51"><call pos:start="27:24" pos:end="27:51"><name pos:start="27:24" pos:end="27:32">vec_splat</name><argument_list pos:start="27:33" pos:end="27:51">(<argument pos:start="27:34" pos:end="27:47"><expr pos:start="27:34" pos:end="27:47"><operator pos:start="27:34" pos:end="27:34">(</operator><name pos:start="27:35" pos:end="27:41">vec_s16</name><operator pos:start="27:42" pos:end="27:42">)</operator><name pos:start="27:43" pos:end="27:47">vABCD</name></expr></argument>, <argument pos:start="27:50" pos:end="27:50"><expr pos:start="27:50" pos:end="27:50"><literal type="number" pos:start="27:50" pos:end="27:50">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:52"><decl pos:start="29:5" pos:end="29:51"><type pos:start="29:5" pos:end="29:17"><specifier pos:start="29:5" pos:end="29:9">const</specifier> <name pos:start="29:11" pos:end="29:17">vec_s16</name></type> <name pos:start="29:19" pos:end="29:20">vD</name> <init pos:start="29:22" pos:end="29:51">= <expr pos:start="29:24" pos:end="29:51"><call pos:start="29:24" pos:end="29:51"><name pos:start="29:24" pos:end="29:32">vec_splat</name><argument_list pos:start="29:33" pos:end="29:51">(<argument pos:start="29:34" pos:end="29:47"><expr pos:start="29:34" pos:end="29:47"><operator pos:start="29:34" pos:end="29:34">(</operator><name pos:start="29:35" pos:end="29:41">vec_s16</name><operator pos:start="29:42" pos:end="29:42">)</operator><name pos:start="29:43" pos:end="29:47">vABCD</name></expr></argument>, <argument pos:start="29:50" pos:end="29:50"><expr pos:start="29:50" pos:end="29:50"><literal type="number" pos:start="29:50" pos:end="29:50">7</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:14"><expr pos:start="31:5" pos:end="31:13"><name pos:start="31:5" pos:end="31:13">LOAD_ZERO</name></expr>;</expr_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:68"><decl pos:start="33:5" pos:end="33:67"><type pos:start="33:5" pos:end="33:17"><specifier pos:start="33:5" pos:end="33:9">const</specifier> <name pos:start="33:11" pos:end="33:17">vec_s16</name></type> <name pos:start="33:19" pos:end="33:23">v32ss</name> <init pos:start="33:25" pos:end="33:67">= <expr pos:start="33:27" pos:end="33:67"><call pos:start="33:27" pos:end="33:67"><name pos:start="33:27" pos:end="33:32">vec_sl</name><argument_list pos:start="33:33" pos:end="33:67">(<argument pos:start="33:34" pos:end="33:49"><expr pos:start="33:34" pos:end="33:49"><call pos:start="33:34" pos:end="33:49"><name pos:start="33:34" pos:end="33:46">vec_splat_s16</name><argument_list pos:start="33:47" pos:end="33:49">(<argument pos:start="33:48" pos:end="33:48"><expr pos:start="33:48" pos:end="33:48"><literal type="number" pos:start="33:48" pos:end="33:48">1</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="33:51" pos:end="33:66"><expr pos:start="33:51" pos:end="33:66"><call pos:start="33:51" pos:end="33:66"><name pos:start="33:51" pos:end="33:63">vec_splat_u16</name><argument_list pos:start="33:64" pos:end="33:66">(<argument pos:start="33:65" pos:end="33:65"><expr pos:start="33:65" pos:end="33:65"><literal type="number" pos:start="33:65" pos:end="33:65">5</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:42"><decl pos:start="35:5" pos:end="35:41"><type pos:start="35:5" pos:end="35:17"><specifier pos:start="35:5" pos:end="35:9">const</specifier> <name pos:start="35:11" pos:end="35:17">vec_u16</name></type> <name pos:start="35:19" pos:end="35:22">v6us</name> <init pos:start="35:24" pos:end="35:41">= <expr pos:start="35:26" pos:end="35:41"><call pos:start="35:26" pos:end="35:41"><name pos:start="35:26" pos:end="35:38">vec_splat_u16</name><argument_list pos:start="35:39" pos:end="35:41">(<argument pos:start="35:40" pos:end="35:40"><expr pos:start="35:40" pos:end="35:40"><literal type="number" pos:start="35:40" pos:end="35:40">6</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:71"><decl pos:start="37:5" pos:end="37:70"><type pos:start="37:5" pos:end="37:16"><specifier pos:start="37:5" pos:end="37:12">register</specifier> <name pos:start="37:14" pos:end="37:16">int</name></type> <name pos:start="37:18" pos:end="37:27">loadSecond</name> <init pos:start="37:29" pos:end="37:70">= <expr pos:start="37:31" pos:end="37:70"><ternary pos:start="37:31" pos:end="37:70"><condition pos:start="37:31" pos:end="37:64"><expr pos:start="37:31" pos:end="37:62"><operator pos:start="37:31" pos:end="37:31">(</operator><operator pos:start="37:32" pos:end="37:32">(</operator><operator pos:start="37:33" pos:end="37:33">(</operator><name pos:start="37:34" pos:end="37:41">unsigned</name> <name pos:start="37:43" pos:end="37:46">long</name><operator pos:start="37:47" pos:end="37:47">)</operator><name pos:start="37:48" pos:end="37:50">src</name><operator pos:start="37:51" pos:end="37:51">)</operator> <operator pos:start="37:53" pos:end="37:53">%</operator> <literal type="number" pos:start="37:55" pos:end="37:56">16</literal><operator pos:start="37:57" pos:end="37:57">)</operator> <operator pos:start="37:59" pos:end="37:60">&lt;=</operator> <literal type="number" pos:start="37:62" pos:end="37:62">7</literal></expr> ?</condition><then pos:start="37:66" pos:end="37:66"> <expr pos:start="37:66" pos:end="37:66"><literal type="number" pos:start="37:66" pos:end="37:66">0</literal></expr> </then><else pos:start="37:68" pos:end="37:70">: <expr pos:start="37:70" pos:end="37:70"><literal type="number" pos:start="37:70" pos:end="37:70">1</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="39:5" pos:end="39:76"><decl pos:start="39:5" pos:end="39:75"><type pos:start="39:5" pos:end="39:16"><specifier pos:start="39:5" pos:end="39:12">register</specifier> <name pos:start="39:14" pos:end="39:16">int</name></type> <name pos:start="39:18" pos:end="39:31">reallyBadAlign</name> <init pos:start="39:33" pos:end="39:75">= <expr pos:start="39:35" pos:end="39:75"><ternary pos:start="39:35" pos:end="39:75"><condition pos:start="39:35" pos:end="39:69"><expr pos:start="39:35" pos:end="39:67"><operator pos:start="39:35" pos:end="39:35">(</operator><operator pos:start="39:36" pos:end="39:36">(</operator><operator pos:start="39:37" pos:end="39:37">(</operator><name pos:start="39:38" pos:end="39:45">unsigned</name> <name pos:start="39:47" pos:end="39:50">long</name><operator pos:start="39:51" pos:end="39:51">)</operator><name pos:start="39:52" pos:end="39:54">src</name><operator pos:start="39:55" pos:end="39:55">)</operator> <operator pos:start="39:57" pos:end="39:57">%</operator> <literal type="number" pos:start="39:59" pos:end="39:60">16</literal><operator pos:start="39:61" pos:end="39:61">)</operator> <operator pos:start="39:63" pos:end="39:64">==</operator> <literal type="number" pos:start="39:66" pos:end="39:67">15</literal></expr> ?</condition><then pos:start="39:71" pos:end="39:71"> <expr pos:start="39:71" pos:end="39:71"><literal type="number" pos:start="39:71" pos:end="39:71">1</literal></expr> </then><else pos:start="39:73" pos:end="39:75">: <expr pos:start="39:75" pos:end="39:75"><literal type="number" pos:start="39:75" pos:end="39:75">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="43:5" pos:end="43:50"><decl pos:start="43:5" pos:end="43:18"><type pos:start="43:5" pos:end="43:10"><name pos:start="43:5" pos:end="43:10">vec_u8</name></type> <name pos:start="43:12" pos:end="43:18">vsrcAuc</name></decl>, <decl pos:start="43:21" pos:end="43:27"><type ref="prev" pos:start="43:5" pos:end="43:10"/><name pos:start="43:21" pos:end="43:27">vsrcBuc</name></decl>, <decl pos:start="43:30" pos:end="43:38"><type ref="prev" pos:start="43:5" pos:end="43:10"/><name pos:start="43:30" pos:end="43:38">vsrcperm0</name></decl>, <decl pos:start="43:41" pos:end="43:49"><type ref="prev" pos:start="43:5" pos:end="43:10"/><name pos:start="43:41" pos:end="43:49">vsrcperm1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="45:5" pos:end="45:28"><decl pos:start="45:5" pos:end="45:18"><type pos:start="45:5" pos:end="45:10"><name pos:start="45:5" pos:end="45:10">vec_u8</name></type> <name pos:start="45:12" pos:end="45:18">vsrc0uc</name></decl>, <decl pos:start="45:21" pos:end="45:27"><type ref="prev" pos:start="45:5" pos:end="45:10"/><name pos:start="45:21" pos:end="45:27">vsrc1uc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="47:5" pos:end="47:31"><decl pos:start="47:5" pos:end="47:20"><type pos:start="47:5" pos:end="47:11"><name pos:start="47:5" pos:end="47:11">vec_s16</name></type> <name pos:start="47:13" pos:end="47:20">vsrc0ssH</name></decl>, <decl pos:start="47:23" pos:end="47:30"><type ref="prev" pos:start="47:5" pos:end="47:11"/><name pos:start="47:23" pos:end="47:30">vsrc1ssH</name></decl>;</decl_stmt>

    <decl_stmt pos:start="49:5" pos:end="49:37"><decl pos:start="49:5" pos:end="49:18"><type pos:start="49:5" pos:end="49:10"><name pos:start="49:5" pos:end="49:10">vec_u8</name></type> <name pos:start="49:12" pos:end="49:18">vsrcCuc</name></decl>, <decl pos:start="49:21" pos:end="49:27"><type ref="prev" pos:start="49:5" pos:end="49:10"/><name pos:start="49:21" pos:end="49:27">vsrc2uc</name></decl>, <decl pos:start="49:30" pos:end="49:36"><type ref="prev" pos:start="49:5" pos:end="49:10"/><name pos:start="49:30" pos:end="49:36">vsrc3uc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="51:5" pos:end="51:37"><decl pos:start="51:5" pos:end="51:20"><type pos:start="51:5" pos:end="51:11"><name pos:start="51:5" pos:end="51:11">vec_s16</name></type> <name pos:start="51:13" pos:end="51:20">vsrc2ssH</name></decl>, <decl pos:start="51:23" pos:end="51:30"><type ref="prev" pos:start="51:5" pos:end="51:11"/><name pos:start="51:23" pos:end="51:30">vsrc3ssH</name></decl>, <decl pos:start="51:33" pos:end="51:36"><type ref="prev" pos:start="51:5" pos:end="51:11"/><name pos:start="51:33" pos:end="51:36">psum</name></decl>;</decl_stmt>

    <decl_stmt pos:start="53:5" pos:end="53:36"><decl pos:start="53:5" pos:end="53:15"><type pos:start="53:5" pos:end="53:10"><name pos:start="53:5" pos:end="53:10">vec_u8</name></type> <name pos:start="53:12" pos:end="53:15">vdst</name></decl>, <decl pos:start="53:18" pos:end="53:22"><type ref="prev" pos:start="53:5" pos:end="53:10"/><name pos:start="53:18" pos:end="53:22">ppsum</name></decl>, <decl pos:start="53:25" pos:end="53:29"><type ref="prev" pos:start="53:5" pos:end="53:10"/><name pos:start="53:25" pos:end="53:29">vfdst</name></decl>, <decl pos:start="53:32" pos:end="53:35"><type ref="prev" pos:start="53:5" pos:end="53:10"/><name pos:start="53:32" pos:end="53:35">fsum</name></decl>;</decl_stmt>



  <expr_stmt pos:start="57:3" pos:end="57:58"><expr pos:start="57:3" pos:end="57:57"><call pos:start="57:3" pos:end="57:57"><name pos:start="57:3" pos:end="57:26">POWERPC_PERF_START_COUNT</name><argument_list pos:start="57:27" pos:end="57:57">(<argument pos:start="57:28" pos:end="57:53"><expr pos:start="57:28" pos:end="57:53"><name pos:start="57:28" pos:end="57:53">PREFIX_h264_chroma_mc8_num</name></expr></argument>, <argument pos:start="57:56" pos:end="57:56"><expr pos:start="57:56" pos:end="57:56"><literal type="number" pos:start="57:56" pos:end="57:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="61:5" pos:end="81:5"><if pos:start="61:5" pos:end="71:5">if <condition pos:start="61:8" pos:end="61:39">(<expr pos:start="61:9" pos:end="61:38"><operator pos:start="61:9" pos:end="61:9">(</operator><operator pos:start="61:10" pos:end="61:10">(</operator><name pos:start="61:11" pos:end="61:18">unsigned</name> <name pos:start="61:20" pos:end="61:23">long</name><operator pos:start="61:24" pos:end="61:24">)</operator><name pos:start="61:25" pos:end="61:27">dst</name><operator pos:start="61:28" pos:end="61:28">)</operator> <operator pos:start="61:30" pos:end="61:30">%</operator> <literal type="number" pos:start="61:32" pos:end="61:33">16</literal> <operator pos:start="61:35" pos:end="61:36">==</operator> <literal type="number" pos:start="61:38" pos:end="61:38">0</literal></expr>)</condition> <block pos:start="61:41" pos:end="71:5">{<block_content pos:start="63:9" pos:end="69:51">

        <expr_stmt pos:start="63:9" pos:end="69:51"><expr pos:start="63:9" pos:end="69:50"><name pos:start="63:9" pos:end="63:13">fperm</name> <operator pos:start="63:15" pos:end="63:15">=</operator> <operator pos:start="63:17" pos:end="63:17">(</operator><name pos:start="63:18" pos:end="63:23">vec_u8</name><operator pos:start="63:24" pos:end="63:24">)</operator><block pos:start="63:25" pos:end="69:50">{<expr pos:start="63:26" pos:end="63:29"><literal type="number" pos:start="63:26" pos:end="63:29">0x10</literal></expr>, <expr pos:start="63:32" pos:end="63:35"><literal type="number" pos:start="63:32" pos:end="63:35">0x11</literal></expr>, <expr pos:start="63:38" pos:end="63:41"><literal type="number" pos:start="63:38" pos:end="63:41">0x12</literal></expr>, <expr pos:start="63:44" pos:end="63:47"><literal type="number" pos:start="63:44" pos:end="63:47">0x13</literal></expr>,

                           <expr pos:start="65:28" pos:end="65:31"><literal type="number" pos:start="65:28" pos:end="65:31">0x14</literal></expr>, <expr pos:start="65:34" pos:end="65:37"><literal type="number" pos:start="65:34" pos:end="65:37">0x15</literal></expr>, <expr pos:start="65:40" pos:end="65:43"><literal type="number" pos:start="65:40" pos:end="65:43">0x16</literal></expr>, <expr pos:start="65:46" pos:end="65:49"><literal type="number" pos:start="65:46" pos:end="65:49">0x17</literal></expr>,

                           <expr pos:start="67:28" pos:end="67:31"><literal type="number" pos:start="67:28" pos:end="67:31">0x08</literal></expr>, <expr pos:start="67:34" pos:end="67:37"><literal type="number" pos:start="67:34" pos:end="67:37">0x09</literal></expr>, <expr pos:start="67:40" pos:end="67:43"><literal type="number" pos:start="67:40" pos:end="67:43">0x0A</literal></expr>, <expr pos:start="67:46" pos:end="67:49"><literal type="number" pos:start="67:46" pos:end="67:49">0x0B</literal></expr>,

                           <expr pos:start="69:28" pos:end="69:31"><literal type="number" pos:start="69:28" pos:end="69:31">0x0C</literal></expr>, <expr pos:start="69:34" pos:end="69:37"><literal type="number" pos:start="69:34" pos:end="69:37">0x0D</literal></expr>, <expr pos:start="69:40" pos:end="69:43"><literal type="number" pos:start="69:40" pos:end="69:43">0x0E</literal></expr>, <expr pos:start="69:46" pos:end="69:49"><literal type="number" pos:start="69:46" pos:end="69:49">0x0F</literal></expr>}</block></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="71:7" pos:end="81:5">else <block pos:start="71:12" pos:end="81:5">{<block_content pos:start="73:9" pos:end="79:51">

        <expr_stmt pos:start="73:9" pos:end="79:51"><expr pos:start="73:9" pos:end="79:50"><name pos:start="73:9" pos:end="73:13">fperm</name> <operator pos:start="73:15" pos:end="73:15">=</operator> <operator pos:start="73:17" pos:end="73:17">(</operator><name pos:start="73:18" pos:end="73:23">vec_u8</name><operator pos:start="73:24" pos:end="73:24">)</operator><block pos:start="73:25" pos:end="79:50">{<expr pos:start="73:26" pos:end="73:29"><literal type="number" pos:start="73:26" pos:end="73:29">0x00</literal></expr>, <expr pos:start="73:32" pos:end="73:35"><literal type="number" pos:start="73:32" pos:end="73:35">0x01</literal></expr>, <expr pos:start="73:38" pos:end="73:41"><literal type="number" pos:start="73:38" pos:end="73:41">0x02</literal></expr>, <expr pos:start="73:44" pos:end="73:47"><literal type="number" pos:start="73:44" pos:end="73:47">0x03</literal></expr>,

                           <expr pos:start="75:28" pos:end="75:31"><literal type="number" pos:start="75:28" pos:end="75:31">0x04</literal></expr>, <expr pos:start="75:34" pos:end="75:37"><literal type="number" pos:start="75:34" pos:end="75:37">0x05</literal></expr>, <expr pos:start="75:40" pos:end="75:43"><literal type="number" pos:start="75:40" pos:end="75:43">0x06</literal></expr>, <expr pos:start="75:46" pos:end="75:49"><literal type="number" pos:start="75:46" pos:end="75:49">0x07</literal></expr>,

                           <expr pos:start="77:28" pos:end="77:31"><literal type="number" pos:start="77:28" pos:end="77:31">0x18</literal></expr>, <expr pos:start="77:34" pos:end="77:37"><literal type="number" pos:start="77:34" pos:end="77:37">0x19</literal></expr>, <expr pos:start="77:40" pos:end="77:43"><literal type="number" pos:start="77:40" pos:end="77:43">0x1A</literal></expr>, <expr pos:start="77:46" pos:end="77:49"><literal type="number" pos:start="77:46" pos:end="77:49">0x1B</literal></expr>,

                           <expr pos:start="79:28" pos:end="79:31"><literal type="number" pos:start="79:28" pos:end="79:31">0x1C</literal></expr>, <expr pos:start="79:34" pos:end="79:37"><literal type="number" pos:start="79:34" pos:end="79:37">0x1D</literal></expr>, <expr pos:start="79:40" pos:end="79:43"><literal type="number" pos:start="79:40" pos:end="79:43">0x1E</literal></expr>, <expr pos:start="79:46" pos:end="79:49"><literal type="number" pos:start="79:46" pos:end="79:49">0x1F</literal></expr>}</block></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:29"><expr pos:start="85:5" pos:end="85:28"><name pos:start="85:5" pos:end="85:11">vsrcAuc</name> <operator pos:start="85:13" pos:end="85:13">=</operator> <call pos:start="85:15" pos:end="85:28"><name pos:start="85:15" pos:end="85:20">vec_ld</name><argument_list pos:start="85:21" pos:end="85:28">(<argument pos:start="85:22" pos:end="85:22"><expr pos:start="85:22" pos:end="85:22"><literal type="number" pos:start="85:22" pos:end="85:22">0</literal></expr></argument>, <argument pos:start="85:25" pos:end="85:27"><expr pos:start="85:25" pos:end="85:27"><name pos:start="85:25" pos:end="85:27">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="89:5" pos:end="91:34"><if pos:start="89:5" pos:end="91:34">if <condition pos:start="89:8" pos:end="89:19">(<expr pos:start="89:9" pos:end="89:18"><name pos:start="89:9" pos:end="89:18">loadSecond</name></expr>)</condition><block type="pseudo" pos:start="91:9" pos:end="91:34"><block_content pos:start="91:9" pos:end="91:34">

        <expr_stmt pos:start="91:9" pos:end="91:34"><expr pos:start="91:9" pos:end="91:33"><name pos:start="91:9" pos:end="91:15">vsrcBuc</name> <operator pos:start="91:17" pos:end="91:17">=</operator> <call pos:start="91:19" pos:end="91:33"><name pos:start="91:19" pos:end="91:24">vec_ld</name><argument_list pos:start="91:25" pos:end="91:33">(<argument pos:start="91:26" pos:end="91:27"><expr pos:start="91:26" pos:end="91:27"><literal type="number" pos:start="91:26" pos:end="91:27">16</literal></expr></argument>, <argument pos:start="91:30" pos:end="91:32"><expr pos:start="91:30" pos:end="91:32"><name pos:start="91:30" pos:end="91:32">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:33"><expr pos:start="93:5" pos:end="93:32"><name pos:start="93:5" pos:end="93:13">vsrcperm0</name> <operator pos:start="93:15" pos:end="93:15">=</operator> <call pos:start="93:17" pos:end="93:32"><name pos:start="93:17" pos:end="93:24">vec_lvsl</name><argument_list pos:start="93:25" pos:end="93:32">(<argument pos:start="93:26" pos:end="93:26"><expr pos:start="93:26" pos:end="93:26"><literal type="number" pos:start="93:26" pos:end="93:26">0</literal></expr></argument>, <argument pos:start="93:29" pos:end="93:31"><expr pos:start="93:29" pos:end="93:31"><name pos:start="93:29" pos:end="93:31">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:33"><expr pos:start="95:5" pos:end="95:32"><name pos:start="95:5" pos:end="95:13">vsrcperm1</name> <operator pos:start="95:15" pos:end="95:15">=</operator> <call pos:start="95:17" pos:end="95:32"><name pos:start="95:17" pos:end="95:24">vec_lvsl</name><argument_list pos:start="95:25" pos:end="95:32">(<argument pos:start="95:26" pos:end="95:26"><expr pos:start="95:26" pos:end="95:26"><literal type="number" pos:start="95:26" pos:end="95:26">1</literal></expr></argument>, <argument pos:start="95:29" pos:end="95:31"><expr pos:start="95:29" pos:end="95:31"><name pos:start="95:29" pos:end="95:31">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:52"><expr pos:start="99:5" pos:end="99:51"><name pos:start="99:5" pos:end="99:11">vsrc0uc</name> <operator pos:start="99:13" pos:end="99:13">=</operator> <call pos:start="99:15" pos:end="99:51"><name pos:start="99:15" pos:end="99:22">vec_perm</name><argument_list pos:start="99:23" pos:end="99:51">(<argument pos:start="99:24" pos:end="99:30"><expr pos:start="99:24" pos:end="99:30"><name pos:start="99:24" pos:end="99:30">vsrcAuc</name></expr></argument>, <argument pos:start="99:33" pos:end="99:39"><expr pos:start="99:33" pos:end="99:39"><name pos:start="99:33" pos:end="99:39">vsrcBuc</name></expr></argument>, <argument pos:start="99:42" pos:end="99:50"><expr pos:start="99:42" pos:end="99:50"><name pos:start="99:42" pos:end="99:50">vsrcperm0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="101:5" pos:end="107:56"><if pos:start="101:5" pos:end="103:26">if <condition pos:start="101:8" pos:end="101:23">(<expr pos:start="101:9" pos:end="101:22"><name pos:start="101:9" pos:end="101:22">reallyBadAlign</name></expr>)</condition><block type="pseudo" pos:start="103:9" pos:end="103:26"><block_content pos:start="103:9" pos:end="103:26">

        <expr_stmt pos:start="103:9" pos:end="103:26"><expr pos:start="103:9" pos:end="103:25"><name pos:start="103:9" pos:end="103:15">vsrc1uc</name> <operator pos:start="103:17" pos:end="103:17">=</operator> <name pos:start="103:19" pos:end="103:25">vsrcBuc</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="105:5" pos:end="107:56">else<block type="pseudo" pos:start="107:9" pos:end="107:56"><block_content pos:start="107:9" pos:end="107:56">

        <expr_stmt pos:start="107:9" pos:end="107:56"><expr pos:start="107:9" pos:end="107:55"><name pos:start="107:9" pos:end="107:15">vsrc1uc</name> <operator pos:start="107:17" pos:end="107:17">=</operator> <call pos:start="107:19" pos:end="107:55"><name pos:start="107:19" pos:end="107:26">vec_perm</name><argument_list pos:start="107:27" pos:end="107:55">(<argument pos:start="107:28" pos:end="107:34"><expr pos:start="107:28" pos:end="107:34"><name pos:start="107:28" pos:end="107:34">vsrcAuc</name></expr></argument>, <argument pos:start="107:37" pos:end="107:43"><expr pos:start="107:37" pos:end="107:43"><name pos:start="107:37" pos:end="107:43">vsrcBuc</name></expr></argument>, <argument pos:start="107:46" pos:end="107:54"><expr pos:start="107:46" pos:end="107:54"><name pos:start="107:46" pos:end="107:54">vsrcperm1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="111:5" pos:end="111:61"><expr pos:start="111:5" pos:end="111:60"><name pos:start="111:5" pos:end="111:12">vsrc0ssH</name> <operator pos:start="111:14" pos:end="111:14">=</operator> <operator pos:start="111:16" pos:end="111:16">(</operator><name pos:start="111:17" pos:end="111:23">vec_s16</name><operator pos:start="111:24" pos:end="111:24">)</operator><call pos:start="111:25" pos:end="111:60"><name pos:start="111:25" pos:end="111:34">vec_mergeh</name><argument_list pos:start="111:35" pos:end="111:60">(<argument pos:start="111:36" pos:end="111:43"><expr pos:start="111:36" pos:end="111:43"><name pos:start="111:36" pos:end="111:43">zero_u8v</name></expr></argument>,<argument pos:start="111:45" pos:end="111:59"><expr pos:start="111:45" pos:end="111:59"><operator pos:start="111:45" pos:end="111:45">(</operator><name pos:start="111:46" pos:end="111:51">vec_u8</name><operator pos:start="111:52" pos:end="111:52">)</operator><name pos:start="111:53" pos:end="111:59">vsrc0uc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:61"><expr pos:start="113:5" pos:end="113:60"><name pos:start="113:5" pos:end="113:12">vsrc1ssH</name> <operator pos:start="113:14" pos:end="113:14">=</operator> <operator pos:start="113:16" pos:end="113:16">(</operator><name pos:start="113:17" pos:end="113:23">vec_s16</name><operator pos:start="113:24" pos:end="113:24">)</operator><call pos:start="113:25" pos:end="113:60"><name pos:start="113:25" pos:end="113:34">vec_mergeh</name><argument_list pos:start="113:35" pos:end="113:60">(<argument pos:start="113:36" pos:end="113:43"><expr pos:start="113:36" pos:end="113:43"><name pos:start="113:36" pos:end="113:43">zero_u8v</name></expr></argument>,<argument pos:start="113:45" pos:end="113:59"><expr pos:start="113:45" pos:end="113:59"><operator pos:start="113:45" pos:end="113:45">(</operator><name pos:start="113:46" pos:end="113:51">vec_u8</name><operator pos:start="113:52" pos:end="113:52">)</operator><name pos:start="113:53" pos:end="113:59">vsrc1uc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="117:5" pos:end="255:5"><if pos:start="117:5" pos:end="163:5">if <condition pos:start="117:8" pos:end="117:16">(<expr pos:start="117:9" pos:end="117:15"><name pos:start="117:9" pos:end="117:15"><name pos:start="117:9" pos:end="117:12">ABCD</name><index pos:start="117:13" pos:end="117:15">[<expr pos:start="117:14" pos:end="117:14"><literal type="number" pos:start="117:14" pos:end="117:14">3</literal></expr>]</index></name></expr>)</condition> <block pos:start="117:18" pos:end="163:5">{<block_content pos:start="119:9" pos:end="161:9">

        <if_stmt pos:start="119:9" pos:end="161:9"><if pos:start="119:9" pos:end="135:9">if <condition pos:start="119:12" pos:end="119:24">(<expr pos:start="119:13" pos:end="119:23"><operator pos:start="119:13" pos:end="119:13">!</operator><name pos:start="119:14" pos:end="119:23">loadSecond</name></expr>)</condition> <block pos:start="119:26" pos:end="135:9">{<block_content pos:start="121:13" pos:end="133:13"><comment type="line" pos:start="119:27" pos:end="119:47">// -&gt; !reallyBadAlign</comment>

            <for pos:start="121:13" pos:end="133:13">for <control pos:start="121:17" pos:end="121:37">(<init pos:start="121:18" pos:end="121:24"><expr pos:start="121:18" pos:end="121:22"><name pos:start="121:18" pos:end="121:18">i</name> <operator pos:start="121:20" pos:end="121:20">=</operator> <literal type="number" pos:start="121:22" pos:end="121:22">0</literal></expr> ;</init> <condition pos:start="121:26" pos:end="121:32"><expr pos:start="121:26" pos:end="121:30"><name pos:start="121:26" pos:end="121:26">i</name> <operator pos:start="121:28" pos:end="121:28">&lt;</operator> <name pos:start="121:30" pos:end="121:30">h</name></expr> ;</condition> <incr pos:start="121:34" pos:end="121:36"><expr pos:start="121:34" pos:end="121:36"><name pos:start="121:34" pos:end="121:34">i</name><operator pos:start="121:35" pos:end="121:36">++</operator></expr></incr>)</control> <block pos:start="121:39" pos:end="133:13">{<block_content pos:start="123:17" pos:end="131:39">

                <expr_stmt pos:start="123:17" pos:end="123:50"><expr pos:start="123:17" pos:end="123:49"><name pos:start="123:17" pos:end="123:23">vsrcCuc</name> <operator pos:start="123:25" pos:end="123:25">=</operator> <call pos:start="123:27" pos:end="123:49"><name pos:start="123:27" pos:end="123:32">vec_ld</name><argument_list pos:start="123:33" pos:end="123:49">(<argument pos:start="123:34" pos:end="123:43"><expr pos:start="123:34" pos:end="123:43"><name pos:start="123:34" pos:end="123:39">stride</name> <operator pos:start="123:41" pos:end="123:41">+</operator> <literal type="number" pos:start="123:43" pos:end="123:43">0</literal></expr></argument>, <argument pos:start="123:46" pos:end="123:48"><expr pos:start="123:46" pos:end="123:48"><name pos:start="123:46" pos:end="123:48">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="125:17" pos:end="125:64"><expr pos:start="125:17" pos:end="125:63"><name pos:start="125:17" pos:end="125:23">vsrc2uc</name> <operator pos:start="125:25" pos:end="125:25">=</operator> <call pos:start="125:27" pos:end="125:63"><name pos:start="125:27" pos:end="125:34">vec_perm</name><argument_list pos:start="125:35" pos:end="125:63">(<argument pos:start="125:36" pos:end="125:42"><expr pos:start="125:36" pos:end="125:42"><name pos:start="125:36" pos:end="125:42">vsrcCuc</name></expr></argument>, <argument pos:start="125:45" pos:end="125:51"><expr pos:start="125:45" pos:end="125:51"><name pos:start="125:45" pos:end="125:51">vsrcCuc</name></expr></argument>, <argument pos:start="125:54" pos:end="125:62"><expr pos:start="125:54" pos:end="125:62"><name pos:start="125:54" pos:end="125:62">vsrcperm0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="127:17" pos:end="127:64"><expr pos:start="127:17" pos:end="127:63"><name pos:start="127:17" pos:end="127:23">vsrc3uc</name> <operator pos:start="127:25" pos:end="127:25">=</operator> <call pos:start="127:27" pos:end="127:63"><name pos:start="127:27" pos:end="127:34">vec_perm</name><argument_list pos:start="127:35" pos:end="127:63">(<argument pos:start="127:36" pos:end="127:42"><expr pos:start="127:36" pos:end="127:42"><name pos:start="127:36" pos:end="127:42">vsrcCuc</name></expr></argument>, <argument pos:start="127:45" pos:end="127:51"><expr pos:start="127:45" pos:end="127:51"><name pos:start="127:45" pos:end="127:51">vsrcCuc</name></expr></argument>, <argument pos:start="127:54" pos:end="127:62"><expr pos:start="127:54" pos:end="127:62"><name pos:start="127:54" pos:end="127:62">vsrcperm1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="131:17" pos:end="131:39"><expr pos:start="131:17" pos:end="131:39"><name pos:start="131:17" pos:end="131:39">CHROMA_MC8_ALTIVEC_CORE</name></expr></expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="135:11" pos:end="161:9">else <block pos:start="135:16" pos:end="161:9">{<block_content pos:start="137:13" pos:end="159:13">

            <decl_stmt pos:start="137:13" pos:end="137:27"><decl pos:start="137:13" pos:end="137:26"><type pos:start="137:13" pos:end="137:18"><name pos:start="137:13" pos:end="137:18">vec_u8</name></type> <name pos:start="137:20" pos:end="137:26">vsrcDuc</name></decl>;</decl_stmt>

            <for pos:start="139:13" pos:end="159:13">for <control pos:start="139:17" pos:end="139:37">(<init pos:start="139:18" pos:end="139:24"><expr pos:start="139:18" pos:end="139:22"><name pos:start="139:18" pos:end="139:18">i</name> <operator pos:start="139:20" pos:end="139:20">=</operator> <literal type="number" pos:start="139:22" pos:end="139:22">0</literal></expr> ;</init> <condition pos:start="139:26" pos:end="139:32"><expr pos:start="139:26" pos:end="139:30"><name pos:start="139:26" pos:end="139:26">i</name> <operator pos:start="139:28" pos:end="139:28">&lt;</operator> <name pos:start="139:30" pos:end="139:30">h</name></expr> ;</condition> <incr pos:start="139:34" pos:end="139:36"><expr pos:start="139:34" pos:end="139:36"><name pos:start="139:34" pos:end="139:34">i</name><operator pos:start="139:35" pos:end="139:36">++</operator></expr></incr>)</control> <block pos:start="139:39" pos:end="159:13">{<block_content pos:start="141:17" pos:end="157:39">

                <expr_stmt pos:start="141:17" pos:end="141:50"><expr pos:start="141:17" pos:end="141:49"><name pos:start="141:17" pos:end="141:23">vsrcCuc</name> <operator pos:start="141:25" pos:end="141:25">=</operator> <call pos:start="141:27" pos:end="141:49"><name pos:start="141:27" pos:end="141:32">vec_ld</name><argument_list pos:start="141:33" pos:end="141:49">(<argument pos:start="141:34" pos:end="141:43"><expr pos:start="141:34" pos:end="141:43"><name pos:start="141:34" pos:end="141:39">stride</name> <operator pos:start="141:41" pos:end="141:41">+</operator> <literal type="number" pos:start="141:43" pos:end="141:43">0</literal></expr></argument>, <argument pos:start="141:46" pos:end="141:48"><expr pos:start="141:46" pos:end="141:48"><name pos:start="141:46" pos:end="141:48">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="143:17" pos:end="143:51"><expr pos:start="143:17" pos:end="143:50"><name pos:start="143:17" pos:end="143:23">vsrcDuc</name> <operator pos:start="143:25" pos:end="143:25">=</operator> <call pos:start="143:27" pos:end="143:50"><name pos:start="143:27" pos:end="143:32">vec_ld</name><argument_list pos:start="143:33" pos:end="143:50">(<argument pos:start="143:34" pos:end="143:44"><expr pos:start="143:34" pos:end="143:44"><name pos:start="143:34" pos:end="143:39">stride</name> <operator pos:start="143:41" pos:end="143:41">+</operator> <literal type="number" pos:start="143:43" pos:end="143:44">16</literal></expr></argument>, <argument pos:start="143:47" pos:end="143:49"><expr pos:start="143:47" pos:end="143:49"><name pos:start="143:47" pos:end="143:49">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="145:17" pos:end="145:64"><expr pos:start="145:17" pos:end="145:63"><name pos:start="145:17" pos:end="145:23">vsrc2uc</name> <operator pos:start="145:25" pos:end="145:25">=</operator> <call pos:start="145:27" pos:end="145:63"><name pos:start="145:27" pos:end="145:34">vec_perm</name><argument_list pos:start="145:35" pos:end="145:63">(<argument pos:start="145:36" pos:end="145:42"><expr pos:start="145:36" pos:end="145:42"><name pos:start="145:36" pos:end="145:42">vsrcCuc</name></expr></argument>, <argument pos:start="145:45" pos:end="145:51"><expr pos:start="145:45" pos:end="145:51"><name pos:start="145:45" pos:end="145:51">vsrcDuc</name></expr></argument>, <argument pos:start="145:54" pos:end="145:62"><expr pos:start="145:54" pos:end="145:62"><name pos:start="145:54" pos:end="145:62">vsrcperm0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="147:17" pos:end="153:68"><if pos:start="147:17" pos:end="149:38">if <condition pos:start="147:20" pos:end="147:35">(<expr pos:start="147:21" pos:end="147:34"><name pos:start="147:21" pos:end="147:34">reallyBadAlign</name></expr>)</condition><block type="pseudo" pos:start="149:21" pos:end="149:38"><block_content pos:start="149:21" pos:end="149:38">

                    <expr_stmt pos:start="149:21" pos:end="149:38"><expr pos:start="149:21" pos:end="149:37"><name pos:start="149:21" pos:end="149:27">vsrc3uc</name> <operator pos:start="149:29" pos:end="149:29">=</operator> <name pos:start="149:31" pos:end="149:37">vsrcDuc</name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="151:17" pos:end="153:68">else<block type="pseudo" pos:start="153:21" pos:end="153:68"><block_content pos:start="153:21" pos:end="153:68">

                    <expr_stmt pos:start="153:21" pos:end="153:68"><expr pos:start="153:21" pos:end="153:67"><name pos:start="153:21" pos:end="153:27">vsrc3uc</name> <operator pos:start="153:29" pos:end="153:29">=</operator> <call pos:start="153:31" pos:end="153:67"><name pos:start="153:31" pos:end="153:38">vec_perm</name><argument_list pos:start="153:39" pos:end="153:67">(<argument pos:start="153:40" pos:end="153:46"><expr pos:start="153:40" pos:end="153:46"><name pos:start="153:40" pos:end="153:46">vsrcCuc</name></expr></argument>, <argument pos:start="153:49" pos:end="153:55"><expr pos:start="153:49" pos:end="153:55"><name pos:start="153:49" pos:end="153:55">vsrcDuc</name></expr></argument>, <argument pos:start="153:58" pos:end="153:66"><expr pos:start="153:58" pos:end="153:66"><name pos:start="153:58" pos:end="153:66">vsrcperm1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



                <expr_stmt pos:start="157:17" pos:end="157:39"><expr pos:start="157:17" pos:end="157:39"><name pos:start="157:17" pos:end="157:39">CHROMA_MC8_ALTIVEC_CORE</name></expr></expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="163:7" pos:end="255:5">else <block pos:start="163:12" pos:end="255:5">{<block_content pos:start="165:9" pos:end="253:9">

        <decl_stmt pos:start="165:9" pos:end="165:43"><decl pos:start="165:9" pos:end="165:42"><type pos:start="165:9" pos:end="165:21"><specifier pos:start="165:9" pos:end="165:13">const</specifier> <name pos:start="165:15" pos:end="165:21">vec_s16</name></type> <name pos:start="165:23" pos:end="165:24">vE</name> <init pos:start="165:26" pos:end="165:42">= <expr pos:start="165:28" pos:end="165:42"><call pos:start="165:28" pos:end="165:42"><name pos:start="165:28" pos:end="165:34">vec_add</name><argument_list pos:start="165:35" pos:end="165:42">(<argument pos:start="165:36" pos:end="165:37"><expr pos:start="165:36" pos:end="165:37"><name pos:start="165:36" pos:end="165:37">vB</name></expr></argument>, <argument pos:start="165:40" pos:end="165:41"><expr pos:start="165:40" pos:end="165:41"><name pos:start="165:40" pos:end="165:41">vC</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="167:9" pos:end="253:9"><if pos:start="167:9" pos:end="207:9">if <condition pos:start="167:12" pos:end="167:20">(<expr pos:start="167:13" pos:end="167:19"><name pos:start="167:13" pos:end="167:19"><name pos:start="167:13" pos:end="167:16">ABCD</name><index pos:start="167:17" pos:end="167:19">[<expr pos:start="167:18" pos:end="167:18"><literal type="number" pos:start="167:18" pos:end="167:18">2</literal></expr>]</index></name></expr>)</condition> <block pos:start="167:22" pos:end="207:9">{<block_content pos:start="169:13" pos:end="205:13"> <comment type="line" pos:start="167:24" pos:end="167:39">// x == 0 B == 0</comment>

            <if_stmt pos:start="169:13" pos:end="205:13"><if pos:start="169:13" pos:end="185:13">if <condition pos:start="169:16" pos:end="169:28">(<expr pos:start="169:17" pos:end="169:27"><operator pos:start="169:17" pos:end="169:17">!</operator><name pos:start="169:18" pos:end="169:27">loadSecond</name></expr>)</condition> <block pos:start="169:30" pos:end="185:13">{<block_content pos:start="171:17" pos:end="183:17"><comment type="line" pos:start="169:31" pos:end="169:51">// -&gt; !reallyBadAlign</comment>

                <for pos:start="171:17" pos:end="183:17">for <control pos:start="171:21" pos:end="171:41">(<init pos:start="171:22" pos:end="171:28"><expr pos:start="171:22" pos:end="171:26"><name pos:start="171:22" pos:end="171:22">i</name> <operator pos:start="171:24" pos:end="171:24">=</operator> <literal type="number" pos:start="171:26" pos:end="171:26">0</literal></expr> ;</init> <condition pos:start="171:30" pos:end="171:36"><expr pos:start="171:30" pos:end="171:34"><name pos:start="171:30" pos:end="171:30">i</name> <operator pos:start="171:32" pos:end="171:32">&lt;</operator> <name pos:start="171:34" pos:end="171:34">h</name></expr> ;</condition> <incr pos:start="171:38" pos:end="171:40"><expr pos:start="171:38" pos:end="171:40"><name pos:start="171:38" pos:end="171:38">i</name><operator pos:start="171:39" pos:end="171:40">++</operator></expr></incr>)</control> <block pos:start="171:43" pos:end="183:17">{<block_content pos:start="173:21" pos:end="181:38">

                    <expr_stmt pos:start="173:21" pos:end="173:54"><expr pos:start="173:21" pos:end="173:53"><name pos:start="173:21" pos:end="173:27">vsrcCuc</name> <operator pos:start="173:29" pos:end="173:29">=</operator> <call pos:start="173:31" pos:end="173:53"><name pos:start="173:31" pos:end="173:36">vec_ld</name><argument_list pos:start="173:37" pos:end="173:53">(<argument pos:start="173:38" pos:end="173:47"><expr pos:start="173:38" pos:end="173:47"><name pos:start="173:38" pos:end="173:43">stride</name> <operator pos:start="173:45" pos:end="173:45">+</operator> <literal type="number" pos:start="173:47" pos:end="173:47">0</literal></expr></argument>, <argument pos:start="173:50" pos:end="173:52"><expr pos:start="173:50" pos:end="173:52"><name pos:start="173:50" pos:end="173:52">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="175:21" pos:end="175:68"><expr pos:start="175:21" pos:end="175:67"><name pos:start="175:21" pos:end="175:27">vsrc1uc</name> <operator pos:start="175:29" pos:end="175:29">=</operator> <call pos:start="175:31" pos:end="175:67"><name pos:start="175:31" pos:end="175:38">vec_perm</name><argument_list pos:start="175:39" pos:end="175:67">(<argument pos:start="175:40" pos:end="175:46"><expr pos:start="175:40" pos:end="175:46"><name pos:start="175:40" pos:end="175:46">vsrcCuc</name></expr></argument>, <argument pos:start="175:49" pos:end="175:55"><expr pos:start="175:49" pos:end="175:55"><name pos:start="175:49" pos:end="175:55">vsrcCuc</name></expr></argument>, <argument pos:start="175:58" pos:end="175:66"><expr pos:start="175:58" pos:end="175:66"><name pos:start="175:58" pos:end="175:66">vsrcperm0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <decl_stmt pos:start="177:21" pos:end="181:38"><decl pos:start="177:21" pos:end="181:37"><type pos:start="177:21" pos:end="177:50"><name pos:start="177:21" pos:end="177:50">CHROMA_MC8_ALTIVEC_CORE_SIMPLE</name></type>



                    <name pos:start="181:21" pos:end="181:27">vsrc0uc</name> <init pos:start="181:29" pos:end="181:37">= <expr pos:start="181:31" pos:end="181:37"><name pos:start="181:31" pos:end="181:37">vsrc1uc</name></expr></init></decl>;</decl_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if> <else pos:start="185:15" pos:end="205:13">else <block pos:start="185:20" pos:end="205:13">{<block_content pos:start="187:17" pos:end="203:17">

                <decl_stmt pos:start="187:17" pos:end="187:31"><decl pos:start="187:17" pos:end="187:30"><type pos:start="187:17" pos:end="187:22"><name pos:start="187:17" pos:end="187:22">vec_u8</name></type> <name pos:start="187:24" pos:end="187:30">vsrcDuc</name></decl>;</decl_stmt>

                <for pos:start="189:17" pos:end="203:17">for <control pos:start="189:21" pos:end="189:41">(<init pos:start="189:22" pos:end="189:28"><expr pos:start="189:22" pos:end="189:26"><name pos:start="189:22" pos:end="189:22">i</name> <operator pos:start="189:24" pos:end="189:24">=</operator> <literal type="number" pos:start="189:26" pos:end="189:26">0</literal></expr> ;</init> <condition pos:start="189:30" pos:end="189:36"><expr pos:start="189:30" pos:end="189:34"><name pos:start="189:30" pos:end="189:30">i</name> <operator pos:start="189:32" pos:end="189:32">&lt;</operator> <name pos:start="189:34" pos:end="189:34">h</name></expr> ;</condition> <incr pos:start="189:38" pos:end="189:40"><expr pos:start="189:38" pos:end="189:40"><name pos:start="189:38" pos:end="189:38">i</name><operator pos:start="189:39" pos:end="189:40">++</operator></expr></incr>)</control> <block pos:start="189:43" pos:end="203:17">{<block_content pos:start="191:21" pos:end="201:38">

                    <expr_stmt pos:start="191:21" pos:end="191:54"><expr pos:start="191:21" pos:end="191:53"><name pos:start="191:21" pos:end="191:27">vsrcCuc</name> <operator pos:start="191:29" pos:end="191:29">=</operator> <call pos:start="191:31" pos:end="191:53"><name pos:start="191:31" pos:end="191:36">vec_ld</name><argument_list pos:start="191:37" pos:end="191:53">(<argument pos:start="191:38" pos:end="191:47"><expr pos:start="191:38" pos:end="191:47"><name pos:start="191:38" pos:end="191:43">stride</name> <operator pos:start="191:45" pos:end="191:45">+</operator> <literal type="number" pos:start="191:47" pos:end="191:47">0</literal></expr></argument>, <argument pos:start="191:50" pos:end="191:52"><expr pos:start="191:50" pos:end="191:52"><name pos:start="191:50" pos:end="191:52">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="193:21" pos:end="193:55"><expr pos:start="193:21" pos:end="193:54"><name pos:start="193:21" pos:end="193:27">vsrcDuc</name> <operator pos:start="193:29" pos:end="193:29">=</operator> <call pos:start="193:31" pos:end="193:54"><name pos:start="193:31" pos:end="193:36">vec_ld</name><argument_list pos:start="193:37" pos:end="193:54">(<argument pos:start="193:38" pos:end="193:48"><expr pos:start="193:38" pos:end="193:48"><name pos:start="193:38" pos:end="193:43">stride</name> <operator pos:start="193:45" pos:end="193:45">+</operator> <literal type="number" pos:start="193:47" pos:end="193:48">15</literal></expr></argument>, <argument pos:start="193:51" pos:end="193:53"><expr pos:start="193:51" pos:end="193:53"><name pos:start="193:51" pos:end="193:53">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="195:21" pos:end="195:68"><expr pos:start="195:21" pos:end="195:67"><name pos:start="195:21" pos:end="195:27">vsrc1uc</name> <operator pos:start="195:29" pos:end="195:29">=</operator> <call pos:start="195:31" pos:end="195:67"><name pos:start="195:31" pos:end="195:38">vec_perm</name><argument_list pos:start="195:39" pos:end="195:67">(<argument pos:start="195:40" pos:end="195:46"><expr pos:start="195:40" pos:end="195:46"><name pos:start="195:40" pos:end="195:46">vsrcCuc</name></expr></argument>, <argument pos:start="195:49" pos:end="195:55"><expr pos:start="195:49" pos:end="195:55"><name pos:start="195:49" pos:end="195:55">vsrcDuc</name></expr></argument>, <argument pos:start="195:58" pos:end="195:66"><expr pos:start="195:58" pos:end="195:66"><name pos:start="195:58" pos:end="195:66">vsrcperm0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <decl_stmt pos:start="197:21" pos:end="201:38"><decl pos:start="197:21" pos:end="201:37"><type pos:start="197:21" pos:end="197:50"><name pos:start="197:21" pos:end="197:50">CHROMA_MC8_ALTIVEC_CORE_SIMPLE</name></type>



                    <name pos:start="201:21" pos:end="201:27">vsrc0uc</name> <init pos:start="201:29" pos:end="201:37">= <expr pos:start="201:31" pos:end="201:37"><name pos:start="201:31" pos:end="201:37">vsrc1uc</name></expr></init></decl>;</decl_stmt>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="207:11" pos:end="253:9">else <block pos:start="207:16" pos:end="253:9">{<block_content pos:start="209:13" pos:end="251:13"> <comment type="line" pos:start="207:18" pos:end="207:33">// y == 0 C == 0</comment>

            <if_stmt pos:start="209:13" pos:end="251:13"><if pos:start="209:13" pos:end="225:13">if <condition pos:start="209:16" pos:end="209:28">(<expr pos:start="209:17" pos:end="209:27"><operator pos:start="209:17" pos:end="209:17">!</operator><name pos:start="209:18" pos:end="209:27">loadSecond</name></expr>)</condition> <block pos:start="209:30" pos:end="225:13">{<block_content pos:start="211:17" pos:end="223:17"><comment type="line" pos:start="209:31" pos:end="209:51">// -&gt; !reallyBadAlign</comment>

                <for pos:start="211:17" pos:end="223:17">for <control pos:start="211:21" pos:end="211:41">(<init pos:start="211:22" pos:end="211:28"><expr pos:start="211:22" pos:end="211:26"><name pos:start="211:22" pos:end="211:22">i</name> <operator pos:start="211:24" pos:end="211:24">=</operator> <literal type="number" pos:start="211:26" pos:end="211:26">0</literal></expr> ;</init> <condition pos:start="211:30" pos:end="211:36"><expr pos:start="211:30" pos:end="211:34"><name pos:start="211:30" pos:end="211:30">i</name> <operator pos:start="211:32" pos:end="211:32">&lt;</operator> <name pos:start="211:34" pos:end="211:34">h</name></expr> ;</condition> <incr pos:start="211:38" pos:end="211:40"><expr pos:start="211:38" pos:end="211:40"><name pos:start="211:38" pos:end="211:38">i</name><operator pos:start="211:39" pos:end="211:40">++</operator></expr></incr>)</control> <block pos:start="211:43" pos:end="223:17">{<block_content pos:start="213:21" pos:end="221:50">

                    <expr_stmt pos:start="213:21" pos:end="213:45"><expr pos:start="213:21" pos:end="213:44"><name pos:start="213:21" pos:end="213:27">vsrcCuc</name> <operator pos:start="213:29" pos:end="213:29">=</operator> <call pos:start="213:31" pos:end="213:44"><name pos:start="213:31" pos:end="213:36">vec_ld</name><argument_list pos:start="213:37" pos:end="213:44">(<argument pos:start="213:38" pos:end="213:38"><expr pos:start="213:38" pos:end="213:38"><literal type="number" pos:start="213:38" pos:end="213:38">0</literal></expr></argument>, <argument pos:start="213:41" pos:end="213:43"><expr pos:start="213:41" pos:end="213:43"><name pos:start="213:41" pos:end="213:43">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="215:21" pos:end="215:68"><expr pos:start="215:21" pos:end="215:67"><name pos:start="215:21" pos:end="215:27">vsrc0uc</name> <operator pos:start="215:29" pos:end="215:29">=</operator> <call pos:start="215:31" pos:end="215:67"><name pos:start="215:31" pos:end="215:38">vec_perm</name><argument_list pos:start="215:39" pos:end="215:67">(<argument pos:start="215:40" pos:end="215:46"><expr pos:start="215:40" pos:end="215:46"><name pos:start="215:40" pos:end="215:46">vsrcCuc</name></expr></argument>, <argument pos:start="215:49" pos:end="215:55"><expr pos:start="215:49" pos:end="215:55"><name pos:start="215:49" pos:end="215:55">vsrcCuc</name></expr></argument>, <argument pos:start="215:58" pos:end="215:66"><expr pos:start="215:58" pos:end="215:66"><name pos:start="215:58" pos:end="215:66">vsrcperm0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="217:21" pos:end="217:68"><expr pos:start="217:21" pos:end="217:67"><name pos:start="217:21" pos:end="217:27">vsrc1uc</name> <operator pos:start="217:29" pos:end="217:29">=</operator> <call pos:start="217:31" pos:end="217:67"><name pos:start="217:31" pos:end="217:38">vec_perm</name><argument_list pos:start="217:39" pos:end="217:67">(<argument pos:start="217:40" pos:end="217:46"><expr pos:start="217:40" pos:end="217:46"><name pos:start="217:40" pos:end="217:46">vsrcCuc</name></expr></argument>, <argument pos:start="217:49" pos:end="217:55"><expr pos:start="217:49" pos:end="217:55"><name pos:start="217:49" pos:end="217:55">vsrcCuc</name></expr></argument>, <argument pos:start="217:58" pos:end="217:66"><expr pos:start="217:58" pos:end="217:66"><name pos:start="217:58" pos:end="217:66">vsrcperm1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="221:21" pos:end="221:50"><expr pos:start="221:21" pos:end="221:50"><name pos:start="221:21" pos:end="221:50">CHROMA_MC8_ALTIVEC_CORE_SIMPLE</name></expr></expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if> <else pos:start="225:15" pos:end="251:13">else <block pos:start="225:20" pos:end="251:13">{<block_content pos:start="227:17" pos:end="249:17">

                <decl_stmt pos:start="227:17" pos:end="227:31"><decl pos:start="227:17" pos:end="227:30"><type pos:start="227:17" pos:end="227:22"><name pos:start="227:17" pos:end="227:22">vec_u8</name></type> <name pos:start="227:24" pos:end="227:30">vsrcDuc</name></decl>;</decl_stmt>

                <for pos:start="229:17" pos:end="249:17">for <control pos:start="229:21" pos:end="229:41">(<init pos:start="229:22" pos:end="229:28"><expr pos:start="229:22" pos:end="229:26"><name pos:start="229:22" pos:end="229:22">i</name> <operator pos:start="229:24" pos:end="229:24">=</operator> <literal type="number" pos:start="229:26" pos:end="229:26">0</literal></expr> ;</init> <condition pos:start="229:30" pos:end="229:36"><expr pos:start="229:30" pos:end="229:34"><name pos:start="229:30" pos:end="229:30">i</name> <operator pos:start="229:32" pos:end="229:32">&lt;</operator> <name pos:start="229:34" pos:end="229:34">h</name></expr> ;</condition> <incr pos:start="229:38" pos:end="229:40"><expr pos:start="229:38" pos:end="229:40"><name pos:start="229:38" pos:end="229:38">i</name><operator pos:start="229:39" pos:end="229:40">++</operator></expr></incr>)</control> <block pos:start="229:43" pos:end="249:17">{<block_content pos:start="231:21" pos:end="247:50">

                    <expr_stmt pos:start="231:21" pos:end="231:45"><expr pos:start="231:21" pos:end="231:44"><name pos:start="231:21" pos:end="231:27">vsrcCuc</name> <operator pos:start="231:29" pos:end="231:29">=</operator> <call pos:start="231:31" pos:end="231:44"><name pos:start="231:31" pos:end="231:36">vec_ld</name><argument_list pos:start="231:37" pos:end="231:44">(<argument pos:start="231:38" pos:end="231:38"><expr pos:start="231:38" pos:end="231:38"><literal type="number" pos:start="231:38" pos:end="231:38">0</literal></expr></argument>, <argument pos:start="231:41" pos:end="231:43"><expr pos:start="231:41" pos:end="231:43"><name pos:start="231:41" pos:end="231:43">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="233:21" pos:end="233:46"><expr pos:start="233:21" pos:end="233:45"><name pos:start="233:21" pos:end="233:27">vsrcDuc</name> <operator pos:start="233:29" pos:end="233:29">=</operator> <call pos:start="233:31" pos:end="233:45"><name pos:start="233:31" pos:end="233:36">vec_ld</name><argument_list pos:start="233:37" pos:end="233:45">(<argument pos:start="233:38" pos:end="233:39"><expr pos:start="233:38" pos:end="233:39"><literal type="number" pos:start="233:38" pos:end="233:39">15</literal></expr></argument>, <argument pos:start="233:42" pos:end="233:44"><expr pos:start="233:42" pos:end="233:44"><name pos:start="233:42" pos:end="233:44">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="235:21" pos:end="235:68"><expr pos:start="235:21" pos:end="235:67"><name pos:start="235:21" pos:end="235:27">vsrc0uc</name> <operator pos:start="235:29" pos:end="235:29">=</operator> <call pos:start="235:31" pos:end="235:67"><name pos:start="235:31" pos:end="235:38">vec_perm</name><argument_list pos:start="235:39" pos:end="235:67">(<argument pos:start="235:40" pos:end="235:46"><expr pos:start="235:40" pos:end="235:46"><name pos:start="235:40" pos:end="235:46">vsrcCuc</name></expr></argument>, <argument pos:start="235:49" pos:end="235:55"><expr pos:start="235:49" pos:end="235:55"><name pos:start="235:49" pos:end="235:55">vsrcDuc</name></expr></argument>, <argument pos:start="235:58" pos:end="235:66"><expr pos:start="235:58" pos:end="235:66"><name pos:start="235:58" pos:end="235:66">vsrcperm0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="237:21" pos:end="243:72"><if pos:start="237:21" pos:end="239:42">if <condition pos:start="237:24" pos:end="237:39">(<expr pos:start="237:25" pos:end="237:38"><name pos:start="237:25" pos:end="237:38">reallyBadAlign</name></expr>)</condition><block type="pseudo" pos:start="239:25" pos:end="239:42"><block_content pos:start="239:25" pos:end="239:42">

                        <expr_stmt pos:start="239:25" pos:end="239:42"><expr pos:start="239:25" pos:end="239:41"><name pos:start="239:25" pos:end="239:31">vsrc1uc</name> <operator pos:start="239:33" pos:end="239:33">=</operator> <name pos:start="239:35" pos:end="239:41">vsrcDuc</name></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="241:21" pos:end="243:72">else<block type="pseudo" pos:start="243:25" pos:end="243:72"><block_content pos:start="243:25" pos:end="243:72">

                        <expr_stmt pos:start="243:25" pos:end="243:72"><expr pos:start="243:25" pos:end="243:71"><name pos:start="243:25" pos:end="243:31">vsrc1uc</name> <operator pos:start="243:33" pos:end="243:33">=</operator> <call pos:start="243:35" pos:end="243:71"><name pos:start="243:35" pos:end="243:42">vec_perm</name><argument_list pos:start="243:43" pos:end="243:71">(<argument pos:start="243:44" pos:end="243:50"><expr pos:start="243:44" pos:end="243:50"><name pos:start="243:44" pos:end="243:50">vsrcCuc</name></expr></argument>, <argument pos:start="243:53" pos:end="243:59"><expr pos:start="243:53" pos:end="243:59"><name pos:start="243:53" pos:end="243:59">vsrcDuc</name></expr></argument>, <argument pos:start="243:62" pos:end="243:70"><expr pos:start="243:62" pos:end="243:70"><name pos:start="243:62" pos:end="243:70">vsrcperm1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



                    <expr_stmt pos:start="247:21" pos:end="247:50"><expr pos:start="247:21" pos:end="247:50"><name pos:start="247:21" pos:end="247:50">CHROMA_MC8_ALTIVEC_CORE_SIMPLE</name></expr></expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="257:5" pos:end="257:59"><expr pos:start="257:5" pos:end="257:58"><call pos:start="257:5" pos:end="257:58"><name pos:start="257:5" pos:end="257:27">POWERPC_PERF_STOP_COUNT</name><argument_list pos:start="257:28" pos:end="257:58">(<argument pos:start="257:29" pos:end="257:54"><expr pos:start="257:29" pos:end="257:54"><name pos:start="257:29" pos:end="257:54">PREFIX_h264_chroma_mc8_num</name></expr></argument>, <argument pos:start="257:57" pos:end="257:57"><expr pos:start="257:57" pos:end="257:57"><literal type="number" pos:start="257:57" pos:end="257:57">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
