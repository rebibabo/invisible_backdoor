<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15891.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:23">BlockDriverAIOCB</name> <modifier pos:start="1:25" pos:end="1:25">*</modifier></type><name pos:start="1:26" pos:end="1:39">raw_aio_submit</name><parameter_list pos:start="1:40" pos:end="5:62">(<parameter pos:start="1:41" pos:end="1:60"><decl pos:start="1:41" pos:end="1:60"><type pos:start="1:41" pos:end="1:60"><name pos:start="1:41" pos:end="1:56">BlockDriverState</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:60">bs</name></decl></parameter>,

        <parameter pos:start="3:9" pos:end="3:26"><decl pos:start="3:9" pos:end="3:26"><type pos:start="3:9" pos:end="3:26"><name pos:start="3:9" pos:end="3:15">int64_t</name></type> <name pos:start="3:17" pos:end="3:26">sector_num</name></decl></parameter>, <parameter pos:start="3:29" pos:end="3:46"><decl pos:start="3:29" pos:end="3:46"><type pos:start="3:29" pos:end="3:46"><name pos:start="3:29" pos:end="3:40">QEMUIOVector</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:46">qiov</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:62"><decl pos:start="3:49" pos:end="3:62"><type pos:start="3:49" pos:end="3:62"><name pos:start="3:49" pos:end="3:51">int</name></type> <name pos:start="3:53" pos:end="3:62">nb_sectors</name></decl></parameter>,

        <parameter pos:start="5:9" pos:end="5:37"><decl pos:start="5:9" pos:end="5:37"><type pos:start="5:9" pos:end="5:37"><name pos:start="5:9" pos:end="5:33">BlockDriverCompletionFunc</name> <modifier pos:start="5:35" pos:end="5:35">*</modifier></type><name pos:start="5:36" pos:end="5:37">cb</name></decl></parameter>, <parameter pos:start="5:40" pos:end="5:51"><decl pos:start="5:40" pos:end="5:51"><type pos:start="5:40" pos:end="5:51"><name pos:start="5:40" pos:end="5:43">void</name> <modifier pos:start="5:45" pos:end="5:45">*</modifier></type><name pos:start="5:46" pos:end="5:51">opaque</name></decl></parameter>, <parameter pos:start="5:54" pos:end="5:61"><decl pos:start="5:54" pos:end="5:61"><type pos:start="5:54" pos:end="5:61"><name pos:start="5:54" pos:end="5:56">int</name></type> <name pos:start="5:58" pos:end="5:61">type</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="55:1">{<block_content pos:start="9:5" pos:end="53:41">

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">BDRVRawState</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:19">s</name> <init pos:start="9:21" pos:end="9:32">= <expr pos:start="9:23" pos:end="9:32"><name pos:start="9:23" pos:end="9:32"><name pos:start="9:23" pos:end="9:24">bs</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:32">opaque</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:20"><if pos:start="13:5" pos:end="15:20">if <condition pos:start="13:8" pos:end="13:24">(<expr pos:start="13:9" pos:end="13:23"><call pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:15">fd_open</name><argument_list pos:start="13:16" pos:end="13:19">(<argument pos:start="13:17" pos:end="13:18"><expr pos:start="13:17" pos:end="13:18"><name pos:start="13:17" pos:end="13:18">bs</name></expr></argument>)</argument_list></call> <operator pos:start="13:21" pos:end="13:21">&lt;</operator> <literal type="number" pos:start="13:23" pos:end="13:23">0</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:20"><block_content pos:start="15:9" pos:end="15:20">

        <return pos:start="15:9" pos:end="15:20">return <expr pos:start="15:16" pos:end="15:19"><name pos:start="15:16" pos:end="15:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="19:5" pos:end="27:7">/*

     * If O_DIRECT is used the buffer needs to be aligned on a sector

     * boundary.  Check if this is the case or tell the low-level

     * driver that it needs to copy the buffer.

     */</comment>

    <if_stmt pos:start="29:5" pos:end="47:5"><if pos:start="29:5" pos:end="47:5">if <condition pos:start="29:8" pos:end="29:42">(<expr pos:start="29:9" pos:end="29:41"><operator pos:start="29:9" pos:end="29:9">(</operator><name pos:start="29:10" pos:end="29:23"><name pos:start="29:10" pos:end="29:11">bs</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:23">open_flags</name></name> <operator pos:start="29:25" pos:end="29:25">&amp;</operator> <name pos:start="29:27" pos:end="29:40">BDRV_O_NOCACHE</name><operator pos:start="29:41" pos:end="29:41">)</operator></expr>)</condition> <block pos:start="29:44" pos:end="47:5">{<block_content pos:start="31:9" pos:end="45:9">

        <if_stmt pos:start="31:9" pos:end="45:9"><if pos:start="31:9" pos:end="37:9">if <condition pos:start="31:12" pos:end="31:39">(<expr pos:start="31:13" pos:end="31:38"><operator pos:start="31:13" pos:end="31:13">!</operator><call pos:start="31:14" pos:end="31:38"><name pos:start="31:14" pos:end="31:28">qiov_is_aligned</name><argument_list pos:start="31:29" pos:end="31:38">(<argument pos:start="31:30" pos:end="31:31"><expr pos:start="31:30" pos:end="31:31"><name pos:start="31:30" pos:end="31:31">bs</name></expr></argument>, <argument pos:start="31:34" pos:end="31:37"><expr pos:start="31:34" pos:end="31:37"><name pos:start="31:34" pos:end="31:37">qiov</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:41" pos:end="37:9">{<block_content pos:start="33:13" pos:end="36:0">

            <expr_stmt pos:start="33:13" pos:end="36:0"><expr pos:start="33:13" pos:end="33:39"><name pos:start="33:13" pos:end="33:16">type</name> <operator pos:start="33:18" pos:end="33:19">|=</operator> <name pos:start="33:21" pos:end="33:39">QEMU_AIO_MISALIGNED</name></expr>;</expr_stmt>

<cpp:ifdef pos:start="35:1" pos:end="35:23">#<cpp:directive pos:start="35:2" pos:end="35:6">ifdef</cpp:directive> <name pos:start="35:8" pos:end="35:23">CONFIG_LINUX_AIO</name></cpp:ifdef>

        </block_content>}</block></if> <if type="elseif" pos:start="37:11" pos:end="45:9">else if <condition pos:start="37:19" pos:end="37:30">(<expr pos:start="37:20" pos:end="37:29"><name pos:start="37:20" pos:end="37:29"><name pos:start="37:20" pos:end="37:20">s</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:29">use_aio</name></name></expr>)</condition> <block pos:start="37:32" pos:end="45:9">{<block_content pos:start="39:13" pos:end="44:0">

            <return pos:start="39:13" pos:end="44:0">return <expr pos:start="39:20" pos:end="41:60"><call pos:start="39:20" pos:end="41:60"><name pos:start="39:20" pos:end="39:30">laio_submit</name><argument_list pos:start="39:31" pos:end="41:60">(<argument pos:start="39:32" pos:end="39:33"><expr pos:start="39:32" pos:end="39:33"><name pos:start="39:32" pos:end="39:33">bs</name></expr></argument>, <argument pos:start="39:36" pos:end="39:45"><expr pos:start="39:36" pos:end="39:45"><name pos:start="39:36" pos:end="39:45"><name pos:start="39:36" pos:end="39:36">s</name><operator pos:start="39:37" pos:end="39:38">-&gt;</operator><name pos:start="39:39" pos:end="39:45">aio_ctx</name></name></expr></argument>, <argument pos:start="39:48" pos:end="39:52"><expr pos:start="39:48" pos:end="39:52"><name pos:start="39:48" pos:end="39:52"><name pos:start="39:48" pos:end="39:48">s</name><operator pos:start="39:49" pos:end="39:50">-&gt;</operator><name pos:start="39:51" pos:end="39:52">fd</name></name></expr></argument>, <argument pos:start="39:55" pos:end="39:64"><expr pos:start="39:55" pos:end="39:64"><name pos:start="39:55" pos:end="39:64">sector_num</name></expr></argument>, <argument pos:start="39:67" pos:end="39:70"><expr pos:start="39:67" pos:end="39:70"><name pos:start="39:67" pos:end="39:70">qiov</name></expr></argument>,

                               <argument pos:start="41:32" pos:end="41:41"><expr pos:start="41:32" pos:end="41:41"><name pos:start="41:32" pos:end="41:41">nb_sectors</name></expr></argument>, <argument pos:start="41:44" pos:end="41:45"><expr pos:start="41:44" pos:end="41:45"><name pos:start="41:44" pos:end="41:45">cb</name></expr></argument>, <argument pos:start="41:48" pos:end="41:53"><expr pos:start="41:48" pos:end="41:53"><name pos:start="41:48" pos:end="41:53">opaque</name></expr></argument>, <argument pos:start="41:56" pos:end="41:59"><expr pos:start="41:56" pos:end="41:59"><name pos:start="41:56" pos:end="41:59">type</name></expr></argument>)</argument_list></call></expr>;</return>

<cpp:endif pos:start="43:1" pos:end="43:6">#<cpp:directive pos:start="43:2" pos:end="43:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="51:5" pos:end="53:41">return <expr pos:start="51:12" pos:end="53:40"><call pos:start="51:12" pos:end="53:40"><name pos:start="51:12" pos:end="51:22">paio_submit</name><argument_list pos:start="51:23" pos:end="53:40">(<argument pos:start="51:24" pos:end="51:25"><expr pos:start="51:24" pos:end="51:25"><name pos:start="51:24" pos:end="51:25">bs</name></expr></argument>, <argument pos:start="51:28" pos:end="51:32"><expr pos:start="51:28" pos:end="51:32"><name pos:start="51:28" pos:end="51:32"><name pos:start="51:28" pos:end="51:28">s</name><operator pos:start="51:29" pos:end="51:30">-&gt;</operator><name pos:start="51:31" pos:end="51:32">fd</name></name></expr></argument>, <argument pos:start="51:35" pos:end="51:44"><expr pos:start="51:35" pos:end="51:44"><name pos:start="51:35" pos:end="51:44">sector_num</name></expr></argument>, <argument pos:start="51:47" pos:end="51:50"><expr pos:start="51:47" pos:end="51:50"><name pos:start="51:47" pos:end="51:50">qiov</name></expr></argument>, <argument pos:start="51:53" pos:end="51:62"><expr pos:start="51:53" pos:end="51:62"><name pos:start="51:53" pos:end="51:62">nb_sectors</name></expr></argument>,

                       <argument pos:start="53:24" pos:end="53:25"><expr pos:start="53:24" pos:end="53:25"><name pos:start="53:24" pos:end="53:25">cb</name></expr></argument>, <argument pos:start="53:28" pos:end="53:33"><expr pos:start="53:28" pos:end="53:33"><name pos:start="53:28" pos:end="53:33">opaque</name></expr></argument>, <argument pos:start="53:36" pos:end="53:39"><expr pos:start="53:36" pos:end="53:39"><name pos:start="53:36" pos:end="53:39">type</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
