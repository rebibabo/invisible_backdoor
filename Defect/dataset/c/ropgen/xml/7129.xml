<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7129.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">pcm_read_header</name><parameter_list pos:start="1:27" pos:end="1:46">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:44"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="111:1">{<block_content pos:start="5:5" pos:end="109:13">

    <decl_stmt pos:start="5:5" pos:end="5:46"><decl pos:start="5:5" pos:end="5:45"><type pos:start="5:5" pos:end="5:28"><name pos:start="5:5" pos:end="5:26">PCMAudioDemuxerContext</name> <modifier pos:start="5:28" pos:end="5:28">*</modifier></type><name pos:start="5:29" pos:end="5:30">s1</name> <init pos:start="5:32" pos:end="5:45">= <expr pos:start="5:34" pos:end="5:45"><name pos:start="5:34" pos:end="5:45"><name pos:start="5:34" pos:end="5:34">s</name><operator pos:start="5:35" pos:end="5:36">-&gt;</operator><name pos:start="5:37" pos:end="5:45">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:22">mime_type</name> <init pos:start="9:24" pos:end="9:29">= <expr pos:start="9:26" pos:end="9:29"><name pos:start="9:26" pos:end="9:29">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:38"><expr pos:start="13:5" pos:end="13:37"><name pos:start="13:5" pos:end="13:6">st</name> <operator pos:start="13:8" pos:end="13:8">=</operator> <call pos:start="13:10" pos:end="13:37"><name pos:start="13:10" pos:end="13:28">avformat_new_stream</name><argument_list pos:start="13:29" pos:end="13:37">(<argument pos:start="13:30" pos:end="13:30"><expr pos:start="13:30" pos:end="13:30"><name pos:start="13:30" pos:end="13:30">s</name></expr></argument>, <argument pos:start="13:33" pos:end="13:36"><expr pos:start="13:33" pos:end="13:36"><name pos:start="13:33" pos:end="13:36">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="17:31"><if pos:start="15:5" pos:end="17:31">if <condition pos:start="15:8" pos:end="15:12">(<expr pos:start="15:9" pos:end="15:11"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:11">st</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:31"><block_content pos:start="17:9" pos:end="17:31">

        <return pos:start="17:9" pos:end="17:31">return <expr pos:start="17:16" pos:end="17:30"><call pos:start="17:16" pos:end="17:30"><name pos:start="17:16" pos:end="17:22">AVERROR</name><argument_list pos:start="17:23" pos:end="17:30">(<argument pos:start="17:24" pos:end="17:29"><expr pos:start="17:24" pos:end="17:29"><name pos:start="17:24" pos:end="17:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>





    <expr_stmt pos:start="23:5" pos:end="23:51"><expr pos:start="23:5" pos:end="23:50"><name pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:6">st</name><operator pos:start="23:7" pos:end="23:8">-&gt;</operator><name pos:start="23:9" pos:end="23:16">codecpar</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:28">codec_type</name></name>  <operator pos:start="23:31" pos:end="23:31">=</operator> <name pos:start="23:33" pos:end="23:50">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:57"><expr pos:start="25:5" pos:end="25:56"><name pos:start="25:5" pos:end="25:26"><name pos:start="25:5" pos:end="25:6">st</name><operator pos:start="25:7" pos:end="25:8">-&gt;</operator><name pos:start="25:9" pos:end="25:16">codecpar</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:26">codec_id</name></name>    <operator pos:start="25:31" pos:end="25:31">=</operator> <name pos:start="25:33" pos:end="25:56"><name pos:start="25:33" pos:end="25:33">s</name><operator pos:start="25:34" pos:end="25:35">-&gt;</operator><name pos:start="25:36" pos:end="25:42">iformat</name><operator pos:start="25:43" pos:end="25:44">-&gt;</operator><name pos:start="25:45" pos:end="25:56">raw_codec_id</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:48"><expr pos:start="27:5" pos:end="27:47"><name pos:start="27:5" pos:end="27:29"><name pos:start="27:5" pos:end="27:6">st</name><operator pos:start="27:7" pos:end="27:8">-&gt;</operator><name pos:start="27:9" pos:end="27:16">codecpar</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:29">sample_rate</name></name> <operator pos:start="27:31" pos:end="27:31">=</operator> <name pos:start="27:33" pos:end="27:47"><name pos:start="27:33" pos:end="27:34">s1</name><operator pos:start="27:35" pos:end="27:36">-&gt;</operator><name pos:start="27:37" pos:end="27:47">sample_rate</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:45"><expr pos:start="29:5" pos:end="29:44"><name pos:start="29:5" pos:end="29:26"><name pos:start="29:5" pos:end="29:6">st</name><operator pos:start="29:7" pos:end="29:8">-&gt;</operator><name pos:start="29:9" pos:end="29:16">codecpar</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:26">channels</name></name>    <operator pos:start="29:31" pos:end="29:31">=</operator> <name pos:start="29:33" pos:end="29:44"><name pos:start="29:33" pos:end="29:34">s1</name><operator pos:start="29:35" pos:end="29:36">-&gt;</operator><name pos:start="29:37" pos:end="29:44">channels</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:71"><expr pos:start="33:5" pos:end="33:70"><call pos:start="33:5" pos:end="33:70"><name pos:start="33:5" pos:end="33:14">av_opt_get</name><argument_list pos:start="33:15" pos:end="33:70">(<argument pos:start="33:16" pos:end="33:20"><expr pos:start="33:16" pos:end="33:20"><name pos:start="33:16" pos:end="33:20"><name pos:start="33:16" pos:end="33:16">s</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:20">pb</name></name></expr></argument>, <argument pos:start="33:23" pos:end="33:33"><expr pos:start="33:23" pos:end="33:33"><literal type="string" pos:start="33:23" pos:end="33:33">"mime_type"</literal></expr></argument>, <argument pos:start="33:36" pos:end="33:57"><expr pos:start="33:36" pos:end="33:57"><name pos:start="33:36" pos:end="33:57">AV_OPT_SEARCH_CHILDREN</name></expr></argument>, <argument pos:start="33:60" pos:end="33:69"><expr pos:start="33:60" pos:end="33:69"><operator pos:start="33:60" pos:end="33:60">&amp;</operator><name pos:start="33:61" pos:end="33:69">mime_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="86:5"><if pos:start="35:5" pos:end="86:5">if <condition pos:start="35:8" pos:end="35:43">(<expr pos:start="35:9" pos:end="35:42"><name pos:start="35:9" pos:end="35:17">mime_type</name> <operator pos:start="35:19" pos:end="35:20">&amp;&amp;</operator> <name pos:start="35:22" pos:end="35:42"><name pos:start="35:22" pos:end="35:22">s</name><operator pos:start="35:23" pos:end="35:24">-&gt;</operator><name pos:start="35:25" pos:end="35:31">iformat</name><operator pos:start="35:32" pos:end="35:33">-&gt;</operator><name pos:start="35:34" pos:end="35:42">mime_type</name></name></expr>)</condition> <block pos:start="35:45" pos:end="86:5">{<block_content pos:start="37:9" pos:end="84:9">

        <decl_stmt pos:start="37:9" pos:end="37:35"><decl pos:start="37:9" pos:end="37:20"><type pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">int</name></type> <name pos:start="37:13" pos:end="37:16">rate</name> <init pos:start="37:18" pos:end="37:20">= <expr pos:start="37:20" pos:end="37:20"><literal type="number" pos:start="37:20" pos:end="37:20">0</literal></expr></init></decl>, <decl pos:start="37:23" pos:end="37:34"><type ref="prev" pos:start="37:9" pos:end="37:11"/><name pos:start="37:23" pos:end="37:30">channels</name> <init pos:start="37:32" pos:end="37:34">= <expr pos:start="37:34" pos:end="37:34"><literal type="number" pos:start="37:34" pos:end="37:34">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="39:9" pos:end="39:51"><decl pos:start="39:9" pos:end="39:50"><type pos:start="39:9" pos:end="39:14"><name pos:start="39:9" pos:end="39:14">size_t</name></type> <name pos:start="39:16" pos:end="39:18">len</name> <init pos:start="39:20" pos:end="39:50">= <expr pos:start="39:22" pos:end="39:50"><call pos:start="39:22" pos:end="39:50"><name pos:start="39:22" pos:end="39:27">strlen</name><argument_list pos:start="39:28" pos:end="39:50">(<argument pos:start="39:29" pos:end="39:49"><expr pos:start="39:29" pos:end="39:49"><name pos:start="39:29" pos:end="39:49"><name pos:start="39:29" pos:end="39:29">s</name><operator pos:start="39:30" pos:end="39:31">-&gt;</operator><name pos:start="39:32" pos:end="39:38">iformat</name><operator pos:start="39:39" pos:end="39:40">-&gt;</operator><name pos:start="39:41" pos:end="39:49">mime_type</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="41:9" pos:end="84:9"><if pos:start="41:9" pos:end="84:9">if <condition pos:start="41:12" pos:end="41:60">(<expr pos:start="41:13" pos:end="41:59"><operator pos:start="41:13" pos:end="41:13">!</operator><call pos:start="41:14" pos:end="41:59"><name pos:start="41:14" pos:end="41:20">strncmp</name><argument_list pos:start="41:21" pos:end="41:59">(<argument pos:start="41:22" pos:end="41:42"><expr pos:start="41:22" pos:end="41:42"><name pos:start="41:22" pos:end="41:42"><name pos:start="41:22" pos:end="41:22">s</name><operator pos:start="41:23" pos:end="41:24">-&gt;</operator><name pos:start="41:25" pos:end="41:31">iformat</name><operator pos:start="41:32" pos:end="41:33">-&gt;</operator><name pos:start="41:34" pos:end="41:42">mime_type</name></name></expr></argument>, <argument pos:start="41:45" pos:end="41:53"><expr pos:start="41:45" pos:end="41:53"><name pos:start="41:45" pos:end="41:53">mime_type</name></expr></argument>, <argument pos:start="41:56" pos:end="41:58"><expr pos:start="41:56" pos:end="41:58"><name pos:start="41:56" pos:end="41:58">len</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:62" pos:end="84:9">{<block_content pos:start="43:13" pos:end="82:50">

            <decl_stmt pos:start="43:13" pos:end="43:47"><decl pos:start="43:13" pos:end="43:46"><type pos:start="43:13" pos:end="43:21"><name pos:start="43:13" pos:end="43:19">uint8_t</name> <modifier pos:start="43:21" pos:end="43:21">*</modifier></type><name pos:start="43:22" pos:end="43:28">options</name> <init pos:start="43:30" pos:end="43:46">= <expr pos:start="43:32" pos:end="43:46"><name pos:start="43:32" pos:end="43:40">mime_type</name> <operator pos:start="43:42" pos:end="43:42">+</operator> <name pos:start="43:44" pos:end="43:46">len</name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:36"><expr pos:start="45:13" pos:end="45:35"><name pos:start="45:13" pos:end="45:15">len</name> <operator pos:start="45:17" pos:end="45:17">=</operator> <call pos:start="45:19" pos:end="45:35"><name pos:start="45:19" pos:end="45:24">strlen</name><argument_list pos:start="45:25" pos:end="45:35">(<argument pos:start="45:26" pos:end="45:34"><expr pos:start="45:26" pos:end="45:34"><name pos:start="45:26" pos:end="45:34">mime_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <while pos:start="47:13" pos:end="63:13">while <condition pos:start="47:19" pos:end="47:45">(<expr pos:start="47:20" pos:end="47:44"><name pos:start="47:20" pos:end="47:26">options</name> <operator pos:start="47:28" pos:end="47:28">&lt;</operator> <name pos:start="47:30" pos:end="47:38">mime_type</name> <operator pos:start="47:40" pos:end="47:40">+</operator> <name pos:start="47:42" pos:end="47:44">len</name></expr>)</condition> <block pos:start="47:47" pos:end="63:13">{<block_content pos:start="49:17" pos:end="61:63">

                <expr_stmt pos:start="49:17" pos:end="49:47"><expr pos:start="49:17" pos:end="49:46"><name pos:start="49:17" pos:end="49:23">options</name> <operator pos:start="49:25" pos:end="49:25">=</operator> <call pos:start="49:27" pos:end="49:46"><name pos:start="49:27" pos:end="49:32">strstr</name><argument_list pos:start="49:33" pos:end="49:46">(<argument pos:start="49:34" pos:end="49:40"><expr pos:start="49:34" pos:end="49:40"><name pos:start="49:34" pos:end="49:40">options</name></expr></argument>, <argument pos:start="49:43" pos:end="49:45"><expr pos:start="49:43" pos:end="49:45"><literal type="string" pos:start="49:43" pos:end="49:45">";"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="51:17" pos:end="53:26"><if pos:start="51:17" pos:end="53:26">if <condition pos:start="51:20" pos:end="51:31">(<expr pos:start="51:21" pos:end="51:30"><operator pos:start="51:21" pos:end="51:21">!</operator><name pos:start="51:22" pos:end="51:28">options</name><operator pos:start="51:29" pos:end="51:30">++</operator></expr>)</condition><block type="pseudo" pos:start="53:21" pos:end="53:26"><block_content pos:start="53:21" pos:end="53:26">

                    <break pos:start="53:21" pos:end="53:26">break;</break></block_content></block></if></if_stmt>

                <if_stmt pos:start="55:17" pos:end="57:59"><if pos:start="55:17" pos:end="57:59">if <condition pos:start="55:20" pos:end="55:26">(<expr pos:start="55:21" pos:end="55:25"><operator pos:start="55:21" pos:end="55:21">!</operator><name pos:start="55:22" pos:end="55:25">rate</name></expr>)</condition><block type="pseudo" pos:start="57:21" pos:end="57:59"><block_content pos:start="57:21" pos:end="57:59">

                    <expr_stmt pos:start="57:21" pos:end="57:59"><expr pos:start="57:21" pos:end="57:58"><call pos:start="57:21" pos:end="57:58"><name pos:start="57:21" pos:end="57:26">sscanf</name><argument_list pos:start="57:27" pos:end="57:58">(<argument pos:start="57:28" pos:end="57:34"><expr pos:start="57:28" pos:end="57:34"><name pos:start="57:28" pos:end="57:34">options</name></expr></argument>, <argument pos:start="57:37" pos:end="57:46"><expr pos:start="57:37" pos:end="57:46"><literal type="string" pos:start="57:37" pos:end="57:46">" rate=%d"</literal></expr></argument>,     <argument pos:start="57:53" pos:end="57:57"><expr pos:start="57:53" pos:end="57:57"><operator pos:start="57:53" pos:end="57:53">&amp;</operator><name pos:start="57:54" pos:end="57:57">rate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="59:17" pos:end="61:63"><if pos:start="59:17" pos:end="61:63">if <condition pos:start="59:20" pos:end="59:30">(<expr pos:start="59:21" pos:end="59:29"><operator pos:start="59:21" pos:end="59:21">!</operator><name pos:start="59:22" pos:end="59:29">channels</name></expr>)</condition><block type="pseudo" pos:start="61:21" pos:end="61:63"><block_content pos:start="61:21" pos:end="61:63">

                    <expr_stmt pos:start="61:21" pos:end="61:63"><expr pos:start="61:21" pos:end="61:62"><call pos:start="61:21" pos:end="61:62"><name pos:start="61:21" pos:end="61:26">sscanf</name><argument_list pos:start="61:27" pos:end="61:62">(<argument pos:start="61:28" pos:end="61:34"><expr pos:start="61:28" pos:end="61:34"><name pos:start="61:28" pos:end="61:34">options</name></expr></argument>, <argument pos:start="61:37" pos:end="61:50"><expr pos:start="61:37" pos:end="61:50"><literal type="string" pos:start="61:37" pos:end="61:50">" channels=%d"</literal></expr></argument>, <argument pos:start="61:53" pos:end="61:61"><expr pos:start="61:53" pos:end="61:61"><operator pos:start="61:53" pos:end="61:53">&amp;</operator><name pos:start="61:54" pos:end="61:61">channels</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></while>

            <if_stmt pos:start="65:13" pos:end="76:13"><if pos:start="65:13" pos:end="76:13">if <condition pos:start="65:16" pos:end="65:26">(<expr pos:start="65:17" pos:end="65:25"><name pos:start="65:17" pos:end="65:20">rate</name> <operator pos:start="65:22" pos:end="65:23">&lt;=</operator> <literal type="number" pos:start="65:25" pos:end="65:25">0</literal></expr>)</condition> <block pos:start="65:28" pos:end="76:13">{<block_content pos:start="67:17" pos:end="74:43">

                <expr_stmt pos:start="67:17" pos:end="71:34"><expr pos:start="67:17" pos:end="71:33"><call pos:start="67:17" pos:end="71:33"><name pos:start="67:17" pos:end="67:22">av_log</name><argument_list pos:start="67:23" pos:end="71:33">(<argument pos:start="67:24" pos:end="67:24"><expr pos:start="67:24" pos:end="67:24"><name pos:start="67:24" pos:end="67:24">s</name></expr></argument>, <argument pos:start="67:27" pos:end="67:38"><expr pos:start="67:27" pos:end="67:38"><name pos:start="67:27" pos:end="67:38">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="69:24" pos:end="69:72"><expr pos:start="69:24" pos:end="69:72"><literal type="string" pos:start="69:24" pos:end="69:72">"Invalid sample_rate found in mime_type \"%s\"\n"</literal></expr></argument>,

                       <argument pos:start="71:24" pos:end="71:32"><expr pos:start="71:24" pos:end="71:32"><name pos:start="71:24" pos:end="71:32">mime_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


                <return pos:start="74:17" pos:end="74:43">return <expr pos:start="74:24" pos:end="74:42"><name pos:start="74:24" pos:end="74:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="78:13" pos:end="78:45"><expr pos:start="78:13" pos:end="78:44"><name pos:start="78:13" pos:end="78:37"><name pos:start="78:13" pos:end="78:14">st</name><operator pos:start="78:15" pos:end="78:16">-&gt;</operator><name pos:start="78:17" pos:end="78:24">codecpar</name><operator pos:start="78:25" pos:end="78:26">-&gt;</operator><name pos:start="78:27" pos:end="78:37">sample_rate</name></name> <operator pos:start="78:39" pos:end="78:39">=</operator> <name pos:start="78:41" pos:end="78:44">rate</name></expr>;</expr_stmt>

            <if_stmt pos:start="80:13" pos:end="82:50"><if pos:start="80:13" pos:end="82:50">if <condition pos:start="80:16" pos:end="80:29">(<expr pos:start="80:17" pos:end="80:28"><name pos:start="80:17" pos:end="80:24">channels</name> <operator pos:start="80:26" pos:end="80:26">&gt;</operator> <literal type="number" pos:start="80:28" pos:end="80:28">0</literal></expr>)</condition><block type="pseudo" pos:start="82:17" pos:end="82:50"><block_content pos:start="82:17" pos:end="82:50">

                <expr_stmt pos:start="82:17" pos:end="82:50"><expr pos:start="82:17" pos:end="82:49"><name pos:start="82:17" pos:end="82:38"><name pos:start="82:17" pos:end="82:18">st</name><operator pos:start="82:19" pos:end="82:20">-&gt;</operator><name pos:start="82:21" pos:end="82:28">codecpar</name><operator pos:start="82:29" pos:end="82:30">-&gt;</operator><name pos:start="82:31" pos:end="82:38">channels</name></name> <operator pos:start="82:40" pos:end="82:40">=</operator> <name pos:start="82:42" pos:end="82:49">channels</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>




    <expr_stmt pos:start="91:5" pos:end="93:55"><expr pos:start="91:5" pos:end="93:54"><name pos:start="91:5" pos:end="91:39"><name pos:start="91:5" pos:end="91:6">st</name><operator pos:start="91:7" pos:end="91:8">-&gt;</operator><name pos:start="91:9" pos:end="91:16">codecpar</name><operator pos:start="91:17" pos:end="91:18">-&gt;</operator><name pos:start="91:19" pos:end="91:39">bits_per_coded_sample</name></name> <operator pos:start="91:41" pos:end="91:41">=</operator>

        <call pos:start="93:9" pos:end="93:54"><name pos:start="93:9" pos:end="93:30">av_get_bits_per_sample</name><argument_list pos:start="93:31" pos:end="93:54">(<argument pos:start="93:32" pos:end="93:53"><expr pos:start="93:32" pos:end="93:53"><name pos:start="93:32" pos:end="93:53"><name pos:start="93:32" pos:end="93:33">st</name><operator pos:start="93:34" pos:end="93:35">-&gt;</operator><name pos:start="93:36" pos:end="93:43">codecpar</name><operator pos:start="93:44" pos:end="93:45">-&gt;</operator><name pos:start="93:46" pos:end="93:53">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:56"><expr pos:start="97:5" pos:end="97:55"><call pos:start="97:5" pos:end="97:55"><name pos:start="97:5" pos:end="97:14">av_assert0</name><argument_list pos:start="97:15" pos:end="97:55">(<argument pos:start="97:16" pos:end="97:54"><expr pos:start="97:16" pos:end="97:54"><name pos:start="97:16" pos:end="97:50"><name pos:start="97:16" pos:end="97:17">st</name><operator pos:start="97:18" pos:end="97:19">-&gt;</operator><name pos:start="97:20" pos:end="97:27">codecpar</name><operator pos:start="97:28" pos:end="97:29">-&gt;</operator><name pos:start="97:30" pos:end="97:50">bits_per_coded_sample</name></name> <operator pos:start="97:52" pos:end="97:52">&gt;</operator> <literal type="number" pos:start="97:54" pos:end="97:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="101:5" pos:end="103:73"><expr pos:start="101:5" pos:end="103:72"><name pos:start="101:5" pos:end="101:29"><name pos:start="101:5" pos:end="101:6">st</name><operator pos:start="101:7" pos:end="101:8">-&gt;</operator><name pos:start="101:9" pos:end="101:16">codecpar</name><operator pos:start="101:17" pos:end="101:18">-&gt;</operator><name pos:start="101:19" pos:end="101:29">block_align</name></name> <operator pos:start="101:31" pos:end="101:31">=</operator>

        <name pos:start="103:9" pos:end="103:43"><name pos:start="103:9" pos:end="103:10">st</name><operator pos:start="103:11" pos:end="103:12">-&gt;</operator><name pos:start="103:13" pos:end="103:20">codecpar</name><operator pos:start="103:21" pos:end="103:22">-&gt;</operator><name pos:start="103:23" pos:end="103:43">bits_per_coded_sample</name></name> <operator pos:start="103:45" pos:end="103:45">*</operator> <name pos:start="103:47" pos:end="103:68"><name pos:start="103:47" pos:end="103:48">st</name><operator pos:start="103:49" pos:end="103:50">-&gt;</operator><name pos:start="103:51" pos:end="103:58">codecpar</name><operator pos:start="103:59" pos:end="103:60">-&gt;</operator><name pos:start="103:61" pos:end="103:68">channels</name></name> <operator pos:start="103:70" pos:end="103:70">/</operator> <literal type="number" pos:start="103:72" pos:end="103:72">8</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="107:5" pos:end="107:62"><expr pos:start="107:5" pos:end="107:61"><call pos:start="107:5" pos:end="107:61"><name pos:start="107:5" pos:end="107:23">avpriv_set_pts_info</name><argument_list pos:start="107:24" pos:end="107:61">(<argument pos:start="107:25" pos:end="107:26"><expr pos:start="107:25" pos:end="107:26"><name pos:start="107:25" pos:end="107:26">st</name></expr></argument>, <argument pos:start="107:29" pos:end="107:30"><expr pos:start="107:29" pos:end="107:30"><literal type="number" pos:start="107:29" pos:end="107:30">64</literal></expr></argument>, <argument pos:start="107:33" pos:end="107:33"><expr pos:start="107:33" pos:end="107:33"><literal type="number" pos:start="107:33" pos:end="107:33">1</literal></expr></argument>, <argument pos:start="107:36" pos:end="107:60"><expr pos:start="107:36" pos:end="107:60"><name pos:start="107:36" pos:end="107:60"><name pos:start="107:36" pos:end="107:37">st</name><operator pos:start="107:38" pos:end="107:39">-&gt;</operator><name pos:start="107:40" pos:end="107:47">codecpar</name><operator pos:start="107:48" pos:end="107:49">-&gt;</operator><name pos:start="107:50" pos:end="107:60">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="109:5" pos:end="109:13">return <expr pos:start="109:12" pos:end="109:12"><literal type="number" pos:start="109:12" pos:end="109:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
