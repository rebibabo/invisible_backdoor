<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20251.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">ssize_t</name></type> <name pos:start="1:16" pos:end="1:37">block_crypto_init_func</name><parameter_list pos:start="1:38" pos:end="7:51">(<parameter pos:start="1:39" pos:end="1:57"><decl pos:start="1:39" pos:end="1:57"><type pos:start="1:39" pos:end="1:57"><name pos:start="1:39" pos:end="1:50">QCryptoBlock</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:57">block</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:54"><decl pos:start="3:39" pos:end="3:54"><type pos:start="3:39" pos:end="3:54"><name pos:start="3:39" pos:end="3:44">size_t</name></type> <name pos:start="3:46" pos:end="3:54">headerlen</name></decl></parameter>,

                                      <parameter pos:start="5:39" pos:end="5:50"><decl pos:start="5:39" pos:end="5:50"><type pos:start="5:39" pos:end="5:50"><name pos:start="5:39" pos:end="5:43">Error</name> <modifier pos:start="5:45" pos:end="5:45">*</modifier><modifier pos:start="5:46" pos:end="5:46">*</modifier></type><name pos:start="5:47" pos:end="5:50">errp</name></decl></parameter>,

                                      <parameter pos:start="7:39" pos:end="7:50"><decl pos:start="7:39" pos:end="7:50"><type pos:start="7:39" pos:end="7:50"><name pos:start="7:39" pos:end="7:42">void</name> <modifier pos:start="7:44" pos:end="7:44">*</modifier></type><name pos:start="7:45" pos:end="7:50">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="55:1">{<block_content pos:start="11:5" pos:end="53:13">

    <decl_stmt pos:start="11:5" pos:end="11:48"><decl pos:start="11:5" pos:end="11:47"><type pos:start="11:5" pos:end="11:34"><name pos:start="11:5" pos:end="11:32"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:32">BlockCryptoCreateData</name></name> <modifier pos:start="11:34" pos:end="11:34">*</modifier></type><name pos:start="11:35" pos:end="11:38">data</name> <init pos:start="11:40" pos:end="11:47">= <expr pos:start="11:42" pos:end="11:47"><name pos:start="11:42" pos:end="11:47">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="23:7">/* User provided size should reflect amount of space made

     * available to the guest, so we must take account of that

     * which will be used by the crypto header

     */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:28"><expr pos:start="25:5" pos:end="25:27"><name pos:start="25:5" pos:end="25:14"><name pos:start="25:5" pos:end="25:8">data</name><operator pos:start="25:9" pos:end="25:10">-&gt;</operator><name pos:start="25:11" pos:end="25:14">size</name></name> <operator pos:start="25:16" pos:end="25:17">+=</operator> <name pos:start="25:19" pos:end="25:27">headerlen</name></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:78"><expr pos:start="29:5" pos:end="29:77"><call pos:start="29:5" pos:end="29:77"><name pos:start="29:5" pos:end="29:23">qemu_opt_set_number</name><argument_list pos:start="29:24" pos:end="29:77">(<argument pos:start="29:25" pos:end="29:34"><expr pos:start="29:25" pos:end="29:34"><name pos:start="29:25" pos:end="29:34"><name pos:start="29:25" pos:end="29:28">data</name><operator pos:start="29:29" pos:end="29:30">-&gt;</operator><name pos:start="29:31" pos:end="29:34">opts</name></name></expr></argument>, <argument pos:start="29:37" pos:end="29:50"><expr pos:start="29:37" pos:end="29:50"><name pos:start="29:37" pos:end="29:50">BLOCK_OPT_SIZE</name></expr></argument>, <argument pos:start="29:53" pos:end="29:62"><expr pos:start="29:53" pos:end="29:62"><name pos:start="29:53" pos:end="29:62"><name pos:start="29:53" pos:end="29:56">data</name><operator pos:start="29:57" pos:end="29:58">-&gt;</operator><name pos:start="29:59" pos:end="29:62">size</name></name></expr></argument>, <argument pos:start="29:65" pos:end="29:76"><expr pos:start="29:65" pos:end="29:76"><operator pos:start="29:65" pos:end="29:65">&amp;</operator><name pos:start="29:66" pos:end="29:76">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:61"><expr pos:start="31:5" pos:end="31:60"><name pos:start="31:5" pos:end="31:7">ret</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <call pos:start="31:11" pos:end="31:60"><name pos:start="31:11" pos:end="31:26">bdrv_create_file</name><argument_list pos:start="31:27" pos:end="31:60">(<argument pos:start="31:28" pos:end="31:41"><expr pos:start="31:28" pos:end="31:41"><name pos:start="31:28" pos:end="31:41"><name pos:start="31:28" pos:end="31:31">data</name><operator pos:start="31:32" pos:end="31:33">-&gt;</operator><name pos:start="31:34" pos:end="31:41">filename</name></name></expr></argument>, <argument pos:start="31:44" pos:end="31:53"><expr pos:start="31:44" pos:end="31:53"><name pos:start="31:44" pos:end="31:53"><name pos:start="31:44" pos:end="31:47">data</name><operator pos:start="31:48" pos:end="31:49">-&gt;</operator><name pos:start="31:50" pos:end="31:53">opts</name></name></expr></argument>, <argument pos:start="31:56" pos:end="31:59"><expr pos:start="31:56" pos:end="31:59"><name pos:start="31:56" pos:end="31:59">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="37:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:16">(<expr pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:11">ret</name> <operator pos:start="33:13" pos:end="33:13">&lt;</operator> <literal type="number" pos:start="33:15" pos:end="33:15">0</literal></expr>)</condition> <block pos:start="33:18" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:18">

        <return pos:start="35:9" pos:end="35:18">return <expr pos:start="35:16" pos:end="35:17"><operator pos:start="35:16" pos:end="35:16">-</operator><literal type="number" pos:start="35:17" pos:end="35:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="43:66"><expr pos:start="41:5" pos:end="43:65"><name pos:start="41:5" pos:end="41:13"><name pos:start="41:5" pos:end="41:8">data</name><operator pos:start="41:9" pos:end="41:10">-&gt;</operator><name pos:start="41:11" pos:end="41:13">blk</name></name> <operator pos:start="41:15" pos:end="41:15">=</operator> <call pos:start="41:17" pos:end="43:65"><name pos:start="41:17" pos:end="41:28">blk_new_open</name><argument_list pos:start="41:29" pos:end="43:65">(<argument pos:start="41:30" pos:end="41:43"><expr pos:start="41:30" pos:end="41:43"><name pos:start="41:30" pos:end="41:43"><name pos:start="41:30" pos:end="41:33">data</name><operator pos:start="41:34" pos:end="41:35">-&gt;</operator><name pos:start="41:36" pos:end="41:43">filename</name></name></expr></argument>, <argument pos:start="41:46" pos:end="41:49"><expr pos:start="41:46" pos:end="41:49"><name pos:start="41:46" pos:end="41:49">NULL</name></expr></argument>, <argument pos:start="41:52" pos:end="41:55"><expr pos:start="41:52" pos:end="41:55"><name pos:start="41:52" pos:end="41:55">NULL</name></expr></argument>,

                             <argument pos:start="43:30" pos:end="43:58"><expr pos:start="43:30" pos:end="43:58"><name pos:start="43:30" pos:end="43:40">BDRV_O_RDWR</name> <operator pos:start="43:42" pos:end="43:42">|</operator> <name pos:start="43:44" pos:end="43:58">BDRV_O_PROTOCOL</name></expr></argument>, <argument pos:start="43:61" pos:end="43:64"><expr pos:start="43:61" pos:end="43:64"><name pos:start="43:61" pos:end="43:64">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="49:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:19">(<expr pos:start="45:9" pos:end="45:18"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:18"><name pos:start="45:10" pos:end="45:13">data</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:18">blk</name></name></expr>)</condition> <block pos:start="45:21" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:18">

        <return pos:start="47:9" pos:end="47:18">return <expr pos:start="47:16" pos:end="47:17"><operator pos:start="47:16" pos:end="47:16">-</operator><literal type="number" pos:start="47:17" pos:end="47:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="53:5" pos:end="53:13">return <expr pos:start="53:12" pos:end="53:12"><literal type="number" pos:start="53:12" pos:end="53:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
