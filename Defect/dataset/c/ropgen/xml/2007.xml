<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2007.c" pos:tabs="8"><function pos:start="1:1" pos:end="147:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">oggvorbis_encode_frame</name><parameter_list pos:start="1:34" pos:end="3:59">(<parameter pos:start="1:35" pos:end="1:55"><decl pos:start="1:35" pos:end="1:55"><type pos:start="1:35" pos:end="1:55"><name pos:start="1:35" pos:end="1:48">AVCodecContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:55">avctx</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:79"><decl pos:start="1:58" pos:end="1:79"><type pos:start="1:58" pos:end="1:79"><name pos:start="1:58" pos:end="1:65">unsigned</name> <name pos:start="1:67" pos:end="1:70">char</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:79">packets</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:46"><decl pos:start="3:35" pos:end="3:46"><type pos:start="3:35" pos:end="3:46"><name pos:start="3:35" pos:end="3:37">int</name></type> <name pos:start="3:39" pos:end="3:46">buf_size</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:58"><decl pos:start="3:49" pos:end="3:58"><type pos:start="3:49" pos:end="3:58"><name pos:start="3:49" pos:end="3:52">void</name> <modifier pos:start="3:54" pos:end="3:54">*</modifier></type><name pos:start="3:55" pos:end="3:58">data</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="147:1">{<block_content pos:start="7:5" pos:end="145:20">

    <decl_stmt pos:start="7:5" pos:end="7:43"><decl pos:start="7:5" pos:end="7:42"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">OggVorbisContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:23">s</name> <init pos:start="7:25" pos:end="7:42">= <expr pos:start="7:27" pos:end="7:42"><name pos:start="7:27" pos:end="7:42"><name pos:start="7:27" pos:end="7:31">avctx</name><operator pos:start="7:32" pos:end="7:33">-&gt;</operator><name pos:start="7:34" pos:end="7:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:14">ogg_packet</name></type> <name pos:start="9:16" pos:end="9:17">op</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">float</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:16">audio</name> <init pos:start="11:18" pos:end="11:23">= <expr pos:start="11:20" pos:end="11:23"><name pos:start="11:20" pos:end="11:23">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:16">pkt_size</name></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:35">/* send samples to libvorbis */</comment>

    <if_stmt pos:start="19:5" pos:end="55:5"><if pos:start="19:5" pos:end="47:5">if <condition pos:start="19:8" pos:end="19:13">(<expr pos:start="19:9" pos:end="19:12"><name pos:start="19:9" pos:end="19:12">data</name></expr>)</condition> <block pos:start="19:15" pos:end="47:5">{<block_content pos:start="21:9" pos:end="45:47">

        <decl_stmt pos:start="21:9" pos:end="21:46"><decl pos:start="21:9" pos:end="21:45"><type pos:start="21:9" pos:end="21:17"><specifier pos:start="21:9" pos:end="21:13">const</specifier> <name pos:start="21:15" pos:end="21:17">int</name></type> <name pos:start="21:19" pos:end="21:25">samples</name> <init pos:start="21:27" pos:end="21:45">= <expr pos:start="21:29" pos:end="21:45"><name pos:start="21:29" pos:end="21:45"><name pos:start="21:29" pos:end="21:33">avctx</name><operator pos:start="21:34" pos:end="21:35">-&gt;</operator><name pos:start="21:36" pos:end="21:45">frame_size</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="23:9" pos:end="23:23"><decl pos:start="23:9" pos:end="23:22"><type pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:13">float</name> <modifier pos:start="23:15" pos:end="23:15">*</modifier><modifier pos:start="23:16" pos:end="23:16">*</modifier></type><name pos:start="23:17" pos:end="23:22">buffer</name></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:41"><decl pos:start="25:9" pos:end="25:13"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:13">c</name></decl>, <decl pos:start="25:16" pos:end="25:40"><type ref="prev" pos:start="25:9" pos:end="25:11"/><name pos:start="25:16" pos:end="25:23">channels</name> <init pos:start="25:25" pos:end="25:40">= <expr pos:start="25:27" pos:end="25:40"><name pos:start="25:27" pos:end="25:40"><name pos:start="25:27" pos:end="25:27">s</name><operator pos:start="25:28" pos:end="25:29">-&gt;</operator><name pos:start="25:30" pos:end="25:31">vi</name><operator pos:start="25:32" pos:end="25:32">.</operator><name pos:start="25:33" pos:end="25:40">channels</name></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="29:9" pos:end="29:57"><expr pos:start="29:9" pos:end="29:56"><name pos:start="29:9" pos:end="29:14">buffer</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <call pos:start="29:18" pos:end="29:56"><name pos:start="29:18" pos:end="29:39">vorbis_analysis_buffer</name><argument_list pos:start="29:40" pos:end="29:56">(<argument pos:start="29:41" pos:end="29:46"><expr pos:start="29:41" pos:end="29:46"><operator pos:start="29:41" pos:end="29:41">&amp;</operator><name pos:start="29:42" pos:end="29:46"><name pos:start="29:42" pos:end="29:42">s</name><operator pos:start="29:43" pos:end="29:44">-&gt;</operator><name pos:start="29:45" pos:end="29:46">vd</name></name></expr></argument>, <argument pos:start="29:49" pos:end="29:55"><expr pos:start="29:49" pos:end="29:55"><name pos:start="29:49" pos:end="29:55">samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="31:9" pos:end="43:9">for <control pos:start="31:13" pos:end="31:38">(<init pos:start="31:14" pos:end="31:19"><expr pos:start="31:14" pos:end="31:18"><name pos:start="31:14" pos:end="31:14">c</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <literal type="number" pos:start="31:18" pos:end="31:18">0</literal></expr>;</init> <condition pos:start="31:21" pos:end="31:33"><expr pos:start="31:21" pos:end="31:32"><name pos:start="31:21" pos:end="31:21">c</name> <operator pos:start="31:23" pos:end="31:23">&lt;</operator> <name pos:start="31:25" pos:end="31:32">channels</name></expr>;</condition> <incr pos:start="31:35" pos:end="31:37"><expr pos:start="31:35" pos:end="31:37"><name pos:start="31:35" pos:end="31:35">c</name><operator pos:start="31:36" pos:end="31:37">++</operator></expr></incr>)</control> <block pos:start="31:40" pos:end="43:9">{<block_content pos:start="33:13" pos:end="41:56">

            <decl_stmt pos:start="33:13" pos:end="33:18"><decl pos:start="33:13" pos:end="33:17"><type pos:start="33:13" pos:end="33:15"><name pos:start="33:13" pos:end="33:15">int</name></type> <name pos:start="33:17" pos:end="33:17">i</name></decl>;</decl_stmt>

            <decl_stmt pos:start="35:13" pos:end="37:80"><decl pos:start="35:13" pos:end="37:79"><type pos:start="35:13" pos:end="35:15"><name pos:start="35:13" pos:end="35:15">int</name></type> <name pos:start="35:17" pos:end="35:18">co</name> <init pos:start="35:20" pos:end="37:79">= <expr pos:start="35:22" pos:end="37:79"><ternary pos:start="35:22" pos:end="37:79"><condition pos:start="35:22" pos:end="35:37"><expr pos:start="35:22" pos:end="35:35"><operator pos:start="35:22" pos:end="35:22">(</operator><name pos:start="35:23" pos:end="35:30">channels</name> <operator pos:start="35:32" pos:end="35:32">&gt;</operator> <literal type="number" pos:start="35:34" pos:end="35:34">8</literal><operator pos:start="35:35" pos:end="35:35">)</operator></expr> ?</condition><then pos:start="35:39" pos:end="35:39"> <expr pos:start="35:39" pos:end="35:39"><name pos:start="35:39" pos:end="35:39">c</name></expr> </then><else pos:start="35:41" pos:end="37:79">:

                     <expr pos:start="37:22" pos:end="37:79"><name pos:start="37:22" pos:end="37:79"><name pos:start="37:22" pos:end="37:62">ff_vorbis_encoding_channel_layout_offsets</name><index pos:start="37:63" pos:end="37:76">[<expr pos:start="37:64" pos:end="37:75"><name pos:start="37:64" pos:end="37:71">channels</name> <operator pos:start="37:73" pos:end="37:73">-</operator> <literal type="number" pos:start="37:75" pos:end="37:75">1</literal></expr>]</index><index pos:start="37:77" pos:end="37:79">[<expr pos:start="37:78" pos:end="37:78"><name pos:start="37:78" pos:end="37:78">c</name></expr>]</index></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <for pos:start="39:13" pos:end="41:56">for <control pos:start="39:17" pos:end="39:41">(<init pos:start="39:18" pos:end="39:23"><expr pos:start="39:18" pos:end="39:22"><name pos:start="39:18" pos:end="39:18">i</name> <operator pos:start="39:20" pos:end="39:20">=</operator> <literal type="number" pos:start="39:22" pos:end="39:22">0</literal></expr>;</init> <condition pos:start="39:25" pos:end="39:36"><expr pos:start="39:25" pos:end="39:35"><name pos:start="39:25" pos:end="39:25">i</name> <operator pos:start="39:27" pos:end="39:27">&lt;</operator> <name pos:start="39:29" pos:end="39:35">samples</name></expr>;</condition> <incr pos:start="39:38" pos:end="39:40"><expr pos:start="39:38" pos:end="39:40"><name pos:start="39:38" pos:end="39:38">i</name><operator pos:start="39:39" pos:end="39:40">++</operator></expr></incr>)</control><block type="pseudo" pos:start="41:17" pos:end="41:56"><block_content pos:start="41:17" pos:end="41:56">

                <expr_stmt pos:start="41:17" pos:end="41:56"><expr pos:start="41:17" pos:end="41:55"><name pos:start="41:17" pos:end="41:28"><name pos:start="41:17" pos:end="41:22">buffer</name><index pos:start="41:23" pos:end="41:25">[<expr pos:start="41:24" pos:end="41:24"><name pos:start="41:24" pos:end="41:24">c</name></expr>]</index><index pos:start="41:26" pos:end="41:28">[<expr pos:start="41:27" pos:end="41:27"><name pos:start="41:27" pos:end="41:27">i</name></expr>]</index></name> <operator pos:start="41:30" pos:end="41:30">=</operator> <name pos:start="41:32" pos:end="41:55"><name pos:start="41:32" pos:end="41:36">audio</name><index pos:start="41:37" pos:end="41:55">[<expr pos:start="41:38" pos:end="41:54"><name pos:start="41:38" pos:end="41:38">i</name> <operator pos:start="41:40" pos:end="41:40">*</operator> <name pos:start="41:42" pos:end="41:49">channels</name> <operator pos:start="41:51" pos:end="41:51">+</operator> <name pos:start="41:53" pos:end="41:54">co</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></for>

        <expr_stmt pos:start="45:9" pos:end="45:47"><expr pos:start="45:9" pos:end="45:46"><call pos:start="45:9" pos:end="45:46"><name pos:start="45:9" pos:end="45:29">vorbis_analysis_wrote</name><argument_list pos:start="45:30" pos:end="45:46">(<argument pos:start="45:31" pos:end="45:36"><expr pos:start="45:31" pos:end="45:36"><operator pos:start="45:31" pos:end="45:31">&amp;</operator><name pos:start="45:32" pos:end="45:36"><name pos:start="45:32" pos:end="45:32">s</name><operator pos:start="45:33" pos:end="45:34">-&gt;</operator><name pos:start="45:35" pos:end="45:36">vd</name></name></expr></argument>, <argument pos:start="45:39" pos:end="45:45"><expr pos:start="45:39" pos:end="45:45"><name pos:start="45:39" pos:end="45:45">samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="47:7" pos:end="55:5">else <block pos:start="47:12" pos:end="55:5">{<block_content pos:start="49:9" pos:end="53:19">

        <if_stmt pos:start="49:9" pos:end="51:45"><if pos:start="49:9" pos:end="51:45">if <condition pos:start="49:12" pos:end="49:20">(<expr pos:start="49:13" pos:end="49:19"><operator pos:start="49:13" pos:end="49:13">!</operator><name pos:start="49:14" pos:end="49:19"><name pos:start="49:14" pos:end="49:14">s</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:19">eof</name></name></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:45"><block_content pos:start="51:13" pos:end="51:45">

            <expr_stmt pos:start="51:13" pos:end="51:45"><expr pos:start="51:13" pos:end="51:44"><call pos:start="51:13" pos:end="51:44"><name pos:start="51:13" pos:end="51:33">vorbis_analysis_wrote</name><argument_list pos:start="51:34" pos:end="51:44">(<argument pos:start="51:35" pos:end="51:40"><expr pos:start="51:35" pos:end="51:40"><operator pos:start="51:35" pos:end="51:35">&amp;</operator><name pos:start="51:36" pos:end="51:40"><name pos:start="51:36" pos:end="51:36">s</name><operator pos:start="51:37" pos:end="51:38">-&gt;</operator><name pos:start="51:39" pos:end="51:40">vd</name></name></expr></argument>, <argument pos:start="51:43" pos:end="51:43"><expr pos:start="51:43" pos:end="51:43"><literal type="number" pos:start="51:43" pos:end="51:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:19"><expr pos:start="53:9" pos:end="53:18"><name pos:start="53:9" pos:end="53:14"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:14">eof</name></name> <operator pos:start="53:16" pos:end="53:16">=</operator> <literal type="number" pos:start="53:18" pos:end="53:18">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="59:5" pos:end="59:51">/* retrieve available packets from libvorbis */</comment>

    <while pos:start="61:5" pos:end="99:5">while <condition pos:start="61:11" pos:end="61:57">(<expr pos:start="61:12" pos:end="61:56"><call pos:start="61:12" pos:end="61:51"><name pos:start="61:12" pos:end="61:35">vorbis_analysis_blockout</name><argument_list pos:start="61:36" pos:end="61:51">(<argument pos:start="61:37" pos:end="61:42"><expr pos:start="61:37" pos:end="61:42"><operator pos:start="61:37" pos:end="61:37">&amp;</operator><name pos:start="61:38" pos:end="61:42"><name pos:start="61:38" pos:end="61:38">s</name><operator pos:start="61:39" pos:end="61:40">-&gt;</operator><name pos:start="61:41" pos:end="61:42">vd</name></name></expr></argument>, <argument pos:start="61:45" pos:end="61:50"><expr pos:start="61:45" pos:end="61:50"><operator pos:start="61:45" pos:end="61:45">&amp;</operator><name pos:start="61:46" pos:end="61:50"><name pos:start="61:46" pos:end="61:46">s</name><operator pos:start="61:47" pos:end="61:48">-&gt;</operator><name pos:start="61:49" pos:end="61:50">vb</name></name></expr></argument>)</argument_list></call> <operator pos:start="61:53" pos:end="61:54">==</operator> <literal type="number" pos:start="61:56" pos:end="61:56">1</literal></expr>)</condition> <block pos:start="61:59" pos:end="99:5">{<block_content pos:start="63:9" pos:end="97:9">

        <expr_stmt pos:start="63:9" pos:end="63:38"><expr pos:start="63:9" pos:end="63:37"><call pos:start="63:9" pos:end="63:37"><name pos:start="63:9" pos:end="63:23">vorbis_analysis</name><argument_list pos:start="63:24" pos:end="63:37">(<argument pos:start="63:25" pos:end="63:30"><expr pos:start="63:25" pos:end="63:30"><operator pos:start="63:25" pos:end="63:25">&amp;</operator><name pos:start="63:26" pos:end="63:30"><name pos:start="63:26" pos:end="63:26">s</name><operator pos:start="63:27" pos:end="63:28">-&gt;</operator><name pos:start="63:29" pos:end="63:30">vb</name></name></expr></argument>, <argument pos:start="63:33" pos:end="63:36"><expr pos:start="63:33" pos:end="63:36"><name pos:start="63:33" pos:end="63:36">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:40"><expr pos:start="65:9" pos:end="65:39"><call pos:start="65:9" pos:end="65:39"><name pos:start="65:9" pos:end="65:31">vorbis_bitrate_addblock</name><argument_list pos:start="65:32" pos:end="65:39">(<argument pos:start="65:33" pos:end="65:38"><expr pos:start="65:33" pos:end="65:38"><operator pos:start="65:33" pos:end="65:33">&amp;</operator><name pos:start="65:34" pos:end="65:38"><name pos:start="65:34" pos:end="65:34">s</name><operator pos:start="65:35" pos:end="65:36">-&gt;</operator><name pos:start="65:37" pos:end="65:38">vb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="69:9" pos:end="69:67">/* add any available packets to the output packet buffer */</comment>

        <while pos:start="71:9" pos:end="97:9">while <condition pos:start="71:15" pos:end="71:55">(<expr pos:start="71:16" pos:end="71:54"><call pos:start="71:16" pos:end="71:54"><name pos:start="71:16" pos:end="71:41">vorbis_bitrate_flushpacket</name><argument_list pos:start="71:42" pos:end="71:54">(<argument pos:start="71:43" pos:end="71:48"><expr pos:start="71:43" pos:end="71:48"><operator pos:start="71:43" pos:end="71:43">&amp;</operator><name pos:start="71:44" pos:end="71:48"><name pos:start="71:44" pos:end="71:44">s</name><operator pos:start="71:45" pos:end="71:46">-&gt;</operator><name pos:start="71:47" pos:end="71:48">vd</name></name></expr></argument>, <argument pos:start="71:51" pos:end="71:53"><expr pos:start="71:51" pos:end="71:53"><operator pos:start="71:51" pos:end="71:51">&amp;</operator><name pos:start="71:52" pos:end="71:53">op</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="71:57" pos:end="97:9">{<block_content pos:start="77:13" pos:end="95:40">

            <comment type="block" pos:start="73:13" pos:end="75:74">/* i'd love to say the following line is a hack, but sadly it's

             * not, apparently the end of stream decision is in libogg. */</comment>

            <if_stmt pos:start="77:13" pos:end="79:25"><if pos:start="77:13" pos:end="79:25">if <condition pos:start="77:16" pos:end="77:42">(<expr pos:start="77:17" pos:end="77:41"><name pos:start="77:17" pos:end="77:24"><name pos:start="77:17" pos:end="77:18">op</name><operator pos:start="77:19" pos:end="77:19">.</operator><name pos:start="77:20" pos:end="77:24">bytes</name></name> <operator pos:start="77:26" pos:end="77:27">==</operator> <literal type="number" pos:start="77:29" pos:end="77:29">1</literal> <operator pos:start="77:31" pos:end="77:32">&amp;&amp;</operator> <name pos:start="77:34" pos:end="77:41"><name pos:start="77:34" pos:end="77:35">op</name><operator pos:start="77:36" pos:end="77:36">.</operator><name pos:start="77:37" pos:end="77:41">e_o_s</name></name></expr>)</condition><block type="pseudo" pos:start="79:17" pos:end="79:25"><block_content pos:start="79:17" pos:end="79:25">

                <continue pos:start="79:17" pos:end="79:25">continue;</continue></block_content></block></if></if_stmt>

            <if_stmt pos:start="81:13" pos:end="87:13"><if pos:start="81:13" pos:end="87:13">if <condition pos:start="81:16" pos:end="81:78">(<expr pos:start="81:17" pos:end="81:77"><name pos:start="81:17" pos:end="81:31"><name pos:start="81:17" pos:end="81:17">s</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:31">buffer_index</name></name> <operator pos:start="81:33" pos:end="81:33">+</operator> <sizeof pos:start="81:35" pos:end="81:52">sizeof<argument_list pos:start="81:41" pos:end="81:52">(<argument pos:start="81:42" pos:end="81:51"><expr pos:start="81:42" pos:end="81:51"><name pos:start="81:42" pos:end="81:51">ogg_packet</name></expr></argument>)</argument_list></sizeof> <operator pos:start="81:54" pos:end="81:54">+</operator> <name pos:start="81:56" pos:end="81:63"><name pos:start="81:56" pos:end="81:57">op</name><operator pos:start="81:58" pos:end="81:58">.</operator><name pos:start="81:59" pos:end="81:63">bytes</name></name> <operator pos:start="81:65" pos:end="81:65">&gt;</operator> <name pos:start="81:67" pos:end="81:77">BUFFER_SIZE</name></expr>)</condition> <block pos:start="81:80" pos:end="87:13">{<block_content pos:start="83:17" pos:end="85:26">

                <expr_stmt pos:start="83:17" pos:end="83:75"><expr pos:start="83:17" pos:end="83:74"><call pos:start="83:17" pos:end="83:74"><name pos:start="83:17" pos:end="83:22">av_log</name><argument_list pos:start="83:23" pos:end="83:74">(<argument pos:start="83:24" pos:end="83:28"><expr pos:start="83:24" pos:end="83:28"><name pos:start="83:24" pos:end="83:28">avctx</name></expr></argument>, <argument pos:start="83:31" pos:end="83:42"><expr pos:start="83:31" pos:end="83:42"><name pos:start="83:31" pos:end="83:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="83:45" pos:end="83:73"><expr pos:start="83:45" pos:end="83:73"><literal type="string" pos:start="83:45" pos:end="83:73">"libvorbis: buffer overflow."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="85:17" pos:end="85:26">return <expr pos:start="85:24" pos:end="85:25"><operator pos:start="85:24" pos:end="85:24">-</operator><literal type="number" pos:start="85:25" pos:end="85:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:73"><expr pos:start="89:13" pos:end="89:72"><call pos:start="89:13" pos:end="89:72"><name pos:start="89:13" pos:end="89:18">memcpy</name><argument_list pos:start="89:19" pos:end="89:72">(<argument pos:start="89:20" pos:end="89:46"><expr pos:start="89:20" pos:end="89:46"><name pos:start="89:20" pos:end="89:28"><name pos:start="89:20" pos:end="89:20">s</name><operator pos:start="89:21" pos:end="89:22">-&gt;</operator><name pos:start="89:23" pos:end="89:28">buffer</name></name> <operator pos:start="89:30" pos:end="89:30">+</operator> <name pos:start="89:32" pos:end="89:46"><name pos:start="89:32" pos:end="89:32">s</name><operator pos:start="89:33" pos:end="89:34">-&gt;</operator><name pos:start="89:35" pos:end="89:46">buffer_index</name></name></expr></argument>, <argument pos:start="89:49" pos:end="89:51"><expr pos:start="89:49" pos:end="89:51"><operator pos:start="89:49" pos:end="89:49">&amp;</operator><name pos:start="89:50" pos:end="89:51">op</name></expr></argument>, <argument pos:start="89:54" pos:end="89:71"><expr pos:start="89:54" pos:end="89:71"><sizeof pos:start="89:54" pos:end="89:71">sizeof<argument_list pos:start="89:60" pos:end="89:71">(<argument pos:start="89:61" pos:end="89:70"><expr pos:start="89:61" pos:end="89:70"><name pos:start="89:61" pos:end="89:70">ogg_packet</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:50"><expr pos:start="91:13" pos:end="91:49"><name pos:start="91:13" pos:end="91:27"><name pos:start="91:13" pos:end="91:13">s</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:27">buffer_index</name></name> <operator pos:start="91:29" pos:end="91:30">+=</operator> <sizeof pos:start="91:32" pos:end="91:49">sizeof<argument_list pos:start="91:38" pos:end="91:49">(<argument pos:start="91:39" pos:end="91:48"><expr pos:start="91:39" pos:end="91:48"><name pos:start="91:39" pos:end="91:48">ogg_packet</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:69"><expr pos:start="93:13" pos:end="93:68"><call pos:start="93:13" pos:end="93:68"><name pos:start="93:13" pos:end="93:18">memcpy</name><argument_list pos:start="93:19" pos:end="93:68">(<argument pos:start="93:20" pos:end="93:46"><expr pos:start="93:20" pos:end="93:46"><name pos:start="93:20" pos:end="93:28"><name pos:start="93:20" pos:end="93:20">s</name><operator pos:start="93:21" pos:end="93:22">-&gt;</operator><name pos:start="93:23" pos:end="93:28">buffer</name></name> <operator pos:start="93:30" pos:end="93:30">+</operator> <name pos:start="93:32" pos:end="93:46"><name pos:start="93:32" pos:end="93:32">s</name><operator pos:start="93:33" pos:end="93:34">-&gt;</operator><name pos:start="93:35" pos:end="93:46">buffer_index</name></name></expr></argument>, <argument pos:start="93:49" pos:end="93:57"><expr pos:start="93:49" pos:end="93:57"><name pos:start="93:49" pos:end="93:57"><name pos:start="93:49" pos:end="93:50">op</name><operator pos:start="93:51" pos:end="93:51">.</operator><name pos:start="93:52" pos:end="93:57">packet</name></name></expr></argument>, <argument pos:start="93:60" pos:end="93:67"><expr pos:start="93:60" pos:end="93:67"><name pos:start="93:60" pos:end="93:67"><name pos:start="93:60" pos:end="93:61">op</name><operator pos:start="93:62" pos:end="93:62">.</operator><name pos:start="93:63" pos:end="93:67">bytes</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:40"><expr pos:start="95:13" pos:end="95:39"><name pos:start="95:13" pos:end="95:27"><name pos:start="95:13" pos:end="95:13">s</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:27">buffer_index</name></name> <operator pos:start="95:29" pos:end="95:30">+=</operator> <name pos:start="95:32" pos:end="95:39"><name pos:start="95:32" pos:end="95:33">op</name><operator pos:start="95:34" pos:end="95:34">.</operator><name pos:start="95:35" pos:end="95:39">bytes</name></name></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></while>



    <comment type="block" pos:start="103:5" pos:end="103:70">/* output then next packet from the output buffer, if available */</comment>

    <expr_stmt pos:start="105:5" pos:end="105:17"><expr pos:start="105:5" pos:end="105:16"><name pos:start="105:5" pos:end="105:12">pkt_size</name> <operator pos:start="105:14" pos:end="105:14">=</operator> <literal type="number" pos:start="105:16" pos:end="105:16">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="107:5" pos:end="141:5"><if pos:start="107:5" pos:end="141:5">if <condition pos:start="107:8" pos:end="107:24">(<expr pos:start="107:9" pos:end="107:23"><name pos:start="107:9" pos:end="107:23"><name pos:start="107:9" pos:end="107:9">s</name><operator pos:start="107:10" pos:end="107:11">-&gt;</operator><name pos:start="107:12" pos:end="107:23">buffer_index</name></name></expr>)</condition> <block pos:start="107:26" pos:end="141:5">{<block_content pos:start="109:9" pos:end="139:33">

        <decl_stmt pos:start="109:9" pos:end="109:50"><decl pos:start="109:9" pos:end="109:49"><type pos:start="109:9" pos:end="109:20"><name pos:start="109:9" pos:end="109:18">ogg_packet</name> <modifier pos:start="109:20" pos:end="109:20">*</modifier></type><name pos:start="109:21" pos:end="109:23">op2</name> <init pos:start="109:25" pos:end="109:49">= <expr pos:start="109:27" pos:end="109:49"><operator pos:start="109:27" pos:end="109:27">(</operator><name pos:start="109:28" pos:end="109:37">ogg_packet</name> <operator pos:start="109:39" pos:end="109:39">*</operator><operator pos:start="109:40" pos:end="109:40">)</operator><name pos:start="109:41" pos:end="109:49"><name pos:start="109:41" pos:end="109:41">s</name><operator pos:start="109:42" pos:end="109:43">-&gt;</operator><name pos:start="109:44" pos:end="109:49">buffer</name></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:57"><expr pos:start="111:9" pos:end="111:56"><name pos:start="111:9" pos:end="111:19"><name pos:start="111:9" pos:end="111:11">op2</name><operator pos:start="111:12" pos:end="111:13">-&gt;</operator><name pos:start="111:14" pos:end="111:19">packet</name></name>     <operator pos:start="111:25" pos:end="111:25">=</operator> <name pos:start="111:27" pos:end="111:35"><name pos:start="111:27" pos:end="111:27">s</name><operator pos:start="111:28" pos:end="111:29">-&gt;</operator><name pos:start="111:30" pos:end="111:35">buffer</name></name> <operator pos:start="111:37" pos:end="111:37">+</operator> <sizeof pos:start="111:39" pos:end="111:56">sizeof<argument_list pos:start="111:45" pos:end="111:56">(<argument pos:start="111:46" pos:end="111:55"><expr pos:start="111:46" pos:end="111:55"><name pos:start="111:46" pos:end="111:55">ogg_packet</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>



        <expr_stmt pos:start="115:9" pos:end="115:30"><expr pos:start="115:9" pos:end="115:29"><name pos:start="115:9" pos:end="115:16">pkt_size</name> <operator pos:start="115:18" pos:end="115:18">=</operator> <name pos:start="115:20" pos:end="115:29"><name pos:start="115:20" pos:end="115:22">op2</name><operator pos:start="115:23" pos:end="115:24">-&gt;</operator><name pos:start="115:25" pos:end="115:29">bytes</name></name></expr>;</expr_stmt>

        <comment type="line" pos:start="117:9" pos:end="117:66">// FIXME: we should use the user-supplied pts and duration</comment>

        <expr_stmt pos:start="119:9" pos:end="121:75"><expr pos:start="119:9" pos:end="121:74"><name pos:start="119:9" pos:end="119:31"><name pos:start="119:9" pos:end="119:13">avctx</name><operator pos:start="119:14" pos:end="119:15">-&gt;</operator><name pos:start="119:16" pos:end="119:26">coded_frame</name><operator pos:start="119:27" pos:end="119:28">-&gt;</operator><name pos:start="119:29" pos:end="119:31">pts</name></name> <operator pos:start="119:33" pos:end="119:33">=</operator> <call pos:start="119:35" pos:end="121:74"><name pos:start="119:35" pos:end="119:57">ff_samples_to_time_base</name><argument_list pos:start="119:58" pos:end="121:74">(<argument pos:start="119:59" pos:end="119:63"><expr pos:start="119:59" pos:end="119:63"><name pos:start="119:59" pos:end="119:63">avctx</name></expr></argument>,

                                                          <argument pos:start="121:59" pos:end="121:73"><expr pos:start="121:59" pos:end="121:73"><name pos:start="121:59" pos:end="121:73"><name pos:start="121:59" pos:end="121:61">op2</name><operator pos:start="121:62" pos:end="121:63">-&gt;</operator><name pos:start="121:64" pos:end="121:73">granulepos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="123:9" pos:end="129:9"><if pos:start="123:9" pos:end="129:9">if <condition pos:start="123:12" pos:end="123:32">(<expr pos:start="123:13" pos:end="123:31"><name pos:start="123:13" pos:end="123:20">pkt_size</name> <operator pos:start="123:22" pos:end="123:22">&gt;</operator> <name pos:start="123:24" pos:end="123:31">buf_size</name></expr>)</condition> <block pos:start="123:34" pos:end="129:9">{<block_content pos:start="125:13" pos:end="127:22">

            <expr_stmt pos:start="125:13" pos:end="125:71"><expr pos:start="125:13" pos:end="125:70"><call pos:start="125:13" pos:end="125:70"><name pos:start="125:13" pos:end="125:18">av_log</name><argument_list pos:start="125:19" pos:end="125:70">(<argument pos:start="125:20" pos:end="125:24"><expr pos:start="125:20" pos:end="125:24"><name pos:start="125:20" pos:end="125:24">avctx</name></expr></argument>, <argument pos:start="125:27" pos:end="125:38"><expr pos:start="125:27" pos:end="125:38"><name pos:start="125:27" pos:end="125:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="125:41" pos:end="125:69"><expr pos:start="125:41" pos:end="125:69"><literal type="string" pos:start="125:41" pos:end="125:69">"libvorbis: buffer overflow."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="127:13" pos:end="127:22">return <expr pos:start="127:20" pos:end="127:21"><operator pos:start="127:20" pos:end="127:20">-</operator><literal type="number" pos:start="127:21" pos:end="127:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="133:9" pos:end="133:47"><expr pos:start="133:9" pos:end="133:46"><call pos:start="133:9" pos:end="133:46"><name pos:start="133:9" pos:end="133:14">memcpy</name><argument_list pos:start="133:15" pos:end="133:46">(<argument pos:start="133:16" pos:end="133:22"><expr pos:start="133:16" pos:end="133:22"><name pos:start="133:16" pos:end="133:22">packets</name></expr></argument>, <argument pos:start="133:25" pos:end="133:35"><expr pos:start="133:25" pos:end="133:35"><name pos:start="133:25" pos:end="133:35"><name pos:start="133:25" pos:end="133:27">op2</name><operator pos:start="133:28" pos:end="133:29">-&gt;</operator><name pos:start="133:30" pos:end="133:35">packet</name></name></expr></argument>, <argument pos:start="133:38" pos:end="133:45"><expr pos:start="133:38" pos:end="133:45"><name pos:start="133:38" pos:end="133:45">pkt_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:57"><expr pos:start="135:9" pos:end="135:56"><name pos:start="135:9" pos:end="135:23"><name pos:start="135:9" pos:end="135:9">s</name><operator pos:start="135:10" pos:end="135:11">-&gt;</operator><name pos:start="135:12" pos:end="135:23">buffer_index</name></name> <operator pos:start="135:25" pos:end="135:26">-=</operator> <name pos:start="135:28" pos:end="135:35">pkt_size</name> <operator pos:start="135:37" pos:end="135:37">+</operator> <sizeof pos:start="135:39" pos:end="135:56">sizeof<argument_list pos:start="135:45" pos:end="135:56">(<argument pos:start="135:46" pos:end="135:55"><expr pos:start="135:46" pos:end="135:55"><name pos:start="135:46" pos:end="135:55">ogg_packet</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="139:33"><expr pos:start="137:9" pos:end="139:32"><call pos:start="137:9" pos:end="139:32"><name pos:start="137:9" pos:end="137:15">memmove</name><argument_list pos:start="137:16" pos:end="139:32">(<argument pos:start="137:17" pos:end="137:25"><expr pos:start="137:17" pos:end="137:25"><name pos:start="137:17" pos:end="137:25"><name pos:start="137:17" pos:end="137:17">s</name><operator pos:start="137:18" pos:end="137:19">-&gt;</operator><name pos:start="137:20" pos:end="137:25">buffer</name></name></expr></argument>, <argument pos:start="137:28" pos:end="137:68"><expr pos:start="137:28" pos:end="137:68"><name pos:start="137:28" pos:end="137:36"><name pos:start="137:28" pos:end="137:28">s</name><operator pos:start="137:29" pos:end="137:30">-&gt;</operator><name pos:start="137:31" pos:end="137:36">buffer</name></name> <operator pos:start="137:38" pos:end="137:38">+</operator> <name pos:start="137:40" pos:end="137:47">pkt_size</name> <operator pos:start="137:49" pos:end="137:49">+</operator> <sizeof pos:start="137:51" pos:end="137:68">sizeof<argument_list pos:start="137:57" pos:end="137:68">(<argument pos:start="137:58" pos:end="137:67"><expr pos:start="137:58" pos:end="137:67"><name pos:start="137:58" pos:end="137:67">ogg_packet</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                <argument pos:start="139:17" pos:end="139:31"><expr pos:start="139:17" pos:end="139:31"><name pos:start="139:17" pos:end="139:31"><name pos:start="139:17" pos:end="139:17">s</name><operator pos:start="139:18" pos:end="139:19">-&gt;</operator><name pos:start="139:20" pos:end="139:31">buffer_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="145:5" pos:end="145:20">return <expr pos:start="145:12" pos:end="145:19"><name pos:start="145:12" pos:end="145:19">pkt_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
