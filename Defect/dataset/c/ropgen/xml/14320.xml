<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14320.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:8"><name pos:start="1:1" pos:end="1:8">uint64_t</name></type> <name pos:start="1:10" pos:end="1:27">cpu_tick_get_count</name><parameter_list pos:start="1:28" pos:end="1:44">(<parameter pos:start="1:29" pos:end="1:43"><decl pos:start="1:29" pos:end="1:43"><type pos:start="1:29" pos:end="1:38"><name pos:start="1:29" pos:end="1:36">CPUTimer</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:43">timer</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:22">

    <decl_stmt pos:start="5:5" pos:end="9:38"><decl pos:start="5:5" pos:end="9:37"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint64_t</name></type> <name pos:start="5:14" pos:end="5:23">real_count</name> <init pos:start="5:25" pos:end="9:37">= <expr pos:start="5:27" pos:end="9:37"><call pos:start="5:27" pos:end="9:37"><name pos:start="5:27" pos:end="5:44">timer_to_cpu_ticks</name><argument_list pos:start="5:45" pos:end="9:37">(

                    <argument pos:start="7:21" pos:end="7:79"><expr pos:start="7:21" pos:end="7:79"><call pos:start="7:21" pos:end="7:57"><name pos:start="7:21" pos:end="7:37">qemu_clock_get_ns</name><argument_list pos:start="7:38" pos:end="7:57">(<argument pos:start="7:39" pos:end="7:56"><expr pos:start="7:39" pos:end="7:56"><name pos:start="7:39" pos:end="7:56">QEMU_CLOCK_VIRTUAL</name></expr></argument>)</argument_list></call> <operator pos:start="7:59" pos:end="7:59">-</operator> <name pos:start="7:61" pos:end="7:79"><name pos:start="7:61" pos:end="7:65">timer</name><operator pos:start="7:66" pos:end="7:67">-&gt;</operator><name pos:start="7:68" pos:end="7:79">clock_offset</name></name></expr></argument>,

                    <argument pos:start="9:21" pos:end="9:36"><expr pos:start="9:21" pos:end="9:36"><name pos:start="9:21" pos:end="9:36"><name pos:start="9:21" pos:end="9:25">timer</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:36">frequency</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="17:56"><expr pos:start="13:5" pos:end="17:55"><call pos:start="13:5" pos:end="17:55"><name pos:start="13:5" pos:end="13:17">TIMER_DPRINTF</name><argument_list pos:start="13:18" pos:end="17:55">(<argument pos:start="13:19" pos:end="13:59"><expr pos:start="13:19" pos:end="13:59"><literal type="string" pos:start="13:19" pos:end="13:59">"%s get_count count=0x%016lx (%s) p=%p\n"</literal></expr></argument>,

           <argument pos:start="15:12" pos:end="15:22"><expr pos:start="15:12" pos:end="15:22"><name pos:start="15:12" pos:end="15:22"><name pos:start="15:12" pos:end="15:16">timer</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:22">name</name></name></expr></argument>, <argument pos:start="15:25" pos:end="15:34"><expr pos:start="15:25" pos:end="15:34"><name pos:start="15:25" pos:end="15:34">real_count</name></expr></argument>,

           <argument pos:start="17:12" pos:end="17:47"><expr pos:start="17:12" pos:end="17:47"><ternary pos:start="17:12" pos:end="17:47"><condition pos:start="17:12" pos:end="17:27"><expr pos:start="17:12" pos:end="17:26"><name pos:start="17:12" pos:end="17:26"><name pos:start="17:12" pos:end="17:16">timer</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:26">disabled</name></name></expr>?</condition><then pos:start="17:28" pos:end="17:37"><expr pos:start="17:28" pos:end="17:37"><literal type="string" pos:start="17:28" pos:end="17:37">"disabled"</literal></expr></then><else pos:start="17:38" pos:end="17:47">:<expr pos:start="17:39" pos:end="17:47"><literal type="string" pos:start="17:39" pos:end="17:47">"enabled"</literal></expr></else></ternary></expr></argument>, <argument pos:start="17:50" pos:end="17:54"><expr pos:start="17:50" pos:end="17:54"><name pos:start="17:50" pos:end="17:54">timer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="23:43"><if pos:start="21:5" pos:end="23:43">if <condition pos:start="21:8" pos:end="21:24">(<expr pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:13">timer</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:23">disabled</name></name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:43"><block_content pos:start="23:9" pos:end="23:43">

        <expr_stmt pos:start="23:9" pos:end="23:43"><expr pos:start="23:9" pos:end="23:42"><name pos:start="23:9" pos:end="23:18">real_count</name> <operator pos:start="23:20" pos:end="23:21">|=</operator> <name pos:start="23:23" pos:end="23:42"><name pos:start="23:23" pos:end="23:27">timer</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:42">disabled_mask</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="27:5" pos:end="27:22">return <expr pos:start="27:12" pos:end="27:21"><name pos:start="27:12" pos:end="27:21">real_count</name></expr>;</return>

</block_content>}</block></function>
</unit>
