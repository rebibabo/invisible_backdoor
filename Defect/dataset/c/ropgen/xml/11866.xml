<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11866.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">wmv2_add_block</name><parameter_list pos:start="1:27" pos:end="1:92">(<parameter pos:start="1:28" pos:end="1:41"><decl pos:start="1:28" pos:end="1:41"><type pos:start="1:28" pos:end="1:41"><name pos:start="1:28" pos:end="1:38">Wmv2Context</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">w</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:58"><decl pos:start="1:44" pos:end="1:58"><type pos:start="1:44" pos:end="1:58"><name pos:start="1:44" pos:end="1:50">DCTELEM</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:58">block1</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:72"><decl pos:start="1:61" pos:end="1:72"><type pos:start="1:61" pos:end="1:72"><name pos:start="1:61" pos:end="1:67">uint8_t</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:72">dst</name></decl></parameter>, <parameter pos:start="1:75" pos:end="1:84"><decl pos:start="1:75" pos:end="1:84"><type pos:start="1:75" pos:end="1:84"><name pos:start="1:75" pos:end="1:77">int</name></type> <name pos:start="1:79" pos:end="1:84">stride</name></decl></parameter>, <parameter pos:start="1:87" pos:end="1:91"><decl pos:start="1:87" pos:end="1:91"><type pos:start="1:87" pos:end="1:91"><name pos:start="1:87" pos:end="1:89">int</name></type> <name pos:start="1:91" pos:end="1:91">n</name></decl></parameter>)</parameter_list><block pos:start="1:93" pos:end="45:1">{<block_content pos:start="3:5" pos:end="43:5">

    <decl_stmt pos:start="3:5" pos:end="3:36"><decl pos:start="3:5" pos:end="3:35"><type pos:start="3:5" pos:end="3:26"><name pos:start="3:5" pos:end="3:18">MpegEncContext</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier> <specifier pos:start="3:22" pos:end="3:26">const</specifier></type> <name pos:start="3:28" pos:end="3:28">s</name><init pos:start="3:29" pos:end="3:35">= <expr pos:start="3:31" pos:end="3:35"><operator pos:start="3:31" pos:end="3:31">&amp;</operator><name pos:start="3:32" pos:end="3:35"><name pos:start="3:32" pos:end="3:32">w</name><operator pos:start="3:33" pos:end="3:34">-&gt;</operator><name pos:start="3:35" pos:end="3:35">s</name></name></expr></init></decl>;</decl_stmt>



    <switch pos:start="7:5" pos:end="43:5">switch<condition pos:start="7:11" pos:end="7:32">(<expr pos:start="7:12" pos:end="7:31"><name pos:start="7:12" pos:end="7:31"><name pos:start="7:12" pos:end="7:12">w</name><operator pos:start="7:13" pos:end="7:14">-&gt;</operator><name pos:start="7:15" pos:end="7:28">abt_type_table</name><index pos:start="7:29" pos:end="7:31">[<expr pos:start="7:30" pos:end="7:30"><name pos:start="7:30" pos:end="7:30">n</name></expr>]</index></name></expr>)</condition><block pos:start="7:33" pos:end="43:5">{<block_content pos:start="9:5" pos:end="41:71">

    <case pos:start="9:5" pos:end="9:11">case <expr pos:start="9:10" pos:end="9:10"><literal type="number" pos:start="9:10" pos:end="9:10">0</literal></expr>:</case>

        <if_stmt pos:start="11:9" pos:end="15:9"><if pos:start="11:9" pos:end="15:9">if <condition pos:start="11:12" pos:end="11:40">(<expr pos:start="11:13" pos:end="11:39"><name pos:start="11:13" pos:end="11:34"><name pos:start="11:13" pos:end="11:13">s</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:31">block_last_index</name><index pos:start="11:32" pos:end="11:34">[<expr pos:start="11:33" pos:end="11:33"><name pos:start="11:33" pos:end="11:33">n</name></expr>]</index></name> <operator pos:start="11:36" pos:end="11:37">&gt;=</operator> <literal type="number" pos:start="11:39" pos:end="11:39">0</literal></expr>)</condition> <block pos:start="11:42" pos:end="15:9">{<block_content pos:start="13:13" pos:end="13:50">

            <expr_stmt pos:start="13:13" pos:end="13:50"><expr pos:start="13:13" pos:end="13:49"><call pos:start="13:13" pos:end="13:49"><name pos:start="13:13" pos:end="13:27"><name pos:start="13:13" pos:end="13:13">s</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:18">dsp</name><operator pos:start="13:19" pos:end="13:19">.</operator><name pos:start="13:20" pos:end="13:27">idct_add</name></name> <argument_list pos:start="13:29" pos:end="13:49">(<argument pos:start="13:30" pos:end="13:32"><expr pos:start="13:30" pos:end="13:32"><name pos:start="13:30" pos:end="13:32">dst</name></expr></argument>, <argument pos:start="13:35" pos:end="13:40"><expr pos:start="13:35" pos:end="13:40"><name pos:start="13:35" pos:end="13:40">stride</name></expr></argument>, <argument pos:start="13:43" pos:end="13:48"><expr pos:start="13:43" pos:end="13:48"><name pos:start="13:43" pos:end="13:48">block1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="17:9" pos:end="17:14">break;</break>

    <case pos:start="19:5" pos:end="19:11">case <expr pos:start="19:10" pos:end="19:10"><literal type="number" pos:start="19:10" pos:end="19:10">1</literal></expr>:</case>

        <expr_stmt pos:start="21:9" pos:end="21:58"><expr pos:start="21:9" pos:end="21:57"><call pos:start="21:9" pos:end="21:57"><name pos:start="21:9" pos:end="21:25">simple_idct84_add</name><argument_list pos:start="21:26" pos:end="21:57">(<argument pos:start="21:27" pos:end="21:29"><expr pos:start="21:27" pos:end="21:29"><name pos:start="21:27" pos:end="21:29">dst</name></expr></argument>           , <argument pos:start="21:43" pos:end="21:48"><expr pos:start="21:43" pos:end="21:48"><name pos:start="21:43" pos:end="21:48">stride</name></expr></argument>, <argument pos:start="21:51" pos:end="21:56"><expr pos:start="21:51" pos:end="21:56"><name pos:start="21:51" pos:end="21:56">block1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:68"><expr pos:start="23:9" pos:end="23:67"><call pos:start="23:9" pos:end="23:67"><name pos:start="23:9" pos:end="23:25">simple_idct84_add</name><argument_list pos:start="23:26" pos:end="23:67">(<argument pos:start="23:27" pos:end="23:40"><expr pos:start="23:27" pos:end="23:40"><name pos:start="23:27" pos:end="23:29">dst</name> <operator pos:start="23:31" pos:end="23:31">+</operator> <literal type="number" pos:start="23:33" pos:end="23:33">4</literal><operator pos:start="23:34" pos:end="23:34">*</operator><name pos:start="23:35" pos:end="23:40">stride</name></expr></argument>, <argument pos:start="23:43" pos:end="23:48"><expr pos:start="23:43" pos:end="23:48"><name pos:start="23:43" pos:end="23:48">stride</name></expr></argument>, <argument pos:start="23:51" pos:end="23:66"><expr pos:start="23:51" pos:end="23:66"><name pos:start="23:51" pos:end="23:66"><name pos:start="23:51" pos:end="23:51">w</name><operator pos:start="23:52" pos:end="23:53">-&gt;</operator><name pos:start="23:54" pos:end="23:63">abt_block2</name><index pos:start="23:64" pos:end="23:66">[<expr pos:start="23:65" pos:end="23:65"><name pos:start="23:65" pos:end="23:65">n</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:56"><expr pos:start="25:9" pos:end="25:55"><call pos:start="25:9" pos:end="25:55"><name pos:start="25:9" pos:end="25:14">memset</name><argument_list pos:start="25:15" pos:end="25:55">(<argument pos:start="25:16" pos:end="25:31"><expr pos:start="25:16" pos:end="25:31"><name pos:start="25:16" pos:end="25:31"><name pos:start="25:16" pos:end="25:16">w</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:28">abt_block2</name><index pos:start="25:29" pos:end="25:31">[<expr pos:start="25:30" pos:end="25:30"><name pos:start="25:30" pos:end="25:30">n</name></expr>]</index></name></expr></argument>, <argument pos:start="25:34" pos:end="25:34"><expr pos:start="25:34" pos:end="25:34"><literal type="number" pos:start="25:34" pos:end="25:34">0</literal></expr></argument>, <argument pos:start="25:37" pos:end="25:54"><expr pos:start="25:37" pos:end="25:54"><literal type="number" pos:start="25:37" pos:end="25:38">64</literal><operator pos:start="25:39" pos:end="25:39">*</operator><sizeof pos:start="25:40" pos:end="25:54">sizeof<argument_list pos:start="25:46" pos:end="25:54">(<argument pos:start="25:47" pos:end="25:53"><expr pos:start="25:47" pos:end="25:53"><name pos:start="25:47" pos:end="25:53">DCTELEM</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="27:9" pos:end="27:14">break;</break>

    <case pos:start="29:5" pos:end="29:11">case <expr pos:start="29:10" pos:end="29:10"><literal type="number" pos:start="29:10" pos:end="29:10">2</literal></expr>:</case>

        <expr_stmt pos:start="31:9" pos:end="31:58"><expr pos:start="31:9" pos:end="31:57"><call pos:start="31:9" pos:end="31:57"><name pos:start="31:9" pos:end="31:25">simple_idct48_add</name><argument_list pos:start="31:26" pos:end="31:57">(<argument pos:start="31:27" pos:end="31:29"><expr pos:start="31:27" pos:end="31:29"><name pos:start="31:27" pos:end="31:29">dst</name></expr></argument>           , <argument pos:start="31:43" pos:end="31:48"><expr pos:start="31:43" pos:end="31:48"><name pos:start="31:43" pos:end="31:48">stride</name></expr></argument>, <argument pos:start="31:51" pos:end="31:56"><expr pos:start="31:51" pos:end="31:56"><name pos:start="31:51" pos:end="31:56">block1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:68"><expr pos:start="33:9" pos:end="33:67"><call pos:start="33:9" pos:end="33:67"><name pos:start="33:9" pos:end="33:25">simple_idct48_add</name><argument_list pos:start="33:26" pos:end="33:67">(<argument pos:start="33:27" pos:end="33:33"><expr pos:start="33:27" pos:end="33:33"><name pos:start="33:27" pos:end="33:29">dst</name> <operator pos:start="33:31" pos:end="33:31">+</operator> <literal type="number" pos:start="33:33" pos:end="33:33">4</literal></expr></argument>       , <argument pos:start="33:43" pos:end="33:48"><expr pos:start="33:43" pos:end="33:48"><name pos:start="33:43" pos:end="33:48">stride</name></expr></argument>, <argument pos:start="33:51" pos:end="33:66"><expr pos:start="33:51" pos:end="33:66"><name pos:start="33:51" pos:end="33:66"><name pos:start="33:51" pos:end="33:51">w</name><operator pos:start="33:52" pos:end="33:53">-&gt;</operator><name pos:start="33:54" pos:end="33:63">abt_block2</name><index pos:start="33:64" pos:end="33:66">[<expr pos:start="33:65" pos:end="33:65"><name pos:start="33:65" pos:end="33:65">n</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:56"><expr pos:start="35:9" pos:end="35:55"><call pos:start="35:9" pos:end="35:55"><name pos:start="35:9" pos:end="35:14">memset</name><argument_list pos:start="35:15" pos:end="35:55">(<argument pos:start="35:16" pos:end="35:31"><expr pos:start="35:16" pos:end="35:31"><name pos:start="35:16" pos:end="35:31"><name pos:start="35:16" pos:end="35:16">w</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:28">abt_block2</name><index pos:start="35:29" pos:end="35:31">[<expr pos:start="35:30" pos:end="35:30"><name pos:start="35:30" pos:end="35:30">n</name></expr>]</index></name></expr></argument>, <argument pos:start="35:34" pos:end="35:34"><expr pos:start="35:34" pos:end="35:34"><literal type="number" pos:start="35:34" pos:end="35:34">0</literal></expr></argument>, <argument pos:start="35:37" pos:end="35:54"><expr pos:start="35:37" pos:end="35:54"><literal type="number" pos:start="35:37" pos:end="35:38">64</literal><operator pos:start="35:39" pos:end="35:39">*</operator><sizeof pos:start="35:40" pos:end="35:54">sizeof<argument_list pos:start="35:46" pos:end="35:54">(<argument pos:start="35:47" pos:end="35:53"><expr pos:start="35:47" pos:end="35:53"><name pos:start="35:47" pos:end="35:53">DCTELEM</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    <default pos:start="39:5" pos:end="39:12">default:</default>

        <expr_stmt pos:start="41:9" pos:end="41:71"><expr pos:start="41:9" pos:end="41:70"><call pos:start="41:9" pos:end="41:70"><name pos:start="41:9" pos:end="41:14">av_log</name><argument_list pos:start="41:15" pos:end="41:70">(<argument pos:start="41:16" pos:end="41:23"><expr pos:start="41:16" pos:end="41:23"><name pos:start="41:16" pos:end="41:23"><name pos:start="41:16" pos:end="41:16">s</name><operator pos:start="41:17" pos:end="41:18">-&gt;</operator><name pos:start="41:19" pos:end="41:23">avctx</name></name></expr></argument>, <argument pos:start="41:26" pos:end="41:37"><expr pos:start="41:26" pos:end="41:37"><name pos:start="41:26" pos:end="41:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="41:40" pos:end="41:69"><expr pos:start="41:40" pos:end="41:69"><literal type="string" pos:start="41:40" pos:end="41:69">"internal error in WMV2 abt\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
