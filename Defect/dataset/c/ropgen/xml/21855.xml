<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21855.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:30">helper_float_check_status</name> <parameter_list pos:start="1:32" pos:end="1:37">(<parameter pos:start="1:33" pos:end="1:36"><decl pos:start="1:33" pos:end="1:36"><type pos:start="1:33" pos:end="1:36"><name pos:start="1:33" pos:end="1:36">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="7:5" pos:end="52:0">

<cpp:ifdef pos:start="5:1" pos:end="5:23">#<cpp:directive pos:start="5:2" pos:end="5:6">ifdef</cpp:directive> <name pos:start="5:8" pos:end="5:23">CONFIG_SOFTFLOAT</name></cpp:ifdef>

    <if_stmt pos:start="7:5" pos:end="38:0"><if pos:start="7:5" pos:end="17:5">if <condition pos:start="7:8" pos:end="9:44">(<expr pos:start="7:9" pos:end="9:43"><name pos:start="7:9" pos:end="7:28"><name pos:start="7:9" pos:end="7:11">env</name><operator pos:start="7:12" pos:end="7:13">-&gt;</operator><name pos:start="7:14" pos:end="7:28">exception_index</name></name> <operator pos:start="7:30" pos:end="7:31">==</operator> <name pos:start="7:33" pos:end="7:52">POWERPC_EXCP_PROGRAM</name> <operator pos:start="7:54" pos:end="7:55">&amp;&amp;</operator>

        <operator pos:start="9:9" pos:end="9:9">(</operator><name pos:start="9:10" pos:end="9:24"><name pos:start="9:10" pos:end="9:12">env</name><operator pos:start="9:13" pos:end="9:14">-&gt;</operator><name pos:start="9:15" pos:end="9:24">error_code</name></name> <operator pos:start="9:26" pos:end="9:26">&amp;</operator> <name pos:start="9:28" pos:end="9:42">POWERPC_EXCP_FP</name><operator pos:start="9:43" pos:end="9:43">)</operator></expr>)</condition> <block pos:start="9:46" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:78">

        <comment type="block" pos:start="11:9" pos:end="11:72">/* Differred floating-point exception after target FPR update */</comment>

        <if_stmt pos:start="13:9" pos:end="15:78"><if pos:start="13:9" pos:end="15:78">if <condition pos:start="13:12" pos:end="13:41">(<expr pos:start="13:13" pos:end="13:40"><name pos:start="13:13" pos:end="13:19">msr_fe0</name> <operator pos:start="13:21" pos:end="13:22">!=</operator> <literal type="number" pos:start="13:24" pos:end="13:24">0</literal> <operator pos:start="13:26" pos:end="13:27">||</operator> <name pos:start="13:29" pos:end="13:35">msr_fe1</name> <operator pos:start="13:37" pos:end="13:38">!=</operator> <literal type="number" pos:start="13:40" pos:end="13:40">0</literal></expr>)</condition><block type="pseudo" pos:start="15:13" pos:end="15:78"><block_content pos:start="15:13" pos:end="15:78">

            <expr_stmt pos:start="15:13" pos:end="15:78"><expr pos:start="15:13" pos:end="15:77"><call pos:start="15:13" pos:end="15:77"><name pos:start="15:13" pos:end="15:38">helper_raise_exception_err</name><argument_list pos:start="15:39" pos:end="15:77">(<argument pos:start="15:40" pos:end="15:59"><expr pos:start="15:40" pos:end="15:59"><name pos:start="15:40" pos:end="15:59"><name pos:start="15:40" pos:end="15:42">env</name><operator pos:start="15:43" pos:end="15:44">-&gt;</operator><name pos:start="15:45" pos:end="15:59">exception_index</name></name></expr></argument>, <argument pos:start="15:62" pos:end="15:76"><expr pos:start="15:62" pos:end="15:76"><name pos:start="15:62" pos:end="15:76"><name pos:start="15:62" pos:end="15:64">env</name><operator pos:start="15:65" pos:end="15:66">-&gt;</operator><name pos:start="15:67" pos:end="15:76">error_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="17:7" pos:end="38:0">else <block pos:start="17:12" pos:end="38:0">{<block_content pos:start="19:9" pos:end="33:9">

        <decl_stmt pos:start="19:9" pos:end="19:64"><decl pos:start="19:9" pos:end="19:63"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:18">status</name> <init pos:start="19:20" pos:end="19:63">= <expr pos:start="19:22" pos:end="19:63"><call pos:start="19:22" pos:end="19:63"><name pos:start="19:22" pos:end="19:46">get_float_exception_flags</name><argument_list pos:start="19:47" pos:end="19:63">(<argument pos:start="19:48" pos:end="19:62"><expr pos:start="19:48" pos:end="19:62"><operator pos:start="19:48" pos:end="19:48">&amp;</operator><name pos:start="19:49" pos:end="19:62"><name pos:start="19:49" pos:end="19:51">env</name><operator pos:start="19:52" pos:end="19:53">-&gt;</operator><name pos:start="19:54" pos:end="19:62">fp_status</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="21:9" pos:end="33:9"><if pos:start="21:9" pos:end="25:9">if <condition pos:start="21:12" pos:end="21:41">(<expr pos:start="21:13" pos:end="21:40"><name pos:start="21:13" pos:end="21:18">status</name> <operator pos:start="21:20" pos:end="21:20">&amp;</operator> <name pos:start="21:22" pos:end="21:40">float_flag_overflow</name></expr>)</condition> <block pos:start="21:43" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:34">

            <expr_stmt pos:start="23:13" pos:end="23:34"><expr pos:start="23:13" pos:end="23:33"><call pos:start="23:13" pos:end="23:33"><name pos:start="23:13" pos:end="23:31">float_overflow_excp</name><argument_list pos:start="23:32" pos:end="23:33">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="25:11" pos:end="29:9">else if <condition pos:start="25:19" pos:end="25:49">(<expr pos:start="25:20" pos:end="25:48"><name pos:start="25:20" pos:end="25:25">status</name> <operator pos:start="25:27" pos:end="25:27">&amp;</operator> <name pos:start="25:29" pos:end="25:48">float_flag_underflow</name></expr>)</condition> <block pos:start="25:51" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:35">

            <expr_stmt pos:start="27:13" pos:end="27:35"><expr pos:start="27:13" pos:end="27:34"><call pos:start="27:13" pos:end="27:34"><name pos:start="27:13" pos:end="27:32">float_underflow_excp</name><argument_list pos:start="27:33" pos:end="27:34">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="29:11" pos:end="33:9">else if <condition pos:start="29:19" pos:end="29:47">(<expr pos:start="29:20" pos:end="29:46"><name pos:start="29:20" pos:end="29:25">status</name> <operator pos:start="29:27" pos:end="29:27">&amp;</operator> <name pos:start="29:29" pos:end="29:46">float_flag_inexact</name></expr>)</condition> <block pos:start="29:49" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:33">

            <expr_stmt pos:start="31:13" pos:end="31:33"><expr pos:start="31:13" pos:end="31:32"><call pos:start="31:13" pos:end="31:32"><name pos:start="31:13" pos:end="31:30">float_inexact_excp</name><argument_list pos:start="31:31" pos:end="31:32">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

<cpp:else pos:start="37:1" pos:end="37:5">#<cpp:directive pos:start="37:2" pos:end="37:5">else</cpp:directive></cpp:else>

    <if_stmt pos:start="39:5" pos:end="52:0"><if pos:start="39:5" pos:end="52:0">if <condition pos:start="39:8" pos:end="41:44">(<expr pos:start="39:9" pos:end="41:43"><name pos:start="39:9" pos:end="39:28"><name pos:start="39:9" pos:end="39:11">env</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:28">exception_index</name></name> <operator pos:start="39:30" pos:end="39:31">==</operator> <name pos:start="39:33" pos:end="39:52">POWERPC_EXCP_PROGRAM</name> <operator pos:start="39:54" pos:end="39:55">&amp;&amp;</operator>

        <operator pos:start="41:9" pos:end="41:9">(</operator><name pos:start="41:10" pos:end="41:24"><name pos:start="41:10" pos:end="41:12">env</name><operator pos:start="41:13" pos:end="41:14">-&gt;</operator><name pos:start="41:15" pos:end="41:24">error_code</name></name> <operator pos:start="41:26" pos:end="41:26">&amp;</operator> <name pos:start="41:28" pos:end="41:42">POWERPC_EXCP_FP</name><operator pos:start="41:43" pos:end="41:43">)</operator></expr>)</condition> <block pos:start="41:46" pos:end="52:0">{<block_content pos:start="45:9" pos:end="47:78">

        <comment type="block" pos:start="43:9" pos:end="43:72">/* Differred floating-point exception after target FPR update */</comment>

        <if_stmt pos:start="45:9" pos:end="47:78"><if pos:start="45:9" pos:end="47:78">if <condition pos:start="45:12" pos:end="45:41">(<expr pos:start="45:13" pos:end="45:40"><name pos:start="45:13" pos:end="45:19">msr_fe0</name> <operator pos:start="45:21" pos:end="45:22">!=</operator> <literal type="number" pos:start="45:24" pos:end="45:24">0</literal> <operator pos:start="45:26" pos:end="45:27">||</operator> <name pos:start="45:29" pos:end="45:35">msr_fe1</name> <operator pos:start="45:37" pos:end="45:38">!=</operator> <literal type="number" pos:start="45:40" pos:end="45:40">0</literal></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:78"><block_content pos:start="47:13" pos:end="47:78">

            <expr_stmt pos:start="47:13" pos:end="47:78"><expr pos:start="47:13" pos:end="47:77"><call pos:start="47:13" pos:end="47:77"><name pos:start="47:13" pos:end="47:38">helper_raise_exception_err</name><argument_list pos:start="47:39" pos:end="47:77">(<argument pos:start="47:40" pos:end="47:59"><expr pos:start="47:40" pos:end="47:59"><name pos:start="47:40" pos:end="47:59"><name pos:start="47:40" pos:end="47:42">env</name><operator pos:start="47:43" pos:end="47:44">-&gt;</operator><name pos:start="47:45" pos:end="47:59">exception_index</name></name></expr></argument>, <argument pos:start="47:62" pos:end="47:76"><expr pos:start="47:62" pos:end="47:76"><name pos:start="47:62" pos:end="47:76"><name pos:start="47:62" pos:end="47:64">env</name><operator pos:start="47:65" pos:end="47:66">-&gt;</operator><name pos:start="47:67" pos:end="47:76">error_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="51:1" pos:end="51:6">#<cpp:directive pos:start="51:2" pos:end="51:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
