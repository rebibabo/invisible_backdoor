<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24476.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:37">decode_cabac_intra_mb_type</name><parameter_list pos:start="1:38" pos:end="1:84">(<parameter pos:start="1:39" pos:end="1:52"><decl pos:start="1:39" pos:end="1:52"><type pos:start="1:39" pos:end="1:52"><name pos:start="1:39" pos:end="1:49">H264Context</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">h</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:66"><decl pos:start="1:55" pos:end="1:66"><type pos:start="1:55" pos:end="1:66"><name pos:start="1:55" pos:end="1:57">int</name></type> <name pos:start="1:59" pos:end="1:66">ctx_base</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:83"><decl pos:start="1:69" pos:end="1:83"><type pos:start="1:69" pos:end="1:83"><name pos:start="1:69" pos:end="1:71">int</name></type> <name pos:start="1:73" pos:end="1:83">intra_slice</name></decl></parameter>)</parameter_list> <block pos:start="1:86" pos:end="63:1">{<block_content pos:start="3:5" pos:end="61:19">

    <decl_stmt pos:start="3:5" pos:end="3:46"><decl pos:start="3:5" pos:end="3:45"><type pos:start="3:5" pos:end="3:13"><name pos:start="3:5" pos:end="3:11">uint8_t</name> <modifier pos:start="3:13" pos:end="3:13">*</modifier></type><name pos:start="3:14" pos:end="3:18">state</name><init pos:start="3:19" pos:end="3:45">= <expr pos:start="3:21" pos:end="3:45"><operator pos:start="3:21" pos:end="3:21">&amp;</operator><name pos:start="3:22" pos:end="3:45"><name pos:start="3:22" pos:end="3:22">h</name><operator pos:start="3:23" pos:end="3:24">-&gt;</operator><name pos:start="3:25" pos:end="3:35">cabac_state</name><index pos:start="3:36" pos:end="3:45">[<expr pos:start="3:37" pos:end="3:44"><name pos:start="3:37" pos:end="3:44">ctx_base</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:15">mb_type</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="39:5"><if pos:start="9:5" pos:end="33:5">if<condition pos:start="9:7" pos:end="9:19">(<expr pos:start="9:8" pos:end="9:18"><name pos:start="9:8" pos:end="9:18">intra_slice</name></expr>)</condition><block pos:start="9:20" pos:end="33:5">{<block_content pos:start="11:9" pos:end="31:19">

        <decl_stmt pos:start="11:9" pos:end="11:41"><decl pos:start="11:9" pos:end="11:40"><type pos:start="11:9" pos:end="11:30"><name pos:start="11:9" pos:end="11:22">MpegEncContext</name> <modifier pos:start="11:24" pos:end="11:24">*</modifier> <specifier pos:start="11:26" pos:end="11:30">const</specifier></type> <name pos:start="11:32" pos:end="11:32">s</name> <init pos:start="11:34" pos:end="11:40">= <expr pos:start="11:36" pos:end="11:40"><operator pos:start="11:36" pos:end="11:36">&amp;</operator><name pos:start="11:37" pos:end="11:40"><name pos:start="11:37" pos:end="11:37">h</name><operator pos:start="11:38" pos:end="11:39">-&gt;</operator><name pos:start="11:40" pos:end="11:40">s</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="13:9" pos:end="13:44"><decl pos:start="13:9" pos:end="13:43"><type pos:start="13:9" pos:end="13:17"><specifier pos:start="13:9" pos:end="13:13">const</specifier> <name pos:start="13:15" pos:end="13:17">int</name></type> <name pos:start="13:19" pos:end="13:24">mba_xy</name> <init pos:start="13:26" pos:end="13:43">= <expr pos:start="13:28" pos:end="13:43"><name pos:start="13:28" pos:end="13:43"><name pos:start="13:28" pos:end="13:28">h</name><operator pos:start="13:29" pos:end="13:30">-&gt;</operator><name pos:start="13:31" pos:end="13:40">left_mb_xy</name><index pos:start="13:41" pos:end="13:43">[<expr pos:start="13:42" pos:end="13:42"><literal type="number" pos:start="13:42" pos:end="13:42">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="15:9" pos:end="15:40"><decl pos:start="15:9" pos:end="15:39"><type pos:start="15:9" pos:end="15:17"><specifier pos:start="15:9" pos:end="15:13">const</specifier> <name pos:start="15:15" pos:end="15:17">int</name></type> <name pos:start="15:19" pos:end="15:24">mbb_xy</name> <init pos:start="15:26" pos:end="15:39">= <expr pos:start="15:28" pos:end="15:39"><name pos:start="15:28" pos:end="15:39"><name pos:start="15:28" pos:end="15:28">h</name><operator pos:start="15:29" pos:end="15:30">-&gt;</operator><name pos:start="15:31" pos:end="15:39">top_mb_xy</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:18"><decl pos:start="17:9" pos:end="17:17"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:15">ctx</name><init pos:start="17:16" pos:end="17:17">=<expr pos:start="17:17" pos:end="17:17"><literal type="number" pos:start="17:17" pos:end="17:17">0</literal></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="19:9" pos:end="21:18"><if pos:start="19:9" pos:end="21:18">if<condition pos:start="19:11" pos:end="19:106">( <expr pos:start="19:13" pos:end="19:104"><name pos:start="19:13" pos:end="19:34"><name pos:start="19:13" pos:end="19:13">h</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:26">slice_table</name><index pos:start="19:27" pos:end="19:34">[<expr pos:start="19:28" pos:end="19:33"><name pos:start="19:28" pos:end="19:33">mba_xy</name></expr>]</index></name> <operator pos:start="19:36" pos:end="19:37">==</operator> <name pos:start="19:39" pos:end="19:50"><name pos:start="19:39" pos:end="19:39">h</name><operator pos:start="19:40" pos:end="19:41">-&gt;</operator><name pos:start="19:42" pos:end="19:50">slice_num</name></name> <operator pos:start="19:52" pos:end="19:53">&amp;&amp;</operator> <operator pos:start="19:55" pos:end="19:55">!</operator><call pos:start="19:56" pos:end="19:104"><name pos:start="19:56" pos:end="19:66">IS_INTRA4x4</name><argument_list pos:start="19:67" pos:end="19:104">( <argument pos:start="19:69" pos:end="19:102"><expr pos:start="19:69" pos:end="19:102"><name pos:start="19:69" pos:end="19:102"><name pos:start="19:69" pos:end="19:69">s</name><operator pos:start="19:70" pos:end="19:71">-&gt;</operator><name pos:start="19:72" pos:end="19:86">current_picture</name><operator pos:start="19:87" pos:end="19:87">.</operator><name pos:start="19:88" pos:end="19:94">mb_type</name><index pos:start="19:95" pos:end="19:102">[<expr pos:start="19:96" pos:end="19:101"><name pos:start="19:96" pos:end="19:101">mba_xy</name></expr>]</index></name></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo" pos:start="21:13" pos:end="21:18"><block_content pos:start="21:13" pos:end="21:18">

            <expr_stmt pos:start="21:13" pos:end="21:18"><expr pos:start="21:13" pos:end="21:17"><name pos:start="21:13" pos:end="21:15">ctx</name><operator pos:start="21:16" pos:end="21:17">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="23:9" pos:end="25:18"><if pos:start="23:9" pos:end="25:18">if<condition pos:start="23:11" pos:end="23:106">( <expr pos:start="23:13" pos:end="23:104"><name pos:start="23:13" pos:end="23:34"><name pos:start="23:13" pos:end="23:13">h</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:26">slice_table</name><index pos:start="23:27" pos:end="23:34">[<expr pos:start="23:28" pos:end="23:33"><name pos:start="23:28" pos:end="23:33">mbb_xy</name></expr>]</index></name> <operator pos:start="23:36" pos:end="23:37">==</operator> <name pos:start="23:39" pos:end="23:50"><name pos:start="23:39" pos:end="23:39">h</name><operator pos:start="23:40" pos:end="23:41">-&gt;</operator><name pos:start="23:42" pos:end="23:50">slice_num</name></name> <operator pos:start="23:52" pos:end="23:53">&amp;&amp;</operator> <operator pos:start="23:55" pos:end="23:55">!</operator><call pos:start="23:56" pos:end="23:104"><name pos:start="23:56" pos:end="23:66">IS_INTRA4x4</name><argument_list pos:start="23:67" pos:end="23:104">( <argument pos:start="23:69" pos:end="23:102"><expr pos:start="23:69" pos:end="23:102"><name pos:start="23:69" pos:end="23:102"><name pos:start="23:69" pos:end="23:69">s</name><operator pos:start="23:70" pos:end="23:71">-&gt;</operator><name pos:start="23:72" pos:end="23:86">current_picture</name><operator pos:start="23:87" pos:end="23:87">.</operator><name pos:start="23:88" pos:end="23:94">mb_type</name><index pos:start="23:95" pos:end="23:102">[<expr pos:start="23:96" pos:end="23:101"><name pos:start="23:96" pos:end="23:101">mbb_xy</name></expr>]</index></name></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo" pos:start="25:13" pos:end="25:18"><block_content pos:start="25:13" pos:end="25:18">

            <expr_stmt pos:start="25:13" pos:end="25:18"><expr pos:start="25:13" pos:end="25:17"><name pos:start="25:13" pos:end="25:15">ctx</name><operator pos:start="25:16" pos:end="25:17">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="27:9" pos:end="29:21"><if pos:start="27:9" pos:end="29:21">if<condition pos:start="27:11" pos:end="27:63">( <expr pos:start="27:13" pos:end="27:61"><call pos:start="27:13" pos:end="27:56"><name pos:start="27:13" pos:end="27:30">get_cabac_noinline</name><argument_list pos:start="27:31" pos:end="27:56">( <argument pos:start="27:33" pos:end="27:41"><expr pos:start="27:33" pos:end="27:41"><operator pos:start="27:33" pos:end="27:33">&amp;</operator><name pos:start="27:34" pos:end="27:41"><name pos:start="27:34" pos:end="27:34">h</name><operator pos:start="27:35" pos:end="27:36">-&gt;</operator><name pos:start="27:37" pos:end="27:41">cabac</name></name></expr></argument>, <argument pos:start="27:44" pos:end="27:54"><expr pos:start="27:44" pos:end="27:54"><operator pos:start="27:44" pos:end="27:44">&amp;</operator><name pos:start="27:45" pos:end="27:54"><name pos:start="27:45" pos:end="27:49">state</name><index pos:start="27:50" pos:end="27:54">[<expr pos:start="27:51" pos:end="27:53"><name pos:start="27:51" pos:end="27:53">ctx</name></expr>]</index></name></expr></argument> )</argument_list></call> <operator pos:start="27:58" pos:end="27:59">==</operator> <literal type="number" pos:start="27:61" pos:end="27:61">0</literal></expr> )</condition><block type="pseudo" pos:start="29:13" pos:end="29:21"><block_content pos:start="29:13" pos:end="29:21">

            <return pos:start="29:13" pos:end="29:21">return <expr pos:start="29:20" pos:end="29:20"><literal type="number" pos:start="29:20" pos:end="29:20">0</literal></expr>;</return></block_content></block></if></if_stmt>   <comment type="block" pos:start="29:25" pos:end="29:34">/* I4x4 */</comment>

        <expr_stmt pos:start="31:9" pos:end="31:19"><expr pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:13">state</name> <operator pos:start="31:15" pos:end="31:16">+=</operator> <literal type="number" pos:start="31:18" pos:end="31:18">2</literal></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="33:6" pos:end="39:5">else<block pos:start="33:10" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:21">

        <if_stmt pos:start="35:9" pos:end="37:21"><if pos:start="35:9" pos:end="37:21">if<condition pos:start="35:11" pos:end="35:57">( <expr pos:start="35:13" pos:end="35:55"><call pos:start="35:13" pos:end="35:50"><name pos:start="35:13" pos:end="35:30">get_cabac_noinline</name><argument_list pos:start="35:31" pos:end="35:50">( <argument pos:start="35:33" pos:end="35:41"><expr pos:start="35:33" pos:end="35:41"><operator pos:start="35:33" pos:end="35:33">&amp;</operator><name pos:start="35:34" pos:end="35:41"><name pos:start="35:34" pos:end="35:34">h</name><operator pos:start="35:35" pos:end="35:36">-&gt;</operator><name pos:start="35:37" pos:end="35:41">cabac</name></name></expr></argument>, <argument pos:start="35:44" pos:end="35:48"><expr pos:start="35:44" pos:end="35:48"><name pos:start="35:44" pos:end="35:48">state</name></expr></argument> )</argument_list></call> <operator pos:start="35:52" pos:end="35:53">==</operator> <literal type="number" pos:start="35:55" pos:end="35:55">0</literal></expr> )</condition><block type="pseudo" pos:start="37:13" pos:end="37:21"><block_content pos:start="37:13" pos:end="37:21">

            <return pos:start="37:13" pos:end="37:21">return <expr pos:start="37:20" pos:end="37:20"><literal type="number" pos:start="37:20" pos:end="37:20">0</literal></expr>;</return></block_content></block></if></if_stmt>   <comment type="block" pos:start="37:25" pos:end="37:34">/* I4x4 */</comment>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="43:5" pos:end="45:18"><if pos:start="43:5" pos:end="45:18">if<condition pos:start="43:7" pos:end="43:42">( <expr pos:start="43:9" pos:end="43:40"><call pos:start="43:9" pos:end="43:40"><name pos:start="43:9" pos:end="43:27">get_cabac_terminate</name><argument_list pos:start="43:28" pos:end="43:40">( <argument pos:start="43:30" pos:end="43:38"><expr pos:start="43:30" pos:end="43:38"><operator pos:start="43:30" pos:end="43:30">&amp;</operator><name pos:start="43:31" pos:end="43:38"><name pos:start="43:31" pos:end="43:31">h</name><operator pos:start="43:32" pos:end="43:33">-&gt;</operator><name pos:start="43:34" pos:end="43:38">cabac</name></name></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo" pos:start="45:9" pos:end="45:18"><block_content pos:start="45:9" pos:end="45:18">

        <return pos:start="45:9" pos:end="45:18">return <expr pos:start="45:16" pos:end="45:17"><literal type="number" pos:start="45:16" pos:end="45:17">25</literal></expr>;</return></block_content></block></if></if_stmt>  <comment type="block" pos:start="45:21" pos:end="45:29">/* PCM */</comment>



    <expr_stmt pos:start="49:5" pos:end="49:16"><expr pos:start="49:5" pos:end="49:15"><name pos:start="49:5" pos:end="49:11">mb_type</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <literal type="number" pos:start="49:15" pos:end="49:15">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="49:18" pos:end="49:29">/* I16x16 */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:63"><expr pos:start="51:5" pos:end="51:62"><name pos:start="51:5" pos:end="51:11">mb_type</name> <operator pos:start="51:13" pos:end="51:14">+=</operator> <literal type="number" pos:start="51:16" pos:end="51:17">12</literal> <operator pos:start="51:19" pos:end="51:19">*</operator> <call pos:start="51:21" pos:end="51:62"><name pos:start="51:21" pos:end="51:38">get_cabac_noinline</name><argument_list pos:start="51:39" pos:end="51:62">( <argument pos:start="51:41" pos:end="51:49"><expr pos:start="51:41" pos:end="51:49"><operator pos:start="51:41" pos:end="51:41">&amp;</operator><name pos:start="51:42" pos:end="51:49"><name pos:start="51:42" pos:end="51:42">h</name><operator pos:start="51:43" pos:end="51:44">-&gt;</operator><name pos:start="51:45" pos:end="51:49">cabac</name></name></expr></argument>, <argument pos:start="51:52" pos:end="51:60"><expr pos:start="51:52" pos:end="51:60"><operator pos:start="51:52" pos:end="51:52">&amp;</operator><name pos:start="51:53" pos:end="51:60"><name pos:start="51:53" pos:end="51:57">state</name><index pos:start="51:58" pos:end="51:60">[<expr pos:start="51:59" pos:end="51:59"><literal type="number" pos:start="51:59" pos:end="51:59">1</literal></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="51:65" pos:end="51:83">/* cbp_luma != 0 */</comment>

    <if_stmt pos:start="53:5" pos:end="55:82"><if pos:start="53:5" pos:end="55:82">if<condition pos:start="53:7" pos:end="53:52">( <expr pos:start="53:9" pos:end="53:50"><call pos:start="53:9" pos:end="53:50"><name pos:start="53:9" pos:end="53:26">get_cabac_noinline</name><argument_list pos:start="53:27" pos:end="53:50">( <argument pos:start="53:29" pos:end="53:37"><expr pos:start="53:29" pos:end="53:37"><operator pos:start="53:29" pos:end="53:29">&amp;</operator><name pos:start="53:30" pos:end="53:37"><name pos:start="53:30" pos:end="53:30">h</name><operator pos:start="53:31" pos:end="53:32">-&gt;</operator><name pos:start="53:33" pos:end="53:37">cabac</name></name></expr></argument>, <argument pos:start="53:40" pos:end="53:48"><expr pos:start="53:40" pos:end="53:48"><operator pos:start="53:40" pos:end="53:40">&amp;</operator><name pos:start="53:41" pos:end="53:48"><name pos:start="53:41" pos:end="53:45">state</name><index pos:start="53:46" pos:end="53:48">[<expr pos:start="53:47" pos:end="53:47"><literal type="number" pos:start="53:47" pos:end="53:47">2</literal></expr>]</index></name></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo" pos:start="55:9" pos:end="55:82"><block_content pos:start="55:9" pos:end="55:82"> <comment type="block" pos:start="53:54" pos:end="53:69">/* cbp_chroma */</comment>

        <expr_stmt pos:start="55:9" pos:end="55:82"><expr pos:start="55:9" pos:end="55:81"><name pos:start="55:9" pos:end="55:15">mb_type</name> <operator pos:start="55:17" pos:end="55:18">+=</operator> <literal type="number" pos:start="55:20" pos:end="55:22">4</literal> <operator pos:start="55:22" pos:end="55:22">+</operator> <literal type="number" pos:start="55:24" pos:end="55:24">4</literal> <operator pos:start="55:26" pos:end="55:26">*</operator> <call pos:start="55:28" pos:end="55:81"><name pos:start="55:28" pos:end="55:45">get_cabac_noinline</name><argument_list pos:start="55:46" pos:end="55:81">( <argument pos:start="55:48" pos:end="55:56"><expr pos:start="55:48" pos:end="55:56"><operator pos:start="55:48" pos:end="55:48">&amp;</operator><name pos:start="55:49" pos:end="55:56"><name pos:start="55:49" pos:end="55:49">h</name><operator pos:start="55:50" pos:end="55:51">-&gt;</operator><name pos:start="55:52" pos:end="55:56">cabac</name></name></expr></argument>, <argument pos:start="55:59" pos:end="55:79"><expr pos:start="55:59" pos:end="55:79"><operator pos:start="55:59" pos:end="55:59">&amp;</operator><name pos:start="55:60" pos:end="55:79"><name pos:start="55:60" pos:end="55:64">state</name><index pos:start="55:65" pos:end="55:79">[<expr pos:start="55:66" pos:end="55:78"><literal type="number" pos:start="55:66" pos:end="55:67">2</literal><operator pos:start="55:67" pos:end="55:67">+</operator><name pos:start="55:68" pos:end="55:78">intra_slice</name></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:74"><expr pos:start="57:5" pos:end="57:73"><name pos:start="57:5" pos:end="57:11">mb_type</name> <operator pos:start="57:13" pos:end="57:14">+=</operator> <literal type="number" pos:start="57:16" pos:end="57:16">2</literal> <operator pos:start="57:18" pos:end="57:18">*</operator> <call pos:start="57:20" pos:end="57:73"><name pos:start="57:20" pos:end="57:37">get_cabac_noinline</name><argument_list pos:start="57:38" pos:end="57:73">( <argument pos:start="57:40" pos:end="57:48"><expr pos:start="57:40" pos:end="57:48"><operator pos:start="57:40" pos:end="57:40">&amp;</operator><name pos:start="57:41" pos:end="57:48"><name pos:start="57:41" pos:end="57:41">h</name><operator pos:start="57:42" pos:end="57:43">-&gt;</operator><name pos:start="57:44" pos:end="57:48">cabac</name></name></expr></argument>, <argument pos:start="57:51" pos:end="57:71"><expr pos:start="57:51" pos:end="57:71"><operator pos:start="57:51" pos:end="57:51">&amp;</operator><name pos:start="57:52" pos:end="57:71"><name pos:start="57:52" pos:end="57:56">state</name><index pos:start="57:57" pos:end="57:71">[<expr pos:start="57:58" pos:end="57:70"><literal type="number" pos:start="57:58" pos:end="57:59">3</literal><operator pos:start="57:59" pos:end="57:59">+</operator><name pos:start="57:60" pos:end="57:70">intra_slice</name></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:76"><expr pos:start="59:5" pos:end="59:75"><name pos:start="59:5" pos:end="59:11">mb_type</name> <operator pos:start="59:13" pos:end="59:14">+=</operator> <literal type="number" pos:start="59:16" pos:end="59:16">1</literal> <operator pos:start="59:18" pos:end="59:18">*</operator> <call pos:start="59:20" pos:end="59:75"><name pos:start="59:20" pos:end="59:37">get_cabac_noinline</name><argument_list pos:start="59:38" pos:end="59:75">( <argument pos:start="59:40" pos:end="59:48"><expr pos:start="59:40" pos:end="59:48"><operator pos:start="59:40" pos:end="59:40">&amp;</operator><name pos:start="59:41" pos:end="59:48"><name pos:start="59:41" pos:end="59:41">h</name><operator pos:start="59:42" pos:end="59:43">-&gt;</operator><name pos:start="59:44" pos:end="59:48">cabac</name></name></expr></argument>, <argument pos:start="59:51" pos:end="59:73"><expr pos:start="59:51" pos:end="59:73"><operator pos:start="59:51" pos:end="59:51">&amp;</operator><name pos:start="59:52" pos:end="59:73"><name pos:start="59:52" pos:end="59:56">state</name><index pos:start="59:57" pos:end="59:73">[<expr pos:start="59:58" pos:end="59:72"><literal type="number" pos:start="59:58" pos:end="59:59">3</literal><operator pos:start="59:59" pos:end="59:59">+</operator><literal type="number" pos:start="59:60" pos:end="59:60">2</literal><operator pos:start="59:61" pos:end="59:61">*</operator><name pos:start="59:62" pos:end="59:72">intra_slice</name></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <return pos:start="61:5" pos:end="61:19">return <expr pos:start="61:12" pos:end="61:18"><name pos:start="61:12" pos:end="61:18">mb_type</name></expr>;</return>

</block_content>}</block></function>
</unit>
