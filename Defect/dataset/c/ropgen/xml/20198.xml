<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20198.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">blkdebug_co_flush</name><parameter_list pos:start="1:29" pos:end="1:50">(<parameter pos:start="1:30" pos:end="1:49"><decl pos:start="1:30" pos:end="1:49"><type pos:start="1:30" pos:end="1:47"><name pos:start="1:30" pos:end="1:45">BlockDriverState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:49">bs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:39">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21">BDRVBlkdebugState</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:24">s</name> <init pos:start="5:26" pos:end="5:37">= <expr pos:start="5:28" pos:end="5:37"><name pos:start="5:28" pos:end="5:37"><name pos:start="5:28" pos:end="5:29">bs</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:37">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">BlkdebugRule</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:22">rule</name> <init pos:start="7:24" pos:end="7:29">= <expr pos:start="7:26" pos:end="7:29"><name pos:start="7:26" pos:end="7:29">NULL</name></expr></init></decl>;</decl_stmt>



    <macro pos:start="11:5" pos:end="11:57"><name pos:start="11:5" pos:end="11:20">QSIMPLEQ_FOREACH</name><argument_list pos:start="11:21" pos:end="11:57">(<argument pos:start="11:22" pos:end="11:25">rule</argument>, <argument pos:start="11:28" pos:end="11:43">&amp;s-&gt;active_rules</argument>, <argument pos:start="11:46" pos:end="11:56">active_next</argument>)</argument_list></macro> <block pos:start="11:59" pos:end="19:5">{<block_content pos:start="13:9" pos:end="17:9">

        <if_stmt pos:start="13:9" pos:end="17:9"><if pos:start="13:9" pos:end="17:9">if <condition pos:start="13:12" pos:end="13:46">(<expr pos:start="13:13" pos:end="13:45"><name pos:start="13:13" pos:end="13:39"><name pos:start="13:13" pos:end="13:16">rule</name><operator pos:start="13:17" pos:end="13:18">-&gt;</operator><name pos:start="13:19" pos:end="13:25">options</name><operator pos:start="13:26" pos:end="13:26">.</operator><name pos:start="13:27" pos:end="13:32">inject</name><operator pos:start="13:33" pos:end="13:33">.</operator><name pos:start="13:34" pos:end="13:39">offset</name></name> <operator pos:start="13:41" pos:end="13:42">==</operator> <operator pos:start="13:44" pos:end="13:44">-</operator><literal type="number" pos:start="13:45" pos:end="13:45">1</literal></expr>)</condition> <block pos:start="13:48" pos:end="17:9">{<block_content pos:start="15:13" pos:end="15:18">

            <break pos:start="15:13" pos:end="15:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>



    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:43">(<expr pos:start="23:9" pos:end="23:42"><name pos:start="23:9" pos:end="23:12">rule</name> <operator pos:start="23:14" pos:end="23:15">&amp;&amp;</operator> <name pos:start="23:17" pos:end="23:42"><name pos:start="23:17" pos:end="23:20">rule</name><operator pos:start="23:21" pos:end="23:22">-&gt;</operator><name pos:start="23:23" pos:end="23:29">options</name><operator pos:start="23:30" pos:end="23:30">.</operator><name pos:start="23:31" pos:end="23:36">inject</name><operator pos:start="23:37" pos:end="23:37">.</operator><name pos:start="23:38" pos:end="23:42">error</name></name></expr>)</condition> <block pos:start="23:45" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:38">

        <return pos:start="25:9" pos:end="25:38">return <expr pos:start="25:16" pos:end="25:37"><call pos:start="25:16" pos:end="25:37"><name pos:start="25:16" pos:end="25:27">inject_error</name><argument_list pos:start="25:28" pos:end="25:37">(<argument pos:start="25:29" pos:end="25:30"><expr pos:start="25:29" pos:end="25:30"><name pos:start="25:29" pos:end="25:30">bs</name></expr></argument>, <argument pos:start="25:33" pos:end="25:36"><expr pos:start="25:33" pos:end="25:36"><name pos:start="25:33" pos:end="25:36">rule</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="31:5" pos:end="31:39">return <expr pos:start="31:12" pos:end="31:38"><call pos:start="31:12" pos:end="31:38"><name pos:start="31:12" pos:end="31:24">bdrv_co_flush</name><argument_list pos:start="31:25" pos:end="31:38">(<argument pos:start="31:26" pos:end="31:37"><expr pos:start="31:26" pos:end="31:37"><name pos:start="31:26" pos:end="31:37"><name pos:start="31:26" pos:end="31:27">bs</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:33">file</name><operator pos:start="31:34" pos:end="31:35">-&gt;</operator><name pos:start="31:36" pos:end="31:37">bs</name></name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
