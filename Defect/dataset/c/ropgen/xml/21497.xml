<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21497.c" pos:tabs="8"><function pos:start="1:1" pos:end="129:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">seek_frame_generic</name><parameter_list pos:start="1:30" pos:end="3:80">(<parameter pos:start="1:31" pos:end="1:48"><decl pos:start="1:31" pos:end="1:48"><type pos:start="1:31" pos:end="1:48"><name pos:start="1:31" pos:end="1:45">AVFormatContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:49"><decl pos:start="3:34" pos:end="3:49"><type pos:start="3:34" pos:end="3:49"><name pos:start="3:34" pos:end="3:36">int</name></type> <name pos:start="3:38" pos:end="3:49">stream_index</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:68"><decl pos:start="3:52" pos:end="3:68"><type pos:start="3:52" pos:end="3:68"><name pos:start="3:52" pos:end="3:58">int64_t</name></type> <name pos:start="3:60" pos:end="3:68">timestamp</name></decl></parameter>, <parameter pos:start="3:71" pos:end="3:79"><decl pos:start="3:71" pos:end="3:79"><type pos:start="3:71" pos:end="3:79"><name pos:start="3:71" pos:end="3:73">int</name></type> <name pos:start="3:75" pos:end="3:79">flags</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="129:1">{<block_content pos:start="7:5" pos:end="127:13">

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:15">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">AVStream</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:16">AVIndexEntry</name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:20">ie</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:34"><expr pos:start="17:5" pos:end="17:33"><name pos:start="17:5" pos:end="17:6">st</name> <operator pos:start="17:8" pos:end="17:8">=</operator> <name pos:start="17:10" pos:end="17:33"><name pos:start="17:10" pos:end="17:10">s</name><operator pos:start="17:11" pos:end="17:12">-&gt;</operator><name pos:start="17:13" pos:end="17:19">streams</name><index pos:start="17:20" pos:end="17:33">[<expr pos:start="17:21" pos:end="17:32"><name pos:start="17:21" pos:end="17:32">stream_index</name></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:60"><expr pos:start="21:5" pos:end="21:59"><name pos:start="21:5" pos:end="21:9">index</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <call pos:start="21:13" pos:end="21:59"><name pos:start="21:13" pos:end="21:37">av_index_search_timestamp</name><argument_list pos:start="21:38" pos:end="21:59">(<argument pos:start="21:39" pos:end="21:40"><expr pos:start="21:39" pos:end="21:40"><name pos:start="21:39" pos:end="21:40">st</name></expr></argument>, <argument pos:start="21:43" pos:end="21:51"><expr pos:start="21:43" pos:end="21:51"><name pos:start="21:43" pos:end="21:51">timestamp</name></expr></argument>, <argument pos:start="21:54" pos:end="21:58"><expr pos:start="21:54" pos:end="21:58"><name pos:start="21:54" pos:end="21:58">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="27:18"><if pos:start="25:5" pos:end="27:18">if<condition pos:start="25:7" pos:end="25:87">(<expr pos:start="25:8" pos:end="25:86"><name pos:start="25:8" pos:end="25:12">index</name> <operator pos:start="25:14" pos:end="25:14">&lt;</operator> <literal type="number" pos:start="25:16" pos:end="25:16">0</literal> <operator pos:start="25:18" pos:end="25:19">&amp;&amp;</operator> <name pos:start="25:21" pos:end="25:40"><name pos:start="25:21" pos:end="25:22">st</name><operator pos:start="25:23" pos:end="25:24">-&gt;</operator><name pos:start="25:25" pos:end="25:40">nb_index_entries</name></name> <operator pos:start="25:42" pos:end="25:43">&amp;&amp;</operator> <name pos:start="25:45" pos:end="25:53">timestamp</name> <operator pos:start="25:55" pos:end="25:55">&lt;</operator> <name pos:start="25:57" pos:end="25:76"><name pos:start="25:57" pos:end="25:58">st</name><operator pos:start="25:59" pos:end="25:60">-&gt;</operator><name pos:start="25:61" pos:end="25:73">index_entries</name><index pos:start="25:74" pos:end="25:76">[<expr pos:start="25:75" pos:end="25:75"><literal type="number" pos:start="25:75" pos:end="25:75">0</literal></expr>]</index></name><operator pos:start="25:77" pos:end="25:77">.</operator><name pos:start="25:78" pos:end="25:86">timestamp</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:18"><block_content pos:start="27:9" pos:end="27:18">

        <return pos:start="27:9" pos:end="27:18">return <expr pos:start="27:16" pos:end="27:17"><operator pos:start="27:16" pos:end="27:16">-</operator><literal type="number" pos:start="27:17" pos:end="27:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="95:5"><if pos:start="31:5" pos:end="95:5">if<condition pos:start="31:7" pos:end="31:50">(<expr pos:start="31:8" pos:end="31:49"><name pos:start="31:8" pos:end="31:12">index</name> <operator pos:start="31:14" pos:end="31:14">&lt;</operator> <literal type="number" pos:start="31:16" pos:end="31:16">0</literal> <operator pos:start="31:18" pos:end="31:19">||</operator> <name pos:start="31:21" pos:end="31:25">index</name><operator pos:start="31:26" pos:end="31:27">==</operator><name pos:start="31:28" pos:end="31:47"><name pos:start="31:28" pos:end="31:29">st</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:47">nb_index_entries</name></name><operator pos:start="31:48" pos:end="31:48">-</operator><literal type="number" pos:start="31:49" pos:end="31:49">1</literal></expr>)</condition><block pos:start="31:51" pos:end="95:5">{<block_content pos:start="33:9" pos:end="93:64">

        <decl_stmt pos:start="33:9" pos:end="33:21"><decl pos:start="33:9" pos:end="33:20"><type pos:start="33:9" pos:end="33:16"><name pos:start="33:9" pos:end="33:16">AVPacket</name></type> <name pos:start="33:18" pos:end="33:20">pkt</name></decl>;</decl_stmt>

        <decl_stmt pos:start="35:9" pos:end="35:21"><decl pos:start="35:9" pos:end="35:20"><type pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">int</name></type> <name pos:start="35:13" pos:end="35:18">nonkey</name><init pos:start="35:19" pos:end="35:20">=<expr pos:start="35:20" pos:end="35:20"><literal type="number" pos:start="35:20" pos:end="35:20">0</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="39:9" pos:end="57:9"><if pos:start="39:9" pos:end="51:9">if<condition pos:start="39:11" pos:end="39:32">(<expr pos:start="39:12" pos:end="39:31"><name pos:start="39:12" pos:end="39:31"><name pos:start="39:12" pos:end="39:13">st</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:31">nb_index_entries</name></name></expr>)</condition><block pos:start="39:33" pos:end="51:9">{<block_content pos:start="41:13" pos:end="49:52">

            <expr_stmt pos:start="41:13" pos:end="41:38"><expr pos:start="41:13" pos:end="41:37"><call pos:start="41:13" pos:end="41:37"><name pos:start="41:13" pos:end="41:18">assert</name><argument_list pos:start="41:19" pos:end="41:37">(<argument pos:start="41:20" pos:end="41:36"><expr pos:start="41:20" pos:end="41:36"><name pos:start="41:20" pos:end="41:36"><name pos:start="41:20" pos:end="41:21">st</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:36">index_entries</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:59"><expr pos:start="43:13" pos:end="43:58"><name pos:start="43:13" pos:end="43:14">ie</name><operator pos:start="43:15" pos:end="43:15">=</operator> <operator pos:start="43:17" pos:end="43:17">&amp;</operator><name pos:start="43:18" pos:end="43:58"><name pos:start="43:18" pos:end="43:19">st</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:34">index_entries</name><index pos:start="43:35" pos:end="43:58">[<expr pos:start="43:36" pos:end="43:57"><name pos:start="43:36" pos:end="43:55"><name pos:start="43:36" pos:end="43:37">st</name><operator pos:start="43:38" pos:end="43:39">-&gt;</operator><name pos:start="43:40" pos:end="43:55">nb_index_entries</name></name><operator pos:start="43:56" pos:end="43:56">-</operator><literal type="number" pos:start="43:57" pos:end="43:57">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="45:13" pos:end="47:27"><if pos:start="45:13" pos:end="47:27">if <condition pos:start="45:16" pos:end="45:64">(<expr pos:start="45:17" pos:end="45:63"><operator pos:start="45:17" pos:end="45:17">(</operator><name pos:start="45:18" pos:end="45:20">ret</name> <operator pos:start="45:22" pos:end="45:22">=</operator> <call pos:start="45:24" pos:end="45:58"><name pos:start="45:24" pos:end="45:32">avio_seek</name><argument_list pos:start="45:33" pos:end="45:58">(<argument pos:start="45:34" pos:end="45:38"><expr pos:start="45:34" pos:end="45:38"><name pos:start="45:34" pos:end="45:38"><name pos:start="45:34" pos:end="45:34">s</name><operator pos:start="45:35" pos:end="45:36">-&gt;</operator><name pos:start="45:37" pos:end="45:38">pb</name></name></expr></argument>, <argument pos:start="45:41" pos:end="45:47"><expr pos:start="45:41" pos:end="45:47"><name pos:start="45:41" pos:end="45:47"><name pos:start="45:41" pos:end="45:42">ie</name><operator pos:start="45:43" pos:end="45:44">-&gt;</operator><name pos:start="45:45" pos:end="45:47">pos</name></name></expr></argument>, <argument pos:start="45:50" pos:end="45:57"><expr pos:start="45:50" pos:end="45:57"><name pos:start="45:50" pos:end="45:57">SEEK_SET</name></expr></argument>)</argument_list></call><operator pos:start="45:59" pos:end="45:59">)</operator> <operator pos:start="45:61" pos:end="45:61">&lt;</operator> <literal type="number" pos:start="45:63" pos:end="45:63">0</literal></expr>)</condition><block type="pseudo" pos:start="47:17" pos:end="47:27"><block_content pos:start="47:17" pos:end="47:27">

                <return pos:start="47:17" pos:end="47:27">return <expr pos:start="47:24" pos:end="47:26"><name pos:start="47:24" pos:end="47:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:52"><expr pos:start="49:13" pos:end="49:51"><call pos:start="49:13" pos:end="49:51"><name pos:start="49:13" pos:end="49:29">ff_update_cur_dts</name><argument_list pos:start="49:30" pos:end="49:51">(<argument pos:start="49:31" pos:end="49:31"><expr pos:start="49:31" pos:end="49:31"><name pos:start="49:31" pos:end="49:31">s</name></expr></argument>, <argument pos:start="49:34" pos:end="49:35"><expr pos:start="49:34" pos:end="49:35"><name pos:start="49:34" pos:end="49:35">st</name></expr></argument>, <argument pos:start="49:38" pos:end="49:50"><expr pos:start="49:38" pos:end="49:50"><name pos:start="49:38" pos:end="49:50"><name pos:start="49:38" pos:end="49:39">ie</name><operator pos:start="49:40" pos:end="49:41">-&gt;</operator><name pos:start="49:42" pos:end="49:50">timestamp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="51:10" pos:end="57:9">else<block pos:start="51:14" pos:end="57:9">{<block_content pos:start="53:13" pos:end="55:27">

            <if_stmt pos:start="53:13" pos:end="55:27"><if pos:start="53:13" pos:end="55:27">if <condition pos:start="53:16" pos:end="53:71">(<expr pos:start="53:17" pos:end="53:70"><operator pos:start="53:17" pos:end="53:17">(</operator><name pos:start="53:18" pos:end="53:20">ret</name> <operator pos:start="53:22" pos:end="53:22">=</operator> <call pos:start="53:24" pos:end="53:65"><name pos:start="53:24" pos:end="53:32">avio_seek</name><argument_list pos:start="53:33" pos:end="53:65">(<argument pos:start="53:34" pos:end="53:38"><expr pos:start="53:34" pos:end="53:38"><name pos:start="53:34" pos:end="53:38"><name pos:start="53:34" pos:end="53:34">s</name><operator pos:start="53:35" pos:end="53:36">-&gt;</operator><name pos:start="53:37" pos:end="53:38">pb</name></name></expr></argument>, <argument pos:start="53:41" pos:end="53:54"><expr pos:start="53:41" pos:end="53:54"><name pos:start="53:41" pos:end="53:54"><name pos:start="53:41" pos:end="53:41">s</name><operator pos:start="53:42" pos:end="53:43">-&gt;</operator><name pos:start="53:44" pos:end="53:54">data_offset</name></name></expr></argument>, <argument pos:start="53:57" pos:end="53:64"><expr pos:start="53:57" pos:end="53:64"><name pos:start="53:57" pos:end="53:64">SEEK_SET</name></expr></argument>)</argument_list></call><operator pos:start="53:66" pos:end="53:66">)</operator> <operator pos:start="53:68" pos:end="53:68">&lt;</operator> <literal type="number" pos:start="53:70" pos:end="53:70">0</literal></expr>)</condition><block type="pseudo" pos:start="55:17" pos:end="55:27"><block_content pos:start="55:17" pos:end="55:27">

                <return pos:start="55:17" pos:end="55:27">return <expr pos:start="55:24" pos:end="55:26"><name pos:start="55:24" pos:end="55:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <for pos:start="59:9" pos:end="91:9">for <control pos:start="59:13" pos:end="59:16">(<init pos:start="59:14" pos:end="59:14">;</init><condition pos:start="59:15" pos:end="59:15">;</condition><incr/>)</control> <block pos:start="59:18" pos:end="91:9">{<block_content pos:start="61:13" pos:end="89:13">

            <decl_stmt pos:start="61:13" pos:end="61:28"><decl pos:start="61:13" pos:end="61:27"><type pos:start="61:13" pos:end="61:15"><name pos:start="61:13" pos:end="61:15">int</name></type> <name pos:start="61:17" pos:end="61:27">read_status</name></decl>;</decl_stmt>

            <do pos:start="63:13" pos:end="67:53">do<block pos:start="63:15" pos:end="67:13">{<block_content pos:start="65:17" pos:end="65:53">

                <expr_stmt pos:start="65:17" pos:end="65:53"><expr pos:start="65:17" pos:end="65:52"><name pos:start="65:17" pos:end="65:27">read_status</name> <operator pos:start="65:29" pos:end="65:29">=</operator> <call pos:start="65:31" pos:end="65:52"><name pos:start="65:31" pos:end="65:43">av_read_frame</name><argument_list pos:start="65:44" pos:end="65:52">(<argument pos:start="65:45" pos:end="65:45"><expr pos:start="65:45" pos:end="65:45"><name pos:start="65:45" pos:end="65:45">s</name></expr></argument>, <argument pos:start="65:48" pos:end="65:51"><expr pos:start="65:48" pos:end="65:51"><operator pos:start="65:48" pos:end="65:48">&amp;</operator><name pos:start="65:49" pos:end="65:51">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block> while <condition pos:start="67:21" pos:end="67:52">(<expr pos:start="67:22" pos:end="67:51"><name pos:start="67:22" pos:end="67:32">read_status</name> <operator pos:start="67:34" pos:end="67:35">==</operator> <call pos:start="67:37" pos:end="67:51"><name pos:start="67:37" pos:end="67:43">AVERROR</name><argument_list pos:start="67:44" pos:end="67:51">(<argument pos:start="67:45" pos:end="67:50"><expr pos:start="67:45" pos:end="67:50"><name pos:start="67:45" pos:end="67:50">EAGAIN</name></expr></argument>)</argument_list></call></expr>)</condition>;</do>

            <if_stmt pos:start="69:13" pos:end="71:22"><if pos:start="69:13" pos:end="71:22">if <condition pos:start="69:16" pos:end="69:32">(<expr pos:start="69:17" pos:end="69:31"><name pos:start="69:17" pos:end="69:27">read_status</name> <operator pos:start="69:29" pos:end="69:29">&lt;</operator> <literal type="number" pos:start="69:31" pos:end="69:31">0</literal></expr>)</condition><block type="pseudo" pos:start="71:17" pos:end="71:22"><block_content pos:start="71:17" pos:end="71:22">

                <break pos:start="71:17" pos:end="71:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:33"><expr pos:start="73:13" pos:end="73:32"><call pos:start="73:13" pos:end="73:32"><name pos:start="73:13" pos:end="73:26">av_free_packet</name><argument_list pos:start="73:27" pos:end="73:32">(<argument pos:start="73:28" pos:end="73:31"><expr pos:start="73:28" pos:end="73:31"><operator pos:start="73:28" pos:end="73:28">&amp;</operator><name pos:start="73:29" pos:end="73:31">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="75:13" pos:end="89:13"><if pos:start="75:13" pos:end="89:13">if<condition pos:start="75:15" pos:end="75:71">(<expr pos:start="75:16" pos:end="75:70"><name pos:start="75:16" pos:end="75:27">stream_index</name> <operator pos:start="75:29" pos:end="75:30">==</operator> <name pos:start="75:32" pos:end="75:47"><name pos:start="75:32" pos:end="75:34">pkt</name><operator pos:start="75:35" pos:end="75:35">.</operator><name pos:start="75:36" pos:end="75:47">stream_index</name></name> <operator pos:start="75:49" pos:end="75:50">&amp;&amp;</operator> <name pos:start="75:52" pos:end="75:58"><name pos:start="75:52" pos:end="75:54">pkt</name><operator pos:start="75:55" pos:end="75:55">.</operator><name pos:start="75:56" pos:end="75:58">dts</name></name> <operator pos:start="75:60" pos:end="75:60">&gt;</operator> <name pos:start="75:62" pos:end="75:70">timestamp</name></expr>)</condition><block pos:start="75:72" pos:end="89:13">{<block_content pos:start="77:17" pos:end="87:17">

                <if_stmt pos:start="77:17" pos:end="79:26"><if pos:start="77:17" pos:end="79:26">if<condition pos:start="77:19" pos:end="77:47">(<expr pos:start="77:20" pos:end="77:46"><name pos:start="77:20" pos:end="77:28"><name pos:start="77:20" pos:end="77:22">pkt</name><operator pos:start="77:23" pos:end="77:23">.</operator><name pos:start="77:24" pos:end="77:28">flags</name></name> <operator pos:start="77:30" pos:end="77:30">&amp;</operator> <name pos:start="77:32" pos:end="77:46">AV_PKT_FLAG_KEY</name></expr>)</condition><block type="pseudo" pos:start="79:21" pos:end="79:26"><block_content pos:start="79:21" pos:end="79:26">

                    <break pos:start="79:21" pos:end="79:26">break;</break></block_content></block></if></if_stmt>

                <if_stmt pos:start="81:17" pos:end="87:17"><if pos:start="81:17" pos:end="87:17">if<condition pos:start="81:19" pos:end="81:35">(<expr pos:start="81:20" pos:end="81:34"><name pos:start="81:20" pos:end="81:25">nonkey</name><operator pos:start="81:26" pos:end="81:27">++</operator> <operator pos:start="81:29" pos:end="81:29">&gt;</operator> <literal type="number" pos:start="81:31" pos:end="81:34">1000</literal></expr>)</condition><block pos:start="81:36" pos:end="87:17">{<block_content pos:start="83:21" pos:end="85:26">

                    <expr_stmt pos:start="83:21" pos:end="83:178"><expr pos:start="83:21" pos:end="83:177"><call pos:start="83:21" pos:end="83:177"><name pos:start="83:21" pos:end="83:26">av_log</name><argument_list pos:start="83:27" pos:end="83:177">(<argument pos:start="83:28" pos:end="83:28"><expr pos:start="83:28" pos:end="83:28"><name pos:start="83:28" pos:end="83:28">s</name></expr></argument>, <argument pos:start="83:31" pos:end="83:42"><expr pos:start="83:31" pos:end="83:42"><name pos:start="83:31" pos:end="83:42">AV_LOG_ERROR</name></expr></argument>,<argument pos:start="83:44" pos:end="83:168"><expr pos:start="83:44" pos:end="83:168"><literal type="string" pos:start="83:44" pos:end="83:168">"seek_frame_generic failed as this stream seems to contain no keyframes after the target timestamp, %d non keyframes found\n"</literal></expr></argument>, <argument pos:start="83:171" pos:end="83:176"><expr pos:start="83:171" pos:end="83:176"><name pos:start="83:171" pos:end="83:176">nonkey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="85:21" pos:end="85:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="93:9" pos:end="93:64"><expr pos:start="93:9" pos:end="93:63"><name pos:start="93:9" pos:end="93:13">index</name> <operator pos:start="93:15" pos:end="93:15">=</operator> <call pos:start="93:17" pos:end="93:63"><name pos:start="93:17" pos:end="93:41">av_index_search_timestamp</name><argument_list pos:start="93:42" pos:end="93:63">(<argument pos:start="93:43" pos:end="93:44"><expr pos:start="93:43" pos:end="93:44"><name pos:start="93:43" pos:end="93:44">st</name></expr></argument>, <argument pos:start="93:47" pos:end="93:55"><expr pos:start="93:47" pos:end="93:55"><name pos:start="93:47" pos:end="93:55">timestamp</name></expr></argument>, <argument pos:start="93:58" pos:end="93:62"><expr pos:start="93:58" pos:end="93:62"><name pos:start="93:58" pos:end="93:62">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="97:5" pos:end="99:18"><if pos:start="97:5" pos:end="99:18">if <condition pos:start="97:8" pos:end="97:18">(<expr pos:start="97:9" pos:end="97:17"><name pos:start="97:9" pos:end="97:13">index</name> <operator pos:start="97:15" pos:end="97:15">&lt;</operator> <literal type="number" pos:start="97:17" pos:end="97:17">0</literal></expr>)</condition><block type="pseudo" pos:start="99:9" pos:end="99:18"><block_content pos:start="99:9" pos:end="99:18">

        <return pos:start="99:9" pos:end="99:18">return <expr pos:start="99:16" pos:end="99:17"><operator pos:start="99:16" pos:end="99:16">-</operator><literal type="number" pos:start="99:17" pos:end="99:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:27"><expr pos:start="103:5" pos:end="103:26"><call pos:start="103:5" pos:end="103:26"><name pos:start="103:5" pos:end="103:23">ff_read_frame_flush</name><argument_list pos:start="103:24" pos:end="103:26">(<argument pos:start="103:25" pos:end="103:25"><expr pos:start="103:25" pos:end="103:25"><name pos:start="103:25" pos:end="103:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <macro pos:start="105:5" pos:end="115:5"><name pos:start="105:5" pos:end="105:24">AV_NOWARN_DEPRECATED</name><argument_list pos:start="105:25" pos:end="115:5">(

    <argument pos:start="107:5" pos:end="113:5">if (s-&gt;iformat-&gt;read_seek){

        if(s-&gt;iformat-&gt;read_seek(s, stream_index, timestamp, flags) &gt;= <literal type="number" pos:start="109:72" pos:end="109:72">0</literal>)

            return <literal type="number" pos:start="111:20" pos:end="111:20">0</literal>;

    }</argument>

    )</argument_list></macro>

    <expr_stmt pos:start="117:5" pos:end="117:35"><expr pos:start="117:5" pos:end="117:34"><name pos:start="117:5" pos:end="117:6">ie</name> <operator pos:start="117:8" pos:end="117:8">=</operator> <operator pos:start="117:10" pos:end="117:10">&amp;</operator><name pos:start="117:11" pos:end="117:34"><name pos:start="117:11" pos:end="117:12">st</name><operator pos:start="117:13" pos:end="117:14">-&gt;</operator><name pos:start="117:15" pos:end="117:27">index_entries</name><index pos:start="117:28" pos:end="117:34">[<expr pos:start="117:29" pos:end="117:33"><name pos:start="117:29" pos:end="117:33">index</name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="119:5" pos:end="121:19"><if pos:start="119:5" pos:end="121:19">if <condition pos:start="119:8" pos:end="119:56">(<expr pos:start="119:9" pos:end="119:55"><operator pos:start="119:9" pos:end="119:9">(</operator><name pos:start="119:10" pos:end="119:12">ret</name> <operator pos:start="119:14" pos:end="119:14">=</operator> <call pos:start="119:16" pos:end="119:50"><name pos:start="119:16" pos:end="119:24">avio_seek</name><argument_list pos:start="119:25" pos:end="119:50">(<argument pos:start="119:26" pos:end="119:30"><expr pos:start="119:26" pos:end="119:30"><name pos:start="119:26" pos:end="119:30"><name pos:start="119:26" pos:end="119:26">s</name><operator pos:start="119:27" pos:end="119:28">-&gt;</operator><name pos:start="119:29" pos:end="119:30">pb</name></name></expr></argument>, <argument pos:start="119:33" pos:end="119:39"><expr pos:start="119:33" pos:end="119:39"><name pos:start="119:33" pos:end="119:39"><name pos:start="119:33" pos:end="119:34">ie</name><operator pos:start="119:35" pos:end="119:36">-&gt;</operator><name pos:start="119:37" pos:end="119:39">pos</name></name></expr></argument>, <argument pos:start="119:42" pos:end="119:49"><expr pos:start="119:42" pos:end="119:49"><name pos:start="119:42" pos:end="119:49">SEEK_SET</name></expr></argument>)</argument_list></call><operator pos:start="119:51" pos:end="119:51">)</operator> <operator pos:start="119:53" pos:end="119:53">&lt;</operator> <literal type="number" pos:start="119:55" pos:end="119:55">0</literal></expr>)</condition><block type="pseudo" pos:start="121:9" pos:end="121:19"><block_content pos:start="121:9" pos:end="121:19">

        <return pos:start="121:9" pos:end="121:19">return <expr pos:start="121:16" pos:end="121:18"><name pos:start="121:16" pos:end="121:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:44"><expr pos:start="123:5" pos:end="123:43"><call pos:start="123:5" pos:end="123:43"><name pos:start="123:5" pos:end="123:21">ff_update_cur_dts</name><argument_list pos:start="123:22" pos:end="123:43">(<argument pos:start="123:23" pos:end="123:23"><expr pos:start="123:23" pos:end="123:23"><name pos:start="123:23" pos:end="123:23">s</name></expr></argument>, <argument pos:start="123:26" pos:end="123:27"><expr pos:start="123:26" pos:end="123:27"><name pos:start="123:26" pos:end="123:27">st</name></expr></argument>, <argument pos:start="123:30" pos:end="123:42"><expr pos:start="123:30" pos:end="123:42"><name pos:start="123:30" pos:end="123:42"><name pos:start="123:30" pos:end="123:31">ie</name><operator pos:start="123:32" pos:end="123:33">-&gt;</operator><name pos:start="123:34" pos:end="123:42">timestamp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="127:5" pos:end="127:13">return <expr pos:start="127:12" pos:end="127:12"><literal type="number" pos:start="127:12" pos:end="127:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
