<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/171.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">spitz_i2c_setup</name><parameter_list pos:start="1:28" pos:end="1:45">(<parameter pos:start="1:29" pos:end="1:44"><decl pos:start="1:29" pos:end="1:44"><type pos:start="1:29" pos:end="1:41"><name pos:start="1:29" pos:end="1:39">PXA2xxState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">cpu</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="7:5" pos:end="40:0">

    <comment type="block" pos:start="5:5" pos:end="5:52">/* Attach the CPU on one end of our I2C bus.  */</comment>

    <decl_stmt pos:start="7:5" pos:end="12:0"><decl pos:start="7:5" pos:end="7:46"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">i2c_bus</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:16">bus</name> <init pos:start="7:18" pos:end="7:46">= <expr pos:start="7:20" pos:end="7:46"><call pos:start="7:20" pos:end="7:46"><name pos:start="7:20" pos:end="7:33">pxa2xx_i2c_bus</name><argument_list pos:start="7:34" pos:end="7:46">(<argument pos:start="7:35" pos:end="7:45"><expr pos:start="7:35" pos:end="7:45"><name pos:start="7:35" pos:end="7:45"><name pos:start="7:35" pos:end="7:37">cpu</name><operator pos:start="7:38" pos:end="7:39">-&gt;</operator><name pos:start="7:40" pos:end="7:42">i2c</name><index pos:start="7:43" pos:end="7:45">[<expr pos:start="7:44" pos:end="7:44"><literal type="number" pos:start="7:44" pos:end="7:44">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



<cpp:ifdef pos:start="11:1" pos:end="11:16">#<cpp:directive pos:start="11:2" pos:end="11:6">ifdef</cpp:directive> <name pos:start="11:8" pos:end="11:16">HAS_AUDIO</name></cpp:ifdef>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:15">DeviceState</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:19">wm</name></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:36">/* Attach a WM8750 to the bus */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:44"><expr pos:start="19:5" pos:end="19:43"><name pos:start="19:5" pos:end="19:6">wm</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <call pos:start="19:10" pos:end="19:43"><name pos:start="19:10" pos:end="19:25">i2c_create_slave</name><argument_list pos:start="19:26" pos:end="19:43">(<argument pos:start="19:27" pos:end="19:29"><expr pos:start="19:27" pos:end="19:29"><name pos:start="19:27" pos:end="19:29">bus</name></expr></argument>, <argument pos:start="19:32" pos:end="19:39"><expr pos:start="19:32" pos:end="19:39"><literal type="string" pos:start="19:32" pos:end="19:39">"wm8750"</literal></expr></argument>, <argument pos:start="19:42" pos:end="19:42"><expr pos:start="19:42" pos:end="19:42"><literal type="number" pos:start="19:42" pos:end="19:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:32"><expr pos:start="23:5" pos:end="23:31"><call pos:start="23:5" pos:end="23:31"><name pos:start="23:5" pos:end="23:21">spitz_wm8750_addr</name><argument_list pos:start="23:22" pos:end="23:31">(<argument pos:start="23:23" pos:end="23:24"><expr pos:start="23:23" pos:end="23:24"><name pos:start="23:23" pos:end="23:24">wm</name></expr></argument>, <argument pos:start="23:27" pos:end="23:27"><expr pos:start="23:27" pos:end="23:27"><literal type="number" pos:start="23:27" pos:end="23:27">0</literal></expr></argument>, <argument pos:start="23:30" pos:end="23:30"><expr pos:start="23:30" pos:end="23:30"><literal type="number" pos:start="23:30" pos:end="23:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="27:69"><expr pos:start="25:5" pos:end="27:68"><call pos:start="25:5" pos:end="27:68"><name pos:start="25:5" pos:end="25:23">pxa2xx_gpio_out_set</name><argument_list pos:start="25:24" pos:end="27:68">(<argument pos:start="25:25" pos:end="25:33"><expr pos:start="25:25" pos:end="25:33"><name pos:start="25:25" pos:end="25:33"><name pos:start="25:25" pos:end="25:27">cpu</name><operator pos:start="25:28" pos:end="25:29">-&gt;</operator><name pos:start="25:30" pos:end="25:33">gpio</name></name></expr></argument>, <argument pos:start="25:36" pos:end="25:48"><expr pos:start="25:36" pos:end="25:48"><name pos:start="25:36" pos:end="25:48">SPITZ_GPIO_WM</name></expr></argument>,

                    <argument pos:start="27:21" pos:end="27:67"><expr pos:start="27:21" pos:end="27:67"><call pos:start="27:21" pos:end="27:64"><name pos:start="27:21" pos:end="27:38">qemu_allocate_irqs</name><argument_list pos:start="27:39" pos:end="27:64">(<argument pos:start="27:40" pos:end="27:56"><expr pos:start="27:40" pos:end="27:56"><name pos:start="27:40" pos:end="27:56">spitz_wm8750_addr</name></expr></argument>, <argument pos:start="27:59" pos:end="27:60"><expr pos:start="27:59" pos:end="27:60"><name pos:start="27:59" pos:end="27:60">wm</name></expr></argument>, <argument pos:start="27:63" pos:end="27:63"><expr pos:start="27:63" pos:end="27:63"><literal type="number" pos:start="27:63" pos:end="27:63">1</literal></expr></argument>)</argument_list></call><index pos:start="27:65" pos:end="27:67">[<expr pos:start="27:66" pos:end="27:66"><literal type="number" pos:start="27:66" pos:end="27:66">0</literal></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="29:5" pos:end="29:41">/* .. and to the sound interface.  */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:26"><expr pos:start="31:5" pos:end="31:25"><name pos:start="31:5" pos:end="31:20"><name pos:start="31:5" pos:end="31:7">cpu</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:12">i2s</name><operator pos:start="31:13" pos:end="31:14">-&gt;</operator><name pos:start="31:15" pos:end="31:20">opaque</name></name> <operator pos:start="31:22" pos:end="31:22">=</operator> <name pos:start="31:24" pos:end="31:25">wm</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:41"><expr pos:start="33:5" pos:end="33:40"><name pos:start="33:5" pos:end="33:23"><name pos:start="33:5" pos:end="33:7">cpu</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:12">i2s</name><operator pos:start="33:13" pos:end="33:14">-&gt;</operator><name pos:start="33:15" pos:end="33:23">codec_out</name></name> <operator pos:start="33:25" pos:end="33:25">=</operator> <name pos:start="33:27" pos:end="33:40">wm8750_dac_dat</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:40"><expr pos:start="35:5" pos:end="35:39"><name pos:start="35:5" pos:end="35:22"><name pos:start="35:5" pos:end="35:7">cpu</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:12">i2s</name><operator pos:start="35:13" pos:end="35:14">-&gt;</operator><name pos:start="35:15" pos:end="35:22">codec_in</name></name> <operator pos:start="35:24" pos:end="35:24">=</operator> <name pos:start="35:26" pos:end="35:39">wm8750_adc_dat</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="40:0"><expr pos:start="37:5" pos:end="37:57"><call pos:start="37:5" pos:end="37:57"><name pos:start="37:5" pos:end="37:23">wm8750_data_req_set</name><argument_list pos:start="37:24" pos:end="37:57">(<argument pos:start="37:25" pos:end="37:26"><expr pos:start="37:25" pos:end="37:26"><name pos:start="37:25" pos:end="37:26">wm</name></expr></argument>, <argument pos:start="37:29" pos:end="37:46"><expr pos:start="37:29" pos:end="37:46"><name pos:start="37:29" pos:end="37:46"><name pos:start="37:29" pos:end="37:31">cpu</name><operator pos:start="37:32" pos:end="37:33">-&gt;</operator><name pos:start="37:34" pos:end="37:36">i2s</name><operator pos:start="37:37" pos:end="37:38">-&gt;</operator><name pos:start="37:39" pos:end="37:46">data_req</name></name></expr></argument>, <argument pos:start="37:49" pos:end="37:56"><expr pos:start="37:49" pos:end="37:56"><name pos:start="37:49" pos:end="37:56"><name pos:start="37:49" pos:end="37:51">cpu</name><operator pos:start="37:52" pos:end="37:53">-&gt;</operator><name pos:start="37:54" pos:end="37:56">i2s</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="39:1" pos:end="39:6">#<cpp:directive pos:start="39:2" pos:end="39:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
