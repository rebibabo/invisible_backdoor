<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16050.c" pos:tabs="8"><function pos:start="1:1" pos:end="76:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:33">ff_mpeg_update_thread_context</name><parameter_list pos:start="1:34" pos:end="2:60">(<parameter pos:start="1:35" pos:end="1:53"><decl pos:start="1:35" pos:end="1:53"><type pos:start="1:35" pos:end="1:53"><name pos:start="1:35" pos:end="1:48">AVCodecContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:53">dst</name></decl></parameter>,
                                  <parameter pos:start="2:35" pos:end="2:59"><decl pos:start="2:35" pos:end="2:59"><type pos:start="2:35" pos:end="2:59"><specifier pos:start="2:35" pos:end="2:39">const</specifier> <name pos:start="2:41" pos:end="2:54">AVCodecContext</name> <modifier pos:start="2:56" pos:end="2:56">*</modifier></type><name pos:start="2:57" pos:end="2:59">src</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="76:1">{<block_content pos:start="4:5" pos:end="75:13">
    <decl_stmt pos:start="4:5" pos:end="4:10"><decl pos:start="4:5" pos:end="4:9"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:9">i</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:61"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MpegEncContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:38">= <expr pos:start="5:25" pos:end="5:38"><name pos:start="5:25" pos:end="5:38"><name pos:start="5:25" pos:end="5:27">dst</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:38">priv_data</name></name></expr></init></decl>, <decl pos:start="5:41" pos:end="5:60"><type ref="prev" pos:start="5:5" pos:end="5:20"><modifier pos:start="5:41" pos:end="5:41">*</modifier></type><name pos:start="5:42" pos:end="5:43">s1</name> <init pos:start="5:45" pos:end="5:60">= <expr pos:start="5:47" pos:end="5:60"><name pos:start="5:47" pos:end="5:60"><name pos:start="5:47" pos:end="5:49">src</name><operator pos:start="5:50" pos:end="5:51">-&gt;</operator><name pos:start="5:52" pos:end="5:60">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <if_stmt pos:start="6:5" pos:end="7:17"><if pos:start="6:5" pos:end="7:17">if <condition pos:start="6:8" pos:end="6:47">(<expr pos:start="6:9" pos:end="6:46"><name pos:start="6:9" pos:end="6:11">dst</name> <operator pos:start="6:13" pos:end="6:14">==</operator> <name pos:start="6:16" pos:end="6:18">src</name> <operator pos:start="6:20" pos:end="6:21">||</operator> <operator pos:start="6:23" pos:end="6:23">!</operator><name pos:start="6:24" pos:end="6:46"><name pos:start="6:24" pos:end="6:25">s1</name><operator pos:start="6:26" pos:end="6:27">-&gt;</operator><name pos:start="6:28" pos:end="6:46">context_initialized</name></name></expr>)</condition><block type="pseudo" pos:start="7:9" pos:end="7:17"><block_content pos:start="7:9" pos:end="7:17">
        <return pos:start="7:9" pos:end="7:17">return <expr pos:start="7:16" pos:end="7:16"><literal type="number" pos:start="7:16" pos:end="7:16">0</literal></expr>;</return></block_content></block></if></if_stmt>
    <comment type="line" pos:start="8:5" pos:end="8:47">// FIXME can parameters change on I-frames?</comment>
    <comment type="line" pos:start="9:5" pos:end="9:41">// in that case dst may need a reinit</comment>
    <if_stmt pos:start="10:5" pos:end="18:5"><if pos:start="10:5" pos:end="18:5">if <condition pos:start="10:8" pos:end="10:32">(<expr pos:start="10:9" pos:end="10:31"><operator pos:start="10:9" pos:end="10:9">!</operator><name pos:start="10:10" pos:end="10:31"><name pos:start="10:10" pos:end="10:10">s</name><operator pos:start="10:11" pos:end="10:12">-&gt;</operator><name pos:start="10:13" pos:end="10:31">context_initialized</name></name></expr>)</condition> <block pos:start="10:34" pos:end="18:5">{<block_content pos:start="11:9" pos:end="17:30">
        <expr_stmt pos:start="11:9" pos:end="11:46"><expr pos:start="11:9" pos:end="11:45"><call pos:start="11:9" pos:end="11:45"><name pos:start="11:9" pos:end="11:14">memcpy</name><argument_list pos:start="11:15" pos:end="11:45">(<argument pos:start="11:16" pos:end="11:16"><expr pos:start="11:16" pos:end="11:16"><name pos:start="11:16" pos:end="11:16">s</name></expr></argument>, <argument pos:start="11:19" pos:end="11:20"><expr pos:start="11:19" pos:end="11:20"><name pos:start="11:19" pos:end="11:20">s1</name></expr></argument>, <argument pos:start="11:23" pos:end="11:44"><expr pos:start="11:23" pos:end="11:44"><sizeof pos:start="11:23" pos:end="11:44">sizeof<argument_list pos:start="11:29" pos:end="11:44">(<argument pos:start="11:30" pos:end="11:43"><expr pos:start="11:30" pos:end="11:43"><name pos:start="11:30" pos:end="11:43">MpegEncContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="12:9" pos:end="12:39"><expr pos:start="12:9" pos:end="12:38"><name pos:start="12:9" pos:end="12:16"><name pos:start="12:9" pos:end="12:9">s</name><operator pos:start="12:10" pos:end="12:11">-&gt;</operator><name pos:start="12:12" pos:end="12:16">avctx</name></name>                 <operator pos:start="12:34" pos:end="12:34">=</operator> <name pos:start="12:36" pos:end="12:38">dst</name></expr>;</expr_stmt>
        <expr_stmt pos:start="13:9" pos:end="13:53"><expr pos:start="13:9" pos:end="13:52"><name pos:start="13:9" pos:end="13:30"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:30">picture_range_start</name></name>  <operator pos:start="13:33" pos:end="13:34">+=</operator> <name pos:start="13:36" pos:end="13:52">MAX_PICTURE_COUNT</name></expr>;</expr_stmt>
        <expr_stmt pos:start="14:9" pos:end="14:53"><expr pos:start="14:9" pos:end="14:52"><name pos:start="14:9" pos:end="14:28"><name pos:start="14:9" pos:end="14:9">s</name><operator pos:start="14:10" pos:end="14:11">-&gt;</operator><name pos:start="14:12" pos:end="14:28">picture_range_end</name></name>    <operator pos:start="14:33" pos:end="14:34">+=</operator> <name pos:start="14:36" pos:end="14:52">MAX_PICTURE_COUNT</name></expr>;</expr_stmt>
        <expr_stmt pos:start="15:9" pos:end="15:40"><expr pos:start="15:9" pos:end="15:39"><name pos:start="15:9" pos:end="15:27"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:27">bitstream_buffer</name></name>      <operator pos:start="15:34" pos:end="15:34">=</operator> <name pos:start="15:36" pos:end="15:39">NULL</name></expr>;</expr_stmt>
        <expr_stmt pos:start="16:9" pos:end="16:74"><expr pos:start="16:9" pos:end="16:73"><name pos:start="16:9" pos:end="16:32"><name pos:start="16:9" pos:end="16:9">s</name><operator pos:start="16:10" pos:end="16:11">-&gt;</operator><name pos:start="16:12" pos:end="16:32">bitstream_buffer_size</name></name> <operator pos:start="16:34" pos:end="16:34">=</operator> <name pos:start="16:36" pos:end="16:69"><name pos:start="16:36" pos:end="16:36">s</name><operator pos:start="16:37" pos:end="16:38">-&gt;</operator><name pos:start="16:39" pos:end="16:69">allocated_bitstream_buffer_size</name></name> <operator pos:start="16:71" pos:end="16:71">=</operator> <literal type="number" pos:start="16:73" pos:end="16:73">0</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="17:9" pos:end="17:30"><expr pos:start="17:9" pos:end="17:29"><call pos:start="17:9" pos:end="17:29"><name pos:start="17:9" pos:end="17:26">ff_MPV_common_init</name><argument_list pos:start="17:27" pos:end="17:29">(<argument pos:start="17:28" pos:end="17:28"><expr pos:start="17:28" pos:end="17:28"><name pos:start="17:28" pos:end="17:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="19:5" pos:end="26:5"><if pos:start="19:5" pos:end="26:5">if <condition pos:start="19:8" pos:end="19:78">(<expr pos:start="19:9" pos:end="19:77"><name pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:17">height</name></name> <operator pos:start="19:19" pos:end="19:20">!=</operator> <name pos:start="19:22" pos:end="19:31"><name pos:start="19:22" pos:end="19:23">s1</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:31">height</name></name> <operator pos:start="19:33" pos:end="19:34">||</operator> <name pos:start="19:36" pos:end="19:43"><name pos:start="19:36" pos:end="19:36">s</name><operator pos:start="19:37" pos:end="19:38">-&gt;</operator><name pos:start="19:39" pos:end="19:43">width</name></name> <operator pos:start="19:45" pos:end="19:46">!=</operator> <name pos:start="19:48" pos:end="19:56"><name pos:start="19:48" pos:end="19:49">s1</name><operator pos:start="19:50" pos:end="19:51">-&gt;</operator><name pos:start="19:52" pos:end="19:56">width</name></name> <operator pos:start="19:58" pos:end="19:59">||</operator> <name pos:start="19:61" pos:end="19:77"><name pos:start="19:61" pos:end="19:61">s</name><operator pos:start="19:62" pos:end="19:63">-&gt;</operator><name pos:start="19:64" pos:end="19:77">context_reinit</name></name></expr>)</condition> <block pos:start="19:80" pos:end="26:5">{<block_content pos:start="20:9" pos:end="25:23">
        <decl_stmt pos:start="20:9" pos:end="20:16"><decl pos:start="20:9" pos:end="20:15"><type pos:start="20:9" pos:end="20:11"><name pos:start="20:9" pos:end="20:11">int</name></type> <name pos:start="20:13" pos:end="20:15">err</name></decl>;</decl_stmt>
        <expr_stmt pos:start="21:9" pos:end="21:30"><expr pos:start="21:9" pos:end="21:29"><name pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:25">context_reinit</name></name> <operator pos:start="21:27" pos:end="21:27">=</operator> <literal type="number" pos:start="21:29" pos:end="21:29">0</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="22:9" pos:end="22:31"><expr pos:start="22:9" pos:end="22:30"><name pos:start="22:9" pos:end="22:17"><name pos:start="22:9" pos:end="22:9">s</name><operator pos:start="22:10" pos:end="22:11">-&gt;</operator><name pos:start="22:12" pos:end="22:17">height</name></name> <operator pos:start="22:19" pos:end="22:19">=</operator> <name pos:start="22:21" pos:end="22:30"><name pos:start="22:21" pos:end="22:22">s1</name><operator pos:start="22:23" pos:end="22:24">-&gt;</operator><name pos:start="22:25" pos:end="22:30">height</name></name></expr>;</expr_stmt>
        <expr_stmt pos:start="23:9" pos:end="23:30"><expr pos:start="23:9" pos:end="23:29"><name pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:16">width</name></name>  <operator pos:start="23:19" pos:end="23:19">=</operator> <name pos:start="23:21" pos:end="23:29"><name pos:start="23:21" pos:end="23:22">s1</name><operator pos:start="23:23" pos:end="23:24">-&gt;</operator><name pos:start="23:25" pos:end="23:29">width</name></name></expr>;</expr_stmt>
        <if_stmt pos:start="24:9" pos:end="25:23"><if pos:start="24:9" pos:end="25:23">if <condition pos:start="24:12" pos:end="24:59">(<expr pos:start="24:13" pos:end="24:58"><operator pos:start="24:13" pos:end="24:13">(</operator><name pos:start="24:14" pos:end="24:16">err</name> <operator pos:start="24:18" pos:end="24:18">=</operator> <call pos:start="24:20" pos:end="24:53"><name pos:start="24:20" pos:end="24:50">ff_MPV_common_frame_size_change</name><argument_list pos:start="24:51" pos:end="24:53">(<argument pos:start="24:52" pos:end="24:52"><expr pos:start="24:52" pos:end="24:52"><name pos:start="24:52" pos:end="24:52">s</name></expr></argument>)</argument_list></call><operator pos:start="24:54" pos:end="24:54">)</operator> <operator pos:start="24:56" pos:end="24:56">&lt;</operator> <literal type="number" pos:start="24:58" pos:end="24:58">0</literal></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:23"><block_content pos:start="25:13" pos:end="25:23">
            <return pos:start="25:13" pos:end="25:23">return <expr pos:start="25:20" pos:end="25:22"><name pos:start="25:20" pos:end="25:22">err</name></expr>;</return></block_content></block></if></if_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="27:5" pos:end="27:54"><expr pos:start="27:5" pos:end="27:53"><name pos:start="27:5" pos:end="27:26"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:12">avctx</name><operator pos:start="27:13" pos:end="27:14">-&gt;</operator><name pos:start="27:15" pos:end="27:26">coded_height</name></name>  <operator pos:start="27:29" pos:end="27:29">=</operator> <name pos:start="27:31" pos:end="27:53"><name pos:start="27:31" pos:end="27:32">s1</name><operator pos:start="27:33" pos:end="27:34">-&gt;</operator><name pos:start="27:35" pos:end="27:39">avctx</name><operator pos:start="27:40" pos:end="27:41">-&gt;</operator><name pos:start="27:42" pos:end="27:53">coded_height</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="28:5" pos:end="28:53"><expr pos:start="28:5" pos:end="28:52"><name pos:start="28:5" pos:end="28:25"><name pos:start="28:5" pos:end="28:5">s</name><operator pos:start="28:6" pos:end="28:7">-&gt;</operator><name pos:start="28:8" pos:end="28:12">avctx</name><operator pos:start="28:13" pos:end="28:14">-&gt;</operator><name pos:start="28:15" pos:end="28:25">coded_width</name></name>   <operator pos:start="28:29" pos:end="28:29">=</operator> <name pos:start="28:31" pos:end="28:52"><name pos:start="28:31" pos:end="28:32">s1</name><operator pos:start="28:33" pos:end="28:34">-&gt;</operator><name pos:start="28:35" pos:end="28:39">avctx</name><operator pos:start="28:40" pos:end="28:41">-&gt;</operator><name pos:start="28:42" pos:end="28:52">coded_width</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="29:5" pos:end="29:47"><expr pos:start="29:5" pos:end="29:46"><name pos:start="29:5" pos:end="29:19"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:12">avctx</name><operator pos:start="29:13" pos:end="29:14">-&gt;</operator><name pos:start="29:15" pos:end="29:19">width</name></name>         <operator pos:start="29:29" pos:end="29:29">=</operator> <name pos:start="29:31" pos:end="29:46"><name pos:start="29:31" pos:end="29:32">s1</name><operator pos:start="29:33" pos:end="29:34">-&gt;</operator><name pos:start="29:35" pos:end="29:39">avctx</name><operator pos:start="29:40" pos:end="29:41">-&gt;</operator><name pos:start="29:42" pos:end="29:46">width</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="30:5" pos:end="30:48"><expr pos:start="30:5" pos:end="30:47"><name pos:start="30:5" pos:end="30:20"><name pos:start="30:5" pos:end="30:5">s</name><operator pos:start="30:6" pos:end="30:7">-&gt;</operator><name pos:start="30:8" pos:end="30:12">avctx</name><operator pos:start="30:13" pos:end="30:14">-&gt;</operator><name pos:start="30:15" pos:end="30:20">height</name></name>        <operator pos:start="30:29" pos:end="30:29">=</operator> <name pos:start="30:31" pos:end="30:47"><name pos:start="30:31" pos:end="30:32">s1</name><operator pos:start="30:33" pos:end="30:34">-&gt;</operator><name pos:start="30:35" pos:end="30:39">avctx</name><operator pos:start="30:40" pos:end="30:41">-&gt;</operator><name pos:start="30:42" pos:end="30:47">height</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="31:5" pos:end="31:55"><expr pos:start="31:5" pos:end="31:54"><name pos:start="31:5" pos:end="31:27"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:27">coded_picture_number</name></name> <operator pos:start="31:29" pos:end="31:29">=</operator> <name pos:start="31:31" pos:end="31:54"><name pos:start="31:31" pos:end="31:32">s1</name><operator pos:start="31:33" pos:end="31:34">-&gt;</operator><name pos:start="31:35" pos:end="31:54">coded_picture_number</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="32:5" pos:end="32:49"><expr pos:start="32:5" pos:end="32:48"><name pos:start="32:5" pos:end="32:21"><name pos:start="32:5" pos:end="32:5">s</name><operator pos:start="32:6" pos:end="32:7">-&gt;</operator><name pos:start="32:8" pos:end="32:21">picture_number</name></name>       <operator pos:start="32:29" pos:end="32:29">=</operator> <name pos:start="32:31" pos:end="32:48"><name pos:start="32:31" pos:end="32:32">s1</name><operator pos:start="32:33" pos:end="32:34">-&gt;</operator><name pos:start="32:35" pos:end="32:48">picture_number</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="33:5" pos:end="33:55"><expr pos:start="33:5" pos:end="33:54"><name pos:start="33:5" pos:end="33:27"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:27">input_picture_number</name></name> <operator pos:start="33:29" pos:end="33:29">=</operator> <name pos:start="33:31" pos:end="33:54"><name pos:start="33:31" pos:end="33:32">s1</name><operator pos:start="33:33" pos:end="33:34">-&gt;</operator><name pos:start="33:35" pos:end="33:54">input_picture_number</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="34:5" pos:end="34:73"><expr pos:start="34:5" pos:end="34:72"><call pos:start="34:5" pos:end="34:72"><name pos:start="34:5" pos:end="34:10">memcpy</name><argument_list pos:start="34:11" pos:end="34:72">(<argument pos:start="34:12" pos:end="34:21"><expr pos:start="34:12" pos:end="34:21"><name pos:start="34:12" pos:end="34:21"><name pos:start="34:12" pos:end="34:12">s</name><operator pos:start="34:13" pos:end="34:14">-&gt;</operator><name pos:start="34:15" pos:end="34:21">picture</name></name></expr></argument>, <argument pos:start="34:24" pos:end="34:34"><expr pos:start="34:24" pos:end="34:34"><name pos:start="34:24" pos:end="34:34"><name pos:start="34:24" pos:end="34:25">s1</name><operator pos:start="34:26" pos:end="34:27">-&gt;</operator><name pos:start="34:28" pos:end="34:34">picture</name></name></expr></argument>, <argument pos:start="34:37" pos:end="34:71"><expr pos:start="34:37" pos:end="34:71"><name pos:start="34:37" pos:end="34:53"><name pos:start="34:37" pos:end="34:38">s1</name><operator pos:start="34:39" pos:end="34:40">-&gt;</operator><name pos:start="34:41" pos:end="34:53">picture_count</name></name> <operator pos:start="34:55" pos:end="34:55">*</operator> <sizeof pos:start="34:57" pos:end="34:71">sizeof<argument_list pos:start="34:63" pos:end="34:71">(<argument pos:start="34:64" pos:end="34:70"><expr pos:start="34:64" pos:end="34:70"><name pos:start="34:64" pos:end="34:70">Picture</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="35:5" pos:end="36:72"><expr pos:start="35:5" pos:end="36:71"><call pos:start="35:5" pos:end="36:71"><name pos:start="35:5" pos:end="35:10">memcpy</name><argument_list pos:start="35:11" pos:end="36:71">(<argument pos:start="35:12" pos:end="35:27"><expr pos:start="35:12" pos:end="35:27"><operator pos:start="35:12" pos:end="35:12">&amp;</operator><name pos:start="35:13" pos:end="35:27"><name pos:start="35:13" pos:end="35:13">s</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:27">last_picture</name></name></expr></argument>, <argument pos:start="35:30" pos:end="35:46"><expr pos:start="35:30" pos:end="35:46"><operator pos:start="35:30" pos:end="35:30">&amp;</operator><name pos:start="35:31" pos:end="35:46"><name pos:start="35:31" pos:end="35:32">s1</name><operator pos:start="35:33" pos:end="35:34">-&gt;</operator><name pos:start="35:35" pos:end="35:46">last_picture</name></name></expr></argument>,
           <argument pos:start="36:12" pos:end="36:70"><expr pos:start="36:12" pos:end="36:70"><operator pos:start="36:12" pos:end="36:12">(</operator><name pos:start="36:13" pos:end="36:16">char</name> <operator pos:start="36:18" pos:end="36:18">*</operator><operator pos:start="36:19" pos:end="36:19">)</operator> <operator pos:start="36:21" pos:end="36:21">&amp;</operator><name pos:start="36:22" pos:end="36:41"><name pos:start="36:22" pos:end="36:23">s1</name><operator pos:start="36:24" pos:end="36:25">-&gt;</operator><name pos:start="36:26" pos:end="36:41">last_picture_ptr</name></name> <operator pos:start="36:43" pos:end="36:43">-</operator> <operator pos:start="36:45" pos:end="36:45">(</operator><name pos:start="36:46" pos:end="36:49">char</name> <operator pos:start="36:51" pos:end="36:51">*</operator><operator pos:start="36:52" pos:end="36:52">)</operator> <operator pos:start="36:54" pos:end="36:54">&amp;</operator><name pos:start="36:55" pos:end="36:70"><name pos:start="36:55" pos:end="36:56">s1</name><operator pos:start="36:57" pos:end="36:58">-&gt;</operator><name pos:start="36:59" pos:end="36:70">last_picture</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="37:5" pos:end="37:76"><expr pos:start="37:5" pos:end="37:75"><name pos:start="37:5" pos:end="37:23"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:23">last_picture_ptr</name></name>    <operator pos:start="37:28" pos:end="37:28">=</operator> <call pos:start="37:30" pos:end="37:75"><name pos:start="37:30" pos:end="37:43">REBASE_PICTURE</name><argument_list pos:start="37:44" pos:end="37:75">(<argument pos:start="37:45" pos:end="37:64"><expr pos:start="37:45" pos:end="37:64"><name pos:start="37:45" pos:end="37:64"><name pos:start="37:45" pos:end="37:46">s1</name><operator pos:start="37:47" pos:end="37:48">-&gt;</operator><name pos:start="37:49" pos:end="37:64">last_picture_ptr</name></name></expr></argument>,    <argument pos:start="37:70" pos:end="37:70"><expr pos:start="37:70" pos:end="37:70"><name pos:start="37:70" pos:end="37:70">s</name></expr></argument>, <argument pos:start="37:73" pos:end="37:74"><expr pos:start="37:73" pos:end="37:74"><name pos:start="37:73" pos:end="37:74">s1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="38:5" pos:end="38:76"><expr pos:start="38:5" pos:end="38:75"><name pos:start="38:5" pos:end="38:26"><name pos:start="38:5" pos:end="38:5">s</name><operator pos:start="38:6" pos:end="38:7">-&gt;</operator><name pos:start="38:8" pos:end="38:26">current_picture_ptr</name></name> <operator pos:start="38:28" pos:end="38:28">=</operator> <call pos:start="38:30" pos:end="38:75"><name pos:start="38:30" pos:end="38:43">REBASE_PICTURE</name><argument_list pos:start="38:44" pos:end="38:75">(<argument pos:start="38:45" pos:end="38:67"><expr pos:start="38:45" pos:end="38:67"><name pos:start="38:45" pos:end="38:67"><name pos:start="38:45" pos:end="38:46">s1</name><operator pos:start="38:47" pos:end="38:48">-&gt;</operator><name pos:start="38:49" pos:end="38:67">current_picture_ptr</name></name></expr></argument>, <argument pos:start="38:70" pos:end="38:70"><expr pos:start="38:70" pos:end="38:70"><name pos:start="38:70" pos:end="38:70">s</name></expr></argument>, <argument pos:start="38:73" pos:end="38:74"><expr pos:start="38:73" pos:end="38:74"><name pos:start="38:73" pos:end="38:74">s1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="39:5" pos:end="39:76"><expr pos:start="39:5" pos:end="39:75"><name pos:start="39:5" pos:end="39:23"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:23">next_picture_ptr</name></name>    <operator pos:start="39:28" pos:end="39:28">=</operator> <call pos:start="39:30" pos:end="39:75"><name pos:start="39:30" pos:end="39:43">REBASE_PICTURE</name><argument_list pos:start="39:44" pos:end="39:75">(<argument pos:start="39:45" pos:end="39:64"><expr pos:start="39:45" pos:end="39:64"><name pos:start="39:45" pos:end="39:64"><name pos:start="39:45" pos:end="39:46">s1</name><operator pos:start="39:47" pos:end="39:48">-&gt;</operator><name pos:start="39:49" pos:end="39:64">next_picture_ptr</name></name></expr></argument>,    <argument pos:start="39:70" pos:end="39:70"><expr pos:start="39:70" pos:end="39:70"><name pos:start="39:70" pos:end="39:70">s</name></expr></argument>, <argument pos:start="39:73" pos:end="39:74"><expr pos:start="39:73" pos:end="39:74"><name pos:start="39:73" pos:end="39:74">s1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="line" pos:start="40:5" pos:end="40:27">// Error/bug resilience</comment>
    <expr_stmt pos:start="41:5" pos:end="41:55"><expr pos:start="41:5" pos:end="41:54"><name pos:start="41:5" pos:end="41:27"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:27">next_p_frame_damaged</name></name> <operator pos:start="41:29" pos:end="41:29">=</operator> <name pos:start="41:31" pos:end="41:54"><name pos:start="41:31" pos:end="41:32">s1</name><operator pos:start="41:33" pos:end="41:34">-&gt;</operator><name pos:start="41:35" pos:end="41:54">next_p_frame_damaged</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="42:5" pos:end="42:50"><expr pos:start="42:5" pos:end="42:49"><name pos:start="42:5" pos:end="42:22"><name pos:start="42:5" pos:end="42:5">s</name><operator pos:start="42:6" pos:end="42:7">-&gt;</operator><name pos:start="42:8" pos:end="42:22">workaround_bugs</name></name>      <operator pos:start="42:29" pos:end="42:29">=</operator> <name pos:start="42:31" pos:end="42:49"><name pos:start="42:31" pos:end="42:32">s1</name><operator pos:start="42:33" pos:end="42:34">-&gt;</operator><name pos:start="42:35" pos:end="42:49">workaround_bugs</name></name></expr>;</expr_stmt>
    <comment type="line" pos:start="43:5" pos:end="43:24">// MPEG4 timing info</comment>
    <expr_stmt pos:start="44:5" pos:end="45:68"><expr pos:start="44:5" pos:end="45:67"><call pos:start="44:5" pos:end="45:67"><name pos:start="44:5" pos:end="44:10">memcpy</name><argument_list pos:start="44:11" pos:end="45:67">(<argument pos:start="44:12" pos:end="44:34"><expr pos:start="44:12" pos:end="44:34"><operator pos:start="44:12" pos:end="44:12">&amp;</operator><name pos:start="44:13" pos:end="44:34"><name pos:start="44:13" pos:end="44:13">s</name><operator pos:start="44:14" pos:end="44:15">-&gt;</operator><name pos:start="44:16" pos:end="44:34">time_increment_bits</name></name></expr></argument>, <argument pos:start="44:37" pos:end="44:60"><expr pos:start="44:37" pos:end="44:60"><operator pos:start="44:37" pos:end="44:37">&amp;</operator><name pos:start="44:38" pos:end="44:60"><name pos:start="44:38" pos:end="44:39">s1</name><operator pos:start="44:40" pos:end="44:41">-&gt;</operator><name pos:start="44:42" pos:end="44:60">time_increment_bits</name></name></expr></argument>,
           <argument pos:start="45:12" pos:end="45:66"><expr pos:start="45:12" pos:end="45:66"><operator pos:start="45:12" pos:end="45:12">(</operator><name pos:start="45:13" pos:end="45:16">char</name> <operator pos:start="45:18" pos:end="45:18">*</operator><operator pos:start="45:19" pos:end="45:19">)</operator> <operator pos:start="45:21" pos:end="45:21">&amp;</operator><name pos:start="45:22" pos:end="45:30"><name pos:start="45:22" pos:end="45:23">s1</name><operator pos:start="45:24" pos:end="45:25">-&gt;</operator><name pos:start="45:26" pos:end="45:30">shape</name></name> <operator pos:start="45:32" pos:end="45:32">-</operator> <operator pos:start="45:34" pos:end="45:34">(</operator><name pos:start="45:35" pos:end="45:38">char</name> <operator pos:start="45:40" pos:end="45:40">*</operator><operator pos:start="45:41" pos:end="45:41">)</operator> <operator pos:start="45:43" pos:end="45:43">&amp;</operator><name pos:start="45:44" pos:end="45:66"><name pos:start="45:44" pos:end="45:45">s1</name><operator pos:start="45:46" pos:end="45:47">-&gt;</operator><name pos:start="45:48" pos:end="45:66">time_increment_bits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="line" pos:start="46:5" pos:end="46:19">// B-frame info</comment>
    <expr_stmt pos:start="47:5" pos:end="47:39"><expr pos:start="47:5" pos:end="47:38"><name pos:start="47:5" pos:end="47:19"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:19">max_b_frames</name></name> <operator pos:start="47:21" pos:end="47:21">=</operator> <name pos:start="47:23" pos:end="47:38"><name pos:start="47:23" pos:end="47:24">s1</name><operator pos:start="47:25" pos:end="47:26">-&gt;</operator><name pos:start="47:27" pos:end="47:38">max_b_frames</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="48:5" pos:end="48:36"><expr pos:start="48:5" pos:end="48:35"><name pos:start="48:5" pos:end="48:16"><name pos:start="48:5" pos:end="48:5">s</name><operator pos:start="48:6" pos:end="48:7">-&gt;</operator><name pos:start="48:8" pos:end="48:16">low_delay</name></name>    <operator pos:start="48:21" pos:end="48:21">=</operator> <name pos:start="48:23" pos:end="48:35"><name pos:start="48:23" pos:end="48:24">s1</name><operator pos:start="48:25" pos:end="48:26">-&gt;</operator><name pos:start="48:27" pos:end="48:35">low_delay</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="49:5" pos:end="49:35"><expr pos:start="49:5" pos:end="49:34"><name pos:start="49:5" pos:end="49:15"><name pos:start="49:5" pos:end="49:5">s</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:15">dropable</name></name>     <operator pos:start="49:21" pos:end="49:21">=</operator> <name pos:start="49:23" pos:end="49:34"><name pos:start="49:23" pos:end="49:24">s1</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:34">dropable</name></name></expr>;</expr_stmt>
    <comment type="line" pos:start="50:5" pos:end="50:35">// DivX handling (doesn't work)</comment>
    <expr_stmt pos:start="51:5" pos:end="51:38"><expr pos:start="51:5" pos:end="51:37"><name pos:start="51:5" pos:end="51:18"><name pos:start="51:5" pos:end="51:5">s</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:18">divx_packed</name></name>  <operator pos:start="51:21" pos:end="51:21">=</operator> <name pos:start="51:23" pos:end="51:37"><name pos:start="51:23" pos:end="51:24">s1</name><operator pos:start="51:25" pos:end="51:26">-&gt;</operator><name pos:start="51:27" pos:end="51:37">divx_packed</name></name></expr>;</expr_stmt>
    <if_stmt pos:start="52:5" pos:end="63:5"><if pos:start="52:5" pos:end="63:5">if <condition pos:start="52:8" pos:end="52:29">(<expr pos:start="52:9" pos:end="52:28"><name pos:start="52:9" pos:end="52:28"><name pos:start="52:9" pos:end="52:10">s1</name><operator pos:start="52:11" pos:end="52:12">-&gt;</operator><name pos:start="52:13" pos:end="52:28">bitstream_buffer</name></name></expr>)</condition> <block pos:start="52:31" pos:end="63:5">{<block_content pos:start="53:9" pos:end="62:45">
        <if_stmt pos:start="53:9" pos:end="57:64"><if pos:start="53:9" pos:end="57:64">if <condition pos:start="53:12" pos:end="54:78">(<expr pos:start="53:13" pos:end="54:77"><name pos:start="53:13" pos:end="53:37"><name pos:start="53:13" pos:end="53:14">s1</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:37">bitstream_buffer_size</name></name> <operator pos:start="53:39" pos:end="53:39">+</operator>
            <name pos:start="54:13" pos:end="54:40">FF_INPUT_BUFFER_PADDING_SIZE</name> <operator pos:start="54:42" pos:end="54:42">&gt;</operator> <name pos:start="54:44" pos:end="54:77"><name pos:start="54:44" pos:end="54:44">s</name><operator pos:start="54:45" pos:end="54:46">-&gt;</operator><name pos:start="54:47" pos:end="54:77">allocated_bitstream_buffer_size</name></name></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="57:64"><block_content pos:start="55:13" pos:end="57:64">
            <expr_stmt pos:start="55:13" pos:end="57:64"><expr pos:start="55:13" pos:end="57:63"><call pos:start="55:13" pos:end="57:63"><name pos:start="55:13" pos:end="55:26">av_fast_malloc</name><argument_list pos:start="55:27" pos:end="57:63">(<argument pos:start="55:28" pos:end="55:47"><expr pos:start="55:28" pos:end="55:47"><operator pos:start="55:28" pos:end="55:28">&amp;</operator><name pos:start="55:29" pos:end="55:47"><name pos:start="55:29" pos:end="55:29">s</name><operator pos:start="55:30" pos:end="55:31">-&gt;</operator><name pos:start="55:32" pos:end="55:47">bitstream_buffer</name></name></expr></argument>,
                           <argument pos:start="56:28" pos:end="56:62"><expr pos:start="56:28" pos:end="56:62"><operator pos:start="56:28" pos:end="56:28">&amp;</operator><name pos:start="56:29" pos:end="56:62"><name pos:start="56:29" pos:end="56:29">s</name><operator pos:start="56:30" pos:end="56:31">-&gt;</operator><name pos:start="56:32" pos:end="56:62">allocated_bitstream_buffer_size</name></name></expr></argument>,
                           <argument pos:start="57:28" pos:end="57:62"><expr pos:start="57:28" pos:end="57:62"><name pos:start="57:28" pos:end="57:62"><name pos:start="57:28" pos:end="57:29">s1</name><operator pos:start="57:30" pos:end="57:31">-&gt;</operator><name pos:start="57:32" pos:end="57:62">allocated_bitstream_buffer_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <expr_stmt pos:start="58:13" pos:end="58:65"><expr pos:start="58:13" pos:end="58:64"><name pos:start="58:13" pos:end="58:36"><name pos:start="58:13" pos:end="58:13">s</name><operator pos:start="58:14" pos:end="58:15">-&gt;</operator><name pos:start="58:16" pos:end="58:36">bitstream_buffer_size</name></name> <operator pos:start="58:38" pos:end="58:38">=</operator> <name pos:start="58:40" pos:end="58:64"><name pos:start="58:40" pos:end="58:41">s1</name><operator pos:start="58:42" pos:end="58:43">-&gt;</operator><name pos:start="58:44" pos:end="58:64">bitstream_buffer_size</name></name></expr>;</expr_stmt>
        <expr_stmt pos:start="59:9" pos:end="60:42"><expr pos:start="59:9" pos:end="60:41"><call pos:start="59:9" pos:end="60:41"><name pos:start="59:9" pos:end="59:14">memcpy</name><argument_list pos:start="59:15" pos:end="60:41">(<argument pos:start="59:16" pos:end="59:34"><expr pos:start="59:16" pos:end="59:34"><name pos:start="59:16" pos:end="59:34"><name pos:start="59:16" pos:end="59:16">s</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:34">bitstream_buffer</name></name></expr></argument>, <argument pos:start="59:37" pos:end="59:56"><expr pos:start="59:37" pos:end="59:56"><name pos:start="59:37" pos:end="59:56"><name pos:start="59:37" pos:end="59:38">s1</name><operator pos:start="59:39" pos:end="59:40">-&gt;</operator><name pos:start="59:41" pos:end="59:56">bitstream_buffer</name></name></expr></argument>,
               <argument pos:start="60:16" pos:end="60:40"><expr pos:start="60:16" pos:end="60:40"><name pos:start="60:16" pos:end="60:40"><name pos:start="60:16" pos:end="60:17">s1</name><operator pos:start="60:18" pos:end="60:19">-&gt;</operator><name pos:start="60:20" pos:end="60:40">bitstream_buffer_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="61:9" pos:end="62:45"><expr pos:start="61:9" pos:end="62:44"><call pos:start="61:9" pos:end="62:44"><name pos:start="61:9" pos:end="61:14">memset</name><argument_list pos:start="61:15" pos:end="62:44">(<argument pos:start="61:16" pos:end="61:61"><expr pos:start="61:16" pos:end="61:61"><name pos:start="61:16" pos:end="61:34"><name pos:start="61:16" pos:end="61:16">s</name><operator pos:start="61:17" pos:end="61:18">-&gt;</operator><name pos:start="61:19" pos:end="61:34">bitstream_buffer</name></name> <operator pos:start="61:36" pos:end="61:36">+</operator> <name pos:start="61:38" pos:end="61:61"><name pos:start="61:38" pos:end="61:38">s</name><operator pos:start="61:39" pos:end="61:40">-&gt;</operator><name pos:start="61:41" pos:end="61:61">bitstream_buffer_size</name></name></expr></argument>, <argument pos:start="61:64" pos:end="61:64"><expr pos:start="61:64" pos:end="61:64"><literal type="number" pos:start="61:64" pos:end="61:64">0</literal></expr></argument>,
               <argument pos:start="62:16" pos:end="62:43"><expr pos:start="62:16" pos:end="62:43"><name pos:start="62:16" pos:end="62:43">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <comment type="line" pos:start="64:5" pos:end="64:29">// MPEG2/interlacing info</comment>
    <expr_stmt pos:start="65:5" pos:end="66:72"><expr pos:start="65:5" pos:end="66:71"><call pos:start="65:5" pos:end="66:71"><name pos:start="65:5" pos:end="65:10">memcpy</name><argument_list pos:start="65:11" pos:end="66:71">(<argument pos:start="65:12" pos:end="65:35"><expr pos:start="65:12" pos:end="65:35"><operator pos:start="65:12" pos:end="65:12">&amp;</operator><name pos:start="65:13" pos:end="65:35"><name pos:start="65:13" pos:end="65:13">s</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:35">progressive_sequence</name></name></expr></argument>, <argument pos:start="65:38" pos:end="65:62"><expr pos:start="65:38" pos:end="65:62"><operator pos:start="65:38" pos:end="65:38">&amp;</operator><name pos:start="65:39" pos:end="65:62"><name pos:start="65:39" pos:end="65:40">s1</name><operator pos:start="65:41" pos:end="65:42">-&gt;</operator><name pos:start="65:43" pos:end="65:62">progressive_sequence</name></name></expr></argument>,
           <argument pos:start="66:12" pos:end="66:70"><expr pos:start="66:12" pos:end="66:70"><operator pos:start="66:12" pos:end="66:12">(</operator><name pos:start="66:13" pos:end="66:16">char</name> <operator pos:start="66:18" pos:end="66:18">*</operator><operator pos:start="66:19" pos:end="66:19">)</operator> <operator pos:start="66:21" pos:end="66:21">&amp;</operator><name pos:start="66:22" pos:end="66:33"><name pos:start="66:22" pos:end="66:23">s1</name><operator pos:start="66:24" pos:end="66:25">-&gt;</operator><name pos:start="66:26" pos:end="66:33">rtp_mode</name></name> <operator pos:start="66:35" pos:end="66:35">-</operator> <operator pos:start="66:37" pos:end="66:37">(</operator><name pos:start="66:38" pos:end="66:41">char</name> <operator pos:start="66:43" pos:end="66:43">*</operator><operator pos:start="66:44" pos:end="66:44">)</operator> <operator pos:start="66:46" pos:end="66:46">&amp;</operator><name pos:start="66:47" pos:end="66:70"><name pos:start="66:47" pos:end="66:48">s1</name><operator pos:start="66:49" pos:end="66:50">-&gt;</operator><name pos:start="66:51" pos:end="66:70">progressive_sequence</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="67:5" pos:end="74:5"><if pos:start="67:5" pos:end="74:5">if <condition pos:start="67:8" pos:end="67:25">(<expr pos:start="67:9" pos:end="67:24"><operator pos:start="67:9" pos:end="67:9">!</operator><name pos:start="67:10" pos:end="67:24"><name pos:start="67:10" pos:end="67:11">s1</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:24">first_field</name></name></expr>)</condition> <block pos:start="67:27" pos:end="74:5">{<block_content pos:start="68:9" pos:end="73:9">
        <expr_stmt pos:start="68:9" pos:end="68:42"><expr pos:start="68:9" pos:end="68:41"><name pos:start="68:9" pos:end="68:25"><name pos:start="68:9" pos:end="68:9">s</name><operator pos:start="68:10" pos:end="68:11">-&gt;</operator><name pos:start="68:12" pos:end="68:25">last_pict_type</name></name> <operator pos:start="68:27" pos:end="68:27">=</operator> <name pos:start="68:29" pos:end="68:41"><name pos:start="68:29" pos:end="68:30">s1</name><operator pos:start="68:31" pos:end="68:32">-&gt;</operator><name pos:start="68:33" pos:end="68:41">pict_type</name></name></expr>;</expr_stmt>
        <if_stmt pos:start="69:9" pos:end="70:83"><if pos:start="69:9" pos:end="70:83">if <condition pos:start="69:12" pos:end="69:36">(<expr pos:start="69:13" pos:end="69:35"><name pos:start="69:13" pos:end="69:35"><name pos:start="69:13" pos:end="69:14">s1</name><operator pos:start="69:15" pos:end="69:16">-&gt;</operator><name pos:start="69:17" pos:end="69:35">current_picture_ptr</name></name></expr>)</condition><block type="pseudo" pos:start="70:13" pos:end="70:83"><block_content pos:start="70:13" pos:end="70:83">
            <expr_stmt pos:start="70:13" pos:end="70:83"><expr pos:start="70:13" pos:end="70:82"><name pos:start="70:13" pos:end="70:45"><name pos:start="70:13" pos:end="70:13">s</name><operator pos:start="70:14" pos:end="70:15">-&gt;</operator><name pos:start="70:16" pos:end="70:30">last_lambda_for</name><index pos:start="70:31" pos:end="70:45">[<expr pos:start="70:32" pos:end="70:44"><name pos:start="70:32" pos:end="70:44"><name pos:start="70:32" pos:end="70:33">s1</name><operator pos:start="70:34" pos:end="70:35">-&gt;</operator><name pos:start="70:36" pos:end="70:44">pict_type</name></name></expr>]</index></name> <operator pos:start="70:47" pos:end="70:47">=</operator> <name pos:start="70:49" pos:end="70:82"><name pos:start="70:49" pos:end="70:50">s1</name><operator pos:start="70:51" pos:end="70:52">-&gt;</operator><name pos:start="70:53" pos:end="70:71">current_picture_ptr</name><operator pos:start="70:72" pos:end="70:73">-&gt;</operator><name pos:start="70:74" pos:end="70:74">f</name><operator pos:start="70:75" pos:end="70:75">.</operator><name pos:start="70:76" pos:end="70:82">quality</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <if_stmt pos:start="71:9" pos:end="73:9"><if pos:start="71:9" pos:end="73:9">if <condition pos:start="71:12" pos:end="71:47">(<expr pos:start="71:13" pos:end="71:46"><name pos:start="71:13" pos:end="71:25"><name pos:start="71:13" pos:end="71:14">s1</name><operator pos:start="71:15" pos:end="71:16">-&gt;</operator><name pos:start="71:17" pos:end="71:25">pict_type</name></name> <operator pos:start="71:27" pos:end="71:28">!=</operator> <name pos:start="71:30" pos:end="71:46">AV_PICTURE_TYPE_B</name></expr>)</condition> <block pos:start="71:49" pos:end="73:9">{<block_content pos:start="72:13" pos:end="72:52">
            <expr_stmt pos:start="72:13" pos:end="72:52"><expr pos:start="72:13" pos:end="72:51"><name pos:start="72:13" pos:end="72:35"><name pos:start="72:13" pos:end="72:13">s</name><operator pos:start="72:14" pos:end="72:15">-&gt;</operator><name pos:start="72:16" pos:end="72:35">last_non_b_pict_type</name></name> <operator pos:start="72:37" pos:end="72:37">=</operator> <name pos:start="72:39" pos:end="72:51"><name pos:start="72:39" pos:end="72:40">s1</name><operator pos:start="72:41" pos:end="72:42">-&gt;</operator><name pos:start="72:43" pos:end="72:51">pict_type</name></name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></if></if_stmt>
    <return pos:start="75:5" pos:end="75:13">return <expr pos:start="75:12" pos:end="75:12"><literal type="number" pos:start="75:12" pos:end="75:12">0</literal></expr>;</return>
</block_content>}</block></function></unit>
