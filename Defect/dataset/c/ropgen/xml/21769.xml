<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21769.c" pos:tabs="8"><function pos:start="1:1" pos:end="135:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint32_t</name></type> <name pos:start="1:17" pos:end="1:32">rtl8139_io_readl</name><parameter_list pos:start="1:33" pos:end="1:60">(<parameter pos:start="1:34" pos:end="1:45"><decl pos:start="1:34" pos:end="1:45"><type pos:start="1:34" pos:end="1:45"><name pos:start="1:34" pos:end="1:37">void</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:45">opaque</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:59"><decl pos:start="1:48" pos:end="1:59"><type pos:start="1:48" pos:end="1:59"><name pos:start="1:48" pos:end="1:54">uint8_t</name></type> <name pos:start="1:56" pos:end="1:59">addr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="135:1">{<block_content pos:start="5:5" pos:end="133:15">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:28"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">RTL8139State</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">s</name> <init pos:start="5:21" pos:end="5:28">= <expr pos:start="5:23" pos:end="5:28"><name pos:start="5:23" pos:end="5:28">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:16">ret</name></decl>;</decl_stmt>



    <switch pos:start="11:5" pos:end="129:5">switch <condition pos:start="11:12" pos:end="11:17">(<expr pos:start="11:13" pos:end="11:16"><name pos:start="11:13" pos:end="11:16">addr</name></expr>)</condition>

    <block pos:start="13:5" pos:end="129:5">{<block_content pos:start="15:9" pos:end="127:18">

        <case pos:start="15:9" pos:end="15:22">case <expr pos:start="15:14" pos:end="15:21"><name pos:start="15:14" pos:end="15:21">RxMissed</name></expr>:</case>

            <expr_stmt pos:start="17:13" pos:end="17:30"><expr pos:start="17:13" pos:end="17:29"><name pos:start="17:13" pos:end="17:15">ret</name> <operator pos:start="17:17" pos:end="17:17">=</operator> <name pos:start="17:19" pos:end="17:29"><name pos:start="17:19" pos:end="17:19">s</name><operator pos:start="17:20" pos:end="17:21">-&gt;</operator><name pos:start="17:22" pos:end="17:29">RxMissed</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="21:13" pos:end="21:55"><expr pos:start="21:13" pos:end="21:54"><call pos:start="21:13" pos:end="21:54"><name pos:start="21:13" pos:end="21:19">DPRINTF</name><argument_list pos:start="21:20" pos:end="21:54">(<argument pos:start="21:21" pos:end="21:48"><expr pos:start="21:21" pos:end="21:48"><literal type="string" pos:start="21:21" pos:end="21:48">"RxMissed read val=0x%08x\n"</literal></expr></argument>, <argument pos:start="21:51" pos:end="21:53"><expr pos:start="21:51" pos:end="21:53"><name pos:start="21:51" pos:end="21:53">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="23:13" pos:end="23:18">break;</break>



        <case pos:start="27:9" pos:end="27:22">case <expr pos:start="27:14" pos:end="27:21"><name pos:start="27:14" pos:end="27:21">TxConfig</name></expr>:</case>

            <expr_stmt pos:start="29:13" pos:end="29:43"><expr pos:start="29:13" pos:end="29:42"><name pos:start="29:13" pos:end="29:15">ret</name> <operator pos:start="29:17" pos:end="29:17">=</operator> <call pos:start="29:19" pos:end="29:42"><name pos:start="29:19" pos:end="29:39">rtl8139_TxConfig_read</name><argument_list pos:start="29:40" pos:end="29:42">(<argument pos:start="29:41" pos:end="29:41"><expr pos:start="29:41" pos:end="29:41"><name pos:start="29:41" pos:end="29:41">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="31:13" pos:end="31:18">break;</break>



        <case pos:start="35:9" pos:end="35:22">case <expr pos:start="35:14" pos:end="35:21"><name pos:start="35:14" pos:end="35:21">RxConfig</name></expr>:</case>

            <expr_stmt pos:start="37:13" pos:end="37:43"><expr pos:start="37:13" pos:end="37:42"><name pos:start="37:13" pos:end="37:15">ret</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <call pos:start="37:19" pos:end="37:42"><name pos:start="37:19" pos:end="37:39">rtl8139_RxConfig_read</name><argument_list pos:start="37:40" pos:end="37:42">(<argument pos:start="37:41" pos:end="37:41"><expr pos:start="37:41" pos:end="37:41"><name pos:start="37:41" pos:end="37:41">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="39:13" pos:end="39:18">break;</break>



        <case pos:start="43:9" pos:end="43:43">case <expr pos:start="43:14" pos:end="43:42"><name pos:start="43:14" pos:end="43:22">TxStatus0</name> <operator pos:start="43:24" pos:end="43:26">...</operator> <name pos:start="43:28" pos:end="43:36">TxStatus0</name><operator pos:start="43:37" pos:end="43:37">+</operator><literal type="number" pos:start="43:38" pos:end="43:38">4</literal><operator pos:start="43:39" pos:end="43:39">*</operator><literal type="number" pos:start="43:40" pos:end="43:41">4</literal><operator pos:start="43:41" pos:end="43:41">-</operator><literal type="number" pos:start="43:42" pos:end="43:42">1</literal></expr>:</case>

            <expr_stmt pos:start="45:13" pos:end="45:52"><expr pos:start="45:13" pos:end="45:51"><name pos:start="45:13" pos:end="45:15">ret</name> <operator pos:start="45:17" pos:end="45:17">=</operator> <call pos:start="45:19" pos:end="45:51"><name pos:start="45:19" pos:end="45:39">rtl8139_TxStatus_read</name><argument_list pos:start="45:40" pos:end="45:51">(<argument pos:start="45:41" pos:end="45:41"><expr pos:start="45:41" pos:end="45:41"><name pos:start="45:41" pos:end="45:41">s</name></expr></argument>, <argument pos:start="45:44" pos:end="45:47"><expr pos:start="45:44" pos:end="45:47"><name pos:start="45:44" pos:end="45:47">addr</name></expr></argument>, <argument pos:start="45:50" pos:end="45:50"><expr pos:start="45:50" pos:end="45:50"><literal type="number" pos:start="45:50" pos:end="45:50">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="47:13" pos:end="47:18">break;</break>



        <case pos:start="51:9" pos:end="51:39">case <expr pos:start="51:14" pos:end="51:38"><name pos:start="51:14" pos:end="51:20">TxAddr0</name> <operator pos:start="51:22" pos:end="51:24">...</operator> <name pos:start="51:26" pos:end="51:32">TxAddr0</name><operator pos:start="51:33" pos:end="51:33">+</operator><literal type="number" pos:start="51:34" pos:end="51:34">4</literal><operator pos:start="51:35" pos:end="51:35">*</operator><literal type="number" pos:start="51:36" pos:end="51:37">4</literal><operator pos:start="51:37" pos:end="51:37">-</operator><literal type="number" pos:start="51:38" pos:end="51:38">1</literal></expr>:</case>

            <expr_stmt pos:start="53:13" pos:end="53:55"><expr pos:start="53:13" pos:end="53:54"><name pos:start="53:13" pos:end="53:15">ret</name> <operator pos:start="53:17" pos:end="53:17">=</operator> <call pos:start="53:19" pos:end="53:54"><name pos:start="53:19" pos:end="53:37">rtl8139_TxAddr_read</name><argument_list pos:start="53:38" pos:end="53:54">(<argument pos:start="53:39" pos:end="53:39"><expr pos:start="53:39" pos:end="53:39"><name pos:start="53:39" pos:end="53:39">s</name></expr></argument>, <argument pos:start="53:42" pos:end="53:53"><expr pos:start="53:42" pos:end="53:53"><name pos:start="53:42" pos:end="53:45">addr</name><operator pos:start="53:46" pos:end="53:46">-</operator><name pos:start="53:47" pos:end="53:53">TxAddr0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="55:13" pos:end="55:18">break;</break>



        <case pos:start="59:9" pos:end="59:19">case <expr pos:start="59:14" pos:end="59:18"><name pos:start="59:14" pos:end="59:18">RxBuf</name></expr>:</case>

            <expr_stmt pos:start="61:13" pos:end="61:40"><expr pos:start="61:13" pos:end="61:39"><name pos:start="61:13" pos:end="61:15">ret</name> <operator pos:start="61:17" pos:end="61:17">=</operator> <call pos:start="61:19" pos:end="61:39"><name pos:start="61:19" pos:end="61:36">rtl8139_RxBuf_read</name><argument_list pos:start="61:37" pos:end="61:39">(<argument pos:start="61:38" pos:end="61:38"><expr pos:start="61:38" pos:end="61:38"><name pos:start="61:38" pos:end="61:38">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="63:13" pos:end="63:18">break;</break>



        <case pos:start="67:9" pos:end="67:26">case <expr pos:start="67:14" pos:end="67:25"><name pos:start="67:14" pos:end="67:25">RxRingAddrLO</name></expr>:</case>

            <expr_stmt pos:start="69:13" pos:end="69:34"><expr pos:start="69:13" pos:end="69:33"><name pos:start="69:13" pos:end="69:15">ret</name> <operator pos:start="69:17" pos:end="69:17">=</operator> <name pos:start="69:19" pos:end="69:33"><name pos:start="69:19" pos:end="69:19">s</name><operator pos:start="69:20" pos:end="69:21">-&gt;</operator><name pos:start="69:22" pos:end="69:33">RxRingAddrLO</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:65"><expr pos:start="71:13" pos:end="71:64"><call pos:start="71:13" pos:end="71:64"><name pos:start="71:13" pos:end="71:19">DPRINTF</name><argument_list pos:start="71:20" pos:end="71:64">(<argument pos:start="71:21" pos:end="71:58"><expr pos:start="71:21" pos:end="71:58"><literal type="string" pos:start="71:21" pos:end="71:58">"C+ RxRing low bits read val=0x%08x\n"</literal></expr></argument>, <argument pos:start="71:61" pos:end="71:63"><expr pos:start="71:61" pos:end="71:63"><name pos:start="71:61" pos:end="71:63">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="73:13" pos:end="73:18">break;</break>



        <case pos:start="77:9" pos:end="77:26">case <expr pos:start="77:14" pos:end="77:25"><name pos:start="77:14" pos:end="77:25">RxRingAddrHI</name></expr>:</case>

            <expr_stmt pos:start="79:13" pos:end="79:34"><expr pos:start="79:13" pos:end="79:33"><name pos:start="79:13" pos:end="79:15">ret</name> <operator pos:start="79:17" pos:end="79:17">=</operator> <name pos:start="79:19" pos:end="79:33"><name pos:start="79:19" pos:end="79:19">s</name><operator pos:start="79:20" pos:end="79:21">-&gt;</operator><name pos:start="79:22" pos:end="79:33">RxRingAddrHI</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:66"><expr pos:start="81:13" pos:end="81:65"><call pos:start="81:13" pos:end="81:65"><name pos:start="81:13" pos:end="81:19">DPRINTF</name><argument_list pos:start="81:20" pos:end="81:65">(<argument pos:start="81:21" pos:end="81:59"><expr pos:start="81:21" pos:end="81:59"><literal type="string" pos:start="81:21" pos:end="81:59">"C+ RxRing high bits read val=0x%08x\n"</literal></expr></argument>, <argument pos:start="81:62" pos:end="81:64"><expr pos:start="81:62" pos:end="81:64"><name pos:start="81:62" pos:end="81:64">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="83:13" pos:end="83:18">break;</break>



        <case pos:start="87:9" pos:end="87:19">case <expr pos:start="87:14" pos:end="87:18"><name pos:start="87:14" pos:end="87:18">Timer</name></expr>:</case>

            <expr_stmt pos:start="89:13" pos:end="91:63"><expr pos:start="89:13" pos:end="91:62"><name pos:start="89:13" pos:end="89:15">ret</name> <operator pos:start="89:17" pos:end="89:17">=</operator> <call pos:start="89:19" pos:end="91:62"><name pos:start="89:19" pos:end="89:26">muldiv64</name><argument_list pos:start="89:27" pos:end="91:62">(<argument pos:start="89:28" pos:end="89:69"><expr pos:start="89:28" pos:end="89:69"><call pos:start="89:28" pos:end="89:54"><name pos:start="89:28" pos:end="89:44">qemu_get_clock_ns</name><argument_list pos:start="89:45" pos:end="89:54">(<argument pos:start="89:46" pos:end="89:53"><expr pos:start="89:46" pos:end="89:53"><name pos:start="89:46" pos:end="89:53">vm_clock</name></expr></argument>)</argument_list></call> <operator pos:start="89:56" pos:end="89:56">-</operator> <name pos:start="89:58" pos:end="89:69"><name pos:start="89:58" pos:end="89:58">s</name><operator pos:start="89:59" pos:end="89:60">-&gt;</operator><name pos:start="89:61" pos:end="89:69">TCTR_base</name></name></expr></argument>,

                           <argument pos:start="91:28" pos:end="91:40"><expr pos:start="91:28" pos:end="91:40"><name pos:start="91:28" pos:end="91:40">PCI_FREQUENCY</name></expr></argument>, <argument pos:start="91:43" pos:end="91:61"><expr pos:start="91:43" pos:end="91:61"><call pos:start="91:43" pos:end="91:61"><name pos:start="91:43" pos:end="91:59">get_ticks_per_sec</name><argument_list pos:start="91:60" pos:end="91:61">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:57"><expr pos:start="93:13" pos:end="93:56"><call pos:start="93:13" pos:end="93:56"><name pos:start="93:13" pos:end="93:19">DPRINTF</name><argument_list pos:start="93:20" pos:end="93:56">(<argument pos:start="93:21" pos:end="93:50"><expr pos:start="93:21" pos:end="93:50"><literal type="string" pos:start="93:21" pos:end="93:50">"TCTR Timer read val=0x%08x\n"</literal></expr></argument>, <argument pos:start="93:53" pos:end="93:55"><expr pos:start="93:53" pos:end="93:55"><name pos:start="93:53" pos:end="93:55">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="95:13" pos:end="95:18">break;</break>



        <case pos:start="99:9" pos:end="99:22">case <expr pos:start="99:14" pos:end="99:21"><name pos:start="99:14" pos:end="99:21">FlashReg</name></expr>:</case>

            <expr_stmt pos:start="101:13" pos:end="101:30"><expr pos:start="101:13" pos:end="101:29"><name pos:start="101:13" pos:end="101:15">ret</name> <operator pos:start="101:17" pos:end="101:17">=</operator> <name pos:start="101:19" pos:end="101:29"><name pos:start="101:19" pos:end="101:19">s</name><operator pos:start="101:20" pos:end="101:21">-&gt;</operator><name pos:start="101:22" pos:end="101:29">TimerInt</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:64"><expr pos:start="103:13" pos:end="103:63"><call pos:start="103:13" pos:end="103:63"><name pos:start="103:13" pos:end="103:19">DPRINTF</name><argument_list pos:start="103:20" pos:end="103:63">(<argument pos:start="103:21" pos:end="103:57"><expr pos:start="103:21" pos:end="103:57"><literal type="string" pos:start="103:21" pos:end="103:57">"FlashReg TimerInt read val=0x%08x\n"</literal></expr></argument>, <argument pos:start="103:60" pos:end="103:62"><expr pos:start="103:60" pos:end="103:62"><name pos:start="103:60" pos:end="103:62">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="105:13" pos:end="105:18">break;</break>



        <default pos:start="109:9" pos:end="109:16">default:</default>

            <expr_stmt pos:start="111:13" pos:end="111:68"><expr pos:start="111:13" pos:end="111:67"><call pos:start="111:13" pos:end="111:67"><name pos:start="111:13" pos:end="111:19">DPRINTF</name><argument_list pos:start="111:20" pos:end="111:67">(<argument pos:start="111:21" pos:end="111:60"><expr pos:start="111:21" pos:end="111:60"><literal type="string" pos:start="111:21" pos:end="111:60">"ioport read(l) addr=0x%x via read(b)\n"</literal></expr></argument>, <argument pos:start="111:63" pos:end="111:66"><expr pos:start="111:63" pos:end="111:66"><name pos:start="111:63" pos:end="111:66">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="115:13" pos:end="115:50"><expr pos:start="115:13" pos:end="115:49"><name pos:start="115:13" pos:end="115:15">ret</name>  <operator pos:start="115:18" pos:end="115:18">=</operator> <call pos:start="115:20" pos:end="115:49"><name pos:start="115:20" pos:end="115:35">rtl8139_io_readb</name><argument_list pos:start="115:36" pos:end="115:49">(<argument pos:start="115:37" pos:end="115:42"><expr pos:start="115:37" pos:end="115:42"><name pos:start="115:37" pos:end="115:42">opaque</name></expr></argument>, <argument pos:start="115:45" pos:end="115:48"><expr pos:start="115:45" pos:end="115:48"><name pos:start="115:45" pos:end="115:48">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:59"><expr pos:start="117:13" pos:end="117:58"><name pos:start="117:13" pos:end="117:15">ret</name> <operator pos:start="117:17" pos:end="117:18">|=</operator> <call pos:start="117:20" pos:end="117:53"><name pos:start="117:20" pos:end="117:35">rtl8139_io_readb</name><argument_list pos:start="117:36" pos:end="117:53">(<argument pos:start="117:37" pos:end="117:42"><expr pos:start="117:37" pos:end="117:42"><name pos:start="117:37" pos:end="117:42">opaque</name></expr></argument>, <argument pos:start="117:45" pos:end="117:52"><expr pos:start="117:45" pos:end="117:52"><name pos:start="117:45" pos:end="117:48">addr</name> <operator pos:start="117:50" pos:end="117:50">+</operator> <literal type="number" pos:start="117:52" pos:end="117:52">1</literal></expr></argument>)</argument_list></call> <operator pos:start="117:55" pos:end="117:56">&lt;&lt;</operator> <literal type="number" pos:start="117:58" pos:end="117:58">8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:60"><expr pos:start="119:13" pos:end="119:59"><name pos:start="119:13" pos:end="119:15">ret</name> <operator pos:start="119:17" pos:end="119:18">|=</operator> <call pos:start="119:20" pos:end="119:53"><name pos:start="119:20" pos:end="119:35">rtl8139_io_readb</name><argument_list pos:start="119:36" pos:end="119:53">(<argument pos:start="119:37" pos:end="119:42"><expr pos:start="119:37" pos:end="119:42"><name pos:start="119:37" pos:end="119:42">opaque</name></expr></argument>, <argument pos:start="119:45" pos:end="119:52"><expr pos:start="119:45" pos:end="119:52"><name pos:start="119:45" pos:end="119:48">addr</name> <operator pos:start="119:50" pos:end="119:50">+</operator> <literal type="number" pos:start="119:52" pos:end="119:52">2</literal></expr></argument>)</argument_list></call> <operator pos:start="119:55" pos:end="119:56">&lt;&lt;</operator> <literal type="number" pos:start="119:58" pos:end="119:59">16</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:60"><expr pos:start="121:13" pos:end="121:59"><name pos:start="121:13" pos:end="121:15">ret</name> <operator pos:start="121:17" pos:end="121:18">|=</operator> <call pos:start="121:20" pos:end="121:53"><name pos:start="121:20" pos:end="121:35">rtl8139_io_readb</name><argument_list pos:start="121:36" pos:end="121:53">(<argument pos:start="121:37" pos:end="121:42"><expr pos:start="121:37" pos:end="121:42"><name pos:start="121:37" pos:end="121:42">opaque</name></expr></argument>, <argument pos:start="121:45" pos:end="121:52"><expr pos:start="121:45" pos:end="121:52"><name pos:start="121:45" pos:end="121:48">addr</name> <operator pos:start="121:50" pos:end="121:50">+</operator> <literal type="number" pos:start="121:52" pos:end="121:52">3</literal></expr></argument>)</argument_list></call> <operator pos:start="121:55" pos:end="121:56">&lt;&lt;</operator> <literal type="number" pos:start="121:58" pos:end="121:59">24</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="125:13" pos:end="125:63"><expr pos:start="125:13" pos:end="125:62"><call pos:start="125:13" pos:end="125:62"><name pos:start="125:13" pos:end="125:19">DPRINTF</name><argument_list pos:start="125:20" pos:end="125:62">(<argument pos:start="125:21" pos:end="125:50"><expr pos:start="125:21" pos:end="125:50"><literal type="string" pos:start="125:21" pos:end="125:50">"read(l) addr=0x%x val=%08x\n"</literal></expr></argument>, <argument pos:start="125:53" pos:end="125:56"><expr pos:start="125:53" pos:end="125:56"><name pos:start="125:53" pos:end="125:56">addr</name></expr></argument>, <argument pos:start="125:59" pos:end="125:61"><expr pos:start="125:59" pos:end="125:61"><name pos:start="125:59" pos:end="125:61">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="127:13" pos:end="127:18">break;</break>

    </block_content>}</block></switch>



    <return pos:start="133:5" pos:end="133:15">return <expr pos:start="133:12" pos:end="133:14"><name pos:start="133:12" pos:end="133:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
