<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9060.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">xhci_ep_nuke_one_xfer</name><parameter_list pos:start="1:33" pos:end="1:66">(<parameter pos:start="1:34" pos:end="1:48"><decl pos:start="1:34" pos:end="1:48"><type pos:start="1:34" pos:end="1:48"><name pos:start="1:34" pos:end="1:45">XHCITransfer</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">t</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:65"><decl pos:start="1:51" pos:end="1:65"><type pos:start="1:51" pos:end="1:65"><name pos:start="1:51" pos:end="1:58">TRBCCode</name></type> <name pos:start="1:60" pos:end="1:65">report</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:18">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:14">killed</name> <init pos:start="5:16" pos:end="5:18">= <expr pos:start="5:18" pos:end="5:18"><literal type="number" pos:start="5:18" pos:end="5:18">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="15:5"><if pos:start="9:5" pos:end="15:5">if <condition pos:start="9:8" pos:end="9:57">(<expr pos:start="9:9" pos:end="9:56"><name pos:start="9:9" pos:end="9:14">report</name> <operator pos:start="9:16" pos:end="9:17">&amp;&amp;</operator> <operator pos:start="9:19" pos:end="9:19">(</operator><name pos:start="9:20" pos:end="9:35"><name pos:start="9:20" pos:end="9:20">t</name><operator pos:start="9:21" pos:end="9:22">-&gt;</operator><name pos:start="9:23" pos:end="9:35">running_async</name></name> <operator pos:start="9:37" pos:end="9:38">||</operator> <name pos:start="9:40" pos:end="9:55"><name pos:start="9:40" pos:end="9:40">t</name><operator pos:start="9:41" pos:end="9:42">-&gt;</operator><name pos:start="9:43" pos:end="9:55">running_retry</name></name><operator pos:start="9:56" pos:end="9:56">)</operator></expr>)</condition> <block pos:start="9:59" pos:end="15:5">{<block_content pos:start="11:9" pos:end="13:28">

        <expr_stmt pos:start="11:9" pos:end="11:27"><expr pos:start="11:9" pos:end="11:26"><name pos:start="11:9" pos:end="11:17"><name pos:start="11:9" pos:end="11:9">t</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:17">status</name></name> <operator pos:start="11:19" pos:end="11:19">=</operator> <name pos:start="11:21" pos:end="11:26">report</name></expr>;</expr_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:28"><expr pos:start="13:9" pos:end="13:27"><call pos:start="13:9" pos:end="13:27"><name pos:start="13:9" pos:end="13:24">xhci_xfer_report</name><argument_list pos:start="13:25" pos:end="13:27">(<argument pos:start="13:26" pos:end="13:26"><expr pos:start="13:26" pos:end="13:26"><name pos:start="13:26" pos:end="13:26">t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="19:5" pos:end="27:5"><if pos:start="19:5" pos:end="27:5">if <condition pos:start="19:8" pos:end="19:25">(<expr pos:start="19:9" pos:end="19:24"><name pos:start="19:9" pos:end="19:24"><name pos:start="19:9" pos:end="19:9">t</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:24">running_async</name></name></expr>)</condition> <block pos:start="19:27" pos:end="27:5">{<block_content pos:start="21:9" pos:end="25:19">

        <expr_stmt pos:start="21:9" pos:end="21:38"><expr pos:start="21:9" pos:end="21:37"><call pos:start="21:9" pos:end="21:37"><name pos:start="21:9" pos:end="21:25">usb_cancel_packet</name><argument_list pos:start="21:26" pos:end="21:37">(<argument pos:start="21:27" pos:end="21:36"><expr pos:start="21:27" pos:end="21:36"><operator pos:start="21:27" pos:end="21:27">&amp;</operator><name pos:start="21:28" pos:end="21:36"><name pos:start="21:28" pos:end="21:28">t</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:36">packet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:29"><expr pos:start="23:9" pos:end="23:28"><name pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:9">t</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:24">running_async</name></name> <operator pos:start="23:26" pos:end="23:26">=</operator> <literal type="number" pos:start="23:28" pos:end="23:28">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:19"><expr pos:start="25:9" pos:end="25:18"><name pos:start="25:9" pos:end="25:14">killed</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <literal type="number" pos:start="25:18" pos:end="25:18">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="29:5" pos:end="45:5"><if pos:start="29:5" pos:end="45:5">if <condition pos:start="29:8" pos:end="29:25">(<expr pos:start="29:9" pos:end="29:24"><name pos:start="29:9" pos:end="29:24"><name pos:start="29:9" pos:end="29:9">t</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:24">running_retry</name></name></expr>)</condition> <block pos:start="29:27" pos:end="45:5">{<block_content pos:start="31:9" pos:end="43:19">

        <decl_stmt pos:start="31:9" pos:end="31:74"><decl pos:start="31:9" pos:end="31:73"><type pos:start="31:9" pos:end="31:23"><name pos:start="31:9" pos:end="31:21">XHCIEPContext</name> <modifier pos:start="31:23" pos:end="31:23">*</modifier></type><name pos:start="31:24" pos:end="31:28">epctx</name> <init pos:start="31:30" pos:end="31:73">= <expr pos:start="31:32" pos:end="31:73"><name pos:start="31:32" pos:end="31:58"><name pos:start="31:32" pos:end="31:32">t</name><operator pos:start="31:33" pos:end="31:34">-&gt;</operator><name pos:start="31:35" pos:end="31:38">xhci</name><operator pos:start="31:39" pos:end="31:40">-&gt;</operator><name pos:start="31:41" pos:end="31:45">slots</name><index pos:start="31:46" pos:end="31:58">[<expr pos:start="31:47" pos:end="31:57"><name pos:start="31:47" pos:end="31:55"><name pos:start="31:47" pos:end="31:47">t</name><operator pos:start="31:48" pos:end="31:49">-&gt;</operator><name pos:start="31:50" pos:end="31:55">slotid</name></name><operator pos:start="31:56" pos:end="31:56">-</operator><literal type="number" pos:start="31:57" pos:end="31:57">1</literal></expr>]</index></name><operator pos:start="31:59" pos:end="31:59">.</operator><name pos:start="31:60" pos:end="31:73"><name pos:start="31:60" pos:end="31:62">eps</name><index pos:start="31:63" pos:end="31:73">[<expr pos:start="31:64" pos:end="31:72"><name pos:start="31:64" pos:end="31:70"><name pos:start="31:64" pos:end="31:64">t</name><operator pos:start="31:65" pos:end="31:66">-&gt;</operator><name pos:start="31:67" pos:end="31:70">epid</name></name><operator pos:start="31:71" pos:end="31:71">-</operator><literal type="number" pos:start="31:72" pos:end="31:72">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="33:9" pos:end="39:9"><if pos:start="33:9" pos:end="39:9">if <condition pos:start="33:12" pos:end="33:18">(<expr pos:start="33:13" pos:end="33:17"><name pos:start="33:13" pos:end="33:17">epctx</name></expr>)</condition> <block pos:start="33:20" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:41">

            <expr_stmt pos:start="35:13" pos:end="35:32"><expr pos:start="35:13" pos:end="35:31"><name pos:start="35:13" pos:end="35:24"><name pos:start="35:13" pos:end="35:17">epctx</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:24">retry</name></name> <operator pos:start="35:26" pos:end="35:26">=</operator> <name pos:start="35:28" pos:end="35:31">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:41"><expr pos:start="37:13" pos:end="37:40"><call pos:start="37:13" pos:end="37:40"><name pos:start="37:13" pos:end="37:21">timer_del</name><argument_list pos:start="37:22" pos:end="37:40">(<argument pos:start="37:23" pos:end="37:39"><expr pos:start="37:23" pos:end="37:39"><name pos:start="37:23" pos:end="37:39"><name pos:start="37:23" pos:end="37:27">epctx</name><operator pos:start="37:28" pos:end="37:29">-&gt;</operator><name pos:start="37:30" pos:end="37:39">kick_timer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:29"><expr pos:start="41:9" pos:end="41:28"><name pos:start="41:9" pos:end="41:24"><name pos:start="41:9" pos:end="41:9">t</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:24">running_retry</name></name> <operator pos:start="41:26" pos:end="41:26">=</operator> <literal type="number" pos:start="41:28" pos:end="41:28">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:19"><expr pos:start="43:9" pos:end="43:18"><name pos:start="43:9" pos:end="43:14">killed</name> <operator pos:start="43:16" pos:end="43:16">=</operator> <literal type="number" pos:start="43:18" pos:end="43:18">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:20"><expr pos:start="47:5" pos:end="47:19"><call pos:start="47:5" pos:end="47:19"><name pos:start="47:5" pos:end="47:10">g_free</name><argument_list pos:start="47:11" pos:end="47:19">(<argument pos:start="47:12" pos:end="47:18"><expr pos:start="47:12" pos:end="47:18"><name pos:start="47:12" pos:end="47:18"><name pos:start="47:12" pos:end="47:12">t</name><operator pos:start="47:13" pos:end="47:14">-&gt;</operator><name pos:start="47:15" pos:end="47:18">trbs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:19"><expr pos:start="51:5" pos:end="51:18"><name pos:start="51:5" pos:end="51:11"><name pos:start="51:5" pos:end="51:5">t</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:11">trbs</name></name> <operator pos:start="51:13" pos:end="51:13">=</operator> <name pos:start="51:15" pos:end="51:18">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:38"><expr pos:start="53:5" pos:end="53:37"><name pos:start="53:5" pos:end="53:16"><name pos:start="53:5" pos:end="53:5">t</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:16">trb_count</name></name> <operator pos:start="53:18" pos:end="53:18">=</operator> <name pos:start="53:20" pos:end="53:33"><name pos:start="53:20" pos:end="53:20">t</name><operator pos:start="53:21" pos:end="53:22">-&gt;</operator><name pos:start="53:23" pos:end="53:33">trb_alloced</name></name> <operator pos:start="53:35" pos:end="53:35">=</operator> <literal type="number" pos:start="53:37" pos:end="53:37">0</literal></expr>;</expr_stmt>



    <return pos:start="57:5" pos:end="57:18">return <expr pos:start="57:12" pos:end="57:17"><name pos:start="57:12" pos:end="57:17">killed</name></expr>;</return>

</block_content>}</block></function>
</unit>
