<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22319.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">tap_send</name><parameter_list pos:start="1:21" pos:end="1:34">(<parameter pos:start="1:22" pos:end="1:33"><decl pos:start="1:22" pos:end="1:33"><type pos:start="1:22" pos:end="1:27"><name pos:start="1:22" pos:end="1:25">void</name> <modifier pos:start="1:27" pos:end="1:27">*</modifier></type><name pos:start="1:28" pos:end="1:33">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:55">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">TAPState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:15">s</name> <init pos:start="5:17" pos:end="5:24">= <expr pos:start="5:19" pos:end="5:24"><name pos:start="5:19" pos:end="5:24">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">size</name></decl>;</decl_stmt>



    <do pos:start="11:5" pos:end="45:55">do <block pos:start="11:8" pos:end="45:5">{<block_content pos:start="13:9" pos:end="43:9">

        <decl_stmt pos:start="13:9" pos:end="13:30"><decl pos:start="13:9" pos:end="13:29"><type pos:start="13:9" pos:end="13:17"><name pos:start="13:9" pos:end="13:15">uint8_t</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:20">buf</name> <init pos:start="13:22" pos:end="13:29">= <expr pos:start="13:24" pos:end="13:29"><name pos:start="13:24" pos:end="13:29"><name pos:start="13:24" pos:end="13:24">s</name><operator pos:start="13:25" pos:end="13:26">-&gt;</operator><name pos:start="13:27" pos:end="13:29">buf</name></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="17:9" pos:end="17:62"><expr pos:start="17:9" pos:end="17:61"><name pos:start="17:9" pos:end="17:12">size</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <call pos:start="17:16" pos:end="17:61"><name pos:start="17:16" pos:end="17:30">tap_read_packet</name><argument_list pos:start="17:31" pos:end="17:61">(<argument pos:start="17:32" pos:end="17:36"><expr pos:start="17:32" pos:end="17:36"><name pos:start="17:32" pos:end="17:36"><name pos:start="17:32" pos:end="17:32">s</name><operator pos:start="17:33" pos:end="17:34">-&gt;</operator><name pos:start="17:35" pos:end="17:36">fd</name></name></expr></argument>, <argument pos:start="17:39" pos:end="17:44"><expr pos:start="17:39" pos:end="17:44"><name pos:start="17:39" pos:end="17:44"><name pos:start="17:39" pos:end="17:39">s</name><operator pos:start="17:40" pos:end="17:41">-&gt;</operator><name pos:start="17:42" pos:end="17:44">buf</name></name></expr></argument>, <argument pos:start="17:47" pos:end="17:60"><expr pos:start="17:47" pos:end="17:60"><sizeof pos:start="17:47" pos:end="17:60">sizeof<argument_list pos:start="17:53" pos:end="17:60">(<argument pos:start="17:54" pos:end="17:59"><expr pos:start="17:54" pos:end="17:59"><name pos:start="17:54" pos:end="17:59"><name pos:start="17:54" pos:end="17:54">s</name><operator pos:start="17:55" pos:end="17:56">-&gt;</operator><name pos:start="17:57" pos:end="17:59">buf</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="23:9"><if pos:start="19:9" pos:end="23:9">if <condition pos:start="19:12" pos:end="19:22">(<expr pos:start="19:13" pos:end="19:21"><name pos:start="19:13" pos:end="19:16">size</name> <operator pos:start="19:18" pos:end="19:19">&lt;=</operator> <literal type="number" pos:start="19:21" pos:end="19:21">0</literal></expr>)</condition> <block pos:start="19:24" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:18">

            <break pos:start="21:13" pos:end="21:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="27:9" pos:end="33:9"><if pos:start="27:9" pos:end="33:9">if <condition pos:start="27:12" pos:end="27:55">(<expr pos:start="27:13" pos:end="27:54"><name pos:start="27:13" pos:end="27:32"><name pos:start="27:13" pos:end="27:13">s</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:32">host_vnet_hdr_len</name></name> <operator pos:start="27:34" pos:end="27:35">&amp;&amp;</operator> <operator pos:start="27:37" pos:end="27:37">!</operator><name pos:start="27:38" pos:end="27:54"><name pos:start="27:38" pos:end="27:38">s</name><operator pos:start="27:39" pos:end="27:40">-&gt;</operator><name pos:start="27:41" pos:end="27:54">using_vnet_hdr</name></name></expr>)</condition> <block pos:start="27:57" pos:end="33:9">{<block_content pos:start="29:13" pos:end="31:41">

            <expr_stmt pos:start="29:13" pos:end="29:41"><expr pos:start="29:13" pos:end="29:40"><name pos:start="29:13" pos:end="29:15">buf</name>  <operator pos:start="29:18" pos:end="29:19">+=</operator> <name pos:start="29:21" pos:end="29:40"><name pos:start="29:21" pos:end="29:21">s</name><operator pos:start="29:22" pos:end="29:23">-&gt;</operator><name pos:start="29:24" pos:end="29:40">host_vnet_hdr_len</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:41"><expr pos:start="31:13" pos:end="31:40"><name pos:start="31:13" pos:end="31:16">size</name> <operator pos:start="31:18" pos:end="31:19">-=</operator> <name pos:start="31:21" pos:end="31:40"><name pos:start="31:21" pos:end="31:21">s</name><operator pos:start="31:22" pos:end="31:23">-&gt;</operator><name pos:start="31:24" pos:end="31:40">host_vnet_hdr_len</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="37:9" pos:end="37:77"><expr pos:start="37:9" pos:end="37:76"><name pos:start="37:9" pos:end="37:12">size</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <call pos:start="37:16" pos:end="37:76"><name pos:start="37:16" pos:end="37:37">qemu_send_packet_async</name><argument_list pos:start="37:38" pos:end="37:76">(<argument pos:start="37:39" pos:end="37:44"><expr pos:start="37:39" pos:end="37:44"><operator pos:start="37:39" pos:end="37:39">&amp;</operator><name pos:start="37:40" pos:end="37:44"><name pos:start="37:40" pos:end="37:40">s</name><operator pos:start="37:41" pos:end="37:42">-&gt;</operator><name pos:start="37:43" pos:end="37:44">nc</name></name></expr></argument>, <argument pos:start="37:47" pos:end="37:49"><expr pos:start="37:47" pos:end="37:49"><name pos:start="37:47" pos:end="37:49">buf</name></expr></argument>, <argument pos:start="37:52" pos:end="37:55"><expr pos:start="37:52" pos:end="37:55"><name pos:start="37:52" pos:end="37:55">size</name></expr></argument>, <argument pos:start="37:58" pos:end="37:75"><expr pos:start="37:58" pos:end="37:75"><name pos:start="37:58" pos:end="37:75">tap_send_completed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="43:9"><if pos:start="39:9" pos:end="43:9">if <condition pos:start="39:12" pos:end="39:22">(<expr pos:start="39:13" pos:end="39:21"><name pos:start="39:13" pos:end="39:16">size</name> <operator pos:start="39:18" pos:end="39:19">==</operator> <literal type="number" pos:start="39:21" pos:end="39:21">0</literal></expr>)</condition> <block pos:start="39:24" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:36">

            <expr_stmt pos:start="41:13" pos:end="41:36"><expr pos:start="41:13" pos:end="41:35"><call pos:start="41:13" pos:end="41:35"><name pos:start="41:13" pos:end="41:25">tap_read_poll</name><argument_list pos:start="41:26" pos:end="41:35">(<argument pos:start="41:27" pos:end="41:27"><expr pos:start="41:27" pos:end="41:27"><name pos:start="41:27" pos:end="41:27">s</name></expr></argument>, <argument pos:start="41:30" pos:end="41:34"><expr pos:start="41:30" pos:end="41:34"><name pos:start="41:30" pos:end="41:34">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block> while <condition pos:start="45:13" pos:end="45:54">(<expr pos:start="45:14" pos:end="45:53"><name pos:start="45:14" pos:end="45:17">size</name> <operator pos:start="45:19" pos:end="45:19">&gt;</operator> <literal type="number" pos:start="45:21" pos:end="45:21">0</literal> <operator pos:start="45:23" pos:end="45:24">&amp;&amp;</operator> <call pos:start="45:26" pos:end="45:53"><name pos:start="45:26" pos:end="45:45">qemu_can_send_packet</name><argument_list pos:start="45:46" pos:end="45:53">(<argument pos:start="45:47" pos:end="45:52"><expr pos:start="45:47" pos:end="45:52"><operator pos:start="45:47" pos:end="45:47">&amp;</operator><name pos:start="45:48" pos:end="45:52"><name pos:start="45:48" pos:end="45:48">s</name><operator pos:start="45:49" pos:end="45:50">-&gt;</operator><name pos:start="45:51" pos:end="45:52">nc</name></name></expr></argument>)</argument_list></call></expr>)</condition>;</do>

</block_content>}</block></function>
</unit>
