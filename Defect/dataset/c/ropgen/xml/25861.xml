<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25861.c" pos:tabs="8"><function pos:start="1:1" pos:end="170:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:24">ff_rv34_decode_frame</name><parameter_list pos:start="1:25" pos:end="3:44">(<parameter pos:start="1:26" pos:end="1:46"><decl pos:start="1:26" pos:end="1:46"><type pos:start="1:26" pos:end="1:46"><name pos:start="1:26" pos:end="1:39">AVCodecContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:46">avctx</name></decl></parameter>,
                            <parameter pos:start="2:29" pos:end="2:38"><decl pos:start="2:29" pos:end="2:38"><type pos:start="2:29" pos:end="2:38"><name pos:start="2:29" pos:end="2:32">void</name> <modifier pos:start="2:34" pos:end="2:34">*</modifier></type><name pos:start="2:35" pos:end="2:38">data</name></decl></parameter>, <parameter pos:start="2:41" pos:end="2:60"><decl pos:start="2:41" pos:end="2:60"><type pos:start="2:41" pos:end="2:60"><name pos:start="2:41" pos:end="2:43">int</name> <modifier pos:start="2:45" pos:end="2:45">*</modifier></type><name pos:start="2:46" pos:end="2:60">got_picture_ptr</name></decl></parameter>,
                            <parameter pos:start="3:29" pos:end="3:43"><decl pos:start="3:29" pos:end="3:43"><type pos:start="3:29" pos:end="3:43"><name pos:start="3:29" pos:end="3:36">AVPacket</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:43">avpkt</name></decl></parameter>)</parameter_list>
<block pos:start="4:1" pos:end="170:1">{<block_content pos:start="5:5" pos:end="169:23">
    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:19"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:17">uint8_t</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">buf</name> <init pos:start="5:24" pos:end="5:36">= <expr pos:start="5:26" pos:end="5:36"><name pos:start="5:26" pos:end="5:36"><name pos:start="5:26" pos:end="5:30">avpkt</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:36">data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:31"><decl pos:start="6:5" pos:end="6:30"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:16">buf_size</name> <init pos:start="6:18" pos:end="6:30">= <expr pos:start="6:20" pos:end="6:30"><name pos:start="6:20" pos:end="6:30"><name pos:start="6:20" pos:end="6:24">avpkt</name><operator pos:start="6:25" pos:end="6:26">-&gt;</operator><name pos:start="6:27" pos:end="6:30">size</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">RV34DecContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">r</name> <init pos:start="7:23" pos:end="7:40">= <expr pos:start="7:25" pos:end="7:40"><name pos:start="7:25" pos:end="7:40"><name pos:start="7:25" pos:end="7:29">avctx</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:40">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:30"><decl pos:start="8:5" pos:end="8:29"><type pos:start="8:5" pos:end="8:20"><name pos:start="8:5" pos:end="8:18">MpegEncContext</name> <modifier pos:start="8:20" pos:end="8:20">*</modifier></type><name pos:start="8:21" pos:end="8:21">s</name> <init pos:start="8:23" pos:end="8:29">= <expr pos:start="8:25" pos:end="8:29"><operator pos:start="8:25" pos:end="8:25">&amp;</operator><name pos:start="8:26" pos:end="8:29"><name pos:start="8:26" pos:end="8:26">r</name><operator pos:start="8:27" pos:end="8:28">-&gt;</operator><name pos:start="8:29" pos:end="8:29">s</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">AVFrame</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:17">pict</name> <init pos:start="9:19" pos:end="9:24">= <expr pos:start="9:21" pos:end="9:24"><name pos:start="9:21" pos:end="9:24">data</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:17"><decl pos:start="10:5" pos:end="10:16"><type pos:start="10:5" pos:end="10:13"><name pos:start="10:5" pos:end="10:13">SliceInfo</name></type> <name pos:start="10:15" pos:end="10:16">si</name></decl>;</decl_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>
    <decl_stmt pos:start="12:5" pos:end="12:20"><decl pos:start="12:5" pos:end="12:19"><type pos:start="12:5" pos:end="12:7"><name pos:start="12:5" pos:end="12:7">int</name></type> <name pos:start="12:9" pos:end="12:19">slice_count</name></decl>;</decl_stmt>
    <decl_stmt pos:start="13:5" pos:end="13:37"><decl pos:start="13:5" pos:end="13:36"><type pos:start="13:5" pos:end="13:19"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:17">uint8_t</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:29">slices_hdr</name> <init pos:start="13:31" pos:end="13:36">= <expr pos:start="13:33" pos:end="13:36"><name pos:start="13:33" pos:end="13:36">NULL</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="14:5" pos:end="14:17"><decl pos:start="14:5" pos:end="14:16"><type pos:start="14:5" pos:end="14:7"><name pos:start="14:5" pos:end="14:7">int</name></type> <name pos:start="14:9" pos:end="14:12">last</name> <init pos:start="14:14" pos:end="14:16">= <expr pos:start="14:16" pos:end="14:16"><literal type="number" pos:start="14:16" pos:end="14:16">0</literal></expr></init></decl>;</decl_stmt>
    <comment type="block" pos:start="15:5" pos:end="15:34">/* no supplementary picture */</comment>
    <if_stmt pos:start="16:5" pos:end="24:5"><if pos:start="16:5" pos:end="24:5">if <condition pos:start="16:8" pos:end="16:22">(<expr pos:start="16:9" pos:end="16:21"><name pos:start="16:9" pos:end="16:16">buf_size</name> <operator pos:start="16:18" pos:end="16:19">==</operator> <literal type="number" pos:start="16:21" pos:end="16:21">0</literal></expr>)</condition> <block pos:start="16:24" pos:end="24:5">{<block_content pos:start="18:9" pos:end="23:17">
        <comment type="block" pos:start="17:9" pos:end="17:43">/* special case for last picture */</comment>
        <if_stmt pos:start="18:9" pos:end="22:9"><if pos:start="18:9" pos:end="22:9">if <condition pos:start="18:12" pos:end="18:51">(<expr pos:start="18:13" pos:end="18:50"><name pos:start="18:13" pos:end="18:24"><name pos:start="18:13" pos:end="18:13">s</name><operator pos:start="18:14" pos:end="18:15">-&gt;</operator><name pos:start="18:16" pos:end="18:24">low_delay</name></name><operator pos:start="18:25" pos:end="18:26">==</operator><literal type="number" pos:start="18:27" pos:end="18:27">0</literal> <operator pos:start="18:29" pos:end="18:30">&amp;&amp;</operator> <name pos:start="18:32" pos:end="18:50"><name pos:start="18:32" pos:end="18:32">s</name><operator pos:start="18:33" pos:end="18:34">-&gt;</operator><name pos:start="18:35" pos:end="18:50">next_picture_ptr</name></name></expr>)</condition> <block pos:start="18:53" pos:end="22:9">{<block_content pos:start="19:13" pos:end="21:33">
            <expr_stmt pos:start="19:13" pos:end="19:43"><expr pos:start="19:13" pos:end="19:42"><operator pos:start="19:13" pos:end="19:13">*</operator><name pos:start="19:14" pos:end="19:17">pict</name> <operator pos:start="19:19" pos:end="19:19">=</operator> <name pos:start="19:21" pos:end="19:42"><name pos:start="19:21" pos:end="19:21">s</name><operator pos:start="19:22" pos:end="19:23">-&gt;</operator><name pos:start="19:24" pos:end="19:39">next_picture_ptr</name><operator pos:start="19:40" pos:end="19:41">-&gt;</operator><name pos:start="19:42" pos:end="19:42">f</name></name></expr>;</expr_stmt>
            <expr_stmt pos:start="20:13" pos:end="20:39"><expr pos:start="20:13" pos:end="20:38"><name pos:start="20:13" pos:end="20:31"><name pos:start="20:13" pos:end="20:13">s</name><operator pos:start="20:14" pos:end="20:15">-&gt;</operator><name pos:start="20:16" pos:end="20:31">next_picture_ptr</name></name> <operator pos:start="20:33" pos:end="20:33">=</operator> <name pos:start="20:35" pos:end="20:38">NULL</name></expr>;</expr_stmt>
            <expr_stmt pos:start="21:13" pos:end="21:33"><expr pos:start="21:13" pos:end="21:32"><operator pos:start="21:13" pos:end="21:13">*</operator><name pos:start="21:14" pos:end="21:28">got_picture_ptr</name> <operator pos:start="21:30" pos:end="21:30">=</operator> <literal type="number" pos:start="21:32" pos:end="21:32">1</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <return pos:start="23:9" pos:end="23:17">return <expr pos:start="23:16" pos:end="23:16"><literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="25:5" pos:end="31:41"><if pos:start="25:5" pos:end="30:5">if<condition pos:start="25:7" pos:end="25:27">(<expr pos:start="25:8" pos:end="25:26"><operator pos:start="25:8" pos:end="25:8">!</operator><name pos:start="25:9" pos:end="25:26"><name pos:start="25:9" pos:end="25:13">avctx</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:26">slice_count</name></name></expr>)</condition><block pos:start="25:28" pos:end="30:5">{<block_content pos:start="26:9" pos:end="29:40">
        <expr_stmt pos:start="26:9" pos:end="26:35"><expr pos:start="26:9" pos:end="26:34"><name pos:start="26:9" pos:end="26:19">slice_count</name> <operator pos:start="26:21" pos:end="26:21">=</operator> <operator pos:start="26:23" pos:end="26:23">(</operator><operator pos:start="26:24" pos:end="26:24">*</operator><name pos:start="26:25" pos:end="26:27">buf</name><operator pos:start="26:28" pos:end="26:29">++</operator><operator pos:start="26:30" pos:end="26:30">)</operator> <operator pos:start="26:32" pos:end="26:32">+</operator> <literal type="number" pos:start="26:34" pos:end="26:34">1</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="27:9" pos:end="27:29"><expr pos:start="27:9" pos:end="27:28"><name pos:start="27:9" pos:end="27:18">slices_hdr</name> <operator pos:start="27:20" pos:end="27:20">=</operator> <name pos:start="27:22" pos:end="27:24">buf</name> <operator pos:start="27:26" pos:end="27:26">+</operator> <literal type="number" pos:start="27:28" pos:end="27:28">4</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="28:9" pos:end="28:31"><expr pos:start="28:9" pos:end="28:30"><name pos:start="28:9" pos:end="28:11">buf</name> <operator pos:start="28:13" pos:end="28:14">+=</operator> <literal type="number" pos:start="28:16" pos:end="28:16">8</literal> <operator pos:start="28:18" pos:end="28:18">*</operator> <name pos:start="28:20" pos:end="28:30">slice_count</name></expr>;</expr_stmt>
        <expr_stmt pos:start="29:9" pos:end="29:40"><expr pos:start="29:9" pos:end="29:39"><name pos:start="29:9" pos:end="29:16">buf_size</name> <operator pos:start="29:18" pos:end="29:19">-=</operator> <literal type="number" pos:start="29:21" pos:end="29:23">1</literal> <operator pos:start="29:23" pos:end="29:23">+</operator> <literal type="number" pos:start="29:25" pos:end="29:25">8</literal> <operator pos:start="29:27" pos:end="29:27">*</operator> <name pos:start="29:29" pos:end="29:39">slice_count</name></expr>;</expr_stmt>
    </block_content>}</block></if><else pos:start="30:6" pos:end="31:41">else<block type="pseudo" pos:start="31:9" pos:end="31:41"><block_content pos:start="31:9" pos:end="31:41">
        <expr_stmt pos:start="31:9" pos:end="31:41"><expr pos:start="31:9" pos:end="31:40"><name pos:start="31:9" pos:end="31:19">slice_count</name> <operator pos:start="31:21" pos:end="31:21">=</operator> <name pos:start="31:23" pos:end="31:40"><name pos:start="31:23" pos:end="31:27">avctx</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:40">slice_count</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <comment type="line" pos:start="32:5" pos:end="32:73">//parse first slice header to check whether this frame can be decoded</comment>
    <if_stmt pos:start="33:5" pos:end="36:5"><if pos:start="33:5" pos:end="36:5">if<condition pos:start="33:7" pos:end="34:57">(<expr pos:start="33:8" pos:end="34:56"><call pos:start="33:8" pos:end="33:45"><name pos:start="33:8" pos:end="33:23">get_slice_offset</name><argument_list pos:start="33:24" pos:end="33:45">(<argument pos:start="33:25" pos:end="33:29"><expr pos:start="33:25" pos:end="33:29"><name pos:start="33:25" pos:end="33:29">avctx</name></expr></argument>, <argument pos:start="33:32" pos:end="33:41"><expr pos:start="33:32" pos:end="33:41"><name pos:start="33:32" pos:end="33:41">slices_hdr</name></expr></argument>, <argument pos:start="33:44" pos:end="33:44"><expr pos:start="33:44" pos:end="33:44"><literal type="number" pos:start="33:44" pos:end="33:44">0</literal></expr></argument>)</argument_list></call> <operator pos:start="33:47" pos:end="33:47">&lt;</operator> <literal type="number" pos:start="33:49" pos:end="33:49">0</literal> <operator pos:start="33:51" pos:end="33:52">||</operator>
       <call pos:start="34:8" pos:end="34:45"><name pos:start="34:8" pos:end="34:23">get_slice_offset</name><argument_list pos:start="34:24" pos:end="34:45">(<argument pos:start="34:25" pos:end="34:29"><expr pos:start="34:25" pos:end="34:29"><name pos:start="34:25" pos:end="34:29">avctx</name></expr></argument>, <argument pos:start="34:32" pos:end="34:41"><expr pos:start="34:32" pos:end="34:41"><name pos:start="34:32" pos:end="34:41">slices_hdr</name></expr></argument>, <argument pos:start="34:44" pos:end="34:44"><expr pos:start="34:44" pos:end="34:44"><literal type="number" pos:start="34:44" pos:end="34:44">0</literal></expr></argument>)</argument_list></call> <operator pos:start="34:47" pos:end="34:47">&gt;</operator> <name pos:start="34:49" pos:end="34:56">buf_size</name></expr>)</condition><block pos:start="34:58" pos:end="36:5">{<block_content pos:start="35:9" pos:end="35:65">
        <expr_stmt pos:start="35:9" pos:end="35:65"><expr pos:start="35:9" pos:end="35:64"><call pos:start="35:9" pos:end="35:64"><name pos:start="35:9" pos:end="35:14">av_log</name><argument_list pos:start="35:15" pos:end="35:64">(<argument pos:start="35:16" pos:end="35:20"><expr pos:start="35:16" pos:end="35:20"><name pos:start="35:16" pos:end="35:20">avctx</name></expr></argument>, <argument pos:start="35:23" pos:end="35:34"><expr pos:start="35:23" pos:end="35:34"><name pos:start="35:23" pos:end="35:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="35:37" pos:end="35:63"><expr pos:start="35:37" pos:end="35:63"><literal type="string" pos:start="35:37" pos:end="35:63">"Slice offset is invalid\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="37:5" pos:end="37:123"><expr pos:start="37:5" pos:end="37:122"><call pos:start="37:5" pos:end="37:122"><name pos:start="37:5" pos:end="37:17">init_get_bits</name><argument_list pos:start="37:18" pos:end="37:122">(<argument pos:start="37:19" pos:end="37:24"><expr pos:start="37:19" pos:end="37:24"><operator pos:start="37:19" pos:end="37:19">&amp;</operator><name pos:start="37:20" pos:end="37:24"><name pos:start="37:20" pos:end="37:20">s</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:24">gb</name></name></expr></argument>, <argument pos:start="37:27" pos:end="37:68"><expr pos:start="37:27" pos:end="37:68"><name pos:start="37:27" pos:end="37:29">buf</name><operator pos:start="37:30" pos:end="37:30">+</operator><call pos:start="37:31" pos:end="37:68"><name pos:start="37:31" pos:end="37:46">get_slice_offset</name><argument_list pos:start="37:47" pos:end="37:68">(<argument pos:start="37:48" pos:end="37:52"><expr pos:start="37:48" pos:end="37:52"><name pos:start="37:48" pos:end="37:52">avctx</name></expr></argument>, <argument pos:start="37:55" pos:end="37:64"><expr pos:start="37:55" pos:end="37:64"><name pos:start="37:55" pos:end="37:64">slices_hdr</name></expr></argument>, <argument pos:start="37:67" pos:end="37:67"><expr pos:start="37:67" pos:end="37:67"><literal type="number" pos:start="37:67" pos:end="37:67">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="37:71" pos:end="37:121"><expr pos:start="37:71" pos:end="37:121"><operator pos:start="37:71" pos:end="37:71">(</operator><name pos:start="37:72" pos:end="37:79">buf_size</name><operator pos:start="37:80" pos:end="37:80">-</operator><call pos:start="37:81" pos:end="37:118"><name pos:start="37:81" pos:end="37:96">get_slice_offset</name><argument_list pos:start="37:97" pos:end="37:118">(<argument pos:start="37:98" pos:end="37:102"><expr pos:start="37:98" pos:end="37:102"><name pos:start="37:98" pos:end="37:102">avctx</name></expr></argument>, <argument pos:start="37:105" pos:end="37:114"><expr pos:start="37:105" pos:end="37:114"><name pos:start="37:105" pos:end="37:114">slices_hdr</name></expr></argument>, <argument pos:start="37:117" pos:end="37:117"><expr pos:start="37:117" pos:end="37:117"><literal type="number" pos:start="37:117" pos:end="37:117">0</literal></expr></argument>)</argument_list></call><operator pos:start="37:119" pos:end="37:119">)</operator><operator pos:start="37:120" pos:end="37:120">*</operator><literal type="number" pos:start="37:121" pos:end="37:121">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="38:5" pos:end="40:5"><if pos:start="38:5" pos:end="40:5">if<condition pos:start="38:7" pos:end="38:63">(<expr pos:start="38:8" pos:end="38:62"><call pos:start="38:8" pos:end="38:46"><name pos:start="38:8" pos:end="38:28"><name pos:start="38:8" pos:end="38:8">r</name><operator pos:start="38:9" pos:end="38:10">-&gt;</operator><name pos:start="38:11" pos:end="38:28">parse_slice_header</name></name><argument_list pos:start="38:29" pos:end="38:46">(<argument pos:start="38:30" pos:end="38:30"><expr pos:start="38:30" pos:end="38:30"><name pos:start="38:30" pos:end="38:30">r</name></expr></argument>, <argument pos:start="38:33" pos:end="38:40"><expr pos:start="38:33" pos:end="38:40"><operator pos:start="38:33" pos:end="38:33">&amp;</operator><name pos:start="38:34" pos:end="38:40"><name pos:start="38:34" pos:end="38:34">r</name><operator pos:start="38:35" pos:end="38:36">-&gt;</operator><name pos:start="38:37" pos:end="38:37">s</name><operator pos:start="38:38" pos:end="38:38">.</operator><name pos:start="38:39" pos:end="38:40">gb</name></name></expr></argument>, <argument pos:start="38:43" pos:end="38:45"><expr pos:start="38:43" pos:end="38:45"><operator pos:start="38:43" pos:end="38:43">&amp;</operator><name pos:start="38:44" pos:end="38:45">si</name></expr></argument>)</argument_list></call> <operator pos:start="38:48" pos:end="38:48">&lt;</operator> <literal type="number" pos:start="38:50" pos:end="38:50">0</literal> <operator pos:start="38:52" pos:end="38:53">||</operator> <name pos:start="38:55" pos:end="38:62"><name pos:start="38:55" pos:end="38:56">si</name><operator pos:start="38:57" pos:end="38:57">.</operator><name pos:start="38:58" pos:end="38:62">start</name></name></expr>)</condition><block pos:start="38:64" pos:end="40:5">{<block_content pos:start="39:9" pos:end="39:73">
        <expr_stmt pos:start="39:9" pos:end="39:73"><expr pos:start="39:9" pos:end="39:72"><call pos:start="39:9" pos:end="39:72"><name pos:start="39:9" pos:end="39:14">av_log</name><argument_list pos:start="39:15" pos:end="39:72">(<argument pos:start="39:16" pos:end="39:20"><expr pos:start="39:16" pos:end="39:20"><name pos:start="39:16" pos:end="39:20">avctx</name></expr></argument>, <argument pos:start="39:23" pos:end="39:34"><expr pos:start="39:23" pos:end="39:34"><name pos:start="39:23" pos:end="39:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="39:37" pos:end="39:71"><expr pos:start="39:37" pos:end="39:71"><literal type="string" pos:start="39:37" pos:end="39:71">"First slice header is incorrect\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="41:5" pos:end="45:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="42:37">(<expr pos:start="41:9" pos:end="42:36"><operator pos:start="41:9" pos:end="41:9">(</operator><operator pos:start="41:10" pos:end="41:10">!</operator><name pos:start="41:11" pos:end="41:29"><name pos:start="41:11" pos:end="41:11">s</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:29">last_picture_ptr</name></name> <operator pos:start="41:31" pos:end="41:32">||</operator> <operator pos:start="41:34" pos:end="41:34">!</operator><name pos:start="41:35" pos:end="41:64"><name pos:start="41:35" pos:end="41:35">s</name><operator pos:start="41:36" pos:end="41:37">-&gt;</operator><name pos:start="41:38" pos:end="41:53">last_picture_ptr</name><operator pos:start="41:54" pos:end="41:55">-&gt;</operator><name pos:start="41:56" pos:end="41:56">f</name><operator pos:start="41:57" pos:end="41:57">.</operator><name pos:start="41:58" pos:end="41:61">data</name><index pos:start="41:62" pos:end="41:64">[<expr pos:start="41:63" pos:end="41:63"><literal type="number" pos:start="41:63" pos:end="41:63">0</literal></expr>]</index></name><operator pos:start="41:65" pos:end="41:65">)</operator> <operator pos:start="41:67" pos:end="41:68">&amp;&amp;</operator>
        <name pos:start="42:9" pos:end="42:15"><name pos:start="42:9" pos:end="42:10">si</name><operator pos:start="42:11" pos:end="42:11">.</operator><name pos:start="42:12" pos:end="42:15">type</name></name> <operator pos:start="42:17" pos:end="42:18">==</operator> <name pos:start="42:20" pos:end="42:36">AV_PICTURE_TYPE_B</name></expr>)</condition> <block pos:start="42:39" pos:end="45:5">{<block_content pos:start="43:9" pos:end="44:36">
        <expr_stmt pos:start="43:9" pos:end="44:36"><expr pos:start="43:9" pos:end="44:35"><call pos:start="43:9" pos:end="44:35"><name pos:start="43:9" pos:end="43:14">av_log</name><argument_list pos:start="43:15" pos:end="44:35">(<argument pos:start="43:16" pos:end="43:20"><expr pos:start="43:16" pos:end="43:20"><name pos:start="43:16" pos:end="43:20">avctx</name></expr></argument>, <argument pos:start="43:23" pos:end="43:34"><expr pos:start="43:23" pos:end="43:34"><name pos:start="43:23" pos:end="43:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="43:37" pos:end="44:34"><expr pos:start="43:37" pos:end="44:34"><literal type="string" pos:start="43:37" pos:end="43:77">"Invalid decoder state: B-frame without "</literal>
               <literal type="string" pos:start="44:16" pos:end="44:34">"reference data.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="46:5" pos:end="49:27"><if pos:start="46:5" pos:end="49:27">if<condition pos:start="46:7" pos:end="48:46">(   <expr pos:start="46:11" pos:end="48:45"><operator pos:start="46:11" pos:end="46:11">(</operator><name pos:start="46:12" pos:end="46:28"><name pos:start="46:12" pos:end="46:16">avctx</name><operator pos:start="46:17" pos:end="46:18">-&gt;</operator><name pos:start="46:19" pos:end="46:28">skip_frame</name></name> <operator pos:start="46:30" pos:end="46:31">&gt;=</operator> <name pos:start="46:33" pos:end="46:48">AVDISCARD_NONREF</name> <operator pos:start="46:50" pos:end="46:51">&amp;&amp;</operator> <name pos:start="46:53" pos:end="46:59"><name pos:start="46:53" pos:end="46:54">si</name><operator pos:start="46:55" pos:end="46:55">.</operator><name pos:start="46:56" pos:end="46:59">type</name></name><operator pos:start="46:60" pos:end="46:61">==</operator><name pos:start="46:62" pos:end="46:78">AV_PICTURE_TYPE_B</name><operator pos:start="46:79" pos:end="46:79">)</operator>
       <operator pos:start="47:8" pos:end="47:9">||</operator> <operator pos:start="47:11" pos:end="47:11">(</operator><name pos:start="47:12" pos:end="47:28"><name pos:start="47:12" pos:end="47:16">avctx</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:28">skip_frame</name></name> <operator pos:start="47:30" pos:end="47:31">&gt;=</operator> <name pos:start="47:33" pos:end="47:48">AVDISCARD_NONKEY</name> <operator pos:start="47:50" pos:end="47:51">&amp;&amp;</operator> <name pos:start="47:53" pos:end="47:59"><name pos:start="47:53" pos:end="47:54">si</name><operator pos:start="47:55" pos:end="47:55">.</operator><name pos:start="47:56" pos:end="47:59">type</name></name><operator pos:start="47:60" pos:end="47:61">!=</operator><name pos:start="47:62" pos:end="47:78">AV_PICTURE_TYPE_I</name><operator pos:start="47:79" pos:end="47:79">)</operator>
       <operator pos:start="48:8" pos:end="48:9">||</operator>  <name pos:start="48:12" pos:end="48:28"><name pos:start="48:12" pos:end="48:16">avctx</name><operator pos:start="48:17" pos:end="48:18">-&gt;</operator><name pos:start="48:19" pos:end="48:28">skip_frame</name></name> <operator pos:start="48:30" pos:end="48:31">&gt;=</operator> <name pos:start="48:33" pos:end="48:45">AVDISCARD_ALL</name></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:27"><block_content pos:start="49:9" pos:end="49:27">
        <return pos:start="49:9" pos:end="49:27">return <expr pos:start="49:16" pos:end="49:26"><name pos:start="49:16" pos:end="49:26"><name pos:start="49:16" pos:end="49:20">avpkt</name><operator pos:start="49:21" pos:end="49:22">-&gt;</operator><name pos:start="49:23" pos:end="49:26">size</name></name></expr>;</return></block_content></block></if></if_stmt>
    <comment type="block" pos:start="50:5" pos:end="50:21">/* first slice */</comment>
    <if_stmt pos:start="51:5" pos:end="116:5"><if pos:start="51:5" pos:end="112:5">if <condition pos:start="51:8" pos:end="51:22">(<expr pos:start="51:9" pos:end="51:21"><name pos:start="51:9" pos:end="51:16"><name pos:start="51:9" pos:end="51:10">si</name><operator pos:start="51:11" pos:end="51:11">.</operator><name pos:start="51:12" pos:end="51:16">start</name></name> <operator pos:start="51:18" pos:end="51:19">==</operator> <literal type="number" pos:start="51:21" pos:end="51:21">0</literal></expr>)</condition> <block pos:start="51:24" pos:end="112:5">{<block_content pos:start="52:9" pos:end="111:41">
        <if_stmt pos:start="52:9" pos:end="57:9"><if pos:start="52:9" pos:end="57:9">if <condition pos:start="52:12" pos:end="52:31">(<expr pos:start="52:13" pos:end="52:30"><name pos:start="52:13" pos:end="52:26"><name pos:start="52:13" pos:end="52:13">s</name><operator pos:start="52:14" pos:end="52:15">-&gt;</operator><name pos:start="52:16" pos:end="52:26">mb_num_left</name></name> <operator pos:start="52:28" pos:end="52:28">&gt;</operator> <literal type="number" pos:start="52:30" pos:end="52:30">0</literal></expr>)</condition> <block pos:start="52:33" pos:end="57:9">{<block_content pos:start="53:13" pos:end="56:32">
            <expr_stmt pos:start="53:13" pos:end="54:35"><expr pos:start="53:13" pos:end="54:34"><call pos:start="53:13" pos:end="54:34"><name pos:start="53:13" pos:end="53:18">av_log</name><argument_list pos:start="53:19" pos:end="54:34">(<argument pos:start="53:20" pos:end="53:24"><expr pos:start="53:20" pos:end="53:24"><name pos:start="53:20" pos:end="53:24">avctx</name></expr></argument>, <argument pos:start="53:27" pos:end="53:38"><expr pos:start="53:27" pos:end="53:38"><name pos:start="53:27" pos:end="53:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="53:41" pos:end="53:75"><expr pos:start="53:41" pos:end="53:75"><literal type="string" pos:start="53:41" pos:end="53:75">"New frame but still %d MB left.\n"</literal></expr></argument>,
                   <argument pos:start="54:20" pos:end="54:33"><expr pos:start="54:20" pos:end="54:33"><name pos:start="54:20" pos:end="54:33"><name pos:start="54:20" pos:end="54:20">s</name><operator pos:start="54:21" pos:end="54:22">-&gt;</operator><name pos:start="54:23" pos:end="54:33">mb_num_left</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="55:13" pos:end="55:31"><expr pos:start="55:13" pos:end="55:30"><call pos:start="55:13" pos:end="55:30"><name pos:start="55:13" pos:end="55:27">ff_er_frame_end</name><argument_list pos:start="55:28" pos:end="55:30">(<argument pos:start="55:29" pos:end="55:29"><expr pos:start="55:29" pos:end="55:29"><name pos:start="55:29" pos:end="55:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="56:13" pos:end="56:32"><expr pos:start="56:13" pos:end="56:31"><call pos:start="56:13" pos:end="56:31"><name pos:start="56:13" pos:end="56:28">ff_MPV_frame_end</name><argument_list pos:start="56:29" pos:end="56:31">(<argument pos:start="56:30" pos:end="56:30"><expr pos:start="56:30" pos:end="56:30"><name pos:start="56:30" pos:end="56:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="58:9" pos:end="69:9"><if pos:start="58:9" pos:end="69:9">if <condition pos:start="58:12" pos:end="58:59">(<expr pos:start="58:13" pos:end="58:58"><name pos:start="58:13" pos:end="58:20"><name pos:start="58:13" pos:end="58:13">s</name><operator pos:start="58:14" pos:end="58:15">-&gt;</operator><name pos:start="58:16" pos:end="58:20">width</name></name> <operator pos:start="58:22" pos:end="58:23">!=</operator> <name pos:start="58:25" pos:end="58:32"><name pos:start="58:25" pos:end="58:26">si</name><operator pos:start="58:27" pos:end="58:27">.</operator><name pos:start="58:28" pos:end="58:32">width</name></name> <operator pos:start="58:34" pos:end="58:35">||</operator> <name pos:start="58:37" pos:end="58:45"><name pos:start="58:37" pos:end="58:37">s</name><operator pos:start="58:38" pos:end="58:39">-&gt;</operator><name pos:start="58:40" pos:end="58:45">height</name></name> <operator pos:start="58:47" pos:end="58:48">!=</operator> <name pos:start="58:50" pos:end="58:58"><name pos:start="58:50" pos:end="58:51">si</name><operator pos:start="58:52" pos:end="58:52">.</operator><name pos:start="58:53" pos:end="58:58">height</name></name></expr>)</condition> <block pos:start="58:61" pos:end="69:9">{<block_content pos:start="59:13" pos:end="68:27">
            <decl_stmt pos:start="59:13" pos:end="59:20"><decl pos:start="59:13" pos:end="59:19"><type pos:start="59:13" pos:end="59:15"><name pos:start="59:13" pos:end="59:15">int</name></type> <name pos:start="59:17" pos:end="59:19">err</name></decl>;</decl_stmt>
            <expr_stmt pos:start="60:13" pos:end="61:40"><expr pos:start="60:13" pos:end="61:39"><call pos:start="60:13" pos:end="61:39"><name pos:start="60:13" pos:end="60:18">av_log</name><argument_list pos:start="60:19" pos:end="61:39">(<argument pos:start="60:20" pos:end="60:27"><expr pos:start="60:20" pos:end="60:27"><name pos:start="60:20" pos:end="60:27"><name pos:start="60:20" pos:end="60:20">s</name><operator pos:start="60:21" pos:end="60:22">-&gt;</operator><name pos:start="60:23" pos:end="60:27">avctx</name></name></expr></argument>, <argument pos:start="60:30" pos:end="60:43"><expr pos:start="60:30" pos:end="60:43"><name pos:start="60:30" pos:end="60:43">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="60:46" pos:end="60:77"><expr pos:start="60:46" pos:end="60:77"><literal type="string" pos:start="60:46" pos:end="60:77">"Changing dimensions to %dx%d\n"</literal></expr></argument>,
                   <argument pos:start="61:20" pos:end="61:27"><expr pos:start="61:20" pos:end="61:27"><name pos:start="61:20" pos:end="61:27"><name pos:start="61:20" pos:end="61:21">si</name><operator pos:start="61:22" pos:end="61:22">.</operator><name pos:start="61:23" pos:end="61:27">width</name></name></expr></argument>, <argument pos:start="61:30" pos:end="61:38"><expr pos:start="61:30" pos:end="61:38"><name pos:start="61:30" pos:end="61:38"><name pos:start="61:30" pos:end="61:31">si</name><operator pos:start="61:32" pos:end="61:32">.</operator><name pos:start="61:33" pos:end="61:38">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="62:13" pos:end="62:33"><expr pos:start="62:13" pos:end="62:32"><name pos:start="62:13" pos:end="62:20"><name pos:start="62:13" pos:end="62:13">s</name><operator pos:start="62:14" pos:end="62:15">-&gt;</operator><name pos:start="62:16" pos:end="62:20">width</name></name>  <operator pos:start="62:23" pos:end="62:23">=</operator> <name pos:start="62:25" pos:end="62:32"><name pos:start="62:25" pos:end="62:26">si</name><operator pos:start="62:27" pos:end="62:27">.</operator><name pos:start="62:28" pos:end="62:32">width</name></name></expr>;</expr_stmt>
            <expr_stmt pos:start="63:13" pos:end="63:34"><expr pos:start="63:13" pos:end="63:33"><name pos:start="63:13" pos:end="63:21"><name pos:start="63:13" pos:end="63:13">s</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:21">height</name></name> <operator pos:start="63:23" pos:end="63:23">=</operator> <name pos:start="63:25" pos:end="63:33"><name pos:start="63:25" pos:end="63:26">si</name><operator pos:start="63:27" pos:end="63:27">.</operator><name pos:start="63:28" pos:end="63:33">height</name></name></expr>;</expr_stmt>
            <expr_stmt pos:start="64:13" pos:end="64:66"><expr pos:start="64:13" pos:end="64:65"><call pos:start="64:13" pos:end="64:65"><name pos:start="64:13" pos:end="64:34">avcodec_set_dimensions</name><argument_list pos:start="64:35" pos:end="64:65">(<argument pos:start="64:36" pos:end="64:43"><expr pos:start="64:36" pos:end="64:43"><name pos:start="64:36" pos:end="64:43"><name pos:start="64:36" pos:end="64:36">s</name><operator pos:start="64:37" pos:end="64:38">-&gt;</operator><name pos:start="64:39" pos:end="64:43">avctx</name></name></expr></argument>, <argument pos:start="64:46" pos:end="64:53"><expr pos:start="64:46" pos:end="64:53"><name pos:start="64:46" pos:end="64:53"><name pos:start="64:46" pos:end="64:46">s</name><operator pos:start="64:47" pos:end="64:48">-&gt;</operator><name pos:start="64:49" pos:end="64:53">width</name></name></expr></argument>, <argument pos:start="64:56" pos:end="64:64"><expr pos:start="64:56" pos:end="64:64"><name pos:start="64:56" pos:end="64:64"><name pos:start="64:56" pos:end="64:56">s</name><operator pos:start="64:57" pos:end="64:58">-&gt;</operator><name pos:start="64:59" pos:end="64:64">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="65:13" pos:end="66:27"><if pos:start="65:13" pos:end="66:27">if <condition pos:start="65:16" pos:end="65:63">(<expr pos:start="65:17" pos:end="65:62"><operator pos:start="65:17" pos:end="65:17">(</operator><name pos:start="65:18" pos:end="65:20">err</name> <operator pos:start="65:22" pos:end="65:22">=</operator> <call pos:start="65:24" pos:end="65:57"><name pos:start="65:24" pos:end="65:54">ff_MPV_common_frame_size_change</name><argument_list pos:start="65:55" pos:end="65:57">(<argument pos:start="65:56" pos:end="65:56"><expr pos:start="65:56" pos:end="65:56"><name pos:start="65:56" pos:end="65:56">s</name></expr></argument>)</argument_list></call><operator pos:start="65:58" pos:end="65:58">)</operator> <operator pos:start="65:60" pos:end="65:60">&lt;</operator> <literal type="number" pos:start="65:62" pos:end="65:62">0</literal></expr>)</condition><block type="pseudo" pos:start="66:17" pos:end="66:27"><block_content pos:start="66:17" pos:end="66:27">
                <return pos:start="66:17" pos:end="66:27">return <expr pos:start="66:24" pos:end="66:26"><name pos:start="66:24" pos:end="66:26">err</name></expr>;</return></block_content></block></if></if_stmt>
            <if_stmt pos:start="67:13" pos:end="68:27"><if pos:start="67:13" pos:end="68:27">if <condition pos:start="67:16" pos:end="67:52">(<expr pos:start="67:17" pos:end="67:51"><operator pos:start="67:17" pos:end="67:17">(</operator><name pos:start="67:18" pos:end="67:20">err</name> <operator pos:start="67:22" pos:end="67:22">=</operator> <call pos:start="67:24" pos:end="67:46"><name pos:start="67:24" pos:end="67:43">rv34_decoder_realloc</name><argument_list pos:start="67:44" pos:end="67:46">(<argument pos:start="67:45" pos:end="67:45"><expr pos:start="67:45" pos:end="67:45"><name pos:start="67:45" pos:end="67:45">r</name></expr></argument>)</argument_list></call><operator pos:start="67:47" pos:end="67:47">)</operator> <operator pos:start="67:49" pos:end="67:49">&lt;</operator> <literal type="number" pos:start="67:51" pos:end="67:51">0</literal></expr>)</condition><block type="pseudo" pos:start="68:17" pos:end="68:27"><block_content pos:start="68:17" pos:end="68:27">
                <return pos:start="68:17" pos:end="68:27">return <expr pos:start="68:24" pos:end="68:26"><name pos:start="68:24" pos:end="68:26">err</name></expr>;</return></block_content></block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="70:9" pos:end="70:61"><expr pos:start="70:9" pos:end="70:60"><name pos:start="70:9" pos:end="70:20"><name pos:start="70:9" pos:end="70:9">s</name><operator pos:start="70:10" pos:end="70:11">-&gt;</operator><name pos:start="70:12" pos:end="70:20">pict_type</name></name> <operator pos:start="70:22" pos:end="70:22">=</operator> <ternary pos:start="70:24" pos:end="70:60"><condition pos:start="70:24" pos:end="70:32"><expr pos:start="70:24" pos:end="70:30"><name pos:start="70:24" pos:end="70:30"><name pos:start="70:24" pos:end="70:25">si</name><operator pos:start="70:26" pos:end="70:26">.</operator><name pos:start="70:27" pos:end="70:30">type</name></name></expr> ?</condition><then pos:start="70:34" pos:end="70:40"> <expr pos:start="70:34" pos:end="70:40"><name pos:start="70:34" pos:end="70:40"><name pos:start="70:34" pos:end="70:35">si</name><operator pos:start="70:36" pos:end="70:36">.</operator><name pos:start="70:37" pos:end="70:40">type</name></name></expr> </then><else pos:start="70:42" pos:end="70:60">: <expr pos:start="70:44" pos:end="70:60"><name pos:start="70:44" pos:end="70:60">AV_PICTURE_TYPE_I</name></expr></else></ternary></expr>;</expr_stmt>
        <if_stmt pos:start="71:9" pos:end="72:22"><if pos:start="71:9" pos:end="72:22">if <condition pos:start="71:12" pos:end="71:48">(<expr pos:start="71:13" pos:end="71:47"><call pos:start="71:13" pos:end="71:43"><name pos:start="71:13" pos:end="71:30">ff_MPV_frame_start</name><argument_list pos:start="71:31" pos:end="71:43">(<argument pos:start="71:32" pos:end="71:32"><expr pos:start="71:32" pos:end="71:32"><name pos:start="71:32" pos:end="71:32">s</name></expr></argument>, <argument pos:start="71:35" pos:end="71:42"><expr pos:start="71:35" pos:end="71:42"><name pos:start="71:35" pos:end="71:42"><name pos:start="71:35" pos:end="71:35">s</name><operator pos:start="71:36" pos:end="71:37">-&gt;</operator><name pos:start="71:38" pos:end="71:42">avctx</name></name></expr></argument>)</argument_list></call> <operator pos:start="71:45" pos:end="71:45">&lt;</operator> <literal type="number" pos:start="71:47" pos:end="71:47">0</literal></expr>)</condition><block type="pseudo" pos:start="72:13" pos:end="72:22"><block_content pos:start="72:13" pos:end="72:22">
            <return pos:start="72:13" pos:end="72:22">return <expr pos:start="72:20" pos:end="72:21"><operator pos:start="72:20" pos:end="72:20">-</operator><literal type="number" pos:start="72:21" pos:end="72:21">1</literal></expr>;</return></block_content></block></if></if_stmt>
        <expr_stmt pos:start="73:9" pos:end="73:29"><expr pos:start="73:9" pos:end="73:28"><call pos:start="73:9" pos:end="73:28"><name pos:start="73:9" pos:end="73:25">ff_er_frame_start</name><argument_list pos:start="73:26" pos:end="73:28">(<argument pos:start="73:27" pos:end="73:27"><expr pos:start="73:27" pos:end="73:27"><name pos:start="73:27" pos:end="73:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="74:9" pos:end="84:9"><if pos:start="74:9" pos:end="84:9">if <condition pos:start="74:12" pos:end="74:33">(<expr pos:start="74:13" pos:end="74:32"><operator pos:start="74:13" pos:end="74:13">!</operator><name pos:start="74:14" pos:end="74:32"><name pos:start="74:14" pos:end="74:14">r</name><operator pos:start="74:15" pos:end="74:16">-&gt;</operator><name pos:start="74:17" pos:end="74:32">tmp_b_block_base</name></name></expr>)</condition> <block pos:start="74:35" pos:end="84:9">{<block_content pos:start="75:13" pos:end="83:55">
            <decl_stmt pos:start="75:13" pos:end="75:18"><decl pos:start="75:13" pos:end="75:17"><type pos:start="75:13" pos:end="75:15"><name pos:start="75:13" pos:end="75:15">int</name></type> <name pos:start="75:17" pos:end="75:17">i</name></decl>;</decl_stmt>
            <expr_stmt pos:start="76:13" pos:end="76:62"><expr pos:start="76:13" pos:end="76:61"><name pos:start="76:13" pos:end="76:31"><name pos:start="76:13" pos:end="76:13">r</name><operator pos:start="76:14" pos:end="76:15">-&gt;</operator><name pos:start="76:16" pos:end="76:31">tmp_b_block_base</name></name> <operator pos:start="76:33" pos:end="76:33">=</operator> <call pos:start="76:35" pos:end="76:61"><name pos:start="76:35" pos:end="76:43">av_malloc</name><argument_list pos:start="76:44" pos:end="76:61">(<argument pos:start="76:45" pos:end="76:60"><expr pos:start="76:45" pos:end="76:60"><name pos:start="76:45" pos:end="76:55"><name pos:start="76:45" pos:end="76:45">s</name><operator pos:start="76:46" pos:end="76:47">-&gt;</operator><name pos:start="76:48" pos:end="76:55">linesize</name></name> <operator pos:start="76:57" pos:end="76:57">*</operator> <literal type="number" pos:start="76:59" pos:end="76:60">48</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <for pos:start="77:13" pos:end="79:61">for <control pos:start="77:17" pos:end="77:35">(<init pos:start="77:18" pos:end="77:23"><expr pos:start="77:18" pos:end="77:22"><name pos:start="77:18" pos:end="77:18">i</name> <operator pos:start="77:20" pos:end="77:20">=</operator> <literal type="number" pos:start="77:22" pos:end="77:22">0</literal></expr>;</init> <condition pos:start="77:25" pos:end="77:30"><expr pos:start="77:25" pos:end="77:29"><name pos:start="77:25" pos:end="77:25">i</name> <operator pos:start="77:27" pos:end="77:27">&lt;</operator> <literal type="number" pos:start="77:29" pos:end="77:29">2</literal></expr>;</condition> <incr pos:start="77:32" pos:end="77:34"><expr pos:start="77:32" pos:end="77:34"><name pos:start="77:32" pos:end="77:32">i</name><operator pos:start="77:33" pos:end="77:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="78:17" pos:end="79:61"><block_content pos:start="78:17" pos:end="79:61">
                <expr_stmt pos:start="78:17" pos:end="79:61"><expr pos:start="78:17" pos:end="79:60"><name pos:start="78:17" pos:end="78:35"><name pos:start="78:17" pos:end="78:17">r</name><operator pos:start="78:18" pos:end="78:19">-&gt;</operator><name pos:start="78:20" pos:end="78:32">tmp_b_block_y</name><index pos:start="78:33" pos:end="78:35">[<expr pos:start="78:34" pos:end="78:34"><name pos:start="78:34" pos:end="78:34">i</name></expr>]</index></name> <operator pos:start="78:37" pos:end="78:37">=</operator> <name pos:start="78:39" pos:end="78:57"><name pos:start="78:39" pos:end="78:39">r</name><operator pos:start="78:40" pos:end="78:41">-&gt;</operator><name pos:start="78:42" pos:end="78:57">tmp_b_block_base</name></name>
                                      <operator pos:start="79:39" pos:end="79:39">+</operator> <name pos:start="79:41" pos:end="79:41">i</name> <operator pos:start="79:43" pos:end="79:43">*</operator> <literal type="number" pos:start="79:45" pos:end="79:46">16</literal> <operator pos:start="79:48" pos:end="79:48">*</operator> <name pos:start="79:50" pos:end="79:60"><name pos:start="79:50" pos:end="79:50">s</name><operator pos:start="79:51" pos:end="79:52">-&gt;</operator><name pos:start="79:53" pos:end="79:60">linesize</name></name></expr>;</expr_stmt></block_content></block></for>
            <for pos:start="80:13" pos:end="83:55">for <control pos:start="80:17" pos:end="80:35">(<init pos:start="80:18" pos:end="80:23"><expr pos:start="80:18" pos:end="80:22"><name pos:start="80:18" pos:end="80:18">i</name> <operator pos:start="80:20" pos:end="80:20">=</operator> <literal type="number" pos:start="80:22" pos:end="80:22">0</literal></expr>;</init> <condition pos:start="80:25" pos:end="80:30"><expr pos:start="80:25" pos:end="80:29"><name pos:start="80:25" pos:end="80:25">i</name> <operator pos:start="80:27" pos:end="80:27">&lt;</operator> <literal type="number" pos:start="80:29" pos:end="80:29">4</literal></expr>;</condition> <incr pos:start="80:32" pos:end="80:34"><expr pos:start="80:32" pos:end="80:34"><name pos:start="80:32" pos:end="80:32">i</name><operator pos:start="80:33" pos:end="80:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="81:17" pos:end="83:55"><block_content pos:start="81:17" pos:end="83:55">
                <expr_stmt pos:start="81:17" pos:end="83:55"><expr pos:start="81:17" pos:end="83:54"><name pos:start="81:17" pos:end="81:36"><name pos:start="81:17" pos:end="81:17">r</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:33">tmp_b_block_uv</name><index pos:start="81:34" pos:end="81:36">[<expr pos:start="81:35" pos:end="81:35"><name pos:start="81:35" pos:end="81:35">i</name></expr>]</index></name> <operator pos:start="81:38" pos:end="81:38">=</operator> <name pos:start="81:40" pos:end="81:58"><name pos:start="81:40" pos:end="81:40">r</name><operator pos:start="81:41" pos:end="81:42">-&gt;</operator><name pos:start="81:43" pos:end="81:58">tmp_b_block_base</name></name> <operator pos:start="81:60" pos:end="81:60">+</operator> <literal type="number" pos:start="81:62" pos:end="81:63">32</literal> <operator pos:start="81:65" pos:end="81:65">*</operator> <name pos:start="81:67" pos:end="81:77"><name pos:start="81:67" pos:end="81:67">s</name><operator pos:start="81:68" pos:end="81:69">-&gt;</operator><name pos:start="81:70" pos:end="81:77">linesize</name></name>
                                       <operator pos:start="82:40" pos:end="82:40">+</operator> <operator pos:start="82:42" pos:end="82:42">(</operator><name pos:start="82:43" pos:end="82:43">i</name> <operator pos:start="82:45" pos:end="82:46">&gt;&gt;</operator> <literal type="number" pos:start="82:48" pos:end="82:48">1</literal><operator pos:start="82:49" pos:end="82:49">)</operator> <operator pos:start="82:51" pos:end="82:51">*</operator> <literal type="number" pos:start="82:53" pos:end="82:53">8</literal> <operator pos:start="82:55" pos:end="82:55">*</operator> <name pos:start="82:57" pos:end="82:69"><name pos:start="82:57" pos:end="82:57">s</name><operator pos:start="82:58" pos:end="82:59">-&gt;</operator><name pos:start="82:60" pos:end="82:69">uvlinesize</name></name>
                                       <operator pos:start="83:40" pos:end="83:40">+</operator> <operator pos:start="83:42" pos:end="83:42">(</operator><name pos:start="83:43" pos:end="83:43">i</name> <operator pos:start="83:45" pos:end="83:45">&amp;</operator>  <literal type="number" pos:start="83:48" pos:end="83:48">1</literal><operator pos:start="83:49" pos:end="83:49">)</operator> <operator pos:start="83:51" pos:end="83:51">*</operator> <literal type="number" pos:start="83:53" pos:end="83:54">16</literal></expr>;</expr_stmt></block_content></block></for>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="85:9" pos:end="85:28"><expr pos:start="85:9" pos:end="85:27"><name pos:start="85:9" pos:end="85:18"><name pos:start="85:9" pos:end="85:9">r</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:18">cur_pts</name></name> <operator pos:start="85:20" pos:end="85:20">=</operator> <name pos:start="85:22" pos:end="85:27"><name pos:start="85:22" pos:end="85:23">si</name><operator pos:start="85:24" pos:end="85:24">.</operator><name pos:start="85:25" pos:end="85:27">pts</name></name></expr>;</expr_stmt>
        <if_stmt pos:start="86:9" pos:end="109:9"><if pos:start="86:9" pos:end="89:9">if <condition pos:start="86:12" pos:end="86:46">(<expr pos:start="86:13" pos:end="86:45"><name pos:start="86:13" pos:end="86:24"><name pos:start="86:13" pos:end="86:13">s</name><operator pos:start="86:14" pos:end="86:15">-&gt;</operator><name pos:start="86:16" pos:end="86:24">pict_type</name></name> <operator pos:start="86:26" pos:end="86:27">!=</operator> <name pos:start="86:29" pos:end="86:45">AV_PICTURE_TYPE_B</name></expr>)</condition> <block pos:start="86:48" pos:end="89:9">{<block_content pos:start="87:13" pos:end="88:37">
            <expr_stmt pos:start="87:13" pos:end="87:38"><expr pos:start="87:13" pos:end="87:37"><name pos:start="87:13" pos:end="87:23"><name pos:start="87:13" pos:end="87:13">r</name><operator pos:start="87:14" pos:end="87:15">-&gt;</operator><name pos:start="87:16" pos:end="87:23">last_pts</name></name> <operator pos:start="87:25" pos:end="87:25">=</operator> <name pos:start="87:27" pos:end="87:37"><name pos:start="87:27" pos:end="87:27">r</name><operator pos:start="87:28" pos:end="87:29">-&gt;</operator><name pos:start="87:30" pos:end="87:37">next_pts</name></name></expr>;</expr_stmt>
            <expr_stmt pos:start="88:13" pos:end="88:37"><expr pos:start="88:13" pos:end="88:36"><name pos:start="88:13" pos:end="88:23"><name pos:start="88:13" pos:end="88:13">r</name><operator pos:start="88:14" pos:end="88:15">-&gt;</operator><name pos:start="88:16" pos:end="88:23">next_pts</name></name> <operator pos:start="88:25" pos:end="88:25">=</operator> <name pos:start="88:27" pos:end="88:36"><name pos:start="88:27" pos:end="88:27">r</name><operator pos:start="88:28" pos:end="88:29">-&gt;</operator><name pos:start="88:30" pos:end="88:36">cur_pts</name></name></expr>;</expr_stmt>
        </block_content>}</block></if> <else pos:start="89:11" pos:end="109:9">else <block pos:start="89:16" pos:end="109:9">{<block_content pos:start="90:13" pos:end="108:13">
            <decl_stmt pos:start="90:13" pos:end="90:65"><decl pos:start="90:13" pos:end="90:64"><type pos:start="90:13" pos:end="90:15"><name pos:start="90:13" pos:end="90:15">int</name></type> <name pos:start="90:17" pos:end="90:23">refdist</name> <init pos:start="90:25" pos:end="90:64">= <expr pos:start="90:27" pos:end="90:64"><call pos:start="90:27" pos:end="90:64"><name pos:start="90:27" pos:end="90:38">GET_PTS_DIFF</name><argument_list pos:start="90:39" pos:end="90:64">(<argument pos:start="90:40" pos:end="90:50"><expr pos:start="90:40" pos:end="90:50"><name pos:start="90:40" pos:end="90:50"><name pos:start="90:40" pos:end="90:40">r</name><operator pos:start="90:41" pos:end="90:42">-&gt;</operator><name pos:start="90:43" pos:end="90:50">next_pts</name></name></expr></argument>, <argument pos:start="90:53" pos:end="90:63"><expr pos:start="90:53" pos:end="90:63"><name pos:start="90:53" pos:end="90:63"><name pos:start="90:53" pos:end="90:53">r</name><operator pos:start="90:54" pos:end="90:55">-&gt;</operator><name pos:start="90:56" pos:end="90:63">last_pts</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt pos:start="91:13" pos:end="91:65"><decl pos:start="91:13" pos:end="91:64"><type pos:start="91:13" pos:end="91:15"><name pos:start="91:13" pos:end="91:15">int</name></type> <name pos:start="91:17" pos:end="91:21">dist0</name>   <init pos:start="91:25" pos:end="91:64">= <expr pos:start="91:27" pos:end="91:64"><call pos:start="91:27" pos:end="91:64"><name pos:start="91:27" pos:end="91:38">GET_PTS_DIFF</name><argument_list pos:start="91:39" pos:end="91:64">(<argument pos:start="91:40" pos:end="91:49"><expr pos:start="91:40" pos:end="91:49"><name pos:start="91:40" pos:end="91:49"><name pos:start="91:40" pos:end="91:40">r</name><operator pos:start="91:41" pos:end="91:42">-&gt;</operator><name pos:start="91:43" pos:end="91:49">cur_pts</name></name></expr></argument>,  <argument pos:start="91:53" pos:end="91:63"><expr pos:start="91:53" pos:end="91:63"><name pos:start="91:53" pos:end="91:63"><name pos:start="91:53" pos:end="91:53">r</name><operator pos:start="91:54" pos:end="91:55">-&gt;</operator><name pos:start="91:56" pos:end="91:63">last_pts</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt pos:start="92:13" pos:end="92:64"><decl pos:start="92:13" pos:end="92:63"><type pos:start="92:13" pos:end="92:15"><name pos:start="92:13" pos:end="92:15">int</name></type> <name pos:start="92:17" pos:end="92:21">dist1</name>   <init pos:start="92:25" pos:end="92:63">= <expr pos:start="92:27" pos:end="92:63"><call pos:start="92:27" pos:end="92:63"><name pos:start="92:27" pos:end="92:38">GET_PTS_DIFF</name><argument_list pos:start="92:39" pos:end="92:63">(<argument pos:start="92:40" pos:end="92:50"><expr pos:start="92:40" pos:end="92:50"><name pos:start="92:40" pos:end="92:50"><name pos:start="92:40" pos:end="92:40">r</name><operator pos:start="92:41" pos:end="92:42">-&gt;</operator><name pos:start="92:43" pos:end="92:50">next_pts</name></name></expr></argument>, <argument pos:start="92:53" pos:end="92:62"><expr pos:start="92:53" pos:end="92:62"><name pos:start="92:53" pos:end="92:62"><name pos:start="92:53" pos:end="92:53">r</name><operator pos:start="92:54" pos:end="92:55">-&gt;</operator><name pos:start="92:56" pos:end="92:62">cur_pts</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="93:13" pos:end="108:13"><if pos:start="93:13" pos:end="96:13">if<condition pos:start="93:15" pos:end="93:24">(<expr pos:start="93:16" pos:end="93:23"><operator pos:start="93:16" pos:end="93:16">!</operator><name pos:start="93:17" pos:end="93:23">refdist</name></expr>)</condition><block pos:start="93:25" pos:end="96:13">{<block_content pos:start="94:17" pos:end="95:37">
                <expr_stmt pos:start="94:17" pos:end="94:79"><expr pos:start="94:17" pos:end="94:78"><name pos:start="94:17" pos:end="94:29"><name pos:start="94:17" pos:end="94:17">r</name><operator pos:start="94:18" pos:end="94:19">-&gt;</operator><name pos:start="94:20" pos:end="94:29">mv_weight1</name></name> <operator pos:start="94:31" pos:end="94:31">=</operator> <name pos:start="94:33" pos:end="94:45"><name pos:start="94:33" pos:end="94:33">r</name><operator pos:start="94:34" pos:end="94:35">-&gt;</operator><name pos:start="94:36" pos:end="94:45">mv_weight2</name></name> <operator pos:start="94:47" pos:end="94:47">=</operator> <name pos:start="94:49" pos:end="94:58"><name pos:start="94:49" pos:end="94:49">r</name><operator pos:start="94:50" pos:end="94:51">-&gt;</operator><name pos:start="94:52" pos:end="94:58">weight1</name></name> <operator pos:start="94:60" pos:end="94:60">=</operator> <name pos:start="94:62" pos:end="94:71"><name pos:start="94:62" pos:end="94:62">r</name><operator pos:start="94:63" pos:end="94:64">-&gt;</operator><name pos:start="94:65" pos:end="94:71">weight2</name></name> <operator pos:start="94:73" pos:end="94:73">=</operator> <literal type="number" pos:start="94:75" pos:end="94:78">8192</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="95:17" pos:end="95:37"><expr pos:start="95:17" pos:end="95:36"><name pos:start="95:17" pos:end="95:32"><name pos:start="95:17" pos:end="95:17">r</name><operator pos:start="95:18" pos:end="95:19">-&gt;</operator><name pos:start="95:20" pos:end="95:32">scaled_weight</name></name> <operator pos:start="95:34" pos:end="95:34">=</operator> <literal type="number" pos:start="95:36" pos:end="95:36">0</literal></expr>;</expr_stmt>
            </block_content>}</block></if><else pos:start="96:14" pos:end="108:13">else<block pos:start="96:18" pos:end="108:13">{<block_content pos:start="97:17" pos:end="107:17">
                <expr_stmt pos:start="97:17" pos:end="97:56"><expr pos:start="97:17" pos:end="97:55"><name pos:start="97:17" pos:end="97:29"><name pos:start="97:17" pos:end="97:17">r</name><operator pos:start="97:18" pos:end="97:19">-&gt;</operator><name pos:start="97:20" pos:end="97:29">mv_weight1</name></name> <operator pos:start="97:31" pos:end="97:31">=</operator> <operator pos:start="97:33" pos:end="97:33">(</operator><name pos:start="97:34" pos:end="97:38">dist0</name> <operator pos:start="97:40" pos:end="97:41">&lt;&lt;</operator> <literal type="number" pos:start="97:43" pos:end="97:44">14</literal><operator pos:start="97:45" pos:end="97:45">)</operator> <operator pos:start="97:47" pos:end="97:47">/</operator> <name pos:start="97:49" pos:end="97:55">refdist</name></expr>;</expr_stmt>
                <expr_stmt pos:start="98:17" pos:end="98:56"><expr pos:start="98:17" pos:end="98:55"><name pos:start="98:17" pos:end="98:29"><name pos:start="98:17" pos:end="98:17">r</name><operator pos:start="98:18" pos:end="98:19">-&gt;</operator><name pos:start="98:20" pos:end="98:29">mv_weight2</name></name> <operator pos:start="98:31" pos:end="98:31">=</operator> <operator pos:start="98:33" pos:end="98:33">(</operator><name pos:start="98:34" pos:end="98:38">dist1</name> <operator pos:start="98:40" pos:end="98:41">&lt;&lt;</operator> <literal type="number" pos:start="98:43" pos:end="98:44">14</literal><operator pos:start="98:45" pos:end="98:45">)</operator> <operator pos:start="98:47" pos:end="98:47">/</operator> <name pos:start="98:49" pos:end="98:55">refdist</name></expr>;</expr_stmt>
                <if_stmt pos:start="99:17" pos:end="107:17"><if pos:start="99:17" pos:end="103:17">if<condition pos:start="99:19" pos:end="99:55">(<expr pos:start="99:20" pos:end="99:54"><operator pos:start="99:20" pos:end="99:20">(</operator><name pos:start="99:21" pos:end="99:33"><name pos:start="99:21" pos:end="99:21">r</name><operator pos:start="99:22" pos:end="99:23">-&gt;</operator><name pos:start="99:24" pos:end="99:33">mv_weight1</name></name><operator pos:start="99:34" pos:end="99:34">|</operator><name pos:start="99:35" pos:end="99:47"><name pos:start="99:35" pos:end="99:35">r</name><operator pos:start="99:36" pos:end="99:37">-&gt;</operator><name pos:start="99:38" pos:end="99:47">mv_weight2</name></name><operator pos:start="99:48" pos:end="99:48">)</operator> <operator pos:start="99:50" pos:end="99:50">&amp;</operator> <literal type="number" pos:start="99:52" pos:end="99:54">511</literal></expr>)</condition><block pos:start="99:56" pos:end="103:17">{<block_content pos:start="100:21" pos:end="102:41">
                    <expr_stmt pos:start="100:21" pos:end="100:47"><expr pos:start="100:21" pos:end="100:46"><name pos:start="100:21" pos:end="100:30"><name pos:start="100:21" pos:end="100:21">r</name><operator pos:start="100:22" pos:end="100:23">-&gt;</operator><name pos:start="100:24" pos:end="100:30">weight1</name></name> <operator pos:start="100:32" pos:end="100:32">=</operator> <name pos:start="100:34" pos:end="100:46"><name pos:start="100:34" pos:end="100:34">r</name><operator pos:start="100:35" pos:end="100:36">-&gt;</operator><name pos:start="100:37" pos:end="100:46">mv_weight1</name></name></expr>;</expr_stmt>
                    <expr_stmt pos:start="101:21" pos:end="101:47"><expr pos:start="101:21" pos:end="101:46"><name pos:start="101:21" pos:end="101:30"><name pos:start="101:21" pos:end="101:21">r</name><operator pos:start="101:22" pos:end="101:23">-&gt;</operator><name pos:start="101:24" pos:end="101:30">weight2</name></name> <operator pos:start="101:32" pos:end="101:32">=</operator> <name pos:start="101:34" pos:end="101:46"><name pos:start="101:34" pos:end="101:34">r</name><operator pos:start="101:35" pos:end="101:36">-&gt;</operator><name pos:start="101:37" pos:end="101:46">mv_weight2</name></name></expr>;</expr_stmt>
                    <expr_stmt pos:start="102:21" pos:end="102:41"><expr pos:start="102:21" pos:end="102:40"><name pos:start="102:21" pos:end="102:36"><name pos:start="102:21" pos:end="102:21">r</name><operator pos:start="102:22" pos:end="102:23">-&gt;</operator><name pos:start="102:24" pos:end="102:36">scaled_weight</name></name> <operator pos:start="102:38" pos:end="102:38">=</operator> <literal type="number" pos:start="102:40" pos:end="102:40">0</literal></expr>;</expr_stmt>
                </block_content>}</block></if><else pos:start="103:18" pos:end="107:17">else<block pos:start="103:22" pos:end="107:17">{<block_content pos:start="104:21" pos:end="106:41">
                    <expr_stmt pos:start="104:21" pos:end="104:52"><expr pos:start="104:21" pos:end="104:51"><name pos:start="104:21" pos:end="104:30"><name pos:start="104:21" pos:end="104:21">r</name><operator pos:start="104:22" pos:end="104:23">-&gt;</operator><name pos:start="104:24" pos:end="104:30">weight1</name></name> <operator pos:start="104:32" pos:end="104:32">=</operator> <name pos:start="104:34" pos:end="104:46"><name pos:start="104:34" pos:end="104:34">r</name><operator pos:start="104:35" pos:end="104:36">-&gt;</operator><name pos:start="104:37" pos:end="104:46">mv_weight1</name></name> <operator pos:start="104:48" pos:end="104:49">&gt;&gt;</operator> <literal type="number" pos:start="104:51" pos:end="104:51">9</literal></expr>;</expr_stmt>
                    <expr_stmt pos:start="105:21" pos:end="105:52"><expr pos:start="105:21" pos:end="105:51"><name pos:start="105:21" pos:end="105:30"><name pos:start="105:21" pos:end="105:21">r</name><operator pos:start="105:22" pos:end="105:23">-&gt;</operator><name pos:start="105:24" pos:end="105:30">weight2</name></name> <operator pos:start="105:32" pos:end="105:32">=</operator> <name pos:start="105:34" pos:end="105:46"><name pos:start="105:34" pos:end="105:34">r</name><operator pos:start="105:35" pos:end="105:36">-&gt;</operator><name pos:start="105:37" pos:end="105:46">mv_weight2</name></name> <operator pos:start="105:48" pos:end="105:49">&gt;&gt;</operator> <literal type="number" pos:start="105:51" pos:end="105:51">9</literal></expr>;</expr_stmt>
                    <expr_stmt pos:start="106:21" pos:end="106:41"><expr pos:start="106:21" pos:end="106:40"><name pos:start="106:21" pos:end="106:36"><name pos:start="106:21" pos:end="106:21">r</name><operator pos:start="106:22" pos:end="106:23">-&gt;</operator><name pos:start="106:24" pos:end="106:36">scaled_weight</name></name> <operator pos:start="106:38" pos:end="106:38">=</operator> <literal type="number" pos:start="106:40" pos:end="106:40">1</literal></expr>;</expr_stmt>
                </block_content>}</block></else></if_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></else></if_stmt>
        <expr_stmt pos:start="110:9" pos:end="110:30"><expr pos:start="110:9" pos:end="110:29"><name pos:start="110:9" pos:end="110:15"><name pos:start="110:9" pos:end="110:9">s</name><operator pos:start="110:10" pos:end="110:11">-&gt;</operator><name pos:start="110:12" pos:end="110:15">mb_x</name></name> <operator pos:start="110:17" pos:end="110:17">=</operator> <name pos:start="110:19" pos:end="110:25"><name pos:start="110:19" pos:end="110:19">s</name><operator pos:start="110:20" pos:end="110:21">-&gt;</operator><name pos:start="110:22" pos:end="110:25">mb_y</name></name> <operator pos:start="110:27" pos:end="110:27">=</operator> <literal type="number" pos:start="110:29" pos:end="110:29">0</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="111:9" pos:end="111:41"><expr pos:start="111:9" pos:end="111:40"><call pos:start="111:9" pos:end="111:40"><name pos:start="111:9" pos:end="111:30">ff_thread_finish_setup</name><argument_list pos:start="111:31" pos:end="111:40">(<argument pos:start="111:32" pos:end="111:39"><expr pos:start="111:32" pos:end="111:39"><name pos:start="111:32" pos:end="111:39"><name pos:start="111:32" pos:end="111:32">s</name><operator pos:start="111:33" pos:end="111:34">-&gt;</operator><name pos:start="111:35" pos:end="111:39">avctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <if type="elseif" pos:start="112:7" pos:end="116:5">else if <condition pos:start="112:15" pos:end="113:64">(<expr pos:start="112:16" pos:end="113:63"><name pos:start="112:16" pos:end="112:27">HAVE_THREADS</name> <operator pos:start="112:29" pos:end="112:30">&amp;&amp;</operator>
               <operator pos:start="113:16" pos:end="113:16">(</operator><name pos:start="113:17" pos:end="113:44"><name pos:start="113:17" pos:end="113:17">s</name><operator pos:start="113:18" pos:end="113:19">-&gt;</operator><name pos:start="113:20" pos:end="113:24">avctx</name><operator pos:start="113:25" pos:end="113:26">-&gt;</operator><name pos:start="113:27" pos:end="113:44">active_thread_type</name></name> <operator pos:start="113:46" pos:end="113:46">&amp;</operator> <name pos:start="113:48" pos:end="113:62">FF_THREAD_FRAME</name><operator pos:start="113:63" pos:end="113:63">)</operator></expr>)</condition> <block pos:start="113:66" pos:end="116:5">{<block_content pos:start="114:9" pos:end="115:68">
        <expr_stmt pos:start="114:9" pos:end="115:68"><expr pos:start="114:9" pos:end="115:67"><call pos:start="114:9" pos:end="115:67"><name pos:start="114:9" pos:end="114:14">av_log</name><argument_list pos:start="114:15" pos:end="115:67">(<argument pos:start="114:16" pos:end="114:23"><expr pos:start="114:16" pos:end="114:23"><name pos:start="114:16" pos:end="114:23"><name pos:start="114:16" pos:end="114:16">s</name><operator pos:start="114:17" pos:end="114:18">-&gt;</operator><name pos:start="114:19" pos:end="114:23">avctx</name></name></expr></argument>, <argument pos:start="114:26" pos:end="114:37"><expr pos:start="114:26" pos:end="114:37"><name pos:start="114:26" pos:end="114:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="114:40" pos:end="115:56"><expr pos:start="114:40" pos:end="115:56"><literal type="string" pos:start="114:40" pos:end="114:76">"Decoder needs full frames in frame "</literal>
               <literal type="string" pos:start="115:16" pos:end="115:56">"multithreading mode (start MB is %d).\n"</literal></expr></argument>, <argument pos:start="115:59" pos:end="115:66"><expr pos:start="115:59" pos:end="115:66"><name pos:start="115:59" pos:end="115:66"><name pos:start="115:59" pos:end="115:60">si</name><operator pos:start="115:61" pos:end="115:61">.</operator><name pos:start="115:62" pos:end="115:66">start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <for pos:start="117:5" pos:end="152:5">for<control pos:start="117:8" pos:end="117:36">(<init pos:start="117:9" pos:end="117:14"><expr pos:start="117:9" pos:end="117:13"><name pos:start="117:9" pos:end="117:9">i</name> <operator pos:start="117:11" pos:end="117:11">=</operator> <literal type="number" pos:start="117:13" pos:end="117:13">0</literal></expr>;</init> <condition pos:start="117:16" pos:end="117:31"><expr pos:start="117:16" pos:end="117:30"><name pos:start="117:16" pos:end="117:16">i</name> <operator pos:start="117:18" pos:end="117:18">&lt;</operator> <name pos:start="117:20" pos:end="117:30">slice_count</name></expr>;</condition> <incr pos:start="117:33" pos:end="117:35"><expr pos:start="117:33" pos:end="117:35"><name pos:start="117:33" pos:end="117:33">i</name><operator pos:start="117:34" pos:end="117:35">++</operator></expr></incr>)</control><block pos:start="117:37" pos:end="152:5">{<block_content pos:start="118:9" pos:end="151:18">
        <decl_stmt pos:start="118:9" pos:end="118:60"><decl pos:start="118:9" pos:end="118:59"><type pos:start="118:9" pos:end="118:11"><name pos:start="118:9" pos:end="118:11">int</name></type> <name pos:start="118:13" pos:end="118:18">offset</name> <init pos:start="118:20" pos:end="118:59">= <expr pos:start="118:22" pos:end="118:59"><call pos:start="118:22" pos:end="118:59"><name pos:start="118:22" pos:end="118:37">get_slice_offset</name><argument_list pos:start="118:38" pos:end="118:59">(<argument pos:start="118:39" pos:end="118:43"><expr pos:start="118:39" pos:end="118:43"><name pos:start="118:39" pos:end="118:43">avctx</name></expr></argument>, <argument pos:start="118:46" pos:end="118:55"><expr pos:start="118:46" pos:end="118:55"><name pos:start="118:46" pos:end="118:55">slices_hdr</name></expr></argument>, <argument pos:start="118:58" pos:end="118:58"><expr pos:start="118:58" pos:end="118:58"><name pos:start="118:58" pos:end="118:58">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="119:9" pos:end="119:17"><decl pos:start="119:9" pos:end="119:16"><type pos:start="119:9" pos:end="119:11"><name pos:start="119:9" pos:end="119:11">int</name></type> <name pos:start="119:13" pos:end="119:16">size</name></decl>;</decl_stmt>
        <if_stmt pos:start="120:9" pos:end="123:69"><if pos:start="120:9" pos:end="121:37">if<condition pos:start="120:11" pos:end="120:30">(<expr pos:start="120:12" pos:end="120:29"><name pos:start="120:12" pos:end="120:12">i</name><operator pos:start="120:13" pos:end="120:13">+</operator><literal type="number" pos:start="120:14" pos:end="120:14">1</literal> <operator pos:start="120:16" pos:end="120:17">==</operator> <name pos:start="120:19" pos:end="120:29">slice_count</name></expr>)</condition><block type="pseudo" pos:start="121:13" pos:end="121:37"><block_content pos:start="121:13" pos:end="121:37">
            <expr_stmt pos:start="121:13" pos:end="121:37"><expr pos:start="121:13" pos:end="121:36"><name pos:start="121:13" pos:end="121:16">size</name> <operator pos:start="121:18" pos:end="121:18">=</operator> <name pos:start="121:20" pos:end="121:27">buf_size</name> <operator pos:start="121:29" pos:end="121:29">-</operator> <name pos:start="121:31" pos:end="121:36">offset</name></expr>;</expr_stmt></block_content></block></if>
        <else pos:start="122:9" pos:end="123:69">else<block type="pseudo" pos:start="123:13" pos:end="123:69"><block_content pos:start="123:13" pos:end="123:69">
            <expr_stmt pos:start="123:13" pos:end="123:69"><expr pos:start="123:13" pos:end="123:68"><name pos:start="123:13" pos:end="123:16">size</name> <operator pos:start="123:18" pos:end="123:18">=</operator> <call pos:start="123:20" pos:end="123:59"><name pos:start="123:20" pos:end="123:35">get_slice_offset</name><argument_list pos:start="123:36" pos:end="123:59">(<argument pos:start="123:37" pos:end="123:41"><expr pos:start="123:37" pos:end="123:41"><name pos:start="123:37" pos:end="123:41">avctx</name></expr></argument>, <argument pos:start="123:44" pos:end="123:53"><expr pos:start="123:44" pos:end="123:53"><name pos:start="123:44" pos:end="123:53">slices_hdr</name></expr></argument>, <argument pos:start="123:56" pos:end="123:58"><expr pos:start="123:56" pos:end="123:58"><name pos:start="123:56" pos:end="123:56">i</name><operator pos:start="123:57" pos:end="123:57">+</operator><literal type="number" pos:start="123:58" pos:end="123:58">1</literal></expr></argument>)</argument_list></call> <operator pos:start="123:61" pos:end="123:61">-</operator> <name pos:start="123:63" pos:end="123:68">offset</name></expr>;</expr_stmt></block_content></block></else></if_stmt>
        <if_stmt pos:start="124:9" pos:end="127:9"><if pos:start="124:9" pos:end="127:9">if<condition pos:start="124:11" pos:end="124:43">(<expr pos:start="124:12" pos:end="124:42"><name pos:start="124:12" pos:end="124:33"><name pos:start="124:12" pos:end="124:17">offset</name> <argument_list type="generic" pos:start="124:19" pos:end="124:33">&lt; <argument pos:start="124:21" pos:end="124:31"><expr pos:start="124:21" pos:end="124:31"><literal type="number" pos:start="124:21" pos:end="124:21">0</literal> <operator pos:start="124:23" pos:end="124:24">||</operator> <name pos:start="124:26" pos:end="124:31">offset</name></expr></argument> &gt;</argument_list></name> <name pos:start="124:35" pos:end="124:42">buf_size</name></expr>)</condition><block pos:start="124:44" pos:end="127:9">{<block_content pos:start="125:13" pos:end="126:18">
            <expr_stmt pos:start="125:13" pos:end="125:69"><expr pos:start="125:13" pos:end="125:68"><call pos:start="125:13" pos:end="125:68"><name pos:start="125:13" pos:end="125:18">av_log</name><argument_list pos:start="125:19" pos:end="125:68">(<argument pos:start="125:20" pos:end="125:24"><expr pos:start="125:20" pos:end="125:24"><name pos:start="125:20" pos:end="125:24">avctx</name></expr></argument>, <argument pos:start="125:27" pos:end="125:38"><expr pos:start="125:27" pos:end="125:38"><name pos:start="125:27" pos:end="125:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="125:41" pos:end="125:67"><expr pos:start="125:41" pos:end="125:67"><literal type="string" pos:start="125:41" pos:end="125:67">"Slice offset is invalid\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <break pos:start="126:13" pos:end="126:18">break;</break>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="128:9" pos:end="128:47"><expr pos:start="128:9" pos:end="128:46"><name pos:start="128:9" pos:end="128:17"><name pos:start="128:9" pos:end="128:9">r</name><operator pos:start="128:10" pos:end="128:11">-&gt;</operator><name pos:start="128:12" pos:end="128:13">si</name><operator pos:start="128:14" pos:end="128:14">.</operator><name pos:start="128:15" pos:end="128:17">end</name></name> <operator pos:start="128:19" pos:end="128:19">=</operator> <name pos:start="128:21" pos:end="128:31"><name pos:start="128:21" pos:end="128:21">s</name><operator pos:start="128:22" pos:end="128:23">-&gt;</operator><name pos:start="128:24" pos:end="128:31">mb_width</name></name> <operator pos:start="128:33" pos:end="128:33">*</operator> <name pos:start="128:35" pos:end="128:46"><name pos:start="128:35" pos:end="128:35">s</name><operator pos:start="128:36" pos:end="128:37">-&gt;</operator><name pos:start="128:38" pos:end="128:46">mb_height</name></name></expr>;</expr_stmt>
        <expr_stmt pos:start="129:9" pos:end="129:75"><expr pos:start="129:9" pos:end="129:74"><name pos:start="129:9" pos:end="129:22"><name pos:start="129:9" pos:end="129:9">s</name><operator pos:start="129:10" pos:end="129:11">-&gt;</operator><name pos:start="129:12" pos:end="129:22">mb_num_left</name></name> <operator pos:start="129:24" pos:end="129:24">=</operator> <name pos:start="129:26" pos:end="129:34"><name pos:start="129:26" pos:end="129:26">r</name><operator pos:start="129:27" pos:end="129:28">-&gt;</operator><name pos:start="129:29" pos:end="129:29">s</name><operator pos:start="129:30" pos:end="129:30">.</operator><name pos:start="129:31" pos:end="129:34">mb_x</name></name> <operator pos:start="129:36" pos:end="129:36">+</operator> <name pos:start="129:38" pos:end="129:46"><name pos:start="129:38" pos:end="129:38">r</name><operator pos:start="129:39" pos:end="129:40">-&gt;</operator><name pos:start="129:41" pos:end="129:41">s</name><operator pos:start="129:42" pos:end="129:42">.</operator><name pos:start="129:43" pos:end="129:46">mb_y</name></name><operator pos:start="129:47" pos:end="129:47">*</operator><name pos:start="129:48" pos:end="129:60"><name pos:start="129:48" pos:end="129:48">r</name><operator pos:start="129:49" pos:end="129:50">-&gt;</operator><name pos:start="129:51" pos:end="129:51">s</name><operator pos:start="129:52" pos:end="129:52">.</operator><name pos:start="129:53" pos:end="129:60">mb_width</name></name> <operator pos:start="129:62" pos:end="129:62">-</operator> <name pos:start="129:64" pos:end="129:74"><name pos:start="129:64" pos:end="129:64">r</name><operator pos:start="129:65" pos:end="129:66">-&gt;</operator><name pos:start="129:67" pos:end="129:68">si</name><operator pos:start="129:69" pos:end="129:69">.</operator><name pos:start="129:70" pos:end="129:74">start</name></name></expr>;</expr_stmt>
        <if_stmt pos:start="130:9" pos:end="144:9"><if pos:start="130:9" pos:end="144:9">if<condition pos:start="130:11" pos:end="130:29">(<expr pos:start="130:12" pos:end="130:28"><name pos:start="130:12" pos:end="130:12">i</name><operator pos:start="130:13" pos:end="130:13">+</operator><literal type="number" pos:start="130:14" pos:end="130:14">1</literal> <operator pos:start="130:16" pos:end="130:16">&lt;</operator> <name pos:start="130:18" pos:end="130:28">slice_count</name></expr>)</condition><block pos:start="130:30" pos:end="144:9">{<block_content pos:start="131:13" pos:end="143:37">
            <if_stmt pos:start="131:13" pos:end="135:13"><if pos:start="131:13" pos:end="135:13">if <condition pos:start="131:16" pos:end="132:68">(<expr pos:start="131:17" pos:end="132:67"><call pos:start="131:17" pos:end="131:56"><name pos:start="131:17" pos:end="131:32">get_slice_offset</name><argument_list pos:start="131:33" pos:end="131:56">(<argument pos:start="131:34" pos:end="131:38"><expr pos:start="131:34" pos:end="131:38"><name pos:start="131:34" pos:end="131:38">avctx</name></expr></argument>, <argument pos:start="131:41" pos:end="131:50"><expr pos:start="131:41" pos:end="131:50"><name pos:start="131:41" pos:end="131:50">slices_hdr</name></expr></argument>, <argument pos:start="131:53" pos:end="131:55"><expr pos:start="131:53" pos:end="131:55"><name pos:start="131:53" pos:end="131:53">i</name><operator pos:start="131:54" pos:end="131:54">+</operator><literal type="number" pos:start="131:55" pos:end="131:55">1</literal></expr></argument>)</argument_list></call> <operator pos:start="131:58" pos:end="131:58">&lt;</operator> <literal type="number" pos:start="131:60" pos:end="131:60">0</literal> <operator pos:start="131:62" pos:end="131:63">||</operator>
                <call pos:start="132:17" pos:end="132:56"><name pos:start="132:17" pos:end="132:32">get_slice_offset</name><argument_list pos:start="132:33" pos:end="132:56">(<argument pos:start="132:34" pos:end="132:38"><expr pos:start="132:34" pos:end="132:38"><name pos:start="132:34" pos:end="132:38">avctx</name></expr></argument>, <argument pos:start="132:41" pos:end="132:50"><expr pos:start="132:41" pos:end="132:50"><name pos:start="132:41" pos:end="132:50">slices_hdr</name></expr></argument>, <argument pos:start="132:53" pos:end="132:55"><expr pos:start="132:53" pos:end="132:55"><name pos:start="132:53" pos:end="132:53">i</name><operator pos:start="132:54" pos:end="132:54">+</operator><literal type="number" pos:start="132:55" pos:end="132:55">1</literal></expr></argument>)</argument_list></call> <operator pos:start="132:58" pos:end="132:58">&gt;</operator> <name pos:start="132:60" pos:end="132:67">buf_size</name></expr>)</condition> <block pos:start="132:70" pos:end="135:13">{<block_content pos:start="133:17" pos:end="134:22">
                <expr_stmt pos:start="133:17" pos:end="133:73"><expr pos:start="133:17" pos:end="133:72"><call pos:start="133:17" pos:end="133:72"><name pos:start="133:17" pos:end="133:22">av_log</name><argument_list pos:start="133:23" pos:end="133:72">(<argument pos:start="133:24" pos:end="133:28"><expr pos:start="133:24" pos:end="133:28"><name pos:start="133:24" pos:end="133:28">avctx</name></expr></argument>, <argument pos:start="133:31" pos:end="133:42"><expr pos:start="133:31" pos:end="133:42"><name pos:start="133:31" pos:end="133:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="133:45" pos:end="133:71"><expr pos:start="133:45" pos:end="133:71"><literal type="string" pos:start="133:45" pos:end="133:71">"Slice offset is invalid\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break pos:start="134:17" pos:end="134:22">break;</break>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="136:13" pos:end="136:135"><expr pos:start="136:13" pos:end="136:134"><call pos:start="136:13" pos:end="136:134"><name pos:start="136:13" pos:end="136:25">init_get_bits</name><argument_list pos:start="136:26" pos:end="136:134">(<argument pos:start="136:27" pos:end="136:32"><expr pos:start="136:27" pos:end="136:32"><operator pos:start="136:27" pos:end="136:27">&amp;</operator><name pos:start="136:28" pos:end="136:32"><name pos:start="136:28" pos:end="136:28">s</name><operator pos:start="136:29" pos:end="136:30">-&gt;</operator><name pos:start="136:31" pos:end="136:32">gb</name></name></expr></argument>, <argument pos:start="136:35" pos:end="136:78"><expr pos:start="136:35" pos:end="136:78"><name pos:start="136:35" pos:end="136:37">buf</name><operator pos:start="136:38" pos:end="136:38">+</operator><call pos:start="136:39" pos:end="136:78"><name pos:start="136:39" pos:end="136:54">get_slice_offset</name><argument_list pos:start="136:55" pos:end="136:78">(<argument pos:start="136:56" pos:end="136:60"><expr pos:start="136:56" pos:end="136:60"><name pos:start="136:56" pos:end="136:60">avctx</name></expr></argument>, <argument pos:start="136:63" pos:end="136:72"><expr pos:start="136:63" pos:end="136:72"><name pos:start="136:63" pos:end="136:72">slices_hdr</name></expr></argument>, <argument pos:start="136:75" pos:end="136:77"><expr pos:start="136:75" pos:end="136:77"><name pos:start="136:75" pos:end="136:75">i</name><operator pos:start="136:76" pos:end="136:76">+</operator><literal type="number" pos:start="136:77" pos:end="136:77">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="136:81" pos:end="136:133"><expr pos:start="136:81" pos:end="136:133"><operator pos:start="136:81" pos:end="136:81">(</operator><name pos:start="136:82" pos:end="136:89">buf_size</name><operator pos:start="136:90" pos:end="136:90">-</operator><call pos:start="136:91" pos:end="136:130"><name pos:start="136:91" pos:end="136:106">get_slice_offset</name><argument_list pos:start="136:107" pos:end="136:130">(<argument pos:start="136:108" pos:end="136:112"><expr pos:start="136:108" pos:end="136:112"><name pos:start="136:108" pos:end="136:112">avctx</name></expr></argument>, <argument pos:start="136:115" pos:end="136:124"><expr pos:start="136:115" pos:end="136:124"><name pos:start="136:115" pos:end="136:124">slices_hdr</name></expr></argument>, <argument pos:start="136:127" pos:end="136:129"><expr pos:start="136:127" pos:end="136:129"><name pos:start="136:127" pos:end="136:127">i</name><operator pos:start="136:128" pos:end="136:128">+</operator><literal type="number" pos:start="136:129" pos:end="136:129">1</literal></expr></argument>)</argument_list></call><operator pos:start="136:131" pos:end="136:131">)</operator><operator pos:start="136:132" pos:end="136:132">*</operator><literal type="number" pos:start="136:133" pos:end="136:133">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="137:13" pos:end="143:37"><if pos:start="137:13" pos:end="142:13">if<condition pos:start="137:15" pos:end="137:59">(<expr pos:start="137:16" pos:end="137:58"><call pos:start="137:16" pos:end="137:54"><name pos:start="137:16" pos:end="137:36"><name pos:start="137:16" pos:end="137:16">r</name><operator pos:start="137:17" pos:end="137:18">-&gt;</operator><name pos:start="137:19" pos:end="137:36">parse_slice_header</name></name><argument_list pos:start="137:37" pos:end="137:54">(<argument pos:start="137:38" pos:end="137:38"><expr pos:start="137:38" pos:end="137:38"><name pos:start="137:38" pos:end="137:38">r</name></expr></argument>, <argument pos:start="137:41" pos:end="137:48"><expr pos:start="137:41" pos:end="137:48"><operator pos:start="137:41" pos:end="137:41">&amp;</operator><name pos:start="137:42" pos:end="137:48"><name pos:start="137:42" pos:end="137:42">r</name><operator pos:start="137:43" pos:end="137:44">-&gt;</operator><name pos:start="137:45" pos:end="137:45">s</name><operator pos:start="137:46" pos:end="137:46">.</operator><name pos:start="137:47" pos:end="137:48">gb</name></name></expr></argument>, <argument pos:start="137:51" pos:end="137:53"><expr pos:start="137:51" pos:end="137:53"><operator pos:start="137:51" pos:end="137:51">&amp;</operator><name pos:start="137:52" pos:end="137:53">si</name></expr></argument>)</argument_list></call> <operator pos:start="137:56" pos:end="137:56">&lt;</operator> <literal type="number" pos:start="137:58" pos:end="137:58">0</literal></expr>)</condition><block pos:start="137:60" pos:end="142:13">{<block_content pos:start="138:17" pos:end="141:45">
                <if_stmt pos:start="138:17" pos:end="141:45"><if pos:start="138:17" pos:end="139:77">if<condition pos:start="138:19" pos:end="138:37">(<expr pos:start="138:20" pos:end="138:36"><name pos:start="138:20" pos:end="138:20">i</name><operator pos:start="138:21" pos:end="138:21">+</operator><literal type="number" pos:start="138:22" pos:end="138:22">2</literal> <operator pos:start="138:24" pos:end="138:24">&lt;</operator> <name pos:start="138:26" pos:end="138:36">slice_count</name></expr>)</condition><block type="pseudo" pos:start="139:21" pos:end="139:77"><block_content pos:start="139:21" pos:end="139:77">
                    <expr_stmt pos:start="139:21" pos:end="139:77"><expr pos:start="139:21" pos:end="139:76"><name pos:start="139:21" pos:end="139:24">size</name> <operator pos:start="139:26" pos:end="139:26">=</operator> <call pos:start="139:28" pos:end="139:67"><name pos:start="139:28" pos:end="139:43">get_slice_offset</name><argument_list pos:start="139:44" pos:end="139:67">(<argument pos:start="139:45" pos:end="139:49"><expr pos:start="139:45" pos:end="139:49"><name pos:start="139:45" pos:end="139:49">avctx</name></expr></argument>, <argument pos:start="139:52" pos:end="139:61"><expr pos:start="139:52" pos:end="139:61"><name pos:start="139:52" pos:end="139:61">slices_hdr</name></expr></argument>, <argument pos:start="139:64" pos:end="139:66"><expr pos:start="139:64" pos:end="139:66"><name pos:start="139:64" pos:end="139:64">i</name><operator pos:start="139:65" pos:end="139:65">+</operator><literal type="number" pos:start="139:66" pos:end="139:66">2</literal></expr></argument>)</argument_list></call> <operator pos:start="139:69" pos:end="139:69">-</operator> <name pos:start="139:71" pos:end="139:76">offset</name></expr>;</expr_stmt></block_content></block></if>
                <else pos:start="140:17" pos:end="141:45">else<block type="pseudo" pos:start="141:21" pos:end="141:45"><block_content pos:start="141:21" pos:end="141:45">
                    <expr_stmt pos:start="141:21" pos:end="141:45"><expr pos:start="141:21" pos:end="141:44"><name pos:start="141:21" pos:end="141:24">size</name> <operator pos:start="141:26" pos:end="141:26">=</operator> <name pos:start="141:28" pos:end="141:35">buf_size</name> <operator pos:start="141:37" pos:end="141:37">-</operator> <name pos:start="141:39" pos:end="141:44">offset</name></expr>;</expr_stmt></block_content></block></else></if_stmt>
            </block_content>}</block></if><else pos:start="142:14" pos:end="143:37">else<block type="pseudo" pos:start="143:17" pos:end="143:37"><block_content pos:start="143:17" pos:end="143:37">
                <expr_stmt pos:start="143:17" pos:end="143:37"><expr pos:start="143:17" pos:end="143:36"><name pos:start="143:17" pos:end="143:25"><name pos:start="143:17" pos:end="143:17">r</name><operator pos:start="143:18" pos:end="143:19">-&gt;</operator><name pos:start="143:20" pos:end="143:21">si</name><operator pos:start="143:22" pos:end="143:22">.</operator><name pos:start="143:23" pos:end="143:25">end</name></name> <operator pos:start="143:27" pos:end="143:27">=</operator> <name pos:start="143:29" pos:end="143:36"><name pos:start="143:29" pos:end="143:30">si</name><operator pos:start="143:31" pos:end="143:31">.</operator><name pos:start="143:32" pos:end="143:36">start</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="145:9" pos:end="148:9"><if pos:start="145:9" pos:end="148:9">if <condition pos:start="145:12" pos:end="145:49">(<expr pos:start="145:13" pos:end="145:48"><name pos:start="145:13" pos:end="145:30"><name pos:start="145:13" pos:end="145:16">size</name> <argument_list type="generic" pos:start="145:18" pos:end="145:30">&lt; <argument pos:start="145:20" pos:end="145:28"><expr pos:start="145:20" pos:end="145:28"><literal type="number" pos:start="145:20" pos:end="145:20">0</literal> <operator pos:start="145:22" pos:end="145:23">||</operator> <name pos:start="145:25" pos:end="145:28">size</name></expr></argument> &gt;</argument_list></name> <name pos:start="145:32" pos:end="145:39">buf_size</name> <operator pos:start="145:41" pos:end="145:41">-</operator> <name pos:start="145:43" pos:end="145:48">offset</name></expr>)</condition> <block pos:start="145:51" pos:end="148:9">{<block_content pos:start="146:13" pos:end="147:18">
            <expr_stmt pos:start="146:13" pos:end="146:67"><expr pos:start="146:13" pos:end="146:66"><call pos:start="146:13" pos:end="146:66"><name pos:start="146:13" pos:end="146:18">av_log</name><argument_list pos:start="146:19" pos:end="146:66">(<argument pos:start="146:20" pos:end="146:24"><expr pos:start="146:20" pos:end="146:24"><name pos:start="146:20" pos:end="146:24">avctx</name></expr></argument>, <argument pos:start="146:27" pos:end="146:38"><expr pos:start="146:27" pos:end="146:38"><name pos:start="146:27" pos:end="146:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="146:41" pos:end="146:65"><expr pos:start="146:41" pos:end="146:65"><literal type="string" pos:start="146:41" pos:end="146:65">"Slice size is invalid\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <break pos:start="147:13" pos:end="147:18">break;</break>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="149:9" pos:end="149:67"><expr pos:start="149:9" pos:end="149:66"><name pos:start="149:9" pos:end="149:12">last</name> <operator pos:start="149:14" pos:end="149:14">=</operator> <call pos:start="149:16" pos:end="149:66"><name pos:start="149:16" pos:end="149:32">rv34_decode_slice</name><argument_list pos:start="149:33" pos:end="149:66">(<argument pos:start="149:34" pos:end="149:34"><expr pos:start="149:34" pos:end="149:34"><name pos:start="149:34" pos:end="149:34">r</name></expr></argument>, <argument pos:start="149:37" pos:end="149:45"><expr pos:start="149:37" pos:end="149:45"><name pos:start="149:37" pos:end="149:45"><name pos:start="149:37" pos:end="149:37">r</name><operator pos:start="149:38" pos:end="149:39">-&gt;</operator><name pos:start="149:40" pos:end="149:41">si</name><operator pos:start="149:42" pos:end="149:42">.</operator><name pos:start="149:43" pos:end="149:45">end</name></name></expr></argument>, <argument pos:start="149:48" pos:end="149:59"><expr pos:start="149:48" pos:end="149:59"><name pos:start="149:48" pos:end="149:50">buf</name> <operator pos:start="149:52" pos:end="149:52">+</operator> <name pos:start="149:54" pos:end="149:59">offset</name></expr></argument>, <argument pos:start="149:62" pos:end="149:65"><expr pos:start="149:62" pos:end="149:65"><name pos:start="149:62" pos:end="149:65">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="150:9" pos:end="151:18"><if pos:start="150:9" pos:end="151:18">if<condition pos:start="150:11" pos:end="150:16">(<expr pos:start="150:12" pos:end="150:15"><name pos:start="150:12" pos:end="150:15">last</name></expr>)</condition><block type="pseudo" pos:start="151:13" pos:end="151:18"><block_content pos:start="151:13" pos:end="151:18">
            <break pos:start="151:13" pos:end="151:18">break;</break></block_content></block></if></if_stmt>
    </block_content>}</block></for>
    <if_stmt pos:start="153:5" pos:end="168:5"><if pos:start="153:5" pos:end="168:5">if <condition pos:start="153:8" pos:end="153:31">(<expr pos:start="153:9" pos:end="153:30"><name pos:start="153:9" pos:end="153:30"><name pos:start="153:9" pos:end="153:9">s</name><operator pos:start="153:10" pos:end="153:11">-&gt;</operator><name pos:start="153:12" pos:end="153:30">current_picture_ptr</name></name></expr>)</condition> <block pos:start="153:33" pos:end="168:5">{<block_content pos:start="154:9" pos:end="167:9">
        <if_stmt pos:start="154:9" pos:end="167:9"><if pos:start="154:9" pos:end="158:9">if <condition pos:start="154:12" pos:end="154:17">(<expr pos:start="154:13" pos:end="154:16"><name pos:start="154:13" pos:end="154:16">last</name></expr>)</condition> <block pos:start="154:19" pos:end="158:9">{<block_content pos:start="155:13" pos:end="157:57">
            <if_stmt pos:start="155:13" pos:end="156:52"><if pos:start="155:13" pos:end="156:52">if<condition pos:start="155:15" pos:end="155:30">(<expr pos:start="155:16" pos:end="155:29"><name pos:start="155:16" pos:end="155:29"><name pos:start="155:16" pos:end="155:16">r</name><operator pos:start="155:17" pos:end="155:18">-&gt;</operator><name pos:start="155:19" pos:end="155:29">loop_filter</name></name></expr>)</condition><block type="pseudo" pos:start="156:17" pos:end="156:52"><block_content pos:start="156:17" pos:end="156:52">
                <expr_stmt pos:start="156:17" pos:end="156:52"><expr pos:start="156:17" pos:end="156:51"><call pos:start="156:17" pos:end="156:51"><name pos:start="156:17" pos:end="156:30"><name pos:start="156:17" pos:end="156:17">r</name><operator pos:start="156:18" pos:end="156:19">-&gt;</operator><name pos:start="156:20" pos:end="156:30">loop_filter</name></name><argument_list pos:start="156:31" pos:end="156:51">(<argument pos:start="156:32" pos:end="156:32"><expr pos:start="156:32" pos:end="156:32"><name pos:start="156:32" pos:end="156:32">r</name></expr></argument>, <argument pos:start="156:35" pos:end="156:50"><expr pos:start="156:35" pos:end="156:50"><name pos:start="156:35" pos:end="156:46"><name pos:start="156:35" pos:end="156:35">s</name><operator pos:start="156:36" pos:end="156:37">-&gt;</operator><name pos:start="156:38" pos:end="156:46">mb_height</name></name> <operator pos:start="156:48" pos:end="156:48">-</operator> <literal type="number" pos:start="156:50" pos:end="156:50">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <expr_stmt pos:start="157:13" pos:end="157:57"><expr pos:start="157:13" pos:end="157:56"><operator pos:start="157:13" pos:end="157:13">*</operator><name pos:start="157:14" pos:end="157:28">got_picture_ptr</name> <operator pos:start="157:30" pos:end="157:30">=</operator> <call pos:start="157:32" pos:end="157:56"><name pos:start="157:32" pos:end="157:43">finish_frame</name><argument_list pos:start="157:44" pos:end="157:56">(<argument pos:start="157:45" pos:end="157:49"><expr pos:start="157:45" pos:end="157:49"><name pos:start="157:45" pos:end="157:49">avctx</name></expr></argument>, <argument pos:start="157:52" pos:end="157:55"><expr pos:start="157:52" pos:end="157:55"><name pos:start="157:52" pos:end="157:55">pict</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <if type="elseif" pos:start="158:11" pos:end="167:9">else if <condition pos:start="158:19" pos:end="159:68">(<expr pos:start="158:20" pos:end="159:67"><name pos:start="158:20" pos:end="158:31">HAVE_THREADS</name> <operator pos:start="158:33" pos:end="158:34">&amp;&amp;</operator>
                   <operator pos:start="159:20" pos:end="159:20">(</operator><name pos:start="159:21" pos:end="159:48"><name pos:start="159:21" pos:end="159:21">s</name><operator pos:start="159:22" pos:end="159:23">-&gt;</operator><name pos:start="159:24" pos:end="159:28">avctx</name><operator pos:start="159:29" pos:end="159:30">-&gt;</operator><name pos:start="159:31" pos:end="159:48">active_thread_type</name></name> <operator pos:start="159:50" pos:end="159:50">&amp;</operator> <name pos:start="159:52" pos:end="159:66">FF_THREAD_FRAME</name><operator pos:start="159:67" pos:end="159:67">)</operator></expr>)</condition> <block pos:start="159:70" pos:end="167:9">{<block_content pos:start="160:13" pos:end="166:78">
            <expr_stmt pos:start="160:13" pos:end="160:79"><expr pos:start="160:13" pos:end="160:78"><call pos:start="160:13" pos:end="160:78"><name pos:start="160:13" pos:end="160:18">av_log</name><argument_list pos:start="160:19" pos:end="160:78">(<argument pos:start="160:20" pos:end="160:24"><expr pos:start="160:20" pos:end="160:24"><name pos:start="160:20" pos:end="160:24">avctx</name></expr></argument>, <argument pos:start="160:27" pos:end="160:37"><expr pos:start="160:27" pos:end="160:37"><name pos:start="160:27" pos:end="160:37">AV_LOG_INFO</name></expr></argument>, <argument pos:start="160:40" pos:end="160:77"><expr pos:start="160:40" pos:end="160:77"><literal type="string" pos:start="160:40" pos:end="160:77">"marking unfished frame as finished\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <comment type="block" pos:start="161:13" pos:end="162:38">/* always mark the current frame as finished, frame-mt supports
             * only complete frames */</comment>
            <expr_stmt pos:start="163:13" pos:end="163:31"><expr pos:start="163:13" pos:end="163:30"><call pos:start="163:13" pos:end="163:30"><name pos:start="163:13" pos:end="163:27">ff_er_frame_end</name><argument_list pos:start="163:28" pos:end="163:30">(<argument pos:start="163:29" pos:end="163:29"><expr pos:start="163:29" pos:end="163:29"><name pos:start="163:29" pos:end="163:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="164:13" pos:end="164:32"><expr pos:start="164:13" pos:end="164:31"><call pos:start="164:13" pos:end="164:31"><name pos:start="164:13" pos:end="164:28">ff_MPV_frame_end</name><argument_list pos:start="164:29" pos:end="164:31">(<argument pos:start="164:30" pos:end="164:30"><expr pos:start="164:30" pos:end="164:30"><name pos:start="164:30" pos:end="164:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="165:13" pos:end="165:31"><expr pos:start="165:13" pos:end="165:30"><name pos:start="165:13" pos:end="165:26"><name pos:start="165:13" pos:end="165:13">s</name><operator pos:start="165:14" pos:end="165:15">-&gt;</operator><name pos:start="165:16" pos:end="165:26">mb_num_left</name></name> <operator pos:start="165:28" pos:end="165:28">=</operator> <literal type="number" pos:start="165:30" pos:end="165:30">0</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="166:13" pos:end="166:78"><expr pos:start="166:13" pos:end="166:77"><call pos:start="166:13" pos:end="166:77"><name pos:start="166:13" pos:end="166:37">ff_thread_report_progress</name><argument_list pos:start="166:38" pos:end="166:77">(<argument pos:start="166:39" pos:end="166:64"><expr pos:start="166:39" pos:end="166:64"><operator pos:start="166:39" pos:end="166:39">&amp;</operator><name pos:start="166:40" pos:end="166:64"><name pos:start="166:40" pos:end="166:40">s</name><operator pos:start="166:41" pos:end="166:42">-&gt;</operator><name pos:start="166:43" pos:end="166:61">current_picture_ptr</name><operator pos:start="166:62" pos:end="166:63">-&gt;</operator><name pos:start="166:64" pos:end="166:64">f</name></name></expr></argument>, <argument pos:start="166:67" pos:end="166:73"><expr pos:start="166:67" pos:end="166:73"><name pos:start="166:67" pos:end="166:73">INT_MAX</name></expr></argument>, <argument pos:start="166:76" pos:end="166:76"><expr pos:start="166:76" pos:end="166:76"><literal type="number" pos:start="166:76" pos:end="166:76">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></if></if_stmt>
    <return pos:start="169:5" pos:end="169:23">return <expr pos:start="169:12" pos:end="169:22"><name pos:start="169:12" pos:end="169:22"><name pos:start="169:12" pos:end="169:16">avpkt</name><operator pos:start="169:17" pos:end="169:18">-&gt;</operator><name pos:start="169:19" pos:end="169:22">size</name></name></expr>;</return>
</block_content>}</block></function></unit>
