<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9287.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:18">e820_add_entry</name><parameter_list pos:start="1:19" pos:end="1:68">(<parameter pos:start="1:20" pos:end="1:35"><decl pos:start="1:20" pos:end="1:35"><type pos:start="1:20" pos:end="1:35"><name pos:start="1:20" pos:end="1:27">uint64_t</name></type> <name pos:start="1:29" pos:end="1:35">address</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:52"><decl pos:start="1:38" pos:end="1:52"><type pos:start="1:38" pos:end="1:52"><name pos:start="1:38" pos:end="1:45">uint64_t</name></type> <name pos:start="1:47" pos:end="1:52">length</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:67"><decl pos:start="1:55" pos:end="1:67"><type pos:start="1:55" pos:end="1:67"><name pos:start="1:55" pos:end="1:62">uint32_t</name></type> <name pos:start="1:64" pos:end="1:67">type</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:24">

    <decl_stmt pos:start="5:5" pos:end="5:48"><decl pos:start="5:5" pos:end="5:47"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">index</name> <init pos:start="5:15" pos:end="5:47">= <expr pos:start="5:17" pos:end="5:47"><call pos:start="5:17" pos:end="5:47"><name pos:start="5:17" pos:end="5:27">le32_to_cpu</name><argument_list pos:start="5:28" pos:end="5:47">(<argument pos:start="5:29" pos:end="5:46"><expr pos:start="5:29" pos:end="5:46"><name pos:start="5:29" pos:end="5:46"><name pos:start="5:29" pos:end="5:40">e820_reserve</name><operator pos:start="5:41" pos:end="5:41">.</operator><name pos:start="5:42" pos:end="5:46">count</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:21">e820_entry</name></name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:28">entry</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="35:5"><if pos:start="11:5" pos:end="35:5">if <condition pos:start="11:8" pos:end="11:25">(<expr pos:start="11:9" pos:end="11:24"><name pos:start="11:9" pos:end="11:12">type</name> <operator pos:start="11:14" pos:end="11:15">!=</operator> <name pos:start="11:17" pos:end="11:24">E820_RAM</name></expr>)</condition> <block pos:start="11:27" pos:end="35:5">{<block_content pos:start="15:9" pos:end="33:48">

        <comment type="block" pos:start="13:9" pos:end="13:62">/* old FW_CFG_E820_TABLE entry -- reservations only */</comment>

        <if_stmt pos:start="15:9" pos:end="19:9"><if pos:start="15:9" pos:end="19:9">if <condition pos:start="15:12" pos:end="15:37">(<expr pos:start="15:13" pos:end="15:36"><name pos:start="15:13" pos:end="15:17">index</name> <operator pos:start="15:19" pos:end="15:20">&gt;=</operator> <name pos:start="15:22" pos:end="15:36">E820_NR_ENTRIES</name></expr>)</condition> <block pos:start="15:39" pos:end="19:9">{<block_content pos:start="17:13" pos:end="17:26">

            <return pos:start="17:13" pos:end="17:26">return <expr pos:start="17:20" pos:end="17:25"><operator pos:start="17:20" pos:end="17:20">-</operator><name pos:start="17:21" pos:end="17:25">EBUSY</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:45"><expr pos:start="21:9" pos:end="21:44"><name pos:start="21:9" pos:end="21:13">entry</name> <operator pos:start="21:15" pos:end="21:15">=</operator> <operator pos:start="21:17" pos:end="21:17">&amp;</operator><name pos:start="21:18" pos:end="21:44"><name pos:start="21:18" pos:end="21:29">e820_reserve</name><operator pos:start="21:30" pos:end="21:30">.</operator><name pos:start="21:31" pos:end="21:35">entry</name><index pos:start="21:36" pos:end="21:44">[<expr pos:start="21:37" pos:end="21:43"><name pos:start="21:37" pos:end="21:41">index</name><operator pos:start="21:42" pos:end="21:43">++</operator></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="25:9" pos:end="25:46"><expr pos:start="25:9" pos:end="25:45"><name pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:13">entry</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:22">address</name></name> <operator pos:start="25:24" pos:end="25:24">=</operator> <call pos:start="25:26" pos:end="25:45"><name pos:start="25:26" pos:end="25:36">cpu_to_le64</name><argument_list pos:start="25:37" pos:end="25:45">(<argument pos:start="25:38" pos:end="25:44"><expr pos:start="25:38" pos:end="25:44"><name pos:start="25:38" pos:end="25:44">address</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:44"><expr pos:start="27:9" pos:end="27:43"><name pos:start="27:9" pos:end="27:21"><name pos:start="27:9" pos:end="27:13">entry</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:21">length</name></name> <operator pos:start="27:23" pos:end="27:23">=</operator> <call pos:start="27:25" pos:end="27:43"><name pos:start="27:25" pos:end="27:35">cpu_to_le64</name><argument_list pos:start="27:36" pos:end="27:43">(<argument pos:start="27:37" pos:end="27:42"><expr pos:start="27:37" pos:end="27:42"><name pos:start="27:37" pos:end="27:42">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:40"><expr pos:start="29:9" pos:end="29:39"><name pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:13">entry</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:19">type</name></name> <operator pos:start="29:21" pos:end="29:21">=</operator> <call pos:start="29:23" pos:end="29:39"><name pos:start="29:23" pos:end="29:33">cpu_to_le32</name><argument_list pos:start="29:34" pos:end="29:39">(<argument pos:start="29:35" pos:end="29:38"><expr pos:start="29:35" pos:end="29:38"><name pos:start="29:35" pos:end="29:38">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="33:9" pos:end="33:48"><expr pos:start="33:9" pos:end="33:47"><name pos:start="33:9" pos:end="33:26"><name pos:start="33:9" pos:end="33:20">e820_reserve</name><operator pos:start="33:21" pos:end="33:21">.</operator><name pos:start="33:22" pos:end="33:26">count</name></name> <operator pos:start="33:28" pos:end="33:28">=</operator> <call pos:start="33:30" pos:end="33:47"><name pos:start="33:30" pos:end="33:40">cpu_to_le32</name><argument_list pos:start="33:41" pos:end="33:47">(<argument pos:start="33:42" pos:end="33:46"><expr pos:start="33:42" pos:end="33:46"><name pos:start="33:42" pos:end="33:46">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="39:5" pos:end="39:48">/* new "etc/e820" file -- include ram too */</comment>

    <expr_stmt pos:start="41:5" pos:end="43:73"><expr pos:start="41:5" pos:end="43:72"><name pos:start="41:5" pos:end="41:14">e820_table</name> <operator pos:start="41:16" pos:end="41:16">=</operator> <call pos:start="41:18" pos:end="43:72"><name pos:start="41:18" pos:end="41:26">g_realloc</name><argument_list pos:start="41:27" pos:end="43:72">(<argument pos:start="41:28" pos:end="41:37"><expr pos:start="41:28" pos:end="41:37"><name pos:start="41:28" pos:end="41:37">e820_table</name></expr></argument>,

                           <argument pos:start="43:28" pos:end="43:71"><expr pos:start="43:28" pos:end="43:71"><sizeof pos:start="43:28" pos:end="43:52">sizeof<argument_list pos:start="43:34" pos:end="43:52">(<argument pos:start="43:35" pos:end="43:51"><expr pos:start="43:35" pos:end="43:51">struct <name pos:start="43:42" pos:end="43:51">e820_entry</name></expr></argument>)</argument_list></sizeof> <operator pos:start="43:54" pos:end="43:54">*</operator> <operator pos:start="43:56" pos:end="43:56">(</operator><name pos:start="43:57" pos:end="43:68">e820_entries</name><operator pos:start="43:69" pos:end="43:69">+</operator><literal type="number" pos:start="43:70" pos:end="43:70">1</literal><operator pos:start="43:71" pos:end="43:71">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:60"><expr pos:start="45:5" pos:end="45:59"><name pos:start="45:5" pos:end="45:28"><name pos:start="45:5" pos:end="45:14">e820_table</name><index pos:start="45:15" pos:end="45:28">[<expr pos:start="45:16" pos:end="45:27"><name pos:start="45:16" pos:end="45:27">e820_entries</name></expr>]</index></name><operator pos:start="45:29" pos:end="45:29">.</operator><name pos:start="45:30" pos:end="45:36">address</name> <operator pos:start="45:38" pos:end="45:38">=</operator> <call pos:start="45:40" pos:end="45:59"><name pos:start="45:40" pos:end="45:50">cpu_to_le64</name><argument_list pos:start="45:51" pos:end="45:59">(<argument pos:start="45:52" pos:end="45:58"><expr pos:start="45:52" pos:end="45:58"><name pos:start="45:52" pos:end="45:58">address</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:58"><expr pos:start="47:5" pos:end="47:57"><name pos:start="47:5" pos:end="47:28"><name pos:start="47:5" pos:end="47:14">e820_table</name><index pos:start="47:15" pos:end="47:28">[<expr pos:start="47:16" pos:end="47:27"><name pos:start="47:16" pos:end="47:27">e820_entries</name></expr>]</index></name><operator pos:start="47:29" pos:end="47:29">.</operator><name pos:start="47:30" pos:end="47:35">length</name> <operator pos:start="47:37" pos:end="47:37">=</operator> <call pos:start="47:39" pos:end="47:57"><name pos:start="47:39" pos:end="47:49">cpu_to_le64</name><argument_list pos:start="47:50" pos:end="47:57">(<argument pos:start="47:51" pos:end="47:56"><expr pos:start="47:51" pos:end="47:56"><name pos:start="47:51" pos:end="47:56">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:54"><expr pos:start="49:5" pos:end="49:53"><name pos:start="49:5" pos:end="49:28"><name pos:start="49:5" pos:end="49:14">e820_table</name><index pos:start="49:15" pos:end="49:28">[<expr pos:start="49:16" pos:end="49:27"><name pos:start="49:16" pos:end="49:27">e820_entries</name></expr>]</index></name><operator pos:start="49:29" pos:end="49:29">.</operator><name pos:start="49:30" pos:end="49:33">type</name> <operator pos:start="49:35" pos:end="49:35">=</operator> <call pos:start="49:37" pos:end="49:53"><name pos:start="49:37" pos:end="49:47">cpu_to_le32</name><argument_list pos:start="49:48" pos:end="49:53">(<argument pos:start="49:49" pos:end="49:52"><expr pos:start="49:49" pos:end="49:52"><name pos:start="49:49" pos:end="49:52">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:19"><expr pos:start="51:5" pos:end="51:18"><name pos:start="51:5" pos:end="51:16">e820_entries</name><operator pos:start="51:17" pos:end="51:18">++</operator></expr>;</expr_stmt>



    <return pos:start="55:5" pos:end="55:24">return <expr pos:start="55:12" pos:end="55:23"><name pos:start="55:12" pos:end="55:23">e820_entries</name></expr>;</return>

</block_content>}</block></function>
</unit>
