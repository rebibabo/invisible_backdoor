<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3567.c" pos:tabs="8"><function pos:start="1:1" pos:end="177:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">filter_mb_mbaff_edgev</name><parameter_list pos:start="1:34" pos:end="1:109">( <parameter pos:start="1:36" pos:end="1:49"><decl pos:start="1:36" pos:end="1:49"><type pos:start="1:36" pos:end="1:49"><name pos:start="1:36" pos:end="1:46">H264Context</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">h</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:63"><decl pos:start="1:52" pos:end="1:63"><type pos:start="1:52" pos:end="1:63"><name pos:start="1:52" pos:end="1:58">uint8_t</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">pix</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:75"><decl pos:start="1:66" pos:end="1:75"><type pos:start="1:66" pos:end="1:75"><name pos:start="1:66" pos:end="1:68">int</name></type> <name pos:start="1:70" pos:end="1:75">stride</name></decl></parameter>, <parameter pos:start="1:78" pos:end="1:90"><decl pos:start="1:78" pos:end="1:90"><type pos:start="1:78" pos:end="1:87"><name pos:start="1:78" pos:end="1:84">int16_t</name></type> <name pos:start="1:86" pos:end="1:90"><name pos:start="1:86" pos:end="1:87">bS</name><index pos:start="1:88" pos:end="1:90">[<expr pos:start="1:89" pos:end="1:89"><literal type="number" pos:start="1:89" pos:end="1:89">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="1:93" pos:end="1:99"><decl pos:start="1:93" pos:end="1:99"><type pos:start="1:93" pos:end="1:99"><name pos:start="1:93" pos:end="1:95">int</name></type> <name pos:start="1:97" pos:end="1:99">bsi</name></decl></parameter>, <parameter pos:start="1:102" pos:end="1:107"><decl pos:start="1:102" pos:end="1:107"><type pos:start="1:102" pos:end="1:107"><name pos:start="1:102" pos:end="1:104">int</name></type> <name pos:start="1:106" pos:end="1:107">qp</name></decl></parameter> )</parameter_list> <block pos:start="1:111" pos:end="177:1">{<block_content pos:start="3:5" pos:end="175:5">

    <decl_stmt pos:start="3:5" pos:end="3:10"><decl pos:start="3:5" pos:end="3:9"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:48"><decl pos:start="5:5" pos:end="5:47"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:15">index_a</name> <init pos:start="5:17" pos:end="5:47">= <expr pos:start="5:19" pos:end="5:47"><name pos:start="5:19" pos:end="5:20">qp</name> <operator pos:start="5:22" pos:end="5:22">+</operator> <name pos:start="5:24" pos:end="5:47"><name pos:start="5:24" pos:end="5:24">h</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:47">slice_alpha_c0_offset</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">alpha</name> <init pos:start="7:15" pos:end="7:41">= <expr pos:start="7:17" pos:end="7:41"><operator pos:start="7:17" pos:end="7:17">(</operator><name pos:start="7:18" pos:end="7:28">alpha_table</name><operator pos:start="7:29" pos:end="7:29">+</operator><literal type="number" pos:start="7:30" pos:end="7:31">52</literal><operator pos:start="7:32" pos:end="7:32">)</operator><index pos:start="7:33" pos:end="7:41">[<expr pos:start="7:34" pos:end="7:40"><name pos:start="7:34" pos:end="7:40">index_a</name></expr>]</index></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:59"><decl pos:start="9:5" pos:end="9:58"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">beta</name>  <init pos:start="9:15" pos:end="9:58">= <expr pos:start="9:17" pos:end="9:58"><operator pos:start="9:17" pos:end="9:17">(</operator><name pos:start="9:18" pos:end="9:27">beta_table</name><operator pos:start="9:28" pos:end="9:28">+</operator><literal type="number" pos:start="9:29" pos:end="9:30">52</literal><operator pos:start="9:31" pos:end="9:31">)</operator><index pos:start="9:32" pos:end="9:58">[<expr pos:start="9:33" pos:end="9:57"><name pos:start="9:33" pos:end="9:34">qp</name> <operator pos:start="9:36" pos:end="9:36">+</operator> <name pos:start="9:38" pos:end="9:57"><name pos:start="9:38" pos:end="9:38">h</name><operator pos:start="9:39" pos:end="9:40">-&gt;</operator><name pos:start="9:41" pos:end="9:57">slice_beta_offset</name></name></expr>]</index></expr></init></decl>;</decl_stmt>

    <for pos:start="11:5" pos:end="175:5">for<control pos:start="11:8" pos:end="11:42">( <init pos:start="11:10" pos:end="11:15"><expr pos:start="11:10" pos:end="11:14"><name pos:start="11:10" pos:end="11:10">i</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <literal type="number" pos:start="11:14" pos:end="11:14">0</literal></expr>;</init> <condition pos:start="11:17" pos:end="11:22"><expr pos:start="11:17" pos:end="11:21"><name pos:start="11:17" pos:end="11:17">i</name> <operator pos:start="11:19" pos:end="11:19">&lt;</operator> <literal type="number" pos:start="11:21" pos:end="11:21">8</literal></expr>;</condition> <incr pos:start="11:24" pos:end="11:41"><expr pos:start="11:24" pos:end="11:26"><name pos:start="11:24" pos:end="11:24">i</name><operator pos:start="11:25" pos:end="11:26">++</operator></expr><operator pos:start="11:27" pos:end="11:27">,</operator> <expr pos:start="11:29" pos:end="11:41"><name pos:start="11:29" pos:end="11:31">pix</name> <operator pos:start="11:33" pos:end="11:34">+=</operator> <name pos:start="11:36" pos:end="11:41">stride</name></expr></incr>)</control> <block pos:start="11:44" pos:end="175:5">{<block_content pos:start="13:9" pos:end="173:9">

        <decl_stmt pos:start="13:9" pos:end="13:44"><decl pos:start="13:9" pos:end="13:43"><type pos:start="13:9" pos:end="13:17"><specifier pos:start="13:9" pos:end="13:13">const</specifier> <name pos:start="13:15" pos:end="13:17">int</name></type> <name pos:start="13:19" pos:end="13:26">bS_index</name> <init pos:start="13:28" pos:end="13:43">= <expr pos:start="13:30" pos:end="13:43"><operator pos:start="13:30" pos:end="13:30">(</operator><name pos:start="13:31" pos:end="13:31">i</name> <operator pos:start="13:33" pos:end="13:34">&gt;&gt;</operator> <literal type="number" pos:start="13:36" pos:end="13:36">1</literal><operator pos:start="13:37" pos:end="13:37">)</operator> <operator pos:start="13:39" pos:end="13:39">*</operator> <name pos:start="13:41" pos:end="13:43">bsi</name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="17:9" pos:end="21:9"><if pos:start="17:9" pos:end="21:9">if<condition pos:start="17:11" pos:end="17:31">( <expr pos:start="17:13" pos:end="17:29"><name pos:start="17:13" pos:end="17:24"><name pos:start="17:13" pos:end="17:14">bS</name><index pos:start="17:15" pos:end="17:24">[<expr pos:start="17:16" pos:end="17:23"><name pos:start="17:16" pos:end="17:23">bS_index</name></expr>]</index></name> <operator pos:start="17:26" pos:end="17:27">==</operator> <literal type="number" pos:start="17:29" pos:end="17:29">0</literal></expr> )</condition> <block pos:start="17:33" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:21">

            <continue pos:start="19:13" pos:end="19:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="25:9" pos:end="173:9"><if pos:start="25:9" pos:end="87:9">if<condition pos:start="25:11" pos:end="25:30">( <expr pos:start="25:13" pos:end="25:28"><name pos:start="25:13" pos:end="25:24"><name pos:start="25:13" pos:end="25:14">bS</name><index pos:start="25:15" pos:end="25:24">[<expr pos:start="25:16" pos:end="25:23"><name pos:start="25:16" pos:end="25:23">bS_index</name></expr>]</index></name> <operator pos:start="25:26" pos:end="25:26">&lt;</operator> <literal type="number" pos:start="25:28" pos:end="25:28">4</literal></expr> )</condition> <block pos:start="25:32" pos:end="87:9">{<block_content pos:start="27:13" pos:end="85:13">

            <decl_stmt pos:start="27:13" pos:end="27:66"><decl pos:start="27:13" pos:end="27:65"><type pos:start="27:13" pos:end="27:21"><specifier pos:start="27:13" pos:end="27:17">const</specifier> <name pos:start="27:19" pos:end="27:21">int</name></type> <name pos:start="27:23" pos:end="27:25">tc0</name> <init pos:start="27:27" pos:end="27:65">= <expr pos:start="27:29" pos:end="27:65"><operator pos:start="27:29" pos:end="27:29">(</operator><name pos:start="27:30" pos:end="27:38">tc0_table</name><operator pos:start="27:39" pos:end="27:39">+</operator><literal type="number" pos:start="27:40" pos:end="27:41">52</literal><operator pos:start="27:42" pos:end="27:42">)</operator><index pos:start="27:43" pos:end="27:51">[<expr pos:start="27:44" pos:end="27:50"><name pos:start="27:44" pos:end="27:50">index_a</name></expr>]</index><index pos:start="27:52" pos:end="27:65">[<expr pos:start="27:53" pos:end="27:64"><name pos:start="27:53" pos:end="27:64"><name pos:start="27:53" pos:end="27:54">bS</name><index pos:start="27:55" pos:end="27:64">[<expr pos:start="27:56" pos:end="27:63"><name pos:start="27:56" pos:end="27:63">bS_index</name></expr>]</index></name></expr>]</index></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="29:13" pos:end="29:35"><decl pos:start="29:13" pos:end="29:34"><type pos:start="29:13" pos:end="29:21"><specifier pos:start="29:13" pos:end="29:17">const</specifier> <name pos:start="29:19" pos:end="29:21">int</name></type> <name pos:start="29:23" pos:end="29:24">p0</name> <init pos:start="29:26" pos:end="29:34">= <expr pos:start="29:28" pos:end="29:34"><name pos:start="29:28" pos:end="29:34"><name pos:start="29:28" pos:end="29:30">pix</name><index pos:start="29:31" pos:end="29:34">[<expr pos:start="29:32" pos:end="29:33"><operator pos:start="29:32" pos:end="29:32">-</operator><literal type="number" pos:start="29:33" pos:end="29:33">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="31:13" pos:end="31:35"><decl pos:start="31:13" pos:end="31:34"><type pos:start="31:13" pos:end="31:21"><specifier pos:start="31:13" pos:end="31:17">const</specifier> <name pos:start="31:19" pos:end="31:21">int</name></type> <name pos:start="31:23" pos:end="31:24">p1</name> <init pos:start="31:26" pos:end="31:34">= <expr pos:start="31:28" pos:end="31:34"><name pos:start="31:28" pos:end="31:34"><name pos:start="31:28" pos:end="31:30">pix</name><index pos:start="31:31" pos:end="31:34">[<expr pos:start="31:32" pos:end="31:33"><operator pos:start="31:32" pos:end="31:32">-</operator><literal type="number" pos:start="31:33" pos:end="31:33">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="33:13" pos:end="33:35"><decl pos:start="33:13" pos:end="33:34"><type pos:start="33:13" pos:end="33:21"><specifier pos:start="33:13" pos:end="33:17">const</specifier> <name pos:start="33:19" pos:end="33:21">int</name></type> <name pos:start="33:23" pos:end="33:24">p2</name> <init pos:start="33:26" pos:end="33:34">= <expr pos:start="33:28" pos:end="33:34"><name pos:start="33:28" pos:end="33:34"><name pos:start="33:28" pos:end="33:30">pix</name><index pos:start="33:31" pos:end="33:34">[<expr pos:start="33:32" pos:end="33:33"><operator pos:start="33:32" pos:end="33:32">-</operator><literal type="number" pos:start="33:33" pos:end="33:33">3</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="35:13" pos:end="35:34"><decl pos:start="35:13" pos:end="35:33"><type pos:start="35:13" pos:end="35:21"><specifier pos:start="35:13" pos:end="35:17">const</specifier> <name pos:start="35:19" pos:end="35:21">int</name></type> <name pos:start="35:23" pos:end="35:24">q0</name> <init pos:start="35:26" pos:end="35:33">= <expr pos:start="35:28" pos:end="35:33"><name pos:start="35:28" pos:end="35:33"><name pos:start="35:28" pos:end="35:30">pix</name><index pos:start="35:31" pos:end="35:33">[<expr pos:start="35:32" pos:end="35:32"><literal type="number" pos:start="35:32" pos:end="35:32">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="37:13" pos:end="37:34"><decl pos:start="37:13" pos:end="37:33"><type pos:start="37:13" pos:end="37:21"><specifier pos:start="37:13" pos:end="37:17">const</specifier> <name pos:start="37:19" pos:end="37:21">int</name></type> <name pos:start="37:23" pos:end="37:24">q1</name> <init pos:start="37:26" pos:end="37:33">= <expr pos:start="37:28" pos:end="37:33"><name pos:start="37:28" pos:end="37:33"><name pos:start="37:28" pos:end="37:30">pix</name><index pos:start="37:31" pos:end="37:33">[<expr pos:start="37:32" pos:end="37:32"><literal type="number" pos:start="37:32" pos:end="37:32">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="39:13" pos:end="39:34"><decl pos:start="39:13" pos:end="39:33"><type pos:start="39:13" pos:end="39:21"><specifier pos:start="39:13" pos:end="39:17">const</specifier> <name pos:start="39:19" pos:end="39:21">int</name></type> <name pos:start="39:23" pos:end="39:24">q2</name> <init pos:start="39:26" pos:end="39:33">= <expr pos:start="39:28" pos:end="39:33"><name pos:start="39:28" pos:end="39:33"><name pos:start="39:28" pos:end="39:30">pix</name><index pos:start="39:31" pos:end="39:33">[<expr pos:start="39:32" pos:end="39:32"><literal type="number" pos:start="39:32" pos:end="39:32">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="43:13" pos:end="85:13"><if pos:start="43:13" pos:end="85:13">if<condition pos:start="43:15" pos:end="47:41">( <expr pos:start="43:17" pos:end="47:39"><call pos:start="43:17" pos:end="43:32"><name pos:start="43:17" pos:end="43:21">FFABS</name><argument_list pos:start="43:22" pos:end="43:32">( <argument pos:start="43:24" pos:end="43:30"><expr pos:start="43:24" pos:end="43:30"><name pos:start="43:24" pos:end="43:25">p0</name> <operator pos:start="43:27" pos:end="43:27">-</operator> <name pos:start="43:29" pos:end="43:30">q0</name></expr></argument> )</argument_list></call> <operator pos:start="43:34" pos:end="43:34">&lt;</operator> <name pos:start="43:36" pos:end="43:40">alpha</name> <operator pos:start="43:42" pos:end="43:43">&amp;&amp;</operator>

                <call pos:start="45:17" pos:end="45:32"><name pos:start="45:17" pos:end="45:21">FFABS</name><argument_list pos:start="45:22" pos:end="45:32">( <argument pos:start="45:24" pos:end="45:30"><expr pos:start="45:24" pos:end="45:30"><name pos:start="45:24" pos:end="45:25">p1</name> <operator pos:start="45:27" pos:end="45:27">-</operator> <name pos:start="45:29" pos:end="45:30">p0</name></expr></argument> )</argument_list></call> <operator pos:start="45:34" pos:end="45:34">&lt;</operator> <name pos:start="45:36" pos:end="45:39">beta</name> <operator pos:start="45:41" pos:end="45:42">&amp;&amp;</operator>

                <call pos:start="47:17" pos:end="47:32"><name pos:start="47:17" pos:end="47:21">FFABS</name><argument_list pos:start="47:22" pos:end="47:32">( <argument pos:start="47:24" pos:end="47:30"><expr pos:start="47:24" pos:end="47:30"><name pos:start="47:24" pos:end="47:25">q1</name> <operator pos:start="47:27" pos:end="47:27">-</operator> <name pos:start="47:29" pos:end="47:30">q0</name></expr></argument> )</argument_list></call> <operator pos:start="47:34" pos:end="47:34">&lt;</operator> <name pos:start="47:36" pos:end="47:39">beta</name></expr> )</condition> <block pos:start="47:43" pos:end="85:13">{<block_content pos:start="49:17" pos:end="83:303">

                <decl_stmt pos:start="49:17" pos:end="49:29"><decl pos:start="49:17" pos:end="49:28"><type pos:start="49:17" pos:end="49:19"><name pos:start="49:17" pos:end="49:19">int</name></type> <name pos:start="49:21" pos:end="49:22">tc</name> <init pos:start="49:24" pos:end="49:28">= <expr pos:start="49:26" pos:end="49:28"><name pos:start="49:26" pos:end="49:28">tc0</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="51:17" pos:end="51:28"><decl pos:start="51:17" pos:end="51:27"><type pos:start="51:17" pos:end="51:19"><name pos:start="51:17" pos:end="51:19">int</name></type> <name pos:start="51:21" pos:end="51:27">i_delta</name></decl>;</decl_stmt>



                <if_stmt pos:start="55:17" pos:end="63:17"><if pos:start="55:17" pos:end="63:17">if<condition pos:start="55:19" pos:end="55:45">( <expr pos:start="55:21" pos:end="55:43"><call pos:start="55:21" pos:end="55:36"><name pos:start="55:21" pos:end="55:25">FFABS</name><argument_list pos:start="55:26" pos:end="55:36">( <argument pos:start="55:28" pos:end="55:34"><expr pos:start="55:28" pos:end="55:34"><name pos:start="55:28" pos:end="55:29">p2</name> <operator pos:start="55:31" pos:end="55:31">-</operator> <name pos:start="55:33" pos:end="55:34">p0</name></expr></argument> )</argument_list></call> <operator pos:start="55:38" pos:end="55:38">&lt;</operator> <name pos:start="55:40" pos:end="55:43">beta</name></expr> )</condition> <block pos:start="55:47" pos:end="63:17">{<block_content pos:start="57:21" pos:end="61:25">

                    <if_stmt pos:start="57:21" pos:end="59:110"><if pos:start="57:21" pos:end="59:110">if<condition pos:start="57:23" pos:end="57:27">(<expr pos:start="57:24" pos:end="57:26"><name pos:start="57:24" pos:end="57:26">tc0</name></expr>)</condition><block type="pseudo" pos:start="59:21" pos:end="59:110"><block_content pos:start="59:21" pos:end="59:110">

                    <expr_stmt pos:start="59:21" pos:end="59:110"><expr pos:start="59:21" pos:end="59:109"><name pos:start="59:21" pos:end="59:27"><name pos:start="59:21" pos:end="59:23">pix</name><index pos:start="59:24" pos:end="59:27">[<expr pos:start="59:25" pos:end="59:26"><operator pos:start="59:25" pos:end="59:25">-</operator><literal type="number" pos:start="59:26" pos:end="59:26">2</literal></expr>]</index></name> <operator pos:start="59:29" pos:end="59:29">=</operator> <name pos:start="59:31" pos:end="59:32">p1</name> <operator pos:start="59:34" pos:end="59:34">+</operator> <call pos:start="59:36" pos:end="59:109"><name pos:start="59:36" pos:end="59:42">av_clip</name><argument_list pos:start="59:43" pos:end="59:109">( <argument pos:start="59:45" pos:end="59:96"><expr pos:start="59:45" pos:end="59:96"><operator pos:start="59:45" pos:end="59:45">(</operator> <name pos:start="59:47" pos:end="59:48">p2</name> <operator pos:start="59:50" pos:end="59:50">+</operator> <operator pos:start="59:52" pos:end="59:52">(</operator> <operator pos:start="59:54" pos:end="59:54">(</operator> <name pos:start="59:56" pos:end="59:57">p0</name> <operator pos:start="59:59" pos:end="59:59">+</operator> <name pos:start="59:61" pos:end="59:62">q0</name> <operator pos:start="59:64" pos:end="59:64">+</operator> <literal type="number" pos:start="59:66" pos:end="59:66">1</literal> <operator pos:start="59:68" pos:end="59:68">)</operator> <operator pos:start="59:70" pos:end="59:71">&gt;&gt;</operator> <literal type="number" pos:start="59:73" pos:end="59:73">1</literal> <operator pos:start="59:75" pos:end="59:75">)</operator> <operator pos:start="59:77" pos:end="59:77">-</operator> <operator pos:start="59:79" pos:end="59:79">(</operator> <name pos:start="59:81" pos:end="59:82">p1</name> <operator pos:start="59:84" pos:end="59:85">&lt;&lt;</operator> <literal type="number" pos:start="59:87" pos:end="59:87">1</literal> <operator pos:start="59:89" pos:end="59:89">)</operator> <operator pos:start="59:91" pos:end="59:91">)</operator> <operator pos:start="59:93" pos:end="59:94">&gt;&gt;</operator> <literal type="number" pos:start="59:96" pos:end="59:96">1</literal></expr></argument>, <argument pos:start="59:99" pos:end="59:102"><expr pos:start="59:99" pos:end="59:102"><operator pos:start="59:99" pos:end="59:99">-</operator><name pos:start="59:100" pos:end="59:102">tc0</name></expr></argument>, <argument pos:start="59:105" pos:end="59:107"><expr pos:start="59:105" pos:end="59:107"><name pos:start="59:105" pos:end="59:107">tc0</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="61:21" pos:end="61:25"><expr pos:start="61:21" pos:end="61:24"><name pos:start="61:21" pos:end="61:22">tc</name><operator pos:start="61:23" pos:end="61:24">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="65:17" pos:end="73:17"><if pos:start="65:17" pos:end="73:17">if<condition pos:start="65:19" pos:end="65:45">( <expr pos:start="65:21" pos:end="65:43"><call pos:start="65:21" pos:end="65:36"><name pos:start="65:21" pos:end="65:25">FFABS</name><argument_list pos:start="65:26" pos:end="65:36">( <argument pos:start="65:28" pos:end="65:34"><expr pos:start="65:28" pos:end="65:34"><name pos:start="65:28" pos:end="65:29">q2</name> <operator pos:start="65:31" pos:end="65:31">-</operator> <name pos:start="65:33" pos:end="65:34">q0</name></expr></argument> )</argument_list></call> <operator pos:start="65:38" pos:end="65:38">&lt;</operator> <name pos:start="65:40" pos:end="65:43">beta</name></expr> )</condition> <block pos:start="65:47" pos:end="73:17">{<block_content pos:start="67:21" pos:end="71:25">

                    <if_stmt pos:start="67:21" pos:end="69:109"><if pos:start="67:21" pos:end="69:109">if<condition pos:start="67:23" pos:end="67:27">(<expr pos:start="67:24" pos:end="67:26"><name pos:start="67:24" pos:end="67:26">tc0</name></expr>)</condition><block type="pseudo" pos:start="69:21" pos:end="69:109"><block_content pos:start="69:21" pos:end="69:109">

                    <expr_stmt pos:start="69:21" pos:end="69:109"><expr pos:start="69:21" pos:end="69:108"><name pos:start="69:21" pos:end="69:26"><name pos:start="69:21" pos:end="69:23">pix</name><index pos:start="69:24" pos:end="69:26">[<expr pos:start="69:25" pos:end="69:25"><literal type="number" pos:start="69:25" pos:end="69:25">1</literal></expr>]</index></name> <operator pos:start="69:28" pos:end="69:28">=</operator> <name pos:start="69:30" pos:end="69:31">q1</name> <operator pos:start="69:33" pos:end="69:33">+</operator> <call pos:start="69:35" pos:end="69:108"><name pos:start="69:35" pos:end="69:41">av_clip</name><argument_list pos:start="69:42" pos:end="69:108">( <argument pos:start="69:44" pos:end="69:95"><expr pos:start="69:44" pos:end="69:95"><operator pos:start="69:44" pos:end="69:44">(</operator> <name pos:start="69:46" pos:end="69:47">q2</name> <operator pos:start="69:49" pos:end="69:49">+</operator> <operator pos:start="69:51" pos:end="69:51">(</operator> <operator pos:start="69:53" pos:end="69:53">(</operator> <name pos:start="69:55" pos:end="69:56">p0</name> <operator pos:start="69:58" pos:end="69:58">+</operator> <name pos:start="69:60" pos:end="69:61">q0</name> <operator pos:start="69:63" pos:end="69:63">+</operator> <literal type="number" pos:start="69:65" pos:end="69:65">1</literal> <operator pos:start="69:67" pos:end="69:67">)</operator> <operator pos:start="69:69" pos:end="69:70">&gt;&gt;</operator> <literal type="number" pos:start="69:72" pos:end="69:72">1</literal> <operator pos:start="69:74" pos:end="69:74">)</operator> <operator pos:start="69:76" pos:end="69:76">-</operator> <operator pos:start="69:78" pos:end="69:78">(</operator> <name pos:start="69:80" pos:end="69:81">q1</name> <operator pos:start="69:83" pos:end="69:84">&lt;&lt;</operator> <literal type="number" pos:start="69:86" pos:end="69:86">1</literal> <operator pos:start="69:88" pos:end="69:88">)</operator> <operator pos:start="69:90" pos:end="69:90">)</operator> <operator pos:start="69:92" pos:end="69:93">&gt;&gt;</operator> <literal type="number" pos:start="69:95" pos:end="69:95">1</literal></expr></argument>, <argument pos:start="69:98" pos:end="69:101"><expr pos:start="69:98" pos:end="69:101"><operator pos:start="69:98" pos:end="69:98">-</operator><name pos:start="69:99" pos:end="69:101">tc0</name></expr></argument>, <argument pos:start="69:104" pos:end="69:106"><expr pos:start="69:104" pos:end="69:106"><name pos:start="69:104" pos:end="69:106">tc0</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="71:21" pos:end="71:25"><expr pos:start="71:21" pos:end="71:24"><name pos:start="71:21" pos:end="71:22">tc</name><operator pos:start="71:23" pos:end="71:24">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="77:17" pos:end="77:87"><expr pos:start="77:17" pos:end="77:86"><name pos:start="77:17" pos:end="77:23">i_delta</name> <operator pos:start="77:25" pos:end="77:25">=</operator> <call pos:start="77:27" pos:end="77:86"><name pos:start="77:27" pos:end="77:33">av_clip</name><argument_list pos:start="77:34" pos:end="77:86">( <argument pos:start="77:36" pos:end="77:75"><expr pos:start="77:36" pos:end="77:75"><operator pos:start="77:36" pos:end="77:36">(</operator><operator pos:start="77:37" pos:end="77:37">(</operator><operator pos:start="77:38" pos:end="77:38">(</operator><name pos:start="77:39" pos:end="77:40">q0</name> <operator pos:start="77:42" pos:end="77:42">-</operator> <name pos:start="77:44" pos:end="77:45">p0</name> <operator pos:start="77:47" pos:end="77:47">)</operator> <operator pos:start="77:49" pos:end="77:50">&lt;&lt;</operator> <literal type="number" pos:start="77:52" pos:end="77:52">2</literal><operator pos:start="77:53" pos:end="77:53">)</operator> <operator pos:start="77:55" pos:end="77:55">+</operator> <operator pos:start="77:57" pos:end="77:57">(</operator><name pos:start="77:58" pos:end="77:59">p1</name> <operator pos:start="77:61" pos:end="77:61">-</operator> <name pos:start="77:63" pos:end="77:64">q1</name><operator pos:start="77:65" pos:end="77:65">)</operator> <operator pos:start="77:67" pos:end="77:67">+</operator> <literal type="number" pos:start="77:69" pos:end="77:69">4</literal><operator pos:start="77:70" pos:end="77:70">)</operator> <operator pos:start="77:72" pos:end="77:73">&gt;&gt;</operator> <literal type="number" pos:start="77:75" pos:end="77:75">3</literal></expr></argument>, <argument pos:start="77:78" pos:end="77:80"><expr pos:start="77:78" pos:end="77:80"><operator pos:start="77:78" pos:end="77:78">-</operator><name pos:start="77:79" pos:end="77:80">tc</name></expr></argument>, <argument pos:start="77:83" pos:end="77:84"><expr pos:start="77:83" pos:end="77:84"><name pos:start="77:83" pos:end="77:84">tc</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="79:17" pos:end="79:56"><expr pos:start="79:17" pos:end="79:55"><name pos:start="79:17" pos:end="79:23"><name pos:start="79:17" pos:end="79:19">pix</name><index pos:start="79:20" pos:end="79:23">[<expr pos:start="79:21" pos:end="79:22"><operator pos:start="79:21" pos:end="79:21">-</operator><literal type="number" pos:start="79:22" pos:end="79:22">1</literal></expr>]</index></name> <operator pos:start="79:25" pos:end="79:25">=</operator> <call pos:start="79:27" pos:end="79:55"><name pos:start="79:27" pos:end="79:39">av_clip_uint8</name><argument_list pos:start="79:40" pos:end="79:55">( <argument pos:start="79:42" pos:end="79:53"><expr pos:start="79:42" pos:end="79:53"><name pos:start="79:42" pos:end="79:43">p0</name> <operator pos:start="79:45" pos:end="79:45">+</operator> <name pos:start="79:47" pos:end="79:53">i_delta</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>    <comment type="block" pos:start="79:61" pos:end="79:69">/* p0' */</comment>

                <expr_stmt pos:start="81:17" pos:end="81:56"><expr pos:start="81:17" pos:end="81:55"><name pos:start="81:17" pos:end="81:22"><name pos:start="81:17" pos:end="81:19">pix</name><index pos:start="81:20" pos:end="81:22">[<expr pos:start="81:21" pos:end="81:21"><literal type="number" pos:start="81:21" pos:end="81:21">0</literal></expr>]</index></name>  <operator pos:start="81:25" pos:end="81:25">=</operator> <call pos:start="81:27" pos:end="81:55"><name pos:start="81:27" pos:end="81:39">av_clip_uint8</name><argument_list pos:start="81:40" pos:end="81:55">( <argument pos:start="81:42" pos:end="81:53"><expr pos:start="81:42" pos:end="81:53"><name pos:start="81:42" pos:end="81:43">q0</name> <operator pos:start="81:45" pos:end="81:45">-</operator> <name pos:start="81:47" pos:end="81:53">i_delta</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>    <comment type="block" pos:start="81:61" pos:end="81:69">/* q0' */</comment>

                <expr_stmt pos:start="83:17" pos:end="83:303"><expr pos:start="83:17" pos:end="83:302"><call pos:start="83:17" pos:end="83:302"><name pos:start="83:17" pos:end="83:23">tprintf</name><argument_list pos:start="83:24" pos:end="83:302">(<argument pos:start="83:25" pos:end="83:34"><expr pos:start="83:25" pos:end="83:34"><name pos:start="83:25" pos:end="83:34"><name pos:start="83:25" pos:end="83:25">h</name><operator pos:start="83:26" pos:end="83:27">-&gt;</operator><name pos:start="83:28" pos:end="83:28">s</name><operator pos:start="83:29" pos:end="83:29">.</operator><name pos:start="83:30" pos:end="83:34">avctx</name></name></expr></argument>, <argument pos:start="83:37" pos:end="83:186"><expr pos:start="83:37" pos:end="83:186"><literal type="string" pos:start="83:37" pos:end="83:186">"filter_mb_mbaff_edgev i:%d, qp:%d, indexA:%d, alpha:%d, beta:%d, tc:%d\n# bS:%d -&gt; [%02x, %02x, %02x, %02x, %02x, %02x] =&gt;[%02x, %02x, %02x, %02x]\n"</literal></expr></argument>, <argument pos:start="83:189" pos:end="83:189"><expr pos:start="83:189" pos:end="83:189"><name pos:start="83:189" pos:end="83:189">i</name></expr></argument>, <argument pos:start="83:192" pos:end="83:203"><expr pos:start="83:192" pos:end="83:203"><name pos:start="83:192" pos:end="83:203"><name pos:start="83:192" pos:end="83:193">qp</name><index pos:start="83:194" pos:end="83:203">[<expr pos:start="83:195" pos:end="83:202"><name pos:start="83:195" pos:end="83:202">qp_index</name></expr>]</index></name></expr></argument>, <argument pos:start="83:206" pos:end="83:212"><expr pos:start="83:206" pos:end="83:212"><name pos:start="83:206" pos:end="83:212">index_a</name></expr></argument>, <argument pos:start="83:215" pos:end="83:219"><expr pos:start="83:215" pos:end="83:219"><name pos:start="83:215" pos:end="83:219">alpha</name></expr></argument>, <argument pos:start="83:222" pos:end="83:225"><expr pos:start="83:222" pos:end="83:225"><name pos:start="83:222" pos:end="83:225">beta</name></expr></argument>, <argument pos:start="83:228" pos:end="83:229"><expr pos:start="83:228" pos:end="83:229"><name pos:start="83:228" pos:end="83:229">tc</name></expr></argument>, <argument pos:start="83:232" pos:end="83:243"><expr pos:start="83:232" pos:end="83:243"><name pos:start="83:232" pos:end="83:243"><name pos:start="83:232" pos:end="83:233">bS</name><index pos:start="83:234" pos:end="83:243">[<expr pos:start="83:235" pos:end="83:242"><name pos:start="83:235" pos:end="83:242">bS_index</name></expr>]</index></name></expr></argument>, <argument pos:start="83:246" pos:end="83:252"><expr pos:start="83:246" pos:end="83:252"><name pos:start="83:246" pos:end="83:252"><name pos:start="83:246" pos:end="83:248">pix</name><index pos:start="83:249" pos:end="83:252">[<expr pos:start="83:250" pos:end="83:251"><operator pos:start="83:250" pos:end="83:250">-</operator><literal type="number" pos:start="83:251" pos:end="83:251">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="83:255" pos:end="83:256"><expr pos:start="83:255" pos:end="83:256"><name pos:start="83:255" pos:end="83:256">p1</name></expr></argument>, <argument pos:start="83:259" pos:end="83:260"><expr pos:start="83:259" pos:end="83:260"><name pos:start="83:259" pos:end="83:260">p0</name></expr></argument>, <argument pos:start="83:263" pos:end="83:264"><expr pos:start="83:263" pos:end="83:264"><name pos:start="83:263" pos:end="83:264">q0</name></expr></argument>, <argument pos:start="83:267" pos:end="83:268"><expr pos:start="83:267" pos:end="83:268"><name pos:start="83:267" pos:end="83:268">q1</name></expr></argument>, <argument pos:start="83:271" pos:end="83:276"><expr pos:start="83:271" pos:end="83:276"><name pos:start="83:271" pos:end="83:276"><name pos:start="83:271" pos:end="83:273">pix</name><index pos:start="83:274" pos:end="83:276">[<expr pos:start="83:275" pos:end="83:275"><literal type="number" pos:start="83:275" pos:end="83:275">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="83:279" pos:end="83:280"><expr pos:start="83:279" pos:end="83:280"><name pos:start="83:279" pos:end="83:280">p1</name></expr></argument>, <argument pos:start="83:283" pos:end="83:289"><expr pos:start="83:283" pos:end="83:289"><name pos:start="83:283" pos:end="83:289"><name pos:start="83:283" pos:end="83:285">pix</name><index pos:start="83:286" pos:end="83:289">[<expr pos:start="83:287" pos:end="83:288"><operator pos:start="83:287" pos:end="83:287">-</operator><literal type="number" pos:start="83:288" pos:end="83:288">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="83:292" pos:end="83:297"><expr pos:start="83:292" pos:end="83:297"><name pos:start="83:292" pos:end="83:297"><name pos:start="83:292" pos:end="83:294">pix</name><index pos:start="83:295" pos:end="83:297">[<expr pos:start="83:296" pos:end="83:296"><literal type="number" pos:start="83:296" pos:end="83:296">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="83:300" pos:end="83:301"><expr pos:start="83:300" pos:end="83:301"><name pos:start="83:300" pos:end="83:301">q1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if><else pos:start="87:10" pos:end="173:9">else<block pos:start="87:14" pos:end="173:9">{<block_content pos:start="89:13" pos:end="171:13">

            <decl_stmt pos:start="89:13" pos:end="89:35"><decl pos:start="89:13" pos:end="89:34"><type pos:start="89:13" pos:end="89:21"><specifier pos:start="89:13" pos:end="89:17">const</specifier> <name pos:start="89:19" pos:end="89:21">int</name></type> <name pos:start="89:23" pos:end="89:24">p0</name> <init pos:start="89:26" pos:end="89:34">= <expr pos:start="89:28" pos:end="89:34"><name pos:start="89:28" pos:end="89:34"><name pos:start="89:28" pos:end="89:30">pix</name><index pos:start="89:31" pos:end="89:34">[<expr pos:start="89:32" pos:end="89:33"><operator pos:start="89:32" pos:end="89:32">-</operator><literal type="number" pos:start="89:33" pos:end="89:33">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="91:13" pos:end="91:35"><decl pos:start="91:13" pos:end="91:34"><type pos:start="91:13" pos:end="91:21"><specifier pos:start="91:13" pos:end="91:17">const</specifier> <name pos:start="91:19" pos:end="91:21">int</name></type> <name pos:start="91:23" pos:end="91:24">p1</name> <init pos:start="91:26" pos:end="91:34">= <expr pos:start="91:28" pos:end="91:34"><name pos:start="91:28" pos:end="91:34"><name pos:start="91:28" pos:end="91:30">pix</name><index pos:start="91:31" pos:end="91:34">[<expr pos:start="91:32" pos:end="91:33"><operator pos:start="91:32" pos:end="91:32">-</operator><literal type="number" pos:start="91:33" pos:end="91:33">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="93:13" pos:end="93:35"><decl pos:start="93:13" pos:end="93:34"><type pos:start="93:13" pos:end="93:21"><specifier pos:start="93:13" pos:end="93:17">const</specifier> <name pos:start="93:19" pos:end="93:21">int</name></type> <name pos:start="93:23" pos:end="93:24">p2</name> <init pos:start="93:26" pos:end="93:34">= <expr pos:start="93:28" pos:end="93:34"><name pos:start="93:28" pos:end="93:34"><name pos:start="93:28" pos:end="93:30">pix</name><index pos:start="93:31" pos:end="93:34">[<expr pos:start="93:32" pos:end="93:33"><operator pos:start="93:32" pos:end="93:32">-</operator><literal type="number" pos:start="93:33" pos:end="93:33">3</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <decl_stmt pos:start="97:13" pos:end="97:34"><decl pos:start="97:13" pos:end="97:33"><type pos:start="97:13" pos:end="97:21"><specifier pos:start="97:13" pos:end="97:17">const</specifier> <name pos:start="97:19" pos:end="97:21">int</name></type> <name pos:start="97:23" pos:end="97:24">q0</name> <init pos:start="97:26" pos:end="97:33">= <expr pos:start="97:28" pos:end="97:33"><name pos:start="97:28" pos:end="97:33"><name pos:start="97:28" pos:end="97:30">pix</name><index pos:start="97:31" pos:end="97:33">[<expr pos:start="97:32" pos:end="97:32"><literal type="number" pos:start="97:32" pos:end="97:32">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="99:13" pos:end="99:34"><decl pos:start="99:13" pos:end="99:33"><type pos:start="99:13" pos:end="99:21"><specifier pos:start="99:13" pos:end="99:17">const</specifier> <name pos:start="99:19" pos:end="99:21">int</name></type> <name pos:start="99:23" pos:end="99:24">q1</name> <init pos:start="99:26" pos:end="99:33">= <expr pos:start="99:28" pos:end="99:33"><name pos:start="99:28" pos:end="99:33"><name pos:start="99:28" pos:end="99:30">pix</name><index pos:start="99:31" pos:end="99:33">[<expr pos:start="99:32" pos:end="99:32"><literal type="number" pos:start="99:32" pos:end="99:32">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="101:13" pos:end="101:34"><decl pos:start="101:13" pos:end="101:33"><type pos:start="101:13" pos:end="101:21"><specifier pos:start="101:13" pos:end="101:17">const</specifier> <name pos:start="101:19" pos:end="101:21">int</name></type> <name pos:start="101:23" pos:end="101:24">q2</name> <init pos:start="101:26" pos:end="101:33">= <expr pos:start="101:28" pos:end="101:33"><name pos:start="101:28" pos:end="101:33"><name pos:start="101:28" pos:end="101:30">pix</name><index pos:start="101:31" pos:end="101:33">[<expr pos:start="101:32" pos:end="101:32"><literal type="number" pos:start="101:32" pos:end="101:32">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="105:13" pos:end="171:13"><if pos:start="105:13" pos:end="171:13">if<condition pos:start="105:15" pos:end="109:41">( <expr pos:start="105:17" pos:end="109:39"><call pos:start="105:17" pos:end="105:32"><name pos:start="105:17" pos:end="105:21">FFABS</name><argument_list pos:start="105:22" pos:end="105:32">( <argument pos:start="105:24" pos:end="105:30"><expr pos:start="105:24" pos:end="105:30"><name pos:start="105:24" pos:end="105:25">p0</name> <operator pos:start="105:27" pos:end="105:27">-</operator> <name pos:start="105:29" pos:end="105:30">q0</name></expr></argument> )</argument_list></call> <operator pos:start="105:34" pos:end="105:34">&lt;</operator> <name pos:start="105:36" pos:end="105:40">alpha</name> <operator pos:start="105:42" pos:end="105:43">&amp;&amp;</operator>

                <call pos:start="107:17" pos:end="107:32"><name pos:start="107:17" pos:end="107:21">FFABS</name><argument_list pos:start="107:22" pos:end="107:32">( <argument pos:start="107:24" pos:end="107:30"><expr pos:start="107:24" pos:end="107:30"><name pos:start="107:24" pos:end="107:25">p1</name> <operator pos:start="107:27" pos:end="107:27">-</operator> <name pos:start="107:29" pos:end="107:30">p0</name></expr></argument> )</argument_list></call> <operator pos:start="107:34" pos:end="107:34">&lt;</operator> <name pos:start="107:36" pos:end="107:39">beta</name> <operator pos:start="107:41" pos:end="107:42">&amp;&amp;</operator>

                <call pos:start="109:17" pos:end="109:32"><name pos:start="109:17" pos:end="109:21">FFABS</name><argument_list pos:start="109:22" pos:end="109:32">( <argument pos:start="109:24" pos:end="109:30"><expr pos:start="109:24" pos:end="109:30"><name pos:start="109:24" pos:end="109:25">q1</name> <operator pos:start="109:27" pos:end="109:27">-</operator> <name pos:start="109:29" pos:end="109:30">q0</name></expr></argument> )</argument_list></call> <operator pos:start="109:34" pos:end="109:34">&lt;</operator> <name pos:start="109:36" pos:end="109:39">beta</name></expr> )</condition> <block pos:start="109:43" pos:end="171:13">{<block_content pos:start="113:17" pos:end="169:306">



                <if_stmt pos:start="113:17" pos:end="167:17"><if pos:start="113:17" pos:end="159:17">if<condition pos:start="113:19" pos:end="113:60">(<expr pos:start="113:20" pos:end="113:59"><call pos:start="113:20" pos:end="113:35"><name pos:start="113:20" pos:end="113:24">FFABS</name><argument_list pos:start="113:25" pos:end="113:35">( <argument pos:start="113:27" pos:end="113:33"><expr pos:start="113:27" pos:end="113:33"><name pos:start="113:27" pos:end="113:28">p0</name> <operator pos:start="113:30" pos:end="113:30">-</operator> <name pos:start="113:32" pos:end="113:33">q0</name></expr></argument> )</argument_list></call> <operator pos:start="113:37" pos:end="113:37">&lt;</operator> <operator pos:start="113:39" pos:end="113:39">(</operator><operator pos:start="113:40" pos:end="113:40">(</operator> <name pos:start="113:42" pos:end="113:46">alpha</name> <operator pos:start="113:48" pos:end="113:49">&gt;&gt;</operator> <literal type="number" pos:start="113:51" pos:end="113:51">2</literal> <operator pos:start="113:53" pos:end="113:53">)</operator> <operator pos:start="113:55" pos:end="113:55">+</operator> <literal type="number" pos:start="113:57" pos:end="113:57">2</literal> <operator pos:start="113:59" pos:end="113:59">)</operator></expr>)</condition><block pos:start="113:61" pos:end="159:17">{<block_content pos:start="115:21" pos:end="157:21">

                    <if_stmt pos:start="115:21" pos:end="135:21"><if pos:start="115:21" pos:end="129:21">if<condition pos:start="115:23" pos:end="115:48">( <expr pos:start="115:25" pos:end="115:47"><call pos:start="115:25" pos:end="115:40"><name pos:start="115:25" pos:end="115:29">FFABS</name><argument_list pos:start="115:30" pos:end="115:40">( <argument pos:start="115:32" pos:end="115:38"><expr pos:start="115:32" pos:end="115:38"><name pos:start="115:32" pos:end="115:33">p2</name> <operator pos:start="115:35" pos:end="115:35">-</operator> <name pos:start="115:37" pos:end="115:38">p0</name></expr></argument> )</argument_list></call> <operator pos:start="115:42" pos:end="115:42">&lt;</operator> <name pos:start="115:44" pos:end="115:47">beta</name></expr>)</condition>

                    <block pos:start="117:21" pos:end="129:21">{<block_content pos:start="119:25" pos:end="127:74">

                        <decl_stmt pos:start="119:25" pos:end="119:47"><decl pos:start="119:25" pos:end="119:46"><type pos:start="119:25" pos:end="119:33"><specifier pos:start="119:25" pos:end="119:29">const</specifier> <name pos:start="119:31" pos:end="119:33">int</name></type> <name pos:start="119:35" pos:end="119:36">p3</name> <init pos:start="119:38" pos:end="119:46">= <expr pos:start="119:40" pos:end="119:46"><name pos:start="119:40" pos:end="119:46"><name pos:start="119:40" pos:end="119:42">pix</name><index pos:start="119:43" pos:end="119:46">[<expr pos:start="119:44" pos:end="119:45"><operator pos:start="119:44" pos:end="119:44">-</operator><literal type="number" pos:start="119:45" pos:end="119:45">4</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

                        <comment type="block" pos:start="121:25" pos:end="121:43">/* p0', p1', p2' */</comment>

                        <expr_stmt pos:start="123:25" pos:end="123:76"><expr pos:start="123:25" pos:end="123:75"><name pos:start="123:25" pos:end="123:31"><name pos:start="123:25" pos:end="123:27">pix</name><index pos:start="123:28" pos:end="123:31">[<expr pos:start="123:29" pos:end="123:30"><operator pos:start="123:29" pos:end="123:29">-</operator><literal type="number" pos:start="123:30" pos:end="123:30">1</literal></expr>]</index></name> <operator pos:start="123:33" pos:end="123:33">=</operator> <operator pos:start="123:35" pos:end="123:35">(</operator> <name pos:start="123:37" pos:end="123:38">p2</name> <operator pos:start="123:40" pos:end="123:40">+</operator> <literal type="number" pos:start="123:42" pos:end="123:42">2</literal><operator pos:start="123:43" pos:end="123:43">*</operator><name pos:start="123:44" pos:end="123:45">p1</name> <operator pos:start="123:47" pos:end="123:47">+</operator> <literal type="number" pos:start="123:49" pos:end="123:49">2</literal><operator pos:start="123:50" pos:end="123:50">*</operator><name pos:start="123:51" pos:end="123:52">p0</name> <operator pos:start="123:54" pos:end="123:54">+</operator> <literal type="number" pos:start="123:56" pos:end="123:56">2</literal><operator pos:start="123:57" pos:end="123:57">*</operator><name pos:start="123:58" pos:end="123:59">q0</name> <operator pos:start="123:61" pos:end="123:61">+</operator> <name pos:start="123:63" pos:end="123:64">q1</name> <operator pos:start="123:66" pos:end="123:66">+</operator> <literal type="number" pos:start="123:68" pos:end="123:68">4</literal> <operator pos:start="123:70" pos:end="123:70">)</operator> <operator pos:start="123:72" pos:end="123:73">&gt;&gt;</operator> <literal type="number" pos:start="123:75" pos:end="123:75">3</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="125:25" pos:end="125:65"><expr pos:start="125:25" pos:end="125:64"><name pos:start="125:25" pos:end="125:31"><name pos:start="125:25" pos:end="125:27">pix</name><index pos:start="125:28" pos:end="125:31">[<expr pos:start="125:29" pos:end="125:30"><operator pos:start="125:29" pos:end="125:29">-</operator><literal type="number" pos:start="125:30" pos:end="125:30">2</literal></expr>]</index></name> <operator pos:start="125:33" pos:end="125:33">=</operator> <operator pos:start="125:35" pos:end="125:35">(</operator> <name pos:start="125:37" pos:end="125:38">p2</name> <operator pos:start="125:40" pos:end="125:40">+</operator> <name pos:start="125:42" pos:end="125:43">p1</name> <operator pos:start="125:45" pos:end="125:45">+</operator> <name pos:start="125:47" pos:end="125:48">p0</name> <operator pos:start="125:50" pos:end="125:50">+</operator> <name pos:start="125:52" pos:end="125:53">q0</name> <operator pos:start="125:55" pos:end="125:55">+</operator> <literal type="number" pos:start="125:57" pos:end="125:57">2</literal> <operator pos:start="125:59" pos:end="125:59">)</operator> <operator pos:start="125:61" pos:end="125:62">&gt;&gt;</operator> <literal type="number" pos:start="125:64" pos:end="125:64">2</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="127:25" pos:end="127:74"><expr pos:start="127:25" pos:end="127:73"><name pos:start="127:25" pos:end="127:31"><name pos:start="127:25" pos:end="127:27">pix</name><index pos:start="127:28" pos:end="127:31">[<expr pos:start="127:29" pos:end="127:30"><operator pos:start="127:29" pos:end="127:29">-</operator><literal type="number" pos:start="127:30" pos:end="127:30">3</literal></expr>]</index></name> <operator pos:start="127:33" pos:end="127:33">=</operator> <operator pos:start="127:35" pos:end="127:35">(</operator> <literal type="number" pos:start="127:37" pos:end="127:37">2</literal><operator pos:start="127:38" pos:end="127:38">*</operator><name pos:start="127:39" pos:end="127:40">p3</name> <operator pos:start="127:42" pos:end="127:42">+</operator> <literal type="number" pos:start="127:44" pos:end="127:44">3</literal><operator pos:start="127:45" pos:end="127:45">*</operator><name pos:start="127:46" pos:end="127:47">p2</name> <operator pos:start="127:49" pos:end="127:49">+</operator> <name pos:start="127:51" pos:end="127:52">p1</name> <operator pos:start="127:54" pos:end="127:54">+</operator> <name pos:start="127:56" pos:end="127:57">p0</name> <operator pos:start="127:59" pos:end="127:59">+</operator> <name pos:start="127:61" pos:end="127:62">q0</name> <operator pos:start="127:64" pos:end="127:64">+</operator> <literal type="number" pos:start="127:66" pos:end="127:66">4</literal> <operator pos:start="127:68" pos:end="127:68">)</operator> <operator pos:start="127:70" pos:end="127:71">&gt;&gt;</operator> <literal type="number" pos:start="127:73" pos:end="127:73">3</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="129:23" pos:end="135:21">else <block pos:start="129:28" pos:end="135:21">{<block_content pos:start="133:25" pos:end="133:62">

                        <comment type="block" pos:start="131:25" pos:end="131:33">/* p0' */</comment>

                        <expr_stmt pos:start="133:25" pos:end="133:62"><expr pos:start="133:25" pos:end="133:61"><name pos:start="133:25" pos:end="133:31"><name pos:start="133:25" pos:end="133:27">pix</name><index pos:start="133:28" pos:end="133:31">[<expr pos:start="133:29" pos:end="133:30"><operator pos:start="133:29" pos:end="133:29">-</operator><literal type="number" pos:start="133:30" pos:end="133:30">1</literal></expr>]</index></name> <operator pos:start="133:33" pos:end="133:33">=</operator> <operator pos:start="133:35" pos:end="133:35">(</operator> <literal type="number" pos:start="133:37" pos:end="133:37">2</literal><operator pos:start="133:38" pos:end="133:38">*</operator><name pos:start="133:39" pos:end="133:40">p1</name> <operator pos:start="133:42" pos:end="133:42">+</operator> <name pos:start="133:44" pos:end="133:45">p0</name> <operator pos:start="133:47" pos:end="133:47">+</operator> <name pos:start="133:49" pos:end="133:50">q1</name> <operator pos:start="133:52" pos:end="133:52">+</operator> <literal type="number" pos:start="133:54" pos:end="133:54">2</literal> <operator pos:start="133:56" pos:end="133:56">)</operator> <operator pos:start="133:58" pos:end="133:59">&gt;&gt;</operator> <literal type="number" pos:start="133:61" pos:end="133:61">2</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <if_stmt pos:start="137:21" pos:end="157:21"><if pos:start="137:21" pos:end="151:21">if<condition pos:start="137:23" pos:end="137:48">( <expr pos:start="137:25" pos:end="137:47"><call pos:start="137:25" pos:end="137:40"><name pos:start="137:25" pos:end="137:29">FFABS</name><argument_list pos:start="137:30" pos:end="137:40">( <argument pos:start="137:32" pos:end="137:38"><expr pos:start="137:32" pos:end="137:38"><name pos:start="137:32" pos:end="137:33">q2</name> <operator pos:start="137:35" pos:end="137:35">-</operator> <name pos:start="137:37" pos:end="137:38">q0</name></expr></argument> )</argument_list></call> <operator pos:start="137:42" pos:end="137:42">&lt;</operator> <name pos:start="137:44" pos:end="137:47">beta</name></expr>)</condition>

                    <block pos:start="139:21" pos:end="151:21">{<block_content pos:start="141:25" pos:end="149:73">

                        <decl_stmt pos:start="141:25" pos:end="141:46"><decl pos:start="141:25" pos:end="141:45"><type pos:start="141:25" pos:end="141:33"><specifier pos:start="141:25" pos:end="141:29">const</specifier> <name pos:start="141:31" pos:end="141:33">int</name></type> <name pos:start="141:35" pos:end="141:36">q3</name> <init pos:start="141:38" pos:end="141:45">= <expr pos:start="141:40" pos:end="141:45"><name pos:start="141:40" pos:end="141:45"><name pos:start="141:40" pos:end="141:42">pix</name><index pos:start="141:43" pos:end="141:45">[<expr pos:start="141:44" pos:end="141:44"><literal type="number" pos:start="141:44" pos:end="141:44">3</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

                        <comment type="block" pos:start="143:25" pos:end="143:43">/* q0', q1', q2' */</comment>

                        <expr_stmt pos:start="145:25" pos:end="145:75"><expr pos:start="145:25" pos:end="145:74"><name pos:start="145:25" pos:end="145:30"><name pos:start="145:25" pos:end="145:27">pix</name><index pos:start="145:28" pos:end="145:30">[<expr pos:start="145:29" pos:end="145:29"><literal type="number" pos:start="145:29" pos:end="145:29">0</literal></expr>]</index></name> <operator pos:start="145:32" pos:end="145:32">=</operator> <operator pos:start="145:34" pos:end="145:34">(</operator> <name pos:start="145:36" pos:end="145:37">p1</name> <operator pos:start="145:39" pos:end="145:39">+</operator> <literal type="number" pos:start="145:41" pos:end="145:41">2</literal><operator pos:start="145:42" pos:end="145:42">*</operator><name pos:start="145:43" pos:end="145:44">p0</name> <operator pos:start="145:46" pos:end="145:46">+</operator> <literal type="number" pos:start="145:48" pos:end="145:48">2</literal><operator pos:start="145:49" pos:end="145:49">*</operator><name pos:start="145:50" pos:end="145:51">q0</name> <operator pos:start="145:53" pos:end="145:53">+</operator> <literal type="number" pos:start="145:55" pos:end="145:55">2</literal><operator pos:start="145:56" pos:end="145:56">*</operator><name pos:start="145:57" pos:end="145:58">q1</name> <operator pos:start="145:60" pos:end="145:60">+</operator> <name pos:start="145:62" pos:end="145:63">q2</name> <operator pos:start="145:65" pos:end="145:65">+</operator> <literal type="number" pos:start="145:67" pos:end="145:67">4</literal> <operator pos:start="145:69" pos:end="145:69">)</operator> <operator pos:start="145:71" pos:end="145:72">&gt;&gt;</operator> <literal type="number" pos:start="145:74" pos:end="145:74">3</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="147:25" pos:end="147:64"><expr pos:start="147:25" pos:end="147:63"><name pos:start="147:25" pos:end="147:30"><name pos:start="147:25" pos:end="147:27">pix</name><index pos:start="147:28" pos:end="147:30">[<expr pos:start="147:29" pos:end="147:29"><literal type="number" pos:start="147:29" pos:end="147:29">1</literal></expr>]</index></name> <operator pos:start="147:32" pos:end="147:32">=</operator> <operator pos:start="147:34" pos:end="147:34">(</operator> <name pos:start="147:36" pos:end="147:37">p0</name> <operator pos:start="147:39" pos:end="147:39">+</operator> <name pos:start="147:41" pos:end="147:42">q0</name> <operator pos:start="147:44" pos:end="147:44">+</operator> <name pos:start="147:46" pos:end="147:47">q1</name> <operator pos:start="147:49" pos:end="147:49">+</operator> <name pos:start="147:51" pos:end="147:52">q2</name> <operator pos:start="147:54" pos:end="147:54">+</operator> <literal type="number" pos:start="147:56" pos:end="147:56">2</literal> <operator pos:start="147:58" pos:end="147:58">)</operator> <operator pos:start="147:60" pos:end="147:61">&gt;&gt;</operator> <literal type="number" pos:start="147:63" pos:end="147:63">2</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="149:25" pos:end="149:73"><expr pos:start="149:25" pos:end="149:72"><name pos:start="149:25" pos:end="149:30"><name pos:start="149:25" pos:end="149:27">pix</name><index pos:start="149:28" pos:end="149:30">[<expr pos:start="149:29" pos:end="149:29"><literal type="number" pos:start="149:29" pos:end="149:29">2</literal></expr>]</index></name> <operator pos:start="149:32" pos:end="149:32">=</operator> <operator pos:start="149:34" pos:end="149:34">(</operator> <literal type="number" pos:start="149:36" pos:end="149:36">2</literal><operator pos:start="149:37" pos:end="149:37">*</operator><name pos:start="149:38" pos:end="149:39">q3</name> <operator pos:start="149:41" pos:end="149:41">+</operator> <literal type="number" pos:start="149:43" pos:end="149:43">3</literal><operator pos:start="149:44" pos:end="149:44">*</operator><name pos:start="149:45" pos:end="149:46">q2</name> <operator pos:start="149:48" pos:end="149:48">+</operator> <name pos:start="149:50" pos:end="149:51">q1</name> <operator pos:start="149:53" pos:end="149:53">+</operator> <name pos:start="149:55" pos:end="149:56">q0</name> <operator pos:start="149:58" pos:end="149:58">+</operator> <name pos:start="149:60" pos:end="149:61">p0</name> <operator pos:start="149:63" pos:end="149:63">+</operator> <literal type="number" pos:start="149:65" pos:end="149:65">4</literal> <operator pos:start="149:67" pos:end="149:67">)</operator> <operator pos:start="149:69" pos:end="149:70">&gt;&gt;</operator> <literal type="number" pos:start="149:72" pos:end="149:72">3</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="151:23" pos:end="157:21">else <block pos:start="151:28" pos:end="157:21">{<block_content pos:start="155:25" pos:end="155:61">

                        <comment type="block" pos:start="153:25" pos:end="153:33">/* q0' */</comment>

                        <expr_stmt pos:start="155:25" pos:end="155:61"><expr pos:start="155:25" pos:end="155:60"><name pos:start="155:25" pos:end="155:30"><name pos:start="155:25" pos:end="155:27">pix</name><index pos:start="155:28" pos:end="155:30">[<expr pos:start="155:29" pos:end="155:29"><literal type="number" pos:start="155:29" pos:end="155:29">0</literal></expr>]</index></name> <operator pos:start="155:32" pos:end="155:32">=</operator> <operator pos:start="155:34" pos:end="155:34">(</operator> <literal type="number" pos:start="155:36" pos:end="155:36">2</literal><operator pos:start="155:37" pos:end="155:37">*</operator><name pos:start="155:38" pos:end="155:39">q1</name> <operator pos:start="155:41" pos:end="155:41">+</operator> <name pos:start="155:43" pos:end="155:44">q0</name> <operator pos:start="155:46" pos:end="155:46">+</operator> <name pos:start="155:48" pos:end="155:49">p1</name> <operator pos:start="155:51" pos:end="155:51">+</operator> <literal type="number" pos:start="155:53" pos:end="155:53">2</literal> <operator pos:start="155:55" pos:end="155:55">)</operator> <operator pos:start="155:57" pos:end="155:58">&gt;&gt;</operator> <literal type="number" pos:start="155:60" pos:end="155:60">2</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if><else pos:start="159:18" pos:end="167:17">else<block pos:start="159:22" pos:end="167:17">{<block_content pos:start="163:21" pos:end="165:58">

                    <comment type="block" pos:start="161:21" pos:end="161:34">/* p0', q0' */</comment>

                    <expr_stmt pos:start="163:21" pos:end="163:58"><expr pos:start="163:21" pos:end="163:57"><name pos:start="163:21" pos:end="163:27"><name pos:start="163:21" pos:end="163:23">pix</name><index pos:start="163:24" pos:end="163:27">[<expr pos:start="163:25" pos:end="163:26"><operator pos:start="163:25" pos:end="163:25">-</operator><literal type="number" pos:start="163:26" pos:end="163:26">1</literal></expr>]</index></name> <operator pos:start="163:29" pos:end="163:29">=</operator> <operator pos:start="163:31" pos:end="163:31">(</operator> <literal type="number" pos:start="163:33" pos:end="163:33">2</literal><operator pos:start="163:34" pos:end="163:34">*</operator><name pos:start="163:35" pos:end="163:36">p1</name> <operator pos:start="163:38" pos:end="163:38">+</operator> <name pos:start="163:40" pos:end="163:41">p0</name> <operator pos:start="163:43" pos:end="163:43">+</operator> <name pos:start="163:45" pos:end="163:46">q1</name> <operator pos:start="163:48" pos:end="163:48">+</operator> <literal type="number" pos:start="163:50" pos:end="163:50">2</literal> <operator pos:start="163:52" pos:end="163:52">)</operator> <operator pos:start="163:54" pos:end="163:55">&gt;&gt;</operator> <literal type="number" pos:start="163:57" pos:end="163:57">2</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="165:21" pos:end="165:58"><expr pos:start="165:21" pos:end="165:57"><name pos:start="165:21" pos:end="165:27"><name pos:start="165:21" pos:end="165:23">pix</name><index pos:start="165:24" pos:end="165:27">[ <expr pos:start="165:26" pos:end="165:26"><literal type="number" pos:start="165:26" pos:end="165:26">0</literal></expr>]</index></name> <operator pos:start="165:29" pos:end="165:29">=</operator> <operator pos:start="165:31" pos:end="165:31">(</operator> <literal type="number" pos:start="165:33" pos:end="165:33">2</literal><operator pos:start="165:34" pos:end="165:34">*</operator><name pos:start="165:35" pos:end="165:36">q1</name> <operator pos:start="165:38" pos:end="165:38">+</operator> <name pos:start="165:40" pos:end="165:41">q0</name> <operator pos:start="165:43" pos:end="165:43">+</operator> <name pos:start="165:45" pos:end="165:46">p1</name> <operator pos:start="165:48" pos:end="165:48">+</operator> <literal type="number" pos:start="165:50" pos:end="165:50">2</literal> <operator pos:start="165:52" pos:end="165:52">)</operator> <operator pos:start="165:54" pos:end="165:55">&gt;&gt;</operator> <literal type="number" pos:start="165:57" pos:end="165:57">2</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="169:17" pos:end="169:306"><expr pos:start="169:17" pos:end="169:305"><call pos:start="169:17" pos:end="169:305"><name pos:start="169:17" pos:end="169:23">tprintf</name><argument_list pos:start="169:24" pos:end="169:305">(<argument pos:start="169:25" pos:end="169:34"><expr pos:start="169:25" pos:end="169:34"><name pos:start="169:25" pos:end="169:34"><name pos:start="169:25" pos:end="169:25">h</name><operator pos:start="169:26" pos:end="169:27">-&gt;</operator><name pos:start="169:28" pos:end="169:28">s</name><operator pos:start="169:29" pos:end="169:29">.</operator><name pos:start="169:30" pos:end="169:34">avctx</name></name></expr></argument>, <argument pos:start="169:37" pos:end="169:190"><expr pos:start="169:37" pos:end="169:190"><literal type="string" pos:start="169:37" pos:end="169:190">"filter_mb_mbaff_edgev i:%d, qp:%d, indexA:%d, alpha:%d, beta:%d\n# bS:4 -&gt; [%02x, %02x, %02x, %02x, %02x, %02x] =&gt;[%02x, %02x, %02x, %02x, %02x, %02x]\n"</literal></expr></argument>, <argument pos:start="169:193" pos:end="169:193"><expr pos:start="169:193" pos:end="169:193"><name pos:start="169:193" pos:end="169:193">i</name></expr></argument>, <argument pos:start="169:196" pos:end="169:207"><expr pos:start="169:196" pos:end="169:207"><name pos:start="169:196" pos:end="169:207"><name pos:start="169:196" pos:end="169:197">qp</name><index pos:start="169:198" pos:end="169:207">[<expr pos:start="169:199" pos:end="169:206"><name pos:start="169:199" pos:end="169:206">qp_index</name></expr>]</index></name></expr></argument>, <argument pos:start="169:210" pos:end="169:216"><expr pos:start="169:210" pos:end="169:216"><name pos:start="169:210" pos:end="169:216">index_a</name></expr></argument>, <argument pos:start="169:219" pos:end="169:223"><expr pos:start="169:219" pos:end="169:223"><name pos:start="169:219" pos:end="169:223">alpha</name></expr></argument>, <argument pos:start="169:226" pos:end="169:229"><expr pos:start="169:226" pos:end="169:229"><name pos:start="169:226" pos:end="169:229">beta</name></expr></argument>, <argument pos:start="169:232" pos:end="169:233"><expr pos:start="169:232" pos:end="169:233"><name pos:start="169:232" pos:end="169:233">p2</name></expr></argument>, <argument pos:start="169:236" pos:end="169:237"><expr pos:start="169:236" pos:end="169:237"><name pos:start="169:236" pos:end="169:237">p1</name></expr></argument>, <argument pos:start="169:240" pos:end="169:241"><expr pos:start="169:240" pos:end="169:241"><name pos:start="169:240" pos:end="169:241">p0</name></expr></argument>, <argument pos:start="169:244" pos:end="169:245"><expr pos:start="169:244" pos:end="169:245"><name pos:start="169:244" pos:end="169:245">q0</name></expr></argument>, <argument pos:start="169:248" pos:end="169:249"><expr pos:start="169:248" pos:end="169:249"><name pos:start="169:248" pos:end="169:249">q1</name></expr></argument>, <argument pos:start="169:252" pos:end="169:253"><expr pos:start="169:252" pos:end="169:253"><name pos:start="169:252" pos:end="169:253">q2</name></expr></argument>, <argument pos:start="169:256" pos:end="169:262"><expr pos:start="169:256" pos:end="169:262"><name pos:start="169:256" pos:end="169:262"><name pos:start="169:256" pos:end="169:258">pix</name><index pos:start="169:259" pos:end="169:262">[<expr pos:start="169:260" pos:end="169:261"><operator pos:start="169:260" pos:end="169:260">-</operator><literal type="number" pos:start="169:261" pos:end="169:261">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="169:265" pos:end="169:271"><expr pos:start="169:265" pos:end="169:271"><name pos:start="169:265" pos:end="169:271"><name pos:start="169:265" pos:end="169:267">pix</name><index pos:start="169:268" pos:end="169:271">[<expr pos:start="169:269" pos:end="169:270"><operator pos:start="169:269" pos:end="169:269">-</operator><literal type="number" pos:start="169:270" pos:end="169:270">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="169:274" pos:end="169:280"><expr pos:start="169:274" pos:end="169:280"><name pos:start="169:274" pos:end="169:280"><name pos:start="169:274" pos:end="169:276">pix</name><index pos:start="169:277" pos:end="169:280">[<expr pos:start="169:278" pos:end="169:279"><operator pos:start="169:278" pos:end="169:278">-</operator><literal type="number" pos:start="169:279" pos:end="169:279">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="169:283" pos:end="169:288"><expr pos:start="169:283" pos:end="169:288"><name pos:start="169:283" pos:end="169:288"><name pos:start="169:283" pos:end="169:285">pix</name><index pos:start="169:286" pos:end="169:288">[<expr pos:start="169:287" pos:end="169:287"><literal type="number" pos:start="169:287" pos:end="169:287">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="169:291" pos:end="169:296"><expr pos:start="169:291" pos:end="169:296"><name pos:start="169:291" pos:end="169:296"><name pos:start="169:291" pos:end="169:293">pix</name><index pos:start="169:294" pos:end="169:296">[<expr pos:start="169:295" pos:end="169:295"><literal type="number" pos:start="169:295" pos:end="169:295">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="169:299" pos:end="169:304"><expr pos:start="169:299" pos:end="169:304"><name pos:start="169:299" pos:end="169:304"><name pos:start="169:299" pos:end="169:301">pix</name><index pos:start="169:302" pos:end="169:304">[<expr pos:start="169:303" pos:end="169:303"><literal type="number" pos:start="169:303" pos:end="169:303">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
