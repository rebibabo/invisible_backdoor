<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17673.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:18"><name pos:start="1:1" pos:end="1:12">command_loop</name><argument_list pos:start="1:13" pos:end="1:18">(<argument pos:start="1:14" pos:end="1:17">void</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="101:1">{<block_content pos:start="5:9" pos:end="99:9">

	<decl_stmt pos:start="5:9" pos:end="5:46"><decl pos:start="5:9" pos:end="5:25"><type pos:start="5:9" pos:end="5:11"><name pos:start="5:9" pos:end="5:11">int</name></type>		<name pos:start="5:25" pos:end="5:25">c</name></decl>, <decl pos:start="5:28" pos:end="5:28"><type ref="prev" pos:start="5:9" pos:end="5:11"/><name pos:start="5:28" pos:end="5:28">i</name></decl>, <decl pos:start="5:31" pos:end="5:35"><type ref="prev" pos:start="5:9" pos:end="5:11"/><name pos:start="5:31" pos:end="5:31">j</name> <init pos:start="5:33" pos:end="5:35">= <expr pos:start="5:35" pos:end="5:35"><literal type="number" pos:start="5:35" pos:end="5:35">0</literal></expr></init></decl>, <decl pos:start="5:38" pos:end="5:45"><type ref="prev" pos:start="5:9" pos:end="5:11"/><name pos:start="5:38" pos:end="5:41">done</name> <init pos:start="5:43" pos:end="5:45">= <expr pos:start="5:45" pos:end="5:45"><literal type="number" pos:start="5:45" pos:end="5:45">0</literal></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="7:9" pos:end="7:31"><decl pos:start="7:9" pos:end="7:30"><type pos:start="7:9" pos:end="7:25"><name pos:start="7:9" pos:end="7:12">char</name>		<modifier pos:start="7:25" pos:end="7:25">*</modifier></type><name pos:start="7:26" pos:end="7:30">input</name></decl>;</decl_stmt>

	<decl_stmt pos:start="9:9" pos:end="9:28"><decl pos:start="9:9" pos:end="9:27"><type pos:start="9:9" pos:end="9:26"><name pos:start="9:9" pos:end="9:12">char</name>		<modifier pos:start="9:25" pos:end="9:25">*</modifier><modifier pos:start="9:26" pos:end="9:26">*</modifier></type><name pos:start="9:27" pos:end="9:27">v</name></decl>;</decl_stmt>

	<decl_stmt pos:start="11:9" pos:end="11:28"><decl pos:start="11:9" pos:end="11:27"><type pos:start="11:9" pos:end="11:25"><specifier pos:start="11:9" pos:end="11:13">const</specifier> <name pos:start="11:15" pos:end="11:23">cmdinfo_t</name>	<modifier pos:start="11:25" pos:end="11:25">*</modifier></type><name pos:start="11:26" pos:end="11:27">ct</name></decl>;</decl_stmt>



	<for pos:start="15:9" pos:end="63:9">for <control pos:start="15:13" pos:end="15:47">(<init pos:start="15:14" pos:end="15:19"><expr pos:start="15:14" pos:end="15:18"><name pos:start="15:14" pos:end="15:14">i</name> <operator pos:start="15:16" pos:end="15:16">=</operator> <literal type="number" pos:start="15:18" pos:end="15:18">0</literal></expr>;</init> <condition pos:start="15:21" pos:end="15:42"><expr pos:start="15:21" pos:end="15:41"><operator pos:start="15:21" pos:end="15:21">!</operator><name pos:start="15:22" pos:end="15:25">done</name> <operator pos:start="15:27" pos:end="15:28">&amp;&amp;</operator> <name pos:start="15:30" pos:end="15:30">i</name> <operator pos:start="15:32" pos:end="15:32">&lt;</operator> <name pos:start="15:34" pos:end="15:41">ncmdline</name></expr>;</condition> <incr pos:start="15:44" pos:end="15:46"><expr pos:start="15:44" pos:end="15:46"><name pos:start="15:44" pos:end="15:44">i</name><operator pos:start="15:45" pos:end="15:46">++</operator></expr></incr>)</control> <block pos:start="15:49" pos:end="63:9">{<block_content pos:start="17:17" pos:end="61:35">

		<expr_stmt pos:start="17:17" pos:end="17:43"><expr pos:start="17:17" pos:end="17:42"><name pos:start="17:17" pos:end="17:21">input</name> <operator pos:start="17:23" pos:end="17:23">=</operator> <call pos:start="17:25" pos:end="17:42"><name pos:start="17:25" pos:end="17:30">strdup</name><argument_list pos:start="17:31" pos:end="17:42">(<argument pos:start="17:32" pos:end="17:41"><expr pos:start="17:32" pos:end="17:41"><name pos:start="17:32" pos:end="17:41"><name pos:start="17:32" pos:end="17:38">cmdline</name><index pos:start="17:39" pos:end="17:41">[<expr pos:start="17:40" pos:end="17:40"><name pos:start="17:40" pos:end="17:40">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<if_stmt pos:start="19:17" pos:end="29:17"><if pos:start="19:17" pos:end="29:17">if <condition pos:start="19:20" pos:end="19:27">(<expr pos:start="19:21" pos:end="19:26"><operator pos:start="19:21" pos:end="19:21">!</operator><name pos:start="19:22" pos:end="19:26">input</name></expr>)</condition> <block pos:start="19:29" pos:end="29:17">{<block_content pos:start="21:25" pos:end="27:32">

			<expr_stmt pos:start="21:25" pos:end="25:61"><expr pos:start="21:25" pos:end="25:60"><call pos:start="21:25" pos:end="25:60"><name pos:start="21:25" pos:end="21:31">fprintf</name><argument_list pos:start="21:32" pos:end="25:60">(<argument pos:start="21:33" pos:end="21:38"><expr pos:start="21:33" pos:end="21:38"><name pos:start="21:33" pos:end="21:38">stderr</name></expr></argument>,

				<argument pos:start="23:33" pos:end="23:69"><expr pos:start="23:33" pos:end="23:69"><call pos:start="23:33" pos:end="23:69"><name pos:start="23:33" pos:end="23:33">_</name><argument_list pos:start="23:34" pos:end="23:69">(<argument pos:start="23:35" pos:end="23:68"><expr pos:start="23:35" pos:end="23:68"><literal type="string" pos:start="23:35" pos:end="23:68">"cannot strdup command '%s': %s\n"</literal></expr></argument>)</argument_list></call></expr></argument>,

				<argument pos:start="25:33" pos:end="25:42"><expr pos:start="25:33" pos:end="25:42"><name pos:start="25:33" pos:end="25:42"><name pos:start="25:33" pos:end="25:39">cmdline</name><index pos:start="25:40" pos:end="25:42">[<expr pos:start="25:41" pos:end="25:41"><name pos:start="25:41" pos:end="25:41">i</name></expr>]</index></name></expr></argument>, <argument pos:start="25:45" pos:end="25:59"><expr pos:start="25:45" pos:end="25:59"><call pos:start="25:45" pos:end="25:59"><name pos:start="25:45" pos:end="25:52">strerror</name><argument_list pos:start="25:53" pos:end="25:59">(<argument pos:start="25:54" pos:end="25:58"><expr pos:start="25:54" pos:end="25:58"><name pos:start="25:54" pos:end="25:58">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="27:25" pos:end="27:32"><expr pos:start="27:25" pos:end="27:31"><call pos:start="27:25" pos:end="27:31"><name pos:start="27:25" pos:end="27:28">exit</name><argument_list pos:start="27:29" pos:end="27:31">(<argument pos:start="27:30" pos:end="27:30"><expr pos:start="27:30" pos:end="27:30"><literal type="number" pos:start="27:30" pos:end="27:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		</block_content>}</block></if></if_stmt>

		<expr_stmt pos:start="31:17" pos:end="31:41"><expr pos:start="31:17" pos:end="31:40"><name pos:start="31:17" pos:end="31:17">v</name> <operator pos:start="31:19" pos:end="31:19">=</operator> <call pos:start="31:21" pos:end="31:40"><name pos:start="31:21" pos:end="31:29">breakline</name><argument_list pos:start="31:30" pos:end="31:40">(<argument pos:start="31:31" pos:end="31:35"><expr pos:start="31:31" pos:end="31:35"><name pos:start="31:31" pos:end="31:35">input</name></expr></argument>, <argument pos:start="31:38" pos:end="31:39"><expr pos:start="31:38" pos:end="31:39"><operator pos:start="31:38" pos:end="31:38">&amp;</operator><name pos:start="31:39" pos:end="31:39">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<if_stmt pos:start="33:17" pos:end="59:17"><if pos:start="33:17" pos:end="59:17">if <condition pos:start="33:20" pos:end="33:22">(<expr pos:start="33:21" pos:end="33:21"><name pos:start="33:21" pos:end="33:21">c</name></expr>)</condition> <block pos:start="33:24" pos:end="59:17">{<block_content pos:start="35:25" pos:end="57:46">

			<expr_stmt pos:start="35:25" pos:end="35:48"><expr pos:start="35:25" pos:end="35:47"><name pos:start="35:25" pos:end="35:26">ct</name> <operator pos:start="35:28" pos:end="35:28">=</operator> <call pos:start="35:30" pos:end="35:47"><name pos:start="35:30" pos:end="35:41">find_command</name><argument_list pos:start="35:42" pos:end="35:47">(<argument pos:start="35:43" pos:end="35:46"><expr pos:start="35:43" pos:end="35:46"><name pos:start="35:43" pos:end="35:46"><name pos:start="35:43" pos:end="35:43">v</name><index pos:start="35:44" pos:end="35:46">[<expr pos:start="35:45" pos:end="35:45"><literal type="number" pos:start="35:45" pos:end="35:45">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<if_stmt pos:start="37:25" pos:end="57:46"><if pos:start="37:25" pos:end="53:25">if <condition pos:start="37:28" pos:end="37:31">(<expr pos:start="37:29" pos:end="37:30"><name pos:start="37:29" pos:end="37:30">ct</name></expr>)</condition> <block pos:start="37:33" pos:end="53:25">{<block_content pos:start="39:33" pos:end="51:33">

				<if_stmt pos:start="39:33" pos:end="51:33"><if pos:start="39:33" pos:end="41:65">if <condition pos:start="39:36" pos:end="39:64">(<expr pos:start="39:37" pos:end="39:63"><name pos:start="39:37" pos:end="39:45"><name pos:start="39:37" pos:end="39:38">ct</name><operator pos:start="39:39" pos:end="39:40">-&gt;</operator><name pos:start="39:41" pos:end="39:45">flags</name></name> <operator pos:start="39:47" pos:end="39:47">&amp;</operator> <name pos:start="39:49" pos:end="39:63">CMD_FLAG_GLOBAL</name></expr>)</condition><block type="pseudo" pos:start="41:41" pos:end="41:65"><block_content pos:start="41:41" pos:end="41:65">

					<expr_stmt pos:start="41:41" pos:end="41:65"><expr pos:start="41:41" pos:end="41:64"><name pos:start="41:41" pos:end="41:44">done</name> <operator pos:start="41:46" pos:end="41:46">=</operator> <call pos:start="41:48" pos:end="41:64"><name pos:start="41:48" pos:end="41:54">command</name><argument_list pos:start="41:55" pos:end="41:64">(<argument pos:start="41:56" pos:end="41:57"><expr pos:start="41:56" pos:end="41:57"><name pos:start="41:56" pos:end="41:57">ct</name></expr></argument>, <argument pos:start="41:60" pos:end="41:60"><expr pos:start="41:60" pos:end="41:60"><name pos:start="41:60" pos:end="41:60">c</name></expr></argument>, <argument pos:start="41:63" pos:end="41:63"><expr pos:start="41:63" pos:end="41:63"><name pos:start="41:63" pos:end="41:63">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

				<else pos:start="43:33" pos:end="51:33">else <block pos:start="43:38" pos:end="51:33">{<block_content pos:start="45:41" pos:end="49:73">

					<expr_stmt pos:start="45:41" pos:end="45:46"><expr pos:start="45:41" pos:end="45:45"><name pos:start="45:41" pos:end="45:41">j</name> <operator pos:start="45:43" pos:end="45:43">=</operator> <literal type="number" pos:start="45:45" pos:end="45:45">0</literal></expr>;</expr_stmt>

					<while pos:start="47:41" pos:end="49:73">while <condition pos:start="47:47" pos:end="47:78">(<expr pos:start="47:48" pos:end="47:77"><operator pos:start="47:48" pos:end="47:48">!</operator><name pos:start="47:49" pos:end="47:52">done</name> <operator pos:start="47:54" pos:end="47:55">&amp;&amp;</operator> <operator pos:start="47:57" pos:end="47:57">(</operator><name pos:start="47:58" pos:end="47:58">j</name> <operator pos:start="47:60" pos:end="47:60">=</operator> <call pos:start="47:62" pos:end="47:76"><name pos:start="47:62" pos:end="47:73">args_command</name><argument_list pos:start="47:74" pos:end="47:76">(<argument pos:start="47:75" pos:end="47:75"><expr pos:start="47:75" pos:end="47:75"><name pos:start="47:75" pos:end="47:75">j</name></expr></argument>)</argument_list></call><operator pos:start="47:77" pos:end="47:77">)</operator></expr>)</condition><block type="pseudo" pos:start="49:49" pos:end="49:73"><block_content pos:start="49:49" pos:end="49:73">

						<expr_stmt pos:start="49:49" pos:end="49:73"><expr pos:start="49:49" pos:end="49:72"><name pos:start="49:49" pos:end="49:52">done</name> <operator pos:start="49:54" pos:end="49:54">=</operator> <call pos:start="49:56" pos:end="49:72"><name pos:start="49:56" pos:end="49:62">command</name><argument_list pos:start="49:63" pos:end="49:72">(<argument pos:start="49:64" pos:end="49:65"><expr pos:start="49:64" pos:end="49:65"><name pos:start="49:64" pos:end="49:65">ct</name></expr></argument>, <argument pos:start="49:68" pos:end="49:68"><expr pos:start="49:68" pos:end="49:68"><name pos:start="49:68" pos:end="49:68">c</name></expr></argument>, <argument pos:start="49:71" pos:end="49:71"><expr pos:start="49:71" pos:end="49:71"><name pos:start="49:71" pos:end="49:71">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>

				</block_content>}</block></else></if_stmt>

			</block_content>}</block></if> <else pos:start="53:27" pos:end="57:46">else<block type="pseudo" pos:start="55:33" pos:end="57:46"><block_content pos:start="55:33" pos:end="57:46">

				<expr_stmt pos:start="55:33" pos:end="57:46"><expr pos:start="55:33" pos:end="57:45"><call pos:start="55:33" pos:end="57:45"><name pos:start="55:33" pos:end="55:39">fprintf</name><argument_list pos:start="55:40" pos:end="57:45">(<argument pos:start="55:41" pos:end="55:46"><expr pos:start="55:41" pos:end="55:46"><name pos:start="55:41" pos:end="55:46">stderr</name></expr></argument>, <argument pos:start="55:49" pos:end="55:79"><expr pos:start="55:49" pos:end="55:79"><call pos:start="55:49" pos:end="55:79"><name pos:start="55:49" pos:end="55:49">_</name><argument_list pos:start="55:50" pos:end="55:79">(<argument pos:start="55:51" pos:end="55:78"><expr pos:start="55:51" pos:end="55:78"><literal type="string" pos:start="55:51" pos:end="55:78">"command \"%s\" not found\n"</literal></expr></argument>)</argument_list></call></expr></argument>,

					<argument pos:start="57:41" pos:end="57:44"><expr pos:start="57:41" pos:end="57:44"><name pos:start="57:41" pos:end="57:44"><name pos:start="57:41" pos:end="57:41">v</name><index pos:start="57:42" pos:end="57:44">[<expr pos:start="57:43" pos:end="57:43"><literal type="number" pos:start="57:43" pos:end="57:43">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

		</block_content>}</block></if></if_stmt>

		<expr_stmt pos:start="61:17" pos:end="61:35"><expr pos:start="61:17" pos:end="61:34"><call pos:start="61:17" pos:end="61:34"><name pos:start="61:17" pos:end="61:24">doneline</name><argument_list pos:start="61:25" pos:end="61:34">(<argument pos:start="61:26" pos:end="61:30"><expr pos:start="61:26" pos:end="61:30"><name pos:start="61:26" pos:end="61:30">input</name></expr></argument>, <argument pos:start="61:33" pos:end="61:33"><expr pos:start="61:33" pos:end="61:33"><name pos:start="61:33" pos:end="61:33">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></for>

	<if_stmt pos:start="65:9" pos:end="71:9"><if pos:start="65:9" pos:end="71:9">if <condition pos:start="65:12" pos:end="65:20">(<expr pos:start="65:13" pos:end="65:19"><name pos:start="65:13" pos:end="65:19">cmdline</name></expr>)</condition> <block pos:start="65:22" pos:end="71:9">{<block_content pos:start="67:17" pos:end="69:23">

		<expr_stmt pos:start="67:17" pos:end="67:30"><expr pos:start="67:17" pos:end="67:29"><call pos:start="67:17" pos:end="67:29"><name pos:start="67:17" pos:end="67:20">free</name><argument_list pos:start="67:21" pos:end="67:29">(<argument pos:start="67:22" pos:end="67:28"><expr pos:start="67:22" pos:end="67:28"><name pos:start="67:22" pos:end="67:28">cmdline</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<return pos:start="69:17" pos:end="69:23">return;</return>

	</block_content>}</block></if></if_stmt>

	<while pos:start="73:9" pos:end="99:9">while <condition pos:start="73:15" pos:end="73:21">(<expr pos:start="73:16" pos:end="73:20"><operator pos:start="73:16" pos:end="73:16">!</operator><name pos:start="73:17" pos:end="73:20">done</name></expr>)</condition> <block pos:start="73:23" pos:end="99:9">{<block_content pos:start="75:17" pos:end="97:35">

		<if_stmt pos:start="75:17" pos:end="77:30"><if pos:start="75:17" pos:end="77:30">if <condition pos:start="75:20" pos:end="75:50">(<expr pos:start="75:21" pos:end="75:49"><operator pos:start="75:21" pos:end="75:21">(</operator><name pos:start="75:22" pos:end="75:26">input</name> <operator pos:start="75:28" pos:end="75:28">=</operator> <call pos:start="75:30" pos:end="75:40"><name pos:start="75:30" pos:end="75:38">fetchline</name><argument_list pos:start="75:39" pos:end="75:40">()</argument_list></call><operator pos:start="75:41" pos:end="75:41">)</operator> <operator pos:start="75:43" pos:end="75:44">==</operator> <name pos:start="75:46" pos:end="75:49">NULL</name></expr>)</condition><block type="pseudo" pos:start="77:25" pos:end="77:30"><block_content pos:start="77:25" pos:end="77:30">

			<break pos:start="77:25" pos:end="77:30">break;</break></block_content></block></if></if_stmt>

		<expr_stmt pos:start="79:17" pos:end="79:41"><expr pos:start="79:17" pos:end="79:40"><name pos:start="79:17" pos:end="79:17">v</name> <operator pos:start="79:19" pos:end="79:19">=</operator> <call pos:start="79:21" pos:end="79:40"><name pos:start="79:21" pos:end="79:29">breakline</name><argument_list pos:start="79:30" pos:end="79:40">(<argument pos:start="79:31" pos:end="79:35"><expr pos:start="79:31" pos:end="79:35"><name pos:start="79:31" pos:end="79:35">input</name></expr></argument>, <argument pos:start="79:38" pos:end="79:39"><expr pos:start="79:38" pos:end="79:39"><operator pos:start="79:38" pos:end="79:38">&amp;</operator><name pos:start="79:39" pos:end="79:39">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<if_stmt pos:start="81:17" pos:end="95:17"><if pos:start="81:17" pos:end="95:17">if <condition pos:start="81:20" pos:end="81:22">(<expr pos:start="81:21" pos:end="81:21"><name pos:start="81:21" pos:end="81:21">c</name></expr>)</condition> <block pos:start="81:24" pos:end="95:17">{<block_content pos:start="83:25" pos:end="93:46">

			<expr_stmt pos:start="83:25" pos:end="83:48"><expr pos:start="83:25" pos:end="83:47"><name pos:start="83:25" pos:end="83:26">ct</name> <operator pos:start="83:28" pos:end="83:28">=</operator> <call pos:start="83:30" pos:end="83:47"><name pos:start="83:30" pos:end="83:41">find_command</name><argument_list pos:start="83:42" pos:end="83:47">(<argument pos:start="83:43" pos:end="83:46"><expr pos:start="83:43" pos:end="83:46"><name pos:start="83:43" pos:end="83:46"><name pos:start="83:43" pos:end="83:43">v</name><index pos:start="83:44" pos:end="83:46">[<expr pos:start="83:45" pos:end="83:45"><literal type="number" pos:start="83:45" pos:end="83:45">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<if_stmt pos:start="85:25" pos:end="93:46"><if pos:start="85:25" pos:end="87:57">if <condition pos:start="85:28" pos:end="85:31">(<expr pos:start="85:29" pos:end="85:30"><name pos:start="85:29" pos:end="85:30">ct</name></expr>)</condition><block type="pseudo" pos:start="87:33" pos:end="87:57"><block_content pos:start="87:33" pos:end="87:57">

				<expr_stmt pos:start="87:33" pos:end="87:57"><expr pos:start="87:33" pos:end="87:56"><name pos:start="87:33" pos:end="87:36">done</name> <operator pos:start="87:38" pos:end="87:38">=</operator> <call pos:start="87:40" pos:end="87:56"><name pos:start="87:40" pos:end="87:46">command</name><argument_list pos:start="87:47" pos:end="87:56">(<argument pos:start="87:48" pos:end="87:49"><expr pos:start="87:48" pos:end="87:49"><name pos:start="87:48" pos:end="87:49">ct</name></expr></argument>, <argument pos:start="87:52" pos:end="87:52"><expr pos:start="87:52" pos:end="87:52"><name pos:start="87:52" pos:end="87:52">c</name></expr></argument>, <argument pos:start="87:55" pos:end="87:55"><expr pos:start="87:55" pos:end="87:55"><name pos:start="87:55" pos:end="87:55">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

			<else pos:start="89:25" pos:end="93:46">else<block type="pseudo" pos:start="91:33" pos:end="93:46"><block_content pos:start="91:33" pos:end="93:46">

				<expr_stmt pos:start="91:33" pos:end="93:46"><expr pos:start="91:33" pos:end="93:45"><call pos:start="91:33" pos:end="93:45"><name pos:start="91:33" pos:end="91:39">fprintf</name><argument_list pos:start="91:40" pos:end="93:45">(<argument pos:start="91:41" pos:end="91:46"><expr pos:start="91:41" pos:end="91:46"><name pos:start="91:41" pos:end="91:46">stderr</name></expr></argument>, <argument pos:start="91:49" pos:end="91:79"><expr pos:start="91:49" pos:end="91:79"><call pos:start="91:49" pos:end="91:79"><name pos:start="91:49" pos:end="91:49">_</name><argument_list pos:start="91:50" pos:end="91:79">(<argument pos:start="91:51" pos:end="91:78"><expr pos:start="91:51" pos:end="91:78"><literal type="string" pos:start="91:51" pos:end="91:78">"command \"%s\" not found\n"</literal></expr></argument>)</argument_list></call></expr></argument>,

					<argument pos:start="93:41" pos:end="93:44"><expr pos:start="93:41" pos:end="93:44"><name pos:start="93:41" pos:end="93:44"><name pos:start="93:41" pos:end="93:41">v</name><index pos:start="93:42" pos:end="93:44">[<expr pos:start="93:43" pos:end="93:43"><literal type="number" pos:start="93:43" pos:end="93:43">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

		</block_content>}</block></if></if_stmt>

		<expr_stmt pos:start="97:17" pos:end="97:35"><expr pos:start="97:17" pos:end="97:34"><call pos:start="97:17" pos:end="97:34"><name pos:start="97:17" pos:end="97:24">doneline</name><argument_list pos:start="97:25" pos:end="97:34">(<argument pos:start="97:26" pos:end="97:30"><expr pos:start="97:26" pos:end="97:30"><name pos:start="97:26" pos:end="97:30">input</name></expr></argument>, <argument pos:start="97:33" pos:end="97:33"><expr pos:start="97:33" pos:end="97:33"><name pos:start="97:33" pos:end="97:33">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></while>

</block_content>}</block>
</unit>
