<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2175.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">nbd_co_receive_reply</name><parameter_list pos:start="1:32" pos:end="5:51">(<parameter pos:start="1:33" pos:end="1:51"><decl pos:start="1:33" pos:end="1:51"><type pos:start="1:33" pos:end="1:51"><name pos:start="1:33" pos:end="1:48">NBDClientSession</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">s</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:51"><decl pos:start="3:33" pos:end="3:51"><type pos:start="3:33" pos:end="3:51"><name pos:start="3:33" pos:end="3:42">NBDRequest</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:51">request</name></decl></parameter>,

                                <parameter pos:start="5:33" pos:end="5:50"><decl pos:start="5:33" pos:end="5:50"><type pos:start="5:33" pos:end="5:50"><name pos:start="5:33" pos:end="5:44">QEMUIOVector</name> <modifier pos:start="5:46" pos:end="5:46">*</modifier></type><name pos:start="5:47" pos:end="5:50">qiov</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="83:1">{<block_content pos:start="9:5" pos:end="81:15">

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:48"><decl pos:start="11:5" pos:end="11:47"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name> <init pos:start="11:11" pos:end="11:47">= <expr pos:start="11:13" pos:end="11:47"><call pos:start="11:13" pos:end="11:47"><name pos:start="11:13" pos:end="11:27">HANDLE_TO_INDEX</name><argument_list pos:start="11:28" pos:end="11:47">(<argument pos:start="11:29" pos:end="11:29"><expr pos:start="11:29" pos:end="11:29"><name pos:start="11:29" pos:end="11:29">s</name></expr></argument>, <argument pos:start="11:32" pos:end="11:46"><expr pos:start="11:32" pos:end="11:46"><name pos:start="11:32" pos:end="11:46"><name pos:start="11:32" pos:end="11:38">request</name><operator pos:start="11:39" pos:end="11:40">-&gt;</operator><name pos:start="11:41" pos:end="11:46">handle</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:61">/* Wait until we're woken up by nbd_read_reply_entry.  */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:36"><expr pos:start="17:5" pos:end="17:35"><name pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:15">requests</name><index pos:start="17:16" pos:end="17:18">[<expr pos:start="17:17" pos:end="17:17"><name pos:start="17:17" pos:end="17:17">i</name></expr>]</index></name><operator pos:start="17:19" pos:end="17:19">.</operator><name pos:start="17:20" pos:end="17:28">receiving</name> <operator pos:start="17:30" pos:end="17:30">=</operator> <name pos:start="17:32" pos:end="17:35">true</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:27"><expr pos:start="19:5" pos:end="19:26"><call pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:24">qemu_coroutine_yield</name><argument_list pos:start="19:25" pos:end="19:26">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:37"><expr pos:start="21:5" pos:end="21:36"><name pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:15">requests</name><index pos:start="21:16" pos:end="21:18">[<expr pos:start="21:17" pos:end="21:17"><name pos:start="21:17" pos:end="21:17">i</name></expr>]</index></name><operator pos:start="21:19" pos:end="21:19">.</operator><name pos:start="21:20" pos:end="21:28">receiving</name> <operator pos:start="21:30" pos:end="21:30">=</operator> <name pos:start="21:32" pos:end="21:36">false</name></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="53:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:65">(<expr pos:start="23:9" pos:end="23:64"><name pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:16">reply</name><operator pos:start="23:17" pos:end="23:17">.</operator><name pos:start="23:18" pos:end="23:23">handle</name></name> <operator pos:start="23:25" pos:end="23:26">!=</operator> <name pos:start="23:28" pos:end="23:42"><name pos:start="23:28" pos:end="23:34">request</name><operator pos:start="23:35" pos:end="23:36">-&gt;</operator><name pos:start="23:37" pos:end="23:42">handle</name></name> <operator pos:start="23:44" pos:end="23:45">||</operator> <operator pos:start="23:47" pos:end="23:47">!</operator><name pos:start="23:48" pos:end="23:53"><name pos:start="23:48" pos:end="23:48">s</name><operator pos:start="23:49" pos:end="23:50">-&gt;</operator><name pos:start="23:51" pos:end="23:53">ioc</name></name> <operator pos:start="23:55" pos:end="23:56">||</operator> <name pos:start="23:58" pos:end="23:64"><name pos:start="23:58" pos:end="23:58">s</name><operator pos:start="23:59" pos:end="23:60">-&gt;</operator><name pos:start="23:61" pos:end="23:64">quit</name></name></expr>)</condition> <block pos:start="23:67" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:19">

        <expr_stmt pos:start="25:9" pos:end="25:19"><expr pos:start="25:9" pos:end="25:18"><name pos:start="25:9" pos:end="25:11">ret</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <operator pos:start="25:15" pos:end="25:15">-</operator><name pos:start="25:16" pos:end="25:18">EIO</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="27:7" pos:end="53:5">else <block pos:start="27:12" pos:end="53:5">{<block_content pos:start="29:9" pos:end="51:28">

        <expr_stmt pos:start="29:9" pos:end="29:30"><expr pos:start="29:9" pos:end="29:29"><name pos:start="29:9" pos:end="29:11">ret</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <operator pos:start="29:15" pos:end="29:15">-</operator><name pos:start="29:16" pos:end="29:29"><name pos:start="29:16" pos:end="29:16">s</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:23">reply</name><operator pos:start="29:24" pos:end="29:24">.</operator><name pos:start="29:25" pos:end="29:29">error</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="45:9"><if pos:start="31:9" pos:end="45:9">if <condition pos:start="31:12" pos:end="31:40">(<expr pos:start="31:13" pos:end="31:39"><name pos:start="31:13" pos:end="31:16">qiov</name> <operator pos:start="31:18" pos:end="31:19">&amp;&amp;</operator> <name pos:start="31:21" pos:end="31:34"><name pos:start="31:21" pos:end="31:21">s</name><operator pos:start="31:22" pos:end="31:23">-&gt;</operator><name pos:start="31:24" pos:end="31:28">reply</name><operator pos:start="31:29" pos:end="31:29">.</operator><name pos:start="31:30" pos:end="31:34">error</name></name> <operator pos:start="31:36" pos:end="31:37">==</operator> <literal type="number" pos:start="31:39" pos:end="31:39">0</literal></expr>)</condition> <block pos:start="31:42" pos:end="45:9">{<block_content pos:start="33:13" pos:end="43:13">

            <expr_stmt pos:start="33:13" pos:end="33:68"><expr pos:start="33:13" pos:end="33:67"><call pos:start="33:13" pos:end="33:67"><name pos:start="33:13" pos:end="33:18">assert</name><argument_list pos:start="33:19" pos:end="33:67">(<argument pos:start="33:20" pos:end="33:66"><expr pos:start="33:20" pos:end="33:66"><name pos:start="33:20" pos:end="33:31"><name pos:start="33:20" pos:end="33:26">request</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:31">len</name></name> <operator pos:start="33:33" pos:end="33:34">==</operator> <call pos:start="33:36" pos:end="33:66"><name pos:start="33:36" pos:end="33:43">iov_size</name><argument_list pos:start="33:44" pos:end="33:66">(<argument pos:start="33:45" pos:end="33:53"><expr pos:start="33:45" pos:end="33:53"><name pos:start="33:45" pos:end="33:53"><name pos:start="33:45" pos:end="33:48">qiov</name><operator pos:start="33:49" pos:end="33:50">-&gt;</operator><name pos:start="33:51" pos:end="33:53">iov</name></name></expr></argument>, <argument pos:start="33:56" pos:end="33:65"><expr pos:start="33:56" pos:end="33:65"><name pos:start="33:56" pos:end="33:65"><name pos:start="33:56" pos:end="33:59">qiov</name><operator pos:start="33:60" pos:end="33:61">-&gt;</operator><name pos:start="33:62" pos:end="33:65">niov</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="35:13" pos:end="43:13"><if pos:start="35:13" pos:end="43:13">if <condition pos:start="35:16" pos:end="37:48">(<expr pos:start="35:17" pos:end="37:47"><call pos:start="35:17" pos:end="37:43"><name pos:start="35:17" pos:end="35:37">qio_channel_readv_all</name><argument_list pos:start="35:38" pos:end="37:43">(<argument pos:start="35:39" pos:end="35:44"><expr pos:start="35:39" pos:end="35:44"><name pos:start="35:39" pos:end="35:44"><name pos:start="35:39" pos:end="35:39">s</name><operator pos:start="35:40" pos:end="35:41">-&gt;</operator><name pos:start="35:42" pos:end="35:44">ioc</name></name></expr></argument>, <argument pos:start="35:47" pos:end="35:55"><expr pos:start="35:47" pos:end="35:55"><name pos:start="35:47" pos:end="35:55"><name pos:start="35:47" pos:end="35:50">qiov</name><operator pos:start="35:51" pos:end="35:52">-&gt;</operator><name pos:start="35:53" pos:end="35:55">iov</name></name></expr></argument>, <argument pos:start="35:58" pos:end="35:67"><expr pos:start="35:58" pos:end="35:67"><name pos:start="35:58" pos:end="35:67"><name pos:start="35:58" pos:end="35:61">qiov</name><operator pos:start="35:62" pos:end="35:63">-&gt;</operator><name pos:start="35:64" pos:end="35:67">niov</name></name></expr></argument>,

                                      <argument pos:start="37:39" pos:end="37:42"><expr pos:start="37:39" pos:end="37:42"><name pos:start="37:39" pos:end="37:42">NULL</name></expr></argument>)</argument_list></call> <operator pos:start="37:45" pos:end="37:45">&lt;</operator> <literal type="number" pos:start="37:47" pos:end="37:47">0</literal></expr>)</condition> <block pos:start="37:50" pos:end="43:13">{<block_content pos:start="39:17" pos:end="41:31">

                <expr_stmt pos:start="39:17" pos:end="39:27"><expr pos:start="39:17" pos:end="39:26"><name pos:start="39:17" pos:end="39:19">ret</name> <operator pos:start="39:21" pos:end="39:21">=</operator> <operator pos:start="39:23" pos:end="39:23">-</operator><name pos:start="39:24" pos:end="39:26">EIO</name></expr>;</expr_stmt>

                <expr_stmt pos:start="41:17" pos:end="41:31"><expr pos:start="41:17" pos:end="41:30"><name pos:start="41:17" pos:end="41:23"><name pos:start="41:17" pos:end="41:17">s</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:23">quit</name></name> <operator pos:start="41:25" pos:end="41:25">=</operator> <name pos:start="41:27" pos:end="41:30">true</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="49:9" pos:end="49:60">/* Tell the read handler to read another header.  */</comment>

        <expr_stmt pos:start="51:9" pos:end="51:28"><expr pos:start="51:9" pos:end="51:27"><name pos:start="51:9" pos:end="51:23"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:16">reply</name><operator pos:start="51:17" pos:end="51:17">.</operator><name pos:start="51:18" pos:end="51:23">handle</name></name> <operator pos:start="51:25" pos:end="51:25">=</operator> <literal type="number" pos:start="51:27" pos:end="51:27">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:36"><expr pos:start="57:5" pos:end="57:35"><name pos:start="57:5" pos:end="57:18"><name pos:start="57:5" pos:end="57:5">s</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:15">requests</name><index pos:start="57:16" pos:end="57:18">[<expr pos:start="57:17" pos:end="57:17"><name pos:start="57:17" pos:end="57:17">i</name></expr>]</index></name><operator pos:start="57:19" pos:end="57:19">.</operator><name pos:start="57:20" pos:end="57:28">coroutine</name> <operator pos:start="57:30" pos:end="57:30">=</operator> <name pos:start="57:32" pos:end="57:35">NULL</name></expr>;</expr_stmt>



    <comment type="block" pos:start="61:5" pos:end="61:56">/* Kick the read_reply_co to get the next reply.  */</comment>

    <if_stmt pos:start="63:5" pos:end="67:5"><if pos:start="63:5" pos:end="67:5">if <condition pos:start="63:8" pos:end="63:25">(<expr pos:start="63:9" pos:end="63:24"><name pos:start="63:9" pos:end="63:24"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:24">read_reply_co</name></name></expr>)</condition> <block pos:start="63:27" pos:end="67:5">{<block_content pos:start="65:9" pos:end="65:38">

        <expr_stmt pos:start="65:9" pos:end="65:38"><expr pos:start="65:9" pos:end="65:37"><call pos:start="65:9" pos:end="65:37"><name pos:start="65:9" pos:end="65:19">aio_co_wake</name><argument_list pos:start="65:20" pos:end="65:37">(<argument pos:start="65:21" pos:end="65:36"><expr pos:start="65:21" pos:end="65:36"><name pos:start="65:21" pos:end="65:36"><name pos:start="65:21" pos:end="65:21">s</name><operator pos:start="65:22" pos:end="65:23">-&gt;</operator><name pos:start="65:24" pos:end="65:36">read_reply_co</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:39"><expr pos:start="71:5" pos:end="71:38"><call pos:start="71:5" pos:end="71:38"><name pos:start="71:5" pos:end="71:22">qemu_co_mutex_lock</name><argument_list pos:start="71:23" pos:end="71:38">(<argument pos:start="71:24" pos:end="71:37"><expr pos:start="71:24" pos:end="71:37"><operator pos:start="71:24" pos:end="71:24">&amp;</operator><name pos:start="71:25" pos:end="71:37"><name pos:start="71:25" pos:end="71:25">s</name><operator pos:start="71:26" pos:end="71:27">-&gt;</operator><name pos:start="71:28" pos:end="71:37">send_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:19"><expr pos:start="73:5" pos:end="73:18"><name pos:start="73:5" pos:end="73:16"><name pos:start="73:5" pos:end="73:5">s</name><operator pos:start="73:6" pos:end="73:7">-&gt;</operator><name pos:start="73:8" pos:end="73:16">in_flight</name></name><operator pos:start="73:17" pos:end="73:18">--</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:38"><expr pos:start="75:5" pos:end="75:37"><call pos:start="75:5" pos:end="75:37"><name pos:start="75:5" pos:end="75:22">qemu_co_queue_next</name><argument_list pos:start="75:23" pos:end="75:37">(<argument pos:start="75:24" pos:end="75:36"><expr pos:start="75:24" pos:end="75:36"><operator pos:start="75:24" pos:end="75:24">&amp;</operator><name pos:start="75:25" pos:end="75:36"><name pos:start="75:25" pos:end="75:25">s</name><operator pos:start="75:26" pos:end="75:27">-&gt;</operator><name pos:start="75:28" pos:end="75:36">free_sema</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:41"><expr pos:start="77:5" pos:end="77:40"><call pos:start="77:5" pos:end="77:40"><name pos:start="77:5" pos:end="77:24">qemu_co_mutex_unlock</name><argument_list pos:start="77:25" pos:end="77:40">(<argument pos:start="77:26" pos:end="77:39"><expr pos:start="77:26" pos:end="77:39"><operator pos:start="77:26" pos:end="77:26">&amp;</operator><name pos:start="77:27" pos:end="77:39"><name pos:start="77:27" pos:end="77:27">s</name><operator pos:start="77:28" pos:end="77:29">-&gt;</operator><name pos:start="77:30" pos:end="77:39">send_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="81:5" pos:end="81:15">return <expr pos:start="81:12" pos:end="81:14"><name pos:start="81:12" pos:end="81:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
