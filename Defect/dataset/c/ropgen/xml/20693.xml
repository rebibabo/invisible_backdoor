<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20693.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:23">BlockDriverAIOCB</name> <modifier pos:start="1:25" pos:end="1:25">*</modifier></type><name pos:start="1:26" pos:end="1:43">bdrv_aio_rw_vector</name><parameter_list pos:start="1:44" pos:end="13:57">(<parameter pos:start="1:45" pos:end="1:64"><decl pos:start="1:45" pos:end="1:64"><type pos:start="1:45" pos:end="1:64"><name pos:start="1:45" pos:end="1:60">BlockDriverState</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:64">bs</name></decl></parameter>,

                                            <parameter pos:start="3:45" pos:end="3:62"><decl pos:start="3:45" pos:end="3:62"><type pos:start="3:45" pos:end="3:62"><name pos:start="3:45" pos:end="3:51">int64_t</name></type> <name pos:start="3:53" pos:end="3:62">sector_num</name></decl></parameter>,

                                            <parameter pos:start="5:45" pos:end="5:62"><decl pos:start="5:45" pos:end="5:62"><type pos:start="5:45" pos:end="5:62"><name pos:start="5:45" pos:end="5:56">QEMUIOVector</name> <modifier pos:start="5:58" pos:end="5:58">*</modifier></type><name pos:start="5:59" pos:end="5:62">qiov</name></decl></parameter>,

                                            <parameter pos:start="7:45" pos:end="7:58"><decl pos:start="7:45" pos:end="7:58"><type pos:start="7:45" pos:end="7:58"><name pos:start="7:45" pos:end="7:47">int</name></type> <name pos:start="7:49" pos:end="7:58">nb_sectors</name></decl></parameter>,

                                            <parameter pos:start="9:45" pos:end="9:73"><decl pos:start="9:45" pos:end="9:73"><type pos:start="9:45" pos:end="9:73"><name pos:start="9:45" pos:end="9:69">BlockDriverCompletionFunc</name> <modifier pos:start="9:71" pos:end="9:71">*</modifier></type><name pos:start="9:72" pos:end="9:73">cb</name></decl></parameter>,

                                            <parameter pos:start="11:45" pos:end="11:56"><decl pos:start="11:45" pos:end="11:56"><type pos:start="11:45" pos:end="11:56"><name pos:start="11:45" pos:end="11:48">void</name> <modifier pos:start="11:50" pos:end="11:50">*</modifier></type><name pos:start="11:51" pos:end="11:56">opaque</name></decl></parameter>,

                                            <parameter pos:start="13:45" pos:end="13:56"><decl pos:start="13:45" pos:end="13:56"><type pos:start="13:45" pos:end="13:56"><name pos:start="13:45" pos:end="13:47">int</name></type> <name pos:start="13:49" pos:end="13:56">is_write</name></decl></parameter>)</parameter_list>



<block pos:start="17:1" pos:end="55:1">{<block_content pos:start="19:5" pos:end="53:24">

    <decl_stmt pos:start="19:5" pos:end="19:30"><decl pos:start="19:5" pos:end="19:29"><type pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:24">BlockDriverAIOCBSync</name> <modifier pos:start="19:26" pos:end="19:26">*</modifier></type><name pos:start="19:27" pos:end="19:29">acb</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:60"><expr pos:start="23:5" pos:end="23:59"><name pos:start="23:5" pos:end="23:7">acb</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:59"><name pos:start="23:11" pos:end="23:22">qemu_aio_get</name><argument_list pos:start="23:23" pos:end="23:59">(<argument pos:start="23:24" pos:end="23:42"><expr pos:start="23:24" pos:end="23:42"><operator pos:start="23:24" pos:end="23:24">&amp;</operator><name pos:start="23:25" pos:end="23:42">bdrv_em_aiocb_info</name></expr></argument>, <argument pos:start="23:45" pos:end="23:46"><expr pos:start="23:45" pos:end="23:46"><name pos:start="23:45" pos:end="23:46">bs</name></expr></argument>, <argument pos:start="23:49" pos:end="23:50"><expr pos:start="23:49" pos:end="23:50"><name pos:start="23:49" pos:end="23:50">cb</name></expr></argument>, <argument pos:start="23:53" pos:end="23:58"><expr pos:start="23:53" pos:end="23:58"><name pos:start="23:53" pos:end="23:58">opaque</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:29"><expr pos:start="25:5" pos:end="25:28"><name pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:7">acb</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:17">is_write</name></name> <operator pos:start="25:19" pos:end="25:19">=</operator> <name pos:start="25:21" pos:end="25:28">is_write</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:21"><expr pos:start="27:5" pos:end="27:20"><name pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:7">acb</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:13">qiov</name></name> <operator pos:start="27:15" pos:end="27:15">=</operator> <name pos:start="27:17" pos:end="27:20">qiov</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:50"><expr pos:start="29:5" pos:end="29:49"><name pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:7">acb</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:15">bounce</name></name> <operator pos:start="29:17" pos:end="29:17">=</operator> <call pos:start="29:19" pos:end="29:49"><name pos:start="29:19" pos:end="29:33">qemu_blockalign</name><argument_list pos:start="29:34" pos:end="29:49">(<argument pos:start="29:35" pos:end="29:36"><expr pos:start="29:35" pos:end="29:36"><name pos:start="29:35" pos:end="29:36">bs</name></expr></argument>, <argument pos:start="29:39" pos:end="29:48"><expr pos:start="29:39" pos:end="29:48"><name pos:start="29:39" pos:end="29:48"><name pos:start="29:39" pos:end="29:42">qiov</name><operator pos:start="29:43" pos:end="29:44">-&gt;</operator><name pos:start="29:45" pos:end="29:48">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:72"><expr pos:start="31:5" pos:end="31:71"><name pos:start="31:5" pos:end="31:11"><name pos:start="31:5" pos:end="31:7">acb</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:11">bh</name></name> <operator pos:start="31:13" pos:end="31:13">=</operator> <call pos:start="31:15" pos:end="31:71"><name pos:start="31:15" pos:end="31:24">aio_bh_new</name><argument_list pos:start="31:25" pos:end="31:71">(<argument pos:start="31:26" pos:end="31:49"><expr pos:start="31:26" pos:end="31:49"><call pos:start="31:26" pos:end="31:49"><name pos:start="31:26" pos:end="31:45">bdrv_get_aio_context</name><argument_list pos:start="31:46" pos:end="31:49">(<argument pos:start="31:47" pos:end="31:48"><expr pos:start="31:47" pos:end="31:48"><name pos:start="31:47" pos:end="31:48">bs</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="31:52" pos:end="31:65"><expr pos:start="31:52" pos:end="31:65"><name pos:start="31:52" pos:end="31:65">bdrv_aio_bh_cb</name></expr></argument>, <argument pos:start="31:68" pos:end="31:70"><expr pos:start="31:68" pos:end="31:70"><name pos:start="31:68" pos:end="31:70">acb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="45:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:17">(<expr pos:start="35:9" pos:end="35:16"><name pos:start="35:9" pos:end="35:16">is_write</name></expr>)</condition> <block pos:start="35:19" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:80">

        <expr_stmt pos:start="37:9" pos:end="37:65"><expr pos:start="37:9" pos:end="37:64"><call pos:start="37:9" pos:end="37:64"><name pos:start="37:9" pos:end="37:25">qemu_iovec_to_buf</name><argument_list pos:start="37:26" pos:end="37:64">(<argument pos:start="37:27" pos:end="37:35"><expr pos:start="37:27" pos:end="37:35"><name pos:start="37:27" pos:end="37:35"><name pos:start="37:27" pos:end="37:29">acb</name><operator pos:start="37:30" pos:end="37:31">-&gt;</operator><name pos:start="37:32" pos:end="37:35">qiov</name></name></expr></argument>, <argument pos:start="37:38" pos:end="37:38"><expr pos:start="37:38" pos:end="37:38"><literal type="number" pos:start="37:38" pos:end="37:38">0</literal></expr></argument>, <argument pos:start="37:41" pos:end="37:51"><expr pos:start="37:41" pos:end="37:51"><name pos:start="37:41" pos:end="37:51"><name pos:start="37:41" pos:end="37:43">acb</name><operator pos:start="37:44" pos:end="37:45">-&gt;</operator><name pos:start="37:46" pos:end="37:51">bounce</name></name></expr></argument>, <argument pos:start="37:54" pos:end="37:63"><expr pos:start="37:54" pos:end="37:63"><name pos:start="37:54" pos:end="37:63"><name pos:start="37:54" pos:end="37:57">qiov</name><operator pos:start="37:58" pos:end="37:59">-&gt;</operator><name pos:start="37:60" pos:end="37:63">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:80"><expr pos:start="39:9" pos:end="39:79"><name pos:start="39:9" pos:end="39:16"><name pos:start="39:9" pos:end="39:11">acb</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:16">ret</name></name> <operator pos:start="39:18" pos:end="39:18">=</operator> <call pos:start="39:20" pos:end="39:79"><name pos:start="39:20" pos:end="39:38"><name pos:start="39:20" pos:end="39:21">bs</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:26">drv</name><operator pos:start="39:27" pos:end="39:28">-&gt;</operator><name pos:start="39:29" pos:end="39:38">bdrv_write</name></name><argument_list pos:start="39:39" pos:end="39:79">(<argument pos:start="39:40" pos:end="39:41"><expr pos:start="39:40" pos:end="39:41"><name pos:start="39:40" pos:end="39:41">bs</name></expr></argument>, <argument pos:start="39:44" pos:end="39:53"><expr pos:start="39:44" pos:end="39:53"><name pos:start="39:44" pos:end="39:53">sector_num</name></expr></argument>, <argument pos:start="39:56" pos:end="39:66"><expr pos:start="39:56" pos:end="39:66"><name pos:start="39:56" pos:end="39:66"><name pos:start="39:56" pos:end="39:58">acb</name><operator pos:start="39:59" pos:end="39:60">-&gt;</operator><name pos:start="39:61" pos:end="39:66">bounce</name></name></expr></argument>, <argument pos:start="39:69" pos:end="39:78"><expr pos:start="39:69" pos:end="39:78"><name pos:start="39:69" pos:end="39:78">nb_sectors</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="41:7" pos:end="45:5">else <block pos:start="41:12" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:79">

        <expr_stmt pos:start="43:9" pos:end="43:79"><expr pos:start="43:9" pos:end="43:78"><name pos:start="43:9" pos:end="43:16"><name pos:start="43:9" pos:end="43:11">acb</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:16">ret</name></name> <operator pos:start="43:18" pos:end="43:18">=</operator> <call pos:start="43:20" pos:end="43:78"><name pos:start="43:20" pos:end="43:37"><name pos:start="43:20" pos:end="43:21">bs</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:26">drv</name><operator pos:start="43:27" pos:end="43:28">-&gt;</operator><name pos:start="43:29" pos:end="43:37">bdrv_read</name></name><argument_list pos:start="43:38" pos:end="43:78">(<argument pos:start="43:39" pos:end="43:40"><expr pos:start="43:39" pos:end="43:40"><name pos:start="43:39" pos:end="43:40">bs</name></expr></argument>, <argument pos:start="43:43" pos:end="43:52"><expr pos:start="43:43" pos:end="43:52"><name pos:start="43:43" pos:end="43:52">sector_num</name></expr></argument>, <argument pos:start="43:55" pos:end="43:65"><expr pos:start="43:55" pos:end="43:65"><name pos:start="43:55" pos:end="43:65"><name pos:start="43:55" pos:end="43:57">acb</name><operator pos:start="43:58" pos:end="43:59">-&gt;</operator><name pos:start="43:60" pos:end="43:65">bounce</name></name></expr></argument>, <argument pos:start="43:68" pos:end="43:77"><expr pos:start="43:68" pos:end="43:77"><name pos:start="43:68" pos:end="43:77">nb_sectors</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:30"><expr pos:start="49:5" pos:end="49:29"><call pos:start="49:5" pos:end="49:29"><name pos:start="49:5" pos:end="49:20">qemu_bh_schedule</name><argument_list pos:start="49:21" pos:end="49:29">(<argument pos:start="49:22" pos:end="49:28"><expr pos:start="49:22" pos:end="49:28"><name pos:start="49:22" pos:end="49:28"><name pos:start="49:22" pos:end="49:24">acb</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:28">bh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="53:5" pos:end="53:24">return <expr pos:start="53:12" pos:end="53:23"><operator pos:start="53:12" pos:end="53:12">&amp;</operator><name pos:start="53:13" pos:end="53:23"><name pos:start="53:13" pos:end="53:15">acb</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:23">common</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
