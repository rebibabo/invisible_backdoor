<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18875.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">net_rx_packet</name><parameter_list pos:start="1:26" pos:end="1:72">(<parameter pos:start="1:27" pos:end="1:38"><decl pos:start="1:27" pos:end="1:38"><type pos:start="1:27" pos:end="1:38"><name pos:start="1:27" pos:end="1:30">void</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:38">opaque</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:58"><decl pos:start="1:41" pos:end="1:58"><type pos:start="1:41" pos:end="1:58"><specifier pos:start="1:41" pos:end="1:45">const</specifier> <name pos:start="1:47" pos:end="1:53">uint8_t</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:58">buf</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:71"><decl pos:start="1:61" pos:end="1:71"><type pos:start="1:61" pos:end="1:71"><name pos:start="1:61" pos:end="1:66">size_t</name></type> <name pos:start="1:68" pos:end="1:71">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="79:1">{<block_content pos:start="5:5" pos:end="77:75">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:20">XenNetDev</name></name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:28">netdev</name> <init pos:start="5:30" pos:end="5:37">= <expr pos:start="5:32" pos:end="5:37"><name pos:start="5:32" pos:end="5:37">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:22">netif_rx_request_t</name></type> <name pos:start="7:24" pos:end="7:28">rxreq</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">RING_IDX</name></type> <name pos:start="9:14" pos:end="9:15">rc</name></decl>, <decl pos:start="9:18" pos:end="9:19"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:18" pos:end="9:19">rp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">void</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:14">page</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:15"><if pos:start="15:5" pos:end="17:15">if <condition pos:start="15:8" pos:end="15:56">(<expr pos:start="15:9" pos:end="15:55"><name pos:start="15:9" pos:end="15:31"><name pos:start="15:9" pos:end="15:14">netdev</name><operator pos:start="15:15" pos:end="15:16">-&gt;</operator><name pos:start="15:17" pos:end="15:22">xendev</name><operator pos:start="15:23" pos:end="15:23">.</operator><name pos:start="15:24" pos:end="15:31">be_state</name></name> <operator pos:start="15:33" pos:end="15:34">!=</operator> <name pos:start="15:36" pos:end="15:55">XenbusStateConnected</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:15"><block_content pos:start="17:9" pos:end="17:15">

	<return pos:start="17:9" pos:end="17:15">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:34"><expr pos:start="21:5" pos:end="21:33"><name pos:start="21:5" pos:end="21:6">rc</name> <operator pos:start="21:8" pos:end="21:8">=</operator> <name pos:start="21:10" pos:end="21:33"><name pos:start="21:10" pos:end="21:15">netdev</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:24">rx_ring</name><operator pos:start="21:25" pos:end="21:25">.</operator><name pos:start="21:26" pos:end="21:33">req_cons</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:41"><expr pos:start="23:5" pos:end="23:40"><name pos:start="23:5" pos:end="23:6">rp</name> <operator pos:start="23:8" pos:end="23:8">=</operator> <name pos:start="23:10" pos:end="23:40"><name pos:start="23:10" pos:end="23:15">netdev</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:24">rx_ring</name><operator pos:start="23:25" pos:end="23:25">.</operator><name pos:start="23:26" pos:end="23:30">sring</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name pos:start="23:33" pos:end="23:40">req_prod</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:14"><expr pos:start="25:5" pos:end="25:13"><call pos:start="25:5" pos:end="25:13"><name pos:start="25:5" pos:end="25:11">xen_rmb</name><argument_list pos:start="25:12" pos:end="25:13">()</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="25:16" pos:end="25:62">/* Ensure we see queued requests up to 'rp'. */</comment>



    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:69">(<expr pos:start="29:9" pos:end="29:68"><name pos:start="29:9" pos:end="29:10">rc</name> <operator pos:start="29:12" pos:end="29:13">==</operator> <name pos:start="29:15" pos:end="29:16">rp</name> <operator pos:start="29:18" pos:end="29:19">||</operator> <call pos:start="29:21" pos:end="29:68"><name pos:start="29:21" pos:end="29:46">RING_REQUEST_CONS_OVERFLOW</name><argument_list pos:start="29:47" pos:end="29:68">(<argument pos:start="29:48" pos:end="29:63"><expr pos:start="29:48" pos:end="29:63"><operator pos:start="29:48" pos:end="29:48">&amp;</operator><name pos:start="29:49" pos:end="29:63"><name pos:start="29:49" pos:end="29:54">netdev</name><operator pos:start="29:55" pos:end="29:56">-&gt;</operator><name pos:start="29:57" pos:end="29:63">rx_ring</name></name></expr></argument>, <argument pos:start="29:66" pos:end="29:67"><expr pos:start="29:66" pos:end="29:67"><name pos:start="29:66" pos:end="29:67">rc</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:71" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:15">

	<expr_stmt pos:start="31:9" pos:end="31:70"><expr pos:start="31:9" pos:end="31:69"><call pos:start="31:9" pos:end="31:69"><name pos:start="31:9" pos:end="31:21">xen_be_printf</name><argument_list pos:start="31:22" pos:end="31:69">(<argument pos:start="31:23" pos:end="31:37"><expr pos:start="31:23" pos:end="31:37"><operator pos:start="31:23" pos:end="31:23">&amp;</operator><name pos:start="31:24" pos:end="31:37"><name pos:start="31:24" pos:end="31:29">netdev</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:37">xendev</name></name></expr></argument>, <argument pos:start="31:40" pos:end="31:40"><expr pos:start="31:40" pos:end="31:40"><literal type="number" pos:start="31:40" pos:end="31:40">2</literal></expr></argument>, <argument pos:start="31:43" pos:end="31:68"><expr pos:start="31:43" pos:end="31:68"><literal type="string" pos:start="31:43" pos:end="31:68">"no buffer, drop packet\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return pos:start="33:9" pos:end="33:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="45:5"><if pos:start="37:5" pos:end="45:5">if <condition pos:start="37:8" pos:end="37:43">(<expr pos:start="37:9" pos:end="37:42"><name pos:start="37:9" pos:end="37:12">size</name> <operator pos:start="37:14" pos:end="37:14">&gt;</operator> <name pos:start="37:16" pos:end="37:27">XC_PAGE_SIZE</name> <operator pos:start="37:29" pos:end="37:29">-</operator> <name pos:start="37:31" pos:end="37:42">NET_IP_ALIGN</name></expr>)</condition> <block pos:start="37:45" pos:end="45:5">{<block_content pos:start="39:9" pos:end="43:15">

	<expr_stmt pos:start="39:9" pos:end="41:72"><expr pos:start="39:9" pos:end="41:71"><call pos:start="39:9" pos:end="41:71"><name pos:start="39:9" pos:end="39:21">xen_be_printf</name><argument_list pos:start="39:22" pos:end="41:71">(<argument pos:start="39:23" pos:end="39:37"><expr pos:start="39:23" pos:end="39:37"><operator pos:start="39:23" pos:end="39:23">&amp;</operator><name pos:start="39:24" pos:end="39:37"><name pos:start="39:24" pos:end="39:29">netdev</name><operator pos:start="39:30" pos:end="39:31">-&gt;</operator><name pos:start="39:32" pos:end="39:37">xendev</name></name></expr></argument>, <argument pos:start="39:40" pos:end="39:40"><expr pos:start="39:40" pos:end="39:40"><literal type="number" pos:start="39:40" pos:end="39:40">0</literal></expr></argument>, <argument pos:start="39:43" pos:end="39:70"><expr pos:start="39:43" pos:end="39:70"><literal type="string" pos:start="39:43" pos:end="39:70">"packet too big (%lu &gt; %ld)"</literal></expr></argument>,

		      <argument pos:start="41:23" pos:end="41:41"><expr pos:start="41:23" pos:end="41:41"><operator pos:start="41:23" pos:end="41:23">(</operator><name pos:start="41:24" pos:end="41:31">unsigned</name> <name pos:start="41:33" pos:end="41:36">long</name><operator pos:start="41:37" pos:end="41:37">)</operator><name pos:start="41:38" pos:end="41:41">size</name></expr></argument>, <argument pos:start="41:44" pos:end="41:70"><expr pos:start="41:44" pos:end="41:70"><name pos:start="41:44" pos:end="41:55">XC_PAGE_SIZE</name> <operator pos:start="41:57" pos:end="41:57">-</operator> <name pos:start="41:59" pos:end="41:70">NET_IP_ALIGN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return pos:start="43:9" pos:end="43:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:74"><expr pos:start="49:5" pos:end="49:73"><call pos:start="49:5" pos:end="49:73"><name pos:start="49:5" pos:end="49:10">memcpy</name><argument_list pos:start="49:11" pos:end="49:73">(<argument pos:start="49:12" pos:end="49:17"><expr pos:start="49:12" pos:end="49:17"><operator pos:start="49:12" pos:end="49:12">&amp;</operator><name pos:start="49:13" pos:end="49:17">rxreq</name></expr></argument>, <argument pos:start="49:20" pos:end="49:57"><expr pos:start="49:20" pos:end="49:57"><call pos:start="49:20" pos:end="49:57"><name pos:start="49:20" pos:end="49:35">RING_GET_REQUEST</name><argument_list pos:start="49:36" pos:end="49:57">(<argument pos:start="49:37" pos:end="49:52"><expr pos:start="49:37" pos:end="49:52"><operator pos:start="49:37" pos:end="49:37">&amp;</operator><name pos:start="49:38" pos:end="49:52"><name pos:start="49:38" pos:end="49:43">netdev</name><operator pos:start="49:44" pos:end="49:45">-&gt;</operator><name pos:start="49:46" pos:end="49:52">rx_ring</name></name></expr></argument>, <argument pos:start="49:55" pos:end="49:56"><expr pos:start="49:55" pos:end="49:56"><name pos:start="49:55" pos:end="49:56">rc</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="49:60" pos:end="49:72"><expr pos:start="49:60" pos:end="49:72"><sizeof pos:start="49:60" pos:end="49:72">sizeof<argument_list pos:start="49:66" pos:end="49:72">(<argument pos:start="49:67" pos:end="49:71"><expr pos:start="49:67" pos:end="49:71"><name pos:start="49:67" pos:end="49:71">rxreq</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:36"><expr pos:start="51:5" pos:end="51:35"><name pos:start="51:5" pos:end="51:28"><name pos:start="51:5" pos:end="51:10">netdev</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:19">rx_ring</name><operator pos:start="51:20" pos:end="51:20">.</operator><name pos:start="51:21" pos:end="51:28">req_cons</name></name> <operator pos:start="51:30" pos:end="51:30">=</operator> <operator pos:start="51:32" pos:end="51:33">++</operator><name pos:start="51:34" pos:end="51:35">rc</name></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="59:59"><expr pos:start="55:5" pos:end="59:58"><name pos:start="55:5" pos:end="55:8">page</name> <operator pos:start="55:10" pos:end="55:10">=</operator> <call pos:start="55:12" pos:end="59:58"><name pos:start="55:12" pos:end="55:34">xc_gnttab_map_grant_ref</name><argument_list pos:start="55:35" pos:end="59:58">(<argument pos:start="55:36" pos:end="55:59"><expr pos:start="55:36" pos:end="55:59"><name pos:start="55:36" pos:end="55:59"><name pos:start="55:36" pos:end="55:41">netdev</name><operator pos:start="55:42" pos:end="55:43">-&gt;</operator><name pos:start="55:44" pos:end="55:49">xendev</name><operator pos:start="55:50" pos:end="55:50">.</operator><name pos:start="55:51" pos:end="55:59">gnttabdev</name></name></expr></argument>,

				   <argument pos:start="57:36" pos:end="57:53"><expr pos:start="57:36" pos:end="57:53"><name pos:start="57:36" pos:end="57:53"><name pos:start="57:36" pos:end="57:41">netdev</name><operator pos:start="57:42" pos:end="57:43">-&gt;</operator><name pos:start="57:44" pos:end="57:49">xendev</name><operator pos:start="57:50" pos:end="57:50">.</operator><name pos:start="57:51" pos:end="57:53">dom</name></name></expr></argument>,

				   <argument pos:start="59:36" pos:end="59:45"><expr pos:start="59:36" pos:end="59:45"><name pos:start="59:36" pos:end="59:45"><name pos:start="59:36" pos:end="59:40">rxreq</name><operator pos:start="59:41" pos:end="59:41">.</operator><name pos:start="59:42" pos:end="59:45">gref</name></name></expr></argument>, <argument pos:start="59:48" pos:end="59:57"><expr pos:start="59:48" pos:end="59:57"><name pos:start="59:48" pos:end="59:57">PROT_WRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="71:5"><if pos:start="61:5" pos:end="71:5">if <condition pos:start="61:8" pos:end="61:21">(<expr pos:start="61:9" pos:end="61:20"><name pos:start="61:9" pos:end="61:12">page</name> <operator pos:start="61:14" pos:end="61:15">==</operator> <name pos:start="61:17" pos:end="61:20">NULL</name></expr>)</condition> <block pos:start="61:23" pos:end="71:5">{<block_content pos:start="63:9" pos:end="69:15">

	<expr_stmt pos:start="63:9" pos:end="65:34"><expr pos:start="63:9" pos:end="65:33"><call pos:start="63:9" pos:end="65:33"><name pos:start="63:9" pos:end="63:21">xen_be_printf</name><argument_list pos:start="63:22" pos:end="65:33">(<argument pos:start="63:23" pos:end="63:37"><expr pos:start="63:23" pos:end="63:37"><operator pos:start="63:23" pos:end="63:23">&amp;</operator><name pos:start="63:24" pos:end="63:37"><name pos:start="63:24" pos:end="63:29">netdev</name><operator pos:start="63:30" pos:end="63:31">-&gt;</operator><name pos:start="63:32" pos:end="63:37">xendev</name></name></expr></argument>, <argument pos:start="63:40" pos:end="63:40"><expr pos:start="63:40" pos:end="63:40"><literal type="number" pos:start="63:40" pos:end="63:40">0</literal></expr></argument>, <argument pos:start="63:43" pos:end="63:84"><expr pos:start="63:43" pos:end="63:84"><literal type="string" pos:start="63:43" pos:end="63:84">"error: rx gref dereference failed (%d)\n"</literal></expr></argument>,

                      <argument pos:start="65:23" pos:end="65:32"><expr pos:start="65:23" pos:end="65:32"><name pos:start="65:23" pos:end="65:32"><name pos:start="65:23" pos:end="65:27">rxreq</name><operator pos:start="65:28" pos:end="65:28">.</operator><name pos:start="65:29" pos:end="65:32">gref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="67:9" pos:end="67:66"><expr pos:start="67:9" pos:end="67:65"><call pos:start="67:9" pos:end="67:65"><name pos:start="67:9" pos:end="67:23">net_rx_response</name><argument_list pos:start="67:24" pos:end="67:65">(<argument pos:start="67:25" pos:end="67:30"><expr pos:start="67:25" pos:end="67:30"><name pos:start="67:25" pos:end="67:30">netdev</name></expr></argument>, <argument pos:start="67:33" pos:end="67:38"><expr pos:start="67:33" pos:end="67:38"><operator pos:start="67:33" pos:end="67:33">&amp;</operator><name pos:start="67:34" pos:end="67:38">rxreq</name></expr></argument>, <argument pos:start="67:41" pos:end="67:55"><expr pos:start="67:41" pos:end="67:55"><name pos:start="67:41" pos:end="67:55">NETIF_RSP_ERROR</name></expr></argument>, <argument pos:start="67:58" pos:end="67:58"><expr pos:start="67:58" pos:end="67:58"><literal type="number" pos:start="67:58" pos:end="67:58">0</literal></expr></argument>, <argument pos:start="67:61" pos:end="67:61"><expr pos:start="67:61" pos:end="67:61"><literal type="number" pos:start="67:61" pos:end="67:61">0</literal></expr></argument>, <argument pos:start="67:64" pos:end="67:64"><expr pos:start="67:64" pos:end="67:64"><literal type="number" pos:start="67:64" pos:end="67:64">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return pos:start="69:9" pos:end="69:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:43"><expr pos:start="73:5" pos:end="73:42"><call pos:start="73:5" pos:end="73:42"><name pos:start="73:5" pos:end="73:10">memcpy</name><argument_list pos:start="73:11" pos:end="73:42">(<argument pos:start="73:12" pos:end="73:30"><expr pos:start="73:12" pos:end="73:30"><name pos:start="73:12" pos:end="73:15">page</name> <operator pos:start="73:17" pos:end="73:17">+</operator> <name pos:start="73:19" pos:end="73:30">NET_IP_ALIGN</name></expr></argument>, <argument pos:start="73:33" pos:end="73:35"><expr pos:start="73:33" pos:end="73:35"><name pos:start="73:33" pos:end="73:35">buf</name></expr></argument>, <argument pos:start="73:38" pos:end="73:41"><expr pos:start="73:38" pos:end="73:41"><name pos:start="73:38" pos:end="73:41">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:56"><expr pos:start="75:5" pos:end="75:55"><call pos:start="75:5" pos:end="75:55"><name pos:start="75:5" pos:end="75:20">xc_gnttab_munmap</name><argument_list pos:start="75:21" pos:end="75:55">(<argument pos:start="75:22" pos:end="75:45"><expr pos:start="75:22" pos:end="75:45"><name pos:start="75:22" pos:end="75:45"><name pos:start="75:22" pos:end="75:27">netdev</name><operator pos:start="75:28" pos:end="75:29">-&gt;</operator><name pos:start="75:30" pos:end="75:35">xendev</name><operator pos:start="75:36" pos:end="75:36">.</operator><name pos:start="75:37" pos:end="75:45">gnttabdev</name></name></expr></argument>, <argument pos:start="75:48" pos:end="75:51"><expr pos:start="75:48" pos:end="75:51"><name pos:start="75:48" pos:end="75:51">page</name></expr></argument>, <argument pos:start="75:54" pos:end="75:54"><expr pos:start="75:54" pos:end="75:54"><literal type="number" pos:start="75:54" pos:end="75:54">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:75"><expr pos:start="77:5" pos:end="77:74"><call pos:start="77:5" pos:end="77:74"><name pos:start="77:5" pos:end="77:19">net_rx_response</name><argument_list pos:start="77:20" pos:end="77:74">(<argument pos:start="77:21" pos:end="77:26"><expr pos:start="77:21" pos:end="77:26"><name pos:start="77:21" pos:end="77:26">netdev</name></expr></argument>, <argument pos:start="77:29" pos:end="77:34"><expr pos:start="77:29" pos:end="77:34"><operator pos:start="77:29" pos:end="77:29">&amp;</operator><name pos:start="77:30" pos:end="77:34">rxreq</name></expr></argument>, <argument pos:start="77:37" pos:end="77:50"><expr pos:start="77:37" pos:end="77:50"><name pos:start="77:37" pos:end="77:50">NETIF_RSP_OKAY</name></expr></argument>, <argument pos:start="77:53" pos:end="77:64"><expr pos:start="77:53" pos:end="77:64"><name pos:start="77:53" pos:end="77:64">NET_IP_ALIGN</name></expr></argument>, <argument pos:start="77:67" pos:end="77:70"><expr pos:start="77:67" pos:end="77:70"><name pos:start="77:67" pos:end="77:70">size</name></expr></argument>, <argument pos:start="77:73" pos:end="77:73"><expr pos:start="77:73" pos:end="77:73"><literal type="number" pos:start="77:73" pos:end="77:73">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
