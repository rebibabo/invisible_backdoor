<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13842.c" pos:tabs="8"><function pos:start="1:1" pos:end="217:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">mkv_write_trailer</name><parameter_list pos:start="1:29" pos:end="1:48">(<parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:46"><name pos:start="1:30" pos:end="1:44">AVFormatContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="217:1">{<block_content pos:start="5:5" pos:end="215:13">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:22">MatroskaMuxContext</name> <modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:27">mkv</name> <init pos:start="5:29" pos:end="5:42">= <expr pos:start="5:31" pos:end="5:42"><name pos:start="5:31" pos:end="5:42"><name pos:start="5:31" pos:end="5:31">s</name><operator pos:start="5:32" pos:end="5:33">-&gt;</operator><name pos:start="5:34" pos:end="5:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:22">currentpos</name></decl>, <decl pos:start="9:25" pos:end="9:31"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:25" pos:end="9:31">cuespos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>



    <comment type="line" pos:start="15:5" pos:end="15:46">// check if we have an audio packet cached</comment>

    <if_stmt pos:start="17:5" pos:end="33:5"><if pos:start="17:5" pos:end="33:5">if <condition pos:start="17:8" pos:end="17:36">(<expr pos:start="17:9" pos:end="17:35"><name pos:start="17:9" pos:end="17:31"><name pos:start="17:9" pos:end="17:11">mkv</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:26">cur_audio_pkt</name><operator pos:start="17:27" pos:end="17:27">.</operator><name pos:start="17:28" pos:end="17:31">size</name></name> <operator pos:start="17:33" pos:end="17:33">&gt;</operator> <literal type="number" pos:start="17:35" pos:end="17:35">0</literal></expr>)</condition> <block pos:start="17:38" pos:end="33:5">{<block_content pos:start="19:9" pos:end="31:9">

        <expr_stmt pos:start="19:9" pos:end="19:67"><expr pos:start="19:9" pos:end="19:66"><name pos:start="19:9" pos:end="19:11">ret</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:66"><name pos:start="19:15" pos:end="19:39">mkv_write_packet_internal</name><argument_list pos:start="19:40" pos:end="19:66">(<argument pos:start="19:41" pos:end="19:41"><expr pos:start="19:41" pos:end="19:41"><name pos:start="19:41" pos:end="19:41">s</name></expr></argument>, <argument pos:start="19:44" pos:end="19:62"><expr pos:start="19:44" pos:end="19:62"><operator pos:start="19:44" pos:end="19:44">&amp;</operator><name pos:start="19:45" pos:end="19:62"><name pos:start="19:45" pos:end="19:47">mkv</name><operator pos:start="19:48" pos:end="19:49">-&gt;</operator><name pos:start="19:50" pos:end="19:62">cur_audio_pkt</name></name></expr></argument>, <argument pos:start="19:65" pos:end="19:65"><expr pos:start="19:65" pos:end="19:65"><literal type="number" pos:start="19:65" pos:end="19:65">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:44"><expr pos:start="21:9" pos:end="21:43"><call pos:start="21:9" pos:end="21:43"><name pos:start="21:9" pos:end="21:22">av_free_packet</name><argument_list pos:start="21:23" pos:end="21:43">(<argument pos:start="21:24" pos:end="21:42"><expr pos:start="21:24" pos:end="21:42"><operator pos:start="21:24" pos:end="21:24">&amp;</operator><name pos:start="21:25" pos:end="21:42"><name pos:start="21:25" pos:end="21:27">mkv</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:42">cur_audio_pkt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="31:9"><if pos:start="23:9" pos:end="31:9">if <condition pos:start="23:12" pos:end="23:20">(<expr pos:start="23:13" pos:end="23:19"><name pos:start="23:13" pos:end="23:15">ret</name> <operator pos:start="23:17" pos:end="23:17">&lt;</operator> <literal type="number" pos:start="23:19" pos:end="23:19">0</literal></expr>)</condition> <block pos:start="23:22" pos:end="31:9">{<block_content pos:start="25:13" pos:end="29:23">

            <expr_stmt pos:start="25:13" pos:end="27:72"><expr pos:start="25:13" pos:end="27:71"><call pos:start="25:13" pos:end="27:71"><name pos:start="25:13" pos:end="25:18">av_log</name><argument_list pos:start="25:19" pos:end="27:71">(<argument pos:start="25:20" pos:end="25:20"><expr pos:start="25:20" pos:end="25:20"><name pos:start="25:20" pos:end="25:20">s</name></expr></argument>, <argument pos:start="25:23" pos:end="25:34"><expr pos:start="25:23" pos:end="25:34"><name pos:start="25:23" pos:end="25:34">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="27:20" pos:end="27:65"><expr pos:start="27:20" pos:end="27:65"><literal type="string" pos:start="27:20" pos:end="27:65">"Could not write cached audio packet ret:%d\n"</literal></expr></argument>, <argument pos:start="27:68" pos:end="27:70"><expr pos:start="27:68" pos:end="27:70"><name pos:start="27:68" pos:end="27:70">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="29:13" pos:end="29:23">return <expr pos:start="29:20" pos:end="29:22"><name pos:start="29:20" pos:end="29:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="47:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:20">(<expr pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:11">mkv</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:19">dyn_bc</name></name></expr>)</condition> <block pos:start="37:22" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:28">

        <expr_stmt pos:start="39:9" pos:end="39:51"><expr pos:start="39:9" pos:end="39:50"><call pos:start="39:9" pos:end="39:50"><name pos:start="39:9" pos:end="39:23">end_ebml_master</name><argument_list pos:start="39:24" pos:end="39:50">(<argument pos:start="39:25" pos:end="39:35"><expr pos:start="39:25" pos:end="39:35"><name pos:start="39:25" pos:end="39:35"><name pos:start="39:25" pos:end="39:27">mkv</name><operator pos:start="39:28" pos:end="39:29">-&gt;</operator><name pos:start="39:30" pos:end="39:35">dyn_bc</name></name></expr></argument>, <argument pos:start="39:38" pos:end="39:49"><expr pos:start="39:38" pos:end="39:49"><name pos:start="39:38" pos:end="39:49"><name pos:start="39:38" pos:end="39:40">mkv</name><operator pos:start="39:41" pos:end="39:42">-&gt;</operator><name pos:start="39:43" pos:end="39:49">cluster</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:28"><expr pos:start="41:9" pos:end="41:27"><call pos:start="41:9" pos:end="41:27"><name pos:start="41:9" pos:end="41:24">mkv_flush_dynbuf</name><argument_list pos:start="41:25" pos:end="41:27">(<argument pos:start="41:26" pos:end="41:26"><expr pos:start="41:26" pos:end="41:26"><name pos:start="41:26" pos:end="41:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="43:7" pos:end="47:5">else if <condition pos:start="43:15" pos:end="43:38">(<expr pos:start="43:16" pos:end="43:37"><name pos:start="43:16" pos:end="43:31"><name pos:start="43:16" pos:end="43:18">mkv</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:31">cluster_pos</name></name> <operator pos:start="43:33" pos:end="43:34">!=</operator> <operator pos:start="43:36" pos:end="43:36">-</operator><literal type="number" pos:start="43:37" pos:end="43:37">1</literal></expr>)</condition> <block pos:start="43:40" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:42">

        <expr_stmt pos:start="45:9" pos:end="45:42"><expr pos:start="45:9" pos:end="45:41"><call pos:start="45:9" pos:end="45:41"><name pos:start="45:9" pos:end="45:23">end_ebml_master</name><argument_list pos:start="45:24" pos:end="45:41">(<argument pos:start="45:25" pos:end="45:26"><expr pos:start="45:25" pos:end="45:26"><name pos:start="45:25" pos:end="45:26">pb</name></expr></argument>, <argument pos:start="45:29" pos:end="45:40"><expr pos:start="45:29" pos:end="45:40"><name pos:start="45:29" pos:end="45:40"><name pos:start="45:29" pos:end="45:31">mkv</name><operator pos:start="45:32" pos:end="45:33">-&gt;</operator><name pos:start="45:34" pos:end="45:40">cluster</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="59:5"><if pos:start="51:5" pos:end="59:5">if <condition pos:start="51:8" pos:end="51:31">(<expr pos:start="51:9" pos:end="51:30"><name pos:start="51:9" pos:end="51:17"><name pos:start="51:9" pos:end="51:11">mkv</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:17">mode</name></name> <operator pos:start="51:19" pos:end="51:20">!=</operator> <name pos:start="51:22" pos:end="51:30">MODE_WEBM</name></expr>)</condition> <block pos:start="51:33" pos:end="59:5">{<block_content pos:start="53:9" pos:end="57:23">

        <expr_stmt pos:start="53:9" pos:end="53:36"><expr pos:start="53:9" pos:end="53:35"><name pos:start="53:9" pos:end="53:11">ret</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <call pos:start="53:15" pos:end="53:35"><name pos:start="53:15" pos:end="53:32">mkv_write_chapters</name><argument_list pos:start="53:33" pos:end="53:35">(<argument pos:start="53:34" pos:end="53:34"><expr pos:start="53:34" pos:end="53:34"><name pos:start="53:34" pos:end="53:34">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="57:23"><if pos:start="55:9" pos:end="57:23">if <condition pos:start="55:12" pos:end="55:20">(<expr pos:start="55:13" pos:end="55:19"><name pos:start="55:13" pos:end="55:15">ret</name> <operator pos:start="55:17" pos:end="55:17">&lt;</operator> <literal type="number" pos:start="55:19" pos:end="55:19">0</literal></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:23"><block_content pos:start="57:13" pos:end="57:23">

            <return pos:start="57:13" pos:end="57:23">return <expr pos:start="57:20" pos:end="57:22"><name pos:start="57:20" pos:end="57:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="63:5" pos:end="193:5"><if pos:start="63:5" pos:end="193:5">if <condition pos:start="63:8" pos:end="63:21">(<expr pos:start="63:9" pos:end="63:20"><name pos:start="63:9" pos:end="63:20"><name pos:start="63:9" pos:end="63:10">pb</name><operator pos:start="63:11" pos:end="63:12">-&gt;</operator><name pos:start="63:13" pos:end="63:20">seekable</name></name></expr>)</condition> <block pos:start="63:23" pos:end="193:5">{<block_content pos:start="65:9" pos:end="191:44">

        <if_stmt pos:start="65:9" pos:end="125:9"><if pos:start="65:9" pos:end="125:9">if <condition pos:start="65:12" pos:end="65:35">(<expr pos:start="65:13" pos:end="65:34"><name pos:start="65:13" pos:end="65:34"><name pos:start="65:13" pos:end="65:15">mkv</name><operator pos:start="65:16" pos:end="65:17">-&gt;</operator><name pos:start="65:18" pos:end="65:21">cues</name><operator pos:start="65:22" pos:end="65:23">-&gt;</operator><name pos:start="65:24" pos:end="65:34">num_entries</name></name></expr>)</condition> <block pos:start="65:37" pos:end="125:9">{<block_content pos:start="67:13" pos:end="123:27">

            <if_stmt pos:start="67:13" pos:end="113:13"><if pos:start="67:13" pos:end="109:13">if <condition pos:start="67:16" pos:end="67:40">(<expr pos:start="67:17" pos:end="67:39"><name pos:start="67:17" pos:end="67:39"><name pos:start="67:17" pos:end="67:19">mkv</name><operator pos:start="67:20" pos:end="67:21">-&gt;</operator><name pos:start="67:22" pos:end="67:39">reserve_cues_space</name></name></expr>)</condition> <block pos:start="67:42" pos:end="109:13">{<block_content pos:start="69:17" pos:end="107:52">

                <decl_stmt pos:start="69:17" pos:end="69:33"><decl pos:start="69:17" pos:end="69:32"><type pos:start="69:17" pos:end="69:23"><name pos:start="69:17" pos:end="69:23">int64_t</name></type> <name pos:start="69:25" pos:end="69:32">cues_end</name></decl>;</decl_stmt>



                <expr_stmt pos:start="73:17" pos:end="73:43"><expr pos:start="73:17" pos:end="73:42"><name pos:start="73:17" pos:end="73:26">currentpos</name> <operator pos:start="73:28" pos:end="73:28">=</operator> <call pos:start="73:30" pos:end="73:42"><name pos:start="73:30" pos:end="73:38">avio_tell</name><argument_list pos:start="73:39" pos:end="73:42">(<argument pos:start="73:40" pos:end="73:41"><expr pos:start="73:40" pos:end="73:41"><name pos:start="73:40" pos:end="73:41">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="75:17" pos:end="75:55"><expr pos:start="75:17" pos:end="75:54"><call pos:start="75:17" pos:end="75:54"><name pos:start="75:17" pos:end="75:25">avio_seek</name><argument_list pos:start="75:26" pos:end="75:54">(<argument pos:start="75:27" pos:end="75:28"><expr pos:start="75:27" pos:end="75:28"><name pos:start="75:27" pos:end="75:28">pb</name></expr></argument>, <argument pos:start="75:31" pos:end="75:43"><expr pos:start="75:31" pos:end="75:43"><name pos:start="75:31" pos:end="75:43"><name pos:start="75:31" pos:end="75:33">mkv</name><operator pos:start="75:34" pos:end="75:35">-&gt;</operator><name pos:start="75:36" pos:end="75:43">cues_pos</name></name></expr></argument>, <argument pos:start="75:46" pos:end="75:53"><expr pos:start="75:46" pos:end="75:53"><name pos:start="75:46" pos:end="75:53">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="79:17" pos:end="79:84"><expr pos:start="79:17" pos:end="79:83"><name pos:start="79:17" pos:end="79:23">cuespos</name>  <operator pos:start="79:26" pos:end="79:26">=</operator> <call pos:start="79:28" pos:end="79:83"><name pos:start="79:28" pos:end="79:41">mkv_write_cues</name><argument_list pos:start="79:42" pos:end="79:83">(<argument pos:start="79:43" pos:end="79:43"><expr pos:start="79:43" pos:end="79:43"><name pos:start="79:43" pos:end="79:43">s</name></expr></argument>, <argument pos:start="79:46" pos:end="79:54"><expr pos:start="79:46" pos:end="79:54"><name pos:start="79:46" pos:end="79:54"><name pos:start="79:46" pos:end="79:48">mkv</name><operator pos:start="79:49" pos:end="79:50">-&gt;</operator><name pos:start="79:51" pos:end="79:54">cues</name></name></expr></argument>, <argument pos:start="79:57" pos:end="79:67"><expr pos:start="79:57" pos:end="79:67"><name pos:start="79:57" pos:end="79:67"><name pos:start="79:57" pos:end="79:59">mkv</name><operator pos:start="79:60" pos:end="79:61">-&gt;</operator><name pos:start="79:62" pos:end="79:67">tracks</name></name></expr></argument>, <argument pos:start="79:70" pos:end="79:82"><expr pos:start="79:70" pos:end="79:82"><name pos:start="79:70" pos:end="79:82"><name pos:start="79:70" pos:end="79:70">s</name><operator pos:start="79:71" pos:end="79:72">-&gt;</operator><name pos:start="79:73" pos:end="79:82">nb_streams</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="81:17" pos:end="81:41"><expr pos:start="81:17" pos:end="81:40"><name pos:start="81:17" pos:end="81:24">cues_end</name> <operator pos:start="81:26" pos:end="81:26">=</operator> <call pos:start="81:28" pos:end="81:40"><name pos:start="81:28" pos:end="81:36">avio_tell</name><argument_list pos:start="81:37" pos:end="81:40">(<argument pos:start="81:38" pos:end="81:39"><expr pos:start="81:38" pos:end="81:39"><name pos:start="81:38" pos:end="81:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="83:17" pos:end="95:17"><if pos:start="83:17" pos:end="95:17">if <condition pos:start="83:20" pos:end="83:65">(<expr pos:start="83:21" pos:end="83:64"><name pos:start="83:21" pos:end="83:28">cues_end</name> <operator pos:start="83:30" pos:end="83:30">&gt;</operator> <name pos:start="83:32" pos:end="83:38">cuespos</name> <operator pos:start="83:40" pos:end="83:40">+</operator> <name pos:start="83:42" pos:end="83:64"><name pos:start="83:42" pos:end="83:44">mkv</name><operator pos:start="83:45" pos:end="83:46">-&gt;</operator><name pos:start="83:47" pos:end="83:64">reserve_cues_space</name></name></expr>)</condition> <block pos:start="83:67" pos:end="95:17">{<block_content pos:start="85:21" pos:end="93:43">

                    <expr_stmt pos:start="85:21" pos:end="91:72"><expr pos:start="85:21" pos:end="91:71"><call pos:start="85:21" pos:end="91:71"><name pos:start="85:21" pos:end="85:26">av_log</name><argument_list pos:start="85:27" pos:end="91:71">(<argument pos:start="85:28" pos:end="85:28"><expr pos:start="85:28" pos:end="85:28"><name pos:start="85:28" pos:end="85:28">s</name></expr></argument>, <argument pos:start="85:31" pos:end="85:42"><expr pos:start="85:31" pos:end="85:42"><name pos:start="85:31" pos:end="85:42">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="87:28" pos:end="89:53"><expr pos:start="87:28" pos:end="89:53"><literal type="string" pos:start="87:28" pos:end="87:70">"Insufficient space reserved for cues: %d "</literal>

                           <literal type="string" pos:start="89:28" pos:end="89:39">"(needed: %"</literal> <name pos:start="89:41" pos:end="89:46">PRId64</name> <literal type="string" pos:start="89:48" pos:end="89:53">").\n"</literal></expr></argument>,

                           <argument pos:start="91:28" pos:end="91:50"><expr pos:start="91:28" pos:end="91:50"><name pos:start="91:28" pos:end="91:50"><name pos:start="91:28" pos:end="91:30">mkv</name><operator pos:start="91:31" pos:end="91:32">-&gt;</operator><name pos:start="91:33" pos:end="91:50">reserve_cues_space</name></name></expr></argument>, <argument pos:start="91:53" pos:end="91:70"><expr pos:start="91:53" pos:end="91:70"><name pos:start="91:53" pos:end="91:60">cues_end</name> <operator pos:start="91:62" pos:end="91:62">-</operator> <name pos:start="91:64" pos:end="91:70">cuespos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="93:21" pos:end="93:43">return <expr pos:start="93:28" pos:end="93:42"><call pos:start="93:28" pos:end="93:42"><name pos:start="93:28" pos:end="93:34">AVERROR</name><argument_list pos:start="93:35" pos:end="93:42">(<argument pos:start="93:36" pos:end="93:41"><expr pos:start="93:36" pos:end="93:41"><name pos:start="93:36" pos:end="93:41">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="99:17" pos:end="103:56"><if pos:start="99:17" pos:end="103:56">if <condition pos:start="99:20" pos:end="99:65">(<expr pos:start="99:21" pos:end="99:64"><name pos:start="99:21" pos:end="99:28">cues_end</name> <operator pos:start="99:30" pos:end="99:30">&lt;</operator> <name pos:start="99:32" pos:end="99:38">cuespos</name> <operator pos:start="99:40" pos:end="99:40">+</operator> <name pos:start="99:42" pos:end="99:64"><name pos:start="99:42" pos:end="99:44">mkv</name><operator pos:start="99:45" pos:end="99:46">-&gt;</operator><name pos:start="99:47" pos:end="99:64">reserve_cues_space</name></name></expr>)</condition><block type="pseudo" pos:start="101:21" pos:end="103:56"><block_content pos:start="101:21" pos:end="103:56">

                    <expr_stmt pos:start="101:21" pos:end="103:56"><expr pos:start="101:21" pos:end="103:55"><call pos:start="101:21" pos:end="103:55"><name pos:start="101:21" pos:end="101:33">put_ebml_void</name><argument_list pos:start="101:34" pos:end="103:55">(<argument pos:start="101:35" pos:end="101:36"><expr pos:start="101:35" pos:end="101:36"><name pos:start="101:35" pos:end="101:36">pb</name></expr></argument>, <argument pos:start="101:39" pos:end="103:54"><expr pos:start="101:39" pos:end="103:54"><name pos:start="101:39" pos:end="101:61"><name pos:start="101:39" pos:end="101:41">mkv</name><operator pos:start="101:42" pos:end="101:43">-&gt;</operator><name pos:start="101:44" pos:end="101:61">reserve_cues_space</name></name> <operator pos:start="101:63" pos:end="101:63">-</operator>

                                  <operator pos:start="103:35" pos:end="103:35">(</operator><name pos:start="103:36" pos:end="103:43">cues_end</name> <operator pos:start="103:45" pos:end="103:45">-</operator> <name pos:start="103:47" pos:end="103:53">cuespos</name><operator pos:start="103:54" pos:end="103:54">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <expr_stmt pos:start="107:17" pos:end="107:52"><expr pos:start="107:17" pos:end="107:51"><call pos:start="107:17" pos:end="107:51"><name pos:start="107:17" pos:end="107:25">avio_seek</name><argument_list pos:start="107:26" pos:end="107:51">(<argument pos:start="107:27" pos:end="107:28"><expr pos:start="107:27" pos:end="107:28"><name pos:start="107:27" pos:end="107:28">pb</name></expr></argument>, <argument pos:start="107:31" pos:end="107:40"><expr pos:start="107:31" pos:end="107:40"><name pos:start="107:31" pos:end="107:40">currentpos</name></expr></argument>, <argument pos:start="107:43" pos:end="107:50"><expr pos:start="107:43" pos:end="107:50"><name pos:start="107:43" pos:end="107:50">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="109:15" pos:end="113:13">else <block pos:start="109:20" pos:end="113:13">{<block_content pos:start="111:17" pos:end="111:83">

                <expr_stmt pos:start="111:17" pos:end="111:83"><expr pos:start="111:17" pos:end="111:82"><name pos:start="111:17" pos:end="111:23">cuespos</name> <operator pos:start="111:25" pos:end="111:25">=</operator> <call pos:start="111:27" pos:end="111:82"><name pos:start="111:27" pos:end="111:40">mkv_write_cues</name><argument_list pos:start="111:41" pos:end="111:82">(<argument pos:start="111:42" pos:end="111:42"><expr pos:start="111:42" pos:end="111:42"><name pos:start="111:42" pos:end="111:42">s</name></expr></argument>, <argument pos:start="111:45" pos:end="111:53"><expr pos:start="111:45" pos:end="111:53"><name pos:start="111:45" pos:end="111:53"><name pos:start="111:45" pos:end="111:47">mkv</name><operator pos:start="111:48" pos:end="111:49">-&gt;</operator><name pos:start="111:50" pos:end="111:53">cues</name></name></expr></argument>, <argument pos:start="111:56" pos:end="111:66"><expr pos:start="111:56" pos:end="111:66"><name pos:start="111:56" pos:end="111:66"><name pos:start="111:56" pos:end="111:58">mkv</name><operator pos:start="111:59" pos:end="111:60">-&gt;</operator><name pos:start="111:61" pos:end="111:66">tracks</name></name></expr></argument>, <argument pos:start="111:69" pos:end="111:81"><expr pos:start="111:69" pos:end="111:81"><name pos:start="111:69" pos:end="111:81"><name pos:start="111:69" pos:end="111:69">s</name><operator pos:start="111:70" pos:end="111:71">-&gt;</operator><name pos:start="111:72" pos:end="111:81">nb_streams</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <expr_stmt pos:start="117:13" pos:end="119:50"><expr pos:start="117:13" pos:end="119:49"><name pos:start="117:13" pos:end="117:15">ret</name> <operator pos:start="117:17" pos:end="117:17">=</operator> <call pos:start="117:19" pos:end="119:49"><name pos:start="117:19" pos:end="117:40">mkv_add_seekhead_entry</name><argument_list pos:start="117:41" pos:end="119:49">(<argument pos:start="117:42" pos:end="117:59"><expr pos:start="117:42" pos:end="117:59"><name pos:start="117:42" pos:end="117:59"><name pos:start="117:42" pos:end="117:44">mkv</name><operator pos:start="117:45" pos:end="117:46">-&gt;</operator><name pos:start="117:47" pos:end="117:59">main_seekhead</name></name></expr></argument>, <argument pos:start="117:62" pos:end="117:77"><expr pos:start="117:62" pos:end="117:77"><name pos:start="117:62" pos:end="117:77">MATROSKA_ID_CUES</name></expr></argument>,

                                         <argument pos:start="119:42" pos:end="119:48"><expr pos:start="119:42" pos:end="119:48"><name pos:start="119:42" pos:end="119:48">cuespos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="121:13" pos:end="123:27"><if pos:start="121:13" pos:end="123:27">if <condition pos:start="121:16" pos:end="121:24">(<expr pos:start="121:17" pos:end="121:23"><name pos:start="121:17" pos:end="121:19">ret</name> <operator pos:start="121:21" pos:end="121:21">&lt;</operator> <literal type="number" pos:start="121:23" pos:end="121:23">0</literal></expr>)</condition><block type="pseudo" pos:start="123:17" pos:end="123:27"><block_content pos:start="123:17" pos:end="123:27">

                <return pos:start="123:17" pos:end="123:27">return <expr pos:start="123:24" pos:end="123:26"><name pos:start="123:24" pos:end="123:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="129:9" pos:end="129:51"><expr pos:start="129:9" pos:end="129:50"><call pos:start="129:9" pos:end="129:50"><name pos:start="129:9" pos:end="129:26">mkv_write_seekhead</name><argument_list pos:start="129:27" pos:end="129:50">(<argument pos:start="129:28" pos:end="129:29"><expr pos:start="129:28" pos:end="129:29"><name pos:start="129:28" pos:end="129:29">pb</name></expr></argument>, <argument pos:start="129:32" pos:end="129:49"><expr pos:start="129:32" pos:end="129:49"><name pos:start="129:32" pos:end="129:49"><name pos:start="129:32" pos:end="129:34">mkv</name><operator pos:start="129:35" pos:end="129:36">-&gt;</operator><name pos:start="129:37" pos:end="129:49">main_seekhead</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="line" pos:start="133:9" pos:end="133:30">// update the duration</comment>

        <expr_stmt pos:start="135:9" pos:end="135:79"><expr pos:start="135:9" pos:end="135:78"><call pos:start="135:9" pos:end="135:78"><name pos:start="135:9" pos:end="135:14">av_log</name><argument_list pos:start="135:15" pos:end="135:78">(<argument pos:start="135:16" pos:end="135:16"><expr pos:start="135:16" pos:end="135:16"><name pos:start="135:16" pos:end="135:16">s</name></expr></argument>, <argument pos:start="135:19" pos:end="135:30"><expr pos:start="135:19" pos:end="135:30"><name pos:start="135:19" pos:end="135:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="135:33" pos:end="135:62"><expr pos:start="135:33" pos:end="135:62"><literal type="string" pos:start="135:33" pos:end="135:50">"end duration = %"</literal> <name pos:start="135:52" pos:end="135:57">PRIu64</name> <literal type="string" pos:start="135:59" pos:end="135:62">"\n"</literal></expr></argument>, <argument pos:start="135:65" pos:end="135:77"><expr pos:start="135:65" pos:end="135:77"><name pos:start="135:65" pos:end="135:77"><name pos:start="135:65" pos:end="135:67">mkv</name><operator pos:start="135:68" pos:end="135:69">-&gt;</operator><name pos:start="135:70" pos:end="135:77">duration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:35"><expr pos:start="137:9" pos:end="137:34"><name pos:start="137:9" pos:end="137:18">currentpos</name> <operator pos:start="137:20" pos:end="137:20">=</operator> <call pos:start="137:22" pos:end="137:34"><name pos:start="137:22" pos:end="137:30">avio_tell</name><argument_list pos:start="137:31" pos:end="137:34">(<argument pos:start="137:32" pos:end="137:33"><expr pos:start="137:32" pos:end="137:33"><name pos:start="137:32" pos:end="137:33">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:54"><expr pos:start="139:9" pos:end="139:53"><call pos:start="139:9" pos:end="139:53"><name pos:start="139:9" pos:end="139:17">avio_seek</name><argument_list pos:start="139:18" pos:end="139:53">(<argument pos:start="139:19" pos:end="139:20"><expr pos:start="139:19" pos:end="139:20"><name pos:start="139:19" pos:end="139:20">pb</name></expr></argument>, <argument pos:start="139:23" pos:end="139:42"><expr pos:start="139:23" pos:end="139:42"><name pos:start="139:23" pos:end="139:42"><name pos:start="139:23" pos:end="139:25">mkv</name><operator pos:start="139:26" pos:end="139:27">-&gt;</operator><name pos:start="139:28" pos:end="139:42">duration_offset</name></name></expr></argument>, <argument pos:start="139:45" pos:end="139:52"><expr pos:start="139:45" pos:end="139:52"><name pos:start="139:45" pos:end="139:52">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:64"><expr pos:start="141:9" pos:end="141:63"><call pos:start="141:9" pos:end="141:63"><name pos:start="141:9" pos:end="141:22">put_ebml_float</name><argument_list pos:start="141:23" pos:end="141:63">(<argument pos:start="141:24" pos:end="141:25"><expr pos:start="141:24" pos:end="141:25"><name pos:start="141:24" pos:end="141:25">pb</name></expr></argument>, <argument pos:start="141:28" pos:end="141:47"><expr pos:start="141:28" pos:end="141:47"><name pos:start="141:28" pos:end="141:47">MATROSKA_ID_DURATION</name></expr></argument>, <argument pos:start="141:50" pos:end="141:62"><expr pos:start="141:50" pos:end="141:62"><name pos:start="141:50" pos:end="141:62"><name pos:start="141:50" pos:end="141:52">mkv</name><operator pos:start="141:53" pos:end="141:54">-&gt;</operator><name pos:start="141:55" pos:end="141:62">duration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="line" pos:start="145:9" pos:end="145:34">// update stream durations</comment>

        <if_stmt pos:start="147:9" pos:end="187:9"><if pos:start="147:9" pos:end="187:9">if <condition pos:start="147:12" pos:end="147:34">(<expr pos:start="147:13" pos:end="147:33"><name pos:start="147:13" pos:end="147:33"><name pos:start="147:13" pos:end="147:15">mkv</name><operator pos:start="147:16" pos:end="147:17">-&gt;</operator><name pos:start="147:18" pos:end="147:33">stream_durations</name></name></expr>)</condition> <block pos:start="147:36" pos:end="187:9">{<block_content pos:start="149:13" pos:end="185:13">

            <decl_stmt pos:start="149:13" pos:end="149:18"><decl pos:start="149:13" pos:end="149:17"><type pos:start="149:13" pos:end="149:15"><name pos:start="149:13" pos:end="149:15">int</name></type> <name pos:start="149:17" pos:end="149:17">i</name></decl>;</decl_stmt>

            <for pos:start="151:13" pos:end="185:13">for <control pos:start="151:17" pos:end="151:47">(<init pos:start="151:18" pos:end="151:23"><expr pos:start="151:18" pos:end="151:22"><name pos:start="151:18" pos:end="151:18">i</name> <operator pos:start="151:20" pos:end="151:20">=</operator> <literal type="number" pos:start="151:22" pos:end="151:22">0</literal></expr>;</init> <condition pos:start="151:25" pos:end="151:42"><expr pos:start="151:25" pos:end="151:41"><name pos:start="151:25" pos:end="151:25">i</name> <operator pos:start="151:27" pos:end="151:27">&lt;</operator> <name pos:start="151:29" pos:end="151:41"><name pos:start="151:29" pos:end="151:29">s</name><operator pos:start="151:30" pos:end="151:31">-&gt;</operator><name pos:start="151:32" pos:end="151:41">nb_streams</name></name></expr>;</condition> <incr pos:start="151:44" pos:end="151:46"><expr pos:start="151:44" pos:end="151:46"><operator pos:start="151:44" pos:end="151:45">++</operator><name pos:start="151:46" pos:end="151:46">i</name></expr></incr>)</control> <block pos:start="151:49" pos:end="185:13">{<block_content pos:start="153:17" pos:end="183:17">

                <decl_stmt pos:start="153:17" pos:end="153:45"><decl pos:start="153:17" pos:end="153:44"><type pos:start="153:17" pos:end="153:26"><name pos:start="153:17" pos:end="153:24">AVStream</name> <modifier pos:start="153:26" pos:end="153:26">*</modifier></type><name pos:start="153:27" pos:end="153:28">st</name> <init pos:start="153:30" pos:end="153:44">= <expr pos:start="153:32" pos:end="153:44"><name pos:start="153:32" pos:end="153:44"><name pos:start="153:32" pos:end="153:32">s</name><operator pos:start="153:33" pos:end="153:34">-&gt;</operator><name pos:start="153:35" pos:end="153:41">streams</name><index pos:start="153:42" pos:end="153:44">[<expr pos:start="153:43" pos:end="153:43"><name pos:start="153:43" pos:end="153:43">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="155:17" pos:end="155:87"><decl pos:start="155:17" pos:end="155:86"><type pos:start="155:17" pos:end="155:22"><name pos:start="155:17" pos:end="155:22">double</name></type> <name pos:start="155:24" pos:end="155:35">duration_sec</name> <init pos:start="155:37" pos:end="155:86">= <expr pos:start="155:39" pos:end="155:86"><name pos:start="155:39" pos:end="155:62"><name pos:start="155:39" pos:end="155:41">mkv</name><operator pos:start="155:42" pos:end="155:43">-&gt;</operator><name pos:start="155:44" pos:end="155:59">stream_durations</name><index pos:start="155:60" pos:end="155:62">[<expr pos:start="155:61" pos:end="155:61"><name pos:start="155:61" pos:end="155:61">i</name></expr>]</index></name> <operator pos:start="155:64" pos:end="155:64">*</operator> <call pos:start="155:66" pos:end="155:86"><name pos:start="155:66" pos:end="155:71">av_q2d</name><argument_list pos:start="155:72" pos:end="155:86">(<argument pos:start="155:73" pos:end="155:85"><expr pos:start="155:73" pos:end="155:85"><name pos:start="155:73" pos:end="155:85"><name pos:start="155:73" pos:end="155:74">st</name><operator pos:start="155:75" pos:end="155:76">-&gt;</operator><name pos:start="155:77" pos:end="155:85">time_base</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="157:17" pos:end="157:46"><decl pos:start="157:17" pos:end="157:45"><type pos:start="157:17" pos:end="157:20"><name pos:start="157:17" pos:end="157:20">char</name></type> <name pos:start="157:22" pos:end="157:40"><name pos:start="157:22" pos:end="157:36">duration_string</name><index pos:start="157:37" pos:end="157:40">[<expr pos:start="157:38" pos:end="157:39"><literal type="number" pos:start="157:38" pos:end="157:39">20</literal></expr>]</index></name> <init pos:start="157:42" pos:end="157:45">= <expr pos:start="157:44" pos:end="157:45"><literal type="string" pos:start="157:44" pos:end="157:45">""</literal></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="161:17" pos:end="163:49"><expr pos:start="161:17" pos:end="163:48"><call pos:start="161:17" pos:end="163:48"><name pos:start="161:17" pos:end="161:22">av_log</name><argument_list pos:start="161:23" pos:end="163:48">(<argument pos:start="161:24" pos:end="161:24"><expr pos:start="161:24" pos:end="161:24"><name pos:start="161:24" pos:end="161:24">s</name></expr></argument>, <argument pos:start="161:27" pos:end="161:38"><expr pos:start="161:27" pos:end="161:38"><name pos:start="161:27" pos:end="161:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="161:41" pos:end="161:80"><expr pos:start="161:41" pos:end="161:80"><literal type="string" pos:start="161:41" pos:end="161:68">"stream %d end duration = %"</literal> <name pos:start="161:70" pos:end="161:75">PRIu64</name> <literal type="string" pos:start="161:77" pos:end="161:80">"\n"</literal></expr></argument>, <argument pos:start="161:83" pos:end="161:83"><expr pos:start="161:83" pos:end="161:83"><name pos:start="161:83" pos:end="161:83">i</name></expr></argument>,

                       <argument pos:start="163:24" pos:end="163:47"><expr pos:start="163:24" pos:end="163:47"><name pos:start="163:24" pos:end="163:47"><name pos:start="163:24" pos:end="163:26">mkv</name><operator pos:start="163:27" pos:end="163:28">-&gt;</operator><name pos:start="163:29" pos:end="163:44">stream_durations</name><index pos:start="163:45" pos:end="163:47">[<expr pos:start="163:46" pos:end="163:46"><name pos:start="163:46" pos:end="163:46">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="167:17" pos:end="183:17"><if pos:start="167:17" pos:end="183:17">if <condition pos:start="167:20" pos:end="167:73">(<expr pos:start="167:21" pos:end="167:72"><operator pos:start="167:21" pos:end="167:21">!</operator><name pos:start="167:22" pos:end="167:33"><name pos:start="167:22" pos:end="167:24">mkv</name><operator pos:start="167:25" pos:end="167:26">-&gt;</operator><name pos:start="167:27" pos:end="167:33">is_live</name></name> <operator pos:start="167:35" pos:end="167:36">&amp;&amp;</operator> <name pos:start="167:38" pos:end="167:68"><name pos:start="167:38" pos:end="167:40">mkv</name><operator pos:start="167:41" pos:end="167:42">-&gt;</operator><name pos:start="167:43" pos:end="167:65">stream_duration_offsets</name><index pos:start="167:66" pos:end="167:68">[<expr pos:start="167:67" pos:end="167:67"><name pos:start="167:67" pos:end="167:67">i</name></expr>]</index></name> <operator pos:start="167:70" pos:end="167:70">&gt;</operator> <literal type="number" pos:start="167:72" pos:end="167:72">0</literal></expr>)</condition> <block pos:start="167:75" pos:end="183:17">{<block_content pos:start="169:21" pos:end="181:84">

                    <expr_stmt pos:start="169:21" pos:end="169:77"><expr pos:start="169:21" pos:end="169:76"><call pos:start="169:21" pos:end="169:76"><name pos:start="169:21" pos:end="169:29">avio_seek</name><argument_list pos:start="169:30" pos:end="169:76">(<argument pos:start="169:31" pos:end="169:32"><expr pos:start="169:31" pos:end="169:32"><name pos:start="169:31" pos:end="169:32">pb</name></expr></argument>, <argument pos:start="169:35" pos:end="169:65"><expr pos:start="169:35" pos:end="169:65"><name pos:start="169:35" pos:end="169:65"><name pos:start="169:35" pos:end="169:37">mkv</name><operator pos:start="169:38" pos:end="169:39">-&gt;</operator><name pos:start="169:40" pos:end="169:62">stream_duration_offsets</name><index pos:start="169:63" pos:end="169:65">[<expr pos:start="169:64" pos:end="169:64"><name pos:start="169:64" pos:end="169:64">i</name></expr>]</index></name></expr></argument>, <argument pos:start="169:68" pos:end="169:75"><expr pos:start="169:68" pos:end="169:75"><name pos:start="169:68" pos:end="169:75">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="173:21" pos:end="177:53"><expr pos:start="173:21" pos:end="177:52"><call pos:start="173:21" pos:end="177:52"><name pos:start="173:21" pos:end="173:28">snprintf</name><argument_list pos:start="173:29" pos:end="177:52">(<argument pos:start="173:30" pos:end="173:44"><expr pos:start="173:30" pos:end="173:44"><name pos:start="173:30" pos:end="173:44">duration_string</name></expr></argument>, <argument pos:start="173:47" pos:end="173:48"><expr pos:start="173:47" pos:end="173:48"><literal type="number" pos:start="173:47" pos:end="173:48">20</literal></expr></argument>, <argument pos:start="173:51" pos:end="173:69"><expr pos:start="173:51" pos:end="173:69"><literal type="string" pos:start="173:51" pos:end="173:69">"%02d:%02d:%012.9f"</literal></expr></argument>,

                             <argument pos:start="175:30" pos:end="175:54"><expr pos:start="175:30" pos:end="175:54"><operator pos:start="175:30" pos:end="175:30">(</operator><name pos:start="175:31" pos:end="175:33">int</name><operator pos:start="175:34" pos:end="175:34">)</operator> <name pos:start="175:36" pos:end="175:47">duration_sec</name> <operator pos:start="175:49" pos:end="175:49">/</operator> <literal type="number" pos:start="175:51" pos:end="175:54">3600</literal></expr></argument>, <argument pos:start="175:57" pos:end="175:86"><expr pos:start="175:57" pos:end="175:86"><operator pos:start="175:57" pos:end="175:57">(</operator><operator pos:start="175:58" pos:end="175:58">(</operator><name pos:start="175:59" pos:end="175:61">int</name><operator pos:start="175:62" pos:end="175:62">)</operator> <name pos:start="175:64" pos:end="175:75">duration_sec</name> <operator pos:start="175:77" pos:end="175:77">/</operator> <literal type="number" pos:start="175:79" pos:end="175:80">60</literal><operator pos:start="175:81" pos:end="175:81">)</operator> <operator pos:start="175:83" pos:end="175:83">%</operator> <literal type="number" pos:start="175:85" pos:end="175:86">60</literal></expr></argument>,

                             <argument pos:start="177:30" pos:end="177:51"><expr pos:start="177:30" pos:end="177:51"><call pos:start="177:30" pos:end="177:51"><name pos:start="177:30" pos:end="177:33">fmod</name><argument_list pos:start="177:34" pos:end="177:51">(<argument pos:start="177:35" pos:end="177:46"><expr pos:start="177:35" pos:end="177:46"><name pos:start="177:35" pos:end="177:46">duration_sec</name></expr></argument>, <argument pos:start="177:49" pos:end="177:50"><expr pos:start="177:49" pos:end="177:50"><literal type="number" pos:start="177:49" pos:end="177:50">60</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="181:21" pos:end="181:84"><expr pos:start="181:21" pos:end="181:83"><call pos:start="181:21" pos:end="181:83"><name pos:start="181:21" pos:end="181:35">put_ebml_binary</name><argument_list pos:start="181:36" pos:end="181:83">(<argument pos:start="181:37" pos:end="181:38"><expr pos:start="181:37" pos:end="181:38"><name pos:start="181:37" pos:end="181:38">pb</name></expr></argument>, <argument pos:start="181:41" pos:end="181:61"><expr pos:start="181:41" pos:end="181:61"><name pos:start="181:41" pos:end="181:61">MATROSKA_ID_TAGSTRING</name></expr></argument>, <argument pos:start="181:64" pos:end="181:78"><expr pos:start="181:64" pos:end="181:78"><name pos:start="181:64" pos:end="181:78">duration_string</name></expr></argument>, <argument pos:start="181:81" pos:end="181:82"><expr pos:start="181:81" pos:end="181:82"><literal type="number" pos:start="181:81" pos:end="181:82">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="191:9" pos:end="191:44"><expr pos:start="191:9" pos:end="191:43"><call pos:start="191:9" pos:end="191:43"><name pos:start="191:9" pos:end="191:17">avio_seek</name><argument_list pos:start="191:18" pos:end="191:43">(<argument pos:start="191:19" pos:end="191:20"><expr pos:start="191:19" pos:end="191:20"><name pos:start="191:19" pos:end="191:20">pb</name></expr></argument>, <argument pos:start="191:23" pos:end="191:32"><expr pos:start="191:23" pos:end="191:32"><name pos:start="191:23" pos:end="191:32">currentpos</name></expr></argument>, <argument pos:start="191:35" pos:end="191:42"><expr pos:start="191:35" pos:end="191:42"><name pos:start="191:35" pos:end="191:42">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="197:5" pos:end="201:5"><if pos:start="197:5" pos:end="201:5">if <condition pos:start="197:8" pos:end="197:22">(<expr pos:start="197:9" pos:end="197:21"><operator pos:start="197:9" pos:end="197:9">!</operator><name pos:start="197:10" pos:end="197:21"><name pos:start="197:10" pos:end="197:12">mkv</name><operator pos:start="197:13" pos:end="197:14">-&gt;</operator><name pos:start="197:15" pos:end="197:21">is_live</name></name></expr>)</condition> <block pos:start="197:24" pos:end="201:5">{<block_content pos:start="199:9" pos:end="199:42">

        <expr_stmt pos:start="199:9" pos:end="199:42"><expr pos:start="199:9" pos:end="199:41"><call pos:start="199:9" pos:end="199:41"><name pos:start="199:9" pos:end="199:23">end_ebml_master</name><argument_list pos:start="199:24" pos:end="199:41">(<argument pos:start="199:25" pos:end="199:26"><expr pos:start="199:25" pos:end="199:26"><name pos:start="199:25" pos:end="199:26">pb</name></expr></argument>, <argument pos:start="199:29" pos:end="199:40"><expr pos:start="199:29" pos:end="199:40"><name pos:start="199:29" pos:end="199:40"><name pos:start="199:29" pos:end="199:31">mkv</name><operator pos:start="199:32" pos:end="199:33">-&gt;</operator><name pos:start="199:34" pos:end="199:40">segment</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="203:5" pos:end="203:27"><expr pos:start="203:5" pos:end="203:26"><call pos:start="203:5" pos:end="203:26"><name pos:start="203:5" pos:end="203:12">av_freep</name><argument_list pos:start="203:13" pos:end="203:26">(<argument pos:start="203:14" pos:end="203:25"><expr pos:start="203:14" pos:end="203:25"><operator pos:start="203:14" pos:end="203:14">&amp;</operator><name pos:start="203:15" pos:end="203:25"><name pos:start="203:15" pos:end="203:17">mkv</name><operator pos:start="203:18" pos:end="203:19">-&gt;</operator><name pos:start="203:20" pos:end="203:25">tracks</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="205:5" pos:end="205:34"><expr pos:start="205:5" pos:end="205:33"><call pos:start="205:5" pos:end="205:33"><name pos:start="205:5" pos:end="205:12">av_freep</name><argument_list pos:start="205:13" pos:end="205:33">(<argument pos:start="205:14" pos:end="205:32"><expr pos:start="205:14" pos:end="205:32"><operator pos:start="205:14" pos:end="205:14">&amp;</operator><name pos:start="205:15" pos:end="205:32"><name pos:start="205:15" pos:end="205:17">mkv</name><operator pos:start="205:18" pos:end="205:19">-&gt;</operator><name pos:start="205:20" pos:end="205:23">cues</name><operator pos:start="205:24" pos:end="205:25">-&gt;</operator><name pos:start="205:26" pos:end="205:32">entries</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="207:5" pos:end="207:25"><expr pos:start="207:5" pos:end="207:24"><call pos:start="207:5" pos:end="207:24"><name pos:start="207:5" pos:end="207:12">av_freep</name><argument_list pos:start="207:13" pos:end="207:24">(<argument pos:start="207:14" pos:end="207:23"><expr pos:start="207:14" pos:end="207:23"><operator pos:start="207:14" pos:end="207:14">&amp;</operator><name pos:start="207:15" pos:end="207:23"><name pos:start="207:15" pos:end="207:17">mkv</name><operator pos:start="207:18" pos:end="207:19">-&gt;</operator><name pos:start="207:20" pos:end="207:23">cues</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="209:5" pos:end="209:37"><expr pos:start="209:5" pos:end="209:36"><call pos:start="209:5" pos:end="209:36"><name pos:start="209:5" pos:end="209:12">av_freep</name><argument_list pos:start="209:13" pos:end="209:36">(<argument pos:start="209:14" pos:end="209:35"><expr pos:start="209:14" pos:end="209:35"><operator pos:start="209:14" pos:end="209:14">&amp;</operator><name pos:start="209:15" pos:end="209:35"><name pos:start="209:15" pos:end="209:17">mkv</name><operator pos:start="209:18" pos:end="209:19">-&gt;</operator><name pos:start="209:20" pos:end="209:35">stream_durations</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="211:5" pos:end="211:44"><expr pos:start="211:5" pos:end="211:43"><call pos:start="211:5" pos:end="211:43"><name pos:start="211:5" pos:end="211:12">av_freep</name><argument_list pos:start="211:13" pos:end="211:43">(<argument pos:start="211:14" pos:end="211:42"><expr pos:start="211:14" pos:end="211:42"><operator pos:start="211:14" pos:end="211:14">&amp;</operator><name pos:start="211:15" pos:end="211:42"><name pos:start="211:15" pos:end="211:17">mkv</name><operator pos:start="211:18" pos:end="211:19">-&gt;</operator><name pos:start="211:20" pos:end="211:42">stream_duration_offsets</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="215:5" pos:end="215:13">return <expr pos:start="215:12" pos:end="215:12"><literal type="number" pos:start="215:12" pos:end="215:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
