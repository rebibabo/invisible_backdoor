<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16359.c" pos:tabs="8"><function pos:start="1:1" pos:end="146:13"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:18">vhost_dev_init</name><parameter_list pos:start="1:19" pos:end="3:49">(<parameter pos:start="1:20" pos:end="1:41"><decl pos:start="1:20" pos:end="1:41"><type pos:start="1:20" pos:end="1:41"><name pos:start="1:20" pos:end="1:35"><name pos:start="1:20" pos:end="1:25">struct</name> <name pos:start="1:27" pos:end="1:35">vhost_dev</name></name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:41">hdev</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:55"><decl pos:start="1:44" pos:end="1:55"><type pos:start="1:44" pos:end="1:55"><name pos:start="1:44" pos:end="1:47">void</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:55">opaque</name></decl></parameter>,

                   <parameter pos:start="3:20" pos:end="3:48"><decl pos:start="3:20" pos:end="3:48"><type pos:start="3:20" pos:end="3:48"><name pos:start="3:20" pos:end="3:35">VhostBackendType</name></type> <name pos:start="3:37" pos:end="3:48">backend_type</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="146:13">{<block_content pos:start="7:5" pos:end="146:13">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:21">features</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">r</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="146:13"><if pos:start="13:5" pos:end="146:13">if <condition pos:start="13:8" pos:end="13:55">(<expr pos:start="13:9" pos:end="13:54"><call pos:start="13:9" pos:end="13:50"><name pos:start="13:9" pos:end="13:30">vhost_set_backend_type</name><argument_list pos:start="13:31" pos:end="13:50">(<argument pos:start="13:32" pos:end="13:35"><expr pos:start="13:32" pos:end="13:35"><name pos:start="13:32" pos:end="13:35">hdev</name></expr></argument>, <argument pos:start="13:38" pos:end="13:49"><expr pos:start="13:38" pos:end="13:49"><name pos:start="13:38" pos:end="13:49">backend_type</name></expr></argument>)</argument_list></call> <operator pos:start="13:52" pos:end="13:52">&lt;</operator> <literal type="number" pos:start="13:54" pos:end="13:54">0</literal></expr>)</condition> <block pos:start="13:57" pos:end="146:13">{<block_content pos:start="20:5" pos:end="146:13">






    <if_stmt pos:start="20:5" pos:end="146:13"><if pos:start="20:5" pos:end="146:13">if <condition pos:start="20:8" pos:end="20:62">(<expr pos:start="20:9" pos:end="20:61"><call pos:start="20:9" pos:end="20:57"><name pos:start="20:9" pos:end="20:43"><name pos:start="20:9" pos:end="20:12">hdev</name><operator pos:start="20:13" pos:end="20:14">-&gt;</operator><name pos:start="20:15" pos:end="20:23">vhost_ops</name><operator pos:start="20:24" pos:end="20:25">-&gt;</operator><name pos:start="20:26" pos:end="20:43">vhost_backend_init</name></name><argument_list pos:start="20:44" pos:end="20:57">(<argument pos:start="20:45" pos:end="20:48"><expr pos:start="20:45" pos:end="20:48"><name pos:start="20:45" pos:end="20:48">hdev</name></expr></argument>, <argument pos:start="20:51" pos:end="20:56"><expr pos:start="20:51" pos:end="20:56"><name pos:start="20:51" pos:end="20:56">opaque</name></expr></argument>)</argument_list></call> <operator pos:start="20:59" pos:end="20:59">&lt;</operator> <literal type="number" pos:start="20:61" pos:end="20:61">0</literal></expr>)</condition> <block pos:start="20:64" pos:end="146:13">{<block_content pos:start="23:9" pos:end="146:13">


        <return pos:start="23:9" pos:end="23:22">return <expr pos:start="23:16" pos:end="23:21"><operator pos:start="23:16" pos:end="23:16">-</operator><name pos:start="23:17" pos:end="23:21">errno</name></expr>;</return>










    <expr_stmt pos:start="34:5" pos:end="34:51"><expr pos:start="34:5" pos:end="34:50"><call pos:start="34:5" pos:end="34:50"><name pos:start="34:5" pos:end="34:21">QLIST_INSERT_HEAD</name><argument_list pos:start="34:22" pos:end="34:50">(<argument pos:start="34:23" pos:end="34:36"><expr pos:start="34:23" pos:end="34:36"><operator pos:start="34:23" pos:end="34:23">&amp;</operator><name pos:start="34:24" pos:end="34:36">vhost_devices</name></expr></argument>, <argument pos:start="34:39" pos:end="34:42"><expr pos:start="34:39" pos:end="34:42"><name pos:start="34:39" pos:end="34:42">hdev</name></expr></argument>, <argument pos:start="34:45" pos:end="34:49"><expr pos:start="34:45" pos:end="34:49"><name pos:start="34:45" pos:end="34:49">entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="38:5" pos:end="38:65"><expr pos:start="38:5" pos:end="38:64"><name pos:start="38:5" pos:end="38:5">r</name> <operator pos:start="38:7" pos:end="38:7">=</operator> <call pos:start="38:9" pos:end="38:64"><name pos:start="38:9" pos:end="38:35"><name pos:start="38:9" pos:end="38:12">hdev</name><operator pos:start="38:13" pos:end="38:14">-&gt;</operator><name pos:start="38:15" pos:end="38:23">vhost_ops</name><operator pos:start="38:24" pos:end="38:25">-&gt;</operator><name pos:start="38:26" pos:end="38:35">vhost_call</name></name><argument_list pos:start="38:36" pos:end="38:64">(<argument pos:start="38:37" pos:end="38:40"><expr pos:start="38:37" pos:end="38:40"><name pos:start="38:37" pos:end="38:40">hdev</name></expr></argument>, <argument pos:start="38:43" pos:end="38:57"><expr pos:start="38:43" pos:end="38:57"><name pos:start="38:43" pos:end="38:57">VHOST_SET_OWNER</name></expr></argument>, <argument pos:start="38:60" pos:end="38:63"><expr pos:start="38:60" pos:end="38:63"><name pos:start="38:60" pos:end="38:63">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="40:5" pos:end="146:13"><if pos:start="40:5" pos:end="146:13">if <condition pos:start="40:8" pos:end="40:14">(<expr pos:start="40:9" pos:end="40:13"><name pos:start="40:9" pos:end="40:9">r</name> <operator pos:start="40:11" pos:end="40:11">&lt;</operator> <literal type="number" pos:start="40:13" pos:end="40:13">0</literal></expr>)</condition> <block pos:start="40:16" pos:end="146:13">{<block_content pos:start="42:9" pos:end="146:13">

        <goto pos:start="42:9" pos:end="42:18">goto <name pos:start="42:14" pos:end="42:17">fail</name>;</goto>




    <expr_stmt pos:start="47:5" pos:end="47:73"><expr pos:start="47:5" pos:end="47:72"><name pos:start="47:5" pos:end="47:5">r</name> <operator pos:start="47:7" pos:end="47:7">=</operator> <call pos:start="47:9" pos:end="47:72"><name pos:start="47:9" pos:end="47:35"><name pos:start="47:9" pos:end="47:12">hdev</name><operator pos:start="47:13" pos:end="47:14">-&gt;</operator><name pos:start="47:15" pos:end="47:23">vhost_ops</name><operator pos:start="47:24" pos:end="47:25">-&gt;</operator><name pos:start="47:26" pos:end="47:35">vhost_call</name></name><argument_list pos:start="47:36" pos:end="47:72">(<argument pos:start="47:37" pos:end="47:40"><expr pos:start="47:37" pos:end="47:40"><name pos:start="47:37" pos:end="47:40">hdev</name></expr></argument>, <argument pos:start="47:43" pos:end="47:60"><expr pos:start="47:43" pos:end="47:60"><name pos:start="47:43" pos:end="47:60">VHOST_GET_FEATURES</name></expr></argument>, <argument pos:start="47:63" pos:end="47:71"><expr pos:start="47:63" pos:end="47:71"><operator pos:start="47:63" pos:end="47:63">&amp;</operator><name pos:start="47:64" pos:end="47:71">features</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="146:13"><if pos:start="49:5" pos:end="146:13">if <condition pos:start="49:8" pos:end="49:14">(<expr pos:start="49:9" pos:end="49:13"><name pos:start="49:9" pos:end="49:9">r</name> <operator pos:start="49:11" pos:end="49:11">&lt;</operator> <literal type="number" pos:start="49:13" pos:end="49:13">0</literal></expr>)</condition> <block pos:start="49:16" pos:end="146:13">{<block_content pos:start="51:9" pos:end="146:13">

        <goto pos:start="51:9" pos:end="51:18">goto <name pos:start="51:14" pos:end="51:17">fail</name>;</goto>




    <for pos:start="56:5" pos:end="146:13">for <control pos:start="56:9" pos:end="56:36">(<init pos:start="56:10" pos:end="56:15"><expr pos:start="56:10" pos:end="56:14"><name pos:start="56:10" pos:end="56:10">i</name> <operator pos:start="56:12" pos:end="56:12">=</operator> <literal type="number" pos:start="56:14" pos:end="56:14">0</literal></expr>;</init> <condition pos:start="56:17" pos:end="56:31"><expr pos:start="56:17" pos:end="56:30"><name pos:start="56:17" pos:end="56:17">i</name> <operator pos:start="56:19" pos:end="56:19">&lt;</operator> <name pos:start="56:21" pos:end="56:30"><name pos:start="56:21" pos:end="56:24">hdev</name><operator pos:start="56:25" pos:end="56:26">-&gt;</operator><name pos:start="56:27" pos:end="56:30">nvqs</name></name></expr>;</condition> <incr pos:start="56:33" pos:end="56:35"><expr pos:start="56:33" pos:end="56:35"><operator pos:start="56:33" pos:end="56:34">++</operator><name pos:start="56:35" pos:end="56:35">i</name></expr></incr>)</control> <block pos:start="56:38" pos:end="146:13">{<block_content pos:start="58:9" pos:end="146:13">

        <expr_stmt pos:start="58:9" pos:end="58:74"><expr pos:start="58:9" pos:end="58:73"><name pos:start="58:9" pos:end="58:9">r</name> <operator pos:start="58:11" pos:end="58:11">=</operator> <call pos:start="58:13" pos:end="58:73"><name pos:start="58:13" pos:end="58:32">vhost_virtqueue_init</name><argument_list pos:start="58:33" pos:end="58:73">(<argument pos:start="58:34" pos:end="58:37"><expr pos:start="58:34" pos:end="58:37"><name pos:start="58:34" pos:end="58:37">hdev</name></expr></argument>, <argument pos:start="58:40" pos:end="58:52"><expr pos:start="58:40" pos:end="58:52"><name pos:start="58:40" pos:end="58:48"><name pos:start="58:40" pos:end="58:43">hdev</name><operator pos:start="58:44" pos:end="58:45">-&gt;</operator><name pos:start="58:46" pos:end="58:48">vqs</name></name> <operator pos:start="58:50" pos:end="58:50">+</operator> <name pos:start="58:52" pos:end="58:52">i</name></expr></argument>, <argument pos:start="58:55" pos:end="58:72"><expr pos:start="58:55" pos:end="58:72"><name pos:start="58:55" pos:end="58:68"><name pos:start="58:55" pos:end="58:58">hdev</name><operator pos:start="58:59" pos:end="58:60">-&gt;</operator><name pos:start="58:61" pos:end="58:68">vq_index</name></name> <operator pos:start="58:70" pos:end="58:70">+</operator> <name pos:start="58:72" pos:end="58:72">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="60:9" pos:end="146:13"><if pos:start="60:9" pos:end="146:13">if <condition pos:start="60:12" pos:end="60:18">(<expr pos:start="60:13" pos:end="60:17"><name pos:start="60:13" pos:end="60:13">r</name> <operator pos:start="60:15" pos:end="60:15">&lt;</operator> <literal type="number" pos:start="60:17" pos:end="60:17">0</literal></expr>)</condition> <block pos:start="60:20" pos:end="146:13">{<block_content pos:start="62:13" pos:end="146:13">

            <goto pos:start="62:13" pos:end="62:25">goto <name pos:start="62:18" pos:end="62:24">fail_vq</name>;</goto>



    <expr_stmt pos:start="66:5" pos:end="66:30"><expr pos:start="66:5" pos:end="66:29"><name pos:start="66:5" pos:end="66:18"><name pos:start="66:5" pos:end="66:8">hdev</name><operator pos:start="66:9" pos:end="66:10">-&gt;</operator><name pos:start="66:11" pos:end="66:18">features</name></name> <operator pos:start="66:20" pos:end="66:20">=</operator> <name pos:start="66:22" pos:end="66:29">features</name></expr>;</expr_stmt>



    <expr_stmt pos:start="70:5" pos:end="98:6"><expr pos:start="70:5" pos:end="98:5"><name pos:start="70:5" pos:end="70:25"><name pos:start="70:5" pos:end="70:8">hdev</name><operator pos:start="70:9" pos:end="70:10">-&gt;</operator><name pos:start="70:11" pos:end="70:25">memory_listener</name></name> <operator pos:start="70:27" pos:end="70:27">=</operator> <operator pos:start="70:29" pos:end="70:29">(</operator><name pos:start="70:30" pos:end="70:43">MemoryListener</name><operator pos:start="70:44" pos:end="70:44">)</operator> <block pos:start="70:46" pos:end="98:5">{

        <expr pos:start="72:9" pos:end="72:28"><operator pos:start="72:9" pos:end="72:9">.</operator><name pos:start="72:10" pos:end="72:14">begin</name> <operator pos:start="72:16" pos:end="72:16">=</operator> <name pos:start="72:18" pos:end="72:28">vhost_begin</name></expr>,

        <expr pos:start="74:9" pos:end="74:30"><operator pos:start="74:9" pos:end="74:9">.</operator><name pos:start="74:10" pos:end="74:15">commit</name> <operator pos:start="74:17" pos:end="74:17">=</operator> <name pos:start="74:19" pos:end="74:30">vhost_commit</name></expr>,

        <expr pos:start="76:9" pos:end="76:38"><operator pos:start="76:9" pos:end="76:9">.</operator><name pos:start="76:10" pos:end="76:19">region_add</name> <operator pos:start="76:21" pos:end="76:21">=</operator> <name pos:start="76:23" pos:end="76:38">vhost_region_add</name></expr>,

        <expr pos:start="78:9" pos:end="78:38"><operator pos:start="78:9" pos:end="78:9">.</operator><name pos:start="78:10" pos:end="78:19">region_del</name> <operator pos:start="78:21" pos:end="78:21">=</operator> <name pos:start="78:23" pos:end="78:38">vhost_region_del</name></expr>,

        <expr pos:start="80:9" pos:end="80:38"><operator pos:start="80:9" pos:end="80:9">.</operator><name pos:start="80:10" pos:end="80:19">region_nop</name> <operator pos:start="80:21" pos:end="80:21">=</operator> <name pos:start="80:23" pos:end="80:38">vhost_region_nop</name></expr>,

        <expr pos:start="82:9" pos:end="82:36"><operator pos:start="82:9" pos:end="82:9">.</operator><name pos:start="82:10" pos:end="82:18">log_start</name> <operator pos:start="82:20" pos:end="82:20">=</operator> <name pos:start="82:22" pos:end="82:36">vhost_log_start</name></expr>,

        <expr pos:start="84:9" pos:end="84:34"><operator pos:start="84:9" pos:end="84:9">.</operator><name pos:start="84:10" pos:end="84:17">log_stop</name> <operator pos:start="84:19" pos:end="84:19">=</operator> <name pos:start="84:21" pos:end="84:34">vhost_log_stop</name></expr>,

        <expr pos:start="86:9" pos:end="86:34"><operator pos:start="86:9" pos:end="86:9">.</operator><name pos:start="86:10" pos:end="86:17">log_sync</name> <operator pos:start="86:19" pos:end="86:19">=</operator> <name pos:start="86:21" pos:end="86:34">vhost_log_sync</name></expr>,

        <expr pos:start="88:9" pos:end="88:50"><operator pos:start="88:9" pos:end="88:9">.</operator><name pos:start="88:10" pos:end="88:25">log_global_start</name> <operator pos:start="88:27" pos:end="88:27">=</operator> <name pos:start="88:29" pos:end="88:50">vhost_log_global_start</name></expr>,

        <expr pos:start="90:9" pos:end="90:48"><operator pos:start="90:9" pos:end="90:9">.</operator><name pos:start="90:10" pos:end="90:24">log_global_stop</name> <operator pos:start="90:26" pos:end="90:26">=</operator> <name pos:start="90:28" pos:end="90:48">vhost_log_global_stop</name></expr>,

        <expr pos:start="92:9" pos:end="92:40"><operator pos:start="92:9" pos:end="92:9">.</operator><name pos:start="92:10" pos:end="92:20">eventfd_add</name> <operator pos:start="92:22" pos:end="92:22">=</operator> <name pos:start="92:24" pos:end="92:40">vhost_eventfd_add</name></expr>,

        <expr pos:start="94:9" pos:end="94:40"><operator pos:start="94:9" pos:end="94:9">.</operator><name pos:start="94:10" pos:end="94:20">eventfd_del</name> <operator pos:start="94:22" pos:end="94:22">=</operator> <name pos:start="94:24" pos:end="94:40">vhost_eventfd_del</name></expr>,

        <expr pos:start="96:9" pos:end="96:22"><operator pos:start="96:9" pos:end="96:9">.</operator><name pos:start="96:10" pos:end="96:17">priority</name> <operator pos:start="96:19" pos:end="96:19">=</operator> <literal type="number" pos:start="96:21" pos:end="96:22">10</literal></expr>

    }</block></expr>;</expr_stmt>

    <expr_stmt pos:start="100:5" pos:end="100:35"><expr pos:start="100:5" pos:end="100:34"><name pos:start="100:5" pos:end="100:27"><name pos:start="100:5" pos:end="100:8">hdev</name><operator pos:start="100:9" pos:end="100:10">-&gt;</operator><name pos:start="100:11" pos:end="100:27">migration_blocker</name></name> <operator pos:start="100:29" pos:end="100:29">=</operator> <name pos:start="100:31" pos:end="100:34">NULL</name></expr>;</expr_stmt>

    <if_stmt pos:start="102:5" pos:end="146:13"><if pos:start="102:5" pos:end="146:13">if <condition pos:start="102:8" pos:end="102:56">(<expr pos:start="102:9" pos:end="102:55"><operator pos:start="102:9" pos:end="102:9">!</operator><operator pos:start="102:10" pos:end="102:10">(</operator><name pos:start="102:11" pos:end="102:24"><name pos:start="102:11" pos:end="102:14">hdev</name><operator pos:start="102:15" pos:end="102:16">-&gt;</operator><name pos:start="102:17" pos:end="102:24">features</name></name> <operator pos:start="102:26" pos:end="102:26">&amp;</operator> <operator pos:start="102:28" pos:end="102:28">(</operator><literal type="number" pos:start="102:29" pos:end="102:34">0x1ULL</literal> <operator pos:start="102:36" pos:end="102:37">&lt;&lt;</operator> <name pos:start="102:39" pos:end="102:53">VHOST_F_LOG_ALL</name><operator pos:start="102:54" pos:end="102:54">)</operator><operator pos:start="102:55" pos:end="102:55">)</operator></expr>)</condition> <block pos:start="102:58" pos:end="146:13">{<block_content pos:start="104:9" pos:end="146:13">

        <expr_stmt pos:start="104:9" pos:end="106:79"><expr pos:start="104:9" pos:end="106:78"><call pos:start="104:9" pos:end="106:78"><name pos:start="104:9" pos:end="104:18">error_setg</name><argument_list pos:start="104:19" pos:end="106:78">(<argument pos:start="104:20" pos:end="104:43"><expr pos:start="104:20" pos:end="104:43"><operator pos:start="104:20" pos:end="104:20">&amp;</operator><name pos:start="104:21" pos:end="104:43"><name pos:start="104:21" pos:end="104:24">hdev</name><operator pos:start="104:25" pos:end="104:26">-&gt;</operator><name pos:start="104:27" pos:end="104:43">migration_blocker</name></name></expr></argument>,

                   <argument pos:start="106:20" pos:end="106:77"><expr pos:start="106:20" pos:end="106:77"><literal type="string" pos:start="106:20" pos:end="106:77">"Migration disabled: vhost lacks VHOST_F_LOG_ALL feature."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="108:9" pos:end="108:53"><expr pos:start="108:9" pos:end="108:52"><call pos:start="108:9" pos:end="108:52"><name pos:start="108:9" pos:end="108:27">migrate_add_blocker</name><argument_list pos:start="108:28" pos:end="108:52">(<argument pos:start="108:29" pos:end="108:51"><expr pos:start="108:29" pos:end="108:51"><name pos:start="108:29" pos:end="108:51"><name pos:start="108:29" pos:end="108:32">hdev</name><operator pos:start="108:33" pos:end="108:34">-&gt;</operator><name pos:start="108:35" pos:end="108:51">migration_blocker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <expr_stmt pos:start="111:5" pos:end="111:66"><expr pos:start="111:5" pos:end="111:65"><name pos:start="111:5" pos:end="111:13"><name pos:start="111:5" pos:end="111:8">hdev</name><operator pos:start="111:9" pos:end="111:10">-&gt;</operator><name pos:start="111:11" pos:end="111:13">mem</name></name> <operator pos:start="111:15" pos:end="111:15">=</operator> <call pos:start="111:17" pos:end="111:65"><name pos:start="111:17" pos:end="111:25">g_malloc0</name><argument_list pos:start="111:26" pos:end="111:65">(<argument pos:start="111:27" pos:end="111:64"><expr pos:start="111:27" pos:end="111:64"><call pos:start="111:27" pos:end="111:64"><name pos:start="111:27" pos:end="111:34">offsetof</name><argument_list pos:start="111:35" pos:end="111:64">(<argument pos:start="111:36" pos:end="111:54"><expr pos:start="111:36" pos:end="111:54">struct <name pos:start="111:43" pos:end="111:54">vhost_memory</name></expr></argument>, <argument pos:start="111:57" pos:end="111:63"><expr pos:start="111:57" pos:end="111:63"><name pos:start="111:57" pos:end="111:63">regions</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:29"><expr pos:start="113:5" pos:end="113:28"><name pos:start="113:5" pos:end="113:24"><name pos:start="113:5" pos:end="113:8">hdev</name><operator pos:start="113:9" pos:end="113:10">-&gt;</operator><name pos:start="113:11" pos:end="113:24">n_mem_sections</name></name> <operator pos:start="113:26" pos:end="113:26">=</operator> <literal type="number" pos:start="113:28" pos:end="113:28">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:30"><expr pos:start="115:5" pos:end="115:29"><name pos:start="115:5" pos:end="115:22"><name pos:start="115:5" pos:end="115:8">hdev</name><operator pos:start="115:9" pos:end="115:10">-&gt;</operator><name pos:start="115:11" pos:end="115:22">mem_sections</name></name> <operator pos:start="115:24" pos:end="115:24">=</operator> <name pos:start="115:26" pos:end="115:29">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:21"><expr pos:start="117:5" pos:end="117:20"><name pos:start="117:5" pos:end="117:13"><name pos:start="117:5" pos:end="117:8">hdev</name><operator pos:start="117:9" pos:end="117:10">-&gt;</operator><name pos:start="117:11" pos:end="117:13">log</name></name> <operator pos:start="117:15" pos:end="117:15">=</operator> <name pos:start="117:17" pos:end="117:20">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:23"><expr pos:start="119:5" pos:end="119:22"><name pos:start="119:5" pos:end="119:18"><name pos:start="119:5" pos:end="119:8">hdev</name><operator pos:start="119:9" pos:end="119:10">-&gt;</operator><name pos:start="119:11" pos:end="119:18">log_size</name></name> <operator pos:start="119:20" pos:end="119:20">=</operator> <literal type="number" pos:start="119:22" pos:end="119:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:30"><expr pos:start="121:5" pos:end="121:29"><name pos:start="121:5" pos:end="121:21"><name pos:start="121:5" pos:end="121:8">hdev</name><operator pos:start="121:9" pos:end="121:10">-&gt;</operator><name pos:start="121:11" pos:end="121:21">log_enabled</name></name> <operator pos:start="121:23" pos:end="121:23">=</operator> <name pos:start="121:25" pos:end="121:29">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:26"><expr pos:start="123:5" pos:end="123:25"><name pos:start="123:5" pos:end="123:17"><name pos:start="123:5" pos:end="123:8">hdev</name><operator pos:start="123:9" pos:end="123:10">-&gt;</operator><name pos:start="123:11" pos:end="123:17">started</name></name> <operator pos:start="123:19" pos:end="123:19">=</operator> <name pos:start="123:21" pos:end="123:25">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:33"><expr pos:start="125:5" pos:end="125:32"><name pos:start="125:5" pos:end="125:24"><name pos:start="125:5" pos:end="125:8">hdev</name><operator pos:start="125:9" pos:end="125:10">-&gt;</operator><name pos:start="125:11" pos:end="125:24">memory_changed</name></name> <operator pos:start="125:26" pos:end="125:26">=</operator> <name pos:start="125:28" pos:end="125:32">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:76"><expr pos:start="127:5" pos:end="127:75"><call pos:start="127:5" pos:end="127:75"><name pos:start="127:5" pos:end="127:28">memory_listener_register</name><argument_list pos:start="127:29" pos:end="127:75">(<argument pos:start="127:30" pos:end="127:51"><expr pos:start="127:30" pos:end="127:51"><operator pos:start="127:30" pos:end="127:30">&amp;</operator><name pos:start="127:31" pos:end="127:51"><name pos:start="127:31" pos:end="127:34">hdev</name><operator pos:start="127:35" pos:end="127:36">-&gt;</operator><name pos:start="127:37" pos:end="127:51">memory_listener</name></name></expr></argument>, <argument pos:start="127:54" pos:end="127:74"><expr pos:start="127:54" pos:end="127:74"><operator pos:start="127:54" pos:end="127:54">&amp;</operator><name pos:start="127:55" pos:end="127:74">address_space_memory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="129:5" pos:end="129:13">return <expr pos:start="129:12" pos:end="129:12"><literal type="number" pos:start="129:12" pos:end="129:12">0</literal></expr>;</return>

<label pos:start="131:1" pos:end="131:8"><name pos:start="131:1" pos:end="131:7">fail_vq</name>:</label>

    <while pos:start="133:5" pos:end="146:13">while <condition pos:start="133:11" pos:end="133:20">(<expr pos:start="133:12" pos:end="133:19"><operator pos:start="133:12" pos:end="133:13">--</operator><name pos:start="133:14" pos:end="133:14">i</name> <operator pos:start="133:16" pos:end="133:17">&gt;=</operator> <literal type="number" pos:start="133:19" pos:end="133:19">0</literal></expr>)</condition> <block pos:start="133:22" pos:end="146:13">{<block_content pos:start="135:9" pos:end="146:13">

        <expr_stmt pos:start="135:9" pos:end="135:47"><expr pos:start="135:9" pos:end="135:46"><call pos:start="135:9" pos:end="135:46"><name pos:start="135:9" pos:end="135:31">vhost_virtqueue_cleanup</name><argument_list pos:start="135:32" pos:end="135:46">(<argument pos:start="135:33" pos:end="135:45"><expr pos:start="135:33" pos:end="135:45"><name pos:start="135:33" pos:end="135:41"><name pos:start="135:33" pos:end="135:36">hdev</name><operator pos:start="135:37" pos:end="135:38">-&gt;</operator><name pos:start="135:39" pos:end="135:41">vqs</name></name> <operator pos:start="135:43" pos:end="135:43">+</operator> <name pos:start="135:45" pos:end="135:45">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<label pos:start="138:1" pos:end="138:5"><name pos:start="138:1" pos:end="138:4">fail</name>:</label>

    <expr_stmt pos:start="140:5" pos:end="140:15"><expr pos:start="140:5" pos:end="140:14"><name pos:start="140:5" pos:end="140:5">r</name> <operator pos:start="140:7" pos:end="140:7">=</operator> <operator pos:start="140:9" pos:end="140:9">-</operator><name pos:start="140:10" pos:end="140:14">errno</name></expr>;</expr_stmt>

    <expr_stmt pos:start="142:5" pos:end="142:49"><expr pos:start="142:5" pos:end="142:48"><call pos:start="142:5" pos:end="142:48"><name pos:start="142:5" pos:end="142:42"><name pos:start="142:5" pos:end="142:8">hdev</name><operator pos:start="142:9" pos:end="142:10">-&gt;</operator><name pos:start="142:11" pos:end="142:19">vhost_ops</name><operator pos:start="142:20" pos:end="142:21">-&gt;</operator><name pos:start="142:22" pos:end="142:42">vhost_backend_cleanup</name></name><argument_list pos:start="142:43" pos:end="142:48">(<argument pos:start="142:44" pos:end="142:47"><expr pos:start="142:44" pos:end="142:47"><name pos:start="142:44" pos:end="142:47">hdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="144:5" pos:end="144:30"><expr pos:start="144:5" pos:end="144:29"><call pos:start="144:5" pos:end="144:29"><name pos:start="144:5" pos:end="144:16">QLIST_REMOVE</name><argument_list pos:start="144:17" pos:end="144:29">(<argument pos:start="144:18" pos:end="144:21"><expr pos:start="144:18" pos:end="144:21"><name pos:start="144:18" pos:end="144:21">hdev</name></expr></argument>, <argument pos:start="144:24" pos:end="144:28"><expr pos:start="144:24" pos:end="144:28"><name pos:start="144:24" pos:end="144:28">entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="146:5" pos:end="146:13">return <expr pos:start="146:12" pos:end="146:12"><name pos:start="146:12" pos:end="146:12">r</name></expr>;</return></block_content></block></while></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>
</unit>
