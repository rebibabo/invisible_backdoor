<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18722.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">qemu_chr_open_pp</name><parameter_list pos:start="1:28" pos:end="1:67">(<parameter pos:start="1:29" pos:end="1:42"><decl pos:start="1:29" pos:end="1:42"><type pos:start="1:29" pos:end="1:42"><name pos:start="1:29" pos:end="1:36">QemuOpts</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:42">opts</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:66"><decl pos:start="1:45" pos:end="1:66"><type pos:start="1:45" pos:end="1:66"><name pos:start="1:45" pos:end="1:59">CharDriverState</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier><modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:66">_chr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:13">

    <decl_stmt pos:start="5:5" pos:end="5:54"><decl pos:start="5:5" pos:end="5:53"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:24">filename</name> <init pos:start="5:26" pos:end="5:53">= <expr pos:start="5:28" pos:end="5:53"><call pos:start="5:28" pos:end="5:53"><name pos:start="5:28" pos:end="5:39">qemu_opt_get</name><argument_list pos:start="5:40" pos:end="5:53">(<argument pos:start="5:41" pos:end="5:44"><expr pos:start="5:41" pos:end="5:44"><name pos:start="5:41" pos:end="5:44">opts</name></expr></argument>, <argument pos:start="5:47" pos:end="5:52"><expr pos:start="5:47" pos:end="5:52"><literal type="string" pos:start="5:47" pos:end="5:52">"path"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">CharDriverState</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:24">chr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:11"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">fd</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:37"><expr pos:start="13:5" pos:end="13:36"><name pos:start="13:5" pos:end="13:6">fd</name> <operator pos:start="13:8" pos:end="13:8">=</operator> <call pos:start="13:10" pos:end="13:36"><name pos:start="13:10" pos:end="13:18">qemu_open</name><argument_list pos:start="13:19" pos:end="13:36">(<argument pos:start="13:20" pos:end="13:27"><expr pos:start="13:20" pos:end="13:27"><name pos:start="13:20" pos:end="13:27">filename</name></expr></argument>, <argument pos:start="13:30" pos:end="13:35"><expr pos:start="13:30" pos:end="13:35"><name pos:start="13:30" pos:end="13:35">O_RDWR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:15">(<expr pos:start="15:9" pos:end="15:14"><name pos:start="15:9" pos:end="15:10">fd</name> <operator pos:start="15:12" pos:end="15:12">&lt;</operator> <literal type="number" pos:start="15:14" pos:end="15:14">0</literal></expr>)</condition> <block pos:start="15:17" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:22">

        <return pos:start="17:9" pos:end="17:22">return <expr pos:start="17:16" pos:end="17:21"><operator pos:start="17:16" pos:end="17:16">-</operator><name pos:start="17:17" pos:end="17:21">errno</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:45"><expr pos:start="23:5" pos:end="23:44"><name pos:start="23:5" pos:end="23:7">chr</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:44"><name pos:start="23:11" pos:end="23:19">g_malloc0</name><argument_list pos:start="23:20" pos:end="23:44">(<argument pos:start="23:21" pos:end="23:43"><expr pos:start="23:21" pos:end="23:43"><sizeof pos:start="23:21" pos:end="23:43">sizeof<argument_list pos:start="23:27" pos:end="23:43">(<argument pos:start="23:28" pos:end="23:42"><expr pos:start="23:28" pos:end="23:42"><name pos:start="23:28" pos:end="23:42">CharDriverState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:39"><expr pos:start="25:5" pos:end="25:38"><name pos:start="25:5" pos:end="25:15"><name pos:start="25:5" pos:end="25:7">chr</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:15">opaque</name></name> <operator pos:start="25:17" pos:end="25:17">=</operator> <operator pos:start="25:19" pos:end="25:19">(</operator><name pos:start="25:20" pos:end="25:23">void</name> <operator pos:start="25:25" pos:end="25:25">*</operator><operator pos:start="25:26" pos:end="25:26">)</operator><operator pos:start="25:27" pos:end="25:27">(</operator><name pos:start="25:28" pos:end="25:35">intptr_t</name><operator pos:start="25:36" pos:end="25:36">)</operator><name pos:start="25:37" pos:end="25:38">fd</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:36"><expr pos:start="27:5" pos:end="27:35"><name pos:start="27:5" pos:end="27:18"><name pos:start="27:5" pos:end="27:7">chr</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:18">chr_write</name></name> <operator pos:start="27:20" pos:end="27:20">=</operator> <name pos:start="27:22" pos:end="27:35">null_chr_write</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:30"><expr pos:start="29:5" pos:end="29:29"><name pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:7">chr</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:18">chr_ioctl</name></name> <operator pos:start="29:20" pos:end="29:20">=</operator> <name pos:start="29:22" pos:end="29:29">pp_ioctl</name></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:16"><expr pos:start="33:5" pos:end="33:15"><operator pos:start="33:5" pos:end="33:5">*</operator><name pos:start="33:6" pos:end="33:9">_chr</name> <operator pos:start="33:11" pos:end="33:11">=</operator> <name pos:start="33:13" pos:end="33:15">chr</name></expr>;</expr_stmt>

    <return pos:start="35:5" pos:end="35:13">return <expr pos:start="35:12" pos:end="35:12"><literal type="number" pos:start="35:12" pos:end="35:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
