<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25491.c" pos:tabs="8"><function pos:start="1:1" pos:end="225:1"><type pos:start="1:1" pos:end="1:24"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name> <name pos:start="1:13" pos:end="1:24">coroutine_fn</name></type> <name pos:start="1:26" pos:end="1:34">v9fs_walk</name><parameter_list pos:start="1:35" pos:end="1:48">(<parameter pos:start="1:36" pos:end="1:47"><decl pos:start="1:36" pos:end="1:47"><type pos:start="1:36" pos:end="1:41"><name pos:start="1:36" pos:end="1:39">void</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:47">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="225:1">{<block_content pos:start="5:5" pos:end="223:5">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:16">name_idx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">V9fsQID</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:17">qids</name> <init pos:start="7:19" pos:end="7:24">= <expr pos:start="7:21" pos:end="7:24"><name pos:start="7:21" pos:end="7:24">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:14">err</name> <init pos:start="9:16" pos:end="9:18">= <expr pos:start="9:18" pos:end="9:18"><literal type="number" pos:start="9:18" pos:end="9:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">V9fsPath</name></type> <name pos:start="11:14" pos:end="11:18">dpath</name></decl>, <decl pos:start="11:21" pos:end="11:24"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:21" pos:end="11:24">path</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint16_t</name></type> <name pos:start="13:14" pos:end="13:20">nwnames</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:10">struct</name> <name pos:start="15:12" pos:end="15:15">stat</name></name></type> <name pos:start="15:17" pos:end="15:21">stbuf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:10">size_t</name></type> <name pos:start="17:12" pos:end="17:17">offset</name> <init pos:start="17:19" pos:end="17:21">= <expr pos:start="17:21" pos:end="17:21"><literal type="number" pos:start="17:21" pos:end="17:21">7</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:24"><decl pos:start="19:5" pos:end="19:15"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:11">int32_t</name></type> <name pos:start="19:13" pos:end="19:15">fid</name></decl>, <decl pos:start="19:18" pos:end="19:23"><type ref="prev" pos:start="19:5" pos:end="19:11"/><name pos:start="19:18" pos:end="19:23">newfid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:30"><decl pos:start="21:5" pos:end="21:29"><type pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:14">V9fsString</name> <modifier pos:start="21:16" pos:end="21:16">*</modifier></type><name pos:start="21:17" pos:end="21:22">wnames</name> <init pos:start="21:24" pos:end="21:29">= <expr pos:start="21:26" pos:end="21:29"><name pos:start="21:26" pos:end="21:29">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:23"><decl pos:start="23:5" pos:end="23:22"><type pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:16">V9fsFidState</name> <modifier pos:start="23:18" pos:end="23:18">*</modifier></type><name pos:start="23:19" pos:end="23:22">fidp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:33"><decl pos:start="25:5" pos:end="25:32"><type pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:16">V9fsFidState</name> <modifier pos:start="25:18" pos:end="25:18">*</modifier></type><name pos:start="25:19" pos:end="25:25">newfidp</name> <init pos:start="25:27" pos:end="25:32">= <expr pos:start="25:29" pos:end="25:32"><name pos:start="25:29" pos:end="25:32">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:26"><decl pos:start="27:5" pos:end="27:25"><type pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:11">V9fsPDU</name> <modifier pos:start="27:13" pos:end="27:13">*</modifier></type><name pos:start="27:14" pos:end="27:16">pdu</name> <init pos:start="27:18" pos:end="27:25">= <expr pos:start="27:20" pos:end="27:25"><name pos:start="27:20" pos:end="27:25">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:26"><decl pos:start="29:5" pos:end="29:25"><type pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:13">V9fsState</name> <modifier pos:start="29:15" pos:end="29:15">*</modifier></type><name pos:start="29:16" pos:end="29:16">s</name> <init pos:start="29:18" pos:end="29:25">= <expr pos:start="29:20" pos:end="29:25"><name pos:start="29:20" pos:end="29:25"><name pos:start="29:20" pos:end="29:22">pdu</name><operator pos:start="29:23" pos:end="29:24">-&gt;</operator><name pos:start="29:25" pos:end="29:25">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:16"><decl pos:start="31:5" pos:end="31:15"><type pos:start="31:5" pos:end="31:11"><name pos:start="31:5" pos:end="31:11">V9fsQID</name></type> <name pos:start="31:13" pos:end="31:15">qid</name></decl>;</decl_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:69"><expr pos:start="35:5" pos:end="35:68"><name pos:start="35:5" pos:end="35:7">err</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <call pos:start="35:11" pos:end="35:68"><name pos:start="35:11" pos:end="35:23">pdu_unmarshal</name><argument_list pos:start="35:24" pos:end="35:68">(<argument pos:start="35:25" pos:end="35:27"><expr pos:start="35:25" pos:end="35:27"><name pos:start="35:25" pos:end="35:27">pdu</name></expr></argument>, <argument pos:start="35:30" pos:end="35:35"><expr pos:start="35:30" pos:end="35:35"><name pos:start="35:30" pos:end="35:35">offset</name></expr></argument>, <argument pos:start="35:38" pos:end="35:42"><expr pos:start="35:38" pos:end="35:42"><literal type="string" pos:start="35:38" pos:end="35:42">"ddw"</literal></expr></argument>, <argument pos:start="35:45" pos:end="35:48"><expr pos:start="35:45" pos:end="35:48"><operator pos:start="35:45" pos:end="35:45">&amp;</operator><name pos:start="35:46" pos:end="35:48">fid</name></expr></argument>, <argument pos:start="35:51" pos:end="35:57"><expr pos:start="35:51" pos:end="35:57"><operator pos:start="35:51" pos:end="35:51">&amp;</operator><name pos:start="35:52" pos:end="35:57">newfid</name></expr></argument>, <argument pos:start="35:60" pos:end="35:67"><expr pos:start="35:60" pos:end="35:67"><operator pos:start="35:60" pos:end="35:60">&amp;</operator><name pos:start="35:61" pos:end="35:67">nwnames</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:16">(<expr pos:start="37:9" pos:end="37:15"><name pos:start="37:9" pos:end="37:11">err</name> <operator pos:start="37:13" pos:end="37:13">&lt;</operator> <literal type="number" pos:start="37:15" pos:end="37:15">0</literal></expr>)</condition> <block pos:start="37:18" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:16">

        <expr_stmt pos:start="39:9" pos:end="39:31"><expr pos:start="39:9" pos:end="39:30"><call pos:start="39:9" pos:end="39:30"><name pos:start="39:9" pos:end="39:20">pdu_complete</name><argument_list pos:start="39:21" pos:end="39:30">(<argument pos:start="39:22" pos:end="39:24"><expr pos:start="39:22" pos:end="39:24"><name pos:start="39:22" pos:end="39:24">pdu</name></expr></argument>, <argument pos:start="39:27" pos:end="39:29"><expr pos:start="39:27" pos:end="39:29"><name pos:start="39:27" pos:end="39:29">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:16">return ;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:18"><expr pos:start="45:5" pos:end="45:17"><name pos:start="45:5" pos:end="45:10">offset</name> <operator pos:start="45:12" pos:end="45:13">+=</operator> <name pos:start="45:15" pos:end="45:17">err</name></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:61"><expr pos:start="49:5" pos:end="49:60"><call pos:start="49:5" pos:end="49:60"><name pos:start="49:5" pos:end="49:19">trace_v9fs_walk</name><argument_list pos:start="49:20" pos:end="49:60">(<argument pos:start="49:21" pos:end="49:28"><expr pos:start="49:21" pos:end="49:28"><name pos:start="49:21" pos:end="49:28"><name pos:start="49:21" pos:end="49:23">pdu</name><operator pos:start="49:24" pos:end="49:25">-&gt;</operator><name pos:start="49:26" pos:end="49:28">tag</name></name></expr></argument>, <argument pos:start="49:31" pos:end="49:37"><expr pos:start="49:31" pos:end="49:37"><name pos:start="49:31" pos:end="49:37"><name pos:start="49:31" pos:end="49:33">pdu</name><operator pos:start="49:34" pos:end="49:35">-&gt;</operator><name pos:start="49:36" pos:end="49:37">id</name></name></expr></argument>, <argument pos:start="49:40" pos:end="49:42"><expr pos:start="49:40" pos:end="49:42"><name pos:start="49:40" pos:end="49:42">fid</name></expr></argument>, <argument pos:start="49:45" pos:end="49:50"><expr pos:start="49:45" pos:end="49:50"><name pos:start="49:45" pos:end="49:50">newfid</name></expr></argument>, <argument pos:start="49:53" pos:end="49:59"><expr pos:start="49:53" pos:end="49:59"><name pos:start="49:53" pos:end="49:59">nwnames</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="53:5" pos:end="87:5"><if pos:start="53:5" pos:end="81:5">if <condition pos:start="53:8" pos:end="53:42">(<expr pos:start="53:9" pos:end="53:41"><name pos:start="53:9" pos:end="53:15">nwnames</name> <operator pos:start="53:17" pos:end="53:18">&amp;&amp;</operator> <name pos:start="53:20" pos:end="53:26">nwnames</name> <operator pos:start="53:28" pos:end="53:29">&lt;=</operator> <name pos:start="53:31" pos:end="53:41">P9_MAXWELEM</name></expr>)</condition> <block pos:start="53:44" pos:end="81:5">{<block_content pos:start="55:9" pos:end="79:9">

        <expr_stmt pos:start="55:9" pos:end="55:56"><expr pos:start="55:9" pos:end="55:55"><name pos:start="55:9" pos:end="55:14">wnames</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <call pos:start="55:18" pos:end="55:55"><name pos:start="55:18" pos:end="55:26">g_malloc0</name><argument_list pos:start="55:27" pos:end="55:55">(<argument pos:start="55:28" pos:end="55:54"><expr pos:start="55:28" pos:end="55:54"><sizeof pos:start="55:28" pos:end="55:44">sizeof<argument_list pos:start="55:34" pos:end="55:44">(<argument pos:start="55:35" pos:end="55:43"><expr pos:start="55:35" pos:end="55:43"><name pos:start="55:35" pos:end="55:43"><name pos:start="55:35" pos:end="55:40">wnames</name><index pos:start="55:41" pos:end="55:43">[<expr pos:start="55:42" pos:end="55:42"><literal type="number" pos:start="55:42" pos:end="55:42">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof> <operator pos:start="55:46" pos:end="55:46">*</operator> <name pos:start="55:48" pos:end="55:54">nwnames</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:54"><expr pos:start="57:9" pos:end="57:53"><name pos:start="57:9" pos:end="57:12">qids</name>   <operator pos:start="57:16" pos:end="57:16">=</operator> <call pos:start="57:18" pos:end="57:53"><name pos:start="57:18" pos:end="57:26">g_malloc0</name><argument_list pos:start="57:27" pos:end="57:53">(<argument pos:start="57:28" pos:end="57:52"><expr pos:start="57:28" pos:end="57:52"><sizeof pos:start="57:28" pos:end="57:42">sizeof<argument_list pos:start="57:34" pos:end="57:42">(<argument pos:start="57:35" pos:end="57:41"><expr pos:start="57:35" pos:end="57:41"><name pos:start="57:35" pos:end="57:41"><name pos:start="57:35" pos:end="57:38">qids</name><index pos:start="57:39" pos:end="57:41">[<expr pos:start="57:40" pos:end="57:40"><literal type="number" pos:start="57:40" pos:end="57:40">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof> <operator pos:start="57:44" pos:end="57:44">*</operator> <name pos:start="57:46" pos:end="57:52">nwnames</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="59:9" pos:end="79:9">for <control pos:start="59:13" pos:end="59:37">(<init pos:start="59:14" pos:end="59:19"><expr pos:start="59:14" pos:end="59:18"><name pos:start="59:14" pos:end="59:14">i</name> <operator pos:start="59:16" pos:end="59:16">=</operator> <literal type="number" pos:start="59:18" pos:end="59:18">0</literal></expr>;</init> <condition pos:start="59:21" pos:end="59:32"><expr pos:start="59:21" pos:end="59:31"><name pos:start="59:21" pos:end="59:21">i</name> <operator pos:start="59:23" pos:end="59:23">&lt;</operator> <name pos:start="59:25" pos:end="59:31">nwnames</name></expr>;</condition> <incr pos:start="59:34" pos:end="59:36"><expr pos:start="59:34" pos:end="59:36"><name pos:start="59:34" pos:end="59:34">i</name><operator pos:start="59:35" pos:end="59:36">++</operator></expr></incr>)</control> <block pos:start="59:39" pos:end="79:9">{<block_content pos:start="61:13" pos:end="77:26">

            <expr_stmt pos:start="61:13" pos:end="61:62"><expr pos:start="61:13" pos:end="61:61"><name pos:start="61:13" pos:end="61:15">err</name> <operator pos:start="61:17" pos:end="61:17">=</operator> <call pos:start="61:19" pos:end="61:61"><name pos:start="61:19" pos:end="61:31">pdu_unmarshal</name><argument_list pos:start="61:32" pos:end="61:61">(<argument pos:start="61:33" pos:end="61:35"><expr pos:start="61:33" pos:end="61:35"><name pos:start="61:33" pos:end="61:35">pdu</name></expr></argument>, <argument pos:start="61:38" pos:end="61:43"><expr pos:start="61:38" pos:end="61:43"><name pos:start="61:38" pos:end="61:43">offset</name></expr></argument>, <argument pos:start="61:46" pos:end="61:48"><expr pos:start="61:46" pos:end="61:48"><literal type="string" pos:start="61:46" pos:end="61:48">"s"</literal></expr></argument>, <argument pos:start="61:51" pos:end="61:60"><expr pos:start="61:51" pos:end="61:60"><operator pos:start="61:51" pos:end="61:51">&amp;</operator><name pos:start="61:52" pos:end="61:60"><name pos:start="61:52" pos:end="61:57">wnames</name><index pos:start="61:58" pos:end="61:60">[<expr pos:start="61:59" pos:end="61:59"><name pos:start="61:59" pos:end="61:59">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="63:13" pos:end="67:13"><if pos:start="63:13" pos:end="67:13">if <condition pos:start="63:16" pos:end="63:24">(<expr pos:start="63:17" pos:end="63:23"><name pos:start="63:17" pos:end="63:19">err</name> <operator pos:start="63:21" pos:end="63:21">&lt;</operator> <literal type="number" pos:start="63:23" pos:end="63:23">0</literal></expr>)</condition> <block pos:start="63:26" pos:end="67:13">{<block_content pos:start="65:17" pos:end="65:31">

                <goto pos:start="65:17" pos:end="65:31">goto <name pos:start="65:22" pos:end="65:30">out_nofid</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="69:13" pos:end="75:13"><if pos:start="69:13" pos:end="75:13">if <condition pos:start="69:16" pos:end="69:48">(<expr pos:start="69:17" pos:end="69:47"><call pos:start="69:17" pos:end="69:47"><name pos:start="69:17" pos:end="69:31">name_is_illegal</name><argument_list pos:start="69:32" pos:end="69:47">(<argument pos:start="69:33" pos:end="69:46"><expr pos:start="69:33" pos:end="69:46"><name pos:start="69:33" pos:end="69:41"><name pos:start="69:33" pos:end="69:38">wnames</name><index pos:start="69:39" pos:end="69:41">[<expr pos:start="69:40" pos:end="69:40"><name pos:start="69:40" pos:end="69:40">i</name></expr>]</index></name><operator pos:start="69:42" pos:end="69:42">.</operator><name pos:start="69:43" pos:end="69:46">data</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="69:50" pos:end="75:13">{<block_content pos:start="71:17" pos:end="73:31">

                <expr_stmt pos:start="71:17" pos:end="71:30"><expr pos:start="71:17" pos:end="71:29"><name pos:start="71:17" pos:end="71:19">err</name> <operator pos:start="71:21" pos:end="71:21">=</operator> <operator pos:start="71:23" pos:end="71:23">-</operator><name pos:start="71:24" pos:end="71:29">ENOENT</name></expr>;</expr_stmt>

                <goto pos:start="73:17" pos:end="73:31">goto <name pos:start="73:22" pos:end="73:30">out_nofid</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:26"><expr pos:start="77:13" pos:end="77:25"><name pos:start="77:13" pos:end="77:18">offset</name> <operator pos:start="77:20" pos:end="77:21">+=</operator> <name pos:start="77:23" pos:end="77:25">err</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <if type="elseif" pos:start="81:7" pos:end="87:5">else if <condition pos:start="81:15" pos:end="81:37">(<expr pos:start="81:16" pos:end="81:36"><name pos:start="81:16" pos:end="81:22">nwnames</name> <operator pos:start="81:24" pos:end="81:24">&gt;</operator> <name pos:start="81:26" pos:end="81:36">P9_MAXWELEM</name></expr>)</condition> <block pos:start="81:39" pos:end="87:5">{<block_content pos:start="83:9" pos:end="85:23">

        <expr_stmt pos:start="83:9" pos:end="83:22"><expr pos:start="83:9" pos:end="83:21"><name pos:start="83:9" pos:end="83:11">err</name> <operator pos:start="83:13" pos:end="83:13">=</operator> <operator pos:start="83:15" pos:end="83:15">-</operator><name pos:start="83:16" pos:end="83:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="85:9" pos:end="85:23">goto <name pos:start="85:14" pos:end="85:22">out_nofid</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:29"><expr pos:start="89:5" pos:end="89:28"><name pos:start="89:5" pos:end="89:8">fidp</name> <operator pos:start="89:10" pos:end="89:10">=</operator> <call pos:start="89:12" pos:end="89:28"><name pos:start="89:12" pos:end="89:18">get_fid</name><argument_list pos:start="89:19" pos:end="89:28">(<argument pos:start="89:20" pos:end="89:22"><expr pos:start="89:20" pos:end="89:22"><name pos:start="89:20" pos:end="89:22">pdu</name></expr></argument>, <argument pos:start="89:25" pos:end="89:27"><expr pos:start="89:25" pos:end="89:27"><name pos:start="89:25" pos:end="89:27">fid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="91:5" pos:end="97:5"><if pos:start="91:5" pos:end="97:5">if <condition pos:start="91:8" pos:end="91:21">(<expr pos:start="91:9" pos:end="91:20"><name pos:start="91:9" pos:end="91:12">fidp</name> <operator pos:start="91:14" pos:end="91:15">==</operator> <name pos:start="91:17" pos:end="91:20">NULL</name></expr>)</condition> <block pos:start="91:23" pos:end="97:5">{<block_content pos:start="93:9" pos:end="95:23">

        <expr_stmt pos:start="93:9" pos:end="93:22"><expr pos:start="93:9" pos:end="93:21"><name pos:start="93:9" pos:end="93:11">err</name> <operator pos:start="93:13" pos:end="93:13">=</operator> <operator pos:start="93:15" pos:end="93:15">-</operator><name pos:start="93:16" pos:end="93:21">ENOENT</name></expr>;</expr_stmt>

        <goto pos:start="95:9" pos:end="95:23">goto <name pos:start="95:14" pos:end="95:22">out_nofid</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:27"><expr pos:start="101:5" pos:end="101:26"><call pos:start="101:5" pos:end="101:26"><name pos:start="101:5" pos:end="101:18">v9fs_path_init</name><argument_list pos:start="101:19" pos:end="101:26">(<argument pos:start="101:20" pos:end="101:25"><expr pos:start="101:20" pos:end="101:25"><operator pos:start="101:20" pos:end="101:20">&amp;</operator><name pos:start="101:21" pos:end="101:25">dpath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:26"><expr pos:start="103:5" pos:end="103:25"><call pos:start="103:5" pos:end="103:25"><name pos:start="103:5" pos:end="103:18">v9fs_path_init</name><argument_list pos:start="103:19" pos:end="103:25">(<argument pos:start="103:20" pos:end="103:24"><expr pos:start="103:20" pos:end="103:24"><operator pos:start="103:20" pos:end="103:20">&amp;</operator><name pos:start="103:21" pos:end="103:24">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="107:5" pos:end="107:38"><expr pos:start="107:5" pos:end="107:37"><name pos:start="107:5" pos:end="107:7">err</name> <operator pos:start="107:9" pos:end="107:9">=</operator> <call pos:start="107:11" pos:end="107:37"><name pos:start="107:11" pos:end="107:20">fid_to_qid</name><argument_list pos:start="107:21" pos:end="107:37">(<argument pos:start="107:22" pos:end="107:24"><expr pos:start="107:22" pos:end="107:24"><name pos:start="107:22" pos:end="107:24">pdu</name></expr></argument>, <argument pos:start="107:27" pos:end="107:30"><expr pos:start="107:27" pos:end="107:30"><name pos:start="107:27" pos:end="107:30">fidp</name></expr></argument>, <argument pos:start="107:33" pos:end="107:36"><expr pos:start="107:33" pos:end="107:36"><operator pos:start="107:33" pos:end="107:33">&amp;</operator><name pos:start="107:34" pos:end="107:36">qid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="109:5" pos:end="113:5"><if pos:start="109:5" pos:end="113:5">if <condition pos:start="109:8" pos:end="109:16">(<expr pos:start="109:9" pos:end="109:15"><name pos:start="109:9" pos:end="109:11">err</name> <operator pos:start="109:13" pos:end="109:13">&lt;</operator> <literal type="number" pos:start="109:15" pos:end="109:15">0</literal></expr>)</condition> <block pos:start="109:18" pos:end="113:5">{<block_content pos:start="111:9" pos:end="111:17">

        <goto pos:start="111:9" pos:end="111:17">goto <name pos:start="111:14" pos:end="111:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="117:5" pos:end="123:7">/*

     * Both dpath and path initially poin to fidp.

     * Needed to handle request with nwnames == 0

     */</comment>

    <expr_stmt pos:start="125:5" pos:end="125:40"><expr pos:start="125:5" pos:end="125:39"><call pos:start="125:5" pos:end="125:39"><name pos:start="125:5" pos:end="125:18">v9fs_path_copy</name><argument_list pos:start="125:19" pos:end="125:39">(<argument pos:start="125:20" pos:end="125:25"><expr pos:start="125:20" pos:end="125:25"><operator pos:start="125:20" pos:end="125:20">&amp;</operator><name pos:start="125:21" pos:end="125:25">dpath</name></expr></argument>, <argument pos:start="125:28" pos:end="125:38"><expr pos:start="125:28" pos:end="125:38"><operator pos:start="125:28" pos:end="125:28">&amp;</operator><name pos:start="125:29" pos:end="125:38"><name pos:start="125:29" pos:end="125:32">fidp</name><operator pos:start="125:33" pos:end="125:34">-&gt;</operator><name pos:start="125:35" pos:end="125:38">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:39"><expr pos:start="127:5" pos:end="127:38"><call pos:start="127:5" pos:end="127:38"><name pos:start="127:5" pos:end="127:18">v9fs_path_copy</name><argument_list pos:start="127:19" pos:end="127:38">(<argument pos:start="127:20" pos:end="127:24"><expr pos:start="127:20" pos:end="127:24"><operator pos:start="127:20" pos:end="127:20">&amp;</operator><name pos:start="127:21" pos:end="127:24">path</name></expr></argument>, <argument pos:start="127:27" pos:end="127:37"><expr pos:start="127:27" pos:end="127:37"><operator pos:start="127:27" pos:end="127:27">&amp;</operator><name pos:start="127:28" pos:end="127:37"><name pos:start="127:28" pos:end="127:31">fidp</name><operator pos:start="127:32" pos:end="127:33">-&gt;</operator><name pos:start="127:34" pos:end="127:37">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="129:5" pos:end="163:5">for <control pos:start="129:9" pos:end="129:54">(<init pos:start="129:10" pos:end="129:22"><expr pos:start="129:10" pos:end="129:21"><name pos:start="129:10" pos:end="129:17">name_idx</name> <operator pos:start="129:19" pos:end="129:19">=</operator> <literal type="number" pos:start="129:21" pos:end="129:21">0</literal></expr>;</init> <condition pos:start="129:24" pos:end="129:42"><expr pos:start="129:24" pos:end="129:41"><name pos:start="129:24" pos:end="129:31">name_idx</name> <operator pos:start="129:33" pos:end="129:33">&lt;</operator> <name pos:start="129:35" pos:end="129:41">nwnames</name></expr>;</condition> <incr pos:start="129:44" pos:end="129:53"><expr pos:start="129:44" pos:end="129:53"><name pos:start="129:44" pos:end="129:51">name_idx</name><operator pos:start="129:52" pos:end="129:53">++</operator></expr></incr>)</control> <block pos:start="129:56" pos:end="163:5">{<block_content pos:start="131:9" pos:end="161:51">

        <if_stmt pos:start="131:9" pos:end="159:9"><if pos:start="131:9" pos:end="159:9">if <condition pos:start="131:12" pos:end="133:48">(<expr pos:start="131:13" pos:end="133:47"><call pos:start="131:13" pos:end="131:49"><name pos:start="131:13" pos:end="131:24">not_same_qid</name><argument_list pos:start="131:25" pos:end="131:49">(<argument pos:start="131:26" pos:end="131:42"><expr pos:start="131:26" pos:end="131:42"><operator pos:start="131:26" pos:end="131:26">&amp;</operator><name pos:start="131:27" pos:end="131:42"><name pos:start="131:27" pos:end="131:29">pdu</name><operator pos:start="131:30" pos:end="131:31">-&gt;</operator><name pos:start="131:32" pos:end="131:32">s</name><operator pos:start="131:33" pos:end="131:34">-&gt;</operator><name pos:start="131:35" pos:end="131:42">root_qid</name></name></expr></argument>, <argument pos:start="131:45" pos:end="131:48"><expr pos:start="131:45" pos:end="131:48"><operator pos:start="131:45" pos:end="131:45">&amp;</operator><name pos:start="131:46" pos:end="131:48">qid</name></expr></argument>)</argument_list></call> <operator pos:start="131:51" pos:end="131:52">||</operator>

            <call pos:start="133:13" pos:end="133:47"><name pos:start="133:13" pos:end="133:18">strcmp</name><argument_list pos:start="133:19" pos:end="133:47">(<argument pos:start="133:20" pos:end="133:23"><expr pos:start="133:20" pos:end="133:23"><literal type="string" pos:start="133:20" pos:end="133:23">".."</literal></expr></argument>, <argument pos:start="133:26" pos:end="133:46"><expr pos:start="133:26" pos:end="133:46"><name pos:start="133:26" pos:end="133:41"><name pos:start="133:26" pos:end="133:31">wnames</name><index pos:start="133:32" pos:end="133:41">[<expr pos:start="133:33" pos:end="133:40"><name pos:start="133:33" pos:end="133:40">name_idx</name></expr>]</index></name><operator pos:start="133:42" pos:end="133:42">.</operator><name pos:start="133:43" pos:end="133:46">data</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="133:50" pos:end="159:9">{<block_content pos:start="135:13" pos:end="157:42">

            <expr_stmt pos:start="135:13" pos:end="137:46"><expr pos:start="135:13" pos:end="137:45"><name pos:start="135:13" pos:end="135:15">err</name> <operator pos:start="135:17" pos:end="135:17">=</operator> <call pos:start="135:19" pos:end="137:45"><name pos:start="135:19" pos:end="135:38">v9fs_co_name_to_path</name><argument_list pos:start="135:39" pos:end="137:45">(<argument pos:start="135:40" pos:end="135:42"><expr pos:start="135:40" pos:end="135:42"><name pos:start="135:40" pos:end="135:42">pdu</name></expr></argument>, <argument pos:start="135:45" pos:end="135:50"><expr pos:start="135:45" pos:end="135:50"><operator pos:start="135:45" pos:end="135:45">&amp;</operator><name pos:start="135:46" pos:end="135:50">dpath</name></expr></argument>, <argument pos:start="135:53" pos:end="135:73"><expr pos:start="135:53" pos:end="135:73"><name pos:start="135:53" pos:end="135:68"><name pos:start="135:53" pos:end="135:58">wnames</name><index pos:start="135:59" pos:end="135:68">[<expr pos:start="135:60" pos:end="135:67"><name pos:start="135:60" pos:end="135:67">name_idx</name></expr>]</index></name><operator pos:start="135:69" pos:end="135:69">.</operator><name pos:start="135:70" pos:end="135:73">data</name></expr></argument>,

                                       <argument pos:start="137:40" pos:end="137:44"><expr pos:start="137:40" pos:end="137:44"><operator pos:start="137:40" pos:end="137:40">&amp;</operator><name pos:start="137:41" pos:end="137:44">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="139:13" pos:end="143:13"><if pos:start="139:13" pos:end="143:13">if <condition pos:start="139:16" pos:end="139:24">(<expr pos:start="139:17" pos:end="139:23"><name pos:start="139:17" pos:end="139:19">err</name> <operator pos:start="139:21" pos:end="139:21">&lt;</operator> <literal type="number" pos:start="139:23" pos:end="139:23">0</literal></expr>)</condition> <block pos:start="139:26" pos:end="143:13">{<block_content pos:start="141:17" pos:end="141:25">

                <goto pos:start="141:17" pos:end="141:25">goto <name pos:start="141:22" pos:end="141:24">out</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="147:13" pos:end="147:52"><expr pos:start="147:13" pos:end="147:51"><name pos:start="147:13" pos:end="147:15">err</name> <operator pos:start="147:17" pos:end="147:17">=</operator> <call pos:start="147:19" pos:end="147:51"><name pos:start="147:19" pos:end="147:31">v9fs_co_lstat</name><argument_list pos:start="147:32" pos:end="147:51">(<argument pos:start="147:33" pos:end="147:35"><expr pos:start="147:33" pos:end="147:35"><name pos:start="147:33" pos:end="147:35">pdu</name></expr></argument>, <argument pos:start="147:38" pos:end="147:42"><expr pos:start="147:38" pos:end="147:42"><operator pos:start="147:38" pos:end="147:38">&amp;</operator><name pos:start="147:39" pos:end="147:42">path</name></expr></argument>, <argument pos:start="147:45" pos:end="147:50"><expr pos:start="147:45" pos:end="147:50"><operator pos:start="147:45" pos:end="147:45">&amp;</operator><name pos:start="147:46" pos:end="147:50">stbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="149:13" pos:end="153:13"><if pos:start="149:13" pos:end="153:13">if <condition pos:start="149:16" pos:end="149:24">(<expr pos:start="149:17" pos:end="149:23"><name pos:start="149:17" pos:end="149:19">err</name> <operator pos:start="149:21" pos:end="149:21">&lt;</operator> <literal type="number" pos:start="149:23" pos:end="149:23">0</literal></expr>)</condition> <block pos:start="149:26" pos:end="153:13">{<block_content pos:start="151:17" pos:end="151:25">

                <goto pos:start="151:17" pos:end="151:25">goto <name pos:start="151:22" pos:end="151:24">out</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:38"><expr pos:start="155:13" pos:end="155:37"><call pos:start="155:13" pos:end="155:37"><name pos:start="155:13" pos:end="155:23">stat_to_qid</name><argument_list pos:start="155:24" pos:end="155:37">(<argument pos:start="155:25" pos:end="155:30"><expr pos:start="155:25" pos:end="155:30"><operator pos:start="155:25" pos:end="155:25">&amp;</operator><name pos:start="155:26" pos:end="155:30">stbuf</name></expr></argument>, <argument pos:start="155:33" pos:end="155:36"><expr pos:start="155:33" pos:end="155:36"><operator pos:start="155:33" pos:end="155:33">&amp;</operator><name pos:start="155:34" pos:end="155:36">qid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:42"><expr pos:start="157:13" pos:end="157:41"><call pos:start="157:13" pos:end="157:41"><name pos:start="157:13" pos:end="157:26">v9fs_path_copy</name><argument_list pos:start="157:27" pos:end="157:41">(<argument pos:start="157:28" pos:end="157:33"><expr pos:start="157:28" pos:end="157:33"><operator pos:start="157:28" pos:end="157:28">&amp;</operator><name pos:start="157:29" pos:end="157:33">dpath</name></expr></argument>, <argument pos:start="157:36" pos:end="157:40"><expr pos:start="157:36" pos:end="157:40"><operator pos:start="157:36" pos:end="157:36">&amp;</operator><name pos:start="157:37" pos:end="157:40">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:51"><expr pos:start="161:9" pos:end="161:50"><call pos:start="161:9" pos:end="161:50"><name pos:start="161:9" pos:end="161:14">memcpy</name><argument_list pos:start="161:15" pos:end="161:50">(<argument pos:start="161:16" pos:end="161:30"><expr pos:start="161:16" pos:end="161:30"><operator pos:start="161:16" pos:end="161:16">&amp;</operator><name pos:start="161:17" pos:end="161:30"><name pos:start="161:17" pos:end="161:20">qids</name><index pos:start="161:21" pos:end="161:30">[<expr pos:start="161:22" pos:end="161:29"><name pos:start="161:22" pos:end="161:29">name_idx</name></expr>]</index></name></expr></argument>, <argument pos:start="161:33" pos:end="161:36"><expr pos:start="161:33" pos:end="161:36"><operator pos:start="161:33" pos:end="161:33">&amp;</operator><name pos:start="161:34" pos:end="161:36">qid</name></expr></argument>, <argument pos:start="161:39" pos:end="161:49"><expr pos:start="161:39" pos:end="161:49"><sizeof pos:start="161:39" pos:end="161:49">sizeof<argument_list pos:start="161:45" pos:end="161:49">(<argument pos:start="161:46" pos:end="161:48"><expr pos:start="161:46" pos:end="161:48"><name pos:start="161:46" pos:end="161:48">qid</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="165:5" pos:end="187:5"><if pos:start="165:5" pos:end="171:5">if <condition pos:start="165:8" pos:end="165:22">(<expr pos:start="165:9" pos:end="165:21"><name pos:start="165:9" pos:end="165:11">fid</name> <operator pos:start="165:13" pos:end="165:14">==</operator> <name pos:start="165:16" pos:end="165:21">newfid</name></expr>)</condition> <block pos:start="165:24" pos:end="171:5">{<block_content pos:start="167:9" pos:end="169:43">

        <expr_stmt pos:start="167:9" pos:end="167:46"><expr pos:start="167:9" pos:end="167:45"><call pos:start="167:9" pos:end="167:45"><name pos:start="167:9" pos:end="167:14">BUG_ON</name><argument_list pos:start="167:15" pos:end="167:45">(<argument pos:start="167:16" pos:end="167:44"><expr pos:start="167:16" pos:end="167:44"><name pos:start="167:16" pos:end="167:29"><name pos:start="167:16" pos:end="167:19">fidp</name><operator pos:start="167:20" pos:end="167:21">-&gt;</operator><name pos:start="167:22" pos:end="167:29">fid_type</name></name> <operator pos:start="167:31" pos:end="167:32">!=</operator> <name pos:start="167:34" pos:end="167:44">P9_FID_NONE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:43"><expr pos:start="169:9" pos:end="169:42"><call pos:start="169:9" pos:end="169:42"><name pos:start="169:9" pos:end="169:22">v9fs_path_copy</name><argument_list pos:start="169:23" pos:end="169:42">(<argument pos:start="169:24" pos:end="169:34"><expr pos:start="169:24" pos:end="169:34"><operator pos:start="169:24" pos:end="169:24">&amp;</operator><name pos:start="169:25" pos:end="169:34"><name pos:start="169:25" pos:end="169:28">fidp</name><operator pos:start="169:29" pos:end="169:30">-&gt;</operator><name pos:start="169:31" pos:end="169:34">path</name></name></expr></argument>, <argument pos:start="169:37" pos:end="169:41"><expr pos:start="169:37" pos:end="169:41"><operator pos:start="169:37" pos:end="169:37">&amp;</operator><name pos:start="169:38" pos:end="169:41">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="171:7" pos:end="187:5">else <block pos:start="171:12" pos:end="187:5">{<block_content pos:start="173:9" pos:end="185:46">

        <expr_stmt pos:start="173:9" pos:end="173:39"><expr pos:start="173:9" pos:end="173:38"><name pos:start="173:9" pos:end="173:15">newfidp</name> <operator pos:start="173:17" pos:end="173:17">=</operator> <call pos:start="173:19" pos:end="173:38"><name pos:start="173:19" pos:end="173:27">alloc_fid</name><argument_list pos:start="173:28" pos:end="173:38">(<argument pos:start="173:29" pos:end="173:29"><expr pos:start="173:29" pos:end="173:29"><name pos:start="173:29" pos:end="173:29">s</name></expr></argument>, <argument pos:start="173:32" pos:end="173:37"><expr pos:start="173:32" pos:end="173:37"><name pos:start="173:32" pos:end="173:37">newfid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="175:9" pos:end="181:9"><if pos:start="175:9" pos:end="181:9">if <condition pos:start="175:12" pos:end="175:28">(<expr pos:start="175:13" pos:end="175:27"><name pos:start="175:13" pos:end="175:19">newfidp</name> <operator pos:start="175:21" pos:end="175:22">==</operator> <name pos:start="175:24" pos:end="175:27">NULL</name></expr>)</condition> <block pos:start="175:30" pos:end="181:9">{<block_content pos:start="177:13" pos:end="179:21">

            <expr_stmt pos:start="177:13" pos:end="177:26"><expr pos:start="177:13" pos:end="177:25"><name pos:start="177:13" pos:end="177:15">err</name> <operator pos:start="177:17" pos:end="177:17">=</operator> <operator pos:start="177:19" pos:end="177:19">-</operator><name pos:start="177:20" pos:end="177:25">EINVAL</name></expr>;</expr_stmt>

            <goto pos:start="179:13" pos:end="179:21">goto <name pos:start="179:18" pos:end="179:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:33"><expr pos:start="183:9" pos:end="183:32"><name pos:start="183:9" pos:end="183:20"><name pos:start="183:9" pos:end="183:15">newfidp</name><operator pos:start="183:16" pos:end="183:17">-&gt;</operator><name pos:start="183:18" pos:end="183:20">uid</name></name> <operator pos:start="183:22" pos:end="183:22">=</operator> <name pos:start="183:24" pos:end="183:32"><name pos:start="183:24" pos:end="183:27">fidp</name><operator pos:start="183:28" pos:end="183:29">-&gt;</operator><name pos:start="183:30" pos:end="183:32">uid</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:46"><expr pos:start="185:9" pos:end="185:45"><call pos:start="185:9" pos:end="185:45"><name pos:start="185:9" pos:end="185:22">v9fs_path_copy</name><argument_list pos:start="185:23" pos:end="185:45">(<argument pos:start="185:24" pos:end="185:37"><expr pos:start="185:24" pos:end="185:37"><operator pos:start="185:24" pos:end="185:24">&amp;</operator><name pos:start="185:25" pos:end="185:37"><name pos:start="185:25" pos:end="185:31">newfidp</name><operator pos:start="185:32" pos:end="185:33">-&gt;</operator><name pos:start="185:34" pos:end="185:37">path</name></name></expr></argument>, <argument pos:start="185:40" pos:end="185:44"><expr pos:start="185:40" pos:end="185:44"><operator pos:start="185:40" pos:end="185:40">&amp;</operator><name pos:start="185:41" pos:end="185:44">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="189:5" pos:end="189:48"><expr pos:start="189:5" pos:end="189:47"><name pos:start="189:5" pos:end="189:7">err</name> <operator pos:start="189:9" pos:end="189:9">=</operator> <call pos:start="189:11" pos:end="189:47"><name pos:start="189:11" pos:end="189:27">v9fs_walk_marshal</name><argument_list pos:start="189:28" pos:end="189:47">(<argument pos:start="189:29" pos:end="189:31"><expr pos:start="189:29" pos:end="189:31"><name pos:start="189:29" pos:end="189:31">pdu</name></expr></argument>, <argument pos:start="189:34" pos:end="189:40"><expr pos:start="189:34" pos:end="189:40"><name pos:start="189:34" pos:end="189:40">nwnames</name></expr></argument>, <argument pos:start="189:43" pos:end="189:46"><expr pos:start="189:43" pos:end="189:46"><name pos:start="189:43" pos:end="189:46">qids</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="191:5" pos:end="191:61"><expr pos:start="191:5" pos:end="191:60"><call pos:start="191:5" pos:end="191:60"><name pos:start="191:5" pos:end="191:26">trace_v9fs_walk_return</name><argument_list pos:start="191:27" pos:end="191:60">(<argument pos:start="191:28" pos:end="191:35"><expr pos:start="191:28" pos:end="191:35"><name pos:start="191:28" pos:end="191:35"><name pos:start="191:28" pos:end="191:30">pdu</name><operator pos:start="191:31" pos:end="191:32">-&gt;</operator><name pos:start="191:33" pos:end="191:35">tag</name></name></expr></argument>, <argument pos:start="191:38" pos:end="191:44"><expr pos:start="191:38" pos:end="191:44"><name pos:start="191:38" pos:end="191:44"><name pos:start="191:38" pos:end="191:40">pdu</name><operator pos:start="191:41" pos:end="191:42">-&gt;</operator><name pos:start="191:43" pos:end="191:44">id</name></name></expr></argument>, <argument pos:start="191:47" pos:end="191:53"><expr pos:start="191:47" pos:end="191:53"><name pos:start="191:47" pos:end="191:53">nwnames</name></expr></argument>, <argument pos:start="191:56" pos:end="191:59"><expr pos:start="191:56" pos:end="191:59"><name pos:start="191:56" pos:end="191:59">qids</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="193:1" pos:end="193:4"><name pos:start="193:1" pos:end="193:3">out</name>:</label>

    <expr_stmt pos:start="195:5" pos:end="195:23"><expr pos:start="195:5" pos:end="195:22"><call pos:start="195:5" pos:end="195:22"><name pos:start="195:5" pos:end="195:11">put_fid</name><argument_list pos:start="195:12" pos:end="195:22">(<argument pos:start="195:13" pos:end="195:15"><expr pos:start="195:13" pos:end="195:15"><name pos:start="195:13" pos:end="195:15">pdu</name></expr></argument>, <argument pos:start="195:18" pos:end="195:21"><expr pos:start="195:18" pos:end="195:21"><name pos:start="195:18" pos:end="195:21">fidp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="197:5" pos:end="201:5"><if pos:start="197:5" pos:end="201:5">if <condition pos:start="197:8" pos:end="197:16">(<expr pos:start="197:9" pos:end="197:15"><name pos:start="197:9" pos:end="197:15">newfidp</name></expr>)</condition> <block pos:start="197:18" pos:end="201:5">{<block_content pos:start="199:9" pos:end="199:30">

        <expr_stmt pos:start="199:9" pos:end="199:30"><expr pos:start="199:9" pos:end="199:29"><call pos:start="199:9" pos:end="199:29"><name pos:start="199:9" pos:end="199:15">put_fid</name><argument_list pos:start="199:16" pos:end="199:29">(<argument pos:start="199:17" pos:end="199:19"><expr pos:start="199:17" pos:end="199:19"><name pos:start="199:17" pos:end="199:19">pdu</name></expr></argument>, <argument pos:start="199:22" pos:end="199:28"><expr pos:start="199:22" pos:end="199:28"><name pos:start="199:22" pos:end="199:28">newfidp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="203:5" pos:end="203:27"><expr pos:start="203:5" pos:end="203:26"><call pos:start="203:5" pos:end="203:26"><name pos:start="203:5" pos:end="203:18">v9fs_path_free</name><argument_list pos:start="203:19" pos:end="203:26">(<argument pos:start="203:20" pos:end="203:25"><expr pos:start="203:20" pos:end="203:25"><operator pos:start="203:20" pos:end="203:20">&amp;</operator><name pos:start="203:21" pos:end="203:25">dpath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="205:5" pos:end="205:26"><expr pos:start="205:5" pos:end="205:25"><call pos:start="205:5" pos:end="205:25"><name pos:start="205:5" pos:end="205:18">v9fs_path_free</name><argument_list pos:start="205:19" pos:end="205:25">(<argument pos:start="205:20" pos:end="205:24"><expr pos:start="205:20" pos:end="205:24"><operator pos:start="205:20" pos:end="205:20">&amp;</operator><name pos:start="205:21" pos:end="205:24">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="207:1" pos:end="207:10"><name pos:start="207:1" pos:end="207:9">out_nofid</name>:</label>

    <expr_stmt pos:start="209:5" pos:end="209:27"><expr pos:start="209:5" pos:end="209:26"><call pos:start="209:5" pos:end="209:26"><name pos:start="209:5" pos:end="209:16">pdu_complete</name><argument_list pos:start="209:17" pos:end="209:26">(<argument pos:start="209:18" pos:end="209:20"><expr pos:start="209:18" pos:end="209:20"><name pos:start="209:18" pos:end="209:20">pdu</name></expr></argument>, <argument pos:start="209:23" pos:end="209:25"><expr pos:start="209:23" pos:end="209:25"><name pos:start="209:23" pos:end="209:25">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="211:5" pos:end="223:5"><if pos:start="211:5" pos:end="223:5">if <condition pos:start="211:8" pos:end="211:42">(<expr pos:start="211:9" pos:end="211:41"><name pos:start="211:9" pos:end="211:15">nwnames</name> <operator pos:start="211:17" pos:end="211:18">&amp;&amp;</operator> <name pos:start="211:20" pos:end="211:26">nwnames</name> <operator pos:start="211:28" pos:end="211:29">&lt;=</operator> <name pos:start="211:31" pos:end="211:41">P9_MAXWELEM</name></expr>)</condition> <block pos:start="211:44" pos:end="223:5">{<block_content pos:start="213:9" pos:end="221:21">

        <for pos:start="213:9" pos:end="217:9">for <control pos:start="213:13" pos:end="213:58">(<init pos:start="213:14" pos:end="213:26"><expr pos:start="213:14" pos:end="213:25"><name pos:start="213:14" pos:end="213:21">name_idx</name> <operator pos:start="213:23" pos:end="213:23">=</operator> <literal type="number" pos:start="213:25" pos:end="213:25">0</literal></expr>;</init> <condition pos:start="213:28" pos:end="213:46"><expr pos:start="213:28" pos:end="213:45"><name pos:start="213:28" pos:end="213:35">name_idx</name> <operator pos:start="213:37" pos:end="213:37">&lt;</operator> <name pos:start="213:39" pos:end="213:45">nwnames</name></expr>;</condition> <incr pos:start="213:48" pos:end="213:57"><expr pos:start="213:48" pos:end="213:57"><name pos:start="213:48" pos:end="213:55">name_idx</name><operator pos:start="213:56" pos:end="213:57">++</operator></expr></incr>)</control> <block pos:start="213:60" pos:end="217:9">{<block_content pos:start="215:13" pos:end="215:48">

            <expr_stmt pos:start="215:13" pos:end="215:48"><expr pos:start="215:13" pos:end="215:47"><call pos:start="215:13" pos:end="215:47"><name pos:start="215:13" pos:end="215:28">v9fs_string_free</name><argument_list pos:start="215:29" pos:end="215:47">(<argument pos:start="215:30" pos:end="215:46"><expr pos:start="215:30" pos:end="215:46"><operator pos:start="215:30" pos:end="215:30">&amp;</operator><name pos:start="215:31" pos:end="215:46"><name pos:start="215:31" pos:end="215:36">wnames</name><index pos:start="215:37" pos:end="215:46">[<expr pos:start="215:38" pos:end="215:45"><name pos:start="215:38" pos:end="215:45">name_idx</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="219:9" pos:end="219:23"><expr pos:start="219:9" pos:end="219:22"><call pos:start="219:9" pos:end="219:22"><name pos:start="219:9" pos:end="219:14">g_free</name><argument_list pos:start="219:15" pos:end="219:22">(<argument pos:start="219:16" pos:end="219:21"><expr pos:start="219:16" pos:end="219:21"><name pos:start="219:16" pos:end="219:21">wnames</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="221:9" pos:end="221:21"><expr pos:start="221:9" pos:end="221:20"><call pos:start="221:9" pos:end="221:20"><name pos:start="221:9" pos:end="221:14">g_free</name><argument_list pos:start="221:15" pos:end="221:20">(<argument pos:start="221:16" pos:end="221:19"><expr pos:start="221:16" pos:end="221:19"><name pos:start="221:16" pos:end="221:19">qids</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
