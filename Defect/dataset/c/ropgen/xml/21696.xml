<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21696.c" pos:tabs="8"><function pos:start="1:1" pos:end="123:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:26">qpa_thread_in</name> <parameter_list pos:start="1:28" pos:end="1:38">(<parameter pos:start="1:29" pos:end="1:37"><decl pos:start="1:29" pos:end="1:37"><type pos:start="1:29" pos:end="1:34"><name pos:start="1:29" pos:end="1:32">void</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">arg</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="123:1">{<block_content pos:start="5:5" pos:end="121:16">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">PAVoiceIn</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:17">pa</name> <init pos:start="5:19" pos:end="5:23">= <expr pos:start="5:21" pos:end="5:23"><name pos:start="5:21" pos:end="5:23">arg</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">HWVoiceIn</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:17">hw</name> <init pos:start="7:19" pos:end="7:27">= <expr pos:start="7:21" pos:end="7:27"><operator pos:start="7:21" pos:end="7:21">&amp;</operator><name pos:start="7:22" pos:end="7:27"><name pos:start="7:22" pos:end="7:23">pa</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">hw</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:44">(<expr pos:start="11:9" pos:end="11:43"><call pos:start="11:9" pos:end="11:43"><name pos:start="11:9" pos:end="11:21">audio_pt_lock</name> <argument_list pos:start="11:23" pos:end="11:43">(<argument pos:start="11:24" pos:end="11:30"><expr pos:start="11:24" pos:end="11:30"><operator pos:start="11:24" pos:end="11:24">&amp;</operator><name pos:start="11:25" pos:end="11:30"><name pos:start="11:25" pos:end="11:26">pa</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:30">pt</name></name></expr></argument>, <argument pos:start="11:33" pos:end="11:42"><expr pos:start="11:33" pos:end="11:42"><name pos:start="11:33" pos:end="11:42">AUDIO_FUNC</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:46" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:20">

        <return pos:start="13:9" pos:end="13:20">return <expr pos:start="13:16" pos:end="13:19"><name pos:start="13:16" pos:end="13:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="19:5" pos:end="113:5">for <control pos:start="19:9" pos:end="19:12">(<init pos:start="19:10" pos:end="19:10">;</init><condition pos:start="19:11" pos:end="19:11">;</condition><incr/>)</control> <block pos:start="19:14" pos:end="113:5">{<block_content pos:start="21:9" pos:end="111:25">

        <decl_stmt pos:start="21:9" pos:end="21:32"><decl pos:start="21:9" pos:end="21:16"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:16">incr</name></decl>, <decl pos:start="21:19" pos:end="21:25"><type ref="prev" pos:start="21:9" pos:end="21:11"/><name pos:start="21:19" pos:end="21:25">to_grab</name></decl>, <decl pos:start="21:28" pos:end="21:31"><type ref="prev" pos:start="21:9" pos:end="21:11"/><name pos:start="21:28" pos:end="21:31">wpos</name></decl>;</decl_stmt>



        <for pos:start="25:9" pos:end="49:9">for <control pos:start="25:13" pos:end="25:16">(<init pos:start="25:14" pos:end="25:14">;</init><condition pos:start="25:15" pos:end="25:15">;</condition><incr/>)</control> <block pos:start="25:18" pos:end="49:9">{<block_content pos:start="27:13" pos:end="47:13">

            <if_stmt pos:start="27:13" pos:end="31:13"><if pos:start="27:13" pos:end="31:13">if <condition pos:start="27:16" pos:end="27:25">(<expr pos:start="27:17" pos:end="27:24"><name pos:start="27:17" pos:end="27:24"><name pos:start="27:17" pos:end="27:18">pa</name><operator pos:start="27:19" pos:end="27:20">-&gt;</operator><name pos:start="27:21" pos:end="27:24">done</name></name></expr>)</condition> <block pos:start="27:27" pos:end="31:13">{<block_content pos:start="29:17" pos:end="29:26">

                <goto pos:start="29:17" pos:end="29:26">goto <name pos:start="29:22" pos:end="29:25">exit</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="35:13" pos:end="39:13"><if pos:start="35:13" pos:end="39:13">if <condition pos:start="35:16" pos:end="35:29">(<expr pos:start="35:17" pos:end="35:28"><name pos:start="35:17" pos:end="35:24"><name pos:start="35:17" pos:end="35:18">pa</name><operator pos:start="35:19" pos:end="35:20">-&gt;</operator><name pos:start="35:21" pos:end="35:24">dead</name></name> <operator pos:start="35:26" pos:end="35:26">&gt;</operator> <literal type="number" pos:start="35:28" pos:end="35:28">0</literal></expr>)</condition> <block pos:start="35:31" pos:end="39:13">{<block_content pos:start="37:17" pos:end="37:22">

                <break pos:start="37:17" pos:end="37:22">break;</break>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="43:13" pos:end="47:13"><if pos:start="43:13" pos:end="47:13">if <condition pos:start="43:16" pos:end="43:52">(<expr pos:start="43:17" pos:end="43:51"><call pos:start="43:17" pos:end="43:51"><name pos:start="43:17" pos:end="43:29">audio_pt_wait</name> <argument_list pos:start="43:31" pos:end="43:51">(<argument pos:start="43:32" pos:end="43:38"><expr pos:start="43:32" pos:end="43:38"><operator pos:start="43:32" pos:end="43:32">&amp;</operator><name pos:start="43:33" pos:end="43:38"><name pos:start="43:33" pos:end="43:34">pa</name><operator pos:start="43:35" pos:end="43:36">-&gt;</operator><name pos:start="43:37" pos:end="43:38">pt</name></name></expr></argument>, <argument pos:start="43:41" pos:end="43:50"><expr pos:start="43:41" pos:end="43:50"><name pos:start="43:41" pos:end="43:50">AUDIO_FUNC</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:54" pos:end="47:13">{<block_content pos:start="45:17" pos:end="45:26">

                <goto pos:start="45:17" pos:end="45:26">goto <name pos:start="45:22" pos:end="45:25">exit</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="53:9" pos:end="53:65"><expr pos:start="53:9" pos:end="53:64"><name pos:start="53:9" pos:end="53:12">incr</name> <operator pos:start="53:14" pos:end="53:14">=</operator> <name pos:start="53:16" pos:end="53:22">to_grab</name> <operator pos:start="53:24" pos:end="53:24">=</operator> <call pos:start="53:26" pos:end="53:64"><name pos:start="53:26" pos:end="53:34">audio_MIN</name> <argument_list pos:start="53:36" pos:end="53:64">(<argument pos:start="53:37" pos:end="53:44"><expr pos:start="53:37" pos:end="53:44"><name pos:start="53:37" pos:end="53:44"><name pos:start="53:37" pos:end="53:38">pa</name><operator pos:start="53:39" pos:end="53:40">-&gt;</operator><name pos:start="53:41" pos:end="53:44">dead</name></name></expr></argument>, <argument pos:start="53:47" pos:end="53:63"><expr pos:start="53:47" pos:end="53:63"><name pos:start="53:47" pos:end="53:58"><name pos:start="53:47" pos:end="53:50">conf</name><operator pos:start="53:51" pos:end="53:51">.</operator><name pos:start="53:52" pos:end="53:58">samples</name></name> <operator pos:start="53:60" pos:end="53:61">&gt;&gt;</operator> <literal type="number" pos:start="53:63" pos:end="53:63">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:24"><expr pos:start="55:9" pos:end="55:23"><name pos:start="55:9" pos:end="55:12">wpos</name> <operator pos:start="55:14" pos:end="55:14">=</operator> <name pos:start="55:16" pos:end="55:23"><name pos:start="55:16" pos:end="55:17">pa</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:23">wpos</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="59:9" pos:end="63:9"><if pos:start="59:9" pos:end="63:9">if <condition pos:start="59:12" pos:end="59:50">(<expr pos:start="59:13" pos:end="59:49"><call pos:start="59:13" pos:end="59:49"><name pos:start="59:13" pos:end="59:27">audio_pt_unlock</name> <argument_list pos:start="59:29" pos:end="59:49">(<argument pos:start="59:30" pos:end="59:36"><expr pos:start="59:30" pos:end="59:36"><operator pos:start="59:30" pos:end="59:30">&amp;</operator><name pos:start="59:31" pos:end="59:36"><name pos:start="59:31" pos:end="59:32">pa</name><operator pos:start="59:33" pos:end="59:34">-&gt;</operator><name pos:start="59:35" pos:end="59:36">pt</name></name></expr></argument>, <argument pos:start="59:39" pos:end="59:48"><expr pos:start="59:39" pos:end="59:48"><name pos:start="59:39" pos:end="59:48">AUDIO_FUNC</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="59:52" pos:end="63:9">{<block_content pos:start="61:13" pos:end="61:24">

            <return pos:start="61:13" pos:end="61:24">return <expr pos:start="61:20" pos:end="61:23"><name pos:start="61:20" pos:end="61:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <while pos:start="67:9" pos:end="95:9">while <condition pos:start="67:15" pos:end="67:23">(<expr pos:start="67:16" pos:end="67:22"><name pos:start="67:16" pos:end="67:22">to_grab</name></expr>)</condition> <block pos:start="67:25" pos:end="95:9">{<block_content pos:start="69:13" pos:end="93:29">

            <decl_stmt pos:start="69:13" pos:end="69:22"><decl pos:start="69:13" pos:end="69:21"><type pos:start="69:13" pos:end="69:15"><name pos:start="69:13" pos:end="69:15">int</name></type> <name pos:start="69:17" pos:end="69:21">error</name></decl>;</decl_stmt>

            <decl_stmt pos:start="71:13" pos:end="71:64"><decl pos:start="71:13" pos:end="71:63"><type pos:start="71:13" pos:end="71:15"><name pos:start="71:13" pos:end="71:15">int</name></type> <name pos:start="71:17" pos:end="71:21">chunk</name> <init pos:start="71:23" pos:end="71:63">= <expr pos:start="71:25" pos:end="71:63"><call pos:start="71:25" pos:end="71:63"><name pos:start="71:25" pos:end="71:33">audio_MIN</name> <argument_list pos:start="71:35" pos:end="71:63">(<argument pos:start="71:36" pos:end="71:42"><expr pos:start="71:36" pos:end="71:42"><name pos:start="71:36" pos:end="71:42">to_grab</name></expr></argument>, <argument pos:start="71:45" pos:end="71:62"><expr pos:start="71:45" pos:end="71:62"><name pos:start="71:45" pos:end="71:55"><name pos:start="71:45" pos:end="71:46">hw</name><operator pos:start="71:47" pos:end="71:48">-&gt;</operator><name pos:start="71:49" pos:end="71:55">samples</name></name> <operator pos:start="71:57" pos:end="71:57">-</operator> <name pos:start="71:59" pos:end="71:62">wpos</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="73:13" pos:end="73:52"><decl pos:start="73:13" pos:end="73:51"><type pos:start="73:13" pos:end="73:18"><name pos:start="73:13" pos:end="73:16">void</name> <modifier pos:start="73:18" pos:end="73:18">*</modifier></type><name pos:start="73:19" pos:end="73:21">buf</name> <init pos:start="73:23" pos:end="73:51">= <expr pos:start="73:25" pos:end="73:51"><call pos:start="73:25" pos:end="73:51"><name pos:start="73:25" pos:end="73:31">advance</name> <argument_list pos:start="73:33" pos:end="73:51">(<argument pos:start="73:34" pos:end="73:44"><expr pos:start="73:34" pos:end="73:44"><name pos:start="73:34" pos:end="73:44"><name pos:start="73:34" pos:end="73:35">pa</name><operator pos:start="73:36" pos:end="73:37">-&gt;</operator><name pos:start="73:38" pos:end="73:44">pcm_buf</name></name></expr></argument>, <argument pos:start="73:47" pos:end="73:50"><expr pos:start="73:47" pos:end="73:50"><name pos:start="73:47" pos:end="73:50">wpos</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="77:13" pos:end="85:13"><if pos:start="77:13" pos:end="85:13">if <condition pos:start="77:16" pos:end="79:69">(<expr pos:start="77:17" pos:end="79:68"><call pos:start="77:17" pos:end="79:64"><name pos:start="77:17" pos:end="77:30">pa_simple_read</name> <argument_list pos:start="77:32" pos:end="79:64">(<argument pos:start="77:33" pos:end="77:37"><expr pos:start="77:33" pos:end="77:37"><name pos:start="77:33" pos:end="77:37"><name pos:start="77:33" pos:end="77:34">pa</name><operator pos:start="77:35" pos:end="77:36">-&gt;</operator><name pos:start="77:37" pos:end="77:37">s</name></name></expr></argument>, <argument pos:start="77:40" pos:end="77:42"><expr pos:start="77:40" pos:end="77:42"><name pos:start="77:40" pos:end="77:42">buf</name></expr></argument>,

                                <argument pos:start="79:33" pos:end="79:55"><expr pos:start="79:33" pos:end="79:55"><name pos:start="79:33" pos:end="79:37">chunk</name> <operator pos:start="79:39" pos:end="79:40">&lt;&lt;</operator> <name pos:start="79:42" pos:end="79:55"><name pos:start="79:42" pos:end="79:43">hw</name><operator pos:start="79:44" pos:end="79:45">-&gt;</operator><name pos:start="79:46" pos:end="79:49">info</name><operator pos:start="79:50" pos:end="79:50">.</operator><name pos:start="79:51" pos:end="79:55">shift</name></name></expr></argument>, <argument pos:start="79:58" pos:end="79:63"><expr pos:start="79:58" pos:end="79:63"><operator pos:start="79:58" pos:end="79:58">&amp;</operator><name pos:start="79:59" pos:end="79:63">error</name></expr></argument>)</argument_list></call> <operator pos:start="79:66" pos:end="79:66">&lt;</operator> <literal type="number" pos:start="79:68" pos:end="79:68">0</literal></expr>)</condition> <block pos:start="79:71" pos:end="85:13">{<block_content pos:start="81:17" pos:end="83:28">

                <expr_stmt pos:start="81:17" pos:end="81:62"><expr pos:start="81:17" pos:end="81:61"><call pos:start="81:17" pos:end="81:61"><name pos:start="81:17" pos:end="81:26">qpa_logerr</name> <argument_list pos:start="81:28" pos:end="81:61">(<argument pos:start="81:29" pos:end="81:33"><expr pos:start="81:29" pos:end="81:33"><name pos:start="81:29" pos:end="81:33">error</name></expr></argument>, <argument pos:start="81:36" pos:end="81:60"><expr pos:start="81:36" pos:end="81:60"><literal type="string" pos:start="81:36" pos:end="81:60">"pa_simple_read failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="83:17" pos:end="83:28">return <expr pos:start="83:24" pos:end="83:27"><name pos:start="83:24" pos:end="83:27">NULL</name></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="89:13" pos:end="89:55"><expr pos:start="89:13" pos:end="89:54"><call pos:start="89:13" pos:end="89:54"><name pos:start="89:13" pos:end="89:20"><name pos:start="89:13" pos:end="89:14">hw</name><operator pos:start="89:15" pos:end="89:16">-&gt;</operator><name pos:start="89:17" pos:end="89:20">conv</name></name> <argument_list pos:start="89:22" pos:end="89:54">(<argument pos:start="89:23" pos:end="89:41"><expr pos:start="89:23" pos:end="89:41"><name pos:start="89:23" pos:end="89:34"><name pos:start="89:23" pos:end="89:24">hw</name><operator pos:start="89:25" pos:end="89:26">-&gt;</operator><name pos:start="89:27" pos:end="89:34">conv_buf</name></name> <operator pos:start="89:36" pos:end="89:36">+</operator> <name pos:start="89:38" pos:end="89:41">wpos</name></expr></argument>, <argument pos:start="89:44" pos:end="89:46"><expr pos:start="89:44" pos:end="89:46"><name pos:start="89:44" pos:end="89:46">buf</name></expr></argument>, <argument pos:start="89:49" pos:end="89:53"><expr pos:start="89:49" pos:end="89:53"><name pos:start="89:49" pos:end="89:53">chunk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:48"><expr pos:start="91:13" pos:end="91:47"><name pos:start="91:13" pos:end="91:16">wpos</name> <operator pos:start="91:18" pos:end="91:18">=</operator> <operator pos:start="91:20" pos:end="91:20">(</operator><name pos:start="91:21" pos:end="91:24">wpos</name> <operator pos:start="91:26" pos:end="91:26">+</operator> <name pos:start="91:28" pos:end="91:32">chunk</name><operator pos:start="91:33" pos:end="91:33">)</operator> <operator pos:start="91:35" pos:end="91:35">%</operator> <name pos:start="91:37" pos:end="91:47"><name pos:start="91:37" pos:end="91:38">hw</name><operator pos:start="91:39" pos:end="91:40">-&gt;</operator><name pos:start="91:41" pos:end="91:47">samples</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:29"><expr pos:start="93:13" pos:end="93:28"><name pos:start="93:13" pos:end="93:19">to_grab</name> <operator pos:start="93:21" pos:end="93:22">-=</operator> <name pos:start="93:24" pos:end="93:28">chunk</name></expr>;</expr_stmt>

        </block_content>}</block></while>



        <if_stmt pos:start="99:9" pos:end="103:9"><if pos:start="99:9" pos:end="103:9">if <condition pos:start="99:12" pos:end="99:48">(<expr pos:start="99:13" pos:end="99:47"><call pos:start="99:13" pos:end="99:47"><name pos:start="99:13" pos:end="99:25">audio_pt_lock</name> <argument_list pos:start="99:27" pos:end="99:47">(<argument pos:start="99:28" pos:end="99:34"><expr pos:start="99:28" pos:end="99:34"><operator pos:start="99:28" pos:end="99:28">&amp;</operator><name pos:start="99:29" pos:end="99:34"><name pos:start="99:29" pos:end="99:30">pa</name><operator pos:start="99:31" pos:end="99:32">-&gt;</operator><name pos:start="99:33" pos:end="99:34">pt</name></name></expr></argument>, <argument pos:start="99:37" pos:end="99:46"><expr pos:start="99:37" pos:end="99:46"><name pos:start="99:37" pos:end="99:46">AUDIO_FUNC</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="99:50" pos:end="103:9">{<block_content pos:start="101:13" pos:end="101:24">

            <return pos:start="101:13" pos:end="101:24">return <expr pos:start="101:20" pos:end="101:23"><name pos:start="101:20" pos:end="101:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="107:9" pos:end="107:24"><expr pos:start="107:9" pos:end="107:23"><name pos:start="107:9" pos:end="107:16"><name pos:start="107:9" pos:end="107:10">pa</name><operator pos:start="107:11" pos:end="107:12">-&gt;</operator><name pos:start="107:13" pos:end="107:16">wpos</name></name> <operator pos:start="107:18" pos:end="107:18">=</operator> <name pos:start="107:20" pos:end="107:23">wpos</name></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:25"><expr pos:start="109:9" pos:end="109:24"><name pos:start="109:9" pos:end="109:16"><name pos:start="109:9" pos:end="109:10">pa</name><operator pos:start="109:11" pos:end="109:12">-&gt;</operator><name pos:start="109:13" pos:end="109:16">dead</name></name> <operator pos:start="109:18" pos:end="109:19">-=</operator> <name pos:start="109:21" pos:end="109:24">incr</name></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:25"><expr pos:start="111:9" pos:end="111:24"><name pos:start="111:9" pos:end="111:16"><name pos:start="111:9" pos:end="111:10">pa</name><operator pos:start="111:11" pos:end="111:12">-&gt;</operator><name pos:start="111:13" pos:end="111:16">incr</name></name> <operator pos:start="111:18" pos:end="111:19">+=</operator> <name pos:start="111:21" pos:end="111:24">incr</name></expr>;</expr_stmt>

    </block_content>}</block></for>



 <label pos:start="117:2" pos:end="117:6"><name pos:start="117:2" pos:end="117:5">exit</name>:</label>

    <expr_stmt pos:start="119:5" pos:end="119:42"><expr pos:start="119:5" pos:end="119:41"><call pos:start="119:5" pos:end="119:41"><name pos:start="119:5" pos:end="119:19">audio_pt_unlock</name> <argument_list pos:start="119:21" pos:end="119:41">(<argument pos:start="119:22" pos:end="119:28"><expr pos:start="119:22" pos:end="119:28"><operator pos:start="119:22" pos:end="119:22">&amp;</operator><name pos:start="119:23" pos:end="119:28"><name pos:start="119:23" pos:end="119:24">pa</name><operator pos:start="119:25" pos:end="119:26">-&gt;</operator><name pos:start="119:27" pos:end="119:28">pt</name></name></expr></argument>, <argument pos:start="119:31" pos:end="119:40"><expr pos:start="119:31" pos:end="119:40"><name pos:start="119:31" pos:end="119:40">AUDIO_FUNC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="121:5" pos:end="121:16">return <expr pos:start="121:12" pos:end="121:15"><name pos:start="121:12" pos:end="121:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
