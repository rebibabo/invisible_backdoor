<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23115.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:14"><name pos:start="1:1" pos:end="1:12">MemoryRegion</name> <modifier pos:start="1:14" pos:end="1:14">*</modifier></type><name pos:start="1:15" pos:end="1:26">rom_add_blob</name><parameter_list pos:start="1:27" pos:end="5:72">(<parameter pos:start="1:28" pos:end="1:43"><decl pos:start="1:28" pos:end="1:43"><type pos:start="1:28" pos:end="1:43"><specifier pos:start="1:28" pos:end="1:32">const</specifier> <name pos:start="1:34" pos:end="1:37">char</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:43">name</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:61"><decl pos:start="1:46" pos:end="1:61"><type pos:start="1:46" pos:end="1:61"><specifier pos:start="1:46" pos:end="1:50">const</specifier> <name pos:start="1:52" pos:end="1:55">void</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">blob</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:73"><decl pos:start="1:64" pos:end="1:73"><type pos:start="1:64" pos:end="1:73"><name pos:start="1:64" pos:end="1:69">size_t</name></type> <name pos:start="1:71" pos:end="1:73">len</name></decl></parameter>,

                   <parameter pos:start="3:20" pos:end="3:33"><decl pos:start="3:20" pos:end="3:33"><type pos:start="3:20" pos:end="3:33"><name pos:start="3:20" pos:end="3:25">size_t</name></type> <name pos:start="3:27" pos:end="3:33">max_len</name></decl></parameter>, <parameter pos:start="3:36" pos:end="3:46"><decl pos:start="3:36" pos:end="3:46"><type pos:start="3:36" pos:end="3:46"><name pos:start="3:36" pos:end="3:41">hwaddr</name></type> <name pos:start="3:43" pos:end="3:46">addr</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:72"><decl pos:start="3:49" pos:end="3:72"><type pos:start="3:49" pos:end="3:72"><specifier pos:start="3:49" pos:end="3:53">const</specifier> <name pos:start="3:55" pos:end="3:58">char</name> <modifier pos:start="3:60" pos:end="3:60">*</modifier></type><name pos:start="3:61" pos:end="3:72">fw_file_name</name></decl></parameter>,

                   <parameter pos:start="5:20" pos:end="5:48"><decl pos:start="5:20" pos:end="5:48"><type pos:start="5:20" pos:end="5:48"><name pos:start="5:20" pos:end="5:36">FWCfgReadCallback</name></type> <name pos:start="5:38" pos:end="5:48">fw_callback</name></decl></parameter>, <parameter pos:start="5:51" pos:end="5:71"><decl pos:start="5:51" pos:end="5:71"><type pos:start="5:51" pos:end="5:71"><name pos:start="5:51" pos:end="5:54">void</name> <modifier pos:start="5:56" pos:end="5:56">*</modifier></type><name pos:start="5:57" pos:end="5:71">callback_opaque</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="69:1">{<block_content pos:start="9:5" pos:end="67:14">

    <decl_stmt pos:start="9:5" pos:end="9:61"><decl pos:start="9:5" pos:end="9:60"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">MachineClass</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:20">mc</name> <init pos:start="9:22" pos:end="9:60">= <expr pos:start="9:24" pos:end="9:60"><call pos:start="9:24" pos:end="9:60"><name pos:start="9:24" pos:end="9:40">MACHINE_GET_CLASS</name><argument_list pos:start="9:41" pos:end="9:60">(<argument pos:start="9:42" pos:end="9:59"><expr pos:start="9:42" pos:end="9:59"><call pos:start="9:42" pos:end="9:59"><name pos:start="9:42" pos:end="9:57">qdev_get_machine</name><argument_list pos:start="9:58" pos:end="9:59">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:9"><name pos:start="11:5" pos:end="11:7">Rom</name> <modifier pos:start="11:9" pos:end="11:9">*</modifier></type><name pos:start="11:10" pos:end="11:12">rom</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:16">MemoryRegion</name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:20">mr</name> <init pos:start="13:22" pos:end="13:27">= <expr pos:start="13:24" pos:end="13:27"><name pos:start="13:24" pos:end="13:27">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:44"><expr pos:start="17:5" pos:end="17:43"><name pos:start="17:5" pos:end="17:7">rom</name>           <operator pos:start="17:19" pos:end="17:19">=</operator> <call pos:start="17:21" pos:end="17:43"><name pos:start="17:21" pos:end="17:29">g_malloc0</name><argument_list pos:start="17:30" pos:end="17:43">(<argument pos:start="17:31" pos:end="17:42"><expr pos:start="17:31" pos:end="17:42"><sizeof pos:start="17:31" pos:end="17:42">sizeof<argument_list pos:start="17:37" pos:end="17:42">(<argument pos:start="17:38" pos:end="17:41"><expr pos:start="17:38" pos:end="17:41"><operator pos:start="17:38" pos:end="17:38">*</operator><name pos:start="17:39" pos:end="17:41">rom</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:35"><expr pos:start="19:5" pos:end="19:34"><name pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:7">rom</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:13">name</name></name>     <operator pos:start="19:19" pos:end="19:19">=</operator> <call pos:start="19:21" pos:end="19:34"><name pos:start="19:21" pos:end="19:28">g_strdup</name><argument_list pos:start="19:29" pos:end="19:34">(<argument pos:start="19:30" pos:end="19:33"><expr pos:start="19:30" pos:end="19:33"><name pos:start="19:30" pos:end="19:33">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:25"><expr pos:start="21:5" pos:end="21:24"><name pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:7">rom</name><operator pos:start="21:8" pos:end="21:9">-&gt;</operator><name pos:start="21:10" pos:end="21:13">addr</name></name>     <operator pos:start="21:19" pos:end="21:19">=</operator> <name pos:start="21:21" pos:end="21:24">addr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:44"><expr pos:start="23:5" pos:end="23:43"><name pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:7">rom</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:16">romsize</name></name>  <operator pos:start="23:19" pos:end="23:19">=</operator> <ternary pos:start="23:21" pos:end="23:43"><condition pos:start="23:21" pos:end="23:29"><expr pos:start="23:21" pos:end="23:27"><name pos:start="23:21" pos:end="23:27">max_len</name></expr> ?</condition><then pos:start="23:31" pos:end="23:37"> <expr pos:start="23:31" pos:end="23:37"><name pos:start="23:31" pos:end="23:37">max_len</name></expr> </then><else pos:start="23:39" pos:end="23:43">: <expr pos:start="23:41" pos:end="23:43"><name pos:start="23:41" pos:end="23:43">len</name></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:24"><expr pos:start="25:5" pos:end="25:23"><name pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:7">rom</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:17">datasize</name></name> <operator pos:start="25:19" pos:end="25:19">=</operator> <name pos:start="25:21" pos:end="25:23">len</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:45"><expr pos:start="27:5" pos:end="27:44"><name pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:7">rom</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:13">data</name></name>     <operator pos:start="27:19" pos:end="27:19">=</operator> <call pos:start="27:21" pos:end="27:44"><name pos:start="27:21" pos:end="27:29">g_malloc0</name><argument_list pos:start="27:30" pos:end="27:44">(<argument pos:start="27:31" pos:end="27:43"><expr pos:start="27:31" pos:end="27:43"><name pos:start="27:31" pos:end="27:43"><name pos:start="27:31" pos:end="27:33">rom</name><operator pos:start="27:34" pos:end="27:35">-&gt;</operator><name pos:start="27:36" pos:end="27:43">datasize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:33"><expr pos:start="29:5" pos:end="29:32"><call pos:start="29:5" pos:end="29:32"><name pos:start="29:5" pos:end="29:10">memcpy</name><argument_list pos:start="29:11" pos:end="29:32">(<argument pos:start="29:12" pos:end="29:20"><expr pos:start="29:12" pos:end="29:20"><name pos:start="29:12" pos:end="29:20"><name pos:start="29:12" pos:end="29:14">rom</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:20">data</name></name></expr></argument>, <argument pos:start="29:23" pos:end="29:26"><expr pos:start="29:23" pos:end="29:26"><name pos:start="29:23" pos:end="29:26">blob</name></expr></argument>, <argument pos:start="29:29" pos:end="29:31"><expr pos:start="29:29" pos:end="29:31"><name pos:start="29:29" pos:end="29:31">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:20"><expr pos:start="31:5" pos:end="31:19"><call pos:start="31:5" pos:end="31:19"><name pos:start="31:5" pos:end="31:14">rom_insert</name><argument_list pos:start="31:15" pos:end="31:19">(<argument pos:start="31:16" pos:end="31:18"><expr pos:start="31:16" pos:end="31:18"><name pos:start="31:16" pos:end="31:18">rom</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="65:5"><if pos:start="33:5" pos:end="65:5">if <condition pos:start="33:8" pos:end="33:31">(<expr pos:start="33:9" pos:end="33:30"><name pos:start="33:9" pos:end="33:20">fw_file_name</name> <operator pos:start="33:22" pos:end="33:23">&amp;&amp;</operator> <name pos:start="33:25" pos:end="33:30">fw_cfg</name></expr>)</condition> <block pos:start="33:33" pos:end="65:5">{<block_content pos:start="35:9" pos:end="63:54">

        <decl_stmt pos:start="35:9" pos:end="35:26"><decl pos:start="35:9" pos:end="35:25"><type pos:start="35:9" pos:end="35:12"><name pos:start="35:9" pos:end="35:12">char</name></type> <name pos:start="35:14" pos:end="35:25"><name pos:start="35:14" pos:end="35:20">devpath</name><index pos:start="35:21" pos:end="35:25">[<expr pos:start="35:22" pos:end="35:24"><literal type="number" pos:start="35:22" pos:end="35:24">100</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="37:9" pos:end="37:19"><decl pos:start="37:9" pos:end="37:18"><type pos:start="37:9" pos:end="37:14"><name pos:start="37:9" pos:end="37:12">void</name> <modifier pos:start="37:14" pos:end="37:14">*</modifier></type><name pos:start="37:15" pos:end="37:18">data</name></decl>;</decl_stmt>



        <expr_stmt pos:start="41:9" pos:end="41:68"><expr pos:start="41:9" pos:end="41:67"><call pos:start="41:9" pos:end="41:67"><name pos:start="41:9" pos:end="41:16">snprintf</name><argument_list pos:start="41:17" pos:end="41:67">(<argument pos:start="41:18" pos:end="41:24"><expr pos:start="41:18" pos:end="41:24"><name pos:start="41:18" pos:end="41:24">devpath</name></expr></argument>, <argument pos:start="41:27" pos:end="41:41"><expr pos:start="41:27" pos:end="41:41"><sizeof pos:start="41:27" pos:end="41:41">sizeof<argument_list pos:start="41:33" pos:end="41:41">(<argument pos:start="41:34" pos:end="41:40"><expr pos:start="41:34" pos:end="41:40"><name pos:start="41:34" pos:end="41:40">devpath</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="41:44" pos:end="41:52"><expr pos:start="41:44" pos:end="41:52"><literal type="string" pos:start="41:44" pos:end="41:52">"/rom@%s"</literal></expr></argument>, <argument pos:start="41:55" pos:end="41:66"><expr pos:start="41:55" pos:end="41:66"><name pos:start="41:55" pos:end="41:66">fw_file_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="45:9" pos:end="55:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:32">(<expr pos:start="45:13" pos:end="45:31"><name pos:start="45:13" pos:end="45:31"><name pos:start="45:13" pos:end="45:14">mc</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:31">rom_file_has_mr</name></name></expr>)</condition> <block pos:start="45:34" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:25">

            <expr_stmt pos:start="47:13" pos:end="47:60"><expr pos:start="47:13" pos:end="47:59"><name pos:start="47:13" pos:end="47:16">data</name> <operator pos:start="47:18" pos:end="47:18">=</operator> <call pos:start="47:20" pos:end="47:59"><name pos:start="47:20" pos:end="47:29">rom_set_mr</name><argument_list pos:start="47:30" pos:end="47:59">(<argument pos:start="47:31" pos:end="47:33"><expr pos:start="47:31" pos:end="47:33"><name pos:start="47:31" pos:end="47:33">rom</name></expr></argument>, <argument pos:start="47:36" pos:end="47:49"><expr pos:start="47:36" pos:end="47:49"><call pos:start="47:36" pos:end="47:49"><name pos:start="47:36" pos:end="47:41">OBJECT</name><argument_list pos:start="47:42" pos:end="47:49">(<argument pos:start="47:43" pos:end="47:48"><expr pos:start="47:43" pos:end="47:48"><name pos:start="47:43" pos:end="47:48">fw_cfg</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="47:52" pos:end="47:58"><expr pos:start="47:52" pos:end="47:58"><name pos:start="47:52" pos:end="47:58">devpath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:25"><expr pos:start="49:13" pos:end="49:24"><name pos:start="49:13" pos:end="49:14">mr</name> <operator pos:start="49:16" pos:end="49:16">=</operator> <name pos:start="49:18" pos:end="49:24"><name pos:start="49:18" pos:end="49:20">rom</name><operator pos:start="49:21" pos:end="49:22">-&gt;</operator><name pos:start="49:23" pos:end="49:24">mr</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="51:11" pos:end="55:9">else <block pos:start="51:16" pos:end="55:9">{<block_content pos:start="53:13" pos:end="53:29">

            <expr_stmt pos:start="53:13" pos:end="53:29"><expr pos:start="53:13" pos:end="53:28"><name pos:start="53:13" pos:end="53:16">data</name> <operator pos:start="53:18" pos:end="53:18">=</operator> <name pos:start="53:20" pos:end="53:28"><name pos:start="53:20" pos:end="53:22">rom</name><operator pos:start="53:23" pos:end="53:24">-&gt;</operator><name pos:start="53:25" pos:end="53:28">data</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="59:9" pos:end="63:54"><expr pos:start="59:9" pos:end="63:53"><call pos:start="59:9" pos:end="63:53"><name pos:start="59:9" pos:end="59:32">fw_cfg_add_file_callback</name><argument_list pos:start="59:33" pos:end="63:53">(<argument pos:start="59:34" pos:end="59:39"><expr pos:start="59:34" pos:end="59:39"><name pos:start="59:34" pos:end="59:39">fw_cfg</name></expr></argument>, <argument pos:start="59:42" pos:end="59:53"><expr pos:start="59:42" pos:end="59:53"><name pos:start="59:42" pos:end="59:53">fw_file_name</name></expr></argument>,

                                 <argument pos:start="61:34" pos:end="61:44"><expr pos:start="61:34" pos:end="61:44"><name pos:start="61:34" pos:end="61:44">fw_callback</name></expr></argument>, <argument pos:start="61:47" pos:end="61:61"><expr pos:start="61:47" pos:end="61:61"><name pos:start="61:47" pos:end="61:61">callback_opaque</name></expr></argument>,

                                 <argument pos:start="63:34" pos:end="63:37"><expr pos:start="63:34" pos:end="63:37"><name pos:start="63:34" pos:end="63:37">data</name></expr></argument>, <argument pos:start="63:40" pos:end="63:52"><expr pos:start="63:40" pos:end="63:52"><name pos:start="63:40" pos:end="63:52"><name pos:start="63:40" pos:end="63:42">rom</name><operator pos:start="63:43" pos:end="63:44">-&gt;</operator><name pos:start="63:45" pos:end="63:52">datasize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="67:5" pos:end="67:14">return <expr pos:start="67:12" pos:end="67:13"><name pos:start="67:12" pos:end="67:13">mr</name></expr>;</return>

</block_content>}</block></function>
</unit>
