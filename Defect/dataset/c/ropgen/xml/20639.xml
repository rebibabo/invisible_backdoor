<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20639.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:19">get_sdr</name><parameter_list pos:start="1:20" pos:end="7:45">(<parameter pos:start="1:21" pos:end="1:35"><decl pos:start="1:21" pos:end="1:35"><type pos:start="1:21" pos:end="1:35"><name pos:start="1:21" pos:end="1:30">IPMIBmcSim</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:35">ibs</name></decl></parameter>,

                    <parameter pos:start="3:21" pos:end="3:32"><decl pos:start="3:21" pos:end="3:32"><type pos:start="3:21" pos:end="3:32"><name pos:start="3:21" pos:end="3:27">uint8_t</name> <modifier pos:start="3:29" pos:end="3:29">*</modifier></type><name pos:start="3:30" pos:end="3:32">cmd</name></decl></parameter>, <parameter pos:start="3:35" pos:end="3:54"><decl pos:start="3:35" pos:end="3:54"><type pos:start="3:35" pos:end="3:54"><name pos:start="3:35" pos:end="3:42">unsigned</name> <name pos:start="3:44" pos:end="3:46">int</name></type> <name pos:start="3:48" pos:end="3:54">cmd_len</name></decl></parameter>,

                    <parameter pos:start="5:21" pos:end="5:32"><decl pos:start="5:21" pos:end="5:32"><type pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:27">uint8_t</name> <modifier pos:start="5:29" pos:end="5:29">*</modifier></type><name pos:start="5:30" pos:end="5:32">rsp</name></decl></parameter>, <parameter pos:start="5:35" pos:end="5:55"><decl pos:start="5:35" pos:end="5:55"><type pos:start="5:35" pos:end="5:55"><name pos:start="5:35" pos:end="5:42">unsigned</name> <name pos:start="5:44" pos:end="5:46">int</name> <modifier pos:start="5:48" pos:end="5:48">*</modifier></type><name pos:start="5:49" pos:end="5:55">rsp_len</name></decl></parameter>,

                    <parameter pos:start="7:21" pos:end="7:44"><decl pos:start="7:21" pos:end="7:44"><type pos:start="7:21" pos:end="7:44"><name pos:start="7:21" pos:end="7:28">unsigned</name> <name pos:start="7:30" pos:end="7:32">int</name></type> <name pos:start="7:34" pos:end="7:44">max_rsp_len</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="81:1">{<block_content pos:start="11:5" pos:end="79:23">

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:20">pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint16_t</name></type> <name pos:start="13:14" pos:end="13:20">nextrec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:33"><decl pos:start="15:5" pos:end="15:32"><type pos:start="15:5" pos:end="15:28"><name pos:start="15:5" pos:end="15:26"><name pos:start="15:5" pos:end="15:10">struct</name> <name pos:start="15:12" pos:end="15:26">ipmi_sdr_header</name></name> <modifier pos:start="15:28" pos:end="15:28">*</modifier></type><name pos:start="15:29" pos:end="15:32">sdrh</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:26"><expr pos:start="19:5" pos:end="19:25"><call pos:start="19:5" pos:end="19:25"><name pos:start="19:5" pos:end="19:22">IPMI_CHECK_CMD_LEN</name><argument_list pos:start="19:23" pos:end="19:25">(<argument pos:start="19:24" pos:end="19:24"><expr pos:start="19:24" pos:end="19:24"><literal type="number" pos:start="19:24" pos:end="19:24">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:15">(<expr pos:start="21:9" pos:end="21:14"><name pos:start="21:9" pos:end="21:14"><name pos:start="21:9" pos:end="21:11">cmd</name><index pos:start="21:12" pos:end="21:14">[<expr pos:start="21:13" pos:end="21:13"><literal type="number" pos:start="21:13" pos:end="21:13">6</literal></expr>]</index></name></expr>)</condition> <block pos:start="21:17" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:56">

        <expr_stmt pos:start="23:9" pos:end="23:56"><expr pos:start="23:9" pos:end="23:55"><call pos:start="23:9" pos:end="23:55"><name pos:start="23:9" pos:end="23:30">IPMI_CHECK_RESERVATION</name><argument_list pos:start="23:31" pos:end="23:55">(<argument pos:start="23:32" pos:end="23:32"><expr pos:start="23:32" pos:end="23:32"><literal type="number" pos:start="23:32" pos:end="23:32">2</literal></expr></argument>, <argument pos:start="23:35" pos:end="23:54"><expr pos:start="23:35" pos:end="23:54"><name pos:start="23:35" pos:end="23:54"><name pos:start="23:35" pos:end="23:37">ibs</name><operator pos:start="23:38" pos:end="23:39">-&gt;</operator><name pos:start="23:40" pos:end="23:42">sdr</name><operator pos:start="23:43" pos:end="23:43">.</operator><name pos:start="23:44" pos:end="23:54">reservation</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:12"><expr pos:start="27:5" pos:end="27:11"><name pos:start="27:5" pos:end="27:7">pos</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <literal type="number" pos:start="27:11" pos:end="27:11">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="37:5"><if pos:start="29:5" pos:end="37:5">if <condition pos:start="29:8" pos:end="31:39">(<expr pos:start="29:9" pos:end="31:38"><call pos:start="29:9" pos:end="31:38"><name pos:start="29:9" pos:end="29:22">sdr_find_entry</name><argument_list pos:start="29:23" pos:end="31:38">(<argument pos:start="29:24" pos:end="29:32"><expr pos:start="29:24" pos:end="29:32"><operator pos:start="29:24" pos:end="29:24">&amp;</operator><name pos:start="29:25" pos:end="29:32"><name pos:start="29:25" pos:end="29:27">ibs</name><operator pos:start="29:28" pos:end="29:29">-&gt;</operator><name pos:start="29:30" pos:end="29:32">sdr</name></name></expr></argument>, <argument pos:start="29:35" pos:end="29:56"><expr pos:start="29:35" pos:end="29:56"><name pos:start="29:35" pos:end="29:40"><name pos:start="29:35" pos:end="29:37">cmd</name><index pos:start="29:38" pos:end="29:40">[<expr pos:start="29:39" pos:end="29:39"><literal type="number" pos:start="29:39" pos:end="29:39">4</literal></expr>]</index></name> <operator pos:start="29:42" pos:end="29:42">|</operator> <operator pos:start="29:44" pos:end="29:44">(</operator><name pos:start="29:45" pos:end="29:50"><name pos:start="29:45" pos:end="29:47">cmd</name><index pos:start="29:48" pos:end="29:50">[<expr pos:start="29:49" pos:end="29:49"><literal type="number" pos:start="29:49" pos:end="29:49">5</literal></expr>]</index></name> <operator pos:start="29:52" pos:end="29:53">&lt;&lt;</operator> <literal type="number" pos:start="29:55" pos:end="29:55">8</literal><operator pos:start="29:56" pos:end="29:56">)</operator></expr></argument>,

                       <argument pos:start="31:24" pos:end="31:27"><expr pos:start="31:24" pos:end="31:27"><operator pos:start="31:24" pos:end="31:24">&amp;</operator><name pos:start="31:25" pos:end="31:27">pos</name></expr></argument>, <argument pos:start="31:30" pos:end="31:37"><expr pos:start="31:30" pos:end="31:37"><operator pos:start="31:30" pos:end="31:30">&amp;</operator><name pos:start="31:31" pos:end="31:37">nextrec</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:41" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:15">

        <expr_stmt pos:start="33:9" pos:end="33:47"><expr pos:start="33:9" pos:end="33:46"><name pos:start="33:9" pos:end="33:14"><name pos:start="33:9" pos:end="33:11">rsp</name><index pos:start="33:12" pos:end="33:14">[<expr pos:start="33:13" pos:end="33:13"><literal type="number" pos:start="33:13" pos:end="33:13">2</literal></expr>]</index></name> <operator pos:start="33:16" pos:end="33:16">=</operator> <name pos:start="33:18" pos:end="33:46">IPMI_CC_REQ_ENTRY_NOT_PRESENT</name></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:57"><expr pos:start="41:5" pos:end="41:56"><name pos:start="41:5" pos:end="41:8">sdrh</name> <operator pos:start="41:10" pos:end="41:10">=</operator> <operator pos:start="41:12" pos:end="41:12">(</operator>struct <name pos:start="41:20" pos:end="41:34">ipmi_sdr_header</name> <operator pos:start="41:36" pos:end="41:36">*</operator><operator pos:start="41:37" pos:end="41:37">)</operator> <operator pos:start="41:39" pos:end="41:39">&amp;</operator><name pos:start="41:40" pos:end="41:56"><name pos:start="41:40" pos:end="41:42">ibs</name><operator pos:start="41:43" pos:end="41:44">-&gt;</operator><name pos:start="41:45" pos:end="41:47">sdr</name><operator pos:start="41:48" pos:end="41:48">.</operator><name pos:start="41:49" pos:end="41:51">sdr</name><index pos:start="41:52" pos:end="41:56">[<expr pos:start="41:53" pos:end="41:55"><name pos:start="41:53" pos:end="41:55">pos</name></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:39">(<expr pos:start="45:9" pos:end="45:38"><name pos:start="45:9" pos:end="45:14"><name pos:start="45:9" pos:end="45:11">cmd</name><index pos:start="45:12" pos:end="45:14">[<expr pos:start="45:13" pos:end="45:13"><literal type="number" pos:start="45:13" pos:end="45:13">6</literal></expr>]</index></name> <operator pos:start="45:16" pos:end="45:16">&gt;</operator> <call pos:start="45:18" pos:end="45:38"><name pos:start="45:18" pos:end="45:32">ipmi_sdr_length</name><argument_list pos:start="45:33" pos:end="45:38">(<argument pos:start="45:34" pos:end="45:37"><expr pos:start="45:34" pos:end="45:37"><name pos:start="45:34" pos:end="45:37">sdrh</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="45:41" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:15">

        <expr_stmt pos:start="47:9" pos:end="47:43"><expr pos:start="47:9" pos:end="47:42"><name pos:start="47:9" pos:end="47:14"><name pos:start="47:9" pos:end="47:11">rsp</name><index pos:start="47:12" pos:end="47:14">[<expr pos:start="47:13" pos:end="47:13"><literal type="number" pos:start="47:13" pos:end="47:13">2</literal></expr>]</index></name> <operator pos:start="47:16" pos:end="47:16">=</operator> <name pos:start="47:18" pos:end="47:42">IPMI_CC_PARM_OUT_OF_RANGE</name></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:38"><expr pos:start="55:5" pos:end="55:37"><call pos:start="55:5" pos:end="55:37"><name pos:start="55:5" pos:end="55:21">IPMI_ADD_RSP_DATA</name><argument_list pos:start="55:22" pos:end="55:37">(<argument pos:start="55:23" pos:end="55:36"><expr pos:start="55:23" pos:end="55:36"><name pos:start="55:23" pos:end="55:29">nextrec</name> <operator pos:start="55:31" pos:end="55:31">&amp;</operator> <literal type="number" pos:start="55:33" pos:end="55:36">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:45"><expr pos:start="57:5" pos:end="57:44"><call pos:start="57:5" pos:end="57:44"><name pos:start="57:5" pos:end="57:21">IPMI_ADD_RSP_DATA</name><argument_list pos:start="57:22" pos:end="57:44">(<argument pos:start="57:23" pos:end="57:43"><expr pos:start="57:23" pos:end="57:43"><operator pos:start="57:23" pos:end="57:23">(</operator><name pos:start="57:24" pos:end="57:30">nextrec</name> <operator pos:start="57:32" pos:end="57:33">&gt;&gt;</operator> <literal type="number" pos:start="57:35" pos:end="57:35">8</literal><operator pos:start="57:36" pos:end="57:36">)</operator> <operator pos:start="57:38" pos:end="57:38">&amp;</operator> <literal type="number" pos:start="57:40" pos:end="57:43">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="61:5" pos:end="65:5"><if pos:start="61:5" pos:end="65:5">if <condition pos:start="61:8" pos:end="61:23">(<expr pos:start="61:9" pos:end="61:22"><name pos:start="61:9" pos:end="61:14"><name pos:start="61:9" pos:end="61:11">cmd</name><index pos:start="61:12" pos:end="61:14">[<expr pos:start="61:13" pos:end="61:13"><literal type="number" pos:start="61:13" pos:end="61:13">7</literal></expr>]</index></name> <operator pos:start="61:16" pos:end="61:17">==</operator> <literal type="number" pos:start="61:19" pos:end="61:22">0xff</literal></expr>)</condition> <block pos:start="61:25" pos:end="65:5">{<block_content pos:start="63:9" pos:end="63:48">

        <expr_stmt pos:start="63:9" pos:end="63:48"><expr pos:start="63:9" pos:end="63:47"><name pos:start="63:9" pos:end="63:14"><name pos:start="63:9" pos:end="63:11">cmd</name><index pos:start="63:12" pos:end="63:14">[<expr pos:start="63:13" pos:end="63:13"><literal type="number" pos:start="63:13" pos:end="63:13">7</literal></expr>]</index></name> <operator pos:start="63:16" pos:end="63:16">=</operator> <call pos:start="63:18" pos:end="63:38"><name pos:start="63:18" pos:end="63:32">ipmi_sdr_length</name><argument_list pos:start="63:33" pos:end="63:38">(<argument pos:start="63:34" pos:end="63:37"><expr pos:start="63:34" pos:end="63:37"><name pos:start="63:34" pos:end="63:37">sdrh</name></expr></argument>)</argument_list></call> <operator pos:start="63:40" pos:end="63:40">-</operator> <name pos:start="63:42" pos:end="63:47"><name pos:start="63:42" pos:end="63:44">cmd</name><index pos:start="63:45" pos:end="63:47">[<expr pos:start="63:46" pos:end="63:46"><literal type="number" pos:start="63:46" pos:end="63:46">6</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="69:5" pos:end="75:5"><if pos:start="69:5" pos:end="75:5">if <condition pos:start="69:8" pos:end="69:42">(<expr pos:start="69:9" pos:end="69:41"><operator pos:start="69:9" pos:end="69:9">(</operator><name pos:start="69:10" pos:end="69:15"><name pos:start="69:10" pos:end="69:12">cmd</name><index pos:start="69:13" pos:end="69:15">[<expr pos:start="69:14" pos:end="69:14"><literal type="number" pos:start="69:14" pos:end="69:14">7</literal></expr>]</index></name> <operator pos:start="69:17" pos:end="69:17">+</operator> <operator pos:start="69:19" pos:end="69:19">*</operator><name pos:start="69:20" pos:end="69:26">rsp_len</name><operator pos:start="69:27" pos:end="69:27">)</operator> <operator pos:start="69:29" pos:end="69:29">&gt;</operator> <name pos:start="69:31" pos:end="69:41">max_rsp_len</name></expr>)</condition> <block pos:start="69:44" pos:end="75:5">{<block_content pos:start="71:9" pos:end="73:15">

        <expr_stmt pos:start="71:9" pos:end="71:53"><expr pos:start="71:9" pos:end="71:52"><name pos:start="71:9" pos:end="71:14"><name pos:start="71:9" pos:end="71:11">rsp</name><index pos:start="71:12" pos:end="71:14">[<expr pos:start="71:13" pos:end="71:13"><literal type="number" pos:start="71:13" pos:end="71:13">2</literal></expr>]</index></name> <operator pos:start="71:16" pos:end="71:16">=</operator> <name pos:start="71:18" pos:end="71:52">IPMI_CC_CANNOT_RETURN_REQ_NUM_BYTES</name></expr>;</expr_stmt>

        <return pos:start="73:9" pos:end="73:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:64"><expr pos:start="77:5" pos:end="77:63"><call pos:start="77:5" pos:end="77:63"><name pos:start="77:5" pos:end="77:10">memcpy</name><argument_list pos:start="77:11" pos:end="77:63">(<argument pos:start="77:12" pos:end="77:25"><expr pos:start="77:12" pos:end="77:25"><name pos:start="77:12" pos:end="77:14">rsp</name> <operator pos:start="77:16" pos:end="77:16">+</operator> <operator pos:start="77:18" pos:end="77:18">*</operator><name pos:start="77:19" pos:end="77:25">rsp_len</name></expr></argument>, <argument pos:start="77:28" pos:end="77:54"><expr pos:start="77:28" pos:end="77:54"><name pos:start="77:28" pos:end="77:39"><name pos:start="77:28" pos:end="77:30">ibs</name><operator pos:start="77:31" pos:end="77:32">-&gt;</operator><name pos:start="77:33" pos:end="77:35">sdr</name><operator pos:start="77:36" pos:end="77:36">.</operator><name pos:start="77:37" pos:end="77:39">sdr</name></name> <operator pos:start="77:41" pos:end="77:41">+</operator> <name pos:start="77:43" pos:end="77:45">pos</name> <operator pos:start="77:47" pos:end="77:47">+</operator> <name pos:start="77:49" pos:end="77:54"><name pos:start="77:49" pos:end="77:51">cmd</name><index pos:start="77:52" pos:end="77:54">[<expr pos:start="77:53" pos:end="77:53"><literal type="number" pos:start="77:53" pos:end="77:53">6</literal></expr>]</index></name></expr></argument>, <argument pos:start="77:57" pos:end="77:62"><expr pos:start="77:57" pos:end="77:62"><name pos:start="77:57" pos:end="77:62"><name pos:start="77:57" pos:end="77:59">cmd</name><index pos:start="77:60" pos:end="77:62">[<expr pos:start="77:61" pos:end="77:61"><literal type="number" pos:start="77:61" pos:end="77:61">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:23"><expr pos:start="79:5" pos:end="79:22"><operator pos:start="79:5" pos:end="79:5">*</operator><name pos:start="79:6" pos:end="79:12">rsp_len</name> <operator pos:start="79:14" pos:end="79:15">+=</operator> <name pos:start="79:17" pos:end="79:22"><name pos:start="79:17" pos:end="79:19">cmd</name><index pos:start="79:20" pos:end="79:22">[<expr pos:start="79:21" pos:end="79:21"><literal type="number" pos:start="79:21" pos:end="79:21">7</literal></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
