<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12476.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:36">acpi_set_cpu_present_bit</name><parameter_list pos:start="1:37" pos:end="3:50">(<parameter pos:start="1:38" pos:end="1:54"><decl pos:start="1:38" pos:end="1:54"><type pos:start="1:38" pos:end="1:54"><name pos:start="1:38" pos:end="1:51">AcpiCpuHotplug</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">g</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:69"><decl pos:start="1:57" pos:end="1:69"><type pos:start="1:57" pos:end="1:69"><name pos:start="1:57" pos:end="1:64">CPUState</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:69">cpu</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:49"><decl pos:start="3:38" pos:end="3:49"><type pos:start="3:38" pos:end="3:49"><name pos:start="3:38" pos:end="3:42">Error</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier><modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:49">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="27:1">{<block_content pos:start="7:5" pos:end="25:46">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">CPUClass</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:15">k</name> <init pos:start="7:17" pos:end="7:36">= <expr pos:start="7:19" pos:end="7:36"><call pos:start="7:19" pos:end="7:36"><name pos:start="7:19" pos:end="7:31">CPU_GET_CLASS</name><argument_list pos:start="7:32" pos:end="7:36">(<argument pos:start="7:33" pos:end="7:35"><expr pos:start="7:33" pos:end="7:35"><name pos:start="7:33" pos:end="7:35">cpu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:18">cpu_id</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:33"><expr pos:start="13:5" pos:end="13:32"><name pos:start="13:5" pos:end="13:10">cpu_id</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <call pos:start="13:14" pos:end="13:32"><name pos:start="13:14" pos:end="13:27"><name pos:start="13:14" pos:end="13:14">k</name><operator pos:start="13:15" pos:end="13:16">-&gt;</operator><name pos:start="13:17" pos:end="13:27">get_arch_id</name></name><argument_list pos:start="13:28" pos:end="13:32">(<argument pos:start="13:29" pos:end="13:31"><expr pos:start="13:29" pos:end="13:31"><name pos:start="13:29" pos:end="13:31">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:42">(<expr pos:start="15:9" pos:end="15:41"><operator pos:start="15:9" pos:end="15:9">(</operator><name pos:start="15:10" pos:end="15:15">cpu_id</name> <operator pos:start="15:17" pos:end="15:17">/</operator> <literal type="number" pos:start="15:19" pos:end="15:19">8</literal><operator pos:start="15:20" pos:end="15:20">)</operator> <operator pos:start="15:22" pos:end="15:23">&gt;=</operator> <name pos:start="15:25" pos:end="15:41">ACPI_GPE_PROC_LEN</name></expr>)</condition> <block pos:start="15:44" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:15">

        <expr_stmt pos:start="17:9" pos:end="17:67"><expr pos:start="17:9" pos:end="17:66"><call pos:start="17:9" pos:end="17:66"><name pos:start="17:9" pos:end="17:18">error_setg</name><argument_list pos:start="17:19" pos:end="17:66">(<argument pos:start="17:20" pos:end="17:23"><expr pos:start="17:20" pos:end="17:23"><name pos:start="17:20" pos:end="17:23">errp</name></expr></argument>, <argument pos:start="17:26" pos:end="17:57"><expr pos:start="17:26" pos:end="17:57"><literal type="string" pos:start="17:26" pos:end="17:50">"acpi: invalid cpu id: %"</literal> <name pos:start="17:52" pos:end="17:57">PRIi64</name></expr></argument>, <argument pos:start="17:60" pos:end="17:65"><expr pos:start="17:60" pos:end="17:65"><name pos:start="17:60" pos:end="17:65">cpu_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:46"><expr pos:start="25:5" pos:end="25:45"><name pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:5">g</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:10">sts</name><index pos:start="25:11" pos:end="25:22">[<expr pos:start="25:12" pos:end="25:21"><name pos:start="25:12" pos:end="25:17">cpu_id</name> <operator pos:start="25:19" pos:end="25:19">/</operator> <literal type="number" pos:start="25:21" pos:end="25:21">8</literal></expr>]</index></name> <operator pos:start="25:24" pos:end="25:25">|=</operator> <operator pos:start="25:27" pos:end="25:27">(</operator><literal type="number" pos:start="25:28" pos:end="25:28">1</literal> <operator pos:start="25:30" pos:end="25:31">&lt;&lt;</operator> <operator pos:start="25:33" pos:end="25:33">(</operator><name pos:start="25:34" pos:end="25:39">cpu_id</name> <operator pos:start="25:41" pos:end="25:41">%</operator> <literal type="number" pos:start="25:43" pos:end="25:43">8</literal><operator pos:start="25:44" pos:end="25:44">)</operator><operator pos:start="25:45" pos:end="25:45">)</operator></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
