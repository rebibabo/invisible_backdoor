<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12880.c" pos:tabs="8"><function pos:start="1:1" pos:end="11:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:26">omap_badwidth_write32</name><parameter_list pos:start="1:27" pos:end="3:31">(<parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:39"><name pos:start="1:28" pos:end="1:31">void</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:39">opaque</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:64"><decl pos:start="1:42" pos:end="1:64"><type pos:start="1:42" pos:end="1:64"><name pos:start="1:42" pos:end="1:59">target_phys_addr_t</name></type> <name pos:start="1:61" pos:end="1:64">addr</name></decl></parameter>,

                <parameter pos:start="3:17" pos:end="3:30"><decl pos:start="3:17" pos:end="3:30"><type pos:start="3:17" pos:end="3:30"><name pos:start="3:17" pos:end="3:24">uint32_t</name></type> <name pos:start="3:26" pos:end="3:30">value</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="11:1">{<block_content pos:start="7:5" pos:end="9:56">

    <expr_stmt pos:start="7:5" pos:end="7:23"><expr pos:start="7:5" pos:end="7:22"><call pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:16">OMAP_32B_REG</name><argument_list pos:start="7:17" pos:end="7:22">(<argument pos:start="7:18" pos:end="7:21"><expr pos:start="7:18" pos:end="7:21"><name pos:start="7:18" pos:end="7:21">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:56"><expr pos:start="9:5" pos:end="9:55"><call pos:start="9:5" pos:end="9:55"><name pos:start="9:5" pos:end="9:29">cpu_physical_memory_write</name><argument_list pos:start="9:30" pos:end="9:55">(<argument pos:start="9:31" pos:end="9:34"><expr pos:start="9:31" pos:end="9:34"><name pos:start="9:31" pos:end="9:34">addr</name></expr></argument>, <argument pos:start="9:37" pos:end="9:51"><expr pos:start="9:37" pos:end="9:51"><operator pos:start="9:37" pos:end="9:37">(</operator><name pos:start="9:38" pos:end="9:41">void</name> <operator pos:start="9:43" pos:end="9:43">*</operator><operator pos:start="9:44" pos:end="9:44">)</operator> <operator pos:start="9:46" pos:end="9:46">&amp;</operator><name pos:start="9:47" pos:end="9:51">value</name></expr></argument>, <argument pos:start="9:54" pos:end="9:54"><expr pos:start="9:54" pos:end="9:54"><literal type="number" pos:start="9:54" pos:end="9:54">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
