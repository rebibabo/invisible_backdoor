<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1499.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:7"><name pos:start="1:1" pos:end="1:7">int32_t</name></type> <name pos:start="1:9" pos:end="1:24">scsi_req_enqueue</name><parameter_list pos:start="1:25" pos:end="1:56">(<parameter pos:start="1:26" pos:end="1:41"><decl pos:start="1:26" pos:end="1:41"><type pos:start="1:26" pos:end="1:41"><name pos:start="1:26" pos:end="1:36">SCSIRequest</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">req</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:55"><decl pos:start="1:44" pos:end="1:55"><type pos:start="1:44" pos:end="1:55"><name pos:start="1:44" pos:end="1:50">uint8_t</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:55">buf</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="27:1">{<block_content pos:start="5:5" pos:end="25:14">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int32_t</name></type> <name pos:start="5:13" pos:end="5:14">rc</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:27"><expr pos:start="9:5" pos:end="9:26"><call pos:start="9:5" pos:end="9:26"><name pos:start="9:5" pos:end="9:10">assert</name><argument_list pos:start="9:11" pos:end="9:26">(<argument pos:start="9:12" pos:end="9:25"><expr pos:start="9:12" pos:end="9:25"><operator pos:start="9:12" pos:end="9:12">!</operator><name pos:start="9:13" pos:end="9:25"><name pos:start="9:13" pos:end="9:15">req</name><operator pos:start="9:16" pos:end="9:17">-&gt;</operator><name pos:start="9:18" pos:end="9:25">enqueued</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:22"><expr pos:start="11:5" pos:end="11:21"><call pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:16">scsi_req_ref</name><argument_list pos:start="11:17" pos:end="11:21">(<argument pos:start="11:18" pos:end="11:20"><expr pos:start="11:18" pos:end="11:20"><name pos:start="11:18" pos:end="11:20">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:25"><expr pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:7">req</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:17">enqueued</name></name> <operator pos:start="13:19" pos:end="13:19">=</operator> <name pos:start="13:21" pos:end="13:24">true</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:55"><expr pos:start="15:5" pos:end="15:54"><call pos:start="15:5" pos:end="15:54"><name pos:start="15:5" pos:end="15:22">QTAILQ_INSERT_TAIL</name><argument_list pos:start="15:23" pos:end="15:54">(<argument pos:start="15:24" pos:end="15:42"><expr pos:start="15:24" pos:end="15:42"><operator pos:start="15:24" pos:end="15:24">&amp;</operator><name pos:start="15:25" pos:end="15:42"><name pos:start="15:25" pos:end="15:27">req</name><operator pos:start="15:28" pos:end="15:29">-&gt;</operator><name pos:start="15:30" pos:end="15:32">dev</name><operator pos:start="15:33" pos:end="15:34">-&gt;</operator><name pos:start="15:35" pos:end="15:42">requests</name></name></expr></argument>, <argument pos:start="15:45" pos:end="15:47"><expr pos:start="15:45" pos:end="15:47"><name pos:start="15:45" pos:end="15:47">req</name></expr></argument>, <argument pos:start="15:50" pos:end="15:53"><expr pos:start="15:50" pos:end="15:53"><name pos:start="15:50" pos:end="15:53">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:22"><expr pos:start="19:5" pos:end="19:21"><call pos:start="19:5" pos:end="19:21"><name pos:start="19:5" pos:end="19:16">scsi_req_ref</name><argument_list pos:start="19:17" pos:end="19:21">(<argument pos:start="19:18" pos:end="19:20"><expr pos:start="19:18" pos:end="19:20"><name pos:start="19:18" pos:end="19:20">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:42"><expr pos:start="21:5" pos:end="21:41"><name pos:start="21:5" pos:end="21:6">rc</name> <operator pos:start="21:8" pos:end="21:8">=</operator> <call pos:start="21:10" pos:end="21:41"><name pos:start="21:10" pos:end="21:31"><name pos:start="21:10" pos:end="21:12">req</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:17">ops</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:31">send_command</name></name><argument_list pos:start="21:32" pos:end="21:41">(<argument pos:start="21:33" pos:end="21:35"><expr pos:start="21:33" pos:end="21:35"><name pos:start="21:33" pos:end="21:35">req</name></expr></argument>, <argument pos:start="21:38" pos:end="21:40"><expr pos:start="21:38" pos:end="21:40"><name pos:start="21:38" pos:end="21:40">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:24"><expr pos:start="23:5" pos:end="23:23"><call pos:start="23:5" pos:end="23:23"><name pos:start="23:5" pos:end="23:18">scsi_req_unref</name><argument_list pos:start="23:19" pos:end="23:23">(<argument pos:start="23:20" pos:end="23:22"><expr pos:start="23:20" pos:end="23:22"><name pos:start="23:20" pos:end="23:22">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="25:5" pos:end="25:14">return <expr pos:start="25:12" pos:end="25:13"><name pos:start="25:12" pos:end="25:13">rc</name></expr>;</return>

</block_content>}</block></function>
</unit>
