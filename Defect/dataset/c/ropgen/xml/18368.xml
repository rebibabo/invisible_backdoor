<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18368.c" pos:tabs="8"><function pos:start="1:1" pos:end="295:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name> <name pos:start="1:13" pos:end="1:18">RENAME</name></type>(<name pos:start="1:20" pos:end="1:36">yadif_filter_line</name>)<parameter_list pos:start="1:38" pos:end="5:70">(<parameter pos:start="1:39" pos:end="1:50"><decl pos:start="1:39" pos:end="1:50"><type pos:start="1:39" pos:end="1:50"><name pos:start="1:39" pos:end="1:45">uint8_t</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">dst</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:65"><decl pos:start="1:53" pos:end="1:65"><type pos:start="1:53" pos:end="1:65"><name pos:start="1:53" pos:end="1:59">uint8_t</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:65">prev</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:79"><decl pos:start="1:68" pos:end="1:79"><type pos:start="1:68" pos:end="1:79"><name pos:start="1:68" pos:end="1:74">uint8_t</name> <modifier pos:start="1:76" pos:end="1:76">*</modifier></type><name pos:start="1:77" pos:end="1:79">cur</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:51"><decl pos:start="3:39" pos:end="3:51"><type pos:start="3:39" pos:end="3:51"><name pos:start="3:39" pos:end="3:45">uint8_t</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:51">next</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:58"><decl pos:start="3:54" pos:end="3:58"><type pos:start="3:54" pos:end="3:58"><name pos:start="3:54" pos:end="3:56">int</name></type> <name pos:start="3:58" pos:end="3:58">w</name></decl></parameter>, <parameter pos:start="3:61" pos:end="3:69"><decl pos:start="3:61" pos:end="3:69"><type pos:start="3:61" pos:end="3:69"><name pos:start="3:61" pos:end="3:63">int</name></type> <name pos:start="3:65" pos:end="3:69">prefs</name></decl></parameter>,

                                      <parameter pos:start="5:39" pos:end="5:47"><decl pos:start="5:39" pos:end="5:47"><type pos:start="5:39" pos:end="5:47"><name pos:start="5:39" pos:end="5:41">int</name></type> <name pos:start="5:43" pos:end="5:47">mrefs</name></decl></parameter>, <parameter pos:start="5:50" pos:end="5:59"><decl pos:start="5:50" pos:end="5:59"><type pos:start="5:50" pos:end="5:59"><name pos:start="5:50" pos:end="5:52">int</name></type> <name pos:start="5:54" pos:end="5:59">parity</name></decl></parameter>, <parameter pos:start="5:62" pos:end="5:69"><decl pos:start="5:62" pos:end="5:69"><type pos:start="5:62" pos:end="5:69"><name pos:start="5:62" pos:end="5:64">int</name></type> <name pos:start="5:66" pos:end="5:69">mode</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="295:1">{<block_content pos:start="9:5" pos:end="293:5">

    <expr_stmt pos:start="9:5" pos:end="9:43"><expr pos:start="9:5" pos:end="9:42"><call pos:start="9:5" pos:end="9:38"><name pos:start="9:5" pos:end="9:19">DECLARE_ALIGNED</name><argument_list pos:start="9:20" pos:end="9:38">(<argument pos:start="9:21" pos:end="9:22"><expr pos:start="9:21" pos:end="9:22"><literal type="number" pos:start="9:21" pos:end="9:22">16</literal></expr></argument>, <argument pos:start="9:25" pos:end="9:31"><expr pos:start="9:25" pos:end="9:31"><name pos:start="9:25" pos:end="9:31">uint8_t</name></expr></argument>, <argument pos:start="9:34" pos:end="9:37"><expr pos:start="9:34" pos:end="9:37"><name pos:start="9:34" pos:end="9:37">tmp0</name></expr></argument>)</argument_list></call><index pos:start="9:39" pos:end="9:42">[<expr pos:start="9:40" pos:end="9:41"><literal type="number" pos:start="9:40" pos:end="9:41">16</literal></expr>]</index></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:43"><expr pos:start="11:5" pos:end="11:42"><call pos:start="11:5" pos:end="11:38"><name pos:start="11:5" pos:end="11:19">DECLARE_ALIGNED</name><argument_list pos:start="11:20" pos:end="11:38">(<argument pos:start="11:21" pos:end="11:22"><expr pos:start="11:21" pos:end="11:22"><literal type="number" pos:start="11:21" pos:end="11:22">16</literal></expr></argument>, <argument pos:start="11:25" pos:end="11:31"><expr pos:start="11:25" pos:end="11:31"><name pos:start="11:25" pos:end="11:31">uint8_t</name></expr></argument>, <argument pos:start="11:34" pos:end="11:37"><expr pos:start="11:34" pos:end="11:37"><name pos:start="11:34" pos:end="11:37">tmp1</name></expr></argument>)</argument_list></call><index pos:start="11:39" pos:end="11:42">[<expr pos:start="11:40" pos:end="11:41"><literal type="number" pos:start="11:40" pos:end="11:41">16</literal></expr>]</index></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:43"><expr pos:start="13:5" pos:end="13:42"><call pos:start="13:5" pos:end="13:38"><name pos:start="13:5" pos:end="13:19">DECLARE_ALIGNED</name><argument_list pos:start="13:20" pos:end="13:38">(<argument pos:start="13:21" pos:end="13:22"><expr pos:start="13:21" pos:end="13:22"><literal type="number" pos:start="13:21" pos:end="13:22">16</literal></expr></argument>, <argument pos:start="13:25" pos:end="13:31"><expr pos:start="13:25" pos:end="13:31"><name pos:start="13:25" pos:end="13:31">uint8_t</name></expr></argument>, <argument pos:start="13:34" pos:end="13:37"><expr pos:start="13:34" pos:end="13:37"><name pos:start="13:34" pos:end="13:37">tmp2</name></expr></argument>)</argument_list></call><index pos:start="13:39" pos:end="13:42">[<expr pos:start="13:40" pos:end="13:41"><literal type="number" pos:start="13:40" pos:end="13:41">16</literal></expr>]</index></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:43"><expr pos:start="15:5" pos:end="15:42"><call pos:start="15:5" pos:end="15:38"><name pos:start="15:5" pos:end="15:19">DECLARE_ALIGNED</name><argument_list pos:start="15:20" pos:end="15:38">(<argument pos:start="15:21" pos:end="15:22"><expr pos:start="15:21" pos:end="15:22"><literal type="number" pos:start="15:21" pos:end="15:22">16</literal></expr></argument>, <argument pos:start="15:25" pos:end="15:31"><expr pos:start="15:25" pos:end="15:31"><name pos:start="15:25" pos:end="15:31">uint8_t</name></expr></argument>, <argument pos:start="15:34" pos:end="15:37"><expr pos:start="15:34" pos:end="15:37"><name pos:start="15:34" pos:end="15:37">tmp3</name></expr></argument>)</argument_list></call><index pos:start="15:39" pos:end="15:42">[<expr pos:start="15:40" pos:end="15:41"><literal type="number" pos:start="15:40" pos:end="15:41">16</literal></expr>]</index></expr>;</expr_stmt>

    <decl_stmt pos:start="17:5" pos:end="266:0"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">x</name></decl>;</decl_stmt>



<cpp:define pos:start="21:1" pos:end="265:5">#<cpp:directive pos:start="21:2" pos:end="21:7">define</cpp:directive> <cpp:macro pos:start="21:9" pos:end="21:14"><name pos:start="21:9" pos:end="21:14">FILTER</name></cpp:macro>\

    <cpp:value pos:start="23:5" pos:end="265:5">for(x=0; x&lt;w; x+=STEP){\

        __asm__ volatile(\

            "pxor      "MM"7, "MM"7 \n\t"\

            LOAD("(%[cur],%[mrefs])", MM"0") <comment type="block" pos:start="29:46" pos:end="29:66">/* c = cur[x-refs] */</comment>\

            LOAD("(%[cur],%[prefs])", MM"1") <comment type="block" pos:start="31:46" pos:end="31:66">/* e = cur[x+refs] */</comment>\

            LOAD("(%["prev2"])", MM"2") <comment type="block" pos:start="33:41" pos:end="33:54">/* prev2[x] */</comment>\

            LOAD("(%["next2"])", MM"3") <comment type="block" pos:start="35:41" pos:end="35:54">/* next2[x] */</comment>\

            MOVQ"      "MM"3, "MM"4 \n\t"\

            "paddw     "MM"2, "MM"3 \n\t"\

            "psraw     $1,    "MM"3 \n\t" <comment type="block" pos:start="41:43" pos:end="41:76">/* d = (prev2[x] + next2[x])&gt;&gt;1 */</comment>\

            MOVQ"      "MM"0, %[tmp0] \n\t" <comment type="block" pos:start="43:45" pos:end="43:51">/* c */</comment>\

            MOVQ"      "MM"3, %[tmp1] \n\t" <comment type="block" pos:start="45:45" pos:end="45:51">/* d */</comment>\

            MOVQ"      "MM"1, %[tmp2] \n\t" <comment type="block" pos:start="47:45" pos:end="47:51">/* e */</comment>\

            "psubw     "MM"4, "MM"2 \n\t"\

            PABS(      MM"4", MM"2") <comment type="block" pos:start="51:38" pos:end="51:57">/* temporal_diff0 */</comment>\

            LOAD("(%[prev],%[mrefs])", MM"3") <comment type="block" pos:start="53:47" pos:end="53:64">/* prev[x-refs] */</comment>\

            LOAD("(%[prev],%[prefs])", MM"4") <comment type="block" pos:start="55:47" pos:end="55:64">/* prev[x+refs] */</comment>\

            "psubw     "MM"0, "MM"3 \n\t"\

            "psubw     "MM"1, "MM"4 \n\t"\

            PABS(      MM"5", MM"3")\

            PABS(      MM"5", MM"4")\

            "paddw     "MM"4, "MM"3 \n\t" <comment type="block" pos:start="65:43" pos:end="65:62">/* temporal_diff1 */</comment>\

            "psrlw     $1,    "MM"2 \n\t"\

            "psrlw     $1,    "MM"3 \n\t"\

            "pmaxsw    "MM"3, "MM"2 \n\t"\

            LOAD("(%[next],%[mrefs])", MM"3") <comment type="block" pos:start="73:47" pos:end="73:64">/* next[x-refs] */</comment>\

            LOAD("(%[next],%[prefs])", MM"4") <comment type="block" pos:start="75:47" pos:end="75:64">/* next[x+refs] */</comment>\

            "psubw     "MM"0, "MM"3 \n\t"\

            "psubw     "MM"1, "MM"4 \n\t"\

            PABS(      MM"5", MM"3")\

            PABS(      MM"5", MM"4")\

            "paddw     "MM"4, "MM"3 \n\t" <comment type="block" pos:start="85:43" pos:end="85:62">/* temporal_diff2 */</comment>\

            "psrlw     $1,    "MM"3 \n\t"\

            "pmaxsw    "MM"3, "MM"2 \n\t"\

            MOVQ"      "MM"2, %[tmp3] \n\t" <comment type="block" pos:start="91:45" pos:end="91:54">/* diff */</comment>\

\

            "paddw     "MM"0, "MM"1 \n\t"\

            "paddw     "MM"0, "MM"0 \n\t"\

            "psubw     "MM"1, "MM"0 \n\t"\

            "psrlw     $1,    "MM"1 \n\t" <comment type="block" pos:start="101:43" pos:end="101:60">/* spatial_pred */</comment>\

            PABS(      MM"2", MM"0")      <comment type="block" pos:start="103:43" pos:end="103:56">/* ABS(c-e) */</comment>\

\

            MOVQU" -1(%[cur],%[mrefs]), "MM"2 \n\t" <comment type="block" pos:start="107:53" pos:end="107:71">/* cur[x-refs-1] */</comment>\

            MOVQU" -1(%[cur],%[prefs]), "MM"3 \n\t" <comment type="block" pos:start="109:53" pos:end="109:71">/* cur[x+refs-1] */</comment>\

            MOVQ"      "MM"2, "MM"4 \n\t"\

            "psubusb   "MM"3, "MM"2 \n\t"\

            "psubusb   "MM"4, "MM"3 \n\t"\

            "pmaxub    "MM"3, "MM"2 \n\t"\

            PSHUF(MM"3", MM"2") \

            "punpcklbw "MM"7, "MM"2 \n\t" <comment type="block" pos:start="121:43" pos:end="121:82">/* ABS(cur[x-refs-1] - cur[x+refs-1]) */</comment>\

            "punpcklbw "MM"7, "MM"3 \n\t" <comment type="block" pos:start="123:43" pos:end="123:82">/* ABS(cur[x-refs+1] - cur[x+refs+1]) */</comment>\

            "paddw     "MM"2, "MM"0 \n\t"\

            "paddw     "MM"3, "MM"0 \n\t"\

            "psubw    "MANGLE(pw_1)", "MM"0 \n\t" <comment type="block" pos:start="129:51" pos:end="129:69">/* spatial_score */</comment>\

\

            CHECK(-2,0)\

            CHECK1\

            CHECK(-3,1)\

            CHECK2\

            CHECK(0,-2)\

            CHECK1\

            CHECK(1,-3)\

            CHECK2\

\

            <comment type="block" pos:start="151:13" pos:end="151:35">/* if(p-&gt;mode&lt;2) ... */</comment>\

            MOVQ"    %[tmp3], "MM"6 \n\t" <comment type="block" pos:start="153:43" pos:end="153:52">/* diff */</comment>\

            "cmpl      $2, %[mode] \n\t"\

            "jge       1f \n\t"\

            LOAD("(%["prev2"],%[mrefs],2)", MM"2") <comment type="block" pos:start="159:52" pos:end="159:72">/* prev2[x-2*refs] */</comment>\

            LOAD("(%["next2"],%[mrefs],2)", MM"4") <comment type="block" pos:start="161:52" pos:end="161:72">/* next2[x-2*refs] */</comment>\

            LOAD("(%["prev2"],%[prefs],2)", MM"3") <comment type="block" pos:start="163:52" pos:end="163:72">/* prev2[x+2*refs] */</comment>\

            LOAD("(%["next2"],%[prefs],2)", MM"5") <comment type="block" pos:start="165:52" pos:end="165:72">/* next2[x+2*refs] */</comment>\

            "paddw     "MM"4, "MM"2 \n\t"\

            "paddw     "MM"5, "MM"3 \n\t"\

            "psrlw     $1,    "MM"2 \n\t" <comment type="block" pos:start="171:43" pos:end="171:49">/* b */</comment>\

            "psrlw     $1,    "MM"3 \n\t" <comment type="block" pos:start="173:43" pos:end="173:49">/* f */</comment>\

            MOVQ"    %[tmp0], "MM"4 \n\t" <comment type="block" pos:start="175:43" pos:end="175:49">/* c */</comment>\

            MOVQ"    %[tmp1], "MM"5 \n\t" <comment type="block" pos:start="177:43" pos:end="177:49">/* d */</comment>\

            MOVQ"    %[tmp2], "MM"7 \n\t" <comment type="block" pos:start="179:43" pos:end="179:49">/* e */</comment>\

            "psubw     "MM"4, "MM"2 \n\t" <comment type="block" pos:start="181:43" pos:end="181:51">/* b-c */</comment>\

            "psubw     "MM"7, "MM"3 \n\t" <comment type="block" pos:start="183:43" pos:end="183:51">/* f-e */</comment>\

            MOVQ"      "MM"5, "MM"0 \n\t"\

            "psubw     "MM"4, "MM"5 \n\t" <comment type="block" pos:start="187:43" pos:end="187:51">/* d-c */</comment>\

            "psubw     "MM"7, "MM"0 \n\t" <comment type="block" pos:start="189:43" pos:end="189:51">/* d-e */</comment>\

            MOVQ"      "MM"2, "MM"4 \n\t"\

            "pminsw    "MM"3, "MM"2 \n\t"\

            "pmaxsw    "MM"4, "MM"3 \n\t"\

            "pmaxsw    "MM"5, "MM"2 \n\t"\

            "pminsw    "MM"5, "MM"3 \n\t"\

            "pmaxsw    "MM"0, "MM"2 \n\t" <comment type="block" pos:start="201:43" pos:end="201:51">/* max */</comment>\

            "pminsw    "MM"0, "MM"3 \n\t" <comment type="block" pos:start="203:43" pos:end="203:51">/* min */</comment>\

            "pxor      "MM"4, "MM"4 \n\t"\

            "pmaxsw    "MM"3, "MM"6 \n\t"\

            "psubw     "MM"2, "MM"4 \n\t" <comment type="block" pos:start="209:43" pos:end="209:52">/* -max */</comment>\

            "pmaxsw    "MM"4, "MM"6 \n\t" <comment type="block" pos:start="211:43" pos:end="211:76">/* diff= MAX3(diff, min, -max); */</comment>\

            "1: \n\t"\

\

            MOVQ"    %[tmp1], "MM"2 \n\t" <comment type="block" pos:start="217:43" pos:end="217:49">/* d */</comment>\

            MOVQ"      "MM"2, "MM"3 \n\t"\

            "psubw     "MM"6, "MM"2 \n\t" <comment type="block" pos:start="221:43" pos:end="221:54">/* d-diff */</comment>\

            "paddw     "MM"6, "MM"3 \n\t" <comment type="block" pos:start="223:43" pos:end="223:54">/* d+diff */</comment>\

            "pmaxsw    "MM"2, "MM"1 \n\t"\

            "pminsw    "MM"3, "MM"1 \n\t" <comment type="block" pos:start="227:43" pos:end="227:87">/* d = clip(spatial_pred, d-diff, d+diff); */</comment>\

            "packuswb  "MM"1, "MM"1 \n\t"\

\

            :[tmp0]"=m"(tmp0),\

             [tmp1]"=m"(tmp1),\

             [tmp2]"=m"(tmp2),\

             [tmp3]"=m"(tmp3)\

            :[prev] "r"(prev),\

             [cur]  "r"(cur),\

             [next] "r"(next),\

             [prefs]"r"((x86_reg)prefs),\

             [mrefs]"r"((x86_reg)mrefs),\

             [mode] "g"(mode)\

        );\

        __asm__ volatile(MOV" "MM"1, %0" :"=m"(*dst));\

        dst += STEP;\

        prev+= STEP;\

        cur += STEP;\

        next+= STEP;\

    }</cpp:value></cpp:define>



    <if_stmt pos:start="269:5" pos:end="293:5"><if pos:start="269:5" pos:end="281:5">if <condition pos:start="269:8" pos:end="269:15">(<expr pos:start="269:9" pos:end="269:14"><name pos:start="269:9" pos:end="269:14">parity</name></expr>)</condition> <block pos:start="269:17" pos:end="281:5">{<block_content pos:start="275:9" pos:end="280:0">

<cpp:define pos:start="271:1" pos:end="271:20">#<cpp:directive pos:start="271:2" pos:end="271:7">define</cpp:directive> <cpp:macro pos:start="271:9" pos:end="271:13"><name pos:start="271:9" pos:end="271:13">prev2</name></cpp:macro> <cpp:value pos:start="271:15" pos:end="271:20">"prev"</cpp:value></cpp:define>

<cpp:define pos:start="273:1" pos:end="273:19">#<cpp:directive pos:start="273:2" pos:end="273:7">define</cpp:directive> <cpp:macro pos:start="273:9" pos:end="273:13"><name pos:start="273:9" pos:end="273:13">next2</name></cpp:macro> <cpp:value pos:start="273:15" pos:end="273:19">"cur"</cpp:value></cpp:define>

        <expr_stmt pos:start="275:9" pos:end="280:0"><expr pos:start="275:9" pos:end="280:0"><name pos:start="275:9" pos:end="280:0">FILTER</name></expr></expr_stmt>

<cpp:undef pos:start="277:1" pos:end="277:12">#<cpp:directive pos:start="277:2" pos:end="277:6">undef</cpp:directive> <name pos:start="277:8" pos:end="277:12">prev2</name></cpp:undef>

<cpp:undef pos:start="279:1" pos:end="279:12">#<cpp:directive pos:start="279:2" pos:end="279:6">undef</cpp:directive> <name pos:start="279:8" pos:end="279:12">next2</name></cpp:undef>

    </block_content>}</block></if> <else pos:start="281:7" pos:end="293:5">else <block pos:start="281:12" pos:end="293:5">{<block_content pos:start="287:9" pos:end="292:0">

<cpp:define pos:start="283:1" pos:end="283:19">#<cpp:directive pos:start="283:2" pos:end="283:7">define</cpp:directive> <cpp:macro pos:start="283:9" pos:end="283:13"><name pos:start="283:9" pos:end="283:13">prev2</name></cpp:macro> <cpp:value pos:start="283:15" pos:end="283:19">"cur"</cpp:value></cpp:define>

<cpp:define pos:start="285:1" pos:end="285:20">#<cpp:directive pos:start="285:2" pos:end="285:7">define</cpp:directive> <cpp:macro pos:start="285:9" pos:end="285:13"><name pos:start="285:9" pos:end="285:13">next2</name></cpp:macro> <cpp:value pos:start="285:15" pos:end="285:20">"next"</cpp:value></cpp:define>

        <expr_stmt pos:start="287:9" pos:end="292:0"><expr pos:start="287:9" pos:end="292:0"><name pos:start="287:9" pos:end="292:0">FILTER</name></expr></expr_stmt>

<cpp:undef pos:start="289:1" pos:end="289:12">#<cpp:directive pos:start="289:2" pos:end="289:6">undef</cpp:directive> <name pos:start="289:8" pos:end="289:12">prev2</name></cpp:undef>

<cpp:undef pos:start="291:1" pos:end="291:12">#<cpp:directive pos:start="291:2" pos:end="291:6">undef</cpp:directive> <name pos:start="291:8" pos:end="291:12">next2</name></cpp:undef>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
