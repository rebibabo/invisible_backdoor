<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20150.c" pos:tabs="8"><function pos:start="1:1" pos:end="143:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">usb_msd_handle_control</name><parameter_list pos:start="1:34" pos:end="3:71">(<parameter pos:start="1:35" pos:end="1:48"><decl pos:start="1:35" pos:end="1:48"><type pos:start="1:35" pos:end="1:48"><name pos:start="1:35" pos:end="1:43">USBDevice</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">dev</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:61"><decl pos:start="1:51" pos:end="1:61"><type pos:start="1:51" pos:end="1:61"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:61">request</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:72"><decl pos:start="1:64" pos:end="1:72"><type pos:start="1:64" pos:end="1:72"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:72">value</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:43"><decl pos:start="3:35" pos:end="3:43"><type pos:start="3:35" pos:end="3:43"><name pos:start="3:35" pos:end="3:37">int</name></type> <name pos:start="3:39" pos:end="3:43">index</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:55"><decl pos:start="3:46" pos:end="3:55"><type pos:start="3:46" pos:end="3:55"><name pos:start="3:46" pos:end="3:48">int</name></type> <name pos:start="3:50" pos:end="3:55">length</name></decl></parameter>, <parameter pos:start="3:58" pos:end="3:70"><decl pos:start="3:58" pos:end="3:70"><type pos:start="3:58" pos:end="3:70"><name pos:start="3:58" pos:end="3:64">uint8_t</name> <modifier pos:start="3:66" pos:end="3:66">*</modifier></type><name pos:start="3:67" pos:end="3:70">data</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="143:1">{<block_content pos:start="7:5" pos:end="141:15">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">MSDState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:15">s</name> <init pos:start="7:17" pos:end="7:33">= <expr pos:start="7:19" pos:end="7:33"><operator pos:start="7:19" pos:end="7:19">(</operator><name pos:start="7:20" pos:end="7:27">MSDState</name> <operator pos:start="7:29" pos:end="7:29">*</operator><operator pos:start="7:30" pos:end="7:30">)</operator><name pos:start="7:31" pos:end="7:33">dev</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:76"><expr pos:start="13:5" pos:end="13:75"><name pos:start="13:5" pos:end="13:7">ret</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:75"><name pos:start="13:11" pos:end="13:33">usb_desc_handle_control</name><argument_list pos:start="13:34" pos:end="13:75">(<argument pos:start="13:35" pos:end="13:37"><expr pos:start="13:35" pos:end="13:37"><name pos:start="13:35" pos:end="13:37">dev</name></expr></argument>, <argument pos:start="13:40" pos:end="13:46"><expr pos:start="13:40" pos:end="13:46"><name pos:start="13:40" pos:end="13:46">request</name></expr></argument>, <argument pos:start="13:49" pos:end="13:53"><expr pos:start="13:49" pos:end="13:53"><name pos:start="13:49" pos:end="13:53">value</name></expr></argument>, <argument pos:start="13:56" pos:end="13:60"><expr pos:start="13:56" pos:end="13:60"><name pos:start="13:56" pos:end="13:60">index</name></expr></argument>, <argument pos:start="13:63" pos:end="13:68"><expr pos:start="13:63" pos:end="13:68"><name pos:start="13:63" pos:end="13:68">length</name></expr></argument>, <argument pos:start="13:71" pos:end="13:74"><expr pos:start="13:71" pos:end="13:74"><name pos:start="13:71" pos:end="13:74">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:17">(<expr pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:11">ret</name> <operator pos:start="15:13" pos:end="15:14">&gt;=</operator> <literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr>)</condition> <block pos:start="15:19" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:19">

        <return pos:start="17:9" pos:end="17:19">return <expr pos:start="17:16" pos:end="17:18"><name pos:start="17:16" pos:end="17:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:12"><expr pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:7">ret</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <literal type="number" pos:start="23:11" pos:end="23:11">0</literal></expr>;</expr_stmt>

    <switch pos:start="25:5" pos:end="139:5">switch <condition pos:start="25:12" pos:end="25:20">(<expr pos:start="25:13" pos:end="25:19"><name pos:start="25:13" pos:end="25:19">request</name></expr>)</condition> <block pos:start="25:22" pos:end="139:5">{<block_content pos:start="27:5" pos:end="137:14">

    <case pos:start="27:5" pos:end="27:44">case <expr pos:start="27:10" pos:end="27:43"><name pos:start="27:10" pos:end="27:22">DeviceRequest</name> <operator pos:start="27:24" pos:end="27:24">|</operator> <name pos:start="27:26" pos:end="27:43">USB_REQ_GET_STATUS</name></expr>:</case>

        <expr_stmt pos:start="29:9" pos:end="31:61"><expr pos:start="29:9" pos:end="31:60"><name pos:start="29:9" pos:end="29:15"><name pos:start="29:9" pos:end="29:12">data</name><index pos:start="29:13" pos:end="29:15">[<expr pos:start="29:14" pos:end="29:14"><literal type="number" pos:start="29:14" pos:end="29:14">0</literal></expr>]</index></name> <operator pos:start="29:17" pos:end="29:17">=</operator> <operator pos:start="29:19" pos:end="29:19">(</operator><literal type="number" pos:start="29:20" pos:end="29:20">1</literal> <operator pos:start="29:22" pos:end="29:23">&lt;&lt;</operator> <name pos:start="29:25" pos:end="29:47">USB_DEVICE_SELF_POWERED</name><operator pos:start="29:48" pos:end="29:48">)</operator> <operator pos:start="29:50" pos:end="29:50">|</operator>

            <operator pos:start="31:13" pos:end="31:13">(</operator><name pos:start="31:14" pos:end="31:31"><name pos:start="31:14" pos:end="31:16">dev</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:31">remote_wakeup</name></name> <operator pos:start="31:33" pos:end="31:34">&lt;&lt;</operator> <name pos:start="31:36" pos:end="31:59">USB_DEVICE_REMOTE_WAKEUP</name><operator pos:start="31:60" pos:end="31:60">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:23"><expr pos:start="33:9" pos:end="33:22"><name pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:12">data</name><index pos:start="33:13" pos:end="33:15">[<expr pos:start="33:14" pos:end="33:14"><literal type="number" pos:start="33:14" pos:end="33:14">1</literal></expr>]</index></name> <operator pos:start="33:17" pos:end="33:17">=</operator> <literal type="number" pos:start="33:19" pos:end="33:22">0x00</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:16"><expr pos:start="35:9" pos:end="35:15"><name pos:start="35:9" pos:end="35:11">ret</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <literal type="number" pos:start="35:15" pos:end="35:15">2</literal></expr>;</expr_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    <case pos:start="39:5" pos:end="39:50">case <expr pos:start="39:10" pos:end="39:49"><name pos:start="39:10" pos:end="39:25">DeviceOutRequest</name> <operator pos:start="39:27" pos:end="39:27">|</operator> <name pos:start="39:29" pos:end="39:49">USB_REQ_CLEAR_FEATURE</name></expr>:</case>

        <if_stmt pos:start="41:9" pos:end="49:9"><if pos:start="41:9" pos:end="45:9">if <condition pos:start="41:12" pos:end="41:46">(<expr pos:start="41:13" pos:end="41:45"><name pos:start="41:13" pos:end="41:17">value</name> <operator pos:start="41:19" pos:end="41:20">==</operator> <name pos:start="41:22" pos:end="41:45">USB_DEVICE_REMOTE_WAKEUP</name></expr>)</condition> <block pos:start="41:48" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:35">

            <expr_stmt pos:start="43:13" pos:end="43:35"><expr pos:start="43:13" pos:end="43:34"><name pos:start="43:13" pos:end="43:30"><name pos:start="43:13" pos:end="43:15">dev</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:30">remote_wakeup</name></name> <operator pos:start="43:32" pos:end="43:32">=</operator> <literal type="number" pos:start="43:34" pos:end="43:34">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="45:11" pos:end="49:9">else <block pos:start="45:16" pos:end="49:9">{<block_content pos:start="47:13" pos:end="47:22">

            <goto pos:start="47:13" pos:end="47:22">goto <name pos:start="47:18" pos:end="47:21">fail</name>;</goto>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:16"><expr pos:start="51:9" pos:end="51:15"><name pos:start="51:9" pos:end="51:11">ret</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <literal type="number" pos:start="51:15" pos:end="51:15">0</literal></expr>;</expr_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    <case pos:start="55:5" pos:end="55:48">case <expr pos:start="55:10" pos:end="55:47"><name pos:start="55:10" pos:end="55:25">DeviceOutRequest</name> <operator pos:start="55:27" pos:end="55:27">|</operator> <name pos:start="55:29" pos:end="55:47">USB_REQ_SET_FEATURE</name></expr>:</case>

        <if_stmt pos:start="57:9" pos:end="65:9"><if pos:start="57:9" pos:end="61:9">if <condition pos:start="57:12" pos:end="57:46">(<expr pos:start="57:13" pos:end="57:45"><name pos:start="57:13" pos:end="57:17">value</name> <operator pos:start="57:19" pos:end="57:20">==</operator> <name pos:start="57:22" pos:end="57:45">USB_DEVICE_REMOTE_WAKEUP</name></expr>)</condition> <block pos:start="57:48" pos:end="61:9">{<block_content pos:start="59:13" pos:end="59:35">

            <expr_stmt pos:start="59:13" pos:end="59:35"><expr pos:start="59:13" pos:end="59:34"><name pos:start="59:13" pos:end="59:30"><name pos:start="59:13" pos:end="59:15">dev</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:30">remote_wakeup</name></name> <operator pos:start="59:32" pos:end="59:32">=</operator> <literal type="number" pos:start="59:34" pos:end="59:34">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="61:11" pos:end="65:9">else <block pos:start="61:16" pos:end="65:9">{<block_content pos:start="63:13" pos:end="63:22">

            <goto pos:start="63:13" pos:end="63:22">goto <name pos:start="63:18" pos:end="63:21">fail</name>;</goto>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:16"><expr pos:start="67:9" pos:end="67:15"><name pos:start="67:9" pos:end="67:11">ret</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <literal type="number" pos:start="67:15" pos:end="67:15">0</literal></expr>;</expr_stmt>

        <break pos:start="69:9" pos:end="69:14">break;</break>

    <case pos:start="71:5" pos:end="71:51">case <expr pos:start="71:10" pos:end="71:50"><name pos:start="71:10" pos:end="71:22">DeviceRequest</name> <operator pos:start="71:24" pos:end="71:24">|</operator> <name pos:start="71:26" pos:end="71:50">USB_REQ_GET_CONFIGURATION</name></expr>:</case>

        <expr_stmt pos:start="73:9" pos:end="73:20"><expr pos:start="73:9" pos:end="73:19"><name pos:start="73:9" pos:end="73:15"><name pos:start="73:9" pos:end="73:12">data</name><index pos:start="73:13" pos:end="73:15">[<expr pos:start="73:14" pos:end="73:14"><literal type="number" pos:start="73:14" pos:end="73:14">0</literal></expr>]</index></name> <operator pos:start="73:17" pos:end="73:17">=</operator> <literal type="number" pos:start="73:19" pos:end="73:19">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:16"><expr pos:start="75:9" pos:end="75:15"><name pos:start="75:9" pos:end="75:11">ret</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <literal type="number" pos:start="75:15" pos:end="75:15">1</literal></expr>;</expr_stmt>

        <break pos:start="77:9" pos:end="77:14">break;</break>

    <case pos:start="79:5" pos:end="79:54">case <expr pos:start="79:10" pos:end="79:53"><name pos:start="79:10" pos:end="79:25">DeviceOutRequest</name> <operator pos:start="79:27" pos:end="79:27">|</operator> <name pos:start="79:29" pos:end="79:53">USB_REQ_SET_CONFIGURATION</name></expr>:</case>

        <expr_stmt pos:start="81:9" pos:end="81:16"><expr pos:start="81:9" pos:end="81:15"><name pos:start="81:9" pos:end="81:11">ret</name> <operator pos:start="81:13" pos:end="81:13">=</operator> <literal type="number" pos:start="81:15" pos:end="81:15">0</literal></expr>;</expr_stmt>

        <break pos:start="83:9" pos:end="83:14">break;</break>

    <case pos:start="85:5" pos:end="85:47">case <expr pos:start="85:10" pos:end="85:46"><name pos:start="85:10" pos:end="85:22">DeviceRequest</name> <operator pos:start="85:24" pos:end="85:24">|</operator> <name pos:start="85:26" pos:end="85:46">USB_REQ_GET_INTERFACE</name></expr>:</case>

        <expr_stmt pos:start="87:9" pos:end="87:20"><expr pos:start="87:9" pos:end="87:19"><name pos:start="87:9" pos:end="87:15"><name pos:start="87:9" pos:end="87:12">data</name><index pos:start="87:13" pos:end="87:15">[<expr pos:start="87:14" pos:end="87:14"><literal type="number" pos:start="87:14" pos:end="87:14">0</literal></expr>]</index></name> <operator pos:start="87:17" pos:end="87:17">=</operator> <literal type="number" pos:start="87:19" pos:end="87:19">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:16"><expr pos:start="89:9" pos:end="89:15"><name pos:start="89:9" pos:end="89:11">ret</name> <operator pos:start="89:13" pos:end="89:13">=</operator> <literal type="number" pos:start="89:15" pos:end="89:15">1</literal></expr>;</expr_stmt>

        <break pos:start="91:9" pos:end="91:14">break;</break>

    <case pos:start="93:5" pos:end="93:50">case <expr pos:start="93:10" pos:end="93:49"><name pos:start="93:10" pos:end="93:25">DeviceOutRequest</name> <operator pos:start="93:27" pos:end="93:27">|</operator> <name pos:start="93:29" pos:end="93:49">USB_REQ_SET_INTERFACE</name></expr>:</case>

        <expr_stmt pos:start="95:9" pos:end="95:16"><expr pos:start="95:9" pos:end="95:15"><name pos:start="95:9" pos:end="95:11">ret</name> <operator pos:start="95:13" pos:end="95:13">=</operator> <literal type="number" pos:start="95:15" pos:end="95:15">0</literal></expr>;</expr_stmt>

        <break pos:start="97:9" pos:end="97:14">break;</break>

    <case pos:start="99:5" pos:end="99:52">case <expr pos:start="99:10" pos:end="99:51"><name pos:start="99:10" pos:end="99:27">EndpointOutRequest</name> <operator pos:start="99:29" pos:end="99:29">|</operator> <name pos:start="99:31" pos:end="99:51">USB_REQ_CLEAR_FEATURE</name></expr>:</case>

        <expr_stmt pos:start="101:9" pos:end="101:16"><expr pos:start="101:9" pos:end="101:15"><name pos:start="101:9" pos:end="101:11">ret</name> <operator pos:start="101:13" pos:end="101:13">=</operator> <literal type="number" pos:start="101:15" pos:end="101:15">0</literal></expr>;</expr_stmt>

        <break pos:start="103:9" pos:end="103:14">break;</break>

    <case pos:start="105:5" pos:end="105:53">case <expr pos:start="105:10" pos:end="105:52"><name pos:start="105:10" pos:end="105:28">InterfaceOutRequest</name> <operator pos:start="105:30" pos:end="105:30">|</operator> <name pos:start="105:32" pos:end="105:52">USB_REQ_SET_INTERFACE</name></expr>:</case>

        <expr_stmt pos:start="107:9" pos:end="107:16"><expr pos:start="107:9" pos:end="107:15"><name pos:start="107:9" pos:end="107:11">ret</name> <operator pos:start="107:13" pos:end="107:13">=</operator> <literal type="number" pos:start="107:15" pos:end="107:15">0</literal></expr>;</expr_stmt>

        <break pos:start="109:9" pos:end="109:14">break;</break>

        <comment type="block" pos:start="111:9" pos:end="111:39">/* Class specific requests.  */</comment>

    <case pos:start="113:5" pos:end="113:53">case <expr pos:start="113:10" pos:end="113:52"><name pos:start="113:10" pos:end="113:33">ClassInterfaceOutRequest</name> <operator pos:start="113:35" pos:end="113:35">|</operator> <name pos:start="113:37" pos:end="113:52">MassStorageReset</name></expr>:</case>

        <comment type="block" pos:start="115:9" pos:end="115:50">/* Reset state ready for the next CBW.  */</comment>

        <expr_stmt pos:start="117:9" pos:end="117:31"><expr pos:start="117:9" pos:end="117:30"><name pos:start="117:9" pos:end="117:15"><name pos:start="117:9" pos:end="117:9">s</name><operator pos:start="117:10" pos:end="117:11">-&gt;</operator><name pos:start="117:12" pos:end="117:15">mode</name></name> <operator pos:start="117:17" pos:end="117:17">=</operator> <name pos:start="117:19" pos:end="117:30">USB_MSDM_CBW</name></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:16"><expr pos:start="119:9" pos:end="119:15"><name pos:start="119:9" pos:end="119:11">ret</name> <operator pos:start="119:13" pos:end="119:13">=</operator> <literal type="number" pos:start="119:15" pos:end="119:15">0</literal></expr>;</expr_stmt>

        <break pos:start="121:9" pos:end="121:14">break;</break>

    <case pos:start="123:5" pos:end="123:43">case <expr pos:start="123:10" pos:end="123:42"><name pos:start="123:10" pos:end="123:30">ClassInterfaceRequest</name> <operator pos:start="123:32" pos:end="123:32">|</operator> <name pos:start="123:34" pos:end="123:42">GetMaxLun</name></expr>:</case>

        <expr_stmt pos:start="125:9" pos:end="125:20"><expr pos:start="125:9" pos:end="125:19"><name pos:start="125:9" pos:end="125:15"><name pos:start="125:9" pos:end="125:12">data</name><index pos:start="125:13" pos:end="125:15">[<expr pos:start="125:14" pos:end="125:14"><literal type="number" pos:start="125:14" pos:end="125:14">0</literal></expr>]</index></name> <operator pos:start="125:17" pos:end="125:17">=</operator> <literal type="number" pos:start="125:19" pos:end="125:19">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:16"><expr pos:start="127:9" pos:end="127:15"><name pos:start="127:9" pos:end="127:11">ret</name> <operator pos:start="127:13" pos:end="127:13">=</operator> <literal type="number" pos:start="127:15" pos:end="127:15">1</literal></expr>;</expr_stmt>

        <break pos:start="129:9" pos:end="129:14">break;</break>

    <default pos:start="131:5" pos:end="131:12">default:</default>

    <label pos:start="133:5" pos:end="133:9"><name pos:start="133:5" pos:end="133:8">fail</name>:</label>

        <expr_stmt pos:start="135:9" pos:end="135:28"><expr pos:start="135:9" pos:end="135:27"><name pos:start="135:9" pos:end="135:11">ret</name> <operator pos:start="135:13" pos:end="135:13">=</operator> <name pos:start="135:15" pos:end="135:27">USB_RET_STALL</name></expr>;</expr_stmt>

        <break pos:start="137:9" pos:end="137:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="141:5" pos:end="141:15">return <expr pos:start="141:12" pos:end="141:14"><name pos:start="141:12" pos:end="141:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
