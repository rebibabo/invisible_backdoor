<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/719.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:75"><name pos:start="1:1" pos:end="1:20">grlib_gptimer_writel</name><argument_list pos:start="1:21" pos:end="1:75">(<argument pos:start="1:22" pos:end="1:33">void *opaque</argument>, <argument pos:start="1:36" pos:end="1:58">target_phys_addr_t addr</argument>, <argument pos:start="1:61" pos:end="1:74">uint32_t value</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="171:1">{<block_content pos:start="5:5" pos:end="169:56">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:15">GPTimerUnit</name>        <modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:28">unit</name> <init pos:start="5:30" pos:end="5:37">= <expr pos:start="5:32" pos:end="5:37"><name pos:start="5:32" pos:end="5:37">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:22">target_phys_addr_t</name></type>  <name pos:start="7:25" pos:end="7:34">timer_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type>                 <name pos:start="9:25" pos:end="9:26">id</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:17"><expr pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:8">addr</name> <operator pos:start="13:10" pos:end="13:11">&amp;=</operator> <literal type="number" pos:start="13:13" pos:end="13:16">0xff</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:24">/* Unit registers */</comment>

    <switch pos:start="19:5" pos:end="61:5">switch <condition pos:start="19:12" pos:end="19:17">(<expr pos:start="19:13" pos:end="19:16"><name pos:start="19:13" pos:end="19:16">addr</name></expr>)</condition> <block pos:start="19:19" pos:end="61:5">{<block_content pos:start="21:5" pos:end="59:14">

    <case pos:start="21:5" pos:end="21:23">case <expr pos:start="21:10" pos:end="21:22"><name pos:start="21:10" pos:end="21:22">SCALER_OFFSET</name></expr>:</case>

        <expr_stmt pos:start="23:9" pos:end="23:24"><expr pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:13">value</name> <operator pos:start="23:15" pos:end="23:16">&amp;=</operator> <literal type="number" pos:start="23:18" pos:end="23:23">0xFFFF</literal></expr>;</expr_stmt> <comment type="block" pos:start="23:26" pos:end="23:49">/* clean up the value */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:29"><expr pos:start="25:9" pos:end="25:28"><name pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:12">unit</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:20">scaler</name></name> <operator pos:start="25:22" pos:end="25:22">=</operator> <name pos:start="25:24" pos:end="25:28">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:64"><expr pos:start="27:9" pos:end="27:63"><call pos:start="27:9" pos:end="27:63"><name pos:start="27:9" pos:end="27:34">trace_grlib_gptimer_writel</name><argument_list pos:start="27:35" pos:end="27:63">(<argument pos:start="27:36" pos:end="27:37"><expr pos:start="27:36" pos:end="27:37"><operator pos:start="27:36" pos:end="27:36">-</operator><literal type="number" pos:start="27:37" pos:end="27:37">1</literal></expr></argument>, <argument pos:start="27:40" pos:end="27:48"><expr pos:start="27:40" pos:end="27:48"><literal type="string" pos:start="27:40" pos:end="27:48">"scaler:"</literal></expr></argument>, <argument pos:start="27:51" pos:end="27:62"><expr pos:start="27:51" pos:end="27:62"><name pos:start="27:51" pos:end="27:62"><name pos:start="27:51" pos:end="27:54">unit</name><operator pos:start="27:55" pos:end="27:56">-&gt;</operator><name pos:start="27:57" pos:end="27:62">scaler</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:15">return;</return>



    <case pos:start="33:5" pos:end="33:30">case <expr pos:start="33:10" pos:end="33:29"><name pos:start="33:10" pos:end="33:29">SCALER_RELOAD_OFFSET</name></expr>:</case>

        <expr_stmt pos:start="35:9" pos:end="35:24"><expr pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:13">value</name> <operator pos:start="35:15" pos:end="35:16">&amp;=</operator> <literal type="number" pos:start="35:18" pos:end="35:23">0xFFFF</literal></expr>;</expr_stmt> <comment type="block" pos:start="35:26" pos:end="35:49">/* clean up the value */</comment>

        <expr_stmt pos:start="37:9" pos:end="37:29"><expr pos:start="37:9" pos:end="37:28"><name pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:12">unit</name><operator pos:start="37:13" pos:end="37:14">-&gt;</operator><name pos:start="37:15" pos:end="37:20">reload</name></name> <operator pos:start="37:22" pos:end="37:22">=</operator> <name pos:start="37:24" pos:end="37:28">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:64"><expr pos:start="39:9" pos:end="39:63"><call pos:start="39:9" pos:end="39:63"><name pos:start="39:9" pos:end="39:34">trace_grlib_gptimer_writel</name><argument_list pos:start="39:35" pos:end="39:63">(<argument pos:start="39:36" pos:end="39:37"><expr pos:start="39:36" pos:end="39:37"><operator pos:start="39:36" pos:end="39:36">-</operator><literal type="number" pos:start="39:37" pos:end="39:37">1</literal></expr></argument>, <argument pos:start="39:40" pos:end="39:48"><expr pos:start="39:40" pos:end="39:48"><literal type="string" pos:start="39:40" pos:end="39:48">"reload:"</literal></expr></argument>, <argument pos:start="39:51" pos:end="39:62"><expr pos:start="39:51" pos:end="39:62"><name pos:start="39:51" pos:end="39:62"><name pos:start="39:51" pos:end="39:54">unit</name><operator pos:start="39:55" pos:end="39:56">-&gt;</operator><name pos:start="39:57" pos:end="39:62">reload</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:46"><expr pos:start="41:9" pos:end="41:45"><call pos:start="41:9" pos:end="41:45"><name pos:start="41:9" pos:end="41:32">grlib_gptimer_set_scaler</name><argument_list pos:start="41:33" pos:end="41:45">(<argument pos:start="41:34" pos:end="41:37"><expr pos:start="41:34" pos:end="41:37"><name pos:start="41:34" pos:end="41:37">unit</name></expr></argument>, <argument pos:start="41:40" pos:end="41:44"><expr pos:start="41:40" pos:end="41:44"><name pos:start="41:40" pos:end="41:44">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:15">return;</return>



    <case pos:start="47:5" pos:end="47:23">case <expr pos:start="47:10" pos:end="47:22"><name pos:start="47:10" pos:end="47:22">CONFIG_OFFSET</name></expr>:</case>

        <comment type="block" pos:start="49:9" pos:end="49:60">/* Read Only (disable timer freeze not supported) */</comment>

        <expr_stmt pos:start="51:9" pos:end="51:65"><expr pos:start="51:9" pos:end="51:64"><call pos:start="51:9" pos:end="51:64"><name pos:start="51:9" pos:end="51:34">trace_grlib_gptimer_writel</name><argument_list pos:start="51:35" pos:end="51:64">(<argument pos:start="51:36" pos:end="51:37"><expr pos:start="51:36" pos:end="51:37"><operator pos:start="51:36" pos:end="51:36">-</operator><literal type="number" pos:start="51:37" pos:end="51:37">1</literal></expr></argument>, <argument pos:start="51:40" pos:end="51:60"><expr pos:start="51:40" pos:end="51:60"><literal type="string" pos:start="51:40" pos:end="51:60">"config (Read Only):"</literal></expr></argument>, <argument pos:start="51:63" pos:end="51:63"><expr pos:start="51:63" pos:end="51:63"><literal type="number" pos:start="51:63" pos:end="51:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:15">return;</return>



    <default pos:start="57:5" pos:end="57:12">default:</default>

        <break pos:start="59:9" pos:end="59:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="65:5" pos:end="65:37"><expr pos:start="65:5" pos:end="65:36"><name pos:start="65:5" pos:end="65:14">timer_addr</name> <operator pos:start="65:16" pos:end="65:16">=</operator> <operator pos:start="65:18" pos:end="65:18">(</operator><name pos:start="65:19" pos:end="65:22">addr</name> <operator pos:start="65:24" pos:end="65:24">%</operator> <name pos:start="65:26" pos:end="65:35">TIMER_BASE</name><operator pos:start="65:36" pos:end="65:36">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:50"><expr pos:start="67:5" pos:end="67:49"><name pos:start="67:5" pos:end="67:6">id</name>         <operator pos:start="67:16" pos:end="67:16">=</operator> <operator pos:start="67:18" pos:end="67:18">(</operator><name pos:start="67:19" pos:end="67:22">addr</name> <operator pos:start="67:24" pos:end="67:24">-</operator> <name pos:start="67:26" pos:end="67:35">TIMER_BASE</name><operator pos:start="67:36" pos:end="67:36">)</operator> <operator pos:start="67:38" pos:end="67:38">/</operator> <name pos:start="67:40" pos:end="67:49">TIMER_BASE</name></expr>;</expr_stmt>



    <if_stmt pos:start="71:5" pos:end="165:5"><if pos:start="71:5" pos:end="165:5">if <condition pos:start="71:8" pos:end="71:40">(<expr pos:start="71:9" pos:end="71:39"><name pos:start="71:9" pos:end="71:10">id</name> <operator pos:start="71:12" pos:end="71:13">&gt;=</operator> <literal type="number" pos:start="71:15" pos:end="71:15">0</literal> <operator pos:start="71:17" pos:end="71:18">&amp;&amp;</operator> <name pos:start="71:20" pos:end="71:21">id</name> <operator pos:start="71:23" pos:end="71:23">&lt;</operator> <name pos:start="71:25" pos:end="71:39"><name pos:start="71:25" pos:end="71:28">unit</name><operator pos:start="71:29" pos:end="71:30">-&gt;</operator><name pos:start="71:31" pos:end="71:39">nr_timers</name></name></expr>)</condition> <block pos:start="71:42" pos:end="165:5">{<block_content pos:start="77:9" pos:end="161:9">



        <comment type="block" pos:start="75:9" pos:end="75:31">/* GPTimer registers */</comment>

        <switch pos:start="77:9" pos:end="161:9">switch <condition pos:start="77:16" pos:end="77:27">(<expr pos:start="77:17" pos:end="77:26"><name pos:start="77:17" pos:end="77:26">timer_addr</name></expr>)</condition> <block pos:start="77:29" pos:end="161:9">{<block_content pos:start="79:9" pos:end="159:18">

        <case pos:start="79:9" pos:end="79:28">case <expr pos:start="79:14" pos:end="79:27"><name pos:start="79:14" pos:end="79:27">COUNTER_OFFSET</name></expr>:</case>

            <expr_stmt pos:start="81:13" pos:end="81:62"><expr pos:start="81:13" pos:end="81:61"><call pos:start="81:13" pos:end="81:61"><name pos:start="81:13" pos:end="81:38">trace_grlib_gptimer_writel</name><argument_list pos:start="81:39" pos:end="81:61">(<argument pos:start="81:40" pos:end="81:41"><expr pos:start="81:40" pos:end="81:41"><name pos:start="81:40" pos:end="81:41">id</name></expr></argument>, <argument pos:start="81:44" pos:end="81:53"><expr pos:start="81:44" pos:end="81:53"><literal type="string" pos:start="81:44" pos:end="81:53">"counter:"</literal></expr></argument>, <argument pos:start="81:56" pos:end="81:60"><expr pos:start="81:56" pos:end="81:60"><name pos:start="81:56" pos:end="81:60">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:45"><expr pos:start="83:13" pos:end="83:44"><name pos:start="83:13" pos:end="83:28"><name pos:start="83:13" pos:end="83:16">unit</name><operator pos:start="83:17" pos:end="83:18">-&gt;</operator><name pos:start="83:19" pos:end="83:24">timers</name><index pos:start="83:25" pos:end="83:28">[<expr pos:start="83:26" pos:end="83:27"><name pos:start="83:26" pos:end="83:27">id</name></expr>]</index></name><operator pos:start="83:29" pos:end="83:29">.</operator><name pos:start="83:30" pos:end="83:36">counter</name> <operator pos:start="83:38" pos:end="83:38">=</operator> <name pos:start="83:40" pos:end="83:44">value</name></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:52"><expr pos:start="85:13" pos:end="85:51"><call pos:start="85:13" pos:end="85:51"><name pos:start="85:13" pos:end="85:32">grlib_gptimer_enable</name><argument_list pos:start="85:33" pos:end="85:51">(<argument pos:start="85:34" pos:end="85:50"><expr pos:start="85:34" pos:end="85:50"><operator pos:start="85:34" pos:end="85:34">&amp;</operator><name pos:start="85:35" pos:end="85:50"><name pos:start="85:35" pos:end="85:38">unit</name><operator pos:start="85:39" pos:end="85:40">-&gt;</operator><name pos:start="85:41" pos:end="85:46">timers</name><index pos:start="85:47" pos:end="85:50">[<expr pos:start="85:48" pos:end="85:49"><name pos:start="85:48" pos:end="85:49">id</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="87:13" pos:end="87:19">return;</return>



        <case pos:start="91:9" pos:end="91:35">case <expr pos:start="91:14" pos:end="91:34"><name pos:start="91:14" pos:end="91:34">COUNTER_RELOAD_OFFSET</name></expr>:</case>

            <expr_stmt pos:start="93:13" pos:end="93:61"><expr pos:start="93:13" pos:end="93:60"><call pos:start="93:13" pos:end="93:60"><name pos:start="93:13" pos:end="93:38">trace_grlib_gptimer_writel</name><argument_list pos:start="93:39" pos:end="93:60">(<argument pos:start="93:40" pos:end="93:41"><expr pos:start="93:40" pos:end="93:41"><name pos:start="93:40" pos:end="93:41">id</name></expr></argument>, <argument pos:start="93:44" pos:end="93:52"><expr pos:start="93:44" pos:end="93:52"><literal type="string" pos:start="93:44" pos:end="93:52">"reload:"</literal></expr></argument>, <argument pos:start="93:55" pos:end="93:59"><expr pos:start="93:55" pos:end="93:59"><name pos:start="93:55" pos:end="93:59">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:44"><expr pos:start="95:13" pos:end="95:43"><name pos:start="95:13" pos:end="95:28"><name pos:start="95:13" pos:end="95:16">unit</name><operator pos:start="95:17" pos:end="95:18">-&gt;</operator><name pos:start="95:19" pos:end="95:24">timers</name><index pos:start="95:25" pos:end="95:28">[<expr pos:start="95:26" pos:end="95:27"><name pos:start="95:26" pos:end="95:27">id</name></expr>]</index></name><operator pos:start="95:29" pos:end="95:29">.</operator><name pos:start="95:30" pos:end="95:35">reload</name> <operator pos:start="95:37" pos:end="95:37">=</operator> <name pos:start="95:39" pos:end="95:43">value</name></expr>;</expr_stmt>

            <return pos:start="97:13" pos:end="97:19">return;</return>



        <case pos:start="101:9" pos:end="101:27">case <expr pos:start="101:14" pos:end="101:26"><name pos:start="101:14" pos:end="101:26">CONFIG_OFFSET</name></expr>:</case>

            <expr_stmt pos:start="103:13" pos:end="103:61"><expr pos:start="103:13" pos:end="103:60"><call pos:start="103:13" pos:end="103:60"><name pos:start="103:13" pos:end="103:38">trace_grlib_gptimer_writel</name><argument_list pos:start="103:39" pos:end="103:60">(<argument pos:start="103:40" pos:end="103:41"><expr pos:start="103:40" pos:end="103:41"><name pos:start="103:40" pos:end="103:41">id</name></expr></argument>, <argument pos:start="103:44" pos:end="103:52"><expr pos:start="103:44" pos:end="103:52"><literal type="string" pos:start="103:44" pos:end="103:52">"config:"</literal></expr></argument>, <argument pos:start="103:55" pos:end="103:59"><expr pos:start="103:55" pos:end="103:59"><name pos:start="103:55" pos:end="103:59">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="107:13" pos:end="119:13"><if pos:start="107:13" pos:end="113:13">if <condition pos:start="107:16" pos:end="107:44">(<expr pos:start="107:17" pos:end="107:43"><name pos:start="107:17" pos:end="107:21">value</name> <operator pos:start="107:23" pos:end="107:23">&amp;</operator> <name pos:start="107:25" pos:end="107:43">GPTIMER_INT_PENDING</name></expr>)</condition> <block pos:start="107:46" pos:end="113:13">{<block_content pos:start="111:17" pos:end="111:46">

                <comment type="block" pos:start="109:17" pos:end="109:39">/* clear pending bit */</comment>

                <expr_stmt pos:start="111:17" pos:end="111:46"><expr pos:start="111:17" pos:end="111:45"><name pos:start="111:17" pos:end="111:21">value</name> <operator pos:start="111:23" pos:end="111:24">&amp;=</operator> <operator pos:start="111:26" pos:end="111:26">~</operator><name pos:start="111:27" pos:end="111:45">GPTIMER_INT_PENDING</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="113:15" pos:end="119:13">else <block pos:start="113:20" pos:end="119:13">{<block_content pos:start="117:17" pos:end="117:71">

                <comment type="block" pos:start="115:17" pos:end="115:38">/* keep pending bit */</comment>

                <expr_stmt pos:start="117:17" pos:end="117:71"><expr pos:start="117:17" pos:end="117:70"><name pos:start="117:17" pos:end="117:21">value</name> <operator pos:start="117:23" pos:end="117:24">|=</operator> <name pos:start="117:26" pos:end="117:41"><name pos:start="117:26" pos:end="117:29">unit</name><operator pos:start="117:30" pos:end="117:31">-&gt;</operator><name pos:start="117:32" pos:end="117:37">timers</name><index pos:start="117:38" pos:end="117:41">[<expr pos:start="117:39" pos:end="117:40"><name pos:start="117:39" pos:end="117:40">id</name></expr>]</index></name><operator pos:start="117:42" pos:end="117:42">.</operator><name pos:start="117:43" pos:end="117:48">config</name> <operator pos:start="117:50" pos:end="117:50">&amp;</operator> <name pos:start="117:52" pos:end="117:70">GPTIMER_INT_PENDING</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <expr_stmt pos:start="123:13" pos:end="123:44"><expr pos:start="123:13" pos:end="123:43"><name pos:start="123:13" pos:end="123:28"><name pos:start="123:13" pos:end="123:16">unit</name><operator pos:start="123:17" pos:end="123:18">-&gt;</operator><name pos:start="123:19" pos:end="123:24">timers</name><index pos:start="123:25" pos:end="123:28">[<expr pos:start="123:26" pos:end="123:27"><name pos:start="123:26" pos:end="123:27">id</name></expr>]</index></name><operator pos:start="123:29" pos:end="123:29">.</operator><name pos:start="123:30" pos:end="123:35">config</name> <operator pos:start="123:37" pos:end="123:37">=</operator> <name pos:start="123:39" pos:end="123:43">value</name></expr>;</expr_stmt>



            <comment type="block" pos:start="127:13" pos:end="129:65">/* gptimer_restart calls gptimer_enable, so if "enable" and "load"

               bits are present, we just have to call restart. */</comment>



            <if_stmt pos:start="133:13" pos:end="141:13"><if pos:start="133:13" pos:end="137:13">if <condition pos:start="133:16" pos:end="133:37">(<expr pos:start="133:17" pos:end="133:36"><name pos:start="133:17" pos:end="133:21">value</name> <operator pos:start="133:23" pos:end="133:23">&amp;</operator> <name pos:start="133:25" pos:end="133:36">GPTIMER_LOAD</name></expr>)</condition> <block pos:start="133:39" pos:end="137:13">{<block_content pos:start="135:17" pos:end="135:57">

                <expr_stmt pos:start="135:17" pos:end="135:57"><expr pos:start="135:17" pos:end="135:56"><call pos:start="135:17" pos:end="135:56"><name pos:start="135:17" pos:end="135:37">grlib_gptimer_restart</name><argument_list pos:start="135:38" pos:end="135:56">(<argument pos:start="135:39" pos:end="135:55"><expr pos:start="135:39" pos:end="135:55"><operator pos:start="135:39" pos:end="135:39">&amp;</operator><name pos:start="135:40" pos:end="135:55"><name pos:start="135:40" pos:end="135:43">unit</name><operator pos:start="135:44" pos:end="135:45">-&gt;</operator><name pos:start="135:46" pos:end="135:51">timers</name><index pos:start="135:52" pos:end="135:55">[<expr pos:start="135:53" pos:end="135:54"><name pos:start="135:53" pos:end="135:54">id</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="137:15" pos:end="141:13">else if <condition pos:start="137:23" pos:end="137:46">(<expr pos:start="137:24" pos:end="137:45"><name pos:start="137:24" pos:end="137:28">value</name> <operator pos:start="137:30" pos:end="137:30">&amp;</operator> <name pos:start="137:32" pos:end="137:45">GPTIMER_ENABLE</name></expr>)</condition> <block pos:start="137:48" pos:end="141:13">{<block_content pos:start="139:17" pos:end="139:56">

                <expr_stmt pos:start="139:17" pos:end="139:56"><expr pos:start="139:17" pos:end="139:55"><call pos:start="139:17" pos:end="139:55"><name pos:start="139:17" pos:end="139:36">grlib_gptimer_enable</name><argument_list pos:start="139:37" pos:end="139:55">(<argument pos:start="139:38" pos:end="139:54"><expr pos:start="139:38" pos:end="139:54"><operator pos:start="139:38" pos:end="139:38">&amp;</operator><name pos:start="139:39" pos:end="139:54"><name pos:start="139:39" pos:end="139:42">unit</name><operator pos:start="139:43" pos:end="139:44">-&gt;</operator><name pos:start="139:45" pos:end="139:50">timers</name><index pos:start="139:51" pos:end="139:54">[<expr pos:start="139:52" pos:end="139:53"><name pos:start="139:52" pos:end="139:53">id</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="145:13" pos:end="145:55">/* These fields must always be read as 0 */</comment>

            <expr_stmt pos:start="147:13" pos:end="147:58"><expr pos:start="147:13" pos:end="147:57"><name pos:start="147:13" pos:end="147:17">value</name> <operator pos:start="147:19" pos:end="147:20">&amp;=</operator> <operator pos:start="147:22" pos:end="147:22">~</operator><operator pos:start="147:23" pos:end="147:23">(</operator><name pos:start="147:24" pos:end="147:35">GPTIMER_LOAD</name> <operator pos:start="147:37" pos:end="147:37">&amp;</operator> <name pos:start="147:39" pos:end="147:56">GPTIMER_DEBUG_HALT</name><operator pos:start="147:57" pos:end="147:57">)</operator></expr>;</expr_stmt>



            <expr_stmt pos:start="151:13" pos:end="151:44"><expr pos:start="151:13" pos:end="151:43"><name pos:start="151:13" pos:end="151:28"><name pos:start="151:13" pos:end="151:16">unit</name><operator pos:start="151:17" pos:end="151:18">-&gt;</operator><name pos:start="151:19" pos:end="151:24">timers</name><index pos:start="151:25" pos:end="151:28">[<expr pos:start="151:26" pos:end="151:27"><name pos:start="151:26" pos:end="151:27">id</name></expr>]</index></name><operator pos:start="151:29" pos:end="151:29">.</operator><name pos:start="151:30" pos:end="151:35">config</name> <operator pos:start="151:37" pos:end="151:37">=</operator> <name pos:start="151:39" pos:end="151:43">value</name></expr>;</expr_stmt>

            <return pos:start="153:13" pos:end="153:19">return;</return>



        <default pos:start="157:9" pos:end="157:16">default:</default>

            <break pos:start="159:13" pos:end="159:18">break;</break>

        </block_content>}</block></switch>



    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="169:5" pos:end="169:56"><expr pos:start="169:5" pos:end="169:55"><call pos:start="169:5" pos:end="169:55"><name pos:start="169:5" pos:end="169:40">trace_grlib_gptimer_unknown_register</name><argument_list pos:start="169:41" pos:end="169:55">(<argument pos:start="169:42" pos:end="169:48"><expr pos:start="169:42" pos:end="169:48"><literal type="string" pos:start="169:42" pos:end="169:48">"write"</literal></expr></argument>, <argument pos:start="169:51" pos:end="169:54"><expr pos:start="169:51" pos:end="169:54"><name pos:start="169:51" pos:end="169:54">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block>
</unit>
