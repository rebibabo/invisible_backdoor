<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13658.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:31">validate_seg</name><parameter_list pos:start="1:32" pos:end="1:53">(<parameter pos:start="1:33" pos:end="1:43"><decl pos:start="1:33" pos:end="1:43"><type pos:start="1:33" pos:end="1:43"><name pos:start="1:33" pos:end="1:35">int</name></type> <name pos:start="1:37" pos:end="1:43">seg_reg</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:52"><decl pos:start="1:46" pos:end="1:52"><type pos:start="1:46" pos:end="1:52"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:52">cpl</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="27:1">{<block_content pos:start="5:5" pos:end="25:5">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">dpl</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:15">e2</name></decl>;</decl_stmt>

    

    <expr_stmt pos:start="11:5" pos:end="11:34"><expr pos:start="11:5" pos:end="11:33"><name pos:start="11:5" pos:end="11:6">e2</name> <operator pos:start="11:8" pos:end="11:8">=</operator> <name pos:start="11:10" pos:end="11:27"><name pos:start="11:10" pos:end="11:12">env</name><operator pos:start="11:13" pos:end="11:14">-&gt;</operator><name pos:start="11:15" pos:end="11:18">segs</name><index pos:start="11:19" pos:end="11:27">[<expr pos:start="11:20" pos:end="11:26"><name pos:start="11:20" pos:end="11:26">seg_reg</name></expr>]</index></name><operator pos:start="11:28" pos:end="11:28">.</operator><name pos:start="11:29" pos:end="11:33">flags</name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:37"><expr pos:start="13:5" pos:end="13:36"><name pos:start="13:5" pos:end="13:7">dpl</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <operator pos:start="13:11" pos:end="13:11">(</operator><name pos:start="13:12" pos:end="13:13">e2</name> <operator pos:start="13:15" pos:end="13:16">&gt;&gt;</operator> <name pos:start="13:18" pos:end="13:31">DESC_DPL_SHIFT</name><operator pos:start="13:32" pos:end="13:32">)</operator> <operator pos:start="13:34" pos:end="13:34">&amp;</operator> <literal type="number" pos:start="13:36" pos:end="13:36">3</literal></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="25:5"><if pos:start="15:5" pos:end="25:5">if <condition pos:start="15:8" pos:end="15:52">(<expr pos:start="15:9" pos:end="15:51"><operator pos:start="15:9" pos:end="15:9">!</operator><operator pos:start="15:10" pos:end="15:10">(</operator><name pos:start="15:11" pos:end="15:12">e2</name> <operator pos:start="15:14" pos:end="15:14">&amp;</operator> <name pos:start="15:16" pos:end="15:27">DESC_CS_MASK</name><operator pos:start="15:28" pos:end="15:28">)</operator> <operator pos:start="15:30" pos:end="15:31">||</operator> <operator pos:start="15:33" pos:end="15:33">!</operator><operator pos:start="15:34" pos:end="15:34">(</operator><name pos:start="15:35" pos:end="15:36">e2</name> <operator pos:start="15:38" pos:end="15:38">&amp;</operator> <name pos:start="15:40" pos:end="15:50">DESC_C_MASK</name><operator pos:start="15:51" pos:end="15:51">)</operator></expr>)</condition> <block pos:start="15:54" pos:end="25:5">{<block_content pos:start="19:9" pos:end="23:9">

        <comment type="block" pos:start="17:9" pos:end="17:49">/* data or non conforming code segment */</comment>

        <if_stmt pos:start="19:9" pos:end="23:9"><if pos:start="19:9" pos:end="23:9">if <condition pos:start="19:12" pos:end="19:22">(<expr pos:start="19:13" pos:end="19:21"><name pos:start="19:13" pos:end="19:15">dpl</name> <operator pos:start="19:17" pos:end="19:17">&lt;</operator> <name pos:start="19:19" pos:end="19:21">cpl</name></expr>)</condition> <block pos:start="19:24" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:61">

            <expr_stmt pos:start="21:13" pos:end="21:61"><expr pos:start="21:13" pos:end="21:60"><call pos:start="21:13" pos:end="21:60"><name pos:start="21:13" pos:end="21:34">cpu_x86_load_seg_cache</name><argument_list pos:start="21:35" pos:end="21:60">(<argument pos:start="21:36" pos:end="21:38"><expr pos:start="21:36" pos:end="21:38"><name pos:start="21:36" pos:end="21:38">env</name></expr></argument>, <argument pos:start="21:41" pos:end="21:47"><expr pos:start="21:41" pos:end="21:47"><name pos:start="21:41" pos:end="21:47">seg_reg</name></expr></argument>, <argument pos:start="21:50" pos:end="21:50"><expr pos:start="21:50" pos:end="21:50"><literal type="number" pos:start="21:50" pos:end="21:50">0</literal></expr></argument>, <argument pos:start="21:53" pos:end="21:53"><expr pos:start="21:53" pos:end="21:53"><literal type="number" pos:start="21:53" pos:end="21:53">0</literal></expr></argument>, <argument pos:start="21:56" pos:end="21:56"><expr pos:start="21:56" pos:end="21:56"><literal type="number" pos:start="21:56" pos:end="21:56">0</literal></expr></argument>, <argument pos:start="21:59" pos:end="21:59"><expr pos:start="21:59" pos:end="21:59"><literal type="number" pos:start="21:59" pos:end="21:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
