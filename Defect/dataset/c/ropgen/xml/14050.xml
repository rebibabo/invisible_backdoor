<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14050.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:19">ftp_read</name><parameter_list pos:start="1:20" pos:end="1:64">(<parameter pos:start="1:21" pos:end="1:33"><decl pos:start="1:21" pos:end="1:33"><type pos:start="1:21" pos:end="1:33"><name pos:start="1:21" pos:end="1:30">URLContext</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:33">h</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:53"><decl pos:start="1:36" pos:end="1:53"><type pos:start="1:36" pos:end="1:53"><name pos:start="1:36" pos:end="1:43">unsigned</name> <name pos:start="1:45" pos:end="1:48">char</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:53">buf</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:63"><decl pos:start="1:56" pos:end="1:63"><type pos:start="1:56" pos:end="1:63"><name pos:start="1:56" pos:end="1:58">int</name></type> <name pos:start="1:60" pos:end="1:63">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="111:1">{<block_content pos:start="5:5" pos:end="109:24">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">FTPContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">s</name> <init pos:start="5:19" pos:end="5:32">= <expr pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:21">h</name><operator pos:start="5:22" pos:end="5:23">-&gt;</operator><name pos:start="5:24" pos:end="5:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">read</name></decl>, <decl pos:start="7:15" pos:end="7:17"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:17">err</name></decl>, <decl pos:start="7:20" pos:end="7:33"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:20" pos:end="7:29">retry_done</name> <init pos:start="7:31" pos:end="7:33">= <expr pos:start="7:33" pos:end="7:33"><literal type="number" pos:start="7:33" pos:end="7:33">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:53"><expr pos:start="11:5" pos:end="11:52"><call pos:start="11:5" pos:end="11:52"><name pos:start="11:5" pos:end="11:11">av_dlog</name><argument_list pos:start="11:12" pos:end="11:52">(<argument pos:start="11:13" pos:end="11:13"><expr pos:start="11:13" pos:end="11:13"><name pos:start="11:13" pos:end="11:13">h</name></expr></argument>, <argument pos:start="11:16" pos:end="11:45"><expr pos:start="11:16" pos:end="11:45"><literal type="string" pos:start="11:16" pos:end="11:45">"ftp protocol read %d bytes\n"</literal></expr></argument>, <argument pos:start="11:48" pos:end="11:51"><expr pos:start="11:48" pos:end="11:51"><name pos:start="11:48" pos:end="11:51">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <label pos:start="13:3" pos:end="13:8"><name pos:start="13:3" pos:end="13:7">retry</name>:</label>

    <if_stmt pos:start="15:5" pos:end="27:5"><if pos:start="15:5" pos:end="27:5">if <condition pos:start="15:8" pos:end="15:33">(<expr pos:start="15:9" pos:end="15:32"><name pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:16">state</name></name> <operator pos:start="15:18" pos:end="15:19">==</operator> <name pos:start="15:21" pos:end="15:32">DISCONNECTED</name></expr>)</condition> <block pos:start="15:35" pos:end="27:5">{<block_content pos:start="19:9" pos:end="25:23">

        <comment type="block" pos:start="17:9" pos:end="17:26">/* optimization */</comment>

        <if_stmt pos:start="19:9" pos:end="21:21"><if pos:start="19:9" pos:end="21:21">if <condition pos:start="19:12" pos:end="19:39">(<expr pos:start="19:13" pos:end="19:38"><name pos:start="19:13" pos:end="19:23"><name pos:start="19:13" pos:end="19:13">s</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:23">position</name></name> <operator pos:start="19:25" pos:end="19:26">&gt;=</operator> <name pos:start="19:28" pos:end="19:38"><name pos:start="19:28" pos:end="19:28">s</name><operator pos:start="19:29" pos:end="19:30">-&gt;</operator><name pos:start="19:31" pos:end="19:38">filesize</name></name></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:21"><block_content pos:start="21:13" pos:end="21:21">

            <return pos:start="21:13" pos:end="21:21">return <expr pos:start="21:20" pos:end="21:20"><literal type="number" pos:start="21:20" pos:end="21:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="23:9" pos:end="25:23"><if pos:start="23:9" pos:end="25:23">if <condition pos:start="23:12" pos:end="23:55">(<expr pos:start="23:13" pos:end="23:54"><operator pos:start="23:13" pos:end="23:13">(</operator><name pos:start="23:14" pos:end="23:16">err</name> <operator pos:start="23:18" pos:end="23:18">=</operator> <call pos:start="23:20" pos:end="23:49"><name pos:start="23:20" pos:end="23:46">ftp_connect_data_connection</name><argument_list pos:start="23:47" pos:end="23:49">(<argument pos:start="23:48" pos:end="23:48"><expr pos:start="23:48" pos:end="23:48"><name pos:start="23:48" pos:end="23:48">h</name></expr></argument>)</argument_list></call><operator pos:start="23:50" pos:end="23:50">)</operator> <operator pos:start="23:52" pos:end="23:52">&lt;</operator> <literal type="number" pos:start="23:54" pos:end="23:54">0</literal></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:23"><block_content pos:start="25:13" pos:end="25:23">

            <return pos:start="25:13" pos:end="25:23">return <expr pos:start="25:20" pos:end="25:22"><name pos:start="25:20" pos:end="25:22">err</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="29:5" pos:end="39:5"><if pos:start="29:5" pos:end="39:5">if <condition pos:start="29:8" pos:end="29:26">(<expr pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:16"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:16">state</name></name> <operator pos:start="29:18" pos:end="29:19">==</operator> <name pos:start="29:21" pos:end="29:25">READY</name></expr>)</condition> <block pos:start="29:28" pos:end="39:5">{<block_content pos:start="31:9" pos:end="37:23">

        <if_stmt pos:start="31:9" pos:end="33:21"><if pos:start="31:9" pos:end="33:21">if <condition pos:start="31:12" pos:end="31:39">(<expr pos:start="31:13" pos:end="31:38"><name pos:start="31:13" pos:end="31:23"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:23">position</name></name> <operator pos:start="31:25" pos:end="31:26">&gt;=</operator> <name pos:start="31:28" pos:end="31:38"><name pos:start="31:28" pos:end="31:28">s</name><operator pos:start="31:29" pos:end="31:30">-&gt;</operator><name pos:start="31:31" pos:end="31:38">filesize</name></name></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:21"><block_content pos:start="33:13" pos:end="33:21">

            <return pos:start="33:13" pos:end="33:21">return <expr pos:start="33:20" pos:end="33:20"><literal type="number" pos:start="33:20" pos:end="33:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="35:9" pos:end="37:23"><if pos:start="35:9" pos:end="37:23">if <condition pos:start="35:12" pos:end="35:40">(<expr pos:start="35:13" pos:end="35:39"><operator pos:start="35:13" pos:end="35:13">(</operator><name pos:start="35:14" pos:end="35:16">err</name> <operator pos:start="35:18" pos:end="35:18">=</operator> <call pos:start="35:20" pos:end="35:34"><name pos:start="35:20" pos:end="35:31">ftp_retrieve</name><argument_list pos:start="35:32" pos:end="35:34">(<argument pos:start="35:33" pos:end="35:33"><expr pos:start="35:33" pos:end="35:33"><name pos:start="35:33" pos:end="35:33">s</name></expr></argument>)</argument_list></call><operator pos:start="35:35" pos:end="35:35">)</operator> <operator pos:start="35:37" pos:end="35:37">&lt;</operator> <literal type="number" pos:start="35:39" pos:end="35:39">0</literal></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:23"><block_content pos:start="37:13" pos:end="37:23">

            <return pos:start="37:13" pos:end="37:23">return <expr pos:start="37:20" pos:end="37:22"><name pos:start="37:20" pos:end="37:22">err</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="41:5" pos:end="103:5"><if pos:start="41:5" pos:end="103:5">if <condition pos:start="41:8" pos:end="41:48">(<expr pos:start="41:9" pos:end="41:47"><name pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:20">conn_data</name></name> <operator pos:start="41:22" pos:end="41:23">&amp;&amp;</operator> <name pos:start="41:25" pos:end="41:32"><name pos:start="41:25" pos:end="41:25">s</name><operator pos:start="41:26" pos:end="41:27">-&gt;</operator><name pos:start="41:28" pos:end="41:32">state</name></name> <operator pos:start="41:34" pos:end="41:35">==</operator> <name pos:start="41:37" pos:end="41:47">DOWNLOADING</name></expr>)</condition> <block pos:start="41:50" pos:end="103:5">{<block_content pos:start="43:9" pos:end="101:20">

        <expr_stmt pos:start="43:9" pos:end="43:51"><expr pos:start="43:9" pos:end="43:50"><name pos:start="43:9" pos:end="43:12">read</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <call pos:start="43:16" pos:end="43:50"><name pos:start="43:16" pos:end="43:25">ffurl_read</name><argument_list pos:start="43:26" pos:end="43:50">(<argument pos:start="43:27" pos:end="43:38"><expr pos:start="43:27" pos:end="43:38"><name pos:start="43:27" pos:end="43:38"><name pos:start="43:27" pos:end="43:27">s</name><operator pos:start="43:28" pos:end="43:29">-&gt;</operator><name pos:start="43:30" pos:end="43:38">conn_data</name></name></expr></argument>, <argument pos:start="43:41" pos:end="43:43"><expr pos:start="43:41" pos:end="43:43"><name pos:start="43:41" pos:end="43:43">buf</name></expr></argument>, <argument pos:start="43:46" pos:end="43:49"><expr pos:start="43:46" pos:end="43:49"><name pos:start="43:46" pos:end="43:49">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="69:9"><if pos:start="45:9" pos:end="69:9">if <condition pos:start="45:12" pos:end="45:22">(<expr pos:start="45:13" pos:end="45:21"><name pos:start="45:13" pos:end="45:16">read</name> <operator pos:start="45:18" pos:end="45:19">&gt;=</operator> <literal type="number" pos:start="45:21" pos:end="45:21">0</literal></expr>)</condition> <block pos:start="45:24" pos:end="69:9">{<block_content pos:start="47:13" pos:end="67:13">

            <expr_stmt pos:start="47:13" pos:end="47:32"><expr pos:start="47:13" pos:end="47:31"><name pos:start="47:13" pos:end="47:23"><name pos:start="47:13" pos:end="47:13">s</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:23">position</name></name> <operator pos:start="47:25" pos:end="47:26">+=</operator> <name pos:start="47:28" pos:end="47:31">read</name></expr>;</expr_stmt>

            <if_stmt pos:start="49:13" pos:end="67:13"><if pos:start="49:13" pos:end="67:13">if <condition pos:start="49:16" pos:end="49:43">(<expr pos:start="49:17" pos:end="49:42"><name pos:start="49:17" pos:end="49:27"><name pos:start="49:17" pos:end="49:17">s</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:27">position</name></name> <operator pos:start="49:29" pos:end="49:30">&gt;=</operator> <name pos:start="49:32" pos:end="49:42"><name pos:start="49:32" pos:end="49:32">s</name><operator pos:start="49:33" pos:end="49:34">-&gt;</operator><name pos:start="49:35" pos:end="49:42">filesize</name></name></expr>)</condition> <block pos:start="49:45" pos:end="67:13">{<block_content pos:start="55:17" pos:end="65:34">

                <comment type="block" pos:start="51:17" pos:end="51:87">/* server will terminate, but keep current position to avoid madness */</comment>

                <comment type="block" pos:start="53:17" pos:end="53:54">/* save position to restart from it */</comment>

                <decl_stmt pos:start="55:17" pos:end="55:42"><decl pos:start="55:17" pos:end="55:41"><type pos:start="55:17" pos:end="55:23"><name pos:start="55:17" pos:end="55:23">int64_t</name></type> <name pos:start="55:25" pos:end="55:27">pos</name> <init pos:start="55:29" pos:end="55:41">= <expr pos:start="55:31" pos:end="55:41"><name pos:start="55:31" pos:end="55:41"><name pos:start="55:31" pos:end="55:31">s</name><operator pos:start="55:32" pos:end="55:33">-&gt;</operator><name pos:start="55:34" pos:end="55:41">position</name></name></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="57:17" pos:end="63:17"><if pos:start="57:17" pos:end="63:17">if <condition pos:start="57:20" pos:end="57:37">(<expr pos:start="57:21" pos:end="57:36"><call pos:start="57:21" pos:end="57:32"><name pos:start="57:21" pos:end="57:29">ftp_abort</name><argument_list pos:start="57:30" pos:end="57:32">(<argument pos:start="57:31" pos:end="57:31"><expr pos:start="57:31" pos:end="57:31"><name pos:start="57:31" pos:end="57:31">h</name></expr></argument>)</argument_list></call> <operator pos:start="57:34" pos:end="57:34">&lt;</operator> <literal type="number" pos:start="57:36" pos:end="57:36">0</literal></expr>)</condition> <block pos:start="57:39" pos:end="63:17">{<block_content pos:start="59:21" pos:end="61:40">

                    <expr_stmt pos:start="59:21" pos:end="59:38"><expr pos:start="59:21" pos:end="59:37"><name pos:start="59:21" pos:end="59:31"><name pos:start="59:21" pos:end="59:21">s</name><operator pos:start="59:22" pos:end="59:23">-&gt;</operator><name pos:start="59:24" pos:end="59:31">position</name></name> <operator pos:start="59:33" pos:end="59:33">=</operator> <name pos:start="59:35" pos:end="59:37">pos</name></expr>;</expr_stmt>

                    <return pos:start="61:21" pos:end="61:40">return <expr pos:start="61:28" pos:end="61:39"><call pos:start="61:28" pos:end="61:39"><name pos:start="61:28" pos:end="61:34">AVERROR</name><argument_list pos:start="61:35" pos:end="61:39">(<argument pos:start="61:36" pos:end="61:38"><expr pos:start="61:36" pos:end="61:38"><name pos:start="61:36" pos:end="61:38">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="65:17" pos:end="65:34"><expr pos:start="65:17" pos:end="65:33"><name pos:start="65:17" pos:end="65:27"><name pos:start="65:17" pos:end="65:17">s</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:27">position</name></name> <operator pos:start="65:29" pos:end="65:29">=</operator> <name pos:start="65:31" pos:end="65:33">pos</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="71:9" pos:end="99:9"><if pos:start="71:9" pos:end="99:9">if <condition pos:start="71:12" pos:end="71:70">(<expr pos:start="71:13" pos:end="71:69"><name pos:start="71:13" pos:end="71:16">read</name> <operator pos:start="71:18" pos:end="71:19">&lt;=</operator> <literal type="number" pos:start="71:21" pos:end="71:21">0</literal> <operator pos:start="71:23" pos:end="71:24">&amp;&amp;</operator> <name pos:start="71:26" pos:end="71:36"><name pos:start="71:26" pos:end="71:26">s</name><operator pos:start="71:27" pos:end="71:28">-&gt;</operator><name pos:start="71:29" pos:end="71:36">position</name></name> <operator pos:start="71:38" pos:end="71:38">&lt;</operator> <name pos:start="71:40" pos:end="71:50"><name pos:start="71:40" pos:end="71:40">s</name><operator pos:start="71:41" pos:end="71:42">-&gt;</operator><name pos:start="71:43" pos:end="71:50">filesize</name></name> <operator pos:start="71:52" pos:end="71:53">&amp;&amp;</operator> <operator pos:start="71:55" pos:end="71:55">!</operator><name pos:start="71:56" pos:end="71:69"><name pos:start="71:56" pos:end="71:56">h</name><operator pos:start="71:57" pos:end="71:58">-&gt;</operator><name pos:start="71:59" pos:end="71:69">is_streamed</name></name></expr>)</condition> <block pos:start="71:72" pos:end="99:9">{<block_content pos:start="75:13" pos:end="97:13">

            <comment type="block" pos:start="73:13" pos:end="73:70">/* Server closed connection. Probably due to inactivity */</comment>

            <decl_stmt pos:start="75:13" pos:end="75:38"><decl pos:start="75:13" pos:end="75:37"><type pos:start="75:13" pos:end="75:19"><name pos:start="75:13" pos:end="75:19">int64_t</name></type> <name pos:start="75:21" pos:end="75:23">pos</name> <init pos:start="75:25" pos:end="75:37">= <expr pos:start="75:27" pos:end="75:37"><name pos:start="75:27" pos:end="75:37"><name pos:start="75:27" pos:end="75:27">s</name><operator pos:start="75:28" pos:end="75:29">-&gt;</operator><name pos:start="75:30" pos:end="75:37">position</name></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:65"><expr pos:start="77:13" pos:end="77:64"><call pos:start="77:13" pos:end="77:64"><name pos:start="77:13" pos:end="77:18">av_log</name><argument_list pos:start="77:19" pos:end="77:64">(<argument pos:start="77:20" pos:end="77:20"><expr pos:start="77:20" pos:end="77:20"><name pos:start="77:20" pos:end="77:20">h</name></expr></argument>, <argument pos:start="77:23" pos:end="77:33"><expr pos:start="77:23" pos:end="77:33"><name pos:start="77:23" pos:end="77:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="77:36" pos:end="77:63"><expr pos:start="77:36" pos:end="77:63"><literal type="string" pos:start="77:36" pos:end="77:63">"Reconnect to FTP server.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="79:13" pos:end="81:27"><if pos:start="79:13" pos:end="81:27">if <condition pos:start="79:16" pos:end="79:41">(<expr pos:start="79:17" pos:end="79:40"><operator pos:start="79:17" pos:end="79:17">(</operator><name pos:start="79:18" pos:end="79:20">err</name> <operator pos:start="79:22" pos:end="79:22">=</operator> <call pos:start="79:24" pos:end="79:35"><name pos:start="79:24" pos:end="79:32">ftp_abort</name><argument_list pos:start="79:33" pos:end="79:35">(<argument pos:start="79:34" pos:end="79:34"><expr pos:start="79:34" pos:end="79:34"><name pos:start="79:34" pos:end="79:34">h</name></expr></argument>)</argument_list></call><operator pos:start="79:36" pos:end="79:36">)</operator> <operator pos:start="79:38" pos:end="79:38">&lt;</operator> <literal type="number" pos:start="79:40" pos:end="79:40">0</literal></expr>)</condition><block type="pseudo" pos:start="81:17" pos:end="81:27"><block_content pos:start="81:17" pos:end="81:27">

                <return pos:start="81:17" pos:end="81:27">return <expr pos:start="81:24" pos:end="81:26"><name pos:start="81:24" pos:end="81:26">err</name></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="83:13" pos:end="89:13"><if pos:start="83:13" pos:end="89:13">if <condition pos:start="83:16" pos:end="83:55">(<expr pos:start="83:17" pos:end="83:54"><operator pos:start="83:17" pos:end="83:17">(</operator><name pos:start="83:18" pos:end="83:20">err</name> <operator pos:start="83:22" pos:end="83:22">=</operator> <call pos:start="83:24" pos:end="83:49"><name pos:start="83:24" pos:end="83:31">ftp_seek</name><argument_list pos:start="83:32" pos:end="83:49">(<argument pos:start="83:33" pos:end="83:33"><expr pos:start="83:33" pos:end="83:33"><name pos:start="83:33" pos:end="83:33">h</name></expr></argument>, <argument pos:start="83:36" pos:end="83:38"><expr pos:start="83:36" pos:end="83:38"><name pos:start="83:36" pos:end="83:38">pos</name></expr></argument>, <argument pos:start="83:41" pos:end="83:48"><expr pos:start="83:41" pos:end="83:48"><name pos:start="83:41" pos:end="83:48">SEEK_SET</name></expr></argument>)</argument_list></call><operator pos:start="83:50" pos:end="83:50">)</operator> <operator pos:start="83:52" pos:end="83:52">&lt;</operator> <literal type="number" pos:start="83:54" pos:end="83:54">0</literal></expr>)</condition> <block pos:start="83:57" pos:end="89:13">{<block_content pos:start="85:17" pos:end="87:27">

                <expr_stmt pos:start="85:17" pos:end="85:74"><expr pos:start="85:17" pos:end="85:73"><call pos:start="85:17" pos:end="85:73"><name pos:start="85:17" pos:end="85:22">av_log</name><argument_list pos:start="85:23" pos:end="85:73">(<argument pos:start="85:24" pos:end="85:24"><expr pos:start="85:24" pos:end="85:24"><name pos:start="85:24" pos:end="85:24">h</name></expr></argument>, <argument pos:start="85:27" pos:end="85:38"><expr pos:start="85:27" pos:end="85:38"><name pos:start="85:27" pos:end="85:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="85:41" pos:end="85:72"><expr pos:start="85:41" pos:end="85:72"><literal type="string" pos:start="85:41" pos:end="85:72">"Position cannot be restored.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="87:17" pos:end="87:27">return <expr pos:start="87:24" pos:end="87:26"><name pos:start="87:24" pos:end="87:26">err</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="91:13" pos:end="97:13"><if pos:start="91:13" pos:end="97:13">if <condition pos:start="91:16" pos:end="91:28">(<expr pos:start="91:17" pos:end="91:27"><operator pos:start="91:17" pos:end="91:17">!</operator><name pos:start="91:18" pos:end="91:27">retry_done</name></expr>)</condition> <block pos:start="91:30" pos:end="97:13">{<block_content pos:start="93:17" pos:end="95:27">

                <expr_stmt pos:start="93:17" pos:end="93:31"><expr pos:start="93:17" pos:end="93:30"><name pos:start="93:17" pos:end="93:26">retry_done</name> <operator pos:start="93:28" pos:end="93:28">=</operator> <literal type="number" pos:start="93:30" pos:end="93:30">1</literal></expr>;</expr_stmt>

                <goto pos:start="95:17" pos:end="95:27">goto <name pos:start="95:22" pos:end="95:26">retry</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="101:9" pos:end="101:20">return <expr pos:start="101:16" pos:end="101:19"><name pos:start="101:16" pos:end="101:19">read</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="107:5" pos:end="107:49"><expr pos:start="107:5" pos:end="107:48"><call pos:start="107:5" pos:end="107:48"><name pos:start="107:5" pos:end="107:10">av_log</name><argument_list pos:start="107:11" pos:end="107:48">(<argument pos:start="107:12" pos:end="107:12"><expr pos:start="107:12" pos:end="107:12"><name pos:start="107:12" pos:end="107:12">h</name></expr></argument>, <argument pos:start="107:15" pos:end="107:26"><expr pos:start="107:15" pos:end="107:26"><name pos:start="107:15" pos:end="107:26">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="107:29" pos:end="107:47"><expr pos:start="107:29" pos:end="107:47"><literal type="string" pos:start="107:29" pos:end="107:47">"FTP read failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="109:5" pos:end="109:24">return <expr pos:start="109:12" pos:end="109:23"><call pos:start="109:12" pos:end="109:23"><name pos:start="109:12" pos:end="109:18">AVERROR</name><argument_list pos:start="109:19" pos:end="109:23">(<argument pos:start="109:20" pos:end="109:22"><expr pos:start="109:20" pos:end="109:22"><name pos:start="109:20" pos:end="109:22">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
