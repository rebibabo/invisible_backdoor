<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5047.c" pos:tabs="8"><function pos:start="1:1" pos:end="157:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:39">local_set_mapped_file_attrat</name><parameter_list pos:start="1:40" pos:end="3:54">(<parameter pos:start="1:41" pos:end="1:49"><decl pos:start="1:41" pos:end="1:49"><type pos:start="1:41" pos:end="1:49"><name pos:start="1:41" pos:end="1:43">int</name></type> <name pos:start="1:45" pos:end="1:49">dirfd</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:67"><decl pos:start="1:52" pos:end="1:67"><type pos:start="1:52" pos:end="1:67"><specifier pos:start="1:52" pos:end="1:56">const</specifier> <name pos:start="1:58" pos:end="1:61">char</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:67">name</name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:53"><decl pos:start="3:41" pos:end="3:53"><type pos:start="3:41" pos:end="3:53"><name pos:start="3:41" pos:end="3:46">FsCred</name> <modifier pos:start="3:48" pos:end="3:48">*</modifier></type><name pos:start="3:49" pos:end="3:53">credp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="157:1">{<block_content pos:start="7:5" pos:end="155:13">

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">FILE</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:12">fp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:22"><name pos:start="11:10" pos:end="11:12">buf</name><index pos:start="11:13" pos:end="11:22">[<expr pos:start="11:14" pos:end="11:21"><name pos:start="11:14" pos:end="11:21">ATTR_MAX</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:49"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">uid</name> <init pos:start="13:13" pos:end="13:16">= <expr pos:start="13:15" pos:end="13:16"><operator pos:start="13:15" pos:end="13:15">-</operator><literal type="number" pos:start="13:16" pos:end="13:16">1</literal></expr></init></decl>, <decl pos:start="13:19" pos:end="13:26"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:19" pos:end="13:21">gid</name> <init pos:start="13:23" pos:end="13:26">= <expr pos:start="13:25" pos:end="13:26"><operator pos:start="13:25" pos:end="13:25">-</operator><literal type="number" pos:start="13:26" pos:end="13:26">1</literal></expr></init></decl>, <decl pos:start="13:29" pos:end="13:37"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:29" pos:end="13:32">mode</name> <init pos:start="13:34" pos:end="13:37">= <expr pos:start="13:36" pos:end="13:37"><operator pos:start="13:36" pos:end="13:36">-</operator><literal type="number" pos:start="13:37" pos:end="13:37">1</literal></expr></init></decl>, <decl pos:start="13:40" pos:end="13:48"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:40" pos:end="13:43">rdev</name> <init pos:start="13:45" pos:end="13:48">= <expr pos:start="13:47" pos:end="13:48"><operator pos:start="13:47" pos:end="13:47">-</operator><literal type="number" pos:start="13:48" pos:end="13:48">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:17">map_dirfd</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:48"><expr pos:start="19:5" pos:end="19:47"><name pos:start="19:5" pos:end="19:7">ret</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:47"><name pos:start="19:11" pos:end="19:17">mkdirat</name><argument_list pos:start="19:18" pos:end="19:47">(<argument pos:start="19:19" pos:end="19:23"><expr pos:start="19:19" pos:end="19:23"><name pos:start="19:19" pos:end="19:23">dirfd</name></expr></argument>, <argument pos:start="19:26" pos:end="19:40"><expr pos:start="19:26" pos:end="19:40"><name pos:start="19:26" pos:end="19:40">VIRTFS_META_DIR</name></expr></argument>, <argument pos:start="19:43" pos:end="19:46"><expr pos:start="19:43" pos:end="19:46"><literal type="number" pos:start="19:43" pos:end="19:46">0700</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:35">(<expr pos:start="21:9" pos:end="21:34"><name pos:start="21:9" pos:end="21:11">ret</name> <operator pos:start="21:13" pos:end="21:13">&lt;</operator> <literal type="number" pos:start="21:15" pos:end="21:15">0</literal> <operator pos:start="21:17" pos:end="21:18">&amp;&amp;</operator> <name pos:start="21:20" pos:end="21:24">errno</name> <operator pos:start="21:26" pos:end="21:27">!=</operator> <name pos:start="21:29" pos:end="21:34">EEXIST</name></expr>)</condition> <block pos:start="21:37" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:18">

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:51"><expr pos:start="29:5" pos:end="29:50"><name pos:start="29:5" pos:end="29:13">map_dirfd</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <call pos:start="29:17" pos:end="29:50"><name pos:start="29:17" pos:end="29:26">openat_dir</name><argument_list pos:start="29:27" pos:end="29:50">(<argument pos:start="29:28" pos:end="29:32"><expr pos:start="29:28" pos:end="29:32"><name pos:start="29:28" pos:end="29:32">dirfd</name></expr></argument>, <argument pos:start="29:35" pos:end="29:49"><expr pos:start="29:35" pos:end="29:49"><name pos:start="29:35" pos:end="29:49">VIRTFS_META_DIR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:24">(<expr pos:start="31:9" pos:end="31:23"><name pos:start="31:9" pos:end="31:17">map_dirfd</name> <operator pos:start="31:19" pos:end="31:20">==</operator> <operator pos:start="31:22" pos:end="31:22">-</operator><literal type="number" pos:start="31:23" pos:end="31:23">1</literal></expr>)</condition> <block pos:start="31:26" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:18">

        <return pos:start="33:9" pos:end="33:18">return <expr pos:start="33:16" pos:end="33:17"><operator pos:start="33:16" pos:end="33:16">-</operator><literal type="number" pos:start="33:17" pos:end="33:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:45"><expr pos:start="39:5" pos:end="39:44"><name pos:start="39:5" pos:end="39:6">fp</name> <operator pos:start="39:8" pos:end="39:8">=</operator> <call pos:start="39:10" pos:end="39:44"><name pos:start="39:10" pos:end="39:22">local_fopenat</name><argument_list pos:start="39:23" pos:end="39:44">(<argument pos:start="39:24" pos:end="39:32"><expr pos:start="39:24" pos:end="39:32"><name pos:start="39:24" pos:end="39:32">map_dirfd</name></expr></argument>, <argument pos:start="39:35" pos:end="39:38"><expr pos:start="39:35" pos:end="39:38"><name pos:start="39:35" pos:end="39:38">name</name></expr></argument>, <argument pos:start="39:41" pos:end="39:43"><expr pos:start="39:41" pos:end="39:43"><literal type="string" pos:start="39:41" pos:end="39:43">"r"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="55:5"><if pos:start="41:5" pos:end="55:5">if <condition pos:start="41:8" pos:end="41:12">(<expr pos:start="41:9" pos:end="41:11"><operator pos:start="41:9" pos:end="41:9">!</operator><name pos:start="41:10" pos:end="41:11">fp</name></expr>)</condition> <block pos:start="41:14" pos:end="55:5">{<block_content pos:start="43:9" pos:end="53:9">

        <if_stmt pos:start="43:9" pos:end="53:9"><if pos:start="43:9" pos:end="47:9">if <condition pos:start="43:12" pos:end="43:28">(<expr pos:start="43:13" pos:end="43:27"><name pos:start="43:13" pos:end="43:17">errno</name> <operator pos:start="43:19" pos:end="43:20">==</operator> <name pos:start="43:22" pos:end="43:27">ENOENT</name></expr>)</condition> <block pos:start="43:30" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:33">

            <goto pos:start="45:13" pos:end="45:33">goto <name pos:start="45:18" pos:end="45:32">update_map_file</name>;</goto>

        </block_content>}</block></if> <else pos:start="47:11" pos:end="53:9">else <block pos:start="47:16" pos:end="53:9">{<block_content pos:start="49:13" pos:end="51:22">

            <expr_stmt pos:start="49:13" pos:end="49:44"><expr pos:start="49:13" pos:end="49:43"><call pos:start="49:13" pos:end="49:43"><name pos:start="49:13" pos:end="49:32">close_preserve_errno</name><argument_list pos:start="49:33" pos:end="49:43">(<argument pos:start="49:34" pos:end="49:42"><expr pos:start="49:34" pos:end="49:42"><name pos:start="49:34" pos:end="49:42">map_dirfd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="51:13" pos:end="51:22">return <expr pos:start="51:20" pos:end="51:21"><operator pos:start="51:20" pos:end="51:20">-</operator><literal type="number" pos:start="51:21" pos:end="51:21">1</literal></expr>;</return>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:29"><expr pos:start="57:5" pos:end="57:28"><call pos:start="57:5" pos:end="57:28"><name pos:start="57:5" pos:end="57:10">memset</name><argument_list pos:start="57:11" pos:end="57:28">(<argument pos:start="57:12" pos:end="57:14"><expr pos:start="57:12" pos:end="57:14"><name pos:start="57:12" pos:end="57:14">buf</name></expr></argument>, <argument pos:start="57:17" pos:end="57:17"><expr pos:start="57:17" pos:end="57:17"><literal type="number" pos:start="57:17" pos:end="57:17">0</literal></expr></argument>, <argument pos:start="57:20" pos:end="57:27"><expr pos:start="57:20" pos:end="57:27"><name pos:start="57:20" pos:end="57:27">ATTR_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="59:5" pos:end="81:5">while <condition pos:start="59:11" pos:end="59:36">(<expr pos:start="59:12" pos:end="59:35"><call pos:start="59:12" pos:end="59:35"><name pos:start="59:12" pos:end="59:16">fgets</name><argument_list pos:start="59:17" pos:end="59:35">(<argument pos:start="59:18" pos:end="59:20"><expr pos:start="59:18" pos:end="59:20"><name pos:start="59:18" pos:end="59:20">buf</name></expr></argument>, <argument pos:start="59:23" pos:end="59:30"><expr pos:start="59:23" pos:end="59:30"><name pos:start="59:23" pos:end="59:30">ATTR_MAX</name></expr></argument>, <argument pos:start="59:33" pos:end="59:34"><expr pos:start="59:33" pos:end="59:34"><name pos:start="59:33" pos:end="59:34">fp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="59:38" pos:end="81:5">{<block_content pos:start="61:9" pos:end="79:33">

        <if_stmt pos:start="61:9" pos:end="77:9"><if pos:start="61:9" pos:end="65:9">if <condition pos:start="61:12" pos:end="61:44">(<expr pos:start="61:13" pos:end="61:43"><operator pos:start="61:13" pos:end="61:13">!</operator><call pos:start="61:14" pos:end="61:43"><name pos:start="61:14" pos:end="61:20">strncmp</name><argument_list pos:start="61:21" pos:end="61:43">(<argument pos:start="61:22" pos:end="61:24"><expr pos:start="61:22" pos:end="61:24"><name pos:start="61:22" pos:end="61:24">buf</name></expr></argument>, <argument pos:start="61:27" pos:end="61:38"><expr pos:start="61:27" pos:end="61:38"><literal type="string" pos:start="61:27" pos:end="61:38">"virtfs.uid"</literal></expr></argument>, <argument pos:start="61:41" pos:end="61:42"><expr pos:start="61:41" pos:end="61:42"><literal type="number" pos:start="61:41" pos:end="61:42">10</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="61:46" pos:end="65:9">{<block_content pos:start="63:13" pos:end="63:33">

            <expr_stmt pos:start="63:13" pos:end="63:33"><expr pos:start="63:13" pos:end="63:32"><name pos:start="63:13" pos:end="63:15">uid</name> <operator pos:start="63:17" pos:end="63:17">=</operator> <call pos:start="63:19" pos:end="63:32"><name pos:start="63:19" pos:end="63:22">atoi</name><argument_list pos:start="63:23" pos:end="63:32">(<argument pos:start="63:24" pos:end="63:31"><expr pos:start="63:24" pos:end="63:31"><name pos:start="63:24" pos:end="63:26">buf</name> <operator pos:start="63:28" pos:end="63:28">+</operator> <literal type="number" pos:start="63:30" pos:end="63:31">11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="65:11" pos:end="69:9">else if <condition pos:start="65:19" pos:end="65:51">(<expr pos:start="65:20" pos:end="65:50"><operator pos:start="65:20" pos:end="65:20">!</operator><call pos:start="65:21" pos:end="65:50"><name pos:start="65:21" pos:end="65:27">strncmp</name><argument_list pos:start="65:28" pos:end="65:50">(<argument pos:start="65:29" pos:end="65:31"><expr pos:start="65:29" pos:end="65:31"><name pos:start="65:29" pos:end="65:31">buf</name></expr></argument>, <argument pos:start="65:34" pos:end="65:45"><expr pos:start="65:34" pos:end="65:45"><literal type="string" pos:start="65:34" pos:end="65:45">"virtfs.gid"</literal></expr></argument>, <argument pos:start="65:48" pos:end="65:49"><expr pos:start="65:48" pos:end="65:49"><literal type="number" pos:start="65:48" pos:end="65:49">10</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="65:53" pos:end="69:9">{<block_content pos:start="67:13" pos:end="67:33">

            <expr_stmt pos:start="67:13" pos:end="67:33"><expr pos:start="67:13" pos:end="67:32"><name pos:start="67:13" pos:end="67:15">gid</name> <operator pos:start="67:17" pos:end="67:17">=</operator> <call pos:start="67:19" pos:end="67:32"><name pos:start="67:19" pos:end="67:22">atoi</name><argument_list pos:start="67:23" pos:end="67:32">(<argument pos:start="67:24" pos:end="67:31"><expr pos:start="67:24" pos:end="67:31"><name pos:start="67:24" pos:end="67:26">buf</name> <operator pos:start="67:28" pos:end="67:28">+</operator> <literal type="number" pos:start="67:30" pos:end="67:31">11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="69:11" pos:end="73:9">else if <condition pos:start="69:19" pos:end="69:52">(<expr pos:start="69:20" pos:end="69:51"><operator pos:start="69:20" pos:end="69:20">!</operator><call pos:start="69:21" pos:end="69:51"><name pos:start="69:21" pos:end="69:27">strncmp</name><argument_list pos:start="69:28" pos:end="69:51">(<argument pos:start="69:29" pos:end="69:31"><expr pos:start="69:29" pos:end="69:31"><name pos:start="69:29" pos:end="69:31">buf</name></expr></argument>, <argument pos:start="69:34" pos:end="69:46"><expr pos:start="69:34" pos:end="69:46"><literal type="string" pos:start="69:34" pos:end="69:46">"virtfs.mode"</literal></expr></argument>, <argument pos:start="69:49" pos:end="69:50"><expr pos:start="69:49" pos:end="69:50"><literal type="number" pos:start="69:49" pos:end="69:50">11</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="69:54" pos:end="73:9">{<block_content pos:start="71:13" pos:end="71:34">

            <expr_stmt pos:start="71:13" pos:end="71:34"><expr pos:start="71:13" pos:end="71:33"><name pos:start="71:13" pos:end="71:16">mode</name> <operator pos:start="71:18" pos:end="71:18">=</operator> <call pos:start="71:20" pos:end="71:33"><name pos:start="71:20" pos:end="71:23">atoi</name><argument_list pos:start="71:24" pos:end="71:33">(<argument pos:start="71:25" pos:end="71:32"><expr pos:start="71:25" pos:end="71:32"><name pos:start="71:25" pos:end="71:27">buf</name> <operator pos:start="71:29" pos:end="71:29">+</operator> <literal type="number" pos:start="71:31" pos:end="71:32">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="73:11" pos:end="77:9">else if <condition pos:start="73:19" pos:end="73:52">(<expr pos:start="73:20" pos:end="73:51"><operator pos:start="73:20" pos:end="73:20">!</operator><call pos:start="73:21" pos:end="73:51"><name pos:start="73:21" pos:end="73:27">strncmp</name><argument_list pos:start="73:28" pos:end="73:51">(<argument pos:start="73:29" pos:end="73:31"><expr pos:start="73:29" pos:end="73:31"><name pos:start="73:29" pos:end="73:31">buf</name></expr></argument>, <argument pos:start="73:34" pos:end="73:46"><expr pos:start="73:34" pos:end="73:46"><literal type="string" pos:start="73:34" pos:end="73:46">"virtfs.rdev"</literal></expr></argument>, <argument pos:start="73:49" pos:end="73:50"><expr pos:start="73:49" pos:end="73:50"><literal type="number" pos:start="73:49" pos:end="73:50">11</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="73:54" pos:end="77:9">{<block_content pos:start="75:13" pos:end="75:34">

            <expr_stmt pos:start="75:13" pos:end="75:34"><expr pos:start="75:13" pos:end="75:33"><name pos:start="75:13" pos:end="75:16">rdev</name> <operator pos:start="75:18" pos:end="75:18">=</operator> <call pos:start="75:20" pos:end="75:33"><name pos:start="75:20" pos:end="75:23">atoi</name><argument_list pos:start="75:24" pos:end="75:33">(<argument pos:start="75:25" pos:end="75:32"><expr pos:start="75:25" pos:end="75:32"><name pos:start="75:25" pos:end="75:27">buf</name> <operator pos:start="75:29" pos:end="75:29">+</operator> <literal type="number" pos:start="75:31" pos:end="75:32">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:33"><expr pos:start="79:9" pos:end="79:32"><call pos:start="79:9" pos:end="79:32"><name pos:start="79:9" pos:end="79:14">memset</name><argument_list pos:start="79:15" pos:end="79:32">(<argument pos:start="79:16" pos:end="79:18"><expr pos:start="79:16" pos:end="79:18"><name pos:start="79:16" pos:end="79:18">buf</name></expr></argument>, <argument pos:start="79:21" pos:end="79:21"><expr pos:start="79:21" pos:end="79:21"><literal type="number" pos:start="79:21" pos:end="79:21">0</literal></expr></argument>, <argument pos:start="79:24" pos:end="79:31"><expr pos:start="79:24" pos:end="79:31"><name pos:start="79:24" pos:end="79:31">ATTR_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="83:5" pos:end="83:15"><expr pos:start="83:5" pos:end="83:14"><call pos:start="83:5" pos:end="83:14"><name pos:start="83:5" pos:end="83:10">fclose</name><argument_list pos:start="83:11" pos:end="83:14">(<argument pos:start="83:12" pos:end="83:13"><expr pos:start="83:12" pos:end="83:13"><name pos:start="83:12" pos:end="83:13">fp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="87:1" pos:end="87:16"><name pos:start="87:1" pos:end="87:15">update_map_file</name>:</label>

    <expr_stmt pos:start="89:5" pos:end="89:45"><expr pos:start="89:5" pos:end="89:44"><name pos:start="89:5" pos:end="89:6">fp</name> <operator pos:start="89:8" pos:end="89:8">=</operator> <call pos:start="89:10" pos:end="89:44"><name pos:start="89:10" pos:end="89:22">local_fopenat</name><argument_list pos:start="89:23" pos:end="89:44">(<argument pos:start="89:24" pos:end="89:32"><expr pos:start="89:24" pos:end="89:32"><name pos:start="89:24" pos:end="89:32">map_dirfd</name></expr></argument>, <argument pos:start="89:35" pos:end="89:38"><expr pos:start="89:35" pos:end="89:38"><name pos:start="89:35" pos:end="89:38">name</name></expr></argument>, <argument pos:start="89:41" pos:end="89:43"><expr pos:start="89:41" pos:end="89:43"><literal type="string" pos:start="89:41" pos:end="89:43">"w"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:36"><expr pos:start="91:5" pos:end="91:35"><call pos:start="91:5" pos:end="91:35"><name pos:start="91:5" pos:end="91:24">close_preserve_errno</name><argument_list pos:start="91:25" pos:end="91:35">(<argument pos:start="91:26" pos:end="91:34"><expr pos:start="91:26" pos:end="91:34"><name pos:start="91:26" pos:end="91:34">map_dirfd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="93:5" pos:end="97:5"><if pos:start="93:5" pos:end="97:5">if <condition pos:start="93:8" pos:end="93:12">(<expr pos:start="93:9" pos:end="93:11"><operator pos:start="93:9" pos:end="93:9">!</operator><name pos:start="93:10" pos:end="93:11">fp</name></expr>)</condition> <block pos:start="93:14" pos:end="97:5">{<block_content pos:start="95:9" pos:end="95:18">

        <return pos:start="95:9" pos:end="95:18">return <expr pos:start="95:16" pos:end="95:17"><operator pos:start="95:16" pos:end="95:16">-</operator><literal type="number" pos:start="95:17" pos:end="95:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="101:5" pos:end="105:5"><if pos:start="101:5" pos:end="105:5">if <condition pos:start="101:8" pos:end="101:28">(<expr pos:start="101:9" pos:end="101:27"><name pos:start="101:9" pos:end="101:21"><name pos:start="101:9" pos:end="101:13">credp</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:21">fc_uid</name></name> <operator pos:start="101:23" pos:end="101:24">!=</operator> <operator pos:start="101:26" pos:end="101:26">-</operator><literal type="number" pos:start="101:27" pos:end="101:27">1</literal></expr>)</condition> <block pos:start="101:30" pos:end="105:5">{<block_content pos:start="103:9" pos:end="103:28">

        <expr_stmt pos:start="103:9" pos:end="103:28"><expr pos:start="103:9" pos:end="103:27"><name pos:start="103:9" pos:end="103:11">uid</name> <operator pos:start="103:13" pos:end="103:13">=</operator> <name pos:start="103:15" pos:end="103:27"><name pos:start="103:15" pos:end="103:19">credp</name><operator pos:start="103:20" pos:end="103:21">-&gt;</operator><name pos:start="103:22" pos:end="103:27">fc_uid</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="107:5" pos:end="111:5"><if pos:start="107:5" pos:end="111:5">if <condition pos:start="107:8" pos:end="107:28">(<expr pos:start="107:9" pos:end="107:27"><name pos:start="107:9" pos:end="107:21"><name pos:start="107:9" pos:end="107:13">credp</name><operator pos:start="107:14" pos:end="107:15">-&gt;</operator><name pos:start="107:16" pos:end="107:21">fc_gid</name></name> <operator pos:start="107:23" pos:end="107:24">!=</operator> <operator pos:start="107:26" pos:end="107:26">-</operator><literal type="number" pos:start="107:27" pos:end="107:27">1</literal></expr>)</condition> <block pos:start="107:30" pos:end="111:5">{<block_content pos:start="109:9" pos:end="109:28">

        <expr_stmt pos:start="109:9" pos:end="109:28"><expr pos:start="109:9" pos:end="109:27"><name pos:start="109:9" pos:end="109:11">gid</name> <operator pos:start="109:13" pos:end="109:13">=</operator> <name pos:start="109:15" pos:end="109:27"><name pos:start="109:15" pos:end="109:19">credp</name><operator pos:start="109:20" pos:end="109:21">-&gt;</operator><name pos:start="109:22" pos:end="109:27">fc_gid</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="113:5" pos:end="117:5"><if pos:start="113:5" pos:end="117:5">if <condition pos:start="113:8" pos:end="113:29">(<expr pos:start="113:9" pos:end="113:28"><name pos:start="113:9" pos:end="113:22"><name pos:start="113:9" pos:end="113:13">credp</name><operator pos:start="113:14" pos:end="113:15">-&gt;</operator><name pos:start="113:16" pos:end="113:22">fc_mode</name></name> <operator pos:start="113:24" pos:end="113:25">!=</operator> <operator pos:start="113:27" pos:end="113:27">-</operator><literal type="number" pos:start="113:28" pos:end="113:28">1</literal></expr>)</condition> <block pos:start="113:31" pos:end="117:5">{<block_content pos:start="115:9" pos:end="115:30">

        <expr_stmt pos:start="115:9" pos:end="115:30"><expr pos:start="115:9" pos:end="115:29"><name pos:start="115:9" pos:end="115:12">mode</name> <operator pos:start="115:14" pos:end="115:14">=</operator> <name pos:start="115:16" pos:end="115:29"><name pos:start="115:16" pos:end="115:20">credp</name><operator pos:start="115:21" pos:end="115:22">-&gt;</operator><name pos:start="115:23" pos:end="115:29">fc_mode</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="119:5" pos:end="123:5"><if pos:start="119:5" pos:end="123:5">if <condition pos:start="119:8" pos:end="119:29">(<expr pos:start="119:9" pos:end="119:28"><name pos:start="119:9" pos:end="119:22"><name pos:start="119:9" pos:end="119:13">credp</name><operator pos:start="119:14" pos:end="119:15">-&gt;</operator><name pos:start="119:16" pos:end="119:22">fc_rdev</name></name> <operator pos:start="119:24" pos:end="119:25">!=</operator> <operator pos:start="119:27" pos:end="119:27">-</operator><literal type="number" pos:start="119:28" pos:end="119:28">1</literal></expr>)</condition> <block pos:start="119:31" pos:end="123:5">{<block_content pos:start="121:9" pos:end="121:30">

        <expr_stmt pos:start="121:9" pos:end="121:30"><expr pos:start="121:9" pos:end="121:29"><name pos:start="121:9" pos:end="121:12">rdev</name> <operator pos:start="121:14" pos:end="121:14">=</operator> <name pos:start="121:16" pos:end="121:29"><name pos:start="121:16" pos:end="121:20">credp</name><operator pos:start="121:21" pos:end="121:22">-&gt;</operator><name pos:start="121:23" pos:end="121:29">fc_rdev</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="127:5" pos:end="131:5"><if pos:start="127:5" pos:end="131:5">if <condition pos:start="127:8" pos:end="127:18">(<expr pos:start="127:9" pos:end="127:17"><name pos:start="127:9" pos:end="127:11">uid</name> <operator pos:start="127:13" pos:end="127:14">!=</operator> <operator pos:start="127:16" pos:end="127:16">-</operator><literal type="number" pos:start="127:17" pos:end="127:17">1</literal></expr>)</condition> <block pos:start="127:20" pos:end="131:5">{<block_content pos:start="129:9" pos:end="129:44">

        <expr_stmt pos:start="129:9" pos:end="129:44"><expr pos:start="129:9" pos:end="129:43"><call pos:start="129:9" pos:end="129:43"><name pos:start="129:9" pos:end="129:15">fprintf</name><argument_list pos:start="129:16" pos:end="129:43">(<argument pos:start="129:17" pos:end="129:18"><expr pos:start="129:17" pos:end="129:18"><name pos:start="129:17" pos:end="129:18">fp</name></expr></argument>, <argument pos:start="129:21" pos:end="129:37"><expr pos:start="129:21" pos:end="129:37"><literal type="string" pos:start="129:21" pos:end="129:37">"virtfs.uid=%d\n"</literal></expr></argument>, <argument pos:start="129:40" pos:end="129:42"><expr pos:start="129:40" pos:end="129:42"><name pos:start="129:40" pos:end="129:42">uid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="133:5" pos:end="137:5"><if pos:start="133:5" pos:end="137:5">if <condition pos:start="133:8" pos:end="133:18">(<expr pos:start="133:9" pos:end="133:17"><name pos:start="133:9" pos:end="133:11">gid</name> <operator pos:start="133:13" pos:end="133:14">!=</operator> <operator pos:start="133:16" pos:end="133:16">-</operator><literal type="number" pos:start="133:17" pos:end="133:17">1</literal></expr>)</condition> <block pos:start="133:20" pos:end="137:5">{<block_content pos:start="135:9" pos:end="135:44">

        <expr_stmt pos:start="135:9" pos:end="135:44"><expr pos:start="135:9" pos:end="135:43"><call pos:start="135:9" pos:end="135:43"><name pos:start="135:9" pos:end="135:15">fprintf</name><argument_list pos:start="135:16" pos:end="135:43">(<argument pos:start="135:17" pos:end="135:18"><expr pos:start="135:17" pos:end="135:18"><name pos:start="135:17" pos:end="135:18">fp</name></expr></argument>, <argument pos:start="135:21" pos:end="135:37"><expr pos:start="135:21" pos:end="135:37"><literal type="string" pos:start="135:21" pos:end="135:37">"virtfs.gid=%d\n"</literal></expr></argument>, <argument pos:start="135:40" pos:end="135:42"><expr pos:start="135:40" pos:end="135:42"><name pos:start="135:40" pos:end="135:42">gid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="139:5" pos:end="143:5"><if pos:start="139:5" pos:end="143:5">if <condition pos:start="139:8" pos:end="139:19">(<expr pos:start="139:9" pos:end="139:18"><name pos:start="139:9" pos:end="139:12">mode</name> <operator pos:start="139:14" pos:end="139:15">!=</operator> <operator pos:start="139:17" pos:end="139:17">-</operator><literal type="number" pos:start="139:18" pos:end="139:18">1</literal></expr>)</condition> <block pos:start="139:21" pos:end="143:5">{<block_content pos:start="141:9" pos:end="141:46">

        <expr_stmt pos:start="141:9" pos:end="141:46"><expr pos:start="141:9" pos:end="141:45"><call pos:start="141:9" pos:end="141:45"><name pos:start="141:9" pos:end="141:15">fprintf</name><argument_list pos:start="141:16" pos:end="141:45">(<argument pos:start="141:17" pos:end="141:18"><expr pos:start="141:17" pos:end="141:18"><name pos:start="141:17" pos:end="141:18">fp</name></expr></argument>, <argument pos:start="141:21" pos:end="141:38"><expr pos:start="141:21" pos:end="141:38"><literal type="string" pos:start="141:21" pos:end="141:38">"virtfs.mode=%d\n"</literal></expr></argument>, <argument pos:start="141:41" pos:end="141:44"><expr pos:start="141:41" pos:end="141:44"><name pos:start="141:41" pos:end="141:44">mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="145:5" pos:end="149:5"><if pos:start="145:5" pos:end="149:5">if <condition pos:start="145:8" pos:end="145:19">(<expr pos:start="145:9" pos:end="145:18"><name pos:start="145:9" pos:end="145:12">rdev</name> <operator pos:start="145:14" pos:end="145:15">!=</operator> <operator pos:start="145:17" pos:end="145:17">-</operator><literal type="number" pos:start="145:18" pos:end="145:18">1</literal></expr>)</condition> <block pos:start="145:21" pos:end="149:5">{<block_content pos:start="147:9" pos:end="147:46">

        <expr_stmt pos:start="147:9" pos:end="147:46"><expr pos:start="147:9" pos:end="147:45"><call pos:start="147:9" pos:end="147:45"><name pos:start="147:9" pos:end="147:15">fprintf</name><argument_list pos:start="147:16" pos:end="147:45">(<argument pos:start="147:17" pos:end="147:18"><expr pos:start="147:17" pos:end="147:18"><name pos:start="147:17" pos:end="147:18">fp</name></expr></argument>, <argument pos:start="147:21" pos:end="147:38"><expr pos:start="147:21" pos:end="147:38"><literal type="string" pos:start="147:21" pos:end="147:38">"virtfs.rdev=%d\n"</literal></expr></argument>, <argument pos:start="147:41" pos:end="147:44"><expr pos:start="147:41" pos:end="147:44"><name pos:start="147:41" pos:end="147:44">rdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:15"><expr pos:start="151:5" pos:end="151:14"><call pos:start="151:5" pos:end="151:14"><name pos:start="151:5" pos:end="151:10">fclose</name><argument_list pos:start="151:11" pos:end="151:14">(<argument pos:start="151:12" pos:end="151:13"><expr pos:start="151:12" pos:end="151:13"><name pos:start="151:12" pos:end="151:13">fp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="155:5" pos:end="155:13">return <expr pos:start="155:12" pos:end="155:12"><literal type="number" pos:start="155:12" pos:end="155:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
