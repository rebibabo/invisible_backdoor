<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20577.c" pos:tabs="8"><function pos:start="1:1" pos:end="127:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:21">decode_mb_coeffs</name><parameter_list pos:start="1:22" pos:end="3:76">(<parameter pos:start="1:23" pos:end="1:35"><decl pos:start="1:23" pos:end="1:35"><type pos:start="1:23" pos:end="1:35"><name pos:start="1:23" pos:end="1:32">VP8Context</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:35">s</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:54"><decl pos:start="1:38" pos:end="1:54"><type pos:start="1:38" pos:end="1:54"><name pos:start="1:38" pos:end="1:50">VP8ThreadData</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:54">td</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:73"><decl pos:start="1:57" pos:end="1:73"><type pos:start="1:57" pos:end="1:73"><name pos:start="1:57" pos:end="1:70">VP56RangeCoder</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:73">c</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:39"><decl pos:start="3:23" pos:end="3:39"><type pos:start="3:23" pos:end="3:39"><name pos:start="3:23" pos:end="3:35">VP8Macroblock</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:39">mb</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:57"><decl pos:start="3:42" pos:end="3:57"><type pos:start="3:42" pos:end="3:54"><name pos:start="3:42" pos:end="3:48">uint8_t</name></type> <name pos:start="3:50" pos:end="3:57"><name pos:start="3:50" pos:end="3:54">t_nnz</name><index pos:start="3:55" pos:end="3:57">[<expr pos:start="3:56" pos:end="3:56"><literal type="number" pos:start="3:56" pos:end="3:56">9</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="3:60" pos:end="3:75"><decl pos:start="3:60" pos:end="3:75"><type pos:start="3:60" pos:end="3:72"><name pos:start="3:60" pos:end="3:66">uint8_t</name></type> <name pos:start="3:68" pos:end="3:75"><name pos:start="3:68" pos:end="3:72">l_nnz</name><index pos:start="3:73" pos:end="3:75">[<expr pos:start="3:74" pos:end="3:74"><literal type="number" pos:start="3:74" pos:end="3:74">9</literal></expr>]</index></name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="127:1">{<block_content pos:start="7:5" pos:end="125:21">

    <decl_stmt pos:start="7:5" pos:end="7:46"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">x</name></decl>, <decl pos:start="7:15" pos:end="7:15"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:15">y</name></decl>, <decl pos:start="7:18" pos:end="7:31"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:18" pos:end="7:27">luma_start</name> <init pos:start="7:29" pos:end="7:31">= <expr pos:start="7:31" pos:end="7:31"><literal type="number" pos:start="7:31" pos:end="7:31">0</literal></expr></init></decl>, <decl pos:start="7:34" pos:end="7:45"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:34" pos:end="7:41">luma_ctx</name> <init pos:start="7:43" pos:end="7:45">= <expr pos:start="7:45" pos:end="7:45"><literal type="number" pos:start="7:45" pos:end="7:45">3</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">nnz_pred</name></decl>, <decl pos:start="9:19" pos:end="9:21"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:19" pos:end="9:21">nnz</name></decl>, <decl pos:start="9:24" pos:end="9:36"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:24" pos:end="9:32">nnz_total</name> <init pos:start="9:34" pos:end="9:36">= <expr pos:start="9:36" pos:end="9:36"><literal type="number" pos:start="9:36" pos:end="9:36">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:15">segment</name> <init pos:start="11:17" pos:end="11:29">= <expr pos:start="11:19" pos:end="11:29"><name pos:start="11:19" pos:end="11:29"><name pos:start="11:19" pos:end="11:20">mb</name><operator pos:start="11:21" pos:end="11:22">-&gt;</operator><name pos:start="11:23" pos:end="11:29">segment</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:16">block_dc</name> <init pos:start="13:18" pos:end="13:20">= <expr pos:start="13:20" pos:end="13:20"><literal type="number" pos:start="13:20" pos:end="13:20">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="51:5"><if pos:start="17:5" pos:end="51:5">if <condition pos:start="17:8" pos:end="17:62">(<expr pos:start="17:9" pos:end="17:61"><name pos:start="17:9" pos:end="17:16"><name pos:start="17:9" pos:end="17:10">mb</name><operator pos:start="17:11" pos:end="17:12">-&gt;</operator><name pos:start="17:13" pos:end="17:16">mode</name></name> <operator pos:start="17:18" pos:end="17:19">!=</operator> <name pos:start="17:21" pos:end="17:29">MODE_I4x4</name> <operator pos:start="17:31" pos:end="17:32">&amp;&amp;</operator> <name pos:start="17:34" pos:end="17:41"><name pos:start="17:34" pos:end="17:35">mb</name><operator pos:start="17:36" pos:end="17:37">-&gt;</operator><name pos:start="17:38" pos:end="17:41">mode</name></name> <operator pos:start="17:43" pos:end="17:44">!=</operator> <name pos:start="17:46" pos:end="17:61">VP8_MVMODE_SPLIT</name></expr>)</condition> <block pos:start="17:64" pos:end="51:5">{<block_content pos:start="19:9" pos:end="49:23">

        <expr_stmt pos:start="19:9" pos:end="19:39"><expr pos:start="19:9" pos:end="19:38"><name pos:start="19:9" pos:end="19:16">nnz_pred</name> <operator pos:start="19:18" pos:end="19:18">=</operator> <name pos:start="19:20" pos:end="19:27"><name pos:start="19:20" pos:end="19:24">t_nnz</name><index pos:start="19:25" pos:end="19:27">[<expr pos:start="19:26" pos:end="19:26"><literal type="number" pos:start="19:26" pos:end="19:26">8</literal></expr>]</index></name> <operator pos:start="19:29" pos:end="19:29">+</operator> <name pos:start="19:31" pos:end="19:38"><name pos:start="19:31" pos:end="19:35">l_nnz</name><index pos:start="19:36" pos:end="19:38">[<expr pos:start="19:37" pos:end="19:37"><literal type="number" pos:start="19:37" pos:end="19:37">8</literal></expr>]</index></name></expr>;</expr_stmt>



        <comment type="line" pos:start="23:9" pos:end="23:43">// decode DC values and do hadamard</comment>

        <expr_stmt pos:start="25:9" pos:end="27:75"><expr pos:start="25:9" pos:end="27:74"><name pos:start="25:9" pos:end="25:11">nnz</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="27:74"><name pos:start="25:15" pos:end="25:33">decode_block_coeffs</name><argument_list pos:start="25:34" pos:end="27:74">(<argument pos:start="25:35" pos:end="25:35"><expr pos:start="25:35" pos:end="25:35"><name pos:start="25:35" pos:end="25:35">c</name></expr></argument>, <argument pos:start="25:38" pos:end="25:49"><expr pos:start="25:38" pos:end="25:49"><name pos:start="25:38" pos:end="25:49"><name pos:start="25:38" pos:end="25:39">td</name><operator pos:start="25:40" pos:end="25:41">-&gt;</operator><name pos:start="25:42" pos:end="25:49">block_dc</name></name></expr></argument>, <argument pos:start="25:52" pos:end="25:68"><expr pos:start="25:52" pos:end="25:68"><name pos:start="25:52" pos:end="25:68"><name pos:start="25:52" pos:end="25:52">s</name><operator pos:start="25:53" pos:end="25:54">-&gt;</operator><name pos:start="25:55" pos:end="25:58">prob</name><operator pos:start="25:59" pos:end="25:60">-&gt;</operator><name pos:start="25:61" pos:end="25:65">token</name><index pos:start="25:66" pos:end="25:68">[<expr pos:start="25:67" pos:end="25:67"><literal type="number" pos:start="25:67" pos:end="25:67">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="25:71" pos:end="25:71"><expr pos:start="25:71" pos:end="25:71"><literal type="number" pos:start="25:71" pos:end="25:71">0</literal></expr></argument>,

                                  <argument pos:start="27:35" pos:end="27:42"><expr pos:start="27:35" pos:end="27:42"><name pos:start="27:35" pos:end="27:42">nnz_pred</name></expr></argument>, <argument pos:start="27:45" pos:end="27:73"><expr pos:start="27:45" pos:end="27:73"><name pos:start="27:45" pos:end="27:60"><name pos:start="27:45" pos:end="27:45">s</name><operator pos:start="27:46" pos:end="27:47">-&gt;</operator><name pos:start="27:48" pos:end="27:51">qmat</name><index pos:start="27:52" pos:end="27:60">[<expr pos:start="27:53" pos:end="27:59"><name pos:start="27:53" pos:end="27:59">segment</name></expr>]</index></name><operator pos:start="27:61" pos:end="27:61">.</operator><name pos:start="27:62" pos:end="27:73">luma_dc_qmul</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:36"><expr pos:start="29:9" pos:end="29:35"><name pos:start="29:9" pos:end="29:16"><name pos:start="29:9" pos:end="29:13">l_nnz</name><index pos:start="29:14" pos:end="29:16">[<expr pos:start="29:15" pos:end="29:15"><literal type="number" pos:start="29:15" pos:end="29:15">8</literal></expr>]</index></name> <operator pos:start="29:18" pos:end="29:18">=</operator> <name pos:start="29:20" pos:end="29:27"><name pos:start="29:20" pos:end="29:24">t_nnz</name><index pos:start="29:25" pos:end="29:27">[<expr pos:start="29:26" pos:end="29:26"><literal type="number" pos:start="29:26" pos:end="29:26">8</literal></expr>]</index></name> <operator pos:start="29:29" pos:end="29:29">=</operator> <operator pos:start="29:31" pos:end="29:31">!</operator><operator pos:start="29:32" pos:end="29:32">!</operator><name pos:start="29:33" pos:end="29:35">nnz</name></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="45:9"><if pos:start="31:9" pos:end="45:9">if <condition pos:start="31:12" pos:end="31:16">(<expr pos:start="31:13" pos:end="31:15"><name pos:start="31:13" pos:end="31:15">nnz</name></expr>)</condition> <block pos:start="31:18" pos:end="45:9">{<block_content pos:start="33:13" pos:end="43:67">

            <expr_stmt pos:start="33:13" pos:end="33:29"><expr pos:start="33:13" pos:end="33:28"><name pos:start="33:13" pos:end="33:21">nnz_total</name> <operator pos:start="33:23" pos:end="33:24">+=</operator> <name pos:start="33:26" pos:end="33:28">nnz</name></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:27"><expr pos:start="35:13" pos:end="35:26"><name pos:start="35:13" pos:end="35:20">block_dc</name>   <operator pos:start="35:24" pos:end="35:24">=</operator> <literal type="number" pos:start="35:26" pos:end="35:26">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="37:13" pos:end="43:67"><if pos:start="37:13" pos:end="39:70">if <condition pos:start="37:16" pos:end="37:25">(<expr pos:start="37:17" pos:end="37:24"><name pos:start="37:17" pos:end="37:19">nnz</name> <operator pos:start="37:21" pos:end="37:22">==</operator> <literal type="number" pos:start="37:24" pos:end="37:24">1</literal></expr>)</condition><block type="pseudo" pos:start="39:17" pos:end="39:70"><block_content pos:start="39:17" pos:end="39:70">

                <expr_stmt pos:start="39:17" pos:end="39:70"><expr pos:start="39:17" pos:end="39:69"><call pos:start="39:17" pos:end="39:69"><name pos:start="39:17" pos:end="39:44"><name pos:start="39:17" pos:end="39:17">s</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:25">vp8dsp</name><operator pos:start="39:26" pos:end="39:26">.</operator><name pos:start="39:27" pos:end="39:44">vp8_luma_dc_wht_dc</name></name><argument_list pos:start="39:45" pos:end="39:69">(<argument pos:start="39:46" pos:end="39:54"><expr pos:start="39:46" pos:end="39:54"><name pos:start="39:46" pos:end="39:54"><name pos:start="39:46" pos:end="39:47">td</name><operator pos:start="39:48" pos:end="39:49">-&gt;</operator><name pos:start="39:50" pos:end="39:54">block</name></name></expr></argument>, <argument pos:start="39:57" pos:end="39:68"><expr pos:start="39:57" pos:end="39:68"><name pos:start="39:57" pos:end="39:68"><name pos:start="39:57" pos:end="39:58">td</name><operator pos:start="39:59" pos:end="39:60">-&gt;</operator><name pos:start="39:61" pos:end="39:68">block_dc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="41:13" pos:end="43:67">else<block type="pseudo" pos:start="43:17" pos:end="43:67"><block_content pos:start="43:17" pos:end="43:67">

                <expr_stmt pos:start="43:17" pos:end="43:67"><expr pos:start="43:17" pos:end="43:66"><call pos:start="43:17" pos:end="43:66"><name pos:start="43:17" pos:end="43:41"><name pos:start="43:17" pos:end="43:17">s</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:25">vp8dsp</name><operator pos:start="43:26" pos:end="43:26">.</operator><name pos:start="43:27" pos:end="43:41">vp8_luma_dc_wht</name></name><argument_list pos:start="43:42" pos:end="43:66">(<argument pos:start="43:43" pos:end="43:51"><expr pos:start="43:43" pos:end="43:51"><name pos:start="43:43" pos:end="43:51"><name pos:start="43:43" pos:end="43:44">td</name><operator pos:start="43:45" pos:end="43:46">-&gt;</operator><name pos:start="43:47" pos:end="43:51">block</name></name></expr></argument>, <argument pos:start="43:54" pos:end="43:65"><expr pos:start="43:54" pos:end="43:65"><name pos:start="43:54" pos:end="43:65"><name pos:start="43:54" pos:end="43:55">td</name><operator pos:start="43:56" pos:end="43:57">-&gt;</operator><name pos:start="43:58" pos:end="43:65">block_dc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:23"><expr pos:start="47:9" pos:end="47:22"><name pos:start="47:9" pos:end="47:18">luma_start</name> <operator pos:start="47:20" pos:end="47:20">=</operator> <literal type="number" pos:start="47:22" pos:end="47:22">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:23"><expr pos:start="49:9" pos:end="49:22"><name pos:start="49:9" pos:end="49:16">luma_ctx</name>   <operator pos:start="49:20" pos:end="49:20">=</operator> <literal type="number" pos:start="49:22" pos:end="49:22">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="55:5" pos:end="55:18">// luma blocks</comment>

    <for pos:start="57:5" pos:end="81:9">for <control pos:start="57:9" pos:end="57:27">(<init pos:start="57:10" pos:end="57:15"><expr pos:start="57:10" pos:end="57:14"><name pos:start="57:10" pos:end="57:10">y</name> <operator pos:start="57:12" pos:end="57:12">=</operator> <literal type="number" pos:start="57:14" pos:end="57:14">0</literal></expr>;</init> <condition pos:start="57:17" pos:end="57:22"><expr pos:start="57:17" pos:end="57:21"><name pos:start="57:17" pos:end="57:17">y</name> <operator pos:start="57:19" pos:end="57:19">&lt;</operator> <literal type="number" pos:start="57:21" pos:end="57:21">4</literal></expr>;</condition> <incr pos:start="57:24" pos:end="57:26"><expr pos:start="57:24" pos:end="57:26"><name pos:start="57:24" pos:end="57:24">y</name><operator pos:start="57:25" pos:end="57:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="59:9" pos:end="81:9"><block_content pos:start="59:9" pos:end="81:9">

        <for pos:start="59:9" pos:end="81:9">for <control pos:start="59:13" pos:end="59:31">(<init pos:start="59:14" pos:end="59:19"><expr pos:start="59:14" pos:end="59:18"><name pos:start="59:14" pos:end="59:14">x</name> <operator pos:start="59:16" pos:end="59:16">=</operator> <literal type="number" pos:start="59:18" pos:end="59:18">0</literal></expr>;</init> <condition pos:start="59:21" pos:end="59:26"><expr pos:start="59:21" pos:end="59:25"><name pos:start="59:21" pos:end="59:21">x</name> <operator pos:start="59:23" pos:end="59:23">&lt;</operator> <literal type="number" pos:start="59:25" pos:end="59:25">4</literal></expr>;</condition> <incr pos:start="59:28" pos:end="59:30"><expr pos:start="59:28" pos:end="59:30"><name pos:start="59:28" pos:end="59:28">x</name><operator pos:start="59:29" pos:end="59:30">++</operator></expr></incr>)</control> <block pos:start="59:33" pos:end="81:9">{<block_content pos:start="61:13" pos:end="79:29">

            <expr_stmt pos:start="61:13" pos:end="61:43"><expr pos:start="61:13" pos:end="61:42"><name pos:start="61:13" pos:end="61:20">nnz_pred</name> <operator pos:start="61:22" pos:end="61:22">=</operator> <name pos:start="61:24" pos:end="61:31"><name pos:start="61:24" pos:end="61:28">l_nnz</name><index pos:start="61:29" pos:end="61:31">[<expr pos:start="61:30" pos:end="61:30"><name pos:start="61:30" pos:end="61:30">y</name></expr>]</index></name> <operator pos:start="61:33" pos:end="61:33">+</operator> <name pos:start="61:35" pos:end="61:42"><name pos:start="61:35" pos:end="61:39">t_nnz</name><index pos:start="61:40" pos:end="61:42">[<expr pos:start="61:41" pos:end="61:41"><name pos:start="61:41" pos:end="61:41">x</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="69:66"><expr pos:start="63:13" pos:end="69:65"><name pos:start="63:13" pos:end="63:15">nnz</name> <operator pos:start="63:17" pos:end="63:17">=</operator> <call pos:start="63:19" pos:end="69:65"><name pos:start="63:19" pos:end="63:37">decode_block_coeffs</name><argument_list pos:start="63:38" pos:end="69:65">(<argument pos:start="63:39" pos:end="63:39"><expr pos:start="63:39" pos:end="63:39"><name pos:start="63:39" pos:end="63:39">c</name></expr></argument>, <argument pos:start="63:42" pos:end="63:56"><expr pos:start="63:42" pos:end="63:56"><name pos:start="63:42" pos:end="63:56"><name pos:start="63:42" pos:end="63:43">td</name><operator pos:start="63:44" pos:end="63:45">-&gt;</operator><name pos:start="63:46" pos:end="63:50">block</name><index pos:start="63:51" pos:end="63:53">[<expr pos:start="63:52" pos:end="63:52"><name pos:start="63:52" pos:end="63:52">y</name></expr>]</index><index pos:start="63:54" pos:end="63:56">[<expr pos:start="63:55" pos:end="63:55"><name pos:start="63:55" pos:end="63:55">x</name></expr>]</index></name></expr></argument>,

                                      <argument pos:start="65:39" pos:end="65:62"><expr pos:start="65:39" pos:end="65:62"><name pos:start="65:39" pos:end="65:62"><name pos:start="65:39" pos:end="65:39">s</name><operator pos:start="65:40" pos:end="65:41">-&gt;</operator><name pos:start="65:42" pos:end="65:45">prob</name><operator pos:start="65:46" pos:end="65:47">-&gt;</operator><name pos:start="65:48" pos:end="65:52">token</name><index pos:start="65:53" pos:end="65:62">[<expr pos:start="65:54" pos:end="65:61"><name pos:start="65:54" pos:end="65:61">luma_ctx</name></expr>]</index></name></expr></argument>,

                                      <argument pos:start="67:39" pos:end="67:48"><expr pos:start="67:39" pos:end="67:48"><name pos:start="67:39" pos:end="67:48">luma_start</name></expr></argument>, <argument pos:start="67:51" pos:end="67:58"><expr pos:start="67:51" pos:end="67:58"><name pos:start="67:51" pos:end="67:58">nnz_pred</name></expr></argument>,

                                      <argument pos:start="69:39" pos:end="69:64"><expr pos:start="69:39" pos:end="69:64"><name pos:start="69:39" pos:end="69:54"><name pos:start="69:39" pos:end="69:39">s</name><operator pos:start="69:40" pos:end="69:41">-&gt;</operator><name pos:start="69:42" pos:end="69:45">qmat</name><index pos:start="69:46" pos:end="69:54">[<expr pos:start="69:47" pos:end="69:53"><name pos:start="69:47" pos:end="69:53">segment</name></expr>]</index></name><operator pos:start="69:55" pos:end="69:55">.</operator><name pos:start="69:56" pos:end="69:64">luma_qmul</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="71:13" pos:end="73:35">/* nnz+block_dc may be one more than the actual last index,

             * but we don't care */</comment>

            <expr_stmt pos:start="75:13" pos:end="75:60"><expr pos:start="75:13" pos:end="75:59"><name pos:start="75:13" pos:end="75:42"><name pos:start="75:13" pos:end="75:14">td</name><operator pos:start="75:15" pos:end="75:16">-&gt;</operator><name pos:start="75:17" pos:end="75:36">non_zero_count_cache</name><index pos:start="75:37" pos:end="75:39">[<expr pos:start="75:38" pos:end="75:38"><name pos:start="75:38" pos:end="75:38">y</name></expr>]</index><index pos:start="75:40" pos:end="75:42">[<expr pos:start="75:41" pos:end="75:41"><name pos:start="75:41" pos:end="75:41">x</name></expr>]</index></name> <operator pos:start="75:44" pos:end="75:44">=</operator> <name pos:start="75:46" pos:end="75:48">nnz</name> <operator pos:start="75:50" pos:end="75:50">+</operator> <name pos:start="75:52" pos:end="75:59">block_dc</name></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:40"><expr pos:start="77:13" pos:end="77:39"><name pos:start="77:13" pos:end="77:20"><name pos:start="77:13" pos:end="77:17">t_nnz</name><index pos:start="77:18" pos:end="77:20">[<expr pos:start="77:19" pos:end="77:19"><name pos:start="77:19" pos:end="77:19">x</name></expr>]</index></name> <operator pos:start="77:22" pos:end="77:22">=</operator> <name pos:start="77:24" pos:end="77:31"><name pos:start="77:24" pos:end="77:28">l_nnz</name><index pos:start="77:29" pos:end="77:31">[<expr pos:start="77:30" pos:end="77:30"><name pos:start="77:30" pos:end="77:30">y</name></expr>]</index></name> <operator pos:start="77:33" pos:end="77:33">=</operator> <operator pos:start="77:35" pos:end="77:35">!</operator><operator pos:start="77:36" pos:end="77:36">!</operator><name pos:start="77:37" pos:end="77:39">nnz</name></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:29"><expr pos:start="79:13" pos:end="79:28"><name pos:start="79:13" pos:end="79:21">nnz_total</name> <operator pos:start="79:23" pos:end="79:24">+=</operator> <name pos:start="79:26" pos:end="79:28">nnz</name></expr>;</expr_stmt>

        </block_content>}</block></for></block_content></block></for>



    <comment type="line" pos:start="85:5" pos:end="85:20">// chroma blocks</comment>

    <comment type="line" pos:start="87:5" pos:end="87:64">// TODO: what to do about dimensions? 2nd dim for luma is x,</comment>

    <comment type="line" pos:start="89:5" pos:end="89:35">// but for chroma it's (y&lt;&lt;1)|x</comment>

    <for pos:start="91:5" pos:end="113:13">for <control pos:start="91:9" pos:end="91:27">(<init pos:start="91:10" pos:end="91:15"><expr pos:start="91:10" pos:end="91:14"><name pos:start="91:10" pos:end="91:10">i</name> <operator pos:start="91:12" pos:end="91:12">=</operator> <literal type="number" pos:start="91:14" pos:end="91:14">4</literal></expr>;</init> <condition pos:start="91:17" pos:end="91:22"><expr pos:start="91:17" pos:end="91:21"><name pos:start="91:17" pos:end="91:17">i</name> <operator pos:start="91:19" pos:end="91:19">&lt;</operator> <literal type="number" pos:start="91:21" pos:end="91:21">6</literal></expr>;</condition> <incr pos:start="91:24" pos:end="91:26"><expr pos:start="91:24" pos:end="91:26"><name pos:start="91:24" pos:end="91:24">i</name><operator pos:start="91:25" pos:end="91:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="93:9" pos:end="113:13"><block_content pos:start="93:9" pos:end="113:13">

        <for pos:start="93:9" pos:end="113:13">for <control pos:start="93:13" pos:end="93:31">(<init pos:start="93:14" pos:end="93:19"><expr pos:start="93:14" pos:end="93:18"><name pos:start="93:14" pos:end="93:14">y</name> <operator pos:start="93:16" pos:end="93:16">=</operator> <literal type="number" pos:start="93:18" pos:end="93:18">0</literal></expr>;</init> <condition pos:start="93:21" pos:end="93:26"><expr pos:start="93:21" pos:end="93:25"><name pos:start="93:21" pos:end="93:21">y</name> <operator pos:start="93:23" pos:end="93:23">&lt;</operator> <literal type="number" pos:start="93:25" pos:end="93:25">2</literal></expr>;</condition> <incr pos:start="93:28" pos:end="93:30"><expr pos:start="93:28" pos:end="93:30"><name pos:start="93:28" pos:end="93:28">y</name><operator pos:start="93:29" pos:end="93:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="95:13" pos:end="113:13"><block_content pos:start="95:13" pos:end="113:13">

            <for pos:start="95:13" pos:end="113:13">for <control pos:start="95:17" pos:end="95:35">(<init pos:start="95:18" pos:end="95:23"><expr pos:start="95:18" pos:end="95:22"><name pos:start="95:18" pos:end="95:18">x</name> <operator pos:start="95:20" pos:end="95:20">=</operator> <literal type="number" pos:start="95:22" pos:end="95:22">0</literal></expr>;</init> <condition pos:start="95:25" pos:end="95:30"><expr pos:start="95:25" pos:end="95:29"><name pos:start="95:25" pos:end="95:25">x</name> <operator pos:start="95:27" pos:end="95:27">&lt;</operator> <literal type="number" pos:start="95:29" pos:end="95:29">2</literal></expr>;</condition> <incr pos:start="95:32" pos:end="95:34"><expr pos:start="95:32" pos:end="95:34"><name pos:start="95:32" pos:end="95:32">x</name><operator pos:start="95:33" pos:end="95:34">++</operator></expr></incr>)</control> <block pos:start="95:37" pos:end="113:13">{<block_content pos:start="97:17" pos:end="111:39">

                <expr_stmt pos:start="97:17" pos:end="97:63"><expr pos:start="97:17" pos:end="97:62"><name pos:start="97:17" pos:end="97:24">nnz_pred</name> <operator pos:start="97:26" pos:end="97:26">=</operator> <name pos:start="97:28" pos:end="97:43"><name pos:start="97:28" pos:end="97:32">l_nnz</name><index pos:start="97:33" pos:end="97:43">[<expr pos:start="97:34" pos:end="97:42"><name pos:start="97:34" pos:end="97:34">i</name> <operator pos:start="97:36" pos:end="97:36">+</operator> <literal type="number" pos:start="97:38" pos:end="97:38">2</literal> <operator pos:start="97:40" pos:end="97:40">*</operator> <name pos:start="97:42" pos:end="97:42">y</name></expr>]</index></name> <operator pos:start="97:45" pos:end="97:45">+</operator> <name pos:start="97:47" pos:end="97:62"><name pos:start="97:47" pos:end="97:51">t_nnz</name><index pos:start="97:52" pos:end="97:62">[<expr pos:start="97:53" pos:end="97:61"><name pos:start="97:53" pos:end="97:53">i</name> <operator pos:start="97:55" pos:end="97:55">+</operator> <literal type="number" pos:start="97:57" pos:end="97:57">2</literal> <operator pos:start="97:59" pos:end="97:59">*</operator> <name pos:start="97:61" pos:end="97:61">x</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="99:17" pos:end="105:77"><expr pos:start="99:17" pos:end="105:76"><name pos:start="99:17" pos:end="99:19">nnz</name>      <operator pos:start="99:26" pos:end="99:26">=</operator> <call pos:start="99:28" pos:end="105:76"><name pos:start="99:28" pos:end="99:46">decode_block_coeffs</name><argument_list pos:start="99:47" pos:end="105:76">(<argument pos:start="99:48" pos:end="99:48"><expr pos:start="99:48" pos:end="99:48"><name pos:start="99:48" pos:end="99:48">c</name></expr></argument>, <argument pos:start="99:51" pos:end="99:76"><expr pos:start="99:51" pos:end="99:76"><name pos:start="99:51" pos:end="99:76"><name pos:start="99:51" pos:end="99:52">td</name><operator pos:start="99:53" pos:end="99:54">-&gt;</operator><name pos:start="99:55" pos:end="99:59">block</name><index pos:start="99:60" pos:end="99:62">[<expr pos:start="99:61" pos:end="99:61"><name pos:start="99:61" pos:end="99:61">i</name></expr>]</index><index pos:start="99:63" pos:end="99:76">[<expr pos:start="99:64" pos:end="99:75"><operator pos:start="99:64" pos:end="99:64">(</operator><name pos:start="99:65" pos:end="99:65">y</name> <operator pos:start="99:67" pos:end="99:68">&lt;&lt;</operator> <literal type="number" pos:start="99:70" pos:end="99:70">1</literal><operator pos:start="99:71" pos:end="99:71">)</operator> <operator pos:start="99:73" pos:end="99:73">+</operator> <name pos:start="99:75" pos:end="99:75">x</name></expr>]</index></name></expr></argument>,

                                               <argument pos:start="101:48" pos:end="101:64"><expr pos:start="101:48" pos:end="101:64"><name pos:start="101:48" pos:end="101:64"><name pos:start="101:48" pos:end="101:48">s</name><operator pos:start="101:49" pos:end="101:50">-&gt;</operator><name pos:start="101:51" pos:end="101:54">prob</name><operator pos:start="101:55" pos:end="101:56">-&gt;</operator><name pos:start="101:57" pos:end="101:61">token</name><index pos:start="101:62" pos:end="101:64">[<expr pos:start="101:63" pos:end="101:63"><literal type="number" pos:start="101:63" pos:end="101:63">2</literal></expr>]</index></name></expr></argument>,

                                               <argument pos:start="103:48" pos:end="103:48"><expr pos:start="103:48" pos:end="103:48"><literal type="number" pos:start="103:48" pos:end="103:48">0</literal></expr></argument>, <argument pos:start="103:51" pos:end="103:58"><expr pos:start="103:51" pos:end="103:58"><name pos:start="103:51" pos:end="103:58">nnz_pred</name></expr></argument>,

                                               <argument pos:start="105:48" pos:end="105:75"><expr pos:start="105:48" pos:end="105:75"><name pos:start="105:48" pos:end="105:63"><name pos:start="105:48" pos:end="105:48">s</name><operator pos:start="105:49" pos:end="105:50">-&gt;</operator><name pos:start="105:51" pos:end="105:54">qmat</name><index pos:start="105:55" pos:end="105:63">[<expr pos:start="105:56" pos:end="105:62"><name pos:start="105:56" pos:end="105:62">segment</name></expr>]</index></name><operator pos:start="105:64" pos:end="105:64">.</operator><name pos:start="105:65" pos:end="105:75">chroma_qmul</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="107:17" pos:end="107:64"><expr pos:start="107:17" pos:end="107:63"><name pos:start="107:17" pos:end="107:57"><name pos:start="107:17" pos:end="107:18">td</name><operator pos:start="107:19" pos:end="107:20">-&gt;</operator><name pos:start="107:21" pos:end="107:40">non_zero_count_cache</name><index pos:start="107:41" pos:end="107:43">[<expr pos:start="107:42" pos:end="107:42"><name pos:start="107:42" pos:end="107:42">i</name></expr>]</index><index pos:start="107:44" pos:end="107:57">[<expr pos:start="107:45" pos:end="107:56"><operator pos:start="107:45" pos:end="107:45">(</operator><name pos:start="107:46" pos:end="107:46">y</name> <operator pos:start="107:48" pos:end="107:49">&lt;&lt;</operator> <literal type="number" pos:start="107:51" pos:end="107:51">1</literal><operator pos:start="107:52" pos:end="107:52">)</operator> <operator pos:start="107:54" pos:end="107:54">+</operator> <name pos:start="107:56" pos:end="107:56">x</name></expr>]</index></name> <operator pos:start="107:59" pos:end="107:59">=</operator> <name pos:start="107:61" pos:end="107:63">nnz</name></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="109:60"><expr pos:start="109:17" pos:end="109:59"><name pos:start="109:17" pos:end="109:32"><name pos:start="109:17" pos:end="109:21">t_nnz</name><index pos:start="109:22" pos:end="109:32">[<expr pos:start="109:23" pos:end="109:31"><name pos:start="109:23" pos:end="109:23">i</name> <operator pos:start="109:25" pos:end="109:25">+</operator> <literal type="number" pos:start="109:27" pos:end="109:27">2</literal> <operator pos:start="109:29" pos:end="109:29">*</operator> <name pos:start="109:31" pos:end="109:31">x</name></expr>]</index></name> <operator pos:start="109:34" pos:end="109:34">=</operator> <name pos:start="109:36" pos:end="109:51"><name pos:start="109:36" pos:end="109:40">l_nnz</name><index pos:start="109:41" pos:end="109:51">[<expr pos:start="109:42" pos:end="109:50"><name pos:start="109:42" pos:end="109:42">i</name> <operator pos:start="109:44" pos:end="109:44">+</operator> <literal type="number" pos:start="109:46" pos:end="109:46">2</literal> <operator pos:start="109:48" pos:end="109:48">*</operator> <name pos:start="109:50" pos:end="109:50">y</name></expr>]</index></name> <operator pos:start="109:53" pos:end="109:53">=</operator> <operator pos:start="109:55" pos:end="109:55">!</operator><operator pos:start="109:56" pos:end="109:56">!</operator><name pos:start="109:57" pos:end="109:59">nnz</name></expr>;</expr_stmt>

                <expr_stmt pos:start="111:17" pos:end="111:39"><expr pos:start="111:17" pos:end="111:38"><name pos:start="111:17" pos:end="111:25">nnz_total</name>       <operator pos:start="111:33" pos:end="111:34">+=</operator> <name pos:start="111:36" pos:end="111:38">nnz</name></expr>;</expr_stmt>

            </block_content>}</block></for></block_content></block></for></block_content></block></for>



    <comment type="line" pos:start="117:5" pos:end="117:82">// if there were no coded coeffs despite the macroblock not being marked skip,</comment>

    <comment type="line" pos:start="119:5" pos:end="119:66">// we MUST not do the inner loop filter and should not do IDCT</comment>

    <comment type="line" pos:start="121:5" pos:end="121:76">// Since skip isn't used for bitstream prediction, just manually set it.</comment>

    <if_stmt pos:start="123:5" pos:end="125:21"><if pos:start="123:5" pos:end="125:21">if <condition pos:start="123:8" pos:end="123:19">(<expr pos:start="123:9" pos:end="123:18"><operator pos:start="123:9" pos:end="123:9">!</operator><name pos:start="123:10" pos:end="123:18">nnz_total</name></expr>)</condition><block type="pseudo" pos:start="125:9" pos:end="125:21"><block_content pos:start="125:9" pos:end="125:21">

        <expr_stmt pos:start="125:9" pos:end="125:21"><expr pos:start="125:9" pos:end="125:20"><name pos:start="125:9" pos:end="125:16"><name pos:start="125:9" pos:end="125:10">mb</name><operator pos:start="125:11" pos:end="125:12">-&gt;</operator><name pos:start="125:13" pos:end="125:16">skip</name></name> <operator pos:start="125:18" pos:end="125:18">=</operator> <literal type="number" pos:start="125:20" pos:end="125:20">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
