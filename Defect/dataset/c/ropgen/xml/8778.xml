<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8778.c" pos:tabs="8"><function pos:start="1:1" pos:end="255:1"><type pos:start="1:1" pos:end="1:7"><name pos:start="1:1" pos:end="1:7">uint8_t</name></type> <name pos:start="1:9" pos:end="1:20">sd_read_data</name><parameter_list pos:start="1:21" pos:end="1:33">(<parameter pos:start="1:22" pos:end="1:32"><decl pos:start="1:22" pos:end="1:32"><type pos:start="1:22" pos:end="1:30"><name pos:start="1:22" pos:end="1:28">SDState</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:32">sd</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="255:1">{<block_content pos:start="7:5" pos:end="253:15">

    <comment type="block" pos:start="5:5" pos:end="5:27">/* TODO: Append CRCs */</comment>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:15">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">io_len</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:20"><if pos:start="13:5" pos:end="15:20">if <condition pos:start="13:8" pos:end="13:61">(<expr pos:start="13:9" pos:end="13:60"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:16"><name pos:start="13:10" pos:end="13:11">sd</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:16">blk</name></name> <operator pos:start="13:18" pos:end="13:19">||</operator> <operator pos:start="13:21" pos:end="13:21">!</operator><call pos:start="13:22" pos:end="13:45"><name pos:start="13:22" pos:end="13:36">blk_is_inserted</name><argument_list pos:start="13:37" pos:end="13:45">(<argument pos:start="13:38" pos:end="13:44"><expr pos:start="13:38" pos:end="13:44"><name pos:start="13:38" pos:end="13:44"><name pos:start="13:38" pos:end="13:39">sd</name><operator pos:start="13:40" pos:end="13:41">-&gt;</operator><name pos:start="13:42" pos:end="13:44">blk</name></name></expr></argument>)</argument_list></call> <operator pos:start="13:47" pos:end="13:48">||</operator> <operator pos:start="13:50" pos:end="13:50">!</operator><name pos:start="13:51" pos:end="13:60"><name pos:start="13:51" pos:end="13:52">sd</name><operator pos:start="13:53" pos:end="13:54">-&gt;</operator><name pos:start="13:55" pos:end="13:60">enable</name></name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:20"><block_content pos:start="15:9" pos:end="15:20">

        <return pos:start="15:9" pos:end="15:20">return <expr pos:start="15:16" pos:end="15:19"><literal type="number" pos:start="15:16" pos:end="15:19">0x00</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="19:5" pos:end="27:5"><if pos:start="19:5" pos:end="27:5">if <condition pos:start="19:8" pos:end="19:42">(<expr pos:start="19:9" pos:end="19:41"><name pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:10">sd</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:17">state</name></name> <operator pos:start="19:19" pos:end="19:20">!=</operator> <name pos:start="19:22" pos:end="19:41">sd_sendingdata_state</name></expr>)</condition> <block pos:start="19:44" pos:end="27:5">{<block_content pos:start="21:9" pos:end="25:20">

        <expr_stmt pos:start="21:9" pos:end="23:67"><expr pos:start="21:9" pos:end="23:66"><call pos:start="21:9" pos:end="23:66"><name pos:start="21:9" pos:end="21:21">qemu_log_mask</name><argument_list pos:start="21:22" pos:end="23:66">(<argument pos:start="21:23" pos:end="21:37"><expr pos:start="21:23" pos:end="21:37"><name pos:start="21:23" pos:end="21:37">LOG_GUEST_ERROR</name></expr></argument>,

                      <argument pos:start="23:23" pos:end="23:65"><expr pos:start="23:23" pos:end="23:65"><literal type="string" pos:start="23:23" pos:end="23:65">"sd_read_data: not in Sending-Data state\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:20">return <expr pos:start="25:16" pos:end="25:19"><literal type="number" pos:start="25:16" pos:end="25:19">0x00</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="33:20"><if pos:start="31:5" pos:end="33:20">if <condition pos:start="31:8" pos:end="31:57">(<expr pos:start="31:9" pos:end="31:56"><name pos:start="31:9" pos:end="31:23"><name pos:start="31:9" pos:end="31:10">sd</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:23">card_status</name></name> <operator pos:start="31:25" pos:end="31:25">&amp;</operator> <operator pos:start="31:27" pos:end="31:27">(</operator><name pos:start="31:28" pos:end="31:40">ADDRESS_ERROR</name> <operator pos:start="31:42" pos:end="31:42">|</operator> <name pos:start="31:44" pos:end="31:55">WP_VIOLATION</name><operator pos:start="31:56" pos:end="31:56">)</operator></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:20"><block_content pos:start="33:9" pos:end="33:20">

        <return pos:start="33:9" pos:end="33:20">return <expr pos:start="33:16" pos:end="33:19"><literal type="number" pos:start="33:16" pos:end="33:19">0x00</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:55"><expr pos:start="37:5" pos:end="37:54"><name pos:start="37:5" pos:end="37:10">io_len</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <ternary pos:start="37:14" pos:end="37:54"><condition pos:start="37:14" pos:end="37:36"><expr pos:start="37:14" pos:end="37:34"><operator pos:start="37:14" pos:end="37:14">(</operator><name pos:start="37:15" pos:end="37:21"><name pos:start="37:15" pos:end="37:16">sd</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:21">ocr</name></name> <operator pos:start="37:23" pos:end="37:23">&amp;</operator> <operator pos:start="37:25" pos:end="37:25">(</operator><literal type="number" pos:start="37:26" pos:end="37:26">1</literal> <operator pos:start="37:28" pos:end="37:29">&lt;&lt;</operator> <literal type="number" pos:start="37:31" pos:end="37:32">30</literal><operator pos:start="37:33" pos:end="37:33">)</operator><operator pos:start="37:34" pos:end="37:34">)</operator></expr> ?</condition><then pos:start="37:38" pos:end="37:40"> <expr pos:start="37:38" pos:end="37:40"><literal type="number" pos:start="37:38" pos:end="37:40">512</literal></expr> </then><else pos:start="37:42" pos:end="37:54">: <expr pos:start="37:44" pos:end="37:54"><name pos:start="37:44" pos:end="37:54"><name pos:start="37:44" pos:end="37:45">sd</name><operator pos:start="37:46" pos:end="37:47">-&gt;</operator><name pos:start="37:48" pos:end="37:54">blk_len</name></name></expr></else></ternary></expr>;</expr_stmt>



    <switch pos:start="41:5" pos:end="249:5">switch <condition pos:start="41:12" pos:end="41:28">(<expr pos:start="41:13" pos:end="41:27"><name pos:start="41:13" pos:end="41:27"><name pos:start="41:13" pos:end="41:14">sd</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:27">current_cmd</name></name></expr>)</condition> <block pos:start="41:30" pos:end="249:5">{<block_content pos:start="43:5" pos:end="247:20">

    <case pos:start="43:5" pos:end="43:11">case <expr pos:start="43:10" pos:end="43:10"><literal type="number" pos:start="43:10" pos:end="43:10">6</literal></expr>:</case>	<comment type="block" pos:start="43:17" pos:end="43:45">/* CMD6:   SWITCH_FUNCTION */</comment>

        <expr_stmt pos:start="45:9" pos:end="45:43"><expr pos:start="45:9" pos:end="45:42"><name pos:start="45:9" pos:end="45:11">ret</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <name pos:start="45:15" pos:end="45:42"><name pos:start="45:15" pos:end="45:16">sd</name><operator pos:start="45:17" pos:end="45:18">-&gt;</operator><name pos:start="45:19" pos:end="45:22">data</name><index pos:start="45:23" pos:end="45:42">[<expr pos:start="45:24" pos:end="45:41"><name pos:start="45:24" pos:end="45:38"><name pos:start="45:24" pos:end="45:25">sd</name><operator pos:start="45:26" pos:end="45:27">-&gt;</operator><name pos:start="45:28" pos:end="45:38">data_offset</name></name> <operator pos:start="45:40" pos:end="45:41">++</operator></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="49:9" pos:end="51:42"><if pos:start="49:9" pos:end="51:42">if <condition pos:start="49:12" pos:end="49:34">(<expr pos:start="49:13" pos:end="49:33"><name pos:start="49:13" pos:end="49:27"><name pos:start="49:13" pos:end="49:14">sd</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:27">data_offset</name></name> <operator pos:start="49:29" pos:end="49:30">&gt;=</operator> <literal type="number" pos:start="49:32" pos:end="49:33">64</literal></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:42"><block_content pos:start="51:13" pos:end="51:42">

            <expr_stmt pos:start="51:13" pos:end="51:42"><expr pos:start="51:13" pos:end="51:41"><name pos:start="51:13" pos:end="51:21"><name pos:start="51:13" pos:end="51:14">sd</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:21">state</name></name> <operator pos:start="51:23" pos:end="51:23">=</operator> <name pos:start="51:25" pos:end="51:41">sd_transfer_state</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>



    <case pos:start="57:5" pos:end="57:11">case <expr pos:start="57:10" pos:end="57:10"><literal type="number" pos:start="57:10" pos:end="57:10">9</literal></expr>:</case>	<comment type="block" pos:start="57:17" pos:end="57:38">/* CMD9:   SEND_CSD */</comment>

    <case pos:start="59:5" pos:end="59:12">case <expr pos:start="59:10" pos:end="59:11"><literal type="number" pos:start="59:10" pos:end="59:11">10</literal></expr>:</case>	<comment type="block" pos:start="59:17" pos:end="59:38">/* CMD10:  SEND_CID */</comment>

        <expr_stmt pos:start="61:9" pos:end="61:43"><expr pos:start="61:9" pos:end="61:42"><name pos:start="61:9" pos:end="61:11">ret</name> <operator pos:start="61:13" pos:end="61:13">=</operator> <name pos:start="61:15" pos:end="61:42"><name pos:start="61:15" pos:end="61:16">sd</name><operator pos:start="61:17" pos:end="61:18">-&gt;</operator><name pos:start="61:19" pos:end="61:22">data</name><index pos:start="61:23" pos:end="61:42">[<expr pos:start="61:24" pos:end="61:41"><name pos:start="61:24" pos:end="61:38"><name pos:start="61:24" pos:end="61:25">sd</name><operator pos:start="61:26" pos:end="61:27">-&gt;</operator><name pos:start="61:28" pos:end="61:38">data_offset</name></name> <operator pos:start="61:40" pos:end="61:41">++</operator></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="65:9" pos:end="67:42"><if pos:start="65:9" pos:end="67:42">if <condition pos:start="65:12" pos:end="65:34">(<expr pos:start="65:13" pos:end="65:33"><name pos:start="65:13" pos:end="65:27"><name pos:start="65:13" pos:end="65:14">sd</name><operator pos:start="65:15" pos:end="65:16">-&gt;</operator><name pos:start="65:17" pos:end="65:27">data_offset</name></name> <operator pos:start="65:29" pos:end="65:30">&gt;=</operator> <literal type="number" pos:start="65:32" pos:end="65:33">16</literal></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:42"><block_content pos:start="67:13" pos:end="67:42">

            <expr_stmt pos:start="67:13" pos:end="67:42"><expr pos:start="67:13" pos:end="67:41"><name pos:start="67:13" pos:end="67:21"><name pos:start="67:13" pos:end="67:14">sd</name><operator pos:start="67:15" pos:end="67:16">-&gt;</operator><name pos:start="67:17" pos:end="67:21">state</name></name> <operator pos:start="67:23" pos:end="67:23">=</operator> <name pos:start="67:25" pos:end="67:41">sd_transfer_state</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="69:9" pos:end="69:14">break;</break>



    <case pos:start="73:5" pos:end="73:12">case <expr pos:start="73:10" pos:end="73:11"><literal type="number" pos:start="73:10" pos:end="73:11">11</literal></expr>:</case>	<comment type="block" pos:start="73:17" pos:end="73:49">/* CMD11:  READ_DAT_UNTIL_STOP */</comment>

        <if_stmt pos:start="75:9" pos:end="77:51"><if pos:start="75:9" pos:end="77:51">if <condition pos:start="75:12" pos:end="75:33">(<expr pos:start="75:13" pos:end="75:32"><name pos:start="75:13" pos:end="75:27"><name pos:start="75:13" pos:end="75:14">sd</name><operator pos:start="75:15" pos:end="75:16">-&gt;</operator><name pos:start="75:17" pos:end="75:27">data_offset</name></name> <operator pos:start="75:29" pos:end="75:30">==</operator> <literal type="number" pos:start="75:32" pos:end="75:32">0</literal></expr>)</condition><block type="pseudo" pos:start="77:13" pos:end="77:51"><block_content pos:start="77:13" pos:end="77:51">

            <expr_stmt pos:start="77:13" pos:end="77:51"><expr pos:start="77:13" pos:end="77:50"><call pos:start="77:13" pos:end="77:50"><name pos:start="77:13" pos:end="77:26">BLK_READ_BLOCK</name><argument_list pos:start="77:27" pos:end="77:50">(<argument pos:start="77:28" pos:end="77:41"><expr pos:start="77:28" pos:end="77:41"><name pos:start="77:28" pos:end="77:41"><name pos:start="77:28" pos:end="77:29">sd</name><operator pos:start="77:30" pos:end="77:31">-&gt;</operator><name pos:start="77:32" pos:end="77:41">data_start</name></name></expr></argument>, <argument pos:start="77:44" pos:end="77:49"><expr pos:start="77:44" pos:end="77:49"><name pos:start="77:44" pos:end="77:49">io_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:43"><expr pos:start="79:9" pos:end="79:42"><name pos:start="79:9" pos:end="79:11">ret</name> <operator pos:start="79:13" pos:end="79:13">=</operator> <name pos:start="79:15" pos:end="79:42"><name pos:start="79:15" pos:end="79:16">sd</name><operator pos:start="79:17" pos:end="79:18">-&gt;</operator><name pos:start="79:19" pos:end="79:22">data</name><index pos:start="79:23" pos:end="79:42">[<expr pos:start="79:24" pos:end="79:41"><name pos:start="79:24" pos:end="79:38"><name pos:start="79:24" pos:end="79:25">sd</name><operator pos:start="79:26" pos:end="79:27">-&gt;</operator><name pos:start="79:28" pos:end="79:38">data_offset</name></name> <operator pos:start="79:40" pos:end="79:41">++</operator></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="83:9" pos:end="97:9"><if pos:start="83:9" pos:end="97:9">if <condition pos:start="83:12" pos:end="83:38">(<expr pos:start="83:13" pos:end="83:37"><name pos:start="83:13" pos:end="83:27"><name pos:start="83:13" pos:end="83:14">sd</name><operator pos:start="83:15" pos:end="83:16">-&gt;</operator><name pos:start="83:17" pos:end="83:27">data_offset</name></name> <operator pos:start="83:29" pos:end="83:30">&gt;=</operator> <name pos:start="83:32" pos:end="83:37">io_len</name></expr>)</condition> <block pos:start="83:40" pos:end="97:9">{<block_content pos:start="85:13" pos:end="95:13">

            <expr_stmt pos:start="85:13" pos:end="85:37"><expr pos:start="85:13" pos:end="85:36"><name pos:start="85:13" pos:end="85:26"><name pos:start="85:13" pos:end="85:14">sd</name><operator pos:start="85:15" pos:end="85:16">-&gt;</operator><name pos:start="85:17" pos:end="85:26">data_start</name></name> <operator pos:start="85:28" pos:end="85:29">+=</operator> <name pos:start="85:31" pos:end="85:36">io_len</name></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:32"><expr pos:start="87:13" pos:end="87:31"><name pos:start="87:13" pos:end="87:27"><name pos:start="87:13" pos:end="87:14">sd</name><operator pos:start="87:15" pos:end="87:16">-&gt;</operator><name pos:start="87:17" pos:end="87:27">data_offset</name></name> <operator pos:start="87:29" pos:end="87:29">=</operator> <literal type="number" pos:start="87:31" pos:end="87:31">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="89:13" pos:end="95:13"><if pos:start="89:13" pos:end="95:13">if <condition pos:start="89:16" pos:end="89:51">(<expr pos:start="89:17" pos:end="89:50"><name pos:start="89:17" pos:end="89:30"><name pos:start="89:17" pos:end="89:18">sd</name><operator pos:start="89:19" pos:end="89:20">-&gt;</operator><name pos:start="89:21" pos:end="89:30">data_start</name></name> <operator pos:start="89:32" pos:end="89:32">+</operator> <name pos:start="89:34" pos:end="89:39">io_len</name> <operator pos:start="89:41" pos:end="89:41">&gt;</operator> <name pos:start="89:43" pos:end="89:50"><name pos:start="89:43" pos:end="89:44">sd</name><operator pos:start="89:45" pos:end="89:46">-&gt;</operator><name pos:start="89:47" pos:end="89:50">size</name></name></expr>)</condition> <block pos:start="89:53" pos:end="95:13">{<block_content pos:start="91:17" pos:end="93:22">

                <expr_stmt pos:start="91:17" pos:end="91:49"><expr pos:start="91:17" pos:end="91:48"><name pos:start="91:17" pos:end="91:31"><name pos:start="91:17" pos:end="91:18">sd</name><operator pos:start="91:19" pos:end="91:20">-&gt;</operator><name pos:start="91:21" pos:end="91:31">card_status</name></name> <operator pos:start="91:33" pos:end="91:34">|=</operator> <name pos:start="91:36" pos:end="91:48">ADDRESS_ERROR</name></expr>;</expr_stmt>

                <break pos:start="93:17" pos:end="93:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="99:9" pos:end="99:14">break;</break>



    <case pos:start="103:5" pos:end="103:12">case <expr pos:start="103:10" pos:end="103:11"><literal type="number" pos:start="103:10" pos:end="103:11">13</literal></expr>:</case>	<comment type="block" pos:start="103:17" pos:end="103:39">/* ACMD13: SD_STATUS */</comment>

        <expr_stmt pos:start="105:9" pos:end="105:48"><expr pos:start="105:9" pos:end="105:47"><name pos:start="105:9" pos:end="105:11">ret</name> <operator pos:start="105:13" pos:end="105:13">=</operator> <name pos:start="105:15" pos:end="105:47"><name pos:start="105:15" pos:end="105:16">sd</name><operator pos:start="105:17" pos:end="105:18">-&gt;</operator><name pos:start="105:19" pos:end="105:27">sd_status</name><index pos:start="105:28" pos:end="105:47">[<expr pos:start="105:29" pos:end="105:46"><name pos:start="105:29" pos:end="105:43"><name pos:start="105:29" pos:end="105:30">sd</name><operator pos:start="105:31" pos:end="105:32">-&gt;</operator><name pos:start="105:33" pos:end="105:43">data_offset</name></name> <operator pos:start="105:45" pos:end="105:46">++</operator></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="109:9" pos:end="111:42"><if pos:start="109:9" pos:end="111:42">if <condition pos:start="109:12" pos:end="109:53">(<expr pos:start="109:13" pos:end="109:52"><name pos:start="109:13" pos:end="109:27"><name pos:start="109:13" pos:end="109:14">sd</name><operator pos:start="109:15" pos:end="109:16">-&gt;</operator><name pos:start="109:17" pos:end="109:27">data_offset</name></name> <operator pos:start="109:29" pos:end="109:30">&gt;=</operator> <sizeof pos:start="109:32" pos:end="109:52">sizeof<argument_list pos:start="109:38" pos:end="109:52">(<argument pos:start="109:39" pos:end="109:51"><expr pos:start="109:39" pos:end="109:51"><name pos:start="109:39" pos:end="109:51"><name pos:start="109:39" pos:end="109:40">sd</name><operator pos:start="109:41" pos:end="109:42">-&gt;</operator><name pos:start="109:43" pos:end="109:51">sd_status</name></name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="111:13" pos:end="111:42"><block_content pos:start="111:13" pos:end="111:42">

            <expr_stmt pos:start="111:13" pos:end="111:42"><expr pos:start="111:13" pos:end="111:41"><name pos:start="111:13" pos:end="111:21"><name pos:start="111:13" pos:end="111:14">sd</name><operator pos:start="111:15" pos:end="111:16">-&gt;</operator><name pos:start="111:17" pos:end="111:21">state</name></name> <operator pos:start="111:23" pos:end="111:23">=</operator> <name pos:start="111:25" pos:end="111:41">sd_transfer_state</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="113:9" pos:end="113:14">break;</break>



    <case pos:start="117:5" pos:end="117:12">case <expr pos:start="117:10" pos:end="117:11"><literal type="number" pos:start="117:10" pos:end="117:11">17</literal></expr>:</case>	<comment type="block" pos:start="117:17" pos:end="117:47">/* CMD17:  READ_SINGLE_BLOCK */</comment>

        <if_stmt pos:start="119:9" pos:end="121:51"><if pos:start="119:9" pos:end="121:51">if <condition pos:start="119:12" pos:end="119:33">(<expr pos:start="119:13" pos:end="119:32"><name pos:start="119:13" pos:end="119:27"><name pos:start="119:13" pos:end="119:14">sd</name><operator pos:start="119:15" pos:end="119:16">-&gt;</operator><name pos:start="119:17" pos:end="119:27">data_offset</name></name> <operator pos:start="119:29" pos:end="119:30">==</operator> <literal type="number" pos:start="119:32" pos:end="119:32">0</literal></expr>)</condition><block type="pseudo" pos:start="121:13" pos:end="121:51"><block_content pos:start="121:13" pos:end="121:51">

            <expr_stmt pos:start="121:13" pos:end="121:51"><expr pos:start="121:13" pos:end="121:50"><call pos:start="121:13" pos:end="121:50"><name pos:start="121:13" pos:end="121:26">BLK_READ_BLOCK</name><argument_list pos:start="121:27" pos:end="121:50">(<argument pos:start="121:28" pos:end="121:41"><expr pos:start="121:28" pos:end="121:41"><name pos:start="121:28" pos:end="121:41"><name pos:start="121:28" pos:end="121:29">sd</name><operator pos:start="121:30" pos:end="121:31">-&gt;</operator><name pos:start="121:32" pos:end="121:41">data_start</name></name></expr></argument>, <argument pos:start="121:44" pos:end="121:49"><expr pos:start="121:44" pos:end="121:49"><name pos:start="121:44" pos:end="121:49">io_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:43"><expr pos:start="123:9" pos:end="123:42"><name pos:start="123:9" pos:end="123:11">ret</name> <operator pos:start="123:13" pos:end="123:13">=</operator> <name pos:start="123:15" pos:end="123:42"><name pos:start="123:15" pos:end="123:16">sd</name><operator pos:start="123:17" pos:end="123:18">-&gt;</operator><name pos:start="123:19" pos:end="123:22">data</name><index pos:start="123:23" pos:end="123:42">[<expr pos:start="123:24" pos:end="123:41"><name pos:start="123:24" pos:end="123:38"><name pos:start="123:24" pos:end="123:25">sd</name><operator pos:start="123:26" pos:end="123:27">-&gt;</operator><name pos:start="123:28" pos:end="123:38">data_offset</name></name> <operator pos:start="123:40" pos:end="123:41">++</operator></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="127:9" pos:end="129:42"><if pos:start="127:9" pos:end="129:42">if <condition pos:start="127:12" pos:end="127:38">(<expr pos:start="127:13" pos:end="127:37"><name pos:start="127:13" pos:end="127:27"><name pos:start="127:13" pos:end="127:14">sd</name><operator pos:start="127:15" pos:end="127:16">-&gt;</operator><name pos:start="127:17" pos:end="127:27">data_offset</name></name> <operator pos:start="127:29" pos:end="127:30">&gt;=</operator> <name pos:start="127:32" pos:end="127:37">io_len</name></expr>)</condition><block type="pseudo" pos:start="129:13" pos:end="129:42"><block_content pos:start="129:13" pos:end="129:42">

            <expr_stmt pos:start="129:13" pos:end="129:42"><expr pos:start="129:13" pos:end="129:41"><name pos:start="129:13" pos:end="129:21"><name pos:start="129:13" pos:end="129:14">sd</name><operator pos:start="129:15" pos:end="129:16">-&gt;</operator><name pos:start="129:17" pos:end="129:21">state</name></name> <operator pos:start="129:23" pos:end="129:23">=</operator> <name pos:start="129:25" pos:end="129:41">sd_transfer_state</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="131:9" pos:end="131:14">break;</break>



    <case pos:start="135:5" pos:end="135:12">case <expr pos:start="135:10" pos:end="135:11"><literal type="number" pos:start="135:10" pos:end="135:11">18</literal></expr>:</case>	<comment type="block" pos:start="135:17" pos:end="135:49">/* CMD18:  READ_MULTIPLE_BLOCK */</comment>

        <if_stmt pos:start="137:9" pos:end="139:51"><if pos:start="137:9" pos:end="139:51">if <condition pos:start="137:12" pos:end="137:33">(<expr pos:start="137:13" pos:end="137:32"><name pos:start="137:13" pos:end="137:27"><name pos:start="137:13" pos:end="137:14">sd</name><operator pos:start="137:15" pos:end="137:16">-&gt;</operator><name pos:start="137:17" pos:end="137:27">data_offset</name></name> <operator pos:start="137:29" pos:end="137:30">==</operator> <literal type="number" pos:start="137:32" pos:end="137:32">0</literal></expr>)</condition><block type="pseudo" pos:start="139:13" pos:end="139:51"><block_content pos:start="139:13" pos:end="139:51">

            <expr_stmt pos:start="139:13" pos:end="139:51"><expr pos:start="139:13" pos:end="139:50"><call pos:start="139:13" pos:end="139:50"><name pos:start="139:13" pos:end="139:26">BLK_READ_BLOCK</name><argument_list pos:start="139:27" pos:end="139:50">(<argument pos:start="139:28" pos:end="139:41"><expr pos:start="139:28" pos:end="139:41"><name pos:start="139:28" pos:end="139:41"><name pos:start="139:28" pos:end="139:29">sd</name><operator pos:start="139:30" pos:end="139:31">-&gt;</operator><name pos:start="139:32" pos:end="139:41">data_start</name></name></expr></argument>, <argument pos:start="139:44" pos:end="139:49"><expr pos:start="139:44" pos:end="139:49"><name pos:start="139:44" pos:end="139:49">io_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:43"><expr pos:start="141:9" pos:end="141:42"><name pos:start="141:9" pos:end="141:11">ret</name> <operator pos:start="141:13" pos:end="141:13">=</operator> <name pos:start="141:15" pos:end="141:42"><name pos:start="141:15" pos:end="141:16">sd</name><operator pos:start="141:17" pos:end="141:18">-&gt;</operator><name pos:start="141:19" pos:end="141:22">data</name><index pos:start="141:23" pos:end="141:42">[<expr pos:start="141:24" pos:end="141:41"><name pos:start="141:24" pos:end="141:38"><name pos:start="141:24" pos:end="141:25">sd</name><operator pos:start="141:26" pos:end="141:27">-&gt;</operator><name pos:start="141:28" pos:end="141:38">data_offset</name></name> <operator pos:start="141:40" pos:end="141:41">++</operator></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="145:9" pos:end="177:9"><if pos:start="145:9" pos:end="177:9">if <condition pos:start="145:12" pos:end="145:38">(<expr pos:start="145:13" pos:end="145:37"><name pos:start="145:13" pos:end="145:27"><name pos:start="145:13" pos:end="145:14">sd</name><operator pos:start="145:15" pos:end="145:16">-&gt;</operator><name pos:start="145:17" pos:end="145:27">data_offset</name></name> <operator pos:start="145:29" pos:end="145:30">&gt;=</operator> <name pos:start="145:32" pos:end="145:37">io_len</name></expr>)</condition> <block pos:start="145:40" pos:end="177:9">{<block_content pos:start="147:13" pos:end="175:13">

            <expr_stmt pos:start="147:13" pos:end="147:37"><expr pos:start="147:13" pos:end="147:36"><name pos:start="147:13" pos:end="147:26"><name pos:start="147:13" pos:end="147:14">sd</name><operator pos:start="147:15" pos:end="147:16">-&gt;</operator><name pos:start="147:17" pos:end="147:26">data_start</name></name> <operator pos:start="147:28" pos:end="147:29">+=</operator> <name pos:start="147:31" pos:end="147:36">io_len</name></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:32"><expr pos:start="149:13" pos:end="149:31"><name pos:start="149:13" pos:end="149:27"><name pos:start="149:13" pos:end="149:14">sd</name><operator pos:start="149:15" pos:end="149:16">-&gt;</operator><name pos:start="149:17" pos:end="149:27">data_offset</name></name> <operator pos:start="149:29" pos:end="149:29">=</operator> <literal type="number" pos:start="149:31" pos:end="149:31">0</literal></expr>;</expr_stmt>



            <if_stmt pos:start="153:13" pos:end="165:13"><if pos:start="153:13" pos:end="165:13">if <condition pos:start="153:16" pos:end="153:39">(<expr pos:start="153:17" pos:end="153:38"><name pos:start="153:17" pos:end="153:33"><name pos:start="153:17" pos:end="153:18">sd</name><operator pos:start="153:19" pos:end="153:20">-&gt;</operator><name pos:start="153:21" pos:end="153:33">multi_blk_cnt</name></name> <operator pos:start="153:35" pos:end="153:36">!=</operator> <literal type="number" pos:start="153:38" pos:end="153:38">0</literal></expr>)</condition> <block pos:start="153:41" pos:end="165:13">{<block_content pos:start="155:17" pos:end="163:17">

                <if_stmt pos:start="155:17" pos:end="163:17"><if pos:start="155:17" pos:end="163:17">if <condition pos:start="155:20" pos:end="155:45">(<expr pos:start="155:21" pos:end="155:44"><operator pos:start="155:21" pos:end="155:22">--</operator><name pos:start="155:23" pos:end="155:39"><name pos:start="155:23" pos:end="155:24">sd</name><operator pos:start="155:25" pos:end="155:26">-&gt;</operator><name pos:start="155:27" pos:end="155:39">multi_blk_cnt</name></name> <operator pos:start="155:41" pos:end="155:42">==</operator> <literal type="number" pos:start="155:44" pos:end="155:44">0</literal></expr>)</condition> <block pos:start="155:47" pos:end="163:17">{<block_content pos:start="159:21" pos:end="161:26">

                    <comment type="block" pos:start="157:21" pos:end="157:31">/* Stop! */</comment>

                    <expr_stmt pos:start="159:21" pos:end="159:50"><expr pos:start="159:21" pos:end="159:49"><name pos:start="159:21" pos:end="159:29"><name pos:start="159:21" pos:end="159:22">sd</name><operator pos:start="159:23" pos:end="159:24">-&gt;</operator><name pos:start="159:25" pos:end="159:29">state</name></name> <operator pos:start="159:31" pos:end="159:31">=</operator> <name pos:start="159:33" pos:end="159:49">sd_transfer_state</name></expr>;</expr_stmt>

                    <break pos:start="161:21" pos:end="161:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="169:13" pos:end="175:13"><if pos:start="169:13" pos:end="175:13">if <condition pos:start="169:16" pos:end="169:51">(<expr pos:start="169:17" pos:end="169:50"><name pos:start="169:17" pos:end="169:30"><name pos:start="169:17" pos:end="169:18">sd</name><operator pos:start="169:19" pos:end="169:20">-&gt;</operator><name pos:start="169:21" pos:end="169:30">data_start</name></name> <operator pos:start="169:32" pos:end="169:32">+</operator> <name pos:start="169:34" pos:end="169:39">io_len</name> <operator pos:start="169:41" pos:end="169:41">&gt;</operator> <name pos:start="169:43" pos:end="169:50"><name pos:start="169:43" pos:end="169:44">sd</name><operator pos:start="169:45" pos:end="169:46">-&gt;</operator><name pos:start="169:47" pos:end="169:50">size</name></name></expr>)</condition> <block pos:start="169:53" pos:end="175:13">{<block_content pos:start="171:17" pos:end="173:22">

                <expr_stmt pos:start="171:17" pos:end="171:49"><expr pos:start="171:17" pos:end="171:48"><name pos:start="171:17" pos:end="171:31"><name pos:start="171:17" pos:end="171:18">sd</name><operator pos:start="171:19" pos:end="171:20">-&gt;</operator><name pos:start="171:21" pos:end="171:31">card_status</name></name> <operator pos:start="171:33" pos:end="171:34">|=</operator> <name pos:start="171:36" pos:end="171:48">ADDRESS_ERROR</name></expr>;</expr_stmt>

                <break pos:start="173:17" pos:end="173:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="179:9" pos:end="179:14">break;</break>



    <case pos:start="183:5" pos:end="183:12">case <expr pos:start="183:10" pos:end="183:11"><literal type="number" pos:start="183:10" pos:end="183:11">22</literal></expr>:</case>	<comment type="block" pos:start="183:17" pos:end="183:48">/* ACMD22: SEND_NUM_WR_BLOCKS */</comment>

        <expr_stmt pos:start="185:9" pos:end="185:43"><expr pos:start="185:9" pos:end="185:42"><name pos:start="185:9" pos:end="185:11">ret</name> <operator pos:start="185:13" pos:end="185:13">=</operator> <name pos:start="185:15" pos:end="185:42"><name pos:start="185:15" pos:end="185:16">sd</name><operator pos:start="185:17" pos:end="185:18">-&gt;</operator><name pos:start="185:19" pos:end="185:22">data</name><index pos:start="185:23" pos:end="185:42">[<expr pos:start="185:24" pos:end="185:41"><name pos:start="185:24" pos:end="185:38"><name pos:start="185:24" pos:end="185:25">sd</name><operator pos:start="185:26" pos:end="185:27">-&gt;</operator><name pos:start="185:28" pos:end="185:38">data_offset</name></name> <operator pos:start="185:40" pos:end="185:41">++</operator></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="189:9" pos:end="191:42"><if pos:start="189:9" pos:end="191:42">if <condition pos:start="189:12" pos:end="189:33">(<expr pos:start="189:13" pos:end="189:32"><name pos:start="189:13" pos:end="189:27"><name pos:start="189:13" pos:end="189:14">sd</name><operator pos:start="189:15" pos:end="189:16">-&gt;</operator><name pos:start="189:17" pos:end="189:27">data_offset</name></name> <operator pos:start="189:29" pos:end="189:30">&gt;=</operator> <literal type="number" pos:start="189:32" pos:end="189:32">4</literal></expr>)</condition><block type="pseudo" pos:start="191:13" pos:end="191:42"><block_content pos:start="191:13" pos:end="191:42">

            <expr_stmt pos:start="191:13" pos:end="191:42"><expr pos:start="191:13" pos:end="191:41"><name pos:start="191:13" pos:end="191:21"><name pos:start="191:13" pos:end="191:14">sd</name><operator pos:start="191:15" pos:end="191:16">-&gt;</operator><name pos:start="191:17" pos:end="191:21">state</name></name> <operator pos:start="191:23" pos:end="191:23">=</operator> <name pos:start="191:25" pos:end="191:41">sd_transfer_state</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="193:9" pos:end="193:14">break;</break>



    <case pos:start="197:5" pos:end="197:12">case <expr pos:start="197:10" pos:end="197:11"><literal type="number" pos:start="197:10" pos:end="197:11">30</literal></expr>:</case>	<comment type="block" pos:start="197:17" pos:end="197:45">/* CMD30:  SEND_WRITE_PROT */</comment>

        <expr_stmt pos:start="199:9" pos:end="199:43"><expr pos:start="199:9" pos:end="199:42"><name pos:start="199:9" pos:end="199:11">ret</name> <operator pos:start="199:13" pos:end="199:13">=</operator> <name pos:start="199:15" pos:end="199:42"><name pos:start="199:15" pos:end="199:16">sd</name><operator pos:start="199:17" pos:end="199:18">-&gt;</operator><name pos:start="199:19" pos:end="199:22">data</name><index pos:start="199:23" pos:end="199:42">[<expr pos:start="199:24" pos:end="199:41"><name pos:start="199:24" pos:end="199:38"><name pos:start="199:24" pos:end="199:25">sd</name><operator pos:start="199:26" pos:end="199:27">-&gt;</operator><name pos:start="199:28" pos:end="199:38">data_offset</name></name> <operator pos:start="199:40" pos:end="199:41">++</operator></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="203:9" pos:end="205:42"><if pos:start="203:9" pos:end="205:42">if <condition pos:start="203:12" pos:end="203:33">(<expr pos:start="203:13" pos:end="203:32"><name pos:start="203:13" pos:end="203:27"><name pos:start="203:13" pos:end="203:14">sd</name><operator pos:start="203:15" pos:end="203:16">-&gt;</operator><name pos:start="203:17" pos:end="203:27">data_offset</name></name> <operator pos:start="203:29" pos:end="203:30">&gt;=</operator> <literal type="number" pos:start="203:32" pos:end="203:32">4</literal></expr>)</condition><block type="pseudo" pos:start="205:13" pos:end="205:42"><block_content pos:start="205:13" pos:end="205:42">

            <expr_stmt pos:start="205:13" pos:end="205:42"><expr pos:start="205:13" pos:end="205:41"><name pos:start="205:13" pos:end="205:21"><name pos:start="205:13" pos:end="205:14">sd</name><operator pos:start="205:15" pos:end="205:16">-&gt;</operator><name pos:start="205:17" pos:end="205:21">state</name></name> <operator pos:start="205:23" pos:end="205:23">=</operator> <name pos:start="205:25" pos:end="205:41">sd_transfer_state</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="207:9" pos:end="207:14">break;</break>



    <case pos:start="211:5" pos:end="211:12">case <expr pos:start="211:10" pos:end="211:11"><literal type="number" pos:start="211:10" pos:end="211:11">51</literal></expr>:</case>	<comment type="block" pos:start="211:17" pos:end="211:38">/* ACMD51: SEND_SCR */</comment>

        <expr_stmt pos:start="213:9" pos:end="213:42"><expr pos:start="213:9" pos:end="213:41"><name pos:start="213:9" pos:end="213:11">ret</name> <operator pos:start="213:13" pos:end="213:13">=</operator> <name pos:start="213:15" pos:end="213:41"><name pos:start="213:15" pos:end="213:16">sd</name><operator pos:start="213:17" pos:end="213:18">-&gt;</operator><name pos:start="213:19" pos:end="213:21">scr</name><index pos:start="213:22" pos:end="213:41">[<expr pos:start="213:23" pos:end="213:40"><name pos:start="213:23" pos:end="213:37"><name pos:start="213:23" pos:end="213:24">sd</name><operator pos:start="213:25" pos:end="213:26">-&gt;</operator><name pos:start="213:27" pos:end="213:37">data_offset</name></name> <operator pos:start="213:39" pos:end="213:40">++</operator></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="217:9" pos:end="219:42"><if pos:start="217:9" pos:end="219:42">if <condition pos:start="217:12" pos:end="217:47">(<expr pos:start="217:13" pos:end="217:46"><name pos:start="217:13" pos:end="217:27"><name pos:start="217:13" pos:end="217:14">sd</name><operator pos:start="217:15" pos:end="217:16">-&gt;</operator><name pos:start="217:17" pos:end="217:27">data_offset</name></name> <operator pos:start="217:29" pos:end="217:30">&gt;=</operator> <sizeof pos:start="217:32" pos:end="217:46">sizeof<argument_list pos:start="217:38" pos:end="217:46">(<argument pos:start="217:39" pos:end="217:45"><expr pos:start="217:39" pos:end="217:45"><name pos:start="217:39" pos:end="217:45"><name pos:start="217:39" pos:end="217:40">sd</name><operator pos:start="217:41" pos:end="217:42">-&gt;</operator><name pos:start="217:43" pos:end="217:45">scr</name></name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="219:13" pos:end="219:42"><block_content pos:start="219:13" pos:end="219:42">

            <expr_stmt pos:start="219:13" pos:end="219:42"><expr pos:start="219:13" pos:end="219:41"><name pos:start="219:13" pos:end="219:21"><name pos:start="219:13" pos:end="219:14">sd</name><operator pos:start="219:15" pos:end="219:16">-&gt;</operator><name pos:start="219:17" pos:end="219:21">state</name></name> <operator pos:start="219:23" pos:end="219:23">=</operator> <name pos:start="219:25" pos:end="219:41">sd_transfer_state</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="221:9" pos:end="221:14">break;</break>



    <case pos:start="225:5" pos:end="225:12">case <expr pos:start="225:10" pos:end="225:11"><literal type="number" pos:start="225:10" pos:end="225:11">56</literal></expr>:</case>	<comment type="block" pos:start="225:17" pos:end="225:37">/* CMD56:  GEN_CMD */</comment>

        <if_stmt pos:start="227:9" pos:end="229:56"><if pos:start="227:9" pos:end="229:56">if <condition pos:start="227:12" pos:end="227:33">(<expr pos:start="227:13" pos:end="227:32"><name pos:start="227:13" pos:end="227:27"><name pos:start="227:13" pos:end="227:14">sd</name><operator pos:start="227:15" pos:end="227:16">-&gt;</operator><name pos:start="227:17" pos:end="227:27">data_offset</name></name> <operator pos:start="227:29" pos:end="227:30">==</operator> <literal type="number" pos:start="227:32" pos:end="227:32">0</literal></expr>)</condition><block type="pseudo" pos:start="229:13" pos:end="229:56"><block_content pos:start="229:13" pos:end="229:56">

            <expr_stmt pos:start="229:13" pos:end="229:56"><expr pos:start="229:13" pos:end="229:55"><call pos:start="229:13" pos:end="229:55"><name pos:start="229:13" pos:end="229:26">APP_READ_BLOCK</name><argument_list pos:start="229:27" pos:end="229:55">(<argument pos:start="229:28" pos:end="229:41"><expr pos:start="229:28" pos:end="229:41"><name pos:start="229:28" pos:end="229:41"><name pos:start="229:28" pos:end="229:29">sd</name><operator pos:start="229:30" pos:end="229:31">-&gt;</operator><name pos:start="229:32" pos:end="229:41">data_start</name></name></expr></argument>, <argument pos:start="229:44" pos:end="229:54"><expr pos:start="229:44" pos:end="229:54"><name pos:start="229:44" pos:end="229:54"><name pos:start="229:44" pos:end="229:45">sd</name><operator pos:start="229:46" pos:end="229:47">-&gt;</operator><name pos:start="229:48" pos:end="229:54">blk_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="231:9" pos:end="231:43"><expr pos:start="231:9" pos:end="231:42"><name pos:start="231:9" pos:end="231:11">ret</name> <operator pos:start="231:13" pos:end="231:13">=</operator> <name pos:start="231:15" pos:end="231:42"><name pos:start="231:15" pos:end="231:16">sd</name><operator pos:start="231:17" pos:end="231:18">-&gt;</operator><name pos:start="231:19" pos:end="231:22">data</name><index pos:start="231:23" pos:end="231:42">[<expr pos:start="231:24" pos:end="231:41"><name pos:start="231:24" pos:end="231:38"><name pos:start="231:24" pos:end="231:25">sd</name><operator pos:start="231:26" pos:end="231:27">-&gt;</operator><name pos:start="231:28" pos:end="231:38">data_offset</name></name> <operator pos:start="231:40" pos:end="231:41">++</operator></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="235:9" pos:end="237:42"><if pos:start="235:9" pos:end="237:42">if <condition pos:start="235:12" pos:end="235:43">(<expr pos:start="235:13" pos:end="235:42"><name pos:start="235:13" pos:end="235:27"><name pos:start="235:13" pos:end="235:14">sd</name><operator pos:start="235:15" pos:end="235:16">-&gt;</operator><name pos:start="235:17" pos:end="235:27">data_offset</name></name> <operator pos:start="235:29" pos:end="235:30">&gt;=</operator> <name pos:start="235:32" pos:end="235:42"><name pos:start="235:32" pos:end="235:33">sd</name><operator pos:start="235:34" pos:end="235:35">-&gt;</operator><name pos:start="235:36" pos:end="235:42">blk_len</name></name></expr>)</condition><block type="pseudo" pos:start="237:13" pos:end="237:42"><block_content pos:start="237:13" pos:end="237:42">

            <expr_stmt pos:start="237:13" pos:end="237:42"><expr pos:start="237:13" pos:end="237:41"><name pos:start="237:13" pos:end="237:21"><name pos:start="237:13" pos:end="237:14">sd</name><operator pos:start="237:15" pos:end="237:16">-&gt;</operator><name pos:start="237:17" pos:end="237:21">state</name></name> <operator pos:start="237:23" pos:end="237:23">=</operator> <name pos:start="237:25" pos:end="237:41">sd_transfer_state</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="239:9" pos:end="239:14">break;</break>



    <default pos:start="243:5" pos:end="243:12">default:</default>

        <expr_stmt pos:start="245:9" pos:end="245:74"><expr pos:start="245:9" pos:end="245:73"><call pos:start="245:9" pos:end="245:73"><name pos:start="245:9" pos:end="245:21">qemu_log_mask</name><argument_list pos:start="245:22" pos:end="245:73">(<argument pos:start="245:23" pos:end="245:37"><expr pos:start="245:23" pos:end="245:37"><name pos:start="245:23" pos:end="245:37">LOG_GUEST_ERROR</name></expr></argument>, <argument pos:start="245:40" pos:end="245:72"><expr pos:start="245:40" pos:end="245:72"><literal type="string" pos:start="245:40" pos:end="245:72">"sd_read_data: unknown command\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="247:9" pos:end="247:20">return <expr pos:start="247:16" pos:end="247:19"><literal type="number" pos:start="247:16" pos:end="247:19">0x00</literal></expr>;</return>

    </block_content>}</block></switch>



    <return pos:start="253:5" pos:end="253:15">return <expr pos:start="253:12" pos:end="253:14"><name pos:start="253:12" pos:end="253:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
