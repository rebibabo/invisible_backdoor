<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2567.c" pos:tabs="8"><function pos:start="1:1" pos:end="207:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">sad_hpel_motion_search</name><parameter_list pos:start="1:34" pos:end="7:50">(<parameter pos:start="1:35" pos:end="1:52"><decl pos:start="1:35" pos:end="1:52"><type pos:start="1:35" pos:end="1:52"><name pos:start="1:35" pos:end="1:48">MpegEncContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type> <name pos:start="1:52" pos:end="1:52">s</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:45"><decl pos:start="3:35" pos:end="3:45"><type pos:start="3:35" pos:end="3:45"><name pos:start="3:35" pos:end="3:37">int</name> <modifier pos:start="3:39" pos:end="3:39">*</modifier></type><name pos:start="3:40" pos:end="3:45">mx_ptr</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:58"><decl pos:start="3:48" pos:end="3:58"><type pos:start="3:48" pos:end="3:58"><name pos:start="3:48" pos:end="3:50">int</name> <modifier pos:start="3:52" pos:end="3:52">*</modifier></type><name pos:start="3:53" pos:end="3:58">my_ptr</name></decl></parameter>, <parameter pos:start="3:61" pos:end="3:68"><decl pos:start="3:61" pos:end="3:68"><type pos:start="3:61" pos:end="3:68"><name pos:start="3:61" pos:end="3:63">int</name></type> <name pos:start="3:65" pos:end="3:68">dmin</name></decl></parameter>,

                                  <parameter pos:start="5:35" pos:end="5:47"><decl pos:start="5:35" pos:end="5:47"><type pos:start="5:35" pos:end="5:47"><name pos:start="5:35" pos:end="5:37">int</name></type> <name pos:start="5:39" pos:end="5:47">src_index</name></decl></parameter>, <parameter pos:start="5:50" pos:end="5:62"><decl pos:start="5:50" pos:end="5:62"><type pos:start="5:50" pos:end="5:62"><name pos:start="5:50" pos:end="5:52">int</name></type> <name pos:start="5:54" pos:end="5:62">ref_index</name></decl></parameter>,

                                  <parameter pos:start="7:35" pos:end="7:42"><decl pos:start="7:35" pos:end="7:42"><type pos:start="7:35" pos:end="7:42"><name pos:start="7:35" pos:end="7:37">int</name></type> <name pos:start="7:39" pos:end="7:42">size</name></decl></parameter>, <parameter pos:start="7:45" pos:end="7:49"><decl pos:start="7:45" pos:end="7:49"><type pos:start="7:45" pos:end="7:49"><name pos:start="7:45" pos:end="7:47">int</name></type> <name pos:start="7:49" pos:end="7:49">h</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="207:1">{<block_content pos:start="11:5" pos:end="205:17">

    <decl_stmt pos:start="11:5" pos:end="11:39"><decl pos:start="11:5" pos:end="11:38"><type pos:start="11:5" pos:end="11:28"><name pos:start="11:5" pos:end="11:20">MotionEstContext</name> <modifier pos:start="11:22" pos:end="11:22">*</modifier> <specifier pos:start="11:24" pos:end="11:28">const</specifier></type> <name pos:start="11:30" pos:end="11:30">c</name><init pos:start="11:31" pos:end="11:38">= <expr pos:start="11:33" pos:end="11:38"><operator pos:start="11:33" pos:end="11:33">&amp;</operator><name pos:start="11:34" pos:end="11:38"><name pos:start="11:34" pos:end="11:34">s</name><operator pos:start="11:35" pos:end="11:36">-&gt;</operator><name pos:start="11:37" pos:end="11:38">me</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:52"><decl pos:start="13:5" pos:end="13:51"><type pos:start="13:5" pos:end="13:13"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:13">int</name></type> <name pos:start="13:15" pos:end="13:28">penalty_factor</name><init pos:start="13:29" pos:end="13:51">= <expr pos:start="13:31" pos:end="13:51"><name pos:start="13:31" pos:end="13:51"><name pos:start="13:31" pos:end="13:31">c</name><operator pos:start="13:32" pos:end="13:33">-&gt;</operator><name pos:start="13:34" pos:end="13:51">sub_penalty_factor</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:10"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:10">mx</name></decl>, <decl pos:start="15:13" pos:end="15:14"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:13" pos:end="15:14">my</name></decl>, <decl pos:start="15:17" pos:end="15:21"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:17" pos:end="15:21">dminh</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">uint8_t</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:16">pix</name></decl>, <decl pos:start="17:19" pos:end="17:22"><type ref="prev" pos:start="17:5" pos:end="17:13"><modifier pos:start="17:19" pos:end="17:19">*</modifier></type><name pos:start="17:20" pos:end="17:22">ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:26"><decl pos:start="19:5" pos:end="19:25"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:14">stride</name><init pos:start="19:15" pos:end="19:25">= <expr pos:start="19:17" pos:end="19:25"><name pos:start="19:17" pos:end="19:25"><name pos:start="19:17" pos:end="19:17">c</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:25">stride</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="25:34"><decl pos:start="21:5" pos:end="25:33"><type pos:start="21:5" pos:end="21:15"><name pos:start="21:5" pos:end="21:15">LOAD_COMMON</name></type>



    <name pos:start="25:5" pos:end="25:14">av_assert2</name><argument_list pos:start="25:15" pos:end="25:33">(<argument pos:start="25:16" pos:end="25:32"><expr pos:start="25:16" pos:end="25:32"><name pos:start="25:16" pos:end="25:27"><name pos:start="25:16" pos:end="25:16">c</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:27">sub_flags</name></name> <operator pos:start="25:29" pos:end="25:30">==</operator> <literal type="number" pos:start="25:32" pos:end="25:32">0</literal></expr></argument>)</argument_list></decl>;</decl_stmt>



    <if_stmt pos:start="29:5" pos:end="37:5"><if pos:start="29:5" pos:end="37:5">if<condition pos:start="29:7" pos:end="29:15">(<expr pos:start="29:8" pos:end="29:14"><name pos:start="29:8" pos:end="29:14"><name pos:start="29:8" pos:end="29:8">c</name><operator pos:start="29:9" pos:end="29:10">-&gt;</operator><name pos:start="29:11" pos:end="29:14">skip</name></name></expr>)</condition><block pos:start="29:16" pos:end="37:5">{<block_content pos:start="31:9" pos:end="35:20">

        <expr_stmt pos:start="31:9" pos:end="31:20"><expr pos:start="31:9" pos:end="31:19"><operator pos:start="31:9" pos:end="31:9">*</operator><name pos:start="31:10" pos:end="31:15">mx_ptr</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <literal type="number" pos:start="31:19" pos:end="31:19">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:20"><expr pos:start="33:9" pos:end="33:19"><operator pos:start="33:9" pos:end="33:9">*</operator><name pos:start="33:10" pos:end="33:15">my_ptr</name> <operator pos:start="33:17" pos:end="33:17">=</operator> <literal type="number" pos:start="33:19" pos:end="33:19">0</literal></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:20">return <expr pos:start="35:16" pos:end="35:19"><name pos:start="35:16" pos:end="35:19">dmin</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:31"><expr pos:start="41:5" pos:end="41:30"><name pos:start="41:5" pos:end="41:7">pix</name> <operator pos:start="41:9" pos:end="41:9">=</operator> <name pos:start="41:11" pos:end="41:30"><name pos:start="41:11" pos:end="41:11">c</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:16">src</name><index pos:start="41:17" pos:end="41:27">[<expr pos:start="41:18" pos:end="41:26"><name pos:start="41:18" pos:end="41:26">src_index</name></expr>]</index><index pos:start="41:28" pos:end="41:30">[<expr pos:start="41:29" pos:end="41:29"><literal type="number" pos:start="41:29" pos:end="41:29">0</literal></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:17"><expr pos:start="45:5" pos:end="45:16"><name pos:start="45:5" pos:end="45:6">mx</name> <operator pos:start="45:8" pos:end="45:8">=</operator> <operator pos:start="45:10" pos:end="45:10">*</operator><name pos:start="45:11" pos:end="45:16">mx_ptr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:17"><expr pos:start="47:5" pos:end="47:16"><name pos:start="47:5" pos:end="47:6">my</name> <operator pos:start="47:8" pos:end="47:8">=</operator> <operator pos:start="47:10" pos:end="47:10">*</operator><name pos:start="47:11" pos:end="47:16">my_ptr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:52"><expr pos:start="49:5" pos:end="49:51"><name pos:start="49:5" pos:end="49:7">ptr</name> <operator pos:start="49:9" pos:end="49:9">=</operator> <name pos:start="49:11" pos:end="49:30"><name pos:start="49:11" pos:end="49:11">c</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:16">ref</name><index pos:start="49:17" pos:end="49:27">[<expr pos:start="49:18" pos:end="49:26"><name pos:start="49:18" pos:end="49:26">ref_index</name></expr>]</index><index pos:start="49:28" pos:end="49:30">[<expr pos:start="49:29" pos:end="49:29"><literal type="number" pos:start="49:29" pos:end="49:29">0</literal></expr>]</index></name> <operator pos:start="49:32" pos:end="49:32">+</operator> <operator pos:start="49:34" pos:end="49:34">(</operator><name pos:start="49:35" pos:end="49:36">my</name> <operator pos:start="49:38" pos:end="49:38">*</operator> <name pos:start="49:40" pos:end="49:45">stride</name><operator pos:start="49:46" pos:end="49:46">)</operator> <operator pos:start="49:48" pos:end="49:48">+</operator> <name pos:start="49:50" pos:end="49:51">mx</name></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:17"><expr pos:start="53:5" pos:end="53:16"><name pos:start="53:5" pos:end="53:9">dminh</name> <operator pos:start="53:11" pos:end="53:11">=</operator> <name pos:start="53:13" pos:end="53:16">dmin</name></expr>;</expr_stmt>



    <if_stmt pos:start="57:5" pos:end="197:5"><if pos:start="57:5" pos:end="191:5">if <condition pos:start="57:8" pos:end="59:31">(<expr pos:start="57:9" pos:end="59:30"><name pos:start="57:9" pos:end="57:10">mx</name> <operator pos:start="57:12" pos:end="57:12">&gt;</operator> <name pos:start="57:14" pos:end="57:17">xmin</name> <operator pos:start="57:19" pos:end="57:20">&amp;&amp;</operator> <name pos:start="57:22" pos:end="59:12"><name pos:start="57:22" pos:end="57:23">mx</name> <argument_list type="generic" pos:start="57:25" pos:end="59:12">&lt; <argument pos:start="57:27" pos:end="59:10"><expr pos:start="57:27" pos:end="59:10"><name pos:start="57:27" pos:end="57:30">xmax</name> <operator pos:start="57:32" pos:end="57:33">&amp;&amp;</operator>

        <name pos:start="59:9" pos:end="59:10">my</name></expr></argument> &gt;</argument_list></name> <name pos:start="59:14" pos:end="59:17">ymin</name> <operator pos:start="59:19" pos:end="59:20">&amp;&amp;</operator> <name pos:start="59:22" pos:end="59:23">my</name> <operator pos:start="59:25" pos:end="59:25">&lt;</operator> <name pos:start="59:27" pos:end="59:30">ymax</name></expr>)</condition> <block pos:start="59:33" pos:end="191:5">{<block_content pos:start="61:9" pos:end="187:15">

        <decl_stmt pos:start="61:9" pos:end="61:23"><decl pos:start="61:9" pos:end="61:16"><type pos:start="61:9" pos:end="61:11"><name pos:start="61:9" pos:end="61:11">int</name></type> <name pos:start="61:13" pos:end="61:14">dx</name><init pos:start="61:15" pos:end="61:16">=<expr pos:start="61:16" pos:end="61:16"><literal type="number" pos:start="61:16" pos:end="61:16">0</literal></expr></init></decl>, <decl pos:start="61:19" pos:end="61:22"><type ref="prev" pos:start="61:9" pos:end="61:11"/><name pos:start="61:19" pos:end="61:20">dy</name><init pos:start="61:21" pos:end="61:22">=<expr pos:start="61:22" pos:end="61:22"><literal type="number" pos:start="61:22" pos:end="61:22">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="63:9" pos:end="63:28"><decl pos:start="63:9" pos:end="63:13"><type pos:start="63:9" pos:end="63:11"><name pos:start="63:9" pos:end="63:11">int</name></type> <name pos:start="63:13" pos:end="63:13">d</name></decl>, <decl pos:start="63:16" pos:end="63:20"><type ref="prev" pos:start="63:9" pos:end="63:11"/><name pos:start="63:16" pos:end="63:20">pen_x</name></decl>, <decl pos:start="63:23" pos:end="63:27"><type ref="prev" pos:start="63:9" pos:end="63:11"/><name pos:start="63:23" pos:end="63:27">pen_y</name></decl>;</decl_stmt>

        <decl_stmt pos:start="65:9" pos:end="65:49"><decl pos:start="65:9" pos:end="65:48"><type pos:start="65:9" pos:end="65:17"><specifier pos:start="65:9" pos:end="65:13">const</specifier> <name pos:start="65:15" pos:end="65:17">int</name></type> <name pos:start="65:19" pos:end="65:23">index</name><init pos:start="65:24" pos:end="65:48">= <expr pos:start="65:26" pos:end="65:48"><operator pos:start="65:26" pos:end="65:26">(</operator><name pos:start="65:27" pos:end="65:28">my</name><operator pos:start="65:29" pos:end="65:30">&lt;&lt;</operator><name pos:start="65:31" pos:end="65:42">ME_MAP_SHIFT</name><operator pos:start="65:43" pos:end="65:43">)</operator> <operator pos:start="65:45" pos:end="65:45">+</operator> <name pos:start="65:47" pos:end="65:48">mx</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="67:9" pos:end="67:74"><decl pos:start="67:9" pos:end="67:73"><type pos:start="67:9" pos:end="67:17"><specifier pos:start="67:9" pos:end="67:13">const</specifier> <name pos:start="67:15" pos:end="67:17">int</name></type> <name pos:start="67:19" pos:end="67:19">t</name><init pos:start="67:20" pos:end="67:73">= <expr pos:start="67:22" pos:end="67:73"><name pos:start="67:22" pos:end="67:73"><name pos:start="67:22" pos:end="67:30">score_map</name><index pos:start="67:31" pos:end="67:73">[<expr pos:start="67:32" pos:end="67:72"><operator pos:start="67:32" pos:end="67:32">(</operator><name pos:start="67:33" pos:end="67:37">index</name><operator pos:start="67:38" pos:end="67:38">-</operator><operator pos:start="67:39" pos:end="67:39">(</operator><literal type="number" pos:start="67:40" pos:end="67:40">1</literal><operator pos:start="67:41" pos:end="67:42">&lt;&lt;</operator><name pos:start="67:43" pos:end="67:54">ME_MAP_SHIFT</name><operator pos:start="67:55" pos:end="67:55">)</operator><operator pos:start="67:56" pos:end="67:56">)</operator><operator pos:start="67:57" pos:end="67:57">&amp;</operator><operator pos:start="67:58" pos:end="67:58">(</operator><name pos:start="67:59" pos:end="67:69">ME_MAP_SIZE</name><operator pos:start="67:70" pos:end="67:70">-</operator><literal type="number" pos:start="67:71" pos:end="67:71">1</literal><operator pos:start="67:72" pos:end="67:72">)</operator></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="69:9" pos:end="69:74"><decl pos:start="69:9" pos:end="69:73"><type pos:start="69:9" pos:end="69:17"><specifier pos:start="69:9" pos:end="69:13">const</specifier> <name pos:start="69:15" pos:end="69:17">int</name></type> <name pos:start="69:19" pos:end="69:19">l</name><init pos:start="69:20" pos:end="69:73">= <expr pos:start="69:22" pos:end="69:73"><name pos:start="69:22" pos:end="69:73"><name pos:start="69:22" pos:end="69:30">score_map</name><index pos:start="69:31" pos:end="69:73">[<expr pos:start="69:32" pos:end="69:72"><operator pos:start="69:32" pos:end="69:32">(</operator><name pos:start="69:33" pos:end="69:37">index</name><operator pos:start="69:38" pos:end="69:38">-</operator> <literal type="number" pos:start="69:40" pos:end="69:40">1</literal>               <operator pos:start="69:56" pos:end="69:56">)</operator><operator pos:start="69:57" pos:end="69:57">&amp;</operator><operator pos:start="69:58" pos:end="69:58">(</operator><name pos:start="69:59" pos:end="69:69">ME_MAP_SIZE</name><operator pos:start="69:70" pos:end="69:70">-</operator><literal type="number" pos:start="69:71" pos:end="69:71">1</literal><operator pos:start="69:72" pos:end="69:72">)</operator></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="71:9" pos:end="71:74"><decl pos:start="71:9" pos:end="71:73"><type pos:start="71:9" pos:end="71:17"><specifier pos:start="71:9" pos:end="71:13">const</specifier> <name pos:start="71:15" pos:end="71:17">int</name></type> <name pos:start="71:19" pos:end="71:19">r</name><init pos:start="71:20" pos:end="71:73">= <expr pos:start="71:22" pos:end="71:73"><name pos:start="71:22" pos:end="71:73"><name pos:start="71:22" pos:end="71:30">score_map</name><index pos:start="71:31" pos:end="71:73">[<expr pos:start="71:32" pos:end="71:72"><operator pos:start="71:32" pos:end="71:32">(</operator><name pos:start="71:33" pos:end="71:37">index</name><operator pos:start="71:38" pos:end="71:38">+</operator> <literal type="number" pos:start="71:40" pos:end="71:40">1</literal>               <operator pos:start="71:56" pos:end="71:56">)</operator><operator pos:start="71:57" pos:end="71:57">&amp;</operator><operator pos:start="71:58" pos:end="71:58">(</operator><name pos:start="71:59" pos:end="71:69">ME_MAP_SIZE</name><operator pos:start="71:70" pos:end="71:70">-</operator><literal type="number" pos:start="71:71" pos:end="71:71">1</literal><operator pos:start="71:72" pos:end="71:72">)</operator></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="73:9" pos:end="73:74"><decl pos:start="73:9" pos:end="73:73"><type pos:start="73:9" pos:end="73:17"><specifier pos:start="73:9" pos:end="73:13">const</specifier> <name pos:start="73:15" pos:end="73:17">int</name></type> <name pos:start="73:19" pos:end="73:19">b</name><init pos:start="73:20" pos:end="73:73">= <expr pos:start="73:22" pos:end="73:73"><name pos:start="73:22" pos:end="73:73"><name pos:start="73:22" pos:end="73:30">score_map</name><index pos:start="73:31" pos:end="73:73">[<expr pos:start="73:32" pos:end="73:72"><operator pos:start="73:32" pos:end="73:32">(</operator><name pos:start="73:33" pos:end="73:37">index</name><operator pos:start="73:38" pos:end="73:38">+</operator><operator pos:start="73:39" pos:end="73:39">(</operator><literal type="number" pos:start="73:40" pos:end="73:40">1</literal><operator pos:start="73:41" pos:end="73:42">&lt;&lt;</operator><name pos:start="73:43" pos:end="73:54">ME_MAP_SHIFT</name><operator pos:start="73:55" pos:end="73:55">)</operator><operator pos:start="73:56" pos:end="73:56">)</operator><operator pos:start="73:57" pos:end="73:57">&amp;</operator><operator pos:start="73:58" pos:end="73:58">(</operator><name pos:start="73:59" pos:end="73:69">ME_MAP_SIZE</name><operator pos:start="73:70" pos:end="73:70">-</operator><literal type="number" pos:start="73:71" pos:end="73:71">1</literal><operator pos:start="73:72" pos:end="73:72">)</operator></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:15"><expr pos:start="75:9" pos:end="75:14"><name pos:start="75:9" pos:end="75:10">mx</name><operator pos:start="75:11" pos:end="75:13">&lt;&lt;=</operator><literal type="number" pos:start="75:14" pos:end="75:14">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:15"><expr pos:start="77:9" pos:end="77:14"><name pos:start="77:9" pos:end="77:10">my</name><operator pos:start="77:11" pos:end="77:13">&lt;&lt;=</operator><literal type="number" pos:start="77:14" pos:end="77:14">1</literal></expr>;</expr_stmt>





        <expr_stmt pos:start="83:9" pos:end="83:27"><expr pos:start="83:9" pos:end="83:26"><name pos:start="83:9" pos:end="83:13">pen_x</name><operator pos:start="83:14" pos:end="83:14">=</operator> <name pos:start="83:16" pos:end="83:21">pred_x</name> <operator pos:start="83:23" pos:end="83:23">+</operator> <name pos:start="83:25" pos:end="83:26">mx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:27"><expr pos:start="85:9" pos:end="85:26"><name pos:start="85:9" pos:end="85:13">pen_y</name><operator pos:start="85:14" pos:end="85:14">=</operator> <name pos:start="85:16" pos:end="85:21">pred_y</name> <operator pos:start="85:23" pos:end="85:23">+</operator> <name pos:start="85:25" pos:end="85:26">my</name></expr>;</expr_stmt>



        <expr_stmt pos:start="89:9" pos:end="89:21"><expr pos:start="89:9" pos:end="89:20"><name pos:start="89:9" pos:end="89:11">ptr</name><operator pos:start="89:12" pos:end="89:13">-=</operator> <name pos:start="89:15" pos:end="89:20">stride</name></expr>;</expr_stmt>

        <if_stmt pos:start="91:9" pos:end="183:9"><if pos:start="91:9" pos:end="137:9">if<condition pos:start="91:11" pos:end="91:16">(<expr pos:start="91:12" pos:end="91:15"><name pos:start="91:12" pos:end="91:12">t</name><operator pos:start="91:13" pos:end="91:14">&lt;=</operator><name pos:start="91:15" pos:end="91:15">b</name></expr>)</condition><block pos:start="91:17" pos:end="137:9">{<block_content pos:start="93:13" pos:end="135:13">

            <macro pos:start="93:13" pos:end="93:41"><name pos:start="93:13" pos:end="93:29">CHECK_SAD_HALF_MV</name><argument_list pos:start="93:30" pos:end="93:41">(<argument pos:start="93:31" pos:end="93:32">y2</argument> , <argument pos:start="93:36" pos:end="93:36"><literal type="number" pos:start="93:36" pos:end="93:36">0</literal></argument>, <argument pos:start="93:39" pos:end="93:40">-<literal type="number" pos:start="93:40" pos:end="93:40">1</literal></argument>)</argument_list></macro>

            <if_stmt pos:start="95:13" pos:end="135:13"><if pos:start="95:13" pos:end="115:13">if<condition pos:start="95:15" pos:end="95:20">(<expr pos:start="95:16" pos:end="95:19"><name pos:start="95:16" pos:end="95:16">l</name><operator pos:start="95:17" pos:end="95:18">&lt;=</operator><name pos:start="95:19" pos:end="95:19">r</name></expr>)</condition><block pos:start="95:21" pos:end="115:13">{<block_content pos:start="97:17" pos:end="113:46">

                <macro pos:start="97:17" pos:end="97:46"><name pos:start="97:17" pos:end="97:33">CHECK_SAD_HALF_MV</name><argument_list pos:start="97:34" pos:end="97:46">(<argument pos:start="97:35" pos:end="97:37">xy2</argument>, <argument pos:start="97:40" pos:end="97:41">-<literal type="number" pos:start="97:41" pos:end="97:41">1</literal></argument>, <argument pos:start="97:44" pos:end="97:45">-<literal type="number" pos:start="97:45" pos:end="97:45">1</literal></argument>)</argument_list></macro>

                <if_stmt pos:start="99:17" pos:end="111:17"><if pos:start="99:17" pos:end="105:17">if<condition pos:start="99:19" pos:end="99:28">(<expr pos:start="99:20" pos:end="99:27"><name pos:start="99:20" pos:end="99:20">t</name><operator pos:start="99:21" pos:end="99:21">+</operator><name pos:start="99:22" pos:end="99:22">r</name><operator pos:start="99:23" pos:end="99:24">&lt;=</operator><name pos:start="99:25" pos:end="99:25">b</name><operator pos:start="99:26" pos:end="99:26">+</operator><name pos:start="99:27" pos:end="99:27">l</name></expr>)</condition><block pos:start="99:29" pos:end="105:17">{<block_content pos:start="101:21" pos:end="103:33">

                    <macro pos:start="101:21" pos:end="101:50"><name pos:start="101:21" pos:end="101:37">CHECK_SAD_HALF_MV</name><argument_list pos:start="101:38" pos:end="101:50">(<argument pos:start="101:39" pos:end="101:41">xy2</argument>, <argument pos:start="101:44" pos:end="101:45">+<literal type="number" pos:start="101:45" pos:end="101:45">1</literal></argument>, <argument pos:start="101:48" pos:end="101:49">-<literal type="number" pos:start="101:49" pos:end="101:49">1</literal></argument>)</argument_list></macro>

                    <expr_stmt pos:start="103:21" pos:end="103:33"><expr pos:start="103:21" pos:end="103:32"><name pos:start="103:21" pos:end="103:23">ptr</name><operator pos:start="103:24" pos:end="103:25">+=</operator> <name pos:start="103:27" pos:end="103:32">stride</name></expr>;</expr_stmt>

                </block_content>}</block></if><else pos:start="105:18" pos:end="111:17">else<block pos:start="105:22" pos:end="111:17">{<block_content pos:start="107:21" pos:end="109:50">

                    <expr_stmt pos:start="107:21" pos:end="107:33"><expr pos:start="107:21" pos:end="107:32"><name pos:start="107:21" pos:end="107:23">ptr</name><operator pos:start="107:24" pos:end="107:25">+=</operator> <name pos:start="107:27" pos:end="107:32">stride</name></expr>;</expr_stmt>

                    <macro pos:start="109:21" pos:end="109:50"><name pos:start="109:21" pos:end="109:37">CHECK_SAD_HALF_MV</name><argument_list pos:start="109:38" pos:end="109:50">(<argument pos:start="109:39" pos:end="109:41">xy2</argument>, <argument pos:start="109:44" pos:end="109:45">-<literal type="number" pos:start="109:45" pos:end="109:45">1</literal></argument>, <argument pos:start="109:48" pos:end="109:49">+<literal type="number" pos:start="109:49" pos:end="109:49">1</literal></argument>)</argument_list></macro>

                </block_content>}</block></else></if_stmt>

                <macro pos:start="113:17" pos:end="113:46"><name pos:start="113:17" pos:end="113:33">CHECK_SAD_HALF_MV</name><argument_list pos:start="113:34" pos:end="113:46">(<argument pos:start="113:35" pos:end="113:36">x2</argument> , <argument pos:start="113:40" pos:end="113:41">-<literal type="number" pos:start="113:41" pos:end="113:41">1</literal></argument>,  <argument pos:start="113:45" pos:end="113:45"><literal type="number" pos:start="113:45" pos:end="113:45">0</literal></argument>)</argument_list></macro>

            </block_content>}</block></if><else pos:start="115:14" pos:end="135:13">else<block pos:start="115:18" pos:end="135:13">{<block_content pos:start="117:17" pos:end="133:46">

                <macro pos:start="117:17" pos:end="117:46"><name pos:start="117:17" pos:end="117:33">CHECK_SAD_HALF_MV</name><argument_list pos:start="117:34" pos:end="117:46">(<argument pos:start="117:35" pos:end="117:37">xy2</argument>, <argument pos:start="117:40" pos:end="117:41">+<literal type="number" pos:start="117:41" pos:end="117:41">1</literal></argument>, <argument pos:start="117:44" pos:end="117:45">-<literal type="number" pos:start="117:45" pos:end="117:45">1</literal></argument>)</argument_list></macro>

                <if_stmt pos:start="119:17" pos:end="131:17"><if pos:start="119:17" pos:end="125:17">if<condition pos:start="119:19" pos:end="119:28">(<expr pos:start="119:20" pos:end="119:27"><name pos:start="119:20" pos:end="119:20">t</name><operator pos:start="119:21" pos:end="119:21">+</operator><name pos:start="119:22" pos:end="119:22">l</name><operator pos:start="119:23" pos:end="119:24">&lt;=</operator><name pos:start="119:25" pos:end="119:25">b</name><operator pos:start="119:26" pos:end="119:26">+</operator><name pos:start="119:27" pos:end="119:27">r</name></expr>)</condition><block pos:start="119:29" pos:end="125:17">{<block_content pos:start="121:21" pos:end="123:33">

                    <macro pos:start="121:21" pos:end="121:50"><name pos:start="121:21" pos:end="121:37">CHECK_SAD_HALF_MV</name><argument_list pos:start="121:38" pos:end="121:50">(<argument pos:start="121:39" pos:end="121:41">xy2</argument>, <argument pos:start="121:44" pos:end="121:45">-<literal type="number" pos:start="121:45" pos:end="121:45">1</literal></argument>, <argument pos:start="121:48" pos:end="121:49">-<literal type="number" pos:start="121:49" pos:end="121:49">1</literal></argument>)</argument_list></macro>

                    <expr_stmt pos:start="123:21" pos:end="123:33"><expr pos:start="123:21" pos:end="123:32"><name pos:start="123:21" pos:end="123:23">ptr</name><operator pos:start="123:24" pos:end="123:25">+=</operator> <name pos:start="123:27" pos:end="123:32">stride</name></expr>;</expr_stmt>

                </block_content>}</block></if><else pos:start="125:18" pos:end="131:17">else<block pos:start="125:22" pos:end="131:17">{<block_content pos:start="127:21" pos:end="129:50">

                    <expr_stmt pos:start="127:21" pos:end="127:33"><expr pos:start="127:21" pos:end="127:32"><name pos:start="127:21" pos:end="127:23">ptr</name><operator pos:start="127:24" pos:end="127:25">+=</operator> <name pos:start="127:27" pos:end="127:32">stride</name></expr>;</expr_stmt>

                    <macro pos:start="129:21" pos:end="129:50"><name pos:start="129:21" pos:end="129:37">CHECK_SAD_HALF_MV</name><argument_list pos:start="129:38" pos:end="129:50">(<argument pos:start="129:39" pos:end="129:41">xy2</argument>, <argument pos:start="129:44" pos:end="129:45">+<literal type="number" pos:start="129:45" pos:end="129:45">1</literal></argument>, <argument pos:start="129:48" pos:end="129:49">+<literal type="number" pos:start="129:49" pos:end="129:49">1</literal></argument>)</argument_list></macro>

                </block_content>}</block></else></if_stmt>

                <macro pos:start="133:17" pos:end="133:46"><name pos:start="133:17" pos:end="133:33">CHECK_SAD_HALF_MV</name><argument_list pos:start="133:34" pos:end="133:46">(<argument pos:start="133:35" pos:end="133:36">x2</argument> , <argument pos:start="133:40" pos:end="133:41">+<literal type="number" pos:start="133:41" pos:end="133:41">1</literal></argument>,  <argument pos:start="133:45" pos:end="133:45"><literal type="number" pos:start="133:45" pos:end="133:45">0</literal></argument>)</argument_list></macro>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if><else pos:start="137:10" pos:end="183:9">else<block pos:start="137:14" pos:end="183:9">{<block_content pos:start="139:13" pos:end="181:42">

            <if_stmt pos:start="139:13" pos:end="179:13"><if pos:start="139:13" pos:end="159:13">if<condition pos:start="139:15" pos:end="139:20">(<expr pos:start="139:16" pos:end="139:19"><name pos:start="139:16" pos:end="139:16">l</name><operator pos:start="139:17" pos:end="139:18">&lt;=</operator><name pos:start="139:19" pos:end="139:19">r</name></expr>)</condition><block pos:start="139:21" pos:end="159:13">{<block_content pos:start="141:17" pos:end="157:46">

                <if_stmt pos:start="141:17" pos:end="153:17"><if pos:start="141:17" pos:end="147:17">if<condition pos:start="141:19" pos:end="141:28">(<expr pos:start="141:20" pos:end="141:27"><name pos:start="141:20" pos:end="141:20">t</name><operator pos:start="141:21" pos:end="141:21">+</operator><name pos:start="141:22" pos:end="141:22">l</name><operator pos:start="141:23" pos:end="141:24">&lt;=</operator><name pos:start="141:25" pos:end="141:25">b</name><operator pos:start="141:26" pos:end="141:26">+</operator><name pos:start="141:27" pos:end="141:27">r</name></expr>)</condition><block pos:start="141:29" pos:end="147:17">{<block_content pos:start="143:21" pos:end="145:33">

                    <macro pos:start="143:21" pos:end="143:50"><name pos:start="143:21" pos:end="143:37">CHECK_SAD_HALF_MV</name><argument_list pos:start="143:38" pos:end="143:50">(<argument pos:start="143:39" pos:end="143:41">xy2</argument>, <argument pos:start="143:44" pos:end="143:45">-<literal type="number" pos:start="143:45" pos:end="143:45">1</literal></argument>, <argument pos:start="143:48" pos:end="143:49">-<literal type="number" pos:start="143:49" pos:end="143:49">1</literal></argument>)</argument_list></macro>

                    <expr_stmt pos:start="145:21" pos:end="145:33"><expr pos:start="145:21" pos:end="145:32"><name pos:start="145:21" pos:end="145:23">ptr</name><operator pos:start="145:24" pos:end="145:25">+=</operator> <name pos:start="145:27" pos:end="145:32">stride</name></expr>;</expr_stmt>

                </block_content>}</block></if><else pos:start="147:18" pos:end="153:17">else<block pos:start="147:22" pos:end="153:17">{<block_content pos:start="149:21" pos:end="151:50">

                    <expr_stmt pos:start="149:21" pos:end="149:33"><expr pos:start="149:21" pos:end="149:32"><name pos:start="149:21" pos:end="149:23">ptr</name><operator pos:start="149:24" pos:end="149:25">+=</operator> <name pos:start="149:27" pos:end="149:32">stride</name></expr>;</expr_stmt>

                    <macro pos:start="151:21" pos:end="151:50"><name pos:start="151:21" pos:end="151:37">CHECK_SAD_HALF_MV</name><argument_list pos:start="151:38" pos:end="151:50">(<argument pos:start="151:39" pos:end="151:41">xy2</argument>, <argument pos:start="151:44" pos:end="151:45">+<literal type="number" pos:start="151:45" pos:end="151:45">1</literal></argument>, <argument pos:start="151:48" pos:end="151:49">+<literal type="number" pos:start="151:49" pos:end="151:49">1</literal></argument>)</argument_list></macro>

                </block_content>}</block></else></if_stmt>

                <macro pos:start="155:17" pos:end="155:46"><name pos:start="155:17" pos:end="155:33">CHECK_SAD_HALF_MV</name><argument_list pos:start="155:34" pos:end="155:46">(<argument pos:start="155:35" pos:end="155:36">x2</argument> , <argument pos:start="155:40" pos:end="155:41">-<literal type="number" pos:start="155:41" pos:end="155:41">1</literal></argument>,  <argument pos:start="155:45" pos:end="155:45"><literal type="number" pos:start="155:45" pos:end="155:45">0</literal></argument>)</argument_list></macro>

                <macro pos:start="157:17" pos:end="157:46"><name pos:start="157:17" pos:end="157:33">CHECK_SAD_HALF_MV</name><argument_list pos:start="157:34" pos:end="157:46">(<argument pos:start="157:35" pos:end="157:37">xy2</argument>, <argument pos:start="157:40" pos:end="157:41">-<literal type="number" pos:start="157:41" pos:end="157:41">1</literal></argument>, <argument pos:start="157:44" pos:end="157:45">+<literal type="number" pos:start="157:45" pos:end="157:45">1</literal></argument>)</argument_list></macro>

            </block_content>}</block></if><else pos:start="159:14" pos:end="179:13">else<block pos:start="159:18" pos:end="179:13">{<block_content pos:start="161:17" pos:end="177:46">

                <if_stmt pos:start="161:17" pos:end="173:17"><if pos:start="161:17" pos:end="167:17">if<condition pos:start="161:19" pos:end="161:28">(<expr pos:start="161:20" pos:end="161:27"><name pos:start="161:20" pos:end="161:20">t</name><operator pos:start="161:21" pos:end="161:21">+</operator><name pos:start="161:22" pos:end="161:22">r</name><operator pos:start="161:23" pos:end="161:24">&lt;=</operator><name pos:start="161:25" pos:end="161:25">b</name><operator pos:start="161:26" pos:end="161:26">+</operator><name pos:start="161:27" pos:end="161:27">l</name></expr>)</condition><block pos:start="161:29" pos:end="167:17">{<block_content pos:start="163:21" pos:end="165:33">

                    <macro pos:start="163:21" pos:end="163:50"><name pos:start="163:21" pos:end="163:37">CHECK_SAD_HALF_MV</name><argument_list pos:start="163:38" pos:end="163:50">(<argument pos:start="163:39" pos:end="163:41">xy2</argument>, <argument pos:start="163:44" pos:end="163:45">+<literal type="number" pos:start="163:45" pos:end="163:45">1</literal></argument>, <argument pos:start="163:48" pos:end="163:49">-<literal type="number" pos:start="163:49" pos:end="163:49">1</literal></argument>)</argument_list></macro>

                    <expr_stmt pos:start="165:21" pos:end="165:33"><expr pos:start="165:21" pos:end="165:32"><name pos:start="165:21" pos:end="165:23">ptr</name><operator pos:start="165:24" pos:end="165:25">+=</operator> <name pos:start="165:27" pos:end="165:32">stride</name></expr>;</expr_stmt>

                </block_content>}</block></if><else pos:start="167:18" pos:end="173:17">else<block pos:start="167:22" pos:end="173:17">{<block_content pos:start="169:21" pos:end="171:50">

                    <expr_stmt pos:start="169:21" pos:end="169:33"><expr pos:start="169:21" pos:end="169:32"><name pos:start="169:21" pos:end="169:23">ptr</name><operator pos:start="169:24" pos:end="169:25">+=</operator> <name pos:start="169:27" pos:end="169:32">stride</name></expr>;</expr_stmt>

                    <macro pos:start="171:21" pos:end="171:50"><name pos:start="171:21" pos:end="171:37">CHECK_SAD_HALF_MV</name><argument_list pos:start="171:38" pos:end="171:50">(<argument pos:start="171:39" pos:end="171:41">xy2</argument>, <argument pos:start="171:44" pos:end="171:45">-<literal type="number" pos:start="171:45" pos:end="171:45">1</literal></argument>, <argument pos:start="171:48" pos:end="171:49">+<literal type="number" pos:start="171:49" pos:end="171:49">1</literal></argument>)</argument_list></macro>

                </block_content>}</block></else></if_stmt>

                <macro pos:start="175:17" pos:end="175:46"><name pos:start="175:17" pos:end="175:33">CHECK_SAD_HALF_MV</name><argument_list pos:start="175:34" pos:end="175:46">(<argument pos:start="175:35" pos:end="175:36">x2</argument> , <argument pos:start="175:40" pos:end="175:41">+<literal type="number" pos:start="175:41" pos:end="175:41">1</literal></argument>,  <argument pos:start="175:45" pos:end="175:45"><literal type="number" pos:start="175:45" pos:end="175:45">0</literal></argument>)</argument_list></macro>

                <macro pos:start="177:17" pos:end="177:46"><name pos:start="177:17" pos:end="177:33">CHECK_SAD_HALF_MV</name><argument_list pos:start="177:34" pos:end="177:46">(<argument pos:start="177:35" pos:end="177:37">xy2</argument>, <argument pos:start="177:40" pos:end="177:41">+<literal type="number" pos:start="177:41" pos:end="177:41">1</literal></argument>, <argument pos:start="177:44" pos:end="177:45">+<literal type="number" pos:start="177:45" pos:end="177:45">1</literal></argument>)</argument_list></macro>

            </block_content>}</block></else></if_stmt>

            <macro pos:start="181:13" pos:end="181:42"><name pos:start="181:13" pos:end="181:29">CHECK_SAD_HALF_MV</name><argument_list pos:start="181:30" pos:end="181:42">(<argument pos:start="181:31" pos:end="181:32">y2</argument> ,  <argument pos:start="181:37" pos:end="181:37"><literal type="number" pos:start="181:37" pos:end="181:37">0</literal></argument>, <argument pos:start="181:40" pos:end="181:41">+<literal type="number" pos:start="181:41" pos:end="181:41">1</literal></argument>)</argument_list></macro>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:15"><expr pos:start="185:9" pos:end="185:14"><name pos:start="185:9" pos:end="185:10">mx</name><operator pos:start="185:11" pos:end="185:12">+=</operator><name pos:start="185:13" pos:end="185:14">dx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:15"><expr pos:start="187:9" pos:end="187:14"><name pos:start="187:9" pos:end="187:10">my</name><operator pos:start="187:11" pos:end="187:12">+=</operator><name pos:start="187:13" pos:end="187:14">dy</name></expr>;</expr_stmt>



    </block_content>}</block></if><else pos:start="191:6" pos:end="197:5">else<block pos:start="191:10" pos:end="197:5">{<block_content pos:start="193:9" pos:end="195:15">

        <expr_stmt pos:start="193:9" pos:end="193:15"><expr pos:start="193:9" pos:end="193:14"><name pos:start="193:9" pos:end="193:10">mx</name><operator pos:start="193:11" pos:end="193:13">&lt;&lt;=</operator><literal type="number" pos:start="193:14" pos:end="193:14">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="195:9" pos:end="195:15"><expr pos:start="195:9" pos:end="195:14"><name pos:start="195:9" pos:end="195:10">my</name><operator pos:start="195:11" pos:end="195:13">&lt;&lt;=</operator><literal type="number" pos:start="195:14" pos:end="195:14">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="201:5" pos:end="201:17"><expr pos:start="201:5" pos:end="201:16"><operator pos:start="201:5" pos:end="201:5">*</operator><name pos:start="201:6" pos:end="201:11">mx_ptr</name> <operator pos:start="201:13" pos:end="201:13">=</operator> <name pos:start="201:15" pos:end="201:16">mx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="203:5" pos:end="203:17"><expr pos:start="203:5" pos:end="203:16"><operator pos:start="203:5" pos:end="203:5">*</operator><name pos:start="203:6" pos:end="203:11">my_ptr</name> <operator pos:start="203:13" pos:end="203:13">=</operator> <name pos:start="203:15" pos:end="203:16">my</name></expr>;</expr_stmt>

    <return pos:start="205:5" pos:end="205:17">return <expr pos:start="205:12" pos:end="205:16"><name pos:start="205:12" pos:end="205:16">dminh</name></expr>;</return>

</block_content>}</block></function>
</unit>
