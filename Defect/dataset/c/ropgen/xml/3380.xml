<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3380.c" pos:tabs="8"><function pos:start="1:1" pos:end="385:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">h264_slice_header_parse</name><parameter_list pos:start="1:35" pos:end="3:55">(<parameter pos:start="1:36" pos:end="1:55"><decl pos:start="1:36" pos:end="1:55"><type pos:start="1:36" pos:end="1:55"><specifier pos:start="1:36" pos:end="1:40">const</specifier> <name pos:start="1:42" pos:end="1:52">H264Context</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:55">h</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:77"><decl pos:start="1:58" pos:end="1:77"><type pos:start="1:58" pos:end="1:77"><name pos:start="1:58" pos:end="1:73">H264SliceContext</name> <modifier pos:start="1:75" pos:end="1:75">*</modifier></type><name pos:start="1:76" pos:end="1:77">sl</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:54"><decl pos:start="3:36" pos:end="3:54"><type pos:start="3:36" pos:end="3:54"><specifier pos:start="3:36" pos:end="3:40">const</specifier> <name pos:start="3:42" pos:end="3:49">H2645NAL</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:54">nal</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="385:1">{<block_content pos:start="7:5" pos:end="383:13">

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:15"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">SPS</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:18">sps</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:15"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">PPS</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:18">pps</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:36"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:27">slice_type</name></decl>, <decl pos:start="13:30" pos:end="13:32"><type ref="prev" pos:start="13:5" pos:end="13:16"/><name pos:start="13:30" pos:end="13:32">tmp</name></decl>, <decl pos:start="13:35" pos:end="13:35"><type ref="prev" pos:start="13:5" pos:end="13:16"/><name pos:start="13:35" pos:end="13:35">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:42"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:22">field_pic_flag</name></decl>, <decl pos:start="15:25" pos:end="15:41"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:25" pos:end="15:41">bottom_field_flag</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:37"><decl pos:start="17:5" pos:end="17:17"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:17">droppable</name></decl>, <decl pos:start="17:20" pos:end="17:36"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:20" pos:end="17:36">picture_structure</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:47"><expr pos:start="21:5" pos:end="21:46"><name pos:start="21:5" pos:end="21:21"><name pos:start="21:5" pos:end="21:6">sl</name><operator pos:start="21:7" pos:end="21:8">-&gt;</operator><name pos:start="21:9" pos:end="21:21">first_mb_addr</name></name> <operator pos:start="21:23" pos:end="21:23">=</operator> <call pos:start="21:25" pos:end="21:46"><name pos:start="21:25" pos:end="21:37">get_ue_golomb</name><argument_list pos:start="21:38" pos:end="21:46">(<argument pos:start="21:39" pos:end="21:45"><expr pos:start="21:39" pos:end="21:45"><operator pos:start="21:39" pos:end="21:39">&amp;</operator><name pos:start="21:40" pos:end="21:45"><name pos:start="21:40" pos:end="21:41">sl</name><operator pos:start="21:42" pos:end="21:43">-&gt;</operator><name pos:start="21:44" pos:end="21:45">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:43"><expr pos:start="25:5" pos:end="25:42"><name pos:start="25:5" pos:end="25:14">slice_type</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <call pos:start="25:18" pos:end="25:42"><name pos:start="25:18" pos:end="25:33">get_ue_golomb_31</name><argument_list pos:start="25:34" pos:end="25:42">(<argument pos:start="25:35" pos:end="25:41"><expr pos:start="25:35" pos:end="25:41"><operator pos:start="25:35" pos:end="25:35">&amp;</operator><name pos:start="25:36" pos:end="25:41"><name pos:start="25:36" pos:end="25:37">sl</name><operator pos:start="25:38" pos:end="25:39">-&gt;</operator><name pos:start="25:40" pos:end="25:41">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="37:5"><if pos:start="27:5" pos:end="37:5">if <condition pos:start="27:8" pos:end="27:23">(<expr pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:18">slice_type</name> <operator pos:start="27:20" pos:end="27:20">&gt;</operator> <literal type="number" pos:start="27:22" pos:end="27:22">9</literal></expr>)</condition> <block pos:start="27:25" pos:end="37:5">{<block_content pos:start="29:9" pos:end="35:35">

        <expr_stmt pos:start="29:9" pos:end="33:46"><expr pos:start="29:9" pos:end="33:45"><call pos:start="29:9" pos:end="33:45"><name pos:start="29:9" pos:end="29:14">av_log</name><argument_list pos:start="29:15" pos:end="33:45">(<argument pos:start="29:16" pos:end="29:23"><expr pos:start="29:16" pos:end="29:23"><name pos:start="29:16" pos:end="29:23"><name pos:start="29:16" pos:end="29:16">h</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:23">avctx</name></name></expr></argument>, <argument pos:start="29:26" pos:end="29:37"><expr pos:start="29:26" pos:end="29:37"><name pos:start="29:26" pos:end="29:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="31:16" pos:end="31:48"><expr pos:start="31:16" pos:end="31:48"><literal type="string" pos:start="31:16" pos:end="31:48">"slice type %d too large at %d\n"</literal></expr></argument>,

               <argument pos:start="33:16" pos:end="33:25"><expr pos:start="33:16" pos:end="33:25"><name pos:start="33:16" pos:end="33:25">slice_type</name></expr></argument>, <argument pos:start="33:28" pos:end="33:44"><expr pos:start="33:28" pos:end="33:44"><name pos:start="33:28" pos:end="33:44"><name pos:start="33:28" pos:end="33:29">sl</name><operator pos:start="33:30" pos:end="33:31">-&gt;</operator><name pos:start="33:32" pos:end="33:44">first_mb_addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:35">return <expr pos:start="35:16" pos:end="35:34"><name pos:start="35:16" pos:end="35:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="39:5" pos:end="47:33"><if pos:start="39:5" pos:end="45:5">if <condition pos:start="39:8" pos:end="39:23">(<expr pos:start="39:9" pos:end="39:22"><name pos:start="39:9" pos:end="39:18">slice_type</name> <operator pos:start="39:20" pos:end="39:20">&gt;</operator> <literal type="number" pos:start="39:22" pos:end="39:22">4</literal></expr>)</condition> <block pos:start="39:25" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:33">

        <expr_stmt pos:start="41:9" pos:end="41:24"><expr pos:start="41:9" pos:end="41:23"><name pos:start="41:9" pos:end="41:18">slice_type</name> <operator pos:start="41:20" pos:end="41:21">-=</operator> <literal type="number" pos:start="41:23" pos:end="41:23">5</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:33"><expr pos:start="43:9" pos:end="43:32"><name pos:start="43:9" pos:end="43:28"><name pos:start="43:9" pos:end="43:10">sl</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:28">slice_type_fixed</name></name> <operator pos:start="43:30" pos:end="43:30">=</operator> <literal type="number" pos:start="43:32" pos:end="43:32">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="45:7" pos:end="47:33">else<block type="pseudo" pos:start="47:9" pos:end="47:33"><block_content pos:start="47:9" pos:end="47:33">

        <expr_stmt pos:start="47:9" pos:end="47:33"><expr pos:start="47:9" pos:end="47:32"><name pos:start="47:9" pos:end="47:28"><name pos:start="47:9" pos:end="47:10">sl</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:28">slice_type_fixed</name></name> <operator pos:start="47:30" pos:end="47:30">=</operator> <literal type="number" pos:start="47:32" pos:end="47:32">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:65"><expr pos:start="51:5" pos:end="51:64"><name pos:start="51:5" pos:end="51:14">slice_type</name>         <operator pos:start="51:24" pos:end="51:24">=</operator> <name pos:start="51:26" pos:end="51:64"><name pos:start="51:26" pos:end="51:52">ff_h264_golomb_to_pict_type</name><index pos:start="51:53" pos:end="51:64">[<expr pos:start="51:54" pos:end="51:63"><name pos:start="51:54" pos:end="51:63">slice_type</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:36"><expr pos:start="53:5" pos:end="53:35"><name pos:start="53:5" pos:end="53:18"><name pos:start="53:5" pos:end="53:6">sl</name><operator pos:start="53:7" pos:end="53:8">-&gt;</operator><name pos:start="53:9" pos:end="53:18">slice_type</name></name>     <operator pos:start="53:24" pos:end="53:24">=</operator> <name pos:start="53:26" pos:end="53:35">slice_type</name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:40"><expr pos:start="55:5" pos:end="55:39"><name pos:start="55:5" pos:end="55:22"><name pos:start="55:5" pos:end="55:6">sl</name><operator pos:start="55:7" pos:end="55:8">-&gt;</operator><name pos:start="55:9" pos:end="55:22">slice_type_nos</name></name> <operator pos:start="55:24" pos:end="55:24">=</operator> <name pos:start="55:26" pos:end="55:35">slice_type</name> <operator pos:start="55:37" pos:end="55:37">&amp;</operator> <literal type="number" pos:start="55:39" pos:end="55:39">3</literal></expr>;</expr_stmt>



    <if_stmt pos:start="59:5" pos:end="67:5"><if pos:start="59:5" pos:end="67:5">if <condition pos:start="59:8" pos:end="61:48">(<expr pos:start="59:9" pos:end="61:47"><name pos:start="59:9" pos:end="59:17"><name pos:start="59:9" pos:end="59:11">nal</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:17">type</name></name>  <operator pos:start="59:20" pos:end="59:21">==</operator> <name pos:start="59:23" pos:end="59:35">NAL_IDR_SLICE</name> <operator pos:start="59:37" pos:end="59:38">&amp;&amp;</operator>

        <name pos:start="61:9" pos:end="61:26"><name pos:start="61:9" pos:end="61:10">sl</name><operator pos:start="61:11" pos:end="61:12">-&gt;</operator><name pos:start="61:13" pos:end="61:26">slice_type_nos</name></name> <operator pos:start="61:28" pos:end="61:29">!=</operator> <name pos:start="61:31" pos:end="61:47">AV_PICTURE_TYPE_I</name></expr>)</condition> <block pos:start="61:50" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:35">

        <expr_stmt pos:start="63:9" pos:end="63:82"><expr pos:start="63:9" pos:end="63:81"><call pos:start="63:9" pos:end="63:81"><name pos:start="63:9" pos:end="63:14">av_log</name><argument_list pos:start="63:15" pos:end="63:81">(<argument pos:start="63:16" pos:end="63:23"><expr pos:start="63:16" pos:end="63:23"><name pos:start="63:16" pos:end="63:23"><name pos:start="63:16" pos:end="63:16">h</name><operator pos:start="63:17" pos:end="63:18">-&gt;</operator><name pos:start="63:19" pos:end="63:23">avctx</name></name></expr></argument>, <argument pos:start="63:26" pos:end="63:37"><expr pos:start="63:26" pos:end="63:37"><name pos:start="63:26" pos:end="63:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="63:40" pos:end="63:80"><expr pos:start="63:40" pos:end="63:80"><literal type="string" pos:start="63:40" pos:end="63:80">"A non-intra slice in an IDR NAL unit.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="65:9" pos:end="65:35">return <expr pos:start="65:16" pos:end="65:34"><name pos:start="65:16" pos:end="65:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:40"><expr pos:start="71:5" pos:end="71:39"><name pos:start="71:5" pos:end="71:14"><name pos:start="71:5" pos:end="71:6">sl</name><operator pos:start="71:7" pos:end="71:8">-&gt;</operator><name pos:start="71:9" pos:end="71:14">pps_id</name></name> <operator pos:start="71:16" pos:end="71:16">=</operator> <call pos:start="71:18" pos:end="71:39"><name pos:start="71:18" pos:end="71:30">get_ue_golomb</name><argument_list pos:start="71:31" pos:end="71:39">(<argument pos:start="71:32" pos:end="71:38"><expr pos:start="71:32" pos:end="71:38"><operator pos:start="71:32" pos:end="71:32">&amp;</operator><name pos:start="71:33" pos:end="71:38"><name pos:start="71:33" pos:end="71:34">sl</name><operator pos:start="71:35" pos:end="71:36">-&gt;</operator><name pos:start="71:37" pos:end="71:38">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="79:5"><if pos:start="73:5" pos:end="79:5">if <condition pos:start="73:8" pos:end="73:36">(<expr pos:start="73:9" pos:end="73:35"><name pos:start="73:9" pos:end="73:18"><name pos:start="73:9" pos:end="73:10">sl</name><operator pos:start="73:11" pos:end="73:12">-&gt;</operator><name pos:start="73:13" pos:end="73:18">pps_id</name></name> <operator pos:start="73:20" pos:end="73:21">&gt;=</operator> <name pos:start="73:23" pos:end="73:35">MAX_PPS_COUNT</name></expr>)</condition> <block pos:start="73:38" pos:end="79:5">{<block_content pos:start="75:9" pos:end="77:35">

        <expr_stmt pos:start="75:9" pos:end="75:79"><expr pos:start="75:9" pos:end="75:78"><call pos:start="75:9" pos:end="75:78"><name pos:start="75:9" pos:end="75:14">av_log</name><argument_list pos:start="75:15" pos:end="75:78">(<argument pos:start="75:16" pos:end="75:23"><expr pos:start="75:16" pos:end="75:23"><name pos:start="75:16" pos:end="75:23"><name pos:start="75:16" pos:end="75:16">h</name><operator pos:start="75:17" pos:end="75:18">-&gt;</operator><name pos:start="75:19" pos:end="75:23">avctx</name></name></expr></argument>, <argument pos:start="75:26" pos:end="75:37"><expr pos:start="75:26" pos:end="75:37"><name pos:start="75:26" pos:end="75:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="75:40" pos:end="75:65"><expr pos:start="75:40" pos:end="75:65"><literal type="string" pos:start="75:40" pos:end="75:65">"pps_id %u out of range\n"</literal></expr></argument>, <argument pos:start="75:68" pos:end="75:77"><expr pos:start="75:68" pos:end="75:77"><name pos:start="75:68" pos:end="75:77"><name pos:start="75:68" pos:end="75:69">sl</name><operator pos:start="75:70" pos:end="75:71">-&gt;</operator><name pos:start="75:72" pos:end="75:77">pps_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="77:9" pos:end="77:35">return <expr pos:start="77:16" pos:end="77:34"><name pos:start="77:16" pos:end="77:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="81:5" pos:end="91:5"><if pos:start="81:5" pos:end="91:5">if <condition pos:start="81:8" pos:end="81:36">(<expr pos:start="81:9" pos:end="81:35"><operator pos:start="81:9" pos:end="81:9">!</operator><name pos:start="81:10" pos:end="81:35"><name pos:start="81:10" pos:end="81:10">h</name><operator pos:start="81:11" pos:end="81:12">-&gt;</operator><name pos:start="81:13" pos:end="81:14">ps</name><operator pos:start="81:15" pos:end="81:15">.</operator><name pos:start="81:16" pos:end="81:23">pps_list</name><index pos:start="81:24" pos:end="81:35">[<expr pos:start="81:25" pos:end="81:34"><name pos:start="81:25" pos:end="81:34"><name pos:start="81:25" pos:end="81:26">sl</name><operator pos:start="81:27" pos:end="81:28">-&gt;</operator><name pos:start="81:29" pos:end="81:34">pps_id</name></name></expr>]</index></name></expr>)</condition> <block pos:start="81:38" pos:end="91:5">{<block_content pos:start="83:9" pos:end="89:35">

        <expr_stmt pos:start="83:9" pos:end="87:27"><expr pos:start="83:9" pos:end="87:26"><call pos:start="83:9" pos:end="87:26"><name pos:start="83:9" pos:end="83:14">av_log</name><argument_list pos:start="83:15" pos:end="87:26">(<argument pos:start="83:16" pos:end="83:23"><expr pos:start="83:16" pos:end="83:23"><name pos:start="83:16" pos:end="83:23"><name pos:start="83:16" pos:end="83:16">h</name><operator pos:start="83:17" pos:end="83:18">-&gt;</operator><name pos:start="83:19" pos:end="83:23">avctx</name></name></expr></argument>, <argument pos:start="83:26" pos:end="83:37"><expr pos:start="83:26" pos:end="83:37"><name pos:start="83:26" pos:end="83:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="85:16" pos:end="85:49"><expr pos:start="85:16" pos:end="85:49"><literal type="string" pos:start="85:16" pos:end="85:49">"non-existing PPS %u referenced\n"</literal></expr></argument>,

               <argument pos:start="87:16" pos:end="87:25"><expr pos:start="87:16" pos:end="87:25"><name pos:start="87:16" pos:end="87:25"><name pos:start="87:16" pos:end="87:17">sl</name><operator pos:start="87:18" pos:end="87:19">-&gt;</operator><name pos:start="87:20" pos:end="87:25">pps_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="89:9" pos:end="89:35">return <expr pos:start="89:16" pos:end="89:34"><name pos:start="89:16" pos:end="89:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:55"><expr pos:start="93:5" pos:end="93:54"><name pos:start="93:5" pos:end="93:7">pps</name> <operator pos:start="93:9" pos:end="93:9">=</operator> <operator pos:start="93:11" pos:end="93:11">(</operator><specifier pos:start="93:12" pos:end="93:16">const</specifier> <name pos:start="93:18" pos:end="93:20">PPS</name><operator pos:start="93:21" pos:end="93:21">*</operator><operator pos:start="93:22" pos:end="93:22">)</operator><name pos:start="93:23" pos:end="93:48"><name pos:start="93:23" pos:end="93:23">h</name><operator pos:start="93:24" pos:end="93:25">-&gt;</operator><name pos:start="93:26" pos:end="93:27">ps</name><operator pos:start="93:28" pos:end="93:28">.</operator><name pos:start="93:29" pos:end="93:36">pps_list</name><index pos:start="93:37" pos:end="93:48">[<expr pos:start="93:38" pos:end="93:47"><name pos:start="93:38" pos:end="93:47"><name pos:start="93:38" pos:end="93:39">sl</name><operator pos:start="93:40" pos:end="93:41">-&gt;</operator><name pos:start="93:42" pos:end="93:47">pps_id</name></name></expr>]</index></name><operator pos:start="93:49" pos:end="93:50">-&gt;</operator><name pos:start="93:51" pos:end="93:54">data</name></expr>;</expr_stmt>



    <if_stmt pos:start="97:5" pos:end="105:5"><if pos:start="97:5" pos:end="105:5">if <condition pos:start="97:8" pos:end="97:37">(<expr pos:start="97:9" pos:end="97:36"><operator pos:start="97:9" pos:end="97:9">!</operator><name pos:start="97:10" pos:end="97:36"><name pos:start="97:10" pos:end="97:10">h</name><operator pos:start="97:11" pos:end="97:12">-&gt;</operator><name pos:start="97:13" pos:end="97:14">ps</name><operator pos:start="97:15" pos:end="97:15">.</operator><name pos:start="97:16" pos:end="97:23">sps_list</name><index pos:start="97:24" pos:end="97:36">[<expr pos:start="97:25" pos:end="97:35"><name pos:start="97:25" pos:end="97:35"><name pos:start="97:25" pos:end="97:27">pps</name><operator pos:start="97:28" pos:end="97:29">-&gt;</operator><name pos:start="97:30" pos:end="97:35">sps_id</name></name></expr>]</index></name></expr>)</condition> <block pos:start="97:39" pos:end="105:5">{<block_content pos:start="99:9" pos:end="103:35">

        <expr_stmt pos:start="99:9" pos:end="101:64"><expr pos:start="99:9" pos:end="101:63"><call pos:start="99:9" pos:end="101:63"><name pos:start="99:9" pos:end="99:14">av_log</name><argument_list pos:start="99:15" pos:end="101:63">(<argument pos:start="99:16" pos:end="99:23"><expr pos:start="99:16" pos:end="99:23"><name pos:start="99:16" pos:end="99:23"><name pos:start="99:16" pos:end="99:16">h</name><operator pos:start="99:17" pos:end="99:18">-&gt;</operator><name pos:start="99:19" pos:end="99:23">avctx</name></name></expr></argument>, <argument pos:start="99:26" pos:end="99:37"><expr pos:start="99:26" pos:end="99:37"><name pos:start="99:26" pos:end="99:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="101:16" pos:end="101:49"><expr pos:start="101:16" pos:end="101:49"><literal type="string" pos:start="101:16" pos:end="101:49">"non-existing SPS %u referenced\n"</literal></expr></argument>, <argument pos:start="101:52" pos:end="101:62"><expr pos:start="101:52" pos:end="101:62"><name pos:start="101:52" pos:end="101:62"><name pos:start="101:52" pos:end="101:54">pps</name><operator pos:start="101:55" pos:end="101:56">-&gt;</operator><name pos:start="101:57" pos:end="101:62">sps_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="103:9" pos:end="103:35">return <expr pos:start="103:16" pos:end="103:34"><name pos:start="103:16" pos:end="103:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:56"><expr pos:start="107:5" pos:end="107:55"><name pos:start="107:5" pos:end="107:7">sps</name> <operator pos:start="107:9" pos:end="107:9">=</operator> <operator pos:start="107:11" pos:end="107:11">(</operator><specifier pos:start="107:12" pos:end="107:16">const</specifier> <name pos:start="107:18" pos:end="107:20">SPS</name><operator pos:start="107:21" pos:end="107:21">*</operator><operator pos:start="107:22" pos:end="107:22">)</operator><name pos:start="107:23" pos:end="107:49"><name pos:start="107:23" pos:end="107:23">h</name><operator pos:start="107:24" pos:end="107:25">-&gt;</operator><name pos:start="107:26" pos:end="107:27">ps</name><operator pos:start="107:28" pos:end="107:28">.</operator><name pos:start="107:29" pos:end="107:36">sps_list</name><index pos:start="107:37" pos:end="107:49">[<expr pos:start="107:38" pos:end="107:48"><name pos:start="107:38" pos:end="107:48"><name pos:start="107:38" pos:end="107:40">pps</name><operator pos:start="107:41" pos:end="107:42">-&gt;</operator><name pos:start="107:43" pos:end="107:48">sps_id</name></name></expr>]</index></name><operator pos:start="107:50" pos:end="107:51">-&gt;</operator><name pos:start="107:52" pos:end="107:55">data</name></expr>;</expr_stmt>



    <expr_stmt pos:start="111:5" pos:end="111:63"><expr pos:start="111:5" pos:end="111:62"><name pos:start="111:5" pos:end="111:17"><name pos:start="111:5" pos:end="111:6">sl</name><operator pos:start="111:7" pos:end="111:8">-&gt;</operator><name pos:start="111:9" pos:end="111:17">frame_num</name></name> <operator pos:start="111:19" pos:end="111:19">=</operator> <call pos:start="111:21" pos:end="111:62"><name pos:start="111:21" pos:end="111:28">get_bits</name><argument_list pos:start="111:29" pos:end="111:62">(<argument pos:start="111:30" pos:end="111:36"><expr pos:start="111:30" pos:end="111:36"><operator pos:start="111:30" pos:end="111:30">&amp;</operator><name pos:start="111:31" pos:end="111:36"><name pos:start="111:31" pos:end="111:32">sl</name><operator pos:start="111:33" pos:end="111:34">-&gt;</operator><name pos:start="111:35" pos:end="111:36">gb</name></name></expr></argument>, <argument pos:start="111:39" pos:end="111:61"><expr pos:start="111:39" pos:end="111:61"><name pos:start="111:39" pos:end="111:61"><name pos:start="111:39" pos:end="111:41">sps</name><operator pos:start="111:42" pos:end="111:43">-&gt;</operator><name pos:start="111:44" pos:end="111:61">log2_max_frame_num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="115:5" pos:end="115:27"><expr pos:start="115:5" pos:end="115:26"><name pos:start="115:5" pos:end="115:16"><name pos:start="115:5" pos:end="115:6">sl</name><operator pos:start="115:7" pos:end="115:8">-&gt;</operator><name pos:start="115:9" pos:end="115:16">mb_mbaff</name></name>       <operator pos:start="115:24" pos:end="115:24">=</operator> <literal type="number" pos:start="115:26" pos:end="115:26">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="119:5" pos:end="119:34"><expr pos:start="119:5" pos:end="119:33"><name pos:start="119:5" pos:end="119:13">droppable</name> <operator pos:start="119:15" pos:end="119:15">=</operator> <name pos:start="119:17" pos:end="119:28"><name pos:start="119:17" pos:end="119:19">nal</name><operator pos:start="119:20" pos:end="119:21">-&gt;</operator><name pos:start="119:22" pos:end="119:28">ref_idc</name></name> <operator pos:start="119:30" pos:end="119:31">==</operator> <literal type="number" pos:start="119:33" pos:end="119:33">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="121:5" pos:end="141:5"><if pos:start="121:5" pos:end="125:5">if <condition pos:start="121:8" pos:end="121:33">(<expr pos:start="121:9" pos:end="121:32"><name pos:start="121:9" pos:end="121:32"><name pos:start="121:9" pos:end="121:11">sps</name><operator pos:start="121:12" pos:end="121:13">-&gt;</operator><name pos:start="121:14" pos:end="121:32">frame_mbs_only_flag</name></name></expr>)</condition> <block pos:start="121:35" pos:end="125:5">{<block_content pos:start="123:9" pos:end="123:39">

        <expr_stmt pos:start="123:9" pos:end="123:39"><expr pos:start="123:9" pos:end="123:38"><name pos:start="123:9" pos:end="123:25">picture_structure</name> <operator pos:start="123:27" pos:end="123:27">=</operator> <name pos:start="123:29" pos:end="123:38">PICT_FRAME</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="125:7" pos:end="141:5">else <block pos:start="125:12" pos:end="141:5">{<block_content pos:start="127:9" pos:end="139:9">

        <expr_stmt pos:start="127:9" pos:end="127:44"><expr pos:start="127:9" pos:end="127:43"><name pos:start="127:9" pos:end="127:22">field_pic_flag</name> <operator pos:start="127:24" pos:end="127:24">=</operator> <call pos:start="127:26" pos:end="127:43"><name pos:start="127:26" pos:end="127:34">get_bits1</name><argument_list pos:start="127:35" pos:end="127:43">(<argument pos:start="127:36" pos:end="127:42"><expr pos:start="127:36" pos:end="127:42"><operator pos:start="127:36" pos:end="127:36">&amp;</operator><name pos:start="127:37" pos:end="127:42"><name pos:start="127:37" pos:end="127:38">sl</name><operator pos:start="127:39" pos:end="127:40">-&gt;</operator><name pos:start="127:41" pos:end="127:42">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="129:9" pos:end="139:9"><if pos:start="129:9" pos:end="135:9">if <condition pos:start="129:12" pos:end="129:27">(<expr pos:start="129:13" pos:end="129:26"><name pos:start="129:13" pos:end="129:26">field_pic_flag</name></expr>)</condition> <block pos:start="129:29" pos:end="135:9">{<block_content pos:start="131:13" pos:end="133:67">

            <expr_stmt pos:start="131:13" pos:end="131:51"><expr pos:start="131:13" pos:end="131:50"><name pos:start="131:13" pos:end="131:29">bottom_field_flag</name> <operator pos:start="131:31" pos:end="131:31">=</operator> <call pos:start="131:33" pos:end="131:50"><name pos:start="131:33" pos:end="131:41">get_bits1</name><argument_list pos:start="131:42" pos:end="131:50">(<argument pos:start="131:43" pos:end="131:49"><expr pos:start="131:43" pos:end="131:49"><operator pos:start="131:43" pos:end="131:43">&amp;</operator><name pos:start="131:44" pos:end="131:49"><name pos:start="131:44" pos:end="131:45">sl</name><operator pos:start="131:46" pos:end="131:47">-&gt;</operator><name pos:start="131:48" pos:end="131:49">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:67"><expr pos:start="133:13" pos:end="133:66"><name pos:start="133:13" pos:end="133:29">picture_structure</name> <operator pos:start="133:31" pos:end="133:31">=</operator> <name pos:start="133:33" pos:end="133:46">PICT_TOP_FIELD</name> <operator pos:start="133:48" pos:end="133:48">+</operator> <name pos:start="133:50" pos:end="133:66">bottom_field_flag</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="135:11" pos:end="139:9">else <block pos:start="135:16" pos:end="139:9">{<block_content pos:start="137:13" pos:end="137:43">

            <expr_stmt pos:start="137:13" pos:end="137:43"><expr pos:start="137:13" pos:end="137:42"><name pos:start="137:13" pos:end="137:29">picture_structure</name> <operator pos:start="137:31" pos:end="137:31">=</operator> <name pos:start="137:33" pos:end="137:42">PICT_FRAME</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:51"><expr pos:start="143:5" pos:end="143:50"><name pos:start="143:5" pos:end="143:25"><name pos:start="143:5" pos:end="143:6">sl</name><operator pos:start="143:7" pos:end="143:8">-&gt;</operator><name pos:start="143:9" pos:end="143:25">picture_structure</name></name>      <operator pos:start="143:32" pos:end="143:32">=</operator> <name pos:start="143:34" pos:end="143:50">picture_structure</name></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:65"><expr pos:start="145:5" pos:end="145:64"><name pos:start="145:5" pos:end="145:30"><name pos:start="145:5" pos:end="145:6">sl</name><operator pos:start="145:7" pos:end="145:8">-&gt;</operator><name pos:start="145:9" pos:end="145:30">mb_field_decoding_flag</name></name> <operator pos:start="145:32" pos:end="145:32">=</operator> <name pos:start="145:34" pos:end="145:50">picture_structure</name> <operator pos:start="145:52" pos:end="145:53">!=</operator> <name pos:start="145:55" pos:end="145:64">PICT_FRAME</name></expr>;</expr_stmt>



    <if_stmt pos:start="149:5" pos:end="161:5"><if pos:start="149:5" pos:end="155:5">if <condition pos:start="149:8" pos:end="149:40">(<expr pos:start="149:9" pos:end="149:39"><name pos:start="149:9" pos:end="149:25">picture_structure</name> <operator pos:start="149:27" pos:end="149:28">==</operator> <name pos:start="149:30" pos:end="149:39">PICT_FRAME</name></expr>)</condition> <block pos:start="149:42" pos:end="155:5">{<block_content pos:start="151:9" pos:end="153:56">

        <expr_stmt pos:start="151:9" pos:end="151:41"><expr pos:start="151:9" pos:end="151:40"><name pos:start="151:9" pos:end="151:24"><name pos:start="151:9" pos:end="151:10">sl</name><operator pos:start="151:11" pos:end="151:12">-&gt;</operator><name pos:start="151:13" pos:end="151:24">curr_pic_num</name></name> <operator pos:start="151:26" pos:end="151:26">=</operator> <name pos:start="151:28" pos:end="151:40"><name pos:start="151:28" pos:end="151:29">sl</name><operator pos:start="151:30" pos:end="151:31">-&gt;</operator><name pos:start="151:32" pos:end="151:40">frame_num</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:56"><expr pos:start="153:9" pos:end="153:55"><name pos:start="153:9" pos:end="153:23"><name pos:start="153:9" pos:end="153:10">sl</name><operator pos:start="153:11" pos:end="153:12">-&gt;</operator><name pos:start="153:13" pos:end="153:23">max_pic_num</name></name>  <operator pos:start="153:26" pos:end="153:26">=</operator> <literal type="number" pos:start="153:28" pos:end="153:28">1</literal> <operator pos:start="153:30" pos:end="153:31">&lt;&lt;</operator> <name pos:start="153:33" pos:end="153:55"><name pos:start="153:33" pos:end="153:35">sps</name><operator pos:start="153:36" pos:end="153:37">-&gt;</operator><name pos:start="153:38" pos:end="153:55">log2_max_frame_num</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="155:7" pos:end="161:5">else <block pos:start="155:12" pos:end="161:5">{<block_content pos:start="157:9" pos:end="159:62">

        <expr_stmt pos:start="157:9" pos:end="157:49"><expr pos:start="157:9" pos:end="157:48"><name pos:start="157:9" pos:end="157:24"><name pos:start="157:9" pos:end="157:10">sl</name><operator pos:start="157:11" pos:end="157:12">-&gt;</operator><name pos:start="157:13" pos:end="157:24">curr_pic_num</name></name> <operator pos:start="157:26" pos:end="157:26">=</operator> <literal type="number" pos:start="157:28" pos:end="157:28">2</literal> <operator pos:start="157:30" pos:end="157:30">*</operator> <name pos:start="157:32" pos:end="157:44"><name pos:start="157:32" pos:end="157:33">sl</name><operator pos:start="157:34" pos:end="157:35">-&gt;</operator><name pos:start="157:36" pos:end="157:44">frame_num</name></name> <operator pos:start="157:46" pos:end="157:46">+</operator> <literal type="number" pos:start="157:48" pos:end="157:48">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:62"><expr pos:start="159:9" pos:end="159:61"><name pos:start="159:9" pos:end="159:23"><name pos:start="159:9" pos:end="159:10">sl</name><operator pos:start="159:11" pos:end="159:12">-&gt;</operator><name pos:start="159:13" pos:end="159:23">max_pic_num</name></name>  <operator pos:start="159:26" pos:end="159:26">=</operator> <literal type="number" pos:start="159:28" pos:end="159:28">1</literal> <operator pos:start="159:30" pos:end="159:31">&lt;&lt;</operator> <operator pos:start="159:33" pos:end="159:33">(</operator><name pos:start="159:34" pos:end="159:56"><name pos:start="159:34" pos:end="159:36">sps</name><operator pos:start="159:37" pos:end="159:38">-&gt;</operator><name pos:start="159:39" pos:end="159:56">log2_max_frame_num</name></name> <operator pos:start="159:58" pos:end="159:58">+</operator> <literal type="number" pos:start="159:60" pos:end="159:60">1</literal><operator pos:start="159:61" pos:end="159:61">)</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="165:5" pos:end="167:31"><if pos:start="165:5" pos:end="167:31">if <condition pos:start="165:8" pos:end="165:35">(<expr pos:start="165:9" pos:end="165:34"><name pos:start="165:9" pos:end="165:17"><name pos:start="165:9" pos:end="165:11">nal</name><operator pos:start="165:12" pos:end="165:13">-&gt;</operator><name pos:start="165:14" pos:end="165:17">type</name></name> <operator pos:start="165:19" pos:end="165:20">==</operator> <name pos:start="165:22" pos:end="165:34">NAL_IDR_SLICE</name></expr>)</condition><block type="pseudo" pos:start="167:9" pos:end="167:31"><block_content pos:start="167:9" pos:end="167:31">

        <expr_stmt pos:start="167:9" pos:end="167:31"><expr pos:start="167:9" pos:end="167:30"><call pos:start="167:9" pos:end="167:30"><name pos:start="167:9" pos:end="167:21">get_ue_golomb</name><argument_list pos:start="167:22" pos:end="167:30">(<argument pos:start="167:23" pos:end="167:29"><expr pos:start="167:23" pos:end="167:29"><operator pos:start="167:23" pos:end="167:23">&amp;</operator><name pos:start="167:24" pos:end="167:29"><name pos:start="167:24" pos:end="167:25">sl</name><operator pos:start="167:26" pos:end="167:27">-&gt;</operator><name pos:start="167:28" pos:end="167:29">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="167:33" pos:end="167:48">/* idr_pic_id */</comment>



    <if_stmt pos:start="171:5" pos:end="181:5"><if pos:start="171:5" pos:end="181:5">if <condition pos:start="171:8" pos:end="171:27">(<expr pos:start="171:9" pos:end="171:26"><name pos:start="171:9" pos:end="171:21"><name pos:start="171:9" pos:end="171:11">sps</name><operator pos:start="171:12" pos:end="171:13">-&gt;</operator><name pos:start="171:14" pos:end="171:21">poc_type</name></name> <operator pos:start="171:23" pos:end="171:24">==</operator> <literal type="number" pos:start="171:26" pos:end="171:26">0</literal></expr>)</condition> <block pos:start="171:29" pos:end="181:5">{<block_content pos:start="173:9" pos:end="179:58">

        <expr_stmt pos:start="173:9" pos:end="173:63"><expr pos:start="173:9" pos:end="173:62"><name pos:start="173:9" pos:end="173:19"><name pos:start="173:9" pos:end="173:10">sl</name><operator pos:start="173:11" pos:end="173:12">-&gt;</operator><name pos:start="173:13" pos:end="173:19">poc_lsb</name></name> <operator pos:start="173:21" pos:end="173:21">=</operator> <call pos:start="173:23" pos:end="173:62"><name pos:start="173:23" pos:end="173:30">get_bits</name><argument_list pos:start="173:31" pos:end="173:62">(<argument pos:start="173:32" pos:end="173:38"><expr pos:start="173:32" pos:end="173:38"><operator pos:start="173:32" pos:end="173:32">&amp;</operator><name pos:start="173:33" pos:end="173:38"><name pos:start="173:33" pos:end="173:34">sl</name><operator pos:start="173:35" pos:end="173:36">-&gt;</operator><name pos:start="173:37" pos:end="173:38">gb</name></name></expr></argument>, <argument pos:start="173:41" pos:end="173:61"><expr pos:start="173:41" pos:end="173:61"><name pos:start="173:41" pos:end="173:61"><name pos:start="173:41" pos:end="173:43">sps</name><operator pos:start="173:44" pos:end="173:45">-&gt;</operator><name pos:start="173:46" pos:end="173:61">log2_max_poc_lsb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="177:9" pos:end="179:58"><if pos:start="177:9" pos:end="179:58">if <condition pos:start="177:12" pos:end="177:75">(<expr pos:start="177:13" pos:end="177:74"><name pos:start="177:13" pos:end="177:34"><name pos:start="177:13" pos:end="177:15">pps</name><operator pos:start="177:16" pos:end="177:17">-&gt;</operator><name pos:start="177:18" pos:end="177:34">pic_order_present</name></name> <operator pos:start="177:36" pos:end="177:37">==</operator> <literal type="number" pos:start="177:39" pos:end="177:39">1</literal> <operator pos:start="177:41" pos:end="177:42">&amp;&amp;</operator> <name pos:start="177:44" pos:end="177:60">picture_structure</name> <operator pos:start="177:62" pos:end="177:63">==</operator> <name pos:start="177:65" pos:end="177:74">PICT_FRAME</name></expr>)</condition><block type="pseudo" pos:start="179:13" pos:end="179:58"><block_content pos:start="179:13" pos:end="179:58">

            <expr_stmt pos:start="179:13" pos:end="179:58"><expr pos:start="179:13" pos:end="179:57"><name pos:start="179:13" pos:end="179:32"><name pos:start="179:13" pos:end="179:14">sl</name><operator pos:start="179:15" pos:end="179:16">-&gt;</operator><name pos:start="179:17" pos:end="179:32">delta_poc_bottom</name></name> <operator pos:start="179:34" pos:end="179:34">=</operator> <call pos:start="179:36" pos:end="179:57"><name pos:start="179:36" pos:end="179:48">get_se_golomb</name><argument_list pos:start="179:49" pos:end="179:57">(<argument pos:start="179:50" pos:end="179:56"><expr pos:start="179:50" pos:end="179:56"><operator pos:start="179:50" pos:end="179:50">&amp;</operator><name pos:start="179:51" pos:end="179:56"><name pos:start="179:51" pos:end="179:52">sl</name><operator pos:start="179:53" pos:end="179:54">-&gt;</operator><name pos:start="179:55" pos:end="179:56">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="185:5" pos:end="195:5"><if pos:start="185:5" pos:end="195:5">if <condition pos:start="185:8" pos:end="185:69">(<expr pos:start="185:9" pos:end="185:68"><name pos:start="185:9" pos:end="185:21"><name pos:start="185:9" pos:end="185:11">sps</name><operator pos:start="185:12" pos:end="185:13">-&gt;</operator><name pos:start="185:14" pos:end="185:21">poc_type</name></name> <operator pos:start="185:23" pos:end="185:24">==</operator> <literal type="number" pos:start="185:26" pos:end="185:26">1</literal> <operator pos:start="185:28" pos:end="185:29">&amp;&amp;</operator> <operator pos:start="185:31" pos:end="185:31">!</operator><name pos:start="185:32" pos:end="185:68"><name pos:start="185:32" pos:end="185:34">sps</name><operator pos:start="185:35" pos:end="185:36">-&gt;</operator><name pos:start="185:37" pos:end="185:68">delta_pic_order_always_zero_flag</name></name></expr>)</condition> <block pos:start="185:71" pos:end="195:5">{<block_content pos:start="187:9" pos:end="193:54">

        <expr_stmt pos:start="187:9" pos:end="187:50"><expr pos:start="187:9" pos:end="187:49"><name pos:start="187:9" pos:end="187:24"><name pos:start="187:9" pos:end="187:10">sl</name><operator pos:start="187:11" pos:end="187:12">-&gt;</operator><name pos:start="187:13" pos:end="187:21">delta_poc</name><index pos:start="187:22" pos:end="187:24">[<expr pos:start="187:23" pos:end="187:23"><literal type="number" pos:start="187:23" pos:end="187:23">0</literal></expr>]</index></name> <operator pos:start="187:26" pos:end="187:26">=</operator> <call pos:start="187:28" pos:end="187:49"><name pos:start="187:28" pos:end="187:40">get_se_golomb</name><argument_list pos:start="187:41" pos:end="187:49">(<argument pos:start="187:42" pos:end="187:48"><expr pos:start="187:42" pos:end="187:48"><operator pos:start="187:42" pos:end="187:42">&amp;</operator><name pos:start="187:43" pos:end="187:48"><name pos:start="187:43" pos:end="187:44">sl</name><operator pos:start="187:45" pos:end="187:46">-&gt;</operator><name pos:start="187:47" pos:end="187:48">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="191:9" pos:end="193:54"><if pos:start="191:9" pos:end="193:54">if <condition pos:start="191:12" pos:end="191:75">(<expr pos:start="191:13" pos:end="191:74"><name pos:start="191:13" pos:end="191:34"><name pos:start="191:13" pos:end="191:15">pps</name><operator pos:start="191:16" pos:end="191:17">-&gt;</operator><name pos:start="191:18" pos:end="191:34">pic_order_present</name></name> <operator pos:start="191:36" pos:end="191:37">==</operator> <literal type="number" pos:start="191:39" pos:end="191:39">1</literal> <operator pos:start="191:41" pos:end="191:42">&amp;&amp;</operator> <name pos:start="191:44" pos:end="191:60">picture_structure</name> <operator pos:start="191:62" pos:end="191:63">==</operator> <name pos:start="191:65" pos:end="191:74">PICT_FRAME</name></expr>)</condition><block type="pseudo" pos:start="193:13" pos:end="193:54"><block_content pos:start="193:13" pos:end="193:54">

            <expr_stmt pos:start="193:13" pos:end="193:54"><expr pos:start="193:13" pos:end="193:53"><name pos:start="193:13" pos:end="193:28"><name pos:start="193:13" pos:end="193:14">sl</name><operator pos:start="193:15" pos:end="193:16">-&gt;</operator><name pos:start="193:17" pos:end="193:25">delta_poc</name><index pos:start="193:26" pos:end="193:28">[<expr pos:start="193:27" pos:end="193:27"><literal type="number" pos:start="193:27" pos:end="193:27">1</literal></expr>]</index></name> <operator pos:start="193:30" pos:end="193:30">=</operator> <call pos:start="193:32" pos:end="193:53"><name pos:start="193:32" pos:end="193:44">get_se_golomb</name><argument_list pos:start="193:45" pos:end="193:53">(<argument pos:start="193:46" pos:end="193:52"><expr pos:start="193:46" pos:end="193:52"><operator pos:start="193:46" pos:end="193:46">&amp;</operator><name pos:start="193:47" pos:end="193:52"><name pos:start="193:47" pos:end="193:48">sl</name><operator pos:start="193:49" pos:end="193:50">-&gt;</operator><name pos:start="193:51" pos:end="193:52">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="199:5" pos:end="201:57"><if pos:start="199:5" pos:end="201:57">if <condition pos:start="199:8" pos:end="199:39">(<expr pos:start="199:9" pos:end="199:38"><name pos:start="199:9" pos:end="199:38"><name pos:start="199:9" pos:end="199:11">pps</name><operator pos:start="199:12" pos:end="199:13">-&gt;</operator><name pos:start="199:14" pos:end="199:38">redundant_pic_cnt_present</name></name></expr>)</condition><block type="pseudo" pos:start="201:9" pos:end="201:57"><block_content pos:start="201:9" pos:end="201:57">

        <expr_stmt pos:start="201:9" pos:end="201:57"><expr pos:start="201:9" pos:end="201:56"><name pos:start="201:9" pos:end="201:31"><name pos:start="201:9" pos:end="201:10">sl</name><operator pos:start="201:11" pos:end="201:12">-&gt;</operator><name pos:start="201:13" pos:end="201:31">redundant_pic_count</name></name> <operator pos:start="201:33" pos:end="201:33">=</operator> <call pos:start="201:35" pos:end="201:56"><name pos:start="201:35" pos:end="201:47">get_ue_golomb</name><argument_list pos:start="201:48" pos:end="201:56">(<argument pos:start="201:49" pos:end="201:55"><expr pos:start="201:49" pos:end="201:55"><operator pos:start="201:49" pos:end="201:49">&amp;</operator><name pos:start="201:50" pos:end="201:55"><name pos:start="201:50" pos:end="201:51">sl</name><operator pos:start="201:52" pos:end="201:53">-&gt;</operator><name pos:start="201:54" pos:end="201:55">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="205:5" pos:end="207:56"><if pos:start="205:5" pos:end="207:56">if <condition pos:start="205:8" pos:end="205:48">(<expr pos:start="205:9" pos:end="205:47"><name pos:start="205:9" pos:end="205:26"><name pos:start="205:9" pos:end="205:10">sl</name><operator pos:start="205:11" pos:end="205:12">-&gt;</operator><name pos:start="205:13" pos:end="205:26">slice_type_nos</name></name> <operator pos:start="205:28" pos:end="205:29">==</operator> <name pos:start="205:31" pos:end="205:47">AV_PICTURE_TYPE_B</name></expr>)</condition><block type="pseudo" pos:start="207:9" pos:end="207:56"><block_content pos:start="207:9" pos:end="207:56">

        <expr_stmt pos:start="207:9" pos:end="207:56"><expr pos:start="207:9" pos:end="207:55"><name pos:start="207:9" pos:end="207:34"><name pos:start="207:9" pos:end="207:10">sl</name><operator pos:start="207:11" pos:end="207:12">-&gt;</operator><name pos:start="207:13" pos:end="207:34">direct_spatial_mv_pred</name></name> <operator pos:start="207:36" pos:end="207:36">=</operator> <call pos:start="207:38" pos:end="207:55"><name pos:start="207:38" pos:end="207:46">get_bits1</name><argument_list pos:start="207:47" pos:end="207:55">(<argument pos:start="207:48" pos:end="207:54"><expr pos:start="207:48" pos:end="207:54"><operator pos:start="207:48" pos:end="207:48">&amp;</operator><name pos:start="207:49" pos:end="207:54"><name pos:start="207:49" pos:end="207:50">sl</name><operator pos:start="207:51" pos:end="207:52">-&gt;</operator><name pos:start="207:53" pos:end="207:54">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="211:5" pos:end="215:53"><expr pos:start="211:5" pos:end="215:52"><name pos:start="211:5" pos:end="211:7">ret</name> <operator pos:start="211:9" pos:end="211:9">=</operator> <call pos:start="211:11" pos:end="215:52"><name pos:start="211:11" pos:end="211:33">ff_h264_parse_ref_count</name><argument_list pos:start="211:34" pos:end="215:52">(<argument pos:start="211:35" pos:end="211:49"><expr pos:start="211:35" pos:end="211:49"><operator pos:start="211:35" pos:end="211:35">&amp;</operator><name pos:start="211:36" pos:end="211:49"><name pos:start="211:36" pos:end="211:37">sl</name><operator pos:start="211:38" pos:end="211:39">-&gt;</operator><name pos:start="211:40" pos:end="211:49">list_count</name></name></expr></argument>, <argument pos:start="211:52" pos:end="211:64"><expr pos:start="211:52" pos:end="211:64"><name pos:start="211:52" pos:end="211:64"><name pos:start="211:52" pos:end="211:53">sl</name><operator pos:start="211:54" pos:end="211:55">-&gt;</operator><name pos:start="211:56" pos:end="211:64">ref_count</name></name></expr></argument>,

                                  <argument pos:start="213:35" pos:end="213:41"><expr pos:start="213:35" pos:end="213:41"><operator pos:start="213:35" pos:end="213:35">&amp;</operator><name pos:start="213:36" pos:end="213:41"><name pos:start="213:36" pos:end="213:37">sl</name><operator pos:start="213:38" pos:end="213:39">-&gt;</operator><name pos:start="213:40" pos:end="213:41">gb</name></name></expr></argument>, <argument pos:start="213:44" pos:end="213:46"><expr pos:start="213:44" pos:end="213:46"><name pos:start="213:44" pos:end="213:46">pps</name></expr></argument>, <argument pos:start="213:49" pos:end="213:66"><expr pos:start="213:49" pos:end="213:66"><name pos:start="213:49" pos:end="213:66"><name pos:start="213:49" pos:end="213:50">sl</name><operator pos:start="213:51" pos:end="213:52">-&gt;</operator><name pos:start="213:53" pos:end="213:66">slice_type_nos</name></name></expr></argument>,

                                  <argument pos:start="215:35" pos:end="215:51"><expr pos:start="215:35" pos:end="215:51"><name pos:start="215:35" pos:end="215:51">picture_structure</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="217:5" pos:end="219:19"><if pos:start="217:5" pos:end="219:19">if <condition pos:start="217:8" pos:end="217:16">(<expr pos:start="217:9" pos:end="217:15"><name pos:start="217:9" pos:end="217:11">ret</name> <operator pos:start="217:13" pos:end="217:13">&lt;</operator> <literal type="number" pos:start="217:15" pos:end="217:15">0</literal></expr>)</condition><block type="pseudo" pos:start="219:9" pos:end="219:19"><block_content pos:start="219:9" pos:end="219:19">

        <return pos:start="219:9" pos:end="219:19">return <expr pos:start="219:16" pos:end="219:18"><name pos:start="219:16" pos:end="219:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="223:5" pos:end="235:5"><if pos:start="223:5" pos:end="235:5">if <condition pos:start="223:8" pos:end="223:48">(<expr pos:start="223:9" pos:end="223:47"><name pos:start="223:9" pos:end="223:26"><name pos:start="223:9" pos:end="223:10">sl</name><operator pos:start="223:11" pos:end="223:12">-&gt;</operator><name pos:start="223:13" pos:end="223:26">slice_type_nos</name></name> <operator pos:start="223:28" pos:end="223:29">!=</operator> <name pos:start="223:31" pos:end="223:47">AV_PICTURE_TYPE_I</name></expr>)</condition> <block pos:start="223:50" pos:end="235:5">{<block_content pos:start="225:8" pos:end="233:8">

       <expr_stmt pos:start="225:8" pos:end="225:59"><expr pos:start="225:8" pos:end="225:58"><name pos:start="225:8" pos:end="225:10">ret</name> <operator pos:start="225:12" pos:end="225:12">=</operator> <call pos:start="225:14" pos:end="225:58"><name pos:start="225:14" pos:end="225:51">ff_h264_decode_ref_pic_list_reordering</name><argument_list pos:start="225:52" pos:end="225:58">(<argument pos:start="225:53" pos:end="225:53"><expr pos:start="225:53" pos:end="225:53"><name pos:start="225:53" pos:end="225:53">h</name></expr></argument>, <argument pos:start="225:56" pos:end="225:57"><expr pos:start="225:56" pos:end="225:57"><name pos:start="225:56" pos:end="225:57">sl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

       <if_stmt pos:start="227:8" pos:end="233:8"><if pos:start="227:8" pos:end="233:8">if <condition pos:start="227:11" pos:end="227:19">(<expr pos:start="227:12" pos:end="227:18"><name pos:start="227:12" pos:end="227:14">ret</name> <operator pos:start="227:16" pos:end="227:16">&lt;</operator> <literal type="number" pos:start="227:18" pos:end="227:18">0</literal></expr>)</condition> <block pos:start="227:21" pos:end="233:8">{<block_content pos:start="229:12" pos:end="231:22">

           <expr_stmt pos:start="229:12" pos:end="229:51"><expr pos:start="229:12" pos:end="229:50"><name pos:start="229:12" pos:end="229:27"><name pos:start="229:12" pos:end="229:13">sl</name><operator pos:start="229:14" pos:end="229:15">-&gt;</operator><name pos:start="229:16" pos:end="229:24">ref_count</name><index pos:start="229:25" pos:end="229:27">[<expr pos:start="229:26" pos:end="229:26"><literal type="number" pos:start="229:26" pos:end="229:26">1</literal></expr>]</index></name> <operator pos:start="229:29" pos:end="229:29">=</operator> <name pos:start="229:31" pos:end="229:46"><name pos:start="229:31" pos:end="229:32">sl</name><operator pos:start="229:33" pos:end="229:34">-&gt;</operator><name pos:start="229:35" pos:end="229:43">ref_count</name><index pos:start="229:44" pos:end="229:46">[<expr pos:start="229:45" pos:end="229:45"><literal type="number" pos:start="229:45" pos:end="229:45">0</literal></expr>]</index></name> <operator pos:start="229:48" pos:end="229:48">=</operator> <literal type="number" pos:start="229:50" pos:end="229:50">0</literal></expr>;</expr_stmt>

           <return pos:start="231:12" pos:end="231:22">return <expr pos:start="231:19" pos:end="231:21"><name pos:start="231:19" pos:end="231:21">ret</name></expr>;</return>

       </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="239:5" pos:end="239:27"><expr pos:start="239:5" pos:end="239:26"><name pos:start="239:5" pos:end="239:22"><name pos:start="239:5" pos:end="239:6">sl</name><operator pos:start="239:7" pos:end="239:8">-&gt;</operator><name pos:start="239:9" pos:end="239:11">pwt</name><operator pos:start="239:12" pos:end="239:12">.</operator><name pos:start="239:13" pos:end="239:22">use_weight</name></name> <operator pos:start="239:24" pos:end="239:24">=</operator> <literal type="number" pos:start="239:26" pos:end="239:26">0</literal></expr>;</expr_stmt>

    <for pos:start="241:5" pos:end="247:5">for <control pos:start="241:9" pos:end="241:27">(<init pos:start="241:10" pos:end="241:15"><expr pos:start="241:10" pos:end="241:14"><name pos:start="241:10" pos:end="241:10">i</name> <operator pos:start="241:12" pos:end="241:12">=</operator> <literal type="number" pos:start="241:14" pos:end="241:14">0</literal></expr>;</init> <condition pos:start="241:17" pos:end="241:22"><expr pos:start="241:17" pos:end="241:21"><name pos:start="241:17" pos:end="241:17">i</name> <operator pos:start="241:19" pos:end="241:19">&lt;</operator> <literal type="number" pos:start="241:21" pos:end="241:21">2</literal></expr>;</condition> <incr pos:start="241:24" pos:end="241:26"><expr pos:start="241:24" pos:end="241:26"><name pos:start="241:24" pos:end="241:24">i</name><operator pos:start="241:25" pos:end="241:26">++</operator></expr></incr>)</control> <block pos:start="241:29" pos:end="247:5">{<block_content pos:start="243:9" pos:end="245:42">

        <expr_stmt pos:start="243:9" pos:end="243:42"><expr pos:start="243:9" pos:end="243:41"><name pos:start="243:9" pos:end="243:35"><name pos:start="243:9" pos:end="243:10">sl</name><operator pos:start="243:11" pos:end="243:12">-&gt;</operator><name pos:start="243:13" pos:end="243:15">pwt</name><operator pos:start="243:16" pos:end="243:16">.</operator><name pos:start="243:17" pos:end="243:32">luma_weight_flag</name><index pos:start="243:33" pos:end="243:35">[<expr pos:start="243:34" pos:end="243:34"><name pos:start="243:34" pos:end="243:34">i</name></expr>]</index></name>   <operator pos:start="243:39" pos:end="243:39">=</operator> <literal type="number" pos:start="243:41" pos:end="243:41">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="245:9" pos:end="245:42"><expr pos:start="245:9" pos:end="245:41"><name pos:start="245:9" pos:end="245:37"><name pos:start="245:9" pos:end="245:10">sl</name><operator pos:start="245:11" pos:end="245:12">-&gt;</operator><name pos:start="245:13" pos:end="245:15">pwt</name><operator pos:start="245:16" pos:end="245:16">.</operator><name pos:start="245:17" pos:end="245:34">chroma_weight_flag</name><index pos:start="245:35" pos:end="245:37">[<expr pos:start="245:36" pos:end="245:36"><name pos:start="245:36" pos:end="245:36">i</name></expr>]</index></name> <operator pos:start="245:39" pos:end="245:39">=</operator> <literal type="number" pos:start="245:41" pos:end="245:41">0</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="249:5" pos:end="257:64"><if pos:start="249:5" pos:end="257:64">if <condition pos:start="249:8" pos:end="253:50">(<expr pos:start="249:9" pos:end="253:49"><operator pos:start="249:9" pos:end="249:9">(</operator><name pos:start="249:10" pos:end="249:27"><name pos:start="249:10" pos:end="249:12">pps</name><operator pos:start="249:13" pos:end="249:14">-&gt;</operator><name pos:start="249:15" pos:end="249:27">weighted_pred</name></name> <operator pos:start="249:29" pos:end="249:30">&amp;&amp;</operator> <name pos:start="249:32" pos:end="249:49"><name pos:start="249:32" pos:end="249:33">sl</name><operator pos:start="249:34" pos:end="249:35">-&gt;</operator><name pos:start="249:36" pos:end="249:49">slice_type_nos</name></name> <operator pos:start="249:51" pos:end="249:52">==</operator> <name pos:start="249:54" pos:end="249:70">AV_PICTURE_TYPE_P</name><operator pos:start="249:71" pos:end="249:71">)</operator> <operator pos:start="249:73" pos:end="249:74">||</operator>

        <operator pos:start="251:9" pos:end="251:9">(</operator><name pos:start="251:10" pos:end="251:33"><name pos:start="251:10" pos:end="251:12">pps</name><operator pos:start="251:13" pos:end="251:14">-&gt;</operator><name pos:start="251:15" pos:end="251:33">weighted_bipred_idc</name></name> <operator pos:start="251:35" pos:end="251:36">==</operator> <literal type="number" pos:start="251:38" pos:end="251:38">1</literal> <operator pos:start="251:40" pos:end="251:41">&amp;&amp;</operator>

         <name pos:start="253:10" pos:end="253:27"><name pos:start="253:10" pos:end="253:11">sl</name><operator pos:start="253:12" pos:end="253:13">-&gt;</operator><name pos:start="253:14" pos:end="253:27">slice_type_nos</name></name> <operator pos:start="253:29" pos:end="253:30">==</operator> <name pos:start="253:32" pos:end="253:48">AV_PICTURE_TYPE_B</name><operator pos:start="253:49" pos:end="253:49">)</operator></expr>)</condition><block type="pseudo" pos:start="255:9" pos:end="257:64"><block_content pos:start="255:9" pos:end="257:64">

        <expr_stmt pos:start="255:9" pos:end="257:64"><expr pos:start="255:9" pos:end="257:63"><call pos:start="255:9" pos:end="257:63"><name pos:start="255:9" pos:end="255:33">ff_h264_pred_weight_table</name><argument_list pos:start="255:34" pos:end="257:63">(<argument pos:start="255:35" pos:end="255:41"><expr pos:start="255:35" pos:end="255:41"><operator pos:start="255:35" pos:end="255:35">&amp;</operator><name pos:start="255:36" pos:end="255:41"><name pos:start="255:36" pos:end="255:37">sl</name><operator pos:start="255:38" pos:end="255:39">-&gt;</operator><name pos:start="255:40" pos:end="255:41">gb</name></name></expr></argument>, <argument pos:start="255:44" pos:end="255:46"><expr pos:start="255:44" pos:end="255:46"><name pos:start="255:44" pos:end="255:46">sps</name></expr></argument>, <argument pos:start="255:49" pos:end="255:61"><expr pos:start="255:49" pos:end="255:61"><name pos:start="255:49" pos:end="255:61"><name pos:start="255:49" pos:end="255:50">sl</name><operator pos:start="255:51" pos:end="255:52">-&gt;</operator><name pos:start="255:53" pos:end="255:61">ref_count</name></name></expr></argument>,

                                  <argument pos:start="257:35" pos:end="257:52"><expr pos:start="257:35" pos:end="257:52"><name pos:start="257:35" pos:end="257:52"><name pos:start="257:35" pos:end="257:36">sl</name><operator pos:start="257:37" pos:end="257:38">-&gt;</operator><name pos:start="257:39" pos:end="257:52">slice_type_nos</name></name></expr></argument>, <argument pos:start="257:55" pos:end="257:62"><expr pos:start="257:55" pos:end="257:62"><operator pos:start="257:55" pos:end="257:55">&amp;</operator><name pos:start="257:56" pos:end="257:62"><name pos:start="257:56" pos:end="257:57">sl</name><operator pos:start="257:58" pos:end="257:59">-&gt;</operator><name pos:start="257:60" pos:end="257:62">pwt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="261:5" pos:end="261:33"><expr pos:start="261:5" pos:end="261:32"><name pos:start="261:5" pos:end="261:28"><name pos:start="261:5" pos:end="261:6">sl</name><operator pos:start="261:7" pos:end="261:8">-&gt;</operator><name pos:start="261:9" pos:end="261:28">explicit_ref_marking</name></name> <operator pos:start="261:30" pos:end="261:30">=</operator> <literal type="number" pos:start="261:32" pos:end="261:32">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="263:5" pos:end="271:5"><if pos:start="263:5" pos:end="271:5">if <condition pos:start="263:8" pos:end="263:21">(<expr pos:start="263:9" pos:end="263:20"><name pos:start="263:9" pos:end="263:20"><name pos:start="263:9" pos:end="263:11">nal</name><operator pos:start="263:12" pos:end="263:13">-&gt;</operator><name pos:start="263:14" pos:end="263:20">ref_idc</name></name></expr>)</condition> <block pos:start="263:23" pos:end="271:5">{<block_content pos:start="265:9" pos:end="269:39">

        <expr_stmt pos:start="265:9" pos:end="265:61"><expr pos:start="265:9" pos:end="265:60"><name pos:start="265:9" pos:end="265:11">ret</name> <operator pos:start="265:13" pos:end="265:13">=</operator> <call pos:start="265:15" pos:end="265:60"><name pos:start="265:15" pos:end="265:44">ff_h264_decode_ref_pic_marking</name><argument_list pos:start="265:45" pos:end="265:60">(<argument pos:start="265:46" pos:end="265:46"><expr pos:start="265:46" pos:end="265:46"><name pos:start="265:46" pos:end="265:46">h</name></expr></argument>, <argument pos:start="265:49" pos:end="265:50"><expr pos:start="265:49" pos:end="265:50"><name pos:start="265:49" pos:end="265:50">sl</name></expr></argument>, <argument pos:start="265:53" pos:end="265:59"><expr pos:start="265:53" pos:end="265:59"><operator pos:start="265:53" pos:end="265:53">&amp;</operator><name pos:start="265:54" pos:end="265:59"><name pos:start="265:54" pos:end="265:55">sl</name><operator pos:start="265:56" pos:end="265:57">-&gt;</operator><name pos:start="265:58" pos:end="265:59">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="267:9" pos:end="269:39"><if pos:start="267:9" pos:end="269:39">if <condition pos:start="267:12" pos:end="267:67">(<expr pos:start="267:13" pos:end="267:66"><name pos:start="267:13" pos:end="267:15">ret</name> <operator pos:start="267:17" pos:end="267:17">&lt;</operator> <literal type="number" pos:start="267:19" pos:end="267:19">0</literal> <operator pos:start="267:21" pos:end="267:22">&amp;&amp;</operator> <operator pos:start="267:24" pos:end="267:24">(</operator><name pos:start="267:25" pos:end="267:49"><name pos:start="267:25" pos:end="267:25">h</name><operator pos:start="267:26" pos:end="267:27">-&gt;</operator><name pos:start="267:28" pos:end="267:32">avctx</name><operator pos:start="267:33" pos:end="267:34">-&gt;</operator><name pos:start="267:35" pos:end="267:49">err_recognition</name></name> <operator pos:start="267:51" pos:end="267:51">&amp;</operator> <name pos:start="267:53" pos:end="267:65">AV_EF_EXPLODE</name><operator pos:start="267:66" pos:end="267:66">)</operator></expr>)</condition><block type="pseudo" pos:start="269:13" pos:end="269:39"><block_content pos:start="269:13" pos:end="269:39">

            <return pos:start="269:13" pos:end="269:39">return <expr pos:start="269:20" pos:end="269:38"><name pos:start="269:20" pos:end="269:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="275:5" pos:end="289:5"><if pos:start="275:5" pos:end="289:5">if <condition pos:start="275:8" pos:end="275:62">(<expr pos:start="275:9" pos:end="275:61"><name pos:start="275:9" pos:end="275:26"><name pos:start="275:9" pos:end="275:10">sl</name><operator pos:start="275:11" pos:end="275:12">-&gt;</operator><name pos:start="275:13" pos:end="275:26">slice_type_nos</name></name> <operator pos:start="275:28" pos:end="275:29">!=</operator> <name pos:start="275:31" pos:end="275:47">AV_PICTURE_TYPE_I</name> <operator pos:start="275:49" pos:end="275:50">&amp;&amp;</operator> <name pos:start="275:52" pos:end="275:61"><name pos:start="275:52" pos:end="275:54">pps</name><operator pos:start="275:55" pos:end="275:56">-&gt;</operator><name pos:start="275:57" pos:end="275:61">cabac</name></name></expr>)</condition> <block pos:start="275:64" pos:end="289:5">{<block_content pos:start="277:9" pos:end="287:33">

        <expr_stmt pos:start="277:9" pos:end="277:40"><expr pos:start="277:9" pos:end="277:39"><name pos:start="277:9" pos:end="277:11">tmp</name> <operator pos:start="277:13" pos:end="277:13">=</operator> <call pos:start="277:15" pos:end="277:39"><name pos:start="277:15" pos:end="277:30">get_ue_golomb_31</name><argument_list pos:start="277:31" pos:end="277:39">(<argument pos:start="277:32" pos:end="277:38"><expr pos:start="277:32" pos:end="277:38"><operator pos:start="277:32" pos:end="277:32">&amp;</operator><name pos:start="277:33" pos:end="277:38"><name pos:start="277:33" pos:end="277:34">sl</name><operator pos:start="277:35" pos:end="277:36">-&gt;</operator><name pos:start="277:37" pos:end="277:38">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="279:9" pos:end="285:9"><if pos:start="279:9" pos:end="285:9">if <condition pos:start="279:12" pos:end="279:20">(<expr pos:start="279:13" pos:end="279:19"><name pos:start="279:13" pos:end="279:15">tmp</name> <operator pos:start="279:17" pos:end="279:17">&gt;</operator> <literal type="number" pos:start="279:19" pos:end="279:19">2</literal></expr>)</condition> <block pos:start="279:22" pos:end="285:9">{<block_content pos:start="281:13" pos:end="283:39">

            <expr_stmt pos:start="281:13" pos:end="281:80"><expr pos:start="281:13" pos:end="281:79"><call pos:start="281:13" pos:end="281:79"><name pos:start="281:13" pos:end="281:18">av_log</name><argument_list pos:start="281:19" pos:end="281:79">(<argument pos:start="281:20" pos:end="281:27"><expr pos:start="281:20" pos:end="281:27"><name pos:start="281:20" pos:end="281:27"><name pos:start="281:20" pos:end="281:20">h</name><operator pos:start="281:21" pos:end="281:22">-&gt;</operator><name pos:start="281:23" pos:end="281:27">avctx</name></name></expr></argument>, <argument pos:start="281:30" pos:end="281:41"><expr pos:start="281:30" pos:end="281:41"><name pos:start="281:30" pos:end="281:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="281:44" pos:end="281:73"><expr pos:start="281:44" pos:end="281:73"><literal type="string" pos:start="281:44" pos:end="281:73">"cabac_init_idc %u overflow\n"</literal></expr></argument>, <argument pos:start="281:76" pos:end="281:78"><expr pos:start="281:76" pos:end="281:78"><name pos:start="281:76" pos:end="281:78">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="283:13" pos:end="283:39">return <expr pos:start="283:20" pos:end="283:38"><name pos:start="283:20" pos:end="283:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="287:9" pos:end="287:33"><expr pos:start="287:9" pos:end="287:32"><name pos:start="287:9" pos:end="287:26"><name pos:start="287:9" pos:end="287:10">sl</name><operator pos:start="287:11" pos:end="287:12">-&gt;</operator><name pos:start="287:13" pos:end="287:26">cabac_init_idc</name></name> <operator pos:start="287:28" pos:end="287:28">=</operator> <name pos:start="287:30" pos:end="287:32">tmp</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="293:5" pos:end="293:29"><expr pos:start="293:5" pos:end="293:28"><name pos:start="293:5" pos:end="293:24"><name pos:start="293:5" pos:end="293:6">sl</name><operator pos:start="293:7" pos:end="293:8">-&gt;</operator><name pos:start="293:9" pos:end="293:24">last_qscale_diff</name></name> <operator pos:start="293:26" pos:end="293:26">=</operator> <literal type="number" pos:start="293:28" pos:end="293:28">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="295:5" pos:end="295:48"><expr pos:start="295:5" pos:end="295:47"><name pos:start="295:5" pos:end="295:7">tmp</name> <operator pos:start="295:9" pos:end="295:9">=</operator> <name pos:start="295:11" pos:end="295:22"><name pos:start="295:11" pos:end="295:13">pps</name><operator pos:start="295:14" pos:end="295:15">-&gt;</operator><name pos:start="295:16" pos:end="295:22">init_qp</name></name> <operator pos:start="295:24" pos:end="295:24">+</operator> <call pos:start="295:26" pos:end="295:47"><name pos:start="295:26" pos:end="295:38">get_se_golomb</name><argument_list pos:start="295:39" pos:end="295:47">(<argument pos:start="295:40" pos:end="295:46"><expr pos:start="295:40" pos:end="295:46"><operator pos:start="295:40" pos:end="295:40">&amp;</operator><name pos:start="295:41" pos:end="295:46"><name pos:start="295:41" pos:end="295:42">sl</name><operator pos:start="295:43" pos:end="295:44">-&gt;</operator><name pos:start="295:45" pos:end="295:46">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="297:5" pos:end="303:5"><if pos:start="297:5" pos:end="303:5">if <condition pos:start="297:8" pos:end="297:49">(<expr pos:start="297:9" pos:end="297:48"><name pos:start="297:9" pos:end="297:11">tmp</name> <operator pos:start="297:13" pos:end="297:13">&gt;</operator> <literal type="number" pos:start="297:15" pos:end="297:18">51</literal> <operator pos:start="297:18" pos:end="297:18">+</operator> <literal type="number" pos:start="297:20" pos:end="297:20">6</literal> <operator pos:start="297:22" pos:end="297:22">*</operator> <operator pos:start="297:24" pos:end="297:24">(</operator><name pos:start="297:25" pos:end="297:43"><name pos:start="297:25" pos:end="297:27">sps</name><operator pos:start="297:28" pos:end="297:29">-&gt;</operator><name pos:start="297:30" pos:end="297:43">bit_depth_luma</name></name> <operator pos:start="297:45" pos:end="297:45">-</operator> <literal type="number" pos:start="297:47" pos:end="297:47">8</literal><operator pos:start="297:48" pos:end="297:48">)</operator></expr>)</condition> <block pos:start="297:51" pos:end="303:5">{<block_content pos:start="299:9" pos:end="301:35">

        <expr_stmt pos:start="299:9" pos:end="299:68"><expr pos:start="299:9" pos:end="299:67"><call pos:start="299:9" pos:end="299:67"><name pos:start="299:9" pos:end="299:14">av_log</name><argument_list pos:start="299:15" pos:end="299:67">(<argument pos:start="299:16" pos:end="299:23"><expr pos:start="299:16" pos:end="299:23"><name pos:start="299:16" pos:end="299:23"><name pos:start="299:16" pos:end="299:16">h</name><operator pos:start="299:17" pos:end="299:18">-&gt;</operator><name pos:start="299:19" pos:end="299:23">avctx</name></name></expr></argument>, <argument pos:start="299:26" pos:end="299:37"><expr pos:start="299:26" pos:end="299:37"><name pos:start="299:26" pos:end="299:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="299:40" pos:end="299:61"><expr pos:start="299:40" pos:end="299:61"><literal type="string" pos:start="299:40" pos:end="299:61">"QP %u out of range\n"</literal></expr></argument>, <argument pos:start="299:64" pos:end="299:66"><expr pos:start="299:64" pos:end="299:66"><name pos:start="299:64" pos:end="299:66">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="301:9" pos:end="301:35">return <expr pos:start="301:16" pos:end="301:34"><name pos:start="301:16" pos:end="301:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="305:5" pos:end="305:27"><expr pos:start="305:5" pos:end="305:26"><name pos:start="305:5" pos:end="305:14"><name pos:start="305:5" pos:end="305:6">sl</name><operator pos:start="305:7" pos:end="305:8">-&gt;</operator><name pos:start="305:9" pos:end="305:14">qscale</name></name>       <operator pos:start="305:22" pos:end="305:22">=</operator> <name pos:start="305:24" pos:end="305:26">tmp</name></expr>;</expr_stmt>

    <expr_stmt pos:start="307:5" pos:end="307:57"><expr pos:start="307:5" pos:end="307:56"><name pos:start="307:5" pos:end="307:20"><name pos:start="307:5" pos:end="307:6">sl</name><operator pos:start="307:7" pos:end="307:8">-&gt;</operator><name pos:start="307:9" pos:end="307:17">chroma_qp</name><index pos:start="307:18" pos:end="307:20">[<expr pos:start="307:19" pos:end="307:19"><literal type="number" pos:start="307:19" pos:end="307:19">0</literal></expr>]</index></name> <operator pos:start="307:22" pos:end="307:22">=</operator> <call pos:start="307:24" pos:end="307:56"><name pos:start="307:24" pos:end="307:36">get_chroma_qp</name><argument_list pos:start="307:37" pos:end="307:56">(<argument pos:start="307:38" pos:end="307:40"><expr pos:start="307:38" pos:end="307:40"><name pos:start="307:38" pos:end="307:40">pps</name></expr></argument>, <argument pos:start="307:43" pos:end="307:43"><expr pos:start="307:43" pos:end="307:43"><literal type="number" pos:start="307:43" pos:end="307:43">0</literal></expr></argument>, <argument pos:start="307:46" pos:end="307:55"><expr pos:start="307:46" pos:end="307:55"><name pos:start="307:46" pos:end="307:55"><name pos:start="307:46" pos:end="307:47">sl</name><operator pos:start="307:48" pos:end="307:49">-&gt;</operator><name pos:start="307:50" pos:end="307:55">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="309:5" pos:end="309:57"><expr pos:start="309:5" pos:end="309:56"><name pos:start="309:5" pos:end="309:20"><name pos:start="309:5" pos:end="309:6">sl</name><operator pos:start="309:7" pos:end="309:8">-&gt;</operator><name pos:start="309:9" pos:end="309:17">chroma_qp</name><index pos:start="309:18" pos:end="309:20">[<expr pos:start="309:19" pos:end="309:19"><literal type="number" pos:start="309:19" pos:end="309:19">1</literal></expr>]</index></name> <operator pos:start="309:22" pos:end="309:22">=</operator> <call pos:start="309:24" pos:end="309:56"><name pos:start="309:24" pos:end="309:36">get_chroma_qp</name><argument_list pos:start="309:37" pos:end="309:56">(<argument pos:start="309:38" pos:end="309:40"><expr pos:start="309:38" pos:end="309:40"><name pos:start="309:38" pos:end="309:40">pps</name></expr></argument>, <argument pos:start="309:43" pos:end="309:43"><expr pos:start="309:43" pos:end="309:43"><literal type="number" pos:start="309:43" pos:end="309:43">1</literal></expr></argument>, <argument pos:start="309:46" pos:end="309:55"><expr pos:start="309:46" pos:end="309:55"><name pos:start="309:46" pos:end="309:55"><name pos:start="309:46" pos:end="309:47">sl</name><operator pos:start="309:48" pos:end="309:49">-&gt;</operator><name pos:start="309:50" pos:end="309:55">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:start="311:5" pos:end="311:34">// FIXME qscale / qp ... stuff</comment>

    <if_stmt pos:start="313:5" pos:end="315:27"><if pos:start="313:5" pos:end="315:27">if <condition pos:start="313:8" pos:end="313:45">(<expr pos:start="313:9" pos:end="313:44"><name pos:start="313:9" pos:end="313:22"><name pos:start="313:9" pos:end="313:10">sl</name><operator pos:start="313:11" pos:end="313:12">-&gt;</operator><name pos:start="313:13" pos:end="313:22">slice_type</name></name> <operator pos:start="313:24" pos:end="313:25">==</operator> <name pos:start="313:27" pos:end="313:44">AV_PICTURE_TYPE_SP</name></expr>)</condition><block type="pseudo" pos:start="315:9" pos:end="315:27"><block_content pos:start="315:9" pos:end="315:27">

        <expr_stmt pos:start="315:9" pos:end="315:27"><expr pos:start="315:9" pos:end="315:26"><call pos:start="315:9" pos:end="315:26"><name pos:start="315:9" pos:end="315:17">get_bits1</name><argument_list pos:start="315:18" pos:end="315:26">(<argument pos:start="315:19" pos:end="315:25"><expr pos:start="315:19" pos:end="315:25"><operator pos:start="315:19" pos:end="315:19">&amp;</operator><name pos:start="315:20" pos:end="315:25"><name pos:start="315:20" pos:end="315:21">sl</name><operator pos:start="315:22" pos:end="315:23">-&gt;</operator><name pos:start="315:24" pos:end="315:25">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="315:29" pos:end="315:52">/* sp_for_switch_flag */</comment>

    <if_stmt pos:start="317:5" pos:end="321:31"><if pos:start="317:5" pos:end="321:31">if <condition pos:start="317:8" pos:end="319:45">(<expr pos:start="317:9" pos:end="319:44"><name pos:start="317:9" pos:end="317:22"><name pos:start="317:9" pos:end="317:10">sl</name><operator pos:start="317:11" pos:end="317:12">-&gt;</operator><name pos:start="317:13" pos:end="317:22">slice_type</name></name> <operator pos:start="317:24" pos:end="317:25">==</operator> <name pos:start="317:27" pos:end="317:44">AV_PICTURE_TYPE_SP</name> <operator pos:start="317:46" pos:end="317:47">||</operator>

        <name pos:start="319:9" pos:end="319:22"><name pos:start="319:9" pos:end="319:10">sl</name><operator pos:start="319:11" pos:end="319:12">-&gt;</operator><name pos:start="319:13" pos:end="319:22">slice_type</name></name> <operator pos:start="319:24" pos:end="319:25">==</operator> <name pos:start="319:27" pos:end="319:44">AV_PICTURE_TYPE_SI</name></expr>)</condition><block type="pseudo" pos:start="321:9" pos:end="321:31"><block_content pos:start="321:9" pos:end="321:31">

        <expr_stmt pos:start="321:9" pos:end="321:31"><expr pos:start="321:9" pos:end="321:30"><call pos:start="321:9" pos:end="321:30"><name pos:start="321:9" pos:end="321:21">get_se_golomb</name><argument_list pos:start="321:22" pos:end="321:30">(<argument pos:start="321:23" pos:end="321:29"><expr pos:start="321:23" pos:end="321:29"><operator pos:start="321:23" pos:end="321:23">&amp;</operator><name pos:start="321:24" pos:end="321:29"><name pos:start="321:24" pos:end="321:25">sl</name><operator pos:start="321:26" pos:end="321:27">-&gt;</operator><name pos:start="321:28" pos:end="321:29">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="321:33" pos:end="321:52">/* slice_qs_delta */</comment>



    <expr_stmt pos:start="325:5" pos:end="325:34"><expr pos:start="325:5" pos:end="325:33"><name pos:start="325:5" pos:end="325:25"><name pos:start="325:5" pos:end="325:6">sl</name><operator pos:start="325:7" pos:end="325:8">-&gt;</operator><name pos:start="325:9" pos:end="325:25">deblocking_filter</name></name>     <operator pos:start="325:31" pos:end="325:31">=</operator> <literal type="number" pos:start="325:33" pos:end="325:33">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="327:5" pos:end="327:34"><expr pos:start="327:5" pos:end="327:33"><name pos:start="327:5" pos:end="327:29"><name pos:start="327:5" pos:end="327:6">sl</name><operator pos:start="327:7" pos:end="327:8">-&gt;</operator><name pos:start="327:9" pos:end="327:29">slice_alpha_c0_offset</name></name> <operator pos:start="327:31" pos:end="327:31">=</operator> <literal type="number" pos:start="327:33" pos:end="327:33">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="329:5" pos:end="329:34"><expr pos:start="329:5" pos:end="329:33"><name pos:start="329:5" pos:end="329:25"><name pos:start="329:5" pos:end="329:6">sl</name><operator pos:start="329:7" pos:end="329:8">-&gt;</operator><name pos:start="329:9" pos:end="329:25">slice_beta_offset</name></name>     <operator pos:start="329:31" pos:end="329:31">=</operator> <literal type="number" pos:start="329:33" pos:end="329:33">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="331:5" pos:end="379:5"><if pos:start="331:5" pos:end="379:5">if <condition pos:start="331:8" pos:end="331:50">(<expr pos:start="331:9" pos:end="331:49"><name pos:start="331:9" pos:end="331:49"><name pos:start="331:9" pos:end="331:11">pps</name><operator pos:start="331:12" pos:end="331:13">-&gt;</operator><name pos:start="331:14" pos:end="331:49">deblocking_filter_parameters_present</name></name></expr>)</condition> <block pos:start="331:52" pos:end="379:5">{<block_content pos:start="333:9" pos:end="377:9">

        <expr_stmt pos:start="333:9" pos:end="333:40"><expr pos:start="333:9" pos:end="333:39"><name pos:start="333:9" pos:end="333:11">tmp</name> <operator pos:start="333:13" pos:end="333:13">=</operator> <call pos:start="333:15" pos:end="333:39"><name pos:start="333:15" pos:end="333:30">get_ue_golomb_31</name><argument_list pos:start="333:31" pos:end="333:39">(<argument pos:start="333:32" pos:end="333:38"><expr pos:start="333:32" pos:end="333:38"><operator pos:start="333:32" pos:end="333:32">&amp;</operator><name pos:start="333:33" pos:end="333:38"><name pos:start="333:33" pos:end="333:34">sl</name><operator pos:start="333:35" pos:end="333:36">-&gt;</operator><name pos:start="333:37" pos:end="333:38">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="335:9" pos:end="343:9"><if pos:start="335:9" pos:end="343:9">if <condition pos:start="335:12" pos:end="335:20">(<expr pos:start="335:13" pos:end="335:19"><name pos:start="335:13" pos:end="335:15">tmp</name> <operator pos:start="335:17" pos:end="335:17">&gt;</operator> <literal type="number" pos:start="335:19" pos:end="335:19">2</literal></expr>)</condition> <block pos:start="335:22" pos:end="343:9">{<block_content pos:start="337:13" pos:end="341:39">

            <expr_stmt pos:start="337:13" pos:end="339:67"><expr pos:start="337:13" pos:end="339:66"><call pos:start="337:13" pos:end="339:66"><name pos:start="337:13" pos:end="337:18">av_log</name><argument_list pos:start="337:19" pos:end="339:66">(<argument pos:start="337:20" pos:end="337:27"><expr pos:start="337:20" pos:end="337:27"><name pos:start="337:20" pos:end="337:27"><name pos:start="337:20" pos:end="337:20">h</name><operator pos:start="337:21" pos:end="337:22">-&gt;</operator><name pos:start="337:23" pos:end="337:27">avctx</name></name></expr></argument>, <argument pos:start="337:30" pos:end="337:41"><expr pos:start="337:30" pos:end="337:41"><name pos:start="337:30" pos:end="337:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="339:20" pos:end="339:60"><expr pos:start="339:20" pos:end="339:60"><literal type="string" pos:start="339:20" pos:end="339:60">"deblocking_filter_idc %u out of range\n"</literal></expr></argument>, <argument pos:start="339:63" pos:end="339:65"><expr pos:start="339:63" pos:end="339:65"><name pos:start="339:63" pos:end="339:65">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="341:13" pos:end="341:39">return <expr pos:start="341:20" pos:end="341:38"><name pos:start="341:20" pos:end="341:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="345:9" pos:end="345:36"><expr pos:start="345:9" pos:end="345:35"><name pos:start="345:9" pos:end="345:29"><name pos:start="345:9" pos:end="345:10">sl</name><operator pos:start="345:11" pos:end="345:12">-&gt;</operator><name pos:start="345:13" pos:end="345:29">deblocking_filter</name></name> <operator pos:start="345:31" pos:end="345:31">=</operator> <name pos:start="345:33" pos:end="345:35">tmp</name></expr>;</expr_stmt>

        <if_stmt pos:start="347:9" pos:end="349:39"><if pos:start="347:9" pos:end="349:39">if <condition pos:start="347:12" pos:end="347:38">(<expr pos:start="347:13" pos:end="347:37"><name pos:start="347:13" pos:end="347:33"><name pos:start="347:13" pos:end="347:14">sl</name><operator pos:start="347:15" pos:end="347:16">-&gt;</operator><name pos:start="347:17" pos:end="347:33">deblocking_filter</name></name> <operator pos:start="347:35" pos:end="347:35">&lt;</operator> <literal type="number" pos:start="347:37" pos:end="347:37">2</literal></expr>)</condition><block type="pseudo" pos:start="349:13" pos:end="349:39"><block_content pos:start="349:13" pos:end="349:39">

            <expr_stmt pos:start="349:13" pos:end="349:39"><expr pos:start="349:13" pos:end="349:38"><name pos:start="349:13" pos:end="349:33"><name pos:start="349:13" pos:end="349:14">sl</name><operator pos:start="349:15" pos:end="349:16">-&gt;</operator><name pos:start="349:17" pos:end="349:33">deblocking_filter</name></name> <operator pos:start="349:35" pos:end="349:36">^=</operator> <literal type="number" pos:start="349:38" pos:end="349:38">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>  <comment type="line" pos:start="349:42" pos:end="349:49">// 1&lt;-&gt;0</comment>



        <if_stmt pos:start="353:9" pos:end="377:9"><if pos:start="353:9" pos:end="377:9">if <condition pos:start="353:12" pos:end="353:34">(<expr pos:start="353:13" pos:end="353:33"><name pos:start="353:13" pos:end="353:33"><name pos:start="353:13" pos:end="353:14">sl</name><operator pos:start="353:15" pos:end="353:16">-&gt;</operator><name pos:start="353:17" pos:end="353:33">deblocking_filter</name></name></expr>)</condition> <block pos:start="353:36" pos:end="377:9">{<block_content pos:start="355:13" pos:end="375:13">

            <expr_stmt pos:start="355:13" pos:end="355:67"><expr pos:start="355:13" pos:end="355:66"><name pos:start="355:13" pos:end="355:37"><name pos:start="355:13" pos:end="355:14">sl</name><operator pos:start="355:15" pos:end="355:16">-&gt;</operator><name pos:start="355:17" pos:end="355:37">slice_alpha_c0_offset</name></name> <operator pos:start="355:39" pos:end="355:39">=</operator> <call pos:start="355:41" pos:end="355:62"><name pos:start="355:41" pos:end="355:53">get_se_golomb</name><argument_list pos:start="355:54" pos:end="355:62">(<argument pos:start="355:55" pos:end="355:61"><expr pos:start="355:55" pos:end="355:61"><operator pos:start="355:55" pos:end="355:55">&amp;</operator><name pos:start="355:56" pos:end="355:61"><name pos:start="355:56" pos:end="355:57">sl</name><operator pos:start="355:58" pos:end="355:59">-&gt;</operator><name pos:start="355:60" pos:end="355:61">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="355:64" pos:end="355:64">*</operator> <literal type="number" pos:start="355:66" pos:end="355:66">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="357:13" pos:end="357:67"><expr pos:start="357:13" pos:end="357:66"><name pos:start="357:13" pos:end="357:33"><name pos:start="357:13" pos:end="357:14">sl</name><operator pos:start="357:15" pos:end="357:16">-&gt;</operator><name pos:start="357:17" pos:end="357:33">slice_beta_offset</name></name>     <operator pos:start="357:39" pos:end="357:39">=</operator> <call pos:start="357:41" pos:end="357:62"><name pos:start="357:41" pos:end="357:53">get_se_golomb</name><argument_list pos:start="357:54" pos:end="357:62">(<argument pos:start="357:55" pos:end="357:61"><expr pos:start="357:55" pos:end="357:61"><operator pos:start="357:55" pos:end="357:55">&amp;</operator><name pos:start="357:56" pos:end="357:61"><name pos:start="357:56" pos:end="357:57">sl</name><operator pos:start="357:58" pos:end="357:59">-&gt;</operator><name pos:start="357:60" pos:end="357:61">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="357:64" pos:end="357:64">*</operator> <literal type="number" pos:start="357:66" pos:end="357:66">2</literal></expr>;</expr_stmt>

            <if_stmt pos:start="359:13" pos:end="375:13"><if pos:start="359:13" pos:end="375:13">if <condition pos:start="359:16" pos:end="365:44">(<expr pos:start="359:17" pos:end="365:43"><name pos:start="359:17" pos:end="359:41"><name pos:start="359:17" pos:end="359:18">sl</name><operator pos:start="359:19" pos:end="359:20">-&gt;</operator><name pos:start="359:21" pos:end="359:41">slice_alpha_c0_offset</name></name> <operator pos:start="359:43" pos:end="359:43">&gt;</operator>  <literal type="number" pos:start="359:46" pos:end="359:47">12</literal> <operator pos:start="359:49" pos:end="359:50">||</operator>

                <name pos:start="361:17" pos:end="361:41"><name pos:start="361:17" pos:end="361:18">sl</name><operator pos:start="361:19" pos:end="361:20">-&gt;</operator><name pos:start="361:21" pos:end="361:41">slice_alpha_c0_offset</name></name> <operator pos:start="361:43" pos:end="361:43">&lt;</operator> <operator pos:start="361:45" pos:end="361:45">-</operator><literal type="number" pos:start="361:46" pos:end="361:47">12</literal> <operator pos:start="361:49" pos:end="361:50">||</operator>

                <name pos:start="363:17" pos:end="363:37"><name pos:start="363:17" pos:end="363:18">sl</name><operator pos:start="363:19" pos:end="363:20">-&gt;</operator><name pos:start="363:21" pos:end="363:37">slice_beta_offset</name></name> <operator pos:start="363:39" pos:end="363:39">&gt;</operator>  <literal type="number" pos:start="363:42" pos:end="363:43">12</literal>     <operator pos:start="363:49" pos:end="363:50">||</operator>

                <name pos:start="365:17" pos:end="365:37"><name pos:start="365:17" pos:end="365:18">sl</name><operator pos:start="365:19" pos:end="365:20">-&gt;</operator><name pos:start="365:21" pos:end="365:37">slice_beta_offset</name></name> <operator pos:start="365:39" pos:end="365:39">&lt;</operator> <operator pos:start="365:41" pos:end="365:41">-</operator><literal type="number" pos:start="365:42" pos:end="365:43">12</literal></expr>)</condition> <block pos:start="365:46" pos:end="375:13">{<block_content pos:start="367:17" pos:end="373:43">

                <expr_stmt pos:start="367:17" pos:end="371:73"><expr pos:start="367:17" pos:end="371:72"><call pos:start="367:17" pos:end="371:72"><name pos:start="367:17" pos:end="367:22">av_log</name><argument_list pos:start="367:23" pos:end="371:72">(<argument pos:start="367:24" pos:end="367:31"><expr pos:start="367:24" pos:end="367:31"><name pos:start="367:24" pos:end="367:31"><name pos:start="367:24" pos:end="367:24">h</name><operator pos:start="367:25" pos:end="367:26">-&gt;</operator><name pos:start="367:27" pos:end="367:31">avctx</name></name></expr></argument>, <argument pos:start="367:34" pos:end="367:45"><expr pos:start="367:34" pos:end="367:45"><name pos:start="367:34" pos:end="367:45">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="369:24" pos:end="369:74"><expr pos:start="369:24" pos:end="369:74"><literal type="string" pos:start="369:24" pos:end="369:74">"deblocking filter parameters %d %d out of range\n"</literal></expr></argument>,

                       <argument pos:start="371:24" pos:end="371:48"><expr pos:start="371:24" pos:end="371:48"><name pos:start="371:24" pos:end="371:48"><name pos:start="371:24" pos:end="371:25">sl</name><operator pos:start="371:26" pos:end="371:27">-&gt;</operator><name pos:start="371:28" pos:end="371:48">slice_alpha_c0_offset</name></name></expr></argument>, <argument pos:start="371:51" pos:end="371:71"><expr pos:start="371:51" pos:end="371:71"><name pos:start="371:51" pos:end="371:71"><name pos:start="371:51" pos:end="371:52">sl</name><operator pos:start="371:53" pos:end="371:54">-&gt;</operator><name pos:start="371:55" pos:end="371:71">slice_beta_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="373:17" pos:end="373:43">return <expr pos:start="373:24" pos:end="373:42"><name pos:start="373:24" pos:end="373:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="383:5" pos:end="383:13">return <expr pos:start="383:12" pos:end="383:12"><literal type="number" pos:start="383:12" pos:end="383:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
