<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6141.c" pos:tabs="8"><function pos:start="1:1" pos:end="165:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">rtsp_read_packet</name><parameter_list pos:start="1:28" pos:end="1:62">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:61"><decl pos:start="1:49" pos:end="1:61"><type pos:start="1:49" pos:end="1:61"><name pos:start="1:49" pos:end="1:56">AVPacket</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:61">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="165:1">{<block_content pos:start="5:5" pos:end="163:13">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">RTSPState</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:17">rt</name> <init pos:start="5:19" pos:end="5:32">= <expr pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:21">s</name><operator pos:start="5:22" pos:end="5:23">-&gt;</operator><name pos:start="5:24" pos:end="5:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:47"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:21">RTSPMessageHeader</name></type> <name pos:start="9:23" pos:end="9:28">reply1</name></decl>, <decl pos:start="9:31" pos:end="9:46"><type ref="prev" pos:start="9:5" pos:end="9:21"><modifier pos:start="9:31" pos:end="9:31">*</modifier></type><name pos:start="9:32" pos:end="9:36">reply</name> <init pos:start="9:38" pos:end="9:46">= <expr pos:start="9:40" pos:end="9:46"><operator pos:start="9:40" pos:end="9:40">&amp;</operator><name pos:start="9:41" pos:end="9:46">reply1</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:18"><name pos:start="11:10" pos:end="11:12">cmd</name><index pos:start="11:13" pos:end="11:18">[<expr pos:start="11:14" pos:end="11:17"><literal type="number" pos:start="11:14" pos:end="11:17">1024</literal></expr>]</index></name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="129:5"><if pos:start="15:5" pos:end="129:5">if <condition pos:start="15:8" pos:end="15:44">(<expr pos:start="15:9" pos:end="15:43"><name pos:start="15:9" pos:end="15:23"><name pos:start="15:9" pos:end="15:10">rt</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:23">server_type</name></name> <operator pos:start="15:25" pos:end="15:26">==</operator> <name pos:start="15:28" pos:end="15:43">RTSP_SERVER_REAL</name></expr>)</condition> <block pos:start="15:46" pos:end="129:5">{<block_content pos:start="17:9" pos:end="127:9">

        <decl_stmt pos:start="17:9" pos:end="17:14"><decl pos:start="17:9" pos:end="17:13"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:13">i</name></decl>;</decl_stmt>

        <decl_stmt pos:start="19:9" pos:end="19:42"><decl pos:start="19:9" pos:end="19:41"><type pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:12">enum</name> <name pos:start="19:14" pos:end="19:22">AVDiscard</name></name></type> <name pos:start="19:24" pos:end="19:41"><name pos:start="19:24" pos:end="19:28">cache</name><index pos:start="19:29" pos:end="19:41">[<expr pos:start="19:30" pos:end="19:40"><name pos:start="19:30" pos:end="19:40">MAX_STREAMS</name></expr>]</index></name></decl>;</decl_stmt>



        <for pos:start="23:9" pos:end="25:46">for <control pos:start="23:13" pos:end="23:43">(<init pos:start="23:14" pos:end="23:19"><expr pos:start="23:14" pos:end="23:18"><name pos:start="23:14" pos:end="23:14">i</name> <operator pos:start="23:16" pos:end="23:16">=</operator> <literal type="number" pos:start="23:18" pos:end="23:18">0</literal></expr>;</init> <condition pos:start="23:21" pos:end="23:38"><expr pos:start="23:21" pos:end="23:37"><name pos:start="23:21" pos:end="23:21">i</name> <operator pos:start="23:23" pos:end="23:23">&lt;</operator> <name pos:start="23:25" pos:end="23:37"><name pos:start="23:25" pos:end="23:25">s</name><operator pos:start="23:26" pos:end="23:27">-&gt;</operator><name pos:start="23:28" pos:end="23:37">nb_streams</name></name></expr>;</condition> <incr pos:start="23:40" pos:end="23:42"><expr pos:start="23:40" pos:end="23:42"><name pos:start="23:40" pos:end="23:40">i</name><operator pos:start="23:41" pos:end="23:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="25:13" pos:end="25:46"><block_content pos:start="25:13" pos:end="25:46">

            <expr_stmt pos:start="25:13" pos:end="25:46"><expr pos:start="25:13" pos:end="25:45"><name pos:start="25:13" pos:end="25:20"><name pos:start="25:13" pos:end="25:17">cache</name><index pos:start="25:18" pos:end="25:20">[<expr pos:start="25:19" pos:end="25:19"><name pos:start="25:19" pos:end="25:19">i</name></expr>]</index></name> <operator pos:start="25:22" pos:end="25:22">=</operator> <name pos:start="25:24" pos:end="25:36"><name pos:start="25:24" pos:end="25:24">s</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:33">streams</name><index pos:start="25:34" pos:end="25:36">[<expr pos:start="25:35" pos:end="25:35"><name pos:start="25:35" pos:end="25:35">i</name></expr>]</index></name><operator pos:start="25:37" pos:end="25:38">-&gt;</operator><name pos:start="25:39" pos:end="25:45">discard</name></expr>;</expr_stmt></block_content></block></for>



        <if_stmt pos:start="29:9" pos:end="53:9"><if pos:start="29:9" pos:end="53:9">if <condition pos:start="29:12" pos:end="29:35">(<expr pos:start="29:13" pos:end="29:34"><operator pos:start="29:13" pos:end="29:13">!</operator><name pos:start="29:14" pos:end="29:34"><name pos:start="29:14" pos:end="29:15">rt</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:34">need_subscription</name></name></expr>)</condition> <block pos:start="29:37" pos:end="53:9">{<block_content pos:start="31:13" pos:end="51:13">

            <if_stmt pos:start="31:13" pos:end="51:13"><if pos:start="31:13" pos:end="51:13">if <condition pos:start="31:16" pos:end="33:64">(<expr pos:start="31:17" pos:end="33:63"><call pos:start="31:17" pos:end="33:63"><name pos:start="31:17" pos:end="31:22">memcmp</name> <argument_list pos:start="31:24" pos:end="33:63">(<argument pos:start="31:25" pos:end="31:29"><expr pos:start="31:25" pos:end="31:29"><name pos:start="31:25" pos:end="31:29">cache</name></expr></argument>, <argument pos:start="31:32" pos:end="31:51"><expr pos:start="31:32" pos:end="31:51"><name pos:start="31:32" pos:end="31:51"><name pos:start="31:32" pos:end="31:33">rt</name><operator pos:start="31:34" pos:end="31:35">-&gt;</operator><name pos:start="31:36" pos:end="31:51">real_setup_cache</name></name></expr></argument>,

                        <argument pos:start="33:25" pos:end="33:62"><expr pos:start="33:25" pos:end="33:62"><sizeof pos:start="33:25" pos:end="33:46">sizeof<argument_list pos:start="33:31" pos:end="33:46">(<argument pos:start="33:32" pos:end="33:45"><expr pos:start="33:32" pos:end="33:45">enum <name pos:start="33:37" pos:end="33:45">AVDiscard</name></expr></argument>)</argument_list></sizeof> <operator pos:start="33:48" pos:end="33:48">*</operator> <name pos:start="33:50" pos:end="33:62"><name pos:start="33:50" pos:end="33:50">s</name><operator pos:start="33:51" pos:end="33:52">-&gt;</operator><name pos:start="33:53" pos:end="33:62">nb_streams</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:66" pos:end="51:13">{<block_content pos:start="35:17" pos:end="49:42">

                <expr_stmt pos:start="35:17" pos:end="39:48"><expr pos:start="35:17" pos:end="39:47"><call pos:start="35:17" pos:end="39:47"><name pos:start="35:17" pos:end="35:24">snprintf</name><argument_list pos:start="35:25" pos:end="39:47">(<argument pos:start="35:26" pos:end="35:28"><expr pos:start="35:26" pos:end="35:28"><name pos:start="35:26" pos:end="35:28">cmd</name></expr></argument>, <argument pos:start="35:31" pos:end="35:41"><expr pos:start="35:31" pos:end="35:41"><sizeof pos:start="35:31" pos:end="35:41">sizeof<argument_list pos:start="35:37" pos:end="35:41">(<argument pos:start="35:38" pos:end="35:40"><expr pos:start="35:38" pos:end="35:40"><name pos:start="35:38" pos:end="35:40">cmd</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                         <argument pos:start="37:26" pos:end="37:46"><expr pos:start="37:26" pos:end="37:46"><literal type="string" pos:start="37:26" pos:end="37:46">"Unsubscribe: %s\r\n"</literal></expr></argument>,

                         <argument pos:start="39:26" pos:end="39:46"><expr pos:start="39:26" pos:end="39:46"><name pos:start="39:26" pos:end="39:46"><name pos:start="39:26" pos:end="39:27">rt</name><operator pos:start="39:28" pos:end="39:29">-&gt;</operator><name pos:start="39:30" pos:end="39:46">last_subscription</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="41:17" pos:end="43:51"><expr pos:start="41:17" pos:end="43:50"><call pos:start="41:17" pos:end="43:50"><name pos:start="41:17" pos:end="41:32">ff_rtsp_send_cmd</name><argument_list pos:start="41:33" pos:end="43:50">(<argument pos:start="41:34" pos:end="41:34"><expr pos:start="41:34" pos:end="41:34"><name pos:start="41:34" pos:end="41:34">s</name></expr></argument>, <argument pos:start="41:37" pos:end="41:51"><expr pos:start="41:37" pos:end="41:51"><literal type="string" pos:start="41:37" pos:end="41:51">"SET_PARAMETER"</literal></expr></argument>, <argument pos:start="41:54" pos:end="41:68"><expr pos:start="41:54" pos:end="41:68"><name pos:start="41:54" pos:end="41:68"><name pos:start="41:54" pos:end="41:55">rt</name><operator pos:start="41:56" pos:end="41:57">-&gt;</operator><name pos:start="41:58" pos:end="41:68">control_uri</name></name></expr></argument>,

                                 <argument pos:start="43:34" pos:end="43:36"><expr pos:start="43:34" pos:end="43:36"><name pos:start="43:34" pos:end="43:36">cmd</name></expr></argument>, <argument pos:start="43:39" pos:end="43:43"><expr pos:start="43:39" pos:end="43:43"><name pos:start="43:39" pos:end="43:43">reply</name></expr></argument>, <argument pos:start="43:46" pos:end="43:49"><expr pos:start="43:46" pos:end="43:49"><name pos:start="43:46" pos:end="43:49">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="45:17" pos:end="47:47"><if pos:start="45:17" pos:end="47:47">if <condition pos:start="45:20" pos:end="45:57">(<expr pos:start="45:21" pos:end="45:56"><name pos:start="45:21" pos:end="45:38"><name pos:start="45:21" pos:end="45:25">reply</name><operator pos:start="45:26" pos:end="45:27">-&gt;</operator><name pos:start="45:28" pos:end="45:38">status_code</name></name> <operator pos:start="45:40" pos:end="45:41">!=</operator> <name pos:start="45:43" pos:end="45:56">RTSP_STATUS_OK</name></expr>)</condition><block type="pseudo" pos:start="47:21" pos:end="47:47"><block_content pos:start="47:21" pos:end="47:47">

                    <return pos:start="47:21" pos:end="47:47">return <expr pos:start="47:28" pos:end="47:46"><name pos:start="47:28" pos:end="47:46">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="49:17" pos:end="49:42"><expr pos:start="49:17" pos:end="49:41"><name pos:start="49:17" pos:end="49:37"><name pos:start="49:17" pos:end="49:18">rt</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:37">need_subscription</name></name> <operator pos:start="49:39" pos:end="49:39">=</operator> <literal type="number" pos:start="49:41" pos:end="49:41">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="57:9" pos:end="127:9"><if pos:start="57:9" pos:end="127:9">if <condition pos:start="57:12" pos:end="57:34">(<expr pos:start="57:13" pos:end="57:33"><name pos:start="57:13" pos:end="57:33"><name pos:start="57:13" pos:end="57:14">rt</name><operator pos:start="57:15" pos:end="57:16">-&gt;</operator><name pos:start="57:17" pos:end="57:33">need_subscription</name></name></expr>)</condition> <block pos:start="57:36" pos:end="127:9">{<block_content pos:start="59:13" pos:end="125:35">

            <decl_stmt pos:start="59:13" pos:end="59:38"><decl pos:start="59:13" pos:end="59:17"><type pos:start="59:13" pos:end="59:15"><name pos:start="59:13" pos:end="59:15">int</name></type> <name pos:start="59:17" pos:end="59:17">r</name></decl>, <decl pos:start="59:20" pos:end="59:26"><type ref="prev" pos:start="59:13" pos:end="59:15"/><name pos:start="59:20" pos:end="59:26">rule_nr</name></decl>, <decl pos:start="59:29" pos:end="59:37"><type ref="prev" pos:start="59:13" pos:end="59:15"/><name pos:start="59:29" pos:end="59:33">first</name> <init pos:start="59:35" pos:end="59:37">= <expr pos:start="59:37" pos:end="59:37"><literal type="number" pos:start="59:37" pos:end="59:37">1</literal></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="63:13" pos:end="65:59"><expr pos:start="63:13" pos:end="65:58"><call pos:start="63:13" pos:end="65:58"><name pos:start="63:13" pos:end="63:18">memcpy</name><argument_list pos:start="63:19" pos:end="65:58">(<argument pos:start="63:20" pos:end="63:39"><expr pos:start="63:20" pos:end="63:39"><name pos:start="63:20" pos:end="63:39"><name pos:start="63:20" pos:end="63:21">rt</name><operator pos:start="63:22" pos:end="63:23">-&gt;</operator><name pos:start="63:24" pos:end="63:39">real_setup_cache</name></name></expr></argument>, <argument pos:start="63:42" pos:end="63:46"><expr pos:start="63:42" pos:end="63:46"><name pos:start="63:42" pos:end="63:46">cache</name></expr></argument>,

                   <argument pos:start="65:20" pos:end="65:57"><expr pos:start="65:20" pos:end="65:57"><sizeof pos:start="65:20" pos:end="65:41">sizeof<argument_list pos:start="65:26" pos:end="65:41">(<argument pos:start="65:27" pos:end="65:40"><expr pos:start="65:27" pos:end="65:40">enum <name pos:start="65:32" pos:end="65:40">AVDiscard</name></expr></argument>)</argument_list></sizeof> <operator pos:start="65:43" pos:end="65:43">*</operator> <name pos:start="65:45" pos:end="65:57"><name pos:start="65:45" pos:end="65:45">s</name><operator pos:start="65:46" pos:end="65:47">-&gt;</operator><name pos:start="65:48" pos:end="65:57">nb_streams</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:41"><expr pos:start="67:13" pos:end="67:40"><name pos:start="67:13" pos:end="67:36"><name pos:start="67:13" pos:end="67:14">rt</name><operator pos:start="67:15" pos:end="67:16">-&gt;</operator><name pos:start="67:17" pos:end="67:33">last_subscription</name><index pos:start="67:34" pos:end="67:36">[<expr pos:start="67:35" pos:end="67:35"><literal type="number" pos:start="67:35" pos:end="67:35">0</literal></expr>]</index></name> <operator pos:start="67:38" pos:end="67:38">=</operator> <literal type="number" pos:start="67:40" pos:end="67:40">0</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="71:13" pos:end="73:36"><expr pos:start="71:13" pos:end="73:35"><call pos:start="71:13" pos:end="73:35"><name pos:start="71:13" pos:end="71:20">snprintf</name><argument_list pos:start="71:21" pos:end="73:35">(<argument pos:start="71:22" pos:end="71:24"><expr pos:start="71:22" pos:end="71:24"><name pos:start="71:22" pos:end="71:24">cmd</name></expr></argument>, <argument pos:start="71:27" pos:end="71:37"><expr pos:start="71:27" pos:end="71:37"><sizeof pos:start="71:27" pos:end="71:37">sizeof<argument_list pos:start="71:33" pos:end="71:37">(<argument pos:start="71:34" pos:end="71:36"><expr pos:start="71:34" pos:end="71:36"><name pos:start="71:34" pos:end="71:36">cmd</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                     <argument pos:start="73:22" pos:end="73:34"><expr pos:start="73:22" pos:end="73:34"><literal type="string" pos:start="73:22" pos:end="73:34">"Subscribe: "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="75:13" pos:end="107:13">for <control pos:start="75:17" pos:end="75:53">(<init pos:start="75:18" pos:end="75:23"><expr pos:start="75:18" pos:end="75:22"><name pos:start="75:18" pos:end="75:18">i</name> <operator pos:start="75:20" pos:end="75:20">=</operator> <literal type="number" pos:start="75:22" pos:end="75:22">0</literal></expr>;</init> <condition pos:start="75:25" pos:end="75:48"><expr pos:start="75:25" pos:end="75:47"><name pos:start="75:25" pos:end="75:25">i</name> <operator pos:start="75:27" pos:end="75:27">&lt;</operator> <name pos:start="75:29" pos:end="75:47"><name pos:start="75:29" pos:end="75:30">rt</name><operator pos:start="75:31" pos:end="75:32">-&gt;</operator><name pos:start="75:33" pos:end="75:47">nb_rtsp_streams</name></name></expr>;</condition> <incr pos:start="75:50" pos:end="75:52"><expr pos:start="75:50" pos:end="75:52"><name pos:start="75:50" pos:end="75:50">i</name><operator pos:start="75:51" pos:end="75:52">++</operator></expr></incr>)</control> <block pos:start="75:55" pos:end="107:13">{<block_content pos:start="77:17" pos:end="105:17">

                <expr_stmt pos:start="77:17" pos:end="77:28"><expr pos:start="77:17" pos:end="77:27"><name pos:start="77:17" pos:end="77:23">rule_nr</name> <operator pos:start="77:25" pos:end="77:25">=</operator> <literal type="number" pos:start="77:27" pos:end="77:27">0</literal></expr>;</expr_stmt>

                <for pos:start="79:17" pos:end="105:17">for <control pos:start="79:21" pos:end="79:51">(<init pos:start="79:22" pos:end="79:27"><expr pos:start="79:22" pos:end="79:26"><name pos:start="79:22" pos:end="79:22">r</name> <operator pos:start="79:24" pos:end="79:24">=</operator> <literal type="number" pos:start="79:26" pos:end="79:26">0</literal></expr>;</init> <condition pos:start="79:29" pos:end="79:46"><expr pos:start="79:29" pos:end="79:45"><name pos:start="79:29" pos:end="79:29">r</name> <operator pos:start="79:31" pos:end="79:31">&lt;</operator> <name pos:start="79:33" pos:end="79:45"><name pos:start="79:33" pos:end="79:33">s</name><operator pos:start="79:34" pos:end="79:35">-&gt;</operator><name pos:start="79:36" pos:end="79:45">nb_streams</name></name></expr>;</condition> <incr pos:start="79:48" pos:end="79:50"><expr pos:start="79:48" pos:end="79:50"><name pos:start="79:48" pos:end="79:48">r</name><operator pos:start="79:49" pos:end="79:50">++</operator></expr></incr>)</control> <block pos:start="79:53" pos:end="105:17">{<block_content pos:start="81:21" pos:end="103:21">

                    <if_stmt pos:start="81:21" pos:end="103:21"><if pos:start="81:21" pos:end="103:21">if <condition pos:start="81:24" pos:end="81:72">(<expr pos:start="81:25" pos:end="81:71"><name pos:start="81:25" pos:end="81:37"><name pos:start="81:25" pos:end="81:25">s</name><operator pos:start="81:26" pos:end="81:27">-&gt;</operator><name pos:start="81:28" pos:end="81:34">streams</name><index pos:start="81:35" pos:end="81:37">[<expr pos:start="81:36" pos:end="81:36"><name pos:start="81:36" pos:end="81:36">r</name></expr>]</index></name><operator pos:start="81:38" pos:end="81:39">-&gt;</operator><name pos:start="81:40" pos:end="81:48">priv_data</name> <operator pos:start="81:50" pos:end="81:51">==</operator> <name pos:start="81:53" pos:end="81:71"><name pos:start="81:53" pos:end="81:54">rt</name><operator pos:start="81:55" pos:end="81:56">-&gt;</operator><name pos:start="81:57" pos:end="81:68">rtsp_streams</name><index pos:start="81:69" pos:end="81:71">[<expr pos:start="81:70" pos:end="81:70"><name pos:start="81:70" pos:end="81:70">i</name></expr>]</index></name></expr>)</condition> <block pos:start="81:74" pos:end="103:21">{<block_content pos:start="83:25" pos:end="101:34">

                        <if_stmt pos:start="83:25" pos:end="99:25"><if pos:start="83:25" pos:end="99:25">if <condition pos:start="83:28" pos:end="83:68">(<expr pos:start="83:29" pos:end="83:67"><name pos:start="83:29" pos:end="83:41"><name pos:start="83:29" pos:end="83:29">s</name><operator pos:start="83:30" pos:end="83:31">-&gt;</operator><name pos:start="83:32" pos:end="83:38">streams</name><index pos:start="83:39" pos:end="83:41">[<expr pos:start="83:40" pos:end="83:40"><name pos:start="83:40" pos:end="83:40">r</name></expr>]</index></name><operator pos:start="83:42" pos:end="83:43">-&gt;</operator><name pos:start="83:44" pos:end="83:50">discard</name> <operator pos:start="83:52" pos:end="83:53">!=</operator> <name pos:start="83:55" pos:end="83:67">AVDISCARD_ALL</name></expr>)</condition> <block pos:start="83:70" pos:end="99:25">{<block_content pos:start="85:29" pos:end="97:38">

                            <if_stmt pos:start="85:29" pos:end="89:74"><if pos:start="85:29" pos:end="89:74">if <condition pos:start="85:32" pos:end="85:39">(<expr pos:start="85:33" pos:end="85:38"><operator pos:start="85:33" pos:end="85:33">!</operator><name pos:start="85:34" pos:end="85:38">first</name></expr>)</condition><block type="pseudo" pos:start="87:33" pos:end="89:74"><block_content pos:start="87:33" pos:end="89:74">

                                <expr_stmt pos:start="87:33" pos:end="89:74"><expr pos:start="87:33" pos:end="89:73"><call pos:start="87:33" pos:end="89:73"><name pos:start="87:33" pos:end="87:42">av_strlcat</name><argument_list pos:start="87:43" pos:end="89:73">(<argument pos:start="87:44" pos:end="87:64"><expr pos:start="87:44" pos:end="87:64"><name pos:start="87:44" pos:end="87:64"><name pos:start="87:44" pos:end="87:45">rt</name><operator pos:start="87:46" pos:end="87:47">-&gt;</operator><name pos:start="87:48" pos:end="87:64">last_subscription</name></name></expr></argument>, <argument pos:start="87:67" pos:end="87:69"><expr pos:start="87:67" pos:end="87:69"><literal type="string" pos:start="87:67" pos:end="87:69">","</literal></expr></argument>,

                                           <argument pos:start="89:44" pos:end="89:72"><expr pos:start="89:44" pos:end="89:72"><sizeof pos:start="89:44" pos:end="89:72">sizeof<argument_list pos:start="89:50" pos:end="89:72">(<argument pos:start="89:51" pos:end="89:71"><expr pos:start="89:51" pos:end="89:71"><name pos:start="89:51" pos:end="89:71"><name pos:start="89:51" pos:end="89:52">rt</name><operator pos:start="89:53" pos:end="89:54">-&gt;</operator><name pos:start="89:55" pos:end="89:71">last_subscription</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                            <expr_stmt pos:start="91:29" pos:end="95:75"><expr pos:start="91:29" pos:end="95:74"><call pos:start="91:29" pos:end="95:74"><name pos:start="91:29" pos:end="91:49">ff_rdt_subscribe_rule</name><argument_list pos:start="91:50" pos:end="95:74">(

                                <argument pos:start="93:33" pos:end="93:53"><expr pos:start="93:33" pos:end="93:53"><name pos:start="93:33" pos:end="93:53"><name pos:start="93:33" pos:end="93:34">rt</name><operator pos:start="93:35" pos:end="93:36">-&gt;</operator><name pos:start="93:37" pos:end="93:53">last_subscription</name></name></expr></argument>,

                                <argument pos:start="95:33" pos:end="95:61"><expr pos:start="95:33" pos:end="95:61"><sizeof pos:start="95:33" pos:end="95:61">sizeof<argument_list pos:start="95:39" pos:end="95:61">(<argument pos:start="95:40" pos:end="95:60"><expr pos:start="95:40" pos:end="95:60"><name pos:start="95:40" pos:end="95:60"><name pos:start="95:40" pos:end="95:41">rt</name><operator pos:start="95:42" pos:end="95:43">-&gt;</operator><name pos:start="95:44" pos:end="95:60">last_subscription</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="95:64" pos:end="95:64"><expr pos:start="95:64" pos:end="95:64"><name pos:start="95:64" pos:end="95:64">i</name></expr></argument>, <argument pos:start="95:67" pos:end="95:73"><expr pos:start="95:67" pos:end="95:73"><name pos:start="95:67" pos:end="95:73">rule_nr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="97:29" pos:end="97:38"><expr pos:start="97:29" pos:end="97:37"><name pos:start="97:29" pos:end="97:33">first</name> <operator pos:start="97:35" pos:end="97:35">=</operator> <literal type="number" pos:start="97:37" pos:end="97:37">0</literal></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="101:25" pos:end="101:34"><expr pos:start="101:25" pos:end="101:33"><name pos:start="101:25" pos:end="101:31">rule_nr</name><operator pos:start="101:32" pos:end="101:33">++</operator></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>

            <expr_stmt pos:start="109:13" pos:end="109:75"><expr pos:start="109:13" pos:end="109:74"><call pos:start="109:13" pos:end="109:74"><name pos:start="109:13" pos:end="109:23">av_strlcatf</name><argument_list pos:start="109:24" pos:end="109:74">(<argument pos:start="109:25" pos:end="109:27"><expr pos:start="109:25" pos:end="109:27"><name pos:start="109:25" pos:end="109:27">cmd</name></expr></argument>, <argument pos:start="109:30" pos:end="109:40"><expr pos:start="109:30" pos:end="109:40"><sizeof pos:start="109:30" pos:end="109:40">sizeof<argument_list pos:start="109:36" pos:end="109:40">(<argument pos:start="109:37" pos:end="109:39"><expr pos:start="109:37" pos:end="109:39"><name pos:start="109:37" pos:end="109:39">cmd</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="109:43" pos:end="109:50"><expr pos:start="109:43" pos:end="109:50"><literal type="string" pos:start="109:43" pos:end="109:50">"%s\r\n"</literal></expr></argument>, <argument pos:start="109:53" pos:end="109:73"><expr pos:start="109:53" pos:end="109:73"><name pos:start="109:53" pos:end="109:73"><name pos:start="109:53" pos:end="109:54">rt</name><operator pos:start="109:55" pos:end="109:56">-&gt;</operator><name pos:start="109:57" pos:end="109:73">last_subscription</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="113:47"><expr pos:start="111:13" pos:end="113:46"><call pos:start="111:13" pos:end="113:46"><name pos:start="111:13" pos:end="111:28">ff_rtsp_send_cmd</name><argument_list pos:start="111:29" pos:end="113:46">(<argument pos:start="111:30" pos:end="111:30"><expr pos:start="111:30" pos:end="111:30"><name pos:start="111:30" pos:end="111:30">s</name></expr></argument>, <argument pos:start="111:33" pos:end="111:47"><expr pos:start="111:33" pos:end="111:47"><literal type="string" pos:start="111:33" pos:end="111:47">"SET_PARAMETER"</literal></expr></argument>, <argument pos:start="111:50" pos:end="111:64"><expr pos:start="111:50" pos:end="111:64"><name pos:start="111:50" pos:end="111:64"><name pos:start="111:50" pos:end="111:51">rt</name><operator pos:start="111:52" pos:end="111:53">-&gt;</operator><name pos:start="111:54" pos:end="111:64">control_uri</name></name></expr></argument>,

                             <argument pos:start="113:30" pos:end="113:32"><expr pos:start="113:30" pos:end="113:32"><name pos:start="113:30" pos:end="113:32">cmd</name></expr></argument>, <argument pos:start="113:35" pos:end="113:39"><expr pos:start="113:35" pos:end="113:39"><name pos:start="113:35" pos:end="113:39">reply</name></expr></argument>, <argument pos:start="113:42" pos:end="113:45"><expr pos:start="113:42" pos:end="113:45"><name pos:start="113:42" pos:end="113:45">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="115:13" pos:end="117:43"><if pos:start="115:13" pos:end="117:43">if <condition pos:start="115:16" pos:end="115:53">(<expr pos:start="115:17" pos:end="115:52"><name pos:start="115:17" pos:end="115:34"><name pos:start="115:17" pos:end="115:21">reply</name><operator pos:start="115:22" pos:end="115:23">-&gt;</operator><name pos:start="115:24" pos:end="115:34">status_code</name></name> <operator pos:start="115:36" pos:end="115:37">!=</operator> <name pos:start="115:39" pos:end="115:52">RTSP_STATUS_OK</name></expr>)</condition><block type="pseudo" pos:start="117:17" pos:end="117:43"><block_content pos:start="117:17" pos:end="117:43">

                <return pos:start="117:17" pos:end="117:43">return <expr pos:start="117:24" pos:end="117:42"><name pos:start="117:24" pos:end="117:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:38"><expr pos:start="119:13" pos:end="119:37"><name pos:start="119:13" pos:end="119:33"><name pos:start="119:13" pos:end="119:14">rt</name><operator pos:start="119:15" pos:end="119:16">-&gt;</operator><name pos:start="119:17" pos:end="119:33">need_subscription</name></name> <operator pos:start="119:35" pos:end="119:35">=</operator> <literal type="number" pos:start="119:37" pos:end="119:37">0</literal></expr>;</expr_stmt>



            <if_stmt pos:start="123:13" pos:end="125:35"><if pos:start="123:13" pos:end="125:35">if <condition pos:start="123:16" pos:end="123:50">(<expr pos:start="123:17" pos:end="123:49"><name pos:start="123:17" pos:end="123:25"><name pos:start="123:17" pos:end="123:18">rt</name><operator pos:start="123:19" pos:end="123:20">-&gt;</operator><name pos:start="123:21" pos:end="123:25">state</name></name> <operator pos:start="123:27" pos:end="123:28">==</operator> <name pos:start="123:30" pos:end="123:49">RTSP_STATE_STREAMING</name></expr>)</condition><block type="pseudo" pos:start="125:17" pos:end="125:35"><block_content pos:start="125:17" pos:end="125:35">

                <expr_stmt pos:start="125:17" pos:end="125:35"><expr pos:start="125:17" pos:end="125:34"><call pos:start="125:17" pos:end="125:34"><name pos:start="125:17" pos:end="125:30">rtsp_read_play</name> <argument_list pos:start="125:32" pos:end="125:34">(<argument pos:start="125:33" pos:end="125:33"><expr pos:start="125:33" pos:end="125:33"><name pos:start="125:33" pos:end="125:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="133:5" pos:end="133:36"><expr pos:start="133:5" pos:end="133:35"><name pos:start="133:5" pos:end="133:7">ret</name> <operator pos:start="133:9" pos:end="133:9">=</operator> <call pos:start="133:11" pos:end="133:35"><name pos:start="133:11" pos:end="133:27">rtsp_fetch_packet</name><argument_list pos:start="133:28" pos:end="133:35">(<argument pos:start="133:29" pos:end="133:29"><expr pos:start="133:29" pos:end="133:29"><name pos:start="133:29" pos:end="133:29">s</name></expr></argument>, <argument pos:start="133:32" pos:end="133:34"><expr pos:start="133:32" pos:end="133:34"><name pos:start="133:32" pos:end="133:34">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="135:5" pos:end="137:19"><if pos:start="135:5" pos:end="137:19">if <condition pos:start="135:8" pos:end="135:16">(<expr pos:start="135:9" pos:end="135:15"><name pos:start="135:9" pos:end="135:11">ret</name> <operator pos:start="135:13" pos:end="135:13">&lt;</operator> <literal type="number" pos:start="135:15" pos:end="135:15">0</literal></expr>)</condition><block type="pseudo" pos:start="137:9" pos:end="137:19"><block_content pos:start="137:9" pos:end="137:19">

        <return pos:start="137:9" pos:end="137:19">return <expr pos:start="137:16" pos:end="137:18"><name pos:start="137:16" pos:end="137:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="141:5" pos:end="141:57">/* send dummy request to keep TCP connection alive */</comment>

    <if_stmt pos:start="143:5" pos:end="159:5"><if pos:start="143:5" pos:end="159:5">if <condition pos:start="143:8" pos:end="147:72">(<expr pos:start="143:9" pos:end="147:71"><operator pos:start="143:9" pos:end="143:9">(</operator><name pos:start="143:10" pos:end="143:24"><name pos:start="143:10" pos:end="143:11">rt</name><operator pos:start="143:12" pos:end="143:13">-&gt;</operator><name pos:start="143:14" pos:end="143:24">server_type</name></name> <operator pos:start="143:26" pos:end="143:27">==</operator> <name pos:start="143:29" pos:end="143:43">RTSP_SERVER_WMS</name> <operator pos:start="143:45" pos:end="143:46">||</operator>

         <name pos:start="145:10" pos:end="145:24"><name pos:start="145:10" pos:end="145:11">rt</name><operator pos:start="145:12" pos:end="145:13">-&gt;</operator><name pos:start="145:14" pos:end="145:24">server_type</name></name> <operator pos:start="145:26" pos:end="145:27">==</operator> <name pos:start="145:29" pos:end="145:44">RTSP_SERVER_REAL</name><operator pos:start="145:45" pos:end="145:45">)</operator> <operator pos:start="145:47" pos:end="145:48">&amp;&amp;</operator>

        <operator pos:start="147:9" pos:end="147:9">(</operator><call pos:start="147:10" pos:end="147:21"><name pos:start="147:10" pos:end="147:19">av_gettime</name><argument_list pos:start="147:20" pos:end="147:21">()</argument_list></call> <operator pos:start="147:23" pos:end="147:23">-</operator> <name pos:start="147:25" pos:end="147:41"><name pos:start="147:25" pos:end="147:26">rt</name><operator pos:start="147:27" pos:end="147:28">-&gt;</operator><name pos:start="147:29" pos:end="147:41">last_cmd_time</name></name><operator pos:start="147:42" pos:end="147:42">)</operator> <operator pos:start="147:44" pos:end="147:44">/</operator> <literal type="number" pos:start="147:46" pos:end="147:52">1000000</literal> <operator pos:start="147:54" pos:end="147:55">&gt;=</operator> <name pos:start="147:57" pos:end="147:67"><name pos:start="147:57" pos:end="147:58">rt</name><operator pos:start="147:59" pos:end="147:60">-&gt;</operator><name pos:start="147:61" pos:end="147:67">timeout</name></name> <operator pos:start="147:69" pos:end="147:69">/</operator> <literal type="number" pos:start="147:71" pos:end="147:71">2</literal></expr>)</condition> <block pos:start="147:74" pos:end="159:5">{<block_content pos:start="149:9" pos:end="157:9">

        <if_stmt pos:start="149:9" pos:end="157:9"><if pos:start="149:9" pos:end="153:9">if <condition pos:start="149:12" pos:end="149:47">(<expr pos:start="149:13" pos:end="149:46"><name pos:start="149:13" pos:end="149:27"><name pos:start="149:13" pos:end="149:14">rt</name><operator pos:start="149:15" pos:end="149:16">-&gt;</operator><name pos:start="149:17" pos:end="149:27">server_type</name></name> <operator pos:start="149:29" pos:end="149:30">==</operator> <name pos:start="149:32" pos:end="149:46">RTSP_SERVER_WMS</name></expr>)</condition> <block pos:start="149:49" pos:end="153:9">{<block_content pos:start="151:13" pos:end="151:78">

            <expr_stmt pos:start="151:13" pos:end="151:78"><expr pos:start="151:13" pos:end="151:77"><call pos:start="151:13" pos:end="151:77"><name pos:start="151:13" pos:end="151:34">ff_rtsp_send_cmd_async</name><argument_list pos:start="151:35" pos:end="151:77">(<argument pos:start="151:36" pos:end="151:36"><expr pos:start="151:36" pos:end="151:36"><name pos:start="151:36" pos:end="151:36">s</name></expr></argument>, <argument pos:start="151:39" pos:end="151:53"><expr pos:start="151:39" pos:end="151:53"><literal type="string" pos:start="151:39" pos:end="151:53">"GET_PARAMETER"</literal></expr></argument>, <argument pos:start="151:56" pos:end="151:70"><expr pos:start="151:56" pos:end="151:70"><name pos:start="151:56" pos:end="151:70"><name pos:start="151:56" pos:end="151:57">rt</name><operator pos:start="151:58" pos:end="151:59">-&gt;</operator><name pos:start="151:60" pos:end="151:70">control_uri</name></name></expr></argument>, <argument pos:start="151:73" pos:end="151:76"><expr pos:start="151:73" pos:end="151:76"><name pos:start="151:73" pos:end="151:76">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="153:11" pos:end="157:9">else <block pos:start="153:16" pos:end="157:9">{<block_content pos:start="155:13" pos:end="155:60">

            <expr_stmt pos:start="155:13" pos:end="155:60"><expr pos:start="155:13" pos:end="155:59"><call pos:start="155:13" pos:end="155:59"><name pos:start="155:13" pos:end="155:34">ff_rtsp_send_cmd_async</name><argument_list pos:start="155:35" pos:end="155:59">(<argument pos:start="155:36" pos:end="155:36"><expr pos:start="155:36" pos:end="155:36"><name pos:start="155:36" pos:end="155:36">s</name></expr></argument>, <argument pos:start="155:39" pos:end="155:47"><expr pos:start="155:39" pos:end="155:47"><literal type="string" pos:start="155:39" pos:end="155:47">"OPTIONS"</literal></expr></argument>, <argument pos:start="155:50" pos:end="155:52"><expr pos:start="155:50" pos:end="155:52"><literal type="string" pos:start="155:50" pos:end="155:52">"*"</literal></expr></argument>, <argument pos:start="155:55" pos:end="155:58"><expr pos:start="155:55" pos:end="155:58"><name pos:start="155:55" pos:end="155:58">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="163:5" pos:end="163:13">return <expr pos:start="163:12" pos:end="163:12"><literal type="number" pos:start="163:12" pos:end="163:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
