<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17930.c" pos:tabs="8"><function pos:start="1:1" pos:end="12:15"><type pos:start="1:1" pos:end="1:24"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:22">CharDriverState</name> <modifier pos:start="1:24" pos:end="1:24">*</modifier></type><name pos:start="1:25" pos:end="1:37">gd_vc_handler</name><parameter_list pos:start="1:38" pos:end="1:66">(<parameter pos:start="1:39" pos:end="1:51"><decl pos:start="1:39" pos:end="1:51"><type pos:start="1:39" pos:end="1:51"><name pos:start="1:39" pos:end="1:47">ChardevVC</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:51">vc</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:65"><decl pos:start="1:54" pos:end="1:65"><type pos:start="1:54" pos:end="1:65"><name pos:start="1:54" pos:end="1:58">Error</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier><modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:65">errp</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="12:15">{<block_content pos:start="3:5" pos:end="12:15">
    <decl_stmt pos:start="3:5" pos:end="3:52"><decl pos:start="3:5" pos:end="3:51"><type pos:start="3:5" pos:end="3:19"><name pos:start="3:5" pos:end="3:17">ChardevCommon</name> <modifier pos:start="3:19" pos:end="3:19">*</modifier></type><name pos:start="3:20" pos:end="3:25">common</name> <init pos:start="3:27" pos:end="3:51">= <expr pos:start="3:29" pos:end="3:51"><call pos:start="3:29" pos:end="3:51"><name pos:start="3:29" pos:end="3:47">qapi_ChardevVC_base</name><argument_list pos:start="3:48" pos:end="3:51">(<argument pos:start="3:49" pos:end="3:50"><expr pos:start="3:49" pos:end="3:50"><name pos:start="3:49" pos:end="3:50">vc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:25"><decl pos:start="4:5" pos:end="4:24"><type pos:start="4:5" pos:end="4:21"><name pos:start="4:5" pos:end="4:19">CharDriverState</name> <modifier pos:start="4:21" pos:end="4:21">*</modifier></type><name pos:start="4:22" pos:end="4:24">chr</name></decl>;</decl_stmt>
    <expr_stmt pos:start="5:5" pos:end="5:39"><expr pos:start="5:5" pos:end="5:38"><name pos:start="5:5" pos:end="5:7">chr</name> <operator pos:start="5:9" pos:end="5:9">=</operator> <call pos:start="5:11" pos:end="5:38"><name pos:start="5:11" pos:end="5:24">qemu_chr_alloc</name><argument_list pos:start="5:25" pos:end="5:38">(<argument pos:start="5:26" pos:end="5:31"><expr pos:start="5:26" pos:end="5:31"><name pos:start="5:26" pos:end="5:31">common</name></expr></argument>, <argument pos:start="5:34" pos:end="5:37"><expr pos:start="5:34" pos:end="5:37"><name pos:start="5:34" pos:end="5:37">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="6:5" pos:end="12:15"><if pos:start="6:5" pos:end="12:15">if <condition pos:start="6:8" pos:end="6:13">(<expr pos:start="6:9" pos:end="6:12"><operator pos:start="6:9" pos:end="6:9">!</operator><name pos:start="6:10" pos:end="6:12">chr</name></expr>)</condition> <block pos:start="6:15" pos:end="12:15">{<block_content pos:start="7:5" pos:end="12:15">
    <expr_stmt pos:start="7:5" pos:end="7:37"><expr pos:start="7:5" pos:end="7:36"><name pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:7">chr</name><operator pos:start="7:8" pos:end="7:9">-&gt;</operator><name pos:start="7:10" pos:end="7:18">chr_write</name></name> <operator pos:start="7:20" pos:end="7:20">=</operator> <name pos:start="7:22" pos:end="7:36">gd_vc_chr_write</name></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:43"><expr pos:start="8:5" pos:end="8:42"><name pos:start="8:5" pos:end="8:21"><name pos:start="8:5" pos:end="8:7">chr</name><operator pos:start="8:8" pos:end="8:9">-&gt;</operator><name pos:start="8:10" pos:end="8:21">chr_set_echo</name></name> <operator pos:start="8:23" pos:end="8:23">=</operator> <name pos:start="8:25" pos:end="8:42">gd_vc_chr_set_echo</name></expr>;</expr_stmt>
    <comment type="block" pos:start="9:5" pos:end="9:48">/* Temporary, until gd_vc_vte_init runs.  */</comment>
    <expr_stmt pos:start="10:5" pos:end="10:44"><expr pos:start="10:5" pos:end="10:43"><name pos:start="10:5" pos:end="10:15"><name pos:start="10:5" pos:end="10:7">chr</name><operator pos:start="10:8" pos:end="10:9">-&gt;</operator><name pos:start="10:10" pos:end="10:15">opaque</name></name> <operator pos:start="10:17" pos:end="10:17">=</operator> <call pos:start="10:19" pos:end="10:43"><name pos:start="10:19" pos:end="10:24">g_new0</name><argument_list pos:start="10:25" pos:end="10:43">(<argument pos:start="10:26" pos:end="10:39"><expr pos:start="10:26" pos:end="10:39"><name pos:start="10:26" pos:end="10:39">VirtualConsole</name></expr></argument>, <argument pos:start="10:42" pos:end="10:42"><expr pos:start="10:42" pos:end="10:42"><literal type="number" pos:start="10:42" pos:end="10:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:24"><expr pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:7">vcs</name><index pos:start="11:8" pos:end="11:17">[<expr pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:14">nb_vcs</name><operator pos:start="11:15" pos:end="11:16">++</operator></expr>]</index></name> <operator pos:start="11:19" pos:end="11:19">=</operator> <name pos:start="11:21" pos:end="11:23">chr</name></expr>;</expr_stmt>
    <return pos:start="12:5" pos:end="12:15">return <expr pos:start="12:12" pos:end="12:14"><name pos:start="12:12" pos:end="12:14">chr</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></function></unit>
