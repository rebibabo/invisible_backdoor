<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13072.c" pos:tabs="8"><function pos:start="1:1" pos:end="217:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:42">decode_seq_parameter_set</name><parameter_list pos:start="1:43" pos:end="1:58">(<parameter pos:start="1:44" pos:end="1:57"><decl pos:start="1:44" pos:end="1:57"><type pos:start="1:44" pos:end="1:56"><name pos:start="1:44" pos:end="1:54">H264Context</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:57">h</name></decl></parameter>)</parameter_list><block pos:start="1:59" pos:end="217:1">{<block_content pos:start="3:5" pos:end="215:13">

    <decl_stmt pos:start="3:5" pos:end="3:37"><decl pos:start="3:5" pos:end="3:36"><type pos:start="3:5" pos:end="3:26"><name pos:start="3:5" pos:end="3:18">MpegEncContext</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier> <specifier pos:start="3:22" pos:end="3:26">const</specifier></type> <name pos:start="3:28" pos:end="3:28">s</name> <init pos:start="3:30" pos:end="3:36">= <expr pos:start="3:32" pos:end="3:36"><operator pos:start="3:32" pos:end="3:32">&amp;</operator><name pos:start="3:33" pos:end="3:36"><name pos:start="3:33" pos:end="3:33">h</name><operator pos:start="3:34" pos:end="3:35">-&gt;</operator><name pos:start="3:36" pos:end="3:36">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:19">profile_idc</name></decl>, <decl pos:start="5:22" pos:end="5:30"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:22" pos:end="5:30">level_idc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">sps_id</name></decl>, <decl pos:start="7:17" pos:end="7:17"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:17" pos:end="7:17">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:9"><name pos:start="9:5" pos:end="9:7">SPS</name> <modifier pos:start="9:9" pos:end="9:9">*</modifier></type><name pos:start="9:10" pos:end="9:12">sps</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:37"><expr pos:start="13:5" pos:end="13:36"><name pos:start="13:5" pos:end="13:15">profile_idc</name><operator pos:start="13:16" pos:end="13:16">=</operator> <call pos:start="13:18" pos:end="13:36"><name pos:start="13:18" pos:end="13:25">get_bits</name><argument_list pos:start="13:26" pos:end="13:36">(<argument pos:start="13:27" pos:end="13:32"><expr pos:start="13:27" pos:end="13:32"><operator pos:start="13:27" pos:end="13:27">&amp;</operator><name pos:start="13:28" pos:end="13:32"><name pos:start="13:28" pos:end="13:28">s</name><operator pos:start="13:29" pos:end="13:30">-&gt;</operator><name pos:start="13:31" pos:end="13:32">gb</name></name></expr></argument>, <argument pos:start="13:35" pos:end="13:35"><expr pos:start="13:35" pos:end="13:35"><literal type="number" pos:start="13:35" pos:end="13:35">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:22"><expr pos:start="15:5" pos:end="15:21"><call pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:13">get_bits1</name><argument_list pos:start="15:14" pos:end="15:21">(<argument pos:start="15:15" pos:end="15:20"><expr pos:start="15:15" pos:end="15:20"><operator pos:start="15:15" pos:end="15:15">&amp;</operator><name pos:start="15:16" pos:end="15:20"><name pos:start="15:16" pos:end="15:16">s</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:20">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="line" pos:start="15:26" pos:end="15:47">//constraint_set0_flag</comment>

    <expr_stmt pos:start="17:5" pos:end="17:22"><expr pos:start="17:5" pos:end="17:21"><call pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:13">get_bits1</name><argument_list pos:start="17:14" pos:end="17:21">(<argument pos:start="17:15" pos:end="17:20"><expr pos:start="17:15" pos:end="17:20"><operator pos:start="17:15" pos:end="17:15">&amp;</operator><name pos:start="17:16" pos:end="17:20"><name pos:start="17:16" pos:end="17:16">s</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:20">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="line" pos:start="17:26" pos:end="17:47">//constraint_set1_flag</comment>

    <expr_stmt pos:start="19:5" pos:end="19:22"><expr pos:start="19:5" pos:end="19:21"><call pos:start="19:5" pos:end="19:21"><name pos:start="19:5" pos:end="19:13">get_bits1</name><argument_list pos:start="19:14" pos:end="19:21">(<argument pos:start="19:15" pos:end="19:20"><expr pos:start="19:15" pos:end="19:20"><operator pos:start="19:15" pos:end="19:15">&amp;</operator><name pos:start="19:16" pos:end="19:20"><name pos:start="19:16" pos:end="19:16">s</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:20">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="line" pos:start="19:26" pos:end="19:47">//constraint_set2_flag</comment>

    <expr_stmt pos:start="21:5" pos:end="21:22"><expr pos:start="21:5" pos:end="21:21"><call pos:start="21:5" pos:end="21:21"><name pos:start="21:5" pos:end="21:13">get_bits1</name><argument_list pos:start="21:14" pos:end="21:21">(<argument pos:start="21:15" pos:end="21:20"><expr pos:start="21:15" pos:end="21:20"><operator pos:start="21:15" pos:end="21:15">&amp;</operator><name pos:start="21:16" pos:end="21:20"><name pos:start="21:16" pos:end="21:16">s</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:20">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="line" pos:start="21:26" pos:end="21:47">//constraint_set3_flag</comment>

    <expr_stmt pos:start="23:5" pos:end="23:24"><expr pos:start="23:5" pos:end="23:23"><call pos:start="23:5" pos:end="23:23"><name pos:start="23:5" pos:end="23:12">get_bits</name><argument_list pos:start="23:13" pos:end="23:23">(<argument pos:start="23:14" pos:end="23:19"><expr pos:start="23:14" pos:end="23:19"><operator pos:start="23:14" pos:end="23:14">&amp;</operator><name pos:start="23:15" pos:end="23:19"><name pos:start="23:15" pos:end="23:15">s</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:19">gb</name></name></expr></argument>, <argument pos:start="23:22" pos:end="23:22"><expr pos:start="23:22" pos:end="23:22"><literal type="number" pos:start="23:22" pos:end="23:22">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="23:26" pos:end="23:36">// reserved</comment>

    <expr_stmt pos:start="25:5" pos:end="25:35"><expr pos:start="25:5" pos:end="25:34"><name pos:start="25:5" pos:end="25:13">level_idc</name><operator pos:start="25:14" pos:end="25:14">=</operator> <call pos:start="25:16" pos:end="25:34"><name pos:start="25:16" pos:end="25:23">get_bits</name><argument_list pos:start="25:24" pos:end="25:34">(<argument pos:start="25:25" pos:end="25:30"><expr pos:start="25:25" pos:end="25:30"><operator pos:start="25:25" pos:end="25:25">&amp;</operator><name pos:start="25:26" pos:end="25:30"><name pos:start="25:26" pos:end="25:26">s</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:30">gb</name></name></expr></argument>, <argument pos:start="25:33" pos:end="25:33"><expr pos:start="25:33" pos:end="25:33"><literal type="number" pos:start="25:33" pos:end="25:33">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:34"><expr pos:start="27:5" pos:end="27:33"><name pos:start="27:5" pos:end="27:10">sps_id</name><operator pos:start="27:11" pos:end="27:11">=</operator> <call pos:start="27:13" pos:end="27:33"><name pos:start="27:13" pos:end="27:25">get_ue_golomb</name><argument_list pos:start="27:26" pos:end="27:33">(<argument pos:start="27:27" pos:end="27:32"><expr pos:start="27:27" pos:end="27:32"><operator pos:start="27:27" pos:end="27:27">&amp;</operator><name pos:start="27:28" pos:end="27:32"><name pos:start="27:28" pos:end="27:28">s</name><operator pos:start="27:29" pos:end="27:30">-&gt;</operator><name pos:start="27:31" pos:end="27:32">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:34"><expr pos:start="31:5" pos:end="31:33"><name pos:start="31:5" pos:end="31:7">sps</name><operator pos:start="31:8" pos:end="31:8">=</operator> <operator pos:start="31:10" pos:end="31:10">&amp;</operator><name pos:start="31:11" pos:end="31:33"><name pos:start="31:11" pos:end="31:11">h</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:23">sps_buffer</name><index pos:start="31:24" pos:end="31:33">[ <expr pos:start="31:26" pos:end="31:31"><name pos:start="31:26" pos:end="31:31">sps_id</name></expr> ]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:34"><expr pos:start="33:5" pos:end="33:33"><name pos:start="33:5" pos:end="33:20"><name pos:start="33:5" pos:end="33:7">sps</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:20">profile_idc</name></name><operator pos:start="33:21" pos:end="33:21">=</operator> <name pos:start="33:23" pos:end="33:33">profile_idc</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:30"><expr pos:start="35:5" pos:end="35:29"><name pos:start="35:5" pos:end="35:18"><name pos:start="35:5" pos:end="35:7">sps</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:18">level_idc</name></name><operator pos:start="35:19" pos:end="35:19">=</operator> <name pos:start="35:21" pos:end="35:29">level_idc</name></expr>;</expr_stmt>



    <if_stmt pos:start="39:5" pos:end="55:40"><if pos:start="39:5" pos:end="53:5">if<condition pos:start="39:7" pos:end="39:31">(<expr pos:start="39:8" pos:end="39:30"><name pos:start="39:8" pos:end="39:23"><name pos:start="39:8" pos:end="39:10">sps</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:23">profile_idc</name></name> <operator pos:start="39:25" pos:end="39:26">&gt;=</operator> <literal type="number" pos:start="39:28" pos:end="39:30">100</literal></expr>)</condition><block pos:start="39:32" pos:end="53:5">{<block_content pos:start="41:9" pos:end="51:93"> <comment type="line" pos:start="39:34" pos:end="39:47">//high profile</comment>

        <if_stmt pos:start="41:9" pos:end="43:30"><if pos:start="41:9" pos:end="43:30">if<condition pos:start="41:11" pos:end="41:38">(<expr pos:start="41:12" pos:end="41:37"><call pos:start="41:12" pos:end="41:32"><name pos:start="41:12" pos:end="41:24">get_ue_golomb</name><argument_list pos:start="41:25" pos:end="41:32">(<argument pos:start="41:26" pos:end="41:31"><expr pos:start="41:26" pos:end="41:31"><operator pos:start="41:26" pos:end="41:26">&amp;</operator><name pos:start="41:27" pos:end="41:31"><name pos:start="41:27" pos:end="41:27">s</name><operator pos:start="41:28" pos:end="41:29">-&gt;</operator><name pos:start="41:30" pos:end="41:31">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="41:34" pos:end="41:35">==</operator> <literal type="number" pos:start="41:37" pos:end="41:37">3</literal></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:30"><block_content pos:start="43:13" pos:end="43:30"> <comment type="line" pos:start="41:40" pos:end="41:58">//chroma_format_idc</comment>

            <expr_stmt pos:start="43:13" pos:end="43:30"><expr pos:start="43:13" pos:end="43:29"><call pos:start="43:13" pos:end="43:29"><name pos:start="43:13" pos:end="43:21">get_bits1</name><argument_list pos:start="43:22" pos:end="43:29">(<argument pos:start="43:23" pos:end="43:28"><expr pos:start="43:23" pos:end="43:28"><operator pos:start="43:23" pos:end="43:23">&amp;</operator><name pos:start="43:24" pos:end="43:28"><name pos:start="43:24" pos:end="43:24">s</name><operator pos:start="43:25" pos:end="43:26">-&gt;</operator><name pos:start="43:27" pos:end="43:28">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>  <comment type="line" pos:start="43:33" pos:end="43:63">//residual_color_transform_flag</comment>

        <expr_stmt pos:start="45:9" pos:end="45:30"><expr pos:start="45:9" pos:end="45:29"><call pos:start="45:9" pos:end="45:29"><name pos:start="45:9" pos:end="45:21">get_ue_golomb</name><argument_list pos:start="45:22" pos:end="45:29">(<argument pos:start="45:23" pos:end="45:28"><expr pos:start="45:23" pos:end="45:28"><operator pos:start="45:23" pos:end="45:23">&amp;</operator><name pos:start="45:24" pos:end="45:28"><name pos:start="45:24" pos:end="45:24">s</name><operator pos:start="45:25" pos:end="45:26">-&gt;</operator><name pos:start="45:27" pos:end="45:28">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" pos:start="45:33" pos:end="45:55">//bit_depth_luma_minus8</comment>

        <expr_stmt pos:start="47:9" pos:end="47:30"><expr pos:start="47:9" pos:end="47:29"><call pos:start="47:9" pos:end="47:29"><name pos:start="47:9" pos:end="47:21">get_ue_golomb</name><argument_list pos:start="47:22" pos:end="47:29">(<argument pos:start="47:23" pos:end="47:28"><expr pos:start="47:23" pos:end="47:28"><operator pos:start="47:23" pos:end="47:23">&amp;</operator><name pos:start="47:24" pos:end="47:28"><name pos:start="47:24" pos:end="47:24">s</name><operator pos:start="47:25" pos:end="47:26">-&gt;</operator><name pos:start="47:27" pos:end="47:28">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" pos:start="47:33" pos:end="47:57">//bit_depth_chroma_minus8</comment>

        <expr_stmt pos:start="49:9" pos:end="49:50"><expr pos:start="49:9" pos:end="49:49"><name pos:start="49:9" pos:end="49:29"><name pos:start="49:9" pos:end="49:11">sps</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:29">transform_bypass</name></name> <operator pos:start="49:31" pos:end="49:31">=</operator> <call pos:start="49:33" pos:end="49:49"><name pos:start="49:33" pos:end="49:41">get_bits1</name><argument_list pos:start="49:42" pos:end="49:49">(<argument pos:start="49:43" pos:end="49:48"><expr pos:start="49:43" pos:end="49:48"><operator pos:start="49:43" pos:end="49:43">&amp;</operator><name pos:start="49:44" pos:end="49:48"><name pos:start="49:44" pos:end="49:44">s</name><operator pos:start="49:45" pos:end="49:46">-&gt;</operator><name pos:start="49:47" pos:end="49:48">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:93"><expr pos:start="51:9" pos:end="51:92"><call pos:start="51:9" pos:end="51:92"><name pos:start="51:9" pos:end="51:31">decode_scaling_matrices</name><argument_list pos:start="51:32" pos:end="51:92">(<argument pos:start="51:33" pos:end="51:33"><expr pos:start="51:33" pos:end="51:33"><name pos:start="51:33" pos:end="51:33">h</name></expr></argument>, <argument pos:start="51:36" pos:end="51:38"><expr pos:start="51:36" pos:end="51:38"><name pos:start="51:36" pos:end="51:38">sps</name></expr></argument>, <argument pos:start="51:41" pos:end="51:44"><expr pos:start="51:41" pos:end="51:44"><name pos:start="51:41" pos:end="51:44">NULL</name></expr></argument>, <argument pos:start="51:47" pos:end="51:47"><expr pos:start="51:47" pos:end="51:47"><literal type="number" pos:start="51:47" pos:end="51:47">1</literal></expr></argument>, <argument pos:start="51:50" pos:end="51:69"><expr pos:start="51:50" pos:end="51:69"><name pos:start="51:50" pos:end="51:69"><name pos:start="51:50" pos:end="51:52">sps</name><operator pos:start="51:53" pos:end="51:54">-&gt;</operator><name pos:start="51:55" pos:end="51:69">scaling_matrix4</name></name></expr></argument>, <argument pos:start="51:72" pos:end="51:91"><expr pos:start="51:72" pos:end="51:91"><name pos:start="51:72" pos:end="51:91"><name pos:start="51:72" pos:end="51:74">sps</name><operator pos:start="51:75" pos:end="51:76">-&gt;</operator><name pos:start="51:77" pos:end="51:91">scaling_matrix8</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="53:6" pos:end="55:40">else<block type="pseudo" pos:start="55:9" pos:end="55:40"><block_content pos:start="55:9" pos:end="55:40">

        <expr_stmt pos:start="55:9" pos:end="55:40"><expr pos:start="55:9" pos:end="55:39"><name pos:start="55:9" pos:end="55:35"><name pos:start="55:9" pos:end="55:11">sps</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:35">scaling_matrix_present</name></name> <operator pos:start="55:37" pos:end="55:37">=</operator> <literal type="number" pos:start="55:39" pos:end="55:39">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:55"><expr pos:start="59:5" pos:end="59:54"><name pos:start="59:5" pos:end="59:27"><name pos:start="59:5" pos:end="59:7">sps</name><operator pos:start="59:8" pos:end="59:9">-&gt;</operator><name pos:start="59:10" pos:end="59:27">log2_max_frame_num</name></name><operator pos:start="59:28" pos:end="59:28">=</operator> <call pos:start="59:30" pos:end="59:50"><name pos:start="59:30" pos:end="59:42">get_ue_golomb</name><argument_list pos:start="59:43" pos:end="59:50">(<argument pos:start="59:44" pos:end="59:49"><expr pos:start="59:44" pos:end="59:49"><operator pos:start="59:44" pos:end="59:44">&amp;</operator><name pos:start="59:45" pos:end="59:49"><name pos:start="59:45" pos:end="59:45">s</name><operator pos:start="59:46" pos:end="59:47">-&gt;</operator><name pos:start="59:48" pos:end="59:49">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="59:52" pos:end="59:52">+</operator> <literal type="number" pos:start="59:54" pos:end="59:54">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:41"><expr pos:start="61:5" pos:end="61:40"><name pos:start="61:5" pos:end="61:17"><name pos:start="61:5" pos:end="61:7">sps</name><operator pos:start="61:8" pos:end="61:9">-&gt;</operator><name pos:start="61:10" pos:end="61:17">poc_type</name></name><operator pos:start="61:18" pos:end="61:18">=</operator> <call pos:start="61:20" pos:end="61:40"><name pos:start="61:20" pos:end="61:32">get_ue_golomb</name><argument_list pos:start="61:33" pos:end="61:40">(<argument pos:start="61:34" pos:end="61:39"><expr pos:start="61:34" pos:end="61:39"><operator pos:start="61:34" pos:end="61:34">&amp;</operator><name pos:start="61:35" pos:end="61:39"><name pos:start="61:35" pos:end="61:35">s</name><operator pos:start="61:36" pos:end="61:37">-&gt;</operator><name pos:start="61:38" pos:end="61:39">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="65:5" pos:end="85:5"><if pos:start="65:5" pos:end="69:5">if<condition pos:start="65:7" pos:end="65:26">(<expr pos:start="65:8" pos:end="65:25"><name pos:start="65:8" pos:end="65:20"><name pos:start="65:8" pos:end="65:10">sps</name><operator pos:start="65:11" pos:end="65:12">-&gt;</operator><name pos:start="65:13" pos:end="65:20">poc_type</name></name> <operator pos:start="65:22" pos:end="65:23">==</operator> <literal type="number" pos:start="65:25" pos:end="65:25">0</literal></expr>)</condition><block pos:start="65:27" pos:end="69:5">{<block_content pos:start="67:9" pos:end="67:57"> <comment type="line" pos:start="65:29" pos:end="65:43">//FIXME #define</comment>

        <expr_stmt pos:start="67:9" pos:end="67:57"><expr pos:start="67:9" pos:end="67:56"><name pos:start="67:9" pos:end="67:29"><name pos:start="67:9" pos:end="67:11">sps</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:29">log2_max_poc_lsb</name></name><operator pos:start="67:30" pos:end="67:30">=</operator> <call pos:start="67:32" pos:end="67:52"><name pos:start="67:32" pos:end="67:44">get_ue_golomb</name><argument_list pos:start="67:45" pos:end="67:52">(<argument pos:start="67:46" pos:end="67:51"><expr pos:start="67:46" pos:end="67:51"><operator pos:start="67:46" pos:end="67:46">&amp;</operator><name pos:start="67:47" pos:end="67:51"><name pos:start="67:47" pos:end="67:47">s</name><operator pos:start="67:48" pos:end="67:49">-&gt;</operator><name pos:start="67:50" pos:end="67:51">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="67:54" pos:end="67:54">+</operator> <literal type="number" pos:start="67:56" pos:end="67:56">4</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="69:7" pos:end="85:5">else if<condition pos:start="69:14" pos:end="69:33">(<expr pos:start="69:15" pos:end="69:32"><name pos:start="69:15" pos:end="69:27"><name pos:start="69:15" pos:end="69:17">sps</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:27">poc_type</name></name> <operator pos:start="69:29" pos:end="69:30">==</operator> <literal type="number" pos:start="69:32" pos:end="69:32">1</literal></expr>)</condition><block pos:start="69:34" pos:end="85:5">{<block_content pos:start="71:9" pos:end="83:64"><comment type="line" pos:start="69:35" pos:end="69:49">//FIXME #define</comment>

        <expr_stmt pos:start="71:9" pos:end="71:65"><expr pos:start="71:9" pos:end="71:64"><name pos:start="71:9" pos:end="71:45"><name pos:start="71:9" pos:end="71:11">sps</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:45">delta_pic_order_always_zero_flag</name></name><operator pos:start="71:46" pos:end="71:46">=</operator> <call pos:start="71:48" pos:end="71:64"><name pos:start="71:48" pos:end="71:56">get_bits1</name><argument_list pos:start="71:57" pos:end="71:64">(<argument pos:start="71:58" pos:end="71:63"><expr pos:start="71:58" pos:end="71:63"><operator pos:start="71:58" pos:end="71:58">&amp;</operator><name pos:start="71:59" pos:end="71:63"><name pos:start="71:59" pos:end="71:59">s</name><operator pos:start="71:60" pos:end="71:61">-&gt;</operator><name pos:start="71:62" pos:end="71:63">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:59"><expr pos:start="73:9" pos:end="73:58"><name pos:start="73:9" pos:end="73:35"><name pos:start="73:9" pos:end="73:11">sps</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:35">offset_for_non_ref_pic</name></name><operator pos:start="73:36" pos:end="73:36">=</operator> <call pos:start="73:38" pos:end="73:58"><name pos:start="73:38" pos:end="73:50">get_se_golomb</name><argument_list pos:start="73:51" pos:end="73:58">(<argument pos:start="73:52" pos:end="73:57"><expr pos:start="73:52" pos:end="73:57"><operator pos:start="73:52" pos:end="73:52">&amp;</operator><name pos:start="73:53" pos:end="73:57"><name pos:start="73:53" pos:end="73:53">s</name><operator pos:start="73:54" pos:end="73:55">-&gt;</operator><name pos:start="73:56" pos:end="73:57">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:67"><expr pos:start="75:9" pos:end="75:66"><name pos:start="75:9" pos:end="75:43"><name pos:start="75:9" pos:end="75:11">sps</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:43">offset_for_top_to_bottom_field</name></name><operator pos:start="75:44" pos:end="75:44">=</operator> <call pos:start="75:46" pos:end="75:66"><name pos:start="75:46" pos:end="75:58">get_se_golomb</name><argument_list pos:start="75:59" pos:end="75:66">(<argument pos:start="75:60" pos:end="75:65"><expr pos:start="75:60" pos:end="75:65"><operator pos:start="75:60" pos:end="75:60">&amp;</operator><name pos:start="75:61" pos:end="75:65"><name pos:start="75:61" pos:end="75:61">s</name><operator pos:start="75:62" pos:end="75:63">-&gt;</operator><name pos:start="75:64" pos:end="75:65">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:53"><expr pos:start="77:9" pos:end="77:52"><name pos:start="77:9" pos:end="77:29"><name pos:start="77:9" pos:end="77:11">sps</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:29">poc_cycle_length</name></name><operator pos:start="77:30" pos:end="77:30">=</operator> <call pos:start="77:32" pos:end="77:52"><name pos:start="77:32" pos:end="77:44">get_ue_golomb</name><argument_list pos:start="77:45" pos:end="77:52">(<argument pos:start="77:46" pos:end="77:51"><expr pos:start="77:46" pos:end="77:51"><operator pos:start="77:46" pos:end="77:46">&amp;</operator><name pos:start="77:47" pos:end="77:51"><name pos:start="77:47" pos:end="77:47">s</name><operator pos:start="77:48" pos:end="77:49">-&gt;</operator><name pos:start="77:50" pos:end="77:51">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="81:9" pos:end="83:64">for<control pos:start="81:12" pos:end="81:46">(<init pos:start="81:13" pos:end="81:16"><expr pos:start="81:13" pos:end="81:15"><name pos:start="81:13" pos:end="81:13">i</name><operator pos:start="81:14" pos:end="81:14">=</operator><literal type="number" pos:start="81:15" pos:end="81:15">0</literal></expr>;</init> <condition pos:start="81:18" pos:end="81:41"><expr pos:start="81:18" pos:end="81:40"><name pos:start="81:18" pos:end="81:18">i</name><operator pos:start="81:19" pos:end="81:19">&lt;</operator><name pos:start="81:20" pos:end="81:40"><name pos:start="81:20" pos:end="81:22">sps</name><operator pos:start="81:23" pos:end="81:24">-&gt;</operator><name pos:start="81:25" pos:end="81:40">poc_cycle_length</name></name></expr>;</condition> <incr pos:start="81:43" pos:end="81:45"><expr pos:start="81:43" pos:end="81:45"><name pos:start="81:43" pos:end="81:43">i</name><operator pos:start="81:44" pos:end="81:45">++</operator></expr></incr>)</control><block type="pseudo" pos:start="83:13" pos:end="83:64"><block_content pos:start="83:13" pos:end="83:64">

            <expr_stmt pos:start="83:13" pos:end="83:64"><expr pos:start="83:13" pos:end="83:63"><name pos:start="83:13" pos:end="83:40"><name pos:start="83:13" pos:end="83:15">sps</name><operator pos:start="83:16" pos:end="83:17">-&gt;</operator><name pos:start="83:18" pos:end="83:37">offset_for_ref_frame</name><index pos:start="83:38" pos:end="83:40">[<expr pos:start="83:39" pos:end="83:39"><name pos:start="83:39" pos:end="83:39">i</name></expr>]</index></name><operator pos:start="83:41" pos:end="83:41">=</operator> <call pos:start="83:43" pos:end="83:63"><name pos:start="83:43" pos:end="83:55">get_se_golomb</name><argument_list pos:start="83:56" pos:end="83:63">(<argument pos:start="83:57" pos:end="83:62"><expr pos:start="83:57" pos:end="83:62"><operator pos:start="83:57" pos:end="83:57">&amp;</operator><name pos:start="83:58" pos:end="83:62"><name pos:start="83:58" pos:end="83:58">s</name><operator pos:start="83:59" pos:end="83:60">-&gt;</operator><name pos:start="83:61" pos:end="83:62">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="87:5" pos:end="93:5"><if pos:start="87:5" pos:end="93:5">if<condition pos:start="87:7" pos:end="87:25">(<expr pos:start="87:8" pos:end="87:24"><name pos:start="87:8" pos:end="87:20"><name pos:start="87:8" pos:end="87:10">sps</name><operator pos:start="87:11" pos:end="87:12">-&gt;</operator><name pos:start="87:13" pos:end="87:20">poc_type</name></name> <operator pos:start="87:22" pos:end="87:22">&gt;</operator> <literal type="number" pos:start="87:24" pos:end="87:24">2</literal></expr>)</condition><block pos:start="87:26" pos:end="93:5">{<block_content pos:start="89:9" pos:end="91:18">

        <expr_stmt pos:start="89:9" pos:end="89:81"><expr pos:start="89:9" pos:end="89:80"><call pos:start="89:9" pos:end="89:80"><name pos:start="89:9" pos:end="89:14">av_log</name><argument_list pos:start="89:15" pos:end="89:80">(<argument pos:start="89:16" pos:end="89:25"><expr pos:start="89:16" pos:end="89:25"><name pos:start="89:16" pos:end="89:25"><name pos:start="89:16" pos:end="89:16">h</name><operator pos:start="89:17" pos:end="89:18">-&gt;</operator><name pos:start="89:19" pos:end="89:19">s</name><operator pos:start="89:20" pos:end="89:20">.</operator><name pos:start="89:21" pos:end="89:25">avctx</name></name></expr></argument>, <argument pos:start="89:28" pos:end="89:39"><expr pos:start="89:28" pos:end="89:39"><name pos:start="89:28" pos:end="89:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="89:42" pos:end="89:64"><expr pos:start="89:42" pos:end="89:64"><literal type="string" pos:start="89:42" pos:end="89:64">"illegal POC type %d\n"</literal></expr></argument>, <argument pos:start="89:67" pos:end="89:79"><expr pos:start="89:67" pos:end="89:79"><name pos:start="89:67" pos:end="89:79"><name pos:start="89:67" pos:end="89:69">sps</name><operator pos:start="89:70" pos:end="89:71">-&gt;</operator><name pos:start="89:72" pos:end="89:79">poc_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="91:9" pos:end="91:18">return <expr pos:start="91:16" pos:end="91:17"><operator pos:start="91:16" pos:end="91:16">-</operator><literal type="number" pos:start="91:17" pos:end="91:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:48"><expr pos:start="97:5" pos:end="97:47"><name pos:start="97:5" pos:end="97:24"><name pos:start="97:5" pos:end="97:7">sps</name><operator pos:start="97:8" pos:end="97:9">-&gt;</operator><name pos:start="97:10" pos:end="97:24">ref_frame_count</name></name><operator pos:start="97:25" pos:end="97:25">=</operator> <call pos:start="97:27" pos:end="97:47"><name pos:start="97:27" pos:end="97:39">get_ue_golomb</name><argument_list pos:start="97:40" pos:end="97:47">(<argument pos:start="97:41" pos:end="97:46"><expr pos:start="97:41" pos:end="97:46"><operator pos:start="97:41" pos:end="97:41">&amp;</operator><name pos:start="97:42" pos:end="97:46"><name pos:start="97:42" pos:end="97:42">s</name><operator pos:start="97:43" pos:end="97:44">-&gt;</operator><name pos:start="97:45" pos:end="97:46">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="99:5" pos:end="103:5"><if pos:start="99:5" pos:end="103:5">if<condition pos:start="99:7" pos:end="99:50">(<expr pos:start="99:8" pos:end="99:49"><name pos:start="99:8" pos:end="99:27"><name pos:start="99:8" pos:end="99:10">sps</name><operator pos:start="99:11" pos:end="99:12">-&gt;</operator><name pos:start="99:13" pos:end="99:27">ref_frame_count</name></name> <operator pos:start="99:29" pos:end="99:29">&gt;</operator> <name pos:start="99:31" pos:end="99:47">MAX_PICTURE_COUNT</name><operator pos:start="99:48" pos:end="99:48">-</operator><literal type="number" pos:start="99:49" pos:end="99:49">2</literal></expr>)</condition><block pos:start="99:51" pos:end="103:5">{<block_content pos:start="101:9" pos:end="101:72">

        <expr_stmt pos:start="101:9" pos:end="101:72"><expr pos:start="101:9" pos:end="101:71"><call pos:start="101:9" pos:end="101:71"><name pos:start="101:9" pos:end="101:14">av_log</name><argument_list pos:start="101:15" pos:end="101:71">(<argument pos:start="101:16" pos:end="101:25"><expr pos:start="101:16" pos:end="101:25"><name pos:start="101:16" pos:end="101:25"><name pos:start="101:16" pos:end="101:16">h</name><operator pos:start="101:17" pos:end="101:18">-&gt;</operator><name pos:start="101:19" pos:end="101:19">s</name><operator pos:start="101:20" pos:end="101:20">.</operator><name pos:start="101:21" pos:end="101:25">avctx</name></name></expr></argument>, <argument pos:start="101:28" pos:end="101:39"><expr pos:start="101:28" pos:end="101:39"><name pos:start="101:28" pos:end="101:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="101:42" pos:end="101:70"><expr pos:start="101:42" pos:end="101:70"><literal type="string" pos:start="101:42" pos:end="101:70">"too many reference frames\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:59"><expr pos:start="105:5" pos:end="105:58"><name pos:start="105:5" pos:end="105:39"><name pos:start="105:5" pos:end="105:7">sps</name><operator pos:start="105:8" pos:end="105:9">-&gt;</operator><name pos:start="105:10" pos:end="105:39">gaps_in_frame_num_allowed_flag</name></name><operator pos:start="105:40" pos:end="105:40">=</operator> <call pos:start="105:42" pos:end="105:58"><name pos:start="105:42" pos:end="105:50">get_bits1</name><argument_list pos:start="105:51" pos:end="105:58">(<argument pos:start="105:52" pos:end="105:57"><expr pos:start="105:52" pos:end="105:57"><operator pos:start="105:52" pos:end="105:52">&amp;</operator><name pos:start="105:53" pos:end="105:57"><name pos:start="105:53" pos:end="105:53">s</name><operator pos:start="105:54" pos:end="105:55">-&gt;</operator><name pos:start="105:56" pos:end="105:57">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:45"><expr pos:start="107:5" pos:end="107:44"><name pos:start="107:5" pos:end="107:17"><name pos:start="107:5" pos:end="107:7">sps</name><operator pos:start="107:8" pos:end="107:9">-&gt;</operator><name pos:start="107:10" pos:end="107:17">mb_width</name></name><operator pos:start="107:18" pos:end="107:18">=</operator> <call pos:start="107:20" pos:end="107:40"><name pos:start="107:20" pos:end="107:32">get_ue_golomb</name><argument_list pos:start="107:33" pos:end="107:40">(<argument pos:start="107:34" pos:end="107:39"><expr pos:start="107:34" pos:end="107:39"><operator pos:start="107:34" pos:end="107:34">&amp;</operator><name pos:start="107:35" pos:end="107:39"><name pos:start="107:35" pos:end="107:35">s</name><operator pos:start="107:36" pos:end="107:37">-&gt;</operator><name pos:start="107:38" pos:end="107:39">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="107:42" pos:end="107:42">+</operator> <literal type="number" pos:start="107:44" pos:end="107:44">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:46"><expr pos:start="109:5" pos:end="109:45"><name pos:start="109:5" pos:end="109:18"><name pos:start="109:5" pos:end="109:7">sps</name><operator pos:start="109:8" pos:end="109:9">-&gt;</operator><name pos:start="109:10" pos:end="109:18">mb_height</name></name><operator pos:start="109:19" pos:end="109:19">=</operator> <call pos:start="109:21" pos:end="109:41"><name pos:start="109:21" pos:end="109:33">get_ue_golomb</name><argument_list pos:start="109:34" pos:end="109:41">(<argument pos:start="109:35" pos:end="109:40"><expr pos:start="109:35" pos:end="109:40"><operator pos:start="109:35" pos:end="109:35">&amp;</operator><name pos:start="109:36" pos:end="109:40"><name pos:start="109:36" pos:end="109:36">s</name><operator pos:start="109:37" pos:end="109:38">-&gt;</operator><name pos:start="109:39" pos:end="109:40">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="109:43" pos:end="109:43">+</operator> <literal type="number" pos:start="109:45" pos:end="109:45">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="111:5" pos:end="115:18"><if pos:start="111:5" pos:end="115:18">if<condition pos:start="111:7" pos:end="113:75">(<expr pos:start="111:8" pos:end="113:74"><operator pos:start="111:8" pos:end="111:8">(</operator><name pos:start="111:9" pos:end="111:16">unsigned</name><operator pos:start="111:17" pos:end="111:17">)</operator><name pos:start="111:18" pos:end="111:30"><name pos:start="111:18" pos:end="111:20">sps</name><operator pos:start="111:21" pos:end="111:22">-&gt;</operator><name pos:start="111:23" pos:end="111:30">mb_width</name></name> <operator pos:start="111:32" pos:end="111:33">&gt;=</operator> <name pos:start="111:35" pos:end="111:41">INT_MAX</name><operator pos:start="111:42" pos:end="111:42">/</operator><literal type="number" pos:start="111:43" pos:end="111:44">16</literal> <operator pos:start="111:46" pos:end="111:47">||</operator> <operator pos:start="111:49" pos:end="111:49">(</operator><name pos:start="111:50" pos:end="111:57">unsigned</name><operator pos:start="111:58" pos:end="111:58">)</operator><name pos:start="111:59" pos:end="111:72"><name pos:start="111:59" pos:end="111:61">sps</name><operator pos:start="111:62" pos:end="111:63">-&gt;</operator><name pos:start="111:64" pos:end="111:72">mb_height</name></name> <operator pos:start="111:74" pos:end="111:75">&gt;=</operator> <name pos:start="111:77" pos:end="111:83">INT_MAX</name><operator pos:start="111:84" pos:end="111:84">/</operator><literal type="number" pos:start="111:85" pos:end="111:86">16</literal> <operator pos:start="111:88" pos:end="111:89">||</operator>

       <call pos:start="113:8" pos:end="113:74"><name pos:start="113:8" pos:end="113:31">avcodec_check_dimensions</name><argument_list pos:start="113:32" pos:end="113:74">(<argument pos:start="113:33" pos:end="113:36"><expr pos:start="113:33" pos:end="113:36"><name pos:start="113:33" pos:end="113:36">NULL</name></expr></argument>, <argument pos:start="113:39" pos:end="113:54"><expr pos:start="113:39" pos:end="113:54"><literal type="number" pos:start="113:39" pos:end="113:40">16</literal><operator pos:start="113:41" pos:end="113:41">*</operator><name pos:start="113:42" pos:end="113:54"><name pos:start="113:42" pos:end="113:44">sps</name><operator pos:start="113:45" pos:end="113:46">-&gt;</operator><name pos:start="113:47" pos:end="113:54">mb_width</name></name></expr></argument>, <argument pos:start="113:57" pos:end="113:73"><expr pos:start="113:57" pos:end="113:73"><literal type="number" pos:start="113:57" pos:end="113:58">16</literal><operator pos:start="113:59" pos:end="113:59">*</operator><name pos:start="113:60" pos:end="113:73"><name pos:start="113:60" pos:end="113:62">sps</name><operator pos:start="113:63" pos:end="113:64">-&gt;</operator><name pos:start="113:65" pos:end="113:73">mb_height</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="115:9" pos:end="115:18"><block_content pos:start="115:9" pos:end="115:18">

        <return pos:start="115:9" pos:end="115:18">return <expr pos:start="115:16" pos:end="115:17"><operator pos:start="115:16" pos:end="115:16">-</operator><literal type="number" pos:start="115:17" pos:end="115:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="119:5" pos:end="119:48"><expr pos:start="119:5" pos:end="119:47"><name pos:start="119:5" pos:end="119:28"><name pos:start="119:5" pos:end="119:7">sps</name><operator pos:start="119:8" pos:end="119:9">-&gt;</operator><name pos:start="119:10" pos:end="119:28">frame_mbs_only_flag</name></name><operator pos:start="119:29" pos:end="119:29">=</operator> <call pos:start="119:31" pos:end="119:47"><name pos:start="119:31" pos:end="119:39">get_bits1</name><argument_list pos:start="119:40" pos:end="119:47">(<argument pos:start="119:41" pos:end="119:46"><expr pos:start="119:41" pos:end="119:46"><operator pos:start="119:41" pos:end="119:41">&amp;</operator><name pos:start="119:42" pos:end="119:46"><name pos:start="119:42" pos:end="119:42">s</name><operator pos:start="119:43" pos:end="119:44">-&gt;</operator><name pos:start="119:45" pos:end="119:46">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="121:5" pos:end="127:23"><if pos:start="121:5" pos:end="123:39">if<condition pos:start="121:7" pos:end="121:33">(<expr pos:start="121:8" pos:end="121:32"><operator pos:start="121:8" pos:end="121:8">!</operator><name pos:start="121:9" pos:end="121:32"><name pos:start="121:9" pos:end="121:11">sps</name><operator pos:start="121:12" pos:end="121:13">-&gt;</operator><name pos:start="121:14" pos:end="121:32">frame_mbs_only_flag</name></name></expr>)</condition><block type="pseudo" pos:start="123:9" pos:end="123:39"><block_content pos:start="123:9" pos:end="123:39">

        <expr_stmt pos:start="123:9" pos:end="123:39"><expr pos:start="123:9" pos:end="123:38"><name pos:start="123:9" pos:end="123:19"><name pos:start="123:9" pos:end="123:11">sps</name><operator pos:start="123:12" pos:end="123:13">-&gt;</operator><name pos:start="123:14" pos:end="123:19">mb_aff</name></name><operator pos:start="123:20" pos:end="123:20">=</operator> <call pos:start="123:22" pos:end="123:38"><name pos:start="123:22" pos:end="123:30">get_bits1</name><argument_list pos:start="123:31" pos:end="123:38">(<argument pos:start="123:32" pos:end="123:37"><expr pos:start="123:32" pos:end="123:37"><operator pos:start="123:32" pos:end="123:32">&amp;</operator><name pos:start="123:33" pos:end="123:37"><name pos:start="123:33" pos:end="123:33">s</name><operator pos:start="123:34" pos:end="123:35">-&gt;</operator><name pos:start="123:36" pos:end="123:37">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="125:5" pos:end="127:23">else<block type="pseudo" pos:start="127:9" pos:end="127:23"><block_content pos:start="127:9" pos:end="127:23">

        <expr_stmt pos:start="127:9" pos:end="127:23"><expr pos:start="127:9" pos:end="127:22"><name pos:start="127:9" pos:end="127:19"><name pos:start="127:9" pos:end="127:11">sps</name><operator pos:start="127:12" pos:end="127:13">-&gt;</operator><name pos:start="127:14" pos:end="127:19">mb_aff</name></name><operator pos:start="127:20" pos:end="127:20">=</operator> <literal type="number" pos:start="127:22" pos:end="127:22">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="131:5" pos:end="136:0"><expr pos:start="131:5" pos:end="131:53"><name pos:start="131:5" pos:end="131:34"><name pos:start="131:5" pos:end="131:7">sps</name><operator pos:start="131:8" pos:end="131:9">-&gt;</operator><name pos:start="131:10" pos:end="131:34">direct_8x8_inference_flag</name></name><operator pos:start="131:35" pos:end="131:35">=</operator> <call pos:start="131:37" pos:end="131:53"><name pos:start="131:37" pos:end="131:45">get_bits1</name><argument_list pos:start="131:46" pos:end="131:53">(<argument pos:start="131:47" pos:end="131:52"><expr pos:start="131:47" pos:end="131:52"><operator pos:start="131:47" pos:end="131:47">&amp;</operator><name pos:start="131:48" pos:end="131:52"><name pos:start="131:48" pos:end="131:48">s</name><operator pos:start="131:49" pos:end="131:50">-&gt;</operator><name pos:start="131:51" pos:end="131:52">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifndef pos:start="135:1" pos:end="135:23">#<cpp:directive pos:start="135:2" pos:end="135:7">ifndef</cpp:directive> <name pos:start="135:9" pos:end="135:23">ALLOW_INTERLACE</name></cpp:ifndef>

    <if_stmt pos:start="137:5" pos:end="142:0"><if pos:start="137:5" pos:end="142:0">if<condition pos:start="137:7" pos:end="137:19">(<expr pos:start="137:8" pos:end="137:18"><name pos:start="137:8" pos:end="137:18"><name pos:start="137:8" pos:end="137:10">sps</name><operator pos:start="137:11" pos:end="137:12">-&gt;</operator><name pos:start="137:13" pos:end="137:18">mb_aff</name></name></expr>)</condition><block type="pseudo" pos:start="139:9" pos:end="142:0"><block_content pos:start="139:9" pos:end="142:0">

        <expr_stmt pos:start="139:9" pos:end="142:0"><expr pos:start="139:9" pos:end="139:100"><call pos:start="139:9" pos:end="139:100"><name pos:start="139:9" pos:end="139:14">av_log</name><argument_list pos:start="139:15" pos:end="139:100">(<argument pos:start="139:16" pos:end="139:25"><expr pos:start="139:16" pos:end="139:25"><name pos:start="139:16" pos:end="139:25"><name pos:start="139:16" pos:end="139:16">h</name><operator pos:start="139:17" pos:end="139:18">-&gt;</operator><name pos:start="139:19" pos:end="139:19">s</name><operator pos:start="139:20" pos:end="139:20">.</operator><name pos:start="139:21" pos:end="139:25">avctx</name></name></expr></argument>, <argument pos:start="139:28" pos:end="139:39"><expr pos:start="139:28" pos:end="139:39"><name pos:start="139:28" pos:end="139:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="139:42" pos:end="139:99"><expr pos:start="139:42" pos:end="139:99"><literal type="string" pos:start="139:42" pos:end="139:99">"MBAFF support not included; enable it at compile-time.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="141:1" pos:end="141:6">#<cpp:directive pos:start="141:2" pos:end="141:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="143:5" pos:end="145:95"><if pos:start="143:5" pos:end="145:95">if<condition pos:start="143:7" pos:end="143:54">(<expr pos:start="143:8" pos:end="143:53"><operator pos:start="143:8" pos:end="143:8">!</operator><name pos:start="143:9" pos:end="143:38"><name pos:start="143:9" pos:end="143:11">sps</name><operator pos:start="143:12" pos:end="143:13">-&gt;</operator><name pos:start="143:14" pos:end="143:38">direct_8x8_inference_flag</name></name> <operator pos:start="143:40" pos:end="143:41">&amp;&amp;</operator> <name pos:start="143:43" pos:end="143:53"><name pos:start="143:43" pos:end="143:45">sps</name><operator pos:start="143:46" pos:end="143:47">-&gt;</operator><name pos:start="143:48" pos:end="143:53">mb_aff</name></name></expr>)</condition><block type="pseudo" pos:start="145:9" pos:end="145:95"><block_content pos:start="145:9" pos:end="145:95">

        <expr_stmt pos:start="145:9" pos:end="145:95"><expr pos:start="145:9" pos:end="145:94"><call pos:start="145:9" pos:end="145:94"><name pos:start="145:9" pos:end="145:14">av_log</name><argument_list pos:start="145:15" pos:end="145:94">(<argument pos:start="145:16" pos:end="145:25"><expr pos:start="145:16" pos:end="145:25"><name pos:start="145:16" pos:end="145:25"><name pos:start="145:16" pos:end="145:16">h</name><operator pos:start="145:17" pos:end="145:18">-&gt;</operator><name pos:start="145:19" pos:end="145:19">s</name><operator pos:start="145:20" pos:end="145:20">.</operator><name pos:start="145:21" pos:end="145:25">avctx</name></name></expr></argument>, <argument pos:start="145:28" pos:end="145:39"><expr pos:start="145:28" pos:end="145:39"><name pos:start="145:28" pos:end="145:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="145:42" pos:end="145:93"><expr pos:start="145:42" pos:end="145:93"><literal type="string" pos:start="145:42" pos:end="145:93">"MBAFF + !direct_8x8_inference is not implemented\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="149:5" pos:end="149:33"><expr pos:start="149:5" pos:end="149:32"><name pos:start="149:5" pos:end="149:13"><name pos:start="149:5" pos:end="149:7">sps</name><operator pos:start="149:8" pos:end="149:9">-&gt;</operator><name pos:start="149:10" pos:end="149:13">crop</name></name><operator pos:start="149:14" pos:end="149:14">=</operator> <call pos:start="149:16" pos:end="149:32"><name pos:start="149:16" pos:end="149:24">get_bits1</name><argument_list pos:start="149:25" pos:end="149:32">(<argument pos:start="149:26" pos:end="149:31"><expr pos:start="149:26" pos:end="149:31"><operator pos:start="149:26" pos:end="149:26">&amp;</operator><name pos:start="149:27" pos:end="149:31"><name pos:start="149:27" pos:end="149:27">s</name><operator pos:start="149:28" pos:end="149:29">-&gt;</operator><name pos:start="149:30" pos:end="149:31">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="151:5" pos:end="177:5"><if pos:start="151:5" pos:end="167:5">if<condition pos:start="151:7" pos:end="151:17">(<expr pos:start="151:8" pos:end="151:16"><name pos:start="151:8" pos:end="151:16"><name pos:start="151:8" pos:end="151:10">sps</name><operator pos:start="151:11" pos:end="151:12">-&gt;</operator><name pos:start="151:13" pos:end="151:16">crop</name></name></expr>)</condition><block pos:start="151:18" pos:end="167:5">{<block_content pos:start="153:9" pos:end="165:9">

        <expr_stmt pos:start="153:9" pos:end="153:48"><expr pos:start="153:9" pos:end="153:47"><name pos:start="153:9" pos:end="153:22"><name pos:start="153:9" pos:end="153:11">sps</name><operator pos:start="153:12" pos:end="153:13">-&gt;</operator><name pos:start="153:14" pos:end="153:22">crop_left</name></name>  <operator pos:start="153:25" pos:end="153:25">=</operator> <call pos:start="153:27" pos:end="153:47"><name pos:start="153:27" pos:end="153:39">get_ue_golomb</name><argument_list pos:start="153:40" pos:end="153:47">(<argument pos:start="153:41" pos:end="153:46"><expr pos:start="153:41" pos:end="153:46"><operator pos:start="153:41" pos:end="153:41">&amp;</operator><name pos:start="153:42" pos:end="153:46"><name pos:start="153:42" pos:end="153:42">s</name><operator pos:start="153:43" pos:end="153:44">-&gt;</operator><name pos:start="153:45" pos:end="153:46">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:48"><expr pos:start="155:9" pos:end="155:47"><name pos:start="155:9" pos:end="155:23"><name pos:start="155:9" pos:end="155:11">sps</name><operator pos:start="155:12" pos:end="155:13">-&gt;</operator><name pos:start="155:14" pos:end="155:23">crop_right</name></name> <operator pos:start="155:25" pos:end="155:25">=</operator> <call pos:start="155:27" pos:end="155:47"><name pos:start="155:27" pos:end="155:39">get_ue_golomb</name><argument_list pos:start="155:40" pos:end="155:47">(<argument pos:start="155:41" pos:end="155:46"><expr pos:start="155:41" pos:end="155:46"><operator pos:start="155:41" pos:end="155:41">&amp;</operator><name pos:start="155:42" pos:end="155:46"><name pos:start="155:42" pos:end="155:42">s</name><operator pos:start="155:43" pos:end="155:44">-&gt;</operator><name pos:start="155:45" pos:end="155:46">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:48"><expr pos:start="157:9" pos:end="157:47"><name pos:start="157:9" pos:end="157:21"><name pos:start="157:9" pos:end="157:11">sps</name><operator pos:start="157:12" pos:end="157:13">-&gt;</operator><name pos:start="157:14" pos:end="157:21">crop_top</name></name>   <operator pos:start="157:25" pos:end="157:25">=</operator> <call pos:start="157:27" pos:end="157:47"><name pos:start="157:27" pos:end="157:39">get_ue_golomb</name><argument_list pos:start="157:40" pos:end="157:47">(<argument pos:start="157:41" pos:end="157:46"><expr pos:start="157:41" pos:end="157:46"><operator pos:start="157:41" pos:end="157:41">&amp;</operator><name pos:start="157:42" pos:end="157:46"><name pos:start="157:42" pos:end="157:42">s</name><operator pos:start="157:43" pos:end="157:44">-&gt;</operator><name pos:start="157:45" pos:end="157:46">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:48"><expr pos:start="159:9" pos:end="159:47"><name pos:start="159:9" pos:end="159:24"><name pos:start="159:9" pos:end="159:11">sps</name><operator pos:start="159:12" pos:end="159:13">-&gt;</operator><name pos:start="159:14" pos:end="159:24">crop_bottom</name></name><operator pos:start="159:25" pos:end="159:25">=</operator> <call pos:start="159:27" pos:end="159:47"><name pos:start="159:27" pos:end="159:39">get_ue_golomb</name><argument_list pos:start="159:40" pos:end="159:47">(<argument pos:start="159:41" pos:end="159:46"><expr pos:start="159:41" pos:end="159:46"><operator pos:start="159:41" pos:end="159:41">&amp;</operator><name pos:start="159:42" pos:end="159:46"><name pos:start="159:42" pos:end="159:42">s</name><operator pos:start="159:43" pos:end="159:44">-&gt;</operator><name pos:start="159:45" pos:end="159:46">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="161:9" pos:end="165:9"><if pos:start="161:9" pos:end="165:9">if<condition pos:start="161:11" pos:end="161:43">(<expr pos:start="161:12" pos:end="161:42"><name pos:start="161:12" pos:end="161:25"><name pos:start="161:12" pos:end="161:14">sps</name><operator pos:start="161:15" pos:end="161:16">-&gt;</operator><name pos:start="161:17" pos:end="161:25">crop_left</name></name> <operator pos:start="161:27" pos:end="161:28">||</operator> <name pos:start="161:30" pos:end="161:42"><name pos:start="161:30" pos:end="161:32">sps</name><operator pos:start="161:33" pos:end="161:34">-&gt;</operator><name pos:start="161:35" pos:end="161:42">crop_top</name></name></expr>)</condition><block pos:start="161:44" pos:end="165:9">{<block_content pos:start="163:13" pos:end="163:127">

            <expr_stmt pos:start="163:13" pos:end="163:127"><expr pos:start="163:13" pos:end="163:126"><call pos:start="163:13" pos:end="163:126"><name pos:start="163:13" pos:end="163:18">av_log</name><argument_list pos:start="163:19" pos:end="163:126">(<argument pos:start="163:20" pos:end="163:29"><expr pos:start="163:20" pos:end="163:29"><name pos:start="163:20" pos:end="163:29"><name pos:start="163:20" pos:end="163:20">h</name><operator pos:start="163:21" pos:end="163:22">-&gt;</operator><name pos:start="163:23" pos:end="163:23">s</name><operator pos:start="163:24" pos:end="163:24">.</operator><name pos:start="163:25" pos:end="163:29">avctx</name></name></expr></argument>, <argument pos:start="163:32" pos:end="163:43"><expr pos:start="163:32" pos:end="163:43"><name pos:start="163:32" pos:end="163:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="163:46" pos:end="163:125"><expr pos:start="163:46" pos:end="163:125"><literal type="string" pos:start="163:46" pos:end="163:125">"insane cropping not completely supported, this could look slightly wrong ...\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if><else pos:start="167:6" pos:end="177:5">else<block pos:start="167:10" pos:end="177:5">{<block_content pos:start="169:9" pos:end="175:28">

        <expr_stmt pos:start="169:9" pos:end="175:28"><expr pos:start="169:9" pos:end="175:27"><name pos:start="169:9" pos:end="169:22"><name pos:start="169:9" pos:end="169:11">sps</name><operator pos:start="169:12" pos:end="169:13">-&gt;</operator><name pos:start="169:14" pos:end="169:22">crop_left</name></name>  <operator pos:start="169:25" pos:end="169:25">=</operator>

        <name pos:start="171:9" pos:end="171:23"><name pos:start="171:9" pos:end="171:11">sps</name><operator pos:start="171:12" pos:end="171:13">-&gt;</operator><name pos:start="171:14" pos:end="171:23">crop_right</name></name> <operator pos:start="171:25" pos:end="171:25">=</operator>

        <name pos:start="173:9" pos:end="173:21"><name pos:start="173:9" pos:end="173:11">sps</name><operator pos:start="173:12" pos:end="173:13">-&gt;</operator><name pos:start="173:14" pos:end="173:21">crop_top</name></name>   <operator pos:start="173:25" pos:end="173:25">=</operator>

        <name pos:start="175:9" pos:end="175:24"><name pos:start="175:9" pos:end="175:11">sps</name><operator pos:start="175:12" pos:end="175:13">-&gt;</operator><name pos:start="175:14" pos:end="175:24">crop_bottom</name></name><operator pos:start="175:25" pos:end="175:25">=</operator> <literal type="number" pos:start="175:27" pos:end="175:27">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="181:5" pos:end="181:56"><expr pos:start="181:5" pos:end="181:55"><name pos:start="181:5" pos:end="181:36"><name pos:start="181:5" pos:end="181:7">sps</name><operator pos:start="181:8" pos:end="181:9">-&gt;</operator><name pos:start="181:10" pos:end="181:36">vui_parameters_present_flag</name></name><operator pos:start="181:37" pos:end="181:37">=</operator> <call pos:start="181:39" pos:end="181:55"><name pos:start="181:39" pos:end="181:47">get_bits1</name><argument_list pos:start="181:48" pos:end="181:55">(<argument pos:start="181:49" pos:end="181:54"><expr pos:start="181:49" pos:end="181:54"><operator pos:start="181:49" pos:end="181:49">&amp;</operator><name pos:start="181:50" pos:end="181:54"><name pos:start="181:50" pos:end="181:50">s</name><operator pos:start="181:51" pos:end="181:52">-&gt;</operator><name pos:start="181:53" pos:end="181:54">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="183:5" pos:end="185:38"><if pos:start="183:5" pos:end="185:38">if<condition pos:start="183:7" pos:end="183:42">( <expr pos:start="183:9" pos:end="183:40"><name pos:start="183:9" pos:end="183:40"><name pos:start="183:9" pos:end="183:11">sps</name><operator pos:start="183:12" pos:end="183:13">-&gt;</operator><name pos:start="183:14" pos:end="183:40">vui_parameters_present_flag</name></name></expr> )</condition><block type="pseudo" pos:start="185:9" pos:end="185:38"><block_content pos:start="185:9" pos:end="185:38">

        <expr_stmt pos:start="185:9" pos:end="185:38"><expr pos:start="185:9" pos:end="185:37"><call pos:start="185:9" pos:end="185:37"><name pos:start="185:9" pos:end="185:29">decode_vui_parameters</name><argument_list pos:start="185:30" pos:end="185:37">(<argument pos:start="185:31" pos:end="185:31"><expr pos:start="185:31" pos:end="185:31"><name pos:start="185:31" pos:end="185:31">h</name></expr></argument>, <argument pos:start="185:34" pos:end="185:36"><expr pos:start="185:34" pos:end="185:36"><name pos:start="185:34" pos:end="185:36">sps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="189:5" pos:end="213:5"><if pos:start="189:5" pos:end="213:5">if<condition pos:start="189:7" pos:end="189:42">(<expr pos:start="189:8" pos:end="189:41"><name pos:start="189:8" pos:end="189:22"><name pos:start="189:8" pos:end="189:8">s</name><operator pos:start="189:9" pos:end="189:10">-&gt;</operator><name pos:start="189:11" pos:end="189:15">avctx</name><operator pos:start="189:16" pos:end="189:17">-&gt;</operator><name pos:start="189:18" pos:end="189:22">debug</name></name><operator pos:start="189:23" pos:end="189:23">&amp;</operator><name pos:start="189:24" pos:end="189:41">FF_DEBUG_PICT_INFO</name></expr>)</condition><block pos:start="189:43" pos:end="213:5">{<block_content pos:start="191:9" pos:end="211:17">

        <expr_stmt pos:start="191:9" pos:end="211:17"><expr pos:start="191:9" pos:end="211:16"><call pos:start="191:9" pos:end="211:16"><name pos:start="191:9" pos:end="191:14">av_log</name><argument_list pos:start="191:15" pos:end="211:16">(<argument pos:start="191:16" pos:end="191:25"><expr pos:start="191:16" pos:end="191:25"><name pos:start="191:16" pos:end="191:25"><name pos:start="191:16" pos:end="191:16">h</name><operator pos:start="191:17" pos:end="191:18">-&gt;</operator><name pos:start="191:19" pos:end="191:19">s</name><operator pos:start="191:20" pos:end="191:20">.</operator><name pos:start="191:21" pos:end="191:25">avctx</name></name></expr></argument>, <argument pos:start="191:28" pos:end="191:39"><expr pos:start="191:28" pos:end="191:39"><name pos:start="191:28" pos:end="191:39">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="191:42" pos:end="191:111"><expr pos:start="191:42" pos:end="191:111"><literal type="string" pos:start="191:42" pos:end="191:111">"sps:%d profile:%d/%d poc:%d ref:%d %dx%d %s %s crop:%d/%d/%d/%d %s\n"</literal></expr></argument>,

               <argument pos:start="193:16" pos:end="193:21"><expr pos:start="193:16" pos:end="193:21"><name pos:start="193:16" pos:end="193:21">sps_id</name></expr></argument>, <argument pos:start="193:24" pos:end="193:39"><expr pos:start="193:24" pos:end="193:39"><name pos:start="193:24" pos:end="193:39"><name pos:start="193:24" pos:end="193:26">sps</name><operator pos:start="193:27" pos:end="193:28">-&gt;</operator><name pos:start="193:29" pos:end="193:39">profile_idc</name></name></expr></argument>, <argument pos:start="193:42" pos:end="193:55"><expr pos:start="193:42" pos:end="193:55"><name pos:start="193:42" pos:end="193:55"><name pos:start="193:42" pos:end="193:44">sps</name><operator pos:start="193:45" pos:end="193:46">-&gt;</operator><name pos:start="193:47" pos:end="193:55">level_idc</name></name></expr></argument>,

               <argument pos:start="195:16" pos:end="195:28"><expr pos:start="195:16" pos:end="195:28"><name pos:start="195:16" pos:end="195:28"><name pos:start="195:16" pos:end="195:18">sps</name><operator pos:start="195:19" pos:end="195:20">-&gt;</operator><name pos:start="195:21" pos:end="195:28">poc_type</name></name></expr></argument>,

               <argument pos:start="197:16" pos:end="197:35"><expr pos:start="197:16" pos:end="197:35"><name pos:start="197:16" pos:end="197:35"><name pos:start="197:16" pos:end="197:18">sps</name><operator pos:start="197:19" pos:end="197:20">-&gt;</operator><name pos:start="197:21" pos:end="197:35">ref_frame_count</name></name></expr></argument>,

               <argument pos:start="199:16" pos:end="199:28"><expr pos:start="199:16" pos:end="199:28"><name pos:start="199:16" pos:end="199:28"><name pos:start="199:16" pos:end="199:18">sps</name><operator pos:start="199:19" pos:end="199:20">-&gt;</operator><name pos:start="199:21" pos:end="199:28">mb_width</name></name></expr></argument>, <argument pos:start="199:31" pos:end="199:44"><expr pos:start="199:31" pos:end="199:44"><name pos:start="199:31" pos:end="199:44"><name pos:start="199:31" pos:end="199:33">sps</name><operator pos:start="199:34" pos:end="199:35">-&gt;</operator><name pos:start="199:36" pos:end="199:44">mb_height</name></name></expr></argument>,

               <argument pos:start="201:16" pos:end="201:86"><expr pos:start="201:16" pos:end="201:86"><ternary pos:start="201:16" pos:end="201:86"><condition pos:start="201:16" pos:end="201:41"><expr pos:start="201:16" pos:end="201:39"><name pos:start="201:16" pos:end="201:39"><name pos:start="201:16" pos:end="201:18">sps</name><operator pos:start="201:19" pos:end="201:20">-&gt;</operator><name pos:start="201:21" pos:end="201:39">frame_mbs_only_flag</name></name></expr> ?</condition><then pos:start="201:43" pos:end="201:47"> <expr pos:start="201:43" pos:end="201:47"><literal type="string" pos:start="201:43" pos:end="201:47">"FRM"</literal></expr> </then><else pos:start="201:49" pos:end="201:86">: <expr pos:start="201:51" pos:end="201:86"><operator pos:start="201:51" pos:end="201:51">(</operator><ternary pos:start="201:52" pos:end="201:85"><condition pos:start="201:52" pos:end="201:64"><expr pos:start="201:52" pos:end="201:62"><name pos:start="201:52" pos:end="201:62"><name pos:start="201:52" pos:end="201:54">sps</name><operator pos:start="201:55" pos:end="201:56">-&gt;</operator><name pos:start="201:57" pos:end="201:62">mb_aff</name></name></expr> ?</condition><then pos:start="201:66" pos:end="201:73"> <expr pos:start="201:66" pos:end="201:73"><literal type="string" pos:start="201:66" pos:end="201:73">"MB-AFF"</literal></expr> </then><else pos:start="201:75" pos:end="201:85">: <expr pos:start="201:77" pos:end="201:85"><literal type="string" pos:start="201:77" pos:end="201:85">"PIC-AFF"</literal></expr></else></ternary><operator pos:start="201:86" pos:end="201:86">)</operator></expr></else></ternary></expr></argument>,

               <argument pos:start="203:16" pos:end="203:58"><expr pos:start="203:16" pos:end="203:58"><ternary pos:start="203:16" pos:end="203:58"><condition pos:start="203:16" pos:end="203:47"><expr pos:start="203:16" pos:end="203:45"><name pos:start="203:16" pos:end="203:45"><name pos:start="203:16" pos:end="203:18">sps</name><operator pos:start="203:19" pos:end="203:20">-&gt;</operator><name pos:start="203:21" pos:end="203:45">direct_8x8_inference_flag</name></name></expr> ?</condition><then pos:start="203:49" pos:end="203:53"> <expr pos:start="203:49" pos:end="203:53"><literal type="string" pos:start="203:49" pos:end="203:53">"8B8"</literal></expr> </then><else pos:start="203:55" pos:end="203:58">: <expr pos:start="203:57" pos:end="203:58"><literal type="string" pos:start="203:57" pos:end="203:58">""</literal></expr></else></ternary></expr></argument>,

               <argument pos:start="205:16" pos:end="205:29"><expr pos:start="205:16" pos:end="205:29"><name pos:start="205:16" pos:end="205:29"><name pos:start="205:16" pos:end="205:18">sps</name><operator pos:start="205:19" pos:end="205:20">-&gt;</operator><name pos:start="205:21" pos:end="205:29">crop_left</name></name></expr></argument>, <argument pos:start="205:32" pos:end="205:46"><expr pos:start="205:32" pos:end="205:46"><name pos:start="205:32" pos:end="205:46"><name pos:start="205:32" pos:end="205:34">sps</name><operator pos:start="205:35" pos:end="205:36">-&gt;</operator><name pos:start="205:37" pos:end="205:46">crop_right</name></name></expr></argument>,

               <argument pos:start="207:16" pos:end="207:28"><expr pos:start="207:16" pos:end="207:28"><name pos:start="207:16" pos:end="207:28"><name pos:start="207:16" pos:end="207:18">sps</name><operator pos:start="207:19" pos:end="207:20">-&gt;</operator><name pos:start="207:21" pos:end="207:28">crop_top</name></name></expr></argument>, <argument pos:start="207:31" pos:end="207:46"><expr pos:start="207:31" pos:end="207:46"><name pos:start="207:31" pos:end="207:46"><name pos:start="207:31" pos:end="207:33">sps</name><operator pos:start="207:34" pos:end="207:35">-&gt;</operator><name pos:start="207:36" pos:end="207:46">crop_bottom</name></name></expr></argument>,

               <argument pos:start="209:16" pos:end="209:60"><expr pos:start="209:16" pos:end="209:60"><ternary pos:start="209:16" pos:end="209:60"><condition pos:start="209:16" pos:end="209:49"><expr pos:start="209:16" pos:end="209:47"><name pos:start="209:16" pos:end="209:47"><name pos:start="209:16" pos:end="209:18">sps</name><operator pos:start="209:19" pos:end="209:20">-&gt;</operator><name pos:start="209:21" pos:end="209:47">vui_parameters_present_flag</name></name></expr> ?</condition><then pos:start="209:51" pos:end="209:55"> <expr pos:start="209:51" pos:end="209:55"><literal type="string" pos:start="209:51" pos:end="209:55">"VUI"</literal></expr> </then><else pos:start="209:57" pos:end="209:60">: <expr pos:start="209:59" pos:end="209:60"><literal type="string" pos:start="209:59" pos:end="209:60">""</literal></expr></else></ternary></expr></argument>

               )</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="215:5" pos:end="215:13">return <expr pos:start="215:12" pos:end="215:12"><literal type="number" pos:start="215:12" pos:end="215:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
