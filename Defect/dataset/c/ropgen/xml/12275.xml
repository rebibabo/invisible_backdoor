<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12275.c" pos:tabs="8"><function pos:start="1:1" pos:end="108:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">vfio_pci_load_rom</name><parameter_list pos:start="1:30" pos:end="1:47">(<parameter pos:start="1:31" pos:end="1:46"><decl pos:start="1:31" pos:end="1:46"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:40">VFIODevice</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:46">vdev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="108:1">{<block_content pos:start="5:5" pos:end="106:5">

    <decl_stmt pos:start="5:5" pos:end="11:6"><decl pos:start="5:5" pos:end="11:5"><type pos:start="5:5" pos:end="5:27"><name pos:start="5:5" pos:end="5:27"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:27">vfio_region_info</name></name></type> <name pos:start="5:29" pos:end="5:36">reg_info</name> <init pos:start="5:38" pos:end="11:5">= <expr pos:start="5:40" pos:end="11:5"><block pos:start="5:40" pos:end="11:5">{

        <expr pos:start="7:9" pos:end="7:33"><operator pos:start="7:9" pos:end="7:9">.</operator><name pos:start="7:10" pos:end="7:14">argsz</name> <operator pos:start="7:16" pos:end="7:16">=</operator> <sizeof pos:start="7:18" pos:end="7:33">sizeof<argument_list pos:start="7:24" pos:end="7:33">(<argument pos:start="7:25" pos:end="7:32"><expr pos:start="7:25" pos:end="7:32"><name pos:start="7:25" pos:end="7:32">reg_info</name></expr></argument>)</argument_list></sizeof></expr>,

        <expr pos:start="9:9" pos:end="9:42"><operator pos:start="9:9" pos:end="9:9">.</operator><name pos:start="9:10" pos:end="9:14">index</name> <operator pos:start="9:16" pos:end="9:16">=</operator> <name pos:start="9:18" pos:end="9:42">VFIO_PCI_ROM_REGION_INDEX</name></expr>

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint64_t</name></type> <name pos:start="13:14" pos:end="13:17">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:9"><name pos:start="15:5" pos:end="15:9">off_t</name></type> <name pos:start="15:11" pos:end="15:13">off</name> <init pos:start="15:15" pos:end="15:17">= <expr pos:start="15:17" pos:end="15:17"><literal type="number" pos:start="15:17" pos:end="15:17">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:10">size_t</name></type> <name pos:start="17:12" pos:end="17:16">bytes</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:64">(<expr pos:start="21:9" pos:end="21:63"><call pos:start="21:9" pos:end="21:63"><name pos:start="21:9" pos:end="21:13">ioctl</name><argument_list pos:start="21:14" pos:end="21:63">(<argument pos:start="21:15" pos:end="21:22"><expr pos:start="21:15" pos:end="21:22"><name pos:start="21:15" pos:end="21:22"><name pos:start="21:15" pos:end="21:18">vdev</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:22">fd</name></name></expr></argument>, <argument pos:start="21:25" pos:end="21:51"><expr pos:start="21:25" pos:end="21:51"><name pos:start="21:25" pos:end="21:51">VFIO_DEVICE_GET_REGION_INFO</name></expr></argument>, <argument pos:start="21:54" pos:end="21:62"><expr pos:start="21:54" pos:end="21:62"><operator pos:start="21:54" pos:end="21:54">&amp;</operator><name pos:start="21:55" pos:end="21:62">reg_info</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:66" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:15">

        <expr_stmt pos:start="23:9" pos:end="23:57"><expr pos:start="23:9" pos:end="23:56"><call pos:start="23:9" pos:end="23:56"><name pos:start="23:9" pos:end="23:20">error_report</name><argument_list pos:start="23:21" pos:end="23:56">(<argument pos:start="23:22" pos:end="23:55"><expr pos:start="23:22" pos:end="23:55"><literal type="string" pos:start="23:22" pos:end="23:55">"vfio: Error getting ROM info: %m"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="33:66"><expr pos:start="31:5" pos:end="33:65"><call pos:start="31:5" pos:end="33:65"><name pos:start="31:5" pos:end="31:11">DPRINTF</name><argument_list pos:start="31:12" pos:end="33:65">(<argument pos:start="31:13" pos:end="31:45"><expr pos:start="31:13" pos:end="31:45"><literal type="string" pos:start="31:13" pos:end="31:45">"Device %04x:%02x:%02x.%x ROM:\n"</literal></expr></argument>, <argument pos:start="31:48" pos:end="31:64"><expr pos:start="31:48" pos:end="31:64"><name pos:start="31:48" pos:end="31:64"><name pos:start="31:48" pos:end="31:51">vdev</name><operator pos:start="31:52" pos:end="31:53">-&gt;</operator><name pos:start="31:54" pos:end="31:57">host</name><operator pos:start="31:58" pos:end="31:58">.</operator><name pos:start="31:59" pos:end="31:64">domain</name></name></expr></argument>,

            <argument pos:start="33:13" pos:end="33:26"><expr pos:start="33:13" pos:end="33:26"><name pos:start="33:13" pos:end="33:26"><name pos:start="33:13" pos:end="33:16">vdev</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:22">host</name><operator pos:start="33:23" pos:end="33:23">.</operator><name pos:start="33:24" pos:end="33:26">bus</name></name></expr></argument>, <argument pos:start="33:29" pos:end="33:43"><expr pos:start="33:29" pos:end="33:43"><name pos:start="33:29" pos:end="33:43"><name pos:start="33:29" pos:end="33:32">vdev</name><operator pos:start="33:33" pos:end="33:34">-&gt;</operator><name pos:start="33:35" pos:end="33:38">host</name><operator pos:start="33:39" pos:end="33:39">.</operator><name pos:start="33:40" pos:end="33:43">slot</name></name></expr></argument>, <argument pos:start="33:46" pos:end="33:64"><expr pos:start="33:46" pos:end="33:64"><name pos:start="33:46" pos:end="33:64"><name pos:start="33:46" pos:end="33:49">vdev</name><operator pos:start="33:50" pos:end="33:51">-&gt;</operator><name pos:start="33:52" pos:end="33:55">host</name><operator pos:start="33:56" pos:end="33:56">.</operator><name pos:start="33:57" pos:end="33:64">function</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="39:43"><expr pos:start="35:5" pos:end="39:42"><call pos:start="35:5" pos:end="39:42"><name pos:start="35:5" pos:end="35:11">DPRINTF</name><argument_list pos:start="35:12" pos:end="39:42">(<argument pos:start="35:13" pos:end="35:58"><expr pos:start="35:13" pos:end="35:58"><literal type="string" pos:start="35:13" pos:end="35:58">"  size: 0x%lx, offset: 0x%lx, flags: 0x%lx\n"</literal></expr></argument>,

            <argument pos:start="37:13" pos:end="37:40"><expr pos:start="37:13" pos:end="37:40"><operator pos:start="37:13" pos:end="37:13">(</operator><name pos:start="37:14" pos:end="37:21">unsigned</name> <name pos:start="37:23" pos:end="37:26">long</name><operator pos:start="37:27" pos:end="37:27">)</operator><name pos:start="37:28" pos:end="37:40"><name pos:start="37:28" pos:end="37:35">reg_info</name><operator pos:start="37:36" pos:end="37:36">.</operator><name pos:start="37:37" pos:end="37:40">size</name></name></expr></argument>, <argument pos:start="37:43" pos:end="37:72"><expr pos:start="37:43" pos:end="37:72"><operator pos:start="37:43" pos:end="37:43">(</operator><name pos:start="37:44" pos:end="37:51">unsigned</name> <name pos:start="37:53" pos:end="37:56">long</name><operator pos:start="37:57" pos:end="37:57">)</operator><name pos:start="37:58" pos:end="37:72"><name pos:start="37:58" pos:end="37:65">reg_info</name><operator pos:start="37:66" pos:end="37:66">.</operator><name pos:start="37:67" pos:end="37:72">offset</name></name></expr></argument>,

            <argument pos:start="39:13" pos:end="39:41"><expr pos:start="39:13" pos:end="39:41"><operator pos:start="39:13" pos:end="39:13">(</operator><name pos:start="39:14" pos:end="39:21">unsigned</name> <name pos:start="39:23" pos:end="39:26">long</name><operator pos:start="39:27" pos:end="39:27">)</operator><name pos:start="39:28" pos:end="39:41"><name pos:start="39:28" pos:end="39:35">reg_info</name><operator pos:start="39:36" pos:end="39:36">.</operator><name pos:start="39:37" pos:end="39:41">flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:42"><expr pos:start="43:5" pos:end="43:41"><name pos:start="43:5" pos:end="43:18"><name pos:start="43:5" pos:end="43:8">vdev</name><operator pos:start="43:9" pos:end="43:10">-&gt;</operator><name pos:start="43:11" pos:end="43:18">rom_size</name></name> <operator pos:start="43:20" pos:end="43:20">=</operator> <name pos:start="43:22" pos:end="43:25">size</name> <operator pos:start="43:27" pos:end="43:27">=</operator> <name pos:start="43:29" pos:end="43:41"><name pos:start="43:29" pos:end="43:36">reg_info</name><operator pos:start="43:37" pos:end="43:37">.</operator><name pos:start="43:38" pos:end="43:41">size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:39"><expr pos:start="45:5" pos:end="45:38"><name pos:start="45:5" pos:end="45:20"><name pos:start="45:5" pos:end="45:8">vdev</name><operator pos:start="45:9" pos:end="45:10">-&gt;</operator><name pos:start="45:11" pos:end="45:20">rom_offset</name></name> <operator pos:start="45:22" pos:end="45:22">=</operator> <name pos:start="45:24" pos:end="45:38"><name pos:start="45:24" pos:end="45:31">reg_info</name><operator pos:start="45:32" pos:end="45:32">.</operator><name pos:start="45:33" pos:end="45:38">offset</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="49:5" pos:end="68:5"><if pos:start="49:5" pos:end="68:5">if <condition pos:start="49:8" pos:end="49:24">(<expr pos:start="49:9" pos:end="49:23"><operator pos:start="49:9" pos:end="49:9">!</operator><name pos:start="49:10" pos:end="49:23"><name pos:start="49:10" pos:end="49:13">vdev</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:23">rom_size</name></name></expr>)</condition> <block pos:start="49:26" pos:end="68:5">{<block_content pos:start="52:9" pos:end="66:15">


        <expr_stmt pos:start="52:9" pos:end="58:41"><expr pos:start="52:9" pos:end="58:40"><call pos:start="52:9" pos:end="58:40"><name pos:start="52:9" pos:end="52:20">error_report</name><argument_list pos:start="52:21" pos:end="58:40">(<argument pos:start="52:22" pos:end="54:41"><expr pos:start="52:22" pos:end="54:41"><literal type="string" pos:start="52:22" pos:end="52:59">"vfio-pci: Cannot read device rom at "</literal>

                    <literal type="string" pos:start="54:21" pos:end="54:41">"%04x:%02x:%02x.%x\n"</literal></expr></argument>,

                    <argument pos:start="56:21" pos:end="56:37"><expr pos:start="56:21" pos:end="56:37"><name pos:start="56:21" pos:end="56:37"><name pos:start="56:21" pos:end="56:24">vdev</name><operator pos:start="56:25" pos:end="56:26">-&gt;</operator><name pos:start="56:27" pos:end="56:30">host</name><operator pos:start="56:31" pos:end="56:31">.</operator><name pos:start="56:32" pos:end="56:37">domain</name></name></expr></argument>, <argument pos:start="56:40" pos:end="56:53"><expr pos:start="56:40" pos:end="56:53"><name pos:start="56:40" pos:end="56:53"><name pos:start="56:40" pos:end="56:43">vdev</name><operator pos:start="56:44" pos:end="56:45">-&gt;</operator><name pos:start="56:46" pos:end="56:49">host</name><operator pos:start="56:50" pos:end="56:50">.</operator><name pos:start="56:51" pos:end="56:53">bus</name></name></expr></argument>, <argument pos:start="56:56" pos:end="56:70"><expr pos:start="56:56" pos:end="56:70"><name pos:start="56:56" pos:end="56:70"><name pos:start="56:56" pos:end="56:59">vdev</name><operator pos:start="56:60" pos:end="56:61">-&gt;</operator><name pos:start="56:62" pos:end="56:65">host</name><operator pos:start="56:66" pos:end="56:66">.</operator><name pos:start="56:67" pos:end="56:70">slot</name></name></expr></argument>,

                    <argument pos:start="58:21" pos:end="58:39"><expr pos:start="58:21" pos:end="58:39"><name pos:start="58:21" pos:end="58:39"><name pos:start="58:21" pos:end="58:24">vdev</name><operator pos:start="58:25" pos:end="58:26">-&gt;</operator><name pos:start="58:27" pos:end="58:30">host</name><operator pos:start="58:31" pos:end="58:31">.</operator><name pos:start="58:32" pos:end="58:39">function</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="60:9" pos:end="64:57"><expr pos:start="60:9" pos:end="64:56"><call pos:start="60:9" pos:end="64:56"><name pos:start="60:9" pos:end="60:20">error_printf</name><argument_list pos:start="60:21" pos:end="64:56">(<argument pos:start="60:22" pos:end="64:55"><expr pos:start="60:22" pos:end="64:55"><literal type="string" pos:start="60:22" pos:end="60:71">"Device option ROM contents are probably invalid "</literal>

                    <literal type="string" pos:start="62:21" pos:end="62:75">"(check dmesg).\nSkip option ROM probe with rombar=0, "</literal>

                    <literal type="string" pos:start="64:21" pos:end="64:55">"or load from file with romfile=\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="66:9" pos:end="66:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="72:5" pos:end="72:31"><expr pos:start="72:5" pos:end="72:30"><name pos:start="72:5" pos:end="72:13"><name pos:start="72:5" pos:end="72:8">vdev</name><operator pos:start="72:9" pos:end="72:10">-&gt;</operator><name pos:start="72:11" pos:end="72:13">rom</name></name> <operator pos:start="72:15" pos:end="72:15">=</operator> <call pos:start="72:17" pos:end="72:30"><name pos:start="72:17" pos:end="72:24">g_malloc</name><argument_list pos:start="72:25" pos:end="72:30">(<argument pos:start="72:26" pos:end="72:29"><expr pos:start="72:26" pos:end="72:29"><name pos:start="72:26" pos:end="72:29">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="74:5" pos:end="74:34"><expr pos:start="74:5" pos:end="74:33"><call pos:start="74:5" pos:end="74:33"><name pos:start="74:5" pos:end="74:10">memset</name><argument_list pos:start="74:11" pos:end="74:33">(<argument pos:start="74:12" pos:end="74:20"><expr pos:start="74:12" pos:end="74:20"><name pos:start="74:12" pos:end="74:20"><name pos:start="74:12" pos:end="74:15">vdev</name><operator pos:start="74:16" pos:end="74:17">-&gt;</operator><name pos:start="74:18" pos:end="74:20">rom</name></name></expr></argument>, <argument pos:start="74:23" pos:end="74:26"><expr pos:start="74:23" pos:end="74:26"><literal type="number" pos:start="74:23" pos:end="74:26">0xff</literal></expr></argument>, <argument pos:start="74:29" pos:end="74:32"><expr pos:start="74:29" pos:end="74:32"><name pos:start="74:29" pos:end="74:32">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="78:5" pos:end="106:5">while <condition pos:start="78:11" pos:end="78:16">(<expr pos:start="78:12" pos:end="78:15"><name pos:start="78:12" pos:end="78:15">size</name></expr>)</condition> <block pos:start="78:18" pos:end="106:5">{<block_content pos:start="80:9" pos:end="104:9">

        <expr_stmt pos:start="80:9" pos:end="80:79"><expr pos:start="80:9" pos:end="80:78"><name pos:start="80:9" pos:end="80:13">bytes</name> <operator pos:start="80:15" pos:end="80:15">=</operator> <call pos:start="80:17" pos:end="80:78"><name pos:start="80:17" pos:end="80:21">pread</name><argument_list pos:start="80:22" pos:end="80:78">(<argument pos:start="80:23" pos:end="80:30"><expr pos:start="80:23" pos:end="80:30"><name pos:start="80:23" pos:end="80:30"><name pos:start="80:23" pos:end="80:26">vdev</name><operator pos:start="80:27" pos:end="80:28">-&gt;</operator><name pos:start="80:29" pos:end="80:30">fd</name></name></expr></argument>, <argument pos:start="80:33" pos:end="80:47"><expr pos:start="80:33" pos:end="80:47"><name pos:start="80:33" pos:end="80:41"><name pos:start="80:33" pos:end="80:36">vdev</name><operator pos:start="80:37" pos:end="80:38">-&gt;</operator><name pos:start="80:39" pos:end="80:41">rom</name></name> <operator pos:start="80:43" pos:end="80:43">+</operator> <name pos:start="80:45" pos:end="80:47">off</name></expr></argument>, <argument pos:start="80:50" pos:end="80:53"><expr pos:start="80:50" pos:end="80:53"><name pos:start="80:50" pos:end="80:53">size</name></expr></argument>, <argument pos:start="80:56" pos:end="80:77"><expr pos:start="80:56" pos:end="80:77"><name pos:start="80:56" pos:end="80:71"><name pos:start="80:56" pos:end="80:59">vdev</name><operator pos:start="80:60" pos:end="80:61">-&gt;</operator><name pos:start="80:62" pos:end="80:71">rom_offset</name></name> <operator pos:start="80:73" pos:end="80:73">+</operator> <name pos:start="80:75" pos:end="80:77">off</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="82:9" pos:end="104:9"><if pos:start="82:9" pos:end="86:9">if <condition pos:start="82:12" pos:end="82:23">(<expr pos:start="82:13" pos:end="82:22"><name pos:start="82:13" pos:end="82:17">bytes</name> <operator pos:start="82:19" pos:end="82:20">==</operator> <literal type="number" pos:start="82:22" pos:end="82:22">0</literal></expr>)</condition> <block pos:start="82:25" pos:end="86:9">{<block_content pos:start="84:13" pos:end="84:18">

            <break pos:start="84:13" pos:end="84:18">break;</break>

        </block_content>}</block></if> <if type="elseif" pos:start="86:11" pos:end="92:9">else if <condition pos:start="86:19" pos:end="86:29">(<expr pos:start="86:20" pos:end="86:28"><name pos:start="86:20" pos:end="86:24">bytes</name> <operator pos:start="86:26" pos:end="86:26">&gt;</operator> <literal type="number" pos:start="86:28" pos:end="86:28">0</literal></expr>)</condition> <block pos:start="86:31" pos:end="92:9">{<block_content pos:start="88:13" pos:end="90:26">

            <expr_stmt pos:start="88:13" pos:end="88:25"><expr pos:start="88:13" pos:end="88:24"><name pos:start="88:13" pos:end="88:15">off</name> <operator pos:start="88:17" pos:end="88:18">+=</operator> <name pos:start="88:20" pos:end="88:24">bytes</name></expr>;</expr_stmt>

            <expr_stmt pos:start="90:13" pos:end="90:26"><expr pos:start="90:13" pos:end="90:25"><name pos:start="90:13" pos:end="90:16">size</name> <operator pos:start="90:18" pos:end="90:19">-=</operator> <name pos:start="90:21" pos:end="90:25">bytes</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="92:11" pos:end="104:9">else <block pos:start="92:16" pos:end="104:9">{<block_content pos:start="94:13" pos:end="102:18">

            <if_stmt pos:start="94:13" pos:end="98:13"><if pos:start="94:13" pos:end="98:13">if <condition pos:start="94:16" pos:end="94:50">(<expr pos:start="94:17" pos:end="94:49"><name pos:start="94:17" pos:end="94:21">errno</name> <operator pos:start="94:23" pos:end="94:24">==</operator> <name pos:start="94:26" pos:end="94:30">EINTR</name> <operator pos:start="94:32" pos:end="94:33">||</operator> <name pos:start="94:35" pos:end="94:39">errno</name> <operator pos:start="94:41" pos:end="94:42">==</operator> <name pos:start="94:44" pos:end="94:49">EAGAIN</name></expr>)</condition> <block pos:start="94:52" pos:end="98:13">{<block_content pos:start="96:17" pos:end="96:25">

                <continue pos:start="96:17" pos:end="96:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="100:13" pos:end="100:63"><expr pos:start="100:13" pos:end="100:62"><call pos:start="100:13" pos:end="100:62"><name pos:start="100:13" pos:end="100:24">error_report</name><argument_list pos:start="100:25" pos:end="100:62">(<argument pos:start="100:26" pos:end="100:61"><expr pos:start="100:26" pos:end="100:61"><literal type="string" pos:start="100:26" pos:end="100:61">"vfio: Error reading device ROM: %m"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="102:13" pos:end="102:18">break;</break>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>

</block_content>}</block></function></unit>
