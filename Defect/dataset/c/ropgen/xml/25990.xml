<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25990.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:18">cpu_ppc_reset</name> <parameter_list pos:start="1:20" pos:end="1:33">(<parameter pos:start="1:21" pos:end="1:32"><decl pos:start="1:21" pos:end="1:32"><type pos:start="1:21" pos:end="1:26"><name pos:start="1:21" pos:end="1:24">void</name> <modifier pos:start="1:26" pos:end="1:26">*</modifier></type><name pos:start="1:27" pos:end="1:32">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:22">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">CPUPPCState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">env</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:16">target_ulong</name></type> <name pos:start="7:18" pos:end="7:20">msr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:17"><expr pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:7">env</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <name pos:start="11:11" pos:end="11:16">opaque</name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:26"><expr pos:start="13:5" pos:end="13:25"><name pos:start="13:5" pos:end="13:7">msr</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <operator pos:start="13:11" pos:end="13:11">(</operator><name pos:start="13:12" pos:end="13:23">target_ulong</name><operator pos:start="13:24" pos:end="13:24">)</operator><literal type="number" pos:start="13:25" pos:end="13:25">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:10">(<expr pos:start="15:9" pos:end="15:9"><literal type="number" pos:start="15:9" pos:end="15:9">0</literal></expr>)</condition> <block pos:start="15:12" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:37">

        <comment type="block" pos:start="17:9" pos:end="17:74">/* XXX: find a suitable condition to enable the hypervisor mode */</comment>

        <expr_stmt pos:start="19:9" pos:end="19:37"><expr pos:start="19:9" pos:end="19:36"><name pos:start="19:9" pos:end="19:11">msr</name> <operator pos:start="19:13" pos:end="19:14">|=</operator> <operator pos:start="19:16" pos:end="19:16">(</operator><name pos:start="19:17" pos:end="19:28">target_ulong</name><operator pos:start="19:29" pos:end="19:29">)</operator><name pos:start="19:30" pos:end="19:36">MSR_HVB</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:37"><expr pos:start="23:5" pos:end="23:36"><name pos:start="23:5" pos:end="23:7">msr</name> <operator pos:start="23:9" pos:end="23:10">|=</operator> <operator pos:start="23:12" pos:end="23:12">(</operator><name pos:start="23:13" pos:end="23:24">target_ulong</name><operator pos:start="23:25" pos:end="23:25">)</operator><literal type="number" pos:start="23:26" pos:end="23:26">0</literal> <operator pos:start="23:28" pos:end="23:29">&lt;&lt;</operator> <name pos:start="23:31" pos:end="23:36">MSR_AP</name></expr>;</expr_stmt> <comment type="block" pos:start="23:39" pos:end="23:57">/* TO BE CHECKED */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:37"><expr pos:start="25:5" pos:end="25:36"><name pos:start="25:5" pos:end="25:7">msr</name> <operator pos:start="25:9" pos:end="25:10">|=</operator> <operator pos:start="25:12" pos:end="25:12">(</operator><name pos:start="25:13" pos:end="25:24">target_ulong</name><operator pos:start="25:25" pos:end="25:25">)</operator><literal type="number" pos:start="25:26" pos:end="25:26">0</literal> <operator pos:start="25:28" pos:end="25:29">&lt;&lt;</operator> <name pos:start="25:31" pos:end="25:36">MSR_SA</name></expr>;</expr_stmt> <comment type="block" pos:start="25:39" pos:end="25:57">/* TO BE CHECKED */</comment>

    <expr_stmt pos:start="27:5" pos:end="30:0"><expr pos:start="27:5" pos:end="27:36"><name pos:start="27:5" pos:end="27:7">msr</name> <operator pos:start="27:9" pos:end="27:10">|=</operator> <operator pos:start="27:12" pos:end="27:12">(</operator><name pos:start="27:13" pos:end="27:24">target_ulong</name><operator pos:start="27:25" pos:end="27:25">)</operator><literal type="number" pos:start="27:26" pos:end="27:26">1</literal> <operator pos:start="27:28" pos:end="27:29">&lt;&lt;</operator> <name pos:start="27:31" pos:end="27:36">MSR_EP</name></expr>;</expr_stmt>

<cpp:if pos:start="29:1" pos:end="29:33">#<cpp:directive pos:start="29:2" pos:end="29:3">if</cpp:directive> <expr pos:start="29:5" pos:end="29:33"><call pos:start="29:5" pos:end="29:28"><name pos:start="29:5" pos:end="29:11">defined</name> <argument_list pos:start="29:13" pos:end="29:28">(<argument pos:start="29:14" pos:end="29:27"><expr pos:start="29:14" pos:end="29:27"><name pos:start="29:14" pos:end="29:27">DO_SINGLE_STEP</name></expr></argument>)</argument_list></call> <operator pos:start="29:30" pos:end="29:31">&amp;&amp;</operator> <literal type="number" pos:start="29:33" pos:end="29:33">0</literal></expr></cpp:if>

    <comment type="block" pos:start="31:5" pos:end="31:32">/* Single step trace mode */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:37"><expr pos:start="33:5" pos:end="33:36"><name pos:start="33:5" pos:end="33:7">msr</name> <operator pos:start="33:9" pos:end="33:10">|=</operator> <operator pos:start="33:12" pos:end="33:12">(</operator><name pos:start="33:13" pos:end="33:24">target_ulong</name><operator pos:start="33:25" pos:end="33:25">)</operator><literal type="number" pos:start="33:26" pos:end="33:26">1</literal> <operator pos:start="33:28" pos:end="33:29">&lt;&lt;</operator> <name pos:start="33:31" pos:end="33:36">MSR_SE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="40:0"><expr pos:start="35:5" pos:end="35:36"><name pos:start="35:5" pos:end="35:7">msr</name> <operator pos:start="35:9" pos:end="35:10">|=</operator> <operator pos:start="35:12" pos:end="35:12">(</operator><name pos:start="35:13" pos:end="35:24">target_ulong</name><operator pos:start="35:25" pos:end="35:25">)</operator><literal type="number" pos:start="35:26" pos:end="35:26">1</literal> <operator pos:start="35:28" pos:end="35:29">&lt;&lt;</operator> <name pos:start="35:31" pos:end="35:36">MSR_BE</name></expr>;</expr_stmt>

<cpp:endif pos:start="37:1" pos:end="37:6">#<cpp:directive pos:start="37:2" pos:end="37:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="39:1" pos:end="39:29">#<cpp:directive pos:start="39:2" pos:end="39:3">if</cpp:directive> <expr pos:start="39:5" pos:end="39:29"><call pos:start="39:5" pos:end="39:29"><name pos:start="39:5" pos:end="39:11">defined</name><argument_list pos:start="39:12" pos:end="39:29">(<argument pos:start="39:13" pos:end="39:28"><expr pos:start="39:13" pos:end="39:28"><name pos:start="39:13" pos:end="39:28">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="41:5" pos:end="41:37"><expr pos:start="41:5" pos:end="41:36"><name pos:start="41:5" pos:end="41:7">msr</name> <operator pos:start="41:9" pos:end="41:10">|=</operator> <operator pos:start="41:12" pos:end="41:12">(</operator><name pos:start="41:13" pos:end="41:24">target_ulong</name><operator pos:start="41:25" pos:end="41:25">)</operator><literal type="number" pos:start="41:26" pos:end="41:26">1</literal> <operator pos:start="41:28" pos:end="41:29">&lt;&lt;</operator> <name pos:start="41:31" pos:end="41:36">MSR_FP</name></expr>;</expr_stmt> <comment type="block" pos:start="41:39" pos:end="41:70">/* Allow floating point usage */</comment>

    <expr_stmt pos:start="43:5" pos:end="46:0"><expr pos:start="43:5" pos:end="43:36"><name pos:start="43:5" pos:end="43:7">msr</name> <operator pos:start="43:9" pos:end="43:10">|=</operator> <operator pos:start="43:12" pos:end="43:12">(</operator><name pos:start="43:13" pos:end="43:24">target_ulong</name><operator pos:start="43:25" pos:end="43:25">)</operator><literal type="number" pos:start="43:26" pos:end="43:26">1</literal> <operator pos:start="43:28" pos:end="43:29">&lt;&lt;</operator> <name pos:start="43:31" pos:end="43:36">MSR_PR</name></expr>;</expr_stmt>

<cpp:else pos:start="45:1" pos:end="45:5">#<cpp:directive pos:start="45:2" pos:end="45:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="47:5" pos:end="47:53"><expr pos:start="47:5" pos:end="47:52"><name pos:start="47:5" pos:end="47:12"><name pos:start="47:5" pos:end="47:7">env</name><operator pos:start="47:8" pos:end="47:9">-&gt;</operator><name pos:start="47:10" pos:end="47:12">nip</name></name> <operator pos:start="47:14" pos:end="47:14">=</operator> <name pos:start="47:16" pos:end="47:33"><name pos:start="47:16" pos:end="47:18">env</name><operator pos:start="47:19" pos:end="47:20">-&gt;</operator><name pos:start="47:21" pos:end="47:33">hreset_vector</name></name> <operator pos:start="47:35" pos:end="47:35">|</operator> <name pos:start="47:37" pos:end="47:52"><name pos:start="47:37" pos:end="47:39">env</name><operator pos:start="47:40" pos:end="47:41">-&gt;</operator><name pos:start="47:42" pos:end="47:52">excp_prefix</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="54:0"><if pos:start="49:5" pos:end="54:0">if <condition pos:start="49:8" pos:end="49:43">(<expr pos:start="49:9" pos:end="49:42"><name pos:start="49:9" pos:end="49:22"><name pos:start="49:9" pos:end="49:11">env</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:22">mmu_model</name></name> <operator pos:start="49:24" pos:end="49:25">!=</operator> <name pos:start="49:27" pos:end="49:42">POWERPC_MMU_REAL</name></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="54:0"><block_content pos:start="51:9" pos:end="54:0">

        <expr_stmt pos:start="51:9" pos:end="54:0"><expr pos:start="51:9" pos:end="51:35"><call pos:start="51:9" pos:end="51:35"><name pos:start="51:9" pos:end="51:30">ppc_tlb_invalidate_all</name><argument_list pos:start="51:31" pos:end="51:35">(<argument pos:start="51:32" pos:end="51:34"><expr pos:start="51:32" pos:end="51:34"><name pos:start="51:32" pos:end="51:34">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="53:1" pos:end="53:6">#<cpp:directive pos:start="53:2" pos:end="53:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="55:5" pos:end="55:19"><expr pos:start="55:5" pos:end="55:18"><name pos:start="55:5" pos:end="55:12"><name pos:start="55:5" pos:end="55:7">env</name><operator pos:start="55:8" pos:end="55:9">-&gt;</operator><name pos:start="55:10" pos:end="55:12">msr</name></name> <operator pos:start="55:14" pos:end="55:14">=</operator> <name pos:start="55:16" pos:end="55:18">msr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:29"><expr pos:start="57:5" pos:end="57:28"><call pos:start="57:5" pos:end="57:28"><name pos:start="57:5" pos:end="57:23">hreg_compute_hflags</name><argument_list pos:start="57:24" pos:end="57:28">(<argument pos:start="57:25" pos:end="57:27"><expr pos:start="57:25" pos:end="57:27"><name pos:start="57:25" pos:end="57:27">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:39"><expr pos:start="59:5" pos:end="59:38"><name pos:start="59:5" pos:end="59:16"><name pos:start="59:5" pos:end="59:7">env</name><operator pos:start="59:8" pos:end="59:9">-&gt;</operator><name pos:start="59:10" pos:end="59:16">reserve</name></name> <operator pos:start="59:18" pos:end="59:18">=</operator> <operator pos:start="59:20" pos:end="59:20">(</operator><name pos:start="59:21" pos:end="59:32">target_ulong</name><operator pos:start="59:33" pos:end="59:33">)</operator><operator pos:start="59:34" pos:end="59:34">-</operator><literal type="number" pos:start="59:35" pos:end="59:38">1ULL</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="61:5" pos:end="61:54">/* Be sure no exception or interrupt is pending */</comment>

    <expr_stmt pos:start="63:5" pos:end="63:32"><expr pos:start="63:5" pos:end="63:31"><name pos:start="63:5" pos:end="63:27"><name pos:start="63:5" pos:end="63:7">env</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:27">pending_interrupts</name></name> <operator pos:start="63:29" pos:end="63:29">=</operator> <literal type="number" pos:start="63:31" pos:end="63:31">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:45"><expr pos:start="65:5" pos:end="65:44"><name pos:start="65:5" pos:end="65:24"><name pos:start="65:5" pos:end="65:7">env</name><operator pos:start="65:8" pos:end="65:9">-&gt;</operator><name pos:start="65:10" pos:end="65:24">exception_index</name></name> <operator pos:start="65:26" pos:end="65:26">=</operator> <name pos:start="65:28" pos:end="65:44">POWERPC_EXCP_NONE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:24"><expr pos:start="67:5" pos:end="67:23"><name pos:start="67:5" pos:end="67:19"><name pos:start="67:5" pos:end="67:7">env</name><operator pos:start="67:8" pos:end="67:9">-&gt;</operator><name pos:start="67:10" pos:end="67:19">error_code</name></name> <operator pos:start="67:21" pos:end="67:21">=</operator> <literal type="number" pos:start="67:23" pos:end="67:23">0</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="69:5" pos:end="69:24">/* Flush all TLBs */</comment>

    <expr_stmt pos:start="71:5" pos:end="71:22"><expr pos:start="71:5" pos:end="71:21"><call pos:start="71:5" pos:end="71:21"><name pos:start="71:5" pos:end="71:13">tlb_flush</name><argument_list pos:start="71:14" pos:end="71:21">(<argument pos:start="71:15" pos:end="71:17"><expr pos:start="71:15" pos:end="71:17"><name pos:start="71:15" pos:end="71:17">env</name></expr></argument>, <argument pos:start="71:20" pos:end="71:20"><expr pos:start="71:20" pos:end="71:20"><literal type="number" pos:start="71:20" pos:end="71:20">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
