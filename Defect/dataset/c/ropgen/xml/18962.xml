<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18962.c" pos:tabs="8"><function pos:start="1:1" pos:end="145:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:28">ff_interleave_add_packet</name><parameter_list pos:start="1:29" pos:end="3:87">(<parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:47"><name pos:start="1:30" pos:end="1:44">AVFormatContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:62"><decl pos:start="1:50" pos:end="1:62"><type pos:start="1:50" pos:end="1:62"><name pos:start="1:50" pos:end="1:57">AVPacket</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:62">pkt</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:86"><function_decl pos:start="3:30" pos:end="3:86"><type pos:start="3:30" pos:end="3:32"><name pos:start="3:30" pos:end="3:32">int</name></type> (<modifier pos:start="3:35" pos:end="3:35">*</modifier><name pos:start="3:36" pos:end="3:42">compare</name>)<parameter_list pos:start="3:44" pos:end="3:86">(<parameter pos:start="3:45" pos:end="3:61"><decl pos:start="3:45" pos:end="3:61"><type pos:start="3:45" pos:end="3:61"><name pos:start="3:45" pos:end="3:59">AVFormatContext</name> <modifier pos:start="3:61" pos:end="3:61">*</modifier></type></decl></parameter>, <parameter pos:start="3:64" pos:end="3:73"><decl pos:start="3:64" pos:end="3:73"><type pos:start="3:64" pos:end="3:73"><name pos:start="3:64" pos:end="3:71">AVPacket</name> <modifier pos:start="3:73" pos:end="3:73">*</modifier></type></decl></parameter>, <parameter pos:start="3:76" pos:end="3:85"><decl pos:start="3:76" pos:end="3:85"><type pos:start="3:76" pos:end="3:85"><name pos:start="3:76" pos:end="3:83">AVPacket</name> <modifier pos:start="3:85" pos:end="3:85">*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="145:1">{<block_content pos:start="7:5" pos:end="143:13">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:16">AVPacketList</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier><modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:29">next_point</name></decl>, <decl pos:start="9:32" pos:end="9:41"><type ref="prev" pos:start="9:5" pos:end="9:19"><modifier pos:start="9:32" pos:end="9:32">*</modifier></type><name pos:start="9:33" pos:end="9:41">this_pktl</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:51"><decl pos:start="11:5" pos:end="11:50"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">AVStream</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:16">st</name>   <init pos:start="11:20" pos:end="11:50">= <expr pos:start="11:22" pos:end="11:50"><name pos:start="11:22" pos:end="11:50"><name pos:start="11:22" pos:end="11:22">s</name><operator pos:start="11:23" pos:end="11:24">-&gt;</operator><name pos:start="11:25" pos:end="11:31">streams</name><index pos:start="11:32" pos:end="11:50">[<expr pos:start="11:33" pos:end="11:49"><name pos:start="11:33" pos:end="11:49"><name pos:start="11:33" pos:end="11:35">pkt</name><operator pos:start="11:36" pos:end="11:37">-&gt;</operator><name pos:start="11:38" pos:end="11:49">stream_index</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:64"><decl pos:start="13:5" pos:end="13:63"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:15">chunked</name>    <init pos:start="13:20" pos:end="13:63">= <expr pos:start="13:22" pos:end="13:63"><name pos:start="13:22" pos:end="13:38"><name pos:start="13:22" pos:end="13:22">s</name><operator pos:start="13:23" pos:end="13:24">-&gt;</operator><name pos:start="13:25" pos:end="13:38">max_chunk_size</name></name> <operator pos:start="13:40" pos:end="13:41">||</operator> <name pos:start="13:43" pos:end="13:63"><name pos:start="13:43" pos:end="13:43">s</name><operator pos:start="13:44" pos:end="13:45">-&gt;</operator><name pos:start="13:46" pos:end="13:63">max_chunk_duration</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:54"><expr pos:start="17:5" pos:end="17:53"><name pos:start="17:5" pos:end="17:13">this_pktl</name>      <operator pos:start="17:20" pos:end="17:20">=</operator> <call pos:start="17:22" pos:end="17:53"><name pos:start="17:22" pos:end="17:31">av_mallocz</name><argument_list pos:start="17:32" pos:end="17:53">(<argument pos:start="17:33" pos:end="17:52"><expr pos:start="17:33" pos:end="17:52"><sizeof pos:start="17:33" pos:end="17:52">sizeof<argument_list pos:start="17:39" pos:end="17:52">(<argument pos:start="17:40" pos:end="17:51"><expr pos:start="17:40" pos:end="17:51"><name pos:start="17:40" pos:end="17:51">AVPacketList</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="21:31"><if pos:start="19:5" pos:end="21:31">if <condition pos:start="19:8" pos:end="19:19">(<expr pos:start="19:9" pos:end="19:18"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:18">this_pktl</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:31"><block_content pos:start="21:9" pos:end="21:31">

        <return pos:start="21:9" pos:end="21:31">return <expr pos:start="21:16" pos:end="21:30"><call pos:start="21:16" pos:end="21:30"><name pos:start="21:16" pos:end="21:22">AVERROR</name><argument_list pos:start="21:23" pos:end="21:30">(<argument pos:start="21:24" pos:end="21:29"><expr pos:start="21:24" pos:end="21:29"><name pos:start="21:24" pos:end="21:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:49">(<expr pos:start="23:9" pos:end="23:48"><operator pos:start="23:9" pos:end="23:9">(</operator><name pos:start="23:10" pos:end="23:19"><name pos:start="23:10" pos:end="23:12">pkt</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:19">flags</name></name> <operator pos:start="23:21" pos:end="23:21">&amp;</operator> <name pos:start="23:23" pos:end="23:47">AV_PKT_FLAG_UNCODED_FRAME</name><operator pos:start="23:48" pos:end="23:48">)</operator></expr>)</condition> <block pos:start="23:51" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:48">

        <expr_stmt pos:start="25:9" pos:end="25:59"><expr pos:start="25:9" pos:end="25:58"><call pos:start="25:9" pos:end="25:58"><name pos:start="25:9" pos:end="25:18">av_assert0</name><argument_list pos:start="25:19" pos:end="25:58">(<argument pos:start="25:20" pos:end="25:57"><expr pos:start="25:20" pos:end="25:57"><name pos:start="25:20" pos:end="25:28"><name pos:start="25:20" pos:end="25:22">pkt</name><operator pos:start="25:23" pos:end="25:24">-&gt;</operator><name pos:start="25:25" pos:end="25:28">size</name></name> <operator pos:start="25:30" pos:end="25:31">==</operator> <name pos:start="25:33" pos:end="25:57">UNCODED_FRAME_PACKET_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:48"><expr pos:start="27:9" pos:end="27:47"><call pos:start="27:9" pos:end="27:47"><name pos:start="27:9" pos:end="27:18">av_assert0</name><argument_list pos:start="27:19" pos:end="27:47">(<argument pos:start="27:20" pos:end="27:46"><expr pos:start="27:20" pos:end="27:46"><operator pos:start="27:20" pos:end="27:20">(</operator><operator pos:start="27:21" pos:end="27:21">(</operator><name pos:start="27:22" pos:end="27:28">AVFrame</name> <operator pos:start="27:30" pos:end="27:30">*</operator><operator pos:start="27:31" pos:end="27:31">)</operator><name pos:start="27:32" pos:end="27:40"><name pos:start="27:32" pos:end="27:34">pkt</name><operator pos:start="27:35" pos:end="27:36">-&gt;</operator><name pos:start="27:37" pos:end="27:40">data</name></name><operator pos:start="27:41" pos:end="27:41">)</operator><operator pos:start="27:42" pos:end="27:43">-&gt;</operator><name pos:start="27:44" pos:end="27:46">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:56">(<expr pos:start="33:9" pos:end="33:55"><operator pos:start="33:9" pos:end="33:9">(</operator><name pos:start="33:10" pos:end="33:12">ret</name> <operator pos:start="33:14" pos:end="33:14">=</operator> <call pos:start="33:16" pos:end="33:50"><name pos:start="33:16" pos:end="33:28">av_packet_ref</name><argument_list pos:start="33:29" pos:end="33:50">(<argument pos:start="33:30" pos:end="33:44"><expr pos:start="33:30" pos:end="33:44"><operator pos:start="33:30" pos:end="33:30">&amp;</operator><name pos:start="33:31" pos:end="33:44"><name pos:start="33:31" pos:end="33:39">this_pktl</name><operator pos:start="33:40" pos:end="33:41">-&gt;</operator><name pos:start="33:42" pos:end="33:44">pkt</name></name></expr></argument>, <argument pos:start="33:47" pos:end="33:49"><expr pos:start="33:47" pos:end="33:49"><name pos:start="33:47" pos:end="33:49">pkt</name></expr></argument>)</argument_list></call><operator pos:start="33:51" pos:end="33:51">)</operator> <operator pos:start="33:53" pos:end="33:53">&lt;</operator> <literal type="number" pos:start="33:55" pos:end="33:55">0</literal></expr>)</condition> <block pos:start="33:58" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:19">

        <expr_stmt pos:start="35:9" pos:end="35:27"><expr pos:start="35:9" pos:end="35:26"><call pos:start="35:9" pos:end="35:26"><name pos:start="35:9" pos:end="35:15">av_free</name><argument_list pos:start="35:16" pos:end="35:26">(<argument pos:start="35:17" pos:end="35:25"><expr pos:start="35:17" pos:end="35:25"><name pos:start="35:17" pos:end="35:25">this_pktl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:19">return <expr pos:start="37:16" pos:end="37:18"><name pos:start="37:16" pos:end="37:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="51:5"><if pos:start="43:5" pos:end="47:5">if <condition pos:start="43:8" pos:end="43:61">(<expr pos:start="43:9" pos:end="43:60"><name pos:start="43:9" pos:end="43:37"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:18">streams</name><index pos:start="43:19" pos:end="43:37">[<expr pos:start="43:20" pos:end="43:36"><name pos:start="43:20" pos:end="43:36"><name pos:start="43:20" pos:end="43:22">pkt</name><operator pos:start="43:23" pos:end="43:24">-&gt;</operator><name pos:start="43:25" pos:end="43:36">stream_index</name></name></expr>]</index></name><operator pos:start="43:38" pos:end="43:39">-&gt;</operator><name pos:start="43:40" pos:end="43:60">last_in_packet_buffer</name></expr>)</condition> <block pos:start="43:63" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:56">

        <expr_stmt pos:start="45:9" pos:end="45:56"><expr pos:start="45:9" pos:end="45:55"><name pos:start="45:9" pos:end="45:18">next_point</name> <operator pos:start="45:20" pos:end="45:20">=</operator> <operator pos:start="45:22" pos:end="45:22">&amp;</operator><operator pos:start="45:23" pos:end="45:23">(</operator><name pos:start="45:24" pos:end="45:54"><name pos:start="45:24" pos:end="45:25">st</name><operator pos:start="45:26" pos:end="45:27">-&gt;</operator><name pos:start="45:28" pos:end="45:48">last_in_packet_buffer</name><operator pos:start="45:49" pos:end="45:50">-&gt;</operator><name pos:start="45:51" pos:end="45:54">next</name></name><operator pos:start="45:55" pos:end="45:55">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="47:7" pos:end="51:5">else <block pos:start="47:12" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:49">

        <expr_stmt pos:start="49:9" pos:end="49:49"><expr pos:start="49:9" pos:end="49:48"><name pos:start="49:9" pos:end="49:18">next_point</name> <operator pos:start="49:20" pos:end="49:20">=</operator> <operator pos:start="49:22" pos:end="49:22">&amp;</operator><name pos:start="49:23" pos:end="49:48"><name pos:start="49:23" pos:end="49:23">s</name><operator pos:start="49:24" pos:end="49:25">-&gt;</operator><name pos:start="49:26" pos:end="49:33">internal</name><operator pos:start="49:34" pos:end="49:35">-&gt;</operator><name pos:start="49:36" pos:end="49:48">packet_buffer</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="55:5" pos:end="87:5"><if pos:start="55:5" pos:end="87:5">if <condition pos:start="55:8" pos:end="55:16">(<expr pos:start="55:9" pos:end="55:15"><name pos:start="55:9" pos:end="55:15">chunked</name></expr>)</condition> <block pos:start="55:18" pos:end="87:5">{<block_content pos:start="57:9" pos:end="85:9">

        <decl_stmt pos:start="57:9" pos:end="57:106"><decl pos:start="57:9" pos:end="57:105"><type pos:start="57:9" pos:end="57:16"><name pos:start="57:9" pos:end="57:16">uint64_t</name></type> <name pos:start="57:18" pos:end="57:20">max</name><init pos:start="57:21" pos:end="57:105">= <expr pos:start="57:23" pos:end="57:105"><call pos:start="57:23" pos:end="57:105"><name pos:start="57:23" pos:end="57:38">av_rescale_q_rnd</name><argument_list pos:start="57:39" pos:end="57:105">(<argument pos:start="57:40" pos:end="57:60"><expr pos:start="57:40" pos:end="57:60"><name pos:start="57:40" pos:end="57:60"><name pos:start="57:40" pos:end="57:40">s</name><operator pos:start="57:41" pos:end="57:42">-&gt;</operator><name pos:start="57:43" pos:end="57:60">max_chunk_duration</name></name></expr></argument>, <argument pos:start="57:63" pos:end="57:76"><expr pos:start="57:63" pos:end="57:76"><name pos:start="57:63" pos:end="57:76">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="57:79" pos:end="57:91"><expr pos:start="57:79" pos:end="57:91"><name pos:start="57:79" pos:end="57:91"><name pos:start="57:79" pos:end="57:80">st</name><operator pos:start="57:81" pos:end="57:82">-&gt;</operator><name pos:start="57:83" pos:end="57:91">time_base</name></name></expr></argument>, <argument pos:start="57:94" pos:end="57:104"><expr pos:start="57:94" pos:end="57:104"><name pos:start="57:94" pos:end="57:104">AV_ROUND_UP</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:52"><expr pos:start="59:9" pos:end="59:51"><name pos:start="59:9" pos:end="59:34"><name pos:start="59:9" pos:end="59:10">st</name><operator pos:start="59:11" pos:end="59:12">-&gt;</operator><name pos:start="59:13" pos:end="59:34">interleaver_chunk_size</name></name>     <operator pos:start="59:40" pos:end="59:41">+=</operator> <name pos:start="59:43" pos:end="59:51"><name pos:start="59:43" pos:end="59:45">pkt</name><operator pos:start="59:46" pos:end="59:47">-&gt;</operator><name pos:start="59:48" pos:end="59:51">size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:56"><expr pos:start="61:9" pos:end="61:55"><name pos:start="61:9" pos:end="61:38"><name pos:start="61:9" pos:end="61:10">st</name><operator pos:start="61:11" pos:end="61:12">-&gt;</operator><name pos:start="61:13" pos:end="61:38">interleaver_chunk_duration</name></name> <operator pos:start="61:40" pos:end="61:41">+=</operator> <name pos:start="61:43" pos:end="61:55"><name pos:start="61:43" pos:end="61:45">pkt</name><operator pos:start="61:46" pos:end="61:47">-&gt;</operator><name pos:start="61:48" pos:end="61:55">duration</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="85:9"><if pos:start="63:9" pos:end="85:9">if <condition pos:start="63:12" pos:end="65:71">(   <expr pos:start="63:16" pos:end="65:70"><operator pos:start="63:16" pos:end="63:16">(</operator><name pos:start="63:17" pos:end="63:33"><name pos:start="63:17" pos:end="63:17">s</name><operator pos:start="63:18" pos:end="63:19">-&gt;</operator><name pos:start="63:20" pos:end="63:33">max_chunk_size</name></name> <operator pos:start="63:35" pos:end="63:36">&amp;&amp;</operator> <name pos:start="63:38" pos:end="63:63"><name pos:start="63:38" pos:end="63:39">st</name><operator pos:start="63:40" pos:end="63:41">-&gt;</operator><name pos:start="63:42" pos:end="63:63">interleaver_chunk_size</name></name> <operator pos:start="63:65" pos:end="63:65">&gt;</operator> <name pos:start="63:67" pos:end="63:83"><name pos:start="63:67" pos:end="63:67">s</name><operator pos:start="63:68" pos:end="63:69">-&gt;</operator><name pos:start="63:70" pos:end="63:83">max_chunk_size</name></name><operator pos:start="63:84" pos:end="63:84">)</operator>

            <operator pos:start="65:13" pos:end="65:14">||</operator> <operator pos:start="65:16" pos:end="65:16">(</operator><name pos:start="65:17" pos:end="65:19">max</name> <operator pos:start="65:21" pos:end="65:22">&amp;&amp;</operator> <name pos:start="65:24" pos:end="65:53"><name pos:start="65:24" pos:end="65:25">st</name><operator pos:start="65:26" pos:end="65:27">-&gt;</operator><name pos:start="65:28" pos:end="65:53">interleaver_chunk_duration</name></name>           <operator pos:start="65:65" pos:end="65:65">&gt;</operator> <name pos:start="65:67" pos:end="65:69">max</name><operator pos:start="65:70" pos:end="65:70">)</operator></expr>)</condition> <block pos:start="65:73" pos:end="85:9">{<block_content pos:start="67:13" pos:end="83:51">

            <expr_stmt pos:start="67:13" pos:end="67:48"><expr pos:start="67:13" pos:end="67:47"><name pos:start="67:13" pos:end="67:38"><name pos:start="67:13" pos:end="67:14">st</name><operator pos:start="67:15" pos:end="67:16">-&gt;</operator><name pos:start="67:17" pos:end="67:38">interleaver_chunk_size</name></name>      <operator pos:start="67:45" pos:end="67:45">=</operator> <literal type="number" pos:start="67:47" pos:end="67:47">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:48"><expr pos:start="69:13" pos:end="69:47"><name pos:start="69:13" pos:end="69:32"><name pos:start="69:13" pos:end="69:21">this_pktl</name><operator pos:start="69:22" pos:end="69:23">-&gt;</operator><name pos:start="69:24" pos:end="69:26">pkt</name><operator pos:start="69:27" pos:end="69:27">.</operator><name pos:start="69:28" pos:end="69:32">flags</name></name> <operator pos:start="69:34" pos:end="69:35">|=</operator> <name pos:start="69:37" pos:end="69:47">CHUNK_START</name></expr>;</expr_stmt>

            <if_stmt pos:start="71:13" pos:end="83:51"><if pos:start="71:13" pos:end="81:13">if <condition pos:start="71:16" pos:end="71:60">(<expr pos:start="71:17" pos:end="71:59"><name pos:start="71:17" pos:end="71:19">max</name> <operator pos:start="71:21" pos:end="71:22">&amp;&amp;</operator> <name pos:start="71:24" pos:end="71:53"><name pos:start="71:24" pos:end="71:25">st</name><operator pos:start="71:26" pos:end="71:27">-&gt;</operator><name pos:start="71:28" pos:end="71:53">interleaver_chunk_duration</name></name> <operator pos:start="71:55" pos:end="71:55">&gt;</operator> <name pos:start="71:57" pos:end="71:59">max</name></expr>)</condition> <block pos:start="71:62" pos:end="81:13">{<block_content pos:start="73:17" pos:end="79:78">

                <decl_stmt pos:start="73:17" pos:end="73:89"><decl pos:start="73:17" pos:end="73:88"><type pos:start="73:17" pos:end="73:23"><name pos:start="73:17" pos:end="73:23">int64_t</name></type> <name pos:start="73:25" pos:end="73:34">syncoffset</name> <init pos:start="73:36" pos:end="73:88">= <expr pos:start="73:38" pos:end="73:88"><operator pos:start="73:38" pos:end="73:38">(</operator><name pos:start="73:39" pos:end="73:59"><name pos:start="73:39" pos:end="73:40">st</name><operator pos:start="73:41" pos:end="73:42">-&gt;</operator><name pos:start="73:43" pos:end="73:47">codec</name><operator pos:start="73:48" pos:end="73:49">-&gt;</operator><name pos:start="73:50" pos:end="73:59">codec_type</name></name> <operator pos:start="73:61" pos:end="73:62">==</operator> <name pos:start="73:64" pos:end="73:81">AVMEDIA_TYPE_VIDEO</name><operator pos:start="73:82" pos:end="73:82">)</operator><operator pos:start="73:83" pos:end="73:83">*</operator><name pos:start="73:84" pos:end="73:86">max</name><operator pos:start="73:87" pos:end="73:87">/</operator><literal type="number" pos:start="73:88" pos:end="73:88">2</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="75:17" pos:end="75:92"><decl pos:start="75:17" pos:end="75:91"><type pos:start="75:17" pos:end="75:23"><name pos:start="75:17" pos:end="75:23">int64_t</name></type> <name pos:start="75:25" pos:end="75:30">syncto</name> <init pos:start="75:32" pos:end="75:91">= <expr pos:start="75:34" pos:end="75:91"><call pos:start="75:34" pos:end="75:74"><name pos:start="75:34" pos:end="75:43">av_rescale</name><argument_list pos:start="75:44" pos:end="75:74">(<argument pos:start="75:45" pos:end="75:65"><expr pos:start="75:45" pos:end="75:65"><name pos:start="75:45" pos:end="75:52"><name pos:start="75:45" pos:end="75:47">pkt</name><operator pos:start="75:48" pos:end="75:49">-&gt;</operator><name pos:start="75:50" pos:end="75:52">dts</name></name> <operator pos:start="75:54" pos:end="75:54">+</operator> <name pos:start="75:56" pos:end="75:65">syncoffset</name></expr></argument>, <argument pos:start="75:68" pos:end="75:68"><expr pos:start="75:68" pos:end="75:68"><literal type="number" pos:start="75:68" pos:end="75:68">1</literal></expr></argument>, <argument pos:start="75:71" pos:end="75:73"><expr pos:start="75:71" pos:end="75:73"><name pos:start="75:71" pos:end="75:73">max</name></expr></argument>)</argument_list></call><operator pos:start="75:75" pos:end="75:75">*</operator><name pos:start="75:76" pos:end="75:78">max</name> <operator pos:start="75:80" pos:end="75:80">-</operator> <name pos:start="75:82" pos:end="75:91">syncoffset</name></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="79:17" pos:end="79:78"><expr pos:start="79:17" pos:end="79:77"><name pos:start="79:17" pos:end="79:46"><name pos:start="79:17" pos:end="79:18">st</name><operator pos:start="79:19" pos:end="79:20">-&gt;</operator><name pos:start="79:21" pos:end="79:46">interleaver_chunk_duration</name></name> <operator pos:start="79:48" pos:end="79:49">+=</operator> <operator pos:start="79:51" pos:end="79:51">(</operator><name pos:start="79:52" pos:end="79:59"><name pos:start="79:52" pos:end="79:54">pkt</name><operator pos:start="79:55" pos:end="79:56">-&gt;</operator><name pos:start="79:57" pos:end="79:59">dts</name></name> <operator pos:start="79:61" pos:end="79:61">-</operator> <name pos:start="79:63" pos:end="79:68">syncto</name><operator pos:start="79:69" pos:end="79:69">)</operator><operator pos:start="79:70" pos:end="79:70">/</operator><literal type="number" pos:start="79:71" pos:end="79:73">8</literal> <operator pos:start="79:73" pos:end="79:73">-</operator> <name pos:start="79:75" pos:end="79:77">max</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="81:15" pos:end="83:51">else<block type="pseudo" pos:start="83:17" pos:end="83:51"><block_content pos:start="83:17" pos:end="83:51">

                <expr_stmt pos:start="83:17" pos:end="83:51"><expr pos:start="83:17" pos:end="83:50"><name pos:start="83:17" pos:end="83:46"><name pos:start="83:17" pos:end="83:18">st</name><operator pos:start="83:19" pos:end="83:20">-&gt;</operator><name pos:start="83:21" pos:end="83:46">interleaver_chunk_duration</name></name> <operator pos:start="83:48" pos:end="83:48">=</operator> <literal type="number" pos:start="83:50" pos:end="83:50">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="89:5" pos:end="117:5"><if pos:start="89:5" pos:end="117:5">if <condition pos:start="89:8" pos:end="89:20">(<expr pos:start="89:9" pos:end="89:19"><operator pos:start="89:9" pos:end="89:9">*</operator><name pos:start="89:10" pos:end="89:19">next_point</name></expr>)</condition> <block pos:start="89:22" pos:end="117:5">{<block_content pos:start="91:9" pos:end="115:9">

        <if_stmt pos:start="91:9" pos:end="93:31"><if pos:start="91:9" pos:end="93:31">if <condition pos:start="91:12" pos:end="91:61">(<expr pos:start="91:13" pos:end="91:60"><name pos:start="91:13" pos:end="91:19">chunked</name> <operator pos:start="91:21" pos:end="91:22">&amp;&amp;</operator> <operator pos:start="91:24" pos:end="91:24">!</operator><operator pos:start="91:25" pos:end="91:25">(</operator><name pos:start="91:26" pos:end="91:45"><name pos:start="91:26" pos:end="91:34">this_pktl</name><operator pos:start="91:35" pos:end="91:36">-&gt;</operator><name pos:start="91:37" pos:end="91:39">pkt</name><operator pos:start="91:40" pos:end="91:40">.</operator><name pos:start="91:41" pos:end="91:45">flags</name></name> <operator pos:start="91:47" pos:end="91:47">&amp;</operator> <name pos:start="91:49" pos:end="91:59">CHUNK_START</name><operator pos:start="91:60" pos:end="91:60">)</operator></expr>)</condition><block type="pseudo" pos:start="93:13" pos:end="93:31"><block_content pos:start="93:13" pos:end="93:31">

            <goto pos:start="93:13" pos:end="93:31">goto <name pos:start="93:18" pos:end="93:30">next_non_null</name>;</goto></block_content></block></if></if_stmt>



        <if_stmt pos:start="97:9" pos:end="115:9"><if pos:start="97:9" pos:end="111:9">if <condition pos:start="97:12" pos:end="97:66">(<expr pos:start="97:13" pos:end="97:65"><call pos:start="97:13" pos:end="97:65"><name pos:start="97:13" pos:end="97:19">compare</name><argument_list pos:start="97:20" pos:end="97:65">(<argument pos:start="97:21" pos:end="97:21"><expr pos:start="97:21" pos:end="97:21"><name pos:start="97:21" pos:end="97:21">s</name></expr></argument>, <argument pos:start="97:24" pos:end="97:59"><expr pos:start="97:24" pos:end="97:59"><operator pos:start="97:24" pos:end="97:24">&amp;</operator><name pos:start="97:25" pos:end="97:59"><name pos:start="97:25" pos:end="97:25">s</name><operator pos:start="97:26" pos:end="97:27">-&gt;</operator><name pos:start="97:28" pos:end="97:35">internal</name><operator pos:start="97:36" pos:end="97:37">-&gt;</operator><name pos:start="97:38" pos:end="97:54">packet_buffer_end</name><operator pos:start="97:55" pos:end="97:56">-&gt;</operator><name pos:start="97:57" pos:end="97:59">pkt</name></name></expr></argument>, <argument pos:start="97:62" pos:end="97:64"><expr pos:start="97:62" pos:end="97:64"><name pos:start="97:62" pos:end="97:64">pkt</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="97:68" pos:end="111:9">{<block_content pos:start="99:13" pos:end="109:35">

            <while pos:start="99:13" pos:end="105:50">while <condition pos:start="99:19" pos:end="103:65">(   <expr pos:start="99:23" pos:end="103:64"><operator pos:start="99:23" pos:end="99:23">*</operator><name pos:start="99:24" pos:end="99:33">next_point</name>

                   <operator pos:start="101:20" pos:end="101:21">&amp;&amp;</operator> <operator pos:start="101:23" pos:end="101:23">(</operator><operator pos:start="101:24" pos:end="101:24">(</operator><name pos:start="101:25" pos:end="101:31">chunked</name> <operator pos:start="101:33" pos:end="101:34">&amp;&amp;</operator> <operator pos:start="101:36" pos:end="101:36">!</operator><operator pos:start="101:37" pos:end="101:37">(</operator><name pos:start="101:38" pos:end="101:61"><operator pos:start="101:38" pos:end="101:38">(</operator><operator pos:start="101:39" pos:end="101:39">*</operator><name pos:start="101:40" pos:end="101:49">next_point</name><operator pos:start="101:50" pos:end="101:50">)</operator><operator pos:start="101:51" pos:end="101:52">-&gt;</operator><name pos:start="101:53" pos:end="101:61"><name pos:start="101:53" pos:end="101:55">pkt</name><operator pos:start="101:56" pos:end="101:56">.</operator><name pos:start="101:57" pos:end="101:61">flags</name></name></name><operator pos:start="101:62" pos:end="101:62">&amp;</operator><name pos:start="101:63" pos:end="101:73">CHUNK_START</name><operator pos:start="101:74" pos:end="101:74">)</operator><operator pos:start="101:75" pos:end="101:75">)</operator>

                       <operator pos:start="103:24" pos:end="103:25">||</operator> <operator pos:start="103:27" pos:end="103:27">!</operator><call pos:start="103:28" pos:end="103:63"><name pos:start="103:28" pos:end="103:34">compare</name><argument_list pos:start="103:35" pos:end="103:63">(<argument pos:start="103:36" pos:end="103:36"><expr pos:start="103:36" pos:end="103:36"><name pos:start="103:36" pos:end="103:36">s</name></expr></argument>, <argument pos:start="103:39" pos:end="103:57"><expr pos:start="103:39" pos:end="103:57"><operator pos:start="103:39" pos:end="103:39">&amp;</operator><name pos:start="103:40" pos:end="103:57"><operator pos:start="103:40" pos:end="103:40">(</operator><operator pos:start="103:41" pos:end="103:41">*</operator><name pos:start="103:42" pos:end="103:51">next_point</name><operator pos:start="103:52" pos:end="103:52">)</operator><operator pos:start="103:53" pos:end="103:54">-&gt;</operator><name pos:start="103:55" pos:end="103:57">pkt</name></name></expr></argument>, <argument pos:start="103:60" pos:end="103:62"><expr pos:start="103:60" pos:end="103:62"><name pos:start="103:60" pos:end="103:62">pkt</name></expr></argument>)</argument_list></call><operator pos:start="103:64" pos:end="103:64">)</operator></expr>)</condition><block type="pseudo" pos:start="105:17" pos:end="105:50"><block_content pos:start="105:17" pos:end="105:50">

                <expr_stmt pos:start="105:17" pos:end="105:50"><expr pos:start="105:17" pos:end="105:49"><name pos:start="105:17" pos:end="105:26">next_point</name> <operator pos:start="105:28" pos:end="105:28">=</operator> <operator pos:start="105:30" pos:end="105:30">&amp;</operator><name pos:start="105:31" pos:end="105:49"><operator pos:start="105:31" pos:end="105:31">(</operator><operator pos:start="105:32" pos:end="105:32">*</operator><name pos:start="105:33" pos:end="105:42">next_point</name><operator pos:start="105:43" pos:end="105:43">)</operator><operator pos:start="105:44" pos:end="105:45">-&gt;</operator><name pos:start="105:46" pos:end="105:49">next</name></name></expr>;</expr_stmt></block_content></block></while>

            <if_stmt pos:start="107:13" pos:end="109:35"><if pos:start="107:13" pos:end="109:35">if <condition pos:start="107:16" pos:end="107:28">(<expr pos:start="107:17" pos:end="107:27"><operator pos:start="107:17" pos:end="107:17">*</operator><name pos:start="107:18" pos:end="107:27">next_point</name></expr>)</condition><block type="pseudo" pos:start="109:17" pos:end="109:35"><block_content pos:start="109:17" pos:end="109:35">

                <goto pos:start="109:17" pos:end="109:35">goto <name pos:start="109:22" pos:end="109:34">next_non_null</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="111:11" pos:end="115:9">else <block pos:start="111:16" pos:end="115:9">{<block_content pos:start="113:13" pos:end="113:65">

            <expr_stmt pos:start="113:13" pos:end="113:65"><expr pos:start="113:13" pos:end="113:64"><name pos:start="113:13" pos:end="113:22">next_point</name> <operator pos:start="113:24" pos:end="113:24">=</operator> <operator pos:start="113:26" pos:end="113:26">&amp;</operator><operator pos:start="113:27" pos:end="113:27">(</operator><name pos:start="113:28" pos:end="113:63"><name pos:start="113:28" pos:end="113:28">s</name><operator pos:start="113:29" pos:end="113:30">-&gt;</operator><name pos:start="113:31" pos:end="113:38">internal</name><operator pos:start="113:39" pos:end="113:40">-&gt;</operator><name pos:start="113:41" pos:end="113:57">packet_buffer_end</name><operator pos:start="113:58" pos:end="113:59">-&gt;</operator><name pos:start="113:60" pos:end="113:63">next</name></name><operator pos:start="113:64" pos:end="113:64">)</operator></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:29"><expr pos:start="119:5" pos:end="119:28"><call pos:start="119:5" pos:end="119:28"><name pos:start="119:5" pos:end="119:14">av_assert1</name><argument_list pos:start="119:15" pos:end="119:28">(<argument pos:start="119:16" pos:end="119:27"><expr pos:start="119:16" pos:end="119:27"><operator pos:start="119:16" pos:end="119:16">!</operator><operator pos:start="119:17" pos:end="119:17">*</operator><name pos:start="119:18" pos:end="119:27">next_point</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:47"><expr pos:start="123:5" pos:end="123:46"><name pos:start="123:5" pos:end="123:34"><name pos:start="123:5" pos:end="123:5">s</name><operator pos:start="123:6" pos:end="123:7">-&gt;</operator><name pos:start="123:8" pos:end="123:15">internal</name><operator pos:start="123:16" pos:end="123:17">-&gt;</operator><name pos:start="123:18" pos:end="123:34">packet_buffer_end</name></name> <operator pos:start="123:36" pos:end="123:36">=</operator> <name pos:start="123:38" pos:end="123:46">this_pktl</name></expr>;</expr_stmt>

<label pos:start="125:1" pos:end="125:14"><name pos:start="125:1" pos:end="125:13">next_non_null</name>:</label>



    <expr_stmt pos:start="129:5" pos:end="129:34"><expr pos:start="129:5" pos:end="129:33"><name pos:start="129:5" pos:end="129:19"><name pos:start="129:5" pos:end="129:13">this_pktl</name><operator pos:start="129:14" pos:end="129:15">-&gt;</operator><name pos:start="129:16" pos:end="129:19">next</name></name> <operator pos:start="129:21" pos:end="129:21">=</operator> <operator pos:start="129:23" pos:end="129:23">*</operator><name pos:start="129:24" pos:end="129:33">next_point</name></expr>;</expr_stmt>



    <expr_stmt pos:start="133:5" pos:end="135:69"><expr pos:start="133:5" pos:end="135:68"><name pos:start="133:5" pos:end="133:33"><name pos:start="133:5" pos:end="133:5">s</name><operator pos:start="133:6" pos:end="133:7">-&gt;</operator><name pos:start="133:8" pos:end="133:14">streams</name><index pos:start="133:15" pos:end="133:33">[<expr pos:start="133:16" pos:end="133:32"><name pos:start="133:16" pos:end="133:32"><name pos:start="133:16" pos:end="133:18">pkt</name><operator pos:start="133:19" pos:end="133:20">-&gt;</operator><name pos:start="133:21" pos:end="133:32">stream_index</name></name></expr>]</index></name><operator pos:start="133:34" pos:end="133:35">-&gt;</operator><name pos:start="133:36" pos:end="133:56">last_in_packet_buffer</name> <operator pos:start="133:58" pos:end="133:58">=</operator>

        <operator pos:start="135:9" pos:end="135:9">*</operator><name pos:start="135:10" pos:end="135:19">next_point</name>                                      <operator pos:start="135:58" pos:end="135:58">=</operator> <name pos:start="135:60" pos:end="135:68">this_pktl</name></expr>;</expr_stmt>



    <expr_stmt pos:start="139:5" pos:end="139:25"><expr pos:start="139:5" pos:end="139:24"><call pos:start="139:5" pos:end="139:24"><name pos:start="139:5" pos:end="139:19">av_packet_unref</name><argument_list pos:start="139:20" pos:end="139:24">(<argument pos:start="139:21" pos:end="139:23"><expr pos:start="139:21" pos:end="139:23"><name pos:start="139:21" pos:end="139:23">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="143:5" pos:end="143:13">return <expr pos:start="143:12" pos:end="143:12"><literal type="number" pos:start="143:12" pos:end="143:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
