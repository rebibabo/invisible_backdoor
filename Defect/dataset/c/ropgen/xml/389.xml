<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/389.c" pos:tabs="8"><function pos:start="1:1" pos:end="88:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">smacker_read_header</name><parameter_list pos:start="1:31" pos:end="1:74">(<parameter pos:start="1:32" pos:end="1:49"><decl pos:start="1:32" pos:end="1:49"><type pos:start="1:32" pos:end="1:49"><name pos:start="1:32" pos:end="1:46">AVFormatContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:73"><decl pos:start="1:52" pos:end="1:73"><type pos:start="1:52" pos:end="1:73"><name pos:start="1:52" pos:end="1:69">AVFormatParameters</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:73">ap</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="88:13">{<block_content pos:start="3:5" pos:end="88:13">
    <decl_stmt pos:start="3:5" pos:end="3:31"><decl pos:start="3:5" pos:end="3:30"><type pos:start="3:5" pos:end="3:19"><name pos:start="3:5" pos:end="3:17">ByteIOContext</name> <modifier pos:start="3:19" pos:end="3:19">*</modifier></type><name pos:start="3:20" pos:end="3:21">pb</name> <init pos:start="3:23" pos:end="3:30">= <expr pos:start="3:25" pos:end="3:30"><operator pos:start="3:25" pos:end="3:25">&amp;</operator><name pos:start="3:26" pos:end="3:30"><name pos:start="3:26" pos:end="3:26">s</name><operator pos:start="3:27" pos:end="3:28">-&gt;</operator><name pos:start="3:29" pos:end="3:30">pb</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:57"><decl pos:start="4:5" pos:end="4:56"><type pos:start="4:5" pos:end="4:20"><name pos:start="4:5" pos:end="4:18">SmackerContext</name> <modifier pos:start="4:20" pos:end="4:20">*</modifier></type><name pos:start="4:21" pos:end="4:23">smk</name> <init pos:start="4:25" pos:end="4:56">= <expr pos:start="4:27" pos:end="4:56"><operator pos:start="4:27" pos:end="4:27">(</operator><name pos:start="4:28" pos:end="4:41">SmackerContext</name> <operator pos:start="4:43" pos:end="4:43">*</operator><operator pos:start="4:44" pos:end="4:44">)</operator><name pos:start="4:45" pos:end="4:56"><name pos:start="4:45" pos:end="4:45">s</name><operator pos:start="4:46" pos:end="4:47">-&gt;</operator><name pos:start="4:48" pos:end="4:56">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name></decl>, <decl pos:start="5:19" pos:end="5:25"><type ref="prev" pos:start="5:5" pos:end="5:14"><modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:25"><name pos:start="5:20" pos:end="5:22">ast</name><index pos:start="5:23" pos:end="5:25">[<expr pos:start="5:24" pos:end="5:24"><literal type="number" pos:start="5:24" pos:end="5:24">7</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:15"><decl pos:start="6:5" pos:end="6:9"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:9">i</name></decl>, <decl pos:start="6:12" pos:end="6:14"><type ref="prev" pos:start="6:5" pos:end="6:7"/><name pos:start="6:12" pos:end="6:14">ret</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">tbase</name></decl>;</decl_stmt>
    <comment type="block" pos:start="8:5" pos:end="8:31">/* read and check header */</comment>
    <expr_stmt pos:start="9:5" pos:end="9:30"><expr pos:start="9:5" pos:end="9:29"><name pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:7">smk</name><operator pos:start="9:8" pos:end="9:9">-&gt;</operator><name pos:start="9:10" pos:end="9:14">magic</name></name> <operator pos:start="9:16" pos:end="9:16">=</operator> <call pos:start="9:18" pos:end="9:29"><name pos:start="9:18" pos:end="9:25">get_le32</name><argument_list pos:start="9:26" pos:end="9:29">(<argument pos:start="9:27" pos:end="9:28"><expr pos:start="9:27" pos:end="9:28"><name pos:start="9:27" pos:end="9:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="10:5" pos:end="11:30"><if pos:start="10:5" pos:end="11:30">if <condition pos:start="10:8" pos:end="10:91">(<expr pos:start="10:9" pos:end="10:90"><name pos:start="10:9" pos:end="10:18"><name pos:start="10:9" pos:end="10:11">smk</name><operator pos:start="10:12" pos:end="10:13">-&gt;</operator><name pos:start="10:14" pos:end="10:18">magic</name></name> <operator pos:start="10:20" pos:end="10:21">!=</operator> <call pos:start="10:23" pos:end="10:47"><name pos:start="10:23" pos:end="10:27">MKTAG</name><argument_list pos:start="10:28" pos:end="10:47">(<argument pos:start="10:29" pos:end="10:31"><expr pos:start="10:29" pos:end="10:31"><literal type="char" pos:start="10:29" pos:end="10:31">'S'</literal></expr></argument>, <argument pos:start="10:34" pos:end="10:36"><expr pos:start="10:34" pos:end="10:36"><literal type="char" pos:start="10:34" pos:end="10:36">'M'</literal></expr></argument>, <argument pos:start="10:39" pos:end="10:41"><expr pos:start="10:39" pos:end="10:41"><literal type="char" pos:start="10:39" pos:end="10:41">'K'</literal></expr></argument>, <argument pos:start="10:44" pos:end="10:46"><expr pos:start="10:44" pos:end="10:46"><literal type="char" pos:start="10:44" pos:end="10:46">'2'</literal></expr></argument>)</argument_list></call> <operator pos:start="10:49" pos:end="10:50">&amp;&amp;</operator> <name pos:start="10:52" pos:end="10:61"><name pos:start="10:52" pos:end="10:54">smk</name><operator pos:start="10:55" pos:end="10:56">-&gt;</operator><name pos:start="10:57" pos:end="10:61">magic</name></name> <operator pos:start="10:63" pos:end="10:64">!=</operator> <call pos:start="10:66" pos:end="10:90"><name pos:start="10:66" pos:end="10:70">MKTAG</name><argument_list pos:start="10:71" pos:end="10:90">(<argument pos:start="10:72" pos:end="10:74"><expr pos:start="10:72" pos:end="10:74"><literal type="char" pos:start="10:72" pos:end="10:74">'S'</literal></expr></argument>, <argument pos:start="10:77" pos:end="10:79"><expr pos:start="10:77" pos:end="10:79"><literal type="char" pos:start="10:77" pos:end="10:79">'M'</literal></expr></argument>, <argument pos:start="10:82" pos:end="10:84"><expr pos:start="10:82" pos:end="10:84"><literal type="char" pos:start="10:82" pos:end="10:84">'K'</literal></expr></argument>, <argument pos:start="10:87" pos:end="10:89"><expr pos:start="10:87" pos:end="10:89"><literal type="char" pos:start="10:87" pos:end="10:89">'4'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="11:5" pos:end="11:30"><block_content pos:start="11:5" pos:end="11:30">
    <expr_stmt pos:start="11:5" pos:end="11:30"><expr pos:start="11:5" pos:end="11:29"><name pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:7">smk</name><operator pos:start="11:8" pos:end="11:9">-&gt;</operator><name pos:start="11:10" pos:end="11:14">width</name></name> <operator pos:start="11:16" pos:end="11:16">=</operator> <call pos:start="11:18" pos:end="11:29"><name pos:start="11:18" pos:end="11:25">get_le32</name><argument_list pos:start="11:26" pos:end="11:29">(<argument pos:start="11:27" pos:end="11:28"><expr pos:start="11:27" pos:end="11:28"><name pos:start="11:27" pos:end="11:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:31"><expr pos:start="12:5" pos:end="12:30"><name pos:start="12:5" pos:end="12:15"><name pos:start="12:5" pos:end="12:7">smk</name><operator pos:start="12:8" pos:end="12:9">-&gt;</operator><name pos:start="12:10" pos:end="12:15">height</name></name> <operator pos:start="12:17" pos:end="12:17">=</operator> <call pos:start="12:19" pos:end="12:30"><name pos:start="12:19" pos:end="12:26">get_le32</name><argument_list pos:start="12:27" pos:end="12:30">(<argument pos:start="12:28" pos:end="12:29"><expr pos:start="12:28" pos:end="12:29"><name pos:start="12:28" pos:end="12:29">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:31"><expr pos:start="13:5" pos:end="13:30"><name pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:7">smk</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:15">frames</name></name> <operator pos:start="13:17" pos:end="13:17">=</operator> <call pos:start="13:19" pos:end="13:30"><name pos:start="13:19" pos:end="13:26">get_le32</name><argument_list pos:start="13:27" pos:end="13:30">(<argument pos:start="13:28" pos:end="13:29"><expr pos:start="13:28" pos:end="13:29"><name pos:start="13:28" pos:end="13:29">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="14:5" pos:end="14:41"><expr pos:start="14:5" pos:end="14:40"><name pos:start="14:5" pos:end="14:16"><name pos:start="14:5" pos:end="14:7">smk</name><operator pos:start="14:8" pos:end="14:9">-&gt;</operator><name pos:start="14:10" pos:end="14:16">pts_inc</name></name> <operator pos:start="14:18" pos:end="14:18">=</operator> <operator pos:start="14:20" pos:end="14:20">(</operator><name pos:start="14:21" pos:end="14:27">int32_t</name><operator pos:start="14:28" pos:end="14:28">)</operator><call pos:start="14:29" pos:end="14:40"><name pos:start="14:29" pos:end="14:36">get_le32</name><argument_list pos:start="14:37" pos:end="14:40">(<argument pos:start="14:38" pos:end="14:39"><expr pos:start="14:38" pos:end="14:39"><name pos:start="14:38" pos:end="14:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:30"><expr pos:start="15:5" pos:end="15:29"><name pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:7">smk</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:14">flags</name></name> <operator pos:start="15:16" pos:end="15:16">=</operator> <call pos:start="15:18" pos:end="15:29"><name pos:start="15:18" pos:end="15:25">get_le32</name><argument_list pos:start="15:26" pos:end="15:29">(<argument pos:start="15:27" pos:end="15:28"><expr pos:start="15:27" pos:end="15:28"><name pos:start="15:27" pos:end="15:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="16:5" pos:end="17:37">for<control pos:start="16:8" pos:end="16:26">(<init pos:start="16:9" pos:end="16:14"><expr pos:start="16:9" pos:end="16:13"><name pos:start="16:9" pos:end="16:9">i</name> <operator pos:start="16:11" pos:end="16:11">=</operator> <literal type="number" pos:start="16:13" pos:end="16:13">0</literal></expr>;</init> <condition pos:start="16:16" pos:end="16:21"><expr pos:start="16:16" pos:end="16:20"><name pos:start="16:16" pos:end="16:16">i</name> <operator pos:start="16:18" pos:end="16:18">&lt;</operator> <literal type="number" pos:start="16:20" pos:end="16:20">7</literal></expr>;</condition> <incr pos:start="16:23" pos:end="16:25"><expr pos:start="16:23" pos:end="16:25"><name pos:start="16:23" pos:end="16:23">i</name><operator pos:start="16:24" pos:end="16:25">++</operator></expr></incr>)</control><block type="pseudo" pos:start="17:9" pos:end="17:37"><block_content pos:start="17:9" pos:end="17:37">
        <expr_stmt pos:start="17:9" pos:end="17:37"><expr pos:start="17:9" pos:end="17:36"><name pos:start="17:9" pos:end="17:21"><name pos:start="17:9" pos:end="17:11">smk</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:18">audio</name><index pos:start="17:19" pos:end="17:21">[<expr pos:start="17:20" pos:end="17:20"><name pos:start="17:20" pos:end="17:20">i</name></expr>]</index></name> <operator pos:start="17:23" pos:end="17:23">=</operator> <call pos:start="17:25" pos:end="17:36"><name pos:start="17:25" pos:end="17:32">get_le32</name><argument_list pos:start="17:33" pos:end="17:36">(<argument pos:start="17:34" pos:end="17:35"><expr pos:start="17:34" pos:end="17:35"><name pos:start="17:34" pos:end="17:35">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
    <expr_stmt pos:start="18:5" pos:end="18:33"><expr pos:start="18:5" pos:end="18:32"><name pos:start="18:5" pos:end="18:17"><name pos:start="18:5" pos:end="18:7">smk</name><operator pos:start="18:8" pos:end="18:9">-&gt;</operator><name pos:start="18:10" pos:end="18:17">treesize</name></name> <operator pos:start="18:19" pos:end="18:19">=</operator> <call pos:start="18:21" pos:end="18:32"><name pos:start="18:21" pos:end="18:28">get_le32</name><argument_list pos:start="18:29" pos:end="18:32">(<argument pos:start="18:30" pos:end="18:31"><expr pos:start="18:30" pos:end="18:31"><name pos:start="18:30" pos:end="18:31">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="19:5" pos:end="19:34"><expr pos:start="19:5" pos:end="19:33"><name pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:7">smk</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:18">mmap_size</name></name> <operator pos:start="19:20" pos:end="19:20">=</operator> <call pos:start="19:22" pos:end="19:33"><name pos:start="19:22" pos:end="19:29">get_le32</name><argument_list pos:start="19:30" pos:end="19:33">(<argument pos:start="19:31" pos:end="19:32"><expr pos:start="19:31" pos:end="19:32"><name pos:start="19:31" pos:end="19:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="20:5" pos:end="20:34"><expr pos:start="20:5" pos:end="20:33"><name pos:start="20:5" pos:end="20:18"><name pos:start="20:5" pos:end="20:7">smk</name><operator pos:start="20:8" pos:end="20:9">-&gt;</operator><name pos:start="20:10" pos:end="20:18">mclr_size</name></name> <operator pos:start="20:20" pos:end="20:20">=</operator> <call pos:start="20:22" pos:end="20:33"><name pos:start="20:22" pos:end="20:29">get_le32</name><argument_list pos:start="20:30" pos:end="20:33">(<argument pos:start="20:31" pos:end="20:32"><expr pos:start="20:31" pos:end="20:32"><name pos:start="20:31" pos:end="20:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="21:5" pos:end="21:34"><expr pos:start="21:5" pos:end="21:33"><name pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:7">smk</name><operator pos:start="21:8" pos:end="21:9">-&gt;</operator><name pos:start="21:10" pos:end="21:18">full_size</name></name> <operator pos:start="21:20" pos:end="21:20">=</operator> <call pos:start="21:22" pos:end="21:33"><name pos:start="21:22" pos:end="21:29">get_le32</name><argument_list pos:start="21:30" pos:end="21:33">(<argument pos:start="21:31" pos:end="21:32"><expr pos:start="21:31" pos:end="21:32"><name pos:start="21:31" pos:end="21:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:34"><expr pos:start="22:5" pos:end="22:33"><name pos:start="22:5" pos:end="22:18"><name pos:start="22:5" pos:end="22:7">smk</name><operator pos:start="22:8" pos:end="22:9">-&gt;</operator><name pos:start="22:10" pos:end="22:18">type_size</name></name> <operator pos:start="22:20" pos:end="22:20">=</operator> <call pos:start="22:22" pos:end="22:33"><name pos:start="22:22" pos:end="22:29">get_le32</name><argument_list pos:start="22:30" pos:end="22:33">(<argument pos:start="22:31" pos:end="22:32"><expr pos:start="22:31" pos:end="22:32"><name pos:start="22:31" pos:end="22:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="23:5" pos:end="24:37">for<control pos:start="23:8" pos:end="23:26">(<init pos:start="23:9" pos:end="23:14"><expr pos:start="23:9" pos:end="23:13"><name pos:start="23:9" pos:end="23:9">i</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <literal type="number" pos:start="23:13" pos:end="23:13">0</literal></expr>;</init> <condition pos:start="23:16" pos:end="23:21"><expr pos:start="23:16" pos:end="23:20"><name pos:start="23:16" pos:end="23:16">i</name> <operator pos:start="23:18" pos:end="23:18">&lt;</operator> <literal type="number" pos:start="23:20" pos:end="23:20">7</literal></expr>;</condition> <incr pos:start="23:23" pos:end="23:25"><expr pos:start="23:23" pos:end="23:25"><name pos:start="23:23" pos:end="23:23">i</name><operator pos:start="23:24" pos:end="23:25">++</operator></expr></incr>)</control><block type="pseudo" pos:start="24:9" pos:end="24:37"><block_content pos:start="24:9" pos:end="24:37">
        <expr_stmt pos:start="24:9" pos:end="24:37"><expr pos:start="24:9" pos:end="24:36"><name pos:start="24:9" pos:end="24:21"><name pos:start="24:9" pos:end="24:11">smk</name><operator pos:start="24:12" pos:end="24:13">-&gt;</operator><name pos:start="24:14" pos:end="24:18">rates</name><index pos:start="24:19" pos:end="24:21">[<expr pos:start="24:20" pos:end="24:20"><name pos:start="24:20" pos:end="24:20">i</name></expr>]</index></name> <operator pos:start="24:23" pos:end="24:23">=</operator> <call pos:start="24:25" pos:end="24:36"><name pos:start="24:25" pos:end="24:32">get_le32</name><argument_list pos:start="24:33" pos:end="24:36">(<argument pos:start="24:34" pos:end="24:35"><expr pos:start="24:34" pos:end="24:35"><name pos:start="24:34" pos:end="24:35">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
    <expr_stmt pos:start="25:5" pos:end="25:28"><expr pos:start="25:5" pos:end="25:27"><name pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:7">smk</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:12">pad</name></name> <operator pos:start="25:14" pos:end="25:14">=</operator> <call pos:start="25:16" pos:end="25:27"><name pos:start="25:16" pos:end="25:23">get_le32</name><argument_list pos:start="25:24" pos:end="25:27">(<argument pos:start="25:25" pos:end="25:26"><expr pos:start="25:25" pos:end="25:26"><name pos:start="25:25" pos:end="25:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="26:5" pos:end="26:20">/* setup data */</comment>
    <if_stmt pos:start="27:5" pos:end="88:13"><if pos:start="27:5" pos:end="88:13">if<condition pos:start="27:7" pos:end="27:30">(<expr pos:start="27:8" pos:end="27:29"><name pos:start="27:8" pos:end="27:18"><name pos:start="27:8" pos:end="27:10">smk</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:18">frames</name></name> <operator pos:start="27:20" pos:end="27:20">&gt;</operator> <literal type="number" pos:start="27:22" pos:end="27:29">0xFFFFFF</literal></expr>)</condition> <block pos:start="27:32" pos:end="88:13">{<block_content pos:start="28:9" pos:end="88:13">
        <expr_stmt pos:start="28:9" pos:end="28:70"><expr pos:start="28:9" pos:end="28:69"><call pos:start="28:9" pos:end="28:69"><name pos:start="28:9" pos:end="28:14">av_log</name><argument_list pos:start="28:15" pos:end="28:69">(<argument pos:start="28:16" pos:end="28:16"><expr pos:start="28:16" pos:end="28:16"><name pos:start="28:16" pos:end="28:16">s</name></expr></argument>, <argument pos:start="28:19" pos:end="28:30"><expr pos:start="28:19" pos:end="28:30"><name pos:start="28:19" pos:end="28:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="28:33" pos:end="28:55"><expr pos:start="28:33" pos:end="28:55"><literal type="string" pos:start="28:33" pos:end="28:55">"Too many frames: %i\n"</literal></expr></argument>, <argument pos:start="28:58" pos:end="28:68"><expr pos:start="28:58" pos:end="28:68"><name pos:start="28:58" pos:end="28:68"><name pos:start="28:58" pos:end="28:60">smk</name><operator pos:start="28:61" pos:end="28:62">-&gt;</operator><name pos:start="28:63" pos:end="28:68">frames</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="29:5" pos:end="29:47"><expr pos:start="29:5" pos:end="29:46"><name pos:start="29:5" pos:end="29:17"><name pos:start="29:5" pos:end="29:7">smk</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:17">frm_size</name></name> <operator pos:start="29:19" pos:end="29:19">=</operator> <call pos:start="29:21" pos:end="29:46"><name pos:start="29:21" pos:end="29:29">av_malloc</name><argument_list pos:start="29:30" pos:end="29:46">(<argument pos:start="29:31" pos:end="29:45"><expr pos:start="29:31" pos:end="29:45"><name pos:start="29:31" pos:end="29:41"><name pos:start="29:31" pos:end="29:33">smk</name><operator pos:start="29:34" pos:end="29:35">-&gt;</operator><name pos:start="29:36" pos:end="29:41">frames</name></name> <operator pos:start="29:43" pos:end="29:43">*</operator> <literal type="number" pos:start="29:45" pos:end="29:45">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="30:5" pos:end="30:44"><expr pos:start="30:5" pos:end="30:43"><name pos:start="30:5" pos:end="30:18"><name pos:start="30:5" pos:end="30:7">smk</name><operator pos:start="30:8" pos:end="30:9">-&gt;</operator><name pos:start="30:10" pos:end="30:18">frm_flags</name></name> <operator pos:start="30:20" pos:end="30:20">=</operator> <call pos:start="30:22" pos:end="30:43"><name pos:start="30:22" pos:end="30:30">av_malloc</name><argument_list pos:start="30:31" pos:end="30:43">(<argument pos:start="30:32" pos:end="30:42"><expr pos:start="30:32" pos:end="30:42"><name pos:start="30:32" pos:end="30:42"><name pos:start="30:32" pos:end="30:34">smk</name><operator pos:start="30:35" pos:end="30:36">-&gt;</operator><name pos:start="30:37" pos:end="30:42">frames</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="31:5" pos:end="31:61"><expr pos:start="31:5" pos:end="31:60"><name pos:start="31:5" pos:end="31:16"><name pos:start="31:5" pos:end="31:7">smk</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:16">is_ver4</name></name> <operator pos:start="31:18" pos:end="31:18">=</operator> <operator pos:start="31:20" pos:end="31:20">(</operator><name pos:start="31:21" pos:end="31:30"><name pos:start="31:21" pos:end="31:23">smk</name><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:30">magic</name></name> <operator pos:start="31:32" pos:end="31:33">!=</operator> <call pos:start="31:35" pos:end="31:59"><name pos:start="31:35" pos:end="31:39">MKTAG</name><argument_list pos:start="31:40" pos:end="31:59">(<argument pos:start="31:41" pos:end="31:43"><expr pos:start="31:41" pos:end="31:43"><literal type="char" pos:start="31:41" pos:end="31:43">'S'</literal></expr></argument>, <argument pos:start="31:46" pos:end="31:48"><expr pos:start="31:46" pos:end="31:48"><literal type="char" pos:start="31:46" pos:end="31:48">'M'</literal></expr></argument>, <argument pos:start="31:51" pos:end="31:53"><expr pos:start="31:51" pos:end="31:53"><literal type="char" pos:start="31:51" pos:end="31:53">'K'</literal></expr></argument>, <argument pos:start="31:56" pos:end="31:58"><expr pos:start="31:56" pos:end="31:58"><literal type="char" pos:start="31:56" pos:end="31:58">'2'</literal></expr></argument>)</argument_list></call><operator pos:start="31:60" pos:end="31:60">)</operator></expr>;</expr_stmt>
    <comment type="block" pos:start="32:5" pos:end="32:25">/* read frame info */</comment>
    <for pos:start="33:5" pos:end="88:13">for<control pos:start="33:8" pos:end="33:36">(<init pos:start="33:9" pos:end="33:14"><expr pos:start="33:9" pos:end="33:13"><name pos:start="33:9" pos:end="33:9">i</name> <operator pos:start="33:11" pos:end="33:11">=</operator> <literal type="number" pos:start="33:13" pos:end="33:13">0</literal></expr>;</init> <condition pos:start="33:16" pos:end="33:31"><expr pos:start="33:16" pos:end="33:30"><name pos:start="33:16" pos:end="33:16">i</name> <operator pos:start="33:18" pos:end="33:18">&lt;</operator> <name pos:start="33:20" pos:end="33:30"><name pos:start="33:20" pos:end="33:22">smk</name><operator pos:start="33:23" pos:end="33:24">-&gt;</operator><name pos:start="33:25" pos:end="33:30">frames</name></name></expr>;</condition> <incr pos:start="33:33" pos:end="33:35"><expr pos:start="33:33" pos:end="33:35"><name pos:start="33:33" pos:end="33:33">i</name><operator pos:start="33:34" pos:end="33:35">++</operator></expr></incr>)</control> <block pos:start="33:38" pos:end="88:13">{<block_content pos:start="34:9" pos:end="88:13">
        <expr_stmt pos:start="34:9" pos:end="34:40"><expr pos:start="34:9" pos:end="34:39"><name pos:start="34:9" pos:end="34:24"><name pos:start="34:9" pos:end="34:11">smk</name><operator pos:start="34:12" pos:end="34:13">-&gt;</operator><name pos:start="34:14" pos:end="34:21">frm_size</name><index pos:start="34:22" pos:end="34:24">[<expr pos:start="34:23" pos:end="34:23"><name pos:start="34:23" pos:end="34:23">i</name></expr>]</index></name> <operator pos:start="34:26" pos:end="34:26">=</operator> <call pos:start="34:28" pos:end="34:39"><name pos:start="34:28" pos:end="34:35">get_le32</name><argument_list pos:start="34:36" pos:end="34:39">(<argument pos:start="34:37" pos:end="34:38"><expr pos:start="34:37" pos:end="34:38"><name pos:start="34:37" pos:end="34:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="35:5" pos:end="88:13">for<control pos:start="35:8" pos:end="35:36">(<init pos:start="35:9" pos:end="35:14"><expr pos:start="35:9" pos:end="35:13"><name pos:start="35:9" pos:end="35:9">i</name> <operator pos:start="35:11" pos:end="35:11">=</operator> <literal type="number" pos:start="35:13" pos:end="35:13">0</literal></expr>;</init> <condition pos:start="35:16" pos:end="35:31"><expr pos:start="35:16" pos:end="35:30"><name pos:start="35:16" pos:end="35:16">i</name> <operator pos:start="35:18" pos:end="35:18">&lt;</operator> <name pos:start="35:20" pos:end="35:30"><name pos:start="35:20" pos:end="35:22">smk</name><operator pos:start="35:23" pos:end="35:24">-&gt;</operator><name pos:start="35:25" pos:end="35:30">frames</name></name></expr>;</condition> <incr pos:start="35:33" pos:end="35:35"><expr pos:start="35:33" pos:end="35:35"><name pos:start="35:33" pos:end="35:33">i</name><operator pos:start="35:34" pos:end="35:35">++</operator></expr></incr>)</control> <block pos:start="35:38" pos:end="88:13">{<block_content pos:start="36:9" pos:end="88:13">
        <expr_stmt pos:start="36:9" pos:end="36:41"><expr pos:start="36:9" pos:end="36:40"><name pos:start="36:9" pos:end="36:25"><name pos:start="36:9" pos:end="36:11">smk</name><operator pos:start="36:12" pos:end="36:13">-&gt;</operator><name pos:start="36:14" pos:end="36:22">frm_flags</name><index pos:start="36:23" pos:end="36:25">[<expr pos:start="36:24" pos:end="36:24"><name pos:start="36:24" pos:end="36:24">i</name></expr>]</index></name> <operator pos:start="36:27" pos:end="36:27">=</operator> <call pos:start="36:29" pos:end="36:40"><name pos:start="36:29" pos:end="36:36">get_byte</name><argument_list pos:start="36:37" pos:end="36:40">(<argument pos:start="36:38" pos:end="36:39"><expr pos:start="36:38" pos:end="36:39"><name pos:start="36:38" pos:end="36:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="37:5" pos:end="37:26">/* init video codec */</comment>
    <expr_stmt pos:start="38:5" pos:end="38:29"><expr pos:start="38:5" pos:end="38:28"><name pos:start="38:5" pos:end="38:6">st</name> <operator pos:start="38:8" pos:end="38:8">=</operator> <call pos:start="38:10" pos:end="38:28"><name pos:start="38:10" pos:end="38:22">av_new_stream</name><argument_list pos:start="38:23" pos:end="38:28">(<argument pos:start="38:24" pos:end="38:24"><expr pos:start="38:24" pos:end="38:24"><name pos:start="38:24" pos:end="38:24">s</name></expr></argument>, <argument pos:start="38:27" pos:end="38:27"><expr pos:start="38:27" pos:end="38:27"><literal type="number" pos:start="38:27" pos:end="38:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="39:5" pos:end="40:32"><if pos:start="39:5" pos:end="40:32">if <condition pos:start="39:8" pos:end="39:12">(<expr pos:start="39:9" pos:end="39:11"><operator pos:start="39:9" pos:end="39:9">!</operator><name pos:start="39:10" pos:end="39:11">st</name></expr>)</condition><block type="pseudo" pos:start="40:5" pos:end="40:32"><block_content pos:start="40:5" pos:end="40:32">
    <expr_stmt pos:start="40:5" pos:end="40:32"><expr pos:start="40:5" pos:end="40:31"><name pos:start="40:5" pos:end="40:19"><name pos:start="40:5" pos:end="40:7">smk</name><operator pos:start="40:8" pos:end="40:9">-&gt;</operator><name pos:start="40:10" pos:end="40:19">videoindex</name></name> <operator pos:start="40:21" pos:end="40:21">=</operator> <name pos:start="40:23" pos:end="40:31"><name pos:start="40:23" pos:end="40:24">st</name><operator pos:start="40:25" pos:end="40:26">-&gt;</operator><name pos:start="40:27" pos:end="40:31">index</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <expr_stmt pos:start="41:5" pos:end="41:34"><expr pos:start="41:5" pos:end="41:33"><name pos:start="41:5" pos:end="41:20"><name pos:start="41:5" pos:end="41:6">st</name><operator pos:start="41:7" pos:end="41:8">-&gt;</operator><name pos:start="41:9" pos:end="41:13">codec</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:20">width</name></name> <operator pos:start="41:22" pos:end="41:22">=</operator> <name pos:start="41:24" pos:end="41:33"><name pos:start="41:24" pos:end="41:26">smk</name><operator pos:start="41:27" pos:end="41:28">-&gt;</operator><name pos:start="41:29" pos:end="41:33">width</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="42:5" pos:end="42:36"><expr pos:start="42:5" pos:end="42:35"><name pos:start="42:5" pos:end="42:21"><name pos:start="42:5" pos:end="42:6">st</name><operator pos:start="42:7" pos:end="42:8">-&gt;</operator><name pos:start="42:9" pos:end="42:13">codec</name><operator pos:start="42:14" pos:end="42:15">-&gt;</operator><name pos:start="42:16" pos:end="42:21">height</name></name> <operator pos:start="42:23" pos:end="42:23">=</operator> <name pos:start="42:25" pos:end="42:35"><name pos:start="42:25" pos:end="42:27">smk</name><operator pos:start="42:28" pos:end="42:29">-&gt;</operator><name pos:start="42:30" pos:end="42:35">height</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="43:5" pos:end="43:38"><expr pos:start="43:5" pos:end="43:37"><name pos:start="43:5" pos:end="43:22"><name pos:start="43:5" pos:end="43:6">st</name><operator pos:start="43:7" pos:end="43:8">-&gt;</operator><name pos:start="43:9" pos:end="43:13">codec</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:22">pix_fmt</name></name> <operator pos:start="43:24" pos:end="43:24">=</operator> <name pos:start="43:26" pos:end="43:37">PIX_FMT_PAL8</name></expr>;</expr_stmt>
    <expr_stmt pos:start="44:5" pos:end="44:45"><expr pos:start="44:5" pos:end="44:44"><name pos:start="44:5" pos:end="44:25"><name pos:start="44:5" pos:end="44:6">st</name><operator pos:start="44:7" pos:end="44:8">-&gt;</operator><name pos:start="44:9" pos:end="44:13">codec</name><operator pos:start="44:14" pos:end="44:15">-&gt;</operator><name pos:start="44:16" pos:end="44:25">codec_type</name></name> <operator pos:start="44:27" pos:end="44:27">=</operator> <name pos:start="44:29" pos:end="44:44">CODEC_TYPE_VIDEO</name></expr>;</expr_stmt>
    <expr_stmt pos:start="45:5" pos:end="45:46"><expr pos:start="45:5" pos:end="45:45"><name pos:start="45:5" pos:end="45:23"><name pos:start="45:5" pos:end="45:6">st</name><operator pos:start="45:7" pos:end="45:8">-&gt;</operator><name pos:start="45:9" pos:end="45:13">codec</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:23">codec_id</name></name> <operator pos:start="45:25" pos:end="45:25">=</operator> <name pos:start="45:27" pos:end="45:45">CODEC_ID_SMACKVIDEO</name></expr>;</expr_stmt>
    <expr_stmt pos:start="46:5" pos:end="46:40"><expr pos:start="46:5" pos:end="46:39"><name pos:start="46:5" pos:end="46:24"><name pos:start="46:5" pos:end="46:6">st</name><operator pos:start="46:7" pos:end="46:8">-&gt;</operator><name pos:start="46:9" pos:end="46:13">codec</name><operator pos:start="46:14" pos:end="46:15">-&gt;</operator><name pos:start="46:16" pos:end="46:24">codec_tag</name></name> <operator pos:start="46:26" pos:end="46:26">=</operator> <name pos:start="46:28" pos:end="46:39"><name pos:start="46:28" pos:end="46:30">smk</name><operator pos:start="46:31" pos:end="46:32">-&gt;</operator><name pos:start="46:33" pos:end="46:39">is_ver4</name></name></expr>;</expr_stmt>
    <comment type="block" pos:start="47:5" pos:end="47:50">/* Smacker uses 100000 as internal timebase */</comment>
    <if_stmt pos:start="48:5" pos:end="51:28"><if pos:start="48:5" pos:end="49:37">if<condition pos:start="48:7" pos:end="48:24">(<expr pos:start="48:8" pos:end="48:23"><name pos:start="48:8" pos:end="48:19"><name pos:start="48:8" pos:end="48:10">smk</name><operator pos:start="48:11" pos:end="48:12">-&gt;</operator><name pos:start="48:13" pos:end="48:19">pts_inc</name></name> <operator pos:start="48:21" pos:end="48:21">&lt;</operator> <literal type="number" pos:start="48:23" pos:end="48:23">0</literal></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:37"><block_content pos:start="49:9" pos:end="49:37">
        <expr_stmt pos:start="49:9" pos:end="49:37"><expr pos:start="49:9" pos:end="49:36"><name pos:start="49:9" pos:end="49:20"><name pos:start="49:9" pos:end="49:11">smk</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:20">pts_inc</name></name> <operator pos:start="49:22" pos:end="49:22">=</operator> <operator pos:start="49:24" pos:end="49:24">-</operator><name pos:start="49:25" pos:end="49:36"><name pos:start="49:25" pos:end="49:27">smk</name><operator pos:start="49:28" pos:end="49:29">-&gt;</operator><name pos:start="49:30" pos:end="49:36">pts_inc</name></name></expr>;</expr_stmt></block_content></block></if>
    <else pos:start="50:5" pos:end="51:28">else<block type="pseudo" pos:start="51:9" pos:end="51:28"><block_content pos:start="51:9" pos:end="51:28">
        <expr_stmt pos:start="51:9" pos:end="51:28"><expr pos:start="51:9" pos:end="51:27"><name pos:start="51:9" pos:end="51:20"><name pos:start="51:9" pos:end="51:11">smk</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:20">pts_inc</name></name> <operator pos:start="51:22" pos:end="51:23">*=</operator> <literal type="number" pos:start="51:25" pos:end="51:27">100</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <expr_stmt pos:start="52:5" pos:end="52:19"><expr pos:start="52:5" pos:end="52:18"><name pos:start="52:5" pos:end="52:9">tbase</name> <operator pos:start="52:11" pos:end="52:11">=</operator> <literal type="number" pos:start="52:13" pos:end="52:18">100000</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="53:5" pos:end="53:71"><expr pos:start="53:5" pos:end="53:70"><call pos:start="53:5" pos:end="53:70"><name pos:start="53:5" pos:end="53:13">av_reduce</name><argument_list pos:start="53:14" pos:end="53:70">(<argument pos:start="53:15" pos:end="53:20"><expr pos:start="53:15" pos:end="53:20"><operator pos:start="53:15" pos:end="53:15">&amp;</operator><name pos:start="53:16" pos:end="53:20">tbase</name></expr></argument>, <argument pos:start="53:23" pos:end="53:35"><expr pos:start="53:23" pos:end="53:35"><operator pos:start="53:23" pos:end="53:23">&amp;</operator><name pos:start="53:24" pos:end="53:35"><name pos:start="53:24" pos:end="53:26">smk</name><operator pos:start="53:27" pos:end="53:28">-&gt;</operator><name pos:start="53:29" pos:end="53:35">pts_inc</name></name></expr></argument>, <argument pos:start="53:38" pos:end="53:42"><expr pos:start="53:38" pos:end="53:42"><name pos:start="53:38" pos:end="53:42">tbase</name></expr></argument>, <argument pos:start="53:45" pos:end="53:56"><expr pos:start="53:45" pos:end="53:56"><name pos:start="53:45" pos:end="53:56"><name pos:start="53:45" pos:end="53:47">smk</name><operator pos:start="53:48" pos:end="53:49">-&gt;</operator><name pos:start="53:50" pos:end="53:56">pts_inc</name></name></expr></argument>, <argument pos:start="53:59" pos:end="53:69"><expr pos:start="53:59" pos:end="53:69"><operator pos:start="53:59" pos:end="53:59">(</operator><literal type="number" pos:start="53:60" pos:end="53:62">1UL</literal><operator pos:start="53:63" pos:end="53:64">&lt;&lt;</operator><literal type="number" pos:start="53:65" pos:end="53:66">31</literal><operator pos:start="53:67" pos:end="53:67">)</operator><operator pos:start="53:68" pos:end="53:68">-</operator><literal type="number" pos:start="53:69" pos:end="53:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="54:5" pos:end="54:49"><expr pos:start="54:5" pos:end="54:48"><call pos:start="54:5" pos:end="54:48"><name pos:start="54:5" pos:end="54:19">av_set_pts_info</name><argument_list pos:start="54:20" pos:end="54:48">(<argument pos:start="54:21" pos:end="54:22"><expr pos:start="54:21" pos:end="54:22"><name pos:start="54:21" pos:end="54:22">st</name></expr></argument>, <argument pos:start="54:25" pos:end="54:26"><expr pos:start="54:25" pos:end="54:26"><literal type="number" pos:start="54:25" pos:end="54:26">33</literal></expr></argument>, <argument pos:start="54:29" pos:end="54:40"><expr pos:start="54:29" pos:end="54:40"><name pos:start="54:29" pos:end="54:40"><name pos:start="54:29" pos:end="54:31">smk</name><operator pos:start="54:32" pos:end="54:33">-&gt;</operator><name pos:start="54:34" pos:end="54:40">pts_inc</name></name></expr></argument>, <argument pos:start="54:43" pos:end="54:47"><expr pos:start="54:43" pos:end="54:47"><name pos:start="54:43" pos:end="54:47">tbase</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="55:5" pos:end="55:39">/* handle possible audio streams */</comment>
    <for pos:start="56:5" pos:end="88:13">for<control pos:start="56:8" pos:end="56:26">(<init pos:start="56:9" pos:end="56:14"><expr pos:start="56:9" pos:end="56:13"><name pos:start="56:9" pos:end="56:9">i</name> <operator pos:start="56:11" pos:end="56:11">=</operator> <literal type="number" pos:start="56:13" pos:end="56:13">0</literal></expr>;</init> <condition pos:start="56:16" pos:end="56:21"><expr pos:start="56:16" pos:end="56:20"><name pos:start="56:16" pos:end="56:16">i</name> <operator pos:start="56:18" pos:end="56:18">&lt;</operator> <literal type="number" pos:start="56:20" pos:end="56:20">7</literal></expr>;</condition> <incr pos:start="56:23" pos:end="56:25"><expr pos:start="56:23" pos:end="56:25"><name pos:start="56:23" pos:end="56:23">i</name><operator pos:start="56:24" pos:end="56:25">++</operator></expr></incr>)</control> <block pos:start="56:28" pos:end="88:13">{<block_content pos:start="57:9" pos:end="88:13">
        <expr_stmt pos:start="57:9" pos:end="57:29"><expr pos:start="57:9" pos:end="57:28"><name pos:start="57:9" pos:end="57:23"><name pos:start="57:9" pos:end="57:11">smk</name><operator pos:start="57:12" pos:end="57:13">-&gt;</operator><name pos:start="57:14" pos:end="57:20">indexes</name><index pos:start="57:21" pos:end="57:23">[<expr pos:start="57:22" pos:end="57:22"><name pos:start="57:22" pos:end="57:22">i</name></expr>]</index></name> <operator pos:start="57:25" pos:end="57:25">=</operator> <operator pos:start="57:27" pos:end="57:27">-</operator><literal type="number" pos:start="57:28" pos:end="57:28">1</literal></expr>;</expr_stmt>
        <if_stmt pos:start="58:9" pos:end="88:13"><if pos:start="58:9" pos:end="88:13">if<condition pos:start="58:11" pos:end="58:76">(<expr pos:start="58:12" pos:end="58:75"><operator pos:start="58:12" pos:end="58:12">(</operator><name pos:start="58:13" pos:end="58:25"><name pos:start="58:13" pos:end="58:15">smk</name><operator pos:start="58:16" pos:end="58:17">-&gt;</operator><name pos:start="58:18" pos:end="58:22">rates</name><index pos:start="58:23" pos:end="58:25">[<expr pos:start="58:24" pos:end="58:24"><name pos:start="58:24" pos:end="58:24">i</name></expr>]</index></name> <operator pos:start="58:27" pos:end="58:27">&amp;</operator> <literal type="number" pos:start="58:29" pos:end="58:36">0xFFFFFF</literal><operator pos:start="58:37" pos:end="58:37">)</operator> <operator pos:start="58:39" pos:end="58:40">&amp;&amp;</operator> <operator pos:start="58:42" pos:end="58:42">!</operator><operator pos:start="58:43" pos:end="58:43">(</operator><name pos:start="58:44" pos:end="58:56"><name pos:start="58:44" pos:end="58:46">smk</name><operator pos:start="58:47" pos:end="58:48">-&gt;</operator><name pos:start="58:49" pos:end="58:53">rates</name><index pos:start="58:54" pos:end="58:56">[<expr pos:start="58:55" pos:end="58:55"><name pos:start="58:55" pos:end="58:55">i</name></expr>]</index></name> <operator pos:start="58:58" pos:end="58:58">&amp;</operator> <name pos:start="58:60" pos:end="58:74">SMK_AUD_BINKAUD</name><operator pos:start="58:75" pos:end="58:75">)</operator></expr>)</condition><block pos:start="58:77" pos:end="88:13">{<block_content pos:start="59:13" pos:end="88:13">
            <expr_stmt pos:start="59:13" pos:end="59:41"><expr pos:start="59:13" pos:end="59:40"><name pos:start="59:13" pos:end="59:18"><name pos:start="59:13" pos:end="59:15">ast</name><index pos:start="59:16" pos:end="59:18">[<expr pos:start="59:17" pos:end="59:17"><name pos:start="59:17" pos:end="59:17">i</name></expr>]</index></name> <operator pos:start="59:20" pos:end="59:20">=</operator> <call pos:start="59:22" pos:end="59:40"><name pos:start="59:22" pos:end="59:34">av_new_stream</name><argument_list pos:start="59:35" pos:end="59:40">(<argument pos:start="59:36" pos:end="59:36"><expr pos:start="59:36" pos:end="59:36"><name pos:start="59:36" pos:end="59:36">s</name></expr></argument>, <argument pos:start="59:39" pos:end="59:39"><expr pos:start="59:39" pos:end="59:39"><literal type="number" pos:start="59:39" pos:end="59:39">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="60:13" pos:end="60:44"><expr pos:start="60:13" pos:end="60:43"><name pos:start="60:13" pos:end="60:27"><name pos:start="60:13" pos:end="60:15">smk</name><operator pos:start="60:16" pos:end="60:17">-&gt;</operator><name pos:start="60:18" pos:end="60:24">indexes</name><index pos:start="60:25" pos:end="60:27">[<expr pos:start="60:26" pos:end="60:26"><name pos:start="60:26" pos:end="60:26">i</name></expr>]</index></name> <operator pos:start="60:29" pos:end="60:29">=</operator> <name pos:start="60:31" pos:end="60:36"><name pos:start="60:31" pos:end="60:33">ast</name><index pos:start="60:34" pos:end="60:36">[<expr pos:start="60:35" pos:end="60:35"><name pos:start="60:35" pos:end="60:35">i</name></expr>]</index></name><operator pos:start="60:37" pos:end="60:38">-&gt;</operator><name pos:start="60:39" pos:end="60:43">index</name></expr>;</expr_stmt>
            <expr_stmt pos:start="61:13" pos:end="61:61"><expr pos:start="61:13" pos:end="61:60"><call pos:start="61:13" pos:end="61:60"><name pos:start="61:13" pos:end="61:27">av_set_pts_info</name><argument_list pos:start="61:28" pos:end="61:60">(<argument pos:start="61:29" pos:end="61:34"><expr pos:start="61:29" pos:end="61:34"><name pos:start="61:29" pos:end="61:34"><name pos:start="61:29" pos:end="61:31">ast</name><index pos:start="61:32" pos:end="61:34">[<expr pos:start="61:33" pos:end="61:33"><name pos:start="61:33" pos:end="61:33">i</name></expr>]</index></name></expr></argument>, <argument pos:start="61:37" pos:end="61:38"><expr pos:start="61:37" pos:end="61:38"><literal type="number" pos:start="61:37" pos:end="61:38">33</literal></expr></argument>, <argument pos:start="61:41" pos:end="61:52"><expr pos:start="61:41" pos:end="61:52"><name pos:start="61:41" pos:end="61:52"><name pos:start="61:41" pos:end="61:43">smk</name><operator pos:start="61:44" pos:end="61:45">-&gt;</operator><name pos:start="61:46" pos:end="61:52">pts_inc</name></name></expr></argument>, <argument pos:start="61:55" pos:end="61:59"><expr pos:start="61:55" pos:end="61:59"><name pos:start="61:55" pos:end="61:59">tbase</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="62:13" pos:end="62:57"><expr pos:start="62:13" pos:end="62:56"><name pos:start="62:13" pos:end="62:18"><name pos:start="62:13" pos:end="62:15">ast</name><index pos:start="62:16" pos:end="62:18">[<expr pos:start="62:17" pos:end="62:17"><name pos:start="62:17" pos:end="62:17">i</name></expr>]</index></name><operator pos:start="62:19" pos:end="62:20">-&gt;</operator><name pos:start="62:21" pos:end="62:37"><name pos:start="62:21" pos:end="62:25">codec</name><operator pos:start="62:26" pos:end="62:27">-&gt;</operator><name pos:start="62:28" pos:end="62:37">codec_type</name></name> <operator pos:start="62:39" pos:end="62:39">=</operator> <name pos:start="62:41" pos:end="62:56">CODEC_TYPE_AUDIO</name></expr>;</expr_stmt>
            <expr_stmt pos:start="63:13" pos:end="63:111"><expr pos:start="63:13" pos:end="63:110"><name pos:start="63:13" pos:end="63:18"><name pos:start="63:13" pos:end="63:15">ast</name><index pos:start="63:16" pos:end="63:18">[<expr pos:start="63:17" pos:end="63:17"><name pos:start="63:17" pos:end="63:17">i</name></expr>]</index></name><operator pos:start="63:19" pos:end="63:20">-&gt;</operator><name pos:start="63:21" pos:end="63:35"><name pos:start="63:21" pos:end="63:25">codec</name><operator pos:start="63:26" pos:end="63:27">-&gt;</operator><name pos:start="63:28" pos:end="63:35">codec_id</name></name> <operator pos:start="63:37" pos:end="63:37">=</operator> <ternary pos:start="63:39" pos:end="63:110"><condition pos:start="63:39" pos:end="63:72"><expr pos:start="63:39" pos:end="63:70"><operator pos:start="63:39" pos:end="63:39">(</operator><name pos:start="63:40" pos:end="63:52"><name pos:start="63:40" pos:end="63:42">smk</name><operator pos:start="63:43" pos:end="63:44">-&gt;</operator><name pos:start="63:45" pos:end="63:49">rates</name><index pos:start="63:50" pos:end="63:52">[<expr pos:start="63:51" pos:end="63:51"><name pos:start="63:51" pos:end="63:51">i</name></expr>]</index></name> <operator pos:start="63:54" pos:end="63:54">&amp;</operator> <name pos:start="63:56" pos:end="63:69">SMK_AUD_PACKED</name><operator pos:start="63:70" pos:end="63:70">)</operator></expr> ?</condition><then pos:start="63:74" pos:end="63:92"> <expr pos:start="63:74" pos:end="63:92"><name pos:start="63:74" pos:end="63:92">CODEC_ID_SMACKAUDIO</name></expr> </then><else pos:start="63:94" pos:end="63:110">: <expr pos:start="63:96" pos:end="63:110"><name pos:start="63:96" pos:end="63:110">CODEC_ID_PCM_U8</name></expr></else></ternary></expr>;</expr_stmt>
            <expr_stmt pos:start="64:13" pos:end="64:41"><expr pos:start="64:13" pos:end="64:40"><name pos:start="64:13" pos:end="64:18"><name pos:start="64:13" pos:end="64:15">ast</name><index pos:start="64:16" pos:end="64:18">[<expr pos:start="64:17" pos:end="64:17"><name pos:start="64:17" pos:end="64:17">i</name></expr>]</index></name><operator pos:start="64:19" pos:end="64:20">-&gt;</operator><name pos:start="64:21" pos:end="64:36"><name pos:start="64:21" pos:end="64:25">codec</name><operator pos:start="64:26" pos:end="64:27">-&gt;</operator><name pos:start="64:28" pos:end="64:36">codec_tag</name></name> <operator pos:start="64:38" pos:end="64:38">=</operator> <literal type="number" pos:start="64:40" pos:end="64:40">0</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="65:13" pos:end="65:79"><expr pos:start="65:13" pos:end="65:78"><name pos:start="65:13" pos:end="65:18"><name pos:start="65:13" pos:end="65:15">ast</name><index pos:start="65:16" pos:end="65:18">[<expr pos:start="65:17" pos:end="65:17"><name pos:start="65:17" pos:end="65:17">i</name></expr>]</index></name><operator pos:start="65:19" pos:end="65:20">-&gt;</operator><name pos:start="65:21" pos:end="65:35"><name pos:start="65:21" pos:end="65:25">codec</name><operator pos:start="65:26" pos:end="65:27">-&gt;</operator><name pos:start="65:28" pos:end="65:35">channels</name></name> <operator pos:start="65:37" pos:end="65:37">=</operator> <ternary pos:start="65:39" pos:end="65:78"><condition pos:start="65:39" pos:end="65:72"><expr pos:start="65:39" pos:end="65:70"><operator pos:start="65:39" pos:end="65:39">(</operator><name pos:start="65:40" pos:end="65:52"><name pos:start="65:40" pos:end="65:42">smk</name><operator pos:start="65:43" pos:end="65:44">-&gt;</operator><name pos:start="65:45" pos:end="65:49">rates</name><index pos:start="65:50" pos:end="65:52">[<expr pos:start="65:51" pos:end="65:51"><name pos:start="65:51" pos:end="65:51">i</name></expr>]</index></name> <operator pos:start="65:54" pos:end="65:54">&amp;</operator> <name pos:start="65:56" pos:end="65:69">SMK_AUD_STEREO</name><operator pos:start="65:70" pos:end="65:70">)</operator></expr> ?</condition><then pos:start="65:74" pos:end="65:74"> <expr pos:start="65:74" pos:end="65:74"><literal type="number" pos:start="65:74" pos:end="65:74">2</literal></expr> </then><else pos:start="65:76" pos:end="65:78">: <expr pos:start="65:78" pos:end="65:78"><literal type="number" pos:start="65:78" pos:end="65:78">1</literal></expr></else></ternary></expr>;</expr_stmt>
            <expr_stmt pos:start="66:13" pos:end="66:66"><expr pos:start="66:13" pos:end="66:65"><name pos:start="66:13" pos:end="66:18"><name pos:start="66:13" pos:end="66:15">ast</name><index pos:start="66:16" pos:end="66:18">[<expr pos:start="66:17" pos:end="66:17"><name pos:start="66:17" pos:end="66:17">i</name></expr>]</index></name><operator pos:start="66:19" pos:end="66:20">-&gt;</operator><name pos:start="66:21" pos:end="66:38"><name pos:start="66:21" pos:end="66:25">codec</name><operator pos:start="66:26" pos:end="66:27">-&gt;</operator><name pos:start="66:28" pos:end="66:38">sample_rate</name></name> <operator pos:start="66:40" pos:end="66:40">=</operator> <name pos:start="66:42" pos:end="66:54"><name pos:start="66:42" pos:end="66:44">smk</name><operator pos:start="66:45" pos:end="66:46">-&gt;</operator><name pos:start="66:47" pos:end="66:51">rates</name><index pos:start="66:52" pos:end="66:54">[<expr pos:start="66:53" pos:end="66:53"><name pos:start="66:53" pos:end="66:53">i</name></expr>]</index></name> <operator pos:start="66:56" pos:end="66:56">&amp;</operator> <literal type="number" pos:start="66:58" pos:end="66:65">0xFFFFFF</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="67:13" pos:end="67:87"><expr pos:start="67:13" pos:end="67:86"><name pos:start="67:13" pos:end="67:18"><name pos:start="67:13" pos:end="67:15">ast</name><index pos:start="67:16" pos:end="67:18">[<expr pos:start="67:17" pos:end="67:17"><name pos:start="67:17" pos:end="67:17">i</name></expr>]</index></name><operator pos:start="67:19" pos:end="67:20">-&gt;</operator><name pos:start="67:21" pos:end="67:42"><name pos:start="67:21" pos:end="67:25">codec</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:42">bits_per_sample</name></name> <operator pos:start="67:44" pos:end="67:44">=</operator> <ternary pos:start="67:46" pos:end="67:86"><condition pos:start="67:46" pos:end="67:79"><expr pos:start="67:46" pos:end="67:77"><operator pos:start="67:46" pos:end="67:46">(</operator><name pos:start="67:47" pos:end="67:59"><name pos:start="67:47" pos:end="67:49">smk</name><operator pos:start="67:50" pos:end="67:51">-&gt;</operator><name pos:start="67:52" pos:end="67:56">rates</name><index pos:start="67:57" pos:end="67:59">[<expr pos:start="67:58" pos:end="67:58"><name pos:start="67:58" pos:end="67:58">i</name></expr>]</index></name> <operator pos:start="67:61" pos:end="67:61">&amp;</operator> <name pos:start="67:63" pos:end="67:76">SMK_AUD_16BITS</name><operator pos:start="67:77" pos:end="67:77">)</operator></expr> ?</condition><then pos:start="67:81" pos:end="67:82"> <expr pos:start="67:81" pos:end="67:82"><literal type="number" pos:start="67:81" pos:end="67:82">16</literal></expr> </then><else pos:start="67:84" pos:end="67:86">: <expr pos:start="67:86" pos:end="67:86"><literal type="number" pos:start="67:86" pos:end="67:86">8</literal></expr></else></ternary></expr>;</expr_stmt>
            <if_stmt pos:start="68:13" pos:end="69:61"><if pos:start="68:13" pos:end="69:61">if<condition pos:start="68:15" pos:end="68:98">(<expr pos:start="68:16" pos:end="68:97"><name pos:start="68:16" pos:end="68:21"><name pos:start="68:16" pos:end="68:18">ast</name><index pos:start="68:19" pos:end="68:21">[<expr pos:start="68:20" pos:end="68:20"><name pos:start="68:20" pos:end="68:20">i</name></expr>]</index></name><operator pos:start="68:22" pos:end="68:23">-&gt;</operator><name pos:start="68:24" pos:end="68:45"><name pos:start="68:24" pos:end="68:28">codec</name><operator pos:start="68:29" pos:end="68:30">-&gt;</operator><name pos:start="68:31" pos:end="68:45">bits_per_sample</name></name> <operator pos:start="68:47" pos:end="68:48">==</operator> <literal type="number" pos:start="68:50" pos:end="68:51">16</literal> <operator pos:start="68:53" pos:end="68:54">&amp;&amp;</operator> <name pos:start="68:56" pos:end="68:61"><name pos:start="68:56" pos:end="68:58">ast</name><index pos:start="68:59" pos:end="68:61">[<expr pos:start="68:60" pos:end="68:60"><name pos:start="68:60" pos:end="68:60">i</name></expr>]</index></name><operator pos:start="68:62" pos:end="68:63">-&gt;</operator><name pos:start="68:64" pos:end="68:78"><name pos:start="68:64" pos:end="68:68">codec</name><operator pos:start="68:69" pos:end="68:70">-&gt;</operator><name pos:start="68:71" pos:end="68:78">codec_id</name></name> <operator pos:start="68:80" pos:end="68:81">==</operator> <name pos:start="68:83" pos:end="68:97">CODEC_ID_PCM_U8</name></expr>)</condition><block type="pseudo" pos:start="69:17" pos:end="69:61"><block_content pos:start="69:17" pos:end="69:61">
                <expr_stmt pos:start="69:17" pos:end="69:61"><expr pos:start="69:17" pos:end="69:60"><name pos:start="69:17" pos:end="69:22"><name pos:start="69:17" pos:end="69:19">ast</name><index pos:start="69:20" pos:end="69:22">[<expr pos:start="69:21" pos:end="69:21"><name pos:start="69:21" pos:end="69:21">i</name></expr>]</index></name><operator pos:start="69:23" pos:end="69:24">-&gt;</operator><name pos:start="69:25" pos:end="69:39"><name pos:start="69:25" pos:end="69:29">codec</name><operator pos:start="69:30" pos:end="69:31">-&gt;</operator><name pos:start="69:32" pos:end="69:39">codec_id</name></name> <operator pos:start="69:41" pos:end="69:41">=</operator> <name pos:start="69:43" pos:end="69:60">CODEC_ID_PCM_S16LE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <comment type="block" pos:start="70:5" pos:end="70:67">/* load trees to extradata, they will be unpacked by decoder */</comment>
    <expr_stmt pos:start="71:5" pos:end="71:57"><expr pos:start="71:5" pos:end="71:56"><name pos:start="71:5" pos:end="71:24"><name pos:start="71:5" pos:end="71:6">st</name><operator pos:start="71:7" pos:end="71:8">-&gt;</operator><name pos:start="71:9" pos:end="71:13">codec</name><operator pos:start="71:14" pos:end="71:15">-&gt;</operator><name pos:start="71:16" pos:end="71:24">extradata</name></name> <operator pos:start="71:26" pos:end="71:26">=</operator> <call pos:start="71:28" pos:end="71:56"><name pos:start="71:28" pos:end="71:36">av_malloc</name><argument_list pos:start="71:37" pos:end="71:56">(<argument pos:start="71:38" pos:end="71:55"><expr pos:start="71:38" pos:end="71:55"><name pos:start="71:38" pos:end="71:50"><name pos:start="71:38" pos:end="71:40">smk</name><operator pos:start="71:41" pos:end="71:42">-&gt;</operator><name pos:start="71:43" pos:end="71:50">treesize</name></name> <operator pos:start="71:52" pos:end="71:52">+</operator> <literal type="number" pos:start="71:54" pos:end="71:55">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="72:5" pos:end="72:51"><expr pos:start="72:5" pos:end="72:50"><name pos:start="72:5" pos:end="72:29"><name pos:start="72:5" pos:end="72:6">st</name><operator pos:start="72:7" pos:end="72:8">-&gt;</operator><name pos:start="72:9" pos:end="72:13">codec</name><operator pos:start="72:14" pos:end="72:15">-&gt;</operator><name pos:start="72:16" pos:end="72:29">extradata_size</name></name> <operator pos:start="72:31" pos:end="72:31">=</operator> <name pos:start="72:33" pos:end="72:45"><name pos:start="72:33" pos:end="72:35">smk</name><operator pos:start="72:36" pos:end="72:37">-&gt;</operator><name pos:start="72:38" pos:end="72:45">treesize</name></name> <operator pos:start="72:47" pos:end="72:47">+</operator> <literal type="number" pos:start="72:49" pos:end="72:50">16</literal></expr>;</expr_stmt>
    <if_stmt pos:start="73:5" pos:end="88:13"><if pos:start="73:5" pos:end="88:13">if<condition pos:start="73:7" pos:end="73:29">(<expr pos:start="73:8" pos:end="73:28"><operator pos:start="73:8" pos:end="73:8">!</operator><name pos:start="73:9" pos:end="73:28"><name pos:start="73:9" pos:end="73:10">st</name><operator pos:start="73:11" pos:end="73:12">-&gt;</operator><name pos:start="73:13" pos:end="73:17">codec</name><operator pos:start="73:18" pos:end="73:19">-&gt;</operator><name pos:start="73:20" pos:end="73:28">extradata</name></name></expr>)</condition><block pos:start="73:30" pos:end="88:13">{<block_content pos:start="74:9" pos:end="88:13">
        <expr_stmt pos:start="74:9" pos:end="74:95"><expr pos:start="74:9" pos:end="74:94"><call pos:start="74:9" pos:end="74:94"><name pos:start="74:9" pos:end="74:14">av_log</name><argument_list pos:start="74:15" pos:end="74:94">(<argument pos:start="74:16" pos:end="74:16"><expr pos:start="74:16" pos:end="74:16"><name pos:start="74:16" pos:end="74:16">s</name></expr></argument>, <argument pos:start="74:19" pos:end="74:30"><expr pos:start="74:19" pos:end="74:30"><name pos:start="74:19" pos:end="74:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="74:33" pos:end="74:73"><expr pos:start="74:33" pos:end="74:73"><literal type="string" pos:start="74:33" pos:end="74:73">"Cannot allocate %i bytes of extradata\n"</literal></expr></argument>, <argument pos:start="74:76" pos:end="74:93"><expr pos:start="74:76" pos:end="74:93"><name pos:start="74:76" pos:end="74:88"><name pos:start="74:76" pos:end="74:78">smk</name><operator pos:start="74:79" pos:end="74:80">-&gt;</operator><name pos:start="74:81" pos:end="74:88">treesize</name></name> <operator pos:start="74:90" pos:end="74:90">+</operator> <literal type="number" pos:start="74:92" pos:end="74:93">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="75:9" pos:end="75:31"><expr pos:start="75:9" pos:end="75:30"><call pos:start="75:9" pos:end="75:30"><name pos:start="75:9" pos:end="75:15">av_free</name><argument_list pos:start="75:16" pos:end="75:30">(<argument pos:start="75:17" pos:end="75:29"><expr pos:start="75:17" pos:end="75:29"><name pos:start="75:17" pos:end="75:29"><name pos:start="75:17" pos:end="75:19">smk</name><operator pos:start="75:20" pos:end="75:21">-&gt;</operator><name pos:start="75:22" pos:end="75:29">frm_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="76:9" pos:end="76:32"><expr pos:start="76:9" pos:end="76:31"><call pos:start="76:9" pos:end="76:31"><name pos:start="76:9" pos:end="76:15">av_free</name><argument_list pos:start="76:16" pos:end="76:31">(<argument pos:start="76:17" pos:end="76:30"><expr pos:start="76:17" pos:end="76:30"><name pos:start="76:17" pos:end="76:30"><name pos:start="76:17" pos:end="76:19">smk</name><operator pos:start="76:20" pos:end="76:21">-&gt;</operator><name pos:start="76:22" pos:end="76:30">frm_flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="77:5" pos:end="77:84"><expr pos:start="77:5" pos:end="77:83"><name pos:start="77:5" pos:end="77:7">ret</name> <operator pos:start="77:9" pos:end="77:9">=</operator> <call pos:start="77:11" pos:end="77:83"><name pos:start="77:11" pos:end="77:20">get_buffer</name><argument_list pos:start="77:21" pos:end="77:83">(<argument pos:start="77:22" pos:end="77:23"><expr pos:start="77:22" pos:end="77:23"><name pos:start="77:22" pos:end="77:23">pb</name></expr></argument>, <argument pos:start="77:26" pos:end="77:50"><expr pos:start="77:26" pos:end="77:50"><name pos:start="77:26" pos:end="77:45"><name pos:start="77:26" pos:end="77:27">st</name><operator pos:start="77:28" pos:end="77:29">-&gt;</operator><name pos:start="77:30" pos:end="77:34">codec</name><operator pos:start="77:35" pos:end="77:36">-&gt;</operator><name pos:start="77:37" pos:end="77:45">extradata</name></name> <operator pos:start="77:47" pos:end="77:47">+</operator> <literal type="number" pos:start="77:49" pos:end="77:50">16</literal></expr></argument>, <argument pos:start="77:53" pos:end="77:82"><expr pos:start="77:53" pos:end="77:82"><name pos:start="77:53" pos:end="77:77"><name pos:start="77:53" pos:end="77:54">st</name><operator pos:start="77:55" pos:end="77:56">-&gt;</operator><name pos:start="77:57" pos:end="77:61">codec</name><operator pos:start="77:62" pos:end="77:63">-&gt;</operator><name pos:start="77:64" pos:end="77:77">extradata_size</name></name> <operator pos:start="77:79" pos:end="77:79">-</operator> <literal type="number" pos:start="77:81" pos:end="77:82">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="78:5" pos:end="88:13"><if pos:start="78:5" pos:end="88:13">if<condition pos:start="78:7" pos:end="78:45">(<expr pos:start="78:8" pos:end="78:44"><name pos:start="78:8" pos:end="78:10">ret</name> <operator pos:start="78:12" pos:end="78:13">!=</operator> <name pos:start="78:15" pos:end="78:39"><name pos:start="78:15" pos:end="78:16">st</name><operator pos:start="78:17" pos:end="78:18">-&gt;</operator><name pos:start="78:19" pos:end="78:23">codec</name><operator pos:start="78:24" pos:end="78:25">-&gt;</operator><name pos:start="78:26" pos:end="78:39">extradata_size</name></name> <operator pos:start="78:41" pos:end="78:41">-</operator> <literal type="number" pos:start="78:43" pos:end="78:44">16</literal></expr>)</condition><block pos:start="78:46" pos:end="88:13">{<block_content pos:start="79:9" pos:end="88:13">
        <expr_stmt pos:start="79:9" pos:end="79:31"><expr pos:start="79:9" pos:end="79:30"><call pos:start="79:9" pos:end="79:30"><name pos:start="79:9" pos:end="79:15">av_free</name><argument_list pos:start="79:16" pos:end="79:30">(<argument pos:start="79:17" pos:end="79:29"><expr pos:start="79:17" pos:end="79:29"><name pos:start="79:17" pos:end="79:29"><name pos:start="79:17" pos:end="79:19">smk</name><operator pos:start="79:20" pos:end="79:21">-&gt;</operator><name pos:start="79:22" pos:end="79:29">frm_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="80:9" pos:end="80:32"><expr pos:start="80:9" pos:end="80:31"><call pos:start="80:9" pos:end="80:31"><name pos:start="80:9" pos:end="80:15">av_free</name><argument_list pos:start="80:16" pos:end="80:31">(<argument pos:start="80:17" pos:end="80:30"><expr pos:start="80:17" pos:end="80:30"><name pos:start="80:17" pos:end="80:30"><name pos:start="80:17" pos:end="80:19">smk</name><operator pos:start="80:20" pos:end="80:21">-&gt;</operator><name pos:start="80:22" pos:end="80:30">frm_flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="81:9" pos:end="81:26">return <expr pos:start="81:16" pos:end="81:25"><name pos:start="81:16" pos:end="81:25">AVERROR_IO</name></expr>;</return>
    <expr_stmt pos:start="82:5" pos:end="82:67"><expr pos:start="82:5" pos:end="82:66"><operator pos:start="82:5" pos:end="82:5">(</operator><operator pos:start="82:6" pos:end="82:6">(</operator><name pos:start="82:7" pos:end="82:13">int32_t</name><operator pos:start="82:14" pos:end="82:14">*</operator><operator pos:start="82:15" pos:end="82:15">)</operator><name pos:start="82:16" pos:end="82:35"><name pos:start="82:16" pos:end="82:17">st</name><operator pos:start="82:18" pos:end="82:19">-&gt;</operator><name pos:start="82:20" pos:end="82:24">codec</name><operator pos:start="82:25" pos:end="82:26">-&gt;</operator><name pos:start="82:27" pos:end="82:35">extradata</name></name><operator pos:start="82:36" pos:end="82:36">)</operator><index pos:start="82:37" pos:end="82:39">[<expr pos:start="82:38" pos:end="82:38"><literal type="number" pos:start="82:38" pos:end="82:38">0</literal></expr>]</index> <operator pos:start="82:41" pos:end="82:41">=</operator> <call pos:start="82:43" pos:end="82:66"><name pos:start="82:43" pos:end="82:50">le2me_32</name><argument_list pos:start="82:51" pos:end="82:66">(<argument pos:start="82:52" pos:end="82:65"><expr pos:start="82:52" pos:end="82:65"><name pos:start="82:52" pos:end="82:65"><name pos:start="82:52" pos:end="82:54">smk</name><operator pos:start="82:55" pos:end="82:56">-&gt;</operator><name pos:start="82:57" pos:end="82:65">mmap_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="83:5" pos:end="83:67"><expr pos:start="83:5" pos:end="83:66"><operator pos:start="83:5" pos:end="83:5">(</operator><operator pos:start="83:6" pos:end="83:6">(</operator><name pos:start="83:7" pos:end="83:13">int32_t</name><operator pos:start="83:14" pos:end="83:14">*</operator><operator pos:start="83:15" pos:end="83:15">)</operator><name pos:start="83:16" pos:end="83:35"><name pos:start="83:16" pos:end="83:17">st</name><operator pos:start="83:18" pos:end="83:19">-&gt;</operator><name pos:start="83:20" pos:end="83:24">codec</name><operator pos:start="83:25" pos:end="83:26">-&gt;</operator><name pos:start="83:27" pos:end="83:35">extradata</name></name><operator pos:start="83:36" pos:end="83:36">)</operator><index pos:start="83:37" pos:end="83:39">[<expr pos:start="83:38" pos:end="83:38"><literal type="number" pos:start="83:38" pos:end="83:38">1</literal></expr>]</index> <operator pos:start="83:41" pos:end="83:41">=</operator> <call pos:start="83:43" pos:end="83:66"><name pos:start="83:43" pos:end="83:50">le2me_32</name><argument_list pos:start="83:51" pos:end="83:66">(<argument pos:start="83:52" pos:end="83:65"><expr pos:start="83:52" pos:end="83:65"><name pos:start="83:52" pos:end="83:65"><name pos:start="83:52" pos:end="83:54">smk</name><operator pos:start="83:55" pos:end="83:56">-&gt;</operator><name pos:start="83:57" pos:end="83:65">mclr_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="84:5" pos:end="84:67"><expr pos:start="84:5" pos:end="84:66"><operator pos:start="84:5" pos:end="84:5">(</operator><operator pos:start="84:6" pos:end="84:6">(</operator><name pos:start="84:7" pos:end="84:13">int32_t</name><operator pos:start="84:14" pos:end="84:14">*</operator><operator pos:start="84:15" pos:end="84:15">)</operator><name pos:start="84:16" pos:end="84:35"><name pos:start="84:16" pos:end="84:17">st</name><operator pos:start="84:18" pos:end="84:19">-&gt;</operator><name pos:start="84:20" pos:end="84:24">codec</name><operator pos:start="84:25" pos:end="84:26">-&gt;</operator><name pos:start="84:27" pos:end="84:35">extradata</name></name><operator pos:start="84:36" pos:end="84:36">)</operator><index pos:start="84:37" pos:end="84:39">[<expr pos:start="84:38" pos:end="84:38"><literal type="number" pos:start="84:38" pos:end="84:38">2</literal></expr>]</index> <operator pos:start="84:41" pos:end="84:41">=</operator> <call pos:start="84:43" pos:end="84:66"><name pos:start="84:43" pos:end="84:50">le2me_32</name><argument_list pos:start="84:51" pos:end="84:66">(<argument pos:start="84:52" pos:end="84:65"><expr pos:start="84:52" pos:end="84:65"><name pos:start="84:52" pos:end="84:65"><name pos:start="84:52" pos:end="84:54">smk</name><operator pos:start="84:55" pos:end="84:56">-&gt;</operator><name pos:start="84:57" pos:end="84:65">full_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="85:5" pos:end="85:67"><expr pos:start="85:5" pos:end="85:66"><operator pos:start="85:5" pos:end="85:5">(</operator><operator pos:start="85:6" pos:end="85:6">(</operator><name pos:start="85:7" pos:end="85:13">int32_t</name><operator pos:start="85:14" pos:end="85:14">*</operator><operator pos:start="85:15" pos:end="85:15">)</operator><name pos:start="85:16" pos:end="85:35"><name pos:start="85:16" pos:end="85:17">st</name><operator pos:start="85:18" pos:end="85:19">-&gt;</operator><name pos:start="85:20" pos:end="85:24">codec</name><operator pos:start="85:25" pos:end="85:26">-&gt;</operator><name pos:start="85:27" pos:end="85:35">extradata</name></name><operator pos:start="85:36" pos:end="85:36">)</operator><index pos:start="85:37" pos:end="85:39">[<expr pos:start="85:38" pos:end="85:38"><literal type="number" pos:start="85:38" pos:end="85:38">3</literal></expr>]</index> <operator pos:start="85:41" pos:end="85:41">=</operator> <call pos:start="85:43" pos:end="85:66"><name pos:start="85:43" pos:end="85:50">le2me_32</name><argument_list pos:start="85:51" pos:end="85:66">(<argument pos:start="85:52" pos:end="85:65"><expr pos:start="85:52" pos:end="85:65"><name pos:start="85:52" pos:end="85:65"><name pos:start="85:52" pos:end="85:54">smk</name><operator pos:start="85:55" pos:end="85:56">-&gt;</operator><name pos:start="85:57" pos:end="85:65">type_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="86:5" pos:end="86:24"><expr pos:start="86:5" pos:end="86:23"><name pos:start="86:5" pos:end="86:18"><name pos:start="86:5" pos:end="86:7">smk</name><operator pos:start="86:8" pos:end="86:9">-&gt;</operator><name pos:start="86:10" pos:end="86:18">curstream</name></name> <operator pos:start="86:20" pos:end="86:20">=</operator> <operator pos:start="86:22" pos:end="86:22">-</operator><literal type="number" pos:start="86:23" pos:end="86:23">1</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="87:5" pos:end="87:33"><expr pos:start="87:5" pos:end="87:32"><name pos:start="87:5" pos:end="87:16"><name pos:start="87:5" pos:end="87:7">smk</name><operator pos:start="87:8" pos:end="87:9">-&gt;</operator><name pos:start="87:10" pos:end="87:16">nextpos</name></name> <operator pos:start="87:18" pos:end="87:18">=</operator> <call pos:start="87:20" pos:end="87:32"><name pos:start="87:20" pos:end="87:28">url_ftell</name><argument_list pos:start="87:29" pos:end="87:32">(<argument pos:start="87:30" pos:end="87:31"><expr pos:start="87:30" pos:end="87:31"><name pos:start="87:30" pos:end="87:31">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="88:5" pos:end="88:13">return <expr pos:start="88:12" pos:end="88:12"><literal type="number" pos:start="88:12" pos:end="88:12">0</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></for></block_content></block></for></block_content></block></if></if_stmt></block_content></block></function></unit>
