<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10481.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">fmod_init_out</name> <parameter_list pos:start="1:26" pos:end="1:60">(<parameter pos:start="1:27" pos:end="1:40"><decl pos:start="1:27" pos:end="1:40"><type pos:start="1:27" pos:end="1:40"><name pos:start="1:27" pos:end="1:36">HWVoiceOut</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:40">hw</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:59"><decl pos:start="1:43" pos:end="1:59"><type pos:start="1:43" pos:end="1:59"><name pos:start="1:43" pos:end="1:55">audsettings_t</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:59">as</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:13">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:14">bits16</name></decl>, <decl pos:start="5:17" pos:end="5:20"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:17" pos:end="5:20">mode</name></decl>, <decl pos:start="5:23" pos:end="5:29"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:23" pos:end="5:29">channel</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">FMODVoiceOut</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:21">fmd</name> <init pos:start="7:23" pos:end="7:43">= <expr pos:start="7:25" pos:end="7:43"><operator pos:start="7:25" pos:end="7:25">(</operator><name pos:start="7:26" pos:end="7:37">FMODVoiceOut</name> <operator pos:start="7:39" pos:end="7:39">*</operator><operator pos:start="7:40" pos:end="7:40">)</operator> <name pos:start="7:42" pos:end="7:43">hw</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:17">audsettings_t</name></type> <name pos:start="9:19" pos:end="9:24">obt_as</name> <init pos:start="9:26" pos:end="9:30">= <expr pos:start="9:28" pos:end="9:30"><operator pos:start="9:28" pos:end="9:28">*</operator><name pos:start="9:29" pos:end="9:30">as</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:64"><expr pos:start="13:5" pos:end="13:63"><name pos:start="13:5" pos:end="13:8">mode</name> <operator pos:start="13:10" pos:end="13:10">=</operator> <call pos:start="13:12" pos:end="13:63"><name pos:start="13:12" pos:end="13:25">aud_to_fmodfmt</name> <argument_list pos:start="13:27" pos:end="13:63">(<argument pos:start="13:28" pos:end="13:34"><expr pos:start="13:28" pos:end="13:34"><name pos:start="13:28" pos:end="13:34"><name pos:start="13:28" pos:end="13:29">as</name><operator pos:start="13:30" pos:end="13:31">-&gt;</operator><name pos:start="13:32" pos:end="13:34">fmt</name></name></expr></argument>, <argument pos:start="13:37" pos:end="13:62"><expr pos:start="13:37" pos:end="13:62"><ternary pos:start="13:37" pos:end="13:62"><condition pos:start="13:37" pos:end="13:56"><expr pos:start="13:37" pos:end="13:54"><name pos:start="13:37" pos:end="13:49"><name pos:start="13:37" pos:end="13:38">as</name><operator pos:start="13:39" pos:end="13:40">-&gt;</operator><name pos:start="13:41" pos:end="13:49">nchannels</name></name> <operator pos:start="13:51" pos:end="13:52">==</operator> <literal type="number" pos:start="13:54" pos:end="13:54">2</literal></expr> ?</condition><then pos:start="13:58" pos:end="13:58"> <expr pos:start="13:58" pos:end="13:58"><literal type="number" pos:start="13:58" pos:end="13:58">1</literal></expr> </then><else pos:start="13:60" pos:end="13:62">: <expr pos:start="13:62" pos:end="13:62"><literal type="number" pos:start="13:62" pos:end="13:62">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="31:10"><expr pos:start="15:5" pos:end="31:9"><name pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:7">fmd</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:20">fmod_sample</name></name> <operator pos:start="15:22" pos:end="15:22">=</operator> <call pos:start="15:24" pos:end="31:9"><name pos:start="15:24" pos:end="15:42">FSOUND_Sample_Alloc</name> <argument_list pos:start="15:44" pos:end="31:9">(

        <argument pos:start="17:9" pos:end="17:19"><expr pos:start="17:9" pos:end="17:19"><name pos:start="17:9" pos:end="17:19">FSOUND_FREE</name></expr></argument>,            <comment type="block" pos:start="17:33" pos:end="17:43">/* index */</comment>

        <argument pos:start="19:9" pos:end="19:23"><expr pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:12">conf</name><operator pos:start="19:13" pos:end="19:13">.</operator><name pos:start="19:14" pos:end="19:23">nb_samples</name></name></expr></argument>,        <comment type="block" pos:start="19:33" pos:end="19:44">/* length */</comment>

        <argument pos:start="21:9" pos:end="21:12"><expr pos:start="21:9" pos:end="21:12"><name pos:start="21:9" pos:end="21:12">mode</name></expr></argument>,                   <comment type="block" pos:start="21:33" pos:end="21:42">/* mode */</comment>

        <argument pos:start="23:9" pos:end="23:16"><expr pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:10">as</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:16">freq</name></name></expr></argument>,               <comment type="block" pos:start="23:33" pos:end="23:42">/* freq */</comment>

        <argument pos:start="25:9" pos:end="25:11"><expr pos:start="25:9" pos:end="25:11"><literal type="number" pos:start="25:9" pos:end="25:11">255</literal></expr></argument>,                    <comment type="block" pos:start="25:33" pos:end="25:44">/* volume */</comment>

        <argument pos:start="27:9" pos:end="27:11"><expr pos:start="27:9" pos:end="27:11"><literal type="number" pos:start="27:9" pos:end="27:11">128</literal></expr></argument>,                    <comment type="block" pos:start="27:33" pos:end="27:41">/* pan */</comment>

        <argument pos:start="29:9" pos:end="29:11"><expr pos:start="29:9" pos:end="29:11"><literal type="number" pos:start="29:9" pos:end="29:11">255</literal></expr></argument>                     <comment type="block" pos:start="29:33" pos:end="29:46">/* priority */</comment>

        )</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:26">(<expr pos:start="35:9" pos:end="35:25"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:25"><name pos:start="35:10" pos:end="35:12">fmd</name><operator pos:start="35:13" pos:end="35:14">-&gt;</operator><name pos:start="35:15" pos:end="35:25">fmod_sample</name></name></expr>)</condition> <block pos:start="35:28" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:18">

        <expr_stmt pos:start="37:9" pos:end="37:65"><expr pos:start="37:9" pos:end="37:64"><call pos:start="37:9" pos:end="37:64"><name pos:start="37:9" pos:end="37:20">fmod_logerr2</name> <argument_list pos:start="37:22" pos:end="37:64">(<argument pos:start="37:23" pos:end="37:27"><expr pos:start="37:23" pos:end="37:27"><literal type="string" pos:start="37:23" pos:end="37:27">"DAC"</literal></expr></argument>, <argument pos:start="37:30" pos:end="37:63"><expr pos:start="37:30" pos:end="37:63"><literal type="string" pos:start="37:30" pos:end="37:63">"Failed to allocate FMOD sample\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:18">return <expr pos:start="39:16" pos:end="39:17"><operator pos:start="39:16" pos:end="39:16">-</operator><literal type="number" pos:start="39:17" pos:end="39:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:71"><expr pos:start="45:5" pos:end="45:70"><name pos:start="45:5" pos:end="45:11">channel</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <call pos:start="45:15" pos:end="45:70"><name pos:start="45:15" pos:end="45:32">FSOUND_PlaySoundEx</name> <argument_list pos:start="45:34" pos:end="45:70">(<argument pos:start="45:35" pos:end="45:45"><expr pos:start="45:35" pos:end="45:45"><name pos:start="45:35" pos:end="45:45">FSOUND_FREE</name></expr></argument>, <argument pos:start="45:48" pos:end="45:63"><expr pos:start="45:48" pos:end="45:63"><name pos:start="45:48" pos:end="45:63"><name pos:start="45:48" pos:end="45:50">fmd</name><operator pos:start="45:51" pos:end="45:52">-&gt;</operator><name pos:start="45:53" pos:end="45:63">fmod_sample</name></name></expr></argument>, <argument pos:start="45:66" pos:end="45:66"><expr pos:start="45:66" pos:end="45:66"><literal type="number" pos:start="45:66" pos:end="45:66">0</literal></expr></argument>, <argument pos:start="45:69" pos:end="45:69"><expr pos:start="45:69" pos:end="45:69"><literal type="number" pos:start="45:69" pos:end="45:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="55:5"><if pos:start="47:5" pos:end="55:5">if <condition pos:start="47:8" pos:end="47:20">(<expr pos:start="47:9" pos:end="47:19"><name pos:start="47:9" pos:end="47:15">channel</name> <operator pos:start="47:17" pos:end="47:17">&lt;</operator> <literal type="number" pos:start="47:19" pos:end="47:19">0</literal></expr>)</condition> <block pos:start="47:22" pos:end="55:5">{<block_content pos:start="49:9" pos:end="53:18">

        <expr_stmt pos:start="49:9" pos:end="49:64"><expr pos:start="49:9" pos:end="49:63"><call pos:start="49:9" pos:end="49:63"><name pos:start="49:9" pos:end="49:20">fmod_logerr2</name> <argument_list pos:start="49:22" pos:end="49:63">(<argument pos:start="49:23" pos:end="49:27"><expr pos:start="49:23" pos:end="49:27"><literal type="string" pos:start="49:23" pos:end="49:27">"DAC"</literal></expr></argument>, <argument pos:start="49:30" pos:end="49:62"><expr pos:start="49:30" pos:end="49:62"><literal type="string" pos:start="49:30" pos:end="49:62">"Failed to start playing sound\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:46"><expr pos:start="51:9" pos:end="51:45"><call pos:start="51:9" pos:end="51:45"><name pos:start="51:9" pos:end="51:26">FSOUND_Sample_Free</name> <argument_list pos:start="51:28" pos:end="51:45">(<argument pos:start="51:29" pos:end="51:44"><expr pos:start="51:29" pos:end="51:44"><name pos:start="51:29" pos:end="51:44"><name pos:start="51:29" pos:end="51:31">fmd</name><operator pos:start="51:32" pos:end="51:33">-&gt;</operator><name pos:start="51:34" pos:end="51:44">fmod_sample</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:18">return <expr pos:start="53:16" pos:end="53:17"><operator pos:start="53:16" pos:end="53:16">-</operator><literal type="number" pos:start="53:17" pos:end="53:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:27"><expr pos:start="57:5" pos:end="57:26"><name pos:start="57:5" pos:end="57:16"><name pos:start="57:5" pos:end="57:7">fmd</name><operator pos:start="57:8" pos:end="57:9">-&gt;</operator><name pos:start="57:10" pos:end="57:16">channel</name></name> <operator pos:start="57:18" pos:end="57:18">=</operator> <name pos:start="57:20" pos:end="57:26">channel</name></expr>;</expr_stmt>



    <comment type="block" pos:start="61:5" pos:end="61:55">/* FMOD always operates on little endian frames? */</comment>

    <expr_stmt pos:start="63:5" pos:end="63:26"><expr pos:start="63:5" pos:end="63:25"><name pos:start="63:5" pos:end="63:21"><name pos:start="63:5" pos:end="63:10">obt_as</name><operator pos:start="63:11" pos:end="63:11">.</operator><name pos:start="63:12" pos:end="63:21">endianness</name></name> <operator pos:start="63:23" pos:end="63:23">=</operator> <literal type="number" pos:start="63:25" pos:end="63:25">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:45"><expr pos:start="65:5" pos:end="65:44"><call pos:start="65:5" pos:end="65:44"><name pos:start="65:5" pos:end="65:23">audio_pcm_init_info</name> <argument_list pos:start="65:25" pos:end="65:44">(<argument pos:start="65:26" pos:end="65:34"><expr pos:start="65:26" pos:end="65:34"><operator pos:start="65:26" pos:end="65:26">&amp;</operator><name pos:start="65:27" pos:end="65:34"><name pos:start="65:27" pos:end="65:28">hw</name><operator pos:start="65:29" pos:end="65:30">-&gt;</operator><name pos:start="65:31" pos:end="65:34">info</name></name></expr></argument>, <argument pos:start="65:37" pos:end="65:43"><expr pos:start="65:37" pos:end="65:43"><operator pos:start="65:37" pos:end="65:37">&amp;</operator><name pos:start="65:38" pos:end="65:43">obt_as</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:41"><expr pos:start="67:5" pos:end="67:40"><name pos:start="67:5" pos:end="67:10">bits16</name> <operator pos:start="67:12" pos:end="67:12">=</operator> <operator pos:start="67:14" pos:end="67:14">(</operator><name pos:start="67:15" pos:end="67:18">mode</name> <operator pos:start="67:20" pos:end="67:20">&amp;</operator> <name pos:start="67:22" pos:end="67:34">FSOUND_16BITS</name><operator pos:start="67:35" pos:end="67:35">)</operator> <operator pos:start="67:37" pos:end="67:38">!=</operator> <literal type="number" pos:start="67:40" pos:end="67:40">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:34"><expr pos:start="69:5" pos:end="69:33"><name pos:start="69:5" pos:end="69:15"><name pos:start="69:5" pos:end="69:6">hw</name><operator pos:start="69:7" pos:end="69:8">-&gt;</operator><name pos:start="69:9" pos:end="69:15">samples</name></name> <operator pos:start="69:17" pos:end="69:17">=</operator> <name pos:start="69:19" pos:end="69:33"><name pos:start="69:19" pos:end="69:22">conf</name><operator pos:start="69:23" pos:end="69:23">.</operator><name pos:start="69:24" pos:end="69:33">nb_samples</name></name></expr>;</expr_stmt>

    <return pos:start="71:5" pos:end="71:13">return <expr pos:start="71:12" pos:end="71:12"><literal type="number" pos:start="71:12" pos:end="71:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
