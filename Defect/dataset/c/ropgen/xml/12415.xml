<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12415.c" pos:tabs="8"><function pos:start="1:1" pos:end="479:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">process_input</name><parameter_list pos:start="1:25" pos:end="1:40">(<parameter pos:start="1:26" pos:end="1:39"><decl pos:start="1:26" pos:end="1:39"><type pos:start="1:26" pos:end="1:28"><name pos:start="1:26" pos:end="1:28">int</name></type> <name pos:start="1:30" pos:end="1:39">file_index</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="479:1">{<block_content pos:start="5:5" pos:end="477:13">

    <decl_stmt pos:start="5:5" pos:end="5:47"><decl pos:start="5:5" pos:end="5:46"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">InputFile</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:20">ifile</name> <init pos:start="5:22" pos:end="5:46">= <expr pos:start="5:24" pos:end="5:46"><name pos:start="5:24" pos:end="5:46"><name pos:start="5:24" pos:end="5:34">input_files</name><index pos:start="5:35" pos:end="5:46">[<expr pos:start="5:36" pos:end="5:45"><name pos:start="5:36" pos:end="5:45">file_index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">AVFormatContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:23">is</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">InputStream</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:20">ist</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">AVPacket</name></type> <name pos:start="11:14" pos:end="11:16">pkt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>, <decl pos:start="13:14" pos:end="13:14"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:14" pos:end="13:14">i</name></decl>, <decl pos:start="13:17" pos:end="13:17"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:17" pos:end="13:17">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int64_t</name></type> <name pos:start="15:13" pos:end="15:20">duration</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:20"><decl pos:start="17:5" pos:end="17:19"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">int64_t</name></type> <name pos:start="17:13" pos:end="17:19">pkt_dts</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:21"><expr pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:6">is</name>  <operator pos:start="21:9" pos:end="21:9">=</operator> <name pos:start="21:11" pos:end="21:20"><name pos:start="21:11" pos:end="21:15">ifile</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:20">ctx</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:40"><expr pos:start="23:5" pos:end="23:39"><name pos:start="23:5" pos:end="23:7">ret</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:39"><name pos:start="23:11" pos:end="23:26">get_input_packet</name><argument_list pos:start="23:27" pos:end="23:39">(<argument pos:start="23:28" pos:end="23:32"><expr pos:start="23:28" pos:end="23:32"><name pos:start="23:28" pos:end="23:32">ifile</name></expr></argument>, <argument pos:start="23:35" pos:end="23:38"><expr pos:start="23:35" pos:end="23:38"><operator pos:start="23:35" pos:end="23:35">&amp;</operator><name pos:start="23:36" pos:end="23:38">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:31">(<expr pos:start="27:9" pos:end="27:30"><name pos:start="27:9" pos:end="27:11">ret</name> <operator pos:start="27:13" pos:end="27:14">==</operator> <call pos:start="27:16" pos:end="27:30"><name pos:start="27:16" pos:end="27:22">AVERROR</name><argument_list pos:start="27:23" pos:end="27:30">(<argument pos:start="27:24" pos:end="27:29"><expr pos:start="27:24" pos:end="27:29"><name pos:start="27:24" pos:end="27:29">EAGAIN</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:33" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:19">

        <expr_stmt pos:start="29:9" pos:end="29:26"><expr pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:21"><name pos:start="29:9" pos:end="29:13">ifile</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:21">eagain</name></name> <operator pos:start="29:23" pos:end="29:23">=</operator> <literal type="number" pos:start="29:25" pos:end="29:25">1</literal></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:19">return <expr pos:start="31:16" pos:end="31:18"><name pos:start="31:16" pos:end="31:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="35:5" pos:end="43:5"><if pos:start="35:5" pos:end="43:5">if <condition pos:start="35:8" pos:end="35:31">(<expr pos:start="35:9" pos:end="35:30"><name pos:start="35:9" pos:end="35:11">ret</name> <operator pos:start="35:13" pos:end="35:13">&lt;</operator> <literal type="number" pos:start="35:15" pos:end="35:15">0</literal> <operator pos:start="35:17" pos:end="35:18">&amp;&amp;</operator> <name pos:start="35:20" pos:end="35:30"><name pos:start="35:20" pos:end="35:24">ifile</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:30">loop</name></name></expr>)</condition> <block pos:start="35:33" pos:end="43:5">{<block_content pos:start="37:9" pos:end="41:44">

        <if_stmt pos:start="37:9" pos:end="39:23"><if pos:start="37:9" pos:end="39:23">if <condition pos:start="37:12" pos:end="37:49">(<expr pos:start="37:13" pos:end="37:48"><operator pos:start="37:13" pos:end="37:13">(</operator><name pos:start="37:14" pos:end="37:16">ret</name> <operator pos:start="37:18" pos:end="37:18">=</operator> <call pos:start="37:20" pos:end="37:43"><name pos:start="37:20" pos:end="37:32">seek_to_start</name><argument_list pos:start="37:33" pos:end="37:43">(<argument pos:start="37:34" pos:end="37:38"><expr pos:start="37:34" pos:end="37:38"><name pos:start="37:34" pos:end="37:38">ifile</name></expr></argument>, <argument pos:start="37:41" pos:end="37:42"><expr pos:start="37:41" pos:end="37:42"><name pos:start="37:41" pos:end="37:42">is</name></expr></argument>)</argument_list></call><operator pos:start="37:44" pos:end="37:44">)</operator> <operator pos:start="37:46" pos:end="37:46">&lt;</operator> <literal type="number" pos:start="37:48" pos:end="37:48">0</literal></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:23"><block_content pos:start="39:13" pos:end="39:23">

            <return pos:start="39:13" pos:end="39:23">return <expr pos:start="39:20" pos:end="39:22"><name pos:start="39:20" pos:end="39:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:44"><expr pos:start="41:9" pos:end="41:43"><name pos:start="41:9" pos:end="41:11">ret</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <call pos:start="41:15" pos:end="41:43"><name pos:start="41:15" pos:end="41:30">get_input_packet</name><argument_list pos:start="41:31" pos:end="41:43">(<argument pos:start="41:32" pos:end="41:36"><expr pos:start="41:32" pos:end="41:36"><name pos:start="41:32" pos:end="41:36">ifile</name></expr></argument>, <argument pos:start="41:39" pos:end="41:42"><expr pos:start="41:39" pos:end="41:42"><operator pos:start="41:39" pos:end="41:39">&amp;</operator><name pos:start="41:40" pos:end="41:42">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="45:5" pos:end="99:5"><if pos:start="45:5" pos:end="99:5">if <condition pos:start="45:8" pos:end="45:16">(<expr pos:start="45:9" pos:end="45:15"><name pos:start="45:9" pos:end="45:11">ret</name> <operator pos:start="45:13" pos:end="45:13">&lt;</operator> <literal type="number" pos:start="45:15" pos:end="45:15">0</literal></expr>)</condition> <block pos:start="45:18" pos:end="99:5">{<block_content pos:start="47:9" pos:end="97:31">

        <if_stmt pos:start="47:9" pos:end="55:9"><if pos:start="47:9" pos:end="55:9">if <condition pos:start="47:12" pos:end="47:31">(<expr pos:start="47:13" pos:end="47:30"><name pos:start="47:13" pos:end="47:15">ret</name> <operator pos:start="47:17" pos:end="47:18">!=</operator> <name pos:start="47:20" pos:end="47:30">AVERROR_EOF</name></expr>)</condition> <block pos:start="47:33" pos:end="55:9">{<block_content pos:start="49:13" pos:end="53:32">

            <expr_stmt pos:start="49:13" pos:end="49:43"><expr pos:start="49:13" pos:end="49:42"><call pos:start="49:13" pos:end="49:42"><name pos:start="49:13" pos:end="49:23">print_error</name><argument_list pos:start="49:24" pos:end="49:42">(<argument pos:start="49:25" pos:end="49:36"><expr pos:start="49:25" pos:end="49:36"><name pos:start="49:25" pos:end="49:36"><name pos:start="49:25" pos:end="49:26">is</name><operator pos:start="49:27" pos:end="49:28">-&gt;</operator><name pos:start="49:29" pos:end="49:36">filename</name></name></expr></argument>, <argument pos:start="49:39" pos:end="49:41"><expr pos:start="49:39" pos:end="49:41"><name pos:start="49:39" pos:end="49:41">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="51:13" pos:end="53:32"><if pos:start="51:13" pos:end="53:32">if <condition pos:start="51:16" pos:end="51:30">(<expr pos:start="51:17" pos:end="51:29"><name pos:start="51:17" pos:end="51:29">exit_on_error</name></expr>)</condition><block type="pseudo" pos:start="53:17" pos:end="53:32"><block_content pos:start="53:17" pos:end="53:32">

                <expr_stmt pos:start="53:17" pos:end="53:32"><expr pos:start="53:17" pos:end="53:31"><call pos:start="53:17" pos:end="53:31"><name pos:start="53:17" pos:end="53:28">exit_program</name><argument_list pos:start="53:29" pos:end="53:31">(<argument pos:start="53:30" pos:end="53:30"><expr pos:start="53:30" pos:end="53:30"><literal type="number" pos:start="53:30" pos:end="53:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <for pos:start="59:9" pos:end="91:9">for <control pos:start="59:13" pos:end="59:47">(<init pos:start="59:14" pos:end="59:19"><expr pos:start="59:14" pos:end="59:18"><name pos:start="59:14" pos:end="59:14">i</name> <operator pos:start="59:16" pos:end="59:16">=</operator> <literal type="number" pos:start="59:18" pos:end="59:18">0</literal></expr>;</init> <condition pos:start="59:21" pos:end="59:42"><expr pos:start="59:21" pos:end="59:41"><name pos:start="59:21" pos:end="59:21">i</name> <operator pos:start="59:23" pos:end="59:23">&lt;</operator> <name pos:start="59:25" pos:end="59:41"><name pos:start="59:25" pos:end="59:29">ifile</name><operator pos:start="59:30" pos:end="59:31">-&gt;</operator><name pos:start="59:32" pos:end="59:41">nb_streams</name></name></expr>;</condition> <incr pos:start="59:44" pos:end="59:46"><expr pos:start="59:44" pos:end="59:46"><name pos:start="59:44" pos:end="59:44">i</name><operator pos:start="59:45" pos:end="59:46">++</operator></expr></incr>)</control> <block pos:start="59:49" pos:end="91:9">{<block_content pos:start="61:13" pos:end="89:13">

            <expr_stmt pos:start="61:13" pos:end="61:54"><expr pos:start="61:13" pos:end="61:53"><name pos:start="61:13" pos:end="61:15">ist</name> <operator pos:start="61:17" pos:end="61:17">=</operator> <name pos:start="61:19" pos:end="61:53"><name pos:start="61:19" pos:end="61:31">input_streams</name><index pos:start="61:32" pos:end="61:53">[<expr pos:start="61:33" pos:end="61:52"><name pos:start="61:33" pos:end="61:48"><name pos:start="61:33" pos:end="61:37">ifile</name><operator pos:start="61:38" pos:end="61:39">-&gt;</operator><name pos:start="61:40" pos:end="61:48">ist_index</name></name> <operator pos:start="61:50" pos:end="61:50">+</operator> <name pos:start="61:52" pos:end="61:52">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="63:13" pos:end="71:13"><if pos:start="63:13" pos:end="71:13">if <condition pos:start="63:16" pos:end="63:37">(<expr pos:start="63:17" pos:end="63:36"><name pos:start="63:17" pos:end="63:36"><name pos:start="63:17" pos:end="63:19">ist</name><operator pos:start="63:20" pos:end="63:21">-&gt;</operator><name pos:start="63:22" pos:end="63:36">decoding_needed</name></name></expr>)</condition> <block pos:start="63:39" pos:end="71:13">{<block_content pos:start="65:17" pos:end="69:29">

                <expr_stmt pos:start="65:17" pos:end="65:57"><expr pos:start="65:17" pos:end="65:56"><name pos:start="65:17" pos:end="65:19">ret</name> <operator pos:start="65:21" pos:end="65:21">=</operator> <call pos:start="65:23" pos:end="65:56"><name pos:start="65:23" pos:end="65:42">process_input_packet</name><argument_list pos:start="65:43" pos:end="65:56">(<argument pos:start="65:44" pos:end="65:46"><expr pos:start="65:44" pos:end="65:46"><name pos:start="65:44" pos:end="65:46">ist</name></expr></argument>, <argument pos:start="65:49" pos:end="65:52"><expr pos:start="65:49" pos:end="65:52"><name pos:start="65:49" pos:end="65:52">NULL</name></expr></argument>, <argument pos:start="65:55" pos:end="65:55"><expr pos:start="65:55" pos:end="65:55"><literal type="number" pos:start="65:55" pos:end="65:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="67:17" pos:end="69:29"><if pos:start="67:17" pos:end="69:29">if <condition pos:start="67:20" pos:end="67:26">(<expr pos:start="67:21" pos:end="67:25"><name pos:start="67:21" pos:end="67:23">ret</name><operator pos:start="67:24" pos:end="67:24">&gt;</operator><literal type="number" pos:start="67:25" pos:end="67:25">0</literal></expr>)</condition><block type="pseudo" pos:start="69:21" pos:end="69:29"><block_content pos:start="69:21" pos:end="69:29">

                    <return pos:start="69:21" pos:end="69:29">return <expr pos:start="69:28" pos:end="69:28"><literal type="number" pos:start="69:28" pos:end="69:28">0</literal></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="75:13" pos:end="75:74">/* mark all outputs that don't go through lavfi as finished */</comment>

            <for pos:start="77:13" pos:end="89:13">for <control pos:start="77:17" pos:end="77:51">(<init pos:start="77:18" pos:end="77:23"><expr pos:start="77:18" pos:end="77:22"><name pos:start="77:18" pos:end="77:18">j</name> <operator pos:start="77:20" pos:end="77:20">=</operator> <literal type="number" pos:start="77:22" pos:end="77:22">0</literal></expr>;</init> <condition pos:start="77:25" pos:end="77:46"><expr pos:start="77:25" pos:end="77:45"><name pos:start="77:25" pos:end="77:25">j</name> <operator pos:start="77:27" pos:end="77:27">&lt;</operator> <name pos:start="77:29" pos:end="77:45">nb_output_streams</name></expr>;</condition> <incr pos:start="77:48" pos:end="77:50"><expr pos:start="77:48" pos:end="77:50"><name pos:start="77:48" pos:end="77:48">j</name><operator pos:start="77:49" pos:end="77:50">++</operator></expr></incr>)</control> <block pos:start="77:53" pos:end="89:13">{<block_content pos:start="79:17" pos:end="87:46">

                <decl_stmt pos:start="79:17" pos:end="79:54"><decl pos:start="79:17" pos:end="79:53"><type pos:start="79:17" pos:end="79:30"><name pos:start="79:17" pos:end="79:28">OutputStream</name> <modifier pos:start="79:30" pos:end="79:30">*</modifier></type><name pos:start="79:31" pos:end="79:33">ost</name> <init pos:start="79:35" pos:end="79:53">= <expr pos:start="79:37" pos:end="79:53"><name pos:start="79:37" pos:end="79:53"><name pos:start="79:37" pos:end="79:50">output_streams</name><index pos:start="79:51" pos:end="79:53">[<expr pos:start="79:52" pos:end="79:52"><name pos:start="79:52" pos:end="79:52">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="83:17" pos:end="87:46"><if pos:start="83:17" pos:end="87:46">if <condition pos:start="83:20" pos:end="85:82">(<expr pos:start="83:21" pos:end="85:81"><name pos:start="83:21" pos:end="83:37"><name pos:start="83:21" pos:end="83:23">ost</name><operator pos:start="83:24" pos:end="83:25">-&gt;</operator><name pos:start="83:26" pos:end="83:37">source_index</name></name> <operator pos:start="83:39" pos:end="83:40">==</operator> <name pos:start="83:42" pos:end="83:57"><name pos:start="83:42" pos:end="83:46">ifile</name><operator pos:start="83:47" pos:end="83:48">-&gt;</operator><name pos:start="83:49" pos:end="83:57">ist_index</name></name> <operator pos:start="83:59" pos:end="83:59">+</operator> <name pos:start="83:61" pos:end="83:61">i</name> <operator pos:start="83:63" pos:end="83:64">&amp;&amp;</operator>

                    <operator pos:start="85:21" pos:end="85:21">(</operator><name pos:start="85:22" pos:end="85:37"><name pos:start="85:22" pos:end="85:24">ost</name><operator pos:start="85:25" pos:end="85:26">-&gt;</operator><name pos:start="85:27" pos:end="85:37">stream_copy</name></name> <operator pos:start="85:39" pos:end="85:40">||</operator> <name pos:start="85:42" pos:end="85:55"><name pos:start="85:42" pos:end="85:44">ost</name><operator pos:start="85:45" pos:end="85:46">-&gt;</operator><name pos:start="85:47" pos:end="85:49">enc</name><operator pos:start="85:50" pos:end="85:51">-&gt;</operator><name pos:start="85:52" pos:end="85:55">type</name></name> <operator pos:start="85:57" pos:end="85:58">==</operator> <name pos:start="85:60" pos:end="85:80">AVMEDIA_TYPE_SUBTITLE</name><operator pos:start="85:81" pos:end="85:81">)</operator></expr>)</condition><block type="pseudo" pos:start="87:21" pos:end="87:46"><block_content pos:start="87:21" pos:end="87:46">

                    <expr_stmt pos:start="87:21" pos:end="87:46"><expr pos:start="87:21" pos:end="87:45"><call pos:start="87:21" pos:end="87:45"><name pos:start="87:21" pos:end="87:40">finish_output_stream</name><argument_list pos:start="87:41" pos:end="87:45">(<argument pos:start="87:42" pos:end="87:44"><expr pos:start="87:42" pos:end="87:44"><name pos:start="87:42" pos:end="87:44">ost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>



        <expr_stmt pos:start="95:9" pos:end="95:31"><expr pos:start="95:9" pos:end="95:30"><name pos:start="95:9" pos:end="95:26"><name pos:start="95:9" pos:end="95:13">ifile</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:26">eof_reached</name></name> <operator pos:start="95:28" pos:end="95:28">=</operator> <literal type="number" pos:start="95:30" pos:end="95:30">1</literal></expr>;</expr_stmt>

        <return pos:start="97:9" pos:end="97:31">return <expr pos:start="97:16" pos:end="97:30"><call pos:start="97:16" pos:end="97:30"><name pos:start="97:16" pos:end="97:22">AVERROR</name><argument_list pos:start="97:23" pos:end="97:30">(<argument pos:start="97:24" pos:end="97:29"><expr pos:start="97:24" pos:end="97:29"><name pos:start="97:24" pos:end="97:29">EAGAIN</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:19"><expr pos:start="103:5" pos:end="103:18"><call pos:start="103:5" pos:end="103:18"><name pos:start="103:5" pos:end="103:16">reset_eagain</name><argument_list pos:start="103:17" pos:end="103:18">()</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="107:5" pos:end="113:5"><if pos:start="107:5" pos:end="113:5">if <condition pos:start="107:8" pos:end="107:20">(<expr pos:start="107:9" pos:end="107:19"><name pos:start="107:9" pos:end="107:19">do_pkt_dump</name></expr>)</condition> <block pos:start="107:22" pos:end="113:5">{<block_content pos:start="109:9" pos:end="111:56">

        <expr_stmt pos:start="109:9" pos:end="111:56"><expr pos:start="109:9" pos:end="111:55"><call pos:start="109:9" pos:end="111:55"><name pos:start="109:9" pos:end="109:24">av_pkt_dump_log2</name><argument_list pos:start="109:25" pos:end="111:55">(<argument pos:start="109:26" pos:end="109:29"><expr pos:start="109:26" pos:end="109:29"><name pos:start="109:26" pos:end="109:29">NULL</name></expr></argument>, <argument pos:start="109:32" pos:end="109:43"><expr pos:start="109:32" pos:end="109:43"><name pos:start="109:32" pos:end="109:43">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="109:46" pos:end="109:49"><expr pos:start="109:46" pos:end="109:49"><operator pos:start="109:46" pos:end="109:46">&amp;</operator><name pos:start="109:47" pos:end="109:49">pkt</name></expr></argument>, <argument pos:start="109:52" pos:end="109:62"><expr pos:start="109:52" pos:end="109:62"><name pos:start="109:52" pos:end="109:62">do_hex_dump</name></expr></argument>,

                         <argument pos:start="111:26" pos:end="111:54"><expr pos:start="111:26" pos:end="111:54"><name pos:start="111:26" pos:end="111:54"><name pos:start="111:26" pos:end="111:27">is</name><operator pos:start="111:28" pos:end="111:29">-&gt;</operator><name pos:start="111:30" pos:end="111:36">streams</name><index pos:start="111:37" pos:end="111:54">[<expr pos:start="111:38" pos:end="111:53"><name pos:start="111:38" pos:end="111:53"><name pos:start="111:38" pos:end="111:40">pkt</name><operator pos:start="111:41" pos:end="111:41">.</operator><name pos:start="111:42" pos:end="111:53">stream_index</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="115:5" pos:end="117:48">/* the following test is needed in case new streams appear

       dynamically in stream : we ignore them */</comment>

    <if_stmt pos:start="119:5" pos:end="125:5"><if pos:start="119:5" pos:end="125:5">if <condition pos:start="119:8" pos:end="119:46">(<expr pos:start="119:9" pos:end="119:45"><name pos:start="119:9" pos:end="119:24"><name pos:start="119:9" pos:end="119:11">pkt</name><operator pos:start="119:12" pos:end="119:12">.</operator><name pos:start="119:13" pos:end="119:24">stream_index</name></name> <operator pos:start="119:26" pos:end="119:27">&gt;=</operator> <name pos:start="119:29" pos:end="119:45"><name pos:start="119:29" pos:end="119:33">ifile</name><operator pos:start="119:34" pos:end="119:35">-&gt;</operator><name pos:start="119:36" pos:end="119:45">nb_streams</name></name></expr>)</condition> <block pos:start="119:48" pos:end="125:5">{<block_content pos:start="121:9" pos:end="123:28">

        <expr_stmt pos:start="121:9" pos:end="121:44"><expr pos:start="121:9" pos:end="121:43"><call pos:start="121:9" pos:end="121:43"><name pos:start="121:9" pos:end="121:25">report_new_stream</name><argument_list pos:start="121:26" pos:end="121:43">(<argument pos:start="121:27" pos:end="121:36"><expr pos:start="121:27" pos:end="121:36"><name pos:start="121:27" pos:end="121:36">file_index</name></expr></argument>, <argument pos:start="121:39" pos:end="121:42"><expr pos:start="121:39" pos:end="121:42"><operator pos:start="121:39" pos:end="121:39">&amp;</operator><name pos:start="121:40" pos:end="121:42">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="123:9" pos:end="123:28">goto <name pos:start="123:14" pos:end="123:27">discard_packet</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="129:5" pos:end="129:61"><expr pos:start="129:5" pos:end="129:60"><name pos:start="129:5" pos:end="129:7">ist</name> <operator pos:start="129:9" pos:end="129:9">=</operator> <name pos:start="129:11" pos:end="129:60"><name pos:start="129:11" pos:end="129:23">input_streams</name><index pos:start="129:24" pos:end="129:60">[<expr pos:start="129:25" pos:end="129:59"><name pos:start="129:25" pos:end="129:40"><name pos:start="129:25" pos:end="129:29">ifile</name><operator pos:start="129:30" pos:end="129:31">-&gt;</operator><name pos:start="129:32" pos:end="129:40">ist_index</name></name> <operator pos:start="129:42" pos:end="129:42">+</operator> <name pos:start="129:44" pos:end="129:59"><name pos:start="129:44" pos:end="129:46">pkt</name><operator pos:start="129:47" pos:end="129:47">.</operator><name pos:start="129:48" pos:end="129:59">stream_index</name></name></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="133:5" pos:end="133:31"><expr pos:start="133:5" pos:end="133:30"><name pos:start="133:5" pos:end="133:18"><name pos:start="133:5" pos:end="133:7">ist</name><operator pos:start="133:8" pos:end="133:9">-&gt;</operator><name pos:start="133:10" pos:end="133:18">data_size</name></name> <operator pos:start="133:20" pos:end="133:21">+=</operator> <name pos:start="133:23" pos:end="133:30"><name pos:start="133:23" pos:end="133:25">pkt</name><operator pos:start="133:26" pos:end="133:26">.</operator><name pos:start="133:27" pos:end="133:30">size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:22"><expr pos:start="135:5" pos:end="135:21"><name pos:start="135:5" pos:end="135:19"><name pos:start="135:5" pos:end="135:7">ist</name><operator pos:start="135:8" pos:end="135:9">-&gt;</operator><name pos:start="135:10" pos:end="135:19">nb_packets</name></name><operator pos:start="135:20" pos:end="135:21">++</operator></expr>;</expr_stmt>



    <if_stmt pos:start="139:5" pos:end="141:28"><if pos:start="139:5" pos:end="141:28">if <condition pos:start="139:8" pos:end="139:21">(<expr pos:start="139:9" pos:end="139:20"><name pos:start="139:9" pos:end="139:20"><name pos:start="139:9" pos:end="139:11">ist</name><operator pos:start="139:12" pos:end="139:13">-&gt;</operator><name pos:start="139:14" pos:end="139:20">discard</name></name></expr>)</condition><block type="pseudo" pos:start="141:9" pos:end="141:28"><block_content pos:start="141:9" pos:end="141:28">

        <goto pos:start="141:9" pos:end="141:28">goto <name pos:start="141:14" pos:end="141:27">discard_packet</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="145:5" pos:end="151:5"><if pos:start="145:5" pos:end="151:5">if <condition pos:start="145:8" pos:end="145:59">(<expr pos:start="145:9" pos:end="145:58"><name pos:start="145:9" pos:end="145:21">exit_on_error</name> <operator pos:start="145:23" pos:end="145:24">&amp;&amp;</operator> <operator pos:start="145:26" pos:end="145:26">(</operator><name pos:start="145:27" pos:end="145:35"><name pos:start="145:27" pos:end="145:29">pkt</name><operator pos:start="145:30" pos:end="145:30">.</operator><name pos:start="145:31" pos:end="145:35">flags</name></name> <operator pos:start="145:37" pos:end="145:37">&amp;</operator> <name pos:start="145:39" pos:end="145:57">AV_PKT_FLAG_CORRUPT</name><operator pos:start="145:58" pos:end="145:58">)</operator></expr>)</condition> <block pos:start="145:61" pos:end="151:5">{<block_content pos:start="147:9" pos:end="149:24">

        <expr_stmt pos:start="147:9" pos:end="147:110"><expr pos:start="147:9" pos:end="147:109"><call pos:start="147:9" pos:end="147:109"><name pos:start="147:9" pos:end="147:14">av_log</name><argument_list pos:start="147:15" pos:end="147:109">(<argument pos:start="147:16" pos:end="147:19"><expr pos:start="147:16" pos:end="147:19"><name pos:start="147:16" pos:end="147:19">NULL</name></expr></argument>, <argument pos:start="147:22" pos:end="147:33"><expr pos:start="147:22" pos:end="147:33"><name pos:start="147:22" pos:end="147:33">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="147:36" pos:end="147:76"><expr pos:start="147:36" pos:end="147:76"><literal type="string" pos:start="147:36" pos:end="147:76">"%s: corrupt input packet in stream %d\n"</literal></expr></argument>, <argument pos:start="147:79" pos:end="147:90"><expr pos:start="147:79" pos:end="147:90"><name pos:start="147:79" pos:end="147:90"><name pos:start="147:79" pos:end="147:80">is</name><operator pos:start="147:81" pos:end="147:82">-&gt;</operator><name pos:start="147:83" pos:end="147:90">filename</name></name></expr></argument>, <argument pos:start="147:93" pos:end="147:108"><expr pos:start="147:93" pos:end="147:108"><name pos:start="147:93" pos:end="147:108"><name pos:start="147:93" pos:end="147:95">pkt</name><operator pos:start="147:96" pos:end="147:96">.</operator><name pos:start="147:97" pos:end="147:108">stream_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:24"><expr pos:start="149:9" pos:end="149:23"><call pos:start="149:9" pos:end="149:23"><name pos:start="149:9" pos:end="149:20">exit_program</name><argument_list pos:start="149:21" pos:end="149:23">(<argument pos:start="149:22" pos:end="149:22"><expr pos:start="149:22" pos:end="149:22"><literal type="number" pos:start="149:22" pos:end="149:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="155:5" pos:end="175:5"><if pos:start="155:5" pos:end="175:5">if <condition pos:start="155:8" pos:end="155:17">(<expr pos:start="155:9" pos:end="155:16"><name pos:start="155:9" pos:end="155:16">debug_ts</name></expr>)</condition> <block pos:start="155:19" pos:end="175:5">{<block_content pos:start="157:9" pos:end="173:88">

        <expr_stmt pos:start="157:9" pos:end="173:88"><expr pos:start="157:9" pos:end="173:87"><call pos:start="157:9" pos:end="173:87"><name pos:start="157:9" pos:end="157:14">av_log</name><argument_list pos:start="157:15" pos:end="173:87">(<argument pos:start="157:16" pos:end="157:19"><expr pos:start="157:16" pos:end="157:19"><name pos:start="157:16" pos:end="157:19">NULL</name></expr></argument>, <argument pos:start="157:22" pos:end="157:32"><expr pos:start="157:22" pos:end="157:32"><name pos:start="157:22" pos:end="157:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="157:35" pos:end="159:149"><expr pos:start="157:35" pos:end="159:149"><literal type="string" pos:start="157:35" pos:end="157:68">"demuxer -&gt; ist_index:%d type:%s "</literal>

               <literal type="string" pos:start="159:16" pos:end="159:149">"next_dts:%s next_dts_time:%s next_pts:%s next_pts_time:%s pkt_pts:%s pkt_pts_time:%s pkt_dts:%s pkt_dts_time:%s off:%s off_time:%s\n"</literal></expr></argument>,

               <argument pos:start="161:16" pos:end="161:50"><expr pos:start="161:16" pos:end="161:50"><name pos:start="161:16" pos:end="161:31"><name pos:start="161:16" pos:end="161:20">ifile</name><operator pos:start="161:21" pos:end="161:22">-&gt;</operator><name pos:start="161:23" pos:end="161:31">ist_index</name></name> <operator pos:start="161:33" pos:end="161:33">+</operator> <name pos:start="161:35" pos:end="161:50"><name pos:start="161:35" pos:end="161:37">pkt</name><operator pos:start="161:38" pos:end="161:38">.</operator><name pos:start="161:39" pos:end="161:50">stream_index</name></name></expr></argument>, <argument pos:start="161:53" pos:end="161:102"><expr pos:start="161:53" pos:end="161:102"><call pos:start="161:53" pos:end="161:102"><name pos:start="161:53" pos:end="161:76">av_get_media_type_string</name><argument_list pos:start="161:77" pos:end="161:102">(<argument pos:start="161:78" pos:end="161:101"><expr pos:start="161:78" pos:end="161:101"><name pos:start="161:78" pos:end="161:101"><name pos:start="161:78" pos:end="161:80">ist</name><operator pos:start="161:81" pos:end="161:82">-&gt;</operator><name pos:start="161:83" pos:end="161:89">dec_ctx</name><operator pos:start="161:90" pos:end="161:91">-&gt;</operator><name pos:start="161:92" pos:end="161:101">codec_type</name></name></expr></argument>)</argument_list></call></expr></argument>,

               <argument pos:start="163:16" pos:end="163:39"><expr pos:start="163:16" pos:end="163:39"><call pos:start="163:16" pos:end="163:39"><name pos:start="163:16" pos:end="163:24">av_ts2str</name><argument_list pos:start="163:25" pos:end="163:39">(<argument pos:start="163:26" pos:end="163:38"><expr pos:start="163:26" pos:end="163:38"><name pos:start="163:26" pos:end="163:38"><name pos:start="163:26" pos:end="163:28">ist</name><operator pos:start="163:29" pos:end="163:30">-&gt;</operator><name pos:start="163:31" pos:end="163:38">next_dts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="163:42" pos:end="163:86"><expr pos:start="163:42" pos:end="163:86"><call pos:start="163:42" pos:end="163:86"><name pos:start="163:42" pos:end="163:54">av_ts2timestr</name><argument_list pos:start="163:55" pos:end="163:86">(<argument pos:start="163:56" pos:end="163:68"><expr pos:start="163:56" pos:end="163:68"><name pos:start="163:56" pos:end="163:68"><name pos:start="163:56" pos:end="163:58">ist</name><operator pos:start="163:59" pos:end="163:60">-&gt;</operator><name pos:start="163:61" pos:end="163:68">next_dts</name></name></expr></argument>, <argument pos:start="163:71" pos:end="163:85"><expr pos:start="163:71" pos:end="163:85"><operator pos:start="163:71" pos:end="163:71">&amp;</operator><name pos:start="163:72" pos:end="163:85">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr></argument>,

               <argument pos:start="165:16" pos:end="165:39"><expr pos:start="165:16" pos:end="165:39"><call pos:start="165:16" pos:end="165:39"><name pos:start="165:16" pos:end="165:24">av_ts2str</name><argument_list pos:start="165:25" pos:end="165:39">(<argument pos:start="165:26" pos:end="165:38"><expr pos:start="165:26" pos:end="165:38"><name pos:start="165:26" pos:end="165:38"><name pos:start="165:26" pos:end="165:28">ist</name><operator pos:start="165:29" pos:end="165:30">-&gt;</operator><name pos:start="165:31" pos:end="165:38">next_pts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="165:42" pos:end="165:86"><expr pos:start="165:42" pos:end="165:86"><call pos:start="165:42" pos:end="165:86"><name pos:start="165:42" pos:end="165:54">av_ts2timestr</name><argument_list pos:start="165:55" pos:end="165:86">(<argument pos:start="165:56" pos:end="165:68"><expr pos:start="165:56" pos:end="165:68"><name pos:start="165:56" pos:end="165:68"><name pos:start="165:56" pos:end="165:58">ist</name><operator pos:start="165:59" pos:end="165:60">-&gt;</operator><name pos:start="165:61" pos:end="165:68">next_pts</name></name></expr></argument>, <argument pos:start="165:71" pos:end="165:85"><expr pos:start="165:71" pos:end="165:85"><operator pos:start="165:71" pos:end="165:71">&amp;</operator><name pos:start="165:72" pos:end="165:85">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr></argument>,

               <argument pos:start="167:16" pos:end="167:33"><expr pos:start="167:16" pos:end="167:33"><call pos:start="167:16" pos:end="167:33"><name pos:start="167:16" pos:end="167:24">av_ts2str</name><argument_list pos:start="167:25" pos:end="167:33">(<argument pos:start="167:26" pos:end="167:32"><expr pos:start="167:26" pos:end="167:32"><name pos:start="167:26" pos:end="167:32"><name pos:start="167:26" pos:end="167:28">pkt</name><operator pos:start="167:29" pos:end="167:29">.</operator><name pos:start="167:30" pos:end="167:32">pts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="167:36" pos:end="167:78"><expr pos:start="167:36" pos:end="167:78"><call pos:start="167:36" pos:end="167:78"><name pos:start="167:36" pos:end="167:48">av_ts2timestr</name><argument_list pos:start="167:49" pos:end="167:78">(<argument pos:start="167:50" pos:end="167:56"><expr pos:start="167:50" pos:end="167:56"><name pos:start="167:50" pos:end="167:56"><name pos:start="167:50" pos:end="167:52">pkt</name><operator pos:start="167:53" pos:end="167:53">.</operator><name pos:start="167:54" pos:end="167:56">pts</name></name></expr></argument>, <argument pos:start="167:59" pos:end="167:77"><expr pos:start="167:59" pos:end="167:77"><operator pos:start="167:59" pos:end="167:59">&amp;</operator><name pos:start="167:60" pos:end="167:77"><name pos:start="167:60" pos:end="167:62">ist</name><operator pos:start="167:63" pos:end="167:64">-&gt;</operator><name pos:start="167:65" pos:end="167:66">st</name><operator pos:start="167:67" pos:end="167:68">-&gt;</operator><name pos:start="167:69" pos:end="167:77">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>,

               <argument pos:start="169:16" pos:end="169:33"><expr pos:start="169:16" pos:end="169:33"><call pos:start="169:16" pos:end="169:33"><name pos:start="169:16" pos:end="169:24">av_ts2str</name><argument_list pos:start="169:25" pos:end="169:33">(<argument pos:start="169:26" pos:end="169:32"><expr pos:start="169:26" pos:end="169:32"><name pos:start="169:26" pos:end="169:32"><name pos:start="169:26" pos:end="169:28">pkt</name><operator pos:start="169:29" pos:end="169:29">.</operator><name pos:start="169:30" pos:end="169:32">dts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="169:36" pos:end="169:78"><expr pos:start="169:36" pos:end="169:78"><call pos:start="169:36" pos:end="169:78"><name pos:start="169:36" pos:end="169:48">av_ts2timestr</name><argument_list pos:start="169:49" pos:end="169:78">(<argument pos:start="169:50" pos:end="169:56"><expr pos:start="169:50" pos:end="169:56"><name pos:start="169:50" pos:end="169:56"><name pos:start="169:50" pos:end="169:52">pkt</name><operator pos:start="169:53" pos:end="169:53">.</operator><name pos:start="169:54" pos:end="169:56">dts</name></name></expr></argument>, <argument pos:start="169:59" pos:end="169:77"><expr pos:start="169:59" pos:end="169:77"><operator pos:start="169:59" pos:end="169:59">&amp;</operator><name pos:start="169:60" pos:end="169:77"><name pos:start="169:60" pos:end="169:62">ist</name><operator pos:start="169:63" pos:end="169:64">-&gt;</operator><name pos:start="169:65" pos:end="169:66">st</name><operator pos:start="169:67" pos:end="169:68">-&gt;</operator><name pos:start="169:69" pos:end="169:77">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>,

               <argument pos:start="171:16" pos:end="171:65"><expr pos:start="171:16" pos:end="171:65"><call pos:start="171:16" pos:end="171:65"><name pos:start="171:16" pos:end="171:24">av_ts2str</name><argument_list pos:start="171:25" pos:end="171:65">(<argument pos:start="171:26" pos:end="171:64"><expr pos:start="171:26" pos:end="171:64"><name pos:start="171:26" pos:end="171:53"><name pos:start="171:26" pos:end="171:36">input_files</name><index pos:start="171:37" pos:end="171:53">[<expr pos:start="171:38" pos:end="171:52"><name pos:start="171:38" pos:end="171:52"><name pos:start="171:38" pos:end="171:40">ist</name><operator pos:start="171:41" pos:end="171:42">-&gt;</operator><name pos:start="171:43" pos:end="171:52">file_index</name></name></expr>]</index></name><operator pos:start="171:54" pos:end="171:55">-&gt;</operator><name pos:start="171:56" pos:end="171:64">ts_offset</name></expr></argument>)</argument_list></call></expr></argument>,

               <argument pos:start="173:16" pos:end="173:86"><expr pos:start="173:16" pos:end="173:86"><call pos:start="173:16" pos:end="173:86"><name pos:start="173:16" pos:end="173:28">av_ts2timestr</name><argument_list pos:start="173:29" pos:end="173:86">(<argument pos:start="173:30" pos:end="173:68"><expr pos:start="173:30" pos:end="173:68"><name pos:start="173:30" pos:end="173:57"><name pos:start="173:30" pos:end="173:40">input_files</name><index pos:start="173:41" pos:end="173:57">[<expr pos:start="173:42" pos:end="173:56"><name pos:start="173:42" pos:end="173:56"><name pos:start="173:42" pos:end="173:44">ist</name><operator pos:start="173:45" pos:end="173:46">-&gt;</operator><name pos:start="173:47" pos:end="173:56">file_index</name></name></expr>]</index></name><operator pos:start="173:58" pos:end="173:59">-&gt;</operator><name pos:start="173:60" pos:end="173:68">ts_offset</name></expr></argument>, <argument pos:start="173:71" pos:end="173:85"><expr pos:start="173:71" pos:end="173:85"><operator pos:start="173:71" pos:end="173:71">&amp;</operator><name pos:start="173:72" pos:end="173:85">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="179:5" pos:end="245:5"><if pos:start="179:5" pos:end="245:5">if<condition pos:start="179:7" pos:end="179:101">(<expr pos:start="179:8" pos:end="179:100"><operator pos:start="179:8" pos:end="179:8">!</operator><name pos:start="179:9" pos:end="179:33"><name pos:start="179:9" pos:end="179:11">ist</name><operator pos:start="179:12" pos:end="179:13">-&gt;</operator><name pos:start="179:14" pos:end="179:33">wrap_correction_done</name></name> <operator pos:start="179:35" pos:end="179:36">&amp;&amp;</operator> <name pos:start="179:38" pos:end="179:51"><name pos:start="179:38" pos:end="179:39">is</name><operator pos:start="179:40" pos:end="179:41">-&gt;</operator><name pos:start="179:42" pos:end="179:51">start_time</name></name> <operator pos:start="179:53" pos:end="179:54">!=</operator> <name pos:start="179:56" pos:end="179:69">AV_NOPTS_VALUE</name> <operator pos:start="179:71" pos:end="179:72">&amp;&amp;</operator> <name pos:start="179:74" pos:end="179:95"><name pos:start="179:74" pos:end="179:76">ist</name><operator pos:start="179:77" pos:end="179:78">-&gt;</operator><name pos:start="179:79" pos:end="179:80">st</name><operator pos:start="179:81" pos:end="179:82">-&gt;</operator><name pos:start="179:83" pos:end="179:95">pts_wrap_bits</name></name> <operator pos:start="179:97" pos:end="179:97">&lt;</operator> <literal type="number" pos:start="179:99" pos:end="179:100">64</literal></expr>)</condition><block pos:start="179:102" pos:end="245:5">{<block_content pos:start="181:9" pos:end="243:9">

        <decl_stmt pos:start="181:9" pos:end="181:30"><decl pos:start="181:9" pos:end="181:21"><type pos:start="181:9" pos:end="181:15"><name pos:start="181:9" pos:end="181:15">int64_t</name></type> <name pos:start="181:17" pos:end="181:21">stime</name></decl>, <decl pos:start="181:24" pos:end="181:29"><type ref="prev" pos:start="181:9" pos:end="181:15"/><name pos:start="181:24" pos:end="181:29">stime2</name></decl>;</decl_stmt>

        <comment type="line" pos:start="183:9" pos:end="183:60">// Correcting starttime based on the enabled streams</comment>

        <comment type="line" pos:start="185:9" pos:end="185:142">// FIXME this ideally should be done before the first use of starttime but we do not know which are the enabled streams at that point.</comment>

        <comment type="line" pos:start="187:9" pos:end="187:75">//       so we instead do it here as part of discontinuity handling</comment>

        <if_stmt pos:start="189:9" pos:end="217:9"><if pos:start="189:9" pos:end="217:9">if <condition pos:start="189:12" pos:end="193:55">(   <expr pos:start="189:16" pos:end="193:54"><name pos:start="189:16" pos:end="189:28"><name pos:start="189:16" pos:end="189:18">ist</name><operator pos:start="189:19" pos:end="189:20">-&gt;</operator><name pos:start="189:21" pos:end="189:28">next_dts</name></name> <operator pos:start="189:30" pos:end="189:31">==</operator> <name pos:start="189:33" pos:end="189:46">AV_NOPTS_VALUE</name>

            <operator pos:start="191:13" pos:end="191:14">&amp;&amp;</operator> <name pos:start="191:16" pos:end="191:31"><name pos:start="191:16" pos:end="191:20">ifile</name><operator pos:start="191:21" pos:end="191:22">-&gt;</operator><name pos:start="191:23" pos:end="191:31">ts_offset</name></name> <operator pos:start="191:33" pos:end="191:34">==</operator> <operator pos:start="191:36" pos:end="191:36">-</operator><name pos:start="191:37" pos:end="191:50"><name pos:start="191:37" pos:end="191:38">is</name><operator pos:start="191:39" pos:end="191:40">-&gt;</operator><name pos:start="191:41" pos:end="191:50">start_time</name></name>

            <operator pos:start="193:13" pos:end="193:14">&amp;&amp;</operator> <operator pos:start="193:16" pos:end="193:16">(</operator><name pos:start="193:17" pos:end="193:34"><name pos:start="193:17" pos:end="193:18">is</name><operator pos:start="193:19" pos:end="193:20">-&gt;</operator><name pos:start="193:21" pos:end="193:27">iformat</name><operator pos:start="193:28" pos:end="193:29">-&gt;</operator><name pos:start="193:30" pos:end="193:34">flags</name></name> <operator pos:start="193:36" pos:end="193:36">&amp;</operator> <name pos:start="193:38" pos:end="193:53">AVFMT_TS_DISCONT</name><operator pos:start="193:54" pos:end="193:54">)</operator></expr>)</condition> <block pos:start="193:57" pos:end="217:9">{<block_content pos:start="195:13" pos:end="215:13">

            <decl_stmt pos:start="195:13" pos:end="195:47"><decl pos:start="195:13" pos:end="195:46"><type pos:start="195:13" pos:end="195:19"><name pos:start="195:13" pos:end="195:19">int64_t</name></type> <name pos:start="195:21" pos:end="195:34">new_start_time</name> <init pos:start="195:36" pos:end="195:46">= <expr pos:start="195:38" pos:end="195:46"><name pos:start="195:38" pos:end="195:46">INT64_MAX</name></expr></init></decl>;</decl_stmt>

            <for pos:start="197:13" pos:end="207:13">for <control pos:start="197:17" pos:end="197:44">(<init pos:start="197:18" pos:end="197:21"><expr pos:start="197:18" pos:end="197:20"><name pos:start="197:18" pos:end="197:18">i</name><operator pos:start="197:19" pos:end="197:19">=</operator><literal type="number" pos:start="197:20" pos:end="197:20">0</literal></expr>;</init> <condition pos:start="197:23" pos:end="197:39"><expr pos:start="197:23" pos:end="197:38"><name pos:start="197:23" pos:end="197:23">i</name><operator pos:start="197:24" pos:end="197:24">&lt;</operator><name pos:start="197:25" pos:end="197:38"><name pos:start="197:25" pos:end="197:26">is</name><operator pos:start="197:27" pos:end="197:28">-&gt;</operator><name pos:start="197:29" pos:end="197:38">nb_streams</name></name></expr>;</condition> <incr pos:start="197:41" pos:end="197:43"><expr pos:start="197:41" pos:end="197:43"><name pos:start="197:41" pos:end="197:41">i</name><operator pos:start="197:42" pos:end="197:43">++</operator></expr></incr>)</control> <block pos:start="197:46" pos:end="207:13">{<block_content pos:start="199:17" pos:end="205:116">

                <decl_stmt pos:start="199:17" pos:end="199:46"><decl pos:start="199:17" pos:end="199:45"><type pos:start="199:17" pos:end="199:26"><name pos:start="199:17" pos:end="199:24">AVStream</name> <modifier pos:start="199:26" pos:end="199:26">*</modifier></type><name pos:start="199:27" pos:end="199:28">st</name> <init pos:start="199:30" pos:end="199:45">= <expr pos:start="199:32" pos:end="199:45"><name pos:start="199:32" pos:end="199:45"><name pos:start="199:32" pos:end="199:33">is</name><operator pos:start="199:34" pos:end="199:35">-&gt;</operator><name pos:start="199:36" pos:end="199:42">streams</name><index pos:start="199:43" pos:end="199:45">[<expr pos:start="199:44" pos:end="199:44"><name pos:start="199:44" pos:end="199:44">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="201:17" pos:end="203:29"><if pos:start="201:17" pos:end="203:29">if<condition pos:start="201:19" pos:end="201:84">(<expr pos:start="201:20" pos:end="201:83"><name pos:start="201:20" pos:end="201:30"><name pos:start="201:20" pos:end="201:21">st</name><operator pos:start="201:22" pos:end="201:23">-&gt;</operator><name pos:start="201:24" pos:end="201:30">discard</name></name> <operator pos:start="201:32" pos:end="201:33">==</operator> <name pos:start="201:35" pos:end="201:47">AVDISCARD_ALL</name> <operator pos:start="201:49" pos:end="201:50">||</operator> <name pos:start="201:52" pos:end="201:65"><name pos:start="201:52" pos:end="201:53">st</name><operator pos:start="201:54" pos:end="201:55">-&gt;</operator><name pos:start="201:56" pos:end="201:65">start_time</name></name> <operator pos:start="201:67" pos:end="201:68">==</operator> <name pos:start="201:70" pos:end="201:83">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="203:21" pos:end="203:29"><block_content pos:start="203:21" pos:end="203:29">

                    <continue pos:start="203:21" pos:end="203:29">continue;</continue></block_content></block></if></if_stmt>

                <expr_stmt pos:start="205:17" pos:end="205:116"><expr pos:start="205:17" pos:end="205:115"><name pos:start="205:17" pos:end="205:30">new_start_time</name> <operator pos:start="205:32" pos:end="205:32">=</operator> <call pos:start="205:34" pos:end="205:115"><name pos:start="205:34" pos:end="205:38">FFMIN</name><argument_list pos:start="205:39" pos:end="205:115">(<argument pos:start="205:40" pos:end="205:53"><expr pos:start="205:40" pos:end="205:53"><name pos:start="205:40" pos:end="205:53">new_start_time</name></expr></argument>, <argument pos:start="205:56" pos:end="205:114"><expr pos:start="205:56" pos:end="205:114"><call pos:start="205:56" pos:end="205:114"><name pos:start="205:56" pos:end="205:67">av_rescale_q</name><argument_list pos:start="205:68" pos:end="205:114">(<argument pos:start="205:69" pos:end="205:82"><expr pos:start="205:69" pos:end="205:82"><name pos:start="205:69" pos:end="205:82"><name pos:start="205:69" pos:end="205:70">st</name><operator pos:start="205:71" pos:end="205:72">-&gt;</operator><name pos:start="205:73" pos:end="205:82">start_time</name></name></expr></argument>, <argument pos:start="205:85" pos:end="205:97"><expr pos:start="205:85" pos:end="205:97"><name pos:start="205:85" pos:end="205:97"><name pos:start="205:85" pos:end="205:86">st</name><operator pos:start="205:87" pos:end="205:88">-&gt;</operator><name pos:start="205:89" pos:end="205:97">time_base</name></name></expr></argument>, <argument pos:start="205:100" pos:end="205:113"><expr pos:start="205:100" pos:end="205:113"><name pos:start="205:100" pos:end="205:113">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <if_stmt pos:start="209:13" pos:end="215:13"><if pos:start="209:13" pos:end="215:13">if <condition pos:start="209:16" pos:end="209:48">(<expr pos:start="209:17" pos:end="209:47"><name pos:start="209:17" pos:end="209:30">new_start_time</name> <operator pos:start="209:32" pos:end="209:32">&gt;</operator> <name pos:start="209:34" pos:end="209:47"><name pos:start="209:34" pos:end="209:35">is</name><operator pos:start="209:36" pos:end="209:37">-&gt;</operator><name pos:start="209:38" pos:end="209:47">start_time</name></name></expr>)</condition> <block pos:start="209:50" pos:end="215:13">{<block_content pos:start="211:17" pos:end="213:51">

                <expr_stmt pos:start="211:17" pos:end="211:116"><expr pos:start="211:17" pos:end="211:115"><call pos:start="211:17" pos:end="211:115"><name pos:start="211:17" pos:end="211:22">av_log</name><argument_list pos:start="211:23" pos:end="211:115">(<argument pos:start="211:24" pos:end="211:25"><expr pos:start="211:24" pos:end="211:25"><name pos:start="211:24" pos:end="211:25">is</name></expr></argument>, <argument pos:start="211:28" pos:end="211:41"><expr pos:start="211:28" pos:end="211:41"><name pos:start="211:28" pos:end="211:41">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="211:44" pos:end="211:81"><expr pos:start="211:44" pos:end="211:81"><literal type="string" pos:start="211:44" pos:end="211:71">"Correcting start time by %"</literal><name pos:start="211:72" pos:end="211:77">PRId64</name><literal type="string" pos:start="211:78" pos:end="211:81">"\n"</literal></expr></argument>, <argument pos:start="211:84" pos:end="211:114"><expr pos:start="211:84" pos:end="211:114"><name pos:start="211:84" pos:end="211:97">new_start_time</name> <operator pos:start="211:99" pos:end="211:99">-</operator> <name pos:start="211:101" pos:end="211:114"><name pos:start="211:101" pos:end="211:102">is</name><operator pos:start="211:103" pos:end="211:104">-&gt;</operator><name pos:start="211:105" pos:end="211:114">start_time</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="213:17" pos:end="213:51"><expr pos:start="213:17" pos:end="213:50"><name pos:start="213:17" pos:end="213:32"><name pos:start="213:17" pos:end="213:21">ifile</name><operator pos:start="213:22" pos:end="213:23">-&gt;</operator><name pos:start="213:24" pos:end="213:32">ts_offset</name></name> <operator pos:start="213:34" pos:end="213:34">=</operator> <operator pos:start="213:36" pos:end="213:36">-</operator><name pos:start="213:37" pos:end="213:50">new_start_time</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="221:9" pos:end="221:81"><expr pos:start="221:9" pos:end="221:80"><name pos:start="221:9" pos:end="221:13">stime</name> <operator pos:start="221:15" pos:end="221:15">=</operator> <call pos:start="221:17" pos:end="221:80"><name pos:start="221:17" pos:end="221:28">av_rescale_q</name><argument_list pos:start="221:29" pos:end="221:80">(<argument pos:start="221:30" pos:end="221:43"><expr pos:start="221:30" pos:end="221:43"><name pos:start="221:30" pos:end="221:43"><name pos:start="221:30" pos:end="221:31">is</name><operator pos:start="221:32" pos:end="221:33">-&gt;</operator><name pos:start="221:34" pos:end="221:43">start_time</name></name></expr></argument>, <argument pos:start="221:46" pos:end="221:59"><expr pos:start="221:46" pos:end="221:59"><name pos:start="221:46" pos:end="221:59">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="221:62" pos:end="221:79"><expr pos:start="221:62" pos:end="221:79"><name pos:start="221:62" pos:end="221:79"><name pos:start="221:62" pos:end="221:64">ist</name><operator pos:start="221:65" pos:end="221:66">-&gt;</operator><name pos:start="221:67" pos:end="221:68">st</name><operator pos:start="221:69" pos:end="221:70">-&gt;</operator><name pos:start="221:71" pos:end="221:79">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="223:9" pos:end="223:55"><expr pos:start="223:9" pos:end="223:54"><name pos:start="223:9" pos:end="223:14">stime2</name><operator pos:start="223:15" pos:end="223:15">=</operator> <name pos:start="223:17" pos:end="223:21">stime</name> <operator pos:start="223:23" pos:end="223:23">+</operator> <operator pos:start="223:25" pos:end="223:25">(</operator><literal type="number" pos:start="223:26" pos:end="223:29">1ULL</literal><operator pos:start="223:30" pos:end="223:31">&lt;&lt;</operator><name pos:start="223:32" pos:end="223:53"><name pos:start="223:32" pos:end="223:34">ist</name><operator pos:start="223:35" pos:end="223:36">-&gt;</operator><name pos:start="223:37" pos:end="223:38">st</name><operator pos:start="223:39" pos:end="223:40">-&gt;</operator><name pos:start="223:41" pos:end="223:53">pts_wrap_bits</name></name><operator pos:start="223:54" pos:end="223:54">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="225:9" pos:end="225:38"><expr pos:start="225:9" pos:end="225:37"><name pos:start="225:9" pos:end="225:33"><name pos:start="225:9" pos:end="225:11">ist</name><operator pos:start="225:12" pos:end="225:13">-&gt;</operator><name pos:start="225:14" pos:end="225:33">wrap_correction_done</name></name> <operator pos:start="225:35" pos:end="225:35">=</operator> <literal type="number" pos:start="225:37" pos:end="225:37">1</literal></expr>;</expr_stmt>



        <if_stmt pos:start="229:9" pos:end="235:9"><if pos:start="229:9" pos:end="235:9">if<condition pos:start="229:11" pos:end="229:110">(<expr pos:start="229:12" pos:end="229:109"><name pos:start="229:12" pos:end="229:17">stime2</name> <operator pos:start="229:19" pos:end="229:19">&gt;</operator> <name pos:start="229:21" pos:end="229:25">stime</name> <operator pos:start="229:27" pos:end="229:28">&amp;&amp;</operator> <name pos:start="229:30" pos:end="229:36"><name pos:start="229:30" pos:end="229:32">pkt</name><operator pos:start="229:33" pos:end="229:33">.</operator><name pos:start="229:34" pos:end="229:36">dts</name></name> <operator pos:start="229:38" pos:end="229:39">!=</operator> <name pos:start="229:41" pos:end="229:54">AV_NOPTS_VALUE</name> <operator pos:start="229:56" pos:end="229:57">&amp;&amp;</operator> <name pos:start="229:59" pos:end="229:65"><name pos:start="229:59" pos:end="229:61">pkt</name><operator pos:start="229:62" pos:end="229:62">.</operator><name pos:start="229:63" pos:end="229:65">dts</name></name> <operator pos:start="229:67" pos:end="229:67">&gt;</operator> <name pos:start="229:69" pos:end="229:73">stime</name> <operator pos:start="229:75" pos:end="229:75">+</operator> <operator pos:start="229:77" pos:end="229:77">(</operator><literal type="number" pos:start="229:78" pos:end="229:80">1LL</literal><operator pos:start="229:81" pos:end="229:82">&lt;&lt;</operator><operator pos:start="229:83" pos:end="229:83">(</operator><name pos:start="229:84" pos:end="229:105"><name pos:start="229:84" pos:end="229:86">ist</name><operator pos:start="229:87" pos:end="229:88">-&gt;</operator><name pos:start="229:89" pos:end="229:90">st</name><operator pos:start="229:91" pos:end="229:92">-&gt;</operator><name pos:start="229:93" pos:end="229:105">pts_wrap_bits</name></name><operator pos:start="229:106" pos:end="229:106">-</operator><literal type="number" pos:start="229:107" pos:end="229:107">1</literal><operator pos:start="229:108" pos:end="229:108">)</operator><operator pos:start="229:109" pos:end="229:109">)</operator></expr>)</condition> <block pos:start="229:112" pos:end="235:9">{<block_content pos:start="231:13" pos:end="233:42">

            <expr_stmt pos:start="231:13" pos:end="231:52"><expr pos:start="231:13" pos:end="231:51"><name pos:start="231:13" pos:end="231:19"><name pos:start="231:13" pos:end="231:15">pkt</name><operator pos:start="231:16" pos:end="231:16">.</operator><name pos:start="231:17" pos:end="231:19">dts</name></name> <operator pos:start="231:21" pos:end="231:22">-=</operator> <literal type="number" pos:start="231:24" pos:end="231:27">1ULL</literal><operator pos:start="231:28" pos:end="231:29">&lt;&lt;</operator><name pos:start="231:30" pos:end="231:51"><name pos:start="231:30" pos:end="231:32">ist</name><operator pos:start="231:33" pos:end="231:34">-&gt;</operator><name pos:start="231:35" pos:end="231:36">st</name><operator pos:start="231:37" pos:end="231:38">-&gt;</operator><name pos:start="231:39" pos:end="231:51">pts_wrap_bits</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="233:13" pos:end="233:42"><expr pos:start="233:13" pos:end="233:41"><name pos:start="233:13" pos:end="233:37"><name pos:start="233:13" pos:end="233:15">ist</name><operator pos:start="233:16" pos:end="233:17">-&gt;</operator><name pos:start="233:18" pos:end="233:37">wrap_correction_done</name></name> <operator pos:start="233:39" pos:end="233:39">=</operator> <literal type="number" pos:start="233:41" pos:end="233:41">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="237:9" pos:end="243:9"><if pos:start="237:9" pos:end="243:9">if<condition pos:start="237:11" pos:end="237:110">(<expr pos:start="237:12" pos:end="237:109"><name pos:start="237:12" pos:end="237:17">stime2</name> <operator pos:start="237:19" pos:end="237:19">&gt;</operator> <name pos:start="237:21" pos:end="237:25">stime</name> <operator pos:start="237:27" pos:end="237:28">&amp;&amp;</operator> <name pos:start="237:30" pos:end="237:36"><name pos:start="237:30" pos:end="237:32">pkt</name><operator pos:start="237:33" pos:end="237:33">.</operator><name pos:start="237:34" pos:end="237:36">pts</name></name> <operator pos:start="237:38" pos:end="237:39">!=</operator> <name pos:start="237:41" pos:end="237:54">AV_NOPTS_VALUE</name> <operator pos:start="237:56" pos:end="237:57">&amp;&amp;</operator> <name pos:start="237:59" pos:end="237:65"><name pos:start="237:59" pos:end="237:61">pkt</name><operator pos:start="237:62" pos:end="237:62">.</operator><name pos:start="237:63" pos:end="237:65">pts</name></name> <operator pos:start="237:67" pos:end="237:67">&gt;</operator> <name pos:start="237:69" pos:end="237:73">stime</name> <operator pos:start="237:75" pos:end="237:75">+</operator> <operator pos:start="237:77" pos:end="237:77">(</operator><literal type="number" pos:start="237:78" pos:end="237:80">1LL</literal><operator pos:start="237:81" pos:end="237:82">&lt;&lt;</operator><operator pos:start="237:83" pos:end="237:83">(</operator><name pos:start="237:84" pos:end="237:105"><name pos:start="237:84" pos:end="237:86">ist</name><operator pos:start="237:87" pos:end="237:88">-&gt;</operator><name pos:start="237:89" pos:end="237:90">st</name><operator pos:start="237:91" pos:end="237:92">-&gt;</operator><name pos:start="237:93" pos:end="237:105">pts_wrap_bits</name></name><operator pos:start="237:106" pos:end="237:106">-</operator><literal type="number" pos:start="237:107" pos:end="237:107">1</literal><operator pos:start="237:108" pos:end="237:108">)</operator><operator pos:start="237:109" pos:end="237:109">)</operator></expr>)</condition> <block pos:start="237:112" pos:end="243:9">{<block_content pos:start="239:13" pos:end="241:42">

            <expr_stmt pos:start="239:13" pos:end="239:52"><expr pos:start="239:13" pos:end="239:51"><name pos:start="239:13" pos:end="239:19"><name pos:start="239:13" pos:end="239:15">pkt</name><operator pos:start="239:16" pos:end="239:16">.</operator><name pos:start="239:17" pos:end="239:19">pts</name></name> <operator pos:start="239:21" pos:end="239:22">-=</operator> <literal type="number" pos:start="239:24" pos:end="239:27">1ULL</literal><operator pos:start="239:28" pos:end="239:29">&lt;&lt;</operator><name pos:start="239:30" pos:end="239:51"><name pos:start="239:30" pos:end="239:32">ist</name><operator pos:start="239:33" pos:end="239:34">-&gt;</operator><name pos:start="239:35" pos:end="239:36">st</name><operator pos:start="239:37" pos:end="239:38">-&gt;</operator><name pos:start="239:39" pos:end="239:51">pts_wrap_bits</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="241:13" pos:end="241:42"><expr pos:start="241:13" pos:end="241:41"><name pos:start="241:13" pos:end="241:37"><name pos:start="241:13" pos:end="241:15">ist</name><operator pos:start="241:16" pos:end="241:17">-&gt;</operator><name pos:start="241:18" pos:end="241:37">wrap_correction_done</name></name> <operator pos:start="241:39" pos:end="241:39">=</operator> <literal type="number" pos:start="241:41" pos:end="241:41">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="249:5" pos:end="249:61">/* add the stream-global side data to the first packet */</comment>

    <if_stmt pos:start="251:5" pos:end="287:5"><if pos:start="251:5" pos:end="287:5">if <condition pos:start="251:8" pos:end="251:29">(<expr pos:start="251:9" pos:end="251:28"><name pos:start="251:9" pos:end="251:23"><name pos:start="251:9" pos:end="251:11">ist</name><operator pos:start="251:12" pos:end="251:13">-&gt;</operator><name pos:start="251:14" pos:end="251:23">nb_packets</name></name> <operator pos:start="251:25" pos:end="251:26">==</operator> <literal type="number" pos:start="251:28" pos:end="251:28">1</literal></expr>)</condition> <block pos:start="251:31" pos:end="287:5">{<block_content pos:start="253:9" pos:end="285:9">

        <if_stmt pos:start="253:9" pos:end="255:44"><if pos:start="253:9" pos:end="255:44">if <condition pos:start="253:12" pos:end="253:34">(<expr pos:start="253:13" pos:end="253:33"><name pos:start="253:13" pos:end="253:33"><name pos:start="253:13" pos:end="253:15">ist</name><operator pos:start="253:16" pos:end="253:17">-&gt;</operator><name pos:start="253:18" pos:end="253:19">st</name><operator pos:start="253:20" pos:end="253:21">-&gt;</operator><name pos:start="253:22" pos:end="253:33">nb_side_data</name></name></expr>)</condition><block type="pseudo" pos:start="255:13" pos:end="255:44"><block_content pos:start="255:13" pos:end="255:44">

            <expr_stmt pos:start="255:13" pos:end="255:44"><expr pos:start="255:13" pos:end="255:43"><call pos:start="255:13" pos:end="255:43"><name pos:start="255:13" pos:end="255:37">av_packet_split_side_data</name><argument_list pos:start="255:38" pos:end="255:43">(<argument pos:start="255:39" pos:end="255:42"><expr pos:start="255:39" pos:end="255:42"><operator pos:start="255:39" pos:end="255:39">&amp;</operator><name pos:start="255:40" pos:end="255:42">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <for pos:start="257:9" pos:end="285:9">for <control pos:start="257:13" pos:end="257:51">(<init pos:start="257:14" pos:end="257:19"><expr pos:start="257:14" pos:end="257:18"><name pos:start="257:14" pos:end="257:14">i</name> <operator pos:start="257:16" pos:end="257:16">=</operator> <literal type="number" pos:start="257:18" pos:end="257:18">0</literal></expr>;</init> <condition pos:start="257:21" pos:end="257:46"><expr pos:start="257:21" pos:end="257:45"><name pos:start="257:21" pos:end="257:21">i</name> <operator pos:start="257:23" pos:end="257:23">&lt;</operator> <name pos:start="257:25" pos:end="257:45"><name pos:start="257:25" pos:end="257:27">ist</name><operator pos:start="257:28" pos:end="257:29">-&gt;</operator><name pos:start="257:30" pos:end="257:31">st</name><operator pos:start="257:32" pos:end="257:33">-&gt;</operator><name pos:start="257:34" pos:end="257:45">nb_side_data</name></name></expr>;</condition> <incr pos:start="257:48" pos:end="257:50"><expr pos:start="257:48" pos:end="257:50"><name pos:start="257:48" pos:end="257:48">i</name><operator pos:start="257:49" pos:end="257:50">++</operator></expr></incr>)</control> <block pos:start="257:53" pos:end="285:9">{<block_content pos:start="259:13" pos:end="283:57">

            <decl_stmt pos:start="259:13" pos:end="259:62"><decl pos:start="259:13" pos:end="259:61"><type pos:start="259:13" pos:end="259:30"><name pos:start="259:13" pos:end="259:28">AVPacketSideData</name> <modifier pos:start="259:30" pos:end="259:30">*</modifier></type><name pos:start="259:31" pos:end="259:36">src_sd</name> <init pos:start="259:38" pos:end="259:61">= <expr pos:start="259:40" pos:end="259:61"><operator pos:start="259:40" pos:end="259:40">&amp;</operator><name pos:start="259:41" pos:end="259:61"><name pos:start="259:41" pos:end="259:43">ist</name><operator pos:start="259:44" pos:end="259:45">-&gt;</operator><name pos:start="259:46" pos:end="259:47">st</name><operator pos:start="259:48" pos:end="259:49">-&gt;</operator><name pos:start="259:50" pos:end="259:58">side_data</name><index pos:start="259:59" pos:end="259:61">[<expr pos:start="259:60" pos:end="259:60"><name pos:start="259:60" pos:end="259:60">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="261:13" pos:end="261:30"><decl pos:start="261:13" pos:end="261:29"><type pos:start="261:13" pos:end="261:21"><name pos:start="261:13" pos:end="261:19">uint8_t</name> <modifier pos:start="261:21" pos:end="261:21">*</modifier></type><name pos:start="261:22" pos:end="261:29">dst_data</name></decl>;</decl_stmt>



            <if_stmt pos:start="265:13" pos:end="267:25"><if pos:start="265:13" pos:end="267:25">if <condition pos:start="265:16" pos:end="265:66">(<expr pos:start="265:17" pos:end="265:65"><call pos:start="265:17" pos:end="265:65"><name pos:start="265:17" pos:end="265:39">av_packet_get_side_data</name><argument_list pos:start="265:40" pos:end="265:65">(<argument pos:start="265:41" pos:end="265:44"><expr pos:start="265:41" pos:end="265:44"><operator pos:start="265:41" pos:end="265:41">&amp;</operator><name pos:start="265:42" pos:end="265:44">pkt</name></expr></argument>, <argument pos:start="265:47" pos:end="265:58"><expr pos:start="265:47" pos:end="265:58"><name pos:start="265:47" pos:end="265:58"><name pos:start="265:47" pos:end="265:52">src_sd</name><operator pos:start="265:53" pos:end="265:54">-&gt;</operator><name pos:start="265:55" pos:end="265:58">type</name></name></expr></argument>, <argument pos:start="265:61" pos:end="265:64"><expr pos:start="265:61" pos:end="265:64"><name pos:start="265:61" pos:end="265:64">NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="267:17" pos:end="267:25"><block_content pos:start="267:17" pos:end="267:25">

                <continue pos:start="267:17" pos:end="267:25">continue;</continue></block_content></block></if></if_stmt>

            <if_stmt pos:start="269:13" pos:end="271:25"><if pos:start="269:13" pos:end="271:25">if <condition pos:start="269:16" pos:end="269:77">(<expr pos:start="269:17" pos:end="269:76"><name pos:start="269:17" pos:end="269:31"><name pos:start="269:17" pos:end="269:19">ist</name><operator pos:start="269:20" pos:end="269:21">-&gt;</operator><name pos:start="269:22" pos:end="269:31">autorotate</name></name> <operator pos:start="269:33" pos:end="269:34">&amp;&amp;</operator> <name pos:start="269:36" pos:end="269:47"><name pos:start="269:36" pos:end="269:41">src_sd</name><operator pos:start="269:42" pos:end="269:43">-&gt;</operator><name pos:start="269:44" pos:end="269:47">type</name></name> <operator pos:start="269:49" pos:end="269:50">==</operator> <name pos:start="269:52" pos:end="269:76">AV_PKT_DATA_DISPLAYMATRIX</name></expr>)</condition><block type="pseudo" pos:start="271:17" pos:end="271:25"><block_content pos:start="271:17" pos:end="271:25">

                <continue pos:start="271:17" pos:end="271:25">continue;</continue></block_content></block></if></if_stmt>



            <expr_stmt pos:start="275:13" pos:end="275:81"><expr pos:start="275:13" pos:end="275:80"><name pos:start="275:13" pos:end="275:20">dst_data</name> <operator pos:start="275:22" pos:end="275:22">=</operator> <call pos:start="275:24" pos:end="275:80"><name pos:start="275:24" pos:end="275:46">av_packet_new_side_data</name><argument_list pos:start="275:47" pos:end="275:80">(<argument pos:start="275:48" pos:end="275:51"><expr pos:start="275:48" pos:end="275:51"><operator pos:start="275:48" pos:end="275:48">&amp;</operator><name pos:start="275:49" pos:end="275:51">pkt</name></expr></argument>, <argument pos:start="275:54" pos:end="275:65"><expr pos:start="275:54" pos:end="275:65"><name pos:start="275:54" pos:end="275:65"><name pos:start="275:54" pos:end="275:59">src_sd</name><operator pos:start="275:60" pos:end="275:61">-&gt;</operator><name pos:start="275:62" pos:end="275:65">type</name></name></expr></argument>, <argument pos:start="275:68" pos:end="275:79"><expr pos:start="275:68" pos:end="275:79"><name pos:start="275:68" pos:end="275:79"><name pos:start="275:68" pos:end="275:73">src_sd</name><operator pos:start="275:74" pos:end="275:75">-&gt;</operator><name pos:start="275:76" pos:end="275:79">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="277:13" pos:end="279:32"><if pos:start="277:13" pos:end="279:32">if <condition pos:start="277:16" pos:end="277:26">(<expr pos:start="277:17" pos:end="277:25"><operator pos:start="277:17" pos:end="277:17">!</operator><name pos:start="277:18" pos:end="277:25">dst_data</name></expr>)</condition><block type="pseudo" pos:start="279:17" pos:end="279:32"><block_content pos:start="279:17" pos:end="279:32">

                <expr_stmt pos:start="279:17" pos:end="279:32"><expr pos:start="279:17" pos:end="279:31"><call pos:start="279:17" pos:end="279:31"><name pos:start="279:17" pos:end="279:28">exit_program</name><argument_list pos:start="279:29" pos:end="279:31">(<argument pos:start="279:30" pos:end="279:30"><expr pos:start="279:30" pos:end="279:30"><literal type="number" pos:start="279:30" pos:end="279:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="283:13" pos:end="283:57"><expr pos:start="283:13" pos:end="283:56"><call pos:start="283:13" pos:end="283:56"><name pos:start="283:13" pos:end="283:18">memcpy</name><argument_list pos:start="283:19" pos:end="283:56">(<argument pos:start="283:20" pos:end="283:27"><expr pos:start="283:20" pos:end="283:27"><name pos:start="283:20" pos:end="283:27">dst_data</name></expr></argument>, <argument pos:start="283:30" pos:end="283:41"><expr pos:start="283:30" pos:end="283:41"><name pos:start="283:30" pos:end="283:41"><name pos:start="283:30" pos:end="283:35">src_sd</name><operator pos:start="283:36" pos:end="283:37">-&gt;</operator><name pos:start="283:38" pos:end="283:41">data</name></name></expr></argument>, <argument pos:start="283:44" pos:end="283:55"><expr pos:start="283:44" pos:end="283:55"><name pos:start="283:44" pos:end="283:55"><name pos:start="283:44" pos:end="283:49">src_sd</name><operator pos:start="283:50" pos:end="283:51">-&gt;</operator><name pos:start="283:52" pos:end="283:55">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="291:5" pos:end="293:86"><if pos:start="291:5" pos:end="293:86">if <condition pos:start="291:8" pos:end="291:34">(<expr pos:start="291:9" pos:end="291:33"><name pos:start="291:9" pos:end="291:15"><name pos:start="291:9" pos:end="291:11">pkt</name><operator pos:start="291:12" pos:end="291:12">.</operator><name pos:start="291:13" pos:end="291:15">dts</name></name> <operator pos:start="291:17" pos:end="291:18">!=</operator> <name pos:start="291:20" pos:end="291:33">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="293:9" pos:end="293:86"><block_content pos:start="293:9" pos:end="293:86">

        <expr_stmt pos:start="293:9" pos:end="293:86"><expr pos:start="293:9" pos:end="293:85"><name pos:start="293:9" pos:end="293:15"><name pos:start="293:9" pos:end="293:11">pkt</name><operator pos:start="293:12" pos:end="293:12">.</operator><name pos:start="293:13" pos:end="293:15">dts</name></name> <operator pos:start="293:17" pos:end="293:18">+=</operator> <call pos:start="293:20" pos:end="293:85"><name pos:start="293:20" pos:end="293:31">av_rescale_q</name><argument_list pos:start="293:32" pos:end="293:85">(<argument pos:start="293:33" pos:end="293:48"><expr pos:start="293:33" pos:end="293:48"><name pos:start="293:33" pos:end="293:48"><name pos:start="293:33" pos:end="293:37">ifile</name><operator pos:start="293:38" pos:end="293:39">-&gt;</operator><name pos:start="293:40" pos:end="293:48">ts_offset</name></name></expr></argument>, <argument pos:start="293:51" pos:end="293:64"><expr pos:start="293:51" pos:end="293:64"><name pos:start="293:51" pos:end="293:64">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="293:67" pos:end="293:84"><expr pos:start="293:67" pos:end="293:84"><name pos:start="293:67" pos:end="293:84"><name pos:start="293:67" pos:end="293:69">ist</name><operator pos:start="293:70" pos:end="293:71">-&gt;</operator><name pos:start="293:72" pos:end="293:73">st</name><operator pos:start="293:74" pos:end="293:75">-&gt;</operator><name pos:start="293:76" pos:end="293:84">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="295:5" pos:end="297:86"><if pos:start="295:5" pos:end="297:86">if <condition pos:start="295:8" pos:end="295:34">(<expr pos:start="295:9" pos:end="295:33"><name pos:start="295:9" pos:end="295:15"><name pos:start="295:9" pos:end="295:11">pkt</name><operator pos:start="295:12" pos:end="295:12">.</operator><name pos:start="295:13" pos:end="295:15">pts</name></name> <operator pos:start="295:17" pos:end="295:18">!=</operator> <name pos:start="295:20" pos:end="295:33">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="297:9" pos:end="297:86"><block_content pos:start="297:9" pos:end="297:86">

        <expr_stmt pos:start="297:9" pos:end="297:86"><expr pos:start="297:9" pos:end="297:85"><name pos:start="297:9" pos:end="297:15"><name pos:start="297:9" pos:end="297:11">pkt</name><operator pos:start="297:12" pos:end="297:12">.</operator><name pos:start="297:13" pos:end="297:15">pts</name></name> <operator pos:start="297:17" pos:end="297:18">+=</operator> <call pos:start="297:20" pos:end="297:85"><name pos:start="297:20" pos:end="297:31">av_rescale_q</name><argument_list pos:start="297:32" pos:end="297:85">(<argument pos:start="297:33" pos:end="297:48"><expr pos:start="297:33" pos:end="297:48"><name pos:start="297:33" pos:end="297:48"><name pos:start="297:33" pos:end="297:37">ifile</name><operator pos:start="297:38" pos:end="297:39">-&gt;</operator><name pos:start="297:40" pos:end="297:48">ts_offset</name></name></expr></argument>, <argument pos:start="297:51" pos:end="297:64"><expr pos:start="297:51" pos:end="297:64"><name pos:start="297:51" pos:end="297:64">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="297:67" pos:end="297:84"><expr pos:start="297:67" pos:end="297:84"><name pos:start="297:67" pos:end="297:84"><name pos:start="297:67" pos:end="297:69">ist</name><operator pos:start="297:70" pos:end="297:71">-&gt;</operator><name pos:start="297:72" pos:end="297:73">st</name><operator pos:start="297:74" pos:end="297:75">-&gt;</operator><name pos:start="297:76" pos:end="297:84">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="301:5" pos:end="303:33"><if pos:start="301:5" pos:end="303:33">if <condition pos:start="301:8" pos:end="301:34">(<expr pos:start="301:9" pos:end="301:33"><name pos:start="301:9" pos:end="301:15"><name pos:start="301:9" pos:end="301:11">pkt</name><operator pos:start="301:12" pos:end="301:12">.</operator><name pos:start="301:13" pos:end="301:15">pts</name></name> <operator pos:start="301:17" pos:end="301:18">!=</operator> <name pos:start="301:20" pos:end="301:33">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="303:9" pos:end="303:33"><block_content pos:start="303:9" pos:end="303:33">

        <expr_stmt pos:start="303:9" pos:end="303:33"><expr pos:start="303:9" pos:end="303:32"><name pos:start="303:9" pos:end="303:15"><name pos:start="303:9" pos:end="303:11">pkt</name><operator pos:start="303:12" pos:end="303:12">.</operator><name pos:start="303:13" pos:end="303:15">pts</name></name> <operator pos:start="303:17" pos:end="303:18">*=</operator> <name pos:start="303:20" pos:end="303:32"><name pos:start="303:20" pos:end="303:22">ist</name><operator pos:start="303:23" pos:end="303:24">-&gt;</operator><name pos:start="303:25" pos:end="303:32">ts_scale</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="305:5" pos:end="307:33"><if pos:start="305:5" pos:end="307:33">if <condition pos:start="305:8" pos:end="305:34">(<expr pos:start="305:9" pos:end="305:33"><name pos:start="305:9" pos:end="305:15"><name pos:start="305:9" pos:end="305:11">pkt</name><operator pos:start="305:12" pos:end="305:12">.</operator><name pos:start="305:13" pos:end="305:15">dts</name></name> <operator pos:start="305:17" pos:end="305:18">!=</operator> <name pos:start="305:20" pos:end="305:33">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="307:9" pos:end="307:33"><block_content pos:start="307:9" pos:end="307:33">

        <expr_stmt pos:start="307:9" pos:end="307:33"><expr pos:start="307:9" pos:end="307:32"><name pos:start="307:9" pos:end="307:15"><name pos:start="307:9" pos:end="307:11">pkt</name><operator pos:start="307:12" pos:end="307:12">.</operator><name pos:start="307:13" pos:end="307:15">dts</name></name> <operator pos:start="307:17" pos:end="307:18">*=</operator> <name pos:start="307:20" pos:end="307:32"><name pos:start="307:20" pos:end="307:22">ist</name><operator pos:start="307:23" pos:end="307:24">-&gt;</operator><name pos:start="307:25" pos:end="307:32">ts_scale</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="311:5" pos:end="311:116"><expr pos:start="311:5" pos:end="311:115"><name pos:start="311:5" pos:end="311:11">pkt_dts</name> <operator pos:start="311:13" pos:end="311:13">=</operator> <call pos:start="311:15" pos:end="311:115"><name pos:start="311:15" pos:end="311:30">av_rescale_q_rnd</name><argument_list pos:start="311:31" pos:end="311:115">(<argument pos:start="311:32" pos:end="311:38"><expr pos:start="311:32" pos:end="311:38"><name pos:start="311:32" pos:end="311:38"><name pos:start="311:32" pos:end="311:34">pkt</name><operator pos:start="311:35" pos:end="311:35">.</operator><name pos:start="311:36" pos:end="311:38">dts</name></name></expr></argument>, <argument pos:start="311:41" pos:end="311:58"><expr pos:start="311:41" pos:end="311:58"><name pos:start="311:41" pos:end="311:58"><name pos:start="311:41" pos:end="311:43">ist</name><operator pos:start="311:44" pos:end="311:45">-&gt;</operator><name pos:start="311:46" pos:end="311:47">st</name><operator pos:start="311:48" pos:end="311:49">-&gt;</operator><name pos:start="311:50" pos:end="311:58">time_base</name></name></expr></argument>, <argument pos:start="311:61" pos:end="311:74"><expr pos:start="311:61" pos:end="311:74"><name pos:start="311:61" pos:end="311:74">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="311:77" pos:end="311:114"><expr pos:start="311:77" pos:end="311:114"><name pos:start="311:77" pos:end="311:93">AV_ROUND_NEAR_INF</name><operator pos:start="311:94" pos:end="311:94">|</operator><name pos:start="311:95" pos:end="311:114">AV_ROUND_PASS_MINMAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="313:5" pos:end="343:5"><if pos:start="313:5" pos:end="343:5">if <condition pos:start="313:8" pos:end="319:87">(<expr pos:start="313:9" pos:end="319:86"><operator pos:start="313:9" pos:end="313:9">(</operator><name pos:start="313:10" pos:end="313:33"><name pos:start="313:10" pos:end="313:12">ist</name><operator pos:start="313:13" pos:end="313:14">-&gt;</operator><name pos:start="313:15" pos:end="313:21">dec_ctx</name><operator pos:start="313:22" pos:end="313:23">-&gt;</operator><name pos:start="313:24" pos:end="313:33">codec_type</name></name> <operator pos:start="313:35" pos:end="313:36">==</operator> <name pos:start="313:38" pos:end="313:55">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="313:57" pos:end="313:58">||</operator>

         <name pos:start="315:10" pos:end="315:33"><name pos:start="315:10" pos:end="315:12">ist</name><operator pos:start="315:13" pos:end="315:14">-&gt;</operator><name pos:start="315:15" pos:end="315:21">dec_ctx</name><operator pos:start="315:22" pos:end="315:23">-&gt;</operator><name pos:start="315:24" pos:end="315:33">codec_type</name></name> <operator pos:start="315:35" pos:end="315:36">==</operator> <name pos:start="315:38" pos:end="315:55">AVMEDIA_TYPE_AUDIO</name><operator pos:start="315:56" pos:end="315:56">)</operator> <operator pos:start="315:58" pos:end="315:59">&amp;&amp;</operator>

        <name pos:start="317:9" pos:end="317:15">pkt_dts</name> <operator pos:start="317:17" pos:end="317:18">!=</operator> <name pos:start="317:20" pos:end="317:33">AV_NOPTS_VALUE</name> <operator pos:start="317:35" pos:end="317:36">&amp;&amp;</operator> <name pos:start="317:38" pos:end="317:50"><name pos:start="317:38" pos:end="317:40">ist</name><operator pos:start="317:41" pos:end="317:42">-&gt;</operator><name pos:start="317:43" pos:end="317:50">next_dts</name></name> <operator pos:start="317:52" pos:end="317:53">==</operator> <name pos:start="317:55" pos:end="317:68">AV_NOPTS_VALUE</name> <operator pos:start="317:70" pos:end="317:71">&amp;&amp;</operator> <operator pos:start="317:73" pos:end="317:73">!</operator><name pos:start="317:74" pos:end="317:80">copy_ts</name>

        <operator pos:start="319:9" pos:end="319:10">&amp;&amp;</operator> <operator pos:start="319:12" pos:end="319:12">(</operator><name pos:start="319:13" pos:end="319:30"><name pos:start="319:13" pos:end="319:14">is</name><operator pos:start="319:15" pos:end="319:16">-&gt;</operator><name pos:start="319:17" pos:end="319:23">iformat</name><operator pos:start="319:24" pos:end="319:25">-&gt;</operator><name pos:start="319:26" pos:end="319:30">flags</name></name> <operator pos:start="319:32" pos:end="319:32">&amp;</operator> <name pos:start="319:34" pos:end="319:49">AVFMT_TS_DISCONT</name><operator pos:start="319:50" pos:end="319:50">)</operator> <operator pos:start="319:52" pos:end="319:53">&amp;&amp;</operator> <name pos:start="319:55" pos:end="319:68"><name pos:start="319:55" pos:end="319:59">ifile</name><operator pos:start="319:60" pos:end="319:61">-&gt;</operator><name pos:start="319:62" pos:end="319:68">last_ts</name></name> <operator pos:start="319:70" pos:end="319:71">!=</operator> <name pos:start="319:73" pos:end="319:86">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="319:89" pos:end="343:5">{<block_content pos:start="321:9" pos:end="341:9">

        <decl_stmt pos:start="321:9" pos:end="321:51"><decl pos:start="321:9" pos:end="321:50"><type pos:start="321:9" pos:end="321:15"><name pos:start="321:9" pos:end="321:15">int64_t</name></type> <name pos:start="321:17" pos:end="321:21">delta</name>   <init pos:start="321:25" pos:end="321:50">= <expr pos:start="321:27" pos:end="321:50"><name pos:start="321:27" pos:end="321:33">pkt_dts</name> <operator pos:start="321:35" pos:end="321:35">-</operator> <name pos:start="321:37" pos:end="321:50"><name pos:start="321:37" pos:end="321:41">ifile</name><operator pos:start="321:42" pos:end="321:43">-&gt;</operator><name pos:start="321:44" pos:end="321:50">last_ts</name></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="323:9" pos:end="341:9"><if pos:start="323:9" pos:end="341:9">if <condition pos:start="323:12" pos:end="325:58">(<expr pos:start="323:13" pos:end="325:57"><name pos:start="323:13" pos:end="325:19"><name pos:start="323:13" pos:end="323:17">delta</name> <argument_list type="generic" pos:start="323:19" pos:end="325:19">&lt; <argument pos:start="323:21" pos:end="325:17"><expr pos:start="323:21" pos:end="325:17"><operator pos:start="323:21" pos:end="323:21">-</operator><literal type="number" pos:start="323:22" pos:end="323:24">1LL</literal><operator pos:start="323:25" pos:end="323:25">*</operator><name pos:start="323:26" pos:end="323:44">dts_delta_threshold</name><operator pos:start="323:45" pos:end="323:45">*</operator><name pos:start="323:46" pos:end="323:57">AV_TIME_BASE</name> <operator pos:start="323:59" pos:end="323:60">||</operator>

            <name pos:start="325:13" pos:end="325:17">delta</name></expr></argument> &gt;</argument_list></name>  <literal type="number" pos:start="325:22" pos:end="325:24">1LL</literal><operator pos:start="325:25" pos:end="325:25">*</operator><name pos:start="325:26" pos:end="325:44">dts_delta_threshold</name><operator pos:start="325:45" pos:end="325:45">*</operator><name pos:start="325:46" pos:end="325:57">AV_TIME_BASE</name></expr>)</condition><block pos:start="325:59" pos:end="341:9">{<block_content pos:start="327:13" pos:end="339:83">

            <expr_stmt pos:start="327:13" pos:end="327:38"><expr pos:start="327:13" pos:end="327:37"><name pos:start="327:13" pos:end="327:28"><name pos:start="327:13" pos:end="327:17">ifile</name><operator pos:start="327:18" pos:end="327:19">-&gt;</operator><name pos:start="327:20" pos:end="327:28">ts_offset</name></name> <operator pos:start="327:30" pos:end="327:31">-=</operator> <name pos:start="327:33" pos:end="327:37">delta</name></expr>;</expr_stmt>

            <expr_stmt pos:start="329:13" pos:end="333:44"><expr pos:start="329:13" pos:end="333:43"><call pos:start="329:13" pos:end="333:43"><name pos:start="329:13" pos:end="329:18">av_log</name><argument_list pos:start="329:19" pos:end="333:43">(<argument pos:start="329:20" pos:end="329:23"><expr pos:start="329:20" pos:end="329:23"><name pos:start="329:20" pos:end="329:23">NULL</name></expr></argument>, <argument pos:start="329:26" pos:end="329:37"><expr pos:start="329:26" pos:end="329:37"><name pos:start="329:26" pos:end="329:37">AV_LOG_DEBUG</name></expr></argument>,

                   <argument pos:start="331:20" pos:end="331:92"><expr pos:start="331:20" pos:end="331:92"><literal type="string" pos:start="331:20" pos:end="331:59">"Inter stream timestamp discontinuity %"</literal><name pos:start="331:60" pos:end="331:65">PRId64</name><literal type="string" pos:start="331:66" pos:end="331:82">", new offset= %"</literal><name pos:start="331:83" pos:end="331:88">PRId64</name><literal type="string" pos:start="331:89" pos:end="331:92">"\n"</literal></expr></argument>,

                   <argument pos:start="333:20" pos:end="333:24"><expr pos:start="333:20" pos:end="333:24"><name pos:start="333:20" pos:end="333:24">delta</name></expr></argument>, <argument pos:start="333:27" pos:end="333:42"><expr pos:start="333:27" pos:end="333:42"><name pos:start="333:27" pos:end="333:42"><name pos:start="333:27" pos:end="333:31">ifile</name><operator pos:start="333:32" pos:end="333:33">-&gt;</operator><name pos:start="333:34" pos:end="333:42">ts_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="335:13" pos:end="335:79"><expr pos:start="335:13" pos:end="335:78"><name pos:start="335:13" pos:end="335:19"><name pos:start="335:13" pos:end="335:15">pkt</name><operator pos:start="335:16" pos:end="335:16">.</operator><name pos:start="335:17" pos:end="335:19">dts</name></name> <operator pos:start="335:21" pos:end="335:22">-=</operator> <call pos:start="335:24" pos:end="335:78"><name pos:start="335:24" pos:end="335:35">av_rescale_q</name><argument_list pos:start="335:36" pos:end="335:78">(<argument pos:start="335:37" pos:end="335:41"><expr pos:start="335:37" pos:end="335:41"><name pos:start="335:37" pos:end="335:41">delta</name></expr></argument>, <argument pos:start="335:44" pos:end="335:57"><expr pos:start="335:44" pos:end="335:57"><name pos:start="335:44" pos:end="335:57">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="335:60" pos:end="335:77"><expr pos:start="335:60" pos:end="335:77"><name pos:start="335:60" pos:end="335:77"><name pos:start="335:60" pos:end="335:62">ist</name><operator pos:start="335:63" pos:end="335:64">-&gt;</operator><name pos:start="335:65" pos:end="335:66">st</name><operator pos:start="335:67" pos:end="335:68">-&gt;</operator><name pos:start="335:69" pos:end="335:77">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="337:13" pos:end="339:83"><if pos:start="337:13" pos:end="339:83">if <condition pos:start="337:16" pos:end="337:42">(<expr pos:start="337:17" pos:end="337:41"><name pos:start="337:17" pos:end="337:23"><name pos:start="337:17" pos:end="337:19">pkt</name><operator pos:start="337:20" pos:end="337:20">.</operator><name pos:start="337:21" pos:end="337:23">pts</name></name> <operator pos:start="337:25" pos:end="337:26">!=</operator> <name pos:start="337:28" pos:end="337:41">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="339:17" pos:end="339:83"><block_content pos:start="339:17" pos:end="339:83">

                <expr_stmt pos:start="339:17" pos:end="339:83"><expr pos:start="339:17" pos:end="339:82"><name pos:start="339:17" pos:end="339:23"><name pos:start="339:17" pos:end="339:19">pkt</name><operator pos:start="339:20" pos:end="339:20">.</operator><name pos:start="339:21" pos:end="339:23">pts</name></name> <operator pos:start="339:25" pos:end="339:26">-=</operator> <call pos:start="339:28" pos:end="339:82"><name pos:start="339:28" pos:end="339:39">av_rescale_q</name><argument_list pos:start="339:40" pos:end="339:82">(<argument pos:start="339:41" pos:end="339:45"><expr pos:start="339:41" pos:end="339:45"><name pos:start="339:41" pos:end="339:45">delta</name></expr></argument>, <argument pos:start="339:48" pos:end="339:61"><expr pos:start="339:48" pos:end="339:61"><name pos:start="339:48" pos:end="339:61">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="339:64" pos:end="339:81"><expr pos:start="339:64" pos:end="339:81"><name pos:start="339:64" pos:end="339:81"><name pos:start="339:64" pos:end="339:66">ist</name><operator pos:start="339:67" pos:end="339:68">-&gt;</operator><name pos:start="339:69" pos:end="339:70">st</name><operator pos:start="339:71" pos:end="339:72">-&gt;</operator><name pos:start="339:73" pos:end="339:81">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="347:5" pos:end="347:83"><expr pos:start="347:5" pos:end="347:82"><name pos:start="347:5" pos:end="347:12">duration</name> <operator pos:start="347:14" pos:end="347:14">=</operator> <call pos:start="347:16" pos:end="347:82"><name pos:start="347:16" pos:end="347:27">av_rescale_q</name><argument_list pos:start="347:28" pos:end="347:82">(<argument pos:start="347:29" pos:end="347:43"><expr pos:start="347:29" pos:end="347:43"><name pos:start="347:29" pos:end="347:43"><name pos:start="347:29" pos:end="347:33">ifile</name><operator pos:start="347:34" pos:end="347:35">-&gt;</operator><name pos:start="347:36" pos:end="347:43">duration</name></name></expr></argument>, <argument pos:start="347:46" pos:end="347:61"><expr pos:start="347:46" pos:end="347:61"><name pos:start="347:46" pos:end="347:61"><name pos:start="347:46" pos:end="347:50">ifile</name><operator pos:start="347:51" pos:end="347:52">-&gt;</operator><name pos:start="347:53" pos:end="347:61">time_base</name></name></expr></argument>, <argument pos:start="347:64" pos:end="347:81"><expr pos:start="347:64" pos:end="347:81"><name pos:start="347:64" pos:end="347:81"><name pos:start="347:64" pos:end="347:66">ist</name><operator pos:start="347:67" pos:end="347:68">-&gt;</operator><name pos:start="347:69" pos:end="347:70">st</name><operator pos:start="347:71" pos:end="347:72">-&gt;</operator><name pos:start="347:73" pos:end="347:81">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="349:5" pos:end="357:5"><if pos:start="349:5" pos:end="357:5">if <condition pos:start="349:8" pos:end="349:34">(<expr pos:start="349:9" pos:end="349:33"><name pos:start="349:9" pos:end="349:15"><name pos:start="349:9" pos:end="349:11">pkt</name><operator pos:start="349:12" pos:end="349:12">.</operator><name pos:start="349:13" pos:end="349:15">pts</name></name> <operator pos:start="349:17" pos:end="349:18">!=</operator> <name pos:start="349:20" pos:end="349:33">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="349:36" pos:end="357:5">{<block_content pos:start="351:9" pos:end="355:52">

        <expr_stmt pos:start="351:9" pos:end="351:28"><expr pos:start="351:9" pos:end="351:27"><name pos:start="351:9" pos:end="351:15"><name pos:start="351:9" pos:end="351:11">pkt</name><operator pos:start="351:12" pos:end="351:12">.</operator><name pos:start="351:13" pos:end="351:15">pts</name></name> <operator pos:start="351:17" pos:end="351:18">+=</operator> <name pos:start="351:20" pos:end="351:27">duration</name></expr>;</expr_stmt>

        <expr_stmt pos:start="353:9" pos:end="353:52"><expr pos:start="353:9" pos:end="353:51"><name pos:start="353:9" pos:end="353:20"><name pos:start="353:9" pos:end="353:11">ist</name><operator pos:start="353:12" pos:end="353:13">-&gt;</operator><name pos:start="353:14" pos:end="353:20">max_pts</name></name> <operator pos:start="353:22" pos:end="353:22">=</operator> <call pos:start="353:24" pos:end="353:51"><name pos:start="353:24" pos:end="353:28">FFMAX</name><argument_list pos:start="353:29" pos:end="353:51">(<argument pos:start="353:30" pos:end="353:36"><expr pos:start="353:30" pos:end="353:36"><name pos:start="353:30" pos:end="353:36"><name pos:start="353:30" pos:end="353:32">pkt</name><operator pos:start="353:33" pos:end="353:33">.</operator><name pos:start="353:34" pos:end="353:36">pts</name></name></expr></argument>, <argument pos:start="353:39" pos:end="353:50"><expr pos:start="353:39" pos:end="353:50"><name pos:start="353:39" pos:end="353:50"><name pos:start="353:39" pos:end="353:41">ist</name><operator pos:start="353:42" pos:end="353:43">-&gt;</operator><name pos:start="353:44" pos:end="353:50">max_pts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="355:9" pos:end="355:52"><expr pos:start="355:9" pos:end="355:51"><name pos:start="355:9" pos:end="355:20"><name pos:start="355:9" pos:end="355:11">ist</name><operator pos:start="355:12" pos:end="355:13">-&gt;</operator><name pos:start="355:14" pos:end="355:20">min_pts</name></name> <operator pos:start="355:22" pos:end="355:22">=</operator> <call pos:start="355:24" pos:end="355:51"><name pos:start="355:24" pos:end="355:28">FFMIN</name><argument_list pos:start="355:29" pos:end="355:51">(<argument pos:start="355:30" pos:end="355:36"><expr pos:start="355:30" pos:end="355:36"><name pos:start="355:30" pos:end="355:36"><name pos:start="355:30" pos:end="355:32">pkt</name><operator pos:start="355:33" pos:end="355:33">.</operator><name pos:start="355:34" pos:end="355:36">pts</name></name></expr></argument>, <argument pos:start="355:39" pos:end="355:50"><expr pos:start="355:39" pos:end="355:50"><name pos:start="355:39" pos:end="355:50"><name pos:start="355:39" pos:end="355:41">ist</name><operator pos:start="355:42" pos:end="355:43">-&gt;</operator><name pos:start="355:44" pos:end="355:50">min_pts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="361:5" pos:end="363:28"><if pos:start="361:5" pos:end="363:28">if <condition pos:start="361:8" pos:end="361:34">(<expr pos:start="361:9" pos:end="361:33"><name pos:start="361:9" pos:end="361:15"><name pos:start="361:9" pos:end="361:11">pkt</name><operator pos:start="361:12" pos:end="361:12">.</operator><name pos:start="361:13" pos:end="361:15">dts</name></name> <operator pos:start="361:17" pos:end="361:18">!=</operator> <name pos:start="361:20" pos:end="361:33">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="363:9" pos:end="363:28"><block_content pos:start="363:9" pos:end="363:28">

        <expr_stmt pos:start="363:9" pos:end="363:28"><expr pos:start="363:9" pos:end="363:27"><name pos:start="363:9" pos:end="363:15"><name pos:start="363:9" pos:end="363:11">pkt</name><operator pos:start="363:12" pos:end="363:12">.</operator><name pos:start="363:13" pos:end="363:15">dts</name></name> <operator pos:start="363:17" pos:end="363:18">+=</operator> <name pos:start="363:20" pos:end="363:27">duration</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="367:5" pos:end="367:116"><expr pos:start="367:5" pos:end="367:115"><name pos:start="367:5" pos:end="367:11">pkt_dts</name> <operator pos:start="367:13" pos:end="367:13">=</operator> <call pos:start="367:15" pos:end="367:115"><name pos:start="367:15" pos:end="367:30">av_rescale_q_rnd</name><argument_list pos:start="367:31" pos:end="367:115">(<argument pos:start="367:32" pos:end="367:38"><expr pos:start="367:32" pos:end="367:38"><name pos:start="367:32" pos:end="367:38"><name pos:start="367:32" pos:end="367:34">pkt</name><operator pos:start="367:35" pos:end="367:35">.</operator><name pos:start="367:36" pos:end="367:38">dts</name></name></expr></argument>, <argument pos:start="367:41" pos:end="367:58"><expr pos:start="367:41" pos:end="367:58"><name pos:start="367:41" pos:end="367:58"><name pos:start="367:41" pos:end="367:43">ist</name><operator pos:start="367:44" pos:end="367:45">-&gt;</operator><name pos:start="367:46" pos:end="367:47">st</name><operator pos:start="367:48" pos:end="367:49">-&gt;</operator><name pos:start="367:50" pos:end="367:58">time_base</name></name></expr></argument>, <argument pos:start="367:61" pos:end="367:74"><expr pos:start="367:61" pos:end="367:74"><name pos:start="367:61" pos:end="367:74">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="367:77" pos:end="367:114"><expr pos:start="367:77" pos:end="367:114"><name pos:start="367:77" pos:end="367:93">AV_ROUND_NEAR_INF</name><operator pos:start="367:94" pos:end="367:94">|</operator><name pos:start="367:95" pos:end="367:114">AV_ROUND_PASS_MINMAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="369:5" pos:end="435:5"><if pos:start="369:5" pos:end="435:5">if <condition pos:start="369:8" pos:end="375:17">(<expr pos:start="369:9" pos:end="375:16"><operator pos:start="369:9" pos:end="369:9">(</operator><name pos:start="369:10" pos:end="369:33"><name pos:start="369:10" pos:end="369:12">ist</name><operator pos:start="369:13" pos:end="369:14">-&gt;</operator><name pos:start="369:15" pos:end="369:21">dec_ctx</name><operator pos:start="369:22" pos:end="369:23">-&gt;</operator><name pos:start="369:24" pos:end="369:33">codec_type</name></name> <operator pos:start="369:35" pos:end="369:36">==</operator> <name pos:start="369:38" pos:end="369:55">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="369:57" pos:end="369:58">||</operator>

         <name pos:start="371:10" pos:end="371:33"><name pos:start="371:10" pos:end="371:12">ist</name><operator pos:start="371:13" pos:end="371:14">-&gt;</operator><name pos:start="371:15" pos:end="371:21">dec_ctx</name><operator pos:start="371:22" pos:end="371:23">-&gt;</operator><name pos:start="371:24" pos:end="371:33">codec_type</name></name> <operator pos:start="371:35" pos:end="371:36">==</operator> <name pos:start="371:38" pos:end="371:55">AVMEDIA_TYPE_AUDIO</name><operator pos:start="371:56" pos:end="371:56">)</operator> <operator pos:start="371:58" pos:end="371:59">&amp;&amp;</operator>

         <name pos:start="373:10" pos:end="373:16">pkt_dts</name> <operator pos:start="373:18" pos:end="373:19">!=</operator> <name pos:start="373:21" pos:end="373:34">AV_NOPTS_VALUE</name> <operator pos:start="373:36" pos:end="373:37">&amp;&amp;</operator> <name pos:start="373:39" pos:end="373:51"><name pos:start="373:39" pos:end="373:41">ist</name><operator pos:start="373:42" pos:end="373:43">-&gt;</operator><name pos:start="373:44" pos:end="373:51">next_dts</name></name> <operator pos:start="373:53" pos:end="373:54">!=</operator> <name pos:start="373:56" pos:end="373:69">AV_NOPTS_VALUE</name> <operator pos:start="373:71" pos:end="373:72">&amp;&amp;</operator>

        <operator pos:start="375:9" pos:end="375:9">!</operator><name pos:start="375:10" pos:end="375:16">copy_ts</name></expr>)</condition> <block pos:start="375:19" pos:end="435:5">{<block_content pos:start="377:9" pos:end="433:9">

        <decl_stmt pos:start="377:9" pos:end="377:50"><decl pos:start="377:9" pos:end="377:49"><type pos:start="377:9" pos:end="377:15"><name pos:start="377:9" pos:end="377:15">int64_t</name></type> <name pos:start="377:17" pos:end="377:21">delta</name>   <init pos:start="377:25" pos:end="377:49">= <expr pos:start="377:27" pos:end="377:49"><name pos:start="377:27" pos:end="377:33">pkt_dts</name> <operator pos:start="377:35" pos:end="377:35">-</operator> <name pos:start="377:37" pos:end="377:49"><name pos:start="377:37" pos:end="377:39">ist</name><operator pos:start="377:40" pos:end="377:41">-&gt;</operator><name pos:start="377:42" pos:end="377:49">next_dts</name></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="379:9" pos:end="433:9"><if pos:start="379:9" pos:end="403:9">if <condition pos:start="379:12" pos:end="379:50">(<expr pos:start="379:13" pos:end="379:49"><name pos:start="379:13" pos:end="379:30"><name pos:start="379:13" pos:end="379:14">is</name><operator pos:start="379:15" pos:end="379:16">-&gt;</operator><name pos:start="379:17" pos:end="379:23">iformat</name><operator pos:start="379:24" pos:end="379:25">-&gt;</operator><name pos:start="379:26" pos:end="379:30">flags</name></name> <operator pos:start="379:32" pos:end="379:32">&amp;</operator> <name pos:start="379:34" pos:end="379:49">AVFMT_TS_DISCONT</name></expr>)</condition> <block pos:start="379:52" pos:end="403:9">{<block_content pos:start="381:13" pos:end="401:13">

            <if_stmt pos:start="381:13" pos:end="401:13"><if pos:start="381:13" pos:end="401:13">if <condition pos:start="381:16" pos:end="385:70">(<expr pos:start="381:17" pos:end="385:69"><name pos:start="381:17" pos:end="383:23"><name pos:start="381:17" pos:end="381:21">delta</name> <argument_list type="generic" pos:start="381:23" pos:end="383:23">&lt; <argument pos:start="381:25" pos:end="383:21"><expr pos:start="381:25" pos:end="383:21"><operator pos:start="381:25" pos:end="381:25">-</operator><literal type="number" pos:start="381:26" pos:end="381:28">1LL</literal><operator pos:start="381:29" pos:end="381:29">*</operator><name pos:start="381:30" pos:end="381:48">dts_delta_threshold</name><operator pos:start="381:49" pos:end="381:49">*</operator><name pos:start="381:50" pos:end="381:61">AV_TIME_BASE</name> <operator pos:start="381:63" pos:end="381:64">||</operator>

                <name pos:start="383:17" pos:end="383:21">delta</name></expr></argument> &gt;</argument_list></name>  <literal type="number" pos:start="383:26" pos:end="383:28">1LL</literal><operator pos:start="383:29" pos:end="383:29">*</operator><name pos:start="383:30" pos:end="383:48">dts_delta_threshold</name><operator pos:start="383:49" pos:end="383:49">*</operator><name pos:start="383:50" pos:end="383:61">AV_TIME_BASE</name> <operator pos:start="383:63" pos:end="383:64">||</operator>

                <name pos:start="385:17" pos:end="385:23">pkt_dts</name> <operator pos:start="385:25" pos:end="385:25">+</operator> <name pos:start="385:27" pos:end="385:38">AV_TIME_BASE</name><operator pos:start="385:39" pos:end="385:39">/</operator><literal type="number" pos:start="385:40" pos:end="385:41">10</literal> <operator pos:start="385:43" pos:end="385:43">&lt;</operator> <call pos:start="385:45" pos:end="385:69"><name pos:start="385:45" pos:end="385:49">FFMAX</name><argument_list pos:start="385:50" pos:end="385:69">(<argument pos:start="385:51" pos:end="385:58"><expr pos:start="385:51" pos:end="385:58"><name pos:start="385:51" pos:end="385:58"><name pos:start="385:51" pos:end="385:53">ist</name><operator pos:start="385:54" pos:end="385:55">-&gt;</operator><name pos:start="385:56" pos:end="385:58">pts</name></name></expr></argument>, <argument pos:start="385:61" pos:end="385:68"><expr pos:start="385:61" pos:end="385:68"><name pos:start="385:61" pos:end="385:68"><name pos:start="385:61" pos:end="385:63">ist</name><operator pos:start="385:64" pos:end="385:65">-&gt;</operator><name pos:start="385:66" pos:end="385:68">dts</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="385:72" pos:end="401:13">{<block_content pos:start="387:17" pos:end="399:87">

                <expr_stmt pos:start="387:17" pos:end="387:42"><expr pos:start="387:17" pos:end="387:41"><name pos:start="387:17" pos:end="387:32"><name pos:start="387:17" pos:end="387:21">ifile</name><operator pos:start="387:22" pos:end="387:23">-&gt;</operator><name pos:start="387:24" pos:end="387:32">ts_offset</name></name> <operator pos:start="387:34" pos:end="387:35">-=</operator> <name pos:start="387:37" pos:end="387:41">delta</name></expr>;</expr_stmt>

                <expr_stmt pos:start="389:17" pos:end="393:48"><expr pos:start="389:17" pos:end="393:47"><call pos:start="389:17" pos:end="393:47"><name pos:start="389:17" pos:end="389:22">av_log</name><argument_list pos:start="389:23" pos:end="393:47">(<argument pos:start="389:24" pos:end="389:27"><expr pos:start="389:24" pos:end="389:27"><name pos:start="389:24" pos:end="389:27">NULL</name></expr></argument>, <argument pos:start="389:30" pos:end="389:41"><expr pos:start="389:30" pos:end="389:41"><name pos:start="389:30" pos:end="389:41">AV_LOG_DEBUG</name></expr></argument>,

                       <argument pos:start="391:24" pos:end="391:83"><expr pos:start="391:24" pos:end="391:83"><literal type="string" pos:start="391:24" pos:end="391:50">"timestamp discontinuity %"</literal><name pos:start="391:51" pos:end="391:56">PRId64</name><literal type="string" pos:start="391:57" pos:end="391:73">", new offset= %"</literal><name pos:start="391:74" pos:end="391:79">PRId64</name><literal type="string" pos:start="391:80" pos:end="391:83">"\n"</literal></expr></argument>,

                       <argument pos:start="393:24" pos:end="393:28"><expr pos:start="393:24" pos:end="393:28"><name pos:start="393:24" pos:end="393:28">delta</name></expr></argument>, <argument pos:start="393:31" pos:end="393:46"><expr pos:start="393:31" pos:end="393:46"><name pos:start="393:31" pos:end="393:46"><name pos:start="393:31" pos:end="393:35">ifile</name><operator pos:start="393:36" pos:end="393:37">-&gt;</operator><name pos:start="393:38" pos:end="393:46">ts_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="395:17" pos:end="395:83"><expr pos:start="395:17" pos:end="395:82"><name pos:start="395:17" pos:end="395:23"><name pos:start="395:17" pos:end="395:19">pkt</name><operator pos:start="395:20" pos:end="395:20">.</operator><name pos:start="395:21" pos:end="395:23">dts</name></name> <operator pos:start="395:25" pos:end="395:26">-=</operator> <call pos:start="395:28" pos:end="395:82"><name pos:start="395:28" pos:end="395:39">av_rescale_q</name><argument_list pos:start="395:40" pos:end="395:82">(<argument pos:start="395:41" pos:end="395:45"><expr pos:start="395:41" pos:end="395:45"><name pos:start="395:41" pos:end="395:45">delta</name></expr></argument>, <argument pos:start="395:48" pos:end="395:61"><expr pos:start="395:48" pos:end="395:61"><name pos:start="395:48" pos:end="395:61">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="395:64" pos:end="395:81"><expr pos:start="395:64" pos:end="395:81"><name pos:start="395:64" pos:end="395:81"><name pos:start="395:64" pos:end="395:66">ist</name><operator pos:start="395:67" pos:end="395:68">-&gt;</operator><name pos:start="395:69" pos:end="395:70">st</name><operator pos:start="395:71" pos:end="395:72">-&gt;</operator><name pos:start="395:73" pos:end="395:81">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="397:17" pos:end="399:87"><if pos:start="397:17" pos:end="399:87">if <condition pos:start="397:20" pos:end="397:46">(<expr pos:start="397:21" pos:end="397:45"><name pos:start="397:21" pos:end="397:27"><name pos:start="397:21" pos:end="397:23">pkt</name><operator pos:start="397:24" pos:end="397:24">.</operator><name pos:start="397:25" pos:end="397:27">pts</name></name> <operator pos:start="397:29" pos:end="397:30">!=</operator> <name pos:start="397:32" pos:end="397:45">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="399:21" pos:end="399:87"><block_content pos:start="399:21" pos:end="399:87">

                    <expr_stmt pos:start="399:21" pos:end="399:87"><expr pos:start="399:21" pos:end="399:86"><name pos:start="399:21" pos:end="399:27"><name pos:start="399:21" pos:end="399:23">pkt</name><operator pos:start="399:24" pos:end="399:24">.</operator><name pos:start="399:25" pos:end="399:27">pts</name></name> <operator pos:start="399:29" pos:end="399:30">-=</operator> <call pos:start="399:32" pos:end="399:86"><name pos:start="399:32" pos:end="399:43">av_rescale_q</name><argument_list pos:start="399:44" pos:end="399:86">(<argument pos:start="399:45" pos:end="399:49"><expr pos:start="399:45" pos:end="399:49"><name pos:start="399:45" pos:end="399:49">delta</name></expr></argument>, <argument pos:start="399:52" pos:end="399:65"><expr pos:start="399:52" pos:end="399:65"><name pos:start="399:52" pos:end="399:65">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="399:68" pos:end="399:85"><expr pos:start="399:68" pos:end="399:85"><name pos:start="399:68" pos:end="399:85"><name pos:start="399:68" pos:end="399:70">ist</name><operator pos:start="399:71" pos:end="399:72">-&gt;</operator><name pos:start="399:73" pos:end="399:74">st</name><operator pos:start="399:75" pos:end="399:76">-&gt;</operator><name pos:start="399:77" pos:end="399:85">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="403:11" pos:end="433:9">else <block pos:start="403:16" pos:end="433:9">{<block_content pos:start="405:13" pos:end="431:13">

            <if_stmt pos:start="405:13" pos:end="413:13"><if pos:start="405:13" pos:end="413:13">if <condition pos:start="405:16" pos:end="407:63">( <expr pos:start="405:18" pos:end="407:62"><name pos:start="405:18" pos:end="407:24"><name pos:start="405:18" pos:end="405:22">delta</name> <argument_list type="generic" pos:start="405:24" pos:end="407:24">&lt; <argument pos:start="405:26" pos:end="407:22"><expr pos:start="405:26" pos:end="407:22"><operator pos:start="405:26" pos:end="405:26">-</operator><literal type="number" pos:start="405:27" pos:end="405:29">1LL</literal><operator pos:start="405:30" pos:end="405:30">*</operator><name pos:start="405:31" pos:end="405:49">dts_error_threshold</name><operator pos:start="405:50" pos:end="405:50">*</operator><name pos:start="405:51" pos:end="405:62">AV_TIME_BASE</name> <operator pos:start="405:64" pos:end="405:65">||</operator>

                 <name pos:start="407:18" pos:end="407:22">delta</name></expr></argument> &gt;</argument_list></name>  <literal type="number" pos:start="407:27" pos:end="407:29">1LL</literal><operator pos:start="407:30" pos:end="407:30">*</operator><name pos:start="407:31" pos:end="407:49">dts_error_threshold</name><operator pos:start="407:50" pos:end="407:50">*</operator><name pos:start="407:51" pos:end="407:62">AV_TIME_BASE</name></expr>)</condition> <block pos:start="407:65" pos:end="413:13">{<block_content pos:start="409:17" pos:end="411:41">

                <expr_stmt pos:start="409:17" pos:end="409:145"><expr pos:start="409:17" pos:end="409:144"><call pos:start="409:17" pos:end="409:144"><name pos:start="409:17" pos:end="409:22">av_log</name><argument_list pos:start="409:23" pos:end="409:144">(<argument pos:start="409:24" pos:end="409:27"><expr pos:start="409:24" pos:end="409:27"><name pos:start="409:24" pos:end="409:27">NULL</name></expr></argument>, <argument pos:start="409:30" pos:end="409:43"><expr pos:start="409:30" pos:end="409:43"><name pos:start="409:30" pos:end="409:43">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="409:46" pos:end="409:101"><expr pos:start="409:46" pos:end="409:101"><literal type="string" pos:start="409:46" pos:end="409:52">"DTS %"</literal><name pos:start="409:53" pos:end="409:58">PRId64</name><literal type="string" pos:start="409:59" pos:end="409:68">", next:%"</literal><name pos:start="409:69" pos:end="409:74">PRId64</name><literal type="string" pos:start="409:75" pos:end="409:101">" st:%d invalid dropping\n"</literal></expr></argument>, <argument pos:start="409:104" pos:end="409:110"><expr pos:start="409:104" pos:end="409:110"><name pos:start="409:104" pos:end="409:110"><name pos:start="409:104" pos:end="409:106">pkt</name><operator pos:start="409:107" pos:end="409:107">.</operator><name pos:start="409:108" pos:end="409:110">dts</name></name></expr></argument>, <argument pos:start="409:113" pos:end="409:125"><expr pos:start="409:113" pos:end="409:125"><name pos:start="409:113" pos:end="409:125"><name pos:start="409:113" pos:end="409:115">ist</name><operator pos:start="409:116" pos:end="409:117">-&gt;</operator><name pos:start="409:118" pos:end="409:125">next_dts</name></name></expr></argument>, <argument pos:start="409:128" pos:end="409:143"><expr pos:start="409:128" pos:end="409:143"><name pos:start="409:128" pos:end="409:143"><name pos:start="409:128" pos:end="409:130">pkt</name><operator pos:start="409:131" pos:end="409:131">.</operator><name pos:start="409:132" pos:end="409:143">stream_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="411:17" pos:end="411:41"><expr pos:start="411:17" pos:end="411:40"><name pos:start="411:17" pos:end="411:23"><name pos:start="411:17" pos:end="411:19">pkt</name><operator pos:start="411:20" pos:end="411:20">.</operator><name pos:start="411:21" pos:end="411:23">dts</name></name> <operator pos:start="411:25" pos:end="411:25">=</operator> <name pos:start="411:27" pos:end="411:40">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="415:13" pos:end="431:13"><if pos:start="415:13" pos:end="431:13">if <condition pos:start="415:16" pos:end="415:42">(<expr pos:start="415:17" pos:end="415:41"><name pos:start="415:17" pos:end="415:23"><name pos:start="415:17" pos:end="415:19">pkt</name><operator pos:start="415:20" pos:end="415:20">.</operator><name pos:start="415:21" pos:end="415:23">pts</name></name> <operator pos:start="415:25" pos:end="415:26">!=</operator> <name pos:start="415:28" pos:end="415:41">AV_NOPTS_VALUE</name></expr>)</condition><block pos:start="415:43" pos:end="431:13">{<block_content pos:start="417:17" pos:end="429:17">

                <decl_stmt pos:start="417:17" pos:end="417:92"><decl pos:start="417:17" pos:end="417:91"><type pos:start="417:17" pos:end="417:23"><name pos:start="417:17" pos:end="417:23">int64_t</name></type> <name pos:start="417:25" pos:end="417:31">pkt_pts</name> <init pos:start="417:33" pos:end="417:91">= <expr pos:start="417:35" pos:end="417:91"><call pos:start="417:35" pos:end="417:91"><name pos:start="417:35" pos:end="417:46">av_rescale_q</name><argument_list pos:start="417:47" pos:end="417:91">(<argument pos:start="417:48" pos:end="417:54"><expr pos:start="417:48" pos:end="417:54"><name pos:start="417:48" pos:end="417:54"><name pos:start="417:48" pos:end="417:50">pkt</name><operator pos:start="417:51" pos:end="417:51">.</operator><name pos:start="417:52" pos:end="417:54">pts</name></name></expr></argument>, <argument pos:start="417:57" pos:end="417:74"><expr pos:start="417:57" pos:end="417:74"><name pos:start="417:57" pos:end="417:74"><name pos:start="417:57" pos:end="417:59">ist</name><operator pos:start="417:60" pos:end="417:61">-&gt;</operator><name pos:start="417:62" pos:end="417:63">st</name><operator pos:start="417:64" pos:end="417:65">-&gt;</operator><name pos:start="417:66" pos:end="417:74">time_base</name></name></expr></argument>, <argument pos:start="417:77" pos:end="417:90"><expr pos:start="417:77" pos:end="417:90"><name pos:start="417:77" pos:end="417:90">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="419:17" pos:end="419:50"><expr pos:start="419:17" pos:end="419:49"><name pos:start="419:17" pos:end="419:21">delta</name>   <operator pos:start="419:25" pos:end="419:25">=</operator> <name pos:start="419:27" pos:end="419:33">pkt_pts</name> <operator pos:start="419:35" pos:end="419:35">-</operator> <name pos:start="419:37" pos:end="419:49"><name pos:start="419:37" pos:end="419:39">ist</name><operator pos:start="419:40" pos:end="419:41">-&gt;</operator><name pos:start="419:42" pos:end="419:49">next_dts</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="421:17" pos:end="429:17"><if pos:start="421:17" pos:end="429:17">if <condition pos:start="421:20" pos:end="423:67">( <expr pos:start="421:22" pos:end="423:66"><name pos:start="421:22" pos:end="423:28"><name pos:start="421:22" pos:end="421:26">delta</name> <argument_list type="generic" pos:start="421:28" pos:end="423:28">&lt; <argument pos:start="421:30" pos:end="423:26"><expr pos:start="421:30" pos:end="423:26"><operator pos:start="421:30" pos:end="421:30">-</operator><literal type="number" pos:start="421:31" pos:end="421:33">1LL</literal><operator pos:start="421:34" pos:end="421:34">*</operator><name pos:start="421:35" pos:end="421:53">dts_error_threshold</name><operator pos:start="421:54" pos:end="421:54">*</operator><name pos:start="421:55" pos:end="421:66">AV_TIME_BASE</name> <operator pos:start="421:68" pos:end="421:69">||</operator>

                     <name pos:start="423:22" pos:end="423:26">delta</name></expr></argument> &gt;</argument_list></name>  <literal type="number" pos:start="423:31" pos:end="423:33">1LL</literal><operator pos:start="423:34" pos:end="423:34">*</operator><name pos:start="423:35" pos:end="423:53">dts_error_threshold</name><operator pos:start="423:54" pos:end="423:54">*</operator><name pos:start="423:55" pos:end="423:66">AV_TIME_BASE</name></expr>)</condition> <block pos:start="423:69" pos:end="429:17">{<block_content pos:start="425:21" pos:end="427:45">

                    <expr_stmt pos:start="425:21" pos:end="425:149"><expr pos:start="425:21" pos:end="425:148"><call pos:start="425:21" pos:end="425:148"><name pos:start="425:21" pos:end="425:26">av_log</name><argument_list pos:start="425:27" pos:end="425:148">(<argument pos:start="425:28" pos:end="425:31"><expr pos:start="425:28" pos:end="425:31"><name pos:start="425:28" pos:end="425:31">NULL</name></expr></argument>, <argument pos:start="425:34" pos:end="425:47"><expr pos:start="425:34" pos:end="425:47"><name pos:start="425:34" pos:end="425:47">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="425:50" pos:end="425:105"><expr pos:start="425:50" pos:end="425:105"><literal type="string" pos:start="425:50" pos:end="425:56">"PTS %"</literal><name pos:start="425:57" pos:end="425:62">PRId64</name><literal type="string" pos:start="425:63" pos:end="425:72">", next:%"</literal><name pos:start="425:73" pos:end="425:78">PRId64</name><literal type="string" pos:start="425:79" pos:end="425:105">" invalid dropping st:%d\n"</literal></expr></argument>, <argument pos:start="425:108" pos:end="425:114"><expr pos:start="425:108" pos:end="425:114"><name pos:start="425:108" pos:end="425:114"><name pos:start="425:108" pos:end="425:110">pkt</name><operator pos:start="425:111" pos:end="425:111">.</operator><name pos:start="425:112" pos:end="425:114">pts</name></name></expr></argument>, <argument pos:start="425:117" pos:end="425:129"><expr pos:start="425:117" pos:end="425:129"><name pos:start="425:117" pos:end="425:129"><name pos:start="425:117" pos:end="425:119">ist</name><operator pos:start="425:120" pos:end="425:121">-&gt;</operator><name pos:start="425:122" pos:end="425:129">next_dts</name></name></expr></argument>, <argument pos:start="425:132" pos:end="425:147"><expr pos:start="425:132" pos:end="425:147"><name pos:start="425:132" pos:end="425:147"><name pos:start="425:132" pos:end="425:134">pkt</name><operator pos:start="425:135" pos:end="425:135">.</operator><name pos:start="425:136" pos:end="425:147">stream_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="427:21" pos:end="427:45"><expr pos:start="427:21" pos:end="427:44"><name pos:start="427:21" pos:end="427:27"><name pos:start="427:21" pos:end="427:23">pkt</name><operator pos:start="427:24" pos:end="427:24">.</operator><name pos:start="427:25" pos:end="427:27">pts</name></name> <operator pos:start="427:29" pos:end="427:29">=</operator> <name pos:start="427:31" pos:end="427:44">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="439:5" pos:end="441:83"><if pos:start="439:5" pos:end="441:83">if <condition pos:start="439:8" pos:end="439:34">(<expr pos:start="439:9" pos:end="439:33"><name pos:start="439:9" pos:end="439:15"><name pos:start="439:9" pos:end="439:11">pkt</name><operator pos:start="439:12" pos:end="439:12">.</operator><name pos:start="439:13" pos:end="439:15">dts</name></name> <operator pos:start="439:17" pos:end="439:18">!=</operator> <name pos:start="439:20" pos:end="439:33">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="441:9" pos:end="441:83"><block_content pos:start="441:9" pos:end="441:83">

        <expr_stmt pos:start="441:9" pos:end="441:83"><expr pos:start="441:9" pos:end="441:82"><name pos:start="441:9" pos:end="441:22"><name pos:start="441:9" pos:end="441:13">ifile</name><operator pos:start="441:14" pos:end="441:15">-&gt;</operator><name pos:start="441:16" pos:end="441:22">last_ts</name></name> <operator pos:start="441:24" pos:end="441:24">=</operator> <call pos:start="441:26" pos:end="441:82"><name pos:start="441:26" pos:end="441:37">av_rescale_q</name><argument_list pos:start="441:38" pos:end="441:82">(<argument pos:start="441:39" pos:end="441:45"><expr pos:start="441:39" pos:end="441:45"><name pos:start="441:39" pos:end="441:45"><name pos:start="441:39" pos:end="441:41">pkt</name><operator pos:start="441:42" pos:end="441:42">.</operator><name pos:start="441:43" pos:end="441:45">dts</name></name></expr></argument>, <argument pos:start="441:48" pos:end="441:65"><expr pos:start="441:48" pos:end="441:65"><name pos:start="441:48" pos:end="441:65"><name pos:start="441:48" pos:end="441:50">ist</name><operator pos:start="441:51" pos:end="441:52">-&gt;</operator><name pos:start="441:53" pos:end="441:54">st</name><operator pos:start="441:55" pos:end="441:56">-&gt;</operator><name pos:start="441:57" pos:end="441:65">time_base</name></name></expr></argument>, <argument pos:start="441:68" pos:end="441:81"><expr pos:start="441:68" pos:end="441:81"><name pos:start="441:68" pos:end="441:81">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="445:5" pos:end="459:5"><if pos:start="445:5" pos:end="459:5">if <condition pos:start="445:8" pos:end="445:17">(<expr pos:start="445:9" pos:end="445:16"><name pos:start="445:9" pos:end="445:16">debug_ts</name></expr>)</condition> <block pos:start="445:19" pos:end="459:5">{<block_content pos:start="447:9" pos:end="457:88">

        <expr_stmt pos:start="447:9" pos:end="457:88"><expr pos:start="447:9" pos:end="457:87"><call pos:start="447:9" pos:end="457:87"><name pos:start="447:9" pos:end="447:14">av_log</name><argument_list pos:start="447:15" pos:end="457:87">(<argument pos:start="447:16" pos:end="447:19"><expr pos:start="447:16" pos:end="447:19"><name pos:start="447:16" pos:end="447:19">NULL</name></expr></argument>, <argument pos:start="447:22" pos:end="447:32"><expr pos:start="447:22" pos:end="447:32"><name pos:start="447:22" pos:end="447:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="447:35" pos:end="447:149"><expr pos:start="447:35" pos:end="447:149"><literal type="string" pos:start="447:35" pos:end="447:149">"demuxer+ffmpeg -&gt; ist_index:%d type:%s pkt_pts:%s pkt_pts_time:%s pkt_dts:%s pkt_dts_time:%s off:%s off_time:%s\n"</literal></expr></argument>,

               <argument pos:start="449:16" pos:end="449:50"><expr pos:start="449:16" pos:end="449:50"><name pos:start="449:16" pos:end="449:31"><name pos:start="449:16" pos:end="449:20">ifile</name><operator pos:start="449:21" pos:end="449:22">-&gt;</operator><name pos:start="449:23" pos:end="449:31">ist_index</name></name> <operator pos:start="449:33" pos:end="449:33">+</operator> <name pos:start="449:35" pos:end="449:50"><name pos:start="449:35" pos:end="449:37">pkt</name><operator pos:start="449:38" pos:end="449:38">.</operator><name pos:start="449:39" pos:end="449:50">stream_index</name></name></expr></argument>, <argument pos:start="449:53" pos:end="449:102"><expr pos:start="449:53" pos:end="449:102"><call pos:start="449:53" pos:end="449:102"><name pos:start="449:53" pos:end="449:76">av_get_media_type_string</name><argument_list pos:start="449:77" pos:end="449:102">(<argument pos:start="449:78" pos:end="449:101"><expr pos:start="449:78" pos:end="449:101"><name pos:start="449:78" pos:end="449:101"><name pos:start="449:78" pos:end="449:80">ist</name><operator pos:start="449:81" pos:end="449:82">-&gt;</operator><name pos:start="449:83" pos:end="449:89">dec_ctx</name><operator pos:start="449:90" pos:end="449:91">-&gt;</operator><name pos:start="449:92" pos:end="449:101">codec_type</name></name></expr></argument>)</argument_list></call></expr></argument>,

               <argument pos:start="451:16" pos:end="451:33"><expr pos:start="451:16" pos:end="451:33"><call pos:start="451:16" pos:end="451:33"><name pos:start="451:16" pos:end="451:24">av_ts2str</name><argument_list pos:start="451:25" pos:end="451:33">(<argument pos:start="451:26" pos:end="451:32"><expr pos:start="451:26" pos:end="451:32"><name pos:start="451:26" pos:end="451:32"><name pos:start="451:26" pos:end="451:28">pkt</name><operator pos:start="451:29" pos:end="451:29">.</operator><name pos:start="451:30" pos:end="451:32">pts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="451:36" pos:end="451:78"><expr pos:start="451:36" pos:end="451:78"><call pos:start="451:36" pos:end="451:78"><name pos:start="451:36" pos:end="451:48">av_ts2timestr</name><argument_list pos:start="451:49" pos:end="451:78">(<argument pos:start="451:50" pos:end="451:56"><expr pos:start="451:50" pos:end="451:56"><name pos:start="451:50" pos:end="451:56"><name pos:start="451:50" pos:end="451:52">pkt</name><operator pos:start="451:53" pos:end="451:53">.</operator><name pos:start="451:54" pos:end="451:56">pts</name></name></expr></argument>, <argument pos:start="451:59" pos:end="451:77"><expr pos:start="451:59" pos:end="451:77"><operator pos:start="451:59" pos:end="451:59">&amp;</operator><name pos:start="451:60" pos:end="451:77"><name pos:start="451:60" pos:end="451:62">ist</name><operator pos:start="451:63" pos:end="451:64">-&gt;</operator><name pos:start="451:65" pos:end="451:66">st</name><operator pos:start="451:67" pos:end="451:68">-&gt;</operator><name pos:start="451:69" pos:end="451:77">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>,

               <argument pos:start="453:16" pos:end="453:33"><expr pos:start="453:16" pos:end="453:33"><call pos:start="453:16" pos:end="453:33"><name pos:start="453:16" pos:end="453:24">av_ts2str</name><argument_list pos:start="453:25" pos:end="453:33">(<argument pos:start="453:26" pos:end="453:32"><expr pos:start="453:26" pos:end="453:32"><name pos:start="453:26" pos:end="453:32"><name pos:start="453:26" pos:end="453:28">pkt</name><operator pos:start="453:29" pos:end="453:29">.</operator><name pos:start="453:30" pos:end="453:32">dts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="453:36" pos:end="453:78"><expr pos:start="453:36" pos:end="453:78"><call pos:start="453:36" pos:end="453:78"><name pos:start="453:36" pos:end="453:48">av_ts2timestr</name><argument_list pos:start="453:49" pos:end="453:78">(<argument pos:start="453:50" pos:end="453:56"><expr pos:start="453:50" pos:end="453:56"><name pos:start="453:50" pos:end="453:56"><name pos:start="453:50" pos:end="453:52">pkt</name><operator pos:start="453:53" pos:end="453:53">.</operator><name pos:start="453:54" pos:end="453:56">dts</name></name></expr></argument>, <argument pos:start="453:59" pos:end="453:77"><expr pos:start="453:59" pos:end="453:77"><operator pos:start="453:59" pos:end="453:59">&amp;</operator><name pos:start="453:60" pos:end="453:77"><name pos:start="453:60" pos:end="453:62">ist</name><operator pos:start="453:63" pos:end="453:64">-&gt;</operator><name pos:start="453:65" pos:end="453:66">st</name><operator pos:start="453:67" pos:end="453:68">-&gt;</operator><name pos:start="453:69" pos:end="453:77">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>,

               <argument pos:start="455:16" pos:end="455:65"><expr pos:start="455:16" pos:end="455:65"><call pos:start="455:16" pos:end="455:65"><name pos:start="455:16" pos:end="455:24">av_ts2str</name><argument_list pos:start="455:25" pos:end="455:65">(<argument pos:start="455:26" pos:end="455:64"><expr pos:start="455:26" pos:end="455:64"><name pos:start="455:26" pos:end="455:53"><name pos:start="455:26" pos:end="455:36">input_files</name><index pos:start="455:37" pos:end="455:53">[<expr pos:start="455:38" pos:end="455:52"><name pos:start="455:38" pos:end="455:52"><name pos:start="455:38" pos:end="455:40">ist</name><operator pos:start="455:41" pos:end="455:42">-&gt;</operator><name pos:start="455:43" pos:end="455:52">file_index</name></name></expr>]</index></name><operator pos:start="455:54" pos:end="455:55">-&gt;</operator><name pos:start="455:56" pos:end="455:64">ts_offset</name></expr></argument>)</argument_list></call></expr></argument>,

               <argument pos:start="457:16" pos:end="457:86"><expr pos:start="457:16" pos:end="457:86"><call pos:start="457:16" pos:end="457:86"><name pos:start="457:16" pos:end="457:28">av_ts2timestr</name><argument_list pos:start="457:29" pos:end="457:86">(<argument pos:start="457:30" pos:end="457:68"><expr pos:start="457:30" pos:end="457:68"><name pos:start="457:30" pos:end="457:57"><name pos:start="457:30" pos:end="457:40">input_files</name><index pos:start="457:41" pos:end="457:57">[<expr pos:start="457:42" pos:end="457:56"><name pos:start="457:42" pos:end="457:56"><name pos:start="457:42" pos:end="457:44">ist</name><operator pos:start="457:45" pos:end="457:46">-&gt;</operator><name pos:start="457:47" pos:end="457:56">file_index</name></name></expr>]</index></name><operator pos:start="457:58" pos:end="457:59">-&gt;</operator><name pos:start="457:60" pos:end="457:68">ts_offset</name></expr></argument>, <argument pos:start="457:71" pos:end="457:85"><expr pos:start="457:71" pos:end="457:85"><operator pos:start="457:71" pos:end="457:71">&amp;</operator><name pos:start="457:72" pos:end="457:85">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="463:5" pos:end="463:38"><expr pos:start="463:5" pos:end="463:37"><call pos:start="463:5" pos:end="463:37"><name pos:start="463:5" pos:end="463:23">sub2video_heartbeat</name><argument_list pos:start="463:24" pos:end="463:37">(<argument pos:start="463:25" pos:end="463:27"><expr pos:start="463:25" pos:end="463:27"><name pos:start="463:25" pos:end="463:27">ist</name></expr></argument>, <argument pos:start="463:30" pos:end="463:36"><expr pos:start="463:30" pos:end="463:36"><name pos:start="463:30" pos:end="463:36"><name pos:start="463:30" pos:end="463:32">pkt</name><operator pos:start="463:33" pos:end="463:33">.</operator><name pos:start="463:34" pos:end="463:36">pts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="467:5" pos:end="467:39"><expr pos:start="467:5" pos:end="467:38"><call pos:start="467:5" pos:end="467:38"><name pos:start="467:5" pos:end="467:24">process_input_packet</name><argument_list pos:start="467:25" pos:end="467:38">(<argument pos:start="467:26" pos:end="467:28"><expr pos:start="467:26" pos:end="467:28"><name pos:start="467:26" pos:end="467:28">ist</name></expr></argument>, <argument pos:start="467:31" pos:end="467:34"><expr pos:start="467:31" pos:end="467:34"><operator pos:start="467:31" pos:end="467:31">&amp;</operator><name pos:start="467:32" pos:end="467:34">pkt</name></expr></argument>, <argument pos:start="467:37" pos:end="467:37"><expr pos:start="467:37" pos:end="467:37"><literal type="number" pos:start="467:37" pos:end="467:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="471:1" pos:end="471:15"><name pos:start="471:1" pos:end="471:14">discard_packet</name>:</label>

    <expr_stmt pos:start="473:5" pos:end="473:26"><expr pos:start="473:5" pos:end="473:25"><call pos:start="473:5" pos:end="473:25"><name pos:start="473:5" pos:end="473:19">av_packet_unref</name><argument_list pos:start="473:20" pos:end="473:25">(<argument pos:start="473:21" pos:end="473:24"><expr pos:start="473:21" pos:end="473:24"><operator pos:start="473:21" pos:end="473:21">&amp;</operator><name pos:start="473:22" pos:end="473:24">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="477:5" pos:end="477:13">return <expr pos:start="477:12" pos:end="477:12"><literal type="number" pos:start="477:12" pos:end="477:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
