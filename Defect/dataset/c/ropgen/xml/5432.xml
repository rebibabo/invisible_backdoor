<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5432.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">oggvorbis_encode_frame</name><parameter_list pos:start="1:34" pos:end="5:52">(<parameter pos:start="1:35" pos:end="1:60"><decl pos:start="1:35" pos:end="1:60"><type pos:start="1:35" pos:end="1:60"><name pos:start="1:35" pos:end="1:48">AVCodecContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:60">avccontext</name></decl></parameter>,

				  <parameter pos:start="3:35" pos:end="3:56"><decl pos:start="3:35" pos:end="3:56"><type pos:start="3:35" pos:end="3:56"><name pos:start="3:35" pos:end="3:42">unsigned</name> <name pos:start="3:44" pos:end="3:47">char</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:56">packets</name></decl></parameter>,

			   <parameter pos:start="5:28" pos:end="5:39"><decl pos:start="5:28" pos:end="5:39"><type pos:start="5:28" pos:end="5:39"><name pos:start="5:28" pos:end="5:30">int</name></type> <name pos:start="5:32" pos:end="5:39">buf_size</name></decl></parameter>, <parameter pos:start="5:42" pos:end="5:51"><decl pos:start="5:42" pos:end="5:51"><type pos:start="5:42" pos:end="5:51"><name pos:start="5:42" pos:end="5:45">void</name> <modifier pos:start="5:47" pos:end="5:47">*</modifier></type><name pos:start="5:48" pos:end="5:51">data</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="103:1">{<block_content pos:start="9:5" pos:end="101:13">

    <decl_stmt pos:start="9:5" pos:end="9:55"><decl pos:start="9:5" pos:end="9:53"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">OggVorbisContext</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:29">context</name> <init pos:start="9:31" pos:end="9:53">= <expr pos:start="9:33" pos:end="9:53"><name pos:start="9:33" pos:end="9:53"><name pos:start="9:33" pos:end="9:42">avccontext</name><operator pos:start="9:43" pos:end="9:44">-&gt;</operator><name pos:start="9:45" pos:end="9:53">priv_data</name></name></expr></init></decl> ;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:9">float</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier><modifier pos:start="11:12" pos:end="11:12">*</modifier></type><name pos:start="11:13" pos:end="11:18">buffer</name></decl> ;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:14">ogg_packet</name></type> <name pos:start="13:16" pos:end="13:17">op</name></decl> ;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:31"><decl pos:start="15:5" pos:end="15:29"><type pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:10">signed</name> <name pos:start="15:12" pos:end="15:15">char</name> <modifier pos:start="15:17" pos:end="15:17">*</modifier></type><name pos:start="15:18" pos:end="15:22">audio</name> <init pos:start="15:24" pos:end="15:29">= <expr pos:start="15:26" pos:end="15:29"><name pos:start="15:26" pos:end="15:29">data</name></expr></init></decl> ;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:43"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">l</name></decl>, <decl pos:start="17:12" pos:end="17:41"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:12" pos:end="17:18">samples</name> <init pos:start="17:20" pos:end="17:41">= <expr pos:start="17:22" pos:end="17:41"><name pos:start="17:22" pos:end="17:41">OGGVORBIS_FRAME_SIZE</name></expr></init></decl> ;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:60"><expr pos:start="21:5" pos:end="21:58"><name pos:start="21:5" pos:end="21:10">buffer</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <call pos:start="21:14" pos:end="21:58"><name pos:start="21:14" pos:end="21:35">vorbis_analysis_buffer</name><argument_list pos:start="21:36" pos:end="21:58">(<argument pos:start="21:37" pos:end="21:48"><expr pos:start="21:37" pos:end="21:48"><operator pos:start="21:37" pos:end="21:37">&amp;</operator><name pos:start="21:38" pos:end="21:48"><name pos:start="21:38" pos:end="21:44">context</name><operator pos:start="21:45" pos:end="21:46">-&gt;</operator><name pos:start="21:47" pos:end="21:48">vd</name></name></expr></argument>, <argument pos:start="21:51" pos:end="21:57"><expr pos:start="21:51" pos:end="21:57"><name pos:start="21:51" pos:end="21:57">samples</name></expr></argument>)</argument_list></call></expr> ;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="41:5"><if pos:start="25:5" pos:end="31:5">if<condition pos:start="25:7" pos:end="25:33">(<expr pos:start="25:8" pos:end="25:32"><name pos:start="25:8" pos:end="25:27"><name pos:start="25:8" pos:end="25:14">context</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:18">vi</name><operator pos:start="25:19" pos:end="25:19">.</operator><name pos:start="25:20" pos:end="25:27">channels</name></name> <operator pos:start="25:29" pos:end="25:30">==</operator> <literal type="number" pos:start="25:32" pos:end="25:32">1</literal></expr>)</condition> <block pos:start="25:35" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:78">

	<for pos:start="27:9" pos:end="29:78">for<control pos:start="27:12" pos:end="27:38">(<init pos:start="27:13" pos:end="27:19"><expr pos:start="27:13" pos:end="27:17"><name pos:start="27:13" pos:end="27:13">l</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <literal type="number" pos:start="27:17" pos:end="27:17">0</literal></expr> ;</init> <condition pos:start="27:21" pos:end="27:33"><expr pos:start="27:21" pos:end="27:31"><name pos:start="27:21" pos:end="27:21">l</name> <operator pos:start="27:23" pos:end="27:23">&lt;</operator> <name pos:start="27:25" pos:end="27:31">samples</name></expr> ;</condition> <incr pos:start="27:35" pos:end="27:37"><expr pos:start="27:35" pos:end="27:37"><name pos:start="27:35" pos:end="27:35">l</name><operator pos:start="27:36" pos:end="27:37">++</operator></expr></incr>)</control><block type="pseudo" pos:start="29:13" pos:end="29:78"><block_content pos:start="29:13" pos:end="29:78">

	    <expr_stmt pos:start="29:13" pos:end="29:78"><expr pos:start="29:13" pos:end="29:77"><name pos:start="29:13" pos:end="29:24"><name pos:start="29:13" pos:end="29:18">buffer</name><index pos:start="29:19" pos:end="29:21">[<expr pos:start="29:20" pos:end="29:20"><literal type="number" pos:start="29:20" pos:end="29:20">0</literal></expr>]</index><index pos:start="29:22" pos:end="29:24">[<expr pos:start="29:23" pos:end="29:23"><name pos:start="29:23" pos:end="29:23">l</name></expr>]</index></name><operator pos:start="29:25" pos:end="29:25">=</operator><operator pos:start="29:26" pos:end="29:26">(</operator><operator pos:start="29:27" pos:end="29:27">(</operator><name pos:start="29:28" pos:end="29:39"><name pos:start="29:28" pos:end="29:32">audio</name><index pos:start="29:33" pos:end="29:39">[<expr pos:start="29:34" pos:end="29:38"><name pos:start="29:34" pos:end="29:34">l</name><operator pos:start="29:35" pos:end="29:35">*</operator><literal type="number" pos:start="29:36" pos:end="29:37">2</literal><operator pos:start="29:37" pos:end="29:37">+</operator><literal type="number" pos:start="29:38" pos:end="29:38">1</literal></expr>]</index></name><operator pos:start="29:40" pos:end="29:41">&lt;&lt;</operator><literal type="number" pos:start="29:42" pos:end="29:42">8</literal><operator pos:start="29:43" pos:end="29:43">)</operator><operator pos:start="29:44" pos:end="29:44">|</operator><operator pos:start="29:45" pos:end="29:45">(</operator><literal type="number" pos:start="29:46" pos:end="29:51">0x00ff</literal><operator pos:start="29:52" pos:end="29:52">&amp;</operator><operator pos:start="29:53" pos:end="29:53">(</operator><name pos:start="29:54" pos:end="29:56">int</name><operator pos:start="29:57" pos:end="29:57">)</operator><name pos:start="29:58" pos:end="29:67"><name pos:start="29:58" pos:end="29:62">audio</name><index pos:start="29:63" pos:end="29:67">[<expr pos:start="29:64" pos:end="29:66"><name pos:start="29:64" pos:end="29:64">l</name><operator pos:start="29:65" pos:end="29:65">*</operator><literal type="number" pos:start="29:66" pos:end="29:66">2</literal></expr>]</index></name><operator pos:start="29:68" pos:end="29:68">)</operator><operator pos:start="29:69" pos:end="29:69">)</operator><operator pos:start="29:70" pos:end="29:70">/</operator><literal type="number" pos:start="29:71" pos:end="29:77">32768.f</literal></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if> <else pos:start="31:7" pos:end="41:5">else <block pos:start="31:12" pos:end="41:5">{<block_content pos:start="33:9" pos:end="39:9">

	<for pos:start="33:9" pos:end="39:9">for<control pos:start="33:12" pos:end="33:38">(<init pos:start="33:13" pos:end="33:19"><expr pos:start="33:13" pos:end="33:17"><name pos:start="33:13" pos:end="33:13">l</name> <operator pos:start="33:15" pos:end="33:15">=</operator> <literal type="number" pos:start="33:17" pos:end="33:17">0</literal></expr> ;</init> <condition pos:start="33:21" pos:end="33:33"><expr pos:start="33:21" pos:end="33:31"><name pos:start="33:21" pos:end="33:21">l</name> <operator pos:start="33:23" pos:end="33:23">&lt;</operator> <name pos:start="33:25" pos:end="33:31">samples</name></expr> ;</condition> <incr pos:start="33:35" pos:end="33:37"><expr pos:start="33:35" pos:end="33:37"><name pos:start="33:35" pos:end="33:35">l</name><operator pos:start="33:36" pos:end="33:37">++</operator></expr></incr>)</control><block pos:start="33:39" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:80">

	    <expr_stmt pos:start="35:13" pos:end="35:78"><expr pos:start="35:13" pos:end="35:77"><name pos:start="35:13" pos:end="35:24"><name pos:start="35:13" pos:end="35:18">buffer</name><index pos:start="35:19" pos:end="35:21">[<expr pos:start="35:20" pos:end="35:20"><literal type="number" pos:start="35:20" pos:end="35:20">0</literal></expr>]</index><index pos:start="35:22" pos:end="35:24">[<expr pos:start="35:23" pos:end="35:23"><name pos:start="35:23" pos:end="35:23">l</name></expr>]</index></name><operator pos:start="35:25" pos:end="35:25">=</operator><operator pos:start="35:26" pos:end="35:26">(</operator><operator pos:start="35:27" pos:end="35:27">(</operator><name pos:start="35:28" pos:end="35:39"><name pos:start="35:28" pos:end="35:32">audio</name><index pos:start="35:33" pos:end="35:39">[<expr pos:start="35:34" pos:end="35:38"><name pos:start="35:34" pos:end="35:34">l</name><operator pos:start="35:35" pos:end="35:35">*</operator><literal type="number" pos:start="35:36" pos:end="35:37">4</literal><operator pos:start="35:37" pos:end="35:37">+</operator><literal type="number" pos:start="35:38" pos:end="35:38">1</literal></expr>]</index></name><operator pos:start="35:40" pos:end="35:41">&lt;&lt;</operator><literal type="number" pos:start="35:42" pos:end="35:42">8</literal><operator pos:start="35:43" pos:end="35:43">)</operator><operator pos:start="35:44" pos:end="35:44">|</operator><operator pos:start="35:45" pos:end="35:45">(</operator><literal type="number" pos:start="35:46" pos:end="35:51">0x00ff</literal><operator pos:start="35:52" pos:end="35:52">&amp;</operator><operator pos:start="35:53" pos:end="35:53">(</operator><name pos:start="35:54" pos:end="35:56">int</name><operator pos:start="35:57" pos:end="35:57">)</operator><name pos:start="35:58" pos:end="35:67"><name pos:start="35:58" pos:end="35:62">audio</name><index pos:start="35:63" pos:end="35:67">[<expr pos:start="35:64" pos:end="35:66"><name pos:start="35:64" pos:end="35:64">l</name><operator pos:start="35:65" pos:end="35:65">*</operator><literal type="number" pos:start="35:66" pos:end="35:66">4</literal></expr>]</index></name><operator pos:start="35:68" pos:end="35:68">)</operator><operator pos:start="35:69" pos:end="35:69">)</operator><operator pos:start="35:70" pos:end="35:70">/</operator><literal type="number" pos:start="35:71" pos:end="35:77">32768.f</literal></expr>;</expr_stmt>

	    <expr_stmt pos:start="37:13" pos:end="37:80"><expr pos:start="37:13" pos:end="37:79"><name pos:start="37:13" pos:end="37:24"><name pos:start="37:13" pos:end="37:18">buffer</name><index pos:start="37:19" pos:end="37:21">[<expr pos:start="37:20" pos:end="37:20"><literal type="number" pos:start="37:20" pos:end="37:20">1</literal></expr>]</index><index pos:start="37:22" pos:end="37:24">[<expr pos:start="37:23" pos:end="37:23"><name pos:start="37:23" pos:end="37:23">l</name></expr>]</index></name><operator pos:start="37:25" pos:end="37:25">=</operator><operator pos:start="37:26" pos:end="37:26">(</operator><operator pos:start="37:27" pos:end="37:27">(</operator><name pos:start="37:28" pos:end="37:39"><name pos:start="37:28" pos:end="37:32">audio</name><index pos:start="37:33" pos:end="37:39">[<expr pos:start="37:34" pos:end="37:38"><name pos:start="37:34" pos:end="37:34">l</name><operator pos:start="37:35" pos:end="37:35">*</operator><literal type="number" pos:start="37:36" pos:end="37:37">4</literal><operator pos:start="37:37" pos:end="37:37">+</operator><literal type="number" pos:start="37:38" pos:end="37:38">3</literal></expr>]</index></name><operator pos:start="37:40" pos:end="37:41">&lt;&lt;</operator><literal type="number" pos:start="37:42" pos:end="37:42">8</literal><operator pos:start="37:43" pos:end="37:43">)</operator><operator pos:start="37:44" pos:end="37:44">|</operator><operator pos:start="37:45" pos:end="37:45">(</operator><literal type="number" pos:start="37:46" pos:end="37:51">0x00ff</literal><operator pos:start="37:52" pos:end="37:52">&amp;</operator><operator pos:start="37:53" pos:end="37:53">(</operator><name pos:start="37:54" pos:end="37:56">int</name><operator pos:start="37:57" pos:end="37:57">)</operator><name pos:start="37:58" pos:end="37:69"><name pos:start="37:58" pos:end="37:62">audio</name><index pos:start="37:63" pos:end="37:69">[<expr pos:start="37:64" pos:end="37:68"><name pos:start="37:64" pos:end="37:64">l</name><operator pos:start="37:65" pos:end="37:65">*</operator><literal type="number" pos:start="37:66" pos:end="37:67">4</literal><operator pos:start="37:67" pos:end="37:67">+</operator><literal type="number" pos:start="37:68" pos:end="37:68">2</literal></expr>]</index></name><operator pos:start="37:70" pos:end="37:70">)</operator><operator pos:start="37:71" pos:end="37:71">)</operator><operator pos:start="37:72" pos:end="37:72">/</operator><literal type="number" pos:start="37:73" pos:end="37:79">32768.f</literal></expr>;</expr_stmt>

	</block_content>}</block></for>

    </block_content>}</block></else></if_stmt>

    

    <expr_stmt pos:start="45:5" pos:end="45:50"><expr pos:start="45:5" pos:end="45:48"><call pos:start="45:5" pos:end="45:48"><name pos:start="45:5" pos:end="45:25">vorbis_analysis_wrote</name><argument_list pos:start="45:26" pos:end="45:48">(<argument pos:start="45:27" pos:end="45:38"><expr pos:start="45:27" pos:end="45:38"><operator pos:start="45:27" pos:end="45:27">&amp;</operator><name pos:start="45:28" pos:end="45:38"><name pos:start="45:28" pos:end="45:34">context</name><operator pos:start="45:35" pos:end="45:36">-&gt;</operator><name pos:start="45:37" pos:end="45:38">vd</name></name></expr></argument>, <argument pos:start="45:41" pos:end="45:47"><expr pos:start="45:41" pos:end="45:47"><name pos:start="45:41" pos:end="45:47">samples</name></expr></argument>)</argument_list></call></expr> ;</expr_stmt> 



    <while pos:start="49:5" pos:end="71:5">while<condition pos:start="49:10" pos:end="49:68">(<expr pos:start="49:11" pos:end="49:67"><call pos:start="49:11" pos:end="49:62"><name pos:start="49:11" pos:end="49:34">vorbis_analysis_blockout</name><argument_list pos:start="49:35" pos:end="49:62">(<argument pos:start="49:36" pos:end="49:47"><expr pos:start="49:36" pos:end="49:47"><operator pos:start="49:36" pos:end="49:36">&amp;</operator><name pos:start="49:37" pos:end="49:47"><name pos:start="49:37" pos:end="49:43">context</name><operator pos:start="49:44" pos:end="49:45">-&gt;</operator><name pos:start="49:46" pos:end="49:47">vd</name></name></expr></argument>, <argument pos:start="49:50" pos:end="49:61"><expr pos:start="49:50" pos:end="49:61"><operator pos:start="49:50" pos:end="49:50">&amp;</operator><name pos:start="49:51" pos:end="49:61"><name pos:start="49:51" pos:end="49:57">context</name><operator pos:start="49:58" pos:end="49:59">-&gt;</operator><name pos:start="49:60" pos:end="49:61">vb</name></name></expr></argument>)</argument_list></call> <operator pos:start="49:64" pos:end="49:65">==</operator> <literal type="number" pos:start="49:67" pos:end="49:67">1</literal></expr>)</condition> <block pos:start="49:70" pos:end="71:5">{<block_content pos:start="51:9" pos:end="69:9">

	<expr_stmt pos:start="51:9" pos:end="51:44"><expr pos:start="51:9" pos:end="51:43"><call pos:start="51:9" pos:end="51:43"><name pos:start="51:9" pos:end="51:23">vorbis_analysis</name><argument_list pos:start="51:24" pos:end="51:43">(<argument pos:start="51:25" pos:end="51:36"><expr pos:start="51:25" pos:end="51:36"><operator pos:start="51:25" pos:end="51:25">&amp;</operator><name pos:start="51:26" pos:end="51:36"><name pos:start="51:26" pos:end="51:32">context</name><operator pos:start="51:33" pos:end="51:34">-&gt;</operator><name pos:start="51:35" pos:end="51:36">vb</name></name></expr></argument>, <argument pos:start="51:39" pos:end="51:42"><expr pos:start="51:39" pos:end="51:42"><name pos:start="51:39" pos:end="51:42">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="53:9" pos:end="53:47"><expr pos:start="53:9" pos:end="53:45"><call pos:start="53:9" pos:end="53:45"><name pos:start="53:9" pos:end="53:31">vorbis_bitrate_addblock</name><argument_list pos:start="53:32" pos:end="53:45">(<argument pos:start="53:33" pos:end="53:44"><expr pos:start="53:33" pos:end="53:44"><operator pos:start="53:33" pos:end="53:33">&amp;</operator><name pos:start="53:34" pos:end="53:44"><name pos:start="53:34" pos:end="53:40">context</name><operator pos:start="53:41" pos:end="53:42">-&gt;</operator><name pos:start="53:43" pos:end="53:44">vb</name></name></expr></argument>)</argument_list></call></expr> ;</expr_stmt>



	<while pos:start="57:9" pos:end="69:9">while<condition pos:start="57:14" pos:end="57:60">(<expr pos:start="57:15" pos:end="57:59"><call pos:start="57:15" pos:end="57:59"><name pos:start="57:15" pos:end="57:40">vorbis_bitrate_flushpacket</name><argument_list pos:start="57:41" pos:end="57:59">(<argument pos:start="57:42" pos:end="57:53"><expr pos:start="57:42" pos:end="57:53"><operator pos:start="57:42" pos:end="57:42">&amp;</operator><name pos:start="57:43" pos:end="57:53"><name pos:start="57:43" pos:end="57:49">context</name><operator pos:start="57:50" pos:end="57:51">-&gt;</operator><name pos:start="57:52" pos:end="57:53">vd</name></name></expr></argument>, <argument pos:start="57:56" pos:end="57:58"><expr pos:start="57:56" pos:end="57:58"><operator pos:start="57:56" pos:end="57:56">&amp;</operator><name pos:start="57:57" pos:end="57:58">op</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="57:62" pos:end="69:9">{<block_content pos:start="59:13" pos:end="65:46">

            <expr_stmt pos:start="59:13" pos:end="59:85"><expr pos:start="59:13" pos:end="59:84"><call pos:start="59:13" pos:end="59:84"><name pos:start="59:13" pos:end="59:18">memcpy</name><argument_list pos:start="59:19" pos:end="59:84">(<argument pos:start="59:20" pos:end="59:58"><expr pos:start="59:20" pos:end="59:58"><name pos:start="59:20" pos:end="59:34"><name pos:start="59:20" pos:end="59:26">context</name><operator pos:start="59:27" pos:end="59:28">-&gt;</operator><name pos:start="59:29" pos:end="59:34">buffer</name></name> <operator pos:start="59:36" pos:end="59:36">+</operator> <name pos:start="59:38" pos:end="59:58"><name pos:start="59:38" pos:end="59:44">context</name><operator pos:start="59:45" pos:end="59:46">-&gt;</operator><name pos:start="59:47" pos:end="59:58">buffer_index</name></name></expr></argument>, <argument pos:start="59:61" pos:end="59:63"><expr pos:start="59:61" pos:end="59:63"><operator pos:start="59:61" pos:end="59:61">&amp;</operator><name pos:start="59:62" pos:end="59:63">op</name></expr></argument>, <argument pos:start="59:66" pos:end="59:83"><expr pos:start="59:66" pos:end="59:83"><sizeof pos:start="59:66" pos:end="59:83">sizeof<argument_list pos:start="59:72" pos:end="59:83">(<argument pos:start="59:73" pos:end="59:82"><expr pos:start="59:73" pos:end="59:82"><name pos:start="59:73" pos:end="59:82">ogg_packet</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:56"><expr pos:start="61:13" pos:end="61:55"><name pos:start="61:13" pos:end="61:33"><name pos:start="61:13" pos:end="61:19">context</name><operator pos:start="61:20" pos:end="61:21">-&gt;</operator><name pos:start="61:22" pos:end="61:33">buffer_index</name></name> <operator pos:start="61:35" pos:end="61:36">+=</operator> <sizeof pos:start="61:38" pos:end="61:55">sizeof<argument_list pos:start="61:44" pos:end="61:55">(<argument pos:start="61:45" pos:end="61:54"><expr pos:start="61:45" pos:end="61:54"><name pos:start="61:45" pos:end="61:54">ogg_packet</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:81"><expr pos:start="63:13" pos:end="63:80"><call pos:start="63:13" pos:end="63:80"><name pos:start="63:13" pos:end="63:18">memcpy</name><argument_list pos:start="63:19" pos:end="63:80">(<argument pos:start="63:20" pos:end="63:58"><expr pos:start="63:20" pos:end="63:58"><name pos:start="63:20" pos:end="63:34"><name pos:start="63:20" pos:end="63:26">context</name><operator pos:start="63:27" pos:end="63:28">-&gt;</operator><name pos:start="63:29" pos:end="63:34">buffer</name></name> <operator pos:start="63:36" pos:end="63:36">+</operator> <name pos:start="63:38" pos:end="63:58"><name pos:start="63:38" pos:end="63:44">context</name><operator pos:start="63:45" pos:end="63:46">-&gt;</operator><name pos:start="63:47" pos:end="63:58">buffer_index</name></name></expr></argument>, <argument pos:start="63:61" pos:end="63:69"><expr pos:start="63:61" pos:end="63:69"><name pos:start="63:61" pos:end="63:69"><name pos:start="63:61" pos:end="63:62">op</name><operator pos:start="63:63" pos:end="63:63">.</operator><name pos:start="63:64" pos:end="63:69">packet</name></name></expr></argument>, <argument pos:start="63:72" pos:end="63:79"><expr pos:start="63:72" pos:end="63:79"><name pos:start="63:72" pos:end="63:79"><name pos:start="63:72" pos:end="63:73">op</name><operator pos:start="63:74" pos:end="63:74">.</operator><name pos:start="63:75" pos:end="63:79">bytes</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:46"><expr pos:start="65:13" pos:end="65:45"><name pos:start="65:13" pos:end="65:33"><name pos:start="65:13" pos:end="65:19">context</name><operator pos:start="65:20" pos:end="65:21">-&gt;</operator><name pos:start="65:22" pos:end="65:33">buffer_index</name></name> <operator pos:start="65:35" pos:end="65:36">+=</operator> <name pos:start="65:38" pos:end="65:45"><name pos:start="65:38" pos:end="65:39">op</name><operator pos:start="65:40" pos:end="65:40">.</operator><name pos:start="65:41" pos:end="65:45">bytes</name></name></expr>;</expr_stmt>

<comment type="line" pos:start="67:1" pos:end="67:94">//            av_log(avccontext, AV_LOG_DEBUG, "e%d / %d\n", context-&gt;buffer_index, op.bytes);</comment>

	</block_content>}</block></while>

    </block_content>}</block></while>



    <if_stmt pos:start="75:5" pos:end="97:5"><if pos:start="75:5" pos:end="97:5">if<condition pos:start="75:7" pos:end="75:29">(<expr pos:start="75:8" pos:end="75:28"><name pos:start="75:8" pos:end="75:28"><name pos:start="75:8" pos:end="75:14">context</name><operator pos:start="75:15" pos:end="75:16">-&gt;</operator><name pos:start="75:17" pos:end="75:28">buffer_index</name></name></expr>)</condition><block pos:start="75:30" pos:end="97:5">{<block_content pos:start="77:9" pos:end="95:17">

        <decl_stmt pos:start="77:9" pos:end="77:54"><decl pos:start="77:9" pos:end="77:53"><type pos:start="77:9" pos:end="77:20"><name pos:start="77:9" pos:end="77:18">ogg_packet</name> <modifier pos:start="77:20" pos:end="77:20">*</modifier></type><name pos:start="77:21" pos:end="77:23">op2</name><init pos:start="77:24" pos:end="77:53">= <expr pos:start="77:26" pos:end="77:53"><operator pos:start="77:26" pos:end="77:26">(</operator><name pos:start="77:27" pos:end="77:36">ogg_packet</name><operator pos:start="77:37" pos:end="77:37">*</operator><operator pos:start="77:38" pos:end="77:38">)</operator><name pos:start="77:39" pos:end="77:53"><name pos:start="77:39" pos:end="77:45">context</name><operator pos:start="77:46" pos:end="77:47">-&gt;</operator><name pos:start="77:48" pos:end="77:53">buffer</name></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:59"><expr pos:start="79:9" pos:end="79:58"><name pos:start="79:9" pos:end="79:19"><name pos:start="79:9" pos:end="79:11">op2</name><operator pos:start="79:12" pos:end="79:13">-&gt;</operator><name pos:start="79:14" pos:end="79:19">packet</name></name> <operator pos:start="79:21" pos:end="79:21">=</operator> <name pos:start="79:23" pos:end="79:37"><name pos:start="79:23" pos:end="79:29">context</name><operator pos:start="79:30" pos:end="79:31">-&gt;</operator><name pos:start="79:32" pos:end="79:37">buffer</name></name> <operator pos:start="79:39" pos:end="79:39">+</operator> <sizeof pos:start="79:41" pos:end="79:58">sizeof<argument_list pos:start="79:47" pos:end="79:58">(<argument pos:start="79:48" pos:end="79:57"><expr pos:start="79:48" pos:end="79:57"><name pos:start="79:48" pos:end="79:57">ogg_packet</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:23"><expr pos:start="81:9" pos:end="81:22"><name pos:start="81:9" pos:end="81:9">l</name><operator pos:start="81:10" pos:end="81:10">=</operator>  <name pos:start="81:13" pos:end="81:22"><name pos:start="81:13" pos:end="81:15">op2</name><operator pos:start="81:16" pos:end="81:17">-&gt;</operator><name pos:start="81:18" pos:end="81:22">bytes</name></name></expr>;</expr_stmt>

        

        <expr_stmt pos:start="85:9" pos:end="85:40"><expr pos:start="85:9" pos:end="85:39"><call pos:start="85:9" pos:end="85:39"><name pos:start="85:9" pos:end="85:14">memcpy</name><argument_list pos:start="85:15" pos:end="85:39">(<argument pos:start="85:16" pos:end="85:22"><expr pos:start="85:16" pos:end="85:22"><name pos:start="85:16" pos:end="85:22">packets</name></expr></argument>, <argument pos:start="85:25" pos:end="85:35"><expr pos:start="85:25" pos:end="85:35"><name pos:start="85:25" pos:end="85:35"><name pos:start="85:25" pos:end="85:27">op2</name><operator pos:start="85:28" pos:end="85:29">-&gt;</operator><name pos:start="85:30" pos:end="85:35">packet</name></name></expr></argument>, <argument pos:start="85:38" pos:end="85:38"><expr pos:start="85:38" pos:end="85:38"><name pos:start="85:38" pos:end="85:38">l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:56"><expr pos:start="87:9" pos:end="87:55"><name pos:start="87:9" pos:end="87:29"><name pos:start="87:9" pos:end="87:15">context</name><operator pos:start="87:16" pos:end="87:17">-&gt;</operator><name pos:start="87:18" pos:end="87:29">buffer_index</name></name> <operator pos:start="87:31" pos:end="87:32">-=</operator> <name pos:start="87:34" pos:end="87:34">l</name> <operator pos:start="87:36" pos:end="87:36">+</operator> <sizeof pos:start="87:38" pos:end="87:55">sizeof<argument_list pos:start="87:44" pos:end="87:55">(<argument pos:start="87:45" pos:end="87:54"><expr pos:start="87:45" pos:end="87:54"><name pos:start="87:45" pos:end="87:54">ogg_packet</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:97"><expr pos:start="89:9" pos:end="89:96"><call pos:start="89:9" pos:end="89:96"><name pos:start="89:9" pos:end="89:14">memcpy</name><argument_list pos:start="89:15" pos:end="89:96">(<argument pos:start="89:16" pos:end="89:30"><expr pos:start="89:16" pos:end="89:30"><name pos:start="89:16" pos:end="89:30"><name pos:start="89:16" pos:end="89:22">context</name><operator pos:start="89:23" pos:end="89:24">-&gt;</operator><name pos:start="89:25" pos:end="89:30">buffer</name></name></expr></argument>, <argument pos:start="89:33" pos:end="89:72"><expr pos:start="89:33" pos:end="89:72"><name pos:start="89:33" pos:end="89:47"><name pos:start="89:33" pos:end="89:39">context</name><operator pos:start="89:40" pos:end="89:41">-&gt;</operator><name pos:start="89:42" pos:end="89:47">buffer</name></name> <operator pos:start="89:49" pos:end="89:49">+</operator> <name pos:start="89:51" pos:end="89:51">l</name> <operator pos:start="89:53" pos:end="89:53">+</operator> <sizeof pos:start="89:55" pos:end="89:72">sizeof<argument_list pos:start="89:61" pos:end="89:72">(<argument pos:start="89:62" pos:end="89:71"><expr pos:start="89:62" pos:end="89:71"><name pos:start="89:62" pos:end="89:71">ogg_packet</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="89:75" pos:end="89:95"><expr pos:start="89:75" pos:end="89:95"><name pos:start="89:75" pos:end="89:95"><name pos:start="89:75" pos:end="89:81">context</name><operator pos:start="89:82" pos:end="89:83">-&gt;</operator><name pos:start="89:84" pos:end="89:95">buffer_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        

<comment type="line" pos:start="93:1" pos:end="93:55">//        av_log(avccontext, AV_LOG_DEBUG, "E%d\n", l);</comment>

        <return pos:start="95:9" pos:end="95:17">return <expr pos:start="95:16" pos:end="95:16"><name pos:start="95:16" pos:end="95:16">l</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="101:5" pos:end="101:13">return <expr pos:start="101:12" pos:end="101:12"><literal type="number" pos:start="101:12" pos:end="101:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
