<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21960.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:12"><specifier pos:start="1:1" pos:end="1:5">const</specifier> <name pos:start="1:7" pos:end="1:10">char</name> <modifier pos:start="1:12" pos:end="1:12">*</modifier></type><name pos:start="1:13" pos:end="1:25">av_get_string</name><parameter_list pos:start="1:26" pos:end="1:102">(<parameter pos:start="1:27" pos:end="1:35"><decl pos:start="1:27" pos:end="1:35"><type pos:start="1:27" pos:end="1:35"><name pos:start="1:27" pos:end="1:30">void</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:35">obj</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:53"><decl pos:start="1:38" pos:end="1:53"><type pos:start="1:38" pos:end="1:53"><specifier pos:start="1:38" pos:end="1:42">const</specifier> <name pos:start="1:44" pos:end="1:47">char</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:53">name</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:77"><decl pos:start="1:56" pos:end="1:77"><type pos:start="1:56" pos:end="1:77"><specifier pos:start="1:56" pos:end="1:60">const</specifier> <name pos:start="1:62" pos:end="1:69">AVOption</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier><modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:77">o_out</name></decl></parameter>, <parameter pos:start="1:80" pos:end="1:88"><decl pos:start="1:80" pos:end="1:88"><type pos:start="1:80" pos:end="1:88"><name pos:start="1:80" pos:end="1:83">char</name> <modifier pos:start="1:85" pos:end="1:85">*</modifier></type><name pos:start="1:86" pos:end="1:88">buf</name></decl></parameter>, <parameter pos:start="1:91" pos:end="1:101"><decl pos:start="1:91" pos:end="1:101"><type pos:start="1:91" pos:end="1:101"><name pos:start="1:91" pos:end="1:93">int</name></type> <name pos:start="1:95" pos:end="1:101">buf_len</name></decl></parameter>)</parameter_list><block pos:start="1:103" pos:end="49:1">{<block_content pos:start="3:5" pos:end="47:15">

    <decl_stmt pos:start="3:5" pos:end="3:58"><decl pos:start="3:5" pos:end="3:57"><type pos:start="3:5" pos:end="3:20"><specifier pos:start="3:5" pos:end="3:9">const</specifier> <name pos:start="3:11" pos:end="3:18">AVOption</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier></type><name pos:start="3:21" pos:end="3:21">o</name><init pos:start="3:22" pos:end="3:57">= <expr pos:start="3:24" pos:end="3:57"><call pos:start="3:24" pos:end="3:57"><name pos:start="3:24" pos:end="3:34">av_find_opt</name><argument_list pos:start="3:35" pos:end="3:57">(<argument pos:start="3:36" pos:end="3:38"><expr pos:start="3:36" pos:end="3:38"><name pos:start="3:36" pos:end="3:38">obj</name></expr></argument>, <argument pos:start="3:41" pos:end="3:44"><expr pos:start="3:41" pos:end="3:44"><name pos:start="3:41" pos:end="3:44">name</name></expr></argument>, <argument pos:start="3:47" pos:end="3:50"><expr pos:start="3:47" pos:end="3:50"><name pos:start="3:47" pos:end="3:50">NULL</name></expr></argument>, <argument pos:start="3:53" pos:end="3:53"><expr pos:start="3:53" pos:end="3:53"><literal type="number" pos:start="3:53" pos:end="3:53">0</literal></expr></argument>, <argument pos:start="3:56" pos:end="3:56"><expr pos:start="3:56" pos:end="3:56"><literal type="number" pos:start="3:56" pos:end="3:56">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">void</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:13">dst</name></decl>;</decl_stmt>

    <if_stmt pos:start="7:5" pos:end="9:20"><if pos:start="7:5" pos:end="9:20">if<condition pos:start="7:7" pos:end="7:26">(<expr pos:start="7:8" pos:end="7:25"><operator pos:start="7:8" pos:end="7:8">!</operator><name pos:start="7:9" pos:end="7:9">o</name> <operator pos:start="7:11" pos:end="7:12">||</operator> <name pos:start="7:14" pos:end="7:22"><name pos:start="7:14" pos:end="7:14">o</name><operator pos:start="7:15" pos:end="7:16">-&gt;</operator><name pos:start="7:17" pos:end="7:22">offset</name></name><operator pos:start="7:23" pos:end="7:24">&lt;=</operator><literal type="number" pos:start="7:25" pos:end="7:25">0</literal></expr>)</condition><block type="pseudo" pos:start="9:9" pos:end="9:20"><block_content pos:start="9:9" pos:end="9:20">

        <return pos:start="9:9" pos:end="9:20">return <expr pos:start="9:16" pos:end="9:19"><name pos:start="9:16" pos:end="9:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="11:5" pos:end="13:20"><if pos:start="11:5" pos:end="13:20">if<condition pos:start="11:7" pos:end="11:59">(<expr pos:start="11:8" pos:end="11:58"><name pos:start="11:8" pos:end="11:14"><name pos:start="11:8" pos:end="11:8">o</name><operator pos:start="11:9" pos:end="11:10">-&gt;</operator><name pos:start="11:11" pos:end="11:14">type</name></name> <operator pos:start="11:16" pos:end="11:17">!=</operator> <name pos:start="11:19" pos:end="11:36">FF_OPT_TYPE_STRING</name> <operator pos:start="11:38" pos:end="11:39">&amp;&amp;</operator> <operator pos:start="11:41" pos:end="11:41">(</operator><operator pos:start="11:42" pos:end="11:42">!</operator><name pos:start="11:43" pos:end="11:45">buf</name> <operator pos:start="11:47" pos:end="11:48">||</operator> <operator pos:start="11:50" pos:end="11:50">!</operator><name pos:start="11:51" pos:end="11:57">buf_len</name><operator pos:start="11:58" pos:end="11:58">)</operator></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:20"><block_content pos:start="13:9" pos:end="13:20">

        <return pos:start="13:9" pos:end="13:20">return <expr pos:start="13:16" pos:end="13:19"><name pos:start="13:16" pos:end="13:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:37"><expr pos:start="17:5" pos:end="17:36"><name pos:start="17:5" pos:end="17:7">dst</name><operator pos:start="17:8" pos:end="17:8">=</operator> <operator pos:start="17:10" pos:end="17:10">(</operator><operator pos:start="17:11" pos:end="17:11">(</operator><name pos:start="17:12" pos:end="17:18">uint8_t</name><operator pos:start="17:19" pos:end="17:19">*</operator><operator pos:start="17:20" pos:end="17:20">)</operator><name pos:start="17:21" pos:end="17:23">obj</name><operator pos:start="17:24" pos:end="17:24">)</operator> <operator pos:start="17:26" pos:end="17:26">+</operator> <name pos:start="17:28" pos:end="17:36"><name pos:start="17:28" pos:end="17:28">o</name><operator pos:start="17:29" pos:end="17:30">-&gt;</operator><name pos:start="17:31" pos:end="17:36">offset</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="19:24"><if pos:start="19:5" pos:end="19:24">if<condition pos:start="19:7" pos:end="19:13">(<expr pos:start="19:8" pos:end="19:12"><name pos:start="19:8" pos:end="19:12">o_out</name></expr>)</condition><block type="pseudo" pos:start="19:15" pos:end="19:24"><block_content pos:start="19:15" pos:end="19:24"> <expr_stmt pos:start="19:15" pos:end="19:24"><expr pos:start="19:15" pos:end="19:23"><operator pos:start="19:15" pos:end="19:15">*</operator><name pos:start="19:16" pos:end="19:20">o_out</name><operator pos:start="19:21" pos:end="19:21">=</operator> <name pos:start="19:23" pos:end="19:23">o</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="25:19"><if pos:start="23:5" pos:end="25:19">if<condition pos:start="23:7" pos:end="23:37">(<expr pos:start="23:8" pos:end="23:36"><name pos:start="23:8" pos:end="23:14"><name pos:start="23:8" pos:end="23:8">o</name><operator pos:start="23:9" pos:end="23:10">-&gt;</operator><name pos:start="23:11" pos:end="23:14">type</name></name> <operator pos:start="23:16" pos:end="23:17">==</operator> <name pos:start="23:19" pos:end="23:36">FF_OPT_TYPE_STRING</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:19"><block_content pos:start="25:9" pos:end="25:19">

        <return pos:start="25:9" pos:end="25:19">return <expr pos:start="25:16" pos:end="25:18"><name pos:start="25:16" pos:end="25:18">dst</name></expr>;</return></block_content></block></if></if_stmt>



    <switch pos:start="29:5" pos:end="45:5">switch<condition pos:start="29:11" pos:end="29:19">(<expr pos:start="29:12" pos:end="29:18"><name pos:start="29:12" pos:end="29:18"><name pos:start="29:12" pos:end="29:12">o</name><operator pos:start="29:13" pos:end="29:14">-&gt;</operator><name pos:start="29:15" pos:end="29:18">type</name></name></expr>)</condition><block pos:start="29:20" pos:end="45:5">{<block_content pos:start="31:5" pos:end="43:25">

    <case pos:start="31:5" pos:end="31:27">case <expr pos:start="31:10" pos:end="31:26"><name pos:start="31:10" pos:end="31:26">FF_OPT_TYPE_FLAGS</name></expr>:</case>     <expr_stmt pos:start="31:33" pos:end="31:80"><expr pos:start="31:33" pos:end="31:79"><call pos:start="31:33" pos:end="31:79"><name pos:start="31:33" pos:end="31:40">snprintf</name><argument_list pos:start="31:41" pos:end="31:79">(<argument pos:start="31:42" pos:end="31:44"><expr pos:start="31:42" pos:end="31:44"><name pos:start="31:42" pos:end="31:44">buf</name></expr></argument>, <argument pos:start="31:47" pos:end="31:53"><expr pos:start="31:47" pos:end="31:53"><name pos:start="31:47" pos:end="31:53">buf_len</name></expr></argument>, <argument pos:start="31:56" pos:end="31:63"><expr pos:start="31:56" pos:end="31:63"><literal type="string" pos:start="31:56" pos:end="31:63">"0x%08X"</literal></expr></argument>,<argument pos:start="31:65" pos:end="31:78"><expr pos:start="31:65" pos:end="31:78"><operator pos:start="31:65" pos:end="31:65">*</operator><operator pos:start="31:66" pos:end="31:66">(</operator><name pos:start="31:67" pos:end="31:69">int</name>    <operator pos:start="31:74" pos:end="31:74">*</operator><operator pos:start="31:75" pos:end="31:75">)</operator><name pos:start="31:76" pos:end="31:78">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><break pos:start="31:81" pos:end="31:86">break;</break>

    <case pos:start="33:5" pos:end="33:25">case <expr pos:start="33:10" pos:end="33:24"><name pos:start="33:10" pos:end="33:24">FF_OPT_TYPE_INT</name></expr>:</case>       <expr_stmt pos:start="33:33" pos:end="33:78"><expr pos:start="33:33" pos:end="33:77"><call pos:start="33:33" pos:end="33:77"><name pos:start="33:33" pos:end="33:40">snprintf</name><argument_list pos:start="33:41" pos:end="33:77">(<argument pos:start="33:42" pos:end="33:44"><expr pos:start="33:42" pos:end="33:44"><name pos:start="33:42" pos:end="33:44">buf</name></expr></argument>, <argument pos:start="33:47" pos:end="33:53"><expr pos:start="33:47" pos:end="33:53"><name pos:start="33:47" pos:end="33:53">buf_len</name></expr></argument>, <argument pos:start="33:56" pos:end="33:59"><expr pos:start="33:56" pos:end="33:59"><literal type="string" pos:start="33:56" pos:end="33:59">"%d"</literal></expr></argument> , <argument pos:start="33:63" pos:end="33:76"><expr pos:start="33:63" pos:end="33:76"><operator pos:start="33:63" pos:end="33:63">*</operator><operator pos:start="33:64" pos:end="33:64">(</operator><name pos:start="33:65" pos:end="33:67">int</name>    <operator pos:start="33:72" pos:end="33:72">*</operator><operator pos:start="33:73" pos:end="33:73">)</operator><name pos:start="33:74" pos:end="33:76">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><break pos:start="33:79" pos:end="33:84">break;</break>

    <case pos:start="35:5" pos:end="35:27">case <expr pos:start="35:10" pos:end="35:26"><name pos:start="35:10" pos:end="35:26">FF_OPT_TYPE_INT64</name></expr>:</case>     <expr_stmt pos:start="35:33" pos:end="35:82"><expr pos:start="35:33" pos:end="35:81"><call pos:start="35:33" pos:end="35:81"><name pos:start="35:33" pos:end="35:40">snprintf</name><argument_list pos:start="35:41" pos:end="35:81">(<argument pos:start="35:42" pos:end="35:44"><expr pos:start="35:42" pos:end="35:44"><name pos:start="35:42" pos:end="35:44">buf</name></expr></argument>, <argument pos:start="35:47" pos:end="35:53"><expr pos:start="35:47" pos:end="35:53"><name pos:start="35:47" pos:end="35:53">buf_len</name></expr></argument>, <argument pos:start="35:56" pos:end="35:64"><expr pos:start="35:56" pos:end="35:64"><literal type="string" pos:start="35:56" pos:end="35:58">"%"</literal><name pos:start="35:59" pos:end="35:64">PRId64</name></expr></argument>, <argument pos:start="35:67" pos:end="35:80"><expr pos:start="35:67" pos:end="35:80"><operator pos:start="35:67" pos:end="35:67">*</operator><operator pos:start="35:68" pos:end="35:68">(</operator><name pos:start="35:69" pos:end="35:75">int64_t</name><operator pos:start="35:76" pos:end="35:76">*</operator><operator pos:start="35:77" pos:end="35:77">)</operator><name pos:start="35:78" pos:end="35:80">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><break pos:start="35:83" pos:end="35:88">break;</break>

    <case pos:start="37:5" pos:end="37:27">case <expr pos:start="37:10" pos:end="37:26"><name pos:start="37:10" pos:end="37:26">FF_OPT_TYPE_FLOAT</name></expr>:</case>     <expr_stmt pos:start="37:33" pos:end="37:78"><expr pos:start="37:33" pos:end="37:77"><call pos:start="37:33" pos:end="37:77"><name pos:start="37:33" pos:end="37:40">snprintf</name><argument_list pos:start="37:41" pos:end="37:77">(<argument pos:start="37:42" pos:end="37:44"><expr pos:start="37:42" pos:end="37:44"><name pos:start="37:42" pos:end="37:44">buf</name></expr></argument>, <argument pos:start="37:47" pos:end="37:53"><expr pos:start="37:47" pos:end="37:53"><name pos:start="37:47" pos:end="37:53">buf_len</name></expr></argument>, <argument pos:start="37:56" pos:end="37:59"><expr pos:start="37:56" pos:end="37:59"><literal type="string" pos:start="37:56" pos:end="37:59">"%f"</literal></expr></argument> , <argument pos:start="37:63" pos:end="37:76"><expr pos:start="37:63" pos:end="37:76"><operator pos:start="37:63" pos:end="37:63">*</operator><operator pos:start="37:64" pos:end="37:64">(</operator><name pos:start="37:65" pos:end="37:69">float</name>  <operator pos:start="37:72" pos:end="37:72">*</operator><operator pos:start="37:73" pos:end="37:73">)</operator><name pos:start="37:74" pos:end="37:76">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><break pos:start="37:79" pos:end="37:84">break;</break>

    <case pos:start="39:5" pos:end="39:28">case <expr pos:start="39:10" pos:end="39:27"><name pos:start="39:10" pos:end="39:27">FF_OPT_TYPE_DOUBLE</name></expr>:</case>    <expr_stmt pos:start="39:33" pos:end="39:78"><expr pos:start="39:33" pos:end="39:77"><call pos:start="39:33" pos:end="39:77"><name pos:start="39:33" pos:end="39:40">snprintf</name><argument_list pos:start="39:41" pos:end="39:77">(<argument pos:start="39:42" pos:end="39:44"><expr pos:start="39:42" pos:end="39:44"><name pos:start="39:42" pos:end="39:44">buf</name></expr></argument>, <argument pos:start="39:47" pos:end="39:53"><expr pos:start="39:47" pos:end="39:53"><name pos:start="39:47" pos:end="39:53">buf_len</name></expr></argument>, <argument pos:start="39:56" pos:end="39:59"><expr pos:start="39:56" pos:end="39:59"><literal type="string" pos:start="39:56" pos:end="39:59">"%f"</literal></expr></argument> , <argument pos:start="39:63" pos:end="39:76"><expr pos:start="39:63" pos:end="39:76"><operator pos:start="39:63" pos:end="39:63">*</operator><operator pos:start="39:64" pos:end="39:64">(</operator><name pos:start="39:65" pos:end="39:70">double</name> <operator pos:start="39:72" pos:end="39:72">*</operator><operator pos:start="39:73" pos:end="39:73">)</operator><name pos:start="39:74" pos:end="39:76">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><break pos:start="39:79" pos:end="39:84">break;</break>

    <case pos:start="41:5" pos:end="41:30">case <expr pos:start="41:10" pos:end="41:29"><name pos:start="41:10" pos:end="41:29">FF_OPT_TYPE_RATIONAL</name></expr>:</case>  <expr_stmt pos:start="41:33" pos:end="41:114"><expr pos:start="41:33" pos:end="41:113"><call pos:start="41:33" pos:end="41:113"><name pos:start="41:33" pos:end="41:40">snprintf</name><argument_list pos:start="41:41" pos:end="41:113">(<argument pos:start="41:42" pos:end="41:44"><expr pos:start="41:42" pos:end="41:44"><name pos:start="41:42" pos:end="41:44">buf</name></expr></argument>, <argument pos:start="41:47" pos:end="41:53"><expr pos:start="41:47" pos:end="41:53"><name pos:start="41:47" pos:end="41:53">buf_len</name></expr></argument>, <argument pos:start="41:56" pos:end="41:62"><expr pos:start="41:56" pos:end="41:62"><literal type="string" pos:start="41:56" pos:end="41:62">"%d/%d"</literal></expr></argument>, <argument pos:start="41:65" pos:end="41:87"><expr pos:start="41:65" pos:end="41:87"><operator pos:start="41:65" pos:end="41:65">(</operator><operator pos:start="41:66" pos:end="41:66">(</operator><name pos:start="41:67" pos:end="41:76">AVRational</name><operator pos:start="41:77" pos:end="41:77">*</operator><operator pos:start="41:78" pos:end="41:78">)</operator><name pos:start="41:79" pos:end="41:81">dst</name><operator pos:start="41:82" pos:end="41:82">)</operator><operator pos:start="41:83" pos:end="41:84">-&gt;</operator><name pos:start="41:85" pos:end="41:87">num</name></expr></argument>, <argument pos:start="41:90" pos:end="41:112"><expr pos:start="41:90" pos:end="41:112"><operator pos:start="41:90" pos:end="41:90">(</operator><operator pos:start="41:91" pos:end="41:91">(</operator><name pos:start="41:92" pos:end="41:101">AVRational</name><operator pos:start="41:102" pos:end="41:102">*</operator><operator pos:start="41:103" pos:end="41:103">)</operator><name pos:start="41:104" pos:end="41:106">dst</name><operator pos:start="41:107" pos:end="41:107">)</operator><operator pos:start="41:108" pos:end="41:109">-&gt;</operator><name pos:start="41:110" pos:end="41:112">den</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><break pos:start="41:115" pos:end="41:120">break;</break>

    <default pos:start="43:5" pos:end="43:12">default:</default> <return pos:start="43:14" pos:end="43:25">return <expr pos:start="43:21" pos:end="43:24"><name pos:start="43:21" pos:end="43:24">NULL</name></expr>;</return>

    </block_content>}</block></switch>

    <return pos:start="47:5" pos:end="47:15">return <expr pos:start="47:12" pos:end="47:14"><name pos:start="47:12" pos:end="47:14">buf</name></expr>;</return>

</block_content>}</block></function>
</unit>
