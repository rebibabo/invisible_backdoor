<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13803.c" pos:tabs="8"><function pos:start="1:1" pos:end="607:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">disas_simd_3same_int</name><parameter_list pos:start="1:33" pos:end="1:64">(<parameter pos:start="1:34" pos:end="1:48"><decl pos:start="1:34" pos:end="1:48"><type pos:start="1:34" pos:end="1:48"><name pos:start="1:34" pos:end="1:45">DisasContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:63"><decl pos:start="1:51" pos:end="1:63"><type pos:start="1:51" pos:end="1:63"><name pos:start="1:51" pos:end="1:58">uint32_t</name></type> <name pos:start="1:60" pos:end="1:63">insn</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="607:1">{<block_content pos:start="5:5" pos:end="605:5">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">is_q</name> <init pos:start="5:14" pos:end="5:37">= <expr pos:start="5:16" pos:end="5:37"><call pos:start="5:16" pos:end="5:37"><name pos:start="5:16" pos:end="5:24">extract32</name><argument_list pos:start="5:25" pos:end="5:37">(<argument pos:start="5:26" pos:end="5:29"><expr pos:start="5:26" pos:end="5:29"><name pos:start="5:26" pos:end="5:29">insn</name></expr></argument>, <argument pos:start="5:32" pos:end="5:33"><expr pos:start="5:32" pos:end="5:33"><literal type="number" pos:start="5:32" pos:end="5:33">30</literal></expr></argument>, <argument pos:start="5:36" pos:end="5:36"><expr pos:start="5:36" pos:end="5:36"><literal type="number" pos:start="5:36" pos:end="5:36">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">u</name> <init pos:start="7:11" pos:end="7:34">= <expr pos:start="7:13" pos:end="7:34"><call pos:start="7:13" pos:end="7:34"><name pos:start="7:13" pos:end="7:21">extract32</name><argument_list pos:start="7:22" pos:end="7:34">(<argument pos:start="7:23" pos:end="7:26"><expr pos:start="7:23" pos:end="7:26"><name pos:start="7:23" pos:end="7:26">insn</name></expr></argument>, <argument pos:start="7:29" pos:end="7:30"><expr pos:start="7:29" pos:end="7:30"><literal type="number" pos:start="7:29" pos:end="7:30">29</literal></expr></argument>, <argument pos:start="7:33" pos:end="7:33"><expr pos:start="7:33" pos:end="7:33"><literal type="number" pos:start="7:33" pos:end="7:33">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">size</name> <init pos:start="9:14" pos:end="9:37">= <expr pos:start="9:16" pos:end="9:37"><call pos:start="9:16" pos:end="9:37"><name pos:start="9:16" pos:end="9:24">extract32</name><argument_list pos:start="9:25" pos:end="9:37">(<argument pos:start="9:26" pos:end="9:29"><expr pos:start="9:26" pos:end="9:29"><name pos:start="9:26" pos:end="9:29">insn</name></expr></argument>, <argument pos:start="9:32" pos:end="9:33"><expr pos:start="9:32" pos:end="9:33"><literal type="number" pos:start="9:32" pos:end="9:33">22</literal></expr></argument>, <argument pos:start="9:36" pos:end="9:36"><expr pos:start="9:36" pos:end="9:36"><literal type="number" pos:start="9:36" pos:end="9:36">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:40"><decl pos:start="11:5" pos:end="11:39"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">opcode</name> <init pos:start="11:16" pos:end="11:39">= <expr pos:start="11:18" pos:end="11:39"><call pos:start="11:18" pos:end="11:39"><name pos:start="11:18" pos:end="11:26">extract32</name><argument_list pos:start="11:27" pos:end="11:39">(<argument pos:start="11:28" pos:end="11:31"><expr pos:start="11:28" pos:end="11:31"><name pos:start="11:28" pos:end="11:31">insn</name></expr></argument>, <argument pos:start="11:34" pos:end="11:35"><expr pos:start="11:34" pos:end="11:35"><literal type="number" pos:start="11:34" pos:end="11:35">11</literal></expr></argument>, <argument pos:start="11:38" pos:end="11:38"><expr pos:start="11:38" pos:end="11:38"><literal type="number" pos:start="11:38" pos:end="11:38">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:36"><decl pos:start="13:5" pos:end="13:35"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:10">rm</name> <init pos:start="13:12" pos:end="13:35">= <expr pos:start="13:14" pos:end="13:35"><call pos:start="13:14" pos:end="13:35"><name pos:start="13:14" pos:end="13:22">extract32</name><argument_list pos:start="13:23" pos:end="13:35">(<argument pos:start="13:24" pos:end="13:27"><expr pos:start="13:24" pos:end="13:27"><name pos:start="13:24" pos:end="13:27">insn</name></expr></argument>, <argument pos:start="13:30" pos:end="13:31"><expr pos:start="13:30" pos:end="13:31"><literal type="number" pos:start="13:30" pos:end="13:31">16</literal></expr></argument>, <argument pos:start="13:34" pos:end="13:34"><expr pos:start="13:34" pos:end="13:34"><literal type="number" pos:start="13:34" pos:end="13:34">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:35"><decl pos:start="15:5" pos:end="15:34"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:10">rn</name> <init pos:start="15:12" pos:end="15:34">= <expr pos:start="15:14" pos:end="15:34"><call pos:start="15:14" pos:end="15:34"><name pos:start="15:14" pos:end="15:22">extract32</name><argument_list pos:start="15:23" pos:end="15:34">(<argument pos:start="15:24" pos:end="15:27"><expr pos:start="15:24" pos:end="15:27"><name pos:start="15:24" pos:end="15:27">insn</name></expr></argument>, <argument pos:start="15:30" pos:end="15:30"><expr pos:start="15:30" pos:end="15:30"><literal type="number" pos:start="15:30" pos:end="15:30">5</literal></expr></argument>, <argument pos:start="15:33" pos:end="15:33"><expr pos:start="15:33" pos:end="15:33"><literal type="number" pos:start="15:33" pos:end="15:33">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:35"><decl pos:start="17:5" pos:end="17:34"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:10">rd</name> <init pos:start="17:12" pos:end="17:34">= <expr pos:start="17:14" pos:end="17:34"><call pos:start="17:14" pos:end="17:34"><name pos:start="17:14" pos:end="17:22">extract32</name><argument_list pos:start="17:23" pos:end="17:34">(<argument pos:start="17:24" pos:end="17:27"><expr pos:start="17:24" pos:end="17:27"><name pos:start="17:24" pos:end="17:27">insn</name></expr></argument>, <argument pos:start="17:30" pos:end="17:30"><expr pos:start="17:30" pos:end="17:30"><literal type="number" pos:start="17:30" pos:end="17:30">0</literal></expr></argument>, <argument pos:start="17:33" pos:end="17:33"><expr pos:start="17:33" pos:end="17:33"><literal type="number" pos:start="17:33" pos:end="17:33">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:13"><decl pos:start="19:5" pos:end="19:12"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:12">pass</name></decl>;</decl_stmt>



    <switch pos:start="23:5" pos:end="87:5">switch <condition pos:start="23:12" pos:end="23:19">(<expr pos:start="23:13" pos:end="23:18"><name pos:start="23:13" pos:end="23:18">opcode</name></expr>)</condition> <block pos:start="23:21" pos:end="87:5">{<block_content pos:start="25:5" pos:end="85:14">

    <case pos:start="25:5" pos:end="25:14">case <expr pos:start="25:10" pos:end="25:13"><literal type="number" pos:start="25:10" pos:end="25:13">0x13</literal></expr>:</case> <comment type="block" pos:start="25:16" pos:end="25:30">/* MUL, PMUL */</comment>

        <if_stmt pos:start="27:9" pos:end="33:9"><if pos:start="27:9" pos:end="33:9">if <condition pos:start="27:12" pos:end="27:27">(<expr pos:start="27:13" pos:end="27:26"><name pos:start="27:13" pos:end="27:13">u</name> <operator pos:start="27:15" pos:end="27:16">&amp;&amp;</operator> <name pos:start="27:18" pos:end="27:21">size</name> <operator pos:start="27:23" pos:end="27:24">!=</operator> <literal type="number" pos:start="27:26" pos:end="27:26">0</literal></expr>)</condition> <block pos:start="27:29" pos:end="33:9">{<block_content pos:start="29:13" pos:end="31:19">

            <expr_stmt pos:start="29:13" pos:end="29:36"><expr pos:start="29:13" pos:end="29:35"><call pos:start="29:13" pos:end="29:35"><name pos:start="29:13" pos:end="29:32">unallocated_encoding</name><argument_list pos:start="29:33" pos:end="29:35">(<argument pos:start="29:34" pos:end="29:34"><expr pos:start="29:34" pos:end="29:34"><name pos:start="29:34" pos:end="29:34">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="31:13" pos:end="31:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="35:9" pos:end="35:26">/* fall through */</comment>

    <case pos:start="37:5" pos:end="37:13">case <expr pos:start="37:10" pos:end="37:12"><literal type="number" pos:start="37:10" pos:end="37:12">0x0</literal></expr>:</case> <comment type="block" pos:start="37:15" pos:end="37:32">/* SHADD, UHADD */</comment>

    <case pos:start="39:5" pos:end="39:13">case <expr pos:start="39:10" pos:end="39:12"><literal type="number" pos:start="39:10" pos:end="39:12">0x2</literal></expr>:</case> <comment type="block" pos:start="39:15" pos:end="39:34">/* SRHADD, URHADD */</comment>

    <case pos:start="41:5" pos:end="41:13">case <expr pos:start="41:10" pos:end="41:12"><literal type="number" pos:start="41:10" pos:end="41:12">0x4</literal></expr>:</case> <comment type="block" pos:start="41:15" pos:end="41:32">/* SHSUB, UHSUB */</comment>

    <case pos:start="43:5" pos:end="43:13">case <expr pos:start="43:10" pos:end="43:12"><literal type="number" pos:start="43:10" pos:end="43:12">0xc</literal></expr>:</case> <comment type="block" pos:start="43:15" pos:end="43:30">/* SMAX, UMAX */</comment>

    <case pos:start="45:5" pos:end="45:13">case <expr pos:start="45:10" pos:end="45:12"><literal type="number" pos:start="45:10" pos:end="45:12">0xd</literal></expr>:</case> <comment type="block" pos:start="45:15" pos:end="45:30">/* SMIN, UMIN */</comment>

    <case pos:start="47:5" pos:end="47:13">case <expr pos:start="47:10" pos:end="47:12"><literal type="number" pos:start="47:10" pos:end="47:12">0xe</literal></expr>:</case> <comment type="block" pos:start="47:15" pos:end="47:30">/* SABD, UABD */</comment>

    <case pos:start="49:5" pos:end="49:13">case <expr pos:start="49:10" pos:end="49:12"><literal type="number" pos:start="49:10" pos:end="49:12">0xf</literal></expr>:</case> <comment type="block" pos:start="49:15" pos:end="49:30">/* SABA, UABA */</comment>

    <case pos:start="51:5" pos:end="51:14">case <expr pos:start="51:10" pos:end="51:13"><literal type="number" pos:start="51:10" pos:end="51:13">0x12</literal></expr>:</case> <comment type="block" pos:start="51:16" pos:end="51:29">/* MLA, MLS */</comment>

        <if_stmt pos:start="53:9" pos:end="59:9"><if pos:start="53:9" pos:end="59:9">if <condition pos:start="53:12" pos:end="53:22">(<expr pos:start="53:13" pos:end="53:21"><name pos:start="53:13" pos:end="53:16">size</name> <operator pos:start="53:18" pos:end="53:19">==</operator> <literal type="number" pos:start="53:21" pos:end="53:21">3</literal></expr>)</condition> <block pos:start="53:24" pos:end="59:9">{<block_content pos:start="55:13" pos:end="57:19">

            <expr_stmt pos:start="55:13" pos:end="55:36"><expr pos:start="55:13" pos:end="55:35"><call pos:start="55:13" pos:end="55:35"><name pos:start="55:13" pos:end="55:32">unallocated_encoding</name><argument_list pos:start="55:33" pos:end="55:35">(<argument pos:start="55:34" pos:end="55:34"><expr pos:start="55:34" pos:end="55:34"><name pos:start="55:34" pos:end="55:34">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="57:13" pos:end="57:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="61:9" pos:end="61:14">break;</break>

    <case pos:start="63:5" pos:end="63:14">case <expr pos:start="63:10" pos:end="63:13"><literal type="number" pos:start="63:10" pos:end="63:13">0x16</literal></expr>:</case> <comment type="block" pos:start="63:16" pos:end="63:38">/* SQDMULH, SQRDMULH */</comment>

        <if_stmt pos:start="65:9" pos:end="71:9"><if pos:start="65:9" pos:end="71:9">if <condition pos:start="65:12" pos:end="65:35">(<expr pos:start="65:13" pos:end="65:34"><name pos:start="65:13" pos:end="65:16">size</name> <operator pos:start="65:18" pos:end="65:19">==</operator> <literal type="number" pos:start="65:21" pos:end="65:21">0</literal> <operator pos:start="65:23" pos:end="65:24">||</operator> <name pos:start="65:26" pos:end="65:29">size</name> <operator pos:start="65:31" pos:end="65:32">==</operator> <literal type="number" pos:start="65:34" pos:end="65:34">3</literal></expr>)</condition> <block pos:start="65:37" pos:end="71:9">{<block_content pos:start="67:13" pos:end="69:19">

            <expr_stmt pos:start="67:13" pos:end="67:36"><expr pos:start="67:13" pos:end="67:35"><call pos:start="67:13" pos:end="67:35"><name pos:start="67:13" pos:end="67:32">unallocated_encoding</name><argument_list pos:start="67:33" pos:end="67:35">(<argument pos:start="67:34" pos:end="67:34"><expr pos:start="67:34" pos:end="67:34"><name pos:start="67:34" pos:end="67:34">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="69:13" pos:end="69:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="73:9" pos:end="73:14">break;</break>

    <default pos:start="75:5" pos:end="75:12">default:</default>

        <if_stmt pos:start="77:9" pos:end="83:9"><if pos:start="77:9" pos:end="83:9">if <condition pos:start="77:12" pos:end="77:31">(<expr pos:start="77:13" pos:end="77:30"><name pos:start="77:13" pos:end="77:16">size</name> <operator pos:start="77:18" pos:end="77:19">==</operator> <literal type="number" pos:start="77:21" pos:end="77:21">3</literal> <operator pos:start="77:23" pos:end="77:24">&amp;&amp;</operator> <operator pos:start="77:26" pos:end="77:26">!</operator><name pos:start="77:27" pos:end="77:30">is_q</name></expr>)</condition> <block pos:start="77:33" pos:end="83:9">{<block_content pos:start="79:13" pos:end="81:19">

            <expr_stmt pos:start="79:13" pos:end="79:36"><expr pos:start="79:13" pos:end="79:35"><call pos:start="79:13" pos:end="79:35"><name pos:start="79:13" pos:end="79:32">unallocated_encoding</name><argument_list pos:start="79:33" pos:end="79:35">(<argument pos:start="79:34" pos:end="79:34"><expr pos:start="79:34" pos:end="79:34"><name pos:start="79:34" pos:end="79:34">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="81:13" pos:end="81:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="85:9" pos:end="85:14">break;</break>

    </block_content>}</block></switch>



    <if_stmt pos:start="91:5" pos:end="95:5"><if pos:start="91:5" pos:end="95:5">if <condition pos:start="91:8" pos:end="91:28">(<expr pos:start="91:9" pos:end="91:27"><operator pos:start="91:9" pos:end="91:9">!</operator><call pos:start="91:10" pos:end="91:27"><name pos:start="91:10" pos:end="91:24">fp_access_check</name><argument_list pos:start="91:25" pos:end="91:27">(<argument pos:start="91:26" pos:end="91:26"><expr pos:start="91:26" pos:end="91:26"><name pos:start="91:26" pos:end="91:26">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="91:30" pos:end="95:5">{<block_content pos:start="93:9" pos:end="93:15">

        <return pos:start="93:9" pos:end="93:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="99:5" pos:end="597:5"><if pos:start="99:5" pos:end="133:5">if <condition pos:start="99:8" pos:end="99:18">(<expr pos:start="99:9" pos:end="99:17"><name pos:start="99:9" pos:end="99:12">size</name> <operator pos:start="99:14" pos:end="99:15">==</operator> <literal type="number" pos:start="99:17" pos:end="99:17">3</literal></expr>)</condition> <block pos:start="99:20" pos:end="133:5">{<block_content pos:start="101:9" pos:end="131:9">

        <for pos:start="101:9" pos:end="131:9">for <control pos:start="101:13" pos:end="101:53">(<init pos:start="101:14" pos:end="101:22"><expr pos:start="101:14" pos:end="101:21"><name pos:start="101:14" pos:end="101:17">pass</name> <operator pos:start="101:19" pos:end="101:19">=</operator> <literal type="number" pos:start="101:21" pos:end="101:21">0</literal></expr>;</init> <condition pos:start="101:24" pos:end="101:45"><expr pos:start="101:24" pos:end="101:44"><name pos:start="101:24" pos:end="101:27">pass</name> <operator pos:start="101:29" pos:end="101:29">&lt;</operator> <operator pos:start="101:31" pos:end="101:31">(</operator><ternary pos:start="101:32" pos:end="101:43"><condition pos:start="101:32" pos:end="101:37"><expr pos:start="101:32" pos:end="101:35"><name pos:start="101:32" pos:end="101:35">is_q</name></expr> ?</condition><then pos:start="101:39" pos:end="101:39"> <expr pos:start="101:39" pos:end="101:39"><literal type="number" pos:start="101:39" pos:end="101:39">2</literal></expr> </then><else pos:start="101:41" pos:end="101:43">: <expr pos:start="101:43" pos:end="101:43"><literal type="number" pos:start="101:43" pos:end="101:43">1</literal></expr></else></ternary><operator pos:start="101:44" pos:end="101:44">)</operator></expr>;</condition> <incr pos:start="101:47" pos:end="101:52"><expr pos:start="101:47" pos:end="101:52"><name pos:start="101:47" pos:end="101:50">pass</name><operator pos:start="101:51" pos:end="101:52">++</operator></expr></incr>)</control> <block pos:start="101:55" pos:end="131:9">{<block_content pos:start="103:13" pos:end="129:39">

            <decl_stmt pos:start="103:13" pos:end="103:50"><decl pos:start="103:13" pos:end="103:49"><type pos:start="103:13" pos:end="103:20"><name pos:start="103:13" pos:end="103:20">TCGv_i64</name></type> <name pos:start="103:22" pos:end="103:28">tcg_op1</name> <init pos:start="103:30" pos:end="103:49">= <expr pos:start="103:32" pos:end="103:49"><call pos:start="103:32" pos:end="103:49"><name pos:start="103:32" pos:end="103:47">tcg_temp_new_i64</name><argument_list pos:start="103:48" pos:end="103:49">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="105:13" pos:end="105:50"><decl pos:start="105:13" pos:end="105:49"><type pos:start="105:13" pos:end="105:20"><name pos:start="105:13" pos:end="105:20">TCGv_i64</name></type> <name pos:start="105:22" pos:end="105:28">tcg_op2</name> <init pos:start="105:30" pos:end="105:49">= <expr pos:start="105:32" pos:end="105:49"><call pos:start="105:32" pos:end="105:49"><name pos:start="105:32" pos:end="105:47">tcg_temp_new_i64</name><argument_list pos:start="105:48" pos:end="105:49">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="107:13" pos:end="107:50"><decl pos:start="107:13" pos:end="107:49"><type pos:start="107:13" pos:end="107:20"><name pos:start="107:13" pos:end="107:20">TCGv_i64</name></type> <name pos:start="107:22" pos:end="107:28">tcg_res</name> <init pos:start="107:30" pos:end="107:49">= <expr pos:start="107:32" pos:end="107:49"><call pos:start="107:32" pos:end="107:49"><name pos:start="107:32" pos:end="107:47">tcg_temp_new_i64</name><argument_list pos:start="107:48" pos:end="107:49">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="111:13" pos:end="111:58"><expr pos:start="111:13" pos:end="111:57"><call pos:start="111:13" pos:end="111:57"><name pos:start="111:13" pos:end="111:28">read_vec_element</name><argument_list pos:start="111:29" pos:end="111:57">(<argument pos:start="111:30" pos:end="111:30"><expr pos:start="111:30" pos:end="111:30"><name pos:start="111:30" pos:end="111:30">s</name></expr></argument>, <argument pos:start="111:33" pos:end="111:39"><expr pos:start="111:33" pos:end="111:39"><name pos:start="111:33" pos:end="111:39">tcg_op1</name></expr></argument>, <argument pos:start="111:42" pos:end="111:43"><expr pos:start="111:42" pos:end="111:43"><name pos:start="111:42" pos:end="111:43">rn</name></expr></argument>, <argument pos:start="111:46" pos:end="111:49"><expr pos:start="111:46" pos:end="111:49"><name pos:start="111:46" pos:end="111:49">pass</name></expr></argument>, <argument pos:start="111:52" pos:end="111:56"><expr pos:start="111:52" pos:end="111:56"><name pos:start="111:52" pos:end="111:56">MO_64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:58"><expr pos:start="113:13" pos:end="113:57"><call pos:start="113:13" pos:end="113:57"><name pos:start="113:13" pos:end="113:28">read_vec_element</name><argument_list pos:start="113:29" pos:end="113:57">(<argument pos:start="113:30" pos:end="113:30"><expr pos:start="113:30" pos:end="113:30"><name pos:start="113:30" pos:end="113:30">s</name></expr></argument>, <argument pos:start="113:33" pos:end="113:39"><expr pos:start="113:33" pos:end="113:39"><name pos:start="113:33" pos:end="113:39">tcg_op2</name></expr></argument>, <argument pos:start="113:42" pos:end="113:43"><expr pos:start="113:42" pos:end="113:43"><name pos:start="113:42" pos:end="113:43">rm</name></expr></argument>, <argument pos:start="113:46" pos:end="113:49"><expr pos:start="113:46" pos:end="113:49"><name pos:start="113:46" pos:end="113:49">pass</name></expr></argument>, <argument pos:start="113:52" pos:end="113:56"><expr pos:start="113:52" pos:end="113:56"><name pos:start="113:52" pos:end="113:56">MO_64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="117:13" pos:end="117:69"><expr pos:start="117:13" pos:end="117:68"><call pos:start="117:13" pos:end="117:68"><name pos:start="117:13" pos:end="117:27">handle_3same_64</name><argument_list pos:start="117:28" pos:end="117:68">(<argument pos:start="117:29" pos:end="117:29"><expr pos:start="117:29" pos:end="117:29"><name pos:start="117:29" pos:end="117:29">s</name></expr></argument>, <argument pos:start="117:32" pos:end="117:37"><expr pos:start="117:32" pos:end="117:37"><name pos:start="117:32" pos:end="117:37">opcode</name></expr></argument>, <argument pos:start="117:40" pos:end="117:40"><expr pos:start="117:40" pos:end="117:40"><name pos:start="117:40" pos:end="117:40">u</name></expr></argument>, <argument pos:start="117:43" pos:end="117:49"><expr pos:start="117:43" pos:end="117:49"><name pos:start="117:43" pos:end="117:49">tcg_res</name></expr></argument>, <argument pos:start="117:52" pos:end="117:58"><expr pos:start="117:52" pos:end="117:58"><name pos:start="117:52" pos:end="117:58">tcg_op1</name></expr></argument>, <argument pos:start="117:61" pos:end="117:67"><expr pos:start="117:61" pos:end="117:67"><name pos:start="117:61" pos:end="117:67">tcg_op2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="121:13" pos:end="121:59"><expr pos:start="121:13" pos:end="121:58"><call pos:start="121:13" pos:end="121:58"><name pos:start="121:13" pos:end="121:29">write_vec_element</name><argument_list pos:start="121:30" pos:end="121:58">(<argument pos:start="121:31" pos:end="121:31"><expr pos:start="121:31" pos:end="121:31"><name pos:start="121:31" pos:end="121:31">s</name></expr></argument>, <argument pos:start="121:34" pos:end="121:40"><expr pos:start="121:34" pos:end="121:40"><name pos:start="121:34" pos:end="121:40">tcg_res</name></expr></argument>, <argument pos:start="121:43" pos:end="121:44"><expr pos:start="121:43" pos:end="121:44"><name pos:start="121:43" pos:end="121:44">rd</name></expr></argument>, <argument pos:start="121:47" pos:end="121:50"><expr pos:start="121:47" pos:end="121:50"><name pos:start="121:47" pos:end="121:50">pass</name></expr></argument>, <argument pos:start="121:53" pos:end="121:57"><expr pos:start="121:53" pos:end="121:57"><name pos:start="121:53" pos:end="121:57">MO_64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="125:13" pos:end="125:39"><expr pos:start="125:13" pos:end="125:38"><call pos:start="125:13" pos:end="125:38"><name pos:start="125:13" pos:end="125:29">tcg_temp_free_i64</name><argument_list pos:start="125:30" pos:end="125:38">(<argument pos:start="125:31" pos:end="125:37"><expr pos:start="125:31" pos:end="125:37"><name pos:start="125:31" pos:end="125:37">tcg_res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:39"><expr pos:start="127:13" pos:end="127:38"><call pos:start="127:13" pos:end="127:38"><name pos:start="127:13" pos:end="127:29">tcg_temp_free_i64</name><argument_list pos:start="127:30" pos:end="127:38">(<argument pos:start="127:31" pos:end="127:37"><expr pos:start="127:31" pos:end="127:37"><name pos:start="127:31" pos:end="127:37">tcg_op1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:39"><expr pos:start="129:13" pos:end="129:38"><call pos:start="129:13" pos:end="129:38"><name pos:start="129:13" pos:end="129:29">tcg_temp_free_i64</name><argument_list pos:start="129:30" pos:end="129:38">(<argument pos:start="129:31" pos:end="129:37"><expr pos:start="129:31" pos:end="129:37"><name pos:start="129:31" pos:end="129:37">tcg_op2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="133:7" pos:end="597:5">else <block pos:start="133:12" pos:end="597:5">{<block_content pos:start="135:9" pos:end="595:9">

        <for pos:start="135:9" pos:end="595:9">for <control pos:start="135:13" pos:end="135:53">(<init pos:start="135:14" pos:end="135:22"><expr pos:start="135:14" pos:end="135:21"><name pos:start="135:14" pos:end="135:17">pass</name> <operator pos:start="135:19" pos:end="135:19">=</operator> <literal type="number" pos:start="135:21" pos:end="135:21">0</literal></expr>;</init> <condition pos:start="135:24" pos:end="135:45"><expr pos:start="135:24" pos:end="135:44"><name pos:start="135:24" pos:end="135:27">pass</name> <operator pos:start="135:29" pos:end="135:29">&lt;</operator> <operator pos:start="135:31" pos:end="135:31">(</operator><ternary pos:start="135:32" pos:end="135:43"><condition pos:start="135:32" pos:end="135:37"><expr pos:start="135:32" pos:end="135:35"><name pos:start="135:32" pos:end="135:35">is_q</name></expr> ?</condition><then pos:start="135:39" pos:end="135:39"> <expr pos:start="135:39" pos:end="135:39"><literal type="number" pos:start="135:39" pos:end="135:39">4</literal></expr> </then><else pos:start="135:41" pos:end="135:43">: <expr pos:start="135:43" pos:end="135:43"><literal type="number" pos:start="135:43" pos:end="135:43">2</literal></expr></else></ternary><operator pos:start="135:44" pos:end="135:44">)</operator></expr>;</condition> <incr pos:start="135:47" pos:end="135:52"><expr pos:start="135:47" pos:end="135:52"><name pos:start="135:47" pos:end="135:50">pass</name><operator pos:start="135:51" pos:end="135:52">++</operator></expr></incr>)</control> <block pos:start="135:55" pos:end="595:9">{<block_content pos:start="137:13" pos:end="593:39">

            <decl_stmt pos:start="137:13" pos:end="137:50"><decl pos:start="137:13" pos:end="137:49"><type pos:start="137:13" pos:end="137:20"><name pos:start="137:13" pos:end="137:20">TCGv_i32</name></type> <name pos:start="137:22" pos:end="137:28">tcg_op1</name> <init pos:start="137:30" pos:end="137:49">= <expr pos:start="137:32" pos:end="137:49"><call pos:start="137:32" pos:end="137:49"><name pos:start="137:32" pos:end="137:47">tcg_temp_new_i32</name><argument_list pos:start="137:48" pos:end="137:49">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="139:13" pos:end="139:50"><decl pos:start="139:13" pos:end="139:49"><type pos:start="139:13" pos:end="139:20"><name pos:start="139:13" pos:end="139:20">TCGv_i32</name></type> <name pos:start="139:22" pos:end="139:28">tcg_op2</name> <init pos:start="139:30" pos:end="139:49">= <expr pos:start="139:32" pos:end="139:49"><call pos:start="139:32" pos:end="139:49"><name pos:start="139:32" pos:end="139:47">tcg_temp_new_i32</name><argument_list pos:start="139:48" pos:end="139:49">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="141:13" pos:end="141:50"><decl pos:start="141:13" pos:end="141:49"><type pos:start="141:13" pos:end="141:20"><name pos:start="141:13" pos:end="141:20">TCGv_i32</name></type> <name pos:start="141:22" pos:end="141:28">tcg_res</name> <init pos:start="141:30" pos:end="141:49">= <expr pos:start="141:32" pos:end="141:49"><call pos:start="141:32" pos:end="141:49"><name pos:start="141:32" pos:end="141:47">tcg_temp_new_i32</name><argument_list pos:start="141:48" pos:end="141:49">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="143:13" pos:end="143:41"><decl pos:start="143:13" pos:end="143:40"><type pos:start="143:13" pos:end="143:28"><name pos:start="143:13" pos:end="143:26">NeonGenTwoOpFn</name> <modifier pos:start="143:28" pos:end="143:28">*</modifier></type><name pos:start="143:29" pos:end="143:33">genfn</name> <init pos:start="143:35" pos:end="143:40">= <expr pos:start="143:37" pos:end="143:40"><name pos:start="143:37" pos:end="143:40">NULL</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="145:13" pos:end="145:47"><decl pos:start="145:13" pos:end="145:46"><type pos:start="145:13" pos:end="145:31"><name pos:start="145:13" pos:end="145:29">NeonGenTwoOpEnvFn</name> <modifier pos:start="145:31" pos:end="145:31">*</modifier></type><name pos:start="145:32" pos:end="145:39">genenvfn</name> <init pos:start="145:41" pos:end="145:46">= <expr pos:start="145:43" pos:end="145:46"><name pos:start="145:43" pos:end="145:46">NULL</name></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="149:13" pos:end="149:62"><expr pos:start="149:13" pos:end="149:61"><call pos:start="149:13" pos:end="149:61"><name pos:start="149:13" pos:end="149:32">read_vec_element_i32</name><argument_list pos:start="149:33" pos:end="149:61">(<argument pos:start="149:34" pos:end="149:34"><expr pos:start="149:34" pos:end="149:34"><name pos:start="149:34" pos:end="149:34">s</name></expr></argument>, <argument pos:start="149:37" pos:end="149:43"><expr pos:start="149:37" pos:end="149:43"><name pos:start="149:37" pos:end="149:43">tcg_op1</name></expr></argument>, <argument pos:start="149:46" pos:end="149:47"><expr pos:start="149:46" pos:end="149:47"><name pos:start="149:46" pos:end="149:47">rn</name></expr></argument>, <argument pos:start="149:50" pos:end="149:53"><expr pos:start="149:50" pos:end="149:53"><name pos:start="149:50" pos:end="149:53">pass</name></expr></argument>, <argument pos:start="149:56" pos:end="149:60"><expr pos:start="149:56" pos:end="149:60"><name pos:start="149:56" pos:end="149:60">MO_32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:62"><expr pos:start="151:13" pos:end="151:61"><call pos:start="151:13" pos:end="151:61"><name pos:start="151:13" pos:end="151:32">read_vec_element_i32</name><argument_list pos:start="151:33" pos:end="151:61">(<argument pos:start="151:34" pos:end="151:34"><expr pos:start="151:34" pos:end="151:34"><name pos:start="151:34" pos:end="151:34">s</name></expr></argument>, <argument pos:start="151:37" pos:end="151:43"><expr pos:start="151:37" pos:end="151:43"><name pos:start="151:37" pos:end="151:43">tcg_op2</name></expr></argument>, <argument pos:start="151:46" pos:end="151:47"><expr pos:start="151:46" pos:end="151:47"><name pos:start="151:46" pos:end="151:47">rm</name></expr></argument>, <argument pos:start="151:50" pos:end="151:53"><expr pos:start="151:50" pos:end="151:53"><name pos:start="151:50" pos:end="151:53">pass</name></expr></argument>, <argument pos:start="151:56" pos:end="151:60"><expr pos:start="151:56" pos:end="151:60"><name pos:start="151:56" pos:end="151:60">MO_32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <switch pos:start="155:13" pos:end="541:13">switch <condition pos:start="155:20" pos:end="155:27">(<expr pos:start="155:21" pos:end="155:26"><name pos:start="155:21" pos:end="155:26">opcode</name></expr>)</condition> <block pos:start="155:29" pos:end="541:13">{<block_content pos:start="157:13" pos:end="539:39">

            <case pos:start="157:13" pos:end="157:21">case <expr pos:start="157:18" pos:end="157:20"><literal type="number" pos:start="157:18" pos:end="157:20">0x0</literal></expr>:</case> <comment type="block" pos:start="157:23" pos:end="157:40">/* SHADD, UHADD */</comment>

            <block pos:start="159:13" pos:end="175:13">{<block_content pos:start="161:17" pos:end="173:22">

                <decl_stmt pos:start="161:17" pos:end="169:18"><decl pos:start="161:17" pos:end="169:17"><type pos:start="161:17" pos:end="161:45"><specifier pos:start="161:17" pos:end="161:22">static</specifier> <name pos:start="161:24" pos:end="161:37">NeonGenTwoOpFn</name> <modifier pos:start="161:39" pos:end="161:39">*</modifier> <specifier pos:start="161:41" pos:end="161:45">const</specifier></type> <name pos:start="161:47" pos:end="161:55"><name pos:start="161:47" pos:end="161:49">fns</name><index pos:start="161:50" pos:end="161:52">[<expr pos:start="161:51" pos:end="161:51"><literal type="number" pos:start="161:51" pos:end="161:51">3</literal></expr>]</index><index pos:start="161:53" pos:end="161:55">[<expr pos:start="161:54" pos:end="161:54"><literal type="number" pos:start="161:54" pos:end="161:54">2</literal></expr>]</index></name> <init pos:start="161:57" pos:end="169:17">= <expr pos:start="161:59" pos:end="169:17"><block pos:start="161:59" pos:end="169:17">{

                    <expr pos:start="163:21" pos:end="163:72"><block pos:start="163:21" pos:end="163:72">{ <expr pos:start="163:23" pos:end="163:45"><name pos:start="163:23" pos:end="163:45">gen_helper_neon_hadd_s8</name></expr>, <expr pos:start="163:48" pos:end="163:70"><name pos:start="163:48" pos:end="163:70">gen_helper_neon_hadd_u8</name></expr> }</block></expr>,

                    <expr pos:start="165:21" pos:end="165:74"><block pos:start="165:21" pos:end="165:74">{ <expr pos:start="165:23" pos:end="165:46"><name pos:start="165:23" pos:end="165:46">gen_helper_neon_hadd_s16</name></expr>, <expr pos:start="165:49" pos:end="165:72"><name pos:start="165:49" pos:end="165:72">gen_helper_neon_hadd_u16</name></expr> }</block></expr>,

                    <expr pos:start="167:21" pos:end="167:74"><block pos:start="167:21" pos:end="167:74">{ <expr pos:start="167:23" pos:end="167:46"><name pos:start="167:23" pos:end="167:46">gen_helper_neon_hadd_s32</name></expr>, <expr pos:start="167:49" pos:end="167:72"><name pos:start="167:49" pos:end="167:72">gen_helper_neon_hadd_u32</name></expr> }</block></expr>,

                }</block></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="171:17" pos:end="171:37"><expr pos:start="171:17" pos:end="171:36"><name pos:start="171:17" pos:end="171:21">genfn</name> <operator pos:start="171:23" pos:end="171:23">=</operator> <name pos:start="171:25" pos:end="171:36"><name pos:start="171:25" pos:end="171:27">fns</name><index pos:start="171:28" pos:end="171:33">[<expr pos:start="171:29" pos:end="171:32"><name pos:start="171:29" pos:end="171:32">size</name></expr>]</index><index pos:start="171:34" pos:end="171:36">[<expr pos:start="171:35" pos:end="171:35"><name pos:start="171:35" pos:end="171:35">u</name></expr>]</index></name></expr>;</expr_stmt>

                <break pos:start="173:17" pos:end="173:22">break;</break>

            </block_content>}</block>

            <case pos:start="177:13" pos:end="177:21">case <expr pos:start="177:18" pos:end="177:20"><literal type="number" pos:start="177:18" pos:end="177:20">0x1</literal></expr>:</case> <comment type="block" pos:start="177:23" pos:end="177:40">/* SQADD, UQADD */</comment>

            <block pos:start="179:13" pos:end="195:13">{<block_content pos:start="181:17" pos:end="193:22">

                <decl_stmt pos:start="181:17" pos:end="189:18"><decl pos:start="181:17" pos:end="189:17"><type pos:start="181:17" pos:end="181:48"><specifier pos:start="181:17" pos:end="181:22">static</specifier> <name pos:start="181:24" pos:end="181:40">NeonGenTwoOpEnvFn</name> <modifier pos:start="181:42" pos:end="181:42">*</modifier> <specifier pos:start="181:44" pos:end="181:48">const</specifier></type> <name pos:start="181:50" pos:end="181:58"><name pos:start="181:50" pos:end="181:52">fns</name><index pos:start="181:53" pos:end="181:55">[<expr pos:start="181:54" pos:end="181:54"><literal type="number" pos:start="181:54" pos:end="181:54">3</literal></expr>]</index><index pos:start="181:56" pos:end="181:58">[<expr pos:start="181:57" pos:end="181:57"><literal type="number" pos:start="181:57" pos:end="181:57">2</literal></expr>]</index></name> <init pos:start="181:60" pos:end="189:17">= <expr pos:start="181:62" pos:end="189:17"><block pos:start="181:62" pos:end="189:17">{

                    <expr pos:start="183:21" pos:end="183:72"><block pos:start="183:21" pos:end="183:72">{ <expr pos:start="183:23" pos:end="183:45"><name pos:start="183:23" pos:end="183:45">gen_helper_neon_qadd_s8</name></expr>, <expr pos:start="183:48" pos:end="183:70"><name pos:start="183:48" pos:end="183:70">gen_helper_neon_qadd_u8</name></expr> }</block></expr>,

                    <expr pos:start="185:21" pos:end="185:74"><block pos:start="185:21" pos:end="185:74">{ <expr pos:start="185:23" pos:end="185:46"><name pos:start="185:23" pos:end="185:46">gen_helper_neon_qadd_s16</name></expr>, <expr pos:start="185:49" pos:end="185:72"><name pos:start="185:49" pos:end="185:72">gen_helper_neon_qadd_u16</name></expr> }</block></expr>,

                    <expr pos:start="187:21" pos:end="187:74"><block pos:start="187:21" pos:end="187:74">{ <expr pos:start="187:23" pos:end="187:46"><name pos:start="187:23" pos:end="187:46">gen_helper_neon_qadd_s32</name></expr>, <expr pos:start="187:49" pos:end="187:72"><name pos:start="187:49" pos:end="187:72">gen_helper_neon_qadd_u32</name></expr> }</block></expr>,

                }</block></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="191:17" pos:end="191:40"><expr pos:start="191:17" pos:end="191:39"><name pos:start="191:17" pos:end="191:24">genenvfn</name> <operator pos:start="191:26" pos:end="191:26">=</operator> <name pos:start="191:28" pos:end="191:39"><name pos:start="191:28" pos:end="191:30">fns</name><index pos:start="191:31" pos:end="191:36">[<expr pos:start="191:32" pos:end="191:35"><name pos:start="191:32" pos:end="191:35">size</name></expr>]</index><index pos:start="191:37" pos:end="191:39">[<expr pos:start="191:38" pos:end="191:38"><name pos:start="191:38" pos:end="191:38">u</name></expr>]</index></name></expr>;</expr_stmt>

                <break pos:start="193:17" pos:end="193:22">break;</break>

            </block_content>}</block>

            <case pos:start="197:13" pos:end="197:21">case <expr pos:start="197:18" pos:end="197:20"><literal type="number" pos:start="197:18" pos:end="197:20">0x2</literal></expr>:</case> <comment type="block" pos:start="197:23" pos:end="197:42">/* SRHADD, URHADD */</comment>

            <block pos:start="199:13" pos:end="215:13">{<block_content pos:start="201:17" pos:end="213:22">

                <decl_stmt pos:start="201:17" pos:end="209:18"><decl pos:start="201:17" pos:end="209:17"><type pos:start="201:17" pos:end="201:45"><specifier pos:start="201:17" pos:end="201:22">static</specifier> <name pos:start="201:24" pos:end="201:37">NeonGenTwoOpFn</name> <modifier pos:start="201:39" pos:end="201:39">*</modifier> <specifier pos:start="201:41" pos:end="201:45">const</specifier></type> <name pos:start="201:47" pos:end="201:55"><name pos:start="201:47" pos:end="201:49">fns</name><index pos:start="201:50" pos:end="201:52">[<expr pos:start="201:51" pos:end="201:51"><literal type="number" pos:start="201:51" pos:end="201:51">3</literal></expr>]</index><index pos:start="201:53" pos:end="201:55">[<expr pos:start="201:54" pos:end="201:54"><literal type="number" pos:start="201:54" pos:end="201:54">2</literal></expr>]</index></name> <init pos:start="201:57" pos:end="209:17">= <expr pos:start="201:59" pos:end="209:17"><block pos:start="201:59" pos:end="209:17">{

                    <expr pos:start="203:21" pos:end="203:74"><block pos:start="203:21" pos:end="203:74">{ <expr pos:start="203:23" pos:end="203:46"><name pos:start="203:23" pos:end="203:46">gen_helper_neon_rhadd_s8</name></expr>, <expr pos:start="203:49" pos:end="203:72"><name pos:start="203:49" pos:end="203:72">gen_helper_neon_rhadd_u8</name></expr> }</block></expr>,

                    <expr pos:start="205:21" pos:end="205:76"><block pos:start="205:21" pos:end="205:76">{ <expr pos:start="205:23" pos:end="205:47"><name pos:start="205:23" pos:end="205:47">gen_helper_neon_rhadd_s16</name></expr>, <expr pos:start="205:50" pos:end="205:74"><name pos:start="205:50" pos:end="205:74">gen_helper_neon_rhadd_u16</name></expr> }</block></expr>,

                    <expr pos:start="207:21" pos:end="207:76"><block pos:start="207:21" pos:end="207:76">{ <expr pos:start="207:23" pos:end="207:47"><name pos:start="207:23" pos:end="207:47">gen_helper_neon_rhadd_s32</name></expr>, <expr pos:start="207:50" pos:end="207:74"><name pos:start="207:50" pos:end="207:74">gen_helper_neon_rhadd_u32</name></expr> }</block></expr>,

                }</block></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="211:17" pos:end="211:37"><expr pos:start="211:17" pos:end="211:36"><name pos:start="211:17" pos:end="211:21">genfn</name> <operator pos:start="211:23" pos:end="211:23">=</operator> <name pos:start="211:25" pos:end="211:36"><name pos:start="211:25" pos:end="211:27">fns</name><index pos:start="211:28" pos:end="211:33">[<expr pos:start="211:29" pos:end="211:32"><name pos:start="211:29" pos:end="211:32">size</name></expr>]</index><index pos:start="211:34" pos:end="211:36">[<expr pos:start="211:35" pos:end="211:35"><name pos:start="211:35" pos:end="211:35">u</name></expr>]</index></name></expr>;</expr_stmt>

                <break pos:start="213:17" pos:end="213:22">break;</break>

            </block_content>}</block>

            <case pos:start="217:13" pos:end="217:21">case <expr pos:start="217:18" pos:end="217:20"><literal type="number" pos:start="217:18" pos:end="217:20">0x4</literal></expr>:</case> <comment type="block" pos:start="217:23" pos:end="217:40">/* SHSUB, UHSUB */</comment>

            <block pos:start="219:13" pos:end="235:13">{<block_content pos:start="221:17" pos:end="233:22">

                <decl_stmt pos:start="221:17" pos:end="229:18"><decl pos:start="221:17" pos:end="229:17"><type pos:start="221:17" pos:end="221:45"><specifier pos:start="221:17" pos:end="221:22">static</specifier> <name pos:start="221:24" pos:end="221:37">NeonGenTwoOpFn</name> <modifier pos:start="221:39" pos:end="221:39">*</modifier> <specifier pos:start="221:41" pos:end="221:45">const</specifier></type> <name pos:start="221:47" pos:end="221:55"><name pos:start="221:47" pos:end="221:49">fns</name><index pos:start="221:50" pos:end="221:52">[<expr pos:start="221:51" pos:end="221:51"><literal type="number" pos:start="221:51" pos:end="221:51">3</literal></expr>]</index><index pos:start="221:53" pos:end="221:55">[<expr pos:start="221:54" pos:end="221:54"><literal type="number" pos:start="221:54" pos:end="221:54">2</literal></expr>]</index></name> <init pos:start="221:57" pos:end="229:17">= <expr pos:start="221:59" pos:end="229:17"><block pos:start="221:59" pos:end="229:17">{

                    <expr pos:start="223:21" pos:end="223:72"><block pos:start="223:21" pos:end="223:72">{ <expr pos:start="223:23" pos:end="223:45"><name pos:start="223:23" pos:end="223:45">gen_helper_neon_hsub_s8</name></expr>, <expr pos:start="223:48" pos:end="223:70"><name pos:start="223:48" pos:end="223:70">gen_helper_neon_hsub_u8</name></expr> }</block></expr>,

                    <expr pos:start="225:21" pos:end="225:74"><block pos:start="225:21" pos:end="225:74">{ <expr pos:start="225:23" pos:end="225:46"><name pos:start="225:23" pos:end="225:46">gen_helper_neon_hsub_s16</name></expr>, <expr pos:start="225:49" pos:end="225:72"><name pos:start="225:49" pos:end="225:72">gen_helper_neon_hsub_u16</name></expr> }</block></expr>,

                    <expr pos:start="227:21" pos:end="227:74"><block pos:start="227:21" pos:end="227:74">{ <expr pos:start="227:23" pos:end="227:46"><name pos:start="227:23" pos:end="227:46">gen_helper_neon_hsub_s32</name></expr>, <expr pos:start="227:49" pos:end="227:72"><name pos:start="227:49" pos:end="227:72">gen_helper_neon_hsub_u32</name></expr> }</block></expr>,

                }</block></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="231:17" pos:end="231:37"><expr pos:start="231:17" pos:end="231:36"><name pos:start="231:17" pos:end="231:21">genfn</name> <operator pos:start="231:23" pos:end="231:23">=</operator> <name pos:start="231:25" pos:end="231:36"><name pos:start="231:25" pos:end="231:27">fns</name><index pos:start="231:28" pos:end="231:33">[<expr pos:start="231:29" pos:end="231:32"><name pos:start="231:29" pos:end="231:32">size</name></expr>]</index><index pos:start="231:34" pos:end="231:36">[<expr pos:start="231:35" pos:end="231:35"><name pos:start="231:35" pos:end="231:35">u</name></expr>]</index></name></expr>;</expr_stmt>

                <break pos:start="233:17" pos:end="233:22">break;</break>

            </block_content>}</block>

            <case pos:start="237:13" pos:end="237:21">case <expr pos:start="237:18" pos:end="237:20"><literal type="number" pos:start="237:18" pos:end="237:20">0x5</literal></expr>:</case> <comment type="block" pos:start="237:23" pos:end="237:40">/* SQSUB, UQSUB */</comment>

            <block pos:start="239:13" pos:end="255:13">{<block_content pos:start="241:17" pos:end="253:22">

                <decl_stmt pos:start="241:17" pos:end="249:18"><decl pos:start="241:17" pos:end="249:17"><type pos:start="241:17" pos:end="241:48"><specifier pos:start="241:17" pos:end="241:22">static</specifier> <name pos:start="241:24" pos:end="241:40">NeonGenTwoOpEnvFn</name> <modifier pos:start="241:42" pos:end="241:42">*</modifier> <specifier pos:start="241:44" pos:end="241:48">const</specifier></type> <name pos:start="241:50" pos:end="241:58"><name pos:start="241:50" pos:end="241:52">fns</name><index pos:start="241:53" pos:end="241:55">[<expr pos:start="241:54" pos:end="241:54"><literal type="number" pos:start="241:54" pos:end="241:54">3</literal></expr>]</index><index pos:start="241:56" pos:end="241:58">[<expr pos:start="241:57" pos:end="241:57"><literal type="number" pos:start="241:57" pos:end="241:57">2</literal></expr>]</index></name> <init pos:start="241:60" pos:end="249:17">= <expr pos:start="241:62" pos:end="249:17"><block pos:start="241:62" pos:end="249:17">{

                    <expr pos:start="243:21" pos:end="243:72"><block pos:start="243:21" pos:end="243:72">{ <expr pos:start="243:23" pos:end="243:45"><name pos:start="243:23" pos:end="243:45">gen_helper_neon_qsub_s8</name></expr>, <expr pos:start="243:48" pos:end="243:70"><name pos:start="243:48" pos:end="243:70">gen_helper_neon_qsub_u8</name></expr> }</block></expr>,

                    <expr pos:start="245:21" pos:end="245:74"><block pos:start="245:21" pos:end="245:74">{ <expr pos:start="245:23" pos:end="245:46"><name pos:start="245:23" pos:end="245:46">gen_helper_neon_qsub_s16</name></expr>, <expr pos:start="245:49" pos:end="245:72"><name pos:start="245:49" pos:end="245:72">gen_helper_neon_qsub_u16</name></expr> }</block></expr>,

                    <expr pos:start="247:21" pos:end="247:74"><block pos:start="247:21" pos:end="247:74">{ <expr pos:start="247:23" pos:end="247:46"><name pos:start="247:23" pos:end="247:46">gen_helper_neon_qsub_s32</name></expr>, <expr pos:start="247:49" pos:end="247:72"><name pos:start="247:49" pos:end="247:72">gen_helper_neon_qsub_u32</name></expr> }</block></expr>,

                }</block></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="251:17" pos:end="251:40"><expr pos:start="251:17" pos:end="251:39"><name pos:start="251:17" pos:end="251:24">genenvfn</name> <operator pos:start="251:26" pos:end="251:26">=</operator> <name pos:start="251:28" pos:end="251:39"><name pos:start="251:28" pos:end="251:30">fns</name><index pos:start="251:31" pos:end="251:36">[<expr pos:start="251:32" pos:end="251:35"><name pos:start="251:32" pos:end="251:35">size</name></expr>]</index><index pos:start="251:37" pos:end="251:39">[<expr pos:start="251:38" pos:end="251:38"><name pos:start="251:38" pos:end="251:38">u</name></expr>]</index></name></expr>;</expr_stmt>

                <break pos:start="253:17" pos:end="253:22">break;</break>

            </block_content>}</block>

            <case pos:start="257:13" pos:end="257:21">case <expr pos:start="257:18" pos:end="257:20"><literal type="number" pos:start="257:18" pos:end="257:20">0x6</literal></expr>:</case> <comment type="block" pos:start="257:23" pos:end="257:38">/* CMGT, CMHI */</comment>

            <block pos:start="259:13" pos:end="275:13">{<block_content pos:start="261:17" pos:end="273:22">

                <decl_stmt pos:start="261:17" pos:end="269:18"><decl pos:start="261:17" pos:end="269:17"><type pos:start="261:17" pos:end="261:45"><specifier pos:start="261:17" pos:end="261:22">static</specifier> <name pos:start="261:24" pos:end="261:37">NeonGenTwoOpFn</name> <modifier pos:start="261:39" pos:end="261:39">*</modifier> <specifier pos:start="261:41" pos:end="261:45">const</specifier></type> <name pos:start="261:47" pos:end="261:55"><name pos:start="261:47" pos:end="261:49">fns</name><index pos:start="261:50" pos:end="261:52">[<expr pos:start="261:51" pos:end="261:51"><literal type="number" pos:start="261:51" pos:end="261:51">3</literal></expr>]</index><index pos:start="261:53" pos:end="261:55">[<expr pos:start="261:54" pos:end="261:54"><literal type="number" pos:start="261:54" pos:end="261:54">2</literal></expr>]</index></name> <init pos:start="261:57" pos:end="269:17">= <expr pos:start="261:59" pos:end="269:17"><block pos:start="261:59" pos:end="269:17">{

                    <expr pos:start="263:21" pos:end="263:70"><block pos:start="263:21" pos:end="263:70">{ <expr pos:start="263:23" pos:end="263:44"><name pos:start="263:23" pos:end="263:44">gen_helper_neon_cgt_s8</name></expr>, <expr pos:start="263:47" pos:end="263:68"><name pos:start="263:47" pos:end="263:68">gen_helper_neon_cgt_u8</name></expr> }</block></expr>,

                    <expr pos:start="265:21" pos:end="265:72"><block pos:start="265:21" pos:end="265:72">{ <expr pos:start="265:23" pos:end="265:45"><name pos:start="265:23" pos:end="265:45">gen_helper_neon_cgt_s16</name></expr>, <expr pos:start="265:48" pos:end="265:70"><name pos:start="265:48" pos:end="265:70">gen_helper_neon_cgt_u16</name></expr> }</block></expr>,

                    <expr pos:start="267:21" pos:end="267:72"><block pos:start="267:21" pos:end="267:72">{ <expr pos:start="267:23" pos:end="267:45"><name pos:start="267:23" pos:end="267:45">gen_helper_neon_cgt_s32</name></expr>, <expr pos:start="267:48" pos:end="267:70"><name pos:start="267:48" pos:end="267:70">gen_helper_neon_cgt_u32</name></expr> }</block></expr>,

                }</block></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="271:17" pos:end="271:37"><expr pos:start="271:17" pos:end="271:36"><name pos:start="271:17" pos:end="271:21">genfn</name> <operator pos:start="271:23" pos:end="271:23">=</operator> <name pos:start="271:25" pos:end="271:36"><name pos:start="271:25" pos:end="271:27">fns</name><index pos:start="271:28" pos:end="271:33">[<expr pos:start="271:29" pos:end="271:32"><name pos:start="271:29" pos:end="271:32">size</name></expr>]</index><index pos:start="271:34" pos:end="271:36">[<expr pos:start="271:35" pos:end="271:35"><name pos:start="271:35" pos:end="271:35">u</name></expr>]</index></name></expr>;</expr_stmt>

                <break pos:start="273:17" pos:end="273:22">break;</break>

            </block_content>}</block>

            <case pos:start="277:13" pos:end="277:21">case <expr pos:start="277:18" pos:end="277:20"><literal type="number" pos:start="277:18" pos:end="277:20">0x7</literal></expr>:</case> <comment type="block" pos:start="277:23" pos:end="277:38">/* CMGE, CMHS */</comment>

            <block pos:start="279:13" pos:end="295:13">{<block_content pos:start="281:17" pos:end="293:22">

                <decl_stmt pos:start="281:17" pos:end="289:18"><decl pos:start="281:17" pos:end="289:17"><type pos:start="281:17" pos:end="281:45"><specifier pos:start="281:17" pos:end="281:22">static</specifier> <name pos:start="281:24" pos:end="281:37">NeonGenTwoOpFn</name> <modifier pos:start="281:39" pos:end="281:39">*</modifier> <specifier pos:start="281:41" pos:end="281:45">const</specifier></type> <name pos:start="281:47" pos:end="281:55"><name pos:start="281:47" pos:end="281:49">fns</name><index pos:start="281:50" pos:end="281:52">[<expr pos:start="281:51" pos:end="281:51"><literal type="number" pos:start="281:51" pos:end="281:51">3</literal></expr>]</index><index pos:start="281:53" pos:end="281:55">[<expr pos:start="281:54" pos:end="281:54"><literal type="number" pos:start="281:54" pos:end="281:54">2</literal></expr>]</index></name> <init pos:start="281:57" pos:end="289:17">= <expr pos:start="281:59" pos:end="289:17"><block pos:start="281:59" pos:end="289:17">{

                    <expr pos:start="283:21" pos:end="283:70"><block pos:start="283:21" pos:end="283:70">{ <expr pos:start="283:23" pos:end="283:44"><name pos:start="283:23" pos:end="283:44">gen_helper_neon_cge_s8</name></expr>, <expr pos:start="283:47" pos:end="283:68"><name pos:start="283:47" pos:end="283:68">gen_helper_neon_cge_u8</name></expr> }</block></expr>,

                    <expr pos:start="285:21" pos:end="285:72"><block pos:start="285:21" pos:end="285:72">{ <expr pos:start="285:23" pos:end="285:45"><name pos:start="285:23" pos:end="285:45">gen_helper_neon_cge_s16</name></expr>, <expr pos:start="285:48" pos:end="285:70"><name pos:start="285:48" pos:end="285:70">gen_helper_neon_cge_u16</name></expr> }</block></expr>,

                    <expr pos:start="287:21" pos:end="287:72"><block pos:start="287:21" pos:end="287:72">{ <expr pos:start="287:23" pos:end="287:45"><name pos:start="287:23" pos:end="287:45">gen_helper_neon_cge_s32</name></expr>, <expr pos:start="287:48" pos:end="287:70"><name pos:start="287:48" pos:end="287:70">gen_helper_neon_cge_u32</name></expr> }</block></expr>,

                }</block></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="291:17" pos:end="291:37"><expr pos:start="291:17" pos:end="291:36"><name pos:start="291:17" pos:end="291:21">genfn</name> <operator pos:start="291:23" pos:end="291:23">=</operator> <name pos:start="291:25" pos:end="291:36"><name pos:start="291:25" pos:end="291:27">fns</name><index pos:start="291:28" pos:end="291:33">[<expr pos:start="291:29" pos:end="291:32"><name pos:start="291:29" pos:end="291:32">size</name></expr>]</index><index pos:start="291:34" pos:end="291:36">[<expr pos:start="291:35" pos:end="291:35"><name pos:start="291:35" pos:end="291:35">u</name></expr>]</index></name></expr>;</expr_stmt>

                <break pos:start="293:17" pos:end="293:22">break;</break>

            </block_content>}</block>

            <case pos:start="297:13" pos:end="297:21">case <expr pos:start="297:18" pos:end="297:20"><literal type="number" pos:start="297:18" pos:end="297:20">0x8</literal></expr>:</case> <comment type="block" pos:start="297:23" pos:end="297:38">/* SSHL, USHL */</comment>

            <block pos:start="299:13" pos:end="315:13">{<block_content pos:start="301:17" pos:end="313:22">

                <decl_stmt pos:start="301:17" pos:end="309:18"><decl pos:start="301:17" pos:end="309:17"><type pos:start="301:17" pos:end="301:45"><specifier pos:start="301:17" pos:end="301:22">static</specifier> <name pos:start="301:24" pos:end="301:37">NeonGenTwoOpFn</name> <modifier pos:start="301:39" pos:end="301:39">*</modifier> <specifier pos:start="301:41" pos:end="301:45">const</specifier></type> <name pos:start="301:47" pos:end="301:55"><name pos:start="301:47" pos:end="301:49">fns</name><index pos:start="301:50" pos:end="301:52">[<expr pos:start="301:51" pos:end="301:51"><literal type="number" pos:start="301:51" pos:end="301:51">3</literal></expr>]</index><index pos:start="301:53" pos:end="301:55">[<expr pos:start="301:54" pos:end="301:54"><literal type="number" pos:start="301:54" pos:end="301:54">2</literal></expr>]</index></name> <init pos:start="301:57" pos:end="309:17">= <expr pos:start="301:59" pos:end="309:17"><block pos:start="301:59" pos:end="309:17">{

                    <expr pos:start="303:21" pos:end="303:70"><block pos:start="303:21" pos:end="303:70">{ <expr pos:start="303:23" pos:end="303:44"><name pos:start="303:23" pos:end="303:44">gen_helper_neon_shl_s8</name></expr>, <expr pos:start="303:47" pos:end="303:68"><name pos:start="303:47" pos:end="303:68">gen_helper_neon_shl_u8</name></expr> }</block></expr>,

                    <expr pos:start="305:21" pos:end="305:72"><block pos:start="305:21" pos:end="305:72">{ <expr pos:start="305:23" pos:end="305:45"><name pos:start="305:23" pos:end="305:45">gen_helper_neon_shl_s16</name></expr>, <expr pos:start="305:48" pos:end="305:70"><name pos:start="305:48" pos:end="305:70">gen_helper_neon_shl_u16</name></expr> }</block></expr>,

                    <expr pos:start="307:21" pos:end="307:72"><block pos:start="307:21" pos:end="307:72">{ <expr pos:start="307:23" pos:end="307:45"><name pos:start="307:23" pos:end="307:45">gen_helper_neon_shl_s32</name></expr>, <expr pos:start="307:48" pos:end="307:70"><name pos:start="307:48" pos:end="307:70">gen_helper_neon_shl_u32</name></expr> }</block></expr>,

                }</block></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="311:17" pos:end="311:37"><expr pos:start="311:17" pos:end="311:36"><name pos:start="311:17" pos:end="311:21">genfn</name> <operator pos:start="311:23" pos:end="311:23">=</operator> <name pos:start="311:25" pos:end="311:36"><name pos:start="311:25" pos:end="311:27">fns</name><index pos:start="311:28" pos:end="311:33">[<expr pos:start="311:29" pos:end="311:32"><name pos:start="311:29" pos:end="311:32">size</name></expr>]</index><index pos:start="311:34" pos:end="311:36">[<expr pos:start="311:35" pos:end="311:35"><name pos:start="311:35" pos:end="311:35">u</name></expr>]</index></name></expr>;</expr_stmt>

                <break pos:start="313:17" pos:end="313:22">break;</break>

            </block_content>}</block>

            <case pos:start="317:13" pos:end="317:21">case <expr pos:start="317:18" pos:end="317:20"><literal type="number" pos:start="317:18" pos:end="317:20">0x9</literal></expr>:</case> <comment type="block" pos:start="317:23" pos:end="317:40">/* SQSHL, UQSHL */</comment>

            <block pos:start="319:13" pos:end="335:13">{<block_content pos:start="321:17" pos:end="333:22">

                <decl_stmt pos:start="321:17" pos:end="329:18"><decl pos:start="321:17" pos:end="329:17"><type pos:start="321:17" pos:end="321:48"><specifier pos:start="321:17" pos:end="321:22">static</specifier> <name pos:start="321:24" pos:end="321:40">NeonGenTwoOpEnvFn</name> <modifier pos:start="321:42" pos:end="321:42">*</modifier> <specifier pos:start="321:44" pos:end="321:48">const</specifier></type> <name pos:start="321:50" pos:end="321:58"><name pos:start="321:50" pos:end="321:52">fns</name><index pos:start="321:53" pos:end="321:55">[<expr pos:start="321:54" pos:end="321:54"><literal type="number" pos:start="321:54" pos:end="321:54">3</literal></expr>]</index><index pos:start="321:56" pos:end="321:58">[<expr pos:start="321:57" pos:end="321:57"><literal type="number" pos:start="321:57" pos:end="321:57">2</literal></expr>]</index></name> <init pos:start="321:60" pos:end="329:17">= <expr pos:start="321:62" pos:end="329:17"><block pos:start="321:62" pos:end="329:17">{

                    <expr pos:start="323:21" pos:end="323:72"><block pos:start="323:21" pos:end="323:72">{ <expr pos:start="323:23" pos:end="323:45"><name pos:start="323:23" pos:end="323:45">gen_helper_neon_qshl_s8</name></expr>, <expr pos:start="323:48" pos:end="323:70"><name pos:start="323:48" pos:end="323:70">gen_helper_neon_qshl_u8</name></expr> }</block></expr>,

                    <expr pos:start="325:21" pos:end="325:74"><block pos:start="325:21" pos:end="325:74">{ <expr pos:start="325:23" pos:end="325:46"><name pos:start="325:23" pos:end="325:46">gen_helper_neon_qshl_s16</name></expr>, <expr pos:start="325:49" pos:end="325:72"><name pos:start="325:49" pos:end="325:72">gen_helper_neon_qshl_u16</name></expr> }</block></expr>,

                    <expr pos:start="327:21" pos:end="327:74"><block pos:start="327:21" pos:end="327:74">{ <expr pos:start="327:23" pos:end="327:46"><name pos:start="327:23" pos:end="327:46">gen_helper_neon_qshl_s32</name></expr>, <expr pos:start="327:49" pos:end="327:72"><name pos:start="327:49" pos:end="327:72">gen_helper_neon_qshl_u32</name></expr> }</block></expr>,

                }</block></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="331:17" pos:end="331:40"><expr pos:start="331:17" pos:end="331:39"><name pos:start="331:17" pos:end="331:24">genenvfn</name> <operator pos:start="331:26" pos:end="331:26">=</operator> <name pos:start="331:28" pos:end="331:39"><name pos:start="331:28" pos:end="331:30">fns</name><index pos:start="331:31" pos:end="331:36">[<expr pos:start="331:32" pos:end="331:35"><name pos:start="331:32" pos:end="331:35">size</name></expr>]</index><index pos:start="331:37" pos:end="331:39">[<expr pos:start="331:38" pos:end="331:38"><name pos:start="331:38" pos:end="331:38">u</name></expr>]</index></name></expr>;</expr_stmt>

                <break pos:start="333:17" pos:end="333:22">break;</break>

            </block_content>}</block>

            <case pos:start="337:13" pos:end="337:21">case <expr pos:start="337:18" pos:end="337:20"><literal type="number" pos:start="337:18" pos:end="337:20">0xa</literal></expr>:</case> <comment type="block" pos:start="337:23" pos:end="337:40">/* SRSHL, URSHL */</comment>

            <block pos:start="339:13" pos:end="355:13">{<block_content pos:start="341:17" pos:end="353:22">

                <decl_stmt pos:start="341:17" pos:end="349:18"><decl pos:start="341:17" pos:end="349:17"><type pos:start="341:17" pos:end="341:45"><specifier pos:start="341:17" pos:end="341:22">static</specifier> <name pos:start="341:24" pos:end="341:37">NeonGenTwoOpFn</name> <modifier pos:start="341:39" pos:end="341:39">*</modifier> <specifier pos:start="341:41" pos:end="341:45">const</specifier></type> <name pos:start="341:47" pos:end="341:55"><name pos:start="341:47" pos:end="341:49">fns</name><index pos:start="341:50" pos:end="341:52">[<expr pos:start="341:51" pos:end="341:51"><literal type="number" pos:start="341:51" pos:end="341:51">3</literal></expr>]</index><index pos:start="341:53" pos:end="341:55">[<expr pos:start="341:54" pos:end="341:54"><literal type="number" pos:start="341:54" pos:end="341:54">2</literal></expr>]</index></name> <init pos:start="341:57" pos:end="349:17">= <expr pos:start="341:59" pos:end="349:17"><block pos:start="341:59" pos:end="349:17">{

                    <expr pos:start="343:21" pos:end="343:72"><block pos:start="343:21" pos:end="343:72">{ <expr pos:start="343:23" pos:end="343:45"><name pos:start="343:23" pos:end="343:45">gen_helper_neon_rshl_s8</name></expr>, <expr pos:start="343:48" pos:end="343:70"><name pos:start="343:48" pos:end="343:70">gen_helper_neon_rshl_u8</name></expr> }</block></expr>,

                    <expr pos:start="345:21" pos:end="345:74"><block pos:start="345:21" pos:end="345:74">{ <expr pos:start="345:23" pos:end="345:46"><name pos:start="345:23" pos:end="345:46">gen_helper_neon_rshl_s16</name></expr>, <expr pos:start="345:49" pos:end="345:72"><name pos:start="345:49" pos:end="345:72">gen_helper_neon_rshl_u16</name></expr> }</block></expr>,

                    <expr pos:start="347:21" pos:end="347:74"><block pos:start="347:21" pos:end="347:74">{ <expr pos:start="347:23" pos:end="347:46"><name pos:start="347:23" pos:end="347:46">gen_helper_neon_rshl_s32</name></expr>, <expr pos:start="347:49" pos:end="347:72"><name pos:start="347:49" pos:end="347:72">gen_helper_neon_rshl_u32</name></expr> }</block></expr>,

                }</block></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="351:17" pos:end="351:37"><expr pos:start="351:17" pos:end="351:36"><name pos:start="351:17" pos:end="351:21">genfn</name> <operator pos:start="351:23" pos:end="351:23">=</operator> <name pos:start="351:25" pos:end="351:36"><name pos:start="351:25" pos:end="351:27">fns</name><index pos:start="351:28" pos:end="351:33">[<expr pos:start="351:29" pos:end="351:32"><name pos:start="351:29" pos:end="351:32">size</name></expr>]</index><index pos:start="351:34" pos:end="351:36">[<expr pos:start="351:35" pos:end="351:35"><name pos:start="351:35" pos:end="351:35">u</name></expr>]</index></name></expr>;</expr_stmt>

                <break pos:start="353:17" pos:end="353:22">break;</break>

            </block_content>}</block>

            <case pos:start="357:13" pos:end="357:21">case <expr pos:start="357:18" pos:end="357:20"><literal type="number" pos:start="357:18" pos:end="357:20">0xb</literal></expr>:</case> <comment type="block" pos:start="357:23" pos:end="357:42">/* SQRSHL, UQRSHL */</comment>

            <block pos:start="359:13" pos:end="375:13">{<block_content pos:start="361:17" pos:end="373:22">

                <decl_stmt pos:start="361:17" pos:end="369:18"><decl pos:start="361:17" pos:end="369:17"><type pos:start="361:17" pos:end="361:48"><specifier pos:start="361:17" pos:end="361:22">static</specifier> <name pos:start="361:24" pos:end="361:40">NeonGenTwoOpEnvFn</name> <modifier pos:start="361:42" pos:end="361:42">*</modifier> <specifier pos:start="361:44" pos:end="361:48">const</specifier></type> <name pos:start="361:50" pos:end="361:58"><name pos:start="361:50" pos:end="361:52">fns</name><index pos:start="361:53" pos:end="361:55">[<expr pos:start="361:54" pos:end="361:54"><literal type="number" pos:start="361:54" pos:end="361:54">3</literal></expr>]</index><index pos:start="361:56" pos:end="361:58">[<expr pos:start="361:57" pos:end="361:57"><literal type="number" pos:start="361:57" pos:end="361:57">2</literal></expr>]</index></name> <init pos:start="361:60" pos:end="369:17">= <expr pos:start="361:62" pos:end="369:17"><block pos:start="361:62" pos:end="369:17">{

                    <expr pos:start="363:21" pos:end="363:74"><block pos:start="363:21" pos:end="363:74">{ <expr pos:start="363:23" pos:end="363:46"><name pos:start="363:23" pos:end="363:46">gen_helper_neon_qrshl_s8</name></expr>, <expr pos:start="363:49" pos:end="363:72"><name pos:start="363:49" pos:end="363:72">gen_helper_neon_qrshl_u8</name></expr> }</block></expr>,

                    <expr pos:start="365:21" pos:end="365:76"><block pos:start="365:21" pos:end="365:76">{ <expr pos:start="365:23" pos:end="365:47"><name pos:start="365:23" pos:end="365:47">gen_helper_neon_qrshl_s16</name></expr>, <expr pos:start="365:50" pos:end="365:74"><name pos:start="365:50" pos:end="365:74">gen_helper_neon_qrshl_u16</name></expr> }</block></expr>,

                    <expr pos:start="367:21" pos:end="367:76"><block pos:start="367:21" pos:end="367:76">{ <expr pos:start="367:23" pos:end="367:47"><name pos:start="367:23" pos:end="367:47">gen_helper_neon_qrshl_s32</name></expr>, <expr pos:start="367:50" pos:end="367:74"><name pos:start="367:50" pos:end="367:74">gen_helper_neon_qrshl_u32</name></expr> }</block></expr>,

                }</block></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="371:17" pos:end="371:40"><expr pos:start="371:17" pos:end="371:39"><name pos:start="371:17" pos:end="371:24">genenvfn</name> <operator pos:start="371:26" pos:end="371:26">=</operator> <name pos:start="371:28" pos:end="371:39"><name pos:start="371:28" pos:end="371:30">fns</name><index pos:start="371:31" pos:end="371:36">[<expr pos:start="371:32" pos:end="371:35"><name pos:start="371:32" pos:end="371:35">size</name></expr>]</index><index pos:start="371:37" pos:end="371:39">[<expr pos:start="371:38" pos:end="371:38"><name pos:start="371:38" pos:end="371:38">u</name></expr>]</index></name></expr>;</expr_stmt>

                <break pos:start="373:17" pos:end="373:22">break;</break>

            </block_content>}</block>

            <case pos:start="377:13" pos:end="377:21">case <expr pos:start="377:18" pos:end="377:20"><literal type="number" pos:start="377:18" pos:end="377:20">0xc</literal></expr>:</case> <comment type="block" pos:start="377:23" pos:end="377:38">/* SMAX, UMAX */</comment>

            <block pos:start="379:13" pos:end="395:13">{<block_content pos:start="381:17" pos:end="393:22">

                <decl_stmt pos:start="381:17" pos:end="389:18"><decl pos:start="381:17" pos:end="389:17"><type pos:start="381:17" pos:end="381:45"><specifier pos:start="381:17" pos:end="381:22">static</specifier> <name pos:start="381:24" pos:end="381:37">NeonGenTwoOpFn</name> <modifier pos:start="381:39" pos:end="381:39">*</modifier> <specifier pos:start="381:41" pos:end="381:45">const</specifier></type> <name pos:start="381:47" pos:end="381:55"><name pos:start="381:47" pos:end="381:49">fns</name><index pos:start="381:50" pos:end="381:52">[<expr pos:start="381:51" pos:end="381:51"><literal type="number" pos:start="381:51" pos:end="381:51">3</literal></expr>]</index><index pos:start="381:53" pos:end="381:55">[<expr pos:start="381:54" pos:end="381:54"><literal type="number" pos:start="381:54" pos:end="381:54">2</literal></expr>]</index></name> <init pos:start="381:57" pos:end="389:17">= <expr pos:start="381:59" pos:end="389:17"><block pos:start="381:59" pos:end="389:17">{

                    <expr pos:start="383:21" pos:end="383:70"><block pos:start="383:21" pos:end="383:70">{ <expr pos:start="383:23" pos:end="383:44"><name pos:start="383:23" pos:end="383:44">gen_helper_neon_max_s8</name></expr>, <expr pos:start="383:47" pos:end="383:68"><name pos:start="383:47" pos:end="383:68">gen_helper_neon_max_u8</name></expr> }</block></expr>,

                    <expr pos:start="385:21" pos:end="385:72"><block pos:start="385:21" pos:end="385:72">{ <expr pos:start="385:23" pos:end="385:45"><name pos:start="385:23" pos:end="385:45">gen_helper_neon_max_s16</name></expr>, <expr pos:start="385:48" pos:end="385:70"><name pos:start="385:48" pos:end="385:70">gen_helper_neon_max_u16</name></expr> }</block></expr>,

                    <expr pos:start="387:21" pos:end="387:48"><block pos:start="387:21" pos:end="387:48">{ <expr pos:start="387:23" pos:end="387:33"><name pos:start="387:23" pos:end="387:33">gen_max_s32</name></expr>, <expr pos:start="387:36" pos:end="387:46"><name pos:start="387:36" pos:end="387:46">gen_max_u32</name></expr> }</block></expr>,

                }</block></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="391:17" pos:end="391:37"><expr pos:start="391:17" pos:end="391:36"><name pos:start="391:17" pos:end="391:21">genfn</name> <operator pos:start="391:23" pos:end="391:23">=</operator> <name pos:start="391:25" pos:end="391:36"><name pos:start="391:25" pos:end="391:27">fns</name><index pos:start="391:28" pos:end="391:33">[<expr pos:start="391:29" pos:end="391:32"><name pos:start="391:29" pos:end="391:32">size</name></expr>]</index><index pos:start="391:34" pos:end="391:36">[<expr pos:start="391:35" pos:end="391:35"><name pos:start="391:35" pos:end="391:35">u</name></expr>]</index></name></expr>;</expr_stmt>

                <break pos:start="393:17" pos:end="393:22">break;</break>

            </block_content>}</block>



            <case pos:start="399:13" pos:end="399:21">case <expr pos:start="399:18" pos:end="399:20"><literal type="number" pos:start="399:18" pos:end="399:20">0xd</literal></expr>:</case> <comment type="block" pos:start="399:23" pos:end="399:38">/* SMIN, UMIN */</comment>

            <block pos:start="401:13" pos:end="417:13">{<block_content pos:start="403:17" pos:end="415:22">

                <decl_stmt pos:start="403:17" pos:end="411:18"><decl pos:start="403:17" pos:end="411:17"><type pos:start="403:17" pos:end="403:45"><specifier pos:start="403:17" pos:end="403:22">static</specifier> <name pos:start="403:24" pos:end="403:37">NeonGenTwoOpFn</name> <modifier pos:start="403:39" pos:end="403:39">*</modifier> <specifier pos:start="403:41" pos:end="403:45">const</specifier></type> <name pos:start="403:47" pos:end="403:55"><name pos:start="403:47" pos:end="403:49">fns</name><index pos:start="403:50" pos:end="403:52">[<expr pos:start="403:51" pos:end="403:51"><literal type="number" pos:start="403:51" pos:end="403:51">3</literal></expr>]</index><index pos:start="403:53" pos:end="403:55">[<expr pos:start="403:54" pos:end="403:54"><literal type="number" pos:start="403:54" pos:end="403:54">2</literal></expr>]</index></name> <init pos:start="403:57" pos:end="411:17">= <expr pos:start="403:59" pos:end="411:17"><block pos:start="403:59" pos:end="411:17">{

                    <expr pos:start="405:21" pos:end="405:70"><block pos:start="405:21" pos:end="405:70">{ <expr pos:start="405:23" pos:end="405:44"><name pos:start="405:23" pos:end="405:44">gen_helper_neon_min_s8</name></expr>, <expr pos:start="405:47" pos:end="405:68"><name pos:start="405:47" pos:end="405:68">gen_helper_neon_min_u8</name></expr> }</block></expr>,

                    <expr pos:start="407:21" pos:end="407:72"><block pos:start="407:21" pos:end="407:72">{ <expr pos:start="407:23" pos:end="407:45"><name pos:start="407:23" pos:end="407:45">gen_helper_neon_min_s16</name></expr>, <expr pos:start="407:48" pos:end="407:70"><name pos:start="407:48" pos:end="407:70">gen_helper_neon_min_u16</name></expr> }</block></expr>,

                    <expr pos:start="409:21" pos:end="409:48"><block pos:start="409:21" pos:end="409:48">{ <expr pos:start="409:23" pos:end="409:33"><name pos:start="409:23" pos:end="409:33">gen_min_s32</name></expr>, <expr pos:start="409:36" pos:end="409:46"><name pos:start="409:36" pos:end="409:46">gen_min_u32</name></expr> }</block></expr>,

                }</block></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="413:17" pos:end="413:37"><expr pos:start="413:17" pos:end="413:36"><name pos:start="413:17" pos:end="413:21">genfn</name> <operator pos:start="413:23" pos:end="413:23">=</operator> <name pos:start="413:25" pos:end="413:36"><name pos:start="413:25" pos:end="413:27">fns</name><index pos:start="413:28" pos:end="413:33">[<expr pos:start="413:29" pos:end="413:32"><name pos:start="413:29" pos:end="413:32">size</name></expr>]</index><index pos:start="413:34" pos:end="413:36">[<expr pos:start="413:35" pos:end="413:35"><name pos:start="413:35" pos:end="413:35">u</name></expr>]</index></name></expr>;</expr_stmt>

                <break pos:start="415:17" pos:end="415:22">break;</break>

            </block_content>}</block>

            <case pos:start="419:13" pos:end="419:21">case <expr pos:start="419:18" pos:end="419:20"><literal type="number" pos:start="419:18" pos:end="419:20">0xe</literal></expr>:</case> <comment type="block" pos:start="419:23" pos:end="419:38">/* SABD, UABD */</comment>

            <case pos:start="421:13" pos:end="421:21">case <expr pos:start="421:18" pos:end="421:20"><literal type="number" pos:start="421:18" pos:end="421:20">0xf</literal></expr>:</case> <comment type="block" pos:start="421:23" pos:end="421:38">/* SABA, UABA */</comment>

            <block pos:start="423:13" pos:end="439:13">{<block_content pos:start="425:17" pos:end="437:22">

                <decl_stmt pos:start="425:17" pos:end="433:18"><decl pos:start="425:17" pos:end="433:17"><type pos:start="425:17" pos:end="425:45"><specifier pos:start="425:17" pos:end="425:22">static</specifier> <name pos:start="425:24" pos:end="425:37">NeonGenTwoOpFn</name> <modifier pos:start="425:39" pos:end="425:39">*</modifier> <specifier pos:start="425:41" pos:end="425:45">const</specifier></type> <name pos:start="425:47" pos:end="425:55"><name pos:start="425:47" pos:end="425:49">fns</name><index pos:start="425:50" pos:end="425:52">[<expr pos:start="425:51" pos:end="425:51"><literal type="number" pos:start="425:51" pos:end="425:51">3</literal></expr>]</index><index pos:start="425:53" pos:end="425:55">[<expr pos:start="425:54" pos:end="425:54"><literal type="number" pos:start="425:54" pos:end="425:54">2</literal></expr>]</index></name> <init pos:start="425:57" pos:end="433:17">= <expr pos:start="425:59" pos:end="433:17"><block pos:start="425:59" pos:end="433:17">{

                    <expr pos:start="427:21" pos:end="427:70"><block pos:start="427:21" pos:end="427:70">{ <expr pos:start="427:23" pos:end="427:44"><name pos:start="427:23" pos:end="427:44">gen_helper_neon_abd_s8</name></expr>, <expr pos:start="427:47" pos:end="427:68"><name pos:start="427:47" pos:end="427:68">gen_helper_neon_abd_u8</name></expr> }</block></expr>,

                    <expr pos:start="429:21" pos:end="429:72"><block pos:start="429:21" pos:end="429:72">{ <expr pos:start="429:23" pos:end="429:45"><name pos:start="429:23" pos:end="429:45">gen_helper_neon_abd_s16</name></expr>, <expr pos:start="429:48" pos:end="429:70"><name pos:start="429:48" pos:end="429:70">gen_helper_neon_abd_u16</name></expr> }</block></expr>,

                    <expr pos:start="431:21" pos:end="431:72"><block pos:start="431:21" pos:end="431:72">{ <expr pos:start="431:23" pos:end="431:45"><name pos:start="431:23" pos:end="431:45">gen_helper_neon_abd_s32</name></expr>, <expr pos:start="431:48" pos:end="431:70"><name pos:start="431:48" pos:end="431:70">gen_helper_neon_abd_u32</name></expr> }</block></expr>,

                }</block></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="435:17" pos:end="435:37"><expr pos:start="435:17" pos:end="435:36"><name pos:start="435:17" pos:end="435:21">genfn</name> <operator pos:start="435:23" pos:end="435:23">=</operator> <name pos:start="435:25" pos:end="435:36"><name pos:start="435:25" pos:end="435:27">fns</name><index pos:start="435:28" pos:end="435:33">[<expr pos:start="435:29" pos:end="435:32"><name pos:start="435:29" pos:end="435:32">size</name></expr>]</index><index pos:start="435:34" pos:end="435:36">[<expr pos:start="435:35" pos:end="435:35"><name pos:start="435:35" pos:end="435:35">u</name></expr>]</index></name></expr>;</expr_stmt>

                <break pos:start="437:17" pos:end="437:22">break;</break>

            </block_content>}</block>

            <case pos:start="441:13" pos:end="441:22">case <expr pos:start="441:18" pos:end="441:21"><literal type="number" pos:start="441:18" pos:end="441:21">0x10</literal></expr>:</case> <comment type="block" pos:start="441:24" pos:end="441:37">/* ADD, SUB */</comment>

            <block pos:start="443:13" pos:end="459:13">{<block_content pos:start="445:17" pos:end="457:22">

                <decl_stmt pos:start="445:17" pos:end="453:18"><decl pos:start="445:17" pos:end="453:17"><type pos:start="445:17" pos:end="445:45"><specifier pos:start="445:17" pos:end="445:22">static</specifier> <name pos:start="445:24" pos:end="445:37">NeonGenTwoOpFn</name> <modifier pos:start="445:39" pos:end="445:39">*</modifier> <specifier pos:start="445:41" pos:end="445:45">const</specifier></type> <name pos:start="445:47" pos:end="445:55"><name pos:start="445:47" pos:end="445:49">fns</name><index pos:start="445:50" pos:end="445:52">[<expr pos:start="445:51" pos:end="445:51"><literal type="number" pos:start="445:51" pos:end="445:51">3</literal></expr>]</index><index pos:start="445:53" pos:end="445:55">[<expr pos:start="445:54" pos:end="445:54"><literal type="number" pos:start="445:54" pos:end="445:54">2</literal></expr>]</index></name> <init pos:start="445:57" pos:end="453:17">= <expr pos:start="445:59" pos:end="453:17"><block pos:start="445:59" pos:end="453:17">{

                    <expr pos:start="447:21" pos:end="447:70"><block pos:start="447:21" pos:end="447:70">{ <expr pos:start="447:23" pos:end="447:44"><name pos:start="447:23" pos:end="447:44">gen_helper_neon_add_u8</name></expr>, <expr pos:start="447:47" pos:end="447:68"><name pos:start="447:47" pos:end="447:68">gen_helper_neon_sub_u8</name></expr> }</block></expr>,

                    <expr pos:start="449:21" pos:end="449:72"><block pos:start="449:21" pos:end="449:72">{ <expr pos:start="449:23" pos:end="449:45"><name pos:start="449:23" pos:end="449:45">gen_helper_neon_add_u16</name></expr>, <expr pos:start="449:48" pos:end="449:70"><name pos:start="449:48" pos:end="449:70">gen_helper_neon_sub_u16</name></expr> }</block></expr>,

                    <expr pos:start="451:21" pos:end="451:56"><block pos:start="451:21" pos:end="451:56">{ <expr pos:start="451:23" pos:end="451:37"><name pos:start="451:23" pos:end="451:37">tcg_gen_add_i32</name></expr>, <expr pos:start="451:40" pos:end="451:54"><name pos:start="451:40" pos:end="451:54">tcg_gen_sub_i32</name></expr> }</block></expr>,

                }</block></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="455:17" pos:end="455:37"><expr pos:start="455:17" pos:end="455:36"><name pos:start="455:17" pos:end="455:21">genfn</name> <operator pos:start="455:23" pos:end="455:23">=</operator> <name pos:start="455:25" pos:end="455:36"><name pos:start="455:25" pos:end="455:27">fns</name><index pos:start="455:28" pos:end="455:33">[<expr pos:start="455:29" pos:end="455:32"><name pos:start="455:29" pos:end="455:32">size</name></expr>]</index><index pos:start="455:34" pos:end="455:36">[<expr pos:start="455:35" pos:end="455:35"><name pos:start="455:35" pos:end="455:35">u</name></expr>]</index></name></expr>;</expr_stmt>

                <break pos:start="457:17" pos:end="457:22">break;</break>

            </block_content>}</block>

            <case pos:start="461:13" pos:end="461:22">case <expr pos:start="461:18" pos:end="461:21"><literal type="number" pos:start="461:18" pos:end="461:21">0x11</literal></expr>:</case> <comment type="block" pos:start="461:24" pos:end="461:40">/* CMTST, CMEQ */</comment>

            <block pos:start="463:13" pos:end="479:13">{<block_content pos:start="465:17" pos:end="477:22">

                <decl_stmt pos:start="465:17" pos:end="473:18"><decl pos:start="465:17" pos:end="473:17"><type pos:start="465:17" pos:end="465:45"><specifier pos:start="465:17" pos:end="465:22">static</specifier> <name pos:start="465:24" pos:end="465:37">NeonGenTwoOpFn</name> <modifier pos:start="465:39" pos:end="465:39">*</modifier> <specifier pos:start="465:41" pos:end="465:45">const</specifier></type> <name pos:start="465:47" pos:end="465:55"><name pos:start="465:47" pos:end="465:49">fns</name><index pos:start="465:50" pos:end="465:52">[<expr pos:start="465:51" pos:end="465:51"><literal type="number" pos:start="465:51" pos:end="465:51">3</literal></expr>]</index><index pos:start="465:53" pos:end="465:55">[<expr pos:start="465:54" pos:end="465:54"><literal type="number" pos:start="465:54" pos:end="465:54">2</literal></expr>]</index></name> <init pos:start="465:57" pos:end="473:17">= <expr pos:start="465:59" pos:end="473:17"><block pos:start="465:59" pos:end="473:17">{

                    <expr pos:start="467:21" pos:end="467:70"><block pos:start="467:21" pos:end="467:70">{ <expr pos:start="467:23" pos:end="467:44"><name pos:start="467:23" pos:end="467:44">gen_helper_neon_tst_u8</name></expr>, <expr pos:start="467:47" pos:end="467:68"><name pos:start="467:47" pos:end="467:68">gen_helper_neon_ceq_u8</name></expr> }</block></expr>,

                    <expr pos:start="469:21" pos:end="469:72"><block pos:start="469:21" pos:end="469:72">{ <expr pos:start="469:23" pos:end="469:45"><name pos:start="469:23" pos:end="469:45">gen_helper_neon_tst_u16</name></expr>, <expr pos:start="469:48" pos:end="469:70"><name pos:start="469:48" pos:end="469:70">gen_helper_neon_ceq_u16</name></expr> }</block></expr>,

                    <expr pos:start="471:21" pos:end="471:72"><block pos:start="471:21" pos:end="471:72">{ <expr pos:start="471:23" pos:end="471:45"><name pos:start="471:23" pos:end="471:45">gen_helper_neon_tst_u32</name></expr>, <expr pos:start="471:48" pos:end="471:70"><name pos:start="471:48" pos:end="471:70">gen_helper_neon_ceq_u32</name></expr> }</block></expr>,

                }</block></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="475:17" pos:end="475:37"><expr pos:start="475:17" pos:end="475:36"><name pos:start="475:17" pos:end="475:21">genfn</name> <operator pos:start="475:23" pos:end="475:23">=</operator> <name pos:start="475:25" pos:end="475:36"><name pos:start="475:25" pos:end="475:27">fns</name><index pos:start="475:28" pos:end="475:33">[<expr pos:start="475:29" pos:end="475:32"><name pos:start="475:29" pos:end="475:32">size</name></expr>]</index><index pos:start="475:34" pos:end="475:36">[<expr pos:start="475:35" pos:end="475:35"><name pos:start="475:35" pos:end="475:35">u</name></expr>]</index></name></expr>;</expr_stmt>

                <break pos:start="477:17" pos:end="477:22">break;</break>

            </block_content>}</block>

            <case pos:start="481:13" pos:end="481:22">case <expr pos:start="481:18" pos:end="481:21"><literal type="number" pos:start="481:18" pos:end="481:21">0x13</literal></expr>:</case> <comment type="block" pos:start="481:24" pos:end="481:38">/* MUL, PMUL */</comment>

                <if_stmt pos:start="483:17" pos:end="493:17"><if pos:start="483:17" pos:end="493:17">if <condition pos:start="483:20" pos:end="483:22">(<expr pos:start="483:21" pos:end="483:21"><name pos:start="483:21" pos:end="483:21">u</name></expr>)</condition> <block pos:start="483:24" pos:end="493:17">{<block_content pos:start="487:21" pos:end="491:26">

                    <comment type="block" pos:start="485:21" pos:end="485:30">/* PMUL */</comment>

                    <expr_stmt pos:start="487:21" pos:end="487:38"><expr pos:start="487:21" pos:end="487:37"><call pos:start="487:21" pos:end="487:37"><name pos:start="487:21" pos:end="487:26">assert</name><argument_list pos:start="487:27" pos:end="487:37">(<argument pos:start="487:28" pos:end="487:36"><expr pos:start="487:28" pos:end="487:36"><name pos:start="487:28" pos:end="487:31">size</name> <operator pos:start="487:33" pos:end="487:34">==</operator> <literal type="number" pos:start="487:36" pos:end="487:36">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="489:21" pos:end="489:51"><expr pos:start="489:21" pos:end="489:50"><name pos:start="489:21" pos:end="489:25">genfn</name> <operator pos:start="489:27" pos:end="489:27">=</operator> <name pos:start="489:29" pos:end="489:50">gen_helper_neon_mul_p8</name></expr>;</expr_stmt>

                    <break pos:start="491:21" pos:end="491:26">break;</break>

                </block_content>}</block></if></if_stmt>

                <comment type="block" pos:start="495:17" pos:end="495:40">/* fall through : MUL */</comment>

            <case pos:start="497:13" pos:end="497:22">case <expr pos:start="497:18" pos:end="497:21"><literal type="number" pos:start="497:18" pos:end="497:21">0x12</literal></expr>:</case> <comment type="block" pos:start="497:24" pos:end="497:37">/* MLA, MLS */</comment>

            <block pos:start="499:13" pos:end="515:13">{<block_content pos:start="501:17" pos:end="513:22">

                <decl_stmt pos:start="501:17" pos:end="509:18"><decl pos:start="501:17" pos:end="509:17"><type pos:start="501:17" pos:end="501:45"><specifier pos:start="501:17" pos:end="501:22">static</specifier> <name pos:start="501:24" pos:end="501:37">NeonGenTwoOpFn</name> <modifier pos:start="501:39" pos:end="501:39">*</modifier> <specifier pos:start="501:41" pos:end="501:45">const</specifier></type> <name pos:start="501:47" pos:end="501:52"><name pos:start="501:47" pos:end="501:49">fns</name><index pos:start="501:50" pos:end="501:52">[<expr pos:start="501:51" pos:end="501:51"><literal type="number" pos:start="501:51" pos:end="501:51">3</literal></expr>]</index></name> <init pos:start="501:54" pos:end="509:17">= <expr pos:start="501:56" pos:end="509:17"><block pos:start="501:56" pos:end="509:17">{

                    <expr pos:start="503:21" pos:end="503:42"><name pos:start="503:21" pos:end="503:42">gen_helper_neon_mul_u8</name></expr>,

                    <expr pos:start="505:21" pos:end="505:43"><name pos:start="505:21" pos:end="505:43">gen_helper_neon_mul_u16</name></expr>,

                    <expr pos:start="507:21" pos:end="507:35"><name pos:start="507:21" pos:end="507:35">tcg_gen_mul_i32</name></expr>,

                }</block></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="511:17" pos:end="511:34"><expr pos:start="511:17" pos:end="511:33"><name pos:start="511:17" pos:end="511:21">genfn</name> <operator pos:start="511:23" pos:end="511:23">=</operator> <name pos:start="511:25" pos:end="511:33"><name pos:start="511:25" pos:end="511:27">fns</name><index pos:start="511:28" pos:end="511:33">[<expr pos:start="511:29" pos:end="511:32"><name pos:start="511:29" pos:end="511:32">size</name></expr>]</index></name></expr>;</expr_stmt>

                <break pos:start="513:17" pos:end="513:22">break;</break>

            </block_content>}</block>

            <case pos:start="517:13" pos:end="517:22">case <expr pos:start="517:18" pos:end="517:21"><literal type="number" pos:start="517:18" pos:end="517:21">0x16</literal></expr>:</case> <comment type="block" pos:start="517:24" pos:end="517:46">/* SQDMULH, SQRDMULH */</comment>

            <block pos:start="519:13" pos:end="535:13">{<block_content pos:start="521:17" pos:end="533:22">

                <decl_stmt pos:start="521:17" pos:end="527:18"><decl pos:start="521:17" pos:end="527:17"><type pos:start="521:17" pos:end="521:48"><specifier pos:start="521:17" pos:end="521:22">static</specifier> <name pos:start="521:24" pos:end="521:40">NeonGenTwoOpEnvFn</name> <modifier pos:start="521:42" pos:end="521:42">*</modifier> <specifier pos:start="521:44" pos:end="521:48">const</specifier></type> <name pos:start="521:50" pos:end="521:58"><name pos:start="521:50" pos:end="521:52">fns</name><index pos:start="521:53" pos:end="521:55">[<expr pos:start="521:54" pos:end="521:54"><literal type="number" pos:start="521:54" pos:end="521:54">2</literal></expr>]</index><index pos:start="521:56" pos:end="521:58">[<expr pos:start="521:57" pos:end="521:57"><literal type="number" pos:start="521:57" pos:end="521:57">2</literal></expr>]</index></name> <init pos:start="521:60" pos:end="527:17">= <expr pos:start="521:62" pos:end="527:17"><block pos:start="521:62" pos:end="527:17">{

                    <expr pos:start="523:21" pos:end="523:79"><block pos:start="523:21" pos:end="523:79">{ <expr pos:start="523:23" pos:end="523:48"><name pos:start="523:23" pos:end="523:48">gen_helper_neon_qdmulh_s16</name></expr>, <expr pos:start="523:51" pos:end="523:77"><name pos:start="523:51" pos:end="523:77">gen_helper_neon_qrdmulh_s16</name></expr> }</block></expr>,

                    <expr pos:start="525:21" pos:end="525:79"><block pos:start="525:21" pos:end="525:79">{ <expr pos:start="525:23" pos:end="525:48"><name pos:start="525:23" pos:end="525:48">gen_helper_neon_qdmulh_s32</name></expr>, <expr pos:start="525:51" pos:end="525:77"><name pos:start="525:51" pos:end="525:77">gen_helper_neon_qrdmulh_s32</name></expr> }</block></expr>,

                }</block></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="529:17" pos:end="529:47"><expr pos:start="529:17" pos:end="529:46"><call pos:start="529:17" pos:end="529:46"><name pos:start="529:17" pos:end="529:22">assert</name><argument_list pos:start="529:23" pos:end="529:46">(<argument pos:start="529:24" pos:end="529:45"><expr pos:start="529:24" pos:end="529:45"><name pos:start="529:24" pos:end="529:27">size</name> <operator pos:start="529:29" pos:end="529:30">==</operator> <literal type="number" pos:start="529:32" pos:end="529:32">1</literal> <operator pos:start="529:34" pos:end="529:35">||</operator> <name pos:start="529:37" pos:end="529:40">size</name> <operator pos:start="529:42" pos:end="529:43">==</operator> <literal type="number" pos:start="529:45" pos:end="529:45">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="531:17" pos:end="531:44"><expr pos:start="531:17" pos:end="531:43"><name pos:start="531:17" pos:end="531:24">genenvfn</name> <operator pos:start="531:26" pos:end="531:26">=</operator> <name pos:start="531:28" pos:end="531:43"><name pos:start="531:28" pos:end="531:30">fns</name><index pos:start="531:31" pos:end="531:40">[<expr pos:start="531:32" pos:end="531:39"><name pos:start="531:32" pos:end="531:35">size</name> <operator pos:start="531:37" pos:end="531:37">-</operator> <literal type="number" pos:start="531:39" pos:end="531:39">1</literal></expr>]</index><index pos:start="531:41" pos:end="531:43">[<expr pos:start="531:42" pos:end="531:42"><name pos:start="531:42" pos:end="531:42">u</name></expr>]</index></name></expr>;</expr_stmt>

                <break pos:start="533:17" pos:end="533:22">break;</break>

            </block_content>}</block>

            <default pos:start="537:13" pos:end="537:20">default:</default>

                <expr_stmt pos:start="539:17" pos:end="539:39"><expr pos:start="539:17" pos:end="539:38"><call pos:start="539:17" pos:end="539:38"><name pos:start="539:17" pos:end="539:36">g_assert_not_reached</name><argument_list pos:start="539:37" pos:end="539:38">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></switch>



            <if_stmt pos:start="545:13" pos:end="553:13"><if pos:start="545:13" pos:end="549:13">if <condition pos:start="545:16" pos:end="545:25">(<expr pos:start="545:17" pos:end="545:24"><name pos:start="545:17" pos:end="545:24">genenvfn</name></expr>)</condition> <block pos:start="545:27" pos:end="549:13">{<block_content pos:start="547:17" pos:end="547:61">

                <expr_stmt pos:start="547:17" pos:end="547:61"><expr pos:start="547:17" pos:end="547:60"><call pos:start="547:17" pos:end="547:60"><name pos:start="547:17" pos:end="547:24">genenvfn</name><argument_list pos:start="547:25" pos:end="547:60">(<argument pos:start="547:26" pos:end="547:32"><expr pos:start="547:26" pos:end="547:32"><name pos:start="547:26" pos:end="547:32">tcg_res</name></expr></argument>, <argument pos:start="547:35" pos:end="547:41"><expr pos:start="547:35" pos:end="547:41"><name pos:start="547:35" pos:end="547:41">cpu_env</name></expr></argument>, <argument pos:start="547:44" pos:end="547:50"><expr pos:start="547:44" pos:end="547:50"><name pos:start="547:44" pos:end="547:50">tcg_op1</name></expr></argument>, <argument pos:start="547:53" pos:end="547:59"><expr pos:start="547:53" pos:end="547:59"><name pos:start="547:53" pos:end="547:59">tcg_op2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="549:15" pos:end="553:13">else <block pos:start="549:20" pos:end="553:13">{<block_content pos:start="551:17" pos:end="551:49">

                <expr_stmt pos:start="551:17" pos:end="551:49"><expr pos:start="551:17" pos:end="551:48"><call pos:start="551:17" pos:end="551:48"><name pos:start="551:17" pos:end="551:21">genfn</name><argument_list pos:start="551:22" pos:end="551:48">(<argument pos:start="551:23" pos:end="551:29"><expr pos:start="551:23" pos:end="551:29"><name pos:start="551:23" pos:end="551:29">tcg_res</name></expr></argument>, <argument pos:start="551:32" pos:end="551:38"><expr pos:start="551:32" pos:end="551:38"><name pos:start="551:32" pos:end="551:38">tcg_op1</name></expr></argument>, <argument pos:start="551:41" pos:end="551:47"><expr pos:start="551:41" pos:end="551:47"><name pos:start="551:41" pos:end="551:47">tcg_op2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <if_stmt pos:start="557:13" pos:end="581:13"><if pos:start="557:13" pos:end="581:13">if <condition pos:start="557:16" pos:end="557:48">(<expr pos:start="557:17" pos:end="557:47"><name pos:start="557:17" pos:end="557:22">opcode</name> <operator pos:start="557:24" pos:end="557:25">==</operator> <literal type="number" pos:start="557:27" pos:end="557:29">0xf</literal> <operator pos:start="557:31" pos:end="557:32">||</operator> <name pos:start="557:34" pos:end="557:39">opcode</name> <operator pos:start="557:41" pos:end="557:42">==</operator> <literal type="number" pos:start="557:44" pos:end="557:47">0x12</literal></expr>)</condition> <block pos:start="557:50" pos:end="581:13">{<block_content pos:start="561:17" pos:end="579:49">

                <comment type="block" pos:start="559:17" pos:end="559:60">/* SABA, UABA, MLA, MLS: accumulating ops */</comment>

                <decl_stmt pos:start="561:17" pos:end="569:18"><decl pos:start="561:17" pos:end="569:17"><type pos:start="561:17" pos:end="561:45"><specifier pos:start="561:17" pos:end="561:22">static</specifier> <name pos:start="561:24" pos:end="561:37">NeonGenTwoOpFn</name> <modifier pos:start="561:39" pos:end="561:39">*</modifier> <specifier pos:start="561:41" pos:end="561:45">const</specifier></type> <name pos:start="561:47" pos:end="561:55"><name pos:start="561:47" pos:end="561:49">fns</name><index pos:start="561:50" pos:end="561:52">[<expr pos:start="561:51" pos:end="561:51"><literal type="number" pos:start="561:51" pos:end="561:51">3</literal></expr>]</index><index pos:start="561:53" pos:end="561:55">[<expr pos:start="561:54" pos:end="561:54"><literal type="number" pos:start="561:54" pos:end="561:54">2</literal></expr>]</index></name> <init pos:start="561:57" pos:end="569:17">= <expr pos:start="561:59" pos:end="569:17"><block pos:start="561:59" pos:end="569:17">{

                    <expr pos:start="563:21" pos:end="563:70"><block pos:start="563:21" pos:end="563:70">{ <expr pos:start="563:23" pos:end="563:44"><name pos:start="563:23" pos:end="563:44">gen_helper_neon_add_u8</name></expr>, <expr pos:start="563:47" pos:end="563:68"><name pos:start="563:47" pos:end="563:68">gen_helper_neon_sub_u8</name></expr> }</block></expr>,

                    <expr pos:start="565:21" pos:end="565:72"><block pos:start="565:21" pos:end="565:72">{ <expr pos:start="565:23" pos:end="565:45"><name pos:start="565:23" pos:end="565:45">gen_helper_neon_add_u16</name></expr>, <expr pos:start="565:48" pos:end="565:70"><name pos:start="565:48" pos:end="565:70">gen_helper_neon_sub_u16</name></expr> }</block></expr>,

                    <expr pos:start="567:21" pos:end="567:56"><block pos:start="567:21" pos:end="567:56">{ <expr pos:start="567:23" pos:end="567:37"><name pos:start="567:23" pos:end="567:37">tcg_gen_add_i32</name></expr>, <expr pos:start="567:40" pos:end="567:54"><name pos:start="567:40" pos:end="567:54">tcg_gen_sub_i32</name></expr> }</block></expr>,

                }</block></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="571:17" pos:end="571:52"><decl pos:start="571:17" pos:end="571:51"><type pos:start="571:17" pos:end="571:20"><name pos:start="571:17" pos:end="571:20">bool</name></type> <name pos:start="571:22" pos:end="571:27">is_sub</name> <init pos:start="571:29" pos:end="571:51">= <expr pos:start="571:31" pos:end="571:51"><operator pos:start="571:31" pos:end="571:31">(</operator><name pos:start="571:32" pos:end="571:37">opcode</name> <operator pos:start="571:39" pos:end="571:40">==</operator> <literal type="number" pos:start="571:42" pos:end="571:45">0x12</literal> <operator pos:start="571:47" pos:end="571:48">&amp;&amp;</operator> <name pos:start="571:50" pos:end="571:50">u</name><operator pos:start="571:51" pos:end="571:51">)</operator></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="571:54" pos:end="571:62">/* MLS */</comment>



                <expr_stmt pos:start="575:17" pos:end="575:42"><expr pos:start="575:17" pos:end="575:41"><name pos:start="575:17" pos:end="575:21">genfn</name> <operator pos:start="575:23" pos:end="575:23">=</operator> <name pos:start="575:25" pos:end="575:41"><name pos:start="575:25" pos:end="575:27">fns</name><index pos:start="575:28" pos:end="575:33">[<expr pos:start="575:29" pos:end="575:32"><name pos:start="575:29" pos:end="575:32">size</name></expr>]</index><index pos:start="575:34" pos:end="575:41">[<expr pos:start="575:35" pos:end="575:40"><name pos:start="575:35" pos:end="575:40">is_sub</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="577:17" pos:end="577:66"><expr pos:start="577:17" pos:end="577:65"><call pos:start="577:17" pos:end="577:65"><name pos:start="577:17" pos:end="577:36">read_vec_element_i32</name><argument_list pos:start="577:37" pos:end="577:65">(<argument pos:start="577:38" pos:end="577:38"><expr pos:start="577:38" pos:end="577:38"><name pos:start="577:38" pos:end="577:38">s</name></expr></argument>, <argument pos:start="577:41" pos:end="577:47"><expr pos:start="577:41" pos:end="577:47"><name pos:start="577:41" pos:end="577:47">tcg_op1</name></expr></argument>, <argument pos:start="577:50" pos:end="577:51"><expr pos:start="577:50" pos:end="577:51"><name pos:start="577:50" pos:end="577:51">rd</name></expr></argument>, <argument pos:start="577:54" pos:end="577:57"><expr pos:start="577:54" pos:end="577:57"><name pos:start="577:54" pos:end="577:57">pass</name></expr></argument>, <argument pos:start="577:60" pos:end="577:64"><expr pos:start="577:60" pos:end="577:64"><name pos:start="577:60" pos:end="577:64">MO_32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="579:17" pos:end="579:49"><expr pos:start="579:17" pos:end="579:48"><call pos:start="579:17" pos:end="579:48"><name pos:start="579:17" pos:end="579:21">genfn</name><argument_list pos:start="579:22" pos:end="579:48">(<argument pos:start="579:23" pos:end="579:29"><expr pos:start="579:23" pos:end="579:29"><name pos:start="579:23" pos:end="579:29">tcg_res</name></expr></argument>, <argument pos:start="579:32" pos:end="579:38"><expr pos:start="579:32" pos:end="579:38"><name pos:start="579:32" pos:end="579:38">tcg_op1</name></expr></argument>, <argument pos:start="579:41" pos:end="579:47"><expr pos:start="579:41" pos:end="579:47"><name pos:start="579:41" pos:end="579:47">tcg_res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="585:13" pos:end="585:63"><expr pos:start="585:13" pos:end="585:62"><call pos:start="585:13" pos:end="585:62"><name pos:start="585:13" pos:end="585:33">write_vec_element_i32</name><argument_list pos:start="585:34" pos:end="585:62">(<argument pos:start="585:35" pos:end="585:35"><expr pos:start="585:35" pos:end="585:35"><name pos:start="585:35" pos:end="585:35">s</name></expr></argument>, <argument pos:start="585:38" pos:end="585:44"><expr pos:start="585:38" pos:end="585:44"><name pos:start="585:38" pos:end="585:44">tcg_res</name></expr></argument>, <argument pos:start="585:47" pos:end="585:48"><expr pos:start="585:47" pos:end="585:48"><name pos:start="585:47" pos:end="585:48">rd</name></expr></argument>, <argument pos:start="585:51" pos:end="585:54"><expr pos:start="585:51" pos:end="585:54"><name pos:start="585:51" pos:end="585:54">pass</name></expr></argument>, <argument pos:start="585:57" pos:end="585:61"><expr pos:start="585:57" pos:end="585:61"><name pos:start="585:57" pos:end="585:61">MO_32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="589:13" pos:end="589:39"><expr pos:start="589:13" pos:end="589:38"><call pos:start="589:13" pos:end="589:38"><name pos:start="589:13" pos:end="589:29">tcg_temp_free_i32</name><argument_list pos:start="589:30" pos:end="589:38">(<argument pos:start="589:31" pos:end="589:37"><expr pos:start="589:31" pos:end="589:37"><name pos:start="589:31" pos:end="589:37">tcg_res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="591:13" pos:end="591:39"><expr pos:start="591:13" pos:end="591:38"><call pos:start="591:13" pos:end="591:38"><name pos:start="591:13" pos:end="591:29">tcg_temp_free_i32</name><argument_list pos:start="591:30" pos:end="591:38">(<argument pos:start="591:31" pos:end="591:37"><expr pos:start="591:31" pos:end="591:37"><name pos:start="591:31" pos:end="591:37">tcg_op1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="593:13" pos:end="593:39"><expr pos:start="593:13" pos:end="593:38"><call pos:start="593:13" pos:end="593:38"><name pos:start="593:13" pos:end="593:29">tcg_temp_free_i32</name><argument_list pos:start="593:30" pos:end="593:38">(<argument pos:start="593:31" pos:end="593:37"><expr pos:start="593:31" pos:end="593:37"><name pos:start="593:31" pos:end="593:37">tcg_op2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="601:5" pos:end="605:5"><if pos:start="601:5" pos:end="605:5">if <condition pos:start="601:8" pos:end="601:14">(<expr pos:start="601:9" pos:end="601:13"><operator pos:start="601:9" pos:end="601:9">!</operator><name pos:start="601:10" pos:end="601:13">is_q</name></expr>)</condition> <block pos:start="601:16" pos:end="605:5">{<block_content pos:start="603:9" pos:end="603:30">

        <expr_stmt pos:start="603:9" pos:end="603:30"><expr pos:start="603:9" pos:end="603:29"><call pos:start="603:9" pos:end="603:29"><name pos:start="603:9" pos:end="603:22">clear_vec_high</name><argument_list pos:start="603:23" pos:end="603:29">(<argument pos:start="603:24" pos:end="603:24"><expr pos:start="603:24" pos:end="603:24"><name pos:start="603:24" pos:end="603:24">s</name></expr></argument>, <argument pos:start="603:27" pos:end="603:28"><expr pos:start="603:27" pos:end="603:28"><name pos:start="603:27" pos:end="603:28">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
