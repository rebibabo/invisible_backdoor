<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26119.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">nbd_handle_export_name</name><parameter_list pos:start="1:34" pos:end="1:69">(<parameter pos:start="1:35" pos:end="1:51"><decl pos:start="1:35" pos:end="1:51"><type pos:start="1:35" pos:end="1:51"><name pos:start="1:35" pos:end="1:43">NBDClient</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:51">client</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:68"><decl pos:start="1:54" pos:end="1:68"><type pos:start="1:54" pos:end="1:68"><name pos:start="1:54" pos:end="1:61">uint32_t</name></type> <name pos:start="1:63" pos:end="1:68">length</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:14">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">rc</name> <init pos:start="5:12" pos:end="5:20">= <expr pos:start="5:14" pos:end="5:20"><operator pos:start="5:14" pos:end="5:14">-</operator><name pos:start="5:15" pos:end="5:20">EINVAL</name></expr></init></decl>, <decl pos:start="5:23" pos:end="5:42"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:23" pos:end="5:27">csock</name> <init pos:start="5:29" pos:end="5:42">= <expr pos:start="5:31" pos:end="5:42"><name pos:start="5:31" pos:end="5:42"><name pos:start="5:31" pos:end="5:36">client</name><operator pos:start="5:37" pos:end="5:38">-&gt;</operator><name pos:start="5:39" pos:end="5:42">sock</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:18"><name pos:start="7:10" pos:end="7:13">name</name><index pos:start="7:14" pos:end="7:18">[<expr pos:start="7:15" pos:end="7:17"><literal type="number" pos:start="7:15" pos:end="7:17">256</literal></expr>]</index></name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="15:7">/* Client sends:

        [20 ..  xx]   export name (length bytes)

     */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:29"><expr pos:start="17:5" pos:end="17:28"><call pos:start="17:5" pos:end="17:28"><name pos:start="17:5" pos:end="17:9">TRACE</name><argument_list pos:start="17:10" pos:end="17:28">(<argument pos:start="17:11" pos:end="17:27"><expr pos:start="17:11" pos:end="17:27"><literal type="string" pos:start="17:11" pos:end="17:27">"Checking length"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:21">(<expr pos:start="19:9" pos:end="19:20"><name pos:start="19:9" pos:end="19:14">length</name> <operator pos:start="19:16" pos:end="19:16">&gt;</operator> <literal type="number" pos:start="19:18" pos:end="19:20">255</literal></expr>)</condition> <block pos:start="19:23" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:18">

        <expr_stmt pos:start="21:9" pos:end="21:35"><expr pos:start="21:9" pos:end="21:34"><call pos:start="21:9" pos:end="21:34"><name pos:start="21:9" pos:end="21:11">LOG</name><argument_list pos:start="21:12" pos:end="21:34">(<argument pos:start="21:13" pos:end="21:33"><expr pos:start="21:13" pos:end="21:33"><literal type="string" pos:start="21:13" pos:end="21:33">"Bad length received"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="23:9" pos:end="23:18">goto <name pos:start="23:14" pos:end="23:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:49">(<expr pos:start="27:9" pos:end="27:48"><call pos:start="27:9" pos:end="27:38"><name pos:start="27:9" pos:end="27:17">read_sync</name><argument_list pos:start="27:18" pos:end="27:38">(<argument pos:start="27:19" pos:end="27:23"><expr pos:start="27:19" pos:end="27:23"><name pos:start="27:19" pos:end="27:23">csock</name></expr></argument>, <argument pos:start="27:26" pos:end="27:29"><expr pos:start="27:26" pos:end="27:29"><name pos:start="27:26" pos:end="27:29">name</name></expr></argument>, <argument pos:start="27:32" pos:end="27:37"><expr pos:start="27:32" pos:end="27:37"><name pos:start="27:32" pos:end="27:37">length</name></expr></argument>)</argument_list></call> <operator pos:start="27:40" pos:end="27:41">!=</operator> <name pos:start="27:43" pos:end="27:48">length</name></expr>)</condition> <block pos:start="27:51" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:18">

        <expr_stmt pos:start="29:9" pos:end="29:27"><expr pos:start="29:9" pos:end="29:26"><call pos:start="29:9" pos:end="29:26"><name pos:start="29:9" pos:end="29:11">LOG</name><argument_list pos:start="29:12" pos:end="29:26">(<argument pos:start="29:13" pos:end="29:25"><expr pos:start="29:13" pos:end="29:25"><literal type="string" pos:start="29:13" pos:end="29:25">"read failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="31:9" pos:end="31:18">goto <name pos:start="31:14" pos:end="31:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:24"><expr pos:start="35:5" pos:end="35:23"><name pos:start="35:5" pos:end="35:16"><name pos:start="35:5" pos:end="35:8">name</name><index pos:start="35:9" pos:end="35:16">[<expr pos:start="35:10" pos:end="35:15"><name pos:start="35:10" pos:end="35:15">length</name></expr>]</index></name> <operator pos:start="35:18" pos:end="35:18">=</operator> <literal type="char" pos:start="35:20" pos:end="35:23">'\0'</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:40"><expr pos:start="39:5" pos:end="39:39"><name pos:start="39:5" pos:end="39:15"><name pos:start="39:5" pos:end="39:10">client</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:15">exp</name></name> <operator pos:start="39:17" pos:end="39:17">=</operator> <call pos:start="39:19" pos:end="39:39"><name pos:start="39:19" pos:end="39:33">nbd_export_find</name><argument_list pos:start="39:34" pos:end="39:39">(<argument pos:start="39:35" pos:end="39:38"><expr pos:start="39:35" pos:end="39:38"><name pos:start="39:35" pos:end="39:38">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:21">(<expr pos:start="41:9" pos:end="41:20"><operator pos:start="41:9" pos:end="41:9">!</operator><name pos:start="41:10" pos:end="41:20"><name pos:start="41:10" pos:end="41:15">client</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:20">exp</name></name></expr>)</condition> <block pos:start="41:23" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:18">

        <expr_stmt pos:start="43:9" pos:end="43:32"><expr pos:start="43:9" pos:end="43:31"><call pos:start="43:9" pos:end="43:31"><name pos:start="43:9" pos:end="43:11">LOG</name><argument_list pos:start="43:12" pos:end="43:31">(<argument pos:start="43:13" pos:end="43:30"><expr pos:start="43:13" pos:end="43:30"><literal type="string" pos:start="43:13" pos:end="43:30">"export not found"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="45:9" pos:end="45:18">goto <name pos:start="45:14" pos:end="45:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:60"><expr pos:start="51:5" pos:end="51:59"><call pos:start="51:5" pos:end="51:59"><name pos:start="51:5" pos:end="51:22">QTAILQ_INSERT_TAIL</name><argument_list pos:start="51:23" pos:end="51:59">(<argument pos:start="51:24" pos:end="51:44"><expr pos:start="51:24" pos:end="51:44"><operator pos:start="51:24" pos:end="51:24">&amp;</operator><name pos:start="51:25" pos:end="51:44"><name pos:start="51:25" pos:end="51:30">client</name><operator pos:start="51:31" pos:end="51:32">-&gt;</operator><name pos:start="51:33" pos:end="51:35">exp</name><operator pos:start="51:36" pos:end="51:37">-&gt;</operator><name pos:start="51:38" pos:end="51:44">clients</name></name></expr></argument>, <argument pos:start="51:47" pos:end="51:52"><expr pos:start="51:47" pos:end="51:52"><name pos:start="51:47" pos:end="51:52">client</name></expr></argument>, <argument pos:start="51:55" pos:end="51:58"><expr pos:start="51:55" pos:end="51:58"><name pos:start="51:55" pos:end="51:58">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:32"><expr pos:start="53:5" pos:end="53:31"><call pos:start="53:5" pos:end="53:31"><name pos:start="53:5" pos:end="53:18">nbd_export_get</name><argument_list pos:start="53:19" pos:end="53:31">(<argument pos:start="53:20" pos:end="53:30"><expr pos:start="53:20" pos:end="53:30"><name pos:start="53:20" pos:end="53:30"><name pos:start="53:20" pos:end="53:25">client</name><operator pos:start="53:26" pos:end="53:27">-&gt;</operator><name pos:start="53:28" pos:end="53:30">exp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:11"><expr pos:start="55:5" pos:end="55:10"><name pos:start="55:5" pos:end="55:6">rc</name> <operator pos:start="55:8" pos:end="55:8">=</operator> <literal type="number" pos:start="55:10" pos:end="55:10">0</literal></expr>;</expr_stmt>

<label pos:start="57:1" pos:end="57:5"><name pos:start="57:1" pos:end="57:4">fail</name>:</label>

    <return pos:start="59:5" pos:end="59:14">return <expr pos:start="59:12" pos:end="59:13"><name pos:start="59:12" pos:end="59:13">rc</name></expr>;</return>

</block_content>}</block></function>
</unit>
