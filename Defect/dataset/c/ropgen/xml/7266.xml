<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7266.c" pos:tabs="8"><function pos:start="1:1" pos:end="21:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:12">op_addo</name> <parameter_list pos:start="1:14" pos:end="1:19">(<parameter pos:start="1:15" pos:end="1:18"><decl pos:start="1:15" pos:end="1:18"><type pos:start="1:15" pos:end="1:18"><name pos:start="1:15" pos:end="1:18">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="21:1">{<block_content pos:start="5:5" pos:end="19:13">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:16">target_ulong</name></type> <name pos:start="5:18" pos:end="5:20">tmp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:13"><expr pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:7">tmp</name> <operator pos:start="9:9" pos:end="9:9">=</operator> <name pos:start="9:11" pos:end="9:12">T0</name></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:13"><expr pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:6">T0</name> <operator pos:start="11:8" pos:end="11:9">+=</operator> <name pos:start="11:11" pos:end="11:12">T1</name></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:46">(<expr pos:start="13:9" pos:end="13:45"><operator pos:start="13:9" pos:end="13:9">(</operator><name pos:start="13:10" pos:end="13:11">T0</name> <operator pos:start="13:13" pos:end="13:14">&gt;&gt;</operator> <literal type="number" pos:start="13:16" pos:end="13:17">31</literal><operator pos:start="13:18" pos:end="13:18">)</operator> <operator pos:start="13:20" pos:end="13:20">^</operator> <operator pos:start="13:22" pos:end="13:22">(</operator><name pos:start="13:23" pos:end="13:24">T1</name> <operator pos:start="13:26" pos:end="13:27">&gt;&gt;</operator> <literal type="number" pos:start="13:29" pos:end="13:30">31</literal><operator pos:start="13:31" pos:end="13:31">)</operator> <operator pos:start="13:33" pos:end="13:33">^</operator> <operator pos:start="13:35" pos:end="13:35">(</operator><name pos:start="13:36" pos:end="13:38">tmp</name> <operator pos:start="13:40" pos:end="13:41">&gt;&gt;</operator> <literal type="number" pos:start="13:43" pos:end="13:44">31</literal><operator pos:start="13:45" pos:end="13:45">)</operator></expr>)</condition> <block pos:start="13:48" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:64">

        <expr_stmt pos:start="15:9" pos:end="15:64"><expr pos:start="15:9" pos:end="15:63"><call pos:start="15:9" pos:end="15:63"><name pos:start="15:9" pos:end="15:21">CALL_FROM_TB1</name><argument_list pos:start="15:22" pos:end="15:63">(<argument pos:start="15:23" pos:end="15:47"><expr pos:start="15:23" pos:end="15:47"><name pos:start="15:23" pos:end="15:47">do_raise_exception_direct</name></expr></argument>, <argument pos:start="15:50" pos:end="15:62"><expr pos:start="15:50" pos:end="15:62"><name pos:start="15:50" pos:end="15:62">EXCP_OVERFLOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:13"><expr pos:start="19:5" pos:end="19:12"><call pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:10">RETURN</name><argument_list pos:start="19:11" pos:end="19:12">()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
