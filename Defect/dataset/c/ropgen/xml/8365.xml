<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8365.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:33">qcow2_pre_write_overlap_check</name><parameter_list pos:start="1:34" pos:end="3:47">(<parameter pos:start="1:35" pos:end="1:54"><decl pos:start="1:35" pos:end="1:54"><type pos:start="1:35" pos:end="1:54"><name pos:start="1:35" pos:end="1:50">BlockDriverState</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:54">bs</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:63"><decl pos:start="1:57" pos:end="1:63"><type pos:start="1:57" pos:end="1:63"><name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:63">chk</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:79"><decl pos:start="1:66" pos:end="1:79"><type pos:start="1:66" pos:end="1:79"><name pos:start="1:66" pos:end="1:72">int64_t</name></type> <name pos:start="1:74" pos:end="1:79">offset</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:46"><decl pos:start="3:35" pos:end="3:46"><type pos:start="3:35" pos:end="3:46"><name pos:start="3:35" pos:end="3:41">int64_t</name></type> <name pos:start="3:43" pos:end="3:46">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="65:1">{<block_content pos:start="7:5" pos:end="63:13">

    <decl_stmt pos:start="7:5" pos:end="7:66"><decl pos:start="7:5" pos:end="7:65"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name> <init pos:start="7:13" pos:end="7:65">= <expr pos:start="7:15" pos:end="7:65"><call pos:start="7:15" pos:end="7:65"><name pos:start="7:15" pos:end="7:42">qcow2_check_metadata_overlap</name><argument_list pos:start="7:43" pos:end="7:65">(<argument pos:start="7:44" pos:end="7:45"><expr pos:start="7:44" pos:end="7:45"><name pos:start="7:44" pos:end="7:45">bs</name></expr></argument>, <argument pos:start="7:48" pos:end="7:50"><expr pos:start="7:48" pos:end="7:50"><name pos:start="7:48" pos:end="7:50">chk</name></expr></argument>, <argument pos:start="7:53" pos:end="7:58"><expr pos:start="7:53" pos:end="7:58"><name pos:start="7:53" pos:end="7:58">offset</name></expr></argument>, <argument pos:start="7:61" pos:end="7:64"><expr pos:start="7:61" pos:end="7:64"><name pos:start="7:61" pos:end="7:64">size</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="59:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:16">(<expr pos:start="11:9" pos:end="11:15"><name pos:start="11:9" pos:end="11:11">ret</name> <operator pos:start="11:13" pos:end="11:13">&lt;</operator> <literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr>)</condition> <block pos:start="11:18" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:19">

        <return pos:start="13:9" pos:end="13:19">return <expr pos:start="13:16" pos:end="13:18"><name pos:start="13:16" pos:end="13:18">ret</name></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="15:7" pos:end="59:5">else if <condition pos:start="15:15" pos:end="15:23">(<expr pos:start="15:16" pos:end="15:22"><name pos:start="15:16" pos:end="15:18">ret</name> <operator pos:start="15:20" pos:end="15:20">&gt;</operator> <literal type="number" pos:start="15:22" pos:end="15:22">0</literal></expr>)</condition> <block pos:start="15:25" pos:end="59:5">{<block_content pos:start="17:9" pos:end="57:20">

        <decl_stmt pos:start="17:9" pos:end="17:45"><decl pos:start="17:9" pos:end="17:44"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:29">metadata_ol_bitnr</name> <init pos:start="17:31" pos:end="17:44">= <expr pos:start="17:33" pos:end="17:44"><call pos:start="17:33" pos:end="17:40"><name pos:start="17:33" pos:end="17:35">ffs</name><argument_list pos:start="17:36" pos:end="17:40">(<argument pos:start="17:37" pos:end="17:39"><expr pos:start="17:37" pos:end="17:39"><name pos:start="17:37" pos:end="17:39">ret</name></expr></argument>)</argument_list></call> <operator pos:start="17:42" pos:end="17:42">-</operator> <literal type="number" pos:start="17:44" pos:end="17:44">1</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="19:9" pos:end="19:22"><decl pos:start="19:9" pos:end="19:21"><type pos:start="19:9" pos:end="19:14"><name pos:start="19:9" pos:end="19:12">char</name> <modifier pos:start="19:14" pos:end="19:14">*</modifier></type><name pos:start="19:15" pos:end="19:21">message</name></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="21:22"><decl pos:start="21:9" pos:end="21:21"><type pos:start="21:9" pos:end="21:17"><name pos:start="21:9" pos:end="21:15">QObject</name> <modifier pos:start="21:17" pos:end="21:17">*</modifier></type><name pos:start="21:18" pos:end="21:21">data</name></decl>;</decl_stmt>



        <expr_stmt pos:start="25:9" pos:end="25:55"><expr pos:start="25:9" pos:end="25:54"><call pos:start="25:9" pos:end="25:54"><name pos:start="25:9" pos:end="25:14">assert</name><argument_list pos:start="25:15" pos:end="25:54">(<argument pos:start="25:16" pos:end="25:53"><expr pos:start="25:16" pos:end="25:53"><name pos:start="25:16" pos:end="25:32">metadata_ol_bitnr</name> <operator pos:start="25:34" pos:end="25:34">&lt;</operator> <name pos:start="25:36" pos:end="25:53">QCOW2_OL_MAX_BITNR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="29:9" pos:end="33:54"><expr pos:start="29:9" pos:end="33:53"><call pos:start="29:9" pos:end="33:53"><name pos:start="29:9" pos:end="29:15">fprintf</name><argument_list pos:start="29:16" pos:end="33:53">(<argument pos:start="29:17" pos:end="29:22"><expr pos:start="29:17" pos:end="29:22"><name pos:start="29:17" pos:end="29:22">stderr</name></expr></argument>, <argument pos:start="29:25" pos:end="31:54"><expr pos:start="29:25" pos:end="31:54"><literal type="string" pos:start="29:25" pos:end="29:80">"qcow2: Preventing invalid write on metadata (overlaps "</literal>

                <literal type="string" pos:start="31:17" pos:end="31:54">"with %s); image marked as corrupt.\n"</literal></expr></argument>,

                <argument pos:start="33:17" pos:end="33:52"><expr pos:start="33:17" pos:end="33:52"><name pos:start="33:17" pos:end="33:52"><name pos:start="33:17" pos:end="33:33">metadata_ol_names</name><index pos:start="33:34" pos:end="33:52">[<expr pos:start="33:35" pos:end="33:51"><name pos:start="33:35" pos:end="33:51">metadata_ol_bitnr</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="37:54"><expr pos:start="35:9" pos:end="37:53"><name pos:start="35:9" pos:end="35:15">message</name> <operator pos:start="35:17" pos:end="35:17">=</operator> <call pos:start="35:19" pos:end="37:53"><name pos:start="35:19" pos:end="35:33">g_strdup_printf</name><argument_list pos:start="35:34" pos:end="37:53">(<argument pos:start="35:35" pos:end="35:58"><expr pos:start="35:35" pos:end="35:58"><literal type="string" pos:start="35:35" pos:end="35:58">"Prevented %s overwrite"</literal></expr></argument>,

                <argument pos:start="37:17" pos:end="37:52"><expr pos:start="37:17" pos:end="37:52"><name pos:start="37:17" pos:end="37:52"><name pos:start="37:17" pos:end="37:33">metadata_ol_names</name><index pos:start="37:34" pos:end="37:52">[<expr pos:start="37:35" pos:end="37:51"><name pos:start="37:35" pos:end="37:51">metadata_ol_bitnr</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="43:30"><expr pos:start="39:9" pos:end="43:29"><name pos:start="39:9" pos:end="39:12">data</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <call pos:start="39:16" pos:end="43:29"><name pos:start="39:16" pos:end="39:33">qobject_from_jsonf</name><argument_list pos:start="39:34" pos:end="43:29">(<argument pos:start="39:35" pos:end="41:48"><expr pos:start="39:35" pos:end="41:48"><literal type="string" pos:start="39:35" pos:end="39:74">"{ 'device': %s, 'msg': %s, 'offset': %"</literal>

                <name pos:start="41:17" pos:end="41:22">PRId64</name> <literal type="string" pos:start="41:24" pos:end="41:36">", 'size': %"</literal> <name pos:start="41:38" pos:end="41:43">PRId64</name> <literal type="string" pos:start="41:45" pos:end="41:48">" }"</literal></expr></argument>, <argument pos:start="41:51" pos:end="41:65"><expr pos:start="41:51" pos:end="41:65"><name pos:start="41:51" pos:end="41:65"><name pos:start="41:51" pos:end="41:52">bs</name><operator pos:start="41:53" pos:end="41:54">-&gt;</operator><name pos:start="41:55" pos:end="41:65">device_name</name></name></expr></argument>, <argument pos:start="41:68" pos:end="41:74"><expr pos:start="41:68" pos:end="41:74"><name pos:start="41:68" pos:end="41:74">message</name></expr></argument>,

                <argument pos:start="43:17" pos:end="43:22"><expr pos:start="43:17" pos:end="43:22"><name pos:start="43:17" pos:end="43:22">offset</name></expr></argument>, <argument pos:start="43:25" pos:end="43:28"><expr pos:start="43:25" pos:end="43:28"><name pos:start="43:25" pos:end="43:28">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:67"><expr pos:start="45:9" pos:end="45:66"><call pos:start="45:9" pos:end="45:66"><name pos:start="45:9" pos:end="45:30">monitor_protocol_event</name><argument_list pos:start="45:31" pos:end="45:66">(<argument pos:start="45:32" pos:end="45:59"><expr pos:start="45:32" pos:end="45:59"><name pos:start="45:32" pos:end="45:59">QEVENT_BLOCK_IMAGE_CORRUPTED</name></expr></argument>, <argument pos:start="45:62" pos:end="45:65"><expr pos:start="45:62" pos:end="45:65"><name pos:start="45:62" pos:end="45:65">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:24"><expr pos:start="47:9" pos:end="47:23"><call pos:start="47:9" pos:end="47:23"><name pos:start="47:9" pos:end="47:14">g_free</name><argument_list pos:start="47:15" pos:end="47:23">(<argument pos:start="47:16" pos:end="47:22"><expr pos:start="47:16" pos:end="47:22"><name pos:start="47:16" pos:end="47:22">message</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:29"><expr pos:start="49:9" pos:end="49:28"><call pos:start="49:9" pos:end="49:28"><name pos:start="49:9" pos:end="49:22">qobject_decref</name><argument_list pos:start="49:23" pos:end="49:28">(<argument pos:start="49:24" pos:end="49:27"><expr pos:start="49:24" pos:end="49:27"><name pos:start="49:24" pos:end="49:27">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="53:9" pos:end="53:31"><expr pos:start="53:9" pos:end="53:30"><call pos:start="53:9" pos:end="53:30"><name pos:start="53:9" pos:end="53:26">qcow2_mark_corrupt</name><argument_list pos:start="53:27" pos:end="53:30">(<argument pos:start="53:28" pos:end="53:29"><expr pos:start="53:28" pos:end="53:29"><name pos:start="53:28" pos:end="53:29">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:23"><expr pos:start="55:9" pos:end="55:22"><name pos:start="55:9" pos:end="55:15"><name pos:start="55:9" pos:end="55:10">bs</name><operator pos:start="55:11" pos:end="55:12">-&gt;</operator><name pos:start="55:13" pos:end="55:15">drv</name></name> <operator pos:start="55:17" pos:end="55:17">=</operator> <name pos:start="55:19" pos:end="55:22">NULL</name></expr>;</expr_stmt> <comment type="block" pos:start="55:25" pos:end="55:47">/* make BDS unusable */</comment>

        <return pos:start="57:9" pos:end="57:20">return <expr pos:start="57:16" pos:end="57:19"><operator pos:start="57:16" pos:end="57:16">-</operator><name pos:start="57:17" pos:end="57:19">EIO</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="63:5" pos:end="63:13">return <expr pos:start="63:12" pos:end="63:12"><literal type="number" pos:start="63:12" pos:end="63:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
