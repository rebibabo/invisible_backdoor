<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8692.c" pos:tabs="8"><function pos:start="1:1" pos:end="26:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:41">test_validate_fail_union_flat</name><parameter_list pos:start="1:42" pos:end="3:61">(<parameter pos:start="1:43" pos:end="1:68"><decl pos:start="1:43" pos:end="1:68"><type pos:start="1:43" pos:end="1:68"><name pos:start="1:43" pos:end="1:62">TestInputVisitorData</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:68">data</name></decl></parameter>,

                                          <parameter pos:start="3:43" pos:end="3:60"><decl pos:start="3:43" pos:end="3:60"><type pos:start="3:43" pos:end="3:60"><specifier pos:start="3:43" pos:end="3:47">const</specifier> <name pos:start="3:49" pos:end="3:52">void</name> <modifier pos:start="3:54" pos:end="3:54">*</modifier></type><name pos:start="3:55" pos:end="3:60">unused</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="26:1">{<block_content pos:start="7:5" pos:end="24:36">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">UserDefFlatUnion</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:25">tmp</name> <init pos:start="7:27" pos:end="7:32">= <expr pos:start="7:29" pos:end="7:32"><name pos:start="7:29" pos:end="7:32">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Error</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:14">err</name> <init pos:start="9:16" pos:end="9:21">= <expr pos:start="9:18" pos:end="9:21"><name pos:start="9:18" pos:end="9:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">Visitor</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:14">v</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:86"><expr pos:start="15:5" pos:end="15:85"><name pos:start="15:5" pos:end="15:5">v</name> <operator pos:start="15:7" pos:end="15:7">=</operator> <call pos:start="15:9" pos:end="15:85"><name pos:start="15:9" pos:end="15:26">validate_test_init</name><argument_list pos:start="15:27" pos:end="15:85">(<argument pos:start="15:28" pos:end="15:31"><expr pos:start="15:28" pos:end="15:31"><name pos:start="15:28" pos:end="15:31">data</name></expr></argument>, <argument pos:start="15:34" pos:end="15:84"><expr pos:start="15:34" pos:end="15:84"><literal type="string" pos:start="15:34" pos:end="15:84">"{ 'string': 'c', 'integer': 41, 'boolean': true }"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:53"><expr pos:start="19:5" pos:end="19:52"><call pos:start="19:5" pos:end="19:52"><name pos:start="19:5" pos:end="19:31">visit_type_UserDefFlatUnion</name><argument_list pos:start="19:32" pos:end="19:52">(<argument pos:start="19:33" pos:end="19:33"><expr pos:start="19:33" pos:end="19:33"><name pos:start="19:33" pos:end="19:33">v</name></expr></argument>, <argument pos:start="19:36" pos:end="19:39"><expr pos:start="19:36" pos:end="19:39"><operator pos:start="19:36" pos:end="19:36">&amp;</operator><name pos:start="19:37" pos:end="19:39">tmp</name></expr></argument>, <argument pos:start="19:42" pos:end="19:45"><expr pos:start="19:42" pos:end="19:45"><name pos:start="19:42" pos:end="19:45">NULL</name></expr></argument>, <argument pos:start="19:48" pos:end="19:51"><expr pos:start="19:48" pos:end="19:51"><operator pos:start="19:48" pos:end="19:48">&amp;</operator><name pos:start="19:49" pos:end="19:51">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:18"><expr pos:start="21:5" pos:end="21:17"><call pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:12">g_assert</name><argument_list pos:start="21:13" pos:end="21:17">(<argument pos:start="21:14" pos:end="21:16"><expr pos:start="21:14" pos:end="21:16"><name pos:start="21:14" pos:end="21:16">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <expr_stmt pos:start="24:5" pos:end="24:36"><expr pos:start="24:5" pos:end="24:35"><call pos:start="24:5" pos:end="24:35"><name pos:start="24:5" pos:end="24:30">qapi_free_UserDefFlatUnion</name><argument_list pos:start="24:31" pos:end="24:35">(<argument pos:start="24:32" pos:end="24:34"><expr pos:start="24:32" pos:end="24:34"><name pos:start="24:32" pos:end="24:34">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function></unit>
