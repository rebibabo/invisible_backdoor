<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13875.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">v4l2_free_buffer</name><parameter_list pos:start="1:29" pos:end="1:59">(<parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:33">void</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:41">opaque</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:58"><decl pos:start="1:44" pos:end="1:58"><type pos:start="1:44" pos:end="1:58"><name pos:start="1:44" pos:end="1:50">uint8_t</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:58">unused</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:40">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:14">V4L2Buffer</name><modifier pos:start="5:15" pos:end="5:15">*</modifier></type> <name pos:start="5:17" pos:end="5:21">avbuf</name> <init pos:start="5:23" pos:end="5:30">= <expr pos:start="5:25" pos:end="5:30"><name pos:start="5:25" pos:end="5:30">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:44"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">V4L2m2mContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:44">= <expr pos:start="7:25" pos:end="7:44"><call pos:start="7:25" pos:end="7:44"><name pos:start="7:25" pos:end="7:37">buf_to_m2mctx</name><argument_list pos:start="7:38" pos:end="7:44">(<argument pos:start="7:39" pos:end="7:43"><expr pos:start="7:39" pos:end="7:43"><name pos:start="7:39" pos:end="7:43">avbuf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:69"><expr pos:start="11:5" pos:end="11:68"><call pos:start="11:5" pos:end="11:68"><name pos:start="11:5" pos:end="11:29">atomic_fetch_sub_explicit</name><argument_list pos:start="11:30" pos:end="11:68">(<argument pos:start="11:31" pos:end="11:42"><expr pos:start="11:31" pos:end="11:42"><operator pos:start="11:31" pos:end="11:31">&amp;</operator><name pos:start="11:32" pos:end="11:42"><name pos:start="11:32" pos:end="11:32">s</name><operator pos:start="11:33" pos:end="11:34">-&gt;</operator><name pos:start="11:35" pos:end="11:42">refcount</name></name></expr></argument>, <argument pos:start="11:45" pos:end="11:45"><expr pos:start="11:45" pos:end="11:45"><literal type="number" pos:start="11:45" pos:end="11:45">1</literal></expr></argument>, <argument pos:start="11:48" pos:end="11:67"><expr pos:start="11:48" pos:end="11:67"><name pos:start="11:48" pos:end="11:67">memory_order_acq_rel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="21:5"><if pos:start="13:5" pos:end="21:5">if <condition pos:start="13:8" pos:end="13:18">(<expr pos:start="13:9" pos:end="13:17"><name pos:start="13:9" pos:end="13:17"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:17">reinit</name></name></expr>)</condition> <block pos:start="13:20" pos:end="21:5">{<block_content pos:start="15:9" pos:end="19:15">

        <if_stmt pos:start="15:9" pos:end="17:34"><if pos:start="15:9" pos:end="17:34">if <condition pos:start="15:12" pos:end="15:39">(<expr pos:start="15:13" pos:end="15:38"><operator pos:start="15:13" pos:end="15:13">!</operator><call pos:start="15:14" pos:end="15:38"><name pos:start="15:14" pos:end="15:24">atomic_load</name><argument_list pos:start="15:25" pos:end="15:38">(<argument pos:start="15:26" pos:end="15:37"><expr pos:start="15:26" pos:end="15:37"><operator pos:start="15:26" pos:end="15:26">&amp;</operator><name pos:start="15:27" pos:end="15:37"><name pos:start="15:27" pos:end="15:27">s</name><operator pos:start="15:28" pos:end="15:29">-&gt;</operator><name pos:start="15:30" pos:end="15:37">refcount</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="17:13" pos:end="17:34"><block_content pos:start="17:13" pos:end="17:34">

            <expr_stmt pos:start="17:13" pos:end="17:34"><expr pos:start="17:13" pos:end="17:33"><call pos:start="17:13" pos:end="17:33"><name pos:start="17:13" pos:end="17:20">sem_post</name><argument_list pos:start="17:21" pos:end="17:33">(<argument pos:start="17:22" pos:end="17:32"><expr pos:start="17:22" pos:end="17:32"><operator pos:start="17:22" pos:end="17:22">&amp;</operator><name pos:start="17:23" pos:end="17:32"><name pos:start="17:23" pos:end="17:23">s</name><operator pos:start="17:24" pos:end="17:25">-&gt;</operator><name pos:start="17:26" pos:end="17:32">refsync</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <return pos:start="19:9" pos:end="19:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:33">(<expr pos:start="25:9" pos:end="25:32"><name pos:start="25:9" pos:end="25:32"><name pos:start="25:9" pos:end="25:13">avbuf</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:22">context</name><operator pos:start="25:23" pos:end="25:24">-&gt;</operator><name pos:start="25:25" pos:end="25:32">streamon</name></name></expr>)</condition> <block pos:start="25:35" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:15">

        <expr_stmt pos:start="27:9" pos:end="27:38"><expr pos:start="27:9" pos:end="27:37"><call pos:start="27:9" pos:end="27:37"><name pos:start="27:9" pos:end="27:30">ff_v4l2_buffer_enqueue</name><argument_list pos:start="27:31" pos:end="27:37">(<argument pos:start="27:32" pos:end="27:36"><expr pos:start="27:32" pos:end="27:36"><name pos:start="27:32" pos:end="27:36">avbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="37:40"><if pos:start="35:5" pos:end="37:40">if <condition pos:start="35:8" pos:end="35:35">(<expr pos:start="35:9" pos:end="35:34"><operator pos:start="35:9" pos:end="35:9">!</operator><call pos:start="35:10" pos:end="35:34"><name pos:start="35:10" pos:end="35:20">atomic_load</name><argument_list pos:start="35:21" pos:end="35:34">(<argument pos:start="35:22" pos:end="35:33"><expr pos:start="35:22" pos:end="35:33"><operator pos:start="35:22" pos:end="35:22">&amp;</operator><name pos:start="35:23" pos:end="35:33"><name pos:start="35:23" pos:end="35:23">s</name><operator pos:start="35:24" pos:end="35:25">-&gt;</operator><name pos:start="35:26" pos:end="35:33">refcount</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:40"><block_content pos:start="37:9" pos:end="37:40">

        <expr_stmt pos:start="37:9" pos:end="37:40"><expr pos:start="37:9" pos:end="37:39"><call pos:start="37:9" pos:end="37:39"><name pos:start="37:9" pos:end="37:29">ff_v4l2_m2m_codec_end</name><argument_list pos:start="37:30" pos:end="37:39">(<argument pos:start="37:31" pos:end="37:38"><expr pos:start="37:31" pos:end="37:38"><name pos:start="37:31" pos:end="37:38"><name pos:start="37:31" pos:end="37:31">s</name><operator pos:start="37:32" pos:end="37:33">-&gt;</operator><name pos:start="37:34" pos:end="37:38">avctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
