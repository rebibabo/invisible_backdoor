<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9874.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">pci_qdev_init</name><parameter_list pos:start="1:25" pos:end="1:43">(<parameter pos:start="1:26" pos:end="1:42"><decl pos:start="1:26" pos:end="1:42"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:36">DeviceState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:42">qdev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:13">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">PCIDevice</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:22">pci_dev</name> <init pos:start="5:24" pos:end="5:42">= <expr pos:start="5:26" pos:end="5:42"><operator pos:start="5:26" pos:end="5:26">(</operator><name pos:start="5:27" pos:end="5:35">PCIDevice</name> <operator pos:start="5:37" pos:end="5:37">*</operator><operator pos:start="5:38" pos:end="5:38">)</operator><name pos:start="5:39" pos:end="5:42">qdev</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:55"><decl pos:start="7:5" pos:end="7:54"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">PCIDeviceClass</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:22">pc</name> <init pos:start="7:24" pos:end="7:54">= <expr pos:start="7:26" pos:end="7:54"><call pos:start="7:26" pos:end="7:54"><name pos:start="7:26" pos:end="7:45">PCI_DEVICE_GET_CLASS</name><argument_list pos:start="7:46" pos:end="7:54">(<argument pos:start="7:47" pos:end="7:53"><expr pos:start="7:47" pos:end="7:53"><name pos:start="7:47" pos:end="7:53">pci_dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:10">PCIBus</name> <modifier pos:start="9:12" pos:end="9:12">*</modifier></type><name pos:start="9:13" pos:end="9:15">bus</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:11"><decl pos:start="11:5" pos:end="11:10"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:10">rc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">bool</name></type> <name pos:start="13:10" pos:end="13:23">is_default_rom</name></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:75">/* initialize cap_present for pci_is_express() and pci_config_size() */</comment>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:23">(<expr pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:10">pc</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:22">is_express</name></name></expr>)</condition> <block pos:start="19:25" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:53">

        <expr_stmt pos:start="21:9" pos:end="21:53"><expr pos:start="21:9" pos:end="21:52"><name pos:start="21:9" pos:end="21:28"><name pos:start="21:9" pos:end="21:15">pci_dev</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:28">cap_present</name></name> <operator pos:start="21:30" pos:end="21:31">|=</operator> <name pos:start="21:33" pos:end="21:52">QEMU_PCI_CAP_EXPRESS</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:45"><expr pos:start="27:5" pos:end="27:44"><name pos:start="27:5" pos:end="27:7">bus</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:44"><name pos:start="27:11" pos:end="27:17">PCI_BUS</name><argument_list pos:start="27:18" pos:end="27:44">(<argument pos:start="27:19" pos:end="27:43"><expr pos:start="27:19" pos:end="27:43"><call pos:start="27:19" pos:end="27:43"><name pos:start="27:19" pos:end="27:37">qdev_get_parent_bus</name><argument_list pos:start="27:38" pos:end="27:43">(<argument pos:start="27:39" pos:end="27:42"><expr pos:start="27:39" pos:end="27:42"><name pos:start="27:39" pos:end="27:42">qdev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="33:53"><expr pos:start="29:5" pos:end="33:52"><name pos:start="29:5" pos:end="29:11">pci_dev</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <call pos:start="29:15" pos:end="33:52"><name pos:start="29:15" pos:end="29:36">do_pci_register_device</name><argument_list pos:start="29:37" pos:end="33:52">(<argument pos:start="29:38" pos:end="29:44"><expr pos:start="29:38" pos:end="29:44"><name pos:start="29:38" pos:end="29:44">pci_dev</name></expr></argument>, <argument pos:start="29:47" pos:end="29:49"><expr pos:start="29:47" pos:end="29:49"><name pos:start="29:47" pos:end="29:49">bus</name></expr></argument>,

                                     <argument pos:start="31:38" pos:end="31:70"><expr pos:start="31:38" pos:end="31:70"><call pos:start="31:38" pos:end="31:70"><name pos:start="31:38" pos:end="31:56">object_get_typename</name><argument_list pos:start="31:57" pos:end="31:70">(<argument pos:start="31:58" pos:end="31:69"><expr pos:start="31:58" pos:end="31:69"><call pos:start="31:58" pos:end="31:69"><name pos:start="31:58" pos:end="31:63">OBJECT</name><argument_list pos:start="31:64" pos:end="31:69">(<argument pos:start="31:65" pos:end="31:68"><expr pos:start="31:65" pos:end="31:68"><name pos:start="31:65" pos:end="31:68">qdev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,

                                     <argument pos:start="33:38" pos:end="33:51"><expr pos:start="33:38" pos:end="33:51"><name pos:start="33:38" pos:end="33:51"><name pos:start="33:38" pos:end="33:44">pci_dev</name><operator pos:start="33:45" pos:end="33:46">-&gt;</operator><name pos:start="33:47" pos:end="33:51">devfn</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="37:18"><if pos:start="35:5" pos:end="37:18">if <condition pos:start="35:8" pos:end="35:24">(<expr pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:15">pci_dev</name> <operator pos:start="35:17" pos:end="35:18">==</operator> <name pos:start="35:20" pos:end="35:23">NULL</name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:18"><block_content pos:start="37:9" pos:end="37:18">

        <return pos:start="37:9" pos:end="37:18">return <expr pos:start="37:16" pos:end="37:17"><operator pos:start="37:16" pos:end="37:16">-</operator><literal type="number" pos:start="37:17" pos:end="37:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="53:5"><if pos:start="41:5" pos:end="53:5">if <condition pos:start="41:8" pos:end="41:17">(<expr pos:start="41:9" pos:end="41:16"><name pos:start="41:9" pos:end="41:16"><name pos:start="41:9" pos:end="41:10">pc</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:16">init</name></name></expr>)</condition> <block pos:start="41:19" pos:end="53:5">{<block_content pos:start="43:9" pos:end="51:9">

        <expr_stmt pos:start="43:9" pos:end="43:31"><expr pos:start="43:9" pos:end="43:30"><name pos:start="43:9" pos:end="43:10">rc</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <call pos:start="43:14" pos:end="43:30"><name pos:start="43:14" pos:end="43:21"><name pos:start="43:14" pos:end="43:15">pc</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:21">init</name></name><argument_list pos:start="43:22" pos:end="43:30">(<argument pos:start="43:23" pos:end="43:29"><expr pos:start="43:23" pos:end="43:29"><name pos:start="43:23" pos:end="43:29">pci_dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="51:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:20">(<expr pos:start="45:13" pos:end="45:19"><name pos:start="45:13" pos:end="45:14">rc</name> <operator pos:start="45:16" pos:end="45:17">!=</operator> <literal type="number" pos:start="45:19" pos:end="45:19">0</literal></expr>)</condition> <block pos:start="45:22" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:22">

            <expr_stmt pos:start="47:13" pos:end="47:46"><expr pos:start="47:13" pos:end="47:45"><call pos:start="47:13" pos:end="47:45"><name pos:start="47:13" pos:end="47:36">do_pci_unregister_device</name><argument_list pos:start="47:37" pos:end="47:45">(<argument pos:start="47:38" pos:end="47:44"><expr pos:start="47:38" pos:end="47:44"><name pos:start="47:38" pos:end="47:44">pci_dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="49:13" pos:end="49:22">return <expr pos:start="49:20" pos:end="49:21"><name pos:start="49:20" pos:end="49:21">rc</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="57:5" pos:end="57:21">/* rom loading */</comment>

    <expr_stmt pos:start="59:5" pos:end="59:27"><expr pos:start="59:5" pos:end="59:26"><name pos:start="59:5" pos:end="59:18">is_default_rom</name> <operator pos:start="59:20" pos:end="59:20">=</operator> <name pos:start="59:22" pos:end="59:26">false</name></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="67:5"><if pos:start="61:5" pos:end="67:5">if <condition pos:start="61:8" pos:end="61:56">(<expr pos:start="61:9" pos:end="61:55"><name pos:start="61:9" pos:end="61:24"><name pos:start="61:9" pos:end="61:15">pci_dev</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:24">romfile</name></name> <operator pos:start="61:26" pos:end="61:27">==</operator> <name pos:start="61:29" pos:end="61:32">NULL</name> <operator pos:start="61:34" pos:end="61:35">&amp;&amp;</operator> <name pos:start="61:37" pos:end="61:47"><name pos:start="61:37" pos:end="61:38">pc</name><operator pos:start="61:39" pos:end="61:40">-&gt;</operator><name pos:start="61:41" pos:end="61:47">romfile</name></name> <operator pos:start="61:49" pos:end="61:50">!=</operator> <name pos:start="61:52" pos:end="61:55">NULL</name></expr>)</condition> <block pos:start="61:58" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:30">

        <expr_stmt pos:start="63:9" pos:end="63:49"><expr pos:start="63:9" pos:end="63:48"><name pos:start="63:9" pos:end="63:24"><name pos:start="63:9" pos:end="63:15">pci_dev</name><operator pos:start="63:16" pos:end="63:17">-&gt;</operator><name pos:start="63:18" pos:end="63:24">romfile</name></name> <operator pos:start="63:26" pos:end="63:26">=</operator> <call pos:start="63:28" pos:end="63:48"><name pos:start="63:28" pos:end="63:35">g_strdup</name><argument_list pos:start="63:36" pos:end="63:48">(<argument pos:start="63:37" pos:end="63:47"><expr pos:start="63:37" pos:end="63:47"><name pos:start="63:37" pos:end="63:47"><name pos:start="63:37" pos:end="63:38">pc</name><operator pos:start="63:39" pos:end="63:40">-&gt;</operator><name pos:start="63:41" pos:end="63:47">romfile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:30"><expr pos:start="65:9" pos:end="65:29"><name pos:start="65:9" pos:end="65:22">is_default_rom</name> <operator pos:start="65:24" pos:end="65:24">=</operator> <name pos:start="65:26" pos:end="65:29">true</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:48"><expr pos:start="69:5" pos:end="69:47"><call pos:start="69:5" pos:end="69:47"><name pos:start="69:5" pos:end="69:22">pci_add_option_rom</name><argument_list pos:start="69:23" pos:end="69:47">(<argument pos:start="69:24" pos:end="69:30"><expr pos:start="69:24" pos:end="69:30"><name pos:start="69:24" pos:end="69:30">pci_dev</name></expr></argument>, <argument pos:start="69:33" pos:end="69:46"><expr pos:start="69:33" pos:end="69:46"><name pos:start="69:33" pos:end="69:46">is_default_rom</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="73:5" pos:end="73:13">return <expr pos:start="73:12" pos:end="73:12"><literal type="number" pos:start="73:12" pos:end="73:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
