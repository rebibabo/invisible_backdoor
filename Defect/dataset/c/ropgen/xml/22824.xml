<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22824.c" pos:tabs="8"><function pos:start="1:1" pos:end="549:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:11">int</name></type> <name pos:start="1:13" pos:end="1:23">ff_wma_init</name><parameter_list pos:start="1:24" pos:end="1:58">(<parameter pos:start="1:25" pos:end="1:45"><decl pos:start="1:25" pos:end="1:45"><type pos:start="1:25" pos:end="1:45"><name pos:start="1:25" pos:end="1:38">AVCodecContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:45">avctx</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:57"><decl pos:start="1:48" pos:end="1:57"><type pos:start="1:48" pos:end="1:57"><name pos:start="1:48" pos:end="1:50">int</name></type> <name pos:start="1:52" pos:end="1:57">flags2</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="549:1">{<block_content pos:start="5:5" pos:end="547:13">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">WMACodecContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:22">s</name> <init pos:start="5:24" pos:end="5:41">= <expr pos:start="5:26" pos:end="5:41"><name pos:start="5:26" pos:end="5:41"><name pos:start="5:26" pos:end="5:30">avctx</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:9"><name pos:start="9:5" pos:end="9:9">float</name></type> <name pos:start="9:11" pos:end="9:14">bps1</name></decl>, <decl pos:start="9:17" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:9"/><name pos:start="9:17" pos:end="9:25">high_freq</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:18"><specifier pos:start="11:5" pos:end="11:12">volatile</specifier> <name pos:start="11:14" pos:end="11:18">float</name></type> <name pos:start="11:20" pos:end="11:22">bps</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:20">sample_rate1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:22">coef_vlc_table</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="25:18"><if pos:start="19:5" pos:end="25:18">if <condition pos:start="19:8" pos:end="23:32">(<expr pos:start="19:9" pos:end="23:31"><name pos:start="19:9" pos:end="19:26"><name pos:start="19:9" pos:end="19:13">avctx</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:26">sample_rate</name></name> <operator pos:start="19:28" pos:end="19:29">&lt;=</operator> <literal type="number" pos:start="19:31" pos:end="19:31">0</literal> <operator pos:start="19:33" pos:end="19:34">||</operator> <name pos:start="19:36" pos:end="19:53"><name pos:start="19:36" pos:end="19:40">avctx</name><operator pos:start="19:41" pos:end="19:42">-&gt;</operator><name pos:start="19:43" pos:end="19:53">sample_rate</name></name> <operator pos:start="19:55" pos:end="19:55">&gt;</operator> <literal type="number" pos:start="19:57" pos:end="19:61">50000</literal> <operator pos:start="19:63" pos:end="19:64">||</operator>

        <name pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:13">avctx</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:23">channels</name></name>    <operator pos:start="21:28" pos:end="21:29">&lt;=</operator> <literal type="number" pos:start="21:31" pos:end="21:31">0</literal> <operator pos:start="21:33" pos:end="21:34">||</operator> <name pos:start="21:36" pos:end="21:50"><name pos:start="21:36" pos:end="21:40">avctx</name><operator pos:start="21:41" pos:end="21:42">-&gt;</operator><name pos:start="21:43" pos:end="21:50">channels</name></name>    <operator pos:start="21:55" pos:end="21:55">&gt;</operator> <literal type="number" pos:start="21:57" pos:end="21:57">2</literal>     <operator pos:start="21:63" pos:end="21:64">||</operator>

        <name pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:13">avctx</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:23">bit_rate</name></name>    <operator pos:start="23:28" pos:end="23:29">&lt;=</operator> <literal type="number" pos:start="23:31" pos:end="23:31">0</literal></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:18"><block_content pos:start="25:9" pos:end="25:18">

        <return pos:start="25:9" pos:end="25:18">return <expr pos:start="25:16" pos:end="25:17"><operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:45"><expr pos:start="29:5" pos:end="29:44"><call pos:start="29:5" pos:end="29:44"><name pos:start="29:5" pos:end="29:23">ff_fmt_convert_init</name><argument_list pos:start="29:24" pos:end="29:44">(<argument pos:start="29:25" pos:end="29:36"><expr pos:start="29:25" pos:end="29:36"><operator pos:start="29:25" pos:end="29:25">&amp;</operator><name pos:start="29:26" pos:end="29:36"><name pos:start="29:26" pos:end="29:26">s</name><operator pos:start="29:27" pos:end="29:28">-&gt;</operator><name pos:start="29:29" pos:end="29:36">fmt_conv</name></name></expr></argument>, <argument pos:start="29:39" pos:end="29:43"><expr pos:start="29:39" pos:end="29:43"><name pos:start="29:39" pos:end="29:43">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:72"><expr pos:start="31:5" pos:end="31:71"><call pos:start="31:5" pos:end="31:71"><name pos:start="31:5" pos:end="31:25">avpriv_float_dsp_init</name><argument_list pos:start="31:26" pos:end="31:71">(<argument pos:start="31:27" pos:end="31:34"><expr pos:start="31:27" pos:end="31:34"><operator pos:start="31:27" pos:end="31:27">&amp;</operator><name pos:start="31:28" pos:end="31:34"><name pos:start="31:28" pos:end="31:28">s</name><operator pos:start="31:29" pos:end="31:30">-&gt;</operator><name pos:start="31:31" pos:end="31:34">fdsp</name></name></expr></argument>, <argument pos:start="31:37" pos:end="31:70"><expr pos:start="31:37" pos:end="31:70"><name pos:start="31:37" pos:end="31:48"><name pos:start="31:37" pos:end="31:41">avctx</name><operator pos:start="31:42" pos:end="31:43">-&gt;</operator><name pos:start="31:44" pos:end="31:48">flags</name></name> <operator pos:start="31:50" pos:end="31:50">&amp;</operator> <name pos:start="31:52" pos:end="31:70">CODEC_FLAG_BITEXACT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="41:23"><if pos:start="35:5" pos:end="37:23">if <condition pos:start="35:8" pos:end="35:46">(<expr pos:start="35:9" pos:end="35:45"><name pos:start="35:9" pos:end="35:24"><name pos:start="35:9" pos:end="35:13">avctx</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:20">codec</name><operator pos:start="35:21" pos:end="35:22">-&gt;</operator><name pos:start="35:23" pos:end="35:24">id</name></name> <operator pos:start="35:26" pos:end="35:27">==</operator> <name pos:start="35:29" pos:end="35:45">AV_CODEC_ID_WMAV1</name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:23"><block_content pos:start="37:9" pos:end="37:23">

        <expr_stmt pos:start="37:9" pos:end="37:23"><expr pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:18">version</name></name> <operator pos:start="37:20" pos:end="37:20">=</operator> <literal type="number" pos:start="37:22" pos:end="37:22">1</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="39:5" pos:end="41:23">else<block type="pseudo" pos:start="41:9" pos:end="41:23"><block_content pos:start="41:9" pos:end="41:23">

        <expr_stmt pos:start="41:9" pos:end="41:23"><expr pos:start="41:9" pos:end="41:22"><name pos:start="41:9" pos:end="41:18"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:18">version</name></name> <operator pos:start="41:20" pos:end="41:20">=</operator> <literal type="number" pos:start="41:22" pos:end="41:22">2</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <comment type="block" pos:start="45:5" pos:end="45:33">/* compute MDCT block size */</comment>

    <expr_stmt pos:start="47:5" pos:end="49:65"><expr pos:start="47:5" pos:end="49:64"><name pos:start="47:5" pos:end="47:21"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:21">frame_len_bits</name></name> <operator pos:start="47:23" pos:end="47:23">=</operator> <call pos:start="47:25" pos:end="49:64"><name pos:start="47:25" pos:end="47:49">ff_wma_get_frame_len_bits</name><argument_list pos:start="47:50" pos:end="49:64">(<argument pos:start="47:51" pos:end="47:68"><expr pos:start="47:51" pos:end="47:68"><name pos:start="47:51" pos:end="47:68"><name pos:start="47:51" pos:end="47:55">avctx</name><operator pos:start="47:56" pos:end="47:57">-&gt;</operator><name pos:start="47:58" pos:end="47:68">sample_rate</name></name></expr></argument>,

                                                  <argument pos:start="49:51" pos:end="49:60"><expr pos:start="49:51" pos:end="49:60"><name pos:start="49:51" pos:end="49:60"><name pos:start="49:51" pos:end="49:51">s</name><operator pos:start="49:52" pos:end="49:53">-&gt;</operator><name pos:start="49:54" pos:end="49:60">version</name></name></expr></argument>, <argument pos:start="49:63" pos:end="49:63"><expr pos:start="49:63" pos:end="49:63"><literal type="number" pos:start="49:63" pos:end="49:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:47"><expr pos:start="51:5" pos:end="51:46"><name pos:start="51:5" pos:end="51:26"><name pos:start="51:5" pos:end="51:5">s</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:26">next_block_len_bits</name></name> <operator pos:start="51:28" pos:end="51:28">=</operator> <name pos:start="51:30" pos:end="51:46"><name pos:start="51:30" pos:end="51:30">s</name><operator pos:start="51:31" pos:end="51:32">-&gt;</operator><name pos:start="51:33" pos:end="51:46">frame_len_bits</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:47"><expr pos:start="53:5" pos:end="53:46"><name pos:start="53:5" pos:end="53:26"><name pos:start="53:5" pos:end="53:5">s</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:26">prev_block_len_bits</name></name> <operator pos:start="53:28" pos:end="53:28">=</operator> <name pos:start="53:30" pos:end="53:46"><name pos:start="53:30" pos:end="53:30">s</name><operator pos:start="53:31" pos:end="53:32">-&gt;</operator><name pos:start="53:33" pos:end="53:46">frame_len_bits</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:47"><expr pos:start="55:5" pos:end="55:46"><name pos:start="55:5" pos:end="55:21"><name pos:start="55:5" pos:end="55:5">s</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:21">block_len_bits</name></name>      <operator pos:start="55:28" pos:end="55:28">=</operator> <name pos:start="55:30" pos:end="55:46"><name pos:start="55:30" pos:end="55:30">s</name><operator pos:start="55:31" pos:end="55:32">-&gt;</operator><name pos:start="55:33" pos:end="55:46">frame_len_bits</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:42"><expr pos:start="59:5" pos:end="59:41"><name pos:start="59:5" pos:end="59:16"><name pos:start="59:5" pos:end="59:5">s</name><operator pos:start="59:6" pos:end="59:7">-&gt;</operator><name pos:start="59:8" pos:end="59:16">frame_len</name></name> <operator pos:start="59:18" pos:end="59:18">=</operator> <literal type="number" pos:start="59:20" pos:end="59:20">1</literal> <operator pos:start="59:22" pos:end="59:23">&lt;&lt;</operator> <name pos:start="59:25" pos:end="59:41"><name pos:start="59:25" pos:end="59:25">s</name><operator pos:start="59:26" pos:end="59:27">-&gt;</operator><name pos:start="59:28" pos:end="59:41">frame_len_bits</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="81:30"><if pos:start="61:5" pos:end="79:5">if <condition pos:start="61:8" pos:end="61:34">(<expr pos:start="61:9" pos:end="61:33"><name pos:start="61:9" pos:end="61:33"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:33">use_variable_block_len</name></name></expr>)</condition> <block pos:start="61:36" pos:end="79:5">{<block_content pos:start="63:9" pos:end="77:35">

        <decl_stmt pos:start="63:9" pos:end="63:23"><decl pos:start="63:9" pos:end="63:18"><type pos:start="63:9" pos:end="63:11"><name pos:start="63:9" pos:end="63:11">int</name></type> <name pos:start="63:13" pos:end="63:18">nb_max</name></decl>, <decl pos:start="63:21" pos:end="63:22"><type ref="prev" pos:start="63:9" pos:end="63:11"/><name pos:start="63:21" pos:end="63:22">nb</name></decl>;</decl_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:37"><expr pos:start="65:9" pos:end="65:36"><name pos:start="65:9" pos:end="65:10">nb</name> <operator pos:start="65:12" pos:end="65:12">=</operator> <operator pos:start="65:14" pos:end="65:14">(</operator><operator pos:start="65:15" pos:end="65:15">(</operator><name pos:start="65:16" pos:end="65:21">flags2</name> <operator pos:start="65:23" pos:end="65:24">&gt;&gt;</operator> <literal type="number" pos:start="65:26" pos:end="65:26">3</literal><operator pos:start="65:27" pos:end="65:27">)</operator> <operator pos:start="65:29" pos:end="65:29">&amp;</operator> <literal type="number" pos:start="65:31" pos:end="65:31">3</literal><operator pos:start="65:32" pos:end="65:32">)</operator> <operator pos:start="65:34" pos:end="65:34">+</operator> <literal type="number" pos:start="65:36" pos:end="65:36">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="67:9" pos:end="69:20"><if pos:start="67:9" pos:end="69:20">if <condition pos:start="67:12" pos:end="67:57">(<expr pos:start="67:13" pos:end="67:56"><operator pos:start="67:13" pos:end="67:13">(</operator><name pos:start="67:14" pos:end="67:28"><name pos:start="67:14" pos:end="67:18">avctx</name><operator pos:start="67:19" pos:end="67:20">-&gt;</operator><name pos:start="67:21" pos:end="67:28">bit_rate</name></name> <operator pos:start="67:30" pos:end="67:30">/</operator> <name pos:start="67:32" pos:end="67:46"><name pos:start="67:32" pos:end="67:36">avctx</name><operator pos:start="67:37" pos:end="67:38">-&gt;</operator><name pos:start="67:39" pos:end="67:46">channels</name></name><operator pos:start="67:47" pos:end="67:47">)</operator> <operator pos:start="67:49" pos:end="67:50">&gt;=</operator> <literal type="number" pos:start="67:52" pos:end="67:56">32000</literal></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:20"><block_content pos:start="69:13" pos:end="69:20">

            <expr_stmt pos:start="69:13" pos:end="69:20"><expr pos:start="69:13" pos:end="69:19"><name pos:start="69:13" pos:end="69:14">nb</name> <operator pos:start="69:16" pos:end="69:17">+=</operator> <literal type="number" pos:start="69:19" pos:end="69:19">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:52"><expr pos:start="71:9" pos:end="71:51"><name pos:start="71:9" pos:end="71:14">nb_max</name> <operator pos:start="71:16" pos:end="71:16">=</operator> <name pos:start="71:18" pos:end="71:34"><name pos:start="71:18" pos:end="71:18">s</name><operator pos:start="71:19" pos:end="71:20">-&gt;</operator><name pos:start="71:21" pos:end="71:34">frame_len_bits</name></name> <operator pos:start="71:36" pos:end="71:36">-</operator> <name pos:start="71:38" pos:end="71:51">BLOCK_MIN_BITS</name></expr>;</expr_stmt>

        <if_stmt pos:start="73:9" pos:end="75:24"><if pos:start="73:9" pos:end="75:24">if <condition pos:start="73:12" pos:end="73:24">(<expr pos:start="73:13" pos:end="73:23"><name pos:start="73:13" pos:end="73:14">nb</name> <operator pos:start="73:16" pos:end="73:16">&gt;</operator> <name pos:start="73:18" pos:end="73:23">nb_max</name></expr>)</condition><block type="pseudo" pos:start="75:13" pos:end="75:24"><block_content pos:start="75:13" pos:end="75:24">

            <expr_stmt pos:start="75:13" pos:end="75:24"><expr pos:start="75:13" pos:end="75:23"><name pos:start="75:13" pos:end="75:14">nb</name> <operator pos:start="75:16" pos:end="75:16">=</operator> <name pos:start="75:18" pos:end="75:23">nb_max</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:35"><expr pos:start="77:9" pos:end="77:34"><name pos:start="77:9" pos:end="77:25"><name pos:start="77:9" pos:end="77:9">s</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:25">nb_block_sizes</name></name> <operator pos:start="77:27" pos:end="77:27">=</operator> <name pos:start="77:29" pos:end="77:30">nb</name> <operator pos:start="77:32" pos:end="77:32">+</operator> <literal type="number" pos:start="77:34" pos:end="77:34">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="79:7" pos:end="81:30">else<block type="pseudo" pos:start="81:9" pos:end="81:30"><block_content pos:start="81:9" pos:end="81:30">

        <expr_stmt pos:start="81:9" pos:end="81:30"><expr pos:start="81:9" pos:end="81:29"><name pos:start="81:9" pos:end="81:25"><name pos:start="81:9" pos:end="81:9">s</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:25">nb_block_sizes</name></name> <operator pos:start="81:27" pos:end="81:27">=</operator> <literal type="number" pos:start="81:29" pos:end="81:29">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <comment type="block" pos:start="85:5" pos:end="85:40">/* init rate dependent parameters */</comment>

    <expr_stmt pos:start="87:5" pos:end="87:28"><expr pos:start="87:5" pos:end="87:27"><name pos:start="87:5" pos:end="87:23"><name pos:start="87:5" pos:end="87:5">s</name><operator pos:start="87:6" pos:end="87:7">-&gt;</operator><name pos:start="87:8" pos:end="87:23">use_noise_coding</name></name> <operator pos:start="87:25" pos:end="87:25">=</operator> <literal type="number" pos:start="87:27" pos:end="87:27">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:51"><expr pos:start="89:5" pos:end="89:50"><name pos:start="89:5" pos:end="89:13">high_freq</name>           <operator pos:start="89:25" pos:end="89:25">=</operator> <name pos:start="89:27" pos:end="89:44"><name pos:start="89:27" pos:end="89:31">avctx</name><operator pos:start="89:32" pos:end="89:33">-&gt;</operator><name pos:start="89:34" pos:end="89:44">sample_rate</name></name> <operator pos:start="89:46" pos:end="89:46">*</operator> <literal type="number" pos:start="89:48" pos:end="89:50">0.5</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="93:5" pos:end="93:53">/* if version 2, then the rates are normalized */</comment>

    <expr_stmt pos:start="95:5" pos:end="95:38"><expr pos:start="95:5" pos:end="95:37"><name pos:start="95:5" pos:end="95:16">sample_rate1</name> <operator pos:start="95:18" pos:end="95:18">=</operator> <name pos:start="95:20" pos:end="95:37"><name pos:start="95:20" pos:end="95:24">avctx</name><operator pos:start="95:25" pos:end="95:26">-&gt;</operator><name pos:start="95:27" pos:end="95:37">sample_rate</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="97:5" pos:end="119:5"><if pos:start="97:5" pos:end="119:5">if <condition pos:start="97:8" pos:end="97:24">(<expr pos:start="97:9" pos:end="97:23"><name pos:start="97:9" pos:end="97:18"><name pos:start="97:9" pos:end="97:9">s</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:18">version</name></name> <operator pos:start="97:20" pos:end="97:21">==</operator> <literal type="number" pos:start="97:23" pos:end="97:23">2</literal></expr>)</condition> <block pos:start="97:26" pos:end="119:5">{<block_content pos:start="99:9" pos:end="117:32">

        <if_stmt pos:start="99:9" pos:end="117:32"><if pos:start="99:9" pos:end="101:33">if <condition pos:start="99:12" pos:end="99:34">(<expr pos:start="99:13" pos:end="99:33"><name pos:start="99:13" pos:end="99:24">sample_rate1</name> <operator pos:start="99:26" pos:end="99:27">&gt;=</operator> <literal type="number" pos:start="99:29" pos:end="99:33">44100</literal></expr>)</condition><block type="pseudo" pos:start="101:13" pos:end="101:33"><block_content pos:start="101:13" pos:end="101:33">

            <expr_stmt pos:start="101:13" pos:end="101:33"><expr pos:start="101:13" pos:end="101:32"><name pos:start="101:13" pos:end="101:24">sample_rate1</name> <operator pos:start="101:26" pos:end="101:26">=</operator> <literal type="number" pos:start="101:28" pos:end="101:32">44100</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="103:9" pos:end="105:33">else if <condition pos:start="103:17" pos:end="103:39">(<expr pos:start="103:18" pos:end="103:38"><name pos:start="103:18" pos:end="103:29">sample_rate1</name> <operator pos:start="103:31" pos:end="103:32">&gt;=</operator> <literal type="number" pos:start="103:34" pos:end="103:38">22050</literal></expr>)</condition><block type="pseudo" pos:start="105:13" pos:end="105:33"><block_content pos:start="105:13" pos:end="105:33">

            <expr_stmt pos:start="105:13" pos:end="105:33"><expr pos:start="105:13" pos:end="105:32"><name pos:start="105:13" pos:end="105:24">sample_rate1</name> <operator pos:start="105:26" pos:end="105:26">=</operator> <literal type="number" pos:start="105:28" pos:end="105:32">22050</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="107:9" pos:end="109:33">else if <condition pos:start="107:17" pos:end="107:39">(<expr pos:start="107:18" pos:end="107:38"><name pos:start="107:18" pos:end="107:29">sample_rate1</name> <operator pos:start="107:31" pos:end="107:32">&gt;=</operator> <literal type="number" pos:start="107:34" pos:end="107:38">16000</literal></expr>)</condition><block type="pseudo" pos:start="109:13" pos:end="109:33"><block_content pos:start="109:13" pos:end="109:33">

            <expr_stmt pos:start="109:13" pos:end="109:33"><expr pos:start="109:13" pos:end="109:32"><name pos:start="109:13" pos:end="109:24">sample_rate1</name> <operator pos:start="109:26" pos:end="109:26">=</operator> <literal type="number" pos:start="109:28" pos:end="109:32">16000</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="111:9" pos:end="113:33">else if <condition pos:start="111:17" pos:end="111:39">(<expr pos:start="111:18" pos:end="111:38"><name pos:start="111:18" pos:end="111:29">sample_rate1</name> <operator pos:start="111:31" pos:end="111:32">&gt;=</operator> <literal type="number" pos:start="111:34" pos:end="111:38">11025</literal></expr>)</condition><block type="pseudo" pos:start="113:13" pos:end="113:33"><block_content pos:start="113:13" pos:end="113:33">

            <expr_stmt pos:start="113:13" pos:end="113:33"><expr pos:start="113:13" pos:end="113:32"><name pos:start="113:13" pos:end="113:24">sample_rate1</name> <operator pos:start="113:26" pos:end="113:26">=</operator> <literal type="number" pos:start="113:28" pos:end="113:32">11025</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="115:9" pos:end="117:32">else if <condition pos:start="115:17" pos:end="115:38">(<expr pos:start="115:18" pos:end="115:37"><name pos:start="115:18" pos:end="115:29">sample_rate1</name> <operator pos:start="115:31" pos:end="115:32">&gt;=</operator> <literal type="number" pos:start="115:34" pos:end="115:37">8000</literal></expr>)</condition><block type="pseudo" pos:start="117:13" pos:end="117:32"><block_content pos:start="117:13" pos:end="117:32">

            <expr_stmt pos:start="117:13" pos:end="117:32"><expr pos:start="117:13" pos:end="117:31"><name pos:start="117:13" pos:end="117:24">sample_rate1</name> <operator pos:start="117:26" pos:end="117:26">=</operator> <literal type="number" pos:start="117:28" pos:end="117:31">8000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="123:5" pos:end="125:73"><expr pos:start="123:5" pos:end="125:72"><name pos:start="123:5" pos:end="123:7">bps</name>                 <operator pos:start="123:25" pos:end="123:25">=</operator> <operator pos:start="123:27" pos:end="123:27">(</operator><name pos:start="123:28" pos:end="123:32">float</name><operator pos:start="123:33" pos:end="123:33">)</operator> <name pos:start="123:35" pos:end="123:49"><name pos:start="123:35" pos:end="123:39">avctx</name><operator pos:start="123:40" pos:end="123:41">-&gt;</operator><name pos:start="123:42" pos:end="123:49">bit_rate</name></name> <operator pos:start="123:51" pos:end="123:51">/</operator>

                          <operator pos:start="125:27" pos:end="125:27">(</operator><name pos:start="125:28" pos:end="125:32">float</name><operator pos:start="125:33" pos:end="125:33">)</operator> <operator pos:start="125:35" pos:end="125:35">(</operator><name pos:start="125:36" pos:end="125:50"><name pos:start="125:36" pos:end="125:40">avctx</name><operator pos:start="125:41" pos:end="125:42">-&gt;</operator><name pos:start="125:43" pos:end="125:50">channels</name></name> <operator pos:start="125:52" pos:end="125:52">*</operator> <name pos:start="125:54" pos:end="125:71"><name pos:start="125:54" pos:end="125:58">avctx</name><operator pos:start="125:59" pos:end="125:60">-&gt;</operator><name pos:start="125:61" pos:end="125:71">sample_rate</name></name><operator pos:start="125:72" pos:end="125:72">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:78"><expr pos:start="127:5" pos:end="127:77"><name pos:start="127:5" pos:end="127:23"><name pos:start="127:5" pos:end="127:5">s</name><operator pos:start="127:6" pos:end="127:7">-&gt;</operator><name pos:start="127:8" pos:end="127:23">byte_offset_bits</name></name> <operator pos:start="127:25" pos:end="127:25">=</operator> <call pos:start="127:27" pos:end="127:73"><name pos:start="127:27" pos:end="127:33">av_log2</name><argument_list pos:start="127:34" pos:end="127:73">(<argument pos:start="127:35" pos:end="127:72"><expr pos:start="127:35" pos:end="127:72"><operator pos:start="127:35" pos:end="127:35">(</operator><name pos:start="127:36" pos:end="127:38">int</name><operator pos:start="127:39" pos:end="127:39">)</operator> <operator pos:start="127:41" pos:end="127:41">(</operator><name pos:start="127:42" pos:end="127:44">bps</name> <operator pos:start="127:46" pos:end="127:46">*</operator> <name pos:start="127:48" pos:end="127:59"><name pos:start="127:48" pos:end="127:48">s</name><operator pos:start="127:49" pos:end="127:50">-&gt;</operator><name pos:start="127:51" pos:end="127:59">frame_len</name></name> <operator pos:start="127:61" pos:end="127:61">/</operator> <literal type="number" pos:start="127:63" pos:end="127:67">8.0</literal> <operator pos:start="127:67" pos:end="127:67">+</operator> <literal type="number" pos:start="127:69" pos:end="127:71">0.5</literal><operator pos:start="127:72" pos:end="127:72">)</operator></expr></argument>)</argument_list></call> <operator pos:start="127:75" pos:end="127:75">+</operator> <literal type="number" pos:start="127:77" pos:end="127:77">2</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="131:5" pos:end="133:22">/* compute high frequency value and choose if noise coding should

     * be activated */</comment>

    <expr_stmt pos:start="135:5" pos:end="135:15"><expr pos:start="135:5" pos:end="135:14"><name pos:start="135:5" pos:end="135:8">bps1</name> <operator pos:start="135:10" pos:end="135:10">=</operator> <name pos:start="135:12" pos:end="135:14">bps</name></expr>;</expr_stmt>

    <if_stmt pos:start="137:5" pos:end="139:25"><if pos:start="137:5" pos:end="139:25">if <condition pos:start="137:8" pos:end="137:29">(<expr pos:start="137:9" pos:end="137:28"><name pos:start="137:9" pos:end="137:23"><name pos:start="137:9" pos:end="137:13">avctx</name><operator pos:start="137:14" pos:end="137:15">-&gt;</operator><name pos:start="137:16" pos:end="137:23">channels</name></name> <operator pos:start="137:25" pos:end="137:26">==</operator> <literal type="number" pos:start="137:28" pos:end="137:28">2</literal></expr>)</condition><block type="pseudo" pos:start="139:9" pos:end="139:25"><block_content pos:start="139:9" pos:end="139:25">

        <expr_stmt pos:start="139:9" pos:end="139:25"><expr pos:start="139:9" pos:end="139:24"><name pos:start="139:9" pos:end="139:12">bps1</name> <operator pos:start="139:14" pos:end="139:14">=</operator> <name pos:start="139:16" pos:end="139:18">bps</name> <operator pos:start="139:20" pos:end="139:20">*</operator> <literal type="number" pos:start="139:22" pos:end="139:24">1.6</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="141:5" pos:end="207:5"><if pos:start="141:5" pos:end="151:5">if <condition pos:start="141:8" pos:end="141:30">(<expr pos:start="141:9" pos:end="141:29"><name pos:start="141:9" pos:end="141:20">sample_rate1</name> <operator pos:start="141:22" pos:end="141:23">==</operator> <literal type="number" pos:start="141:25" pos:end="141:29">44100</literal></expr>)</condition> <block pos:start="141:32" pos:end="151:5">{<block_content pos:start="143:9" pos:end="149:40">

        <if_stmt pos:start="143:9" pos:end="149:40"><if pos:start="143:9" pos:end="145:36">if <condition pos:start="143:12" pos:end="143:25">(<expr pos:start="143:13" pos:end="143:24"><name pos:start="143:13" pos:end="143:16">bps1</name> <operator pos:start="143:18" pos:end="143:19">&gt;=</operator> <literal type="number" pos:start="143:21" pos:end="143:24">0.61</literal></expr>)</condition><block type="pseudo" pos:start="145:13" pos:end="145:36"><block_content pos:start="145:13" pos:end="145:36">

            <expr_stmt pos:start="145:13" pos:end="145:36"><expr pos:start="145:13" pos:end="145:35"><name pos:start="145:13" pos:end="145:31"><name pos:start="145:13" pos:end="145:13">s</name><operator pos:start="145:14" pos:end="145:15">-&gt;</operator><name pos:start="145:16" pos:end="145:31">use_noise_coding</name></name> <operator pos:start="145:33" pos:end="145:33">=</operator> <literal type="number" pos:start="145:35" pos:end="145:35">0</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="147:9" pos:end="149:40">else<block type="pseudo" pos:start="149:13" pos:end="149:40"><block_content pos:start="149:13" pos:end="149:40">

            <expr_stmt pos:start="149:13" pos:end="149:40"><expr pos:start="149:13" pos:end="149:39"><name pos:start="149:13" pos:end="149:21">high_freq</name> <operator pos:start="149:23" pos:end="149:23">=</operator> <name pos:start="149:25" pos:end="149:33">high_freq</name> <operator pos:start="149:35" pos:end="149:35">*</operator> <literal type="number" pos:start="149:37" pos:end="149:39">0.4</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="151:7" pos:end="165:5">else if <condition pos:start="151:15" pos:end="151:37">(<expr pos:start="151:16" pos:end="151:36"><name pos:start="151:16" pos:end="151:27">sample_rate1</name> <operator pos:start="151:29" pos:end="151:30">==</operator> <literal type="number" pos:start="151:32" pos:end="151:36">22050</literal></expr>)</condition> <block pos:start="151:39" pos:end="165:5">{<block_content pos:start="153:9" pos:end="163:40">

        <if_stmt pos:start="153:9" pos:end="163:40"><if pos:start="153:9" pos:end="155:36">if <condition pos:start="153:12" pos:end="153:25">(<expr pos:start="153:13" pos:end="153:24"><name pos:start="153:13" pos:end="153:16">bps1</name> <operator pos:start="153:18" pos:end="153:19">&gt;=</operator> <literal type="number" pos:start="153:21" pos:end="153:24">1.16</literal></expr>)</condition><block type="pseudo" pos:start="155:13" pos:end="155:36"><block_content pos:start="155:13" pos:end="155:36">

            <expr_stmt pos:start="155:13" pos:end="155:36"><expr pos:start="155:13" pos:end="155:35"><name pos:start="155:13" pos:end="155:31"><name pos:start="155:13" pos:end="155:13">s</name><operator pos:start="155:14" pos:end="155:15">-&gt;</operator><name pos:start="155:16" pos:end="155:31">use_noise_coding</name></name> <operator pos:start="155:33" pos:end="155:33">=</operator> <literal type="number" pos:start="155:35" pos:end="155:35">0</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="157:9" pos:end="159:40">else if <condition pos:start="157:17" pos:end="157:30">(<expr pos:start="157:18" pos:end="157:29"><name pos:start="157:18" pos:end="157:21">bps1</name> <operator pos:start="157:23" pos:end="157:24">&gt;=</operator> <literal type="number" pos:start="157:26" pos:end="157:29">0.72</literal></expr>)</condition><block type="pseudo" pos:start="159:13" pos:end="159:40"><block_content pos:start="159:13" pos:end="159:40">

            <expr_stmt pos:start="159:13" pos:end="159:40"><expr pos:start="159:13" pos:end="159:39"><name pos:start="159:13" pos:end="159:21">high_freq</name> <operator pos:start="159:23" pos:end="159:23">=</operator> <name pos:start="159:25" pos:end="159:33">high_freq</name> <operator pos:start="159:35" pos:end="159:35">*</operator> <literal type="number" pos:start="159:37" pos:end="159:39">0.7</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="161:9" pos:end="163:40">else<block type="pseudo" pos:start="163:13" pos:end="163:40"><block_content pos:start="163:13" pos:end="163:40">

            <expr_stmt pos:start="163:13" pos:end="163:40"><expr pos:start="163:13" pos:end="163:39"><name pos:start="163:13" pos:end="163:21">high_freq</name> <operator pos:start="163:23" pos:end="163:23">=</operator> <name pos:start="163:25" pos:end="163:33">high_freq</name> <operator pos:start="163:35" pos:end="163:35">*</operator> <literal type="number" pos:start="163:37" pos:end="163:39">0.6</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="165:7" pos:end="175:5">else if <condition pos:start="165:15" pos:end="165:37">(<expr pos:start="165:16" pos:end="165:36"><name pos:start="165:16" pos:end="165:27">sample_rate1</name> <operator pos:start="165:29" pos:end="165:30">==</operator> <literal type="number" pos:start="165:32" pos:end="165:36">16000</literal></expr>)</condition> <block pos:start="165:39" pos:end="175:5">{<block_content pos:start="167:9" pos:end="173:40">

        <if_stmt pos:start="167:9" pos:end="173:40"><if pos:start="167:9" pos:end="169:40">if <condition pos:start="167:12" pos:end="167:22">(<expr pos:start="167:13" pos:end="167:21"><name pos:start="167:13" pos:end="167:15">bps</name> <operator pos:start="167:17" pos:end="167:17">&gt;</operator> <literal type="number" pos:start="167:19" pos:end="167:21">0.5</literal></expr>)</condition><block type="pseudo" pos:start="169:13" pos:end="169:40"><block_content pos:start="169:13" pos:end="169:40">

            <expr_stmt pos:start="169:13" pos:end="169:40"><expr pos:start="169:13" pos:end="169:39"><name pos:start="169:13" pos:end="169:21">high_freq</name> <operator pos:start="169:23" pos:end="169:23">=</operator> <name pos:start="169:25" pos:end="169:33">high_freq</name> <operator pos:start="169:35" pos:end="169:35">*</operator> <literal type="number" pos:start="169:37" pos:end="169:39">0.5</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="171:9" pos:end="173:40">else<block type="pseudo" pos:start="173:13" pos:end="173:40"><block_content pos:start="173:13" pos:end="173:40">

            <expr_stmt pos:start="173:13" pos:end="173:40"><expr pos:start="173:13" pos:end="173:39"><name pos:start="173:13" pos:end="173:21">high_freq</name> <operator pos:start="173:23" pos:end="173:23">=</operator> <name pos:start="173:25" pos:end="173:33">high_freq</name> <operator pos:start="173:35" pos:end="173:35">*</operator> <literal type="number" pos:start="173:37" pos:end="173:39">0.3</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="175:7" pos:end="177:36">else if <condition pos:start="175:15" pos:end="175:37">(<expr pos:start="175:16" pos:end="175:36"><name pos:start="175:16" pos:end="175:27">sample_rate1</name> <operator pos:start="175:29" pos:end="175:30">==</operator> <literal type="number" pos:start="175:32" pos:end="175:36">11025</literal></expr>)</condition><block type="pseudo" pos:start="177:9" pos:end="177:36"><block_content pos:start="177:9" pos:end="177:36">

        <expr_stmt pos:start="177:9" pos:end="177:36"><expr pos:start="177:9" pos:end="177:35"><name pos:start="177:9" pos:end="177:17">high_freq</name> <operator pos:start="177:19" pos:end="177:19">=</operator> <name pos:start="177:21" pos:end="177:29">high_freq</name> <operator pos:start="177:31" pos:end="177:31">*</operator> <literal type="number" pos:start="177:33" pos:end="177:35">0.7</literal></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="179:5" pos:end="193:5">else if <condition pos:start="179:13" pos:end="179:34">(<expr pos:start="179:14" pos:end="179:33"><name pos:start="179:14" pos:end="179:25">sample_rate1</name> <operator pos:start="179:27" pos:end="179:28">==</operator> <literal type="number" pos:start="179:30" pos:end="179:33">8000</literal></expr>)</condition> <block pos:start="179:36" pos:end="193:5">{<block_content pos:start="181:9" pos:end="191:41">

        <if_stmt pos:start="181:9" pos:end="191:41"><if pos:start="181:9" pos:end="183:40">if <condition pos:start="181:12" pos:end="181:25">(<expr pos:start="181:13" pos:end="181:24"><name pos:start="181:13" pos:end="181:15">bps</name> <operator pos:start="181:17" pos:end="181:18">&lt;=</operator> <literal type="number" pos:start="181:20" pos:end="181:24">0.625</literal></expr>)</condition><block type="pseudo" pos:start="183:13" pos:end="183:40"><block_content pos:start="183:13" pos:end="183:40">

            <expr_stmt pos:start="183:13" pos:end="183:40"><expr pos:start="183:13" pos:end="183:39"><name pos:start="183:13" pos:end="183:21">high_freq</name> <operator pos:start="183:23" pos:end="183:23">=</operator> <name pos:start="183:25" pos:end="183:33">high_freq</name> <operator pos:start="183:35" pos:end="183:35">*</operator> <literal type="number" pos:start="183:37" pos:end="183:39">0.5</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="185:9" pos:end="187:36">else if <condition pos:start="185:17" pos:end="185:28">(<expr pos:start="185:18" pos:end="185:27"><name pos:start="185:18" pos:end="185:20">bps</name> <operator pos:start="185:22" pos:end="185:22">&gt;</operator> <literal type="number" pos:start="185:24" pos:end="185:27">0.75</literal></expr>)</condition><block type="pseudo" pos:start="187:13" pos:end="187:36"><block_content pos:start="187:13" pos:end="187:36">

            <expr_stmt pos:start="187:13" pos:end="187:36"><expr pos:start="187:13" pos:end="187:35"><name pos:start="187:13" pos:end="187:31"><name pos:start="187:13" pos:end="187:13">s</name><operator pos:start="187:14" pos:end="187:15">-&gt;</operator><name pos:start="187:16" pos:end="187:31">use_noise_coding</name></name> <operator pos:start="187:33" pos:end="187:33">=</operator> <literal type="number" pos:start="187:35" pos:end="187:35">0</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="189:9" pos:end="191:41">else<block type="pseudo" pos:start="191:13" pos:end="191:41"><block_content pos:start="191:13" pos:end="191:41">

            <expr_stmt pos:start="191:13" pos:end="191:41"><expr pos:start="191:13" pos:end="191:40"><name pos:start="191:13" pos:end="191:21">high_freq</name> <operator pos:start="191:23" pos:end="191:23">=</operator> <name pos:start="191:25" pos:end="191:33">high_freq</name> <operator pos:start="191:35" pos:end="191:35">*</operator> <literal type="number" pos:start="191:37" pos:end="191:40">0.65</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="193:7" pos:end="207:5">else <block pos:start="193:12" pos:end="207:5">{<block_content pos:start="195:9" pos:end="205:40">

        <if_stmt pos:start="195:9" pos:end="205:40"><if pos:start="195:9" pos:end="197:41">if <condition pos:start="195:12" pos:end="195:23">(<expr pos:start="195:13" pos:end="195:22"><name pos:start="195:13" pos:end="195:15">bps</name> <operator pos:start="195:17" pos:end="195:18">&gt;=</operator> <literal type="number" pos:start="195:20" pos:end="195:22">0.8</literal></expr>)</condition><block type="pseudo" pos:start="197:13" pos:end="197:41"><block_content pos:start="197:13" pos:end="197:41">

            <expr_stmt pos:start="197:13" pos:end="197:41"><expr pos:start="197:13" pos:end="197:40"><name pos:start="197:13" pos:end="197:21">high_freq</name> <operator pos:start="197:23" pos:end="197:23">=</operator> <name pos:start="197:25" pos:end="197:33">high_freq</name> <operator pos:start="197:35" pos:end="197:35">*</operator> <literal type="number" pos:start="197:37" pos:end="197:40">0.75</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="199:9" pos:end="201:40">else if <condition pos:start="199:17" pos:end="199:28">(<expr pos:start="199:18" pos:end="199:27"><name pos:start="199:18" pos:end="199:20">bps</name> <operator pos:start="199:22" pos:end="199:23">&gt;=</operator> <literal type="number" pos:start="199:25" pos:end="199:27">0.6</literal></expr>)</condition><block type="pseudo" pos:start="201:13" pos:end="201:40"><block_content pos:start="201:13" pos:end="201:40">

            <expr_stmt pos:start="201:13" pos:end="201:40"><expr pos:start="201:13" pos:end="201:39"><name pos:start="201:13" pos:end="201:21">high_freq</name> <operator pos:start="201:23" pos:end="201:23">=</operator> <name pos:start="201:25" pos:end="201:33">high_freq</name> <operator pos:start="201:35" pos:end="201:35">*</operator> <literal type="number" pos:start="201:37" pos:end="201:39">0.6</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="203:9" pos:end="205:40">else<block type="pseudo" pos:start="205:13" pos:end="205:40"><block_content pos:start="205:13" pos:end="205:40">

            <expr_stmt pos:start="205:13" pos:end="205:40"><expr pos:start="205:13" pos:end="205:39"><name pos:start="205:13" pos:end="205:21">high_freq</name> <operator pos:start="205:23" pos:end="205:23">=</operator> <name pos:start="205:25" pos:end="205:33">high_freq</name> <operator pos:start="205:35" pos:end="205:35">*</operator> <literal type="number" pos:start="205:37" pos:end="205:39">0.5</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="209:5" pos:end="209:47"><expr pos:start="209:5" pos:end="209:46"><call pos:start="209:5" pos:end="209:46"><name pos:start="209:5" pos:end="209:11">av_dlog</name><argument_list pos:start="209:12" pos:end="209:46">(<argument pos:start="209:13" pos:end="209:20"><expr pos:start="209:13" pos:end="209:20"><name pos:start="209:13" pos:end="209:20"><name pos:start="209:13" pos:end="209:13">s</name><operator pos:start="209:14" pos:end="209:15">-&gt;</operator><name pos:start="209:16" pos:end="209:20">avctx</name></name></expr></argument>, <argument pos:start="209:23" pos:end="209:37"><expr pos:start="209:23" pos:end="209:37"><literal type="string" pos:start="209:23" pos:end="209:37">"flags2=0x%x\n"</literal></expr></argument>, <argument pos:start="209:40" pos:end="209:45"><expr pos:start="209:40" pos:end="209:45"><name pos:start="209:40" pos:end="209:45">flags2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="211:5" pos:end="215:32"><expr pos:start="211:5" pos:end="215:31"><call pos:start="211:5" pos:end="215:31"><name pos:start="211:5" pos:end="211:11">av_dlog</name><argument_list pos:start="211:12" pos:end="215:31">(<argument pos:start="211:13" pos:end="211:20"><expr pos:start="211:13" pos:end="211:20"><name pos:start="211:13" pos:end="211:20"><name pos:start="211:13" pos:end="211:13">s</name><operator pos:start="211:14" pos:end="211:15">-&gt;</operator><name pos:start="211:16" pos:end="211:20">avctx</name></name></expr></argument>, <argument pos:start="211:23" pos:end="211:89"><expr pos:start="211:23" pos:end="211:89"><literal type="string" pos:start="211:23" pos:end="211:89">"version=%d channels=%d sample_rate=%d bitrate=%d block_align=%d\n"</literal></expr></argument>,

            <argument pos:start="213:13" pos:end="213:22"><expr pos:start="213:13" pos:end="213:22"><name pos:start="213:13" pos:end="213:22"><name pos:start="213:13" pos:end="213:13">s</name><operator pos:start="213:14" pos:end="213:15">-&gt;</operator><name pos:start="213:16" pos:end="213:22">version</name></name></expr></argument>, <argument pos:start="213:25" pos:end="213:39"><expr pos:start="213:25" pos:end="213:39"><name pos:start="213:25" pos:end="213:39"><name pos:start="213:25" pos:end="213:29">avctx</name><operator pos:start="213:30" pos:end="213:31">-&gt;</operator><name pos:start="213:32" pos:end="213:39">channels</name></name></expr></argument>, <argument pos:start="213:42" pos:end="213:59"><expr pos:start="213:42" pos:end="213:59"><name pos:start="213:42" pos:end="213:59"><name pos:start="213:42" pos:end="213:46">avctx</name><operator pos:start="213:47" pos:end="213:48">-&gt;</operator><name pos:start="213:49" pos:end="213:59">sample_rate</name></name></expr></argument>, <argument pos:start="213:62" pos:end="213:76"><expr pos:start="213:62" pos:end="213:76"><name pos:start="213:62" pos:end="213:76"><name pos:start="213:62" pos:end="213:66">avctx</name><operator pos:start="213:67" pos:end="213:68">-&gt;</operator><name pos:start="213:69" pos:end="213:76">bit_rate</name></name></expr></argument>,

            <argument pos:start="215:13" pos:end="215:30"><expr pos:start="215:13" pos:end="215:30"><name pos:start="215:13" pos:end="215:30"><name pos:start="215:13" pos:end="215:17">avctx</name><operator pos:start="215:18" pos:end="215:19">-&gt;</operator><name pos:start="215:20" pos:end="215:30">block_align</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="217:5" pos:end="219:55"><expr pos:start="217:5" pos:end="219:54"><call pos:start="217:5" pos:end="219:54"><name pos:start="217:5" pos:end="217:11">av_dlog</name><argument_list pos:start="217:12" pos:end="219:54">(<argument pos:start="217:13" pos:end="217:20"><expr pos:start="217:13" pos:end="217:20"><name pos:start="217:13" pos:end="217:20"><name pos:start="217:13" pos:end="217:13">s</name><operator pos:start="217:14" pos:end="217:15">-&gt;</operator><name pos:start="217:16" pos:end="217:20">avctx</name></name></expr></argument>, <argument pos:start="217:23" pos:end="217:66"><expr pos:start="217:23" pos:end="217:66"><literal type="string" pos:start="217:23" pos:end="217:66">"bps=%f bps1=%f high_freq=%f bitoffset=%d\n"</literal></expr></argument>,

            <argument pos:start="219:13" pos:end="219:15"><expr pos:start="219:13" pos:end="219:15"><name pos:start="219:13" pos:end="219:15">bps</name></expr></argument>, <argument pos:start="219:18" pos:end="219:21"><expr pos:start="219:18" pos:end="219:21"><name pos:start="219:18" pos:end="219:21">bps1</name></expr></argument>, <argument pos:start="219:24" pos:end="219:32"><expr pos:start="219:24" pos:end="219:32"><name pos:start="219:24" pos:end="219:32">high_freq</name></expr></argument>, <argument pos:start="219:35" pos:end="219:53"><expr pos:start="219:35" pos:end="219:53"><name pos:start="219:35" pos:end="219:53"><name pos:start="219:35" pos:end="219:35">s</name><operator pos:start="219:36" pos:end="219:37">-&gt;</operator><name pos:start="219:38" pos:end="219:53">byte_offset_bits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="221:5" pos:end="223:68"><expr pos:start="221:5" pos:end="223:67"><call pos:start="221:5" pos:end="223:67"><name pos:start="221:5" pos:end="221:11">av_dlog</name><argument_list pos:start="221:12" pos:end="223:67">(<argument pos:start="221:13" pos:end="221:20"><expr pos:start="221:13" pos:end="221:20"><name pos:start="221:13" pos:end="221:20"><name pos:start="221:13" pos:end="221:13">s</name><operator pos:start="221:14" pos:end="221:15">-&gt;</operator><name pos:start="221:16" pos:end="221:20">avctx</name></name></expr></argument>, <argument pos:start="221:23" pos:end="221:78"><expr pos:start="221:23" pos:end="221:78"><literal type="string" pos:start="221:23" pos:end="221:78">"use_noise_coding=%d use_exp_vlc=%d nb_block_sizes=%d\n"</literal></expr></argument>,

            <argument pos:start="223:13" pos:end="223:31"><expr pos:start="223:13" pos:end="223:31"><name pos:start="223:13" pos:end="223:31"><name pos:start="223:13" pos:end="223:13">s</name><operator pos:start="223:14" pos:end="223:15">-&gt;</operator><name pos:start="223:16" pos:end="223:31">use_noise_coding</name></name></expr></argument>, <argument pos:start="223:34" pos:end="223:47"><expr pos:start="223:34" pos:end="223:47"><name pos:start="223:34" pos:end="223:47"><name pos:start="223:34" pos:end="223:34">s</name><operator pos:start="223:35" pos:end="223:36">-&gt;</operator><name pos:start="223:37" pos:end="223:47">use_exp_vlc</name></name></expr></argument>, <argument pos:start="223:50" pos:end="223:66"><expr pos:start="223:50" pos:end="223:66"><name pos:start="223:50" pos:end="223:66"><name pos:start="223:50" pos:end="223:50">s</name><operator pos:start="223:51" pos:end="223:52">-&gt;</operator><name pos:start="223:53" pos:end="223:66">nb_block_sizes</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="227:5" pos:end="227:70">/* compute the scale factor band sizes for each MDCT block size */</comment>

    <block pos:start="229:5" pos:end="426:0">{<block_content pos:start="231:9" pos:end="419:9">

        <decl_stmt pos:start="231:9" pos:end="231:51"><decl pos:start="231:9" pos:end="231:13"><type pos:start="231:9" pos:end="231:11"><name pos:start="231:9" pos:end="231:11">int</name></type> <name pos:start="231:13" pos:end="231:13">a</name></decl>, <decl pos:start="231:16" pos:end="231:16"><type ref="prev" pos:start="231:9" pos:end="231:11"/><name pos:start="231:16" pos:end="231:16">b</name></decl>, <decl pos:start="231:19" pos:end="231:21"><type ref="prev" pos:start="231:9" pos:end="231:11"/><name pos:start="231:19" pos:end="231:21">pos</name></decl>, <decl pos:start="231:24" pos:end="231:27"><type ref="prev" pos:start="231:9" pos:end="231:11"/><name pos:start="231:24" pos:end="231:27">lpos</name></decl>, <decl pos:start="231:30" pos:end="231:30"><type ref="prev" pos:start="231:9" pos:end="231:11"/><name pos:start="231:30" pos:end="231:30">k</name></decl>, <decl pos:start="231:33" pos:end="231:41"><type ref="prev" pos:start="231:9" pos:end="231:11"/><name pos:start="231:33" pos:end="231:41">block_len</name></decl>, <decl pos:start="231:44" pos:end="231:44"><type ref="prev" pos:start="231:9" pos:end="231:11"/><name pos:start="231:44" pos:end="231:44">i</name></decl>, <decl pos:start="231:47" pos:end="231:47"><type ref="prev" pos:start="231:9" pos:end="231:11"/><name pos:start="231:47" pos:end="231:47">j</name></decl>, <decl pos:start="231:50" pos:end="231:50"><type ref="prev" pos:start="231:9" pos:end="231:11"/><name pos:start="231:50" pos:end="231:50">n</name></decl>;</decl_stmt>

        <decl_stmt pos:start="233:9" pos:end="233:29"><decl pos:start="233:9" pos:end="233:28"><type pos:start="233:9" pos:end="233:23"><specifier pos:start="233:9" pos:end="233:13">const</specifier> <name pos:start="233:15" pos:end="233:21">uint8_t</name> <modifier pos:start="233:23" pos:end="233:23">*</modifier></type><name pos:start="233:24" pos:end="233:28">table</name></decl>;</decl_stmt>



        <if_stmt pos:start="237:9" pos:end="243:31"><if pos:start="237:9" pos:end="239:31">if <condition pos:start="237:12" pos:end="237:28">(<expr pos:start="237:13" pos:end="237:27"><name pos:start="237:13" pos:end="237:22"><name pos:start="237:13" pos:end="237:13">s</name><operator pos:start="237:14" pos:end="237:15">-&gt;</operator><name pos:start="237:16" pos:end="237:22">version</name></name> <operator pos:start="237:24" pos:end="237:25">==</operator> <literal type="number" pos:start="237:27" pos:end="237:27">1</literal></expr>)</condition><block type="pseudo" pos:start="239:13" pos:end="239:31"><block_content pos:start="239:13" pos:end="239:31">

            <expr_stmt pos:start="239:13" pos:end="239:31"><expr pos:start="239:13" pos:end="239:30"><name pos:start="239:13" pos:end="239:26"><name pos:start="239:13" pos:end="239:13">s</name><operator pos:start="239:14" pos:end="239:15">-&gt;</operator><name pos:start="239:16" pos:end="239:26">coefs_start</name></name> <operator pos:start="239:28" pos:end="239:28">=</operator> <literal type="number" pos:start="239:30" pos:end="239:30">3</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="241:9" pos:end="243:31">else<block type="pseudo" pos:start="243:13" pos:end="243:31"><block_content pos:start="243:13" pos:end="243:31">

            <expr_stmt pos:start="243:13" pos:end="243:31"><expr pos:start="243:13" pos:end="243:30"><name pos:start="243:13" pos:end="243:26"><name pos:start="243:13" pos:end="243:13">s</name><operator pos:start="243:14" pos:end="243:15">-&gt;</operator><name pos:start="243:16" pos:end="243:26">coefs_start</name></name> <operator pos:start="243:28" pos:end="243:28">=</operator> <literal type="number" pos:start="243:30" pos:end="243:30">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <for pos:start="245:9" pos:end="419:9">for <control pos:start="245:13" pos:end="245:47">(<init pos:start="245:14" pos:end="245:19"><expr pos:start="245:14" pos:end="245:18"><name pos:start="245:14" pos:end="245:14">k</name> <operator pos:start="245:16" pos:end="245:16">=</operator> <literal type="number" pos:start="245:18" pos:end="245:18">0</literal></expr>;</init> <condition pos:start="245:21" pos:end="245:42"><expr pos:start="245:21" pos:end="245:41"><name pos:start="245:21" pos:end="245:21">k</name> <operator pos:start="245:23" pos:end="245:23">&lt;</operator> <name pos:start="245:25" pos:end="245:41"><name pos:start="245:25" pos:end="245:25">s</name><operator pos:start="245:26" pos:end="245:27">-&gt;</operator><name pos:start="245:28" pos:end="245:41">nb_block_sizes</name></name></expr>;</condition> <incr pos:start="245:44" pos:end="245:46"><expr pos:start="245:44" pos:end="245:46"><name pos:start="245:44" pos:end="245:44">k</name><operator pos:start="245:45" pos:end="245:46">++</operator></expr></incr>)</control> <block pos:start="245:49" pos:end="419:9">{<block_content pos:start="247:13" pos:end="418:0">

            <expr_stmt pos:start="247:13" pos:end="247:42"><expr pos:start="247:13" pos:end="247:41"><name pos:start="247:13" pos:end="247:21">block_len</name> <operator pos:start="247:23" pos:end="247:23">=</operator> <name pos:start="247:25" pos:end="247:36"><name pos:start="247:25" pos:end="247:25">s</name><operator pos:start="247:26" pos:end="247:27">-&gt;</operator><name pos:start="247:28" pos:end="247:36">frame_len</name></name> <operator pos:start="247:38" pos:end="247:39">&gt;&gt;</operator> <name pos:start="247:41" pos:end="247:41">k</name></expr>;</expr_stmt>



            <if_stmt pos:start="251:13" pos:end="353:13"><if pos:start="251:13" pos:end="283:13">if <condition pos:start="251:16" pos:end="251:32">(<expr pos:start="251:17" pos:end="251:31"><name pos:start="251:17" pos:end="251:26"><name pos:start="251:17" pos:end="251:17">s</name><operator pos:start="251:18" pos:end="251:19">-&gt;</operator><name pos:start="251:20" pos:end="251:26">version</name></name> <operator pos:start="251:28" pos:end="251:29">==</operator> <literal type="number" pos:start="251:31" pos:end="251:31">1</literal></expr>)</condition> <block pos:start="251:34" pos:end="283:13">{<block_content pos:start="253:17" pos:end="281:41">

                <expr_stmt pos:start="253:17" pos:end="253:25"><expr pos:start="253:17" pos:end="253:24"><name pos:start="253:17" pos:end="253:20">lpos</name> <operator pos:start="253:22" pos:end="253:22">=</operator> <literal type="number" pos:start="253:24" pos:end="253:24">0</literal></expr>;</expr_stmt>

                <for pos:start="255:17" pos:end="279:17">for <control pos:start="255:21" pos:end="255:40">(<init pos:start="255:22" pos:end="255:27"><expr pos:start="255:22" pos:end="255:26"><name pos:start="255:22" pos:end="255:22">i</name> <operator pos:start="255:24" pos:end="255:24">=</operator> <literal type="number" pos:start="255:26" pos:end="255:26">0</literal></expr>;</init> <condition pos:start="255:29" pos:end="255:35"><expr pos:start="255:29" pos:end="255:34"><name pos:start="255:29" pos:end="255:29">i</name> <operator pos:start="255:31" pos:end="255:31">&lt;</operator> <literal type="number" pos:start="255:33" pos:end="255:34">25</literal></expr>;</condition> <incr pos:start="255:37" pos:end="255:39"><expr pos:start="255:37" pos:end="255:39"><name pos:start="255:37" pos:end="255:37">i</name><operator pos:start="255:38" pos:end="255:39">++</operator></expr></incr>)</control> <block pos:start="255:42" pos:end="279:17">{<block_content pos:start="257:21" pos:end="277:31">

                    <expr_stmt pos:start="257:21" pos:end="257:51"><expr pos:start="257:21" pos:end="257:50"><name pos:start="257:21" pos:end="257:21">a</name>   <operator pos:start="257:25" pos:end="257:25">=</operator> <name pos:start="257:27" pos:end="257:50"><name pos:start="257:27" pos:end="257:47">ff_wma_critical_freqs</name><index pos:start="257:48" pos:end="257:50">[<expr pos:start="257:49" pos:end="257:49"><name pos:start="257:49" pos:end="257:49">i</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="259:21" pos:end="259:45"><expr pos:start="259:21" pos:end="259:44"><name pos:start="259:21" pos:end="259:21">b</name>   <operator pos:start="259:25" pos:end="259:25">=</operator> <name pos:start="259:27" pos:end="259:44"><name pos:start="259:27" pos:end="259:31">avctx</name><operator pos:start="259:32" pos:end="259:33">-&gt;</operator><name pos:start="259:34" pos:end="259:44">sample_rate</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="261:21" pos:end="261:63"><expr pos:start="261:21" pos:end="261:62"><name pos:start="261:21" pos:end="261:23">pos</name> <operator pos:start="261:25" pos:end="261:25">=</operator> <operator pos:start="261:27" pos:end="261:27">(</operator><operator pos:start="261:28" pos:end="261:28">(</operator><name pos:start="261:29" pos:end="261:37">block_len</name> <operator pos:start="261:39" pos:end="261:39">*</operator> <literal type="number" pos:start="261:41" pos:end="261:41">2</literal> <operator pos:start="261:43" pos:end="261:43">*</operator> <name pos:start="261:45" pos:end="261:45">a</name><operator pos:start="261:46" pos:end="261:46">)</operator> <operator pos:start="261:48" pos:end="261:48">+</operator> <operator pos:start="261:50" pos:end="261:50">(</operator><name pos:start="261:51" pos:end="261:51">b</name> <operator pos:start="261:53" pos:end="261:54">&gt;&gt;</operator> <literal type="number" pos:start="261:56" pos:end="261:56">1</literal><operator pos:start="261:57" pos:end="261:57">)</operator><operator pos:start="261:58" pos:end="261:58">)</operator> <operator pos:start="261:60" pos:end="261:60">/</operator> <name pos:start="261:62" pos:end="261:62">b</name></expr>;</expr_stmt>

                    <if_stmt pos:start="263:21" pos:end="265:40"><if pos:start="263:21" pos:end="265:40">if <condition pos:start="263:24" pos:end="263:40">(<expr pos:start="263:25" pos:end="263:39"><name pos:start="263:25" pos:end="263:27">pos</name> <operator pos:start="263:29" pos:end="263:29">&gt;</operator> <name pos:start="263:31" pos:end="263:39">block_len</name></expr>)</condition><block type="pseudo" pos:start="265:25" pos:end="265:40"><block_content pos:start="265:25" pos:end="265:40">

                        <expr_stmt pos:start="265:25" pos:end="265:40"><expr pos:start="265:25" pos:end="265:39"><name pos:start="265:25" pos:end="265:27">pos</name> <operator pos:start="265:29" pos:end="265:29">=</operator> <name pos:start="265:31" pos:end="265:39">block_len</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="267:21" pos:end="267:57"><expr pos:start="267:21" pos:end="267:56"><name pos:start="267:21" pos:end="267:43"><name pos:start="267:21" pos:end="267:21">s</name><operator pos:start="267:22" pos:end="267:23">-&gt;</operator><name pos:start="267:24" pos:end="267:37">exponent_bands</name><index pos:start="267:38" pos:end="267:40">[<expr pos:start="267:39" pos:end="267:39"><literal type="number" pos:start="267:39" pos:end="267:39">0</literal></expr>]</index><index pos:start="267:41" pos:end="267:43">[<expr pos:start="267:42" pos:end="267:42"><name pos:start="267:42" pos:end="267:42">i</name></expr>]</index></name> <operator pos:start="267:45" pos:end="267:45">=</operator> <name pos:start="267:47" pos:end="267:49">pos</name> <operator pos:start="267:51" pos:end="267:51">-</operator> <name pos:start="267:53" pos:end="267:56">lpos</name></expr>;</expr_stmt>

                    <if_stmt pos:start="269:21" pos:end="275:21"><if pos:start="269:21" pos:end="275:21">if <condition pos:start="269:24" pos:end="269:41">(<expr pos:start="269:25" pos:end="269:40"><name pos:start="269:25" pos:end="269:27">pos</name> <operator pos:start="269:29" pos:end="269:30">&gt;=</operator> <name pos:start="269:32" pos:end="269:40">block_len</name></expr>)</condition> <block pos:start="269:43" pos:end="275:21">{<block_content pos:start="271:25" pos:end="273:30">

                        <expr_stmt pos:start="271:25" pos:end="271:28"><expr pos:start="271:25" pos:end="271:27"><name pos:start="271:25" pos:end="271:25">i</name><operator pos:start="271:26" pos:end="271:27">++</operator></expr>;</expr_stmt>

                        <break pos:start="273:25" pos:end="273:30">break;</break>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="277:21" pos:end="277:31"><expr pos:start="277:21" pos:end="277:30"><name pos:start="277:21" pos:end="277:24">lpos</name> <operator pos:start="277:26" pos:end="277:26">=</operator> <name pos:start="277:28" pos:end="277:30">pos</name></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="281:17" pos:end="281:41"><expr pos:start="281:17" pos:end="281:40"><name pos:start="281:17" pos:end="281:36"><name pos:start="281:17" pos:end="281:17">s</name><operator pos:start="281:18" pos:end="281:19">-&gt;</operator><name pos:start="281:20" pos:end="281:33">exponent_sizes</name><index pos:start="281:34" pos:end="281:36">[<expr pos:start="281:35" pos:end="281:35"><literal type="number" pos:start="281:35" pos:end="281:35">0</literal></expr>]</index></name> <operator pos:start="281:38" pos:end="281:38">=</operator> <name pos:start="281:40" pos:end="281:40">i</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="283:15" pos:end="353:13">else <block pos:start="283:20" pos:end="353:13">{<block_content pos:start="287:17" pos:end="351:17">

                <comment type="block" pos:start="285:17" pos:end="285:38">/* hardcoded tables */</comment>

                <expr_stmt pos:start="287:17" pos:end="287:29"><expr pos:start="287:17" pos:end="287:28"><name pos:start="287:17" pos:end="287:21">table</name> <operator pos:start="287:23" pos:end="287:23">=</operator> <name pos:start="287:25" pos:end="287:28">NULL</name></expr>;</expr_stmt>

                <expr_stmt pos:start="289:17" pos:end="289:63"><expr pos:start="289:17" pos:end="289:62"><name pos:start="289:17" pos:end="289:17">a</name>     <operator pos:start="289:23" pos:end="289:23">=</operator> <name pos:start="289:25" pos:end="289:41"><name pos:start="289:25" pos:end="289:25">s</name><operator pos:start="289:26" pos:end="289:27">-&gt;</operator><name pos:start="289:28" pos:end="289:41">frame_len_bits</name></name> <operator pos:start="289:43" pos:end="289:43">-</operator> <name pos:start="289:45" pos:end="289:58">BLOCK_MIN_BITS</name> <operator pos:start="289:60" pos:end="289:60">-</operator> <name pos:start="289:62" pos:end="289:62">k</name></expr>;</expr_stmt>

                <if_stmt pos:start="291:17" pos:end="305:17"><if pos:start="291:17" pos:end="305:17">if <condition pos:start="291:20" pos:end="291:26">(<expr pos:start="291:21" pos:end="291:25"><name pos:start="291:21" pos:end="291:21">a</name> <operator pos:start="291:23" pos:end="291:23">&lt;</operator> <literal type="number" pos:start="291:25" pos:end="291:25">3</literal></expr>)</condition> <block pos:start="291:28" pos:end="305:17">{<block_content pos:start="293:21" pos:end="303:55">

                    <if_stmt pos:start="293:21" pos:end="303:55"><if pos:start="293:21" pos:end="295:55">if <condition pos:start="293:24" pos:end="293:52">(<expr pos:start="293:25" pos:end="293:51"><name pos:start="293:25" pos:end="293:42"><name pos:start="293:25" pos:end="293:29">avctx</name><operator pos:start="293:30" pos:end="293:31">-&gt;</operator><name pos:start="293:32" pos:end="293:42">sample_rate</name></name> <operator pos:start="293:44" pos:end="293:45">&gt;=</operator> <literal type="number" pos:start="293:47" pos:end="293:51">44100</literal></expr>)</condition><block type="pseudo" pos:start="295:25" pos:end="295:55"><block_content pos:start="295:25" pos:end="295:55">

                        <expr_stmt pos:start="295:25" pos:end="295:55"><expr pos:start="295:25" pos:end="295:54"><name pos:start="295:25" pos:end="295:29">table</name> <operator pos:start="295:31" pos:end="295:31">=</operator> <name pos:start="295:33" pos:end="295:54"><name pos:start="295:33" pos:end="295:51">exponent_band_44100</name><index pos:start="295:52" pos:end="295:54">[<expr pos:start="295:53" pos:end="295:53"><name pos:start="295:53" pos:end="295:53">a</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="297:21" pos:end="299:55">else if <condition pos:start="297:29" pos:end="297:57">(<expr pos:start="297:30" pos:end="297:56"><name pos:start="297:30" pos:end="297:47"><name pos:start="297:30" pos:end="297:34">avctx</name><operator pos:start="297:35" pos:end="297:36">-&gt;</operator><name pos:start="297:37" pos:end="297:47">sample_rate</name></name> <operator pos:start="297:49" pos:end="297:50">&gt;=</operator> <literal type="number" pos:start="297:52" pos:end="297:56">32000</literal></expr>)</condition><block type="pseudo" pos:start="299:25" pos:end="299:55"><block_content pos:start="299:25" pos:end="299:55">

                        <expr_stmt pos:start="299:25" pos:end="299:55"><expr pos:start="299:25" pos:end="299:54"><name pos:start="299:25" pos:end="299:29">table</name> <operator pos:start="299:31" pos:end="299:31">=</operator> <name pos:start="299:33" pos:end="299:54"><name pos:start="299:33" pos:end="299:51">exponent_band_32000</name><index pos:start="299:52" pos:end="299:54">[<expr pos:start="299:53" pos:end="299:53"><name pos:start="299:53" pos:end="299:53">a</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="301:21" pos:end="303:55">else if <condition pos:start="301:29" pos:end="301:57">(<expr pos:start="301:30" pos:end="301:56"><name pos:start="301:30" pos:end="301:47"><name pos:start="301:30" pos:end="301:34">avctx</name><operator pos:start="301:35" pos:end="301:36">-&gt;</operator><name pos:start="301:37" pos:end="301:47">sample_rate</name></name> <operator pos:start="301:49" pos:end="301:50">&gt;=</operator> <literal type="number" pos:start="301:52" pos:end="301:56">22050</literal></expr>)</condition><block type="pseudo" pos:start="303:25" pos:end="303:55"><block_content pos:start="303:25" pos:end="303:55">

                        <expr_stmt pos:start="303:25" pos:end="303:55"><expr pos:start="303:25" pos:end="303:54"><name pos:start="303:25" pos:end="303:29">table</name> <operator pos:start="303:31" pos:end="303:31">=</operator> <name pos:start="303:33" pos:end="303:54"><name pos:start="303:33" pos:end="303:51">exponent_band_22050</name><index pos:start="303:52" pos:end="303:54">[<expr pos:start="303:53" pos:end="303:53"><name pos:start="303:53" pos:end="303:53">a</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="307:17" pos:end="351:17"><if pos:start="307:17" pos:end="317:17">if <condition pos:start="307:20" pos:end="307:26">(<expr pos:start="307:21" pos:end="307:25"><name pos:start="307:21" pos:end="307:25">table</name></expr>)</condition> <block pos:start="307:28" pos:end="317:17">{<block_content pos:start="309:21" pos:end="315:45">

                    <expr_stmt pos:start="309:21" pos:end="309:33"><expr pos:start="309:21" pos:end="309:32"><name pos:start="309:21" pos:end="309:21">n</name> <operator pos:start="309:23" pos:end="309:23">=</operator> <operator pos:start="309:25" pos:end="309:25">*</operator><name pos:start="309:26" pos:end="309:30">table</name><operator pos:start="309:31" pos:end="309:32">++</operator></expr>;</expr_stmt>

                    <for pos:start="311:21" pos:end="313:59">for <control pos:start="311:25" pos:end="311:43">(<init pos:start="311:26" pos:end="311:31"><expr pos:start="311:26" pos:end="311:30"><name pos:start="311:26" pos:end="311:26">i</name> <operator pos:start="311:28" pos:end="311:28">=</operator> <literal type="number" pos:start="311:30" pos:end="311:30">0</literal></expr>;</init> <condition pos:start="311:33" pos:end="311:38"><expr pos:start="311:33" pos:end="311:37"><name pos:start="311:33" pos:end="311:33">i</name> <operator pos:start="311:35" pos:end="311:35">&lt;</operator> <name pos:start="311:37" pos:end="311:37">n</name></expr>;</condition> <incr pos:start="311:40" pos:end="311:42"><expr pos:start="311:40" pos:end="311:42"><name pos:start="311:40" pos:end="311:40">i</name><operator pos:start="311:41" pos:end="311:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="313:25" pos:end="313:59"><block_content pos:start="313:25" pos:end="313:59">

                        <expr_stmt pos:start="313:25" pos:end="313:59"><expr pos:start="313:25" pos:end="313:58"><name pos:start="313:25" pos:end="313:47"><name pos:start="313:25" pos:end="313:25">s</name><operator pos:start="313:26" pos:end="313:27">-&gt;</operator><name pos:start="313:28" pos:end="313:41">exponent_bands</name><index pos:start="313:42" pos:end="313:44">[<expr pos:start="313:43" pos:end="313:43"><name pos:start="313:43" pos:end="313:43">k</name></expr>]</index><index pos:start="313:45" pos:end="313:47">[<expr pos:start="313:46" pos:end="313:46"><name pos:start="313:46" pos:end="313:46">i</name></expr>]</index></name> <operator pos:start="313:49" pos:end="313:49">=</operator> <name pos:start="313:51" pos:end="313:58"><name pos:start="313:51" pos:end="313:55">table</name><index pos:start="313:56" pos:end="313:58">[<expr pos:start="313:57" pos:end="313:57"><name pos:start="313:57" pos:end="313:57">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                    <expr_stmt pos:start="315:21" pos:end="315:45"><expr pos:start="315:21" pos:end="315:44"><name pos:start="315:21" pos:end="315:40"><name pos:start="315:21" pos:end="315:21">s</name><operator pos:start="315:22" pos:end="315:23">-&gt;</operator><name pos:start="315:24" pos:end="315:37">exponent_sizes</name><index pos:start="315:38" pos:end="315:40">[<expr pos:start="315:39" pos:end="315:39"><name pos:start="315:39" pos:end="315:39">k</name></expr>]</index></name> <operator pos:start="315:42" pos:end="315:42">=</operator> <name pos:start="315:44" pos:end="315:44">n</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="317:19" pos:end="351:17">else <block pos:start="317:24" pos:end="351:17">{<block_content pos:start="319:21" pos:end="349:45">

                    <expr_stmt pos:start="319:21" pos:end="319:29"><expr pos:start="319:21" pos:end="319:28"><name pos:start="319:21" pos:end="319:21">j</name>    <operator pos:start="319:26" pos:end="319:26">=</operator> <literal type="number" pos:start="319:28" pos:end="319:28">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="321:21" pos:end="321:29"><expr pos:start="321:21" pos:end="321:28"><name pos:start="321:21" pos:end="321:24">lpos</name> <operator pos:start="321:26" pos:end="321:26">=</operator> <literal type="number" pos:start="321:28" pos:end="321:28">0</literal></expr>;</expr_stmt>

                    <for pos:start="323:21" pos:end="347:21">for <control pos:start="323:25" pos:end="323:44">(<init pos:start="323:26" pos:end="323:31"><expr pos:start="323:26" pos:end="323:30"><name pos:start="323:26" pos:end="323:26">i</name> <operator pos:start="323:28" pos:end="323:28">=</operator> <literal type="number" pos:start="323:30" pos:end="323:30">0</literal></expr>;</init> <condition pos:start="323:33" pos:end="323:39"><expr pos:start="323:33" pos:end="323:38"><name pos:start="323:33" pos:end="323:33">i</name> <operator pos:start="323:35" pos:end="323:35">&lt;</operator> <literal type="number" pos:start="323:37" pos:end="323:38">25</literal></expr>;</condition> <incr pos:start="323:41" pos:end="323:43"><expr pos:start="323:41" pos:end="323:43"><name pos:start="323:41" pos:end="323:41">i</name><operator pos:start="323:42" pos:end="323:43">++</operator></expr></incr>)</control> <block pos:start="323:46" pos:end="347:21">{<block_content pos:start="325:25" pos:end="345:35">

                        <expr_stmt pos:start="325:25" pos:end="325:57"><expr pos:start="325:25" pos:end="325:56"><name pos:start="325:25" pos:end="325:25">a</name>     <operator pos:start="325:31" pos:end="325:31">=</operator> <name pos:start="325:33" pos:end="325:56"><name pos:start="325:33" pos:end="325:53">ff_wma_critical_freqs</name><index pos:start="325:54" pos:end="325:56">[<expr pos:start="325:55" pos:end="325:55"><name pos:start="325:55" pos:end="325:55">i</name></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="327:25" pos:end="327:51"><expr pos:start="327:25" pos:end="327:50"><name pos:start="327:25" pos:end="327:25">b</name>     <operator pos:start="327:31" pos:end="327:31">=</operator> <name pos:start="327:33" pos:end="327:50"><name pos:start="327:33" pos:end="327:37">avctx</name><operator pos:start="327:38" pos:end="327:39">-&gt;</operator><name pos:start="327:40" pos:end="327:50">sample_rate</name></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="329:25" pos:end="329:75"><expr pos:start="329:25" pos:end="329:74"><name pos:start="329:25" pos:end="329:27">pos</name>   <operator pos:start="329:31" pos:end="329:31">=</operator> <operator pos:start="329:33" pos:end="329:33">(</operator><operator pos:start="329:34" pos:end="329:34">(</operator><name pos:start="329:35" pos:end="329:43">block_len</name> <operator pos:start="329:45" pos:end="329:45">*</operator> <literal type="number" pos:start="329:47" pos:end="329:47">2</literal> <operator pos:start="329:49" pos:end="329:49">*</operator> <name pos:start="329:51" pos:end="329:51">a</name><operator pos:start="329:52" pos:end="329:52">)</operator> <operator pos:start="329:54" pos:end="329:54">+</operator> <operator pos:start="329:56" pos:end="329:56">(</operator><name pos:start="329:57" pos:end="329:57">b</name> <operator pos:start="329:59" pos:end="329:60">&lt;&lt;</operator> <literal type="number" pos:start="329:62" pos:end="329:62">1</literal><operator pos:start="329:63" pos:end="329:63">)</operator><operator pos:start="329:64" pos:end="329:64">)</operator> <operator pos:start="329:66" pos:end="329:66">/</operator> <operator pos:start="329:68" pos:end="329:68">(</operator><literal type="number" pos:start="329:69" pos:end="329:69">4</literal> <operator pos:start="329:71" pos:end="329:71">*</operator> <name pos:start="329:73" pos:end="329:73">b</name><operator pos:start="329:74" pos:end="329:74">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="331:25" pos:end="331:34"><expr pos:start="331:25" pos:end="331:33"><name pos:start="331:25" pos:end="331:27">pos</name> <operator pos:start="331:29" pos:end="331:31">&lt;&lt;=</operator> <literal type="number" pos:start="331:33" pos:end="331:33">2</literal></expr>;</expr_stmt>

                        <if_stmt pos:start="333:25" pos:end="335:44"><if pos:start="333:25" pos:end="335:44">if <condition pos:start="333:28" pos:end="333:44">(<expr pos:start="333:29" pos:end="333:43"><name pos:start="333:29" pos:end="333:31">pos</name> <operator pos:start="333:33" pos:end="333:33">&gt;</operator> <name pos:start="333:35" pos:end="333:43">block_len</name></expr>)</condition><block type="pseudo" pos:start="335:29" pos:end="335:44"><block_content pos:start="335:29" pos:end="335:44">

                            <expr_stmt pos:start="335:29" pos:end="335:44"><expr pos:start="335:29" pos:end="335:43"><name pos:start="335:29" pos:end="335:31">pos</name> <operator pos:start="335:33" pos:end="335:33">=</operator> <name pos:start="335:35" pos:end="335:43">block_len</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <if_stmt pos:start="337:25" pos:end="339:67"><if pos:start="337:25" pos:end="339:67">if <condition pos:start="337:28" pos:end="337:39">(<expr pos:start="337:29" pos:end="337:38"><name pos:start="337:29" pos:end="337:31">pos</name> <operator pos:start="337:33" pos:end="337:33">&gt;</operator> <name pos:start="337:35" pos:end="337:38">lpos</name></expr>)</condition><block type="pseudo" pos:start="339:29" pos:end="339:67"><block_content pos:start="339:29" pos:end="339:67">

                            <expr_stmt pos:start="339:29" pos:end="339:67"><expr pos:start="339:29" pos:end="339:66"><name pos:start="339:29" pos:end="339:53"><name pos:start="339:29" pos:end="339:29">s</name><operator pos:start="339:30" pos:end="339:31">-&gt;</operator><name pos:start="339:32" pos:end="339:45">exponent_bands</name><index pos:start="339:46" pos:end="339:48">[<expr pos:start="339:47" pos:end="339:47"><name pos:start="339:47" pos:end="339:47">k</name></expr>]</index><index pos:start="339:49" pos:end="339:53">[<expr pos:start="339:50" pos:end="339:52"><name pos:start="339:50" pos:end="339:50">j</name><operator pos:start="339:51" pos:end="339:52">++</operator></expr>]</index></name> <operator pos:start="339:55" pos:end="339:55">=</operator> <name pos:start="339:57" pos:end="339:59">pos</name> <operator pos:start="339:61" pos:end="339:61">-</operator> <name pos:start="339:63" pos:end="339:66">lpos</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <if_stmt pos:start="341:25" pos:end="343:34"><if pos:start="341:25" pos:end="343:34">if <condition pos:start="341:28" pos:end="341:45">(<expr pos:start="341:29" pos:end="341:44"><name pos:start="341:29" pos:end="341:31">pos</name> <operator pos:start="341:33" pos:end="341:34">&gt;=</operator> <name pos:start="341:36" pos:end="341:44">block_len</name></expr>)</condition><block type="pseudo" pos:start="343:29" pos:end="343:34"><block_content pos:start="343:29" pos:end="343:34">

                            <break pos:start="343:29" pos:end="343:34">break;</break></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="345:25" pos:end="345:35"><expr pos:start="345:25" pos:end="345:34"><name pos:start="345:25" pos:end="345:28">lpos</name> <operator pos:start="345:30" pos:end="345:30">=</operator> <name pos:start="345:32" pos:end="345:34">pos</name></expr>;</expr_stmt>

                    </block_content>}</block></for>

                    <expr_stmt pos:start="349:21" pos:end="349:45"><expr pos:start="349:21" pos:end="349:44"><name pos:start="349:21" pos:end="349:40"><name pos:start="349:21" pos:end="349:21">s</name><operator pos:start="349:22" pos:end="349:23">-&gt;</operator><name pos:start="349:24" pos:end="349:37">exponent_sizes</name><index pos:start="349:38" pos:end="349:40">[<expr pos:start="349:39" pos:end="349:39"><name pos:start="349:39" pos:end="349:39">k</name></expr>]</index></name> <operator pos:start="349:42" pos:end="349:42">=</operator> <name pos:start="349:44" pos:end="349:44">j</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>



            <comment type="block" pos:start="357:13" pos:end="357:37">/* max number of coefs */</comment>

            <expr_stmt pos:start="359:13" pos:end="359:79"><expr pos:start="359:13" pos:end="359:78"><name pos:start="359:13" pos:end="359:27"><name pos:start="359:13" pos:end="359:13">s</name><operator pos:start="359:14" pos:end="359:15">-&gt;</operator><name pos:start="359:16" pos:end="359:24">coefs_end</name><index pos:start="359:25" pos:end="359:27">[<expr pos:start="359:26" pos:end="359:26"><name pos:start="359:26" pos:end="359:26">k</name></expr>]</index></name> <operator pos:start="359:29" pos:end="359:29">=</operator> <operator pos:start="359:31" pos:end="359:31">(</operator><name pos:start="359:32" pos:end="359:43"><name pos:start="359:32" pos:end="359:32">s</name><operator pos:start="359:33" pos:end="359:34">-&gt;</operator><name pos:start="359:35" pos:end="359:43">frame_len</name></name> <operator pos:start="359:45" pos:end="359:45">-</operator> <operator pos:start="359:47" pos:end="359:47">(</operator><operator pos:start="359:48" pos:end="359:48">(</operator><name pos:start="359:49" pos:end="359:60"><name pos:start="359:49" pos:end="359:49">s</name><operator pos:start="359:50" pos:end="359:51">-&gt;</operator><name pos:start="359:52" pos:end="359:60">frame_len</name></name> <operator pos:start="359:62" pos:end="359:62">*</operator> <literal type="number" pos:start="359:64" pos:end="359:64">9</literal><operator pos:start="359:65" pos:end="359:65">)</operator> <operator pos:start="359:67" pos:end="359:67">/</operator> <literal type="number" pos:start="359:69" pos:end="359:71">100</literal><operator pos:start="359:72" pos:end="359:72">)</operator><operator pos:start="359:73" pos:end="359:73">)</operator> <operator pos:start="359:75" pos:end="359:76">&gt;&gt;</operator> <name pos:start="359:78" pos:end="359:78">k</name></expr>;</expr_stmt>

            <comment type="block" pos:start="361:13" pos:end="361:39">/* high freq computation */</comment>

            <expr_stmt pos:start="363:13" pos:end="365:69"><expr pos:start="363:13" pos:end="365:68"><name pos:start="363:13" pos:end="363:33"><name pos:start="363:13" pos:end="363:13">s</name><operator pos:start="363:14" pos:end="363:15">-&gt;</operator><name pos:start="363:16" pos:end="363:30">high_band_start</name><index pos:start="363:31" pos:end="363:33">[<expr pos:start="363:32" pos:end="363:32"><name pos:start="363:32" pos:end="363:32">k</name></expr>]</index></name> <operator pos:start="363:35" pos:end="363:35">=</operator> <operator pos:start="363:37" pos:end="363:37">(</operator><name pos:start="363:38" pos:end="363:40">int</name><operator pos:start="363:41" pos:end="363:41">)</operator> <operator pos:start="363:43" pos:end="363:43">(</operator><operator pos:start="363:44" pos:end="363:44">(</operator><name pos:start="363:45" pos:end="363:53">block_len</name> <operator pos:start="363:55" pos:end="363:55">*</operator> <literal type="number" pos:start="363:57" pos:end="363:57">2</literal> <operator pos:start="363:59" pos:end="363:59">*</operator> <name pos:start="363:61" pos:end="363:69">high_freq</name><operator pos:start="363:70" pos:end="363:70">)</operator> <operator pos:start="363:72" pos:end="363:72">/</operator>

                                           <name pos:start="365:44" pos:end="365:61"><name pos:start="365:44" pos:end="365:48">avctx</name><operator pos:start="365:49" pos:end="365:50">-&gt;</operator><name pos:start="365:51" pos:end="365:61">sample_rate</name></name> <operator pos:start="365:63" pos:end="365:63">+</operator> <literal type="number" pos:start="365:65" pos:end="365:67">0.5</literal><operator pos:start="365:68" pos:end="365:68">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="367:13" pos:end="367:39"><expr pos:start="367:13" pos:end="367:38"><name pos:start="367:13" pos:end="367:13">n</name>   <operator pos:start="367:17" pos:end="367:17">=</operator> <name pos:start="367:19" pos:end="367:38"><name pos:start="367:19" pos:end="367:19">s</name><operator pos:start="367:20" pos:end="367:21">-&gt;</operator><name pos:start="367:22" pos:end="367:35">exponent_sizes</name><index pos:start="367:36" pos:end="367:38">[<expr pos:start="367:37" pos:end="367:37"><name pos:start="367:37" pos:end="367:37">k</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="369:13" pos:end="369:20"><expr pos:start="369:13" pos:end="369:19"><name pos:start="369:13" pos:end="369:13">j</name>   <operator pos:start="369:17" pos:end="369:17">=</operator> <literal type="number" pos:start="369:19" pos:end="369:19">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="371:13" pos:end="371:20"><expr pos:start="371:13" pos:end="371:19"><name pos:start="371:13" pos:end="371:15">pos</name> <operator pos:start="371:17" pos:end="371:17">=</operator> <literal type="number" pos:start="371:19" pos:end="371:19">0</literal></expr>;</expr_stmt>

            <for pos:start="373:13" pos:end="395:13">for <control pos:start="373:17" pos:end="373:35">(<init pos:start="373:18" pos:end="373:23"><expr pos:start="373:18" pos:end="373:22"><name pos:start="373:18" pos:end="373:18">i</name> <operator pos:start="373:20" pos:end="373:20">=</operator> <literal type="number" pos:start="373:22" pos:end="373:22">0</literal></expr>;</init> <condition pos:start="373:25" pos:end="373:30"><expr pos:start="373:25" pos:end="373:29"><name pos:start="373:25" pos:end="373:25">i</name> <operator pos:start="373:27" pos:end="373:27">&lt;</operator> <name pos:start="373:29" pos:end="373:29">n</name></expr>;</condition> <incr pos:start="373:32" pos:end="373:34"><expr pos:start="373:32" pos:end="373:34"><name pos:start="373:32" pos:end="373:32">i</name><operator pos:start="373:33" pos:end="373:34">++</operator></expr></incr>)</control> <block pos:start="373:37" pos:end="395:13">{<block_content pos:start="375:17" pos:end="393:65">

                <decl_stmt pos:start="375:17" pos:end="375:31"><decl pos:start="375:17" pos:end="375:25"><type pos:start="375:17" pos:end="375:19"><name pos:start="375:17" pos:end="375:19">int</name></type> <name pos:start="375:21" pos:end="375:25">start</name></decl>, <decl pos:start="375:28" pos:end="375:30"><type ref="prev" pos:start="375:17" pos:end="375:19"/><name pos:start="375:28" pos:end="375:30">end</name></decl>;</decl_stmt>

                <expr_stmt pos:start="377:17" pos:end="377:28"><expr pos:start="377:17" pos:end="377:27"><name pos:start="377:17" pos:end="377:21">start</name> <operator pos:start="377:23" pos:end="377:23">=</operator> <name pos:start="377:25" pos:end="377:27">pos</name></expr>;</expr_stmt>

                <expr_stmt pos:start="379:17" pos:end="379:48"><expr pos:start="379:17" pos:end="379:47"><name pos:start="379:17" pos:end="379:19">pos</name>  <operator pos:start="379:22" pos:end="379:23">+=</operator> <name pos:start="379:25" pos:end="379:47"><name pos:start="379:25" pos:end="379:25">s</name><operator pos:start="379:26" pos:end="379:27">-&gt;</operator><name pos:start="379:28" pos:end="379:41">exponent_bands</name><index pos:start="379:42" pos:end="379:44">[<expr pos:start="379:43" pos:end="379:43"><name pos:start="379:43" pos:end="379:43">k</name></expr>]</index><index pos:start="379:45" pos:end="379:47">[<expr pos:start="379:46" pos:end="379:46"><name pos:start="379:46" pos:end="379:46">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="381:17" pos:end="381:28"><expr pos:start="381:17" pos:end="381:27"><name pos:start="381:17" pos:end="381:19">end</name>   <operator pos:start="381:23" pos:end="381:23">=</operator> <name pos:start="381:25" pos:end="381:27">pos</name></expr>;</expr_stmt>

                <if_stmt pos:start="383:17" pos:end="385:50"><if pos:start="383:17" pos:end="385:50">if <condition pos:start="383:20" pos:end="383:50">(<expr pos:start="383:21" pos:end="383:49"><name pos:start="383:21" pos:end="383:25">start</name> <operator pos:start="383:27" pos:end="383:27">&lt;</operator> <name pos:start="383:29" pos:end="383:49"><name pos:start="383:29" pos:end="383:29">s</name><operator pos:start="383:30" pos:end="383:31">-&gt;</operator><name pos:start="383:32" pos:end="383:46">high_band_start</name><index pos:start="383:47" pos:end="383:49">[<expr pos:start="383:48" pos:end="383:48"><name pos:start="383:48" pos:end="383:48">k</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="385:21" pos:end="385:50"><block_content pos:start="385:21" pos:end="385:50">

                    <expr_stmt pos:start="385:21" pos:end="385:50"><expr pos:start="385:21" pos:end="385:49"><name pos:start="385:21" pos:end="385:25">start</name> <operator pos:start="385:27" pos:end="385:27">=</operator> <name pos:start="385:29" pos:end="385:49"><name pos:start="385:29" pos:end="385:29">s</name><operator pos:start="385:30" pos:end="385:31">-&gt;</operator><name pos:start="385:32" pos:end="385:46">high_band_start</name><index pos:start="385:47" pos:end="385:49">[<expr pos:start="385:48" pos:end="385:48"><name pos:start="385:48" pos:end="385:48">k</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="387:17" pos:end="389:42"><if pos:start="387:17" pos:end="389:42">if <condition pos:start="387:20" pos:end="387:42">(<expr pos:start="387:21" pos:end="387:41"><name pos:start="387:21" pos:end="387:23">end</name> <operator pos:start="387:25" pos:end="387:25">&gt;</operator> <name pos:start="387:27" pos:end="387:41"><name pos:start="387:27" pos:end="387:27">s</name><operator pos:start="387:28" pos:end="387:29">-&gt;</operator><name pos:start="387:30" pos:end="387:38">coefs_end</name><index pos:start="387:39" pos:end="387:41">[<expr pos:start="387:40" pos:end="387:40"><name pos:start="387:40" pos:end="387:40">k</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="389:21" pos:end="389:42"><block_content pos:start="389:21" pos:end="389:42">

                    <expr_stmt pos:start="389:21" pos:end="389:42"><expr pos:start="389:21" pos:end="389:41"><name pos:start="389:21" pos:end="389:23">end</name> <operator pos:start="389:25" pos:end="389:25">=</operator> <name pos:start="389:27" pos:end="389:41"><name pos:start="389:27" pos:end="389:27">s</name><operator pos:start="389:28" pos:end="389:29">-&gt;</operator><name pos:start="389:30" pos:end="389:38">coefs_end</name><index pos:start="389:39" pos:end="389:41">[<expr pos:start="389:40" pos:end="389:40"><name pos:start="389:40" pos:end="389:40">k</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="391:17" pos:end="393:65"><if pos:start="391:17" pos:end="393:65">if <condition pos:start="391:20" pos:end="391:32">(<expr pos:start="391:21" pos:end="391:31"><name pos:start="391:21" pos:end="391:23">end</name> <operator pos:start="391:25" pos:end="391:25">&gt;</operator> <name pos:start="391:27" pos:end="391:31">start</name></expr>)</condition><block type="pseudo" pos:start="393:21" pos:end="393:65"><block_content pos:start="393:21" pos:end="393:65">

                    <expr_stmt pos:start="393:21" pos:end="393:65"><expr pos:start="393:21" pos:end="393:64"><name pos:start="393:21" pos:end="393:50"><name pos:start="393:21" pos:end="393:21">s</name><operator pos:start="393:22" pos:end="393:23">-&gt;</operator><name pos:start="393:24" pos:end="393:42">exponent_high_bands</name><index pos:start="393:43" pos:end="393:45">[<expr pos:start="393:44" pos:end="393:44"><name pos:start="393:44" pos:end="393:44">k</name></expr>]</index><index pos:start="393:46" pos:end="393:50">[<expr pos:start="393:47" pos:end="393:49"><name pos:start="393:47" pos:end="393:47">j</name><operator pos:start="393:48" pos:end="393:49">++</operator></expr>]</index></name> <operator pos:start="393:52" pos:end="393:52">=</operator> <name pos:start="393:54" pos:end="393:56">end</name> <operator pos:start="393:58" pos:end="393:58">-</operator> <name pos:start="393:60" pos:end="393:64">start</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="397:13" pos:end="418:0"><expr pos:start="397:13" pos:end="397:41"><name pos:start="397:13" pos:end="397:37"><name pos:start="397:13" pos:end="397:13">s</name><operator pos:start="397:14" pos:end="397:15">-&gt;</operator><name pos:start="397:16" pos:end="397:34">exponent_high_sizes</name><index pos:start="397:35" pos:end="397:37">[<expr pos:start="397:36" pos:end="397:36"><name pos:start="397:36" pos:end="397:36">k</name></expr>]</index></name> <operator pos:start="397:39" pos:end="397:39">=</operator> <name pos:start="397:41" pos:end="397:41">j</name></expr>;</expr_stmt>

<cpp:if pos:start="399:1" pos:end="399:5">#<cpp:directive pos:start="399:2" pos:end="399:3">if</cpp:directive> <expr pos:start="399:5" pos:end="399:5"><literal type="number" pos:start="399:5" pos:end="399:5">0</literal></expr></cpp:if>

            tprintf(s-&gt;avctx, "%5d: coefs_end=%d high_band_start=%d nb_high_bands=%d: ",

                    s-&gt;frame_len &gt;&gt; k,

                    s-&gt;coefs_end[k],

                    s-&gt;high_band_start[k],

                    s-&gt;exponent_high_sizes[k]);

            for (j = 0; j &lt; s-&gt;exponent_high_sizes[k]; j++)

                tprintf(s-&gt;avctx, " %d", s-&gt;exponent_high_bands[k][j]);

            tprintf(s-&gt;avctx, "\n");

<cpp:endif pos:start="417:1" pos:end="417:6">#<cpp:directive pos:start="417:2" pos:end="417:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="417:8" pos:end="417:14">/* 0 */</comment>

        </block_content>}</block></for>

    </block_content>}</block>



<cpp:ifdef pos:start="425:1" pos:end="425:12">#<cpp:directive pos:start="425:2" pos:end="425:6">ifdef</cpp:directive> <name pos:start="425:8" pos:end="425:12">TRACE</name></cpp:ifdef>

    <block pos:start="427:5" pos:end="450:0">{<block_content pos:start="429:9" pos:end="445:9">

        <decl_stmt pos:start="429:9" pos:end="429:17"><decl pos:start="429:9" pos:end="429:13"><type pos:start="429:9" pos:end="429:11"><name pos:start="429:9" pos:end="429:11">int</name></type> <name pos:start="429:13" pos:end="429:13">i</name></decl>, <decl pos:start="429:16" pos:end="429:16"><type ref="prev" pos:start="429:9" pos:end="429:11"/><name pos:start="429:16" pos:end="429:16">j</name></decl>;</decl_stmt>

        <for pos:start="431:9" pos:end="445:9">for <control pos:start="431:13" pos:end="431:47">(<init pos:start="431:14" pos:end="431:19"><expr pos:start="431:14" pos:end="431:18"><name pos:start="431:14" pos:end="431:14">i</name> <operator pos:start="431:16" pos:end="431:16">=</operator> <literal type="number" pos:start="431:18" pos:end="431:18">0</literal></expr>;</init> <condition pos:start="431:21" pos:end="431:42"><expr pos:start="431:21" pos:end="431:41"><name pos:start="431:21" pos:end="431:21">i</name> <operator pos:start="431:23" pos:end="431:23">&lt;</operator> <name pos:start="431:25" pos:end="431:41"><name pos:start="431:25" pos:end="431:25">s</name><operator pos:start="431:26" pos:end="431:27">-&gt;</operator><name pos:start="431:28" pos:end="431:41">nb_block_sizes</name></name></expr>;</condition> <incr pos:start="431:44" pos:end="431:46"><expr pos:start="431:44" pos:end="431:46"><name pos:start="431:44" pos:end="431:44">i</name><operator pos:start="431:45" pos:end="431:46">++</operator></expr></incr>)</control> <block pos:start="431:49" pos:end="445:9">{<block_content pos:start="433:13" pos:end="443:36">

            <expr_stmt pos:start="433:13" pos:end="437:42"><expr pos:start="433:13" pos:end="437:41"><call pos:start="433:13" pos:end="437:41"><name pos:start="433:13" pos:end="433:19">tprintf</name><argument_list pos:start="433:20" pos:end="437:41">(<argument pos:start="433:21" pos:end="433:28"><expr pos:start="433:21" pos:end="433:28"><name pos:start="433:21" pos:end="433:28"><name pos:start="433:21" pos:end="433:21">s</name><operator pos:start="433:22" pos:end="433:23">-&gt;</operator><name pos:start="433:24" pos:end="433:28">avctx</name></name></expr></argument>, <argument pos:start="433:31" pos:end="433:43"><expr pos:start="433:31" pos:end="433:43"><literal type="string" pos:start="433:31" pos:end="433:43">"%5d: n=%2d:"</literal></expr></argument>,

                    <argument pos:start="435:21" pos:end="435:37"><expr pos:start="435:21" pos:end="435:37"><name pos:start="435:21" pos:end="435:32"><name pos:start="435:21" pos:end="435:21">s</name><operator pos:start="435:22" pos:end="435:23">-&gt;</operator><name pos:start="435:24" pos:end="435:32">frame_len</name></name> <operator pos:start="435:34" pos:end="435:35">&gt;&gt;</operator> <name pos:start="435:37" pos:end="435:37">i</name></expr></argument>,

                    <argument pos:start="437:21" pos:end="437:40"><expr pos:start="437:21" pos:end="437:40"><name pos:start="437:21" pos:end="437:40"><name pos:start="437:21" pos:end="437:21">s</name><operator pos:start="437:22" pos:end="437:23">-&gt;</operator><name pos:start="437:24" pos:end="437:37">exponent_sizes</name><index pos:start="437:38" pos:end="437:40">[<expr pos:start="437:39" pos:end="437:39"><name pos:start="437:39" pos:end="437:39">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="439:13" pos:end="441:66">for <control pos:start="439:17" pos:end="439:54">(<init pos:start="439:18" pos:end="439:23"><expr pos:start="439:18" pos:end="439:22"><name pos:start="439:18" pos:end="439:18">j</name> <operator pos:start="439:20" pos:end="439:20">=</operator> <literal type="number" pos:start="439:22" pos:end="439:22">0</literal></expr>;</init> <condition pos:start="439:25" pos:end="439:49"><expr pos:start="439:25" pos:end="439:48"><name pos:start="439:25" pos:end="439:25">j</name> <operator pos:start="439:27" pos:end="439:27">&lt;</operator> <name pos:start="439:29" pos:end="439:48"><name pos:start="439:29" pos:end="439:29">s</name><operator pos:start="439:30" pos:end="439:31">-&gt;</operator><name pos:start="439:32" pos:end="439:45">exponent_sizes</name><index pos:start="439:46" pos:end="439:48">[<expr pos:start="439:47" pos:end="439:47"><name pos:start="439:47" pos:end="439:47">i</name></expr>]</index></name></expr>;</condition> <incr pos:start="439:51" pos:end="439:53"><expr pos:start="439:51" pos:end="439:53"><name pos:start="439:51" pos:end="439:51">j</name><operator pos:start="439:52" pos:end="439:53">++</operator></expr></incr>)</control><block type="pseudo" pos:start="441:17" pos:end="441:66"><block_content pos:start="441:17" pos:end="441:66">

                <expr_stmt pos:start="441:17" pos:end="441:66"><expr pos:start="441:17" pos:end="441:65"><call pos:start="441:17" pos:end="441:65"><name pos:start="441:17" pos:end="441:23">tprintf</name><argument_list pos:start="441:24" pos:end="441:65">(<argument pos:start="441:25" pos:end="441:32"><expr pos:start="441:25" pos:end="441:32"><name pos:start="441:25" pos:end="441:32"><name pos:start="441:25" pos:end="441:25">s</name><operator pos:start="441:26" pos:end="441:27">-&gt;</operator><name pos:start="441:28" pos:end="441:32">avctx</name></name></expr></argument>, <argument pos:start="441:35" pos:end="441:39"><expr pos:start="441:35" pos:end="441:39"><literal type="string" pos:start="441:35" pos:end="441:39">" %d"</literal></expr></argument>, <argument pos:start="441:42" pos:end="441:64"><expr pos:start="441:42" pos:end="441:64"><name pos:start="441:42" pos:end="441:64"><name pos:start="441:42" pos:end="441:42">s</name><operator pos:start="441:43" pos:end="441:44">-&gt;</operator><name pos:start="441:45" pos:end="441:58">exponent_bands</name><index pos:start="441:59" pos:end="441:61">[<expr pos:start="441:60" pos:end="441:60"><name pos:start="441:60" pos:end="441:60">i</name></expr>]</index><index pos:start="441:62" pos:end="441:64">[<expr pos:start="441:63" pos:end="441:63"><name pos:start="441:63" pos:end="441:63">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="443:13" pos:end="443:36"><expr pos:start="443:13" pos:end="443:35"><call pos:start="443:13" pos:end="443:35"><name pos:start="443:13" pos:end="443:19">tprintf</name><argument_list pos:start="443:20" pos:end="443:35">(<argument pos:start="443:21" pos:end="443:28"><expr pos:start="443:21" pos:end="443:28"><name pos:start="443:21" pos:end="443:28"><name pos:start="443:21" pos:end="443:21">s</name><operator pos:start="443:22" pos:end="443:23">-&gt;</operator><name pos:start="443:24" pos:end="443:28">avctx</name></name></expr></argument>, <argument pos:start="443:31" pos:end="443:34"><expr pos:start="443:31" pos:end="443:34"><literal type="string" pos:start="443:31" pos:end="443:34">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block>

<cpp:endif pos:start="449:1" pos:end="449:6">#<cpp:directive pos:start="449:2" pos:end="449:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="449:8" pos:end="449:18">/* TRACE */</comment>



    <comment type="block" pos:start="453:5" pos:end="453:48">/* init MDCT windows : simple sine window */</comment>

    <for pos:start="455:5" pos:end="461:5">for <control pos:start="455:9" pos:end="455:43">(<init pos:start="455:10" pos:end="455:15"><expr pos:start="455:10" pos:end="455:14"><name pos:start="455:10" pos:end="455:10">i</name> <operator pos:start="455:12" pos:end="455:12">=</operator> <literal type="number" pos:start="455:14" pos:end="455:14">0</literal></expr>;</init> <condition pos:start="455:17" pos:end="455:38"><expr pos:start="455:17" pos:end="455:37"><name pos:start="455:17" pos:end="455:17">i</name> <operator pos:start="455:19" pos:end="455:19">&lt;</operator> <name pos:start="455:21" pos:end="455:37"><name pos:start="455:21" pos:end="455:21">s</name><operator pos:start="455:22" pos:end="455:23">-&gt;</operator><name pos:start="455:24" pos:end="455:37">nb_block_sizes</name></name></expr>;</condition> <incr pos:start="455:40" pos:end="455:42"><expr pos:start="455:40" pos:end="455:42"><name pos:start="455:40" pos:end="455:40">i</name><operator pos:start="455:41" pos:end="455:42">++</operator></expr></incr>)</control> <block pos:start="455:45" pos:end="461:5">{<block_content pos:start="457:9" pos:end="459:63">

        <expr_stmt pos:start="457:9" pos:end="457:55"><expr pos:start="457:9" pos:end="457:54"><call pos:start="457:9" pos:end="457:54"><name pos:start="457:9" pos:end="457:31">ff_init_ff_sine_windows</name><argument_list pos:start="457:32" pos:end="457:54">(<argument pos:start="457:33" pos:end="457:53"><expr pos:start="457:33" pos:end="457:53"><name pos:start="457:33" pos:end="457:49"><name pos:start="457:33" pos:end="457:33">s</name><operator pos:start="457:34" pos:end="457:35">-&gt;</operator><name pos:start="457:36" pos:end="457:49">frame_len_bits</name></name> <operator pos:start="457:51" pos:end="457:51">-</operator> <name pos:start="457:53" pos:end="457:53">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="459:9" pos:end="459:63"><expr pos:start="459:9" pos:end="459:62"><name pos:start="459:9" pos:end="459:21"><name pos:start="459:9" pos:end="459:9">s</name><operator pos:start="459:10" pos:end="459:11">-&gt;</operator><name pos:start="459:12" pos:end="459:18">windows</name><index pos:start="459:19" pos:end="459:21">[<expr pos:start="459:20" pos:end="459:20"><name pos:start="459:20" pos:end="459:20">i</name></expr>]</index></name> <operator pos:start="459:23" pos:end="459:23">=</operator> <name pos:start="459:25" pos:end="459:62"><name pos:start="459:25" pos:end="459:39">ff_sine_windows</name><index pos:start="459:40" pos:end="459:62">[<expr pos:start="459:41" pos:end="459:61"><name pos:start="459:41" pos:end="459:57"><name pos:start="459:41" pos:end="459:41">s</name><operator pos:start="459:42" pos:end="459:43">-&gt;</operator><name pos:start="459:44" pos:end="459:57">frame_len_bits</name></name> <operator pos:start="459:59" pos:end="459:59">-</operator> <name pos:start="459:61" pos:end="459:61">i</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="465:5" pos:end="465:31"><expr pos:start="465:5" pos:end="465:30"><name pos:start="465:5" pos:end="465:26"><name pos:start="465:5" pos:end="465:5">s</name><operator pos:start="465:6" pos:end="465:7">-&gt;</operator><name pos:start="465:8" pos:end="465:26">reset_block_lengths</name></name> <operator pos:start="465:28" pos:end="465:28">=</operator> <literal type="number" pos:start="465:30" pos:end="465:30">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="469:5" pos:end="513:5"><if pos:start="469:5" pos:end="513:5">if <condition pos:start="469:8" pos:end="469:28">(<expr pos:start="469:9" pos:end="469:27"><name pos:start="469:9" pos:end="469:27"><name pos:start="469:9" pos:end="469:9">s</name><operator pos:start="469:10" pos:end="469:11">-&gt;</operator><name pos:start="469:12" pos:end="469:27">use_noise_coding</name></name></expr>)</condition> <block pos:start="469:30" pos:end="513:5">{<block_content pos:start="473:9" pos:end="512:0">

        <comment type="block" pos:start="471:9" pos:end="471:38">/* init the noise generator */</comment>

        <if_stmt pos:start="473:9" pos:end="484:0"><if pos:start="473:9" pos:end="475:33">if <condition pos:start="473:12" pos:end="473:27">(<expr pos:start="473:13" pos:end="473:26"><name pos:start="473:13" pos:end="473:26"><name pos:start="473:13" pos:end="473:13">s</name><operator pos:start="473:14" pos:end="473:15">-&gt;</operator><name pos:start="473:16" pos:end="473:26">use_exp_vlc</name></name></expr>)</condition><block type="pseudo" pos:start="475:13" pos:end="475:33"><block_content pos:start="475:13" pos:end="475:33">

            <expr_stmt pos:start="475:13" pos:end="475:33"><expr pos:start="475:13" pos:end="475:32"><name pos:start="475:13" pos:end="475:25"><name pos:start="475:13" pos:end="475:13">s</name><operator pos:start="475:14" pos:end="475:15">-&gt;</operator><name pos:start="475:16" pos:end="475:25">noise_mult</name></name> <operator pos:start="475:27" pos:end="475:27">=</operator> <literal type="number" pos:start="475:29" pos:end="475:32">0.02</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="477:9" pos:end="484:0">else<block type="pseudo" pos:start="479:13" pos:end="484:0"><block_content pos:start="479:13" pos:end="484:0">

            <expr_stmt pos:start="479:13" pos:end="484:0"><expr pos:start="479:13" pos:end="479:32"><name pos:start="479:13" pos:end="479:25"><name pos:start="479:13" pos:end="479:13">s</name><operator pos:start="479:14" pos:end="479:15">-&gt;</operator><name pos:start="479:16" pos:end="479:25">noise_mult</name></name> <operator pos:start="479:27" pos:end="479:27">=</operator> <literal type="number" pos:start="479:29" pos:end="479:32">0.04</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



<cpp:ifdef pos:start="483:1" pos:end="483:12">#<cpp:directive pos:start="483:2" pos:end="483:6">ifdef</cpp:directive> <name pos:start="483:8" pos:end="483:12">TRACE</name></cpp:ifdef>

        <for pos:start="485:9" pos:end="490:0">for <control pos:start="485:13" pos:end="485:44">(<init pos:start="485:14" pos:end="485:19"><expr pos:start="485:14" pos:end="485:18"><name pos:start="485:14" pos:end="485:14">i</name> <operator pos:start="485:16" pos:end="485:16">=</operator> <literal type="number" pos:start="485:18" pos:end="485:18">0</literal></expr>;</init> <condition pos:start="485:21" pos:end="485:39"><expr pos:start="485:21" pos:end="485:38"><name pos:start="485:21" pos:end="485:21">i</name> <operator pos:start="485:23" pos:end="485:23">&lt;</operator> <name pos:start="485:25" pos:end="485:38">NOISE_TAB_SIZE</name></expr>;</condition> <incr pos:start="485:41" pos:end="485:43"><expr pos:start="485:41" pos:end="485:43"><name pos:start="485:41" pos:end="485:41">i</name><operator pos:start="485:42" pos:end="485:43">++</operator></expr></incr>)</control><block type="pseudo" pos:start="487:13" pos:end="490:0"><block_content pos:start="487:13" pos:end="490:0">

            <expr_stmt pos:start="487:13" pos:end="490:0"><expr pos:start="487:13" pos:end="487:51"><name pos:start="487:13" pos:end="487:29"><name pos:start="487:13" pos:end="487:13">s</name><operator pos:start="487:14" pos:end="487:15">-&gt;</operator><name pos:start="487:16" pos:end="487:26">noise_table</name><index pos:start="487:27" pos:end="487:29">[<expr pos:start="487:28" pos:end="487:28"><name pos:start="487:28" pos:end="487:28">i</name></expr>]</index></name> <operator pos:start="487:31" pos:end="487:31">=</operator> <literal type="number" pos:start="487:33" pos:end="487:35">1.0</literal> <operator pos:start="487:37" pos:end="487:37">*</operator> <name pos:start="487:39" pos:end="487:51"><name pos:start="487:39" pos:end="487:39">s</name><operator pos:start="487:40" pos:end="487:41">-&gt;</operator><name pos:start="487:42" pos:end="487:51">noise_mult</name></name></expr>;</expr_stmt></block_content></block></for>

<cpp:else pos:start="489:1" pos:end="489:5">#<cpp:directive pos:start="489:2" pos:end="489:5">else</cpp:directive></cpp:else>

        <block pos:start="491:9" pos:end="512:0">{<block_content pos:start="493:13" pos:end="507:13">

            <decl_stmt pos:start="493:13" pos:end="493:30"><decl pos:start="493:13" pos:end="493:29"><type pos:start="493:13" pos:end="493:24"><name pos:start="493:13" pos:end="493:20">unsigned</name> <name pos:start="493:22" pos:end="493:24">int</name></type> <name pos:start="493:26" pos:end="493:29">seed</name></decl>;</decl_stmt>

            <decl_stmt pos:start="495:13" pos:end="495:23"><decl pos:start="495:13" pos:end="495:22"><type pos:start="495:13" pos:end="495:17"><name pos:start="495:13" pos:end="495:17">float</name></type> <name pos:start="495:19" pos:end="495:22">norm</name></decl>;</decl_stmt>

            <expr_stmt pos:start="497:13" pos:end="497:21"><expr pos:start="497:13" pos:end="497:20"><name pos:start="497:13" pos:end="497:16">seed</name> <operator pos:start="497:18" pos:end="497:18">=</operator> <literal type="number" pos:start="497:20" pos:end="497:20">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="499:13" pos:end="499:73"><expr pos:start="499:13" pos:end="499:72"><name pos:start="499:13" pos:end="499:16">norm</name> <operator pos:start="499:18" pos:end="499:18">=</operator> <operator pos:start="499:20" pos:end="499:20">(</operator><literal type="number" pos:start="499:21" pos:end="499:23">1.0</literal> <operator pos:start="499:25" pos:end="499:25">/</operator> <operator pos:start="499:27" pos:end="499:27">(</operator><name pos:start="499:28" pos:end="499:32">float</name><operator pos:start="499:33" pos:end="499:33">)</operator> <operator pos:start="499:35" pos:end="499:35">(</operator><literal type="number" pos:start="499:36" pos:end="499:38">1LL</literal> <operator pos:start="499:40" pos:end="499:41">&lt;&lt;</operator> <literal type="number" pos:start="499:43" pos:end="499:44">31</literal><operator pos:start="499:45" pos:end="499:45">)</operator><operator pos:start="499:46" pos:end="499:46">)</operator> <operator pos:start="499:48" pos:end="499:48">*</operator> <call pos:start="499:50" pos:end="499:56"><name pos:start="499:50" pos:end="499:53">sqrt</name><argument_list pos:start="499:54" pos:end="499:56">(<argument pos:start="499:55" pos:end="499:55"><expr pos:start="499:55" pos:end="499:55"><literal type="number" pos:start="499:55" pos:end="499:55">3</literal></expr></argument>)</argument_list></call> <operator pos:start="499:58" pos:end="499:58">*</operator> <name pos:start="499:60" pos:end="499:72"><name pos:start="499:60" pos:end="499:60">s</name><operator pos:start="499:61" pos:end="499:62">-&gt;</operator><name pos:start="499:63" pos:end="499:72">noise_mult</name></name></expr>;</expr_stmt>

            <for pos:start="501:13" pos:end="507:13">for <control pos:start="501:17" pos:end="501:48">(<init pos:start="501:18" pos:end="501:23"><expr pos:start="501:18" pos:end="501:22"><name pos:start="501:18" pos:end="501:18">i</name> <operator pos:start="501:20" pos:end="501:20">=</operator> <literal type="number" pos:start="501:22" pos:end="501:22">0</literal></expr>;</init> <condition pos:start="501:25" pos:end="501:43"><expr pos:start="501:25" pos:end="501:42"><name pos:start="501:25" pos:end="501:25">i</name> <operator pos:start="501:27" pos:end="501:27">&lt;</operator> <name pos:start="501:29" pos:end="501:42">NOISE_TAB_SIZE</name></expr>;</condition> <incr pos:start="501:45" pos:end="501:47"><expr pos:start="501:45" pos:end="501:47"><name pos:start="501:45" pos:end="501:45">i</name><operator pos:start="501:46" pos:end="501:47">++</operator></expr></incr>)</control> <block pos:start="501:50" pos:end="507:13">{<block_content pos:start="503:17" pos:end="505:64">

                <expr_stmt pos:start="503:17" pos:end="503:54"><expr pos:start="503:17" pos:end="503:53"><name pos:start="503:17" pos:end="503:20">seed</name>              <operator pos:start="503:35" pos:end="503:35">=</operator> <name pos:start="503:37" pos:end="503:40">seed</name> <operator pos:start="503:42" pos:end="503:42">*</operator> <literal type="number" pos:start="503:44" pos:end="503:51">314159</literal> <operator pos:start="503:51" pos:end="503:51">+</operator> <literal type="number" pos:start="503:53" pos:end="503:53">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="505:17" pos:end="505:64"><expr pos:start="505:17" pos:end="505:63"><name pos:start="505:17" pos:end="505:33"><name pos:start="505:17" pos:end="505:17">s</name><operator pos:start="505:18" pos:end="505:19">-&gt;</operator><name pos:start="505:20" pos:end="505:30">noise_table</name><index pos:start="505:31" pos:end="505:33">[<expr pos:start="505:32" pos:end="505:32"><name pos:start="505:32" pos:end="505:32">i</name></expr>]</index></name> <operator pos:start="505:35" pos:end="505:35">=</operator> <operator pos:start="505:37" pos:end="505:37">(</operator><name pos:start="505:38" pos:end="505:42">float</name><operator pos:start="505:43" pos:end="505:43">)</operator> <operator pos:start="505:45" pos:end="505:45">(</operator><operator pos:start="505:46" pos:end="505:46">(</operator><name pos:start="505:47" pos:end="505:49">int</name><operator pos:start="505:50" pos:end="505:50">)</operator> <name pos:start="505:52" pos:end="505:55">seed</name><operator pos:start="505:56" pos:end="505:56">)</operator> <operator pos:start="505:58" pos:end="505:58">*</operator> <name pos:start="505:60" pos:end="505:63">norm</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block>

<cpp:endif pos:start="511:1" pos:end="511:6">#<cpp:directive pos:start="511:2" pos:end="511:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="511:8" pos:end="511:18">/* TRACE */</comment>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="517:5" pos:end="517:52">/* choose the VLC tables for the coefficients */</comment>

    <expr_stmt pos:start="519:5" pos:end="519:23"><expr pos:start="519:5" pos:end="519:22"><name pos:start="519:5" pos:end="519:18">coef_vlc_table</name> <operator pos:start="519:20" pos:end="519:20">=</operator> <literal type="number" pos:start="519:22" pos:end="519:22">2</literal></expr>;</expr_stmt>

    <if_stmt pos:start="521:5" pos:end="531:5"><if pos:start="521:5" pos:end="531:5">if <condition pos:start="521:8" pos:end="521:36">(<expr pos:start="521:9" pos:end="521:35"><name pos:start="521:9" pos:end="521:26"><name pos:start="521:9" pos:end="521:13">avctx</name><operator pos:start="521:14" pos:end="521:15">-&gt;</operator><name pos:start="521:16" pos:end="521:26">sample_rate</name></name> <operator pos:start="521:28" pos:end="521:29">&gt;=</operator> <literal type="number" pos:start="521:31" pos:end="521:35">32000</literal></expr>)</condition> <block pos:start="521:38" pos:end="531:5">{<block_content pos:start="523:9" pos:end="529:31">

        <if_stmt pos:start="523:9" pos:end="529:31"><if pos:start="523:9" pos:end="525:31">if <condition pos:start="523:12" pos:end="523:24">(<expr pos:start="523:13" pos:end="523:23"><name pos:start="523:13" pos:end="523:16">bps1</name> <operator pos:start="523:18" pos:end="523:18">&lt;</operator> <literal type="number" pos:start="523:20" pos:end="523:23">0.72</literal></expr>)</condition><block type="pseudo" pos:start="525:13" pos:end="525:31"><block_content pos:start="525:13" pos:end="525:31">

            <expr_stmt pos:start="525:13" pos:end="525:31"><expr pos:start="525:13" pos:end="525:30"><name pos:start="525:13" pos:end="525:26">coef_vlc_table</name> <operator pos:start="525:28" pos:end="525:28">=</operator> <literal type="number" pos:start="525:30" pos:end="525:30">0</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="527:9" pos:end="529:31">else if <condition pos:start="527:17" pos:end="527:29">(<expr pos:start="527:18" pos:end="527:28"><name pos:start="527:18" pos:end="527:21">bps1</name> <operator pos:start="527:23" pos:end="527:23">&lt;</operator> <literal type="number" pos:start="527:25" pos:end="527:28">1.16</literal></expr>)</condition><block type="pseudo" pos:start="529:13" pos:end="529:31"><block_content pos:start="529:13" pos:end="529:31">

            <expr_stmt pos:start="529:13" pos:end="529:31"><expr pos:start="529:13" pos:end="529:30"><name pos:start="529:13" pos:end="529:26">coef_vlc_table</name> <operator pos:start="529:28" pos:end="529:28">=</operator> <literal type="number" pos:start="529:30" pos:end="529:30">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="533:5" pos:end="533:53"><expr pos:start="533:5" pos:end="533:52"><name pos:start="533:5" pos:end="533:19"><name pos:start="533:5" pos:end="533:5">s</name><operator pos:start="533:6" pos:end="533:7">-&gt;</operator><name pos:start="533:8" pos:end="533:16">coef_vlcs</name><index pos:start="533:17" pos:end="533:19">[<expr pos:start="533:18" pos:end="533:18"><literal type="number" pos:start="533:18" pos:end="533:18">0</literal></expr>]</index></name> <operator pos:start="533:21" pos:end="533:21">=</operator> <operator pos:start="533:23" pos:end="533:23">&amp;</operator><name pos:start="533:24" pos:end="533:52"><name pos:start="533:24" pos:end="533:32">coef_vlcs</name><index pos:start="533:33" pos:end="533:52">[<expr pos:start="533:34" pos:end="533:51"><name pos:start="533:34" pos:end="533:47">coef_vlc_table</name> <operator pos:start="533:49" pos:end="533:49">*</operator> <literal type="number" pos:start="533:51" pos:end="533:51">2</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="535:5" pos:end="535:57"><expr pos:start="535:5" pos:end="535:56"><name pos:start="535:5" pos:end="535:19"><name pos:start="535:5" pos:end="535:5">s</name><operator pos:start="535:6" pos:end="535:7">-&gt;</operator><name pos:start="535:8" pos:end="535:16">coef_vlcs</name><index pos:start="535:17" pos:end="535:19">[<expr pos:start="535:18" pos:end="535:18"><literal type="number" pos:start="535:18" pos:end="535:18">1</literal></expr>]</index></name> <operator pos:start="535:21" pos:end="535:21">=</operator> <operator pos:start="535:23" pos:end="535:23">&amp;</operator><name pos:start="535:24" pos:end="535:56"><name pos:start="535:24" pos:end="535:32">coef_vlcs</name><index pos:start="535:33" pos:end="535:56">[<expr pos:start="535:34" pos:end="535:55"><name pos:start="535:34" pos:end="535:47">coef_vlc_table</name> <operator pos:start="535:49" pos:end="535:49">*</operator> <literal type="number" pos:start="535:51" pos:end="535:53">2</literal> <operator pos:start="535:53" pos:end="535:53">+</operator> <literal type="number" pos:start="535:55" pos:end="535:55">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="537:5" pos:end="539:53"><expr pos:start="537:5" pos:end="539:52"><call pos:start="537:5" pos:end="539:52"><name pos:start="537:5" pos:end="537:17">init_coef_vlc</name><argument_list pos:start="537:18" pos:end="539:52">(<argument pos:start="537:19" pos:end="537:33"><expr pos:start="537:19" pos:end="537:33"><operator pos:start="537:19" pos:end="537:19">&amp;</operator><name pos:start="537:20" pos:end="537:33"><name pos:start="537:20" pos:end="537:20">s</name><operator pos:start="537:21" pos:end="537:22">-&gt;</operator><name pos:start="537:23" pos:end="537:30">coef_vlc</name><index pos:start="537:31" pos:end="537:33">[<expr pos:start="537:32" pos:end="537:32"><literal type="number" pos:start="537:32" pos:end="537:32">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="537:36" pos:end="537:51"><expr pos:start="537:36" pos:end="537:51"><operator pos:start="537:36" pos:end="537:36">&amp;</operator><name pos:start="537:37" pos:end="537:51"><name pos:start="537:37" pos:end="537:37">s</name><operator pos:start="537:38" pos:end="537:39">-&gt;</operator><name pos:start="537:40" pos:end="537:48">run_table</name><index pos:start="537:49" pos:end="537:51">[<expr pos:start="537:50" pos:end="537:50"><literal type="number" pos:start="537:50" pos:end="537:50">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="537:54" pos:end="537:71"><expr pos:start="537:54" pos:end="537:71"><operator pos:start="537:54" pos:end="537:54">&amp;</operator><name pos:start="537:55" pos:end="537:71"><name pos:start="537:55" pos:end="537:55">s</name><operator pos:start="537:56" pos:end="537:57">-&gt;</operator><name pos:start="537:58" pos:end="537:68">level_table</name><index pos:start="537:69" pos:end="537:71">[<expr pos:start="537:70" pos:end="537:70"><literal type="number" pos:start="537:70" pos:end="537:70">0</literal></expr>]</index></name></expr></argument>,

                  <argument pos:start="539:19" pos:end="539:34"><expr pos:start="539:19" pos:end="539:34"><operator pos:start="539:19" pos:end="539:19">&amp;</operator><name pos:start="539:20" pos:end="539:34"><name pos:start="539:20" pos:end="539:20">s</name><operator pos:start="539:21" pos:end="539:22">-&gt;</operator><name pos:start="539:23" pos:end="539:31">int_table</name><index pos:start="539:32" pos:end="539:34">[<expr pos:start="539:33" pos:end="539:33"><literal type="number" pos:start="539:33" pos:end="539:33">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="539:37" pos:end="539:51"><expr pos:start="539:37" pos:end="539:51"><name pos:start="539:37" pos:end="539:51"><name pos:start="539:37" pos:end="539:37">s</name><operator pos:start="539:38" pos:end="539:39">-&gt;</operator><name pos:start="539:40" pos:end="539:48">coef_vlcs</name><index pos:start="539:49" pos:end="539:51">[<expr pos:start="539:50" pos:end="539:50"><literal type="number" pos:start="539:50" pos:end="539:50">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="541:5" pos:end="543:53"><expr pos:start="541:5" pos:end="543:52"><call pos:start="541:5" pos:end="543:52"><name pos:start="541:5" pos:end="541:17">init_coef_vlc</name><argument_list pos:start="541:18" pos:end="543:52">(<argument pos:start="541:19" pos:end="541:33"><expr pos:start="541:19" pos:end="541:33"><operator pos:start="541:19" pos:end="541:19">&amp;</operator><name pos:start="541:20" pos:end="541:33"><name pos:start="541:20" pos:end="541:20">s</name><operator pos:start="541:21" pos:end="541:22">-&gt;</operator><name pos:start="541:23" pos:end="541:30">coef_vlc</name><index pos:start="541:31" pos:end="541:33">[<expr pos:start="541:32" pos:end="541:32"><literal type="number" pos:start="541:32" pos:end="541:32">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="541:36" pos:end="541:51"><expr pos:start="541:36" pos:end="541:51"><operator pos:start="541:36" pos:end="541:36">&amp;</operator><name pos:start="541:37" pos:end="541:51"><name pos:start="541:37" pos:end="541:37">s</name><operator pos:start="541:38" pos:end="541:39">-&gt;</operator><name pos:start="541:40" pos:end="541:48">run_table</name><index pos:start="541:49" pos:end="541:51">[<expr pos:start="541:50" pos:end="541:50"><literal type="number" pos:start="541:50" pos:end="541:50">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="541:54" pos:end="541:71"><expr pos:start="541:54" pos:end="541:71"><operator pos:start="541:54" pos:end="541:54">&amp;</operator><name pos:start="541:55" pos:end="541:71"><name pos:start="541:55" pos:end="541:55">s</name><operator pos:start="541:56" pos:end="541:57">-&gt;</operator><name pos:start="541:58" pos:end="541:68">level_table</name><index pos:start="541:69" pos:end="541:71">[<expr pos:start="541:70" pos:end="541:70"><literal type="number" pos:start="541:70" pos:end="541:70">1</literal></expr>]</index></name></expr></argument>,

                  <argument pos:start="543:19" pos:end="543:34"><expr pos:start="543:19" pos:end="543:34"><operator pos:start="543:19" pos:end="543:19">&amp;</operator><name pos:start="543:20" pos:end="543:34"><name pos:start="543:20" pos:end="543:20">s</name><operator pos:start="543:21" pos:end="543:22">-&gt;</operator><name pos:start="543:23" pos:end="543:31">int_table</name><index pos:start="543:32" pos:end="543:34">[<expr pos:start="543:33" pos:end="543:33"><literal type="number" pos:start="543:33" pos:end="543:33">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="543:37" pos:end="543:51"><expr pos:start="543:37" pos:end="543:51"><name pos:start="543:37" pos:end="543:51"><name pos:start="543:37" pos:end="543:37">s</name><operator pos:start="543:38" pos:end="543:39">-&gt;</operator><name pos:start="543:40" pos:end="543:48">coef_vlcs</name><index pos:start="543:49" pos:end="543:51">[<expr pos:start="543:50" pos:end="543:50"><literal type="number" pos:start="543:50" pos:end="543:50">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="547:5" pos:end="547:13">return <expr pos:start="547:12" pos:end="547:12"><literal type="number" pos:start="547:12" pos:end="547:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
