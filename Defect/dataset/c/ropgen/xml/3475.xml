<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3475.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">read_seek</name><parameter_list pos:start="1:21" pos:end="3:43">(<parameter pos:start="1:22" pos:end="1:39"><decl pos:start="1:22" pos:end="1:39"><type pos:start="1:22" pos:end="1:39"><name pos:start="1:22" pos:end="1:36">AVFormatContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">s</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:57"><decl pos:start="1:42" pos:end="1:57"><type pos:start="1:42" pos:end="1:57"><name pos:start="1:42" pos:end="1:44">int</name></type> <name pos:start="1:46" pos:end="1:57">stream_index</name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:31"><decl pos:start="3:22" pos:end="3:31"><type pos:start="3:22" pos:end="3:31"><name pos:start="3:22" pos:end="3:28">int64_t</name></type> <name pos:start="3:30" pos:end="3:31">ts</name></decl></parameter>, <parameter pos:start="3:34" pos:end="3:42"><decl pos:start="3:34" pos:end="3:42"><type pos:start="3:34" pos:end="3:42"><name pos:start="3:34" pos:end="3:36">int</name></type> <name pos:start="3:38" pos:end="3:42">flags</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="69:1">{<block_content pos:start="7:5" pos:end="67:13">

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">WtvContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">wtv</name> <init pos:start="7:21" pos:end="7:34">= <expr pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">AVIOContext</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:19">pb</name> <init pos:start="9:21" pos:end="9:29">= <expr pos:start="9:23" pos:end="9:29"><name pos:start="9:23" pos:end="9:29"><name pos:start="9:23" pos:end="9:25">wtv</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:29">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:32"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">AVStream</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:16">st</name> <init pos:start="11:18" pos:end="11:32">= <expr pos:start="11:20" pos:end="11:32"><name pos:start="11:20" pos:end="11:32"><name pos:start="11:20" pos:end="11:20">s</name><operator pos:start="11:21" pos:end="11:22">-&gt;</operator><name pos:start="11:23" pos:end="11:29">streams</name><index pos:start="11:30" pos:end="11:32">[<expr pos:start="11:31" pos:end="11:31"><literal type="number" pos:start="11:31" pos:end="11:31">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:23">ts_relative</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="21:31"><if pos:start="19:5" pos:end="21:31">if <condition pos:start="19:8" pos:end="19:66">(<expr pos:start="19:9" pos:end="19:65"><operator pos:start="19:9" pos:end="19:9">(</operator><name pos:start="19:10" pos:end="19:14">flags</name> <operator pos:start="19:16" pos:end="19:16">&amp;</operator> <name pos:start="19:18" pos:end="19:34">AVSEEK_FLAG_FRAME</name><operator pos:start="19:35" pos:end="19:35">)</operator> <operator pos:start="19:37" pos:end="19:38">||</operator> <operator pos:start="19:40" pos:end="19:40">(</operator><name pos:start="19:41" pos:end="19:45">flags</name> <operator pos:start="19:47" pos:end="19:47">&amp;</operator> <name pos:start="19:49" pos:end="19:64">AVSEEK_FLAG_BYTE</name><operator pos:start="19:65" pos:end="19:65">)</operator></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:31"><block_content pos:start="21:9" pos:end="21:31">

        <return pos:start="21:9" pos:end="21:31">return <expr pos:start="21:16" pos:end="21:30"><call pos:start="21:16" pos:end="21:30"><name pos:start="21:16" pos:end="21:22">AVERROR</name><argument_list pos:start="21:23" pos:end="21:30">(<argument pos:start="21:24" pos:end="21:29"><expr pos:start="21:24" pos:end="21:29"><name pos:start="21:24" pos:end="21:29">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="25:5" pos:end="27:71">/* timestamp adjustment is required because wtv-&gt;pts values are absolute,

     * whereas AVIndexEntry-&gt;timestamp values are relative to epoch. */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:21"><expr pos:start="29:5" pos:end="29:20"><name pos:start="29:5" pos:end="29:15">ts_relative</name> <operator pos:start="29:17" pos:end="29:17">=</operator> <name pos:start="29:19" pos:end="29:20">ts</name></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="33:34"><if pos:start="31:5" pos:end="33:34">if <condition pos:start="31:8" pos:end="31:37">(<expr pos:start="31:9" pos:end="31:36"><name pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:11">wtv</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:18">epoch</name></name> <operator pos:start="31:20" pos:end="31:21">!=</operator> <name pos:start="31:23" pos:end="31:36">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:34"><block_content pos:start="33:9" pos:end="33:34">

        <expr_stmt pos:start="33:9" pos:end="33:34"><expr pos:start="33:9" pos:end="33:33"><name pos:start="33:9" pos:end="33:19">ts_relative</name> <operator pos:start="33:21" pos:end="33:22">-=</operator> <name pos:start="33:24" pos:end="33:33"><name pos:start="33:24" pos:end="33:26">wtv</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:33">epoch</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:97"><expr pos:start="37:5" pos:end="37:96"><name pos:start="37:5" pos:end="37:5">i</name> <operator pos:start="37:7" pos:end="37:7">=</operator> <call pos:start="37:9" pos:end="37:96"><name pos:start="37:9" pos:end="37:33">ff_index_search_timestamp</name><argument_list pos:start="37:34" pos:end="37:96">(<argument pos:start="37:35" pos:end="37:52"><expr pos:start="37:35" pos:end="37:52"><name pos:start="37:35" pos:end="37:52"><name pos:start="37:35" pos:end="37:37">wtv</name><operator pos:start="37:38" pos:end="37:39">-&gt;</operator><name pos:start="37:40" pos:end="37:52">index_entries</name></name></expr></argument>, <argument pos:start="37:55" pos:end="37:75"><expr pos:start="37:55" pos:end="37:75"><name pos:start="37:55" pos:end="37:75"><name pos:start="37:55" pos:end="37:57">wtv</name><operator pos:start="37:58" pos:end="37:59">-&gt;</operator><name pos:start="37:60" pos:end="37:75">nb_index_entries</name></name></expr></argument>, <argument pos:start="37:78" pos:end="37:88"><expr pos:start="37:78" pos:end="37:88"><name pos:start="37:78" pos:end="37:88">ts_relative</name></expr></argument>, <argument pos:start="37:91" pos:end="37:95"><expr pos:start="37:91" pos:end="37:95"><name pos:start="37:91" pos:end="37:95">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="55:5"><if pos:start="39:5" pos:end="55:5">if <condition pos:start="39:8" pos:end="39:14">(<expr pos:start="39:9" pos:end="39:13"><name pos:start="39:9" pos:end="39:9">i</name> <operator pos:start="39:11" pos:end="39:11">&lt;</operator> <literal type="number" pos:start="39:13" pos:end="39:13">0</literal></expr>)</condition> <block pos:start="39:16" pos:end="55:5">{<block_content pos:start="41:9" pos:end="53:17">

        <if_stmt pos:start="41:9" pos:end="47:87"><if pos:start="41:9" pos:end="43:39">if <condition pos:start="41:12" pos:end="41:78">(<expr pos:start="41:13" pos:end="41:77"><name pos:start="41:13" pos:end="41:31"><name pos:start="41:13" pos:end="41:15">wtv</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:31">last_valid_pts</name></name> <operator pos:start="41:33" pos:end="41:34">==</operator> <name pos:start="41:36" pos:end="41:49">AV_NOPTS_VALUE</name> <operator pos:start="41:51" pos:end="41:52">||</operator> <name pos:start="41:54" pos:end="41:55">ts</name> <operator pos:start="41:57" pos:end="41:57">&lt;</operator> <name pos:start="41:59" pos:end="41:77"><name pos:start="41:59" pos:end="41:61">wtv</name><operator pos:start="41:62" pos:end="41:63">-&gt;</operator><name pos:start="41:64" pos:end="41:77">last_valid_pts</name></name></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:39"><block_content pos:start="43:13" pos:end="43:39">

            <expr_stmt pos:start="43:13" pos:end="43:39"><expr pos:start="43:13" pos:end="43:38"><call pos:start="43:13" pos:end="43:38"><name pos:start="43:13" pos:end="43:21">avio_seek</name><argument_list pos:start="43:22" pos:end="43:38">(<argument pos:start="43:23" pos:end="43:24"><expr pos:start="43:23" pos:end="43:24"><name pos:start="43:23" pos:end="43:24">pb</name></expr></argument>, <argument pos:start="43:27" pos:end="43:27"><expr pos:start="43:27" pos:end="43:27"><literal type="number" pos:start="43:27" pos:end="43:27">0</literal></expr></argument>, <argument pos:start="43:30" pos:end="43:37"><expr pos:start="43:30" pos:end="43:37"><name pos:start="43:30" pos:end="43:37">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="45:9" pos:end="47:87">else if <condition pos:start="45:17" pos:end="45:103">(<expr pos:start="45:18" pos:end="45:102"><name pos:start="45:18" pos:end="45:29"><name pos:start="45:18" pos:end="45:19">st</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:29">duration</name></name> <operator pos:start="45:31" pos:end="45:32">!=</operator> <name pos:start="45:34" pos:end="45:47">AV_NOPTS_VALUE</name> <operator pos:start="45:49" pos:end="45:50">&amp;&amp;</operator> <name pos:start="45:52" pos:end="45:62">ts_relative</name> <operator pos:start="45:64" pos:end="45:64">&gt;</operator> <name pos:start="45:66" pos:end="45:77"><name pos:start="45:66" pos:end="45:67">st</name><operator pos:start="45:68" pos:end="45:69">-&gt;</operator><name pos:start="45:70" pos:end="45:77">duration</name></name> <operator pos:start="45:79" pos:end="45:80">&amp;&amp;</operator> <name pos:start="45:82" pos:end="45:102"><name pos:start="45:82" pos:end="45:84">wtv</name><operator pos:start="45:85" pos:end="45:86">-&gt;</operator><name pos:start="45:87" pos:end="45:102">nb_index_entries</name></name></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:87"><block_content pos:start="47:13" pos:end="47:87">

            <expr_stmt pos:start="47:13" pos:end="47:87"><expr pos:start="47:13" pos:end="47:86"><call pos:start="47:13" pos:end="47:86"><name pos:start="47:13" pos:end="47:21">avio_seek</name><argument_list pos:start="47:22" pos:end="47:86">(<argument pos:start="47:23" pos:end="47:24"><expr pos:start="47:23" pos:end="47:24"><name pos:start="47:23" pos:end="47:24">pb</name></expr></argument>, <argument pos:start="47:27" pos:end="47:75"><expr pos:start="47:27" pos:end="47:75"><name pos:start="47:27" pos:end="47:71"><name pos:start="47:27" pos:end="47:29">wtv</name><operator pos:start="47:30" pos:end="47:31">-&gt;</operator><name pos:start="47:32" pos:end="47:44">index_entries</name><index pos:start="47:45" pos:end="47:71">[<expr pos:start="47:46" pos:end="47:70"><name pos:start="47:46" pos:end="47:66"><name pos:start="47:46" pos:end="47:48">wtv</name><operator pos:start="47:49" pos:end="47:50">-&gt;</operator><name pos:start="47:51" pos:end="47:66">nb_index_entries</name></name> <operator pos:start="47:68" pos:end="47:68">-</operator> <literal type="number" pos:start="47:70" pos:end="47:70">1</literal></expr>]</index></name><operator pos:start="47:72" pos:end="47:72">.</operator><name pos:start="47:73" pos:end="47:75">pos</name></expr></argument>, <argument pos:start="47:78" pos:end="47:85"><expr pos:start="47:78" pos:end="47:85"><name pos:start="47:78" pos:end="47:85">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="49:9" pos:end="51:35"><if pos:start="49:9" pos:end="51:35">if <condition pos:start="49:12" pos:end="49:52">(<expr pos:start="49:13" pos:end="49:51"><call pos:start="49:13" pos:end="49:47"><name pos:start="49:13" pos:end="49:24">parse_chunks</name><argument_list pos:start="49:25" pos:end="49:47">(<argument pos:start="49:26" pos:end="49:26"><expr pos:start="49:26" pos:end="49:26"><name pos:start="49:26" pos:end="49:26">s</name></expr></argument>, <argument pos:start="49:29" pos:end="49:39"><expr pos:start="49:29" pos:end="49:39"><name pos:start="49:29" pos:end="49:39">SEEK_TO_PTS</name></expr></argument>, <argument pos:start="49:42" pos:end="49:43"><expr pos:start="49:42" pos:end="49:43"><name pos:start="49:42" pos:end="49:43">ts</name></expr></argument>, <argument pos:start="49:46" pos:end="49:46"><expr pos:start="49:46" pos:end="49:46"><literal type="number" pos:start="49:46" pos:end="49:46">0</literal></expr></argument>)</argument_list></call> <operator pos:start="49:49" pos:end="49:49">&lt;</operator> <literal type="number" pos:start="49:51" pos:end="49:51">0</literal></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:35"><block_content pos:start="51:13" pos:end="51:35">

            <return pos:start="51:13" pos:end="51:35">return <expr pos:start="51:20" pos:end="51:34"><call pos:start="51:20" pos:end="51:34"><name pos:start="51:20" pos:end="51:26">AVERROR</name><argument_list pos:start="51:27" pos:end="51:34">(<argument pos:start="51:28" pos:end="51:33"><expr pos:start="51:28" pos:end="51:33"><name pos:start="51:28" pos:end="51:33">ERANGE</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <return pos:start="53:9" pos:end="53:17">return <expr pos:start="53:16" pos:end="53:16"><literal type="number" pos:start="53:16" pos:end="53:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:47"><expr pos:start="57:5" pos:end="57:46"><name pos:start="57:5" pos:end="57:12"><name pos:start="57:5" pos:end="57:7">wtv</name><operator pos:start="57:8" pos:end="57:9">-&gt;</operator><name pos:start="57:10" pos:end="57:12">pts</name></name> <operator pos:start="57:14" pos:end="57:14">=</operator> <name pos:start="57:16" pos:end="57:36"><name pos:start="57:16" pos:end="57:18">wtv</name><operator pos:start="57:19" pos:end="57:20">-&gt;</operator><name pos:start="57:21" pos:end="57:33">index_entries</name><index pos:start="57:34" pos:end="57:36">[<expr pos:start="57:35" pos:end="57:35"><name pos:start="57:35" pos:end="57:35">i</name></expr>]</index></name><operator pos:start="57:37" pos:end="57:37">.</operator><name pos:start="57:38" pos:end="57:46">timestamp</name></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="61:31"><if pos:start="59:5" pos:end="61:31">if <condition pos:start="59:8" pos:end="59:37">(<expr pos:start="59:9" pos:end="59:36"><name pos:start="59:9" pos:end="59:18"><name pos:start="59:9" pos:end="59:11">wtv</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:18">epoch</name></name> <operator pos:start="59:20" pos:end="59:21">!=</operator> <name pos:start="59:23" pos:end="59:36">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:31"><block_content pos:start="61:9" pos:end="61:31">

        <expr_stmt pos:start="61:9" pos:end="61:31"><expr pos:start="61:9" pos:end="61:30"><name pos:start="61:9" pos:end="61:16"><name pos:start="61:9" pos:end="61:11">wtv</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:16">pts</name></name> <operator pos:start="61:18" pos:end="61:19">+=</operator> <name pos:start="61:21" pos:end="61:30"><name pos:start="61:21" pos:end="61:23">wtv</name><operator pos:start="61:24" pos:end="61:25">-&gt;</operator><name pos:start="61:26" pos:end="61:30">epoch</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:35"><expr pos:start="63:5" pos:end="63:34"><name pos:start="63:5" pos:end="63:23"><name pos:start="63:5" pos:end="63:7">wtv</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:23">last_valid_pts</name></name> <operator pos:start="63:25" pos:end="63:25">=</operator> <name pos:start="63:27" pos:end="63:34"><name pos:start="63:27" pos:end="63:29">wtv</name><operator pos:start="63:30" pos:end="63:31">-&gt;</operator><name pos:start="63:32" pos:end="63:34">pts</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:55"><expr pos:start="65:5" pos:end="65:54"><call pos:start="65:5" pos:end="65:54"><name pos:start="65:5" pos:end="65:13">avio_seek</name><argument_list pos:start="65:14" pos:end="65:54">(<argument pos:start="65:15" pos:end="65:16"><expr pos:start="65:15" pos:end="65:16"><name pos:start="65:15" pos:end="65:16">pb</name></expr></argument>, <argument pos:start="65:19" pos:end="65:43"><expr pos:start="65:19" pos:end="65:43"><name pos:start="65:19" pos:end="65:39"><name pos:start="65:19" pos:end="65:21">wtv</name><operator pos:start="65:22" pos:end="65:23">-&gt;</operator><name pos:start="65:24" pos:end="65:36">index_entries</name><index pos:start="65:37" pos:end="65:39">[<expr pos:start="65:38" pos:end="65:38"><name pos:start="65:38" pos:end="65:38">i</name></expr>]</index></name><operator pos:start="65:40" pos:end="65:40">.</operator><name pos:start="65:41" pos:end="65:43">pos</name></expr></argument>, <argument pos:start="65:46" pos:end="65:53"><expr pos:start="65:46" pos:end="65:53"><name pos:start="65:46" pos:end="65:53">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="67:5" pos:end="67:13">return <expr pos:start="67:12" pos:end="67:12"><literal type="number" pos:start="67:12" pos:end="67:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
