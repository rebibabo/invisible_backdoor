<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18184.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:27"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">int64_t</name> <name pos:start="1:16" pos:end="1:27">coroutine_fn</name></type> <name pos:start="1:29" pos:end="1:58">bdrv_co_get_block_status_above</name><parameter_list pos:start="1:59" pos:end="11:32">(<parameter pos:start="1:60" pos:end="1:79"><decl pos:start="1:60" pos:end="1:79"><type pos:start="1:60" pos:end="1:79"><name pos:start="1:60" pos:end="1:75">BlockDriverState</name> <modifier pos:start="1:77" pos:end="1:77">*</modifier></type><name pos:start="1:78" pos:end="1:79">bs</name></decl></parameter>,

        <parameter pos:start="3:9" pos:end="3:30"><decl pos:start="3:9" pos:end="3:30"><type pos:start="3:9" pos:end="3:30"><name pos:start="3:9" pos:end="3:24">BlockDriverState</name> <modifier pos:start="3:26" pos:end="3:26">*</modifier></type><name pos:start="3:27" pos:end="3:30">base</name></decl></parameter>,

        <parameter pos:start="5:9" pos:end="5:26"><decl pos:start="5:9" pos:end="5:26"><type pos:start="5:9" pos:end="5:26"><name pos:start="5:9" pos:end="5:15">int64_t</name></type> <name pos:start="5:17" pos:end="5:26">sector_num</name></decl></parameter>,

        <parameter pos:start="7:9" pos:end="7:22"><decl pos:start="7:9" pos:end="7:22"><type pos:start="7:9" pos:end="7:22"><name pos:start="7:9" pos:end="7:11">int</name></type> <name pos:start="7:13" pos:end="7:22">nb_sectors</name></decl></parameter>,

        <parameter pos:start="9:9" pos:end="9:17"><decl pos:start="9:9" pos:end="9:17"><type pos:start="9:9" pos:end="9:17"><name pos:start="9:9" pos:end="9:11">int</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:17">pnum</name></decl></parameter>,

        <parameter pos:start="11:9" pos:end="11:31"><decl pos:start="11:9" pos:end="11:31"><type pos:start="11:9" pos:end="11:31"><name pos:start="11:9" pos:end="11:24">BlockDriverState</name> <modifier pos:start="11:26" pos:end="11:26">*</modifier><modifier pos:start="11:27" pos:end="11:27">*</modifier></type><name pos:start="11:28" pos:end="11:31">file</name></decl></parameter>)</parameter_list>

<block pos:start="13:1" pos:end="43:1">{<block_content pos:start="15:5" pos:end="41:15">

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:20">BlockDriverState</name> <modifier pos:start="15:22" pos:end="15:22">*</modifier></type><name pos:start="15:23" pos:end="15:23">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:20"><decl pos:start="17:5" pos:end="17:19"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">int64_t</name></type> <name pos:start="17:13" pos:end="17:15">ret</name> <init pos:start="17:17" pos:end="17:19">= <expr pos:start="17:19" pos:end="17:19"><literal type="number" pos:start="17:19" pos:end="17:19">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:23"><expr pos:start="21:5" pos:end="21:22"><call pos:start="21:5" pos:end="21:22"><name pos:start="21:5" pos:end="21:10">assert</name><argument_list pos:start="21:11" pos:end="21:22">(<argument pos:start="21:12" pos:end="21:21"><expr pos:start="21:12" pos:end="21:21"><name pos:start="21:12" pos:end="21:13">bs</name> <operator pos:start="21:15" pos:end="21:16">!=</operator> <name pos:start="21:18" pos:end="21:21">base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="23:5" pos:end="39:5">for <control pos:start="23:9" pos:end="23:46">(<init pos:start="23:10" pos:end="23:16"><expr pos:start="23:10" pos:end="23:15"><name pos:start="23:10" pos:end="23:10">p</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <name pos:start="23:14" pos:end="23:15">bs</name></expr>;</init> <condition pos:start="23:18" pos:end="23:27"><expr pos:start="23:18" pos:end="23:26"><name pos:start="23:18" pos:end="23:18">p</name> <operator pos:start="23:20" pos:end="23:21">!=</operator> <name pos:start="23:23" pos:end="23:26">base</name></expr>;</condition> <incr pos:start="23:29" pos:end="23:45"><expr pos:start="23:29" pos:end="23:45"><name pos:start="23:29" pos:end="23:29">p</name> <operator pos:start="23:31" pos:end="23:31">=</operator> <call pos:start="23:33" pos:end="23:45"><name pos:start="23:33" pos:end="23:42">backing_bs</name><argument_list pos:start="23:43" pos:end="23:45">(<argument pos:start="23:44" pos:end="23:44"><expr pos:start="23:44" pos:end="23:44"><name pos:start="23:44" pos:end="23:44">p</name></expr></argument>)</argument_list></call></expr></incr>)</control> <block pos:start="23:48" pos:end="39:5">{<block_content pos:start="25:9" pos:end="37:44">

        <expr_stmt pos:start="25:9" pos:end="25:78"><expr pos:start="25:9" pos:end="25:77"><name pos:start="25:9" pos:end="25:11">ret</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:77"><name pos:start="25:15" pos:end="25:38">bdrv_co_get_block_status</name><argument_list pos:start="25:39" pos:end="25:77">(<argument pos:start="25:40" pos:end="25:40"><expr pos:start="25:40" pos:end="25:40"><name pos:start="25:40" pos:end="25:40">p</name></expr></argument>, <argument pos:start="25:43" pos:end="25:52"><expr pos:start="25:43" pos:end="25:52"><name pos:start="25:43" pos:end="25:52">sector_num</name></expr></argument>, <argument pos:start="25:55" pos:end="25:64"><expr pos:start="25:55" pos:end="25:64"><name pos:start="25:55" pos:end="25:64">nb_sectors</name></expr></argument>, <argument pos:start="25:67" pos:end="25:70"><expr pos:start="25:67" pos:end="25:70"><name pos:start="25:67" pos:end="25:70">pnum</name></expr></argument>, <argument pos:start="25:73" pos:end="25:76"><expr pos:start="25:73" pos:end="25:76"><name pos:start="25:73" pos:end="25:76">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="31:9"><if pos:start="27:9" pos:end="31:9">if <condition pos:start="27:12" pos:end="27:50">(<expr pos:start="27:13" pos:end="27:49"><name pos:start="27:13" pos:end="27:15">ret</name> <operator pos:start="27:17" pos:end="27:17">&lt;</operator> <literal type="number" pos:start="27:19" pos:end="27:19">0</literal> <operator pos:start="27:21" pos:end="27:22">||</operator> <name pos:start="27:24" pos:end="27:26">ret</name> <operator pos:start="27:28" pos:end="27:28">&amp;</operator> <name pos:start="27:30" pos:end="27:49">BDRV_BLOCK_ALLOCATED</name></expr>)</condition> <block pos:start="27:52" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:18">

            <break pos:start="29:13" pos:end="29:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="33:9" pos:end="35:58">/* [sector_num, pnum] unallocated on this layer, which could be only

         * the first part of [sector_num, nb_sectors].  */</comment>

        <expr_stmt pos:start="37:9" pos:end="37:44"><expr pos:start="37:9" pos:end="37:43"><name pos:start="37:9" pos:end="37:18">nb_sectors</name> <operator pos:start="37:20" pos:end="37:20">=</operator> <call pos:start="37:22" pos:end="37:43"><name pos:start="37:22" pos:end="37:24">MIN</name><argument_list pos:start="37:25" pos:end="37:43">(<argument pos:start="37:26" pos:end="37:35"><expr pos:start="37:26" pos:end="37:35"><name pos:start="37:26" pos:end="37:35">nb_sectors</name></expr></argument>, <argument pos:start="37:38" pos:end="37:42"><expr pos:start="37:38" pos:end="37:42"><operator pos:start="37:38" pos:end="37:38">*</operator><name pos:start="37:39" pos:end="37:42">pnum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="41:5" pos:end="41:15">return <expr pos:start="41:12" pos:end="41:14"><name pos:start="41:12" pos:end="41:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
