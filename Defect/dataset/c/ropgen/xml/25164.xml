<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25164.c" pos:tabs="8"><function pos:start="1:1" pos:end="363:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">decode_cabac_residual</name><parameter_list pos:start="1:34" pos:end="1:145">( <parameter pos:start="1:36" pos:end="1:49"><decl pos:start="1:36" pos:end="1:49"><type pos:start="1:36" pos:end="1:49"><name pos:start="1:36" pos:end="1:46">H264Context</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">h</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:65"><decl pos:start="1:52" pos:end="1:65"><type pos:start="1:52" pos:end="1:65"><name pos:start="1:52" pos:end="1:58">DCTELEM</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:65">block</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:74"><decl pos:start="1:68" pos:end="1:74"><type pos:start="1:68" pos:end="1:74"><name pos:start="1:68" pos:end="1:70">int</name></type> <name pos:start="1:72" pos:end="1:74">cat</name></decl></parameter>, <parameter pos:start="1:77" pos:end="1:81"><decl pos:start="1:77" pos:end="1:81"><type pos:start="1:77" pos:end="1:81"><name pos:start="1:77" pos:end="1:79">int</name></type> <name pos:start="1:81" pos:end="1:81">n</name></decl></parameter>, <parameter pos:start="1:84" pos:end="1:107"><decl pos:start="1:84" pos:end="1:107"><type pos:start="1:84" pos:end="1:107"><specifier pos:start="1:84" pos:end="1:88">const</specifier> <name pos:start="1:90" pos:end="1:96">uint8_t</name> <modifier pos:start="1:98" pos:end="1:98">*</modifier></type><name pos:start="1:99" pos:end="1:107">scantable</name></decl></parameter>, <parameter pos:start="1:110" pos:end="1:129"><decl pos:start="1:110" pos:end="1:129"><type pos:start="1:110" pos:end="1:129"><specifier pos:start="1:110" pos:end="1:114">const</specifier> <name pos:start="1:116" pos:end="1:123">uint32_t</name> <modifier pos:start="1:125" pos:end="1:125">*</modifier></type><name pos:start="1:126" pos:end="1:129">qmul</name></decl></parameter>, <parameter pos:start="1:132" pos:end="1:144"><decl pos:start="1:132" pos:end="1:144"><type pos:start="1:132" pos:end="1:144"><name pos:start="1:132" pos:end="1:134">int</name></type> <name pos:start="1:136" pos:end="1:144">max_coeff</name></decl></parameter>)</parameter_list> <block pos:start="1:147" pos:end="363:1">{<block_content pos:start="3:5" pos:end="360:0">

    <decl_stmt pos:start="3:5" pos:end="9:6"><decl pos:start="3:5" pos:end="9:5"><type pos:start="3:5" pos:end="3:20"><specifier pos:start="3:5" pos:end="3:10">static</specifier> <specifier pos:start="3:12" pos:end="3:16">const</specifier> <name pos:start="3:18" pos:end="3:20">int</name></type> <name pos:start="3:22" pos:end="3:56"><name pos:start="3:22" pos:end="3:50">significant_coeff_flag_offset</name><index pos:start="3:51" pos:end="3:53">[<expr pos:start="3:52" pos:end="3:52"><literal type="number" pos:start="3:52" pos:end="3:52">2</literal></expr>]</index><index pos:start="3:54" pos:end="3:56">[<expr pos:start="3:55" pos:end="3:55"><literal type="number" pos:start="3:55" pos:end="3:55">6</literal></expr>]</index></name> <init pos:start="3:58" pos:end="9:5">= <expr pos:start="3:60" pos:end="9:5"><block pos:start="3:60" pos:end="9:5">{

      <expr pos:start="5:7" pos:end="5:52"><block pos:start="5:7" pos:end="5:52">{ <expr pos:start="5:9" pos:end="5:13"><literal type="number" pos:start="5:9" pos:end="5:12">105</literal><operator pos:start="5:12" pos:end="5:12">+</operator><literal type="number" pos:start="5:13" pos:end="5:13">0</literal></expr>, <expr pos:start="5:16" pos:end="5:21"><literal type="number" pos:start="5:16" pos:end="5:19">105</literal><operator pos:start="5:19" pos:end="5:19">+</operator><literal type="number" pos:start="5:20" pos:end="5:21">15</literal></expr>, <expr pos:start="5:24" pos:end="5:29"><literal type="number" pos:start="5:24" pos:end="5:27">105</literal><operator pos:start="5:27" pos:end="5:27">+</operator><literal type="number" pos:start="5:28" pos:end="5:29">29</literal></expr>, <expr pos:start="5:32" pos:end="5:37"><literal type="number" pos:start="5:32" pos:end="5:35">105</literal><operator pos:start="5:35" pos:end="5:35">+</operator><literal type="number" pos:start="5:36" pos:end="5:37">44</literal></expr>, <expr pos:start="5:40" pos:end="5:45"><literal type="number" pos:start="5:40" pos:end="5:43">105</literal><operator pos:start="5:43" pos:end="5:43">+</operator><literal type="number" pos:start="5:44" pos:end="5:45">47</literal></expr>, <expr pos:start="5:48" pos:end="5:50"><literal type="number" pos:start="5:48" pos:end="5:50">402</literal></expr> }</block></expr>,

      <expr pos:start="7:7" pos:end="7:52"><block pos:start="7:7" pos:end="7:52">{ <expr pos:start="7:9" pos:end="7:13"><literal type="number" pos:start="7:9" pos:end="7:12">277</literal><operator pos:start="7:12" pos:end="7:12">+</operator><literal type="number" pos:start="7:13" pos:end="7:13">0</literal></expr>, <expr pos:start="7:16" pos:end="7:21"><literal type="number" pos:start="7:16" pos:end="7:19">277</literal><operator pos:start="7:19" pos:end="7:19">+</operator><literal type="number" pos:start="7:20" pos:end="7:21">15</literal></expr>, <expr pos:start="7:24" pos:end="7:29"><literal type="number" pos:start="7:24" pos:end="7:27">277</literal><operator pos:start="7:27" pos:end="7:27">+</operator><literal type="number" pos:start="7:28" pos:end="7:29">29</literal></expr>, <expr pos:start="7:32" pos:end="7:37"><literal type="number" pos:start="7:32" pos:end="7:35">277</literal><operator pos:start="7:35" pos:end="7:35">+</operator><literal type="number" pos:start="7:36" pos:end="7:37">44</literal></expr>, <expr pos:start="7:40" pos:end="7:45"><literal type="number" pos:start="7:40" pos:end="7:43">277</literal><operator pos:start="7:43" pos:end="7:43">+</operator><literal type="number" pos:start="7:44" pos:end="7:45">47</literal></expr>, <expr pos:start="7:48" pos:end="7:50"><literal type="number" pos:start="7:48" pos:end="7:50">436</literal></expr> }</block></expr>

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="17:6"><decl pos:start="11:5" pos:end="17:5"><type pos:start="11:5" pos:end="11:20"><specifier pos:start="11:5" pos:end="11:10">static</specifier> <specifier pos:start="11:12" pos:end="11:16">const</specifier> <name pos:start="11:18" pos:end="11:20">int</name></type> <name pos:start="11:22" pos:end="11:49"><name pos:start="11:22" pos:end="11:43">last_coeff_flag_offset</name><index pos:start="11:44" pos:end="11:46">[<expr pos:start="11:45" pos:end="11:45"><literal type="number" pos:start="11:45" pos:end="11:45">2</literal></expr>]</index><index pos:start="11:47" pos:end="11:49">[<expr pos:start="11:48" pos:end="11:48"><literal type="number" pos:start="11:48" pos:end="11:48">6</literal></expr>]</index></name> <init pos:start="11:51" pos:end="17:5">= <expr pos:start="11:53" pos:end="17:5"><block pos:start="11:53" pos:end="17:5">{

      <expr pos:start="13:7" pos:end="13:52"><block pos:start="13:7" pos:end="13:52">{ <expr pos:start="13:9" pos:end="13:13"><literal type="number" pos:start="13:9" pos:end="13:12">166</literal><operator pos:start="13:12" pos:end="13:12">+</operator><literal type="number" pos:start="13:13" pos:end="13:13">0</literal></expr>, <expr pos:start="13:16" pos:end="13:21"><literal type="number" pos:start="13:16" pos:end="13:19">166</literal><operator pos:start="13:19" pos:end="13:19">+</operator><literal type="number" pos:start="13:20" pos:end="13:21">15</literal></expr>, <expr pos:start="13:24" pos:end="13:29"><literal type="number" pos:start="13:24" pos:end="13:27">166</literal><operator pos:start="13:27" pos:end="13:27">+</operator><literal type="number" pos:start="13:28" pos:end="13:29">29</literal></expr>, <expr pos:start="13:32" pos:end="13:37"><literal type="number" pos:start="13:32" pos:end="13:35">166</literal><operator pos:start="13:35" pos:end="13:35">+</operator><literal type="number" pos:start="13:36" pos:end="13:37">44</literal></expr>, <expr pos:start="13:40" pos:end="13:45"><literal type="number" pos:start="13:40" pos:end="13:43">166</literal><operator pos:start="13:43" pos:end="13:43">+</operator><literal type="number" pos:start="13:44" pos:end="13:45">47</literal></expr>, <expr pos:start="13:48" pos:end="13:50"><literal type="number" pos:start="13:48" pos:end="13:50">417</literal></expr> }</block></expr>,

      <expr pos:start="15:7" pos:end="15:52"><block pos:start="15:7" pos:end="15:52">{ <expr pos:start="15:9" pos:end="15:13"><literal type="number" pos:start="15:9" pos:end="15:12">338</literal><operator pos:start="15:12" pos:end="15:12">+</operator><literal type="number" pos:start="15:13" pos:end="15:13">0</literal></expr>, <expr pos:start="15:16" pos:end="15:21"><literal type="number" pos:start="15:16" pos:end="15:19">338</literal><operator pos:start="15:19" pos:end="15:19">+</operator><literal type="number" pos:start="15:20" pos:end="15:21">15</literal></expr>, <expr pos:start="15:24" pos:end="15:29"><literal type="number" pos:start="15:24" pos:end="15:27">338</literal><operator pos:start="15:27" pos:end="15:27">+</operator><literal type="number" pos:start="15:28" pos:end="15:29">29</literal></expr>, <expr pos:start="15:32" pos:end="15:37"><literal type="number" pos:start="15:32" pos:end="15:35">338</literal><operator pos:start="15:35" pos:end="15:35">+</operator><literal type="number" pos:start="15:36" pos:end="15:37">44</literal></expr>, <expr pos:start="15:40" pos:end="15:45"><literal type="number" pos:start="15:40" pos:end="15:43">338</literal><operator pos:start="15:43" pos:end="15:43">+</operator><literal type="number" pos:start="15:44" pos:end="15:45">47</literal></expr>, <expr pos:start="15:48" pos:end="15:50"><literal type="number" pos:start="15:48" pos:end="15:50">451</literal></expr> }</block></expr>

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="23:6"><decl pos:start="19:5" pos:end="23:5"><type pos:start="19:5" pos:end="19:20"><specifier pos:start="19:5" pos:end="19:10">static</specifier> <specifier pos:start="19:12" pos:end="19:16">const</specifier> <name pos:start="19:18" pos:end="19:20">int</name></type> <name pos:start="19:22" pos:end="19:49"><name pos:start="19:22" pos:end="19:46">coeff_abs_level_m1_offset</name><index pos:start="19:47" pos:end="19:49">[<expr pos:start="19:48" pos:end="19:48"><literal type="number" pos:start="19:48" pos:end="19:48">6</literal></expr>]</index></name> <init pos:start="19:51" pos:end="23:5">= <expr pos:start="19:53" pos:end="23:5"><block pos:start="19:53" pos:end="23:5">{

        <expr pos:start="21:9" pos:end="21:13"><literal type="number" pos:start="21:9" pos:end="21:12">227</literal><operator pos:start="21:12" pos:end="21:12">+</operator><literal type="number" pos:start="21:13" pos:end="21:13">0</literal></expr>, <expr pos:start="21:16" pos:end="21:21"><literal type="number" pos:start="21:16" pos:end="21:19">227</literal><operator pos:start="21:19" pos:end="21:19">+</operator><literal type="number" pos:start="21:20" pos:end="21:21">10</literal></expr>, <expr pos:start="21:24" pos:end="21:29"><literal type="number" pos:start="21:24" pos:end="21:27">227</literal><operator pos:start="21:27" pos:end="21:27">+</operator><literal type="number" pos:start="21:28" pos:end="21:29">20</literal></expr>, <expr pos:start="21:32" pos:end="21:37"><literal type="number" pos:start="21:32" pos:end="21:35">227</literal><operator pos:start="21:35" pos:end="21:35">+</operator><literal type="number" pos:start="21:36" pos:end="21:37">30</literal></expr>, <expr pos:start="21:40" pos:end="21:45"><literal type="number" pos:start="21:40" pos:end="21:43">227</literal><operator pos:start="21:43" pos:end="21:43">+</operator><literal type="number" pos:start="21:44" pos:end="21:45">39</literal></expr>, <expr pos:start="21:48" pos:end="21:50"><literal type="number" pos:start="21:48" pos:end="21:50">426</literal></expr>

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="43:6"><decl pos:start="25:5" pos:end="43:5"><type pos:start="25:5" pos:end="25:24"><specifier pos:start="25:5" pos:end="25:10">static</specifier> <specifier pos:start="25:12" pos:end="25:16">const</specifier> <name pos:start="25:18" pos:end="25:24">uint8_t</name></type> <name pos:start="25:26" pos:end="25:65"><name pos:start="25:26" pos:end="25:58">significant_coeff_flag_offset_8x8</name><index pos:start="25:59" pos:end="25:61">[<expr pos:start="25:60" pos:end="25:60"><literal type="number" pos:start="25:60" pos:end="25:60">2</literal></expr>]</index><index pos:start="25:62" pos:end="25:65">[<expr pos:start="25:63" pos:end="25:64"><literal type="number" pos:start="25:63" pos:end="25:64">63</literal></expr>]</index></name> <init pos:start="25:67" pos:end="43:5">= <expr pos:start="25:69" pos:end="43:5"><block pos:start="25:69" pos:end="43:5">{

      <expr pos:start="27:7" pos:end="33:53"><block pos:start="27:7" pos:end="33:53">{ <expr pos:start="27:9" pos:end="27:9"><literal type="number" pos:start="27:9" pos:end="27:9">0</literal></expr>, <expr pos:start="27:12" pos:end="27:12"><literal type="number" pos:start="27:12" pos:end="27:12">1</literal></expr>, <expr pos:start="27:15" pos:end="27:15"><literal type="number" pos:start="27:15" pos:end="27:15">2</literal></expr>, <expr pos:start="27:18" pos:end="27:18"><literal type="number" pos:start="27:18" pos:end="27:18">3</literal></expr>, <expr pos:start="27:21" pos:end="27:21"><literal type="number" pos:start="27:21" pos:end="27:21">4</literal></expr>, <expr pos:start="27:24" pos:end="27:24"><literal type="number" pos:start="27:24" pos:end="27:24">5</literal></expr>, <expr pos:start="27:27" pos:end="27:27"><literal type="number" pos:start="27:27" pos:end="27:27">5</literal></expr>, <expr pos:start="27:30" pos:end="27:30"><literal type="number" pos:start="27:30" pos:end="27:30">4</literal></expr>, <expr pos:start="27:33" pos:end="27:33"><literal type="number" pos:start="27:33" pos:end="27:33">4</literal></expr>, <expr pos:start="27:36" pos:end="27:36"><literal type="number" pos:start="27:36" pos:end="27:36">3</literal></expr>, <expr pos:start="27:39" pos:end="27:39"><literal type="number" pos:start="27:39" pos:end="27:39">3</literal></expr>, <expr pos:start="27:42" pos:end="27:42"><literal type="number" pos:start="27:42" pos:end="27:42">4</literal></expr>, <expr pos:start="27:45" pos:end="27:45"><literal type="number" pos:start="27:45" pos:end="27:45">4</literal></expr>, <expr pos:start="27:48" pos:end="27:48"><literal type="number" pos:start="27:48" pos:end="27:48">4</literal></expr>, <expr pos:start="27:51" pos:end="27:51"><literal type="number" pos:start="27:51" pos:end="27:51">5</literal></expr>, <expr pos:start="27:54" pos:end="27:54"><literal type="number" pos:start="27:54" pos:end="27:54">5</literal></expr>,

        <expr pos:start="29:9" pos:end="29:9"><literal type="number" pos:start="29:9" pos:end="29:9">4</literal></expr>, <expr pos:start="29:12" pos:end="29:12"><literal type="number" pos:start="29:12" pos:end="29:12">4</literal></expr>, <expr pos:start="29:15" pos:end="29:15"><literal type="number" pos:start="29:15" pos:end="29:15">4</literal></expr>, <expr pos:start="29:18" pos:end="29:18"><literal type="number" pos:start="29:18" pos:end="29:18">4</literal></expr>, <expr pos:start="29:21" pos:end="29:21"><literal type="number" pos:start="29:21" pos:end="29:21">3</literal></expr>, <expr pos:start="29:24" pos:end="29:24"><literal type="number" pos:start="29:24" pos:end="29:24">3</literal></expr>, <expr pos:start="29:27" pos:end="29:27"><literal type="number" pos:start="29:27" pos:end="29:27">6</literal></expr>, <expr pos:start="29:30" pos:end="29:30"><literal type="number" pos:start="29:30" pos:end="29:30">7</literal></expr>, <expr pos:start="29:33" pos:end="29:33"><literal type="number" pos:start="29:33" pos:end="29:33">7</literal></expr>, <expr pos:start="29:36" pos:end="29:36"><literal type="number" pos:start="29:36" pos:end="29:36">7</literal></expr>, <expr pos:start="29:39" pos:end="29:39"><literal type="number" pos:start="29:39" pos:end="29:39">8</literal></expr>, <expr pos:start="29:42" pos:end="29:42"><literal type="number" pos:start="29:42" pos:end="29:42">9</literal></expr>,<expr pos:start="29:44" pos:end="29:45"><literal type="number" pos:start="29:44" pos:end="29:45">10</literal></expr>, <expr pos:start="29:48" pos:end="29:48"><literal type="number" pos:start="29:48" pos:end="29:48">9</literal></expr>, <expr pos:start="29:51" pos:end="29:51"><literal type="number" pos:start="29:51" pos:end="29:51">8</literal></expr>, <expr pos:start="29:54" pos:end="29:54"><literal type="number" pos:start="29:54" pos:end="29:54">7</literal></expr>,

        <expr pos:start="31:9" pos:end="31:9"><literal type="number" pos:start="31:9" pos:end="31:9">7</literal></expr>, <expr pos:start="31:12" pos:end="31:12"><literal type="number" pos:start="31:12" pos:end="31:12">6</literal></expr>,<expr pos:start="31:14" pos:end="31:15"><literal type="number" pos:start="31:14" pos:end="31:15">11</literal></expr>,<expr pos:start="31:17" pos:end="31:18"><literal type="number" pos:start="31:17" pos:end="31:18">12</literal></expr>,<expr pos:start="31:20" pos:end="31:21"><literal type="number" pos:start="31:20" pos:end="31:21">13</literal></expr>,<expr pos:start="31:23" pos:end="31:24"><literal type="number" pos:start="31:23" pos:end="31:24">11</literal></expr>, <expr pos:start="31:27" pos:end="31:27"><literal type="number" pos:start="31:27" pos:end="31:27">6</literal></expr>, <expr pos:start="31:30" pos:end="31:30"><literal type="number" pos:start="31:30" pos:end="31:30">7</literal></expr>, <expr pos:start="31:33" pos:end="31:33"><literal type="number" pos:start="31:33" pos:end="31:33">8</literal></expr>, <expr pos:start="31:36" pos:end="31:36"><literal type="number" pos:start="31:36" pos:end="31:36">9</literal></expr>,<expr pos:start="31:38" pos:end="31:39"><literal type="number" pos:start="31:38" pos:end="31:39">14</literal></expr>,<expr pos:start="31:41" pos:end="31:42"><literal type="number" pos:start="31:41" pos:end="31:42">10</literal></expr>, <expr pos:start="31:45" pos:end="31:45"><literal type="number" pos:start="31:45" pos:end="31:45">9</literal></expr>, <expr pos:start="31:48" pos:end="31:48"><literal type="number" pos:start="31:48" pos:end="31:48">8</literal></expr>, <expr pos:start="31:51" pos:end="31:51"><literal type="number" pos:start="31:51" pos:end="31:51">6</literal></expr>,<expr pos:start="31:53" pos:end="31:54"><literal type="number" pos:start="31:53" pos:end="31:54">11</literal></expr>,

       <expr pos:start="33:8" pos:end="33:9"><literal type="number" pos:start="33:8" pos:end="33:9">12</literal></expr>,<expr pos:start="33:11" pos:end="33:12"><literal type="number" pos:start="33:11" pos:end="33:12">13</literal></expr>,<expr pos:start="33:14" pos:end="33:15"><literal type="number" pos:start="33:14" pos:end="33:15">11</literal></expr>, <expr pos:start="33:18" pos:end="33:18"><literal type="number" pos:start="33:18" pos:end="33:18">6</literal></expr>, <expr pos:start="33:21" pos:end="33:21"><literal type="number" pos:start="33:21" pos:end="33:21">9</literal></expr>,<expr pos:start="33:23" pos:end="33:24"><literal type="number" pos:start="33:23" pos:end="33:24">14</literal></expr>,<expr pos:start="33:26" pos:end="33:27"><literal type="number" pos:start="33:26" pos:end="33:27">10</literal></expr>, <expr pos:start="33:30" pos:end="33:30"><literal type="number" pos:start="33:30" pos:end="33:30">9</literal></expr>,<expr pos:start="33:32" pos:end="33:33"><literal type="number" pos:start="33:32" pos:end="33:33">11</literal></expr>,<expr pos:start="33:35" pos:end="33:36"><literal type="number" pos:start="33:35" pos:end="33:36">12</literal></expr>,<expr pos:start="33:38" pos:end="33:39"><literal type="number" pos:start="33:38" pos:end="33:39">13</literal></expr>,<expr pos:start="33:41" pos:end="33:42"><literal type="number" pos:start="33:41" pos:end="33:42">11</literal></expr>,<expr pos:start="33:44" pos:end="33:45"><literal type="number" pos:start="33:44" pos:end="33:45">14</literal></expr>,<expr pos:start="33:47" pos:end="33:48"><literal type="number" pos:start="33:47" pos:end="33:48">10</literal></expr>,<expr pos:start="33:50" pos:end="33:51"><literal type="number" pos:start="33:50" pos:end="33:51">12</literal></expr> }</block></expr>,

      <expr pos:start="35:7" pos:end="41:53"><block pos:start="35:7" pos:end="41:53">{ <expr pos:start="35:9" pos:end="35:9"><literal type="number" pos:start="35:9" pos:end="35:9">0</literal></expr>, <expr pos:start="35:12" pos:end="35:12"><literal type="number" pos:start="35:12" pos:end="35:12">1</literal></expr>, <expr pos:start="35:15" pos:end="35:15"><literal type="number" pos:start="35:15" pos:end="35:15">1</literal></expr>, <expr pos:start="35:18" pos:end="35:18"><literal type="number" pos:start="35:18" pos:end="35:18">2</literal></expr>, <expr pos:start="35:21" pos:end="35:21"><literal type="number" pos:start="35:21" pos:end="35:21">2</literal></expr>, <expr pos:start="35:24" pos:end="35:24"><literal type="number" pos:start="35:24" pos:end="35:24">3</literal></expr>, <expr pos:start="35:27" pos:end="35:27"><literal type="number" pos:start="35:27" pos:end="35:27">3</literal></expr>, <expr pos:start="35:30" pos:end="35:30"><literal type="number" pos:start="35:30" pos:end="35:30">4</literal></expr>, <expr pos:start="35:33" pos:end="35:33"><literal type="number" pos:start="35:33" pos:end="35:33">5</literal></expr>, <expr pos:start="35:36" pos:end="35:36"><literal type="number" pos:start="35:36" pos:end="35:36">6</literal></expr>, <expr pos:start="35:39" pos:end="35:39"><literal type="number" pos:start="35:39" pos:end="35:39">7</literal></expr>, <expr pos:start="35:42" pos:end="35:42"><literal type="number" pos:start="35:42" pos:end="35:42">7</literal></expr>, <expr pos:start="35:45" pos:end="35:45"><literal type="number" pos:start="35:45" pos:end="35:45">7</literal></expr>, <expr pos:start="35:48" pos:end="35:48"><literal type="number" pos:start="35:48" pos:end="35:48">8</literal></expr>, <expr pos:start="35:51" pos:end="35:51"><literal type="number" pos:start="35:51" pos:end="35:51">4</literal></expr>, <expr pos:start="35:54" pos:end="35:54"><literal type="number" pos:start="35:54" pos:end="35:54">5</literal></expr>,

        <expr pos:start="37:9" pos:end="37:9"><literal type="number" pos:start="37:9" pos:end="37:9">6</literal></expr>, <expr pos:start="37:12" pos:end="37:12"><literal type="number" pos:start="37:12" pos:end="37:12">9</literal></expr>,<expr pos:start="37:14" pos:end="37:15"><literal type="number" pos:start="37:14" pos:end="37:15">10</literal></expr>,<expr pos:start="37:17" pos:end="37:18"><literal type="number" pos:start="37:17" pos:end="37:18">10</literal></expr>, <expr pos:start="37:21" pos:end="37:21"><literal type="number" pos:start="37:21" pos:end="37:21">8</literal></expr>,<expr pos:start="37:23" pos:end="37:24"><literal type="number" pos:start="37:23" pos:end="37:24">11</literal></expr>,<expr pos:start="37:26" pos:end="37:27"><literal type="number" pos:start="37:26" pos:end="37:27">12</literal></expr>,<expr pos:start="37:29" pos:end="37:30"><literal type="number" pos:start="37:29" pos:end="37:30">11</literal></expr>, <expr pos:start="37:33" pos:end="37:33"><literal type="number" pos:start="37:33" pos:end="37:33">9</literal></expr>, <expr pos:start="37:36" pos:end="37:36"><literal type="number" pos:start="37:36" pos:end="37:36">9</literal></expr>,<expr pos:start="37:38" pos:end="37:39"><literal type="number" pos:start="37:38" pos:end="37:39">10</literal></expr>,<expr pos:start="37:41" pos:end="37:42"><literal type="number" pos:start="37:41" pos:end="37:42">10</literal></expr>, <expr pos:start="37:45" pos:end="37:45"><literal type="number" pos:start="37:45" pos:end="37:45">8</literal></expr>,<expr pos:start="37:47" pos:end="37:48"><literal type="number" pos:start="37:47" pos:end="37:48">11</literal></expr>,<expr pos:start="37:50" pos:end="37:51"><literal type="number" pos:start="37:50" pos:end="37:51">12</literal></expr>,<expr pos:start="37:53" pos:end="37:54"><literal type="number" pos:start="37:53" pos:end="37:54">11</literal></expr>,

        <expr pos:start="39:9" pos:end="39:9"><literal type="number" pos:start="39:9" pos:end="39:9">9</literal></expr>, <expr pos:start="39:12" pos:end="39:12"><literal type="number" pos:start="39:12" pos:end="39:12">9</literal></expr>,<expr pos:start="39:14" pos:end="39:15"><literal type="number" pos:start="39:14" pos:end="39:15">10</literal></expr>,<expr pos:start="39:17" pos:end="39:18"><literal type="number" pos:start="39:17" pos:end="39:18">10</literal></expr>, <expr pos:start="39:21" pos:end="39:21"><literal type="number" pos:start="39:21" pos:end="39:21">8</literal></expr>,<expr pos:start="39:23" pos:end="39:24"><literal type="number" pos:start="39:23" pos:end="39:24">11</literal></expr>,<expr pos:start="39:26" pos:end="39:27"><literal type="number" pos:start="39:26" pos:end="39:27">12</literal></expr>,<expr pos:start="39:29" pos:end="39:30"><literal type="number" pos:start="39:29" pos:end="39:30">11</literal></expr>, <expr pos:start="39:33" pos:end="39:33"><literal type="number" pos:start="39:33" pos:end="39:33">9</literal></expr>, <expr pos:start="39:36" pos:end="39:36"><literal type="number" pos:start="39:36" pos:end="39:36">9</literal></expr>,<expr pos:start="39:38" pos:end="39:39"><literal type="number" pos:start="39:38" pos:end="39:39">10</literal></expr>,<expr pos:start="39:41" pos:end="39:42"><literal type="number" pos:start="39:41" pos:end="39:42">10</literal></expr>, <expr pos:start="39:45" pos:end="39:45"><literal type="number" pos:start="39:45" pos:end="39:45">8</literal></expr>,<expr pos:start="39:47" pos:end="39:48"><literal type="number" pos:start="39:47" pos:end="39:48">13</literal></expr>,<expr pos:start="39:50" pos:end="39:51"><literal type="number" pos:start="39:50" pos:end="39:51">13</literal></expr>, <expr pos:start="39:54" pos:end="39:54"><literal type="number" pos:start="39:54" pos:end="39:54">9</literal></expr>,

        <expr pos:start="41:9" pos:end="41:9"><literal type="number" pos:start="41:9" pos:end="41:9">9</literal></expr>,<expr pos:start="41:11" pos:end="41:12"><literal type="number" pos:start="41:11" pos:end="41:12">10</literal></expr>,<expr pos:start="41:14" pos:end="41:15"><literal type="number" pos:start="41:14" pos:end="41:15">10</literal></expr>, <expr pos:start="41:18" pos:end="41:18"><literal type="number" pos:start="41:18" pos:end="41:18">8</literal></expr>,<expr pos:start="41:20" pos:end="41:21"><literal type="number" pos:start="41:20" pos:end="41:21">13</literal></expr>,<expr pos:start="41:23" pos:end="41:24"><literal type="number" pos:start="41:23" pos:end="41:24">13</literal></expr>, <expr pos:start="41:27" pos:end="41:27"><literal type="number" pos:start="41:27" pos:end="41:27">9</literal></expr>, <expr pos:start="41:30" pos:end="41:30"><literal type="number" pos:start="41:30" pos:end="41:30">9</literal></expr>,<expr pos:start="41:32" pos:end="41:33"><literal type="number" pos:start="41:32" pos:end="41:33">10</literal></expr>,<expr pos:start="41:35" pos:end="41:36"><literal type="number" pos:start="41:35" pos:end="41:36">10</literal></expr>,<expr pos:start="41:38" pos:end="41:39"><literal type="number" pos:start="41:38" pos:end="41:39">14</literal></expr>,<expr pos:start="41:41" pos:end="41:42"><literal type="number" pos:start="41:41" pos:end="41:42">14</literal></expr>,<expr pos:start="41:44" pos:end="41:45"><literal type="number" pos:start="41:44" pos:end="41:45">14</literal></expr>,<expr pos:start="41:47" pos:end="41:48"><literal type="number" pos:start="41:47" pos:end="41:48">14</literal></expr>,<expr pos:start="41:50" pos:end="41:51"><literal type="number" pos:start="41:50" pos:end="41:51">14</literal></expr> }</block></expr>

    }</block></expr></init></decl>;</decl_stmt>

    <comment type="block" pos:start="45:5" pos:end="49:47">/* node ctx: 0..3: abslevel1 (with abslevelgt1 == 0).

     * 4..7: abslevelgt1 + 3 (and abslevel1 doesn't matter).

     * map node ctx =&gt; cabac ctx for level=1 */</comment>

    <decl_stmt pos:start="51:5" pos:end="51:78"><decl pos:start="51:5" pos:end="51:77"><type pos:start="51:5" pos:end="51:24"><specifier pos:start="51:5" pos:end="51:10">static</specifier> <specifier pos:start="51:12" pos:end="51:16">const</specifier> <name pos:start="51:18" pos:end="51:24">uint8_t</name></type> <name pos:start="51:26" pos:end="51:48"><name pos:start="51:26" pos:end="51:45">coeff_abs_level1_ctx</name><index pos:start="51:46" pos:end="51:48">[<expr pos:start="51:47" pos:end="51:47"><literal type="number" pos:start="51:47" pos:end="51:47">8</literal></expr>]</index></name> <init pos:start="51:50" pos:end="51:77">= <expr pos:start="51:52" pos:end="51:77"><block pos:start="51:52" pos:end="51:77">{ <expr pos:start="51:54" pos:end="51:54"><literal type="number" pos:start="51:54" pos:end="51:54">1</literal></expr>, <expr pos:start="51:57" pos:end="51:57"><literal type="number" pos:start="51:57" pos:end="51:57">2</literal></expr>, <expr pos:start="51:60" pos:end="51:60"><literal type="number" pos:start="51:60" pos:end="51:60">3</literal></expr>, <expr pos:start="51:63" pos:end="51:63"><literal type="number" pos:start="51:63" pos:end="51:63">4</literal></expr>, <expr pos:start="51:66" pos:end="51:66"><literal type="number" pos:start="51:66" pos:end="51:66">0</literal></expr>, <expr pos:start="51:69" pos:end="51:69"><literal type="number" pos:start="51:69" pos:end="51:69">0</literal></expr>, <expr pos:start="51:72" pos:end="51:72"><literal type="number" pos:start="51:72" pos:end="51:72">0</literal></expr>, <expr pos:start="51:75" pos:end="51:75"><literal type="number" pos:start="51:75" pos:end="51:75">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <comment type="block" pos:start="53:5" pos:end="53:47">/* map node ctx =&gt; cabac ctx for level&gt;1 */</comment>

    <decl_stmt pos:start="55:5" pos:end="55:80"><decl pos:start="55:5" pos:end="55:79"><type pos:start="55:5" pos:end="55:24"><specifier pos:start="55:5" pos:end="55:10">static</specifier> <specifier pos:start="55:12" pos:end="55:16">const</specifier> <name pos:start="55:18" pos:end="55:24">uint8_t</name></type> <name pos:start="55:26" pos:end="55:50"><name pos:start="55:26" pos:end="55:47">coeff_abs_levelgt1_ctx</name><index pos:start="55:48" pos:end="55:50">[<expr pos:start="55:49" pos:end="55:49"><literal type="number" pos:start="55:49" pos:end="55:49">8</literal></expr>]</index></name> <init pos:start="55:52" pos:end="55:79">= <expr pos:start="55:54" pos:end="55:79"><block pos:start="55:54" pos:end="55:79">{ <expr pos:start="55:56" pos:end="55:56"><literal type="number" pos:start="55:56" pos:end="55:56">5</literal></expr>, <expr pos:start="55:59" pos:end="55:59"><literal type="number" pos:start="55:59" pos:end="55:59">5</literal></expr>, <expr pos:start="55:62" pos:end="55:62"><literal type="number" pos:start="55:62" pos:end="55:62">5</literal></expr>, <expr pos:start="55:65" pos:end="55:65"><literal type="number" pos:start="55:65" pos:end="55:65">5</literal></expr>, <expr pos:start="55:68" pos:end="55:68"><literal type="number" pos:start="55:68" pos:end="55:68">6</literal></expr>, <expr pos:start="55:71" pos:end="55:71"><literal type="number" pos:start="55:71" pos:end="55:71">7</literal></expr>, <expr pos:start="55:74" pos:end="55:74"><literal type="number" pos:start="55:74" pos:end="55:74">8</literal></expr>, <expr pos:start="55:77" pos:end="55:77"><literal type="number" pos:start="55:77" pos:end="55:77">9</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="57:5" pos:end="67:6"><decl pos:start="57:5" pos:end="67:5"><type pos:start="57:5" pos:end="57:24"><specifier pos:start="57:5" pos:end="57:10">static</specifier> <specifier pos:start="57:12" pos:end="57:16">const</specifier> <name pos:start="57:18" pos:end="57:24">uint8_t</name></type> <name pos:start="57:26" pos:end="57:57"><name pos:start="57:26" pos:end="57:51">coeff_abs_level_transition</name><index pos:start="57:52" pos:end="57:54">[<expr pos:start="57:53" pos:end="57:53"><literal type="number" pos:start="57:53" pos:end="57:53">2</literal></expr>]</index><index pos:start="57:55" pos:end="57:57">[<expr pos:start="57:56" pos:end="57:56"><literal type="number" pos:start="57:56" pos:end="57:56">8</literal></expr>]</index></name> <init pos:start="57:59" pos:end="67:5">= <expr pos:start="57:61" pos:end="67:5"><block pos:start="57:61" pos:end="67:5">{

    <comment type="block" pos:start="59:5" pos:end="59:50">/* update node ctx after decoding a level=1 */</comment>

        <expr pos:start="61:9" pos:end="61:34"><block pos:start="61:9" pos:end="61:34">{ <expr pos:start="61:11" pos:end="61:11"><literal type="number" pos:start="61:11" pos:end="61:11">1</literal></expr>, <expr pos:start="61:14" pos:end="61:14"><literal type="number" pos:start="61:14" pos:end="61:14">2</literal></expr>, <expr pos:start="61:17" pos:end="61:17"><literal type="number" pos:start="61:17" pos:end="61:17">3</literal></expr>, <expr pos:start="61:20" pos:end="61:20"><literal type="number" pos:start="61:20" pos:end="61:20">3</literal></expr>, <expr pos:start="61:23" pos:end="61:23"><literal type="number" pos:start="61:23" pos:end="61:23">4</literal></expr>, <expr pos:start="61:26" pos:end="61:26"><literal type="number" pos:start="61:26" pos:end="61:26">5</literal></expr>, <expr pos:start="61:29" pos:end="61:29"><literal type="number" pos:start="61:29" pos:end="61:29">6</literal></expr>, <expr pos:start="61:32" pos:end="61:32"><literal type="number" pos:start="61:32" pos:end="61:32">7</literal></expr> }</block></expr>,

    <comment type="block" pos:start="63:5" pos:end="63:50">/* update node ctx after decoding a level&gt;1 */</comment>

        <expr pos:start="65:9" pos:end="65:34"><block pos:start="65:9" pos:end="65:34">{ <expr pos:start="65:11" pos:end="65:11"><literal type="number" pos:start="65:11" pos:end="65:11">4</literal></expr>, <expr pos:start="65:14" pos:end="65:14"><literal type="number" pos:start="65:14" pos:end="65:14">4</literal></expr>, <expr pos:start="65:17" pos:end="65:17"><literal type="number" pos:start="65:17" pos:end="65:17">4</literal></expr>, <expr pos:start="65:20" pos:end="65:20"><literal type="number" pos:start="65:20" pos:end="65:20">4</literal></expr>, <expr pos:start="65:23" pos:end="65:23"><literal type="number" pos:start="65:23" pos:end="65:23">5</literal></expr>, <expr pos:start="65:26" pos:end="65:26"><literal type="number" pos:start="65:26" pos:end="65:26">6</literal></expr>, <expr pos:start="65:29" pos:end="65:29"><literal type="number" pos:start="65:29" pos:end="65:29">7</literal></expr>, <expr pos:start="65:32" pos:end="65:32"><literal type="number" pos:start="65:32" pos:end="65:32">7</literal></expr> }</block></expr>

    }</block></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="71:5" pos:end="71:18"><decl pos:start="71:5" pos:end="71:17"><type pos:start="71:5" pos:end="71:7"><name pos:start="71:5" pos:end="71:7">int</name></type> <name pos:start="71:9" pos:end="71:17"><name pos:start="71:9" pos:end="71:13">index</name><index pos:start="71:14" pos:end="71:17">[<expr pos:start="71:15" pos:end="71:16"><literal type="number" pos:start="71:15" pos:end="71:16">64</literal></expr>]</index></name></decl>;</decl_stmt>



    <decl_stmt pos:start="75:5" pos:end="75:23"><decl pos:start="75:5" pos:end="75:22"><type pos:start="75:5" pos:end="75:17"><name pos:start="75:5" pos:end="75:7">int</name> <name pos:start="75:9" pos:end="75:17">av_unused</name></type> <name pos:start="75:19" pos:end="75:22">last</name></decl>;</decl_stmt>

    <decl_stmt pos:start="77:5" pos:end="77:24"><decl pos:start="77:5" pos:end="77:23"><type pos:start="77:5" pos:end="77:7"><name pos:start="77:5" pos:end="77:7">int</name></type> <name pos:start="77:9" pos:end="77:19">coeff_count</name> <init pos:start="77:21" pos:end="77:23">= <expr pos:start="77:23" pos:end="77:23"><literal type="number" pos:start="77:23" pos:end="77:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="79:5" pos:end="79:21"><decl pos:start="79:5" pos:end="79:20"><type pos:start="79:5" pos:end="79:7"><name pos:start="79:5" pos:end="79:7">int</name></type> <name pos:start="79:9" pos:end="79:16">node_ctx</name> <init pos:start="79:18" pos:end="79:20">= <expr pos:start="79:20" pos:end="79:20"><literal type="number" pos:start="79:20" pos:end="79:20">0</literal></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="83:5" pos:end="83:40"><decl pos:start="83:5" pos:end="83:39"><type pos:start="83:5" pos:end="83:13"><name pos:start="83:5" pos:end="83:11">uint8_t</name> <modifier pos:start="83:13" pos:end="83:13">*</modifier></type><name pos:start="83:14" pos:end="83:39">significant_coeff_ctx_base</name></decl>;</decl_stmt>

    <decl_stmt pos:start="85:5" pos:end="85:33"><decl pos:start="85:5" pos:end="85:32"><type pos:start="85:5" pos:end="85:13"><name pos:start="85:5" pos:end="85:11">uint8_t</name> <modifier pos:start="85:13" pos:end="85:13">*</modifier></type><name pos:start="85:14" pos:end="85:32">last_coeff_ctx_base</name></decl>;</decl_stmt>

    <decl_stmt pos:start="87:5" pos:end="100:0"><decl pos:start="87:5" pos:end="87:34"><type pos:start="87:5" pos:end="87:13"><name pos:start="87:5" pos:end="87:11">uint8_t</name> <modifier pos:start="87:13" pos:end="87:13">*</modifier></type><name pos:start="87:14" pos:end="87:34">abs_level_m1_ctx_base</name></decl>;</decl_stmt>



<cpp:ifndef pos:start="91:1" pos:end="91:16">#<cpp:directive pos:start="91:2" pos:end="91:7">ifndef</cpp:directive> <name pos:start="91:9" pos:end="91:16">ARCH_X86</name></cpp:ifndef>

<cpp:define pos:start="93:1" pos:end="93:22">#<cpp:directive pos:start="93:2" pos:end="93:7">define</cpp:directive> <cpp:macro pos:start="93:9" pos:end="93:22"><name pos:start="93:9" pos:end="93:22">CABAC_ON_STACK</name></cpp:macro></cpp:define>

<cpp:endif pos:start="95:1" pos:end="95:6">#<cpp:directive pos:start="95:2" pos:end="95:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="97:1" pos:end="97:21">#<cpp:directive pos:start="97:2" pos:end="97:6">ifdef</cpp:directive> <name pos:start="97:8" pos:end="97:21">CABAC_ON_STACK</name></cpp:ifdef>

<cpp:define pos:start="99:1" pos:end="99:14">#<cpp:directive pos:start="99:2" pos:end="99:7">define</cpp:directive> <cpp:macro pos:start="99:9" pos:end="99:10"><name pos:start="99:9" pos:end="99:10">CC</name></cpp:macro> <cpp:value pos:start="99:12" pos:end="99:14">&amp;cc</cpp:value></cpp:define>

    <decl_stmt pos:start="101:5" pos:end="101:20"><decl pos:start="101:5" pos:end="101:19"><type pos:start="101:5" pos:end="101:16"><name pos:start="101:5" pos:end="101:16">CABACContext</name></type> <name pos:start="101:18" pos:end="101:19">cc</name></decl>;</decl_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:34"><expr pos:start="103:5" pos:end="103:33"><name pos:start="103:5" pos:end="103:12"><name pos:start="103:5" pos:end="103:6">cc</name><operator pos:start="103:7" pos:end="103:7">.</operator><name pos:start="103:8" pos:end="103:12">range</name></name>     <operator pos:start="103:18" pos:end="103:18">=</operator> <name pos:start="103:20" pos:end="103:33"><name pos:start="103:20" pos:end="103:20">h</name><operator pos:start="103:21" pos:end="103:22">-&gt;</operator><name pos:start="103:23" pos:end="103:27">cabac</name><operator pos:start="103:28" pos:end="103:28">.</operator><name pos:start="103:29" pos:end="103:33">range</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:32"><expr pos:start="105:5" pos:end="105:31"><name pos:start="105:5" pos:end="105:10"><name pos:start="105:5" pos:end="105:6">cc</name><operator pos:start="105:7" pos:end="105:7">.</operator><name pos:start="105:8" pos:end="105:10">low</name></name>       <operator pos:start="105:18" pos:end="105:18">=</operator> <name pos:start="105:20" pos:end="105:31"><name pos:start="105:20" pos:end="105:20">h</name><operator pos:start="105:21" pos:end="105:22">-&gt;</operator><name pos:start="105:23" pos:end="105:27">cabac</name><operator pos:start="105:28" pos:end="105:28">.</operator><name pos:start="105:29" pos:end="105:31">low</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="114:0"><expr pos:start="107:5" pos:end="107:38"><name pos:start="107:5" pos:end="107:17"><name pos:start="107:5" pos:end="107:6">cc</name><operator pos:start="107:7" pos:end="107:7">.</operator><name pos:start="107:8" pos:end="107:17">bytestream</name></name><operator pos:start="107:18" pos:end="107:18">=</operator> <name pos:start="107:20" pos:end="107:38"><name pos:start="107:20" pos:end="107:20">h</name><operator pos:start="107:21" pos:end="107:22">-&gt;</operator><name pos:start="107:23" pos:end="107:27">cabac</name><operator pos:start="107:28" pos:end="107:28">.</operator><name pos:start="107:29" pos:end="107:38">bytestream</name></name></expr>;</expr_stmt>

<cpp:else pos:start="109:1" pos:end="109:5">#<cpp:directive pos:start="109:2" pos:end="109:5">else</cpp:directive></cpp:else>

<cpp:define pos:start="111:1" pos:end="111:20">#<cpp:directive pos:start="111:2" pos:end="111:7">define</cpp:directive> <cpp:macro pos:start="111:9" pos:end="111:10"><name pos:start="111:9" pos:end="111:10">CC</name></cpp:macro> <cpp:value pos:start="111:12" pos:end="111:20">&amp;h-&gt;cabac</cpp:value></cpp:define>

<cpp:endif pos:start="113:1" pos:end="113:6">#<cpp:directive pos:start="113:2" pos:end="113:6">endif</cpp:directive></cpp:endif>





    <comment type="block" pos:start="119:5" pos:end="131:7">/* cat: 0-&gt; DC 16x16  n = 0

     *      1-&gt; AC 16x16  n = luma4x4idx

     *      2-&gt; Luma4x4   n = luma4x4idx

     *      3-&gt; DC Chroma n = iCbCr

     *      4-&gt; AC Chroma n = 4 * iCbCr + chroma4x4idx

     *      5-&gt; Luma8x8   n = 4 * luma8x8idx

     */</comment>



    <comment type="block" pos:start="135:5" pos:end="135:31">/* read coded block flag */</comment>

    <if_stmt pos:start="137:5" pos:end="163:5"><if pos:start="137:5" pos:end="163:5">if<condition pos:start="137:7" pos:end="137:18">( <expr pos:start="137:9" pos:end="137:16"><name pos:start="137:9" pos:end="137:11">cat</name> <operator pos:start="137:13" pos:end="137:14">!=</operator> <literal type="number" pos:start="137:16" pos:end="137:16">5</literal></expr> )</condition> <block pos:start="137:20" pos:end="163:5">{<block_content pos:start="139:9" pos:end="161:9">

        <if_stmt pos:start="139:9" pos:end="161:9"><if pos:start="139:9" pos:end="161:9">if<condition pos:start="139:11" pos:end="139:89">( <expr pos:start="139:13" pos:end="139:87"><call pos:start="139:13" pos:end="139:82"><name pos:start="139:13" pos:end="139:21">get_cabac</name><argument_list pos:start="139:22" pos:end="139:82">( <argument pos:start="139:24" pos:end="139:25"><expr pos:start="139:24" pos:end="139:25"><name pos:start="139:24" pos:end="139:25">CC</name></expr></argument>, <argument pos:start="139:28" pos:end="139:80"><expr pos:start="139:28" pos:end="139:80"><operator pos:start="139:28" pos:end="139:28">&amp;</operator><name pos:start="139:29" pos:end="139:80"><name pos:start="139:29" pos:end="139:29">h</name><operator pos:start="139:30" pos:end="139:31">-&gt;</operator><name pos:start="139:32" pos:end="139:42">cabac_state</name><index pos:start="139:43" pos:end="139:80">[<expr pos:start="139:44" pos:end="139:78"><literal type="number" pos:start="139:44" pos:end="139:47">85</literal> <operator pos:start="139:47" pos:end="139:47">+</operator> <call pos:start="139:49" pos:end="139:78"><name pos:start="139:49" pos:end="139:65">get_cabac_cbf_ctx</name><argument_list pos:start="139:66" pos:end="139:78">( <argument pos:start="139:68" pos:end="139:68"><expr pos:start="139:68" pos:end="139:68"><name pos:start="139:68" pos:end="139:68">h</name></expr></argument>, <argument pos:start="139:71" pos:end="139:73"><expr pos:start="139:71" pos:end="139:73"><name pos:start="139:71" pos:end="139:73">cat</name></expr></argument>, <argument pos:start="139:76" pos:end="139:76"><expr pos:start="139:76" pos:end="139:76"><name pos:start="139:76" pos:end="139:76">n</name></expr></argument> )</argument_list></call></expr> ]</index></name></expr></argument> )</argument_list></call> <operator pos:start="139:84" pos:end="139:85">==</operator> <literal type="number" pos:start="139:87" pos:end="139:87">0</literal></expr> )</condition> <block pos:start="139:91" pos:end="161:9">{<block_content pos:start="141:13" pos:end="159:19">

            <if_stmt pos:start="141:13" pos:end="150:0"><if pos:start="141:13" pos:end="143:54">if<condition pos:start="141:15" pos:end="141:38">( <expr pos:start="141:17" pos:end="141:36"><name pos:start="141:17" pos:end="141:19">cat</name> <operator pos:start="141:21" pos:end="141:22">==</operator> <literal type="number" pos:start="141:24" pos:end="141:24">1</literal> <operator pos:start="141:26" pos:end="141:27">||</operator> <name pos:start="141:29" pos:end="141:31">cat</name> <operator pos:start="141:33" pos:end="141:34">==</operator> <literal type="number" pos:start="141:36" pos:end="141:36">2</literal></expr> )</condition><block type="pseudo" pos:start="143:17" pos:end="143:54"><block_content pos:start="143:17" pos:end="143:54">

                <expr_stmt pos:start="143:17" pos:end="143:54"><expr pos:start="143:17" pos:end="143:53"><name pos:start="143:17" pos:end="143:49"><name pos:start="143:17" pos:end="143:17">h</name><operator pos:start="143:18" pos:end="143:19">-&gt;</operator><name pos:start="143:20" pos:end="143:39">non_zero_count_cache</name><index pos:start="143:40" pos:end="143:49">[<expr pos:start="143:41" pos:end="143:48"><name pos:start="143:41" pos:end="143:48"><name pos:start="143:41" pos:end="143:45">scan8</name><index pos:start="143:46" pos:end="143:48">[<expr pos:start="143:47" pos:end="143:47"><name pos:start="143:47" pos:end="143:47">n</name></expr>]</index></name></expr>]</index></name> <operator pos:start="143:51" pos:end="143:51">=</operator> <literal type="number" pos:start="143:53" pos:end="143:53">0</literal></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="145:13" pos:end="150:0">else if<condition pos:start="145:20" pos:end="145:31">( <expr pos:start="145:22" pos:end="145:29"><name pos:start="145:22" pos:end="145:24">cat</name> <operator pos:start="145:26" pos:end="145:27">==</operator> <literal type="number" pos:start="145:29" pos:end="145:29">4</literal></expr> )</condition><block type="pseudo" pos:start="147:17" pos:end="150:0"><block_content pos:start="147:17" pos:end="150:0">

                <expr_stmt pos:start="147:17" pos:end="150:0"><expr pos:start="147:17" pos:end="147:56"><name pos:start="147:17" pos:end="147:52"><name pos:start="147:17" pos:end="147:17">h</name><operator pos:start="147:18" pos:end="147:19">-&gt;</operator><name pos:start="147:20" pos:end="147:39">non_zero_count_cache</name><index pos:start="147:40" pos:end="147:52">[<expr pos:start="147:41" pos:end="147:51"><name pos:start="147:41" pos:end="147:51"><name pos:start="147:41" pos:end="147:45">scan8</name><index pos:start="147:46" pos:end="147:51">[<expr pos:start="147:47" pos:end="147:50"><literal type="number" pos:start="147:47" pos:end="147:48">16</literal><operator pos:start="147:49" pos:end="147:49">+</operator><name pos:start="147:50" pos:end="147:50">n</name></expr>]</index></name></expr>]</index></name> <operator pos:start="147:54" pos:end="147:54">=</operator> <literal type="number" pos:start="147:56" pos:end="147:56">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:ifdef pos:start="149:1" pos:end="149:21">#<cpp:directive pos:start="149:2" pos:end="149:6">ifdef</cpp:directive> <name pos:start="149:8" pos:end="149:21">CABAC_ON_STACK</name></cpp:ifdef>

            <expr_stmt pos:start="151:13" pos:end="151:47"><expr pos:start="151:13" pos:end="151:41"><name pos:start="151:13" pos:end="151:26"><name pos:start="151:13" pos:end="151:13">h</name><operator pos:start="151:14" pos:end="151:15">-&gt;</operator><name pos:start="151:16" pos:end="151:20">cabac</name><operator pos:start="151:21" pos:end="151:21">.</operator><name pos:start="151:22" pos:end="151:26">range</name></name>     <operator pos:start="151:32" pos:end="151:32">=</operator> <name pos:start="151:34" pos:end="151:41"><name pos:start="151:34" pos:end="151:35">cc</name><operator pos:start="151:36" pos:end="151:36">.</operator><name pos:start="151:37" pos:end="151:41">range</name></name></expr>     ;</expr_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:47"><expr pos:start="153:13" pos:end="153:39"><name pos:start="153:13" pos:end="153:24"><name pos:start="153:13" pos:end="153:13">h</name><operator pos:start="153:14" pos:end="153:15">-&gt;</operator><name pos:start="153:16" pos:end="153:20">cabac</name><operator pos:start="153:21" pos:end="153:21">.</operator><name pos:start="153:22" pos:end="153:24">low</name></name>       <operator pos:start="153:32" pos:end="153:32">=</operator> <name pos:start="153:34" pos:end="153:39"><name pos:start="153:34" pos:end="153:35">cc</name><operator pos:start="153:36" pos:end="153:36">.</operator><name pos:start="153:37" pos:end="153:39">low</name></name></expr>       ;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="158:0"><expr pos:start="155:13" pos:end="155:46"><name pos:start="155:13" pos:end="155:31"><name pos:start="155:13" pos:end="155:13">h</name><operator pos:start="155:14" pos:end="155:15">-&gt;</operator><name pos:start="155:16" pos:end="155:20">cabac</name><operator pos:start="155:21" pos:end="155:21">.</operator><name pos:start="155:22" pos:end="155:31">bytestream</name></name><operator pos:start="155:32" pos:end="155:32">=</operator> <name pos:start="155:34" pos:end="155:46"><name pos:start="155:34" pos:end="155:35">cc</name><operator pos:start="155:36" pos:end="155:36">.</operator><name pos:start="155:37" pos:end="155:46">bytestream</name></name></expr>;</expr_stmt>

<cpp:endif pos:start="157:1" pos:end="157:6">#<cpp:directive pos:start="157:2" pos:end="157:6">endif</cpp:directive></cpp:endif>

            <return pos:start="159:13" pos:end="159:19">return;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="167:5" pos:end="169:55"><expr pos:start="167:5" pos:end="169:54"><name pos:start="167:5" pos:end="167:30">significant_coeff_ctx_base</name> <operator pos:start="167:32" pos:end="167:32">=</operator> <name pos:start="167:34" pos:end="167:47"><name pos:start="167:34" pos:end="167:34">h</name><operator pos:start="167:35" pos:end="167:36">-&gt;</operator><name pos:start="167:37" pos:end="167:47">cabac_state</name></name>

        <operator pos:start="169:9" pos:end="169:9">+</operator> <name pos:start="169:11" pos:end="169:54"><name pos:start="169:11" pos:end="169:39">significant_coeff_flag_offset</name><index pos:start="169:40" pos:end="169:49">[<expr pos:start="169:41" pos:end="169:48"><name pos:start="169:41" pos:end="169:48">MB_FIELD</name></expr>]</index><index pos:start="169:50" pos:end="169:54">[<expr pos:start="169:51" pos:end="169:53"><name pos:start="169:51" pos:end="169:53">cat</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="171:5" pos:end="173:48"><expr pos:start="171:5" pos:end="173:47"><name pos:start="171:5" pos:end="171:23">last_coeff_ctx_base</name> <operator pos:start="171:25" pos:end="171:25">=</operator> <name pos:start="171:27" pos:end="171:40"><name pos:start="171:27" pos:end="171:27">h</name><operator pos:start="171:28" pos:end="171:29">-&gt;</operator><name pos:start="171:30" pos:end="171:40">cabac_state</name></name>

        <operator pos:start="173:9" pos:end="173:9">+</operator> <name pos:start="173:11" pos:end="173:47"><name pos:start="173:11" pos:end="173:32">last_coeff_flag_offset</name><index pos:start="173:33" pos:end="173:42">[<expr pos:start="173:34" pos:end="173:41"><name pos:start="173:34" pos:end="173:41">MB_FIELD</name></expr>]</index><index pos:start="173:43" pos:end="173:47">[<expr pos:start="173:44" pos:end="173:46"><name pos:start="173:44" pos:end="173:46">cat</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="175:5" pos:end="177:41"><expr pos:start="175:5" pos:end="177:40"><name pos:start="175:5" pos:end="175:25">abs_level_m1_ctx_base</name> <operator pos:start="175:27" pos:end="175:27">=</operator> <name pos:start="175:29" pos:end="175:42"><name pos:start="175:29" pos:end="175:29">h</name><operator pos:start="175:30" pos:end="175:31">-&gt;</operator><name pos:start="175:32" pos:end="175:42">cabac_state</name></name>

        <operator pos:start="177:9" pos:end="177:9">+</operator> <name pos:start="177:11" pos:end="177:40"><name pos:start="177:11" pos:end="177:35">coeff_abs_level_m1_offset</name><index pos:start="177:36" pos:end="177:40">[<expr pos:start="177:37" pos:end="177:39"><name pos:start="177:37" pos:end="177:39">cat</name></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="181:5" pos:end="227:5"><if pos:start="181:5" pos:end="219:5">if<condition pos:start="181:7" pos:end="181:18">( <expr pos:start="181:9" pos:end="181:16"><name pos:start="181:9" pos:end="181:11">cat</name> <operator pos:start="181:13" pos:end="181:14">==</operator> <literal type="number" pos:start="181:16" pos:end="181:16">5</literal></expr> )</condition> <block pos:start="181:20" pos:end="219:5">{<block_content pos:start="213:9" pos:end="217:97">

<cpp:define pos:start="183:1" pos:end="211:9">#<cpp:directive pos:start="183:2" pos:end="183:7">define</cpp:directive> <cpp:macro pos:start="183:9" pos:end="183:55"><name pos:start="183:9" pos:end="183:27">DECODE_SIGNIFICANCE</name><parameter_list pos:start="183:28" pos:end="183:55">( <parameter pos:start="183:30" pos:end="183:34"><type pos:start="183:30" pos:end="183:34"><name pos:start="183:30" pos:end="183:34">coefs</name></type></parameter>, <parameter pos:start="183:37" pos:end="183:43"><type pos:start="183:37" pos:end="183:43"><name pos:start="183:37" pos:end="183:43">sig_off</name></type></parameter>, <parameter pos:start="183:46" pos:end="183:53"><type pos:start="183:46" pos:end="183:53"><name pos:start="183:46" pos:end="183:53">last_off</name></type></parameter> )</parameter_list></cpp:macro> \

        <cpp:value pos:start="185:9" pos:end="211:9">for(last= 0; last &lt; coefs; last++) { \

            uint8_t *sig_ctx = significant_coeff_ctx_base + sig_off; \

            if( get_cabac( CC, sig_ctx )) { \

                uint8_t *last_ctx = last_coeff_ctx_base + last_off; \

                index[coeff_count++] = last; \

                if( get_cabac( CC, last_ctx ) ) { \

                    last= max_coeff; \

                    break; \

                } \

            } \

        }\

        if( last == max_coeff -1 ) {\

            index[coeff_count++] = last;\

        }</cpp:value></cpp:define>

        <decl_stmt pos:start="213:9" pos:end="216:0"><decl pos:start="213:9" pos:end="213:76"><type pos:start="213:9" pos:end="213:23"><specifier pos:start="213:9" pos:end="213:13">const</specifier> <name pos:start="213:15" pos:end="213:21">uint8_t</name> <modifier pos:start="213:23" pos:end="213:23">*</modifier></type><name pos:start="213:24" pos:end="213:30">sig_off</name> <init pos:start="213:32" pos:end="213:76">= <expr pos:start="213:34" pos:end="213:76"><name pos:start="213:34" pos:end="213:76"><name pos:start="213:34" pos:end="213:66">significant_coeff_flag_offset_8x8</name><index pos:start="213:67" pos:end="213:76">[<expr pos:start="213:68" pos:end="213:75"><name pos:start="213:68" pos:end="213:75">MB_FIELD</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<cpp:if pos:start="215:1" pos:end="215:107">#<cpp:directive pos:start="215:2" pos:end="215:3">if</cpp:directive> <expr pos:start="215:5" pos:end="215:107"><call pos:start="215:5" pos:end="215:21"><name pos:start="215:5" pos:end="215:11">defined</name><argument_list pos:start="215:12" pos:end="215:21">(<argument pos:start="215:13" pos:end="215:20"><expr pos:start="215:13" pos:end="215:20"><name pos:start="215:13" pos:end="215:20">ARCH_X86</name></expr></argument>)</argument_list></call> <operator pos:start="215:23" pos:end="215:24">&amp;&amp;</operator> <call pos:start="215:26" pos:end="215:44"><name pos:start="215:26" pos:end="215:32">defined</name><argument_list pos:start="215:33" pos:end="215:44">(<argument pos:start="215:34" pos:end="215:43"><expr pos:start="215:34" pos:end="215:43"><name pos:start="215:34" pos:end="215:43">HAVE_7REGS</name></expr></argument>)</argument_list></call> <operator pos:start="215:46" pos:end="215:47">&amp;&amp;</operator> <call pos:start="215:49" pos:end="215:75"><name pos:start="215:49" pos:end="215:55">defined</name><argument_list pos:start="215:56" pos:end="215:75">(<argument pos:start="215:57" pos:end="215:74"><expr pos:start="215:57" pos:end="215:74"><name pos:start="215:57" pos:end="215:74">HAVE_EBX_AVAILABLE</name></expr></argument>)</argument_list></call> <operator pos:start="215:77" pos:end="215:78">&amp;&amp;</operator> <operator pos:start="215:80" pos:end="215:80">!</operator><call pos:start="215:81" pos:end="215:107"><name pos:start="215:81" pos:end="215:87">defined</name><argument_list pos:start="215:88" pos:end="215:107">(<argument pos:start="215:89" pos:end="215:106"><expr pos:start="215:89" pos:end="215:106"><name pos:start="215:89" pos:end="215:106">BROKEN_RELOCATIONS</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <expr_stmt pos:start="217:9" pos:end="217:97"><expr pos:start="217:9" pos:end="217:96"><name pos:start="217:9" pos:end="217:19">coeff_count</name><operator pos:start="217:20" pos:end="217:20">=</operator> <call pos:start="217:22" pos:end="217:96"><name pos:start="217:22" pos:end="217:48">decode_significance_8x8_x86</name><argument_list pos:start="217:49" pos:end="217:96">(<argument pos:start="217:50" pos:end="217:51"><expr pos:start="217:50" pos:end="217:51"><name pos:start="217:50" pos:end="217:51">CC</name></expr></argument>, <argument pos:start="217:54" pos:end="217:79"><expr pos:start="217:54" pos:end="217:79"><name pos:start="217:54" pos:end="217:79">significant_coeff_ctx_base</name></expr></argument>, <argument pos:start="217:82" pos:end="217:86"><expr pos:start="217:82" pos:end="217:86"><name pos:start="217:82" pos:end="217:86">index</name></expr></argument>, <argument pos:start="217:89" pos:end="217:95"><expr pos:start="217:89" pos:end="217:95"><name pos:start="217:89" pos:end="217:95">sig_off</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="219:7" pos:end="227:5">else <block pos:start="219:12" pos:end="227:5">{<block_content pos:start="221:9" pos:end="225:83">

        <expr_stmt pos:start="221:9" pos:end="224:0"><expr pos:start="221:9" pos:end="221:94"><name pos:start="221:9" pos:end="221:19">coeff_count</name><operator pos:start="221:20" pos:end="221:20">=</operator> <call pos:start="221:22" pos:end="221:94"><name pos:start="221:22" pos:end="221:44">decode_significance_x86</name><argument_list pos:start="221:45" pos:end="221:94">(<argument pos:start="221:46" pos:end="221:47"><expr pos:start="221:46" pos:end="221:47"><name pos:start="221:46" pos:end="221:47">CC</name></expr></argument>, <argument pos:start="221:50" pos:end="221:58"><expr pos:start="221:50" pos:end="221:58"><name pos:start="221:50" pos:end="221:58">max_coeff</name></expr></argument>, <argument pos:start="221:61" pos:end="221:86"><expr pos:start="221:61" pos:end="221:86"><name pos:start="221:61" pos:end="221:86">significant_coeff_ctx_base</name></expr></argument>, <argument pos:start="221:89" pos:end="221:93"><expr pos:start="221:89" pos:end="221:93"><name pos:start="221:89" pos:end="221:93">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="223:1" pos:end="223:5">#<cpp:directive pos:start="223:2" pos:end="223:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="225:9" pos:end="225:83"><expr pos:start="225:9" pos:end="225:82"><call pos:start="225:9" pos:end="225:82"><name pos:start="225:9" pos:end="225:27">DECODE_SIGNIFICANCE</name><argument_list pos:start="225:28" pos:end="225:82">( <argument pos:start="225:30" pos:end="225:31"><expr pos:start="225:30" pos:end="225:31"><literal type="number" pos:start="225:30" pos:end="225:31">63</literal></expr></argument>, <argument pos:start="225:34" pos:end="225:46"><expr pos:start="225:34" pos:end="225:46"><name pos:start="225:34" pos:end="225:46"><name pos:start="225:34" pos:end="225:40">sig_off</name><index pos:start="225:41" pos:end="225:46">[<expr pos:start="225:42" pos:end="225:45"><name pos:start="225:42" pos:end="225:45">last</name></expr>]</index></name></expr></argument>, <argument pos:start="225:49" pos:end="225:80"><expr pos:start="225:49" pos:end="225:80"><name pos:start="225:49" pos:end="225:80"><name pos:start="225:49" pos:end="225:74">last_coeff_flag_offset_8x8</name><index pos:start="225:75" pos:end="225:80">[<expr pos:start="225:76" pos:end="225:79"><name pos:start="225:76" pos:end="225:79">last</name></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt> <if_stmt pos:start="227:7" pos:end="233:5"><else pos:start="227:7" pos:end="233:5">else <block pos:start="227:12" pos:end="233:5">{<block_content pos:start="229:9" pos:end="232:0">

        <expr_stmt pos:start="229:9" pos:end="232:0"><expr pos:start="229:9" pos:end="229:56"><call pos:start="229:9" pos:end="229:56"><name pos:start="229:9" pos:end="229:27">DECODE_SIGNIFICANCE</name><argument_list pos:start="229:28" pos:end="229:56">( <argument pos:start="229:30" pos:end="229:42"><expr pos:start="229:30" pos:end="229:42"><name pos:start="229:30" pos:end="229:38">max_coeff</name> <operator pos:start="229:40" pos:end="229:40">-</operator> <literal type="number" pos:start="229:42" pos:end="229:42">1</literal></expr></argument>, <argument pos:start="229:45" pos:end="229:48"><expr pos:start="229:45" pos:end="229:48"><name pos:start="229:45" pos:end="229:48">last</name></expr></argument>, <argument pos:start="229:51" pos:end="229:54"><expr pos:start="229:51" pos:end="229:54"><name pos:start="229:51" pos:end="229:54">last</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="231:1" pos:end="231:6">#<cpp:directive pos:start="231:2" pos:end="231:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="235:5" pos:end="235:28"><expr pos:start="235:5" pos:end="235:27"><call pos:start="235:5" pos:end="235:27"><name pos:start="235:5" pos:end="235:10">assert</name><argument_list pos:start="235:11" pos:end="235:27">(<argument pos:start="235:12" pos:end="235:26"><expr pos:start="235:12" pos:end="235:26"><name pos:start="235:12" pos:end="235:22">coeff_count</name> <operator pos:start="235:24" pos:end="235:24">&gt;</operator> <literal type="number" pos:start="235:26" pos:end="235:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="239:5" pos:end="261:5"><if pos:start="239:5" pos:end="241:40">if<condition pos:start="239:7" pos:end="239:18">( <expr pos:start="239:9" pos:end="239:16"><name pos:start="239:9" pos:end="239:11">cat</name> <operator pos:start="239:13" pos:end="239:14">==</operator> <literal type="number" pos:start="239:16" pos:end="239:16">0</literal></expr> )</condition><block type="pseudo" pos:start="241:9" pos:end="241:40"><block_content pos:start="241:9" pos:end="241:40">

        <expr_stmt pos:start="241:9" pos:end="241:40"><expr pos:start="241:9" pos:end="241:39"><name pos:start="241:9" pos:end="241:30"><name pos:start="241:9" pos:end="241:9">h</name><operator pos:start="241:10" pos:end="241:11">-&gt;</operator><name pos:start="241:12" pos:end="241:20">cbp_table</name><index pos:start="241:21" pos:end="241:30">[<expr pos:start="241:22" pos:end="241:29"><name pos:start="241:22" pos:end="241:29"><name pos:start="241:22" pos:end="241:22">h</name><operator pos:start="241:23" pos:end="241:24">-&gt;</operator><name pos:start="241:25" pos:end="241:29">mb_xy</name></name></expr>]</index></name> <operator pos:start="241:32" pos:end="241:33">|=</operator> <literal type="number" pos:start="241:35" pos:end="241:39">0x100</literal></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="243:5" pos:end="245:56">else if<condition pos:start="243:12" pos:end="243:35">( <expr pos:start="243:14" pos:end="243:33"><name pos:start="243:14" pos:end="243:16">cat</name> <operator pos:start="243:18" pos:end="243:19">==</operator> <literal type="number" pos:start="243:21" pos:end="243:21">1</literal> <operator pos:start="243:23" pos:end="243:24">||</operator> <name pos:start="243:26" pos:end="243:28">cat</name> <operator pos:start="243:30" pos:end="243:31">==</operator> <literal type="number" pos:start="243:33" pos:end="243:33">2</literal></expr> )</condition><block type="pseudo" pos:start="245:9" pos:end="245:56"><block_content pos:start="245:9" pos:end="245:56">

        <expr_stmt pos:start="245:9" pos:end="245:56"><expr pos:start="245:9" pos:end="245:55"><name pos:start="245:9" pos:end="245:41"><name pos:start="245:9" pos:end="245:9">h</name><operator pos:start="245:10" pos:end="245:11">-&gt;</operator><name pos:start="245:12" pos:end="245:31">non_zero_count_cache</name><index pos:start="245:32" pos:end="245:41">[<expr pos:start="245:33" pos:end="245:40"><name pos:start="245:33" pos:end="245:40"><name pos:start="245:33" pos:end="245:37">scan8</name><index pos:start="245:38" pos:end="245:40">[<expr pos:start="245:39" pos:end="245:39"><name pos:start="245:39" pos:end="245:39">n</name></expr>]</index></name></expr>]</index></name> <operator pos:start="245:43" pos:end="245:43">=</operator> <name pos:start="245:45" pos:end="245:55">coeff_count</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="247:5" pos:end="249:44">else if<condition pos:start="247:12" pos:end="247:23">( <expr pos:start="247:14" pos:end="247:21"><name pos:start="247:14" pos:end="247:16">cat</name> <operator pos:start="247:18" pos:end="247:19">==</operator> <literal type="number" pos:start="247:21" pos:end="247:21">3</literal></expr> )</condition><block type="pseudo" pos:start="249:9" pos:end="249:44"><block_content pos:start="249:9" pos:end="249:44">

        <expr_stmt pos:start="249:9" pos:end="249:44"><expr pos:start="249:9" pos:end="249:43"><name pos:start="249:9" pos:end="249:30"><name pos:start="249:9" pos:end="249:9">h</name><operator pos:start="249:10" pos:end="249:11">-&gt;</operator><name pos:start="249:12" pos:end="249:20">cbp_table</name><index pos:start="249:21" pos:end="249:30">[<expr pos:start="249:22" pos:end="249:29"><name pos:start="249:22" pos:end="249:29"><name pos:start="249:22" pos:end="249:22">h</name><operator pos:start="249:23" pos:end="249:24">-&gt;</operator><name pos:start="249:25" pos:end="249:29">mb_xy</name></name></expr>]</index></name> <operator pos:start="249:32" pos:end="249:33">|=</operator> <literal type="number" pos:start="249:35" pos:end="249:38">0x40</literal> <operator pos:start="249:40" pos:end="249:41">&lt;&lt;</operator> <name pos:start="249:43" pos:end="249:43">n</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="251:5" pos:end="253:59">else if<condition pos:start="251:12" pos:end="251:23">( <expr pos:start="251:14" pos:end="251:21"><name pos:start="251:14" pos:end="251:16">cat</name> <operator pos:start="251:18" pos:end="251:19">==</operator> <literal type="number" pos:start="251:21" pos:end="251:21">4</literal></expr> )</condition><block type="pseudo" pos:start="253:9" pos:end="253:59"><block_content pos:start="253:9" pos:end="253:59">

        <expr_stmt pos:start="253:9" pos:end="253:59"><expr pos:start="253:9" pos:end="253:58"><name pos:start="253:9" pos:end="253:44"><name pos:start="253:9" pos:end="253:9">h</name><operator pos:start="253:10" pos:end="253:11">-&gt;</operator><name pos:start="253:12" pos:end="253:31">non_zero_count_cache</name><index pos:start="253:32" pos:end="253:44">[<expr pos:start="253:33" pos:end="253:43"><name pos:start="253:33" pos:end="253:43"><name pos:start="253:33" pos:end="253:37">scan8</name><index pos:start="253:38" pos:end="253:43">[<expr pos:start="253:39" pos:end="253:42"><literal type="number" pos:start="253:39" pos:end="253:40">16</literal><operator pos:start="253:41" pos:end="253:41">+</operator><name pos:start="253:42" pos:end="253:42">n</name></expr>]</index></name></expr>]</index></name> <operator pos:start="253:46" pos:end="253:46">=</operator> <name pos:start="253:48" pos:end="253:58">coeff_count</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="255:5" pos:end="261:5">else <block pos:start="255:10" pos:end="261:5">{<block_content pos:start="257:9" pos:end="259:84">

        <expr_stmt pos:start="257:9" pos:end="257:27"><expr pos:start="257:9" pos:end="257:26"><call pos:start="257:9" pos:end="257:26"><name pos:start="257:9" pos:end="257:14">assert</name><argument_list pos:start="257:15" pos:end="257:26">( <argument pos:start="257:17" pos:end="257:24"><expr pos:start="257:17" pos:end="257:24"><name pos:start="257:17" pos:end="257:19">cat</name> <operator pos:start="257:21" pos:end="257:22">==</operator> <literal type="number" pos:start="257:24" pos:end="257:24">5</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="259:9" pos:end="259:84"><expr pos:start="259:9" pos:end="259:83"><call pos:start="259:9" pos:end="259:83"><name pos:start="259:9" pos:end="259:22">fill_rectangle</name><argument_list pos:start="259:23" pos:end="259:83">(<argument pos:start="259:24" pos:end="259:57"><expr pos:start="259:24" pos:end="259:57"><operator pos:start="259:24" pos:end="259:24">&amp;</operator><name pos:start="259:25" pos:end="259:57"><name pos:start="259:25" pos:end="259:25">h</name><operator pos:start="259:26" pos:end="259:27">-&gt;</operator><name pos:start="259:28" pos:end="259:47">non_zero_count_cache</name><index pos:start="259:48" pos:end="259:57">[<expr pos:start="259:49" pos:end="259:56"><name pos:start="259:49" pos:end="259:56"><name pos:start="259:49" pos:end="259:53">scan8</name><index pos:start="259:54" pos:end="259:56">[<expr pos:start="259:55" pos:end="259:55"><name pos:start="259:55" pos:end="259:55">n</name></expr>]</index></name></expr>]</index></name></expr></argument>, <argument pos:start="259:60" pos:end="259:60"><expr pos:start="259:60" pos:end="259:60"><literal type="number" pos:start="259:60" pos:end="259:60">2</literal></expr></argument>, <argument pos:start="259:63" pos:end="259:63"><expr pos:start="259:63" pos:end="259:63"><literal type="number" pos:start="259:63" pos:end="259:63">2</literal></expr></argument>, <argument pos:start="259:66" pos:end="259:66"><expr pos:start="259:66" pos:end="259:66"><literal type="number" pos:start="259:66" pos:end="259:66">8</literal></expr></argument>, <argument pos:start="259:69" pos:end="259:79"><expr pos:start="259:69" pos:end="259:79"><name pos:start="259:69" pos:end="259:79">coeff_count</name></expr></argument>, <argument pos:start="259:82" pos:end="259:82"><expr pos:start="259:82" pos:end="259:82"><literal type="number" pos:start="259:82" pos:end="259:82">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <for pos:start="265:5" pos:end="352:0">for<control pos:start="265:8" pos:end="265:57">( <init pos:start="265:10" pos:end="265:23"><expr pos:start="265:10" pos:end="265:22"><name pos:start="265:10" pos:end="265:20">coeff_count</name><operator pos:start="265:21" pos:end="265:22">--</operator></expr>;</init> <condition pos:start="265:25" pos:end="265:41"><expr pos:start="265:25" pos:end="265:40"><name pos:start="265:25" pos:end="265:35">coeff_count</name> <operator pos:start="265:37" pos:end="265:38">&gt;=</operator> <literal type="number" pos:start="265:40" pos:end="265:40">0</literal></expr>;</condition> <incr pos:start="265:43" pos:end="265:55"><expr pos:start="265:43" pos:end="265:55"><name pos:start="265:43" pos:end="265:53">coeff_count</name><operator pos:start="265:54" pos:end="265:55">--</operator></expr></incr> )</control> <block pos:start="265:59" pos:end="352:0">{<block_content pos:start="267:9" pos:end="347:9">

        <decl_stmt pos:start="267:9" pos:end="267:78"><decl pos:start="267:9" pos:end="267:77"><type pos:start="267:9" pos:end="267:17"><name pos:start="267:9" pos:end="267:15">uint8_t</name> <modifier pos:start="267:17" pos:end="267:17">*</modifier></type><name pos:start="267:18" pos:end="267:20">ctx</name> <init pos:start="267:22" pos:end="267:77">= <expr pos:start="267:24" pos:end="267:77"><name pos:start="267:24" pos:end="267:53"><name pos:start="267:24" pos:end="267:43">coeff_abs_level1_ctx</name><index pos:start="267:44" pos:end="267:53">[<expr pos:start="267:45" pos:end="267:52"><name pos:start="267:45" pos:end="267:52">node_ctx</name></expr>]</index></name> <operator pos:start="267:55" pos:end="267:55">+</operator> <name pos:start="267:57" pos:end="267:77">abs_level_m1_ctx_base</name></expr></init></decl>;</decl_stmt>



        <decl_stmt pos:start="271:9" pos:end="271:45"><decl pos:start="271:9" pos:end="271:44"><type pos:start="271:9" pos:end="271:11"><name pos:start="271:9" pos:end="271:11">int</name></type> <name pos:start="271:13" pos:end="271:13">j</name><init pos:start="271:14" pos:end="271:44">= <expr pos:start="271:16" pos:end="271:44"><name pos:start="271:16" pos:end="271:44"><name pos:start="271:16" pos:end="271:24">scantable</name><index pos:start="271:25" pos:end="271:44">[<expr pos:start="271:26" pos:end="271:43"><name pos:start="271:26" pos:end="271:43"><name pos:start="271:26" pos:end="271:30">index</name><index pos:start="271:31" pos:end="271:43">[<expr pos:start="271:32" pos:end="271:42"><name pos:start="271:32" pos:end="271:42">coeff_count</name></expr>]</index></name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="275:9" pos:end="347:9"><if pos:start="275:9" pos:end="289:9">if<condition pos:start="275:11" pos:end="275:39">( <expr pos:start="275:13" pos:end="275:37"><call pos:start="275:13" pos:end="275:32"><name pos:start="275:13" pos:end="275:21">get_cabac</name><argument_list pos:start="275:22" pos:end="275:32">( <argument pos:start="275:24" pos:end="275:25"><expr pos:start="275:24" pos:end="275:25"><name pos:start="275:24" pos:end="275:25">CC</name></expr></argument>, <argument pos:start="275:28" pos:end="275:30"><expr pos:start="275:28" pos:end="275:30"><name pos:start="275:28" pos:end="275:30">ctx</name></expr></argument> )</argument_list></call> <operator pos:start="275:34" pos:end="275:35">==</operator> <literal type="number" pos:start="275:37" pos:end="275:37">0</literal></expr> )</condition> <block pos:start="275:41" pos:end="289:9">{<block_content pos:start="277:13" pos:end="287:13">

            <expr_stmt pos:start="277:13" pos:end="277:63"><expr pos:start="277:13" pos:end="277:62"><name pos:start="277:13" pos:end="277:20">node_ctx</name> <operator pos:start="277:22" pos:end="277:22">=</operator> <name pos:start="277:24" pos:end="277:62"><name pos:start="277:24" pos:end="277:49">coeff_abs_level_transition</name><index pos:start="277:50" pos:end="277:52">[<expr pos:start="277:51" pos:end="277:51"><literal type="number" pos:start="277:51" pos:end="277:51">0</literal></expr>]</index><index pos:start="277:53" pos:end="277:62">[<expr pos:start="277:54" pos:end="277:61"><name pos:start="277:54" pos:end="277:61">node_ctx</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="279:13" pos:end="287:13"><if pos:start="279:13" pos:end="283:13">if<condition pos:start="279:15" pos:end="279:23">( <expr pos:start="279:17" pos:end="279:21"><operator pos:start="279:17" pos:end="279:17">!</operator><name pos:start="279:18" pos:end="279:21">qmul</name></expr> )</condition> <block pos:start="279:25" pos:end="283:13">{<block_content pos:start="281:17" pos:end="281:58">

                <expr_stmt pos:start="281:17" pos:end="281:58"><expr pos:start="281:17" pos:end="281:57"><name pos:start="281:17" pos:end="281:24"><name pos:start="281:17" pos:end="281:21">block</name><index pos:start="281:22" pos:end="281:24">[<expr pos:start="281:23" pos:end="281:23"><name pos:start="281:23" pos:end="281:23">j</name></expr>]</index></name> <operator pos:start="281:26" pos:end="281:26">=</operator> <call pos:start="281:28" pos:end="281:57"><name pos:start="281:28" pos:end="281:48">get_cabac_bypass_sign</name><argument_list pos:start="281:49" pos:end="281:57">( <argument pos:start="281:51" pos:end="281:52"><expr pos:start="281:51" pos:end="281:52"><name pos:start="281:51" pos:end="281:52">CC</name></expr></argument>, <argument pos:start="281:55" pos:end="281:56"><expr pos:start="281:55" pos:end="281:56"><operator pos:start="281:55" pos:end="281:55">-</operator><literal type="number" pos:start="281:56" pos:end="281:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="283:14" pos:end="287:13">else<block pos:start="283:18" pos:end="287:13">{<block_content pos:start="285:17" pos:end="285:76">

                <expr_stmt pos:start="285:17" pos:end="285:76"><expr pos:start="285:17" pos:end="285:75"><name pos:start="285:17" pos:end="285:24"><name pos:start="285:17" pos:end="285:21">block</name><index pos:start="285:22" pos:end="285:24">[<expr pos:start="285:23" pos:end="285:23"><name pos:start="285:23" pos:end="285:23">j</name></expr>]</index></name> <operator pos:start="285:26" pos:end="285:26">=</operator> <operator pos:start="285:28" pos:end="285:28">(</operator><call pos:start="285:29" pos:end="285:64"><name pos:start="285:29" pos:end="285:49">get_cabac_bypass_sign</name><argument_list pos:start="285:50" pos:end="285:64">( <argument pos:start="285:52" pos:end="285:53"><expr pos:start="285:52" pos:end="285:53"><name pos:start="285:52" pos:end="285:53">CC</name></expr></argument>, <argument pos:start="285:56" pos:end="285:63"><expr pos:start="285:56" pos:end="285:63"><operator pos:start="285:56" pos:end="285:56">-</operator><name pos:start="285:57" pos:end="285:63"><name pos:start="285:57" pos:end="285:60">qmul</name><index pos:start="285:61" pos:end="285:63">[<expr pos:start="285:62" pos:end="285:62"><name pos:start="285:62" pos:end="285:62">j</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="285:66" pos:end="285:66">+</operator> <literal type="number" pos:start="285:68" pos:end="285:69">32</literal><operator pos:start="285:70" pos:end="285:70">)</operator> <operator pos:start="285:72" pos:end="285:73">&gt;&gt;</operator> <literal type="number" pos:start="285:75" pos:end="285:75">6</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="289:11" pos:end="347:9">else <block pos:start="289:16" pos:end="347:9">{<block_content pos:start="291:13" pos:end="345:13">

            <decl_stmt pos:start="291:13" pos:end="291:30"><decl pos:start="291:13" pos:end="291:29"><type pos:start="291:13" pos:end="291:15"><name pos:start="291:13" pos:end="291:15">int</name></type> <name pos:start="291:17" pos:end="291:25">coeff_abs</name> <init pos:start="291:27" pos:end="291:29">= <expr pos:start="291:29" pos:end="291:29"><literal type="number" pos:start="291:29" pos:end="291:29">2</literal></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="293:13" pos:end="293:75"><expr pos:start="293:13" pos:end="293:74"><name pos:start="293:13" pos:end="293:15">ctx</name> <operator pos:start="293:17" pos:end="293:17">=</operator> <name pos:start="293:19" pos:end="293:50"><name pos:start="293:19" pos:end="293:40">coeff_abs_levelgt1_ctx</name><index pos:start="293:41" pos:end="293:50">[<expr pos:start="293:42" pos:end="293:49"><name pos:start="293:42" pos:end="293:49">node_ctx</name></expr>]</index></name> <operator pos:start="293:52" pos:end="293:52">+</operator> <name pos:start="293:54" pos:end="293:74">abs_level_m1_ctx_base</name></expr>;</expr_stmt>

            <expr_stmt pos:start="295:13" pos:end="295:63"><expr pos:start="295:13" pos:end="295:62"><name pos:start="295:13" pos:end="295:20">node_ctx</name> <operator pos:start="295:22" pos:end="295:22">=</operator> <name pos:start="295:24" pos:end="295:62"><name pos:start="295:24" pos:end="295:49">coeff_abs_level_transition</name><index pos:start="295:50" pos:end="295:52">[<expr pos:start="295:51" pos:end="295:51"><literal type="number" pos:start="295:51" pos:end="295:51">1</literal></expr>]</index><index pos:start="295:53" pos:end="295:62">[<expr pos:start="295:54" pos:end="295:61"><name pos:start="295:54" pos:end="295:61">node_ctx</name></expr>]</index></name></expr>;</expr_stmt>



            <while pos:start="299:13" pos:end="303:13">while<condition pos:start="299:18" pos:end="299:59">( <expr pos:start="299:20" pos:end="299:57"><name pos:start="299:20" pos:end="299:28">coeff_abs</name> <operator pos:start="299:30" pos:end="299:30">&lt;</operator> <literal type="number" pos:start="299:32" pos:end="299:33">15</literal> <operator pos:start="299:35" pos:end="299:36">&amp;&amp;</operator> <call pos:start="299:38" pos:end="299:57"><name pos:start="299:38" pos:end="299:46">get_cabac</name><argument_list pos:start="299:47" pos:end="299:57">( <argument pos:start="299:49" pos:end="299:50"><expr pos:start="299:49" pos:end="299:50"><name pos:start="299:49" pos:end="299:50">CC</name></expr></argument>, <argument pos:start="299:53" pos:end="299:55"><expr pos:start="299:53" pos:end="299:55"><name pos:start="299:53" pos:end="299:55">ctx</name></expr></argument> )</argument_list></call></expr> )</condition> <block pos:start="299:61" pos:end="303:13">{<block_content pos:start="301:17" pos:end="301:28">

                <expr_stmt pos:start="301:17" pos:end="301:28"><expr pos:start="301:17" pos:end="301:27"><name pos:start="301:17" pos:end="301:25">coeff_abs</name><operator pos:start="301:26" pos:end="301:27">++</operator></expr>;</expr_stmt>

            </block_content>}</block></while>



            <if_stmt pos:start="307:13" pos:end="329:13"><if pos:start="307:13" pos:end="329:13">if<condition pos:start="307:15" pos:end="307:33">( <expr pos:start="307:17" pos:end="307:31"><name pos:start="307:17" pos:end="307:25">coeff_abs</name> <operator pos:start="307:27" pos:end="307:28">&gt;=</operator> <literal type="number" pos:start="307:30" pos:end="307:31">15</literal></expr> )</condition> <block pos:start="307:35" pos:end="329:13">{<block_content pos:start="309:17" pos:end="327:31">

                <decl_stmt pos:start="309:17" pos:end="309:26"><decl pos:start="309:17" pos:end="309:25"><type pos:start="309:17" pos:end="309:19"><name pos:start="309:17" pos:end="309:19">int</name></type> <name pos:start="309:21" pos:end="309:21">j</name> <init pos:start="309:23" pos:end="309:25">= <expr pos:start="309:25" pos:end="309:25"><literal type="number" pos:start="309:25" pos:end="309:25">0</literal></expr></init></decl>;</decl_stmt>

                <while pos:start="311:17" pos:end="315:17">while<condition pos:start="311:22" pos:end="311:47">( <expr pos:start="311:24" pos:end="311:45"><call pos:start="311:24" pos:end="311:45"><name pos:start="311:24" pos:end="311:39">get_cabac_bypass</name><argument_list pos:start="311:40" pos:end="311:45">( <argument pos:start="311:42" pos:end="311:43"><expr pos:start="311:42" pos:end="311:43"><name pos:start="311:42" pos:end="311:43">CC</name></expr></argument> )</argument_list></call></expr> )</condition> <block pos:start="311:49" pos:end="315:17">{<block_content pos:start="313:21" pos:end="313:24">

                    <expr_stmt pos:start="313:21" pos:end="313:24"><expr pos:start="313:21" pos:end="313:23"><name pos:start="313:21" pos:end="313:21">j</name><operator pos:start="313:22" pos:end="313:23">++</operator></expr>;</expr_stmt>

                </block_content>}</block></while>



                <expr_stmt pos:start="319:17" pos:end="319:28"><expr pos:start="319:17" pos:end="319:27"><name pos:start="319:17" pos:end="319:25">coeff_abs</name><operator pos:start="319:26" pos:end="319:26">=</operator><literal type="number" pos:start="319:27" pos:end="319:27">1</literal></expr>;</expr_stmt>

                <while pos:start="321:17" pos:end="325:17">while<condition pos:start="321:22" pos:end="321:28">( <expr pos:start="321:24" pos:end="321:26"><name pos:start="321:24" pos:end="321:24">j</name><operator pos:start="321:25" pos:end="321:26">--</operator></expr> )</condition> <block pos:start="321:30" pos:end="325:17">{<block_content pos:start="323:21" pos:end="323:68">

                    <expr_stmt pos:start="323:21" pos:end="323:68"><expr pos:start="323:21" pos:end="323:67"><name pos:start="323:21" pos:end="323:29">coeff_abs</name> <operator pos:start="323:31" pos:end="323:32">+=</operator> <name pos:start="323:34" pos:end="323:42">coeff_abs</name> <operator pos:start="323:44" pos:end="323:44">+</operator> <call pos:start="323:46" pos:end="323:67"><name pos:start="323:46" pos:end="323:61">get_cabac_bypass</name><argument_list pos:start="323:62" pos:end="323:67">( <argument pos:start="323:64" pos:end="323:65"><expr pos:start="323:64" pos:end="323:65"><name pos:start="323:64" pos:end="323:65">CC</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></while>

                <expr_stmt pos:start="327:17" pos:end="327:31"><expr pos:start="327:17" pos:end="327:30"><name pos:start="327:17" pos:end="327:25">coeff_abs</name><operator pos:start="327:26" pos:end="327:27">+=</operator> <literal type="number" pos:start="327:29" pos:end="327:30">14</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="333:13" pos:end="345:13"><if pos:start="333:13" pos:end="339:13">if<condition pos:start="333:15" pos:end="333:23">( <expr pos:start="333:17" pos:end="333:21"><operator pos:start="333:17" pos:end="333:17">!</operator><name pos:start="333:18" pos:end="333:21">qmul</name></expr> )</condition> <block pos:start="333:25" pos:end="339:13">{<block_content pos:start="335:17" pos:end="337:74">

                <if_stmt pos:start="335:17" pos:end="337:74"><if pos:start="335:17" pos:end="335:67">if<condition pos:start="335:19" pos:end="335:44">( <expr pos:start="335:21" pos:end="335:42"><call pos:start="335:21" pos:end="335:42"><name pos:start="335:21" pos:end="335:36">get_cabac_bypass</name><argument_list pos:start="335:37" pos:end="335:42">( <argument pos:start="335:39" pos:end="335:40"><expr pos:start="335:39" pos:end="335:40"><name pos:start="335:39" pos:end="335:40">CC</name></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo" pos:start="335:46" pos:end="335:67"><block_content pos:start="335:46" pos:end="335:67"> <expr_stmt pos:start="335:46" pos:end="335:67"><expr pos:start="335:46" pos:end="335:66"><name pos:start="335:46" pos:end="335:53"><name pos:start="335:46" pos:end="335:50">block</name><index pos:start="335:51" pos:end="335:53">[<expr pos:start="335:52" pos:end="335:52"><name pos:start="335:52" pos:end="335:52">j</name></expr>]</index></name> <operator pos:start="335:55" pos:end="335:55">=</operator> <operator pos:start="335:57" pos:end="335:57">-</operator><name pos:start="335:58" pos:end="335:66">coeff_abs</name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="337:17" pos:end="337:74">else<block type="pseudo" pos:start="337:53" pos:end="337:74"><block_content pos:start="337:53" pos:end="337:74">                                <expr_stmt pos:start="337:53" pos:end="337:74"><expr pos:start="337:53" pos:end="337:73"><name pos:start="337:53" pos:end="337:60"><name pos:start="337:53" pos:end="337:57">block</name><index pos:start="337:58" pos:end="337:60">[<expr pos:start="337:59" pos:end="337:59"><name pos:start="337:59" pos:end="337:59">j</name></expr>]</index></name> <operator pos:start="337:62" pos:end="337:62">=</operator>  <name pos:start="337:65" pos:end="337:73">coeff_abs</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if><else pos:start="339:14" pos:end="345:13">else<block pos:start="339:18" pos:end="345:13">{<block_content pos:start="341:17" pos:end="343:96">

                <if_stmt pos:start="341:17" pos:end="343:96"><if pos:start="341:17" pos:end="341:89">if<condition pos:start="341:19" pos:end="341:44">( <expr pos:start="341:21" pos:end="341:42"><call pos:start="341:21" pos:end="341:42"><name pos:start="341:21" pos:end="341:36">get_cabac_bypass</name><argument_list pos:start="341:37" pos:end="341:42">( <argument pos:start="341:39" pos:end="341:40"><expr pos:start="341:39" pos:end="341:40"><name pos:start="341:39" pos:end="341:40">CC</name></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo" pos:start="341:46" pos:end="341:89"><block_content pos:start="341:46" pos:end="341:89"> <expr_stmt pos:start="341:46" pos:end="341:89"><expr pos:start="341:46" pos:end="341:88"><name pos:start="341:46" pos:end="341:53"><name pos:start="341:46" pos:end="341:50">block</name><index pos:start="341:51" pos:end="341:53">[<expr pos:start="341:52" pos:end="341:52"><name pos:start="341:52" pos:end="341:52">j</name></expr>]</index></name> <operator pos:start="341:55" pos:end="341:55">=</operator> <operator pos:start="341:57" pos:end="341:57">(</operator><operator pos:start="341:58" pos:end="341:58">-</operator><name pos:start="341:59" pos:end="341:67">coeff_abs</name> <operator pos:start="341:69" pos:end="341:69">*</operator> <name pos:start="341:71" pos:end="341:77"><name pos:start="341:71" pos:end="341:74">qmul</name><index pos:start="341:75" pos:end="341:77">[<expr pos:start="341:76" pos:end="341:76"><name pos:start="341:76" pos:end="341:76">j</name></expr>]</index></name> <operator pos:start="341:79" pos:end="341:79">+</operator> <literal type="number" pos:start="341:81" pos:end="341:82">32</literal><operator pos:start="341:83" pos:end="341:83">)</operator> <operator pos:start="341:85" pos:end="341:86">&gt;&gt;</operator> <literal type="number" pos:start="341:88" pos:end="341:88">6</literal></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="343:17" pos:end="343:96">else<block type="pseudo" pos:start="343:53" pos:end="343:96"><block_content pos:start="343:53" pos:end="343:96">                                <expr_stmt pos:start="343:53" pos:end="343:96"><expr pos:start="343:53" pos:end="343:95"><name pos:start="343:53" pos:end="343:60"><name pos:start="343:53" pos:end="343:57">block</name><index pos:start="343:58" pos:end="343:60">[<expr pos:start="343:59" pos:end="343:59"><name pos:start="343:59" pos:end="343:59">j</name></expr>]</index></name> <operator pos:start="343:62" pos:end="343:62">=</operator> <operator pos:start="343:64" pos:end="343:64">(</operator> <name pos:start="343:66" pos:end="343:74">coeff_abs</name> <operator pos:start="343:76" pos:end="343:76">*</operator> <name pos:start="343:78" pos:end="343:84"><name pos:start="343:78" pos:end="343:81">qmul</name><index pos:start="343:82" pos:end="343:84">[<expr pos:start="343:83" pos:end="343:83"><name pos:start="343:83" pos:end="343:83">j</name></expr>]</index></name> <operator pos:start="343:86" pos:end="343:86">+</operator> <literal type="number" pos:start="343:88" pos:end="343:89">32</literal><operator pos:start="343:90" pos:end="343:90">)</operator> <operator pos:start="343:92" pos:end="343:93">&gt;&gt;</operator> <literal type="number" pos:start="343:95" pos:end="343:95">6</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

<cpp:ifdef pos:start="351:1" pos:end="351:21">#<cpp:directive pos:start="351:2" pos:end="351:6">ifdef</cpp:directive> <name pos:start="351:8" pos:end="351:21">CABAC_ON_STACK</name></cpp:ifdef>

            <expr_stmt pos:start="353:13" pos:end="353:47"><expr pos:start="353:13" pos:end="353:41"><name pos:start="353:13" pos:end="353:26"><name pos:start="353:13" pos:end="353:13">h</name><operator pos:start="353:14" pos:end="353:15">-&gt;</operator><name pos:start="353:16" pos:end="353:20">cabac</name><operator pos:start="353:21" pos:end="353:21">.</operator><name pos:start="353:22" pos:end="353:26">range</name></name>     <operator pos:start="353:32" pos:end="353:32">=</operator> <name pos:start="353:34" pos:end="353:41"><name pos:start="353:34" pos:end="353:35">cc</name><operator pos:start="353:36" pos:end="353:36">.</operator><name pos:start="353:37" pos:end="353:41">range</name></name></expr>     ;</expr_stmt>

            <expr_stmt pos:start="355:13" pos:end="355:47"><expr pos:start="355:13" pos:end="355:39"><name pos:start="355:13" pos:end="355:24"><name pos:start="355:13" pos:end="355:13">h</name><operator pos:start="355:14" pos:end="355:15">-&gt;</operator><name pos:start="355:16" pos:end="355:20">cabac</name><operator pos:start="355:21" pos:end="355:21">.</operator><name pos:start="355:22" pos:end="355:24">low</name></name>       <operator pos:start="355:32" pos:end="355:32">=</operator> <name pos:start="355:34" pos:end="355:39"><name pos:start="355:34" pos:end="355:35">cc</name><operator pos:start="355:36" pos:end="355:36">.</operator><name pos:start="355:37" pos:end="355:39">low</name></name></expr>       ;</expr_stmt>

            <expr_stmt pos:start="357:13" pos:end="360:0"><expr pos:start="357:13" pos:end="357:46"><name pos:start="357:13" pos:end="357:31"><name pos:start="357:13" pos:end="357:13">h</name><operator pos:start="357:14" pos:end="357:15">-&gt;</operator><name pos:start="357:16" pos:end="357:20">cabac</name><operator pos:start="357:21" pos:end="357:21">.</operator><name pos:start="357:22" pos:end="357:31">bytestream</name></name><operator pos:start="357:32" pos:end="357:32">=</operator> <name pos:start="357:34" pos:end="357:46"><name pos:start="357:34" pos:end="357:35">cc</name><operator pos:start="357:36" pos:end="357:36">.</operator><name pos:start="357:37" pos:end="357:46">bytestream</name></name></expr>;</expr_stmt>

<cpp:endif pos:start="359:1" pos:end="359:6">#<cpp:directive pos:start="359:2" pos:end="359:6">endif</cpp:directive></cpp:endif>



</block_content>}</block></function>
</unit>
