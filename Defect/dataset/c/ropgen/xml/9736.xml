<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9736.c" pos:tabs="8"><function pos:start="1:1" pos:end="135:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:32">ff_eac3_output_frame_header</name><parameter_list pos:start="1:33" pos:end="1:53">(<parameter pos:start="1:34" pos:end="1:52"><decl pos:start="1:34" pos:end="1:52"><type pos:start="1:34" pos:end="1:51"><name pos:start="1:34" pos:end="1:49">AC3EncodeContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="135:1">{<block_content pos:start="5:5" pos:end="133:27">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">blk</name></decl>, <decl pos:start="5:14" pos:end="5:15"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:15">ch</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">AC3EncOptions</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">opt</name> <init pos:start="7:24" pos:end="7:36">= <expr pos:start="7:26" pos:end="7:36"><operator pos:start="7:26" pos:end="7:26">&amp;</operator><name pos:start="7:27" pos:end="7:36"><name pos:start="7:27" pos:end="7:27">s</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:36">options</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:33"><expr pos:start="11:5" pos:end="11:32"><call pos:start="11:5" pos:end="11:32"><name pos:start="11:5" pos:end="11:12">put_bits</name><argument_list pos:start="11:13" pos:end="11:32">(<argument pos:start="11:14" pos:end="11:19"><expr pos:start="11:14" pos:end="11:19"><operator pos:start="11:14" pos:end="11:14">&amp;</operator><name pos:start="11:15" pos:end="11:19"><name pos:start="11:15" pos:end="11:15">s</name><operator pos:start="11:16" pos:end="11:17">-&gt;</operator><name pos:start="11:18" pos:end="11:19">pb</name></name></expr></argument>, <argument pos:start="11:22" pos:end="11:23"><expr pos:start="11:22" pos:end="11:23"><literal type="number" pos:start="11:22" pos:end="11:23">16</literal></expr></argument>, <argument pos:start="11:26" pos:end="11:31"><expr pos:start="11:26" pos:end="11:31"><literal type="number" pos:start="11:26" pos:end="11:31">0x0b77</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                   <comment type="block" pos:start="11:53" pos:end="11:67">/* sync word */</comment>



    <comment type="block" pos:start="15:5" pos:end="15:20">/* BSI header */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:28"><expr pos:start="17:5" pos:end="17:27"><call pos:start="17:5" pos:end="17:27"><name pos:start="17:5" pos:end="17:12">put_bits</name><argument_list pos:start="17:13" pos:end="17:27">(<argument pos:start="17:14" pos:end="17:19"><expr pos:start="17:14" pos:end="17:19"><operator pos:start="17:14" pos:end="17:14">&amp;</operator><name pos:start="17:15" pos:end="17:19"><name pos:start="17:15" pos:end="17:15">s</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:19">pb</name></name></expr></argument>,  <argument pos:start="17:23" pos:end="17:23"><expr pos:start="17:23" pos:end="17:23"><literal type="number" pos:start="17:23" pos:end="17:23">2</literal></expr></argument>, <argument pos:start="17:26" pos:end="17:26"><expr pos:start="17:26" pos:end="17:26"><literal type="number" pos:start="17:26" pos:end="17:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                        <comment type="block" pos:start="17:53" pos:end="17:83">/* stream type = independent */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:28"><expr pos:start="19:5" pos:end="19:27"><call pos:start="19:5" pos:end="19:27"><name pos:start="19:5" pos:end="19:12">put_bits</name><argument_list pos:start="19:13" pos:end="19:27">(<argument pos:start="19:14" pos:end="19:19"><expr pos:start="19:14" pos:end="19:19"><operator pos:start="19:14" pos:end="19:14">&amp;</operator><name pos:start="19:15" pos:end="19:19"><name pos:start="19:15" pos:end="19:15">s</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:19">pb</name></name></expr></argument>,  <argument pos:start="19:23" pos:end="19:23"><expr pos:start="19:23" pos:end="19:23"><literal type="number" pos:start="19:23" pos:end="19:23">3</literal></expr></argument>, <argument pos:start="19:26" pos:end="19:26"><expr pos:start="19:26" pos:end="19:26"><literal type="number" pos:start="19:26" pos:end="19:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                        <comment type="block" pos:start="19:53" pos:end="19:74">/* substream id = 0 */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:50"><expr pos:start="21:5" pos:end="21:49"><call pos:start="21:5" pos:end="21:49"><name pos:start="21:5" pos:end="21:12">put_bits</name><argument_list pos:start="21:13" pos:end="21:49">(<argument pos:start="21:14" pos:end="21:19"><expr pos:start="21:14" pos:end="21:19"><operator pos:start="21:14" pos:end="21:14">&amp;</operator><name pos:start="21:15" pos:end="21:19"><name pos:start="21:15" pos:end="21:15">s</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:19">pb</name></name></expr></argument>, <argument pos:start="21:22" pos:end="21:23"><expr pos:start="21:22" pos:end="21:23"><literal type="number" pos:start="21:22" pos:end="21:23">11</literal></expr></argument>, <argument pos:start="21:26" pos:end="21:48"><expr pos:start="21:26" pos:end="21:48"><operator pos:start="21:26" pos:end="21:26">(</operator><name pos:start="21:27" pos:end="21:39"><name pos:start="21:27" pos:end="21:27">s</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:39">frame_size</name></name> <operator pos:start="21:41" pos:end="21:41">/</operator> <literal type="number" pos:start="21:43" pos:end="21:43">2</literal><operator pos:start="21:44" pos:end="21:44">)</operator> <operator pos:start="21:46" pos:end="21:46">-</operator> <literal type="number" pos:start="21:48" pos:end="21:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="block" pos:start="21:53" pos:end="21:68">/* frame size */</comment>

    <if_stmt pos:start="23:5" pos:end="35:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:30">(<expr pos:start="23:9" pos:end="23:29"><name pos:start="23:9" pos:end="23:29"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:20">bit_alloc</name><operator pos:start="23:21" pos:end="23:21">.</operator><name pos:start="23:22" pos:end="23:29">sr_shift</name></name></expr>)</condition> <block pos:start="23:32" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:50">

        <expr_stmt pos:start="25:9" pos:end="25:33"><expr pos:start="25:9" pos:end="25:32"><call pos:start="25:9" pos:end="25:32"><name pos:start="25:9" pos:end="25:16">put_bits</name><argument_list pos:start="25:17" pos:end="25:32">(<argument pos:start="25:18" pos:end="25:23"><expr pos:start="25:18" pos:end="25:23"><operator pos:start="25:18" pos:end="25:18">&amp;</operator><name pos:start="25:19" pos:end="25:23"><name pos:start="25:19" pos:end="25:19">s</name><operator pos:start="25:20" pos:end="25:21">-&gt;</operator><name pos:start="25:22" pos:end="25:23">pb</name></name></expr></argument>, <argument pos:start="25:26" pos:end="25:26"><expr pos:start="25:26" pos:end="25:26"><literal type="number" pos:start="25:26" pos:end="25:26">2</literal></expr></argument>, <argument pos:start="25:29" pos:end="25:31"><expr pos:start="25:29" pos:end="25:31"><literal type="number" pos:start="25:29" pos:end="25:31">0x3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                   <comment type="block" pos:start="25:53" pos:end="25:64">/* fscod2 */</comment>

        <expr_stmt pos:start="27:9" pos:end="27:50"><expr pos:start="27:9" pos:end="27:49"><call pos:start="27:9" pos:end="27:49"><name pos:start="27:9" pos:end="27:16">put_bits</name><argument_list pos:start="27:17" pos:end="27:49">(<argument pos:start="27:18" pos:end="27:23"><expr pos:start="27:18" pos:end="27:23"><operator pos:start="27:18" pos:end="27:18">&amp;</operator><name pos:start="27:19" pos:end="27:23"><name pos:start="27:19" pos:end="27:19">s</name><operator pos:start="27:20" pos:end="27:21">-&gt;</operator><name pos:start="27:22" pos:end="27:23">pb</name></name></expr></argument>, <argument pos:start="27:26" pos:end="27:26"><expr pos:start="27:26" pos:end="27:26"><literal type="number" pos:start="27:26" pos:end="27:26">2</literal></expr></argument>, <argument pos:start="27:29" pos:end="27:48"><expr pos:start="27:29" pos:end="27:48"><name pos:start="27:29" pos:end="27:48"><name pos:start="27:29" pos:end="27:29">s</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:40">bit_alloc</name><operator pos:start="27:41" pos:end="27:41">.</operator><name pos:start="27:42" pos:end="27:48">sr_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="block" pos:start="27:53" pos:end="27:74">/* sample rate code */</comment>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="35:5">else <block pos:start="29:12" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:33">

        <expr_stmt pos:start="31:9" pos:end="31:50"><expr pos:start="31:9" pos:end="31:49"><call pos:start="31:9" pos:end="31:49"><name pos:start="31:9" pos:end="31:16">put_bits</name><argument_list pos:start="31:17" pos:end="31:49">(<argument pos:start="31:18" pos:end="31:23"><expr pos:start="31:18" pos:end="31:23"><operator pos:start="31:18" pos:end="31:18">&amp;</operator><name pos:start="31:19" pos:end="31:23"><name pos:start="31:19" pos:end="31:19">s</name><operator pos:start="31:20" pos:end="31:21">-&gt;</operator><name pos:start="31:22" pos:end="31:23">pb</name></name></expr></argument>, <argument pos:start="31:26" pos:end="31:26"><expr pos:start="31:26" pos:end="31:26"><literal type="number" pos:start="31:26" pos:end="31:26">2</literal></expr></argument>, <argument pos:start="31:29" pos:end="31:48"><expr pos:start="31:29" pos:end="31:48"><name pos:start="31:29" pos:end="31:48"><name pos:start="31:29" pos:end="31:29">s</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:40">bit_alloc</name><operator pos:start="31:41" pos:end="31:41">.</operator><name pos:start="31:42" pos:end="31:48">sr_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="block" pos:start="31:53" pos:end="31:74">/* sample rate code */</comment>

        <expr_stmt pos:start="33:9" pos:end="33:33"><expr pos:start="33:9" pos:end="33:32"><call pos:start="33:9" pos:end="33:32"><name pos:start="33:9" pos:end="33:16">put_bits</name><argument_list pos:start="33:17" pos:end="33:32">(<argument pos:start="33:18" pos:end="33:23"><expr pos:start="33:18" pos:end="33:23"><operator pos:start="33:18" pos:end="33:18">&amp;</operator><name pos:start="33:19" pos:end="33:23"><name pos:start="33:19" pos:end="33:19">s</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:23">pb</name></name></expr></argument>, <argument pos:start="33:26" pos:end="33:26"><expr pos:start="33:26" pos:end="33:26"><literal type="number" pos:start="33:26" pos:end="33:26">2</literal></expr></argument>, <argument pos:start="33:29" pos:end="33:31"><expr pos:start="33:29" pos:end="33:31"><literal type="number" pos:start="33:29" pos:end="33:31">0x3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                   <comment type="block" pos:start="33:53" pos:end="33:78">/* number of blocks = 6 */</comment>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:41"><expr pos:start="37:5" pos:end="37:40"><call pos:start="37:5" pos:end="37:40"><name pos:start="37:5" pos:end="37:12">put_bits</name><argument_list pos:start="37:13" pos:end="37:40">(<argument pos:start="37:14" pos:end="37:19"><expr pos:start="37:14" pos:end="37:19"><operator pos:start="37:14" pos:end="37:14">&amp;</operator><name pos:start="37:15" pos:end="37:19"><name pos:start="37:15" pos:end="37:15">s</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:19">pb</name></name></expr></argument>, <argument pos:start="37:22" pos:end="37:22"><expr pos:start="37:22" pos:end="37:22"><literal type="number" pos:start="37:22" pos:end="37:22">3</literal></expr></argument>, <argument pos:start="37:25" pos:end="37:39"><expr pos:start="37:25" pos:end="37:39"><name pos:start="37:25" pos:end="37:39"><name pos:start="37:25" pos:end="37:25">s</name><operator pos:start="37:26" pos:end="37:27">-&gt;</operator><name pos:start="37:28" pos:end="37:39">channel_mode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>           <comment type="block" pos:start="37:53" pos:end="37:75">/* audio coding mode */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:35"><expr pos:start="39:5" pos:end="39:34"><call pos:start="39:5" pos:end="39:34"><name pos:start="39:5" pos:end="39:12">put_bits</name><argument_list pos:start="39:13" pos:end="39:34">(<argument pos:start="39:14" pos:end="39:19"><expr pos:start="39:14" pos:end="39:19"><operator pos:start="39:14" pos:end="39:14">&amp;</operator><name pos:start="39:15" pos:end="39:19"><name pos:start="39:15" pos:end="39:15">s</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:19">pb</name></name></expr></argument>, <argument pos:start="39:22" pos:end="39:22"><expr pos:start="39:22" pos:end="39:22"><literal type="number" pos:start="39:22" pos:end="39:22">1</literal></expr></argument>, <argument pos:start="39:25" pos:end="39:33"><expr pos:start="39:25" pos:end="39:33"><name pos:start="39:25" pos:end="39:33"><name pos:start="39:25" pos:end="39:25">s</name><operator pos:start="39:26" pos:end="39:27">-&gt;</operator><name pos:start="39:28" pos:end="39:33">lfe_on</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>                 <comment type="block" pos:start="39:53" pos:end="39:79">/* LFE channel indicator */</comment>

    <expr_stmt pos:start="41:5" pos:end="41:41"><expr pos:start="41:5" pos:end="41:40"><call pos:start="41:5" pos:end="41:40"><name pos:start="41:5" pos:end="41:12">put_bits</name><argument_list pos:start="41:13" pos:end="41:40">(<argument pos:start="41:14" pos:end="41:19"><expr pos:start="41:14" pos:end="41:19"><operator pos:start="41:14" pos:end="41:14">&amp;</operator><name pos:start="41:15" pos:end="41:19"><name pos:start="41:15" pos:end="41:15">s</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:19">pb</name></name></expr></argument>, <argument pos:start="41:22" pos:end="41:22"><expr pos:start="41:22" pos:end="41:22"><literal type="number" pos:start="41:22" pos:end="41:22">5</literal></expr></argument>, <argument pos:start="41:25" pos:end="41:39"><expr pos:start="41:25" pos:end="41:39"><name pos:start="41:25" pos:end="41:39"><name pos:start="41:25" pos:end="41:25">s</name><operator pos:start="41:26" pos:end="41:27">-&gt;</operator><name pos:start="41:28" pos:end="41:39">bitstream_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>           <comment type="block" pos:start="41:53" pos:end="41:80">/* bitstream id (EAC3=16) */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:46"><expr pos:start="43:5" pos:end="43:45"><call pos:start="43:5" pos:end="43:45"><name pos:start="43:5" pos:end="43:12">put_bits</name><argument_list pos:start="43:13" pos:end="43:45">(<argument pos:start="43:14" pos:end="43:19"><expr pos:start="43:14" pos:end="43:19"><operator pos:start="43:14" pos:end="43:14">&amp;</operator><name pos:start="43:15" pos:end="43:19"><name pos:start="43:15" pos:end="43:15">s</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:19">pb</name></name></expr></argument>, <argument pos:start="43:22" pos:end="43:22"><expr pos:start="43:22" pos:end="43:22"><literal type="number" pos:start="43:22" pos:end="43:22">5</literal></expr></argument>, <argument pos:start="43:25" pos:end="43:44"><expr pos:start="43:25" pos:end="43:44"><operator pos:start="43:25" pos:end="43:25">-</operator><name pos:start="43:26" pos:end="43:44"><name pos:start="43:26" pos:end="43:28">opt</name><operator pos:start="43:29" pos:end="43:30">-&gt;</operator><name pos:start="43:31" pos:end="43:44">dialogue_level</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>      <comment type="block" pos:start="43:53" pos:end="43:86">/* dialogue normalization level */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:27"><expr pos:start="45:5" pos:end="45:26"><call pos:start="45:5" pos:end="45:26"><name pos:start="45:5" pos:end="45:12">put_bits</name><argument_list pos:start="45:13" pos:end="45:26">(<argument pos:start="45:14" pos:end="45:19"><expr pos:start="45:14" pos:end="45:19"><operator pos:start="45:14" pos:end="45:14">&amp;</operator><name pos:start="45:15" pos:end="45:19"><name pos:start="45:15" pos:end="45:15">s</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:19">pb</name></name></expr></argument>, <argument pos:start="45:22" pos:end="45:22"><expr pos:start="45:22" pos:end="45:22"><literal type="number" pos:start="45:22" pos:end="45:22">1</literal></expr></argument>, <argument pos:start="45:25" pos:end="45:25"><expr pos:start="45:25" pos:end="45:25"><literal type="number" pos:start="45:25" pos:end="45:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                         <comment type="block" pos:start="45:53" pos:end="45:77">/* no compression gain */</comment>

    <expr_stmt pos:start="47:5" pos:end="47:27"><expr pos:start="47:5" pos:end="47:26"><call pos:start="47:5" pos:end="47:26"><name pos:start="47:5" pos:end="47:12">put_bits</name><argument_list pos:start="47:13" pos:end="47:26">(<argument pos:start="47:14" pos:end="47:19"><expr pos:start="47:14" pos:end="47:19"><operator pos:start="47:14" pos:end="47:14">&amp;</operator><name pos:start="47:15" pos:end="47:19"><name pos:start="47:15" pos:end="47:15">s</name><operator pos:start="47:16" pos:end="47:17">-&gt;</operator><name pos:start="47:18" pos:end="47:19">pb</name></name></expr></argument>, <argument pos:start="47:22" pos:end="47:22"><expr pos:start="47:22" pos:end="47:22"><literal type="number" pos:start="47:22" pos:end="47:22">1</literal></expr></argument>, <argument pos:start="47:25" pos:end="47:25"><expr pos:start="47:25" pos:end="47:25"><literal type="number" pos:start="47:25" pos:end="47:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                         <comment type="block" pos:start="47:53" pos:end="47:76">/* no mixing metadata */</comment>

    <comment type="block" pos:start="49:5" pos:end="49:31">/* TODO: mixing metadata */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:27"><expr pos:start="51:5" pos:end="51:26"><call pos:start="51:5" pos:end="51:26"><name pos:start="51:5" pos:end="51:12">put_bits</name><argument_list pos:start="51:13" pos:end="51:26">(<argument pos:start="51:14" pos:end="51:19"><expr pos:start="51:14" pos:end="51:19"><operator pos:start="51:14" pos:end="51:14">&amp;</operator><name pos:start="51:15" pos:end="51:19"><name pos:start="51:15" pos:end="51:15">s</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:19">pb</name></name></expr></argument>, <argument pos:start="51:22" pos:end="51:22"><expr pos:start="51:22" pos:end="51:22"><literal type="number" pos:start="51:22" pos:end="51:22">1</literal></expr></argument>, <argument pos:start="51:25" pos:end="51:25"><expr pos:start="51:25" pos:end="51:25"><literal type="number" pos:start="51:25" pos:end="51:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                         <comment type="block" pos:start="51:53" pos:end="51:74">/* no info metadata */</comment>

    <comment type="block" pos:start="53:5" pos:end="53:29">/* TODO: info metadata */</comment>

    <expr_stmt pos:start="55:5" pos:end="55:27"><expr pos:start="55:5" pos:end="55:26"><call pos:start="55:5" pos:end="55:26"><name pos:start="55:5" pos:end="55:12">put_bits</name><argument_list pos:start="55:13" pos:end="55:26">(<argument pos:start="55:14" pos:end="55:19"><expr pos:start="55:14" pos:end="55:19"><operator pos:start="55:14" pos:end="55:14">&amp;</operator><name pos:start="55:15" pos:end="55:19"><name pos:start="55:15" pos:end="55:15">s</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:19">pb</name></name></expr></argument>, <argument pos:start="55:22" pos:end="55:22"><expr pos:start="55:22" pos:end="55:22"><literal type="number" pos:start="55:22" pos:end="55:22">1</literal></expr></argument>, <argument pos:start="55:25" pos:end="55:25"><expr pos:start="55:25" pos:end="55:25"><literal type="number" pos:start="55:25" pos:end="55:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                         <comment type="block" pos:start="55:53" pos:end="55:87">/* no additional bit stream info */</comment>



    <comment type="block" pos:start="59:5" pos:end="59:22">/* frame header */</comment>

    <expr_stmt pos:start="61:5" pos:end="61:27"><expr pos:start="61:5" pos:end="61:26"><call pos:start="61:5" pos:end="61:26"><name pos:start="61:5" pos:end="61:12">put_bits</name><argument_list pos:start="61:13" pos:end="61:26">(<argument pos:start="61:14" pos:end="61:19"><expr pos:start="61:14" pos:end="61:19"><operator pos:start="61:14" pos:end="61:14">&amp;</operator><name pos:start="61:15" pos:end="61:19"><name pos:start="61:15" pos:end="61:15">s</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:19">pb</name></name></expr></argument>, <argument pos:start="61:22" pos:end="61:22"><expr pos:start="61:22" pos:end="61:22"><literal type="number" pos:start="61:22" pos:end="61:22">1</literal></expr></argument>, <argument pos:start="61:25" pos:end="61:25"><expr pos:start="61:25" pos:end="61:25"><literal type="number" pos:start="61:25" pos:end="61:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                         <comment type="block" pos:start="61:53" pos:end="61:95">/* exponent strategy syntax = each block */</comment>

    <expr_stmt pos:start="63:5" pos:end="63:27"><expr pos:start="63:5" pos:end="63:26"><call pos:start="63:5" pos:end="63:26"><name pos:start="63:5" pos:end="63:12">put_bits</name><argument_list pos:start="63:13" pos:end="63:26">(<argument pos:start="63:14" pos:end="63:19"><expr pos:start="63:14" pos:end="63:19"><operator pos:start="63:14" pos:end="63:14">&amp;</operator><name pos:start="63:15" pos:end="63:19"><name pos:start="63:15" pos:end="63:15">s</name><operator pos:start="63:16" pos:end="63:17">-&gt;</operator><name pos:start="63:18" pos:end="63:19">pb</name></name></expr></argument>, <argument pos:start="63:22" pos:end="63:22"><expr pos:start="63:22" pos:end="63:22"><literal type="number" pos:start="63:22" pos:end="63:22">1</literal></expr></argument>, <argument pos:start="63:25" pos:end="63:25"><expr pos:start="63:25" pos:end="63:25"><literal type="number" pos:start="63:25" pos:end="63:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                         <comment type="block" pos:start="63:53" pos:end="63:74">/* aht enabled = no */</comment>

    <expr_stmt pos:start="65:5" pos:end="65:27"><expr pos:start="65:5" pos:end="65:26"><call pos:start="65:5" pos:end="65:26"><name pos:start="65:5" pos:end="65:12">put_bits</name><argument_list pos:start="65:13" pos:end="65:26">(<argument pos:start="65:14" pos:end="65:19"><expr pos:start="65:14" pos:end="65:19"><operator pos:start="65:14" pos:end="65:14">&amp;</operator><name pos:start="65:15" pos:end="65:19"><name pos:start="65:15" pos:end="65:15">s</name><operator pos:start="65:16" pos:end="65:17">-&gt;</operator><name pos:start="65:18" pos:end="65:19">pb</name></name></expr></argument>, <argument pos:start="65:22" pos:end="65:22"><expr pos:start="65:22" pos:end="65:22"><literal type="number" pos:start="65:22" pos:end="65:22">2</literal></expr></argument>, <argument pos:start="65:25" pos:end="65:25"><expr pos:start="65:25" pos:end="65:25"><literal type="number" pos:start="65:25" pos:end="65:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                         <comment type="block" pos:start="65:53" pos:end="65:81">/* snr offset strategy = 1 */</comment>

    <expr_stmt pos:start="67:5" pos:end="67:27"><expr pos:start="67:5" pos:end="67:26"><call pos:start="67:5" pos:end="67:26"><name pos:start="67:5" pos:end="67:12">put_bits</name><argument_list pos:start="67:13" pos:end="67:26">(<argument pos:start="67:14" pos:end="67:19"><expr pos:start="67:14" pos:end="67:19"><operator pos:start="67:14" pos:end="67:14">&amp;</operator><name pos:start="67:15" pos:end="67:19"><name pos:start="67:15" pos:end="67:15">s</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:19">pb</name></name></expr></argument>, <argument pos:start="67:22" pos:end="67:22"><expr pos:start="67:22" pos:end="67:22"><literal type="number" pos:start="67:22" pos:end="67:22">1</literal></expr></argument>, <argument pos:start="67:25" pos:end="67:25"><expr pos:start="67:25" pos:end="67:25"><literal type="number" pos:start="67:25" pos:end="67:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                         <comment type="block" pos:start="67:53" pos:end="67:101">/* transient pre-noise processing enabled = no */</comment>

    <expr_stmt pos:start="69:5" pos:end="69:27"><expr pos:start="69:5" pos:end="69:26"><call pos:start="69:5" pos:end="69:26"><name pos:start="69:5" pos:end="69:12">put_bits</name><argument_list pos:start="69:13" pos:end="69:26">(<argument pos:start="69:14" pos:end="69:19"><expr pos:start="69:14" pos:end="69:19"><operator pos:start="69:14" pos:end="69:14">&amp;</operator><name pos:start="69:15" pos:end="69:19"><name pos:start="69:15" pos:end="69:15">s</name><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:19">pb</name></name></expr></argument>, <argument pos:start="69:22" pos:end="69:22"><expr pos:start="69:22" pos:end="69:22"><literal type="number" pos:start="69:22" pos:end="69:22">1</literal></expr></argument>, <argument pos:start="69:25" pos:end="69:25"><expr pos:start="69:25" pos:end="69:25"><literal type="number" pos:start="69:25" pos:end="69:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                         <comment type="block" pos:start="69:53" pos:end="69:90">/* block switch syntax enabled = no */</comment>

    <expr_stmt pos:start="71:5" pos:end="71:27"><expr pos:start="71:5" pos:end="71:26"><call pos:start="71:5" pos:end="71:26"><name pos:start="71:5" pos:end="71:12">put_bits</name><argument_list pos:start="71:13" pos:end="71:26">(<argument pos:start="71:14" pos:end="71:19"><expr pos:start="71:14" pos:end="71:19"><operator pos:start="71:14" pos:end="71:14">&amp;</operator><name pos:start="71:15" pos:end="71:19"><name pos:start="71:15" pos:end="71:15">s</name><operator pos:start="71:16" pos:end="71:17">-&gt;</operator><name pos:start="71:18" pos:end="71:19">pb</name></name></expr></argument>, <argument pos:start="71:22" pos:end="71:22"><expr pos:start="71:22" pos:end="71:22"><literal type="number" pos:start="71:22" pos:end="71:22">1</literal></expr></argument>, <argument pos:start="71:25" pos:end="71:25"><expr pos:start="71:25" pos:end="71:25"><literal type="number" pos:start="71:25" pos:end="71:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                         <comment type="block" pos:start="71:53" pos:end="71:89">/* dither flag syntax enabled = no */</comment>

    <expr_stmt pos:start="73:5" pos:end="73:27"><expr pos:start="73:5" pos:end="73:26"><call pos:start="73:5" pos:end="73:26"><name pos:start="73:5" pos:end="73:12">put_bits</name><argument_list pos:start="73:13" pos:end="73:26">(<argument pos:start="73:14" pos:end="73:19"><expr pos:start="73:14" pos:end="73:19"><operator pos:start="73:14" pos:end="73:14">&amp;</operator><name pos:start="73:15" pos:end="73:19"><name pos:start="73:15" pos:end="73:15">s</name><operator pos:start="73:16" pos:end="73:17">-&gt;</operator><name pos:start="73:18" pos:end="73:19">pb</name></name></expr></argument>, <argument pos:start="73:22" pos:end="73:22"><expr pos:start="73:22" pos:end="73:22"><literal type="number" pos:start="73:22" pos:end="73:22">1</literal></expr></argument>, <argument pos:start="73:25" pos:end="73:25"><expr pos:start="73:25" pos:end="73:25"><literal type="number" pos:start="73:25" pos:end="73:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                         <comment type="block" pos:start="73:53" pos:end="73:98">/* bit allocation model syntax enabled = no */</comment>

    <expr_stmt pos:start="75:5" pos:end="75:27"><expr pos:start="75:5" pos:end="75:26"><call pos:start="75:5" pos:end="75:26"><name pos:start="75:5" pos:end="75:12">put_bits</name><argument_list pos:start="75:13" pos:end="75:26">(<argument pos:start="75:14" pos:end="75:19"><expr pos:start="75:14" pos:end="75:19"><operator pos:start="75:14" pos:end="75:14">&amp;</operator><name pos:start="75:15" pos:end="75:19"><name pos:start="75:15" pos:end="75:15">s</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:19">pb</name></name></expr></argument>, <argument pos:start="75:22" pos:end="75:22"><expr pos:start="75:22" pos:end="75:22"><literal type="number" pos:start="75:22" pos:end="75:22">1</literal></expr></argument>, <argument pos:start="75:25" pos:end="75:25"><expr pos:start="75:25" pos:end="75:25"><literal type="number" pos:start="75:25" pos:end="75:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                         <comment type="block" pos:start="75:53" pos:end="75:86">/* fast gain codes enabled = no */</comment>

    <expr_stmt pos:start="77:5" pos:end="77:27"><expr pos:start="77:5" pos:end="77:26"><call pos:start="77:5" pos:end="77:26"><name pos:start="77:5" pos:end="77:12">put_bits</name><argument_list pos:start="77:13" pos:end="77:26">(<argument pos:start="77:14" pos:end="77:19"><expr pos:start="77:14" pos:end="77:19"><operator pos:start="77:14" pos:end="77:14">&amp;</operator><name pos:start="77:15" pos:end="77:19"><name pos:start="77:15" pos:end="77:15">s</name><operator pos:start="77:16" pos:end="77:17">-&gt;</operator><name pos:start="77:18" pos:end="77:19">pb</name></name></expr></argument>, <argument pos:start="77:22" pos:end="77:22"><expr pos:start="77:22" pos:end="77:22"><literal type="number" pos:start="77:22" pos:end="77:22">1</literal></expr></argument>, <argument pos:start="77:25" pos:end="77:25"><expr pos:start="77:25" pos:end="77:25"><literal type="number" pos:start="77:25" pos:end="77:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                         <comment type="block" pos:start="77:53" pos:end="77:81">/* dba syntax enabled = no */</comment>

    <expr_stmt pos:start="79:5" pos:end="79:27"><expr pos:start="79:5" pos:end="79:26"><call pos:start="79:5" pos:end="79:26"><name pos:start="79:5" pos:end="79:12">put_bits</name><argument_list pos:start="79:13" pos:end="79:26">(<argument pos:start="79:14" pos:end="79:19"><expr pos:start="79:14" pos:end="79:19"><operator pos:start="79:14" pos:end="79:14">&amp;</operator><name pos:start="79:15" pos:end="79:19"><name pos:start="79:15" pos:end="79:15">s</name><operator pos:start="79:16" pos:end="79:17">-&gt;</operator><name pos:start="79:18" pos:end="79:19">pb</name></name></expr></argument>, <argument pos:start="79:22" pos:end="79:22"><expr pos:start="79:22" pos:end="79:22"><literal type="number" pos:start="79:22" pos:end="79:22">1</literal></expr></argument>, <argument pos:start="79:25" pos:end="79:25"><expr pos:start="79:25" pos:end="79:25"><literal type="number" pos:start="79:25" pos:end="79:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                         <comment type="block" pos:start="79:53" pos:end="79:88">/* skip field syntax enabled = no */</comment>

    <expr_stmt pos:start="81:5" pos:end="81:27"><expr pos:start="81:5" pos:end="81:26"><call pos:start="81:5" pos:end="81:26"><name pos:start="81:5" pos:end="81:12">put_bits</name><argument_list pos:start="81:13" pos:end="81:26">(<argument pos:start="81:14" pos:end="81:19"><expr pos:start="81:14" pos:end="81:19"><operator pos:start="81:14" pos:end="81:14">&amp;</operator><name pos:start="81:15" pos:end="81:19"><name pos:start="81:15" pos:end="81:15">s</name><operator pos:start="81:16" pos:end="81:17">-&gt;</operator><name pos:start="81:18" pos:end="81:19">pb</name></name></expr></argument>, <argument pos:start="81:22" pos:end="81:22"><expr pos:start="81:22" pos:end="81:22"><literal type="number" pos:start="81:22" pos:end="81:22">1</literal></expr></argument>, <argument pos:start="81:25" pos:end="81:25"><expr pos:start="81:25" pos:end="81:25"><literal type="number" pos:start="81:25" pos:end="81:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                         <comment type="block" pos:start="81:53" pos:end="81:74">/* spx enabled = no */</comment>

    <comment type="block" pos:start="83:5" pos:end="83:37">/* coupling strategy use flags */</comment>

    <if_stmt pos:start="85:5" pos:end="101:5"><if pos:start="85:5" pos:end="101:5">if <condition pos:start="85:8" pos:end="85:42">(<expr pos:start="85:9" pos:end="85:41"><name pos:start="85:9" pos:end="85:23"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:23">channel_mode</name></name> <operator pos:start="85:25" pos:end="85:25">&gt;</operator> <name pos:start="85:27" pos:end="85:41">AC3_CHMODE_MONO</name></expr>)</condition> <block pos:start="85:44" pos:end="101:5">{<block_content pos:start="87:9" pos:end="99:9">

        <expr_stmt pos:start="87:9" pos:end="87:53"><expr pos:start="87:9" pos:end="87:52"><call pos:start="87:9" pos:end="87:52"><name pos:start="87:9" pos:end="87:16">put_bits</name><argument_list pos:start="87:17" pos:end="87:52">(<argument pos:start="87:18" pos:end="87:23"><expr pos:start="87:18" pos:end="87:23"><operator pos:start="87:18" pos:end="87:18">&amp;</operator><name pos:start="87:19" pos:end="87:23"><name pos:start="87:19" pos:end="87:19">s</name><operator pos:start="87:20" pos:end="87:21">-&gt;</operator><name pos:start="87:22" pos:end="87:23">pb</name></name></expr></argument>, <argument pos:start="87:26" pos:end="87:26"><expr pos:start="87:26" pos:end="87:26"><literal type="number" pos:start="87:26" pos:end="87:26">1</literal></expr></argument>, <argument pos:start="87:29" pos:end="87:51"><expr pos:start="87:29" pos:end="87:51"><name pos:start="87:29" pos:end="87:40"><name pos:start="87:29" pos:end="87:29">s</name><operator pos:start="87:30" pos:end="87:31">-&gt;</operator><name pos:start="87:32" pos:end="87:37">blocks</name><index pos:start="87:38" pos:end="87:40">[<expr pos:start="87:39" pos:end="87:39"><literal type="number" pos:start="87:39" pos:end="87:39">0</literal></expr>]</index></name><operator pos:start="87:41" pos:end="87:41">.</operator><name pos:start="87:42" pos:end="87:51">cpl_in_use</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="89:9" pos:end="99:9">for <control pos:start="89:13" pos:end="89:50">(<init pos:start="89:14" pos:end="89:21"><expr pos:start="89:14" pos:end="89:20"><name pos:start="89:14" pos:end="89:16">blk</name> <operator pos:start="89:18" pos:end="89:18">=</operator> <literal type="number" pos:start="89:20" pos:end="89:20">1</literal></expr>;</init> <condition pos:start="89:23" pos:end="89:43"><expr pos:start="89:23" pos:end="89:42"><name pos:start="89:23" pos:end="89:25">blk</name> <operator pos:start="89:27" pos:end="89:27">&lt;</operator> <name pos:start="89:29" pos:end="89:42">AC3_MAX_BLOCKS</name></expr>;</condition> <incr pos:start="89:45" pos:end="89:49"><expr pos:start="89:45" pos:end="89:49"><name pos:start="89:45" pos:end="89:47">blk</name><operator pos:start="89:48" pos:end="89:49">++</operator></expr></incr>)</control> <block pos:start="89:52" pos:end="99:9">{<block_content pos:start="91:13" pos:end="97:55">

            <decl_stmt pos:start="91:13" pos:end="91:46"><decl pos:start="91:13" pos:end="91:45"><type pos:start="91:13" pos:end="91:22"><name pos:start="91:13" pos:end="91:20">AC3Block</name> <modifier pos:start="91:22" pos:end="91:22">*</modifier></type><name pos:start="91:23" pos:end="91:27">block</name> <init pos:start="91:29" pos:end="91:45">= <expr pos:start="91:31" pos:end="91:45"><operator pos:start="91:31" pos:end="91:31">&amp;</operator><name pos:start="91:32" pos:end="91:45"><name pos:start="91:32" pos:end="91:32">s</name><operator pos:start="91:33" pos:end="91:34">-&gt;</operator><name pos:start="91:35" pos:end="91:40">blocks</name><index pos:start="91:41" pos:end="91:45">[<expr pos:start="91:42" pos:end="91:44"><name pos:start="91:42" pos:end="91:44">blk</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:57"><expr pos:start="93:13" pos:end="93:56"><call pos:start="93:13" pos:end="93:56"><name pos:start="93:13" pos:end="93:20">put_bits</name><argument_list pos:start="93:21" pos:end="93:56">(<argument pos:start="93:22" pos:end="93:27"><expr pos:start="93:22" pos:end="93:27"><operator pos:start="93:22" pos:end="93:22">&amp;</operator><name pos:start="93:23" pos:end="93:27"><name pos:start="93:23" pos:end="93:23">s</name><operator pos:start="93:24" pos:end="93:25">-&gt;</operator><name pos:start="93:26" pos:end="93:27">pb</name></name></expr></argument>, <argument pos:start="93:30" pos:end="93:30"><expr pos:start="93:30" pos:end="93:30"><literal type="number" pos:start="93:30" pos:end="93:30">1</literal></expr></argument>, <argument pos:start="93:33" pos:end="93:55"><expr pos:start="93:33" pos:end="93:55"><name pos:start="93:33" pos:end="93:55"><name pos:start="93:33" pos:end="93:37">block</name><operator pos:start="93:38" pos:end="93:39">-&gt;</operator><name pos:start="93:40" pos:end="93:55">new_cpl_strategy</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="95:13" pos:end="97:55"><if pos:start="95:13" pos:end="97:55">if <condition pos:start="95:16" pos:end="95:40">(<expr pos:start="95:17" pos:end="95:39"><name pos:start="95:17" pos:end="95:39"><name pos:start="95:17" pos:end="95:21">block</name><operator pos:start="95:22" pos:end="95:23">-&gt;</operator><name pos:start="95:24" pos:end="95:39">new_cpl_strategy</name></name></expr>)</condition><block type="pseudo" pos:start="97:17" pos:end="97:55"><block_content pos:start="97:17" pos:end="97:55">

                <expr_stmt pos:start="97:17" pos:end="97:55"><expr pos:start="97:17" pos:end="97:54"><call pos:start="97:17" pos:end="97:54"><name pos:start="97:17" pos:end="97:24">put_bits</name><argument_list pos:start="97:25" pos:end="97:54">(<argument pos:start="97:26" pos:end="97:31"><expr pos:start="97:26" pos:end="97:31"><operator pos:start="97:26" pos:end="97:26">&amp;</operator><name pos:start="97:27" pos:end="97:31"><name pos:start="97:27" pos:end="97:27">s</name><operator pos:start="97:28" pos:end="97:29">-&gt;</operator><name pos:start="97:30" pos:end="97:31">pb</name></name></expr></argument>, <argument pos:start="97:34" pos:end="97:34"><expr pos:start="97:34" pos:end="97:34"><literal type="number" pos:start="97:34" pos:end="97:34">1</literal></expr></argument>, <argument pos:start="97:37" pos:end="97:53"><expr pos:start="97:37" pos:end="97:53"><name pos:start="97:37" pos:end="97:53"><name pos:start="97:37" pos:end="97:41">block</name><operator pos:start="97:42" pos:end="97:43">-&gt;</operator><name pos:start="97:44" pos:end="97:53">cpl_in_use</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="103:5" pos:end="103:27">/* exponent strategy */</comment>

    <for pos:start="105:5" pos:end="109:58">for <control pos:start="105:9" pos:end="105:46">(<init pos:start="105:10" pos:end="105:17"><expr pos:start="105:10" pos:end="105:16"><name pos:start="105:10" pos:end="105:12">blk</name> <operator pos:start="105:14" pos:end="105:14">=</operator> <literal type="number" pos:start="105:16" pos:end="105:16">0</literal></expr>;</init> <condition pos:start="105:19" pos:end="105:39"><expr pos:start="105:19" pos:end="105:38"><name pos:start="105:19" pos:end="105:21">blk</name> <operator pos:start="105:23" pos:end="105:23">&lt;</operator> <name pos:start="105:25" pos:end="105:38">AC3_MAX_BLOCKS</name></expr>;</condition> <incr pos:start="105:41" pos:end="105:45"><expr pos:start="105:41" pos:end="105:45"><name pos:start="105:41" pos:end="105:43">blk</name><operator pos:start="105:44" pos:end="105:45">++</operator></expr></incr>)</control><block type="pseudo" pos:start="107:9" pos:end="109:58"><block_content pos:start="107:9" pos:end="109:58">

        <for pos:start="107:9" pos:end="109:58">for <control pos:start="107:13" pos:end="107:74">(<init pos:start="107:14" pos:end="107:45"><expr pos:start="107:14" pos:end="107:44"><name pos:start="107:14" pos:end="107:15">ch</name> <operator pos:start="107:17" pos:end="107:17">=</operator> <operator pos:start="107:19" pos:end="107:19">!</operator><name pos:start="107:20" pos:end="107:33"><name pos:start="107:20" pos:end="107:20">s</name><operator pos:start="107:21" pos:end="107:22">-&gt;</operator><name pos:start="107:23" pos:end="107:28">blocks</name><index pos:start="107:29" pos:end="107:33">[<expr pos:start="107:30" pos:end="107:32"><name pos:start="107:30" pos:end="107:32">blk</name></expr>]</index></name><operator pos:start="107:34" pos:end="107:34">.</operator><name pos:start="107:35" pos:end="107:44">cpl_in_use</name></expr>;</init> <condition pos:start="107:47" pos:end="107:68"><expr pos:start="107:47" pos:end="107:67"><name pos:start="107:47" pos:end="107:48">ch</name> <operator pos:start="107:50" pos:end="107:51">&lt;=</operator> <name pos:start="107:53" pos:end="107:67"><name pos:start="107:53" pos:end="107:53">s</name><operator pos:start="107:54" pos:end="107:55">-&gt;</operator><name pos:start="107:56" pos:end="107:67">fbw_channels</name></name></expr>;</condition> <incr pos:start="107:70" pos:end="107:73"><expr pos:start="107:70" pos:end="107:73"><name pos:start="107:70" pos:end="107:71">ch</name><operator pos:start="107:72" pos:end="107:73">++</operator></expr></incr>)</control><block type="pseudo" pos:start="109:13" pos:end="109:58"><block_content pos:start="109:13" pos:end="109:58">

            <expr_stmt pos:start="109:13" pos:end="109:58"><expr pos:start="109:13" pos:end="109:57"><call pos:start="109:13" pos:end="109:57"><name pos:start="109:13" pos:end="109:20">put_bits</name><argument_list pos:start="109:21" pos:end="109:57">(<argument pos:start="109:22" pos:end="109:27"><expr pos:start="109:22" pos:end="109:27"><operator pos:start="109:22" pos:end="109:22">&amp;</operator><name pos:start="109:23" pos:end="109:27"><name pos:start="109:23" pos:end="109:23">s</name><operator pos:start="109:24" pos:end="109:25">-&gt;</operator><name pos:start="109:26" pos:end="109:27">pb</name></name></expr></argument>, <argument pos:start="109:30" pos:end="109:30"><expr pos:start="109:30" pos:end="109:30"><literal type="number" pos:start="109:30" pos:end="109:30">2</literal></expr></argument>, <argument pos:start="109:33" pos:end="109:56"><expr pos:start="109:33" pos:end="109:56"><name pos:start="109:33" pos:end="109:56"><name pos:start="109:33" pos:end="109:33">s</name><operator pos:start="109:34" pos:end="109:35">-&gt;</operator><name pos:start="109:36" pos:end="109:47">exp_strategy</name><index pos:start="109:48" pos:end="109:51">[<expr pos:start="109:49" pos:end="109:50"><name pos:start="109:49" pos:end="109:50">ch</name></expr>]</index><index pos:start="109:52" pos:end="109:56">[<expr pos:start="109:53" pos:end="109:55"><name pos:start="109:53" pos:end="109:55">blk</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></for>

    <if_stmt pos:start="111:5" pos:end="117:5"><if pos:start="111:5" pos:end="117:5">if <condition pos:start="111:8" pos:end="111:18">(<expr pos:start="111:9" pos:end="111:17"><name pos:start="111:9" pos:end="111:17"><name pos:start="111:9" pos:end="111:9">s</name><operator pos:start="111:10" pos:end="111:11">-&gt;</operator><name pos:start="111:12" pos:end="111:17">lfe_on</name></name></expr>)</condition> <block pos:start="111:20" pos:end="117:5">{<block_content pos:start="113:9" pos:end="115:70">

        <for pos:start="113:9" pos:end="115:70">for <control pos:start="113:13" pos:end="113:50">(<init pos:start="113:14" pos:end="113:21"><expr pos:start="113:14" pos:end="113:20"><name pos:start="113:14" pos:end="113:16">blk</name> <operator pos:start="113:18" pos:end="113:18">=</operator> <literal type="number" pos:start="113:20" pos:end="113:20">0</literal></expr>;</init> <condition pos:start="113:23" pos:end="113:43"><expr pos:start="113:23" pos:end="113:42"><name pos:start="113:23" pos:end="113:25">blk</name> <operator pos:start="113:27" pos:end="113:27">&lt;</operator> <name pos:start="113:29" pos:end="113:42">AC3_MAX_BLOCKS</name></expr>;</condition> <incr pos:start="113:45" pos:end="113:49"><expr pos:start="113:45" pos:end="113:49"><name pos:start="113:45" pos:end="113:47">blk</name><operator pos:start="113:48" pos:end="113:49">++</operator></expr></incr>)</control><block type="pseudo" pos:start="115:13" pos:end="115:70"><block_content pos:start="115:13" pos:end="115:70">

            <expr_stmt pos:start="115:13" pos:end="115:70"><expr pos:start="115:13" pos:end="115:69"><call pos:start="115:13" pos:end="115:69"><name pos:start="115:13" pos:end="115:20">put_bits</name><argument_list pos:start="115:21" pos:end="115:69">(<argument pos:start="115:22" pos:end="115:27"><expr pos:start="115:22" pos:end="115:27"><operator pos:start="115:22" pos:end="115:22">&amp;</operator><name pos:start="115:23" pos:end="115:27"><name pos:start="115:23" pos:end="115:23">s</name><operator pos:start="115:24" pos:end="115:25">-&gt;</operator><name pos:start="115:26" pos:end="115:27">pb</name></name></expr></argument>, <argument pos:start="115:30" pos:end="115:30"><expr pos:start="115:30" pos:end="115:30"><literal type="number" pos:start="115:30" pos:end="115:30">1</literal></expr></argument>, <argument pos:start="115:33" pos:end="115:68"><expr pos:start="115:33" pos:end="115:68"><name pos:start="115:33" pos:end="115:68"><name pos:start="115:33" pos:end="115:33">s</name><operator pos:start="115:34" pos:end="115:35">-&gt;</operator><name pos:start="115:36" pos:end="115:47">exp_strategy</name><index pos:start="115:48" pos:end="115:63">[<expr pos:start="115:49" pos:end="115:62"><name pos:start="115:49" pos:end="115:62"><name pos:start="115:49" pos:end="115:49">s</name><operator pos:start="115:50" pos:end="115:51">-&gt;</operator><name pos:start="115:52" pos:end="115:62">lfe_channel</name></name></expr>]</index><index pos:start="115:64" pos:end="115:68">[<expr pos:start="115:65" pos:end="115:67"><name pos:start="115:65" pos:end="115:67">blk</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="119:5" pos:end="119:84">/* E-AC-3 to AC-3 converter exponent strategy (unfortunately not optional...) */</comment>

    <for pos:start="121:5" pos:end="123:31">for <control pos:start="121:9" pos:end="121:45">(<init pos:start="121:10" pos:end="121:16"><expr pos:start="121:10" pos:end="121:15"><name pos:start="121:10" pos:end="121:11">ch</name> <operator pos:start="121:13" pos:end="121:13">=</operator> <literal type="number" pos:start="121:15" pos:end="121:15">1</literal></expr>;</init> <condition pos:start="121:18" pos:end="121:39"><expr pos:start="121:18" pos:end="121:38"><name pos:start="121:18" pos:end="121:19">ch</name> <operator pos:start="121:21" pos:end="121:22">&lt;=</operator> <name pos:start="121:24" pos:end="121:38"><name pos:start="121:24" pos:end="121:24">s</name><operator pos:start="121:25" pos:end="121:26">-&gt;</operator><name pos:start="121:27" pos:end="121:38">fbw_channels</name></name></expr>;</condition> <incr pos:start="121:41" pos:end="121:44"><expr pos:start="121:41" pos:end="121:44"><name pos:start="121:41" pos:end="121:42">ch</name><operator pos:start="121:43" pos:end="121:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="123:9" pos:end="123:31"><block_content pos:start="123:9" pos:end="123:31">

        <expr_stmt pos:start="123:9" pos:end="123:31"><expr pos:start="123:9" pos:end="123:30"><call pos:start="123:9" pos:end="123:30"><name pos:start="123:9" pos:end="123:16">put_bits</name><argument_list pos:start="123:17" pos:end="123:30">(<argument pos:start="123:18" pos:end="123:23"><expr pos:start="123:18" pos:end="123:23"><operator pos:start="123:18" pos:end="123:18">&amp;</operator><name pos:start="123:19" pos:end="123:23"><name pos:start="123:19" pos:end="123:19">s</name><operator pos:start="123:20" pos:end="123:21">-&gt;</operator><name pos:start="123:22" pos:end="123:23">pb</name></name></expr></argument>, <argument pos:start="123:26" pos:end="123:26"><expr pos:start="123:26" pos:end="123:26"><literal type="number" pos:start="123:26" pos:end="123:26">5</literal></expr></argument>, <argument pos:start="123:29" pos:end="123:29"><expr pos:start="123:29" pos:end="123:29"><literal type="number" pos:start="123:29" pos:end="123:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <comment type="block" pos:start="125:5" pos:end="125:21">/* snr offsets */</comment>

    <expr_stmt pos:start="127:5" pos:end="127:46"><expr pos:start="127:5" pos:end="127:45"><call pos:start="127:5" pos:end="127:45"><name pos:start="127:5" pos:end="127:12">put_bits</name><argument_list pos:start="127:13" pos:end="127:45">(<argument pos:start="127:14" pos:end="127:19"><expr pos:start="127:14" pos:end="127:19"><operator pos:start="127:14" pos:end="127:14">&amp;</operator><name pos:start="127:15" pos:end="127:19"><name pos:start="127:15" pos:end="127:15">s</name><operator pos:start="127:16" pos:end="127:17">-&gt;</operator><name pos:start="127:18" pos:end="127:19">pb</name></name></expr></argument>, <argument pos:start="127:22" pos:end="127:22"><expr pos:start="127:22" pos:end="127:22"><literal type="number" pos:start="127:22" pos:end="127:22">6</literal></expr></argument>, <argument pos:start="127:25" pos:end="127:44"><expr pos:start="127:25" pos:end="127:44"><name pos:start="127:25" pos:end="127:44"><name pos:start="127:25" pos:end="127:25">s</name><operator pos:start="127:26" pos:end="127:27">-&gt;</operator><name pos:start="127:28" pos:end="127:44">coarse_snr_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:47"><expr pos:start="129:5" pos:end="129:46"><call pos:start="129:5" pos:end="129:46"><name pos:start="129:5" pos:end="129:12">put_bits</name><argument_list pos:start="129:13" pos:end="129:46">(<argument pos:start="129:14" pos:end="129:19"><expr pos:start="129:14" pos:end="129:19"><operator pos:start="129:14" pos:end="129:14">&amp;</operator><name pos:start="129:15" pos:end="129:19"><name pos:start="129:15" pos:end="129:15">s</name><operator pos:start="129:16" pos:end="129:17">-&gt;</operator><name pos:start="129:18" pos:end="129:19">pb</name></name></expr></argument>, <argument pos:start="129:22" pos:end="129:22"><expr pos:start="129:22" pos:end="129:22"><literal type="number" pos:start="129:22" pos:end="129:22">4</literal></expr></argument>, <argument pos:start="129:25" pos:end="129:45"><expr pos:start="129:25" pos:end="129:45"><name pos:start="129:25" pos:end="129:45"><name pos:start="129:25" pos:end="129:25">s</name><operator pos:start="129:26" pos:end="129:27">-&gt;</operator><name pos:start="129:28" pos:end="129:42">fine_snr_offset</name><index pos:start="129:43" pos:end="129:45">[<expr pos:start="129:44" pos:end="129:44"><literal type="number" pos:start="129:44" pos:end="129:44">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="131:5" pos:end="131:26">/* block start info */</comment>

    <expr_stmt pos:start="133:5" pos:end="133:27"><expr pos:start="133:5" pos:end="133:26"><call pos:start="133:5" pos:end="133:26"><name pos:start="133:5" pos:end="133:12">put_bits</name><argument_list pos:start="133:13" pos:end="133:26">(<argument pos:start="133:14" pos:end="133:19"><expr pos:start="133:14" pos:end="133:19"><operator pos:start="133:14" pos:end="133:14">&amp;</operator><name pos:start="133:15" pos:end="133:19"><name pos:start="133:15" pos:end="133:15">s</name><operator pos:start="133:16" pos:end="133:17">-&gt;</operator><name pos:start="133:18" pos:end="133:19">pb</name></name></expr></argument>, <argument pos:start="133:22" pos:end="133:22"><expr pos:start="133:22" pos:end="133:22"><literal type="number" pos:start="133:22" pos:end="133:22">1</literal></expr></argument>, <argument pos:start="133:25" pos:end="133:25"><expr pos:start="133:25" pos:end="133:25"><literal type="number" pos:start="133:25" pos:end="133:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
