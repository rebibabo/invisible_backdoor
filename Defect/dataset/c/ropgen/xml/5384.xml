<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5384.c" pos:tabs="8"><function pos:start="1:1" pos:end="105:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:23">r4k_invalidate_tlb</name> <parameter_list pos:start="1:25" pos:end="1:63">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:33">CPUState</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">env</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:47"><decl pos:start="1:41" pos:end="1:47"><type pos:start="1:41" pos:end="1:47"><name pos:start="1:41" pos:end="1:43">int</name></type> <name pos:start="1:45" pos:end="1:47">idx</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:62"><decl pos:start="1:50" pos:end="1:62"><type pos:start="1:50" pos:end="1:62"><name pos:start="1:50" pos:end="1:52">int</name></type> <name pos:start="1:54" pos:end="1:62">use_extra</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="105:1">{<block_content pos:start="5:5" pos:end="103:5">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">r4k_tlb_t</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:18">tlb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:16">target_ulong</name></type> <name pos:start="7:18" pos:end="7:21">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16">target_ulong</name></type> <name pos:start="9:18" pos:end="9:20">end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:43"><decl pos:start="11:5" pos:end="11:42"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:16">ASID</name> <init pos:start="11:18" pos:end="11:42">= <expr pos:start="11:20" pos:end="11:42"><name pos:start="11:20" pos:end="11:35"><name pos:start="11:20" pos:end="11:22">env</name><operator pos:start="11:23" pos:end="11:24">-&gt;</operator><name pos:start="11:25" pos:end="11:35">CP0_EntryHi</name></name> <operator pos:start="11:37" pos:end="11:37">&amp;</operator> <literal type="number" pos:start="11:39" pos:end="11:42">0xFF</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:16">target_ulong</name></type> <name pos:start="13:18" pos:end="13:21">mask</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:38"><expr pos:start="17:5" pos:end="17:37"><name pos:start="17:5" pos:end="17:7">tlb</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <operator pos:start="17:11" pos:end="17:11">&amp;</operator><name pos:start="17:12" pos:end="17:37"><name pos:start="17:12" pos:end="17:14">env</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:19">tlb</name><operator pos:start="17:20" pos:end="17:21">-&gt;</operator><name pos:start="17:22" pos:end="17:24">mmu</name><operator pos:start="17:25" pos:end="17:25">.</operator><name pos:start="17:26" pos:end="17:28">r4k</name><operator pos:start="17:29" pos:end="17:29">.</operator><name pos:start="17:30" pos:end="17:32">tlb</name><index pos:start="17:33" pos:end="17:37">[<expr pos:start="17:34" pos:end="17:36"><name pos:start="17:34" pos:end="17:36">idx</name></expr>]</index></name></expr>;</expr_stmt>

    <comment type="block" pos:start="19:5" pos:end="21:37">/* The qemu TLB is flushed when the ASID changes, so no need to

       flush these entries again.  */</comment>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:41">(<expr pos:start="23:9" pos:end="23:40"><name pos:start="23:9" pos:end="23:14"><name pos:start="23:9" pos:end="23:11">tlb</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:14">G</name></name> <operator pos:start="23:16" pos:end="23:17">==</operator> <literal type="number" pos:start="23:19" pos:end="23:19">0</literal> <operator pos:start="23:21" pos:end="23:22">&amp;&amp;</operator> <name pos:start="23:24" pos:end="23:32"><name pos:start="23:24" pos:end="23:26">tlb</name><operator pos:start="23:27" pos:end="23:28">-&gt;</operator><name pos:start="23:29" pos:end="23:32">ASID</name></name> <operator pos:start="23:34" pos:end="23:35">!=</operator> <name pos:start="23:37" pos:end="23:40">ASID</name></expr>)</condition> <block pos:start="23:43" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:15">

        <return pos:start="25:9" pos:end="25:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="45:5"><if pos:start="31:5" pos:end="45:5">if <condition pos:start="31:8" pos:end="31:57">(<expr pos:start="31:9" pos:end="31:56"><name pos:start="31:9" pos:end="31:17">use_extra</name> <operator pos:start="31:19" pos:end="31:20">&amp;&amp;</operator> <name pos:start="31:22" pos:end="31:41"><name pos:start="31:22" pos:end="31:24">env</name><operator pos:start="31:25" pos:end="31:26">-&gt;</operator><name pos:start="31:27" pos:end="31:29">tlb</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:41">tlb_in_use</name></name> <operator pos:start="31:43" pos:end="31:43">&lt;</operator> <name pos:start="31:45" pos:end="31:56">MIPS_TLB_MAX</name></expr>)</condition> <block pos:start="31:59" pos:end="45:5">{<block_content pos:start="39:9" pos:end="43:15">

        <comment type="block" pos:start="33:9" pos:end="37:36">/* For tlbwr, we can shadow the discarded entry into

	   a new (fake) TLB entry, as long as the guest can not

	   tell that it's there.  */</comment>

        <expr_stmt pos:start="39:9" pos:end="39:59"><expr pos:start="39:9" pos:end="39:58"><name pos:start="39:9" pos:end="39:51"><name pos:start="39:9" pos:end="39:11">env</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:16">tlb</name><operator pos:start="39:17" pos:end="39:18">-&gt;</operator><name pos:start="39:19" pos:end="39:21">mmu</name><operator pos:start="39:22" pos:end="39:22">.</operator><name pos:start="39:23" pos:end="39:25">r4k</name><operator pos:start="39:26" pos:end="39:26">.</operator><name pos:start="39:27" pos:end="39:29">tlb</name><index pos:start="39:30" pos:end="39:51">[<expr pos:start="39:31" pos:end="39:50"><name pos:start="39:31" pos:end="39:50"><name pos:start="39:31" pos:end="39:33">env</name><operator pos:start="39:34" pos:end="39:35">-&gt;</operator><name pos:start="39:36" pos:end="39:38">tlb</name><operator pos:start="39:39" pos:end="39:40">-&gt;</operator><name pos:start="39:41" pos:end="39:50">tlb_in_use</name></name></expr>]</index></name> <operator pos:start="39:53" pos:end="39:53">=</operator> <operator pos:start="39:55" pos:end="39:55">*</operator><name pos:start="39:56" pos:end="39:58">tlb</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:31"><expr pos:start="41:9" pos:end="41:30"><name pos:start="41:9" pos:end="41:28"><name pos:start="41:9" pos:end="41:11">env</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:16">tlb</name><operator pos:start="41:17" pos:end="41:18">-&gt;</operator><name pos:start="41:19" pos:end="41:28">tlb_in_use</name></name><operator pos:start="41:29" pos:end="41:30">++</operator></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="49:5" pos:end="49:37">/* 1k pages are not supported. */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:52"><expr pos:start="51:5" pos:end="51:51"><name pos:start="51:5" pos:end="51:8">mask</name> <operator pos:start="51:10" pos:end="51:10">=</operator> <name pos:start="51:12" pos:end="51:24"><name pos:start="51:12" pos:end="51:14">tlb</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:24">PageMask</name></name> <operator pos:start="51:26" pos:end="51:26">|</operator> <operator pos:start="51:28" pos:end="51:28">~</operator><operator pos:start="51:29" pos:end="51:29">(</operator><name pos:start="51:30" pos:end="51:45">TARGET_PAGE_MASK</name> <operator pos:start="51:47" pos:end="51:48">&lt;&lt;</operator> <literal type="number" pos:start="51:50" pos:end="51:50">1</literal><operator pos:start="51:51" pos:end="51:51">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="77:5"><if pos:start="53:5" pos:end="77:5">if <condition pos:start="53:8" pos:end="53:16">(<expr pos:start="53:9" pos:end="53:15"><name pos:start="53:9" pos:end="53:15"><name pos:start="53:9" pos:end="53:11">tlb</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:15">V0</name></name></expr>)</condition> <block pos:start="53:18" pos:end="77:5">{<block_content pos:start="55:9" pos:end="75:9">

        <expr_stmt pos:start="55:9" pos:end="58:0"><expr pos:start="55:9" pos:end="55:31"><name pos:start="55:9" pos:end="55:12">addr</name> <operator pos:start="55:14" pos:end="55:14">=</operator> <name pos:start="55:16" pos:end="55:23"><name pos:start="55:16" pos:end="55:18">tlb</name><operator pos:start="55:19" pos:end="55:20">-&gt;</operator><name pos:start="55:21" pos:end="55:23">VPN</name></name> <operator pos:start="55:25" pos:end="55:25">&amp;</operator> <operator pos:start="55:27" pos:end="55:27">~</operator><name pos:start="55:28" pos:end="55:31">mask</name></expr>;</expr_stmt>

<cpp:if pos:start="57:1" pos:end="57:26">#<cpp:directive pos:start="57:2" pos:end="57:3">if</cpp:directive> <expr pos:start="57:5" pos:end="57:26"><call pos:start="57:5" pos:end="57:26"><name pos:start="57:5" pos:end="57:11">defined</name><argument_list pos:start="57:12" pos:end="57:26">(<argument pos:start="57:13" pos:end="57:25"><expr pos:start="57:13" pos:end="57:25"><name pos:start="57:13" pos:end="57:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <if_stmt pos:start="59:9" pos:end="66:0"><if pos:start="59:9" pos:end="66:0">if <condition pos:start="59:12" pos:end="59:59">(<expr pos:start="59:13" pos:end="59:58"><name pos:start="59:13" pos:end="59:16">addr</name> <operator pos:start="59:18" pos:end="59:19">&gt;=</operator> <operator pos:start="59:21" pos:end="59:21">(</operator><literal type="number" pos:start="59:22" pos:end="59:42">0xFFFFFFFF80000000ULL</literal> <operator pos:start="59:44" pos:end="59:44">&amp;</operator> <name pos:start="59:46" pos:end="59:57"><name pos:start="59:46" pos:end="59:48">env</name><operator pos:start="59:49" pos:end="59:50">-&gt;</operator><name pos:start="59:51" pos:end="59:57">SEGMask</name></name><operator pos:start="59:58" pos:end="59:58">)</operator></expr>)</condition> <block pos:start="59:61" pos:end="66:0">{<block_content pos:start="61:13" pos:end="61:42">

            <expr_stmt pos:start="61:13" pos:end="61:42"><expr pos:start="61:13" pos:end="61:41"><name pos:start="61:13" pos:end="61:16">addr</name> <operator pos:start="61:18" pos:end="61:19">|=</operator> <literal type="number" pos:start="61:21" pos:end="61:41">0x3FFFFF0000000000ULL</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="65:1" pos:end="65:6">#<cpp:directive pos:start="65:2" pos:end="65:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="67:9" pos:end="67:33"><expr pos:start="67:9" pos:end="67:32"><name pos:start="67:9" pos:end="67:11">end</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <name pos:start="67:15" pos:end="67:18">addr</name> <operator pos:start="67:20" pos:end="67:20">|</operator> <operator pos:start="67:22" pos:end="67:22">(</operator><name pos:start="67:23" pos:end="67:26">mask</name> <operator pos:start="67:28" pos:end="67:29">&gt;&gt;</operator> <literal type="number" pos:start="67:31" pos:end="67:31">1</literal><operator pos:start="67:32" pos:end="67:32">)</operator></expr>;</expr_stmt>

        <while pos:start="69:9" pos:end="75:9">while <condition pos:start="69:15" pos:end="69:26">(<expr pos:start="69:16" pos:end="69:25"><name pos:start="69:16" pos:end="69:19">addr</name> <operator pos:start="69:21" pos:end="69:21">&lt;</operator> <name pos:start="69:23" pos:end="69:25">end</name></expr>)</condition> <block pos:start="69:28" pos:end="75:9">{<block_content pos:start="71:13" pos:end="73:37">

            <expr_stmt pos:start="71:13" pos:end="71:39"><expr pos:start="71:13" pos:end="71:38"><call pos:start="71:13" pos:end="71:38"><name pos:start="71:13" pos:end="71:26">tlb_flush_page</name> <argument_list pos:start="71:28" pos:end="71:38">(<argument pos:start="71:29" pos:end="71:31"><expr pos:start="71:29" pos:end="71:31"><name pos:start="71:29" pos:end="71:31">env</name></expr></argument>, <argument pos:start="71:34" pos:end="71:37"><expr pos:start="71:34" pos:end="71:37"><name pos:start="71:34" pos:end="71:37">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:37"><expr pos:start="73:13" pos:end="73:36"><name pos:start="73:13" pos:end="73:16">addr</name> <operator pos:start="73:18" pos:end="73:19">+=</operator> <name pos:start="73:21" pos:end="73:36">TARGET_PAGE_SIZE</name></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="79:5" pos:end="103:5"><if pos:start="79:5" pos:end="103:5">if <condition pos:start="79:8" pos:end="79:16">(<expr pos:start="79:9" pos:end="79:15"><name pos:start="79:9" pos:end="79:15"><name pos:start="79:9" pos:end="79:11">tlb</name><operator pos:start="79:12" pos:end="79:13">-&gt;</operator><name pos:start="79:14" pos:end="79:15">V1</name></name></expr>)</condition> <block pos:start="79:18" pos:end="103:5">{<block_content pos:start="81:9" pos:end="101:9">

        <expr_stmt pos:start="81:9" pos:end="84:0"><expr pos:start="81:9" pos:end="81:53"><name pos:start="81:9" pos:end="81:12">addr</name> <operator pos:start="81:14" pos:end="81:14">=</operator> <operator pos:start="81:16" pos:end="81:16">(</operator><name pos:start="81:17" pos:end="81:24"><name pos:start="81:17" pos:end="81:19">tlb</name><operator pos:start="81:20" pos:end="81:21">-&gt;</operator><name pos:start="81:22" pos:end="81:24">VPN</name></name> <operator pos:start="81:26" pos:end="81:26">&amp;</operator> <operator pos:start="81:28" pos:end="81:28">~</operator><name pos:start="81:29" pos:end="81:32">mask</name><operator pos:start="81:33" pos:end="81:33">)</operator> <operator pos:start="81:35" pos:end="81:35">|</operator> <operator pos:start="81:37" pos:end="81:37">(</operator><operator pos:start="81:38" pos:end="81:38">(</operator><name pos:start="81:39" pos:end="81:42">mask</name> <operator pos:start="81:44" pos:end="81:45">&gt;&gt;</operator> <literal type="number" pos:start="81:47" pos:end="81:47">1</literal><operator pos:start="81:48" pos:end="81:48">)</operator> <operator pos:start="81:50" pos:end="81:50">+</operator> <literal type="number" pos:start="81:52" pos:end="81:52">1</literal><operator pos:start="81:53" pos:end="81:53">)</operator></expr>;</expr_stmt>

<cpp:if pos:start="83:1" pos:end="83:26">#<cpp:directive pos:start="83:2" pos:end="83:3">if</cpp:directive> <expr pos:start="83:5" pos:end="83:26"><call pos:start="83:5" pos:end="83:26"><name pos:start="83:5" pos:end="83:11">defined</name><argument_list pos:start="83:12" pos:end="83:26">(<argument pos:start="83:13" pos:end="83:25"><expr pos:start="83:13" pos:end="83:25"><name pos:start="83:13" pos:end="83:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <if_stmt pos:start="85:9" pos:end="92:0"><if pos:start="85:9" pos:end="92:0">if <condition pos:start="85:12" pos:end="85:59">(<expr pos:start="85:13" pos:end="85:58"><name pos:start="85:13" pos:end="85:16">addr</name> <operator pos:start="85:18" pos:end="85:19">&gt;=</operator> <operator pos:start="85:21" pos:end="85:21">(</operator><literal type="number" pos:start="85:22" pos:end="85:42">0xFFFFFFFF80000000ULL</literal> <operator pos:start="85:44" pos:end="85:44">&amp;</operator> <name pos:start="85:46" pos:end="85:57"><name pos:start="85:46" pos:end="85:48">env</name><operator pos:start="85:49" pos:end="85:50">-&gt;</operator><name pos:start="85:51" pos:end="85:57">SEGMask</name></name><operator pos:start="85:58" pos:end="85:58">)</operator></expr>)</condition> <block pos:start="85:61" pos:end="92:0">{<block_content pos:start="87:13" pos:end="87:42">

            <expr_stmt pos:start="87:13" pos:end="87:42"><expr pos:start="87:13" pos:end="87:41"><name pos:start="87:13" pos:end="87:16">addr</name> <operator pos:start="87:18" pos:end="87:19">|=</operator> <literal type="number" pos:start="87:21" pos:end="87:41">0x3FFFFF0000000000ULL</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="91:1" pos:end="91:6">#<cpp:directive pos:start="91:2" pos:end="91:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="93:9" pos:end="93:26"><expr pos:start="93:9" pos:end="93:25"><name pos:start="93:9" pos:end="93:11">end</name> <operator pos:start="93:13" pos:end="93:13">=</operator> <name pos:start="93:15" pos:end="93:18">addr</name> <operator pos:start="93:20" pos:end="93:20">|</operator> <name pos:start="93:22" pos:end="93:25">mask</name></expr>;</expr_stmt>

        <while pos:start="95:9" pos:end="101:9">while <condition pos:start="95:15" pos:end="95:26">(<expr pos:start="95:16" pos:end="95:25"><name pos:start="95:16" pos:end="95:19">addr</name> <operator pos:start="95:21" pos:end="95:21">&lt;</operator> <name pos:start="95:23" pos:end="95:25">end</name></expr>)</condition> <block pos:start="95:28" pos:end="101:9">{<block_content pos:start="97:13" pos:end="99:37">

            <expr_stmt pos:start="97:13" pos:end="97:39"><expr pos:start="97:13" pos:end="97:38"><call pos:start="97:13" pos:end="97:38"><name pos:start="97:13" pos:end="97:26">tlb_flush_page</name> <argument_list pos:start="97:28" pos:end="97:38">(<argument pos:start="97:29" pos:end="97:31"><expr pos:start="97:29" pos:end="97:31"><name pos:start="97:29" pos:end="97:31">env</name></expr></argument>, <argument pos:start="97:34" pos:end="97:37"><expr pos:start="97:34" pos:end="97:37"><name pos:start="97:34" pos:end="97:37">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:37"><expr pos:start="99:13" pos:end="99:36"><name pos:start="99:13" pos:end="99:16">addr</name> <operator pos:start="99:18" pos:end="99:19">+=</operator> <name pos:start="99:21" pos:end="99:36">TARGET_PAGE_SIZE</name></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
