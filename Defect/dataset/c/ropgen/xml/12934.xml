<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12934.c" pos:tabs="8"><function pos:start="1:1" pos:end="195:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:40">av_estimate_timings_from_pts</name><parameter_list pos:start="1:41" pos:end="1:82">(<parameter pos:start="1:42" pos:end="1:60"><decl pos:start="1:42" pos:end="1:60"><type pos:start="1:42" pos:end="1:60"><name pos:start="1:42" pos:end="1:56">AVFormatContext</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:60">ic</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:81"><decl pos:start="1:63" pos:end="1:81"><type pos:start="1:63" pos:end="1:81"><name pos:start="1:63" pos:end="1:70">offset_t</name></type> <name pos:start="1:72" pos:end="1:81">old_offset</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="195:1">{<block_content pos:start="5:5" pos:end="193:5">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">AVPacket</name></type> <name pos:start="5:14" pos:end="5:17">pkt1</name></decl>, <decl pos:start="5:20" pos:end="5:31"><type ref="prev" pos:start="5:5" pos:end="5:12"><modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:23">pkt</name> <init pos:start="5:25" pos:end="5:31">= <expr pos:start="5:27" pos:end="5:31"><operator pos:start="5:27" pos:end="5:27">&amp;</operator><name pos:start="5:28" pos:end="5:31">pkt1</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:17">read_size</name></decl>, <decl pos:start="9:20" pos:end="9:20"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:20" pos:end="9:20">i</name></decl>, <decl pos:start="9:23" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:23" pos:end="9:25">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:20">end_time</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:39"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:20">filesize</name></decl>, <decl pos:start="13:23" pos:end="13:28"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:23" pos:end="13:28">offset</name></decl>, <decl pos:start="13:31" pos:end="13:38"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:31" pos:end="13:38">duration</name></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:30">/* free previous packet */</comment>

    <if_stmt pos:start="19:5" pos:end="21:37"><if pos:start="19:5" pos:end="21:37">if <condition pos:start="19:8" pos:end="19:41">(<expr pos:start="19:9" pos:end="19:40"><name pos:start="19:9" pos:end="19:18"><name pos:start="19:9" pos:end="19:10">ic</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:18">cur_st</name></name> <operator pos:start="19:20" pos:end="19:21">&amp;&amp;</operator> <name pos:start="19:23" pos:end="19:40"><name pos:start="19:23" pos:end="19:24">ic</name><operator pos:start="19:25" pos:end="19:26">-&gt;</operator><name pos:start="19:27" pos:end="19:32">cur_st</name><operator pos:start="19:33" pos:end="19:34">-&gt;</operator><name pos:start="19:35" pos:end="19:40">parser</name></name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:37"><block_content pos:start="21:9" pos:end="21:37">

        <expr_stmt pos:start="21:9" pos:end="21:37"><expr pos:start="21:9" pos:end="21:36"><call pos:start="21:9" pos:end="21:36"><name pos:start="21:9" pos:end="21:22">av_free_packet</name><argument_list pos:start="21:23" pos:end="21:36">(<argument pos:start="21:24" pos:end="21:35"><expr pos:start="21:24" pos:end="21:35"><operator pos:start="21:24" pos:end="21:24">&amp;</operator><name pos:start="21:25" pos:end="21:35"><name pos:start="21:25" pos:end="21:26">ic</name><operator pos:start="21:27" pos:end="21:28">-&gt;</operator><name pos:start="21:29" pos:end="21:35">cur_pkt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:22"><expr pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:6">ic</name><operator pos:start="23:7" pos:end="23:8">-&gt;</operator><name pos:start="23:9" pos:end="23:14">cur_st</name></name> <operator pos:start="23:16" pos:end="23:16">=</operator> <name pos:start="23:18" pos:end="23:21">NULL</name></expr>;</expr_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:28">/* flush packet queue */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:27"><expr pos:start="29:5" pos:end="29:26"><call pos:start="29:5" pos:end="29:26"><name pos:start="29:5" pos:end="29:22">flush_packet_queue</name><argument_list pos:start="29:23" pos:end="29:26">(<argument pos:start="29:24" pos:end="29:25"><expr pos:start="29:24" pos:end="29:25"><name pos:start="29:24" pos:end="29:25">ic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="33:5" pos:end="45:5">for<control pos:start="33:8" pos:end="33:33">(<init pos:start="33:9" pos:end="33:12"><expr pos:start="33:9" pos:end="33:11"><name pos:start="33:9" pos:end="33:9">i</name><operator pos:start="33:10" pos:end="33:10">=</operator><literal type="number" pos:start="33:11" pos:end="33:11">0</literal></expr>;</init><condition pos:start="33:13" pos:end="33:29"><expr pos:start="33:13" pos:end="33:28"><name pos:start="33:13" pos:end="33:13">i</name><operator pos:start="33:14" pos:end="33:14">&lt;</operator><name pos:start="33:15" pos:end="33:28"><name pos:start="33:15" pos:end="33:16">ic</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:28">nb_streams</name></name></expr>;</condition><incr pos:start="33:30" pos:end="33:32"><expr pos:start="33:30" pos:end="33:32"><name pos:start="33:30" pos:end="33:30">i</name><operator pos:start="33:31" pos:end="33:32">++</operator></expr></incr>)</control> <block pos:start="33:35" pos:end="45:5">{<block_content pos:start="35:9" pos:end="43:9">

        <expr_stmt pos:start="35:9" pos:end="35:28"><expr pos:start="35:9" pos:end="35:27"><name pos:start="35:9" pos:end="35:10">st</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <name pos:start="35:14" pos:end="35:27"><name pos:start="35:14" pos:end="35:15">ic</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:24">streams</name><index pos:start="35:25" pos:end="35:27">[<expr pos:start="35:26" pos:end="35:26"><name pos:start="35:26" pos:end="35:26">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="43:9"><if pos:start="37:9" pos:end="43:9">if <condition pos:start="37:12" pos:end="37:23">(<expr pos:start="37:13" pos:end="37:22"><name pos:start="37:13" pos:end="37:22"><name pos:start="37:13" pos:end="37:14">st</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:22">parser</name></name></expr>)</condition> <block pos:start="37:25" pos:end="43:9">{<block_content pos:start="39:13" pos:end="41:29">

            <expr_stmt pos:start="39:13" pos:end="39:40"><expr pos:start="39:13" pos:end="39:39"><call pos:start="39:13" pos:end="39:39"><name pos:start="39:13" pos:end="39:27">av_parser_close</name><argument_list pos:start="39:28" pos:end="39:39">(<argument pos:start="39:29" pos:end="39:38"><expr pos:start="39:29" pos:end="39:38"><name pos:start="39:29" pos:end="39:38"><name pos:start="39:29" pos:end="39:30">st</name><operator pos:start="39:31" pos:end="39:32">-&gt;</operator><name pos:start="39:33" pos:end="39:38">parser</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:29"><expr pos:start="41:13" pos:end="41:28"><name pos:start="41:13" pos:end="41:22"><name pos:start="41:13" pos:end="41:14">st</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:22">parser</name></name><operator pos:start="41:23" pos:end="41:23">=</operator> <name pos:start="41:25" pos:end="41:28">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="49:5" pos:end="51:41">/* we read the first packets to get the first PTS (not fully

       accurate, but it is enough now) */</comment>

    <expr_stmt pos:start="53:5" pos:end="53:36"><expr pos:start="53:5" pos:end="53:35"><call pos:start="53:5" pos:end="53:35"><name pos:start="53:5" pos:end="53:13">url_fseek</name><argument_list pos:start="53:14" pos:end="53:35">(<argument pos:start="53:15" pos:end="53:21"><expr pos:start="53:15" pos:end="53:21"><operator pos:start="53:15" pos:end="53:15">&amp;</operator><name pos:start="53:16" pos:end="53:21"><name pos:start="53:16" pos:end="53:17">ic</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:21">pb</name></name></expr></argument>, <argument pos:start="53:24" pos:end="53:24"><expr pos:start="53:24" pos:end="53:24"><literal type="number" pos:start="53:24" pos:end="53:24">0</literal></expr></argument>, <argument pos:start="53:27" pos:end="53:34"><expr pos:start="53:27" pos:end="53:34"><name pos:start="53:27" pos:end="53:34">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:18"><expr pos:start="55:5" pos:end="55:17"><name pos:start="55:5" pos:end="55:13">read_size</name> <operator pos:start="55:15" pos:end="55:15">=</operator> <literal type="number" pos:start="55:17" pos:end="55:17">0</literal></expr>;</expr_stmt>

    <for pos:start="57:5" pos:end="101:5">for<control pos:start="57:8" pos:end="57:11">(<init pos:start="57:9" pos:end="57:9">;</init><condition pos:start="57:10" pos:end="57:10">;</condition><incr/>)</control> <block pos:start="57:13" pos:end="101:5">{<block_content pos:start="59:9" pos:end="99:28">

        <if_stmt pos:start="59:9" pos:end="61:18"><if pos:start="59:9" pos:end="61:18">if <condition pos:start="59:12" pos:end="59:48">(<expr pos:start="59:13" pos:end="59:47"><name pos:start="59:13" pos:end="59:21">read_size</name> <operator pos:start="59:23" pos:end="59:24">&gt;=</operator> <name pos:start="59:26" pos:end="59:47">DURATION_MAX_READ_SIZE</name></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:18"><block_content pos:start="61:13" pos:end="61:18">

            <break pos:start="61:13" pos:end="61:18">break;</break></block_content></block></if></if_stmt>

        <comment type="block" pos:start="63:9" pos:end="63:51">/* if all info is available, we can stop */</comment>

        <for pos:start="65:9" pos:end="73:9">for<control pos:start="65:12" pos:end="65:42">(<init pos:start="65:13" pos:end="65:18"><expr pos:start="65:13" pos:end="65:17"><name pos:start="65:13" pos:end="65:13">i</name> <operator pos:start="65:15" pos:end="65:15">=</operator> <literal type="number" pos:start="65:17" pos:end="65:17">0</literal></expr>;</init><condition pos:start="65:19" pos:end="65:37"><expr pos:start="65:19" pos:end="65:36"><name pos:start="65:19" pos:end="65:19">i</name> <operator pos:start="65:21" pos:end="65:21">&lt;</operator> <name pos:start="65:23" pos:end="65:36"><name pos:start="65:23" pos:end="65:24">ic</name><operator pos:start="65:25" pos:end="65:26">-&gt;</operator><name pos:start="65:27" pos:end="65:36">nb_streams</name></name></expr>;</condition> <incr pos:start="65:39" pos:end="65:41"><expr pos:start="65:39" pos:end="65:41"><name pos:start="65:39" pos:end="65:39">i</name><operator pos:start="65:40" pos:end="65:41">++</operator></expr></incr>)</control> <block pos:start="65:44" pos:end="73:9">{<block_content pos:start="67:13" pos:end="71:22">

            <expr_stmt pos:start="67:13" pos:end="67:32"><expr pos:start="67:13" pos:end="67:31"><name pos:start="67:13" pos:end="67:14">st</name> <operator pos:start="67:16" pos:end="67:16">=</operator> <name pos:start="67:18" pos:end="67:31"><name pos:start="67:18" pos:end="67:19">ic</name><operator pos:start="67:20" pos:end="67:21">-&gt;</operator><name pos:start="67:22" pos:end="67:28">streams</name><index pos:start="67:29" pos:end="67:31">[<expr pos:start="67:30" pos:end="67:30"><name pos:start="67:30" pos:end="67:30">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="69:13" pos:end="71:22"><if pos:start="69:13" pos:end="71:22">if <condition pos:start="69:16" pos:end="69:49">(<expr pos:start="69:17" pos:end="69:48"><name pos:start="69:17" pos:end="69:30"><name pos:start="69:17" pos:end="69:18">st</name><operator pos:start="69:19" pos:end="69:20">-&gt;</operator><name pos:start="69:21" pos:end="69:30">start_time</name></name> <operator pos:start="69:32" pos:end="69:33">==</operator> <name pos:start="69:35" pos:end="69:48">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="71:17" pos:end="71:22"><block_content pos:start="71:17" pos:end="71:22">

                <break pos:start="71:17" pos:end="71:22">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="75:9" pos:end="77:18"><if pos:start="75:9" pos:end="77:18">if <condition pos:start="75:12" pos:end="75:32">(<expr pos:start="75:13" pos:end="75:31"><name pos:start="75:13" pos:end="75:13">i</name> <operator pos:start="75:15" pos:end="75:16">==</operator> <name pos:start="75:18" pos:end="75:31"><name pos:start="75:18" pos:end="75:19">ic</name><operator pos:start="75:20" pos:end="75:21">-&gt;</operator><name pos:start="75:22" pos:end="75:31">nb_streams</name></name></expr>)</condition><block type="pseudo" pos:start="77:13" pos:end="77:18"><block_content pos:start="77:13" pos:end="77:18">

            <break pos:start="77:13" pos:end="77:18">break;</break></block_content></block></if></if_stmt>



        <expr_stmt pos:start="81:9" pos:end="81:38"><expr pos:start="81:9" pos:end="81:37"><name pos:start="81:9" pos:end="81:11">ret</name> <operator pos:start="81:13" pos:end="81:13">=</operator> <call pos:start="81:15" pos:end="81:37"><name pos:start="81:15" pos:end="81:28">av_read_packet</name><argument_list pos:start="81:29" pos:end="81:37">(<argument pos:start="81:30" pos:end="81:31"><expr pos:start="81:30" pos:end="81:31"><name pos:start="81:30" pos:end="81:31">ic</name></expr></argument>, <argument pos:start="81:34" pos:end="81:36"><expr pos:start="81:34" pos:end="81:36"><name pos:start="81:34" pos:end="81:36">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="83:9" pos:end="85:18"><if pos:start="83:9" pos:end="85:18">if <condition pos:start="83:12" pos:end="83:21">(<expr pos:start="83:13" pos:end="83:20"><name pos:start="83:13" pos:end="83:15">ret</name> <operator pos:start="83:17" pos:end="83:18">!=</operator> <literal type="number" pos:start="83:20" pos:end="83:20">0</literal></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:18"><block_content pos:start="85:13" pos:end="85:18">

            <break pos:start="85:13" pos:end="85:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:31"><expr pos:start="87:9" pos:end="87:30"><name pos:start="87:9" pos:end="87:17">read_size</name> <operator pos:start="87:19" pos:end="87:20">+=</operator> <name pos:start="87:22" pos:end="87:30"><name pos:start="87:22" pos:end="87:24">pkt</name><operator pos:start="87:25" pos:end="87:26">-&gt;</operator><name pos:start="87:27" pos:end="87:30">size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:44"><expr pos:start="89:9" pos:end="89:43"><name pos:start="89:9" pos:end="89:10">st</name> <operator pos:start="89:12" pos:end="89:12">=</operator> <name pos:start="89:14" pos:end="89:43"><name pos:start="89:14" pos:end="89:15">ic</name><operator pos:start="89:16" pos:end="89:17">-&gt;</operator><name pos:start="89:18" pos:end="89:24">streams</name><index pos:start="89:25" pos:end="89:43">[<expr pos:start="89:26" pos:end="89:42"><name pos:start="89:26" pos:end="89:42"><name pos:start="89:26" pos:end="89:28">pkt</name><operator pos:start="89:29" pos:end="89:30">-&gt;</operator><name pos:start="89:31" pos:end="89:42">stream_index</name></name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="91:9" pos:end="97:9"><if pos:start="91:9" pos:end="97:9">if <condition pos:start="91:12" pos:end="91:39">(<expr pos:start="91:13" pos:end="91:38"><name pos:start="91:13" pos:end="91:20"><name pos:start="91:13" pos:end="91:15">pkt</name><operator pos:start="91:16" pos:end="91:17">-&gt;</operator><name pos:start="91:18" pos:end="91:20">pts</name></name> <operator pos:start="91:22" pos:end="91:23">!=</operator> <name pos:start="91:25" pos:end="91:38">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="91:41" pos:end="97:9">{<block_content pos:start="93:13" pos:end="95:42">

            <if_stmt pos:start="93:13" pos:end="95:42"><if pos:start="93:13" pos:end="95:42">if <condition pos:start="93:16" pos:end="93:49">(<expr pos:start="93:17" pos:end="93:48"><name pos:start="93:17" pos:end="93:30"><name pos:start="93:17" pos:end="93:18">st</name><operator pos:start="93:19" pos:end="93:20">-&gt;</operator><name pos:start="93:21" pos:end="93:30">start_time</name></name> <operator pos:start="93:32" pos:end="93:33">==</operator> <name pos:start="93:35" pos:end="93:48">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="95:17" pos:end="95:42"><block_content pos:start="95:17" pos:end="95:42">

                <expr_stmt pos:start="95:17" pos:end="95:42"><expr pos:start="95:17" pos:end="95:41"><name pos:start="95:17" pos:end="95:30"><name pos:start="95:17" pos:end="95:18">st</name><operator pos:start="95:19" pos:end="95:20">-&gt;</operator><name pos:start="95:21" pos:end="95:30">start_time</name></name> <operator pos:start="95:32" pos:end="95:32">=</operator> <name pos:start="95:34" pos:end="95:41"><name pos:start="95:34" pos:end="95:36">pkt</name><operator pos:start="95:37" pos:end="95:38">-&gt;</operator><name pos:start="95:39" pos:end="95:41">pts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:28"><expr pos:start="99:9" pos:end="99:27"><call pos:start="99:9" pos:end="99:27"><name pos:start="99:9" pos:end="99:22">av_free_packet</name><argument_list pos:start="99:23" pos:end="99:27">(<argument pos:start="99:24" pos:end="99:26"><expr pos:start="99:24" pos:end="99:26"><name pos:start="99:24" pos:end="99:26">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="105:5" pos:end="105:42">/* estimate the end time (duration) */</comment>

    <comment type="block" pos:start="107:5" pos:end="107:43">/* XXX: may need to support wrapping */</comment>

    <expr_stmt pos:start="109:5" pos:end="109:29"><expr pos:start="109:5" pos:end="109:28"><name pos:start="109:5" pos:end="109:12">filesize</name> <operator pos:start="109:14" pos:end="109:14">=</operator> <name pos:start="109:16" pos:end="109:28"><name pos:start="109:16" pos:end="109:17">ic</name><operator pos:start="109:18" pos:end="109:19">-&gt;</operator><name pos:start="109:20" pos:end="109:28">file_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:47"><expr pos:start="111:5" pos:end="111:46"><name pos:start="111:5" pos:end="111:10">offset</name> <operator pos:start="111:12" pos:end="111:12">=</operator> <name pos:start="111:14" pos:end="111:21">filesize</name> <operator pos:start="111:23" pos:end="111:23">-</operator> <name pos:start="111:25" pos:end="111:46">DURATION_MAX_READ_SIZE</name></expr>;</expr_stmt>

    <if_stmt pos:start="113:5" pos:end="115:19"><if pos:start="113:5" pos:end="115:19">if <condition pos:start="113:8" pos:end="113:19">(<expr pos:start="113:9" pos:end="113:18"><name pos:start="113:9" pos:end="113:14">offset</name> <operator pos:start="113:16" pos:end="113:16">&lt;</operator> <literal type="number" pos:start="113:18" pos:end="113:18">0</literal></expr>)</condition><block type="pseudo" pos:start="115:9" pos:end="115:19"><block_content pos:start="115:9" pos:end="115:19">

        <expr_stmt pos:start="115:9" pos:end="115:19"><expr pos:start="115:9" pos:end="115:18"><name pos:start="115:9" pos:end="115:14">offset</name> <operator pos:start="115:16" pos:end="115:16">=</operator> <literal type="number" pos:start="115:18" pos:end="115:18">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="119:5" pos:end="119:41"><expr pos:start="119:5" pos:end="119:40"><call pos:start="119:5" pos:end="119:40"><name pos:start="119:5" pos:end="119:13">url_fseek</name><argument_list pos:start="119:14" pos:end="119:40">(<argument pos:start="119:15" pos:end="119:21"><expr pos:start="119:15" pos:end="119:21"><operator pos:start="119:15" pos:end="119:15">&amp;</operator><name pos:start="119:16" pos:end="119:21"><name pos:start="119:16" pos:end="119:17">ic</name><operator pos:start="119:18" pos:end="119:19">-&gt;</operator><name pos:start="119:20" pos:end="119:21">pb</name></name></expr></argument>, <argument pos:start="119:24" pos:end="119:29"><expr pos:start="119:24" pos:end="119:29"><name pos:start="119:24" pos:end="119:29">offset</name></expr></argument>, <argument pos:start="119:32" pos:end="119:39"><expr pos:start="119:32" pos:end="119:39"><name pos:start="119:32" pos:end="119:39">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:18"><expr pos:start="121:5" pos:end="121:17"><name pos:start="121:5" pos:end="121:13">read_size</name> <operator pos:start="121:15" pos:end="121:15">=</operator> <literal type="number" pos:start="121:17" pos:end="121:17">0</literal></expr>;</expr_stmt>

    <for pos:start="123:5" pos:end="177:5">for<control pos:start="123:8" pos:end="123:11">(<init pos:start="123:9" pos:end="123:9">;</init><condition pos:start="123:10" pos:end="123:10">;</condition><incr/>)</control> <block pos:start="123:13" pos:end="177:5">{<block_content pos:start="125:9" pos:end="175:28">

        <if_stmt pos:start="125:9" pos:end="127:18"><if pos:start="125:9" pos:end="127:18">if <condition pos:start="125:12" pos:end="125:48">(<expr pos:start="125:13" pos:end="125:47"><name pos:start="125:13" pos:end="125:21">read_size</name> <operator pos:start="125:23" pos:end="125:24">&gt;=</operator> <name pos:start="125:26" pos:end="125:47">DURATION_MAX_READ_SIZE</name></expr>)</condition><block type="pseudo" pos:start="127:13" pos:end="127:18"><block_content pos:start="127:13" pos:end="127:18">

            <break pos:start="127:13" pos:end="127:18">break;</break></block_content></block></if></if_stmt>

        <comment type="block" pos:start="129:9" pos:end="129:51">/* if all info is available, we can stop */</comment>

        <for pos:start="131:9" pos:end="139:9">for<control pos:start="131:12" pos:end="131:42">(<init pos:start="131:13" pos:end="131:18"><expr pos:start="131:13" pos:end="131:17"><name pos:start="131:13" pos:end="131:13">i</name> <operator pos:start="131:15" pos:end="131:15">=</operator> <literal type="number" pos:start="131:17" pos:end="131:17">0</literal></expr>;</init><condition pos:start="131:19" pos:end="131:37"><expr pos:start="131:19" pos:end="131:36"><name pos:start="131:19" pos:end="131:19">i</name> <operator pos:start="131:21" pos:end="131:21">&lt;</operator> <name pos:start="131:23" pos:end="131:36"><name pos:start="131:23" pos:end="131:24">ic</name><operator pos:start="131:25" pos:end="131:26">-&gt;</operator><name pos:start="131:27" pos:end="131:36">nb_streams</name></name></expr>;</condition> <incr pos:start="131:39" pos:end="131:41"><expr pos:start="131:39" pos:end="131:41"><name pos:start="131:39" pos:end="131:39">i</name><operator pos:start="131:40" pos:end="131:41">++</operator></expr></incr>)</control> <block pos:start="131:44" pos:end="139:9">{<block_content pos:start="133:13" pos:end="137:22">

            <expr_stmt pos:start="133:13" pos:end="133:32"><expr pos:start="133:13" pos:end="133:31"><name pos:start="133:13" pos:end="133:14">st</name> <operator pos:start="133:16" pos:end="133:16">=</operator> <name pos:start="133:18" pos:end="133:31"><name pos:start="133:18" pos:end="133:19">ic</name><operator pos:start="133:20" pos:end="133:21">-&gt;</operator><name pos:start="133:22" pos:end="133:28">streams</name><index pos:start="133:29" pos:end="133:31">[<expr pos:start="133:30" pos:end="133:30"><name pos:start="133:30" pos:end="133:30">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="135:13" pos:end="137:22"><if pos:start="135:13" pos:end="137:22">if <condition pos:start="135:16" pos:end="135:47">(<expr pos:start="135:17" pos:end="135:46"><name pos:start="135:17" pos:end="135:28"><name pos:start="135:17" pos:end="135:18">st</name><operator pos:start="135:19" pos:end="135:20">-&gt;</operator><name pos:start="135:21" pos:end="135:28">duration</name></name> <operator pos:start="135:30" pos:end="135:31">==</operator> <name pos:start="135:33" pos:end="135:46">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="137:17" pos:end="137:22"><block_content pos:start="137:17" pos:end="137:22">

                <break pos:start="137:17" pos:end="137:22">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="141:9" pos:end="143:18"><if pos:start="141:9" pos:end="143:18">if <condition pos:start="141:12" pos:end="141:32">(<expr pos:start="141:13" pos:end="141:31"><name pos:start="141:13" pos:end="141:13">i</name> <operator pos:start="141:15" pos:end="141:16">==</operator> <name pos:start="141:18" pos:end="141:31"><name pos:start="141:18" pos:end="141:19">ic</name><operator pos:start="141:20" pos:end="141:21">-&gt;</operator><name pos:start="141:22" pos:end="141:31">nb_streams</name></name></expr>)</condition><block type="pseudo" pos:start="143:13" pos:end="143:18"><block_content pos:start="143:13" pos:end="143:18">

            <break pos:start="143:13" pos:end="143:18">break;</break></block_content></block></if></if_stmt>



        <expr_stmt pos:start="147:9" pos:end="147:38"><expr pos:start="147:9" pos:end="147:37"><name pos:start="147:9" pos:end="147:11">ret</name> <operator pos:start="147:13" pos:end="147:13">=</operator> <call pos:start="147:15" pos:end="147:37"><name pos:start="147:15" pos:end="147:28">av_read_packet</name><argument_list pos:start="147:29" pos:end="147:37">(<argument pos:start="147:30" pos:end="147:31"><expr pos:start="147:30" pos:end="147:31"><name pos:start="147:30" pos:end="147:31">ic</name></expr></argument>, <argument pos:start="147:34" pos:end="147:36"><expr pos:start="147:34" pos:end="147:36"><name pos:start="147:34" pos:end="147:36">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="149:9" pos:end="151:18"><if pos:start="149:9" pos:end="151:18">if <condition pos:start="149:12" pos:end="149:21">(<expr pos:start="149:13" pos:end="149:20"><name pos:start="149:13" pos:end="149:15">ret</name> <operator pos:start="149:17" pos:end="149:18">!=</operator> <literal type="number" pos:start="149:20" pos:end="149:20">0</literal></expr>)</condition><block type="pseudo" pos:start="151:13" pos:end="151:18"><block_content pos:start="151:13" pos:end="151:18">

            <break pos:start="151:13" pos:end="151:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:31"><expr pos:start="153:9" pos:end="153:30"><name pos:start="153:9" pos:end="153:17">read_size</name> <operator pos:start="153:19" pos:end="153:20">+=</operator> <name pos:start="153:22" pos:end="153:30"><name pos:start="153:22" pos:end="153:24">pkt</name><operator pos:start="153:25" pos:end="153:26">-&gt;</operator><name pos:start="153:27" pos:end="153:30">size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:44"><expr pos:start="155:9" pos:end="155:43"><name pos:start="155:9" pos:end="155:10">st</name> <operator pos:start="155:12" pos:end="155:12">=</operator> <name pos:start="155:14" pos:end="155:43"><name pos:start="155:14" pos:end="155:15">ic</name><operator pos:start="155:16" pos:end="155:17">-&gt;</operator><name pos:start="155:18" pos:end="155:24">streams</name><index pos:start="155:25" pos:end="155:43">[<expr pos:start="155:26" pos:end="155:42"><name pos:start="155:26" pos:end="155:42"><name pos:start="155:26" pos:end="155:28">pkt</name><operator pos:start="155:29" pos:end="155:30">-&gt;</operator><name pos:start="155:31" pos:end="155:42">stream_index</name></name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="157:9" pos:end="173:9"><if pos:start="157:9" pos:end="173:9">if <condition pos:start="157:12" pos:end="157:39">(<expr pos:start="157:13" pos:end="157:38"><name pos:start="157:13" pos:end="157:20"><name pos:start="157:13" pos:end="157:15">pkt</name><operator pos:start="157:16" pos:end="157:17">-&gt;</operator><name pos:start="157:18" pos:end="157:20">pts</name></name> <operator pos:start="157:22" pos:end="157:23">!=</operator> <name pos:start="157:25" pos:end="157:38">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="157:41" pos:end="173:9">{<block_content pos:start="159:13" pos:end="171:13">

            <expr_stmt pos:start="159:13" pos:end="159:32"><expr pos:start="159:13" pos:end="159:31"><name pos:start="159:13" pos:end="159:20">end_time</name> <operator pos:start="159:22" pos:end="159:22">=</operator> <name pos:start="159:24" pos:end="159:31"><name pos:start="159:24" pos:end="159:26">pkt</name><operator pos:start="159:27" pos:end="159:28">-&gt;</operator><name pos:start="159:29" pos:end="159:31">pts</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:49"><expr pos:start="161:13" pos:end="161:48"><name pos:start="161:13" pos:end="161:20">duration</name> <operator pos:start="161:22" pos:end="161:22">=</operator> <name pos:start="161:24" pos:end="161:31">end_time</name> <operator pos:start="161:33" pos:end="161:33">-</operator> <name pos:start="161:35" pos:end="161:48"><name pos:start="161:35" pos:end="161:36">st</name><operator pos:start="161:37" pos:end="161:38">-&gt;</operator><name pos:start="161:39" pos:end="161:48">start_time</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="163:13" pos:end="171:13"><if pos:start="163:13" pos:end="171:13">if <condition pos:start="163:16" pos:end="163:29">(<expr pos:start="163:17" pos:end="163:28"><name pos:start="163:17" pos:end="163:24">duration</name> <operator pos:start="163:26" pos:end="163:26">&gt;</operator> <literal type="number" pos:start="163:28" pos:end="163:28">0</literal></expr>)</condition> <block pos:start="163:31" pos:end="171:13">{<block_content pos:start="165:17" pos:end="169:44">

                <if_stmt pos:start="165:17" pos:end="169:44"><if pos:start="165:17" pos:end="169:44">if <condition pos:start="165:20" pos:end="167:44">(<expr pos:start="165:21" pos:end="167:43"><name pos:start="165:21" pos:end="165:32"><name pos:start="165:21" pos:end="165:22">st</name><operator pos:start="165:23" pos:end="165:24">-&gt;</operator><name pos:start="165:25" pos:end="165:32">duration</name></name> <operator pos:start="165:34" pos:end="165:35">==</operator> <name pos:start="165:37" pos:end="165:50">AV_NOPTS_VALUE</name> <operator pos:start="165:52" pos:end="165:53">||</operator>

                    <name pos:start="167:21" pos:end="167:32"><name pos:start="167:21" pos:end="167:22">st</name><operator pos:start="167:23" pos:end="167:24">-&gt;</operator><name pos:start="167:25" pos:end="167:32">duration</name></name> <operator pos:start="167:34" pos:end="167:34">&lt;</operator> <name pos:start="167:36" pos:end="167:43">duration</name></expr>)</condition><block type="pseudo" pos:start="169:21" pos:end="169:44"><block_content pos:start="169:21" pos:end="169:44">

                    <expr_stmt pos:start="169:21" pos:end="169:44"><expr pos:start="169:21" pos:end="169:43"><name pos:start="169:21" pos:end="169:32"><name pos:start="169:21" pos:end="169:22">st</name><operator pos:start="169:23" pos:end="169:24">-&gt;</operator><name pos:start="169:25" pos:end="169:32">duration</name></name> <operator pos:start="169:34" pos:end="169:34">=</operator> <name pos:start="169:36" pos:end="169:43">duration</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:28"><expr pos:start="175:9" pos:end="175:27"><call pos:start="175:9" pos:end="175:27"><name pos:start="175:9" pos:end="175:22">av_free_packet</name><argument_list pos:start="175:23" pos:end="175:27">(<argument pos:start="175:24" pos:end="175:26"><expr pos:start="175:24" pos:end="175:26"><name pos:start="175:24" pos:end="175:26">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="181:5" pos:end="181:32"><expr pos:start="181:5" pos:end="181:31"><call pos:start="181:5" pos:end="181:31"><name pos:start="181:5" pos:end="181:27">fill_all_stream_timings</name><argument_list pos:start="181:28" pos:end="181:31">(<argument pos:start="181:29" pos:end="181:30"><expr pos:start="181:29" pos:end="181:30"><name pos:start="181:29" pos:end="181:30">ic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="185:5" pos:end="185:45"><expr pos:start="185:5" pos:end="185:44"><call pos:start="185:5" pos:end="185:44"><name pos:start="185:5" pos:end="185:13">url_fseek</name><argument_list pos:start="185:14" pos:end="185:44">(<argument pos:start="185:15" pos:end="185:21"><expr pos:start="185:15" pos:end="185:21"><operator pos:start="185:15" pos:end="185:15">&amp;</operator><name pos:start="185:16" pos:end="185:21"><name pos:start="185:16" pos:end="185:17">ic</name><operator pos:start="185:18" pos:end="185:19">-&gt;</operator><name pos:start="185:20" pos:end="185:21">pb</name></name></expr></argument>, <argument pos:start="185:24" pos:end="185:33"><expr pos:start="185:24" pos:end="185:33"><name pos:start="185:24" pos:end="185:33">old_offset</name></expr></argument>, <argument pos:start="185:36" pos:end="185:43"><expr pos:start="185:36" pos:end="185:43"><name pos:start="185:36" pos:end="185:43">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="187:5" pos:end="193:5">for<control pos:start="187:8" pos:end="187:35">(<init pos:start="187:9" pos:end="187:12"><expr pos:start="187:9" pos:end="187:11"><name pos:start="187:9" pos:end="187:9">i</name><operator pos:start="187:10" pos:end="187:10">=</operator><literal type="number" pos:start="187:11" pos:end="187:11">0</literal></expr>;</init> <condition pos:start="187:14" pos:end="187:30"><expr pos:start="187:14" pos:end="187:29"><name pos:start="187:14" pos:end="187:14">i</name><operator pos:start="187:15" pos:end="187:15">&lt;</operator><name pos:start="187:16" pos:end="187:29"><name pos:start="187:16" pos:end="187:17">ic</name><operator pos:start="187:18" pos:end="187:19">-&gt;</operator><name pos:start="187:20" pos:end="187:29">nb_streams</name></name></expr>;</condition> <incr pos:start="187:32" pos:end="187:34"><expr pos:start="187:32" pos:end="187:34"><name pos:start="187:32" pos:end="187:32">i</name><operator pos:start="187:33" pos:end="187:34">++</operator></expr></incr>)</control><block pos:start="187:36" pos:end="193:5">{<block_content pos:start="189:9" pos:end="191:35">

        <expr_stmt pos:start="189:9" pos:end="189:27"><expr pos:start="189:9" pos:end="189:26"><name pos:start="189:9" pos:end="189:10">st</name><operator pos:start="189:11" pos:end="189:11">=</operator> <name pos:start="189:13" pos:end="189:26"><name pos:start="189:13" pos:end="189:14">ic</name><operator pos:start="189:15" pos:end="189:16">-&gt;</operator><name pos:start="189:17" pos:end="189:23">streams</name><index pos:start="189:24" pos:end="189:26">[<expr pos:start="189:25" pos:end="189:25"><name pos:start="189:25" pos:end="189:25">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="191:9" pos:end="191:35"><expr pos:start="191:9" pos:end="191:34"><name pos:start="191:9" pos:end="191:19"><name pos:start="191:9" pos:end="191:10">st</name><operator pos:start="191:11" pos:end="191:12">-&gt;</operator><name pos:start="191:13" pos:end="191:19">cur_dts</name></name><operator pos:start="191:20" pos:end="191:20">=</operator> <name pos:start="191:22" pos:end="191:34"><name pos:start="191:22" pos:end="191:23">st</name><operator pos:start="191:24" pos:end="191:25">-&gt;</operator><name pos:start="191:26" pos:end="191:34">first_dts</name></name></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
