<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15103.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">long</name></type> <name pos:start="1:6" pos:end="1:20">do_rt_sigreturn</name><parameter_list pos:start="1:21" pos:end="1:39">(<parameter pos:start="1:22" pos:end="1:38"><decl pos:start="1:22" pos:end="1:38"><type pos:start="1:22" pos:end="1:35"><name pos:start="1:22" pos:end="1:33">CPUMIPSState</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:13">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:31"><name pos:start="5:5" pos:end="5:29"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:29">target_rt_sigframe</name></name> <modifier pos:start="5:31" pos:end="5:31">*</modifier></type><name pos:start="5:32" pos:end="5:36">frame</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:13">abi_ulong</name></type> <name pos:start="7:15" pos:end="7:24">frame_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">sigset_t</name></type> <name pos:start="9:14" pos:end="9:20">blocked</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:40"><expr pos:start="13:5" pos:end="13:39"><name pos:start="13:5" pos:end="13:14">frame_addr</name> <operator pos:start="13:16" pos:end="13:16">=</operator> <name pos:start="13:18" pos:end="13:39"><name pos:start="13:18" pos:end="13:20">env</name><operator pos:start="13:21" pos:end="13:22">-&gt;</operator><name pos:start="13:23" pos:end="13:31">active_tc</name><operator pos:start="13:32" pos:end="13:32">.</operator><name pos:start="13:33" pos:end="13:35">gpr</name><index pos:start="13:36" pos:end="13:39">[<expr pos:start="13:37" pos:end="13:38"><literal type="number" pos:start="13:37" pos:end="13:38">29</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:48"><expr pos:start="15:5" pos:end="15:47"><call pos:start="15:5" pos:end="15:47"><name pos:start="15:5" pos:end="15:30">trace_user_do_rt_sigreturn</name><argument_list pos:start="15:31" pos:end="15:47">(<argument pos:start="15:32" pos:end="15:34"><expr pos:start="15:32" pos:end="15:34"><name pos:start="15:32" pos:end="15:34">env</name></expr></argument>, <argument pos:start="15:37" pos:end="15:46"><expr pos:start="15:37" pos:end="15:46"><name pos:start="15:37" pos:end="15:46">frame_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:61">(<expr pos:start="17:9" pos:end="17:60"><operator pos:start="17:9" pos:end="17:9">!</operator><call pos:start="17:10" pos:end="17:60"><name pos:start="17:10" pos:end="17:25">lock_user_struct</name><argument_list pos:start="17:26" pos:end="17:60">(<argument pos:start="17:27" pos:end="17:37"><expr pos:start="17:27" pos:end="17:37"><name pos:start="17:27" pos:end="17:37">VERIFY_READ</name></expr></argument>, <argument pos:start="17:40" pos:end="17:44"><expr pos:start="17:40" pos:end="17:44"><name pos:start="17:40" pos:end="17:44">frame</name></expr></argument>, <argument pos:start="17:47" pos:end="17:56"><expr pos:start="17:47" pos:end="17:56"><name pos:start="17:47" pos:end="17:56">frame_addr</name></expr></argument>, <argument pos:start="17:59" pos:end="17:59"><expr pos:start="17:59" pos:end="17:59"><literal type="number" pos:start="17:59" pos:end="17:59">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:63" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:22">

        <goto pos:start="19:9" pos:end="19:22">goto <name pos:start="19:14" pos:end="19:21">badframe</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:63"><expr pos:start="25:5" pos:end="25:62"><call pos:start="25:5" pos:end="25:62"><name pos:start="25:5" pos:end="25:25">target_to_host_sigset</name><argument_list pos:start="25:26" pos:end="25:62">(<argument pos:start="25:27" pos:end="25:34"><expr pos:start="25:27" pos:end="25:34"><operator pos:start="25:27" pos:end="25:27">&amp;</operator><name pos:start="25:28" pos:end="25:34">blocked</name></expr></argument>, <argument pos:start="25:37" pos:end="25:61"><expr pos:start="25:37" pos:end="25:61"><operator pos:start="25:37" pos:end="25:37">&amp;</operator><name pos:start="25:38" pos:end="25:61"><name pos:start="25:38" pos:end="25:42">frame</name><operator pos:start="25:43" pos:end="25:44">-&gt;</operator><name pos:start="25:45" pos:end="25:49">rs_uc</name><operator pos:start="25:50" pos:end="25:50">.</operator><name pos:start="25:51" pos:end="25:61">tuc_sigmask</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:26"><expr pos:start="27:5" pos:end="27:25"><call pos:start="27:5" pos:end="27:25"><name pos:start="27:5" pos:end="27:15">set_sigmask</name><argument_list pos:start="27:16" pos:end="27:25">(<argument pos:start="27:17" pos:end="27:24"><expr pos:start="27:17" pos:end="27:24"><operator pos:start="27:17" pos:end="27:17">&amp;</operator><name pos:start="27:18" pos:end="27:24">blocked</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:56"><expr pos:start="31:5" pos:end="31:55"><call pos:start="31:5" pos:end="31:55"><name pos:start="31:5" pos:end="31:22">restore_sigcontext</name><argument_list pos:start="31:23" pos:end="31:55">(<argument pos:start="31:24" pos:end="31:26"><expr pos:start="31:24" pos:end="31:26"><name pos:start="31:24" pos:end="31:26">env</name></expr></argument>, <argument pos:start="31:29" pos:end="31:54"><expr pos:start="31:29" pos:end="31:54"><operator pos:start="31:29" pos:end="31:29">&amp;</operator><name pos:start="31:30" pos:end="31:54"><name pos:start="31:30" pos:end="31:34">frame</name><operator pos:start="31:35" pos:end="31:36">-&gt;</operator><name pos:start="31:37" pos:end="31:41">rs_uc</name><operator pos:start="31:42" pos:end="31:42">.</operator><name pos:start="31:43" pos:end="31:54">tuc_mcontext</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="41:22"><if pos:start="35:5" pos:end="41:22">if <condition pos:start="35:8" pos:end="39:64">(<expr pos:start="35:9" pos:end="39:63"><call pos:start="35:9" pos:end="39:52"><name pos:start="35:9" pos:end="35:22">do_sigaltstack</name><argument_list pos:start="35:23" pos:end="39:52">(<argument pos:start="35:24" pos:end="37:75"><expr pos:start="35:24" pos:end="37:75"><name pos:start="35:24" pos:end="35:33">frame_addr</name> <operator pos:start="35:35" pos:end="35:35">+</operator>

                       <call pos:start="37:24" pos:end="37:75"><name pos:start="37:24" pos:end="37:31">offsetof</name><argument_list pos:start="37:32" pos:end="37:75">(<argument pos:start="37:33" pos:end="37:57"><expr pos:start="37:33" pos:end="37:57">struct <name pos:start="37:40" pos:end="37:57">target_rt_sigframe</name></expr></argument>, <argument pos:start="37:60" pos:end="37:74"><expr pos:start="37:60" pos:end="37:74"><name pos:start="37:60" pos:end="37:74"><name pos:start="37:60" pos:end="37:64">rs_uc</name><operator pos:start="37:65" pos:end="37:65">.</operator><name pos:start="37:66" pos:end="37:74">tuc_stack</name></name></expr></argument>)</argument_list></call></expr></argument>,

                       <argument pos:start="39:24" pos:end="39:24"><expr pos:start="39:24" pos:end="39:24"><literal type="number" pos:start="39:24" pos:end="39:24">0</literal></expr></argument>, <argument pos:start="39:27" pos:end="39:51"><expr pos:start="39:27" pos:end="39:51"><call pos:start="39:27" pos:end="39:51"><name pos:start="39:27" pos:end="39:46">get_sp_from_cpustate</name><argument_list pos:start="39:47" pos:end="39:51">(<argument pos:start="39:48" pos:end="39:50"><expr pos:start="39:48" pos:end="39:50"><name pos:start="39:48" pos:end="39:50">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="39:54" pos:end="39:55">==</operator> <operator pos:start="39:57" pos:end="39:57">-</operator><name pos:start="39:58" pos:end="39:63">EFAULT</name></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:22"><block_content pos:start="41:9" pos:end="41:22">

        <goto pos:start="41:9" pos:end="41:22">goto <name pos:start="41:14" pos:end="41:21">badframe</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:37"><expr pos:start="45:5" pos:end="45:36"><name pos:start="45:5" pos:end="45:21"><name pos:start="45:5" pos:end="45:7">env</name><operator pos:start="45:8" pos:end="45:9">-&gt;</operator><name pos:start="45:10" pos:end="45:18">active_tc</name><operator pos:start="45:19" pos:end="45:19">.</operator><name pos:start="45:20" pos:end="45:21">PC</name></name> <operator pos:start="45:23" pos:end="45:23">=</operator> <name pos:start="45:25" pos:end="45:36"><name pos:start="45:25" pos:end="45:27">env</name><operator pos:start="45:28" pos:end="45:29">-&gt;</operator><name pos:start="45:30" pos:end="45:36">CP0_EPC</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:42"><expr pos:start="47:5" pos:end="47:41"><call pos:start="47:5" pos:end="47:41"><name pos:start="47:5" pos:end="47:36">mips_set_hflags_isa_mode_from_pc</name><argument_list pos:start="47:37" pos:end="47:41">(<argument pos:start="47:38" pos:end="47:40"><expr pos:start="47:38" pos:end="47:40"><name pos:start="47:38" pos:end="47:40">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="49:5" pos:end="51:46">/* I am not sure this is right, but it seems to work

    * maybe a problem with nested signals ? */</comment>

    <expr_stmt pos:start="53:5" pos:end="53:21"><expr pos:start="53:5" pos:end="53:20"><name pos:start="53:5" pos:end="53:16"><name pos:start="53:5" pos:end="53:7">env</name><operator pos:start="53:8" pos:end="53:9">-&gt;</operator><name pos:start="53:10" pos:end="53:16">CP0_EPC</name></name> <operator pos:start="53:18" pos:end="53:18">=</operator> <literal type="number" pos:start="53:20" pos:end="53:20">0</literal></expr>;</expr_stmt>

    <return pos:start="55:5" pos:end="55:35">return <expr pos:start="55:12" pos:end="55:34"><operator pos:start="55:12" pos:end="55:12">-</operator><name pos:start="55:13" pos:end="55:34">TARGET_QEMU_ESIGRETURN</name></expr>;</return>



<label pos:start="59:1" pos:end="59:9"><name pos:start="59:1" pos:end="59:8">badframe</name>:</label>

    <expr_stmt pos:start="61:5" pos:end="61:43"><expr pos:start="61:5" pos:end="61:42"><call pos:start="61:5" pos:end="61:42"><name pos:start="61:5" pos:end="61:13">force_sig</name><argument_list pos:start="61:14" pos:end="61:42">(<argument pos:start="61:15" pos:end="61:28"><expr pos:start="61:15" pos:end="61:28"><name pos:start="61:15" pos:end="61:28">TARGET_SIGSEGV</name></expr></argument><comment type="block" pos:start="61:29" pos:end="61:41">/*, current*/</comment>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="63:5" pos:end="63:13">return <expr pos:start="63:12" pos:end="63:12"><literal type="number" pos:start="63:12" pos:end="63:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
