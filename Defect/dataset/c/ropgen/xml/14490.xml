<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14490.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">netfilter_print_info</name><parameter_list pos:start="1:33" pos:end="1:66">(<parameter pos:start="1:34" pos:end="1:45"><decl pos:start="1:34" pos:end="1:45"><type pos:start="1:34" pos:end="1:45"><name pos:start="1:34" pos:end="1:40">Monitor</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">mon</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:65"><decl pos:start="1:48" pos:end="1:65"><type pos:start="1:48" pos:end="1:65"><name pos:start="1:48" pos:end="1:61">NetFilterState</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:65">nf</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:30">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">char</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:13">str</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">ObjectProperty</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:24">prop</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:26"><name pos:start="9:5" pos:end="9:26">ObjectPropertyIterator</name></type> <name pos:start="9:28" pos:end="9:31">iter</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:25"><name pos:start="11:5" pos:end="11:23">StringOutputVisitor</name> <modifier pos:start="11:25" pos:end="11:25">*</modifier></type><name pos:start="11:26" pos:end="11:27">ov</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:27">/* generate info str */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:49"><expr pos:start="17:5" pos:end="17:48"><call pos:start="17:5" pos:end="17:48"><name pos:start="17:5" pos:end="17:29">object_property_iter_init</name><argument_list pos:start="17:30" pos:end="17:48">(<argument pos:start="17:31" pos:end="17:35"><expr pos:start="17:31" pos:end="17:35"><operator pos:start="17:31" pos:end="17:31">&amp;</operator><name pos:start="17:32" pos:end="17:35">iter</name></expr></argument>, <argument pos:start="17:38" pos:end="17:47"><expr pos:start="17:38" pos:end="17:47"><call pos:start="17:38" pos:end="17:47"><name pos:start="17:38" pos:end="17:43">OBJECT</name><argument_list pos:start="17:44" pos:end="17:47">(<argument pos:start="17:45" pos:end="17:46"><expr pos:start="17:45" pos:end="17:46"><name pos:start="17:45" pos:end="17:46">nf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="19:5" pos:end="41:5">while <condition pos:start="19:11" pos:end="19:53">(<expr pos:start="19:12" pos:end="19:52"><operator pos:start="19:12" pos:end="19:12">(</operator><name pos:start="19:13" pos:end="19:16">prop</name> <operator pos:start="19:18" pos:end="19:18">=</operator> <call pos:start="19:20" pos:end="19:51"><name pos:start="19:20" pos:end="19:44">object_property_iter_next</name><argument_list pos:start="19:45" pos:end="19:51">(<argument pos:start="19:46" pos:end="19:50"><expr pos:start="19:46" pos:end="19:50"><operator pos:start="19:46" pos:end="19:46">&amp;</operator><name pos:start="19:47" pos:end="19:50">iter</name></expr></argument>)</argument_list></call><operator pos:start="19:52" pos:end="19:52">)</operator></expr>)</condition> <block pos:start="19:55" pos:end="41:5">{<block_content pos:start="21:9" pos:end="39:20">

        <if_stmt pos:start="21:9" pos:end="25:9"><if pos:start="21:9" pos:end="25:9">if <condition pos:start="21:12" pos:end="21:40">(<expr pos:start="21:13" pos:end="21:39"><operator pos:start="21:13" pos:end="21:13">!</operator><call pos:start="21:14" pos:end="21:39"><name pos:start="21:14" pos:end="21:19">strcmp</name><argument_list pos:start="21:20" pos:end="21:39">(<argument pos:start="21:21" pos:end="21:30"><expr pos:start="21:21" pos:end="21:30"><name pos:start="21:21" pos:end="21:30"><name pos:start="21:21" pos:end="21:24">prop</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:30">name</name></name></expr></argument>, <argument pos:start="21:33" pos:end="21:38"><expr pos:start="21:33" pos:end="21:38"><literal type="string" pos:start="21:33" pos:end="21:38">"type"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:42" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:21">

            <continue pos:start="23:13" pos:end="23:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:46"><expr pos:start="27:9" pos:end="27:45"><name pos:start="27:9" pos:end="27:10">ov</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <call pos:start="27:14" pos:end="27:45"><name pos:start="27:14" pos:end="27:38">string_output_visitor_new</name><argument_list pos:start="27:39" pos:end="27:45">(<argument pos:start="27:40" pos:end="27:44"><expr pos:start="27:40" pos:end="27:44"><name pos:start="27:40" pos:end="27:44">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="31:46"><expr pos:start="29:9" pos:end="31:45"><call pos:start="29:9" pos:end="31:45"><name pos:start="29:9" pos:end="29:27">object_property_get</name><argument_list pos:start="29:28" pos:end="31:45">(<argument pos:start="29:29" pos:end="29:38"><expr pos:start="29:29" pos:end="29:38"><call pos:start="29:29" pos:end="29:38"><name pos:start="29:29" pos:end="29:34">OBJECT</name><argument_list pos:start="29:35" pos:end="29:38">(<argument pos:start="29:36" pos:end="29:37"><expr pos:start="29:36" pos:end="29:37"><name pos:start="29:36" pos:end="29:37">nf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="29:41" pos:end="29:69"><expr pos:start="29:41" pos:end="29:69"><call pos:start="29:41" pos:end="29:69"><name pos:start="29:41" pos:end="29:65">string_output_get_visitor</name><argument_list pos:start="29:66" pos:end="29:69">(<argument pos:start="29:67" pos:end="29:68"><expr pos:start="29:67" pos:end="29:68"><name pos:start="29:67" pos:end="29:68">ov</name></expr></argument>)</argument_list></call></expr></argument>,

                            <argument pos:start="31:29" pos:end="31:38"><expr pos:start="31:29" pos:end="31:38"><name pos:start="31:29" pos:end="31:38"><name pos:start="31:29" pos:end="31:32">prop</name><operator pos:start="31:33" pos:end="31:34">-&gt;</operator><name pos:start="31:35" pos:end="31:38">name</name></name></expr></argument>, <argument pos:start="31:41" pos:end="31:44"><expr pos:start="31:41" pos:end="31:44"><name pos:start="31:41" pos:end="31:44">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:43"><expr pos:start="33:9" pos:end="33:42"><name pos:start="33:9" pos:end="33:11">str</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <call pos:start="33:15" pos:end="33:42"><name pos:start="33:15" pos:end="33:38">string_output_get_string</name><argument_list pos:start="33:39" pos:end="33:42">(<argument pos:start="33:40" pos:end="33:41"><expr pos:start="33:40" pos:end="33:41"><name pos:start="33:40" pos:end="33:41">ov</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:50"><expr pos:start="35:9" pos:end="35:49"><call pos:start="35:9" pos:end="35:49"><name pos:start="35:9" pos:end="35:18">visit_free</name><argument_list pos:start="35:19" pos:end="35:49">(<argument pos:start="35:20" pos:end="35:48"><expr pos:start="35:20" pos:end="35:48"><call pos:start="35:20" pos:end="35:48"><name pos:start="35:20" pos:end="35:44">string_output_get_visitor</name><argument_list pos:start="35:45" pos:end="35:48">(<argument pos:start="35:46" pos:end="35:47"><expr pos:start="35:46" pos:end="35:47"><name pos:start="35:46" pos:end="35:47">ov</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:55"><expr pos:start="37:9" pos:end="37:54"><call pos:start="37:9" pos:end="37:54"><name pos:start="37:9" pos:end="37:22">monitor_printf</name><argument_list pos:start="37:23" pos:end="37:54">(<argument pos:start="37:24" pos:end="37:26"><expr pos:start="37:24" pos:end="37:26"><name pos:start="37:24" pos:end="37:26">mon</name></expr></argument>, <argument pos:start="37:29" pos:end="37:36"><expr pos:start="37:29" pos:end="37:36"><literal type="string" pos:start="37:29" pos:end="37:36">",%s=%s"</literal></expr></argument>, <argument pos:start="37:39" pos:end="37:48"><expr pos:start="37:39" pos:end="37:48"><name pos:start="37:39" pos:end="37:48"><name pos:start="37:39" pos:end="37:42">prop</name><operator pos:start="37:43" pos:end="37:44">-&gt;</operator><name pos:start="37:45" pos:end="37:48">name</name></name></expr></argument>, <argument pos:start="37:51" pos:end="37:53"><expr pos:start="37:51" pos:end="37:53"><name pos:start="37:51" pos:end="37:53">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:20"><expr pos:start="39:9" pos:end="39:19"><call pos:start="39:9" pos:end="39:19"><name pos:start="39:9" pos:end="39:14">g_free</name><argument_list pos:start="39:15" pos:end="39:19">(<argument pos:start="39:16" pos:end="39:18"><expr pos:start="39:16" pos:end="39:18"><name pos:start="39:16" pos:end="39:18">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="43:5" pos:end="43:30"><expr pos:start="43:5" pos:end="43:29"><call pos:start="43:5" pos:end="43:29"><name pos:start="43:5" pos:end="43:18">monitor_printf</name><argument_list pos:start="43:19" pos:end="43:29">(<argument pos:start="43:20" pos:end="43:22"><expr pos:start="43:20" pos:end="43:22"><name pos:start="43:20" pos:end="43:22">mon</name></expr></argument>, <argument pos:start="43:25" pos:end="43:28"><expr pos:start="43:25" pos:end="43:28"><literal type="string" pos:start="43:25" pos:end="43:28">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
