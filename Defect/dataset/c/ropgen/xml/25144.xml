<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25144.c" pos:tabs="8"><function pos:start="1:1" pos:end="151:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">vp8_encode</name><parameter_list pos:start="1:22" pos:end="3:60">(<parameter pos:start="1:23" pos:end="1:43"><decl pos:start="1:23" pos:end="1:43"><type pos:start="1:23" pos:end="1:43"><name pos:start="1:23" pos:end="1:36">AVCodecContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:43">avctx</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:58"><decl pos:start="1:46" pos:end="1:58"><type pos:start="1:46" pos:end="1:58"><name pos:start="1:46" pos:end="1:53">AVPacket</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:58">pkt</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:42"><decl pos:start="3:23" pos:end="3:42"><type pos:start="3:23" pos:end="3:42"><specifier pos:start="3:23" pos:end="3:27">const</specifier> <name pos:start="3:29" pos:end="3:35">AVFrame</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:42">frame</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:59"><decl pos:start="3:45" pos:end="3:59"><type pos:start="3:45" pos:end="3:59"><name pos:start="3:45" pos:end="3:47">int</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:59">got_packet</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="151:1">{<block_content pos:start="7:5" pos:end="149:13">

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">VP8Context</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">ctx</name> <init pos:start="7:21" pos:end="7:38">= <expr pos:start="7:23" pos:end="7:38"><name pos:start="7:23" pos:end="7:38"><name pos:start="7:23" pos:end="7:27">avctx</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:20">vpx_image</name></name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:28">rawimg</name> <init pos:start="9:30" pos:end="9:35">= <expr pos:start="9:32" pos:end="9:35"><name pos:start="9:32" pos:end="9:35">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:41"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:20">vpx_image</name></name> <modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:34">rawimg_alpha</name> <init pos:start="11:36" pos:end="11:41">= <expr pos:start="11:38" pos:end="11:41"><name pos:start="11:38" pos:end="11:41">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:25"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:21">timestamp</name> <init pos:start="13:23" pos:end="13:25">= <expr pos:start="13:25" pos:end="13:25"><literal type="number" pos:start="13:25" pos:end="13:25">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">res</name></decl>, <decl pos:start="15:14" pos:end="15:23"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:14" pos:end="15:23">coded_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:36"><decl pos:start="17:5" pos:end="17:35"><type pos:start="17:5" pos:end="17:25"><name pos:start="17:5" pos:end="17:25">vpx_enc_frame_flags_t</name></type> <name pos:start="17:27" pos:end="17:31">flags</name> <init pos:start="17:33" pos:end="17:35">= <expr pos:start="17:35" pos:end="17:35"><literal type="number" pos:start="17:35" pos:end="17:35">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="71:5"><if pos:start="21:5" pos:end="71:5">if <condition pos:start="21:8" pos:end="21:14">(<expr pos:start="21:9" pos:end="21:13"><name pos:start="21:9" pos:end="21:13">frame</name></expr>)</condition> <block pos:start="21:16" pos:end="71:5">{<block_content pos:start="23:9" pos:end="69:40">

        <expr_stmt pos:start="23:9" pos:end="23:51"><expr pos:start="23:9" pos:end="23:50"><name pos:start="23:9" pos:end="23:14">rawimg</name>                      <operator pos:start="23:37" pos:end="23:37">=</operator> <operator pos:start="23:39" pos:end="23:39">&amp;</operator><name pos:start="23:40" pos:end="23:50"><name pos:start="23:40" pos:end="23:42">ctx</name><operator pos:start="23:43" pos:end="23:44">-&gt;</operator><name pos:start="23:45" pos:end="23:50">rawimg</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:53"><expr pos:start="25:9" pos:end="25:52"><name pos:start="25:9" pos:end="25:35"><name pos:start="25:9" pos:end="25:14">rawimg</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:22">planes</name><index pos:start="25:23" pos:end="25:35">[<expr pos:start="25:24" pos:end="25:34"><name pos:start="25:24" pos:end="25:34">VPX_PLANE_Y</name></expr>]</index></name> <operator pos:start="25:37" pos:end="25:37">=</operator> <name pos:start="25:39" pos:end="25:52"><name pos:start="25:39" pos:end="25:43">frame</name><operator pos:start="25:44" pos:end="25:45">-&gt;</operator><name pos:start="25:46" pos:end="25:49">data</name><index pos:start="25:50" pos:end="25:52">[<expr pos:start="25:51" pos:end="25:51"><literal type="number" pos:start="25:51" pos:end="25:51">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:53"><expr pos:start="27:9" pos:end="27:52"><name pos:start="27:9" pos:end="27:35"><name pos:start="27:9" pos:end="27:14">rawimg</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:22">planes</name><index pos:start="27:23" pos:end="27:35">[<expr pos:start="27:24" pos:end="27:34"><name pos:start="27:24" pos:end="27:34">VPX_PLANE_U</name></expr>]</index></name> <operator pos:start="27:37" pos:end="27:37">=</operator> <name pos:start="27:39" pos:end="27:52"><name pos:start="27:39" pos:end="27:43">frame</name><operator pos:start="27:44" pos:end="27:45">-&gt;</operator><name pos:start="27:46" pos:end="27:49">data</name><index pos:start="27:50" pos:end="27:52">[<expr pos:start="27:51" pos:end="27:51"><literal type="number" pos:start="27:51" pos:end="27:51">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:53"><expr pos:start="29:9" pos:end="29:52"><name pos:start="29:9" pos:end="29:35"><name pos:start="29:9" pos:end="29:14">rawimg</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:22">planes</name><index pos:start="29:23" pos:end="29:35">[<expr pos:start="29:24" pos:end="29:34"><name pos:start="29:24" pos:end="29:34">VPX_PLANE_V</name></expr>]</index></name> <operator pos:start="29:37" pos:end="29:37">=</operator> <name pos:start="29:39" pos:end="29:52"><name pos:start="29:39" pos:end="29:43">frame</name><operator pos:start="29:44" pos:end="29:45">-&gt;</operator><name pos:start="29:46" pos:end="29:49">data</name><index pos:start="29:50" pos:end="29:52">[<expr pos:start="29:51" pos:end="29:51"><literal type="number" pos:start="29:51" pos:end="29:51">2</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:57"><expr pos:start="31:9" pos:end="31:56"><name pos:start="31:9" pos:end="31:35"><name pos:start="31:9" pos:end="31:14">rawimg</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:22">stride</name><index pos:start="31:23" pos:end="31:35">[<expr pos:start="31:24" pos:end="31:34"><name pos:start="31:24" pos:end="31:34">VPX_PLANE_Y</name></expr>]</index></name> <operator pos:start="31:37" pos:end="31:37">=</operator> <name pos:start="31:39" pos:end="31:56"><name pos:start="31:39" pos:end="31:43">frame</name><operator pos:start="31:44" pos:end="31:45">-&gt;</operator><name pos:start="31:46" pos:end="31:53">linesize</name><index pos:start="31:54" pos:end="31:56">[<expr pos:start="31:55" pos:end="31:55"><literal type="number" pos:start="31:55" pos:end="31:55">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:57"><expr pos:start="33:9" pos:end="33:56"><name pos:start="33:9" pos:end="33:35"><name pos:start="33:9" pos:end="33:14">rawimg</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:22">stride</name><index pos:start="33:23" pos:end="33:35">[<expr pos:start="33:24" pos:end="33:34"><name pos:start="33:24" pos:end="33:34">VPX_PLANE_U</name></expr>]</index></name> <operator pos:start="33:37" pos:end="33:37">=</operator> <name pos:start="33:39" pos:end="33:56"><name pos:start="33:39" pos:end="33:43">frame</name><operator pos:start="33:44" pos:end="33:45">-&gt;</operator><name pos:start="33:46" pos:end="33:53">linesize</name><index pos:start="33:54" pos:end="33:56">[<expr pos:start="33:55" pos:end="33:55"><literal type="number" pos:start="33:55" pos:end="33:55">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:57"><expr pos:start="35:9" pos:end="35:56"><name pos:start="35:9" pos:end="35:35"><name pos:start="35:9" pos:end="35:14">rawimg</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:22">stride</name><index pos:start="35:23" pos:end="35:35">[<expr pos:start="35:24" pos:end="35:34"><name pos:start="35:24" pos:end="35:34">VPX_PLANE_V</name></expr>]</index></name> <operator pos:start="35:37" pos:end="35:37">=</operator> <name pos:start="35:39" pos:end="35:56"><name pos:start="35:39" pos:end="35:43">frame</name><operator pos:start="35:44" pos:end="35:45">-&gt;</operator><name pos:start="35:46" pos:end="35:53">linesize</name><index pos:start="35:54" pos:end="35:56">[<expr pos:start="35:55" pos:end="35:55"><literal type="number" pos:start="35:55" pos:end="35:55">2</literal></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="63:9"><if pos:start="37:9" pos:end="63:9">if <condition pos:start="37:12" pos:end="37:26">(<expr pos:start="37:13" pos:end="37:25"><name pos:start="37:13" pos:end="37:25"><name pos:start="37:13" pos:end="37:15">ctx</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:25">is_alpha</name></name></expr>)</condition> <block pos:start="37:28" pos:end="63:9">{<block_content pos:start="39:13" pos:end="61:67">

            <decl_stmt pos:start="39:13" pos:end="39:39"><decl pos:start="39:13" pos:end="39:28"><type pos:start="39:13" pos:end="39:21"><name pos:start="39:13" pos:end="39:19">uint8_t</name> <modifier pos:start="39:21" pos:end="39:21">*</modifier></type><name pos:start="39:22" pos:end="39:28">u_plane</name></decl>, <decl pos:start="39:31" pos:end="39:38"><type ref="prev" pos:start="39:13" pos:end="39:21"><modifier pos:start="39:31" pos:end="39:31">*</modifier></type><name pos:start="39:32" pos:end="39:38">v_plane</name></decl>;</decl_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:46"><expr pos:start="41:13" pos:end="41:45"><name pos:start="41:13" pos:end="41:24">rawimg_alpha</name> <operator pos:start="41:26" pos:end="41:26">=</operator> <operator pos:start="41:28" pos:end="41:28">&amp;</operator><name pos:start="41:29" pos:end="41:45"><name pos:start="41:29" pos:end="41:31">ctx</name><operator pos:start="41:32" pos:end="41:33">-&gt;</operator><name pos:start="41:34" pos:end="41:45">rawimg_alpha</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:63"><expr pos:start="43:13" pos:end="43:62"><name pos:start="43:13" pos:end="43:45"><name pos:start="43:13" pos:end="43:24">rawimg_alpha</name><operator pos:start="43:25" pos:end="43:26">-&gt;</operator><name pos:start="43:27" pos:end="43:32">planes</name><index pos:start="43:33" pos:end="43:45">[<expr pos:start="43:34" pos:end="43:44"><name pos:start="43:34" pos:end="43:44">VPX_PLANE_Y</name></expr>]</index></name> <operator pos:start="43:47" pos:end="43:47">=</operator> <name pos:start="43:49" pos:end="43:62"><name pos:start="43:49" pos:end="43:53">frame</name><operator pos:start="43:54" pos:end="43:55">-&gt;</operator><name pos:start="43:56" pos:end="43:59">data</name><index pos:start="43:60" pos:end="43:62">[<expr pos:start="43:61" pos:end="43:61"><literal type="number" pos:start="43:61" pos:end="43:61">3</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:68"><expr pos:start="45:13" pos:end="45:67"><name pos:start="45:13" pos:end="45:19">u_plane</name> <operator pos:start="45:21" pos:end="45:21">=</operator> <call pos:start="45:23" pos:end="45:67"><name pos:start="45:23" pos:end="45:31">av_malloc</name><argument_list pos:start="45:32" pos:end="45:67">(<argument pos:start="45:33" pos:end="45:66"><expr pos:start="45:33" pos:end="45:66"><name pos:start="45:33" pos:end="45:50"><name pos:start="45:33" pos:end="45:37">frame</name><operator pos:start="45:38" pos:end="45:39">-&gt;</operator><name pos:start="45:40" pos:end="45:47">linesize</name><index pos:start="45:48" pos:end="45:50">[<expr pos:start="45:49" pos:end="45:49"><literal type="number" pos:start="45:49" pos:end="45:49">1</literal></expr>]</index></name> <operator pos:start="45:52" pos:end="45:52">*</operator> <name pos:start="45:54" pos:end="45:66"><name pos:start="45:54" pos:end="45:58">frame</name><operator pos:start="45:59" pos:end="45:60">-&gt;</operator><name pos:start="45:61" pos:end="45:66">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:70"><expr pos:start="47:13" pos:end="47:69"><call pos:start="47:13" pos:end="47:69"><name pos:start="47:13" pos:end="47:18">memset</name><argument_list pos:start="47:19" pos:end="47:69">(<argument pos:start="47:20" pos:end="47:26"><expr pos:start="47:20" pos:end="47:26"><name pos:start="47:20" pos:end="47:26">u_plane</name></expr></argument>, <argument pos:start="47:29" pos:end="47:32"><expr pos:start="47:29" pos:end="47:32"><literal type="number" pos:start="47:29" pos:end="47:32">0x80</literal></expr></argument>, <argument pos:start="47:35" pos:end="47:68"><expr pos:start="47:35" pos:end="47:68"><name pos:start="47:35" pos:end="47:52"><name pos:start="47:35" pos:end="47:39">frame</name><operator pos:start="47:40" pos:end="47:41">-&gt;</operator><name pos:start="47:42" pos:end="47:49">linesize</name><index pos:start="47:50" pos:end="47:52">[<expr pos:start="47:51" pos:end="47:51"><literal type="number" pos:start="47:51" pos:end="47:51">1</literal></expr>]</index></name> <operator pos:start="47:54" pos:end="47:54">*</operator> <name pos:start="47:56" pos:end="47:68"><name pos:start="47:56" pos:end="47:60">frame</name><operator pos:start="47:61" pos:end="47:62">-&gt;</operator><name pos:start="47:63" pos:end="47:68">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:56"><expr pos:start="49:13" pos:end="49:55"><name pos:start="49:13" pos:end="49:45"><name pos:start="49:13" pos:end="49:24">rawimg_alpha</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:32">planes</name><index pos:start="49:33" pos:end="49:45">[<expr pos:start="49:34" pos:end="49:44"><name pos:start="49:34" pos:end="49:44">VPX_PLANE_U</name></expr>]</index></name> <operator pos:start="49:47" pos:end="49:47">=</operator> <name pos:start="49:49" pos:end="49:55">u_plane</name></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:68"><expr pos:start="51:13" pos:end="51:67"><name pos:start="51:13" pos:end="51:19">v_plane</name> <operator pos:start="51:21" pos:end="51:21">=</operator> <call pos:start="51:23" pos:end="51:67"><name pos:start="51:23" pos:end="51:31">av_malloc</name><argument_list pos:start="51:32" pos:end="51:67">(<argument pos:start="51:33" pos:end="51:66"><expr pos:start="51:33" pos:end="51:66"><name pos:start="51:33" pos:end="51:50"><name pos:start="51:33" pos:end="51:37">frame</name><operator pos:start="51:38" pos:end="51:39">-&gt;</operator><name pos:start="51:40" pos:end="51:47">linesize</name><index pos:start="51:48" pos:end="51:50">[<expr pos:start="51:49" pos:end="51:49"><literal type="number" pos:start="51:49" pos:end="51:49">2</literal></expr>]</index></name> <operator pos:start="51:52" pos:end="51:52">*</operator> <name pos:start="51:54" pos:end="51:66"><name pos:start="51:54" pos:end="51:58">frame</name><operator pos:start="51:59" pos:end="51:60">-&gt;</operator><name pos:start="51:61" pos:end="51:66">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:70"><expr pos:start="53:13" pos:end="53:69"><call pos:start="53:13" pos:end="53:69"><name pos:start="53:13" pos:end="53:18">memset</name><argument_list pos:start="53:19" pos:end="53:69">(<argument pos:start="53:20" pos:end="53:26"><expr pos:start="53:20" pos:end="53:26"><name pos:start="53:20" pos:end="53:26">v_plane</name></expr></argument>, <argument pos:start="53:29" pos:end="53:32"><expr pos:start="53:29" pos:end="53:32"><literal type="number" pos:start="53:29" pos:end="53:32">0x80</literal></expr></argument>, <argument pos:start="53:35" pos:end="53:68"><expr pos:start="53:35" pos:end="53:68"><name pos:start="53:35" pos:end="53:52"><name pos:start="53:35" pos:end="53:39">frame</name><operator pos:start="53:40" pos:end="53:41">-&gt;</operator><name pos:start="53:42" pos:end="53:49">linesize</name><index pos:start="53:50" pos:end="53:52">[<expr pos:start="53:51" pos:end="53:51"><literal type="number" pos:start="53:51" pos:end="53:51">2</literal></expr>]</index></name> <operator pos:start="53:54" pos:end="53:54">*</operator> <name pos:start="53:56" pos:end="53:68"><name pos:start="53:56" pos:end="53:60">frame</name><operator pos:start="53:61" pos:end="53:62">-&gt;</operator><name pos:start="53:63" pos:end="53:68">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:56"><expr pos:start="55:13" pos:end="55:55"><name pos:start="55:13" pos:end="55:45"><name pos:start="55:13" pos:end="55:24">rawimg_alpha</name><operator pos:start="55:25" pos:end="55:26">-&gt;</operator><name pos:start="55:27" pos:end="55:32">planes</name><index pos:start="55:33" pos:end="55:45">[<expr pos:start="55:34" pos:end="55:44"><name pos:start="55:34" pos:end="55:44">VPX_PLANE_V</name></expr>]</index></name> <operator pos:start="55:47" pos:end="55:47">=</operator> <name pos:start="55:49" pos:end="55:55">v_plane</name></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:67"><expr pos:start="57:13" pos:end="57:66"><name pos:start="57:13" pos:end="57:45"><name pos:start="57:13" pos:end="57:24">rawimg_alpha</name><operator pos:start="57:25" pos:end="57:26">-&gt;</operator><name pos:start="57:27" pos:end="57:32">stride</name><index pos:start="57:33" pos:end="57:45">[<expr pos:start="57:34" pos:end="57:44"><name pos:start="57:34" pos:end="57:44">VPX_PLANE_Y</name></expr>]</index></name> <operator pos:start="57:47" pos:end="57:47">=</operator> <name pos:start="57:49" pos:end="57:66"><name pos:start="57:49" pos:end="57:53">frame</name><operator pos:start="57:54" pos:end="57:55">-&gt;</operator><name pos:start="57:56" pos:end="57:63">linesize</name><index pos:start="57:64" pos:end="57:66">[<expr pos:start="57:65" pos:end="57:65"><literal type="number" pos:start="57:65" pos:end="57:65">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:67"><expr pos:start="59:13" pos:end="59:66"><name pos:start="59:13" pos:end="59:45"><name pos:start="59:13" pos:end="59:24">rawimg_alpha</name><operator pos:start="59:25" pos:end="59:26">-&gt;</operator><name pos:start="59:27" pos:end="59:32">stride</name><index pos:start="59:33" pos:end="59:45">[<expr pos:start="59:34" pos:end="59:44"><name pos:start="59:34" pos:end="59:44">VPX_PLANE_U</name></expr>]</index></name> <operator pos:start="59:47" pos:end="59:47">=</operator> <name pos:start="59:49" pos:end="59:66"><name pos:start="59:49" pos:end="59:53">frame</name><operator pos:start="59:54" pos:end="59:55">-&gt;</operator><name pos:start="59:56" pos:end="59:63">linesize</name><index pos:start="59:64" pos:end="59:66">[<expr pos:start="59:65" pos:end="59:65"><literal type="number" pos:start="59:65" pos:end="59:65">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:67"><expr pos:start="61:13" pos:end="61:66"><name pos:start="61:13" pos:end="61:45"><name pos:start="61:13" pos:end="61:24">rawimg_alpha</name><operator pos:start="61:25" pos:end="61:26">-&gt;</operator><name pos:start="61:27" pos:end="61:32">stride</name><index pos:start="61:33" pos:end="61:45">[<expr pos:start="61:34" pos:end="61:44"><name pos:start="61:34" pos:end="61:44">VPX_PLANE_V</name></expr>]</index></name> <operator pos:start="61:47" pos:end="61:47">=</operator> <name pos:start="61:49" pos:end="61:66"><name pos:start="61:49" pos:end="61:53">frame</name><operator pos:start="61:54" pos:end="61:55">-&gt;</operator><name pos:start="61:56" pos:end="61:63">linesize</name><index pos:start="61:64" pos:end="61:66">[<expr pos:start="61:65" pos:end="61:65"><literal type="number" pos:start="61:65" pos:end="61:65">2</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:49"><expr pos:start="65:9" pos:end="65:48"><name pos:start="65:9" pos:end="65:17">timestamp</name>                   <operator pos:start="65:37" pos:end="65:37">=</operator> <name pos:start="65:39" pos:end="65:48"><name pos:start="65:39" pos:end="65:43">frame</name><operator pos:start="65:44" pos:end="65:45">-&gt;</operator><name pos:start="65:46" pos:end="65:48">pts</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="67:9" pos:end="69:40"><if pos:start="67:9" pos:end="69:40">if <condition pos:start="67:12" pos:end="67:50">(<expr pos:start="67:13" pos:end="67:49"><name pos:start="67:13" pos:end="67:28"><name pos:start="67:13" pos:end="67:17">frame</name><operator pos:start="67:18" pos:end="67:19">-&gt;</operator><name pos:start="67:20" pos:end="67:28">pict_type</name></name> <operator pos:start="67:30" pos:end="67:31">==</operator> <name pos:start="67:33" pos:end="67:49">AV_PICTURE_TYPE_I</name></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:40"><block_content pos:start="69:13" pos:end="69:40">

            <expr_stmt pos:start="69:13" pos:end="69:40"><expr pos:start="69:13" pos:end="69:39"><name pos:start="69:13" pos:end="69:17">flags</name> <operator pos:start="69:19" pos:end="69:20">|=</operator> <name pos:start="69:22" pos:end="69:39">VPX_EFLAG_FORCE_KF</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="75:5" pos:end="77:73"><expr pos:start="75:5" pos:end="77:72"><name pos:start="75:5" pos:end="75:7">res</name> <operator pos:start="75:9" pos:end="75:9">=</operator> <call pos:start="75:11" pos:end="77:72"><name pos:start="75:11" pos:end="75:26">vpx_codec_encode</name><argument_list pos:start="75:27" pos:end="77:72">(<argument pos:start="75:28" pos:end="75:40"><expr pos:start="75:28" pos:end="75:40"><operator pos:start="75:28" pos:end="75:28">&amp;</operator><name pos:start="75:29" pos:end="75:40"><name pos:start="75:29" pos:end="75:31">ctx</name><operator pos:start="75:32" pos:end="75:33">-&gt;</operator><name pos:start="75:34" pos:end="75:40">encoder</name></name></expr></argument>, <argument pos:start="75:43" pos:end="75:48"><expr pos:start="75:43" pos:end="75:48"><name pos:start="75:43" pos:end="75:48">rawimg</name></expr></argument>, <argument pos:start="75:51" pos:end="75:59"><expr pos:start="75:51" pos:end="75:59"><name pos:start="75:51" pos:end="75:59">timestamp</name></expr></argument>,

                           <argument pos:start="77:28" pos:end="77:49"><expr pos:start="77:28" pos:end="77:49"><name pos:start="77:28" pos:end="77:49"><name pos:start="77:28" pos:end="77:32">avctx</name><operator pos:start="77:33" pos:end="77:34">-&gt;</operator><name pos:start="77:35" pos:end="77:49">ticks_per_frame</name></name></expr></argument>, <argument pos:start="77:52" pos:end="77:56"><expr pos:start="77:52" pos:end="77:56"><name pos:start="77:52" pos:end="77:56">flags</name></expr></argument>, <argument pos:start="77:59" pos:end="77:71"><expr pos:start="77:59" pos:end="77:71"><name pos:start="77:59" pos:end="77:71"><name pos:start="77:59" pos:end="77:61">ctx</name><operator pos:start="77:62" pos:end="77:63">-&gt;</operator><name pos:start="77:64" pos:end="77:71">deadline</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if <condition pos:start="79:8" pos:end="79:28">(<expr pos:start="79:9" pos:end="79:27"><name pos:start="79:9" pos:end="79:11">res</name> <operator pos:start="79:13" pos:end="79:14">!=</operator> <name pos:start="79:16" pos:end="79:27">VPX_CODEC_OK</name></expr>)</condition> <block pos:start="79:30" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:35">

        <expr_stmt pos:start="81:9" pos:end="81:57"><expr pos:start="81:9" pos:end="81:56"><call pos:start="81:9" pos:end="81:56"><name pos:start="81:9" pos:end="81:25">log_encoder_error</name><argument_list pos:start="81:26" pos:end="81:56">(<argument pos:start="81:27" pos:end="81:31"><expr pos:start="81:27" pos:end="81:31"><name pos:start="81:27" pos:end="81:31">avctx</name></expr></argument>, <argument pos:start="81:34" pos:end="81:55"><expr pos:start="81:34" pos:end="81:55"><literal type="string" pos:start="81:34" pos:end="81:55">"Error encoding frame"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="83:9" pos:end="83:35">return <expr pos:start="83:16" pos:end="83:34"><name pos:start="83:16" pos:end="83:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="89:5" pos:end="103:5"><if pos:start="89:5" pos:end="103:5">if <condition pos:start="89:8" pos:end="89:22">(<expr pos:start="89:9" pos:end="89:21"><name pos:start="89:9" pos:end="89:21"><name pos:start="89:9" pos:end="89:11">ctx</name><operator pos:start="89:12" pos:end="89:13">-&gt;</operator><name pos:start="89:14" pos:end="89:21">is_alpha</name></name></expr>)</condition> <block pos:start="89:24" pos:end="103:5">{<block_content pos:start="91:9" pos:end="101:9">

        <expr_stmt pos:start="91:9" pos:end="93:77"><expr pos:start="91:9" pos:end="93:76"><name pos:start="91:9" pos:end="91:11">res</name> <operator pos:start="91:13" pos:end="91:13">=</operator> <call pos:start="91:15" pos:end="93:76"><name pos:start="91:15" pos:end="91:30">vpx_codec_encode</name><argument_list pos:start="91:31" pos:end="93:76">(<argument pos:start="91:32" pos:end="91:50"><expr pos:start="91:32" pos:end="91:50"><operator pos:start="91:32" pos:end="91:32">&amp;</operator><name pos:start="91:33" pos:end="91:50"><name pos:start="91:33" pos:end="91:35">ctx</name><operator pos:start="91:36" pos:end="91:37">-&gt;</operator><name pos:start="91:38" pos:end="91:50">encoder_alpha</name></name></expr></argument>, <argument pos:start="91:53" pos:end="91:64"><expr pos:start="91:53" pos:end="91:64"><name pos:start="91:53" pos:end="91:64">rawimg_alpha</name></expr></argument>, <argument pos:start="91:67" pos:end="91:75"><expr pos:start="91:67" pos:end="91:75"><name pos:start="91:67" pos:end="91:75">timestamp</name></expr></argument>,

                               <argument pos:start="93:32" pos:end="93:53"><expr pos:start="93:32" pos:end="93:53"><name pos:start="93:32" pos:end="93:53"><name pos:start="93:32" pos:end="93:36">avctx</name><operator pos:start="93:37" pos:end="93:38">-&gt;</operator><name pos:start="93:39" pos:end="93:53">ticks_per_frame</name></name></expr></argument>, <argument pos:start="93:56" pos:end="93:60"><expr pos:start="93:56" pos:end="93:60"><name pos:start="93:56" pos:end="93:60">flags</name></expr></argument>, <argument pos:start="93:63" pos:end="93:75"><expr pos:start="93:63" pos:end="93:75"><name pos:start="93:63" pos:end="93:75"><name pos:start="93:63" pos:end="93:65">ctx</name><operator pos:start="93:66" pos:end="93:67">-&gt;</operator><name pos:start="93:68" pos:end="93:75">deadline</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="95:9" pos:end="101:9"><if pos:start="95:9" pos:end="101:9">if <condition pos:start="95:12" pos:end="95:32">(<expr pos:start="95:13" pos:end="95:31"><name pos:start="95:13" pos:end="95:15">res</name> <operator pos:start="95:17" pos:end="95:18">!=</operator> <name pos:start="95:20" pos:end="95:31">VPX_CODEC_OK</name></expr>)</condition> <block pos:start="95:34" pos:end="101:9">{<block_content pos:start="97:13" pos:end="99:39">

            <expr_stmt pos:start="97:13" pos:end="97:67"><expr pos:start="97:13" pos:end="97:66"><call pos:start="97:13" pos:end="97:66"><name pos:start="97:13" pos:end="97:29">log_encoder_error</name><argument_list pos:start="97:30" pos:end="97:66">(<argument pos:start="97:31" pos:end="97:35"><expr pos:start="97:31" pos:end="97:35"><name pos:start="97:31" pos:end="97:35">avctx</name></expr></argument>, <argument pos:start="97:38" pos:end="97:65"><expr pos:start="97:38" pos:end="97:65"><literal type="string" pos:start="97:38" pos:end="97:65">"Error encoding alpha frame"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="99:13" pos:end="99:39">return <expr pos:start="99:20" pos:end="99:38"><name pos:start="99:20" pos:end="99:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="107:5" pos:end="107:62"><expr pos:start="107:5" pos:end="107:61"><name pos:start="107:5" pos:end="107:14">coded_size</name> <operator pos:start="107:16" pos:end="107:16">=</operator> <call pos:start="107:18" pos:end="107:61"><name pos:start="107:18" pos:end="107:29">queue_frames</name><argument_list pos:start="107:30" pos:end="107:61">(<argument pos:start="107:31" pos:end="107:35"><expr pos:start="107:31" pos:end="107:35"><name pos:start="107:31" pos:end="107:35">avctx</name></expr></argument>, <argument pos:start="107:38" pos:end="107:40"><expr pos:start="107:38" pos:end="107:40"><name pos:start="107:38" pos:end="107:40">pkt</name></expr></argument>, <argument pos:start="107:43" pos:end="107:60"><expr pos:start="107:43" pos:end="107:60"><name pos:start="107:43" pos:end="107:60"><name pos:start="107:43" pos:end="107:47">avctx</name><operator pos:start="107:48" pos:end="107:49">-&gt;</operator><name pos:start="107:50" pos:end="107:60">coded_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="111:5" pos:end="133:5"><if pos:start="111:5" pos:end="133:5">if <condition pos:start="111:8" pos:end="111:50">(<expr pos:start="111:9" pos:end="111:49"><operator pos:start="111:9" pos:end="111:9">!</operator><name pos:start="111:10" pos:end="111:14">frame</name> <operator pos:start="111:16" pos:end="111:17">&amp;&amp;</operator> <name pos:start="111:19" pos:end="111:30"><name pos:start="111:19" pos:end="111:23">avctx</name><operator pos:start="111:24" pos:end="111:25">-&gt;</operator><name pos:start="111:26" pos:end="111:30">flags</name></name> <operator pos:start="111:32" pos:end="111:32">&amp;</operator> <name pos:start="111:34" pos:end="111:49">CODEC_FLAG_PASS1</name></expr>)</condition> <block pos:start="111:52" pos:end="133:5">{<block_content pos:start="113:9" pos:end="131:48">

        <decl_stmt pos:start="113:9" pos:end="113:70"><decl pos:start="113:9" pos:end="113:69"><type pos:start="113:9" pos:end="113:20"><name pos:start="113:9" pos:end="113:16">unsigned</name> <name pos:start="113:18" pos:end="113:20">int</name></type> <name pos:start="113:22" pos:end="113:29">b64_size</name> <init pos:start="113:31" pos:end="113:69">= <expr pos:start="113:33" pos:end="113:69"><call pos:start="113:33" pos:end="113:69"><name pos:start="113:33" pos:end="113:46">AV_BASE64_SIZE</name><argument_list pos:start="113:47" pos:end="113:69">(<argument pos:start="113:48" pos:end="113:68"><expr pos:start="113:48" pos:end="113:68"><name pos:start="113:48" pos:end="113:68"><name pos:start="113:48" pos:end="113:50">ctx</name><operator pos:start="113:51" pos:end="113:52">-&gt;</operator><name pos:start="113:53" pos:end="113:65">twopass_stats</name><operator pos:start="113:66" pos:end="113:66">.</operator><name pos:start="113:67" pos:end="113:68">sz</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="117:9" pos:end="117:47"><expr pos:start="117:9" pos:end="117:46"><name pos:start="117:9" pos:end="117:24"><name pos:start="117:9" pos:end="117:13">avctx</name><operator pos:start="117:14" pos:end="117:15">-&gt;</operator><name pos:start="117:16" pos:end="117:24">stats_out</name></name> <operator pos:start="117:26" pos:end="117:26">=</operator> <call pos:start="117:28" pos:end="117:46"><name pos:start="117:28" pos:end="117:36">av_malloc</name><argument_list pos:start="117:37" pos:end="117:46">(<argument pos:start="117:38" pos:end="117:45"><expr pos:start="117:38" pos:end="117:45"><name pos:start="117:38" pos:end="117:45">b64_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="119:9" pos:end="127:9"><if pos:start="119:9" pos:end="127:9">if <condition pos:start="119:12" pos:end="119:30">(<expr pos:start="119:13" pos:end="119:29"><operator pos:start="119:13" pos:end="119:13">!</operator><name pos:start="119:14" pos:end="119:29"><name pos:start="119:14" pos:end="119:18">avctx</name><operator pos:start="119:19" pos:end="119:20">-&gt;</operator><name pos:start="119:21" pos:end="119:29">stats_out</name></name></expr>)</condition> <block pos:start="119:32" pos:end="127:9">{<block_content pos:start="121:13" pos:end="125:35">

            <expr_stmt pos:start="121:13" pos:end="123:29"><expr pos:start="121:13" pos:end="123:28"><call pos:start="121:13" pos:end="123:28"><name pos:start="121:13" pos:end="121:18">av_log</name><argument_list pos:start="121:19" pos:end="123:28">(<argument pos:start="121:20" pos:end="121:24"><expr pos:start="121:20" pos:end="121:24"><name pos:start="121:20" pos:end="121:24">avctx</name></expr></argument>, <argument pos:start="121:27" pos:end="121:38"><expr pos:start="121:27" pos:end="121:38"><name pos:start="121:27" pos:end="121:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="121:41" pos:end="121:79"><expr pos:start="121:41" pos:end="121:79"><literal type="string" pos:start="121:41" pos:end="121:79">"Stat buffer alloc (%d bytes) failed\n"</literal></expr></argument>,

                   <argument pos:start="123:20" pos:end="123:27"><expr pos:start="123:20" pos:end="123:27"><name pos:start="123:20" pos:end="123:27">b64_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="125:13" pos:end="125:35">return <expr pos:start="125:20" pos:end="125:34"><call pos:start="125:20" pos:end="125:34"><name pos:start="125:20" pos:end="125:26">AVERROR</name><argument_list pos:start="125:27" pos:end="125:34">(<argument pos:start="125:28" pos:end="125:33"><expr pos:start="125:28" pos:end="125:33"><name pos:start="125:28" pos:end="125:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="129:9" pos:end="131:48"><expr pos:start="129:9" pos:end="131:47"><call pos:start="129:9" pos:end="131:47"><name pos:start="129:9" pos:end="129:24">av_base64_encode</name><argument_list pos:start="129:25" pos:end="131:47">(<argument pos:start="129:26" pos:end="129:41"><expr pos:start="129:26" pos:end="129:41"><name pos:start="129:26" pos:end="129:41"><name pos:start="129:26" pos:end="129:30">avctx</name><operator pos:start="129:31" pos:end="129:32">-&gt;</operator><name pos:start="129:33" pos:end="129:41">stats_out</name></name></expr></argument>, <argument pos:start="129:44" pos:end="129:51"><expr pos:start="129:44" pos:end="129:51"><name pos:start="129:44" pos:end="129:51">b64_size</name></expr></argument>, <argument pos:start="129:54" pos:end="129:75"><expr pos:start="129:54" pos:end="129:75"><name pos:start="129:54" pos:end="129:75"><name pos:start="129:54" pos:end="129:56">ctx</name><operator pos:start="129:57" pos:end="129:58">-&gt;</operator><name pos:start="129:59" pos:end="129:71">twopass_stats</name><operator pos:start="129:72" pos:end="129:72">.</operator><name pos:start="129:73" pos:end="129:75">buf</name></name></expr></argument>,

                         <argument pos:start="131:26" pos:end="131:46"><expr pos:start="131:26" pos:end="131:46"><name pos:start="131:26" pos:end="131:46"><name pos:start="131:26" pos:end="131:28">ctx</name><operator pos:start="131:29" pos:end="131:30">-&gt;</operator><name pos:start="131:31" pos:end="131:43">twopass_stats</name><operator pos:start="131:44" pos:end="131:44">.</operator><name pos:start="131:45" pos:end="131:46">sz</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="137:5" pos:end="143:5"><if pos:start="137:5" pos:end="143:5">if <condition pos:start="137:8" pos:end="137:21">(<expr pos:start="137:9" pos:end="137:20"><name pos:start="137:9" pos:end="137:20">rawimg_alpha</name></expr>)</condition> <block pos:start="137:23" pos:end="143:5">{<block_content pos:start="139:9" pos:end="141:53">

        <expr_stmt pos:start="139:9" pos:end="139:53"><expr pos:start="139:9" pos:end="139:52"><call pos:start="139:9" pos:end="139:52"><name pos:start="139:9" pos:end="139:16">av_freep</name><argument_list pos:start="139:17" pos:end="139:52">(<argument pos:start="139:18" pos:end="139:51"><expr pos:start="139:18" pos:end="139:51"><operator pos:start="139:18" pos:end="139:18">&amp;</operator><name pos:start="139:19" pos:end="139:51"><name pos:start="139:19" pos:end="139:30">rawimg_alpha</name><operator pos:start="139:31" pos:end="139:32">-&gt;</operator><name pos:start="139:33" pos:end="139:38">planes</name><index pos:start="139:39" pos:end="139:51">[<expr pos:start="139:40" pos:end="139:50"><name pos:start="139:40" pos:end="139:50">VPX_PLANE_U</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:53"><expr pos:start="141:9" pos:end="141:52"><call pos:start="141:9" pos:end="141:52"><name pos:start="141:9" pos:end="141:16">av_freep</name><argument_list pos:start="141:17" pos:end="141:52">(<argument pos:start="141:18" pos:end="141:51"><expr pos:start="141:18" pos:end="141:51"><operator pos:start="141:18" pos:end="141:18">&amp;</operator><name pos:start="141:19" pos:end="141:51"><name pos:start="141:19" pos:end="141:30">rawimg_alpha</name><operator pos:start="141:31" pos:end="141:32">-&gt;</operator><name pos:start="141:33" pos:end="141:38">planes</name><index pos:start="141:39" pos:end="141:51">[<expr pos:start="141:40" pos:end="141:50"><name pos:start="141:40" pos:end="141:50">VPX_PLANE_V</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="147:5" pos:end="147:31"><expr pos:start="147:5" pos:end="147:30"><operator pos:start="147:5" pos:end="147:5">*</operator><name pos:start="147:6" pos:end="147:15">got_packet</name> <operator pos:start="147:17" pos:end="147:17">=</operator> <operator pos:start="147:19" pos:end="147:19">!</operator><operator pos:start="147:20" pos:end="147:20">!</operator><name pos:start="147:21" pos:end="147:30">coded_size</name></expr>;</expr_stmt>

    <return pos:start="149:5" pos:end="149:13">return <expr pos:start="149:12" pos:end="149:12"><literal type="number" pos:start="149:12" pos:end="149:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
