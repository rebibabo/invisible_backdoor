<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2499.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">mm_rearm_timer</name><parameter_list pos:start="1:27" pos:end="1:69">(<parameter pos:start="1:28" pos:end="1:53"><decl pos:start="1:28" pos:end="1:53"><type pos:start="1:28" pos:end="1:53"><name pos:start="1:28" pos:end="1:50"><name pos:start="1:28" pos:end="1:33">struct</name> <name pos:start="1:35" pos:end="1:50">qemu_alarm_timer</name></name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:53">t</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:68"><decl pos:start="1:56" pos:end="1:68"><type pos:start="1:56" pos:end="1:68"><name pos:start="1:56" pos:end="1:62">int64_t</name></type> <name pos:start="1:64" pos:end="1:68">delta</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:5">

    <decl_stmt pos:start="5:5" pos:end="5:54"><decl pos:start="5:5" pos:end="5:53"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:24">nearest_delta_ms</name> <init pos:start="5:26" pos:end="5:53">= <expr pos:start="5:28" pos:end="5:53"><operator pos:start="5:28" pos:end="5:28">(</operator><name pos:start="5:29" pos:end="5:33">delta</name> <operator pos:start="5:35" pos:end="5:35">+</operator> <literal type="number" pos:start="5:37" pos:end="5:42">999999</literal><operator pos:start="5:43" pos:end="5:43">)</operator> <operator pos:start="5:45" pos:end="5:45">/</operator> <literal type="number" pos:start="5:47" pos:end="5:53">1000000</literal></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="7:5" pos:end="11:5"><if pos:start="7:5" pos:end="11:5">if <condition pos:start="7:8" pos:end="7:29">(<expr pos:start="7:9" pos:end="7:28"><name pos:start="7:9" pos:end="7:24">nearest_delta_ms</name> <operator pos:start="7:26" pos:end="7:26">&lt;</operator> <literal type="number" pos:start="7:28" pos:end="7:28">1</literal></expr>)</condition> <block pos:start="7:31" pos:end="11:5">{<block_content pos:start="9:9" pos:end="9:29">

        <expr_stmt pos:start="9:9" pos:end="9:29"><expr pos:start="9:9" pos:end="9:28"><name pos:start="9:9" pos:end="9:24">nearest_delta_ms</name> <operator pos:start="9:26" pos:end="9:26">=</operator> <literal type="number" pos:start="9:28" pos:end="9:28">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:28"><expr pos:start="15:5" pos:end="15:27"><call pos:start="15:5" pos:end="15:27"><name pos:start="15:5" pos:end="15:17">timeKillEvent</name><argument_list pos:start="15:18" pos:end="15:27">(<argument pos:start="15:19" pos:end="15:26"><expr pos:start="15:19" pos:end="15:26"><name pos:start="15:19" pos:end="15:26">mm_timer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="25:67"><expr pos:start="17:5" pos:end="25:66"><name pos:start="17:5" pos:end="17:12">mm_timer</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <call pos:start="17:16" pos:end="25:66"><name pos:start="17:16" pos:end="17:27">timeSetEvent</name><argument_list pos:start="17:28" pos:end="25:66">(<argument pos:start="17:29" pos:end="17:44"><expr pos:start="17:29" pos:end="17:44"><name pos:start="17:29" pos:end="17:44">nearest_delta_ms</name></expr></argument>,

                            <argument pos:start="19:29" pos:end="19:37"><expr pos:start="19:29" pos:end="19:37"><name pos:start="19:29" pos:end="19:37">mm_period</name></expr></argument>,

                            <argument pos:start="21:29" pos:end="21:44"><expr pos:start="21:29" pos:end="21:44"><name pos:start="21:29" pos:end="21:44">mm_alarm_handler</name></expr></argument>,

                            <argument pos:start="23:29" pos:end="23:40"><expr pos:start="23:29" pos:end="23:40"><operator pos:start="23:29" pos:end="23:29">(</operator><name pos:start="23:30" pos:end="23:38">DWORD_PTR</name><operator pos:start="23:39" pos:end="23:39">)</operator><name pos:start="23:40" pos:end="23:40">t</name></expr></argument>,

                            <argument pos:start="25:29" pos:end="25:65"><expr pos:start="25:29" pos:end="25:65"><name pos:start="25:29" pos:end="25:40">TIME_ONESHOT</name> <operator pos:start="25:42" pos:end="25:42">|</operator> <name pos:start="25:44" pos:end="25:65">TIME_CALLBACK_FUNCTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="41:5"><if pos:start="29:5" pos:end="41:5">if <condition pos:start="29:8" pos:end="29:18">(<expr pos:start="29:9" pos:end="29:17"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:17">mm_timer</name></expr>)</condition> <block pos:start="29:20" pos:end="41:5">{<block_content pos:start="31:9" pos:end="39:16">

        <expr_stmt pos:start="31:9" pos:end="33:32"><expr pos:start="31:9" pos:end="33:31"><call pos:start="31:9" pos:end="33:31"><name pos:start="31:9" pos:end="31:15">fprintf</name><argument_list pos:start="31:16" pos:end="33:31">(<argument pos:start="31:17" pos:end="31:22"><expr pos:start="31:17" pos:end="31:22"><name pos:start="31:17" pos:end="31:22">stderr</name></expr></argument>, <argument pos:start="31:25" pos:end="31:66"><expr pos:start="31:25" pos:end="31:66"><literal type="string" pos:start="31:25" pos:end="31:66">"Failed to re-arm win32 alarm timer %ld\n"</literal></expr></argument>,

                <argument pos:start="33:17" pos:end="33:30"><expr pos:start="33:17" pos:end="33:30"><call pos:start="33:17" pos:end="33:30"><name pos:start="33:17" pos:end="33:28">GetLastError</name><argument_list pos:start="33:29" pos:end="33:30">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="37:9" pos:end="37:33"><expr pos:start="37:9" pos:end="37:32"><call pos:start="37:9" pos:end="37:32"><name pos:start="37:9" pos:end="37:21">timeEndPeriod</name><argument_list pos:start="37:22" pos:end="37:32">(<argument pos:start="37:23" pos:end="37:31"><expr pos:start="37:23" pos:end="37:31"><name pos:start="37:23" pos:end="37:31">mm_period</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:16"><expr pos:start="39:9" pos:end="39:15"><call pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:12">exit</name><argument_list pos:start="39:13" pos:end="39:15">(<argument pos:start="39:14" pos:end="39:14"><expr pos:start="39:14" pos:end="39:14"><literal type="number" pos:start="39:14" pos:end="39:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
