<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5938.c" pos:tabs="8"><function pos:start="1:1" pos:end="239:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">ioreq_map</name><parameter_list pos:start="1:21" pos:end="1:41">(<parameter pos:start="1:22" pos:end="1:40"><decl pos:start="1:22" pos:end="1:40"><type pos:start="1:22" pos:end="1:40"><name pos:start="1:22" pos:end="1:33"><name pos:start="1:22" pos:end="1:27">struct</name> <name pos:start="1:29" pos:end="1:33">ioreq</name></name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:40">ioreq</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="239:1">{<block_content pos:start="5:5" pos:end="237:13">

    <decl_stmt pos:start="5:5" pos:end="5:52"><decl pos:start="5:5" pos:end="5:51"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:13">XenGnttab</name></type> <name pos:start="5:15" pos:end="5:17">gnt</name> <init pos:start="5:19" pos:end="5:51">= <expr pos:start="5:21" pos:end="5:51"><name pos:start="5:21" pos:end="5:51"><name pos:start="5:21" pos:end="5:25">ioreq</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:33">blkdev</name><operator pos:start="5:34" pos:end="5:35">-&gt;</operator><name pos:start="5:36" pos:end="5:41">xendev</name><operator pos:start="5:42" pos:end="5:42">.</operator><name pos:start="5:43" pos:end="5:51">gnttabdev</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:52"><decl pos:start="7:5" pos:end="7:51"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:51"><name pos:start="7:14" pos:end="7:19">domids</name><index pos:start="7:20" pos:end="7:51">[<expr pos:start="7:21" pos:end="7:50"><name pos:start="7:21" pos:end="7:50">BLKIF_MAX_SEGMENTS_PER_REQUEST</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:50"><decl pos:start="9:5" pos:end="9:49"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:49"><name pos:start="9:14" pos:end="9:17">refs</name><index pos:start="9:18" pos:end="9:49">[<expr pos:start="9:19" pos:end="9:48"><name pos:start="9:19" pos:end="9:48">BLKIF_MAX_SEGMENTS_PER_REQUEST</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:47"><decl pos:start="11:5" pos:end="11:46"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">void</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:46"><name pos:start="11:11" pos:end="11:14">page</name><index pos:start="11:15" pos:end="11:46">[<expr pos:start="11:16" pos:end="11:45"><name pos:start="11:16" pos:end="11:45">BLKIF_MAX_SEGMENTS_PER_REQUEST</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:12"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:12">j</name></decl>, <decl pos:start="13:15" pos:end="13:26"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:15" pos:end="13:22">new_maps</name> <init pos:start="13:24" pos:end="13:26">= <expr pos:start="13:26" pos:end="13:26"><literal type="number" pos:start="13:26" pos:end="13:26">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:27"><decl pos:start="15:5" pos:end="15:26"><type pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:19">PersistentGrant</name> <modifier pos:start="15:21" pos:end="15:21">*</modifier></type><name pos:start="15:22" pos:end="15:26">grant</name></decl>;</decl_stmt>

    <comment type="block" pos:start="17:5" pos:end="29:7">/* domids and refs variables will contain the information necessary

     * to map the grants that are needed to fulfill this request.

     *

     * After mapping the needed grants, the page array will contain the

     * memory address of each granted page in the order specified in ioreq

     * (disregarding if it's a persistent grant or not).

     */</comment>



    <if_stmt pos:start="33:5" pos:end="37:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:49">(<expr pos:start="33:9" pos:end="33:48"><name pos:start="33:9" pos:end="33:21"><name pos:start="33:9" pos:end="33:13">ioreq</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:16">v</name><operator pos:start="33:17" pos:end="33:17">.</operator><name pos:start="33:18" pos:end="33:21">niov</name></name> <operator pos:start="33:23" pos:end="33:24">==</operator> <literal type="number" pos:start="33:26" pos:end="33:26">0</literal> <operator pos:start="33:28" pos:end="33:29">||</operator> <name pos:start="33:31" pos:end="33:43"><name pos:start="33:31" pos:end="33:35">ioreq</name><operator pos:start="33:36" pos:end="33:37">-&gt;</operator><name pos:start="33:38" pos:end="33:43">mapped</name></name> <operator pos:start="33:45" pos:end="33:46">==</operator> <literal type="number" pos:start="33:48" pos:end="33:48">1</literal></expr>)</condition> <block pos:start="33:51" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:17">

        <return pos:start="35:9" pos:end="35:17">return <expr pos:start="35:16" pos:end="35:16"><literal type="number" pos:start="35:16" pos:end="35:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="39:5" pos:end="99:5"><if pos:start="39:5" pos:end="87:5">if <condition pos:start="39:8" pos:end="39:42">(<expr pos:start="39:9" pos:end="39:41"><name pos:start="39:9" pos:end="39:41"><name pos:start="39:9" pos:end="39:13">ioreq</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:21">blkdev</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:41">feature_persistent</name></name></expr>)</condition> <block pos:start="39:44" pos:end="87:5">{<block_content pos:start="41:9" pos:end="85:45">

        <for pos:start="41:9" pos:end="77:9">for <control pos:start="41:13" pos:end="41:43">(<init pos:start="41:14" pos:end="41:19"><expr pos:start="41:14" pos:end="41:18"><name pos:start="41:14" pos:end="41:14">i</name> <operator pos:start="41:16" pos:end="41:16">=</operator> <literal type="number" pos:start="41:18" pos:end="41:18">0</literal></expr>;</init> <condition pos:start="41:21" pos:end="41:38"><expr pos:start="41:21" pos:end="41:37"><name pos:start="41:21" pos:end="41:21">i</name> <operator pos:start="41:23" pos:end="41:23">&lt;</operator> <name pos:start="41:25" pos:end="41:37"><name pos:start="41:25" pos:end="41:29">ioreq</name><operator pos:start="41:30" pos:end="41:31">-&gt;</operator><name pos:start="41:32" pos:end="41:32">v</name><operator pos:start="41:33" pos:end="41:33">.</operator><name pos:start="41:34" pos:end="41:37">niov</name></name></expr>;</condition> <incr pos:start="41:40" pos:end="41:42"><expr pos:start="41:40" pos:end="41:42"><name pos:start="41:40" pos:end="41:40">i</name><operator pos:start="41:41" pos:end="41:42">++</operator></expr></incr>)</control> <block pos:start="41:45" pos:end="77:9">{<block_content pos:start="43:13" pos:end="75:13">

            <expr_stmt pos:start="43:13" pos:end="45:70"><expr pos:start="43:13" pos:end="45:69"><name pos:start="43:13" pos:end="43:17">grant</name> <operator pos:start="43:19" pos:end="43:19">=</operator> <call pos:start="43:21" pos:end="45:69"><name pos:start="43:21" pos:end="43:33">g_tree_lookup</name><argument_list pos:start="43:34" pos:end="45:69">(<argument pos:start="43:35" pos:end="43:64"><expr pos:start="43:35" pos:end="43:64"><name pos:start="43:35" pos:end="43:64"><name pos:start="43:35" pos:end="43:39">ioreq</name><operator pos:start="43:40" pos:end="43:41">-&gt;</operator><name pos:start="43:42" pos:end="43:47">blkdev</name><operator pos:start="43:48" pos:end="43:49">-&gt;</operator><name pos:start="43:50" pos:end="43:64">persistent_gnts</name></name></expr></argument>,

                                    <argument pos:start="45:37" pos:end="45:68"><expr pos:start="45:37" pos:end="45:68"><call pos:start="45:37" pos:end="45:68"><name pos:start="45:37" pos:end="45:52">GUINT_TO_POINTER</name><argument_list pos:start="45:53" pos:end="45:68">(<argument pos:start="45:54" pos:end="45:67"><expr pos:start="45:54" pos:end="45:67"><name pos:start="45:54" pos:end="45:67"><name pos:start="45:54" pos:end="45:58">ioreq</name><operator pos:start="45:59" pos:end="45:60">-&gt;</operator><name pos:start="45:61" pos:end="45:64">refs</name><index pos:start="45:65" pos:end="45:67">[<expr pos:start="45:66" pos:end="45:66"><name pos:start="45:66" pos:end="45:66">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="49:13" pos:end="75:13"><if pos:start="49:13" pos:end="59:13">if <condition pos:start="49:16" pos:end="49:30">(<expr pos:start="49:17" pos:end="49:29"><name pos:start="49:17" pos:end="49:21">grant</name> <operator pos:start="49:23" pos:end="49:24">!=</operator> <name pos:start="49:26" pos:end="49:29">NULL</name></expr>)</condition> <block pos:start="49:32" pos:end="59:13">{<block_content pos:start="51:17" pos:end="57:46">

                <expr_stmt pos:start="51:17" pos:end="51:38"><expr pos:start="51:17" pos:end="51:37"><name pos:start="51:17" pos:end="51:23"><name pos:start="51:17" pos:end="51:20">page</name><index pos:start="51:21" pos:end="51:23">[<expr pos:start="51:22" pos:end="51:22"><name pos:start="51:22" pos:end="51:22">i</name></expr>]</index></name> <operator pos:start="51:25" pos:end="51:25">=</operator> <name pos:start="51:27" pos:end="51:37"><name pos:start="51:27" pos:end="51:31">grant</name><operator pos:start="51:32" pos:end="51:33">-&gt;</operator><name pos:start="51:34" pos:end="51:37">page</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="53:17" pos:end="57:46"><expr pos:start="53:17" pos:end="57:45"><call pos:start="53:17" pos:end="57:45"><name pos:start="53:17" pos:end="53:29">xen_be_printf</name><argument_list pos:start="53:30" pos:end="57:45">(<argument pos:start="53:31" pos:end="53:52"><expr pos:start="53:31" pos:end="53:52"><operator pos:start="53:31" pos:end="53:31">&amp;</operator><name pos:start="53:32" pos:end="53:52"><name pos:start="53:32" pos:end="53:36">ioreq</name><operator pos:start="53:37" pos:end="53:38">-&gt;</operator><name pos:start="53:39" pos:end="53:44">blkdev</name><operator pos:start="53:45" pos:end="53:46">-&gt;</operator><name pos:start="53:47" pos:end="53:52">xendev</name></name></expr></argument>, <argument pos:start="53:55" pos:end="53:55"><expr pos:start="53:55" pos:end="53:55"><literal type="number" pos:start="53:55" pos:end="53:55">3</literal></expr></argument>,

                              <argument pos:start="55:31" pos:end="55:68"><expr pos:start="55:31" pos:end="55:68"><literal type="string" pos:start="55:31" pos:end="55:56">"using persistent-grant %"</literal> <name pos:start="55:58" pos:end="55:63">PRIu32</name> <literal type="string" pos:start="55:65" pos:end="55:68">"\n"</literal></expr></argument>,

                              <argument pos:start="57:31" pos:end="57:44"><expr pos:start="57:31" pos:end="57:44"><name pos:start="57:31" pos:end="57:44"><name pos:start="57:31" pos:end="57:35">ioreq</name><operator pos:start="57:36" pos:end="57:37">-&gt;</operator><name pos:start="57:38" pos:end="57:41">refs</name><index pos:start="57:42" pos:end="57:44">[<expr pos:start="57:43" pos:end="57:43"><name pos:start="57:43" pos:end="57:43">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="59:15" pos:end="75:13">else <block pos:start="59:20" pos:end="75:13">{<block_content pos:start="67:21" pos:end="73:31">

                    <comment type="block" pos:start="61:21" pos:end="65:23">/* Add the grant to the list of grants that

                     * should be mapped

                     */</comment>

                    <expr_stmt pos:start="67:21" pos:end="67:56"><expr pos:start="67:21" pos:end="67:55"><name pos:start="67:21" pos:end="67:36"><name pos:start="67:21" pos:end="67:26">domids</name><index pos:start="67:27" pos:end="67:36">[<expr pos:start="67:28" pos:end="67:35"><name pos:start="67:28" pos:end="67:35">new_maps</name></expr>]</index></name> <operator pos:start="67:38" pos:end="67:38">=</operator> <name pos:start="67:40" pos:end="67:55"><name pos:start="67:40" pos:end="67:44">ioreq</name><operator pos:start="67:45" pos:end="67:46">-&gt;</operator><name pos:start="67:47" pos:end="67:52">domids</name><index pos:start="67:53" pos:end="67:55">[<expr pos:start="67:54" pos:end="67:54"><name pos:start="67:54" pos:end="67:54">i</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="69:21" pos:end="69:52"><expr pos:start="69:21" pos:end="69:51"><name pos:start="69:21" pos:end="69:34"><name pos:start="69:21" pos:end="69:24">refs</name><index pos:start="69:25" pos:end="69:34">[<expr pos:start="69:26" pos:end="69:33"><name pos:start="69:26" pos:end="69:33">new_maps</name></expr>]</index></name> <operator pos:start="69:36" pos:end="69:36">=</operator> <name pos:start="69:38" pos:end="69:51"><name pos:start="69:38" pos:end="69:42">ioreq</name><operator pos:start="69:43" pos:end="69:44">-&gt;</operator><name pos:start="69:45" pos:end="69:48">refs</name><index pos:start="69:49" pos:end="69:51">[<expr pos:start="69:50" pos:end="69:50"><name pos:start="69:50" pos:end="69:50">i</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="71:21" pos:end="71:35"><expr pos:start="71:21" pos:end="71:34"><name pos:start="71:21" pos:end="71:27"><name pos:start="71:21" pos:end="71:24">page</name><index pos:start="71:25" pos:end="71:27">[<expr pos:start="71:26" pos:end="71:26"><name pos:start="71:26" pos:end="71:26">i</name></expr>]</index></name> <operator pos:start="71:29" pos:end="71:29">=</operator> <name pos:start="71:31" pos:end="71:34">NULL</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="73:21" pos:end="73:31"><expr pos:start="73:21" pos:end="73:30"><name pos:start="73:21" pos:end="73:28">new_maps</name><operator pos:start="73:29" pos:end="73:30">++</operator></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>

        <comment type="block" pos:start="79:9" pos:end="83:11">/* Set the protection to RW, since grants may be reused later

         * with a different protection than the one needed for this request

         */</comment>

        <expr_stmt pos:start="85:9" pos:end="85:45"><expr pos:start="85:9" pos:end="85:44"><name pos:start="85:9" pos:end="85:19"><name pos:start="85:9" pos:end="85:13">ioreq</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:19">prot</name></name> <operator pos:start="85:21" pos:end="85:21">=</operator> <name pos:start="85:23" pos:end="85:32">PROT_WRITE</name> <operator pos:start="85:34" pos:end="85:34">|</operator> <name pos:start="85:36" pos:end="85:44">PROT_READ</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="87:7" pos:end="99:5">else <block pos:start="87:12" pos:end="99:5">{<block_content pos:start="91:9" pos:end="97:33">

        <comment type="block" pos:start="89:9" pos:end="89:56">/* All grants in the request should be mapped */</comment>

        <expr_stmt pos:start="91:9" pos:end="91:48"><expr pos:start="91:9" pos:end="91:47"><call pos:start="91:9" pos:end="91:47"><name pos:start="91:9" pos:end="91:14">memcpy</name><argument_list pos:start="91:15" pos:end="91:47">(<argument pos:start="91:16" pos:end="91:19"><expr pos:start="91:16" pos:end="91:19"><name pos:start="91:16" pos:end="91:19">refs</name></expr></argument>, <argument pos:start="91:22" pos:end="91:32"><expr pos:start="91:22" pos:end="91:32"><name pos:start="91:22" pos:end="91:32"><name pos:start="91:22" pos:end="91:26">ioreq</name><operator pos:start="91:27" pos:end="91:28">-&gt;</operator><name pos:start="91:29" pos:end="91:32">refs</name></name></expr></argument>, <argument pos:start="91:35" pos:end="91:46"><expr pos:start="91:35" pos:end="91:46"><sizeof pos:start="91:35" pos:end="91:46">sizeof<argument_list pos:start="91:41" pos:end="91:46">(<argument pos:start="91:42" pos:end="91:45"><expr pos:start="91:42" pos:end="91:45"><name pos:start="91:42" pos:end="91:45">refs</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:54"><expr pos:start="93:9" pos:end="93:53"><call pos:start="93:9" pos:end="93:53"><name pos:start="93:9" pos:end="93:14">memcpy</name><argument_list pos:start="93:15" pos:end="93:53">(<argument pos:start="93:16" pos:end="93:21"><expr pos:start="93:16" pos:end="93:21"><name pos:start="93:16" pos:end="93:21">domids</name></expr></argument>, <argument pos:start="93:24" pos:end="93:36"><expr pos:start="93:24" pos:end="93:36"><name pos:start="93:24" pos:end="93:36"><name pos:start="93:24" pos:end="93:28">ioreq</name><operator pos:start="93:29" pos:end="93:30">-&gt;</operator><name pos:start="93:31" pos:end="93:36">domids</name></name></expr></argument>, <argument pos:start="93:39" pos:end="93:52"><expr pos:start="93:39" pos:end="93:52"><sizeof pos:start="93:39" pos:end="93:52">sizeof<argument_list pos:start="93:45" pos:end="93:52">(<argument pos:start="93:46" pos:end="93:51"><expr pos:start="93:46" pos:end="93:51"><name pos:start="93:46" pos:end="93:51">domids</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:38"><expr pos:start="95:9" pos:end="95:37"><call pos:start="95:9" pos:end="95:37"><name pos:start="95:9" pos:end="95:14">memset</name><argument_list pos:start="95:15" pos:end="95:37">(<argument pos:start="95:16" pos:end="95:19"><expr pos:start="95:16" pos:end="95:19"><name pos:start="95:16" pos:end="95:19">page</name></expr></argument>, <argument pos:start="95:22" pos:end="95:22"><expr pos:start="95:22" pos:end="95:22"><literal type="number" pos:start="95:22" pos:end="95:22">0</literal></expr></argument>, <argument pos:start="95:25" pos:end="95:36"><expr pos:start="95:25" pos:end="95:36"><sizeof pos:start="95:25" pos:end="95:36">sizeof<argument_list pos:start="95:31" pos:end="95:36">(<argument pos:start="95:32" pos:end="95:35"><expr pos:start="95:32" pos:end="95:35"><name pos:start="95:32" pos:end="95:35">page</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:33"><expr pos:start="97:9" pos:end="97:32"><name pos:start="97:9" pos:end="97:16">new_maps</name> <operator pos:start="97:18" pos:end="97:18">=</operator> <name pos:start="97:20" pos:end="97:32"><name pos:start="97:20" pos:end="97:24">ioreq</name><operator pos:start="97:25" pos:end="97:26">-&gt;</operator><name pos:start="97:27" pos:end="97:27">v</name><operator pos:start="97:28" pos:end="97:28">.</operator><name pos:start="97:29" pos:end="97:32">niov</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="103:5" pos:end="171:5"><if pos:start="103:5" pos:end="133:5">if <condition pos:start="103:8" pos:end="103:31">(<expr pos:start="103:9" pos:end="103:30"><name pos:start="103:9" pos:end="103:18">batch_maps</name> <operator pos:start="103:20" pos:end="103:21">&amp;&amp;</operator> <name pos:start="103:23" pos:end="103:30">new_maps</name></expr>)</condition> <block pos:start="103:33" pos:end="133:5">{<block_content pos:start="105:9" pos:end="131:43">

        <expr_stmt pos:start="105:9" pos:end="107:55"><expr pos:start="105:9" pos:end="107:54"><name pos:start="105:9" pos:end="105:20"><name pos:start="105:9" pos:end="105:13">ioreq</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:20">pages</name></name> <operator pos:start="105:22" pos:end="105:22">=</operator> <call pos:start="105:24" pos:end="107:54"><name pos:start="105:24" pos:end="105:47">xc_gnttab_map_grant_refs</name>

            <argument_list pos:start="107:13" pos:end="107:54">(<argument pos:start="107:14" pos:end="107:16"><expr pos:start="107:14" pos:end="107:16"><name pos:start="107:14" pos:end="107:16">gnt</name></expr></argument>, <argument pos:start="107:19" pos:end="107:26"><expr pos:start="107:19" pos:end="107:26"><name pos:start="107:19" pos:end="107:26">new_maps</name></expr></argument>, <argument pos:start="107:29" pos:end="107:34"><expr pos:start="107:29" pos:end="107:34"><name pos:start="107:29" pos:end="107:34">domids</name></expr></argument>, <argument pos:start="107:37" pos:end="107:40"><expr pos:start="107:37" pos:end="107:40"><name pos:start="107:37" pos:end="107:40">refs</name></expr></argument>, <argument pos:start="107:43" pos:end="107:53"><expr pos:start="107:43" pos:end="107:53"><name pos:start="107:43" pos:end="107:53"><name pos:start="107:43" pos:end="107:47">ioreq</name><operator pos:start="107:48" pos:end="107:49">-&gt;</operator><name pos:start="107:50" pos:end="107:53">prot</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="109:9" pos:end="119:9"><if pos:start="109:9" pos:end="119:9">if <condition pos:start="109:12" pos:end="109:33">(<expr pos:start="109:13" pos:end="109:32"><name pos:start="109:13" pos:end="109:24"><name pos:start="109:13" pos:end="109:17">ioreq</name><operator pos:start="109:18" pos:end="109:19">-&gt;</operator><name pos:start="109:20" pos:end="109:24">pages</name></name> <operator pos:start="109:26" pos:end="109:27">==</operator> <name pos:start="109:29" pos:end="109:32">NULL</name></expr>)</condition> <block pos:start="109:35" pos:end="119:9">{<block_content pos:start="111:13" pos:end="117:22">

            <expr_stmt pos:start="111:13" pos:end="115:77"><expr pos:start="111:13" pos:end="115:76"><call pos:start="111:13" pos:end="115:76"><name pos:start="111:13" pos:end="111:25">xen_be_printf</name><argument_list pos:start="111:26" pos:end="115:76">(<argument pos:start="111:27" pos:end="111:48"><expr pos:start="111:27" pos:end="111:48"><operator pos:start="111:27" pos:end="111:27">&amp;</operator><name pos:start="111:28" pos:end="111:48"><name pos:start="111:28" pos:end="111:32">ioreq</name><operator pos:start="111:33" pos:end="111:34">-&gt;</operator><name pos:start="111:35" pos:end="111:40">blkdev</name><operator pos:start="111:41" pos:end="111:42">-&gt;</operator><name pos:start="111:43" pos:end="111:48">xendev</name></name></expr></argument>, <argument pos:start="111:51" pos:end="111:51"><expr pos:start="111:51" pos:end="111:51"><literal type="number" pos:start="111:51" pos:end="111:51">0</literal></expr></argument>,

                          <argument pos:start="113:27" pos:end="113:67"><expr pos:start="113:27" pos:end="113:67"><literal type="string" pos:start="113:27" pos:end="113:67">"can't map %d grant refs (%s, %d maps)\n"</literal></expr></argument>,

                          <argument pos:start="115:27" pos:end="115:34"><expr pos:start="115:27" pos:end="115:34"><name pos:start="115:27" pos:end="115:34">new_maps</name></expr></argument>, <argument pos:start="115:37" pos:end="115:51"><expr pos:start="115:37" pos:end="115:51"><call pos:start="115:37" pos:end="115:51"><name pos:start="115:37" pos:end="115:44">strerror</name><argument_list pos:start="115:45" pos:end="115:51">(<argument pos:start="115:46" pos:end="115:50"><expr pos:start="115:46" pos:end="115:50"><name pos:start="115:46" pos:end="115:50">errno</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="115:54" pos:end="115:75"><expr pos:start="115:54" pos:end="115:75"><name pos:start="115:54" pos:end="115:75"><name pos:start="115:54" pos:end="115:58">ioreq</name><operator pos:start="115:59" pos:end="115:60">-&gt;</operator><name pos:start="115:61" pos:end="115:66">blkdev</name><operator pos:start="115:67" pos:end="115:68">-&gt;</operator><name pos:start="115:69" pos:end="115:75">cnt_map</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="117:13" pos:end="117:22">return <expr pos:start="117:20" pos:end="117:21"><operator pos:start="117:20" pos:end="117:20">-</operator><literal type="number" pos:start="117:21" pos:end="117:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <for pos:start="121:9" pos:end="129:9">for <control pos:start="121:13" pos:end="121:50">(<init pos:start="121:14" pos:end="121:26"><expr pos:start="121:14" pos:end="121:18"><name pos:start="121:14" pos:end="121:14">i</name> <operator pos:start="121:16" pos:end="121:16">=</operator> <literal type="number" pos:start="121:18" pos:end="121:18">0</literal></expr><operator pos:start="121:19" pos:end="121:19">,</operator> <expr pos:start="121:21" pos:end="121:25"><name pos:start="121:21" pos:end="121:21">j</name> <operator pos:start="121:23" pos:end="121:23">=</operator> <literal type="number" pos:start="121:25" pos:end="121:25">0</literal></expr>;</init> <condition pos:start="121:28" pos:end="121:45"><expr pos:start="121:28" pos:end="121:44"><name pos:start="121:28" pos:end="121:28">i</name> <operator pos:start="121:30" pos:end="121:30">&lt;</operator> <name pos:start="121:32" pos:end="121:44"><name pos:start="121:32" pos:end="121:36">ioreq</name><operator pos:start="121:37" pos:end="121:38">-&gt;</operator><name pos:start="121:39" pos:end="121:39">v</name><operator pos:start="121:40" pos:end="121:40">.</operator><name pos:start="121:41" pos:end="121:44">niov</name></name></expr>;</condition> <incr pos:start="121:47" pos:end="121:49"><expr pos:start="121:47" pos:end="121:49"><name pos:start="121:47" pos:end="121:47">i</name><operator pos:start="121:48" pos:end="121:49">++</operator></expr></incr>)</control> <block pos:start="121:52" pos:end="129:9">{<block_content pos:start="123:13" pos:end="127:13">

            <if_stmt pos:start="123:13" pos:end="127:13"><if pos:start="123:13" pos:end="127:13">if <condition pos:start="123:16" pos:end="123:32">(<expr pos:start="123:17" pos:end="123:31"><name pos:start="123:17" pos:end="123:23"><name pos:start="123:17" pos:end="123:20">page</name><index pos:start="123:21" pos:end="123:23">[<expr pos:start="123:22" pos:end="123:22"><name pos:start="123:22" pos:end="123:22">i</name></expr>]</index></name> <operator pos:start="123:25" pos:end="123:26">==</operator> <name pos:start="123:28" pos:end="123:31">NULL</name></expr>)</condition> <block pos:start="123:34" pos:end="127:13">{<block_content pos:start="125:17" pos:end="125:62">

                <expr_stmt pos:start="125:17" pos:end="125:62"><expr pos:start="125:17" pos:end="125:61"><name pos:start="125:17" pos:end="125:23"><name pos:start="125:17" pos:end="125:20">page</name><index pos:start="125:21" pos:end="125:23">[<expr pos:start="125:22" pos:end="125:22"><name pos:start="125:22" pos:end="125:22">i</name></expr>]</index></name> <operator pos:start="125:25" pos:end="125:25">=</operator> <name pos:start="125:27" pos:end="125:38"><name pos:start="125:27" pos:end="125:31">ioreq</name><operator pos:start="125:32" pos:end="125:33">-&gt;</operator><name pos:start="125:34" pos:end="125:38">pages</name></name> <operator pos:start="125:40" pos:end="125:40">+</operator> <operator pos:start="125:42" pos:end="125:42">(</operator><name pos:start="125:43" pos:end="125:43">j</name><operator pos:start="125:44" pos:end="125:45">++</operator><operator pos:start="125:46" pos:end="125:46">)</operator> <operator pos:start="125:48" pos:end="125:48">*</operator> <name pos:start="125:50" pos:end="125:61">XC_PAGE_SIZE</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="131:9" pos:end="131:43"><expr pos:start="131:9" pos:end="131:42"><name pos:start="131:9" pos:end="131:30"><name pos:start="131:9" pos:end="131:13">ioreq</name><operator pos:start="131:14" pos:end="131:15">-&gt;</operator><name pos:start="131:16" pos:end="131:21">blkdev</name><operator pos:start="131:22" pos:end="131:23">-&gt;</operator><name pos:start="131:24" pos:end="131:30">cnt_map</name></name> <operator pos:start="131:32" pos:end="131:33">+=</operator> <name pos:start="131:35" pos:end="131:42">new_maps</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="133:7" pos:end="171:5">else if <condition pos:start="133:15" pos:end="133:24">(<expr pos:start="133:16" pos:end="133:23"><name pos:start="133:16" pos:end="133:23">new_maps</name></expr>)</condition>  <block pos:start="133:27" pos:end="171:5">{<block_content pos:start="135:9" pos:end="169:9">

        <for pos:start="135:9" pos:end="159:9">for <control pos:start="135:13" pos:end="135:38">(<init pos:start="135:14" pos:end="135:19"><expr pos:start="135:14" pos:end="135:18"><name pos:start="135:14" pos:end="135:14">i</name> <operator pos:start="135:16" pos:end="135:16">=</operator> <literal type="number" pos:start="135:18" pos:end="135:18">0</literal></expr>;</init> <condition pos:start="135:21" pos:end="135:33"><expr pos:start="135:21" pos:end="135:32"><name pos:start="135:21" pos:end="135:21">i</name> <operator pos:start="135:23" pos:end="135:23">&lt;</operator> <name pos:start="135:25" pos:end="135:32">new_maps</name></expr>;</condition> <incr pos:start="135:35" pos:end="135:37"><expr pos:start="135:35" pos:end="135:37"><name pos:start="135:35" pos:end="135:35">i</name><operator pos:start="135:36" pos:end="135:37">++</operator></expr></incr>)</control> <block pos:start="135:40" pos:end="159:9">{<block_content pos:start="137:13" pos:end="157:37">

            <expr_stmt pos:start="137:13" pos:end="139:55"><expr pos:start="137:13" pos:end="139:54"><name pos:start="137:13" pos:end="137:26"><name pos:start="137:13" pos:end="137:17">ioreq</name><operator pos:start="137:18" pos:end="137:19">-&gt;</operator><name pos:start="137:20" pos:end="137:23">page</name><index pos:start="137:24" pos:end="137:26">[<expr pos:start="137:25" pos:end="137:25"><name pos:start="137:25" pos:end="137:25">i</name></expr>]</index></name> <operator pos:start="137:28" pos:end="137:28">=</operator> <call pos:start="137:30" pos:end="139:54"><name pos:start="137:30" pos:end="137:52">xc_gnttab_map_grant_ref</name>

                <argument_list pos:start="139:17" pos:end="139:54">(<argument pos:start="139:18" pos:end="139:20"><expr pos:start="139:18" pos:end="139:20"><name pos:start="139:18" pos:end="139:20">gnt</name></expr></argument>, <argument pos:start="139:23" pos:end="139:31"><expr pos:start="139:23" pos:end="139:31"><name pos:start="139:23" pos:end="139:31"><name pos:start="139:23" pos:end="139:28">domids</name><index pos:start="139:29" pos:end="139:31">[<expr pos:start="139:30" pos:end="139:30"><name pos:start="139:30" pos:end="139:30">i</name></expr>]</index></name></expr></argument>, <argument pos:start="139:34" pos:end="139:40"><expr pos:start="139:34" pos:end="139:40"><name pos:start="139:34" pos:end="139:40"><name pos:start="139:34" pos:end="139:37">refs</name><index pos:start="139:38" pos:end="139:40">[<expr pos:start="139:39" pos:end="139:39"><name pos:start="139:39" pos:end="139:39">i</name></expr>]</index></name></expr></argument>, <argument pos:start="139:43" pos:end="139:53"><expr pos:start="139:43" pos:end="139:53"><name pos:start="139:43" pos:end="139:53"><name pos:start="139:43" pos:end="139:47">ioreq</name><operator pos:start="139:48" pos:end="139:49">-&gt;</operator><name pos:start="139:50" pos:end="139:53">prot</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="141:13" pos:end="155:13"><if pos:start="141:13" pos:end="155:13">if <condition pos:start="141:16" pos:end="141:39">(<expr pos:start="141:17" pos:end="141:38"><name pos:start="141:17" pos:end="141:30"><name pos:start="141:17" pos:end="141:21">ioreq</name><operator pos:start="141:22" pos:end="141:23">-&gt;</operator><name pos:start="141:24" pos:end="141:27">page</name><index pos:start="141:28" pos:end="141:30">[<expr pos:start="141:29" pos:end="141:29"><name pos:start="141:29" pos:end="141:29">i</name></expr>]</index></name> <operator pos:start="141:32" pos:end="141:33">==</operator> <name pos:start="141:35" pos:end="141:38">NULL</name></expr>)</condition> <block pos:start="141:41" pos:end="155:13">{<block_content pos:start="143:17" pos:end="153:26">

                <expr_stmt pos:start="143:17" pos:end="147:80"><expr pos:start="143:17" pos:end="147:79"><call pos:start="143:17" pos:end="147:79"><name pos:start="143:17" pos:end="143:29">xen_be_printf</name><argument_list pos:start="143:30" pos:end="147:79">(<argument pos:start="143:31" pos:end="143:52"><expr pos:start="143:31" pos:end="143:52"><operator pos:start="143:31" pos:end="143:31">&amp;</operator><name pos:start="143:32" pos:end="143:52"><name pos:start="143:32" pos:end="143:36">ioreq</name><operator pos:start="143:37" pos:end="143:38">-&gt;</operator><name pos:start="143:39" pos:end="143:44">blkdev</name><operator pos:start="143:45" pos:end="143:46">-&gt;</operator><name pos:start="143:47" pos:end="143:52">xendev</name></name></expr></argument>, <argument pos:start="143:55" pos:end="143:55"><expr pos:start="143:55" pos:end="143:55"><literal type="number" pos:start="143:55" pos:end="143:55">0</literal></expr></argument>,

                              <argument pos:start="145:31" pos:end="145:70"><expr pos:start="145:31" pos:end="145:70"><literal type="string" pos:start="145:31" pos:end="145:70">"can't map grant ref %d (%s, %d maps)\n"</literal></expr></argument>,

                              <argument pos:start="147:31" pos:end="147:37"><expr pos:start="147:31" pos:end="147:37"><name pos:start="147:31" pos:end="147:37"><name pos:start="147:31" pos:end="147:34">refs</name><index pos:start="147:35" pos:end="147:37">[<expr pos:start="147:36" pos:end="147:36"><name pos:start="147:36" pos:end="147:36">i</name></expr>]</index></name></expr></argument>, <argument pos:start="147:40" pos:end="147:54"><expr pos:start="147:40" pos:end="147:54"><call pos:start="147:40" pos:end="147:54"><name pos:start="147:40" pos:end="147:47">strerror</name><argument_list pos:start="147:48" pos:end="147:54">(<argument pos:start="147:49" pos:end="147:53"><expr pos:start="147:49" pos:end="147:53"><name pos:start="147:49" pos:end="147:53">errno</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="147:57" pos:end="147:78"><expr pos:start="147:57" pos:end="147:78"><name pos:start="147:57" pos:end="147:78"><name pos:start="147:57" pos:end="147:61">ioreq</name><operator pos:start="147:62" pos:end="147:63">-&gt;</operator><name pos:start="147:64" pos:end="147:69">blkdev</name><operator pos:start="147:70" pos:end="147:71">-&gt;</operator><name pos:start="147:72" pos:end="147:78">cnt_map</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="149:17" pos:end="149:34"><expr pos:start="149:17" pos:end="149:33"><name pos:start="149:17" pos:end="149:29"><name pos:start="149:17" pos:end="149:21">ioreq</name><operator pos:start="149:22" pos:end="149:23">-&gt;</operator><name pos:start="149:24" pos:end="149:29">mapped</name></name> <operator pos:start="149:31" pos:end="149:31">=</operator> <literal type="number" pos:start="149:33" pos:end="149:33">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="151:17" pos:end="151:35"><expr pos:start="151:17" pos:end="151:34"><call pos:start="151:17" pos:end="151:34"><name pos:start="151:17" pos:end="151:27">ioreq_unmap</name><argument_list pos:start="151:28" pos:end="151:34">(<argument pos:start="151:29" pos:end="151:33"><expr pos:start="151:29" pos:end="151:33"><name pos:start="151:29" pos:end="151:33">ioreq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="153:17" pos:end="153:26">return <expr pos:start="153:24" pos:end="153:25"><operator pos:start="153:24" pos:end="153:24">-</operator><literal type="number" pos:start="153:25" pos:end="153:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:37"><expr pos:start="157:13" pos:end="157:36"><name pos:start="157:13" pos:end="157:34"><name pos:start="157:13" pos:end="157:17">ioreq</name><operator pos:start="157:18" pos:end="157:19">-&gt;</operator><name pos:start="157:20" pos:end="157:25">blkdev</name><operator pos:start="157:26" pos:end="157:27">-&gt;</operator><name pos:start="157:28" pos:end="157:34">cnt_map</name></name><operator pos:start="157:35" pos:end="157:36">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

        <for pos:start="161:9" pos:end="169:9">for <control pos:start="161:13" pos:end="161:50">(<init pos:start="161:14" pos:end="161:26"><expr pos:start="161:14" pos:end="161:18"><name pos:start="161:14" pos:end="161:14">i</name> <operator pos:start="161:16" pos:end="161:16">=</operator> <literal type="number" pos:start="161:18" pos:end="161:18">0</literal></expr><operator pos:start="161:19" pos:end="161:19">,</operator> <expr pos:start="161:21" pos:end="161:25"><name pos:start="161:21" pos:end="161:21">j</name> <operator pos:start="161:23" pos:end="161:23">=</operator> <literal type="number" pos:start="161:25" pos:end="161:25">0</literal></expr>;</init> <condition pos:start="161:28" pos:end="161:45"><expr pos:start="161:28" pos:end="161:44"><name pos:start="161:28" pos:end="161:28">i</name> <operator pos:start="161:30" pos:end="161:30">&lt;</operator> <name pos:start="161:32" pos:end="161:44"><name pos:start="161:32" pos:end="161:36">ioreq</name><operator pos:start="161:37" pos:end="161:38">-&gt;</operator><name pos:start="161:39" pos:end="161:39">v</name><operator pos:start="161:40" pos:end="161:40">.</operator><name pos:start="161:41" pos:end="161:44">niov</name></name></expr>;</condition> <incr pos:start="161:47" pos:end="161:49"><expr pos:start="161:47" pos:end="161:49"><name pos:start="161:47" pos:end="161:47">i</name><operator pos:start="161:48" pos:end="161:49">++</operator></expr></incr>)</control> <block pos:start="161:52" pos:end="169:9">{<block_content pos:start="163:13" pos:end="167:13">

            <if_stmt pos:start="163:13" pos:end="167:13"><if pos:start="163:13" pos:end="167:13">if <condition pos:start="163:16" pos:end="163:32">(<expr pos:start="163:17" pos:end="163:31"><name pos:start="163:17" pos:end="163:23"><name pos:start="163:17" pos:end="163:20">page</name><index pos:start="163:21" pos:end="163:23">[<expr pos:start="163:22" pos:end="163:22"><name pos:start="163:22" pos:end="163:22">i</name></expr>]</index></name> <operator pos:start="163:25" pos:end="163:26">==</operator> <name pos:start="163:28" pos:end="163:31">NULL</name></expr>)</condition> <block pos:start="163:34" pos:end="167:13">{<block_content pos:start="165:17" pos:end="165:43">

                <expr_stmt pos:start="165:17" pos:end="165:43"><expr pos:start="165:17" pos:end="165:42"><name pos:start="165:17" pos:end="165:23"><name pos:start="165:17" pos:end="165:20">page</name><index pos:start="165:21" pos:end="165:23">[<expr pos:start="165:22" pos:end="165:22"><name pos:start="165:22" pos:end="165:22">i</name></expr>]</index></name> <operator pos:start="165:25" pos:end="165:25">=</operator> <name pos:start="165:27" pos:end="165:42"><name pos:start="165:27" pos:end="165:31">ioreq</name><operator pos:start="165:32" pos:end="165:33">-&gt;</operator><name pos:start="165:34" pos:end="165:37">page</name><index pos:start="165:38" pos:end="165:42">[<expr pos:start="165:39" pos:end="165:41"><name pos:start="165:39" pos:end="165:39">j</name><operator pos:start="165:40" pos:end="165:41">++</operator></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="173:5" pos:end="225:5"><if pos:start="173:5" pos:end="225:5">if <condition pos:start="173:8" pos:end="173:42">(<expr pos:start="173:9" pos:end="173:41"><name pos:start="173:9" pos:end="173:41"><name pos:start="173:9" pos:end="173:13">ioreq</name><operator pos:start="173:14" pos:end="173:15">-&gt;</operator><name pos:start="173:16" pos:end="173:21">blkdev</name><operator pos:start="173:22" pos:end="173:23">-&gt;</operator><name pos:start="173:24" pos:end="173:41">feature_persistent</name></name></expr>)</condition> <block pos:start="173:44" pos:end="225:5">{<block_content pos:start="175:9" pos:end="223:9">

        <while pos:start="175:9" pos:end="223:9">while <condition pos:start="175:15" pos:end="177:26">(<expr pos:start="175:16" pos:end="177:25"><operator pos:start="175:16" pos:end="175:16">(</operator><name pos:start="175:17" pos:end="175:51"><name pos:start="175:17" pos:end="175:21">ioreq</name><operator pos:start="175:22" pos:end="175:23">-&gt;</operator><name pos:start="175:24" pos:end="175:29">blkdev</name><operator pos:start="175:30" pos:end="175:31">-&gt;</operator><name pos:start="175:32" pos:end="175:51">persistent_gnt_count</name></name> <operator pos:start="175:53" pos:end="175:53">&lt;</operator> <name pos:start="175:55" pos:end="175:79"><name pos:start="175:55" pos:end="175:59">ioreq</name><operator pos:start="175:60" pos:end="175:61">-&gt;</operator><name pos:start="175:62" pos:end="175:67">blkdev</name><operator pos:start="175:68" pos:end="175:69">-&gt;</operator><name pos:start="175:70" pos:end="175:79">max_grants</name></name><operator pos:start="175:80" pos:end="175:80">)</operator>

              <operator pos:start="177:15" pos:end="177:16">&amp;&amp;</operator> <name pos:start="177:18" pos:end="177:25">new_maps</name></expr>)</condition> <block pos:start="177:28" pos:end="223:9">{<block_content pos:start="193:13" pos:end="221:50">

            <comment type="block" pos:start="179:13" pos:end="191:15">/* Go through the list of newly mapped grants and add as many

             * as possible to the list of persistently mapped grants.

             *

             * Since we start at the end of ioreq-&gt;page(s), we only need

             * to decrease new_maps to prevent this granted pages from

             * being unmapped in ioreq_unmap.

             */</comment>

            <expr_stmt pos:start="193:13" pos:end="193:46"><expr pos:start="193:13" pos:end="193:45"><name pos:start="193:13" pos:end="193:17">grant</name> <operator pos:start="193:19" pos:end="193:19">=</operator> <call pos:start="193:21" pos:end="193:45"><name pos:start="193:21" pos:end="193:29">g_malloc0</name><argument_list pos:start="193:30" pos:end="193:45">(<argument pos:start="193:31" pos:end="193:44"><expr pos:start="193:31" pos:end="193:44"><sizeof pos:start="193:31" pos:end="193:44">sizeof<argument_list pos:start="193:37" pos:end="193:44">(<argument pos:start="193:38" pos:end="193:43"><expr pos:start="193:38" pos:end="193:43"><operator pos:start="193:38" pos:end="193:38">*</operator><name pos:start="193:39" pos:end="193:43">grant</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="195:13" pos:end="195:23"><expr pos:start="195:13" pos:end="195:22"><name pos:start="195:13" pos:end="195:20">new_maps</name><operator pos:start="195:21" pos:end="195:22">--</operator></expr>;</expr_stmt>

            <if_stmt pos:start="197:13" pos:end="205:13"><if pos:start="197:13" pos:end="201:13">if <condition pos:start="197:16" pos:end="197:27">(<expr pos:start="197:17" pos:end="197:26"><name pos:start="197:17" pos:end="197:26">batch_maps</name></expr>)</condition> <block pos:start="197:29" pos:end="201:13">{<block_content pos:start="199:17" pos:end="199:71">

                <expr_stmt pos:start="199:17" pos:end="199:71"><expr pos:start="199:17" pos:end="199:70"><name pos:start="199:17" pos:end="199:27"><name pos:start="199:17" pos:end="199:21">grant</name><operator pos:start="199:22" pos:end="199:23">-&gt;</operator><name pos:start="199:24" pos:end="199:27">page</name></name> <operator pos:start="199:29" pos:end="199:29">=</operator> <name pos:start="199:31" pos:end="199:42"><name pos:start="199:31" pos:end="199:35">ioreq</name><operator pos:start="199:36" pos:end="199:37">-&gt;</operator><name pos:start="199:38" pos:end="199:42">pages</name></name> <operator pos:start="199:44" pos:end="199:44">+</operator> <operator pos:start="199:46" pos:end="199:46">(</operator><name pos:start="199:47" pos:end="199:54">new_maps</name><operator pos:start="199:55" pos:end="199:55">)</operator> <operator pos:start="199:57" pos:end="199:57">*</operator> <name pos:start="199:59" pos:end="199:70">XC_PAGE_SIZE</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="201:15" pos:end="205:13">else <block pos:start="201:20" pos:end="205:13">{<block_content pos:start="203:17" pos:end="203:52">

                <expr_stmt pos:start="203:17" pos:end="203:52"><expr pos:start="203:17" pos:end="203:51"><name pos:start="203:17" pos:end="203:27"><name pos:start="203:17" pos:end="203:21">grant</name><operator pos:start="203:22" pos:end="203:23">-&gt;</operator><name pos:start="203:24" pos:end="203:27">page</name></name> <operator pos:start="203:29" pos:end="203:29">=</operator> <name pos:start="203:31" pos:end="203:51"><name pos:start="203:31" pos:end="203:35">ioreq</name><operator pos:start="203:36" pos:end="203:37">-&gt;</operator><name pos:start="203:38" pos:end="203:41">page</name><index pos:start="203:42" pos:end="203:51">[<expr pos:start="203:43" pos:end="203:50"><name pos:start="203:43" pos:end="203:50">new_maps</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:42"><expr pos:start="207:13" pos:end="207:41"><name pos:start="207:13" pos:end="207:25"><name pos:start="207:13" pos:end="207:17">grant</name><operator pos:start="207:18" pos:end="207:19">-&gt;</operator><name pos:start="207:20" pos:end="207:25">blkdev</name></name> <operator pos:start="207:27" pos:end="207:27">=</operator> <name pos:start="207:29" pos:end="207:41"><name pos:start="207:29" pos:end="207:33">ioreq</name><operator pos:start="207:34" pos:end="207:35">-&gt;</operator><name pos:start="207:36" pos:end="207:41">blkdev</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="209:13" pos:end="213:55"><expr pos:start="209:13" pos:end="213:54"><call pos:start="209:13" pos:end="213:54"><name pos:start="209:13" pos:end="209:25">xen_be_printf</name><argument_list pos:start="209:26" pos:end="213:54">(<argument pos:start="209:27" pos:end="209:48"><expr pos:start="209:27" pos:end="209:48"><operator pos:start="209:27" pos:end="209:27">&amp;</operator><name pos:start="209:28" pos:end="209:48"><name pos:start="209:28" pos:end="209:32">ioreq</name><operator pos:start="209:33" pos:end="209:34">-&gt;</operator><name pos:start="209:35" pos:end="209:40">blkdev</name><operator pos:start="209:41" pos:end="209:42">-&gt;</operator><name pos:start="209:43" pos:end="209:48">xendev</name></name></expr></argument>, <argument pos:start="209:51" pos:end="209:51"><expr pos:start="209:51" pos:end="209:51"><literal type="number" pos:start="209:51" pos:end="209:51">3</literal></expr></argument>,

                          <argument pos:start="211:27" pos:end="211:63"><expr pos:start="211:27" pos:end="211:63"><literal type="string" pos:start="211:27" pos:end="211:42">"adding grant %"</literal> <name pos:start="211:44" pos:end="211:49">PRIu32</name> <literal type="string" pos:start="211:51" pos:end="211:63">" page: %p\n"</literal></expr></argument>,

                          <argument pos:start="213:27" pos:end="213:40"><expr pos:start="213:27" pos:end="213:40"><name pos:start="213:27" pos:end="213:40"><name pos:start="213:27" pos:end="213:30">refs</name><index pos:start="213:31" pos:end="213:40">[<expr pos:start="213:32" pos:end="213:39"><name pos:start="213:32" pos:end="213:39">new_maps</name></expr>]</index></name></expr></argument>, <argument pos:start="213:43" pos:end="213:53"><expr pos:start="213:43" pos:end="213:53"><name pos:start="213:43" pos:end="213:53"><name pos:start="213:43" pos:end="213:47">grant</name><operator pos:start="213:48" pos:end="213:49">-&gt;</operator><name pos:start="213:50" pos:end="213:53">page</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="215:13" pos:end="219:33"><expr pos:start="215:13" pos:end="219:32"><call pos:start="215:13" pos:end="219:32"><name pos:start="215:13" pos:end="215:25">g_tree_insert</name><argument_list pos:start="215:26" pos:end="219:32">(<argument pos:start="215:27" pos:end="215:56"><expr pos:start="215:27" pos:end="215:56"><name pos:start="215:27" pos:end="215:56"><name pos:start="215:27" pos:end="215:31">ioreq</name><operator pos:start="215:32" pos:end="215:33">-&gt;</operator><name pos:start="215:34" pos:end="215:39">blkdev</name><operator pos:start="215:40" pos:end="215:41">-&gt;</operator><name pos:start="215:42" pos:end="215:56">persistent_gnts</name></name></expr></argument>,

                          <argument pos:start="217:27" pos:end="217:58"><expr pos:start="217:27" pos:end="217:58"><call pos:start="217:27" pos:end="217:58"><name pos:start="217:27" pos:end="217:42">GUINT_TO_POINTER</name><argument_list pos:start="217:43" pos:end="217:58">(<argument pos:start="217:44" pos:end="217:57"><expr pos:start="217:44" pos:end="217:57"><name pos:start="217:44" pos:end="217:57"><name pos:start="217:44" pos:end="217:47">refs</name><index pos:start="217:48" pos:end="217:57">[<expr pos:start="217:49" pos:end="217:56"><name pos:start="217:49" pos:end="217:56">new_maps</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>,

                          <argument pos:start="219:27" pos:end="219:31"><expr pos:start="219:27" pos:end="219:31"><name pos:start="219:27" pos:end="219:31">grant</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="221:13" pos:end="221:50"><expr pos:start="221:13" pos:end="221:49"><name pos:start="221:13" pos:end="221:47"><name pos:start="221:13" pos:end="221:17">ioreq</name><operator pos:start="221:18" pos:end="221:19">-&gt;</operator><name pos:start="221:20" pos:end="221:25">blkdev</name><operator pos:start="221:26" pos:end="221:27">-&gt;</operator><name pos:start="221:28" pos:end="221:47">persistent_gnt_count</name></name><operator pos:start="221:48" pos:end="221:49">++</operator></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></if></if_stmt>

    <for pos:start="227:5" pos:end="231:5">for <control pos:start="227:9" pos:end="227:39">(<init pos:start="227:10" pos:end="227:15"><expr pos:start="227:10" pos:end="227:14"><name pos:start="227:10" pos:end="227:10">i</name> <operator pos:start="227:12" pos:end="227:12">=</operator> <literal type="number" pos:start="227:14" pos:end="227:14">0</literal></expr>;</init> <condition pos:start="227:17" pos:end="227:34"><expr pos:start="227:17" pos:end="227:33"><name pos:start="227:17" pos:end="227:17">i</name> <operator pos:start="227:19" pos:end="227:19">&lt;</operator> <name pos:start="227:21" pos:end="227:33"><name pos:start="227:21" pos:end="227:25">ioreq</name><operator pos:start="227:26" pos:end="227:27">-&gt;</operator><name pos:start="227:28" pos:end="227:28">v</name><operator pos:start="227:29" pos:end="227:29">.</operator><name pos:start="227:30" pos:end="227:33">niov</name></name></expr>;</condition> <incr pos:start="227:36" pos:end="227:38"><expr pos:start="227:36" pos:end="227:38"><name pos:start="227:36" pos:end="227:36">i</name><operator pos:start="227:37" pos:end="227:38">++</operator></expr></incr>)</control> <block pos:start="227:41" pos:end="231:5">{<block_content pos:start="229:9" pos:end="229:55">

        <expr_stmt pos:start="229:9" pos:end="229:55"><expr pos:start="229:9" pos:end="229:54"><name pos:start="229:9" pos:end="229:23"><name pos:start="229:9" pos:end="229:13">ioreq</name><operator pos:start="229:14" pos:end="229:15">-&gt;</operator><name pos:start="229:16" pos:end="229:16">v</name><operator pos:start="229:17" pos:end="229:17">.</operator><name pos:start="229:18" pos:end="229:20">iov</name><index pos:start="229:21" pos:end="229:23">[<expr pos:start="229:22" pos:end="229:22"><name pos:start="229:22" pos:end="229:22">i</name></expr>]</index></name><operator pos:start="229:24" pos:end="229:24">.</operator><name pos:start="229:25" pos:end="229:32">iov_base</name> <operator pos:start="229:34" pos:end="229:35">+=</operator> <operator pos:start="229:37" pos:end="229:37">(</operator><name pos:start="229:38" pos:end="229:46">uintptr_t</name><operator pos:start="229:47" pos:end="229:47">)</operator><name pos:start="229:48" pos:end="229:54"><name pos:start="229:48" pos:end="229:51">page</name><index pos:start="229:52" pos:end="229:54">[<expr pos:start="229:53" pos:end="229:53"><name pos:start="229:53" pos:end="229:53">i</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="233:5" pos:end="233:22"><expr pos:start="233:5" pos:end="233:21"><name pos:start="233:5" pos:end="233:17"><name pos:start="233:5" pos:end="233:9">ioreq</name><operator pos:start="233:10" pos:end="233:11">-&gt;</operator><name pos:start="233:12" pos:end="233:17">mapped</name></name> <operator pos:start="233:19" pos:end="233:19">=</operator> <literal type="number" pos:start="233:21" pos:end="233:21">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="235:5" pos:end="235:32"><expr pos:start="235:5" pos:end="235:31"><name pos:start="235:5" pos:end="235:20"><name pos:start="235:5" pos:end="235:9">ioreq</name><operator pos:start="235:10" pos:end="235:11">-&gt;</operator><name pos:start="235:12" pos:end="235:20">num_unmap</name></name> <operator pos:start="235:22" pos:end="235:22">=</operator> <name pos:start="235:24" pos:end="235:31">new_maps</name></expr>;</expr_stmt>

    <return pos:start="237:5" pos:end="237:13">return <expr pos:start="237:12" pos:end="237:12"><literal type="number" pos:start="237:12" pos:end="237:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
