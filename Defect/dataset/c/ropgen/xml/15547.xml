<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15547.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">save_native_fp_fxsave</name><parameter_list pos:start="1:34" pos:end="1:48">(<parameter pos:start="1:35" pos:end="1:47"><decl pos:start="1:35" pos:end="1:47"><type pos:start="1:35" pos:end="1:44"><name pos:start="1:35" pos:end="1:42">CPUState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:44">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:19">fpxstate</name></name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:23">fp</name> <init pos:start="5:25" pos:end="5:31">= <expr pos:start="5:27" pos:end="5:31"><operator pos:start="5:27" pos:end="5:27">&amp;</operator><name pos:start="5:28" pos:end="5:31">fpx1</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">fptag</name></decl>, <decl pos:start="7:16" pos:end="7:16"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:16" pos:end="7:16">i</name></decl>, <decl pos:start="7:19" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:19" pos:end="7:19">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint16_t</name></type> <name pos:start="9:14" pos:end="9:17">fpuc</name></decl>;</decl_stmt>



    <asm pos:start="13:5" pos:end="13:45">asm <specifier pos:start="13:9" pos:end="13:16">volatile</specifier> ("fxsave %0" : : "m" (*fp));</asm>

    <expr_stmt pos:start="15:5" pos:end="15:25"><expr pos:start="15:5" pos:end="15:24"><name pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:7">env</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:13">fpuc</name></name> <operator pos:start="15:15" pos:end="15:15">=</operator> <name pos:start="15:17" pos:end="15:24"><name pos:start="15:17" pos:end="15:18">fp</name><operator pos:start="15:19" pos:end="15:20">-&gt;</operator><name pos:start="15:21" pos:end="15:24">fpuc</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:38"><expr pos:start="17:5" pos:end="17:37"><name pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:7">env</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:14">fpstt</name></name> <operator pos:start="17:16" pos:end="17:16">=</operator> <operator pos:start="17:18" pos:end="17:18">(</operator><name pos:start="17:19" pos:end="17:26"><name pos:start="17:19" pos:end="17:20">fp</name><operator pos:start="17:21" pos:end="17:22">-&gt;</operator><name pos:start="17:23" pos:end="17:26">fpus</name></name> <operator pos:start="17:28" pos:end="17:29">&gt;&gt;</operator> <literal type="number" pos:start="17:31" pos:end="17:32">11</literal><operator pos:start="17:33" pos:end="17:33">)</operator> <operator pos:start="17:35" pos:end="17:35">&amp;</operator> <literal type="number" pos:start="17:37" pos:end="17:37">7</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:35"><expr pos:start="19:5" pos:end="19:34"><name pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:7">env</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:13">fpus</name></name> <operator pos:start="19:15" pos:end="19:15">=</operator> <name pos:start="19:17" pos:end="19:24"><name pos:start="19:17" pos:end="19:18">fp</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:24">fpus</name></name> <operator pos:start="19:26" pos:end="19:26">&amp;</operator> <operator pos:start="19:28" pos:end="19:28">~</operator><literal type="number" pos:start="19:29" pos:end="19:34">0x3800</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:29"><expr pos:start="21:5" pos:end="21:28"><name pos:start="21:5" pos:end="21:9">fptag</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <name pos:start="21:13" pos:end="21:21"><name pos:start="21:13" pos:end="21:14">fp</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:21">fptag</name></name> <operator pos:start="21:23" pos:end="21:23">^</operator> <literal type="number" pos:start="21:25" pos:end="21:28">0xff</literal></expr>;</expr_stmt>

    <for pos:start="23:5" pos:end="27:5">for<control pos:start="23:8" pos:end="23:25">(<init pos:start="23:9" pos:end="23:14"><expr pos:start="23:9" pos:end="23:13"><name pos:start="23:9" pos:end="23:9">i</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <literal type="number" pos:start="23:13" pos:end="23:13">0</literal></expr>;</init><condition pos:start="23:15" pos:end="23:20"><expr pos:start="23:15" pos:end="23:19"><name pos:start="23:15" pos:end="23:15">i</name> <operator pos:start="23:17" pos:end="23:17">&lt;</operator> <literal type="number" pos:start="23:19" pos:end="23:19">8</literal></expr>;</condition> <incr pos:start="23:22" pos:end="23:24"><expr pos:start="23:22" pos:end="23:24"><name pos:start="23:22" pos:end="23:22">i</name><operator pos:start="23:23" pos:end="23:24">++</operator></expr></incr>)</control> <block pos:start="23:27" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:42">

        <expr_stmt pos:start="25:9" pos:end="25:42"><expr pos:start="25:9" pos:end="25:41"><name pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:11">env</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:19">fptags</name><index pos:start="25:20" pos:end="25:22">[<expr pos:start="25:21" pos:end="25:21"><name pos:start="25:21" pos:end="25:21">i</name></expr>]</index></name> <operator pos:start="25:24" pos:end="25:24">=</operator> <operator pos:start="25:26" pos:end="25:26">(</operator><name pos:start="25:27" pos:end="25:31">fptag</name> <operator pos:start="25:33" pos:end="25:34">&gt;&gt;</operator> <name pos:start="25:36" pos:end="25:36">i</name><operator pos:start="25:37" pos:end="25:37">)</operator> <operator pos:start="25:39" pos:end="25:39">&amp;</operator> <literal type="number" pos:start="25:41" pos:end="25:41">1</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="29:5" pos:end="29:19"><expr pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:5">j</name> <operator pos:start="29:7" pos:end="29:7">=</operator> <name pos:start="29:9" pos:end="29:18"><name pos:start="29:9" pos:end="29:11">env</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:18">fpstt</name></name></expr>;</expr_stmt>

    <for pos:start="31:5" pos:end="37:5">for<control pos:start="31:8" pos:end="31:25">(<init pos:start="31:9" pos:end="31:14"><expr pos:start="31:9" pos:end="31:13"><name pos:start="31:9" pos:end="31:9">i</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <literal type="number" pos:start="31:13" pos:end="31:13">0</literal></expr>;</init><condition pos:start="31:15" pos:end="31:20"><expr pos:start="31:15" pos:end="31:19"><name pos:start="31:15" pos:end="31:15">i</name> <operator pos:start="31:17" pos:end="31:17">&lt;</operator> <literal type="number" pos:start="31:19" pos:end="31:19">8</literal></expr>;</condition> <incr pos:start="31:22" pos:end="31:24"><expr pos:start="31:22" pos:end="31:24"><name pos:start="31:22" pos:end="31:22">i</name><operator pos:start="31:23" pos:end="31:24">++</operator></expr></incr>)</control> <block pos:start="31:27" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:24">

        <expr_stmt pos:start="33:9" pos:end="33:60"><expr pos:start="33:9" pos:end="33:59"><call pos:start="33:9" pos:end="33:59"><name pos:start="33:9" pos:end="33:14">memcpy</name><argument_list pos:start="33:15" pos:end="33:59">(<argument pos:start="33:16" pos:end="33:32"><expr pos:start="33:16" pos:end="33:32"><operator pos:start="33:16" pos:end="33:16">&amp;</operator><name pos:start="33:17" pos:end="33:30"><name pos:start="33:17" pos:end="33:19">env</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:27">fpregs</name><index pos:start="33:28" pos:end="33:30">[<expr pos:start="33:29" pos:end="33:29"><name pos:start="33:29" pos:end="33:29">j</name></expr>]</index></name><operator pos:start="33:31" pos:end="33:31">.</operator><name pos:start="33:32" pos:end="33:32">d</name></expr></argument>, <argument pos:start="33:35" pos:end="33:54"><expr pos:start="33:35" pos:end="33:54"><operator pos:start="33:35" pos:end="33:35">&amp;</operator><name pos:start="33:36" pos:end="33:54"><name pos:start="33:36" pos:end="33:37">fp</name><operator pos:start="33:38" pos:end="33:39">-&gt;</operator><name pos:start="33:40" pos:end="33:46">fpregs1</name><index pos:start="33:47" pos:end="33:54">[<expr pos:start="33:48" pos:end="33:53"><name pos:start="33:48" pos:end="33:48">i</name> <operator pos:start="33:50" pos:end="33:50">*</operator> <literal type="number" pos:start="33:52" pos:end="33:53">16</literal></expr>]</index></name></expr></argument>, <argument pos:start="33:57" pos:end="33:58"><expr pos:start="33:57" pos:end="33:58"><literal type="number" pos:start="33:57" pos:end="33:58">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:24"><expr pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:9">j</name> <operator pos:start="35:11" pos:end="35:11">=</operator> <operator pos:start="35:13" pos:end="35:13">(</operator><name pos:start="35:14" pos:end="35:14">j</name> <operator pos:start="35:16" pos:end="35:16">+</operator> <literal type="number" pos:start="35:18" pos:end="35:18">1</literal><operator pos:start="35:19" pos:end="35:19">)</operator> <operator pos:start="35:21" pos:end="35:21">&amp;</operator> <literal type="number" pos:start="35:23" pos:end="35:23">7</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="39:5" pos:end="45:5"><if pos:start="39:5" pos:end="45:5">if <condition pos:start="39:8" pos:end="39:40">(<expr pos:start="39:9" pos:end="39:39"><name pos:start="39:9" pos:end="39:27"><name pos:start="39:9" pos:end="39:11">env</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:27">cpuid_features</name></name> <operator pos:start="39:29" pos:end="39:29">&amp;</operator> <name pos:start="39:31" pos:end="39:39">CPUID_SSE</name></expr>)</condition> <block pos:start="39:42" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:62">

        <expr_stmt pos:start="41:9" pos:end="41:31"><expr pos:start="41:9" pos:end="41:30"><name pos:start="41:9" pos:end="41:18"><name pos:start="41:9" pos:end="41:11">env</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:18">mxcsr</name></name> <operator pos:start="41:20" pos:end="41:20">=</operator> <name pos:start="41:22" pos:end="41:30"><name pos:start="41:22" pos:end="41:23">fp</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:30">mxcsr</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:62"><expr pos:start="43:9" pos:end="43:61"><call pos:start="43:9" pos:end="43:61"><name pos:start="43:9" pos:end="43:14">memcpy</name><argument_list pos:start="43:15" pos:end="43:61">(<argument pos:start="43:16" pos:end="43:28"><expr pos:start="43:16" pos:end="43:28"><name pos:start="43:16" pos:end="43:28"><name pos:start="43:16" pos:end="43:18">env</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:28">xmm_regs</name></name></expr></argument>, <argument pos:start="43:31" pos:end="43:42"><expr pos:start="43:31" pos:end="43:42"><name pos:start="43:31" pos:end="43:42"><name pos:start="43:31" pos:end="43:32">fp</name><operator pos:start="43:33" pos:end="43:34">-&gt;</operator><name pos:start="43:35" pos:end="43:42">xmm_regs</name></name></expr></argument>, <argument pos:start="43:45" pos:end="43:60"><expr pos:start="43:45" pos:end="43:60"><name pos:start="43:45" pos:end="43:55">CPU_NB_REGS</name> <operator pos:start="43:57" pos:end="43:57">*</operator> <literal type="number" pos:start="43:59" pos:end="43:60">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="49:5" pos:end="49:52">/* we must restore the default rounding state */</comment>

    <asm pos:start="51:5" pos:end="51:28">asm <specifier pos:start="51:9" pos:end="51:16">volatile</specifier> ("fninit");</asm>

    <expr_stmt pos:start="53:5" pos:end="53:44"><expr pos:start="53:5" pos:end="53:43"><name pos:start="53:5" pos:end="53:8">fpuc</name> <operator pos:start="53:10" pos:end="53:10">=</operator> <literal type="number" pos:start="53:12" pos:end="53:17">0x037f</literal> <operator pos:start="53:19" pos:end="53:19">|</operator> <operator pos:start="53:21" pos:end="53:21">(</operator><name pos:start="53:22" pos:end="53:30"><name pos:start="53:22" pos:end="53:24">env</name><operator pos:start="53:25" pos:end="53:26">-&gt;</operator><name pos:start="53:27" pos:end="53:30">fpuc</name></name> <operator pos:start="53:32" pos:end="53:32">&amp;</operator> <operator pos:start="53:34" pos:end="53:34">(</operator><literal type="number" pos:start="53:35" pos:end="53:35">3</literal> <operator pos:start="53:37" pos:end="53:38">&lt;&lt;</operator> <literal type="number" pos:start="53:40" pos:end="53:41">10</literal><operator pos:start="53:42" pos:end="53:42">)</operator><operator pos:start="53:43" pos:end="53:43">)</operator></expr>;</expr_stmt>

    <asm pos:start="55:5" pos:end="55:44">asm <specifier pos:start="55:9" pos:end="55:16">volatile</specifier>("fldcw %0" : : "m" (fpuc));</asm>

</block_content>}</block></function>
</unit>
