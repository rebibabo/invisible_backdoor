<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13948.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:26">worker_thread</name><parameter_list pos:start="1:27" pos:end="1:40">(<parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:33"><name pos:start="1:28" pos:end="1:31">void</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:39">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="89:1">{<block_content pos:start="5:5" pos:end="87:16">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">ThreadPool</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:20">pool</name> <init pos:start="5:22" pos:end="5:29">= <expr pos:start="5:24" pos:end="5:29"><name pos:start="5:24" pos:end="5:29">opaque</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:33"><expr pos:start="9:5" pos:end="9:32"><call pos:start="9:5" pos:end="9:32"><name pos:start="9:5" pos:end="9:19">qemu_mutex_lock</name><argument_list pos:start="9:20" pos:end="9:32">(<argument pos:start="9:21" pos:end="9:31"><expr pos:start="9:21" pos:end="9:31"><operator pos:start="9:21" pos:end="9:21">&amp;</operator><name pos:start="9:22" pos:end="9:31"><name pos:start="9:22" pos:end="9:25">pool</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:31">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:28"><expr pos:start="11:5" pos:end="11:27"><name pos:start="11:5" pos:end="11:25"><name pos:start="11:5" pos:end="11:8">pool</name><operator pos:start="11:9" pos:end="11:10">-&gt;</operator><name pos:start="11:11" pos:end="11:25">pending_threads</name></name><operator pos:start="11:26" pos:end="11:27">--</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:26"><expr pos:start="13:5" pos:end="13:25"><call pos:start="13:5" pos:end="13:25"><name pos:start="13:5" pos:end="13:19">do_spawn_thread</name><argument_list pos:start="13:20" pos:end="13:25">(<argument pos:start="13:21" pos:end="13:24"><expr pos:start="13:21" pos:end="13:24"><name pos:start="13:21" pos:end="13:24">pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="17:5" pos:end="77:5">while <condition pos:start="17:11" pos:end="17:27">(<expr pos:start="17:12" pos:end="17:26"><operator pos:start="17:12" pos:end="17:12">!</operator><name pos:start="17:13" pos:end="17:26"><name pos:start="17:13" pos:end="17:16">pool</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:26">stopping</name></name></expr>)</condition> <block pos:start="17:29" pos:end="77:5">{<block_content pos:start="19:9" pos:end="75:46">

        <decl_stmt pos:start="19:9" pos:end="19:31"><decl pos:start="19:9" pos:end="19:30"><type pos:start="19:9" pos:end="19:27"><name pos:start="19:9" pos:end="19:25">ThreadPoolElement</name> <modifier pos:start="19:27" pos:end="19:27">*</modifier></type><name pos:start="19:28" pos:end="19:30">req</name></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="21:16"><decl pos:start="21:9" pos:end="21:15"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:15">ret</name></decl>;</decl_stmt>



        <do pos:start="25:9" pos:end="37:66">do <block pos:start="25:12" pos:end="37:9">{<block_content pos:start="27:13" pos:end="35:33">

            <expr_stmt pos:start="27:13" pos:end="27:33"><expr pos:start="27:13" pos:end="27:32"><name pos:start="27:13" pos:end="27:30"><name pos:start="27:13" pos:end="27:16">pool</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:30">idle_threads</name></name><operator pos:start="27:31" pos:end="27:32">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:43"><expr pos:start="29:13" pos:end="29:42"><call pos:start="29:13" pos:end="29:42"><name pos:start="29:13" pos:end="29:29">qemu_mutex_unlock</name><argument_list pos:start="29:30" pos:end="29:42">(<argument pos:start="29:31" pos:end="29:41"><expr pos:start="29:31" pos:end="29:41"><operator pos:start="29:31" pos:end="29:31">&amp;</operator><name pos:start="29:32" pos:end="29:41"><name pos:start="29:32" pos:end="29:35">pool</name><operator pos:start="29:36" pos:end="29:37">-&gt;</operator><name pos:start="29:38" pos:end="29:41">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:56"><expr pos:start="31:13" pos:end="31:55"><name pos:start="31:13" pos:end="31:15">ret</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <call pos:start="31:19" pos:end="31:55"><name pos:start="31:19" pos:end="31:36">qemu_sem_timedwait</name><argument_list pos:start="31:37" pos:end="31:55">(<argument pos:start="31:38" pos:end="31:47"><expr pos:start="31:38" pos:end="31:47"><operator pos:start="31:38" pos:end="31:38">&amp;</operator><name pos:start="31:39" pos:end="31:47"><name pos:start="31:39" pos:end="31:42">pool</name><operator pos:start="31:43" pos:end="31:44">-&gt;</operator><name pos:start="31:45" pos:end="31:47">sem</name></name></expr></argument>, <argument pos:start="31:50" pos:end="31:54"><expr pos:start="31:50" pos:end="31:54"><literal type="number" pos:start="31:50" pos:end="31:54">10000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:41"><expr pos:start="33:13" pos:end="33:40"><call pos:start="33:13" pos:end="33:40"><name pos:start="33:13" pos:end="33:27">qemu_mutex_lock</name><argument_list pos:start="33:28" pos:end="33:40">(<argument pos:start="33:29" pos:end="33:39"><expr pos:start="33:29" pos:end="33:39"><operator pos:start="33:29" pos:end="33:29">&amp;</operator><name pos:start="33:30" pos:end="33:39"><name pos:start="33:30" pos:end="33:33">pool</name><operator pos:start="33:34" pos:end="33:35">-&gt;</operator><name pos:start="33:36" pos:end="33:39">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:33"><expr pos:start="35:13" pos:end="35:32"><name pos:start="35:13" pos:end="35:30"><name pos:start="35:13" pos:end="35:16">pool</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:30">idle_threads</name></name><operator pos:start="35:31" pos:end="35:32">--</operator></expr>;</expr_stmt>

        </block_content>}</block> while <condition pos:start="37:17" pos:end="37:65">(<expr pos:start="37:18" pos:end="37:64"><name pos:start="37:18" pos:end="37:20">ret</name> <operator pos:start="37:22" pos:end="37:23">==</operator> <operator pos:start="37:25" pos:end="37:25">-</operator><literal type="number" pos:start="37:26" pos:end="37:26">1</literal> <operator pos:start="37:28" pos:end="37:29">&amp;&amp;</operator> <operator pos:start="37:31" pos:end="37:31">!</operator><call pos:start="37:32" pos:end="37:64"><name pos:start="37:32" pos:end="37:43">QTAILQ_EMPTY</name><argument_list pos:start="37:44" pos:end="37:64">(<argument pos:start="37:45" pos:end="37:63"><expr pos:start="37:45" pos:end="37:63"><operator pos:start="37:45" pos:end="37:45">&amp;</operator><name pos:start="37:46" pos:end="37:63"><name pos:start="37:46" pos:end="37:49">pool</name><operator pos:start="37:50" pos:end="37:51">-&gt;</operator><name pos:start="37:52" pos:end="37:63">request_list</name></name></expr></argument>)</argument_list></call></expr>)</condition>;</do>

        <if_stmt pos:start="39:9" pos:end="43:9"><if pos:start="39:9" pos:end="43:9">if <condition pos:start="39:12" pos:end="39:40">(<expr pos:start="39:13" pos:end="39:39"><name pos:start="39:13" pos:end="39:15">ret</name> <operator pos:start="39:17" pos:end="39:18">==</operator> <operator pos:start="39:20" pos:end="39:20">-</operator><literal type="number" pos:start="39:21" pos:end="39:21">1</literal> <operator pos:start="39:23" pos:end="39:24">||</operator> <name pos:start="39:26" pos:end="39:39"><name pos:start="39:26" pos:end="39:29">pool</name><operator pos:start="39:30" pos:end="39:31">-&gt;</operator><name pos:start="39:32" pos:end="39:39">stopping</name></name></expr>)</condition> <block pos:start="39:42" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:18">

            <break pos:start="41:13" pos:end="41:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="47:9" pos:end="47:48"><expr pos:start="47:9" pos:end="47:47"><name pos:start="47:9" pos:end="47:11">req</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <call pos:start="47:15" pos:end="47:47"><name pos:start="47:15" pos:end="47:26">QTAILQ_FIRST</name><argument_list pos:start="47:27" pos:end="47:47">(<argument pos:start="47:28" pos:end="47:46"><expr pos:start="47:28" pos:end="47:46"><operator pos:start="47:28" pos:end="47:28">&amp;</operator><name pos:start="47:29" pos:end="47:46"><name pos:start="47:29" pos:end="47:32">pool</name><operator pos:start="47:33" pos:end="47:34">-&gt;</operator><name pos:start="47:35" pos:end="47:46">request_list</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:54"><expr pos:start="49:9" pos:end="49:53"><call pos:start="49:9" pos:end="49:53"><name pos:start="49:9" pos:end="49:21">QTAILQ_REMOVE</name><argument_list pos:start="49:22" pos:end="49:53">(<argument pos:start="49:23" pos:end="49:41"><expr pos:start="49:23" pos:end="49:41"><operator pos:start="49:23" pos:end="49:23">&amp;</operator><name pos:start="49:24" pos:end="49:41"><name pos:start="49:24" pos:end="49:27">pool</name><operator pos:start="49:28" pos:end="49:29">-&gt;</operator><name pos:start="49:30" pos:end="49:41">request_list</name></name></expr></argument>, <argument pos:start="49:44" pos:end="49:46"><expr pos:start="49:44" pos:end="49:46"><name pos:start="49:44" pos:end="49:46">req</name></expr></argument>, <argument pos:start="49:49" pos:end="49:52"><expr pos:start="49:49" pos:end="49:52"><name pos:start="49:49" pos:end="49:52">reqs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:35"><expr pos:start="51:9" pos:end="51:34"><name pos:start="51:9" pos:end="51:18"><name pos:start="51:9" pos:end="51:11">req</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:18">state</name></name> <operator pos:start="51:20" pos:end="51:20">=</operator> <name pos:start="51:22" pos:end="51:34">THREAD_ACTIVE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:39"><expr pos:start="53:9" pos:end="53:38"><call pos:start="53:9" pos:end="53:38"><name pos:start="53:9" pos:end="53:25">qemu_mutex_unlock</name><argument_list pos:start="53:26" pos:end="53:38">(<argument pos:start="53:27" pos:end="53:37"><expr pos:start="53:27" pos:end="53:37"><operator pos:start="53:27" pos:end="53:27">&amp;</operator><name pos:start="53:28" pos:end="53:37"><name pos:start="53:28" pos:end="53:31">pool</name><operator pos:start="53:32" pos:end="53:33">-&gt;</operator><name pos:start="53:34" pos:end="53:37">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="57:9" pos:end="57:34"><expr pos:start="57:9" pos:end="57:33"><name pos:start="57:9" pos:end="57:11">ret</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <call pos:start="57:15" pos:end="57:33"><name pos:start="57:15" pos:end="57:23"><name pos:start="57:15" pos:end="57:17">req</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:23">func</name></name><argument_list pos:start="57:24" pos:end="57:33">(<argument pos:start="57:25" pos:end="57:32"><expr pos:start="57:25" pos:end="57:32"><name pos:start="57:25" pos:end="57:32"><name pos:start="57:25" pos:end="57:27">req</name><operator pos:start="57:28" pos:end="57:29">-&gt;</operator><name pos:start="57:30" pos:end="57:32">arg</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:23"><expr pos:start="61:9" pos:end="61:22"><name pos:start="61:9" pos:end="61:16"><name pos:start="61:9" pos:end="61:11">req</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:16">ret</name></name> <operator pos:start="61:18" pos:end="61:18">=</operator> <name pos:start="61:20" pos:end="61:22">ret</name></expr>;</expr_stmt>

        <comment type="block" pos:start="63:9" pos:end="63:38">/* Write ret before state.  */</comment>

        <expr_stmt pos:start="65:9" pos:end="65:18"><expr pos:start="65:9" pos:end="65:17"><call pos:start="65:9" pos:end="65:17"><name pos:start="65:9" pos:end="65:15">smp_wmb</name><argument_list pos:start="65:16" pos:end="65:17">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:33"><expr pos:start="67:9" pos:end="67:32"><name pos:start="67:9" pos:end="67:18"><name pos:start="67:9" pos:end="67:11">req</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:18">state</name></name> <operator pos:start="67:20" pos:end="67:20">=</operator> <name pos:start="67:22" pos:end="67:32">THREAD_DONE</name></expr>;</expr_stmt>



        <expr_stmt pos:start="71:9" pos:end="71:37"><expr pos:start="71:9" pos:end="71:36"><call pos:start="71:9" pos:end="71:36"><name pos:start="71:9" pos:end="71:23">qemu_mutex_lock</name><argument_list pos:start="71:24" pos:end="71:36">(<argument pos:start="71:25" pos:end="71:35"><expr pos:start="71:25" pos:end="71:35"><operator pos:start="71:25" pos:end="71:25">&amp;</operator><name pos:start="71:26" pos:end="71:35"><name pos:start="71:26" pos:end="71:29">pool</name><operator pos:start="71:30" pos:end="71:31">-&gt;</operator><name pos:start="71:32" pos:end="71:35">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:46"><expr pos:start="75:9" pos:end="75:45"><call pos:start="75:9" pos:end="75:45"><name pos:start="75:9" pos:end="75:24">qemu_bh_schedule</name><argument_list pos:start="75:25" pos:end="75:45">(<argument pos:start="75:26" pos:end="75:44"><expr pos:start="75:26" pos:end="75:44"><name pos:start="75:26" pos:end="75:44"><name pos:start="75:26" pos:end="75:29">pool</name><operator pos:start="75:30" pos:end="75:31">-&gt;</operator><name pos:start="75:32" pos:end="75:44">completion_bh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="81:5" pos:end="81:24"><expr pos:start="81:5" pos:end="81:23"><name pos:start="81:5" pos:end="81:21"><name pos:start="81:5" pos:end="81:8">pool</name><operator pos:start="81:9" pos:end="81:10">-&gt;</operator><name pos:start="81:11" pos:end="81:21">cur_threads</name></name><operator pos:start="81:22" pos:end="81:23">--</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:44"><expr pos:start="83:5" pos:end="83:43"><call pos:start="83:5" pos:end="83:43"><name pos:start="83:5" pos:end="83:20">qemu_cond_signal</name><argument_list pos:start="83:21" pos:end="83:43">(<argument pos:start="83:22" pos:end="83:42"><expr pos:start="83:22" pos:end="83:42"><operator pos:start="83:22" pos:end="83:22">&amp;</operator><name pos:start="83:23" pos:end="83:42"><name pos:start="83:23" pos:end="83:26">pool</name><operator pos:start="83:27" pos:end="83:28">-&gt;</operator><name pos:start="83:29" pos:end="83:42">worker_stopped</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:35"><expr pos:start="85:5" pos:end="85:34"><call pos:start="85:5" pos:end="85:34"><name pos:start="85:5" pos:end="85:21">qemu_mutex_unlock</name><argument_list pos:start="85:22" pos:end="85:34">(<argument pos:start="85:23" pos:end="85:33"><expr pos:start="85:23" pos:end="85:33"><operator pos:start="85:23" pos:end="85:23">&amp;</operator><name pos:start="85:24" pos:end="85:33"><name pos:start="85:24" pos:end="85:27">pool</name><operator pos:start="85:28" pos:end="85:29">-&gt;</operator><name pos:start="85:30" pos:end="85:33">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="87:5" pos:end="87:16">return <expr pos:start="87:12" pos:end="87:15"><name pos:start="87:12" pos:end="87:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
