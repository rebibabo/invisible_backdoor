<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3474.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:36">qht_bucket_reset__locked</name><parameter_list pos:start="1:37" pos:end="1:61">(<parameter pos:start="1:38" pos:end="1:60"><decl pos:start="1:38" pos:end="1:60"><type pos:start="1:38" pos:end="1:60"><name pos:start="1:38" pos:end="1:54"><name pos:start="1:38" pos:end="1:43">struct</name> <name pos:start="1:45" pos:end="1:54">qht_bucket</name></name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:60">head</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:39">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:21">qht_bucket</name></name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:24">b</name> <init pos:start="5:26" pos:end="5:31">= <expr pos:start="5:28" pos:end="5:31"><name pos:start="5:28" pos:end="5:31">head</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:41"><expr pos:start="11:5" pos:end="11:40"><call pos:start="11:5" pos:end="11:40"><name pos:start="11:5" pos:end="11:23">seqlock_write_begin</name><argument_list pos:start="11:24" pos:end="11:40">(<argument pos:start="11:25" pos:end="11:39"><expr pos:start="11:25" pos:end="11:39"><operator pos:start="11:25" pos:end="11:25">&amp;</operator><name pos:start="11:26" pos:end="11:39"><name pos:start="11:26" pos:end="11:29">head</name><operator pos:start="11:30" pos:end="11:31">-&gt;</operator><name pos:start="11:32" pos:end="11:39">sequence</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <do pos:start="13:5" pos:end="31:16">do <block pos:start="13:8" pos:end="31:5">{<block_content pos:start="15:9" pos:end="29:20">

        <for pos:start="15:9" pos:end="27:9">for <control pos:start="15:13" pos:end="15:48">(<init pos:start="15:14" pos:end="15:19"><expr pos:start="15:14" pos:end="15:18"><name pos:start="15:14" pos:end="15:14">i</name> <operator pos:start="15:16" pos:end="15:16">=</operator> <literal type="number" pos:start="15:18" pos:end="15:18">0</literal></expr>;</init> <condition pos:start="15:21" pos:end="15:43"><expr pos:start="15:21" pos:end="15:42"><name pos:start="15:21" pos:end="15:21">i</name> <operator pos:start="15:23" pos:end="15:23">&lt;</operator> <name pos:start="15:25" pos:end="15:42">QHT_BUCKET_ENTRIES</name></expr>;</condition> <incr pos:start="15:45" pos:end="15:47"><expr pos:start="15:45" pos:end="15:47"><name pos:start="15:45" pos:end="15:45">i</name><operator pos:start="15:46" pos:end="15:47">++</operator></expr></incr>)</control> <block pos:start="15:50" pos:end="27:9">{<block_content pos:start="17:13" pos:end="25:46">

            <if_stmt pos:start="17:13" pos:end="21:13"><if pos:start="17:13" pos:end="21:13">if <condition pos:start="17:16" pos:end="17:39">(<expr pos:start="17:17" pos:end="17:38"><name pos:start="17:17" pos:end="17:30"><name pos:start="17:17" pos:end="17:17">b</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:27">pointers</name><index pos:start="17:28" pos:end="17:30">[<expr pos:start="17:29" pos:end="17:29"><name pos:start="17:29" pos:end="17:29">i</name></expr>]</index></name> <operator pos:start="17:32" pos:end="17:33">==</operator> <name pos:start="17:35" pos:end="17:38">NULL</name></expr>)</condition> <block pos:start="17:41" pos:end="21:13">{<block_content pos:start="19:17" pos:end="19:26">

                <goto pos:start="19:17" pos:end="19:26">goto <name pos:start="19:22" pos:end="19:25">done</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:29"><expr pos:start="23:13" pos:end="23:28"><name pos:start="23:13" pos:end="23:24"><name pos:start="23:13" pos:end="23:13">b</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:21">hashes</name><index pos:start="23:22" pos:end="23:24">[<expr pos:start="23:23" pos:end="23:23"><name pos:start="23:23" pos:end="23:23">i</name></expr>]</index></name> <operator pos:start="23:26" pos:end="23:26">=</operator> <literal type="number" pos:start="23:28" pos:end="23:28">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:46"><expr pos:start="25:13" pos:end="25:45"><call pos:start="25:13" pos:end="25:45"><name pos:start="25:13" pos:end="25:22">atomic_set</name><argument_list pos:start="25:23" pos:end="25:45">(<argument pos:start="25:24" pos:end="25:38"><expr pos:start="25:24" pos:end="25:38"><operator pos:start="25:24" pos:end="25:24">&amp;</operator><name pos:start="25:25" pos:end="25:38"><name pos:start="25:25" pos:end="25:25">b</name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:35">pointers</name><index pos:start="25:36" pos:end="25:38">[<expr pos:start="25:37" pos:end="25:37"><name pos:start="25:37" pos:end="25:37">i</name></expr>]</index></name></expr></argument>, <argument pos:start="25:41" pos:end="25:44"><expr pos:start="25:41" pos:end="25:44"><name pos:start="25:41" pos:end="25:44">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="29:9" pos:end="29:20"><expr pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:9">b</name> <operator pos:start="29:11" pos:end="29:11">=</operator> <name pos:start="29:13" pos:end="29:19"><name pos:start="29:13" pos:end="29:13">b</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:19">next</name></name></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="31:13" pos:end="31:15">(<expr pos:start="31:14" pos:end="31:14"><name pos:start="31:14" pos:end="31:14">b</name></expr>)</condition>;</do>

 <label pos:start="33:2" pos:end="33:6"><name pos:start="33:2" pos:end="33:5">done</name>:</label>

    <expr_stmt pos:start="35:5" pos:end="35:39"><expr pos:start="35:5" pos:end="35:38"><call pos:start="35:5" pos:end="35:38"><name pos:start="35:5" pos:end="35:21">seqlock_write_end</name><argument_list pos:start="35:22" pos:end="35:38">(<argument pos:start="35:23" pos:end="35:37"><expr pos:start="35:23" pos:end="35:37"><operator pos:start="35:23" pos:end="35:23">&amp;</operator><name pos:start="35:24" pos:end="35:37"><name pos:start="35:24" pos:end="35:27">head</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:37">sequence</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
