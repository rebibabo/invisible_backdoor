<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17364.c" pos:tabs="8"><function pos:start="1:1" pos:end="28:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:23">address_space_init</name><parameter_list pos:start="1:24" pos:end="1:79">(<parameter pos:start="1:25" pos:end="1:40"><decl pos:start="1:25" pos:end="1:40"><type pos:start="1:25" pos:end="1:40"><name pos:start="1:25" pos:end="1:36">AddressSpace</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:40">as</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:60"><decl pos:start="1:43" pos:end="1:60"><type pos:start="1:43" pos:end="1:60"><name pos:start="1:43" pos:end="1:54">MemoryRegion</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:60">root</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:78"><decl pos:start="1:63" pos:end="1:78"><type pos:start="1:63" pos:end="1:78"><specifier pos:start="1:63" pos:end="1:67">const</specifier> <name pos:start="1:69" pos:end="1:72">char</name> <modifier pos:start="1:74" pos:end="1:74">*</modifier></type><name pos:start="1:75" pos:end="1:78">name</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="28:1">{<block_content pos:start="6:5" pos:end="26:39">


    <expr_stmt pos:start="6:5" pos:end="6:38"><expr pos:start="6:5" pos:end="6:37"><call pos:start="6:5" pos:end="6:37"><name pos:start="6:5" pos:end="6:35">memory_region_transaction_begin</name><argument_list pos:start="6:36" pos:end="6:37">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="8:5" pos:end="8:20"><expr pos:start="8:5" pos:end="8:19"><name pos:start="8:5" pos:end="8:12"><name pos:start="8:5" pos:end="8:6">as</name><operator pos:start="8:7" pos:end="8:8">-&gt;</operator><name pos:start="8:9" pos:end="8:12">root</name></name> <operator pos:start="8:14" pos:end="8:14">=</operator> <name pos:start="8:16" pos:end="8:19">root</name></expr>;</expr_stmt>

    <expr_stmt pos:start="10:5" pos:end="10:41"><expr pos:start="10:5" pos:end="10:40"><name pos:start="10:5" pos:end="10:19"><name pos:start="10:5" pos:end="10:6">as</name><operator pos:start="10:7" pos:end="10:8">-&gt;</operator><name pos:start="10:9" pos:end="10:19">current_map</name></name> <operator pos:start="10:21" pos:end="10:21">=</operator> <call pos:start="10:23" pos:end="10:40"><name pos:start="10:23" pos:end="10:27">g_new</name><argument_list pos:start="10:28" pos:end="10:40">(<argument pos:start="10:29" pos:end="10:36"><expr pos:start="10:29" pos:end="10:36"><name pos:start="10:29" pos:end="10:36">FlatView</name></expr></argument>, <argument pos:start="10:39" pos:end="10:39"><expr pos:start="10:39" pos:end="10:39"><literal type="number" pos:start="10:39" pos:end="10:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="12:5" pos:end="12:35"><expr pos:start="12:5" pos:end="12:34"><call pos:start="12:5" pos:end="12:34"><name pos:start="12:5" pos:end="12:17">flatview_init</name><argument_list pos:start="12:18" pos:end="12:34">(<argument pos:start="12:19" pos:end="12:33"><expr pos:start="12:19" pos:end="12:33"><name pos:start="12:19" pos:end="12:33"><name pos:start="12:19" pos:end="12:20">as</name><operator pos:start="12:21" pos:end="12:22">-&gt;</operator><name pos:start="12:23" pos:end="12:33">current_map</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="14:5" pos:end="14:25"><expr pos:start="14:5" pos:end="14:24"><name pos:start="14:5" pos:end="14:20"><name pos:start="14:5" pos:end="14:6">as</name><operator pos:start="14:7" pos:end="14:8">-&gt;</operator><name pos:start="14:9" pos:end="14:20">ioeventfd_nb</name></name> <operator pos:start="14:22" pos:end="14:22">=</operator> <literal type="number" pos:start="14:24" pos:end="14:24">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="16:5" pos:end="16:26"><expr pos:start="16:5" pos:end="16:25"><name pos:start="16:5" pos:end="16:18"><name pos:start="16:5" pos:end="16:6">as</name><operator pos:start="16:7" pos:end="16:8">-&gt;</operator><name pos:start="16:9" pos:end="16:18">ioeventfds</name></name> <operator pos:start="16:20" pos:end="16:20">=</operator> <name pos:start="16:22" pos:end="16:25">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="18:5" pos:end="18:65"><expr pos:start="18:5" pos:end="18:64"><call pos:start="18:5" pos:end="18:64"><name pos:start="18:5" pos:end="18:22">QTAILQ_INSERT_TAIL</name><argument_list pos:start="18:23" pos:end="18:64">(<argument pos:start="18:24" pos:end="18:38"><expr pos:start="18:24" pos:end="18:38"><operator pos:start="18:24" pos:end="18:24">&amp;</operator><name pos:start="18:25" pos:end="18:38">address_spaces</name></expr></argument>, <argument pos:start="18:41" pos:end="18:42"><expr pos:start="18:41" pos:end="18:42"><name pos:start="18:41" pos:end="18:42">as</name></expr></argument>, <argument pos:start="18:45" pos:end="18:63"><expr pos:start="18:45" pos:end="18:63"><name pos:start="18:45" pos:end="18:63">address_spaces_link</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="20:5" pos:end="20:51"><expr pos:start="20:5" pos:end="20:50"><name pos:start="20:5" pos:end="20:12"><name pos:start="20:5" pos:end="20:6">as</name><operator pos:start="20:7" pos:end="20:8">-&gt;</operator><name pos:start="20:9" pos:end="20:12">name</name></name> <operator pos:start="20:14" pos:end="20:14">=</operator> <call pos:start="20:16" pos:end="20:50"><name pos:start="20:16" pos:end="20:23">g_strdup</name><argument_list pos:start="20:24" pos:end="20:50">(<argument pos:start="20:25" pos:end="20:49"><expr pos:start="20:25" pos:end="20:49"><ternary pos:start="20:25" pos:end="20:49"><condition pos:start="20:25" pos:end="20:30"><expr pos:start="20:25" pos:end="20:28"><name pos:start="20:25" pos:end="20:28">name</name></expr> ?</condition><then pos:start="20:32" pos:end="20:35"> <expr pos:start="20:32" pos:end="20:35"><name pos:start="20:32" pos:end="20:35">name</name></expr> </then><else pos:start="20:37" pos:end="20:49">: <expr pos:start="20:39" pos:end="20:49"><literal type="string" pos:start="20:39" pos:end="20:49">"anonymous"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="22:5" pos:end="22:36"><expr pos:start="22:5" pos:end="22:35"><call pos:start="22:5" pos:end="22:35"><name pos:start="22:5" pos:end="22:31">address_space_init_dispatch</name><argument_list pos:start="22:32" pos:end="22:35">(<argument pos:start="22:33" pos:end="22:34"><expr pos:start="22:33" pos:end="22:34"><name pos:start="22:33" pos:end="22:34">as</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="24:5" pos:end="24:50"><expr pos:start="24:5" pos:end="24:49"><name pos:start="24:5" pos:end="24:32">memory_region_update_pending</name> <operator pos:start="24:34" pos:end="24:35">|=</operator> <name pos:start="24:37" pos:end="24:49"><name pos:start="24:37" pos:end="24:40">root</name><operator pos:start="24:41" pos:end="24:42">-&gt;</operator><name pos:start="24:43" pos:end="24:49">enabled</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="26:5" pos:end="26:39"><expr pos:start="26:5" pos:end="26:38"><call pos:start="26:5" pos:end="26:38"><name pos:start="26:5" pos:end="26:36">memory_region_transaction_commit</name><argument_list pos:start="26:37" pos:end="26:38">()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function></unit>
