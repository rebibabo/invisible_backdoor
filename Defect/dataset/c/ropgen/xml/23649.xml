<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23649.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">read_cpuinfo</name><parameter_list pos:start="1:24" pos:end="1:64">(<parameter pos:start="1:25" pos:end="1:41"><decl pos:start="1:25" pos:end="1:41"><type pos:start="1:25" pos:end="1:41"><specifier pos:start="1:25" pos:end="1:29">const</specifier> <name pos:start="1:31" pos:end="1:34">char</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:41">field</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:54"><decl pos:start="1:44" pos:end="1:54"><type pos:start="1:44" pos:end="1:54"><name pos:start="1:44" pos:end="1:47">char</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:54">value</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:63"><decl pos:start="1:57" pos:end="1:63"><type pos:start="1:57" pos:end="1:63"><name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:63">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:15">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">FILE</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:11">f</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name> <init pos:start="7:13" pos:end="7:16">= <expr pos:start="7:15" pos:end="7:16"><operator pos:start="7:15" pos:end="7:15">-</operator><literal type="number" pos:start="7:16" pos:end="7:16">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:17">field_len</name> <init pos:start="9:19" pos:end="9:33">= <expr pos:start="9:21" pos:end="9:33"><call pos:start="9:21" pos:end="9:33"><name pos:start="9:21" pos:end="9:26">strlen</name><argument_list pos:start="9:27" pos:end="9:33">(<argument pos:start="9:28" pos:end="9:32"><expr pos:start="9:28" pos:end="9:32"><name pos:start="9:28" pos:end="9:32">field</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:18"><name pos:start="11:10" pos:end="11:13">line</name><index pos:start="11:14" pos:end="11:18">[<expr pos:start="11:15" pos:end="11:17"><literal type="number" pos:start="11:15" pos:end="11:17">512</literal></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:36"><expr pos:start="15:5" pos:end="15:35"><name pos:start="15:5" pos:end="15:5">f</name> <operator pos:start="15:7" pos:end="15:7">=</operator> <call pos:start="15:9" pos:end="15:35"><name pos:start="15:9" pos:end="15:13">fopen</name><argument_list pos:start="15:14" pos:end="15:35">(<argument pos:start="15:15" pos:end="15:29"><expr pos:start="15:15" pos:end="15:29"><literal type="string" pos:start="15:15" pos:end="15:29">"/proc/cpuinfo"</literal></expr></argument>, <argument pos:start="15:32" pos:end="15:34"><expr pos:start="15:32" pos:end="15:34"><literal type="string" pos:start="15:32" pos:end="15:34">"r"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:11">(<expr pos:start="17:9" pos:end="17:10"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:10">f</name></expr>)</condition> <block pos:start="17:13" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:18">

        <return pos:start="19:9" pos:end="19:18">return <expr pos:start="19:16" pos:end="19:17"><operator pos:start="19:16" pos:end="19:16">-</operator><literal type="number" pos:start="19:17" pos:end="19:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <do pos:start="25:5" pos:end="43:19">do <block pos:start="25:8" pos:end="43:5">{<block_content pos:start="27:9" pos:end="41:9">

        <if_stmt pos:start="27:9" pos:end="31:9"><if pos:start="27:9" pos:end="31:9">if<condition pos:start="27:11" pos:end="27:41">(<expr pos:start="27:12" pos:end="27:40"><operator pos:start="27:12" pos:end="27:12">!</operator><call pos:start="27:13" pos:end="27:40"><name pos:start="27:13" pos:end="27:17">fgets</name><argument_list pos:start="27:18" pos:end="27:40">(<argument pos:start="27:19" pos:end="27:22"><expr pos:start="27:19" pos:end="27:22"><name pos:start="27:19" pos:end="27:22">line</name></expr></argument>, <argument pos:start="27:25" pos:end="27:36"><expr pos:start="27:25" pos:end="27:36"><sizeof pos:start="27:25" pos:end="27:36">sizeof<argument_list pos:start="27:31" pos:end="27:36">(<argument pos:start="27:32" pos:end="27:35"><expr pos:start="27:32" pos:end="27:35"><name pos:start="27:32" pos:end="27:35">line</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="27:39" pos:end="27:39"><expr pos:start="27:39" pos:end="27:39"><name pos:start="27:39" pos:end="27:39">f</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:43" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:18">

            <break pos:start="29:13" pos:end="29:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="33:9" pos:end="41:9"><if pos:start="33:9" pos:end="41:9">if <condition pos:start="33:12" pos:end="33:45">(<expr pos:start="33:13" pos:end="33:44"><operator pos:start="33:13" pos:end="33:13">!</operator><call pos:start="33:14" pos:end="33:44"><name pos:start="33:14" pos:end="33:20">strncmp</name><argument_list pos:start="33:21" pos:end="33:44">(<argument pos:start="33:22" pos:end="33:25"><expr pos:start="33:22" pos:end="33:25"><name pos:start="33:22" pos:end="33:25">line</name></expr></argument>, <argument pos:start="33:28" pos:end="33:32"><expr pos:start="33:28" pos:end="33:32"><name pos:start="33:28" pos:end="33:32">field</name></expr></argument>, <argument pos:start="33:35" pos:end="33:43"><expr pos:start="33:35" pos:end="33:43"><name pos:start="33:35" pos:end="33:43">field_len</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:47" pos:end="41:9">{<block_content pos:start="35:13" pos:end="39:18">

            <expr_stmt pos:start="35:13" pos:end="35:38"><expr pos:start="35:13" pos:end="35:37"><call pos:start="35:13" pos:end="35:37"><name pos:start="35:13" pos:end="35:19">strncpy</name><argument_list pos:start="35:20" pos:end="35:37">(<argument pos:start="35:21" pos:end="35:25"><expr pos:start="35:21" pos:end="35:25"><name pos:start="35:21" pos:end="35:25">value</name></expr></argument>, <argument pos:start="35:28" pos:end="35:31"><expr pos:start="35:28" pos:end="35:31"><name pos:start="35:28" pos:end="35:31">line</name></expr></argument>, <argument pos:start="35:34" pos:end="35:36"><expr pos:start="35:34" pos:end="35:36"><name pos:start="35:34" pos:end="35:36">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:20"><expr pos:start="37:13" pos:end="37:19"><name pos:start="37:13" pos:end="37:15">ret</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <literal type="number" pos:start="37:19" pos:end="37:19">0</literal></expr>;</expr_stmt>

            <break pos:start="39:13" pos:end="39:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block> while<condition pos:start="43:12" pos:end="43:18">(<expr pos:start="43:13" pos:end="43:17"><operator pos:start="43:13" pos:end="43:13">*</operator><name pos:start="43:14" pos:end="43:17">line</name></expr>)</condition>;</do>



    <expr_stmt pos:start="47:5" pos:end="47:14"><expr pos:start="47:5" pos:end="47:13"><call pos:start="47:5" pos:end="47:13"><name pos:start="47:5" pos:end="47:10">fclose</name><argument_list pos:start="47:11" pos:end="47:13">(<argument pos:start="47:12" pos:end="47:12"><expr pos:start="47:12" pos:end="47:12"><name pos:start="47:12" pos:end="47:12">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="51:5" pos:end="51:15">return <expr pos:start="51:12" pos:end="51:14"><name pos:start="51:12" pos:end="51:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
