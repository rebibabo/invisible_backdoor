<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23132.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">input_get_buffer</name><parameter_list pos:start="1:28" pos:end="1:64">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">codec</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:63"><decl pos:start="1:52" pos:end="1:63"><type pos:start="1:52" pos:end="1:63"><name pos:start="1:52" pos:end="1:58">AVFrame</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">pic</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="111:1">{<block_content pos:start="5:5" pos:end="109:13">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">AVFilterContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">ctx</name> <init pos:start="5:26" pos:end="5:40">= <expr pos:start="5:28" pos:end="5:40"><name pos:start="5:28" pos:end="5:40"><name pos:start="5:28" pos:end="5:32">codec</name><operator pos:start="5:33" pos:end="5:34">-&gt;</operator><name pos:start="5:35" pos:end="5:40">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:21">AVFilterBufferRef</name>  <modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:27">ref</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">perms</name> <init pos:start="9:15" pos:end="9:29">= <expr pos:start="9:17" pos:end="9:29"><name pos:start="9:17" pos:end="9:29">AV_PERM_WRITE</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:12"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:12">w</name></decl>, <decl pos:start="11:15" pos:end="11:15"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:15" pos:end="11:15">h</name></decl>, <decl pos:start="11:18" pos:end="11:26"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:18" pos:end="11:26"><name pos:start="11:18" pos:end="11:23">stride</name><index pos:start="11:24" pos:end="11:26">[<expr pos:start="11:25" pos:end="11:25"><literal type="number" pos:start="11:25" pos:end="11:25">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">unsigned</name></type> <name pos:start="13:14" pos:end="13:17">edge</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:18">pixel_size</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:51"><expr pos:start="19:5" pos:end="19:50"><call pos:start="19:5" pos:end="19:50"><name pos:start="19:5" pos:end="19:14">av_assert0</name><argument_list pos:start="19:15" pos:end="19:50">(<argument pos:start="19:16" pos:end="19:49"><expr pos:start="19:16" pos:end="19:49"><name pos:start="19:16" pos:end="19:27"><name pos:start="19:16" pos:end="19:20">codec</name><operator pos:start="19:21" pos:end="19:22">-&gt;</operator><name pos:start="19:23" pos:end="19:27">flags</name></name> <operator pos:start="19:29" pos:end="19:29">&amp;</operator> <name pos:start="19:31" pos:end="19:49">CODEC_FLAG_EMU_EDGE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="25:39"><if pos:start="23:5" pos:end="25:39">if <condition pos:start="23:8" pos:end="23:61">(<expr pos:start="23:9" pos:end="23:60"><name pos:start="23:9" pos:end="23:34"><name pos:start="23:9" pos:end="23:13">codec</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:20">codec</name><operator pos:start="23:21" pos:end="23:22">-&gt;</operator><name pos:start="23:23" pos:end="23:34">capabilities</name></name> <operator pos:start="23:36" pos:end="23:36">&amp;</operator> <name pos:start="23:38" pos:end="23:60">CODEC_CAP_NEG_LINESIZES</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:39"><block_content pos:start="25:9" pos:end="25:39">

        <expr_stmt pos:start="25:9" pos:end="25:39"><expr pos:start="25:9" pos:end="25:38"><name pos:start="25:9" pos:end="25:13">perms</name> <operator pos:start="25:15" pos:end="25:16">|=</operator> <name pos:start="25:18" pos:end="25:38">AV_PERM_NEG_LINESIZES</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="37:5"><if pos:start="29:5" pos:end="37:5">if<condition pos:start="29:7" pos:end="29:49">(<expr pos:start="29:8" pos:end="29:48"><name pos:start="29:8" pos:end="29:24"><name pos:start="29:8" pos:end="29:10">pic</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:24">buffer_hints</name></name> <operator pos:start="29:26" pos:end="29:26">&amp;</operator> <name pos:start="29:28" pos:end="29:48">FF_BUFFER_HINTS_VALID</name></expr>)</condition> <block pos:start="29:51" pos:end="37:5">{<block_content pos:start="31:9" pos:end="35:81">

        <if_stmt pos:start="31:9" pos:end="31:79"><if pos:start="31:9" pos:end="31:79">if<condition pos:start="31:11" pos:end="31:56">(<expr pos:start="31:12" pos:end="31:55"><name pos:start="31:12" pos:end="31:28"><name pos:start="31:12" pos:end="31:14">pic</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:28">buffer_hints</name></name> <operator pos:start="31:30" pos:end="31:30">&amp;</operator> <name pos:start="31:32" pos:end="31:55">FF_BUFFER_HINTS_READABLE</name></expr>)</condition><block type="pseudo" pos:start="31:58" pos:end="31:79"><block_content pos:start="31:58" pos:end="31:79"> <expr_stmt pos:start="31:58" pos:end="31:79"><expr pos:start="31:58" pos:end="31:78"><name pos:start="31:58" pos:end="31:62">perms</name> <operator pos:start="31:64" pos:end="31:65">|=</operator> <name pos:start="31:67" pos:end="31:78">AV_PERM_READ</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="33:9" pos:end="33:83"><if pos:start="33:9" pos:end="33:83">if<condition pos:start="33:11" pos:end="33:56">(<expr pos:start="33:12" pos:end="33:55"><name pos:start="33:12" pos:end="33:28"><name pos:start="33:12" pos:end="33:14">pic</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:28">buffer_hints</name></name> <operator pos:start="33:30" pos:end="33:30">&amp;</operator> <name pos:start="33:32" pos:end="33:55">FF_BUFFER_HINTS_PRESERVE</name></expr>)</condition><block type="pseudo" pos:start="33:58" pos:end="33:83"><block_content pos:start="33:58" pos:end="33:83"> <expr_stmt pos:start="33:58" pos:end="33:83"><expr pos:start="33:58" pos:end="33:82"><name pos:start="33:58" pos:end="33:62">perms</name> <operator pos:start="33:64" pos:end="33:65">|=</operator> <name pos:start="33:67" pos:end="33:82">AV_PERM_PRESERVE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="35:9" pos:end="35:81"><if pos:start="35:9" pos:end="35:81">if<condition pos:start="35:11" pos:end="35:56">(<expr pos:start="35:12" pos:end="35:55"><name pos:start="35:12" pos:end="35:28"><name pos:start="35:12" pos:end="35:14">pic</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:28">buffer_hints</name></name> <operator pos:start="35:30" pos:end="35:30">&amp;</operator> <name pos:start="35:32" pos:end="35:55">FF_BUFFER_HINTS_REUSABLE</name></expr>)</condition><block type="pseudo" pos:start="35:58" pos:end="35:81"><block_content pos:start="35:58" pos:end="35:81"> <expr_stmt pos:start="35:58" pos:end="35:81"><expr pos:start="35:58" pos:end="35:80"><name pos:start="35:58" pos:end="35:62">perms</name> <operator pos:start="35:64" pos:end="35:65">|=</operator> <name pos:start="35:67" pos:end="35:80">AV_PERM_REUSE2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="39:5" pos:end="39:64"><if pos:start="39:5" pos:end="39:64">if<condition pos:start="39:7" pos:end="39:22">(<expr pos:start="39:8" pos:end="39:21"><name pos:start="39:8" pos:end="39:21"><name pos:start="39:8" pos:end="39:10">pic</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:21">reference</name></name></expr>)</condition><block type="pseudo" pos:start="39:24" pos:end="39:64"><block_content pos:start="39:24" pos:end="39:64"> <expr_stmt pos:start="39:24" pos:end="39:64"><expr pos:start="39:24" pos:end="39:63"><name pos:start="39:24" pos:end="39:28">perms</name> <operator pos:start="39:30" pos:end="39:31">|=</operator> <name pos:start="39:33" pos:end="39:44">AV_PERM_READ</name> <operator pos:start="39:46" pos:end="39:46">|</operator> <name pos:start="39:48" pos:end="39:63">AV_PERM_PRESERVE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:21"><expr pos:start="43:5" pos:end="43:20"><name pos:start="43:5" pos:end="43:5">w</name> <operator pos:start="43:7" pos:end="43:7">=</operator> <name pos:start="43:9" pos:end="43:20"><name pos:start="43:9" pos:end="43:13">codec</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:20">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:22"><expr pos:start="45:5" pos:end="45:21"><name pos:start="45:5" pos:end="45:5">h</name> <operator pos:start="45:7" pos:end="45:7">=</operator> <name pos:start="45:9" pos:end="45:21"><name pos:start="45:9" pos:end="45:13">codec</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:21">height</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="49:5" pos:end="51:18"><if pos:start="49:5" pos:end="51:18">if<condition pos:start="49:7" pos:end="49:43">(<expr pos:start="49:8" pos:end="49:42"><call pos:start="49:8" pos:end="49:42"><name pos:start="49:8" pos:end="49:26">av_image_check_size</name><argument_list pos:start="49:27" pos:end="49:42">(<argument pos:start="49:28" pos:end="49:28"><expr pos:start="49:28" pos:end="49:28"><name pos:start="49:28" pos:end="49:28">w</name></expr></argument>, <argument pos:start="49:31" pos:end="49:31"><expr pos:start="49:31" pos:end="49:31"><name pos:start="49:31" pos:end="49:31">h</name></expr></argument>, <argument pos:start="49:34" pos:end="49:34"><expr pos:start="49:34" pos:end="49:34"><literal type="number" pos:start="49:34" pos:end="49:34">0</literal></expr></argument>, <argument pos:start="49:37" pos:end="49:41"><expr pos:start="49:37" pos:end="49:41"><name pos:start="49:37" pos:end="49:41">codec</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:18"><block_content pos:start="51:9" pos:end="51:18">

        <return pos:start="51:9" pos:end="51:18">return <expr pos:start="51:16" pos:end="51:17"><operator pos:start="51:16" pos:end="51:16">-</operator><literal type="number" pos:start="51:17" pos:end="51:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:53"><expr pos:start="55:5" pos:end="55:52"><call pos:start="55:5" pos:end="55:52"><name pos:start="55:5" pos:end="55:29">avcodec_align_dimensions2</name><argument_list pos:start="55:30" pos:end="55:52">(<argument pos:start="55:31" pos:end="55:35"><expr pos:start="55:31" pos:end="55:35"><name pos:start="55:31" pos:end="55:35">codec</name></expr></argument>, <argument pos:start="55:38" pos:end="55:39"><expr pos:start="55:38" pos:end="55:39"><operator pos:start="55:38" pos:end="55:38">&amp;</operator><name pos:start="55:39" pos:end="55:39">w</name></expr></argument>, <argument pos:start="55:42" pos:end="55:43"><expr pos:start="55:42" pos:end="55:43"><operator pos:start="55:42" pos:end="55:42">&amp;</operator><name pos:start="55:43" pos:end="55:43">h</name></expr></argument>, <argument pos:start="55:46" pos:end="55:51"><expr pos:start="55:46" pos:end="55:51"><name pos:start="55:46" pos:end="55:51">stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:77"><expr pos:start="57:5" pos:end="57:76"><name pos:start="57:5" pos:end="57:8">edge</name> <operator pos:start="57:10" pos:end="57:10">=</operator> <ternary pos:start="57:12" pos:end="57:76"><condition pos:start="57:12" pos:end="57:47"><expr pos:start="57:12" pos:end="57:45"><name pos:start="57:12" pos:end="57:23"><name pos:start="57:12" pos:end="57:16">codec</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:23">flags</name></name> <operator pos:start="57:25" pos:end="57:25">&amp;</operator> <name pos:start="57:27" pos:end="57:45">CODEC_FLAG_EMU_EDGE</name></expr> ?</condition><then pos:start="57:49" pos:end="57:49"> <expr pos:start="57:49" pos:end="57:49"><literal type="number" pos:start="57:49" pos:end="57:49">0</literal></expr> </then><else pos:start="57:51" pos:end="57:76">: <expr pos:start="57:53" pos:end="57:76"><call pos:start="57:53" pos:end="57:76"><name pos:start="57:53" pos:end="57:74">avcodec_get_edge_width</name><argument_list pos:start="57:75" pos:end="57:76">()</argument_list></call></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:19"><expr pos:start="59:5" pos:end="59:18"><name pos:start="59:5" pos:end="59:5">w</name> <operator pos:start="59:7" pos:end="59:8">+=</operator> <name pos:start="59:10" pos:end="59:13">edge</name> <operator pos:start="59:15" pos:end="59:16">&lt;&lt;</operator> <literal type="number" pos:start="59:18" pos:end="59:18">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:19"><expr pos:start="61:5" pos:end="61:18"><name pos:start="61:5" pos:end="61:5">h</name> <operator pos:start="61:7" pos:end="61:8">+=</operator> <name pos:start="61:10" pos:end="61:13">edge</name> <operator pos:start="61:15" pos:end="61:16">&lt;&lt;</operator> <literal type="number" pos:start="61:18" pos:end="61:18">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="65:5" pos:end="67:18"><if pos:start="65:5" pos:end="67:18">if<condition pos:start="65:7" pos:end="65:72">(<expr pos:start="65:8" pos:end="65:71"><operator pos:start="65:8" pos:end="65:8">!</operator><operator pos:start="65:9" pos:end="65:9">(</operator><name pos:start="65:10" pos:end="65:12">ref</name> <operator pos:start="65:14" pos:end="65:14">=</operator> <call pos:start="65:16" pos:end="65:70"><name pos:start="65:16" pos:end="65:40">avfilter_get_video_buffer</name><argument_list pos:start="65:41" pos:end="65:70">(<argument pos:start="65:42" pos:end="65:56"><expr pos:start="65:42" pos:end="65:56"><name pos:start="65:42" pos:end="65:56"><name pos:start="65:42" pos:end="65:44">ctx</name><operator pos:start="65:45" pos:end="65:46">-&gt;</operator><name pos:start="65:47" pos:end="65:53">outputs</name><index pos:start="65:54" pos:end="65:56">[<expr pos:start="65:55" pos:end="65:55"><literal type="number" pos:start="65:55" pos:end="65:55">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="65:59" pos:end="65:63"><expr pos:start="65:59" pos:end="65:63"><name pos:start="65:59" pos:end="65:63">perms</name></expr></argument>, <argument pos:start="65:66" pos:end="65:66"><expr pos:start="65:66" pos:end="65:66"><name pos:start="65:66" pos:end="65:66">w</name></expr></argument>, <argument pos:start="65:69" pos:end="65:69"><expr pos:start="65:69" pos:end="65:69"><name pos:start="65:69" pos:end="65:69">h</name></expr></argument>)</argument_list></call><operator pos:start="65:71" pos:end="65:71">)</operator></expr>)</condition><block type="pseudo" pos:start="67:9" pos:end="67:18"><block_content pos:start="67:9" pos:end="67:18">

        <return pos:start="67:9" pos:end="67:18">return <expr pos:start="67:16" pos:end="67:17"><operator pos:start="67:16" pos:end="67:16">-</operator><literal type="number" pos:start="67:17" pos:end="67:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:75"><expr pos:start="71:5" pos:end="71:74"><name pos:start="71:5" pos:end="71:14">pixel_size</name> <operator pos:start="71:16" pos:end="71:16">=</operator> <name pos:start="71:18" pos:end="71:52"><name pos:start="71:18" pos:end="71:39">av_pix_fmt_descriptors</name><index pos:start="71:40" pos:end="71:52">[<expr pos:start="71:41" pos:end="71:51"><name pos:start="71:41" pos:end="71:51"><name pos:start="71:41" pos:end="71:43">ref</name><operator pos:start="71:44" pos:end="71:45">-&gt;</operator><name pos:start="71:46" pos:end="71:51">format</name></name></expr>]</index></name><operator pos:start="71:53" pos:end="71:53">.</operator><name pos:start="71:54" pos:end="71:60"><name pos:start="71:54" pos:end="71:57">comp</name><index pos:start="71:58" pos:end="71:60">[<expr pos:start="71:59" pos:end="71:59"><literal type="number" pos:start="71:59" pos:end="71:59">0</literal></expr>]</index></name><operator pos:start="71:61" pos:end="71:61">.</operator><name pos:start="71:62" pos:end="71:72">step_minus1</name><operator pos:start="71:73" pos:end="71:73">+</operator><literal type="number" pos:start="71:74" pos:end="71:74">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:33"><expr pos:start="73:5" pos:end="73:32"><name pos:start="73:5" pos:end="73:17"><name pos:start="73:5" pos:end="73:7">ref</name><operator pos:start="73:8" pos:end="73:9">-&gt;</operator><name pos:start="73:10" pos:end="73:14">video</name><operator pos:start="73:15" pos:end="73:16">-&gt;</operator><name pos:start="73:17" pos:end="73:17">w</name></name> <operator pos:start="73:19" pos:end="73:19">=</operator> <name pos:start="73:21" pos:end="73:32"><name pos:start="73:21" pos:end="73:25">codec</name><operator pos:start="73:26" pos:end="73:27">-&gt;</operator><name pos:start="73:28" pos:end="73:32">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:34"><expr pos:start="75:5" pos:end="75:33"><name pos:start="75:5" pos:end="75:17"><name pos:start="75:5" pos:end="75:7">ref</name><operator pos:start="75:8" pos:end="75:9">-&gt;</operator><name pos:start="75:10" pos:end="75:14">video</name><operator pos:start="75:15" pos:end="75:16">-&gt;</operator><name pos:start="75:17" pos:end="75:17">h</name></name> <operator pos:start="75:19" pos:end="75:19">=</operator> <name pos:start="75:21" pos:end="75:33"><name pos:start="75:21" pos:end="75:25">codec</name><operator pos:start="75:26" pos:end="75:27">-&gt;</operator><name pos:start="75:28" pos:end="75:33">height</name></name></expr>;</expr_stmt>

    <for pos:start="77:5" pos:end="95:5">for<control pos:start="77:8" pos:end="77:27">(<init pos:start="77:9" pos:end="77:14"><expr pos:start="77:9" pos:end="77:13"><name pos:start="77:9" pos:end="77:9">i</name> <operator pos:start="77:11" pos:end="77:11">=</operator> <literal type="number" pos:start="77:13" pos:end="77:13">0</literal></expr>;</init> <condition pos:start="77:16" pos:end="77:21"><expr pos:start="77:16" pos:end="77:20"><name pos:start="77:16" pos:end="77:16">i</name> <operator pos:start="77:18" pos:end="77:18">&lt;</operator> <literal type="number" pos:start="77:20" pos:end="77:20">4</literal></expr>;</condition> <incr pos:start="77:23" pos:end="77:26"><expr pos:start="77:23" pos:end="77:26"><name pos:start="77:23" pos:end="77:23">i</name> <operator pos:start="77:25" pos:end="77:26">++</operator></expr></incr>)</control> <block pos:start="77:29" pos:end="95:5">{<block_content pos:start="79:9" pos:end="93:44">

        <decl_stmt pos:start="79:9" pos:end="79:101"><decl pos:start="79:9" pos:end="79:100"><type pos:start="79:9" pos:end="79:16"><name pos:start="79:9" pos:end="79:16">unsigned</name></type> <name pos:start="79:18" pos:end="79:23">hshift</name> <init pos:start="79:25" pos:end="79:100">= <expr pos:start="79:27" pos:end="79:100"><ternary pos:start="79:27" pos:end="79:100"><condition pos:start="79:27" pos:end="79:46"><expr pos:start="79:27" pos:end="79:44"><operator pos:start="79:27" pos:end="79:27">(</operator><name pos:start="79:28" pos:end="79:28">i</name> <operator pos:start="79:30" pos:end="79:31">==</operator> <literal type="number" pos:start="79:33" pos:end="79:33">1</literal> <operator pos:start="79:35" pos:end="79:36">||</operator> <name pos:start="79:38" pos:end="79:38">i</name> <operator pos:start="79:40" pos:end="79:41">==</operator> <literal type="number" pos:start="79:43" pos:end="79:43">2</literal><operator pos:start="79:44" pos:end="79:44">)</operator></expr> ?</condition><then pos:start="79:48" pos:end="79:96"> <expr pos:start="79:48" pos:end="79:96"><name pos:start="79:48" pos:end="79:82"><name pos:start="79:48" pos:end="79:69">av_pix_fmt_descriptors</name><index pos:start="79:70" pos:end="79:82">[<expr pos:start="79:71" pos:end="79:81"><name pos:start="79:71" pos:end="79:81"><name pos:start="79:71" pos:end="79:73">ref</name><operator pos:start="79:74" pos:end="79:75">-&gt;</operator><name pos:start="79:76" pos:end="79:81">format</name></name></expr>]</index></name><operator pos:start="79:83" pos:end="79:83">.</operator><name pos:start="79:84" pos:end="79:96">log2_chroma_w</name></expr> </then><else pos:start="79:98" pos:end="79:100">: <expr pos:start="79:100" pos:end="79:100"><literal type="number" pos:start="79:100" pos:end="79:100">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="81:9" pos:end="81:101"><decl pos:start="81:9" pos:end="81:100"><type pos:start="81:9" pos:end="81:16"><name pos:start="81:9" pos:end="81:16">unsigned</name></type> <name pos:start="81:18" pos:end="81:23">vshift</name> <init pos:start="81:25" pos:end="81:100">= <expr pos:start="81:27" pos:end="81:100"><ternary pos:start="81:27" pos:end="81:100"><condition pos:start="81:27" pos:end="81:46"><expr pos:start="81:27" pos:end="81:44"><operator pos:start="81:27" pos:end="81:27">(</operator><name pos:start="81:28" pos:end="81:28">i</name> <operator pos:start="81:30" pos:end="81:31">==</operator> <literal type="number" pos:start="81:33" pos:end="81:33">1</literal> <operator pos:start="81:35" pos:end="81:36">||</operator> <name pos:start="81:38" pos:end="81:38">i</name> <operator pos:start="81:40" pos:end="81:41">==</operator> <literal type="number" pos:start="81:43" pos:end="81:43">2</literal><operator pos:start="81:44" pos:end="81:44">)</operator></expr> ?</condition><then pos:start="81:48" pos:end="81:96"> <expr pos:start="81:48" pos:end="81:96"><name pos:start="81:48" pos:end="81:82"><name pos:start="81:48" pos:end="81:69">av_pix_fmt_descriptors</name><index pos:start="81:70" pos:end="81:82">[<expr pos:start="81:71" pos:end="81:81"><name pos:start="81:71" pos:end="81:81"><name pos:start="81:71" pos:end="81:73">ref</name><operator pos:start="81:74" pos:end="81:75">-&gt;</operator><name pos:start="81:76" pos:end="81:81">format</name></name></expr>]</index></name><operator pos:start="81:83" pos:end="81:83">.</operator><name pos:start="81:84" pos:end="81:96">log2_chroma_h</name></expr> </then><else pos:start="81:98" pos:end="81:100">: <expr pos:start="81:100" pos:end="81:100"><literal type="number" pos:start="81:100" pos:end="81:100">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="85:9" pos:end="89:9"><if pos:start="85:9" pos:end="89:9">if <condition pos:start="85:12" pos:end="85:25">(<expr pos:start="85:13" pos:end="85:24"><name pos:start="85:13" pos:end="85:24"><name pos:start="85:13" pos:end="85:15">ref</name><operator pos:start="85:16" pos:end="85:17">-&gt;</operator><name pos:start="85:18" pos:end="85:21">data</name><index pos:start="85:22" pos:end="85:24">[<expr pos:start="85:23" pos:end="85:23"><name pos:start="85:23" pos:end="85:23">i</name></expr>]</index></name></expr>)</condition> <block pos:start="85:27" pos:end="89:9">{<block_content pos:start="87:13" pos:end="87:103">

            <expr_stmt pos:start="87:13" pos:end="87:103"><expr pos:start="87:13" pos:end="87:102"><name pos:start="87:13" pos:end="87:24"><name pos:start="87:13" pos:end="87:15">ref</name><operator pos:start="87:16" pos:end="87:17">-&gt;</operator><name pos:start="87:18" pos:end="87:21">data</name><index pos:start="87:22" pos:end="87:24">[<expr pos:start="87:23" pos:end="87:23"><name pos:start="87:23" pos:end="87:23">i</name></expr>]</index></name>    <operator pos:start="87:29" pos:end="87:30">+=</operator> <operator pos:start="87:32" pos:end="87:32">(</operator><operator pos:start="87:33" pos:end="87:33">(</operator><name pos:start="87:34" pos:end="87:37">edge</name> <operator pos:start="87:39" pos:end="87:39">*</operator> <name pos:start="87:41" pos:end="87:50">pixel_size</name><operator pos:start="87:51" pos:end="87:51">)</operator> <operator pos:start="87:53" pos:end="87:54">&gt;&gt;</operator> <name pos:start="87:56" pos:end="87:61">hshift</name><operator pos:start="87:62" pos:end="87:62">)</operator> <operator pos:start="87:64" pos:end="87:64">+</operator> <operator pos:start="87:66" pos:end="87:66">(</operator><operator pos:start="87:67" pos:end="87:67">(</operator><name pos:start="87:68" pos:end="87:71">edge</name> <operator pos:start="87:73" pos:end="87:73">*</operator> <name pos:start="87:75" pos:end="87:90"><name pos:start="87:75" pos:end="87:77">ref</name><operator pos:start="87:78" pos:end="87:79">-&gt;</operator><name pos:start="87:80" pos:end="87:87">linesize</name><index pos:start="87:88" pos:end="87:90">[<expr pos:start="87:89" pos:end="87:89"><name pos:start="87:89" pos:end="87:89">i</name></expr>]</index></name><operator pos:start="87:91" pos:end="87:91">)</operator> <operator pos:start="87:93" pos:end="87:94">&gt;&gt;</operator> <name pos:start="87:96" pos:end="87:101">vshift</name><operator pos:start="87:102" pos:end="87:102">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:40"><expr pos:start="91:9" pos:end="91:39"><name pos:start="91:9" pos:end="91:20"><name pos:start="91:9" pos:end="91:11">pic</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:17">data</name><index pos:start="91:18" pos:end="91:20">[<expr pos:start="91:19" pos:end="91:19"><name pos:start="91:19" pos:end="91:19">i</name></expr>]</index></name>     <operator pos:start="91:26" pos:end="91:26">=</operator> <name pos:start="91:28" pos:end="91:39"><name pos:start="91:28" pos:end="91:30">ref</name><operator pos:start="91:31" pos:end="91:32">-&gt;</operator><name pos:start="91:33" pos:end="91:36">data</name><index pos:start="91:37" pos:end="91:39">[<expr pos:start="91:38" pos:end="91:38"><name pos:start="91:38" pos:end="91:38">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:44"><expr pos:start="93:9" pos:end="93:43"><name pos:start="93:9" pos:end="93:24"><name pos:start="93:9" pos:end="93:11">pic</name><operator pos:start="93:12" pos:end="93:13">-&gt;</operator><name pos:start="93:14" pos:end="93:21">linesize</name><index pos:start="93:22" pos:end="93:24">[<expr pos:start="93:23" pos:end="93:23"><name pos:start="93:23" pos:end="93:23">i</name></expr>]</index></name> <operator pos:start="93:26" pos:end="93:26">=</operator> <name pos:start="93:28" pos:end="93:43"><name pos:start="93:28" pos:end="93:30">ref</name><operator pos:start="93:31" pos:end="93:32">-&gt;</operator><name pos:start="93:33" pos:end="93:40">linesize</name><index pos:start="93:41" pos:end="93:43">[<expr pos:start="93:42" pos:end="93:42"><name pos:start="93:42" pos:end="93:42">i</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="97:5" pos:end="97:22"><expr pos:start="97:5" pos:end="97:21"><name pos:start="97:5" pos:end="97:15"><name pos:start="97:5" pos:end="97:7">pic</name><operator pos:start="97:8" pos:end="97:9">-&gt;</operator><name pos:start="97:10" pos:end="97:15">opaque</name></name> <operator pos:start="97:17" pos:end="97:17">=</operator> <name pos:start="97:19" pos:end="97:21">ref</name></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:26"><expr pos:start="99:5" pos:end="99:25"><name pos:start="99:5" pos:end="99:12"><name pos:start="99:5" pos:end="99:7">pic</name><operator pos:start="99:8" pos:end="99:9">-&gt;</operator><name pos:start="99:10" pos:end="99:12">age</name></name>    <operator pos:start="99:17" pos:end="99:17">=</operator> <name pos:start="99:19" pos:end="99:25">INT_MAX</name></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:38"><expr pos:start="101:5" pos:end="101:37"><name pos:start="101:5" pos:end="101:13"><name pos:start="101:5" pos:end="101:7">pic</name><operator pos:start="101:8" pos:end="101:9">-&gt;</operator><name pos:start="101:10" pos:end="101:13">type</name></name>   <operator pos:start="101:17" pos:end="101:17">=</operator> <name pos:start="101:19" pos:end="101:37">FF_BUFFER_TYPE_USER</name></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:52"><expr pos:start="103:5" pos:end="103:51"><name pos:start="103:5" pos:end="103:25"><name pos:start="103:5" pos:end="103:7">pic</name><operator pos:start="103:8" pos:end="103:9">-&gt;</operator><name pos:start="103:10" pos:end="103:25">reordered_opaque</name></name> <operator pos:start="103:27" pos:end="103:27">=</operator> <name pos:start="103:29" pos:end="103:51"><name pos:start="103:29" pos:end="103:33">codec</name><operator pos:start="103:34" pos:end="103:35">-&gt;</operator><name pos:start="103:36" pos:end="103:51">reordered_opaque</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="105:5" pos:end="107:49"><if pos:start="105:5" pos:end="105:50">if<condition pos:start="105:7" pos:end="105:18">(<expr pos:start="105:8" pos:end="105:17"><name pos:start="105:8" pos:end="105:17"><name pos:start="105:8" pos:end="105:12">codec</name><operator pos:start="105:13" pos:end="105:14">-&gt;</operator><name pos:start="105:15" pos:end="105:17">pkt</name></name></expr>)</condition><block type="pseudo" pos:start="105:20" pos:end="105:50"><block_content pos:start="105:20" pos:end="105:50"> <expr_stmt pos:start="105:20" pos:end="105:50"><expr pos:start="105:20" pos:end="105:49"><name pos:start="105:20" pos:end="105:31"><name pos:start="105:20" pos:end="105:22">pic</name><operator pos:start="105:23" pos:end="105:24">-&gt;</operator><name pos:start="105:25" pos:end="105:31">pkt_pts</name></name> <operator pos:start="105:33" pos:end="105:33">=</operator> <name pos:start="105:35" pos:end="105:49"><name pos:start="105:35" pos:end="105:39">codec</name><operator pos:start="105:40" pos:end="105:41">-&gt;</operator><name pos:start="105:42" pos:end="105:44">pkt</name><operator pos:start="105:45" pos:end="105:46">-&gt;</operator><name pos:start="105:47" pos:end="105:49">pts</name></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="107:5" pos:end="107:49">else<block type="pseudo" pos:start="107:20" pos:end="107:49"><block_content pos:start="107:20" pos:end="107:49">           <expr_stmt pos:start="107:20" pos:end="107:49"><expr pos:start="107:20" pos:end="107:48"><name pos:start="107:20" pos:end="107:31"><name pos:start="107:20" pos:end="107:22">pic</name><operator pos:start="107:23" pos:end="107:24">-&gt;</operator><name pos:start="107:25" pos:end="107:31">pkt_pts</name></name> <operator pos:start="107:33" pos:end="107:33">=</operator> <name pos:start="107:35" pos:end="107:48">AV_NOPTS_VALUE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <return pos:start="109:5" pos:end="109:13">return <expr pos:start="109:12" pos:end="109:12"><literal type="number" pos:start="109:12" pos:end="109:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
