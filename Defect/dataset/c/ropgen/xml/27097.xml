<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/27097.c" pos:tabs="8"><function pos:start="1:1" pos:end="175:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">h264_slice_header_init</name><parameter_list pos:start="1:34" pos:end="1:49">(<parameter pos:start="1:35" pos:end="1:48"><decl pos:start="1:35" pos:end="1:48"><type pos:start="1:35" pos:end="1:47"><name pos:start="1:35" pos:end="1:45">H264Context</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">h</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="175:1">{<block_content pos:start="5:5" pos:end="173:13">

    <decl_stmt pos:start="5:5" pos:end="9:47"><decl pos:start="5:5" pos:end="9:46"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:17">nb_slices</name> <init pos:start="5:19" pos:end="9:46">= <expr pos:start="5:21" pos:end="9:46"><ternary pos:start="5:21" pos:end="9:46"><condition pos:start="5:21" pos:end="7:70"><expr pos:start="5:21" pos:end="7:68"><operator pos:start="5:21" pos:end="5:21">(</operator><name pos:start="5:22" pos:end="5:33">HAVE_THREADS</name> <operator pos:start="5:35" pos:end="5:36">&amp;&amp;</operator>

                     <name pos:start="7:22" pos:end="7:49"><name pos:start="7:22" pos:end="7:22">h</name><operator pos:start="7:23" pos:end="7:24">-&gt;</operator><name pos:start="7:25" pos:end="7:29">avctx</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:49">active_thread_type</name></name> <operator pos:start="7:51" pos:end="7:51">&amp;</operator> <name pos:start="7:53" pos:end="7:67">FF_THREAD_SLICE</name><operator pos:start="7:68" pos:end="7:68">)</operator></expr> ?</condition><then pos:start="9:21" pos:end="9:42">

                    <expr pos:start="9:21" pos:end="9:42"><name pos:start="9:21" pos:end="9:42"><name pos:start="9:21" pos:end="9:21">h</name><operator pos:start="9:22" pos:end="9:23">-&gt;</operator><name pos:start="9:24" pos:end="9:28">avctx</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:42">thread_count</name></name></expr> </then><else pos:start="9:44" pos:end="9:46">: <expr pos:start="9:46" pos:end="9:46"><literal type="number" pos:start="9:46" pos:end="9:46">1</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:14"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:14">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:37"><expr pos:start="15:5" pos:end="15:36"><call pos:start="15:5" pos:end="15:36"><name pos:start="15:5" pos:end="15:14">ff_set_sar</name><argument_list pos:start="15:15" pos:end="15:36">(<argument pos:start="15:16" pos:end="15:23"><expr pos:start="15:16" pos:end="15:23"><name pos:start="15:16" pos:end="15:23"><name pos:start="15:16" pos:end="15:16">h</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:23">avctx</name></name></expr></argument>, <argument pos:start="15:26" pos:end="15:35"><expr pos:start="15:26" pos:end="15:35"><name pos:start="15:26" pos:end="15:35"><name pos:start="15:26" pos:end="15:26">h</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:31">sps</name><operator pos:start="15:32" pos:end="15:32">.</operator><name pos:start="15:33" pos:end="15:35">sar</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="19:77"><expr pos:start="17:5" pos:end="19:76"><call pos:start="17:5" pos:end="19:76"><name pos:start="17:5" pos:end="17:36">av_pix_fmt_get_chroma_sub_sample</name><argument_list pos:start="17:37" pos:end="19:76">(<argument pos:start="17:38" pos:end="17:54"><expr pos:start="17:38" pos:end="17:54"><name pos:start="17:38" pos:end="17:54"><name pos:start="17:38" pos:end="17:38">h</name><operator pos:start="17:39" pos:end="17:40">-&gt;</operator><name pos:start="17:41" pos:end="17:45">avctx</name><operator pos:start="17:46" pos:end="17:47">-&gt;</operator><name pos:start="17:48" pos:end="17:54">pix_fmt</name></name></expr></argument>,

                                     <argument pos:start="19:38" pos:end="19:55"><expr pos:start="19:38" pos:end="19:55"><operator pos:start="19:38" pos:end="19:38">&amp;</operator><name pos:start="19:39" pos:end="19:55"><name pos:start="19:39" pos:end="19:39">h</name><operator pos:start="19:40" pos:end="19:41">-&gt;</operator><name pos:start="19:42" pos:end="19:55">chroma_x_shift</name></name></expr></argument>, <argument pos:start="19:58" pos:end="19:75"><expr pos:start="19:58" pos:end="19:75"><operator pos:start="19:58" pos:end="19:58">&amp;</operator><name pos:start="19:59" pos:end="19:75"><name pos:start="19:59" pos:end="19:59">h</name><operator pos:start="19:60" pos:end="19:61">-&gt;</operator><name pos:start="19:62" pos:end="19:75">chroma_y_shift</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="35:5"><if pos:start="23:5" pos:end="35:5">if <condition pos:start="23:8" pos:end="23:40">(<expr pos:start="23:9" pos:end="23:39"><name pos:start="23:9" pos:end="23:39"><name pos:start="23:9" pos:end="23:9">h</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:14">sps</name><operator pos:start="23:15" pos:end="23:15">.</operator><name pos:start="23:16" pos:end="23:39">timing_info_present_flag</name></name></expr>)</condition> <block pos:start="23:42" pos:end="35:5">{<block_content pos:start="25:9" pos:end="33:58">

        <decl_stmt pos:start="25:9" pos:end="25:40"><decl pos:start="25:9" pos:end="25:39"><type pos:start="25:9" pos:end="25:15"><name pos:start="25:9" pos:end="25:15">int64_t</name></type> <name pos:start="25:17" pos:end="25:19">den</name> <init pos:start="25:21" pos:end="25:39">= <expr pos:start="25:23" pos:end="25:39"><name pos:start="25:23" pos:end="25:39"><name pos:start="25:23" pos:end="25:23">h</name><operator pos:start="25:24" pos:end="25:25">-&gt;</operator><name pos:start="25:26" pos:end="25:28">sps</name><operator pos:start="25:29" pos:end="25:29">.</operator><name pos:start="25:30" pos:end="25:39">time_scale</name></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="27:9" pos:end="29:21"><if pos:start="27:9" pos:end="29:21">if <condition pos:start="27:12" pos:end="27:32">(<expr pos:start="27:13" pos:end="27:31"><name pos:start="27:13" pos:end="27:25"><name pos:start="27:13" pos:end="27:13">h</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:25">x264_build</name></name> <operator pos:start="27:27" pos:end="27:27">&lt;</operator> <literal type="number" pos:start="27:29" pos:end="27:31">44U</literal></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:21"><block_content pos:start="29:13" pos:end="29:21">

            <expr_stmt pos:start="29:13" pos:end="29:21"><expr pos:start="29:13" pos:end="29:20"><name pos:start="29:13" pos:end="29:15">den</name> <operator pos:start="29:17" pos:end="29:18">*=</operator> <literal type="number" pos:start="29:20" pos:end="29:20">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="31:9" pos:end="33:58"><expr pos:start="31:9" pos:end="33:57"><call pos:start="31:9" pos:end="33:57"><name pos:start="31:9" pos:end="31:17">av_reduce</name><argument_list pos:start="31:18" pos:end="33:57">(<argument pos:start="31:19" pos:end="31:42"><expr pos:start="31:19" pos:end="31:42"><operator pos:start="31:19" pos:end="31:19">&amp;</operator><name pos:start="31:20" pos:end="31:42"><name pos:start="31:20" pos:end="31:20">h</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:27">avctx</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:38">framerate</name><operator pos:start="31:39" pos:end="31:39">.</operator><name pos:start="31:40" pos:end="31:42">den</name></name></expr></argument>, <argument pos:start="31:45" pos:end="31:68"><expr pos:start="31:45" pos:end="31:68"><operator pos:start="31:45" pos:end="31:45">&amp;</operator><name pos:start="31:46" pos:end="31:68"><name pos:start="31:46" pos:end="31:46">h</name><operator pos:start="31:47" pos:end="31:48">-&gt;</operator><name pos:start="31:49" pos:end="31:53">avctx</name><operator pos:start="31:54" pos:end="31:55">-&gt;</operator><name pos:start="31:56" pos:end="31:64">framerate</name><operator pos:start="31:65" pos:end="31:65">.</operator><name pos:start="31:66" pos:end="31:68">num</name></name></expr></argument>,

                  <argument pos:start="33:19" pos:end="33:42"><expr pos:start="33:19" pos:end="33:42"><name pos:start="33:19" pos:end="33:42"><name pos:start="33:19" pos:end="33:19">h</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:24">sps</name><operator pos:start="33:25" pos:end="33:25">.</operator><name pos:start="33:26" pos:end="33:42">num_units_in_tick</name></name></expr></argument>, <argument pos:start="33:45" pos:end="33:47"><expr pos:start="33:45" pos:end="33:47"><name pos:start="33:45" pos:end="33:47">den</name></expr></argument>, <argument pos:start="33:50" pos:end="33:56"><expr pos:start="33:50" pos:end="33:56"><literal type="number" pos:start="33:50" pos:end="33:50">1</literal> <operator pos:start="33:52" pos:end="33:53">&lt;&lt;</operator> <literal type="number" pos:start="33:55" pos:end="33:56">30</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:27"><expr pos:start="39:5" pos:end="39:26"><call pos:start="39:5" pos:end="39:26"><name pos:start="39:5" pos:end="39:23">ff_h264_free_tables</name><argument_list pos:start="39:24" pos:end="39:26">(<argument pos:start="39:25" pos:end="39:25"><expr pos:start="39:25" pos:end="39:25"><name pos:start="39:25" pos:end="39:25">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:33"><expr pos:start="43:5" pos:end="43:32"><name pos:start="43:5" pos:end="43:18"><name pos:start="43:5" pos:end="43:5">h</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:18">first_field</name></name>           <operator pos:start="43:30" pos:end="43:30">=</operator> <literal type="number" pos:start="43:32" pos:end="43:32">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:33"><expr pos:start="45:5" pos:end="45:32"><name pos:start="45:5" pos:end="45:28"><name pos:start="45:5" pos:end="45:5">h</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:28">prev_interlaced_frame</name></name> <operator pos:start="45:30" pos:end="45:30">=</operator> <literal type="number" pos:start="45:32" pos:end="45:32">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:24"><expr pos:start="49:5" pos:end="49:23"><call pos:start="49:5" pos:end="49:23"><name pos:start="49:5" pos:end="49:20">init_scan_tables</name><argument_list pos:start="49:21" pos:end="49:23">(<argument pos:start="49:22" pos:end="49:22"><expr pos:start="49:22" pos:end="49:22"><name pos:start="49:22" pos:end="49:22">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:34"><expr pos:start="51:5" pos:end="51:33"><name pos:start="51:5" pos:end="51:7">ret</name> <operator pos:start="51:9" pos:end="51:9">=</operator> <call pos:start="51:11" pos:end="51:33"><name pos:start="51:11" pos:end="51:30">ff_h264_alloc_tables</name><argument_list pos:start="51:31" pos:end="51:33">(<argument pos:start="51:32" pos:end="51:32"><expr pos:start="51:32" pos:end="51:32"><name pos:start="51:32" pos:end="51:32">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:16">(<expr pos:start="53:9" pos:end="53:15"><name pos:start="53:9" pos:end="53:11">ret</name> <operator pos:start="53:13" pos:end="53:13">&lt;</operator> <literal type="number" pos:start="53:15" pos:end="53:15">0</literal></expr>)</condition> <block pos:start="53:18" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:19">

        <expr_stmt pos:start="55:9" pos:end="55:70"><expr pos:start="55:9" pos:end="55:69"><call pos:start="55:9" pos:end="55:69"><name pos:start="55:9" pos:end="55:14">av_log</name><argument_list pos:start="55:15" pos:end="55:69">(<argument pos:start="55:16" pos:end="55:23"><expr pos:start="55:16" pos:end="55:23"><name pos:start="55:16" pos:end="55:23"><name pos:start="55:16" pos:end="55:16">h</name><operator pos:start="55:17" pos:end="55:18">-&gt;</operator><name pos:start="55:19" pos:end="55:23">avctx</name></name></expr></argument>, <argument pos:start="55:26" pos:end="55:37"><expr pos:start="55:26" pos:end="55:37"><name pos:start="55:26" pos:end="55:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="55:40" pos:end="55:68"><expr pos:start="55:40" pos:end="55:68"><literal type="string" pos:start="55:40" pos:end="55:68">"Could not allocate memory\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:19">return <expr pos:start="57:16" pos:end="57:18"><name pos:start="57:16" pos:end="57:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="63:5" pos:end="71:5"><if pos:start="63:5" pos:end="71:5">if <condition pos:start="63:8" pos:end="63:64">(<expr pos:start="63:9" pos:end="63:63"><name pos:start="63:9" pos:end="63:29"><name pos:start="63:9" pos:end="63:9">h</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:14">sps</name><operator pos:start="63:15" pos:end="63:15">.</operator><name pos:start="63:16" pos:end="63:29">bit_depth_luma</name></name> <operator pos:start="63:31" pos:end="63:31">&lt;</operator> <literal type="number" pos:start="63:33" pos:end="63:33">8</literal> <operator pos:start="63:35" pos:end="63:36">||</operator> <name pos:start="63:38" pos:end="63:58"><name pos:start="63:38" pos:end="63:38">h</name><operator pos:start="63:39" pos:end="63:40">-&gt;</operator><name pos:start="63:41" pos:end="63:43">sps</name><operator pos:start="63:44" pos:end="63:44">.</operator><name pos:start="63:45" pos:end="63:58">bit_depth_luma</name></name> <operator pos:start="63:60" pos:end="63:60">&gt;</operator> <literal type="number" pos:start="63:62" pos:end="63:63">10</literal></expr>)</condition> <block pos:start="63:66" pos:end="71:5">{<block_content pos:start="65:9" pos:end="69:35">

        <expr_stmt pos:start="65:9" pos:end="67:38"><expr pos:start="65:9" pos:end="67:37"><call pos:start="65:9" pos:end="67:37"><name pos:start="65:9" pos:end="65:14">av_log</name><argument_list pos:start="65:15" pos:end="67:37">(<argument pos:start="65:16" pos:end="65:23"><expr pos:start="65:16" pos:end="65:23"><name pos:start="65:16" pos:end="65:23"><name pos:start="65:16" pos:end="65:16">h</name><operator pos:start="65:17" pos:end="65:18">-&gt;</operator><name pos:start="65:19" pos:end="65:23">avctx</name></name></expr></argument>, <argument pos:start="65:26" pos:end="65:37"><expr pos:start="65:26" pos:end="65:37"><name pos:start="65:26" pos:end="65:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="65:40" pos:end="65:67"><expr pos:start="65:40" pos:end="65:67"><literal type="string" pos:start="65:40" pos:end="65:67">"Unsupported bit depth %d\n"</literal></expr></argument>,

               <argument pos:start="67:16" pos:end="67:36"><expr pos:start="67:16" pos:end="67:36"><name pos:start="67:16" pos:end="67:36"><name pos:start="67:16" pos:end="67:16">h</name><operator pos:start="67:17" pos:end="67:18">-&gt;</operator><name pos:start="67:19" pos:end="67:21">sps</name><operator pos:start="67:22" pos:end="67:22">.</operator><name pos:start="67:23" pos:end="67:36">bit_depth_luma</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="69:9" pos:end="69:35">return <expr pos:start="69:16" pos:end="69:34"><name pos:start="69:16" pos:end="69:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:58"><expr pos:start="75:5" pos:end="75:57"><name pos:start="75:5" pos:end="75:33"><name pos:start="75:5" pos:end="75:5">h</name><operator pos:start="75:6" pos:end="75:7">-&gt;</operator><name pos:start="75:8" pos:end="75:12">avctx</name><operator pos:start="75:13" pos:end="75:14">-&gt;</operator><name pos:start="75:15" pos:end="75:33">bits_per_raw_sample</name></name> <operator pos:start="75:35" pos:end="75:35">=</operator> <name pos:start="75:37" pos:end="75:57"><name pos:start="75:37" pos:end="75:37">h</name><operator pos:start="75:38" pos:end="75:39">-&gt;</operator><name pos:start="75:40" pos:end="75:42">sps</name><operator pos:start="75:43" pos:end="75:43">.</operator><name pos:start="75:44" pos:end="75:57">bit_depth_luma</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:62"><expr pos:start="77:5" pos:end="77:61"><name pos:start="77:5" pos:end="77:18"><name pos:start="77:5" pos:end="77:5">h</name><operator pos:start="77:6" pos:end="77:7">-&gt;</operator><name pos:start="77:8" pos:end="77:18">pixel_shift</name></name>                <operator pos:start="77:35" pos:end="77:35">=</operator> <name pos:start="77:37" pos:end="77:57"><name pos:start="77:37" pos:end="77:37">h</name><operator pos:start="77:38" pos:end="77:39">-&gt;</operator><name pos:start="77:40" pos:end="77:42">sps</name><operator pos:start="77:43" pos:end="77:43">.</operator><name pos:start="77:44" pos:end="77:57">bit_depth_luma</name></name> <operator pos:start="77:59" pos:end="77:59">&gt;</operator> <literal type="number" pos:start="77:61" pos:end="77:61">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:61"><expr pos:start="79:5" pos:end="79:60"><name pos:start="79:5" pos:end="79:24"><name pos:start="79:5" pos:end="79:5">h</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:24">chroma_format_idc</name></name>          <operator pos:start="79:35" pos:end="79:35">=</operator> <name pos:start="79:37" pos:end="79:60"><name pos:start="79:37" pos:end="79:37">h</name><operator pos:start="79:38" pos:end="79:39">-&gt;</operator><name pos:start="79:40" pos:end="79:42">sps</name><operator pos:start="79:43" pos:end="79:43">.</operator><name pos:start="79:44" pos:end="79:60">chroma_format_idc</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:58"><expr pos:start="81:5" pos:end="81:57"><name pos:start="81:5" pos:end="81:21"><name pos:start="81:5" pos:end="81:5">h</name><operator pos:start="81:6" pos:end="81:7">-&gt;</operator><name pos:start="81:8" pos:end="81:21">bit_depth_luma</name></name>             <operator pos:start="81:35" pos:end="81:35">=</operator> <name pos:start="81:37" pos:end="81:57"><name pos:start="81:37" pos:end="81:37">h</name><operator pos:start="81:38" pos:end="81:39">-&gt;</operator><name pos:start="81:40" pos:end="81:42">sps</name><operator pos:start="81:43" pos:end="81:43">.</operator><name pos:start="81:44" pos:end="81:57">bit_depth_luma</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="85:5" pos:end="87:46"><expr pos:start="85:5" pos:end="87:45"><call pos:start="85:5" pos:end="87:45"><name pos:start="85:5" pos:end="85:19">ff_h264dsp_init</name><argument_list pos:start="85:20" pos:end="87:45">(<argument pos:start="85:21" pos:end="85:31"><expr pos:start="85:21" pos:end="85:31"><operator pos:start="85:21" pos:end="85:21">&amp;</operator><name pos:start="85:22" pos:end="85:31"><name pos:start="85:22" pos:end="85:22">h</name><operator pos:start="85:23" pos:end="85:24">-&gt;</operator><name pos:start="85:25" pos:end="85:31">h264dsp</name></name></expr></argument>, <argument pos:start="85:34" pos:end="85:54"><expr pos:start="85:34" pos:end="85:54"><name pos:start="85:34" pos:end="85:54"><name pos:start="85:34" pos:end="85:34">h</name><operator pos:start="85:35" pos:end="85:36">-&gt;</operator><name pos:start="85:37" pos:end="85:39">sps</name><operator pos:start="85:40" pos:end="85:40">.</operator><name pos:start="85:41" pos:end="85:54">bit_depth_luma</name></name></expr></argument>,

                    <argument pos:start="87:21" pos:end="87:44"><expr pos:start="87:21" pos:end="87:44"><name pos:start="87:21" pos:end="87:44"><name pos:start="87:21" pos:end="87:21">h</name><operator pos:start="87:22" pos:end="87:23">-&gt;</operator><name pos:start="87:24" pos:end="87:26">sps</name><operator pos:start="87:27" pos:end="87:27">.</operator><name pos:start="87:28" pos:end="87:44">chroma_format_idc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:64"><expr pos:start="89:5" pos:end="89:63"><call pos:start="89:5" pos:end="89:63"><name pos:start="89:5" pos:end="89:22">ff_h264chroma_init</name><argument_list pos:start="89:23" pos:end="89:63">(<argument pos:start="89:24" pos:end="89:37"><expr pos:start="89:24" pos:end="89:37"><operator pos:start="89:24" pos:end="89:24">&amp;</operator><name pos:start="89:25" pos:end="89:37"><name pos:start="89:25" pos:end="89:25">h</name><operator pos:start="89:26" pos:end="89:27">-&gt;</operator><name pos:start="89:28" pos:end="89:37">h264chroma</name></name></expr></argument>, <argument pos:start="89:40" pos:end="89:62"><expr pos:start="89:40" pos:end="89:62"><name pos:start="89:40" pos:end="89:62"><name pos:start="89:40" pos:end="89:40">h</name><operator pos:start="89:41" pos:end="89:42">-&gt;</operator><name pos:start="89:43" pos:end="89:45">sps</name><operator pos:start="89:46" pos:end="89:46">.</operator><name pos:start="89:47" pos:end="89:62">bit_depth_chroma</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:58"><expr pos:start="91:5" pos:end="91:57"><call pos:start="91:5" pos:end="91:57"><name pos:start="91:5" pos:end="91:20">ff_h264qpel_init</name><argument_list pos:start="91:21" pos:end="91:57">(<argument pos:start="91:22" pos:end="91:33"><expr pos:start="91:22" pos:end="91:33"><operator pos:start="91:22" pos:end="91:22">&amp;</operator><name pos:start="91:23" pos:end="91:33"><name pos:start="91:23" pos:end="91:23">h</name><operator pos:start="91:24" pos:end="91:25">-&gt;</operator><name pos:start="91:26" pos:end="91:33">h264qpel</name></name></expr></argument>, <argument pos:start="91:36" pos:end="91:56"><expr pos:start="91:36" pos:end="91:56"><name pos:start="91:36" pos:end="91:56"><name pos:start="91:36" pos:end="91:36">h</name><operator pos:start="91:37" pos:end="91:38">-&gt;</operator><name pos:start="91:39" pos:end="91:41">sps</name><operator pos:start="91:42" pos:end="91:42">.</operator><name pos:start="91:43" pos:end="91:56">bit_depth_luma</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="95:48"><expr pos:start="93:5" pos:end="95:47"><call pos:start="93:5" pos:end="95:47"><name pos:start="93:5" pos:end="93:21">ff_h264_pred_init</name><argument_list pos:start="93:22" pos:end="95:47">(<argument pos:start="93:23" pos:end="93:29"><expr pos:start="93:23" pos:end="93:29"><operator pos:start="93:23" pos:end="93:23">&amp;</operator><name pos:start="93:24" pos:end="93:29"><name pos:start="93:24" pos:end="93:24">h</name><operator pos:start="93:25" pos:end="93:26">-&gt;</operator><name pos:start="93:27" pos:end="93:29">hpc</name></name></expr></argument>, <argument pos:start="93:32" pos:end="93:49"><expr pos:start="93:32" pos:end="93:49"><name pos:start="93:32" pos:end="93:49"><name pos:start="93:32" pos:end="93:32">h</name><operator pos:start="93:33" pos:end="93:34">-&gt;</operator><name pos:start="93:35" pos:end="93:39">avctx</name><operator pos:start="93:40" pos:end="93:41">-&gt;</operator><name pos:start="93:42" pos:end="93:49">codec_id</name></name></expr></argument>, <argument pos:start="93:52" pos:end="93:72"><expr pos:start="93:52" pos:end="93:72"><name pos:start="93:52" pos:end="93:72"><name pos:start="93:52" pos:end="93:52">h</name><operator pos:start="93:53" pos:end="93:54">-&gt;</operator><name pos:start="93:55" pos:end="93:57">sps</name><operator pos:start="93:58" pos:end="93:58">.</operator><name pos:start="93:59" pos:end="93:72">bit_depth_luma</name></name></expr></argument>,

                      <argument pos:start="95:23" pos:end="95:46"><expr pos:start="95:23" pos:end="95:46"><name pos:start="95:23" pos:end="95:46"><name pos:start="95:23" pos:end="95:23">h</name><operator pos:start="95:24" pos:end="95:25">-&gt;</operator><name pos:start="95:26" pos:end="95:28">sps</name><operator pos:start="95:29" pos:end="95:29">.</operator><name pos:start="95:30" pos:end="95:46">chroma_format_idc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:54"><expr pos:start="97:5" pos:end="97:53"><call pos:start="97:5" pos:end="97:53"><name pos:start="97:5" pos:end="97:20">ff_videodsp_init</name><argument_list pos:start="97:21" pos:end="97:53">(<argument pos:start="97:22" pos:end="97:29"><expr pos:start="97:22" pos:end="97:29"><operator pos:start="97:22" pos:end="97:22">&amp;</operator><name pos:start="97:23" pos:end="97:29"><name pos:start="97:23" pos:end="97:23">h</name><operator pos:start="97:24" pos:end="97:25">-&gt;</operator><name pos:start="97:26" pos:end="97:29">vdsp</name></name></expr></argument>, <argument pos:start="97:32" pos:end="97:52"><expr pos:start="97:32" pos:end="97:52"><name pos:start="97:32" pos:end="97:52"><name pos:start="97:32" pos:end="97:32">h</name><operator pos:start="97:33" pos:end="97:34">-&gt;</operator><name pos:start="97:35" pos:end="97:37">sps</name><operator pos:start="97:38" pos:end="97:38">.</operator><name pos:start="97:39" pos:end="97:52">bit_depth_luma</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="101:5" pos:end="119:5"><if pos:start="101:5" pos:end="119:5">if <condition pos:start="101:8" pos:end="101:83">(<expr pos:start="101:9" pos:end="101:82"><name pos:start="101:9" pos:end="101:17">nb_slices</name> <operator pos:start="101:19" pos:end="101:19">&gt;</operator> <name pos:start="101:21" pos:end="101:36">H264_MAX_THREADS</name> <operator pos:start="101:38" pos:end="101:39">||</operator> <operator pos:start="101:41" pos:end="101:41">(</operator><name pos:start="101:42" pos:end="101:50">nb_slices</name> <operator pos:start="101:52" pos:end="101:52">&gt;</operator> <name pos:start="101:54" pos:end="101:65"><name pos:start="101:54" pos:end="101:54">h</name><operator pos:start="101:55" pos:end="101:56">-&gt;</operator><name pos:start="101:57" pos:end="101:65">mb_height</name></name> <operator pos:start="101:67" pos:end="101:68">&amp;&amp;</operator> <name pos:start="101:70" pos:end="101:81"><name pos:start="101:70" pos:end="101:70">h</name><operator pos:start="101:71" pos:end="101:72">-&gt;</operator><name pos:start="101:73" pos:end="101:81">mb_height</name></name><operator pos:start="101:82" pos:end="101:82">)</operator></expr>)</condition> <block pos:start="101:85" pos:end="119:5">{<block_content pos:start="103:9" pos:end="117:31">

        <decl_stmt pos:start="103:9" pos:end="103:23"><decl pos:start="103:9" pos:end="103:22"><type pos:start="103:9" pos:end="103:11"><name pos:start="103:9" pos:end="103:11">int</name></type> <name pos:start="103:13" pos:end="103:22">max_slices</name></decl>;</decl_stmt>

        <if_stmt pos:start="105:9" pos:end="111:42"><if pos:start="105:9" pos:end="107:63">if <condition pos:start="105:12" pos:end="105:25">(<expr pos:start="105:13" pos:end="105:24"><name pos:start="105:13" pos:end="105:24"><name pos:start="105:13" pos:end="105:13">h</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:24">mb_height</name></name></expr>)</condition><block type="pseudo" pos:start="107:13" pos:end="107:63"><block_content pos:start="107:13" pos:end="107:63">

            <expr_stmt pos:start="107:13" pos:end="107:63"><expr pos:start="107:13" pos:end="107:62"><name pos:start="107:13" pos:end="107:22">max_slices</name> <operator pos:start="107:24" pos:end="107:24">=</operator> <call pos:start="107:26" pos:end="107:62"><name pos:start="107:26" pos:end="107:30">FFMIN</name><argument_list pos:start="107:31" pos:end="107:62">(<argument pos:start="107:32" pos:end="107:47"><expr pos:start="107:32" pos:end="107:47"><name pos:start="107:32" pos:end="107:47">H264_MAX_THREADS</name></expr></argument>, <argument pos:start="107:50" pos:end="107:61"><expr pos:start="107:50" pos:end="107:61"><name pos:start="107:50" pos:end="107:61"><name pos:start="107:50" pos:end="107:50">h</name><operator pos:start="107:51" pos:end="107:52">-&gt;</operator><name pos:start="107:53" pos:end="107:61">mb_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="109:9" pos:end="111:42">else<block type="pseudo" pos:start="111:13" pos:end="111:42"><block_content pos:start="111:13" pos:end="111:42">

            <expr_stmt pos:start="111:13" pos:end="111:42"><expr pos:start="111:13" pos:end="111:41"><name pos:start="111:13" pos:end="111:22">max_slices</name> <operator pos:start="111:24" pos:end="111:24">=</operator> <name pos:start="111:26" pos:end="111:41">H264_MAX_THREADS</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="113:9" pos:end="115:59"><expr pos:start="113:9" pos:end="115:58"><call pos:start="113:9" pos:end="115:58"><name pos:start="113:9" pos:end="113:14">av_log</name><argument_list pos:start="113:15" pos:end="115:58">(<argument pos:start="113:16" pos:end="113:23"><expr pos:start="113:16" pos:end="113:23"><name pos:start="113:16" pos:end="113:23"><name pos:start="113:16" pos:end="113:16">h</name><operator pos:start="113:17" pos:end="113:18">-&gt;</operator><name pos:start="113:19" pos:end="113:23">avctx</name></name></expr></argument>, <argument pos:start="113:26" pos:end="113:39"><expr pos:start="113:26" pos:end="113:39"><name pos:start="113:26" pos:end="113:39">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="113:42" pos:end="115:34"><expr pos:start="113:42" pos:end="115:34"><literal type="string" pos:start="113:42" pos:end="113:70">"too many threads/slices %d,"</literal>

               <literal type="string" pos:start="115:16" pos:end="115:34">" reducing to %d\n"</literal></expr></argument>, <argument pos:start="115:37" pos:end="115:45"><expr pos:start="115:37" pos:end="115:45"><name pos:start="115:37" pos:end="115:45">nb_slices</name></expr></argument>, <argument pos:start="115:48" pos:end="115:57"><expr pos:start="115:48" pos:end="115:57"><name pos:start="115:48" pos:end="115:57">max_slices</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:31"><expr pos:start="117:9" pos:end="117:30"><name pos:start="117:9" pos:end="117:17">nb_slices</name> <operator pos:start="117:19" pos:end="117:19">=</operator> <name pos:start="117:21" pos:end="117:30">max_slices</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:39"><expr pos:start="121:5" pos:end="121:38"><name pos:start="121:5" pos:end="121:26"><name pos:start="121:5" pos:end="121:5">h</name><operator pos:start="121:6" pos:end="121:7">-&gt;</operator><name pos:start="121:8" pos:end="121:26">slice_context_count</name></name> <operator pos:start="121:28" pos:end="121:28">=</operator> <name pos:start="121:30" pos:end="121:38">nb_slices</name></expr>;</expr_stmt>



    <if_stmt pos:start="125:5" pos:end="165:5"><if pos:start="125:5" pos:end="137:5">if <condition pos:start="125:8" pos:end="125:75">(<expr pos:start="125:9" pos:end="125:74"><operator pos:start="125:9" pos:end="125:9">!</operator><name pos:start="125:10" pos:end="125:21">HAVE_THREADS</name> <operator pos:start="125:23" pos:end="125:24">||</operator> <operator pos:start="125:26" pos:end="125:26">!</operator><operator pos:start="125:27" pos:end="125:27">(</operator><name pos:start="125:28" pos:end="125:55"><name pos:start="125:28" pos:end="125:28">h</name><operator pos:start="125:29" pos:end="125:30">-&gt;</operator><name pos:start="125:31" pos:end="125:35">avctx</name><operator pos:start="125:36" pos:end="125:37">-&gt;</operator><name pos:start="125:38" pos:end="125:55">active_thread_type</name></name> <operator pos:start="125:57" pos:end="125:57">&amp;</operator> <name pos:start="125:59" pos:end="125:73">FF_THREAD_SLICE</name><operator pos:start="125:74" pos:end="125:74">)</operator></expr>)</condition> <block pos:start="125:77" pos:end="137:5">{<block_content pos:start="127:9" pos:end="135:9">

        <expr_stmt pos:start="127:9" pos:end="127:62"><expr pos:start="127:9" pos:end="127:61"><name pos:start="127:9" pos:end="127:11">ret</name> <operator pos:start="127:13" pos:end="127:13">=</operator> <call pos:start="127:15" pos:end="127:61"><name pos:start="127:15" pos:end="127:40">ff_h264_slice_context_init</name><argument_list pos:start="127:41" pos:end="127:61">(<argument pos:start="127:42" pos:end="127:42"><expr pos:start="127:42" pos:end="127:42"><name pos:start="127:42" pos:end="127:42">h</name></expr></argument>, <argument pos:start="127:45" pos:end="127:60"><expr pos:start="127:45" pos:end="127:60"><operator pos:start="127:45" pos:end="127:45">&amp;</operator><name pos:start="127:46" pos:end="127:60"><name pos:start="127:46" pos:end="127:46">h</name><operator pos:start="127:47" pos:end="127:48">-&gt;</operator><name pos:start="127:49" pos:end="127:57">slice_ctx</name><index pos:start="127:58" pos:end="127:60">[<expr pos:start="127:59" pos:end="127:59"><literal type="number" pos:start="127:59" pos:end="127:59">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="129:9" pos:end="135:9"><if pos:start="129:9" pos:end="135:9">if <condition pos:start="129:12" pos:end="129:20">(<expr pos:start="129:13" pos:end="129:19"><name pos:start="129:13" pos:end="129:15">ret</name> <operator pos:start="129:17" pos:end="129:17">&lt;</operator> <literal type="number" pos:start="129:19" pos:end="129:19">0</literal></expr>)</condition> <block pos:start="129:22" pos:end="135:9">{<block_content pos:start="131:13" pos:end="133:23">

            <expr_stmt pos:start="131:13" pos:end="131:71"><expr pos:start="131:13" pos:end="131:70"><call pos:start="131:13" pos:end="131:70"><name pos:start="131:13" pos:end="131:18">av_log</name><argument_list pos:start="131:19" pos:end="131:70">(<argument pos:start="131:20" pos:end="131:27"><expr pos:start="131:20" pos:end="131:27"><name pos:start="131:20" pos:end="131:27"><name pos:start="131:20" pos:end="131:20">h</name><operator pos:start="131:21" pos:end="131:22">-&gt;</operator><name pos:start="131:23" pos:end="131:27">avctx</name></name></expr></argument>, <argument pos:start="131:30" pos:end="131:41"><expr pos:start="131:30" pos:end="131:41"><name pos:start="131:30" pos:end="131:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="131:44" pos:end="131:69"><expr pos:start="131:44" pos:end="131:69"><literal type="string" pos:start="131:44" pos:end="131:69">"context_init() failed.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="133:13" pos:end="133:23">return <expr pos:start="133:20" pos:end="133:22"><name pos:start="133:20" pos:end="133:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="137:7" pos:end="165:5">else <block pos:start="137:12" pos:end="165:5">{<block_content pos:start="139:9" pos:end="163:9">

        <for pos:start="139:9" pos:end="163:9">for <control pos:start="139:13" pos:end="139:52">(<init pos:start="139:14" pos:end="139:19"><expr pos:start="139:14" pos:end="139:18"><name pos:start="139:14" pos:end="139:14">i</name> <operator pos:start="139:16" pos:end="139:16">=</operator> <literal type="number" pos:start="139:18" pos:end="139:18">0</literal></expr>;</init> <condition pos:start="139:21" pos:end="139:47"><expr pos:start="139:21" pos:end="139:46"><name pos:start="139:21" pos:end="139:21">i</name> <operator pos:start="139:23" pos:end="139:23">&lt;</operator> <name pos:start="139:25" pos:end="139:46"><name pos:start="139:25" pos:end="139:25">h</name><operator pos:start="139:26" pos:end="139:27">-&gt;</operator><name pos:start="139:28" pos:end="139:46">slice_context_count</name></name></expr>;</condition> <incr pos:start="139:49" pos:end="139:51"><expr pos:start="139:49" pos:end="139:51"><name pos:start="139:49" pos:end="139:49">i</name><operator pos:start="139:50" pos:end="139:51">++</operator></expr></incr>)</control> <block pos:start="139:54" pos:end="163:9">{<block_content pos:start="141:13" pos:end="161:13">

            <decl_stmt pos:start="141:13" pos:end="141:52"><decl pos:start="141:13" pos:end="141:51"><type pos:start="141:13" pos:end="141:30"><name pos:start="141:13" pos:end="141:28">H264SliceContext</name> <modifier pos:start="141:30" pos:end="141:30">*</modifier></type><name pos:start="141:31" pos:end="141:32">sl</name> <init pos:start="141:34" pos:end="141:51">= <expr pos:start="141:36" pos:end="141:51"><operator pos:start="141:36" pos:end="141:36">&amp;</operator><name pos:start="141:37" pos:end="141:51"><name pos:start="141:37" pos:end="141:37">h</name><operator pos:start="141:38" pos:end="141:39">-&gt;</operator><name pos:start="141:40" pos:end="141:48">slice_ctx</name><index pos:start="141:49" pos:end="141:51">[<expr pos:start="141:50" pos:end="141:50"><name pos:start="141:50" pos:end="141:50">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="145:13" pos:end="145:39"><expr pos:start="145:13" pos:end="145:38"><name pos:start="145:13" pos:end="145:20"><name pos:start="145:13" pos:end="145:14">sl</name><operator pos:start="145:15" pos:end="145:16">-&gt;</operator><name pos:start="145:17" pos:end="145:20">h264</name></name>               <operator pos:start="145:36" pos:end="145:36">=</operator> <name pos:start="145:38" pos:end="145:38">h</name></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:86"><expr pos:start="147:13" pos:end="147:85"><name pos:start="147:13" pos:end="147:34"><name pos:start="147:13" pos:end="147:14">sl</name><operator pos:start="147:15" pos:end="147:16">-&gt;</operator><name pos:start="147:17" pos:end="147:34">intra4x4_pred_mode</name></name> <operator pos:start="147:36" pos:end="147:36">=</operator> <name pos:start="147:38" pos:end="147:58"><name pos:start="147:38" pos:end="147:38">h</name><operator pos:start="147:39" pos:end="147:40">-&gt;</operator><name pos:start="147:41" pos:end="147:58">intra4x4_pred_mode</name></name> <operator pos:start="147:60" pos:end="147:60">+</operator> <name pos:start="147:62" pos:end="147:62">i</name> <operator pos:start="147:64" pos:end="147:64">*</operator> <literal type="number" pos:start="147:66" pos:end="147:66">8</literal> <operator pos:start="147:68" pos:end="147:68">*</operator> <literal type="number" pos:start="147:70" pos:end="147:70">2</literal> <operator pos:start="147:72" pos:end="147:72">*</operator> <name pos:start="147:74" pos:end="147:85"><name pos:start="147:74" pos:end="147:74">h</name><operator pos:start="147:75" pos:end="147:76">-&gt;</operator><name pos:start="147:77" pos:end="147:85">mb_stride</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:86"><expr pos:start="149:13" pos:end="149:85"><name pos:start="149:13" pos:end="149:28"><name pos:start="149:13" pos:end="149:14">sl</name><operator pos:start="149:15" pos:end="149:16">-&gt;</operator><name pos:start="149:17" pos:end="149:25">mvd_table</name><index pos:start="149:26" pos:end="149:28">[<expr pos:start="149:27" pos:end="149:27"><literal type="number" pos:start="149:27" pos:end="149:27">0</literal></expr>]</index></name>       <operator pos:start="149:36" pos:end="149:36">=</operator> <name pos:start="149:38" pos:end="149:52"><name pos:start="149:38" pos:end="149:38">h</name><operator pos:start="149:39" pos:end="149:40">-&gt;</operator><name pos:start="149:41" pos:end="149:49">mvd_table</name><index pos:start="149:50" pos:end="149:52">[<expr pos:start="149:51" pos:end="149:51"><literal type="number" pos:start="149:51" pos:end="149:51">0</literal></expr>]</index></name>       <operator pos:start="149:60" pos:end="149:60">+</operator> <name pos:start="149:62" pos:end="149:62">i</name> <operator pos:start="149:64" pos:end="149:64">*</operator> <literal type="number" pos:start="149:66" pos:end="149:66">8</literal> <operator pos:start="149:68" pos:end="149:68">*</operator> <literal type="number" pos:start="149:70" pos:end="149:70">2</literal> <operator pos:start="149:72" pos:end="149:72">*</operator> <name pos:start="149:74" pos:end="149:85"><name pos:start="149:74" pos:end="149:74">h</name><operator pos:start="149:75" pos:end="149:76">-&gt;</operator><name pos:start="149:77" pos:end="149:85">mb_stride</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:86"><expr pos:start="151:13" pos:end="151:85"><name pos:start="151:13" pos:end="151:28"><name pos:start="151:13" pos:end="151:14">sl</name><operator pos:start="151:15" pos:end="151:16">-&gt;</operator><name pos:start="151:17" pos:end="151:25">mvd_table</name><index pos:start="151:26" pos:end="151:28">[<expr pos:start="151:27" pos:end="151:27"><literal type="number" pos:start="151:27" pos:end="151:27">1</literal></expr>]</index></name>       <operator pos:start="151:36" pos:end="151:36">=</operator> <name pos:start="151:38" pos:end="151:52"><name pos:start="151:38" pos:end="151:38">h</name><operator pos:start="151:39" pos:end="151:40">-&gt;</operator><name pos:start="151:41" pos:end="151:49">mvd_table</name><index pos:start="151:50" pos:end="151:52">[<expr pos:start="151:51" pos:end="151:51"><literal type="number" pos:start="151:51" pos:end="151:51">1</literal></expr>]</index></name>       <operator pos:start="151:60" pos:end="151:60">+</operator> <name pos:start="151:62" pos:end="151:62">i</name> <operator pos:start="151:64" pos:end="151:64">*</operator> <literal type="number" pos:start="151:66" pos:end="151:66">8</literal> <operator pos:start="151:68" pos:end="151:68">*</operator> <literal type="number" pos:start="151:70" pos:end="151:70">2</literal> <operator pos:start="151:72" pos:end="151:72">*</operator> <name pos:start="151:74" pos:end="151:85"><name pos:start="151:74" pos:end="151:74">h</name><operator pos:start="151:75" pos:end="151:76">-&gt;</operator><name pos:start="151:77" pos:end="151:85">mb_stride</name></name></expr>;</expr_stmt>



            <if_stmt pos:start="155:13" pos:end="161:13"><if pos:start="155:13" pos:end="161:13">if <condition pos:start="155:16" pos:end="155:62">(<expr pos:start="155:17" pos:end="155:61"><operator pos:start="155:17" pos:end="155:17">(</operator><name pos:start="155:18" pos:end="155:20">ret</name> <operator pos:start="155:22" pos:end="155:22">=</operator> <call pos:start="155:24" pos:end="155:56"><name pos:start="155:24" pos:end="155:49">ff_h264_slice_context_init</name><argument_list pos:start="155:50" pos:end="155:56">(<argument pos:start="155:51" pos:end="155:51"><expr pos:start="155:51" pos:end="155:51"><name pos:start="155:51" pos:end="155:51">h</name></expr></argument>, <argument pos:start="155:54" pos:end="155:55"><expr pos:start="155:54" pos:end="155:55"><name pos:start="155:54" pos:end="155:55">sl</name></expr></argument>)</argument_list></call><operator pos:start="155:57" pos:end="155:57">)</operator> <operator pos:start="155:59" pos:end="155:59">&lt;</operator> <literal type="number" pos:start="155:61" pos:end="155:61">0</literal></expr>)</condition> <block pos:start="155:64" pos:end="161:13">{<block_content pos:start="157:17" pos:end="159:27">

                <expr_stmt pos:start="157:17" pos:end="157:75"><expr pos:start="157:17" pos:end="157:74"><call pos:start="157:17" pos:end="157:74"><name pos:start="157:17" pos:end="157:22">av_log</name><argument_list pos:start="157:23" pos:end="157:74">(<argument pos:start="157:24" pos:end="157:31"><expr pos:start="157:24" pos:end="157:31"><name pos:start="157:24" pos:end="157:31"><name pos:start="157:24" pos:end="157:24">h</name><operator pos:start="157:25" pos:end="157:26">-&gt;</operator><name pos:start="157:27" pos:end="157:31">avctx</name></name></expr></argument>, <argument pos:start="157:34" pos:end="157:45"><expr pos:start="157:34" pos:end="157:45"><name pos:start="157:34" pos:end="157:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="157:48" pos:end="157:73"><expr pos:start="157:48" pos:end="157:73"><literal type="string" pos:start="157:48" pos:end="157:73">"context_init() failed.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="159:17" pos:end="159:27">return <expr pos:start="159:24" pos:end="159:26"><name pos:start="159:24" pos:end="159:26">ret</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="169:5" pos:end="169:31"><expr pos:start="169:5" pos:end="169:30"><name pos:start="169:5" pos:end="169:26"><name pos:start="169:5" pos:end="169:5">h</name><operator pos:start="169:6" pos:end="169:7">-&gt;</operator><name pos:start="169:8" pos:end="169:26">context_initialized</name></name> <operator pos:start="169:28" pos:end="169:28">=</operator> <literal type="number" pos:start="169:30" pos:end="169:30">1</literal></expr>;</expr_stmt>



    <return pos:start="173:5" pos:end="173:13">return <expr pos:start="173:12" pos:end="173:12"><literal type="number" pos:start="173:12" pos:end="173:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
