<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11244.c" pos:tabs="8"><function pos:start="1:1" pos:end="117:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:43">qxl_render_update_area_unlocked</name><parameter_list pos:start="1:44" pos:end="1:62">(<parameter pos:start="1:45" pos:end="1:61"><decl pos:start="1:45" pos:end="1:61"><type pos:start="1:45" pos:end="1:58"><name pos:start="1:45" pos:end="1:56">PCIQXLDevice</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:61">qxl</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="117:1">{<block_content pos:start="5:5" pos:end="115:29">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">VGACommonState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:23">vga</name> <init pos:start="5:25" pos:end="5:35">= <expr pos:start="5:27" pos:end="5:35"><operator pos:start="5:27" pos:end="5:27">&amp;</operator><name pos:start="5:28" pos:end="5:35"><name pos:start="5:28" pos:end="5:30">qxl</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:35">vga</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">DisplaySurface</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:27">surface</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="73:5"><if pos:start="13:5" pos:end="73:5">if <condition pos:start="13:8" pos:end="13:35">(<expr pos:start="13:9" pos:end="13:34"><name pos:start="13:9" pos:end="13:34"><name pos:start="13:9" pos:end="13:11">qxl</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:26">guest_primary</name><operator pos:start="13:27" pos:end="13:27">.</operator><name pos:start="13:28" pos:end="13:34">resized</name></name></expr>)</condition> <block pos:start="13:37" pos:end="73:5">{<block_content pos:start="15:9" pos:end="71:51">

        <expr_stmt pos:start="15:9" pos:end="15:39"><expr pos:start="15:9" pos:end="15:38"><name pos:start="15:9" pos:end="15:34"><name pos:start="15:9" pos:end="15:11">qxl</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:26">guest_primary</name><operator pos:start="15:27" pos:end="15:27">.</operator><name pos:start="15:28" pos:end="15:34">resized</name></name> <operator pos:start="15:36" pos:end="15:36">=</operator> <literal type="number" pos:start="15:38" pos:end="15:38">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="21:69"><expr pos:start="17:9" pos:end="21:68"><name pos:start="17:9" pos:end="17:31"><name pos:start="17:9" pos:end="17:11">qxl</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:26">guest_primary</name><operator pos:start="17:27" pos:end="17:27">.</operator><name pos:start="17:28" pos:end="17:31">data</name></name> <operator pos:start="17:33" pos:end="17:33">=</operator> <call pos:start="17:35" pos:end="21:68"><name pos:start="17:35" pos:end="17:47">qxl_phys2virt</name><argument_list pos:start="17:48" pos:end="21:68">(<argument pos:start="17:49" pos:end="17:51"><expr pos:start="17:49" pos:end="17:51"><name pos:start="17:49" pos:end="17:51">qxl</name></expr></argument>,

                                                <argument pos:start="19:49" pos:end="19:78"><expr pos:start="19:49" pos:end="19:78"><name pos:start="19:49" pos:end="19:78"><name pos:start="19:49" pos:end="19:51">qxl</name><operator pos:start="19:52" pos:end="19:53">-&gt;</operator><name pos:start="19:54" pos:end="19:66">guest_primary</name><operator pos:start="19:67" pos:end="19:67">.</operator><name pos:start="19:68" pos:end="19:74">surface</name><operator pos:start="19:75" pos:end="19:75">.</operator><name pos:start="19:76" pos:end="19:78">mem</name></name></expr></argument>,

                                                <argument pos:start="21:49" pos:end="21:67"><expr pos:start="21:49" pos:end="21:67"><name pos:start="21:49" pos:end="21:67">MEMSLOT_GROUP_GUEST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="27:9"><if pos:start="23:9" pos:end="27:9">if <condition pos:start="23:12" pos:end="23:37">(<expr pos:start="23:13" pos:end="23:36"><operator pos:start="23:13" pos:end="23:13">!</operator><name pos:start="23:14" pos:end="23:36"><name pos:start="23:14" pos:end="23:16">qxl</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:31">guest_primary</name><operator pos:start="23:32" pos:end="23:32">.</operator><name pos:start="23:33" pos:end="23:36">data</name></name></expr>)</condition> <block pos:start="23:39" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:19">

            <return pos:start="25:13" pos:end="25:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:53"><expr pos:start="29:9" pos:end="29:52"><call pos:start="29:9" pos:end="29:52"><name pos:start="29:9" pos:end="29:31">qxl_set_rect_to_surface</name><argument_list pos:start="29:32" pos:end="29:52">(<argument pos:start="29:33" pos:end="29:35"><expr pos:start="29:33" pos:end="29:35"><name pos:start="29:33" pos:end="29:35">qxl</name></expr></argument>, <argument pos:start="29:38" pos:end="29:51"><expr pos:start="29:38" pos:end="29:51"><operator pos:start="29:38" pos:end="29:38">&amp;</operator><name pos:start="29:39" pos:end="29:51"><name pos:start="29:39" pos:end="29:41">qxl</name><operator pos:start="29:42" pos:end="29:43">-&gt;</operator><name pos:start="29:44" pos:end="29:48">dirty</name><index pos:start="29:49" pos:end="29:51">[<expr pos:start="29:50" pos:end="29:50"><literal type="number" pos:start="29:50" pos:end="29:50">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:33"><expr pos:start="31:9" pos:end="31:32"><name pos:start="31:9" pos:end="31:28"><name pos:start="31:9" pos:end="31:11">qxl</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:28">num_dirty_rects</name></name> <operator pos:start="31:30" pos:end="31:30">=</operator> <literal type="number" pos:start="31:32" pos:end="31:32">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="43:43"><expr pos:start="33:9" pos:end="43:42"><call pos:start="33:9" pos:end="43:42"><name pos:start="33:9" pos:end="33:46">trace_qxl_render_guest_primary_resized</name><argument_list pos:start="33:47" pos:end="43:42">(

               <argument pos:start="35:16" pos:end="35:47"><expr pos:start="35:16" pos:end="35:47"><name pos:start="35:16" pos:end="35:47"><name pos:start="35:16" pos:end="35:18">qxl</name><operator pos:start="35:19" pos:end="35:20">-&gt;</operator><name pos:start="35:21" pos:end="35:33">guest_primary</name><operator pos:start="35:34" pos:end="35:34">.</operator><name pos:start="35:35" pos:end="35:41">surface</name><operator pos:start="35:42" pos:end="35:42">.</operator><name pos:start="35:43" pos:end="35:47">width</name></name></expr></argument>,

               <argument pos:start="37:16" pos:end="37:48"><expr pos:start="37:16" pos:end="37:48"><name pos:start="37:16" pos:end="37:48"><name pos:start="37:16" pos:end="37:18">qxl</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:33">guest_primary</name><operator pos:start="37:34" pos:end="37:34">.</operator><name pos:start="37:35" pos:end="37:41">surface</name><operator pos:start="37:42" pos:end="37:42">.</operator><name pos:start="37:43" pos:end="37:48">height</name></name></expr></argument>,

               <argument pos:start="39:16" pos:end="39:44"><expr pos:start="39:16" pos:end="39:44"><name pos:start="39:16" pos:end="39:44"><name pos:start="39:16" pos:end="39:18">qxl</name><operator pos:start="39:19" pos:end="39:20">-&gt;</operator><name pos:start="39:21" pos:end="39:33">guest_primary</name><operator pos:start="39:34" pos:end="39:34">.</operator><name pos:start="39:35" pos:end="39:44">qxl_stride</name></name></expr></argument>,

               <argument pos:start="41:16" pos:end="41:42"><expr pos:start="41:16" pos:end="41:42"><name pos:start="41:16" pos:end="41:42"><name pos:start="41:16" pos:end="41:18">qxl</name><operator pos:start="41:19" pos:end="41:20">-&gt;</operator><name pos:start="41:21" pos:end="41:33">guest_primary</name><operator pos:start="41:34" pos:end="41:34">.</operator><name pos:start="41:35" pos:end="41:42">bytes_pp</name></name></expr></argument>,

               <argument pos:start="43:16" pos:end="43:41"><expr pos:start="43:16" pos:end="43:41"><name pos:start="43:16" pos:end="43:41"><name pos:start="43:16" pos:end="43:18">qxl</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:33">guest_primary</name><operator pos:start="43:34" pos:end="43:34">.</operator><name pos:start="43:35" pos:end="43:41">bits_pp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="69:9"><if pos:start="45:9" pos:end="61:9">if <condition pos:start="45:12" pos:end="45:46">(<expr pos:start="45:13" pos:end="45:45"><name pos:start="45:13" pos:end="45:41"><name pos:start="45:13" pos:end="45:15">qxl</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:30">guest_primary</name><operator pos:start="45:31" pos:end="45:31">.</operator><name pos:start="45:32" pos:end="45:41">qxl_stride</name></name> <operator pos:start="45:43" pos:end="45:43">&gt;</operator> <literal type="number" pos:start="45:45" pos:end="45:45">0</literal></expr>)</condition> <block pos:start="45:48" pos:end="61:9">{<block_content pos:start="47:13" pos:end="59:24">

            <expr_stmt pos:start="47:13" pos:end="59:24"><expr pos:start="47:13" pos:end="59:23"><name pos:start="47:13" pos:end="47:19">surface</name> <operator pos:start="47:21" pos:end="47:21">=</operator> <call pos:start="47:23" pos:end="59:23"><name pos:start="47:23" pos:end="47:53">qemu_create_displaysurface_from</name>

                <argument_list pos:start="49:17" pos:end="59:23">(<argument pos:start="49:18" pos:end="49:49"><expr pos:start="49:18" pos:end="49:49"><name pos:start="49:18" pos:end="49:49"><name pos:start="49:18" pos:end="49:20">qxl</name><operator pos:start="49:21" pos:end="49:22">-&gt;</operator><name pos:start="49:23" pos:end="49:35">guest_primary</name><operator pos:start="49:36" pos:end="49:36">.</operator><name pos:start="49:37" pos:end="49:43">surface</name><operator pos:start="49:44" pos:end="49:44">.</operator><name pos:start="49:45" pos:end="49:49">width</name></name></expr></argument>,

                 <argument pos:start="51:18" pos:end="51:50"><expr pos:start="51:18" pos:end="51:50"><name pos:start="51:18" pos:end="51:50"><name pos:start="51:18" pos:end="51:20">qxl</name><operator pos:start="51:21" pos:end="51:22">-&gt;</operator><name pos:start="51:23" pos:end="51:35">guest_primary</name><operator pos:start="51:36" pos:end="51:36">.</operator><name pos:start="51:37" pos:end="51:43">surface</name><operator pos:start="51:44" pos:end="51:44">.</operator><name pos:start="51:45" pos:end="51:50">height</name></name></expr></argument>,

                 <argument pos:start="53:18" pos:end="53:43"><expr pos:start="53:18" pos:end="53:43"><name pos:start="53:18" pos:end="53:43"><name pos:start="53:18" pos:end="53:20">qxl</name><operator pos:start="53:21" pos:end="53:22">-&gt;</operator><name pos:start="53:23" pos:end="53:35">guest_primary</name><operator pos:start="53:36" pos:end="53:36">.</operator><name pos:start="53:37" pos:end="53:43">bits_pp</name></name></expr></argument>,

                 <argument pos:start="55:18" pos:end="55:46"><expr pos:start="55:18" pos:end="55:46"><name pos:start="55:18" pos:end="55:46"><name pos:start="55:18" pos:end="55:20">qxl</name><operator pos:start="55:21" pos:end="55:22">-&gt;</operator><name pos:start="55:23" pos:end="55:35">guest_primary</name><operator pos:start="55:36" pos:end="55:36">.</operator><name pos:start="55:37" pos:end="55:46">abs_stride</name></name></expr></argument>,

                 <argument pos:start="57:18" pos:end="57:40"><expr pos:start="57:18" pos:end="57:40"><name pos:start="57:18" pos:end="57:40"><name pos:start="57:18" pos:end="57:20">qxl</name><operator pos:start="57:21" pos:end="57:22">-&gt;</operator><name pos:start="57:23" pos:end="57:35">guest_primary</name><operator pos:start="57:36" pos:end="57:36">.</operator><name pos:start="57:37" pos:end="57:40">data</name></name></expr></argument>,

                 <argument pos:start="59:18" pos:end="59:22"><expr pos:start="59:18" pos:end="59:22"><name pos:start="59:18" pos:end="59:22">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="61:11" pos:end="69:9">else <block pos:start="61:16" pos:end="69:9">{<block_content pos:start="63:13" pos:end="67:52">

            <expr_stmt pos:start="63:13" pos:end="67:52"><expr pos:start="63:13" pos:end="67:51"><name pos:start="63:13" pos:end="63:19">surface</name> <operator pos:start="63:21" pos:end="63:21">=</operator> <call pos:start="63:23" pos:end="67:51"><name pos:start="63:23" pos:end="63:48">qemu_create_displaysurface</name>

                <argument_list pos:start="65:17" pos:end="67:51">(<argument pos:start="65:18" pos:end="65:49"><expr pos:start="65:18" pos:end="65:49"><name pos:start="65:18" pos:end="65:49"><name pos:start="65:18" pos:end="65:20">qxl</name><operator pos:start="65:21" pos:end="65:22">-&gt;</operator><name pos:start="65:23" pos:end="65:35">guest_primary</name><operator pos:start="65:36" pos:end="65:36">.</operator><name pos:start="65:37" pos:end="65:43">surface</name><operator pos:start="65:44" pos:end="65:44">.</operator><name pos:start="65:45" pos:end="65:49">width</name></name></expr></argument>,

                 <argument pos:start="67:18" pos:end="67:50"><expr pos:start="67:18" pos:end="67:50"><name pos:start="67:18" pos:end="67:50"><name pos:start="67:18" pos:end="67:20">qxl</name><operator pos:start="67:21" pos:end="67:22">-&gt;</operator><name pos:start="67:23" pos:end="67:35">guest_primary</name><operator pos:start="67:36" pos:end="67:36">.</operator><name pos:start="67:37" pos:end="67:43">surface</name><operator pos:start="67:44" pos:end="67:44">.</operator><name pos:start="67:45" pos:end="67:50">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:51"><expr pos:start="71:9" pos:end="71:50"><call pos:start="71:9" pos:end="71:50"><name pos:start="71:9" pos:end="71:31">dpy_gfx_replace_surface</name><argument_list pos:start="71:32" pos:end="71:50">(<argument pos:start="71:33" pos:end="71:40"><expr pos:start="71:33" pos:end="71:40"><name pos:start="71:33" pos:end="71:40"><name pos:start="71:33" pos:end="71:35">vga</name><operator pos:start="71:36" pos:end="71:37">-&gt;</operator><name pos:start="71:38" pos:end="71:40">con</name></name></expr></argument>, <argument pos:start="71:43" pos:end="71:49"><expr pos:start="71:43" pos:end="71:49"><name pos:start="71:43" pos:end="71:49">surface</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="77:5" pos:end="81:5"><if pos:start="77:5" pos:end="81:5">if <condition pos:start="77:8" pos:end="77:33">(<expr pos:start="77:9" pos:end="77:32"><operator pos:start="77:9" pos:end="77:9">!</operator><name pos:start="77:10" pos:end="77:32"><name pos:start="77:10" pos:end="77:12">qxl</name><operator pos:start="77:13" pos:end="77:14">-&gt;</operator><name pos:start="77:15" pos:end="77:27">guest_primary</name><operator pos:start="77:28" pos:end="77:28">.</operator><name pos:start="77:29" pos:end="77:32">data</name></name></expr>)</condition> <block pos:start="77:35" pos:end="81:5">{<block_content pos:start="79:9" pos:end="79:15">

        <return pos:start="79:9" pos:end="79:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <for pos:start="83:5" pos:end="113:5">for <control pos:start="83:9" pos:end="83:46">(<init pos:start="83:10" pos:end="83:15"><expr pos:start="83:10" pos:end="83:14"><name pos:start="83:10" pos:end="83:10">i</name> <operator pos:start="83:12" pos:end="83:12">=</operator> <literal type="number" pos:start="83:14" pos:end="83:14">0</literal></expr>;</init> <condition pos:start="83:17" pos:end="83:41"><expr pos:start="83:17" pos:end="83:40"><name pos:start="83:17" pos:end="83:17">i</name> <operator pos:start="83:19" pos:end="83:19">&lt;</operator> <name pos:start="83:21" pos:end="83:40"><name pos:start="83:21" pos:end="83:23">qxl</name><operator pos:start="83:24" pos:end="83:25">-&gt;</operator><name pos:start="83:26" pos:end="83:40">num_dirty_rects</name></name></expr>;</condition> <incr pos:start="83:43" pos:end="83:45"><expr pos:start="83:43" pos:end="83:45"><name pos:start="83:43" pos:end="83:43">i</name><operator pos:start="83:44" pos:end="83:45">++</operator></expr></incr>)</control> <block pos:start="83:48" pos:end="113:5">{<block_content pos:start="85:9" pos:end="111:65">

        <if_stmt pos:start="85:9" pos:end="89:9"><if pos:start="85:9" pos:end="89:9">if <condition pos:start="85:12" pos:end="85:51">(<expr pos:start="85:13" pos:end="85:50"><call pos:start="85:13" pos:end="85:50"><name pos:start="85:13" pos:end="85:36">qemu_spice_rect_is_empty</name><argument_list pos:start="85:37" pos:end="85:50">(<argument pos:start="85:38" pos:end="85:49"><expr pos:start="85:38" pos:end="85:49"><name pos:start="85:38" pos:end="85:47"><name pos:start="85:38" pos:end="85:40">qxl</name><operator pos:start="85:41" pos:end="85:42">-&gt;</operator><name pos:start="85:43" pos:end="85:47">dirty</name></name><operator pos:start="85:48" pos:end="85:48">+</operator><name pos:start="85:49" pos:end="85:49">i</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="85:53" pos:end="89:9">{<block_content pos:start="87:13" pos:end="87:18">

            <break pos:start="87:13" pos:end="87:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="91:9" pos:end="101:9"><if pos:start="91:9" pos:end="101:9">if <condition pos:start="91:12" pos:end="97:69">(<expr pos:start="91:13" pos:end="97:68"><name pos:start="91:13" pos:end="91:25"><name pos:start="91:13" pos:end="91:15">qxl</name><operator pos:start="91:16" pos:end="91:17">-&gt;</operator><name pos:start="91:18" pos:end="91:22">dirty</name><index pos:start="91:23" pos:end="91:25">[<expr pos:start="91:24" pos:end="91:24"><name pos:start="91:24" pos:end="91:24">i</name></expr>]</index></name><operator pos:start="91:26" pos:end="91:26">.</operator><name pos:start="91:27" pos:end="91:30">left</name> <operator pos:start="91:32" pos:end="91:32">&gt;</operator> <name pos:start="91:34" pos:end="91:46"><name pos:start="91:34" pos:end="91:36">qxl</name><operator pos:start="91:37" pos:end="91:38">-&gt;</operator><name pos:start="91:39" pos:end="91:43">dirty</name><index pos:start="91:44" pos:end="91:46">[<expr pos:start="91:45" pos:end="91:45"><name pos:start="91:45" pos:end="91:45">i</name></expr>]</index></name><operator pos:start="91:47" pos:end="91:47">.</operator><name pos:start="91:48" pos:end="91:52">right</name> <operator pos:start="91:54" pos:end="91:55">||</operator>

            <name pos:start="93:13" pos:end="93:25"><name pos:start="93:13" pos:end="93:15">qxl</name><operator pos:start="93:16" pos:end="93:17">-&gt;</operator><name pos:start="93:18" pos:end="93:22">dirty</name><index pos:start="93:23" pos:end="93:25">[<expr pos:start="93:24" pos:end="93:24"><name pos:start="93:24" pos:end="93:24">i</name></expr>]</index></name><operator pos:start="93:26" pos:end="93:26">.</operator><name pos:start="93:27" pos:end="93:29">top</name> <operator pos:start="93:31" pos:end="93:31">&gt;</operator> <name pos:start="93:33" pos:end="93:45"><name pos:start="93:33" pos:end="93:35">qxl</name><operator pos:start="93:36" pos:end="93:37">-&gt;</operator><name pos:start="93:38" pos:end="93:42">dirty</name><index pos:start="93:43" pos:end="93:45">[<expr pos:start="93:44" pos:end="93:44"><name pos:start="93:44" pos:end="93:44">i</name></expr>]</index></name><operator pos:start="93:46" pos:end="93:46">.</operator><name pos:start="93:47" pos:end="93:52">bottom</name> <operator pos:start="93:54" pos:end="93:55">||</operator>

            <name pos:start="95:13" pos:end="95:25"><name pos:start="95:13" pos:end="95:15">qxl</name><operator pos:start="95:16" pos:end="95:17">-&gt;</operator><name pos:start="95:18" pos:end="95:22">dirty</name><index pos:start="95:23" pos:end="95:25">[<expr pos:start="95:24" pos:end="95:24"><name pos:start="95:24" pos:end="95:24">i</name></expr>]</index></name><operator pos:start="95:26" pos:end="95:26">.</operator><name pos:start="95:27" pos:end="95:31">right</name> <operator pos:start="95:33" pos:end="95:33">&gt;</operator> <name pos:start="95:35" pos:end="95:66"><name pos:start="95:35" pos:end="95:37">qxl</name><operator pos:start="95:38" pos:end="95:39">-&gt;</operator><name pos:start="95:40" pos:end="95:52">guest_primary</name><operator pos:start="95:53" pos:end="95:53">.</operator><name pos:start="95:54" pos:end="95:60">surface</name><operator pos:start="95:61" pos:end="95:61">.</operator><name pos:start="95:62" pos:end="95:66">width</name></name> <operator pos:start="95:68" pos:end="95:69">||</operator>

            <name pos:start="97:13" pos:end="97:25"><name pos:start="97:13" pos:end="97:15">qxl</name><operator pos:start="97:16" pos:end="97:17">-&gt;</operator><name pos:start="97:18" pos:end="97:22">dirty</name><index pos:start="97:23" pos:end="97:25">[<expr pos:start="97:24" pos:end="97:24"><name pos:start="97:24" pos:end="97:24">i</name></expr>]</index></name><operator pos:start="97:26" pos:end="97:26">.</operator><name pos:start="97:27" pos:end="97:32">bottom</name> <operator pos:start="97:34" pos:end="97:34">&gt;</operator> <name pos:start="97:36" pos:end="97:68"><name pos:start="97:36" pos:end="97:38">qxl</name><operator pos:start="97:39" pos:end="97:40">-&gt;</operator><name pos:start="97:41" pos:end="97:53">guest_primary</name><operator pos:start="97:54" pos:end="97:54">.</operator><name pos:start="97:55" pos:end="97:61">surface</name><operator pos:start="97:62" pos:end="97:62">.</operator><name pos:start="97:63" pos:end="97:68">height</name></name></expr>)</condition> <block pos:start="97:71" pos:end="101:9">{<block_content pos:start="99:13" pos:end="99:21">

            <continue pos:start="99:13" pos:end="99:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:36"><expr pos:start="103:9" pos:end="103:35"><call pos:start="103:9" pos:end="103:35"><name pos:start="103:9" pos:end="103:16">qxl_blit</name><argument_list pos:start="103:17" pos:end="103:35">(<argument pos:start="103:18" pos:end="103:20"><expr pos:start="103:18" pos:end="103:20"><name pos:start="103:18" pos:end="103:20">qxl</name></expr></argument>, <argument pos:start="103:23" pos:end="103:34"><expr pos:start="103:23" pos:end="103:34"><name pos:start="103:23" pos:end="103:32"><name pos:start="103:23" pos:end="103:25">qxl</name><operator pos:start="103:26" pos:end="103:27">-&gt;</operator><name pos:start="103:28" pos:end="103:32">dirty</name></name><operator pos:start="103:33" pos:end="103:33">+</operator><name pos:start="103:34" pos:end="103:34">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="111:65"><expr pos:start="105:9" pos:end="111:64"><call pos:start="105:9" pos:end="111:64"><name pos:start="105:9" pos:end="105:22">dpy_gfx_update</name><argument_list pos:start="105:23" pos:end="111:64">(<argument pos:start="105:24" pos:end="105:31"><expr pos:start="105:24" pos:end="105:31"><name pos:start="105:24" pos:end="105:31"><name pos:start="105:24" pos:end="105:26">vga</name><operator pos:start="105:27" pos:end="105:28">-&gt;</operator><name pos:start="105:29" pos:end="105:31">con</name></name></expr></argument>,

                       <argument pos:start="107:24" pos:end="107:41"><expr pos:start="107:24" pos:end="107:41"><name pos:start="107:24" pos:end="107:36"><name pos:start="107:24" pos:end="107:26">qxl</name><operator pos:start="107:27" pos:end="107:28">-&gt;</operator><name pos:start="107:29" pos:end="107:33">dirty</name><index pos:start="107:34" pos:end="107:36">[<expr pos:start="107:35" pos:end="107:35"><name pos:start="107:35" pos:end="107:35">i</name></expr>]</index></name><operator pos:start="107:37" pos:end="107:37">.</operator><name pos:start="107:38" pos:end="107:41">left</name></expr></argument>, <argument pos:start="107:44" pos:end="107:60"><expr pos:start="107:44" pos:end="107:60"><name pos:start="107:44" pos:end="107:56"><name pos:start="107:44" pos:end="107:46">qxl</name><operator pos:start="107:47" pos:end="107:48">-&gt;</operator><name pos:start="107:49" pos:end="107:53">dirty</name><index pos:start="107:54" pos:end="107:56">[<expr pos:start="107:55" pos:end="107:55"><name pos:start="107:55" pos:end="107:55">i</name></expr>]</index></name><operator pos:start="107:57" pos:end="107:57">.</operator><name pos:start="107:58" pos:end="107:60">top</name></expr></argument>,

                       <argument pos:start="109:24" pos:end="109:63"><expr pos:start="109:24" pos:end="109:63"><name pos:start="109:24" pos:end="109:36"><name pos:start="109:24" pos:end="109:26">qxl</name><operator pos:start="109:27" pos:end="109:28">-&gt;</operator><name pos:start="109:29" pos:end="109:33">dirty</name><index pos:start="109:34" pos:end="109:36">[<expr pos:start="109:35" pos:end="109:35"><name pos:start="109:35" pos:end="109:35">i</name></expr>]</index></name><operator pos:start="109:37" pos:end="109:37">.</operator><name pos:start="109:38" pos:end="109:42">right</name> <operator pos:start="109:44" pos:end="109:44">-</operator> <name pos:start="109:46" pos:end="109:58"><name pos:start="109:46" pos:end="109:48">qxl</name><operator pos:start="109:49" pos:end="109:50">-&gt;</operator><name pos:start="109:51" pos:end="109:55">dirty</name><index pos:start="109:56" pos:end="109:58">[<expr pos:start="109:57" pos:end="109:57"><name pos:start="109:57" pos:end="109:57">i</name></expr>]</index></name><operator pos:start="109:59" pos:end="109:59">.</operator><name pos:start="109:60" pos:end="109:63">left</name></expr></argument>,

                       <argument pos:start="111:24" pos:end="111:63"><expr pos:start="111:24" pos:end="111:63"><name pos:start="111:24" pos:end="111:36"><name pos:start="111:24" pos:end="111:26">qxl</name><operator pos:start="111:27" pos:end="111:28">-&gt;</operator><name pos:start="111:29" pos:end="111:33">dirty</name><index pos:start="111:34" pos:end="111:36">[<expr pos:start="111:35" pos:end="111:35"><name pos:start="111:35" pos:end="111:35">i</name></expr>]</index></name><operator pos:start="111:37" pos:end="111:37">.</operator><name pos:start="111:38" pos:end="111:43">bottom</name> <operator pos:start="111:45" pos:end="111:45">-</operator> <name pos:start="111:47" pos:end="111:59"><name pos:start="111:47" pos:end="111:49">qxl</name><operator pos:start="111:50" pos:end="111:51">-&gt;</operator><name pos:start="111:52" pos:end="111:56">dirty</name><index pos:start="111:57" pos:end="111:59">[<expr pos:start="111:58" pos:end="111:58"><name pos:start="111:58" pos:end="111:58">i</name></expr>]</index></name><operator pos:start="111:60" pos:end="111:60">.</operator><name pos:start="111:61" pos:end="111:63">top</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="115:5" pos:end="115:29"><expr pos:start="115:5" pos:end="115:28"><name pos:start="115:5" pos:end="115:24"><name pos:start="115:5" pos:end="115:7">qxl</name><operator pos:start="115:8" pos:end="115:9">-&gt;</operator><name pos:start="115:10" pos:end="115:24">num_dirty_rects</name></name> <operator pos:start="115:26" pos:end="115:26">=</operator> <literal type="number" pos:start="115:28" pos:end="115:28">0</literal></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
