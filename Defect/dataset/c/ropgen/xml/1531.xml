<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1531.c" pos:tabs="8"><function pos:start="1:1" pos:end="197:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:39">decode_vui_parameters</name><parameter_list pos:start="1:40" pos:end="1:65">(<parameter pos:start="1:41" pos:end="1:54"><decl pos:start="1:41" pos:end="1:54"><type pos:start="1:41" pos:end="1:54"><name pos:start="1:41" pos:end="1:51">H264Context</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">h</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:64"><decl pos:start="1:57" pos:end="1:64"><type pos:start="1:57" pos:end="1:64"><name pos:start="1:57" pos:end="1:59">SPS</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:64">sps</name></decl></parameter>)</parameter_list><block pos:start="1:66" pos:end="197:1">{<block_content pos:start="3:5" pos:end="195:13">

    <decl_stmt pos:start="3:5" pos:end="3:37"><decl pos:start="3:5" pos:end="3:36"><type pos:start="3:5" pos:end="3:26"><name pos:start="3:5" pos:end="3:18">MpegEncContext</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier> <specifier pos:start="3:22" pos:end="3:26">const</specifier></type> <name pos:start="3:28" pos:end="3:28">s</name> <init pos:start="3:30" pos:end="3:36">= <expr pos:start="3:32" pos:end="3:36"><operator pos:start="3:32" pos:end="3:32">&amp;</operator><name pos:start="3:33" pos:end="3:36"><name pos:start="3:33" pos:end="3:33">h</name><operator pos:start="3:34" pos:end="3:35">-&gt;</operator><name pos:start="3:36" pos:end="3:36">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:38">aspect_ratio_info_present_flag</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:33">aspect_ratio_idc</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:54"><expr pos:start="11:5" pos:end="11:53"><name pos:start="11:5" pos:end="11:34">aspect_ratio_info_present_flag</name><operator pos:start="11:35" pos:end="11:35">=</operator> <call pos:start="11:37" pos:end="11:53"><name pos:start="11:37" pos:end="11:45">get_bits1</name><argument_list pos:start="11:46" pos:end="11:53">(<argument pos:start="11:47" pos:end="11:52"><expr pos:start="11:47" pos:end="11:52"><operator pos:start="11:47" pos:end="11:47">&amp;</operator><name pos:start="11:48" pos:end="11:52"><name pos:start="11:48" pos:end="11:48">s</name><operator pos:start="11:49" pos:end="11:50">-&gt;</operator><name pos:start="11:51" pos:end="11:52">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="43:5"><if pos:start="15:5" pos:end="37:5">if<condition pos:start="15:7" pos:end="15:40">( <expr pos:start="15:9" pos:end="15:38"><name pos:start="15:9" pos:end="15:38">aspect_ratio_info_present_flag</name></expr> )</condition> <block pos:start="15:42" pos:end="37:5">{<block_content pos:start="17:9" pos:end="35:9">

        <expr_stmt pos:start="17:9" pos:end="17:46"><expr pos:start="17:9" pos:end="17:45"><name pos:start="17:9" pos:end="17:24">aspect_ratio_idc</name><operator pos:start="17:25" pos:end="17:25">=</operator> <call pos:start="17:27" pos:end="17:45"><name pos:start="17:27" pos:end="17:34">get_bits</name><argument_list pos:start="17:35" pos:end="17:45">(<argument pos:start="17:36" pos:end="17:41"><expr pos:start="17:36" pos:end="17:41"><operator pos:start="17:36" pos:end="17:36">&amp;</operator><name pos:start="17:37" pos:end="17:41"><name pos:start="17:37" pos:end="17:37">s</name><operator pos:start="17:38" pos:end="17:39">-&gt;</operator><name pos:start="17:40" pos:end="17:41">gb</name></name></expr></argument>, <argument pos:start="17:44" pos:end="17:44"><expr pos:start="17:44" pos:end="17:44"><literal type="number" pos:start="17:44" pos:end="17:44">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="35:9"><if pos:start="19:9" pos:end="25:9">if<condition pos:start="19:11" pos:end="19:46">( <expr pos:start="19:13" pos:end="19:44"><name pos:start="19:13" pos:end="19:28">aspect_ratio_idc</name> <operator pos:start="19:30" pos:end="19:31">==</operator> <name pos:start="19:33" pos:end="19:44">EXTENDED_SAR</name></expr> )</condition> <block pos:start="19:48" pos:end="25:9">{<block_content pos:start="21:13" pos:end="23:47">

            <expr_stmt pos:start="21:13" pos:end="21:47"><expr pos:start="21:13" pos:end="21:46"><name pos:start="21:13" pos:end="21:24"><name pos:start="21:13" pos:end="21:15">sps</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:20">sar</name><operator pos:start="21:21" pos:end="21:21">.</operator><name pos:start="21:22" pos:end="21:24">num</name></name><operator pos:start="21:25" pos:end="21:25">=</operator> <call pos:start="21:27" pos:end="21:46"><name pos:start="21:27" pos:end="21:34">get_bits</name><argument_list pos:start="21:35" pos:end="21:46">(<argument pos:start="21:36" pos:end="21:41"><expr pos:start="21:36" pos:end="21:41"><operator pos:start="21:36" pos:end="21:36">&amp;</operator><name pos:start="21:37" pos:end="21:41"><name pos:start="21:37" pos:end="21:37">s</name><operator pos:start="21:38" pos:end="21:39">-&gt;</operator><name pos:start="21:40" pos:end="21:41">gb</name></name></expr></argument>, <argument pos:start="21:44" pos:end="21:45"><expr pos:start="21:44" pos:end="21:45"><literal type="number" pos:start="21:44" pos:end="21:45">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:47"><expr pos:start="23:13" pos:end="23:46"><name pos:start="23:13" pos:end="23:24"><name pos:start="23:13" pos:end="23:15">sps</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:20">sar</name><operator pos:start="23:21" pos:end="23:21">.</operator><name pos:start="23:22" pos:end="23:24">den</name></name><operator pos:start="23:25" pos:end="23:25">=</operator> <call pos:start="23:27" pos:end="23:46"><name pos:start="23:27" pos:end="23:34">get_bits</name><argument_list pos:start="23:35" pos:end="23:46">(<argument pos:start="23:36" pos:end="23:41"><expr pos:start="23:36" pos:end="23:41"><operator pos:start="23:36" pos:end="23:36">&amp;</operator><name pos:start="23:37" pos:end="23:41"><name pos:start="23:37" pos:end="23:37">s</name><operator pos:start="23:38" pos:end="23:39">-&gt;</operator><name pos:start="23:40" pos:end="23:41">gb</name></name></expr></argument>, <argument pos:start="23:44" pos:end="23:45"><expr pos:start="23:44" pos:end="23:45"><literal type="number" pos:start="23:44" pos:end="23:45">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if><if type="elseif" pos:start="25:10" pos:end="29:9">else if<condition pos:start="25:17" pos:end="25:65">(<expr pos:start="25:18" pos:end="25:64"><name pos:start="25:18" pos:end="25:33">aspect_ratio_idc</name> <operator pos:start="25:35" pos:end="25:35">&lt;</operator> <call pos:start="25:37" pos:end="25:64"><name pos:start="25:37" pos:end="25:50">FF_ARRAY_ELEMS</name><argument_list pos:start="25:51" pos:end="25:64">(<argument pos:start="25:52" pos:end="25:63"><expr pos:start="25:52" pos:end="25:63"><name pos:start="25:52" pos:end="25:63">pixel_aspect</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="25:66" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:54">

            <expr_stmt pos:start="27:13" pos:end="27:54"><expr pos:start="27:13" pos:end="27:53"><name pos:start="27:13" pos:end="27:20"><name pos:start="27:13" pos:end="27:15">sps</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:20">sar</name></name><operator pos:start="27:21" pos:end="27:21">=</operator>  <name pos:start="27:24" pos:end="27:53"><name pos:start="27:24" pos:end="27:35">pixel_aspect</name><index pos:start="27:36" pos:end="27:53">[<expr pos:start="27:37" pos:end="27:52"><name pos:start="27:37" pos:end="27:52">aspect_ratio_idc</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="29:10" pos:end="35:9">else<block pos:start="29:14" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:22">

            <expr_stmt pos:start="31:13" pos:end="31:71"><expr pos:start="31:13" pos:end="31:70"><call pos:start="31:13" pos:end="31:70"><name pos:start="31:13" pos:end="31:18">av_log</name><argument_list pos:start="31:19" pos:end="31:70">(<argument pos:start="31:20" pos:end="31:29"><expr pos:start="31:20" pos:end="31:29"><name pos:start="31:20" pos:end="31:29"><name pos:start="31:20" pos:end="31:20">h</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:23">s</name><operator pos:start="31:24" pos:end="31:24">.</operator><name pos:start="31:25" pos:end="31:29">avctx</name></name></expr></argument>, <argument pos:start="31:32" pos:end="31:43"><expr pos:start="31:32" pos:end="31:43"><name pos:start="31:32" pos:end="31:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="31:46" pos:end="31:69"><expr pos:start="31:46" pos:end="31:69"><literal type="string" pos:start="31:46" pos:end="31:69">"illegal aspect ratio\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="33:13" pos:end="33:22">return <expr pos:start="33:20" pos:end="33:21"><operator pos:start="33:20" pos:end="33:20">-</operator><literal type="number" pos:start="33:21" pos:end="33:21">1</literal></expr>;</return>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if><else pos:start="37:6" pos:end="43:5">else<block pos:start="37:10" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:24">

        <expr_stmt pos:start="39:9" pos:end="41:24"><expr pos:start="39:9" pos:end="41:23"><name pos:start="39:9" pos:end="39:20"><name pos:start="39:9" pos:end="39:11">sps</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:16">sar</name><operator pos:start="39:17" pos:end="39:17">.</operator><name pos:start="39:18" pos:end="39:20">num</name></name><operator pos:start="39:21" pos:end="39:21">=</operator>

        <name pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:11">sps</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:16">sar</name><operator pos:start="41:17" pos:end="41:17">.</operator><name pos:start="41:18" pos:end="41:20">den</name></name><operator pos:start="41:21" pos:end="41:21">=</operator> <literal type="number" pos:start="41:23" pos:end="41:23">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

<comment type="line" pos:start="45:1" pos:end="45:89">//            s-&gt;avctx-&gt;aspect_ratio= sar_width*s-&gt;width / (float)(s-&gt;height*sar_height);</comment>



    <if_stmt pos:start="49:5" pos:end="53:5"><if pos:start="49:5" pos:end="53:5">if<condition pos:start="49:7" pos:end="49:25">(<expr pos:start="49:8" pos:end="49:24"><call pos:start="49:8" pos:end="49:24"><name pos:start="49:8" pos:end="49:16">get_bits1</name><argument_list pos:start="49:17" pos:end="49:24">(<argument pos:start="49:18" pos:end="49:23"><expr pos:start="49:18" pos:end="49:23"><operator pos:start="49:18" pos:end="49:18">&amp;</operator><name pos:start="49:19" pos:end="49:23"><name pos:start="49:19" pos:end="49:19">s</name><operator pos:start="49:20" pos:end="49:21">-&gt;</operator><name pos:start="49:22" pos:end="49:23">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="49:26" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:26">      <comment type="block" pos:start="49:33" pos:end="49:64">/* overscan_info_present_flag */</comment>

        <expr_stmt pos:start="51:9" pos:end="51:26"><expr pos:start="51:9" pos:end="51:25"><call pos:start="51:9" pos:end="51:25"><name pos:start="51:9" pos:end="51:17">get_bits1</name><argument_list pos:start="51:18" pos:end="51:25">(<argument pos:start="51:19" pos:end="51:24"><expr pos:start="51:19" pos:end="51:24"><operator pos:start="51:19" pos:end="51:19">&amp;</operator><name pos:start="51:20" pos:end="51:24"><name pos:start="51:20" pos:end="51:20">s</name><operator pos:start="51:21" pos:end="51:22">-&gt;</operator><name pos:start="51:23" pos:end="51:24">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>      <comment type="block" pos:start="51:33" pos:end="51:63">/* overscan_appropriate_flag */</comment>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:60"><expr pos:start="57:5" pos:end="57:59"><name pos:start="57:5" pos:end="57:39"><name pos:start="57:5" pos:end="57:7">sps</name><operator pos:start="57:8" pos:end="57:9">-&gt;</operator><name pos:start="57:10" pos:end="57:39">video_signal_type_present_flag</name></name> <operator pos:start="57:41" pos:end="57:41">=</operator> <call pos:start="57:43" pos:end="57:59"><name pos:start="57:43" pos:end="57:51">get_bits1</name><argument_list pos:start="57:52" pos:end="57:59">(<argument pos:start="57:53" pos:end="57:58"><expr pos:start="57:53" pos:end="57:58"><operator pos:start="57:53" pos:end="57:53">&amp;</operator><name pos:start="57:54" pos:end="57:58"><name pos:start="57:54" pos:end="57:54">s</name><operator pos:start="57:55" pos:end="57:56">-&gt;</operator><name pos:start="57:57" pos:end="57:58">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="91:5"><if pos:start="59:5" pos:end="91:5">if<condition pos:start="59:7" pos:end="59:43">(<expr pos:start="59:8" pos:end="59:42"><name pos:start="59:8" pos:end="59:42"><name pos:start="59:8" pos:end="59:10">sps</name><operator pos:start="59:11" pos:end="59:12">-&gt;</operator><name pos:start="59:13" pos:end="59:42">video_signal_type_present_flag</name></name></expr>)</condition><block pos:start="59:44" pos:end="91:5">{<block_content pos:start="61:9" pos:end="89:9">

        <expr_stmt pos:start="61:9" pos:end="61:28"><expr pos:start="61:9" pos:end="61:27"><call pos:start="61:9" pos:end="61:27"><name pos:start="61:9" pos:end="61:16">get_bits</name><argument_list pos:start="61:17" pos:end="61:27">(<argument pos:start="61:18" pos:end="61:23"><expr pos:start="61:18" pos:end="61:23"><operator pos:start="61:18" pos:end="61:18">&amp;</operator><name pos:start="61:19" pos:end="61:23"><name pos:start="61:19" pos:end="61:19">s</name><operator pos:start="61:20" pos:end="61:21">-&gt;</operator><name pos:start="61:22" pos:end="61:23">gb</name></name></expr></argument>, <argument pos:start="61:26" pos:end="61:26"><expr pos:start="61:26" pos:end="61:26"><literal type="number" pos:start="61:26" pos:end="61:26">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <comment type="block" pos:start="61:33" pos:end="61:50">/* video_format */</comment>

        <expr_stmt pos:start="63:9" pos:end="63:44"><expr pos:start="63:9" pos:end="63:43"><name pos:start="63:9" pos:end="63:23"><name pos:start="63:9" pos:end="63:11">sps</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:23">full_range</name></name> <operator pos:start="63:25" pos:end="63:25">=</operator> <call pos:start="63:27" pos:end="63:43"><name pos:start="63:27" pos:end="63:35">get_bits1</name><argument_list pos:start="63:36" pos:end="63:43">(<argument pos:start="63:37" pos:end="63:42"><expr pos:start="63:37" pos:end="63:42"><operator pos:start="63:37" pos:end="63:37">&amp;</operator><name pos:start="63:38" pos:end="63:42"><name pos:start="63:38" pos:end="63:38">s</name><operator pos:start="63:39" pos:end="63:40">-&gt;</operator><name pos:start="63:41" pos:end="63:42">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="63:46" pos:end="63:72">/* video_full_range_flag */</comment>



        <expr_stmt pos:start="67:9" pos:end="67:65"><expr pos:start="67:9" pos:end="67:64"><name pos:start="67:9" pos:end="67:44"><name pos:start="67:9" pos:end="67:11">sps</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:44">colour_description_present_flag</name></name> <operator pos:start="67:46" pos:end="67:46">=</operator> <call pos:start="67:48" pos:end="67:64"><name pos:start="67:48" pos:end="67:56">get_bits1</name><argument_list pos:start="67:57" pos:end="67:64">(<argument pos:start="67:58" pos:end="67:63"><expr pos:start="67:58" pos:end="67:63"><operator pos:start="67:58" pos:end="67:58">&amp;</operator><name pos:start="67:59" pos:end="67:63"><name pos:start="67:59" pos:end="67:59">s</name><operator pos:start="67:60" pos:end="67:61">-&gt;</operator><name pos:start="67:62" pos:end="67:63">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="89:9"><if pos:start="69:9" pos:end="89:9">if<condition pos:start="69:11" pos:end="69:48">(<expr pos:start="69:12" pos:end="69:47"><name pos:start="69:12" pos:end="69:47"><name pos:start="69:12" pos:end="69:14">sps</name><operator pos:start="69:15" pos:end="69:16">-&gt;</operator><name pos:start="69:17" pos:end="69:47">colour_description_present_flag</name></name></expr>)</condition><block pos:start="69:49" pos:end="89:9">{<block_content pos:start="71:13" pos:end="87:57">

            <expr_stmt pos:start="71:13" pos:end="71:55"><expr pos:start="71:13" pos:end="71:54"><name pos:start="71:13" pos:end="71:32"><name pos:start="71:13" pos:end="71:15">sps</name><operator pos:start="71:16" pos:end="71:17">-&gt;</operator><name pos:start="71:18" pos:end="71:32">color_primaries</name></name> <operator pos:start="71:34" pos:end="71:34">=</operator> <call pos:start="71:36" pos:end="71:54"><name pos:start="71:36" pos:end="71:43">get_bits</name><argument_list pos:start="71:44" pos:end="71:54">(<argument pos:start="71:45" pos:end="71:50"><expr pos:start="71:45" pos:end="71:50"><operator pos:start="71:45" pos:end="71:45">&amp;</operator><name pos:start="71:46" pos:end="71:50"><name pos:start="71:46" pos:end="71:46">s</name><operator pos:start="71:47" pos:end="71:48">-&gt;</operator><name pos:start="71:49" pos:end="71:50">gb</name></name></expr></argument>, <argument pos:start="71:53" pos:end="71:53"><expr pos:start="71:53" pos:end="71:53"><literal type="number" pos:start="71:53" pos:end="71:53">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="71:57" pos:end="71:78">/* colour_primaries */</comment>

            <expr_stmt pos:start="73:13" pos:end="73:55"><expr pos:start="73:13" pos:end="73:54"><name pos:start="73:13" pos:end="73:26"><name pos:start="73:13" pos:end="73:15">sps</name><operator pos:start="73:16" pos:end="73:17">-&gt;</operator><name pos:start="73:18" pos:end="73:26">color_trc</name></name>       <operator pos:start="73:34" pos:end="73:34">=</operator> <call pos:start="73:36" pos:end="73:54"><name pos:start="73:36" pos:end="73:43">get_bits</name><argument_list pos:start="73:44" pos:end="73:54">(<argument pos:start="73:45" pos:end="73:50"><expr pos:start="73:45" pos:end="73:50"><operator pos:start="73:45" pos:end="73:45">&amp;</operator><name pos:start="73:46" pos:end="73:50"><name pos:start="73:46" pos:end="73:46">s</name><operator pos:start="73:47" pos:end="73:48">-&gt;</operator><name pos:start="73:49" pos:end="73:50">gb</name></name></expr></argument>, <argument pos:start="73:53" pos:end="73:53"><expr pos:start="73:53" pos:end="73:53"><literal type="number" pos:start="73:53" pos:end="73:53">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="73:57" pos:end="73:86">/* transfer_characteristics */</comment>

            <expr_stmt pos:start="75:13" pos:end="75:55"><expr pos:start="75:13" pos:end="75:54"><name pos:start="75:13" pos:end="75:27"><name pos:start="75:13" pos:end="75:15">sps</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:27">colorspace</name></name>      <operator pos:start="75:34" pos:end="75:34">=</operator> <call pos:start="75:36" pos:end="75:54"><name pos:start="75:36" pos:end="75:43">get_bits</name><argument_list pos:start="75:44" pos:end="75:54">(<argument pos:start="75:45" pos:end="75:50"><expr pos:start="75:45" pos:end="75:50"><operator pos:start="75:45" pos:end="75:45">&amp;</operator><name pos:start="75:46" pos:end="75:50"><name pos:start="75:46" pos:end="75:46">s</name><operator pos:start="75:47" pos:end="75:48">-&gt;</operator><name pos:start="75:49" pos:end="75:50">gb</name></name></expr></argument>, <argument pos:start="75:53" pos:end="75:53"><expr pos:start="75:53" pos:end="75:53"><literal type="number" pos:start="75:53" pos:end="75:53">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="75:57" pos:end="75:81">/* matrix_coefficients */</comment>

            <if_stmt pos:start="77:13" pos:end="79:62"><if pos:start="77:13" pos:end="79:62">if <condition pos:start="77:16" pos:end="77:53">(<expr pos:start="77:17" pos:end="77:52"><name pos:start="77:17" pos:end="77:36"><name pos:start="77:17" pos:end="77:19">sps</name><operator pos:start="77:20" pos:end="77:21">-&gt;</operator><name pos:start="77:22" pos:end="77:36">color_primaries</name></name> <operator pos:start="77:38" pos:end="77:39">&gt;=</operator> <name pos:start="77:41" pos:end="77:52">AVCOL_PRI_NB</name></expr>)</condition><block type="pseudo" pos:start="79:17" pos:end="79:62"><block_content pos:start="79:17" pos:end="79:62">

                <expr_stmt pos:start="79:17" pos:end="79:62"><expr pos:start="79:17" pos:end="79:61"><name pos:start="79:17" pos:end="79:36"><name pos:start="79:17" pos:end="79:19">sps</name><operator pos:start="79:20" pos:end="79:21">-&gt;</operator><name pos:start="79:22" pos:end="79:36">color_primaries</name></name>  <operator pos:start="79:39" pos:end="79:39">=</operator> <name pos:start="79:41" pos:end="79:61">AVCOL_PRI_UNSPECIFIED</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="81:13" pos:end="83:56"><if pos:start="81:13" pos:end="83:56">if <condition pos:start="81:16" pos:end="81:47">(<expr pos:start="81:17" pos:end="81:46"><name pos:start="81:17" pos:end="81:30"><name pos:start="81:17" pos:end="81:19">sps</name><operator pos:start="81:20" pos:end="81:21">-&gt;</operator><name pos:start="81:22" pos:end="81:30">color_trc</name></name> <operator pos:start="81:32" pos:end="81:33">&gt;=</operator> <name pos:start="81:35" pos:end="81:46">AVCOL_TRC_NB</name></expr>)</condition><block type="pseudo" pos:start="83:17" pos:end="83:56"><block_content pos:start="83:17" pos:end="83:56">

                <expr_stmt pos:start="83:17" pos:end="83:56"><expr pos:start="83:17" pos:end="83:55"><name pos:start="83:17" pos:end="83:30"><name pos:start="83:17" pos:end="83:19">sps</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:30">color_trc</name></name>  <operator pos:start="83:33" pos:end="83:33">=</operator> <name pos:start="83:35" pos:end="83:55">AVCOL_TRC_UNSPECIFIED</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="85:13" pos:end="87:57"><if pos:start="85:13" pos:end="87:57">if <condition pos:start="85:16" pos:end="85:48">(<expr pos:start="85:17" pos:end="85:47"><name pos:start="85:17" pos:end="85:31"><name pos:start="85:17" pos:end="85:19">sps</name><operator pos:start="85:20" pos:end="85:21">-&gt;</operator><name pos:start="85:22" pos:end="85:31">colorspace</name></name> <operator pos:start="85:33" pos:end="85:34">&gt;=</operator> <name pos:start="85:36" pos:end="85:47">AVCOL_SPC_NB</name></expr>)</condition><block type="pseudo" pos:start="87:17" pos:end="87:57"><block_content pos:start="87:17" pos:end="87:57">

                <expr_stmt pos:start="87:17" pos:end="87:57"><expr pos:start="87:17" pos:end="87:56"><name pos:start="87:17" pos:end="87:31"><name pos:start="87:17" pos:end="87:19">sps</name><operator pos:start="87:20" pos:end="87:21">-&gt;</operator><name pos:start="87:22" pos:end="87:31">colorspace</name></name>  <operator pos:start="87:34" pos:end="87:34">=</operator> <name pos:start="87:36" pos:end="87:56">AVCOL_SPC_UNSPECIFIED</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="95:5" pos:end="101:5"><if pos:start="95:5" pos:end="101:5">if<condition pos:start="95:7" pos:end="95:25">(<expr pos:start="95:8" pos:end="95:24"><call pos:start="95:8" pos:end="95:24"><name pos:start="95:8" pos:end="95:16">get_bits1</name><argument_list pos:start="95:17" pos:end="95:24">(<argument pos:start="95:18" pos:end="95:23"><expr pos:start="95:18" pos:end="95:23"><operator pos:start="95:18" pos:end="95:18">&amp;</operator><name pos:start="95:19" pos:end="95:23"><name pos:start="95:19" pos:end="95:19">s</name><operator pos:start="95:20" pos:end="95:21">-&gt;</operator><name pos:start="95:22" pos:end="95:23">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="95:26" pos:end="101:5">{<block_content pos:start="97:9" pos:end="99:30">      <comment type="block" pos:start="95:33" pos:end="95:71">/* chroma_location_info_present_flag */</comment>

        <expr_stmt pos:start="97:9" pos:end="97:67"><expr pos:start="97:9" pos:end="97:66"><name pos:start="97:9" pos:end="97:40"><name pos:start="97:9" pos:end="97:9">s</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:16">avctx</name><operator pos:start="97:17" pos:end="97:18">-&gt;</operator><name pos:start="97:19" pos:end="97:40">chroma_sample_location</name></name> <operator pos:start="97:42" pos:end="97:42">=</operator> <call pos:start="97:44" pos:end="97:64"><name pos:start="97:44" pos:end="97:56">get_ue_golomb</name><argument_list pos:start="97:57" pos:end="97:64">(<argument pos:start="97:58" pos:end="97:63"><expr pos:start="97:58" pos:end="97:63"><operator pos:start="97:58" pos:end="97:58">&amp;</operator><name pos:start="97:59" pos:end="97:63"><name pos:start="97:59" pos:end="97:59">s</name><operator pos:start="97:60" pos:end="97:61">-&gt;</operator><name pos:start="97:62" pos:end="97:63">gb</name></name></expr></argument>)</argument_list></call><operator pos:start="97:65" pos:end="97:65">+</operator><literal type="number" pos:start="97:66" pos:end="97:66">1</literal></expr>;</expr_stmt>  <comment type="block" pos:start="97:70" pos:end="97:112">/* chroma_sample_location_type_top_field */</comment>

        <expr_stmt pos:start="99:9" pos:end="99:30"><expr pos:start="99:9" pos:end="99:29"><call pos:start="99:9" pos:end="99:29"><name pos:start="99:9" pos:end="99:21">get_ue_golomb</name><argument_list pos:start="99:22" pos:end="99:29">(<argument pos:start="99:23" pos:end="99:28"><expr pos:start="99:23" pos:end="99:28"><operator pos:start="99:23" pos:end="99:23">&amp;</operator><name pos:start="99:24" pos:end="99:28"><name pos:start="99:24" pos:end="99:24">s</name><operator pos:start="99:25" pos:end="99:26">-&gt;</operator><name pos:start="99:27" pos:end="99:28">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="block" pos:start="99:33" pos:end="99:78">/* chroma_sample_location_type_bottom_field */</comment>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:54"><expr pos:start="105:5" pos:end="105:53"><name pos:start="105:5" pos:end="105:33"><name pos:start="105:5" pos:end="105:7">sps</name><operator pos:start="105:8" pos:end="105:9">-&gt;</operator><name pos:start="105:10" pos:end="105:33">timing_info_present_flag</name></name> <operator pos:start="105:35" pos:end="105:35">=</operator> <call pos:start="105:37" pos:end="105:53"><name pos:start="105:37" pos:end="105:45">get_bits1</name><argument_list pos:start="105:46" pos:end="105:53">(<argument pos:start="105:47" pos:end="105:52"><expr pos:start="105:47" pos:end="105:52"><operator pos:start="105:47" pos:end="105:47">&amp;</operator><name pos:start="105:48" pos:end="105:52"><name pos:start="105:48" pos:end="105:48">s</name><operator pos:start="105:49" pos:end="105:50">-&gt;</operator><name pos:start="105:51" pos:end="105:52">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="107:5" pos:end="123:5"><if pos:start="107:5" pos:end="123:5">if<condition pos:start="107:7" pos:end="107:37">(<expr pos:start="107:8" pos:end="107:36"><name pos:start="107:8" pos:end="107:36"><name pos:start="107:8" pos:end="107:10">sps</name><operator pos:start="107:11" pos:end="107:12">-&gt;</operator><name pos:start="107:13" pos:end="107:36">timing_info_present_flag</name></name></expr>)</condition><block pos:start="107:38" pos:end="123:5">{<block_content pos:start="109:9" pos:end="121:55">

        <expr_stmt pos:start="109:9" pos:end="109:59"><expr pos:start="109:9" pos:end="109:58"><name pos:start="109:9" pos:end="109:30"><name pos:start="109:9" pos:end="109:11">sps</name><operator pos:start="109:12" pos:end="109:13">-&gt;</operator><name pos:start="109:14" pos:end="109:30">num_units_in_tick</name></name> <operator pos:start="109:32" pos:end="109:32">=</operator> <call pos:start="109:34" pos:end="109:58"><name pos:start="109:34" pos:end="109:46">get_bits_long</name><argument_list pos:start="109:47" pos:end="109:58">(<argument pos:start="109:48" pos:end="109:53"><expr pos:start="109:48" pos:end="109:53"><operator pos:start="109:48" pos:end="109:48">&amp;</operator><name pos:start="109:49" pos:end="109:53"><name pos:start="109:49" pos:end="109:49">s</name><operator pos:start="109:50" pos:end="109:51">-&gt;</operator><name pos:start="109:52" pos:end="109:53">gb</name></name></expr></argument>, <argument pos:start="109:56" pos:end="109:57"><expr pos:start="109:56" pos:end="109:57"><literal type="number" pos:start="109:56" pos:end="109:57">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:52"><expr pos:start="111:9" pos:end="111:51"><name pos:start="111:9" pos:end="111:23"><name pos:start="111:9" pos:end="111:11">sps</name><operator pos:start="111:12" pos:end="111:13">-&gt;</operator><name pos:start="111:14" pos:end="111:23">time_scale</name></name> <operator pos:start="111:25" pos:end="111:25">=</operator> <call pos:start="111:27" pos:end="111:51"><name pos:start="111:27" pos:end="111:39">get_bits_long</name><argument_list pos:start="111:40" pos:end="111:51">(<argument pos:start="111:41" pos:end="111:46"><expr pos:start="111:41" pos:end="111:46"><operator pos:start="111:41" pos:end="111:41">&amp;</operator><name pos:start="111:42" pos:end="111:46"><name pos:start="111:42" pos:end="111:42">s</name><operator pos:start="111:43" pos:end="111:44">-&gt;</operator><name pos:start="111:45" pos:end="111:46">gb</name></name></expr></argument>, <argument pos:start="111:49" pos:end="111:50"><expr pos:start="111:49" pos:end="111:50"><literal type="number" pos:start="111:49" pos:end="111:50">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="113:9" pos:end="119:9"><if pos:start="113:9" pos:end="119:9">if<condition pos:start="113:11" pos:end="113:55">(<expr pos:start="113:12" pos:end="113:54"><operator pos:start="113:12" pos:end="113:12">!</operator><name pos:start="113:13" pos:end="113:34"><name pos:start="113:13" pos:end="113:15">sps</name><operator pos:start="113:16" pos:end="113:17">-&gt;</operator><name pos:start="113:18" pos:end="113:34">num_units_in_tick</name></name> <operator pos:start="113:36" pos:end="113:37">||</operator> <operator pos:start="113:39" pos:end="113:39">!</operator><name pos:start="113:40" pos:end="113:54"><name pos:start="113:40" pos:end="113:42">sps</name><operator pos:start="113:43" pos:end="113:44">-&gt;</operator><name pos:start="113:45" pos:end="113:54">time_scale</name></name></expr>)</condition><block pos:start="113:56" pos:end="119:9">{<block_content pos:start="115:13" pos:end="117:22">

            <expr_stmt pos:start="115:13" pos:end="115:151"><expr pos:start="115:13" pos:end="115:150"><call pos:start="115:13" pos:end="115:150"><name pos:start="115:13" pos:end="115:18">av_log</name><argument_list pos:start="115:19" pos:end="115:150">(<argument pos:start="115:20" pos:end="115:29"><expr pos:start="115:20" pos:end="115:29"><name pos:start="115:20" pos:end="115:29"><name pos:start="115:20" pos:end="115:20">h</name><operator pos:start="115:21" pos:end="115:22">-&gt;</operator><name pos:start="115:23" pos:end="115:23">s</name><operator pos:start="115:24" pos:end="115:24">.</operator><name pos:start="115:25" pos:end="115:29">avctx</name></name></expr></argument>, <argument pos:start="115:32" pos:end="115:43"><expr pos:start="115:32" pos:end="115:43"><name pos:start="115:32" pos:end="115:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="115:46" pos:end="115:108"><expr pos:start="115:46" pos:end="115:108"><literal type="string" pos:start="115:46" pos:end="115:108">"time_scale/num_units_in_tick invalid or unsupported (%d/%d)\n"</literal></expr></argument>, <argument pos:start="115:111" pos:end="115:125"><expr pos:start="115:111" pos:end="115:125"><name pos:start="115:111" pos:end="115:125"><name pos:start="115:111" pos:end="115:113">sps</name><operator pos:start="115:114" pos:end="115:115">-&gt;</operator><name pos:start="115:116" pos:end="115:125">time_scale</name></name></expr></argument>, <argument pos:start="115:128" pos:end="115:149"><expr pos:start="115:128" pos:end="115:149"><name pos:start="115:128" pos:end="115:149"><name pos:start="115:128" pos:end="115:130">sps</name><operator pos:start="115:131" pos:end="115:132">-&gt;</operator><name pos:start="115:133" pos:end="115:149">num_units_in_tick</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="117:13" pos:end="117:22">return <expr pos:start="117:20" pos:end="117:21"><operator pos:start="117:20" pos:end="117:20">-</operator><literal type="number" pos:start="117:21" pos:end="117:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:55"><expr pos:start="121:9" pos:end="121:54"><name pos:start="121:9" pos:end="121:34"><name pos:start="121:9" pos:end="121:11">sps</name><operator pos:start="121:12" pos:end="121:13">-&gt;</operator><name pos:start="121:14" pos:end="121:34">fixed_frame_rate_flag</name></name> <operator pos:start="121:36" pos:end="121:36">=</operator> <call pos:start="121:38" pos:end="121:54"><name pos:start="121:38" pos:end="121:46">get_bits1</name><argument_list pos:start="121:47" pos:end="121:54">(<argument pos:start="121:48" pos:end="121:53"><expr pos:start="121:48" pos:end="121:53"><operator pos:start="121:48" pos:end="121:48">&amp;</operator><name pos:start="121:49" pos:end="121:53"><name pos:start="121:49" pos:end="121:49">s</name><operator pos:start="121:50" pos:end="121:51">-&gt;</operator><name pos:start="121:52" pos:end="121:53">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:61"><expr pos:start="127:5" pos:end="127:60"><name pos:start="127:5" pos:end="127:40"><name pos:start="127:5" pos:end="127:7">sps</name><operator pos:start="127:8" pos:end="127:9">-&gt;</operator><name pos:start="127:10" pos:end="127:40">nal_hrd_parameters_present_flag</name></name> <operator pos:start="127:42" pos:end="127:42">=</operator> <call pos:start="127:44" pos:end="127:60"><name pos:start="127:44" pos:end="127:52">get_bits1</name><argument_list pos:start="127:53" pos:end="127:60">(<argument pos:start="127:54" pos:end="127:59"><expr pos:start="127:54" pos:end="127:59"><operator pos:start="127:54" pos:end="127:54">&amp;</operator><name pos:start="127:55" pos:end="127:59"><name pos:start="127:55" pos:end="127:55">s</name><operator pos:start="127:56" pos:end="127:57">-&gt;</operator><name pos:start="127:58" pos:end="127:59">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="129:5" pos:end="133:22"><if pos:start="129:5" pos:end="133:22">if<condition pos:start="129:7" pos:end="129:44">(<expr pos:start="129:8" pos:end="129:43"><name pos:start="129:8" pos:end="129:43"><name pos:start="129:8" pos:end="129:10">sps</name><operator pos:start="129:11" pos:end="129:12">-&gt;</operator><name pos:start="129:13" pos:end="129:43">nal_hrd_parameters_present_flag</name></name></expr>)</condition><block type="pseudo" pos:start="131:9" pos:end="133:22"><block_content pos:start="131:9" pos:end="133:22">

        <if_stmt pos:start="131:9" pos:end="133:22"><if pos:start="131:9" pos:end="133:22">if<condition pos:start="131:11" pos:end="131:45">(<expr pos:start="131:12" pos:end="131:44"><call pos:start="131:12" pos:end="131:40"><name pos:start="131:12" pos:end="131:32">decode_hrd_parameters</name><argument_list pos:start="131:33" pos:end="131:40">(<argument pos:start="131:34" pos:end="131:34"><expr pos:start="131:34" pos:end="131:34"><name pos:start="131:34" pos:end="131:34">h</name></expr></argument>, <argument pos:start="131:37" pos:end="131:39"><expr pos:start="131:37" pos:end="131:39"><name pos:start="131:37" pos:end="131:39">sps</name></expr></argument>)</argument_list></call> <operator pos:start="131:42" pos:end="131:42">&lt;</operator> <literal type="number" pos:start="131:44" pos:end="131:44">0</literal></expr>)</condition><block type="pseudo" pos:start="133:13" pos:end="133:22"><block_content pos:start="133:13" pos:end="133:22">

            <return pos:start="133:13" pos:end="133:22">return <expr pos:start="133:20" pos:end="133:21"><operator pos:start="133:20" pos:end="133:20">-</operator><literal type="number" pos:start="133:21" pos:end="133:21">1</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:61"><expr pos:start="135:5" pos:end="135:60"><name pos:start="135:5" pos:end="135:40"><name pos:start="135:5" pos:end="135:7">sps</name><operator pos:start="135:8" pos:end="135:9">-&gt;</operator><name pos:start="135:10" pos:end="135:40">vcl_hrd_parameters_present_flag</name></name> <operator pos:start="135:42" pos:end="135:42">=</operator> <call pos:start="135:44" pos:end="135:60"><name pos:start="135:44" pos:end="135:52">get_bits1</name><argument_list pos:start="135:53" pos:end="135:60">(<argument pos:start="135:54" pos:end="135:59"><expr pos:start="135:54" pos:end="135:59"><operator pos:start="135:54" pos:end="135:54">&amp;</operator><name pos:start="135:55" pos:end="135:59"><name pos:start="135:55" pos:end="135:55">s</name><operator pos:start="135:56" pos:end="135:57">-&gt;</operator><name pos:start="135:58" pos:end="135:59">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="137:5" pos:end="141:22"><if pos:start="137:5" pos:end="141:22">if<condition pos:start="137:7" pos:end="137:44">(<expr pos:start="137:8" pos:end="137:43"><name pos:start="137:8" pos:end="137:43"><name pos:start="137:8" pos:end="137:10">sps</name><operator pos:start="137:11" pos:end="137:12">-&gt;</operator><name pos:start="137:13" pos:end="137:43">vcl_hrd_parameters_present_flag</name></name></expr>)</condition><block type="pseudo" pos:start="139:9" pos:end="141:22"><block_content pos:start="139:9" pos:end="141:22">

        <if_stmt pos:start="139:9" pos:end="141:22"><if pos:start="139:9" pos:end="141:22">if<condition pos:start="139:11" pos:end="139:45">(<expr pos:start="139:12" pos:end="139:44"><call pos:start="139:12" pos:end="139:40"><name pos:start="139:12" pos:end="139:32">decode_hrd_parameters</name><argument_list pos:start="139:33" pos:end="139:40">(<argument pos:start="139:34" pos:end="139:34"><expr pos:start="139:34" pos:end="139:34"><name pos:start="139:34" pos:end="139:34">h</name></expr></argument>, <argument pos:start="139:37" pos:end="139:39"><expr pos:start="139:37" pos:end="139:39"><name pos:start="139:37" pos:end="139:39">sps</name></expr></argument>)</argument_list></call> <operator pos:start="139:42" pos:end="139:42">&lt;</operator> <literal type="number" pos:start="139:44" pos:end="139:44">0</literal></expr>)</condition><block type="pseudo" pos:start="141:13" pos:end="141:22"><block_content pos:start="141:13" pos:end="141:22">

            <return pos:start="141:13" pos:end="141:22">return <expr pos:start="141:20" pos:end="141:21"><operator pos:start="141:20" pos:end="141:20">-</operator><literal type="number" pos:start="141:21" pos:end="141:21">1</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="143:5" pos:end="145:26"><if pos:start="143:5" pos:end="145:26">if<condition pos:start="143:7" pos:end="143:84">(<expr pos:start="143:8" pos:end="143:83"><name pos:start="143:8" pos:end="143:43"><name pos:start="143:8" pos:end="143:10">sps</name><operator pos:start="143:11" pos:end="143:12">-&gt;</operator><name pos:start="143:13" pos:end="143:43">nal_hrd_parameters_present_flag</name></name> <operator pos:start="143:45" pos:end="143:46">||</operator> <name pos:start="143:48" pos:end="143:83"><name pos:start="143:48" pos:end="143:50">sps</name><operator pos:start="143:51" pos:end="143:52">-&gt;</operator><name pos:start="143:53" pos:end="143:83">vcl_hrd_parameters_present_flag</name></name></expr>)</condition><block type="pseudo" pos:start="145:9" pos:end="145:26"><block_content pos:start="145:9" pos:end="145:26">

        <expr_stmt pos:start="145:9" pos:end="145:26"><expr pos:start="145:9" pos:end="145:25"><call pos:start="145:9" pos:end="145:25"><name pos:start="145:9" pos:end="145:17">get_bits1</name><argument_list pos:start="145:18" pos:end="145:25">(<argument pos:start="145:19" pos:end="145:24"><expr pos:start="145:19" pos:end="145:24"><operator pos:start="145:19" pos:end="145:19">&amp;</operator><name pos:start="145:20" pos:end="145:24"><name pos:start="145:20" pos:end="145:20">s</name><operator pos:start="145:21" pos:end="145:22">-&gt;</operator><name pos:start="145:23" pos:end="145:24">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>     <comment type="block" pos:start="145:32" pos:end="145:55">/* low_delay_hrd_flag */</comment>

    <expr_stmt pos:start="147:5" pos:end="147:53"><expr pos:start="147:5" pos:end="147:52"><name pos:start="147:5" pos:end="147:32"><name pos:start="147:5" pos:end="147:7">sps</name><operator pos:start="147:8" pos:end="147:9">-&gt;</operator><name pos:start="147:10" pos:end="147:32">pic_struct_present_flag</name></name> <operator pos:start="147:34" pos:end="147:34">=</operator> <call pos:start="147:36" pos:end="147:52"><name pos:start="147:36" pos:end="147:44">get_bits1</name><argument_list pos:start="147:45" pos:end="147:52">(<argument pos:start="147:46" pos:end="147:51"><expr pos:start="147:46" pos:end="147:51"><operator pos:start="147:46" pos:end="147:46">&amp;</operator><name pos:start="147:47" pos:end="147:51"><name pos:start="147:47" pos:end="147:47">s</name><operator pos:start="147:48" pos:end="147:49">-&gt;</operator><name pos:start="147:50" pos:end="147:51">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="151:5" pos:end="151:56"><expr pos:start="151:5" pos:end="151:55"><name pos:start="151:5" pos:end="151:35"><name pos:start="151:5" pos:end="151:7">sps</name><operator pos:start="151:8" pos:end="151:9">-&gt;</operator><name pos:start="151:10" pos:end="151:35">bitstream_restriction_flag</name></name> <operator pos:start="151:37" pos:end="151:37">=</operator> <call pos:start="151:39" pos:end="151:55"><name pos:start="151:39" pos:end="151:47">get_bits1</name><argument_list pos:start="151:48" pos:end="151:55">(<argument pos:start="151:49" pos:end="151:54"><expr pos:start="151:49" pos:end="151:54"><operator pos:start="151:49" pos:end="151:49">&amp;</operator><name pos:start="151:50" pos:end="151:54"><name pos:start="151:50" pos:end="151:50">s</name><operator pos:start="151:51" pos:end="151:52">-&gt;</operator><name pos:start="151:53" pos:end="151:54">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="153:5" pos:end="191:5"><if pos:start="153:5" pos:end="191:5">if<condition pos:start="153:7" pos:end="153:39">(<expr pos:start="153:8" pos:end="153:38"><name pos:start="153:8" pos:end="153:38"><name pos:start="153:8" pos:end="153:10">sps</name><operator pos:start="153:11" pos:end="153:12">-&gt;</operator><name pos:start="153:13" pos:end="153:38">bitstream_restriction_flag</name></name></expr>)</condition><block pos:start="153:40" pos:end="191:5">{<block_content pos:start="155:9" pos:end="189:9">

        <expr_stmt pos:start="155:9" pos:end="155:26"><expr pos:start="155:9" pos:end="155:25"><call pos:start="155:9" pos:end="155:25"><name pos:start="155:9" pos:end="155:17">get_bits1</name><argument_list pos:start="155:18" pos:end="155:25">(<argument pos:start="155:19" pos:end="155:24"><expr pos:start="155:19" pos:end="155:24"><operator pos:start="155:19" pos:end="155:19">&amp;</operator><name pos:start="155:20" pos:end="155:24"><name pos:start="155:20" pos:end="155:20">s</name><operator pos:start="155:21" pos:end="155:22">-&gt;</operator><name pos:start="155:23" pos:end="155:24">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>     <comment type="block" pos:start="155:32" pos:end="155:76">/* motion_vectors_over_pic_boundaries_flag */</comment>

        <expr_stmt pos:start="157:9" pos:end="157:30"><expr pos:start="157:9" pos:end="157:29"><call pos:start="157:9" pos:end="157:29"><name pos:start="157:9" pos:end="157:21">get_ue_golomb</name><argument_list pos:start="157:22" pos:end="157:29">(<argument pos:start="157:23" pos:end="157:28"><expr pos:start="157:23" pos:end="157:28"><operator pos:start="157:23" pos:end="157:23">&amp;</operator><name pos:start="157:24" pos:end="157:28"><name pos:start="157:24" pos:end="157:24">s</name><operator pos:start="157:25" pos:end="157:26">-&gt;</operator><name pos:start="157:27" pos:end="157:28">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="157:32" pos:end="157:60">/* max_bytes_per_pic_denom */</comment>

        <expr_stmt pos:start="159:9" pos:end="159:30"><expr pos:start="159:9" pos:end="159:29"><call pos:start="159:9" pos:end="159:29"><name pos:start="159:9" pos:end="159:21">get_ue_golomb</name><argument_list pos:start="159:22" pos:end="159:29">(<argument pos:start="159:23" pos:end="159:28"><expr pos:start="159:23" pos:end="159:28"><operator pos:start="159:23" pos:end="159:23">&amp;</operator><name pos:start="159:24" pos:end="159:28"><name pos:start="159:24" pos:end="159:24">s</name><operator pos:start="159:25" pos:end="159:26">-&gt;</operator><name pos:start="159:27" pos:end="159:28">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="159:32" pos:end="159:58">/* max_bits_per_mb_denom */</comment>

        <expr_stmt pos:start="161:9" pos:end="161:30"><expr pos:start="161:9" pos:end="161:29"><call pos:start="161:9" pos:end="161:29"><name pos:start="161:9" pos:end="161:21">get_ue_golomb</name><argument_list pos:start="161:22" pos:end="161:29">(<argument pos:start="161:23" pos:end="161:28"><expr pos:start="161:23" pos:end="161:28"><operator pos:start="161:23" pos:end="161:23">&amp;</operator><name pos:start="161:24" pos:end="161:28"><name pos:start="161:24" pos:end="161:24">s</name><operator pos:start="161:25" pos:end="161:26">-&gt;</operator><name pos:start="161:27" pos:end="161:28">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="161:32" pos:end="161:66">/* log2_max_mv_length_horizontal */</comment>

        <expr_stmt pos:start="163:9" pos:end="163:30"><expr pos:start="163:9" pos:end="163:29"><call pos:start="163:9" pos:end="163:29"><name pos:start="163:9" pos:end="163:21">get_ue_golomb</name><argument_list pos:start="163:22" pos:end="163:29">(<argument pos:start="163:23" pos:end="163:28"><expr pos:start="163:23" pos:end="163:28"><operator pos:start="163:23" pos:end="163:23">&amp;</operator><name pos:start="163:24" pos:end="163:28"><name pos:start="163:24" pos:end="163:24">s</name><operator pos:start="163:25" pos:end="163:26">-&gt;</operator><name pos:start="163:27" pos:end="163:28">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="163:32" pos:end="163:64">/* log2_max_mv_length_vertical */</comment>

        <expr_stmt pos:start="165:9" pos:end="165:55"><expr pos:start="165:9" pos:end="165:54"><name pos:start="165:9" pos:end="165:31"><name pos:start="165:9" pos:end="165:11">sps</name><operator pos:start="165:12" pos:end="165:13">-&gt;</operator><name pos:start="165:14" pos:end="165:31">num_reorder_frames</name></name><operator pos:start="165:32" pos:end="165:32">=</operator> <call pos:start="165:34" pos:end="165:54"><name pos:start="165:34" pos:end="165:46">get_ue_golomb</name><argument_list pos:start="165:47" pos:end="165:54">(<argument pos:start="165:48" pos:end="165:53"><expr pos:start="165:48" pos:end="165:53"><operator pos:start="165:48" pos:end="165:48">&amp;</operator><name pos:start="165:49" pos:end="165:53"><name pos:start="165:49" pos:end="165:49">s</name><operator pos:start="165:50" pos:end="165:51">-&gt;</operator><name pos:start="165:52" pos:end="165:53">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:30"><expr pos:start="167:9" pos:end="167:29"><call pos:start="167:9" pos:end="167:29"><name pos:start="167:9" pos:end="167:21">get_ue_golomb</name><argument_list pos:start="167:22" pos:end="167:29">(<argument pos:start="167:23" pos:end="167:28"><expr pos:start="167:23" pos:end="167:28"><operator pos:start="167:23" pos:end="167:23">&amp;</operator><name pos:start="167:24" pos:end="167:28"><name pos:start="167:24" pos:end="167:24">s</name><operator pos:start="167:25" pos:end="167:26">-&gt;</operator><name pos:start="167:27" pos:end="167:28">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="167:32" pos:end="167:58">/*max_dec_frame_buffering*/</comment>



        <if_stmt pos:start="171:9" pos:end="179:9"><if pos:start="171:9" pos:end="179:9">if <condition pos:start="171:12" pos:end="171:38">(<expr pos:start="171:13" pos:end="171:37"><call pos:start="171:13" pos:end="171:33"><name pos:start="171:13" pos:end="171:25">get_bits_left</name><argument_list pos:start="171:26" pos:end="171:33">(<argument pos:start="171:27" pos:end="171:32"><expr pos:start="171:27" pos:end="171:32"><operator pos:start="171:27" pos:end="171:27">&amp;</operator><name pos:start="171:28" pos:end="171:32"><name pos:start="171:28" pos:end="171:28">s</name><operator pos:start="171:29" pos:end="171:30">-&gt;</operator><name pos:start="171:31" pos:end="171:32">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="171:35" pos:end="171:35">&lt;</operator> <literal type="number" pos:start="171:37" pos:end="171:37">0</literal></expr>)</condition> <block pos:start="171:40" pos:end="179:9">{<block_content pos:start="173:13" pos:end="177:47">

            <expr_stmt pos:start="173:13" pos:end="173:98"><expr pos:start="173:13" pos:end="173:97"><call pos:start="173:13" pos:end="173:97"><name pos:start="173:13" pos:end="173:18">av_log</name><argument_list pos:start="173:19" pos:end="173:97">(<argument pos:start="173:20" pos:end="173:29"><expr pos:start="173:20" pos:end="173:29"><name pos:start="173:20" pos:end="173:29"><name pos:start="173:20" pos:end="173:20">h</name><operator pos:start="173:21" pos:end="173:22">-&gt;</operator><name pos:start="173:23" pos:end="173:23">s</name><operator pos:start="173:24" pos:end="173:24">.</operator><name pos:start="173:25" pos:end="173:29">avctx</name></name></expr></argument>, <argument pos:start="173:32" pos:end="173:43"><expr pos:start="173:32" pos:end="173:43"><name pos:start="173:32" pos:end="173:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="173:46" pos:end="173:72"><expr pos:start="173:46" pos:end="173:72"><literal type="string" pos:start="173:46" pos:end="173:72">"Overread VUI by %d bits\n"</literal></expr></argument>, <argument pos:start="173:75" pos:end="173:96"><expr pos:start="173:75" pos:end="173:96"><operator pos:start="173:75" pos:end="173:75">-</operator><call pos:start="173:76" pos:end="173:96"><name pos:start="173:76" pos:end="173:88">get_bits_left</name><argument_list pos:start="173:89" pos:end="173:96">(<argument pos:start="173:90" pos:end="173:95"><expr pos:start="173:90" pos:end="173:95"><operator pos:start="173:90" pos:end="173:90">&amp;</operator><name pos:start="173:91" pos:end="173:95"><name pos:start="173:91" pos:end="173:91">s</name><operator pos:start="173:92" pos:end="173:93">-&gt;</operator><name pos:start="173:94" pos:end="173:95">gb</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="175:13" pos:end="175:38"><expr pos:start="175:13" pos:end="175:37"><name pos:start="175:13" pos:end="175:35"><name pos:start="175:13" pos:end="175:15">sps</name><operator pos:start="175:16" pos:end="175:17">-&gt;</operator><name pos:start="175:18" pos:end="175:35">num_reorder_frames</name></name><operator pos:start="175:36" pos:end="175:36">=</operator><literal type="number" pos:start="175:37" pos:end="175:37">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="177:13" pos:end="177:47"><expr pos:start="177:13" pos:end="177:46"><name pos:start="177:13" pos:end="177:43"><name pos:start="177:13" pos:end="177:15">sps</name><operator pos:start="177:16" pos:end="177:17">-&gt;</operator><name pos:start="177:18" pos:end="177:43">bitstream_restriction_flag</name></name><operator pos:start="177:44" pos:end="177:44">=</operator> <literal type="number" pos:start="177:46" pos:end="177:46">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="183:9" pos:end="189:9"><if pos:start="183:9" pos:end="189:9">if<condition pos:start="183:11" pos:end="183:101">(<expr pos:start="183:12" pos:end="183:40"><name pos:start="183:12" pos:end="183:34"><name pos:start="183:12" pos:end="183:14">sps</name><operator pos:start="183:15" pos:end="183:16">-&gt;</operator><name pos:start="183:17" pos:end="183:34">num_reorder_frames</name></name> <operator pos:start="183:36" pos:end="183:36">&gt;</operator> <literal type="number" pos:start="183:38" pos:end="183:40">16U</literal></expr> <comment type="block" pos:start="183:42" pos:end="183:100">/*max_dec_frame_buffering || max_dec_frame_buffering &gt; 16*/</comment>)</condition><block pos:start="183:102" pos:end="189:9">{<block_content pos:start="185:13" pos:end="187:22">

            <expr_stmt pos:start="185:13" pos:end="185:105"><expr pos:start="185:13" pos:end="185:104"><call pos:start="185:13" pos:end="185:104"><name pos:start="185:13" pos:end="185:18">av_log</name><argument_list pos:start="185:19" pos:end="185:104">(<argument pos:start="185:20" pos:end="185:29"><expr pos:start="185:20" pos:end="185:29"><name pos:start="185:20" pos:end="185:29"><name pos:start="185:20" pos:end="185:20">h</name><operator pos:start="185:21" pos:end="185:22">-&gt;</operator><name pos:start="185:23" pos:end="185:23">s</name><operator pos:start="185:24" pos:end="185:24">.</operator><name pos:start="185:25" pos:end="185:29">avctx</name></name></expr></argument>, <argument pos:start="185:32" pos:end="185:43"><expr pos:start="185:32" pos:end="185:43"><name pos:start="185:32" pos:end="185:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="185:46" pos:end="185:78"><expr pos:start="185:46" pos:end="185:78"><literal type="string" pos:start="185:46" pos:end="185:78">"illegal num_reorder_frames %d\n"</literal></expr></argument>, <argument pos:start="185:81" pos:end="185:103"><expr pos:start="185:81" pos:end="185:103"><name pos:start="185:81" pos:end="185:103"><name pos:start="185:81" pos:end="185:83">sps</name><operator pos:start="185:84" pos:end="185:85">-&gt;</operator><name pos:start="185:86" pos:end="185:103">num_reorder_frames</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="187:13" pos:end="187:22">return <expr pos:start="187:20" pos:end="187:21"><operator pos:start="187:20" pos:end="187:20">-</operator><literal type="number" pos:start="187:21" pos:end="187:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="195:5" pos:end="195:13">return <expr pos:start="195:12" pos:end="195:12"><literal type="number" pos:start="195:12" pos:end="195:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
