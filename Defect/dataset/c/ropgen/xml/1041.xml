<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1041.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:6"><name pos:start="1:1" pos:end="1:6">double</name></type> <name pos:start="1:8" pos:end="1:30">ff_lpc_calc_ref_coefs_f</name><parameter_list pos:start="1:31" pos:end="3:54">(<parameter pos:start="1:32" pos:end="1:44"><decl pos:start="1:32" pos:end="1:44"><type pos:start="1:32" pos:end="1:44"><name pos:start="1:32" pos:end="1:41">LPCContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:66"><decl pos:start="1:47" pos:end="1:66"><type pos:start="1:47" pos:end="1:66"><specifier pos:start="1:47" pos:end="1:51">const</specifier> <name pos:start="1:53" pos:end="1:57">float</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:66">samples</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:75"><decl pos:start="1:69" pos:end="1:75"><type pos:start="1:69" pos:end="1:75"><name pos:start="1:69" pos:end="1:71">int</name></type> <name pos:start="1:73" pos:end="1:75">len</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:40"><decl pos:start="3:32" pos:end="3:40"><type pos:start="3:32" pos:end="3:40"><name pos:start="3:32" pos:end="3:34">int</name></type> <name pos:start="3:36" pos:end="3:40">order</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:53"><decl pos:start="3:43" pos:end="3:53"><type pos:start="3:43" pos:end="3:53"><name pos:start="3:43" pos:end="3:48">double</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier></type><name pos:start="3:51" pos:end="3:53">ref</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="41:1">{<block_content pos:start="7:5" pos:end="39:26">

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">double</name></type> <name pos:start="9:12" pos:end="9:17">signal</name> <init pos:start="9:19" pos:end="9:24">= <expr pos:start="9:21" pos:end="9:24"><literal type="number" pos:start="9:21" pos:end="9:24">0.0f</literal></expr></init></decl>, <decl pos:start="9:27" pos:end="9:40"><type ref="prev" pos:start="9:5" pos:end="9:10"/><name pos:start="9:27" pos:end="9:33">avg_err</name> <init pos:start="9:35" pos:end="9:40">= <expr pos:start="9:37" pos:end="9:40"><literal type="number" pos:start="9:37" pos:end="9:40">0.0f</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:70"><decl pos:start="11:5" pos:end="11:39"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">double</name></type> <name pos:start="11:12" pos:end="11:33"><name pos:start="11:12" pos:end="11:16">autoc</name><index pos:start="11:17" pos:end="11:33">[<expr pos:start="11:18" pos:end="11:32"><name pos:start="11:18" pos:end="11:30">MAX_LPC_ORDER</name><operator pos:start="11:31" pos:end="11:31">+</operator><literal type="number" pos:start="11:32" pos:end="11:32">1</literal></expr>]</index></name> <init pos:start="11:35" pos:end="11:39">= <expr pos:start="11:37" pos:end="11:39"><block pos:start="11:37" pos:end="11:39">{<expr pos:start="11:38" pos:end="11:38"><literal type="number" pos:start="11:38" pos:end="11:38">0</literal></expr>}</block></expr></init></decl>, <decl pos:start="11:42" pos:end="11:69"><type ref="prev" pos:start="11:5" pos:end="11:10"/><name pos:start="11:42" pos:end="11:63"><name pos:start="11:42" pos:end="11:46">error</name><index pos:start="11:47" pos:end="11:63">[<expr pos:start="11:48" pos:end="11:62"><name pos:start="11:48" pos:end="11:60">MAX_LPC_ORDER</name><operator pos:start="11:61" pos:end="11:61">+</operator><literal type="number" pos:start="11:62" pos:end="11:62">1</literal></expr>]</index></name> <init pos:start="11:65" pos:end="11:69">= <expr pos:start="11:67" pos:end="11:69"><block pos:start="11:67" pos:end="11:69">{<expr pos:start="11:68" pos:end="11:68"><literal type="number" pos:start="11:68" pos:end="11:68">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:40"><decl pos:start="13:5" pos:end="13:25"><type pos:start="13:5" pos:end="13:16"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:16">double</name></type> <name pos:start="13:18" pos:end="13:18">a</name> <init pos:start="13:20" pos:end="13:25">= <expr pos:start="13:22" pos:end="13:25"><literal type="number" pos:start="13:22" pos:end="13:25">0.5f</literal></expr></init></decl>, <decl pos:start="13:28" pos:end="13:39"><type ref="prev" pos:start="13:5" pos:end="13:16"/><name pos:start="13:28" pos:end="13:28">b</name> <init pos:start="13:30" pos:end="13:39">= <expr pos:start="13:32" pos:end="13:39"><literal type="number" pos:start="13:32" pos:end="13:37">1.0f</literal> <operator pos:start="13:37" pos:end="13:37">-</operator> <name pos:start="13:39" pos:end="13:39">a</name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:25">/* Apply windowing */</comment>

    <for pos:start="19:5" pos:end="25:5">for <control pos:start="19:9" pos:end="19:29">(<init pos:start="19:10" pos:end="19:15"><expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">i</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</init> <condition pos:start="19:17" pos:end="19:24"><expr pos:start="19:17" pos:end="19:23"><name pos:start="19:17" pos:end="19:17">i</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <name pos:start="19:21" pos:end="19:23">len</name></expr>;</condition> <incr pos:start="19:26" pos:end="19:28"><expr pos:start="19:26" pos:end="19:28"><name pos:start="19:26" pos:end="19:26">i</name><operator pos:start="19:27" pos:end="19:28">++</operator></expr></incr>)</control> <block pos:start="19:31" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:51">

        <decl_stmt pos:start="21:9" pos:end="21:56"><decl pos:start="21:9" pos:end="21:55"><type pos:start="21:9" pos:end="21:14"><name pos:start="21:9" pos:end="21:14">double</name></type> <name pos:start="21:16" pos:end="21:21">weight</name> <init pos:start="21:23" pos:end="21:55">= <expr pos:start="21:25" pos:end="21:55"><name pos:start="21:25" pos:end="21:25">a</name> <operator pos:start="21:27" pos:end="21:27">-</operator> <name pos:start="21:29" pos:end="21:29">b</name><operator pos:start="21:30" pos:end="21:30">*</operator><call pos:start="21:31" pos:end="21:55"><name pos:start="21:31" pos:end="21:33">cos</name><argument_list pos:start="21:34" pos:end="21:55">(<argument pos:start="21:35" pos:end="21:54"><expr pos:start="21:35" pos:end="21:54"><operator pos:start="21:35" pos:end="21:35">(</operator><literal type="number" pos:start="21:36" pos:end="21:36">2</literal><operator pos:start="21:37" pos:end="21:37">*</operator><name pos:start="21:38" pos:end="21:41">M_PI</name><operator pos:start="21:42" pos:end="21:42">*</operator><name pos:start="21:43" pos:end="21:43">i</name><operator pos:start="21:44" pos:end="21:44">)</operator><operator pos:start="21:45" pos:end="21:45">/</operator><operator pos:start="21:46" pos:end="21:46">(</operator><name pos:start="21:47" pos:end="21:49">len</name> <operator pos:start="21:51" pos:end="21:51">-</operator> <literal type="number" pos:start="21:53" pos:end="21:53">1</literal><operator pos:start="21:54" pos:end="21:54">)</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:51"><expr pos:start="23:9" pos:end="23:50"><name pos:start="23:9" pos:end="23:30"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:27">windowed_samples</name><index pos:start="23:28" pos:end="23:30">[<expr pos:start="23:29" pos:end="23:29"><name pos:start="23:29" pos:end="23:29">i</name></expr>]</index></name> <operator pos:start="23:32" pos:end="23:32">=</operator> <name pos:start="23:34" pos:end="23:39">weight</name><operator pos:start="23:40" pos:end="23:40">*</operator><name pos:start="23:41" pos:end="23:50"><name pos:start="23:41" pos:end="23:47">samples</name><index pos:start="23:48" pos:end="23:50">[<expr pos:start="23:49" pos:end="23:49"><name pos:start="23:49" pos:end="23:49">i</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="29:5" pos:end="29:68"><expr pos:start="29:5" pos:end="29:67"><call pos:start="29:5" pos:end="29:67"><name pos:start="29:5" pos:end="29:27"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:27">lpc_compute_autocorr</name></name><argument_list pos:start="29:28" pos:end="29:67">(<argument pos:start="29:29" pos:end="29:47"><expr pos:start="29:29" pos:end="29:47"><name pos:start="29:29" pos:end="29:47"><name pos:start="29:29" pos:end="29:29">s</name><operator pos:start="29:30" pos:end="29:31">-&gt;</operator><name pos:start="29:32" pos:end="29:47">windowed_samples</name></name></expr></argument>, <argument pos:start="29:50" pos:end="29:52"><expr pos:start="29:50" pos:end="29:52"><name pos:start="29:50" pos:end="29:52">len</name></expr></argument>, <argument pos:start="29:55" pos:end="29:59"><expr pos:start="29:55" pos:end="29:59"><name pos:start="29:55" pos:end="29:59">order</name></expr></argument>, <argument pos:start="29:62" pos:end="29:66"><expr pos:start="29:62" pos:end="29:66"><name pos:start="29:62" pos:end="29:66">autoc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:22"><expr pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:10">signal</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <name pos:start="31:14" pos:end="31:21"><name pos:start="31:14" pos:end="31:18">autoc</name><index pos:start="31:19" pos:end="31:21">[<expr pos:start="31:20" pos:end="31:20"><literal type="number" pos:start="31:20" pos:end="31:20">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:48"><expr pos:start="33:5" pos:end="33:47"><call pos:start="33:5" pos:end="33:47"><name pos:start="33:5" pos:end="33:21">compute_ref_coefs</name><argument_list pos:start="33:22" pos:end="33:47">(<argument pos:start="33:23" pos:end="33:27"><expr pos:start="33:23" pos:end="33:27"><name pos:start="33:23" pos:end="33:27">autoc</name></expr></argument>, <argument pos:start="33:30" pos:end="33:34"><expr pos:start="33:30" pos:end="33:34"><name pos:start="33:30" pos:end="33:34">order</name></expr></argument>, <argument pos:start="33:37" pos:end="33:39"><expr pos:start="33:37" pos:end="33:39"><name pos:start="33:37" pos:end="33:39">ref</name></expr></argument>, <argument pos:start="33:42" pos:end="33:46"><expr pos:start="33:42" pos:end="33:46"><name pos:start="33:42" pos:end="33:46">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="35:5" pos:end="37:44">for <control pos:start="35:9" pos:end="35:31">(<init pos:start="35:10" pos:end="35:15"><expr pos:start="35:10" pos:end="35:14"><name pos:start="35:10" pos:end="35:10">i</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <literal type="number" pos:start="35:14" pos:end="35:14">0</literal></expr>;</init> <condition pos:start="35:17" pos:end="35:26"><expr pos:start="35:17" pos:end="35:25"><name pos:start="35:17" pos:end="35:17">i</name> <operator pos:start="35:19" pos:end="35:19">&lt;</operator> <name pos:start="35:21" pos:end="35:25">order</name></expr>;</condition> <incr pos:start="35:28" pos:end="35:30"><expr pos:start="35:28" pos:end="35:30"><name pos:start="35:28" pos:end="35:28">i</name><operator pos:start="35:29" pos:end="35:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="37:9" pos:end="37:44"><block_content pos:start="37:9" pos:end="37:44">

        <expr_stmt pos:start="37:9" pos:end="37:44"><expr pos:start="37:9" pos:end="37:43"><name pos:start="37:9" pos:end="37:15">avg_err</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <operator pos:start="37:19" pos:end="37:19">(</operator><name pos:start="37:20" pos:end="37:26">avg_err</name> <operator pos:start="37:28" pos:end="37:28">+</operator> <name pos:start="37:30" pos:end="37:37"><name pos:start="37:30" pos:end="37:34">error</name><index pos:start="37:35" pos:end="37:37">[<expr pos:start="37:36" pos:end="37:36"><name pos:start="37:36" pos:end="37:36">i</name></expr>]</index></name><operator pos:start="37:38" pos:end="37:38">)</operator><operator pos:start="37:39" pos:end="37:39">/</operator><literal type="number" pos:start="37:40" pos:end="37:43">2.0f</literal></expr>;</expr_stmt></block_content></block></for>

    <return pos:start="39:5" pos:end="39:26">return <expr pos:start="39:12" pos:end="39:25"><name pos:start="39:12" pos:end="39:17">signal</name><operator pos:start="39:18" pos:end="39:18">/</operator><name pos:start="39:19" pos:end="39:25">avg_err</name></expr>;</return>

</block_content>}</block></function>
</unit>
