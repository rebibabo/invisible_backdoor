<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25838.c" pos:tabs="8"><function pos:start="1:1" pos:end="125:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:23">av_find_best_stream</name><parameter_list pos:start="1:24" pos:end="5:57">(<parameter pos:start="1:25" pos:end="1:43"><decl pos:start="1:25" pos:end="1:43"><type pos:start="1:25" pos:end="1:43"><name pos:start="1:25" pos:end="1:39">AVFormatContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:43">ic</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:66"><decl pos:start="1:46" pos:end="1:66"><type pos:start="1:46" pos:end="1:66"><name pos:start="1:46" pos:end="1:61"><name pos:start="1:46" pos:end="1:49">enum</name> <name pos:start="1:51" pos:end="1:61">AVMediaType</name></name></type> <name pos:start="1:63" pos:end="1:66">type</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:44"><decl pos:start="3:25" pos:end="3:44"><type pos:start="3:25" pos:end="3:44"><name pos:start="3:25" pos:end="3:27">int</name></type> <name pos:start="3:29" pos:end="3:44">wanted_stream_nb</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:64"><decl pos:start="3:47" pos:end="3:64"><type pos:start="3:47" pos:end="3:64"><name pos:start="3:47" pos:end="3:49">int</name></type> <name pos:start="3:51" pos:end="3:64">related_stream</name></decl></parameter>,

                        <parameter pos:start="5:25" pos:end="5:45"><decl pos:start="5:25" pos:end="5:45"><type pos:start="5:25" pos:end="5:45"><name pos:start="5:25" pos:end="5:31">AVCodec</name> <modifier pos:start="5:33" pos:end="5:33">*</modifier><modifier pos:start="5:34" pos:end="5:34">*</modifier></type><name pos:start="5:35" pos:end="5:45">decoder_ret</name></decl></parameter>, <parameter pos:start="5:48" pos:end="5:56"><decl pos:start="5:48" pos:end="5:56"><type pos:start="5:48" pos:end="5:56"><name pos:start="5:48" pos:end="5:50">int</name></type> <name pos:start="5:52" pos:end="5:56">flags</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="125:1">{<block_content pos:start="9:5" pos:end="123:15">

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:38"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:21">nb_streams</name> <init pos:start="9:23" pos:end="9:38">= <expr pos:start="9:25" pos:end="9:38"><name pos:start="9:25" pos:end="9:38"><name pos:start="9:25" pos:end="9:26">ic</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:38">nb_streams</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:125"><decl pos:start="11:5" pos:end="11:38"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name> <init pos:start="11:13" pos:end="11:38">= <expr pos:start="11:15" pos:end="11:38"><name pos:start="11:15" pos:end="11:38">AVERROR_STREAM_NOT_FOUND</name></expr></init></decl>, <decl pos:start="11:41" pos:end="11:55"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:41" pos:end="11:50">best_count</name> <init pos:start="11:52" pos:end="11:55">= <expr pos:start="11:54" pos:end="11:55"><operator pos:start="11:54" pos:end="11:54">-</operator><literal type="number" pos:start="11:55" pos:end="11:55">1</literal></expr></init></decl>, <decl pos:start="11:58" pos:end="11:74"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:58" pos:end="11:69">best_bitrate</name> <init pos:start="11:71" pos:end="11:74">= <expr pos:start="11:73" pos:end="11:74"><operator pos:start="11:73" pos:end="11:73">-</operator><literal type="number" pos:start="11:74" pos:end="11:74">1</literal></expr></init></decl>, <decl pos:start="11:77" pos:end="11:96"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:77" pos:end="11:91">best_multiframe</name> <init pos:start="11:93" pos:end="11:96">= <expr pos:start="11:95" pos:end="11:96"><operator pos:start="11:95" pos:end="11:95">-</operator><literal type="number" pos:start="11:96" pos:end="11:96">1</literal></expr></init></decl>, <decl pos:start="11:99" pos:end="11:103"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:99" pos:end="11:103">count</name></decl>, <decl pos:start="11:106" pos:end="11:112"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:106" pos:end="11:112">bitrate</name></decl>, <decl pos:start="11:115" pos:end="11:124"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:115" pos:end="11:124">multiframe</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">unsigned</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:21">program</name> <init pos:start="13:23" pos:end="13:28">= <expr pos:start="13:25" pos:end="13:28"><name pos:start="13:25" pos:end="13:28">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:56"><decl pos:start="15:5" pos:end="15:33"><type pos:start="15:5" pos:end="15:19"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:17">AVCodec</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:26">decoder</name> <init pos:start="15:28" pos:end="15:33">= <expr pos:start="15:30" pos:end="15:33"><name pos:start="15:30" pos:end="15:33">NULL</name></expr></init></decl>, <decl pos:start="15:36" pos:end="15:55"><type ref="prev" pos:start="15:5" pos:end="15:19"><modifier pos:start="15:36" pos:end="15:36">*</modifier></type><name pos:start="15:37" pos:end="15:48">best_decoder</name> <init pos:start="15:50" pos:end="15:55">= <expr pos:start="15:52" pos:end="15:55"><name pos:start="15:52" pos:end="15:55">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="31:5"><if pos:start="19:5" pos:end="31:5">if <condition pos:start="19:8" pos:end="19:52">(<expr pos:start="19:9" pos:end="19:51"><name pos:start="19:9" pos:end="19:22">related_stream</name> <operator pos:start="19:24" pos:end="19:25">&gt;=</operator> <literal type="number" pos:start="19:27" pos:end="19:27">0</literal> <operator pos:start="19:29" pos:end="19:30">&amp;&amp;</operator> <name pos:start="19:32" pos:end="19:47">wanted_stream_nb</name> <operator pos:start="19:49" pos:end="19:49">&lt;</operator> <literal type="number" pos:start="19:51" pos:end="19:51">0</literal></expr>)</condition> <block pos:start="19:54" pos:end="31:5">{<block_content pos:start="21:9" pos:end="29:9">

        <decl_stmt pos:start="21:9" pos:end="21:77"><decl pos:start="21:9" pos:end="21:76"><type pos:start="21:9" pos:end="21:19"><name pos:start="21:9" pos:end="21:17">AVProgram</name> <modifier pos:start="21:19" pos:end="21:19">*</modifier></type><name pos:start="21:20" pos:end="21:20">p</name> <init pos:start="21:22" pos:end="21:76">= <expr pos:start="21:24" pos:end="21:76"><call pos:start="21:24" pos:end="21:76"><name pos:start="21:24" pos:end="21:50">av_find_program_from_stream</name><argument_list pos:start="21:51" pos:end="21:76">(<argument pos:start="21:52" pos:end="21:53"><expr pos:start="21:52" pos:end="21:53"><name pos:start="21:52" pos:end="21:53">ic</name></expr></argument>, <argument pos:start="21:56" pos:end="21:59"><expr pos:start="21:56" pos:end="21:59"><name pos:start="21:56" pos:end="21:59">NULL</name></expr></argument>, <argument pos:start="21:62" pos:end="21:75"><expr pos:start="21:62" pos:end="21:75"><name pos:start="21:62" pos:end="21:75">related_stream</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="23:9" pos:end="29:9"><if pos:start="23:9" pos:end="29:9">if <condition pos:start="23:12" pos:end="23:14">(<expr pos:start="23:13" pos:end="23:13"><name pos:start="23:13" pos:end="23:13">p</name></expr>)</condition> <block pos:start="23:16" pos:end="29:9">{<block_content pos:start="25:13" pos:end="27:46">

            <expr_stmt pos:start="25:13" pos:end="25:41"><expr pos:start="25:13" pos:end="25:40"><name pos:start="25:13" pos:end="25:19">program</name>    <operator pos:start="25:24" pos:end="25:24">=</operator> <name pos:start="25:26" pos:end="25:40"><name pos:start="25:26" pos:end="25:26">p</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:40">stream_index</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:46"><expr pos:start="27:13" pos:end="27:45"><name pos:start="27:13" pos:end="27:22">nb_streams</name> <operator pos:start="27:24" pos:end="27:24">=</operator> <name pos:start="27:26" pos:end="27:45"><name pos:start="27:26" pos:end="27:26">p</name><operator pos:start="27:27" pos:end="27:28">-&gt;</operator><name pos:start="27:29" pos:end="27:45">nb_stream_indexes</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <for pos:start="33:5" pos:end="117:5">for <control pos:start="33:9" pos:end="33:36">(<init pos:start="33:10" pos:end="33:15"><expr pos:start="33:10" pos:end="33:14"><name pos:start="33:10" pos:end="33:10">i</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <literal type="number" pos:start="33:14" pos:end="33:14">0</literal></expr>;</init> <condition pos:start="33:17" pos:end="33:31"><expr pos:start="33:17" pos:end="33:30"><name pos:start="33:17" pos:end="33:17">i</name> <operator pos:start="33:19" pos:end="33:19">&lt;</operator> <name pos:start="33:21" pos:end="33:30">nb_streams</name></expr>;</condition> <incr pos:start="33:33" pos:end="33:35"><expr pos:start="33:33" pos:end="33:35"><name pos:start="33:33" pos:end="33:33">i</name><operator pos:start="33:34" pos:end="33:35">++</operator></expr></incr>)</control> <block pos:start="33:38" pos:end="117:5">{<block_content pos:start="35:9" pos:end="115:9">

        <decl_stmt pos:start="35:9" pos:end="35:57"><decl pos:start="35:9" pos:end="35:56"><type pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">int</name></type> <name pos:start="35:13" pos:end="35:29">real_stream_index</name> <init pos:start="35:31" pos:end="35:56">= <expr pos:start="35:33" pos:end="35:56"><ternary pos:start="35:33" pos:end="35:56"><condition pos:start="35:33" pos:end="35:41"><expr pos:start="35:33" pos:end="35:39"><name pos:start="35:33" pos:end="35:39">program</name></expr> ?</condition><then pos:start="35:43" pos:end="35:52"> <expr pos:start="35:43" pos:end="35:52"><name pos:start="35:43" pos:end="35:52"><name pos:start="35:43" pos:end="35:49">program</name><index pos:start="35:50" pos:end="35:52">[<expr pos:start="35:51" pos:end="35:51"><name pos:start="35:51" pos:end="35:51">i</name></expr>]</index></name></expr> </then><else pos:start="35:54" pos:end="35:56">: <expr pos:start="35:56" pos:end="35:56"><name pos:start="35:56" pos:end="35:56">i</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="37:9" pos:end="37:63"><decl pos:start="37:9" pos:end="37:62"><type pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:16">AVStream</name> <modifier pos:start="37:18" pos:end="37:18">*</modifier></type><name pos:start="37:19" pos:end="37:20">st</name>          <init pos:start="37:31" pos:end="37:62">= <expr pos:start="37:33" pos:end="37:62"><name pos:start="37:33" pos:end="37:62"><name pos:start="37:33" pos:end="37:34">ic</name><operator pos:start="37:35" pos:end="37:36">-&gt;</operator><name pos:start="37:37" pos:end="37:43">streams</name><index pos:start="37:44" pos:end="37:62">[<expr pos:start="37:45" pos:end="37:61"><name pos:start="37:45" pos:end="37:61">real_stream_index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="39:9" pos:end="39:42"><decl pos:start="39:9" pos:end="39:41"><type pos:start="39:9" pos:end="39:24"><name pos:start="39:9" pos:end="39:22">AVCodecContext</name> <modifier pos:start="39:24" pos:end="39:24">*</modifier></type><name pos:start="39:25" pos:end="39:29">avctx</name> <init pos:start="39:31" pos:end="39:41">= <expr pos:start="39:33" pos:end="39:41"><name pos:start="39:33" pos:end="39:41"><name pos:start="39:33" pos:end="39:34">st</name><operator pos:start="39:35" pos:end="39:36">-&gt;</operator><name pos:start="39:37" pos:end="39:41">codec</name></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="41:9" pos:end="43:21"><if pos:start="41:9" pos:end="43:21">if <condition pos:start="41:12" pos:end="41:38">(<expr pos:start="41:13" pos:end="41:37"><name pos:start="41:13" pos:end="41:29"><name pos:start="41:13" pos:end="41:17">avctx</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:29">codec_type</name></name> <operator pos:start="41:31" pos:end="41:32">!=</operator> <name pos:start="41:34" pos:end="41:37">type</name></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:21"><block_content pos:start="43:13" pos:end="43:21">

            <continue pos:start="43:13" pos:end="43:21">continue;</continue></block_content></block></if></if_stmt>

        <if_stmt pos:start="45:9" pos:end="47:21"><if pos:start="45:9" pos:end="47:21">if <condition pos:start="45:12" pos:end="45:75">(<expr pos:start="45:13" pos:end="45:74"><name pos:start="45:13" pos:end="45:28">wanted_stream_nb</name> <operator pos:start="45:30" pos:end="45:31">&gt;=</operator> <literal type="number" pos:start="45:33" pos:end="45:33">0</literal> <operator pos:start="45:35" pos:end="45:36">&amp;&amp;</operator> <name pos:start="45:38" pos:end="45:54">real_stream_index</name> <operator pos:start="45:56" pos:end="45:57">!=</operator> <name pos:start="45:59" pos:end="45:74">wanted_stream_nb</name></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:21"><block_content pos:start="47:13" pos:end="47:21">

            <continue pos:start="47:13" pos:end="47:21">continue;</continue></block_content></block></if></if_stmt>

        <if_stmt pos:start="49:9" pos:end="55:21"><if pos:start="49:9" pos:end="55:21">if <condition pos:start="49:12" pos:end="53:63">(<expr pos:start="49:13" pos:end="53:62"><name pos:start="49:13" pos:end="49:28">wanted_stream_nb</name> <operator pos:start="49:30" pos:end="49:31">!=</operator> <name pos:start="49:33" pos:end="49:49">real_stream_index</name> <operator pos:start="49:51" pos:end="49:52">&amp;&amp;</operator>

            <name pos:start="51:13" pos:end="51:27"><name pos:start="51:13" pos:end="51:14">st</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:27">disposition</name></name> <operator pos:start="51:29" pos:end="51:29">&amp;</operator> <operator pos:start="51:31" pos:end="51:31">(</operator><name pos:start="51:32" pos:end="51:62">AV_DISPOSITION_HEARING_IMPAIRED</name> <operator pos:start="51:64" pos:end="51:64">|</operator>

                               <name pos:start="53:32" pos:end="53:61">AV_DISPOSITION_VISUAL_IMPAIRED</name><operator pos:start="53:62" pos:end="53:62">)</operator></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:21"><block_content pos:start="55:13" pos:end="55:21">

            <continue pos:start="55:13" pos:end="55:21">continue;</continue></block_content></block></if></if_stmt>

        <if_stmt pos:start="57:9" pos:end="59:21"><if pos:start="57:9" pos:end="59:21">if <condition pos:start="57:12" pos:end="57:59">(<expr pos:start="57:13" pos:end="57:58"><name pos:start="57:13" pos:end="57:16">type</name> <operator pos:start="57:18" pos:end="57:19">==</operator> <name pos:start="57:21" pos:end="57:38">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="57:40" pos:end="57:41">&amp;&amp;</operator> <operator pos:start="57:43" pos:end="57:43">!</operator><name pos:start="57:44" pos:end="57:58"><name pos:start="57:44" pos:end="57:48">avctx</name><operator pos:start="57:49" pos:end="57:50">-&gt;</operator><name pos:start="57:51" pos:end="57:58">channels</name></name></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:21"><block_content pos:start="59:13" pos:end="59:21">

            <continue pos:start="59:13" pos:end="59:21">continue;</continue></block_content></block></if></if_stmt>

        <if_stmt pos:start="61:9" pos:end="75:9"><if pos:start="61:9" pos:end="75:9">if <condition pos:start="61:12" pos:end="61:24">(<expr pos:start="61:13" pos:end="61:23"><name pos:start="61:13" pos:end="61:23">decoder_ret</name></expr>)</condition> <block pos:start="61:26" pos:end="75:9">{<block_content pos:start="63:13" pos:end="73:13">

            <expr_stmt pos:start="63:13" pos:end="63:64"><expr pos:start="63:13" pos:end="63:63"><name pos:start="63:13" pos:end="63:19">decoder</name> <operator pos:start="63:21" pos:end="63:21">=</operator> <call pos:start="63:23" pos:end="63:63"><name pos:start="63:23" pos:end="63:34">find_decoder</name><argument_list pos:start="63:35" pos:end="63:63">(<argument pos:start="63:36" pos:end="63:37"><expr pos:start="63:36" pos:end="63:37"><name pos:start="63:36" pos:end="63:37">ic</name></expr></argument>, <argument pos:start="63:40" pos:end="63:41"><expr pos:start="63:40" pos:end="63:41"><name pos:start="63:40" pos:end="63:41">st</name></expr></argument>, <argument pos:start="63:44" pos:end="63:62"><expr pos:start="63:44" pos:end="63:62"><name pos:start="63:44" pos:end="63:62"><name pos:start="63:44" pos:end="63:45">st</name><operator pos:start="63:46" pos:end="63:47">-&gt;</operator><name pos:start="63:48" pos:end="63:52">codec</name><operator pos:start="63:53" pos:end="63:54">-&gt;</operator><name pos:start="63:55" pos:end="63:62">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="65:13" pos:end="73:13"><if pos:start="65:13" pos:end="73:13">if <condition pos:start="65:16" pos:end="65:25">(<expr pos:start="65:17" pos:end="65:24"><operator pos:start="65:17" pos:end="65:17">!</operator><name pos:start="65:18" pos:end="65:24">decoder</name></expr>)</condition> <block pos:start="65:27" pos:end="73:13">{<block_content pos:start="67:17" pos:end="71:25">

                <if_stmt pos:start="67:17" pos:end="69:52"><if pos:start="67:17" pos:end="69:52">if <condition pos:start="67:20" pos:end="67:28">(<expr pos:start="67:21" pos:end="67:27"><name pos:start="67:21" pos:end="67:23">ret</name> <operator pos:start="67:25" pos:end="67:25">&lt;</operator> <literal type="number" pos:start="67:27" pos:end="67:27">0</literal></expr>)</condition><block type="pseudo" pos:start="69:21" pos:end="69:52"><block_content pos:start="69:21" pos:end="69:52">

                    <expr_stmt pos:start="69:21" pos:end="69:52"><expr pos:start="69:21" pos:end="69:51"><name pos:start="69:21" pos:end="69:23">ret</name> <operator pos:start="69:25" pos:end="69:25">=</operator> <name pos:start="69:27" pos:end="69:51">AVERROR_DECODER_NOT_FOUND</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <continue pos:start="71:17" pos:end="71:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:41"><expr pos:start="77:9" pos:end="77:40"><name pos:start="77:9" pos:end="77:13">count</name> <operator pos:start="77:15" pos:end="77:15">=</operator> <name pos:start="77:17" pos:end="77:40"><name pos:start="77:17" pos:end="77:18">st</name><operator pos:start="77:19" pos:end="77:20">-&gt;</operator><name pos:start="77:21" pos:end="77:40">codec_info_nb_frames</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:34"><expr pos:start="79:9" pos:end="79:33"><name pos:start="79:9" pos:end="79:15">bitrate</name> <operator pos:start="79:17" pos:end="79:17">=</operator> <name pos:start="79:19" pos:end="79:33"><name pos:start="79:19" pos:end="79:23">avctx</name><operator pos:start="79:24" pos:end="79:25">-&gt;</operator><name pos:start="79:26" pos:end="79:33">bit_rate</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="81:9" pos:end="83:41"><if pos:start="81:9" pos:end="83:41">if <condition pos:start="81:12" pos:end="81:21">(<expr pos:start="81:13" pos:end="81:20"><operator pos:start="81:13" pos:end="81:13">!</operator><name pos:start="81:14" pos:end="81:20">bitrate</name></expr>)</condition><block type="pseudo" pos:start="83:13" pos:end="83:41"><block_content pos:start="83:13" pos:end="83:41">

            <expr_stmt pos:start="83:13" pos:end="83:41"><expr pos:start="83:13" pos:end="83:40"><name pos:start="83:13" pos:end="83:19">bitrate</name> <operator pos:start="83:21" pos:end="83:21">=</operator> <name pos:start="83:23" pos:end="83:40"><name pos:start="83:23" pos:end="83:27">avctx</name><operator pos:start="83:28" pos:end="83:29">-&gt;</operator><name pos:start="83:30" pos:end="83:40">rc_max_rate</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:37"><expr pos:start="85:9" pos:end="85:36"><name pos:start="85:9" pos:end="85:18">multiframe</name> <operator pos:start="85:20" pos:end="85:20">=</operator> <call pos:start="85:22" pos:end="85:36"><name pos:start="85:22" pos:end="85:26">FFMIN</name><argument_list pos:start="85:27" pos:end="85:36">(<argument pos:start="85:28" pos:end="85:28"><expr pos:start="85:28" pos:end="85:28"><literal type="number" pos:start="85:28" pos:end="85:28">5</literal></expr></argument>, <argument pos:start="85:31" pos:end="85:35"><expr pos:start="85:31" pos:end="85:35"><name pos:start="85:31" pos:end="85:35">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="87:9" pos:end="93:21"><if pos:start="87:9" pos:end="93:21">if <condition pos:start="87:12" pos:end="91:94">(<expr pos:start="87:13" pos:end="91:93"><operator pos:start="87:13" pos:end="87:13">(</operator><name pos:start="87:14" pos:end="87:28">best_multiframe</name> <operator pos:start="87:30" pos:end="87:30">&gt;</operator>  <name pos:start="87:33" pos:end="87:42">multiframe</name><operator pos:start="87:43" pos:end="87:43">)</operator> <operator pos:start="87:45" pos:end="87:46">||</operator>

            <operator pos:start="89:13" pos:end="89:13">(</operator><name pos:start="89:14" pos:end="89:28">best_multiframe</name> <operator pos:start="89:30" pos:end="89:31">==</operator> <name pos:start="89:33" pos:end="89:42">multiframe</name> <operator pos:start="89:44" pos:end="89:45">&amp;&amp;</operator> <name pos:start="89:47" pos:end="89:58">best_bitrate</name> <operator pos:start="89:60" pos:end="89:60">&gt;</operator>  <name pos:start="89:63" pos:end="89:69">bitrate</name><operator pos:start="89:70" pos:end="89:70">)</operator> <operator pos:start="89:72" pos:end="89:73">||</operator>

            <operator pos:start="91:13" pos:end="91:13">(</operator><name pos:start="91:14" pos:end="91:28">best_multiframe</name> <operator pos:start="91:30" pos:end="91:31">==</operator> <name pos:start="91:33" pos:end="91:42">multiframe</name> <operator pos:start="91:44" pos:end="91:45">&amp;&amp;</operator> <name pos:start="91:47" pos:end="91:58">best_bitrate</name> <operator pos:start="91:60" pos:end="91:61">==</operator> <name pos:start="91:63" pos:end="91:69">bitrate</name> <operator pos:start="91:71" pos:end="91:72">&amp;&amp;</operator> <name pos:start="91:74" pos:end="91:83">best_count</name> <operator pos:start="91:85" pos:end="91:86">&gt;=</operator> <name pos:start="91:88" pos:end="91:92">count</name><operator pos:start="91:93" pos:end="91:93">)</operator></expr>)</condition><block type="pseudo" pos:start="93:13" pos:end="93:21"><block_content pos:start="93:13" pos:end="93:21">

            <continue pos:start="93:13" pos:end="93:21">continue;</continue></block_content></block></if></if_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:29"><expr pos:start="95:9" pos:end="95:28"><name pos:start="95:9" pos:end="95:18">best_count</name>   <operator pos:start="95:22" pos:end="95:22">=</operator> <name pos:start="95:24" pos:end="95:28">count</name></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:31"><expr pos:start="97:9" pos:end="97:30"><name pos:start="97:9" pos:end="97:20">best_bitrate</name> <operator pos:start="97:22" pos:end="97:22">=</operator> <name pos:start="97:24" pos:end="97:30">bitrate</name></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:37"><expr pos:start="99:9" pos:end="99:36"><name pos:start="99:9" pos:end="99:23">best_multiframe</name> <operator pos:start="99:25" pos:end="99:25">=</operator> <name pos:start="99:27" pos:end="99:36">multiframe</name></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:41"><expr pos:start="101:9" pos:end="101:40"><name pos:start="101:9" pos:end="101:11">ret</name>          <operator pos:start="101:22" pos:end="101:22">=</operator> <name pos:start="101:24" pos:end="101:40">real_stream_index</name></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:31"><expr pos:start="103:9" pos:end="103:30"><name pos:start="103:9" pos:end="103:20">best_decoder</name> <operator pos:start="103:22" pos:end="103:22">=</operator> <name pos:start="103:24" pos:end="103:30">decoder</name></expr>;</expr_stmt>

        <if_stmt pos:start="105:9" pos:end="115:9"><if pos:start="105:9" pos:end="115:9">if <condition pos:start="105:12" pos:end="105:54">(<expr pos:start="105:13" pos:end="105:53"><name pos:start="105:13" pos:end="105:19">program</name> <operator pos:start="105:21" pos:end="105:22">&amp;&amp;</operator> <name pos:start="105:24" pos:end="105:24">i</name> <operator pos:start="105:26" pos:end="105:27">==</operator> <name pos:start="105:29" pos:end="105:38">nb_streams</name> <operator pos:start="105:40" pos:end="105:40">-</operator> <literal type="number" pos:start="105:42" pos:end="105:42">1</literal> <operator pos:start="105:44" pos:end="105:45">&amp;&amp;</operator> <name pos:start="105:47" pos:end="105:49">ret</name> <operator pos:start="105:51" pos:end="105:51">&lt;</operator> <literal type="number" pos:start="105:53" pos:end="105:53">0</literal></expr>)</condition> <block pos:start="105:56" pos:end="115:9">{<block_content pos:start="107:13" pos:end="113:18">

            <expr_stmt pos:start="107:13" pos:end="107:30"><expr pos:start="107:13" pos:end="107:29"><name pos:start="107:13" pos:end="107:19">program</name>    <operator pos:start="107:24" pos:end="107:24">=</operator> <name pos:start="107:26" pos:end="107:29">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:40"><expr pos:start="109:13" pos:end="109:39"><name pos:start="109:13" pos:end="109:22">nb_streams</name> <operator pos:start="109:24" pos:end="109:24">=</operator> <name pos:start="109:26" pos:end="109:39"><name pos:start="109:26" pos:end="109:27">ic</name><operator pos:start="109:28" pos:end="109:29">-&gt;</operator><name pos:start="109:30" pos:end="109:39">nb_streams</name></name></expr>;</expr_stmt>

            <comment type="block" pos:start="111:13" pos:end="111:68">/* no related stream found, try again with everything */</comment>

            <expr_stmt pos:start="113:13" pos:end="113:18"><expr pos:start="113:13" pos:end="113:17"><name pos:start="113:13" pos:end="113:13">i</name> <operator pos:start="113:15" pos:end="113:15">=</operator> <literal type="number" pos:start="113:17" pos:end="113:17">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="119:5" pos:end="121:46"><if pos:start="119:5" pos:end="121:46">if <condition pos:start="119:8" pos:end="119:20">(<expr pos:start="119:9" pos:end="119:19"><name pos:start="119:9" pos:end="119:19">decoder_ret</name></expr>)</condition><block type="pseudo" pos:start="121:9" pos:end="121:46"><block_content pos:start="121:9" pos:end="121:46">

        <expr_stmt pos:start="121:9" pos:end="121:46"><expr pos:start="121:9" pos:end="121:45"><operator pos:start="121:9" pos:end="121:9">*</operator><name pos:start="121:10" pos:end="121:20">decoder_ret</name> <operator pos:start="121:22" pos:end="121:22">=</operator> <operator pos:start="121:24" pos:end="121:24">(</operator><name pos:start="121:25" pos:end="121:31">AVCodec</name><operator pos:start="121:32" pos:end="121:32">*</operator><operator pos:start="121:33" pos:end="121:33">)</operator><name pos:start="121:34" pos:end="121:45">best_decoder</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="123:5" pos:end="123:15">return <expr pos:start="123:12" pos:end="123:14"><name pos:start="123:12" pos:end="123:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
