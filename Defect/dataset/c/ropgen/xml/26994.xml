<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26994.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:28">av_log_default_callback</name><parameter_list pos:start="1:29" pos:end="1:80">(<parameter pos:start="1:30" pos:end="1:39"><decl pos:start="1:30" pos:end="1:39"><type pos:start="1:30" pos:end="1:39"><name pos:start="1:30" pos:end="1:33">void</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:39">avcl</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:50"><decl pos:start="1:42" pos:end="1:50"><type pos:start="1:42" pos:end="1:50"><name pos:start="1:42" pos:end="1:44">int</name></type> <name pos:start="1:46" pos:end="1:50">level</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:67"><decl pos:start="1:53" pos:end="1:67"><type pos:start="1:53" pos:end="1:67"><specifier pos:start="1:53" pos:end="1:57">const</specifier> <name pos:start="1:59" pos:end="1:62">char</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:67">fmt</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:79"><decl pos:start="1:70" pos:end="1:79"><type pos:start="1:70" pos:end="1:79"><name pos:start="1:70" pos:end="1:76">va_list</name></type> <name pos:start="1:78" pos:end="1:79">vl</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="101:1">{<block_content pos:start="5:5" pos:end="99:40">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:14"><specifier pos:start="5:5" pos:end="5:10">static</specifier> <name pos:start="5:12" pos:end="5:14">int</name></type> <name pos:start="5:16" pos:end="5:27">print_prefix</name> <init pos:start="5:29" pos:end="5:31">= <expr pos:start="5:31" pos:end="5:31"><literal type="number" pos:start="5:31" pos:end="5:31">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:14"><specifier pos:start="7:5" pos:end="7:10">static</specifier> <name pos:start="7:12" pos:end="7:14">int</name></type> <name pos:start="7:16" pos:end="7:20">count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:15"><specifier pos:start="9:5" pos:end="9:10">static</specifier> <name pos:start="9:12" pos:end="9:15">char</name></type> <name pos:start="9:17" pos:end="9:26"><name pos:start="9:17" pos:end="9:20">prev</name><index pos:start="9:21" pos:end="9:26">[<expr pos:start="9:22" pos:end="9:25"><literal type="number" pos:start="9:22" pos:end="9:25">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:19"><name pos:start="11:10" pos:end="11:13">line</name><index pos:start="11:14" pos:end="11:19">[<expr pos:start="11:15" pos:end="11:18"><literal type="number" pos:start="11:15" pos:end="11:18">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:14"><specifier pos:start="13:5" pos:end="13:10">static</specifier> <name pos:start="13:12" pos:end="13:14">int</name></type> <name pos:start="13:16" pos:end="13:22">is_atty</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:52"><decl pos:start="15:5" pos:end="15:51"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:11">AVClass</name><modifier pos:start="15:12" pos:end="15:12">*</modifier></type> <name pos:start="15:14" pos:end="15:16">avc</name> <init pos:start="15:18" pos:end="15:51">= <expr pos:start="15:20" pos:end="15:51"><ternary pos:start="15:20" pos:end="15:51"><condition pos:start="15:20" pos:end="15:25"><expr pos:start="15:20" pos:end="15:23"><name pos:start="15:20" pos:end="15:23">avcl</name></expr> ?</condition><then pos:start="15:27" pos:end="15:44"> <expr pos:start="15:27" pos:end="15:44"><operator pos:start="15:27" pos:end="15:27">*</operator><operator pos:start="15:28" pos:end="15:28">(</operator><name pos:start="15:29" pos:end="15:35">AVClass</name> <operator pos:start="15:37" pos:end="15:37">*</operator><operator pos:start="15:38" pos:end="15:38">*</operator><operator pos:start="15:39" pos:end="15:39">)</operator> <name pos:start="15:41" pos:end="15:44">avcl</name></expr> </then><else pos:start="15:46" pos:end="15:51">: <expr pos:start="15:48" pos:end="15:51"><name pos:start="15:48" pos:end="15:51">NULL</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:43"><decl pos:start="17:5" pos:end="17:42"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:12">tint</name> <init pos:start="17:14" pos:end="17:42">= <expr pos:start="17:16" pos:end="17:42"><call pos:start="17:16" pos:end="17:42"><name pos:start="17:16" pos:end="17:22">av_clip</name><argument_list pos:start="17:23" pos:end="17:42">(<argument pos:start="17:24" pos:end="17:33"><expr pos:start="17:24" pos:end="17:33"><name pos:start="17:24" pos:end="17:28">level</name> <operator pos:start="17:30" pos:end="17:31">&gt;&gt;</operator> <literal type="number" pos:start="17:33" pos:end="17:33">8</literal></expr></argument>, <argument pos:start="17:36" pos:end="17:36"><expr pos:start="17:36" pos:end="17:36"><literal type="number" pos:start="17:36" pos:end="17:36">0</literal></expr></argument>, <argument pos:start="17:39" pos:end="17:41"><expr pos:start="17:39" pos:end="17:41"><literal type="number" pos:start="17:39" pos:end="17:41">256</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:18"><expr pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:9">level</name> <operator pos:start="21:11" pos:end="21:12">&amp;=</operator> <literal type="number" pos:start="21:14" pos:end="21:17">0xff</literal></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="27:15"><if pos:start="25:5" pos:end="27:15">if <condition pos:start="25:8" pos:end="25:29">(<expr pos:start="25:9" pos:end="25:28"><name pos:start="25:9" pos:end="25:13">level</name> <operator pos:start="25:15" pos:end="25:15">&gt;</operator> <name pos:start="25:17" pos:end="25:28">av_log_level</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:15"><block_content pos:start="27:9" pos:end="27:15">

        <return pos:start="27:9" pos:end="27:15">return;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:16"><expr pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:11"><name pos:start="29:5" pos:end="29:8">line</name><index pos:start="29:9" pos:end="29:11">[<expr pos:start="29:10" pos:end="29:10"><literal type="number" pos:start="29:10" pos:end="29:10">0</literal></expr>]</index></name> <operator pos:start="29:13" pos:end="29:13">=</operator> <literal type="number" pos:start="29:15" pos:end="29:15">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="53:5"><if pos:start="31:5" pos:end="53:5">if <condition pos:start="31:8" pos:end="31:28">(<expr pos:start="31:9" pos:end="31:27"><name pos:start="31:9" pos:end="31:20">print_prefix</name> <operator pos:start="31:22" pos:end="31:23">&amp;&amp;</operator> <name pos:start="31:25" pos:end="31:27">avc</name></expr>)</condition> <block pos:start="31:30" pos:end="53:5">{<block_content pos:start="33:9" pos:end="51:45">

        <if_stmt pos:start="33:9" pos:end="47:9"><if pos:start="33:9" pos:end="47:9">if <condition pos:start="33:12" pos:end="33:43">(<expr pos:start="33:13" pos:end="33:42"><name pos:start="33:13" pos:end="33:42"><name pos:start="33:13" pos:end="33:15">avc</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:42">parent_log_context_offset</name></name></expr>)</condition> <block pos:start="33:45" pos:end="47:9">{<block_content pos:start="35:13" pos:end="45:13">

            <decl_stmt pos:start="35:13" pos:end="37:67"><decl pos:start="35:13" pos:end="37:66"><type pos:start="35:13" pos:end="35:21"><name pos:start="35:13" pos:end="35:19">AVClass</name><modifier pos:start="35:20" pos:end="35:20">*</modifier><modifier pos:start="35:21" pos:end="35:21">*</modifier></type> <name pos:start="35:23" pos:end="35:28">parent</name> <init pos:start="35:30" pos:end="37:66">= <expr pos:start="35:32" pos:end="37:66"><operator pos:start="35:32" pos:end="35:32">*</operator><operator pos:start="35:33" pos:end="35:33">(</operator><name pos:start="35:34" pos:end="35:40">AVClass</name> <operator pos:start="35:42" pos:end="35:42">*</operator><operator pos:start="35:43" pos:end="35:43">*</operator><operator pos:start="35:44" pos:end="35:44">*</operator><operator pos:start="35:45" pos:end="35:45">)</operator> <operator pos:start="35:47" pos:end="35:47">(</operator><operator pos:start="35:48" pos:end="35:48">(</operator><operator pos:start="35:49" pos:end="35:49">(</operator><name pos:start="35:50" pos:end="35:56">uint8_t</name> <operator pos:start="35:58" pos:end="35:58">*</operator><operator pos:start="35:59" pos:end="35:59">)</operator> <name pos:start="35:61" pos:end="35:64">avcl</name><operator pos:start="35:65" pos:end="35:65">)</operator> <operator pos:start="35:67" pos:end="35:67">+</operator>

                                   <name pos:start="37:36" pos:end="37:65"><name pos:start="37:36" pos:end="37:38">avc</name><operator pos:start="37:39" pos:end="37:40">-&gt;</operator><name pos:start="37:41" pos:end="37:65">parent_log_context_offset</name></name><operator pos:start="37:66" pos:end="37:66">)</operator></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="39:13" pos:end="45:13"><if pos:start="39:13" pos:end="45:13">if <condition pos:start="39:16" pos:end="39:34">(<expr pos:start="39:17" pos:end="39:33"><name pos:start="39:17" pos:end="39:22">parent</name> <operator pos:start="39:24" pos:end="39:25">&amp;&amp;</operator> <operator pos:start="39:27" pos:end="39:27">*</operator><name pos:start="39:28" pos:end="39:33">parent</name></expr>)</condition> <block pos:start="39:36" pos:end="45:13">{<block_content pos:start="41:17" pos:end="43:63">

                <expr_stmt pos:start="41:17" pos:end="43:63"><expr pos:start="41:17" pos:end="43:62"><call pos:start="41:17" pos:end="43:62"><name pos:start="41:17" pos:end="41:24">snprintf</name><argument_list pos:start="41:25" pos:end="43:62">(<argument pos:start="41:26" pos:end="41:29"><expr pos:start="41:26" pos:end="41:29"><name pos:start="41:26" pos:end="41:29">line</name></expr></argument>, <argument pos:start="41:32" pos:end="41:43"><expr pos:start="41:32" pos:end="41:43"><sizeof pos:start="41:32" pos:end="41:43">sizeof<argument_list pos:start="41:38" pos:end="41:43">(<argument pos:start="41:39" pos:end="41:42"><expr pos:start="41:39" pos:end="41:42"><name pos:start="41:39" pos:end="41:42">line</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="41:46" pos:end="41:57"><expr pos:start="41:46" pos:end="41:57"><literal type="string" pos:start="41:46" pos:end="41:57">"[%s @ %p] "</literal></expr></argument>,

                         <argument pos:start="43:26" pos:end="43:53"><expr pos:start="43:26" pos:end="43:53"><call pos:start="43:26" pos:end="43:53"><name pos:start="43:26" pos:end="43:45"><operator pos:start="43:26" pos:end="43:26">(</operator><operator pos:start="43:27" pos:end="43:27">*</operator><name pos:start="43:28" pos:end="43:33">parent</name><operator pos:start="43:34" pos:end="43:34">)</operator><operator pos:start="43:35" pos:end="43:36">-&gt;</operator><name pos:start="43:37" pos:end="43:45">item_name</name></name><argument_list pos:start="43:46" pos:end="43:53">(<argument pos:start="43:47" pos:end="43:52"><expr pos:start="43:47" pos:end="43:52"><name pos:start="43:47" pos:end="43:52">parent</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="43:56" pos:end="43:61"><expr pos:start="43:56" pos:end="43:61"><name pos:start="43:56" pos:end="43:61">parent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="51:45"><expr pos:start="49:9" pos:end="51:44"><call pos:start="49:9" pos:end="51:44"><name pos:start="49:9" pos:end="49:16">snprintf</name><argument_list pos:start="49:17" pos:end="51:44">(<argument pos:start="49:18" pos:end="49:36"><expr pos:start="49:18" pos:end="49:36"><name pos:start="49:18" pos:end="49:21">line</name> <operator pos:start="49:23" pos:end="49:23">+</operator> <call pos:start="49:25" pos:end="49:36"><name pos:start="49:25" pos:end="49:30">strlen</name><argument_list pos:start="49:31" pos:end="49:36">(<argument pos:start="49:32" pos:end="49:35"><expr pos:start="49:32" pos:end="49:35"><name pos:start="49:32" pos:end="49:35">line</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="49:39" pos:end="49:65"><expr pos:start="49:39" pos:end="49:65"><sizeof pos:start="49:39" pos:end="49:50">sizeof<argument_list pos:start="49:45" pos:end="49:50">(<argument pos:start="49:46" pos:end="49:49"><expr pos:start="49:46" pos:end="49:49"><name pos:start="49:46" pos:end="49:49">line</name></expr></argument>)</argument_list></sizeof> <operator pos:start="49:52" pos:end="49:52">-</operator> <call pos:start="49:54" pos:end="49:65"><name pos:start="49:54" pos:end="49:59">strlen</name><argument_list pos:start="49:60" pos:end="49:65">(<argument pos:start="49:61" pos:end="49:64"><expr pos:start="49:61" pos:end="49:64"><name pos:start="49:61" pos:end="49:64">line</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="49:68" pos:end="49:79"><expr pos:start="49:68" pos:end="49:79"><literal type="string" pos:start="49:68" pos:end="49:79">"[%s @ %p] "</literal></expr></argument>,

                 <argument pos:start="51:18" pos:end="51:37"><expr pos:start="51:18" pos:end="51:37"><call pos:start="51:18" pos:end="51:37"><name pos:start="51:18" pos:end="51:31"><name pos:start="51:18" pos:end="51:20">avc</name><operator pos:start="51:21" pos:end="51:22">-&gt;</operator><name pos:start="51:23" pos:end="51:31">item_name</name></name><argument_list pos:start="51:32" pos:end="51:37">(<argument pos:start="51:33" pos:end="51:36"><expr pos:start="51:33" pos:end="51:36"><name pos:start="51:33" pos:end="51:36">avcl</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="51:40" pos:end="51:43"><expr pos:start="51:40" pos:end="51:43"><name pos:start="51:40" pos:end="51:43">avcl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:73"><expr pos:start="57:5" pos:end="57:72"><call pos:start="57:5" pos:end="57:72"><name pos:start="57:5" pos:end="57:13">vsnprintf</name><argument_list pos:start="57:14" pos:end="57:72">(<argument pos:start="57:15" pos:end="57:33"><expr pos:start="57:15" pos:end="57:33"><name pos:start="57:15" pos:end="57:18">line</name> <operator pos:start="57:20" pos:end="57:20">+</operator> <call pos:start="57:22" pos:end="57:33"><name pos:start="57:22" pos:end="57:27">strlen</name><argument_list pos:start="57:28" pos:end="57:33">(<argument pos:start="57:29" pos:end="57:32"><expr pos:start="57:29" pos:end="57:32"><name pos:start="57:29" pos:end="57:32">line</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="57:36" pos:end="57:62"><expr pos:start="57:36" pos:end="57:62"><sizeof pos:start="57:36" pos:end="57:47">sizeof<argument_list pos:start="57:42" pos:end="57:47">(<argument pos:start="57:43" pos:end="57:46"><expr pos:start="57:43" pos:end="57:46"><name pos:start="57:43" pos:end="57:46">line</name></expr></argument>)</argument_list></sizeof> <operator pos:start="57:49" pos:end="57:49">-</operator> <call pos:start="57:51" pos:end="57:62"><name pos:start="57:51" pos:end="57:56">strlen</name><argument_list pos:start="57:57" pos:end="57:62">(<argument pos:start="57:58" pos:end="57:61"><expr pos:start="57:58" pos:end="57:61"><name pos:start="57:58" pos:end="57:61">line</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="57:65" pos:end="57:67"><expr pos:start="57:65" pos:end="57:67"><name pos:start="57:65" pos:end="57:67">fmt</name></expr></argument>, <argument pos:start="57:70" pos:end="57:71"><expr pos:start="57:70" pos:end="57:71"><name pos:start="57:70" pos:end="57:71">vl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="66:0"><expr pos:start="61:5" pos:end="61:65"><name pos:start="61:5" pos:end="61:16">print_prefix</name> <operator pos:start="61:18" pos:end="61:18">=</operator> <call pos:start="61:20" pos:end="61:31"><name pos:start="61:20" pos:end="61:25">strlen</name><argument_list pos:start="61:26" pos:end="61:31">(<argument pos:start="61:27" pos:end="61:30"><expr pos:start="61:27" pos:end="61:30"><name pos:start="61:27" pos:end="61:30">line</name></expr></argument>)</argument_list></call> <operator pos:start="61:33" pos:end="61:34">&amp;&amp;</operator> <name pos:start="61:36" pos:end="61:57"><name pos:start="61:36" pos:end="61:39">line</name><index pos:start="61:40" pos:end="61:57">[<expr pos:start="61:41" pos:end="61:56"><call pos:start="61:41" pos:end="61:52"><name pos:start="61:41" pos:end="61:46">strlen</name><argument_list pos:start="61:47" pos:end="61:52">(<argument pos:start="61:48" pos:end="61:51"><expr pos:start="61:48" pos:end="61:51"><name pos:start="61:48" pos:end="61:51">line</name></expr></argument>)</argument_list></call> <operator pos:start="61:54" pos:end="61:54">-</operator> <literal type="number" pos:start="61:56" pos:end="61:56">1</literal></expr>]</index></name> <operator pos:start="61:59" pos:end="61:60">==</operator> <literal type="char" pos:start="61:62" pos:end="61:65">'\n'</literal></expr>;</expr_stmt>



<cpp:if pos:start="65:1" pos:end="65:15">#<cpp:directive pos:start="65:2" pos:end="65:3">if</cpp:directive> <expr pos:start="65:5" pos:end="65:15"><name pos:start="65:5" pos:end="65:15">HAVE_ISATTY</name></expr></cpp:if>

    <if_stmt pos:start="67:5" pos:end="72:0"><if pos:start="67:5" pos:end="72:0">if <condition pos:start="67:8" pos:end="67:17">(<expr pos:start="67:9" pos:end="67:16"><operator pos:start="67:9" pos:end="67:9">!</operator><name pos:start="67:10" pos:end="67:16">is_atty</name></expr>)</condition><block type="pseudo" pos:start="69:9" pos:end="72:0"><block_content pos:start="69:9" pos:end="72:0">

        <expr_stmt pos:start="69:9" pos:end="72:0"><expr pos:start="69:9" pos:end="69:36"><name pos:start="69:9" pos:end="69:15">is_atty</name> <operator pos:start="69:17" pos:end="69:17">=</operator> <ternary pos:start="69:19" pos:end="69:36"><condition pos:start="69:19" pos:end="69:29"><expr pos:start="69:19" pos:end="69:27"><call pos:start="69:19" pos:end="69:27"><name pos:start="69:19" pos:end="69:24">isatty</name><argument_list pos:start="69:25" pos:end="69:27">(<argument pos:start="69:26" pos:end="69:26"><expr pos:start="69:26" pos:end="69:26"><literal type="number" pos:start="69:26" pos:end="69:26">2</literal></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="69:31" pos:end="69:31"> <expr pos:start="69:31" pos:end="69:31"><literal type="number" pos:start="69:31" pos:end="69:31">1</literal></expr> </then><else pos:start="69:33" pos:end="69:36">: <expr pos:start="69:35" pos:end="69:36"><operator pos:start="69:35" pos:end="69:35">-</operator><literal type="number" pos:start="69:36" pos:end="69:36">1</literal></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="71:1" pos:end="71:6">#<cpp:directive pos:start="71:2" pos:end="71:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="75:5" pos:end="87:5"><if pos:start="75:5" pos:end="87:5">if <condition pos:start="75:8" pos:end="77:42">(<expr pos:start="75:9" pos:end="77:41"><name pos:start="75:9" pos:end="75:20">print_prefix</name> <operator pos:start="75:22" pos:end="75:23">&amp;&amp;</operator> <operator pos:start="75:25" pos:end="75:25">(</operator><name pos:start="75:26" pos:end="75:30">flags</name> <operator pos:start="75:32" pos:end="75:32">&amp;</operator> <name pos:start="75:34" pos:end="75:53">AV_LOG_SKIP_REPEATED</name><operator pos:start="75:54" pos:end="75:54">)</operator> <operator pos:start="75:56" pos:end="75:57">&amp;&amp;</operator>

        <operator pos:start="77:9" pos:end="77:9">!</operator><call pos:start="77:10" pos:end="77:41"><name pos:start="77:10" pos:end="77:16">strncmp</name><argument_list pos:start="77:17" pos:end="77:41">(<argument pos:start="77:18" pos:end="77:21"><expr pos:start="77:18" pos:end="77:21"><name pos:start="77:18" pos:end="77:21">line</name></expr></argument>, <argument pos:start="77:24" pos:end="77:27"><expr pos:start="77:24" pos:end="77:27"><name pos:start="77:24" pos:end="77:27">prev</name></expr></argument>, <argument pos:start="77:30" pos:end="77:40"><expr pos:start="77:30" pos:end="77:40"><sizeof pos:start="77:30" pos:end="77:40">sizeof <name pos:start="77:37" pos:end="77:40">line</name></sizeof></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="77:44" pos:end="87:5">{<block_content pos:start="79:9" pos:end="85:15">

        <expr_stmt pos:start="79:9" pos:end="79:16"><expr pos:start="79:9" pos:end="79:15"><name pos:start="79:9" pos:end="79:13">count</name><operator pos:start="79:14" pos:end="79:15">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="81:9" pos:end="83:75"><if pos:start="81:9" pos:end="83:75">if <condition pos:start="81:12" pos:end="81:25">(<expr pos:start="81:13" pos:end="81:24"><name pos:start="81:13" pos:end="81:19">is_atty</name> <operator pos:start="81:21" pos:end="81:22">==</operator> <literal type="number" pos:start="81:24" pos:end="81:24">1</literal></expr>)</condition><block type="pseudo" pos:start="83:13" pos:end="83:75"><block_content pos:start="83:13" pos:end="83:75">

            <expr_stmt pos:start="83:13" pos:end="83:75"><expr pos:start="83:13" pos:end="83:74"><call pos:start="83:13" pos:end="83:74"><name pos:start="83:13" pos:end="83:19">fprintf</name><argument_list pos:start="83:20" pos:end="83:74">(<argument pos:start="83:21" pos:end="83:26"><expr pos:start="83:21" pos:end="83:26"><name pos:start="83:21" pos:end="83:26">stderr</name></expr></argument>, <argument pos:start="83:29" pos:end="83:66"><expr pos:start="83:29" pos:end="83:66"><literal type="string" pos:start="83:29" pos:end="83:66">"    Last message repeated %d times\r"</literal></expr></argument>, <argument pos:start="83:69" pos:end="83:73"><expr pos:start="83:69" pos:end="83:73"><name pos:start="83:69" pos:end="83:73">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <return pos:start="85:9" pos:end="85:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="89:5" pos:end="95:5"><if pos:start="89:5" pos:end="95:5">if <condition pos:start="89:8" pos:end="89:18">(<expr pos:start="89:9" pos:end="89:17"><name pos:start="89:9" pos:end="89:13">count</name> <operator pos:start="89:15" pos:end="89:15">&gt;</operator> <literal type="number" pos:start="89:17" pos:end="89:17">0</literal></expr>)</condition> <block pos:start="89:20" pos:end="95:5">{<block_content pos:start="91:9" pos:end="93:18">

        <expr_stmt pos:start="91:9" pos:end="91:71"><expr pos:start="91:9" pos:end="91:70"><call pos:start="91:9" pos:end="91:70"><name pos:start="91:9" pos:end="91:15">fprintf</name><argument_list pos:start="91:16" pos:end="91:70">(<argument pos:start="91:17" pos:end="91:22"><expr pos:start="91:17" pos:end="91:22"><name pos:start="91:17" pos:end="91:22">stderr</name></expr></argument>, <argument pos:start="91:25" pos:end="91:62"><expr pos:start="91:25" pos:end="91:62"><literal type="string" pos:start="91:25" pos:end="91:62">"    Last message repeated %d times\n"</literal></expr></argument>, <argument pos:start="91:65" pos:end="91:69"><expr pos:start="91:65" pos:end="91:69"><name pos:start="91:65" pos:end="91:69">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:18"><expr pos:start="93:9" pos:end="93:17"><name pos:start="93:9" pos:end="93:13">count</name> <operator pos:start="93:15" pos:end="93:15">=</operator> <literal type="number" pos:start="93:17" pos:end="93:17">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:57"><expr pos:start="97:5" pos:end="97:56"><call pos:start="97:5" pos:end="97:56"><name pos:start="97:5" pos:end="97:17">colored_fputs</name><argument_list pos:start="97:18" pos:end="97:56">(<argument pos:start="97:19" pos:end="97:43"><expr pos:start="97:19" pos:end="97:43"><call pos:start="97:19" pos:end="97:43"><name pos:start="97:19" pos:end="97:25">av_clip</name><argument_list pos:start="97:26" pos:end="97:43">(<argument pos:start="97:27" pos:end="97:36"><expr pos:start="97:27" pos:end="97:36"><name pos:start="97:27" pos:end="97:31">level</name> <operator pos:start="97:33" pos:end="97:34">&gt;&gt;</operator> <literal type="number" pos:start="97:36" pos:end="97:36">3</literal></expr></argument>, <argument pos:start="97:39" pos:end="97:39"><expr pos:start="97:39" pos:end="97:39"><literal type="number" pos:start="97:39" pos:end="97:39">0</literal></expr></argument>, <argument pos:start="97:42" pos:end="97:42"><expr pos:start="97:42" pos:end="97:42"><literal type="number" pos:start="97:42" pos:end="97:42">6</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="97:46" pos:end="97:49"><expr pos:start="97:46" pos:end="97:49"><name pos:start="97:46" pos:end="97:49">tint</name></expr></argument>, <argument pos:start="97:52" pos:end="97:55"><expr pos:start="97:52" pos:end="97:55"><name pos:start="97:52" pos:end="97:55">line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:40"><expr pos:start="99:5" pos:end="99:39"><call pos:start="99:5" pos:end="99:39"><name pos:start="99:5" pos:end="99:14">av_strlcpy</name><argument_list pos:start="99:15" pos:end="99:39">(<argument pos:start="99:16" pos:end="99:19"><expr pos:start="99:16" pos:end="99:19"><name pos:start="99:16" pos:end="99:19">prev</name></expr></argument>, <argument pos:start="99:22" pos:end="99:25"><expr pos:start="99:22" pos:end="99:25"><name pos:start="99:22" pos:end="99:25">line</name></expr></argument>, <argument pos:start="99:28" pos:end="99:38"><expr pos:start="99:28" pos:end="99:38"><sizeof pos:start="99:28" pos:end="99:38">sizeof <name pos:start="99:35" pos:end="99:38">line</name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
