<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18321.c" pos:tabs="8"><function pos:start="1:1" pos:end="205:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">qtrle_decode_frame</name><parameter_list pos:start="1:30" pos:end="5:46">(<parameter pos:start="1:31" pos:end="1:51"><decl pos:start="1:31" pos:end="1:51"><type pos:start="1:31" pos:end="1:51"><name pos:start="1:31" pos:end="1:44">AVCodecContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">avctx</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:40"><decl pos:start="3:31" pos:end="3:40"><type pos:start="3:31" pos:end="3:40"><name pos:start="3:31" pos:end="3:34">void</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:40">data</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:56"><decl pos:start="3:43" pos:end="3:56"><type pos:start="3:43" pos:end="3:56"><name pos:start="3:43" pos:end="3:45">int</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:56">got_frame</name></decl></parameter>,

                              <parameter pos:start="5:31" pos:end="5:45"><decl pos:start="5:31" pos:end="5:45"><type pos:start="5:31" pos:end="5:45"><name pos:start="5:31" pos:end="5:38">AVPacket</name> <modifier pos:start="5:40" pos:end="5:40">*</modifier></type><name pos:start="5:41" pos:end="5:45">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="205:1">{<block_content pos:start="9:5" pos:end="203:23">

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:38"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">QtrleContext</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:19">s</name> <init pos:start="9:21" pos:end="9:38">= <expr pos:start="9:23" pos:end="9:38"><name pos:start="9:23" pos:end="9:38"><name pos:start="9:23" pos:end="9:27">avctx</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">header</name></decl>, <decl pos:start="11:17" pos:end="11:26"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:17" pos:end="11:26">start_line</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:14">height</name></decl>, <decl pos:start="13:17" pos:end="13:23"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:17" pos:end="13:23">row_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:19">has_palette</name> <init pos:start="15:21" pos:end="15:23">= <expr pos:start="15:23" pos:end="15:23"><literal type="number" pos:start="15:23" pos:end="15:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:12"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:54"><expr pos:start="21:5" pos:end="21:53"><call pos:start="21:5" pos:end="21:53"><name pos:start="21:5" pos:end="21:20">bytestream2_init</name><argument_list pos:start="21:21" pos:end="21:53">(<argument pos:start="21:22" pos:end="21:26"><expr pos:start="21:22" pos:end="21:26"><operator pos:start="21:22" pos:end="21:22">&amp;</operator><name pos:start="21:23" pos:end="21:26"><name pos:start="21:23" pos:end="21:23">s</name><operator pos:start="21:24" pos:end="21:25">-&gt;</operator><name pos:start="21:26" pos:end="21:26">g</name></name></expr></argument>, <argument pos:start="21:29" pos:end="21:39"><expr pos:start="21:29" pos:end="21:39"><name pos:start="21:29" pos:end="21:39"><name pos:start="21:29" pos:end="21:33">avpkt</name><operator pos:start="21:34" pos:end="21:35">-&gt;</operator><name pos:start="21:36" pos:end="21:39">data</name></name></expr></argument>, <argument pos:start="21:42" pos:end="21:52"><expr pos:start="21:42" pos:end="21:52"><name pos:start="21:42" pos:end="21:52"><name pos:start="21:42" pos:end="21:46">avpkt</name><operator pos:start="21:47" pos:end="21:48">-&gt;</operator><name pos:start="21:49" pos:end="21:52">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:19"><if pos:start="23:5" pos:end="25:19">if <condition pos:start="23:8" pos:end="23:53">(<expr pos:start="23:9" pos:end="23:52"><operator pos:start="23:9" pos:end="23:9">(</operator><name pos:start="23:10" pos:end="23:12">ret</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <call pos:start="23:16" pos:end="23:47"><name pos:start="23:16" pos:end="23:30">ff_reget_buffer</name><argument_list pos:start="23:31" pos:end="23:47">(<argument pos:start="23:32" pos:end="23:36"><expr pos:start="23:32" pos:end="23:36"><name pos:start="23:32" pos:end="23:36">avctx</name></expr></argument>, <argument pos:start="23:39" pos:end="23:46"><expr pos:start="23:39" pos:end="23:46"><name pos:start="23:39" pos:end="23:46"><name pos:start="23:39" pos:end="23:39">s</name><operator pos:start="23:40" pos:end="23:41">-&gt;</operator><name pos:start="23:42" pos:end="23:46">frame</name></name></expr></argument>)</argument_list></call><operator pos:start="23:48" pos:end="23:48">)</operator> <operator pos:start="23:50" pos:end="23:50">&lt;</operator> <literal type="number" pos:start="23:52" pos:end="23:52">0</literal></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:19"><block_content pos:start="25:9" pos:end="25:19">

        <return pos:start="25:9" pos:end="25:19">return <expr pos:start="25:16" pos:end="25:18"><name pos:start="25:16" pos:end="25:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:56">/* check if this frame is even supposed to change */</comment>

    <if_stmt pos:start="31:5" pos:end="33:18"><if pos:start="31:5" pos:end="33:18">if <condition pos:start="31:8" pos:end="31:24">(<expr pos:start="31:9" pos:end="31:23"><name pos:start="31:9" pos:end="31:19"><name pos:start="31:9" pos:end="31:13">avpkt</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:19">size</name></name> <operator pos:start="31:21" pos:end="31:21">&lt;</operator> <literal type="number" pos:start="31:23" pos:end="31:23">8</literal></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:18"><block_content pos:start="33:9" pos:end="33:18">

        <goto pos:start="33:9" pos:end="33:18">goto <name pos:start="33:14" pos:end="33:17">done</name>;</goto></block_content></block></if></if_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:36">/* start after the chunk size */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:41"><expr pos:start="39:5" pos:end="39:40"><call pos:start="39:5" pos:end="39:40"><name pos:start="39:5" pos:end="39:20">bytestream2_seek</name><argument_list pos:start="39:21" pos:end="39:40">(<argument pos:start="39:22" pos:end="39:26"><expr pos:start="39:22" pos:end="39:26"><operator pos:start="39:22" pos:end="39:22">&amp;</operator><name pos:start="39:23" pos:end="39:26"><name pos:start="39:23" pos:end="39:23">s</name><operator pos:start="39:24" pos:end="39:25">-&gt;</operator><name pos:start="39:26" pos:end="39:26">g</name></name></expr></argument>, <argument pos:start="39:29" pos:end="39:29"><expr pos:start="39:29" pos:end="39:29"><literal type="number" pos:start="39:29" pos:end="39:29">4</literal></expr></argument>, <argument pos:start="39:32" pos:end="39:39"><expr pos:start="39:32" pos:end="39:39"><name pos:start="39:32" pos:end="39:39">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:26">/* fetch the header */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:41"><expr pos:start="45:5" pos:end="45:40"><name pos:start="45:5" pos:end="45:10">header</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <call pos:start="45:14" pos:end="45:40"><name pos:start="45:14" pos:end="45:33">bytestream2_get_be16</name><argument_list pos:start="45:34" pos:end="45:40">(<argument pos:start="45:35" pos:end="45:39"><expr pos:start="45:35" pos:end="45:39"><operator pos:start="45:35" pos:end="45:35">&amp;</operator><name pos:start="45:36" pos:end="45:39"><name pos:start="45:36" pos:end="45:36">s</name><operator pos:start="45:37" pos:end="45:38">-&gt;</operator><name pos:start="45:39" pos:end="45:39">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="49:5" pos:end="49:70">/* if a header is present, fetch additional decoding parameters */</comment>

    <if_stmt pos:start="51:5" pos:end="75:5"><if pos:start="51:5" pos:end="69:5">if <condition pos:start="51:8" pos:end="51:24">(<expr pos:start="51:9" pos:end="51:23"><name pos:start="51:9" pos:end="51:14">header</name> <operator pos:start="51:16" pos:end="51:16">&amp;</operator> <literal type="number" pos:start="51:18" pos:end="51:23">0x0008</literal></expr>)</condition> <block pos:start="51:26" pos:end="69:5">{<block_content pos:start="53:9" pos:end="67:22">

        <if_stmt pos:start="53:9" pos:end="55:22"><if pos:start="53:9" pos:end="55:22">if <condition pos:start="53:12" pos:end="53:29">(<expr pos:start="53:13" pos:end="53:28"><name pos:start="53:13" pos:end="53:23"><name pos:start="53:13" pos:end="53:17">avpkt</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:23">size</name></name> <operator pos:start="53:25" pos:end="53:25">&lt;</operator> <literal type="number" pos:start="53:27" pos:end="53:28">14</literal></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:22"><block_content pos:start="55:13" pos:end="55:22">

            <goto pos:start="55:13" pos:end="55:22">goto <name pos:start="55:18" pos:end="55:21">done</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:49"><expr pos:start="57:9" pos:end="57:48"><name pos:start="57:9" pos:end="57:18">start_line</name> <operator pos:start="57:20" pos:end="57:20">=</operator> <call pos:start="57:22" pos:end="57:48"><name pos:start="57:22" pos:end="57:41">bytestream2_get_be16</name><argument_list pos:start="57:42" pos:end="57:48">(<argument pos:start="57:43" pos:end="57:47"><expr pos:start="57:43" pos:end="57:47"><operator pos:start="57:43" pos:end="57:43">&amp;</operator><name pos:start="57:44" pos:end="57:47"><name pos:start="57:44" pos:end="57:44">s</name><operator pos:start="57:45" pos:end="57:46">-&gt;</operator><name pos:start="57:47" pos:end="57:47">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:35"><expr pos:start="59:9" pos:end="59:34"><call pos:start="59:9" pos:end="59:34"><name pos:start="59:9" pos:end="59:24">bytestream2_skip</name><argument_list pos:start="59:25" pos:end="59:34">(<argument pos:start="59:26" pos:end="59:30"><expr pos:start="59:26" pos:end="59:30"><operator pos:start="59:26" pos:end="59:26">&amp;</operator><name pos:start="59:27" pos:end="59:30"><name pos:start="59:27" pos:end="59:27">s</name><operator pos:start="59:28" pos:end="59:29">-&gt;</operator><name pos:start="59:30" pos:end="59:30">g</name></name></expr></argument>, <argument pos:start="59:33" pos:end="59:33"><expr pos:start="59:33" pos:end="59:33"><literal type="number" pos:start="59:33" pos:end="59:33">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:49"><expr pos:start="61:9" pos:end="61:48"><name pos:start="61:9" pos:end="61:14">height</name>     <operator pos:start="61:20" pos:end="61:20">=</operator> <call pos:start="61:22" pos:end="61:48"><name pos:start="61:22" pos:end="61:41">bytestream2_get_be16</name><argument_list pos:start="61:42" pos:end="61:48">(<argument pos:start="61:43" pos:end="61:47"><expr pos:start="61:43" pos:end="61:47"><operator pos:start="61:43" pos:end="61:43">&amp;</operator><name pos:start="61:44" pos:end="61:47"><name pos:start="61:44" pos:end="61:44">s</name><operator pos:start="61:45" pos:end="61:46">-&gt;</operator><name pos:start="61:47" pos:end="61:47">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:35"><expr pos:start="63:9" pos:end="63:34"><call pos:start="63:9" pos:end="63:34"><name pos:start="63:9" pos:end="63:24">bytestream2_skip</name><argument_list pos:start="63:25" pos:end="63:34">(<argument pos:start="63:26" pos:end="63:30"><expr pos:start="63:26" pos:end="63:30"><operator pos:start="63:26" pos:end="63:26">&amp;</operator><name pos:start="63:27" pos:end="63:30"><name pos:start="63:27" pos:end="63:27">s</name><operator pos:start="63:28" pos:end="63:29">-&gt;</operator><name pos:start="63:30" pos:end="63:30">g</name></name></expr></argument>, <argument pos:start="63:33" pos:end="63:33"><expr pos:start="63:33" pos:end="63:33"><literal type="number" pos:start="63:33" pos:end="63:33">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="67:22"><if pos:start="65:9" pos:end="67:22">if <condition pos:start="65:12" pos:end="65:51">(<expr pos:start="65:13" pos:end="65:50"><name pos:start="65:13" pos:end="65:18">height</name> <operator pos:start="65:20" pos:end="65:20">&gt;</operator> <name pos:start="65:22" pos:end="65:37"><name pos:start="65:22" pos:end="65:22">s</name><operator pos:start="65:23" pos:end="65:24">-&gt;</operator><name pos:start="65:25" pos:end="65:29">avctx</name><operator pos:start="65:30" pos:end="65:31">-&gt;</operator><name pos:start="65:32" pos:end="65:37">height</name></name> <operator pos:start="65:39" pos:end="65:39">-</operator> <name pos:start="65:41" pos:end="65:50">start_line</name></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:22"><block_content pos:start="67:13" pos:end="67:22">

            <goto pos:start="67:13" pos:end="67:22">goto <name pos:start="67:18" pos:end="67:21">done</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="69:7" pos:end="75:5">else <block pos:start="69:12" pos:end="75:5">{<block_content pos:start="71:9" pos:end="73:38">

        <expr_stmt pos:start="71:9" pos:end="71:23"><expr pos:start="71:9" pos:end="71:22"><name pos:start="71:9" pos:end="71:18">start_line</name> <operator pos:start="71:20" pos:end="71:20">=</operator> <literal type="number" pos:start="71:22" pos:end="71:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:38"><expr pos:start="73:9" pos:end="73:37"><name pos:start="73:9" pos:end="73:14">height</name>     <operator pos:start="73:20" pos:end="73:20">=</operator> <name pos:start="73:22" pos:end="73:37"><name pos:start="73:22" pos:end="73:22">s</name><operator pos:start="73:23" pos:end="73:24">-&gt;</operator><name pos:start="73:25" pos:end="73:29">avctx</name><operator pos:start="73:30" pos:end="73:31">-&gt;</operator><name pos:start="73:32" pos:end="73:37">height</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:49"><expr pos:start="77:5" pos:end="77:48"><name pos:start="77:5" pos:end="77:11">row_ptr</name> <operator pos:start="77:13" pos:end="77:13">=</operator> <name pos:start="77:15" pos:end="77:35"><name pos:start="77:15" pos:end="77:15">s</name><operator pos:start="77:16" pos:end="77:17">-&gt;</operator><name pos:start="77:18" pos:end="77:22">frame</name><operator pos:start="77:23" pos:end="77:24">-&gt;</operator><name pos:start="77:25" pos:end="77:32">linesize</name><index pos:start="77:33" pos:end="77:35">[<expr pos:start="77:34" pos:end="77:34"><literal type="number" pos:start="77:34" pos:end="77:34">0</literal></expr>]</index></name> <operator pos:start="77:37" pos:end="77:37">*</operator> <name pos:start="77:39" pos:end="77:48">start_line</name></expr>;</expr_stmt>



    <switch pos:start="81:5" pos:end="163:5">switch <condition pos:start="81:12" pos:end="81:41">(<expr pos:start="81:13" pos:end="81:40"><name pos:start="81:13" pos:end="81:40"><name pos:start="81:13" pos:end="81:17">avctx</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:40">bits_per_coded_sample</name></name></expr>)</condition> <block pos:start="81:43" pos:end="163:5">{<block_content pos:start="83:5" pos:end="161:14">

    <case pos:start="83:5" pos:end="83:11">case <expr pos:start="83:10" pos:end="83:10"><literal type="number" pos:start="83:10" pos:end="83:10">1</literal></expr>:</case>

    <case pos:start="85:5" pos:end="85:12">case <expr pos:start="85:10" pos:end="85:11"><literal type="number" pos:start="85:10" pos:end="85:11">33</literal></expr>:</case>

        <expr_stmt pos:start="87:9" pos:end="87:46"><expr pos:start="87:9" pos:end="87:45"><call pos:start="87:9" pos:end="87:45"><name pos:start="87:9" pos:end="87:25">qtrle_decode_1bpp</name><argument_list pos:start="87:26" pos:end="87:45">(<argument pos:start="87:27" pos:end="87:27"><expr pos:start="87:27" pos:end="87:27"><name pos:start="87:27" pos:end="87:27">s</name></expr></argument>, <argument pos:start="87:30" pos:end="87:36"><expr pos:start="87:30" pos:end="87:36"><name pos:start="87:30" pos:end="87:36">row_ptr</name></expr></argument>, <argument pos:start="87:39" pos:end="87:44"><expr pos:start="87:39" pos:end="87:44"><name pos:start="87:39" pos:end="87:44">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:24"><expr pos:start="89:9" pos:end="89:23"><name pos:start="89:9" pos:end="89:19">has_palette</name> <operator pos:start="89:21" pos:end="89:21">=</operator> <literal type="number" pos:start="89:23" pos:end="89:23">1</literal></expr>;</expr_stmt>

        <break pos:start="91:9" pos:end="91:14">break;</break>



    <case pos:start="95:5" pos:end="95:11">case <expr pos:start="95:10" pos:end="95:10"><literal type="number" pos:start="95:10" pos:end="95:10">2</literal></expr>:</case>

    <case pos:start="97:5" pos:end="97:12">case <expr pos:start="97:10" pos:end="97:11"><literal type="number" pos:start="97:10" pos:end="97:11">34</literal></expr>:</case>

        <expr_stmt pos:start="99:9" pos:end="99:51"><expr pos:start="99:9" pos:end="99:50"><call pos:start="99:9" pos:end="99:50"><name pos:start="99:9" pos:end="99:27">qtrle_decode_2n4bpp</name><argument_list pos:start="99:28" pos:end="99:50">(<argument pos:start="99:29" pos:end="99:29"><expr pos:start="99:29" pos:end="99:29"><name pos:start="99:29" pos:end="99:29">s</name></expr></argument>, <argument pos:start="99:32" pos:end="99:38"><expr pos:start="99:32" pos:end="99:38"><name pos:start="99:32" pos:end="99:38">row_ptr</name></expr></argument>, <argument pos:start="99:41" pos:end="99:46"><expr pos:start="99:41" pos:end="99:46"><name pos:start="99:41" pos:end="99:46">height</name></expr></argument>, <argument pos:start="99:49" pos:end="99:49"><expr pos:start="99:49" pos:end="99:49"><literal type="number" pos:start="99:49" pos:end="99:49">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:24"><expr pos:start="101:9" pos:end="101:23"><name pos:start="101:9" pos:end="101:19">has_palette</name> <operator pos:start="101:21" pos:end="101:21">=</operator> <literal type="number" pos:start="101:23" pos:end="101:23">1</literal></expr>;</expr_stmt>

        <break pos:start="103:9" pos:end="103:14">break;</break>



    <case pos:start="107:5" pos:end="107:11">case <expr pos:start="107:10" pos:end="107:10"><literal type="number" pos:start="107:10" pos:end="107:10">4</literal></expr>:</case>

    <case pos:start="109:5" pos:end="109:12">case <expr pos:start="109:10" pos:end="109:11"><literal type="number" pos:start="109:10" pos:end="109:11">36</literal></expr>:</case>

        <expr_stmt pos:start="111:9" pos:end="111:51"><expr pos:start="111:9" pos:end="111:50"><call pos:start="111:9" pos:end="111:50"><name pos:start="111:9" pos:end="111:27">qtrle_decode_2n4bpp</name><argument_list pos:start="111:28" pos:end="111:50">(<argument pos:start="111:29" pos:end="111:29"><expr pos:start="111:29" pos:end="111:29"><name pos:start="111:29" pos:end="111:29">s</name></expr></argument>, <argument pos:start="111:32" pos:end="111:38"><expr pos:start="111:32" pos:end="111:38"><name pos:start="111:32" pos:end="111:38">row_ptr</name></expr></argument>, <argument pos:start="111:41" pos:end="111:46"><expr pos:start="111:41" pos:end="111:46"><name pos:start="111:41" pos:end="111:46">height</name></expr></argument>, <argument pos:start="111:49" pos:end="111:49"><expr pos:start="111:49" pos:end="111:49"><literal type="number" pos:start="111:49" pos:end="111:49">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:24"><expr pos:start="113:9" pos:end="113:23"><name pos:start="113:9" pos:end="113:19">has_palette</name> <operator pos:start="113:21" pos:end="113:21">=</operator> <literal type="number" pos:start="113:23" pos:end="113:23">1</literal></expr>;</expr_stmt>

        <break pos:start="115:9" pos:end="115:14">break;</break>



    <case pos:start="119:5" pos:end="119:11">case <expr pos:start="119:10" pos:end="119:10"><literal type="number" pos:start="119:10" pos:end="119:10">8</literal></expr>:</case>

    <case pos:start="121:5" pos:end="121:12">case <expr pos:start="121:10" pos:end="121:11"><literal type="number" pos:start="121:10" pos:end="121:11">40</literal></expr>:</case>

        <expr_stmt pos:start="123:9" pos:end="123:46"><expr pos:start="123:9" pos:end="123:45"><call pos:start="123:9" pos:end="123:45"><name pos:start="123:9" pos:end="123:25">qtrle_decode_8bpp</name><argument_list pos:start="123:26" pos:end="123:45">(<argument pos:start="123:27" pos:end="123:27"><expr pos:start="123:27" pos:end="123:27"><name pos:start="123:27" pos:end="123:27">s</name></expr></argument>, <argument pos:start="123:30" pos:end="123:36"><expr pos:start="123:30" pos:end="123:36"><name pos:start="123:30" pos:end="123:36">row_ptr</name></expr></argument>, <argument pos:start="123:39" pos:end="123:44"><expr pos:start="123:39" pos:end="123:44"><name pos:start="123:39" pos:end="123:44">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:24"><expr pos:start="125:9" pos:end="125:23"><name pos:start="125:9" pos:end="125:19">has_palette</name> <operator pos:start="125:21" pos:end="125:21">=</operator> <literal type="number" pos:start="125:23" pos:end="125:23">1</literal></expr>;</expr_stmt>

        <break pos:start="127:9" pos:end="127:14">break;</break>



    <case pos:start="131:5" pos:end="131:12">case <expr pos:start="131:10" pos:end="131:11"><literal type="number" pos:start="131:10" pos:end="131:11">16</literal></expr>:</case>

        <expr_stmt pos:start="133:9" pos:end="133:47"><expr pos:start="133:9" pos:end="133:46"><call pos:start="133:9" pos:end="133:46"><name pos:start="133:9" pos:end="133:26">qtrle_decode_16bpp</name><argument_list pos:start="133:27" pos:end="133:46">(<argument pos:start="133:28" pos:end="133:28"><expr pos:start="133:28" pos:end="133:28"><name pos:start="133:28" pos:end="133:28">s</name></expr></argument>, <argument pos:start="133:31" pos:end="133:37"><expr pos:start="133:31" pos:end="133:37"><name pos:start="133:31" pos:end="133:37">row_ptr</name></expr></argument>, <argument pos:start="133:40" pos:end="133:45"><expr pos:start="133:40" pos:end="133:45"><name pos:start="133:40" pos:end="133:45">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="135:9" pos:end="135:14">break;</break>



    <case pos:start="139:5" pos:end="139:12">case <expr pos:start="139:10" pos:end="139:11"><literal type="number" pos:start="139:10" pos:end="139:11">24</literal></expr>:</case>

        <expr_stmt pos:start="141:9" pos:end="141:47"><expr pos:start="141:9" pos:end="141:46"><call pos:start="141:9" pos:end="141:46"><name pos:start="141:9" pos:end="141:26">qtrle_decode_24bpp</name><argument_list pos:start="141:27" pos:end="141:46">(<argument pos:start="141:28" pos:end="141:28"><expr pos:start="141:28" pos:end="141:28"><name pos:start="141:28" pos:end="141:28">s</name></expr></argument>, <argument pos:start="141:31" pos:end="141:37"><expr pos:start="141:31" pos:end="141:37"><name pos:start="141:31" pos:end="141:37">row_ptr</name></expr></argument>, <argument pos:start="141:40" pos:end="141:45"><expr pos:start="141:40" pos:end="141:45"><name pos:start="141:40" pos:end="141:45">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="143:9" pos:end="143:14">break;</break>



    <case pos:start="147:5" pos:end="147:12">case <expr pos:start="147:10" pos:end="147:11"><literal type="number" pos:start="147:10" pos:end="147:11">32</literal></expr>:</case>

        <expr_stmt pos:start="149:9" pos:end="149:47"><expr pos:start="149:9" pos:end="149:46"><call pos:start="149:9" pos:end="149:46"><name pos:start="149:9" pos:end="149:26">qtrle_decode_32bpp</name><argument_list pos:start="149:27" pos:end="149:46">(<argument pos:start="149:28" pos:end="149:28"><expr pos:start="149:28" pos:end="149:28"><name pos:start="149:28" pos:end="149:28">s</name></expr></argument>, <argument pos:start="149:31" pos:end="149:37"><expr pos:start="149:31" pos:end="149:37"><name pos:start="149:31" pos:end="149:37">row_ptr</name></expr></argument>, <argument pos:start="149:40" pos:end="149:45"><expr pos:start="149:40" pos:end="149:45"><name pos:start="149:40" pos:end="149:45">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="151:9" pos:end="151:14">break;</break>



    <default pos:start="155:5" pos:end="155:12">default:</default>

        <expr_stmt pos:start="157:9" pos:end="159:42"><expr pos:start="157:9" pos:end="159:41"><call pos:start="157:9" pos:end="159:41"><name pos:start="157:9" pos:end="157:14">av_log</name> <argument_list pos:start="157:16" pos:end="159:41">(<argument pos:start="157:17" pos:end="157:24"><expr pos:start="157:17" pos:end="157:24"><name pos:start="157:17" pos:end="157:24"><name pos:start="157:17" pos:end="157:17">s</name><operator pos:start="157:18" pos:end="157:19">-&gt;</operator><name pos:start="157:20" pos:end="157:24">avctx</name></name></expr></argument>, <argument pos:start="157:27" pos:end="157:38"><expr pos:start="157:27" pos:end="157:38"><name pos:start="157:27" pos:end="157:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="157:41" pos:end="157:83"><expr pos:start="157:41" pos:end="157:83"><literal type="string" pos:start="157:41" pos:end="157:83">"Unsupported colorspace: %d bits/sample?\n"</literal></expr></argument>,

            <argument pos:start="159:13" pos:end="159:40"><expr pos:start="159:13" pos:end="159:40"><name pos:start="159:13" pos:end="159:40"><name pos:start="159:13" pos:end="159:17">avctx</name><operator pos:start="159:18" pos:end="159:19">-&gt;</operator><name pos:start="159:20" pos:end="159:40">bits_per_coded_sample</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="161:9" pos:end="161:14">break;</break>

    </block_content>}</block></switch>



    <if_stmt pos:start="167:5" pos:end="187:5"><if pos:start="167:5" pos:end="187:5">if<condition pos:start="167:7" pos:end="167:19">(<expr pos:start="167:8" pos:end="167:18"><name pos:start="167:8" pos:end="167:18">has_palette</name></expr>)</condition> <block pos:start="167:21" pos:end="187:5">{<block_content pos:start="169:9" pos:end="185:58">

        <decl_stmt pos:start="169:9" pos:end="169:87"><decl pos:start="169:9" pos:end="169:86"><type pos:start="169:9" pos:end="169:23"><specifier pos:start="169:9" pos:end="169:13">const</specifier> <name pos:start="169:15" pos:end="169:21">uint8_t</name> <modifier pos:start="169:23" pos:end="169:23">*</modifier></type><name pos:start="169:24" pos:end="169:26">pal</name> <init pos:start="169:28" pos:end="169:86">= <expr pos:start="169:30" pos:end="169:86"><call pos:start="169:30" pos:end="169:86"><name pos:start="169:30" pos:end="169:52">av_packet_get_side_data</name><argument_list pos:start="169:53" pos:end="169:86">(<argument pos:start="169:54" pos:end="169:58"><expr pos:start="169:54" pos:end="169:58"><name pos:start="169:54" pos:end="169:58">avpkt</name></expr></argument>, <argument pos:start="169:61" pos:end="169:79"><expr pos:start="169:61" pos:end="169:79"><name pos:start="169:61" pos:end="169:79">AV_PKT_DATA_PALETTE</name></expr></argument>, <argument pos:start="169:82" pos:end="169:85"><expr pos:start="169:82" pos:end="169:85"><name pos:start="169:82" pos:end="169:85">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="173:9" pos:end="179:9"><if pos:start="173:9" pos:end="179:9">if <condition pos:start="173:12" pos:end="173:16">(<expr pos:start="173:13" pos:end="173:15"><name pos:start="173:13" pos:end="173:15">pal</name></expr>)</condition> <block pos:start="173:18" pos:end="179:9">{<block_content pos:start="175:13" pos:end="177:48">

            <expr_stmt pos:start="175:13" pos:end="175:46"><expr pos:start="175:13" pos:end="175:45"><name pos:start="175:13" pos:end="175:41"><name pos:start="175:13" pos:end="175:13">s</name><operator pos:start="175:14" pos:end="175:15">-&gt;</operator><name pos:start="175:16" pos:end="175:20">frame</name><operator pos:start="175:21" pos:end="175:22">-&gt;</operator><name pos:start="175:23" pos:end="175:41">palette_has_changed</name></name> <operator pos:start="175:43" pos:end="175:43">=</operator> <literal type="number" pos:start="175:45" pos:end="175:45">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="177:13" pos:end="177:48"><expr pos:start="177:13" pos:end="177:47"><call pos:start="177:13" pos:end="177:47"><name pos:start="177:13" pos:end="177:18">memcpy</name><argument_list pos:start="177:19" pos:end="177:47">(<argument pos:start="177:20" pos:end="177:25"><expr pos:start="177:20" pos:end="177:25"><name pos:start="177:20" pos:end="177:25"><name pos:start="177:20" pos:end="177:20">s</name><operator pos:start="177:21" pos:end="177:22">-&gt;</operator><name pos:start="177:23" pos:end="177:25">pal</name></name></expr></argument>, <argument pos:start="177:28" pos:end="177:30"><expr pos:start="177:28" pos:end="177:30"><name pos:start="177:28" pos:end="177:30">pal</name></expr></argument>, <argument pos:start="177:33" pos:end="177:46"><expr pos:start="177:33" pos:end="177:46"><name pos:start="177:33" pos:end="177:46">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="183:9" pos:end="183:55">/* make the palette available on the way out */</comment>

        <expr_stmt pos:start="185:9" pos:end="185:58"><expr pos:start="185:9" pos:end="185:57"><call pos:start="185:9" pos:end="185:57"><name pos:start="185:9" pos:end="185:14">memcpy</name><argument_list pos:start="185:15" pos:end="185:57">(<argument pos:start="185:16" pos:end="185:32"><expr pos:start="185:16" pos:end="185:32"><name pos:start="185:16" pos:end="185:32"><name pos:start="185:16" pos:end="185:16">s</name><operator pos:start="185:17" pos:end="185:18">-&gt;</operator><name pos:start="185:19" pos:end="185:23">frame</name><operator pos:start="185:24" pos:end="185:25">-&gt;</operator><name pos:start="185:26" pos:end="185:29">data</name><index pos:start="185:30" pos:end="185:32">[<expr pos:start="185:31" pos:end="185:31"><literal type="number" pos:start="185:31" pos:end="185:31">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="185:35" pos:end="185:40"><expr pos:start="185:35" pos:end="185:40"><name pos:start="185:35" pos:end="185:40"><name pos:start="185:35" pos:end="185:35">s</name><operator pos:start="185:36" pos:end="185:37">-&gt;</operator><name pos:start="185:38" pos:end="185:40">pal</name></name></expr></argument>, <argument pos:start="185:43" pos:end="185:56"><expr pos:start="185:43" pos:end="185:56"><name pos:start="185:43" pos:end="185:56">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



<label pos:start="191:1" pos:end="191:5"><name pos:start="191:1" pos:end="191:4">done</name>:</label>

    <if_stmt pos:start="193:5" pos:end="195:19"><if pos:start="193:5" pos:end="195:19">if <condition pos:start="193:8" pos:end="193:49">(<expr pos:start="193:9" pos:end="193:48"><operator pos:start="193:9" pos:end="193:9">(</operator><name pos:start="193:10" pos:end="193:12">ret</name> <operator pos:start="193:14" pos:end="193:14">=</operator> <call pos:start="193:16" pos:end="193:43"><name pos:start="193:16" pos:end="193:27">av_frame_ref</name><argument_list pos:start="193:28" pos:end="193:43">(<argument pos:start="193:29" pos:end="193:32"><expr pos:start="193:29" pos:end="193:32"><name pos:start="193:29" pos:end="193:32">data</name></expr></argument>, <argument pos:start="193:35" pos:end="193:42"><expr pos:start="193:35" pos:end="193:42"><name pos:start="193:35" pos:end="193:42"><name pos:start="193:35" pos:end="193:35">s</name><operator pos:start="193:36" pos:end="193:37">-&gt;</operator><name pos:start="193:38" pos:end="193:42">frame</name></name></expr></argument>)</argument_list></call><operator pos:start="193:44" pos:end="193:44">)</operator> <operator pos:start="193:46" pos:end="193:46">&lt;</operator> <literal type="number" pos:start="193:48" pos:end="193:48">0</literal></expr>)</condition><block type="pseudo" pos:start="195:9" pos:end="195:19"><block_content pos:start="195:9" pos:end="195:19">

        <return pos:start="195:9" pos:end="195:19">return <expr pos:start="195:16" pos:end="195:18"><name pos:start="195:16" pos:end="195:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="197:5" pos:end="197:24"><expr pos:start="197:5" pos:end="197:23"><operator pos:start="197:5" pos:end="197:5">*</operator><name pos:start="197:6" pos:end="197:14">got_frame</name>      <operator pos:start="197:21" pos:end="197:21">=</operator> <literal type="number" pos:start="197:23" pos:end="197:23">1</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="201:5" pos:end="201:63">/* always report that the buffer was completely consumed */</comment>

    <return pos:start="203:5" pos:end="203:23">return <expr pos:start="203:12" pos:end="203:22"><name pos:start="203:12" pos:end="203:22"><name pos:start="203:12" pos:end="203:16">avpkt</name><operator pos:start="203:17" pos:end="203:18">-&gt;</operator><name pos:start="203:19" pos:end="203:22">size</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
