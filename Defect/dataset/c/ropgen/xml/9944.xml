<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9944.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:24">ioinst_handle_stcrw</name><parameter_list pos:start="1:25" pos:end="1:52">(<parameter pos:start="1:26" pos:end="1:37"><decl pos:start="1:26" pos:end="1:37"><type pos:start="1:26" pos:end="1:37"><name pos:start="1:26" pos:end="1:32">S390CPU</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">cpu</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:51"><decl pos:start="1:40" pos:end="1:51"><type pos:start="1:40" pos:end="1:51"><name pos:start="1:40" pos:end="1:47">uint32_t</name></type> <name pos:start="1:49" pos:end="1:51">ipb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:53">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:9"><name pos:start="5:5" pos:end="5:7">CRW</name> <modifier pos:start="5:9" pos:end="5:9">*</modifier></type><name pos:start="5:10" pos:end="5:12">crw</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:17">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:11"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">cc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">hwaddr</name></type> <name pos:start="11:12" pos:end="11:14">len</name> <init pos:start="11:16" pos:end="11:29">= <expr pos:start="11:18" pos:end="11:29"><sizeof pos:start="11:18" pos:end="11:29">sizeof<argument_list pos:start="11:24" pos:end="11:29">(<argument pos:start="11:25" pos:end="11:28"><expr pos:start="11:25" pos:end="11:28"><operator pos:start="11:25" pos:end="11:25">*</operator><name pos:start="11:26" pos:end="11:28">crw</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:35"><decl pos:start="13:5" pos:end="13:34"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:17">CPUS390XState</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:22">env</name> <init pos:start="13:24" pos:end="13:34">= <expr pos:start="13:26" pos:end="13:34"><operator pos:start="13:26" pos:end="13:26">&amp;</operator><name pos:start="13:27" pos:end="13:34"><name pos:start="13:27" pos:end="13:29">cpu</name><operator pos:start="13:30" pos:end="13:31">-&gt;</operator><name pos:start="13:32" pos:end="13:34">env</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:39"><expr pos:start="17:5" pos:end="17:38"><name pos:start="17:5" pos:end="17:8">addr</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <call pos:start="17:12" pos:end="17:38"><name pos:start="17:12" pos:end="17:28">decode_basedisp_s</name><argument_list pos:start="17:29" pos:end="17:38">(<argument pos:start="17:30" pos:end="17:32"><expr pos:start="17:30" pos:end="17:32"><name pos:start="17:30" pos:end="17:32">env</name></expr></argument>, <argument pos:start="17:35" pos:end="17:37"><expr pos:start="17:35" pos:end="17:37"><name pos:start="17:35" pos:end="17:37">ipb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:17">(<expr pos:start="19:9" pos:end="19:16"><name pos:start="19:9" pos:end="19:12">addr</name> <operator pos:start="19:14" pos:end="19:14">&amp;</operator> <literal type="number" pos:start="19:16" pos:end="19:16">3</literal></expr>)</condition> <block pos:start="19:19" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:15">

        <expr_stmt pos:start="21:9" pos:end="21:53"><expr pos:start="21:9" pos:end="21:52"><call pos:start="21:9" pos:end="21:52"><name pos:start="21:9" pos:end="21:25">program_interrupt</name><argument_list pos:start="21:26" pos:end="21:52">(<argument pos:start="21:27" pos:end="21:29"><expr pos:start="21:27" pos:end="21:29"><name pos:start="21:27" pos:end="21:29">env</name></expr></argument>, <argument pos:start="21:32" pos:end="21:48"><expr pos:start="21:32" pos:end="21:48"><name pos:start="21:32" pos:end="21:48">PGM_SPECIFICATION</name></expr></argument>, <argument pos:start="21:51" pos:end="21:51"><expr pos:start="21:51" pos:end="21:51"><literal type="number" pos:start="21:51" pos:end="21:51">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:59"><expr pos:start="27:5" pos:end="27:58"><name pos:start="27:5" pos:end="27:7">crw</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:58"><name pos:start="27:11" pos:end="27:38">s390_cpu_physical_memory_map</name><argument_list pos:start="27:39" pos:end="27:58">(<argument pos:start="27:40" pos:end="27:42"><expr pos:start="27:40" pos:end="27:42"><name pos:start="27:40" pos:end="27:42">env</name></expr></argument>, <argument pos:start="27:45" pos:end="27:48"><expr pos:start="27:45" pos:end="27:48"><name pos:start="27:45" pos:end="27:48">addr</name></expr></argument>, <argument pos:start="27:51" pos:end="27:54"><expr pos:start="27:51" pos:end="27:54"><operator pos:start="27:51" pos:end="27:51">&amp;</operator><name pos:start="27:52" pos:end="27:54">len</name></expr></argument>, <argument pos:start="27:57" pos:end="27:57"><expr pos:start="27:57" pos:end="27:57"><literal type="number" pos:start="27:57" pos:end="27:57">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:36">(<expr pos:start="29:9" pos:end="29:35"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:12">crw</name> <operator pos:start="29:14" pos:end="29:15">||</operator> <name pos:start="29:17" pos:end="29:19">len</name> <operator pos:start="29:21" pos:end="29:22">!=</operator> <sizeof pos:start="29:24" pos:end="29:35">sizeof<argument_list pos:start="29:30" pos:end="29:35">(<argument pos:start="29:31" pos:end="29:34"><expr pos:start="29:31" pos:end="29:34"><operator pos:start="29:31" pos:end="29:31">*</operator><name pos:start="29:32" pos:end="29:34">crw</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="29:38" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:17">

        <expr_stmt pos:start="31:9" pos:end="31:50"><expr pos:start="31:9" pos:end="31:49"><call pos:start="31:9" pos:end="31:49"><name pos:start="31:9" pos:end="31:25">program_interrupt</name><argument_list pos:start="31:26" pos:end="31:49">(<argument pos:start="31:27" pos:end="31:29"><expr pos:start="31:27" pos:end="31:29"><name pos:start="31:27" pos:end="31:29">env</name></expr></argument>, <argument pos:start="31:32" pos:end="31:45"><expr pos:start="31:32" pos:end="31:45"><name pos:start="31:32" pos:end="31:45">PGM_ADDRESSING</name></expr></argument>, <argument pos:start="31:48" pos:end="31:48"><expr pos:start="31:48" pos:end="31:48"><literal type="number" pos:start="31:48" pos:end="31:48">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="33:9" pos:end="33:17">goto <name pos:start="33:14" pos:end="33:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:27"><expr pos:start="37:5" pos:end="37:26"><name pos:start="37:5" pos:end="37:6">cc</name> <operator pos:start="37:8" pos:end="37:8">=</operator> <call pos:start="37:10" pos:end="37:26"><name pos:start="37:10" pos:end="37:21">css_do_stcrw</name><argument_list pos:start="37:22" pos:end="37:26">(<argument pos:start="37:23" pos:end="37:25"><expr pos:start="37:23" pos:end="37:25"><name pos:start="37:23" pos:end="37:25">crw</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="39:5" pos:end="39:43">/* 0 - crw stored, 1 - zeroes stored */</comment>

    <expr_stmt pos:start="41:5" pos:end="41:19"><expr pos:start="41:5" pos:end="41:18"><call pos:start="41:5" pos:end="41:18"><name pos:start="41:5" pos:end="41:9">setcc</name><argument_list pos:start="41:10" pos:end="41:18">(<argument pos:start="41:11" pos:end="41:13"><expr pos:start="41:11" pos:end="41:13"><name pos:start="41:11" pos:end="41:13">cpu</name></expr></argument>, <argument pos:start="41:16" pos:end="41:17"><expr pos:start="41:16" pos:end="41:17"><name pos:start="41:16" pos:end="41:17">cc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="45:1" pos:end="45:4"><name pos:start="45:1" pos:end="45:3">out</name>:</label>

    <expr_stmt pos:start="47:5" pos:end="47:53"><expr pos:start="47:5" pos:end="47:52"><call pos:start="47:5" pos:end="47:52"><name pos:start="47:5" pos:end="47:34">s390_cpu_physical_memory_unmap</name><argument_list pos:start="47:35" pos:end="47:52">(<argument pos:start="47:36" pos:end="47:38"><expr pos:start="47:36" pos:end="47:38"><name pos:start="47:36" pos:end="47:38">env</name></expr></argument>, <argument pos:start="47:41" pos:end="47:43"><expr pos:start="47:41" pos:end="47:43"><name pos:start="47:41" pos:end="47:43">crw</name></expr></argument>, <argument pos:start="47:46" pos:end="47:48"><expr pos:start="47:46" pos:end="47:48"><name pos:start="47:46" pos:end="47:48">len</name></expr></argument>, <argument pos:start="47:51" pos:end="47:51"><expr pos:start="47:51" pos:end="47:51"><literal type="number" pos:start="47:51" pos:end="47:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
