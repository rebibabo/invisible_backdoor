<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17273.c" pos:tabs="8"><function pos:start="1:1" pos:end="457:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:16">DriveInfo</name> <modifier pos:start="1:18" pos:end="1:18">*</modifier></type><name pos:start="1:19" pos:end="1:31">blockdev_init</name><parameter_list pos:start="1:32" pos:end="3:45">(<parameter pos:start="1:33" pos:end="1:48"><decl pos:start="1:33" pos:end="1:48"><type pos:start="1:33" pos:end="1:48"><specifier pos:start="1:33" pos:end="1:37">const</specifier> <name pos:start="1:39" pos:end="1:42">char</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:48">file</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:64"><decl pos:start="1:51" pos:end="1:64"><type pos:start="1:51" pos:end="1:64"><name pos:start="1:51" pos:end="1:55">QDict</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:64">bs_opts</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:44"><decl pos:start="3:33" pos:end="3:44"><type pos:start="3:33" pos:end="3:44"><name pos:start="3:33" pos:end="3:37">Error</name> <modifier pos:start="3:39" pos:end="3:39">*</modifier><modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:44">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="457:1">{<block_content pos:start="7:5" pos:end="455:16">

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:22">serial</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:10">ro</name> <init pos:start="11:12" pos:end="11:14">= <expr pos:start="11:14" pos:end="11:14"><literal type="number" pos:start="11:14" pos:end="11:14">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:18">bdrv_flags</name> <init pos:start="13:20" pos:end="13:22">= <expr pos:start="13:22" pos:end="13:22"><literal type="number" pos:start="13:22" pos:end="13:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:38"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:21">on_read_error</name></decl>, <decl pos:start="15:24" pos:end="15:37"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:24" pos:end="15:37">on_write_error</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:13">DriveInfo</name> <modifier pos:start="17:15" pos:end="17:15">*</modifier></type><name pos:start="17:16" pos:end="17:20">dinfo</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:23"><decl pos:start="19:5" pos:end="19:22"><type pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:18">ThrottleConfig</name></type> <name pos:start="19:20" pos:end="19:22">cfg</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:21"><decl pos:start="21:5" pos:end="21:20"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:16">snapshot</name> <init pos:start="21:18" pos:end="21:20">= <expr pos:start="21:20" pos:end="21:20"><literal type="number" pos:start="21:20" pos:end="21:20">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:22"><decl pos:start="23:5" pos:end="23:21"><type pos:start="23:5" pos:end="23:8"><name pos:start="23:5" pos:end="23:8">bool</name></type> <name pos:start="23:10" pos:end="23:21">copy_on_read</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:12"><decl pos:start="25:5" pos:end="25:11"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:24"><decl pos:start="27:5" pos:end="27:23"><type pos:start="27:5" pos:end="27:11"><name pos:start="27:5" pos:end="27:9">Error</name> <modifier pos:start="27:11" pos:end="27:11">*</modifier></type><name pos:start="27:12" pos:end="27:16">error</name> <init pos:start="27:18" pos:end="27:23">= <expr pos:start="27:20" pos:end="27:23"><name pos:start="27:20" pos:end="27:23">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:19"><decl pos:start="29:5" pos:end="29:18"><type pos:start="29:5" pos:end="29:14"><name pos:start="29:5" pos:end="29:12">QemuOpts</name> <modifier pos:start="29:14" pos:end="29:14">*</modifier></type><name pos:start="29:15" pos:end="29:18">opts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:19"><decl pos:start="31:5" pos:end="31:18"><type pos:start="31:5" pos:end="31:16"><specifier pos:start="31:5" pos:end="31:9">const</specifier> <name pos:start="31:11" pos:end="31:14">char</name> <modifier pos:start="31:16" pos:end="31:16">*</modifier></type><name pos:start="31:17" pos:end="31:18">id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:34"><decl pos:start="33:5" pos:end="33:33"><type pos:start="33:5" pos:end="33:8"><name pos:start="33:5" pos:end="33:8">bool</name></type> <name pos:start="33:10" pos:end="33:33">has_driver_specific_opts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:28"><decl pos:start="35:5" pos:end="35:27"><type pos:start="35:5" pos:end="35:17"><name pos:start="35:5" pos:end="35:15">BlockDriver</name> <modifier pos:start="35:17" pos:end="35:17">*</modifier></type><name pos:start="35:18" pos:end="35:20">drv</name> <init pos:start="35:22" pos:end="35:27">= <expr pos:start="35:24" pos:end="35:27"><name pos:start="35:24" pos:end="35:27">NULL</name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="39:5" pos:end="41:56">/* Check common options by copying from bs_opts to opts, all other options

     * stay in bs_opts for processing by bdrv_open(). */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:42"><expr pos:start="43:5" pos:end="43:41"><name pos:start="43:5" pos:end="43:6">id</name> <operator pos:start="43:8" pos:end="43:8">=</operator> <call pos:start="43:10" pos:end="43:41"><name pos:start="43:10" pos:end="43:26">qdict_get_try_str</name><argument_list pos:start="43:27" pos:end="43:41">(<argument pos:start="43:28" pos:end="43:34"><expr pos:start="43:28" pos:end="43:34"><name pos:start="43:28" pos:end="43:34">bs_opts</name></expr></argument>, <argument pos:start="43:37" pos:end="43:40"><expr pos:start="43:37" pos:end="43:40"><literal type="string" pos:start="43:37" pos:end="43:40">"id"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:68"><expr pos:start="45:5" pos:end="45:67"><name pos:start="45:5" pos:end="45:8">opts</name> <operator pos:start="45:10" pos:end="45:10">=</operator> <call pos:start="45:12" pos:end="45:67"><name pos:start="45:12" pos:end="45:27">qemu_opts_create</name><argument_list pos:start="45:28" pos:end="45:67">(<argument pos:start="45:29" pos:end="45:51"><expr pos:start="45:29" pos:end="45:51"><operator pos:start="45:29" pos:end="45:29">&amp;</operator><name pos:start="45:30" pos:end="45:51">qemu_common_drive_opts</name></expr></argument>, <argument pos:start="45:54" pos:end="45:55"><expr pos:start="45:54" pos:end="45:55"><name pos:start="45:54" pos:end="45:55">id</name></expr></argument>, <argument pos:start="45:58" pos:end="45:58"><expr pos:start="45:58" pos:end="45:58"><literal type="number" pos:start="45:58" pos:end="45:58">1</literal></expr></argument>, <argument pos:start="45:61" pos:end="45:66"><expr pos:start="45:61" pos:end="45:66"><operator pos:start="45:61" pos:end="45:61">&amp;</operator><name pos:start="45:62" pos:end="45:66">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if <condition pos:start="47:8" pos:end="47:14">(<expr pos:start="47:9" pos:end="47:13"><name pos:start="47:9" pos:end="47:13">error</name></expr>)</condition> <block pos:start="47:16" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:20">

        <expr_stmt pos:start="49:9" pos:end="49:37"><expr pos:start="49:9" pos:end="49:36"><call pos:start="49:9" pos:end="49:36"><name pos:start="49:9" pos:end="49:23">error_propagate</name><argument_list pos:start="49:24" pos:end="49:36">(<argument pos:start="49:25" pos:end="49:28"><expr pos:start="49:25" pos:end="49:28"><name pos:start="49:25" pos:end="49:28">errp</name></expr></argument>, <argument pos:start="49:31" pos:end="49:35"><expr pos:start="49:31" pos:end="49:35"><name pos:start="49:31" pos:end="49:35">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:20">return <expr pos:start="51:16" pos:end="51:19"><name pos:start="51:16" pos:end="51:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:50"><expr pos:start="57:5" pos:end="57:49"><call pos:start="57:5" pos:end="57:49"><name pos:start="57:5" pos:end="57:26">qemu_opts_absorb_qdict</name><argument_list pos:start="57:27" pos:end="57:49">(<argument pos:start="57:28" pos:end="57:31"><expr pos:start="57:28" pos:end="57:31"><name pos:start="57:28" pos:end="57:31">opts</name></expr></argument>, <argument pos:start="57:34" pos:end="57:40"><expr pos:start="57:34" pos:end="57:40"><name pos:start="57:34" pos:end="57:40">bs_opts</name></expr></argument>, <argument pos:start="57:43" pos:end="57:48"><expr pos:start="57:43" pos:end="57:48"><operator pos:start="57:43" pos:end="57:43">&amp;</operator><name pos:start="57:44" pos:end="57:48">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="65:5"><if pos:start="59:5" pos:end="65:5">if <condition pos:start="59:8" pos:end="59:14">(<expr pos:start="59:9" pos:end="59:13"><name pos:start="59:9" pos:end="59:13">error</name></expr>)</condition> <block pos:start="59:16" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:23">

        <expr_stmt pos:start="61:9" pos:end="61:37"><expr pos:start="61:9" pos:end="61:36"><call pos:start="61:9" pos:end="61:36"><name pos:start="61:9" pos:end="61:23">error_propagate</name><argument_list pos:start="61:24" pos:end="61:36">(<argument pos:start="61:25" pos:end="61:28"><expr pos:start="61:25" pos:end="61:28"><name pos:start="61:25" pos:end="61:28">errp</name></expr></argument>, <argument pos:start="61:31" pos:end="61:35"><expr pos:start="61:31" pos:end="61:35"><name pos:start="61:31" pos:end="61:35">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="63:9" pos:end="63:23">goto <name pos:start="63:14" pos:end="63:22">early_err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="69:5" pos:end="73:5"><if pos:start="69:5" pos:end="73:5">if <condition pos:start="69:8" pos:end="69:11">(<expr pos:start="69:9" pos:end="69:10"><name pos:start="69:9" pos:end="69:10">id</name></expr>)</condition> <block pos:start="69:13" pos:end="73:5">{<block_content pos:start="71:9" pos:end="71:33">

        <expr_stmt pos:start="71:9" pos:end="71:33"><expr pos:start="71:9" pos:end="71:32"><call pos:start="71:9" pos:end="71:32"><name pos:start="71:9" pos:end="71:17">qdict_del</name><argument_list pos:start="71:18" pos:end="71:32">(<argument pos:start="71:19" pos:end="71:25"><expr pos:start="71:19" pos:end="71:25"><name pos:start="71:19" pos:end="71:25">bs_opts</name></expr></argument>, <argument pos:start="71:28" pos:end="71:31"><expr pos:start="71:28" pos:end="71:31"><literal type="string" pos:start="71:28" pos:end="71:31">"id"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:53"><expr pos:start="77:5" pos:end="77:52"><name pos:start="77:5" pos:end="77:28">has_driver_specific_opts</name> <operator pos:start="77:30" pos:end="77:30">=</operator> <operator pos:start="77:32" pos:end="77:32">!</operator><operator pos:start="77:33" pos:end="77:33">!</operator><call pos:start="77:34" pos:end="77:52"><name pos:start="77:34" pos:end="77:43">qdict_size</name><argument_list pos:start="77:44" pos:end="77:52">(<argument pos:start="77:45" pos:end="77:51"><expr pos:start="77:45" pos:end="77:51"><name pos:start="77:45" pos:end="77:51">bs_opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="81:5" pos:end="81:28">/* extract parameters */</comment>

    <expr_stmt pos:start="83:5" pos:end="83:54"><expr pos:start="83:5" pos:end="83:53"><name pos:start="83:5" pos:end="83:12">snapshot</name> <operator pos:start="83:14" pos:end="83:14">=</operator> <call pos:start="83:16" pos:end="83:53"><name pos:start="83:16" pos:end="83:32">qemu_opt_get_bool</name><argument_list pos:start="83:33" pos:end="83:53">(<argument pos:start="83:34" pos:end="83:37"><expr pos:start="83:34" pos:end="83:37"><name pos:start="83:34" pos:end="83:37">opts</name></expr></argument>, <argument pos:start="83:40" pos:end="83:49"><expr pos:start="83:40" pos:end="83:49"><literal type="string" pos:start="83:40" pos:end="83:49">"snapshot"</literal></expr></argument>, <argument pos:start="83:52" pos:end="83:52"><expr pos:start="83:52" pos:end="83:52"><literal type="number" pos:start="83:52" pos:end="83:52">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:49"><expr pos:start="85:5" pos:end="85:48"><name pos:start="85:5" pos:end="85:6">ro</name> <operator pos:start="85:8" pos:end="85:8">=</operator> <call pos:start="85:10" pos:end="85:48"><name pos:start="85:10" pos:end="85:26">qemu_opt_get_bool</name><argument_list pos:start="85:27" pos:end="85:48">(<argument pos:start="85:28" pos:end="85:31"><expr pos:start="85:28" pos:end="85:31"><name pos:start="85:28" pos:end="85:31">opts</name></expr></argument>, <argument pos:start="85:34" pos:end="85:44"><expr pos:start="85:34" pos:end="85:44"><literal type="string" pos:start="85:34" pos:end="85:44">"read-only"</literal></expr></argument>, <argument pos:start="85:47" pos:end="85:47"><expr pos:start="85:47" pos:end="85:47"><literal type="number" pos:start="85:47" pos:end="85:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:66"><expr pos:start="87:5" pos:end="87:65"><name pos:start="87:5" pos:end="87:16">copy_on_read</name> <operator pos:start="87:18" pos:end="87:18">=</operator> <call pos:start="87:20" pos:end="87:65"><name pos:start="87:20" pos:end="87:36">qemu_opt_get_bool</name><argument_list pos:start="87:37" pos:end="87:65">(<argument pos:start="87:38" pos:end="87:41"><expr pos:start="87:38" pos:end="87:41"><name pos:start="87:38" pos:end="87:41">opts</name></expr></argument>, <argument pos:start="87:44" pos:end="87:57"><expr pos:start="87:44" pos:end="87:57"><literal type="string" pos:start="87:44" pos:end="87:57">"copy-on-read"</literal></expr></argument>, <argument pos:start="87:60" pos:end="87:64"><expr pos:start="87:60" pos:end="87:64"><name pos:start="87:60" pos:end="87:64">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:42"><expr pos:start="91:5" pos:end="91:41"><name pos:start="91:5" pos:end="91:10">serial</name> <operator pos:start="91:12" pos:end="91:12">=</operator> <call pos:start="91:14" pos:end="91:41"><name pos:start="91:14" pos:end="91:25">qemu_opt_get</name><argument_list pos:start="91:26" pos:end="91:41">(<argument pos:start="91:27" pos:end="91:30"><expr pos:start="91:27" pos:end="91:30"><name pos:start="91:27" pos:end="91:30">opts</name></expr></argument>, <argument pos:start="91:33" pos:end="91:40"><expr pos:start="91:33" pos:end="91:40"><literal type="string" pos:start="91:33" pos:end="91:40">"serial"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="95:5" pos:end="105:5"><if pos:start="95:5" pos:end="105:5">if <condition pos:start="95:8" pos:end="95:54">(<expr pos:start="95:9" pos:end="95:53"><operator pos:start="95:9" pos:end="95:9">(</operator><name pos:start="95:10" pos:end="95:12">buf</name> <operator pos:start="95:14" pos:end="95:14">=</operator> <call pos:start="95:16" pos:end="95:44"><name pos:start="95:16" pos:end="95:27">qemu_opt_get</name><argument_list pos:start="95:28" pos:end="95:44">(<argument pos:start="95:29" pos:end="95:32"><expr pos:start="95:29" pos:end="95:32"><name pos:start="95:29" pos:end="95:32">opts</name></expr></argument>, <argument pos:start="95:35" pos:end="95:43"><expr pos:start="95:35" pos:end="95:43"><literal type="string" pos:start="95:35" pos:end="95:43">"discard"</literal></expr></argument>)</argument_list></call><operator pos:start="95:45" pos:end="95:45">)</operator> <operator pos:start="95:47" pos:end="95:48">!=</operator> <name pos:start="95:50" pos:end="95:53">NULL</name></expr>)</condition> <block pos:start="95:56" pos:end="105:5">{<block_content pos:start="97:9" pos:end="103:9">

        <if_stmt pos:start="97:9" pos:end="103:9"><if pos:start="97:9" pos:end="103:9">if <condition pos:start="97:12" pos:end="97:60">(<expr pos:start="97:13" pos:end="97:59"><call pos:start="97:13" pos:end="97:54"><name pos:start="97:13" pos:end="97:36">bdrv_parse_discard_flags</name><argument_list pos:start="97:37" pos:end="97:54">(<argument pos:start="97:38" pos:end="97:40"><expr pos:start="97:38" pos:end="97:40"><name pos:start="97:38" pos:end="97:40">buf</name></expr></argument>, <argument pos:start="97:43" pos:end="97:53"><expr pos:start="97:43" pos:end="97:53"><operator pos:start="97:43" pos:end="97:43">&amp;</operator><name pos:start="97:44" pos:end="97:53">bdrv_flags</name></expr></argument>)</argument_list></call> <operator pos:start="97:56" pos:end="97:57">!=</operator> <literal type="number" pos:start="97:59" pos:end="97:59">0</literal></expr>)</condition> <block pos:start="97:62" pos:end="103:9">{<block_content pos:start="99:13" pos:end="101:27">

            <expr_stmt pos:start="99:13" pos:end="99:55"><expr pos:start="99:13" pos:end="99:54"><call pos:start="99:13" pos:end="99:54"><name pos:start="99:13" pos:end="99:22">error_setg</name><argument_list pos:start="99:23" pos:end="99:54">(<argument pos:start="99:24" pos:end="99:27"><expr pos:start="99:24" pos:end="99:27"><name pos:start="99:24" pos:end="99:27">errp</name></expr></argument>, <argument pos:start="99:30" pos:end="99:53"><expr pos:start="99:30" pos:end="99:53"><literal type="string" pos:start="99:30" pos:end="99:53">"invalid discard option"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="101:13" pos:end="101:27">goto <name pos:start="101:18" pos:end="101:26">early_err</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="109:5" pos:end="113:5"><if pos:start="109:5" pos:end="113:5">if <condition pos:start="109:8" pos:end="109:57">(<expr pos:start="109:9" pos:end="109:56"><call pos:start="109:9" pos:end="109:56"><name pos:start="109:9" pos:end="109:25">qemu_opt_get_bool</name><argument_list pos:start="109:26" pos:end="109:56">(<argument pos:start="109:27" pos:end="109:30"><expr pos:start="109:27" pos:end="109:30"><name pos:start="109:27" pos:end="109:30">opts</name></expr></argument>, <argument pos:start="109:33" pos:end="109:49"><expr pos:start="109:33" pos:end="109:49"><literal type="string" pos:start="109:33" pos:end="109:49">"cache.writeback"</literal></expr></argument>, <argument pos:start="109:52" pos:end="109:55"><expr pos:start="109:52" pos:end="109:55"><name pos:start="109:52" pos:end="109:55">true</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="109:59" pos:end="113:5">{<block_content pos:start="111:9" pos:end="111:38">

        <expr_stmt pos:start="111:9" pos:end="111:38"><expr pos:start="111:9" pos:end="111:37"><name pos:start="111:9" pos:end="111:18">bdrv_flags</name> <operator pos:start="111:20" pos:end="111:21">|=</operator> <name pos:start="111:23" pos:end="111:37">BDRV_O_CACHE_WB</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="115:5" pos:end="119:5"><if pos:start="115:5" pos:end="119:5">if <condition pos:start="115:8" pos:end="115:55">(<expr pos:start="115:9" pos:end="115:54"><call pos:start="115:9" pos:end="115:54"><name pos:start="115:9" pos:end="115:25">qemu_opt_get_bool</name><argument_list pos:start="115:26" pos:end="115:54">(<argument pos:start="115:27" pos:end="115:30"><expr pos:start="115:27" pos:end="115:30"><name pos:start="115:27" pos:end="115:30">opts</name></expr></argument>, <argument pos:start="115:33" pos:end="115:46"><expr pos:start="115:33" pos:end="115:46"><literal type="string" pos:start="115:33" pos:end="115:46">"cache.direct"</literal></expr></argument>, <argument pos:start="115:49" pos:end="115:53"><expr pos:start="115:49" pos:end="115:53"><name pos:start="115:49" pos:end="115:53">false</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="115:57" pos:end="119:5">{<block_content pos:start="117:9" pos:end="117:37">

        <expr_stmt pos:start="117:9" pos:end="117:37"><expr pos:start="117:9" pos:end="117:36"><name pos:start="117:9" pos:end="117:18">bdrv_flags</name> <operator pos:start="117:20" pos:end="117:21">|=</operator> <name pos:start="117:23" pos:end="117:36">BDRV_O_NOCACHE</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="121:5" pos:end="130:0"><if pos:start="121:5" pos:end="130:0">if <condition pos:start="121:8" pos:end="121:57">(<expr pos:start="121:9" pos:end="121:56"><call pos:start="121:9" pos:end="121:56"><name pos:start="121:9" pos:end="121:25">qemu_opt_get_bool</name><argument_list pos:start="121:26" pos:end="121:56">(<argument pos:start="121:27" pos:end="121:30"><expr pos:start="121:27" pos:end="121:30"><name pos:start="121:27" pos:end="121:30">opts</name></expr></argument>, <argument pos:start="121:33" pos:end="121:48"><expr pos:start="121:33" pos:end="121:48"><literal type="string" pos:start="121:33" pos:end="121:48">"cache.no-flush"</literal></expr></argument>, <argument pos:start="121:51" pos:end="121:55"><expr pos:start="121:51" pos:end="121:55"><name pos:start="121:51" pos:end="121:55">false</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="121:59" pos:end="130:0">{<block_content pos:start="123:9" pos:end="123:38">

        <expr_stmt pos:start="123:9" pos:end="123:38"><expr pos:start="123:9" pos:end="123:37"><name pos:start="123:9" pos:end="123:18">bdrv_flags</name> <operator pos:start="123:20" pos:end="123:21">|=</operator> <name pos:start="123:23" pos:end="123:37">BDRV_O_NO_FLUSH</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



<cpp:ifdef pos:start="129:1" pos:end="129:23">#<cpp:directive pos:start="129:2" pos:end="129:6">ifdef</cpp:directive> <name pos:start="129:8" pos:end="129:23">CONFIG_LINUX_AIO</name></cpp:ifdef>

    <if_stmt pos:start="131:5" pos:end="152:0"><if pos:start="131:5" pos:end="152:0">if <condition pos:start="131:8" pos:end="131:50">(<expr pos:start="131:9" pos:end="131:49"><operator pos:start="131:9" pos:end="131:9">(</operator><name pos:start="131:10" pos:end="131:12">buf</name> <operator pos:start="131:14" pos:end="131:14">=</operator> <call pos:start="131:16" pos:end="131:40"><name pos:start="131:16" pos:end="131:27">qemu_opt_get</name><argument_list pos:start="131:28" pos:end="131:40">(<argument pos:start="131:29" pos:end="131:32"><expr pos:start="131:29" pos:end="131:32"><name pos:start="131:29" pos:end="131:32">opts</name></expr></argument>, <argument pos:start="131:35" pos:end="131:39"><expr pos:start="131:35" pos:end="131:39"><literal type="string" pos:start="131:35" pos:end="131:39">"aio"</literal></expr></argument>)</argument_list></call><operator pos:start="131:41" pos:end="131:41">)</operator> <operator pos:start="131:43" pos:end="131:44">!=</operator> <name pos:start="131:46" pos:end="131:49">NULL</name></expr>)</condition> <block pos:start="131:52" pos:end="152:0">{<block_content pos:start="133:9" pos:end="147:9">

        <if_stmt pos:start="133:9" pos:end="147:9"><if pos:start="133:9" pos:end="137:9">if <condition pos:start="133:12" pos:end="133:35">(<expr pos:start="133:13" pos:end="133:34"><operator pos:start="133:13" pos:end="133:13">!</operator><call pos:start="133:14" pos:end="133:34"><name pos:start="133:14" pos:end="133:19">strcmp</name><argument_list pos:start="133:20" pos:end="133:34">(<argument pos:start="133:21" pos:end="133:23"><expr pos:start="133:21" pos:end="133:23"><name pos:start="133:21" pos:end="133:23">buf</name></expr></argument>, <argument pos:start="133:26" pos:end="133:33"><expr pos:start="133:26" pos:end="133:33"><literal type="string" pos:start="133:26" pos:end="133:33">"native"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="133:37" pos:end="137:9">{<block_content pos:start="135:13" pos:end="135:44">

            <expr_stmt pos:start="135:13" pos:end="135:44"><expr pos:start="135:13" pos:end="135:43"><name pos:start="135:13" pos:end="135:22">bdrv_flags</name> <operator pos:start="135:24" pos:end="135:25">|=</operator> <name pos:start="135:27" pos:end="135:43">BDRV_O_NATIVE_AIO</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="137:11" pos:end="141:9">else if <condition pos:start="137:19" pos:end="137:43">(<expr pos:start="137:20" pos:end="137:42"><operator pos:start="137:20" pos:end="137:20">!</operator><call pos:start="137:21" pos:end="137:42"><name pos:start="137:21" pos:end="137:26">strcmp</name><argument_list pos:start="137:27" pos:end="137:42">(<argument pos:start="137:28" pos:end="137:30"><expr pos:start="137:28" pos:end="137:30"><name pos:start="137:28" pos:end="137:30">buf</name></expr></argument>, <argument pos:start="137:33" pos:end="137:41"><expr pos:start="137:33" pos:end="137:41"><literal type="string" pos:start="137:33" pos:end="137:41">"threads"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="137:45" pos:end="141:9">{<block_content>

            <comment type="block" pos:start="139:13" pos:end="139:37">/* this is the default */</comment>

        </block_content>}</block></if> <else pos:start="141:11" pos:end="147:9">else <block pos:start="141:16" pos:end="147:9">{<block_content pos:start="143:12" pos:end="145:26">

           <expr_stmt pos:start="143:12" pos:end="143:50"><expr pos:start="143:12" pos:end="143:49"><call pos:start="143:12" pos:end="143:49"><name pos:start="143:12" pos:end="143:21">error_setg</name><argument_list pos:start="143:22" pos:end="143:49">(<argument pos:start="143:23" pos:end="143:26"><expr pos:start="143:23" pos:end="143:26"><name pos:start="143:23" pos:end="143:26">errp</name></expr></argument>, <argument pos:start="143:29" pos:end="143:48"><expr pos:start="143:29" pos:end="143:48"><literal type="string" pos:start="143:29" pos:end="143:48">"invalid aio option"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

           <goto pos:start="145:12" pos:end="145:26">goto <name pos:start="145:17" pos:end="145:25">early_err</name>;</goto>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="151:1" pos:end="151:6">#<cpp:directive pos:start="151:2" pos:end="151:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="155:5" pos:end="181:5"><if pos:start="155:5" pos:end="181:5">if <condition pos:start="155:8" pos:end="155:53">(<expr pos:start="155:9" pos:end="155:52"><operator pos:start="155:9" pos:end="155:9">(</operator><name pos:start="155:10" pos:end="155:12">buf</name> <operator pos:start="155:14" pos:end="155:14">=</operator> <call pos:start="155:16" pos:end="155:43"><name pos:start="155:16" pos:end="155:27">qemu_opt_get</name><argument_list pos:start="155:28" pos:end="155:43">(<argument pos:start="155:29" pos:end="155:32"><expr pos:start="155:29" pos:end="155:32"><name pos:start="155:29" pos:end="155:32">opts</name></expr></argument>, <argument pos:start="155:35" pos:end="155:42"><expr pos:start="155:35" pos:end="155:42"><literal type="string" pos:start="155:35" pos:end="155:42">"format"</literal></expr></argument>)</argument_list></call><operator pos:start="155:44" pos:end="155:44">)</operator> <operator pos:start="155:46" pos:end="155:47">!=</operator> <name pos:start="155:49" pos:end="155:52">NULL</name></expr>)</condition> <block pos:start="155:55" pos:end="181:5">{<block_content pos:start="157:9" pos:end="179:9">

        <if_stmt pos:start="157:9" pos:end="167:9"><if pos:start="157:9" pos:end="167:9">if <condition pos:start="157:12" pos:end="157:32">(<expr pos:start="157:13" pos:end="157:31"><call pos:start="157:13" pos:end="157:31"><name pos:start="157:13" pos:end="157:26">is_help_option</name><argument_list pos:start="157:27" pos:end="157:31">(<argument pos:start="157:28" pos:end="157:30"><expr pos:start="157:28" pos:end="157:30"><name pos:start="157:28" pos:end="157:30">buf</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="157:34" pos:end="167:9">{<block_content pos:start="159:13" pos:end="165:27">

            <expr_stmt pos:start="159:13" pos:end="159:47"><expr pos:start="159:13" pos:end="159:46"><call pos:start="159:13" pos:end="159:46"><name pos:start="159:13" pos:end="159:24">error_printf</name><argument_list pos:start="159:25" pos:end="159:46">(<argument pos:start="159:26" pos:end="159:45"><expr pos:start="159:26" pos:end="159:45"><literal type="string" pos:start="159:26" pos:end="159:45">"Supported formats:"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:57"><expr pos:start="161:13" pos:end="161:56"><call pos:start="161:13" pos:end="161:56"><name pos:start="161:13" pos:end="161:31">bdrv_iterate_format</name><argument_list pos:start="161:32" pos:end="161:56">(<argument pos:start="161:33" pos:end="161:49"><expr pos:start="161:33" pos:end="161:49"><name pos:start="161:33" pos:end="161:49">bdrv_format_print</name></expr></argument>, <argument pos:start="161:52" pos:end="161:55"><expr pos:start="161:52" pos:end="161:55"><name pos:start="161:52" pos:end="161:55">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:31"><expr pos:start="163:13" pos:end="163:30"><call pos:start="163:13" pos:end="163:30"><name pos:start="163:13" pos:end="163:24">error_printf</name><argument_list pos:start="163:25" pos:end="163:30">(<argument pos:start="163:26" pos:end="163:29"><expr pos:start="163:26" pos:end="163:29"><literal type="string" pos:start="163:26" pos:end="163:29">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="165:13" pos:end="165:27">goto <name pos:start="165:18" pos:end="165:26">early_err</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="171:9" pos:end="171:36"><expr pos:start="171:9" pos:end="171:35"><name pos:start="171:9" pos:end="171:11">drv</name> <operator pos:start="171:13" pos:end="171:13">=</operator> <call pos:start="171:15" pos:end="171:35"><name pos:start="171:15" pos:end="171:30">bdrv_find_format</name><argument_list pos:start="171:31" pos:end="171:35">(<argument pos:start="171:32" pos:end="171:34"><expr pos:start="171:32" pos:end="171:34"><name pos:start="171:32" pos:end="171:34">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="173:9" pos:end="179:9"><if pos:start="173:9" pos:end="179:9">if <condition pos:start="173:12" pos:end="173:17">(<expr pos:start="173:13" pos:end="173:16"><operator pos:start="173:13" pos:end="173:13">!</operator><name pos:start="173:14" pos:end="173:16">drv</name></expr>)</condition> <block pos:start="173:19" pos:end="179:9">{<block_content pos:start="175:13" pos:end="177:27">

            <expr_stmt pos:start="175:13" pos:end="175:57"><expr pos:start="175:13" pos:end="175:56"><call pos:start="175:13" pos:end="175:56"><name pos:start="175:13" pos:end="175:22">error_setg</name><argument_list pos:start="175:23" pos:end="175:56">(<argument pos:start="175:24" pos:end="175:27"><expr pos:start="175:24" pos:end="175:27"><name pos:start="175:24" pos:end="175:27">errp</name></expr></argument>, <argument pos:start="175:30" pos:end="175:50"><expr pos:start="175:30" pos:end="175:50"><literal type="string" pos:start="175:30" pos:end="175:50">"'%s' invalid format"</literal></expr></argument>, <argument pos:start="175:53" pos:end="175:55"><expr pos:start="175:53" pos:end="175:55"><name pos:start="175:53" pos:end="175:55">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="177:13" pos:end="177:27">goto <name pos:start="177:18" pos:end="177:26">early_err</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="185:5" pos:end="185:29">/* disk I/O throttling */</comment>

    <expr_stmt pos:start="187:5" pos:end="187:33"><expr pos:start="187:5" pos:end="187:32"><call pos:start="187:5" pos:end="187:32"><name pos:start="187:5" pos:end="187:10">memset</name><argument_list pos:start="187:11" pos:end="187:32">(<argument pos:start="187:12" pos:end="187:15"><expr pos:start="187:12" pos:end="187:15"><operator pos:start="187:12" pos:end="187:12">&amp;</operator><name pos:start="187:13" pos:end="187:15">cfg</name></expr></argument>, <argument pos:start="187:18" pos:end="187:18"><expr pos:start="187:18" pos:end="187:18"><literal type="number" pos:start="187:18" pos:end="187:18">0</literal></expr></argument>, <argument pos:start="187:21" pos:end="187:31"><expr pos:start="187:21" pos:end="187:31"><sizeof pos:start="187:21" pos:end="187:31">sizeof<argument_list pos:start="187:27" pos:end="187:31">(<argument pos:start="187:28" pos:end="187:30"><expr pos:start="187:28" pos:end="187:30"><name pos:start="187:28" pos:end="187:30">cfg</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="189:5" pos:end="191:61"><expr pos:start="189:5" pos:end="191:60"><name pos:start="189:5" pos:end="189:35"><name pos:start="189:5" pos:end="189:7">cfg</name><operator pos:start="189:8" pos:end="189:8">.</operator><name pos:start="189:9" pos:end="189:15">buckets</name><index pos:start="189:16" pos:end="189:35">[<expr pos:start="189:17" pos:end="189:34"><name pos:start="189:17" pos:end="189:34">THROTTLE_BPS_TOTAL</name></expr>]</index></name><operator pos:start="189:36" pos:end="189:36">.</operator><name pos:start="189:37" pos:end="189:39">avg</name> <operator pos:start="189:41" pos:end="189:41">=</operator>

        <call pos:start="191:9" pos:end="191:60"><name pos:start="191:9" pos:end="191:27">qemu_opt_get_number</name><argument_list pos:start="191:28" pos:end="191:60">(<argument pos:start="191:29" pos:end="191:32"><expr pos:start="191:29" pos:end="191:32"><name pos:start="191:29" pos:end="191:32">opts</name></expr></argument>, <argument pos:start="191:35" pos:end="191:56"><expr pos:start="191:35" pos:end="191:56"><literal type="string" pos:start="191:35" pos:end="191:56">"throttling.bps-total"</literal></expr></argument>, <argument pos:start="191:59" pos:end="191:59"><expr pos:start="191:59" pos:end="191:59"><literal type="number" pos:start="191:59" pos:end="191:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="195:60"><expr pos:start="193:5" pos:end="195:59"><name pos:start="193:5" pos:end="193:34"><name pos:start="193:5" pos:end="193:7">cfg</name><operator pos:start="193:8" pos:end="193:8">.</operator><name pos:start="193:9" pos:end="193:15">buckets</name><index pos:start="193:16" pos:end="193:34">[<expr pos:start="193:17" pos:end="193:33"><name pos:start="193:17" pos:end="193:33">THROTTLE_BPS_READ</name></expr>]</index></name><operator pos:start="193:35" pos:end="193:35">.</operator><name pos:start="193:36" pos:end="193:38">avg</name>  <operator pos:start="193:41" pos:end="193:41">=</operator>

        <call pos:start="195:9" pos:end="195:59"><name pos:start="195:9" pos:end="195:27">qemu_opt_get_number</name><argument_list pos:start="195:28" pos:end="195:59">(<argument pos:start="195:29" pos:end="195:32"><expr pos:start="195:29" pos:end="195:32"><name pos:start="195:29" pos:end="195:32">opts</name></expr></argument>, <argument pos:start="195:35" pos:end="195:55"><expr pos:start="195:35" pos:end="195:55"><literal type="string" pos:start="195:35" pos:end="195:55">"throttling.bps-read"</literal></expr></argument>, <argument pos:start="195:58" pos:end="195:58"><expr pos:start="195:58" pos:end="195:58"><literal type="number" pos:start="195:58" pos:end="195:58">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="197:5" pos:end="199:61"><expr pos:start="197:5" pos:end="199:60"><name pos:start="197:5" pos:end="197:35"><name pos:start="197:5" pos:end="197:7">cfg</name><operator pos:start="197:8" pos:end="197:8">.</operator><name pos:start="197:9" pos:end="197:15">buckets</name><index pos:start="197:16" pos:end="197:35">[<expr pos:start="197:17" pos:end="197:34"><name pos:start="197:17" pos:end="197:34">THROTTLE_BPS_WRITE</name></expr>]</index></name><operator pos:start="197:36" pos:end="197:36">.</operator><name pos:start="197:37" pos:end="197:39">avg</name> <operator pos:start="197:41" pos:end="197:41">=</operator>

        <call pos:start="199:9" pos:end="199:60"><name pos:start="199:9" pos:end="199:27">qemu_opt_get_number</name><argument_list pos:start="199:28" pos:end="199:60">(<argument pos:start="199:29" pos:end="199:32"><expr pos:start="199:29" pos:end="199:32"><name pos:start="199:29" pos:end="199:32">opts</name></expr></argument>, <argument pos:start="199:35" pos:end="199:56"><expr pos:start="199:35" pos:end="199:56"><literal type="string" pos:start="199:35" pos:end="199:56">"throttling.bps-write"</literal></expr></argument>, <argument pos:start="199:59" pos:end="199:59"><expr pos:start="199:59" pos:end="199:59"><literal type="number" pos:start="199:59" pos:end="199:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="201:5" pos:end="203:62"><expr pos:start="201:5" pos:end="203:61"><name pos:start="201:5" pos:end="201:35"><name pos:start="201:5" pos:end="201:7">cfg</name><operator pos:start="201:8" pos:end="201:8">.</operator><name pos:start="201:9" pos:end="201:15">buckets</name><index pos:start="201:16" pos:end="201:35">[<expr pos:start="201:17" pos:end="201:34"><name pos:start="201:17" pos:end="201:34">THROTTLE_OPS_TOTAL</name></expr>]</index></name><operator pos:start="201:36" pos:end="201:36">.</operator><name pos:start="201:37" pos:end="201:39">avg</name> <operator pos:start="201:41" pos:end="201:41">=</operator>

        <call pos:start="203:9" pos:end="203:61"><name pos:start="203:9" pos:end="203:27">qemu_opt_get_number</name><argument_list pos:start="203:28" pos:end="203:61">(<argument pos:start="203:29" pos:end="203:32"><expr pos:start="203:29" pos:end="203:32"><name pos:start="203:29" pos:end="203:32">opts</name></expr></argument>, <argument pos:start="203:35" pos:end="203:57"><expr pos:start="203:35" pos:end="203:57"><literal type="string" pos:start="203:35" pos:end="203:57">"throttling.iops-total"</literal></expr></argument>, <argument pos:start="203:60" pos:end="203:60"><expr pos:start="203:60" pos:end="203:60"><literal type="number" pos:start="203:60" pos:end="203:60">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="205:5" pos:end="207:61"><expr pos:start="205:5" pos:end="207:60"><name pos:start="205:5" pos:end="205:34"><name pos:start="205:5" pos:end="205:7">cfg</name><operator pos:start="205:8" pos:end="205:8">.</operator><name pos:start="205:9" pos:end="205:15">buckets</name><index pos:start="205:16" pos:end="205:34">[<expr pos:start="205:17" pos:end="205:33"><name pos:start="205:17" pos:end="205:33">THROTTLE_OPS_READ</name></expr>]</index></name><operator pos:start="205:35" pos:end="205:35">.</operator><name pos:start="205:36" pos:end="205:38">avg</name> <operator pos:start="205:40" pos:end="205:40">=</operator>

        <call pos:start="207:9" pos:end="207:60"><name pos:start="207:9" pos:end="207:27">qemu_opt_get_number</name><argument_list pos:start="207:28" pos:end="207:60">(<argument pos:start="207:29" pos:end="207:32"><expr pos:start="207:29" pos:end="207:32"><name pos:start="207:29" pos:end="207:32">opts</name></expr></argument>, <argument pos:start="207:35" pos:end="207:56"><expr pos:start="207:35" pos:end="207:56"><literal type="string" pos:start="207:35" pos:end="207:56">"throttling.iops-read"</literal></expr></argument>, <argument pos:start="207:59" pos:end="207:59"><expr pos:start="207:59" pos:end="207:59"><literal type="number" pos:start="207:59" pos:end="207:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="209:5" pos:end="211:62"><expr pos:start="209:5" pos:end="211:61"><name pos:start="209:5" pos:end="209:35"><name pos:start="209:5" pos:end="209:7">cfg</name><operator pos:start="209:8" pos:end="209:8">.</operator><name pos:start="209:9" pos:end="209:15">buckets</name><index pos:start="209:16" pos:end="209:35">[<expr pos:start="209:17" pos:end="209:34"><name pos:start="209:17" pos:end="209:34">THROTTLE_OPS_WRITE</name></expr>]</index></name><operator pos:start="209:36" pos:end="209:36">.</operator><name pos:start="209:37" pos:end="209:39">avg</name> <operator pos:start="209:41" pos:end="209:41">=</operator>

        <call pos:start="211:9" pos:end="211:61"><name pos:start="211:9" pos:end="211:27">qemu_opt_get_number</name><argument_list pos:start="211:28" pos:end="211:61">(<argument pos:start="211:29" pos:end="211:32"><expr pos:start="211:29" pos:end="211:32"><name pos:start="211:29" pos:end="211:32">opts</name></expr></argument>, <argument pos:start="211:35" pos:end="211:57"><expr pos:start="211:35" pos:end="211:57"><literal type="string" pos:start="211:35" pos:end="211:57">"throttling.iops-write"</literal></expr></argument>, <argument pos:start="211:60" pos:end="211:60"><expr pos:start="211:60" pos:end="211:60"><literal type="number" pos:start="211:60" pos:end="211:60">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="215:5" pos:end="217:65"><expr pos:start="215:5" pos:end="217:64"><name pos:start="215:5" pos:end="215:35"><name pos:start="215:5" pos:end="215:7">cfg</name><operator pos:start="215:8" pos:end="215:8">.</operator><name pos:start="215:9" pos:end="215:15">buckets</name><index pos:start="215:16" pos:end="215:35">[<expr pos:start="215:17" pos:end="215:34"><name pos:start="215:17" pos:end="215:34">THROTTLE_BPS_TOTAL</name></expr>]</index></name><operator pos:start="215:36" pos:end="215:36">.</operator><name pos:start="215:37" pos:end="215:39">max</name> <operator pos:start="215:41" pos:end="215:41">=</operator>

        <call pos:start="217:9" pos:end="217:64"><name pos:start="217:9" pos:end="217:27">qemu_opt_get_number</name><argument_list pos:start="217:28" pos:end="217:64">(<argument pos:start="217:29" pos:end="217:32"><expr pos:start="217:29" pos:end="217:32"><name pos:start="217:29" pos:end="217:32">opts</name></expr></argument>, <argument pos:start="217:35" pos:end="217:60"><expr pos:start="217:35" pos:end="217:60"><literal type="string" pos:start="217:35" pos:end="217:60">"throttling.bps-total-max"</literal></expr></argument>, <argument pos:start="217:63" pos:end="217:63"><expr pos:start="217:63" pos:end="217:63"><literal type="number" pos:start="217:63" pos:end="217:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="219:5" pos:end="221:64"><expr pos:start="219:5" pos:end="221:63"><name pos:start="219:5" pos:end="219:34"><name pos:start="219:5" pos:end="219:7">cfg</name><operator pos:start="219:8" pos:end="219:8">.</operator><name pos:start="219:9" pos:end="219:15">buckets</name><index pos:start="219:16" pos:end="219:34">[<expr pos:start="219:17" pos:end="219:33"><name pos:start="219:17" pos:end="219:33">THROTTLE_BPS_READ</name></expr>]</index></name><operator pos:start="219:35" pos:end="219:35">.</operator><name pos:start="219:36" pos:end="219:38">max</name>  <operator pos:start="219:41" pos:end="219:41">=</operator>

        <call pos:start="221:9" pos:end="221:63"><name pos:start="221:9" pos:end="221:27">qemu_opt_get_number</name><argument_list pos:start="221:28" pos:end="221:63">(<argument pos:start="221:29" pos:end="221:32"><expr pos:start="221:29" pos:end="221:32"><name pos:start="221:29" pos:end="221:32">opts</name></expr></argument>, <argument pos:start="221:35" pos:end="221:59"><expr pos:start="221:35" pos:end="221:59"><literal type="string" pos:start="221:35" pos:end="221:59">"throttling.bps-read-max"</literal></expr></argument>, <argument pos:start="221:62" pos:end="221:62"><expr pos:start="221:62" pos:end="221:62"><literal type="number" pos:start="221:62" pos:end="221:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="223:5" pos:end="225:65"><expr pos:start="223:5" pos:end="225:64"><name pos:start="223:5" pos:end="223:35"><name pos:start="223:5" pos:end="223:7">cfg</name><operator pos:start="223:8" pos:end="223:8">.</operator><name pos:start="223:9" pos:end="223:15">buckets</name><index pos:start="223:16" pos:end="223:35">[<expr pos:start="223:17" pos:end="223:34"><name pos:start="223:17" pos:end="223:34">THROTTLE_BPS_WRITE</name></expr>]</index></name><operator pos:start="223:36" pos:end="223:36">.</operator><name pos:start="223:37" pos:end="223:39">max</name> <operator pos:start="223:41" pos:end="223:41">=</operator>

        <call pos:start="225:9" pos:end="225:64"><name pos:start="225:9" pos:end="225:27">qemu_opt_get_number</name><argument_list pos:start="225:28" pos:end="225:64">(<argument pos:start="225:29" pos:end="225:32"><expr pos:start="225:29" pos:end="225:32"><name pos:start="225:29" pos:end="225:32">opts</name></expr></argument>, <argument pos:start="225:35" pos:end="225:60"><expr pos:start="225:35" pos:end="225:60"><literal type="string" pos:start="225:35" pos:end="225:60">"throttling.bps-write-max"</literal></expr></argument>, <argument pos:start="225:63" pos:end="225:63"><expr pos:start="225:63" pos:end="225:63"><literal type="number" pos:start="225:63" pos:end="225:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="227:5" pos:end="229:66"><expr pos:start="227:5" pos:end="229:65"><name pos:start="227:5" pos:end="227:35"><name pos:start="227:5" pos:end="227:7">cfg</name><operator pos:start="227:8" pos:end="227:8">.</operator><name pos:start="227:9" pos:end="227:15">buckets</name><index pos:start="227:16" pos:end="227:35">[<expr pos:start="227:17" pos:end="227:34"><name pos:start="227:17" pos:end="227:34">THROTTLE_OPS_TOTAL</name></expr>]</index></name><operator pos:start="227:36" pos:end="227:36">.</operator><name pos:start="227:37" pos:end="227:39">max</name> <operator pos:start="227:41" pos:end="227:41">=</operator>

        <call pos:start="229:9" pos:end="229:65"><name pos:start="229:9" pos:end="229:27">qemu_opt_get_number</name><argument_list pos:start="229:28" pos:end="229:65">(<argument pos:start="229:29" pos:end="229:32"><expr pos:start="229:29" pos:end="229:32"><name pos:start="229:29" pos:end="229:32">opts</name></expr></argument>, <argument pos:start="229:35" pos:end="229:61"><expr pos:start="229:35" pos:end="229:61"><literal type="string" pos:start="229:35" pos:end="229:61">"throttling.iops-total-max"</literal></expr></argument>, <argument pos:start="229:64" pos:end="229:64"><expr pos:start="229:64" pos:end="229:64"><literal type="number" pos:start="229:64" pos:end="229:64">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="231:5" pos:end="233:65"><expr pos:start="231:5" pos:end="233:64"><name pos:start="231:5" pos:end="231:34"><name pos:start="231:5" pos:end="231:7">cfg</name><operator pos:start="231:8" pos:end="231:8">.</operator><name pos:start="231:9" pos:end="231:15">buckets</name><index pos:start="231:16" pos:end="231:34">[<expr pos:start="231:17" pos:end="231:33"><name pos:start="231:17" pos:end="231:33">THROTTLE_OPS_READ</name></expr>]</index></name><operator pos:start="231:35" pos:end="231:35">.</operator><name pos:start="231:36" pos:end="231:38">max</name> <operator pos:start="231:40" pos:end="231:40">=</operator>

        <call pos:start="233:9" pos:end="233:64"><name pos:start="233:9" pos:end="233:27">qemu_opt_get_number</name><argument_list pos:start="233:28" pos:end="233:64">(<argument pos:start="233:29" pos:end="233:32"><expr pos:start="233:29" pos:end="233:32"><name pos:start="233:29" pos:end="233:32">opts</name></expr></argument>, <argument pos:start="233:35" pos:end="233:60"><expr pos:start="233:35" pos:end="233:60"><literal type="string" pos:start="233:35" pos:end="233:60">"throttling.iops-read-max"</literal></expr></argument>, <argument pos:start="233:63" pos:end="233:63"><expr pos:start="233:63" pos:end="233:63"><literal type="number" pos:start="233:63" pos:end="233:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="235:5" pos:end="237:66"><expr pos:start="235:5" pos:end="237:65"><name pos:start="235:5" pos:end="235:35"><name pos:start="235:5" pos:end="235:7">cfg</name><operator pos:start="235:8" pos:end="235:8">.</operator><name pos:start="235:9" pos:end="235:15">buckets</name><index pos:start="235:16" pos:end="235:35">[<expr pos:start="235:17" pos:end="235:34"><name pos:start="235:17" pos:end="235:34">THROTTLE_OPS_WRITE</name></expr>]</index></name><operator pos:start="235:36" pos:end="235:36">.</operator><name pos:start="235:37" pos:end="235:39">max</name> <operator pos:start="235:41" pos:end="235:41">=</operator>

        <call pos:start="237:9" pos:end="237:65"><name pos:start="237:9" pos:end="237:27">qemu_opt_get_number</name><argument_list pos:start="237:28" pos:end="237:65">(<argument pos:start="237:29" pos:end="237:32"><expr pos:start="237:29" pos:end="237:32"><name pos:start="237:29" pos:end="237:32">opts</name></expr></argument>, <argument pos:start="237:35" pos:end="237:61"><expr pos:start="237:35" pos:end="237:61"><literal type="string" pos:start="237:35" pos:end="237:61">"throttling.iops-write-max"</literal></expr></argument>, <argument pos:start="237:64" pos:end="237:64"><expr pos:start="237:64" pos:end="237:64"><literal type="number" pos:start="237:64" pos:end="237:64">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="241:5" pos:end="241:71"><expr pos:start="241:5" pos:end="241:70"><name pos:start="241:5" pos:end="241:15"><name pos:start="241:5" pos:end="241:7">cfg</name><operator pos:start="241:8" pos:end="241:8">.</operator><name pos:start="241:9" pos:end="241:15">op_size</name></name> <operator pos:start="241:17" pos:end="241:17">=</operator> <call pos:start="241:19" pos:end="241:70"><name pos:start="241:19" pos:end="241:37">qemu_opt_get_number</name><argument_list pos:start="241:38" pos:end="241:70">(<argument pos:start="241:39" pos:end="241:42"><expr pos:start="241:39" pos:end="241:42"><name pos:start="241:39" pos:end="241:42">opts</name></expr></argument>, <argument pos:start="241:45" pos:end="241:66"><expr pos:start="241:45" pos:end="241:66"><literal type="string" pos:start="241:45" pos:end="241:66">"throttling.iops-size"</literal></expr></argument>, <argument pos:start="241:69" pos:end="241:69"><expr pos:start="241:69" pos:end="241:69"><literal type="number" pos:start="241:69" pos:end="241:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="245:5" pos:end="251:5"><if pos:start="245:5" pos:end="251:5">if <condition pos:start="245:8" pos:end="245:45">(<expr pos:start="245:9" pos:end="245:44"><operator pos:start="245:9" pos:end="245:9">!</operator><call pos:start="245:10" pos:end="245:44"><name pos:start="245:10" pos:end="245:30">check_throttle_config</name><argument_list pos:start="245:31" pos:end="245:44">(<argument pos:start="245:32" pos:end="245:35"><expr pos:start="245:32" pos:end="245:35"><operator pos:start="245:32" pos:end="245:32">&amp;</operator><name pos:start="245:33" pos:end="245:35">cfg</name></expr></argument>, <argument pos:start="245:38" pos:end="245:43"><expr pos:start="245:38" pos:end="245:43"><operator pos:start="245:38" pos:end="245:38">&amp;</operator><name pos:start="245:39" pos:end="245:43">error</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="245:47" pos:end="251:5">{<block_content pos:start="247:9" pos:end="249:23">

        <expr_stmt pos:start="247:9" pos:end="247:37"><expr pos:start="247:9" pos:end="247:36"><call pos:start="247:9" pos:end="247:36"><name pos:start="247:9" pos:end="247:23">error_propagate</name><argument_list pos:start="247:24" pos:end="247:36">(<argument pos:start="247:25" pos:end="247:28"><expr pos:start="247:25" pos:end="247:28"><name pos:start="247:25" pos:end="247:28">errp</name></expr></argument>, <argument pos:start="247:31" pos:end="247:35"><expr pos:start="247:31" pos:end="247:35"><name pos:start="247:31" pos:end="247:35">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="249:9" pos:end="249:23">goto <name pos:start="249:14" pos:end="249:22">early_err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="255:5" pos:end="255:46"><expr pos:start="255:5" pos:end="255:45"><name pos:start="255:5" pos:end="255:18">on_write_error</name> <operator pos:start="255:20" pos:end="255:20">=</operator> <name pos:start="255:22" pos:end="255:45">BLOCKDEV_ON_ERROR_ENOSPC</name></expr>;</expr_stmt>

    <if_stmt pos:start="257:5" pos:end="269:5"><if pos:start="257:5" pos:end="269:5">if <condition pos:start="257:8" pos:end="257:53">(<expr pos:start="257:9" pos:end="257:52"><operator pos:start="257:9" pos:end="257:9">(</operator><name pos:start="257:10" pos:end="257:12">buf</name> <operator pos:start="257:14" pos:end="257:14">=</operator> <call pos:start="257:16" pos:end="257:43"><name pos:start="257:16" pos:end="257:27">qemu_opt_get</name><argument_list pos:start="257:28" pos:end="257:43">(<argument pos:start="257:29" pos:end="257:32"><expr pos:start="257:29" pos:end="257:32"><name pos:start="257:29" pos:end="257:32">opts</name></expr></argument>, <argument pos:start="257:35" pos:end="257:42"><expr pos:start="257:35" pos:end="257:42"><literal type="string" pos:start="257:35" pos:end="257:42">"werror"</literal></expr></argument>)</argument_list></call><operator pos:start="257:44" pos:end="257:44">)</operator> <operator pos:start="257:46" pos:end="257:47">!=</operator> <name pos:start="257:49" pos:end="257:52">NULL</name></expr>)</condition> <block pos:start="257:55" pos:end="269:5">{<block_content pos:start="259:9" pos:end="267:9">

        <expr_stmt pos:start="259:9" pos:end="259:66"><expr pos:start="259:9" pos:end="259:65"><name pos:start="259:9" pos:end="259:22">on_write_error</name> <operator pos:start="259:24" pos:end="259:24">=</operator> <call pos:start="259:26" pos:end="259:65"><name pos:start="259:26" pos:end="259:49">parse_block_error_action</name><argument_list pos:start="259:50" pos:end="259:65">(<argument pos:start="259:51" pos:end="259:53"><expr pos:start="259:51" pos:end="259:53"><name pos:start="259:51" pos:end="259:53">buf</name></expr></argument>, <argument pos:start="259:56" pos:end="259:56"><expr pos:start="259:56" pos:end="259:56"><literal type="number" pos:start="259:56" pos:end="259:56">0</literal></expr></argument>, <argument pos:start="259:59" pos:end="259:64"><expr pos:start="259:59" pos:end="259:64"><operator pos:start="259:59" pos:end="259:59">&amp;</operator><name pos:start="259:60" pos:end="259:64">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="261:9" pos:end="267:9"><if pos:start="261:9" pos:end="267:9">if <condition pos:start="261:12" pos:end="261:18">(<expr pos:start="261:13" pos:end="261:17"><name pos:start="261:13" pos:end="261:17">error</name></expr>)</condition> <block pos:start="261:20" pos:end="267:9">{<block_content pos:start="263:13" pos:end="265:27">

            <expr_stmt pos:start="263:13" pos:end="263:41"><expr pos:start="263:13" pos:end="263:40"><call pos:start="263:13" pos:end="263:40"><name pos:start="263:13" pos:end="263:27">error_propagate</name><argument_list pos:start="263:28" pos:end="263:40">(<argument pos:start="263:29" pos:end="263:32"><expr pos:start="263:29" pos:end="263:32"><name pos:start="263:29" pos:end="263:32">errp</name></expr></argument>, <argument pos:start="263:35" pos:end="263:39"><expr pos:start="263:35" pos:end="263:39"><name pos:start="263:35" pos:end="263:39">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="265:13" pos:end="265:27">goto <name pos:start="265:18" pos:end="265:26">early_err</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="273:5" pos:end="273:45"><expr pos:start="273:5" pos:end="273:44"><name pos:start="273:5" pos:end="273:17">on_read_error</name> <operator pos:start="273:19" pos:end="273:19">=</operator> <name pos:start="273:21" pos:end="273:44">BLOCKDEV_ON_ERROR_REPORT</name></expr>;</expr_stmt>

    <if_stmt pos:start="275:5" pos:end="287:5"><if pos:start="275:5" pos:end="287:5">if <condition pos:start="275:8" pos:end="275:53">(<expr pos:start="275:9" pos:end="275:52"><operator pos:start="275:9" pos:end="275:9">(</operator><name pos:start="275:10" pos:end="275:12">buf</name> <operator pos:start="275:14" pos:end="275:14">=</operator> <call pos:start="275:16" pos:end="275:43"><name pos:start="275:16" pos:end="275:27">qemu_opt_get</name><argument_list pos:start="275:28" pos:end="275:43">(<argument pos:start="275:29" pos:end="275:32"><expr pos:start="275:29" pos:end="275:32"><name pos:start="275:29" pos:end="275:32">opts</name></expr></argument>, <argument pos:start="275:35" pos:end="275:42"><expr pos:start="275:35" pos:end="275:42"><literal type="string" pos:start="275:35" pos:end="275:42">"rerror"</literal></expr></argument>)</argument_list></call><operator pos:start="275:44" pos:end="275:44">)</operator> <operator pos:start="275:46" pos:end="275:47">!=</operator> <name pos:start="275:49" pos:end="275:52">NULL</name></expr>)</condition> <block pos:start="275:55" pos:end="287:5">{<block_content pos:start="277:9" pos:end="285:9">

        <expr_stmt pos:start="277:9" pos:end="277:65"><expr pos:start="277:9" pos:end="277:64"><name pos:start="277:9" pos:end="277:21">on_read_error</name> <operator pos:start="277:23" pos:end="277:23">=</operator> <call pos:start="277:25" pos:end="277:64"><name pos:start="277:25" pos:end="277:48">parse_block_error_action</name><argument_list pos:start="277:49" pos:end="277:64">(<argument pos:start="277:50" pos:end="277:52"><expr pos:start="277:50" pos:end="277:52"><name pos:start="277:50" pos:end="277:52">buf</name></expr></argument>, <argument pos:start="277:55" pos:end="277:55"><expr pos:start="277:55" pos:end="277:55"><literal type="number" pos:start="277:55" pos:end="277:55">1</literal></expr></argument>, <argument pos:start="277:58" pos:end="277:63"><expr pos:start="277:58" pos:end="277:63"><operator pos:start="277:58" pos:end="277:58">&amp;</operator><name pos:start="277:59" pos:end="277:63">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="279:9" pos:end="285:9"><if pos:start="279:9" pos:end="285:9">if <condition pos:start="279:12" pos:end="279:18">(<expr pos:start="279:13" pos:end="279:17"><name pos:start="279:13" pos:end="279:17">error</name></expr>)</condition> <block pos:start="279:20" pos:end="285:9">{<block_content pos:start="281:13" pos:end="283:27">

            <expr_stmt pos:start="281:13" pos:end="281:41"><expr pos:start="281:13" pos:end="281:40"><call pos:start="281:13" pos:end="281:40"><name pos:start="281:13" pos:end="281:27">error_propagate</name><argument_list pos:start="281:28" pos:end="281:40">(<argument pos:start="281:29" pos:end="281:32"><expr pos:start="281:29" pos:end="281:32"><name pos:start="281:29" pos:end="281:32">errp</name></expr></argument>, <argument pos:start="281:35" pos:end="281:39"><expr pos:start="281:35" pos:end="281:39"><name pos:start="281:35" pos:end="281:39">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="283:13" pos:end="283:27">goto <name pos:start="283:18" pos:end="283:26">early_err</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="291:5" pos:end="299:5"><if pos:start="291:5" pos:end="299:5">if <condition pos:start="291:8" pos:end="291:43">(<expr pos:start="291:9" pos:end="291:42"><call pos:start="291:9" pos:end="291:42"><name pos:start="291:9" pos:end="291:22">bdrv_find_node</name><argument_list pos:start="291:23" pos:end="291:42">(<argument pos:start="291:24" pos:end="291:41"><expr pos:start="291:24" pos:end="291:41"><call pos:start="291:24" pos:end="291:41"><name pos:start="291:24" pos:end="291:35">qemu_opts_id</name><argument_list pos:start="291:36" pos:end="291:41">(<argument pos:start="291:37" pos:end="291:40"><expr pos:start="291:37" pos:end="291:40"><name pos:start="291:37" pos:end="291:40">opts</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="291:45" pos:end="299:5">{<block_content pos:start="293:9" pos:end="297:23">

        <expr_stmt pos:start="293:9" pos:end="295:39"><expr pos:start="293:9" pos:end="295:38"><call pos:start="293:9" pos:end="295:38"><name pos:start="293:9" pos:end="293:18">error_setg</name><argument_list pos:start="293:19" pos:end="295:38">(<argument pos:start="293:20" pos:end="293:23"><expr pos:start="293:20" pos:end="293:23"><name pos:start="293:20" pos:end="293:23">errp</name></expr></argument>, <argument pos:start="293:26" pos:end="293:71"><expr pos:start="293:26" pos:end="293:71"><literal type="string" pos:start="293:26" pos:end="293:71">"device id=%s is conflicting with a node-name"</literal></expr></argument>,

                   <argument pos:start="295:20" pos:end="295:37"><expr pos:start="295:20" pos:end="295:37"><call pos:start="295:20" pos:end="295:37"><name pos:start="295:20" pos:end="295:31">qemu_opts_id</name><argument_list pos:start="295:32" pos:end="295:37">(<argument pos:start="295:33" pos:end="295:36"><expr pos:start="295:33" pos:end="295:36"><name pos:start="295:33" pos:end="295:36">opts</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="297:9" pos:end="297:23">goto <name pos:start="297:14" pos:end="297:22">early_err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="303:5" pos:end="303:14">/* init */</comment>

    <expr_stmt pos:start="305:5" pos:end="305:38"><expr pos:start="305:5" pos:end="305:37"><name pos:start="305:5" pos:end="305:9">dinfo</name> <operator pos:start="305:11" pos:end="305:11">=</operator> <call pos:start="305:13" pos:end="305:37"><name pos:start="305:13" pos:end="305:21">g_malloc0</name><argument_list pos:start="305:22" pos:end="305:37">(<argument pos:start="305:23" pos:end="305:36"><expr pos:start="305:23" pos:end="305:36"><sizeof pos:start="305:23" pos:end="305:36">sizeof<argument_list pos:start="305:29" pos:end="305:36">(<argument pos:start="305:30" pos:end="305:35"><expr pos:start="305:30" pos:end="305:35"><operator pos:start="305:30" pos:end="305:30">*</operator><name pos:start="305:31" pos:end="305:35">dinfo</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="307:5" pos:end="307:45"><expr pos:start="307:5" pos:end="307:44"><name pos:start="307:5" pos:end="307:13"><name pos:start="307:5" pos:end="307:9">dinfo</name><operator pos:start="307:10" pos:end="307:11">-&gt;</operator><name pos:start="307:12" pos:end="307:13">id</name></name> <operator pos:start="307:15" pos:end="307:15">=</operator> <call pos:start="307:17" pos:end="307:44"><name pos:start="307:17" pos:end="307:24">g_strdup</name><argument_list pos:start="307:25" pos:end="307:44">(<argument pos:start="307:26" pos:end="307:43"><expr pos:start="307:26" pos:end="307:43"><call pos:start="307:26" pos:end="307:43"><name pos:start="307:26" pos:end="307:37">qemu_opts_id</name><argument_list pos:start="307:38" pos:end="307:43">(<argument pos:start="307:39" pos:end="307:42"><expr pos:start="307:39" pos:end="307:42"><name pos:start="307:39" pos:end="307:42">opts</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="309:5" pos:end="309:46"><expr pos:start="309:5" pos:end="309:45"><name pos:start="309:5" pos:end="309:15"><name pos:start="309:5" pos:end="309:9">dinfo</name><operator pos:start="309:10" pos:end="309:11">-&gt;</operator><name pos:start="309:12" pos:end="309:15">bdrv</name></name> <operator pos:start="309:17" pos:end="309:17">=</operator> <call pos:start="309:19" pos:end="309:45"><name pos:start="309:19" pos:end="309:26">bdrv_new</name><argument_list pos:start="309:27" pos:end="309:45">(<argument pos:start="309:28" pos:end="309:36"><expr pos:start="309:28" pos:end="309:36"><name pos:start="309:28" pos:end="309:36"><name pos:start="309:28" pos:end="309:32">dinfo</name><operator pos:start="309:33" pos:end="309:34">-&gt;</operator><name pos:start="309:35" pos:end="309:36">id</name></name></expr></argument>, <argument pos:start="309:39" pos:end="309:44"><expr pos:start="309:39" pos:end="309:44"><operator pos:start="309:39" pos:end="309:39">&amp;</operator><name pos:start="309:40" pos:end="309:44">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="311:5" pos:end="317:5"><if pos:start="311:5" pos:end="317:5">if <condition pos:start="311:8" pos:end="311:14">(<expr pos:start="311:9" pos:end="311:13"><name pos:start="311:9" pos:end="311:13">error</name></expr>)</condition> <block pos:start="311:16" pos:end="317:5">{<block_content pos:start="313:9" pos:end="315:26">

        <expr_stmt pos:start="313:9" pos:end="313:37"><expr pos:start="313:9" pos:end="313:36"><call pos:start="313:9" pos:end="313:36"><name pos:start="313:9" pos:end="313:23">error_propagate</name><argument_list pos:start="313:24" pos:end="313:36">(<argument pos:start="313:25" pos:end="313:28"><expr pos:start="313:25" pos:end="313:28"><name pos:start="313:25" pos:end="313:28">errp</name></expr></argument>, <argument pos:start="313:31" pos:end="313:35"><expr pos:start="313:31" pos:end="313:35"><name pos:start="313:31" pos:end="313:35">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="315:9" pos:end="315:26">goto <name pos:start="315:14" pos:end="315:25">bdrv_new_err</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="319:5" pos:end="319:61"><expr pos:start="319:5" pos:end="319:60"><name pos:start="319:5" pos:end="319:27"><name pos:start="319:5" pos:end="319:9">dinfo</name><operator pos:start="319:10" pos:end="319:11">-&gt;</operator><name pos:start="319:12" pos:end="319:15">bdrv</name><operator pos:start="319:16" pos:end="319:17">-&gt;</operator><name pos:start="319:18" pos:end="319:27">open_flags</name></name> <operator pos:start="319:29" pos:end="319:29">=</operator> <ternary pos:start="319:31" pos:end="319:60"><condition pos:start="319:31" pos:end="319:40"><expr pos:start="319:31" pos:end="319:38"><name pos:start="319:31" pos:end="319:38">snapshot</name></expr> ?</condition><then pos:start="319:42" pos:end="319:56"> <expr pos:start="319:42" pos:end="319:56"><name pos:start="319:42" pos:end="319:56">BDRV_O_SNAPSHOT</name></expr> </then><else pos:start="319:58" pos:end="319:60">: <expr pos:start="319:60" pos:end="319:60"><literal type="number" pos:start="319:60" pos:end="319:60">0</literal></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="321:5" pos:end="321:32"><expr pos:start="321:5" pos:end="321:31"><name pos:start="321:5" pos:end="321:26"><name pos:start="321:5" pos:end="321:9">dinfo</name><operator pos:start="321:10" pos:end="321:11">-&gt;</operator><name pos:start="321:12" pos:end="321:15">bdrv</name><operator pos:start="321:16" pos:end="321:17">-&gt;</operator><name pos:start="321:18" pos:end="321:26">read_only</name></name> <operator pos:start="321:28" pos:end="321:28">=</operator> <name pos:start="321:30" pos:end="321:31">ro</name></expr>;</expr_stmt>

    <expr_stmt pos:start="323:5" pos:end="323:24"><expr pos:start="323:5" pos:end="323:23"><name pos:start="323:5" pos:end="323:19"><name pos:start="323:5" pos:end="323:9">dinfo</name><operator pos:start="323:10" pos:end="323:11">-&gt;</operator><name pos:start="323:12" pos:end="323:19">refcount</name></name> <operator pos:start="323:21" pos:end="323:21">=</operator> <literal type="number" pos:start="323:23" pos:end="323:23">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="325:5" pos:end="329:5"><if pos:start="325:5" pos:end="329:5">if <condition pos:start="325:8" pos:end="325:23">(<expr pos:start="325:9" pos:end="325:22"><name pos:start="325:9" pos:end="325:14">serial</name> <operator pos:start="325:16" pos:end="325:17">!=</operator> <name pos:start="325:19" pos:end="325:22">NULL</name></expr>)</condition> <block pos:start="325:25" pos:end="329:5">{<block_content pos:start="327:9" pos:end="327:41">

        <expr_stmt pos:start="327:9" pos:end="327:41"><expr pos:start="327:9" pos:end="327:40"><name pos:start="327:9" pos:end="327:21"><name pos:start="327:9" pos:end="327:13">dinfo</name><operator pos:start="327:14" pos:end="327:15">-&gt;</operator><name pos:start="327:16" pos:end="327:21">serial</name></name> <operator pos:start="327:23" pos:end="327:23">=</operator> <call pos:start="327:25" pos:end="327:40"><name pos:start="327:25" pos:end="327:32">g_strdup</name><argument_list pos:start="327:33" pos:end="327:40">(<argument pos:start="327:34" pos:end="327:39"><expr pos:start="327:34" pos:end="327:39"><name pos:start="327:34" pos:end="327:39">serial</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="331:5" pos:end="331:45"><expr pos:start="331:5" pos:end="331:44"><call pos:start="331:5" pos:end="331:44"><name pos:start="331:5" pos:end="331:22">QTAILQ_INSERT_TAIL</name><argument_list pos:start="331:23" pos:end="331:44">(<argument pos:start="331:24" pos:end="331:30"><expr pos:start="331:24" pos:end="331:30"><operator pos:start="331:24" pos:end="331:24">&amp;</operator><name pos:start="331:25" pos:end="331:30">drives</name></expr></argument>, <argument pos:start="331:33" pos:end="331:37"><expr pos:start="331:33" pos:end="331:37"><name pos:start="331:33" pos:end="331:37">dinfo</name></expr></argument>, <argument pos:start="331:40" pos:end="331:43"><expr pos:start="331:40" pos:end="331:43"><name pos:start="331:40" pos:end="331:43">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="335:5" pos:end="335:66"><expr pos:start="335:5" pos:end="335:65"><call pos:start="335:5" pos:end="335:65"><name pos:start="335:5" pos:end="335:21">bdrv_set_on_error</name><argument_list pos:start="335:22" pos:end="335:65">(<argument pos:start="335:23" pos:end="335:33"><expr pos:start="335:23" pos:end="335:33"><name pos:start="335:23" pos:end="335:33"><name pos:start="335:23" pos:end="335:27">dinfo</name><operator pos:start="335:28" pos:end="335:29">-&gt;</operator><name pos:start="335:30" pos:end="335:33">bdrv</name></name></expr></argument>, <argument pos:start="335:36" pos:end="335:48"><expr pos:start="335:36" pos:end="335:48"><name pos:start="335:36" pos:end="335:48">on_read_error</name></expr></argument>, <argument pos:start="335:51" pos:end="335:64"><expr pos:start="335:51" pos:end="335:64"><name pos:start="335:51" pos:end="335:64">on_write_error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="339:5" pos:end="339:29">/* disk I/O throttling */</comment>

    <if_stmt pos:start="341:5" pos:end="347:5"><if pos:start="341:5" pos:end="347:5">if <condition pos:start="341:8" pos:end="341:31">(<expr pos:start="341:9" pos:end="341:30"><call pos:start="341:9" pos:end="341:30"><name pos:start="341:9" pos:end="341:24">throttle_enabled</name><argument_list pos:start="341:25" pos:end="341:30">(<argument pos:start="341:26" pos:end="341:29"><expr pos:start="341:26" pos:end="341:29"><operator pos:start="341:26" pos:end="341:26">&amp;</operator><name pos:start="341:27" pos:end="341:29">cfg</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="341:33" pos:end="347:5">{<block_content pos:start="343:9" pos:end="345:46">

        <expr_stmt pos:start="343:9" pos:end="343:43"><expr pos:start="343:9" pos:end="343:42"><call pos:start="343:9" pos:end="343:42"><name pos:start="343:9" pos:end="343:29">bdrv_io_limits_enable</name><argument_list pos:start="343:30" pos:end="343:42">(<argument pos:start="343:31" pos:end="343:41"><expr pos:start="343:31" pos:end="343:41"><name pos:start="343:31" pos:end="343:41"><name pos:start="343:31" pos:end="343:35">dinfo</name><operator pos:start="343:36" pos:end="343:37">-&gt;</operator><name pos:start="343:38" pos:end="343:41">bdrv</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="345:9" pos:end="345:46"><expr pos:start="345:9" pos:end="345:45"><call pos:start="345:9" pos:end="345:45"><name pos:start="345:9" pos:end="345:26">bdrv_set_io_limits</name><argument_list pos:start="345:27" pos:end="345:45">(<argument pos:start="345:28" pos:end="345:38"><expr pos:start="345:28" pos:end="345:38"><name pos:start="345:28" pos:end="345:38"><name pos:start="345:28" pos:end="345:32">dinfo</name><operator pos:start="345:33" pos:end="345:34">-&gt;</operator><name pos:start="345:35" pos:end="345:38">bdrv</name></name></expr></argument>, <argument pos:start="345:41" pos:end="345:44"><expr pos:start="345:41" pos:end="345:44"><operator pos:start="345:41" pos:end="345:41">&amp;</operator><name pos:start="345:42" pos:end="345:44">cfg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="351:5" pos:end="367:5"><if pos:start="351:5" pos:end="367:5">if <condition pos:start="351:8" pos:end="351:24">(<expr pos:start="351:9" pos:end="351:23"><operator pos:start="351:9" pos:end="351:9">!</operator><name pos:start="351:10" pos:end="351:13">file</name> <operator pos:start="351:15" pos:end="351:16">||</operator> <operator pos:start="351:18" pos:end="351:18">!</operator><operator pos:start="351:19" pos:end="351:19">*</operator><name pos:start="351:20" pos:end="351:23">file</name></expr>)</condition> <block pos:start="351:26" pos:end="367:5">{<block_content pos:start="353:9" pos:end="365:9">

        <if_stmt pos:start="353:9" pos:end="365:9"><if pos:start="353:9" pos:end="357:9">if <condition pos:start="353:12" pos:end="353:37">(<expr pos:start="353:13" pos:end="353:36"><name pos:start="353:13" pos:end="353:36">has_driver_specific_opts</name></expr>)</condition> <block pos:start="353:39" pos:end="357:9">{<block_content pos:start="355:13" pos:end="355:24">

            <expr_stmt pos:start="355:13" pos:end="355:24"><expr pos:start="355:13" pos:end="355:23"><name pos:start="355:13" pos:end="355:16">file</name> <operator pos:start="355:18" pos:end="355:18">=</operator> <name pos:start="355:20" pos:end="355:23">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="357:11" pos:end="365:9">else <block pos:start="357:16" pos:end="365:9">{<block_content pos:start="359:13" pos:end="363:25">

            <expr_stmt pos:start="359:13" pos:end="359:29"><expr pos:start="359:13" pos:end="359:28"><call pos:start="359:13" pos:end="359:28"><name pos:start="359:13" pos:end="359:19">QDECREF</name><argument_list pos:start="359:20" pos:end="359:28">(<argument pos:start="359:21" pos:end="359:27"><expr pos:start="359:21" pos:end="359:27"><name pos:start="359:21" pos:end="359:27">bs_opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="361:13" pos:end="361:32"><expr pos:start="361:13" pos:end="361:31"><call pos:start="361:13" pos:end="361:31"><name pos:start="361:13" pos:end="361:25">qemu_opts_del</name><argument_list pos:start="361:26" pos:end="361:31">(<argument pos:start="361:27" pos:end="361:30"><expr pos:start="361:27" pos:end="361:30"><name pos:start="361:27" pos:end="361:30">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="363:13" pos:end="363:25">return <expr pos:start="363:20" pos:end="363:24"><name pos:start="363:20" pos:end="363:24">dinfo</name></expr>;</return>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="369:5" pos:end="377:5"><if pos:start="369:5" pos:end="377:5">if <condition pos:start="369:8" pos:end="369:17">(<expr pos:start="369:9" pos:end="369:16"><name pos:start="369:9" pos:end="369:16">snapshot</name></expr>)</condition> <block pos:start="369:19" pos:end="377:5">{<block_content pos:start="373:9" pos:end="375:72">

        <comment type="block" pos:start="371:9" pos:end="371:51">/* always use cache=unsafe with snapshot */</comment>

        <expr_stmt pos:start="373:9" pos:end="373:41"><expr pos:start="373:9" pos:end="373:40"><name pos:start="373:9" pos:end="373:18">bdrv_flags</name> <operator pos:start="373:20" pos:end="373:21">&amp;=</operator> <operator pos:start="373:23" pos:end="373:23">~</operator><name pos:start="373:24" pos:end="373:40">BDRV_O_CACHE_MASK</name></expr>;</expr_stmt>

        <expr_stmt pos:start="375:9" pos:end="375:72"><expr pos:start="375:9" pos:end="375:71"><name pos:start="375:9" pos:end="375:18">bdrv_flags</name> <operator pos:start="375:20" pos:end="375:21">|=</operator> <operator pos:start="375:23" pos:end="375:23">(</operator><name pos:start="375:24" pos:end="375:38">BDRV_O_SNAPSHOT</name><operator pos:start="375:39" pos:end="375:39">|</operator><name pos:start="375:40" pos:end="375:54">BDRV_O_CACHE_WB</name><operator pos:start="375:55" pos:end="375:55">|</operator><name pos:start="375:56" pos:end="375:70">BDRV_O_NO_FLUSH</name><operator pos:start="375:71" pos:end="375:71">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="381:5" pos:end="385:5"><if pos:start="381:5" pos:end="385:5">if <condition pos:start="381:8" pos:end="381:21">(<expr pos:start="381:9" pos:end="381:20"><name pos:start="381:9" pos:end="381:20">copy_on_read</name></expr>)</condition> <block pos:start="381:23" pos:end="385:5">{<block_content pos:start="383:9" pos:end="383:42">

        <expr_stmt pos:start="383:9" pos:end="383:42"><expr pos:start="383:9" pos:end="383:41"><name pos:start="383:9" pos:end="383:18">bdrv_flags</name> <operator pos:start="383:20" pos:end="383:21">|=</operator> <name pos:start="383:23" pos:end="383:41">BDRV_O_COPY_ON_READ</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="389:5" pos:end="393:5"><if pos:start="389:5" pos:end="393:5">if <condition pos:start="389:8" pos:end="389:44">(<expr pos:start="389:9" pos:end="389:43"><call pos:start="389:9" pos:end="389:43"><name pos:start="389:9" pos:end="389:22">runstate_check</name><argument_list pos:start="389:23" pos:end="389:43">(<argument pos:start="389:24" pos:end="389:42"><expr pos:start="389:24" pos:end="389:42"><name pos:start="389:24" pos:end="389:42">RUN_STATE_INMIGRATE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="389:46" pos:end="393:5">{<block_content pos:start="391:9" pos:end="391:38">

        <expr_stmt pos:start="391:9" pos:end="391:38"><expr pos:start="391:9" pos:end="391:37"><name pos:start="391:9" pos:end="391:18">bdrv_flags</name> <operator pos:start="391:20" pos:end="391:21">|=</operator> <name pos:start="391:23" pos:end="391:37">BDRV_O_INCOMING</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="397:5" pos:end="397:39"><expr pos:start="397:5" pos:end="397:38"><name pos:start="397:5" pos:end="397:14">bdrv_flags</name> <operator pos:start="397:16" pos:end="397:17">|=</operator> <ternary pos:start="397:19" pos:end="397:38"><condition pos:start="397:19" pos:end="397:22"><expr pos:start="397:19" pos:end="397:20"><name pos:start="397:19" pos:end="397:20">ro</name></expr> ?</condition><then pos:start="397:24" pos:end="397:24"> <expr pos:start="397:24" pos:end="397:24"><literal type="number" pos:start="397:24" pos:end="397:24">0</literal></expr> </then><else pos:start="397:26" pos:end="397:38">: <expr pos:start="397:28" pos:end="397:38"><name pos:start="397:28" pos:end="397:38">BDRV_O_RDWR</name></expr></else></ternary></expr>;</expr_stmt>



    <expr_stmt pos:start="401:5" pos:end="401:21"><expr pos:start="401:5" pos:end="401:20"><call pos:start="401:5" pos:end="401:20"><name pos:start="401:5" pos:end="401:11">QINCREF</name><argument_list pos:start="401:12" pos:end="401:20">(<argument pos:start="401:13" pos:end="401:19"><expr pos:start="401:13" pos:end="401:19"><name pos:start="401:13" pos:end="401:19">bs_opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="403:5" pos:end="403:80"><expr pos:start="403:5" pos:end="403:79"><name pos:start="403:5" pos:end="403:7">ret</name> <operator pos:start="403:9" pos:end="403:9">=</operator> <call pos:start="403:11" pos:end="403:79"><name pos:start="403:11" pos:end="403:19">bdrv_open</name><argument_list pos:start="403:20" pos:end="403:79">(<argument pos:start="403:21" pos:end="403:32"><expr pos:start="403:21" pos:end="403:32"><operator pos:start="403:21" pos:end="403:21">&amp;</operator><name pos:start="403:22" pos:end="403:32"><name pos:start="403:22" pos:end="403:26">dinfo</name><operator pos:start="403:27" pos:end="403:28">-&gt;</operator><name pos:start="403:29" pos:end="403:32">bdrv</name></name></expr></argument>, <argument pos:start="403:35" pos:end="403:38"><expr pos:start="403:35" pos:end="403:38"><name pos:start="403:35" pos:end="403:38">file</name></expr></argument>, <argument pos:start="403:41" pos:end="403:44"><expr pos:start="403:41" pos:end="403:44"><name pos:start="403:41" pos:end="403:44">NULL</name></expr></argument>, <argument pos:start="403:47" pos:end="403:53"><expr pos:start="403:47" pos:end="403:53"><name pos:start="403:47" pos:end="403:53">bs_opts</name></expr></argument>, <argument pos:start="403:56" pos:end="403:65"><expr pos:start="403:56" pos:end="403:65"><name pos:start="403:56" pos:end="403:65">bdrv_flags</name></expr></argument>, <argument pos:start="403:68" pos:end="403:70"><expr pos:start="403:68" pos:end="403:70"><name pos:start="403:68" pos:end="403:70">drv</name></expr></argument>, <argument pos:start="403:73" pos:end="403:78"><expr pos:start="403:73" pos:end="403:78"><operator pos:start="403:73" pos:end="403:73">&amp;</operator><name pos:start="403:74" pos:end="403:78">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="407:5" pos:end="417:5"><if pos:start="407:5" pos:end="417:5">if <condition pos:start="407:8" pos:end="407:16">(<expr pos:start="407:9" pos:end="407:15"><name pos:start="407:9" pos:end="407:11">ret</name> <operator pos:start="407:13" pos:end="407:13">&lt;</operator> <literal type="number" pos:start="407:15" pos:end="407:15">0</literal></expr>)</condition> <block pos:start="407:18" pos:end="417:5">{<block_content pos:start="409:9" pos:end="415:17">

        <expr_stmt pos:start="409:9" pos:end="411:63"><expr pos:start="409:9" pos:end="411:62"><call pos:start="409:9" pos:end="411:62"><name pos:start="409:9" pos:end="409:18">error_setg</name><argument_list pos:start="409:19" pos:end="411:62">(<argument pos:start="409:20" pos:end="409:23"><expr pos:start="409:20" pos:end="409:23"><name pos:start="409:20" pos:end="409:23">errp</name></expr></argument>, <argument pos:start="409:26" pos:end="409:59"><expr pos:start="409:26" pos:end="409:59"><literal type="string" pos:start="409:26" pos:end="409:59">"could not open disk image %s: %s"</literal></expr></argument>,

                   <argument pos:start="411:20" pos:end="411:36"><expr pos:start="411:20" pos:end="411:36"><ternary pos:start="411:20" pos:end="411:36"><condition pos:start="411:20" pos:end="411:25"><expr pos:start="411:20" pos:end="411:23"><name pos:start="411:20" pos:end="411:23">file</name></expr> ?</condition><then/><else pos:start="411:26" pos:end="411:36">: <expr pos:start="411:28" pos:end="411:36"><name pos:start="411:28" pos:end="411:36"><name pos:start="411:28" pos:end="411:32">dinfo</name><operator pos:start="411:33" pos:end="411:34">-&gt;</operator><name pos:start="411:35" pos:end="411:36">id</name></name></expr></else></ternary></expr></argument>, <argument pos:start="411:39" pos:end="411:61"><expr pos:start="411:39" pos:end="411:61"><call pos:start="411:39" pos:end="411:61"><name pos:start="411:39" pos:end="411:54">error_get_pretty</name><argument_list pos:start="411:55" pos:end="411:61">(<argument pos:start="411:56" pos:end="411:60"><expr pos:start="411:56" pos:end="411:60"><name pos:start="411:56" pos:end="411:60">error</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="413:9" pos:end="413:26"><expr pos:start="413:9" pos:end="413:25"><call pos:start="413:9" pos:end="413:25"><name pos:start="413:9" pos:end="413:18">error_free</name><argument_list pos:start="413:19" pos:end="413:25">(<argument pos:start="413:20" pos:end="413:24"><expr pos:start="413:20" pos:end="413:24"><name pos:start="413:20" pos:end="413:24">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="415:9" pos:end="415:17">goto <name pos:start="415:14" pos:end="415:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="421:5" pos:end="423:22"><if pos:start="421:5" pos:end="423:22">if <condition pos:start="421:8" pos:end="421:39">(<expr pos:start="421:9" pos:end="421:38"><call pos:start="421:9" pos:end="421:38"><name pos:start="421:9" pos:end="421:25">bdrv_key_required</name><argument_list pos:start="421:26" pos:end="421:38">(<argument pos:start="421:27" pos:end="421:37"><expr pos:start="421:27" pos:end="421:37"><name pos:start="421:27" pos:end="421:37"><name pos:start="421:27" pos:end="421:31">dinfo</name><operator pos:start="421:32" pos:end="421:33">-&gt;</operator><name pos:start="421:34" pos:end="421:37">bdrv</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="423:9" pos:end="423:22"><block_content pos:start="423:9" pos:end="423:22">

        <expr_stmt pos:start="423:9" pos:end="423:22"><expr pos:start="423:9" pos:end="423:21"><name pos:start="423:9" pos:end="423:17">autostart</name> <operator pos:start="423:19" pos:end="423:19">=</operator> <literal type="number" pos:start="423:21" pos:end="423:21">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="427:5" pos:end="427:21"><expr pos:start="427:5" pos:end="427:20"><call pos:start="427:5" pos:end="427:20"><name pos:start="427:5" pos:end="427:11">QDECREF</name><argument_list pos:start="427:12" pos:end="427:20">(<argument pos:start="427:13" pos:end="427:19"><expr pos:start="427:13" pos:end="427:19"><name pos:start="427:13" pos:end="427:19">bs_opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="429:5" pos:end="429:24"><expr pos:start="429:5" pos:end="429:23"><call pos:start="429:5" pos:end="429:23"><name pos:start="429:5" pos:end="429:17">qemu_opts_del</name><argument_list pos:start="429:18" pos:end="429:23">(<argument pos:start="429:19" pos:end="429:22"><expr pos:start="429:19" pos:end="429:22"><name pos:start="429:19" pos:end="429:22">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="433:5" pos:end="433:17">return <expr pos:start="433:12" pos:end="433:16"><name pos:start="433:12" pos:end="433:16">dinfo</name></expr>;</return>



<label pos:start="437:1" pos:end="437:4"><name pos:start="437:1" pos:end="437:3">err</name>:</label>

    <expr_stmt pos:start="439:5" pos:end="439:28"><expr pos:start="439:5" pos:end="439:27"><call pos:start="439:5" pos:end="439:27"><name pos:start="439:5" pos:end="439:14">bdrv_unref</name><argument_list pos:start="439:15" pos:end="439:27">(<argument pos:start="439:16" pos:end="439:26"><expr pos:start="439:16" pos:end="439:26"><name pos:start="439:16" pos:end="439:26"><name pos:start="439:16" pos:end="439:20">dinfo</name><operator pos:start="439:21" pos:end="439:22">-&gt;</operator><name pos:start="439:23" pos:end="439:26">bdrv</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="441:5" pos:end="441:40"><expr pos:start="441:5" pos:end="441:39"><call pos:start="441:5" pos:end="441:39"><name pos:start="441:5" pos:end="441:17">QTAILQ_REMOVE</name><argument_list pos:start="441:18" pos:end="441:39">(<argument pos:start="441:19" pos:end="441:25"><expr pos:start="441:19" pos:end="441:25"><operator pos:start="441:19" pos:end="441:19">&amp;</operator><name pos:start="441:20" pos:end="441:25">drives</name></expr></argument>, <argument pos:start="441:28" pos:end="441:32"><expr pos:start="441:28" pos:end="441:32"><name pos:start="441:28" pos:end="441:32">dinfo</name></expr></argument>, <argument pos:start="441:35" pos:end="441:38"><expr pos:start="441:35" pos:end="441:38"><name pos:start="441:35" pos:end="441:38">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="443:1" pos:end="443:13"><name pos:start="443:1" pos:end="443:12">bdrv_new_err</name>:</label>

    <expr_stmt pos:start="445:5" pos:end="445:22"><expr pos:start="445:5" pos:end="445:21"><call pos:start="445:5" pos:end="445:21"><name pos:start="445:5" pos:end="445:10">g_free</name><argument_list pos:start="445:11" pos:end="445:21">(<argument pos:start="445:12" pos:end="445:20"><expr pos:start="445:12" pos:end="445:20"><name pos:start="445:12" pos:end="445:20"><name pos:start="445:12" pos:end="445:16">dinfo</name><operator pos:start="445:17" pos:end="445:18">-&gt;</operator><name pos:start="445:19" pos:end="445:20">id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="447:5" pos:end="447:18"><expr pos:start="447:5" pos:end="447:17"><call pos:start="447:5" pos:end="447:17"><name pos:start="447:5" pos:end="447:10">g_free</name><argument_list pos:start="447:11" pos:end="447:17">(<argument pos:start="447:12" pos:end="447:16"><expr pos:start="447:12" pos:end="447:16"><name pos:start="447:12" pos:end="447:16">dinfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="449:1" pos:end="449:10"><name pos:start="449:1" pos:end="449:9">early_err</name>:</label>

    <expr_stmt pos:start="451:5" pos:end="451:21"><expr pos:start="451:5" pos:end="451:20"><call pos:start="451:5" pos:end="451:20"><name pos:start="451:5" pos:end="451:11">QDECREF</name><argument_list pos:start="451:12" pos:end="451:20">(<argument pos:start="451:13" pos:end="451:19"><expr pos:start="451:13" pos:end="451:19"><name pos:start="451:13" pos:end="451:19">bs_opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="453:5" pos:end="453:24"><expr pos:start="453:5" pos:end="453:23"><call pos:start="453:5" pos:end="453:23"><name pos:start="453:5" pos:end="453:17">qemu_opts_del</name><argument_list pos:start="453:18" pos:end="453:23">(<argument pos:start="453:19" pos:end="453:22"><expr pos:start="453:19" pos:end="453:22"><name pos:start="453:19" pos:end="453:22">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="455:5" pos:end="455:16">return <expr pos:start="455:12" pos:end="455:15"><name pos:start="455:12" pos:end="455:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
