<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13840.c" pos:tabs="8"><function pos:start="1:1" pos:end="66:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">asf_write_header</name><parameter_list pos:start="1:28" pos:end="1:47">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="66:1">{<block_content pos:start="5:5" pos:end="64:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">ASFContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">asf</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:34"><expr pos:start="9:5" pos:end="9:33"><name pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:5">s</name><operator pos:start="9:6" pos:end="9:7">-&gt;</operator><name pos:start="9:8" pos:end="9:18">packet_size</name></name>  <operator pos:start="9:21" pos:end="9:21">=</operator> <name pos:start="9:23" pos:end="9:33">PACKET_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:32"><expr pos:start="11:5" pos:end="11:31"><name pos:start="11:5" pos:end="11:27"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:27">max_interleave_delta</name></name> <operator pos:start="11:29" pos:end="11:29">=</operator> <literal type="number" pos:start="11:31" pos:end="11:31">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:24"><expr pos:start="13:5" pos:end="13:23"><name pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:7">asf</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:19">nb_packets</name></name> <operator pos:start="13:21" pos:end="13:21">=</operator> <literal type="number" pos:start="13:23" pos:end="13:23">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:79"><expr pos:start="17:5" pos:end="17:78"><name pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:7">asf</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:18">index_ptr</name></name>             <operator pos:start="17:32" pos:end="17:32">=</operator> <call pos:start="17:34" pos:end="17:78"><name pos:start="17:34" pos:end="17:42">av_malloc</name><argument_list pos:start="17:43" pos:end="17:78">(<argument pos:start="17:44" pos:end="17:77"><expr pos:start="17:44" pos:end="17:77"><sizeof pos:start="17:44" pos:end="17:59">sizeof<argument_list pos:start="17:50" pos:end="17:59">(<argument pos:start="17:51" pos:end="17:58"><expr pos:start="17:51" pos:end="17:58"><name pos:start="17:51" pos:end="17:58">ASFIndex</name></expr></argument>)</argument_list></sizeof> <operator pos:start="17:61" pos:end="17:61">*</operator> <name pos:start="17:63" pos:end="17:77">ASF_INDEX_BLOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:49"><expr pos:start="19:5" pos:end="19:48"><name pos:start="19:5" pos:end="19:30"><name pos:start="19:5" pos:end="19:7">asf</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:30">nb_index_memory_alloc</name></name> <operator pos:start="19:32" pos:end="19:32">=</operator> <name pos:start="19:34" pos:end="19:48">ASF_INDEX_BLOCK</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:35"><expr pos:start="21:5" pos:end="21:34"><name pos:start="21:5" pos:end="21:23"><name pos:start="21:5" pos:end="21:7">asf</name><operator pos:start="21:8" pos:end="21:9">-&gt;</operator><name pos:start="21:10" pos:end="21:23">maximum_packet</name></name>        <operator pos:start="21:32" pos:end="21:32">=</operator> <literal type="number" pos:start="21:34" pos:end="21:34">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="25:5" pos:end="29:57">/* the data-chunk-size has to be 50 (DATA_HEADER_SIZE), which is

     * data_size - asf-&gt;data_offset at the moment this function is done.

     * It is needed to use asf as a streamable format. */</comment>

    <if_stmt pos:start="31:5" pos:end="38:5"><if pos:start="31:5" pos:end="38:5">if <condition pos:start="31:8" pos:end="31:54">(<expr pos:start="31:9" pos:end="31:53"><call pos:start="31:9" pos:end="31:49"><name pos:start="31:9" pos:end="31:25">asf_write_header1</name><argument_list pos:start="31:26" pos:end="31:49">(<argument pos:start="31:27" pos:end="31:27"><expr pos:start="31:27" pos:end="31:27"><name pos:start="31:27" pos:end="31:27">s</name></expr></argument>, <argument pos:start="31:30" pos:end="31:30"><expr pos:start="31:30" pos:end="31:30"><literal type="number" pos:start="31:30" pos:end="31:30">0</literal></expr></argument>, <argument pos:start="31:33" pos:end="31:48"><expr pos:start="31:33" pos:end="31:48"><name pos:start="31:33" pos:end="31:48">DATA_HEADER_SIZE</name></expr></argument>)</argument_list></call> <operator pos:start="31:51" pos:end="31:51">&lt;</operator> <literal type="number" pos:start="31:53" pos:end="31:53">0</literal></expr>)</condition> <block pos:start="31:56" pos:end="38:5">{<block_content pos:start="36:9" pos:end="36:18">

        <comment type="line" pos:start="33:9" pos:end="33:23">//av_free(asf);</comment>


        <return pos:start="36:9" pos:end="36:18">return <expr pos:start="36:16" pos:end="36:17"><operator pos:start="36:16" pos:end="36:16">-</operator><literal type="number" pos:start="36:17" pos:end="36:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="42:5" pos:end="42:22"><expr pos:start="42:5" pos:end="42:21"><call pos:start="42:5" pos:end="42:21"><name pos:start="42:5" pos:end="42:14">avio_flush</name><argument_list pos:start="42:15" pos:end="42:21">(<argument pos:start="42:16" pos:end="42:20"><expr pos:start="42:16" pos:end="42:20"><name pos:start="42:16" pos:end="42:20"><name pos:start="42:16" pos:end="42:16">s</name><operator pos:start="42:17" pos:end="42:18">-&gt;</operator><name pos:start="42:19" pos:end="42:20">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="46:5" pos:end="46:36"><expr pos:start="46:5" pos:end="46:35"><name pos:start="46:5" pos:end="46:27"><name pos:start="46:5" pos:end="46:7">asf</name><operator pos:start="46:8" pos:end="46:9">-&gt;</operator><name pos:start="46:10" pos:end="46:27">packet_nb_payloads</name></name>     <operator pos:start="46:33" pos:end="46:33">=</operator> <literal type="number" pos:start="46:35" pos:end="46:35">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="48:5" pos:end="48:37"><expr pos:start="48:5" pos:end="48:36"><name pos:start="48:5" pos:end="48:31"><name pos:start="48:5" pos:end="48:7">asf</name><operator pos:start="48:8" pos:end="48:9">-&gt;</operator><name pos:start="48:10" pos:end="48:31">packet_timestamp_start</name></name> <operator pos:start="48:33" pos:end="48:33">=</operator> <operator pos:start="48:35" pos:end="48:35">-</operator><literal type="number" pos:start="48:36" pos:end="48:36">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="50:5" pos:end="50:37"><expr pos:start="50:5" pos:end="50:36"><name pos:start="50:5" pos:end="50:29"><name pos:start="50:5" pos:end="50:7">asf</name><operator pos:start="50:8" pos:end="50:9">-&gt;</operator><name pos:start="50:10" pos:end="50:29">packet_timestamp_end</name></name>   <operator pos:start="50:33" pos:end="50:33">=</operator> <operator pos:start="50:35" pos:end="50:35">-</operator><literal type="number" pos:start="50:36" pos:end="50:36">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="52:5" pos:end="54:46"><expr pos:start="52:5" pos:end="54:45"><call pos:start="52:5" pos:end="54:45"><name pos:start="52:5" pos:end="52:21">ffio_init_context</name><argument_list pos:start="52:22" pos:end="54:45">(<argument pos:start="52:23" pos:end="52:30"><expr pos:start="52:23" pos:end="52:30"><operator pos:start="52:23" pos:end="52:23">&amp;</operator><name pos:start="52:24" pos:end="52:30"><name pos:start="52:24" pos:end="52:26">asf</name><operator pos:start="52:27" pos:end="52:28">-&gt;</operator><name pos:start="52:29" pos:end="52:30">pb</name></name></expr></argument>, <argument pos:start="52:33" pos:end="52:47"><expr pos:start="52:33" pos:end="52:47"><name pos:start="52:33" pos:end="52:47"><name pos:start="52:33" pos:end="52:35">asf</name><operator pos:start="52:36" pos:end="52:37">-&gt;</operator><name pos:start="52:38" pos:end="52:47">packet_buf</name></name></expr></argument>, <argument pos:start="52:50" pos:end="52:63"><expr pos:start="52:50" pos:end="52:63"><name pos:start="52:50" pos:end="52:63"><name pos:start="52:50" pos:end="52:50">s</name><operator pos:start="52:51" pos:end="52:52">-&gt;</operator><name pos:start="52:53" pos:end="52:63">packet_size</name></name></expr></argument>, <argument pos:start="52:66" pos:end="52:66"><expr pos:start="52:66" pos:end="52:66"><literal type="number" pos:start="52:66" pos:end="52:66">1</literal></expr></argument>,

                      <argument pos:start="54:23" pos:end="54:26"><expr pos:start="54:23" pos:end="54:26"><name pos:start="54:23" pos:end="54:26">NULL</name></expr></argument>, <argument pos:start="54:29" pos:end="54:32"><expr pos:start="54:29" pos:end="54:32"><name pos:start="54:29" pos:end="54:32">NULL</name></expr></argument>, <argument pos:start="54:35" pos:end="54:38"><expr pos:start="54:35" pos:end="54:38"><name pos:start="54:35" pos:end="54:38">NULL</name></expr></argument>, <argument pos:start="54:41" pos:end="54:44"><expr pos:start="54:41" pos:end="54:44"><name pos:start="54:41" pos:end="54:44">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="58:5" pos:end="60:33"><if pos:start="58:5" pos:end="60:33">if <condition pos:start="58:8" pos:end="58:33">(<expr pos:start="58:9" pos:end="58:32"><name pos:start="58:9" pos:end="58:28"><name pos:start="58:9" pos:end="58:9">s</name><operator pos:start="58:10" pos:end="58:11">-&gt;</operator><name pos:start="58:12" pos:end="58:28">avoid_negative_ts</name></name> <operator pos:start="58:30" pos:end="58:30">&lt;</operator> <literal type="number" pos:start="58:32" pos:end="58:32">0</literal></expr>)</condition><block type="pseudo" pos:start="60:9" pos:end="60:33"><block_content pos:start="60:9" pos:end="60:33">

        <expr_stmt pos:start="60:9" pos:end="60:33"><expr pos:start="60:9" pos:end="60:32"><name pos:start="60:9" pos:end="60:28"><name pos:start="60:9" pos:end="60:9">s</name><operator pos:start="60:10" pos:end="60:11">-&gt;</operator><name pos:start="60:12" pos:end="60:28">avoid_negative_ts</name></name> <operator pos:start="60:30" pos:end="60:30">=</operator> <literal type="number" pos:start="60:32" pos:end="60:32">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="64:5" pos:end="64:13">return <expr pos:start="64:12" pos:end="64:12"><literal type="number" pos:start="64:12" pos:end="64:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
