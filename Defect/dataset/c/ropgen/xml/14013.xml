<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14013.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:38">test_visitor_in_union_flat</name><parameter_list pos:start="1:39" pos:end="3:58">(<parameter pos:start="1:40" pos:end="1:65"><decl pos:start="1:40" pos:end="1:65"><type pos:start="1:40" pos:end="1:65"><name pos:start="1:40" pos:end="1:59">TestInputVisitorData</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:65">data</name></decl></parameter>,

                                       <parameter pos:start="3:40" pos:end="3:57"><decl pos:start="3:40" pos:end="3:57"><type pos:start="3:40" pos:end="3:57"><specifier pos:start="3:40" pos:end="3:44">const</specifier> <name pos:start="3:46" pos:end="3:49">void</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:57">unused</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="47:1">{<block_content pos:start="7:5" pos:end="45:36">

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">Visitor</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:14">v</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">UserDefFlatUnion</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:25">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:20">UserDefUnionBase</name> <modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:26">base</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="23:53"><expr pos:start="15:5" pos:end="23:52"><name pos:start="15:5" pos:end="15:5">v</name> <operator pos:start="15:7" pos:end="15:7">=</operator> <call pos:start="15:9" pos:end="23:52"><name pos:start="15:9" pos:end="15:31">visitor_input_test_init</name><argument_list pos:start="15:32" pos:end="23:52">(<argument pos:start="15:33" pos:end="15:36"><expr pos:start="15:33" pos:end="15:36"><name pos:start="15:33" pos:end="15:36">data</name></expr></argument>,

                                <argument pos:start="17:33" pos:end="23:51"><expr pos:start="17:33" pos:end="23:51"><literal type="string" pos:start="17:33" pos:end="17:55">"{ 'enum1': 'value1', "</literal>

                                <literal type="string" pos:start="19:33" pos:end="19:49">"'integer': 41, "</literal>

                                <literal type="string" pos:start="21:33" pos:end="21:51">"'string': 'str', "</literal>

                                <literal type="string" pos:start="23:33" pos:end="23:51">"'boolean': true }"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:61"><expr pos:start="27:5" pos:end="27:60"><call pos:start="27:5" pos:end="27:60"><name pos:start="27:5" pos:end="27:31">visit_type_UserDefFlatUnion</name><argument_list pos:start="27:32" pos:end="27:60">(<argument pos:start="27:33" pos:end="27:33"><expr pos:start="27:33" pos:end="27:33"><name pos:start="27:33" pos:end="27:33">v</name></expr></argument>, <argument pos:start="27:36" pos:end="27:39"><expr pos:start="27:36" pos:end="27:39"><name pos:start="27:36" pos:end="27:39">NULL</name></expr></argument>, <argument pos:start="27:42" pos:end="27:45"><expr pos:start="27:42" pos:end="27:45"><operator pos:start="27:42" pos:end="27:42">&amp;</operator><name pos:start="27:43" pos:end="27:45">tmp</name></expr></argument>, <argument pos:start="27:48" pos:end="27:59"><expr pos:start="27:48" pos:end="27:59"><operator pos:start="27:48" pos:end="27:48">&amp;</operator><name pos:start="27:49" pos:end="27:59">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:53"><expr pos:start="29:5" pos:end="29:52"><call pos:start="29:5" pos:end="29:52"><name pos:start="29:5" pos:end="29:19">g_assert_cmpint</name><argument_list pos:start="29:20" pos:end="29:52">(<argument pos:start="29:21" pos:end="29:30"><expr pos:start="29:21" pos:end="29:30"><name pos:start="29:21" pos:end="29:30"><name pos:start="29:21" pos:end="29:23">tmp</name><operator pos:start="29:24" pos:end="29:25">-&gt;</operator><name pos:start="29:26" pos:end="29:30">enum1</name></name></expr></argument>, <argument pos:start="29:33" pos:end="29:34"><expr pos:start="29:33" pos:end="29:34"><operator pos:start="29:33" pos:end="29:34">==</operator></expr></argument>, <argument pos:start="29:37" pos:end="29:51"><expr pos:start="29:37" pos:end="29:51"><name pos:start="29:37" pos:end="29:51">ENUM_ONE_VALUE1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:44"><expr pos:start="31:5" pos:end="31:43"><call pos:start="31:5" pos:end="31:43"><name pos:start="31:5" pos:end="31:19">g_assert_cmpstr</name><argument_list pos:start="31:20" pos:end="31:43">(<argument pos:start="31:21" pos:end="31:31"><expr pos:start="31:21" pos:end="31:31"><name pos:start="31:21" pos:end="31:31"><name pos:start="31:21" pos:end="31:23">tmp</name><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:31">string</name></name></expr></argument>, <argument pos:start="31:34" pos:end="31:35"><expr pos:start="31:34" pos:end="31:35"><operator pos:start="31:34" pos:end="31:35">==</operator></expr></argument>, <argument pos:start="31:38" pos:end="31:42"><expr pos:start="31:38" pos:end="31:42"><literal type="string" pos:start="31:38" pos:end="31:42">"str"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:42"><expr pos:start="33:5" pos:end="33:41"><call pos:start="33:5" pos:end="33:41"><name pos:start="33:5" pos:end="33:19">g_assert_cmpint</name><argument_list pos:start="33:20" pos:end="33:41">(<argument pos:start="33:21" pos:end="33:32"><expr pos:start="33:21" pos:end="33:32"><name pos:start="33:21" pos:end="33:32"><name pos:start="33:21" pos:end="33:23">tmp</name><operator pos:start="33:24" pos:end="33:25">-&gt;</operator><name pos:start="33:26" pos:end="33:32">integer</name></name></expr></argument>, <argument pos:start="33:35" pos:end="33:36"><expr pos:start="33:35" pos:end="33:36"><operator pos:start="33:35" pos:end="33:36">==</operator></expr></argument>, <argument pos:start="33:39" pos:end="33:40"><expr pos:start="33:39" pos:end="33:40"><literal type="number" pos:start="33:39" pos:end="33:40">41</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:54"><expr pos:start="35:5" pos:end="35:53"><call pos:start="35:5" pos:end="35:53"><name pos:start="35:5" pos:end="35:19">g_assert_cmpint</name><argument_list pos:start="35:20" pos:end="35:53">(<argument pos:start="35:21" pos:end="35:42"><expr pos:start="35:21" pos:end="35:42"><name pos:start="35:21" pos:end="35:42"><name pos:start="35:21" pos:end="35:23">tmp</name><operator pos:start="35:24" pos:end="35:25">-&gt;</operator><name pos:start="35:26" pos:end="35:26">u</name><operator pos:start="35:27" pos:end="35:27">.</operator><name pos:start="35:28" pos:end="35:33">value1</name><operator pos:start="35:34" pos:end="35:35">-&gt;</operator><name pos:start="35:36" pos:end="35:42">boolean</name></name></expr></argument>, <argument pos:start="35:45" pos:end="35:46"><expr pos:start="35:45" pos:end="35:46"><operator pos:start="35:45" pos:end="35:46">==</operator></expr></argument>, <argument pos:start="35:49" pos:end="35:52"><expr pos:start="35:49" pos:end="35:52"><name pos:start="35:49" pos:end="35:52">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:43"><expr pos:start="39:5" pos:end="39:42"><name pos:start="39:5" pos:end="39:8">base</name> <operator pos:start="39:10" pos:end="39:10">=</operator> <call pos:start="39:12" pos:end="39:42"><name pos:start="39:12" pos:end="39:37">qapi_UserDefFlatUnion_base</name><argument_list pos:start="39:38" pos:end="39:42">(<argument pos:start="39:39" pos:end="39:41"><expr pos:start="39:39" pos:end="39:41"><name pos:start="39:39" pos:end="39:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:42"><expr pos:start="41:5" pos:end="41:41"><call pos:start="41:5" pos:end="41:41"><name pos:start="41:5" pos:end="41:12">g_assert</name><argument_list pos:start="41:13" pos:end="41:41">(<argument pos:start="41:14" pos:end="41:40"><expr pos:start="41:14" pos:end="41:40"><operator pos:start="41:14" pos:end="41:14">&amp;</operator><name pos:start="41:15" pos:end="41:25"><name pos:start="41:15" pos:end="41:18">base</name><operator pos:start="41:19" pos:end="41:20">-&gt;</operator><name pos:start="41:21" pos:end="41:25">enum1</name></name> <operator pos:start="41:27" pos:end="41:28">==</operator> <operator pos:start="41:30" pos:end="41:30">&amp;</operator><name pos:start="41:31" pos:end="41:40"><name pos:start="41:31" pos:end="41:33">tmp</name><operator pos:start="41:34" pos:end="41:35">-&gt;</operator><name pos:start="41:36" pos:end="41:40">enum1</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:36"><expr pos:start="45:5" pos:end="45:35"><call pos:start="45:5" pos:end="45:35"><name pos:start="45:5" pos:end="45:30">qapi_free_UserDefFlatUnion</name><argument_list pos:start="45:31" pos:end="45:35">(<argument pos:start="45:32" pos:end="45:34"><expr pos:start="45:32" pos:end="45:34"><name pos:start="45:32" pos:end="45:34">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
