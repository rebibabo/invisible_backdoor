<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5323.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">test_media_insert</name><parameter_list pos:start="1:30" pos:end="1:35">(<parameter pos:start="1:31" pos:end="1:34"><decl pos:start="1:31" pos:end="1:34"><type pos:start="1:31" pos:end="1:34"><name pos:start="1:31" pos:end="1:34">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:34">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">uint8_t</name></type> <name pos:start="5:13" pos:end="5:15">dir</name></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="11:18">/* Insert media in drive. DSKCHK should not be reset until a step pulse

     * is sent. */</comment>

    <expr_stmt pos:start="13:5" pos:end="17:37"><expr pos:start="13:5" pos:end="17:36"><call pos:start="13:5" pos:end="17:36"><name pos:start="13:5" pos:end="13:24">qmp_discard_response</name><argument_list pos:start="13:25" pos:end="17:36">(<argument pos:start="13:26" pos:end="15:65"><expr pos:start="13:26" pos:end="15:65"><literal type="string" pos:start="13:26" pos:end="13:61">"{'execute':'change', 'arguments':{"</literal>

                         <literal type="string" pos:start="15:26" pos:end="15:65">" 'device':'floppy0', 'target': '%s' }}"</literal></expr></argument>,

                         <argument pos:start="17:26" pos:end="17:35"><expr pos:start="17:26" pos:end="17:35"><name pos:start="17:26" pos:end="17:35">test_image</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:29"><expr pos:start="19:5" pos:end="19:28"><call pos:start="19:5" pos:end="19:28"><name pos:start="19:5" pos:end="19:24">qmp_discard_response</name><argument_list pos:start="19:25" pos:end="19:28">(<argument pos:start="19:26" pos:end="19:27"><expr pos:start="19:26" pos:end="19:27"><literal type="string" pos:start="19:26" pos:end="19:27">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="19:31" pos:end="21:69">/* ignore event

                                 (FIXME open -&gt; open transition?!) */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:29"><expr pos:start="23:5" pos:end="23:28"><call pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:24">qmp_discard_response</name><argument_list pos:start="23:25" pos:end="23:28">(<argument pos:start="23:26" pos:end="23:27"><expr pos:start="23:26" pos:end="23:27"><literal type="string" pos:start="23:26" pos:end="23:27">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="23:31" pos:end="23:48">/* ignore event */</comment>



    <expr_stmt pos:start="27:5" pos:end="27:37"><expr pos:start="27:5" pos:end="27:36"><name pos:start="27:5" pos:end="27:7">dir</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:36"><name pos:start="27:11" pos:end="27:13">inb</name><argument_list pos:start="27:14" pos:end="27:36">(<argument pos:start="27:15" pos:end="27:35"><expr pos:start="27:15" pos:end="27:35"><name pos:start="27:15" pos:end="27:25">FLOPPY_BASE</name> <operator pos:start="27:27" pos:end="27:27">+</operator> <name pos:start="27:29" pos:end="27:35">reg_dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:32"><expr pos:start="29:5" pos:end="29:31"><call pos:start="29:5" pos:end="29:31"><name pos:start="29:5" pos:end="29:18">assert_bit_set</name><argument_list pos:start="29:19" pos:end="29:31">(<argument pos:start="29:20" pos:end="29:22"><expr pos:start="29:20" pos:end="29:22"><name pos:start="29:20" pos:end="29:22">dir</name></expr></argument>, <argument pos:start="29:25" pos:end="29:30"><expr pos:start="29:25" pos:end="29:30"><name pos:start="29:25" pos:end="29:30">DSKCHG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:37"><expr pos:start="31:5" pos:end="31:36"><name pos:start="31:5" pos:end="31:7">dir</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <call pos:start="31:11" pos:end="31:36"><name pos:start="31:11" pos:end="31:13">inb</name><argument_list pos:start="31:14" pos:end="31:36">(<argument pos:start="31:15" pos:end="31:35"><expr pos:start="31:15" pos:end="31:35"><name pos:start="31:15" pos:end="31:25">FLOPPY_BASE</name> <operator pos:start="31:27" pos:end="31:27">+</operator> <name pos:start="31:29" pos:end="31:35">reg_dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:32"><expr pos:start="33:5" pos:end="33:31"><call pos:start="33:5" pos:end="33:31"><name pos:start="33:5" pos:end="33:18">assert_bit_set</name><argument_list pos:start="33:19" pos:end="33:31">(<argument pos:start="33:20" pos:end="33:22"><expr pos:start="33:20" pos:end="33:22"><name pos:start="33:20" pos:end="33:22">dir</name></expr></argument>, <argument pos:start="33:25" pos:end="33:30"><expr pos:start="33:25" pos:end="33:30"><name pos:start="33:25" pos:end="33:30">DSKCHG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:17"><expr pos:start="37:5" pos:end="37:16"><call pos:start="37:5" pos:end="37:16"><name pos:start="37:5" pos:end="37:13">send_seek</name><argument_list pos:start="37:14" pos:end="37:16">(<argument pos:start="37:15" pos:end="37:15"><expr pos:start="37:15" pos:end="37:15"><literal type="number" pos:start="37:15" pos:end="37:15">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:37"><expr pos:start="39:5" pos:end="39:36"><name pos:start="39:5" pos:end="39:7">dir</name> <operator pos:start="39:9" pos:end="39:9">=</operator> <call pos:start="39:11" pos:end="39:36"><name pos:start="39:11" pos:end="39:13">inb</name><argument_list pos:start="39:14" pos:end="39:36">(<argument pos:start="39:15" pos:end="39:35"><expr pos:start="39:15" pos:end="39:35"><name pos:start="39:15" pos:end="39:25">FLOPPY_BASE</name> <operator pos:start="39:27" pos:end="39:27">+</operator> <name pos:start="39:29" pos:end="39:35">reg_dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:32"><expr pos:start="41:5" pos:end="41:31"><call pos:start="41:5" pos:end="41:31"><name pos:start="41:5" pos:end="41:18">assert_bit_set</name><argument_list pos:start="41:19" pos:end="41:31">(<argument pos:start="41:20" pos:end="41:22"><expr pos:start="41:20" pos:end="41:22"><name pos:start="41:20" pos:end="41:22">dir</name></expr></argument>, <argument pos:start="41:25" pos:end="41:30"><expr pos:start="41:25" pos:end="41:30"><name pos:start="41:25" pos:end="41:30">DSKCHG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:37"><expr pos:start="43:5" pos:end="43:36"><name pos:start="43:5" pos:end="43:7">dir</name> <operator pos:start="43:9" pos:end="43:9">=</operator> <call pos:start="43:11" pos:end="43:36"><name pos:start="43:11" pos:end="43:13">inb</name><argument_list pos:start="43:14" pos:end="43:36">(<argument pos:start="43:15" pos:end="43:35"><expr pos:start="43:15" pos:end="43:35"><name pos:start="43:15" pos:end="43:25">FLOPPY_BASE</name> <operator pos:start="43:27" pos:end="43:27">+</operator> <name pos:start="43:29" pos:end="43:35">reg_dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:32"><expr pos:start="45:5" pos:end="45:31"><call pos:start="45:5" pos:end="45:31"><name pos:start="45:5" pos:end="45:18">assert_bit_set</name><argument_list pos:start="45:19" pos:end="45:31">(<argument pos:start="45:20" pos:end="45:22"><expr pos:start="45:20" pos:end="45:22"><name pos:start="45:20" pos:end="45:22">dir</name></expr></argument>, <argument pos:start="45:25" pos:end="45:30"><expr pos:start="45:25" pos:end="45:30"><name pos:start="45:25" pos:end="45:30">DSKCHG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="49:5" pos:end="49:53">/* Step to next track should clear DSKCHG bit. */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:17"><expr pos:start="51:5" pos:end="51:16"><call pos:start="51:5" pos:end="51:16"><name pos:start="51:5" pos:end="51:13">send_seek</name><argument_list pos:start="51:14" pos:end="51:16">(<argument pos:start="51:15" pos:end="51:15"><expr pos:start="51:15" pos:end="51:15"><literal type="number" pos:start="51:15" pos:end="51:15">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:37"><expr pos:start="53:5" pos:end="53:36"><name pos:start="53:5" pos:end="53:7">dir</name> <operator pos:start="53:9" pos:end="53:9">=</operator> <call pos:start="53:11" pos:end="53:36"><name pos:start="53:11" pos:end="53:13">inb</name><argument_list pos:start="53:14" pos:end="53:36">(<argument pos:start="53:15" pos:end="53:35"><expr pos:start="53:15" pos:end="53:35"><name pos:start="53:15" pos:end="53:25">FLOPPY_BASE</name> <operator pos:start="53:27" pos:end="53:27">+</operator> <name pos:start="53:29" pos:end="53:35">reg_dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:34"><expr pos:start="55:5" pos:end="55:33"><call pos:start="55:5" pos:end="55:33"><name pos:start="55:5" pos:end="55:20">assert_bit_clear</name><argument_list pos:start="55:21" pos:end="55:33">(<argument pos:start="55:22" pos:end="55:24"><expr pos:start="55:22" pos:end="55:24"><name pos:start="55:22" pos:end="55:24">dir</name></expr></argument>, <argument pos:start="55:27" pos:end="55:32"><expr pos:start="55:27" pos:end="55:32"><name pos:start="55:27" pos:end="55:32">DSKCHG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:37"><expr pos:start="57:5" pos:end="57:36"><name pos:start="57:5" pos:end="57:7">dir</name> <operator pos:start="57:9" pos:end="57:9">=</operator> <call pos:start="57:11" pos:end="57:36"><name pos:start="57:11" pos:end="57:13">inb</name><argument_list pos:start="57:14" pos:end="57:36">(<argument pos:start="57:15" pos:end="57:35"><expr pos:start="57:15" pos:end="57:35"><name pos:start="57:15" pos:end="57:25">FLOPPY_BASE</name> <operator pos:start="57:27" pos:end="57:27">+</operator> <name pos:start="57:29" pos:end="57:35">reg_dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:34"><expr pos:start="59:5" pos:end="59:33"><call pos:start="59:5" pos:end="59:33"><name pos:start="59:5" pos:end="59:20">assert_bit_clear</name><argument_list pos:start="59:21" pos:end="59:33">(<argument pos:start="59:22" pos:end="59:24"><expr pos:start="59:22" pos:end="59:24"><name pos:start="59:22" pos:end="59:24">dir</name></expr></argument>, <argument pos:start="59:27" pos:end="59:32"><expr pos:start="59:27" pos:end="59:32"><name pos:start="59:27" pos:end="59:32">DSKCHG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
