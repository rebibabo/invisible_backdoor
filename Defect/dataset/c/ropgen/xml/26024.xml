<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26024.c" pos:tabs="8"><function pos:start="1:1" pos:end="119:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:9">USBDevice</name> <modifier pos:start="1:11" pos:end="1:11">*</modifier></type><name pos:start="1:12" pos:end="1:23">usb_msd_init</name><parameter_list pos:start="1:24" pos:end="1:69">(<parameter pos:start="1:25" pos:end="1:44"><decl pos:start="1:25" pos:end="1:44"><type pos:start="1:25" pos:end="1:44"><specifier pos:start="1:25" pos:end="1:29">const</specifier> <name pos:start="1:31" pos:end="1:34">char</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:44">filename</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:68"><decl pos:start="1:47" pos:end="1:68"><type pos:start="1:47" pos:end="1:68"><name pos:start="1:47" pos:end="1:62">BlockDriverState</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier><modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:68">pbs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="119:1">{<block_content pos:start="5:5" pos:end="117:16">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">MSDState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:15">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">BlockDriverState</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:26">bdrv</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">BlockDriver</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:20">drv</name> <init pos:start="9:22" pos:end="9:27">= <expr pos:start="9:24" pos:end="9:27"><name pos:start="9:24" pos:end="9:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:18">p1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">char</name></type> <name pos:start="13:10" pos:end="13:16"><name pos:start="13:10" pos:end="13:12">fmt</name><index pos:start="13:13" pos:end="13:16">[<expr pos:start="13:14" pos:end="13:15"><literal type="number" pos:start="13:14" pos:end="13:15">32</literal></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:31"><expr pos:start="17:5" pos:end="17:30"><name pos:start="17:5" pos:end="17:6">p1</name> <operator pos:start="17:8" pos:end="17:8">=</operator> <call pos:start="17:10" pos:end="17:30"><name pos:start="17:10" pos:end="17:15">strchr</name><argument_list pos:start="17:16" pos:end="17:30">(<argument pos:start="17:17" pos:end="17:24"><expr pos:start="17:17" pos:end="17:24"><name pos:start="17:17" pos:end="17:24">filename</name></expr></argument>, <argument pos:start="17:27" pos:end="17:29"><expr pos:start="17:27" pos:end="17:29"><literal type="char" pos:start="17:27" pos:end="17:29">':'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="55:5"><if pos:start="19:5" pos:end="55:5">if <condition pos:start="19:8" pos:end="19:13">(<expr pos:start="19:9" pos:end="19:12"><name pos:start="19:9" pos:end="19:10">p1</name><operator pos:start="19:11" pos:end="19:12">++</operator></expr>)</condition> <block pos:start="19:15" pos:end="55:5">{<block_content pos:start="21:9" pos:end="53:22">

        <decl_stmt pos:start="21:9" pos:end="21:23"><decl pos:start="21:9" pos:end="21:22"><type pos:start="21:9" pos:end="21:20"><specifier pos:start="21:9" pos:end="21:13">const</specifier> <name pos:start="21:15" pos:end="21:18">char</name> <modifier pos:start="21:20" pos:end="21:20">*</modifier></type><name pos:start="21:21" pos:end="21:22">p2</name></decl>;</decl_stmt>



        <if_stmt pos:start="25:9" pos:end="49:9"><if pos:start="25:9" pos:end="43:9">if <condition pos:start="25:12" pos:end="25:47">(<expr pos:start="25:13" pos:end="25:46"><call pos:start="25:13" pos:end="25:46"><name pos:start="25:13" pos:end="25:20">strstart</name><argument_list pos:start="25:21" pos:end="25:46">(<argument pos:start="25:22" pos:end="25:29"><expr pos:start="25:22" pos:end="25:29"><name pos:start="25:22" pos:end="25:29">filename</name></expr></argument>, <argument pos:start="25:32" pos:end="25:40"><expr pos:start="25:32" pos:end="25:40"><literal type="string" pos:start="25:32" pos:end="25:40">"format="</literal></expr></argument>, <argument pos:start="25:43" pos:end="25:45"><expr pos:start="25:43" pos:end="25:45"><operator pos:start="25:43" pos:end="25:43">&amp;</operator><name pos:start="25:44" pos:end="25:45">p2</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:49" pos:end="43:9">{<block_content pos:start="27:13" pos:end="41:13">

            <decl_stmt pos:start="27:13" pos:end="27:48"><decl pos:start="27:13" pos:end="27:47"><type pos:start="27:13" pos:end="27:15"><name pos:start="27:13" pos:end="27:15">int</name></type> <name pos:start="27:17" pos:end="27:19">len</name> <init pos:start="27:21" pos:end="27:47">= <expr pos:start="27:23" pos:end="27:47"><call pos:start="27:23" pos:end="27:47"><name pos:start="27:23" pos:end="27:25">MIN</name><argument_list pos:start="27:26" pos:end="27:47">(<argument pos:start="27:27" pos:end="27:33"><expr pos:start="27:27" pos:end="27:33"><name pos:start="27:27" pos:end="27:28">p1</name> <operator pos:start="27:30" pos:end="27:30">-</operator> <name pos:start="27:32" pos:end="27:33">p2</name></expr></argument>, <argument pos:start="27:36" pos:end="27:46"><expr pos:start="27:36" pos:end="27:46"><sizeof pos:start="27:36" pos:end="27:46">sizeof<argument_list pos:start="27:42" pos:end="27:46">(<argument pos:start="27:43" pos:end="27:45"><expr pos:start="27:43" pos:end="27:45"><name pos:start="27:43" pos:end="27:45">fmt</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:34"><expr pos:start="29:13" pos:end="29:33"><call pos:start="29:13" pos:end="29:33"><name pos:start="29:13" pos:end="29:19">pstrcpy</name><argument_list pos:start="29:20" pos:end="29:33">(<argument pos:start="29:21" pos:end="29:23"><expr pos:start="29:21" pos:end="29:23"><name pos:start="29:21" pos:end="29:23">fmt</name></expr></argument>, <argument pos:start="29:26" pos:end="29:28"><expr pos:start="29:26" pos:end="29:28"><name pos:start="29:26" pos:end="29:28">len</name></expr></argument>, <argument pos:start="29:31" pos:end="29:32"><expr pos:start="29:31" pos:end="29:32"><name pos:start="29:31" pos:end="29:32">p2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="33:13" pos:end="33:40"><expr pos:start="33:13" pos:end="33:39"><name pos:start="33:13" pos:end="33:15">drv</name> <operator pos:start="33:17" pos:end="33:17">=</operator> <call pos:start="33:19" pos:end="33:39"><name pos:start="33:19" pos:end="33:34">bdrv_find_format</name><argument_list pos:start="33:35" pos:end="33:39">(<argument pos:start="33:36" pos:end="33:38"><expr pos:start="33:36" pos:end="33:38"><name pos:start="33:36" pos:end="33:38">fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="35:13" pos:end="41:13"><if pos:start="35:13" pos:end="41:13">if <condition pos:start="35:16" pos:end="35:21">(<expr pos:start="35:17" pos:end="35:20"><operator pos:start="35:17" pos:end="35:17">!</operator><name pos:start="35:18" pos:end="35:20">drv</name></expr>)</condition> <block pos:start="35:23" pos:end="41:13">{<block_content pos:start="37:17" pos:end="39:28">

                <expr_stmt pos:start="37:17" pos:end="37:51"><expr pos:start="37:17" pos:end="37:50"><call pos:start="37:17" pos:end="37:50"><name pos:start="37:17" pos:end="37:22">printf</name><argument_list pos:start="37:23" pos:end="37:50">(<argument pos:start="37:24" pos:end="37:44"><expr pos:start="37:24" pos:end="37:44"><literal type="string" pos:start="37:24" pos:end="37:44">"invalid format %s\n"</literal></expr></argument>, <argument pos:start="37:47" pos:end="37:49"><expr pos:start="37:47" pos:end="37:49"><name pos:start="37:47" pos:end="37:49">fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="39:17" pos:end="39:28">return <expr pos:start="39:24" pos:end="39:27"><name pos:start="39:24" pos:end="39:27">NULL</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="43:11" pos:end="49:9">else if <condition pos:start="43:19" pos:end="43:36">(<expr pos:start="43:20" pos:end="43:35"><operator pos:start="43:20" pos:end="43:20">*</operator><name pos:start="43:21" pos:end="43:28">filename</name> <operator pos:start="43:30" pos:end="43:31">!=</operator> <literal type="char" pos:start="43:33" pos:end="43:35">':'</literal></expr>)</condition> <block pos:start="43:38" pos:end="49:9">{<block_content pos:start="45:13" pos:end="47:24">

            <expr_stmt pos:start="45:13" pos:end="45:74"><expr pos:start="45:13" pos:end="45:73"><call pos:start="45:13" pos:end="45:73"><name pos:start="45:13" pos:end="45:18">printf</name><argument_list pos:start="45:19" pos:end="45:73">(<argument pos:start="45:20" pos:end="45:62"><expr pos:start="45:20" pos:end="45:62"><literal type="string" pos:start="45:20" pos:end="45:62">"unrecognized USB mass-storage option %s\n"</literal></expr></argument>, <argument pos:start="45:65" pos:end="45:72"><expr pos:start="45:65" pos:end="45:72"><name pos:start="45:65" pos:end="45:72">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="47:13" pos:end="47:24">return <expr pos:start="47:20" pos:end="47:23"><name pos:start="47:20" pos:end="47:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="53:9" pos:end="53:22"><expr pos:start="53:9" pos:end="53:21"><name pos:start="53:9" pos:end="53:16">filename</name> <operator pos:start="53:18" pos:end="53:18">=</operator> <name pos:start="53:20" pos:end="53:21">p1</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="59:5" pos:end="65:5"><if pos:start="59:5" pos:end="65:5">if <condition pos:start="59:8" pos:end="59:19">(<expr pos:start="59:9" pos:end="59:18"><operator pos:start="59:9" pos:end="59:9">!</operator><operator pos:start="59:10" pos:end="59:10">*</operator><name pos:start="59:11" pos:end="59:18">filename</name></expr>)</condition> <block pos:start="59:21" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:20">

        <expr_stmt pos:start="61:9" pos:end="61:54"><expr pos:start="61:9" pos:end="61:53"><call pos:start="61:9" pos:end="61:53"><name pos:start="61:9" pos:end="61:14">printf</name><argument_list pos:start="61:15" pos:end="61:53">(<argument pos:start="61:16" pos:end="61:52"><expr pos:start="61:16" pos:end="61:52"><literal type="string" pos:start="61:16" pos:end="61:52">"block device specification needed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="63:9" pos:end="63:20">return <expr pos:start="63:16" pos:end="63:19"><name pos:start="63:16" pos:end="63:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:39"><expr pos:start="69:5" pos:end="69:38"><name pos:start="69:5" pos:end="69:5">s</name> <operator pos:start="69:7" pos:end="69:7">=</operator> <call pos:start="69:9" pos:end="69:38"><name pos:start="69:9" pos:end="69:20">qemu_mallocz</name><argument_list pos:start="69:21" pos:end="69:38">(<argument pos:start="69:22" pos:end="69:37"><expr pos:start="69:22" pos:end="69:37"><sizeof pos:start="69:22" pos:end="69:37">sizeof<argument_list pos:start="69:28" pos:end="69:37">(<argument pos:start="69:29" pos:end="69:36"><expr pos:start="69:29" pos:end="69:36"><name pos:start="69:29" pos:end="69:36">MSDState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:27"><expr pos:start="73:5" pos:end="73:26"><name pos:start="73:5" pos:end="73:8">bdrv</name> <operator pos:start="73:10" pos:end="73:10">=</operator> <call pos:start="73:12" pos:end="73:26"><name pos:start="73:12" pos:end="73:19">bdrv_new</name><argument_list pos:start="73:20" pos:end="73:26">(<argument pos:start="73:21" pos:end="73:25"><expr pos:start="73:21" pos:end="73:25"><literal type="string" pos:start="73:21" pos:end="73:25">"usb"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="77:18"><if pos:start="75:5" pos:end="77:18">if <condition pos:start="75:8" pos:end="75:47">(<expr pos:start="75:9" pos:end="75:46"><call pos:start="75:9" pos:end="75:42"><name pos:start="75:9" pos:end="75:18">bdrv_open2</name><argument_list pos:start="75:19" pos:end="75:42">(<argument pos:start="75:20" pos:end="75:23"><expr pos:start="75:20" pos:end="75:23"><name pos:start="75:20" pos:end="75:23">bdrv</name></expr></argument>, <argument pos:start="75:26" pos:end="75:33"><expr pos:start="75:26" pos:end="75:33"><name pos:start="75:26" pos:end="75:33">filename</name></expr></argument>, <argument pos:start="75:36" pos:end="75:36"><expr pos:start="75:36" pos:end="75:36"><literal type="number" pos:start="75:36" pos:end="75:36">0</literal></expr></argument>, <argument pos:start="75:39" pos:end="75:41"><expr pos:start="75:39" pos:end="75:41"><name pos:start="75:39" pos:end="75:41">drv</name></expr></argument>)</argument_list></call> <operator pos:start="75:44" pos:end="75:44">&lt;</operator> <literal type="number" pos:start="75:46" pos:end="75:46">0</literal></expr>)</condition><block type="pseudo" pos:start="77:9" pos:end="77:18"><block_content pos:start="77:9" pos:end="77:18">

        <goto pos:start="77:9" pos:end="77:18">goto <name pos:start="77:14" pos:end="77:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:17"><expr pos:start="79:5" pos:end="79:16"><name pos:start="79:5" pos:end="79:9"><name pos:start="79:5" pos:end="79:5">s</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:9">bs</name></name> <operator pos:start="79:11" pos:end="79:11">=</operator> <name pos:start="79:13" pos:end="79:16">bdrv</name></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:16"><expr pos:start="81:5" pos:end="81:15"><operator pos:start="81:5" pos:end="81:5">*</operator><name pos:start="81:6" pos:end="81:8">pbs</name> <operator pos:start="81:10" pos:end="81:10">=</operator> <name pos:start="81:12" pos:end="81:15">bdrv</name></expr>;</expr_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:34"><expr pos:start="85:5" pos:end="85:33"><name pos:start="85:5" pos:end="85:16"><name pos:start="85:5" pos:end="85:5">s</name><operator pos:start="85:6" pos:end="85:7">-&gt;</operator><name pos:start="85:8" pos:end="85:10">dev</name><operator pos:start="85:11" pos:end="85:11">.</operator><name pos:start="85:12" pos:end="85:16">speed</name></name> <operator pos:start="85:18" pos:end="85:18">=</operator> <name pos:start="85:20" pos:end="85:33">USB_SPEED_FULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:53"><expr pos:start="87:5" pos:end="87:52"><name pos:start="87:5" pos:end="87:24"><name pos:start="87:5" pos:end="87:5">s</name><operator pos:start="87:6" pos:end="87:7">-&gt;</operator><name pos:start="87:8" pos:end="87:10">dev</name><operator pos:start="87:11" pos:end="87:11">.</operator><name pos:start="87:12" pos:end="87:24">handle_packet</name></name> <operator pos:start="87:26" pos:end="87:26">=</operator> <name pos:start="87:28" pos:end="87:52">usb_generic_handle_packet</name></expr>;</expr_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:47"><expr pos:start="91:5" pos:end="91:46"><name pos:start="91:5" pos:end="91:23"><name pos:start="91:5" pos:end="91:5">s</name><operator pos:start="91:6" pos:end="91:7">-&gt;</operator><name pos:start="91:8" pos:end="91:10">dev</name><operator pos:start="91:11" pos:end="91:11">.</operator><name pos:start="91:12" pos:end="91:23">handle_reset</name></name> <operator pos:start="91:25" pos:end="91:25">=</operator> <name pos:start="91:27" pos:end="91:46">usb_msd_handle_reset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:51"><expr pos:start="93:5" pos:end="93:50"><name pos:start="93:5" pos:end="93:25"><name pos:start="93:5" pos:end="93:5">s</name><operator pos:start="93:6" pos:end="93:7">-&gt;</operator><name pos:start="93:8" pos:end="93:10">dev</name><operator pos:start="93:11" pos:end="93:11">.</operator><name pos:start="93:12" pos:end="93:25">handle_control</name></name> <operator pos:start="93:27" pos:end="93:27">=</operator> <name pos:start="93:29" pos:end="93:50">usb_msd_handle_control</name></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:45"><expr pos:start="95:5" pos:end="95:44"><name pos:start="95:5" pos:end="95:22"><name pos:start="95:5" pos:end="95:5">s</name><operator pos:start="95:6" pos:end="95:7">-&gt;</operator><name pos:start="95:8" pos:end="95:10">dev</name><operator pos:start="95:11" pos:end="95:11">.</operator><name pos:start="95:12" pos:end="95:22">handle_data</name></name> <operator pos:start="95:24" pos:end="95:24">=</operator> <name pos:start="95:26" pos:end="95:44">usb_msd_handle_data</name></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:51"><expr pos:start="97:5" pos:end="97:50"><name pos:start="97:5" pos:end="97:25"><name pos:start="97:5" pos:end="97:5">s</name><operator pos:start="97:6" pos:end="97:7">-&gt;</operator><name pos:start="97:8" pos:end="97:10">dev</name><operator pos:start="97:11" pos:end="97:11">.</operator><name pos:start="97:12" pos:end="97:25">handle_destroy</name></name> <operator pos:start="97:27" pos:end="97:27">=</operator> <name pos:start="97:29" pos:end="97:50">usb_msd_handle_destroy</name></expr>;</expr_stmt>



    <expr_stmt pos:start="101:5" pos:end="103:23"><expr pos:start="101:5" pos:end="103:22"><call pos:start="101:5" pos:end="103:22"><name pos:start="101:5" pos:end="101:12">snprintf</name><argument_list pos:start="101:13" pos:end="103:22">(<argument pos:start="101:14" pos:end="101:27"><expr pos:start="101:14" pos:end="101:27"><name pos:start="101:14" pos:end="101:27"><name pos:start="101:14" pos:end="101:14">s</name><operator pos:start="101:15" pos:end="101:16">-&gt;</operator><name pos:start="101:17" pos:end="101:19">dev</name><operator pos:start="101:20" pos:end="101:20">.</operator><name pos:start="101:21" pos:end="101:27">devname</name></name></expr></argument>, <argument pos:start="101:30" pos:end="101:51"><expr pos:start="101:30" pos:end="101:51"><sizeof pos:start="101:30" pos:end="101:51">sizeof<argument_list pos:start="101:36" pos:end="101:51">(<argument pos:start="101:37" pos:end="101:50"><expr pos:start="101:37" pos:end="101:50"><name pos:start="101:37" pos:end="101:50"><name pos:start="101:37" pos:end="101:37">s</name><operator pos:start="101:38" pos:end="101:39">-&gt;</operator><name pos:start="101:40" pos:end="101:42">dev</name><operator pos:start="101:43" pos:end="101:43">.</operator><name pos:start="101:44" pos:end="101:50">devname</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="101:54" pos:end="101:74"><expr pos:start="101:54" pos:end="101:74"><literal type="string" pos:start="101:54" pos:end="101:74">"QEMU USB MSD(%.16s)"</literal></expr></argument>,

             <argument pos:start="103:14" pos:end="103:21"><expr pos:start="103:14" pos:end="103:21"><name pos:start="103:14" pos:end="103:21">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="107:5" pos:end="107:71"><expr pos:start="107:5" pos:end="107:70"><name pos:start="107:5" pos:end="107:15"><name pos:start="107:5" pos:end="107:5">s</name><operator pos:start="107:6" pos:end="107:7">-&gt;</operator><name pos:start="107:8" pos:end="107:15">scsi_dev</name></name> <operator pos:start="107:17" pos:end="107:17">=</operator> <call pos:start="107:19" pos:end="107:70"><name pos:start="107:19" pos:end="107:32">scsi_disk_init</name><argument_list pos:start="107:33" pos:end="107:70">(<argument pos:start="107:34" pos:end="107:37"><expr pos:start="107:34" pos:end="107:37"><name pos:start="107:34" pos:end="107:37">bdrv</name></expr></argument>, <argument pos:start="107:40" pos:end="107:40"><expr pos:start="107:40" pos:end="107:40"><literal type="number" pos:start="107:40" pos:end="107:40">0</literal></expr></argument>, <argument pos:start="107:43" pos:end="107:66"><expr pos:start="107:43" pos:end="107:66"><name pos:start="107:43" pos:end="107:66">usb_msd_command_complete</name></expr></argument>, <argument pos:start="107:69" pos:end="107:69"><expr pos:start="107:69" pos:end="107:69"><name pos:start="107:69" pos:end="107:69">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:41"><expr pos:start="109:5" pos:end="109:40"><call pos:start="109:5" pos:end="109:40"><name pos:start="109:5" pos:end="109:24">usb_msd_handle_reset</name><argument_list pos:start="109:25" pos:end="109:40">(<argument pos:start="109:26" pos:end="109:39"><expr pos:start="109:26" pos:end="109:39"><operator pos:start="109:26" pos:end="109:26">(</operator><name pos:start="109:27" pos:end="109:35">USBDevice</name> <operator pos:start="109:37" pos:end="109:37">*</operator><operator pos:start="109:38" pos:end="109:38">)</operator><name pos:start="109:39" pos:end="109:39">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="111:5" pos:end="111:26">return <expr pos:start="111:12" pos:end="111:25"><operator pos:start="111:12" pos:end="111:12">(</operator><name pos:start="111:13" pos:end="111:21">USBDevice</name> <operator pos:start="111:23" pos:end="111:23">*</operator><operator pos:start="111:24" pos:end="111:24">)</operator><name pos:start="111:25" pos:end="111:25">s</name></expr>;</return>

 <label pos:start="113:2" pos:end="113:6"><name pos:start="113:2" pos:end="113:5">fail</name>:</label>

    <expr_stmt pos:start="115:5" pos:end="115:17"><expr pos:start="115:5" pos:end="115:16"><call pos:start="115:5" pos:end="115:16"><name pos:start="115:5" pos:end="115:13">qemu_free</name><argument_list pos:start="115:14" pos:end="115:16">(<argument pos:start="115:15" pos:end="115:15"><expr pos:start="115:15" pos:end="115:15"><name pos:start="115:15" pos:end="115:15">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="117:5" pos:end="117:16">return <expr pos:start="117:12" pos:end="117:15"><name pos:start="117:12" pos:end="117:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
