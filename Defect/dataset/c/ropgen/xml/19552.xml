<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19552.c" pos:tabs="8"><function pos:start="1:1" pos:end="11:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">unsigned</name></type> <name pos:start="1:17" pos:end="1:26">tget_short</name><parameter_list pos:start="1:27" pos:end="1:53">(<parameter pos:start="1:28" pos:end="1:44"><decl pos:start="1:28" pos:end="1:44"><type pos:start="1:28" pos:end="1:44"><specifier pos:start="1:28" pos:end="1:32">const</specifier> <name pos:start="1:34" pos:end="1:40">uint8_t</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier><modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">p</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:52"><decl pos:start="1:47" pos:end="1:52"><type pos:start="1:47" pos:end="1:52"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:52">le</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="11:1">{<block_content pos:start="5:5" pos:end="9:13">

    <decl_stmt pos:start="5:5" pos:end="5:48"><decl pos:start="5:5" pos:end="5:47"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">unsigned</name></type> <name pos:start="5:14" pos:end="5:14">v</name> <init pos:start="5:16" pos:end="5:47">= <expr pos:start="5:18" pos:end="5:47"><ternary pos:start="5:18" pos:end="5:47"><condition pos:start="5:18" pos:end="5:21"><expr pos:start="5:18" pos:end="5:19"><name pos:start="5:18" pos:end="5:19">le</name></expr> ?</condition><then pos:start="5:23" pos:end="5:33"> <expr pos:start="5:23" pos:end="5:33"><call pos:start="5:23" pos:end="5:33"><name pos:start="5:23" pos:end="5:29">AV_RL16</name><argument_list pos:start="5:30" pos:end="5:33">(<argument pos:start="5:31" pos:end="5:32"><expr pos:start="5:31" pos:end="5:32"><operator pos:start="5:31" pos:end="5:31">*</operator><name pos:start="5:32" pos:end="5:32">p</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="5:35" pos:end="5:47">: <expr pos:start="5:37" pos:end="5:47"><call pos:start="5:37" pos:end="5:47"><name pos:start="5:37" pos:end="5:43">AV_RB16</name><argument_list pos:start="5:44" pos:end="5:47">(<argument pos:start="5:45" pos:end="5:46"><expr pos:start="5:45" pos:end="5:46"><operator pos:start="5:45" pos:end="5:45">*</operator><name pos:start="5:46" pos:end="5:46">p</name></expr></argument>)</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:12"><expr pos:start="7:5" pos:end="7:11"><operator pos:start="7:5" pos:end="7:5">*</operator><name pos:start="7:6" pos:end="7:6">p</name> <operator pos:start="7:8" pos:end="7:9">+=</operator> <literal type="number" pos:start="7:11" pos:end="7:11">2</literal></expr>;</expr_stmt>

    <return pos:start="9:5" pos:end="9:13">return <expr pos:start="9:12" pos:end="9:12"><name pos:start="9:12" pos:end="9:12">v</name></expr>;</return>

</block_content>}</block></function>
</unit>
