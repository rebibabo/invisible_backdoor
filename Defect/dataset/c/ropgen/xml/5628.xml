<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5628.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:23">virtio_setup_block</name><parameter_list pos:start="1:24" pos:end="1:51">(<parameter pos:start="1:25" pos:end="1:50"><decl pos:start="1:25" pos:end="1:50"><type pos:start="1:25" pos:end="1:50"><name pos:start="1:25" pos:end="1:44"><name pos:start="1:25" pos:end="1:30">struct</name> <name pos:start="1:32" pos:end="1:44">subchannel_id</name></name></type> <name pos:start="1:46" pos:end="1:50">schid</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:5" pos:end="81:5">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:24">vq_info_block</name></name></type> <name pos:start="5:26" pos:end="5:29">info</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:26"><name pos:start="7:5" pos:end="7:26"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:26">vq_config_block</name></name></type> <name pos:start="7:28" pos:end="7:33">config</name> <init pos:start="7:35" pos:end="7:38">= <expr pos:start="7:37" pos:end="7:38"><block pos:start="7:37" pos:end="7:38">{}</block></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:25"><expr pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:11">blk_cfg</name><operator pos:start="11:12" pos:end="11:12">.</operator><name pos:start="11:13" pos:end="11:20">blk_size</name></name> <operator pos:start="11:22" pos:end="11:22">=</operator> <literal type="number" pos:start="11:24" pos:end="11:24">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="11:27" pos:end="11:65">/* mark "illegal" - setup started... */</comment>

    <expr_stmt pos:start="13:5" pos:end="13:32"><expr pos:start="13:5" pos:end="13:31"><name pos:start="13:5" pos:end="13:23">guessed_disk_nature</name> <operator pos:start="13:25" pos:end="13:25">=</operator> <name pos:start="13:27" pos:end="13:31">false</name></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:24"><expr pos:start="17:5" pos:end="17:23"><call pos:start="17:5" pos:end="17:23"><name pos:start="17:5" pos:end="17:16">virtio_reset</name><argument_list pos:start="17:17" pos:end="17:23">(<argument pos:start="17:18" pos:end="17:22"><expr pos:start="17:18" pos:end="17:22"><name pos:start="17:18" pos:end="17:22">schid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="21:5" pos:end="29:7">/*

     * Skipping CCW_CMD_READ_FEAT. We're not doing anything fancy, and

     * we'll just stop dead anyway if anything does not work like we

     * expect it.

     */</comment>



    <expr_stmt pos:start="33:5" pos:end="33:21"><expr pos:start="33:5" pos:end="33:20"><name pos:start="33:5" pos:end="33:16"><name pos:start="33:5" pos:end="33:10">config</name><operator pos:start="33:11" pos:end="33:11">.</operator><name pos:start="33:12" pos:end="33:16">index</name></name> <operator pos:start="33:18" pos:end="33:18">=</operator> <literal type="number" pos:start="33:20" pos:end="33:20">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="39:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:70">(<expr pos:start="35:9" pos:end="35:69"><call pos:start="35:9" pos:end="35:69"><name pos:start="35:9" pos:end="35:15">run_ccw</name><argument_list pos:start="35:16" pos:end="35:69">(<argument pos:start="35:17" pos:end="35:21"><expr pos:start="35:17" pos:end="35:21"><name pos:start="35:17" pos:end="35:21">schid</name></expr></argument>, <argument pos:start="35:24" pos:end="35:43"><expr pos:start="35:24" pos:end="35:43"><name pos:start="35:24" pos:end="35:43">CCW_CMD_READ_VQ_CONF</name></expr></argument>, <argument pos:start="35:46" pos:end="35:52"><expr pos:start="35:46" pos:end="35:52"><operator pos:start="35:46" pos:end="35:46">&amp;</operator><name pos:start="35:47" pos:end="35:52">config</name></expr></argument>, <argument pos:start="35:55" pos:end="35:68"><expr pos:start="35:55" pos:end="35:68"><sizeof pos:start="35:55" pos:end="35:68">sizeof<argument_list pos:start="35:61" pos:end="35:68">(<argument pos:start="35:62" pos:end="35:67"><expr pos:start="35:62" pos:end="35:67"><name pos:start="35:62" pos:end="35:67">config</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:72" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:70">

        <expr_stmt pos:start="37:9" pos:end="37:70"><expr pos:start="37:9" pos:end="37:69"><call pos:start="37:9" pos:end="37:69"><name pos:start="37:9" pos:end="37:20">virtio_panic</name><argument_list pos:start="37:21" pos:end="37:69">(<argument pos:start="37:22" pos:end="37:68"><expr pos:start="37:22" pos:end="37:68"><literal type="string" pos:start="37:22" pos:end="37:68">"Could not get block device VQ configuration\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="41:5" pos:end="45:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="41:69">(<expr pos:start="41:9" pos:end="41:68"><call pos:start="41:9" pos:end="41:68"><name pos:start="41:9" pos:end="41:15">run_ccw</name><argument_list pos:start="41:16" pos:end="41:68">(<argument pos:start="41:17" pos:end="41:21"><expr pos:start="41:17" pos:end="41:21"><name pos:start="41:17" pos:end="41:21">schid</name></expr></argument>, <argument pos:start="41:24" pos:end="41:40"><expr pos:start="41:24" pos:end="41:40"><name pos:start="41:24" pos:end="41:40">CCW_CMD_READ_CONF</name></expr></argument>, <argument pos:start="41:43" pos:end="41:50"><expr pos:start="41:43" pos:end="41:50"><operator pos:start="41:43" pos:end="41:43">&amp;</operator><name pos:start="41:44" pos:end="41:50">blk_cfg</name></expr></argument>, <argument pos:start="41:53" pos:end="41:67"><expr pos:start="41:53" pos:end="41:67"><sizeof pos:start="41:53" pos:end="41:67">sizeof<argument_list pos:start="41:59" pos:end="41:67">(<argument pos:start="41:60" pos:end="41:66"><expr pos:start="41:60" pos:end="41:66"><name pos:start="41:60" pos:end="41:66">blk_cfg</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:71" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:67">

        <expr_stmt pos:start="43:9" pos:end="43:67"><expr pos:start="43:9" pos:end="43:66"><call pos:start="43:9" pos:end="43:66"><name pos:start="43:9" pos:end="43:20">virtio_panic</name><argument_list pos:start="43:21" pos:end="43:66">(<argument pos:start="43:22" pos:end="43:65"><expr pos:start="43:22" pos:end="43:65"><literal type="string" pos:start="43:22" pos:end="43:65">"Could not get block device configuration\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="47:5" pos:end="49:43"><expr pos:start="47:5" pos:end="49:42"><call pos:start="47:5" pos:end="49:42"><name pos:start="47:5" pos:end="47:14">vring_init</name><argument_list pos:start="47:15" pos:end="49:42">(<argument pos:start="47:16" pos:end="47:21"><expr pos:start="47:16" pos:end="47:21"><operator pos:start="47:16" pos:end="47:16">&amp;</operator><name pos:start="47:17" pos:end="47:21">block</name></expr></argument>, <argument pos:start="47:24" pos:end="47:33"><expr pos:start="47:24" pos:end="47:33"><name pos:start="47:24" pos:end="47:33"><name pos:start="47:24" pos:end="47:29">config</name><operator pos:start="47:30" pos:end="47:30">.</operator><name pos:start="47:31" pos:end="47:33">num</name></name></expr></argument>, <argument pos:start="47:36" pos:end="47:44"><expr pos:start="47:36" pos:end="47:44"><name pos:start="47:36" pos:end="47:44">ring_area</name></expr></argument>,

               <argument pos:start="49:16" pos:end="49:41"><expr pos:start="49:16" pos:end="49:41"><name pos:start="49:16" pos:end="49:41">KVM_S390_VIRTIO_RING_ALIGN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:48"><expr pos:start="53:5" pos:end="53:47"><name pos:start="53:5" pos:end="53:14"><name pos:start="53:5" pos:end="53:8">info</name><operator pos:start="53:9" pos:end="53:9">.</operator><name pos:start="53:10" pos:end="53:14">queue</name></name> <operator pos:start="53:16" pos:end="53:16">=</operator> <operator pos:start="53:18" pos:end="53:18">(</operator><name pos:start="53:19" pos:end="53:26">unsigned</name> <name pos:start="53:28" pos:end="53:31">long</name> <name pos:start="53:33" pos:end="53:36">long</name><operator pos:start="53:37" pos:end="53:37">)</operator> <name pos:start="53:39" pos:end="53:47">ring_area</name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:44"><expr pos:start="55:5" pos:end="55:43"><name pos:start="55:5" pos:end="55:14"><name pos:start="55:5" pos:end="55:8">info</name><operator pos:start="55:9" pos:end="55:9">.</operator><name pos:start="55:10" pos:end="55:14">align</name></name> <operator pos:start="55:16" pos:end="55:16">=</operator> <name pos:start="55:18" pos:end="55:43">KVM_S390_VIRTIO_RING_ALIGN</name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:19"><expr pos:start="57:5" pos:end="57:18"><name pos:start="57:5" pos:end="57:14"><name pos:start="57:5" pos:end="57:8">info</name><operator pos:start="57:9" pos:end="57:9">.</operator><name pos:start="57:10" pos:end="57:14">index</name></name> <operator pos:start="57:16" pos:end="57:16">=</operator> <literal type="number" pos:start="57:18" pos:end="57:18">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:26"><expr pos:start="59:5" pos:end="59:25"><name pos:start="59:5" pos:end="59:12"><name pos:start="59:5" pos:end="59:8">info</name><operator pos:start="59:9" pos:end="59:9">.</operator><name pos:start="59:10" pos:end="59:12">num</name></name> <operator pos:start="59:14" pos:end="59:14">=</operator> <name pos:start="59:16" pos:end="59:25"><name pos:start="59:16" pos:end="59:21">config</name><operator pos:start="59:22" pos:end="59:22">.</operator><name pos:start="59:23" pos:end="59:25">num</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:24"><expr pos:start="61:5" pos:end="61:23"><name pos:start="61:5" pos:end="61:15"><name pos:start="61:5" pos:end="61:9">block</name><operator pos:start="61:10" pos:end="61:10">.</operator><name pos:start="61:11" pos:end="61:15">schid</name></name> <operator pos:start="61:17" pos:end="61:17">=</operator> <name pos:start="61:19" pos:end="61:23">schid</name></expr>;</expr_stmt>



    <if_stmt pos:start="65:5" pos:end="69:5"><if pos:start="65:5" pos:end="69:5">if <condition pos:start="65:8" pos:end="65:61">(<expr pos:start="65:9" pos:end="65:60"><operator pos:start="65:9" pos:end="65:9">!</operator><call pos:start="65:10" pos:end="65:60"><name pos:start="65:10" pos:end="65:16">run_ccw</name><argument_list pos:start="65:17" pos:end="65:60">(<argument pos:start="65:18" pos:end="65:22"><expr pos:start="65:18" pos:end="65:22"><name pos:start="65:18" pos:end="65:22">schid</name></expr></argument>, <argument pos:start="65:25" pos:end="65:38"><expr pos:start="65:25" pos:end="65:38"><name pos:start="65:25" pos:end="65:38">CCW_CMD_SET_VQ</name></expr></argument>, <argument pos:start="65:41" pos:end="65:45"><expr pos:start="65:41" pos:end="65:45"><operator pos:start="65:41" pos:end="65:41">&amp;</operator><name pos:start="65:42" pos:end="65:45">info</name></expr></argument>, <argument pos:start="65:48" pos:end="65:59"><expr pos:start="65:48" pos:end="65:59"><sizeof pos:start="65:48" pos:end="65:59">sizeof<argument_list pos:start="65:54" pos:end="65:59">(<argument pos:start="65:55" pos:end="65:58"><expr pos:start="65:55" pos:end="65:58"><name pos:start="65:55" pos:end="65:58">info</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="65:63" pos:end="69:5">{<block_content pos:start="67:9" pos:end="67:60">

        <expr_stmt pos:start="67:9" pos:end="67:60"><expr pos:start="67:9" pos:end="67:59"><call pos:start="67:9" pos:end="67:59"><name pos:start="67:9" pos:end="67:25">virtio_set_status</name><argument_list pos:start="67:26" pos:end="67:59">(<argument pos:start="67:27" pos:end="67:31"><expr pos:start="67:27" pos:end="67:31"><name pos:start="67:27" pos:end="67:31">schid</name></expr></argument>, <argument pos:start="67:34" pos:end="67:58"><expr pos:start="67:34" pos:end="67:58"><name pos:start="67:34" pos:end="67:58">VIRTIO_CONFIG_S_DRIVER_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="73:5" pos:end="81:5"><if pos:start="73:5" pos:end="81:5">if <condition pos:start="73:8" pos:end="73:36">(<expr pos:start="73:9" pos:end="73:35"><operator pos:start="73:9" pos:end="73:9">!</operator><call pos:start="73:10" pos:end="73:35"><name pos:start="73:10" pos:end="73:33">virtio_ipl_disk_is_valid</name><argument_list pos:start="73:34" pos:end="73:35">()</argument_list></call></expr>)</condition> <block pos:start="73:38" pos:end="81:5">{<block_content pos:start="77:9" pos:end="79:29">

        <comment type="block" pos:start="75:9" pos:end="75:79">/* make sure all getters but blocksize return 0 for invalid IPL disk */</comment>

        <expr_stmt pos:start="77:9" pos:end="77:45"><expr pos:start="77:9" pos:end="77:44"><call pos:start="77:9" pos:end="77:44"><name pos:start="77:9" pos:end="77:14">memset</name><argument_list pos:start="77:15" pos:end="77:44">(<argument pos:start="77:16" pos:end="77:23"><expr pos:start="77:16" pos:end="77:23"><operator pos:start="77:16" pos:end="77:16">&amp;</operator><name pos:start="77:17" pos:end="77:23">blk_cfg</name></expr></argument>, <argument pos:start="77:26" pos:end="77:26"><expr pos:start="77:26" pos:end="77:26"><literal type="number" pos:start="77:26" pos:end="77:26">0</literal></expr></argument>, <argument pos:start="77:29" pos:end="77:43"><expr pos:start="77:29" pos:end="77:43"><sizeof pos:start="77:29" pos:end="77:43">sizeof<argument_list pos:start="77:35" pos:end="77:43">(<argument pos:start="77:36" pos:end="77:42"><expr pos:start="77:36" pos:end="77:42"><name pos:start="77:36" pos:end="77:42">blk_cfg</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:29"><expr pos:start="79:9" pos:end="79:28"><call pos:start="79:9" pos:end="79:28"><name pos:start="79:9" pos:end="79:26">virtio_assume_scsi</name><argument_list pos:start="79:27" pos:end="79:28">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
