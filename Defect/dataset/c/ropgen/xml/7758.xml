<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7758.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">bool</name></type> <name pos:start="1:6" pos:end="1:17">cpu_exec_all</name><parameter_list pos:start="1:18" pos:end="1:23">(<parameter pos:start="1:19" pos:end="1:22"><decl pos:start="1:19" pos:end="1:22"><type pos:start="1:19" pos:end="1:22"><name pos:start="1:19" pos:end="1:22">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:30">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name> <init pos:start="5:13" pos:end="5:15">= <expr pos:start="5:15" pos:end="5:15"><literal type="number" pos:start="5:15" pos:end="5:15">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:29"><if pos:start="9:5" pos:end="11:29">if <condition pos:start="9:8" pos:end="9:25">(<expr pos:start="9:9" pos:end="9:24"><name pos:start="9:9" pos:end="9:16">next_cpu</name> <operator pos:start="9:18" pos:end="9:19">==</operator> <name pos:start="9:21" pos:end="9:24">NULL</name></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:29"><block_content pos:start="11:9" pos:end="11:29">

        <expr_stmt pos:start="11:9" pos:end="11:29"><expr pos:start="11:9" pos:end="11:28"><name pos:start="11:9" pos:end="11:16">next_cpu</name> <operator pos:start="11:18" pos:end="11:18">=</operator> <name pos:start="11:20" pos:end="11:28">first_cpu</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <for pos:start="13:5" pos:end="49:5">for <control pos:start="13:9" pos:end="13:76">(<init pos:start="13:10" pos:end="13:10">;</init> <condition pos:start="13:12" pos:end="13:45"><expr pos:start="13:12" pos:end="13:44"><name pos:start="13:12" pos:end="13:19">next_cpu</name> <operator pos:start="13:21" pos:end="13:22">!=</operator> <name pos:start="13:24" pos:end="13:27">NULL</name> <operator pos:start="13:29" pos:end="13:30">&amp;&amp;</operator> <operator pos:start="13:32" pos:end="13:32">!</operator><name pos:start="13:33" pos:end="13:44">exit_request</name></expr>;</condition> <incr pos:start="13:47" pos:end="13:75"><expr pos:start="13:47" pos:end="13:75"><name pos:start="13:47" pos:end="13:54">next_cpu</name> <operator pos:start="13:56" pos:end="13:56">=</operator> <name pos:start="13:58" pos:end="13:75"><name pos:start="13:58" pos:end="13:65">next_cpu</name><operator pos:start="13:66" pos:end="13:67">-&gt;</operator><name pos:start="13:68" pos:end="13:75">next_cpu</name></name></expr></incr>)</control> <block pos:start="13:78" pos:end="49:5">{<block_content pos:start="15:9" pos:end="47:9">

        <decl_stmt pos:start="15:9" pos:end="15:33"><decl pos:start="15:9" pos:end="15:32"><type pos:start="15:9" pos:end="15:18"><name pos:start="15:9" pos:end="15:16">CPUState</name> <modifier pos:start="15:18" pos:end="15:18">*</modifier></type><name pos:start="15:19" pos:end="15:21">env</name> <init pos:start="15:23" pos:end="15:32">= <expr pos:start="15:25" pos:end="15:32"><name pos:start="15:25" pos:end="15:32">next_cpu</name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="19:9" pos:end="21:74"><expr pos:start="19:9" pos:end="21:73"><call pos:start="19:9" pos:end="21:73"><name pos:start="19:9" pos:end="19:25">qemu_clock_enable</name><argument_list pos:start="19:26" pos:end="21:73">(<argument pos:start="19:27" pos:end="19:34"><expr pos:start="19:27" pos:end="19:34"><name pos:start="19:27" pos:end="19:34">vm_clock</name></expr></argument>,

                          <argument pos:start="21:27" pos:end="21:72"><expr pos:start="21:27" pos:end="21:72"><operator pos:start="21:27" pos:end="21:27">(</operator><name pos:start="21:28" pos:end="21:50"><name pos:start="21:28" pos:end="21:30">env</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:50">singlestep_enabled</name></name> <operator pos:start="21:52" pos:end="21:52">&amp;</operator> <name pos:start="21:54" pos:end="21:66">SSTEP_NOTIMER</name><operator pos:start="21:67" pos:end="21:67">)</operator> <operator pos:start="21:69" pos:end="21:70">==</operator> <literal type="number" pos:start="21:72" pos:end="21:72">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="25:9" pos:end="27:18"><if pos:start="25:9" pos:end="27:18">if <condition pos:start="25:12" pos:end="25:33">(<expr pos:start="25:13" pos:end="25:32"><call pos:start="25:13" pos:end="25:32"><name pos:start="25:13" pos:end="25:30">qemu_alarm_pending</name><argument_list pos:start="25:31" pos:end="25:32">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:18"><block_content pos:start="27:13" pos:end="27:18">

            <break pos:start="27:13" pos:end="27:18">break;</break></block_content></block></if></if_stmt>

        <if_stmt pos:start="29:9" pos:end="35:18"><if pos:start="29:9" pos:end="31:37">if <condition pos:start="29:12" pos:end="29:29">(<expr pos:start="29:13" pos:end="29:28"><call pos:start="29:13" pos:end="29:28"><name pos:start="29:13" pos:end="29:23">cpu_can_run</name><argument_list pos:start="29:24" pos:end="29:28">(<argument pos:start="29:25" pos:end="29:27"><expr pos:start="29:25" pos:end="29:27"><name pos:start="29:25" pos:end="29:27">env</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:37"><block_content pos:start="31:13" pos:end="31:37">

            <expr_stmt pos:start="31:13" pos:end="31:37"><expr pos:start="31:13" pos:end="31:36"><name pos:start="31:13" pos:end="31:15">ret</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <call pos:start="31:19" pos:end="31:36"><name pos:start="31:19" pos:end="31:31">qemu_cpu_exec</name><argument_list pos:start="31:32" pos:end="31:36">(<argument pos:start="31:33" pos:end="31:35"><expr pos:start="31:33" pos:end="31:35"><name pos:start="31:33" pos:end="31:35">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="33:9" pos:end="35:18">else if <condition pos:start="33:17" pos:end="33:27">(<expr pos:start="33:18" pos:end="33:26"><name pos:start="33:18" pos:end="33:26"><name pos:start="33:18" pos:end="33:20">env</name><operator pos:start="33:21" pos:end="33:22">-&gt;</operator><name pos:start="33:23" pos:end="33:26">stop</name></name></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:18"><block_content pos:start="35:13" pos:end="35:18">

            <break pos:start="35:13" pos:end="35:18">break;</break></block_content></block></if></if_stmt>



        <if_stmt pos:start="39:9" pos:end="47:9"><if pos:start="39:9" pos:end="47:9">if <condition pos:start="39:12" pos:end="39:30">(<expr pos:start="39:13" pos:end="39:29"><name pos:start="39:13" pos:end="39:15">ret</name> <operator pos:start="39:17" pos:end="39:18">==</operator> <name pos:start="39:20" pos:end="39:29">EXCP_DEBUG</name></expr>)</condition> <block pos:start="39:32" pos:end="47:9">{<block_content pos:start="41:13" pos:end="45:18">

            <expr_stmt pos:start="41:13" pos:end="41:34"><expr pos:start="41:13" pos:end="41:33"><call pos:start="41:13" pos:end="41:33"><name pos:start="41:13" pos:end="41:28">gdb_set_stop_cpu</name><argument_list pos:start="41:29" pos:end="41:33">(<argument pos:start="41:30" pos:end="41:32"><expr pos:start="41:30" pos:end="41:32"><name pos:start="41:30" pos:end="41:32">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:41"><expr pos:start="43:13" pos:end="43:40"><name pos:start="43:13" pos:end="43:27">debug_requested</name> <operator pos:start="43:29" pos:end="43:29">=</operator> <name pos:start="43:31" pos:end="43:40">EXCP_DEBUG</name></expr>;</expr_stmt>

            <break pos:start="45:13" pos:end="45:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="51:5" pos:end="51:21"><expr pos:start="51:5" pos:end="51:20"><name pos:start="51:5" pos:end="51:16">exit_request</name> <operator pos:start="51:18" pos:end="51:18">=</operator> <literal type="number" pos:start="51:20" pos:end="51:20">0</literal></expr>;</expr_stmt>

    <return pos:start="53:5" pos:end="53:30">return <expr pos:start="53:12" pos:end="53:29"><call pos:start="53:12" pos:end="53:29"><name pos:start="53:12" pos:end="53:27">any_cpu_has_work</name><argument_list pos:start="53:28" pos:end="53:29">()</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
