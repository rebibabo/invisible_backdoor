<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15314.c" pos:tabs="8"><function pos:start="1:1" pos:end="17:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:25">pcie_host_mmcfg_init</name><parameter_list pos:start="1:26" pos:end="1:59">(<parameter pos:start="1:27" pos:end="1:43"><decl pos:start="1:27" pos:end="1:43"><type pos:start="1:27" pos:end="1:43"><name pos:start="1:27" pos:end="1:40">PCIExpressHost</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">e</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:58"><decl pos:start="1:46" pos:end="1:58"><type pos:start="1:46" pos:end="1:58"><name pos:start="1:46" pos:end="1:53">uint32_t</name></type> <name pos:start="1:55" pos:end="1:58">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="17:1">{<block_content pos:start="5:5" pos:end="15:49">

    <expr_stmt pos:start="5:5" pos:end="5:33"><expr pos:start="5:5" pos:end="5:32"><call pos:start="5:5" pos:end="5:32"><name pos:start="5:5" pos:end="5:10">assert</name><argument_list pos:start="5:11" pos:end="5:32">(<argument pos:start="5:12" pos:end="5:31"><expr pos:start="5:12" pos:end="5:31"><operator pos:start="5:12" pos:end="5:12">!</operator><operator pos:start="5:13" pos:end="5:13">(</operator><name pos:start="5:14" pos:end="5:17">size</name> <operator pos:start="5:19" pos:end="5:19">&amp;</operator> <operator pos:start="5:21" pos:end="5:21">(</operator><name pos:start="5:22" pos:end="5:25">size</name> <operator pos:start="5:27" pos:end="5:27">-</operator> <literal type="number" pos:start="5:29" pos:end="5:29">1</literal><operator pos:start="5:30" pos:end="5:30">)</operator><operator pos:start="5:31" pos:end="5:31">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>       <comment type="block" pos:start="5:41" pos:end="5:56">/* power of 2 */</comment>

    <expr_stmt pos:start="7:5" pos:end="7:40"><expr pos:start="7:5" pos:end="7:39"><call pos:start="7:5" pos:end="7:39"><name pos:start="7:5" pos:end="7:10">assert</name><argument_list pos:start="7:11" pos:end="7:39">(<argument pos:start="7:12" pos:end="7:38"><expr pos:start="7:12" pos:end="7:38"><name pos:start="7:12" pos:end="7:15">size</name> <operator pos:start="7:17" pos:end="7:18">&gt;=</operator> <name pos:start="7:20" pos:end="7:38">PCIE_MMCFG_SIZE_MIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:40"><expr pos:start="9:5" pos:end="9:39"><call pos:start="9:5" pos:end="9:39"><name pos:start="9:5" pos:end="9:10">assert</name><argument_list pos:start="9:11" pos:end="9:39">(<argument pos:start="9:12" pos:end="9:38"><expr pos:start="9:12" pos:end="9:38"><name pos:start="9:12" pos:end="9:15">size</name> <operator pos:start="9:17" pos:end="9:18">&lt;=</operator> <name pos:start="9:20" pos:end="9:38">PCIE_MMCFG_SIZE_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:19"><expr pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:5">e</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:11">size</name></name> <operator pos:start="11:13" pos:end="11:13">=</operator> <name pos:start="11:15" pos:end="11:18">size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="15:49"><expr pos:start="13:5" pos:end="15:48"><call pos:start="13:5" pos:end="15:48"><name pos:start="13:5" pos:end="13:25">memory_region_init_io</name><argument_list pos:start="13:26" pos:end="15:48">(<argument pos:start="13:27" pos:end="13:34"><expr pos:start="13:27" pos:end="13:34"><operator pos:start="13:27" pos:end="13:27">&amp;</operator><name pos:start="13:28" pos:end="13:34"><name pos:start="13:28" pos:end="13:28">e</name><operator pos:start="13:29" pos:end="13:30">-&gt;</operator><name pos:start="13:31" pos:end="13:34">mmio</name></name></expr></argument>, <argument pos:start="13:37" pos:end="13:45"><expr pos:start="13:37" pos:end="13:45"><call pos:start="13:37" pos:end="13:45"><name pos:start="13:37" pos:end="13:42">OBJECT</name><argument_list pos:start="13:43" pos:end="13:45">(<argument pos:start="13:44" pos:end="13:44"><expr pos:start="13:44" pos:end="13:44"><name pos:start="13:44" pos:end="13:44">e</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="13:48" pos:end="13:62"><expr pos:start="13:48" pos:end="13:62"><operator pos:start="13:48" pos:end="13:48">&amp;</operator><name pos:start="13:49" pos:end="13:62">pcie_mmcfg_ops</name></expr></argument>, <argument pos:start="13:65" pos:end="13:65"><expr pos:start="13:65" pos:end="13:65"><name pos:start="13:65" pos:end="13:65">e</name></expr></argument>,

                          <argument pos:start="15:27" pos:end="15:38"><expr pos:start="15:27" pos:end="15:38"><literal type="string" pos:start="15:27" pos:end="15:38">"pcie-mmcfg"</literal></expr></argument>, <argument pos:start="15:41" pos:end="15:47"><expr pos:start="15:41" pos:end="15:47"><name pos:start="15:41" pos:end="15:47"><name pos:start="15:41" pos:end="15:41">e</name><operator pos:start="15:42" pos:end="15:43">-&gt;</operator><name pos:start="15:44" pos:end="15:47">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
