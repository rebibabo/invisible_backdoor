<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8593.c" pos:tabs="8"><function pos:start="1:1" pos:end="305:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">write_frame</name><parameter_list pos:start="1:24" pos:end="1:77">(<parameter pos:start="1:25" pos:end="1:42"><decl pos:start="1:25" pos:end="1:42"><type pos:start="1:25" pos:end="1:42"><name pos:start="1:25" pos:end="1:39">AVFormatContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:57"><decl pos:start="1:45" pos:end="1:57"><type pos:start="1:45" pos:end="1:57"><name pos:start="1:45" pos:end="1:52">AVPacket</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">pkt</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:76"><decl pos:start="1:60" pos:end="1:76"><type pos:start="1:60" pos:end="1:76"><name pos:start="1:60" pos:end="1:71">OutputStream</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:76">ost</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="305:1">{<block_content pos:start="5:5" pos:end="303:24">

    <decl_stmt pos:start="5:5" pos:end="5:60"><decl pos:start="5:5" pos:end="5:59"><type pos:start="5:5" pos:end="5:30"><name pos:start="5:5" pos:end="5:28">AVBitStreamFilterContext</name> <modifier pos:start="5:30" pos:end="5:30">*</modifier></type><name pos:start="5:31" pos:end="5:34">bsfc</name> <init pos:start="5:36" pos:end="5:59">= <expr pos:start="5:38" pos:end="5:59"><name pos:start="5:38" pos:end="5:59"><name pos:start="5:38" pos:end="5:40">ost</name><operator pos:start="5:41" pos:end="5:42">-&gt;</operator><name pos:start="5:43" pos:end="5:59">bitstream_filters</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:90"><decl pos:start="7:5" pos:end="7:89"><type pos:start="7:5" pos:end="7:29"><name pos:start="7:5" pos:end="7:18">AVCodecContext</name>          <modifier pos:start="7:29" pos:end="7:29">*</modifier></type><name pos:start="7:30" pos:end="7:34">avctx</name> <init pos:start="7:36" pos:end="7:89">= <expr pos:start="7:38" pos:end="7:89"><ternary pos:start="7:38" pos:end="7:89"><condition pos:start="7:38" pos:end="7:59"><expr pos:start="7:38" pos:end="7:57"><name pos:start="7:38" pos:end="7:57"><name pos:start="7:38" pos:end="7:40">ost</name><operator pos:start="7:41" pos:end="7:42">-&gt;</operator><name pos:start="7:43" pos:end="7:57">encoding_needed</name></name></expr> ?</condition><then pos:start="7:61" pos:end="7:72"> <expr pos:start="7:61" pos:end="7:72"><name pos:start="7:61" pos:end="7:72"><name pos:start="7:61" pos:end="7:63">ost</name><operator pos:start="7:64" pos:end="7:65">-&gt;</operator><name pos:start="7:66" pos:end="7:72">enc_ctx</name></name></expr> </then><else pos:start="7:74" pos:end="7:89">: <expr pos:start="7:76" pos:end="7:89"><name pos:start="7:76" pos:end="7:89"><name pos:start="7:76" pos:end="7:78">ost</name><operator pos:start="7:79" pos:end="7:80">-&gt;</operator><name pos:start="7:81" pos:end="7:82">st</name><operator pos:start="7:83" pos:end="7:84">-&gt;</operator><name pos:start="7:85" pos:end="7:89">codec</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="25:5"><if pos:start="13:5" pos:end="25:5">if <condition pos:start="13:8" pos:end="13:72">(<expr pos:start="13:9" pos:end="13:71"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:39"><name pos:start="13:10" pos:end="13:12">ost</name><operator pos:start="13:13" pos:end="13:14">-&gt;</operator><name pos:start="13:15" pos:end="13:16">st</name><operator pos:start="13:17" pos:end="13:18">-&gt;</operator><name pos:start="13:19" pos:end="13:23">codec</name><operator pos:start="13:24" pos:end="13:25">-&gt;</operator><name pos:start="13:26" pos:end="13:39">extradata_size</name></name> <operator pos:start="13:41" pos:end="13:42">&amp;&amp;</operator> <name pos:start="13:44" pos:end="13:71"><name pos:start="13:44" pos:end="13:46">ost</name><operator pos:start="13:47" pos:end="13:48">-&gt;</operator><name pos:start="13:49" pos:end="13:55">enc_ctx</name><operator pos:start="13:56" pos:end="13:57">-&gt;</operator><name pos:start="13:58" pos:end="13:71">extradata_size</name></name></expr>)</condition> <block pos:start="13:74" pos:end="25:5">{<block_content pos:start="15:9" pos:end="23:9">

        <expr_stmt pos:start="15:9" pos:end="15:108"><expr pos:start="15:9" pos:end="15:107"><name pos:start="15:9" pos:end="15:33"><name pos:start="15:9" pos:end="15:11">ost</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:15">st</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:22">codec</name><operator pos:start="15:23" pos:end="15:24">-&gt;</operator><name pos:start="15:25" pos:end="15:33">extradata</name></name> <operator pos:start="15:35" pos:end="15:35">=</operator> <call pos:start="15:37" pos:end="15:107"><name pos:start="15:37" pos:end="15:46">av_mallocz</name><argument_list pos:start="15:47" pos:end="15:107">(<argument pos:start="15:48" pos:end="15:106"><expr pos:start="15:48" pos:end="15:106"><name pos:start="15:48" pos:end="15:75"><name pos:start="15:48" pos:end="15:50">ost</name><operator pos:start="15:51" pos:end="15:52">-&gt;</operator><name pos:start="15:53" pos:end="15:59">enc_ctx</name><operator pos:start="15:60" pos:end="15:61">-&gt;</operator><name pos:start="15:62" pos:end="15:75">extradata_size</name></name> <operator pos:start="15:77" pos:end="15:77">+</operator> <name pos:start="15:79" pos:end="15:106">AV_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="17:9" pos:end="23:9"><if pos:start="17:9" pos:end="23:9">if <condition pos:start="17:12" pos:end="17:38">(<expr pos:start="17:13" pos:end="17:37"><name pos:start="17:13" pos:end="17:37"><name pos:start="17:13" pos:end="17:15">ost</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:19">st</name><operator pos:start="17:20" pos:end="17:21">-&gt;</operator><name pos:start="17:22" pos:end="17:26">codec</name><operator pos:start="17:27" pos:end="17:28">-&gt;</operator><name pos:start="17:29" pos:end="17:37">extradata</name></name></expr>)</condition> <block pos:start="17:40" pos:end="23:9">{<block_content pos:start="19:13" pos:end="21:74">

            <expr_stmt pos:start="19:13" pos:end="19:101"><expr pos:start="19:13" pos:end="19:100"><call pos:start="19:13" pos:end="19:100"><name pos:start="19:13" pos:end="19:18">memcpy</name><argument_list pos:start="19:19" pos:end="19:100">(<argument pos:start="19:20" pos:end="19:44"><expr pos:start="19:20" pos:end="19:44"><name pos:start="19:20" pos:end="19:44"><name pos:start="19:20" pos:end="19:22">ost</name><operator pos:start="19:23" pos:end="19:24">-&gt;</operator><name pos:start="19:25" pos:end="19:26">st</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:33">codec</name><operator pos:start="19:34" pos:end="19:35">-&gt;</operator><name pos:start="19:36" pos:end="19:44">extradata</name></name></expr></argument>, <argument pos:start="19:47" pos:end="19:69"><expr pos:start="19:47" pos:end="19:69"><name pos:start="19:47" pos:end="19:69"><name pos:start="19:47" pos:end="19:49">ost</name><operator pos:start="19:50" pos:end="19:51">-&gt;</operator><name pos:start="19:52" pos:end="19:58">enc_ctx</name><operator pos:start="19:59" pos:end="19:60">-&gt;</operator><name pos:start="19:61" pos:end="19:69">extradata</name></name></expr></argument>, <argument pos:start="19:72" pos:end="19:99"><expr pos:start="19:72" pos:end="19:99"><name pos:start="19:72" pos:end="19:99"><name pos:start="19:72" pos:end="19:74">ost</name><operator pos:start="19:75" pos:end="19:76">-&gt;</operator><name pos:start="19:77" pos:end="19:83">enc_ctx</name><operator pos:start="19:84" pos:end="19:85">-&gt;</operator><name pos:start="19:86" pos:end="19:99">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="21:13" pos:end="21:74"><expr pos:start="21:13" pos:end="21:73"><name pos:start="21:13" pos:end="21:42"><name pos:start="21:13" pos:end="21:15">ost</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:19">st</name><operator pos:start="21:20" pos:end="21:21">-&gt;</operator><name pos:start="21:22" pos:end="21:26">codec</name><operator pos:start="21:27" pos:end="21:28">-&gt;</operator><name pos:start="21:29" pos:end="21:42">extradata_size</name></name> <operator pos:start="21:44" pos:end="21:44">=</operator> <name pos:start="21:46" pos:end="21:73"><name pos:start="21:46" pos:end="21:48">ost</name><operator pos:start="21:49" pos:end="21:50">-&gt;</operator><name pos:start="21:51" pos:end="21:57">enc_ctx</name><operator pos:start="21:58" pos:end="21:59">-&gt;</operator><name pos:start="21:60" pos:end="21:73">extradata_size</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="33:45"><if pos:start="29:5" pos:end="33:45">if <condition pos:start="29:8" pos:end="31:75">(<expr pos:start="29:9" pos:end="31:74"><operator pos:start="29:9" pos:end="29:9">(</operator><name pos:start="29:10" pos:end="29:26"><name pos:start="29:10" pos:end="29:14">avctx</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:26">codec_type</name></name> <operator pos:start="29:28" pos:end="29:29">==</operator> <name pos:start="29:31" pos:end="29:48">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="29:50" pos:end="29:51">&amp;&amp;</operator> <name pos:start="29:53" pos:end="29:69">video_sync_method</name> <operator pos:start="29:71" pos:end="29:72">==</operator> <name pos:start="29:74" pos:end="29:83">VSYNC_DROP</name><operator pos:start="29:84" pos:end="29:84">)</operator> <operator pos:start="29:86" pos:end="29:87">||</operator>

        <operator pos:start="31:9" pos:end="31:9">(</operator><name pos:start="31:10" pos:end="31:26"><name pos:start="31:10" pos:end="31:14">avctx</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:26">codec_type</name></name> <operator pos:start="31:28" pos:end="31:29">==</operator> <name pos:start="31:31" pos:end="31:48">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="31:50" pos:end="31:51">&amp;&amp;</operator> <name pos:start="31:53" pos:end="31:69">audio_sync_method</name> <operator pos:start="31:71" pos:end="31:71">&lt;</operator> <literal type="number" pos:start="31:73" pos:end="31:73">0</literal><operator pos:start="31:74" pos:end="31:74">)</operator></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:45"><block_content pos:start="33:9" pos:end="33:45">

        <expr_stmt pos:start="33:9" pos:end="33:45"><expr pos:start="33:9" pos:end="33:44"><name pos:start="33:9" pos:end="33:16"><name pos:start="33:9" pos:end="33:11">pkt</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:16">pts</name></name> <operator pos:start="33:18" pos:end="33:18">=</operator> <name pos:start="33:20" pos:end="33:27"><name pos:start="33:20" pos:end="33:22">pkt</name><operator pos:start="33:23" pos:end="33:24">-&gt;</operator><name pos:start="33:25" pos:end="33:27">dts</name></name> <operator pos:start="33:29" pos:end="33:29">=</operator> <name pos:start="33:31" pos:end="33:44">AV_NOPTS_VALUE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="37:5" pos:end="49:7">/*

     * Audio encoders may split the packets --  #frames in != #packets out.

     * But there is no reordering, so we can limit the number of output packets

     * by simply dropping them here.

     * Counting encoded video frames needs to be done separately because of

     * reordering, see do_video_out()

     */</comment>

    <if_stmt pos:start="51:5" pos:end="63:5"><if pos:start="51:5" pos:end="63:5">if <condition pos:start="51:8" pos:end="51:67">(<expr pos:start="51:9" pos:end="51:66"><operator pos:start="51:9" pos:end="51:9">!</operator><operator pos:start="51:10" pos:end="51:10">(</operator><name pos:start="51:11" pos:end="51:27"><name pos:start="51:11" pos:end="51:15">avctx</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:27">codec_type</name></name> <operator pos:start="51:29" pos:end="51:30">==</operator> <name pos:start="51:32" pos:end="51:49">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="51:51" pos:end="51:52">&amp;&amp;</operator> <name pos:start="51:54" pos:end="51:65"><name pos:start="51:54" pos:end="51:58">avctx</name><operator pos:start="51:59" pos:end="51:60">-&gt;</operator><name pos:start="51:61" pos:end="51:65">codec</name></name><operator pos:start="51:66" pos:end="51:66">)</operator></expr>)</condition> <block pos:start="51:69" pos:end="63:5">{<block_content pos:start="53:9" pos:end="61:28">

        <if_stmt pos:start="53:9" pos:end="59:9"><if pos:start="53:9" pos:end="59:9">if <condition pos:start="53:12" pos:end="53:49">(<expr pos:start="53:13" pos:end="53:48"><name pos:start="53:13" pos:end="53:29"><name pos:start="53:13" pos:end="53:15">ost</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:29">frame_number</name></name> <operator pos:start="53:31" pos:end="53:32">&gt;=</operator> <name pos:start="53:34" pos:end="53:48"><name pos:start="53:34" pos:end="53:36">ost</name><operator pos:start="53:37" pos:end="53:38">-&gt;</operator><name pos:start="53:39" pos:end="53:48">max_frames</name></name></expr>)</condition> <block pos:start="53:51" pos:end="59:9">{<block_content pos:start="55:13" pos:end="57:19">

            <expr_stmt pos:start="55:13" pos:end="55:32"><expr pos:start="55:13" pos:end="55:31"><call pos:start="55:13" pos:end="55:31"><name pos:start="55:13" pos:end="55:26">av_free_packet</name><argument_list pos:start="55:27" pos:end="55:31">(<argument pos:start="55:28" pos:end="55:30"><expr pos:start="55:28" pos:end="55:30"><name pos:start="55:28" pos:end="55:30">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="57:13" pos:end="57:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:28"><expr pos:start="61:9" pos:end="61:27"><name pos:start="61:9" pos:end="61:25"><name pos:start="61:9" pos:end="61:11">ost</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:25">frame_number</name></name><operator pos:start="61:26" pos:end="61:27">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="65:5" pos:end="91:5"><if pos:start="65:5" pos:end="91:5">if <condition pos:start="65:8" pos:end="65:48">(<expr pos:start="65:9" pos:end="65:47"><name pos:start="65:9" pos:end="65:25"><name pos:start="65:9" pos:end="65:13">avctx</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:25">codec_type</name></name> <operator pos:start="65:27" pos:end="65:28">==</operator> <name pos:start="65:30" pos:end="65:47">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="65:50" pos:end="91:5">{<block_content pos:start="67:9" pos:end="89:9">

        <decl_stmt pos:start="67:9" pos:end="67:14"><decl pos:start="67:9" pos:end="67:13"><type pos:start="67:9" pos:end="67:11"><name pos:start="67:9" pos:end="67:11">int</name></type> <name pos:start="67:13" pos:end="67:13">i</name></decl>;</decl_stmt>

        <decl_stmt pos:start="69:9" pos:end="71:52"><decl pos:start="69:9" pos:end="71:51"><type pos:start="69:9" pos:end="69:17"><name pos:start="69:9" pos:end="69:15">uint8_t</name> <modifier pos:start="69:17" pos:end="69:17">*</modifier></type><name pos:start="69:18" pos:end="69:19">sd</name> <init pos:start="69:21" pos:end="71:51">= <expr pos:start="69:23" pos:end="71:51"><call pos:start="69:23" pos:end="71:51"><name pos:start="69:23" pos:end="69:45">av_packet_get_side_data</name><argument_list pos:start="69:46" pos:end="71:51">(<argument pos:start="69:47" pos:end="69:49"><expr pos:start="69:47" pos:end="69:49"><name pos:start="69:47" pos:end="69:49">pkt</name></expr></argument>, <argument pos:start="69:52" pos:end="69:76"><expr pos:start="69:52" pos:end="69:76"><name pos:start="69:52" pos:end="69:76">AV_PKT_DATA_QUALITY_STATS</name></expr></argument>,

                                              <argument pos:start="71:47" pos:end="71:50"><expr pos:start="71:47" pos:end="71:50"><name pos:start="71:47" pos:end="71:50">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:45"><expr pos:start="73:9" pos:end="73:44"><name pos:start="73:9" pos:end="73:20"><name pos:start="73:9" pos:end="73:11">ost</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:20">quality</name></name> <operator pos:start="73:22" pos:end="73:22">=</operator> <ternary pos:start="73:24" pos:end="73:44"><condition pos:start="73:24" pos:end="73:27"><expr pos:start="73:24" pos:end="73:25"><name pos:start="73:24" pos:end="73:25">sd</name></expr> ?</condition><then pos:start="73:29" pos:end="73:39"> <expr pos:start="73:29" pos:end="73:39"><call pos:start="73:29" pos:end="73:39"><name pos:start="73:29" pos:end="73:35">AV_RL32</name><argument_list pos:start="73:36" pos:end="73:39">(<argument pos:start="73:37" pos:end="73:38"><expr pos:start="73:37" pos:end="73:38"><name pos:start="73:37" pos:end="73:38">sd</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="73:41" pos:end="73:44">: <expr pos:start="73:43" pos:end="73:44"><operator pos:start="73:43" pos:end="73:43">-</operator><literal type="number" pos:start="73:44" pos:end="73:44">1</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:59"><expr pos:start="75:9" pos:end="75:58"><name pos:start="75:9" pos:end="75:22"><name pos:start="75:9" pos:end="75:11">ost</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:22">pict_type</name></name> <operator pos:start="75:24" pos:end="75:24">=</operator> <ternary pos:start="75:26" pos:end="75:58"><condition pos:start="75:26" pos:end="75:29"><expr pos:start="75:26" pos:end="75:27"><name pos:start="75:26" pos:end="75:27">sd</name></expr> ?</condition><then pos:start="75:31" pos:end="75:35"> <expr pos:start="75:31" pos:end="75:35"><name pos:start="75:31" pos:end="75:35"><name pos:start="75:31" pos:end="75:32">sd</name><index pos:start="75:33" pos:end="75:35">[<expr pos:start="75:34" pos:end="75:34"><literal type="number" pos:start="75:34" pos:end="75:34">4</literal></expr>]</index></name></expr> </then><else pos:start="75:37" pos:end="75:58">: <expr pos:start="75:39" pos:end="75:58"><name pos:start="75:39" pos:end="75:58">AV_PICTURE_TYPE_NONE</name></expr></else></ternary></expr>;</expr_stmt>



        <for pos:start="79:9" pos:end="89:9">for <control pos:start="79:13" pos:end="79:54">(<init pos:start="79:14" pos:end="79:19"><expr pos:start="79:14" pos:end="79:18"><name pos:start="79:14" pos:end="79:14">i</name> <operator pos:start="79:16" pos:end="79:16">=</operator> <literal type="number" pos:start="79:18" pos:end="79:18">0</literal></expr>;</init> <condition pos:start="79:21" pos:end="79:49"><expr pos:start="79:21" pos:end="79:48"><name pos:start="79:21" pos:end="79:21">i</name><operator pos:start="79:22" pos:end="79:22">&lt;</operator><call pos:start="79:23" pos:end="79:48"><name pos:start="79:23" pos:end="79:36">FF_ARRAY_ELEMS</name><argument_list pos:start="79:37" pos:end="79:48">(<argument pos:start="79:38" pos:end="79:47"><expr pos:start="79:38" pos:end="79:47"><name pos:start="79:38" pos:end="79:47"><name pos:start="79:38" pos:end="79:40">ost</name><operator pos:start="79:41" pos:end="79:42">-&gt;</operator><name pos:start="79:43" pos:end="79:47">error</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="79:51" pos:end="79:53"><expr pos:start="79:51" pos:end="79:53"><name pos:start="79:51" pos:end="79:51">i</name><operator pos:start="79:52" pos:end="79:53">++</operator></expr></incr>)</control> <block pos:start="79:56" pos:end="89:9">{<block_content pos:start="81:13" pos:end="87:35">

            <if_stmt pos:start="81:13" pos:end="87:35"><if pos:start="81:13" pos:end="83:54">if <condition pos:start="81:16" pos:end="81:32">(<expr pos:start="81:17" pos:end="81:31"><name pos:start="81:17" pos:end="81:18">sd</name> <operator pos:start="81:20" pos:end="81:21">&amp;&amp;</operator> <name pos:start="81:23" pos:end="81:23">i</name> <operator pos:start="81:25" pos:end="81:25">&lt;</operator> <name pos:start="81:27" pos:end="81:31"><name pos:start="81:27" pos:end="81:28">sd</name><index pos:start="81:29" pos:end="81:31">[<expr pos:start="81:30" pos:end="81:30"><literal type="number" pos:start="81:30" pos:end="81:30">5</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="83:17" pos:end="83:54"><block_content pos:start="83:17" pos:end="83:54">

                <expr_stmt pos:start="83:17" pos:end="83:54"><expr pos:start="83:17" pos:end="83:53"><name pos:start="83:17" pos:end="83:29"><name pos:start="83:17" pos:end="83:19">ost</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:26">error</name><index pos:start="83:27" pos:end="83:29">[<expr pos:start="83:28" pos:end="83:28"><name pos:start="83:28" pos:end="83:28">i</name></expr>]</index></name> <operator pos:start="83:31" pos:end="83:31">=</operator> <call pos:start="83:33" pos:end="83:53"><name pos:start="83:33" pos:end="83:39">AV_RL64</name><argument_list pos:start="83:40" pos:end="83:53">(<argument pos:start="83:41" pos:end="83:52"><expr pos:start="83:41" pos:end="83:52"><name pos:start="83:41" pos:end="83:42">sd</name> <operator pos:start="83:44" pos:end="83:44">+</operator> <literal type="number" pos:start="83:46" pos:end="83:48">8</literal> <operator pos:start="83:48" pos:end="83:48">+</operator> <literal type="number" pos:start="83:50" pos:end="83:50">8</literal><operator pos:start="83:51" pos:end="83:51">*</operator><name pos:start="83:52" pos:end="83:52">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="85:13" pos:end="87:35">else<block type="pseudo" pos:start="87:17" pos:end="87:35"><block_content pos:start="87:17" pos:end="87:35">

                <expr_stmt pos:start="87:17" pos:end="87:35"><expr pos:start="87:17" pos:end="87:34"><name pos:start="87:17" pos:end="87:29"><name pos:start="87:17" pos:end="87:19">ost</name><operator pos:start="87:20" pos:end="87:21">-&gt;</operator><name pos:start="87:22" pos:end="87:26">error</name><index pos:start="87:27" pos:end="87:29">[<expr pos:start="87:28" pos:end="87:28"><name pos:start="87:28" pos:end="87:28">i</name></expr>]</index></name> <operator pos:start="87:31" pos:end="87:31">=</operator> <operator pos:start="87:33" pos:end="87:33">-</operator><literal type="number" pos:start="87:34" pos:end="87:34">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="95:5" pos:end="97:39"><if pos:start="95:5" pos:end="97:39">if <condition pos:start="95:8" pos:end="95:13">(<expr pos:start="95:9" pos:end="95:12"><name pos:start="95:9" pos:end="95:12">bsfc</name></expr>)</condition><block type="pseudo" pos:start="97:9" pos:end="97:39"><block_content pos:start="97:9" pos:end="97:39">

        <expr_stmt pos:start="97:9" pos:end="97:39"><expr pos:start="97:9" pos:end="97:38"><call pos:start="97:9" pos:end="97:38"><name pos:start="97:9" pos:end="97:33">av_packet_split_side_data</name><argument_list pos:start="97:34" pos:end="97:38">(<argument pos:start="97:35" pos:end="97:37"><expr pos:start="97:35" pos:end="97:37"><name pos:start="97:35" pos:end="97:37">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <while pos:start="101:5" pos:end="183:5">while <condition pos:start="101:11" pos:end="101:16">(<expr pos:start="101:12" pos:end="101:15"><name pos:start="101:12" pos:end="101:15">bsfc</name></expr>)</condition> <block pos:start="101:18" pos:end="183:5">{<block_content pos:start="103:9" pos:end="181:26">

        <decl_stmt pos:start="103:9" pos:end="103:32"><decl pos:start="103:9" pos:end="103:31"><type pos:start="103:9" pos:end="103:16"><name pos:start="103:9" pos:end="103:16">AVPacket</name></type> <name pos:start="103:18" pos:end="103:24">new_pkt</name> <init pos:start="103:26" pos:end="103:31">= <expr pos:start="103:28" pos:end="103:31"><operator pos:start="103:28" pos:end="103:28">*</operator><name pos:start="103:29" pos:end="103:31">pkt</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="105:9" pos:end="109:58"><decl pos:start="105:9" pos:end="109:57"><type pos:start="105:9" pos:end="105:27"><name pos:start="105:9" pos:end="105:25">AVDictionaryEntry</name> <modifier pos:start="105:27" pos:end="105:27">*</modifier></type><name pos:start="105:28" pos:end="105:34">bsf_arg</name> <init pos:start="105:36" pos:end="109:57">= <expr pos:start="105:38" pos:end="109:57"><call pos:start="105:38" pos:end="109:57"><name pos:start="105:38" pos:end="105:48">av_dict_get</name><argument_list pos:start="105:49" pos:end="109:57">(<argument pos:start="105:50" pos:end="105:62"><expr pos:start="105:50" pos:end="105:62"><name pos:start="105:50" pos:end="105:62"><name pos:start="105:50" pos:end="105:52">ost</name><operator pos:start="105:53" pos:end="105:54">-&gt;</operator><name pos:start="105:55" pos:end="105:62">bsf_args</name></name></expr></argument>,

                                                 <argument pos:start="107:50" pos:end="107:67"><expr pos:start="107:50" pos:end="107:67"><name pos:start="107:50" pos:end="107:67"><name pos:start="107:50" pos:end="107:53">bsfc</name><operator pos:start="107:54" pos:end="107:55">-&gt;</operator><name pos:start="107:56" pos:end="107:61">filter</name><operator pos:start="107:62" pos:end="107:63">-&gt;</operator><name pos:start="107:64" pos:end="107:67">name</name></name></expr></argument>,

                                                 <argument pos:start="109:50" pos:end="109:53"><expr pos:start="109:50" pos:end="109:53"><name pos:start="109:50" pos:end="109:53">NULL</name></expr></argument>, <argument pos:start="109:56" pos:end="109:56"><expr pos:start="109:56" pos:end="109:56"><literal type="number" pos:start="109:56" pos:end="109:56">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="111:9" pos:end="119:73"><decl pos:start="111:9" pos:end="119:72"><type pos:start="111:9" pos:end="111:11"><name pos:start="111:9" pos:end="111:11">int</name></type> <name pos:start="111:13" pos:end="111:13">a</name> <init pos:start="111:15" pos:end="119:72">= <expr pos:start="111:17" pos:end="119:72"><call pos:start="111:17" pos:end="119:72"><name pos:start="111:17" pos:end="111:42">av_bitstream_filter_filter</name><argument_list pos:start="111:43" pos:end="119:72">(<argument pos:start="111:44" pos:end="111:47"><expr pos:start="111:44" pos:end="111:47"><name pos:start="111:44" pos:end="111:47">bsfc</name></expr></argument>, <argument pos:start="111:50" pos:end="111:54"><expr pos:start="111:50" pos:end="111:54"><name pos:start="111:50" pos:end="111:54">avctx</name></expr></argument>,

                                           <argument pos:start="113:44" pos:end="113:74"><expr pos:start="113:44" pos:end="113:74"><ternary pos:start="113:44" pos:end="113:74"><condition pos:start="113:44" pos:end="113:52"><expr pos:start="113:44" pos:end="113:50"><name pos:start="113:44" pos:end="113:50">bsf_arg</name></expr> ?</condition><then pos:start="113:54" pos:end="113:67"> <expr pos:start="113:54" pos:end="113:67"><name pos:start="113:54" pos:end="113:67"><name pos:start="113:54" pos:end="113:60">bsf_arg</name><operator pos:start="113:61" pos:end="113:62">-&gt;</operator><name pos:start="113:63" pos:end="113:67">value</name></name></expr> </then><else pos:start="113:69" pos:end="113:74">: <expr pos:start="113:71" pos:end="113:74"><name pos:start="113:71" pos:end="113:74">NULL</name></expr></else></ternary></expr></argument>,

                                           <argument pos:start="115:44" pos:end="115:56"><expr pos:start="115:44" pos:end="115:56"><operator pos:start="115:44" pos:end="115:44">&amp;</operator><name pos:start="115:45" pos:end="115:56"><name pos:start="115:45" pos:end="115:51">new_pkt</name><operator pos:start="115:52" pos:end="115:52">.</operator><name pos:start="115:53" pos:end="115:56">data</name></name></expr></argument>, <argument pos:start="115:59" pos:end="115:71"><expr pos:start="115:59" pos:end="115:71"><operator pos:start="115:59" pos:end="115:59">&amp;</operator><name pos:start="115:60" pos:end="115:71"><name pos:start="115:60" pos:end="115:66">new_pkt</name><operator pos:start="115:67" pos:end="115:67">.</operator><name pos:start="115:68" pos:end="115:71">size</name></name></expr></argument>,

                                           <argument pos:start="117:44" pos:end="117:52"><expr pos:start="117:44" pos:end="117:52"><name pos:start="117:44" pos:end="117:52"><name pos:start="117:44" pos:end="117:46">pkt</name><operator pos:start="117:47" pos:end="117:48">-&gt;</operator><name pos:start="117:49" pos:end="117:52">data</name></name></expr></argument>, <argument pos:start="117:55" pos:end="117:63"><expr pos:start="117:55" pos:end="117:63"><name pos:start="117:55" pos:end="117:63"><name pos:start="117:55" pos:end="117:57">pkt</name><operator pos:start="117:58" pos:end="117:59">-&gt;</operator><name pos:start="117:60" pos:end="117:63">size</name></name></expr></argument>,

                                           <argument pos:start="119:44" pos:end="119:71"><expr pos:start="119:44" pos:end="119:71"><name pos:start="119:44" pos:end="119:53"><name pos:start="119:44" pos:end="119:46">pkt</name><operator pos:start="119:47" pos:end="119:48">-&gt;</operator><name pos:start="119:49" pos:end="119:53">flags</name></name> <operator pos:start="119:55" pos:end="119:55">&amp;</operator> <name pos:start="119:57" pos:end="119:71">AV_PKT_FLAG_KEY</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="121:9" pos:end="141:9"><if pos:start="121:9" pos:end="141:9">if<condition pos:start="121:11" pos:end="121:67">(<expr pos:start="121:12" pos:end="121:66"><name pos:start="121:12" pos:end="121:12">a</name> <operator pos:start="121:14" pos:end="121:15">==</operator> <literal type="number" pos:start="121:17" pos:end="121:17">0</literal> <operator pos:start="121:19" pos:end="121:20">&amp;&amp;</operator> <name pos:start="121:22" pos:end="121:33"><name pos:start="121:22" pos:end="121:28">new_pkt</name><operator pos:start="121:29" pos:end="121:29">.</operator><name pos:start="121:30" pos:end="121:33">data</name></name> <operator pos:start="121:35" pos:end="121:36">!=</operator> <name pos:start="121:38" pos:end="121:46"><name pos:start="121:38" pos:end="121:40">pkt</name><operator pos:start="121:41" pos:end="121:42">-&gt;</operator><name pos:start="121:43" pos:end="121:46">data</name></name> <operator pos:start="121:48" pos:end="121:49">&amp;&amp;</operator> <name pos:start="121:51" pos:end="121:66"><name pos:start="121:51" pos:end="121:57">new_pkt</name><operator pos:start="121:58" pos:end="121:58">.</operator><name pos:start="121:59" pos:end="121:66">destruct</name></name></expr>)</condition> <block pos:start="121:69" pos:end="141:9">{<block_content pos:start="123:13" pos:end="139:36">

            <decl_stmt pos:start="123:13" pos:end="123:80"><decl pos:start="123:13" pos:end="123:79"><type pos:start="123:13" pos:end="123:21"><name pos:start="123:13" pos:end="123:19">uint8_t</name> <modifier pos:start="123:21" pos:end="123:21">*</modifier></type><name pos:start="123:22" pos:end="123:22">t</name> <init pos:start="123:24" pos:end="123:79">= <expr pos:start="123:26" pos:end="123:79"><call pos:start="123:26" pos:end="123:79"><name pos:start="123:26" pos:end="123:34">av_malloc</name><argument_list pos:start="123:35" pos:end="123:79">(<argument pos:start="123:36" pos:end="123:78"><expr pos:start="123:36" pos:end="123:78"><name pos:start="123:36" pos:end="123:47"><name pos:start="123:36" pos:end="123:42">new_pkt</name><operator pos:start="123:43" pos:end="123:43">.</operator><name pos:start="123:44" pos:end="123:47">size</name></name> <operator pos:start="123:49" pos:end="123:49">+</operator> <name pos:start="123:51" pos:end="123:78">AV_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="123:82" pos:end="123:139">//the new should be a subset of the old so cannot overflow</comment>

            <if_stmt pos:start="125:13" pos:end="139:36"><if pos:start="125:13" pos:end="137:13">if<condition pos:start="125:15" pos:end="125:17">(<expr pos:start="125:16" pos:end="125:16"><name pos:start="125:16" pos:end="125:16">t</name></expr>)</condition> <block pos:start="125:19" pos:end="137:13">{<block_content pos:start="127:17" pos:end="135:22">

                <expr_stmt pos:start="127:17" pos:end="127:54"><expr pos:start="127:17" pos:end="127:53"><call pos:start="127:17" pos:end="127:53"><name pos:start="127:17" pos:end="127:22">memcpy</name><argument_list pos:start="127:23" pos:end="127:53">(<argument pos:start="127:24" pos:end="127:24"><expr pos:start="127:24" pos:end="127:24"><name pos:start="127:24" pos:end="127:24">t</name></expr></argument>, <argument pos:start="127:27" pos:end="127:38"><expr pos:start="127:27" pos:end="127:38"><name pos:start="127:27" pos:end="127:38"><name pos:start="127:27" pos:end="127:33">new_pkt</name><operator pos:start="127:34" pos:end="127:34">.</operator><name pos:start="127:35" pos:end="127:38">data</name></name></expr></argument>, <argument pos:start="127:41" pos:end="127:52"><expr pos:start="127:41" pos:end="127:52"><name pos:start="127:41" pos:end="127:52"><name pos:start="127:41" pos:end="127:47">new_pkt</name><operator pos:start="127:48" pos:end="127:48">.</operator><name pos:start="127:49" pos:end="127:52">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="129:17" pos:end="129:74"><expr pos:start="129:17" pos:end="129:73"><call pos:start="129:17" pos:end="129:73"><name pos:start="129:17" pos:end="129:22">memset</name><argument_list pos:start="129:23" pos:end="129:73">(<argument pos:start="129:24" pos:end="129:39"><expr pos:start="129:24" pos:end="129:39"><name pos:start="129:24" pos:end="129:24">t</name> <operator pos:start="129:26" pos:end="129:26">+</operator> <name pos:start="129:28" pos:end="129:39"><name pos:start="129:28" pos:end="129:34">new_pkt</name><operator pos:start="129:35" pos:end="129:35">.</operator><name pos:start="129:36" pos:end="129:39">size</name></name></expr></argument>, <argument pos:start="129:42" pos:end="129:42"><expr pos:start="129:42" pos:end="129:42"><literal type="number" pos:start="129:42" pos:end="129:42">0</literal></expr></argument>, <argument pos:start="129:45" pos:end="129:72"><expr pos:start="129:45" pos:end="129:72"><name pos:start="129:45" pos:end="129:72">AV_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="131:17" pos:end="131:33"><expr pos:start="131:17" pos:end="131:32"><name pos:start="131:17" pos:end="131:28"><name pos:start="131:17" pos:end="131:23">new_pkt</name><operator pos:start="131:24" pos:end="131:24">.</operator><name pos:start="131:25" pos:end="131:28">data</name></name> <operator pos:start="131:30" pos:end="131:30">=</operator> <name pos:start="131:32" pos:end="131:32">t</name></expr>;</expr_stmt>

                <expr_stmt pos:start="133:17" pos:end="133:35"><expr pos:start="133:17" pos:end="133:34"><name pos:start="133:17" pos:end="133:27"><name pos:start="133:17" pos:end="133:23">new_pkt</name><operator pos:start="133:24" pos:end="133:24">.</operator><name pos:start="133:25" pos:end="133:27">buf</name></name> <operator pos:start="133:29" pos:end="133:29">=</operator> <name pos:start="133:31" pos:end="133:34">NULL</name></expr>;</expr_stmt>

                <expr_stmt pos:start="135:17" pos:end="135:22"><expr pos:start="135:17" pos:end="135:21"><name pos:start="135:17" pos:end="135:17">a</name> <operator pos:start="135:19" pos:end="135:19">=</operator> <literal type="number" pos:start="135:21" pos:end="135:21">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="137:15" pos:end="139:36">else<block type="pseudo" pos:start="139:17" pos:end="139:36"><block_content pos:start="139:17" pos:end="139:36">

                <expr_stmt pos:start="139:17" pos:end="139:36"><expr pos:start="139:17" pos:end="139:35"><name pos:start="139:17" pos:end="139:17">a</name> <operator pos:start="139:19" pos:end="139:19">=</operator> <call pos:start="139:21" pos:end="139:35"><name pos:start="139:21" pos:end="139:27">AVERROR</name><argument_list pos:start="139:28" pos:end="139:35">(<argument pos:start="139:29" pos:end="139:34"><expr pos:start="139:29" pos:end="139:34"><name pos:start="139:29" pos:end="139:34">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="143:9" pos:end="175:9"><if pos:start="143:9" pos:end="159:9">if <condition pos:start="143:12" pos:end="143:18">(<expr pos:start="143:13" pos:end="143:17"><name pos:start="143:13" pos:end="143:13">a</name> <operator pos:start="143:15" pos:end="143:15">&gt;</operator> <literal type="number" pos:start="143:17" pos:end="143:17">0</literal></expr>)</condition> <block pos:start="143:20" pos:end="159:9">{<block_content pos:start="145:13" pos:end="157:32">

            <expr_stmt pos:start="145:13" pos:end="145:34"><expr pos:start="145:13" pos:end="145:33"><name pos:start="145:13" pos:end="145:26"><name pos:start="145:13" pos:end="145:15">pkt</name><operator pos:start="145:16" pos:end="145:17">-&gt;</operator><name pos:start="145:18" pos:end="145:26">side_data</name></name> <operator pos:start="145:28" pos:end="145:28">=</operator> <name pos:start="145:30" pos:end="145:33">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:37"><expr pos:start="147:13" pos:end="147:36"><name pos:start="147:13" pos:end="147:32"><name pos:start="147:13" pos:end="147:15">pkt</name><operator pos:start="147:16" pos:end="147:17">-&gt;</operator><name pos:start="147:18" pos:end="147:32">side_data_elems</name></name> <operator pos:start="147:34" pos:end="147:34">=</operator> <literal type="number" pos:start="147:36" pos:end="147:36">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:32"><expr pos:start="149:13" pos:end="149:31"><call pos:start="149:13" pos:end="149:31"><name pos:start="149:13" pos:end="149:26">av_free_packet</name><argument_list pos:start="149:27" pos:end="149:31">(<argument pos:start="149:28" pos:end="149:30"><expr pos:start="149:28" pos:end="149:30"><name pos:start="149:28" pos:end="149:30">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="153:76"><expr pos:start="151:13" pos:end="153:75"><name pos:start="151:13" pos:end="151:23"><name pos:start="151:13" pos:end="151:19">new_pkt</name><operator pos:start="151:20" pos:end="151:20">.</operator><name pos:start="151:21" pos:end="151:23">buf</name></name> <operator pos:start="151:25" pos:end="151:25">=</operator> <call pos:start="151:27" pos:end="153:75"><name pos:start="151:27" pos:end="151:42">av_buffer_create</name><argument_list pos:start="151:43" pos:end="153:75">(<argument pos:start="151:44" pos:end="151:55"><expr pos:start="151:44" pos:end="151:55"><name pos:start="151:44" pos:end="151:55"><name pos:start="151:44" pos:end="151:50">new_pkt</name><operator pos:start="151:51" pos:end="151:51">.</operator><name pos:start="151:52" pos:end="151:55">data</name></name></expr></argument>, <argument pos:start="151:58" pos:end="151:69"><expr pos:start="151:58" pos:end="151:69"><name pos:start="151:58" pos:end="151:69"><name pos:start="151:58" pos:end="151:64">new_pkt</name><operator pos:start="151:65" pos:end="151:65">.</operator><name pos:start="151:66" pos:end="151:69">size</name></name></expr></argument>,

                                           <argument pos:start="153:44" pos:end="153:65"><expr pos:start="153:44" pos:end="153:65"><name pos:start="153:44" pos:end="153:65">av_buffer_default_free</name></expr></argument>, <argument pos:start="153:68" pos:end="153:71"><expr pos:start="153:68" pos:end="153:71"><name pos:start="153:68" pos:end="153:71">NULL</name></expr></argument>, <argument pos:start="153:74" pos:end="153:74"><expr pos:start="153:74" pos:end="153:74"><literal type="number" pos:start="153:74" pos:end="153:74">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="155:13" pos:end="157:32"><if pos:start="155:13" pos:end="157:32">if <condition pos:start="155:16" pos:end="155:29">(<expr pos:start="155:17" pos:end="155:28"><operator pos:start="155:17" pos:end="155:17">!</operator><name pos:start="155:18" pos:end="155:28"><name pos:start="155:18" pos:end="155:24">new_pkt</name><operator pos:start="155:25" pos:end="155:25">.</operator><name pos:start="155:26" pos:end="155:28">buf</name></name></expr>)</condition><block type="pseudo" pos:start="157:17" pos:end="157:32"><block_content pos:start="157:17" pos:end="157:32">

                <expr_stmt pos:start="157:17" pos:end="157:32"><expr pos:start="157:17" pos:end="157:31"><call pos:start="157:17" pos:end="157:31"><name pos:start="157:17" pos:end="157:28">exit_program</name><argument_list pos:start="157:29" pos:end="157:31">(<argument pos:start="157:30" pos:end="157:30"><expr pos:start="157:30" pos:end="157:30"><literal type="number" pos:start="157:30" pos:end="157:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="159:11" pos:end="175:9">else if <condition pos:start="159:19" pos:end="159:25">(<expr pos:start="159:20" pos:end="159:24"><name pos:start="159:20" pos:end="159:20">a</name> <operator pos:start="159:22" pos:end="159:22">&lt;</operator> <literal type="number" pos:start="159:24" pos:end="159:24">0</literal></expr>)</condition> <block pos:start="159:27" pos:end="175:9">{<block_content pos:start="161:13" pos:end="173:32">

            <expr_stmt pos:start="161:13" pos:end="161:27"><expr pos:start="161:13" pos:end="161:26"><name pos:start="161:13" pos:end="161:19">new_pkt</name> <operator pos:start="161:21" pos:end="161:21">=</operator> <operator pos:start="161:23" pos:end="161:23">*</operator><name pos:start="161:24" pos:end="161:26">pkt</name></expr>;</expr_stmt>

            <expr_stmt pos:start="163:13" pos:end="167:63"><expr pos:start="163:13" pos:end="167:62"><call pos:start="163:13" pos:end="167:62"><name pos:start="163:13" pos:end="163:18">av_log</name><argument_list pos:start="163:19" pos:end="167:62">(<argument pos:start="163:20" pos:end="163:23"><expr pos:start="163:20" pos:end="163:23"><name pos:start="163:20" pos:end="163:23">NULL</name></expr></argument>, <argument pos:start="163:26" pos:end="163:37"><expr pos:start="163:26" pos:end="163:37"><name pos:start="163:26" pos:end="163:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="163:40" pos:end="163:103"><expr pos:start="163:40" pos:end="163:103"><literal type="string" pos:start="163:40" pos:end="163:103">"Failed to open bitstream filter %s for stream %d with codec %s"</literal></expr></argument>,

                   <argument pos:start="165:20" pos:end="165:37"><expr pos:start="165:20" pos:end="165:37"><name pos:start="165:20" pos:end="165:37"><name pos:start="165:20" pos:end="165:23">bsfc</name><operator pos:start="165:24" pos:end="165:25">-&gt;</operator><name pos:start="165:26" pos:end="165:31">filter</name><operator pos:start="165:32" pos:end="165:33">-&gt;</operator><name pos:start="165:34" pos:end="165:37">name</name></name></expr></argument>, <argument pos:start="165:40" pos:end="165:56"><expr pos:start="165:40" pos:end="165:56"><name pos:start="165:40" pos:end="165:56"><name pos:start="165:40" pos:end="165:42">pkt</name><operator pos:start="165:43" pos:end="165:44">-&gt;</operator><name pos:start="165:45" pos:end="165:56">stream_index</name></name></expr></argument>,

                   <argument pos:start="167:20" pos:end="167:61"><expr pos:start="167:20" pos:end="167:61"><ternary pos:start="167:20" pos:end="167:61"><condition pos:start="167:20" pos:end="167:33"><expr pos:start="167:20" pos:end="167:31"><name pos:start="167:20" pos:end="167:31"><name pos:start="167:20" pos:end="167:24">avctx</name><operator pos:start="167:25" pos:end="167:26">-&gt;</operator><name pos:start="167:27" pos:end="167:31">codec</name></name></expr> ?</condition><then pos:start="167:35" pos:end="167:52"> <expr pos:start="167:35" pos:end="167:52"><name pos:start="167:35" pos:end="167:52"><name pos:start="167:35" pos:end="167:39">avctx</name><operator pos:start="167:40" pos:end="167:41">-&gt;</operator><name pos:start="167:42" pos:end="167:46">codec</name><operator pos:start="167:47" pos:end="167:48">-&gt;</operator><name pos:start="167:49" pos:end="167:52">name</name></name></expr> </then><else pos:start="167:54" pos:end="167:61">: <expr pos:start="167:56" pos:end="167:61"><literal type="string" pos:start="167:56" pos:end="167:61">"copy"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="169:13" pos:end="169:31"><expr pos:start="169:13" pos:end="169:30"><call pos:start="169:13" pos:end="169:30"><name pos:start="169:13" pos:end="169:23">print_error</name><argument_list pos:start="169:24" pos:end="169:30">(<argument pos:start="169:25" pos:end="169:26"><expr pos:start="169:25" pos:end="169:26"><literal type="string" pos:start="169:25" pos:end="169:26">""</literal></expr></argument>, <argument pos:start="169:29" pos:end="169:29"><expr pos:start="169:29" pos:end="169:29"><name pos:start="169:29" pos:end="169:29">a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="171:13" pos:end="173:32"><if pos:start="171:13" pos:end="173:32">if <condition pos:start="171:16" pos:end="171:30">(<expr pos:start="171:17" pos:end="171:29"><name pos:start="171:17" pos:end="171:29">exit_on_error</name></expr>)</condition><block type="pseudo" pos:start="173:17" pos:end="173:32"><block_content pos:start="173:17" pos:end="173:32">

                <expr_stmt pos:start="173:17" pos:end="173:32"><expr pos:start="173:17" pos:end="173:31"><call pos:start="173:17" pos:end="173:31"><name pos:start="173:17" pos:end="173:28">exit_program</name><argument_list pos:start="173:29" pos:end="173:31">(<argument pos:start="173:30" pos:end="173:30"><expr pos:start="173:30" pos:end="173:30"><literal type="number" pos:start="173:30" pos:end="173:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:23"><expr pos:start="177:9" pos:end="177:22"><operator pos:start="177:9" pos:end="177:9">*</operator><name pos:start="177:10" pos:end="177:12">pkt</name> <operator pos:start="177:14" pos:end="177:14">=</operator> <name pos:start="177:16" pos:end="177:22">new_pkt</name></expr>;</expr_stmt>



        <expr_stmt pos:start="181:9" pos:end="181:26"><expr pos:start="181:9" pos:end="181:25"><name pos:start="181:9" pos:end="181:12">bsfc</name> <operator pos:start="181:14" pos:end="181:14">=</operator> <name pos:start="181:16" pos:end="181:25"><name pos:start="181:16" pos:end="181:19">bsfc</name><operator pos:start="181:20" pos:end="181:21">-&gt;</operator><name pos:start="181:22" pos:end="181:25">next</name></name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="187:5" pos:end="255:5"><if pos:start="187:5" pos:end="255:5">if <condition pos:start="187:8" pos:end="187:50">(<expr pos:start="187:9" pos:end="187:49"><operator pos:start="187:9" pos:end="187:9">!</operator><operator pos:start="187:10" pos:end="187:10">(</operator><name pos:start="187:11" pos:end="187:27"><name pos:start="187:11" pos:end="187:11">s</name><operator pos:start="187:12" pos:end="187:13">-&gt;</operator><name pos:start="187:14" pos:end="187:20">oformat</name><operator pos:start="187:21" pos:end="187:22">-&gt;</operator><name pos:start="187:23" pos:end="187:27">flags</name></name> <operator pos:start="187:29" pos:end="187:29">&amp;</operator> <name pos:start="187:31" pos:end="187:48">AVFMT_NOTIMESTAMPS</name><operator pos:start="187:49" pos:end="187:49">)</operator></expr>)</condition> <block pos:start="187:52" pos:end="255:5">{<block_content pos:start="189:9" pos:end="253:6">

        <if_stmt pos:start="189:9" pos:end="209:9"><if pos:start="189:9" pos:end="209:9">if <condition pos:start="189:12" pos:end="193:32">(<expr pos:start="189:13" pos:end="193:31"><name pos:start="189:13" pos:end="189:20"><name pos:start="189:13" pos:end="189:15">pkt</name><operator pos:start="189:16" pos:end="189:17">-&gt;</operator><name pos:start="189:18" pos:end="189:20">dts</name></name> <operator pos:start="189:22" pos:end="189:23">!=</operator> <name pos:start="189:25" pos:end="189:38">AV_NOPTS_VALUE</name> <operator pos:start="189:40" pos:end="189:41">&amp;&amp;</operator>

            <name pos:start="191:13" pos:end="191:20"><name pos:start="191:13" pos:end="191:15">pkt</name><operator pos:start="191:16" pos:end="191:17">-&gt;</operator><name pos:start="191:18" pos:end="191:20">pts</name></name> <operator pos:start="191:22" pos:end="191:23">!=</operator> <name pos:start="191:25" pos:end="191:38">AV_NOPTS_VALUE</name> <operator pos:start="191:40" pos:end="191:41">&amp;&amp;</operator>

            <name pos:start="193:13" pos:end="193:20"><name pos:start="193:13" pos:end="193:15">pkt</name><operator pos:start="193:16" pos:end="193:17">-&gt;</operator><name pos:start="193:18" pos:end="193:20">dts</name></name> <operator pos:start="193:22" pos:end="193:22">&gt;</operator> <name pos:start="193:24" pos:end="193:31"><name pos:start="193:24" pos:end="193:26">pkt</name><operator pos:start="193:27" pos:end="193:28">-&gt;</operator><name pos:start="193:29" pos:end="193:31">pts</name></name></expr>)</condition> <block pos:start="193:34" pos:end="209:9">{<block_content pos:start="195:13" pos:end="207:73">

            <expr_stmt pos:start="195:13" pos:end="199:52"><expr pos:start="195:13" pos:end="199:51"><call pos:start="195:13" pos:end="199:51"><name pos:start="195:13" pos:end="195:18">av_log</name><argument_list pos:start="195:19" pos:end="199:51">(<argument pos:start="195:20" pos:end="195:20"><expr pos:start="195:20" pos:end="195:20"><name pos:start="195:20" pos:end="195:20">s</name></expr></argument>, <argument pos:start="195:23" pos:end="195:36"><expr pos:start="195:23" pos:end="195:36"><name pos:start="195:23" pos:end="195:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="195:39" pos:end="195:122"><expr pos:start="195:39" pos:end="195:122"><literal type="string" pos:start="195:39" pos:end="195:54">"Invalid DTS: %"</literal><name pos:start="195:55" pos:end="195:60">PRId64</name><literal type="string" pos:start="195:61" pos:end="195:69">" PTS: %"</literal><name pos:start="195:70" pos:end="195:75">PRId64</name><literal type="string" pos:start="195:76" pos:end="195:122">" in output stream %d:%d, replacing by guess\n"</literal></expr></argument>,

                   <argument pos:start="197:20" pos:end="197:27"><expr pos:start="197:20" pos:end="197:27"><name pos:start="197:20" pos:end="197:27"><name pos:start="197:20" pos:end="197:22">pkt</name><operator pos:start="197:23" pos:end="197:24">-&gt;</operator><name pos:start="197:25" pos:end="197:27">dts</name></name></expr></argument>, <argument pos:start="197:30" pos:end="197:37"><expr pos:start="197:30" pos:end="197:37"><name pos:start="197:30" pos:end="197:37"><name pos:start="197:30" pos:end="197:32">pkt</name><operator pos:start="197:33" pos:end="197:34">-&gt;</operator><name pos:start="197:35" pos:end="197:37">pts</name></name></expr></argument>,

                   <argument pos:start="199:20" pos:end="199:34"><expr pos:start="199:20" pos:end="199:34"><name pos:start="199:20" pos:end="199:34"><name pos:start="199:20" pos:end="199:22">ost</name><operator pos:start="199:23" pos:end="199:24">-&gt;</operator><name pos:start="199:25" pos:end="199:34">file_index</name></name></expr></argument>, <argument pos:start="199:37" pos:end="199:50"><expr pos:start="199:37" pos:end="199:50"><name pos:start="199:37" pos:end="199:50"><name pos:start="199:37" pos:end="199:39">ost</name><operator pos:start="199:40" pos:end="199:41">-&gt;</operator><name pos:start="199:42" pos:end="199:43">st</name><operator pos:start="199:44" pos:end="199:45">-&gt;</operator><name pos:start="199:46" pos:end="199:50">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="201:13" pos:end="207:73"><expr pos:start="201:13" pos:end="207:72"><name pos:start="201:13" pos:end="201:20"><name pos:start="201:13" pos:end="201:15">pkt</name><operator pos:start="201:16" pos:end="201:17">-&gt;</operator><name pos:start="201:18" pos:end="201:20">pts</name></name> <operator pos:start="201:22" pos:end="201:22">=</operator>

            <name pos:start="203:13" pos:end="203:20"><name pos:start="203:13" pos:end="203:15">pkt</name><operator pos:start="203:16" pos:end="203:17">-&gt;</operator><name pos:start="203:18" pos:end="203:20">dts</name></name> <operator pos:start="203:22" pos:end="203:22">=</operator> <name pos:start="203:24" pos:end="203:31"><name pos:start="203:24" pos:end="203:26">pkt</name><operator pos:start="203:27" pos:end="203:28">-&gt;</operator><name pos:start="203:29" pos:end="203:31">pts</name></name> <operator pos:start="203:33" pos:end="203:33">+</operator> <name pos:start="203:35" pos:end="203:42"><name pos:start="203:35" pos:end="203:37">pkt</name><operator pos:start="203:38" pos:end="203:39">-&gt;</operator><name pos:start="203:40" pos:end="203:42">dts</name></name> <operator pos:start="203:44" pos:end="203:44">+</operator> <name pos:start="203:46" pos:end="203:62"><name pos:start="203:46" pos:end="203:48">ost</name><operator pos:start="203:49" pos:end="203:50">-&gt;</operator><name pos:start="203:51" pos:end="203:62">last_mux_dts</name></name> <operator pos:start="203:64" pos:end="203:64">+</operator> <literal type="number" pos:start="203:66" pos:end="205:22">1</literal>

                     <operator pos:start="205:22" pos:end="205:22">-</operator> <call pos:start="205:24" pos:end="205:72"><name pos:start="205:24" pos:end="205:29">FFMIN3</name><argument_list pos:start="205:30" pos:end="205:72">(<argument pos:start="205:31" pos:end="205:38"><expr pos:start="205:31" pos:end="205:38"><name pos:start="205:31" pos:end="205:38"><name pos:start="205:31" pos:end="205:33">pkt</name><operator pos:start="205:34" pos:end="205:35">-&gt;</operator><name pos:start="205:36" pos:end="205:38">pts</name></name></expr></argument>, <argument pos:start="205:41" pos:end="205:48"><expr pos:start="205:41" pos:end="205:48"><name pos:start="205:41" pos:end="205:48"><name pos:start="205:41" pos:end="205:43">pkt</name><operator pos:start="205:44" pos:end="205:45">-&gt;</operator><name pos:start="205:46" pos:end="205:48">dts</name></name></expr></argument>, <argument pos:start="205:51" pos:end="205:71"><expr pos:start="205:51" pos:end="205:71"><name pos:start="205:51" pos:end="205:67"><name pos:start="205:51" pos:end="205:53">ost</name><operator pos:start="205:54" pos:end="205:55">-&gt;</operator><name pos:start="205:56" pos:end="205:67">last_mux_dts</name></name> <operator pos:start="205:69" pos:end="205:69">+</operator> <literal type="number" pos:start="205:71" pos:end="205:71">1</literal></expr></argument>)</argument_list></call>

                     <operator pos:start="207:22" pos:end="207:22">-</operator> <call pos:start="207:24" pos:end="207:72"><name pos:start="207:24" pos:end="207:29">FFMAX3</name><argument_list pos:start="207:30" pos:end="207:72">(<argument pos:start="207:31" pos:end="207:38"><expr pos:start="207:31" pos:end="207:38"><name pos:start="207:31" pos:end="207:38"><name pos:start="207:31" pos:end="207:33">pkt</name><operator pos:start="207:34" pos:end="207:35">-&gt;</operator><name pos:start="207:36" pos:end="207:38">pts</name></name></expr></argument>, <argument pos:start="207:41" pos:end="207:48"><expr pos:start="207:41" pos:end="207:48"><name pos:start="207:41" pos:end="207:48"><name pos:start="207:41" pos:end="207:43">pkt</name><operator pos:start="207:44" pos:end="207:45">-&gt;</operator><name pos:start="207:46" pos:end="207:48">dts</name></name></expr></argument>, <argument pos:start="207:51" pos:end="207:71"><expr pos:start="207:51" pos:end="207:71"><name pos:start="207:51" pos:end="207:67"><name pos:start="207:51" pos:end="207:53">ost</name><operator pos:start="207:54" pos:end="207:55">-&gt;</operator><name pos:start="207:56" pos:end="207:67">last_mux_dts</name></name> <operator pos:start="207:69" pos:end="207:69">+</operator> <literal type="number" pos:start="207:71" pos:end="207:71">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

     <if_stmt pos:start="211:6" pos:end="253:6"><if pos:start="211:6" pos:end="253:6">if<condition pos:start="211:8" pos:end="217:44">(

        <expr pos:start="213:9" pos:end="217:43"><operator pos:start="213:9" pos:end="213:9">(</operator><name pos:start="213:10" pos:end="213:26"><name pos:start="213:10" pos:end="213:14">avctx</name><operator pos:start="213:15" pos:end="213:16">-&gt;</operator><name pos:start="213:17" pos:end="213:26">codec_type</name></name> <operator pos:start="213:28" pos:end="213:29">==</operator> <name pos:start="213:31" pos:end="213:48">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="213:50" pos:end="213:51">||</operator> <name pos:start="213:53" pos:end="213:69"><name pos:start="213:53" pos:end="213:57">avctx</name><operator pos:start="213:58" pos:end="213:59">-&gt;</operator><name pos:start="213:60" pos:end="213:69">codec_type</name></name> <operator pos:start="213:71" pos:end="213:72">==</operator> <name pos:start="213:74" pos:end="213:91">AVMEDIA_TYPE_VIDEO</name><operator pos:start="213:92" pos:end="213:92">)</operator> <operator pos:start="213:94" pos:end="213:95">&amp;&amp;</operator>

        <name pos:start="215:9" pos:end="215:16"><name pos:start="215:9" pos:end="215:11">pkt</name><operator pos:start="215:12" pos:end="215:13">-&gt;</operator><name pos:start="215:14" pos:end="215:16">dts</name></name> <operator pos:start="215:18" pos:end="215:19">!=</operator> <name pos:start="215:21" pos:end="215:34">AV_NOPTS_VALUE</name> <operator pos:start="215:36" pos:end="215:37">&amp;&amp;</operator>

        <name pos:start="217:9" pos:end="217:25"><name pos:start="217:9" pos:end="217:11">ost</name><operator pos:start="217:12" pos:end="217:13">-&gt;</operator><name pos:start="217:14" pos:end="217:25">last_mux_dts</name></name> <operator pos:start="217:27" pos:end="217:28">!=</operator> <name pos:start="217:30" pos:end="217:43">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="217:46" pos:end="253:6">{<block_content pos:start="219:7" pos:end="251:7">

      <decl_stmt pos:start="219:7" pos:end="219:82"><decl pos:start="219:7" pos:end="219:81"><type pos:start="219:7" pos:end="219:13"><name pos:start="219:7" pos:end="219:13">int64_t</name></type> <name pos:start="219:15" pos:end="219:17">max</name> <init pos:start="219:19" pos:end="219:81">= <expr pos:start="219:21" pos:end="219:81"><name pos:start="219:21" pos:end="219:37"><name pos:start="219:21" pos:end="219:23">ost</name><operator pos:start="219:24" pos:end="219:25">-&gt;</operator><name pos:start="219:26" pos:end="219:37">last_mux_dts</name></name> <operator pos:start="219:39" pos:end="219:39">+</operator> <operator pos:start="219:41" pos:end="219:41">!</operator><operator pos:start="219:42" pos:end="219:42">(</operator><name pos:start="219:43" pos:end="219:59"><name pos:start="219:43" pos:end="219:43">s</name><operator pos:start="219:44" pos:end="219:45">-&gt;</operator><name pos:start="219:46" pos:end="219:52">oformat</name><operator pos:start="219:53" pos:end="219:54">-&gt;</operator><name pos:start="219:55" pos:end="219:59">flags</name></name> <operator pos:start="219:61" pos:end="219:61">&amp;</operator> <name pos:start="219:63" pos:end="219:80">AVFMT_TS_NONSTRICT</name><operator pos:start="219:81" pos:end="219:81">)</operator></expr></init></decl>;</decl_stmt>

      <if_stmt pos:start="221:7" pos:end="251:7"><if pos:start="221:7" pos:end="251:7">if <condition pos:start="221:10" pos:end="221:25">(<expr pos:start="221:11" pos:end="221:24"><name pos:start="221:11" pos:end="221:18"><name pos:start="221:11" pos:end="221:13">pkt</name><operator pos:start="221:14" pos:end="221:15">-&gt;</operator><name pos:start="221:16" pos:end="221:18">dts</name></name> <operator pos:start="221:20" pos:end="221:20">&lt;</operator> <name pos:start="221:22" pos:end="221:24">max</name></expr>)</condition> <block pos:start="221:27" pos:end="251:7">{<block_content pos:start="223:9" pos:end="249:23">

        <decl_stmt pos:start="223:9" pos:end="223:117"><decl pos:start="223:9" pos:end="223:116"><type pos:start="223:9" pos:end="223:11"><name pos:start="223:9" pos:end="223:11">int</name></type> <name pos:start="223:13" pos:end="223:20">loglevel</name> <init pos:start="223:22" pos:end="223:116">= <expr pos:start="223:24" pos:end="223:116"><ternary pos:start="223:24" pos:end="223:116"><condition pos:start="223:24" pos:end="223:86"><expr pos:start="223:24" pos:end="223:84"><name pos:start="223:24" pos:end="223:26">max</name> <operator pos:start="223:28" pos:end="223:28">-</operator> <name pos:start="223:30" pos:end="223:37"><name pos:start="223:30" pos:end="223:32">pkt</name><operator pos:start="223:33" pos:end="223:34">-&gt;</operator><name pos:start="223:35" pos:end="223:37">dts</name></name> <operator pos:start="223:39" pos:end="223:39">&gt;</operator> <literal type="number" pos:start="223:41" pos:end="223:41">2</literal> <operator pos:start="223:43" pos:end="223:44">||</operator> <name pos:start="223:46" pos:end="223:62"><name pos:start="223:46" pos:end="223:50">avctx</name><operator pos:start="223:51" pos:end="223:52">-&gt;</operator><name pos:start="223:53" pos:end="223:62">codec_type</name></name> <operator pos:start="223:64" pos:end="223:65">==</operator> <name pos:start="223:67" pos:end="223:84">AVMEDIA_TYPE_VIDEO</name></expr> ?</condition><then pos:start="223:88" pos:end="223:101"> <expr pos:start="223:88" pos:end="223:101"><name pos:start="223:88" pos:end="223:101">AV_LOG_WARNING</name></expr> </then><else pos:start="223:103" pos:end="223:116">: <expr pos:start="223:105" pos:end="223:116"><name pos:start="223:105" pos:end="223:116">AV_LOG_DEBUG</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="225:9" pos:end="229:77"><expr pos:start="225:9" pos:end="229:76"><call pos:start="225:9" pos:end="229:76"><name pos:start="225:9" pos:end="225:14">av_log</name><argument_list pos:start="225:15" pos:end="229:76">(<argument pos:start="225:16" pos:end="225:16"><expr pos:start="225:16" pos:end="225:16"><name pos:start="225:16" pos:end="225:16">s</name></expr></argument>, <argument pos:start="225:19" pos:end="225:26"><expr pos:start="225:19" pos:end="225:26"><name pos:start="225:19" pos:end="225:26">loglevel</name></expr></argument>, <argument pos:start="225:29" pos:end="227:65"><expr pos:start="225:29" pos:end="227:65"><literal type="string" pos:start="225:29" pos:end="225:66">"Non-monotonous DTS in output stream "</literal>

               <literal type="string" pos:start="227:16" pos:end="227:35">"%d:%d; previous: %"</literal><name pos:start="227:36" pos:end="227:41">PRId64</name><literal type="string" pos:start="227:42" pos:end="227:55">", current: %"</literal><name pos:start="227:56" pos:end="227:61">PRId64</name><literal type="string" pos:start="227:62" pos:end="227:65">"; "</literal></expr></argument>,

               <argument pos:start="229:16" pos:end="229:30"><expr pos:start="229:16" pos:end="229:30"><name pos:start="229:16" pos:end="229:30"><name pos:start="229:16" pos:end="229:18">ost</name><operator pos:start="229:19" pos:end="229:20">-&gt;</operator><name pos:start="229:21" pos:end="229:30">file_index</name></name></expr></argument>, <argument pos:start="229:33" pos:end="229:46"><expr pos:start="229:33" pos:end="229:46"><name pos:start="229:33" pos:end="229:46"><name pos:start="229:33" pos:end="229:35">ost</name><operator pos:start="229:36" pos:end="229:37">-&gt;</operator><name pos:start="229:38" pos:end="229:39">st</name><operator pos:start="229:40" pos:end="229:41">-&gt;</operator><name pos:start="229:42" pos:end="229:46">index</name></name></expr></argument>, <argument pos:start="229:49" pos:end="229:65"><expr pos:start="229:49" pos:end="229:65"><name pos:start="229:49" pos:end="229:65"><name pos:start="229:49" pos:end="229:51">ost</name><operator pos:start="229:52" pos:end="229:53">-&gt;</operator><name pos:start="229:54" pos:end="229:65">last_mux_dts</name></name></expr></argument>, <argument pos:start="229:68" pos:end="229:75"><expr pos:start="229:68" pos:end="229:75"><name pos:start="229:68" pos:end="229:75"><name pos:start="229:68" pos:end="229:70">pkt</name><operator pos:start="229:71" pos:end="229:72">-&gt;</operator><name pos:start="229:73" pos:end="229:75">dts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="231:9" pos:end="237:9"><if pos:start="231:9" pos:end="237:9">if <condition pos:start="231:12" pos:end="231:26">(<expr pos:start="231:13" pos:end="231:25"><name pos:start="231:13" pos:end="231:25">exit_on_error</name></expr>)</condition> <block pos:start="231:28" pos:end="237:9">{<block_content pos:start="233:13" pos:end="235:28">

            <expr_stmt pos:start="233:13" pos:end="233:54"><expr pos:start="233:13" pos:end="233:53"><call pos:start="233:13" pos:end="233:53"><name pos:start="233:13" pos:end="233:18">av_log</name><argument_list pos:start="233:19" pos:end="233:53">(<argument pos:start="233:20" pos:end="233:23"><expr pos:start="233:20" pos:end="233:23"><name pos:start="233:20" pos:end="233:23">NULL</name></expr></argument>, <argument pos:start="233:26" pos:end="233:37"><expr pos:start="233:26" pos:end="233:37"><name pos:start="233:26" pos:end="233:37">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="233:40" pos:end="233:52"><expr pos:start="233:40" pos:end="233:52"><literal type="string" pos:start="233:40" pos:end="233:52">"aborting.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="235:13" pos:end="235:28"><expr pos:start="235:13" pos:end="235:27"><call pos:start="235:13" pos:end="235:27"><name pos:start="235:13" pos:end="235:24">exit_program</name><argument_list pos:start="235:25" pos:end="235:27">(<argument pos:start="235:26" pos:end="235:26"><expr pos:start="235:26" pos:end="235:26"><literal type="number" pos:start="235:26" pos:end="235:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="239:9" pos:end="243:20"><expr pos:start="239:9" pos:end="243:19"><call pos:start="239:9" pos:end="243:19"><name pos:start="239:9" pos:end="239:14">av_log</name><argument_list pos:start="239:15" pos:end="243:19">(<argument pos:start="239:16" pos:end="239:16"><expr pos:start="239:16" pos:end="239:16"><name pos:start="239:16" pos:end="239:16">s</name></expr></argument>, <argument pos:start="239:19" pos:end="239:26"><expr pos:start="239:19" pos:end="239:26"><name pos:start="239:19" pos:end="239:26">loglevel</name></expr></argument>, <argument pos:start="239:29" pos:end="241:62"><expr pos:start="239:29" pos:end="241:62"><literal type="string" pos:start="239:29" pos:end="239:43">"changing to %"</literal><name pos:start="239:44" pos:end="239:49">PRId64</name><literal type="string" pos:start="239:50" pos:end="239:69">". This may result "</literal>

               <literal type="string" pos:start="241:16" pos:end="241:62">"in incorrect timestamps in the output file.\n"</literal></expr></argument>,

               <argument pos:start="243:16" pos:end="243:18"><expr pos:start="243:16" pos:end="243:18"><name pos:start="243:16" pos:end="243:18">max</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="245:9" pos:end="247:44"><if pos:start="245:9" pos:end="247:44">if<condition pos:start="245:11" pos:end="245:32">(<expr pos:start="245:12" pos:end="245:31"><name pos:start="245:12" pos:end="245:19"><name pos:start="245:12" pos:end="245:14">pkt</name><operator pos:start="245:15" pos:end="245:16">-&gt;</operator><name pos:start="245:17" pos:end="245:19">pts</name></name> <operator pos:start="245:21" pos:end="245:22">&gt;=</operator> <name pos:start="245:24" pos:end="245:31"><name pos:start="245:24" pos:end="245:26">pkt</name><operator pos:start="245:27" pos:end="245:28">-&gt;</operator><name pos:start="245:29" pos:end="245:31">dts</name></name></expr>)</condition><block type="pseudo" pos:start="247:13" pos:end="247:44"><block_content pos:start="247:13" pos:end="247:44">

            <expr_stmt pos:start="247:13" pos:end="247:44"><expr pos:start="247:13" pos:end="247:43"><name pos:start="247:13" pos:end="247:20"><name pos:start="247:13" pos:end="247:15">pkt</name><operator pos:start="247:16" pos:end="247:17">-&gt;</operator><name pos:start="247:18" pos:end="247:20">pts</name></name> <operator pos:start="247:22" pos:end="247:22">=</operator> <call pos:start="247:24" pos:end="247:43"><name pos:start="247:24" pos:end="247:28">FFMAX</name><argument_list pos:start="247:29" pos:end="247:43">(<argument pos:start="247:30" pos:end="247:37"><expr pos:start="247:30" pos:end="247:37"><name pos:start="247:30" pos:end="247:37"><name pos:start="247:30" pos:end="247:32">pkt</name><operator pos:start="247:33" pos:end="247:34">-&gt;</operator><name pos:start="247:35" pos:end="247:37">pts</name></name></expr></argument>, <argument pos:start="247:40" pos:end="247:42"><expr pos:start="247:40" pos:end="247:42"><name pos:start="247:40" pos:end="247:42">max</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="249:9" pos:end="249:23"><expr pos:start="249:9" pos:end="249:22"><name pos:start="249:9" pos:end="249:16"><name pos:start="249:9" pos:end="249:11">pkt</name><operator pos:start="249:12" pos:end="249:13">-&gt;</operator><name pos:start="249:14" pos:end="249:16">dts</name></name> <operator pos:start="249:18" pos:end="249:18">=</operator> <name pos:start="249:20" pos:end="249:22">max</name></expr>;</expr_stmt>

      </block_content>}</block></if></if_stmt>

     </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="257:5" pos:end="257:33"><expr pos:start="257:5" pos:end="257:32"><name pos:start="257:5" pos:end="257:21"><name pos:start="257:5" pos:end="257:7">ost</name><operator pos:start="257:8" pos:end="257:9">-&gt;</operator><name pos:start="257:10" pos:end="257:21">last_mux_dts</name></name> <operator pos:start="257:23" pos:end="257:23">=</operator> <name pos:start="257:25" pos:end="257:32"><name pos:start="257:25" pos:end="257:27">pkt</name><operator pos:start="257:28" pos:end="257:29">-&gt;</operator><name pos:start="257:30" pos:end="257:32">dts</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="261:5" pos:end="261:32"><expr pos:start="261:5" pos:end="261:31"><name pos:start="261:5" pos:end="261:18"><name pos:start="261:5" pos:end="261:7">ost</name><operator pos:start="261:8" pos:end="261:9">-&gt;</operator><name pos:start="261:10" pos:end="261:18">data_size</name></name> <operator pos:start="261:20" pos:end="261:21">+=</operator> <name pos:start="261:23" pos:end="261:31"><name pos:start="261:23" pos:end="261:25">pkt</name><operator pos:start="261:26" pos:end="261:27">-&gt;</operator><name pos:start="261:28" pos:end="261:31">size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="263:5" pos:end="263:27"><expr pos:start="263:5" pos:end="263:26"><name pos:start="263:5" pos:end="263:24"><name pos:start="263:5" pos:end="263:7">ost</name><operator pos:start="263:8" pos:end="263:9">-&gt;</operator><name pos:start="263:10" pos:end="263:24">packets_written</name></name><operator pos:start="263:25" pos:end="263:26">++</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="267:5" pos:end="267:35"><expr pos:start="267:5" pos:end="267:34"><name pos:start="267:5" pos:end="267:21"><name pos:start="267:5" pos:end="267:7">pkt</name><operator pos:start="267:8" pos:end="267:9">-&gt;</operator><name pos:start="267:10" pos:end="267:21">stream_index</name></name> <operator pos:start="267:23" pos:end="267:23">=</operator> <name pos:start="267:25" pos:end="267:34"><name pos:start="267:25" pos:end="267:27">ost</name><operator pos:start="267:28" pos:end="267:29">-&gt;</operator><name pos:start="267:30" pos:end="267:34">index</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="271:5" pos:end="287:5"><if pos:start="271:5" pos:end="287:5">if <condition pos:start="271:8" pos:end="271:17">(<expr pos:start="271:9" pos:end="271:16"><name pos:start="271:9" pos:end="271:16">debug_ts</name></expr>)</condition> <block pos:start="271:19" pos:end="287:5">{<block_content pos:start="273:9" pos:end="285:16">

        <expr_stmt pos:start="273:9" pos:end="285:16"><expr pos:start="273:9" pos:end="285:15"><call pos:start="273:9" pos:end="285:15"><name pos:start="273:9" pos:end="273:14">av_log</name><argument_list pos:start="273:15" pos:end="285:15">(<argument pos:start="273:16" pos:end="273:19"><expr pos:start="273:16" pos:end="273:19"><name pos:start="273:16" pos:end="273:19">NULL</name></expr></argument>, <argument pos:start="273:22" pos:end="273:32"><expr pos:start="273:22" pos:end="273:32"><name pos:start="273:22" pos:end="273:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="273:35" pos:end="275:81"><expr pos:start="273:35" pos:end="275:81"><literal type="string" pos:start="273:35" pos:end="273:53">"muxer &lt;- type:%s "</literal>

                <literal type="string" pos:start="275:17" pos:end="275:81">"pkt_pts:%s pkt_pts_time:%s pkt_dts:%s pkt_dts_time:%s size:%d\n"</literal></expr></argument>,

                <argument pos:start="277:17" pos:end="277:66"><expr pos:start="277:17" pos:end="277:66"><call pos:start="277:17" pos:end="277:66"><name pos:start="277:17" pos:end="277:40">av_get_media_type_string</name><argument_list pos:start="277:41" pos:end="277:66">(<argument pos:start="277:42" pos:end="277:65"><expr pos:start="277:42" pos:end="277:65"><name pos:start="277:42" pos:end="277:65"><name pos:start="277:42" pos:end="277:44">ost</name><operator pos:start="277:45" pos:end="277:46">-&gt;</operator><name pos:start="277:47" pos:end="277:53">enc_ctx</name><operator pos:start="277:54" pos:end="277:55">-&gt;</operator><name pos:start="277:56" pos:end="277:65">codec_type</name></name></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="279:17" pos:end="279:35"><expr pos:start="279:17" pos:end="279:35"><call pos:start="279:17" pos:end="279:35"><name pos:start="279:17" pos:end="279:25">av_ts2str</name><argument_list pos:start="279:26" pos:end="279:35">(<argument pos:start="279:27" pos:end="279:34"><expr pos:start="279:27" pos:end="279:34"><name pos:start="279:27" pos:end="279:34"><name pos:start="279:27" pos:end="279:29">pkt</name><operator pos:start="279:30" pos:end="279:31">-&gt;</operator><name pos:start="279:32" pos:end="279:34">pts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="279:38" pos:end="279:81"><expr pos:start="279:38" pos:end="279:81"><call pos:start="279:38" pos:end="279:81"><name pos:start="279:38" pos:end="279:50">av_ts2timestr</name><argument_list pos:start="279:51" pos:end="279:81">(<argument pos:start="279:52" pos:end="279:59"><expr pos:start="279:52" pos:end="279:59"><name pos:start="279:52" pos:end="279:59"><name pos:start="279:52" pos:end="279:54">pkt</name><operator pos:start="279:55" pos:end="279:56">-&gt;</operator><name pos:start="279:57" pos:end="279:59">pts</name></name></expr></argument>, <argument pos:start="279:62" pos:end="279:80"><expr pos:start="279:62" pos:end="279:80"><operator pos:start="279:62" pos:end="279:62">&amp;</operator><name pos:start="279:63" pos:end="279:80"><name pos:start="279:63" pos:end="279:65">ost</name><operator pos:start="279:66" pos:end="279:67">-&gt;</operator><name pos:start="279:68" pos:end="279:69">st</name><operator pos:start="279:70" pos:end="279:71">-&gt;</operator><name pos:start="279:72" pos:end="279:80">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="281:17" pos:end="281:35"><expr pos:start="281:17" pos:end="281:35"><call pos:start="281:17" pos:end="281:35"><name pos:start="281:17" pos:end="281:25">av_ts2str</name><argument_list pos:start="281:26" pos:end="281:35">(<argument pos:start="281:27" pos:end="281:34"><expr pos:start="281:27" pos:end="281:34"><name pos:start="281:27" pos:end="281:34"><name pos:start="281:27" pos:end="281:29">pkt</name><operator pos:start="281:30" pos:end="281:31">-&gt;</operator><name pos:start="281:32" pos:end="281:34">dts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="281:38" pos:end="281:81"><expr pos:start="281:38" pos:end="281:81"><call pos:start="281:38" pos:end="281:81"><name pos:start="281:38" pos:end="281:50">av_ts2timestr</name><argument_list pos:start="281:51" pos:end="281:81">(<argument pos:start="281:52" pos:end="281:59"><expr pos:start="281:52" pos:end="281:59"><name pos:start="281:52" pos:end="281:59"><name pos:start="281:52" pos:end="281:54">pkt</name><operator pos:start="281:55" pos:end="281:56">-&gt;</operator><name pos:start="281:57" pos:end="281:59">dts</name></name></expr></argument>, <argument pos:start="281:62" pos:end="281:80"><expr pos:start="281:62" pos:end="281:80"><operator pos:start="281:62" pos:end="281:62">&amp;</operator><name pos:start="281:63" pos:end="281:80"><name pos:start="281:63" pos:end="281:65">ost</name><operator pos:start="281:66" pos:end="281:67">-&gt;</operator><name pos:start="281:68" pos:end="281:69">st</name><operator pos:start="281:70" pos:end="281:71">-&gt;</operator><name pos:start="281:72" pos:end="281:80">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="283:17" pos:end="283:25"><expr pos:start="283:17" pos:end="283:25"><name pos:start="283:17" pos:end="283:25"><name pos:start="283:17" pos:end="283:19">pkt</name><operator pos:start="283:20" pos:end="283:21">-&gt;</operator><name pos:start="283:22" pos:end="283:25">size</name></name></expr></argument>

              )</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="291:5" pos:end="291:45"><expr pos:start="291:5" pos:end="291:44"><name pos:start="291:5" pos:end="291:7">ret</name> <operator pos:start="291:9" pos:end="291:9">=</operator> <call pos:start="291:11" pos:end="291:44"><name pos:start="291:11" pos:end="291:36">av_interleaved_write_frame</name><argument_list pos:start="291:37" pos:end="291:44">(<argument pos:start="291:38" pos:end="291:38"><expr pos:start="291:38" pos:end="291:38"><name pos:start="291:38" pos:end="291:38">s</name></expr></argument>, <argument pos:start="291:41" pos:end="291:43"><expr pos:start="291:41" pos:end="291:43"><name pos:start="291:41" pos:end="291:43">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="293:5" pos:end="301:5"><if pos:start="293:5" pos:end="301:5">if <condition pos:start="293:8" pos:end="293:16">(<expr pos:start="293:9" pos:end="293:15"><name pos:start="293:9" pos:end="293:11">ret</name> <operator pos:start="293:13" pos:end="293:13">&lt;</operator> <literal type="number" pos:start="293:15" pos:end="293:15">0</literal></expr>)</condition> <block pos:start="293:18" pos:end="301:5">{<block_content pos:start="295:9" pos:end="299:91">

        <expr_stmt pos:start="295:9" pos:end="295:57"><expr pos:start="295:9" pos:end="295:56"><call pos:start="295:9" pos:end="295:56"><name pos:start="295:9" pos:end="295:19">print_error</name><argument_list pos:start="295:20" pos:end="295:56">(<argument pos:start="295:21" pos:end="295:50"><expr pos:start="295:21" pos:end="295:50"><literal type="string" pos:start="295:21" pos:end="295:50">"av_interleaved_write_frame()"</literal></expr></argument>, <argument pos:start="295:53" pos:end="295:55"><expr pos:start="295:53" pos:end="295:55"><name pos:start="295:53" pos:end="295:55">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="297:9" pos:end="297:29"><expr pos:start="297:9" pos:end="297:28"><name pos:start="297:9" pos:end="297:24">main_return_code</name> <operator pos:start="297:26" pos:end="297:26">=</operator> <literal type="number" pos:start="297:28" pos:end="297:28">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="299:9" pos:end="299:91"><expr pos:start="299:9" pos:end="299:90"><call pos:start="299:9" pos:end="299:90"><name pos:start="299:9" pos:end="299:32">close_all_output_streams</name><argument_list pos:start="299:33" pos:end="299:90">(<argument pos:start="299:34" pos:end="299:36"><expr pos:start="299:34" pos:end="299:36"><name pos:start="299:34" pos:end="299:36">ost</name></expr></argument>, <argument pos:start="299:39" pos:end="299:71"><expr pos:start="299:39" pos:end="299:71"><name pos:start="299:39" pos:end="299:52">MUXER_FINISHED</name> <operator pos:start="299:54" pos:end="299:54">|</operator> <name pos:start="299:56" pos:end="299:71">ENCODER_FINISHED</name></expr></argument>, <argument pos:start="299:74" pos:end="299:89"><expr pos:start="299:74" pos:end="299:89"><name pos:start="299:74" pos:end="299:89">ENCODER_FINISHED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="303:5" pos:end="303:24"><expr pos:start="303:5" pos:end="303:23"><call pos:start="303:5" pos:end="303:23"><name pos:start="303:5" pos:end="303:18">av_free_packet</name><argument_list pos:start="303:19" pos:end="303:23">(<argument pos:start="303:20" pos:end="303:22"><expr pos:start="303:20" pos:end="303:22"><name pos:start="303:20" pos:end="303:22">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
