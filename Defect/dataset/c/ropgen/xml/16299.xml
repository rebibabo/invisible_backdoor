<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16299.c" pos:tabs="8"><function pos:start="1:1" pos:end="163:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">rm_assemble_video_frame</name><parameter_list pos:start="1:35" pos:end="1:93">(<parameter pos:start="1:36" pos:end="1:53"><decl pos:start="1:36" pos:end="1:53"><type pos:start="1:36" pos:end="1:53"><name pos:start="1:36" pos:end="1:50">AVFormatContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:53">s</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:68"><decl pos:start="1:56" pos:end="1:68"><type pos:start="1:56" pos:end="1:68"><name pos:start="1:56" pos:end="1:64">RMContext</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:68">rm</name></decl></parameter>, <parameter pos:start="1:71" pos:end="1:83"><decl pos:start="1:71" pos:end="1:83"><type pos:start="1:71" pos:end="1:83"><name pos:start="1:71" pos:end="1:78">AVPacket</name> <modifier pos:start="1:80" pos:end="1:80">*</modifier></type><name pos:start="1:81" pos:end="1:83">pkt</name></decl></parameter>, <parameter pos:start="1:86" pos:end="1:92"><decl pos:start="1:86" pos:end="1:92"><type pos:start="1:86" pos:end="1:92"><name pos:start="1:86" pos:end="1:88">int</name></type> <name pos:start="1:90" pos:end="1:92">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="163:1">{<block_content pos:start="5:5" pos:end="161:13">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">ByteIOContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">pb</name> <init pos:start="5:23" pos:end="5:30">= <expr pos:start="5:25" pos:end="5:30"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:30"><name pos:start="5:26" pos:end="5:26">s</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:30">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">hdr</name></decl>, <decl pos:start="7:14" pos:end="7:16"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:16">seq</name></decl>, <decl pos:start="7:19" pos:end="7:25"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:19" pos:end="7:25">pic_num</name></decl>, <decl pos:start="7:28" pos:end="7:31"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:28" pos:end="7:31">len2</name></decl>, <decl pos:start="7:34" pos:end="7:36"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:34" pos:end="7:36">pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">ssize</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:23"><expr pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:7">hdr</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:22"><name pos:start="15:11" pos:end="15:18">get_byte</name><argument_list pos:start="15:19" pos:end="15:22">(<argument pos:start="15:20" pos:end="15:21"><expr pos:start="15:20" pos:end="15:21"><name pos:start="15:20" pos:end="15:21">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="15:25" pos:end="15:30"><expr pos:start="15:25" pos:end="15:29"><name pos:start="15:25" pos:end="15:27">len</name><operator pos:start="15:28" pos:end="15:29">--</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:20"><expr pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:8">type</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <name pos:start="17:12" pos:end="17:14">hdr</name> <operator pos:start="17:16" pos:end="17:17">&gt;&gt;</operator> <literal type="number" pos:start="17:19" pos:end="17:19">6</literal></expr>;</expr_stmt>

    <switch pos:start="19:5" pos:end="81:5">switch<condition pos:start="19:11" pos:end="19:16">(<expr pos:start="19:12" pos:end="19:15"><name pos:start="19:12" pos:end="19:15">type</name></expr>)</condition><block pos:start="19:17" pos:end="81:5">{<block_content pos:start="21:5" pos:end="79:17">

    <case pos:start="21:5" pos:end="21:11">case <expr pos:start="21:10" pos:end="21:10"><literal type="number" pos:start="21:10" pos:end="21:10">0</literal></expr>:</case> <comment type="line" pos:start="21:13" pos:end="21:20">// slice</comment>

    <case pos:start="23:5" pos:end="23:11">case <expr pos:start="23:10" pos:end="23:10"><literal type="number" pos:start="23:10" pos:end="23:10">2</literal></expr>:</case> <comment type="line" pos:start="23:13" pos:end="23:25">// last slice</comment>

        <expr_stmt pos:start="25:9" pos:end="25:27"><expr pos:start="25:9" pos:end="25:26"><name pos:start="25:9" pos:end="25:11">seq</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:26"><name pos:start="25:15" pos:end="25:22">get_byte</name><argument_list pos:start="25:23" pos:end="25:26">(<argument pos:start="25:24" pos:end="25:25"><expr pos:start="25:24" pos:end="25:25"><name pos:start="25:24" pos:end="25:25">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="25:29" pos:end="25:34"><expr pos:start="25:29" pos:end="25:33"><name pos:start="25:29" pos:end="25:31">len</name><operator pos:start="25:32" pos:end="25:33">--</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:33"><expr pos:start="27:9" pos:end="27:32"><name pos:start="27:9" pos:end="27:12">len2</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <call pos:start="27:16" pos:end="27:32"><name pos:start="27:16" pos:end="27:22">get_num</name><argument_list pos:start="27:23" pos:end="27:32">(<argument pos:start="27:24" pos:end="27:25"><expr pos:start="27:24" pos:end="27:25"><name pos:start="27:24" pos:end="27:25">pb</name></expr></argument>, <argument pos:start="27:28" pos:end="27:31"><expr pos:start="27:28" pos:end="27:31"><operator pos:start="27:28" pos:end="27:28">&amp;</operator><name pos:start="27:29" pos:end="27:31">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:32"><expr pos:start="29:9" pos:end="29:31"><name pos:start="29:9" pos:end="29:11">pos</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <call pos:start="29:15" pos:end="29:31"><name pos:start="29:15" pos:end="29:21">get_num</name><argument_list pos:start="29:22" pos:end="29:31">(<argument pos:start="29:23" pos:end="29:24"><expr pos:start="29:23" pos:end="29:24"><name pos:start="29:23" pos:end="29:24">pb</name></expr></argument>, <argument pos:start="29:27" pos:end="29:30"><expr pos:start="29:27" pos:end="29:30"><operator pos:start="29:27" pos:end="29:27">&amp;</operator><name pos:start="29:28" pos:end="29:30">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:31"><expr pos:start="31:9" pos:end="31:30"><name pos:start="31:9" pos:end="31:15">pic_num</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <call pos:start="31:19" pos:end="31:30"><name pos:start="31:19" pos:end="31:26">get_byte</name><argument_list pos:start="31:27" pos:end="31:30">(<argument pos:start="31:28" pos:end="31:29"><expr pos:start="31:28" pos:end="31:29"><name pos:start="31:28" pos:end="31:29">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="31:33" pos:end="31:38"><expr pos:start="31:33" pos:end="31:37"><name pos:start="31:33" pos:end="31:35">len</name><operator pos:start="31:36" pos:end="31:37">--</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:32"><expr pos:start="33:9" pos:end="33:31"><name pos:start="33:9" pos:end="33:25"><name pos:start="33:9" pos:end="33:10">rm</name><operator pos:start="33:11" pos:end="33:12">-&gt;</operator><name pos:start="33:13" pos:end="33:25">remaining_len</name></name> <operator pos:start="33:27" pos:end="33:27">=</operator> <name pos:start="33:29" pos:end="33:31">len</name></expr>;</expr_stmt>

        <break pos:start="35:9" pos:end="35:14">break;</break>

    <case pos:start="37:5" pos:end="37:11">case <expr pos:start="37:10" pos:end="37:10"><literal type="number" pos:start="37:10" pos:end="37:10">1</literal></expr>:</case> <comment type="line" pos:start="37:13" pos:end="37:25">//whole frame</comment>

        <expr_stmt pos:start="39:9" pos:end="39:27"><expr pos:start="39:9" pos:end="39:26"><name pos:start="39:9" pos:end="39:11">seq</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <call pos:start="39:15" pos:end="39:26"><name pos:start="39:15" pos:end="39:22">get_byte</name><argument_list pos:start="39:23" pos:end="39:26">(<argument pos:start="39:24" pos:end="39:25"><expr pos:start="39:24" pos:end="39:25"><name pos:start="39:24" pos:end="39:25">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="39:29" pos:end="39:34"><expr pos:start="39:29" pos:end="39:33"><name pos:start="39:29" pos:end="39:31">len</name><operator pos:start="39:32" pos:end="39:33">--</operator></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="43:32"><if pos:start="41:9" pos:end="43:32">if<condition pos:start="41:11" pos:end="41:43">(<expr pos:start="41:12" pos:end="41:42"><call pos:start="41:12" pos:end="41:38"><name pos:start="41:12" pos:end="41:24">av_new_packet</name><argument_list pos:start="41:25" pos:end="41:38">(<argument pos:start="41:26" pos:end="41:28"><expr pos:start="41:26" pos:end="41:28"><name pos:start="41:26" pos:end="41:28">pkt</name></expr></argument>, <argument pos:start="41:31" pos:end="41:37"><expr pos:start="41:31" pos:end="41:37"><name pos:start="41:31" pos:end="41:33">len</name> <operator pos:start="41:35" pos:end="41:35">+</operator> <literal type="number" pos:start="41:37" pos:end="41:37">9</literal></expr></argument>)</argument_list></call> <operator pos:start="41:40" pos:end="41:40">&lt;</operator> <literal type="number" pos:start="41:42" pos:end="41:42">0</literal></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:32"><block_content pos:start="43:13" pos:end="43:32">

            <return pos:start="43:13" pos:end="43:32">return <expr pos:start="43:20" pos:end="43:31"><call pos:start="43:20" pos:end="43:31"><name pos:start="43:20" pos:end="43:26">AVERROR</name><argument_list pos:start="43:27" pos:end="43:31">(<argument pos:start="43:28" pos:end="43:30"><expr pos:start="43:28" pos:end="43:30"><name pos:start="43:28" pos:end="43:30">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:25"><expr pos:start="45:9" pos:end="45:24"><name pos:start="45:9" pos:end="45:20"><name pos:start="45:9" pos:end="45:11">pkt</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:17">data</name><index pos:start="45:18" pos:end="45:20">[<expr pos:start="45:19" pos:end="45:19"><literal type="number" pos:start="45:19" pos:end="45:19">0</literal></expr>]</index></name> <operator pos:start="45:22" pos:end="45:22">=</operator> <literal type="number" pos:start="45:24" pos:end="45:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:34"><expr pos:start="47:9" pos:end="47:33"><call pos:start="47:9" pos:end="47:33"><name pos:start="47:9" pos:end="47:15">AV_WL32</name><argument_list pos:start="47:16" pos:end="47:33">(<argument pos:start="47:17" pos:end="47:29"><expr pos:start="47:17" pos:end="47:29"><name pos:start="47:17" pos:end="47:25"><name pos:start="47:17" pos:end="47:19">pkt</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:25">data</name></name> <operator pos:start="47:27" pos:end="47:27">+</operator> <literal type="number" pos:start="47:29" pos:end="47:29">1</literal></expr></argument>, <argument pos:start="47:32" pos:end="47:32"><expr pos:start="47:32" pos:end="47:32"><literal type="number" pos:start="47:32" pos:end="47:32">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:34"><expr pos:start="49:9" pos:end="49:33"><call pos:start="49:9" pos:end="49:33"><name pos:start="49:9" pos:end="49:15">AV_WL32</name><argument_list pos:start="49:16" pos:end="49:33">(<argument pos:start="49:17" pos:end="49:29"><expr pos:start="49:17" pos:end="49:29"><name pos:start="49:17" pos:end="49:25"><name pos:start="49:17" pos:end="49:19">pkt</name><operator pos:start="49:20" pos:end="49:21">-&gt;</operator><name pos:start="49:22" pos:end="49:25">data</name></name> <operator pos:start="49:27" pos:end="49:27">+</operator> <literal type="number" pos:start="49:29" pos:end="49:29">5</literal></expr></argument>, <argument pos:start="49:32" pos:end="49:32"><expr pos:start="49:32" pos:end="49:32"><literal type="number" pos:start="49:32" pos:end="49:32">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:43"><expr pos:start="51:9" pos:end="51:42"><call pos:start="51:9" pos:end="51:42"><name pos:start="51:9" pos:end="51:18">get_buffer</name><argument_list pos:start="51:19" pos:end="51:42">(<argument pos:start="51:20" pos:end="51:21"><expr pos:start="51:20" pos:end="51:21"><name pos:start="51:20" pos:end="51:21">pb</name></expr></argument>, <argument pos:start="51:24" pos:end="51:36"><expr pos:start="51:24" pos:end="51:36"><name pos:start="51:24" pos:end="51:32"><name pos:start="51:24" pos:end="51:26">pkt</name><operator pos:start="51:27" pos:end="51:28">-&gt;</operator><name pos:start="51:29" pos:end="51:32">data</name></name> <operator pos:start="51:34" pos:end="51:34">+</operator> <literal type="number" pos:start="51:36" pos:end="51:36">9</literal></expr></argument>, <argument pos:start="51:39" pos:end="51:41"><expr pos:start="51:39" pos:end="51:41"><name pos:start="51:39" pos:end="51:41">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:30"><expr pos:start="53:9" pos:end="53:29"><name pos:start="53:9" pos:end="53:25"><name pos:start="53:9" pos:end="53:10">rm</name><operator pos:start="53:11" pos:end="53:12">-&gt;</operator><name pos:start="53:13" pos:end="53:25">remaining_len</name></name> <operator pos:start="53:27" pos:end="53:27">=</operator> <literal type="number" pos:start="53:29" pos:end="53:29">0</literal></expr>;</expr_stmt>

        <return pos:start="55:9" pos:end="55:17">return <expr pos:start="55:16" pos:end="55:16"><literal type="number" pos:start="55:16" pos:end="55:16">0</literal></expr>;</return>

    <case pos:start="57:5" pos:end="57:11">case <expr pos:start="57:10" pos:end="57:10"><literal type="number" pos:start="57:10" pos:end="57:10">3</literal></expr>:</case> <comment type="line" pos:start="57:13" pos:end="57:39">//frame as a part of packet</comment>

        <expr_stmt pos:start="59:9" pos:end="59:33"><expr pos:start="59:9" pos:end="59:32"><name pos:start="59:9" pos:end="59:12">len2</name> <operator pos:start="59:14" pos:end="59:14">=</operator> <call pos:start="59:16" pos:end="59:32"><name pos:start="59:16" pos:end="59:22">get_num</name><argument_list pos:start="59:23" pos:end="59:32">(<argument pos:start="59:24" pos:end="59:25"><expr pos:start="59:24" pos:end="59:25"><name pos:start="59:24" pos:end="59:25">pb</name></expr></argument>, <argument pos:start="59:28" pos:end="59:31"><expr pos:start="59:28" pos:end="59:31"><operator pos:start="59:28" pos:end="59:28">&amp;</operator><name pos:start="59:29" pos:end="59:31">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:32"><expr pos:start="61:9" pos:end="61:31"><name pos:start="61:9" pos:end="61:11">pos</name> <operator pos:start="61:13" pos:end="61:13">=</operator> <call pos:start="61:15" pos:end="61:31"><name pos:start="61:15" pos:end="61:21">get_num</name><argument_list pos:start="61:22" pos:end="61:31">(<argument pos:start="61:23" pos:end="61:24"><expr pos:start="61:23" pos:end="61:24"><name pos:start="61:23" pos:end="61:24">pb</name></expr></argument>, <argument pos:start="61:27" pos:end="61:30"><expr pos:start="61:27" pos:end="61:30"><operator pos:start="61:27" pos:end="61:27">&amp;</operator><name pos:start="61:28" pos:end="61:30">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:31"><expr pos:start="63:9" pos:end="63:30"><name pos:start="63:9" pos:end="63:15">pic_num</name> <operator pos:start="63:17" pos:end="63:17">=</operator> <call pos:start="63:19" pos:end="63:30"><name pos:start="63:19" pos:end="63:26">get_byte</name><argument_list pos:start="63:27" pos:end="63:30">(<argument pos:start="63:28" pos:end="63:29"><expr pos:start="63:28" pos:end="63:29"><name pos:start="63:28" pos:end="63:29">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="63:33" pos:end="63:38"><expr pos:start="63:33" pos:end="63:37"><name pos:start="63:33" pos:end="63:35">len</name><operator pos:start="63:36" pos:end="63:37">--</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:39"><expr pos:start="65:9" pos:end="65:38"><name pos:start="65:9" pos:end="65:25"><name pos:start="65:9" pos:end="65:10">rm</name><operator pos:start="65:11" pos:end="65:12">-&gt;</operator><name pos:start="65:13" pos:end="65:25">remaining_len</name></name> <operator pos:start="65:27" pos:end="65:27">=</operator> <name pos:start="65:29" pos:end="65:31">len</name> <operator pos:start="65:33" pos:end="65:33">-</operator> <name pos:start="65:35" pos:end="65:38">len2</name></expr>;</expr_stmt>

        <if_stmt pos:start="67:9" pos:end="69:32"><if pos:start="67:9" pos:end="69:32">if<condition pos:start="67:11" pos:end="67:44">(<expr pos:start="67:12" pos:end="67:43"><call pos:start="67:12" pos:end="67:39"><name pos:start="67:12" pos:end="67:24">av_new_packet</name><argument_list pos:start="67:25" pos:end="67:39">(<argument pos:start="67:26" pos:end="67:28"><expr pos:start="67:26" pos:end="67:28"><name pos:start="67:26" pos:end="67:28">pkt</name></expr></argument>, <argument pos:start="67:31" pos:end="67:38"><expr pos:start="67:31" pos:end="67:38"><name pos:start="67:31" pos:end="67:34">len2</name> <operator pos:start="67:36" pos:end="67:36">+</operator> <literal type="number" pos:start="67:38" pos:end="67:38">9</literal></expr></argument>)</argument_list></call> <operator pos:start="67:41" pos:end="67:41">&lt;</operator> <literal type="number" pos:start="67:43" pos:end="67:43">0</literal></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:32"><block_content pos:start="69:13" pos:end="69:32">

            <return pos:start="69:13" pos:end="69:32">return <expr pos:start="69:20" pos:end="69:31"><call pos:start="69:20" pos:end="69:31"><name pos:start="69:20" pos:end="69:26">AVERROR</name><argument_list pos:start="69:27" pos:end="69:31">(<argument pos:start="69:28" pos:end="69:30"><expr pos:start="69:28" pos:end="69:30"><name pos:start="69:28" pos:end="69:30">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:25"><expr pos:start="71:9" pos:end="71:24"><name pos:start="71:9" pos:end="71:20"><name pos:start="71:9" pos:end="71:11">pkt</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:17">data</name><index pos:start="71:18" pos:end="71:20">[<expr pos:start="71:19" pos:end="71:19"><literal type="number" pos:start="71:19" pos:end="71:19">0</literal></expr>]</index></name> <operator pos:start="71:22" pos:end="71:22">=</operator> <literal type="number" pos:start="71:24" pos:end="71:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:34"><expr pos:start="73:9" pos:end="73:33"><call pos:start="73:9" pos:end="73:33"><name pos:start="73:9" pos:end="73:15">AV_WL32</name><argument_list pos:start="73:16" pos:end="73:33">(<argument pos:start="73:17" pos:end="73:29"><expr pos:start="73:17" pos:end="73:29"><name pos:start="73:17" pos:end="73:25"><name pos:start="73:17" pos:end="73:19">pkt</name><operator pos:start="73:20" pos:end="73:21">-&gt;</operator><name pos:start="73:22" pos:end="73:25">data</name></name> <operator pos:start="73:27" pos:end="73:27">+</operator> <literal type="number" pos:start="73:29" pos:end="73:29">1</literal></expr></argument>, <argument pos:start="73:32" pos:end="73:32"><expr pos:start="73:32" pos:end="73:32"><literal type="number" pos:start="73:32" pos:end="73:32">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:34"><expr pos:start="75:9" pos:end="75:33"><call pos:start="75:9" pos:end="75:33"><name pos:start="75:9" pos:end="75:15">AV_WL32</name><argument_list pos:start="75:16" pos:end="75:33">(<argument pos:start="75:17" pos:end="75:29"><expr pos:start="75:17" pos:end="75:29"><name pos:start="75:17" pos:end="75:25"><name pos:start="75:17" pos:end="75:19">pkt</name><operator pos:start="75:20" pos:end="75:21">-&gt;</operator><name pos:start="75:22" pos:end="75:25">data</name></name> <operator pos:start="75:27" pos:end="75:27">+</operator> <literal type="number" pos:start="75:29" pos:end="75:29">5</literal></expr></argument>, <argument pos:start="75:32" pos:end="75:32"><expr pos:start="75:32" pos:end="75:32"><literal type="number" pos:start="75:32" pos:end="75:32">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:44"><expr pos:start="77:9" pos:end="77:43"><call pos:start="77:9" pos:end="77:43"><name pos:start="77:9" pos:end="77:18">get_buffer</name><argument_list pos:start="77:19" pos:end="77:43">(<argument pos:start="77:20" pos:end="77:21"><expr pos:start="77:20" pos:end="77:21"><name pos:start="77:20" pos:end="77:21">pb</name></expr></argument>, <argument pos:start="77:24" pos:end="77:36"><expr pos:start="77:24" pos:end="77:36"><name pos:start="77:24" pos:end="77:32"><name pos:start="77:24" pos:end="77:26">pkt</name><operator pos:start="77:27" pos:end="77:28">-&gt;</operator><name pos:start="77:29" pos:end="77:32">data</name></name> <operator pos:start="77:34" pos:end="77:34">+</operator> <literal type="number" pos:start="77:36" pos:end="77:36">9</literal></expr></argument>, <argument pos:start="77:39" pos:end="77:42"><expr pos:start="77:39" pos:end="77:42"><name pos:start="77:39" pos:end="77:42">len2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="79:9" pos:end="79:17">return <expr pos:start="79:16" pos:end="79:16"><literal type="number" pos:start="79:16" pos:end="79:16">0</literal></expr>;</return>

    </block_content>}</block></switch>

    <comment type="line" pos:start="83:5" pos:end="83:43">//now we have to deal with single slice</comment>



    <if_stmt pos:start="87:5" pos:end="105:5"><if pos:start="87:5" pos:end="105:5">if<condition pos:start="87:7" pos:end="87:54">(<expr pos:start="87:8" pos:end="87:53"><operator pos:start="87:8" pos:end="87:8">(</operator><name pos:start="87:9" pos:end="87:11">seq</name> <operator pos:start="87:13" pos:end="87:13">&amp;</operator> <literal type="number" pos:start="87:15" pos:end="87:18">0x7F</literal><operator pos:start="87:19" pos:end="87:19">)</operator> <operator pos:start="87:21" pos:end="87:22">==</operator> <literal type="number" pos:start="87:24" pos:end="87:24">1</literal> <operator pos:start="87:26" pos:end="87:27">||</operator> <name pos:start="87:29" pos:end="87:42"><name pos:start="87:29" pos:end="87:30">rm</name><operator pos:start="87:31" pos:end="87:32">-&gt;</operator><name pos:start="87:33" pos:end="87:42">curpic_num</name></name> <operator pos:start="87:44" pos:end="87:45">!=</operator> <name pos:start="87:47" pos:end="87:53">pic_num</name></expr>)</condition><block pos:start="87:55" pos:end="105:5">{<block_content pos:start="89:9" pos:end="103:35">

        <expr_stmt pos:start="89:9" pos:end="89:45"><expr pos:start="89:9" pos:end="89:44"><name pos:start="89:9" pos:end="89:18"><name pos:start="89:9" pos:end="89:10">rm</name><operator pos:start="89:11" pos:end="89:12">-&gt;</operator><name pos:start="89:13" pos:end="89:18">slices</name></name> <operator pos:start="89:20" pos:end="89:20">=</operator> <operator pos:start="89:22" pos:end="89:22">(</operator><operator pos:start="89:23" pos:end="89:23">(</operator><name pos:start="89:24" pos:end="89:26">hdr</name> <operator pos:start="89:28" pos:end="89:28">&amp;</operator> <literal type="number" pos:start="89:30" pos:end="89:33">0x3F</literal><operator pos:start="89:34" pos:end="89:34">)</operator> <operator pos:start="89:36" pos:end="89:37">&lt;&lt;</operator> <literal type="number" pos:start="89:39" pos:end="89:39">1</literal><operator pos:start="89:40" pos:end="89:40">)</operator> <operator pos:start="89:42" pos:end="89:42">+</operator> <literal type="number" pos:start="89:44" pos:end="89:44">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:40"><expr pos:start="91:9" pos:end="91:39"><name pos:start="91:9" pos:end="91:13">ssize</name> <operator pos:start="91:15" pos:end="91:15">=</operator> <name pos:start="91:17" pos:end="91:20">len2</name> <operator pos:start="91:22" pos:end="91:22">+</operator> <literal type="number" pos:start="91:24" pos:end="91:24">8</literal><operator pos:start="91:25" pos:end="91:25">*</operator><name pos:start="91:26" pos:end="91:35"><name pos:start="91:26" pos:end="91:27">rm</name><operator pos:start="91:28" pos:end="91:29">-&gt;</operator><name pos:start="91:30" pos:end="91:35">slices</name></name> <operator pos:start="91:37" pos:end="91:37">+</operator> <literal type="number" pos:start="91:39" pos:end="91:39">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:55"><expr pos:start="93:9" pos:end="93:54"><name pos:start="93:9" pos:end="93:20"><name pos:start="93:9" pos:end="93:10">rm</name><operator pos:start="93:11" pos:end="93:12">-&gt;</operator><name pos:start="93:13" pos:end="93:20">videobuf</name></name> <operator pos:start="93:22" pos:end="93:22">=</operator> <call pos:start="93:24" pos:end="93:54"><name pos:start="93:24" pos:end="93:33">av_realloc</name><argument_list pos:start="93:34" pos:end="93:54">(<argument pos:start="93:35" pos:end="93:46"><expr pos:start="93:35" pos:end="93:46"><name pos:start="93:35" pos:end="93:46"><name pos:start="93:35" pos:end="93:36">rm</name><operator pos:start="93:37" pos:end="93:38">-&gt;</operator><name pos:start="93:39" pos:end="93:46">videobuf</name></name></expr></argument>, <argument pos:start="93:49" pos:end="93:53"><expr pos:start="93:49" pos:end="93:53"><name pos:start="93:49" pos:end="93:53">ssize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:33"><expr pos:start="95:9" pos:end="95:32"><name pos:start="95:9" pos:end="95:24"><name pos:start="95:9" pos:end="95:10">rm</name><operator pos:start="95:11" pos:end="95:12">-&gt;</operator><name pos:start="95:13" pos:end="95:24">videobufsize</name></name> <operator pos:start="95:26" pos:end="95:26">=</operator> <name pos:start="95:28" pos:end="95:32">ssize</name></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:43"><expr pos:start="97:9" pos:end="97:42"><name pos:start="97:9" pos:end="97:23"><name pos:start="97:9" pos:end="97:10">rm</name><operator pos:start="97:11" pos:end="97:12">-&gt;</operator><name pos:start="97:13" pos:end="97:23">videobufpos</name></name> <operator pos:start="97:25" pos:end="97:25">=</operator> <literal type="number" pos:start="97:27" pos:end="97:27">8</literal><operator pos:start="97:28" pos:end="97:28">*</operator><name pos:start="97:29" pos:end="97:38"><name pos:start="97:29" pos:end="97:30">rm</name><operator pos:start="97:31" pos:end="97:32">-&gt;</operator><name pos:start="97:33" pos:end="97:38">slices</name></name> <operator pos:start="97:40" pos:end="97:40">+</operator> <literal type="number" pos:start="97:42" pos:end="97:42">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:26"><expr pos:start="99:9" pos:end="99:25"><name pos:start="99:9" pos:end="99:21"><name pos:start="99:9" pos:end="99:10">rm</name><operator pos:start="99:11" pos:end="99:12">-&gt;</operator><name pos:start="99:13" pos:end="99:21">cur_slice</name></name> <operator pos:start="99:23" pos:end="99:23">=</operator> <literal type="number" pos:start="99:25" pos:end="99:25">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:33"><expr pos:start="101:9" pos:end="101:32"><name pos:start="101:9" pos:end="101:22"><name pos:start="101:9" pos:end="101:10">rm</name><operator pos:start="101:11" pos:end="101:12">-&gt;</operator><name pos:start="101:13" pos:end="101:22">curpic_num</name></name> <operator pos:start="101:24" pos:end="101:24">=</operator> <name pos:start="101:26" pos:end="101:32">pic_num</name></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:35"><expr pos:start="103:9" pos:end="103:34"><name pos:start="103:9" pos:end="103:18"><name pos:start="103:9" pos:end="103:10">rm</name><operator pos:start="103:11" pos:end="103:12">-&gt;</operator><name pos:start="103:13" pos:end="103:18">pktpos</name></name> <operator pos:start="103:20" pos:end="103:20">=</operator> <call pos:start="103:22" pos:end="103:34"><name pos:start="103:22" pos:end="103:30">url_ftell</name><argument_list pos:start="103:31" pos:end="103:34">(<argument pos:start="103:32" pos:end="103:33"><expr pos:start="103:32" pos:end="103:33"><name pos:start="103:32" pos:end="103:33">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="107:5" pos:end="113:5"><if pos:start="107:5" pos:end="113:5">if<condition pos:start="107:7" pos:end="107:17">(<expr pos:start="107:8" pos:end="107:16"><name pos:start="107:8" pos:end="107:11">type</name> <operator pos:start="107:13" pos:end="107:14">==</operator> <literal type="number" pos:start="107:16" pos:end="107:16">2</literal></expr>)</condition><block pos:start="107:18" pos:end="113:5">{<block_content pos:start="109:9" pos:end="111:25">

        <expr_stmt pos:start="109:9" pos:end="109:30"><expr pos:start="109:9" pos:end="109:29"><name pos:start="109:9" pos:end="109:11">len</name> <operator pos:start="109:13" pos:end="109:13">=</operator> <call pos:start="109:15" pos:end="109:29"><name pos:start="109:15" pos:end="109:19">FFMIN</name><argument_list pos:start="109:20" pos:end="109:29">(<argument pos:start="109:21" pos:end="109:23"><expr pos:start="109:21" pos:end="109:23"><name pos:start="109:21" pos:end="109:23">len</name></expr></argument>, <argument pos:start="109:26" pos:end="109:28"><expr pos:start="109:26" pos:end="109:28"><name pos:start="109:26" pos:end="109:28">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:25"><expr pos:start="111:9" pos:end="111:24"><name pos:start="111:9" pos:end="111:11">pos</name> <operator pos:start="111:13" pos:end="111:13">=</operator> <name pos:start="111:15" pos:end="111:18">len2</name> <operator pos:start="111:20" pos:end="111:20">-</operator> <name pos:start="111:22" pos:end="111:24">pos</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="117:5" pos:end="119:17"><if pos:start="117:5" pos:end="119:17">if<condition pos:start="117:7" pos:end="117:36">(<expr pos:start="117:8" pos:end="117:35"><operator pos:start="117:8" pos:end="117:9">++</operator><name pos:start="117:10" pos:end="117:22"><name pos:start="117:10" pos:end="117:11">rm</name><operator pos:start="117:12" pos:end="117:13">-&gt;</operator><name pos:start="117:14" pos:end="117:22">cur_slice</name></name> <operator pos:start="117:24" pos:end="117:24">&gt;</operator> <name pos:start="117:26" pos:end="117:35"><name pos:start="117:26" pos:end="117:27">rm</name><operator pos:start="117:28" pos:end="117:29">-&gt;</operator><name pos:start="117:30" pos:end="117:35">slices</name></name></expr>)</condition><block type="pseudo" pos:start="119:9" pos:end="119:17"><block_content pos:start="119:9" pos:end="119:17">

        <return pos:start="119:9" pos:end="119:17">return <expr pos:start="119:16" pos:end="119:16"><literal type="number" pos:start="119:16" pos:end="119:16">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:51"><expr pos:start="121:5" pos:end="121:50"><call pos:start="121:5" pos:end="121:50"><name pos:start="121:5" pos:end="121:11">AV_WL32</name><argument_list pos:start="121:12" pos:end="121:50">(<argument pos:start="121:13" pos:end="121:46"><expr pos:start="121:13" pos:end="121:46"><name pos:start="121:13" pos:end="121:24"><name pos:start="121:13" pos:end="121:14">rm</name><operator pos:start="121:15" pos:end="121:16">-&gt;</operator><name pos:start="121:17" pos:end="121:24">videobuf</name></name> <operator pos:start="121:26" pos:end="121:26">-</operator> <literal type="number" pos:start="121:28" pos:end="121:30">7</literal> <operator pos:start="121:30" pos:end="121:30">+</operator> <literal type="number" pos:start="121:32" pos:end="121:32">8</literal><operator pos:start="121:33" pos:end="121:33">*</operator><name pos:start="121:34" pos:end="121:46"><name pos:start="121:34" pos:end="121:35">rm</name><operator pos:start="121:36" pos:end="121:37">-&gt;</operator><name pos:start="121:38" pos:end="121:46">cur_slice</name></name></expr></argument>, <argument pos:start="121:49" pos:end="121:49"><expr pos:start="121:49" pos:end="121:49"><literal type="number" pos:start="121:49" pos:end="121:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:84"><expr pos:start="123:5" pos:end="123:83"><call pos:start="123:5" pos:end="123:83"><name pos:start="123:5" pos:end="123:11">AV_WL32</name><argument_list pos:start="123:12" pos:end="123:83">(<argument pos:start="123:13" pos:end="123:46"><expr pos:start="123:13" pos:end="123:46"><name pos:start="123:13" pos:end="123:24"><name pos:start="123:13" pos:end="123:14">rm</name><operator pos:start="123:15" pos:end="123:16">-&gt;</operator><name pos:start="123:17" pos:end="123:24">videobuf</name></name> <operator pos:start="123:26" pos:end="123:26">-</operator> <literal type="number" pos:start="123:28" pos:end="123:30">3</literal> <operator pos:start="123:30" pos:end="123:30">+</operator> <literal type="number" pos:start="123:32" pos:end="123:32">8</literal><operator pos:start="123:33" pos:end="123:33">*</operator><name pos:start="123:34" pos:end="123:46"><name pos:start="123:34" pos:end="123:35">rm</name><operator pos:start="123:36" pos:end="123:37">-&gt;</operator><name pos:start="123:38" pos:end="123:46">cur_slice</name></name></expr></argument>, <argument pos:start="123:49" pos:end="123:82"><expr pos:start="123:49" pos:end="123:82"><name pos:start="123:49" pos:end="123:63"><name pos:start="123:49" pos:end="123:50">rm</name><operator pos:start="123:51" pos:end="123:52">-&gt;</operator><name pos:start="123:53" pos:end="123:63">videobufpos</name></name> <operator pos:start="123:65" pos:end="123:65">-</operator> <literal type="number" pos:start="123:67" pos:end="123:67">8</literal><operator pos:start="123:68" pos:end="123:68">*</operator><name pos:start="123:69" pos:end="123:78"><name pos:start="123:69" pos:end="123:70">rm</name><operator pos:start="123:71" pos:end="123:72">-&gt;</operator><name pos:start="123:73" pos:end="123:78">slices</name></name> <operator pos:start="123:80" pos:end="123:80">-</operator> <literal type="number" pos:start="123:82" pos:end="123:82">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="125:5" pos:end="127:17"><if pos:start="125:5" pos:end="127:17">if<condition pos:start="125:7" pos:end="125:48">(<expr pos:start="125:8" pos:end="125:47"><name pos:start="125:8" pos:end="125:22"><name pos:start="125:8" pos:end="125:9">rm</name><operator pos:start="125:10" pos:end="125:11">-&gt;</operator><name pos:start="125:12" pos:end="125:22">videobufpos</name></name> <operator pos:start="125:24" pos:end="125:24">+</operator> <name pos:start="125:26" pos:end="125:28">len</name> <operator pos:start="125:30" pos:end="125:30">&gt;</operator> <name pos:start="125:32" pos:end="125:47"><name pos:start="125:32" pos:end="125:33">rm</name><operator pos:start="125:34" pos:end="125:35">-&gt;</operator><name pos:start="125:36" pos:end="125:47">videobufsize</name></name></expr>)</condition><block type="pseudo" pos:start="127:9" pos:end="127:17"><block_content pos:start="127:9" pos:end="127:17">

        <return pos:start="127:9" pos:end="127:17">return <expr pos:start="127:16" pos:end="127:16"><literal type="number" pos:start="127:16" pos:end="127:16">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="129:5" pos:end="131:28"><if pos:start="129:5" pos:end="131:28">if <condition pos:start="129:8" pos:end="129:67">(<expr pos:start="129:9" pos:end="129:66"><call pos:start="129:9" pos:end="129:59"><name pos:start="129:9" pos:end="129:18">get_buffer</name><argument_list pos:start="129:19" pos:end="129:59">(<argument pos:start="129:20" pos:end="129:21"><expr pos:start="129:20" pos:end="129:21"><name pos:start="129:20" pos:end="129:21">pb</name></expr></argument>, <argument pos:start="129:24" pos:end="129:53"><expr pos:start="129:24" pos:end="129:53"><name pos:start="129:24" pos:end="129:35"><name pos:start="129:24" pos:end="129:25">rm</name><operator pos:start="129:26" pos:end="129:27">-&gt;</operator><name pos:start="129:28" pos:end="129:35">videobuf</name></name> <operator pos:start="129:37" pos:end="129:37">+</operator> <name pos:start="129:39" pos:end="129:53"><name pos:start="129:39" pos:end="129:40">rm</name><operator pos:start="129:41" pos:end="129:42">-&gt;</operator><name pos:start="129:43" pos:end="129:53">videobufpos</name></name></expr></argument>, <argument pos:start="129:56" pos:end="129:58"><expr pos:start="129:56" pos:end="129:58"><name pos:start="129:56" pos:end="129:58">len</name></expr></argument>)</argument_list></call> <operator pos:start="129:61" pos:end="129:62">!=</operator> <name pos:start="129:64" pos:end="129:66">len</name></expr>)</condition><block type="pseudo" pos:start="131:9" pos:end="131:28"><block_content pos:start="131:9" pos:end="131:28">

        <return pos:start="131:9" pos:end="131:28">return <expr pos:start="131:16" pos:end="131:27"><call pos:start="131:16" pos:end="131:27"><name pos:start="131:16" pos:end="131:22">AVERROR</name><argument_list pos:start="131:23" pos:end="131:27">(<argument pos:start="131:24" pos:end="131:26"><expr pos:start="131:24" pos:end="131:26"><name pos:start="131:24" pos:end="131:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="133:5" pos:end="135:28"><expr pos:start="133:5" pos:end="133:26"><name pos:start="133:5" pos:end="133:19"><name pos:start="133:5" pos:end="133:6">rm</name><operator pos:start="133:7" pos:end="133:8">-&gt;</operator><name pos:start="133:9" pos:end="133:19">videobufpos</name></name> <operator pos:start="133:21" pos:end="133:22">+=</operator> <name pos:start="133:24" pos:end="133:26">len</name></expr><operator pos:start="133:27" pos:end="133:27">,</operator>

    <expr pos:start="135:5" pos:end="135:27"><name pos:start="135:5" pos:end="135:21"><name pos:start="135:5" pos:end="135:6">rm</name><operator pos:start="135:7" pos:end="135:8">-&gt;</operator><name pos:start="135:9" pos:end="135:21">remaining_len</name></name><operator pos:start="135:22" pos:end="135:23">-=</operator> <name pos:start="135:25" pos:end="135:27">len</name></expr>;</expr_stmt>



    <if_stmt pos:start="139:5" pos:end="157:5"><if pos:start="139:5" pos:end="157:5">if<condition pos:start="139:7" pos:end="139:58">(<expr pos:start="139:8" pos:end="139:57"><name pos:start="139:8" pos:end="139:11">type</name> <operator pos:start="139:13" pos:end="139:14">==</operator> <literal type="number" pos:start="139:16" pos:end="139:16">2</literal> <operator pos:start="139:18" pos:end="139:19">||</operator> <operator pos:start="139:21" pos:end="139:21">(</operator><name pos:start="139:22" pos:end="139:36"><name pos:start="139:22" pos:end="139:23">rm</name><operator pos:start="139:24" pos:end="139:25">-&gt;</operator><name pos:start="139:26" pos:end="139:36">videobufpos</name></name><operator pos:start="139:37" pos:end="139:37">)</operator> <operator pos:start="139:39" pos:end="139:40">==</operator> <name pos:start="139:42" pos:end="139:57"><name pos:start="139:42" pos:end="139:43">rm</name><operator pos:start="139:44" pos:end="139:45">-&gt;</operator><name pos:start="139:46" pos:end="139:57">videobufsize</name></name></expr>)</condition><block pos:start="139:59" pos:end="157:5">{<block_content pos:start="141:10" pos:end="155:18">

         <expr_stmt pos:start="141:10" pos:end="141:43"><expr pos:start="141:10" pos:end="141:42"><name pos:start="141:10" pos:end="141:24"><name pos:start="141:10" pos:end="141:11">rm</name><operator pos:start="141:12" pos:end="141:13">-&gt;</operator><name pos:start="141:14" pos:end="141:21">videobuf</name><index pos:start="141:22" pos:end="141:24">[<expr pos:start="141:23" pos:end="141:23"><literal type="number" pos:start="141:23" pos:end="141:23">0</literal></expr>]</index></name> <operator pos:start="141:26" pos:end="141:26">=</operator> <name pos:start="141:28" pos:end="141:40"><name pos:start="141:28" pos:end="141:29">rm</name><operator pos:start="141:30" pos:end="141:31">-&gt;</operator><name pos:start="141:32" pos:end="141:40">cur_slice</name></name><operator pos:start="141:41" pos:end="141:41">-</operator><literal type="number" pos:start="141:42" pos:end="141:42">1</literal></expr>;</expr_stmt>

         <if_stmt pos:start="143:10" pos:end="145:36"><if pos:start="143:10" pos:end="145:36">if<condition pos:start="143:12" pos:end="143:85">(<expr pos:start="143:13" pos:end="143:84"><call pos:start="143:13" pos:end="143:80"><name pos:start="143:13" pos:end="143:25">av_new_packet</name><argument_list pos:start="143:26" pos:end="143:80">(<argument pos:start="143:27" pos:end="143:29"><expr pos:start="143:27" pos:end="143:29"><name pos:start="143:27" pos:end="143:29">pkt</name></expr></argument>, <argument pos:start="143:32" pos:end="143:79"><expr pos:start="143:32" pos:end="143:79"><name pos:start="143:32" pos:end="143:46"><name pos:start="143:32" pos:end="143:33">rm</name><operator pos:start="143:34" pos:end="143:35">-&gt;</operator><name pos:start="143:36" pos:end="143:46">videobufpos</name></name> <operator pos:start="143:48" pos:end="143:48">-</operator> <literal type="number" pos:start="143:50" pos:end="143:50">8</literal><operator pos:start="143:51" pos:end="143:51">*</operator><operator pos:start="143:52" pos:end="143:52">(</operator><name pos:start="143:53" pos:end="143:62"><name pos:start="143:53" pos:end="143:54">rm</name><operator pos:start="143:55" pos:end="143:56">-&gt;</operator><name pos:start="143:57" pos:end="143:62">slices</name></name> <operator pos:start="143:64" pos:end="143:64">-</operator> <name pos:start="143:66" pos:end="143:78"><name pos:start="143:66" pos:end="143:67">rm</name><operator pos:start="143:68" pos:end="143:69">-&gt;</operator><name pos:start="143:70" pos:end="143:78">cur_slice</name></name><operator pos:start="143:79" pos:end="143:79">)</operator></expr></argument>)</argument_list></call> <operator pos:start="143:82" pos:end="143:82">&lt;</operator> <literal type="number" pos:start="143:84" pos:end="143:84">0</literal></expr>)</condition><block type="pseudo" pos:start="145:14" pos:end="145:36"><block_content pos:start="145:14" pos:end="145:36">

             <return pos:start="145:14" pos:end="145:36">return <expr pos:start="145:21" pos:end="145:35"><call pos:start="145:21" pos:end="145:35"><name pos:start="145:21" pos:end="145:27">AVERROR</name><argument_list pos:start="145:28" pos:end="145:35">(<argument pos:start="145:29" pos:end="145:34"><expr pos:start="145:29" pos:end="145:34"><name pos:start="145:29" pos:end="145:34">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

         <expr_stmt pos:start="147:10" pos:end="147:62"><expr pos:start="147:10" pos:end="147:61"><call pos:start="147:10" pos:end="147:61"><name pos:start="147:10" pos:end="147:15">memcpy</name><argument_list pos:start="147:16" pos:end="147:61">(<argument pos:start="147:17" pos:end="147:25"><expr pos:start="147:17" pos:end="147:25"><name pos:start="147:17" pos:end="147:25"><name pos:start="147:17" pos:end="147:19">pkt</name><operator pos:start="147:20" pos:end="147:21">-&gt;</operator><name pos:start="147:22" pos:end="147:25">data</name></name></expr></argument>, <argument pos:start="147:28" pos:end="147:39"><expr pos:start="147:28" pos:end="147:39"><name pos:start="147:28" pos:end="147:39"><name pos:start="147:28" pos:end="147:29">rm</name><operator pos:start="147:30" pos:end="147:31">-&gt;</operator><name pos:start="147:32" pos:end="147:39">videobuf</name></name></expr></argument>, <argument pos:start="147:42" pos:end="147:60"><expr pos:start="147:42" pos:end="147:60"><literal type="number" pos:start="147:42" pos:end="147:44">1</literal> <operator pos:start="147:44" pos:end="147:44">+</operator> <literal type="number" pos:start="147:46" pos:end="147:46">8</literal><operator pos:start="147:47" pos:end="147:47">*</operator><name pos:start="147:48" pos:end="147:60"><name pos:start="147:48" pos:end="147:49">rm</name><operator pos:start="147:50" pos:end="147:51">-&gt;</operator><name pos:start="147:52" pos:end="147:60">cur_slice</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         <expr_stmt pos:start="149:10" pos:end="149:118"><expr pos:start="149:10" pos:end="149:117"><call pos:start="149:10" pos:end="149:117"><name pos:start="149:10" pos:end="149:15">memcpy</name><argument_list pos:start="149:16" pos:end="149:117">(<argument pos:start="149:17" pos:end="149:47"><expr pos:start="149:17" pos:end="149:47"><name pos:start="149:17" pos:end="149:25"><name pos:start="149:17" pos:end="149:19">pkt</name><operator pos:start="149:20" pos:end="149:21">-&gt;</operator><name pos:start="149:22" pos:end="149:25">data</name></name> <operator pos:start="149:27" pos:end="149:27">+</operator> <literal type="number" pos:start="149:29" pos:end="149:31">1</literal> <operator pos:start="149:31" pos:end="149:31">+</operator> <literal type="number" pos:start="149:33" pos:end="149:33">8</literal><operator pos:start="149:34" pos:end="149:34">*</operator><name pos:start="149:35" pos:end="149:47"><name pos:start="149:35" pos:end="149:36">rm</name><operator pos:start="149:37" pos:end="149:38">-&gt;</operator><name pos:start="149:39" pos:end="149:47">cur_slice</name></name></expr></argument>, <argument pos:start="149:50" pos:end="149:80"><expr pos:start="149:50" pos:end="149:80"><name pos:start="149:50" pos:end="149:61"><name pos:start="149:50" pos:end="149:51">rm</name><operator pos:start="149:52" pos:end="149:53">-&gt;</operator><name pos:start="149:54" pos:end="149:61">videobuf</name></name> <operator pos:start="149:63" pos:end="149:63">+</operator> <literal type="number" pos:start="149:65" pos:end="149:67">1</literal> <operator pos:start="149:67" pos:end="149:67">+</operator> <literal type="number" pos:start="149:69" pos:end="149:69">8</literal><operator pos:start="149:70" pos:end="149:70">*</operator><name pos:start="149:71" pos:end="149:80"><name pos:start="149:71" pos:end="149:72">rm</name><operator pos:start="149:73" pos:end="149:74">-&gt;</operator><name pos:start="149:75" pos:end="149:80">slices</name></name></expr></argument>, <argument pos:start="149:83" pos:end="149:116"><expr pos:start="149:83" pos:end="149:116"><name pos:start="149:83" pos:end="149:97"><name pos:start="149:83" pos:end="149:84">rm</name><operator pos:start="149:85" pos:end="149:86">-&gt;</operator><name pos:start="149:87" pos:end="149:97">videobufpos</name></name> <operator pos:start="149:99" pos:end="149:99">-</operator> <literal type="number" pos:start="149:101" pos:end="149:103">1</literal> <operator pos:start="149:103" pos:end="149:103">-</operator> <literal type="number" pos:start="149:105" pos:end="149:105">8</literal><operator pos:start="149:106" pos:end="149:106">*</operator><name pos:start="149:107" pos:end="149:116"><name pos:start="149:107" pos:end="149:108">rm</name><operator pos:start="149:109" pos:end="149:110">-&gt;</operator><name pos:start="149:111" pos:end="149:116">slices</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         <expr_stmt pos:start="151:10" pos:end="151:35"><expr pos:start="151:10" pos:end="151:34"><name pos:start="151:10" pos:end="151:17"><name pos:start="151:10" pos:end="151:12">pkt</name><operator pos:start="151:13" pos:end="151:14">-&gt;</operator><name pos:start="151:15" pos:end="151:17">pts</name></name> <operator pos:start="151:19" pos:end="151:19">=</operator> <name pos:start="151:21" pos:end="151:34">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

         <expr_stmt pos:start="153:10" pos:end="153:31"><expr pos:start="153:10" pos:end="153:30"><name pos:start="153:10" pos:end="153:17"><name pos:start="153:10" pos:end="153:12">pkt</name><operator pos:start="153:13" pos:end="153:14">-&gt;</operator><name pos:start="153:15" pos:end="153:17">pos</name></name> <operator pos:start="153:19" pos:end="153:19">=</operator> <name pos:start="153:21" pos:end="153:30"><name pos:start="153:21" pos:end="153:22">rm</name><operator pos:start="153:23" pos:end="153:24">-&gt;</operator><name pos:start="153:25" pos:end="153:30">pktpos</name></name></expr>;</expr_stmt>

         <return pos:start="155:10" pos:end="155:18">return <expr pos:start="155:17" pos:end="155:17"><literal type="number" pos:start="155:17" pos:end="155:17">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="161:5" pos:end="161:13">return <expr pos:start="161:12" pos:end="161:12"><literal type="number" pos:start="161:12" pos:end="161:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
