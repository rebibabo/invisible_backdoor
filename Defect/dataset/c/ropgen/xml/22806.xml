<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22806.c" pos:tabs="8"><function pos:start="1:1" pos:end="84:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">dfa_read_packet</name><parameter_list pos:start="1:27" pos:end="1:61">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:55">AVPacket</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="84:1">{<block_content pos:start="5:5" pos:end="82:13">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">AVIOContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">pb</name> <init pos:start="5:21" pos:end="5:27">= <expr pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:23">frame_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>, <decl pos:start="9:14" pos:end="9:22"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:18">first</name> <init pos:start="9:20" pos:end="9:22">= <expr pos:start="9:22" pos:end="9:22"><literal type="number" pos:start="9:22" pos:end="9:22">1</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:27"><if pos:start="13:5" pos:end="15:27">if <condition pos:start="13:8" pos:end="13:22">(<expr pos:start="13:9" pos:end="13:21"><call pos:start="13:9" pos:end="13:21"><name pos:start="13:9" pos:end="13:17">avio_feof</name><argument_list pos:start="13:18" pos:end="13:21">(<argument pos:start="13:19" pos:end="13:20"><expr pos:start="13:19" pos:end="13:20"><name pos:start="13:19" pos:end="13:20">pb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:27"><block_content pos:start="15:9" pos:end="15:27">

        <return pos:start="15:9" pos:end="15:27">return <expr pos:start="15:16" pos:end="15:26"><name pos:start="15:16" pos:end="15:26">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="19:5" pos:end="21:28"><if pos:start="19:5" pos:end="21:28">if <condition pos:start="19:8" pos:end="19:41">(<expr pos:start="19:9" pos:end="19:40"><call pos:start="19:9" pos:end="19:34"><name pos:start="19:9" pos:end="19:21">av_get_packet</name><argument_list pos:start="19:22" pos:end="19:34">(<argument pos:start="19:23" pos:end="19:24"><expr pos:start="19:23" pos:end="19:24"><name pos:start="19:23" pos:end="19:24">pb</name></expr></argument>, <argument pos:start="19:27" pos:end="19:29"><expr pos:start="19:27" pos:end="19:29"><name pos:start="19:27" pos:end="19:29">pkt</name></expr></argument>, <argument pos:start="19:32" pos:end="19:33"><expr pos:start="19:32" pos:end="19:33"><literal type="number" pos:start="19:32" pos:end="19:33">12</literal></expr></argument>)</argument_list></call> <operator pos:start="19:36" pos:end="19:37">!=</operator> <literal type="number" pos:start="19:39" pos:end="19:40">12</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:28"><block_content pos:start="21:9" pos:end="21:28">

        <return pos:start="21:9" pos:end="21:28">return <expr pos:start="21:16" pos:end="21:27"><call pos:start="21:16" pos:end="21:27"><name pos:start="21:16" pos:end="21:22">AVERROR</name><argument_list pos:start="21:23" pos:end="21:27">(<argument pos:start="21:24" pos:end="21:26"><expr pos:start="21:24" pos:end="21:26"><name pos:start="21:24" pos:end="21:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <while pos:start="23:5" pos:end="78:5">while <condition pos:start="23:11" pos:end="23:26">(<expr pos:start="23:12" pos:end="23:25"><operator pos:start="23:12" pos:end="23:12">!</operator><call pos:start="23:13" pos:end="23:25"><name pos:start="23:13" pos:end="23:21">avio_feof</name><argument_list pos:start="23:22" pos:end="23:25">(<argument pos:start="23:23" pos:end="23:24"><expr pos:start="23:23" pos:end="23:24"><name pos:start="23:23" pos:end="23:24">pb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:28" pos:end="78:5">{<block_content pos:start="25:9" pos:end="76:9">

        <if_stmt pos:start="25:9" pos:end="38:22"><if pos:start="25:9" pos:end="36:9">if <condition pos:start="25:12" pos:end="25:19">(<expr pos:start="25:13" pos:end="25:18"><operator pos:start="25:13" pos:end="25:13">!</operator><name pos:start="25:14" pos:end="25:18">first</name></expr>)</condition> <block pos:start="25:21" pos:end="36:9">{<block_content pos:start="27:13" pos:end="34:13">

            <expr_stmt pos:start="27:13" pos:end="27:48"><expr pos:start="27:13" pos:end="27:47"><name pos:start="27:13" pos:end="27:15">ret</name> <operator pos:start="27:17" pos:end="27:17">=</operator> <call pos:start="27:19" pos:end="27:47"><name pos:start="27:19" pos:end="27:34">av_append_packet</name><argument_list pos:start="27:35" pos:end="27:47">(<argument pos:start="27:36" pos:end="27:37"><expr pos:start="27:36" pos:end="27:37"><name pos:start="27:36" pos:end="27:37">pb</name></expr></argument>, <argument pos:start="27:40" pos:end="27:42"><expr pos:start="27:40" pos:end="27:42"><name pos:start="27:40" pos:end="27:42">pkt</name></expr></argument>, <argument pos:start="27:45" pos:end="27:46"><expr pos:start="27:45" pos:end="27:46"><literal type="number" pos:start="27:45" pos:end="27:46">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="29:13" pos:end="34:13"><if pos:start="29:13" pos:end="34:13">if <condition pos:start="29:16" pos:end="29:24">(<expr pos:start="29:17" pos:end="29:23"><name pos:start="29:17" pos:end="29:19">ret</name> <operator pos:start="29:21" pos:end="29:21">&lt;</operator> <literal type="number" pos:start="29:23" pos:end="29:23">0</literal></expr>)</condition> <block pos:start="29:26" pos:end="34:13">{<block_content pos:start="32:17" pos:end="32:27">


                <return pos:start="32:17" pos:end="32:27">return <expr pos:start="32:24" pos:end="32:26"><name pos:start="32:24" pos:end="32:26">ret</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="36:11" pos:end="38:22">else<block type="pseudo" pos:start="38:13" pos:end="38:22"><block_content pos:start="38:13" pos:end="38:22">

            <expr_stmt pos:start="38:13" pos:end="38:22"><expr pos:start="38:13" pos:end="38:21"><name pos:start="38:13" pos:end="38:17">first</name> <operator pos:start="38:19" pos:end="38:19">=</operator> <literal type="number" pos:start="38:21" pos:end="38:21">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="40:9" pos:end="40:56"><expr pos:start="40:9" pos:end="40:55"><name pos:start="40:9" pos:end="40:18">frame_size</name> <operator pos:start="40:20" pos:end="40:20">=</operator> <call pos:start="40:22" pos:end="40:55"><name pos:start="40:22" pos:end="40:28">AV_RL32</name><argument_list pos:start="40:29" pos:end="40:55">(<argument pos:start="40:30" pos:end="40:54"><expr pos:start="40:30" pos:end="40:54"><name pos:start="40:30" pos:end="40:38"><name pos:start="40:30" pos:end="40:32">pkt</name><operator pos:start="40:33" pos:end="40:34">-&gt;</operator><name pos:start="40:35" pos:end="40:38">data</name></name> <operator pos:start="40:40" pos:end="40:40">+</operator> <name pos:start="40:42" pos:end="40:50"><name pos:start="40:42" pos:end="40:44">pkt</name><operator pos:start="40:45" pos:end="40:46">-&gt;</operator><name pos:start="40:47" pos:end="40:50">size</name></name> <operator pos:start="40:52" pos:end="40:52">-</operator> <literal type="number" pos:start="40:54" pos:end="40:54">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="42:9" pos:end="49:9"><if pos:start="42:9" pos:end="49:9">if <condition pos:start="42:12" pos:end="42:37">(<expr pos:start="42:13" pos:end="42:36"><name pos:start="42:13" pos:end="42:22">frame_size</name> <operator pos:start="42:24" pos:end="42:24">&gt;</operator> <name pos:start="42:26" pos:end="42:32">INT_MAX</name> <operator pos:start="42:34" pos:end="42:34">-</operator> <literal type="number" pos:start="42:36" pos:end="42:36">4</literal></expr>)</condition> <block pos:start="42:39" pos:end="49:9">{<block_content pos:start="44:13" pos:end="47:32">

            <expr_stmt pos:start="44:13" pos:end="44:85"><expr pos:start="44:13" pos:end="44:84"><call pos:start="44:13" pos:end="44:84"><name pos:start="44:13" pos:end="44:18">av_log</name><argument_list pos:start="44:19" pos:end="44:84">(<argument pos:start="44:20" pos:end="44:20"><expr pos:start="44:20" pos:end="44:20"><name pos:start="44:20" pos:end="44:20">s</name></expr></argument>, <argument pos:start="44:23" pos:end="44:34"><expr pos:start="44:23" pos:end="44:34"><name pos:start="44:23" pos:end="44:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="44:37" pos:end="44:71"><expr pos:start="44:37" pos:end="44:71"><literal type="string" pos:start="44:37" pos:end="44:61">"Too large chunk size: %"</literal><name pos:start="44:62" pos:end="44:67">PRIu32</name><literal type="string" pos:start="44:68" pos:end="44:71">"\n"</literal></expr></argument>, <argument pos:start="44:74" pos:end="44:83"><expr pos:start="44:74" pos:end="44:83"><name pos:start="44:74" pos:end="44:83">frame_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


            <return pos:start="47:13" pos:end="47:32">return <expr pos:start="47:20" pos:end="47:31"><call pos:start="47:20" pos:end="47:31"><name pos:start="47:20" pos:end="47:26">AVERROR</name><argument_list pos:start="47:27" pos:end="47:31">(<argument pos:start="47:28" pos:end="47:30"><expr pos:start="47:28" pos:end="47:30"><name pos:start="47:28" pos:end="47:30">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="51:9" pos:end="67:9"><if pos:start="51:9" pos:end="67:9">if <condition pos:start="51:12" pos:end="51:77">(<expr pos:start="51:13" pos:end="51:76"><call pos:start="51:13" pos:end="51:47"><name pos:start="51:13" pos:end="51:19">AV_RL32</name><argument_list pos:start="51:20" pos:end="51:47">(<argument pos:start="51:21" pos:end="51:46"><expr pos:start="51:21" pos:end="51:46"><name pos:start="51:21" pos:end="51:29"><name pos:start="51:21" pos:end="51:23">pkt</name><operator pos:start="51:24" pos:end="51:25">-&gt;</operator><name pos:start="51:26" pos:end="51:29">data</name></name> <operator pos:start="51:31" pos:end="51:31">+</operator> <name pos:start="51:33" pos:end="51:41"><name pos:start="51:33" pos:end="51:35">pkt</name><operator pos:start="51:36" pos:end="51:37">-&gt;</operator><name pos:start="51:38" pos:end="51:41">size</name></name> <operator pos:start="51:43" pos:end="51:43">-</operator> <literal type="number" pos:start="51:45" pos:end="51:46">12</literal></expr></argument>)</argument_list></call> <operator pos:start="51:49" pos:end="51:50">==</operator> <call pos:start="51:52" pos:end="51:76"><name pos:start="51:52" pos:end="51:56">MKTAG</name><argument_list pos:start="51:57" pos:end="51:76">(<argument pos:start="51:58" pos:end="51:60"><expr pos:start="51:58" pos:end="51:60"><literal type="char" pos:start="51:58" pos:end="51:60">'E'</literal></expr></argument>, <argument pos:start="51:63" pos:end="51:65"><expr pos:start="51:63" pos:end="51:65"><literal type="char" pos:start="51:63" pos:end="51:65">'O'</literal></expr></argument>, <argument pos:start="51:68" pos:end="51:70"><expr pos:start="51:68" pos:end="51:70"><literal type="char" pos:start="51:68" pos:end="51:70">'F'</literal></expr></argument>, <argument pos:start="51:73" pos:end="51:75"><expr pos:start="51:73" pos:end="51:75"><literal type="char" pos:start="51:73" pos:end="51:75">'R'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:79" pos:end="67:9">{<block_content pos:start="53:13" pos:end="65:21">

            <if_stmt pos:start="53:13" pos:end="63:13"><if pos:start="53:13" pos:end="63:13">if <condition pos:start="53:16" pos:end="53:27">(<expr pos:start="53:17" pos:end="53:26"><name pos:start="53:17" pos:end="53:26">frame_size</name></expr>)</condition> <block pos:start="53:29" pos:end="63:13">{<block_content pos:start="55:17" pos:end="61:42">

                <expr_stmt pos:start="55:17" pos:end="59:35"><expr pos:start="55:17" pos:end="59:34"><call pos:start="55:17" pos:end="59:34"><name pos:start="55:17" pos:end="55:22">av_log</name><argument_list pos:start="55:23" pos:end="59:34">(<argument pos:start="55:24" pos:end="55:24"><expr pos:start="55:24" pos:end="55:24"><name pos:start="55:24" pos:end="55:24">s</name></expr></argument>, <argument pos:start="55:27" pos:end="55:40"><expr pos:start="55:27" pos:end="55:40"><name pos:start="55:27" pos:end="55:40">AV_LOG_WARNING</name></expr></argument>,

                       <argument pos:start="57:24" pos:end="57:80"><expr pos:start="57:24" pos:end="57:80"><literal type="string" pos:start="57:24" pos:end="57:35">"skipping %"</literal><name pos:start="57:36" pos:end="57:41">PRIu32</name><literal type="string" pos:start="57:42" pos:end="57:80">" bytes of end-of-frame marker chunk\n"</literal></expr></argument>,

                       <argument pos:start="59:24" pos:end="59:33"><expr pos:start="59:24" pos:end="59:33"><name pos:start="59:24" pos:end="59:33">frame_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="61:17" pos:end="61:42"><expr pos:start="61:17" pos:end="61:41"><call pos:start="61:17" pos:end="61:41"><name pos:start="61:17" pos:end="61:25">avio_skip</name><argument_list pos:start="61:26" pos:end="61:41">(<argument pos:start="61:27" pos:end="61:28"><expr pos:start="61:27" pos:end="61:28"><name pos:start="61:27" pos:end="61:28">pb</name></expr></argument>, <argument pos:start="61:31" pos:end="61:40"><expr pos:start="61:31" pos:end="61:40"><name pos:start="61:31" pos:end="61:40">frame_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <return pos:start="65:13" pos:end="65:21">return <expr pos:start="65:20" pos:end="65:20"><literal type="number" pos:start="65:20" pos:end="65:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:52"><expr pos:start="69:9" pos:end="69:51"><name pos:start="69:9" pos:end="69:11">ret</name> <operator pos:start="69:13" pos:end="69:13">=</operator> <call pos:start="69:15" pos:end="69:51"><name pos:start="69:15" pos:end="69:30">av_append_packet</name><argument_list pos:start="69:31" pos:end="69:51">(<argument pos:start="69:32" pos:end="69:33"><expr pos:start="69:32" pos:end="69:33"><name pos:start="69:32" pos:end="69:33">pb</name></expr></argument>, <argument pos:start="69:36" pos:end="69:38"><expr pos:start="69:36" pos:end="69:38"><name pos:start="69:36" pos:end="69:38">pkt</name></expr></argument>, <argument pos:start="69:41" pos:end="69:50"><expr pos:start="69:41" pos:end="69:50"><name pos:start="69:41" pos:end="69:50">frame_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="71:9" pos:end="76:9"><if pos:start="71:9" pos:end="76:9">if <condition pos:start="71:12" pos:end="71:20">(<expr pos:start="71:13" pos:end="71:19"><name pos:start="71:13" pos:end="71:15">ret</name> <operator pos:start="71:17" pos:end="71:17">&lt;</operator> <literal type="number" pos:start="71:19" pos:end="71:19">0</literal></expr>)</condition> <block pos:start="71:22" pos:end="76:9">{<block_content pos:start="74:13" pos:end="74:23">


            <return pos:start="74:13" pos:end="74:23">return <expr pos:start="74:20" pos:end="74:22"><name pos:start="74:20" pos:end="74:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>



    <return pos:start="82:5" pos:end="82:13">return <expr pos:start="82:12" pos:end="82:12"><literal type="number" pos:start="82:12" pos:end="82:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
