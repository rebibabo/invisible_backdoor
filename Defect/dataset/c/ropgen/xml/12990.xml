<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12990.c" pos:tabs="8"><function pos:start="1:1" pos:end="526:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">mpegts_init</name><parameter_list pos:start="1:23" pos:end="1:42">(<parameter pos:start="1:24" pos:end="1:41"><decl pos:start="1:24" pos:end="1:41"><type pos:start="1:24" pos:end="1:40"><name pos:start="1:24" pos:end="1:38">AVFormatContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="526:1">{<block_content pos:start="5:5" pos:end="524:15">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">MpegTSWrite</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">ts</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">MpegTSWriteStream</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:28">ts_st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">MpegTSService</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:26">service</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">AVStream</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:16">st</name></decl>, <decl pos:start="11:19" pos:end="11:32"><type ref="prev" pos:start="11:5" pos:end="11:14"><modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:25">pcr_st</name> <init pos:start="11:27" pos:end="11:32">= <expr pos:start="11:29" pos:end="11:32"><name pos:start="11:29" pos:end="11:32">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:40"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:23"><name pos:start="13:5" pos:end="13:21">AVDictionaryEntry</name> <modifier pos:start="13:23" pos:end="13:23">*</modifier></type><name pos:start="13:24" pos:end="13:28">title</name></decl>, <decl pos:start="13:31" pos:end="13:39"><type ref="prev" pos:start="13:5" pos:end="13:23"><modifier pos:start="13:31" pos:end="13:31">*</modifier></type><name pos:start="13:32" pos:end="13:39">provider</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:13"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>, <decl pos:start="15:12" pos:end="15:12"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:29"><decl pos:start="17:5" pos:end="17:28"><type pos:start="17:5" pos:end="17:16"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:14">char</name> <modifier pos:start="17:16" pos:end="17:16">*</modifier></type><name pos:start="17:17" pos:end="17:28">service_name</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:30"><decl pos:start="19:5" pos:end="19:29"><type pos:start="19:5" pos:end="19:16"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:14">char</name> <modifier pos:start="19:16" pos:end="19:16">*</modifier></type><name pos:start="19:17" pos:end="19:29">provider_name</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:14"><decl pos:start="21:5" pos:end="21:13"><type pos:start="21:5" pos:end="21:9"><name pos:start="21:5" pos:end="21:7">int</name> <modifier pos:start="21:9" pos:end="21:9">*</modifier></type><name pos:start="21:10" pos:end="21:13">pids</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:12"><decl pos:start="23:5" pos:end="23:11"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="27:5" pos:end="29:25"><if pos:start="27:5" pos:end="29:25">if <condition pos:start="27:8" pos:end="27:25">(<expr pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:20">max_delay</name></name> <operator pos:start="27:22" pos:end="27:22">&lt;</operator> <literal type="number" pos:start="27:24" pos:end="27:24">0</literal></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:25"><block_content pos:start="29:9" pos:end="29:25"> <comment type="block" pos:start="27:27" pos:end="27:53">/* Not set by the caller */</comment>

        <expr_stmt pos:start="29:9" pos:end="29:25"><expr pos:start="29:9" pos:end="29:24"><name pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:20">max_delay</name></name> <operator pos:start="29:22" pos:end="29:22">=</operator> <literal type="number" pos:start="29:24" pos:end="29:24">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="line" pos:start="33:5" pos:end="33:47">// round up to a whole number of TS packets</comment>

    <expr_stmt pos:start="35:5" pos:end="35:78"><expr pos:start="35:5" pos:end="35:77"><name pos:start="35:5" pos:end="35:24"><name pos:start="35:5" pos:end="35:6">ts</name><operator pos:start="35:7" pos:end="35:8">-&gt;</operator><name pos:start="35:9" pos:end="35:24">pes_payload_size</name></name> <operator pos:start="35:26" pos:end="35:26">=</operator> <operator pos:start="35:28" pos:end="35:28">(</operator><name pos:start="35:29" pos:end="35:48"><name pos:start="35:29" pos:end="35:30">ts</name><operator pos:start="35:31" pos:end="35:32">-&gt;</operator><name pos:start="35:33" pos:end="35:48">pes_payload_size</name></name> <operator pos:start="35:50" pos:end="35:50">+</operator> <literal type="number" pos:start="35:52" pos:end="35:55">14</literal> <operator pos:start="35:55" pos:end="35:55">+</operator> <literal type="number" pos:start="35:57" pos:end="35:59">183</literal><operator pos:start="35:60" pos:end="35:60">)</operator> <operator pos:start="35:62" pos:end="35:62">/</operator> <literal type="number" pos:start="35:64" pos:end="35:66">184</literal> <operator pos:start="35:68" pos:end="35:68">*</operator> <literal type="number" pos:start="35:70" pos:end="35:74">184</literal> <operator pos:start="35:74" pos:end="35:74">-</operator> <literal type="number" pos:start="35:76" pos:end="35:77">14</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:39"><expr pos:start="39:5" pos:end="39:38"><name pos:start="39:5" pos:end="39:12"><name pos:start="39:5" pos:end="39:6">ts</name><operator pos:start="39:7" pos:end="39:8">-&gt;</operator><name pos:start="39:9" pos:end="39:12">tsid</name></name> <operator pos:start="39:14" pos:end="39:14">=</operator> <name pos:start="39:16" pos:end="39:38"><name pos:start="39:16" pos:end="39:17">ts</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:38">transport_stream_id</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:39"><expr pos:start="41:5" pos:end="41:38"><name pos:start="41:5" pos:end="41:12"><name pos:start="41:5" pos:end="41:6">ts</name><operator pos:start="41:7" pos:end="41:8">-&gt;</operator><name pos:start="41:9" pos:end="41:12">onid</name></name> <operator pos:start="41:14" pos:end="41:14">=</operator> <name pos:start="41:16" pos:end="41:38"><name pos:start="41:16" pos:end="41:17">ts</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:38">original_network_id</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="121:5"><if pos:start="43:5" pos:end="79:5">if <condition pos:start="43:8" pos:end="43:24">(<expr pos:start="43:9" pos:end="43:23"><operator pos:start="43:9" pos:end="43:9">!</operator><name pos:start="43:10" pos:end="43:23"><name pos:start="43:10" pos:end="43:10">s</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:23">nb_programs</name></name></expr>)</condition> <block pos:start="43:26" pos:end="79:5">{<block_content pos:start="47:9" pos:end="77:68">

        <comment type="block" pos:start="45:9" pos:end="45:43">/* allocate a single DVB service */</comment>

        <expr_stmt pos:start="47:9" pos:end="47:66"><expr pos:start="47:9" pos:end="47:65"><name pos:start="47:9" pos:end="47:13">title</name> <operator pos:start="47:15" pos:end="47:15">=</operator> <call pos:start="47:17" pos:end="47:65"><name pos:start="47:17" pos:end="47:27">av_dict_get</name><argument_list pos:start="47:28" pos:end="47:65">(<argument pos:start="47:29" pos:end="47:39"><expr pos:start="47:29" pos:end="47:39"><name pos:start="47:29" pos:end="47:39"><name pos:start="47:29" pos:end="47:29">s</name><operator pos:start="47:30" pos:end="47:31">-&gt;</operator><name pos:start="47:32" pos:end="47:39">metadata</name></name></expr></argument>, <argument pos:start="47:42" pos:end="47:55"><expr pos:start="47:42" pos:end="47:55"><literal type="string" pos:start="47:42" pos:end="47:55">"service_name"</literal></expr></argument>, <argument pos:start="47:58" pos:end="47:61"><expr pos:start="47:58" pos:end="47:61"><name pos:start="47:58" pos:end="47:61">NULL</name></expr></argument>, <argument pos:start="47:64" pos:end="47:64"><expr pos:start="47:64" pos:end="47:64"><literal type="number" pos:start="47:64" pos:end="47:64">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="51:63"><if pos:start="49:9" pos:end="51:63">if <condition pos:start="49:12" pos:end="49:19">(<expr pos:start="49:13" pos:end="49:18"><operator pos:start="49:13" pos:end="49:13">!</operator><name pos:start="49:14" pos:end="49:18">title</name></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:63"><block_content pos:start="51:13" pos:end="51:63">

            <expr_stmt pos:start="51:13" pos:end="51:63"><expr pos:start="51:13" pos:end="51:62"><name pos:start="51:13" pos:end="51:17">title</name> <operator pos:start="51:19" pos:end="51:19">=</operator> <call pos:start="51:21" pos:end="51:62"><name pos:start="51:21" pos:end="51:31">av_dict_get</name><argument_list pos:start="51:32" pos:end="51:62">(<argument pos:start="51:33" pos:end="51:43"><expr pos:start="51:33" pos:end="51:43"><name pos:start="51:33" pos:end="51:43"><name pos:start="51:33" pos:end="51:33">s</name><operator pos:start="51:34" pos:end="51:35">-&gt;</operator><name pos:start="51:36" pos:end="51:43">metadata</name></name></expr></argument>, <argument pos:start="51:46" pos:end="51:52"><expr pos:start="51:46" pos:end="51:52"><literal type="string" pos:start="51:46" pos:end="51:52">"title"</literal></expr></argument>, <argument pos:start="51:55" pos:end="51:58"><expr pos:start="51:55" pos:end="51:58"><name pos:start="51:55" pos:end="51:58">NULL</name></expr></argument>, <argument pos:start="51:61" pos:end="51:61"><expr pos:start="51:61" pos:end="51:61"><literal type="number" pos:start="51:61" pos:end="51:61">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:68"><expr pos:start="53:9" pos:end="53:67"><name pos:start="53:9" pos:end="53:20">service_name</name>  <operator pos:start="53:23" pos:end="53:23">=</operator> <ternary pos:start="53:25" pos:end="53:67"><condition pos:start="53:25" pos:end="53:31"><expr pos:start="53:25" pos:end="53:29"><name pos:start="53:25" pos:end="53:29">title</name></expr> ?</condition><then pos:start="53:33" pos:end="53:44"> <expr pos:start="53:33" pos:end="53:44"><name pos:start="53:33" pos:end="53:44"><name pos:start="53:33" pos:end="53:37">title</name><operator pos:start="53:38" pos:end="53:39">-&gt;</operator><name pos:start="53:40" pos:end="53:44">value</name></name></expr> </then><else pos:start="53:46" pos:end="53:67">: <expr pos:start="53:48" pos:end="53:67"><name pos:start="53:48" pos:end="53:67">DEFAULT_SERVICE_NAME</name></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:78"><expr pos:start="55:9" pos:end="55:77"><name pos:start="55:9" pos:end="55:16">provider</name>      <operator pos:start="55:23" pos:end="55:23">=</operator> <call pos:start="55:25" pos:end="55:77"><name pos:start="55:25" pos:end="55:35">av_dict_get</name><argument_list pos:start="55:36" pos:end="55:77">(<argument pos:start="55:37" pos:end="55:47"><expr pos:start="55:37" pos:end="55:47"><name pos:start="55:37" pos:end="55:47"><name pos:start="55:37" pos:end="55:37">s</name><operator pos:start="55:38" pos:end="55:39">-&gt;</operator><name pos:start="55:40" pos:end="55:47">metadata</name></name></expr></argument>, <argument pos:start="55:50" pos:end="55:67"><expr pos:start="55:50" pos:end="55:67"><literal type="string" pos:start="55:50" pos:end="55:67">"service_provider"</literal></expr></argument>, <argument pos:start="55:70" pos:end="55:73"><expr pos:start="55:70" pos:end="55:73"><name pos:start="55:70" pos:end="55:73">NULL</name></expr></argument>, <argument pos:start="55:76" pos:end="55:76"><expr pos:start="55:76" pos:end="55:76"><literal type="number" pos:start="55:76" pos:end="55:76">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:75"><expr pos:start="57:9" pos:end="57:74"><name pos:start="57:9" pos:end="57:21">provider_name</name> <operator pos:start="57:23" pos:end="57:23">=</operator> <ternary pos:start="57:25" pos:end="57:74"><condition pos:start="57:25" pos:end="57:34"><expr pos:start="57:25" pos:end="57:32"><name pos:start="57:25" pos:end="57:32">provider</name></expr> ?</condition><then pos:start="57:36" pos:end="57:50"> <expr pos:start="57:36" pos:end="57:50"><name pos:start="57:36" pos:end="57:50"><name pos:start="57:36" pos:end="57:43">provider</name><operator pos:start="57:44" pos:end="57:45">-&gt;</operator><name pos:start="57:46" pos:end="57:50">value</name></name></expr> </then><else pos:start="57:52" pos:end="57:74">: <expr pos:start="57:54" pos:end="57:74"><name pos:start="57:54" pos:end="57:74">DEFAULT_PROVIDER_NAME</name></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="61:72"><expr pos:start="59:9" pos:end="61:71"><name pos:start="59:9" pos:end="59:15">service</name>       <operator pos:start="59:23" pos:end="59:23">=</operator> <call pos:start="59:25" pos:end="61:71"><name pos:start="59:25" pos:end="59:42">mpegts_add_service</name><argument_list pos:start="59:43" pos:end="61:71">(<argument pos:start="59:44" pos:end="59:45"><expr pos:start="59:44" pos:end="59:45"><name pos:start="59:44" pos:end="59:45">ts</name></expr></argument>, <argument pos:start="59:48" pos:end="59:61"><expr pos:start="59:48" pos:end="59:61"><name pos:start="59:48" pos:end="59:61"><name pos:start="59:48" pos:end="59:49">ts</name><operator pos:start="59:50" pos:end="59:51">-&gt;</operator><name pos:start="59:52" pos:end="59:61">service_id</name></name></expr></argument>,

                                           <argument pos:start="61:44" pos:end="61:56"><expr pos:start="61:44" pos:end="61:56"><name pos:start="61:44" pos:end="61:56">provider_name</name></expr></argument>, <argument pos:start="61:59" pos:end="61:70"><expr pos:start="61:59" pos:end="61:70"><name pos:start="61:59" pos:end="61:70">service_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="65:9" pos:end="67:35"><if pos:start="65:9" pos:end="67:35">if <condition pos:start="65:12" pos:end="65:21">(<expr pos:start="65:13" pos:end="65:20"><operator pos:start="65:13" pos:end="65:13">!</operator><name pos:start="65:14" pos:end="65:20">service</name></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:35"><block_content pos:start="67:13" pos:end="67:35">

            <return pos:start="67:13" pos:end="67:35">return <expr pos:start="67:20" pos:end="67:34"><call pos:start="67:20" pos:end="67:34"><name pos:start="67:20" pos:end="67:26">AVERROR</name><argument_list pos:start="67:27" pos:end="67:34">(<argument pos:start="67:28" pos:end="67:33"><expr pos:start="67:28" pos:end="67:33"><name pos:start="67:28" pos:end="67:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="71:9" pos:end="71:57"><expr pos:start="71:9" pos:end="71:56"><name pos:start="71:9" pos:end="71:33"><name pos:start="71:9" pos:end="71:15">service</name><operator pos:start="71:16" pos:end="71:17">-&gt;</operator><name pos:start="71:18" pos:end="71:20">pmt</name><operator pos:start="71:21" pos:end="71:21">.</operator><name pos:start="71:22" pos:end="71:33">write_packet</name></name> <operator pos:start="71:35" pos:end="71:35">=</operator> <name pos:start="71:37" pos:end="71:56">section_write_packet</name></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:38"><expr pos:start="73:9" pos:end="73:37"><name pos:start="73:9" pos:end="73:27"><name pos:start="73:9" pos:end="73:15">service</name><operator pos:start="73:16" pos:end="73:17">-&gt;</operator><name pos:start="73:18" pos:end="73:20">pmt</name><operator pos:start="73:21" pos:end="73:21">.</operator><name pos:start="73:22" pos:end="73:27">opaque</name></name>       <operator pos:start="73:35" pos:end="73:35">=</operator> <name pos:start="73:37" pos:end="73:37">s</name></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:39"><expr pos:start="75:9" pos:end="75:38"><name pos:start="75:9" pos:end="75:23"><name pos:start="75:9" pos:end="75:15">service</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:20">pmt</name><operator pos:start="75:21" pos:end="75:21">.</operator><name pos:start="75:22" pos:end="75:23">cc</name></name>           <operator pos:start="75:35" pos:end="75:35">=</operator> <literal type="number" pos:start="75:37" pos:end="75:38">15</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:68"><expr pos:start="77:9" pos:end="77:67"><name pos:start="77:9" pos:end="77:34"><name pos:start="77:9" pos:end="77:15">service</name><operator pos:start="77:16" pos:end="77:17">-&gt;</operator><name pos:start="77:18" pos:end="77:20">pmt</name><operator pos:start="77:21" pos:end="77:21">.</operator><name pos:start="77:22" pos:end="77:34">discontinuity</name></name><operator pos:start="77:35" pos:end="77:35">=</operator> <name pos:start="77:37" pos:end="77:45"><name pos:start="77:37" pos:end="77:38">ts</name><operator pos:start="77:39" pos:end="77:40">-&gt;</operator><name pos:start="77:41" pos:end="77:45">flags</name></name> <operator pos:start="77:47" pos:end="77:47">&amp;</operator> <name pos:start="77:49" pos:end="77:67">MPEGTS_FLAG_DISCONT</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="79:7" pos:end="121:5">else <block pos:start="79:12" pos:end="121:5">{<block_content pos:start="81:9" pos:end="119:9">

        <for pos:start="81:9" pos:end="119:9">for <control pos:start="81:13" pos:end="81:44">(<init pos:start="81:14" pos:end="81:19"><expr pos:start="81:14" pos:end="81:18"><name pos:start="81:14" pos:end="81:14">i</name> <operator pos:start="81:16" pos:end="81:16">=</operator> <literal type="number" pos:start="81:18" pos:end="81:18">0</literal></expr>;</init> <condition pos:start="81:21" pos:end="81:39"><expr pos:start="81:21" pos:end="81:38"><name pos:start="81:21" pos:end="81:21">i</name> <operator pos:start="81:23" pos:end="81:23">&lt;</operator> <name pos:start="81:25" pos:end="81:38"><name pos:start="81:25" pos:end="81:25">s</name><operator pos:start="81:26" pos:end="81:27">-&gt;</operator><name pos:start="81:28" pos:end="81:38">nb_programs</name></name></expr>;</condition> <incr pos:start="81:41" pos:end="81:43"><expr pos:start="81:41" pos:end="81:43"><name pos:start="81:41" pos:end="81:41">i</name><operator pos:start="81:42" pos:end="81:43">++</operator></expr></incr>)</control> <block pos:start="81:46" pos:end="119:9">{<block_content pos:start="83:13" pos:end="117:48">

            <decl_stmt pos:start="83:13" pos:end="83:48"><decl pos:start="83:13" pos:end="83:47"><type pos:start="83:13" pos:end="83:23"><name pos:start="83:13" pos:end="83:21">AVProgram</name> <modifier pos:start="83:23" pos:end="83:23">*</modifier></type><name pos:start="83:24" pos:end="83:30">program</name> <init pos:start="83:32" pos:end="83:47">= <expr pos:start="83:34" pos:end="83:47"><name pos:start="83:34" pos:end="83:47"><name pos:start="83:34" pos:end="83:34">s</name><operator pos:start="83:35" pos:end="83:36">-&gt;</operator><name pos:start="83:37" pos:end="83:44">programs</name><index pos:start="83:45" pos:end="83:47">[<expr pos:start="83:46" pos:end="83:46"><name pos:start="83:46" pos:end="83:46">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:76"><expr pos:start="85:13" pos:end="85:75"><name pos:start="85:13" pos:end="85:17">title</name> <operator pos:start="85:19" pos:end="85:19">=</operator> <call pos:start="85:21" pos:end="85:75"><name pos:start="85:21" pos:end="85:31">av_dict_get</name><argument_list pos:start="85:32" pos:end="85:75">(<argument pos:start="85:33" pos:end="85:49"><expr pos:start="85:33" pos:end="85:49"><name pos:start="85:33" pos:end="85:49"><name pos:start="85:33" pos:end="85:39">program</name><operator pos:start="85:40" pos:end="85:41">-&gt;</operator><name pos:start="85:42" pos:end="85:49">metadata</name></name></expr></argument>, <argument pos:start="85:52" pos:end="85:65"><expr pos:start="85:52" pos:end="85:65"><literal type="string" pos:start="85:52" pos:end="85:65">"service_name"</literal></expr></argument>, <argument pos:start="85:68" pos:end="85:71"><expr pos:start="85:68" pos:end="85:71"><name pos:start="85:68" pos:end="85:71">NULL</name></expr></argument>, <argument pos:start="85:74" pos:end="85:74"><expr pos:start="85:74" pos:end="85:74"><literal type="number" pos:start="85:74" pos:end="85:74">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="87:13" pos:end="89:73"><if pos:start="87:13" pos:end="89:73">if <condition pos:start="87:16" pos:end="87:23">(<expr pos:start="87:17" pos:end="87:22"><operator pos:start="87:17" pos:end="87:17">!</operator><name pos:start="87:18" pos:end="87:22">title</name></expr>)</condition><block type="pseudo" pos:start="89:17" pos:end="89:73"><block_content pos:start="89:17" pos:end="89:73">

                <expr_stmt pos:start="89:17" pos:end="89:73"><expr pos:start="89:17" pos:end="89:72"><name pos:start="89:17" pos:end="89:21">title</name> <operator pos:start="89:23" pos:end="89:23">=</operator> <call pos:start="89:25" pos:end="89:72"><name pos:start="89:25" pos:end="89:35">av_dict_get</name><argument_list pos:start="89:36" pos:end="89:72">(<argument pos:start="89:37" pos:end="89:53"><expr pos:start="89:37" pos:end="89:53"><name pos:start="89:37" pos:end="89:53"><name pos:start="89:37" pos:end="89:43">program</name><operator pos:start="89:44" pos:end="89:45">-&gt;</operator><name pos:start="89:46" pos:end="89:53">metadata</name></name></expr></argument>, <argument pos:start="89:56" pos:end="89:62"><expr pos:start="89:56" pos:end="89:62"><literal type="string" pos:start="89:56" pos:end="89:62">"title"</literal></expr></argument>, <argument pos:start="89:65" pos:end="89:68"><expr pos:start="89:65" pos:end="89:68"><name pos:start="89:65" pos:end="89:68">NULL</name></expr></argument>, <argument pos:start="89:71" pos:end="89:71"><expr pos:start="89:71" pos:end="89:71"><literal type="number" pos:start="89:71" pos:end="89:71">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:72"><expr pos:start="91:13" pos:end="91:71"><name pos:start="91:13" pos:end="91:24">service_name</name>  <operator pos:start="91:27" pos:end="91:27">=</operator> <ternary pos:start="91:29" pos:end="91:71"><condition pos:start="91:29" pos:end="91:35"><expr pos:start="91:29" pos:end="91:33"><name pos:start="91:29" pos:end="91:33">title</name></expr> ?</condition><then pos:start="91:37" pos:end="91:48"> <expr pos:start="91:37" pos:end="91:48"><name pos:start="91:37" pos:end="91:48"><name pos:start="91:37" pos:end="91:41">title</name><operator pos:start="91:42" pos:end="91:43">-&gt;</operator><name pos:start="91:44" pos:end="91:48">value</name></name></expr> </then><else pos:start="91:50" pos:end="91:71">: <expr pos:start="91:52" pos:end="91:71"><name pos:start="91:52" pos:end="91:71">DEFAULT_SERVICE_NAME</name></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:88"><expr pos:start="93:13" pos:end="93:87"><name pos:start="93:13" pos:end="93:20">provider</name>      <operator pos:start="93:27" pos:end="93:27">=</operator> <call pos:start="93:29" pos:end="93:87"><name pos:start="93:29" pos:end="93:39">av_dict_get</name><argument_list pos:start="93:40" pos:end="93:87">(<argument pos:start="93:41" pos:end="93:57"><expr pos:start="93:41" pos:end="93:57"><name pos:start="93:41" pos:end="93:57"><name pos:start="93:41" pos:end="93:47">program</name><operator pos:start="93:48" pos:end="93:49">-&gt;</operator><name pos:start="93:50" pos:end="93:57">metadata</name></name></expr></argument>, <argument pos:start="93:60" pos:end="93:77"><expr pos:start="93:60" pos:end="93:77"><literal type="string" pos:start="93:60" pos:end="93:77">"service_provider"</literal></expr></argument>, <argument pos:start="93:80" pos:end="93:83"><expr pos:start="93:80" pos:end="93:83"><name pos:start="93:80" pos:end="93:83">NULL</name></expr></argument>, <argument pos:start="93:86" pos:end="93:86"><expr pos:start="93:86" pos:end="93:86"><literal type="number" pos:start="93:86" pos:end="93:86">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:79"><expr pos:start="95:13" pos:end="95:78"><name pos:start="95:13" pos:end="95:25">provider_name</name> <operator pos:start="95:27" pos:end="95:27">=</operator> <ternary pos:start="95:29" pos:end="95:78"><condition pos:start="95:29" pos:end="95:38"><expr pos:start="95:29" pos:end="95:36"><name pos:start="95:29" pos:end="95:36">provider</name></expr> ?</condition><then pos:start="95:40" pos:end="95:54"> <expr pos:start="95:40" pos:end="95:54"><name pos:start="95:40" pos:end="95:54"><name pos:start="95:40" pos:end="95:47">provider</name><operator pos:start="95:48" pos:end="95:49">-&gt;</operator><name pos:start="95:50" pos:end="95:54">value</name></name></expr> </then><else pos:start="95:56" pos:end="95:78">: <expr pos:start="95:58" pos:end="95:78"><name pos:start="95:58" pos:end="95:78">DEFAULT_PROVIDER_NAME</name></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="99:76"><expr pos:start="97:13" pos:end="99:75"><name pos:start="97:13" pos:end="97:19">service</name>       <operator pos:start="97:27" pos:end="97:27">=</operator> <call pos:start="97:29" pos:end="99:75"><name pos:start="97:29" pos:end="97:46">mpegts_add_service</name><argument_list pos:start="97:47" pos:end="99:75">(<argument pos:start="97:48" pos:end="97:49"><expr pos:start="97:48" pos:end="97:49"><name pos:start="97:48" pos:end="97:49">ts</name></expr></argument>, <argument pos:start="97:52" pos:end="97:62"><expr pos:start="97:52" pos:end="97:62"><name pos:start="97:52" pos:end="97:62"><name pos:start="97:52" pos:end="97:58">program</name><operator pos:start="97:59" pos:end="97:60">-&gt;</operator><name pos:start="97:61" pos:end="97:62">id</name></name></expr></argument>,

                                               <argument pos:start="99:48" pos:end="99:60"><expr pos:start="99:48" pos:end="99:60"><name pos:start="99:48" pos:end="99:60">provider_name</name></expr></argument>, <argument pos:start="99:63" pos:end="99:74"><expr pos:start="99:63" pos:end="99:74"><name pos:start="99:63" pos:end="99:74">service_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="103:13" pos:end="105:39"><if pos:start="103:13" pos:end="105:39">if <condition pos:start="103:16" pos:end="103:25">(<expr pos:start="103:17" pos:end="103:24"><operator pos:start="103:17" pos:end="103:17">!</operator><name pos:start="103:18" pos:end="103:24">service</name></expr>)</condition><block type="pseudo" pos:start="105:17" pos:end="105:39"><block_content pos:start="105:17" pos:end="105:39">

                <return pos:start="105:17" pos:end="105:39">return <expr pos:start="105:24" pos:end="105:38"><call pos:start="105:24" pos:end="105:38"><name pos:start="105:24" pos:end="105:30">AVERROR</name><argument_list pos:start="105:31" pos:end="105:38">(<argument pos:start="105:32" pos:end="105:37"><expr pos:start="105:32" pos:end="105:37"><name pos:start="105:32" pos:end="105:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="109:13" pos:end="109:61"><expr pos:start="109:13" pos:end="109:60"><name pos:start="109:13" pos:end="109:37"><name pos:start="109:13" pos:end="109:19">service</name><operator pos:start="109:20" pos:end="109:21">-&gt;</operator><name pos:start="109:22" pos:end="109:24">pmt</name><operator pos:start="109:25" pos:end="109:25">.</operator><name pos:start="109:26" pos:end="109:37">write_packet</name></name> <operator pos:start="109:39" pos:end="109:39">=</operator> <name pos:start="109:41" pos:end="109:60">section_write_packet</name></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:42"><expr pos:start="111:13" pos:end="111:41"><name pos:start="111:13" pos:end="111:31"><name pos:start="111:13" pos:end="111:19">service</name><operator pos:start="111:20" pos:end="111:21">-&gt;</operator><name pos:start="111:22" pos:end="111:24">pmt</name><operator pos:start="111:25" pos:end="111:25">.</operator><name pos:start="111:26" pos:end="111:31">opaque</name></name>       <operator pos:start="111:39" pos:end="111:39">=</operator> <name pos:start="111:41" pos:end="111:41">s</name></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:43"><expr pos:start="113:13" pos:end="113:42"><name pos:start="113:13" pos:end="113:27"><name pos:start="113:13" pos:end="113:19">service</name><operator pos:start="113:20" pos:end="113:21">-&gt;</operator><name pos:start="113:22" pos:end="113:24">pmt</name><operator pos:start="113:25" pos:end="113:25">.</operator><name pos:start="113:26" pos:end="113:27">cc</name></name>           <operator pos:start="113:39" pos:end="113:39">=</operator> <literal type="number" pos:start="113:41" pos:end="113:42">15</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:72"><expr pos:start="115:13" pos:end="115:71"><name pos:start="115:13" pos:end="115:38"><name pos:start="115:13" pos:end="115:19">service</name><operator pos:start="115:20" pos:end="115:21">-&gt;</operator><name pos:start="115:22" pos:end="115:24">pmt</name><operator pos:start="115:25" pos:end="115:25">.</operator><name pos:start="115:26" pos:end="115:38">discontinuity</name></name><operator pos:start="115:39" pos:end="115:39">=</operator> <name pos:start="115:41" pos:end="115:49"><name pos:start="115:41" pos:end="115:42">ts</name><operator pos:start="115:43" pos:end="115:44">-&gt;</operator><name pos:start="115:45" pos:end="115:49">flags</name></name> <operator pos:start="115:51" pos:end="115:51">&amp;</operator> <name pos:start="115:53" pos:end="115:71">MPEGTS_FLAG_DISCONT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:48"><expr pos:start="117:13" pos:end="117:47"><name pos:start="117:13" pos:end="117:28"><name pos:start="117:13" pos:end="117:19">service</name><operator pos:start="117:20" pos:end="117:21">-&gt;</operator><name pos:start="117:22" pos:end="117:28">program</name></name>          <operator pos:start="117:39" pos:end="117:39">=</operator> <name pos:start="117:41" pos:end="117:47">program</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="125:5" pos:end="125:35"><expr pos:start="125:5" pos:end="125:34"><name pos:start="125:5" pos:end="125:15"><name pos:start="125:5" pos:end="125:6">ts</name><operator pos:start="125:7" pos:end="125:8">-&gt;</operator><name pos:start="125:9" pos:end="125:11">pat</name><operator pos:start="125:12" pos:end="125:12">.</operator><name pos:start="125:13" pos:end="125:15">pid</name></name>          <operator pos:start="125:26" pos:end="125:26">=</operator> <name pos:start="125:28" pos:end="125:34">PAT_PID</name></expr>;</expr_stmt>

    <comment type="block" pos:start="127:5" pos:end="129:32">/* Initialize at 15 so that it wraps and is equal to 0 for the

     * first packet we write. */</comment>

    <expr_stmt pos:start="131:5" pos:end="131:30"><expr pos:start="131:5" pos:end="131:29"><name pos:start="131:5" pos:end="131:14"><name pos:start="131:5" pos:end="131:6">ts</name><operator pos:start="131:7" pos:end="131:8">-&gt;</operator><name pos:start="131:9" pos:end="131:11">pat</name><operator pos:start="131:12" pos:end="131:12">.</operator><name pos:start="131:13" pos:end="131:14">cc</name></name>           <operator pos:start="131:26" pos:end="131:26">=</operator> <literal type="number" pos:start="131:28" pos:end="131:29">15</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:59"><expr pos:start="133:5" pos:end="133:58"><name pos:start="133:5" pos:end="133:25"><name pos:start="133:5" pos:end="133:6">ts</name><operator pos:start="133:7" pos:end="133:8">-&gt;</operator><name pos:start="133:9" pos:end="133:11">pat</name><operator pos:start="133:12" pos:end="133:12">.</operator><name pos:start="133:13" pos:end="133:25">discontinuity</name></name><operator pos:start="133:26" pos:end="133:26">=</operator> <name pos:start="133:28" pos:end="133:36"><name pos:start="133:28" pos:end="133:29">ts</name><operator pos:start="133:30" pos:end="133:31">-&gt;</operator><name pos:start="133:32" pos:end="133:36">flags</name></name> <operator pos:start="133:38" pos:end="133:38">&amp;</operator> <name pos:start="133:40" pos:end="133:58">MPEGTS_FLAG_DISCONT</name></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:48"><expr pos:start="135:5" pos:end="135:47"><name pos:start="135:5" pos:end="135:24"><name pos:start="135:5" pos:end="135:6">ts</name><operator pos:start="135:7" pos:end="135:8">-&gt;</operator><name pos:start="135:9" pos:end="135:11">pat</name><operator pos:start="135:12" pos:end="135:12">.</operator><name pos:start="135:13" pos:end="135:24">write_packet</name></name> <operator pos:start="135:26" pos:end="135:26">=</operator> <name pos:start="135:28" pos:end="135:47">section_write_packet</name></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:29"><expr pos:start="137:5" pos:end="137:28"><name pos:start="137:5" pos:end="137:18"><name pos:start="137:5" pos:end="137:6">ts</name><operator pos:start="137:7" pos:end="137:8">-&gt;</operator><name pos:start="137:9" pos:end="137:11">pat</name><operator pos:start="137:12" pos:end="137:12">.</operator><name pos:start="137:13" pos:end="137:18">opaque</name></name>       <operator pos:start="137:26" pos:end="137:26">=</operator> <name pos:start="137:28" pos:end="137:28">s</name></expr>;</expr_stmt>



    <expr_stmt pos:start="141:5" pos:end="141:35"><expr pos:start="141:5" pos:end="141:34"><name pos:start="141:5" pos:end="141:15"><name pos:start="141:5" pos:end="141:6">ts</name><operator pos:start="141:7" pos:end="141:8">-&gt;</operator><name pos:start="141:9" pos:end="141:11">sdt</name><operator pos:start="141:12" pos:end="141:12">.</operator><name pos:start="141:13" pos:end="141:15">pid</name></name>          <operator pos:start="141:26" pos:end="141:26">=</operator> <name pos:start="141:28" pos:end="141:34">SDT_PID</name></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:30"><expr pos:start="143:5" pos:end="143:29"><name pos:start="143:5" pos:end="143:14"><name pos:start="143:5" pos:end="143:6">ts</name><operator pos:start="143:7" pos:end="143:8">-&gt;</operator><name pos:start="143:9" pos:end="143:11">sdt</name><operator pos:start="143:12" pos:end="143:12">.</operator><name pos:start="143:13" pos:end="143:14">cc</name></name>           <operator pos:start="143:26" pos:end="143:26">=</operator> <literal type="number" pos:start="143:28" pos:end="143:29">15</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:59"><expr pos:start="145:5" pos:end="145:58"><name pos:start="145:5" pos:end="145:25"><name pos:start="145:5" pos:end="145:6">ts</name><operator pos:start="145:7" pos:end="145:8">-&gt;</operator><name pos:start="145:9" pos:end="145:11">sdt</name><operator pos:start="145:12" pos:end="145:12">.</operator><name pos:start="145:13" pos:end="145:25">discontinuity</name></name><operator pos:start="145:26" pos:end="145:26">=</operator> <name pos:start="145:28" pos:end="145:36"><name pos:start="145:28" pos:end="145:29">ts</name><operator pos:start="145:30" pos:end="145:31">-&gt;</operator><name pos:start="145:32" pos:end="145:36">flags</name></name> <operator pos:start="145:38" pos:end="145:38">&amp;</operator> <name pos:start="145:40" pos:end="145:58">MPEGTS_FLAG_DISCONT</name></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:48"><expr pos:start="147:5" pos:end="147:47"><name pos:start="147:5" pos:end="147:24"><name pos:start="147:5" pos:end="147:6">ts</name><operator pos:start="147:7" pos:end="147:8">-&gt;</operator><name pos:start="147:9" pos:end="147:11">sdt</name><operator pos:start="147:12" pos:end="147:12">.</operator><name pos:start="147:13" pos:end="147:24">write_packet</name></name> <operator pos:start="147:26" pos:end="147:26">=</operator> <name pos:start="147:28" pos:end="147:47">section_write_packet</name></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:29"><expr pos:start="149:5" pos:end="149:28"><name pos:start="149:5" pos:end="149:18"><name pos:start="149:5" pos:end="149:6">ts</name><operator pos:start="149:7" pos:end="149:8">-&gt;</operator><name pos:start="149:9" pos:end="149:11">sdt</name><operator pos:start="149:12" pos:end="149:12">.</operator><name pos:start="149:13" pos:end="149:18">opaque</name></name>       <operator pos:start="149:26" pos:end="149:26">=</operator> <name pos:start="149:28" pos:end="149:28">s</name></expr>;</expr_stmt>



    <expr_stmt pos:start="153:5" pos:end="153:57"><expr pos:start="153:5" pos:end="153:56"><name pos:start="153:5" pos:end="153:8">pids</name> <operator pos:start="153:10" pos:end="153:10">=</operator> <call pos:start="153:12" pos:end="153:56"><name pos:start="153:12" pos:end="153:26">av_malloc_array</name><argument_list pos:start="153:27" pos:end="153:56">(<argument pos:start="153:28" pos:end="153:40"><expr pos:start="153:28" pos:end="153:40"><name pos:start="153:28" pos:end="153:40"><name pos:start="153:28" pos:end="153:28">s</name><operator pos:start="153:29" pos:end="153:30">-&gt;</operator><name pos:start="153:31" pos:end="153:40">nb_streams</name></name></expr></argument>, <argument pos:start="153:43" pos:end="153:55"><expr pos:start="153:43" pos:end="153:55"><sizeof pos:start="153:43" pos:end="153:55">sizeof<argument_list pos:start="153:49" pos:end="153:55">(<argument pos:start="153:50" pos:end="153:54"><expr pos:start="153:50" pos:end="153:54"><operator pos:start="153:50" pos:end="153:50">*</operator><name pos:start="153:51" pos:end="153:54">pids</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="155:5" pos:end="161:5"><if pos:start="155:5" pos:end="161:5">if <condition pos:start="155:8" pos:end="155:14">(<expr pos:start="155:9" pos:end="155:13"><operator pos:start="155:9" pos:end="155:9">!</operator><name pos:start="155:10" pos:end="155:13">pids</name></expr>)</condition> <block pos:start="155:16" pos:end="161:5">{<block_content pos:start="157:9" pos:end="159:18">

        <expr_stmt pos:start="157:9" pos:end="157:30"><expr pos:start="157:9" pos:end="157:29"><name pos:start="157:9" pos:end="157:11">ret</name> <operator pos:start="157:13" pos:end="157:13">=</operator> <call pos:start="157:15" pos:end="157:29"><name pos:start="157:15" pos:end="157:21">AVERROR</name><argument_list pos:start="157:22" pos:end="157:29">(<argument pos:start="157:23" pos:end="157:28"><expr pos:start="157:23" pos:end="157:28"><name pos:start="157:23" pos:end="157:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="159:9" pos:end="159:18">goto <name pos:start="159:14" pos:end="159:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="165:5" pos:end="165:36">/* assign pids to each stream */</comment>

    <for pos:start="167:5" pos:end="360:5">for <control pos:start="167:9" pos:end="167:39">(<init pos:start="167:10" pos:end="167:15"><expr pos:start="167:10" pos:end="167:14"><name pos:start="167:10" pos:end="167:10">i</name> <operator pos:start="167:12" pos:end="167:12">=</operator> <literal type="number" pos:start="167:14" pos:end="167:14">0</literal></expr>;</init> <condition pos:start="167:17" pos:end="167:34"><expr pos:start="167:17" pos:end="167:33"><name pos:start="167:17" pos:end="167:17">i</name> <operator pos:start="167:19" pos:end="167:19">&lt;</operator> <name pos:start="167:21" pos:end="167:33"><name pos:start="167:21" pos:end="167:21">s</name><operator pos:start="167:22" pos:end="167:23">-&gt;</operator><name pos:start="167:24" pos:end="167:33">nb_streams</name></name></expr>;</condition> <incr pos:start="167:36" pos:end="167:38"><expr pos:start="167:36" pos:end="167:38"><name pos:start="167:36" pos:end="167:36">i</name><operator pos:start="167:37" pos:end="167:38">++</operator></expr></incr>)</control> <block pos:start="167:41" pos:end="360:5">{<block_content pos:start="169:9" pos:end="358:9">

        <decl_stmt pos:start="169:9" pos:end="169:27"><decl pos:start="169:9" pos:end="169:26"><type pos:start="169:9" pos:end="169:19"><name pos:start="169:9" pos:end="169:17">AVProgram</name> <modifier pos:start="169:19" pos:end="169:19">*</modifier></type><name pos:start="169:20" pos:end="169:26">program</name></decl>;</decl_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:27"><expr pos:start="171:9" pos:end="171:26"><name pos:start="171:9" pos:end="171:10">st</name> <operator pos:start="171:12" pos:end="171:12">=</operator> <name pos:start="171:14" pos:end="171:26"><name pos:start="171:14" pos:end="171:14">s</name><operator pos:start="171:15" pos:end="171:16">-&gt;</operator><name pos:start="171:17" pos:end="171:23">streams</name><index pos:start="171:24" pos:end="171:26">[<expr pos:start="171:25" pos:end="171:25"><name pos:start="171:25" pos:end="171:25">i</name></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="175:9" pos:end="175:54"><expr pos:start="175:9" pos:end="175:53"><name pos:start="175:9" pos:end="175:13">ts_st</name> <operator pos:start="175:15" pos:end="175:15">=</operator> <call pos:start="175:17" pos:end="175:53"><name pos:start="175:17" pos:end="175:26">av_mallocz</name><argument_list pos:start="175:27" pos:end="175:53">(<argument pos:start="175:28" pos:end="175:52"><expr pos:start="175:28" pos:end="175:52"><sizeof pos:start="175:28" pos:end="175:52">sizeof<argument_list pos:start="175:34" pos:end="175:52">(<argument pos:start="175:35" pos:end="175:51"><expr pos:start="175:35" pos:end="175:51"><name pos:start="175:35" pos:end="175:51">MpegTSWriteStream</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="177:9" pos:end="183:9"><if pos:start="177:9" pos:end="183:9">if <condition pos:start="177:12" pos:end="177:19">(<expr pos:start="177:13" pos:end="177:18"><operator pos:start="177:13" pos:end="177:13">!</operator><name pos:start="177:14" pos:end="177:18">ts_st</name></expr>)</condition> <block pos:start="177:21" pos:end="183:9">{<block_content pos:start="179:13" pos:end="181:22">

            <expr_stmt pos:start="179:13" pos:end="179:34"><expr pos:start="179:13" pos:end="179:33"><name pos:start="179:13" pos:end="179:15">ret</name> <operator pos:start="179:17" pos:end="179:17">=</operator> <call pos:start="179:19" pos:end="179:33"><name pos:start="179:19" pos:end="179:25">AVERROR</name><argument_list pos:start="179:26" pos:end="179:33">(<argument pos:start="179:27" pos:end="179:32"><expr pos:start="179:27" pos:end="179:32"><name pos:start="179:27" pos:end="179:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="181:13" pos:end="181:22">goto <name pos:start="181:18" pos:end="181:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:30"><expr pos:start="185:9" pos:end="185:29"><name pos:start="185:9" pos:end="185:21"><name pos:start="185:9" pos:end="185:10">st</name><operator pos:start="185:11" pos:end="185:12">-&gt;</operator><name pos:start="185:13" pos:end="185:21">priv_data</name></name> <operator pos:start="185:23" pos:end="185:23">=</operator> <name pos:start="185:25" pos:end="185:29">ts_st</name></expr>;</expr_stmt>



        <expr_stmt pos:start="189:9" pos:end="189:39"><expr pos:start="189:9" pos:end="189:38"><name pos:start="189:9" pos:end="189:22"><name pos:start="189:9" pos:end="189:13">ts_st</name><operator pos:start="189:14" pos:end="189:15">-&gt;</operator><name pos:start="189:16" pos:end="189:22">user_tb</name></name> <operator pos:start="189:24" pos:end="189:24">=</operator> <name pos:start="189:26" pos:end="189:38"><name pos:start="189:26" pos:end="189:27">st</name><operator pos:start="189:28" pos:end="189:29">-&gt;</operator><name pos:start="189:30" pos:end="189:38">time_base</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="191:9" pos:end="191:46"><expr pos:start="191:9" pos:end="191:45"><call pos:start="191:9" pos:end="191:45"><name pos:start="191:9" pos:end="191:27">avpriv_set_pts_info</name><argument_list pos:start="191:28" pos:end="191:45">(<argument pos:start="191:29" pos:end="191:30"><expr pos:start="191:29" pos:end="191:30"><name pos:start="191:29" pos:end="191:30">st</name></expr></argument>, <argument pos:start="191:33" pos:end="191:34"><expr pos:start="191:33" pos:end="191:34"><literal type="number" pos:start="191:33" pos:end="191:34">33</literal></expr></argument>, <argument pos:start="191:37" pos:end="191:37"><expr pos:start="191:37" pos:end="191:37"><literal type="number" pos:start="191:37" pos:end="191:37">1</literal></expr></argument>, <argument pos:start="191:40" pos:end="191:44"><expr pos:start="191:40" pos:end="191:44"><literal type="number" pos:start="191:40" pos:end="191:44">90000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="195:9" pos:end="195:58"><expr pos:start="195:9" pos:end="195:57"><name pos:start="195:9" pos:end="195:22"><name pos:start="195:9" pos:end="195:13">ts_st</name><operator pos:start="195:14" pos:end="195:15">-&gt;</operator><name pos:start="195:16" pos:end="195:22">payload</name></name> <operator pos:start="195:24" pos:end="195:24">=</operator> <call pos:start="195:26" pos:end="195:57"><name pos:start="195:26" pos:end="195:35">av_mallocz</name><argument_list pos:start="195:36" pos:end="195:57">(<argument pos:start="195:37" pos:end="195:56"><expr pos:start="195:37" pos:end="195:56"><name pos:start="195:37" pos:end="195:56"><name pos:start="195:37" pos:end="195:38">ts</name><operator pos:start="195:39" pos:end="195:40">-&gt;</operator><name pos:start="195:41" pos:end="195:56">pes_payload_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="197:9" pos:end="203:9"><if pos:start="197:9" pos:end="203:9">if <condition pos:start="197:12" pos:end="197:28">(<expr pos:start="197:13" pos:end="197:27"><operator pos:start="197:13" pos:end="197:13">!</operator><name pos:start="197:14" pos:end="197:27"><name pos:start="197:14" pos:end="197:18">ts_st</name><operator pos:start="197:19" pos:end="197:20">-&gt;</operator><name pos:start="197:21" pos:end="197:27">payload</name></name></expr>)</condition> <block pos:start="197:30" pos:end="203:9">{<block_content pos:start="199:13" pos:end="201:22">

            <expr_stmt pos:start="199:13" pos:end="199:34"><expr pos:start="199:13" pos:end="199:33"><name pos:start="199:13" pos:end="199:15">ret</name> <operator pos:start="199:17" pos:end="199:17">=</operator> <call pos:start="199:19" pos:end="199:33"><name pos:start="199:19" pos:end="199:25">AVERROR</name><argument_list pos:start="199:26" pos:end="199:33">(<argument pos:start="199:27" pos:end="199:32"><expr pos:start="199:27" pos:end="199:32"><name pos:start="199:27" pos:end="199:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="201:13" pos:end="201:22">goto <name pos:start="201:18" pos:end="201:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="207:9" pos:end="207:58"><expr pos:start="207:9" pos:end="207:57"><name pos:start="207:9" pos:end="207:15">program</name> <operator pos:start="207:17" pos:end="207:17">=</operator> <call pos:start="207:19" pos:end="207:57"><name pos:start="207:19" pos:end="207:45">av_find_program_from_stream</name><argument_list pos:start="207:46" pos:end="207:57">(<argument pos:start="207:47" pos:end="207:47"><expr pos:start="207:47" pos:end="207:47"><name pos:start="207:47" pos:end="207:47">s</name></expr></argument>, <argument pos:start="207:50" pos:end="207:53"><expr pos:start="207:50" pos:end="207:53"><name pos:start="207:50" pos:end="207:53">NULL</name></expr></argument>, <argument pos:start="207:56" pos:end="207:56"><expr pos:start="207:56" pos:end="207:56"><name pos:start="207:56" pos:end="207:56">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="209:9" pos:end="223:9"><if pos:start="209:9" pos:end="223:9">if <condition pos:start="209:12" pos:end="209:20">(<expr pos:start="209:13" pos:end="209:19"><name pos:start="209:13" pos:end="209:19">program</name></expr>)</condition> <block pos:start="209:22" pos:end="223:9">{<block_content pos:start="211:13" pos:end="221:13">

            <for pos:start="211:13" pos:end="221:13">for <control pos:start="211:17" pos:end="211:49">(<init pos:start="211:18" pos:end="211:23"><expr pos:start="211:18" pos:end="211:22"><name pos:start="211:18" pos:end="211:18">j</name> <operator pos:start="211:20" pos:end="211:20">=</operator> <literal type="number" pos:start="211:22" pos:end="211:22">0</literal></expr>;</init> <condition pos:start="211:25" pos:end="211:44"><expr pos:start="211:25" pos:end="211:43"><name pos:start="211:25" pos:end="211:25">j</name> <operator pos:start="211:27" pos:end="211:27">&lt;</operator> <name pos:start="211:29" pos:end="211:43"><name pos:start="211:29" pos:end="211:30">ts</name><operator pos:start="211:31" pos:end="211:32">-&gt;</operator><name pos:start="211:33" pos:end="211:43">nb_services</name></name></expr>;</condition> <incr pos:start="211:46" pos:end="211:48"><expr pos:start="211:46" pos:end="211:48"><name pos:start="211:46" pos:end="211:46">j</name><operator pos:start="211:47" pos:end="211:48">++</operator></expr></incr>)</control> <block pos:start="211:51" pos:end="221:13">{<block_content pos:start="213:17" pos:end="219:17">

                <if_stmt pos:start="213:17" pos:end="219:17"><if pos:start="213:17" pos:end="219:17">if <condition pos:start="213:20" pos:end="213:56">(<expr pos:start="213:21" pos:end="213:55"><name pos:start="213:21" pos:end="213:35"><name pos:start="213:21" pos:end="213:22">ts</name><operator pos:start="213:23" pos:end="213:24">-&gt;</operator><name pos:start="213:25" pos:end="213:32">services</name><index pos:start="213:33" pos:end="213:35">[<expr pos:start="213:34" pos:end="213:34"><name pos:start="213:34" pos:end="213:34">j</name></expr>]</index></name><operator pos:start="213:36" pos:end="213:37">-&gt;</operator><name pos:start="213:38" pos:end="213:44">program</name> <operator pos:start="213:46" pos:end="213:47">==</operator> <name pos:start="213:49" pos:end="213:55">program</name></expr>)</condition> <block pos:start="213:58" pos:end="219:17">{<block_content pos:start="215:21" pos:end="217:26">

                    <expr_stmt pos:start="215:21" pos:end="215:46"><expr pos:start="215:21" pos:end="215:45"><name pos:start="215:21" pos:end="215:27">service</name> <operator pos:start="215:29" pos:end="215:29">=</operator> <name pos:start="215:31" pos:end="215:45"><name pos:start="215:31" pos:end="215:32">ts</name><operator pos:start="215:33" pos:end="215:34">-&gt;</operator><name pos:start="215:35" pos:end="215:42">services</name><index pos:start="215:43" pos:end="215:45">[<expr pos:start="215:44" pos:end="215:44"><name pos:start="215:44" pos:end="215:44">j</name></expr>]</index></name></expr>;</expr_stmt>

                    <break pos:start="217:21" pos:end="217:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="227:9" pos:end="227:33"><expr pos:start="227:9" pos:end="227:32"><name pos:start="227:9" pos:end="227:22"><name pos:start="227:9" pos:end="227:13">ts_st</name><operator pos:start="227:14" pos:end="227:15">-&gt;</operator><name pos:start="227:16" pos:end="227:22">service</name></name> <operator pos:start="227:24" pos:end="227:24">=</operator> <name pos:start="227:26" pos:end="227:32">service</name></expr>;</expr_stmt>

        <comment type="block" pos:start="229:9" pos:end="231:55">/* MPEG pid values &lt; 16 are reserved. Applications which set st-&gt;id in

         * this range are assigned a calculated pid. */</comment>

        <if_stmt pos:start="233:9" pos:end="251:9"><if pos:start="233:9" pos:end="237:9">if <condition pos:start="233:12" pos:end="233:24">(<expr pos:start="233:13" pos:end="233:23"><name pos:start="233:13" pos:end="233:18"><name pos:start="233:13" pos:end="233:14">st</name><operator pos:start="233:15" pos:end="233:16">-&gt;</operator><name pos:start="233:17" pos:end="233:18">id</name></name> <operator pos:start="233:20" pos:end="233:20">&lt;</operator> <literal type="number" pos:start="233:22" pos:end="233:23">16</literal></expr>)</condition> <block pos:start="233:26" pos:end="237:9">{<block_content pos:start="235:13" pos:end="235:43">

            <expr_stmt pos:start="235:13" pos:end="235:43"><expr pos:start="235:13" pos:end="235:42"><name pos:start="235:13" pos:end="235:22"><name pos:start="235:13" pos:end="235:17">ts_st</name><operator pos:start="235:18" pos:end="235:19">-&gt;</operator><name pos:start="235:20" pos:end="235:22">pid</name></name> <operator pos:start="235:24" pos:end="235:24">=</operator> <name pos:start="235:26" pos:end="235:38"><name pos:start="235:26" pos:end="235:27">ts</name><operator pos:start="235:28" pos:end="235:29">-&gt;</operator><name pos:start="235:30" pos:end="235:38">start_pid</name></name> <operator pos:start="235:40" pos:end="235:40">+</operator> <name pos:start="235:42" pos:end="235:42">i</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="237:11" pos:end="241:9">else if <condition pos:start="237:19" pos:end="237:35">(<expr pos:start="237:20" pos:end="237:34"><name pos:start="237:20" pos:end="237:25"><name pos:start="237:20" pos:end="237:21">st</name><operator pos:start="237:22" pos:end="237:23">-&gt;</operator><name pos:start="237:24" pos:end="237:25">id</name></name> <operator pos:start="237:27" pos:end="237:27">&lt;</operator> <literal type="number" pos:start="237:29" pos:end="237:34">0x1FFF</literal></expr>)</condition> <block pos:start="237:37" pos:end="241:9">{<block_content pos:start="239:13" pos:end="239:32">

            <expr_stmt pos:start="239:13" pos:end="239:32"><expr pos:start="239:13" pos:end="239:31"><name pos:start="239:13" pos:end="239:22"><name pos:start="239:13" pos:end="239:17">ts_st</name><operator pos:start="239:18" pos:end="239:19">-&gt;</operator><name pos:start="239:20" pos:end="239:22">pid</name></name> <operator pos:start="239:24" pos:end="239:24">=</operator> <name pos:start="239:26" pos:end="239:31"><name pos:start="239:26" pos:end="239:27">st</name><operator pos:start="239:28" pos:end="239:29">-&gt;</operator><name pos:start="239:30" pos:end="239:31">id</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="241:11" pos:end="251:9">else <block pos:start="241:16" pos:end="251:9">{<block_content pos:start="243:13" pos:end="249:22">

            <expr_stmt pos:start="243:13" pos:end="245:77"><expr pos:start="243:13" pos:end="245:76"><call pos:start="243:13" pos:end="245:76"><name pos:start="243:13" pos:end="243:18">av_log</name><argument_list pos:start="243:19" pos:end="245:76">(<argument pos:start="243:20" pos:end="243:20"><expr pos:start="243:20" pos:end="243:20"><name pos:start="243:20" pos:end="243:20">s</name></expr></argument>, <argument pos:start="243:23" pos:end="243:34"><expr pos:start="243:23" pos:end="243:34"><name pos:start="243:23" pos:end="243:34">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="245:20" pos:end="245:67"><expr pos:start="245:20" pos:end="245:67"><literal type="string" pos:start="245:20" pos:end="245:67">"Invalid stream id %d, must be less than 8191\n"</literal></expr></argument>, <argument pos:start="245:70" pos:end="245:75"><expr pos:start="245:70" pos:end="245:75"><name pos:start="245:70" pos:end="245:75"><name pos:start="245:70" pos:end="245:71">st</name><operator pos:start="245:72" pos:end="245:73">-&gt;</operator><name pos:start="245:74" pos:end="245:75">id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="247:13" pos:end="247:34"><expr pos:start="247:13" pos:end="247:33"><name pos:start="247:13" pos:end="247:15">ret</name> <operator pos:start="247:17" pos:end="247:17">=</operator> <call pos:start="247:19" pos:end="247:33"><name pos:start="247:19" pos:end="247:25">AVERROR</name><argument_list pos:start="247:26" pos:end="247:33">(<argument pos:start="247:27" pos:end="247:32"><expr pos:start="247:27" pos:end="247:32"><name pos:start="247:27" pos:end="247:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="249:13" pos:end="249:22">goto <name pos:start="249:18" pos:end="249:21">fail</name>;</goto>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="253:9" pos:end="261:9"><if pos:start="253:9" pos:end="261:9">if <condition pos:start="253:12" pos:end="253:43">(<expr pos:start="253:13" pos:end="253:42"><name pos:start="253:13" pos:end="253:22"><name pos:start="253:13" pos:end="253:17">ts_st</name><operator pos:start="253:18" pos:end="253:19">-&gt;</operator><name pos:start="253:20" pos:end="253:22">pid</name></name> <operator pos:start="253:24" pos:end="253:25">==</operator> <name pos:start="253:27" pos:end="253:42"><name pos:start="253:27" pos:end="253:33">service</name><operator pos:start="253:34" pos:end="253:35">-&gt;</operator><name pos:start="253:36" pos:end="253:38">pmt</name><operator pos:start="253:39" pos:end="253:39">.</operator><name pos:start="253:40" pos:end="253:42">pid</name></name></expr>)</condition> <block pos:start="253:45" pos:end="261:9">{<block_content pos:start="255:13" pos:end="259:22">

            <expr_stmt pos:start="255:13" pos:end="255:76"><expr pos:start="255:13" pos:end="255:75"><call pos:start="255:13" pos:end="255:75"><name pos:start="255:13" pos:end="255:18">av_log</name><argument_list pos:start="255:19" pos:end="255:75">(<argument pos:start="255:20" pos:end="255:20"><expr pos:start="255:20" pos:end="255:20"><name pos:start="255:20" pos:end="255:20">s</name></expr></argument>, <argument pos:start="255:23" pos:end="255:34"><expr pos:start="255:23" pos:end="255:34"><name pos:start="255:23" pos:end="255:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="255:37" pos:end="255:62"><expr pos:start="255:37" pos:end="255:62"><literal type="string" pos:start="255:37" pos:end="255:62">"Duplicate stream id %d\n"</literal></expr></argument>, <argument pos:start="255:65" pos:end="255:74"><expr pos:start="255:65" pos:end="255:74"><name pos:start="255:65" pos:end="255:74"><name pos:start="255:65" pos:end="255:69">ts_st</name><operator pos:start="255:70" pos:end="255:71">-&gt;</operator><name pos:start="255:72" pos:end="255:74">pid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="257:13" pos:end="257:34"><expr pos:start="257:13" pos:end="257:33"><name pos:start="257:13" pos:end="257:15">ret</name> <operator pos:start="257:17" pos:end="257:17">=</operator> <call pos:start="257:19" pos:end="257:33"><name pos:start="257:19" pos:end="257:25">AVERROR</name><argument_list pos:start="257:26" pos:end="257:33">(<argument pos:start="257:27" pos:end="257:32"><expr pos:start="257:27" pos:end="257:32"><name pos:start="257:27" pos:end="257:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="259:13" pos:end="259:22">goto <name pos:start="259:18" pos:end="259:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <for pos:start="263:9" pos:end="275:9">for <control pos:start="263:13" pos:end="263:31">(<init pos:start="263:14" pos:end="263:19"><expr pos:start="263:14" pos:end="263:18"><name pos:start="263:14" pos:end="263:14">j</name> <operator pos:start="263:16" pos:end="263:16">=</operator> <literal type="number" pos:start="263:18" pos:end="263:18">0</literal></expr>;</init> <condition pos:start="263:21" pos:end="263:26"><expr pos:start="263:21" pos:end="263:25"><name pos:start="263:21" pos:end="263:21">j</name> <operator pos:start="263:23" pos:end="263:23">&lt;</operator> <name pos:start="263:25" pos:end="263:25">i</name></expr>;</condition> <incr pos:start="263:28" pos:end="263:30"><expr pos:start="263:28" pos:end="263:30"><name pos:start="263:28" pos:end="263:28">j</name><operator pos:start="263:29" pos:end="263:30">++</operator></expr></incr>)</control> <block pos:start="263:33" pos:end="275:9">{<block_content pos:start="265:13" pos:end="273:13">

            <if_stmt pos:start="265:13" pos:end="273:13"><if pos:start="265:13" pos:end="273:13">if <condition pos:start="265:16" pos:end="265:38">(<expr pos:start="265:17" pos:end="265:37"><name pos:start="265:17" pos:end="265:23"><name pos:start="265:17" pos:end="265:20">pids</name><index pos:start="265:21" pos:end="265:23">[<expr pos:start="265:22" pos:end="265:22"><name pos:start="265:22" pos:end="265:22">j</name></expr>]</index></name> <operator pos:start="265:25" pos:end="265:26">==</operator> <name pos:start="265:28" pos:end="265:37"><name pos:start="265:28" pos:end="265:32">ts_st</name><operator pos:start="265:33" pos:end="265:34">-&gt;</operator><name pos:start="265:35" pos:end="265:37">pid</name></name></expr>)</condition> <block pos:start="265:40" pos:end="273:13">{<block_content pos:start="267:17" pos:end="271:26">

                <expr_stmt pos:start="267:17" pos:end="267:80"><expr pos:start="267:17" pos:end="267:79"><call pos:start="267:17" pos:end="267:79"><name pos:start="267:17" pos:end="267:22">av_log</name><argument_list pos:start="267:23" pos:end="267:79">(<argument pos:start="267:24" pos:end="267:24"><expr pos:start="267:24" pos:end="267:24"><name pos:start="267:24" pos:end="267:24">s</name></expr></argument>, <argument pos:start="267:27" pos:end="267:38"><expr pos:start="267:27" pos:end="267:38"><name pos:start="267:27" pos:end="267:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="267:41" pos:end="267:66"><expr pos:start="267:41" pos:end="267:66"><literal type="string" pos:start="267:41" pos:end="267:66">"Duplicate stream id %d\n"</literal></expr></argument>, <argument pos:start="267:69" pos:end="267:78"><expr pos:start="267:69" pos:end="267:78"><name pos:start="267:69" pos:end="267:78"><name pos:start="267:69" pos:end="267:73">ts_st</name><operator pos:start="267:74" pos:end="267:75">-&gt;</operator><name pos:start="267:76" pos:end="267:78">pid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="269:17" pos:end="269:38"><expr pos:start="269:17" pos:end="269:37"><name pos:start="269:17" pos:end="269:19">ret</name> <operator pos:start="269:21" pos:end="269:21">=</operator> <call pos:start="269:23" pos:end="269:37"><name pos:start="269:23" pos:end="269:29">AVERROR</name><argument_list pos:start="269:30" pos:end="269:37">(<argument pos:start="269:31" pos:end="269:36"><expr pos:start="269:31" pos:end="269:36"><name pos:start="269:31" pos:end="269:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="271:17" pos:end="271:26">goto <name pos:start="271:22" pos:end="271:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="277:9" pos:end="277:44"><expr pos:start="277:9" pos:end="277:43"><name pos:start="277:9" pos:end="277:15"><name pos:start="277:9" pos:end="277:12">pids</name><index pos:start="277:13" pos:end="277:15">[<expr pos:start="277:14" pos:end="277:14"><name pos:start="277:14" pos:end="277:14">i</name></expr>]</index></name>                <operator pos:start="277:32" pos:end="277:32">=</operator> <name pos:start="277:34" pos:end="277:43"><name pos:start="277:34" pos:end="277:38">ts_st</name><operator pos:start="277:39" pos:end="277:40">-&gt;</operator><name pos:start="277:41" pos:end="277:43">pid</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="279:9" pos:end="279:48"><expr pos:start="279:9" pos:end="279:47"><name pos:start="279:9" pos:end="279:26"><name pos:start="279:9" pos:end="279:13">ts_st</name><operator pos:start="279:14" pos:end="279:15">-&gt;</operator><name pos:start="279:16" pos:end="279:26">payload_pts</name></name>     <operator pos:start="279:32" pos:end="279:32">=</operator> <name pos:start="279:34" pos:end="279:47">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="281:9" pos:end="281:48"><expr pos:start="281:9" pos:end="281:47"><name pos:start="281:9" pos:end="281:26"><name pos:start="281:9" pos:end="281:13">ts_st</name><operator pos:start="281:14" pos:end="281:15">-&gt;</operator><name pos:start="281:16" pos:end="281:26">payload_dts</name></name>     <operator pos:start="281:32" pos:end="281:32">=</operator> <name pos:start="281:34" pos:end="281:47">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="283:9" pos:end="283:35"><expr pos:start="283:9" pos:end="283:34"><name pos:start="283:9" pos:end="283:30"><name pos:start="283:9" pos:end="283:13">ts_st</name><operator pos:start="283:14" pos:end="283:15">-&gt;</operator><name pos:start="283:16" pos:end="283:30">first_pts_check</name></name> <operator pos:start="283:32" pos:end="283:32">=</operator> <literal type="number" pos:start="283:34" pos:end="283:34">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="285:9" pos:end="285:36"><expr pos:start="285:9" pos:end="285:35"><name pos:start="285:9" pos:end="285:17"><name pos:start="285:9" pos:end="285:13">ts_st</name><operator pos:start="285:14" pos:end="285:15">-&gt;</operator><name pos:start="285:16" pos:end="285:17">cc</name></name>              <operator pos:start="285:32" pos:end="285:32">=</operator> <literal type="number" pos:start="285:34" pos:end="285:35">15</literal></expr>;</expr_stmt>


        <comment type="block" pos:start="288:9" pos:end="288:60">/* update PCR pid by using the first video stream */</comment>

        <if_stmt pos:start="290:9" pos:end="298:9"><if pos:start="290:9" pos:end="298:9">if <condition pos:start="290:12" pos:end="292:39">(<expr pos:start="290:13" pos:end="292:38"><name pos:start="290:13" pos:end="290:36"><name pos:start="290:13" pos:end="290:14">st</name><operator pos:start="290:15" pos:end="290:16">-&gt;</operator><name pos:start="290:17" pos:end="290:24">codecpar</name><operator pos:start="290:25" pos:end="290:26">-&gt;</operator><name pos:start="290:27" pos:end="290:36">codec_type</name></name> <operator pos:start="290:38" pos:end="290:39">==</operator> <name pos:start="290:41" pos:end="290:58">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="290:60" pos:end="290:61">&amp;&amp;</operator>

            <name pos:start="292:13" pos:end="292:28"><name pos:start="292:13" pos:end="292:19">service</name><operator pos:start="292:20" pos:end="292:21">-&gt;</operator><name pos:start="292:22" pos:end="292:28">pcr_pid</name></name> <operator pos:start="292:30" pos:end="292:31">==</operator> <literal type="number" pos:start="292:33" pos:end="292:38">0x1fff</literal></expr>)</condition> <block pos:start="292:41" pos:end="298:9">{<block_content pos:start="294:13" pos:end="296:34">

            <expr_stmt pos:start="294:13" pos:end="294:42"><expr pos:start="294:13" pos:end="294:41"><name pos:start="294:13" pos:end="294:28"><name pos:start="294:13" pos:end="294:19">service</name><operator pos:start="294:20" pos:end="294:21">-&gt;</operator><name pos:start="294:22" pos:end="294:28">pcr_pid</name></name> <operator pos:start="294:30" pos:end="294:30">=</operator> <name pos:start="294:32" pos:end="294:41"><name pos:start="294:32" pos:end="294:36">ts_st</name><operator pos:start="294:37" pos:end="294:38">-&gt;</operator><name pos:start="294:39" pos:end="294:41">pid</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="296:13" pos:end="296:34"><expr pos:start="296:13" pos:end="296:33"><name pos:start="296:13" pos:end="296:18">pcr_st</name>           <operator pos:start="296:30" pos:end="296:30">=</operator> <name pos:start="296:32" pos:end="296:33">st</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="300:9" pos:end="352:9"><if pos:start="300:9" pos:end="352:9">if <condition pos:start="300:12" pos:end="302:45">(<expr pos:start="300:13" pos:end="302:44"><name pos:start="300:13" pos:end="300:34"><name pos:start="300:13" pos:end="300:14">st</name><operator pos:start="300:15" pos:end="300:16">-&gt;</operator><name pos:start="300:17" pos:end="300:24">codecpar</name><operator pos:start="300:25" pos:end="300:26">-&gt;</operator><name pos:start="300:27" pos:end="300:34">codec_id</name></name> <operator pos:start="300:36" pos:end="300:37">==</operator> <name pos:start="300:39" pos:end="300:53">AV_CODEC_ID_AAC</name> <operator pos:start="300:55" pos:end="300:56">&amp;&amp;</operator>

            <name pos:start="302:13" pos:end="302:40"><name pos:start="302:13" pos:end="302:14">st</name><operator pos:start="302:15" pos:end="302:16">-&gt;</operator><name pos:start="302:17" pos:end="302:24">codecpar</name><operator pos:start="302:25" pos:end="302:26">-&gt;</operator><name pos:start="302:27" pos:end="302:40">extradata_size</name></name> <operator pos:start="302:42" pos:end="302:42">&gt;</operator> <literal type="number" pos:start="302:44" pos:end="302:44">0</literal></expr>)</condition> <block pos:start="302:47" pos:end="352:9">{<block_content pos:start="304:13" pos:end="350:26">

            <decl_stmt pos:start="304:13" pos:end="304:26"><decl pos:start="304:13" pos:end="304:25"><type pos:start="304:13" pos:end="304:22"><name pos:start="304:13" pos:end="304:20">AVStream</name> <modifier pos:start="304:22" pos:end="304:22">*</modifier></type><name pos:start="304:23" pos:end="304:25">ast</name></decl>;</decl_stmt>

            <expr_stmt pos:start="306:13" pos:end="306:51"><expr pos:start="306:13" pos:end="306:50"><name pos:start="306:13" pos:end="306:23"><name pos:start="306:13" pos:end="306:17">ts_st</name><operator pos:start="306:18" pos:end="306:19">-&gt;</operator><name pos:start="306:20" pos:end="306:23">amux</name></name> <operator pos:start="306:25" pos:end="306:25">=</operator> <call pos:start="306:27" pos:end="306:50"><name pos:start="306:27" pos:end="306:48">avformat_alloc_context</name><argument_list pos:start="306:49" pos:end="306:50">()</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="308:13" pos:end="314:13"><if pos:start="308:13" pos:end="314:13">if <condition pos:start="308:16" pos:end="308:29">(<expr pos:start="308:17" pos:end="308:28"><operator pos:start="308:17" pos:end="308:17">!</operator><name pos:start="308:18" pos:end="308:28"><name pos:start="308:18" pos:end="308:22">ts_st</name><operator pos:start="308:23" pos:end="308:24">-&gt;</operator><name pos:start="308:25" pos:end="308:28">amux</name></name></expr>)</condition> <block pos:start="308:31" pos:end="314:13">{<block_content pos:start="310:17" pos:end="312:26">

                <expr_stmt pos:start="310:17" pos:end="310:38"><expr pos:start="310:17" pos:end="310:37"><name pos:start="310:17" pos:end="310:19">ret</name> <operator pos:start="310:21" pos:end="310:21">=</operator> <call pos:start="310:23" pos:end="310:37"><name pos:start="310:23" pos:end="310:29">AVERROR</name><argument_list pos:start="310:30" pos:end="310:37">(<argument pos:start="310:31" pos:end="310:36"><expr pos:start="310:31" pos:end="310:36"><name pos:start="310:31" pos:end="310:36">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="312:17" pos:end="312:26">goto <name pos:start="312:22" pos:end="312:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="316:13" pos:end="320:44"><expr pos:start="316:13" pos:end="320:43"><name pos:start="316:13" pos:end="316:32"><name pos:start="316:13" pos:end="316:17">ts_st</name><operator pos:start="316:18" pos:end="316:19">-&gt;</operator><name pos:start="316:20" pos:end="316:23">amux</name><operator pos:start="316:24" pos:end="316:25">-&gt;</operator><name pos:start="316:26" pos:end="316:32">oformat</name></name> <operator pos:start="316:34" pos:end="316:34">=</operator>

                <call pos:start="318:17" pos:end="320:43"><name pos:start="318:17" pos:end="318:31">av_guess_format</name><argument_list pos:start="318:32" pos:end="320:43">(<argument pos:start="318:33" pos:end="318:84"><expr pos:start="318:33" pos:end="318:84"><ternary pos:start="318:33" pos:end="318:84"><condition pos:start="318:33" pos:end="318:68"><expr pos:start="318:33" pos:end="318:66"><operator pos:start="318:33" pos:end="318:33">(</operator><name pos:start="318:34" pos:end="318:42"><name pos:start="318:34" pos:end="318:35">ts</name><operator pos:start="318:36" pos:end="318:37">-&gt;</operator><name pos:start="318:38" pos:end="318:42">flags</name></name> <operator pos:start="318:44" pos:end="318:44">&amp;</operator> <name pos:start="318:46" pos:end="318:65">MPEGTS_FLAG_AAC_LATM</name><operator pos:start="318:66" pos:end="318:66">)</operator></expr> ?</condition><then pos:start="318:70" pos:end="318:75"> <expr pos:start="318:70" pos:end="318:75"><literal type="string" pos:start="318:70" pos:end="318:75">"latm"</literal></expr> </then><else pos:start="318:77" pos:end="318:84">: <expr pos:start="318:79" pos:end="318:84"><literal type="string" pos:start="318:79" pos:end="318:84">"adts"</literal></expr></else></ternary></expr></argument>,

                                <argument pos:start="320:33" pos:end="320:36"><expr pos:start="320:33" pos:end="320:36"><name pos:start="320:33" pos:end="320:36">NULL</name></expr></argument>, <argument pos:start="320:39" pos:end="320:42"><expr pos:start="320:39" pos:end="320:42"><name pos:start="320:39" pos:end="320:42">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="322:13" pos:end="328:13"><if pos:start="322:13" pos:end="328:13">if <condition pos:start="322:16" pos:end="322:38">(<expr pos:start="322:17" pos:end="322:37"><operator pos:start="322:17" pos:end="322:17">!</operator><name pos:start="322:18" pos:end="322:37"><name pos:start="322:18" pos:end="322:22">ts_st</name><operator pos:start="322:23" pos:end="322:24">-&gt;</operator><name pos:start="322:25" pos:end="322:28">amux</name><operator pos:start="322:29" pos:end="322:30">-&gt;</operator><name pos:start="322:31" pos:end="322:37">oformat</name></name></expr>)</condition> <block pos:start="322:40" pos:end="328:13">{<block_content pos:start="324:17" pos:end="326:26">

                <expr_stmt pos:start="324:17" pos:end="324:38"><expr pos:start="324:17" pos:end="324:37"><name pos:start="324:17" pos:end="324:19">ret</name> <operator pos:start="324:21" pos:end="324:21">=</operator> <call pos:start="324:23" pos:end="324:37"><name pos:start="324:23" pos:end="324:29">AVERROR</name><argument_list pos:start="324:30" pos:end="324:37">(<argument pos:start="324:31" pos:end="324:36"><expr pos:start="324:31" pos:end="324:36"><name pos:start="324:31" pos:end="324:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="326:17" pos:end="326:26">goto <name pos:start="326:22" pos:end="326:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="330:13" pos:end="336:13"><if pos:start="330:13" pos:end="336:13">if <condition pos:start="330:16" pos:end="330:64">(<expr pos:start="330:17" pos:end="330:63"><operator pos:start="330:17" pos:end="330:17">!</operator><operator pos:start="330:18" pos:end="330:18">(</operator><name pos:start="330:19" pos:end="330:21">ast</name> <operator pos:start="330:23" pos:end="330:23">=</operator> <call pos:start="330:25" pos:end="330:62"><name pos:start="330:25" pos:end="330:43">avformat_new_stream</name><argument_list pos:start="330:44" pos:end="330:62">(<argument pos:start="330:45" pos:end="330:55"><expr pos:start="330:45" pos:end="330:55"><name pos:start="330:45" pos:end="330:55"><name pos:start="330:45" pos:end="330:49">ts_st</name><operator pos:start="330:50" pos:end="330:51">-&gt;</operator><name pos:start="330:52" pos:end="330:55">amux</name></name></expr></argument>, <argument pos:start="330:58" pos:end="330:61"><expr pos:start="330:58" pos:end="330:61"><name pos:start="330:58" pos:end="330:61">NULL</name></expr></argument>)</argument_list></call><operator pos:start="330:63" pos:end="330:63">)</operator></expr>)</condition> <block pos:start="330:66" pos:end="336:13">{<block_content pos:start="332:17" pos:end="334:26">

                <expr_stmt pos:start="332:17" pos:end="332:38"><expr pos:start="332:17" pos:end="332:37"><name pos:start="332:17" pos:end="332:19">ret</name> <operator pos:start="332:21" pos:end="332:21">=</operator> <call pos:start="332:23" pos:end="332:37"><name pos:start="332:23" pos:end="332:29">AVERROR</name><argument_list pos:start="332:30" pos:end="332:37">(<argument pos:start="332:31" pos:end="332:36"><expr pos:start="332:31" pos:end="332:36"><name pos:start="332:31" pos:end="332:36">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="334:17" pos:end="334:26">goto <name pos:start="334:22" pos:end="334:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="338:13" pos:end="338:71"><expr pos:start="338:13" pos:end="338:70"><name pos:start="338:13" pos:end="338:15">ret</name> <operator pos:start="338:17" pos:end="338:17">=</operator> <call pos:start="338:19" pos:end="338:70"><name pos:start="338:19" pos:end="338:41">avcodec_parameters_copy</name><argument_list pos:start="338:42" pos:end="338:70">(<argument pos:start="338:43" pos:end="338:55"><expr pos:start="338:43" pos:end="338:55"><name pos:start="338:43" pos:end="338:55"><name pos:start="338:43" pos:end="338:45">ast</name><operator pos:start="338:46" pos:end="338:47">-&gt;</operator><name pos:start="338:48" pos:end="338:55">codecpar</name></name></expr></argument>, <argument pos:start="338:58" pos:end="338:69"><expr pos:start="338:58" pos:end="338:69"><name pos:start="338:58" pos:end="338:69"><name pos:start="338:58" pos:end="338:59">st</name><operator pos:start="338:60" pos:end="338:61">-&gt;</operator><name pos:start="338:62" pos:end="338:69">codecpar</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="340:13" pos:end="342:26"><if pos:start="340:13" pos:end="342:26">if <condition pos:start="340:16" pos:end="340:25">(<expr pos:start="340:17" pos:end="340:24"><name pos:start="340:17" pos:end="340:19">ret</name> <operator pos:start="340:21" pos:end="340:22">!=</operator> <literal type="number" pos:start="340:24" pos:end="340:24">0</literal></expr>)</condition><block type="pseudo" pos:start="342:17" pos:end="342:26"><block_content pos:start="342:17" pos:end="342:26">

                <goto pos:start="342:17" pos:end="342:26">goto <name pos:start="342:22" pos:end="342:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="344:13" pos:end="344:43"><expr pos:start="344:13" pos:end="344:42"><name pos:start="344:13" pos:end="344:26"><name pos:start="344:13" pos:end="344:15">ast</name><operator pos:start="344:16" pos:end="344:17">-&gt;</operator><name pos:start="344:18" pos:end="344:26">time_base</name></name> <operator pos:start="344:28" pos:end="344:28">=</operator> <name pos:start="344:30" pos:end="344:42"><name pos:start="344:30" pos:end="344:31">st</name><operator pos:start="344:32" pos:end="344:33">-&gt;</operator><name pos:start="344:34" pos:end="344:42">time_base</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="346:13" pos:end="346:59"><expr pos:start="346:13" pos:end="346:58"><name pos:start="346:13" pos:end="346:15">ret</name> <operator pos:start="346:17" pos:end="346:17">=</operator> <call pos:start="346:19" pos:end="346:58"><name pos:start="346:19" pos:end="346:39">avformat_write_header</name><argument_list pos:start="346:40" pos:end="346:58">(<argument pos:start="346:41" pos:end="346:51"><expr pos:start="346:41" pos:end="346:51"><name pos:start="346:41" pos:end="346:51"><name pos:start="346:41" pos:end="346:45">ts_st</name><operator pos:start="346:46" pos:end="346:47">-&gt;</operator><name pos:start="346:48" pos:end="346:51">amux</name></name></expr></argument>, <argument pos:start="346:54" pos:end="346:57"><expr pos:start="346:54" pos:end="346:57"><name pos:start="346:54" pos:end="346:57">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="348:13" pos:end="350:26"><if pos:start="348:13" pos:end="350:26">if <condition pos:start="348:16" pos:end="348:24">(<expr pos:start="348:17" pos:end="348:23"><name pos:start="348:17" pos:end="348:19">ret</name> <operator pos:start="348:21" pos:end="348:21">&lt;</operator> <literal type="number" pos:start="348:23" pos:end="348:23">0</literal></expr>)</condition><block type="pseudo" pos:start="350:17" pos:end="350:26"><block_content pos:start="350:17" pos:end="350:26">

                <goto pos:start="350:17" pos:end="350:26">goto <name pos:start="350:22" pos:end="350:25">fail</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="354:9" pos:end="358:9"><if pos:start="354:9" pos:end="358:9">if <condition pos:start="354:12" pos:end="354:55">(<expr pos:start="354:13" pos:end="354:54"><name pos:start="354:13" pos:end="354:34"><name pos:start="354:13" pos:end="354:14">st</name><operator pos:start="354:15" pos:end="354:16">-&gt;</operator><name pos:start="354:17" pos:end="354:24">codecpar</name><operator pos:start="354:25" pos:end="354:26">-&gt;</operator><name pos:start="354:27" pos:end="354:34">codec_id</name></name> <operator pos:start="354:36" pos:end="354:37">==</operator> <name pos:start="354:39" pos:end="354:54">AV_CODEC_ID_OPUS</name></expr>)</condition> <block pos:start="354:57" pos:end="358:9">{<block_content pos:start="356:13" pos:end="356:111">

            <expr_stmt pos:start="356:13" pos:end="356:111"><expr pos:start="356:13" pos:end="356:110"><name pos:start="356:13" pos:end="356:42"><name pos:start="356:13" pos:end="356:17">ts_st</name><operator pos:start="356:18" pos:end="356:19">-&gt;</operator><name pos:start="356:20" pos:end="356:42">opus_pending_trim_start</name></name> <operator pos:start="356:44" pos:end="356:44">=</operator> <name pos:start="356:46" pos:end="356:74"><name pos:start="356:46" pos:end="356:47">st</name><operator pos:start="356:48" pos:end="356:49">-&gt;</operator><name pos:start="356:50" pos:end="356:57">codecpar</name><operator pos:start="356:58" pos:end="356:59">-&gt;</operator><name pos:start="356:60" pos:end="356:74">initial_padding</name></name> <operator pos:start="356:76" pos:end="356:76">*</operator> <literal type="number" pos:start="356:78" pos:end="356:82">48000</literal> <operator pos:start="356:84" pos:end="356:84">/</operator> <name pos:start="356:86" pos:end="356:110"><name pos:start="356:86" pos:end="356:87">st</name><operator pos:start="356:88" pos:end="356:89">-&gt;</operator><name pos:start="356:90" pos:end="356:97">codecpar</name><operator pos:start="356:98" pos:end="356:99">-&gt;</operator><name pos:start="356:100" pos:end="356:110">sample_rate</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="364:5" pos:end="364:20"><expr pos:start="364:5" pos:end="364:19"><call pos:start="364:5" pos:end="364:19"><name pos:start="364:5" pos:end="364:12">av_freep</name><argument_list pos:start="364:13" pos:end="364:19">(<argument pos:start="364:14" pos:end="364:18"><expr pos:start="364:14" pos:end="364:18"><operator pos:start="364:14" pos:end="364:14">&amp;</operator><name pos:start="364:15" pos:end="364:18">pids</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="368:5" pos:end="368:57">/* if no video stream, use the first stream as PCR */</comment>

    <if_stmt pos:start="370:5" pos:end="380:34"><if pos:start="370:5" pos:end="378:5">if <condition pos:start="370:8" pos:end="370:56">(<expr pos:start="370:9" pos:end="370:55"><name pos:start="370:9" pos:end="370:24"><name pos:start="370:9" pos:end="370:15">service</name><operator pos:start="370:16" pos:end="370:17">-&gt;</operator><name pos:start="370:18" pos:end="370:24">pcr_pid</name></name> <operator pos:start="370:26" pos:end="370:27">==</operator> <literal type="number" pos:start="370:29" pos:end="370:34">0x1fff</literal> <operator pos:start="370:36" pos:end="370:37">&amp;&amp;</operator> <name pos:start="370:39" pos:end="370:51"><name pos:start="370:39" pos:end="370:39">s</name><operator pos:start="370:40" pos:end="370:41">-&gt;</operator><name pos:start="370:42" pos:end="370:51">nb_streams</name></name> <operator pos:start="370:53" pos:end="370:53">&gt;</operator> <literal type="number" pos:start="370:55" pos:end="370:55">0</literal></expr>)</condition> <block pos:start="370:58" pos:end="378:5">{<block_content pos:start="372:9" pos:end="376:38">

        <expr_stmt pos:start="372:9" pos:end="372:41"><expr pos:start="372:9" pos:end="372:40"><name pos:start="372:9" pos:end="372:14">pcr_st</name>           <operator pos:start="372:26" pos:end="372:26">=</operator> <name pos:start="372:28" pos:end="372:40"><name pos:start="372:28" pos:end="372:28">s</name><operator pos:start="372:29" pos:end="372:30">-&gt;</operator><name pos:start="372:31" pos:end="372:37">streams</name><index pos:start="372:38" pos:end="372:40">[<expr pos:start="372:39" pos:end="372:39"><literal type="number" pos:start="372:39" pos:end="372:39">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="374:9" pos:end="374:45"><expr pos:start="374:9" pos:end="374:44"><name pos:start="374:9" pos:end="374:13">ts_st</name>            <operator pos:start="374:26" pos:end="374:26">=</operator> <name pos:start="374:28" pos:end="374:44"><name pos:start="374:28" pos:end="374:33">pcr_st</name><operator pos:start="374:34" pos:end="374:35">-&gt;</operator><name pos:start="374:36" pos:end="374:44">priv_data</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="376:9" pos:end="376:38"><expr pos:start="376:9" pos:end="376:37"><name pos:start="376:9" pos:end="376:24"><name pos:start="376:9" pos:end="376:15">service</name><operator pos:start="376:16" pos:end="376:17">-&gt;</operator><name pos:start="376:18" pos:end="376:24">pcr_pid</name></name> <operator pos:start="376:26" pos:end="376:26">=</operator> <name pos:start="376:28" pos:end="376:37"><name pos:start="376:28" pos:end="376:32">ts_st</name><operator pos:start="376:33" pos:end="376:34">-&gt;</operator><name pos:start="376:35" pos:end="376:37">pid</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="378:7" pos:end="380:34">else<block type="pseudo" pos:start="380:9" pos:end="380:34"><block_content pos:start="380:9" pos:end="380:34">

        <expr_stmt pos:start="380:9" pos:end="380:34"><expr pos:start="380:9" pos:end="380:33"><name pos:start="380:9" pos:end="380:13">ts_st</name> <operator pos:start="380:15" pos:end="380:15">=</operator> <name pos:start="380:17" pos:end="380:33"><name pos:start="380:17" pos:end="380:22">pcr_st</name><operator pos:start="380:23" pos:end="380:24">-&gt;</operator><name pos:start="380:25" pos:end="380:33">priv_data</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="384:5" pos:end="448:5"><if pos:start="384:5" pos:end="404:5">if <condition pos:start="384:8" pos:end="384:25">(<expr pos:start="384:9" pos:end="384:24"><name pos:start="384:9" pos:end="384:20"><name pos:start="384:9" pos:end="384:10">ts</name><operator pos:start="384:11" pos:end="384:12">-&gt;</operator><name pos:start="384:13" pos:end="384:20">mux_rate</name></name> <operator pos:start="384:22" pos:end="384:22">&gt;</operator> <literal type="number" pos:start="384:24" pos:end="384:24">1</literal></expr>)</condition> <block pos:start="384:27" pos:end="404:5">{<block_content pos:start="386:9" pos:end="402:82">

        <expr_stmt pos:start="386:9" pos:end="388:65"><expr pos:start="386:9" pos:end="388:64"><name pos:start="386:9" pos:end="386:34"><name pos:start="386:9" pos:end="386:15">service</name><operator pos:start="386:16" pos:end="386:17">-&gt;</operator><name pos:start="386:18" pos:end="386:34">pcr_packet_period</name></name> <operator pos:start="386:36" pos:end="386:36">=</operator> <operator pos:start="386:38" pos:end="386:38">(</operator><name pos:start="386:39" pos:end="386:45">int64_t</name><operator pos:start="386:46" pos:end="386:46">)</operator><name pos:start="386:47" pos:end="386:58"><name pos:start="386:47" pos:end="386:48">ts</name><operator pos:start="386:49" pos:end="386:50">-&gt;</operator><name pos:start="386:51" pos:end="386:58">mux_rate</name></name> <operator pos:start="386:60" pos:end="386:60">*</operator> <name pos:start="386:62" pos:end="386:75"><name pos:start="386:62" pos:end="386:63">ts</name><operator pos:start="386:64" pos:end="386:65">-&gt;</operator><name pos:start="386:66" pos:end="386:75">pcr_period</name></name> <operator pos:start="386:77" pos:end="386:77">/</operator>

                                     <operator pos:start="388:38" pos:end="388:38">(</operator><name pos:start="388:39" pos:end="388:52">TS_PACKET_SIZE</name> <operator pos:start="388:54" pos:end="388:54">*</operator> <literal type="number" pos:start="388:56" pos:end="388:56">8</literal> <operator pos:start="388:58" pos:end="388:58">*</operator> <literal type="number" pos:start="388:60" pos:end="388:63">1000</literal><operator pos:start="388:64" pos:end="388:64">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="390:9" pos:end="392:65"><expr pos:start="390:9" pos:end="392:64"><name pos:start="390:9" pos:end="390:29"><name pos:start="390:9" pos:end="390:10">ts</name><operator pos:start="390:11" pos:end="390:12">-&gt;</operator><name pos:start="390:13" pos:end="390:29">sdt_packet_period</name></name>      <operator pos:start="390:36" pos:end="390:36">=</operator> <operator pos:start="390:38" pos:end="390:38">(</operator><name pos:start="390:39" pos:end="390:45">int64_t</name><operator pos:start="390:46" pos:end="390:46">)</operator><name pos:start="390:47" pos:end="390:58"><name pos:start="390:47" pos:end="390:48">ts</name><operator pos:start="390:49" pos:end="390:50">-&gt;</operator><name pos:start="390:51" pos:end="390:58">mux_rate</name></name> <operator pos:start="390:60" pos:end="390:60">*</operator> <name pos:start="390:62" pos:end="390:77">SDT_RETRANS_TIME</name> <operator pos:start="390:79" pos:end="390:79">/</operator>

                                     <operator pos:start="392:38" pos:end="392:38">(</operator><name pos:start="392:39" pos:end="392:52">TS_PACKET_SIZE</name> <operator pos:start="392:54" pos:end="392:54">*</operator> <literal type="number" pos:start="392:56" pos:end="392:56">8</literal> <operator pos:start="392:58" pos:end="392:58">*</operator> <literal type="number" pos:start="392:60" pos:end="392:63">1000</literal><operator pos:start="392:64" pos:end="392:64">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="394:9" pos:end="396:65"><expr pos:start="394:9" pos:end="396:64"><name pos:start="394:9" pos:end="394:29"><name pos:start="394:9" pos:end="394:10">ts</name><operator pos:start="394:11" pos:end="394:12">-&gt;</operator><name pos:start="394:13" pos:end="394:29">pat_packet_period</name></name>      <operator pos:start="394:36" pos:end="394:36">=</operator> <operator pos:start="394:38" pos:end="394:38">(</operator><name pos:start="394:39" pos:end="394:45">int64_t</name><operator pos:start="394:46" pos:end="394:46">)</operator><name pos:start="394:47" pos:end="394:58"><name pos:start="394:47" pos:end="394:48">ts</name><operator pos:start="394:49" pos:end="394:50">-&gt;</operator><name pos:start="394:51" pos:end="394:58">mux_rate</name></name> <operator pos:start="394:60" pos:end="394:60">*</operator> <name pos:start="394:62" pos:end="394:77">PAT_RETRANS_TIME</name> <operator pos:start="394:79" pos:end="394:79">/</operator>

                                     <operator pos:start="396:38" pos:end="396:38">(</operator><name pos:start="396:39" pos:end="396:52">TS_PACKET_SIZE</name> <operator pos:start="396:54" pos:end="396:54">*</operator> <literal type="number" pos:start="396:56" pos:end="396:56">8</literal> <operator pos:start="396:58" pos:end="396:58">*</operator> <literal type="number" pos:start="396:60" pos:end="396:63">1000</literal><operator pos:start="396:64" pos:end="396:64">)</operator></expr>;</expr_stmt>



        <if_stmt pos:start="400:9" pos:end="402:82"><if pos:start="400:9" pos:end="402:82">if <condition pos:start="400:12" pos:end="400:27">(<expr pos:start="400:13" pos:end="400:26"><name pos:start="400:13" pos:end="400:22"><name pos:start="400:13" pos:end="400:14">ts</name><operator pos:start="400:15" pos:end="400:16">-&gt;</operator><name pos:start="400:17" pos:end="400:22">copyts</name></name> <operator pos:start="400:24" pos:end="400:24">&lt;</operator> <literal type="number" pos:start="400:26" pos:end="400:26">1</literal></expr>)</condition><block type="pseudo" pos:start="402:13" pos:end="402:82"><block_content pos:start="402:13" pos:end="402:82">

            <expr_stmt pos:start="402:13" pos:end="402:82"><expr pos:start="402:13" pos:end="402:81"><name pos:start="402:13" pos:end="402:25"><name pos:start="402:13" pos:end="402:14">ts</name><operator pos:start="402:15" pos:end="402:16">-&gt;</operator><name pos:start="402:17" pos:end="402:25">first_pcr</name></name> <operator pos:start="402:27" pos:end="402:27">=</operator> <call pos:start="402:29" pos:end="402:81"><name pos:start="402:29" pos:end="402:38">av_rescale</name><argument_list pos:start="402:39" pos:end="402:81">(<argument pos:start="402:40" pos:end="402:51"><expr pos:start="402:40" pos:end="402:51"><name pos:start="402:40" pos:end="402:51"><name pos:start="402:40" pos:end="402:40">s</name><operator pos:start="402:41" pos:end="402:42">-&gt;</operator><name pos:start="402:43" pos:end="402:51">max_delay</name></name></expr></argument>, <argument pos:start="402:54" pos:end="402:66"><expr pos:start="402:54" pos:end="402:66"><name pos:start="402:54" pos:end="402:66">PCR_TIME_BASE</name></expr></argument>, <argument pos:start="402:69" pos:end="402:80"><expr pos:start="402:69" pos:end="402:80"><name pos:start="402:69" pos:end="402:80">AV_TIME_BASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="404:7" pos:end="448:5">else <block pos:start="404:12" pos:end="448:5">{<block_content pos:start="408:9" pos:end="446:43">

        <comment type="block" pos:start="406:9" pos:end="406:80">/* Arbitrary values, PAT/PMT will also be written on video key frames */</comment>

        <expr_stmt pos:start="408:9" pos:end="408:36"><expr pos:start="408:9" pos:end="408:35"><name pos:start="408:9" pos:end="408:29"><name pos:start="408:9" pos:end="408:10">ts</name><operator pos:start="408:11" pos:end="408:12">-&gt;</operator><name pos:start="408:13" pos:end="408:29">sdt_packet_period</name></name> <operator pos:start="408:31" pos:end="408:31">=</operator> <literal type="number" pos:start="408:33" pos:end="408:35">200</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="410:9" pos:end="410:35"><expr pos:start="410:9" pos:end="410:34"><name pos:start="410:9" pos:end="410:29"><name pos:start="410:9" pos:end="410:10">ts</name><operator pos:start="410:11" pos:end="410:12">-&gt;</operator><name pos:start="410:13" pos:end="410:29">pat_packet_period</name></name> <operator pos:start="410:31" pos:end="410:31">=</operator> <literal type="number" pos:start="410:33" pos:end="410:34">40</literal></expr>;</expr_stmt>

        <if_stmt pos:start="412:9" pos:end="442:9"><if pos:start="412:9" pos:end="432:9">if <condition pos:start="412:12" pos:end="412:63">(<expr pos:start="412:13" pos:end="412:62"><name pos:start="412:13" pos:end="412:40"><name pos:start="412:13" pos:end="412:18">pcr_st</name><operator pos:start="412:19" pos:end="412:20">-&gt;</operator><name pos:start="412:21" pos:end="412:28">codecpar</name><operator pos:start="412:29" pos:end="412:30">-&gt;</operator><name pos:start="412:31" pos:end="412:40">codec_type</name></name> <operator pos:start="412:42" pos:end="412:43">==</operator> <name pos:start="412:45" pos:end="412:62">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="412:65" pos:end="432:9">{<block_content pos:start="414:13" pos:end="430:13">

            <decl_stmt pos:start="414:13" pos:end="414:79"><decl pos:start="414:13" pos:end="414:78"><type pos:start="414:13" pos:end="414:15"><name pos:start="414:13" pos:end="414:15">int</name></type> <name pos:start="414:17" pos:end="414:26">frame_size</name> <init pos:start="414:28" pos:end="414:78">= <expr pos:start="414:30" pos:end="414:78"><call pos:start="414:30" pos:end="414:78"><name pos:start="414:30" pos:end="414:57">av_get_audio_frame_duration2</name><argument_list pos:start="414:58" pos:end="414:78">(<argument pos:start="414:59" pos:end="414:74"><expr pos:start="414:59" pos:end="414:74"><name pos:start="414:59" pos:end="414:74"><name pos:start="414:59" pos:end="414:64">pcr_st</name><operator pos:start="414:65" pos:end="414:66">-&gt;</operator><name pos:start="414:67" pos:end="414:74">codecpar</name></name></expr></argument>, <argument pos:start="414:77" pos:end="414:77"><expr pos:start="414:77" pos:end="414:77"><literal type="number" pos:start="414:77" pos:end="414:77">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="416:13" pos:end="430:13"><if pos:start="416:13" pos:end="424:13">if <condition pos:start="416:16" pos:end="416:28">(<expr pos:start="416:17" pos:end="416:27"><operator pos:start="416:17" pos:end="416:17">!</operator><name pos:start="416:18" pos:end="416:27">frame_size</name></expr>)</condition> <block pos:start="416:30" pos:end="424:13">{<block_content pos:start="418:17" pos:end="422:63">

                <expr_stmt pos:start="418:17" pos:end="418:66"><expr pos:start="418:17" pos:end="418:65"><call pos:start="418:17" pos:end="418:65"><name pos:start="418:17" pos:end="418:22">av_log</name><argument_list pos:start="418:23" pos:end="418:65">(<argument pos:start="418:24" pos:end="418:24"><expr pos:start="418:24" pos:end="418:24"><name pos:start="418:24" pos:end="418:24">s</name></expr></argument>, <argument pos:start="418:27" pos:end="418:40"><expr pos:start="418:27" pos:end="418:40"><name pos:start="418:27" pos:end="418:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="418:43" pos:end="418:64"><expr pos:start="418:43" pos:end="418:64"><literal type="string" pos:start="418:43" pos:end="418:64">"frame size not set\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="420:17" pos:end="422:63"><expr pos:start="420:17" pos:end="422:62"><name pos:start="420:17" pos:end="420:42"><name pos:start="420:17" pos:end="420:23">service</name><operator pos:start="420:24" pos:end="420:25">-&gt;</operator><name pos:start="420:26" pos:end="420:42">pcr_packet_period</name></name> <operator pos:start="420:44" pos:end="420:44">=</operator>

                    <name pos:start="422:21" pos:end="422:49"><name pos:start="422:21" pos:end="422:26">pcr_st</name><operator pos:start="422:27" pos:end="422:28">-&gt;</operator><name pos:start="422:29" pos:end="422:36">codecpar</name><operator pos:start="422:37" pos:end="422:38">-&gt;</operator><name pos:start="422:39" pos:end="422:49">sample_rate</name></name> <operator pos:start="422:51" pos:end="422:51">/</operator> <operator pos:start="422:53" pos:end="422:53">(</operator><literal type="number" pos:start="422:54" pos:end="422:55">10</literal> <operator pos:start="422:57" pos:end="422:57">*</operator> <literal type="number" pos:start="422:59" pos:end="422:61">512</literal><operator pos:start="422:62" pos:end="422:62">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="424:15" pos:end="430:13">else <block pos:start="424:20" pos:end="430:13">{<block_content pos:start="426:17" pos:end="428:70">

                <expr_stmt pos:start="426:17" pos:end="428:70"><expr pos:start="426:17" pos:end="428:69"><name pos:start="426:17" pos:end="426:42"><name pos:start="426:17" pos:end="426:23">service</name><operator pos:start="426:24" pos:end="426:25">-&gt;</operator><name pos:start="426:26" pos:end="426:42">pcr_packet_period</name></name> <operator pos:start="426:44" pos:end="426:44">=</operator>

                    <name pos:start="428:21" pos:end="428:49"><name pos:start="428:21" pos:end="428:26">pcr_st</name><operator pos:start="428:27" pos:end="428:28">-&gt;</operator><name pos:start="428:29" pos:end="428:36">codecpar</name><operator pos:start="428:37" pos:end="428:38">-&gt;</operator><name pos:start="428:39" pos:end="428:49">sample_rate</name></name> <operator pos:start="428:51" pos:end="428:51">/</operator> <operator pos:start="428:53" pos:end="428:53">(</operator><literal type="number" pos:start="428:54" pos:end="428:55">10</literal> <operator pos:start="428:57" pos:end="428:57">*</operator> <name pos:start="428:59" pos:end="428:68">frame_size</name><operator pos:start="428:69" pos:end="428:69">)</operator></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="432:11" pos:end="442:9">else <block pos:start="432:16" pos:end="442:9">{<block_content pos:start="438:13" pos:end="440:63">

            <comment type="line" pos:start="434:13" pos:end="434:33">// max delta PCR 0.1s</comment>

            <comment type="line" pos:start="436:13" pos:end="436:45">// TODO: should be avg_frame_rate</comment>

            <expr_stmt pos:start="438:13" pos:end="440:63"><expr pos:start="438:13" pos:end="440:62"><name pos:start="438:13" pos:end="438:38"><name pos:start="438:13" pos:end="438:19">service</name><operator pos:start="438:20" pos:end="438:21">-&gt;</operator><name pos:start="438:22" pos:end="438:38">pcr_packet_period</name></name> <operator pos:start="438:40" pos:end="438:40">=</operator>

                <name pos:start="440:17" pos:end="440:34"><name pos:start="440:17" pos:end="440:21">ts_st</name><operator pos:start="440:22" pos:end="440:23">-&gt;</operator><name pos:start="440:24" pos:end="440:30">user_tb</name><operator pos:start="440:31" pos:end="440:31">.</operator><name pos:start="440:32" pos:end="440:34">den</name></name> <operator pos:start="440:36" pos:end="440:36">/</operator> <operator pos:start="440:38" pos:end="440:38">(</operator><literal type="number" pos:start="440:39" pos:end="440:40">10</literal> <operator pos:start="440:42" pos:end="440:42">*</operator> <name pos:start="440:44" pos:end="440:61"><name pos:start="440:44" pos:end="440:48">ts_st</name><operator pos:start="440:49" pos:end="440:50">-&gt;</operator><name pos:start="440:51" pos:end="440:57">user_tb</name><operator pos:start="440:58" pos:end="440:58">.</operator><name pos:start="440:59" pos:end="440:61">num</name></name><operator pos:start="440:62" pos:end="440:62">)</operator></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="444:9" pos:end="446:43"><if pos:start="444:9" pos:end="446:43">if <condition pos:start="444:12" pos:end="444:40">(<expr pos:start="444:13" pos:end="444:39"><operator pos:start="444:13" pos:end="444:13">!</operator><name pos:start="444:14" pos:end="444:39"><name pos:start="444:14" pos:end="444:20">service</name><operator pos:start="444:21" pos:end="444:22">-&gt;</operator><name pos:start="444:23" pos:end="444:39">pcr_packet_period</name></name></expr>)</condition><block type="pseudo" pos:start="446:13" pos:end="446:43"><block_content pos:start="446:13" pos:end="446:43">

            <expr_stmt pos:start="446:13" pos:end="446:43"><expr pos:start="446:13" pos:end="446:42"><name pos:start="446:13" pos:end="446:38"><name pos:start="446:13" pos:end="446:19">service</name><operator pos:start="446:20" pos:end="446:21">-&gt;</operator><name pos:start="446:22" pos:end="446:38">pcr_packet_period</name></name> <operator pos:start="446:40" pos:end="446:40">=</operator> <literal type="number" pos:start="446:42" pos:end="446:42">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="452:5" pos:end="452:37"><expr pos:start="452:5" pos:end="452:36"><name pos:start="452:5" pos:end="452:19"><name pos:start="452:5" pos:end="452:6">ts</name><operator pos:start="452:7" pos:end="452:8">-&gt;</operator><name pos:start="452:9" pos:end="452:19">last_pat_ts</name></name> <operator pos:start="452:21" pos:end="452:21">=</operator> <name pos:start="452:23" pos:end="452:36">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="454:5" pos:end="454:37"><expr pos:start="454:5" pos:end="454:36"><name pos:start="454:5" pos:end="454:19"><name pos:start="454:5" pos:end="454:6">ts</name><operator pos:start="454:7" pos:end="454:8">-&gt;</operator><name pos:start="454:9" pos:end="454:19">last_sdt_ts</name></name> <operator pos:start="454:21" pos:end="454:21">=</operator> <name pos:start="454:23" pos:end="454:36">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

    <comment type="line" pos:start="456:5" pos:end="456:47">// The user specified a period, use only it</comment>

    <if_stmt pos:start="458:5" pos:end="462:5"><if pos:start="458:5" pos:end="462:5">if <condition pos:start="458:8" pos:end="458:35">(<expr pos:start="458:9" pos:end="458:34"><name pos:start="458:9" pos:end="458:22"><name pos:start="458:9" pos:end="458:10">ts</name><operator pos:start="458:11" pos:end="458:12">-&gt;</operator><name pos:start="458:13" pos:end="458:22">pat_period</name></name> <operator pos:start="458:24" pos:end="458:24">&lt;</operator> <name pos:start="458:26" pos:end="458:32">INT_MAX</name><operator pos:start="458:33" pos:end="458:33">/</operator><literal type="number" pos:start="458:34" pos:end="458:34">2</literal></expr>)</condition> <block pos:start="458:37" pos:end="462:5">{<block_content pos:start="460:9" pos:end="460:40">

        <expr_stmt pos:start="460:9" pos:end="460:40"><expr pos:start="460:9" pos:end="460:39"><name pos:start="460:9" pos:end="460:29"><name pos:start="460:9" pos:end="460:10">ts</name><operator pos:start="460:11" pos:end="460:12">-&gt;</operator><name pos:start="460:13" pos:end="460:29">pat_packet_period</name></name> <operator pos:start="460:31" pos:end="460:31">=</operator> <name pos:start="460:33" pos:end="460:39">INT_MAX</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="464:5" pos:end="468:5"><if pos:start="464:5" pos:end="468:5">if <condition pos:start="464:8" pos:end="464:35">(<expr pos:start="464:9" pos:end="464:34"><name pos:start="464:9" pos:end="464:22"><name pos:start="464:9" pos:end="464:10">ts</name><operator pos:start="464:11" pos:end="464:12">-&gt;</operator><name pos:start="464:13" pos:end="464:22">sdt_period</name></name> <operator pos:start="464:24" pos:end="464:24">&lt;</operator> <name pos:start="464:26" pos:end="464:32">INT_MAX</name><operator pos:start="464:33" pos:end="464:33">/</operator><literal type="number" pos:start="464:34" pos:end="464:34">2</literal></expr>)</condition> <block pos:start="464:37" pos:end="468:5">{<block_content pos:start="466:9" pos:end="466:40">

        <expr_stmt pos:start="466:9" pos:end="466:40"><expr pos:start="466:9" pos:end="466:39"><name pos:start="466:9" pos:end="466:29"><name pos:start="466:9" pos:end="466:10">ts</name><operator pos:start="466:11" pos:end="466:12">-&gt;</operator><name pos:start="466:13" pos:end="466:29">sdt_packet_period</name></name> <operator pos:start="466:31" pos:end="466:31">=</operator> <name pos:start="466:33" pos:end="466:39">INT_MAX</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="472:5" pos:end="472:39">// output a PCR as soon as possible</comment>

    <expr_stmt pos:start="474:5" pos:end="474:59"><expr pos:start="474:5" pos:end="474:58"><name pos:start="474:5" pos:end="474:29"><name pos:start="474:5" pos:end="474:11">service</name><operator pos:start="474:12" pos:end="474:13">-&gt;</operator><name pos:start="474:14" pos:end="474:29">pcr_packet_count</name></name> <operator pos:start="474:31" pos:end="474:31">=</operator> <name pos:start="474:33" pos:end="474:58"><name pos:start="474:33" pos:end="474:39">service</name><operator pos:start="474:40" pos:end="474:41">-&gt;</operator><name pos:start="474:42" pos:end="474:58">pcr_packet_period</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="476:5" pos:end="476:58"><expr pos:start="476:5" pos:end="476:57"><name pos:start="476:5" pos:end="476:24"><name pos:start="476:5" pos:end="476:6">ts</name><operator pos:start="476:7" pos:end="476:8">-&gt;</operator><name pos:start="476:9" pos:end="476:24">pat_packet_count</name></name>      <operator pos:start="476:31" pos:end="476:31">=</operator> <name pos:start="476:33" pos:end="476:53"><name pos:start="476:33" pos:end="476:34">ts</name><operator pos:start="476:35" pos:end="476:36">-&gt;</operator><name pos:start="476:37" pos:end="476:53">pat_packet_period</name></name> <operator pos:start="476:55" pos:end="476:55">-</operator> <literal type="number" pos:start="476:57" pos:end="476:57">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="478:5" pos:end="478:58"><expr pos:start="478:5" pos:end="478:57"><name pos:start="478:5" pos:end="478:24"><name pos:start="478:5" pos:end="478:6">ts</name><operator pos:start="478:7" pos:end="478:8">-&gt;</operator><name pos:start="478:9" pos:end="478:24">sdt_packet_count</name></name>      <operator pos:start="478:31" pos:end="478:31">=</operator> <name pos:start="478:33" pos:end="478:53"><name pos:start="478:33" pos:end="478:34">ts</name><operator pos:start="478:35" pos:end="478:36">-&gt;</operator><name pos:start="478:37" pos:end="478:53">sdt_packet_period</name></name> <operator pos:start="478:55" pos:end="478:55">-</operator> <literal type="number" pos:start="478:57" pos:end="478:57">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="482:5" pos:end="488:64"><if pos:start="482:5" pos:end="484:51">if <condition pos:start="482:8" pos:end="482:26">(<expr pos:start="482:9" pos:end="482:25"><name pos:start="482:9" pos:end="482:20"><name pos:start="482:9" pos:end="482:10">ts</name><operator pos:start="482:11" pos:end="482:12">-&gt;</operator><name pos:start="482:13" pos:end="482:20">mux_rate</name></name> <operator pos:start="482:22" pos:end="482:23">==</operator> <literal type="number" pos:start="482:25" pos:end="482:25">1</literal></expr>)</condition><block type="pseudo" pos:start="484:9" pos:end="484:51"><block_content pos:start="484:9" pos:end="484:51">

        <expr_stmt pos:start="484:9" pos:end="484:51"><expr pos:start="484:9" pos:end="484:50"><call pos:start="484:9" pos:end="484:50"><name pos:start="484:9" pos:end="484:14">av_log</name><argument_list pos:start="484:15" pos:end="484:50">(<argument pos:start="484:16" pos:end="484:16"><expr pos:start="484:16" pos:end="484:16"><name pos:start="484:16" pos:end="484:16">s</name></expr></argument>, <argument pos:start="484:19" pos:end="484:32"><expr pos:start="484:19" pos:end="484:32"><name pos:start="484:19" pos:end="484:32">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="484:35" pos:end="484:49"><expr pos:start="484:35" pos:end="484:49"><literal type="string" pos:start="484:35" pos:end="484:49">"muxrate VBR, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="486:5" pos:end="488:64">else<block type="pseudo" pos:start="488:9" pos:end="488:64"><block_content pos:start="488:9" pos:end="488:64">

        <expr_stmt pos:start="488:9" pos:end="488:64"><expr pos:start="488:9" pos:end="488:63"><call pos:start="488:9" pos:end="488:63"><name pos:start="488:9" pos:end="488:14">av_log</name><argument_list pos:start="488:15" pos:end="488:63">(<argument pos:start="488:16" pos:end="488:16"><expr pos:start="488:16" pos:end="488:16"><name pos:start="488:16" pos:end="488:16">s</name></expr></argument>, <argument pos:start="488:19" pos:end="488:32"><expr pos:start="488:19" pos:end="488:32"><name pos:start="488:19" pos:end="488:32">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="488:35" pos:end="488:48"><expr pos:start="488:35" pos:end="488:48"><literal type="string" pos:start="488:35" pos:end="488:48">"muxrate %d, "</literal></expr></argument>, <argument pos:start="488:51" pos:end="488:62"><expr pos:start="488:51" pos:end="488:62"><name pos:start="488:51" pos:end="488:62"><name pos:start="488:51" pos:end="488:52">ts</name><operator pos:start="488:53" pos:end="488:54">-&gt;</operator><name pos:start="488:55" pos:end="488:62">mux_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="490:5" pos:end="496:57"><expr pos:start="490:5" pos:end="496:56"><call pos:start="490:5" pos:end="496:56"><name pos:start="490:5" pos:end="490:10">av_log</name><argument_list pos:start="490:11" pos:end="496:56">(<argument pos:start="490:12" pos:end="490:12"><expr pos:start="490:12" pos:end="490:12"><name pos:start="490:12" pos:end="490:12">s</name></expr></argument>, <argument pos:start="490:15" pos:end="490:28"><expr pos:start="490:15" pos:end="490:28"><name pos:start="490:15" pos:end="490:28">AV_LOG_VERBOSE</name></expr></argument>,

           <argument pos:start="492:12" pos:end="492:69"><expr pos:start="492:12" pos:end="492:69"><literal type="string" pos:start="492:12" pos:end="492:69">"pcr every %d pkts, sdt every %d, pat/pmt every %d pkts\n"</literal></expr></argument>,

           <argument pos:start="494:12" pos:end="494:37"><expr pos:start="494:12" pos:end="494:37"><name pos:start="494:12" pos:end="494:37"><name pos:start="494:12" pos:end="494:18">service</name><operator pos:start="494:19" pos:end="494:20">-&gt;</operator><name pos:start="494:21" pos:end="494:37">pcr_packet_period</name></name></expr></argument>,

           <argument pos:start="496:12" pos:end="496:32"><expr pos:start="496:12" pos:end="496:32"><name pos:start="496:12" pos:end="496:32"><name pos:start="496:12" pos:end="496:13">ts</name><operator pos:start="496:14" pos:end="496:15">-&gt;</operator><name pos:start="496:16" pos:end="496:32">sdt_packet_period</name></name></expr></argument>, <argument pos:start="496:35" pos:end="496:55"><expr pos:start="496:35" pos:end="496:55"><name pos:start="496:35" pos:end="496:55"><name pos:start="496:35" pos:end="496:36">ts</name><operator pos:start="496:37" pos:end="496:38">-&gt;</operator><name pos:start="496:39" pos:end="496:55">pat_packet_period</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="500:5" pos:end="512:5"><if pos:start="500:5" pos:end="512:5">if <condition pos:start="500:8" pos:end="500:28">(<expr pos:start="500:9" pos:end="500:27"><name pos:start="500:9" pos:end="500:21"><name pos:start="500:9" pos:end="500:10">ts</name><operator pos:start="500:11" pos:end="500:12">-&gt;</operator><name pos:start="500:13" pos:end="500:21">m2ts_mode</name></name> <operator pos:start="500:23" pos:end="500:24">==</operator> <operator pos:start="500:26" pos:end="500:26">-</operator><literal type="number" pos:start="500:27" pos:end="500:27">1</literal></expr>)</condition> <block pos:start="500:30" pos:end="512:5">{<block_content pos:start="502:9" pos:end="510:9">

        <if_stmt pos:start="502:9" pos:end="510:9"><if pos:start="502:9" pos:end="506:9">if <condition pos:start="502:12" pos:end="502:46">(<expr pos:start="502:13" pos:end="502:45"><call pos:start="502:13" pos:end="502:45"><name pos:start="502:13" pos:end="502:24">av_match_ext</name><argument_list pos:start="502:25" pos:end="502:45">(<argument pos:start="502:26" pos:end="502:36"><expr pos:start="502:26" pos:end="502:36"><name pos:start="502:26" pos:end="502:36"><name pos:start="502:26" pos:end="502:26">s</name><operator pos:start="502:27" pos:end="502:28">-&gt;</operator><name pos:start="502:29" pos:end="502:36">filename</name></name></expr></argument>, <argument pos:start="502:39" pos:end="502:44"><expr pos:start="502:39" pos:end="502:44"><literal type="string" pos:start="502:39" pos:end="502:44">"m2ts"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="502:48" pos:end="506:9">{<block_content pos:start="504:13" pos:end="504:30">

            <expr_stmt pos:start="504:13" pos:end="504:30"><expr pos:start="504:13" pos:end="504:29"><name pos:start="504:13" pos:end="504:25"><name pos:start="504:13" pos:end="504:14">ts</name><operator pos:start="504:15" pos:end="504:16">-&gt;</operator><name pos:start="504:17" pos:end="504:25">m2ts_mode</name></name> <operator pos:start="504:27" pos:end="504:27">=</operator> <literal type="number" pos:start="504:29" pos:end="504:29">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="506:11" pos:end="510:9">else <block pos:start="506:16" pos:end="510:9">{<block_content pos:start="508:13" pos:end="508:30">

            <expr_stmt pos:start="508:13" pos:end="508:30"><expr pos:start="508:13" pos:end="508:29"><name pos:start="508:13" pos:end="508:25"><name pos:start="508:13" pos:end="508:14">ts</name><operator pos:start="508:15" pos:end="508:16">-&gt;</operator><name pos:start="508:17" pos:end="508:25">m2ts_mode</name></name> <operator pos:start="508:27" pos:end="508:27">=</operator> <literal type="number" pos:start="508:29" pos:end="508:29">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="516:5" pos:end="516:13">return <expr pos:start="516:12" pos:end="516:12"><literal type="number" pos:start="516:12" pos:end="516:12">0</literal></expr>;</return>



<label pos:start="520:1" pos:end="520:5"><name pos:start="520:1" pos:end="520:4">fail</name>:</label>

    <expr_stmt pos:start="522:5" pos:end="522:20"><expr pos:start="522:5" pos:end="522:19"><call pos:start="522:5" pos:end="522:19"><name pos:start="522:5" pos:end="522:12">av_freep</name><argument_list pos:start="522:13" pos:end="522:19">(<argument pos:start="522:14" pos:end="522:18"><expr pos:start="522:14" pos:end="522:18"><operator pos:start="522:14" pos:end="522:14">&amp;</operator><name pos:start="522:15" pos:end="522:18">pids</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="524:5" pos:end="524:15">return <expr pos:start="524:12" pos:end="524:14"><name pos:start="524:12" pos:end="524:14">ret</name></expr>;</return>

</block_content>}</block></function></unit>
