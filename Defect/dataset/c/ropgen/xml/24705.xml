<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24705.c" pos:tabs="8"><function pos:start="1:1" pos:end="3993:5"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">disas_xtensa_insn</name><parameter_list pos:start="1:30" pos:end="1:68">(<parameter pos:start="1:31" pos:end="1:49"><decl pos:start="1:31" pos:end="1:49"><type pos:start="1:31" pos:end="1:49"><name pos:start="1:31" pos:end="1:44">CPUXtensaState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">env</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:67"><decl pos:start="1:52" pos:end="1:67"><type pos:start="1:52" pos:end="1:67"><name pos:start="1:52" pos:end="1:63">DisasContext</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:67">dc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="3993:5">{<block_content pos:start="181:5" pos:end="3991:14">

<cpp:define pos:start="5:1" pos:end="17:15">#<cpp:directive pos:start="5:2" pos:end="5:7">define</cpp:directive> <cpp:macro pos:start="5:9" pos:end="5:28"><name pos:start="5:9" pos:end="5:23">HAS_OPTION_BITS</name><parameter_list pos:start="5:24" pos:end="5:28">(<parameter pos:start="5:25" pos:end="5:27"><type pos:start="5:25" pos:end="5:27"><name pos:start="5:25" pos:end="5:27">opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="5:30" pos:end="17:15">do { \

        if (!option_bits_enabled(dc, opt)) { \

            qemu_log("Option is not enabled %s:%d\n", \

                    __FILE__, __LINE__); \

            goto invalid_opcode; \

        } \

    } while (0)</cpp:value></cpp:define>



<cpp:define pos:start="21:1" pos:end="21:63">#<cpp:directive pos:start="21:2" pos:end="21:7">define</cpp:directive> <cpp:macro pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:18">HAS_OPTION</name><parameter_list pos:start="21:19" pos:end="21:23">(<parameter pos:start="21:20" pos:end="21:22"><type pos:start="21:20" pos:end="21:22"><name pos:start="21:20" pos:end="21:22">opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="21:25" pos:end="21:63">HAS_OPTION_BITS(XTENSA_OPTION_BIT(opt))</cpp:value></cpp:define>



<cpp:define pos:start="25:1" pos:end="25:77">#<cpp:directive pos:start="25:2" pos:end="25:7">define</cpp:directive> <cpp:macro pos:start="25:9" pos:end="25:13"><name pos:start="25:9" pos:end="25:11">TBD</name><parameter_list pos:start="25:12" pos:end="25:13">()</parameter_list></cpp:macro> <cpp:value pos:start="25:15" pos:end="25:77">qemu_log("TBD(pc = %08x): %s:%d\n", dc-&gt;pc, __FILE__, __LINE__)</cpp:value></cpp:define>

<cpp:define pos:start="27:1" pos:end="35:15">#<cpp:directive pos:start="27:2" pos:end="27:7">define</cpp:directive> <cpp:macro pos:start="27:9" pos:end="27:18"><name pos:start="27:9" pos:end="27:16">RESERVED</name><parameter_list pos:start="27:17" pos:end="27:18">()</parameter_list></cpp:macro> <cpp:value pos:start="27:20" pos:end="35:15">do { \

        qemu_log("RESERVED(pc = %08x, %02x%02x%02x): %s:%d\n", \

                dc-&gt;pc, b0, b1, b2, __FILE__, __LINE__); \

        goto invalid_opcode; \

    } while (0)</cpp:value></cpp:define>





<cpp:ifdef pos:start="41:1" pos:end="41:29">#<cpp:directive pos:start="41:2" pos:end="41:6">ifdef</cpp:directive> <name pos:start="41:8" pos:end="41:29">TARGET_WORDS_BIGENDIAN</name></cpp:ifdef>

<cpp:define pos:start="43:1" pos:end="43:32">#<cpp:directive pos:start="43:2" pos:end="43:7">define</cpp:directive> <cpp:macro pos:start="43:9" pos:end="43:11"><name pos:start="43:9" pos:end="43:11">OP0</name></cpp:macro> <cpp:value pos:start="43:13" pos:end="43:32">(((b0) &amp; 0xf0) &gt;&gt; 4)</cpp:value></cpp:define>

<cpp:define pos:start="45:1" pos:end="45:32">#<cpp:directive pos:start="45:2" pos:end="45:7">define</cpp:directive> <cpp:macro pos:start="45:9" pos:end="45:11"><name pos:start="45:9" pos:end="45:11">OP1</name></cpp:macro> <cpp:value pos:start="45:13" pos:end="45:32">(((b2) &amp; 0xf0) &gt;&gt; 4)</cpp:value></cpp:define>

<cpp:define pos:start="47:1" pos:end="47:24">#<cpp:directive pos:start="47:2" pos:end="47:7">define</cpp:directive> <cpp:macro pos:start="47:9" pos:end="47:11"><name pos:start="47:9" pos:end="47:11">OP2</name></cpp:macro> <cpp:value pos:start="47:13" pos:end="47:24">((b2) &amp; 0xf)</cpp:value></cpp:define>

<cpp:define pos:start="49:1" pos:end="49:26">#<cpp:directive pos:start="49:2" pos:end="49:7">define</cpp:directive> <cpp:macro pos:start="49:9" pos:end="49:13"><name pos:start="49:9" pos:end="49:13">RRR_R</name></cpp:macro> <cpp:value pos:start="49:15" pos:end="49:26">((b1) &amp; 0xf)</cpp:value></cpp:define>

<cpp:define pos:start="51:1" pos:end="51:34">#<cpp:directive pos:start="51:2" pos:end="51:7">define</cpp:directive> <cpp:macro pos:start="51:9" pos:end="51:13"><name pos:start="51:9" pos:end="51:13">RRR_S</name></cpp:macro> <cpp:value pos:start="51:15" pos:end="51:34">(((b1) &amp; 0xf0) &gt;&gt; 4)</cpp:value></cpp:define>

<cpp:define pos:start="53:1" pos:end="53:26">#<cpp:directive pos:start="53:2" pos:end="53:7">define</cpp:directive> <cpp:macro pos:start="53:9" pos:end="53:13"><name pos:start="53:9" pos:end="53:13">RRR_T</name></cpp:macro> <cpp:value pos:start="53:15" pos:end="53:26">((b0) &amp; 0xf)</cpp:value></cpp:define>

<cpp:else pos:start="55:1" pos:end="55:5">#<cpp:directive pos:start="55:2" pos:end="55:5">else</cpp:directive></cpp:else>

<cpp:define pos:start="57:1" pos:end="57:26">#<cpp:directive pos:start="57:2" pos:end="57:7">define</cpp:directive> <cpp:macro pos:start="57:9" pos:end="57:11"><name pos:start="57:9" pos:end="57:11">OP0</name></cpp:macro> <cpp:value pos:start="57:13" pos:end="57:26">(((b0) &amp; 0xf))</cpp:value></cpp:define>

<cpp:define pos:start="59:1" pos:end="59:26">#<cpp:directive pos:start="59:2" pos:end="59:7">define</cpp:directive> <cpp:macro pos:start="59:9" pos:end="59:11"><name pos:start="59:9" pos:end="59:11">OP1</name></cpp:macro> <cpp:value pos:start="59:13" pos:end="59:26">(((b2) &amp; 0xf))</cpp:value></cpp:define>

<cpp:define pos:start="61:1" pos:end="61:32">#<cpp:directive pos:start="61:2" pos:end="61:7">define</cpp:directive> <cpp:macro pos:start="61:9" pos:end="61:11"><name pos:start="61:9" pos:end="61:11">OP2</name></cpp:macro> <cpp:value pos:start="61:13" pos:end="61:32">(((b2) &amp; 0xf0) &gt;&gt; 4)</cpp:value></cpp:define>

<cpp:define pos:start="63:1" pos:end="63:34">#<cpp:directive pos:start="63:2" pos:end="63:7">define</cpp:directive> <cpp:macro pos:start="63:9" pos:end="63:13"><name pos:start="63:9" pos:end="63:13">RRR_R</name></cpp:macro> <cpp:value pos:start="63:15" pos:end="63:34">(((b1) &amp; 0xf0) &gt;&gt; 4)</cpp:value></cpp:define>

<cpp:define pos:start="65:1" pos:end="65:28">#<cpp:directive pos:start="65:2" pos:end="65:7">define</cpp:directive> <cpp:macro pos:start="65:9" pos:end="65:13"><name pos:start="65:9" pos:end="65:13">RRR_S</name></cpp:macro> <cpp:value pos:start="65:15" pos:end="65:28">(((b1) &amp; 0xf))</cpp:value></cpp:define>

<cpp:define pos:start="67:1" pos:end="67:34">#<cpp:directive pos:start="67:2" pos:end="67:7">define</cpp:directive> <cpp:macro pos:start="67:9" pos:end="67:13"><name pos:start="67:9" pos:end="67:13">RRR_T</name></cpp:macro> <cpp:value pos:start="67:15" pos:end="67:34">(((b0) &amp; 0xf0) &gt;&gt; 4)</cpp:value></cpp:define>

<cpp:endif pos:start="69:1" pos:end="69:6">#<cpp:directive pos:start="69:2" pos:end="69:6">endif</cpp:directive></cpp:endif>

<cpp:define pos:start="71:1" pos:end="71:34">#<cpp:directive pos:start="71:2" pos:end="71:7">define</cpp:directive> <cpp:macro pos:start="71:9" pos:end="71:13"><name pos:start="71:9" pos:end="71:13">RRR_X</name></cpp:macro> <cpp:value pos:start="71:15" pos:end="71:34">((RRR_R &amp; 0x4) &gt;&gt; 2)</cpp:value></cpp:define>

<cpp:define pos:start="73:1" pos:end="73:34">#<cpp:directive pos:start="73:2" pos:end="73:7">define</cpp:directive> <cpp:macro pos:start="73:9" pos:end="73:13"><name pos:start="73:9" pos:end="73:13">RRR_Y</name></cpp:macro> <cpp:value pos:start="73:15" pos:end="73:34">((RRR_T &amp; 0x4) &gt;&gt; 2)</cpp:value></cpp:define>

<cpp:define pos:start="75:1" pos:end="75:27">#<cpp:directive pos:start="75:2" pos:end="75:7">define</cpp:directive> <cpp:macro pos:start="75:9" pos:end="75:13"><name pos:start="75:9" pos:end="75:13">RRR_W</name></cpp:macro> <cpp:value pos:start="75:15" pos:end="75:27">(RRR_R &amp; 0x3)</cpp:value></cpp:define>



<cpp:define pos:start="79:1" pos:end="79:20">#<cpp:directive pos:start="79:2" pos:end="79:7">define</cpp:directive> <cpp:macro pos:start="79:9" pos:end="79:14"><name pos:start="79:9" pos:end="79:14">RRRN_R</name></cpp:macro> <cpp:value pos:start="79:16" pos:end="79:20">RRR_R</cpp:value></cpp:define>

<cpp:define pos:start="81:1" pos:end="81:20">#<cpp:directive pos:start="81:2" pos:end="81:7">define</cpp:directive> <cpp:macro pos:start="81:9" pos:end="81:14"><name pos:start="81:9" pos:end="81:14">RRRN_S</name></cpp:macro> <cpp:value pos:start="81:16" pos:end="81:20">RRR_S</cpp:value></cpp:define>

<cpp:define pos:start="83:1" pos:end="83:20">#<cpp:directive pos:start="83:2" pos:end="83:7">define</cpp:directive> <cpp:macro pos:start="83:9" pos:end="83:14"><name pos:start="83:9" pos:end="83:14">RRRN_T</name></cpp:macro> <cpp:value pos:start="83:16" pos:end="83:20">RRR_T</cpp:value></cpp:define>



<cpp:define pos:start="87:1" pos:end="87:20">#<cpp:directive pos:start="87:2" pos:end="87:7">define</cpp:directive> <cpp:macro pos:start="87:9" pos:end="87:14"><name pos:start="87:9" pos:end="87:14">RRI8_R</name></cpp:macro> <cpp:value pos:start="87:16" pos:end="87:20">RRR_R</cpp:value></cpp:define>

<cpp:define pos:start="89:1" pos:end="89:20">#<cpp:directive pos:start="89:2" pos:end="89:7">define</cpp:directive> <cpp:macro pos:start="89:9" pos:end="89:14"><name pos:start="89:9" pos:end="89:14">RRI8_S</name></cpp:macro> <cpp:value pos:start="89:16" pos:end="89:20">RRR_S</cpp:value></cpp:define>

<cpp:define pos:start="91:1" pos:end="91:20">#<cpp:directive pos:start="91:2" pos:end="91:7">define</cpp:directive> <cpp:macro pos:start="91:9" pos:end="91:14"><name pos:start="91:9" pos:end="91:14">RRI8_T</name></cpp:macro> <cpp:value pos:start="91:16" pos:end="91:20">RRR_T</cpp:value></cpp:define>

<cpp:define pos:start="93:1" pos:end="93:22">#<cpp:directive pos:start="93:2" pos:end="93:7">define</cpp:directive> <cpp:macro pos:start="93:9" pos:end="93:17"><name pos:start="93:9" pos:end="93:17">RRI8_IMM8</name></cpp:macro> <cpp:value pos:start="93:19" pos:end="93:22">(b2)</cpp:value></cpp:define>

<cpp:define pos:start="95:1" pos:end="95:67">#<cpp:directive pos:start="95:2" pos:end="95:7">define</cpp:directive> <cpp:macro pos:start="95:9" pos:end="95:20"><name pos:start="95:9" pos:end="95:20">RRI8_IMM8_SE</name></cpp:macro> <cpp:value pos:start="95:22" pos:end="95:67">((((b2) &amp; 0x80) ? 0xffffff00 : 0) | RRI8_IMM8)</cpp:value></cpp:define>



<cpp:ifdef pos:start="99:1" pos:end="99:29">#<cpp:directive pos:start="99:2" pos:end="99:6">ifdef</cpp:directive> <name pos:start="99:8" pos:end="99:29">TARGET_WORDS_BIGENDIAN</name></cpp:ifdef>

<cpp:define pos:start="101:1" pos:end="101:39">#<cpp:directive pos:start="101:2" pos:end="101:7">define</cpp:directive> <cpp:macro pos:start="101:9" pos:end="101:18"><name pos:start="101:9" pos:end="101:18">RI16_IMM16</name></cpp:macro> <cpp:value pos:start="101:20" pos:end="101:39">(((b1) &lt;&lt; 8) | (b2))</cpp:value></cpp:define>

<cpp:else pos:start="103:1" pos:end="103:5">#<cpp:directive pos:start="103:2" pos:end="103:5">else</cpp:directive></cpp:else>

<cpp:define pos:start="105:1" pos:end="105:39">#<cpp:directive pos:start="105:2" pos:end="105:7">define</cpp:directive> <cpp:macro pos:start="105:9" pos:end="105:18"><name pos:start="105:9" pos:end="105:18">RI16_IMM16</name></cpp:macro> <cpp:value pos:start="105:20" pos:end="105:39">(((b2) &lt;&lt; 8) | (b1))</cpp:value></cpp:define>

<cpp:endif pos:start="107:1" pos:end="107:6">#<cpp:directive pos:start="107:2" pos:end="107:6">endif</cpp:directive></cpp:endif>



<cpp:ifdef pos:start="111:1" pos:end="111:29">#<cpp:directive pos:start="111:2" pos:end="111:6">ifdef</cpp:directive> <name pos:start="111:8" pos:end="111:29">TARGET_WORDS_BIGENDIAN</name></cpp:ifdef>

<cpp:define pos:start="113:1" pos:end="113:34">#<cpp:directive pos:start="113:2" pos:end="113:7">define</cpp:directive> <cpp:macro pos:start="113:9" pos:end="113:14"><name pos:start="113:9" pos:end="113:14">CALL_N</name></cpp:macro> <cpp:value pos:start="113:16" pos:end="113:34">(((b0) &amp; 0xc) &gt;&gt; 2)</cpp:value></cpp:define>

<cpp:define pos:start="115:1" pos:end="115:63">#<cpp:directive pos:start="115:2" pos:end="115:7">define</cpp:directive> <cpp:macro pos:start="115:9" pos:end="115:19"><name pos:start="115:9" pos:end="115:19">CALL_OFFSET</name></cpp:macro> <cpp:value pos:start="115:21" pos:end="115:63">((((b0) &amp; 0x3) &lt;&lt; 16) | ((b1) &lt;&lt; 8) | (b2))</cpp:value></cpp:define>

<cpp:else pos:start="117:1" pos:end="117:5">#<cpp:directive pos:start="117:2" pos:end="117:5">else</cpp:directive></cpp:else>

<cpp:define pos:start="119:1" pos:end="119:35">#<cpp:directive pos:start="119:2" pos:end="119:7">define</cpp:directive> <cpp:macro pos:start="119:9" pos:end="119:14"><name pos:start="119:9" pos:end="119:14">CALL_N</name></cpp:macro> <cpp:value pos:start="119:16" pos:end="119:35">(((b0) &amp; 0x30) &gt;&gt; 4)</cpp:value></cpp:define>

<cpp:define pos:start="121:1" pos:end="121:71">#<cpp:directive pos:start="121:2" pos:end="121:7">define</cpp:directive> <cpp:macro pos:start="121:9" pos:end="121:19"><name pos:start="121:9" pos:end="121:19">CALL_OFFSET</name></cpp:macro> <cpp:value pos:start="121:21" pos:end="121:71">((((b0) &amp; 0xc0) &gt;&gt; 6) | ((b1) &lt;&lt; 2) | ((b2) &lt;&lt; 10))</cpp:value></cpp:define>

<cpp:endif pos:start="123:1" pos:end="123:6">#<cpp:directive pos:start="123:2" pos:end="123:6">endif</cpp:directive></cpp:endif>

<cpp:define pos:start="125:1" pos:end="127:62">#<cpp:directive pos:start="125:2" pos:end="125:7">define</cpp:directive> <cpp:macro pos:start="125:9" pos:end="125:22"><name pos:start="125:9" pos:end="125:22">CALL_OFFSET_SE</name></cpp:macro> \

    <cpp:value pos:start="127:5" pos:end="127:62">(((CALL_OFFSET &amp; 0x20000) ? 0xfffc0000 : 0) | CALL_OFFSET)</cpp:value></cpp:define>



<cpp:define pos:start="131:1" pos:end="131:22">#<cpp:directive pos:start="131:2" pos:end="131:7">define</cpp:directive> <cpp:macro pos:start="131:9" pos:end="131:15"><name pos:start="131:9" pos:end="131:15">CALLX_N</name></cpp:macro> <cpp:value pos:start="131:17" pos:end="131:22">CALL_N</cpp:value></cpp:define>

<cpp:ifdef pos:start="133:1" pos:end="133:29">#<cpp:directive pos:start="133:2" pos:end="133:6">ifdef</cpp:directive> <name pos:start="133:8" pos:end="133:29">TARGET_WORDS_BIGENDIAN</name></cpp:ifdef>

<cpp:define pos:start="135:1" pos:end="135:28">#<cpp:directive pos:start="135:2" pos:end="135:7">define</cpp:directive> <cpp:macro pos:start="135:9" pos:end="135:15"><name pos:start="135:9" pos:end="135:15">CALLX_M</name></cpp:macro> <cpp:value pos:start="135:17" pos:end="135:28">((b0) &amp; 0x3)</cpp:value></cpp:define>

<cpp:else pos:start="137:1" pos:end="137:5">#<cpp:directive pos:start="137:2" pos:end="137:5">else</cpp:directive></cpp:else>

<cpp:define pos:start="139:1" pos:end="139:36">#<cpp:directive pos:start="139:2" pos:end="139:7">define</cpp:directive> <cpp:macro pos:start="139:9" pos:end="139:15"><name pos:start="139:9" pos:end="139:15">CALLX_M</name></cpp:macro> <cpp:value pos:start="139:17" pos:end="139:36">(((b0) &amp; 0xc0) &gt;&gt; 6)</cpp:value></cpp:define>

<cpp:endif pos:start="141:1" pos:end="141:6">#<cpp:directive pos:start="141:2" pos:end="141:6">endif</cpp:directive></cpp:endif>

<cpp:define pos:start="143:1" pos:end="143:21">#<cpp:directive pos:start="143:2" pos:end="143:7">define</cpp:directive> <cpp:macro pos:start="143:9" pos:end="143:15"><name pos:start="143:9" pos:end="143:15">CALLX_S</name></cpp:macro> <cpp:value pos:start="143:17" pos:end="143:21">RRR_S</cpp:value></cpp:define>



<cpp:define pos:start="147:1" pos:end="147:23">#<cpp:directive pos:start="147:2" pos:end="147:7">define</cpp:directive> <cpp:macro pos:start="147:9" pos:end="147:15"><name pos:start="147:9" pos:end="147:15">BRI12_M</name></cpp:macro> <cpp:value pos:start="147:17" pos:end="147:23">CALLX_M</cpp:value></cpp:define>

<cpp:define pos:start="149:1" pos:end="149:21">#<cpp:directive pos:start="149:2" pos:end="149:7">define</cpp:directive> <cpp:macro pos:start="149:9" pos:end="149:15"><name pos:start="149:9" pos:end="149:15">BRI12_S</name></cpp:macro> <cpp:value pos:start="149:17" pos:end="149:21">RRR_S</cpp:value></cpp:define>

<cpp:ifdef pos:start="151:1" pos:end="151:29">#<cpp:directive pos:start="151:2" pos:end="151:6">ifdef</cpp:directive> <name pos:start="151:8" pos:end="151:29">TARGET_WORDS_BIGENDIAN</name></cpp:ifdef>

<cpp:define pos:start="153:1" pos:end="153:48">#<cpp:directive pos:start="153:2" pos:end="153:7">define</cpp:directive> <cpp:macro pos:start="153:9" pos:end="153:19"><name pos:start="153:9" pos:end="153:19">BRI12_IMM12</name></cpp:macro> <cpp:value pos:start="153:21" pos:end="153:48">((((b1) &amp; 0xf) &lt;&lt; 8) | (b2))</cpp:value></cpp:define>

<cpp:else pos:start="155:1" pos:end="155:5">#<cpp:directive pos:start="155:2" pos:end="155:5">else</cpp:directive></cpp:else>

<cpp:define pos:start="157:1" pos:end="157:56">#<cpp:directive pos:start="157:2" pos:end="157:7">define</cpp:directive> <cpp:macro pos:start="157:9" pos:end="157:19"><name pos:start="157:9" pos:end="157:19">BRI12_IMM12</name></cpp:macro> <cpp:value pos:start="157:21" pos:end="157:56">((((b1) &amp; 0xf0) &gt;&gt; 4) | ((b2) &lt;&lt; 4))</cpp:value></cpp:define>

<cpp:endif pos:start="159:1" pos:end="159:6">#<cpp:directive pos:start="159:2" pos:end="159:6">endif</cpp:directive></cpp:endif>

<cpp:define pos:start="161:1" pos:end="161:79">#<cpp:directive pos:start="161:2" pos:end="161:7">define</cpp:directive> <cpp:macro pos:start="161:9" pos:end="161:22"><name pos:start="161:9" pos:end="161:22">BRI12_IMM12_SE</name></cpp:macro> <cpp:value pos:start="161:24" pos:end="161:79">(((BRI12_IMM12 &amp; 0x800) ? 0xfffff000 : 0) | BRI12_IMM12)</cpp:value></cpp:define>



<cpp:define pos:start="165:1" pos:end="165:22">#<cpp:directive pos:start="165:2" pos:end="165:7">define</cpp:directive> <cpp:macro pos:start="165:9" pos:end="165:14"><name pos:start="165:9" pos:end="165:14">BRI8_M</name></cpp:macro> <cpp:value pos:start="165:16" pos:end="165:22">BRI12_M</cpp:value></cpp:define>

<cpp:define pos:start="167:1" pos:end="167:21">#<cpp:directive pos:start="167:2" pos:end="167:7">define</cpp:directive> <cpp:macro pos:start="167:9" pos:end="167:14"><name pos:start="167:9" pos:end="167:14">BRI8_R</name></cpp:macro> <cpp:value pos:start="167:16" pos:end="167:21">RRI8_R</cpp:value></cpp:define>

<cpp:define pos:start="169:1" pos:end="169:21">#<cpp:directive pos:start="169:2" pos:end="169:7">define</cpp:directive> <cpp:macro pos:start="169:9" pos:end="169:14"><name pos:start="169:9" pos:end="169:14">BRI8_S</name></cpp:macro> <cpp:value pos:start="169:16" pos:end="169:21">RRI8_S</cpp:value></cpp:define>

<cpp:define pos:start="171:1" pos:end="171:27">#<cpp:directive pos:start="171:2" pos:end="171:7">define</cpp:directive> <cpp:macro pos:start="171:9" pos:end="171:17"><name pos:start="171:9" pos:end="171:17">BRI8_IMM8</name></cpp:macro> <cpp:value pos:start="171:19" pos:end="171:27">RRI8_IMM8</cpp:value></cpp:define>

<cpp:define pos:start="173:1" pos:end="173:33">#<cpp:directive pos:start="173:2" pos:end="173:7">define</cpp:directive> <cpp:macro pos:start="173:9" pos:end="173:20"><name pos:start="173:9" pos:end="173:20">BRI8_IMM8_SE</name></cpp:macro> <cpp:value pos:start="173:22" pos:end="173:33">RRI8_IMM8_SE</cpp:value></cpp:define>



<cpp:define pos:start="177:1" pos:end="177:19">#<cpp:directive pos:start="177:2" pos:end="177:7">define</cpp:directive> <cpp:macro pos:start="177:9" pos:end="177:14"><name pos:start="177:9" pos:end="177:14">RSR_SR</name></cpp:macro> <cpp:value pos:start="177:16" pos:end="177:19">(b1)</cpp:value></cpp:define>



    <decl_stmt pos:start="181:5" pos:end="181:44"><decl pos:start="181:5" pos:end="181:43"><type pos:start="181:5" pos:end="181:11"><name pos:start="181:5" pos:end="181:11">uint8_t</name></type> <name pos:start="181:13" pos:end="181:14">b0</name> <init pos:start="181:16" pos:end="181:43">= <expr pos:start="181:18" pos:end="181:43"><call pos:start="181:18" pos:end="181:43"><name pos:start="181:18" pos:end="181:30">cpu_ldub_code</name><argument_list pos:start="181:31" pos:end="181:43">(<argument pos:start="181:32" pos:end="181:34"><expr pos:start="181:32" pos:end="181:34"><name pos:start="181:32" pos:end="181:34">env</name></expr></argument>, <argument pos:start="181:37" pos:end="181:42"><expr pos:start="181:37" pos:end="181:42"><name pos:start="181:37" pos:end="181:42"><name pos:start="181:37" pos:end="181:38">dc</name><operator pos:start="181:39" pos:end="181:40">-&gt;</operator><name pos:start="181:41" pos:end="181:42">pc</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="183:5" pos:end="183:48"><decl pos:start="183:5" pos:end="183:47"><type pos:start="183:5" pos:end="183:11"><name pos:start="183:5" pos:end="183:11">uint8_t</name></type> <name pos:start="183:13" pos:end="183:14">b1</name> <init pos:start="183:16" pos:end="183:47">= <expr pos:start="183:18" pos:end="183:47"><call pos:start="183:18" pos:end="183:47"><name pos:start="183:18" pos:end="183:30">cpu_ldub_code</name><argument_list pos:start="183:31" pos:end="183:47">(<argument pos:start="183:32" pos:end="183:34"><expr pos:start="183:32" pos:end="183:34"><name pos:start="183:32" pos:end="183:34">env</name></expr></argument>, <argument pos:start="183:37" pos:end="183:46"><expr pos:start="183:37" pos:end="183:46"><name pos:start="183:37" pos:end="183:42"><name pos:start="183:37" pos:end="183:38">dc</name><operator pos:start="183:39" pos:end="183:40">-&gt;</operator><name pos:start="183:41" pos:end="183:42">pc</name></name> <operator pos:start="183:44" pos:end="183:44">+</operator> <literal type="number" pos:start="183:46" pos:end="183:46">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="185:5" pos:end="185:19"><decl pos:start="185:5" pos:end="185:18"><type pos:start="185:5" pos:end="185:11"><name pos:start="185:5" pos:end="185:11">uint8_t</name></type> <name pos:start="185:13" pos:end="185:14">b2</name> <init pos:start="185:16" pos:end="185:18">= <expr pos:start="185:18" pos:end="185:18"><literal type="number" pos:start="185:18" pos:end="185:18">0</literal></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="189:5" pos:end="193:6"><decl pos:start="189:5" pos:end="193:5"><type pos:start="189:5" pos:end="189:25"><specifier pos:start="189:5" pos:end="189:10">static</specifier> <specifier pos:start="189:12" pos:end="189:16">const</specifier> <name pos:start="189:18" pos:end="189:25">uint32_t</name></type> <name pos:start="189:27" pos:end="189:35"><name pos:start="189:27" pos:end="189:33">B4CONST</name><index pos:start="189:34" pos:end="189:35">[]</index></name> <init pos:start="189:37" pos:end="193:5">= <expr pos:start="189:39" pos:end="193:5"><block pos:start="189:39" pos:end="193:5">{

        <expr pos:start="191:9" pos:end="191:18"><literal type="number" pos:start="191:9" pos:end="191:18">0xffffffff</literal></expr>, <expr pos:start="191:21" pos:end="191:21"><literal type="number" pos:start="191:21" pos:end="191:21">1</literal></expr>, <expr pos:start="191:24" pos:end="191:24"><literal type="number" pos:start="191:24" pos:end="191:24">2</literal></expr>, <expr pos:start="191:27" pos:end="191:27"><literal type="number" pos:start="191:27" pos:end="191:27">3</literal></expr>, <expr pos:start="191:30" pos:end="191:30"><literal type="number" pos:start="191:30" pos:end="191:30">4</literal></expr>, <expr pos:start="191:33" pos:end="191:33"><literal type="number" pos:start="191:33" pos:end="191:33">5</literal></expr>, <expr pos:start="191:36" pos:end="191:36"><literal type="number" pos:start="191:36" pos:end="191:36">6</literal></expr>, <expr pos:start="191:39" pos:end="191:39"><literal type="number" pos:start="191:39" pos:end="191:39">7</literal></expr>, <expr pos:start="191:42" pos:end="191:42"><literal type="number" pos:start="191:42" pos:end="191:42">8</literal></expr>, <expr pos:start="191:45" pos:end="191:46"><literal type="number" pos:start="191:45" pos:end="191:46">10</literal></expr>, <expr pos:start="191:49" pos:end="191:50"><literal type="number" pos:start="191:49" pos:end="191:50">12</literal></expr>, <expr pos:start="191:53" pos:end="191:54"><literal type="number" pos:start="191:53" pos:end="191:54">16</literal></expr>, <expr pos:start="191:57" pos:end="191:58"><literal type="number" pos:start="191:57" pos:end="191:58">32</literal></expr>, <expr pos:start="191:61" pos:end="191:62"><literal type="number" pos:start="191:61" pos:end="191:62">64</literal></expr>, <expr pos:start="191:65" pos:end="191:67"><literal type="number" pos:start="191:65" pos:end="191:67">128</literal></expr>, <expr pos:start="191:70" pos:end="191:72"><literal type="number" pos:start="191:70" pos:end="191:72">256</literal></expr>

    }</block></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="197:5" pos:end="201:6"><decl pos:start="197:5" pos:end="201:5"><type pos:start="197:5" pos:end="197:25"><specifier pos:start="197:5" pos:end="197:10">static</specifier> <specifier pos:start="197:12" pos:end="197:16">const</specifier> <name pos:start="197:18" pos:end="197:25">uint32_t</name></type> <name pos:start="197:27" pos:end="197:36"><name pos:start="197:27" pos:end="197:34">B4CONSTU</name><index pos:start="197:35" pos:end="197:36">[]</index></name> <init pos:start="197:38" pos:end="201:5">= <expr pos:start="197:40" pos:end="201:5"><block pos:start="197:40" pos:end="201:5">{

        <expr pos:start="199:9" pos:end="199:13"><literal type="number" pos:start="199:9" pos:end="199:13">32768</literal></expr>, <expr pos:start="199:16" pos:end="199:20"><literal type="number" pos:start="199:16" pos:end="199:20">65536</literal></expr>, <expr pos:start="199:23" pos:end="199:23"><literal type="number" pos:start="199:23" pos:end="199:23">2</literal></expr>, <expr pos:start="199:26" pos:end="199:26"><literal type="number" pos:start="199:26" pos:end="199:26">3</literal></expr>, <expr pos:start="199:29" pos:end="199:29"><literal type="number" pos:start="199:29" pos:end="199:29">4</literal></expr>, <expr pos:start="199:32" pos:end="199:32"><literal type="number" pos:start="199:32" pos:end="199:32">5</literal></expr>, <expr pos:start="199:35" pos:end="199:35"><literal type="number" pos:start="199:35" pos:end="199:35">6</literal></expr>, <expr pos:start="199:38" pos:end="199:38"><literal type="number" pos:start="199:38" pos:end="199:38">7</literal></expr>, <expr pos:start="199:41" pos:end="199:41"><literal type="number" pos:start="199:41" pos:end="199:41">8</literal></expr>, <expr pos:start="199:44" pos:end="199:45"><literal type="number" pos:start="199:44" pos:end="199:45">10</literal></expr>, <expr pos:start="199:48" pos:end="199:49"><literal type="number" pos:start="199:48" pos:end="199:49">12</literal></expr>, <expr pos:start="199:52" pos:end="199:53"><literal type="number" pos:start="199:52" pos:end="199:53">16</literal></expr>, <expr pos:start="199:56" pos:end="199:57"><literal type="number" pos:start="199:56" pos:end="199:57">32</literal></expr>, <expr pos:start="199:60" pos:end="199:61"><literal type="number" pos:start="199:60" pos:end="199:61">64</literal></expr>, <expr pos:start="199:64" pos:end="199:66"><literal type="number" pos:start="199:64" pos:end="199:66">128</literal></expr>, <expr pos:start="199:69" pos:end="199:71"><literal type="number" pos:start="199:69" pos:end="199:71">256</literal></expr>

    }</block></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="205:5" pos:end="217:5"><if pos:start="205:5" pos:end="211:5">if <condition pos:start="205:8" pos:end="205:17">(<expr pos:start="205:9" pos:end="205:16"><name pos:start="205:9" pos:end="205:11">OP0</name> <operator pos:start="205:13" pos:end="205:14">&gt;=</operator> <literal type="number" pos:start="205:16" pos:end="205:16">8</literal></expr>)</condition> <block pos:start="205:19" pos:end="211:5">{<block_content pos:start="207:9" pos:end="209:47">

        <expr_stmt pos:start="207:9" pos:end="207:33"><expr pos:start="207:9" pos:end="207:32"><name pos:start="207:9" pos:end="207:19"><name pos:start="207:9" pos:end="207:10">dc</name><operator pos:start="207:11" pos:end="207:12">-&gt;</operator><name pos:start="207:13" pos:end="207:19">next_pc</name></name> <operator pos:start="207:21" pos:end="207:21">=</operator> <name pos:start="207:23" pos:end="207:28"><name pos:start="207:23" pos:end="207:24">dc</name><operator pos:start="207:25" pos:end="207:26">-&gt;</operator><name pos:start="207:27" pos:end="207:28">pc</name></name> <operator pos:start="207:30" pos:end="207:30">+</operator> <literal type="number" pos:start="207:32" pos:end="207:32">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="209:9" pos:end="209:47"><expr pos:start="209:9" pos:end="209:46"><call pos:start="209:9" pos:end="209:46"><name pos:start="209:9" pos:end="209:18">HAS_OPTION</name><argument_list pos:start="209:19" pos:end="209:46">(<argument pos:start="209:20" pos:end="209:45"><expr pos:start="209:20" pos:end="209:45"><name pos:start="209:20" pos:end="209:45">XTENSA_OPTION_CODE_DENSITY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="211:7" pos:end="217:5">else <block pos:start="211:12" pos:end="217:5">{<block_content pos:start="213:9" pos:end="215:44">

        <expr_stmt pos:start="213:9" pos:end="213:33"><expr pos:start="213:9" pos:end="213:32"><name pos:start="213:9" pos:end="213:19"><name pos:start="213:9" pos:end="213:10">dc</name><operator pos:start="213:11" pos:end="213:12">-&gt;</operator><name pos:start="213:13" pos:end="213:19">next_pc</name></name> <operator pos:start="213:21" pos:end="213:21">=</operator> <name pos:start="213:23" pos:end="213:28"><name pos:start="213:23" pos:end="213:24">dc</name><operator pos:start="213:25" pos:end="213:26">-&gt;</operator><name pos:start="213:27" pos:end="213:28">pc</name></name> <operator pos:start="213:30" pos:end="213:30">+</operator> <literal type="number" pos:start="213:32" pos:end="213:32">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="215:9" pos:end="215:44"><expr pos:start="215:9" pos:end="215:43"><name pos:start="215:9" pos:end="215:10">b2</name> <operator pos:start="215:12" pos:end="215:12">=</operator> <call pos:start="215:14" pos:end="215:43"><name pos:start="215:14" pos:end="215:26">cpu_ldub_code</name><argument_list pos:start="215:27" pos:end="215:43">(<argument pos:start="215:28" pos:end="215:30"><expr pos:start="215:28" pos:end="215:30"><name pos:start="215:28" pos:end="215:30">env</name></expr></argument>, <argument pos:start="215:33" pos:end="215:42"><expr pos:start="215:33" pos:end="215:42"><name pos:start="215:33" pos:end="215:38"><name pos:start="215:33" pos:end="215:34">dc</name><operator pos:start="215:35" pos:end="215:36">-&gt;</operator><name pos:start="215:37" pos:end="215:38">pc</name></name> <operator pos:start="215:40" pos:end="215:40">+</operator> <literal type="number" pos:start="215:42" pos:end="215:42">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <switch pos:start="221:5" pos:end="3797:9">switch <condition pos:start="221:12" pos:end="221:16">(<expr pos:start="221:13" pos:end="221:15"><name pos:start="221:13" pos:end="221:15">OP0</name></expr>)</condition> <block pos:start="221:18" pos:end="3797:9">{<block_content pos:start="223:5" pos:end="3795:13">

    <case pos:start="223:5" pos:end="223:11">case <expr pos:start="223:10" pos:end="223:10"><literal type="number" pos:start="223:10" pos:end="223:10">0</literal></expr>:</case> <comment type="block" pos:start="223:13" pos:end="223:20">/*QRST*/</comment>

        <switch pos:start="225:9" pos:end="2623:9">switch <condition pos:start="225:16" pos:end="225:20">(<expr pos:start="225:17" pos:end="225:19"><name pos:start="225:17" pos:end="225:19">OP1</name></expr>)</condition> <block pos:start="225:22" pos:end="2623:9">{<block_content pos:start="227:9" pos:end="2621:18">

        <case pos:start="227:9" pos:end="227:15">case <expr pos:start="227:14" pos:end="227:14"><literal type="number" pos:start="227:14" pos:end="227:14">0</literal></expr>:</case> <comment type="block" pos:start="227:17" pos:end="227:24">/*RST0*/</comment>

            <switch pos:start="229:13" pos:end="1189:13">switch <condition pos:start="229:20" pos:end="229:24">(<expr pos:start="229:21" pos:end="229:23"><name pos:start="229:21" pos:end="229:23">OP2</name></expr>)</condition> <block pos:start="229:26" pos:end="1189:13">{<block_content pos:start="231:13" pos:end="1187:22">

            <case pos:start="231:13" pos:end="231:19">case <expr pos:start="231:18" pos:end="231:18"><literal type="number" pos:start="231:18" pos:end="231:18">0</literal></expr>:</case> <comment type="block" pos:start="231:21" pos:end="231:27">/*ST0*/</comment>

                <if_stmt pos:start="233:17" pos:end="237:17"><if pos:start="233:17" pos:end="237:17">if <condition pos:start="233:20" pos:end="233:41">(<expr pos:start="233:21" pos:end="233:40"><operator pos:start="233:21" pos:end="233:21">(</operator><name pos:start="233:22" pos:end="233:26">RRR_R</name> <operator pos:start="233:28" pos:end="233:28">&amp;</operator> <literal type="number" pos:start="233:30" pos:end="233:32">0xc</literal><operator pos:start="233:33" pos:end="233:33">)</operator> <operator pos:start="233:35" pos:end="233:36">==</operator> <literal type="number" pos:start="233:38" pos:end="233:40">0x8</literal></expr>)</condition> <block pos:start="233:43" pos:end="237:17">{<block_content pos:start="235:21" pos:end="235:54">

                    <expr_stmt pos:start="235:21" pos:end="235:54"><expr pos:start="235:21" pos:end="235:53"><call pos:start="235:21" pos:end="235:53"><name pos:start="235:21" pos:end="235:30">HAS_OPTION</name><argument_list pos:start="235:31" pos:end="235:53">(<argument pos:start="235:32" pos:end="235:52"><expr pos:start="235:32" pos:end="235:52"><name pos:start="235:32" pos:end="235:52">XTENSA_OPTION_BOOLEAN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <switch pos:start="241:17" pos:end="775:17">switch <condition pos:start="241:24" pos:end="241:30">(<expr pos:start="241:25" pos:end="241:29"><name pos:start="241:25" pos:end="241:29">RRR_R</name></expr>)</condition> <block pos:start="241:32" pos:end="775:17">{<block_content pos:start="243:17" pos:end="771:26">

                <case pos:start="243:17" pos:end="243:23">case <expr pos:start="243:22" pos:end="243:22"><literal type="number" pos:start="243:22" pos:end="243:22">0</literal></expr>:</case> <comment type="block" pos:start="243:25" pos:end="243:32">/*SNM0*/</comment>

                    <switch pos:start="245:21" pos:end="367:21">switch <condition pos:start="245:28" pos:end="245:36">(<expr pos:start="245:29" pos:end="245:35"><name pos:start="245:29" pos:end="245:35">CALLX_M</name></expr>)</condition> <block pos:start="245:38" pos:end="367:21">{<block_content pos:start="247:21" pos:end="365:30">

                    <case pos:start="247:21" pos:end="247:27">case <expr pos:start="247:26" pos:end="247:26"><literal type="number" pos:start="247:26" pos:end="247:26">0</literal></expr>:</case> <comment type="block" pos:start="247:29" pos:end="247:35">/*ILL*/</comment>

                        <expr_stmt pos:start="249:25" pos:end="249:75"><expr pos:start="249:25" pos:end="249:74"><call pos:start="249:25" pos:end="249:74"><name pos:start="249:25" pos:end="249:43">gen_exception_cause</name><argument_list pos:start="249:44" pos:end="249:74">(<argument pos:start="249:45" pos:end="249:46"><expr pos:start="249:45" pos:end="249:46"><name pos:start="249:45" pos:end="249:46">dc</name></expr></argument>, <argument pos:start="249:49" pos:end="249:73"><expr pos:start="249:49" pos:end="249:73"><name pos:start="249:49" pos:end="249:73">ILLEGAL_INSTRUCTION_CAUSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="251:25" pos:end="251:30">break;</break>



                    <case pos:start="255:21" pos:end="255:27">case <expr pos:start="255:26" pos:end="255:26"><literal type="number" pos:start="255:26" pos:end="255:26">1</literal></expr>:</case> <comment type="block" pos:start="255:29" pos:end="255:40">/*reserved*/</comment>

                        <expr_stmt pos:start="257:25" pos:end="257:35"><expr pos:start="257:25" pos:end="257:34"><call pos:start="257:25" pos:end="257:34"><name pos:start="257:25" pos:end="257:32">RESERVED</name><argument_list pos:start="257:33" pos:end="257:34">()</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="259:25" pos:end="259:30">break;</break>



                    <case pos:start="263:21" pos:end="263:27">case <expr pos:start="263:26" pos:end="263:26"><literal type="number" pos:start="263:26" pos:end="263:26">2</literal></expr>:</case> <comment type="block" pos:start="263:29" pos:end="263:34">/*JR*/</comment>

                        <switch pos:start="265:25" pos:end="307:25">switch <condition pos:start="265:32" pos:end="265:40">(<expr pos:start="265:33" pos:end="265:39"><name pos:start="265:33" pos:end="265:39">CALLX_N</name></expr>)</condition> <block pos:start="265:42" pos:end="307:25">{<block_content pos:start="267:25" pos:end="305:34">

                        <case pos:start="267:25" pos:end="267:31">case <expr pos:start="267:30" pos:end="267:30"><literal type="number" pos:start="267:30" pos:end="267:30">0</literal></expr>:</case> <comment type="block" pos:start="267:33" pos:end="267:39">/*RET*/</comment>

                        <case pos:start="269:25" pos:end="269:31">case <expr pos:start="269:30" pos:end="269:30"><literal type="number" pos:start="269:30" pos:end="269:30">2</literal></expr>:</case> <comment type="block" pos:start="269:33" pos:end="269:38">/*JX*/</comment>

                            <expr_stmt pos:start="271:29" pos:end="271:59"><expr pos:start="271:29" pos:end="271:58"><call pos:start="271:29" pos:end="271:58"><name pos:start="271:29" pos:end="271:45">gen_window_check1</name><argument_list pos:start="271:46" pos:end="271:58">(<argument pos:start="271:47" pos:end="271:48"><expr pos:start="271:47" pos:end="271:48"><name pos:start="271:47" pos:end="271:48">dc</name></expr></argument>, <argument pos:start="271:51" pos:end="271:57"><expr pos:start="271:51" pos:end="271:57"><name pos:start="271:51" pos:end="271:57">CALLX_S</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="273:29" pos:end="273:57"><expr pos:start="273:29" pos:end="273:56"><call pos:start="273:29" pos:end="273:56"><name pos:start="273:29" pos:end="273:36">gen_jump</name><argument_list pos:start="273:37" pos:end="273:56">(<argument pos:start="273:38" pos:end="273:39"><expr pos:start="273:38" pos:end="273:39"><name pos:start="273:38" pos:end="273:39">dc</name></expr></argument>, <argument pos:start="273:42" pos:end="273:55"><expr pos:start="273:42" pos:end="273:55"><name pos:start="273:42" pos:end="273:55"><name pos:start="273:42" pos:end="273:46">cpu_R</name><index pos:start="273:47" pos:end="273:55">[<expr pos:start="273:48" pos:end="273:54"><name pos:start="273:48" pos:end="273:54">CALLX_S</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="275:29" pos:end="275:34">break;</break>



                        <case pos:start="279:25" pos:end="279:31">case <expr pos:start="279:30" pos:end="279:30"><literal type="number" pos:start="279:30" pos:end="279:30">1</literal></expr>:</case> <comment type="block" pos:start="279:33" pos:end="279:41">/*RETWw*/</comment>

                            <expr_stmt pos:start="281:29" pos:end="281:72"><expr pos:start="281:29" pos:end="281:71"><call pos:start="281:29" pos:end="281:71"><name pos:start="281:29" pos:end="281:38">HAS_OPTION</name><argument_list pos:start="281:39" pos:end="281:71">(<argument pos:start="281:40" pos:end="281:70"><expr pos:start="281:40" pos:end="281:70"><name pos:start="281:40" pos:end="281:70">XTENSA_OPTION_WINDOWED_REGISTER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <block pos:start="283:29" pos:end="295:29">{<block_content pos:start="285:33" pos:end="293:51">

                                <decl_stmt pos:start="285:33" pos:end="285:69"><decl pos:start="285:33" pos:end="285:68"><type pos:start="285:33" pos:end="285:40"><name pos:start="285:33" pos:end="285:40">TCGv_i32</name></type> <name pos:start="285:42" pos:end="285:44">tmp</name> <init pos:start="285:46" pos:end="285:68">= <expr pos:start="285:48" pos:end="285:68"><call pos:start="285:48" pos:end="285:68"><name pos:start="285:48" pos:end="285:60">tcg_const_i32</name><argument_list pos:start="285:61" pos:end="285:68">(<argument pos:start="285:62" pos:end="285:67"><expr pos:start="285:62" pos:end="285:67"><name pos:start="285:62" pos:end="285:67"><name pos:start="285:62" pos:end="285:63">dc</name><operator pos:start="285:64" pos:end="285:65">-&gt;</operator><name pos:start="285:66" pos:end="285:67">pc</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                                <expr_stmt pos:start="287:33" pos:end="287:55"><expr pos:start="287:33" pos:end="287:54"><call pos:start="287:33" pos:end="287:54"><name pos:start="287:33" pos:end="287:50">gen_advance_ccount</name><argument_list pos:start="287:51" pos:end="287:54">(<argument pos:start="287:52" pos:end="287:53"><expr pos:start="287:52" pos:end="287:53"><name pos:start="287:52" pos:end="287:53">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="289:33" pos:end="289:67"><expr pos:start="289:33" pos:end="289:66"><call pos:start="289:33" pos:end="289:66"><name pos:start="289:33" pos:end="289:47">gen_helper_retw</name><argument_list pos:start="289:48" pos:end="289:66">(<argument pos:start="289:49" pos:end="289:51"><expr pos:start="289:49" pos:end="289:51"><name pos:start="289:49" pos:end="289:51">tmp</name></expr></argument>, <argument pos:start="289:54" pos:end="289:60"><expr pos:start="289:54" pos:end="289:60"><name pos:start="289:54" pos:end="289:60">cpu_env</name></expr></argument>, <argument pos:start="289:63" pos:end="289:65"><expr pos:start="289:63" pos:end="289:65"><name pos:start="289:63" pos:end="289:65">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="291:33" pos:end="291:50"><expr pos:start="291:33" pos:end="291:49"><call pos:start="291:33" pos:end="291:49"><name pos:start="291:33" pos:end="291:40">gen_jump</name><argument_list pos:start="291:41" pos:end="291:49">(<argument pos:start="291:42" pos:end="291:43"><expr pos:start="291:42" pos:end="291:43"><name pos:start="291:42" pos:end="291:43">dc</name></expr></argument>, <argument pos:start="291:46" pos:end="291:48"><expr pos:start="291:46" pos:end="291:48"><name pos:start="291:46" pos:end="291:48">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="293:33" pos:end="293:51"><expr pos:start="293:33" pos:end="293:50"><call pos:start="293:33" pos:end="293:50"><name pos:start="293:33" pos:end="293:45">tcg_temp_free</name><argument_list pos:start="293:46" pos:end="293:50">(<argument pos:start="293:47" pos:end="293:49"><expr pos:start="293:47" pos:end="293:49"><name pos:start="293:47" pos:end="293:49">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block>

                            <break pos:start="297:29" pos:end="297:34">break;</break>



                        <case pos:start="301:25" pos:end="301:31">case <expr pos:start="301:30" pos:end="301:30"><literal type="number" pos:start="301:30" pos:end="301:30">3</literal></expr>:</case> <comment type="block" pos:start="301:33" pos:end="301:44">/*reserved*/</comment>

                            <expr_stmt pos:start="303:29" pos:end="303:39"><expr pos:start="303:29" pos:end="303:38"><call pos:start="303:29" pos:end="303:38"><name pos:start="303:29" pos:end="303:36">RESERVED</name><argument_list pos:start="303:37" pos:end="303:38">()</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="305:29" pos:end="305:34">break;</break>

                        </block_content>}</block></switch>

                        <break pos:start="309:25" pos:end="309:30">break;</break>



                    <case pos:start="313:21" pos:end="313:27">case <expr pos:start="313:26" pos:end="313:26"><literal type="number" pos:start="313:26" pos:end="313:26">3</literal></expr>:</case> <comment type="block" pos:start="313:29" pos:end="313:37">/*CALLX*/</comment>

                        <expr_stmt pos:start="315:25" pos:end="315:69"><expr pos:start="315:25" pos:end="315:68"><call pos:start="315:25" pos:end="315:68"><name pos:start="315:25" pos:end="315:41">gen_window_check2</name><argument_list pos:start="315:42" pos:end="315:68">(<argument pos:start="315:43" pos:end="315:44"><expr pos:start="315:43" pos:end="315:44"><name pos:start="315:43" pos:end="315:44">dc</name></expr></argument>, <argument pos:start="315:47" pos:end="315:53"><expr pos:start="315:47" pos:end="315:53"><name pos:start="315:47" pos:end="315:53">CALLX_S</name></expr></argument>, <argument pos:start="315:56" pos:end="315:67"><expr pos:start="315:56" pos:end="315:67"><name pos:start="315:56" pos:end="315:62">CALLX_N</name> <operator pos:start="315:64" pos:end="315:65">&lt;&lt;</operator> <literal type="number" pos:start="315:67" pos:end="315:67">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <switch pos:start="317:25" pos:end="363:25">switch <condition pos:start="317:32" pos:end="317:40">(<expr pos:start="317:33" pos:end="317:39"><name pos:start="317:33" pos:end="317:39">CALLX_N</name></expr>)</condition> <block pos:start="317:42" pos:end="363:25">{<block_content pos:start="319:25" pos:end="361:34">

                        <case pos:start="319:25" pos:end="319:31">case <expr pos:start="319:30" pos:end="319:30"><literal type="number" pos:start="319:30" pos:end="319:30">0</literal></expr>:</case> <comment type="block" pos:start="319:33" pos:end="319:42">/*CALLX0*/</comment>

                            <block pos:start="321:29" pos:end="333:29">{<block_content pos:start="323:33" pos:end="331:51">

                                <decl_stmt pos:start="323:33" pos:end="323:66"><decl pos:start="323:33" pos:end="323:65"><type pos:start="323:33" pos:end="323:40"><name pos:start="323:33" pos:end="323:40">TCGv_i32</name></type> <name pos:start="323:42" pos:end="323:44">tmp</name> <init pos:start="323:46" pos:end="323:65">= <expr pos:start="323:48" pos:end="323:65"><call pos:start="323:48" pos:end="323:65"><name pos:start="323:48" pos:end="323:63">tcg_temp_new_i32</name><argument_list pos:start="323:64" pos:end="323:65">()</argument_list></call></expr></init></decl>;</decl_stmt>

                                <expr_stmt pos:start="325:33" pos:end="325:69"><expr pos:start="325:33" pos:end="325:68"><call pos:start="325:33" pos:end="325:68"><name pos:start="325:33" pos:end="325:47">tcg_gen_mov_i32</name><argument_list pos:start="325:48" pos:end="325:68">(<argument pos:start="325:49" pos:end="325:51"><expr pos:start="325:49" pos:end="325:51"><name pos:start="325:49" pos:end="325:51">tmp</name></expr></argument>, <argument pos:start="325:54" pos:end="325:67"><expr pos:start="325:54" pos:end="325:67"><name pos:start="325:54" pos:end="325:67"><name pos:start="325:54" pos:end="325:58">cpu_R</name><index pos:start="325:59" pos:end="325:67">[<expr pos:start="325:60" pos:end="325:66"><name pos:start="325:60" pos:end="325:66">CALLX_S</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="327:33" pos:end="327:72"><expr pos:start="327:33" pos:end="327:71"><call pos:start="327:33" pos:end="327:71"><name pos:start="327:33" pos:end="327:48">tcg_gen_movi_i32</name><argument_list pos:start="327:49" pos:end="327:71">(<argument pos:start="327:50" pos:end="327:57"><expr pos:start="327:50" pos:end="327:57"><name pos:start="327:50" pos:end="327:57"><name pos:start="327:50" pos:end="327:54">cpu_R</name><index pos:start="327:55" pos:end="327:57">[<expr pos:start="327:56" pos:end="327:56"><literal type="number" pos:start="327:56" pos:end="327:56">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="327:60" pos:end="327:70"><expr pos:start="327:60" pos:end="327:70"><name pos:start="327:60" pos:end="327:70"><name pos:start="327:60" pos:end="327:61">dc</name><operator pos:start="327:62" pos:end="327:63">-&gt;</operator><name pos:start="327:64" pos:end="327:70">next_pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="329:33" pos:end="329:50"><expr pos:start="329:33" pos:end="329:49"><call pos:start="329:33" pos:end="329:49"><name pos:start="329:33" pos:end="329:40">gen_jump</name><argument_list pos:start="329:41" pos:end="329:49">(<argument pos:start="329:42" pos:end="329:43"><expr pos:start="329:42" pos:end="329:43"><name pos:start="329:42" pos:end="329:43">dc</name></expr></argument>, <argument pos:start="329:46" pos:end="329:48"><expr pos:start="329:46" pos:end="329:48"><name pos:start="329:46" pos:end="329:48">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="331:33" pos:end="331:51"><expr pos:start="331:33" pos:end="331:50"><call pos:start="331:33" pos:end="331:50"><name pos:start="331:33" pos:end="331:45">tcg_temp_free</name><argument_list pos:start="331:46" pos:end="331:50">(<argument pos:start="331:47" pos:end="331:49"><expr pos:start="331:47" pos:end="331:49"><name pos:start="331:47" pos:end="331:49">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block>

                            <break pos:start="335:29" pos:end="335:34">break;</break>



                        <case pos:start="339:25" pos:end="339:31">case <expr pos:start="339:30" pos:end="339:30"><literal type="number" pos:start="339:30" pos:end="339:30">1</literal></expr>:</case> <comment type="block" pos:start="339:33" pos:end="339:43">/*CALLX4w*/</comment>

                        <case pos:start="341:25" pos:end="341:31">case <expr pos:start="341:30" pos:end="341:30"><literal type="number" pos:start="341:30" pos:end="341:30">2</literal></expr>:</case> <comment type="block" pos:start="341:33" pos:end="341:43">/*CALLX8w*/</comment>

                        <case pos:start="343:25" pos:end="343:31">case <expr pos:start="343:30" pos:end="343:30"><literal type="number" pos:start="343:30" pos:end="343:30">3</literal></expr>:</case> <comment type="block" pos:start="343:33" pos:end="343:44">/*CALLX12w*/</comment>

                            <expr_stmt pos:start="345:29" pos:end="345:72"><expr pos:start="345:29" pos:end="345:71"><call pos:start="345:29" pos:end="345:71"><name pos:start="345:29" pos:end="345:38">HAS_OPTION</name><argument_list pos:start="345:39" pos:end="345:71">(<argument pos:start="345:40" pos:end="345:70"><expr pos:start="345:40" pos:end="345:70"><name pos:start="345:40" pos:end="345:70">XTENSA_OPTION_WINDOWED_REGISTER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <block pos:start="347:29" pos:end="359:29">{<block_content pos:start="349:33" pos:end="357:51">

                                <decl_stmt pos:start="349:33" pos:end="349:66"><decl pos:start="349:33" pos:end="349:65"><type pos:start="349:33" pos:end="349:40"><name pos:start="349:33" pos:end="349:40">TCGv_i32</name></type> <name pos:start="349:42" pos:end="349:44">tmp</name> <init pos:start="349:46" pos:end="349:65">= <expr pos:start="349:48" pos:end="349:65"><call pos:start="349:48" pos:end="349:65"><name pos:start="349:48" pos:end="349:63">tcg_temp_new_i32</name><argument_list pos:start="349:64" pos:end="349:65">()</argument_list></call></expr></init></decl>;</decl_stmt>



                                <expr_stmt pos:start="353:33" pos:end="353:69"><expr pos:start="353:33" pos:end="353:68"><call pos:start="353:33" pos:end="353:68"><name pos:start="353:33" pos:end="353:47">tcg_gen_mov_i32</name><argument_list pos:start="353:48" pos:end="353:68">(<argument pos:start="353:49" pos:end="353:51"><expr pos:start="353:49" pos:end="353:51"><name pos:start="353:49" pos:end="353:51">tmp</name></expr></argument>, <argument pos:start="353:54" pos:end="353:67"><expr pos:start="353:54" pos:end="353:67"><name pos:start="353:54" pos:end="353:67"><name pos:start="353:54" pos:end="353:58">cpu_R</name><index pos:start="353:59" pos:end="353:67">[<expr pos:start="353:60" pos:end="353:66"><name pos:start="353:60" pos:end="353:66">CALLX_S</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="355:33" pos:end="355:60"><expr pos:start="355:33" pos:end="355:59"><call pos:start="355:33" pos:end="355:59"><name pos:start="355:33" pos:end="355:41">gen_callw</name><argument_list pos:start="355:42" pos:end="355:59">(<argument pos:start="355:43" pos:end="355:44"><expr pos:start="355:43" pos:end="355:44"><name pos:start="355:43" pos:end="355:44">dc</name></expr></argument>, <argument pos:start="355:47" pos:end="355:53"><expr pos:start="355:47" pos:end="355:53"><name pos:start="355:47" pos:end="355:53">CALLX_N</name></expr></argument>, <argument pos:start="355:56" pos:end="355:58"><expr pos:start="355:56" pos:end="355:58"><name pos:start="355:56" pos:end="355:58">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="357:33" pos:end="357:51"><expr pos:start="357:33" pos:end="357:50"><call pos:start="357:33" pos:end="357:50"><name pos:start="357:33" pos:end="357:45">tcg_temp_free</name><argument_list pos:start="357:46" pos:end="357:50">(<argument pos:start="357:47" pos:end="357:49"><expr pos:start="357:47" pos:end="357:49"><name pos:start="357:47" pos:end="357:49">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block>

                            <break pos:start="361:29" pos:end="361:34">break;</break>

                        </block_content>}</block></switch>

                        <break pos:start="365:25" pos:end="365:30">break;</break>

                    </block_content>}</block></switch>

                    <break pos:start="369:21" pos:end="369:26">break;</break>



                <case pos:start="373:17" pos:end="373:23">case <expr pos:start="373:22" pos:end="373:22"><literal type="number" pos:start="373:22" pos:end="373:22">1</literal></expr>:</case> <comment type="block" pos:start="373:25" pos:end="373:34">/*MOVSPw*/</comment>

                    <expr_stmt pos:start="375:21" pos:end="375:64"><expr pos:start="375:21" pos:end="375:63"><call pos:start="375:21" pos:end="375:63"><name pos:start="375:21" pos:end="375:30">HAS_OPTION</name><argument_list pos:start="375:31" pos:end="375:63">(<argument pos:start="375:32" pos:end="375:62"><expr pos:start="375:32" pos:end="375:62"><name pos:start="375:32" pos:end="375:62">XTENSA_OPTION_WINDOWED_REGISTER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="377:21" pos:end="377:56"><expr pos:start="377:21" pos:end="377:55"><call pos:start="377:21" pos:end="377:55"><name pos:start="377:21" pos:end="377:37">gen_window_check2</name><argument_list pos:start="377:38" pos:end="377:55">(<argument pos:start="377:39" pos:end="377:40"><expr pos:start="377:39" pos:end="377:40"><name pos:start="377:39" pos:end="377:40">dc</name></expr></argument>, <argument pos:start="377:43" pos:end="377:47"><expr pos:start="377:43" pos:end="377:47"><name pos:start="377:43" pos:end="377:47">RRR_T</name></expr></argument>, <argument pos:start="377:50" pos:end="377:54"><expr pos:start="377:50" pos:end="377:54"><name pos:start="377:50" pos:end="377:54">RRR_S</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <block pos:start="379:21" pos:end="391:21">{<block_content pos:start="381:25" pos:end="389:42">

                        <decl_stmt pos:start="381:25" pos:end="381:60"><decl pos:start="381:25" pos:end="381:59"><type pos:start="381:25" pos:end="381:32"><name pos:start="381:25" pos:end="381:32">TCGv_i32</name></type> <name pos:start="381:34" pos:end="381:35">pc</name> <init pos:start="381:37" pos:end="381:59">= <expr pos:start="381:39" pos:end="381:59"><call pos:start="381:39" pos:end="381:59"><name pos:start="381:39" pos:end="381:51">tcg_const_i32</name><argument_list pos:start="381:52" pos:end="381:59">(<argument pos:start="381:53" pos:end="381:58"><expr pos:start="381:53" pos:end="381:58"><name pos:start="381:53" pos:end="381:58"><name pos:start="381:53" pos:end="381:54">dc</name><operator pos:start="381:55" pos:end="381:56">-&gt;</operator><name pos:start="381:57" pos:end="381:58">pc</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="383:25" pos:end="383:47"><expr pos:start="383:25" pos:end="383:46"><call pos:start="383:25" pos:end="383:46"><name pos:start="383:25" pos:end="383:42">gen_advance_ccount</name><argument_list pos:start="383:43" pos:end="383:46">(<argument pos:start="383:44" pos:end="383:45"><expr pos:start="383:44" pos:end="383:45"><name pos:start="383:44" pos:end="383:45">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="385:25" pos:end="385:54"><expr pos:start="385:25" pos:end="385:53"><call pos:start="385:25" pos:end="385:53"><name pos:start="385:25" pos:end="385:40">gen_helper_movsp</name><argument_list pos:start="385:41" pos:end="385:53">(<argument pos:start="385:42" pos:end="385:48"><expr pos:start="385:42" pos:end="385:48"><name pos:start="385:42" pos:end="385:48">cpu_env</name></expr></argument>, <argument pos:start="385:51" pos:end="385:52"><expr pos:start="385:51" pos:end="385:52"><name pos:start="385:51" pos:end="385:52">pc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="387:25" pos:end="387:68"><expr pos:start="387:25" pos:end="387:67"><call pos:start="387:25" pos:end="387:67"><name pos:start="387:25" pos:end="387:39">tcg_gen_mov_i32</name><argument_list pos:start="387:40" pos:end="387:67">(<argument pos:start="387:41" pos:end="387:52"><expr pos:start="387:41" pos:end="387:52"><name pos:start="387:41" pos:end="387:52"><name pos:start="387:41" pos:end="387:45">cpu_R</name><index pos:start="387:46" pos:end="387:52">[<expr pos:start="387:47" pos:end="387:51"><name pos:start="387:47" pos:end="387:51">RRR_T</name></expr>]</index></name></expr></argument>, <argument pos:start="387:55" pos:end="387:66"><expr pos:start="387:55" pos:end="387:66"><name pos:start="387:55" pos:end="387:66"><name pos:start="387:55" pos:end="387:59">cpu_R</name><index pos:start="387:60" pos:end="387:66">[<expr pos:start="387:61" pos:end="387:65"><name pos:start="387:61" pos:end="387:65">RRR_S</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="389:25" pos:end="389:42"><expr pos:start="389:25" pos:end="389:41"><call pos:start="389:25" pos:end="389:41"><name pos:start="389:25" pos:end="389:37">tcg_temp_free</name><argument_list pos:start="389:38" pos:end="389:41">(<argument pos:start="389:39" pos:end="389:40"><expr pos:start="389:39" pos:end="389:40"><name pos:start="389:39" pos:end="389:40">pc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block>

                    <break pos:start="393:21" pos:end="393:26">break;</break>



                <case pos:start="397:17" pos:end="397:23">case <expr pos:start="397:22" pos:end="397:22"><literal type="number" pos:start="397:22" pos:end="397:22">2</literal></expr>:</case> <comment type="block" pos:start="397:25" pos:end="397:32">/*SYNC*/</comment>

                    <switch pos:start="399:21" pos:end="457:21">switch <condition pos:start="399:28" pos:end="399:34">(<expr pos:start="399:29" pos:end="399:33"><name pos:start="399:29" pos:end="399:33">RRR_T</name></expr>)</condition> <block pos:start="399:36" pos:end="457:21">{<block_content pos:start="401:21" pos:end="455:30">

                    <case pos:start="401:21" pos:end="401:27">case <expr pos:start="401:26" pos:end="401:26"><literal type="number" pos:start="401:26" pos:end="401:26">0</literal></expr>:</case> <comment type="block" pos:start="401:29" pos:end="401:37">/*ISYNC*/</comment>

                        <break pos:start="403:25" pos:end="403:30">break;</break>



                    <case pos:start="407:21" pos:end="407:27">case <expr pos:start="407:26" pos:end="407:26"><literal type="number" pos:start="407:26" pos:end="407:26">1</literal></expr>:</case> <comment type="block" pos:start="407:29" pos:end="407:37">/*RSYNC*/</comment>

                        <break pos:start="409:25" pos:end="409:30">break;</break>



                    <case pos:start="413:21" pos:end="413:27">case <expr pos:start="413:26" pos:end="413:26"><literal type="number" pos:start="413:26" pos:end="413:26">2</literal></expr>:</case> <comment type="block" pos:start="413:29" pos:end="413:37">/*ESYNC*/</comment>

                        <break pos:start="415:25" pos:end="415:30">break;</break>



                    <case pos:start="419:21" pos:end="419:27">case <expr pos:start="419:26" pos:end="419:26"><literal type="number" pos:start="419:26" pos:end="419:26">3</literal></expr>:</case> <comment type="block" pos:start="419:29" pos:end="419:37">/*DSYNC*/</comment>

                        <break pos:start="421:25" pos:end="421:30">break;</break>



                    <case pos:start="425:21" pos:end="425:27">case <expr pos:start="425:26" pos:end="425:26"><literal type="number" pos:start="425:26" pos:end="425:26">8</literal></expr>:</case> <comment type="block" pos:start="425:29" pos:end="425:36">/*EXCW*/</comment>

                        <expr_stmt pos:start="427:25" pos:end="427:60"><expr pos:start="427:25" pos:end="427:59"><call pos:start="427:25" pos:end="427:59"><name pos:start="427:25" pos:end="427:34">HAS_OPTION</name><argument_list pos:start="427:35" pos:end="427:59">(<argument pos:start="427:36" pos:end="427:58"><expr pos:start="427:36" pos:end="427:58"><name pos:start="427:36" pos:end="427:58">XTENSA_OPTION_EXCEPTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="429:25" pos:end="429:30">break;</break>



                    <case pos:start="433:21" pos:end="433:28">case <expr pos:start="433:26" pos:end="433:27"><literal type="number" pos:start="433:26" pos:end="433:27">12</literal></expr>:</case> <comment type="block" pos:start="433:30" pos:end="433:37">/*MEMW*/</comment>

                        <break pos:start="435:25" pos:end="435:30">break;</break>



                    <case pos:start="439:21" pos:end="439:28">case <expr pos:start="439:26" pos:end="439:27"><literal type="number" pos:start="439:26" pos:end="439:27">13</literal></expr>:</case> <comment type="block" pos:start="439:30" pos:end="439:37">/*EXTW*/</comment>

                        <break pos:start="441:25" pos:end="441:30">break;</break>



                    <case pos:start="445:21" pos:end="445:28">case <expr pos:start="445:26" pos:end="445:27"><literal type="number" pos:start="445:26" pos:end="445:27">15</literal></expr>:</case> <comment type="block" pos:start="445:30" pos:end="445:36">/*NOP*/</comment>

                        <break pos:start="447:25" pos:end="447:30">break;</break>



                    <default pos:start="451:21" pos:end="451:28">default:</default> <comment type="block" pos:start="451:30" pos:end="451:41">/*reserved*/</comment>

                        <expr_stmt pos:start="453:25" pos:end="453:35"><expr pos:start="453:25" pos:end="453:34"><call pos:start="453:25" pos:end="453:34"><name pos:start="453:25" pos:end="453:32">RESERVED</name><argument_list pos:start="453:33" pos:end="453:34">()</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="455:25" pos:end="455:30">break;</break>

                    </block_content>}</block></switch>

                    <break pos:start="459:21" pos:end="459:26">break;</break>



                <case pos:start="463:17" pos:end="463:23">case <expr pos:start="463:22" pos:end="463:22"><literal type="number" pos:start="463:22" pos:end="463:22">3</literal></expr>:</case> <comment type="block" pos:start="463:25" pos:end="463:33">/*RFEIx*/</comment>

                    <switch pos:start="465:21" pos:end="617:21">switch <condition pos:start="465:28" pos:end="465:34">(<expr pos:start="465:29" pos:end="465:33"><name pos:start="465:29" pos:end="465:33">RRR_T</name></expr>)</condition> <block pos:start="465:36" pos:end="617:21">{<block_content pos:start="467:21" pos:end="613:30">

                    <case pos:start="467:21" pos:end="467:27">case <expr pos:start="467:26" pos:end="467:26"><literal type="number" pos:start="467:26" pos:end="467:26">0</literal></expr>:</case> <comment type="block" pos:start="467:29" pos:end="467:37">/*RFETx*/</comment>

                        <expr_stmt pos:start="469:25" pos:end="469:60"><expr pos:start="469:25" pos:end="469:59"><call pos:start="469:25" pos:end="469:59"><name pos:start="469:25" pos:end="469:34">HAS_OPTION</name><argument_list pos:start="469:35" pos:end="469:59">(<argument pos:start="469:36" pos:end="469:58"><expr pos:start="469:36" pos:end="469:58"><name pos:start="469:36" pos:end="469:58">XTENSA_OPTION_EXCEPTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <switch pos:start="471:25" pos:end="567:25">switch <condition pos:start="471:32" pos:end="471:38">(<expr pos:start="471:33" pos:end="471:37"><name pos:start="471:33" pos:end="471:37">RRR_S</name></expr>)</condition> <block pos:start="471:40" pos:end="567:25">{<block_content pos:start="473:25" pos:end="565:34">

                        <case pos:start="473:25" pos:end="473:31">case <expr pos:start="473:30" pos:end="473:30"><literal type="number" pos:start="473:30" pos:end="473:30">0</literal></expr>:</case> <comment type="block" pos:start="473:33" pos:end="473:40">/*RFEx*/</comment>

                            <expr_stmt pos:start="475:29" pos:end="475:52"><expr pos:start="475:29" pos:end="475:51"><call pos:start="475:29" pos:end="475:51"><name pos:start="475:29" pos:end="475:47">gen_check_privilege</name><argument_list pos:start="475:48" pos:end="475:51">(<argument pos:start="475:49" pos:end="475:50"><expr pos:start="475:49" pos:end="475:50"><name pos:start="475:49" pos:end="475:50">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="477:29" pos:end="477:79"><expr pos:start="477:29" pos:end="477:78"><call pos:start="477:29" pos:end="477:78"><name pos:start="477:29" pos:end="477:44">tcg_gen_andi_i32</name><argument_list pos:start="477:45" pos:end="477:78">(<argument pos:start="477:46" pos:end="477:55"><expr pos:start="477:46" pos:end="477:55"><name pos:start="477:46" pos:end="477:55"><name pos:start="477:46" pos:end="477:51">cpu_SR</name><index pos:start="477:52" pos:end="477:55">[<expr pos:start="477:53" pos:end="477:54"><name pos:start="477:53" pos:end="477:54">PS</name></expr>]</index></name></expr></argument>, <argument pos:start="477:58" pos:end="477:67"><expr pos:start="477:58" pos:end="477:67"><name pos:start="477:58" pos:end="477:67"><name pos:start="477:58" pos:end="477:63">cpu_SR</name><index pos:start="477:64" pos:end="477:67">[<expr pos:start="477:65" pos:end="477:66"><name pos:start="477:65" pos:end="477:66">PS</name></expr>]</index></name></expr></argument>, <argument pos:start="477:70" pos:end="477:77"><expr pos:start="477:70" pos:end="477:77"><operator pos:start="477:70" pos:end="477:70">~</operator><name pos:start="477:71" pos:end="477:77">PS_EXCM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="479:29" pos:end="479:65"><expr pos:start="479:29" pos:end="479:64"><call pos:start="479:29" pos:end="479:64"><name pos:start="479:29" pos:end="479:55">gen_helper_check_interrupts</name><argument_list pos:start="479:56" pos:end="479:64">(<argument pos:start="479:57" pos:end="479:63"><expr pos:start="479:57" pos:end="479:63"><name pos:start="479:57" pos:end="479:63">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="481:29" pos:end="481:55"><expr pos:start="481:29" pos:end="481:54"><call pos:start="481:29" pos:end="481:54"><name pos:start="481:29" pos:end="481:36">gen_jump</name><argument_list pos:start="481:37" pos:end="481:54">(<argument pos:start="481:38" pos:end="481:39"><expr pos:start="481:38" pos:end="481:39"><name pos:start="481:38" pos:end="481:39">dc</name></expr></argument>, <argument pos:start="481:42" pos:end="481:53"><expr pos:start="481:42" pos:end="481:53"><name pos:start="481:42" pos:end="481:53"><name pos:start="481:42" pos:end="481:47">cpu_SR</name><index pos:start="481:48" pos:end="481:53">[<expr pos:start="481:49" pos:end="481:52"><name pos:start="481:49" pos:end="481:52">EPC1</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="483:29" pos:end="483:34">break;</break>



                        <case pos:start="487:25" pos:end="487:31">case <expr pos:start="487:30" pos:end="487:30"><literal type="number" pos:start="487:30" pos:end="487:30">1</literal></expr>:</case> <comment type="block" pos:start="487:33" pos:end="487:41">/*RFUEx*/</comment>

                            <expr_stmt pos:start="489:29" pos:end="489:39"><expr pos:start="489:29" pos:end="489:38"><call pos:start="489:29" pos:end="489:38"><name pos:start="489:29" pos:end="489:36">RESERVED</name><argument_list pos:start="489:37" pos:end="489:38">()</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="491:29" pos:end="491:34">break;</break>



                        <case pos:start="495:25" pos:end="495:31">case <expr pos:start="495:30" pos:end="495:30"><literal type="number" pos:start="495:30" pos:end="495:30">2</literal></expr>:</case> <comment type="block" pos:start="495:33" pos:end="495:41">/*RFDEx*/</comment>

                            <expr_stmt pos:start="497:29" pos:end="497:52"><expr pos:start="497:29" pos:end="497:51"><call pos:start="497:29" pos:end="497:51"><name pos:start="497:29" pos:end="497:47">gen_check_privilege</name><argument_list pos:start="497:48" pos:end="497:51">(<argument pos:start="497:49" pos:end="497:50"><expr pos:start="497:49" pos:end="497:50"><name pos:start="497:49" pos:end="497:50">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="499:29" pos:end="501:70"><expr pos:start="499:29" pos:end="501:69"><call pos:start="499:29" pos:end="501:69"><name pos:start="499:29" pos:end="499:36">gen_jump</name><argument_list pos:start="499:37" pos:end="501:69">(<argument pos:start="499:38" pos:end="499:39"><expr pos:start="499:38" pos:end="499:39"><name pos:start="499:38" pos:end="499:39">dc</name></expr></argument>, <argument pos:start="499:42" pos:end="501:68"><expr pos:start="499:42" pos:end="501:68"><name pos:start="499:42" pos:end="501:68"><name pos:start="499:42" pos:end="499:47">cpu_SR</name><index pos:start="499:48" pos:end="501:68">[

                                    <expr pos:start="501:37" pos:end="501:67"><ternary pos:start="501:37" pos:end="501:67"><condition pos:start="501:37" pos:end="501:55"><expr pos:start="501:37" pos:end="501:53"><name pos:start="501:37" pos:end="501:53"><name pos:start="501:37" pos:end="501:38">dc</name><operator pos:start="501:39" pos:end="501:40">-&gt;</operator><name pos:start="501:41" pos:end="501:46">config</name><operator pos:start="501:47" pos:end="501:48">-&gt;</operator><name pos:start="501:49" pos:end="501:53">ndepc</name></name></expr> ?</condition><then pos:start="501:57" pos:end="501:60"> <expr pos:start="501:57" pos:end="501:60"><name pos:start="501:57" pos:end="501:60">DEPC</name></expr> </then><else pos:start="501:62" pos:end="501:67">: <expr pos:start="501:64" pos:end="501:67"><name pos:start="501:64" pos:end="501:67">EPC1</name></expr></else></ternary></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="503:29" pos:end="503:34">break;</break>



                        <case pos:start="507:25" pos:end="507:31">case <expr pos:start="507:30" pos:end="507:30"><literal type="number" pos:start="507:30" pos:end="507:30">4</literal></expr>:</case> <comment type="block" pos:start="507:33" pos:end="507:41">/*RFWOw*/</comment>

                        <case pos:start="509:25" pos:end="509:31">case <expr pos:start="509:30" pos:end="509:30"><literal type="number" pos:start="509:30" pos:end="509:30">5</literal></expr>:</case> <comment type="block" pos:start="509:33" pos:end="509:41">/*RFWUw*/</comment>

                            <expr_stmt pos:start="511:29" pos:end="511:72"><expr pos:start="511:29" pos:end="511:71"><call pos:start="511:29" pos:end="511:71"><name pos:start="511:29" pos:end="511:38">HAS_OPTION</name><argument_list pos:start="511:39" pos:end="511:71">(<argument pos:start="511:40" pos:end="511:70"><expr pos:start="511:40" pos:end="511:70"><name pos:start="511:40" pos:end="511:70">XTENSA_OPTION_WINDOWED_REGISTER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="513:29" pos:end="513:52"><expr pos:start="513:29" pos:end="513:51"><call pos:start="513:29" pos:end="513:51"><name pos:start="513:29" pos:end="513:47">gen_check_privilege</name><argument_list pos:start="513:48" pos:end="513:51">(<argument pos:start="513:49" pos:end="513:50"><expr pos:start="513:49" pos:end="513:50"><name pos:start="513:49" pos:end="513:50">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <block pos:start="515:29" pos:end="555:29">{<block_content pos:start="517:33" pos:end="553:51">

                                <decl_stmt pos:start="517:33" pos:end="517:64"><decl pos:start="517:33" pos:end="517:63"><type pos:start="517:33" pos:end="517:40"><name pos:start="517:33" pos:end="517:40">TCGv_i32</name></type> <name pos:start="517:42" pos:end="517:44">tmp</name> <init pos:start="517:46" pos:end="517:63">= <expr pos:start="517:48" pos:end="517:63"><call pos:start="517:48" pos:end="517:63"><name pos:start="517:48" pos:end="517:60">tcg_const_i32</name><argument_list pos:start="517:61" pos:end="517:63">(<argument pos:start="517:62" pos:end="517:62"><expr pos:start="517:62" pos:end="517:62"><literal type="number" pos:start="517:62" pos:end="517:62">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                                <expr_stmt pos:start="521:33" pos:end="523:74"><expr pos:start="521:33" pos:end="523:73"><call pos:start="521:33" pos:end="523:73"><name pos:start="521:33" pos:end="521:48">tcg_gen_andi_i32</name><argument_list pos:start="521:49" pos:end="523:73">(

                                        <argument pos:start="523:41" pos:end="523:50"><expr pos:start="523:41" pos:end="523:50"><name pos:start="523:41" pos:end="523:50"><name pos:start="523:41" pos:end="523:46">cpu_SR</name><index pos:start="523:47" pos:end="523:50">[<expr pos:start="523:48" pos:end="523:49"><name pos:start="523:48" pos:end="523:49">PS</name></expr>]</index></name></expr></argument>, <argument pos:start="523:53" pos:end="523:62"><expr pos:start="523:53" pos:end="523:62"><name pos:start="523:53" pos:end="523:62"><name pos:start="523:53" pos:end="523:58">cpu_SR</name><index pos:start="523:59" pos:end="523:62">[<expr pos:start="523:60" pos:end="523:61"><name pos:start="523:60" pos:end="523:61">PS</name></expr>]</index></name></expr></argument>, <argument pos:start="523:65" pos:end="523:72"><expr pos:start="523:65" pos:end="523:72"><operator pos:start="523:65" pos:end="523:65">~</operator><name pos:start="523:66" pos:end="523:72">PS_EXCM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="525:33" pos:end="525:79"><expr pos:start="525:33" pos:end="525:78"><call pos:start="525:33" pos:end="525:78"><name pos:start="525:33" pos:end="525:47">tcg_gen_shl_i32</name><argument_list pos:start="525:48" pos:end="525:78">(<argument pos:start="525:49" pos:end="525:51"><expr pos:start="525:49" pos:end="525:51"><name pos:start="525:49" pos:end="525:51">tmp</name></expr></argument>, <argument pos:start="525:54" pos:end="525:56"><expr pos:start="525:54" pos:end="525:56"><name pos:start="525:54" pos:end="525:56">tmp</name></expr></argument>, <argument pos:start="525:59" pos:end="525:77"><expr pos:start="525:59" pos:end="525:77"><name pos:start="525:59" pos:end="525:77"><name pos:start="525:59" pos:end="525:64">cpu_SR</name><index pos:start="525:65" pos:end="525:77">[<expr pos:start="525:66" pos:end="525:76"><name pos:start="525:66" pos:end="525:76">WINDOW_BASE</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                                <if_stmt pos:start="529:33" pos:end="541:33"><if pos:start="529:33" pos:end="535:33">if <condition pos:start="529:36" pos:end="529:47">(<expr pos:start="529:37" pos:end="529:46"><name pos:start="529:37" pos:end="529:41">RRR_S</name> <operator pos:start="529:43" pos:end="529:44">==</operator> <literal type="number" pos:start="529:46" pos:end="529:46">4</literal></expr>)</condition> <block pos:start="529:49" pos:end="535:33">{<block_content pos:start="531:37" pos:end="533:71">

                                    <expr_stmt pos:start="531:37" pos:end="533:71"><expr pos:start="531:37" pos:end="533:70"><call pos:start="531:37" pos:end="533:70"><name pos:start="531:37" pos:end="531:52">tcg_gen_andc_i32</name><argument_list pos:start="531:53" pos:end="533:70">(<argument pos:start="531:54" pos:end="531:73"><expr pos:start="531:54" pos:end="531:73"><name pos:start="531:54" pos:end="531:73"><name pos:start="531:54" pos:end="531:59">cpu_SR</name><index pos:start="531:60" pos:end="531:73">[<expr pos:start="531:61" pos:end="531:72"><name pos:start="531:61" pos:end="531:72">WINDOW_START</name></expr>]</index></name></expr></argument>,

                                            <argument pos:start="533:45" pos:end="533:64"><expr pos:start="533:45" pos:end="533:64"><name pos:start="533:45" pos:end="533:64"><name pos:start="533:45" pos:end="533:50">cpu_SR</name><index pos:start="533:51" pos:end="533:64">[<expr pos:start="533:52" pos:end="533:63"><name pos:start="533:52" pos:end="533:63">WINDOW_START</name></expr>]</index></name></expr></argument>, <argument pos:start="533:67" pos:end="533:69"><expr pos:start="533:67" pos:end="533:69"><name pos:start="533:67" pos:end="533:69">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                </block_content>}</block></if> <else pos:start="535:35" pos:end="541:33">else <block pos:start="535:40" pos:end="541:33">{<block_content pos:start="537:37" pos:end="539:71">

                                    <expr_stmt pos:start="537:37" pos:end="539:71"><expr pos:start="537:37" pos:end="539:70"><call pos:start="537:37" pos:end="539:70"><name pos:start="537:37" pos:end="537:50">tcg_gen_or_i32</name><argument_list pos:start="537:51" pos:end="539:70">(<argument pos:start="537:52" pos:end="537:71"><expr pos:start="537:52" pos:end="537:71"><name pos:start="537:52" pos:end="537:71"><name pos:start="537:52" pos:end="537:57">cpu_SR</name><index pos:start="537:58" pos:end="537:71">[<expr pos:start="537:59" pos:end="537:70"><name pos:start="537:59" pos:end="537:70">WINDOW_START</name></expr>]</index></name></expr></argument>,

                                            <argument pos:start="539:45" pos:end="539:64"><expr pos:start="539:45" pos:end="539:64"><name pos:start="539:45" pos:end="539:64"><name pos:start="539:45" pos:end="539:50">cpu_SR</name><index pos:start="539:51" pos:end="539:64">[<expr pos:start="539:52" pos:end="539:63"><name pos:start="539:52" pos:end="539:63">WINDOW_START</name></expr>]</index></name></expr></argument>, <argument pos:start="539:67" pos:end="539:69"><expr pos:start="539:67" pos:end="539:69"><name pos:start="539:67" pos:end="539:69">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                </block_content>}</block></else></if_stmt>



                                <expr_stmt pos:start="545:33" pos:end="545:64"><expr pos:start="545:33" pos:end="545:63"><call pos:start="545:33" pos:end="545:63"><name pos:start="545:33" pos:end="545:54">gen_helper_restore_owb</name><argument_list pos:start="545:55" pos:end="545:63">(<argument pos:start="545:56" pos:end="545:62"><expr pos:start="545:56" pos:end="545:62"><name pos:start="545:56" pos:end="545:62">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="547:33" pos:end="547:69"><expr pos:start="547:33" pos:end="547:68"><call pos:start="547:33" pos:end="547:68"><name pos:start="547:33" pos:end="547:59">gen_helper_check_interrupts</name><argument_list pos:start="547:60" pos:end="547:68">(<argument pos:start="547:61" pos:end="547:67"><expr pos:start="547:61" pos:end="547:67"><name pos:start="547:61" pos:end="547:67">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="549:33" pos:end="549:59"><expr pos:start="549:33" pos:end="549:58"><call pos:start="549:33" pos:end="549:58"><name pos:start="549:33" pos:end="549:40">gen_jump</name><argument_list pos:start="549:41" pos:end="549:58">(<argument pos:start="549:42" pos:end="549:43"><expr pos:start="549:42" pos:end="549:43"><name pos:start="549:42" pos:end="549:43">dc</name></expr></argument>, <argument pos:start="549:46" pos:end="549:57"><expr pos:start="549:46" pos:end="549:57"><name pos:start="549:46" pos:end="549:57"><name pos:start="549:46" pos:end="549:51">cpu_SR</name><index pos:start="549:52" pos:end="549:57">[<expr pos:start="549:53" pos:end="549:56"><name pos:start="549:53" pos:end="549:56">EPC1</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                                <expr_stmt pos:start="553:33" pos:end="553:51"><expr pos:start="553:33" pos:end="553:50"><call pos:start="553:33" pos:end="553:50"><name pos:start="553:33" pos:end="553:45">tcg_temp_free</name><argument_list pos:start="553:46" pos:end="553:50">(<argument pos:start="553:47" pos:end="553:49"><expr pos:start="553:47" pos:end="553:49"><name pos:start="553:47" pos:end="553:49">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block>

                            <break pos:start="557:29" pos:end="557:34">break;</break>



                        <default pos:start="561:25" pos:end="561:32">default:</default> <comment type="block" pos:start="561:34" pos:end="561:45">/*reserved*/</comment>

                            <expr_stmt pos:start="563:29" pos:end="563:39"><expr pos:start="563:29" pos:end="563:38"><call pos:start="563:29" pos:end="563:38"><name pos:start="563:29" pos:end="563:36">RESERVED</name><argument_list pos:start="563:37" pos:end="563:38">()</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="565:29" pos:end="565:34">break;</break>

                        </block_content>}</block></switch>

                        <break pos:start="569:25" pos:end="569:30">break;</break>



                    <case pos:start="573:21" pos:end="573:27">case <expr pos:start="573:26" pos:end="573:26"><literal type="number" pos:start="573:26" pos:end="573:26">1</literal></expr>:</case> <comment type="block" pos:start="573:29" pos:end="573:36">/*RFIx*/</comment>

                        <expr_stmt pos:start="575:25" pos:end="575:74"><expr pos:start="575:25" pos:end="575:73"><call pos:start="575:25" pos:end="575:73"><name pos:start="575:25" pos:end="575:34">HAS_OPTION</name><argument_list pos:start="575:35" pos:end="575:73">(<argument pos:start="575:36" pos:end="575:72"><expr pos:start="575:36" pos:end="575:72"><name pos:start="575:36" pos:end="575:72">XTENSA_OPTION_HIGH_PRIORITY_INTERRUPT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="577:25" pos:end="595:25"><if pos:start="577:25" pos:end="589:25">if <condition pos:start="577:28" pos:end="577:70">(<expr pos:start="577:29" pos:end="577:69"><name pos:start="577:29" pos:end="577:33">RRR_S</name> <operator pos:start="577:35" pos:end="577:36">&gt;=</operator> <literal type="number" pos:start="577:38" pos:end="577:38">2</literal> <operator pos:start="577:40" pos:end="577:41">&amp;&amp;</operator> <name pos:start="577:43" pos:end="577:47">RRR_S</name> <operator pos:start="577:49" pos:end="577:50">&lt;=</operator> <name pos:start="577:52" pos:end="577:69"><name pos:start="577:52" pos:end="577:53">dc</name><operator pos:start="577:54" pos:end="577:55">-&gt;</operator><name pos:start="577:56" pos:end="577:61">config</name><operator pos:start="577:62" pos:end="577:63">-&gt;</operator><name pos:start="577:64" pos:end="577:69">nlevel</name></name></expr>)</condition> <block pos:start="577:72" pos:end="589:25">{<block_content pos:start="579:29" pos:end="587:67">

                            <expr_stmt pos:start="579:29" pos:end="579:52"><expr pos:start="579:29" pos:end="579:51"><call pos:start="579:29" pos:end="579:51"><name pos:start="579:29" pos:end="579:47">gen_check_privilege</name><argument_list pos:start="579:48" pos:end="579:51">(<argument pos:start="579:49" pos:end="579:50"><expr pos:start="579:49" pos:end="579:50"><name pos:start="579:49" pos:end="579:50">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="581:29" pos:end="583:62"><expr pos:start="581:29" pos:end="583:61"><call pos:start="581:29" pos:end="583:61"><name pos:start="581:29" pos:end="581:43">tcg_gen_mov_i32</name><argument_list pos:start="581:44" pos:end="583:61">(<argument pos:start="581:45" pos:end="581:54"><expr pos:start="581:45" pos:end="581:54"><name pos:start="581:45" pos:end="581:54"><name pos:start="581:45" pos:end="581:50">cpu_SR</name><index pos:start="581:51" pos:end="581:54">[<expr pos:start="581:52" pos:end="581:53"><name pos:start="581:52" pos:end="581:53">PS</name></expr>]</index></name></expr></argument>,

                                    <argument pos:start="583:37" pos:end="583:60"><expr pos:start="583:37" pos:end="583:60"><name pos:start="583:37" pos:end="583:60"><name pos:start="583:37" pos:end="583:42">cpu_SR</name><index pos:start="583:43" pos:end="583:60">[<expr pos:start="583:44" pos:end="583:59"><name pos:start="583:44" pos:end="583:47">EPS2</name> <operator pos:start="583:49" pos:end="583:49">+</operator> <name pos:start="583:51" pos:end="583:55">RRR_S</name> <operator pos:start="583:57" pos:end="583:57">-</operator> <literal type="number" pos:start="583:59" pos:end="583:59">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="585:29" pos:end="585:65"><expr pos:start="585:29" pos:end="585:64"><call pos:start="585:29" pos:end="585:64"><name pos:start="585:29" pos:end="585:55">gen_helper_check_interrupts</name><argument_list pos:start="585:56" pos:end="585:64">(<argument pos:start="585:57" pos:end="585:63"><expr pos:start="585:57" pos:end="585:63"><name pos:start="585:57" pos:end="585:63">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="587:29" pos:end="587:67"><expr pos:start="587:29" pos:end="587:66"><call pos:start="587:29" pos:end="587:66"><name pos:start="587:29" pos:end="587:36">gen_jump</name><argument_list pos:start="587:37" pos:end="587:66">(<argument pos:start="587:38" pos:end="587:39"><expr pos:start="587:38" pos:end="587:39"><name pos:start="587:38" pos:end="587:39">dc</name></expr></argument>, <argument pos:start="587:42" pos:end="587:65"><expr pos:start="587:42" pos:end="587:65"><name pos:start="587:42" pos:end="587:65"><name pos:start="587:42" pos:end="587:47">cpu_SR</name><index pos:start="587:48" pos:end="587:65">[<expr pos:start="587:49" pos:end="587:64"><name pos:start="587:49" pos:end="587:52">EPC1</name> <operator pos:start="587:54" pos:end="587:54">+</operator> <name pos:start="587:56" pos:end="587:60">RRR_S</name> <operator pos:start="587:62" pos:end="587:62">-</operator> <literal type="number" pos:start="587:64" pos:end="587:64">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="589:27" pos:end="595:25">else <block pos:start="589:32" pos:end="595:25">{<block_content pos:start="591:29" pos:end="593:79">

                            <expr_stmt pos:start="591:29" pos:end="591:67"><expr pos:start="591:29" pos:end="591:66"><call pos:start="591:29" pos:end="591:66"><name pos:start="591:29" pos:end="591:36">qemu_log</name><argument_list pos:start="591:37" pos:end="591:66">(<argument pos:start="591:38" pos:end="591:58"><expr pos:start="591:38" pos:end="591:58"><literal type="string" pos:start="591:38" pos:end="591:58">"RFI %d is illegal\n"</literal></expr></argument>, <argument pos:start="591:61" pos:end="591:65"><expr pos:start="591:61" pos:end="591:65"><name pos:start="591:61" pos:end="591:65">RRR_S</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="593:29" pos:end="593:79"><expr pos:start="593:29" pos:end="593:78"><call pos:start="593:29" pos:end="593:78"><name pos:start="593:29" pos:end="593:47">gen_exception_cause</name><argument_list pos:start="593:48" pos:end="593:78">(<argument pos:start="593:49" pos:end="593:50"><expr pos:start="593:49" pos:end="593:50"><name pos:start="593:49" pos:end="593:50">dc</name></expr></argument>, <argument pos:start="593:53" pos:end="593:77"><expr pos:start="593:53" pos:end="593:77"><name pos:start="593:53" pos:end="593:77">ILLEGAL_INSTRUCTION_CAUSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <break pos:start="597:25" pos:end="597:30">break;</break>



                    <case pos:start="601:21" pos:end="601:27">case <expr pos:start="601:26" pos:end="601:26"><literal type="number" pos:start="601:26" pos:end="601:26">2</literal></expr>:</case> <comment type="block" pos:start="601:29" pos:end="601:36">/*RFME*/</comment>

                        <expr_stmt pos:start="603:25" pos:end="603:30"><expr pos:start="603:25" pos:end="603:29"><call pos:start="603:25" pos:end="603:29"><name pos:start="603:25" pos:end="603:27">TBD</name><argument_list pos:start="603:28" pos:end="603:29">()</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="605:25" pos:end="605:30">break;</break>



                    <default pos:start="609:21" pos:end="609:28">default:</default> <comment type="block" pos:start="609:30" pos:end="609:41">/*reserved*/</comment>

                        <expr_stmt pos:start="611:25" pos:end="611:35"><expr pos:start="611:25" pos:end="611:34"><call pos:start="611:25" pos:end="611:34"><name pos:start="611:25" pos:end="611:32">RESERVED</name><argument_list pos:start="611:33" pos:end="611:34">()</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="613:25" pos:end="613:30">break;</break>



                    </block_content>}</block></switch>

                    <break pos:start="619:21" pos:end="619:26">break;</break>



                <case pos:start="623:17" pos:end="623:23">case <expr pos:start="623:22" pos:end="623:22"><literal type="number" pos:start="623:22" pos:end="623:22">4</literal></expr>:</case> <comment type="block" pos:start="623:25" pos:end="623:34">/*BREAKx*/</comment>

                    <expr_stmt pos:start="625:21" pos:end="625:52"><expr pos:start="625:21" pos:end="625:51"><call pos:start="625:21" pos:end="625:51"><name pos:start="625:21" pos:end="625:30">HAS_OPTION</name><argument_list pos:start="625:31" pos:end="625:51">(<argument pos:start="625:32" pos:end="625:50"><expr pos:start="625:32" pos:end="625:50"><name pos:start="625:32" pos:end="625:50">XTENSA_OPTION_DEBUG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="627:21" pos:end="631:21"><if pos:start="627:21" pos:end="631:21">if <condition pos:start="627:24" pos:end="627:34">(<expr pos:start="627:25" pos:end="627:33"><name pos:start="627:25" pos:end="627:33"><name pos:start="627:25" pos:end="627:26">dc</name><operator pos:start="627:27" pos:end="627:28">-&gt;</operator><name pos:start="627:29" pos:end="627:33">debug</name></name></expr>)</condition> <block pos:start="627:36" pos:end="631:21">{<block_content pos:start="629:25" pos:end="629:63">

                        <expr_stmt pos:start="629:25" pos:end="629:63"><expr pos:start="629:25" pos:end="629:62"><call pos:start="629:25" pos:end="629:62"><name pos:start="629:25" pos:end="629:43">gen_debug_exception</name><argument_list pos:start="629:44" pos:end="629:62">(<argument pos:start="629:45" pos:end="629:46"><expr pos:start="629:45" pos:end="629:46"><name pos:start="629:45" pos:end="629:46">dc</name></expr></argument>, <argument pos:start="629:49" pos:end="629:61"><expr pos:start="629:49" pos:end="629:61"><name pos:start="629:49" pos:end="629:61">DEBUGCAUSE_BI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <break pos:start="633:21" pos:end="633:26">break;</break>



                <case pos:start="637:17" pos:end="637:23">case <expr pos:start="637:22" pos:end="637:22"><literal type="number" pos:start="637:22" pos:end="637:22">5</literal></expr>:</case> <comment type="block" pos:start="637:25" pos:end="637:36">/*SYSCALLx*/</comment>

                    <expr_stmt pos:start="639:21" pos:end="639:56"><expr pos:start="639:21" pos:end="639:55"><call pos:start="639:21" pos:end="639:55"><name pos:start="639:21" pos:end="639:30">HAS_OPTION</name><argument_list pos:start="639:31" pos:end="639:55">(<argument pos:start="639:32" pos:end="639:54"><expr pos:start="639:32" pos:end="639:54"><name pos:start="639:32" pos:end="639:54">XTENSA_OPTION_EXCEPTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <switch pos:start="641:21" pos:end="677:21">switch <condition pos:start="641:28" pos:end="641:34">(<expr pos:start="641:29" pos:end="641:33"><name pos:start="641:29" pos:end="641:33">RRR_S</name></expr>)</condition> <block pos:start="641:36" pos:end="677:21">{<block_content pos:start="643:21" pos:end="675:30">

                    <case pos:start="643:21" pos:end="643:27">case <expr pos:start="643:26" pos:end="643:26"><literal type="number" pos:start="643:26" pos:end="643:26">0</literal></expr>:</case> <comment type="block" pos:start="643:29" pos:end="643:40">/*SYSCALLx*/</comment>

                        <expr_stmt pos:start="645:25" pos:end="645:63"><expr pos:start="645:25" pos:end="645:62"><call pos:start="645:25" pos:end="645:62"><name pos:start="645:25" pos:end="645:43">gen_exception_cause</name><argument_list pos:start="645:44" pos:end="645:62">(<argument pos:start="645:45" pos:end="645:46"><expr pos:start="645:45" pos:end="645:46"><name pos:start="645:45" pos:end="645:46">dc</name></expr></argument>, <argument pos:start="645:49" pos:end="645:61"><expr pos:start="645:49" pos:end="645:61"><name pos:start="645:49" pos:end="645:61">SYSCALL_CAUSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="647:25" pos:end="647:30">break;</break>



                    <case pos:start="651:21" pos:end="651:27">case <expr pos:start="651:26" pos:end="651:26"><literal type="number" pos:start="651:26" pos:end="651:26">1</literal></expr>:</case> <comment type="block" pos:start="651:29" pos:end="651:39">/*SIMCALL*/</comment>

                        <if_stmt pos:start="653:25" pos:end="665:25"><if pos:start="653:25" pos:end="659:25">if <condition pos:start="653:28" pos:end="653:48">(<expr pos:start="653:29" pos:end="653:47"><name pos:start="653:29" pos:end="653:47">semihosting_enabled</name></expr>)</condition> <block pos:start="653:50" pos:end="659:25">{<block_content pos:start="655:29" pos:end="657:56">

                            <expr_stmt pos:start="655:29" pos:end="655:52"><expr pos:start="655:29" pos:end="655:51"><call pos:start="655:29" pos:end="655:51"><name pos:start="655:29" pos:end="655:47">gen_check_privilege</name><argument_list pos:start="655:48" pos:end="655:51">(<argument pos:start="655:49" pos:end="655:50"><expr pos:start="655:49" pos:end="655:50"><name pos:start="655:49" pos:end="655:50">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="657:29" pos:end="657:56"><expr pos:start="657:29" pos:end="657:55"><call pos:start="657:29" pos:end="657:55"><name pos:start="657:29" pos:end="657:46">gen_helper_simcall</name><argument_list pos:start="657:47" pos:end="657:55">(<argument pos:start="657:48" pos:end="657:54"><expr pos:start="657:48" pos:end="657:54"><name pos:start="657:48" pos:end="657:54">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="659:27" pos:end="665:25">else <block pos:start="659:32" pos:end="665:25">{<block_content pos:start="661:29" pos:end="663:79">

                            <expr_stmt pos:start="661:29" pos:end="661:78"><expr pos:start="661:29" pos:end="661:77"><call pos:start="661:29" pos:end="661:77"><name pos:start="661:29" pos:end="661:36">qemu_log</name><argument_list pos:start="661:37" pos:end="661:77">(<argument pos:start="661:38" pos:end="661:76"><expr pos:start="661:38" pos:end="661:76"><literal type="string" pos:start="661:38" pos:end="661:76">"SIMCALL but semihosting is disabled\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="663:29" pos:end="663:79"><expr pos:start="663:29" pos:end="663:78"><call pos:start="663:29" pos:end="663:78"><name pos:start="663:29" pos:end="663:47">gen_exception_cause</name><argument_list pos:start="663:48" pos:end="663:78">(<argument pos:start="663:49" pos:end="663:50"><expr pos:start="663:49" pos:end="663:50"><name pos:start="663:49" pos:end="663:50">dc</name></expr></argument>, <argument pos:start="663:53" pos:end="663:77"><expr pos:start="663:53" pos:end="663:77"><name pos:start="663:53" pos:end="663:77">ILLEGAL_INSTRUCTION_CAUSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <break pos:start="667:25" pos:end="667:30">break;</break>



                    <default pos:start="671:21" pos:end="671:28">default:</default>

                        <expr_stmt pos:start="673:25" pos:end="673:35"><expr pos:start="673:25" pos:end="673:34"><call pos:start="673:25" pos:end="673:34"><name pos:start="673:25" pos:end="673:32">RESERVED</name><argument_list pos:start="673:33" pos:end="673:34">()</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="675:25" pos:end="675:30">break;</break>

                    </block_content>}</block></switch>

                    <break pos:start="679:21" pos:end="679:26">break;</break>



                <case pos:start="683:17" pos:end="683:23">case <expr pos:start="683:22" pos:end="683:22"><literal type="number" pos:start="683:22" pos:end="683:22">6</literal></expr>:</case> <comment type="block" pos:start="683:25" pos:end="683:33">/*RSILx*/</comment>

                    <expr_stmt pos:start="685:21" pos:end="685:56"><expr pos:start="685:21" pos:end="685:55"><call pos:start="685:21" pos:end="685:55"><name pos:start="685:21" pos:end="685:30">HAS_OPTION</name><argument_list pos:start="685:31" pos:end="685:55">(<argument pos:start="685:32" pos:end="685:54"><expr pos:start="685:32" pos:end="685:54"><name pos:start="685:32" pos:end="685:54">XTENSA_OPTION_INTERRUPT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="687:21" pos:end="687:44"><expr pos:start="687:21" pos:end="687:43"><call pos:start="687:21" pos:end="687:43"><name pos:start="687:21" pos:end="687:39">gen_check_privilege</name><argument_list pos:start="687:40" pos:end="687:43">(<argument pos:start="687:41" pos:end="687:42"><expr pos:start="687:41" pos:end="687:42"><name pos:start="687:41" pos:end="687:42">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="689:21" pos:end="689:49"><expr pos:start="689:21" pos:end="689:48"><call pos:start="689:21" pos:end="689:48"><name pos:start="689:21" pos:end="689:37">gen_window_check1</name><argument_list pos:start="689:38" pos:end="689:48">(<argument pos:start="689:39" pos:end="689:40"><expr pos:start="689:39" pos:end="689:40"><name pos:start="689:39" pos:end="689:40">dc</name></expr></argument>, <argument pos:start="689:43" pos:end="689:47"><expr pos:start="689:43" pos:end="689:47"><name pos:start="689:43" pos:end="689:47">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="691:21" pos:end="691:62"><expr pos:start="691:21" pos:end="691:61"><call pos:start="691:21" pos:end="691:61"><name pos:start="691:21" pos:end="691:35">tcg_gen_mov_i32</name><argument_list pos:start="691:36" pos:end="691:61">(<argument pos:start="691:37" pos:end="691:48"><expr pos:start="691:37" pos:end="691:48"><name pos:start="691:37" pos:end="691:48"><name pos:start="691:37" pos:end="691:41">cpu_R</name><index pos:start="691:42" pos:end="691:48">[<expr pos:start="691:43" pos:end="691:47"><name pos:start="691:43" pos:end="691:47">RRR_T</name></expr>]</index></name></expr></argument>, <argument pos:start="691:51" pos:end="691:60"><expr pos:start="691:51" pos:end="691:60"><name pos:start="691:51" pos:end="691:60"><name pos:start="691:51" pos:end="691:56">cpu_SR</name><index pos:start="691:57" pos:end="691:60">[<expr pos:start="691:58" pos:end="691:59"><name pos:start="691:58" pos:end="691:59">PS</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="693:21" pos:end="693:75"><expr pos:start="693:21" pos:end="693:74"><call pos:start="693:21" pos:end="693:74"><name pos:start="693:21" pos:end="693:36">tcg_gen_andi_i32</name><argument_list pos:start="693:37" pos:end="693:74">(<argument pos:start="693:38" pos:end="693:47"><expr pos:start="693:38" pos:end="693:47"><name pos:start="693:38" pos:end="693:47"><name pos:start="693:38" pos:end="693:43">cpu_SR</name><index pos:start="693:44" pos:end="693:47">[<expr pos:start="693:45" pos:end="693:46"><name pos:start="693:45" pos:end="693:46">PS</name></expr>]</index></name></expr></argument>, <argument pos:start="693:50" pos:end="693:59"><expr pos:start="693:50" pos:end="693:59"><name pos:start="693:50" pos:end="693:59"><name pos:start="693:50" pos:end="693:55">cpu_SR</name><index pos:start="693:56" pos:end="693:59">[<expr pos:start="693:57" pos:end="693:58"><name pos:start="693:57" pos:end="693:58">PS</name></expr>]</index></name></expr></argument>, <argument pos:start="693:62" pos:end="693:73"><expr pos:start="693:62" pos:end="693:73"><operator pos:start="693:62" pos:end="693:62">~</operator><name pos:start="693:63" pos:end="693:73">PS_INTLEVEL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="695:21" pos:end="695:67"><expr pos:start="695:21" pos:end="695:66"><call pos:start="695:21" pos:end="695:66"><name pos:start="695:21" pos:end="695:35">tcg_gen_ori_i32</name><argument_list pos:start="695:36" pos:end="695:66">(<argument pos:start="695:37" pos:end="695:46"><expr pos:start="695:37" pos:end="695:46"><name pos:start="695:37" pos:end="695:46"><name pos:start="695:37" pos:end="695:42">cpu_SR</name><index pos:start="695:43" pos:end="695:46">[<expr pos:start="695:44" pos:end="695:45"><name pos:start="695:44" pos:end="695:45">PS</name></expr>]</index></name></expr></argument>, <argument pos:start="695:49" pos:end="695:58"><expr pos:start="695:49" pos:end="695:58"><name pos:start="695:49" pos:end="695:58"><name pos:start="695:49" pos:end="695:54">cpu_SR</name><index pos:start="695:55" pos:end="695:58">[<expr pos:start="695:56" pos:end="695:57"><name pos:start="695:56" pos:end="695:57">PS</name></expr>]</index></name></expr></argument>, <argument pos:start="695:61" pos:end="695:65"><expr pos:start="695:61" pos:end="695:65"><name pos:start="695:61" pos:end="695:65">RRR_S</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="697:21" pos:end="697:57"><expr pos:start="697:21" pos:end="697:56"><call pos:start="697:21" pos:end="697:56"><name pos:start="697:21" pos:end="697:47">gen_helper_check_interrupts</name><argument_list pos:start="697:48" pos:end="697:56">(<argument pos:start="697:49" pos:end="697:55"><expr pos:start="697:49" pos:end="697:55"><name pos:start="697:49" pos:end="697:55">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="699:21" pos:end="699:52"><expr pos:start="699:21" pos:end="699:51"><call pos:start="699:21" pos:end="699:51"><name pos:start="699:21" pos:end="699:44">gen_jumpi_check_loop_end</name><argument_list pos:start="699:45" pos:end="699:51">(<argument pos:start="699:46" pos:end="699:47"><expr pos:start="699:46" pos:end="699:47"><name pos:start="699:46" pos:end="699:47">dc</name></expr></argument>, <argument pos:start="699:50" pos:end="699:50"><expr pos:start="699:50" pos:end="699:50"><literal type="number" pos:start="699:50" pos:end="699:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="701:21" pos:end="701:26">break;</break>



                <case pos:start="705:17" pos:end="705:23">case <expr pos:start="705:22" pos:end="705:22"><literal type="number" pos:start="705:22" pos:end="705:22">7</literal></expr>:</case> <comment type="block" pos:start="705:25" pos:end="705:34">/*WAITIx*/</comment>

                    <expr_stmt pos:start="707:21" pos:end="707:56"><expr pos:start="707:21" pos:end="707:55"><call pos:start="707:21" pos:end="707:55"><name pos:start="707:21" pos:end="707:30">HAS_OPTION</name><argument_list pos:start="707:31" pos:end="707:55">(<argument pos:start="707:32" pos:end="707:54"><expr pos:start="707:32" pos:end="707:54"><name pos:start="707:32" pos:end="707:54">XTENSA_OPTION_INTERRUPT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="709:21" pos:end="709:44"><expr pos:start="709:21" pos:end="709:43"><call pos:start="709:21" pos:end="709:43"><name pos:start="709:21" pos:end="709:39">gen_check_privilege</name><argument_list pos:start="709:40" pos:end="709:43">(<argument pos:start="709:41" pos:end="709:42"><expr pos:start="709:41" pos:end="709:42"><name pos:start="709:41" pos:end="709:42">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="711:21" pos:end="711:41"><expr pos:start="711:21" pos:end="711:40"><call pos:start="711:21" pos:end="711:40"><name pos:start="711:21" pos:end="711:29">gen_waiti</name><argument_list pos:start="711:30" pos:end="711:40">(<argument pos:start="711:31" pos:end="711:32"><expr pos:start="711:31" pos:end="711:32"><name pos:start="711:31" pos:end="711:32">dc</name></expr></argument>, <argument pos:start="711:35" pos:end="711:39"><expr pos:start="711:35" pos:end="711:39"><name pos:start="711:35" pos:end="711:39">RRR_S</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="713:21" pos:end="713:26">break;</break>



                <case pos:start="717:17" pos:end="717:23">case <expr pos:start="717:22" pos:end="717:22"><literal type="number" pos:start="717:22" pos:end="717:22">8</literal></expr>:</case> <comment type="block" pos:start="717:25" pos:end="717:33">/*ANY4p*/</comment>

                <case pos:start="719:17" pos:end="719:23">case <expr pos:start="719:22" pos:end="719:22"><literal type="number" pos:start="719:22" pos:end="719:22">9</literal></expr>:</case> <comment type="block" pos:start="719:25" pos:end="719:33">/*ALL4p*/</comment>

                <case pos:start="721:17" pos:end="721:24">case <expr pos:start="721:22" pos:end="721:23"><literal type="number" pos:start="721:22" pos:end="721:23">10</literal></expr>:</case> <comment type="block" pos:start="721:26" pos:end="721:34">/*ANY8p*/</comment>

                <case pos:start="723:17" pos:end="723:24">case <expr pos:start="723:22" pos:end="723:23"><literal type="number" pos:start="723:22" pos:end="723:23">11</literal></expr>:</case> <comment type="block" pos:start="723:26" pos:end="723:34">/*ALL8p*/</comment>

                    <expr_stmt pos:start="725:21" pos:end="725:54"><expr pos:start="725:21" pos:end="725:53"><call pos:start="725:21" pos:end="725:53"><name pos:start="725:21" pos:end="725:30">HAS_OPTION</name><argument_list pos:start="725:31" pos:end="725:53">(<argument pos:start="725:32" pos:end="725:52"><expr pos:start="725:32" pos:end="725:52"><name pos:start="725:32" pos:end="725:52">XTENSA_OPTION_BOOLEAN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <block pos:start="727:21" pos:end="761:21">{<block_content pos:start="729:25" pos:end="759:43">

                        <decl_stmt pos:start="729:25" pos:end="729:67"><decl pos:start="729:25" pos:end="729:66"><type pos:start="729:25" pos:end="729:38"><specifier pos:start="729:25" pos:end="729:29">const</specifier> <name pos:start="729:31" pos:end="729:38">unsigned</name></type> <name pos:start="729:40" pos:end="729:44">shift</name> <init pos:start="729:46" pos:end="729:66">= <expr pos:start="729:48" pos:end="729:66"><ternary pos:start="729:48" pos:end="729:66"><condition pos:start="729:48" pos:end="729:60"><expr pos:start="729:48" pos:end="729:58"><operator pos:start="729:48" pos:end="729:48">(</operator><name pos:start="729:49" pos:end="729:53">RRR_R</name> <operator pos:start="729:55" pos:end="729:55">&amp;</operator> <literal type="number" pos:start="729:57" pos:end="729:57">2</literal><operator pos:start="729:58" pos:end="729:58">)</operator></expr> ?</condition><then pos:start="729:62" pos:end="729:62"> <expr pos:start="729:62" pos:end="729:62"><literal type="number" pos:start="729:62" pos:end="729:62">8</literal></expr> </then><else pos:start="729:64" pos:end="729:66">: <expr pos:start="729:66" pos:end="729:66"><literal type="number" pos:start="729:66" pos:end="729:66">4</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="731:25" pos:end="733:61"><decl pos:start="731:25" pos:end="733:60"><type pos:start="731:25" pos:end="731:32"><name pos:start="731:25" pos:end="731:32">TCGv_i32</name></type> <name pos:start="731:34" pos:end="731:37">mask</name> <init pos:start="731:39" pos:end="733:60">= <expr pos:start="731:41" pos:end="733:60"><call pos:start="731:41" pos:end="733:60"><name pos:start="731:41" pos:end="731:53">tcg_const_i32</name><argument_list pos:start="731:54" pos:end="733:60">(

                                <argument pos:start="733:33" pos:end="733:59"><expr pos:start="733:33" pos:end="733:59"><operator pos:start="733:33" pos:end="733:33">(</operator><operator pos:start="733:34" pos:end="733:34">(</operator><literal type="number" pos:start="733:35" pos:end="733:35">1</literal> <operator pos:start="733:37" pos:end="733:38">&lt;&lt;</operator> <name pos:start="733:40" pos:end="733:44">shift</name><operator pos:start="733:45" pos:end="733:45">)</operator> <operator pos:start="733:47" pos:end="733:47">-</operator> <literal type="number" pos:start="733:49" pos:end="733:49">1</literal><operator pos:start="733:50" pos:end="733:50">)</operator> <operator pos:start="733:52" pos:end="733:53">&lt;&lt;</operator> <name pos:start="733:55" pos:end="733:59">RRR_S</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="735:25" pos:end="735:58"><decl pos:start="735:25" pos:end="735:57"><type pos:start="735:25" pos:end="735:32"><name pos:start="735:25" pos:end="735:32">TCGv_i32</name></type> <name pos:start="735:34" pos:end="735:36">tmp</name> <init pos:start="735:38" pos:end="735:57">= <expr pos:start="735:40" pos:end="735:57"><call pos:start="735:40" pos:end="735:57"><name pos:start="735:40" pos:end="735:55">tcg_temp_new_i32</name><argument_list pos:start="735:56" pos:end="735:57">()</argument_list></call></expr></init></decl>;</decl_stmt>



                        <expr_stmt pos:start="739:25" pos:end="739:63"><expr pos:start="739:25" pos:end="739:62"><call pos:start="739:25" pos:end="739:62"><name pos:start="739:25" pos:end="739:39">tcg_gen_and_i32</name><argument_list pos:start="739:40" pos:end="739:62">(<argument pos:start="739:41" pos:end="739:43"><expr pos:start="739:41" pos:end="739:43"><name pos:start="739:41" pos:end="739:43">tmp</name></expr></argument>, <argument pos:start="739:46" pos:end="739:55"><expr pos:start="739:46" pos:end="739:55"><name pos:start="739:46" pos:end="739:55"><name pos:start="739:46" pos:end="739:51">cpu_SR</name><index pos:start="739:52" pos:end="739:55">[<expr pos:start="739:53" pos:end="739:54"><name pos:start="739:53" pos:end="739:54">BR</name></expr>]</index></name></expr></argument>, <argument pos:start="739:58" pos:end="739:61"><expr pos:start="739:58" pos:end="739:61"><name pos:start="739:58" pos:end="739:61">mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="741:25" pos:end="749:25"><if pos:start="741:25" pos:end="745:25">if <condition pos:start="741:28" pos:end="741:38">(<expr pos:start="741:29" pos:end="741:37"><name pos:start="741:29" pos:end="741:33">RRR_R</name> <operator pos:start="741:35" pos:end="741:35">&amp;</operator> <literal type="number" pos:start="741:37" pos:end="741:37">1</literal></expr>)</condition> <block pos:start="741:40" pos:end="745:25">{<block_content pos:start="743:29" pos:end="743:67"> <comment type="block" pos:start="741:42" pos:end="741:48">/*ALL*/</comment>

                            <expr_stmt pos:start="743:29" pos:end="743:67"><expr pos:start="743:29" pos:end="743:66"><call pos:start="743:29" pos:end="743:66"><name pos:start="743:29" pos:end="743:44">tcg_gen_addi_i32</name><argument_list pos:start="743:45" pos:end="743:66">(<argument pos:start="743:46" pos:end="743:48"><expr pos:start="743:46" pos:end="743:48"><name pos:start="743:46" pos:end="743:48">tmp</name></expr></argument>, <argument pos:start="743:51" pos:end="743:53"><expr pos:start="743:51" pos:end="743:53"><name pos:start="743:51" pos:end="743:53">tmp</name></expr></argument>, <argument pos:start="743:56" pos:end="743:65"><expr pos:start="743:56" pos:end="743:65"><literal type="number" pos:start="743:56" pos:end="743:56">1</literal> <operator pos:start="743:58" pos:end="743:59">&lt;&lt;</operator> <name pos:start="743:61" pos:end="743:65">RRR_S</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="745:27" pos:end="749:25">else <block pos:start="745:32" pos:end="749:25">{<block_content pos:start="747:29" pos:end="747:60"> <comment type="block" pos:start="745:34" pos:end="745:40">/*ANY*/</comment>

                            <expr_stmt pos:start="747:29" pos:end="747:60"><expr pos:start="747:29" pos:end="747:59"><call pos:start="747:29" pos:end="747:59"><name pos:start="747:29" pos:end="747:43">tcg_gen_add_i32</name><argument_list pos:start="747:44" pos:end="747:59">(<argument pos:start="747:45" pos:end="747:47"><expr pos:start="747:45" pos:end="747:47"><name pos:start="747:45" pos:end="747:47">tmp</name></expr></argument>, <argument pos:start="747:50" pos:end="747:52"><expr pos:start="747:50" pos:end="747:52"><name pos:start="747:50" pos:end="747:52">tmp</name></expr></argument>, <argument pos:start="747:55" pos:end="747:58"><expr pos:start="747:55" pos:end="747:58"><name pos:start="747:55" pos:end="747:58">mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="751:25" pos:end="751:66"><expr pos:start="751:25" pos:end="751:65"><call pos:start="751:25" pos:end="751:65"><name pos:start="751:25" pos:end="751:40">tcg_gen_shri_i32</name><argument_list pos:start="751:41" pos:end="751:65">(<argument pos:start="751:42" pos:end="751:44"><expr pos:start="751:42" pos:end="751:44"><name pos:start="751:42" pos:end="751:44">tmp</name></expr></argument>, <argument pos:start="751:47" pos:end="751:49"><expr pos:start="751:47" pos:end="751:49"><name pos:start="751:47" pos:end="751:49">tmp</name></expr></argument>, <argument pos:start="751:52" pos:end="751:64"><expr pos:start="751:52" pos:end="751:64"><name pos:start="751:52" pos:end="751:56">RRR_S</name> <operator pos:start="751:58" pos:end="751:58">+</operator> <name pos:start="751:60" pos:end="751:64">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="753:25" pos:end="755:47"><expr pos:start="753:25" pos:end="755:46"><call pos:start="753:25" pos:end="755:46"><name pos:start="753:25" pos:end="753:43">tcg_gen_deposit_i32</name><argument_list pos:start="753:44" pos:end="755:46">(<argument pos:start="753:45" pos:end="753:54"><expr pos:start="753:45" pos:end="753:54"><name pos:start="753:45" pos:end="753:54"><name pos:start="753:45" pos:end="753:50">cpu_SR</name><index pos:start="753:51" pos:end="753:54">[<expr pos:start="753:52" pos:end="753:53"><name pos:start="753:52" pos:end="753:53">BR</name></expr>]</index></name></expr></argument>, <argument pos:start="753:57" pos:end="753:66"><expr pos:start="753:57" pos:end="753:66"><name pos:start="753:57" pos:end="753:66"><name pos:start="753:57" pos:end="753:62">cpu_SR</name><index pos:start="753:63" pos:end="753:66">[<expr pos:start="753:64" pos:end="753:65"><name pos:start="753:64" pos:end="753:65">BR</name></expr>]</index></name></expr></argument>,

                                <argument pos:start="755:33" pos:end="755:35"><expr pos:start="755:33" pos:end="755:35"><name pos:start="755:33" pos:end="755:35">tmp</name></expr></argument>, <argument pos:start="755:38" pos:end="755:42"><expr pos:start="755:38" pos:end="755:42"><name pos:start="755:38" pos:end="755:42">RRR_T</name></expr></argument>, <argument pos:start="755:45" pos:end="755:45"><expr pos:start="755:45" pos:end="755:45"><literal type="number" pos:start="755:45" pos:end="755:45">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="757:25" pos:end="757:44"><expr pos:start="757:25" pos:end="757:43"><call pos:start="757:25" pos:end="757:43"><name pos:start="757:25" pos:end="757:37">tcg_temp_free</name><argument_list pos:start="757:38" pos:end="757:43">(<argument pos:start="757:39" pos:end="757:42"><expr pos:start="757:39" pos:end="757:42"><name pos:start="757:39" pos:end="757:42">mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="759:25" pos:end="759:43"><expr pos:start="759:25" pos:end="759:42"><call pos:start="759:25" pos:end="759:42"><name pos:start="759:25" pos:end="759:37">tcg_temp_free</name><argument_list pos:start="759:38" pos:end="759:42">(<argument pos:start="759:39" pos:end="759:41"><expr pos:start="759:39" pos:end="759:41"><name pos:start="759:39" pos:end="759:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block>

                    <break pos:start="763:21" pos:end="763:26">break;</break>



                <default pos:start="767:17" pos:end="767:24">default:</default> <comment type="block" pos:start="767:26" pos:end="767:37">/*reserved*/</comment>

                    <expr_stmt pos:start="769:21" pos:end="769:31"><expr pos:start="769:21" pos:end="769:30"><call pos:start="769:21" pos:end="769:30"><name pos:start="769:21" pos:end="769:28">RESERVED</name><argument_list pos:start="769:29" pos:end="769:30">()</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="771:21" pos:end="771:26">break;</break>



                </block_content>}</block></switch>

                <break pos:start="777:17" pos:end="777:22">break;</break>



            <case pos:start="781:13" pos:end="781:19">case <expr pos:start="781:18" pos:end="781:18"><literal type="number" pos:start="781:18" pos:end="781:18">1</literal></expr>:</case> <comment type="block" pos:start="781:21" pos:end="781:27">/*AND*/</comment>

                <expr_stmt pos:start="783:17" pos:end="783:59"><expr pos:start="783:17" pos:end="783:58"><call pos:start="783:17" pos:end="783:58"><name pos:start="783:17" pos:end="783:33">gen_window_check3</name><argument_list pos:start="783:34" pos:end="783:58">(<argument pos:start="783:35" pos:end="783:36"><expr pos:start="783:35" pos:end="783:36"><name pos:start="783:35" pos:end="783:36">dc</name></expr></argument>, <argument pos:start="783:39" pos:end="783:43"><expr pos:start="783:39" pos:end="783:43"><name pos:start="783:39" pos:end="783:43">RRR_R</name></expr></argument>, <argument pos:start="783:46" pos:end="783:50"><expr pos:start="783:46" pos:end="783:50"><name pos:start="783:46" pos:end="783:50">RRR_S</name></expr></argument>, <argument pos:start="783:53" pos:end="783:57"><expr pos:start="783:53" pos:end="783:57"><name pos:start="783:53" pos:end="783:57">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="785:17" pos:end="785:74"><expr pos:start="785:17" pos:end="785:73"><call pos:start="785:17" pos:end="785:73"><name pos:start="785:17" pos:end="785:31">tcg_gen_and_i32</name><argument_list pos:start="785:32" pos:end="785:73">(<argument pos:start="785:33" pos:end="785:44"><expr pos:start="785:33" pos:end="785:44"><name pos:start="785:33" pos:end="785:44"><name pos:start="785:33" pos:end="785:37">cpu_R</name><index pos:start="785:38" pos:end="785:44">[<expr pos:start="785:39" pos:end="785:43"><name pos:start="785:39" pos:end="785:43">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="785:47" pos:end="785:58"><expr pos:start="785:47" pos:end="785:58"><name pos:start="785:47" pos:end="785:58"><name pos:start="785:47" pos:end="785:51">cpu_R</name><index pos:start="785:52" pos:end="785:58">[<expr pos:start="785:53" pos:end="785:57"><name pos:start="785:53" pos:end="785:57">RRR_S</name></expr>]</index></name></expr></argument>, <argument pos:start="785:61" pos:end="785:72"><expr pos:start="785:61" pos:end="785:72"><name pos:start="785:61" pos:end="785:72"><name pos:start="785:61" pos:end="785:65">cpu_R</name><index pos:start="785:66" pos:end="785:72">[<expr pos:start="785:67" pos:end="785:71"><name pos:start="785:67" pos:end="785:71">RRR_T</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="787:17" pos:end="787:22">break;</break>



            <case pos:start="791:13" pos:end="791:19">case <expr pos:start="791:18" pos:end="791:18"><literal type="number" pos:start="791:18" pos:end="791:18">2</literal></expr>:</case> <comment type="block" pos:start="791:21" pos:end="791:26">/*OR*/</comment>

                <expr_stmt pos:start="793:17" pos:end="793:59"><expr pos:start="793:17" pos:end="793:58"><call pos:start="793:17" pos:end="793:58"><name pos:start="793:17" pos:end="793:33">gen_window_check3</name><argument_list pos:start="793:34" pos:end="793:58">(<argument pos:start="793:35" pos:end="793:36"><expr pos:start="793:35" pos:end="793:36"><name pos:start="793:35" pos:end="793:36">dc</name></expr></argument>, <argument pos:start="793:39" pos:end="793:43"><expr pos:start="793:39" pos:end="793:43"><name pos:start="793:39" pos:end="793:43">RRR_R</name></expr></argument>, <argument pos:start="793:46" pos:end="793:50"><expr pos:start="793:46" pos:end="793:50"><name pos:start="793:46" pos:end="793:50">RRR_S</name></expr></argument>, <argument pos:start="793:53" pos:end="793:57"><expr pos:start="793:53" pos:end="793:57"><name pos:start="793:53" pos:end="793:57">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="795:17" pos:end="795:73"><expr pos:start="795:17" pos:end="795:72"><call pos:start="795:17" pos:end="795:72"><name pos:start="795:17" pos:end="795:30">tcg_gen_or_i32</name><argument_list pos:start="795:31" pos:end="795:72">(<argument pos:start="795:32" pos:end="795:43"><expr pos:start="795:32" pos:end="795:43"><name pos:start="795:32" pos:end="795:43"><name pos:start="795:32" pos:end="795:36">cpu_R</name><index pos:start="795:37" pos:end="795:43">[<expr pos:start="795:38" pos:end="795:42"><name pos:start="795:38" pos:end="795:42">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="795:46" pos:end="795:57"><expr pos:start="795:46" pos:end="795:57"><name pos:start="795:46" pos:end="795:57"><name pos:start="795:46" pos:end="795:50">cpu_R</name><index pos:start="795:51" pos:end="795:57">[<expr pos:start="795:52" pos:end="795:56"><name pos:start="795:52" pos:end="795:56">RRR_S</name></expr>]</index></name></expr></argument>, <argument pos:start="795:60" pos:end="795:71"><expr pos:start="795:60" pos:end="795:71"><name pos:start="795:60" pos:end="795:71"><name pos:start="795:60" pos:end="795:64">cpu_R</name><index pos:start="795:65" pos:end="795:71">[<expr pos:start="795:66" pos:end="795:70"><name pos:start="795:66" pos:end="795:70">RRR_T</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="797:17" pos:end="797:22">break;</break>



            <case pos:start="801:13" pos:end="801:19">case <expr pos:start="801:18" pos:end="801:18"><literal type="number" pos:start="801:18" pos:end="801:18">3</literal></expr>:</case> <comment type="block" pos:start="801:21" pos:end="801:27">/*XOR*/</comment>

                <expr_stmt pos:start="803:17" pos:end="803:59"><expr pos:start="803:17" pos:end="803:58"><call pos:start="803:17" pos:end="803:58"><name pos:start="803:17" pos:end="803:33">gen_window_check3</name><argument_list pos:start="803:34" pos:end="803:58">(<argument pos:start="803:35" pos:end="803:36"><expr pos:start="803:35" pos:end="803:36"><name pos:start="803:35" pos:end="803:36">dc</name></expr></argument>, <argument pos:start="803:39" pos:end="803:43"><expr pos:start="803:39" pos:end="803:43"><name pos:start="803:39" pos:end="803:43">RRR_R</name></expr></argument>, <argument pos:start="803:46" pos:end="803:50"><expr pos:start="803:46" pos:end="803:50"><name pos:start="803:46" pos:end="803:50">RRR_S</name></expr></argument>, <argument pos:start="803:53" pos:end="803:57"><expr pos:start="803:53" pos:end="803:57"><name pos:start="803:53" pos:end="803:57">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="805:17" pos:end="805:74"><expr pos:start="805:17" pos:end="805:73"><call pos:start="805:17" pos:end="805:73"><name pos:start="805:17" pos:end="805:31">tcg_gen_xor_i32</name><argument_list pos:start="805:32" pos:end="805:73">(<argument pos:start="805:33" pos:end="805:44"><expr pos:start="805:33" pos:end="805:44"><name pos:start="805:33" pos:end="805:44"><name pos:start="805:33" pos:end="805:37">cpu_R</name><index pos:start="805:38" pos:end="805:44">[<expr pos:start="805:39" pos:end="805:43"><name pos:start="805:39" pos:end="805:43">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="805:47" pos:end="805:58"><expr pos:start="805:47" pos:end="805:58"><name pos:start="805:47" pos:end="805:58"><name pos:start="805:47" pos:end="805:51">cpu_R</name><index pos:start="805:52" pos:end="805:58">[<expr pos:start="805:53" pos:end="805:57"><name pos:start="805:53" pos:end="805:57">RRR_S</name></expr>]</index></name></expr></argument>, <argument pos:start="805:61" pos:end="805:72"><expr pos:start="805:61" pos:end="805:72"><name pos:start="805:61" pos:end="805:72"><name pos:start="805:61" pos:end="805:65">cpu_R</name><index pos:start="805:66" pos:end="805:72">[<expr pos:start="805:67" pos:end="805:71"><name pos:start="805:67" pos:end="805:71">RRR_T</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="807:17" pos:end="807:22">break;</break>



            <case pos:start="811:13" pos:end="811:19">case <expr pos:start="811:18" pos:end="811:18"><literal type="number" pos:start="811:18" pos:end="811:18">4</literal></expr>:</case> <comment type="block" pos:start="811:21" pos:end="811:27">/*ST1*/</comment>

                <switch pos:start="813:17" pos:end="963:17">switch <condition pos:start="813:24" pos:end="813:30">(<expr pos:start="813:25" pos:end="813:29"><name pos:start="813:25" pos:end="813:29">RRR_R</name></expr>)</condition> <block pos:start="813:32" pos:end="963:17">{<block_content pos:start="815:17" pos:end="961:26">

                <case pos:start="815:17" pos:end="815:23">case <expr pos:start="815:22" pos:end="815:22"><literal type="number" pos:start="815:22" pos:end="815:22">0</literal></expr>:</case> <comment type="block" pos:start="815:25" pos:end="815:31">/*SSR*/</comment>

                    <expr_stmt pos:start="817:21" pos:end="817:49"><expr pos:start="817:21" pos:end="817:48"><call pos:start="817:21" pos:end="817:48"><name pos:start="817:21" pos:end="817:37">gen_window_check1</name><argument_list pos:start="817:38" pos:end="817:48">(<argument pos:start="817:39" pos:end="817:40"><expr pos:start="817:39" pos:end="817:40"><name pos:start="817:39" pos:end="817:40">dc</name></expr></argument>, <argument pos:start="817:43" pos:end="817:47"><expr pos:start="817:43" pos:end="817:47"><name pos:start="817:43" pos:end="817:47">RRR_S</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="819:21" pos:end="819:58"><expr pos:start="819:21" pos:end="819:57"><call pos:start="819:21" pos:end="819:57"><name pos:start="819:21" pos:end="819:39">gen_right_shift_sar</name><argument_list pos:start="819:40" pos:end="819:57">(<argument pos:start="819:41" pos:end="819:42"><expr pos:start="819:41" pos:end="819:42"><name pos:start="819:41" pos:end="819:42">dc</name></expr></argument>, <argument pos:start="819:45" pos:end="819:56"><expr pos:start="819:45" pos:end="819:56"><name pos:start="819:45" pos:end="819:56"><name pos:start="819:45" pos:end="819:49">cpu_R</name><index pos:start="819:50" pos:end="819:56">[<expr pos:start="819:51" pos:end="819:55"><name pos:start="819:51" pos:end="819:55">RRR_S</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="821:21" pos:end="821:26">break;</break>



                <case pos:start="825:17" pos:end="825:23">case <expr pos:start="825:22" pos:end="825:22"><literal type="number" pos:start="825:22" pos:end="825:22">1</literal></expr>:</case> <comment type="block" pos:start="825:25" pos:end="825:31">/*SSL*/</comment>

                    <expr_stmt pos:start="827:21" pos:end="827:49"><expr pos:start="827:21" pos:end="827:48"><call pos:start="827:21" pos:end="827:48"><name pos:start="827:21" pos:end="827:37">gen_window_check1</name><argument_list pos:start="827:38" pos:end="827:48">(<argument pos:start="827:39" pos:end="827:40"><expr pos:start="827:39" pos:end="827:40"><name pos:start="827:39" pos:end="827:40">dc</name></expr></argument>, <argument pos:start="827:43" pos:end="827:47"><expr pos:start="827:43" pos:end="827:47"><name pos:start="827:43" pos:end="827:47">RRR_S</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="829:21" pos:end="829:57"><expr pos:start="829:21" pos:end="829:56"><call pos:start="829:21" pos:end="829:56"><name pos:start="829:21" pos:end="829:38">gen_left_shift_sar</name><argument_list pos:start="829:39" pos:end="829:56">(<argument pos:start="829:40" pos:end="829:41"><expr pos:start="829:40" pos:end="829:41"><name pos:start="829:40" pos:end="829:41">dc</name></expr></argument>, <argument pos:start="829:44" pos:end="829:55"><expr pos:start="829:44" pos:end="829:55"><name pos:start="829:44" pos:end="829:55"><name pos:start="829:44" pos:end="829:48">cpu_R</name><index pos:start="829:49" pos:end="829:55">[<expr pos:start="829:50" pos:end="829:54"><name pos:start="829:50" pos:end="829:54">RRR_S</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="831:21" pos:end="831:26">break;</break>



                <case pos:start="835:17" pos:end="835:23">case <expr pos:start="835:22" pos:end="835:22"><literal type="number" pos:start="835:22" pos:end="835:22">2</literal></expr>:</case> <comment type="block" pos:start="835:25" pos:end="835:33">/*SSA8L*/</comment>

                    <expr_stmt pos:start="837:21" pos:end="837:49"><expr pos:start="837:21" pos:end="837:48"><call pos:start="837:21" pos:end="837:48"><name pos:start="837:21" pos:end="837:37">gen_window_check1</name><argument_list pos:start="837:38" pos:end="837:48">(<argument pos:start="837:39" pos:end="837:40"><expr pos:start="837:39" pos:end="837:40"><name pos:start="837:39" pos:end="837:40">dc</name></expr></argument>, <argument pos:start="837:43" pos:end="837:47"><expr pos:start="837:43" pos:end="837:47"><name pos:start="837:43" pos:end="837:47">RRR_S</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <block pos:start="839:21" pos:end="849:21">{<block_content pos:start="841:25" pos:end="847:43">

                        <decl_stmt pos:start="841:25" pos:end="841:58"><decl pos:start="841:25" pos:end="841:57"><type pos:start="841:25" pos:end="841:32"><name pos:start="841:25" pos:end="841:32">TCGv_i32</name></type> <name pos:start="841:34" pos:end="841:36">tmp</name> <init pos:start="841:38" pos:end="841:57">= <expr pos:start="841:40" pos:end="841:57"><call pos:start="841:40" pos:end="841:57"><name pos:start="841:40" pos:end="841:55">tcg_temp_new_i32</name><argument_list pos:start="841:56" pos:end="841:57">()</argument_list></call></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="843:25" pos:end="843:63"><expr pos:start="843:25" pos:end="843:62"><call pos:start="843:25" pos:end="843:62"><name pos:start="843:25" pos:end="843:40">tcg_gen_shli_i32</name><argument_list pos:start="843:41" pos:end="843:62">(<argument pos:start="843:42" pos:end="843:44"><expr pos:start="843:42" pos:end="843:44"><name pos:start="843:42" pos:end="843:44">tmp</name></expr></argument>, <argument pos:start="843:47" pos:end="843:58"><expr pos:start="843:47" pos:end="843:58"><name pos:start="843:47" pos:end="843:58"><name pos:start="843:47" pos:end="843:51">cpu_R</name><index pos:start="843:52" pos:end="843:58">[<expr pos:start="843:53" pos:end="843:57"><name pos:start="843:53" pos:end="843:57">RRR_S</name></expr>]</index></name></expr></argument>, <argument pos:start="843:61" pos:end="843:61"><expr pos:start="843:61" pos:end="843:61"><literal type="number" pos:start="843:61" pos:end="843:61">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="845:25" pos:end="845:53"><expr pos:start="845:25" pos:end="845:52"><call pos:start="845:25" pos:end="845:52"><name pos:start="845:25" pos:end="845:43">gen_right_shift_sar</name><argument_list pos:start="845:44" pos:end="845:52">(<argument pos:start="845:45" pos:end="845:46"><expr pos:start="845:45" pos:end="845:46"><name pos:start="845:45" pos:end="845:46">dc</name></expr></argument>, <argument pos:start="845:49" pos:end="845:51"><expr pos:start="845:49" pos:end="845:51"><name pos:start="845:49" pos:end="845:51">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="847:25" pos:end="847:43"><expr pos:start="847:25" pos:end="847:42"><call pos:start="847:25" pos:end="847:42"><name pos:start="847:25" pos:end="847:37">tcg_temp_free</name><argument_list pos:start="847:38" pos:end="847:42">(<argument pos:start="847:39" pos:end="847:41"><expr pos:start="847:39" pos:end="847:41"><name pos:start="847:39" pos:end="847:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block>

                    <break pos:start="851:21" pos:end="851:26">break;</break>



                <case pos:start="855:17" pos:end="855:23">case <expr pos:start="855:22" pos:end="855:22"><literal type="number" pos:start="855:22" pos:end="855:22">3</literal></expr>:</case> <comment type="block" pos:start="855:25" pos:end="855:33">/*SSA8B*/</comment>

                    <expr_stmt pos:start="857:21" pos:end="857:49"><expr pos:start="857:21" pos:end="857:48"><call pos:start="857:21" pos:end="857:48"><name pos:start="857:21" pos:end="857:37">gen_window_check1</name><argument_list pos:start="857:38" pos:end="857:48">(<argument pos:start="857:39" pos:end="857:40"><expr pos:start="857:39" pos:end="857:40"><name pos:start="857:39" pos:end="857:40">dc</name></expr></argument>, <argument pos:start="857:43" pos:end="857:47"><expr pos:start="857:43" pos:end="857:47"><name pos:start="857:43" pos:end="857:47">RRR_S</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <block pos:start="859:21" pos:end="869:21">{<block_content pos:start="861:25" pos:end="867:43">

                        <decl_stmt pos:start="861:25" pos:end="861:58"><decl pos:start="861:25" pos:end="861:57"><type pos:start="861:25" pos:end="861:32"><name pos:start="861:25" pos:end="861:32">TCGv_i32</name></type> <name pos:start="861:34" pos:end="861:36">tmp</name> <init pos:start="861:38" pos:end="861:57">= <expr pos:start="861:40" pos:end="861:57"><call pos:start="861:40" pos:end="861:57"><name pos:start="861:40" pos:end="861:55">tcg_temp_new_i32</name><argument_list pos:start="861:56" pos:end="861:57">()</argument_list></call></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="863:25" pos:end="863:63"><expr pos:start="863:25" pos:end="863:62"><call pos:start="863:25" pos:end="863:62"><name pos:start="863:25" pos:end="863:40">tcg_gen_shli_i32</name><argument_list pos:start="863:41" pos:end="863:62">(<argument pos:start="863:42" pos:end="863:44"><expr pos:start="863:42" pos:end="863:44"><name pos:start="863:42" pos:end="863:44">tmp</name></expr></argument>, <argument pos:start="863:47" pos:end="863:58"><expr pos:start="863:47" pos:end="863:58"><name pos:start="863:47" pos:end="863:58"><name pos:start="863:47" pos:end="863:51">cpu_R</name><index pos:start="863:52" pos:end="863:58">[<expr pos:start="863:53" pos:end="863:57"><name pos:start="863:53" pos:end="863:57">RRR_S</name></expr>]</index></name></expr></argument>, <argument pos:start="863:61" pos:end="863:61"><expr pos:start="863:61" pos:end="863:61"><literal type="number" pos:start="863:61" pos:end="863:61">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="865:25" pos:end="865:52"><expr pos:start="865:25" pos:end="865:51"><call pos:start="865:25" pos:end="865:51"><name pos:start="865:25" pos:end="865:42">gen_left_shift_sar</name><argument_list pos:start="865:43" pos:end="865:51">(<argument pos:start="865:44" pos:end="865:45"><expr pos:start="865:44" pos:end="865:45"><name pos:start="865:44" pos:end="865:45">dc</name></expr></argument>, <argument pos:start="865:48" pos:end="865:50"><expr pos:start="865:48" pos:end="865:50"><name pos:start="865:48" pos:end="865:50">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="867:25" pos:end="867:43"><expr pos:start="867:25" pos:end="867:42"><call pos:start="867:25" pos:end="867:42"><name pos:start="867:25" pos:end="867:37">tcg_temp_free</name><argument_list pos:start="867:38" pos:end="867:42">(<argument pos:start="867:39" pos:end="867:41"><expr pos:start="867:39" pos:end="867:41"><name pos:start="867:39" pos:end="867:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block>

                    <break pos:start="871:21" pos:end="871:26">break;</break>



                <case pos:start="875:17" pos:end="875:23">case <expr pos:start="875:22" pos:end="875:22"><literal type="number" pos:start="875:22" pos:end="875:22">4</literal></expr>:</case> <comment type="block" pos:start="875:25" pos:end="875:32">/*SSAI*/</comment>

                    <block pos:start="877:21" pos:end="887:21">{<block_content pos:start="879:25" pos:end="885:43">

                        <decl_stmt pos:start="879:25" pos:end="881:60"><decl pos:start="879:25" pos:end="881:59"><type pos:start="879:25" pos:end="879:32"><name pos:start="879:25" pos:end="879:32">TCGv_i32</name></type> <name pos:start="879:34" pos:end="879:36">tmp</name> <init pos:start="879:38" pos:end="881:59">= <expr pos:start="879:40" pos:end="881:59"><call pos:start="879:40" pos:end="881:59"><name pos:start="879:40" pos:end="879:52">tcg_const_i32</name><argument_list pos:start="879:53" pos:end="881:59">(

                                <argument pos:start="881:33" pos:end="881:58"><expr pos:start="881:33" pos:end="881:58"><name pos:start="881:33" pos:end="881:37">RRR_S</name> <operator pos:start="881:39" pos:end="881:39">|</operator> <operator pos:start="881:41" pos:end="881:41">(</operator><operator pos:start="881:42" pos:end="881:42">(</operator><name pos:start="881:43" pos:end="881:47">RRR_T</name> <operator pos:start="881:49" pos:end="881:49">&amp;</operator> <literal type="number" pos:start="881:51" pos:end="881:51">1</literal><operator pos:start="881:52" pos:end="881:52">)</operator> <operator pos:start="881:54" pos:end="881:55">&lt;&lt;</operator> <literal type="number" pos:start="881:57" pos:end="881:57">4</literal><operator pos:start="881:58" pos:end="881:58">)</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="883:25" pos:end="883:53"><expr pos:start="883:25" pos:end="883:52"><call pos:start="883:25" pos:end="883:52"><name pos:start="883:25" pos:end="883:43">gen_right_shift_sar</name><argument_list pos:start="883:44" pos:end="883:52">(<argument pos:start="883:45" pos:end="883:46"><expr pos:start="883:45" pos:end="883:46"><name pos:start="883:45" pos:end="883:46">dc</name></expr></argument>, <argument pos:start="883:49" pos:end="883:51"><expr pos:start="883:49" pos:end="883:51"><name pos:start="883:49" pos:end="883:51">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="885:25" pos:end="885:43"><expr pos:start="885:25" pos:end="885:42"><call pos:start="885:25" pos:end="885:42"><name pos:start="885:25" pos:end="885:37">tcg_temp_free</name><argument_list pos:start="885:38" pos:end="885:42">(<argument pos:start="885:39" pos:end="885:41"><expr pos:start="885:39" pos:end="885:41"><name pos:start="885:39" pos:end="885:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block>

                    <break pos:start="889:21" pos:end="889:26">break;</break>



                <case pos:start="893:17" pos:end="893:23">case <expr pos:start="893:22" pos:end="893:22"><literal type="number" pos:start="893:22" pos:end="893:22">6</literal></expr>:</case> <comment type="block" pos:start="893:25" pos:end="893:31">/*RER*/</comment>

                    <expr_stmt pos:start="895:21" pos:end="895:26"><expr pos:start="895:21" pos:end="895:25"><call pos:start="895:21" pos:end="895:25"><name pos:start="895:21" pos:end="895:23">TBD</name><argument_list pos:start="895:24" pos:end="895:25">()</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="897:21" pos:end="897:26">break;</break>



                <case pos:start="901:17" pos:end="901:23">case <expr pos:start="901:22" pos:end="901:22"><literal type="number" pos:start="901:22" pos:end="901:22">7</literal></expr>:</case> <comment type="block" pos:start="901:25" pos:end="901:31">/*WER*/</comment>

                    <expr_stmt pos:start="903:21" pos:end="903:26"><expr pos:start="903:21" pos:end="903:25"><call pos:start="903:21" pos:end="903:25"><name pos:start="903:21" pos:end="903:23">TBD</name><argument_list pos:start="903:24" pos:end="903:25">()</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="905:21" pos:end="905:26">break;</break>



                <case pos:start="909:17" pos:end="909:23">case <expr pos:start="909:22" pos:end="909:22"><literal type="number" pos:start="909:22" pos:end="909:22">8</literal></expr>:</case> <comment type="block" pos:start="909:25" pos:end="909:33">/*ROTWw*/</comment>

                    <expr_stmt pos:start="911:21" pos:end="911:64"><expr pos:start="911:21" pos:end="911:63"><call pos:start="911:21" pos:end="911:63"><name pos:start="911:21" pos:end="911:30">HAS_OPTION</name><argument_list pos:start="911:31" pos:end="911:63">(<argument pos:start="911:32" pos:end="911:62"><expr pos:start="911:32" pos:end="911:62"><name pos:start="911:32" pos:end="911:62">XTENSA_OPTION_WINDOWED_REGISTER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="913:21" pos:end="913:44"><expr pos:start="913:21" pos:end="913:43"><call pos:start="913:21" pos:end="913:43"><name pos:start="913:21" pos:end="913:39">gen_check_privilege</name><argument_list pos:start="913:40" pos:end="913:43">(<argument pos:start="913:41" pos:end="913:42"><expr pos:start="913:41" pos:end="913:42"><name pos:start="913:41" pos:end="913:42">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <block pos:start="915:21" pos:end="927:21">{<block_content pos:start="917:25" pos:end="925:46">

                        <decl_stmt pos:start="917:25" pos:end="919:72"><decl pos:start="917:25" pos:end="919:71"><type pos:start="917:25" pos:end="917:32"><name pos:start="917:25" pos:end="917:32">TCGv_i32</name></type> <name pos:start="917:34" pos:end="917:36">tmp</name> <init pos:start="917:38" pos:end="919:71">= <expr pos:start="917:40" pos:end="919:71"><call pos:start="917:40" pos:end="919:71"><name pos:start="917:40" pos:end="917:52">tcg_const_i32</name><argument_list pos:start="917:53" pos:end="919:71">(

                                <argument pos:start="919:33" pos:end="919:70"><expr pos:start="919:33" pos:end="919:70"><name pos:start="919:33" pos:end="919:37">RRR_T</name> <operator pos:start="919:39" pos:end="919:39">|</operator> <operator pos:start="919:41" pos:end="919:41">(</operator><ternary pos:start="919:42" pos:end="919:69"><condition pos:start="919:42" pos:end="919:54"><expr pos:start="919:42" pos:end="919:52"><operator pos:start="919:42" pos:end="919:42">(</operator><name pos:start="919:43" pos:end="919:47">RRR_T</name> <operator pos:start="919:49" pos:end="919:49">&amp;</operator> <literal type="number" pos:start="919:51" pos:end="919:51">8</literal><operator pos:start="919:52" pos:end="919:52">)</operator></expr> ?</condition><then pos:start="919:56" pos:end="919:65"> <expr pos:start="919:56" pos:end="919:65"><literal type="number" pos:start="919:56" pos:end="919:65">0xfffffff0</literal></expr> </then><else pos:start="919:67" pos:end="919:69">: <expr pos:start="919:69" pos:end="919:69"><literal type="number" pos:start="919:69" pos:end="919:69">0</literal></expr></else></ternary><operator pos:start="919:70" pos:end="919:70">)</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="921:25" pos:end="921:54"><expr pos:start="921:25" pos:end="921:53"><call pos:start="921:25" pos:end="921:53"><name pos:start="921:25" pos:end="921:39">gen_helper_rotw</name><argument_list pos:start="921:40" pos:end="921:53">(<argument pos:start="921:41" pos:end="921:47"><expr pos:start="921:41" pos:end="921:47"><name pos:start="921:41" pos:end="921:47">cpu_env</name></expr></argument>, <argument pos:start="921:50" pos:end="921:52"><expr pos:start="921:50" pos:end="921:52"><name pos:start="921:50" pos:end="921:52">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="923:25" pos:end="923:43"><expr pos:start="923:25" pos:end="923:42"><call pos:start="923:25" pos:end="923:42"><name pos:start="923:25" pos:end="923:37">tcg_temp_free</name><argument_list pos:start="923:38" pos:end="923:42">(<argument pos:start="923:39" pos:end="923:41"><expr pos:start="923:39" pos:end="923:41"><name pos:start="923:39" pos:end="923:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="925:25" pos:end="925:46"><expr pos:start="925:25" pos:end="925:45"><call pos:start="925:25" pos:end="925:45"><name pos:start="925:25" pos:end="925:41">reset_used_window</name><argument_list pos:start="925:42" pos:end="925:45">(<argument pos:start="925:43" pos:end="925:44"><expr pos:start="925:43" pos:end="925:44"><name pos:start="925:43" pos:end="925:44">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block>

                    <break pos:start="929:21" pos:end="929:26">break;</break>



                <case pos:start="933:17" pos:end="933:24">case <expr pos:start="933:22" pos:end="933:23"><literal type="number" pos:start="933:22" pos:end="933:23">14</literal></expr>:</case> <comment type="block" pos:start="933:26" pos:end="933:33">/*NSAu*/</comment>

                    <expr_stmt pos:start="935:21" pos:end="935:58"><expr pos:start="935:21" pos:end="935:57"><call pos:start="935:21" pos:end="935:57"><name pos:start="935:21" pos:end="935:30">HAS_OPTION</name><argument_list pos:start="935:31" pos:end="935:57">(<argument pos:start="935:32" pos:end="935:56"><expr pos:start="935:32" pos:end="935:56"><name pos:start="935:32" pos:end="935:56">XTENSA_OPTION_MISC_OP_NSA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="937:21" pos:end="937:56"><expr pos:start="937:21" pos:end="937:55"><call pos:start="937:21" pos:end="937:55"><name pos:start="937:21" pos:end="937:37">gen_window_check2</name><argument_list pos:start="937:38" pos:end="937:55">(<argument pos:start="937:39" pos:end="937:40"><expr pos:start="937:39" pos:end="937:40"><name pos:start="937:39" pos:end="937:40">dc</name></expr></argument>, <argument pos:start="937:43" pos:end="937:47"><expr pos:start="937:43" pos:end="937:47"><name pos:start="937:43" pos:end="937:47">RRR_S</name></expr></argument>, <argument pos:start="937:50" pos:end="937:54"><expr pos:start="937:50" pos:end="937:54"><name pos:start="937:50" pos:end="937:54">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="939:21" pos:end="939:63"><expr pos:start="939:21" pos:end="939:62"><call pos:start="939:21" pos:end="939:62"><name pos:start="939:21" pos:end="939:34">gen_helper_nsa</name><argument_list pos:start="939:35" pos:end="939:62">(<argument pos:start="939:36" pos:end="939:47"><expr pos:start="939:36" pos:end="939:47"><name pos:start="939:36" pos:end="939:47"><name pos:start="939:36" pos:end="939:40">cpu_R</name><index pos:start="939:41" pos:end="939:47">[<expr pos:start="939:42" pos:end="939:46"><name pos:start="939:42" pos:end="939:46">RRR_T</name></expr>]</index></name></expr></argument>, <argument pos:start="939:50" pos:end="939:61"><expr pos:start="939:50" pos:end="939:61"><name pos:start="939:50" pos:end="939:61"><name pos:start="939:50" pos:end="939:54">cpu_R</name><index pos:start="939:55" pos:end="939:61">[<expr pos:start="939:56" pos:end="939:60"><name pos:start="939:56" pos:end="939:60">RRR_S</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="941:21" pos:end="941:26">break;</break>



                <case pos:start="945:17" pos:end="945:24">case <expr pos:start="945:22" pos:end="945:23"><literal type="number" pos:start="945:22" pos:end="945:23">15</literal></expr>:</case> <comment type="block" pos:start="945:26" pos:end="945:34">/*NSAUu*/</comment>

                    <expr_stmt pos:start="947:21" pos:end="947:58"><expr pos:start="947:21" pos:end="947:57"><call pos:start="947:21" pos:end="947:57"><name pos:start="947:21" pos:end="947:30">HAS_OPTION</name><argument_list pos:start="947:31" pos:end="947:57">(<argument pos:start="947:32" pos:end="947:56"><expr pos:start="947:32" pos:end="947:56"><name pos:start="947:32" pos:end="947:56">XTENSA_OPTION_MISC_OP_NSA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="949:21" pos:end="949:56"><expr pos:start="949:21" pos:end="949:55"><call pos:start="949:21" pos:end="949:55"><name pos:start="949:21" pos:end="949:37">gen_window_check2</name><argument_list pos:start="949:38" pos:end="949:55">(<argument pos:start="949:39" pos:end="949:40"><expr pos:start="949:39" pos:end="949:40"><name pos:start="949:39" pos:end="949:40">dc</name></expr></argument>, <argument pos:start="949:43" pos:end="949:47"><expr pos:start="949:43" pos:end="949:47"><name pos:start="949:43" pos:end="949:47">RRR_S</name></expr></argument>, <argument pos:start="949:50" pos:end="949:54"><expr pos:start="949:50" pos:end="949:54"><name pos:start="949:50" pos:end="949:54">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="951:21" pos:end="951:64"><expr pos:start="951:21" pos:end="951:63"><call pos:start="951:21" pos:end="951:63"><name pos:start="951:21" pos:end="951:35">gen_helper_nsau</name><argument_list pos:start="951:36" pos:end="951:63">(<argument pos:start="951:37" pos:end="951:48"><expr pos:start="951:37" pos:end="951:48"><name pos:start="951:37" pos:end="951:48"><name pos:start="951:37" pos:end="951:41">cpu_R</name><index pos:start="951:42" pos:end="951:48">[<expr pos:start="951:43" pos:end="951:47"><name pos:start="951:43" pos:end="951:47">RRR_T</name></expr>]</index></name></expr></argument>, <argument pos:start="951:51" pos:end="951:62"><expr pos:start="951:51" pos:end="951:62"><name pos:start="951:51" pos:end="951:62"><name pos:start="951:51" pos:end="951:55">cpu_R</name><index pos:start="951:56" pos:end="951:62">[<expr pos:start="951:57" pos:end="951:61"><name pos:start="951:57" pos:end="951:61">RRR_S</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="953:21" pos:end="953:26">break;</break>



                <default pos:start="957:17" pos:end="957:24">default:</default> <comment type="block" pos:start="957:26" pos:end="957:37">/*reserved*/</comment>

                    <expr_stmt pos:start="959:21" pos:end="959:31"><expr pos:start="959:21" pos:end="959:30"><call pos:start="959:21" pos:end="959:30"><name pos:start="959:21" pos:end="959:28">RESERVED</name><argument_list pos:start="959:29" pos:end="959:30">()</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="961:21" pos:end="961:26">break;</break>

                </block_content>}</block></switch>

                <break pos:start="965:17" pos:end="965:22">break;</break>



            <case pos:start="969:13" pos:end="969:19">case <expr pos:start="969:18" pos:end="969:18"><literal type="number" pos:start="969:18" pos:end="969:18">5</literal></expr>:</case> <comment type="block" pos:start="969:21" pos:end="969:27">/*TLB*/</comment>

                <expr_stmt pos:start="971:17" pos:end="977:77"><expr pos:start="971:17" pos:end="977:76"><call pos:start="971:17" pos:end="977:76"><name pos:start="971:17" pos:end="971:31">HAS_OPTION_BITS</name><argument_list pos:start="971:32" pos:end="977:76">(

                        <argument pos:start="973:25" pos:end="977:75"><expr pos:start="973:25" pos:end="977:75"><call pos:start="973:25" pos:end="973:60"><name pos:start="973:25" pos:end="973:41">XTENSA_OPTION_BIT</name><argument_list pos:start="973:42" pos:end="973:60">(<argument pos:start="973:43" pos:end="973:59"><expr pos:start="973:43" pos:end="973:59"><name pos:start="973:43" pos:end="973:59">XTENSA_OPTION_MMU</name></expr></argument>)</argument_list></call> <operator pos:start="973:62" pos:end="973:62">|</operator>

                        <call pos:start="975:25" pos:end="975:74"><name pos:start="975:25" pos:end="975:41">XTENSA_OPTION_BIT</name><argument_list pos:start="975:42" pos:end="975:74">(<argument pos:start="975:43" pos:end="975:73"><expr pos:start="975:43" pos:end="975:73"><name pos:start="975:43" pos:end="975:73">XTENSA_OPTION_REGION_PROTECTION</name></expr></argument>)</argument_list></call> <operator pos:start="975:76" pos:end="975:76">|</operator>

                        <call pos:start="977:25" pos:end="977:75"><name pos:start="977:25" pos:end="977:41">XTENSA_OPTION_BIT</name><argument_list pos:start="977:42" pos:end="977:75">(<argument pos:start="977:43" pos:end="977:74"><expr pos:start="977:43" pos:end="977:74"><name pos:start="977:43" pos:end="977:74">XTENSA_OPTION_REGION_TRANSLATION</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="979:17" pos:end="979:40"><expr pos:start="979:17" pos:end="979:39"><call pos:start="979:17" pos:end="979:39"><name pos:start="979:17" pos:end="979:35">gen_check_privilege</name><argument_list pos:start="979:36" pos:end="979:39">(<argument pos:start="979:37" pos:end="979:38"><expr pos:start="979:37" pos:end="979:38"><name pos:start="979:37" pos:end="979:38">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="981:17" pos:end="981:52"><expr pos:start="981:17" pos:end="981:51"><call pos:start="981:17" pos:end="981:51"><name pos:start="981:17" pos:end="981:33">gen_window_check2</name><argument_list pos:start="981:34" pos:end="981:51">(<argument pos:start="981:35" pos:end="981:36"><expr pos:start="981:35" pos:end="981:36"><name pos:start="981:35" pos:end="981:36">dc</name></expr></argument>, <argument pos:start="981:39" pos:end="981:43"><expr pos:start="981:39" pos:end="981:43"><name pos:start="981:39" pos:end="981:43">RRR_S</name></expr></argument>, <argument pos:start="981:46" pos:end="981:50"><expr pos:start="981:46" pos:end="981:50"><name pos:start="981:46" pos:end="981:50">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <block pos:start="983:17" pos:end="1061:17">{<block_content pos:start="985:21" pos:end="1059:40">

                    <decl_stmt pos:start="985:21" pos:end="985:68"><decl pos:start="985:21" pos:end="985:67"><type pos:start="985:21" pos:end="985:28"><name pos:start="985:21" pos:end="985:28">TCGv_i32</name></type> <name pos:start="985:30" pos:end="985:33">dtlb</name> <init pos:start="985:35" pos:end="985:67">= <expr pos:start="985:37" pos:end="985:67"><call pos:start="985:37" pos:end="985:67"><name pos:start="985:37" pos:end="985:49">tcg_const_i32</name><argument_list pos:start="985:50" pos:end="985:67">(<argument pos:start="985:51" pos:end="985:66"><expr pos:start="985:51" pos:end="985:66"><operator pos:start="985:51" pos:end="985:51">(</operator><name pos:start="985:52" pos:end="985:56">RRR_R</name> <operator pos:start="985:58" pos:end="985:58">&amp;</operator> <literal type="number" pos:start="985:60" pos:end="985:60">8</literal><operator pos:start="985:61" pos:end="985:61">)</operator> <operator pos:start="985:63" pos:end="985:64">!=</operator> <literal type="number" pos:start="985:66" pos:end="985:66">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                    <switch pos:start="989:21" pos:end="1057:21">switch <condition pos:start="989:28" pos:end="989:38">(<expr pos:start="989:29" pos:end="989:37"><name pos:start="989:29" pos:end="989:33">RRR_R</name> <operator pos:start="989:35" pos:end="989:35">&amp;</operator> <literal type="number" pos:start="989:37" pos:end="989:37">7</literal></expr>)</condition> <block pos:start="989:40" pos:end="1057:21">{<block_content pos:start="991:21" pos:end="1055:30">

                    <case pos:start="991:21" pos:end="991:27">case <expr pos:start="991:26" pos:end="991:26"><literal type="number" pos:start="991:26" pos:end="991:26">3</literal></expr>:</case> <comment type="block" pos:start="991:29" pos:end="991:38">/*RITLB0*/</comment> <comment type="block" pos:start="991:40" pos:end="991:49">/*RDTLB0*/</comment>

                        <expr_stmt pos:start="993:25" pos:end="995:61"><expr pos:start="993:25" pos:end="995:60"><call pos:start="993:25" pos:end="995:60"><name pos:start="993:25" pos:end="993:40">gen_helper_rtlb0</name><argument_list pos:start="993:41" pos:end="995:60">(<argument pos:start="993:42" pos:end="993:53"><expr pos:start="993:42" pos:end="993:53"><name pos:start="993:42" pos:end="993:53"><name pos:start="993:42" pos:end="993:46">cpu_R</name><index pos:start="993:47" pos:end="993:53">[<expr pos:start="993:48" pos:end="993:52"><name pos:start="993:48" pos:end="993:52">RRR_T</name></expr>]</index></name></expr></argument>,

                                <argument pos:start="995:33" pos:end="995:39"><expr pos:start="995:33" pos:end="995:39"><name pos:start="995:33" pos:end="995:39">cpu_env</name></expr></argument>, <argument pos:start="995:42" pos:end="995:53"><expr pos:start="995:42" pos:end="995:53"><name pos:start="995:42" pos:end="995:53"><name pos:start="995:42" pos:end="995:46">cpu_R</name><index pos:start="995:47" pos:end="995:53">[<expr pos:start="995:48" pos:end="995:52"><name pos:start="995:48" pos:end="995:52">RRR_S</name></expr>]</index></name></expr></argument>, <argument pos:start="995:56" pos:end="995:59"><expr pos:start="995:56" pos:end="995:59"><name pos:start="995:56" pos:end="995:59">dtlb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="997:25" pos:end="997:30">break;</break>



                    <case pos:start="1001:21" pos:end="1001:27">case <expr pos:start="1001:26" pos:end="1001:26"><literal type="number" pos:start="1001:26" pos:end="1001:26">4</literal></expr>:</case> <comment type="block" pos:start="1001:29" pos:end="1001:37">/*IITLB*/</comment> <comment type="block" pos:start="1001:39" pos:end="1001:47">/*IDTLB*/</comment>

                        <expr_stmt pos:start="1003:25" pos:end="1003:69"><expr pos:start="1003:25" pos:end="1003:68"><call pos:start="1003:25" pos:end="1003:68"><name pos:start="1003:25" pos:end="1003:39">gen_helper_itlb</name><argument_list pos:start="1003:40" pos:end="1003:68">(<argument pos:start="1003:41" pos:end="1003:47"><expr pos:start="1003:41" pos:end="1003:47"><name pos:start="1003:41" pos:end="1003:47">cpu_env</name></expr></argument>, <argument pos:start="1003:50" pos:end="1003:61"><expr pos:start="1003:50" pos:end="1003:61"><name pos:start="1003:50" pos:end="1003:61"><name pos:start="1003:50" pos:end="1003:54">cpu_R</name><index pos:start="1003:55" pos:end="1003:61">[<expr pos:start="1003:56" pos:end="1003:60"><name pos:start="1003:56" pos:end="1003:60">RRR_S</name></expr>]</index></name></expr></argument>, <argument pos:start="1003:64" pos:end="1003:67"><expr pos:start="1003:64" pos:end="1003:67"><name pos:start="1003:64" pos:end="1003:67">dtlb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <comment type="block" pos:start="1005:25" pos:end="1005:74">/* This could change memory mapping, so exit tb */</comment>

                        <expr_stmt pos:start="1007:25" pos:end="1007:57"><expr pos:start="1007:25" pos:end="1007:56"><call pos:start="1007:25" pos:end="1007:56"><name pos:start="1007:25" pos:end="1007:48">gen_jumpi_check_loop_end</name><argument_list pos:start="1007:49" pos:end="1007:56">(<argument pos:start="1007:50" pos:end="1007:51"><expr pos:start="1007:50" pos:end="1007:51"><name pos:start="1007:50" pos:end="1007:51">dc</name></expr></argument>, <argument pos:start="1007:54" pos:end="1007:55"><expr pos:start="1007:54" pos:end="1007:55"><operator pos:start="1007:54" pos:end="1007:54">-</operator><literal type="number" pos:start="1007:55" pos:end="1007:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1009:25" pos:end="1009:30">break;</break>



                    <case pos:start="1013:21" pos:end="1013:27">case <expr pos:start="1013:26" pos:end="1013:26"><literal type="number" pos:start="1013:26" pos:end="1013:26">5</literal></expr>:</case> <comment type="block" pos:start="1013:29" pos:end="1013:37">/*PITLB*/</comment> <comment type="block" pos:start="1013:39" pos:end="1013:47">/*PDTLB*/</comment>

                        <expr_stmt pos:start="1015:25" pos:end="1015:57"><expr pos:start="1015:25" pos:end="1015:56"><call pos:start="1015:25" pos:end="1015:56"><name pos:start="1015:25" pos:end="1015:40">tcg_gen_movi_i32</name><argument_list pos:start="1015:41" pos:end="1015:56">(<argument pos:start="1015:42" pos:end="1015:47"><expr pos:start="1015:42" pos:end="1015:47"><name pos:start="1015:42" pos:end="1015:47">cpu_pc</name></expr></argument>, <argument pos:start="1015:50" pos:end="1015:55"><expr pos:start="1015:50" pos:end="1015:55"><name pos:start="1015:50" pos:end="1015:55"><name pos:start="1015:50" pos:end="1015:51">dc</name><operator pos:start="1015:52" pos:end="1015:53">-&gt;</operator><name pos:start="1015:54" pos:end="1015:55">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1017:25" pos:end="1019:61"><expr pos:start="1017:25" pos:end="1019:60"><call pos:start="1017:25" pos:end="1019:60"><name pos:start="1017:25" pos:end="1017:39">gen_helper_ptlb</name><argument_list pos:start="1017:40" pos:end="1019:60">(<argument pos:start="1017:41" pos:end="1017:52"><expr pos:start="1017:41" pos:end="1017:52"><name pos:start="1017:41" pos:end="1017:52"><name pos:start="1017:41" pos:end="1017:45">cpu_R</name><index pos:start="1017:46" pos:end="1017:52">[<expr pos:start="1017:47" pos:end="1017:51"><name pos:start="1017:47" pos:end="1017:51">RRR_T</name></expr>]</index></name></expr></argument>,

                                <argument pos:start="1019:33" pos:end="1019:39"><expr pos:start="1019:33" pos:end="1019:39"><name pos:start="1019:33" pos:end="1019:39">cpu_env</name></expr></argument>, <argument pos:start="1019:42" pos:end="1019:53"><expr pos:start="1019:42" pos:end="1019:53"><name pos:start="1019:42" pos:end="1019:53"><name pos:start="1019:42" pos:end="1019:46">cpu_R</name><index pos:start="1019:47" pos:end="1019:53">[<expr pos:start="1019:48" pos:end="1019:52"><name pos:start="1019:48" pos:end="1019:52">RRR_S</name></expr>]</index></name></expr></argument>, <argument pos:start="1019:56" pos:end="1019:59"><expr pos:start="1019:56" pos:end="1019:59"><name pos:start="1019:56" pos:end="1019:59">dtlb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1021:25" pos:end="1021:30">break;</break>



                    <case pos:start="1025:21" pos:end="1025:27">case <expr pos:start="1025:26" pos:end="1025:26"><literal type="number" pos:start="1025:26" pos:end="1025:26">6</literal></expr>:</case> <comment type="block" pos:start="1025:29" pos:end="1025:37">/*WITLB*/</comment> <comment type="block" pos:start="1025:39" pos:end="1025:47">/*WDTLB*/</comment>

                        <expr_stmt pos:start="1027:25" pos:end="1029:75"><expr pos:start="1027:25" pos:end="1029:74"><call pos:start="1027:25" pos:end="1029:74"><name pos:start="1027:25" pos:end="1027:39">gen_helper_wtlb</name><argument_list pos:start="1027:40" pos:end="1029:74">(

                                <argument pos:start="1029:33" pos:end="1029:39"><expr pos:start="1029:33" pos:end="1029:39"><name pos:start="1029:33" pos:end="1029:39">cpu_env</name></expr></argument>, <argument pos:start="1029:42" pos:end="1029:53"><expr pos:start="1029:42" pos:end="1029:53"><name pos:start="1029:42" pos:end="1029:53"><name pos:start="1029:42" pos:end="1029:46">cpu_R</name><index pos:start="1029:47" pos:end="1029:53">[<expr pos:start="1029:48" pos:end="1029:52"><name pos:start="1029:48" pos:end="1029:52">RRR_T</name></expr>]</index></name></expr></argument>, <argument pos:start="1029:56" pos:end="1029:67"><expr pos:start="1029:56" pos:end="1029:67"><name pos:start="1029:56" pos:end="1029:67"><name pos:start="1029:56" pos:end="1029:60">cpu_R</name><index pos:start="1029:61" pos:end="1029:67">[<expr pos:start="1029:62" pos:end="1029:66"><name pos:start="1029:62" pos:end="1029:66">RRR_S</name></expr>]</index></name></expr></argument>, <argument pos:start="1029:70" pos:end="1029:73"><expr pos:start="1029:70" pos:end="1029:73"><name pos:start="1029:70" pos:end="1029:73">dtlb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <comment type="block" pos:start="1031:25" pos:end="1031:74">/* This could change memory mapping, so exit tb */</comment>

                        <expr_stmt pos:start="1033:25" pos:end="1033:57"><expr pos:start="1033:25" pos:end="1033:56"><call pos:start="1033:25" pos:end="1033:56"><name pos:start="1033:25" pos:end="1033:48">gen_jumpi_check_loop_end</name><argument_list pos:start="1033:49" pos:end="1033:56">(<argument pos:start="1033:50" pos:end="1033:51"><expr pos:start="1033:50" pos:end="1033:51"><name pos:start="1033:50" pos:end="1033:51">dc</name></expr></argument>, <argument pos:start="1033:54" pos:end="1033:55"><expr pos:start="1033:54" pos:end="1033:55"><operator pos:start="1033:54" pos:end="1033:54">-</operator><literal type="number" pos:start="1033:55" pos:end="1033:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1035:25" pos:end="1035:30">break;</break>



                    <case pos:start="1039:21" pos:end="1039:27">case <expr pos:start="1039:26" pos:end="1039:26"><literal type="number" pos:start="1039:26" pos:end="1039:26">7</literal></expr>:</case> <comment type="block" pos:start="1039:29" pos:end="1039:38">/*RITLB1*/</comment> <comment type="block" pos:start="1039:40" pos:end="1039:49">/*RDTLB1*/</comment>

                        <expr_stmt pos:start="1041:25" pos:end="1043:61"><expr pos:start="1041:25" pos:end="1043:60"><call pos:start="1041:25" pos:end="1043:60"><name pos:start="1041:25" pos:end="1041:40">gen_helper_rtlb1</name><argument_list pos:start="1041:41" pos:end="1043:60">(<argument pos:start="1041:42" pos:end="1041:53"><expr pos:start="1041:42" pos:end="1041:53"><name pos:start="1041:42" pos:end="1041:53"><name pos:start="1041:42" pos:end="1041:46">cpu_R</name><index pos:start="1041:47" pos:end="1041:53">[<expr pos:start="1041:48" pos:end="1041:52"><name pos:start="1041:48" pos:end="1041:52">RRR_T</name></expr>]</index></name></expr></argument>,

                                <argument pos:start="1043:33" pos:end="1043:39"><expr pos:start="1043:33" pos:end="1043:39"><name pos:start="1043:33" pos:end="1043:39">cpu_env</name></expr></argument>, <argument pos:start="1043:42" pos:end="1043:53"><expr pos:start="1043:42" pos:end="1043:53"><name pos:start="1043:42" pos:end="1043:53"><name pos:start="1043:42" pos:end="1043:46">cpu_R</name><index pos:start="1043:47" pos:end="1043:53">[<expr pos:start="1043:48" pos:end="1043:52"><name pos:start="1043:48" pos:end="1043:52">RRR_S</name></expr>]</index></name></expr></argument>, <argument pos:start="1043:56" pos:end="1043:59"><expr pos:start="1043:56" pos:end="1043:59"><name pos:start="1043:56" pos:end="1043:59">dtlb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1045:25" pos:end="1045:30">break;</break>



                    <default pos:start="1049:21" pos:end="1049:28">default:</default>

                        <expr_stmt pos:start="1051:25" pos:end="1051:44"><expr pos:start="1051:25" pos:end="1051:43"><call pos:start="1051:25" pos:end="1051:43"><name pos:start="1051:25" pos:end="1051:37">tcg_temp_free</name><argument_list pos:start="1051:38" pos:end="1051:43">(<argument pos:start="1051:39" pos:end="1051:42"><expr pos:start="1051:39" pos:end="1051:42"><name pos:start="1051:39" pos:end="1051:42">dtlb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1053:25" pos:end="1053:35"><expr pos:start="1053:25" pos:end="1053:34"><call pos:start="1053:25" pos:end="1053:34"><name pos:start="1053:25" pos:end="1053:32">RESERVED</name><argument_list pos:start="1053:33" pos:end="1053:34">()</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1055:25" pos:end="1055:30">break;</break>

                    </block_content>}</block></switch>

                    <expr_stmt pos:start="1059:21" pos:end="1059:40"><expr pos:start="1059:21" pos:end="1059:39"><call pos:start="1059:21" pos:end="1059:39"><name pos:start="1059:21" pos:end="1059:33">tcg_temp_free</name><argument_list pos:start="1059:34" pos:end="1059:39">(<argument pos:start="1059:35" pos:end="1059:38"><expr pos:start="1059:35" pos:end="1059:38"><name pos:start="1059:35" pos:end="1059:38">dtlb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block>

                <break pos:start="1063:17" pos:end="1063:22">break;</break>



            <case pos:start="1067:13" pos:end="1067:19">case <expr pos:start="1067:18" pos:end="1067:18"><literal type="number" pos:start="1067:18" pos:end="1067:18">6</literal></expr>:</case> <comment type="block" pos:start="1067:21" pos:end="1067:27">/*RT0*/</comment>

                <expr_stmt pos:start="1069:17" pos:end="1069:52"><expr pos:start="1069:17" pos:end="1069:51"><call pos:start="1069:17" pos:end="1069:51"><name pos:start="1069:17" pos:end="1069:33">gen_window_check2</name><argument_list pos:start="1069:34" pos:end="1069:51">(<argument pos:start="1069:35" pos:end="1069:36"><expr pos:start="1069:35" pos:end="1069:36"><name pos:start="1069:35" pos:end="1069:36">dc</name></expr></argument>, <argument pos:start="1069:39" pos:end="1069:43"><expr pos:start="1069:39" pos:end="1069:43"><name pos:start="1069:39" pos:end="1069:43">RRR_R</name></expr></argument>, <argument pos:start="1069:46" pos:end="1069:50"><expr pos:start="1069:46" pos:end="1069:50"><name pos:start="1069:46" pos:end="1069:50">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <switch pos:start="1071:17" pos:end="1109:17">switch <condition pos:start="1071:24" pos:end="1071:30">(<expr pos:start="1071:25" pos:end="1071:29"><name pos:start="1071:25" pos:end="1071:29">RRR_S</name></expr>)</condition> <block pos:start="1071:32" pos:end="1109:17">{<block_content pos:start="1073:17" pos:end="1107:26">

                <case pos:start="1073:17" pos:end="1073:23">case <expr pos:start="1073:22" pos:end="1073:22"><literal type="number" pos:start="1073:22" pos:end="1073:22">0</literal></expr>:</case> <comment type="block" pos:start="1073:25" pos:end="1073:31">/*NEG*/</comment>

                    <expr_stmt pos:start="1075:21" pos:end="1075:64"><expr pos:start="1075:21" pos:end="1075:63"><call pos:start="1075:21" pos:end="1075:63"><name pos:start="1075:21" pos:end="1075:35">tcg_gen_neg_i32</name><argument_list pos:start="1075:36" pos:end="1075:63">(<argument pos:start="1075:37" pos:end="1075:48"><expr pos:start="1075:37" pos:end="1075:48"><name pos:start="1075:37" pos:end="1075:48"><name pos:start="1075:37" pos:end="1075:41">cpu_R</name><index pos:start="1075:42" pos:end="1075:48">[<expr pos:start="1075:43" pos:end="1075:47"><name pos:start="1075:43" pos:end="1075:47">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="1075:51" pos:end="1075:62"><expr pos:start="1075:51" pos:end="1075:62"><name pos:start="1075:51" pos:end="1075:62"><name pos:start="1075:51" pos:end="1075:55">cpu_R</name><index pos:start="1075:56" pos:end="1075:62">[<expr pos:start="1075:57" pos:end="1075:61"><name pos:start="1075:57" pos:end="1075:61">RRR_T</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="1077:21" pos:end="1077:26">break;</break>



                <case pos:start="1081:17" pos:end="1081:23">case <expr pos:start="1081:22" pos:end="1081:22"><literal type="number" pos:start="1081:22" pos:end="1081:22">1</literal></expr>:</case> <comment type="block" pos:start="1081:25" pos:end="1081:31">/*ABS*/</comment>

                    <block pos:start="1083:21" pos:end="1097:21">{<block_content pos:start="1085:25" pos:end="1095:45">

                        <decl_stmt pos:start="1085:25" pos:end="1085:52"><decl pos:start="1085:25" pos:end="1085:51"><type pos:start="1085:25" pos:end="1085:27"><name pos:start="1085:25" pos:end="1085:27">int</name></type> <name pos:start="1085:29" pos:end="1085:33">label</name> <init pos:start="1085:35" pos:end="1085:51">= <expr pos:start="1085:37" pos:end="1085:51"><call pos:start="1085:37" pos:end="1085:51"><name pos:start="1085:37" pos:end="1085:49">gen_new_label</name><argument_list pos:start="1085:50" pos:end="1085:51">()</argument_list></call></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="1087:25" pos:end="1087:68"><expr pos:start="1087:25" pos:end="1087:67"><call pos:start="1087:25" pos:end="1087:67"><name pos:start="1087:25" pos:end="1087:39">tcg_gen_mov_i32</name><argument_list pos:start="1087:40" pos:end="1087:67">(<argument pos:start="1087:41" pos:end="1087:52"><expr pos:start="1087:41" pos:end="1087:52"><name pos:start="1087:41" pos:end="1087:52"><name pos:start="1087:41" pos:end="1087:45">cpu_R</name><index pos:start="1087:46" pos:end="1087:52">[<expr pos:start="1087:47" pos:end="1087:51"><name pos:start="1087:47" pos:end="1087:51">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="1087:55" pos:end="1087:66"><expr pos:start="1087:55" pos:end="1087:66"><name pos:start="1087:55" pos:end="1087:66"><name pos:start="1087:55" pos:end="1087:59">cpu_R</name><index pos:start="1087:60" pos:end="1087:66">[<expr pos:start="1087:61" pos:end="1087:65"><name pos:start="1087:61" pos:end="1087:65">RRR_T</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1089:25" pos:end="1091:69"><expr pos:start="1089:25" pos:end="1091:68"><call pos:start="1089:25" pos:end="1091:68"><name pos:start="1089:25" pos:end="1089:43">tcg_gen_brcondi_i32</name><argument_list pos:start="1089:44" pos:end="1091:68">(

                                <argument pos:start="1091:33" pos:end="1091:43"><expr pos:start="1091:33" pos:end="1091:43"><name pos:start="1091:33" pos:end="1091:43">TCG_COND_GE</name></expr></argument>, <argument pos:start="1091:46" pos:end="1091:57"><expr pos:start="1091:46" pos:end="1091:57"><name pos:start="1091:46" pos:end="1091:57"><name pos:start="1091:46" pos:end="1091:50">cpu_R</name><index pos:start="1091:51" pos:end="1091:57">[<expr pos:start="1091:52" pos:end="1091:56"><name pos:start="1091:52" pos:end="1091:56">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="1091:60" pos:end="1091:60"><expr pos:start="1091:60" pos:end="1091:60"><literal type="number" pos:start="1091:60" pos:end="1091:60">0</literal></expr></argument>, <argument pos:start="1091:63" pos:end="1091:67"><expr pos:start="1091:63" pos:end="1091:67"><name pos:start="1091:63" pos:end="1091:67">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1093:25" pos:end="1093:68"><expr pos:start="1093:25" pos:end="1093:67"><call pos:start="1093:25" pos:end="1093:67"><name pos:start="1093:25" pos:end="1093:39">tcg_gen_neg_i32</name><argument_list pos:start="1093:40" pos:end="1093:67">(<argument pos:start="1093:41" pos:end="1093:52"><expr pos:start="1093:41" pos:end="1093:52"><name pos:start="1093:41" pos:end="1093:52"><name pos:start="1093:41" pos:end="1093:45">cpu_R</name><index pos:start="1093:46" pos:end="1093:52">[<expr pos:start="1093:47" pos:end="1093:51"><name pos:start="1093:47" pos:end="1093:51">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="1093:55" pos:end="1093:66"><expr pos:start="1093:55" pos:end="1093:66"><name pos:start="1093:55" pos:end="1093:66"><name pos:start="1093:55" pos:end="1093:59">cpu_R</name><index pos:start="1093:60" pos:end="1093:66">[<expr pos:start="1093:61" pos:end="1093:65"><name pos:start="1093:61" pos:end="1093:65">RRR_T</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1095:25" pos:end="1095:45"><expr pos:start="1095:25" pos:end="1095:44"><call pos:start="1095:25" pos:end="1095:44"><name pos:start="1095:25" pos:end="1095:37">gen_set_label</name><argument_list pos:start="1095:38" pos:end="1095:44">(<argument pos:start="1095:39" pos:end="1095:43"><expr pos:start="1095:39" pos:end="1095:43"><name pos:start="1095:39" pos:end="1095:43">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block>

                    <break pos:start="1099:21" pos:end="1099:26">break;</break>



                <default pos:start="1103:17" pos:end="1103:24">default:</default> <comment type="block" pos:start="1103:26" pos:end="1103:37">/*reserved*/</comment>

                    <expr_stmt pos:start="1105:21" pos:end="1105:31"><expr pos:start="1105:21" pos:end="1105:30"><call pos:start="1105:21" pos:end="1105:30"><name pos:start="1105:21" pos:end="1105:28">RESERVED</name><argument_list pos:start="1105:29" pos:end="1105:30">()</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="1107:21" pos:end="1107:26">break;</break>

                </block_content>}</block></switch>

                <break pos:start="1111:17" pos:end="1111:22">break;</break>



            <case pos:start="1115:13" pos:end="1115:19">case <expr pos:start="1115:18" pos:end="1115:18"><literal type="number" pos:start="1115:18" pos:end="1115:18">7</literal></expr>:</case> <comment type="block" pos:start="1115:21" pos:end="1115:32">/*reserved*/</comment>

                <expr_stmt pos:start="1117:17" pos:end="1117:27"><expr pos:start="1117:17" pos:end="1117:26"><call pos:start="1117:17" pos:end="1117:26"><name pos:start="1117:17" pos:end="1117:24">RESERVED</name><argument_list pos:start="1117:25" pos:end="1117:26">()</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1119:17" pos:end="1119:22">break;</break>



            <case pos:start="1123:13" pos:end="1123:19">case <expr pos:start="1123:18" pos:end="1123:18"><literal type="number" pos:start="1123:18" pos:end="1123:18">8</literal></expr>:</case> <comment type="block" pos:start="1123:21" pos:end="1123:27">/*ADD*/</comment>

                <expr_stmt pos:start="1125:17" pos:end="1125:59"><expr pos:start="1125:17" pos:end="1125:58"><call pos:start="1125:17" pos:end="1125:58"><name pos:start="1125:17" pos:end="1125:33">gen_window_check3</name><argument_list pos:start="1125:34" pos:end="1125:58">(<argument pos:start="1125:35" pos:end="1125:36"><expr pos:start="1125:35" pos:end="1125:36"><name pos:start="1125:35" pos:end="1125:36">dc</name></expr></argument>, <argument pos:start="1125:39" pos:end="1125:43"><expr pos:start="1125:39" pos:end="1125:43"><name pos:start="1125:39" pos:end="1125:43">RRR_R</name></expr></argument>, <argument pos:start="1125:46" pos:end="1125:50"><expr pos:start="1125:46" pos:end="1125:50"><name pos:start="1125:46" pos:end="1125:50">RRR_S</name></expr></argument>, <argument pos:start="1125:53" pos:end="1125:57"><expr pos:start="1125:53" pos:end="1125:57"><name pos:start="1125:53" pos:end="1125:57">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1127:17" pos:end="1127:74"><expr pos:start="1127:17" pos:end="1127:73"><call pos:start="1127:17" pos:end="1127:73"><name pos:start="1127:17" pos:end="1127:31">tcg_gen_add_i32</name><argument_list pos:start="1127:32" pos:end="1127:73">(<argument pos:start="1127:33" pos:end="1127:44"><expr pos:start="1127:33" pos:end="1127:44"><name pos:start="1127:33" pos:end="1127:44"><name pos:start="1127:33" pos:end="1127:37">cpu_R</name><index pos:start="1127:38" pos:end="1127:44">[<expr pos:start="1127:39" pos:end="1127:43"><name pos:start="1127:39" pos:end="1127:43">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="1127:47" pos:end="1127:58"><expr pos:start="1127:47" pos:end="1127:58"><name pos:start="1127:47" pos:end="1127:58"><name pos:start="1127:47" pos:end="1127:51">cpu_R</name><index pos:start="1127:52" pos:end="1127:58">[<expr pos:start="1127:53" pos:end="1127:57"><name pos:start="1127:53" pos:end="1127:57">RRR_S</name></expr>]</index></name></expr></argument>, <argument pos:start="1127:61" pos:end="1127:72"><expr pos:start="1127:61" pos:end="1127:72"><name pos:start="1127:61" pos:end="1127:72"><name pos:start="1127:61" pos:end="1127:65">cpu_R</name><index pos:start="1127:66" pos:end="1127:72">[<expr pos:start="1127:67" pos:end="1127:71"><name pos:start="1127:67" pos:end="1127:71">RRR_T</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1129:17" pos:end="1129:22">break;</break>



            <case pos:start="1133:13" pos:end="1133:19">case <expr pos:start="1133:18" pos:end="1133:18"><literal type="number" pos:start="1133:18" pos:end="1133:18">9</literal></expr>:</case> <comment type="block" pos:start="1133:21" pos:end="1133:28">/*ADD**/</comment>

            <case pos:start="1135:13" pos:end="1135:20">case <expr pos:start="1135:18" pos:end="1135:19"><literal type="number" pos:start="1135:18" pos:end="1135:19">10</literal></expr>:</case>

            <case pos:start="1137:13" pos:end="1137:20">case <expr pos:start="1137:18" pos:end="1137:19"><literal type="number" pos:start="1137:18" pos:end="1137:19">11</literal></expr>:</case>

                <expr_stmt pos:start="1139:17" pos:end="1139:59"><expr pos:start="1139:17" pos:end="1139:58"><call pos:start="1139:17" pos:end="1139:58"><name pos:start="1139:17" pos:end="1139:33">gen_window_check3</name><argument_list pos:start="1139:34" pos:end="1139:58">(<argument pos:start="1139:35" pos:end="1139:36"><expr pos:start="1139:35" pos:end="1139:36"><name pos:start="1139:35" pos:end="1139:36">dc</name></expr></argument>, <argument pos:start="1139:39" pos:end="1139:43"><expr pos:start="1139:39" pos:end="1139:43"><name pos:start="1139:39" pos:end="1139:43">RRR_R</name></expr></argument>, <argument pos:start="1139:46" pos:end="1139:50"><expr pos:start="1139:46" pos:end="1139:50"><name pos:start="1139:46" pos:end="1139:50">RRR_S</name></expr></argument>, <argument pos:start="1139:53" pos:end="1139:57"><expr pos:start="1139:53" pos:end="1139:57"><name pos:start="1139:53" pos:end="1139:57">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <block pos:start="1141:17" pos:end="1151:17">{<block_content pos:start="1143:21" pos:end="1149:39">

                    <decl_stmt pos:start="1143:21" pos:end="1143:54"><decl pos:start="1143:21" pos:end="1143:53"><type pos:start="1143:21" pos:end="1143:28"><name pos:start="1143:21" pos:end="1143:28">TCGv_i32</name></type> <name pos:start="1143:30" pos:end="1143:32">tmp</name> <init pos:start="1143:34" pos:end="1143:53">= <expr pos:start="1143:36" pos:end="1143:53"><call pos:start="1143:36" pos:end="1143:53"><name pos:start="1143:36" pos:end="1143:51">tcg_temp_new_i32</name><argument_list pos:start="1143:52" pos:end="1143:53">()</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="1145:21" pos:end="1145:65"><expr pos:start="1145:21" pos:end="1145:64"><call pos:start="1145:21" pos:end="1145:64"><name pos:start="1145:21" pos:end="1145:36">tcg_gen_shli_i32</name><argument_list pos:start="1145:37" pos:end="1145:64">(<argument pos:start="1145:38" pos:end="1145:40"><expr pos:start="1145:38" pos:end="1145:40"><name pos:start="1145:38" pos:end="1145:40">tmp</name></expr></argument>, <argument pos:start="1145:43" pos:end="1145:54"><expr pos:start="1145:43" pos:end="1145:54"><name pos:start="1145:43" pos:end="1145:54"><name pos:start="1145:43" pos:end="1145:47">cpu_R</name><index pos:start="1145:48" pos:end="1145:54">[<expr pos:start="1145:49" pos:end="1145:53"><name pos:start="1145:49" pos:end="1145:53">RRR_S</name></expr>]</index></name></expr></argument>, <argument pos:start="1145:57" pos:end="1145:63"><expr pos:start="1145:57" pos:end="1145:63"><name pos:start="1145:57" pos:end="1145:59">OP2</name> <operator pos:start="1145:61" pos:end="1145:61">-</operator> <literal type="number" pos:start="1145:63" pos:end="1145:63">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1147:21" pos:end="1147:69"><expr pos:start="1147:21" pos:end="1147:68"><call pos:start="1147:21" pos:end="1147:68"><name pos:start="1147:21" pos:end="1147:35">tcg_gen_add_i32</name><argument_list pos:start="1147:36" pos:end="1147:68">(<argument pos:start="1147:37" pos:end="1147:48"><expr pos:start="1147:37" pos:end="1147:48"><name pos:start="1147:37" pos:end="1147:48"><name pos:start="1147:37" pos:end="1147:41">cpu_R</name><index pos:start="1147:42" pos:end="1147:48">[<expr pos:start="1147:43" pos:end="1147:47"><name pos:start="1147:43" pos:end="1147:47">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="1147:51" pos:end="1147:53"><expr pos:start="1147:51" pos:end="1147:53"><name pos:start="1147:51" pos:end="1147:53">tmp</name></expr></argument>, <argument pos:start="1147:56" pos:end="1147:67"><expr pos:start="1147:56" pos:end="1147:67"><name pos:start="1147:56" pos:end="1147:67"><name pos:start="1147:56" pos:end="1147:60">cpu_R</name><index pos:start="1147:61" pos:end="1147:67">[<expr pos:start="1147:62" pos:end="1147:66"><name pos:start="1147:62" pos:end="1147:66">RRR_T</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1149:21" pos:end="1149:39"><expr pos:start="1149:21" pos:end="1149:38"><call pos:start="1149:21" pos:end="1149:38"><name pos:start="1149:21" pos:end="1149:33">tcg_temp_free</name><argument_list pos:start="1149:34" pos:end="1149:38">(<argument pos:start="1149:35" pos:end="1149:37"><expr pos:start="1149:35" pos:end="1149:37"><name pos:start="1149:35" pos:end="1149:37">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block>

                <break pos:start="1153:17" pos:end="1153:22">break;</break>



            <case pos:start="1157:13" pos:end="1157:20">case <expr pos:start="1157:18" pos:end="1157:19"><literal type="number" pos:start="1157:18" pos:end="1157:19">12</literal></expr>:</case> <comment type="block" pos:start="1157:22" pos:end="1157:28">/*SUB*/</comment>

                <expr_stmt pos:start="1159:17" pos:end="1159:59"><expr pos:start="1159:17" pos:end="1159:58"><call pos:start="1159:17" pos:end="1159:58"><name pos:start="1159:17" pos:end="1159:33">gen_window_check3</name><argument_list pos:start="1159:34" pos:end="1159:58">(<argument pos:start="1159:35" pos:end="1159:36"><expr pos:start="1159:35" pos:end="1159:36"><name pos:start="1159:35" pos:end="1159:36">dc</name></expr></argument>, <argument pos:start="1159:39" pos:end="1159:43"><expr pos:start="1159:39" pos:end="1159:43"><name pos:start="1159:39" pos:end="1159:43">RRR_R</name></expr></argument>, <argument pos:start="1159:46" pos:end="1159:50"><expr pos:start="1159:46" pos:end="1159:50"><name pos:start="1159:46" pos:end="1159:50">RRR_S</name></expr></argument>, <argument pos:start="1159:53" pos:end="1159:57"><expr pos:start="1159:53" pos:end="1159:57"><name pos:start="1159:53" pos:end="1159:57">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1161:17" pos:end="1161:74"><expr pos:start="1161:17" pos:end="1161:73"><call pos:start="1161:17" pos:end="1161:73"><name pos:start="1161:17" pos:end="1161:31">tcg_gen_sub_i32</name><argument_list pos:start="1161:32" pos:end="1161:73">(<argument pos:start="1161:33" pos:end="1161:44"><expr pos:start="1161:33" pos:end="1161:44"><name pos:start="1161:33" pos:end="1161:44"><name pos:start="1161:33" pos:end="1161:37">cpu_R</name><index pos:start="1161:38" pos:end="1161:44">[<expr pos:start="1161:39" pos:end="1161:43"><name pos:start="1161:39" pos:end="1161:43">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="1161:47" pos:end="1161:58"><expr pos:start="1161:47" pos:end="1161:58"><name pos:start="1161:47" pos:end="1161:58"><name pos:start="1161:47" pos:end="1161:51">cpu_R</name><index pos:start="1161:52" pos:end="1161:58">[<expr pos:start="1161:53" pos:end="1161:57"><name pos:start="1161:53" pos:end="1161:57">RRR_S</name></expr>]</index></name></expr></argument>, <argument pos:start="1161:61" pos:end="1161:72"><expr pos:start="1161:61" pos:end="1161:72"><name pos:start="1161:61" pos:end="1161:72"><name pos:start="1161:61" pos:end="1161:65">cpu_R</name><index pos:start="1161:66" pos:end="1161:72">[<expr pos:start="1161:67" pos:end="1161:71"><name pos:start="1161:67" pos:end="1161:71">RRR_T</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1163:17" pos:end="1163:22">break;</break>



            <case pos:start="1167:13" pos:end="1167:20">case <expr pos:start="1167:18" pos:end="1167:19"><literal type="number" pos:start="1167:18" pos:end="1167:19">13</literal></expr>:</case> <comment type="block" pos:start="1167:22" pos:end="1167:29">/*SUB**/</comment>

            <case pos:start="1169:13" pos:end="1169:20">case <expr pos:start="1169:18" pos:end="1169:19"><literal type="number" pos:start="1169:18" pos:end="1169:19">14</literal></expr>:</case>

            <case pos:start="1171:13" pos:end="1171:20">case <expr pos:start="1171:18" pos:end="1171:19"><literal type="number" pos:start="1171:18" pos:end="1171:19">15</literal></expr>:</case>

                <expr_stmt pos:start="1173:17" pos:end="1173:59"><expr pos:start="1173:17" pos:end="1173:58"><call pos:start="1173:17" pos:end="1173:58"><name pos:start="1173:17" pos:end="1173:33">gen_window_check3</name><argument_list pos:start="1173:34" pos:end="1173:58">(<argument pos:start="1173:35" pos:end="1173:36"><expr pos:start="1173:35" pos:end="1173:36"><name pos:start="1173:35" pos:end="1173:36">dc</name></expr></argument>, <argument pos:start="1173:39" pos:end="1173:43"><expr pos:start="1173:39" pos:end="1173:43"><name pos:start="1173:39" pos:end="1173:43">RRR_R</name></expr></argument>, <argument pos:start="1173:46" pos:end="1173:50"><expr pos:start="1173:46" pos:end="1173:50"><name pos:start="1173:46" pos:end="1173:50">RRR_S</name></expr></argument>, <argument pos:start="1173:53" pos:end="1173:57"><expr pos:start="1173:53" pos:end="1173:57"><name pos:start="1173:53" pos:end="1173:57">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <block pos:start="1175:17" pos:end="1185:17">{<block_content pos:start="1177:21" pos:end="1183:39">

                    <decl_stmt pos:start="1177:21" pos:end="1177:54"><decl pos:start="1177:21" pos:end="1177:53"><type pos:start="1177:21" pos:end="1177:28"><name pos:start="1177:21" pos:end="1177:28">TCGv_i32</name></type> <name pos:start="1177:30" pos:end="1177:32">tmp</name> <init pos:start="1177:34" pos:end="1177:53">= <expr pos:start="1177:36" pos:end="1177:53"><call pos:start="1177:36" pos:end="1177:53"><name pos:start="1177:36" pos:end="1177:51">tcg_temp_new_i32</name><argument_list pos:start="1177:52" pos:end="1177:53">()</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="1179:21" pos:end="1179:66"><expr pos:start="1179:21" pos:end="1179:65"><call pos:start="1179:21" pos:end="1179:65"><name pos:start="1179:21" pos:end="1179:36">tcg_gen_shli_i32</name><argument_list pos:start="1179:37" pos:end="1179:65">(<argument pos:start="1179:38" pos:end="1179:40"><expr pos:start="1179:38" pos:end="1179:40"><name pos:start="1179:38" pos:end="1179:40">tmp</name></expr></argument>, <argument pos:start="1179:43" pos:end="1179:54"><expr pos:start="1179:43" pos:end="1179:54"><name pos:start="1179:43" pos:end="1179:54"><name pos:start="1179:43" pos:end="1179:47">cpu_R</name><index pos:start="1179:48" pos:end="1179:54">[<expr pos:start="1179:49" pos:end="1179:53"><name pos:start="1179:49" pos:end="1179:53">RRR_S</name></expr>]</index></name></expr></argument>, <argument pos:start="1179:57" pos:end="1179:64"><expr pos:start="1179:57" pos:end="1179:64"><name pos:start="1179:57" pos:end="1179:59">OP2</name> <operator pos:start="1179:61" pos:end="1179:61">-</operator> <literal type="number" pos:start="1179:63" pos:end="1179:64">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1181:21" pos:end="1181:69"><expr pos:start="1181:21" pos:end="1181:68"><call pos:start="1181:21" pos:end="1181:68"><name pos:start="1181:21" pos:end="1181:35">tcg_gen_sub_i32</name><argument_list pos:start="1181:36" pos:end="1181:68">(<argument pos:start="1181:37" pos:end="1181:48"><expr pos:start="1181:37" pos:end="1181:48"><name pos:start="1181:37" pos:end="1181:48"><name pos:start="1181:37" pos:end="1181:41">cpu_R</name><index pos:start="1181:42" pos:end="1181:48">[<expr pos:start="1181:43" pos:end="1181:47"><name pos:start="1181:43" pos:end="1181:47">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="1181:51" pos:end="1181:53"><expr pos:start="1181:51" pos:end="1181:53"><name pos:start="1181:51" pos:end="1181:53">tmp</name></expr></argument>, <argument pos:start="1181:56" pos:end="1181:67"><expr pos:start="1181:56" pos:end="1181:67"><name pos:start="1181:56" pos:end="1181:67"><name pos:start="1181:56" pos:end="1181:60">cpu_R</name><index pos:start="1181:61" pos:end="1181:67">[<expr pos:start="1181:62" pos:end="1181:66"><name pos:start="1181:62" pos:end="1181:66">RRR_T</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1183:21" pos:end="1183:39"><expr pos:start="1183:21" pos:end="1183:38"><call pos:start="1183:21" pos:end="1183:38"><name pos:start="1183:21" pos:end="1183:33">tcg_temp_free</name><argument_list pos:start="1183:34" pos:end="1183:38">(<argument pos:start="1183:35" pos:end="1183:37"><expr pos:start="1183:35" pos:end="1183:37"><name pos:start="1183:35" pos:end="1183:37">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block>

                <break pos:start="1187:17" pos:end="1187:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="1191:13" pos:end="1191:18">break;</break>



        <case pos:start="1195:9" pos:end="1195:15">case <expr pos:start="1195:14" pos:end="1195:14"><literal type="number" pos:start="1195:14" pos:end="1195:14">1</literal></expr>:</case> <comment type="block" pos:start="1195:17" pos:end="1195:24">/*RST1*/</comment>

            <switch pos:start="1197:13" pos:end="1459:13">switch <condition pos:start="1197:20" pos:end="1197:24">(<expr pos:start="1197:21" pos:end="1197:23"><name pos:start="1197:21" pos:end="1197:23">OP2</name></expr>)</condition> <block pos:start="1197:26" pos:end="1459:13">{<block_content pos:start="1199:13" pos:end="1457:22">

            <case pos:start="1199:13" pos:end="1199:19">case <expr pos:start="1199:18" pos:end="1199:18"><literal type="number" pos:start="1199:18" pos:end="1199:18">0</literal></expr>:</case> <comment type="block" pos:start="1199:21" pos:end="1199:28">/*SLLI*/</comment>

            <case pos:start="1201:13" pos:end="1201:19">case <expr pos:start="1201:18" pos:end="1201:18"><literal type="number" pos:start="1201:18" pos:end="1201:18">1</literal></expr>:</case>

                <expr_stmt pos:start="1203:17" pos:end="1203:52"><expr pos:start="1203:17" pos:end="1203:51"><call pos:start="1203:17" pos:end="1203:51"><name pos:start="1203:17" pos:end="1203:33">gen_window_check2</name><argument_list pos:start="1203:34" pos:end="1203:51">(<argument pos:start="1203:35" pos:end="1203:36"><expr pos:start="1203:35" pos:end="1203:36"><name pos:start="1203:35" pos:end="1203:36">dc</name></expr></argument>, <argument pos:start="1203:39" pos:end="1203:43"><expr pos:start="1203:39" pos:end="1203:43"><name pos:start="1203:39" pos:end="1203:43">RRR_R</name></expr></argument>, <argument pos:start="1203:46" pos:end="1203:50"><expr pos:start="1203:46" pos:end="1203:50"><name pos:start="1203:46" pos:end="1203:50">RRR_S</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1205:17" pos:end="1207:57"><expr pos:start="1205:17" pos:end="1207:56"><call pos:start="1205:17" pos:end="1207:56"><name pos:start="1205:17" pos:end="1205:32">tcg_gen_shli_i32</name><argument_list pos:start="1205:33" pos:end="1207:56">(<argument pos:start="1205:34" pos:end="1205:45"><expr pos:start="1205:34" pos:end="1205:45"><name pos:start="1205:34" pos:end="1205:45"><name pos:start="1205:34" pos:end="1205:38">cpu_R</name><index pos:start="1205:39" pos:end="1205:45">[<expr pos:start="1205:40" pos:end="1205:44"><name pos:start="1205:40" pos:end="1205:44">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="1205:48" pos:end="1205:59"><expr pos:start="1205:48" pos:end="1205:59"><name pos:start="1205:48" pos:end="1205:59"><name pos:start="1205:48" pos:end="1205:52">cpu_R</name><index pos:start="1205:53" pos:end="1205:59">[<expr pos:start="1205:54" pos:end="1205:58"><name pos:start="1205:54" pos:end="1205:58">RRR_S</name></expr>]</index></name></expr></argument>,

                        <argument pos:start="1207:25" pos:end="1207:55"><expr pos:start="1207:25" pos:end="1207:55"><literal type="number" pos:start="1207:25" pos:end="1207:28">32</literal> <operator pos:start="1207:28" pos:end="1207:28">-</operator> <operator pos:start="1207:30" pos:end="1207:30">(</operator><name pos:start="1207:31" pos:end="1207:35">RRR_T</name> <operator pos:start="1207:37" pos:end="1207:37">|</operator> <operator pos:start="1207:39" pos:end="1207:39">(</operator><operator pos:start="1207:40" pos:end="1207:40">(</operator><name pos:start="1207:41" pos:end="1207:43">OP2</name> <operator pos:start="1207:45" pos:end="1207:45">&amp;</operator> <literal type="number" pos:start="1207:47" pos:end="1207:47">1</literal><operator pos:start="1207:48" pos:end="1207:48">)</operator> <operator pos:start="1207:50" pos:end="1207:51">&lt;&lt;</operator> <literal type="number" pos:start="1207:53" pos:end="1207:53">4</literal><operator pos:start="1207:54" pos:end="1207:54">)</operator><operator pos:start="1207:55" pos:end="1207:55">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1209:17" pos:end="1209:22">break;</break>



            <case pos:start="1213:13" pos:end="1213:19">case <expr pos:start="1213:18" pos:end="1213:18"><literal type="number" pos:start="1213:18" pos:end="1213:18">2</literal></expr>:</case> <comment type="block" pos:start="1213:21" pos:end="1213:28">/*SRAI*/</comment>

            <case pos:start="1215:13" pos:end="1215:19">case <expr pos:start="1215:18" pos:end="1215:18"><literal type="number" pos:start="1215:18" pos:end="1215:18">3</literal></expr>:</case>

                <expr_stmt pos:start="1217:17" pos:end="1217:52"><expr pos:start="1217:17" pos:end="1217:51"><call pos:start="1217:17" pos:end="1217:51"><name pos:start="1217:17" pos:end="1217:33">gen_window_check2</name><argument_list pos:start="1217:34" pos:end="1217:51">(<argument pos:start="1217:35" pos:end="1217:36"><expr pos:start="1217:35" pos:end="1217:36"><name pos:start="1217:35" pos:end="1217:36">dc</name></expr></argument>, <argument pos:start="1217:39" pos:end="1217:43"><expr pos:start="1217:39" pos:end="1217:43"><name pos:start="1217:39" pos:end="1217:43">RRR_R</name></expr></argument>, <argument pos:start="1217:46" pos:end="1217:50"><expr pos:start="1217:46" pos:end="1217:50"><name pos:start="1217:46" pos:end="1217:50">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1219:17" pos:end="1221:50"><expr pos:start="1219:17" pos:end="1221:49"><call pos:start="1219:17" pos:end="1221:49"><name pos:start="1219:17" pos:end="1219:32">tcg_gen_sari_i32</name><argument_list pos:start="1219:33" pos:end="1221:49">(<argument pos:start="1219:34" pos:end="1219:45"><expr pos:start="1219:34" pos:end="1219:45"><name pos:start="1219:34" pos:end="1219:45"><name pos:start="1219:34" pos:end="1219:38">cpu_R</name><index pos:start="1219:39" pos:end="1219:45">[<expr pos:start="1219:40" pos:end="1219:44"><name pos:start="1219:40" pos:end="1219:44">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="1219:48" pos:end="1219:59"><expr pos:start="1219:48" pos:end="1219:59"><name pos:start="1219:48" pos:end="1219:59"><name pos:start="1219:48" pos:end="1219:52">cpu_R</name><index pos:start="1219:53" pos:end="1219:59">[<expr pos:start="1219:54" pos:end="1219:58"><name pos:start="1219:54" pos:end="1219:58">RRR_T</name></expr>]</index></name></expr></argument>,

                        <argument pos:start="1221:25" pos:end="1221:48"><expr pos:start="1221:25" pos:end="1221:48"><name pos:start="1221:25" pos:end="1221:29">RRR_S</name> <operator pos:start="1221:31" pos:end="1221:31">|</operator> <operator pos:start="1221:33" pos:end="1221:33">(</operator><operator pos:start="1221:34" pos:end="1221:34">(</operator><name pos:start="1221:35" pos:end="1221:37">OP2</name> <operator pos:start="1221:39" pos:end="1221:39">&amp;</operator> <literal type="number" pos:start="1221:41" pos:end="1221:41">1</literal><operator pos:start="1221:42" pos:end="1221:42">)</operator> <operator pos:start="1221:44" pos:end="1221:45">&lt;&lt;</operator> <literal type="number" pos:start="1221:47" pos:end="1221:47">4</literal><operator pos:start="1221:48" pos:end="1221:48">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1223:17" pos:end="1223:22">break;</break>



            <case pos:start="1227:13" pos:end="1227:19">case <expr pos:start="1227:18" pos:end="1227:18"><literal type="number" pos:start="1227:18" pos:end="1227:18">4</literal></expr>:</case> <comment type="block" pos:start="1227:21" pos:end="1227:28">/*SRLI*/</comment>

                <expr_stmt pos:start="1229:17" pos:end="1229:52"><expr pos:start="1229:17" pos:end="1229:51"><call pos:start="1229:17" pos:end="1229:51"><name pos:start="1229:17" pos:end="1229:33">gen_window_check2</name><argument_list pos:start="1229:34" pos:end="1229:51">(<argument pos:start="1229:35" pos:end="1229:36"><expr pos:start="1229:35" pos:end="1229:36"><name pos:start="1229:35" pos:end="1229:36">dc</name></expr></argument>, <argument pos:start="1229:39" pos:end="1229:43"><expr pos:start="1229:39" pos:end="1229:43"><name pos:start="1229:39" pos:end="1229:43">RRR_R</name></expr></argument>, <argument pos:start="1229:46" pos:end="1229:50"><expr pos:start="1229:46" pos:end="1229:50"><name pos:start="1229:46" pos:end="1229:50">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1231:17" pos:end="1231:68"><expr pos:start="1231:17" pos:end="1231:67"><call pos:start="1231:17" pos:end="1231:67"><name pos:start="1231:17" pos:end="1231:32">tcg_gen_shri_i32</name><argument_list pos:start="1231:33" pos:end="1231:67">(<argument pos:start="1231:34" pos:end="1231:45"><expr pos:start="1231:34" pos:end="1231:45"><name pos:start="1231:34" pos:end="1231:45"><name pos:start="1231:34" pos:end="1231:38">cpu_R</name><index pos:start="1231:39" pos:end="1231:45">[<expr pos:start="1231:40" pos:end="1231:44"><name pos:start="1231:40" pos:end="1231:44">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="1231:48" pos:end="1231:59"><expr pos:start="1231:48" pos:end="1231:59"><name pos:start="1231:48" pos:end="1231:59"><name pos:start="1231:48" pos:end="1231:52">cpu_R</name><index pos:start="1231:53" pos:end="1231:59">[<expr pos:start="1231:54" pos:end="1231:58"><name pos:start="1231:54" pos:end="1231:58">RRR_T</name></expr>]</index></name></expr></argument>, <argument pos:start="1231:62" pos:end="1231:66"><expr pos:start="1231:62" pos:end="1231:66"><name pos:start="1231:62" pos:end="1231:66">RRR_S</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1233:17" pos:end="1233:22">break;</break>



            <case pos:start="1237:13" pos:end="1237:19">case <expr pos:start="1237:18" pos:end="1237:18"><literal type="number" pos:start="1237:18" pos:end="1237:18">6</literal></expr>:</case> <comment type="block" pos:start="1237:21" pos:end="1237:27">/*XSR*/</comment>

                <block pos:start="1239:17" pos:end="1265:17">{<block_content pos:start="1241:21" pos:end="1263:21">

                    <decl_stmt pos:start="1241:21" pos:end="1241:54"><decl pos:start="1241:21" pos:end="1241:53"><type pos:start="1241:21" pos:end="1241:28"><name pos:start="1241:21" pos:end="1241:28">TCGv_i32</name></type> <name pos:start="1241:30" pos:end="1241:32">tmp</name> <init pos:start="1241:34" pos:end="1241:53">= <expr pos:start="1241:36" pos:end="1241:53"><call pos:start="1241:36" pos:end="1241:53"><name pos:start="1241:36" pos:end="1241:51">tcg_temp_new_i32</name><argument_list pos:start="1241:52" pos:end="1241:53">()</argument_list></call></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="1243:21" pos:end="1247:21"><if pos:start="1243:21" pos:end="1247:21">if <condition pos:start="1243:24" pos:end="1243:37">(<expr pos:start="1243:25" pos:end="1243:36"><name pos:start="1243:25" pos:end="1243:30">RSR_SR</name> <operator pos:start="1243:32" pos:end="1243:33">&gt;=</operator> <literal type="number" pos:start="1243:35" pos:end="1243:36">64</literal></expr>)</condition> <block pos:start="1243:39" pos:end="1247:21">{<block_content pos:start="1245:25" pos:end="1245:48">

                        <expr_stmt pos:start="1245:25" pos:end="1245:48"><expr pos:start="1245:25" pos:end="1245:47"><call pos:start="1245:25" pos:end="1245:47"><name pos:start="1245:25" pos:end="1245:43">gen_check_privilege</name><argument_list pos:start="1245:44" pos:end="1245:47">(<argument pos:start="1245:45" pos:end="1245:46"><expr pos:start="1245:45" pos:end="1245:46"><name pos:start="1245:45" pos:end="1245:46">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="1249:21" pos:end="1249:49"><expr pos:start="1249:21" pos:end="1249:48"><call pos:start="1249:21" pos:end="1249:48"><name pos:start="1249:21" pos:end="1249:37">gen_window_check1</name><argument_list pos:start="1249:38" pos:end="1249:48">(<argument pos:start="1249:39" pos:end="1249:40"><expr pos:start="1249:39" pos:end="1249:40"><name pos:start="1249:39" pos:end="1249:40">dc</name></expr></argument>, <argument pos:start="1249:43" pos:end="1249:47"><expr pos:start="1249:43" pos:end="1249:47"><name pos:start="1249:43" pos:end="1249:47">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1251:21" pos:end="1251:55"><expr pos:start="1251:21" pos:end="1251:54"><call pos:start="1251:21" pos:end="1251:54"><name pos:start="1251:21" pos:end="1251:35">tcg_gen_mov_i32</name><argument_list pos:start="1251:36" pos:end="1251:54">(<argument pos:start="1251:37" pos:end="1251:39"><expr pos:start="1251:37" pos:end="1251:39"><name pos:start="1251:37" pos:end="1251:39">tmp</name></expr></argument>, <argument pos:start="1251:42" pos:end="1251:53"><expr pos:start="1251:42" pos:end="1251:53"><name pos:start="1251:42" pos:end="1251:53"><name pos:start="1251:42" pos:end="1251:46">cpu_R</name><index pos:start="1251:47" pos:end="1251:53">[<expr pos:start="1251:48" pos:end="1251:52"><name pos:start="1251:48" pos:end="1251:52">RRR_T</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1253:21" pos:end="1253:54"><expr pos:start="1253:21" pos:end="1253:53"><call pos:start="1253:21" pos:end="1253:53"><name pos:start="1253:21" pos:end="1253:27">gen_rsr</name><argument_list pos:start="1253:28" pos:end="1253:53">(<argument pos:start="1253:29" pos:end="1253:30"><expr pos:start="1253:29" pos:end="1253:30"><name pos:start="1253:29" pos:end="1253:30">dc</name></expr></argument>, <argument pos:start="1253:33" pos:end="1253:44"><expr pos:start="1253:33" pos:end="1253:44"><name pos:start="1253:33" pos:end="1253:44"><name pos:start="1253:33" pos:end="1253:37">cpu_R</name><index pos:start="1253:38" pos:end="1253:44">[<expr pos:start="1253:39" pos:end="1253:43"><name pos:start="1253:39" pos:end="1253:43">RRR_T</name></expr>]</index></name></expr></argument>, <argument pos:start="1253:47" pos:end="1253:52"><expr pos:start="1253:47" pos:end="1253:52"><name pos:start="1253:47" pos:end="1253:52">RSR_SR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1255:21" pos:end="1255:45"><expr pos:start="1255:21" pos:end="1255:44"><call pos:start="1255:21" pos:end="1255:44"><name pos:start="1255:21" pos:end="1255:27">gen_wsr</name><argument_list pos:start="1255:28" pos:end="1255:44">(<argument pos:start="1255:29" pos:end="1255:30"><expr pos:start="1255:29" pos:end="1255:30"><name pos:start="1255:29" pos:end="1255:30">dc</name></expr></argument>, <argument pos:start="1255:33" pos:end="1255:38"><expr pos:start="1255:33" pos:end="1255:38"><name pos:start="1255:33" pos:end="1255:38">RSR_SR</name></expr></argument>, <argument pos:start="1255:41" pos:end="1255:43"><expr pos:start="1255:41" pos:end="1255:43"><name pos:start="1255:41" pos:end="1255:43">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1257:21" pos:end="1257:39"><expr pos:start="1257:21" pos:end="1257:38"><call pos:start="1257:21" pos:end="1257:38"><name pos:start="1257:21" pos:end="1257:33">tcg_temp_free</name><argument_list pos:start="1257:34" pos:end="1257:38">(<argument pos:start="1257:35" pos:end="1257:37"><expr pos:start="1257:35" pos:end="1257:37"><name pos:start="1257:35" pos:end="1257:37">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="1259:21" pos:end="1263:21"><if pos:start="1259:21" pos:end="1263:21">if <condition pos:start="1259:24" pos:end="1259:43">(<expr pos:start="1259:25" pos:end="1259:42"><operator pos:start="1259:25" pos:end="1259:25">!</operator><name pos:start="1259:26" pos:end="1259:42"><name pos:start="1259:26" pos:end="1259:34">sregnames</name><index pos:start="1259:35" pos:end="1259:42">[<expr pos:start="1259:36" pos:end="1259:41"><name pos:start="1259:36" pos:end="1259:41">RSR_SR</name></expr>]</index></name></expr>)</condition> <block pos:start="1259:45" pos:end="1263:21">{<block_content pos:start="1261:25" pos:end="1261:30">

                        <expr_stmt pos:start="1261:25" pos:end="1261:30"><expr pos:start="1261:25" pos:end="1261:29"><call pos:start="1261:25" pos:end="1261:29"><name pos:start="1261:25" pos:end="1261:27">TBD</name><argument_list pos:start="1261:28" pos:end="1261:29">()</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block>

                <break pos:start="1267:17" pos:end="1298:0">break;</break>



                <comment type="block" pos:start="1271:17" pos:end="1277:19">/*

                 * Note: 64 bit ops are used here solely because SAR values

                 * have range 0..63

                 */</comment>

<cpp:define pos:start="1279:1" pos:end="1293:27">#<cpp:directive pos:start="1279:2" pos:end="1279:7">define</cpp:directive> <cpp:macro pos:start="1279:9" pos:end="1279:31"><name pos:start="1279:9" pos:end="1279:21">gen_shift_reg</name><parameter_list pos:start="1279:22" pos:end="1279:31">(<parameter pos:start="1279:23" pos:end="1279:25"><type pos:start="1279:23" pos:end="1279:25"><name pos:start="1279:23" pos:end="1279:25">cmd</name></type></parameter>, <parameter pos:start="1279:28" pos:end="1279:30"><type pos:start="1279:28" pos:end="1279:30"><name pos:start="1279:28" pos:end="1279:30">reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="1279:33" pos:end="1293:27">do { \

                    TCGv_i64 tmp = tcg_temp_new_i64(); \

                    tcg_gen_extu_i32_i64(tmp, reg); \

                    tcg_gen_##cmd##_i64(v, v, tmp); \

                    tcg_gen_trunc_i64_i32(cpu_R[RRR_R], v); \

                    tcg_temp_free_i64(v); \

                    tcg_temp_free_i64(tmp); \

                } while (0)</cpp:value></cpp:define>



<cpp:define pos:start="1297:1" pos:end="1297:54">#<cpp:directive pos:start="1297:2" pos:end="1297:7">define</cpp:directive> <cpp:macro pos:start="1297:9" pos:end="1297:22"><name pos:start="1297:9" pos:end="1297:17">gen_shift</name><parameter_list pos:start="1297:18" pos:end="1297:22">(<parameter pos:start="1297:19" pos:end="1297:21"><type pos:start="1297:19" pos:end="1297:21"><name pos:start="1297:19" pos:end="1297:21">cmd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="1297:24" pos:end="1297:54">gen_shift_reg(cmd, cpu_SR[SAR])</cpp:value></cpp:define>



            <case pos:start="1301:13" pos:end="1301:19">case <expr pos:start="1301:18" pos:end="1301:18"><literal type="number" pos:start="1301:18" pos:end="1301:18">8</literal></expr>:</case> <comment type="block" pos:start="1301:21" pos:end="1301:27">/*SRC*/</comment>

                <expr_stmt pos:start="1303:17" pos:end="1303:59"><expr pos:start="1303:17" pos:end="1303:58"><call pos:start="1303:17" pos:end="1303:58"><name pos:start="1303:17" pos:end="1303:33">gen_window_check3</name><argument_list pos:start="1303:34" pos:end="1303:58">(<argument pos:start="1303:35" pos:end="1303:36"><expr pos:start="1303:35" pos:end="1303:36"><name pos:start="1303:35" pos:end="1303:36">dc</name></expr></argument>, <argument pos:start="1303:39" pos:end="1303:43"><expr pos:start="1303:39" pos:end="1303:43"><name pos:start="1303:39" pos:end="1303:43">RRR_R</name></expr></argument>, <argument pos:start="1303:46" pos:end="1303:50"><expr pos:start="1303:46" pos:end="1303:50"><name pos:start="1303:46" pos:end="1303:50">RRR_S</name></expr></argument>, <argument pos:start="1303:53" pos:end="1303:57"><expr pos:start="1303:53" pos:end="1303:57"><name pos:start="1303:53" pos:end="1303:57">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <block pos:start="1305:17" pos:end="1313:17">{<block_content pos:start="1307:21" pos:end="1311:35">

                    <decl_stmt pos:start="1307:21" pos:end="1307:52"><decl pos:start="1307:21" pos:end="1307:51"><type pos:start="1307:21" pos:end="1307:28"><name pos:start="1307:21" pos:end="1307:28">TCGv_i64</name></type> <name pos:start="1307:30" pos:end="1307:30">v</name> <init pos:start="1307:32" pos:end="1307:51">= <expr pos:start="1307:34" pos:end="1307:51"><call pos:start="1307:34" pos:end="1307:51"><name pos:start="1307:34" pos:end="1307:49">tcg_temp_new_i64</name><argument_list pos:start="1307:50" pos:end="1307:51">()</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="1309:21" pos:end="1309:74"><expr pos:start="1309:21" pos:end="1309:73"><call pos:start="1309:21" pos:end="1309:73"><name pos:start="1309:21" pos:end="1309:42">tcg_gen_concat_i32_i64</name><argument_list pos:start="1309:43" pos:end="1309:73">(<argument pos:start="1309:44" pos:end="1309:44"><expr pos:start="1309:44" pos:end="1309:44"><name pos:start="1309:44" pos:end="1309:44">v</name></expr></argument>, <argument pos:start="1309:47" pos:end="1309:58"><expr pos:start="1309:47" pos:end="1309:58"><name pos:start="1309:47" pos:end="1309:58"><name pos:start="1309:47" pos:end="1309:51">cpu_R</name><index pos:start="1309:52" pos:end="1309:58">[<expr pos:start="1309:53" pos:end="1309:57"><name pos:start="1309:53" pos:end="1309:57">RRR_T</name></expr>]</index></name></expr></argument>, <argument pos:start="1309:61" pos:end="1309:72"><expr pos:start="1309:61" pos:end="1309:72"><name pos:start="1309:61" pos:end="1309:72"><name pos:start="1309:61" pos:end="1309:65">cpu_R</name><index pos:start="1309:66" pos:end="1309:72">[<expr pos:start="1309:67" pos:end="1309:71"><name pos:start="1309:67" pos:end="1309:71">RRR_S</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1311:21" pos:end="1311:35"><expr pos:start="1311:21" pos:end="1311:34"><call pos:start="1311:21" pos:end="1311:34"><name pos:start="1311:21" pos:end="1311:29">gen_shift</name><argument_list pos:start="1311:30" pos:end="1311:34">(<argument pos:start="1311:31" pos:end="1311:33"><expr pos:start="1311:31" pos:end="1311:33"><name pos:start="1311:31" pos:end="1311:33">shr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block>

                <break pos:start="1315:17" pos:end="1315:22">break;</break>



            <case pos:start="1319:13" pos:end="1319:19">case <expr pos:start="1319:18" pos:end="1319:18"><literal type="number" pos:start="1319:18" pos:end="1319:18">9</literal></expr>:</case> <comment type="block" pos:start="1319:21" pos:end="1319:27">/*SRL*/</comment>

                <expr_stmt pos:start="1321:17" pos:end="1321:52"><expr pos:start="1321:17" pos:end="1321:51"><call pos:start="1321:17" pos:end="1321:51"><name pos:start="1321:17" pos:end="1321:33">gen_window_check2</name><argument_list pos:start="1321:34" pos:end="1321:51">(<argument pos:start="1321:35" pos:end="1321:36"><expr pos:start="1321:35" pos:end="1321:36"><name pos:start="1321:35" pos:end="1321:36">dc</name></expr></argument>, <argument pos:start="1321:39" pos:end="1321:43"><expr pos:start="1321:39" pos:end="1321:43"><name pos:start="1321:39" pos:end="1321:43">RRR_R</name></expr></argument>, <argument pos:start="1321:46" pos:end="1321:50"><expr pos:start="1321:46" pos:end="1321:50"><name pos:start="1321:46" pos:end="1321:50">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1323:17" pos:end="1335:17"><if pos:start="1323:17" pos:end="1327:17">if <condition pos:start="1323:20" pos:end="1323:33">(<expr pos:start="1323:21" pos:end="1323:32"><name pos:start="1323:21" pos:end="1323:32"><name pos:start="1323:21" pos:end="1323:22">dc</name><operator pos:start="1323:23" pos:end="1323:24">-&gt;</operator><name pos:start="1323:25" pos:end="1323:32">sar_5bit</name></name></expr>)</condition> <block pos:start="1323:35" pos:end="1327:17">{<block_content pos:start="1325:21" pos:end="1325:77">

                    <expr_stmt pos:start="1325:21" pos:end="1325:77"><expr pos:start="1325:21" pos:end="1325:76"><call pos:start="1325:21" pos:end="1325:76"><name pos:start="1325:21" pos:end="1325:35">tcg_gen_shr_i32</name><argument_list pos:start="1325:36" pos:end="1325:76">(<argument pos:start="1325:37" pos:end="1325:48"><expr pos:start="1325:37" pos:end="1325:48"><name pos:start="1325:37" pos:end="1325:48"><name pos:start="1325:37" pos:end="1325:41">cpu_R</name><index pos:start="1325:42" pos:end="1325:48">[<expr pos:start="1325:43" pos:end="1325:47"><name pos:start="1325:43" pos:end="1325:47">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="1325:51" pos:end="1325:62"><expr pos:start="1325:51" pos:end="1325:62"><name pos:start="1325:51" pos:end="1325:62"><name pos:start="1325:51" pos:end="1325:55">cpu_R</name><index pos:start="1325:56" pos:end="1325:62">[<expr pos:start="1325:57" pos:end="1325:61"><name pos:start="1325:57" pos:end="1325:61">RRR_T</name></expr>]</index></name></expr></argument>, <argument pos:start="1325:65" pos:end="1325:75"><expr pos:start="1325:65" pos:end="1325:75"><name pos:start="1325:65" pos:end="1325:75"><name pos:start="1325:65" pos:end="1325:70">cpu_SR</name><index pos:start="1325:71" pos:end="1325:75">[<expr pos:start="1325:72" pos:end="1325:74"><name pos:start="1325:72" pos:end="1325:74">SAR</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1327:19" pos:end="1335:17">else <block pos:start="1327:24" pos:end="1335:17">{<block_content pos:start="1329:21" pos:end="1333:35">

                    <decl_stmt pos:start="1329:21" pos:end="1329:52"><decl pos:start="1329:21" pos:end="1329:51"><type pos:start="1329:21" pos:end="1329:28"><name pos:start="1329:21" pos:end="1329:28">TCGv_i64</name></type> <name pos:start="1329:30" pos:end="1329:30">v</name> <init pos:start="1329:32" pos:end="1329:51">= <expr pos:start="1329:34" pos:end="1329:51"><call pos:start="1329:34" pos:end="1329:51"><name pos:start="1329:34" pos:end="1329:49">tcg_temp_new_i64</name><argument_list pos:start="1329:50" pos:end="1329:51">()</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="1331:21" pos:end="1331:58"><expr pos:start="1331:21" pos:end="1331:57"><call pos:start="1331:21" pos:end="1331:57"><name pos:start="1331:21" pos:end="1331:40">tcg_gen_extu_i32_i64</name><argument_list pos:start="1331:41" pos:end="1331:57">(<argument pos:start="1331:42" pos:end="1331:42"><expr pos:start="1331:42" pos:end="1331:42"><name pos:start="1331:42" pos:end="1331:42">v</name></expr></argument>, <argument pos:start="1331:45" pos:end="1331:56"><expr pos:start="1331:45" pos:end="1331:56"><name pos:start="1331:45" pos:end="1331:56"><name pos:start="1331:45" pos:end="1331:49">cpu_R</name><index pos:start="1331:50" pos:end="1331:56">[<expr pos:start="1331:51" pos:end="1331:55"><name pos:start="1331:51" pos:end="1331:55">RRR_T</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1333:21" pos:end="1333:35"><expr pos:start="1333:21" pos:end="1333:34"><call pos:start="1333:21" pos:end="1333:34"><name pos:start="1333:21" pos:end="1333:29">gen_shift</name><argument_list pos:start="1333:30" pos:end="1333:34">(<argument pos:start="1333:31" pos:end="1333:33"><expr pos:start="1333:31" pos:end="1333:33"><name pos:start="1333:31" pos:end="1333:33">shr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <break pos:start="1337:17" pos:end="1337:22">break;</break>



            <case pos:start="1341:13" pos:end="1341:20">case <expr pos:start="1341:18" pos:end="1341:19"><literal type="number" pos:start="1341:18" pos:end="1341:19">10</literal></expr>:</case> <comment type="block" pos:start="1341:22" pos:end="1341:28">/*SLL*/</comment>

                <expr_stmt pos:start="1343:17" pos:end="1343:52"><expr pos:start="1343:17" pos:end="1343:51"><call pos:start="1343:17" pos:end="1343:51"><name pos:start="1343:17" pos:end="1343:33">gen_window_check2</name><argument_list pos:start="1343:34" pos:end="1343:51">(<argument pos:start="1343:35" pos:end="1343:36"><expr pos:start="1343:35" pos:end="1343:36"><name pos:start="1343:35" pos:end="1343:36">dc</name></expr></argument>, <argument pos:start="1343:39" pos:end="1343:43"><expr pos:start="1343:39" pos:end="1343:43"><name pos:start="1343:39" pos:end="1343:43">RRR_R</name></expr></argument>, <argument pos:start="1343:46" pos:end="1343:50"><expr pos:start="1343:46" pos:end="1343:50"><name pos:start="1343:46" pos:end="1343:50">RRR_S</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1345:17" pos:end="1365:17"><if pos:start="1345:17" pos:end="1349:17">if <condition pos:start="1345:20" pos:end="1345:37">(<expr pos:start="1345:21" pos:end="1345:36"><name pos:start="1345:21" pos:end="1345:36"><name pos:start="1345:21" pos:end="1345:22">dc</name><operator pos:start="1345:23" pos:end="1345:24">-&gt;</operator><name pos:start="1345:25" pos:end="1345:36">sar_m32_5bit</name></name></expr>)</condition> <block pos:start="1345:39" pos:end="1349:17">{<block_content pos:start="1347:21" pos:end="1347:77">

                    <expr_stmt pos:start="1347:21" pos:end="1347:77"><expr pos:start="1347:21" pos:end="1347:76"><call pos:start="1347:21" pos:end="1347:76"><name pos:start="1347:21" pos:end="1347:35">tcg_gen_shl_i32</name><argument_list pos:start="1347:36" pos:end="1347:76">(<argument pos:start="1347:37" pos:end="1347:48"><expr pos:start="1347:37" pos:end="1347:48"><name pos:start="1347:37" pos:end="1347:48"><name pos:start="1347:37" pos:end="1347:41">cpu_R</name><index pos:start="1347:42" pos:end="1347:48">[<expr pos:start="1347:43" pos:end="1347:47"><name pos:start="1347:43" pos:end="1347:47">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="1347:51" pos:end="1347:62"><expr pos:start="1347:51" pos:end="1347:62"><name pos:start="1347:51" pos:end="1347:62"><name pos:start="1347:51" pos:end="1347:55">cpu_R</name><index pos:start="1347:56" pos:end="1347:62">[<expr pos:start="1347:57" pos:end="1347:61"><name pos:start="1347:57" pos:end="1347:61">RRR_S</name></expr>]</index></name></expr></argument>, <argument pos:start="1347:65" pos:end="1347:75"><expr pos:start="1347:65" pos:end="1347:75"><name pos:start="1347:65" pos:end="1347:75"><name pos:start="1347:65" pos:end="1347:66">dc</name><operator pos:start="1347:67" pos:end="1347:68">-&gt;</operator><name pos:start="1347:69" pos:end="1347:75">sar_m32</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1349:19" pos:end="1365:17">else <block pos:start="1349:24" pos:end="1365:17">{<block_content pos:start="1351:21" pos:end="1363:37">

                    <decl_stmt pos:start="1351:21" pos:end="1351:52"><decl pos:start="1351:21" pos:end="1351:51"><type pos:start="1351:21" pos:end="1351:28"><name pos:start="1351:21" pos:end="1351:28">TCGv_i64</name></type> <name pos:start="1351:30" pos:end="1351:30">v</name> <init pos:start="1351:32" pos:end="1351:51">= <expr pos:start="1351:34" pos:end="1351:51"><call pos:start="1351:34" pos:end="1351:51"><name pos:start="1351:34" pos:end="1351:49">tcg_temp_new_i64</name><argument_list pos:start="1351:50" pos:end="1351:51">()</argument_list></call></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="1353:21" pos:end="1353:51"><decl pos:start="1353:21" pos:end="1353:50"><type pos:start="1353:21" pos:end="1353:28"><name pos:start="1353:21" pos:end="1353:28">TCGv_i32</name></type> <name pos:start="1353:30" pos:end="1353:30">s</name> <init pos:start="1353:32" pos:end="1353:50">= <expr pos:start="1353:34" pos:end="1353:50"><call pos:start="1353:34" pos:end="1353:50"><name pos:start="1353:34" pos:end="1353:46">tcg_const_i32</name><argument_list pos:start="1353:47" pos:end="1353:50">(<argument pos:start="1353:48" pos:end="1353:49"><expr pos:start="1353:48" pos:end="1353:49"><literal type="number" pos:start="1353:48" pos:end="1353:49">32</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="1355:21" pos:end="1355:55"><expr pos:start="1355:21" pos:end="1355:54"><call pos:start="1355:21" pos:end="1355:54"><name pos:start="1355:21" pos:end="1355:35">tcg_gen_sub_i32</name><argument_list pos:start="1355:36" pos:end="1355:54">(<argument pos:start="1355:37" pos:end="1355:37"><expr pos:start="1355:37" pos:end="1355:37"><name pos:start="1355:37" pos:end="1355:37">s</name></expr></argument>, <argument pos:start="1355:40" pos:end="1355:40"><expr pos:start="1355:40" pos:end="1355:40"><name pos:start="1355:40" pos:end="1355:40">s</name></expr></argument>, <argument pos:start="1355:43" pos:end="1355:53"><expr pos:start="1355:43" pos:end="1355:53"><name pos:start="1355:43" pos:end="1355:53"><name pos:start="1355:43" pos:end="1355:48">cpu_SR</name><index pos:start="1355:49" pos:end="1355:53">[<expr pos:start="1355:50" pos:end="1355:52"><name pos:start="1355:50" pos:end="1355:52">SAR</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1357:21" pos:end="1357:49"><expr pos:start="1357:21" pos:end="1357:48"><call pos:start="1357:21" pos:end="1357:48"><name pos:start="1357:21" pos:end="1357:36">tcg_gen_andi_i32</name><argument_list pos:start="1357:37" pos:end="1357:48">(<argument pos:start="1357:38" pos:end="1357:38"><expr pos:start="1357:38" pos:end="1357:38"><name pos:start="1357:38" pos:end="1357:38">s</name></expr></argument>, <argument pos:start="1357:41" pos:end="1357:41"><expr pos:start="1357:41" pos:end="1357:41"><name pos:start="1357:41" pos:end="1357:41">s</name></expr></argument>, <argument pos:start="1357:44" pos:end="1357:47"><expr pos:start="1357:44" pos:end="1357:47"><literal type="number" pos:start="1357:44" pos:end="1357:47">0x3f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1359:21" pos:end="1359:58"><expr pos:start="1359:21" pos:end="1359:57"><call pos:start="1359:21" pos:end="1359:57"><name pos:start="1359:21" pos:end="1359:40">tcg_gen_extu_i32_i64</name><argument_list pos:start="1359:41" pos:end="1359:57">(<argument pos:start="1359:42" pos:end="1359:42"><expr pos:start="1359:42" pos:end="1359:42"><name pos:start="1359:42" pos:end="1359:42">v</name></expr></argument>, <argument pos:start="1359:45" pos:end="1359:56"><expr pos:start="1359:45" pos:end="1359:56"><name pos:start="1359:45" pos:end="1359:56"><name pos:start="1359:45" pos:end="1359:49">cpu_R</name><index pos:start="1359:50" pos:end="1359:56">[<expr pos:start="1359:51" pos:end="1359:55"><name pos:start="1359:51" pos:end="1359:55">RRR_S</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1361:21" pos:end="1361:42"><expr pos:start="1361:21" pos:end="1361:41"><call pos:start="1361:21" pos:end="1361:41"><name pos:start="1361:21" pos:end="1361:33">gen_shift_reg</name><argument_list pos:start="1361:34" pos:end="1361:41">(<argument pos:start="1361:35" pos:end="1361:37"><expr pos:start="1361:35" pos:end="1361:37"><name pos:start="1361:35" pos:end="1361:37">shl</name></expr></argument>, <argument pos:start="1361:40" pos:end="1361:40"><expr pos:start="1361:40" pos:end="1361:40"><name pos:start="1361:40" pos:end="1361:40">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1363:21" pos:end="1363:37"><expr pos:start="1363:21" pos:end="1363:36"><call pos:start="1363:21" pos:end="1363:36"><name pos:start="1363:21" pos:end="1363:33">tcg_temp_free</name><argument_list pos:start="1363:34" pos:end="1363:36">(<argument pos:start="1363:35" pos:end="1363:35"><expr pos:start="1363:35" pos:end="1363:35"><name pos:start="1363:35" pos:end="1363:35">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <break pos:start="1367:17" pos:end="1367:22">break;</break>



            <case pos:start="1371:13" pos:end="1371:20">case <expr pos:start="1371:18" pos:end="1371:19"><literal type="number" pos:start="1371:18" pos:end="1371:19">11</literal></expr>:</case> <comment type="block" pos:start="1371:22" pos:end="1371:28">/*SRA*/</comment>

                <expr_stmt pos:start="1373:17" pos:end="1373:52"><expr pos:start="1373:17" pos:end="1373:51"><call pos:start="1373:17" pos:end="1373:51"><name pos:start="1373:17" pos:end="1373:33">gen_window_check2</name><argument_list pos:start="1373:34" pos:end="1373:51">(<argument pos:start="1373:35" pos:end="1373:36"><expr pos:start="1373:35" pos:end="1373:36"><name pos:start="1373:35" pos:end="1373:36">dc</name></expr></argument>, <argument pos:start="1373:39" pos:end="1373:43"><expr pos:start="1373:39" pos:end="1373:43"><name pos:start="1373:39" pos:end="1373:43">RRR_R</name></expr></argument>, <argument pos:start="1373:46" pos:end="1373:50"><expr pos:start="1373:46" pos:end="1373:50"><name pos:start="1373:46" pos:end="1373:50">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1375:17" pos:end="1387:17"><if pos:start="1375:17" pos:end="1379:17">if <condition pos:start="1375:20" pos:end="1375:33">(<expr pos:start="1375:21" pos:end="1375:32"><name pos:start="1375:21" pos:end="1375:32"><name pos:start="1375:21" pos:end="1375:22">dc</name><operator pos:start="1375:23" pos:end="1375:24">-&gt;</operator><name pos:start="1375:25" pos:end="1375:32">sar_5bit</name></name></expr>)</condition> <block pos:start="1375:35" pos:end="1379:17">{<block_content pos:start="1377:21" pos:end="1377:77">

                    <expr_stmt pos:start="1377:21" pos:end="1377:77"><expr pos:start="1377:21" pos:end="1377:76"><call pos:start="1377:21" pos:end="1377:76"><name pos:start="1377:21" pos:end="1377:35">tcg_gen_sar_i32</name><argument_list pos:start="1377:36" pos:end="1377:76">(<argument pos:start="1377:37" pos:end="1377:48"><expr pos:start="1377:37" pos:end="1377:48"><name pos:start="1377:37" pos:end="1377:48"><name pos:start="1377:37" pos:end="1377:41">cpu_R</name><index pos:start="1377:42" pos:end="1377:48">[<expr pos:start="1377:43" pos:end="1377:47"><name pos:start="1377:43" pos:end="1377:47">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="1377:51" pos:end="1377:62"><expr pos:start="1377:51" pos:end="1377:62"><name pos:start="1377:51" pos:end="1377:62"><name pos:start="1377:51" pos:end="1377:55">cpu_R</name><index pos:start="1377:56" pos:end="1377:62">[<expr pos:start="1377:57" pos:end="1377:61"><name pos:start="1377:57" pos:end="1377:61">RRR_T</name></expr>]</index></name></expr></argument>, <argument pos:start="1377:65" pos:end="1377:75"><expr pos:start="1377:65" pos:end="1377:75"><name pos:start="1377:65" pos:end="1377:75"><name pos:start="1377:65" pos:end="1377:70">cpu_SR</name><index pos:start="1377:71" pos:end="1377:75">[<expr pos:start="1377:72" pos:end="1377:74"><name pos:start="1377:72" pos:end="1377:74">SAR</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1379:19" pos:end="1387:17">else <block pos:start="1379:24" pos:end="1387:17">{<block_content pos:start="1381:21" pos:end="1385:35">

                    <decl_stmt pos:start="1381:21" pos:end="1381:52"><decl pos:start="1381:21" pos:end="1381:51"><type pos:start="1381:21" pos:end="1381:28"><name pos:start="1381:21" pos:end="1381:28">TCGv_i64</name></type> <name pos:start="1381:30" pos:end="1381:30">v</name> <init pos:start="1381:32" pos:end="1381:51">= <expr pos:start="1381:34" pos:end="1381:51"><call pos:start="1381:34" pos:end="1381:51"><name pos:start="1381:34" pos:end="1381:49">tcg_temp_new_i64</name><argument_list pos:start="1381:50" pos:end="1381:51">()</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="1383:21" pos:end="1383:57"><expr pos:start="1383:21" pos:end="1383:56"><call pos:start="1383:21" pos:end="1383:56"><name pos:start="1383:21" pos:end="1383:39">tcg_gen_ext_i32_i64</name><argument_list pos:start="1383:40" pos:end="1383:56">(<argument pos:start="1383:41" pos:end="1383:41"><expr pos:start="1383:41" pos:end="1383:41"><name pos:start="1383:41" pos:end="1383:41">v</name></expr></argument>, <argument pos:start="1383:44" pos:end="1383:55"><expr pos:start="1383:44" pos:end="1383:55"><name pos:start="1383:44" pos:end="1383:55"><name pos:start="1383:44" pos:end="1383:48">cpu_R</name><index pos:start="1383:49" pos:end="1383:55">[<expr pos:start="1383:50" pos:end="1383:54"><name pos:start="1383:50" pos:end="1383:54">RRR_T</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1385:21" pos:end="1385:35"><expr pos:start="1385:21" pos:end="1385:34"><call pos:start="1385:21" pos:end="1385:34"><name pos:start="1385:21" pos:end="1385:29">gen_shift</name><argument_list pos:start="1385:30" pos:end="1385:34">(<argument pos:start="1385:31" pos:end="1385:33"><expr pos:start="1385:31" pos:end="1385:33"><name pos:start="1385:31" pos:end="1385:33">sar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <break pos:start="1389:17" pos:end="1394:0">break;</break>

<cpp:undef pos:start="1391:1" pos:end="1391:16">#<cpp:directive pos:start="1391:2" pos:end="1391:6">undef</cpp:directive> <name pos:start="1391:8" pos:end="1391:16">gen_shift</name></cpp:undef>

<cpp:undef pos:start="1393:1" pos:end="1393:20">#<cpp:directive pos:start="1393:2" pos:end="1393:6">undef</cpp:directive> <name pos:start="1393:8" pos:end="1393:20">gen_shift_reg</name></cpp:undef>



            <case pos:start="1397:13" pos:end="1397:20">case <expr pos:start="1397:18" pos:end="1397:19"><literal type="number" pos:start="1397:18" pos:end="1397:19">12</literal></expr>:</case> <comment type="block" pos:start="1397:22" pos:end="1397:31">/*MUL16U*/</comment>

                <expr_stmt pos:start="1399:17" pos:end="1399:54"><expr pos:start="1399:17" pos:end="1399:53"><call pos:start="1399:17" pos:end="1399:53"><name pos:start="1399:17" pos:end="1399:26">HAS_OPTION</name><argument_list pos:start="1399:27" pos:end="1399:53">(<argument pos:start="1399:28" pos:end="1399:52"><expr pos:start="1399:28" pos:end="1399:52"><name pos:start="1399:28" pos:end="1399:52">XTENSA_OPTION_16_BIT_IMUL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1401:17" pos:end="1401:59"><expr pos:start="1401:17" pos:end="1401:58"><call pos:start="1401:17" pos:end="1401:58"><name pos:start="1401:17" pos:end="1401:33">gen_window_check3</name><argument_list pos:start="1401:34" pos:end="1401:58">(<argument pos:start="1401:35" pos:end="1401:36"><expr pos:start="1401:35" pos:end="1401:36"><name pos:start="1401:35" pos:end="1401:36">dc</name></expr></argument>, <argument pos:start="1401:39" pos:end="1401:43"><expr pos:start="1401:39" pos:end="1401:43"><name pos:start="1401:39" pos:end="1401:43">RRR_R</name></expr></argument>, <argument pos:start="1401:46" pos:end="1401:50"><expr pos:start="1401:46" pos:end="1401:50"><name pos:start="1401:46" pos:end="1401:50">RRR_S</name></expr></argument>, <argument pos:start="1401:53" pos:end="1401:57"><expr pos:start="1401:53" pos:end="1401:57"><name pos:start="1401:53" pos:end="1401:57">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <block pos:start="1403:17" pos:end="1419:17">{<block_content pos:start="1405:21" pos:end="1417:38">

                    <decl_stmt pos:start="1405:21" pos:end="1405:53"><decl pos:start="1405:21" pos:end="1405:52"><type pos:start="1405:21" pos:end="1405:28"><name pos:start="1405:21" pos:end="1405:28">TCGv_i32</name></type> <name pos:start="1405:30" pos:end="1405:31">v1</name> <init pos:start="1405:33" pos:end="1405:52">= <expr pos:start="1405:35" pos:end="1405:52"><call pos:start="1405:35" pos:end="1405:52"><name pos:start="1405:35" pos:end="1405:50">tcg_temp_new_i32</name><argument_list pos:start="1405:51" pos:end="1405:52">()</argument_list></call></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="1407:21" pos:end="1407:53"><decl pos:start="1407:21" pos:end="1407:52"><type pos:start="1407:21" pos:end="1407:28"><name pos:start="1407:21" pos:end="1407:28">TCGv_i32</name></type> <name pos:start="1407:30" pos:end="1407:31">v2</name> <init pos:start="1407:33" pos:end="1407:52">= <expr pos:start="1407:35" pos:end="1407:52"><call pos:start="1407:35" pos:end="1407:52"><name pos:start="1407:35" pos:end="1407:50">tcg_temp_new_i32</name><argument_list pos:start="1407:51" pos:end="1407:52">()</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="1409:21" pos:end="1409:57"><expr pos:start="1409:21" pos:end="1409:56"><call pos:start="1409:21" pos:end="1409:56"><name pos:start="1409:21" pos:end="1409:38">tcg_gen_ext16u_i32</name><argument_list pos:start="1409:39" pos:end="1409:56">(<argument pos:start="1409:40" pos:end="1409:41"><expr pos:start="1409:40" pos:end="1409:41"><name pos:start="1409:40" pos:end="1409:41">v1</name></expr></argument>, <argument pos:start="1409:44" pos:end="1409:55"><expr pos:start="1409:44" pos:end="1409:55"><name pos:start="1409:44" pos:end="1409:55"><name pos:start="1409:44" pos:end="1409:48">cpu_R</name><index pos:start="1409:49" pos:end="1409:55">[<expr pos:start="1409:50" pos:end="1409:54"><name pos:start="1409:50" pos:end="1409:54">RRR_S</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1411:21" pos:end="1411:57"><expr pos:start="1411:21" pos:end="1411:56"><call pos:start="1411:21" pos:end="1411:56"><name pos:start="1411:21" pos:end="1411:38">tcg_gen_ext16u_i32</name><argument_list pos:start="1411:39" pos:end="1411:56">(<argument pos:start="1411:40" pos:end="1411:41"><expr pos:start="1411:40" pos:end="1411:41"><name pos:start="1411:40" pos:end="1411:41">v2</name></expr></argument>, <argument pos:start="1411:44" pos:end="1411:55"><expr pos:start="1411:44" pos:end="1411:55"><name pos:start="1411:44" pos:end="1411:55"><name pos:start="1411:44" pos:end="1411:48">cpu_R</name><index pos:start="1411:49" pos:end="1411:55">[<expr pos:start="1411:50" pos:end="1411:54"><name pos:start="1411:50" pos:end="1411:54">RRR_T</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1413:21" pos:end="1413:58"><expr pos:start="1413:21" pos:end="1413:57"><call pos:start="1413:21" pos:end="1413:57"><name pos:start="1413:21" pos:end="1413:35">tcg_gen_mul_i32</name><argument_list pos:start="1413:36" pos:end="1413:57">(<argument pos:start="1413:37" pos:end="1413:48"><expr pos:start="1413:37" pos:end="1413:48"><name pos:start="1413:37" pos:end="1413:48"><name pos:start="1413:37" pos:end="1413:41">cpu_R</name><index pos:start="1413:42" pos:end="1413:48">[<expr pos:start="1413:43" pos:end="1413:47"><name pos:start="1413:43" pos:end="1413:47">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="1413:51" pos:end="1413:52"><expr pos:start="1413:51" pos:end="1413:52"><name pos:start="1413:51" pos:end="1413:52">v1</name></expr></argument>, <argument pos:start="1413:55" pos:end="1413:56"><expr pos:start="1413:55" pos:end="1413:56"><name pos:start="1413:55" pos:end="1413:56">v2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1415:21" pos:end="1415:38"><expr pos:start="1415:21" pos:end="1415:37"><call pos:start="1415:21" pos:end="1415:37"><name pos:start="1415:21" pos:end="1415:33">tcg_temp_free</name><argument_list pos:start="1415:34" pos:end="1415:37">(<argument pos:start="1415:35" pos:end="1415:36"><expr pos:start="1415:35" pos:end="1415:36"><name pos:start="1415:35" pos:end="1415:36">v2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1417:21" pos:end="1417:38"><expr pos:start="1417:21" pos:end="1417:37"><call pos:start="1417:21" pos:end="1417:37"><name pos:start="1417:21" pos:end="1417:33">tcg_temp_free</name><argument_list pos:start="1417:34" pos:end="1417:37">(<argument pos:start="1417:35" pos:end="1417:36"><expr pos:start="1417:35" pos:end="1417:36"><name pos:start="1417:35" pos:end="1417:36">v1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block>

                <break pos:start="1421:17" pos:end="1421:22">break;</break>



            <case pos:start="1425:13" pos:end="1425:20">case <expr pos:start="1425:18" pos:end="1425:19"><literal type="number" pos:start="1425:18" pos:end="1425:19">13</literal></expr>:</case> <comment type="block" pos:start="1425:22" pos:end="1425:31">/*MUL16S*/</comment>

                <expr_stmt pos:start="1427:17" pos:end="1427:54"><expr pos:start="1427:17" pos:end="1427:53"><call pos:start="1427:17" pos:end="1427:53"><name pos:start="1427:17" pos:end="1427:26">HAS_OPTION</name><argument_list pos:start="1427:27" pos:end="1427:53">(<argument pos:start="1427:28" pos:end="1427:52"><expr pos:start="1427:28" pos:end="1427:52"><name pos:start="1427:28" pos:end="1427:52">XTENSA_OPTION_16_BIT_IMUL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1429:17" pos:end="1429:59"><expr pos:start="1429:17" pos:end="1429:58"><call pos:start="1429:17" pos:end="1429:58"><name pos:start="1429:17" pos:end="1429:33">gen_window_check3</name><argument_list pos:start="1429:34" pos:end="1429:58">(<argument pos:start="1429:35" pos:end="1429:36"><expr pos:start="1429:35" pos:end="1429:36"><name pos:start="1429:35" pos:end="1429:36">dc</name></expr></argument>, <argument pos:start="1429:39" pos:end="1429:43"><expr pos:start="1429:39" pos:end="1429:43"><name pos:start="1429:39" pos:end="1429:43">RRR_R</name></expr></argument>, <argument pos:start="1429:46" pos:end="1429:50"><expr pos:start="1429:46" pos:end="1429:50"><name pos:start="1429:46" pos:end="1429:50">RRR_S</name></expr></argument>, <argument pos:start="1429:53" pos:end="1429:57"><expr pos:start="1429:53" pos:end="1429:57"><name pos:start="1429:53" pos:end="1429:57">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <block pos:start="1431:17" pos:end="1447:17">{<block_content pos:start="1433:21" pos:end="1445:38">

                    <decl_stmt pos:start="1433:21" pos:end="1433:53"><decl pos:start="1433:21" pos:end="1433:52"><type pos:start="1433:21" pos:end="1433:28"><name pos:start="1433:21" pos:end="1433:28">TCGv_i32</name></type> <name pos:start="1433:30" pos:end="1433:31">v1</name> <init pos:start="1433:33" pos:end="1433:52">= <expr pos:start="1433:35" pos:end="1433:52"><call pos:start="1433:35" pos:end="1433:52"><name pos:start="1433:35" pos:end="1433:50">tcg_temp_new_i32</name><argument_list pos:start="1433:51" pos:end="1433:52">()</argument_list></call></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="1435:21" pos:end="1435:53"><decl pos:start="1435:21" pos:end="1435:52"><type pos:start="1435:21" pos:end="1435:28"><name pos:start="1435:21" pos:end="1435:28">TCGv_i32</name></type> <name pos:start="1435:30" pos:end="1435:31">v2</name> <init pos:start="1435:33" pos:end="1435:52">= <expr pos:start="1435:35" pos:end="1435:52"><call pos:start="1435:35" pos:end="1435:52"><name pos:start="1435:35" pos:end="1435:50">tcg_temp_new_i32</name><argument_list pos:start="1435:51" pos:end="1435:52">()</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="1437:21" pos:end="1437:57"><expr pos:start="1437:21" pos:end="1437:56"><call pos:start="1437:21" pos:end="1437:56"><name pos:start="1437:21" pos:end="1437:38">tcg_gen_ext16s_i32</name><argument_list pos:start="1437:39" pos:end="1437:56">(<argument pos:start="1437:40" pos:end="1437:41"><expr pos:start="1437:40" pos:end="1437:41"><name pos:start="1437:40" pos:end="1437:41">v1</name></expr></argument>, <argument pos:start="1437:44" pos:end="1437:55"><expr pos:start="1437:44" pos:end="1437:55"><name pos:start="1437:44" pos:end="1437:55"><name pos:start="1437:44" pos:end="1437:48">cpu_R</name><index pos:start="1437:49" pos:end="1437:55">[<expr pos:start="1437:50" pos:end="1437:54"><name pos:start="1437:50" pos:end="1437:54">RRR_S</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1439:21" pos:end="1439:57"><expr pos:start="1439:21" pos:end="1439:56"><call pos:start="1439:21" pos:end="1439:56"><name pos:start="1439:21" pos:end="1439:38">tcg_gen_ext16s_i32</name><argument_list pos:start="1439:39" pos:end="1439:56">(<argument pos:start="1439:40" pos:end="1439:41"><expr pos:start="1439:40" pos:end="1439:41"><name pos:start="1439:40" pos:end="1439:41">v2</name></expr></argument>, <argument pos:start="1439:44" pos:end="1439:55"><expr pos:start="1439:44" pos:end="1439:55"><name pos:start="1439:44" pos:end="1439:55"><name pos:start="1439:44" pos:end="1439:48">cpu_R</name><index pos:start="1439:49" pos:end="1439:55">[<expr pos:start="1439:50" pos:end="1439:54"><name pos:start="1439:50" pos:end="1439:54">RRR_T</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1441:21" pos:end="1441:58"><expr pos:start="1441:21" pos:end="1441:57"><call pos:start="1441:21" pos:end="1441:57"><name pos:start="1441:21" pos:end="1441:35">tcg_gen_mul_i32</name><argument_list pos:start="1441:36" pos:end="1441:57">(<argument pos:start="1441:37" pos:end="1441:48"><expr pos:start="1441:37" pos:end="1441:48"><name pos:start="1441:37" pos:end="1441:48"><name pos:start="1441:37" pos:end="1441:41">cpu_R</name><index pos:start="1441:42" pos:end="1441:48">[<expr pos:start="1441:43" pos:end="1441:47"><name pos:start="1441:43" pos:end="1441:47">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="1441:51" pos:end="1441:52"><expr pos:start="1441:51" pos:end="1441:52"><name pos:start="1441:51" pos:end="1441:52">v1</name></expr></argument>, <argument pos:start="1441:55" pos:end="1441:56"><expr pos:start="1441:55" pos:end="1441:56"><name pos:start="1441:55" pos:end="1441:56">v2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1443:21" pos:end="1443:38"><expr pos:start="1443:21" pos:end="1443:37"><call pos:start="1443:21" pos:end="1443:37"><name pos:start="1443:21" pos:end="1443:33">tcg_temp_free</name><argument_list pos:start="1443:34" pos:end="1443:37">(<argument pos:start="1443:35" pos:end="1443:36"><expr pos:start="1443:35" pos:end="1443:36"><name pos:start="1443:35" pos:end="1443:36">v2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1445:21" pos:end="1445:38"><expr pos:start="1445:21" pos:end="1445:37"><call pos:start="1445:21" pos:end="1445:37"><name pos:start="1445:21" pos:end="1445:33">tcg_temp_free</name><argument_list pos:start="1445:34" pos:end="1445:37">(<argument pos:start="1445:35" pos:end="1445:36"><expr pos:start="1445:35" pos:end="1445:36"><name pos:start="1445:35" pos:end="1445:36">v1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block>

                <break pos:start="1449:17" pos:end="1449:22">break;</break>



            <default pos:start="1453:13" pos:end="1453:20">default:</default> <comment type="block" pos:start="1453:22" pos:end="1453:33">/*reserved*/</comment>

                <expr_stmt pos:start="1455:17" pos:end="1455:27"><expr pos:start="1455:17" pos:end="1455:26"><call pos:start="1455:17" pos:end="1455:26"><name pos:start="1455:17" pos:end="1455:24">RESERVED</name><argument_list pos:start="1455:25" pos:end="1455:26">()</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1457:17" pos:end="1457:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="1461:13" pos:end="1461:18">break;</break>



        <case pos:start="1465:9" pos:end="1465:15">case <expr pos:start="1465:14" pos:end="1465:14"><literal type="number" pos:start="1465:14" pos:end="1465:14">2</literal></expr>:</case> <comment type="block" pos:start="1465:17" pos:end="1465:24">/*RST2*/</comment>

            <if_stmt pos:start="1467:13" pos:end="1471:13"><if pos:start="1467:13" pos:end="1471:13">if <condition pos:start="1467:16" pos:end="1467:25">(<expr pos:start="1467:17" pos:end="1467:24"><name pos:start="1467:17" pos:end="1467:19">OP2</name> <operator pos:start="1467:21" pos:end="1467:22">&gt;=</operator> <literal type="number" pos:start="1467:24" pos:end="1467:24">8</literal></expr>)</condition> <block pos:start="1467:27" pos:end="1471:13">{<block_content pos:start="1469:17" pos:end="1469:59">

                <expr_stmt pos:start="1469:17" pos:end="1469:59"><expr pos:start="1469:17" pos:end="1469:58"><call pos:start="1469:17" pos:end="1469:58"><name pos:start="1469:17" pos:end="1469:33">gen_window_check3</name><argument_list pos:start="1469:34" pos:end="1469:58">(<argument pos:start="1469:35" pos:end="1469:36"><expr pos:start="1469:35" pos:end="1469:36"><name pos:start="1469:35" pos:end="1469:36">dc</name></expr></argument>, <argument pos:start="1469:39" pos:end="1469:43"><expr pos:start="1469:39" pos:end="1469:43"><name pos:start="1469:39" pos:end="1469:43">RRR_R</name></expr></argument>, <argument pos:start="1469:46" pos:end="1469:50"><expr pos:start="1469:46" pos:end="1469:50"><name pos:start="1469:46" pos:end="1469:50">RRR_S</name></expr></argument>, <argument pos:start="1469:53" pos:end="1469:57"><expr pos:start="1469:53" pos:end="1469:57"><name pos:start="1469:53" pos:end="1469:57">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="1475:13" pos:end="1487:13"><if pos:start="1475:13" pos:end="1487:13">if <condition pos:start="1475:16" pos:end="1475:26">(<expr pos:start="1475:17" pos:end="1475:25"><name pos:start="1475:17" pos:end="1475:19">OP2</name> <operator pos:start="1475:21" pos:end="1475:22">&gt;=</operator> <literal type="number" pos:start="1475:24" pos:end="1475:25">12</literal></expr>)</condition> <block pos:start="1475:28" pos:end="1487:13">{<block_content pos:start="1477:17" pos:end="1485:37">

                <expr_stmt pos:start="1477:17" pos:end="1477:54"><expr pos:start="1477:17" pos:end="1477:53"><call pos:start="1477:17" pos:end="1477:53"><name pos:start="1477:17" pos:end="1477:26">HAS_OPTION</name><argument_list pos:start="1477:27" pos:end="1477:53">(<argument pos:start="1477:28" pos:end="1477:52"><expr pos:start="1477:28" pos:end="1477:52"><name pos:start="1477:28" pos:end="1477:52">XTENSA_OPTION_32_BIT_IDIV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <decl_stmt pos:start="1479:17" pos:end="1479:44"><decl pos:start="1479:17" pos:end="1479:43"><type pos:start="1479:17" pos:end="1479:19"><name pos:start="1479:17" pos:end="1479:19">int</name></type> <name pos:start="1479:21" pos:end="1479:25">label</name> <init pos:start="1479:27" pos:end="1479:43">= <expr pos:start="1479:29" pos:end="1479:43"><call pos:start="1479:29" pos:end="1479:43"><name pos:start="1479:29" pos:end="1479:41">gen_new_label</name><argument_list pos:start="1479:42" pos:end="1479:43">()</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="1481:17" pos:end="1481:73"><expr pos:start="1481:17" pos:end="1481:72"><call pos:start="1481:17" pos:end="1481:72"><name pos:start="1481:17" pos:end="1481:35">tcg_gen_brcondi_i32</name><argument_list pos:start="1481:36" pos:end="1481:72">(<argument pos:start="1481:37" pos:end="1481:47"><expr pos:start="1481:37" pos:end="1481:47"><name pos:start="1481:37" pos:end="1481:47">TCG_COND_NE</name></expr></argument>, <argument pos:start="1481:50" pos:end="1481:61"><expr pos:start="1481:50" pos:end="1481:61"><name pos:start="1481:50" pos:end="1481:61"><name pos:start="1481:50" pos:end="1481:54">cpu_R</name><index pos:start="1481:55" pos:end="1481:61">[<expr pos:start="1481:56" pos:end="1481:60"><name pos:start="1481:56" pos:end="1481:60">RRR_T</name></expr>]</index></name></expr></argument>, <argument pos:start="1481:64" pos:end="1481:64"><expr pos:start="1481:64" pos:end="1481:64"><literal type="number" pos:start="1481:64" pos:end="1481:64">0</literal></expr></argument>, <argument pos:start="1481:67" pos:end="1481:71"><expr pos:start="1481:67" pos:end="1481:71"><name pos:start="1481:67" pos:end="1481:71">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1483:17" pos:end="1483:70"><expr pos:start="1483:17" pos:end="1483:69"><call pos:start="1483:17" pos:end="1483:69"><name pos:start="1483:17" pos:end="1483:35">gen_exception_cause</name><argument_list pos:start="1483:36" pos:end="1483:69">(<argument pos:start="1483:37" pos:end="1483:38"><expr pos:start="1483:37" pos:end="1483:38"><name pos:start="1483:37" pos:end="1483:38">dc</name></expr></argument>, <argument pos:start="1483:41" pos:end="1483:68"><expr pos:start="1483:41" pos:end="1483:68"><name pos:start="1483:41" pos:end="1483:68">INTEGER_DIVIDE_BY_ZERO_CAUSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1485:17" pos:end="1485:37"><expr pos:start="1485:17" pos:end="1485:36"><call pos:start="1485:17" pos:end="1485:36"><name pos:start="1485:17" pos:end="1485:29">gen_set_label</name><argument_list pos:start="1485:30" pos:end="1485:36">(<argument pos:start="1485:31" pos:end="1485:35"><expr pos:start="1485:31" pos:end="1485:35"><name pos:start="1485:31" pos:end="1485:35">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <switch pos:start="1491:13" pos:end="1697:13">switch <condition pos:start="1491:20" pos:end="1491:24">(<expr pos:start="1491:21" pos:end="1491:23"><name pos:start="1491:21" pos:end="1491:23">OP2</name></expr>)</condition> <block pos:start="1491:26" pos:end="1697:13">{<block_content pos:start="1521:13" pos:end="1695:22">

<cpp:define pos:start="1493:1" pos:end="1517:27">#<cpp:directive pos:start="1493:2" pos:end="1493:7">define</cpp:directive> <cpp:macro pos:start="1493:9" pos:end="1493:34"><name pos:start="1493:9" pos:end="1493:21">BOOLEAN_LOGIC</name><parameter_list pos:start="1493:22" pos:end="1493:34">(<parameter pos:start="1493:23" pos:end="1493:24"><type pos:start="1493:23" pos:end="1493:24"><name pos:start="1493:23" pos:end="1493:24">fn</name></type></parameter>, <parameter pos:start="1493:27" pos:end="1493:27"><type pos:start="1493:27" pos:end="1493:27"><name pos:start="1493:27" pos:end="1493:27">r</name></type></parameter>, <parameter pos:start="1493:30" pos:end="1493:30"><type pos:start="1493:30" pos:end="1493:30"><name pos:start="1493:30" pos:end="1493:30">s</name></type></parameter>, <parameter pos:start="1493:33" pos:end="1493:33"><type pos:start="1493:33" pos:end="1493:33"><name pos:start="1493:33" pos:end="1493:33">t</name></type></parameter>)</parameter_list></cpp:macro> \

                <cpp:value pos:start="1495:17" pos:end="1517:27">do { \

                    HAS_OPTION(XTENSA_OPTION_BOOLEAN); \

                    TCGv_i32 tmp1 = tcg_temp_new_i32(); \

                    TCGv_i32 tmp2 = tcg_temp_new_i32(); \

                    \

                    tcg_gen_shri_i32(tmp1, cpu_SR[BR], s); \

                    tcg_gen_shri_i32(tmp2, cpu_SR[BR], t); \

                    tcg_gen_##fn##_i32(tmp1, tmp1, tmp2); \

                    tcg_gen_deposit_i32(cpu_SR[BR], cpu_SR[BR], tmp1, r, 1); \

                    tcg_temp_free(tmp1); \

                    tcg_temp_free(tmp2); \

                } while (0)</cpp:value></cpp:define>



            <case pos:start="1521:13" pos:end="1521:19">case <expr pos:start="1521:18" pos:end="1521:18"><literal type="number" pos:start="1521:18" pos:end="1521:18">0</literal></expr>:</case> <comment type="block" pos:start="1521:21" pos:end="1521:29">/*ANDBp*/</comment>

                <expr_stmt pos:start="1523:17" pos:end="1523:56"><expr pos:start="1523:17" pos:end="1523:55"><call pos:start="1523:17" pos:end="1523:55"><name pos:start="1523:17" pos:end="1523:29">BOOLEAN_LOGIC</name><argument_list pos:start="1523:30" pos:end="1523:55">(<argument pos:start="1523:31" pos:end="1523:33"><expr pos:start="1523:31" pos:end="1523:33"><name pos:start="1523:31" pos:end="1523:33">and</name></expr></argument>, <argument pos:start="1523:36" pos:end="1523:40"><expr pos:start="1523:36" pos:end="1523:40"><name pos:start="1523:36" pos:end="1523:40">RRR_R</name></expr></argument>, <argument pos:start="1523:43" pos:end="1523:47"><expr pos:start="1523:43" pos:end="1523:47"><name pos:start="1523:43" pos:end="1523:47">RRR_S</name></expr></argument>, <argument pos:start="1523:50" pos:end="1523:54"><expr pos:start="1523:50" pos:end="1523:54"><name pos:start="1523:50" pos:end="1523:54">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1525:17" pos:end="1525:22">break;</break>



            <case pos:start="1529:13" pos:end="1529:19">case <expr pos:start="1529:18" pos:end="1529:18"><literal type="number" pos:start="1529:18" pos:end="1529:18">1</literal></expr>:</case> <comment type="block" pos:start="1529:21" pos:end="1529:30">/*ANDBCp*/</comment>

                <expr_stmt pos:start="1531:17" pos:end="1531:57"><expr pos:start="1531:17" pos:end="1531:56"><call pos:start="1531:17" pos:end="1531:56"><name pos:start="1531:17" pos:end="1531:29">BOOLEAN_LOGIC</name><argument_list pos:start="1531:30" pos:end="1531:56">(<argument pos:start="1531:31" pos:end="1531:34"><expr pos:start="1531:31" pos:end="1531:34"><name pos:start="1531:31" pos:end="1531:34">andc</name></expr></argument>, <argument pos:start="1531:37" pos:end="1531:41"><expr pos:start="1531:37" pos:end="1531:41"><name pos:start="1531:37" pos:end="1531:41">RRR_R</name></expr></argument>, <argument pos:start="1531:44" pos:end="1531:48"><expr pos:start="1531:44" pos:end="1531:48"><name pos:start="1531:44" pos:end="1531:48">RRR_S</name></expr></argument>, <argument pos:start="1531:51" pos:end="1531:55"><expr pos:start="1531:51" pos:end="1531:55"><name pos:start="1531:51" pos:end="1531:55">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1533:17" pos:end="1533:22">break;</break>



            <case pos:start="1537:13" pos:end="1537:19">case <expr pos:start="1537:18" pos:end="1537:18"><literal type="number" pos:start="1537:18" pos:end="1537:18">2</literal></expr>:</case> <comment type="block" pos:start="1537:21" pos:end="1537:28">/*ORBp*/</comment>

                <expr_stmt pos:start="1539:17" pos:end="1539:55"><expr pos:start="1539:17" pos:end="1539:54"><call pos:start="1539:17" pos:end="1539:54"><name pos:start="1539:17" pos:end="1539:29">BOOLEAN_LOGIC</name><argument_list pos:start="1539:30" pos:end="1539:54">(<argument pos:start="1539:31" pos:end="1539:32"><expr pos:start="1539:31" pos:end="1539:32"><name pos:start="1539:31" pos:end="1539:32">or</name></expr></argument>, <argument pos:start="1539:35" pos:end="1539:39"><expr pos:start="1539:35" pos:end="1539:39"><name pos:start="1539:35" pos:end="1539:39">RRR_R</name></expr></argument>, <argument pos:start="1539:42" pos:end="1539:46"><expr pos:start="1539:42" pos:end="1539:46"><name pos:start="1539:42" pos:end="1539:46">RRR_S</name></expr></argument>, <argument pos:start="1539:49" pos:end="1539:53"><expr pos:start="1539:49" pos:end="1539:53"><name pos:start="1539:49" pos:end="1539:53">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1541:17" pos:end="1541:22">break;</break>



            <case pos:start="1545:13" pos:end="1545:19">case <expr pos:start="1545:18" pos:end="1545:18"><literal type="number" pos:start="1545:18" pos:end="1545:18">3</literal></expr>:</case> <comment type="block" pos:start="1545:21" pos:end="1545:29">/*ORBCp*/</comment>

                <expr_stmt pos:start="1547:17" pos:end="1547:56"><expr pos:start="1547:17" pos:end="1547:55"><call pos:start="1547:17" pos:end="1547:55"><name pos:start="1547:17" pos:end="1547:29">BOOLEAN_LOGIC</name><argument_list pos:start="1547:30" pos:end="1547:55">(<argument pos:start="1547:31" pos:end="1547:33"><expr pos:start="1547:31" pos:end="1547:33"><name pos:start="1547:31" pos:end="1547:33">orc</name></expr></argument>, <argument pos:start="1547:36" pos:end="1547:40"><expr pos:start="1547:36" pos:end="1547:40"><name pos:start="1547:36" pos:end="1547:40">RRR_R</name></expr></argument>, <argument pos:start="1547:43" pos:end="1547:47"><expr pos:start="1547:43" pos:end="1547:47"><name pos:start="1547:43" pos:end="1547:47">RRR_S</name></expr></argument>, <argument pos:start="1547:50" pos:end="1547:54"><expr pos:start="1547:50" pos:end="1547:54"><name pos:start="1547:50" pos:end="1547:54">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1549:17" pos:end="1549:22">break;</break>



            <case pos:start="1553:13" pos:end="1553:19">case <expr pos:start="1553:18" pos:end="1553:18"><literal type="number" pos:start="1553:18" pos:end="1553:18">4</literal></expr>:</case> <comment type="block" pos:start="1553:21" pos:end="1553:29">/*XORBp*/</comment>

                <expr_stmt pos:start="1555:17" pos:end="1555:56"><expr pos:start="1555:17" pos:end="1555:55"><call pos:start="1555:17" pos:end="1555:55"><name pos:start="1555:17" pos:end="1555:29">BOOLEAN_LOGIC</name><argument_list pos:start="1555:30" pos:end="1555:55">(<argument pos:start="1555:31" pos:end="1555:33"><expr pos:start="1555:31" pos:end="1555:33"><name pos:start="1555:31" pos:end="1555:33">xor</name></expr></argument>, <argument pos:start="1555:36" pos:end="1555:40"><expr pos:start="1555:36" pos:end="1555:40"><name pos:start="1555:36" pos:end="1555:40">RRR_R</name></expr></argument>, <argument pos:start="1555:43" pos:end="1555:47"><expr pos:start="1555:43" pos:end="1555:47"><name pos:start="1555:43" pos:end="1555:47">RRR_S</name></expr></argument>, <argument pos:start="1555:50" pos:end="1555:54"><expr pos:start="1555:50" pos:end="1555:54"><name pos:start="1555:50" pos:end="1555:54">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1557:17" pos:end="1562:0">break;</break>



<cpp:undef pos:start="1561:1" pos:end="1561:20">#<cpp:directive pos:start="1561:2" pos:end="1561:6">undef</cpp:directive> <name pos:start="1561:8" pos:end="1561:20">BOOLEAN_LOGIC</name></cpp:undef>



            <case pos:start="1565:13" pos:end="1565:19">case <expr pos:start="1565:18" pos:end="1565:18"><literal type="number" pos:start="1565:18" pos:end="1565:18">8</literal></expr>:</case> <comment type="block" pos:start="1565:21" pos:end="1565:29">/*MULLi*/</comment>

                <expr_stmt pos:start="1567:17" pos:end="1567:54"><expr pos:start="1567:17" pos:end="1567:53"><call pos:start="1567:17" pos:end="1567:53"><name pos:start="1567:17" pos:end="1567:26">HAS_OPTION</name><argument_list pos:start="1567:27" pos:end="1567:53">(<argument pos:start="1567:28" pos:end="1567:52"><expr pos:start="1567:28" pos:end="1567:52"><name pos:start="1567:28" pos:end="1567:52">XTENSA_OPTION_32_BIT_IMUL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1569:17" pos:end="1569:74"><expr pos:start="1569:17" pos:end="1569:73"><call pos:start="1569:17" pos:end="1569:73"><name pos:start="1569:17" pos:end="1569:31">tcg_gen_mul_i32</name><argument_list pos:start="1569:32" pos:end="1569:73">(<argument pos:start="1569:33" pos:end="1569:44"><expr pos:start="1569:33" pos:end="1569:44"><name pos:start="1569:33" pos:end="1569:44"><name pos:start="1569:33" pos:end="1569:37">cpu_R</name><index pos:start="1569:38" pos:end="1569:44">[<expr pos:start="1569:39" pos:end="1569:43"><name pos:start="1569:39" pos:end="1569:43">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="1569:47" pos:end="1569:58"><expr pos:start="1569:47" pos:end="1569:58"><name pos:start="1569:47" pos:end="1569:58"><name pos:start="1569:47" pos:end="1569:51">cpu_R</name><index pos:start="1569:52" pos:end="1569:58">[<expr pos:start="1569:53" pos:end="1569:57"><name pos:start="1569:53" pos:end="1569:57">RRR_S</name></expr>]</index></name></expr></argument>, <argument pos:start="1569:61" pos:end="1569:72"><expr pos:start="1569:61" pos:end="1569:72"><name pos:start="1569:61" pos:end="1569:72"><name pos:start="1569:61" pos:end="1569:65">cpu_R</name><index pos:start="1569:66" pos:end="1569:72">[<expr pos:start="1569:67" pos:end="1569:71"><name pos:start="1569:67" pos:end="1569:71">RRR_T</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1571:17" pos:end="1571:22">break;</break>



            <case pos:start="1575:13" pos:end="1575:20">case <expr pos:start="1575:18" pos:end="1575:19"><literal type="number" pos:start="1575:18" pos:end="1575:19">10</literal></expr>:</case> <comment type="block" pos:start="1575:22" pos:end="1575:31">/*MULUHi*/</comment>

            <case pos:start="1577:13" pos:end="1577:20">case <expr pos:start="1577:18" pos:end="1577:19"><literal type="number" pos:start="1577:18" pos:end="1577:19">11</literal></expr>:</case> <comment type="block" pos:start="1577:22" pos:end="1577:31">/*MULSHi*/</comment>

                <expr_stmt pos:start="1579:17" pos:end="1579:59"><expr pos:start="1579:17" pos:end="1579:58"><call pos:start="1579:17" pos:end="1579:58"><name pos:start="1579:17" pos:end="1579:26">HAS_OPTION</name><argument_list pos:start="1579:27" pos:end="1579:58">(<argument pos:start="1579:28" pos:end="1579:57"><expr pos:start="1579:28" pos:end="1579:57"><name pos:start="1579:28" pos:end="1579:57">XTENSA_OPTION_32_BIT_IMUL_HIGH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <block pos:start="1581:17" pos:end="1619:17">{<block_content pos:start="1583:21" pos:end="1617:41">

                    <decl_stmt pos:start="1583:21" pos:end="1583:52"><decl pos:start="1583:21" pos:end="1583:51"><type pos:start="1583:21" pos:end="1583:28"><name pos:start="1583:21" pos:end="1583:28">TCGv_i64</name></type> <name pos:start="1583:30" pos:end="1583:30">r</name> <init pos:start="1583:32" pos:end="1583:51">= <expr pos:start="1583:34" pos:end="1583:51"><call pos:start="1583:34" pos:end="1583:51"><name pos:start="1583:34" pos:end="1583:49">tcg_temp_new_i64</name><argument_list pos:start="1583:50" pos:end="1583:51">()</argument_list></call></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="1585:21" pos:end="1585:52"><decl pos:start="1585:21" pos:end="1585:51"><type pos:start="1585:21" pos:end="1585:28"><name pos:start="1585:21" pos:end="1585:28">TCGv_i64</name></type> <name pos:start="1585:30" pos:end="1585:30">s</name> <init pos:start="1585:32" pos:end="1585:51">= <expr pos:start="1585:34" pos:end="1585:51"><call pos:start="1585:34" pos:end="1585:51"><name pos:start="1585:34" pos:end="1585:49">tcg_temp_new_i64</name><argument_list pos:start="1585:50" pos:end="1585:51">()</argument_list></call></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="1587:21" pos:end="1587:52"><decl pos:start="1587:21" pos:end="1587:51"><type pos:start="1587:21" pos:end="1587:28"><name pos:start="1587:21" pos:end="1587:28">TCGv_i64</name></type> <name pos:start="1587:30" pos:end="1587:30">t</name> <init pos:start="1587:32" pos:end="1587:51">= <expr pos:start="1587:34" pos:end="1587:51"><call pos:start="1587:34" pos:end="1587:51"><name pos:start="1587:34" pos:end="1587:49">tcg_temp_new_i64</name><argument_list pos:start="1587:50" pos:end="1587:51">()</argument_list></call></expr></init></decl>;</decl_stmt>



                    <if_stmt pos:start="1591:21" pos:end="1603:21"><if pos:start="1591:21" pos:end="1597:21">if <condition pos:start="1591:24" pos:end="1591:34">(<expr pos:start="1591:25" pos:end="1591:33"><name pos:start="1591:25" pos:end="1591:27">OP2</name> <operator pos:start="1591:29" pos:end="1591:30">==</operator> <literal type="number" pos:start="1591:32" pos:end="1591:33">10</literal></expr>)</condition> <block pos:start="1591:36" pos:end="1597:21">{<block_content pos:start="1593:25" pos:end="1595:62">

                        <expr_stmt pos:start="1593:25" pos:end="1593:62"><expr pos:start="1593:25" pos:end="1593:61"><call pos:start="1593:25" pos:end="1593:61"><name pos:start="1593:25" pos:end="1593:44">tcg_gen_extu_i32_i64</name><argument_list pos:start="1593:45" pos:end="1593:61">(<argument pos:start="1593:46" pos:end="1593:46"><expr pos:start="1593:46" pos:end="1593:46"><name pos:start="1593:46" pos:end="1593:46">s</name></expr></argument>, <argument pos:start="1593:49" pos:end="1593:60"><expr pos:start="1593:49" pos:end="1593:60"><name pos:start="1593:49" pos:end="1593:60"><name pos:start="1593:49" pos:end="1593:53">cpu_R</name><index pos:start="1593:54" pos:end="1593:60">[<expr pos:start="1593:55" pos:end="1593:59"><name pos:start="1593:55" pos:end="1593:59">RRR_S</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1595:25" pos:end="1595:62"><expr pos:start="1595:25" pos:end="1595:61"><call pos:start="1595:25" pos:end="1595:61"><name pos:start="1595:25" pos:end="1595:44">tcg_gen_extu_i32_i64</name><argument_list pos:start="1595:45" pos:end="1595:61">(<argument pos:start="1595:46" pos:end="1595:46"><expr pos:start="1595:46" pos:end="1595:46"><name pos:start="1595:46" pos:end="1595:46">t</name></expr></argument>, <argument pos:start="1595:49" pos:end="1595:60"><expr pos:start="1595:49" pos:end="1595:60"><name pos:start="1595:49" pos:end="1595:60"><name pos:start="1595:49" pos:end="1595:53">cpu_R</name><index pos:start="1595:54" pos:end="1595:60">[<expr pos:start="1595:55" pos:end="1595:59"><name pos:start="1595:55" pos:end="1595:59">RRR_T</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="1597:23" pos:end="1603:21">else <block pos:start="1597:28" pos:end="1603:21">{<block_content pos:start="1599:25" pos:end="1601:61">

                        <expr_stmt pos:start="1599:25" pos:end="1599:61"><expr pos:start="1599:25" pos:end="1599:60"><call pos:start="1599:25" pos:end="1599:60"><name pos:start="1599:25" pos:end="1599:43">tcg_gen_ext_i32_i64</name><argument_list pos:start="1599:44" pos:end="1599:60">(<argument pos:start="1599:45" pos:end="1599:45"><expr pos:start="1599:45" pos:end="1599:45"><name pos:start="1599:45" pos:end="1599:45">s</name></expr></argument>, <argument pos:start="1599:48" pos:end="1599:59"><expr pos:start="1599:48" pos:end="1599:59"><name pos:start="1599:48" pos:end="1599:59"><name pos:start="1599:48" pos:end="1599:52">cpu_R</name><index pos:start="1599:53" pos:end="1599:59">[<expr pos:start="1599:54" pos:end="1599:58"><name pos:start="1599:54" pos:end="1599:58">RRR_S</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1601:25" pos:end="1601:61"><expr pos:start="1601:25" pos:end="1601:60"><call pos:start="1601:25" pos:end="1601:60"><name pos:start="1601:25" pos:end="1601:43">tcg_gen_ext_i32_i64</name><argument_list pos:start="1601:44" pos:end="1601:60">(<argument pos:start="1601:45" pos:end="1601:45"><expr pos:start="1601:45" pos:end="1601:45"><name pos:start="1601:45" pos:end="1601:45">t</name></expr></argument>, <argument pos:start="1601:48" pos:end="1601:59"><expr pos:start="1601:48" pos:end="1601:59"><name pos:start="1601:48" pos:end="1601:59"><name pos:start="1601:48" pos:end="1601:52">cpu_R</name><index pos:start="1601:53" pos:end="1601:59">[<expr pos:start="1601:54" pos:end="1601:58"><name pos:start="1601:54" pos:end="1601:58">RRR_T</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="1605:21" pos:end="1605:45"><expr pos:start="1605:21" pos:end="1605:44"><call pos:start="1605:21" pos:end="1605:44"><name pos:start="1605:21" pos:end="1605:35">tcg_gen_mul_i64</name><argument_list pos:start="1605:36" pos:end="1605:44">(<argument pos:start="1605:37" pos:end="1605:37"><expr pos:start="1605:37" pos:end="1605:37"><name pos:start="1605:37" pos:end="1605:37">r</name></expr></argument>, <argument pos:start="1605:40" pos:end="1605:40"><expr pos:start="1605:40" pos:end="1605:40"><name pos:start="1605:40" pos:end="1605:40">s</name></expr></argument>, <argument pos:start="1605:43" pos:end="1605:43"><expr pos:start="1605:43" pos:end="1605:43"><name pos:start="1605:43" pos:end="1605:43">t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1607:21" pos:end="1607:47"><expr pos:start="1607:21" pos:end="1607:46"><call pos:start="1607:21" pos:end="1607:46"><name pos:start="1607:21" pos:end="1607:36">tcg_gen_shri_i64</name><argument_list pos:start="1607:37" pos:end="1607:46">(<argument pos:start="1607:38" pos:end="1607:38"><expr pos:start="1607:38" pos:end="1607:38"><name pos:start="1607:38" pos:end="1607:38">r</name></expr></argument>, <argument pos:start="1607:41" pos:end="1607:41"><expr pos:start="1607:41" pos:end="1607:41"><name pos:start="1607:41" pos:end="1607:41">r</name></expr></argument>, <argument pos:start="1607:44" pos:end="1607:45"><expr pos:start="1607:44" pos:end="1607:45"><literal type="number" pos:start="1607:44" pos:end="1607:45">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1609:21" pos:end="1609:59"><expr pos:start="1609:21" pos:end="1609:58"><call pos:start="1609:21" pos:end="1609:58"><name pos:start="1609:21" pos:end="1609:41">tcg_gen_trunc_i64_i32</name><argument_list pos:start="1609:42" pos:end="1609:58">(<argument pos:start="1609:43" pos:end="1609:54"><expr pos:start="1609:43" pos:end="1609:54"><name pos:start="1609:43" pos:end="1609:54"><name pos:start="1609:43" pos:end="1609:47">cpu_R</name><index pos:start="1609:48" pos:end="1609:54">[<expr pos:start="1609:49" pos:end="1609:53"><name pos:start="1609:49" pos:end="1609:53">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="1609:57" pos:end="1609:57"><expr pos:start="1609:57" pos:end="1609:57"><name pos:start="1609:57" pos:end="1609:57">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="1613:21" pos:end="1613:41"><expr pos:start="1613:21" pos:end="1613:40"><call pos:start="1613:21" pos:end="1613:40"><name pos:start="1613:21" pos:end="1613:37">tcg_temp_free_i64</name><argument_list pos:start="1613:38" pos:end="1613:40">(<argument pos:start="1613:39" pos:end="1613:39"><expr pos:start="1613:39" pos:end="1613:39"><name pos:start="1613:39" pos:end="1613:39">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1615:21" pos:end="1615:41"><expr pos:start="1615:21" pos:end="1615:40"><call pos:start="1615:21" pos:end="1615:40"><name pos:start="1615:21" pos:end="1615:37">tcg_temp_free_i64</name><argument_list pos:start="1615:38" pos:end="1615:40">(<argument pos:start="1615:39" pos:end="1615:39"><expr pos:start="1615:39" pos:end="1615:39"><name pos:start="1615:39" pos:end="1615:39">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1617:21" pos:end="1617:41"><expr pos:start="1617:21" pos:end="1617:40"><call pos:start="1617:21" pos:end="1617:40"><name pos:start="1617:21" pos:end="1617:37">tcg_temp_free_i64</name><argument_list pos:start="1617:38" pos:end="1617:40">(<argument pos:start="1617:39" pos:end="1617:39"><expr pos:start="1617:39" pos:end="1617:39"><name pos:start="1617:39" pos:end="1617:39">t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block>

                <break pos:start="1621:17" pos:end="1621:22">break;</break>



            <case pos:start="1625:13" pos:end="1625:20">case <expr pos:start="1625:18" pos:end="1625:19"><literal type="number" pos:start="1625:18" pos:end="1625:19">12</literal></expr>:</case> <comment type="block" pos:start="1625:22" pos:end="1625:30">/*QUOUi*/</comment>

                <expr_stmt pos:start="1627:17" pos:end="1627:75"><expr pos:start="1627:17" pos:end="1627:74"><call pos:start="1627:17" pos:end="1627:74"><name pos:start="1627:17" pos:end="1627:32">tcg_gen_divu_i32</name><argument_list pos:start="1627:33" pos:end="1627:74">(<argument pos:start="1627:34" pos:end="1627:45"><expr pos:start="1627:34" pos:end="1627:45"><name pos:start="1627:34" pos:end="1627:45"><name pos:start="1627:34" pos:end="1627:38">cpu_R</name><index pos:start="1627:39" pos:end="1627:45">[<expr pos:start="1627:40" pos:end="1627:44"><name pos:start="1627:40" pos:end="1627:44">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="1627:48" pos:end="1627:59"><expr pos:start="1627:48" pos:end="1627:59"><name pos:start="1627:48" pos:end="1627:59"><name pos:start="1627:48" pos:end="1627:52">cpu_R</name><index pos:start="1627:53" pos:end="1627:59">[<expr pos:start="1627:54" pos:end="1627:58"><name pos:start="1627:54" pos:end="1627:58">RRR_S</name></expr>]</index></name></expr></argument>, <argument pos:start="1627:62" pos:end="1627:73"><expr pos:start="1627:62" pos:end="1627:73"><name pos:start="1627:62" pos:end="1627:73"><name pos:start="1627:62" pos:end="1627:66">cpu_R</name><index pos:start="1627:67" pos:end="1627:73">[<expr pos:start="1627:68" pos:end="1627:72"><name pos:start="1627:68" pos:end="1627:72">RRR_T</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1629:17" pos:end="1629:22">break;</break>



            <case pos:start="1633:13" pos:end="1633:20">case <expr pos:start="1633:18" pos:end="1633:19"><literal type="number" pos:start="1633:18" pos:end="1633:19">13</literal></expr>:</case> <comment type="block" pos:start="1633:22" pos:end="1633:30">/*QUOSi*/</comment>

            <case pos:start="1635:13" pos:end="1635:20">case <expr pos:start="1635:18" pos:end="1635:19"><literal type="number" pos:start="1635:18" pos:end="1635:19">15</literal></expr>:</case> <comment type="block" pos:start="1635:22" pos:end="1635:30">/*REMSi*/</comment>

                <block pos:start="1637:17" pos:end="1677:17">{<block_content pos:start="1639:21" pos:end="1675:42">

                    <decl_stmt pos:start="1639:21" pos:end="1639:49"><decl pos:start="1639:21" pos:end="1639:48"><type pos:start="1639:21" pos:end="1639:23"><name pos:start="1639:21" pos:end="1639:23">int</name></type> <name pos:start="1639:25" pos:end="1639:30">label1</name> <init pos:start="1639:32" pos:end="1639:48">= <expr pos:start="1639:34" pos:end="1639:48"><call pos:start="1639:34" pos:end="1639:48"><name pos:start="1639:34" pos:end="1639:46">gen_new_label</name><argument_list pos:start="1639:47" pos:end="1639:48">()</argument_list></call></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="1641:21" pos:end="1641:49"><decl pos:start="1641:21" pos:end="1641:48"><type pos:start="1641:21" pos:end="1641:23"><name pos:start="1641:21" pos:end="1641:23">int</name></type> <name pos:start="1641:25" pos:end="1641:30">label2</name> <init pos:start="1641:32" pos:end="1641:48">= <expr pos:start="1641:34" pos:end="1641:48"><call pos:start="1641:34" pos:end="1641:48"><name pos:start="1641:34" pos:end="1641:46">gen_new_label</name><argument_list pos:start="1641:47" pos:end="1641:48">()</argument_list></call></expr></init></decl>;</decl_stmt>



                    <expr_stmt pos:start="1645:21" pos:end="1647:36"><expr pos:start="1645:21" pos:end="1647:35"><call pos:start="1645:21" pos:end="1647:35"><name pos:start="1645:21" pos:end="1645:39">tcg_gen_brcondi_i32</name><argument_list pos:start="1645:40" pos:end="1647:35">(<argument pos:start="1645:41" pos:end="1645:51"><expr pos:start="1645:41" pos:end="1645:51"><name pos:start="1645:41" pos:end="1645:51">TCG_COND_NE</name></expr></argument>, <argument pos:start="1645:54" pos:end="1645:65"><expr pos:start="1645:54" pos:end="1645:65"><name pos:start="1645:54" pos:end="1645:65"><name pos:start="1645:54" pos:end="1645:58">cpu_R</name><index pos:start="1645:59" pos:end="1645:65">[<expr pos:start="1645:60" pos:end="1645:64"><name pos:start="1645:60" pos:end="1645:64">RRR_S</name></expr>]</index></name></expr></argument>, <argument pos:start="1645:68" pos:end="1645:77"><expr pos:start="1645:68" pos:end="1645:77"><literal type="number" pos:start="1645:68" pos:end="1645:77">0x80000000</literal></expr></argument>,

                            <argument pos:start="1647:29" pos:end="1647:34"><expr pos:start="1647:29" pos:end="1647:34"><name pos:start="1647:29" pos:end="1647:34">label1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1649:21" pos:end="1651:36"><expr pos:start="1649:21" pos:end="1651:35"><call pos:start="1649:21" pos:end="1651:35"><name pos:start="1649:21" pos:end="1649:39">tcg_gen_brcondi_i32</name><argument_list pos:start="1649:40" pos:end="1651:35">(<argument pos:start="1649:41" pos:end="1649:51"><expr pos:start="1649:41" pos:end="1649:51"><name pos:start="1649:41" pos:end="1649:51">TCG_COND_NE</name></expr></argument>, <argument pos:start="1649:54" pos:end="1649:65"><expr pos:start="1649:54" pos:end="1649:65"><name pos:start="1649:54" pos:end="1649:65"><name pos:start="1649:54" pos:end="1649:58">cpu_R</name><index pos:start="1649:59" pos:end="1649:65">[<expr pos:start="1649:60" pos:end="1649:64"><name pos:start="1649:60" pos:end="1649:64">RRR_T</name></expr>]</index></name></expr></argument>, <argument pos:start="1649:68" pos:end="1649:77"><expr pos:start="1649:68" pos:end="1649:77"><literal type="number" pos:start="1649:68" pos:end="1649:77">0xffffffff</literal></expr></argument>,

                            <argument pos:start="1651:29" pos:end="1651:34"><expr pos:start="1651:29" pos:end="1651:34"><name pos:start="1651:29" pos:end="1651:34">label1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1653:21" pos:end="1655:56"><expr pos:start="1653:21" pos:end="1655:55"><call pos:start="1653:21" pos:end="1655:55"><name pos:start="1653:21" pos:end="1653:36">tcg_gen_movi_i32</name><argument_list pos:start="1653:37" pos:end="1655:55">(<argument pos:start="1653:38" pos:end="1653:49"><expr pos:start="1653:38" pos:end="1653:49"><name pos:start="1653:38" pos:end="1653:49"><name pos:start="1653:38" pos:end="1653:42">cpu_R</name><index pos:start="1653:43" pos:end="1653:49">[<expr pos:start="1653:44" pos:end="1653:48"><name pos:start="1653:44" pos:end="1653:48">RRR_R</name></expr>]</index></name></expr></argument>,

                            <argument pos:start="1655:29" pos:end="1655:54"><expr pos:start="1655:29" pos:end="1655:54"><ternary pos:start="1655:29" pos:end="1655:54"><condition pos:start="1655:29" pos:end="1655:39"><expr pos:start="1655:29" pos:end="1655:37"><name pos:start="1655:29" pos:end="1655:31">OP2</name> <operator pos:start="1655:33" pos:end="1655:34">==</operator> <literal type="number" pos:start="1655:36" pos:end="1655:37">13</literal></expr> ?</condition><then pos:start="1655:41" pos:end="1655:50"> <expr pos:start="1655:41" pos:end="1655:50"><literal type="number" pos:start="1655:41" pos:end="1655:50">0x80000000</literal></expr> </then><else pos:start="1655:52" pos:end="1655:54">: <expr pos:start="1655:54" pos:end="1655:54"><literal type="number" pos:start="1655:54" pos:end="1655:54">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1657:21" pos:end="1657:39"><expr pos:start="1657:21" pos:end="1657:38"><call pos:start="1657:21" pos:end="1657:38"><name pos:start="1657:21" pos:end="1657:30">tcg_gen_br</name><argument_list pos:start="1657:31" pos:end="1657:38">(<argument pos:start="1657:32" pos:end="1657:37"><expr pos:start="1657:32" pos:end="1657:37"><name pos:start="1657:32" pos:end="1657:37">label2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1659:21" pos:end="1659:42"><expr pos:start="1659:21" pos:end="1659:41"><call pos:start="1659:21" pos:end="1659:41"><name pos:start="1659:21" pos:end="1659:33">gen_set_label</name><argument_list pos:start="1659:34" pos:end="1659:41">(<argument pos:start="1659:35" pos:end="1659:40"><expr pos:start="1659:35" pos:end="1659:40"><name pos:start="1659:35" pos:end="1659:40">label1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="1661:21" pos:end="1673:21"><if pos:start="1661:21" pos:end="1667:21">if <condition pos:start="1661:24" pos:end="1661:34">(<expr pos:start="1661:25" pos:end="1661:33"><name pos:start="1661:25" pos:end="1661:27">OP2</name> <operator pos:start="1661:29" pos:end="1661:30">==</operator> <literal type="number" pos:start="1661:32" pos:end="1661:33">13</literal></expr>)</condition> <block pos:start="1661:36" pos:end="1667:21">{<block_content pos:start="1663:25" pos:end="1665:60">

                        <expr_stmt pos:start="1663:25" pos:end="1665:60"><expr pos:start="1663:25" pos:end="1665:59"><call pos:start="1663:25" pos:end="1665:59"><name pos:start="1663:25" pos:end="1663:39">tcg_gen_div_i32</name><argument_list pos:start="1663:40" pos:end="1665:59">(<argument pos:start="1663:41" pos:end="1663:52"><expr pos:start="1663:41" pos:end="1663:52"><name pos:start="1663:41" pos:end="1663:52"><name pos:start="1663:41" pos:end="1663:45">cpu_R</name><index pos:start="1663:46" pos:end="1663:52">[<expr pos:start="1663:47" pos:end="1663:51"><name pos:start="1663:47" pos:end="1663:51">RRR_R</name></expr>]</index></name></expr></argument>,

                                <argument pos:start="1665:33" pos:end="1665:44"><expr pos:start="1665:33" pos:end="1665:44"><name pos:start="1665:33" pos:end="1665:44"><name pos:start="1665:33" pos:end="1665:37">cpu_R</name><index pos:start="1665:38" pos:end="1665:44">[<expr pos:start="1665:39" pos:end="1665:43"><name pos:start="1665:39" pos:end="1665:43">RRR_S</name></expr>]</index></name></expr></argument>, <argument pos:start="1665:47" pos:end="1665:58"><expr pos:start="1665:47" pos:end="1665:58"><name pos:start="1665:47" pos:end="1665:58"><name pos:start="1665:47" pos:end="1665:51">cpu_R</name><index pos:start="1665:52" pos:end="1665:58">[<expr pos:start="1665:53" pos:end="1665:57"><name pos:start="1665:53" pos:end="1665:57">RRR_T</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="1667:23" pos:end="1673:21">else <block pos:start="1667:28" pos:end="1673:21">{<block_content pos:start="1669:25" pos:end="1671:60">

                        <expr_stmt pos:start="1669:25" pos:end="1671:60"><expr pos:start="1669:25" pos:end="1671:59"><call pos:start="1669:25" pos:end="1671:59"><name pos:start="1669:25" pos:end="1669:39">tcg_gen_rem_i32</name><argument_list pos:start="1669:40" pos:end="1671:59">(<argument pos:start="1669:41" pos:end="1669:52"><expr pos:start="1669:41" pos:end="1669:52"><name pos:start="1669:41" pos:end="1669:52"><name pos:start="1669:41" pos:end="1669:45">cpu_R</name><index pos:start="1669:46" pos:end="1669:52">[<expr pos:start="1669:47" pos:end="1669:51"><name pos:start="1669:47" pos:end="1669:51">RRR_R</name></expr>]</index></name></expr></argument>,

                                <argument pos:start="1671:33" pos:end="1671:44"><expr pos:start="1671:33" pos:end="1671:44"><name pos:start="1671:33" pos:end="1671:44"><name pos:start="1671:33" pos:end="1671:37">cpu_R</name><index pos:start="1671:38" pos:end="1671:44">[<expr pos:start="1671:39" pos:end="1671:43"><name pos:start="1671:39" pos:end="1671:43">RRR_S</name></expr>]</index></name></expr></argument>, <argument pos:start="1671:47" pos:end="1671:58"><expr pos:start="1671:47" pos:end="1671:58"><name pos:start="1671:47" pos:end="1671:58"><name pos:start="1671:47" pos:end="1671:51">cpu_R</name><index pos:start="1671:52" pos:end="1671:58">[<expr pos:start="1671:53" pos:end="1671:57"><name pos:start="1671:53" pos:end="1671:57">RRR_T</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="1675:21" pos:end="1675:42"><expr pos:start="1675:21" pos:end="1675:41"><call pos:start="1675:21" pos:end="1675:41"><name pos:start="1675:21" pos:end="1675:33">gen_set_label</name><argument_list pos:start="1675:34" pos:end="1675:41">(<argument pos:start="1675:35" pos:end="1675:40"><expr pos:start="1675:35" pos:end="1675:40"><name pos:start="1675:35" pos:end="1675:40">label2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block>

                <break pos:start="1679:17" pos:end="1679:22">break;</break>



            <case pos:start="1683:13" pos:end="1683:20">case <expr pos:start="1683:18" pos:end="1683:19"><literal type="number" pos:start="1683:18" pos:end="1683:19">14</literal></expr>:</case> <comment type="block" pos:start="1683:22" pos:end="1683:30">/*REMUi*/</comment>

                <expr_stmt pos:start="1685:17" pos:end="1685:75"><expr pos:start="1685:17" pos:end="1685:74"><call pos:start="1685:17" pos:end="1685:74"><name pos:start="1685:17" pos:end="1685:32">tcg_gen_remu_i32</name><argument_list pos:start="1685:33" pos:end="1685:74">(<argument pos:start="1685:34" pos:end="1685:45"><expr pos:start="1685:34" pos:end="1685:45"><name pos:start="1685:34" pos:end="1685:45"><name pos:start="1685:34" pos:end="1685:38">cpu_R</name><index pos:start="1685:39" pos:end="1685:45">[<expr pos:start="1685:40" pos:end="1685:44"><name pos:start="1685:40" pos:end="1685:44">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="1685:48" pos:end="1685:59"><expr pos:start="1685:48" pos:end="1685:59"><name pos:start="1685:48" pos:end="1685:59"><name pos:start="1685:48" pos:end="1685:52">cpu_R</name><index pos:start="1685:53" pos:end="1685:59">[<expr pos:start="1685:54" pos:end="1685:58"><name pos:start="1685:54" pos:end="1685:58">RRR_S</name></expr>]</index></name></expr></argument>, <argument pos:start="1685:62" pos:end="1685:73"><expr pos:start="1685:62" pos:end="1685:73"><name pos:start="1685:62" pos:end="1685:73"><name pos:start="1685:62" pos:end="1685:66">cpu_R</name><index pos:start="1685:67" pos:end="1685:73">[<expr pos:start="1685:68" pos:end="1685:72"><name pos:start="1685:68" pos:end="1685:72">RRR_T</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1687:17" pos:end="1687:22">break;</break>



            <default pos:start="1691:13" pos:end="1691:20">default:</default> <comment type="block" pos:start="1691:22" pos:end="1691:33">/*reserved*/</comment>

                <expr_stmt pos:start="1693:17" pos:end="1693:27"><expr pos:start="1693:17" pos:end="1693:26"><call pos:start="1693:17" pos:end="1693:26"><name pos:start="1693:17" pos:end="1693:24">RESERVED</name><argument_list pos:start="1693:25" pos:end="1693:26">()</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1695:17" pos:end="1695:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="1699:13" pos:end="1699:18">break;</break>



        <case pos:start="1703:9" pos:end="1703:15">case <expr pos:start="1703:14" pos:end="1703:14"><literal type="number" pos:start="1703:14" pos:end="1703:14">3</literal></expr>:</case> <comment type="block" pos:start="1703:17" pos:end="1703:24">/*RST3*/</comment>

            <switch pos:start="1705:13" pos:end="2017:13">switch <condition pos:start="1705:20" pos:end="1705:24">(<expr pos:start="1705:21" pos:end="1705:23"><name pos:start="1705:21" pos:end="1705:23">OP2</name></expr>)</condition> <block pos:start="1705:26" pos:end="2017:13">{<block_content pos:start="1707:13" pos:end="2013:22">

            <case pos:start="1707:13" pos:end="1707:19">case <expr pos:start="1707:18" pos:end="1707:18"><literal type="number" pos:start="1707:18" pos:end="1707:18">0</literal></expr>:</case> <comment type="block" pos:start="1707:21" pos:end="1707:27">/*RSR*/</comment>

                <if_stmt pos:start="1709:17" pos:end="1713:17"><if pos:start="1709:17" pos:end="1713:17">if <condition pos:start="1709:20" pos:end="1709:33">(<expr pos:start="1709:21" pos:end="1709:32"><name pos:start="1709:21" pos:end="1709:26">RSR_SR</name> <operator pos:start="1709:28" pos:end="1709:29">&gt;=</operator> <literal type="number" pos:start="1709:31" pos:end="1709:32">64</literal></expr>)</condition> <block pos:start="1709:35" pos:end="1713:17">{<block_content pos:start="1711:21" pos:end="1711:44">

                    <expr_stmt pos:start="1711:21" pos:end="1711:44"><expr pos:start="1711:21" pos:end="1711:43"><call pos:start="1711:21" pos:end="1711:43"><name pos:start="1711:21" pos:end="1711:39">gen_check_privilege</name><argument_list pos:start="1711:40" pos:end="1711:43">(<argument pos:start="1711:41" pos:end="1711:42"><expr pos:start="1711:41" pos:end="1711:42"><name pos:start="1711:41" pos:end="1711:42">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="1715:17" pos:end="1715:45"><expr pos:start="1715:17" pos:end="1715:44"><call pos:start="1715:17" pos:end="1715:44"><name pos:start="1715:17" pos:end="1715:33">gen_window_check1</name><argument_list pos:start="1715:34" pos:end="1715:44">(<argument pos:start="1715:35" pos:end="1715:36"><expr pos:start="1715:35" pos:end="1715:36"><name pos:start="1715:35" pos:end="1715:36">dc</name></expr></argument>, <argument pos:start="1715:39" pos:end="1715:43"><expr pos:start="1715:39" pos:end="1715:43"><name pos:start="1715:39" pos:end="1715:43">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1717:17" pos:end="1717:50"><expr pos:start="1717:17" pos:end="1717:49"><call pos:start="1717:17" pos:end="1717:49"><name pos:start="1717:17" pos:end="1717:23">gen_rsr</name><argument_list pos:start="1717:24" pos:end="1717:49">(<argument pos:start="1717:25" pos:end="1717:26"><expr pos:start="1717:25" pos:end="1717:26"><name pos:start="1717:25" pos:end="1717:26">dc</name></expr></argument>, <argument pos:start="1717:29" pos:end="1717:40"><expr pos:start="1717:29" pos:end="1717:40"><name pos:start="1717:29" pos:end="1717:40"><name pos:start="1717:29" pos:end="1717:33">cpu_R</name><index pos:start="1717:34" pos:end="1717:40">[<expr pos:start="1717:35" pos:end="1717:39"><name pos:start="1717:35" pos:end="1717:39">RRR_T</name></expr>]</index></name></expr></argument>, <argument pos:start="1717:43" pos:end="1717:48"><expr pos:start="1717:43" pos:end="1717:48"><name pos:start="1717:43" pos:end="1717:48">RSR_SR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1719:17" pos:end="1723:17"><if pos:start="1719:17" pos:end="1723:17">if <condition pos:start="1719:20" pos:end="1719:39">(<expr pos:start="1719:21" pos:end="1719:38"><operator pos:start="1719:21" pos:end="1719:21">!</operator><name pos:start="1719:22" pos:end="1719:38"><name pos:start="1719:22" pos:end="1719:30">sregnames</name><index pos:start="1719:31" pos:end="1719:38">[<expr pos:start="1719:32" pos:end="1719:37"><name pos:start="1719:32" pos:end="1719:37">RSR_SR</name></expr>]</index></name></expr>)</condition> <block pos:start="1719:41" pos:end="1723:17">{<block_content pos:start="1721:21" pos:end="1721:26">

                    <expr_stmt pos:start="1721:21" pos:end="1721:26"><expr pos:start="1721:21" pos:end="1721:25"><call pos:start="1721:21" pos:end="1721:25"><name pos:start="1721:21" pos:end="1721:23">TBD</name><argument_list pos:start="1721:24" pos:end="1721:25">()</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="1725:17" pos:end="1725:22">break;</break>



            <case pos:start="1729:13" pos:end="1729:19">case <expr pos:start="1729:18" pos:end="1729:18"><literal type="number" pos:start="1729:18" pos:end="1729:18">1</literal></expr>:</case> <comment type="block" pos:start="1729:21" pos:end="1729:27">/*WSR*/</comment>

                <if_stmt pos:start="1731:17" pos:end="1735:17"><if pos:start="1731:17" pos:end="1735:17">if <condition pos:start="1731:20" pos:end="1731:33">(<expr pos:start="1731:21" pos:end="1731:32"><name pos:start="1731:21" pos:end="1731:26">RSR_SR</name> <operator pos:start="1731:28" pos:end="1731:29">&gt;=</operator> <literal type="number" pos:start="1731:31" pos:end="1731:32">64</literal></expr>)</condition> <block pos:start="1731:35" pos:end="1735:17">{<block_content pos:start="1733:21" pos:end="1733:44">

                    <expr_stmt pos:start="1733:21" pos:end="1733:44"><expr pos:start="1733:21" pos:end="1733:43"><call pos:start="1733:21" pos:end="1733:43"><name pos:start="1733:21" pos:end="1733:39">gen_check_privilege</name><argument_list pos:start="1733:40" pos:end="1733:43">(<argument pos:start="1733:41" pos:end="1733:42"><expr pos:start="1733:41" pos:end="1733:42"><name pos:start="1733:41" pos:end="1733:42">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="1737:17" pos:end="1737:45"><expr pos:start="1737:17" pos:end="1737:44"><call pos:start="1737:17" pos:end="1737:44"><name pos:start="1737:17" pos:end="1737:33">gen_window_check1</name><argument_list pos:start="1737:34" pos:end="1737:44">(<argument pos:start="1737:35" pos:end="1737:36"><expr pos:start="1737:35" pos:end="1737:36"><name pos:start="1737:35" pos:end="1737:36">dc</name></expr></argument>, <argument pos:start="1737:39" pos:end="1737:43"><expr pos:start="1737:39" pos:end="1737:43"><name pos:start="1737:39" pos:end="1737:43">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1739:17" pos:end="1739:50"><expr pos:start="1739:17" pos:end="1739:49"><call pos:start="1739:17" pos:end="1739:49"><name pos:start="1739:17" pos:end="1739:23">gen_wsr</name><argument_list pos:start="1739:24" pos:end="1739:49">(<argument pos:start="1739:25" pos:end="1739:26"><expr pos:start="1739:25" pos:end="1739:26"><name pos:start="1739:25" pos:end="1739:26">dc</name></expr></argument>, <argument pos:start="1739:29" pos:end="1739:34"><expr pos:start="1739:29" pos:end="1739:34"><name pos:start="1739:29" pos:end="1739:34">RSR_SR</name></expr></argument>, <argument pos:start="1739:37" pos:end="1739:48"><expr pos:start="1739:37" pos:end="1739:48"><name pos:start="1739:37" pos:end="1739:48"><name pos:start="1739:37" pos:end="1739:41">cpu_R</name><index pos:start="1739:42" pos:end="1739:48">[<expr pos:start="1739:43" pos:end="1739:47"><name pos:start="1739:43" pos:end="1739:47">RRR_T</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1741:17" pos:end="1745:17"><if pos:start="1741:17" pos:end="1745:17">if <condition pos:start="1741:20" pos:end="1741:39">(<expr pos:start="1741:21" pos:end="1741:38"><operator pos:start="1741:21" pos:end="1741:21">!</operator><name pos:start="1741:22" pos:end="1741:38"><name pos:start="1741:22" pos:end="1741:30">sregnames</name><index pos:start="1741:31" pos:end="1741:38">[<expr pos:start="1741:32" pos:end="1741:37"><name pos:start="1741:32" pos:end="1741:37">RSR_SR</name></expr>]</index></name></expr>)</condition> <block pos:start="1741:41" pos:end="1745:17">{<block_content pos:start="1743:21" pos:end="1743:26">

                    <expr_stmt pos:start="1743:21" pos:end="1743:26"><expr pos:start="1743:21" pos:end="1743:25"><call pos:start="1743:21" pos:end="1743:25"><name pos:start="1743:21" pos:end="1743:23">TBD</name><argument_list pos:start="1743:24" pos:end="1743:25">()</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="1747:17" pos:end="1747:22">break;</break>



            <case pos:start="1751:13" pos:end="1751:19">case <expr pos:start="1751:18" pos:end="1751:18"><literal type="number" pos:start="1751:18" pos:end="1751:18">2</literal></expr>:</case> <comment type="block" pos:start="1751:21" pos:end="1751:29">/*SEXTu*/</comment>

                <expr_stmt pos:start="1753:17" pos:end="1753:55"><expr pos:start="1753:17" pos:end="1753:54"><call pos:start="1753:17" pos:end="1753:54"><name pos:start="1753:17" pos:end="1753:26">HAS_OPTION</name><argument_list pos:start="1753:27" pos:end="1753:54">(<argument pos:start="1753:28" pos:end="1753:53"><expr pos:start="1753:28" pos:end="1753:53"><name pos:start="1753:28" pos:end="1753:53">XTENSA_OPTION_MISC_OP_SEXT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1755:17" pos:end="1755:52"><expr pos:start="1755:17" pos:end="1755:51"><call pos:start="1755:17" pos:end="1755:51"><name pos:start="1755:17" pos:end="1755:33">gen_window_check2</name><argument_list pos:start="1755:34" pos:end="1755:51">(<argument pos:start="1755:35" pos:end="1755:36"><expr pos:start="1755:35" pos:end="1755:36"><name pos:start="1755:35" pos:end="1755:36">dc</name></expr></argument>, <argument pos:start="1755:39" pos:end="1755:43"><expr pos:start="1755:39" pos:end="1755:43"><name pos:start="1755:39" pos:end="1755:43">RRR_R</name></expr></argument>, <argument pos:start="1755:46" pos:end="1755:50"><expr pos:start="1755:46" pos:end="1755:50"><name pos:start="1755:46" pos:end="1755:50">RRR_S</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <block pos:start="1757:17" pos:end="1783:17">{<block_content pos:start="1759:21" pos:end="1781:21">

                    <decl_stmt pos:start="1759:21" pos:end="1759:43"><decl pos:start="1759:21" pos:end="1759:42"><type pos:start="1759:21" pos:end="1759:23"><name pos:start="1759:21" pos:end="1759:23">int</name></type> <name pos:start="1759:25" pos:end="1759:29">shift</name> <init pos:start="1759:31" pos:end="1759:42">= <expr pos:start="1759:33" pos:end="1759:42"><literal type="number" pos:start="1759:33" pos:end="1759:36">24</literal> <operator pos:start="1759:36" pos:end="1759:36">-</operator> <name pos:start="1759:38" pos:end="1759:42">RRR_T</name></expr></init></decl>;</decl_stmt>



                    <if_stmt pos:start="1763:21" pos:end="1781:21"><if pos:start="1763:21" pos:end="1767:21">if <condition pos:start="1763:24" pos:end="1763:36">(<expr pos:start="1763:25" pos:end="1763:35"><name pos:start="1763:25" pos:end="1763:29">shift</name> <operator pos:start="1763:31" pos:end="1763:32">==</operator> <literal type="number" pos:start="1763:34" pos:end="1763:35">24</literal></expr>)</condition> <block pos:start="1763:38" pos:end="1767:21">{<block_content pos:start="1765:25" pos:end="1765:70">

                        <expr_stmt pos:start="1765:25" pos:end="1765:70"><expr pos:start="1765:25" pos:end="1765:69"><call pos:start="1765:25" pos:end="1765:69"><name pos:start="1765:25" pos:end="1765:41">tcg_gen_ext8s_i32</name><argument_list pos:start="1765:42" pos:end="1765:69">(<argument pos:start="1765:43" pos:end="1765:54"><expr pos:start="1765:43" pos:end="1765:54"><name pos:start="1765:43" pos:end="1765:54"><name pos:start="1765:43" pos:end="1765:47">cpu_R</name><index pos:start="1765:48" pos:end="1765:54">[<expr pos:start="1765:49" pos:end="1765:53"><name pos:start="1765:49" pos:end="1765:53">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="1765:57" pos:end="1765:68"><expr pos:start="1765:57" pos:end="1765:68"><name pos:start="1765:57" pos:end="1765:68"><name pos:start="1765:57" pos:end="1765:61">cpu_R</name><index pos:start="1765:62" pos:end="1765:68">[<expr pos:start="1765:63" pos:end="1765:67"><name pos:start="1765:63" pos:end="1765:67">RRR_S</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="1767:23" pos:end="1771:21">else if <condition pos:start="1767:31" pos:end="1767:43">(<expr pos:start="1767:32" pos:end="1767:42"><name pos:start="1767:32" pos:end="1767:36">shift</name> <operator pos:start="1767:38" pos:end="1767:39">==</operator> <literal type="number" pos:start="1767:41" pos:end="1767:42">16</literal></expr>)</condition> <block pos:start="1767:45" pos:end="1771:21">{<block_content pos:start="1769:25" pos:end="1769:71">

                        <expr_stmt pos:start="1769:25" pos:end="1769:71"><expr pos:start="1769:25" pos:end="1769:70"><call pos:start="1769:25" pos:end="1769:70"><name pos:start="1769:25" pos:end="1769:42">tcg_gen_ext16s_i32</name><argument_list pos:start="1769:43" pos:end="1769:70">(<argument pos:start="1769:44" pos:end="1769:55"><expr pos:start="1769:44" pos:end="1769:55"><name pos:start="1769:44" pos:end="1769:55"><name pos:start="1769:44" pos:end="1769:48">cpu_R</name><index pos:start="1769:49" pos:end="1769:55">[<expr pos:start="1769:50" pos:end="1769:54"><name pos:start="1769:50" pos:end="1769:54">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="1769:58" pos:end="1769:69"><expr pos:start="1769:58" pos:end="1769:69"><name pos:start="1769:58" pos:end="1769:69"><name pos:start="1769:58" pos:end="1769:62">cpu_R</name><index pos:start="1769:63" pos:end="1769:69">[<expr pos:start="1769:64" pos:end="1769:68"><name pos:start="1769:64" pos:end="1769:68">RRR_S</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="1771:23" pos:end="1781:21">else <block pos:start="1771:28" pos:end="1781:21">{<block_content pos:start="1773:25" pos:end="1779:43">

                        <decl_stmt pos:start="1773:25" pos:end="1773:58"><decl pos:start="1773:25" pos:end="1773:57"><type pos:start="1773:25" pos:end="1773:32"><name pos:start="1773:25" pos:end="1773:32">TCGv_i32</name></type> <name pos:start="1773:34" pos:end="1773:36">tmp</name> <init pos:start="1773:38" pos:end="1773:57">= <expr pos:start="1773:40" pos:end="1773:57"><call pos:start="1773:40" pos:end="1773:57"><name pos:start="1773:40" pos:end="1773:55">tcg_temp_new_i32</name><argument_list pos:start="1773:56" pos:end="1773:57">()</argument_list></call></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="1775:25" pos:end="1775:67"><expr pos:start="1775:25" pos:end="1775:66"><call pos:start="1775:25" pos:end="1775:66"><name pos:start="1775:25" pos:end="1775:40">tcg_gen_shli_i32</name><argument_list pos:start="1775:41" pos:end="1775:66">(<argument pos:start="1775:42" pos:end="1775:44"><expr pos:start="1775:42" pos:end="1775:44"><name pos:start="1775:42" pos:end="1775:44">tmp</name></expr></argument>, <argument pos:start="1775:47" pos:end="1775:58"><expr pos:start="1775:47" pos:end="1775:58"><name pos:start="1775:47" pos:end="1775:58"><name pos:start="1775:47" pos:end="1775:51">cpu_R</name><index pos:start="1775:52" pos:end="1775:58">[<expr pos:start="1775:53" pos:end="1775:57"><name pos:start="1775:53" pos:end="1775:57">RRR_S</name></expr>]</index></name></expr></argument>, <argument pos:start="1775:61" pos:end="1775:65"><expr pos:start="1775:61" pos:end="1775:65"><name pos:start="1775:61" pos:end="1775:65">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1777:25" pos:end="1777:67"><expr pos:start="1777:25" pos:end="1777:66"><call pos:start="1777:25" pos:end="1777:66"><name pos:start="1777:25" pos:end="1777:40">tcg_gen_sari_i32</name><argument_list pos:start="1777:41" pos:end="1777:66">(<argument pos:start="1777:42" pos:end="1777:53"><expr pos:start="1777:42" pos:end="1777:53"><name pos:start="1777:42" pos:end="1777:53"><name pos:start="1777:42" pos:end="1777:46">cpu_R</name><index pos:start="1777:47" pos:end="1777:53">[<expr pos:start="1777:48" pos:end="1777:52"><name pos:start="1777:48" pos:end="1777:52">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="1777:56" pos:end="1777:58"><expr pos:start="1777:56" pos:end="1777:58"><name pos:start="1777:56" pos:end="1777:58">tmp</name></expr></argument>, <argument pos:start="1777:61" pos:end="1777:65"><expr pos:start="1777:61" pos:end="1777:65"><name pos:start="1777:61" pos:end="1777:65">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1779:25" pos:end="1779:43"><expr pos:start="1779:25" pos:end="1779:42"><call pos:start="1779:25" pos:end="1779:42"><name pos:start="1779:25" pos:end="1779:37">tcg_temp_free</name><argument_list pos:start="1779:38" pos:end="1779:42">(<argument pos:start="1779:39" pos:end="1779:41"><expr pos:start="1779:39" pos:end="1779:41"><name pos:start="1779:39" pos:end="1779:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block>

                <break pos:start="1785:17" pos:end="1785:22">break;</break>



            <case pos:start="1789:13" pos:end="1789:19">case <expr pos:start="1789:18" pos:end="1789:18"><literal type="number" pos:start="1789:18" pos:end="1789:18">3</literal></expr>:</case> <comment type="block" pos:start="1789:21" pos:end="1789:31">/*CLAMPSu*/</comment>

                <expr_stmt pos:start="1791:17" pos:end="1791:57"><expr pos:start="1791:17" pos:end="1791:56"><call pos:start="1791:17" pos:end="1791:56"><name pos:start="1791:17" pos:end="1791:26">HAS_OPTION</name><argument_list pos:start="1791:27" pos:end="1791:56">(<argument pos:start="1791:28" pos:end="1791:55"><expr pos:start="1791:28" pos:end="1791:55"><name pos:start="1791:28" pos:end="1791:55">XTENSA_OPTION_MISC_OP_CLAMPS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1793:17" pos:end="1793:52"><expr pos:start="1793:17" pos:end="1793:51"><call pos:start="1793:17" pos:end="1793:51"><name pos:start="1793:17" pos:end="1793:33">gen_window_check2</name><argument_list pos:start="1793:34" pos:end="1793:51">(<argument pos:start="1793:35" pos:end="1793:36"><expr pos:start="1793:35" pos:end="1793:36"><name pos:start="1793:35" pos:end="1793:36">dc</name></expr></argument>, <argument pos:start="1793:39" pos:end="1793:43"><expr pos:start="1793:39" pos:end="1793:43"><name pos:start="1793:39" pos:end="1793:43">RRR_R</name></expr></argument>, <argument pos:start="1793:46" pos:end="1793:50"><expr pos:start="1793:46" pos:end="1793:50"><name pos:start="1793:46" pos:end="1793:50">RRR_S</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <block pos:start="1795:17" pos:end="1833:17">{<block_content pos:start="1797:21" pos:end="1831:40">

                    <decl_stmt pos:start="1797:21" pos:end="1797:55"><decl pos:start="1797:21" pos:end="1797:54"><type pos:start="1797:21" pos:end="1797:28"><name pos:start="1797:21" pos:end="1797:28">TCGv_i32</name></type> <name pos:start="1797:30" pos:end="1797:33">tmp1</name> <init pos:start="1797:35" pos:end="1797:54">= <expr pos:start="1797:37" pos:end="1797:54"><call pos:start="1797:37" pos:end="1797:54"><name pos:start="1797:37" pos:end="1797:52">tcg_temp_new_i32</name><argument_list pos:start="1797:53" pos:end="1797:54">()</argument_list></call></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="1799:21" pos:end="1799:55"><decl pos:start="1799:21" pos:end="1799:54"><type pos:start="1799:21" pos:end="1799:28"><name pos:start="1799:21" pos:end="1799:28">TCGv_i32</name></type> <name pos:start="1799:30" pos:end="1799:33">tmp2</name> <init pos:start="1799:35" pos:end="1799:54">= <expr pos:start="1799:37" pos:end="1799:54"><call pos:start="1799:37" pos:end="1799:54"><name pos:start="1799:37" pos:end="1799:52">tcg_temp_new_i32</name><argument_list pos:start="1799:53" pos:end="1799:54">()</argument_list></call></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="1801:21" pos:end="1801:48"><decl pos:start="1801:21" pos:end="1801:47"><type pos:start="1801:21" pos:end="1801:23"><name pos:start="1801:21" pos:end="1801:23">int</name></type> <name pos:start="1801:25" pos:end="1801:29">label</name> <init pos:start="1801:31" pos:end="1801:47">= <expr pos:start="1801:33" pos:end="1801:47"><call pos:start="1801:33" pos:end="1801:47"><name pos:start="1801:33" pos:end="1801:45">gen_new_label</name><argument_list pos:start="1801:46" pos:end="1801:47">()</argument_list></call></expr></init></decl>;</decl_stmt>



                    <expr_stmt pos:start="1805:21" pos:end="1805:69"><expr pos:start="1805:21" pos:end="1805:68"><call pos:start="1805:21" pos:end="1805:68"><name pos:start="1805:21" pos:end="1805:36">tcg_gen_sari_i32</name><argument_list pos:start="1805:37" pos:end="1805:68">(<argument pos:start="1805:38" pos:end="1805:41"><expr pos:start="1805:38" pos:end="1805:41"><name pos:start="1805:38" pos:end="1805:41">tmp1</name></expr></argument>, <argument pos:start="1805:44" pos:end="1805:55"><expr pos:start="1805:44" pos:end="1805:55"><name pos:start="1805:44" pos:end="1805:55"><name pos:start="1805:44" pos:end="1805:48">cpu_R</name><index pos:start="1805:49" pos:end="1805:55">[<expr pos:start="1805:50" pos:end="1805:54"><name pos:start="1805:50" pos:end="1805:54">RRR_S</name></expr>]</index></name></expr></argument>, <argument pos:start="1805:58" pos:end="1805:67"><expr pos:start="1805:58" pos:end="1805:67"><literal type="number" pos:start="1805:58" pos:end="1805:61">24</literal> <operator pos:start="1805:61" pos:end="1805:61">-</operator> <name pos:start="1805:63" pos:end="1805:67">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1807:21" pos:end="1807:62"><expr pos:start="1807:21" pos:end="1807:61"><call pos:start="1807:21" pos:end="1807:61"><name pos:start="1807:21" pos:end="1807:35">tcg_gen_xor_i32</name><argument_list pos:start="1807:36" pos:end="1807:61">(<argument pos:start="1807:37" pos:end="1807:40"><expr pos:start="1807:37" pos:end="1807:40"><name pos:start="1807:37" pos:end="1807:40">tmp2</name></expr></argument>, <argument pos:start="1807:43" pos:end="1807:46"><expr pos:start="1807:43" pos:end="1807:46"><name pos:start="1807:43" pos:end="1807:46">tmp1</name></expr></argument>, <argument pos:start="1807:49" pos:end="1807:60"><expr pos:start="1807:49" pos:end="1807:60"><name pos:start="1807:49" pos:end="1807:60"><name pos:start="1807:49" pos:end="1807:53">cpu_R</name><index pos:start="1807:54" pos:end="1807:60">[<expr pos:start="1807:55" pos:end="1807:59"><name pos:start="1807:55" pos:end="1807:59">RRR_S</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1809:21" pos:end="1809:76"><expr pos:start="1809:21" pos:end="1809:75"><call pos:start="1809:21" pos:end="1809:75"><name pos:start="1809:21" pos:end="1809:36">tcg_gen_andi_i32</name><argument_list pos:start="1809:37" pos:end="1809:75">(<argument pos:start="1809:38" pos:end="1809:41"><expr pos:start="1809:38" pos:end="1809:41"><name pos:start="1809:38" pos:end="1809:41">tmp2</name></expr></argument>, <argument pos:start="1809:44" pos:end="1809:47"><expr pos:start="1809:44" pos:end="1809:47"><name pos:start="1809:44" pos:end="1809:47">tmp2</name></expr></argument>, <argument pos:start="1809:50" pos:end="1809:74"><expr pos:start="1809:50" pos:end="1809:74"><literal type="number" pos:start="1809:50" pos:end="1809:59">0xffffffff</literal> <operator pos:start="1809:61" pos:end="1809:62">&lt;&lt;</operator> <operator pos:start="1809:64" pos:end="1809:64">(</operator><name pos:start="1809:65" pos:end="1809:69">RRR_T</name> <operator pos:start="1809:71" pos:end="1809:71">+</operator> <literal type="number" pos:start="1809:73" pos:end="1809:73">7</literal><operator pos:start="1809:74" pos:end="1809:74">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1811:21" pos:end="1811:64"><expr pos:start="1811:21" pos:end="1811:63"><call pos:start="1811:21" pos:end="1811:63"><name pos:start="1811:21" pos:end="1811:35">tcg_gen_mov_i32</name><argument_list pos:start="1811:36" pos:end="1811:63">(<argument pos:start="1811:37" pos:end="1811:48"><expr pos:start="1811:37" pos:end="1811:48"><name pos:start="1811:37" pos:end="1811:48"><name pos:start="1811:37" pos:end="1811:41">cpu_R</name><index pos:start="1811:42" pos:end="1811:48">[<expr pos:start="1811:43" pos:end="1811:47"><name pos:start="1811:43" pos:end="1811:47">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="1811:51" pos:end="1811:62"><expr pos:start="1811:51" pos:end="1811:62"><name pos:start="1811:51" pos:end="1811:62"><name pos:start="1811:51" pos:end="1811:55">cpu_R</name><index pos:start="1811:56" pos:end="1811:62">[<expr pos:start="1811:57" pos:end="1811:61"><name pos:start="1811:57" pos:end="1811:61">RRR_S</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1813:21" pos:end="1813:69"><expr pos:start="1813:21" pos:end="1813:68"><call pos:start="1813:21" pos:end="1813:68"><name pos:start="1813:21" pos:end="1813:39">tcg_gen_brcondi_i32</name><argument_list pos:start="1813:40" pos:end="1813:68">(<argument pos:start="1813:41" pos:end="1813:51"><expr pos:start="1813:41" pos:end="1813:51"><name pos:start="1813:41" pos:end="1813:51">TCG_COND_EQ</name></expr></argument>, <argument pos:start="1813:54" pos:end="1813:57"><expr pos:start="1813:54" pos:end="1813:57"><name pos:start="1813:54" pos:end="1813:57">tmp2</name></expr></argument>, <argument pos:start="1813:60" pos:end="1813:60"><expr pos:start="1813:60" pos:end="1813:60"><literal type="number" pos:start="1813:60" pos:end="1813:60">0</literal></expr></argument>, <argument pos:start="1813:63" pos:end="1813:67"><expr pos:start="1813:63" pos:end="1813:67"><name pos:start="1813:63" pos:end="1813:67">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="1817:21" pos:end="1817:61"><expr pos:start="1817:21" pos:end="1817:60"><call pos:start="1817:21" pos:end="1817:60"><name pos:start="1817:21" pos:end="1817:36">tcg_gen_sari_i32</name><argument_list pos:start="1817:37" pos:end="1817:60">(<argument pos:start="1817:38" pos:end="1817:41"><expr pos:start="1817:38" pos:end="1817:41"><name pos:start="1817:38" pos:end="1817:41">tmp1</name></expr></argument>, <argument pos:start="1817:44" pos:end="1817:55"><expr pos:start="1817:44" pos:end="1817:55"><name pos:start="1817:44" pos:end="1817:55"><name pos:start="1817:44" pos:end="1817:48">cpu_R</name><index pos:start="1817:49" pos:end="1817:55">[<expr pos:start="1817:50" pos:end="1817:54"><name pos:start="1817:50" pos:end="1817:54">RRR_S</name></expr>]</index></name></expr></argument>, <argument pos:start="1817:58" pos:end="1817:59"><expr pos:start="1817:58" pos:end="1817:59"><literal type="number" pos:start="1817:58" pos:end="1817:59">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1819:21" pos:end="1821:56"><expr pos:start="1819:21" pos:end="1821:55"><call pos:start="1819:21" pos:end="1821:55"><name pos:start="1819:21" pos:end="1819:36">tcg_gen_xori_i32</name><argument_list pos:start="1819:37" pos:end="1821:55">(<argument pos:start="1819:38" pos:end="1819:49"><expr pos:start="1819:38" pos:end="1819:49"><name pos:start="1819:38" pos:end="1819:49"><name pos:start="1819:38" pos:end="1819:42">cpu_R</name><index pos:start="1819:43" pos:end="1819:49">[<expr pos:start="1819:44" pos:end="1819:48"><name pos:start="1819:44" pos:end="1819:48">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="1819:52" pos:end="1819:55"><expr pos:start="1819:52" pos:end="1819:55"><name pos:start="1819:52" pos:end="1819:55">tmp1</name></expr></argument>,

                            <argument pos:start="1821:29" pos:end="1821:54"><expr pos:start="1821:29" pos:end="1821:54"><literal type="number" pos:start="1821:29" pos:end="1821:38">0xffffffff</literal> <operator pos:start="1821:40" pos:end="1821:41">&gt;&gt;</operator> <operator pos:start="1821:43" pos:end="1821:43">(</operator><literal type="number" pos:start="1821:44" pos:end="1821:47">25</literal> <operator pos:start="1821:47" pos:end="1821:47">-</operator> <name pos:start="1821:49" pos:end="1821:53">RRR_T</name><operator pos:start="1821:54" pos:end="1821:54">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="1825:21" pos:end="1825:41"><expr pos:start="1825:21" pos:end="1825:40"><call pos:start="1825:21" pos:end="1825:40"><name pos:start="1825:21" pos:end="1825:33">gen_set_label</name><argument_list pos:start="1825:34" pos:end="1825:40">(<argument pos:start="1825:35" pos:end="1825:39"><expr pos:start="1825:35" pos:end="1825:39"><name pos:start="1825:35" pos:end="1825:39">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="1829:21" pos:end="1829:40"><expr pos:start="1829:21" pos:end="1829:39"><call pos:start="1829:21" pos:end="1829:39"><name pos:start="1829:21" pos:end="1829:33">tcg_temp_free</name><argument_list pos:start="1829:34" pos:end="1829:39">(<argument pos:start="1829:35" pos:end="1829:38"><expr pos:start="1829:35" pos:end="1829:38"><name pos:start="1829:35" pos:end="1829:38">tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1831:21" pos:end="1831:40"><expr pos:start="1831:21" pos:end="1831:39"><call pos:start="1831:21" pos:end="1831:39"><name pos:start="1831:21" pos:end="1831:33">tcg_temp_free</name><argument_list pos:start="1831:34" pos:end="1831:39">(<argument pos:start="1831:35" pos:end="1831:38"><expr pos:start="1831:35" pos:end="1831:38"><name pos:start="1831:35" pos:end="1831:38">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block>

                <break pos:start="1835:17" pos:end="1835:22">break;</break>



            <case pos:start="1839:13" pos:end="1839:19">case <expr pos:start="1839:18" pos:end="1839:18"><literal type="number" pos:start="1839:18" pos:end="1839:18">4</literal></expr>:</case> <comment type="block" pos:start="1839:21" pos:end="1839:28">/*MINu*/</comment>

            <case pos:start="1841:13" pos:end="1841:19">case <expr pos:start="1841:18" pos:end="1841:18"><literal type="number" pos:start="1841:18" pos:end="1841:18">5</literal></expr>:</case> <comment type="block" pos:start="1841:21" pos:end="1841:28">/*MAXu*/</comment>

            <case pos:start="1843:13" pos:end="1843:19">case <expr pos:start="1843:18" pos:end="1843:18"><literal type="number" pos:start="1843:18" pos:end="1843:18">6</literal></expr>:</case> <comment type="block" pos:start="1843:21" pos:end="1843:29">/*MINUu*/</comment>

            <case pos:start="1845:13" pos:end="1845:19">case <expr pos:start="1845:18" pos:end="1845:18"><literal type="number" pos:start="1845:18" pos:end="1845:18">7</literal></expr>:</case> <comment type="block" pos:start="1845:21" pos:end="1845:29">/*MAXUu*/</comment>

                <expr_stmt pos:start="1847:17" pos:end="1847:57"><expr pos:start="1847:17" pos:end="1847:56"><call pos:start="1847:17" pos:end="1847:56"><name pos:start="1847:17" pos:end="1847:26">HAS_OPTION</name><argument_list pos:start="1847:27" pos:end="1847:56">(<argument pos:start="1847:28" pos:end="1847:55"><expr pos:start="1847:28" pos:end="1847:55"><name pos:start="1847:28" pos:end="1847:55">XTENSA_OPTION_MISC_OP_MINMAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1849:17" pos:end="1849:59"><expr pos:start="1849:17" pos:end="1849:58"><call pos:start="1849:17" pos:end="1849:58"><name pos:start="1849:17" pos:end="1849:33">gen_window_check3</name><argument_list pos:start="1849:34" pos:end="1849:58">(<argument pos:start="1849:35" pos:end="1849:36"><expr pos:start="1849:35" pos:end="1849:36"><name pos:start="1849:35" pos:end="1849:36">dc</name></expr></argument>, <argument pos:start="1849:39" pos:end="1849:43"><expr pos:start="1849:39" pos:end="1849:43"><name pos:start="1849:39" pos:end="1849:43">RRR_R</name></expr></argument>, <argument pos:start="1849:46" pos:end="1849:50"><expr pos:start="1849:46" pos:end="1849:50"><name pos:start="1849:46" pos:end="1849:50">RRR_S</name></expr></argument>, <argument pos:start="1849:53" pos:end="1849:57"><expr pos:start="1849:53" pos:end="1849:57"><name pos:start="1849:53" pos:end="1849:57">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <block pos:start="1851:17" pos:end="1891:17">{<block_content pos:start="1853:21" pos:end="1889:41">

                    <decl_stmt pos:start="1853:21" pos:end="1863:22"><decl pos:start="1853:21" pos:end="1863:21"><type pos:start="1853:21" pos:end="1853:40"><specifier pos:start="1853:21" pos:end="1853:26">static</specifier> <specifier pos:start="1853:28" pos:end="1853:32">const</specifier> <name pos:start="1853:34" pos:end="1853:40">TCGCond</name></type> <name pos:start="1853:42" pos:end="1853:47"><name pos:start="1853:42" pos:end="1853:45">cond</name><index pos:start="1853:46" pos:end="1853:47">[]</index></name> <init pos:start="1853:49" pos:end="1863:21">= <expr pos:start="1853:51" pos:end="1863:21"><block pos:start="1853:51" pos:end="1863:21">{

                        <expr pos:start="1855:25" pos:end="1855:35"><name pos:start="1855:25" pos:end="1855:35">TCG_COND_LE</name></expr>,

                        <expr pos:start="1857:25" pos:end="1857:35"><name pos:start="1857:25" pos:end="1857:35">TCG_COND_GE</name></expr>,

                        <expr pos:start="1859:25" pos:end="1859:36"><name pos:start="1859:25" pos:end="1859:36">TCG_COND_LEU</name></expr>,

                        <expr pos:start="1861:25" pos:end="1861:36"><name pos:start="1861:25" pos:end="1861:36">TCG_COND_GEU</name></expr>

                    }</block></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="1865:21" pos:end="1865:48"><decl pos:start="1865:21" pos:end="1865:47"><type pos:start="1865:21" pos:end="1865:23"><name pos:start="1865:21" pos:end="1865:23">int</name></type> <name pos:start="1865:25" pos:end="1865:29">label</name> <init pos:start="1865:31" pos:end="1865:47">= <expr pos:start="1865:33" pos:end="1865:47"><call pos:start="1865:33" pos:end="1865:47"><name pos:start="1865:33" pos:end="1865:45">gen_new_label</name><argument_list pos:start="1865:46" pos:end="1865:47">()</argument_list></call></expr></init></decl>;</decl_stmt>



                    <if_stmt pos:start="1869:21" pos:end="1887:21"><if pos:start="1869:21" pos:end="1879:21">if <condition pos:start="1869:24" pos:end="1869:39">(<expr pos:start="1869:25" pos:end="1869:38"><name pos:start="1869:25" pos:end="1869:29">RRR_R</name> <operator pos:start="1869:31" pos:end="1869:32">!=</operator> <name pos:start="1869:34" pos:end="1869:38">RRR_T</name></expr>)</condition> <block pos:start="1869:41" pos:end="1879:21">{<block_content pos:start="1871:25" pos:end="1877:68">

                        <expr_stmt pos:start="1871:25" pos:end="1871:68"><expr pos:start="1871:25" pos:end="1871:67"><call pos:start="1871:25" pos:end="1871:67"><name pos:start="1871:25" pos:end="1871:39">tcg_gen_mov_i32</name><argument_list pos:start="1871:40" pos:end="1871:67">(<argument pos:start="1871:41" pos:end="1871:52"><expr pos:start="1871:41" pos:end="1871:52"><name pos:start="1871:41" pos:end="1871:52"><name pos:start="1871:41" pos:end="1871:45">cpu_R</name><index pos:start="1871:46" pos:end="1871:52">[<expr pos:start="1871:47" pos:end="1871:51"><name pos:start="1871:47" pos:end="1871:51">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="1871:55" pos:end="1871:66"><expr pos:start="1871:55" pos:end="1871:66"><name pos:start="1871:55" pos:end="1871:66"><name pos:start="1871:55" pos:end="1871:59">cpu_R</name><index pos:start="1871:60" pos:end="1871:66">[<expr pos:start="1871:61" pos:end="1871:65"><name pos:start="1871:61" pos:end="1871:65">RRR_S</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1873:25" pos:end="1875:67"><expr pos:start="1873:25" pos:end="1875:66"><call pos:start="1873:25" pos:end="1875:66"><name pos:start="1873:25" pos:end="1873:42">tcg_gen_brcond_i32</name><argument_list pos:start="1873:43" pos:end="1875:66">(<argument pos:start="1873:44" pos:end="1873:56"><expr pos:start="1873:44" pos:end="1873:56"><name pos:start="1873:44" pos:end="1873:56"><name pos:start="1873:44" pos:end="1873:47">cond</name><index pos:start="1873:48" pos:end="1873:56">[<expr pos:start="1873:49" pos:end="1873:55"><name pos:start="1873:49" pos:end="1873:51">OP2</name> <operator pos:start="1873:53" pos:end="1873:53">-</operator> <literal type="number" pos:start="1873:55" pos:end="1873:55">4</literal></expr>]</index></name></expr></argument>,

                                <argument pos:start="1875:33" pos:end="1875:44"><expr pos:start="1875:33" pos:end="1875:44"><name pos:start="1875:33" pos:end="1875:44"><name pos:start="1875:33" pos:end="1875:37">cpu_R</name><index pos:start="1875:38" pos:end="1875:44">[<expr pos:start="1875:39" pos:end="1875:43"><name pos:start="1875:39" pos:end="1875:43">RRR_S</name></expr>]</index></name></expr></argument>, <argument pos:start="1875:47" pos:end="1875:58"><expr pos:start="1875:47" pos:end="1875:58"><name pos:start="1875:47" pos:end="1875:58"><name pos:start="1875:47" pos:end="1875:51">cpu_R</name><index pos:start="1875:52" pos:end="1875:58">[<expr pos:start="1875:53" pos:end="1875:57"><name pos:start="1875:53" pos:end="1875:57">RRR_T</name></expr>]</index></name></expr></argument>, <argument pos:start="1875:61" pos:end="1875:65"><expr pos:start="1875:61" pos:end="1875:65"><name pos:start="1875:61" pos:end="1875:65">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1877:25" pos:end="1877:68"><expr pos:start="1877:25" pos:end="1877:67"><call pos:start="1877:25" pos:end="1877:67"><name pos:start="1877:25" pos:end="1877:39">tcg_gen_mov_i32</name><argument_list pos:start="1877:40" pos:end="1877:67">(<argument pos:start="1877:41" pos:end="1877:52"><expr pos:start="1877:41" pos:end="1877:52"><name pos:start="1877:41" pos:end="1877:52"><name pos:start="1877:41" pos:end="1877:45">cpu_R</name><index pos:start="1877:46" pos:end="1877:52">[<expr pos:start="1877:47" pos:end="1877:51"><name pos:start="1877:47" pos:end="1877:51">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="1877:55" pos:end="1877:66"><expr pos:start="1877:55" pos:end="1877:66"><name pos:start="1877:55" pos:end="1877:66"><name pos:start="1877:55" pos:end="1877:59">cpu_R</name><index pos:start="1877:60" pos:end="1877:66">[<expr pos:start="1877:61" pos:end="1877:65"><name pos:start="1877:61" pos:end="1877:65">RRR_T</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="1879:23" pos:end="1887:21">else <block pos:start="1879:28" pos:end="1887:21">{<block_content pos:start="1881:25" pos:end="1885:68">

                        <expr_stmt pos:start="1881:25" pos:end="1883:67"><expr pos:start="1881:25" pos:end="1883:66"><call pos:start="1881:25" pos:end="1883:66"><name pos:start="1881:25" pos:end="1881:42">tcg_gen_brcond_i32</name><argument_list pos:start="1881:43" pos:end="1883:66">(<argument pos:start="1881:44" pos:end="1881:56"><expr pos:start="1881:44" pos:end="1881:56"><name pos:start="1881:44" pos:end="1881:56"><name pos:start="1881:44" pos:end="1881:47">cond</name><index pos:start="1881:48" pos:end="1881:56">[<expr pos:start="1881:49" pos:end="1881:55"><name pos:start="1881:49" pos:end="1881:51">OP2</name> <operator pos:start="1881:53" pos:end="1881:53">-</operator> <literal type="number" pos:start="1881:55" pos:end="1881:55">4</literal></expr>]</index></name></expr></argument>,

                                <argument pos:start="1883:33" pos:end="1883:44"><expr pos:start="1883:33" pos:end="1883:44"><name pos:start="1883:33" pos:end="1883:44"><name pos:start="1883:33" pos:end="1883:37">cpu_R</name><index pos:start="1883:38" pos:end="1883:44">[<expr pos:start="1883:39" pos:end="1883:43"><name pos:start="1883:39" pos:end="1883:43">RRR_T</name></expr>]</index></name></expr></argument>, <argument pos:start="1883:47" pos:end="1883:58"><expr pos:start="1883:47" pos:end="1883:58"><name pos:start="1883:47" pos:end="1883:58"><name pos:start="1883:47" pos:end="1883:51">cpu_R</name><index pos:start="1883:52" pos:end="1883:58">[<expr pos:start="1883:53" pos:end="1883:57"><name pos:start="1883:53" pos:end="1883:57">RRR_S</name></expr>]</index></name></expr></argument>, <argument pos:start="1883:61" pos:end="1883:65"><expr pos:start="1883:61" pos:end="1883:65"><name pos:start="1883:61" pos:end="1883:65">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1885:25" pos:end="1885:68"><expr pos:start="1885:25" pos:end="1885:67"><call pos:start="1885:25" pos:end="1885:67"><name pos:start="1885:25" pos:end="1885:39">tcg_gen_mov_i32</name><argument_list pos:start="1885:40" pos:end="1885:67">(<argument pos:start="1885:41" pos:end="1885:52"><expr pos:start="1885:41" pos:end="1885:52"><name pos:start="1885:41" pos:end="1885:52"><name pos:start="1885:41" pos:end="1885:45">cpu_R</name><index pos:start="1885:46" pos:end="1885:52">[<expr pos:start="1885:47" pos:end="1885:51"><name pos:start="1885:47" pos:end="1885:51">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="1885:55" pos:end="1885:66"><expr pos:start="1885:55" pos:end="1885:66"><name pos:start="1885:55" pos:end="1885:66"><name pos:start="1885:55" pos:end="1885:59">cpu_R</name><index pos:start="1885:60" pos:end="1885:66">[<expr pos:start="1885:61" pos:end="1885:65"><name pos:start="1885:61" pos:end="1885:65">RRR_S</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="1889:21" pos:end="1889:41"><expr pos:start="1889:21" pos:end="1889:40"><call pos:start="1889:21" pos:end="1889:40"><name pos:start="1889:21" pos:end="1889:33">gen_set_label</name><argument_list pos:start="1889:34" pos:end="1889:40">(<argument pos:start="1889:35" pos:end="1889:39"><expr pos:start="1889:35" pos:end="1889:39"><name pos:start="1889:35" pos:end="1889:39">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block>

                <break pos:start="1893:17" pos:end="1893:22">break;</break>



            <case pos:start="1897:13" pos:end="1897:19">case <expr pos:start="1897:18" pos:end="1897:18"><literal type="number" pos:start="1897:18" pos:end="1897:18">8</literal></expr>:</case> <comment type="block" pos:start="1897:21" pos:end="1897:30">/*MOVEQZ*/</comment>

            <case pos:start="1899:13" pos:end="1899:19">case <expr pos:start="1899:18" pos:end="1899:18"><literal type="number" pos:start="1899:18" pos:end="1899:18">9</literal></expr>:</case> <comment type="block" pos:start="1899:21" pos:end="1899:30">/*MOVNEZ*/</comment>

            <case pos:start="1901:13" pos:end="1901:20">case <expr pos:start="1901:18" pos:end="1901:19"><literal type="number" pos:start="1901:18" pos:end="1901:19">10</literal></expr>:</case> <comment type="block" pos:start="1901:22" pos:end="1901:31">/*MOVLTZ*/</comment>

            <case pos:start="1903:13" pos:end="1903:20">case <expr pos:start="1903:18" pos:end="1903:19"><literal type="number" pos:start="1903:18" pos:end="1903:19">11</literal></expr>:</case> <comment type="block" pos:start="1903:22" pos:end="1903:31">/*MOVGEZ*/</comment>

                <expr_stmt pos:start="1905:17" pos:end="1905:59"><expr pos:start="1905:17" pos:end="1905:58"><call pos:start="1905:17" pos:end="1905:58"><name pos:start="1905:17" pos:end="1905:33">gen_window_check3</name><argument_list pos:start="1905:34" pos:end="1905:58">(<argument pos:start="1905:35" pos:end="1905:36"><expr pos:start="1905:35" pos:end="1905:36"><name pos:start="1905:35" pos:end="1905:36">dc</name></expr></argument>, <argument pos:start="1905:39" pos:end="1905:43"><expr pos:start="1905:39" pos:end="1905:43"><name pos:start="1905:39" pos:end="1905:43">RRR_R</name></expr></argument>, <argument pos:start="1905:46" pos:end="1905:50"><expr pos:start="1905:46" pos:end="1905:50"><name pos:start="1905:46" pos:end="1905:50">RRR_S</name></expr></argument>, <argument pos:start="1905:53" pos:end="1905:57"><expr pos:start="1905:53" pos:end="1905:57"><name pos:start="1905:53" pos:end="1905:57">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <block pos:start="1907:17" pos:end="1929:17">{<block_content pos:start="1909:21" pos:end="1927:41">

                    <decl_stmt pos:start="1909:21" pos:end="1919:22"><decl pos:start="1909:21" pos:end="1919:21"><type pos:start="1909:21" pos:end="1909:40"><specifier pos:start="1909:21" pos:end="1909:26">static</specifier> <specifier pos:start="1909:28" pos:end="1909:32">const</specifier> <name pos:start="1909:34" pos:end="1909:40">TCGCond</name></type> <name pos:start="1909:42" pos:end="1909:47"><name pos:start="1909:42" pos:end="1909:45">cond</name><index pos:start="1909:46" pos:end="1909:47">[]</index></name> <init pos:start="1909:49" pos:end="1919:21">= <expr pos:start="1909:51" pos:end="1919:21"><block pos:start="1909:51" pos:end="1919:21">{

                        <expr pos:start="1911:25" pos:end="1911:35"><name pos:start="1911:25" pos:end="1911:35">TCG_COND_NE</name></expr>,

                        <expr pos:start="1913:25" pos:end="1913:35"><name pos:start="1913:25" pos:end="1913:35">TCG_COND_EQ</name></expr>,

                        <expr pos:start="1915:25" pos:end="1915:35"><name pos:start="1915:25" pos:end="1915:35">TCG_COND_GE</name></expr>,

                        <expr pos:start="1917:25" pos:end="1917:35"><name pos:start="1917:25" pos:end="1917:35">TCG_COND_LT</name></expr>

                    }</block></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="1921:21" pos:end="1921:48"><decl pos:start="1921:21" pos:end="1921:47"><type pos:start="1921:21" pos:end="1921:23"><name pos:start="1921:21" pos:end="1921:23">int</name></type> <name pos:start="1921:25" pos:end="1921:29">label</name> <init pos:start="1921:31" pos:end="1921:47">= <expr pos:start="1921:33" pos:end="1921:47"><call pos:start="1921:33" pos:end="1921:47"><name pos:start="1921:33" pos:end="1921:45">gen_new_label</name><argument_list pos:start="1921:46" pos:end="1921:47">()</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="1923:21" pos:end="1923:79"><expr pos:start="1923:21" pos:end="1923:78"><call pos:start="1923:21" pos:end="1923:78"><name pos:start="1923:21" pos:end="1923:39">tcg_gen_brcondi_i32</name><argument_list pos:start="1923:40" pos:end="1923:78">(<argument pos:start="1923:41" pos:end="1923:53"><expr pos:start="1923:41" pos:end="1923:53"><name pos:start="1923:41" pos:end="1923:53"><name pos:start="1923:41" pos:end="1923:44">cond</name><index pos:start="1923:45" pos:end="1923:53">[<expr pos:start="1923:46" pos:end="1923:52"><name pos:start="1923:46" pos:end="1923:48">OP2</name> <operator pos:start="1923:50" pos:end="1923:50">-</operator> <literal type="number" pos:start="1923:52" pos:end="1923:52">8</literal></expr>]</index></name></expr></argument>, <argument pos:start="1923:56" pos:end="1923:67"><expr pos:start="1923:56" pos:end="1923:67"><name pos:start="1923:56" pos:end="1923:67"><name pos:start="1923:56" pos:end="1923:60">cpu_R</name><index pos:start="1923:61" pos:end="1923:67">[<expr pos:start="1923:62" pos:end="1923:66"><name pos:start="1923:62" pos:end="1923:66">RRR_T</name></expr>]</index></name></expr></argument>, <argument pos:start="1923:70" pos:end="1923:70"><expr pos:start="1923:70" pos:end="1923:70"><literal type="number" pos:start="1923:70" pos:end="1923:70">0</literal></expr></argument>, <argument pos:start="1923:73" pos:end="1923:77"><expr pos:start="1923:73" pos:end="1923:77"><name pos:start="1923:73" pos:end="1923:77">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1925:21" pos:end="1925:64"><expr pos:start="1925:21" pos:end="1925:63"><call pos:start="1925:21" pos:end="1925:63"><name pos:start="1925:21" pos:end="1925:35">tcg_gen_mov_i32</name><argument_list pos:start="1925:36" pos:end="1925:63">(<argument pos:start="1925:37" pos:end="1925:48"><expr pos:start="1925:37" pos:end="1925:48"><name pos:start="1925:37" pos:end="1925:48"><name pos:start="1925:37" pos:end="1925:41">cpu_R</name><index pos:start="1925:42" pos:end="1925:48">[<expr pos:start="1925:43" pos:end="1925:47"><name pos:start="1925:43" pos:end="1925:47">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="1925:51" pos:end="1925:62"><expr pos:start="1925:51" pos:end="1925:62"><name pos:start="1925:51" pos:end="1925:62"><name pos:start="1925:51" pos:end="1925:55">cpu_R</name><index pos:start="1925:56" pos:end="1925:62">[<expr pos:start="1925:57" pos:end="1925:61"><name pos:start="1925:57" pos:end="1925:61">RRR_S</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1927:21" pos:end="1927:41"><expr pos:start="1927:21" pos:end="1927:40"><call pos:start="1927:21" pos:end="1927:40"><name pos:start="1927:21" pos:end="1927:33">gen_set_label</name><argument_list pos:start="1927:34" pos:end="1927:40">(<argument pos:start="1927:35" pos:end="1927:39"><expr pos:start="1927:35" pos:end="1927:39"><name pos:start="1927:35" pos:end="1927:39">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block>

                <break pos:start="1931:17" pos:end="1931:22">break;</break>



            <case pos:start="1935:13" pos:end="1935:20">case <expr pos:start="1935:18" pos:end="1935:19"><literal type="number" pos:start="1935:18" pos:end="1935:19">12</literal></expr>:</case> <comment type="block" pos:start="1935:22" pos:end="1935:30">/*MOVFp*/</comment>

            <case pos:start="1937:13" pos:end="1937:20">case <expr pos:start="1937:18" pos:end="1937:19"><literal type="number" pos:start="1937:18" pos:end="1937:19">13</literal></expr>:</case> <comment type="block" pos:start="1937:22" pos:end="1937:30">/*MOVTp*/</comment>

                <expr_stmt pos:start="1939:17" pos:end="1939:50"><expr pos:start="1939:17" pos:end="1939:49"><call pos:start="1939:17" pos:end="1939:49"><name pos:start="1939:17" pos:end="1939:26">HAS_OPTION</name><argument_list pos:start="1939:27" pos:end="1939:49">(<argument pos:start="1939:28" pos:end="1939:48"><expr pos:start="1939:28" pos:end="1939:48"><name pos:start="1939:28" pos:end="1939:48">XTENSA_OPTION_BOOLEAN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1941:17" pos:end="1941:52"><expr pos:start="1941:17" pos:end="1941:51"><call pos:start="1941:17" pos:end="1941:51"><name pos:start="1941:17" pos:end="1941:33">gen_window_check2</name><argument_list pos:start="1941:34" pos:end="1941:51">(<argument pos:start="1941:35" pos:end="1941:36"><expr pos:start="1941:35" pos:end="1941:36"><name pos:start="1941:35" pos:end="1941:36">dc</name></expr></argument>, <argument pos:start="1941:39" pos:end="1941:43"><expr pos:start="1941:39" pos:end="1941:43"><name pos:start="1941:39" pos:end="1941:43">RRR_R</name></expr></argument>, <argument pos:start="1941:46" pos:end="1941:50"><expr pos:start="1941:46" pos:end="1941:50"><name pos:start="1941:46" pos:end="1941:50">RRR_S</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <block pos:start="1943:17" pos:end="1965:17">{<block_content pos:start="1945:21" pos:end="1963:39">

                    <decl_stmt pos:start="1945:21" pos:end="1945:48"><decl pos:start="1945:21" pos:end="1945:47"><type pos:start="1945:21" pos:end="1945:23"><name pos:start="1945:21" pos:end="1945:23">int</name></type> <name pos:start="1945:25" pos:end="1945:29">label</name> <init pos:start="1945:31" pos:end="1945:47">= <expr pos:start="1945:33" pos:end="1945:47"><call pos:start="1945:33" pos:end="1945:47"><name pos:start="1945:33" pos:end="1945:45">gen_new_label</name><argument_list pos:start="1945:46" pos:end="1945:47">()</argument_list></call></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="1947:21" pos:end="1947:54"><decl pos:start="1947:21" pos:end="1947:53"><type pos:start="1947:21" pos:end="1947:28"><name pos:start="1947:21" pos:end="1947:28">TCGv_i32</name></type> <name pos:start="1947:30" pos:end="1947:32">tmp</name> <init pos:start="1947:34" pos:end="1947:53">= <expr pos:start="1947:36" pos:end="1947:53"><call pos:start="1947:36" pos:end="1947:53"><name pos:start="1947:36" pos:end="1947:51">tcg_temp_new_i32</name><argument_list pos:start="1947:52" pos:end="1947:53">()</argument_list></call></expr></init></decl>;</decl_stmt>



                    <expr_stmt pos:start="1951:21" pos:end="1951:66"><expr pos:start="1951:21" pos:end="1951:65"><call pos:start="1951:21" pos:end="1951:65"><name pos:start="1951:21" pos:end="1951:36">tcg_gen_andi_i32</name><argument_list pos:start="1951:37" pos:end="1951:65">(<argument pos:start="1951:38" pos:end="1951:40"><expr pos:start="1951:38" pos:end="1951:40"><name pos:start="1951:38" pos:end="1951:40">tmp</name></expr></argument>, <argument pos:start="1951:43" pos:end="1951:52"><expr pos:start="1951:43" pos:end="1951:52"><name pos:start="1951:43" pos:end="1951:52"><name pos:start="1951:43" pos:end="1951:48">cpu_SR</name><index pos:start="1951:49" pos:end="1951:52">[<expr pos:start="1951:50" pos:end="1951:51"><name pos:start="1951:50" pos:end="1951:51">BR</name></expr>]</index></name></expr></argument>, <argument pos:start="1951:55" pos:end="1951:64"><expr pos:start="1951:55" pos:end="1951:64"><literal type="number" pos:start="1951:55" pos:end="1951:55">1</literal> <operator pos:start="1951:57" pos:end="1951:58">&lt;&lt;</operator> <name pos:start="1951:60" pos:end="1951:64">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1953:21" pos:end="1957:43"><expr pos:start="1953:21" pos:end="1957:42"><call pos:start="1953:21" pos:end="1957:42"><name pos:start="1953:21" pos:end="1953:39">tcg_gen_brcondi_i32</name><argument_list pos:start="1953:40" pos:end="1957:42">(

                            <argument pos:start="1955:29" pos:end="1955:63"><expr pos:start="1955:29" pos:end="1955:63"><ternary pos:start="1955:29" pos:end="1955:63"><condition pos:start="1955:29" pos:end="1955:37"><expr pos:start="1955:29" pos:end="1955:35"><name pos:start="1955:29" pos:end="1955:31">OP2</name> <operator pos:start="1955:33" pos:end="1955:33">&amp;</operator> <literal type="number" pos:start="1955:35" pos:end="1955:35">1</literal></expr> ?</condition><then pos:start="1955:39" pos:end="1955:49"> <expr pos:start="1955:39" pos:end="1955:49"><name pos:start="1955:39" pos:end="1955:49">TCG_COND_EQ</name></expr> </then><else pos:start="1955:51" pos:end="1955:63">: <expr pos:start="1955:53" pos:end="1955:63"><name pos:start="1955:53" pos:end="1955:63">TCG_COND_NE</name></expr></else></ternary></expr></argument>,

                            <argument pos:start="1957:29" pos:end="1957:31"><expr pos:start="1957:29" pos:end="1957:31"><name pos:start="1957:29" pos:end="1957:31">tmp</name></expr></argument>, <argument pos:start="1957:34" pos:end="1957:34"><expr pos:start="1957:34" pos:end="1957:34"><literal type="number" pos:start="1957:34" pos:end="1957:34">0</literal></expr></argument>, <argument pos:start="1957:37" pos:end="1957:41"><expr pos:start="1957:37" pos:end="1957:41"><name pos:start="1957:37" pos:end="1957:41">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1959:21" pos:end="1959:64"><expr pos:start="1959:21" pos:end="1959:63"><call pos:start="1959:21" pos:end="1959:63"><name pos:start="1959:21" pos:end="1959:35">tcg_gen_mov_i32</name><argument_list pos:start="1959:36" pos:end="1959:63">(<argument pos:start="1959:37" pos:end="1959:48"><expr pos:start="1959:37" pos:end="1959:48"><name pos:start="1959:37" pos:end="1959:48"><name pos:start="1959:37" pos:end="1959:41">cpu_R</name><index pos:start="1959:42" pos:end="1959:48">[<expr pos:start="1959:43" pos:end="1959:47"><name pos:start="1959:43" pos:end="1959:47">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="1959:51" pos:end="1959:62"><expr pos:start="1959:51" pos:end="1959:62"><name pos:start="1959:51" pos:end="1959:62"><name pos:start="1959:51" pos:end="1959:55">cpu_R</name><index pos:start="1959:56" pos:end="1959:62">[<expr pos:start="1959:57" pos:end="1959:61"><name pos:start="1959:57" pos:end="1959:61">RRR_S</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1961:21" pos:end="1961:41"><expr pos:start="1961:21" pos:end="1961:40"><call pos:start="1961:21" pos:end="1961:40"><name pos:start="1961:21" pos:end="1961:33">gen_set_label</name><argument_list pos:start="1961:34" pos:end="1961:40">(<argument pos:start="1961:35" pos:end="1961:39"><expr pos:start="1961:35" pos:end="1961:39"><name pos:start="1961:35" pos:end="1961:39">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1963:21" pos:end="1963:39"><expr pos:start="1963:21" pos:end="1963:38"><call pos:start="1963:21" pos:end="1963:38"><name pos:start="1963:21" pos:end="1963:33">tcg_temp_free</name><argument_list pos:start="1963:34" pos:end="1963:38">(<argument pos:start="1963:35" pos:end="1963:37"><expr pos:start="1963:35" pos:end="1963:37"><name pos:start="1963:35" pos:end="1963:37">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block>

                <break pos:start="1967:17" pos:end="1967:22">break;</break>



            <case pos:start="1971:13" pos:end="1971:20">case <expr pos:start="1971:18" pos:end="1971:19"><literal type="number" pos:start="1971:18" pos:end="1971:19">14</literal></expr>:</case> <comment type="block" pos:start="1971:22" pos:end="1971:28">/*RUR*/</comment>

                <expr_stmt pos:start="1973:17" pos:end="1973:45"><expr pos:start="1973:17" pos:end="1973:44"><call pos:start="1973:17" pos:end="1973:44"><name pos:start="1973:17" pos:end="1973:33">gen_window_check1</name><argument_list pos:start="1973:34" pos:end="1973:44">(<argument pos:start="1973:35" pos:end="1973:36"><expr pos:start="1973:35" pos:end="1973:36"><name pos:start="1973:35" pos:end="1973:36">dc</name></expr></argument>, <argument pos:start="1973:39" pos:end="1973:43"><expr pos:start="1973:39" pos:end="1973:43"><name pos:start="1973:39" pos:end="1973:43">RRR_R</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <block pos:start="1975:17" pos:end="1991:17">{<block_content pos:start="1977:21" pos:end="1989:21">

                    <decl_stmt pos:start="1977:21" pos:end="1977:50"><decl pos:start="1977:21" pos:end="1977:49"><type pos:start="1977:21" pos:end="1977:23"><name pos:start="1977:21" pos:end="1977:23">int</name></type> <name pos:start="1977:25" pos:end="1977:26">st</name> <init pos:start="1977:28" pos:end="1977:49">= <expr pos:start="1977:30" pos:end="1977:49"><operator pos:start="1977:30" pos:end="1977:30">(</operator><name pos:start="1977:31" pos:end="1977:35">RRR_S</name> <operator pos:start="1977:37" pos:end="1977:38">&lt;&lt;</operator> <literal type="number" pos:start="1977:40" pos:end="1977:40">4</literal><operator pos:start="1977:41" pos:end="1977:41">)</operator> <operator pos:start="1977:43" pos:end="1977:43">+</operator> <name pos:start="1977:45" pos:end="1977:49">RRR_T</name></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="1979:21" pos:end="1989:21"><if pos:start="1979:21" pos:end="1983:21">if <condition pos:start="1979:24" pos:end="1979:38">(<expr pos:start="1979:25" pos:end="1979:37"><name pos:start="1979:25" pos:end="1979:37"><name pos:start="1979:25" pos:end="1979:33">uregnames</name><index pos:start="1979:34" pos:end="1979:37">[<expr pos:start="1979:35" pos:end="1979:36"><name pos:start="1979:35" pos:end="1979:36">st</name></expr>]</index></name></expr>)</condition> <block pos:start="1979:40" pos:end="1983:21">{<block_content pos:start="1981:25" pos:end="1981:66">

                        <expr_stmt pos:start="1981:25" pos:end="1981:66"><expr pos:start="1981:25" pos:end="1981:65"><call pos:start="1981:25" pos:end="1981:65"><name pos:start="1981:25" pos:end="1981:39">tcg_gen_mov_i32</name><argument_list pos:start="1981:40" pos:end="1981:65">(<argument pos:start="1981:41" pos:end="1981:52"><expr pos:start="1981:41" pos:end="1981:52"><name pos:start="1981:41" pos:end="1981:52"><name pos:start="1981:41" pos:end="1981:45">cpu_R</name><index pos:start="1981:46" pos:end="1981:52">[<expr pos:start="1981:47" pos:end="1981:51"><name pos:start="1981:47" pos:end="1981:51">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="1981:55" pos:end="1981:64"><expr pos:start="1981:55" pos:end="1981:64"><name pos:start="1981:55" pos:end="1981:64"><name pos:start="1981:55" pos:end="1981:60">cpu_UR</name><index pos:start="1981:61" pos:end="1981:64">[<expr pos:start="1981:62" pos:end="1981:63"><name pos:start="1981:62" pos:end="1981:63">st</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="1983:23" pos:end="1989:21">else <block pos:start="1983:28" pos:end="1989:21">{<block_content pos:start="1985:25" pos:end="1987:30">

                        <expr_stmt pos:start="1985:25" pos:end="1985:65"><expr pos:start="1985:25" pos:end="1985:64"><call pos:start="1985:25" pos:end="1985:64"><name pos:start="1985:25" pos:end="1985:32">qemu_log</name><argument_list pos:start="1985:33" pos:end="1985:64">(<argument pos:start="1985:34" pos:end="1985:59"><expr pos:start="1985:34" pos:end="1985:59"><literal type="string" pos:start="1985:34" pos:end="1985:59">"RUR %d not implemented, "</literal></expr></argument>, <argument pos:start="1985:62" pos:end="1985:63"><expr pos:start="1985:62" pos:end="1985:63"><name pos:start="1985:62" pos:end="1985:63">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1987:25" pos:end="1987:30"><expr pos:start="1987:25" pos:end="1987:29"><call pos:start="1987:25" pos:end="1987:29"><name pos:start="1987:25" pos:end="1987:27">TBD</name><argument_list pos:start="1987:28" pos:end="1987:29">()</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block>

                <break pos:start="1993:17" pos:end="1993:22">break;</break>



            <case pos:start="1997:13" pos:end="1997:20">case <expr pos:start="1997:18" pos:end="1997:19"><literal type="number" pos:start="1997:18" pos:end="1997:19">15</literal></expr>:</case> <comment type="block" pos:start="1997:22" pos:end="1997:28">/*WUR*/</comment>

                <expr_stmt pos:start="1999:17" pos:end="1999:45"><expr pos:start="1999:17" pos:end="1999:44"><call pos:start="1999:17" pos:end="1999:44"><name pos:start="1999:17" pos:end="1999:33">gen_window_check1</name><argument_list pos:start="1999:34" pos:end="1999:44">(<argument pos:start="1999:35" pos:end="1999:36"><expr pos:start="1999:35" pos:end="1999:36"><name pos:start="1999:35" pos:end="1999:36">dc</name></expr></argument>, <argument pos:start="1999:39" pos:end="1999:43"><expr pos:start="1999:39" pos:end="1999:43"><name pos:start="1999:39" pos:end="1999:43">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="2001:17" pos:end="2011:17"><if pos:start="2001:17" pos:end="2005:17">if <condition pos:start="2001:20" pos:end="2001:38">(<expr pos:start="2001:21" pos:end="2001:37"><name pos:start="2001:21" pos:end="2001:37"><name pos:start="2001:21" pos:end="2001:29">uregnames</name><index pos:start="2001:30" pos:end="2001:37">[<expr pos:start="2001:31" pos:end="2001:36"><name pos:start="2001:31" pos:end="2001:36">RSR_SR</name></expr>]</index></name></expr>)</condition> <block pos:start="2001:40" pos:end="2005:17">{<block_content pos:start="2003:21" pos:end="2003:50">

                    <expr_stmt pos:start="2003:21" pos:end="2003:50"><expr pos:start="2003:21" pos:end="2003:49"><call pos:start="2003:21" pos:end="2003:49"><name pos:start="2003:21" pos:end="2003:27">gen_wur</name><argument_list pos:start="2003:28" pos:end="2003:49">(<argument pos:start="2003:29" pos:end="2003:34"><expr pos:start="2003:29" pos:end="2003:34"><name pos:start="2003:29" pos:end="2003:34">RSR_SR</name></expr></argument>, <argument pos:start="2003:37" pos:end="2003:48"><expr pos:start="2003:37" pos:end="2003:48"><name pos:start="2003:37" pos:end="2003:48"><name pos:start="2003:37" pos:end="2003:41">cpu_R</name><index pos:start="2003:42" pos:end="2003:48">[<expr pos:start="2003:43" pos:end="2003:47"><name pos:start="2003:43" pos:end="2003:47">RRR_T</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="2005:19" pos:end="2011:17">else <block pos:start="2005:24" pos:end="2011:17">{<block_content pos:start="2007:21" pos:end="2009:26">

                    <expr_stmt pos:start="2007:21" pos:end="2007:65"><expr pos:start="2007:21" pos:end="2007:64"><call pos:start="2007:21" pos:end="2007:64"><name pos:start="2007:21" pos:end="2007:28">qemu_log</name><argument_list pos:start="2007:29" pos:end="2007:64">(<argument pos:start="2007:30" pos:end="2007:55"><expr pos:start="2007:30" pos:end="2007:55"><literal type="string" pos:start="2007:30" pos:end="2007:55">"WUR %d not implemented, "</literal></expr></argument>, <argument pos:start="2007:58" pos:end="2007:63"><expr pos:start="2007:58" pos:end="2007:63"><name pos:start="2007:58" pos:end="2007:63">RSR_SR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2009:21" pos:end="2009:26"><expr pos:start="2009:21" pos:end="2009:25"><call pos:start="2009:21" pos:end="2009:25"><name pos:start="2009:21" pos:end="2009:23">TBD</name><argument_list pos:start="2009:24" pos:end="2009:25">()</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <break pos:start="2013:17" pos:end="2013:22">break;</break>



            </block_content>}</block></switch>

            <break pos:start="2019:13" pos:end="2019:18">break;</break>



        <case pos:start="2023:9" pos:end="2023:15">case <expr pos:start="2023:14" pos:end="2023:14"><literal type="number" pos:start="2023:14" pos:end="2023:14">4</literal></expr>:</case> <comment type="block" pos:start="2023:17" pos:end="2023:25">/*EXTUI*/</comment>

        <case pos:start="2025:9" pos:end="2025:15">case <expr pos:start="2025:14" pos:end="2025:14"><literal type="number" pos:start="2025:14" pos:end="2025:14">5</literal></expr>:</case>

            <expr_stmt pos:start="2027:13" pos:end="2027:48"><expr pos:start="2027:13" pos:end="2027:47"><call pos:start="2027:13" pos:end="2027:47"><name pos:start="2027:13" pos:end="2027:29">gen_window_check2</name><argument_list pos:start="2027:30" pos:end="2027:47">(<argument pos:start="2027:31" pos:end="2027:32"><expr pos:start="2027:31" pos:end="2027:32"><name pos:start="2027:31" pos:end="2027:32">dc</name></expr></argument>, <argument pos:start="2027:35" pos:end="2027:39"><expr pos:start="2027:35" pos:end="2027:39"><name pos:start="2027:35" pos:end="2027:39">RRR_R</name></expr></argument>, <argument pos:start="2027:42" pos:end="2027:46"><expr pos:start="2027:42" pos:end="2027:46"><name pos:start="2027:42" pos:end="2027:46">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <block pos:start="2029:13" pos:end="2045:13">{<block_content pos:start="2031:17" pos:end="2043:35">

                <decl_stmt pos:start="2031:17" pos:end="2031:56"><decl pos:start="2031:17" pos:end="2031:55"><type pos:start="2031:17" pos:end="2031:19"><name pos:start="2031:17" pos:end="2031:19">int</name></type> <name pos:start="2031:21" pos:end="2031:28">shiftimm</name> <init pos:start="2031:30" pos:end="2031:55">= <expr pos:start="2031:32" pos:end="2031:55"><name pos:start="2031:32" pos:end="2031:36">RRR_S</name> <operator pos:start="2031:38" pos:end="2031:38">|</operator> <operator pos:start="2031:40" pos:end="2031:40">(</operator><operator pos:start="2031:41" pos:end="2031:41">(</operator><name pos:start="2031:42" pos:end="2031:44">OP1</name> <operator pos:start="2031:46" pos:end="2031:46">&amp;</operator> <literal type="number" pos:start="2031:48" pos:end="2031:48">1</literal><operator pos:start="2031:49" pos:end="2031:49">)</operator> <operator pos:start="2031:51" pos:end="2031:52">&lt;&lt;</operator> <literal type="number" pos:start="2031:54" pos:end="2031:54">4</literal><operator pos:start="2031:55" pos:end="2031:55">)</operator></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="2033:17" pos:end="2033:51"><decl pos:start="2033:17" pos:end="2033:50"><type pos:start="2033:17" pos:end="2033:19"><name pos:start="2033:17" pos:end="2033:19">int</name></type> <name pos:start="2033:21" pos:end="2033:27">maskimm</name> <init pos:start="2033:29" pos:end="2033:50">= <expr pos:start="2033:31" pos:end="2033:50"><operator pos:start="2033:31" pos:end="2033:31">(</operator><literal type="number" pos:start="2033:32" pos:end="2033:32">1</literal> <operator pos:start="2033:34" pos:end="2033:35">&lt;&lt;</operator> <operator pos:start="2033:37" pos:end="2033:37">(</operator><name pos:start="2033:38" pos:end="2033:40">OP2</name> <operator pos:start="2033:42" pos:end="2033:42">+</operator> <literal type="number" pos:start="2033:44" pos:end="2033:44">1</literal><operator pos:start="2033:45" pos:end="2033:45">)</operator><operator pos:start="2033:46" pos:end="2033:46">)</operator> <operator pos:start="2033:48" pos:end="2033:48">-</operator> <literal type="number" pos:start="2033:50" pos:end="2033:50">1</literal></expr></init></decl>;</decl_stmt>



                <decl_stmt pos:start="2037:17" pos:end="2037:50"><decl pos:start="2037:17" pos:end="2037:49"><type pos:start="2037:17" pos:end="2037:24"><name pos:start="2037:17" pos:end="2037:24">TCGv_i32</name></type> <name pos:start="2037:26" pos:end="2037:28">tmp</name> <init pos:start="2037:30" pos:end="2037:49">= <expr pos:start="2037:32" pos:end="2037:49"><call pos:start="2037:32" pos:end="2037:49"><name pos:start="2037:32" pos:end="2037:47">tcg_temp_new_i32</name><argument_list pos:start="2037:48" pos:end="2037:49">()</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="2039:17" pos:end="2039:62"><expr pos:start="2039:17" pos:end="2039:61"><call pos:start="2039:17" pos:end="2039:61"><name pos:start="2039:17" pos:end="2039:32">tcg_gen_shri_i32</name><argument_list pos:start="2039:33" pos:end="2039:61">(<argument pos:start="2039:34" pos:end="2039:36"><expr pos:start="2039:34" pos:end="2039:36"><name pos:start="2039:34" pos:end="2039:36">tmp</name></expr></argument>, <argument pos:start="2039:39" pos:end="2039:50"><expr pos:start="2039:39" pos:end="2039:50"><name pos:start="2039:39" pos:end="2039:50"><name pos:start="2039:39" pos:end="2039:43">cpu_R</name><index pos:start="2039:44" pos:end="2039:50">[<expr pos:start="2039:45" pos:end="2039:49"><name pos:start="2039:45" pos:end="2039:49">RRR_T</name></expr>]</index></name></expr></argument>, <argument pos:start="2039:53" pos:end="2039:60"><expr pos:start="2039:53" pos:end="2039:60"><name pos:start="2039:53" pos:end="2039:60">shiftimm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2041:17" pos:end="2041:61"><expr pos:start="2041:17" pos:end="2041:60"><call pos:start="2041:17" pos:end="2041:60"><name pos:start="2041:17" pos:end="2041:32">tcg_gen_andi_i32</name><argument_list pos:start="2041:33" pos:end="2041:60">(<argument pos:start="2041:34" pos:end="2041:45"><expr pos:start="2041:34" pos:end="2041:45"><name pos:start="2041:34" pos:end="2041:45"><name pos:start="2041:34" pos:end="2041:38">cpu_R</name><index pos:start="2041:39" pos:end="2041:45">[<expr pos:start="2041:40" pos:end="2041:44"><name pos:start="2041:40" pos:end="2041:44">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="2041:48" pos:end="2041:50"><expr pos:start="2041:48" pos:end="2041:50"><name pos:start="2041:48" pos:end="2041:50">tmp</name></expr></argument>, <argument pos:start="2041:53" pos:end="2041:59"><expr pos:start="2041:53" pos:end="2041:59"><name pos:start="2041:53" pos:end="2041:59">maskimm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2043:17" pos:end="2043:35"><expr pos:start="2043:17" pos:end="2043:34"><call pos:start="2043:17" pos:end="2043:34"><name pos:start="2043:17" pos:end="2043:29">tcg_temp_free</name><argument_list pos:start="2043:30" pos:end="2043:34">(<argument pos:start="2043:31" pos:end="2043:33"><expr pos:start="2043:31" pos:end="2043:33"><name pos:start="2043:31" pos:end="2043:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>

            <break pos:start="2047:13" pos:end="2047:18">break;</break>



        <case pos:start="2051:9" pos:end="2051:15">case <expr pos:start="2051:14" pos:end="2051:14"><literal type="number" pos:start="2051:14" pos:end="2051:14">6</literal></expr>:</case> <comment type="block" pos:start="2051:17" pos:end="2051:25">/*CUST0*/</comment>

            <expr_stmt pos:start="2053:13" pos:end="2053:23"><expr pos:start="2053:13" pos:end="2053:22"><call pos:start="2053:13" pos:end="2053:22"><name pos:start="2053:13" pos:end="2053:20">RESERVED</name><argument_list pos:start="2053:21" pos:end="2053:22">()</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2055:13" pos:end="2055:18">break;</break>



        <case pos:start="2059:9" pos:end="2059:15">case <expr pos:start="2059:14" pos:end="2059:14"><literal type="number" pos:start="2059:14" pos:end="2059:14">7</literal></expr>:</case> <comment type="block" pos:start="2059:17" pos:end="2059:25">/*CUST1*/</comment>

            <expr_stmt pos:start="2061:13" pos:end="2061:23"><expr pos:start="2061:13" pos:end="2061:22"><call pos:start="2061:13" pos:end="2061:22"><name pos:start="2061:13" pos:end="2061:20">RESERVED</name><argument_list pos:start="2061:21" pos:end="2061:22">()</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2063:13" pos:end="2063:18">break;</break>



        <case pos:start="2067:9" pos:end="2067:15">case <expr pos:start="2067:14" pos:end="2067:14"><literal type="number" pos:start="2067:14" pos:end="2067:14">8</literal></expr>:</case> <comment type="block" pos:start="2067:17" pos:end="2067:25">/*LSCXp*/</comment>

            <switch pos:start="2069:13" pos:end="2123:13">switch <condition pos:start="2069:20" pos:end="2069:24">(<expr pos:start="2069:21" pos:end="2069:23"><name pos:start="2069:21" pos:end="2069:23">OP2</name></expr>)</condition> <block pos:start="2069:26" pos:end="2123:13">{<block_content pos:start="2071:13" pos:end="2121:22">

            <case pos:start="2071:13" pos:end="2071:19">case <expr pos:start="2071:18" pos:end="2071:18"><literal type="number" pos:start="2071:18" pos:end="2071:18">0</literal></expr>:</case> <comment type="block" pos:start="2071:21" pos:end="2071:28">/*LSXf*/</comment>

            <case pos:start="2073:13" pos:end="2073:19">case <expr pos:start="2073:18" pos:end="2073:18"><literal type="number" pos:start="2073:18" pos:end="2073:18">1</literal></expr>:</case> <comment type="block" pos:start="2073:21" pos:end="2073:29">/*LSXUf*/</comment>

            <case pos:start="2075:13" pos:end="2075:19">case <expr pos:start="2075:18" pos:end="2075:18"><literal type="number" pos:start="2075:18" pos:end="2075:18">4</literal></expr>:</case> <comment type="block" pos:start="2075:21" pos:end="2075:28">/*SSXf*/</comment>

            <case pos:start="2077:13" pos:end="2077:19">case <expr pos:start="2077:18" pos:end="2077:18"><literal type="number" pos:start="2077:18" pos:end="2077:18">5</literal></expr>:</case> <comment type="block" pos:start="2077:21" pos:end="2077:29">/*SSXUf*/</comment>

                <expr_stmt pos:start="2079:17" pos:end="2079:57"><expr pos:start="2079:17" pos:end="2079:56"><call pos:start="2079:17" pos:end="2079:56"><name pos:start="2079:17" pos:end="2079:26">HAS_OPTION</name><argument_list pos:start="2079:27" pos:end="2079:56">(<argument pos:start="2079:28" pos:end="2079:55"><expr pos:start="2079:28" pos:end="2079:55"><name pos:start="2079:28" pos:end="2079:55">XTENSA_OPTION_FP_COPROCESSOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2081:17" pos:end="2081:52"><expr pos:start="2081:17" pos:end="2081:51"><call pos:start="2081:17" pos:end="2081:51"><name pos:start="2081:17" pos:end="2081:33">gen_window_check2</name><argument_list pos:start="2081:34" pos:end="2081:51">(<argument pos:start="2081:35" pos:end="2081:36"><expr pos:start="2081:35" pos:end="2081:36"><name pos:start="2081:35" pos:end="2081:36">dc</name></expr></argument>, <argument pos:start="2081:39" pos:end="2081:43"><expr pos:start="2081:39" pos:end="2081:43"><name pos:start="2081:39" pos:end="2081:43">RRR_S</name></expr></argument>, <argument pos:start="2081:46" pos:end="2081:50"><expr pos:start="2081:46" pos:end="2081:50"><name pos:start="2081:46" pos:end="2081:50">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2083:17" pos:end="2083:42"><expr pos:start="2083:17" pos:end="2083:41"><call pos:start="2083:17" pos:end="2083:41"><name pos:start="2083:17" pos:end="2083:34">gen_check_cpenable</name><argument_list pos:start="2083:35" pos:end="2083:41">(<argument pos:start="2083:36" pos:end="2083:37"><expr pos:start="2083:36" pos:end="2083:37"><name pos:start="2083:36" pos:end="2083:37">dc</name></expr></argument>, <argument pos:start="2083:40" pos:end="2083:40"><expr pos:start="2083:40" pos:end="2083:40"><literal type="number" pos:start="2083:40" pos:end="2083:40">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <block pos:start="2085:17" pos:end="2111:17">{<block_content pos:start="2087:21" pos:end="2109:40">

                    <decl_stmt pos:start="2087:21" pos:end="2087:55"><decl pos:start="2087:21" pos:end="2087:54"><type pos:start="2087:21" pos:end="2087:28"><name pos:start="2087:21" pos:end="2087:28">TCGv_i32</name></type> <name pos:start="2087:30" pos:end="2087:33">addr</name> <init pos:start="2087:35" pos:end="2087:54">= <expr pos:start="2087:37" pos:end="2087:54"><call pos:start="2087:37" pos:end="2087:54"><name pos:start="2087:37" pos:end="2087:52">tcg_temp_new_i32</name><argument_list pos:start="2087:53" pos:end="2087:54">()</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="2089:21" pos:end="2089:70"><expr pos:start="2089:21" pos:end="2089:69"><call pos:start="2089:21" pos:end="2089:69"><name pos:start="2089:21" pos:end="2089:35">tcg_gen_add_i32</name><argument_list pos:start="2089:36" pos:end="2089:69">(<argument pos:start="2089:37" pos:end="2089:40"><expr pos:start="2089:37" pos:end="2089:40"><name pos:start="2089:37" pos:end="2089:40">addr</name></expr></argument>, <argument pos:start="2089:43" pos:end="2089:54"><expr pos:start="2089:43" pos:end="2089:54"><name pos:start="2089:43" pos:end="2089:54"><name pos:start="2089:43" pos:end="2089:47">cpu_R</name><index pos:start="2089:48" pos:end="2089:54">[<expr pos:start="2089:49" pos:end="2089:53"><name pos:start="2089:49" pos:end="2089:53">RRR_S</name></expr>]</index></name></expr></argument>, <argument pos:start="2089:57" pos:end="2089:68"><expr pos:start="2089:57" pos:end="2089:68"><name pos:start="2089:57" pos:end="2089:68"><name pos:start="2089:57" pos:end="2089:61">cpu_R</name><index pos:start="2089:62" pos:end="2089:68">[<expr pos:start="2089:63" pos:end="2089:67"><name pos:start="2089:63" pos:end="2089:67">RRR_T</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2091:21" pos:end="2091:65"><expr pos:start="2091:21" pos:end="2091:64"><call pos:start="2091:21" pos:end="2091:64"><name pos:start="2091:21" pos:end="2091:44">gen_load_store_alignment</name><argument_list pos:start="2091:45" pos:end="2091:64">(<argument pos:start="2091:46" pos:end="2091:47"><expr pos:start="2091:46" pos:end="2091:47"><name pos:start="2091:46" pos:end="2091:47">dc</name></expr></argument>, <argument pos:start="2091:50" pos:end="2091:50"><expr pos:start="2091:50" pos:end="2091:50"><literal type="number" pos:start="2091:50" pos:end="2091:50">2</literal></expr></argument>, <argument pos:start="2091:53" pos:end="2091:56"><expr pos:start="2091:53" pos:end="2091:56"><name pos:start="2091:53" pos:end="2091:56">addr</name></expr></argument>, <argument pos:start="2091:59" pos:end="2091:63"><expr pos:start="2091:59" pos:end="2091:63"><name pos:start="2091:59" pos:end="2091:63">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="2093:21" pos:end="2101:21"><if pos:start="2093:21" pos:end="2097:21">if <condition pos:start="2093:24" pos:end="2093:34">(<expr pos:start="2093:25" pos:end="2093:33"><name pos:start="2093:25" pos:end="2093:27">OP2</name> <operator pos:start="2093:29" pos:end="2093:29">&amp;</operator> <literal type="number" pos:start="2093:31" pos:end="2093:33">0x4</literal></expr>)</condition> <block pos:start="2093:36" pos:end="2097:21">{<block_content pos:start="2095:25" pos:end="2095:74">

                        <expr_stmt pos:start="2095:25" pos:end="2095:74"><expr pos:start="2095:25" pos:end="2095:73"><call pos:start="2095:25" pos:end="2095:73"><name pos:start="2095:25" pos:end="2095:41">tcg_gen_qemu_st32</name><argument_list pos:start="2095:42" pos:end="2095:73">(<argument pos:start="2095:43" pos:end="2095:55"><expr pos:start="2095:43" pos:end="2095:55"><name pos:start="2095:43" pos:end="2095:55"><name pos:start="2095:43" pos:end="2095:48">cpu_FR</name><index pos:start="2095:49" pos:end="2095:55">[<expr pos:start="2095:50" pos:end="2095:54"><name pos:start="2095:50" pos:end="2095:54">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="2095:58" pos:end="2095:61"><expr pos:start="2095:58" pos:end="2095:61"><name pos:start="2095:58" pos:end="2095:61">addr</name></expr></argument>, <argument pos:start="2095:64" pos:end="2095:72"><expr pos:start="2095:64" pos:end="2095:72"><name pos:start="2095:64" pos:end="2095:72"><name pos:start="2095:64" pos:end="2095:65">dc</name><operator pos:start="2095:66" pos:end="2095:67">-&gt;</operator><name pos:start="2095:68" pos:end="2095:72">cring</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="2097:23" pos:end="2101:21">else <block pos:start="2097:28" pos:end="2101:21">{<block_content pos:start="2099:25" pos:end="2099:75">

                        <expr_stmt pos:start="2099:25" pos:end="2099:75"><expr pos:start="2099:25" pos:end="2099:74"><call pos:start="2099:25" pos:end="2099:74"><name pos:start="2099:25" pos:end="2099:42">tcg_gen_qemu_ld32u</name><argument_list pos:start="2099:43" pos:end="2099:74">(<argument pos:start="2099:44" pos:end="2099:56"><expr pos:start="2099:44" pos:end="2099:56"><name pos:start="2099:44" pos:end="2099:56"><name pos:start="2099:44" pos:end="2099:49">cpu_FR</name><index pos:start="2099:50" pos:end="2099:56">[<expr pos:start="2099:51" pos:end="2099:55"><name pos:start="2099:51" pos:end="2099:55">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="2099:59" pos:end="2099:62"><expr pos:start="2099:59" pos:end="2099:62"><name pos:start="2099:59" pos:end="2099:62">addr</name></expr></argument>, <argument pos:start="2099:65" pos:end="2099:73"><expr pos:start="2099:65" pos:end="2099:73"><name pos:start="2099:65" pos:end="2099:73"><name pos:start="2099:65" pos:end="2099:66">dc</name><operator pos:start="2099:67" pos:end="2099:68">-&gt;</operator><name pos:start="2099:69" pos:end="2099:73">cring</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <if_stmt pos:start="2103:21" pos:end="2107:21"><if pos:start="2103:21" pos:end="2107:21">if <condition pos:start="2103:24" pos:end="2103:34">(<expr pos:start="2103:25" pos:end="2103:33"><name pos:start="2103:25" pos:end="2103:27">OP2</name> <operator pos:start="2103:29" pos:end="2103:29">&amp;</operator> <literal type="number" pos:start="2103:31" pos:end="2103:33">0x1</literal></expr>)</condition> <block pos:start="2103:36" pos:end="2107:21">{<block_content pos:start="2105:25" pos:end="2105:60">

                        <expr_stmt pos:start="2105:25" pos:end="2105:60"><expr pos:start="2105:25" pos:end="2105:59"><call pos:start="2105:25" pos:end="2105:59"><name pos:start="2105:25" pos:end="2105:39">tcg_gen_mov_i32</name><argument_list pos:start="2105:40" pos:end="2105:59">(<argument pos:start="2105:41" pos:end="2105:52"><expr pos:start="2105:41" pos:end="2105:52"><name pos:start="2105:41" pos:end="2105:52"><name pos:start="2105:41" pos:end="2105:45">cpu_R</name><index pos:start="2105:46" pos:end="2105:52">[<expr pos:start="2105:47" pos:end="2105:51"><name pos:start="2105:47" pos:end="2105:51">RRR_S</name></expr>]</index></name></expr></argument>, <argument pos:start="2105:55" pos:end="2105:58"><expr pos:start="2105:55" pos:end="2105:58"><name pos:start="2105:55" pos:end="2105:58">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="2109:21" pos:end="2109:40"><expr pos:start="2109:21" pos:end="2109:39"><call pos:start="2109:21" pos:end="2109:39"><name pos:start="2109:21" pos:end="2109:33">tcg_temp_free</name><argument_list pos:start="2109:34" pos:end="2109:39">(<argument pos:start="2109:35" pos:end="2109:38"><expr pos:start="2109:35" pos:end="2109:38"><name pos:start="2109:35" pos:end="2109:38">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block>

                <break pos:start="2113:17" pos:end="2113:22">break;</break>



            <default pos:start="2117:13" pos:end="2117:20">default:</default> <comment type="block" pos:start="2117:22" pos:end="2117:33">/*reserved*/</comment>

                <expr_stmt pos:start="2119:17" pos:end="2119:27"><expr pos:start="2119:17" pos:end="2119:26"><call pos:start="2119:17" pos:end="2119:26"><name pos:start="2119:17" pos:end="2119:24">RESERVED</name><argument_list pos:start="2119:25" pos:end="2119:26">()</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2121:17" pos:end="2121:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="2125:13" pos:end="2125:18">break;</break>



        <case pos:start="2129:9" pos:end="2129:15">case <expr pos:start="2129:14" pos:end="2129:14"><literal type="number" pos:start="2129:14" pos:end="2129:14">9</literal></expr>:</case> <comment type="block" pos:start="2129:17" pos:end="2129:24">/*LSC4*/</comment>

            <expr_stmt pos:start="2131:13" pos:end="2131:48"><expr pos:start="2131:13" pos:end="2131:47"><call pos:start="2131:13" pos:end="2131:47"><name pos:start="2131:13" pos:end="2131:29">gen_window_check2</name><argument_list pos:start="2131:30" pos:end="2131:47">(<argument pos:start="2131:31" pos:end="2131:32"><expr pos:start="2131:31" pos:end="2131:32"><name pos:start="2131:31" pos:end="2131:32">dc</name></expr></argument>, <argument pos:start="2131:35" pos:end="2131:39"><expr pos:start="2131:35" pos:end="2131:39"><name pos:start="2131:35" pos:end="2131:39">RRR_S</name></expr></argument>, <argument pos:start="2131:42" pos:end="2131:46"><expr pos:start="2131:42" pos:end="2131:46"><name pos:start="2131:42" pos:end="2131:46">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="2133:13" pos:end="2189:13">switch <condition pos:start="2133:20" pos:end="2133:24">(<expr pos:start="2133:21" pos:end="2133:23"><name pos:start="2133:21" pos:end="2133:23">OP2</name></expr>)</condition> <block pos:start="2133:26" pos:end="2189:13">{<block_content pos:start="2135:13" pos:end="2187:22">

            <case pos:start="2135:13" pos:end="2135:19">case <expr pos:start="2135:18" pos:end="2135:18"><literal type="number" pos:start="2135:18" pos:end="2135:18">0</literal></expr>:</case> <comment type="block" pos:start="2135:21" pos:end="2135:28">/*L32E*/</comment>

                <expr_stmt pos:start="2137:17" pos:end="2137:60"><expr pos:start="2137:17" pos:end="2137:59"><call pos:start="2137:17" pos:end="2137:59"><name pos:start="2137:17" pos:end="2137:26">HAS_OPTION</name><argument_list pos:start="2137:27" pos:end="2137:59">(<argument pos:start="2137:28" pos:end="2137:58"><expr pos:start="2137:28" pos:end="2137:58"><name pos:start="2137:28" pos:end="2137:58">XTENSA_OPTION_WINDOWED_REGISTER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2139:17" pos:end="2139:40"><expr pos:start="2139:17" pos:end="2139:39"><call pos:start="2139:17" pos:end="2139:39"><name pos:start="2139:17" pos:end="2139:35">gen_check_privilege</name><argument_list pos:start="2139:36" pos:end="2139:39">(<argument pos:start="2139:37" pos:end="2139:38"><expr pos:start="2139:37" pos:end="2139:38"><name pos:start="2139:37" pos:end="2139:38">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <block pos:start="2141:17" pos:end="2153:17">{<block_content pos:start="2143:21" pos:end="2151:40">

                    <decl_stmt pos:start="2143:21" pos:end="2143:55"><decl pos:start="2143:21" pos:end="2143:54"><type pos:start="2143:21" pos:end="2143:28"><name pos:start="2143:21" pos:end="2143:28">TCGv_i32</name></type> <name pos:start="2143:30" pos:end="2143:33">addr</name> <init pos:start="2143:35" pos:end="2143:54">= <expr pos:start="2143:37" pos:end="2143:54"><call pos:start="2143:37" pos:end="2143:54"><name pos:start="2143:37" pos:end="2143:52">tcg_temp_new_i32</name><argument_list pos:start="2143:53" pos:end="2143:54">()</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="2145:21" pos:end="2147:57"><expr pos:start="2145:21" pos:end="2147:56"><call pos:start="2145:21" pos:end="2147:56"><name pos:start="2145:21" pos:end="2145:36">tcg_gen_addi_i32</name><argument_list pos:start="2145:37" pos:end="2147:56">(<argument pos:start="2145:38" pos:end="2145:41"><expr pos:start="2145:38" pos:end="2145:41"><name pos:start="2145:38" pos:end="2145:41">addr</name></expr></argument>, <argument pos:start="2145:44" pos:end="2145:55"><expr pos:start="2145:44" pos:end="2145:55"><name pos:start="2145:44" pos:end="2145:55"><name pos:start="2145:44" pos:end="2145:48">cpu_R</name><index pos:start="2145:49" pos:end="2145:55">[<expr pos:start="2145:50" pos:end="2145:54"><name pos:start="2145:50" pos:end="2145:54">RRR_S</name></expr>]</index></name></expr></argument>,

                            <argument pos:start="2147:29" pos:end="2147:55"><expr pos:start="2147:29" pos:end="2147:55"><operator pos:start="2147:29" pos:end="2147:29">(</operator><literal type="number" pos:start="2147:30" pos:end="2147:39">0xffffffc0</literal> <operator pos:start="2147:41" pos:end="2147:41">|</operator> <operator pos:start="2147:43" pos:end="2147:43">(</operator><name pos:start="2147:44" pos:end="2147:48">RRR_R</name> <operator pos:start="2147:50" pos:end="2147:51">&lt;&lt;</operator> <literal type="number" pos:start="2147:53" pos:end="2147:53">2</literal><operator pos:start="2147:54" pos:end="2147:54">)</operator><operator pos:start="2147:55" pos:end="2147:55">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2149:21" pos:end="2149:69"><expr pos:start="2149:21" pos:end="2149:68"><call pos:start="2149:21" pos:end="2149:68"><name pos:start="2149:21" pos:end="2149:38">tcg_gen_qemu_ld32u</name><argument_list pos:start="2149:39" pos:end="2149:68">(<argument pos:start="2149:40" pos:end="2149:51"><expr pos:start="2149:40" pos:end="2149:51"><name pos:start="2149:40" pos:end="2149:51"><name pos:start="2149:40" pos:end="2149:44">cpu_R</name><index pos:start="2149:45" pos:end="2149:51">[<expr pos:start="2149:46" pos:end="2149:50"><name pos:start="2149:46" pos:end="2149:50">RRR_T</name></expr>]</index></name></expr></argument>, <argument pos:start="2149:54" pos:end="2149:57"><expr pos:start="2149:54" pos:end="2149:57"><name pos:start="2149:54" pos:end="2149:57">addr</name></expr></argument>, <argument pos:start="2149:60" pos:end="2149:67"><expr pos:start="2149:60" pos:end="2149:67"><name pos:start="2149:60" pos:end="2149:67"><name pos:start="2149:60" pos:end="2149:61">dc</name><operator pos:start="2149:62" pos:end="2149:63">-&gt;</operator><name pos:start="2149:64" pos:end="2149:67">ring</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2151:21" pos:end="2151:40"><expr pos:start="2151:21" pos:end="2151:39"><call pos:start="2151:21" pos:end="2151:39"><name pos:start="2151:21" pos:end="2151:33">tcg_temp_free</name><argument_list pos:start="2151:34" pos:end="2151:39">(<argument pos:start="2151:35" pos:end="2151:38"><expr pos:start="2151:35" pos:end="2151:38"><name pos:start="2151:35" pos:end="2151:38">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block>

                <break pos:start="2155:17" pos:end="2155:22">break;</break>



            <case pos:start="2159:13" pos:end="2159:19">case <expr pos:start="2159:18" pos:end="2159:18"><literal type="number" pos:start="2159:18" pos:end="2159:18">4</literal></expr>:</case> <comment type="block" pos:start="2159:21" pos:end="2159:28">/*S32E*/</comment>

                <expr_stmt pos:start="2161:17" pos:end="2161:60"><expr pos:start="2161:17" pos:end="2161:59"><call pos:start="2161:17" pos:end="2161:59"><name pos:start="2161:17" pos:end="2161:26">HAS_OPTION</name><argument_list pos:start="2161:27" pos:end="2161:59">(<argument pos:start="2161:28" pos:end="2161:58"><expr pos:start="2161:28" pos:end="2161:58"><name pos:start="2161:28" pos:end="2161:58">XTENSA_OPTION_WINDOWED_REGISTER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2163:17" pos:end="2163:40"><expr pos:start="2163:17" pos:end="2163:39"><call pos:start="2163:17" pos:end="2163:39"><name pos:start="2163:17" pos:end="2163:35">gen_check_privilege</name><argument_list pos:start="2163:36" pos:end="2163:39">(<argument pos:start="2163:37" pos:end="2163:38"><expr pos:start="2163:37" pos:end="2163:38"><name pos:start="2163:37" pos:end="2163:38">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <block pos:start="2165:17" pos:end="2177:17">{<block_content pos:start="2167:21" pos:end="2175:40">

                    <decl_stmt pos:start="2167:21" pos:end="2167:55"><decl pos:start="2167:21" pos:end="2167:54"><type pos:start="2167:21" pos:end="2167:28"><name pos:start="2167:21" pos:end="2167:28">TCGv_i32</name></type> <name pos:start="2167:30" pos:end="2167:33">addr</name> <init pos:start="2167:35" pos:end="2167:54">= <expr pos:start="2167:37" pos:end="2167:54"><call pos:start="2167:37" pos:end="2167:54"><name pos:start="2167:37" pos:end="2167:52">tcg_temp_new_i32</name><argument_list pos:start="2167:53" pos:end="2167:54">()</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="2169:21" pos:end="2171:57"><expr pos:start="2169:21" pos:end="2171:56"><call pos:start="2169:21" pos:end="2171:56"><name pos:start="2169:21" pos:end="2169:36">tcg_gen_addi_i32</name><argument_list pos:start="2169:37" pos:end="2171:56">(<argument pos:start="2169:38" pos:end="2169:41"><expr pos:start="2169:38" pos:end="2169:41"><name pos:start="2169:38" pos:end="2169:41">addr</name></expr></argument>, <argument pos:start="2169:44" pos:end="2169:55"><expr pos:start="2169:44" pos:end="2169:55"><name pos:start="2169:44" pos:end="2169:55"><name pos:start="2169:44" pos:end="2169:48">cpu_R</name><index pos:start="2169:49" pos:end="2169:55">[<expr pos:start="2169:50" pos:end="2169:54"><name pos:start="2169:50" pos:end="2169:54">RRR_S</name></expr>]</index></name></expr></argument>,

                            <argument pos:start="2171:29" pos:end="2171:55"><expr pos:start="2171:29" pos:end="2171:55"><operator pos:start="2171:29" pos:end="2171:29">(</operator><literal type="number" pos:start="2171:30" pos:end="2171:39">0xffffffc0</literal> <operator pos:start="2171:41" pos:end="2171:41">|</operator> <operator pos:start="2171:43" pos:end="2171:43">(</operator><name pos:start="2171:44" pos:end="2171:48">RRR_R</name> <operator pos:start="2171:50" pos:end="2171:51">&lt;&lt;</operator> <literal type="number" pos:start="2171:53" pos:end="2171:53">2</literal><operator pos:start="2171:54" pos:end="2171:54">)</operator><operator pos:start="2171:55" pos:end="2171:55">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2173:21" pos:end="2173:68"><expr pos:start="2173:21" pos:end="2173:67"><call pos:start="2173:21" pos:end="2173:67"><name pos:start="2173:21" pos:end="2173:37">tcg_gen_qemu_st32</name><argument_list pos:start="2173:38" pos:end="2173:67">(<argument pos:start="2173:39" pos:end="2173:50"><expr pos:start="2173:39" pos:end="2173:50"><name pos:start="2173:39" pos:end="2173:50"><name pos:start="2173:39" pos:end="2173:43">cpu_R</name><index pos:start="2173:44" pos:end="2173:50">[<expr pos:start="2173:45" pos:end="2173:49"><name pos:start="2173:45" pos:end="2173:49">RRR_T</name></expr>]</index></name></expr></argument>, <argument pos:start="2173:53" pos:end="2173:56"><expr pos:start="2173:53" pos:end="2173:56"><name pos:start="2173:53" pos:end="2173:56">addr</name></expr></argument>, <argument pos:start="2173:59" pos:end="2173:66"><expr pos:start="2173:59" pos:end="2173:66"><name pos:start="2173:59" pos:end="2173:66"><name pos:start="2173:59" pos:end="2173:60">dc</name><operator pos:start="2173:61" pos:end="2173:62">-&gt;</operator><name pos:start="2173:63" pos:end="2173:66">ring</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2175:21" pos:end="2175:40"><expr pos:start="2175:21" pos:end="2175:39"><call pos:start="2175:21" pos:end="2175:39"><name pos:start="2175:21" pos:end="2175:33">tcg_temp_free</name><argument_list pos:start="2175:34" pos:end="2175:39">(<argument pos:start="2175:35" pos:end="2175:38"><expr pos:start="2175:35" pos:end="2175:38"><name pos:start="2175:35" pos:end="2175:38">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block>

                <break pos:start="2179:17" pos:end="2179:22">break;</break>



            <default pos:start="2183:13" pos:end="2183:20">default:</default>

                <expr_stmt pos:start="2185:17" pos:end="2185:27"><expr pos:start="2185:17" pos:end="2185:26"><call pos:start="2185:17" pos:end="2185:26"><name pos:start="2185:17" pos:end="2185:24">RESERVED</name><argument_list pos:start="2185:25" pos:end="2185:26">()</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2187:17" pos:end="2187:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="2191:13" pos:end="2191:18">break;</break>



        <case pos:start="2195:9" pos:end="2195:16">case <expr pos:start="2195:14" pos:end="2195:15"><literal type="number" pos:start="2195:14" pos:end="2195:15">10</literal></expr>:</case> <comment type="block" pos:start="2195:18" pos:end="2195:24">/*FP0*/</comment>

            <expr_stmt pos:start="2197:13" pos:end="2197:53"><expr pos:start="2197:13" pos:end="2197:52"><call pos:start="2197:13" pos:end="2197:52"><name pos:start="2197:13" pos:end="2197:22">HAS_OPTION</name><argument_list pos:start="2197:23" pos:end="2197:52">(<argument pos:start="2197:24" pos:end="2197:51"><expr pos:start="2197:24" pos:end="2197:51"><name pos:start="2197:24" pos:end="2197:51">XTENSA_OPTION_FP_COPROCESSOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="2199:13" pos:end="2437:13">switch <condition pos:start="2199:20" pos:end="2199:24">(<expr pos:start="2199:21" pos:end="2199:23"><name pos:start="2199:21" pos:end="2199:23">OP2</name></expr>)</condition> <block pos:start="2199:26" pos:end="2437:13">{<block_content pos:start="2201:13" pos:end="2435:22">

            <case pos:start="2201:13" pos:end="2201:19">case <expr pos:start="2201:18" pos:end="2201:18"><literal type="number" pos:start="2201:18" pos:end="2201:18">0</literal></expr>:</case> <comment type="block" pos:start="2201:21" pos:end="2201:30">/*ADD.Sf*/</comment>

                <expr_stmt pos:start="2203:17" pos:end="2203:42"><expr pos:start="2203:17" pos:end="2203:41"><call pos:start="2203:17" pos:end="2203:41"><name pos:start="2203:17" pos:end="2203:34">gen_check_cpenable</name><argument_list pos:start="2203:35" pos:end="2203:41">(<argument pos:start="2203:36" pos:end="2203:37"><expr pos:start="2203:36" pos:end="2203:37"><name pos:start="2203:36" pos:end="2203:37">dc</name></expr></argument>, <argument pos:start="2203:40" pos:end="2203:40"><expr pos:start="2203:40" pos:end="2203:40"><literal type="number" pos:start="2203:40" pos:end="2203:40">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2205:17" pos:end="2207:54"><expr pos:start="2205:17" pos:end="2207:53"><call pos:start="2205:17" pos:end="2207:53"><name pos:start="2205:17" pos:end="2205:32">gen_helper_add_s</name><argument_list pos:start="2205:33" pos:end="2207:53">(<argument pos:start="2205:34" pos:end="2205:46"><expr pos:start="2205:34" pos:end="2205:46"><name pos:start="2205:34" pos:end="2205:46"><name pos:start="2205:34" pos:end="2205:39">cpu_FR</name><index pos:start="2205:40" pos:end="2205:46">[<expr pos:start="2205:41" pos:end="2205:45"><name pos:start="2205:41" pos:end="2205:45">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="2205:49" pos:end="2205:55"><expr pos:start="2205:49" pos:end="2205:55"><name pos:start="2205:49" pos:end="2205:55">cpu_env</name></expr></argument>,

                        <argument pos:start="2207:25" pos:end="2207:37"><expr pos:start="2207:25" pos:end="2207:37"><name pos:start="2207:25" pos:end="2207:37"><name pos:start="2207:25" pos:end="2207:30">cpu_FR</name><index pos:start="2207:31" pos:end="2207:37">[<expr pos:start="2207:32" pos:end="2207:36"><name pos:start="2207:32" pos:end="2207:36">RRR_S</name></expr>]</index></name></expr></argument>, <argument pos:start="2207:40" pos:end="2207:52"><expr pos:start="2207:40" pos:end="2207:52"><name pos:start="2207:40" pos:end="2207:52"><name pos:start="2207:40" pos:end="2207:45">cpu_FR</name><index pos:start="2207:46" pos:end="2207:52">[<expr pos:start="2207:47" pos:end="2207:51"><name pos:start="2207:47" pos:end="2207:51">RRR_T</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2209:17" pos:end="2209:22">break;</break>



            <case pos:start="2213:13" pos:end="2213:19">case <expr pos:start="2213:18" pos:end="2213:18"><literal type="number" pos:start="2213:18" pos:end="2213:18">1</literal></expr>:</case> <comment type="block" pos:start="2213:21" pos:end="2213:30">/*SUB.Sf*/</comment>

                <expr_stmt pos:start="2215:17" pos:end="2215:42"><expr pos:start="2215:17" pos:end="2215:41"><call pos:start="2215:17" pos:end="2215:41"><name pos:start="2215:17" pos:end="2215:34">gen_check_cpenable</name><argument_list pos:start="2215:35" pos:end="2215:41">(<argument pos:start="2215:36" pos:end="2215:37"><expr pos:start="2215:36" pos:end="2215:37"><name pos:start="2215:36" pos:end="2215:37">dc</name></expr></argument>, <argument pos:start="2215:40" pos:end="2215:40"><expr pos:start="2215:40" pos:end="2215:40"><literal type="number" pos:start="2215:40" pos:end="2215:40">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2217:17" pos:end="2219:54"><expr pos:start="2217:17" pos:end="2219:53"><call pos:start="2217:17" pos:end="2219:53"><name pos:start="2217:17" pos:end="2217:32">gen_helper_sub_s</name><argument_list pos:start="2217:33" pos:end="2219:53">(<argument pos:start="2217:34" pos:end="2217:46"><expr pos:start="2217:34" pos:end="2217:46"><name pos:start="2217:34" pos:end="2217:46"><name pos:start="2217:34" pos:end="2217:39">cpu_FR</name><index pos:start="2217:40" pos:end="2217:46">[<expr pos:start="2217:41" pos:end="2217:45"><name pos:start="2217:41" pos:end="2217:45">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="2217:49" pos:end="2217:55"><expr pos:start="2217:49" pos:end="2217:55"><name pos:start="2217:49" pos:end="2217:55">cpu_env</name></expr></argument>,

                        <argument pos:start="2219:25" pos:end="2219:37"><expr pos:start="2219:25" pos:end="2219:37"><name pos:start="2219:25" pos:end="2219:37"><name pos:start="2219:25" pos:end="2219:30">cpu_FR</name><index pos:start="2219:31" pos:end="2219:37">[<expr pos:start="2219:32" pos:end="2219:36"><name pos:start="2219:32" pos:end="2219:36">RRR_S</name></expr>]</index></name></expr></argument>, <argument pos:start="2219:40" pos:end="2219:52"><expr pos:start="2219:40" pos:end="2219:52"><name pos:start="2219:40" pos:end="2219:52"><name pos:start="2219:40" pos:end="2219:45">cpu_FR</name><index pos:start="2219:46" pos:end="2219:52">[<expr pos:start="2219:47" pos:end="2219:51"><name pos:start="2219:47" pos:end="2219:51">RRR_T</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2221:17" pos:end="2221:22">break;</break>



            <case pos:start="2225:13" pos:end="2225:19">case <expr pos:start="2225:18" pos:end="2225:18"><literal type="number" pos:start="2225:18" pos:end="2225:18">2</literal></expr>:</case> <comment type="block" pos:start="2225:21" pos:end="2225:30">/*MUL.Sf*/</comment>

                <expr_stmt pos:start="2227:17" pos:end="2227:42"><expr pos:start="2227:17" pos:end="2227:41"><call pos:start="2227:17" pos:end="2227:41"><name pos:start="2227:17" pos:end="2227:34">gen_check_cpenable</name><argument_list pos:start="2227:35" pos:end="2227:41">(<argument pos:start="2227:36" pos:end="2227:37"><expr pos:start="2227:36" pos:end="2227:37"><name pos:start="2227:36" pos:end="2227:37">dc</name></expr></argument>, <argument pos:start="2227:40" pos:end="2227:40"><expr pos:start="2227:40" pos:end="2227:40"><literal type="number" pos:start="2227:40" pos:end="2227:40">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2229:17" pos:end="2231:54"><expr pos:start="2229:17" pos:end="2231:53"><call pos:start="2229:17" pos:end="2231:53"><name pos:start="2229:17" pos:end="2229:32">gen_helper_mul_s</name><argument_list pos:start="2229:33" pos:end="2231:53">(<argument pos:start="2229:34" pos:end="2229:46"><expr pos:start="2229:34" pos:end="2229:46"><name pos:start="2229:34" pos:end="2229:46"><name pos:start="2229:34" pos:end="2229:39">cpu_FR</name><index pos:start="2229:40" pos:end="2229:46">[<expr pos:start="2229:41" pos:end="2229:45"><name pos:start="2229:41" pos:end="2229:45">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="2229:49" pos:end="2229:55"><expr pos:start="2229:49" pos:end="2229:55"><name pos:start="2229:49" pos:end="2229:55">cpu_env</name></expr></argument>,

                        <argument pos:start="2231:25" pos:end="2231:37"><expr pos:start="2231:25" pos:end="2231:37"><name pos:start="2231:25" pos:end="2231:37"><name pos:start="2231:25" pos:end="2231:30">cpu_FR</name><index pos:start="2231:31" pos:end="2231:37">[<expr pos:start="2231:32" pos:end="2231:36"><name pos:start="2231:32" pos:end="2231:36">RRR_S</name></expr>]</index></name></expr></argument>, <argument pos:start="2231:40" pos:end="2231:52"><expr pos:start="2231:40" pos:end="2231:52"><name pos:start="2231:40" pos:end="2231:52"><name pos:start="2231:40" pos:end="2231:45">cpu_FR</name><index pos:start="2231:46" pos:end="2231:52">[<expr pos:start="2231:47" pos:end="2231:51"><name pos:start="2231:47" pos:end="2231:51">RRR_T</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2233:17" pos:end="2233:22">break;</break>



            <case pos:start="2237:13" pos:end="2237:19">case <expr pos:start="2237:18" pos:end="2237:18"><literal type="number" pos:start="2237:18" pos:end="2237:18">4</literal></expr>:</case> <comment type="block" pos:start="2237:21" pos:end="2237:31">/*MADD.Sf*/</comment>

                <expr_stmt pos:start="2239:17" pos:end="2239:42"><expr pos:start="2239:17" pos:end="2239:41"><call pos:start="2239:17" pos:end="2239:41"><name pos:start="2239:17" pos:end="2239:34">gen_check_cpenable</name><argument_list pos:start="2239:35" pos:end="2239:41">(<argument pos:start="2239:36" pos:end="2239:37"><expr pos:start="2239:36" pos:end="2239:37"><name pos:start="2239:36" pos:end="2239:37">dc</name></expr></argument>, <argument pos:start="2239:40" pos:end="2239:40"><expr pos:start="2239:40" pos:end="2239:40"><literal type="number" pos:start="2239:40" pos:end="2239:40">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2241:17" pos:end="2243:69"><expr pos:start="2241:17" pos:end="2243:68"><call pos:start="2241:17" pos:end="2243:68"><name pos:start="2241:17" pos:end="2241:33">gen_helper_madd_s</name><argument_list pos:start="2241:34" pos:end="2243:68">(<argument pos:start="2241:35" pos:end="2241:47"><expr pos:start="2241:35" pos:end="2241:47"><name pos:start="2241:35" pos:end="2241:47"><name pos:start="2241:35" pos:end="2241:40">cpu_FR</name><index pos:start="2241:41" pos:end="2241:47">[<expr pos:start="2241:42" pos:end="2241:46"><name pos:start="2241:42" pos:end="2241:46">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="2241:50" pos:end="2241:56"><expr pos:start="2241:50" pos:end="2241:56"><name pos:start="2241:50" pos:end="2241:56">cpu_env</name></expr></argument>,

                        <argument pos:start="2243:25" pos:end="2243:37"><expr pos:start="2243:25" pos:end="2243:37"><name pos:start="2243:25" pos:end="2243:37"><name pos:start="2243:25" pos:end="2243:30">cpu_FR</name><index pos:start="2243:31" pos:end="2243:37">[<expr pos:start="2243:32" pos:end="2243:36"><name pos:start="2243:32" pos:end="2243:36">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="2243:40" pos:end="2243:52"><expr pos:start="2243:40" pos:end="2243:52"><name pos:start="2243:40" pos:end="2243:52"><name pos:start="2243:40" pos:end="2243:45">cpu_FR</name><index pos:start="2243:46" pos:end="2243:52">[<expr pos:start="2243:47" pos:end="2243:51"><name pos:start="2243:47" pos:end="2243:51">RRR_S</name></expr>]</index></name></expr></argument>, <argument pos:start="2243:55" pos:end="2243:67"><expr pos:start="2243:55" pos:end="2243:67"><name pos:start="2243:55" pos:end="2243:67"><name pos:start="2243:55" pos:end="2243:60">cpu_FR</name><index pos:start="2243:61" pos:end="2243:67">[<expr pos:start="2243:62" pos:end="2243:66"><name pos:start="2243:62" pos:end="2243:66">RRR_T</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2245:17" pos:end="2245:22">break;</break>



            <case pos:start="2249:13" pos:end="2249:19">case <expr pos:start="2249:18" pos:end="2249:18"><literal type="number" pos:start="2249:18" pos:end="2249:18">5</literal></expr>:</case> <comment type="block" pos:start="2249:21" pos:end="2249:31">/*MSUB.Sf*/</comment>

                <expr_stmt pos:start="2251:17" pos:end="2251:42"><expr pos:start="2251:17" pos:end="2251:41"><call pos:start="2251:17" pos:end="2251:41"><name pos:start="2251:17" pos:end="2251:34">gen_check_cpenable</name><argument_list pos:start="2251:35" pos:end="2251:41">(<argument pos:start="2251:36" pos:end="2251:37"><expr pos:start="2251:36" pos:end="2251:37"><name pos:start="2251:36" pos:end="2251:37">dc</name></expr></argument>, <argument pos:start="2251:40" pos:end="2251:40"><expr pos:start="2251:40" pos:end="2251:40"><literal type="number" pos:start="2251:40" pos:end="2251:40">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2253:17" pos:end="2255:69"><expr pos:start="2253:17" pos:end="2255:68"><call pos:start="2253:17" pos:end="2255:68"><name pos:start="2253:17" pos:end="2253:33">gen_helper_msub_s</name><argument_list pos:start="2253:34" pos:end="2255:68">(<argument pos:start="2253:35" pos:end="2253:47"><expr pos:start="2253:35" pos:end="2253:47"><name pos:start="2253:35" pos:end="2253:47"><name pos:start="2253:35" pos:end="2253:40">cpu_FR</name><index pos:start="2253:41" pos:end="2253:47">[<expr pos:start="2253:42" pos:end="2253:46"><name pos:start="2253:42" pos:end="2253:46">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="2253:50" pos:end="2253:56"><expr pos:start="2253:50" pos:end="2253:56"><name pos:start="2253:50" pos:end="2253:56">cpu_env</name></expr></argument>,

                        <argument pos:start="2255:25" pos:end="2255:37"><expr pos:start="2255:25" pos:end="2255:37"><name pos:start="2255:25" pos:end="2255:37"><name pos:start="2255:25" pos:end="2255:30">cpu_FR</name><index pos:start="2255:31" pos:end="2255:37">[<expr pos:start="2255:32" pos:end="2255:36"><name pos:start="2255:32" pos:end="2255:36">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="2255:40" pos:end="2255:52"><expr pos:start="2255:40" pos:end="2255:52"><name pos:start="2255:40" pos:end="2255:52"><name pos:start="2255:40" pos:end="2255:45">cpu_FR</name><index pos:start="2255:46" pos:end="2255:52">[<expr pos:start="2255:47" pos:end="2255:51"><name pos:start="2255:47" pos:end="2255:51">RRR_S</name></expr>]</index></name></expr></argument>, <argument pos:start="2255:55" pos:end="2255:67"><expr pos:start="2255:55" pos:end="2255:67"><name pos:start="2255:55" pos:end="2255:67"><name pos:start="2255:55" pos:end="2255:60">cpu_FR</name><index pos:start="2255:61" pos:end="2255:67">[<expr pos:start="2255:62" pos:end="2255:66"><name pos:start="2255:62" pos:end="2255:66">RRR_T</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2257:17" pos:end="2257:22">break;</break>



            <case pos:start="2261:13" pos:end="2261:19">case <expr pos:start="2261:18" pos:end="2261:18"><literal type="number" pos:start="2261:18" pos:end="2261:18">8</literal></expr>:</case> <comment type="block" pos:start="2261:21" pos:end="2261:32">/*ROUND.Sf*/</comment>

            <case pos:start="2263:13" pos:end="2263:19">case <expr pos:start="2263:18" pos:end="2263:18"><literal type="number" pos:start="2263:18" pos:end="2263:18">9</literal></expr>:</case> <comment type="block" pos:start="2263:21" pos:end="2263:32">/*TRUNC.Sf*/</comment>

            <case pos:start="2265:13" pos:end="2265:20">case <expr pos:start="2265:18" pos:end="2265:19"><literal type="number" pos:start="2265:18" pos:end="2265:19">10</literal></expr>:</case> <comment type="block" pos:start="2265:22" pos:end="2265:33">/*FLOOR.Sf*/</comment>

            <case pos:start="2267:13" pos:end="2267:20">case <expr pos:start="2267:18" pos:end="2267:19"><literal type="number" pos:start="2267:18" pos:end="2267:19">11</literal></expr>:</case> <comment type="block" pos:start="2267:22" pos:end="2267:32">/*CEIL.Sf*/</comment>

            <case pos:start="2269:13" pos:end="2269:20">case <expr pos:start="2269:18" pos:end="2269:19"><literal type="number" pos:start="2269:18" pos:end="2269:19">14</literal></expr>:</case> <comment type="block" pos:start="2269:22" pos:end="2269:34">/*UTRUNC.Sf*/</comment>

                <expr_stmt pos:start="2271:17" pos:end="2271:45"><expr pos:start="2271:17" pos:end="2271:44"><call pos:start="2271:17" pos:end="2271:44"><name pos:start="2271:17" pos:end="2271:33">gen_window_check1</name><argument_list pos:start="2271:34" pos:end="2271:44">(<argument pos:start="2271:35" pos:end="2271:36"><expr pos:start="2271:35" pos:end="2271:36"><name pos:start="2271:35" pos:end="2271:36">dc</name></expr></argument>, <argument pos:start="2271:39" pos:end="2271:43"><expr pos:start="2271:39" pos:end="2271:43"><name pos:start="2271:39" pos:end="2271:43">RRR_R</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2273:17" pos:end="2273:42"><expr pos:start="2273:17" pos:end="2273:41"><call pos:start="2273:17" pos:end="2273:41"><name pos:start="2273:17" pos:end="2273:34">gen_check_cpenable</name><argument_list pos:start="2273:35" pos:end="2273:41">(<argument pos:start="2273:36" pos:end="2273:37"><expr pos:start="2273:36" pos:end="2273:37"><name pos:start="2273:36" pos:end="2273:37">dc</name></expr></argument>, <argument pos:start="2273:40" pos:end="2273:40"><expr pos:start="2273:40" pos:end="2273:40"><literal type="number" pos:start="2273:40" pos:end="2273:40">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <block pos:start="2275:17" pos:end="2319:17">{<block_content pos:start="2277:21" pos:end="2317:41">

                    <decl_stmt pos:start="2277:21" pos:end="2289:22"><decl pos:start="2277:21" pos:end="2289:21"><type pos:start="2277:21" pos:end="2277:41"><specifier pos:start="2277:21" pos:end="2277:26">static</specifier> <specifier pos:start="2277:28" pos:end="2277:32">const</specifier> <name pos:start="2277:34" pos:end="2277:41">unsigned</name></type> <name pos:start="2277:43" pos:end="2277:63"><name pos:start="2277:43" pos:end="2277:61">rounding_mode_const</name><index pos:start="2277:62" pos:end="2277:63">[]</index></name> <init pos:start="2277:65" pos:end="2289:21">= <expr pos:start="2277:67" pos:end="2289:21"><block pos:start="2277:67" pos:end="2289:21">{

                        <expr pos:start="2279:25" pos:end="2279:48"><name pos:start="2279:25" pos:end="2279:48">float_round_nearest_even</name></expr>,

                        <expr pos:start="2281:25" pos:end="2281:43"><name pos:start="2281:25" pos:end="2281:43">float_round_to_zero</name></expr>,

                        <expr pos:start="2283:25" pos:end="2283:40"><name pos:start="2283:25" pos:end="2283:40">float_round_down</name></expr>,

                        <expr pos:start="2285:25" pos:end="2285:38"><name pos:start="2285:25" pos:end="2285:38">float_round_up</name></expr>,

                        <expr pos:start="2287:25" pos:end="2287:49"><index pos:start="2287:25" pos:end="2287:27">[<expr pos:start="2287:26" pos:end="2287:26"><literal type="number" pos:start="2287:26" pos:end="2287:26">6</literal></expr>]</index> <operator pos:start="2287:29" pos:end="2287:29">=</operator> <name pos:start="2287:31" pos:end="2287:49">float_round_to_zero</name></expr>,

                    }</block></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="2291:21" pos:end="2293:58"><decl pos:start="2291:21" pos:end="2293:57"><type pos:start="2291:21" pos:end="2291:28"><name pos:start="2291:21" pos:end="2291:28">TCGv_i32</name></type> <name pos:start="2291:30" pos:end="2291:42">rounding_mode</name> <init pos:start="2291:44" pos:end="2293:57">= <expr pos:start="2291:46" pos:end="2293:57"><call pos:start="2291:46" pos:end="2293:57"><name pos:start="2291:46" pos:end="2291:58">tcg_const_i32</name><argument_list pos:start="2291:59" pos:end="2293:57">(

                            <argument pos:start="2293:29" pos:end="2293:56"><expr pos:start="2293:29" pos:end="2293:56"><name pos:start="2293:29" pos:end="2293:56"><name pos:start="2293:29" pos:end="2293:47">rounding_mode_const</name><index pos:start="2293:48" pos:end="2293:56">[<expr pos:start="2293:49" pos:end="2293:55"><name pos:start="2293:49" pos:end="2293:51">OP2</name> <operator pos:start="2293:53" pos:end="2293:53">&amp;</operator> <literal type="number" pos:start="2293:55" pos:end="2293:55">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="2295:21" pos:end="2295:58"><decl pos:start="2295:21" pos:end="2295:57"><type pos:start="2295:21" pos:end="2295:28"><name pos:start="2295:21" pos:end="2295:28">TCGv_i32</name></type> <name pos:start="2295:30" pos:end="2295:34">scale</name> <init pos:start="2295:36" pos:end="2295:57">= <expr pos:start="2295:38" pos:end="2295:57"><call pos:start="2295:38" pos:end="2295:57"><name pos:start="2295:38" pos:end="2295:50">tcg_const_i32</name><argument_list pos:start="2295:51" pos:end="2295:57">(<argument pos:start="2295:52" pos:end="2295:56"><expr pos:start="2295:52" pos:end="2295:56"><name pos:start="2295:52" pos:end="2295:56">RRR_T</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                    <if_stmt pos:start="2299:21" pos:end="2311:21"><if pos:start="2299:21" pos:end="2305:21">if <condition pos:start="2299:24" pos:end="2299:34">(<expr pos:start="2299:25" pos:end="2299:33"><name pos:start="2299:25" pos:end="2299:27">OP2</name> <operator pos:start="2299:29" pos:end="2299:30">==</operator> <literal type="number" pos:start="2299:32" pos:end="2299:33">14</literal></expr>)</condition> <block pos:start="2299:36" pos:end="2305:21">{<block_content pos:start="2301:25" pos:end="2303:54">

                        <expr_stmt pos:start="2301:25" pos:end="2303:54"><expr pos:start="2301:25" pos:end="2303:53"><call pos:start="2301:25" pos:end="2303:53"><name pos:start="2301:25" pos:end="2301:40">gen_helper_ftoui</name><argument_list pos:start="2301:41" pos:end="2303:53">(<argument pos:start="2301:42" pos:end="2301:53"><expr pos:start="2301:42" pos:end="2301:53"><name pos:start="2301:42" pos:end="2301:53"><name pos:start="2301:42" pos:end="2301:46">cpu_R</name><index pos:start="2301:47" pos:end="2301:53">[<expr pos:start="2301:48" pos:end="2301:52"><name pos:start="2301:48" pos:end="2301:52">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="2301:56" pos:end="2301:68"><expr pos:start="2301:56" pos:end="2301:68"><name pos:start="2301:56" pos:end="2301:68"><name pos:start="2301:56" pos:end="2301:61">cpu_FR</name><index pos:start="2301:62" pos:end="2301:68">[<expr pos:start="2301:63" pos:end="2301:67"><name pos:start="2301:63" pos:end="2301:67">RRR_S</name></expr>]</index></name></expr></argument>,

                                <argument pos:start="2303:33" pos:end="2303:45"><expr pos:start="2303:33" pos:end="2303:45"><name pos:start="2303:33" pos:end="2303:45">rounding_mode</name></expr></argument>, <argument pos:start="2303:48" pos:end="2303:52"><expr pos:start="2303:48" pos:end="2303:52"><name pos:start="2303:48" pos:end="2303:52">scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="2305:23" pos:end="2311:21">else <block pos:start="2305:28" pos:end="2311:21">{<block_content pos:start="2307:25" pos:end="2309:54">

                        <expr_stmt pos:start="2307:25" pos:end="2309:54"><expr pos:start="2307:25" pos:end="2309:53"><call pos:start="2307:25" pos:end="2309:53"><name pos:start="2307:25" pos:end="2307:39">gen_helper_ftoi</name><argument_list pos:start="2307:40" pos:end="2309:53">(<argument pos:start="2307:41" pos:end="2307:52"><expr pos:start="2307:41" pos:end="2307:52"><name pos:start="2307:41" pos:end="2307:52"><name pos:start="2307:41" pos:end="2307:45">cpu_R</name><index pos:start="2307:46" pos:end="2307:52">[<expr pos:start="2307:47" pos:end="2307:51"><name pos:start="2307:47" pos:end="2307:51">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="2307:55" pos:end="2307:67"><expr pos:start="2307:55" pos:end="2307:67"><name pos:start="2307:55" pos:end="2307:67"><name pos:start="2307:55" pos:end="2307:60">cpu_FR</name><index pos:start="2307:61" pos:end="2307:67">[<expr pos:start="2307:62" pos:end="2307:66"><name pos:start="2307:62" pos:end="2307:66">RRR_S</name></expr>]</index></name></expr></argument>,

                                <argument pos:start="2309:33" pos:end="2309:45"><expr pos:start="2309:33" pos:end="2309:45"><name pos:start="2309:33" pos:end="2309:45">rounding_mode</name></expr></argument>, <argument pos:start="2309:48" pos:end="2309:52"><expr pos:start="2309:48" pos:end="2309:52"><name pos:start="2309:48" pos:end="2309:52">scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>



                    <expr_stmt pos:start="2315:21" pos:end="2315:49"><expr pos:start="2315:21" pos:end="2315:48"><call pos:start="2315:21" pos:end="2315:48"><name pos:start="2315:21" pos:end="2315:33">tcg_temp_free</name><argument_list pos:start="2315:34" pos:end="2315:48">(<argument pos:start="2315:35" pos:end="2315:47"><expr pos:start="2315:35" pos:end="2315:47"><name pos:start="2315:35" pos:end="2315:47">rounding_mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2317:21" pos:end="2317:41"><expr pos:start="2317:21" pos:end="2317:40"><call pos:start="2317:21" pos:end="2317:40"><name pos:start="2317:21" pos:end="2317:33">tcg_temp_free</name><argument_list pos:start="2317:34" pos:end="2317:40">(<argument pos:start="2317:35" pos:end="2317:39"><expr pos:start="2317:35" pos:end="2317:39"><name pos:start="2317:35" pos:end="2317:39">scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block>

                <break pos:start="2321:17" pos:end="2321:22">break;</break>



            <case pos:start="2325:13" pos:end="2325:20">case <expr pos:start="2325:18" pos:end="2325:19"><literal type="number" pos:start="2325:18" pos:end="2325:19">12</literal></expr>:</case> <comment type="block" pos:start="2325:22" pos:end="2325:33">/*FLOAT.Sf*/</comment>

            <case pos:start="2327:13" pos:end="2327:20">case <expr pos:start="2327:18" pos:end="2327:19"><literal type="number" pos:start="2327:18" pos:end="2327:19">13</literal></expr>:</case> <comment type="block" pos:start="2327:22" pos:end="2327:34">/*UFLOAT.Sf*/</comment>

                <expr_stmt pos:start="2329:17" pos:end="2329:45"><expr pos:start="2329:17" pos:end="2329:44"><call pos:start="2329:17" pos:end="2329:44"><name pos:start="2329:17" pos:end="2329:33">gen_window_check1</name><argument_list pos:start="2329:34" pos:end="2329:44">(<argument pos:start="2329:35" pos:end="2329:36"><expr pos:start="2329:35" pos:end="2329:36"><name pos:start="2329:35" pos:end="2329:36">dc</name></expr></argument>, <argument pos:start="2329:39" pos:end="2329:43"><expr pos:start="2329:39" pos:end="2329:43"><name pos:start="2329:39" pos:end="2329:43">RRR_S</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2331:17" pos:end="2331:42"><expr pos:start="2331:17" pos:end="2331:41"><call pos:start="2331:17" pos:end="2331:41"><name pos:start="2331:17" pos:end="2331:34">gen_check_cpenable</name><argument_list pos:start="2331:35" pos:end="2331:41">(<argument pos:start="2331:36" pos:end="2331:37"><expr pos:start="2331:36" pos:end="2331:37"><name pos:start="2331:36" pos:end="2331:37">dc</name></expr></argument>, <argument pos:start="2331:40" pos:end="2331:40"><expr pos:start="2331:40" pos:end="2331:40"><literal type="number" pos:start="2331:40" pos:end="2331:40">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <block pos:start="2333:17" pos:end="2355:17">{<block_content pos:start="2335:21" pos:end="2353:41">

                    <decl_stmt pos:start="2335:21" pos:end="2335:59"><decl pos:start="2335:21" pos:end="2335:58"><type pos:start="2335:21" pos:end="2335:28"><name pos:start="2335:21" pos:end="2335:28">TCGv_i32</name></type> <name pos:start="2335:30" pos:end="2335:34">scale</name> <init pos:start="2335:36" pos:end="2335:58">= <expr pos:start="2335:38" pos:end="2335:58"><call pos:start="2335:38" pos:end="2335:58"><name pos:start="2335:38" pos:end="2335:50">tcg_const_i32</name><argument_list pos:start="2335:51" pos:end="2335:58">(<argument pos:start="2335:52" pos:end="2335:57"><expr pos:start="2335:52" pos:end="2335:57"><operator pos:start="2335:52" pos:end="2335:52">-</operator><name pos:start="2335:53" pos:end="2335:57">RRR_T</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                    <if_stmt pos:start="2339:21" pos:end="2351:21"><if pos:start="2339:21" pos:end="2345:21">if <condition pos:start="2339:24" pos:end="2339:34">(<expr pos:start="2339:25" pos:end="2339:33"><name pos:start="2339:25" pos:end="2339:27">OP2</name> <operator pos:start="2339:29" pos:end="2339:30">==</operator> <literal type="number" pos:start="2339:32" pos:end="2339:33">13</literal></expr>)</condition> <block pos:start="2339:36" pos:end="2345:21">{<block_content pos:start="2341:25" pos:end="2343:53">

                        <expr_stmt pos:start="2341:25" pos:end="2343:53"><expr pos:start="2341:25" pos:end="2343:52"><call pos:start="2341:25" pos:end="2343:52"><name pos:start="2341:25" pos:end="2341:40">gen_helper_uitof</name><argument_list pos:start="2341:41" pos:end="2343:52">(<argument pos:start="2341:42" pos:end="2341:54"><expr pos:start="2341:42" pos:end="2341:54"><name pos:start="2341:42" pos:end="2341:54"><name pos:start="2341:42" pos:end="2341:47">cpu_FR</name><index pos:start="2341:48" pos:end="2341:54">[<expr pos:start="2341:49" pos:end="2341:53"><name pos:start="2341:49" pos:end="2341:53">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="2341:57" pos:end="2341:63"><expr pos:start="2341:57" pos:end="2341:63"><name pos:start="2341:57" pos:end="2341:63">cpu_env</name></expr></argument>,

                                <argument pos:start="2343:33" pos:end="2343:44"><expr pos:start="2343:33" pos:end="2343:44"><name pos:start="2343:33" pos:end="2343:44"><name pos:start="2343:33" pos:end="2343:37">cpu_R</name><index pos:start="2343:38" pos:end="2343:44">[<expr pos:start="2343:39" pos:end="2343:43"><name pos:start="2343:39" pos:end="2343:43">RRR_S</name></expr>]</index></name></expr></argument>, <argument pos:start="2343:47" pos:end="2343:51"><expr pos:start="2343:47" pos:end="2343:51"><name pos:start="2343:47" pos:end="2343:51">scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="2345:23" pos:end="2351:21">else <block pos:start="2345:28" pos:end="2351:21">{<block_content pos:start="2347:25" pos:end="2349:53">

                        <expr_stmt pos:start="2347:25" pos:end="2349:53"><expr pos:start="2347:25" pos:end="2349:52"><call pos:start="2347:25" pos:end="2349:52"><name pos:start="2347:25" pos:end="2347:39">gen_helper_itof</name><argument_list pos:start="2347:40" pos:end="2349:52">(<argument pos:start="2347:41" pos:end="2347:53"><expr pos:start="2347:41" pos:end="2347:53"><name pos:start="2347:41" pos:end="2347:53"><name pos:start="2347:41" pos:end="2347:46">cpu_FR</name><index pos:start="2347:47" pos:end="2347:53">[<expr pos:start="2347:48" pos:end="2347:52"><name pos:start="2347:48" pos:end="2347:52">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="2347:56" pos:end="2347:62"><expr pos:start="2347:56" pos:end="2347:62"><name pos:start="2347:56" pos:end="2347:62">cpu_env</name></expr></argument>,

                                <argument pos:start="2349:33" pos:end="2349:44"><expr pos:start="2349:33" pos:end="2349:44"><name pos:start="2349:33" pos:end="2349:44"><name pos:start="2349:33" pos:end="2349:37">cpu_R</name><index pos:start="2349:38" pos:end="2349:44">[<expr pos:start="2349:39" pos:end="2349:43"><name pos:start="2349:39" pos:end="2349:43">RRR_S</name></expr>]</index></name></expr></argument>, <argument pos:start="2349:47" pos:end="2349:51"><expr pos:start="2349:47" pos:end="2349:51"><name pos:start="2349:47" pos:end="2349:51">scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="2353:21" pos:end="2353:41"><expr pos:start="2353:21" pos:end="2353:40"><call pos:start="2353:21" pos:end="2353:40"><name pos:start="2353:21" pos:end="2353:33">tcg_temp_free</name><argument_list pos:start="2353:34" pos:end="2353:40">(<argument pos:start="2353:35" pos:end="2353:39"><expr pos:start="2353:35" pos:end="2353:39"><name pos:start="2353:35" pos:end="2353:39">scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block>

                <break pos:start="2357:17" pos:end="2357:22">break;</break>



            <case pos:start="2361:13" pos:end="2361:20">case <expr pos:start="2361:18" pos:end="2361:19"><literal type="number" pos:start="2361:18" pos:end="2361:19">15</literal></expr>:</case> <comment type="block" pos:start="2361:22" pos:end="2361:30">/*FP1OP*/</comment>

                <switch pos:start="2363:17" pos:end="2425:17">switch <condition pos:start="2363:24" pos:end="2363:30">(<expr pos:start="2363:25" pos:end="2363:29"><name pos:start="2363:25" pos:end="2363:29">RRR_T</name></expr>)</condition> <block pos:start="2363:32" pos:end="2425:17">{<block_content pos:start="2365:17" pos:end="2423:26">

                <case pos:start="2365:17" pos:end="2365:23">case <expr pos:start="2365:22" pos:end="2365:22"><literal type="number" pos:start="2365:22" pos:end="2365:22">0</literal></expr>:</case> <comment type="block" pos:start="2365:25" pos:end="2365:34">/*MOV.Sf*/</comment>

                    <expr_stmt pos:start="2367:21" pos:end="2367:46"><expr pos:start="2367:21" pos:end="2367:45"><call pos:start="2367:21" pos:end="2367:45"><name pos:start="2367:21" pos:end="2367:38">gen_check_cpenable</name><argument_list pos:start="2367:39" pos:end="2367:45">(<argument pos:start="2367:40" pos:end="2367:41"><expr pos:start="2367:40" pos:end="2367:41"><name pos:start="2367:40" pos:end="2367:41">dc</name></expr></argument>, <argument pos:start="2367:44" pos:end="2367:44"><expr pos:start="2367:44" pos:end="2367:44"><literal type="number" pos:start="2367:44" pos:end="2367:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2369:21" pos:end="2369:66"><expr pos:start="2369:21" pos:end="2369:65"><call pos:start="2369:21" pos:end="2369:65"><name pos:start="2369:21" pos:end="2369:35">tcg_gen_mov_i32</name><argument_list pos:start="2369:36" pos:end="2369:65">(<argument pos:start="2369:37" pos:end="2369:49"><expr pos:start="2369:37" pos:end="2369:49"><name pos:start="2369:37" pos:end="2369:49"><name pos:start="2369:37" pos:end="2369:42">cpu_FR</name><index pos:start="2369:43" pos:end="2369:49">[<expr pos:start="2369:44" pos:end="2369:48"><name pos:start="2369:44" pos:end="2369:48">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="2369:52" pos:end="2369:64"><expr pos:start="2369:52" pos:end="2369:64"><name pos:start="2369:52" pos:end="2369:64"><name pos:start="2369:52" pos:end="2369:57">cpu_FR</name><index pos:start="2369:58" pos:end="2369:64">[<expr pos:start="2369:59" pos:end="2369:63"><name pos:start="2369:59" pos:end="2369:63">RRR_S</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2371:21" pos:end="2371:26">break;</break>



                <case pos:start="2375:17" pos:end="2375:23">case <expr pos:start="2375:22" pos:end="2375:22"><literal type="number" pos:start="2375:22" pos:end="2375:22">1</literal></expr>:</case> <comment type="block" pos:start="2375:25" pos:end="2375:34">/*ABS.Sf*/</comment>

                    <expr_stmt pos:start="2377:21" pos:end="2377:46"><expr pos:start="2377:21" pos:end="2377:45"><call pos:start="2377:21" pos:end="2377:45"><name pos:start="2377:21" pos:end="2377:38">gen_check_cpenable</name><argument_list pos:start="2377:39" pos:end="2377:45">(<argument pos:start="2377:40" pos:end="2377:41"><expr pos:start="2377:40" pos:end="2377:41"><name pos:start="2377:40" pos:end="2377:41">dc</name></expr></argument>, <argument pos:start="2377:44" pos:end="2377:44"><expr pos:start="2377:44" pos:end="2377:44"><literal type="number" pos:start="2377:44" pos:end="2377:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2379:21" pos:end="2379:67"><expr pos:start="2379:21" pos:end="2379:66"><call pos:start="2379:21" pos:end="2379:66"><name pos:start="2379:21" pos:end="2379:36">gen_helper_abs_s</name><argument_list pos:start="2379:37" pos:end="2379:66">(<argument pos:start="2379:38" pos:end="2379:50"><expr pos:start="2379:38" pos:end="2379:50"><name pos:start="2379:38" pos:end="2379:50"><name pos:start="2379:38" pos:end="2379:43">cpu_FR</name><index pos:start="2379:44" pos:end="2379:50">[<expr pos:start="2379:45" pos:end="2379:49"><name pos:start="2379:45" pos:end="2379:49">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="2379:53" pos:end="2379:65"><expr pos:start="2379:53" pos:end="2379:65"><name pos:start="2379:53" pos:end="2379:65"><name pos:start="2379:53" pos:end="2379:58">cpu_FR</name><index pos:start="2379:59" pos:end="2379:65">[<expr pos:start="2379:60" pos:end="2379:64"><name pos:start="2379:60" pos:end="2379:64">RRR_S</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2381:21" pos:end="2381:26">break;</break>



                <case pos:start="2385:17" pos:end="2385:23">case <expr pos:start="2385:22" pos:end="2385:22"><literal type="number" pos:start="2385:22" pos:end="2385:22">4</literal></expr>:</case> <comment type="block" pos:start="2385:25" pos:end="2385:32">/*RFRf*/</comment>

                    <expr_stmt pos:start="2387:21" pos:end="2387:49"><expr pos:start="2387:21" pos:end="2387:48"><call pos:start="2387:21" pos:end="2387:48"><name pos:start="2387:21" pos:end="2387:37">gen_window_check1</name><argument_list pos:start="2387:38" pos:end="2387:48">(<argument pos:start="2387:39" pos:end="2387:40"><expr pos:start="2387:39" pos:end="2387:40"><name pos:start="2387:39" pos:end="2387:40">dc</name></expr></argument>, <argument pos:start="2387:43" pos:end="2387:47"><expr pos:start="2387:43" pos:end="2387:47"><name pos:start="2387:43" pos:end="2387:47">RRR_R</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2389:21" pos:end="2389:46"><expr pos:start="2389:21" pos:end="2389:45"><call pos:start="2389:21" pos:end="2389:45"><name pos:start="2389:21" pos:end="2389:38">gen_check_cpenable</name><argument_list pos:start="2389:39" pos:end="2389:45">(<argument pos:start="2389:40" pos:end="2389:41"><expr pos:start="2389:40" pos:end="2389:41"><name pos:start="2389:40" pos:end="2389:41">dc</name></expr></argument>, <argument pos:start="2389:44" pos:end="2389:44"><expr pos:start="2389:44" pos:end="2389:44"><literal type="number" pos:start="2389:44" pos:end="2389:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2391:21" pos:end="2391:65"><expr pos:start="2391:21" pos:end="2391:64"><call pos:start="2391:21" pos:end="2391:64"><name pos:start="2391:21" pos:end="2391:35">tcg_gen_mov_i32</name><argument_list pos:start="2391:36" pos:end="2391:64">(<argument pos:start="2391:37" pos:end="2391:48"><expr pos:start="2391:37" pos:end="2391:48"><name pos:start="2391:37" pos:end="2391:48"><name pos:start="2391:37" pos:end="2391:41">cpu_R</name><index pos:start="2391:42" pos:end="2391:48">[<expr pos:start="2391:43" pos:end="2391:47"><name pos:start="2391:43" pos:end="2391:47">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="2391:51" pos:end="2391:63"><expr pos:start="2391:51" pos:end="2391:63"><name pos:start="2391:51" pos:end="2391:63"><name pos:start="2391:51" pos:end="2391:56">cpu_FR</name><index pos:start="2391:57" pos:end="2391:63">[<expr pos:start="2391:58" pos:end="2391:62"><name pos:start="2391:58" pos:end="2391:62">RRR_S</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2393:21" pos:end="2393:26">break;</break>



                <case pos:start="2397:17" pos:end="2397:23">case <expr pos:start="2397:22" pos:end="2397:22"><literal type="number" pos:start="2397:22" pos:end="2397:22">5</literal></expr>:</case> <comment type="block" pos:start="2397:25" pos:end="2397:32">/*WFRf*/</comment>

                    <expr_stmt pos:start="2399:21" pos:end="2399:49"><expr pos:start="2399:21" pos:end="2399:48"><call pos:start="2399:21" pos:end="2399:48"><name pos:start="2399:21" pos:end="2399:37">gen_window_check1</name><argument_list pos:start="2399:38" pos:end="2399:48">(<argument pos:start="2399:39" pos:end="2399:40"><expr pos:start="2399:39" pos:end="2399:40"><name pos:start="2399:39" pos:end="2399:40">dc</name></expr></argument>, <argument pos:start="2399:43" pos:end="2399:47"><expr pos:start="2399:43" pos:end="2399:47"><name pos:start="2399:43" pos:end="2399:47">RRR_S</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2401:21" pos:end="2401:46"><expr pos:start="2401:21" pos:end="2401:45"><call pos:start="2401:21" pos:end="2401:45"><name pos:start="2401:21" pos:end="2401:38">gen_check_cpenable</name><argument_list pos:start="2401:39" pos:end="2401:45">(<argument pos:start="2401:40" pos:end="2401:41"><expr pos:start="2401:40" pos:end="2401:41"><name pos:start="2401:40" pos:end="2401:41">dc</name></expr></argument>, <argument pos:start="2401:44" pos:end="2401:44"><expr pos:start="2401:44" pos:end="2401:44"><literal type="number" pos:start="2401:44" pos:end="2401:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2403:21" pos:end="2403:65"><expr pos:start="2403:21" pos:end="2403:64"><call pos:start="2403:21" pos:end="2403:64"><name pos:start="2403:21" pos:end="2403:35">tcg_gen_mov_i32</name><argument_list pos:start="2403:36" pos:end="2403:64">(<argument pos:start="2403:37" pos:end="2403:49"><expr pos:start="2403:37" pos:end="2403:49"><name pos:start="2403:37" pos:end="2403:49"><name pos:start="2403:37" pos:end="2403:42">cpu_FR</name><index pos:start="2403:43" pos:end="2403:49">[<expr pos:start="2403:44" pos:end="2403:48"><name pos:start="2403:44" pos:end="2403:48">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="2403:52" pos:end="2403:63"><expr pos:start="2403:52" pos:end="2403:63"><name pos:start="2403:52" pos:end="2403:63"><name pos:start="2403:52" pos:end="2403:56">cpu_R</name><index pos:start="2403:57" pos:end="2403:63">[<expr pos:start="2403:58" pos:end="2403:62"><name pos:start="2403:58" pos:end="2403:62">RRR_S</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2405:21" pos:end="2405:26">break;</break>



                <case pos:start="2409:17" pos:end="2409:23">case <expr pos:start="2409:22" pos:end="2409:22"><literal type="number" pos:start="2409:22" pos:end="2409:22">6</literal></expr>:</case> <comment type="block" pos:start="2409:25" pos:end="2409:34">/*NEG.Sf*/</comment>

                    <expr_stmt pos:start="2411:21" pos:end="2411:46"><expr pos:start="2411:21" pos:end="2411:45"><call pos:start="2411:21" pos:end="2411:45"><name pos:start="2411:21" pos:end="2411:38">gen_check_cpenable</name><argument_list pos:start="2411:39" pos:end="2411:45">(<argument pos:start="2411:40" pos:end="2411:41"><expr pos:start="2411:40" pos:end="2411:41"><name pos:start="2411:40" pos:end="2411:41">dc</name></expr></argument>, <argument pos:start="2411:44" pos:end="2411:44"><expr pos:start="2411:44" pos:end="2411:44"><literal type="number" pos:start="2411:44" pos:end="2411:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2413:21" pos:end="2413:67"><expr pos:start="2413:21" pos:end="2413:66"><call pos:start="2413:21" pos:end="2413:66"><name pos:start="2413:21" pos:end="2413:36">gen_helper_neg_s</name><argument_list pos:start="2413:37" pos:end="2413:66">(<argument pos:start="2413:38" pos:end="2413:50"><expr pos:start="2413:38" pos:end="2413:50"><name pos:start="2413:38" pos:end="2413:50"><name pos:start="2413:38" pos:end="2413:43">cpu_FR</name><index pos:start="2413:44" pos:end="2413:50">[<expr pos:start="2413:45" pos:end="2413:49"><name pos:start="2413:45" pos:end="2413:49">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="2413:53" pos:end="2413:65"><expr pos:start="2413:53" pos:end="2413:65"><name pos:start="2413:53" pos:end="2413:65"><name pos:start="2413:53" pos:end="2413:58">cpu_FR</name><index pos:start="2413:59" pos:end="2413:65">[<expr pos:start="2413:60" pos:end="2413:64"><name pos:start="2413:60" pos:end="2413:64">RRR_S</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2415:21" pos:end="2415:26">break;</break>



                <default pos:start="2419:17" pos:end="2419:24">default:</default> <comment type="block" pos:start="2419:26" pos:end="2419:37">/*reserved*/</comment>

                    <expr_stmt pos:start="2421:21" pos:end="2421:31"><expr pos:start="2421:21" pos:end="2421:30"><call pos:start="2421:21" pos:end="2421:30"><name pos:start="2421:21" pos:end="2421:28">RESERVED</name><argument_list pos:start="2421:29" pos:end="2421:30">()</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2423:21" pos:end="2423:26">break;</break>

                </block_content>}</block></switch>

                <break pos:start="2427:17" pos:end="2427:22">break;</break>



            <default pos:start="2431:13" pos:end="2431:20">default:</default> <comment type="block" pos:start="2431:22" pos:end="2431:33">/*reserved*/</comment>

                <expr_stmt pos:start="2433:17" pos:end="2433:27"><expr pos:start="2433:17" pos:end="2433:26"><call pos:start="2433:17" pos:end="2433:26"><name pos:start="2433:17" pos:end="2433:24">RESERVED</name><argument_list pos:start="2433:25" pos:end="2433:26">()</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2435:17" pos:end="2435:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="2439:13" pos:end="2439:18">break;</break>



        <case pos:start="2443:9" pos:end="2443:16">case <expr pos:start="2443:14" pos:end="2443:15"><literal type="number" pos:start="2443:14" pos:end="2443:15">11</literal></expr>:</case> <comment type="block" pos:start="2443:18" pos:end="2443:24">/*FP1*/</comment>

            <expr_stmt pos:start="2445:13" pos:end="2464:0"><expr pos:start="2445:13" pos:end="2445:52"><call pos:start="2445:13" pos:end="2445:52"><name pos:start="2445:13" pos:end="2445:22">HAS_OPTION</name><argument_list pos:start="2445:23" pos:end="2445:52">(<argument pos:start="2445:24" pos:end="2445:51"><expr pos:start="2445:24" pos:end="2445:51"><name pos:start="2445:24" pos:end="2445:51">XTENSA_OPTION_FP_COPROCESSOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:define pos:start="2449:1" pos:end="2463:15">#<cpp:directive pos:start="2449:2" pos:end="2449:7">define</cpp:directive> <cpp:macro pos:start="2449:9" pos:end="2449:34"><name pos:start="2449:9" pos:end="2449:19">gen_compare</name><parameter_list pos:start="2449:20" pos:end="2449:34">(<parameter pos:start="2449:21" pos:end="2449:23"><type pos:start="2449:21" pos:end="2449:23"><name pos:start="2449:21" pos:end="2449:23">rel</name></type></parameter>, <parameter pos:start="2449:26" pos:end="2449:27"><type pos:start="2449:26" pos:end="2449:27"><name pos:start="2449:26" pos:end="2449:27">br</name></type></parameter>, <parameter pos:start="2449:30" pos:end="2449:30"><type pos:start="2449:30" pos:end="2449:30"><name pos:start="2449:30" pos:end="2449:30">a</name></type></parameter>, <parameter pos:start="2449:33" pos:end="2449:33"><type pos:start="2449:33" pos:end="2449:33"><name pos:start="2449:33" pos:end="2449:33">b</name></type></parameter>)</parameter_list></cpp:macro> \

    <cpp:value pos:start="2451:5" pos:end="2463:15">do { \

        TCGv_i32 bit = tcg_const_i32(1 &lt;&lt; br); \

        \

        gen_check_cpenable(dc, 0); \

        gen_helper_##rel(cpu_env, bit, cpu_FR[a], cpu_FR[b]); \

        tcg_temp_free(bit); \

    } while (0)</cpp:value></cpp:define>



            <switch pos:start="2467:13" pos:end="2611:13">switch <condition pos:start="2467:20" pos:end="2467:24">(<expr pos:start="2467:21" pos:end="2467:23"><name pos:start="2467:21" pos:end="2467:23">OP2</name></expr>)</condition> <block pos:start="2467:26" pos:end="2611:13">{<block_content pos:start="2469:13" pos:end="2609:22">

            <case pos:start="2469:13" pos:end="2469:19">case <expr pos:start="2469:18" pos:end="2469:18"><literal type="number" pos:start="2469:18" pos:end="2469:18">1</literal></expr>:</case> <comment type="block" pos:start="2469:21" pos:end="2469:29">/*UN.Sf*/</comment>

                <expr_stmt pos:start="2471:17" pos:end="2471:55"><expr pos:start="2471:17" pos:end="2471:54"><call pos:start="2471:17" pos:end="2471:54"><name pos:start="2471:17" pos:end="2471:27">gen_compare</name><argument_list pos:start="2471:28" pos:end="2471:54">(<argument pos:start="2471:29" pos:end="2471:32"><expr pos:start="2471:29" pos:end="2471:32"><name pos:start="2471:29" pos:end="2471:32">un_s</name></expr></argument>, <argument pos:start="2471:35" pos:end="2471:39"><expr pos:start="2471:35" pos:end="2471:39"><name pos:start="2471:35" pos:end="2471:39">RRR_R</name></expr></argument>, <argument pos:start="2471:42" pos:end="2471:46"><expr pos:start="2471:42" pos:end="2471:46"><name pos:start="2471:42" pos:end="2471:46">RRR_S</name></expr></argument>, <argument pos:start="2471:49" pos:end="2471:53"><expr pos:start="2471:49" pos:end="2471:53"><name pos:start="2471:49" pos:end="2471:53">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2473:17" pos:end="2473:22">break;</break>



            <case pos:start="2477:13" pos:end="2477:19">case <expr pos:start="2477:18" pos:end="2477:18"><literal type="number" pos:start="2477:18" pos:end="2477:18">2</literal></expr>:</case> <comment type="block" pos:start="2477:21" pos:end="2477:30">/*OEQ.Sf*/</comment>

                <expr_stmt pos:start="2479:17" pos:end="2479:56"><expr pos:start="2479:17" pos:end="2479:55"><call pos:start="2479:17" pos:end="2479:55"><name pos:start="2479:17" pos:end="2479:27">gen_compare</name><argument_list pos:start="2479:28" pos:end="2479:55">(<argument pos:start="2479:29" pos:end="2479:33"><expr pos:start="2479:29" pos:end="2479:33"><name pos:start="2479:29" pos:end="2479:33">oeq_s</name></expr></argument>, <argument pos:start="2479:36" pos:end="2479:40"><expr pos:start="2479:36" pos:end="2479:40"><name pos:start="2479:36" pos:end="2479:40">RRR_R</name></expr></argument>, <argument pos:start="2479:43" pos:end="2479:47"><expr pos:start="2479:43" pos:end="2479:47"><name pos:start="2479:43" pos:end="2479:47">RRR_S</name></expr></argument>, <argument pos:start="2479:50" pos:end="2479:54"><expr pos:start="2479:50" pos:end="2479:54"><name pos:start="2479:50" pos:end="2479:54">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2481:17" pos:end="2481:22">break;</break>



            <case pos:start="2485:13" pos:end="2485:19">case <expr pos:start="2485:18" pos:end="2485:18"><literal type="number" pos:start="2485:18" pos:end="2485:18">3</literal></expr>:</case> <comment type="block" pos:start="2485:21" pos:end="2485:30">/*UEQ.Sf*/</comment>

                <expr_stmt pos:start="2487:17" pos:end="2487:56"><expr pos:start="2487:17" pos:end="2487:55"><call pos:start="2487:17" pos:end="2487:55"><name pos:start="2487:17" pos:end="2487:27">gen_compare</name><argument_list pos:start="2487:28" pos:end="2487:55">(<argument pos:start="2487:29" pos:end="2487:33"><expr pos:start="2487:29" pos:end="2487:33"><name pos:start="2487:29" pos:end="2487:33">ueq_s</name></expr></argument>, <argument pos:start="2487:36" pos:end="2487:40"><expr pos:start="2487:36" pos:end="2487:40"><name pos:start="2487:36" pos:end="2487:40">RRR_R</name></expr></argument>, <argument pos:start="2487:43" pos:end="2487:47"><expr pos:start="2487:43" pos:end="2487:47"><name pos:start="2487:43" pos:end="2487:47">RRR_S</name></expr></argument>, <argument pos:start="2487:50" pos:end="2487:54"><expr pos:start="2487:50" pos:end="2487:54"><name pos:start="2487:50" pos:end="2487:54">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2489:17" pos:end="2489:22">break;</break>



            <case pos:start="2493:13" pos:end="2493:19">case <expr pos:start="2493:18" pos:end="2493:18"><literal type="number" pos:start="2493:18" pos:end="2493:18">4</literal></expr>:</case> <comment type="block" pos:start="2493:21" pos:end="2493:30">/*OLT.Sf*/</comment>

                <expr_stmt pos:start="2495:17" pos:end="2495:56"><expr pos:start="2495:17" pos:end="2495:55"><call pos:start="2495:17" pos:end="2495:55"><name pos:start="2495:17" pos:end="2495:27">gen_compare</name><argument_list pos:start="2495:28" pos:end="2495:55">(<argument pos:start="2495:29" pos:end="2495:33"><expr pos:start="2495:29" pos:end="2495:33"><name pos:start="2495:29" pos:end="2495:33">olt_s</name></expr></argument>, <argument pos:start="2495:36" pos:end="2495:40"><expr pos:start="2495:36" pos:end="2495:40"><name pos:start="2495:36" pos:end="2495:40">RRR_R</name></expr></argument>, <argument pos:start="2495:43" pos:end="2495:47"><expr pos:start="2495:43" pos:end="2495:47"><name pos:start="2495:43" pos:end="2495:47">RRR_S</name></expr></argument>, <argument pos:start="2495:50" pos:end="2495:54"><expr pos:start="2495:50" pos:end="2495:54"><name pos:start="2495:50" pos:end="2495:54">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2497:17" pos:end="2497:22">break;</break>



            <case pos:start="2501:13" pos:end="2501:19">case <expr pos:start="2501:18" pos:end="2501:18"><literal type="number" pos:start="2501:18" pos:end="2501:18">5</literal></expr>:</case> <comment type="block" pos:start="2501:21" pos:end="2501:30">/*ULT.Sf*/</comment>

                <expr_stmt pos:start="2503:17" pos:end="2503:56"><expr pos:start="2503:17" pos:end="2503:55"><call pos:start="2503:17" pos:end="2503:55"><name pos:start="2503:17" pos:end="2503:27">gen_compare</name><argument_list pos:start="2503:28" pos:end="2503:55">(<argument pos:start="2503:29" pos:end="2503:33"><expr pos:start="2503:29" pos:end="2503:33"><name pos:start="2503:29" pos:end="2503:33">ult_s</name></expr></argument>, <argument pos:start="2503:36" pos:end="2503:40"><expr pos:start="2503:36" pos:end="2503:40"><name pos:start="2503:36" pos:end="2503:40">RRR_R</name></expr></argument>, <argument pos:start="2503:43" pos:end="2503:47"><expr pos:start="2503:43" pos:end="2503:47"><name pos:start="2503:43" pos:end="2503:47">RRR_S</name></expr></argument>, <argument pos:start="2503:50" pos:end="2503:54"><expr pos:start="2503:50" pos:end="2503:54"><name pos:start="2503:50" pos:end="2503:54">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2505:17" pos:end="2505:22">break;</break>



            <case pos:start="2509:13" pos:end="2509:19">case <expr pos:start="2509:18" pos:end="2509:18"><literal type="number" pos:start="2509:18" pos:end="2509:18">6</literal></expr>:</case> <comment type="block" pos:start="2509:21" pos:end="2509:30">/*OLE.Sf*/</comment>

                <expr_stmt pos:start="2511:17" pos:end="2511:56"><expr pos:start="2511:17" pos:end="2511:55"><call pos:start="2511:17" pos:end="2511:55"><name pos:start="2511:17" pos:end="2511:27">gen_compare</name><argument_list pos:start="2511:28" pos:end="2511:55">(<argument pos:start="2511:29" pos:end="2511:33"><expr pos:start="2511:29" pos:end="2511:33"><name pos:start="2511:29" pos:end="2511:33">ole_s</name></expr></argument>, <argument pos:start="2511:36" pos:end="2511:40"><expr pos:start="2511:36" pos:end="2511:40"><name pos:start="2511:36" pos:end="2511:40">RRR_R</name></expr></argument>, <argument pos:start="2511:43" pos:end="2511:47"><expr pos:start="2511:43" pos:end="2511:47"><name pos:start="2511:43" pos:end="2511:47">RRR_S</name></expr></argument>, <argument pos:start="2511:50" pos:end="2511:54"><expr pos:start="2511:50" pos:end="2511:54"><name pos:start="2511:50" pos:end="2511:54">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2513:17" pos:end="2513:22">break;</break>



            <case pos:start="2517:13" pos:end="2517:19">case <expr pos:start="2517:18" pos:end="2517:18"><literal type="number" pos:start="2517:18" pos:end="2517:18">7</literal></expr>:</case> <comment type="block" pos:start="2517:21" pos:end="2517:30">/*ULE.Sf*/</comment>

                <expr_stmt pos:start="2519:17" pos:end="2519:56"><expr pos:start="2519:17" pos:end="2519:55"><call pos:start="2519:17" pos:end="2519:55"><name pos:start="2519:17" pos:end="2519:27">gen_compare</name><argument_list pos:start="2519:28" pos:end="2519:55">(<argument pos:start="2519:29" pos:end="2519:33"><expr pos:start="2519:29" pos:end="2519:33"><name pos:start="2519:29" pos:end="2519:33">ule_s</name></expr></argument>, <argument pos:start="2519:36" pos:end="2519:40"><expr pos:start="2519:36" pos:end="2519:40"><name pos:start="2519:36" pos:end="2519:40">RRR_R</name></expr></argument>, <argument pos:start="2519:43" pos:end="2519:47"><expr pos:start="2519:43" pos:end="2519:47"><name pos:start="2519:43" pos:end="2519:47">RRR_S</name></expr></argument>, <argument pos:start="2519:50" pos:end="2519:54"><expr pos:start="2519:50" pos:end="2519:54"><name pos:start="2519:50" pos:end="2519:54">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2521:17" pos:end="2526:0">break;</break>



<cpp:undef pos:start="2525:1" pos:end="2525:18">#<cpp:directive pos:start="2525:2" pos:end="2525:6">undef</cpp:directive> <name pos:start="2525:8" pos:end="2525:18">gen_compare</name></cpp:undef>



            <case pos:start="2529:13" pos:end="2529:19">case <expr pos:start="2529:18" pos:end="2529:18"><literal type="number" pos:start="2529:18" pos:end="2529:18">8</literal></expr>:</case> <comment type="block" pos:start="2529:21" pos:end="2529:33">/*MOVEQZ.Sf*/</comment>

            <case pos:start="2531:13" pos:end="2531:19">case <expr pos:start="2531:18" pos:end="2531:18"><literal type="number" pos:start="2531:18" pos:end="2531:18">9</literal></expr>:</case> <comment type="block" pos:start="2531:21" pos:end="2531:33">/*MOVNEZ.Sf*/</comment>

            <case pos:start="2533:13" pos:end="2533:20">case <expr pos:start="2533:18" pos:end="2533:19"><literal type="number" pos:start="2533:18" pos:end="2533:19">10</literal></expr>:</case> <comment type="block" pos:start="2533:22" pos:end="2533:34">/*MOVLTZ.Sf*/</comment>

            <case pos:start="2535:13" pos:end="2535:20">case <expr pos:start="2535:18" pos:end="2535:19"><literal type="number" pos:start="2535:18" pos:end="2535:19">11</literal></expr>:</case> <comment type="block" pos:start="2535:22" pos:end="2535:34">/*MOVGEZ.Sf*/</comment>

                <expr_stmt pos:start="2537:17" pos:end="2537:45"><expr pos:start="2537:17" pos:end="2537:44"><call pos:start="2537:17" pos:end="2537:44"><name pos:start="2537:17" pos:end="2537:33">gen_window_check1</name><argument_list pos:start="2537:34" pos:end="2537:44">(<argument pos:start="2537:35" pos:end="2537:36"><expr pos:start="2537:35" pos:end="2537:36"><name pos:start="2537:35" pos:end="2537:36">dc</name></expr></argument>, <argument pos:start="2537:39" pos:end="2537:43"><expr pos:start="2537:39" pos:end="2537:43"><name pos:start="2537:39" pos:end="2537:43">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2539:17" pos:end="2539:42"><expr pos:start="2539:17" pos:end="2539:41"><call pos:start="2539:17" pos:end="2539:41"><name pos:start="2539:17" pos:end="2539:34">gen_check_cpenable</name><argument_list pos:start="2539:35" pos:end="2539:41">(<argument pos:start="2539:36" pos:end="2539:37"><expr pos:start="2539:36" pos:end="2539:37"><name pos:start="2539:36" pos:end="2539:37">dc</name></expr></argument>, <argument pos:start="2539:40" pos:end="2539:40"><expr pos:start="2539:40" pos:end="2539:40"><literal type="number" pos:start="2539:40" pos:end="2539:40">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <block pos:start="2541:17" pos:end="2563:17">{<block_content pos:start="2543:21" pos:end="2561:41">

                    <decl_stmt pos:start="2543:21" pos:end="2553:22"><decl pos:start="2543:21" pos:end="2553:21"><type pos:start="2543:21" pos:end="2543:40"><specifier pos:start="2543:21" pos:end="2543:26">static</specifier> <specifier pos:start="2543:28" pos:end="2543:32">const</specifier> <name pos:start="2543:34" pos:end="2543:40">TCGCond</name></type> <name pos:start="2543:42" pos:end="2543:47"><name pos:start="2543:42" pos:end="2543:45">cond</name><index pos:start="2543:46" pos:end="2543:47">[]</index></name> <init pos:start="2543:49" pos:end="2553:21">= <expr pos:start="2543:51" pos:end="2553:21"><block pos:start="2543:51" pos:end="2553:21">{

                        <expr pos:start="2545:25" pos:end="2545:35"><name pos:start="2545:25" pos:end="2545:35">TCG_COND_NE</name></expr>,

                        <expr pos:start="2547:25" pos:end="2547:35"><name pos:start="2547:25" pos:end="2547:35">TCG_COND_EQ</name></expr>,

                        <expr pos:start="2549:25" pos:end="2549:35"><name pos:start="2549:25" pos:end="2549:35">TCG_COND_GE</name></expr>,

                        <expr pos:start="2551:25" pos:end="2551:35"><name pos:start="2551:25" pos:end="2551:35">TCG_COND_LT</name></expr>

                    }</block></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="2555:21" pos:end="2555:48"><decl pos:start="2555:21" pos:end="2555:47"><type pos:start="2555:21" pos:end="2555:23"><name pos:start="2555:21" pos:end="2555:23">int</name></type> <name pos:start="2555:25" pos:end="2555:29">label</name> <init pos:start="2555:31" pos:end="2555:47">= <expr pos:start="2555:33" pos:end="2555:47"><call pos:start="2555:33" pos:end="2555:47"><name pos:start="2555:33" pos:end="2555:45">gen_new_label</name><argument_list pos:start="2555:46" pos:end="2555:47">()</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="2557:21" pos:end="2557:79"><expr pos:start="2557:21" pos:end="2557:78"><call pos:start="2557:21" pos:end="2557:78"><name pos:start="2557:21" pos:end="2557:39">tcg_gen_brcondi_i32</name><argument_list pos:start="2557:40" pos:end="2557:78">(<argument pos:start="2557:41" pos:end="2557:53"><expr pos:start="2557:41" pos:end="2557:53"><name pos:start="2557:41" pos:end="2557:53"><name pos:start="2557:41" pos:end="2557:44">cond</name><index pos:start="2557:45" pos:end="2557:53">[<expr pos:start="2557:46" pos:end="2557:52"><name pos:start="2557:46" pos:end="2557:48">OP2</name> <operator pos:start="2557:50" pos:end="2557:50">-</operator> <literal type="number" pos:start="2557:52" pos:end="2557:52">8</literal></expr>]</index></name></expr></argument>, <argument pos:start="2557:56" pos:end="2557:67"><expr pos:start="2557:56" pos:end="2557:67"><name pos:start="2557:56" pos:end="2557:67"><name pos:start="2557:56" pos:end="2557:60">cpu_R</name><index pos:start="2557:61" pos:end="2557:67">[<expr pos:start="2557:62" pos:end="2557:66"><name pos:start="2557:62" pos:end="2557:66">RRR_T</name></expr>]</index></name></expr></argument>, <argument pos:start="2557:70" pos:end="2557:70"><expr pos:start="2557:70" pos:end="2557:70"><literal type="number" pos:start="2557:70" pos:end="2557:70">0</literal></expr></argument>, <argument pos:start="2557:73" pos:end="2557:77"><expr pos:start="2557:73" pos:end="2557:77"><name pos:start="2557:73" pos:end="2557:77">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2559:21" pos:end="2559:66"><expr pos:start="2559:21" pos:end="2559:65"><call pos:start="2559:21" pos:end="2559:65"><name pos:start="2559:21" pos:end="2559:35">tcg_gen_mov_i32</name><argument_list pos:start="2559:36" pos:end="2559:65">(<argument pos:start="2559:37" pos:end="2559:49"><expr pos:start="2559:37" pos:end="2559:49"><name pos:start="2559:37" pos:end="2559:49"><name pos:start="2559:37" pos:end="2559:42">cpu_FR</name><index pos:start="2559:43" pos:end="2559:49">[<expr pos:start="2559:44" pos:end="2559:48"><name pos:start="2559:44" pos:end="2559:48">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="2559:52" pos:end="2559:64"><expr pos:start="2559:52" pos:end="2559:64"><name pos:start="2559:52" pos:end="2559:64"><name pos:start="2559:52" pos:end="2559:57">cpu_FR</name><index pos:start="2559:58" pos:end="2559:64">[<expr pos:start="2559:59" pos:end="2559:63"><name pos:start="2559:59" pos:end="2559:63">RRR_S</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2561:21" pos:end="2561:41"><expr pos:start="2561:21" pos:end="2561:40"><call pos:start="2561:21" pos:end="2561:40"><name pos:start="2561:21" pos:end="2561:33">gen_set_label</name><argument_list pos:start="2561:34" pos:end="2561:40">(<argument pos:start="2561:35" pos:end="2561:39"><expr pos:start="2561:35" pos:end="2561:39"><name pos:start="2561:35" pos:end="2561:39">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block>

                <break pos:start="2565:17" pos:end="2565:22">break;</break>



            <case pos:start="2569:13" pos:end="2569:20">case <expr pos:start="2569:18" pos:end="2569:19"><literal type="number" pos:start="2569:18" pos:end="2569:19">12</literal></expr>:</case> <comment type="block" pos:start="2569:22" pos:end="2569:32">/*MOVF.Sf*/</comment>

            <case pos:start="2571:13" pos:end="2571:20">case <expr pos:start="2571:18" pos:end="2571:19"><literal type="number" pos:start="2571:18" pos:end="2571:19">13</literal></expr>:</case> <comment type="block" pos:start="2571:22" pos:end="2571:32">/*MOVT.Sf*/</comment>

                <expr_stmt pos:start="2573:17" pos:end="2573:50"><expr pos:start="2573:17" pos:end="2573:49"><call pos:start="2573:17" pos:end="2573:49"><name pos:start="2573:17" pos:end="2573:26">HAS_OPTION</name><argument_list pos:start="2573:27" pos:end="2573:49">(<argument pos:start="2573:28" pos:end="2573:48"><expr pos:start="2573:28" pos:end="2573:48"><name pos:start="2573:28" pos:end="2573:48">XTENSA_OPTION_BOOLEAN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2575:17" pos:end="2575:42"><expr pos:start="2575:17" pos:end="2575:41"><call pos:start="2575:17" pos:end="2575:41"><name pos:start="2575:17" pos:end="2575:34">gen_check_cpenable</name><argument_list pos:start="2575:35" pos:end="2575:41">(<argument pos:start="2575:36" pos:end="2575:37"><expr pos:start="2575:36" pos:end="2575:37"><name pos:start="2575:36" pos:end="2575:37">dc</name></expr></argument>, <argument pos:start="2575:40" pos:end="2575:40"><expr pos:start="2575:40" pos:end="2575:40"><literal type="number" pos:start="2575:40" pos:end="2575:40">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <block pos:start="2577:17" pos:end="2599:17">{<block_content pos:start="2579:21" pos:end="2597:39">

                    <decl_stmt pos:start="2579:21" pos:end="2579:48"><decl pos:start="2579:21" pos:end="2579:47"><type pos:start="2579:21" pos:end="2579:23"><name pos:start="2579:21" pos:end="2579:23">int</name></type> <name pos:start="2579:25" pos:end="2579:29">label</name> <init pos:start="2579:31" pos:end="2579:47">= <expr pos:start="2579:33" pos:end="2579:47"><call pos:start="2579:33" pos:end="2579:47"><name pos:start="2579:33" pos:end="2579:45">gen_new_label</name><argument_list pos:start="2579:46" pos:end="2579:47">()</argument_list></call></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="2581:21" pos:end="2581:54"><decl pos:start="2581:21" pos:end="2581:53"><type pos:start="2581:21" pos:end="2581:28"><name pos:start="2581:21" pos:end="2581:28">TCGv_i32</name></type> <name pos:start="2581:30" pos:end="2581:32">tmp</name> <init pos:start="2581:34" pos:end="2581:53">= <expr pos:start="2581:36" pos:end="2581:53"><call pos:start="2581:36" pos:end="2581:53"><name pos:start="2581:36" pos:end="2581:51">tcg_temp_new_i32</name><argument_list pos:start="2581:52" pos:end="2581:53">()</argument_list></call></expr></init></decl>;</decl_stmt>



                    <expr_stmt pos:start="2585:21" pos:end="2585:66"><expr pos:start="2585:21" pos:end="2585:65"><call pos:start="2585:21" pos:end="2585:65"><name pos:start="2585:21" pos:end="2585:36">tcg_gen_andi_i32</name><argument_list pos:start="2585:37" pos:end="2585:65">(<argument pos:start="2585:38" pos:end="2585:40"><expr pos:start="2585:38" pos:end="2585:40"><name pos:start="2585:38" pos:end="2585:40">tmp</name></expr></argument>, <argument pos:start="2585:43" pos:end="2585:52"><expr pos:start="2585:43" pos:end="2585:52"><name pos:start="2585:43" pos:end="2585:52"><name pos:start="2585:43" pos:end="2585:48">cpu_SR</name><index pos:start="2585:49" pos:end="2585:52">[<expr pos:start="2585:50" pos:end="2585:51"><name pos:start="2585:50" pos:end="2585:51">BR</name></expr>]</index></name></expr></argument>, <argument pos:start="2585:55" pos:end="2585:64"><expr pos:start="2585:55" pos:end="2585:64"><literal type="number" pos:start="2585:55" pos:end="2585:55">1</literal> <operator pos:start="2585:57" pos:end="2585:58">&lt;&lt;</operator> <name pos:start="2585:60" pos:end="2585:64">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2587:21" pos:end="2591:43"><expr pos:start="2587:21" pos:end="2591:42"><call pos:start="2587:21" pos:end="2591:42"><name pos:start="2587:21" pos:end="2587:39">tcg_gen_brcondi_i32</name><argument_list pos:start="2587:40" pos:end="2591:42">(

                            <argument pos:start="2589:29" pos:end="2589:63"><expr pos:start="2589:29" pos:end="2589:63"><ternary pos:start="2589:29" pos:end="2589:63"><condition pos:start="2589:29" pos:end="2589:37"><expr pos:start="2589:29" pos:end="2589:35"><name pos:start="2589:29" pos:end="2589:31">OP2</name> <operator pos:start="2589:33" pos:end="2589:33">&amp;</operator> <literal type="number" pos:start="2589:35" pos:end="2589:35">1</literal></expr> ?</condition><then pos:start="2589:39" pos:end="2589:49"> <expr pos:start="2589:39" pos:end="2589:49"><name pos:start="2589:39" pos:end="2589:49">TCG_COND_EQ</name></expr> </then><else pos:start="2589:51" pos:end="2589:63">: <expr pos:start="2589:53" pos:end="2589:63"><name pos:start="2589:53" pos:end="2589:63">TCG_COND_NE</name></expr></else></ternary></expr></argument>,

                            <argument pos:start="2591:29" pos:end="2591:31"><expr pos:start="2591:29" pos:end="2591:31"><name pos:start="2591:29" pos:end="2591:31">tmp</name></expr></argument>, <argument pos:start="2591:34" pos:end="2591:34"><expr pos:start="2591:34" pos:end="2591:34"><literal type="number" pos:start="2591:34" pos:end="2591:34">0</literal></expr></argument>, <argument pos:start="2591:37" pos:end="2591:41"><expr pos:start="2591:37" pos:end="2591:41"><name pos:start="2591:37" pos:end="2591:41">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2593:21" pos:end="2593:66"><expr pos:start="2593:21" pos:end="2593:65"><call pos:start="2593:21" pos:end="2593:65"><name pos:start="2593:21" pos:end="2593:35">tcg_gen_mov_i32</name><argument_list pos:start="2593:36" pos:end="2593:65">(<argument pos:start="2593:37" pos:end="2593:49"><expr pos:start="2593:37" pos:end="2593:49"><name pos:start="2593:37" pos:end="2593:49"><name pos:start="2593:37" pos:end="2593:42">cpu_FR</name><index pos:start="2593:43" pos:end="2593:49">[<expr pos:start="2593:44" pos:end="2593:48"><name pos:start="2593:44" pos:end="2593:48">RRR_R</name></expr>]</index></name></expr></argument>, <argument pos:start="2593:52" pos:end="2593:64"><expr pos:start="2593:52" pos:end="2593:64"><name pos:start="2593:52" pos:end="2593:64"><name pos:start="2593:52" pos:end="2593:57">cpu_FR</name><index pos:start="2593:58" pos:end="2593:64">[<expr pos:start="2593:59" pos:end="2593:63"><name pos:start="2593:59" pos:end="2593:63">RRR_S</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2595:21" pos:end="2595:41"><expr pos:start="2595:21" pos:end="2595:40"><call pos:start="2595:21" pos:end="2595:40"><name pos:start="2595:21" pos:end="2595:33">gen_set_label</name><argument_list pos:start="2595:34" pos:end="2595:40">(<argument pos:start="2595:35" pos:end="2595:39"><expr pos:start="2595:35" pos:end="2595:39"><name pos:start="2595:35" pos:end="2595:39">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2597:21" pos:end="2597:39"><expr pos:start="2597:21" pos:end="2597:38"><call pos:start="2597:21" pos:end="2597:38"><name pos:start="2597:21" pos:end="2597:33">tcg_temp_free</name><argument_list pos:start="2597:34" pos:end="2597:38">(<argument pos:start="2597:35" pos:end="2597:37"><expr pos:start="2597:35" pos:end="2597:37"><name pos:start="2597:35" pos:end="2597:37">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block>

                <break pos:start="2601:17" pos:end="2601:22">break;</break>



            <default pos:start="2605:13" pos:end="2605:20">default:</default> <comment type="block" pos:start="2605:22" pos:end="2605:33">/*reserved*/</comment>

                <expr_stmt pos:start="2607:17" pos:end="2607:27"><expr pos:start="2607:17" pos:end="2607:26"><call pos:start="2607:17" pos:end="2607:26"><name pos:start="2607:17" pos:end="2607:24">RESERVED</name><argument_list pos:start="2607:25" pos:end="2607:26">()</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2609:17" pos:end="2609:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="2613:13" pos:end="2613:18">break;</break>



        <default pos:start="2617:9" pos:end="2617:16">default:</default> <comment type="block" pos:start="2617:18" pos:end="2617:29">/*reserved*/</comment>

            <expr_stmt pos:start="2619:13" pos:end="2619:23"><expr pos:start="2619:13" pos:end="2619:22"><call pos:start="2619:13" pos:end="2619:22"><name pos:start="2619:13" pos:end="2619:20">RESERVED</name><argument_list pos:start="2619:21" pos:end="2619:22">()</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2621:13" pos:end="2621:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="2625:9" pos:end="2625:14">break;</break>



    <case pos:start="2629:5" pos:end="2629:11">case <expr pos:start="2629:10" pos:end="2629:10"><literal type="number" pos:start="2629:10" pos:end="2629:10">1</literal></expr>:</case> <comment type="block" pos:start="2629:13" pos:end="2629:20">/*L32R*/</comment>

        <expr_stmt pos:start="2631:9" pos:end="2631:37"><expr pos:start="2631:9" pos:end="2631:36"><call pos:start="2631:9" pos:end="2631:36"><name pos:start="2631:9" pos:end="2631:25">gen_window_check1</name><argument_list pos:start="2631:26" pos:end="2631:36">(<argument pos:start="2631:27" pos:end="2631:28"><expr pos:start="2631:27" pos:end="2631:28"><name pos:start="2631:27" pos:end="2631:28">dc</name></expr></argument>, <argument pos:start="2631:31" pos:end="2631:35"><expr pos:start="2631:31" pos:end="2631:35"><name pos:start="2631:31" pos:end="2631:35">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="2633:9" pos:end="2655:9">{<block_content pos:start="2635:13" pos:end="2653:31">

            <decl_stmt pos:start="2635:13" pos:end="2641:54"><decl pos:start="2635:13" pos:end="2641:53"><type pos:start="2635:13" pos:end="2635:20"><name pos:start="2635:13" pos:end="2635:20">TCGv_i32</name></type> <name pos:start="2635:22" pos:end="2635:24">tmp</name> <init pos:start="2635:26" pos:end="2641:53">= <expr pos:start="2635:28" pos:end="2641:53"><call pos:start="2635:28" pos:end="2641:53"><name pos:start="2635:28" pos:end="2635:40">tcg_const_i32</name><argument_list pos:start="2635:41" pos:end="2641:53">(

                    <argument pos:start="2637:21" pos:end="2641:52"><expr pos:start="2637:21" pos:end="2641:52"><operator pos:start="2637:21" pos:end="2637:21">(</operator><ternary pos:start="2637:22" pos:end="2639:44"><condition pos:start="2637:22" pos:end="2637:62"><expr pos:start="2637:22" pos:end="2637:60"><operator pos:start="2637:22" pos:end="2637:22">(</operator><name pos:start="2637:23" pos:end="2637:35"><name pos:start="2637:23" pos:end="2637:24">dc</name><operator pos:start="2637:25" pos:end="2637:26">-&gt;</operator><name pos:start="2637:27" pos:end="2637:28">tb</name><operator pos:start="2637:29" pos:end="2637:30">-&gt;</operator><name pos:start="2637:31" pos:end="2637:35">flags</name></name> <operator pos:start="2637:37" pos:end="2637:37">&amp;</operator> <name pos:start="2637:39" pos:end="2637:59">XTENSA_TBFLAG_LITBASE</name><operator pos:start="2637:60" pos:end="2637:60">)</operator></expr> ?</condition><then pos:start="2639:22" pos:end="2639:22">

                     <expr pos:start="2639:22" pos:end="2639:22"><literal type="number" pos:start="2639:22" pos:end="2639:22">0</literal></expr> </then><else pos:start="2639:24" pos:end="2639:44">: <expr pos:start="2639:26" pos:end="2639:44"><operator pos:start="2639:26" pos:end="2639:26">(</operator><operator pos:start="2639:27" pos:end="2639:27">(</operator><name pos:start="2639:28" pos:end="2639:33"><name pos:start="2639:28" pos:end="2639:29">dc</name><operator pos:start="2639:30" pos:end="2639:31">-&gt;</operator><name pos:start="2639:32" pos:end="2639:33">pc</name></name> <operator pos:start="2639:35" pos:end="2639:35">+</operator> <literal type="number" pos:start="2639:37" pos:end="2639:37">3</literal><operator pos:start="2639:38" pos:end="2639:38">)</operator> <operator pos:start="2639:40" pos:end="2639:40">&amp;</operator> <operator pos:start="2639:42" pos:end="2639:42">~</operator><literal type="number" pos:start="2639:43" pos:end="2639:43">3</literal><operator pos:start="2639:44" pos:end="2639:44">)</operator></expr></else></ternary><operator pos:start="2639:45" pos:end="2639:45">)</operator> <operator pos:start="2639:47" pos:end="2639:47">+</operator>

                    <operator pos:start="2641:21" pos:end="2641:21">(</operator><literal type="number" pos:start="2641:22" pos:end="2641:31">0xfffc0000</literal> <operator pos:start="2641:33" pos:end="2641:33">|</operator> <operator pos:start="2641:35" pos:end="2641:35">(</operator><name pos:start="2641:36" pos:end="2641:45">RI16_IMM16</name> <operator pos:start="2641:47" pos:end="2641:48">&lt;&lt;</operator> <literal type="number" pos:start="2641:50" pos:end="2641:50">2</literal><operator pos:start="2641:51" pos:end="2641:51">)</operator><operator pos:start="2641:52" pos:end="2641:52">)</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="2645:13" pos:end="2649:13"><if pos:start="2645:13" pos:end="2649:13">if <condition pos:start="2645:16" pos:end="2645:54">(<expr pos:start="2645:17" pos:end="2645:53"><name pos:start="2645:17" pos:end="2645:29"><name pos:start="2645:17" pos:end="2645:18">dc</name><operator pos:start="2645:19" pos:end="2645:20">-&gt;</operator><name pos:start="2645:21" pos:end="2645:22">tb</name><operator pos:start="2645:23" pos:end="2645:24">-&gt;</operator><name pos:start="2645:25" pos:end="2645:29">flags</name></name> <operator pos:start="2645:31" pos:end="2645:31">&amp;</operator> <name pos:start="2645:33" pos:end="2645:53">XTENSA_TBFLAG_LITBASE</name></expr>)</condition> <block pos:start="2645:56" pos:end="2649:13">{<block_content pos:start="2647:17" pos:end="2647:55">

                <expr_stmt pos:start="2647:17" pos:end="2647:55"><expr pos:start="2647:17" pos:end="2647:54"><call pos:start="2647:17" pos:end="2647:54"><name pos:start="2647:17" pos:end="2647:31">tcg_gen_add_i32</name><argument_list pos:start="2647:32" pos:end="2647:54">(<argument pos:start="2647:33" pos:end="2647:35"><expr pos:start="2647:33" pos:end="2647:35"><name pos:start="2647:33" pos:end="2647:35">tmp</name></expr></argument>, <argument pos:start="2647:38" pos:end="2647:40"><expr pos:start="2647:38" pos:end="2647:40"><name pos:start="2647:38" pos:end="2647:40">tmp</name></expr></argument>, <argument pos:start="2647:43" pos:end="2647:53"><expr pos:start="2647:43" pos:end="2647:53"><name pos:start="2647:43" pos:end="2647:53"><name pos:start="2647:43" pos:end="2647:44">dc</name><operator pos:start="2647:45" pos:end="2647:46">-&gt;</operator><name pos:start="2647:47" pos:end="2647:53">litbase</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="2651:13" pos:end="2651:61"><expr pos:start="2651:13" pos:end="2651:60"><call pos:start="2651:13" pos:end="2651:60"><name pos:start="2651:13" pos:end="2651:30">tcg_gen_qemu_ld32u</name><argument_list pos:start="2651:31" pos:end="2651:60">(<argument pos:start="2651:32" pos:end="2651:43"><expr pos:start="2651:32" pos:end="2651:43"><name pos:start="2651:32" pos:end="2651:43"><name pos:start="2651:32" pos:end="2651:36">cpu_R</name><index pos:start="2651:37" pos:end="2651:43">[<expr pos:start="2651:38" pos:end="2651:42"><name pos:start="2651:38" pos:end="2651:42">RRR_T</name></expr>]</index></name></expr></argument>, <argument pos:start="2651:46" pos:end="2651:48"><expr pos:start="2651:46" pos:end="2651:48"><name pos:start="2651:46" pos:end="2651:48">tmp</name></expr></argument>, <argument pos:start="2651:51" pos:end="2651:59"><expr pos:start="2651:51" pos:end="2651:59"><name pos:start="2651:51" pos:end="2651:59"><name pos:start="2651:51" pos:end="2651:52">dc</name><operator pos:start="2651:53" pos:end="2651:54">-&gt;</operator><name pos:start="2651:55" pos:end="2651:59">cring</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2653:13" pos:end="2653:31"><expr pos:start="2653:13" pos:end="2653:30"><call pos:start="2653:13" pos:end="2653:30"><name pos:start="2653:13" pos:end="2653:25">tcg_temp_free</name><argument_list pos:start="2653:26" pos:end="2653:30">(<argument pos:start="2653:27" pos:end="2653:29"><expr pos:start="2653:27" pos:end="2653:29"><name pos:start="2653:27" pos:end="2653:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="2657:9" pos:end="2657:14">break;</break>



    <case pos:start="2661:5" pos:end="2682:0">case <expr pos:start="2661:10" pos:end="2661:10"><literal type="number" pos:start="2661:10" pos:end="2661:10">2</literal></expr>:</case> <comment type="block" pos:start="2661:13" pos:end="2661:20">/*LSAI*/</comment>

<cpp:define pos:start="2663:1" pos:end="2681:19">#<cpp:directive pos:start="2663:2" pos:end="2663:7">define</cpp:directive> <cpp:macro pos:start="2663:9" pos:end="2663:35"><name pos:start="2663:9" pos:end="2663:22">gen_load_store</name><parameter_list pos:start="2663:23" pos:end="2663:35">(<parameter pos:start="2663:24" pos:end="2663:27"><type pos:start="2663:24" pos:end="2663:27"><name pos:start="2663:24" pos:end="2663:27">type</name></type></parameter>, <parameter pos:start="2663:30" pos:end="2663:34"><type pos:start="2663:30" pos:end="2663:34"><name pos:start="2663:30" pos:end="2663:34">shift</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="2663:37" pos:end="2681:19">do { \

            TCGv_i32 addr = tcg_temp_new_i32(); \

            gen_window_check2(dc, RRI8_S, RRI8_T); \

            tcg_gen_addi_i32(addr, cpu_R[RRI8_S], RRI8_IMM8 &lt;&lt; shift); \

            if (shift) { \

                gen_load_store_alignment(dc, shift, addr, false); \

            } \

            tcg_gen_qemu_##type(cpu_R[RRI8_T], addr, dc-&gt;cring); \

            tcg_temp_free(addr); \

        } while (0)</cpp:value></cpp:define>



        <switch pos:start="2685:9" pos:end="3077:9">switch <condition pos:start="2685:16" pos:end="2685:23">(<expr pos:start="2685:17" pos:end="2685:22"><name pos:start="2685:17" pos:end="2685:22">RRI8_R</name></expr>)</condition> <block pos:start="2685:25" pos:end="3077:9">{<block_content pos:start="2687:9" pos:end="3075:18">

        <case pos:start="2687:9" pos:end="2687:15">case <expr pos:start="2687:14" pos:end="2687:14"><literal type="number" pos:start="2687:14" pos:end="2687:14">0</literal></expr>:</case> <comment type="block" pos:start="2687:17" pos:end="2687:24">/*L8UI*/</comment>

            <expr_stmt pos:start="2689:13" pos:end="2689:36"><expr pos:start="2689:13" pos:end="2689:35"><call pos:start="2689:13" pos:end="2689:35"><name pos:start="2689:13" pos:end="2689:26">gen_load_store</name><argument_list pos:start="2689:27" pos:end="2689:35">(<argument pos:start="2689:28" pos:end="2689:31"><expr pos:start="2689:28" pos:end="2689:31"><name pos:start="2689:28" pos:end="2689:31">ld8u</name></expr></argument>, <argument pos:start="2689:34" pos:end="2689:34"><expr pos:start="2689:34" pos:end="2689:34"><literal type="number" pos:start="2689:34" pos:end="2689:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2691:13" pos:end="2691:18">break;</break>



        <case pos:start="2695:9" pos:end="2695:15">case <expr pos:start="2695:14" pos:end="2695:14"><literal type="number" pos:start="2695:14" pos:end="2695:14">1</literal></expr>:</case> <comment type="block" pos:start="2695:17" pos:end="2695:25">/*L16UI*/</comment>

            <expr_stmt pos:start="2697:13" pos:end="2697:37"><expr pos:start="2697:13" pos:end="2697:36"><call pos:start="2697:13" pos:end="2697:36"><name pos:start="2697:13" pos:end="2697:26">gen_load_store</name><argument_list pos:start="2697:27" pos:end="2697:36">(<argument pos:start="2697:28" pos:end="2697:32"><expr pos:start="2697:28" pos:end="2697:32"><name pos:start="2697:28" pos:end="2697:32">ld16u</name></expr></argument>, <argument pos:start="2697:35" pos:end="2697:35"><expr pos:start="2697:35" pos:end="2697:35"><literal type="number" pos:start="2697:35" pos:end="2697:35">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2699:13" pos:end="2699:18">break;</break>



        <case pos:start="2703:9" pos:end="2703:15">case <expr pos:start="2703:14" pos:end="2703:14"><literal type="number" pos:start="2703:14" pos:end="2703:14">2</literal></expr>:</case> <comment type="block" pos:start="2703:17" pos:end="2703:24">/*L32I*/</comment>

            <expr_stmt pos:start="2705:13" pos:end="2705:37"><expr pos:start="2705:13" pos:end="2705:36"><call pos:start="2705:13" pos:end="2705:36"><name pos:start="2705:13" pos:end="2705:26">gen_load_store</name><argument_list pos:start="2705:27" pos:end="2705:36">(<argument pos:start="2705:28" pos:end="2705:32"><expr pos:start="2705:28" pos:end="2705:32"><name pos:start="2705:28" pos:end="2705:32">ld32u</name></expr></argument>, <argument pos:start="2705:35" pos:end="2705:35"><expr pos:start="2705:35" pos:end="2705:35"><literal type="number" pos:start="2705:35" pos:end="2705:35">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2707:13" pos:end="2707:18">break;</break>



        <case pos:start="2711:9" pos:end="2711:15">case <expr pos:start="2711:14" pos:end="2711:14"><literal type="number" pos:start="2711:14" pos:end="2711:14">4</literal></expr>:</case> <comment type="block" pos:start="2711:17" pos:end="2711:23">/*S8I*/</comment>

            <expr_stmt pos:start="2713:13" pos:end="2713:35"><expr pos:start="2713:13" pos:end="2713:34"><call pos:start="2713:13" pos:end="2713:34"><name pos:start="2713:13" pos:end="2713:26">gen_load_store</name><argument_list pos:start="2713:27" pos:end="2713:34">(<argument pos:start="2713:28" pos:end="2713:30"><expr pos:start="2713:28" pos:end="2713:30"><name pos:start="2713:28" pos:end="2713:30">st8</name></expr></argument>, <argument pos:start="2713:33" pos:end="2713:33"><expr pos:start="2713:33" pos:end="2713:33"><literal type="number" pos:start="2713:33" pos:end="2713:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2715:13" pos:end="2715:18">break;</break>



        <case pos:start="2719:9" pos:end="2719:15">case <expr pos:start="2719:14" pos:end="2719:14"><literal type="number" pos:start="2719:14" pos:end="2719:14">5</literal></expr>:</case> <comment type="block" pos:start="2719:17" pos:end="2719:24">/*S16I*/</comment>

            <expr_stmt pos:start="2721:13" pos:end="2721:36"><expr pos:start="2721:13" pos:end="2721:35"><call pos:start="2721:13" pos:end="2721:35"><name pos:start="2721:13" pos:end="2721:26">gen_load_store</name><argument_list pos:start="2721:27" pos:end="2721:35">(<argument pos:start="2721:28" pos:end="2721:31"><expr pos:start="2721:28" pos:end="2721:31"><name pos:start="2721:28" pos:end="2721:31">st16</name></expr></argument>, <argument pos:start="2721:34" pos:end="2721:34"><expr pos:start="2721:34" pos:end="2721:34"><literal type="number" pos:start="2721:34" pos:end="2721:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2723:13" pos:end="2723:18">break;</break>



        <case pos:start="2727:9" pos:end="2727:15">case <expr pos:start="2727:14" pos:end="2727:14"><literal type="number" pos:start="2727:14" pos:end="2727:14">6</literal></expr>:</case> <comment type="block" pos:start="2727:17" pos:end="2727:24">/*S32I*/</comment>

            <expr_stmt pos:start="2729:13" pos:end="2729:36"><expr pos:start="2729:13" pos:end="2729:35"><call pos:start="2729:13" pos:end="2729:35"><name pos:start="2729:13" pos:end="2729:26">gen_load_store</name><argument_list pos:start="2729:27" pos:end="2729:35">(<argument pos:start="2729:28" pos:end="2729:31"><expr pos:start="2729:28" pos:end="2729:31"><name pos:start="2729:28" pos:end="2729:31">st32</name></expr></argument>, <argument pos:start="2729:34" pos:end="2729:34"><expr pos:start="2729:34" pos:end="2729:34"><literal type="number" pos:start="2729:34" pos:end="2729:34">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2731:13" pos:end="2731:18">break;</break>



        <case pos:start="2735:9" pos:end="2735:15">case <expr pos:start="2735:14" pos:end="2735:14"><literal type="number" pos:start="2735:14" pos:end="2735:14">7</literal></expr>:</case> <comment type="block" pos:start="2735:17" pos:end="2735:26">/*CACHEc*/</comment>

            <if_stmt pos:start="2737:13" pos:end="2741:13"><if pos:start="2737:13" pos:end="2741:13">if <condition pos:start="2737:16" pos:end="2737:27">(<expr pos:start="2737:17" pos:end="2737:26"><name pos:start="2737:17" pos:end="2737:22">RRI8_T</name> <operator pos:start="2737:24" pos:end="2737:24">&lt;</operator> <literal type="number" pos:start="2737:26" pos:end="2737:26">8</literal></expr>)</condition> <block pos:start="2737:29" pos:end="2741:13">{<block_content pos:start="2739:17" pos:end="2739:49">

                <expr_stmt pos:start="2739:17" pos:end="2739:49"><expr pos:start="2739:17" pos:end="2739:48"><call pos:start="2739:17" pos:end="2739:48"><name pos:start="2739:17" pos:end="2739:26">HAS_OPTION</name><argument_list pos:start="2739:27" pos:end="2739:48">(<argument pos:start="2739:28" pos:end="2739:47"><expr pos:start="2739:28" pos:end="2739:47"><name pos:start="2739:28" pos:end="2739:47">XTENSA_OPTION_DCACHE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <switch pos:start="2745:13" pos:end="2923:13">switch <condition pos:start="2745:20" pos:end="2745:27">(<expr pos:start="2745:21" pos:end="2745:26"><name pos:start="2745:21" pos:end="2745:26">RRI8_T</name></expr>)</condition> <block pos:start="2745:29" pos:end="2923:13">{<block_content pos:start="2747:13" pos:end="2921:22">

            <case pos:start="2747:13" pos:end="2747:19">case <expr pos:start="2747:18" pos:end="2747:18"><literal type="number" pos:start="2747:18" pos:end="2747:18">0</literal></expr>:</case> <comment type="block" pos:start="2747:21" pos:end="2747:29">/*DPFRc*/</comment>

                <break pos:start="2749:17" pos:end="2749:22">break;</break>



            <case pos:start="2753:13" pos:end="2753:19">case <expr pos:start="2753:18" pos:end="2753:18"><literal type="number" pos:start="2753:18" pos:end="2753:18">1</literal></expr>:</case> <comment type="block" pos:start="2753:21" pos:end="2753:29">/*DPFWc*/</comment>

                <break pos:start="2755:17" pos:end="2755:22">break;</break>



            <case pos:start="2759:13" pos:end="2759:19">case <expr pos:start="2759:18" pos:end="2759:18"><literal type="number" pos:start="2759:18" pos:end="2759:18">2</literal></expr>:</case> <comment type="block" pos:start="2759:21" pos:end="2759:30">/*DPFROc*/</comment>

                <break pos:start="2761:17" pos:end="2761:22">break;</break>



            <case pos:start="2765:13" pos:end="2765:19">case <expr pos:start="2765:18" pos:end="2765:18"><literal type="number" pos:start="2765:18" pos:end="2765:18">3</literal></expr>:</case> <comment type="block" pos:start="2765:21" pos:end="2765:30">/*DPFWOc*/</comment>

                <break pos:start="2767:17" pos:end="2767:22">break;</break>



            <case pos:start="2771:13" pos:end="2771:19">case <expr pos:start="2771:18" pos:end="2771:18"><literal type="number" pos:start="2771:18" pos:end="2771:18">4</literal></expr>:</case> <comment type="block" pos:start="2771:21" pos:end="2771:29">/*DHWBc*/</comment>

                <break pos:start="2773:17" pos:end="2773:22">break;</break>



            <case pos:start="2777:13" pos:end="2777:19">case <expr pos:start="2777:18" pos:end="2777:18"><literal type="number" pos:start="2777:18" pos:end="2777:18">5</literal></expr>:</case> <comment type="block" pos:start="2777:21" pos:end="2777:30">/*DHWBIc*/</comment>

                <break pos:start="2779:17" pos:end="2779:22">break;</break>



            <case pos:start="2783:13" pos:end="2783:19">case <expr pos:start="2783:18" pos:end="2783:18"><literal type="number" pos:start="2783:18" pos:end="2783:18">6</literal></expr>:</case> <comment type="block" pos:start="2783:21" pos:end="2783:28">/*DHIc*/</comment>

                <break pos:start="2785:17" pos:end="2785:22">break;</break>



            <case pos:start="2789:13" pos:end="2789:19">case <expr pos:start="2789:18" pos:end="2789:18"><literal type="number" pos:start="2789:18" pos:end="2789:18">7</literal></expr>:</case> <comment type="block" pos:start="2789:21" pos:end="2789:28">/*DIIc*/</comment>

                <break pos:start="2791:17" pos:end="2791:22">break;</break>



            <case pos:start="2795:13" pos:end="2795:19">case <expr pos:start="2795:18" pos:end="2795:18"><literal type="number" pos:start="2795:18" pos:end="2795:18">8</literal></expr>:</case> <comment type="block" pos:start="2795:21" pos:end="2795:28">/*DCEc*/</comment>

                <switch pos:start="2797:17" pos:end="2847:17">switch <condition pos:start="2797:24" pos:end="2797:28">(<expr pos:start="2797:25" pos:end="2797:27"><name pos:start="2797:25" pos:end="2797:27">OP1</name></expr>)</condition> <block pos:start="2797:30" pos:end="2847:17">{<block_content pos:start="2799:17" pos:end="2843:26">

                <case pos:start="2799:17" pos:end="2799:23">case <expr pos:start="2799:22" pos:end="2799:22"><literal type="number" pos:start="2799:22" pos:end="2799:22">0</literal></expr>:</case> <comment type="block" pos:start="2799:25" pos:end="2799:33">/*DPFLl*/</comment>

                    <expr_stmt pos:start="2801:21" pos:end="2801:64"><expr pos:start="2801:21" pos:end="2801:63"><call pos:start="2801:21" pos:end="2801:63"><name pos:start="2801:21" pos:end="2801:30">HAS_OPTION</name><argument_list pos:start="2801:31" pos:end="2801:63">(<argument pos:start="2801:32" pos:end="2801:62"><expr pos:start="2801:32" pos:end="2801:62"><name pos:start="2801:32" pos:end="2801:62">XTENSA_OPTION_DCACHE_INDEX_LOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2803:21" pos:end="2803:26">break;</break>



                <case pos:start="2807:17" pos:end="2807:23">case <expr pos:start="2807:22" pos:end="2807:22"><literal type="number" pos:start="2807:22" pos:end="2807:22">2</literal></expr>:</case> <comment type="block" pos:start="2807:25" pos:end="2807:32">/*DHUl*/</comment>

                    <expr_stmt pos:start="2809:21" pos:end="2809:64"><expr pos:start="2809:21" pos:end="2809:63"><call pos:start="2809:21" pos:end="2809:63"><name pos:start="2809:21" pos:end="2809:30">HAS_OPTION</name><argument_list pos:start="2809:31" pos:end="2809:63">(<argument pos:start="2809:32" pos:end="2809:62"><expr pos:start="2809:32" pos:end="2809:62"><name pos:start="2809:32" pos:end="2809:62">XTENSA_OPTION_DCACHE_INDEX_LOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2811:21" pos:end="2811:26">break;</break>



                <case pos:start="2815:17" pos:end="2815:23">case <expr pos:start="2815:22" pos:end="2815:22"><literal type="number" pos:start="2815:22" pos:end="2815:22">3</literal></expr>:</case> <comment type="block" pos:start="2815:25" pos:end="2815:32">/*DIUl*/</comment>

                    <expr_stmt pos:start="2817:21" pos:end="2817:64"><expr pos:start="2817:21" pos:end="2817:63"><call pos:start="2817:21" pos:end="2817:63"><name pos:start="2817:21" pos:end="2817:30">HAS_OPTION</name><argument_list pos:start="2817:31" pos:end="2817:63">(<argument pos:start="2817:32" pos:end="2817:62"><expr pos:start="2817:32" pos:end="2817:62"><name pos:start="2817:32" pos:end="2817:62">XTENSA_OPTION_DCACHE_INDEX_LOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2819:21" pos:end="2819:26">break;</break>



                <case pos:start="2823:17" pos:end="2823:23">case <expr pos:start="2823:22" pos:end="2823:22"><literal type="number" pos:start="2823:22" pos:end="2823:22">4</literal></expr>:</case> <comment type="block" pos:start="2823:25" pos:end="2823:33">/*DIWBc*/</comment>

                    <expr_stmt pos:start="2825:21" pos:end="2825:53"><expr pos:start="2825:21" pos:end="2825:52"><call pos:start="2825:21" pos:end="2825:52"><name pos:start="2825:21" pos:end="2825:30">HAS_OPTION</name><argument_list pos:start="2825:31" pos:end="2825:52">(<argument pos:start="2825:32" pos:end="2825:51"><expr pos:start="2825:32" pos:end="2825:51"><name pos:start="2825:32" pos:end="2825:51">XTENSA_OPTION_DCACHE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2827:21" pos:end="2827:26">break;</break>



                <case pos:start="2831:17" pos:end="2831:23">case <expr pos:start="2831:22" pos:end="2831:22"><literal type="number" pos:start="2831:22" pos:end="2831:22">5</literal></expr>:</case> <comment type="block" pos:start="2831:25" pos:end="2831:34">/*DIWBIc*/</comment>

                    <expr_stmt pos:start="2833:21" pos:end="2833:53"><expr pos:start="2833:21" pos:end="2833:52"><call pos:start="2833:21" pos:end="2833:52"><name pos:start="2833:21" pos:end="2833:30">HAS_OPTION</name><argument_list pos:start="2833:31" pos:end="2833:52">(<argument pos:start="2833:32" pos:end="2833:51"><expr pos:start="2833:32" pos:end="2833:51"><name pos:start="2833:32" pos:end="2833:51">XTENSA_OPTION_DCACHE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2835:21" pos:end="2835:26">break;</break>



                <default pos:start="2839:17" pos:end="2839:24">default:</default> <comment type="block" pos:start="2839:26" pos:end="2839:37">/*reserved*/</comment>

                    <expr_stmt pos:start="2841:21" pos:end="2841:31"><expr pos:start="2841:21" pos:end="2841:30"><call pos:start="2841:21" pos:end="2841:30"><name pos:start="2841:21" pos:end="2841:28">RESERVED</name><argument_list pos:start="2841:29" pos:end="2841:30">()</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2843:21" pos:end="2843:26">break;</break>



                </block_content>}</block></switch>

                <break pos:start="2849:17" pos:end="2849:22">break;</break>



            <case pos:start="2853:13" pos:end="2853:20">case <expr pos:start="2853:18" pos:end="2853:19"><literal type="number" pos:start="2853:18" pos:end="2853:19">12</literal></expr>:</case> <comment type="block" pos:start="2853:22" pos:end="2853:29">/*IPFc*/</comment>

                <expr_stmt pos:start="2855:17" pos:end="2855:49"><expr pos:start="2855:17" pos:end="2855:48"><call pos:start="2855:17" pos:end="2855:48"><name pos:start="2855:17" pos:end="2855:26">HAS_OPTION</name><argument_list pos:start="2855:27" pos:end="2855:48">(<argument pos:start="2855:28" pos:end="2855:47"><expr pos:start="2855:28" pos:end="2855:47"><name pos:start="2855:28" pos:end="2855:47">XTENSA_OPTION_ICACHE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2857:17" pos:end="2857:22">break;</break>



            <case pos:start="2861:13" pos:end="2861:20">case <expr pos:start="2861:18" pos:end="2861:19"><literal type="number" pos:start="2861:18" pos:end="2861:19">13</literal></expr>:</case> <comment type="block" pos:start="2861:22" pos:end="2861:29">/*ICEc*/</comment>

                <switch pos:start="2863:17" pos:end="2895:17">switch <condition pos:start="2863:24" pos:end="2863:28">(<expr pos:start="2863:25" pos:end="2863:27"><name pos:start="2863:25" pos:end="2863:27">OP1</name></expr>)</condition> <block pos:start="2863:30" pos:end="2895:17">{<block_content pos:start="2865:17" pos:end="2893:26">

                <case pos:start="2865:17" pos:end="2865:23">case <expr pos:start="2865:22" pos:end="2865:22"><literal type="number" pos:start="2865:22" pos:end="2865:22">0</literal></expr>:</case> <comment type="block" pos:start="2865:25" pos:end="2865:33">/*IPFLl*/</comment>

                    <expr_stmt pos:start="2867:21" pos:end="2867:64"><expr pos:start="2867:21" pos:end="2867:63"><call pos:start="2867:21" pos:end="2867:63"><name pos:start="2867:21" pos:end="2867:30">HAS_OPTION</name><argument_list pos:start="2867:31" pos:end="2867:63">(<argument pos:start="2867:32" pos:end="2867:62"><expr pos:start="2867:32" pos:end="2867:62"><name pos:start="2867:32" pos:end="2867:62">XTENSA_OPTION_ICACHE_INDEX_LOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2869:21" pos:end="2869:26">break;</break>



                <case pos:start="2873:17" pos:end="2873:23">case <expr pos:start="2873:22" pos:end="2873:22"><literal type="number" pos:start="2873:22" pos:end="2873:22">2</literal></expr>:</case> <comment type="block" pos:start="2873:25" pos:end="2873:32">/*IHUl*/</comment>

                    <expr_stmt pos:start="2875:21" pos:end="2875:64"><expr pos:start="2875:21" pos:end="2875:63"><call pos:start="2875:21" pos:end="2875:63"><name pos:start="2875:21" pos:end="2875:30">HAS_OPTION</name><argument_list pos:start="2875:31" pos:end="2875:63">(<argument pos:start="2875:32" pos:end="2875:62"><expr pos:start="2875:32" pos:end="2875:62"><name pos:start="2875:32" pos:end="2875:62">XTENSA_OPTION_ICACHE_INDEX_LOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2877:21" pos:end="2877:26">break;</break>



                <case pos:start="2881:17" pos:end="2881:23">case <expr pos:start="2881:22" pos:end="2881:22"><literal type="number" pos:start="2881:22" pos:end="2881:22">3</literal></expr>:</case> <comment type="block" pos:start="2881:25" pos:end="2881:32">/*IIUl*/</comment>

                    <expr_stmt pos:start="2883:21" pos:end="2883:64"><expr pos:start="2883:21" pos:end="2883:63"><call pos:start="2883:21" pos:end="2883:63"><name pos:start="2883:21" pos:end="2883:30">HAS_OPTION</name><argument_list pos:start="2883:31" pos:end="2883:63">(<argument pos:start="2883:32" pos:end="2883:62"><expr pos:start="2883:32" pos:end="2883:62"><name pos:start="2883:32" pos:end="2883:62">XTENSA_OPTION_ICACHE_INDEX_LOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2885:21" pos:end="2885:26">break;</break>



                <default pos:start="2889:17" pos:end="2889:24">default:</default> <comment type="block" pos:start="2889:26" pos:end="2889:37">/*reserved*/</comment>

                    <expr_stmt pos:start="2891:21" pos:end="2891:31"><expr pos:start="2891:21" pos:end="2891:30"><call pos:start="2891:21" pos:end="2891:30"><name pos:start="2891:21" pos:end="2891:28">RESERVED</name><argument_list pos:start="2891:29" pos:end="2891:30">()</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2893:21" pos:end="2893:26">break;</break>

                </block_content>}</block></switch>

                <break pos:start="2897:17" pos:end="2897:22">break;</break>



            <case pos:start="2901:13" pos:end="2901:20">case <expr pos:start="2901:18" pos:end="2901:19"><literal type="number" pos:start="2901:18" pos:end="2901:19">14</literal></expr>:</case> <comment type="block" pos:start="2901:22" pos:end="2901:29">/*IHIc*/</comment>

                <expr_stmt pos:start="2903:17" pos:end="2903:49"><expr pos:start="2903:17" pos:end="2903:48"><call pos:start="2903:17" pos:end="2903:48"><name pos:start="2903:17" pos:end="2903:26">HAS_OPTION</name><argument_list pos:start="2903:27" pos:end="2903:48">(<argument pos:start="2903:28" pos:end="2903:47"><expr pos:start="2903:28" pos:end="2903:47"><name pos:start="2903:28" pos:end="2903:47">XTENSA_OPTION_ICACHE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2905:17" pos:end="2905:22">break;</break>



            <case pos:start="2909:13" pos:end="2909:20">case <expr pos:start="2909:18" pos:end="2909:19"><literal type="number" pos:start="2909:18" pos:end="2909:19">15</literal></expr>:</case> <comment type="block" pos:start="2909:22" pos:end="2909:29">/*IIIc*/</comment>

                <expr_stmt pos:start="2911:17" pos:end="2911:49"><expr pos:start="2911:17" pos:end="2911:48"><call pos:start="2911:17" pos:end="2911:48"><name pos:start="2911:17" pos:end="2911:26">HAS_OPTION</name><argument_list pos:start="2911:27" pos:end="2911:48">(<argument pos:start="2911:28" pos:end="2911:47"><expr pos:start="2911:28" pos:end="2911:47"><name pos:start="2911:28" pos:end="2911:47">XTENSA_OPTION_ICACHE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2913:17" pos:end="2913:22">break;</break>



            <default pos:start="2917:13" pos:end="2917:20">default:</default> <comment type="block" pos:start="2917:22" pos:end="2917:33">/*reserved*/</comment>

                <expr_stmt pos:start="2919:17" pos:end="2919:27"><expr pos:start="2919:17" pos:end="2919:26"><call pos:start="2919:17" pos:end="2919:26"><name pos:start="2919:17" pos:end="2919:24">RESERVED</name><argument_list pos:start="2919:25" pos:end="2919:26">()</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2921:17" pos:end="2921:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="2925:13" pos:end="2925:18">break;</break>



        <case pos:start="2929:9" pos:end="2929:15">case <expr pos:start="2929:14" pos:end="2929:14"><literal type="number" pos:start="2929:14" pos:end="2929:14">9</literal></expr>:</case> <comment type="block" pos:start="2929:17" pos:end="2929:25">/*L16SI*/</comment>

            <expr_stmt pos:start="2931:13" pos:end="2931:37"><expr pos:start="2931:13" pos:end="2931:36"><call pos:start="2931:13" pos:end="2931:36"><name pos:start="2931:13" pos:end="2931:26">gen_load_store</name><argument_list pos:start="2931:27" pos:end="2931:36">(<argument pos:start="2931:28" pos:end="2931:32"><expr pos:start="2931:28" pos:end="2931:32"><name pos:start="2931:28" pos:end="2931:32">ld16s</name></expr></argument>, <argument pos:start="2931:35" pos:end="2931:35"><expr pos:start="2931:35" pos:end="2931:35"><literal type="number" pos:start="2931:35" pos:end="2931:35">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2933:13" pos:end="2936:0">break;</break>

<cpp:undef pos:start="2935:1" pos:end="2935:21">#<cpp:directive pos:start="2935:2" pos:end="2935:6">undef</cpp:directive> <name pos:start="2935:8" pos:end="2935:21">gen_load_store</name></cpp:undef>



        <case pos:start="2939:9" pos:end="2939:16">case <expr pos:start="2939:14" pos:end="2939:15"><literal type="number" pos:start="2939:14" pos:end="2939:15">10</literal></expr>:</case> <comment type="block" pos:start="2939:18" pos:end="2939:25">/*MOVI*/</comment>

            <expr_stmt pos:start="2941:13" pos:end="2941:42"><expr pos:start="2941:13" pos:end="2941:41"><call pos:start="2941:13" pos:end="2941:41"><name pos:start="2941:13" pos:end="2941:29">gen_window_check1</name><argument_list pos:start="2941:30" pos:end="2941:41">(<argument pos:start="2941:31" pos:end="2941:32"><expr pos:start="2941:31" pos:end="2941:32"><name pos:start="2941:31" pos:end="2941:32">dc</name></expr></argument>, <argument pos:start="2941:35" pos:end="2941:40"><expr pos:start="2941:35" pos:end="2941:40"><name pos:start="2941:35" pos:end="2941:40">RRI8_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2943:13" pos:end="2947:55"><expr pos:start="2943:13" pos:end="2947:54"><call pos:start="2943:13" pos:end="2947:54"><name pos:start="2943:13" pos:end="2943:28">tcg_gen_movi_i32</name><argument_list pos:start="2943:29" pos:end="2947:54">(<argument pos:start="2943:30" pos:end="2943:42"><expr pos:start="2943:30" pos:end="2943:42"><name pos:start="2943:30" pos:end="2943:42"><name pos:start="2943:30" pos:end="2943:34">cpu_R</name><index pos:start="2943:35" pos:end="2943:42">[<expr pos:start="2943:36" pos:end="2943:41"><name pos:start="2943:36" pos:end="2943:41">RRI8_T</name></expr>]</index></name></expr></argument>,

                    <argument pos:start="2945:21" pos:end="2947:53"><expr pos:start="2945:21" pos:end="2947:53"><name pos:start="2945:21" pos:end="2945:29">RRI8_IMM8</name> <operator pos:start="2945:31" pos:end="2945:31">|</operator> <operator pos:start="2945:33" pos:end="2945:33">(</operator><name pos:start="2945:34" pos:end="2945:39">RRI8_S</name> <operator pos:start="2945:41" pos:end="2945:42">&lt;&lt;</operator> <literal type="number" pos:start="2945:44" pos:end="2945:44">8</literal><operator pos:start="2945:45" pos:end="2945:45">)</operator> <operator pos:start="2945:47" pos:end="2945:47">|</operator>

                    <operator pos:start="2947:21" pos:end="2947:21">(</operator><ternary pos:start="2947:22" pos:end="2947:52"><condition pos:start="2947:22" pos:end="2947:37"><expr pos:start="2947:22" pos:end="2947:35"><operator pos:start="2947:22" pos:end="2947:22">(</operator><name pos:start="2947:23" pos:end="2947:28">RRI8_S</name> <operator pos:start="2947:30" pos:end="2947:30">&amp;</operator> <literal type="number" pos:start="2947:32" pos:end="2947:34">0x8</literal><operator pos:start="2947:35" pos:end="2947:35">)</operator></expr> ?</condition><then pos:start="2947:39" pos:end="2947:48"> <expr pos:start="2947:39" pos:end="2947:48"><literal type="number" pos:start="2947:39" pos:end="2947:48">0xfffff000</literal></expr> </then><else pos:start="2947:50" pos:end="2947:52">: <expr pos:start="2947:52" pos:end="2947:52"><literal type="number" pos:start="2947:52" pos:end="2947:52">0</literal></expr></else></ternary><operator pos:start="2947:53" pos:end="2947:53">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2949:13" pos:end="2968:0">break;</break>



<cpp:define pos:start="2953:1" pos:end="2967:19">#<cpp:directive pos:start="2953:2" pos:end="2953:7">define</cpp:directive> <cpp:macro pos:start="2953:9" pos:end="2953:40"><name pos:start="2953:9" pos:end="2953:34">gen_load_store_no_hw_align</name><parameter_list pos:start="2953:35" pos:end="2953:40">(<parameter pos:start="2953:36" pos:end="2953:39"><type pos:start="2953:36" pos:end="2953:39"><name pos:start="2953:36" pos:end="2953:39">type</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="2953:42" pos:end="2967:19">do { \

            TCGv_i32 addr = tcg_temp_local_new_i32(); \

            gen_window_check2(dc, RRI8_S, RRI8_T); \

            tcg_gen_addi_i32(addr, cpu_R[RRI8_S], RRI8_IMM8 &lt;&lt; 2); \

            gen_load_store_alignment(dc, 2, addr, true); \

            tcg_gen_qemu_##type(cpu_R[RRI8_T], addr, dc-&gt;cring); \

            tcg_temp_free(addr); \

        } while (0)</cpp:value></cpp:define>



        <case pos:start="2971:9" pos:end="2971:16">case <expr pos:start="2971:14" pos:end="2971:15"><literal type="number" pos:start="2971:14" pos:end="2971:15">11</literal></expr>:</case> <comment type="block" pos:start="2971:18" pos:end="2971:27">/*L32AIy*/</comment>

            <expr_stmt pos:start="2973:13" pos:end="2973:49"><expr pos:start="2973:13" pos:end="2973:48"><call pos:start="2973:13" pos:end="2973:48"><name pos:start="2973:13" pos:end="2973:22">HAS_OPTION</name><argument_list pos:start="2973:23" pos:end="2973:48">(<argument pos:start="2973:24" pos:end="2973:47"><expr pos:start="2973:24" pos:end="2973:47"><name pos:start="2973:24" pos:end="2973:47">XTENSA_OPTION_MP_SYNCHRO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2975:13" pos:end="2975:46"><expr pos:start="2975:13" pos:end="2975:45"><call pos:start="2975:13" pos:end="2975:45"><name pos:start="2975:13" pos:end="2975:38">gen_load_store_no_hw_align</name><argument_list pos:start="2975:39" pos:end="2975:45">(<argument pos:start="2975:40" pos:end="2975:44"><expr pos:start="2975:40" pos:end="2975:44"><name pos:start="2975:40" pos:end="2975:44">ld32u</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="2975:48" pos:end="2975:64">/*TODO acquire?*/</comment>

            <break pos:start="2977:13" pos:end="2977:18">break;</break>



        <case pos:start="2981:9" pos:end="2981:16">case <expr pos:start="2981:14" pos:end="2981:15"><literal type="number" pos:start="2981:14" pos:end="2981:15">12</literal></expr>:</case> <comment type="block" pos:start="2981:18" pos:end="2981:25">/*ADDI*/</comment>

            <expr_stmt pos:start="2983:13" pos:end="2983:50"><expr pos:start="2983:13" pos:end="2983:49"><call pos:start="2983:13" pos:end="2983:49"><name pos:start="2983:13" pos:end="2983:29">gen_window_check2</name><argument_list pos:start="2983:30" pos:end="2983:49">(<argument pos:start="2983:31" pos:end="2983:32"><expr pos:start="2983:31" pos:end="2983:32"><name pos:start="2983:31" pos:end="2983:32">dc</name></expr></argument>, <argument pos:start="2983:35" pos:end="2983:40"><expr pos:start="2983:35" pos:end="2983:40"><name pos:start="2983:35" pos:end="2983:40">RRI8_S</name></expr></argument>, <argument pos:start="2983:43" pos:end="2983:48"><expr pos:start="2983:43" pos:end="2983:48"><name pos:start="2983:43" pos:end="2983:48">RRI8_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2985:13" pos:end="2985:73"><expr pos:start="2985:13" pos:end="2985:72"><call pos:start="2985:13" pos:end="2985:72"><name pos:start="2985:13" pos:end="2985:28">tcg_gen_addi_i32</name><argument_list pos:start="2985:29" pos:end="2985:72">(<argument pos:start="2985:30" pos:end="2985:42"><expr pos:start="2985:30" pos:end="2985:42"><name pos:start="2985:30" pos:end="2985:42"><name pos:start="2985:30" pos:end="2985:34">cpu_R</name><index pos:start="2985:35" pos:end="2985:42">[<expr pos:start="2985:36" pos:end="2985:41"><name pos:start="2985:36" pos:end="2985:41">RRI8_T</name></expr>]</index></name></expr></argument>, <argument pos:start="2985:45" pos:end="2985:57"><expr pos:start="2985:45" pos:end="2985:57"><name pos:start="2985:45" pos:end="2985:57"><name pos:start="2985:45" pos:end="2985:49">cpu_R</name><index pos:start="2985:50" pos:end="2985:57">[<expr pos:start="2985:51" pos:end="2985:56"><name pos:start="2985:51" pos:end="2985:56">RRI8_S</name></expr>]</index></name></expr></argument>, <argument pos:start="2985:60" pos:end="2985:71"><expr pos:start="2985:60" pos:end="2985:71"><name pos:start="2985:60" pos:end="2985:71">RRI8_IMM8_SE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2987:13" pos:end="2987:18">break;</break>



        <case pos:start="2991:9" pos:end="2991:16">case <expr pos:start="2991:14" pos:end="2991:15"><literal type="number" pos:start="2991:14" pos:end="2991:15">13</literal></expr>:</case> <comment type="block" pos:start="2991:18" pos:end="2991:26">/*ADDMI*/</comment>

            <expr_stmt pos:start="2993:13" pos:end="2993:50"><expr pos:start="2993:13" pos:end="2993:49"><call pos:start="2993:13" pos:end="2993:49"><name pos:start="2993:13" pos:end="2993:29">gen_window_check2</name><argument_list pos:start="2993:30" pos:end="2993:49">(<argument pos:start="2993:31" pos:end="2993:32"><expr pos:start="2993:31" pos:end="2993:32"><name pos:start="2993:31" pos:end="2993:32">dc</name></expr></argument>, <argument pos:start="2993:35" pos:end="2993:40"><expr pos:start="2993:35" pos:end="2993:40"><name pos:start="2993:35" pos:end="2993:40">RRI8_S</name></expr></argument>, <argument pos:start="2993:43" pos:end="2993:48"><expr pos:start="2993:43" pos:end="2993:48"><name pos:start="2993:43" pos:end="2993:48">RRI8_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2995:13" pos:end="2995:78"><expr pos:start="2995:13" pos:end="2995:77"><call pos:start="2995:13" pos:end="2995:77"><name pos:start="2995:13" pos:end="2995:28">tcg_gen_addi_i32</name><argument_list pos:start="2995:29" pos:end="2995:77">(<argument pos:start="2995:30" pos:end="2995:42"><expr pos:start="2995:30" pos:end="2995:42"><name pos:start="2995:30" pos:end="2995:42"><name pos:start="2995:30" pos:end="2995:34">cpu_R</name><index pos:start="2995:35" pos:end="2995:42">[<expr pos:start="2995:36" pos:end="2995:41"><name pos:start="2995:36" pos:end="2995:41">RRI8_T</name></expr>]</index></name></expr></argument>, <argument pos:start="2995:45" pos:end="2995:57"><expr pos:start="2995:45" pos:end="2995:57"><name pos:start="2995:45" pos:end="2995:57"><name pos:start="2995:45" pos:end="2995:49">cpu_R</name><index pos:start="2995:50" pos:end="2995:57">[<expr pos:start="2995:51" pos:end="2995:56"><name pos:start="2995:51" pos:end="2995:56">RRI8_S</name></expr>]</index></name></expr></argument>, <argument pos:start="2995:60" pos:end="2995:76"><expr pos:start="2995:60" pos:end="2995:76"><name pos:start="2995:60" pos:end="2995:71">RRI8_IMM8_SE</name> <operator pos:start="2995:73" pos:end="2995:74">&lt;&lt;</operator> <literal type="number" pos:start="2995:76" pos:end="2995:76">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2997:13" pos:end="2997:18">break;</break>



        <case pos:start="3001:9" pos:end="3001:16">case <expr pos:start="3001:14" pos:end="3001:15"><literal type="number" pos:start="3001:14" pos:end="3001:15">14</literal></expr>:</case> <comment type="block" pos:start="3001:18" pos:end="3001:28">/*S32C1Iy*/</comment>

            <expr_stmt pos:start="3003:13" pos:end="3003:56"><expr pos:start="3003:13" pos:end="3003:55"><call pos:start="3003:13" pos:end="3003:55"><name pos:start="3003:13" pos:end="3003:22">HAS_OPTION</name><argument_list pos:start="3003:23" pos:end="3003:55">(<argument pos:start="3003:24" pos:end="3003:54"><expr pos:start="3003:24" pos:end="3003:54"><name pos:start="3003:24" pos:end="3003:54">XTENSA_OPTION_CONDITIONAL_STORE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="3005:13" pos:end="3005:50"><expr pos:start="3005:13" pos:end="3005:49"><call pos:start="3005:13" pos:end="3005:49"><name pos:start="3005:13" pos:end="3005:29">gen_window_check2</name><argument_list pos:start="3005:30" pos:end="3005:49">(<argument pos:start="3005:31" pos:end="3005:32"><expr pos:start="3005:31" pos:end="3005:32"><name pos:start="3005:31" pos:end="3005:32">dc</name></expr></argument>, <argument pos:start="3005:35" pos:end="3005:40"><expr pos:start="3005:35" pos:end="3005:40"><name pos:start="3005:35" pos:end="3005:40">RRI8_S</name></expr></argument>, <argument pos:start="3005:43" pos:end="3005:48"><expr pos:start="3005:43" pos:end="3005:48"><name pos:start="3005:43" pos:end="3005:48">RRI8_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <block pos:start="3007:13" pos:end="3053:13">{<block_content pos:start="3009:17" pos:end="3051:35">

                <decl_stmt pos:start="3009:17" pos:end="3009:44"><decl pos:start="3009:17" pos:end="3009:43"><type pos:start="3009:17" pos:end="3009:19"><name pos:start="3009:17" pos:end="3009:19">int</name></type> <name pos:start="3009:21" pos:end="3009:25">label</name> <init pos:start="3009:27" pos:end="3009:43">= <expr pos:start="3009:29" pos:end="3009:43"><call pos:start="3009:29" pos:end="3009:43"><name pos:start="3009:29" pos:end="3009:41">gen_new_label</name><argument_list pos:start="3009:42" pos:end="3009:43">()</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="3011:17" pos:end="3011:56"><decl pos:start="3011:17" pos:end="3011:55"><type pos:start="3011:17" pos:end="3011:24"><name pos:start="3011:17" pos:end="3011:24">TCGv_i32</name></type> <name pos:start="3011:26" pos:end="3011:28">tmp</name> <init pos:start="3011:30" pos:end="3011:55">= <expr pos:start="3011:32" pos:end="3011:55"><call pos:start="3011:32" pos:end="3011:55"><name pos:start="3011:32" pos:end="3011:53">tcg_temp_local_new_i32</name><argument_list pos:start="3011:54" pos:end="3011:55">()</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="3013:17" pos:end="3013:57"><decl pos:start="3013:17" pos:end="3013:56"><type pos:start="3013:17" pos:end="3013:24"><name pos:start="3013:17" pos:end="3013:24">TCGv_i32</name></type> <name pos:start="3013:26" pos:end="3013:29">addr</name> <init pos:start="3013:31" pos:end="3013:56">= <expr pos:start="3013:33" pos:end="3013:56"><call pos:start="3013:33" pos:end="3013:56"><name pos:start="3013:33" pos:end="3013:54">tcg_temp_local_new_i32</name><argument_list pos:start="3013:55" pos:end="3013:56">()</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="3015:17" pos:end="3015:29"><decl pos:start="3015:17" pos:end="3015:28"><type pos:start="3015:17" pos:end="3015:24"><name pos:start="3015:17" pos:end="3015:24">TCGv_i32</name></type> <name pos:start="3015:26" pos:end="3015:28">tpc</name></decl>;</decl_stmt>



                <expr_stmt pos:start="3019:17" pos:end="3019:52"><expr pos:start="3019:17" pos:end="3019:51"><call pos:start="3019:17" pos:end="3019:51"><name pos:start="3019:17" pos:end="3019:31">tcg_gen_mov_i32</name><argument_list pos:start="3019:32" pos:end="3019:51">(<argument pos:start="3019:33" pos:end="3019:35"><expr pos:start="3019:33" pos:end="3019:35"><name pos:start="3019:33" pos:end="3019:35">tmp</name></expr></argument>, <argument pos:start="3019:38" pos:end="3019:50"><expr pos:start="3019:38" pos:end="3019:50"><name pos:start="3019:38" pos:end="3019:50"><name pos:start="3019:38" pos:end="3019:42">cpu_R</name><index pos:start="3019:43" pos:end="3019:50">[<expr pos:start="3019:44" pos:end="3019:49"><name pos:start="3019:44" pos:end="3019:49">RRI8_T</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3021:17" pos:end="3021:70"><expr pos:start="3021:17" pos:end="3021:69"><call pos:start="3021:17" pos:end="3021:69"><name pos:start="3021:17" pos:end="3021:32">tcg_gen_addi_i32</name><argument_list pos:start="3021:33" pos:end="3021:69">(<argument pos:start="3021:34" pos:end="3021:37"><expr pos:start="3021:34" pos:end="3021:37"><name pos:start="3021:34" pos:end="3021:37">addr</name></expr></argument>, <argument pos:start="3021:40" pos:end="3021:52"><expr pos:start="3021:40" pos:end="3021:52"><name pos:start="3021:40" pos:end="3021:52"><name pos:start="3021:40" pos:end="3021:44">cpu_R</name><index pos:start="3021:45" pos:end="3021:52">[<expr pos:start="3021:46" pos:end="3021:51"><name pos:start="3021:46" pos:end="3021:51">RRI8_S</name></expr>]</index></name></expr></argument>, <argument pos:start="3021:55" pos:end="3021:68"><expr pos:start="3021:55" pos:end="3021:68"><name pos:start="3021:55" pos:end="3021:63">RRI8_IMM8</name> <operator pos:start="3021:65" pos:end="3021:66">&lt;&lt;</operator> <literal type="number" pos:start="3021:68" pos:end="3021:68">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3023:17" pos:end="3023:60"><expr pos:start="3023:17" pos:end="3023:59"><call pos:start="3023:17" pos:end="3023:59"><name pos:start="3023:17" pos:end="3023:40">gen_load_store_alignment</name><argument_list pos:start="3023:41" pos:end="3023:59">(<argument pos:start="3023:42" pos:end="3023:43"><expr pos:start="3023:42" pos:end="3023:43"><name pos:start="3023:42" pos:end="3023:43">dc</name></expr></argument>, <argument pos:start="3023:46" pos:end="3023:46"><expr pos:start="3023:46" pos:end="3023:46"><literal type="number" pos:start="3023:46" pos:end="3023:46">2</literal></expr></argument>, <argument pos:start="3023:49" pos:end="3023:52"><expr pos:start="3023:49" pos:end="3023:52"><name pos:start="3023:49" pos:end="3023:52">addr</name></expr></argument>, <argument pos:start="3023:55" pos:end="3023:58"><expr pos:start="3023:55" pos:end="3023:58"><name pos:start="3023:55" pos:end="3023:58">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="3027:17" pos:end="3027:39"><expr pos:start="3027:17" pos:end="3027:38"><call pos:start="3027:17" pos:end="3027:38"><name pos:start="3027:17" pos:end="3027:34">gen_advance_ccount</name><argument_list pos:start="3027:35" pos:end="3027:38">(<argument pos:start="3027:36" pos:end="3027:37"><expr pos:start="3027:36" pos:end="3027:37"><name pos:start="3027:36" pos:end="3027:37">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3029:17" pos:end="3029:44"><expr pos:start="3029:17" pos:end="3029:43"><name pos:start="3029:17" pos:end="3029:19">tpc</name> <operator pos:start="3029:21" pos:end="3029:21">=</operator> <call pos:start="3029:23" pos:end="3029:43"><name pos:start="3029:23" pos:end="3029:35">tcg_const_i32</name><argument_list pos:start="3029:36" pos:end="3029:43">(<argument pos:start="3029:37" pos:end="3029:42"><expr pos:start="3029:37" pos:end="3029:42"><name pos:start="3029:37" pos:end="3029:42"><name pos:start="3029:37" pos:end="3029:38">dc</name><operator pos:start="3029:39" pos:end="3029:40">-&gt;</operator><name pos:start="3029:41" pos:end="3029:42">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3031:17" pos:end="3031:61"><expr pos:start="3031:17" pos:end="3031:60"><call pos:start="3031:17" pos:end="3031:60"><name pos:start="3031:17" pos:end="3031:40">gen_helper_check_atomctl</name><argument_list pos:start="3031:41" pos:end="3031:60">(<argument pos:start="3031:42" pos:end="3031:48"><expr pos:start="3031:42" pos:end="3031:48"><name pos:start="3031:42" pos:end="3031:48">cpu_env</name></expr></argument>, <argument pos:start="3031:51" pos:end="3031:53"><expr pos:start="3031:51" pos:end="3031:53"><name pos:start="3031:51" pos:end="3031:53">tpc</name></expr></argument>, <argument pos:start="3031:56" pos:end="3031:59"><expr pos:start="3031:56" pos:end="3031:59"><name pos:start="3031:56" pos:end="3031:59">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3033:17" pos:end="3033:67"><expr pos:start="3033:17" pos:end="3033:66"><call pos:start="3033:17" pos:end="3033:66"><name pos:start="3033:17" pos:end="3033:34">tcg_gen_qemu_ld32u</name><argument_list pos:start="3033:35" pos:end="3033:66">(<argument pos:start="3033:36" pos:end="3033:48"><expr pos:start="3033:36" pos:end="3033:48"><name pos:start="3033:36" pos:end="3033:48"><name pos:start="3033:36" pos:end="3033:40">cpu_R</name><index pos:start="3033:41" pos:end="3033:48">[<expr pos:start="3033:42" pos:end="3033:47"><name pos:start="3033:42" pos:end="3033:47">RRI8_T</name></expr>]</index></name></expr></argument>, <argument pos:start="3033:51" pos:end="3033:54"><expr pos:start="3033:51" pos:end="3033:54"><name pos:start="3033:51" pos:end="3033:54">addr</name></expr></argument>, <argument pos:start="3033:57" pos:end="3033:65"><expr pos:start="3033:57" pos:end="3033:65"><name pos:start="3033:57" pos:end="3033:65"><name pos:start="3033:57" pos:end="3033:58">dc</name><operator pos:start="3033:59" pos:end="3033:60">-&gt;</operator><name pos:start="3033:61" pos:end="3033:65">cring</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3035:17" pos:end="3037:50"><expr pos:start="3035:17" pos:end="3037:49"><call pos:start="3035:17" pos:end="3037:49"><name pos:start="3035:17" pos:end="3035:34">tcg_gen_brcond_i32</name><argument_list pos:start="3035:35" pos:end="3037:49">(<argument pos:start="3035:36" pos:end="3035:46"><expr pos:start="3035:36" pos:end="3035:46"><name pos:start="3035:36" pos:end="3035:46">TCG_COND_NE</name></expr></argument>, <argument pos:start="3035:49" pos:end="3035:61"><expr pos:start="3035:49" pos:end="3035:61"><name pos:start="3035:49" pos:end="3035:61"><name pos:start="3035:49" pos:end="3035:53">cpu_R</name><index pos:start="3035:54" pos:end="3035:61">[<expr pos:start="3035:55" pos:end="3035:60"><name pos:start="3035:55" pos:end="3035:60">RRI8_T</name></expr>]</index></name></expr></argument>,

                        <argument pos:start="3037:25" pos:end="3037:41"><expr pos:start="3037:25" pos:end="3037:41"><name pos:start="3037:25" pos:end="3037:41"><name pos:start="3037:25" pos:end="3037:30">cpu_SR</name><index pos:start="3037:31" pos:end="3037:41">[<expr pos:start="3037:32" pos:end="3037:40"><name pos:start="3037:32" pos:end="3037:40">SCOMPARE1</name></expr>]</index></name></expr></argument>, <argument pos:start="3037:44" pos:end="3037:48"><expr pos:start="3037:44" pos:end="3037:48"><name pos:start="3037:44" pos:end="3037:48">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="3041:17" pos:end="3041:56"><expr pos:start="3041:17" pos:end="3041:55"><call pos:start="3041:17" pos:end="3041:55"><name pos:start="3041:17" pos:end="3041:33">tcg_gen_qemu_st32</name><argument_list pos:start="3041:34" pos:end="3041:55">(<argument pos:start="3041:35" pos:end="3041:37"><expr pos:start="3041:35" pos:end="3041:37"><name pos:start="3041:35" pos:end="3041:37">tmp</name></expr></argument>, <argument pos:start="3041:40" pos:end="3041:43"><expr pos:start="3041:40" pos:end="3041:43"><name pos:start="3041:40" pos:end="3041:43">addr</name></expr></argument>, <argument pos:start="3041:46" pos:end="3041:54"><expr pos:start="3041:46" pos:end="3041:54"><name pos:start="3041:46" pos:end="3041:54"><name pos:start="3041:46" pos:end="3041:47">dc</name><operator pos:start="3041:48" pos:end="3041:49">-&gt;</operator><name pos:start="3041:50" pos:end="3041:54">cring</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="3045:17" pos:end="3045:37"><expr pos:start="3045:17" pos:end="3045:36"><call pos:start="3045:17" pos:end="3045:36"><name pos:start="3045:17" pos:end="3045:29">gen_set_label</name><argument_list pos:start="3045:30" pos:end="3045:36">(<argument pos:start="3045:31" pos:end="3045:35"><expr pos:start="3045:31" pos:end="3045:35"><name pos:start="3045:31" pos:end="3045:35">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3047:17" pos:end="3047:35"><expr pos:start="3047:17" pos:end="3047:34"><call pos:start="3047:17" pos:end="3047:34"><name pos:start="3047:17" pos:end="3047:29">tcg_temp_free</name><argument_list pos:start="3047:30" pos:end="3047:34">(<argument pos:start="3047:31" pos:end="3047:33"><expr pos:start="3047:31" pos:end="3047:33"><name pos:start="3047:31" pos:end="3047:33">tpc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3049:17" pos:end="3049:36"><expr pos:start="3049:17" pos:end="3049:35"><call pos:start="3049:17" pos:end="3049:35"><name pos:start="3049:17" pos:end="3049:29">tcg_temp_free</name><argument_list pos:start="3049:30" pos:end="3049:35">(<argument pos:start="3049:31" pos:end="3049:34"><expr pos:start="3049:31" pos:end="3049:34"><name pos:start="3049:31" pos:end="3049:34">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3051:17" pos:end="3051:35"><expr pos:start="3051:17" pos:end="3051:34"><call pos:start="3051:17" pos:end="3051:34"><name pos:start="3051:17" pos:end="3051:29">tcg_temp_free</name><argument_list pos:start="3051:30" pos:end="3051:34">(<argument pos:start="3051:31" pos:end="3051:33"><expr pos:start="3051:31" pos:end="3051:33"><name pos:start="3051:31" pos:end="3051:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>

            <break pos:start="3055:13" pos:end="3055:18">break;</break>



        <case pos:start="3059:9" pos:end="3059:16">case <expr pos:start="3059:14" pos:end="3059:15"><literal type="number" pos:start="3059:14" pos:end="3059:15">15</literal></expr>:</case> <comment type="block" pos:start="3059:18" pos:end="3059:27">/*S32RIy*/</comment>

            <expr_stmt pos:start="3061:13" pos:end="3061:49"><expr pos:start="3061:13" pos:end="3061:48"><call pos:start="3061:13" pos:end="3061:48"><name pos:start="3061:13" pos:end="3061:22">HAS_OPTION</name><argument_list pos:start="3061:23" pos:end="3061:48">(<argument pos:start="3061:24" pos:end="3061:47"><expr pos:start="3061:24" pos:end="3061:47"><name pos:start="3061:24" pos:end="3061:47">XTENSA_OPTION_MP_SYNCHRO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="3063:13" pos:end="3063:45"><expr pos:start="3063:13" pos:end="3063:44"><call pos:start="3063:13" pos:end="3063:44"><name pos:start="3063:13" pos:end="3063:38">gen_load_store_no_hw_align</name><argument_list pos:start="3063:39" pos:end="3063:44">(<argument pos:start="3063:40" pos:end="3063:43"><expr pos:start="3063:40" pos:end="3063:43"><name pos:start="3063:40" pos:end="3063:43">st32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="3063:47" pos:end="3063:63">/*TODO release?*/</comment>

            <break pos:start="3065:13" pos:end="3068:0">break;</break>

<cpp:undef pos:start="3067:1" pos:end="3067:33">#<cpp:directive pos:start="3067:2" pos:end="3067:6">undef</cpp:directive> <name pos:start="3067:8" pos:end="3067:33">gen_load_store_no_hw_align</name></cpp:undef>



        <default pos:start="3071:9" pos:end="3071:16">default:</default> <comment type="block" pos:start="3071:18" pos:end="3071:29">/*reserved*/</comment>

            <expr_stmt pos:start="3073:13" pos:end="3073:23"><expr pos:start="3073:13" pos:end="3073:22"><call pos:start="3073:13" pos:end="3073:22"><name pos:start="3073:13" pos:end="3073:20">RESERVED</name><argument_list pos:start="3073:21" pos:end="3073:22">()</argument_list></call></expr>;</expr_stmt>

            <break pos:start="3075:13" pos:end="3075:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="3079:9" pos:end="3079:14">break;</break>



    <case pos:start="3083:5" pos:end="3083:11">case <expr pos:start="3083:10" pos:end="3083:10"><literal type="number" pos:start="3083:10" pos:end="3083:10">3</literal></expr>:</case> <comment type="block" pos:start="3083:13" pos:end="3083:21">/*LSCIp*/</comment>

        <switch pos:start="3085:9" pos:end="3139:9">switch <condition pos:start="3085:16" pos:end="3085:23">(<expr pos:start="3085:17" pos:end="3085:22"><name pos:start="3085:17" pos:end="3085:22">RRI8_R</name></expr>)</condition> <block pos:start="3085:25" pos:end="3139:9">{<block_content pos:start="3087:9" pos:end="3137:18">

        <case pos:start="3087:9" pos:end="3087:15">case <expr pos:start="3087:14" pos:end="3087:14"><literal type="number" pos:start="3087:14" pos:end="3087:14">0</literal></expr>:</case> <comment type="block" pos:start="3087:17" pos:end="3087:24">/*LSIf*/</comment>

        <case pos:start="3089:9" pos:end="3089:15">case <expr pos:start="3089:14" pos:end="3089:14"><literal type="number" pos:start="3089:14" pos:end="3089:14">4</literal></expr>:</case> <comment type="block" pos:start="3089:17" pos:end="3089:24">/*SSIf*/</comment>

        <case pos:start="3091:9" pos:end="3091:15">case <expr pos:start="3091:14" pos:end="3091:14"><literal type="number" pos:start="3091:14" pos:end="3091:14">8</literal></expr>:</case> <comment type="block" pos:start="3091:17" pos:end="3091:25">/*LSIUf*/</comment>

        <case pos:start="3093:9" pos:end="3093:16">case <expr pos:start="3093:14" pos:end="3093:15"><literal type="number" pos:start="3093:14" pos:end="3093:15">12</literal></expr>:</case> <comment type="block" pos:start="3093:18" pos:end="3093:26">/*SSIUf*/</comment>

            <expr_stmt pos:start="3095:13" pos:end="3095:53"><expr pos:start="3095:13" pos:end="3095:52"><call pos:start="3095:13" pos:end="3095:52"><name pos:start="3095:13" pos:end="3095:22">HAS_OPTION</name><argument_list pos:start="3095:23" pos:end="3095:52">(<argument pos:start="3095:24" pos:end="3095:51"><expr pos:start="3095:24" pos:end="3095:51"><name pos:start="3095:24" pos:end="3095:51">XTENSA_OPTION_FP_COPROCESSOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="3097:13" pos:end="3097:42"><expr pos:start="3097:13" pos:end="3097:41"><call pos:start="3097:13" pos:end="3097:41"><name pos:start="3097:13" pos:end="3097:29">gen_window_check1</name><argument_list pos:start="3097:30" pos:end="3097:41">(<argument pos:start="3097:31" pos:end="3097:32"><expr pos:start="3097:31" pos:end="3097:32"><name pos:start="3097:31" pos:end="3097:32">dc</name></expr></argument>, <argument pos:start="3097:35" pos:end="3097:40"><expr pos:start="3097:35" pos:end="3097:40"><name pos:start="3097:35" pos:end="3097:40">RRI8_S</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="3099:13" pos:end="3099:38"><expr pos:start="3099:13" pos:end="3099:37"><call pos:start="3099:13" pos:end="3099:37"><name pos:start="3099:13" pos:end="3099:30">gen_check_cpenable</name><argument_list pos:start="3099:31" pos:end="3099:37">(<argument pos:start="3099:32" pos:end="3099:33"><expr pos:start="3099:32" pos:end="3099:33"><name pos:start="3099:32" pos:end="3099:33">dc</name></expr></argument>, <argument pos:start="3099:36" pos:end="3099:36"><expr pos:start="3099:36" pos:end="3099:36"><literal type="number" pos:start="3099:36" pos:end="3099:36">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <block pos:start="3101:13" pos:end="3127:13">{<block_content pos:start="3103:17" pos:end="3125:36">

                <decl_stmt pos:start="3103:17" pos:end="3103:51"><decl pos:start="3103:17" pos:end="3103:50"><type pos:start="3103:17" pos:end="3103:24"><name pos:start="3103:17" pos:end="3103:24">TCGv_i32</name></type> <name pos:start="3103:26" pos:end="3103:29">addr</name> <init pos:start="3103:31" pos:end="3103:50">= <expr pos:start="3103:33" pos:end="3103:50"><call pos:start="3103:33" pos:end="3103:50"><name pos:start="3103:33" pos:end="3103:48">tcg_temp_new_i32</name><argument_list pos:start="3103:49" pos:end="3103:50">()</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="3105:17" pos:end="3105:70"><expr pos:start="3105:17" pos:end="3105:69"><call pos:start="3105:17" pos:end="3105:69"><name pos:start="3105:17" pos:end="3105:32">tcg_gen_addi_i32</name><argument_list pos:start="3105:33" pos:end="3105:69">(<argument pos:start="3105:34" pos:end="3105:37"><expr pos:start="3105:34" pos:end="3105:37"><name pos:start="3105:34" pos:end="3105:37">addr</name></expr></argument>, <argument pos:start="3105:40" pos:end="3105:52"><expr pos:start="3105:40" pos:end="3105:52"><name pos:start="3105:40" pos:end="3105:52"><name pos:start="3105:40" pos:end="3105:44">cpu_R</name><index pos:start="3105:45" pos:end="3105:52">[<expr pos:start="3105:46" pos:end="3105:51"><name pos:start="3105:46" pos:end="3105:51">RRI8_S</name></expr>]</index></name></expr></argument>, <argument pos:start="3105:55" pos:end="3105:68"><expr pos:start="3105:55" pos:end="3105:68"><name pos:start="3105:55" pos:end="3105:63">RRI8_IMM8</name> <operator pos:start="3105:65" pos:end="3105:66">&lt;&lt;</operator> <literal type="number" pos:start="3105:68" pos:end="3105:68">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3107:17" pos:end="3107:61"><expr pos:start="3107:17" pos:end="3107:60"><call pos:start="3107:17" pos:end="3107:60"><name pos:start="3107:17" pos:end="3107:40">gen_load_store_alignment</name><argument_list pos:start="3107:41" pos:end="3107:60">(<argument pos:start="3107:42" pos:end="3107:43"><expr pos:start="3107:42" pos:end="3107:43"><name pos:start="3107:42" pos:end="3107:43">dc</name></expr></argument>, <argument pos:start="3107:46" pos:end="3107:46"><expr pos:start="3107:46" pos:end="3107:46"><literal type="number" pos:start="3107:46" pos:end="3107:46">2</literal></expr></argument>, <argument pos:start="3107:49" pos:end="3107:52"><expr pos:start="3107:49" pos:end="3107:52"><name pos:start="3107:49" pos:end="3107:52">addr</name></expr></argument>, <argument pos:start="3107:55" pos:end="3107:59"><expr pos:start="3107:55" pos:end="3107:59"><name pos:start="3107:55" pos:end="3107:59">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="3109:17" pos:end="3117:17"><if pos:start="3109:17" pos:end="3113:17">if <condition pos:start="3109:20" pos:end="3109:33">(<expr pos:start="3109:21" pos:end="3109:32"><name pos:start="3109:21" pos:end="3109:26">RRI8_R</name> <operator pos:start="3109:28" pos:end="3109:28">&amp;</operator> <literal type="number" pos:start="3109:30" pos:end="3109:32">0x4</literal></expr>)</condition> <block pos:start="3109:35" pos:end="3113:17">{<block_content pos:start="3111:21" pos:end="3111:71">

                    <expr_stmt pos:start="3111:21" pos:end="3111:71"><expr pos:start="3111:21" pos:end="3111:70"><call pos:start="3111:21" pos:end="3111:70"><name pos:start="3111:21" pos:end="3111:37">tcg_gen_qemu_st32</name><argument_list pos:start="3111:38" pos:end="3111:70">(<argument pos:start="3111:39" pos:end="3111:52"><expr pos:start="3111:39" pos:end="3111:52"><name pos:start="3111:39" pos:end="3111:52"><name pos:start="3111:39" pos:end="3111:44">cpu_FR</name><index pos:start="3111:45" pos:end="3111:52">[<expr pos:start="3111:46" pos:end="3111:51"><name pos:start="3111:46" pos:end="3111:51">RRI8_T</name></expr>]</index></name></expr></argument>, <argument pos:start="3111:55" pos:end="3111:58"><expr pos:start="3111:55" pos:end="3111:58"><name pos:start="3111:55" pos:end="3111:58">addr</name></expr></argument>, <argument pos:start="3111:61" pos:end="3111:69"><expr pos:start="3111:61" pos:end="3111:69"><name pos:start="3111:61" pos:end="3111:69"><name pos:start="3111:61" pos:end="3111:62">dc</name><operator pos:start="3111:63" pos:end="3111:64">-&gt;</operator><name pos:start="3111:65" pos:end="3111:69">cring</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="3113:19" pos:end="3117:17">else <block pos:start="3113:24" pos:end="3117:17">{<block_content pos:start="3115:21" pos:end="3115:72">

                    <expr_stmt pos:start="3115:21" pos:end="3115:72"><expr pos:start="3115:21" pos:end="3115:71"><call pos:start="3115:21" pos:end="3115:71"><name pos:start="3115:21" pos:end="3115:38">tcg_gen_qemu_ld32u</name><argument_list pos:start="3115:39" pos:end="3115:71">(<argument pos:start="3115:40" pos:end="3115:53"><expr pos:start="3115:40" pos:end="3115:53"><name pos:start="3115:40" pos:end="3115:53"><name pos:start="3115:40" pos:end="3115:45">cpu_FR</name><index pos:start="3115:46" pos:end="3115:53">[<expr pos:start="3115:47" pos:end="3115:52"><name pos:start="3115:47" pos:end="3115:52">RRI8_T</name></expr>]</index></name></expr></argument>, <argument pos:start="3115:56" pos:end="3115:59"><expr pos:start="3115:56" pos:end="3115:59"><name pos:start="3115:56" pos:end="3115:59">addr</name></expr></argument>, <argument pos:start="3115:62" pos:end="3115:70"><expr pos:start="3115:62" pos:end="3115:70"><name pos:start="3115:62" pos:end="3115:70"><name pos:start="3115:62" pos:end="3115:63">dc</name><operator pos:start="3115:64" pos:end="3115:65">-&gt;</operator><name pos:start="3115:66" pos:end="3115:70">cring</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <if_stmt pos:start="3119:17" pos:end="3123:17"><if pos:start="3119:17" pos:end="3123:17">if <condition pos:start="3119:20" pos:end="3119:33">(<expr pos:start="3119:21" pos:end="3119:32"><name pos:start="3119:21" pos:end="3119:26">RRI8_R</name> <operator pos:start="3119:28" pos:end="3119:28">&amp;</operator> <literal type="number" pos:start="3119:30" pos:end="3119:32">0x8</literal></expr>)</condition> <block pos:start="3119:35" pos:end="3123:17">{<block_content pos:start="3121:21" pos:end="3121:57">

                    <expr_stmt pos:start="3121:21" pos:end="3121:57"><expr pos:start="3121:21" pos:end="3121:56"><call pos:start="3121:21" pos:end="3121:56"><name pos:start="3121:21" pos:end="3121:35">tcg_gen_mov_i32</name><argument_list pos:start="3121:36" pos:end="3121:56">(<argument pos:start="3121:37" pos:end="3121:49"><expr pos:start="3121:37" pos:end="3121:49"><name pos:start="3121:37" pos:end="3121:49"><name pos:start="3121:37" pos:end="3121:41">cpu_R</name><index pos:start="3121:42" pos:end="3121:49">[<expr pos:start="3121:43" pos:end="3121:48"><name pos:start="3121:43" pos:end="3121:48">RRI8_S</name></expr>]</index></name></expr></argument>, <argument pos:start="3121:52" pos:end="3121:55"><expr pos:start="3121:52" pos:end="3121:55"><name pos:start="3121:52" pos:end="3121:55">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="3125:17" pos:end="3125:36"><expr pos:start="3125:17" pos:end="3125:35"><call pos:start="3125:17" pos:end="3125:35"><name pos:start="3125:17" pos:end="3125:29">tcg_temp_free</name><argument_list pos:start="3125:30" pos:end="3125:35">(<argument pos:start="3125:31" pos:end="3125:34"><expr pos:start="3125:31" pos:end="3125:34"><name pos:start="3125:31" pos:end="3125:34">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>

            <break pos:start="3129:13" pos:end="3129:18">break;</break>



        <default pos:start="3133:9" pos:end="3133:16">default:</default> <comment type="block" pos:start="3133:18" pos:end="3133:29">/*reserved*/</comment>

            <expr_stmt pos:start="3135:13" pos:end="3135:23"><expr pos:start="3135:13" pos:end="3135:22"><call pos:start="3135:13" pos:end="3135:22"><name pos:start="3135:13" pos:end="3135:20">RESERVED</name><argument_list pos:start="3135:21" pos:end="3135:22">()</argument_list></call></expr>;</expr_stmt>

            <break pos:start="3137:13" pos:end="3137:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="3141:9" pos:end="3141:14">break;</break>



    <case pos:start="3145:5" pos:end="3145:11">case <expr pos:start="3145:10" pos:end="3145:10"><literal type="number" pos:start="3145:10" pos:end="3145:10">4</literal></expr>:</case> <comment type="block" pos:start="3145:13" pos:end="3145:22">/*MAC16d*/</comment>

        <expr_stmt pos:start="3147:9" pos:end="3147:40"><expr pos:start="3147:9" pos:end="3147:39"><call pos:start="3147:9" pos:end="3147:39"><name pos:start="3147:9" pos:end="3147:18">HAS_OPTION</name><argument_list pos:start="3147:19" pos:end="3147:39">(<argument pos:start="3147:20" pos:end="3147:38"><expr pos:start="3147:20" pos:end="3147:38"><name pos:start="3147:20" pos:end="3147:38">XTENSA_OPTION_MAC16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="3149:9" pos:end="3361:9">{<block_content pos:start="3151:13" pos:end="3359:13">

            <enum pos:start="3151:13" pos:end="3163:29">enum <block pos:start="3151:18" pos:end="3163:13">{

                <decl pos:start="3153:17" pos:end="3153:32"><name pos:start="3153:17" pos:end="3153:26">MAC16_UMUL</name> <init pos:start="3153:28" pos:end="3153:32">= <expr pos:start="3153:30" pos:end="3153:32"><literal type="number" pos:start="3153:30" pos:end="3153:32">0x0</literal></expr></init></decl>,

                <decl pos:start="3155:17" pos:end="3155:32"><name pos:start="3155:17" pos:end="3155:25">MAC16_MUL</name>  <init pos:start="3155:28" pos:end="3155:32">= <expr pos:start="3155:30" pos:end="3155:32"><literal type="number" pos:start="3155:30" pos:end="3155:32">0x4</literal></expr></init></decl>,

                <decl pos:start="3157:17" pos:end="3157:32"><name pos:start="3157:17" pos:end="3157:26">MAC16_MULA</name> <init pos:start="3157:28" pos:end="3157:32">= <expr pos:start="3157:30" pos:end="3157:32"><literal type="number" pos:start="3157:30" pos:end="3157:32">0x8</literal></expr></init></decl>,

                <decl pos:start="3159:17" pos:end="3159:32"><name pos:start="3159:17" pos:end="3159:26">MAC16_MULS</name> <init pos:start="3159:28" pos:end="3159:32">= <expr pos:start="3159:30" pos:end="3159:32"><literal type="number" pos:start="3159:30" pos:end="3159:32">0xc</literal></expr></init></decl>,

                <decl pos:start="3161:17" pos:end="3161:32"><name pos:start="3161:17" pos:end="3161:26">MAC16_NONE</name> <init pos:start="3161:28" pos:end="3161:32">= <expr pos:start="3161:30" pos:end="3161:32"><literal type="number" pos:start="3161:30" pos:end="3161:32">0xf</literal></expr></init></decl>,

            }</block> <decl pos:start="3163:15" pos:end="3163:28"><name pos:start="3163:15" pos:end="3163:16">op</name> <init pos:start="3163:18" pos:end="3163:28">= <expr pos:start="3163:20" pos:end="3163:28"><name pos:start="3163:20" pos:end="3163:22">OP1</name> <operator pos:start="3163:24" pos:end="3163:24">&amp;</operator> <literal type="number" pos:start="3163:26" pos:end="3163:28">0xc</literal></expr></init></decl>;</enum>

            <decl_stmt pos:start="3165:13" pos:end="3165:45"><decl pos:start="3165:13" pos:end="3165:44"><type pos:start="3165:13" pos:end="3165:16"><name pos:start="3165:13" pos:end="3165:16">bool</name></type> <name pos:start="3165:18" pos:end="3165:25">is_m1_sr</name> <init pos:start="3165:27" pos:end="3165:44">= <expr pos:start="3165:29" pos:end="3165:44"><operator pos:start="3165:29" pos:end="3165:29">(</operator><name pos:start="3165:30" pos:end="3165:32">OP2</name> <operator pos:start="3165:34" pos:end="3165:34">&amp;</operator> <literal type="number" pos:start="3165:36" pos:end="3165:38">0x3</literal><operator pos:start="3165:39" pos:end="3165:39">)</operator> <operator pos:start="3165:41" pos:end="3165:42">==</operator> <literal type="number" pos:start="3165:44" pos:end="3165:44">2</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="3167:13" pos:end="3167:45"><decl pos:start="3167:13" pos:end="3167:44"><type pos:start="3167:13" pos:end="3167:16"><name pos:start="3167:13" pos:end="3167:16">bool</name></type> <name pos:start="3167:18" pos:end="3167:25">is_m2_sr</name> <init pos:start="3167:27" pos:end="3167:44">= <expr pos:start="3167:29" pos:end="3167:44"><operator pos:start="3167:29" pos:end="3167:29">(</operator><name pos:start="3167:30" pos:end="3167:32">OP2</name> <operator pos:start="3167:34" pos:end="3167:34">&amp;</operator> <literal type="number" pos:start="3167:36" pos:end="3167:38">0xc</literal><operator pos:start="3167:39" pos:end="3167:39">)</operator> <operator pos:start="3167:41" pos:end="3167:42">==</operator> <literal type="number" pos:start="3167:44" pos:end="3167:44">0</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="3169:13" pos:end="3169:35"><decl pos:start="3169:13" pos:end="3169:34"><type pos:start="3169:13" pos:end="3169:20"><name pos:start="3169:13" pos:end="3169:20">uint32_t</name></type> <name pos:start="3169:22" pos:end="3169:30">ld_offset</name> <init pos:start="3169:32" pos:end="3169:34">= <expr pos:start="3169:34" pos:end="3169:34"><literal type="number" pos:start="3169:34" pos:end="3169:34">0</literal></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="3173:13" pos:end="3177:13"><if pos:start="3173:13" pos:end="3177:13">if <condition pos:start="3173:16" pos:end="3173:24">(<expr pos:start="3173:17" pos:end="3173:23"><name pos:start="3173:17" pos:end="3173:19">OP2</name> <operator pos:start="3173:21" pos:end="3173:21">&gt;</operator> <literal type="number" pos:start="3173:23" pos:end="3173:23">9</literal></expr>)</condition> <block pos:start="3173:26" pos:end="3177:13">{<block_content pos:start="3175:17" pos:end="3175:27">

                <expr_stmt pos:start="3175:17" pos:end="3175:27"><expr pos:start="3175:17" pos:end="3175:26"><call pos:start="3175:17" pos:end="3175:26"><name pos:start="3175:17" pos:end="3175:24">RESERVED</name><argument_list pos:start="3175:25" pos:end="3175:26">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <switch pos:start="3181:13" pos:end="3223:13">switch <condition pos:start="3181:20" pos:end="3181:28">(<expr pos:start="3181:21" pos:end="3181:27"><name pos:start="3181:21" pos:end="3181:23">OP2</name> <operator pos:start="3181:25" pos:end="3181:25">&amp;</operator> <literal type="number" pos:start="3181:27" pos:end="3181:27">2</literal></expr>)</condition> <block pos:start="3181:30" pos:end="3223:13">{<block_content pos:start="3183:13" pos:end="3221:22">

            <case pos:start="3183:13" pos:end="3183:19">case <expr pos:start="3183:18" pos:end="3183:18"><literal type="number" pos:start="3183:18" pos:end="3183:18">0</literal></expr>:</case> <comment type="block" pos:start="3183:21" pos:end="3183:35">/*MACI?/MACC?*/</comment>

                <expr_stmt pos:start="3185:17" pos:end="3185:32"><expr pos:start="3185:17" pos:end="3185:31"><name pos:start="3185:17" pos:end="3185:24">is_m1_sr</name> <operator pos:start="3185:26" pos:end="3185:26">=</operator> <name pos:start="3185:28" pos:end="3185:31">true</name></expr>;</expr_stmt>

                <expr_stmt pos:start="3187:17" pos:end="3187:47"><expr pos:start="3187:17" pos:end="3187:46"><name pos:start="3187:17" pos:end="3187:25">ld_offset</name> <operator pos:start="3187:27" pos:end="3187:27">=</operator> <ternary pos:start="3187:29" pos:end="3187:46"><condition pos:start="3187:29" pos:end="3187:39"><expr pos:start="3187:29" pos:end="3187:37"><operator pos:start="3187:29" pos:end="3187:29">(</operator><name pos:start="3187:30" pos:end="3187:32">OP2</name> <operator pos:start="3187:34" pos:end="3187:34">&amp;</operator> <literal type="number" pos:start="3187:36" pos:end="3187:36">1</literal><operator pos:start="3187:37" pos:end="3187:37">)</operator></expr> ?</condition><then pos:start="3187:41" pos:end="3187:42"> <expr pos:start="3187:41" pos:end="3187:42"><operator pos:start="3187:41" pos:end="3187:41">-</operator><literal type="number" pos:start="3187:42" pos:end="3187:42">4</literal></expr> </then><else pos:start="3187:44" pos:end="3187:46">: <expr pos:start="3187:46" pos:end="3187:46"><literal type="number" pos:start="3187:46" pos:end="3187:46">4</literal></expr></else></ternary></expr>;</expr_stmt>



                <if_stmt pos:start="3191:17" pos:end="3207:17"><if pos:start="3191:17" pos:end="3203:17">if <condition pos:start="3191:20" pos:end="3191:29">(<expr pos:start="3191:21" pos:end="3191:28"><name pos:start="3191:21" pos:end="3191:23">OP2</name> <operator pos:start="3191:25" pos:end="3191:26">&gt;=</operator> <literal type="number" pos:start="3191:28" pos:end="3191:28">8</literal></expr>)</condition> <block pos:start="3191:31" pos:end="3203:17">{<block_content pos:start="3193:21" pos:end="3201:21"> <comment type="block" pos:start="3191:33" pos:end="3191:45">/*MACI/MACC*/</comment>

                    <if_stmt pos:start="3193:21" pos:end="3201:21"><if pos:start="3193:21" pos:end="3197:21">if <condition pos:start="3193:24" pos:end="3193:33">(<expr pos:start="3193:25" pos:end="3193:32"><name pos:start="3193:25" pos:end="3193:27">OP1</name> <operator pos:start="3193:29" pos:end="3193:30">==</operator> <literal type="number" pos:start="3193:32" pos:end="3193:32">0</literal></expr>)</condition> <block pos:start="3193:35" pos:end="3197:21">{<block_content pos:start="3195:25" pos:end="3195:40"> <comment type="block" pos:start="3193:37" pos:end="3193:51">/*LDINC/LDDEC*/</comment>

                        <expr_stmt pos:start="3195:25" pos:end="3195:40"><expr pos:start="3195:25" pos:end="3195:39"><name pos:start="3195:25" pos:end="3195:26">op</name> <operator pos:start="3195:28" pos:end="3195:28">=</operator> <name pos:start="3195:30" pos:end="3195:39">MAC16_NONE</name></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="3197:23" pos:end="3201:21">else <block pos:start="3197:28" pos:end="3201:21">{<block_content pos:start="3199:25" pos:end="3199:35">

                        <expr_stmt pos:start="3199:25" pos:end="3199:35"><expr pos:start="3199:25" pos:end="3199:34"><call pos:start="3199:25" pos:end="3199:34"><name pos:start="3199:25" pos:end="3199:32">RESERVED</name><argument_list pos:start="3199:33" pos:end="3199:34">()</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="3203:19" pos:end="3207:17">else if <condition pos:start="3203:27" pos:end="3203:44">(<expr pos:start="3203:28" pos:end="3203:43"><name pos:start="3203:28" pos:end="3203:29">op</name> <operator pos:start="3203:31" pos:end="3203:32">!=</operator> <name pos:start="3203:34" pos:end="3203:43">MAC16_MULA</name></expr>)</condition> <block pos:start="3203:46" pos:end="3207:17">{<block_content pos:start="3205:21" pos:end="3205:31"> <comment type="block" pos:start="3203:48" pos:end="3203:71">/*MULA.*.*.LDINC/LDDEC*/</comment>

                    <expr_stmt pos:start="3205:21" pos:end="3205:31"><expr pos:start="3205:21" pos:end="3205:30"><call pos:start="3205:21" pos:end="3205:30"><name pos:start="3205:21" pos:end="3205:28">RESERVED</name><argument_list pos:start="3205:29" pos:end="3205:30">()</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="3209:17" pos:end="3209:22">break;</break>



            <case pos:start="3213:13" pos:end="3213:19">case <expr pos:start="3213:18" pos:end="3213:18"><literal type="number" pos:start="3213:18" pos:end="3213:18">2</literal></expr>:</case> <comment type="block" pos:start="3213:21" pos:end="3213:35">/*MACD?/MACA?*/</comment>

                <if_stmt pos:start="3215:17" pos:end="3219:17"><if pos:start="3215:17" pos:end="3219:17">if <condition pos:start="3215:20" pos:end="3215:49">(<expr pos:start="3215:21" pos:end="3215:48"><name pos:start="3215:21" pos:end="3215:22">op</name> <operator pos:start="3215:24" pos:end="3215:25">==</operator> <name pos:start="3215:27" pos:end="3215:36">MAC16_UMUL</name> <operator pos:start="3215:38" pos:end="3215:39">&amp;&amp;</operator> <name pos:start="3215:41" pos:end="3215:43">OP2</name> <operator pos:start="3215:45" pos:end="3215:46">!=</operator> <literal type="number" pos:start="3215:48" pos:end="3215:48">7</literal></expr>)</condition> <block pos:start="3215:51" pos:end="3219:17">{<block_content pos:start="3217:21" pos:end="3217:31"> <comment type="block" pos:start="3215:53" pos:end="3215:74">/*UMUL only in MACAA*/</comment>

                    <expr_stmt pos:start="3217:21" pos:end="3217:31"><expr pos:start="3217:21" pos:end="3217:30"><call pos:start="3217:21" pos:end="3217:30"><name pos:start="3217:21" pos:end="3217:28">RESERVED</name><argument_list pos:start="3217:29" pos:end="3217:30">()</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="3221:17" pos:end="3221:22">break;</break>

            </block_content>}</block></switch>



            <if_stmt pos:start="3227:13" pos:end="3241:13"><if pos:start="3227:13" pos:end="3241:13">if <condition pos:start="3227:16" pos:end="3227:33">(<expr pos:start="3227:17" pos:end="3227:32"><name pos:start="3227:17" pos:end="3227:18">op</name> <operator pos:start="3227:20" pos:end="3227:21">!=</operator> <name pos:start="3227:23" pos:end="3227:32">MAC16_NONE</name></expr>)</condition> <block pos:start="3227:35" pos:end="3241:13">{<block_content pos:start="3229:17" pos:end="3239:17">

                <if_stmt pos:start="3229:17" pos:end="3233:17"><if pos:start="3229:17" pos:end="3233:17">if <condition pos:start="3229:20" pos:end="3229:30">(<expr pos:start="3229:21" pos:end="3229:29"><operator pos:start="3229:21" pos:end="3229:21">!</operator><name pos:start="3229:22" pos:end="3229:29">is_m1_sr</name></expr>)</condition> <block pos:start="3229:32" pos:end="3233:17">{<block_content pos:start="3231:21" pos:end="3231:49">

                    <expr_stmt pos:start="3231:21" pos:end="3231:49"><expr pos:start="3231:21" pos:end="3231:48"><call pos:start="3231:21" pos:end="3231:48"><name pos:start="3231:21" pos:end="3231:37">gen_window_check1</name><argument_list pos:start="3231:38" pos:end="3231:48">(<argument pos:start="3231:39" pos:end="3231:40"><expr pos:start="3231:39" pos:end="3231:40"><name pos:start="3231:39" pos:end="3231:40">dc</name></expr></argument>, <argument pos:start="3231:43" pos:end="3231:47"><expr pos:start="3231:43" pos:end="3231:47"><name pos:start="3231:43" pos:end="3231:47">RRR_S</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="3235:17" pos:end="3239:17"><if pos:start="3235:17" pos:end="3239:17">if <condition pos:start="3235:20" pos:end="3235:30">(<expr pos:start="3235:21" pos:end="3235:29"><operator pos:start="3235:21" pos:end="3235:21">!</operator><name pos:start="3235:22" pos:end="3235:29">is_m2_sr</name></expr>)</condition> <block pos:start="3235:32" pos:end="3239:17">{<block_content pos:start="3237:21" pos:end="3237:49">

                    <expr_stmt pos:start="3237:21" pos:end="3237:49"><expr pos:start="3237:21" pos:end="3237:48"><call pos:start="3237:21" pos:end="3237:48"><name pos:start="3237:21" pos:end="3237:37">gen_window_check1</name><argument_list pos:start="3237:38" pos:end="3237:48">(<argument pos:start="3237:39" pos:end="3237:40"><expr pos:start="3237:39" pos:end="3237:40"><name pos:start="3237:39" pos:end="3237:40">dc</name></expr></argument>, <argument pos:start="3237:43" pos:end="3237:47"><expr pos:start="3237:43" pos:end="3237:47"><name pos:start="3237:43" pos:end="3237:47">RRR_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <block pos:start="3245:13" pos:end="3359:13">{<block_content pos:start="3247:17" pos:end="3357:37">

                <decl_stmt pos:start="3247:17" pos:end="3247:52"><decl pos:start="3247:17" pos:end="3247:51"><type pos:start="3247:17" pos:end="3247:24"><name pos:start="3247:17" pos:end="3247:24">TCGv_i32</name></type> <name pos:start="3247:26" pos:end="3247:30">vaddr</name> <init pos:start="3247:32" pos:end="3247:51">= <expr pos:start="3247:34" pos:end="3247:51"><call pos:start="3247:34" pos:end="3247:51"><name pos:start="3247:34" pos:end="3247:49">tcg_temp_new_i32</name><argument_list pos:start="3247:50" pos:end="3247:51">()</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="3249:17" pos:end="3249:52"><decl pos:start="3249:17" pos:end="3249:51"><type pos:start="3249:17" pos:end="3249:24"><name pos:start="3249:17" pos:end="3249:24">TCGv_i32</name></type> <name pos:start="3249:26" pos:end="3249:30">mem32</name> <init pos:start="3249:32" pos:end="3249:51">= <expr pos:start="3249:34" pos:end="3249:51"><call pos:start="3249:34" pos:end="3249:51"><name pos:start="3249:34" pos:end="3249:49">tcg_temp_new_i32</name><argument_list pos:start="3249:50" pos:end="3249:51">()</argument_list></call></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="3253:17" pos:end="3263:17"><if pos:start="3253:17" pos:end="3263:17">if <condition pos:start="3253:20" pos:end="3253:30">(<expr pos:start="3253:21" pos:end="3253:29"><name pos:start="3253:21" pos:end="3253:29">ld_offset</name></expr>)</condition> <block pos:start="3253:32" pos:end="3263:17">{<block_content pos:start="3255:21" pos:end="3261:64">

                    <expr_stmt pos:start="3255:21" pos:end="3255:49"><expr pos:start="3255:21" pos:end="3255:48"><call pos:start="3255:21" pos:end="3255:48"><name pos:start="3255:21" pos:end="3255:37">gen_window_check1</name><argument_list pos:start="3255:38" pos:end="3255:48">(<argument pos:start="3255:39" pos:end="3255:40"><expr pos:start="3255:39" pos:end="3255:40"><name pos:start="3255:39" pos:end="3255:40">dc</name></expr></argument>, <argument pos:start="3255:43" pos:end="3255:47"><expr pos:start="3255:43" pos:end="3255:47"><name pos:start="3255:43" pos:end="3255:47">RRR_S</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3257:21" pos:end="3257:69"><expr pos:start="3257:21" pos:end="3257:68"><call pos:start="3257:21" pos:end="3257:68"><name pos:start="3257:21" pos:end="3257:36">tcg_gen_addi_i32</name><argument_list pos:start="3257:37" pos:end="3257:68">(<argument pos:start="3257:38" pos:end="3257:42"><expr pos:start="3257:38" pos:end="3257:42"><name pos:start="3257:38" pos:end="3257:42">vaddr</name></expr></argument>, <argument pos:start="3257:45" pos:end="3257:56"><expr pos:start="3257:45" pos:end="3257:56"><name pos:start="3257:45" pos:end="3257:56"><name pos:start="3257:45" pos:end="3257:49">cpu_R</name><index pos:start="3257:50" pos:end="3257:56">[<expr pos:start="3257:51" pos:end="3257:55"><name pos:start="3257:51" pos:end="3257:55">RRR_S</name></expr>]</index></name></expr></argument>, <argument pos:start="3257:59" pos:end="3257:67"><expr pos:start="3257:59" pos:end="3257:67"><name pos:start="3257:59" pos:end="3257:67">ld_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3259:21" pos:end="3259:66"><expr pos:start="3259:21" pos:end="3259:65"><call pos:start="3259:21" pos:end="3259:65"><name pos:start="3259:21" pos:end="3259:44">gen_load_store_alignment</name><argument_list pos:start="3259:45" pos:end="3259:65">(<argument pos:start="3259:46" pos:end="3259:47"><expr pos:start="3259:46" pos:end="3259:47"><name pos:start="3259:46" pos:end="3259:47">dc</name></expr></argument>, <argument pos:start="3259:50" pos:end="3259:50"><expr pos:start="3259:50" pos:end="3259:50"><literal type="number" pos:start="3259:50" pos:end="3259:50">2</literal></expr></argument>, <argument pos:start="3259:53" pos:end="3259:57"><expr pos:start="3259:53" pos:end="3259:57"><name pos:start="3259:53" pos:end="3259:57">vaddr</name></expr></argument>, <argument pos:start="3259:60" pos:end="3259:64"><expr pos:start="3259:60" pos:end="3259:64"><name pos:start="3259:60" pos:end="3259:64">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3261:21" pos:end="3261:64"><expr pos:start="3261:21" pos:end="3261:63"><call pos:start="3261:21" pos:end="3261:63"><name pos:start="3261:21" pos:end="3261:38">tcg_gen_qemu_ld32u</name><argument_list pos:start="3261:39" pos:end="3261:63">(<argument pos:start="3261:40" pos:end="3261:44"><expr pos:start="3261:40" pos:end="3261:44"><name pos:start="3261:40" pos:end="3261:44">mem32</name></expr></argument>, <argument pos:start="3261:47" pos:end="3261:51"><expr pos:start="3261:47" pos:end="3261:51"><name pos:start="3261:47" pos:end="3261:51">vaddr</name></expr></argument>, <argument pos:start="3261:54" pos:end="3261:62"><expr pos:start="3261:54" pos:end="3261:62"><name pos:start="3261:54" pos:end="3261:62"><name pos:start="3261:54" pos:end="3261:55">dc</name><operator pos:start="3261:56" pos:end="3261:57">-&gt;</operator><name pos:start="3261:58" pos:end="3261:62">cring</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="3265:17" pos:end="3345:17"><if pos:start="3265:17" pos:end="3345:17">if <condition pos:start="3265:20" pos:end="3265:37">(<expr pos:start="3265:21" pos:end="3265:36"><name pos:start="3265:21" pos:end="3265:22">op</name> <operator pos:start="3265:24" pos:end="3265:25">!=</operator> <name pos:start="3265:27" pos:end="3265:36">MAC16_NONE</name></expr>)</condition> <block pos:start="3265:39" pos:end="3345:17">{<block_content pos:start="3267:21" pos:end="3343:38">

                    <decl_stmt pos:start="3267:21" pos:end="3271:55"><decl pos:start="3267:21" pos:end="3271:54"><type pos:start="3267:21" pos:end="3267:28"><name pos:start="3267:21" pos:end="3267:28">TCGv_i32</name></type> <name pos:start="3267:30" pos:end="3267:31">m1</name> <init pos:start="3267:33" pos:end="3271:54">= <expr pos:start="3267:35" pos:end="3271:54"><call pos:start="3267:35" pos:end="3271:54"><name pos:start="3267:35" pos:end="3267:45">gen_mac16_m</name><argument_list pos:start="3267:46" pos:end="3271:54">(

                            <argument pos:start="3269:29" pos:end="3269:72"><expr pos:start="3269:29" pos:end="3269:72"><ternary pos:start="3269:29" pos:end="3269:72"><condition pos:start="3269:29" pos:end="3269:38"><expr pos:start="3269:29" pos:end="3269:36"><name pos:start="3269:29" pos:end="3269:36">is_m1_sr</name></expr> ?</condition><then pos:start="3269:40" pos:end="3269:57"> <expr pos:start="3269:40" pos:end="3269:57"><name pos:start="3269:40" pos:end="3269:57"><name pos:start="3269:40" pos:end="3269:45">cpu_SR</name><index pos:start="3269:46" pos:end="3269:57">[<expr pos:start="3269:47" pos:end="3269:56"><name pos:start="3269:47" pos:end="3269:48">MR</name> <operator pos:start="3269:50" pos:end="3269:50">+</operator> <name pos:start="3269:52" pos:end="3269:56">RRR_X</name></expr>]</index></name></expr> </then><else pos:start="3269:59" pos:end="3269:72">: <expr pos:start="3269:61" pos:end="3269:72"><name pos:start="3269:61" pos:end="3269:72"><name pos:start="3269:61" pos:end="3269:65">cpu_R</name><index pos:start="3269:66" pos:end="3269:72">[<expr pos:start="3269:67" pos:end="3269:71"><name pos:start="3269:67" pos:end="3269:71">RRR_S</name></expr>]</index></name></expr></else></ternary></expr></argument>,

                            <argument pos:start="3271:29" pos:end="3271:35"><expr pos:start="3271:29" pos:end="3271:35"><name pos:start="3271:29" pos:end="3271:31">OP1</name> <operator pos:start="3271:33" pos:end="3271:33">&amp;</operator> <literal type="number" pos:start="3271:35" pos:end="3271:35">1</literal></expr></argument>, <argument pos:start="3271:38" pos:end="3271:53"><expr pos:start="3271:38" pos:end="3271:53"><name pos:start="3271:38" pos:end="3271:39">op</name> <operator pos:start="3271:41" pos:end="3271:42">==</operator> <name pos:start="3271:44" pos:end="3271:53">MAC16_UMUL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="3273:21" pos:end="3277:55"><decl pos:start="3273:21" pos:end="3277:54"><type pos:start="3273:21" pos:end="3273:28"><name pos:start="3273:21" pos:end="3273:28">TCGv_i32</name></type> <name pos:start="3273:30" pos:end="3273:31">m2</name> <init pos:start="3273:33" pos:end="3277:54">= <expr pos:start="3273:35" pos:end="3277:54"><call pos:start="3273:35" pos:end="3277:54"><name pos:start="3273:35" pos:end="3273:45">gen_mac16_m</name><argument_list pos:start="3273:46" pos:end="3277:54">(

                            <argument pos:start="3275:29" pos:end="3275:76"><expr pos:start="3275:29" pos:end="3275:76"><ternary pos:start="3275:29" pos:end="3275:76"><condition pos:start="3275:29" pos:end="3275:38"><expr pos:start="3275:29" pos:end="3275:36"><name pos:start="3275:29" pos:end="3275:36">is_m2_sr</name></expr> ?</condition><then pos:start="3275:40" pos:end="3275:61"> <expr pos:start="3275:40" pos:end="3275:61"><name pos:start="3275:40" pos:end="3275:61"><name pos:start="3275:40" pos:end="3275:45">cpu_SR</name><index pos:start="3275:46" pos:end="3275:61">[<expr pos:start="3275:47" pos:end="3275:60"><name pos:start="3275:47" pos:end="3275:48">MR</name> <operator pos:start="3275:50" pos:end="3275:50">+</operator> <literal type="number" pos:start="3275:52" pos:end="3275:54">2</literal> <operator pos:start="3275:54" pos:end="3275:54">+</operator> <name pos:start="3275:56" pos:end="3275:60">RRR_Y</name></expr>]</index></name></expr> </then><else pos:start="3275:63" pos:end="3275:76">: <expr pos:start="3275:65" pos:end="3275:76"><name pos:start="3275:65" pos:end="3275:76"><name pos:start="3275:65" pos:end="3275:69">cpu_R</name><index pos:start="3275:70" pos:end="3275:76">[<expr pos:start="3275:71" pos:end="3275:75"><name pos:start="3275:71" pos:end="3275:75">RRR_T</name></expr>]</index></name></expr></else></ternary></expr></argument>,

                            <argument pos:start="3277:29" pos:end="3277:35"><expr pos:start="3277:29" pos:end="3277:35"><name pos:start="3277:29" pos:end="3277:31">OP1</name> <operator pos:start="3277:33" pos:end="3277:33">&amp;</operator> <literal type="number" pos:start="3277:35" pos:end="3277:35">2</literal></expr></argument>, <argument pos:start="3277:38" pos:end="3277:53"><expr pos:start="3277:38" pos:end="3277:53"><name pos:start="3277:38" pos:end="3277:39">op</name> <operator pos:start="3277:41" pos:end="3277:42">==</operator> <name pos:start="3277:44" pos:end="3277:53">MAC16_UMUL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                    <if_stmt pos:start="3281:21" pos:end="3339:21"><if pos:start="3281:21" pos:end="3295:21">if <condition pos:start="3281:24" pos:end="3281:60">(<expr pos:start="3281:25" pos:end="3281:59"><name pos:start="3281:25" pos:end="3281:26">op</name> <operator pos:start="3281:28" pos:end="3281:29">==</operator> <name pos:start="3281:31" pos:end="3281:39">MAC16_MUL</name> <operator pos:start="3281:41" pos:end="3281:42">||</operator> <name pos:start="3281:44" pos:end="3281:45">op</name> <operator pos:start="3281:47" pos:end="3281:48">==</operator> <name pos:start="3281:50" pos:end="3281:59">MAC16_UMUL</name></expr>)</condition> <block pos:start="3281:62" pos:end="3295:21">{<block_content pos:start="3283:25" pos:end="3293:25">

                        <expr_stmt pos:start="3283:25" pos:end="3283:63"><expr pos:start="3283:25" pos:end="3283:62"><call pos:start="3283:25" pos:end="3283:62"><name pos:start="3283:25" pos:end="3283:39">tcg_gen_mul_i32</name><argument_list pos:start="3283:40" pos:end="3283:62">(<argument pos:start="3283:41" pos:end="3283:53"><expr pos:start="3283:41" pos:end="3283:53"><name pos:start="3283:41" pos:end="3283:53"><name pos:start="3283:41" pos:end="3283:46">cpu_SR</name><index pos:start="3283:47" pos:end="3283:53">[<expr pos:start="3283:48" pos:end="3283:52"><name pos:start="3283:48" pos:end="3283:52">ACCLO</name></expr>]</index></name></expr></argument>, <argument pos:start="3283:56" pos:end="3283:57"><expr pos:start="3283:56" pos:end="3283:57"><name pos:start="3283:56" pos:end="3283:57">m1</name></expr></argument>, <argument pos:start="3283:60" pos:end="3283:61"><expr pos:start="3283:60" pos:end="3283:61"><name pos:start="3283:60" pos:end="3283:61">m2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="3285:25" pos:end="3293:25"><if pos:start="3285:25" pos:end="3289:25">if <condition pos:start="3285:28" pos:end="3285:45">(<expr pos:start="3285:29" pos:end="3285:44"><name pos:start="3285:29" pos:end="3285:30">op</name> <operator pos:start="3285:32" pos:end="3285:33">==</operator> <name pos:start="3285:35" pos:end="3285:44">MAC16_UMUL</name></expr>)</condition> <block pos:start="3285:47" pos:end="3289:25">{<block_content pos:start="3287:29" pos:end="3287:63">

                            <expr_stmt pos:start="3287:29" pos:end="3287:63"><expr pos:start="3287:29" pos:end="3287:62"><call pos:start="3287:29" pos:end="3287:62"><name pos:start="3287:29" pos:end="3287:44">tcg_gen_movi_i32</name><argument_list pos:start="3287:45" pos:end="3287:62">(<argument pos:start="3287:46" pos:end="3287:58"><expr pos:start="3287:46" pos:end="3287:58"><name pos:start="3287:46" pos:end="3287:58"><name pos:start="3287:46" pos:end="3287:51">cpu_SR</name><index pos:start="3287:52" pos:end="3287:58">[<expr pos:start="3287:53" pos:end="3287:57"><name pos:start="3287:53" pos:end="3287:57">ACCHI</name></expr>]</index></name></expr></argument>, <argument pos:start="3287:61" pos:end="3287:61"><expr pos:start="3287:61" pos:end="3287:61"><literal type="number" pos:start="3287:61" pos:end="3287:61">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="3289:27" pos:end="3293:25">else <block pos:start="3289:32" pos:end="3293:25">{<block_content pos:start="3291:29" pos:end="3291:79">

                            <expr_stmt pos:start="3291:29" pos:end="3291:79"><expr pos:start="3291:29" pos:end="3291:78"><call pos:start="3291:29" pos:end="3291:78"><name pos:start="3291:29" pos:end="3291:44">tcg_gen_sari_i32</name><argument_list pos:start="3291:45" pos:end="3291:78">(<argument pos:start="3291:46" pos:end="3291:58"><expr pos:start="3291:46" pos:end="3291:58"><name pos:start="3291:46" pos:end="3291:58"><name pos:start="3291:46" pos:end="3291:51">cpu_SR</name><index pos:start="3291:52" pos:end="3291:58">[<expr pos:start="3291:53" pos:end="3291:57"><name pos:start="3291:53" pos:end="3291:57">ACCHI</name></expr>]</index></name></expr></argument>, <argument pos:start="3291:61" pos:end="3291:73"><expr pos:start="3291:61" pos:end="3291:73"><name pos:start="3291:61" pos:end="3291:73"><name pos:start="3291:61" pos:end="3291:66">cpu_SR</name><index pos:start="3291:67" pos:end="3291:73">[<expr pos:start="3291:68" pos:end="3291:72"><name pos:start="3291:68" pos:end="3291:72">ACCLO</name></expr>]</index></name></expr></argument>, <argument pos:start="3291:76" pos:end="3291:77"><expr pos:start="3291:76" pos:end="3291:77"><literal type="number" pos:start="3291:76" pos:end="3291:77">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></if> <else pos:start="3295:23" pos:end="3339:21">else <block pos:start="3295:28" pos:end="3339:21">{<block_content pos:start="3297:25" pos:end="3337:47">

                        <decl_stmt pos:start="3297:25" pos:end="3297:58"><decl pos:start="3297:25" pos:end="3297:57"><type pos:start="3297:25" pos:end="3297:32"><name pos:start="3297:25" pos:end="3297:32">TCGv_i32</name></type> <name pos:start="3297:34" pos:end="3297:36">res</name> <init pos:start="3297:38" pos:end="3297:57">= <expr pos:start="3297:40" pos:end="3297:57"><call pos:start="3297:40" pos:end="3297:57"><name pos:start="3297:40" pos:end="3297:55">tcg_temp_new_i32</name><argument_list pos:start="3297:56" pos:end="3297:57">()</argument_list></call></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="3299:25" pos:end="3299:60"><decl pos:start="3299:25" pos:end="3299:59"><type pos:start="3299:25" pos:end="3299:32"><name pos:start="3299:25" pos:end="3299:32">TCGv_i64</name></type> <name pos:start="3299:34" pos:end="3299:38">res64</name> <init pos:start="3299:40" pos:end="3299:59">= <expr pos:start="3299:42" pos:end="3299:59"><call pos:start="3299:42" pos:end="3299:59"><name pos:start="3299:42" pos:end="3299:57">tcg_temp_new_i64</name><argument_list pos:start="3299:58" pos:end="3299:59">()</argument_list></call></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="3301:25" pos:end="3301:58"><decl pos:start="3301:25" pos:end="3301:57"><type pos:start="3301:25" pos:end="3301:32"><name pos:start="3301:25" pos:end="3301:32">TCGv_i64</name></type> <name pos:start="3301:34" pos:end="3301:36">tmp</name> <init pos:start="3301:38" pos:end="3301:57">= <expr pos:start="3301:40" pos:end="3301:57"><call pos:start="3301:40" pos:end="3301:57"><name pos:start="3301:40" pos:end="3301:55">tcg_temp_new_i64</name><argument_list pos:start="3301:56" pos:end="3301:57">()</argument_list></call></expr></init></decl>;</decl_stmt>



                        <expr_stmt pos:start="3305:25" pos:end="3305:53"><expr pos:start="3305:25" pos:end="3305:52"><call pos:start="3305:25" pos:end="3305:52"><name pos:start="3305:25" pos:end="3305:39">tcg_gen_mul_i32</name><argument_list pos:start="3305:40" pos:end="3305:52">(<argument pos:start="3305:41" pos:end="3305:43"><expr pos:start="3305:41" pos:end="3305:43"><name pos:start="3305:41" pos:end="3305:43">res</name></expr></argument>, <argument pos:start="3305:46" pos:end="3305:47"><expr pos:start="3305:46" pos:end="3305:47"><name pos:start="3305:46" pos:end="3305:47">m1</name></expr></argument>, <argument pos:start="3305:50" pos:end="3305:51"><expr pos:start="3305:50" pos:end="3305:51"><name pos:start="3305:50" pos:end="3305:51">m2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="3307:25" pos:end="3307:56"><expr pos:start="3307:25" pos:end="3307:55"><call pos:start="3307:25" pos:end="3307:55"><name pos:start="3307:25" pos:end="3307:43">tcg_gen_ext_i32_i64</name><argument_list pos:start="3307:44" pos:end="3307:55">(<argument pos:start="3307:45" pos:end="3307:49"><expr pos:start="3307:45" pos:end="3307:49"><name pos:start="3307:45" pos:end="3307:49">res64</name></expr></argument>, <argument pos:start="3307:52" pos:end="3307:54"><expr pos:start="3307:52" pos:end="3307:54"><name pos:start="3307:52" pos:end="3307:54">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="3309:25" pos:end="3311:62"><expr pos:start="3309:25" pos:end="3311:61"><call pos:start="3309:25" pos:end="3311:61"><name pos:start="3309:25" pos:end="3309:46">tcg_gen_concat_i32_i64</name><argument_list pos:start="3309:47" pos:end="3311:61">(<argument pos:start="3309:48" pos:end="3309:50"><expr pos:start="3309:48" pos:end="3309:50"><name pos:start="3309:48" pos:end="3309:50">tmp</name></expr></argument>,

                                <argument pos:start="3311:33" pos:end="3311:45"><expr pos:start="3311:33" pos:end="3311:45"><name pos:start="3311:33" pos:end="3311:45"><name pos:start="3311:33" pos:end="3311:38">cpu_SR</name><index pos:start="3311:39" pos:end="3311:45">[<expr pos:start="3311:40" pos:end="3311:44"><name pos:start="3311:40" pos:end="3311:44">ACCLO</name></expr>]</index></name></expr></argument>, <argument pos:start="3311:48" pos:end="3311:60"><expr pos:start="3311:48" pos:end="3311:60"><name pos:start="3311:48" pos:end="3311:60"><name pos:start="3311:48" pos:end="3311:53">cpu_SR</name><index pos:start="3311:54" pos:end="3311:60">[<expr pos:start="3311:55" pos:end="3311:59"><name pos:start="3311:55" pos:end="3311:59">ACCHI</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="3313:25" pos:end="3321:25"><if pos:start="3313:25" pos:end="3317:25">if <condition pos:start="3313:28" pos:end="3313:45">(<expr pos:start="3313:29" pos:end="3313:44"><name pos:start="3313:29" pos:end="3313:30">op</name> <operator pos:start="3313:32" pos:end="3313:33">==</operator> <name pos:start="3313:35" pos:end="3313:44">MAC16_MULA</name></expr>)</condition> <block pos:start="3313:47" pos:end="3317:25">{<block_content pos:start="3315:29" pos:end="3315:61">

                            <expr_stmt pos:start="3315:29" pos:end="3315:61"><expr pos:start="3315:29" pos:end="3315:60"><call pos:start="3315:29" pos:end="3315:60"><name pos:start="3315:29" pos:end="3315:43">tcg_gen_add_i64</name><argument_list pos:start="3315:44" pos:end="3315:60">(<argument pos:start="3315:45" pos:end="3315:47"><expr pos:start="3315:45" pos:end="3315:47"><name pos:start="3315:45" pos:end="3315:47">tmp</name></expr></argument>, <argument pos:start="3315:50" pos:end="3315:52"><expr pos:start="3315:50" pos:end="3315:52"><name pos:start="3315:50" pos:end="3315:52">tmp</name></expr></argument>, <argument pos:start="3315:55" pos:end="3315:59"><expr pos:start="3315:55" pos:end="3315:59"><name pos:start="3315:55" pos:end="3315:59">res64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="3317:27" pos:end="3321:25">else <block pos:start="3317:32" pos:end="3321:25">{<block_content pos:start="3319:29" pos:end="3319:61">

                            <expr_stmt pos:start="3319:29" pos:end="3319:61"><expr pos:start="3319:29" pos:end="3319:60"><call pos:start="3319:29" pos:end="3319:60"><name pos:start="3319:29" pos:end="3319:43">tcg_gen_sub_i64</name><argument_list pos:start="3319:44" pos:end="3319:60">(<argument pos:start="3319:45" pos:end="3319:47"><expr pos:start="3319:45" pos:end="3319:47"><name pos:start="3319:45" pos:end="3319:47">tmp</name></expr></argument>, <argument pos:start="3319:50" pos:end="3319:52"><expr pos:start="3319:50" pos:end="3319:52"><name pos:start="3319:50" pos:end="3319:52">tmp</name></expr></argument>, <argument pos:start="3319:55" pos:end="3319:59"><expr pos:start="3319:55" pos:end="3319:59"><name pos:start="3319:55" pos:end="3319:59">res64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="3323:25" pos:end="3323:66"><expr pos:start="3323:25" pos:end="3323:65"><call pos:start="3323:25" pos:end="3323:65"><name pos:start="3323:25" pos:end="3323:45">tcg_gen_trunc_i64_i32</name><argument_list pos:start="3323:46" pos:end="3323:65">(<argument pos:start="3323:47" pos:end="3323:59"><expr pos:start="3323:47" pos:end="3323:59"><name pos:start="3323:47" pos:end="3323:59"><name pos:start="3323:47" pos:end="3323:52">cpu_SR</name><index pos:start="3323:53" pos:end="3323:59">[<expr pos:start="3323:54" pos:end="3323:58"><name pos:start="3323:54" pos:end="3323:58">ACCLO</name></expr>]</index></name></expr></argument>, <argument pos:start="3323:62" pos:end="3323:64"><expr pos:start="3323:62" pos:end="3323:64"><name pos:start="3323:62" pos:end="3323:64">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="3325:25" pos:end="3325:55"><expr pos:start="3325:25" pos:end="3325:54"><call pos:start="3325:25" pos:end="3325:54"><name pos:start="3325:25" pos:end="3325:40">tcg_gen_shri_i64</name><argument_list pos:start="3325:41" pos:end="3325:54">(<argument pos:start="3325:42" pos:end="3325:44"><expr pos:start="3325:42" pos:end="3325:44"><name pos:start="3325:42" pos:end="3325:44">tmp</name></expr></argument>, <argument pos:start="3325:47" pos:end="3325:49"><expr pos:start="3325:47" pos:end="3325:49"><name pos:start="3325:47" pos:end="3325:49">tmp</name></expr></argument>, <argument pos:start="3325:52" pos:end="3325:53"><expr pos:start="3325:52" pos:end="3325:53"><literal type="number" pos:start="3325:52" pos:end="3325:53">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="3327:25" pos:end="3327:66"><expr pos:start="3327:25" pos:end="3327:65"><call pos:start="3327:25" pos:end="3327:65"><name pos:start="3327:25" pos:end="3327:45">tcg_gen_trunc_i64_i32</name><argument_list pos:start="3327:46" pos:end="3327:65">(<argument pos:start="3327:47" pos:end="3327:59"><expr pos:start="3327:47" pos:end="3327:59"><name pos:start="3327:47" pos:end="3327:59"><name pos:start="3327:47" pos:end="3327:52">cpu_SR</name><index pos:start="3327:53" pos:end="3327:59">[<expr pos:start="3327:54" pos:end="3327:58"><name pos:start="3327:54" pos:end="3327:58">ACCHI</name></expr>]</index></name></expr></argument>, <argument pos:start="3327:62" pos:end="3327:64"><expr pos:start="3327:62" pos:end="3327:64"><name pos:start="3327:62" pos:end="3327:64">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="3329:25" pos:end="3329:72"><expr pos:start="3329:25" pos:end="3329:71"><call pos:start="3329:25" pos:end="3329:71"><name pos:start="3329:25" pos:end="3329:41">tcg_gen_ext8s_i32</name><argument_list pos:start="3329:42" pos:end="3329:71">(<argument pos:start="3329:43" pos:end="3329:55"><expr pos:start="3329:43" pos:end="3329:55"><name pos:start="3329:43" pos:end="3329:55"><name pos:start="3329:43" pos:end="3329:48">cpu_SR</name><index pos:start="3329:49" pos:end="3329:55">[<expr pos:start="3329:50" pos:end="3329:54"><name pos:start="3329:50" pos:end="3329:54">ACCHI</name></expr>]</index></name></expr></argument>, <argument pos:start="3329:58" pos:end="3329:70"><expr pos:start="3329:58" pos:end="3329:70"><name pos:start="3329:58" pos:end="3329:70"><name pos:start="3329:58" pos:end="3329:63">cpu_SR</name><index pos:start="3329:64" pos:end="3329:70">[<expr pos:start="3329:65" pos:end="3329:69"><name pos:start="3329:65" pos:end="3329:69">ACCHI</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                        <expr_stmt pos:start="3333:25" pos:end="3333:43"><expr pos:start="3333:25" pos:end="3333:42"><call pos:start="3333:25" pos:end="3333:42"><name pos:start="3333:25" pos:end="3333:37">tcg_temp_free</name><argument_list pos:start="3333:38" pos:end="3333:42">(<argument pos:start="3333:39" pos:end="3333:41"><expr pos:start="3333:39" pos:end="3333:41"><name pos:start="3333:39" pos:end="3333:41">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="3335:25" pos:end="3335:49"><expr pos:start="3335:25" pos:end="3335:48"><call pos:start="3335:25" pos:end="3335:48"><name pos:start="3335:25" pos:end="3335:41">tcg_temp_free_i64</name><argument_list pos:start="3335:42" pos:end="3335:48">(<argument pos:start="3335:43" pos:end="3335:47"><expr pos:start="3335:43" pos:end="3335:47"><name pos:start="3335:43" pos:end="3335:47">res64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="3337:25" pos:end="3337:47"><expr pos:start="3337:25" pos:end="3337:46"><call pos:start="3337:25" pos:end="3337:46"><name pos:start="3337:25" pos:end="3337:41">tcg_temp_free_i64</name><argument_list pos:start="3337:42" pos:end="3337:46">(<argument pos:start="3337:43" pos:end="3337:45"><expr pos:start="3337:43" pos:end="3337:45"><name pos:start="3337:43" pos:end="3337:45">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="3341:21" pos:end="3341:38"><expr pos:start="3341:21" pos:end="3341:37"><call pos:start="3341:21" pos:end="3341:37"><name pos:start="3341:21" pos:end="3341:33">tcg_temp_free</name><argument_list pos:start="3341:34" pos:end="3341:37">(<argument pos:start="3341:35" pos:end="3341:36"><expr pos:start="3341:35" pos:end="3341:36"><name pos:start="3341:35" pos:end="3341:36">m1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3343:21" pos:end="3343:38"><expr pos:start="3343:21" pos:end="3343:37"><call pos:start="3343:21" pos:end="3343:37"><name pos:start="3343:21" pos:end="3343:33">tcg_temp_free</name><argument_list pos:start="3343:34" pos:end="3343:37">(<argument pos:start="3343:35" pos:end="3343:36"><expr pos:start="3343:35" pos:end="3343:36"><name pos:start="3343:35" pos:end="3343:36">m2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="3347:17" pos:end="3353:17"><if pos:start="3347:17" pos:end="3353:17">if <condition pos:start="3347:20" pos:end="3347:30">(<expr pos:start="3347:21" pos:end="3347:29"><name pos:start="3347:21" pos:end="3347:29">ld_offset</name></expr>)</condition> <block pos:start="3347:32" pos:end="3353:17">{<block_content pos:start="3349:21" pos:end="3351:63">

                    <expr_stmt pos:start="3349:21" pos:end="3349:57"><expr pos:start="3349:21" pos:end="3349:56"><call pos:start="3349:21" pos:end="3349:56"><name pos:start="3349:21" pos:end="3349:35">tcg_gen_mov_i32</name><argument_list pos:start="3349:36" pos:end="3349:56">(<argument pos:start="3349:37" pos:end="3349:48"><expr pos:start="3349:37" pos:end="3349:48"><name pos:start="3349:37" pos:end="3349:48"><name pos:start="3349:37" pos:end="3349:41">cpu_R</name><index pos:start="3349:42" pos:end="3349:48">[<expr pos:start="3349:43" pos:end="3349:47"><name pos:start="3349:43" pos:end="3349:47">RRR_S</name></expr>]</index></name></expr></argument>, <argument pos:start="3349:51" pos:end="3349:55"><expr pos:start="3349:51" pos:end="3349:55"><name pos:start="3349:51" pos:end="3349:55">vaddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3351:21" pos:end="3351:63"><expr pos:start="3351:21" pos:end="3351:62"><call pos:start="3351:21" pos:end="3351:62"><name pos:start="3351:21" pos:end="3351:35">tcg_gen_mov_i32</name><argument_list pos:start="3351:36" pos:end="3351:62">(<argument pos:start="3351:37" pos:end="3351:54"><expr pos:start="3351:37" pos:end="3351:54"><name pos:start="3351:37" pos:end="3351:54"><name pos:start="3351:37" pos:end="3351:42">cpu_SR</name><index pos:start="3351:43" pos:end="3351:54">[<expr pos:start="3351:44" pos:end="3351:53"><name pos:start="3351:44" pos:end="3351:45">MR</name> <operator pos:start="3351:47" pos:end="3351:47">+</operator> <name pos:start="3351:49" pos:end="3351:53">RRR_W</name></expr>]</index></name></expr></argument>, <argument pos:start="3351:57" pos:end="3351:61"><expr pos:start="3351:57" pos:end="3351:61"><name pos:start="3351:57" pos:end="3351:61">mem32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="3355:17" pos:end="3355:37"><expr pos:start="3355:17" pos:end="3355:36"><call pos:start="3355:17" pos:end="3355:36"><name pos:start="3355:17" pos:end="3355:29">tcg_temp_free</name><argument_list pos:start="3355:30" pos:end="3355:36">(<argument pos:start="3355:31" pos:end="3355:35"><expr pos:start="3355:31" pos:end="3355:35"><name pos:start="3355:31" pos:end="3355:35">vaddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3357:17" pos:end="3357:37"><expr pos:start="3357:17" pos:end="3357:36"><call pos:start="3357:17" pos:end="3357:36"><name pos:start="3357:17" pos:end="3357:29">tcg_temp_free</name><argument_list pos:start="3357:30" pos:end="3357:36">(<argument pos:start="3357:31" pos:end="3357:35"><expr pos:start="3357:31" pos:end="3357:35"><name pos:start="3357:31" pos:end="3357:35">mem32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>

        </block_content>}</block>

        <break pos:start="3363:9" pos:end="3363:14">break;</break>



    <case pos:start="3367:5" pos:end="3367:11">case <expr pos:start="3367:10" pos:end="3367:10"><literal type="number" pos:start="3367:10" pos:end="3367:10">5</literal></expr>:</case> <comment type="block" pos:start="3367:13" pos:end="3367:21">/*CALLN*/</comment>

        <switch pos:start="3369:9" pos:end="3397:9">switch <condition pos:start="3369:16" pos:end="3369:23">(<expr pos:start="3369:17" pos:end="3369:22"><name pos:start="3369:17" pos:end="3369:22">CALL_N</name></expr>)</condition> <block pos:start="3369:25" pos:end="3397:9">{<block_content pos:start="3371:9" pos:end="3395:18">

        <case pos:start="3371:9" pos:end="3371:15">case <expr pos:start="3371:14" pos:end="3371:14"><literal type="number" pos:start="3371:14" pos:end="3371:14">0</literal></expr>:</case> <comment type="block" pos:start="3371:17" pos:end="3371:25">/*CALL0*/</comment>

            <expr_stmt pos:start="3373:13" pos:end="3373:52"><expr pos:start="3373:13" pos:end="3373:51"><call pos:start="3373:13" pos:end="3373:51"><name pos:start="3373:13" pos:end="3373:28">tcg_gen_movi_i32</name><argument_list pos:start="3373:29" pos:end="3373:51">(<argument pos:start="3373:30" pos:end="3373:37"><expr pos:start="3373:30" pos:end="3373:37"><name pos:start="3373:30" pos:end="3373:37"><name pos:start="3373:30" pos:end="3373:34">cpu_R</name><index pos:start="3373:35" pos:end="3373:37">[<expr pos:start="3373:36" pos:end="3373:36"><literal type="number" pos:start="3373:36" pos:end="3373:36">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="3373:40" pos:end="3373:50"><expr pos:start="3373:40" pos:end="3373:50"><name pos:start="3373:40" pos:end="3373:50"><name pos:start="3373:40" pos:end="3373:41">dc</name><operator pos:start="3373:42" pos:end="3373:43">-&gt;</operator><name pos:start="3373:44" pos:end="3373:50">next_pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="3375:13" pos:end="3375:72"><expr pos:start="3375:13" pos:end="3375:71"><call pos:start="3375:13" pos:end="3375:71"><name pos:start="3375:13" pos:end="3375:21">gen_jumpi</name><argument_list pos:start="3375:22" pos:end="3375:71">(<argument pos:start="3375:23" pos:end="3375:24"><expr pos:start="3375:23" pos:end="3375:24"><name pos:start="3375:23" pos:end="3375:24">dc</name></expr></argument>, <argument pos:start="3375:27" pos:end="3375:67"><expr pos:start="3375:27" pos:end="3375:67"><operator pos:start="3375:27" pos:end="3375:27">(</operator><name pos:start="3375:28" pos:end="3375:33"><name pos:start="3375:28" pos:end="3375:29">dc</name><operator pos:start="3375:30" pos:end="3375:31">-&gt;</operator><name pos:start="3375:32" pos:end="3375:33">pc</name></name> <operator pos:start="3375:35" pos:end="3375:35">&amp;</operator> <operator pos:start="3375:37" pos:end="3375:37">~</operator><literal type="number" pos:start="3375:38" pos:end="3375:38">3</literal><operator pos:start="3375:39" pos:end="3375:39">)</operator> <operator pos:start="3375:41" pos:end="3375:41">+</operator> <operator pos:start="3375:43" pos:end="3375:43">(</operator><name pos:start="3375:44" pos:end="3375:57">CALL_OFFSET_SE</name> <operator pos:start="3375:59" pos:end="3375:60">&lt;&lt;</operator> <literal type="number" pos:start="3375:62" pos:end="3375:62">2</literal><operator pos:start="3375:63" pos:end="3375:63">)</operator> <operator pos:start="3375:65" pos:end="3375:65">+</operator> <literal type="number" pos:start="3375:67" pos:end="3375:67">4</literal></expr></argument>, <argument pos:start="3375:70" pos:end="3375:70"><expr pos:start="3375:70" pos:end="3375:70"><literal type="number" pos:start="3375:70" pos:end="3375:70">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="3377:13" pos:end="3377:18">break;</break>



        <case pos:start="3381:9" pos:end="3381:15">case <expr pos:start="3381:14" pos:end="3381:14"><literal type="number" pos:start="3381:14" pos:end="3381:14">1</literal></expr>:</case> <comment type="block" pos:start="3381:17" pos:end="3381:26">/*CALL4w*/</comment>

        <case pos:start="3383:9" pos:end="3383:15">case <expr pos:start="3383:14" pos:end="3383:14"><literal type="number" pos:start="3383:14" pos:end="3383:14">2</literal></expr>:</case> <comment type="block" pos:start="3383:17" pos:end="3383:26">/*CALL8w*/</comment>

        <case pos:start="3385:9" pos:end="3385:15">case <expr pos:start="3385:14" pos:end="3385:14"><literal type="number" pos:start="3385:14" pos:end="3385:14">3</literal></expr>:</case> <comment type="block" pos:start="3385:17" pos:end="3385:27">/*CALL12w*/</comment>

            <expr_stmt pos:start="3387:13" pos:end="3387:56"><expr pos:start="3387:13" pos:end="3387:55"><call pos:start="3387:13" pos:end="3387:55"><name pos:start="3387:13" pos:end="3387:22">HAS_OPTION</name><argument_list pos:start="3387:23" pos:end="3387:55">(<argument pos:start="3387:24" pos:end="3387:54"><expr pos:start="3387:24" pos:end="3387:54"><name pos:start="3387:24" pos:end="3387:54">XTENSA_OPTION_WINDOWED_REGISTER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="3389:13" pos:end="3389:47"><expr pos:start="3389:13" pos:end="3389:46"><call pos:start="3389:13" pos:end="3389:46"><name pos:start="3389:13" pos:end="3389:29">gen_window_check1</name><argument_list pos:start="3389:30" pos:end="3389:46">(<argument pos:start="3389:31" pos:end="3389:32"><expr pos:start="3389:31" pos:end="3389:32"><name pos:start="3389:31" pos:end="3389:32">dc</name></expr></argument>, <argument pos:start="3389:35" pos:end="3389:45"><expr pos:start="3389:35" pos:end="3389:45"><name pos:start="3389:35" pos:end="3389:40">CALL_N</name> <operator pos:start="3389:42" pos:end="3389:43">&lt;&lt;</operator> <literal type="number" pos:start="3389:45" pos:end="3389:45">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="3391:13" pos:end="3393:66"><expr pos:start="3391:13" pos:end="3393:65"><call pos:start="3391:13" pos:end="3393:65"><name pos:start="3391:13" pos:end="3391:22">gen_callwi</name><argument_list pos:start="3391:23" pos:end="3393:65">(<argument pos:start="3391:24" pos:end="3391:25"><expr pos:start="3391:24" pos:end="3391:25"><name pos:start="3391:24" pos:end="3391:25">dc</name></expr></argument>, <argument pos:start="3391:28" pos:end="3391:33"><expr pos:start="3391:28" pos:end="3391:33"><name pos:start="3391:28" pos:end="3391:33">CALL_N</name></expr></argument>,

                    <argument pos:start="3393:21" pos:end="3393:61"><expr pos:start="3393:21" pos:end="3393:61"><operator pos:start="3393:21" pos:end="3393:21">(</operator><name pos:start="3393:22" pos:end="3393:27"><name pos:start="3393:22" pos:end="3393:23">dc</name><operator pos:start="3393:24" pos:end="3393:25">-&gt;</operator><name pos:start="3393:26" pos:end="3393:27">pc</name></name> <operator pos:start="3393:29" pos:end="3393:29">&amp;</operator> <operator pos:start="3393:31" pos:end="3393:31">~</operator><literal type="number" pos:start="3393:32" pos:end="3393:32">3</literal><operator pos:start="3393:33" pos:end="3393:33">)</operator> <operator pos:start="3393:35" pos:end="3393:35">+</operator> <operator pos:start="3393:37" pos:end="3393:37">(</operator><name pos:start="3393:38" pos:end="3393:51">CALL_OFFSET_SE</name> <operator pos:start="3393:53" pos:end="3393:54">&lt;&lt;</operator> <literal type="number" pos:start="3393:56" pos:end="3393:56">2</literal><operator pos:start="3393:57" pos:end="3393:57">)</operator> <operator pos:start="3393:59" pos:end="3393:59">+</operator> <literal type="number" pos:start="3393:61" pos:end="3393:61">4</literal></expr></argument>, <argument pos:start="3393:64" pos:end="3393:64"><expr pos:start="3393:64" pos:end="3393:64"><literal type="number" pos:start="3393:64" pos:end="3393:64">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="3395:13" pos:end="3395:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="3399:9" pos:end="3399:14">break;</break>



    <case pos:start="3403:5" pos:end="3403:11">case <expr pos:start="3403:10" pos:end="3403:10"><literal type="number" pos:start="3403:10" pos:end="3403:10">6</literal></expr>:</case> <comment type="block" pos:start="3403:13" pos:end="3403:18">/*SI*/</comment>

        <switch pos:start="3405:9" pos:end="3625:9">switch <condition pos:start="3405:16" pos:end="3405:23">(<expr pos:start="3405:17" pos:end="3405:22"><name pos:start="3405:17" pos:end="3405:22">CALL_N</name></expr>)</condition> <block pos:start="3405:25" pos:end="3625:9">{<block_content pos:start="3407:9" pos:end="3621:18">

        <case pos:start="3407:9" pos:end="3407:15">case <expr pos:start="3407:14" pos:end="3407:14"><literal type="number" pos:start="3407:14" pos:end="3407:14">0</literal></expr>:</case> <comment type="block" pos:start="3407:17" pos:end="3407:21">/*J*/</comment>

            <expr_stmt pos:start="3409:13" pos:end="3409:58"><expr pos:start="3409:13" pos:end="3409:57"><call pos:start="3409:13" pos:end="3409:57"><name pos:start="3409:13" pos:end="3409:21">gen_jumpi</name><argument_list pos:start="3409:22" pos:end="3409:57">(<argument pos:start="3409:23" pos:end="3409:24"><expr pos:start="3409:23" pos:end="3409:24"><name pos:start="3409:23" pos:end="3409:24">dc</name></expr></argument>, <argument pos:start="3409:27" pos:end="3409:53"><expr pos:start="3409:27" pos:end="3409:53"><name pos:start="3409:27" pos:end="3409:32"><name pos:start="3409:27" pos:end="3409:28">dc</name><operator pos:start="3409:29" pos:end="3409:30">-&gt;</operator><name pos:start="3409:31" pos:end="3409:32">pc</name></name> <operator pos:start="3409:34" pos:end="3409:34">+</operator> <literal type="number" pos:start="3409:36" pos:end="3409:38">4</literal> <operator pos:start="3409:38" pos:end="3409:38">+</operator> <name pos:start="3409:40" pos:end="3409:53">CALL_OFFSET_SE</name></expr></argument>, <argument pos:start="3409:56" pos:end="3409:56"><expr pos:start="3409:56" pos:end="3409:56"><literal type="number" pos:start="3409:56" pos:end="3409:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="3411:13" pos:end="3411:18">break;</break>



        <case pos:start="3415:9" pos:end="3415:15">case <expr pos:start="3415:14" pos:end="3415:14"><literal type="number" pos:start="3415:14" pos:end="3415:14">1</literal></expr>:</case> <comment type="block" pos:start="3415:17" pos:end="3415:22">/*BZ*/</comment>

            <expr_stmt pos:start="3417:13" pos:end="3417:43"><expr pos:start="3417:13" pos:end="3417:42"><call pos:start="3417:13" pos:end="3417:42"><name pos:start="3417:13" pos:end="3417:29">gen_window_check1</name><argument_list pos:start="3417:30" pos:end="3417:42">(<argument pos:start="3417:31" pos:end="3417:32"><expr pos:start="3417:31" pos:end="3417:32"><name pos:start="3417:31" pos:end="3417:32">dc</name></expr></argument>, <argument pos:start="3417:35" pos:end="3417:41"><expr pos:start="3417:35" pos:end="3417:41"><name pos:start="3417:35" pos:end="3417:41">BRI12_S</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <block pos:start="3419:13" pos:end="3439:13">{<block_content pos:start="3421:17" pos:end="3437:44">

                <decl_stmt pos:start="3421:17" pos:end="3431:18"><decl pos:start="3421:17" pos:end="3431:17"><type pos:start="3421:17" pos:end="3421:36"><specifier pos:start="3421:17" pos:end="3421:22">static</specifier> <specifier pos:start="3421:24" pos:end="3421:28">const</specifier> <name pos:start="3421:30" pos:end="3421:36">TCGCond</name></type> <name pos:start="3421:38" pos:end="3421:43"><name pos:start="3421:38" pos:end="3421:41">cond</name><index pos:start="3421:42" pos:end="3421:43">[]</index></name> <init pos:start="3421:45" pos:end="3431:17">= <expr pos:start="3421:47" pos:end="3431:17"><block pos:start="3421:47" pos:end="3431:17">{

                    <expr pos:start="3423:21" pos:end="3423:31"><name pos:start="3423:21" pos:end="3423:31">TCG_COND_EQ</name></expr>, <comment type="block" pos:start="3423:34" pos:end="3423:41">/*BEQZ*/</comment>

                    <expr pos:start="3425:21" pos:end="3425:31"><name pos:start="3425:21" pos:end="3425:31">TCG_COND_NE</name></expr>, <comment type="block" pos:start="3425:34" pos:end="3425:41">/*BNEZ*/</comment>

                    <expr pos:start="3427:21" pos:end="3427:31"><name pos:start="3427:21" pos:end="3427:31">TCG_COND_LT</name></expr>, <comment type="block" pos:start="3427:34" pos:end="3427:41">/*BLTZ*/</comment>

                    <expr pos:start="3429:21" pos:end="3429:31"><name pos:start="3429:21" pos:end="3429:31">TCG_COND_GE</name></expr>, <comment type="block" pos:start="3429:34" pos:end="3429:41">/*BGEZ*/</comment>

                }</block></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="3435:17" pos:end="3437:44"><expr pos:start="3435:17" pos:end="3437:43"><call pos:start="3435:17" pos:end="3437:43"><name pos:start="3435:17" pos:end="3435:27">gen_brcondi</name><argument_list pos:start="3435:28" pos:end="3437:43">(<argument pos:start="3435:29" pos:end="3435:30"><expr pos:start="3435:29" pos:end="3435:30"><name pos:start="3435:29" pos:end="3435:30">dc</name></expr></argument>, <argument pos:start="3435:33" pos:end="3435:49"><expr pos:start="3435:33" pos:end="3435:49"><name pos:start="3435:33" pos:end="3435:49"><name pos:start="3435:33" pos:end="3435:36">cond</name><index pos:start="3435:37" pos:end="3435:49">[<expr pos:start="3435:38" pos:end="3435:48"><name pos:start="3435:38" pos:end="3435:44">BRI12_M</name> <operator pos:start="3435:46" pos:end="3435:46">&amp;</operator> <literal type="number" pos:start="3435:48" pos:end="3435:48">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="3435:52" pos:end="3435:65"><expr pos:start="3435:52" pos:end="3435:65"><name pos:start="3435:52" pos:end="3435:65"><name pos:start="3435:52" pos:end="3435:56">cpu_R</name><index pos:start="3435:57" pos:end="3435:65">[<expr pos:start="3435:58" pos:end="3435:64"><name pos:start="3435:58" pos:end="3435:64">BRI12_S</name></expr>]</index></name></expr></argument>, <argument pos:start="3435:68" pos:end="3435:68"><expr pos:start="3435:68" pos:end="3435:68"><literal type="number" pos:start="3435:68" pos:end="3435:68">0</literal></expr></argument>,

                        <argument pos:start="3437:25" pos:end="3437:42"><expr pos:start="3437:25" pos:end="3437:42"><literal type="number" pos:start="3437:25" pos:end="3437:27">4</literal> <operator pos:start="3437:27" pos:end="3437:27">+</operator> <name pos:start="3437:29" pos:end="3437:42">BRI12_IMM12_SE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>

            <break pos:start="3441:13" pos:end="3441:18">break;</break>



        <case pos:start="3445:9" pos:end="3445:15">case <expr pos:start="3445:14" pos:end="3445:14"><literal type="number" pos:start="3445:14" pos:end="3445:14">2</literal></expr>:</case> <comment type="block" pos:start="3445:17" pos:end="3445:23">/*BI0*/</comment>

            <expr_stmt pos:start="3447:13" pos:end="3447:42"><expr pos:start="3447:13" pos:end="3447:41"><call pos:start="3447:13" pos:end="3447:41"><name pos:start="3447:13" pos:end="3447:29">gen_window_check1</name><argument_list pos:start="3447:30" pos:end="3447:41">(<argument pos:start="3447:31" pos:end="3447:32"><expr pos:start="3447:31" pos:end="3447:32"><name pos:start="3447:31" pos:end="3447:32">dc</name></expr></argument>, <argument pos:start="3447:35" pos:end="3447:40"><expr pos:start="3447:35" pos:end="3447:40"><name pos:start="3447:35" pos:end="3447:40">BRI8_S</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <block pos:start="3449:13" pos:end="3469:13">{<block_content pos:start="3451:17" pos:end="3467:74">

                <decl_stmt pos:start="3451:17" pos:end="3461:18"><decl pos:start="3451:17" pos:end="3461:17"><type pos:start="3451:17" pos:end="3451:36"><specifier pos:start="3451:17" pos:end="3451:22">static</specifier> <specifier pos:start="3451:24" pos:end="3451:28">const</specifier> <name pos:start="3451:30" pos:end="3451:36">TCGCond</name></type> <name pos:start="3451:38" pos:end="3451:43"><name pos:start="3451:38" pos:end="3451:41">cond</name><index pos:start="3451:42" pos:end="3451:43">[]</index></name> <init pos:start="3451:45" pos:end="3461:17">= <expr pos:start="3451:47" pos:end="3461:17"><block pos:start="3451:47" pos:end="3461:17">{

                    <expr pos:start="3453:21" pos:end="3453:31"><name pos:start="3453:21" pos:end="3453:31">TCG_COND_EQ</name></expr>, <comment type="block" pos:start="3453:34" pos:end="3453:41">/*BEQI*/</comment>

                    <expr pos:start="3455:21" pos:end="3455:31"><name pos:start="3455:21" pos:end="3455:31">TCG_COND_NE</name></expr>, <comment type="block" pos:start="3455:34" pos:end="3455:41">/*BNEI*/</comment>

                    <expr pos:start="3457:21" pos:end="3457:31"><name pos:start="3457:21" pos:end="3457:31">TCG_COND_LT</name></expr>, <comment type="block" pos:start="3457:34" pos:end="3457:41">/*BLTI*/</comment>

                    <expr pos:start="3459:21" pos:end="3459:31"><name pos:start="3459:21" pos:end="3459:31">TCG_COND_GE</name></expr>, <comment type="block" pos:start="3459:34" pos:end="3459:41">/*BGEI*/</comment>

                }</block></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="3465:17" pos:end="3467:74"><expr pos:start="3465:17" pos:end="3467:73"><call pos:start="3465:17" pos:end="3467:73"><name pos:start="3465:17" pos:end="3465:27">gen_brcondi</name><argument_list pos:start="3465:28" pos:end="3467:73">(<argument pos:start="3465:29" pos:end="3465:30"><expr pos:start="3465:29" pos:end="3465:30"><name pos:start="3465:29" pos:end="3465:30">dc</name></expr></argument>, <argument pos:start="3465:33" pos:end="3465:48"><expr pos:start="3465:33" pos:end="3465:48"><name pos:start="3465:33" pos:end="3465:48"><name pos:start="3465:33" pos:end="3465:36">cond</name><index pos:start="3465:37" pos:end="3465:48">[<expr pos:start="3465:38" pos:end="3465:47"><name pos:start="3465:38" pos:end="3465:43">BRI8_M</name> <operator pos:start="3465:45" pos:end="3465:45">&amp;</operator> <literal type="number" pos:start="3465:47" pos:end="3465:47">3</literal></expr>]</index></name></expr></argument>,

                        <argument pos:start="3467:25" pos:end="3467:37"><expr pos:start="3467:25" pos:end="3467:37"><name pos:start="3467:25" pos:end="3467:37"><name pos:start="3467:25" pos:end="3467:29">cpu_R</name><index pos:start="3467:30" pos:end="3467:37">[<expr pos:start="3467:31" pos:end="3467:36"><name pos:start="3467:31" pos:end="3467:36">BRI8_S</name></expr>]</index></name></expr></argument>, <argument pos:start="3467:40" pos:end="3467:54"><expr pos:start="3467:40" pos:end="3467:54"><name pos:start="3467:40" pos:end="3467:54"><name pos:start="3467:40" pos:end="3467:46">B4CONST</name><index pos:start="3467:47" pos:end="3467:54">[<expr pos:start="3467:48" pos:end="3467:53"><name pos:start="3467:48" pos:end="3467:53">BRI8_R</name></expr>]</index></name></expr></argument>, <argument pos:start="3467:57" pos:end="3467:72"><expr pos:start="3467:57" pos:end="3467:72"><literal type="number" pos:start="3467:57" pos:end="3467:59">4</literal> <operator pos:start="3467:59" pos:end="3467:59">+</operator> <name pos:start="3467:61" pos:end="3467:72">BRI8_IMM8_SE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>

            <break pos:start="3471:13" pos:end="3471:18">break;</break>



        <case pos:start="3475:9" pos:end="3475:15">case <expr pos:start="3475:14" pos:end="3475:14"><literal type="number" pos:start="3475:14" pos:end="3475:14">3</literal></expr>:</case> <comment type="block" pos:start="3475:17" pos:end="3475:23">/*BI1*/</comment>

            <switch pos:start="3477:13" pos:end="3619:13">switch <condition pos:start="3477:20" pos:end="3477:27">(<expr pos:start="3477:21" pos:end="3477:26"><name pos:start="3477:21" pos:end="3477:26">BRI8_M</name></expr>)</condition> <block pos:start="3477:29" pos:end="3619:13">{<block_content pos:start="3479:13" pos:end="3617:22">

            <case pos:start="3479:13" pos:end="3479:19">case <expr pos:start="3479:18" pos:end="3479:18"><literal type="number" pos:start="3479:18" pos:end="3479:18">0</literal></expr>:</case> <comment type="block" pos:start="3479:21" pos:end="3479:30">/*ENTRYw*/</comment>

                <expr_stmt pos:start="3481:17" pos:end="3481:60"><expr pos:start="3481:17" pos:end="3481:59"><call pos:start="3481:17" pos:end="3481:59"><name pos:start="3481:17" pos:end="3481:26">HAS_OPTION</name><argument_list pos:start="3481:27" pos:end="3481:59">(<argument pos:start="3481:28" pos:end="3481:58"><expr pos:start="3481:28" pos:end="3481:58"><name pos:start="3481:28" pos:end="3481:58">XTENSA_OPTION_WINDOWED_REGISTER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <block pos:start="3483:17" pos:end="3503:17">{<block_content pos:start="3485:21" pos:end="3501:42">

                    <decl_stmt pos:start="3485:21" pos:end="3485:56"><decl pos:start="3485:21" pos:end="3485:55"><type pos:start="3485:21" pos:end="3485:28"><name pos:start="3485:21" pos:end="3485:28">TCGv_i32</name></type> <name pos:start="3485:30" pos:end="3485:31">pc</name> <init pos:start="3485:33" pos:end="3485:55">= <expr pos:start="3485:35" pos:end="3485:55"><call pos:start="3485:35" pos:end="3485:55"><name pos:start="3485:35" pos:end="3485:47">tcg_const_i32</name><argument_list pos:start="3485:48" pos:end="3485:55">(<argument pos:start="3485:49" pos:end="3485:54"><expr pos:start="3485:49" pos:end="3485:54"><name pos:start="3485:49" pos:end="3485:54"><name pos:start="3485:49" pos:end="3485:50">dc</name><operator pos:start="3485:51" pos:end="3485:52">-&gt;</operator><name pos:start="3485:53" pos:end="3485:54">pc</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="3487:21" pos:end="3487:56"><decl pos:start="3487:21" pos:end="3487:55"><type pos:start="3487:21" pos:end="3487:28"><name pos:start="3487:21" pos:end="3487:28">TCGv_i32</name></type> <name pos:start="3487:30" pos:end="3487:30">s</name> <init pos:start="3487:32" pos:end="3487:55">= <expr pos:start="3487:34" pos:end="3487:55"><call pos:start="3487:34" pos:end="3487:55"><name pos:start="3487:34" pos:end="3487:46">tcg_const_i32</name><argument_list pos:start="3487:47" pos:end="3487:55">(<argument pos:start="3487:48" pos:end="3487:54"><expr pos:start="3487:48" pos:end="3487:54"><name pos:start="3487:48" pos:end="3487:54">BRI12_S</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="3489:21" pos:end="3489:62"><decl pos:start="3489:21" pos:end="3489:61"><type pos:start="3489:21" pos:end="3489:28"><name pos:start="3489:21" pos:end="3489:28">TCGv_i32</name></type> <name pos:start="3489:30" pos:end="3489:32">imm</name> <init pos:start="3489:34" pos:end="3489:61">= <expr pos:start="3489:36" pos:end="3489:61"><call pos:start="3489:36" pos:end="3489:61"><name pos:start="3489:36" pos:end="3489:48">tcg_const_i32</name><argument_list pos:start="3489:49" pos:end="3489:61">(<argument pos:start="3489:50" pos:end="3489:60"><expr pos:start="3489:50" pos:end="3489:60"><name pos:start="3489:50" pos:end="3489:60">BRI12_IMM12</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="3491:21" pos:end="3491:43"><expr pos:start="3491:21" pos:end="3491:42"><call pos:start="3491:21" pos:end="3491:42"><name pos:start="3491:21" pos:end="3491:38">gen_advance_ccount</name><argument_list pos:start="3491:39" pos:end="3491:42">(<argument pos:start="3491:40" pos:end="3491:41"><expr pos:start="3491:40" pos:end="3491:41"><name pos:start="3491:40" pos:end="3491:41">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3493:21" pos:end="3493:58"><expr pos:start="3493:21" pos:end="3493:57"><call pos:start="3493:21" pos:end="3493:57"><name pos:start="3493:21" pos:end="3493:36">gen_helper_entry</name><argument_list pos:start="3493:37" pos:end="3493:57">(<argument pos:start="3493:38" pos:end="3493:44"><expr pos:start="3493:38" pos:end="3493:44"><name pos:start="3493:38" pos:end="3493:44">cpu_env</name></expr></argument>, <argument pos:start="3493:47" pos:end="3493:48"><expr pos:start="3493:47" pos:end="3493:48"><name pos:start="3493:47" pos:end="3493:48">pc</name></expr></argument>, <argument pos:start="3493:51" pos:end="3493:51"><expr pos:start="3493:51" pos:end="3493:51"><name pos:start="3493:51" pos:end="3493:51">s</name></expr></argument>, <argument pos:start="3493:54" pos:end="3493:56"><expr pos:start="3493:54" pos:end="3493:56"><name pos:start="3493:54" pos:end="3493:56">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3495:21" pos:end="3495:39"><expr pos:start="3495:21" pos:end="3495:38"><call pos:start="3495:21" pos:end="3495:38"><name pos:start="3495:21" pos:end="3495:33">tcg_temp_free</name><argument_list pos:start="3495:34" pos:end="3495:38">(<argument pos:start="3495:35" pos:end="3495:37"><expr pos:start="3495:35" pos:end="3495:37"><name pos:start="3495:35" pos:end="3495:37">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3497:21" pos:end="3497:37"><expr pos:start="3497:21" pos:end="3497:36"><call pos:start="3497:21" pos:end="3497:36"><name pos:start="3497:21" pos:end="3497:33">tcg_temp_free</name><argument_list pos:start="3497:34" pos:end="3497:36">(<argument pos:start="3497:35" pos:end="3497:35"><expr pos:start="3497:35" pos:end="3497:35"><name pos:start="3497:35" pos:end="3497:35">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3499:21" pos:end="3499:38"><expr pos:start="3499:21" pos:end="3499:37"><call pos:start="3499:21" pos:end="3499:37"><name pos:start="3499:21" pos:end="3499:33">tcg_temp_free</name><argument_list pos:start="3499:34" pos:end="3499:37">(<argument pos:start="3499:35" pos:end="3499:36"><expr pos:start="3499:35" pos:end="3499:36"><name pos:start="3499:35" pos:end="3499:36">pc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3501:21" pos:end="3501:42"><expr pos:start="3501:21" pos:end="3501:41"><call pos:start="3501:21" pos:end="3501:41"><name pos:start="3501:21" pos:end="3501:37">reset_used_window</name><argument_list pos:start="3501:38" pos:end="3501:41">(<argument pos:start="3501:39" pos:end="3501:40"><expr pos:start="3501:39" pos:end="3501:40"><name pos:start="3501:39" pos:end="3501:40">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block>

                <break pos:start="3505:17" pos:end="3505:22">break;</break>



            <case pos:start="3509:13" pos:end="3509:19">case <expr pos:start="3509:18" pos:end="3509:18"><literal type="number" pos:start="3509:18" pos:end="3509:18">1</literal></expr>:</case> <comment type="block" pos:start="3509:21" pos:end="3509:26">/*B1*/</comment>

                <switch pos:start="3511:17" pos:end="3601:17">switch <condition pos:start="3511:24" pos:end="3511:31">(<expr pos:start="3511:25" pos:end="3511:30"><name pos:start="3511:25" pos:end="3511:30">BRI8_R</name></expr>)</condition> <block pos:start="3511:33" pos:end="3601:17">{<block_content pos:start="3513:17" pos:end="3597:26">

                <case pos:start="3513:17" pos:end="3513:23">case <expr pos:start="3513:22" pos:end="3513:22"><literal type="number" pos:start="3513:22" pos:end="3513:22">0</literal></expr>:</case> <comment type="block" pos:start="3513:25" pos:end="3513:31">/*BFp*/</comment>

                <case pos:start="3515:17" pos:end="3515:23">case <expr pos:start="3515:22" pos:end="3515:22"><literal type="number" pos:start="3515:22" pos:end="3515:22">1</literal></expr>:</case> <comment type="block" pos:start="3515:25" pos:end="3515:31">/*BTp*/</comment>

                    <expr_stmt pos:start="3517:21" pos:end="3517:54"><expr pos:start="3517:21" pos:end="3517:53"><call pos:start="3517:21" pos:end="3517:53"><name pos:start="3517:21" pos:end="3517:30">HAS_OPTION</name><argument_list pos:start="3517:31" pos:end="3517:53">(<argument pos:start="3517:32" pos:end="3517:52"><expr pos:start="3517:32" pos:end="3517:52"><name pos:start="3517:32" pos:end="3517:52">XTENSA_OPTION_BOOLEAN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <block pos:start="3519:21" pos:end="3533:21">{<block_content pos:start="3521:25" pos:end="3531:43">

                        <decl_stmt pos:start="3521:25" pos:end="3521:58"><decl pos:start="3521:25" pos:end="3521:57"><type pos:start="3521:25" pos:end="3521:32"><name pos:start="3521:25" pos:end="3521:32">TCGv_i32</name></type> <name pos:start="3521:34" pos:end="3521:36">tmp</name> <init pos:start="3521:38" pos:end="3521:57">= <expr pos:start="3521:40" pos:end="3521:57"><call pos:start="3521:40" pos:end="3521:57"><name pos:start="3521:40" pos:end="3521:55">tcg_temp_new_i32</name><argument_list pos:start="3521:56" pos:end="3521:57">()</argument_list></call></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="3523:25" pos:end="3523:71"><expr pos:start="3523:25" pos:end="3523:70"><call pos:start="3523:25" pos:end="3523:70"><name pos:start="3523:25" pos:end="3523:40">tcg_gen_andi_i32</name><argument_list pos:start="3523:41" pos:end="3523:70">(<argument pos:start="3523:42" pos:end="3523:44"><expr pos:start="3523:42" pos:end="3523:44"><name pos:start="3523:42" pos:end="3523:44">tmp</name></expr></argument>, <argument pos:start="3523:47" pos:end="3523:56"><expr pos:start="3523:47" pos:end="3523:56"><name pos:start="3523:47" pos:end="3523:56"><name pos:start="3523:47" pos:end="3523:52">cpu_SR</name><index pos:start="3523:53" pos:end="3523:56">[<expr pos:start="3523:54" pos:end="3523:55"><name pos:start="3523:54" pos:end="3523:55">BR</name></expr>]</index></name></expr></argument>, <argument pos:start="3523:59" pos:end="3523:69"><expr pos:start="3523:59" pos:end="3523:69"><literal type="number" pos:start="3523:59" pos:end="3523:59">1</literal> <operator pos:start="3523:61" pos:end="3523:62">&lt;&lt;</operator> <name pos:start="3523:64" pos:end="3523:69">RRI8_S</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="3525:25" pos:end="3529:58"><expr pos:start="3525:25" pos:end="3529:57"><call pos:start="3525:25" pos:end="3529:57"><name pos:start="3525:25" pos:end="3525:35">gen_brcondi</name><argument_list pos:start="3525:36" pos:end="3529:57">(<argument pos:start="3525:37" pos:end="3525:38"><expr pos:start="3525:37" pos:end="3525:38"><name pos:start="3525:37" pos:end="3525:38">dc</name></expr></argument>,

                                <argument pos:start="3527:33" pos:end="3527:71"><expr pos:start="3527:33" pos:end="3527:71"><ternary pos:start="3527:33" pos:end="3527:71"><condition pos:start="3527:33" pos:end="3527:45"><expr pos:start="3527:33" pos:end="3527:43"><name pos:start="3527:33" pos:end="3527:38">BRI8_R</name> <operator pos:start="3527:40" pos:end="3527:41">==</operator> <literal type="number" pos:start="3527:43" pos:end="3527:43">1</literal></expr> ?</condition><then pos:start="3527:47" pos:end="3527:57"> <expr pos:start="3527:47" pos:end="3527:57"><name pos:start="3527:47" pos:end="3527:57">TCG_COND_NE</name></expr> </then><else pos:start="3527:59" pos:end="3527:71">: <expr pos:start="3527:61" pos:end="3527:71"><name pos:start="3527:61" pos:end="3527:71">TCG_COND_EQ</name></expr></else></ternary></expr></argument>,

                                <argument pos:start="3529:33" pos:end="3529:35"><expr pos:start="3529:33" pos:end="3529:35"><name pos:start="3529:33" pos:end="3529:35">tmp</name></expr></argument>, <argument pos:start="3529:38" pos:end="3529:38"><expr pos:start="3529:38" pos:end="3529:38"><literal type="number" pos:start="3529:38" pos:end="3529:38">0</literal></expr></argument>, <argument pos:start="3529:41" pos:end="3529:56"><expr pos:start="3529:41" pos:end="3529:56"><literal type="number" pos:start="3529:41" pos:end="3529:43">4</literal> <operator pos:start="3529:43" pos:end="3529:43">+</operator> <name pos:start="3529:45" pos:end="3529:56">RRI8_IMM8_SE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="3531:25" pos:end="3531:43"><expr pos:start="3531:25" pos:end="3531:42"><call pos:start="3531:25" pos:end="3531:42"><name pos:start="3531:25" pos:end="3531:37">tcg_temp_free</name><argument_list pos:start="3531:38" pos:end="3531:42">(<argument pos:start="3531:39" pos:end="3531:41"><expr pos:start="3531:39" pos:end="3531:41"><name pos:start="3531:39" pos:end="3531:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block>

                    <break pos:start="3535:21" pos:end="3535:26">break;</break>



                <case pos:start="3539:17" pos:end="3539:23">case <expr pos:start="3539:22" pos:end="3539:22"><literal type="number" pos:start="3539:22" pos:end="3539:22">8</literal></expr>:</case> <comment type="block" pos:start="3539:25" pos:end="3539:32">/*LOOP*/</comment>

                <case pos:start="3541:17" pos:end="3541:23">case <expr pos:start="3541:22" pos:end="3541:22"><literal type="number" pos:start="3541:22" pos:end="3541:22">9</literal></expr>:</case> <comment type="block" pos:start="3541:25" pos:end="3541:35">/*LOOPNEZ*/</comment>

                <case pos:start="3543:17" pos:end="3543:24">case <expr pos:start="3543:22" pos:end="3543:23"><literal type="number" pos:start="3543:22" pos:end="3543:23">10</literal></expr>:</case> <comment type="block" pos:start="3543:26" pos:end="3543:36">/*LOOPGTZ*/</comment>

                    <expr_stmt pos:start="3545:21" pos:end="3545:51"><expr pos:start="3545:21" pos:end="3545:50"><call pos:start="3545:21" pos:end="3545:50"><name pos:start="3545:21" pos:end="3545:30">HAS_OPTION</name><argument_list pos:start="3545:31" pos:end="3545:50">(<argument pos:start="3545:32" pos:end="3545:49"><expr pos:start="3545:32" pos:end="3545:49"><name pos:start="3545:32" pos:end="3545:49">XTENSA_OPTION_LOOP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3547:21" pos:end="3547:50"><expr pos:start="3547:21" pos:end="3547:49"><call pos:start="3547:21" pos:end="3547:49"><name pos:start="3547:21" pos:end="3547:37">gen_window_check1</name><argument_list pos:start="3547:38" pos:end="3547:49">(<argument pos:start="3547:39" pos:end="3547:40"><expr pos:start="3547:39" pos:end="3547:40"><name pos:start="3547:39" pos:end="3547:40">dc</name></expr></argument>, <argument pos:start="3547:43" pos:end="3547:48"><expr pos:start="3547:43" pos:end="3547:48"><name pos:start="3547:43" pos:end="3547:48">RRI8_S</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <block pos:start="3549:21" pos:end="3587:21">{<block_content pos:start="3551:25" pos:end="3585:54">

                        <decl_stmt pos:start="3551:25" pos:end="3551:63"><decl pos:start="3551:25" pos:end="3551:62"><type pos:start="3551:25" pos:end="3551:32"><name pos:start="3551:25" pos:end="3551:32">uint32_t</name></type> <name pos:start="3551:34" pos:end="3551:37">lend</name> <init pos:start="3551:39" pos:end="3551:62">= <expr pos:start="3551:41" pos:end="3551:62"><name pos:start="3551:41" pos:end="3551:46"><name pos:start="3551:41" pos:end="3551:42">dc</name><operator pos:start="3551:43" pos:end="3551:44">-&gt;</operator><name pos:start="3551:45" pos:end="3551:46">pc</name></name> <operator pos:start="3551:48" pos:end="3551:48">+</operator> <name pos:start="3551:50" pos:end="3551:58">RRI8_IMM8</name> <operator pos:start="3551:60" pos:end="3551:60">+</operator> <literal type="number" pos:start="3551:62" pos:end="3551:62">4</literal></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="3553:25" pos:end="3553:59"><decl pos:start="3553:25" pos:end="3553:58"><type pos:start="3553:25" pos:end="3553:32"><name pos:start="3553:25" pos:end="3553:32">TCGv_i32</name></type> <name pos:start="3553:34" pos:end="3553:36">tmp</name> <init pos:start="3553:38" pos:end="3553:58">= <expr pos:start="3553:40" pos:end="3553:58"><call pos:start="3553:40" pos:end="3553:58"><name pos:start="3553:40" pos:end="3553:52">tcg_const_i32</name><argument_list pos:start="3553:53" pos:end="3553:58">(<argument pos:start="3553:54" pos:end="3553:57"><expr pos:start="3553:54" pos:end="3553:57"><name pos:start="3553:54" pos:end="3553:57">lend</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                        <expr_stmt pos:start="3557:25" pos:end="3557:75"><expr pos:start="3557:25" pos:end="3557:74"><call pos:start="3557:25" pos:end="3557:74"><name pos:start="3557:25" pos:end="3557:40">tcg_gen_subi_i32</name><argument_list pos:start="3557:41" pos:end="3557:74">(<argument pos:start="3557:42" pos:end="3557:55"><expr pos:start="3557:42" pos:end="3557:55"><name pos:start="3557:42" pos:end="3557:55"><name pos:start="3557:42" pos:end="3557:47">cpu_SR</name><index pos:start="3557:48" pos:end="3557:55">[<expr pos:start="3557:49" pos:end="3557:54"><name pos:start="3557:49" pos:end="3557:54">LCOUNT</name></expr>]</index></name></expr></argument>, <argument pos:start="3557:58" pos:end="3557:70"><expr pos:start="3557:58" pos:end="3557:70"><name pos:start="3557:58" pos:end="3557:70"><name pos:start="3557:58" pos:end="3557:62">cpu_R</name><index pos:start="3557:63" pos:end="3557:70">[<expr pos:start="3557:64" pos:end="3557:69"><name pos:start="3557:64" pos:end="3557:69">RRI8_S</name></expr>]</index></name></expr></argument>, <argument pos:start="3557:73" pos:end="3557:73"><expr pos:start="3557:73" pos:end="3557:73"><literal type="number" pos:start="3557:73" pos:end="3557:73">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="3559:25" pos:end="3559:68"><expr pos:start="3559:25" pos:end="3559:67"><call pos:start="3559:25" pos:end="3559:67"><name pos:start="3559:25" pos:end="3559:40">tcg_gen_movi_i32</name><argument_list pos:start="3559:41" pos:end="3559:67">(<argument pos:start="3559:42" pos:end="3559:53"><expr pos:start="3559:42" pos:end="3559:53"><name pos:start="3559:42" pos:end="3559:53"><name pos:start="3559:42" pos:end="3559:47">cpu_SR</name><index pos:start="3559:48" pos:end="3559:53">[<expr pos:start="3559:49" pos:end="3559:52"><name pos:start="3559:49" pos:end="3559:52">LBEG</name></expr>]</index></name></expr></argument>, <argument pos:start="3559:56" pos:end="3559:66"><expr pos:start="3559:56" pos:end="3559:66"><name pos:start="3559:56" pos:end="3559:66"><name pos:start="3559:56" pos:end="3559:57">dc</name><operator pos:start="3559:58" pos:end="3559:59">-&gt;</operator><name pos:start="3559:60" pos:end="3559:66">next_pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="3561:25" pos:end="3561:58"><expr pos:start="3561:25" pos:end="3561:57"><call pos:start="3561:25" pos:end="3561:57"><name pos:start="3561:25" pos:end="3561:43">gen_helper_wsr_lend</name><argument_list pos:start="3561:44" pos:end="3561:57">(<argument pos:start="3561:45" pos:end="3561:51"><expr pos:start="3561:45" pos:end="3561:51"><name pos:start="3561:45" pos:end="3561:51">cpu_env</name></expr></argument>, <argument pos:start="3561:54" pos:end="3561:56"><expr pos:start="3561:54" pos:end="3561:56"><name pos:start="3561:54" pos:end="3561:56">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="3563:25" pos:end="3563:43"><expr pos:start="3563:25" pos:end="3563:42"><call pos:start="3563:25" pos:end="3563:42"><name pos:start="3563:25" pos:end="3563:37">tcg_temp_free</name><argument_list pos:start="3563:38" pos:end="3563:42">(<argument pos:start="3563:39" pos:end="3563:41"><expr pos:start="3563:39" pos:end="3563:41"><name pos:start="3563:39" pos:end="3563:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                        <if_stmt pos:start="3567:25" pos:end="3581:25"><if pos:start="3567:25" pos:end="3581:25">if <condition pos:start="3567:28" pos:end="3567:39">(<expr pos:start="3567:29" pos:end="3567:38"><name pos:start="3567:29" pos:end="3567:34">BRI8_R</name> <operator pos:start="3567:36" pos:end="3567:36">&gt;</operator> <literal type="number" pos:start="3567:38" pos:end="3567:38">8</literal></expr>)</condition> <block pos:start="3567:41" pos:end="3581:25">{<block_content pos:start="3569:29" pos:end="3579:49">

                            <decl_stmt pos:start="3569:29" pos:end="3569:56"><decl pos:start="3569:29" pos:end="3569:55"><type pos:start="3569:29" pos:end="3569:31"><name pos:start="3569:29" pos:end="3569:31">int</name></type> <name pos:start="3569:33" pos:end="3569:37">label</name> <init pos:start="3569:39" pos:end="3569:55">= <expr pos:start="3569:41" pos:end="3569:55"><call pos:start="3569:41" pos:end="3569:55"><name pos:start="3569:41" pos:end="3569:53">gen_new_label</name><argument_list pos:start="3569:54" pos:end="3569:55">()</argument_list></call></expr></init></decl>;</decl_stmt>

                            <expr_stmt pos:start="3571:29" pos:end="3575:61"><expr pos:start="3571:29" pos:end="3575:60"><call pos:start="3571:29" pos:end="3575:60"><name pos:start="3571:29" pos:end="3571:47">tcg_gen_brcondi_i32</name><argument_list pos:start="3571:48" pos:end="3575:60">(

                                    <argument pos:start="3573:37" pos:end="3573:75"><expr pos:start="3573:37" pos:end="3573:75"><ternary pos:start="3573:37" pos:end="3573:75"><condition pos:start="3573:37" pos:end="3573:49"><expr pos:start="3573:37" pos:end="3573:47"><name pos:start="3573:37" pos:end="3573:42">BRI8_R</name> <operator pos:start="3573:44" pos:end="3573:45">==</operator> <literal type="number" pos:start="3573:47" pos:end="3573:47">9</literal></expr> ?</condition><then pos:start="3573:51" pos:end="3573:61"> <expr pos:start="3573:51" pos:end="3573:61"><name pos:start="3573:51" pos:end="3573:61">TCG_COND_NE</name></expr> </then><else pos:start="3573:63" pos:end="3573:75">: <expr pos:start="3573:65" pos:end="3573:75"><name pos:start="3573:65" pos:end="3573:75">TCG_COND_GT</name></expr></else></ternary></expr></argument>,

                                    <argument pos:start="3575:37" pos:end="3575:49"><expr pos:start="3575:37" pos:end="3575:49"><name pos:start="3575:37" pos:end="3575:49"><name pos:start="3575:37" pos:end="3575:41">cpu_R</name><index pos:start="3575:42" pos:end="3575:49">[<expr pos:start="3575:43" pos:end="3575:48"><name pos:start="3575:43" pos:end="3575:48">RRI8_S</name></expr>]</index></name></expr></argument>, <argument pos:start="3575:52" pos:end="3575:52"><expr pos:start="3575:52" pos:end="3575:52"><literal type="number" pos:start="3575:52" pos:end="3575:52">0</literal></expr></argument>, <argument pos:start="3575:55" pos:end="3575:59"><expr pos:start="3575:55" pos:end="3575:59"><name pos:start="3575:55" pos:end="3575:59">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="3577:29" pos:end="3577:51"><expr pos:start="3577:29" pos:end="3577:50"><call pos:start="3577:29" pos:end="3577:50"><name pos:start="3577:29" pos:end="3577:37">gen_jumpi</name><argument_list pos:start="3577:38" pos:end="3577:50">(<argument pos:start="3577:39" pos:end="3577:40"><expr pos:start="3577:39" pos:end="3577:40"><name pos:start="3577:39" pos:end="3577:40">dc</name></expr></argument>, <argument pos:start="3577:43" pos:end="3577:46"><expr pos:start="3577:43" pos:end="3577:46"><name pos:start="3577:43" pos:end="3577:46">lend</name></expr></argument>, <argument pos:start="3577:49" pos:end="3577:49"><expr pos:start="3577:49" pos:end="3577:49"><literal type="number" pos:start="3577:49" pos:end="3577:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="3579:29" pos:end="3579:49"><expr pos:start="3579:29" pos:end="3579:48"><call pos:start="3579:29" pos:end="3579:48"><name pos:start="3579:29" pos:end="3579:41">gen_set_label</name><argument_list pos:start="3579:42" pos:end="3579:48">(<argument pos:start="3579:43" pos:end="3579:47"><expr pos:start="3579:43" pos:end="3579:47"><name pos:start="3579:43" pos:end="3579:47">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>



                        <expr_stmt pos:start="3585:25" pos:end="3585:54"><expr pos:start="3585:25" pos:end="3585:53"><call pos:start="3585:25" pos:end="3585:53"><name pos:start="3585:25" pos:end="3585:33">gen_jumpi</name><argument_list pos:start="3585:34" pos:end="3585:53">(<argument pos:start="3585:35" pos:end="3585:36"><expr pos:start="3585:35" pos:end="3585:36"><name pos:start="3585:35" pos:end="3585:36">dc</name></expr></argument>, <argument pos:start="3585:39" pos:end="3585:49"><expr pos:start="3585:39" pos:end="3585:49"><name pos:start="3585:39" pos:end="3585:49"><name pos:start="3585:39" pos:end="3585:40">dc</name><operator pos:start="3585:41" pos:end="3585:42">-&gt;</operator><name pos:start="3585:43" pos:end="3585:49">next_pc</name></name></expr></argument>, <argument pos:start="3585:52" pos:end="3585:52"><expr pos:start="3585:52" pos:end="3585:52"><literal type="number" pos:start="3585:52" pos:end="3585:52">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block>

                    <break pos:start="3589:21" pos:end="3589:26">break;</break>



                <default pos:start="3593:17" pos:end="3593:24">default:</default> <comment type="block" pos:start="3593:26" pos:end="3593:37">/*reserved*/</comment>

                    <expr_stmt pos:start="3595:21" pos:end="3595:31"><expr pos:start="3595:21" pos:end="3595:30"><call pos:start="3595:21" pos:end="3595:30"><name pos:start="3595:21" pos:end="3595:28">RESERVED</name><argument_list pos:start="3595:29" pos:end="3595:30">()</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3597:21" pos:end="3597:26">break;</break>



                </block_content>}</block></switch>

                <break pos:start="3603:17" pos:end="3603:22">break;</break>



            <case pos:start="3607:13" pos:end="3607:19">case <expr pos:start="3607:18" pos:end="3607:18"><literal type="number" pos:start="3607:18" pos:end="3607:18">2</literal></expr>:</case> <comment type="block" pos:start="3607:21" pos:end="3607:29">/*BLTUI*/</comment>

            <case pos:start="3609:13" pos:end="3609:19">case <expr pos:start="3609:18" pos:end="3609:18"><literal type="number" pos:start="3609:18" pos:end="3609:18">3</literal></expr>:</case> <comment type="block" pos:start="3609:21" pos:end="3609:29">/*BGEUI*/</comment>

                <expr_stmt pos:start="3611:17" pos:end="3611:46"><expr pos:start="3611:17" pos:end="3611:45"><call pos:start="3611:17" pos:end="3611:45"><name pos:start="3611:17" pos:end="3611:33">gen_window_check1</name><argument_list pos:start="3611:34" pos:end="3611:45">(<argument pos:start="3611:35" pos:end="3611:36"><expr pos:start="3611:35" pos:end="3611:36"><name pos:start="3611:35" pos:end="3611:36">dc</name></expr></argument>, <argument pos:start="3611:39" pos:end="3611:44"><expr pos:start="3611:39" pos:end="3611:44"><name pos:start="3611:39" pos:end="3611:44">BRI8_S</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3613:17" pos:end="3615:75"><expr pos:start="3613:17" pos:end="3615:74"><call pos:start="3613:17" pos:end="3615:74"><name pos:start="3613:17" pos:end="3613:27">gen_brcondi</name><argument_list pos:start="3613:28" pos:end="3615:74">(<argument pos:start="3613:29" pos:end="3613:30"><expr pos:start="3613:29" pos:end="3613:30"><name pos:start="3613:29" pos:end="3613:30">dc</name></expr></argument>, <argument pos:start="3613:33" pos:end="3613:73"><expr pos:start="3613:33" pos:end="3613:73"><ternary pos:start="3613:33" pos:end="3613:73"><condition pos:start="3613:33" pos:end="3613:45"><expr pos:start="3613:33" pos:end="3613:43"><name pos:start="3613:33" pos:end="3613:38">BRI8_M</name> <operator pos:start="3613:40" pos:end="3613:41">==</operator> <literal type="number" pos:start="3613:43" pos:end="3613:43">2</literal></expr> ?</condition><then pos:start="3613:47" pos:end="3613:58"> <expr pos:start="3613:47" pos:end="3613:58"><name pos:start="3613:47" pos:end="3613:58">TCG_COND_LTU</name></expr> </then><else pos:start="3613:60" pos:end="3613:73">: <expr pos:start="3613:62" pos:end="3613:73"><name pos:start="3613:62" pos:end="3613:73">TCG_COND_GEU</name></expr></else></ternary></expr></argument>,

                        <argument pos:start="3615:25" pos:end="3615:37"><expr pos:start="3615:25" pos:end="3615:37"><name pos:start="3615:25" pos:end="3615:37"><name pos:start="3615:25" pos:end="3615:29">cpu_R</name><index pos:start="3615:30" pos:end="3615:37">[<expr pos:start="3615:31" pos:end="3615:36"><name pos:start="3615:31" pos:end="3615:36">BRI8_S</name></expr>]</index></name></expr></argument>, <argument pos:start="3615:40" pos:end="3615:55"><expr pos:start="3615:40" pos:end="3615:55"><name pos:start="3615:40" pos:end="3615:55"><name pos:start="3615:40" pos:end="3615:47">B4CONSTU</name><index pos:start="3615:48" pos:end="3615:55">[<expr pos:start="3615:49" pos:end="3615:54"><name pos:start="3615:49" pos:end="3615:54">BRI8_R</name></expr>]</index></name></expr></argument>, <argument pos:start="3615:58" pos:end="3615:73"><expr pos:start="3615:58" pos:end="3615:73"><literal type="number" pos:start="3615:58" pos:end="3615:60">4</literal> <operator pos:start="3615:60" pos:end="3615:60">+</operator> <name pos:start="3615:62" pos:end="3615:73">BRI8_IMM8_SE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="3617:17" pos:end="3617:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="3621:13" pos:end="3621:18">break;</break>



        </block_content>}</block></switch>

        <break pos:start="3627:9" pos:end="3627:14">break;</break>



    <case pos:start="3631:5" pos:end="3631:11">case <expr pos:start="3631:10" pos:end="3631:10"><literal type="number" pos:start="3631:10" pos:end="3631:10">7</literal></expr>:</case> <comment type="block" pos:start="3631:13" pos:end="3631:17">/*B*/</comment>

        <block pos:start="3633:9" pos:end="3795:13">{<block_content pos:start="3635:13" pos:end="3791:22">

            <decl_stmt pos:start="3635:13" pos:end="3635:69"><decl pos:start="3635:13" pos:end="3635:68"><type pos:start="3635:13" pos:end="3635:19"><name pos:start="3635:13" pos:end="3635:19">TCGCond</name></type> <name pos:start="3635:21" pos:end="3635:25">eq_ne</name> <init pos:start="3635:27" pos:end="3635:68">= <expr pos:start="3635:29" pos:end="3635:68"><ternary pos:start="3635:29" pos:end="3635:68"><condition pos:start="3635:29" pos:end="3635:42"><expr pos:start="3635:29" pos:end="3635:40"><operator pos:start="3635:29" pos:end="3635:29">(</operator><name pos:start="3635:30" pos:end="3635:35">RRI8_R</name> <operator pos:start="3635:37" pos:end="3635:37">&amp;</operator> <literal type="number" pos:start="3635:39" pos:end="3635:39">8</literal><operator pos:start="3635:40" pos:end="3635:40">)</operator></expr> ?</condition><then pos:start="3635:44" pos:end="3635:54"> <expr pos:start="3635:44" pos:end="3635:54"><name pos:start="3635:44" pos:end="3635:54">TCG_COND_NE</name></expr> </then><else pos:start="3635:56" pos:end="3635:68">: <expr pos:start="3635:58" pos:end="3635:68"><name pos:start="3635:58" pos:end="3635:68">TCG_COND_EQ</name></expr></else></ternary></expr></init></decl>;</decl_stmt>



            <switch pos:start="3639:13" pos:end="3789:17">switch <condition pos:start="3639:20" pos:end="3639:31">(<expr pos:start="3639:21" pos:end="3639:30"><name pos:start="3639:21" pos:end="3639:26">RRI8_R</name> <operator pos:start="3639:28" pos:end="3639:28">&amp;</operator> <literal type="number" pos:start="3639:30" pos:end="3639:30">7</literal></expr>)</condition> <block pos:start="3639:33" pos:end="3789:17">{<block_content pos:start="3641:13" pos:end="3787:39">

            <case pos:start="3641:13" pos:end="3641:19">case <expr pos:start="3641:18" pos:end="3641:18"><literal type="number" pos:start="3641:18" pos:end="3641:18">0</literal></expr>:</case> <comment type="block" pos:start="3641:21" pos:end="3641:29">/*BNONE*/</comment> <comment type="block" pos:start="3641:31" pos:end="3641:38">/*BANY*/</comment>

                <expr_stmt pos:start="3643:17" pos:end="3643:54"><expr pos:start="3643:17" pos:end="3643:53"><call pos:start="3643:17" pos:end="3643:53"><name pos:start="3643:17" pos:end="3643:33">gen_window_check2</name><argument_list pos:start="3643:34" pos:end="3643:53">(<argument pos:start="3643:35" pos:end="3643:36"><expr pos:start="3643:35" pos:end="3643:36"><name pos:start="3643:35" pos:end="3643:36">dc</name></expr></argument>, <argument pos:start="3643:39" pos:end="3643:44"><expr pos:start="3643:39" pos:end="3643:44"><name pos:start="3643:39" pos:end="3643:44">RRI8_S</name></expr></argument>, <argument pos:start="3643:47" pos:end="3643:52"><expr pos:start="3643:47" pos:end="3643:52"><name pos:start="3643:47" pos:end="3643:52">RRI8_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <block pos:start="3645:17" pos:end="3655:17">{<block_content pos:start="3647:21" pos:end="3653:39">

                    <decl_stmt pos:start="3647:21" pos:end="3647:54"><decl pos:start="3647:21" pos:end="3647:53"><type pos:start="3647:21" pos:end="3647:28"><name pos:start="3647:21" pos:end="3647:28">TCGv_i32</name></type> <name pos:start="3647:30" pos:end="3647:32">tmp</name> <init pos:start="3647:34" pos:end="3647:53">= <expr pos:start="3647:36" pos:end="3647:53"><call pos:start="3647:36" pos:end="3647:53"><name pos:start="3647:36" pos:end="3647:51">tcg_temp_new_i32</name><argument_list pos:start="3647:52" pos:end="3647:53">()</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="3649:21" pos:end="3649:71"><expr pos:start="3649:21" pos:end="3649:70"><call pos:start="3649:21" pos:end="3649:70"><name pos:start="3649:21" pos:end="3649:35">tcg_gen_and_i32</name><argument_list pos:start="3649:36" pos:end="3649:70">(<argument pos:start="3649:37" pos:end="3649:39"><expr pos:start="3649:37" pos:end="3649:39"><name pos:start="3649:37" pos:end="3649:39">tmp</name></expr></argument>, <argument pos:start="3649:42" pos:end="3649:54"><expr pos:start="3649:42" pos:end="3649:54"><name pos:start="3649:42" pos:end="3649:54"><name pos:start="3649:42" pos:end="3649:46">cpu_R</name><index pos:start="3649:47" pos:end="3649:54">[<expr pos:start="3649:48" pos:end="3649:53"><name pos:start="3649:48" pos:end="3649:53">RRI8_S</name></expr>]</index></name></expr></argument>, <argument pos:start="3649:57" pos:end="3649:69"><expr pos:start="3649:57" pos:end="3649:69"><name pos:start="3649:57" pos:end="3649:69"><name pos:start="3649:57" pos:end="3649:61">cpu_R</name><index pos:start="3649:62" pos:end="3649:69">[<expr pos:start="3649:63" pos:end="3649:68"><name pos:start="3649:63" pos:end="3649:68">RRI8_T</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3651:21" pos:end="3651:69"><expr pos:start="3651:21" pos:end="3651:68"><call pos:start="3651:21" pos:end="3651:68"><name pos:start="3651:21" pos:end="3651:31">gen_brcondi</name><argument_list pos:start="3651:32" pos:end="3651:68">(<argument pos:start="3651:33" pos:end="3651:34"><expr pos:start="3651:33" pos:end="3651:34"><name pos:start="3651:33" pos:end="3651:34">dc</name></expr></argument>, <argument pos:start="3651:37" pos:end="3651:41"><expr pos:start="3651:37" pos:end="3651:41"><name pos:start="3651:37" pos:end="3651:41">eq_ne</name></expr></argument>, <argument pos:start="3651:44" pos:end="3651:46"><expr pos:start="3651:44" pos:end="3651:46"><name pos:start="3651:44" pos:end="3651:46">tmp</name></expr></argument>, <argument pos:start="3651:49" pos:end="3651:49"><expr pos:start="3651:49" pos:end="3651:49"><literal type="number" pos:start="3651:49" pos:end="3651:49">0</literal></expr></argument>, <argument pos:start="3651:52" pos:end="3651:67"><expr pos:start="3651:52" pos:end="3651:67"><literal type="number" pos:start="3651:52" pos:end="3651:54">4</literal> <operator pos:start="3651:54" pos:end="3651:54">+</operator> <name pos:start="3651:56" pos:end="3651:67">RRI8_IMM8_SE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3653:21" pos:end="3653:39"><expr pos:start="3653:21" pos:end="3653:38"><call pos:start="3653:21" pos:end="3653:38"><name pos:start="3653:21" pos:end="3653:33">tcg_temp_free</name><argument_list pos:start="3653:34" pos:end="3653:38">(<argument pos:start="3653:35" pos:end="3653:37"><expr pos:start="3653:35" pos:end="3653:37"><name pos:start="3653:35" pos:end="3653:37">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block>

                <break pos:start="3657:17" pos:end="3657:22">break;</break>



            <case pos:start="3661:13" pos:end="3661:19">case <expr pos:start="3661:18" pos:end="3661:18"><literal type="number" pos:start="3661:18" pos:end="3661:18">1</literal></expr>:</case> <comment type="block" pos:start="3661:21" pos:end="3661:27">/*BEQ*/</comment> <comment type="block" pos:start="3661:29" pos:end="3661:35">/*BNE*/</comment>

            <case pos:start="3663:13" pos:end="3663:19">case <expr pos:start="3663:18" pos:end="3663:18"><literal type="number" pos:start="3663:18" pos:end="3663:18">2</literal></expr>:</case> <comment type="block" pos:start="3663:21" pos:end="3663:27">/*BLT*/</comment> <comment type="block" pos:start="3663:29" pos:end="3663:35">/*BGE*/</comment>

            <case pos:start="3665:13" pos:end="3665:19">case <expr pos:start="3665:18" pos:end="3665:18"><literal type="number" pos:start="3665:18" pos:end="3665:18">3</literal></expr>:</case> <comment type="block" pos:start="3665:21" pos:end="3665:28">/*BLTU*/</comment> <comment type="block" pos:start="3665:30" pos:end="3665:37">/*BGEU*/</comment>

                <expr_stmt pos:start="3667:17" pos:end="3667:54"><expr pos:start="3667:17" pos:end="3667:53"><call pos:start="3667:17" pos:end="3667:53"><name pos:start="3667:17" pos:end="3667:33">gen_window_check2</name><argument_list pos:start="3667:34" pos:end="3667:53">(<argument pos:start="3667:35" pos:end="3667:36"><expr pos:start="3667:35" pos:end="3667:36"><name pos:start="3667:35" pos:end="3667:36">dc</name></expr></argument>, <argument pos:start="3667:39" pos:end="3667:44"><expr pos:start="3667:39" pos:end="3667:44"><name pos:start="3667:39" pos:end="3667:44">RRI8_S</name></expr></argument>, <argument pos:start="3667:47" pos:end="3667:52"><expr pos:start="3667:47" pos:end="3667:52"><name pos:start="3667:47" pos:end="3667:52">RRI8_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <block pos:start="3669:17" pos:end="3691:17">{<block_content pos:start="3671:21" pos:end="3689:46">

                    <decl_stmt pos:start="3671:21" pos:end="3685:22"><decl pos:start="3671:21" pos:end="3685:21"><type pos:start="3671:21" pos:end="3671:40"><specifier pos:start="3671:21" pos:end="3671:26">static</specifier> <specifier pos:start="3671:28" pos:end="3671:32">const</specifier> <name pos:start="3671:34" pos:end="3671:40">TCGCond</name></type> <name pos:start="3671:42" pos:end="3671:47"><name pos:start="3671:42" pos:end="3671:45">cond</name><index pos:start="3671:46" pos:end="3671:47">[]</index></name> <init pos:start="3671:49" pos:end="3685:21">= <expr pos:start="3671:51" pos:end="3685:21"><block pos:start="3671:51" pos:end="3685:21">{

                        <expr pos:start="3673:25" pos:end="3673:41"><index pos:start="3673:25" pos:end="3673:27">[<expr pos:start="3673:26" pos:end="3673:26"><literal type="number" pos:start="3673:26" pos:end="3673:26">1</literal></expr>]</index> <operator pos:start="3673:29" pos:end="3673:29">=</operator> <name pos:start="3673:31" pos:end="3673:41">TCG_COND_EQ</name></expr>,

                        <expr pos:start="3675:25" pos:end="3675:41"><index pos:start="3675:25" pos:end="3675:27">[<expr pos:start="3675:26" pos:end="3675:26"><literal type="number" pos:start="3675:26" pos:end="3675:26">2</literal></expr>]</index> <operator pos:start="3675:29" pos:end="3675:29">=</operator> <name pos:start="3675:31" pos:end="3675:41">TCG_COND_LT</name></expr>,

                        <expr pos:start="3677:25" pos:end="3677:42"><index pos:start="3677:25" pos:end="3677:27">[<expr pos:start="3677:26" pos:end="3677:26"><literal type="number" pos:start="3677:26" pos:end="3677:26">3</literal></expr>]</index> <operator pos:start="3677:29" pos:end="3677:29">=</operator> <name pos:start="3677:31" pos:end="3677:42">TCG_COND_LTU</name></expr>,

                        <expr pos:start="3679:25" pos:end="3679:41"><index pos:start="3679:25" pos:end="3679:27">[<expr pos:start="3679:26" pos:end="3679:26"><literal type="number" pos:start="3679:26" pos:end="3679:26">9</literal></expr>]</index> <operator pos:start="3679:29" pos:end="3679:29">=</operator> <name pos:start="3679:31" pos:end="3679:41">TCG_COND_NE</name></expr>,

                        <expr pos:start="3681:25" pos:end="3681:42"><index pos:start="3681:25" pos:end="3681:28">[<expr pos:start="3681:26" pos:end="3681:27"><literal type="number" pos:start="3681:26" pos:end="3681:27">10</literal></expr>]</index> <operator pos:start="3681:30" pos:end="3681:30">=</operator> <name pos:start="3681:32" pos:end="3681:42">TCG_COND_GE</name></expr>,

                        <expr pos:start="3683:25" pos:end="3683:43"><index pos:start="3683:25" pos:end="3683:28">[<expr pos:start="3683:26" pos:end="3683:27"><literal type="number" pos:start="3683:26" pos:end="3683:27">11</literal></expr>]</index> <operator pos:start="3683:30" pos:end="3683:30">=</operator> <name pos:start="3683:32" pos:end="3683:43">TCG_COND_GEU</name></expr>,

                    }</block></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="3687:21" pos:end="3689:46"><expr pos:start="3687:21" pos:end="3689:45"><call pos:start="3687:21" pos:end="3689:45"><name pos:start="3687:21" pos:end="3687:30">gen_brcond</name><argument_list pos:start="3687:31" pos:end="3689:45">(<argument pos:start="3687:32" pos:end="3687:33"><expr pos:start="3687:32" pos:end="3687:33"><name pos:start="3687:32" pos:end="3687:33">dc</name></expr></argument>, <argument pos:start="3687:36" pos:end="3687:47"><expr pos:start="3687:36" pos:end="3687:47"><name pos:start="3687:36" pos:end="3687:47"><name pos:start="3687:36" pos:end="3687:39">cond</name><index pos:start="3687:40" pos:end="3687:47">[<expr pos:start="3687:41" pos:end="3687:46"><name pos:start="3687:41" pos:end="3687:46">RRI8_R</name></expr>]</index></name></expr></argument>, <argument pos:start="3687:50" pos:end="3687:62"><expr pos:start="3687:50" pos:end="3687:62"><name pos:start="3687:50" pos:end="3687:62"><name pos:start="3687:50" pos:end="3687:54">cpu_R</name><index pos:start="3687:55" pos:end="3687:62">[<expr pos:start="3687:56" pos:end="3687:61"><name pos:start="3687:56" pos:end="3687:61">RRI8_S</name></expr>]</index></name></expr></argument>, <argument pos:start="3687:65" pos:end="3687:77"><expr pos:start="3687:65" pos:end="3687:77"><name pos:start="3687:65" pos:end="3687:77"><name pos:start="3687:65" pos:end="3687:69">cpu_R</name><index pos:start="3687:70" pos:end="3687:77">[<expr pos:start="3687:71" pos:end="3687:76"><name pos:start="3687:71" pos:end="3687:76">RRI8_T</name></expr>]</index></name></expr></argument>,

                            <argument pos:start="3689:29" pos:end="3689:44"><expr pos:start="3689:29" pos:end="3689:44"><literal type="number" pos:start="3689:29" pos:end="3689:31">4</literal> <operator pos:start="3689:31" pos:end="3689:31">+</operator> <name pos:start="3689:33" pos:end="3689:44">RRI8_IMM8_SE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block>

                <break pos:start="3693:17" pos:end="3693:22">break;</break>



            <case pos:start="3697:13" pos:end="3697:19">case <expr pos:start="3697:18" pos:end="3697:18"><literal type="number" pos:start="3697:18" pos:end="3697:18">4</literal></expr>:</case> <comment type="block" pos:start="3697:21" pos:end="3697:28">/*BALL*/</comment> <comment type="block" pos:start="3697:30" pos:end="3697:38">/*BNALL*/</comment>

                <expr_stmt pos:start="3699:17" pos:end="3699:54"><expr pos:start="3699:17" pos:end="3699:53"><call pos:start="3699:17" pos:end="3699:53"><name pos:start="3699:17" pos:end="3699:33">gen_window_check2</name><argument_list pos:start="3699:34" pos:end="3699:53">(<argument pos:start="3699:35" pos:end="3699:36"><expr pos:start="3699:35" pos:end="3699:36"><name pos:start="3699:35" pos:end="3699:36">dc</name></expr></argument>, <argument pos:start="3699:39" pos:end="3699:44"><expr pos:start="3699:39" pos:end="3699:44"><name pos:start="3699:39" pos:end="3699:44">RRI8_S</name></expr></argument>, <argument pos:start="3699:47" pos:end="3699:52"><expr pos:start="3699:47" pos:end="3699:52"><name pos:start="3699:47" pos:end="3699:52">RRI8_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <block pos:start="3701:17" pos:end="3713:17">{<block_content pos:start="3703:21" pos:end="3711:39">

                    <decl_stmt pos:start="3703:21" pos:end="3703:54"><decl pos:start="3703:21" pos:end="3703:53"><type pos:start="3703:21" pos:end="3703:28"><name pos:start="3703:21" pos:end="3703:28">TCGv_i32</name></type> <name pos:start="3703:30" pos:end="3703:32">tmp</name> <init pos:start="3703:34" pos:end="3703:53">= <expr pos:start="3703:36" pos:end="3703:53"><call pos:start="3703:36" pos:end="3703:53"><name pos:start="3703:36" pos:end="3703:51">tcg_temp_new_i32</name><argument_list pos:start="3703:52" pos:end="3703:53">()</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="3705:21" pos:end="3705:71"><expr pos:start="3705:21" pos:end="3705:70"><call pos:start="3705:21" pos:end="3705:70"><name pos:start="3705:21" pos:end="3705:35">tcg_gen_and_i32</name><argument_list pos:start="3705:36" pos:end="3705:70">(<argument pos:start="3705:37" pos:end="3705:39"><expr pos:start="3705:37" pos:end="3705:39"><name pos:start="3705:37" pos:end="3705:39">tmp</name></expr></argument>, <argument pos:start="3705:42" pos:end="3705:54"><expr pos:start="3705:42" pos:end="3705:54"><name pos:start="3705:42" pos:end="3705:54"><name pos:start="3705:42" pos:end="3705:46">cpu_R</name><index pos:start="3705:47" pos:end="3705:54">[<expr pos:start="3705:48" pos:end="3705:53"><name pos:start="3705:48" pos:end="3705:53">RRI8_S</name></expr>]</index></name></expr></argument>, <argument pos:start="3705:57" pos:end="3705:69"><expr pos:start="3705:57" pos:end="3705:69"><name pos:start="3705:57" pos:end="3705:69"><name pos:start="3705:57" pos:end="3705:61">cpu_R</name><index pos:start="3705:62" pos:end="3705:69">[<expr pos:start="3705:63" pos:end="3705:68"><name pos:start="3705:63" pos:end="3705:68">RRI8_T</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3707:21" pos:end="3709:46"><expr pos:start="3707:21" pos:end="3709:45"><call pos:start="3707:21" pos:end="3709:45"><name pos:start="3707:21" pos:end="3707:30">gen_brcond</name><argument_list pos:start="3707:31" pos:end="3709:45">(<argument pos:start="3707:32" pos:end="3707:33"><expr pos:start="3707:32" pos:end="3707:33"><name pos:start="3707:32" pos:end="3707:33">dc</name></expr></argument>, <argument pos:start="3707:36" pos:end="3707:40"><expr pos:start="3707:36" pos:end="3707:40"><name pos:start="3707:36" pos:end="3707:40">eq_ne</name></expr></argument>, <argument pos:start="3707:43" pos:end="3707:45"><expr pos:start="3707:43" pos:end="3707:45"><name pos:start="3707:43" pos:end="3707:45">tmp</name></expr></argument>, <argument pos:start="3707:48" pos:end="3707:60"><expr pos:start="3707:48" pos:end="3707:60"><name pos:start="3707:48" pos:end="3707:60"><name pos:start="3707:48" pos:end="3707:52">cpu_R</name><index pos:start="3707:53" pos:end="3707:60">[<expr pos:start="3707:54" pos:end="3707:59"><name pos:start="3707:54" pos:end="3707:59">RRI8_T</name></expr>]</index></name></expr></argument>,

                            <argument pos:start="3709:29" pos:end="3709:44"><expr pos:start="3709:29" pos:end="3709:44"><literal type="number" pos:start="3709:29" pos:end="3709:31">4</literal> <operator pos:start="3709:31" pos:end="3709:31">+</operator> <name pos:start="3709:33" pos:end="3709:44">RRI8_IMM8_SE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3711:21" pos:end="3711:39"><expr pos:start="3711:21" pos:end="3711:38"><call pos:start="3711:21" pos:end="3711:38"><name pos:start="3711:21" pos:end="3711:33">tcg_temp_free</name><argument_list pos:start="3711:34" pos:end="3711:38">(<argument pos:start="3711:35" pos:end="3711:37"><expr pos:start="3711:35" pos:end="3711:37"><name pos:start="3711:35" pos:end="3711:37">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block>

                <break pos:start="3715:17" pos:end="3715:22">break;</break>



            <case pos:start="3719:13" pos:end="3719:19">case <expr pos:start="3719:18" pos:end="3719:18"><literal type="number" pos:start="3719:18" pos:end="3719:18">5</literal></expr>:</case> <comment type="block" pos:start="3719:21" pos:end="3719:27">/*BBC*/</comment> <comment type="block" pos:start="3719:29" pos:end="3719:35">/*BBS*/</comment>

                <expr_stmt pos:start="3721:17" pos:end="3721:54"><expr pos:start="3721:17" pos:end="3721:53"><call pos:start="3721:17" pos:end="3721:53"><name pos:start="3721:17" pos:end="3721:33">gen_window_check2</name><argument_list pos:start="3721:34" pos:end="3721:53">(<argument pos:start="3721:35" pos:end="3721:36"><expr pos:start="3721:35" pos:end="3721:36"><name pos:start="3721:35" pos:end="3721:36">dc</name></expr></argument>, <argument pos:start="3721:39" pos:end="3721:44"><expr pos:start="3721:39" pos:end="3721:44"><name pos:start="3721:39" pos:end="3721:44">RRI8_S</name></expr></argument>, <argument pos:start="3721:47" pos:end="3721:52"><expr pos:start="3721:47" pos:end="3721:52"><name pos:start="3721:47" pos:end="3721:52">RRI8_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <block pos:start="3723:17" pos:end="3757:17">{<block_content pos:start="3727:21" pos:end="3755:39">

<cpp:ifdef pos:start="3725:1" pos:end="3725:29">#<cpp:directive pos:start="3725:2" pos:end="3725:6">ifdef</cpp:directive> <name pos:start="3725:8" pos:end="3725:29">TARGET_WORDS_BIGENDIAN</name></cpp:ifdef>

                    <decl_stmt pos:start="3727:21" pos:end="3730:0"><decl pos:start="3727:21" pos:end="3727:60"><type pos:start="3727:21" pos:end="3727:28"><name pos:start="3727:21" pos:end="3727:28">TCGv_i32</name></type> <name pos:start="3727:30" pos:end="3727:32">bit</name> <init pos:start="3727:34" pos:end="3727:60">= <expr pos:start="3727:36" pos:end="3727:60"><call pos:start="3727:36" pos:end="3727:60"><name pos:start="3727:36" pos:end="3727:48">tcg_const_i32</name><argument_list pos:start="3727:49" pos:end="3727:60">(<argument pos:start="3727:50" pos:end="3727:59"><expr pos:start="3727:50" pos:end="3727:59"><literal type="number" pos:start="3727:50" pos:end="3727:59">0x80000000</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<cpp:else pos:start="3729:1" pos:end="3729:5">#<cpp:directive pos:start="3729:2" pos:end="3729:5">else</cpp:directive></cpp:else>

                    <decl_stmt pos:start="3731:21" pos:end="3734:0"><decl pos:start="3731:21" pos:end="3731:60"><type pos:start="3731:21" pos:end="3731:28"><name pos:start="3731:21" pos:end="3731:28">TCGv_i32</name></type> <name pos:start="3731:30" pos:end="3731:32">bit</name> <init pos:start="3731:34" pos:end="3731:60">= <expr pos:start="3731:36" pos:end="3731:60"><call pos:start="3731:36" pos:end="3731:60"><name pos:start="3731:36" pos:end="3731:48">tcg_const_i32</name><argument_list pos:start="3731:49" pos:end="3731:60">(<argument pos:start="3731:50" pos:end="3731:59"><expr pos:start="3731:50" pos:end="3731:59"><literal type="number" pos:start="3731:50" pos:end="3731:59">0x00000001</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<cpp:endif pos:start="3733:1" pos:end="3733:6">#<cpp:directive pos:start="3733:2" pos:end="3733:6">endif</cpp:directive></cpp:endif>

                    <decl_stmt pos:start="3735:21" pos:end="3735:54"><decl pos:start="3735:21" pos:end="3735:53"><type pos:start="3735:21" pos:end="3735:28"><name pos:start="3735:21" pos:end="3735:28">TCGv_i32</name></type> <name pos:start="3735:30" pos:end="3735:32">tmp</name> <init pos:start="3735:34" pos:end="3735:53">= <expr pos:start="3735:36" pos:end="3735:53"><call pos:start="3735:36" pos:end="3735:53"><name pos:start="3735:36" pos:end="3735:51">tcg_temp_new_i32</name><argument_list pos:start="3735:52" pos:end="3735:53">()</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="3737:21" pos:end="3740:0"><expr pos:start="3737:21" pos:end="3737:62"><call pos:start="3737:21" pos:end="3737:62"><name pos:start="3737:21" pos:end="3737:36">tcg_gen_andi_i32</name><argument_list pos:start="3737:37" pos:end="3737:62">(<argument pos:start="3737:38" pos:end="3737:40"><expr pos:start="3737:38" pos:end="3737:40"><name pos:start="3737:38" pos:end="3737:40">tmp</name></expr></argument>, <argument pos:start="3737:43" pos:end="3737:55"><expr pos:start="3737:43" pos:end="3737:55"><name pos:start="3737:43" pos:end="3737:55"><name pos:start="3737:43" pos:end="3737:47">cpu_R</name><index pos:start="3737:48" pos:end="3737:55">[<expr pos:start="3737:49" pos:end="3737:54"><name pos:start="3737:49" pos:end="3737:54">RRI8_T</name></expr>]</index></name></expr></argument>, <argument pos:start="3737:58" pos:end="3737:61"><expr pos:start="3737:58" pos:end="3737:61"><literal type="number" pos:start="3737:58" pos:end="3737:61">0x1f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="3739:1" pos:end="3739:29">#<cpp:directive pos:start="3739:2" pos:end="3739:6">ifdef</cpp:directive> <name pos:start="3739:8" pos:end="3739:29">TARGET_WORDS_BIGENDIAN</name></cpp:ifdef>

                    <expr_stmt pos:start="3741:21" pos:end="3744:0"><expr pos:start="3741:21" pos:end="3741:50"><call pos:start="3741:21" pos:end="3741:50"><name pos:start="3741:21" pos:end="3741:35">tcg_gen_shr_i32</name><argument_list pos:start="3741:36" pos:end="3741:50">(<argument pos:start="3741:37" pos:end="3741:39"><expr pos:start="3741:37" pos:end="3741:39"><name pos:start="3741:37" pos:end="3741:39">bit</name></expr></argument>, <argument pos:start="3741:42" pos:end="3741:44"><expr pos:start="3741:42" pos:end="3741:44"><name pos:start="3741:42" pos:end="3741:44">bit</name></expr></argument>, <argument pos:start="3741:47" pos:end="3741:49"><expr pos:start="3741:47" pos:end="3741:49"><name pos:start="3741:47" pos:end="3741:49">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="3743:1" pos:end="3743:5">#<cpp:directive pos:start="3743:2" pos:end="3743:5">else</cpp:directive></cpp:else>

                    <expr_stmt pos:start="3745:21" pos:end="3748:0"><expr pos:start="3745:21" pos:end="3745:50"><call pos:start="3745:21" pos:end="3745:50"><name pos:start="3745:21" pos:end="3745:35">tcg_gen_shl_i32</name><argument_list pos:start="3745:36" pos:end="3745:50">(<argument pos:start="3745:37" pos:end="3745:39"><expr pos:start="3745:37" pos:end="3745:39"><name pos:start="3745:37" pos:end="3745:39">bit</name></expr></argument>, <argument pos:start="3745:42" pos:end="3745:44"><expr pos:start="3745:42" pos:end="3745:44"><name pos:start="3745:42" pos:end="3745:44">bit</name></expr></argument>, <argument pos:start="3745:47" pos:end="3745:49"><expr pos:start="3745:47" pos:end="3745:49"><name pos:start="3745:47" pos:end="3745:49">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="3747:1" pos:end="3747:6">#<cpp:directive pos:start="3747:2" pos:end="3747:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="3749:21" pos:end="3749:61"><expr pos:start="3749:21" pos:end="3749:60"><call pos:start="3749:21" pos:end="3749:60"><name pos:start="3749:21" pos:end="3749:35">tcg_gen_and_i32</name><argument_list pos:start="3749:36" pos:end="3749:60">(<argument pos:start="3749:37" pos:end="3749:39"><expr pos:start="3749:37" pos:end="3749:39"><name pos:start="3749:37" pos:end="3749:39">tmp</name></expr></argument>, <argument pos:start="3749:42" pos:end="3749:54"><expr pos:start="3749:42" pos:end="3749:54"><name pos:start="3749:42" pos:end="3749:54"><name pos:start="3749:42" pos:end="3749:46">cpu_R</name><index pos:start="3749:47" pos:end="3749:54">[<expr pos:start="3749:48" pos:end="3749:53"><name pos:start="3749:48" pos:end="3749:53">RRI8_S</name></expr>]</index></name></expr></argument>, <argument pos:start="3749:57" pos:end="3749:59"><expr pos:start="3749:57" pos:end="3749:59"><name pos:start="3749:57" pos:end="3749:59">bit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3751:21" pos:end="3751:69"><expr pos:start="3751:21" pos:end="3751:68"><call pos:start="3751:21" pos:end="3751:68"><name pos:start="3751:21" pos:end="3751:31">gen_brcondi</name><argument_list pos:start="3751:32" pos:end="3751:68">(<argument pos:start="3751:33" pos:end="3751:34"><expr pos:start="3751:33" pos:end="3751:34"><name pos:start="3751:33" pos:end="3751:34">dc</name></expr></argument>, <argument pos:start="3751:37" pos:end="3751:41"><expr pos:start="3751:37" pos:end="3751:41"><name pos:start="3751:37" pos:end="3751:41">eq_ne</name></expr></argument>, <argument pos:start="3751:44" pos:end="3751:46"><expr pos:start="3751:44" pos:end="3751:46"><name pos:start="3751:44" pos:end="3751:46">tmp</name></expr></argument>, <argument pos:start="3751:49" pos:end="3751:49"><expr pos:start="3751:49" pos:end="3751:49"><literal type="number" pos:start="3751:49" pos:end="3751:49">0</literal></expr></argument>, <argument pos:start="3751:52" pos:end="3751:67"><expr pos:start="3751:52" pos:end="3751:67"><literal type="number" pos:start="3751:52" pos:end="3751:54">4</literal> <operator pos:start="3751:54" pos:end="3751:54">+</operator> <name pos:start="3751:56" pos:end="3751:67">RRI8_IMM8_SE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3753:21" pos:end="3753:39"><expr pos:start="3753:21" pos:end="3753:38"><call pos:start="3753:21" pos:end="3753:38"><name pos:start="3753:21" pos:end="3753:33">tcg_temp_free</name><argument_list pos:start="3753:34" pos:end="3753:38">(<argument pos:start="3753:35" pos:end="3753:37"><expr pos:start="3753:35" pos:end="3753:37"><name pos:start="3753:35" pos:end="3753:37">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3755:21" pos:end="3755:39"><expr pos:start="3755:21" pos:end="3755:38"><call pos:start="3755:21" pos:end="3755:38"><name pos:start="3755:21" pos:end="3755:33">tcg_temp_free</name><argument_list pos:start="3755:34" pos:end="3755:38">(<argument pos:start="3755:35" pos:end="3755:37"><expr pos:start="3755:35" pos:end="3755:37"><name pos:start="3755:35" pos:end="3755:37">bit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block>

                <break pos:start="3759:17" pos:end="3759:22">break;</break>



            <case pos:start="3763:13" pos:end="3763:19">case <expr pos:start="3763:18" pos:end="3763:18"><literal type="number" pos:start="3763:18" pos:end="3763:18">6</literal></expr>:</case> <comment type="block" pos:start="3763:21" pos:end="3763:28">/*BBCI*/</comment> <comment type="block" pos:start="3763:30" pos:end="3763:37">/*BBSI*/</comment>

            <case pos:start="3765:13" pos:end="3765:19">case <expr pos:start="3765:18" pos:end="3765:18"><literal type="number" pos:start="3765:18" pos:end="3765:18">7</literal></expr>:</case>

                <expr_stmt pos:start="3767:17" pos:end="3767:46"><expr pos:start="3767:17" pos:end="3767:45"><call pos:start="3767:17" pos:end="3767:45"><name pos:start="3767:17" pos:end="3767:33">gen_window_check1</name><argument_list pos:start="3767:34" pos:end="3767:45">(<argument pos:start="3767:35" pos:end="3767:36"><expr pos:start="3767:35" pos:end="3767:36"><name pos:start="3767:35" pos:end="3767:36">dc</name></expr></argument>, <argument pos:start="3767:39" pos:end="3767:44"><expr pos:start="3767:39" pos:end="3767:44"><name pos:start="3767:39" pos:end="3767:44">RRI8_S</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <block pos:start="3769:17" pos:end="3781:73">{<block_content pos:start="3771:21" pos:end="3781:73">

                    <decl_stmt pos:start="3771:21" pos:end="3771:54"><decl pos:start="3771:21" pos:end="3771:53"><type pos:start="3771:21" pos:end="3771:28"><name pos:start="3771:21" pos:end="3771:28">TCGv_i32</name></type> <name pos:start="3771:30" pos:end="3771:32">tmp</name> <init pos:start="3771:34" pos:end="3771:53">= <expr pos:start="3771:36" pos:end="3771:53"><call pos:start="3771:36" pos:end="3771:53"><name pos:start="3771:36" pos:end="3771:51">tcg_temp_new_i32</name><argument_list pos:start="3771:52" pos:end="3771:53">()</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="3773:21" pos:end="3780:0"><expr pos:start="3773:21" pos:end="3777:73"><call pos:start="3773:21" pos:end="3777:73"><name pos:start="3773:21" pos:end="3773:36">tcg_gen_andi_i32</name><argument_list pos:start="3773:37" pos:end="3777:73">(<argument pos:start="3773:38" pos:end="3773:40"><expr pos:start="3773:38" pos:end="3773:40"><name pos:start="3773:38" pos:end="3773:40">tmp</name></expr></argument>, <argument pos:start="3773:43" pos:end="3773:55"><expr pos:start="3773:43" pos:end="3773:55"><name pos:start="3773:43" pos:end="3773:55"><name pos:start="3773:43" pos:end="3773:47">cpu_R</name><index pos:start="3773:48" pos:end="3773:55">[<expr pos:start="3773:49" pos:end="3773:54"><name pos:start="3773:49" pos:end="3773:54">RRI8_S</name></expr>]</index></name></expr></argument>,

<cpp:ifdef pos:start="3775:1" pos:end="3775:29">#<cpp:directive pos:start="3775:2" pos:end="3775:6">ifdef</cpp:directive> <name pos:start="3775:8" pos:end="3775:29">TARGET_WORDS_BIGENDIAN</name></cpp:ifdef>

                            <argument pos:start="3777:29" pos:end="3777:72"><expr pos:start="3777:29" pos:end="3777:72"><literal type="number" pos:start="3777:29" pos:end="3777:38">0x80000000</literal> <operator pos:start="3777:40" pos:end="3777:41">&gt;&gt;</operator> <operator pos:start="3777:43" pos:end="3777:43">(</operator><operator pos:start="3777:44" pos:end="3777:44">(</operator><operator pos:start="3777:45" pos:end="3777:45">(</operator><name pos:start="3777:46" pos:end="3777:51">RRI8_R</name> <operator pos:start="3777:53" pos:end="3777:53">&amp;</operator> <literal type="number" pos:start="3777:55" pos:end="3777:55">1</literal><operator pos:start="3777:56" pos:end="3777:56">)</operator> <operator pos:start="3777:58" pos:end="3777:59">&lt;&lt;</operator> <literal type="number" pos:start="3777:61" pos:end="3777:61">4</literal><operator pos:start="3777:62" pos:end="3777:62">)</operator> <operator pos:start="3777:64" pos:end="3777:64">|</operator> <name pos:start="3777:66" pos:end="3777:71">RRI8_T</name><operator pos:start="3777:72" pos:end="3777:72">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="3779:1" pos:end="3779:5">#<cpp:directive pos:start="3779:2" pos:end="3779:5">else</cpp:directive></cpp:else>

                            <expr_stmt pos:start="3781:29" pos:end="3781:72"><expr pos:start="3781:29" pos:end="3781:72"><literal type="number" pos:start="3781:29" pos:end="3781:38">0x00000001</literal> <operator pos:start="3781:40" pos:end="3781:41">&lt;&lt;</operator> <operator pos:start="3781:43" pos:end="3781:43">(</operator><operator pos:start="3781:44" pos:end="3781:44">(</operator><operator pos:start="3781:45" pos:end="3781:45">(</operator><name pos:start="3781:46" pos:end="3781:51">RRI8_R</name> <operator pos:start="3781:53" pos:end="3781:53">&amp;</operator> <literal type="number" pos:start="3781:55" pos:end="3781:55">1</literal><operator pos:start="3781:56" pos:end="3781:56">)</operator> <operator pos:start="3781:58" pos:end="3781:59">&lt;&lt;</operator> <literal type="number" pos:start="3781:61" pos:end="3781:61">4</literal><operator pos:start="3781:62" pos:end="3781:62">)</operator> <operator pos:start="3781:64" pos:end="3781:64">|</operator> <name pos:start="3781:66" pos:end="3781:71">RRI8_T</name><operator pos:start="3781:72" pos:end="3781:72">)</operator></expr></expr_stmt>)</block_content></block><empty_stmt pos:start="3781:74" pos:end="3784:0">;</empty_stmt>

<cpp:endif pos:start="3783:1" pos:end="3783:6">#<cpp:directive pos:start="3783:2" pos:end="3783:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="3785:21" pos:end="3785:69"><expr pos:start="3785:21" pos:end="3785:68"><call pos:start="3785:21" pos:end="3785:68"><name pos:start="3785:21" pos:end="3785:31">gen_brcondi</name><argument_list pos:start="3785:32" pos:end="3785:68">(<argument pos:start="3785:33" pos:end="3785:34"><expr pos:start="3785:33" pos:end="3785:34"><name pos:start="3785:33" pos:end="3785:34">dc</name></expr></argument>, <argument pos:start="3785:37" pos:end="3785:41"><expr pos:start="3785:37" pos:end="3785:41"><name pos:start="3785:37" pos:end="3785:41">eq_ne</name></expr></argument>, <argument pos:start="3785:44" pos:end="3785:46"><expr pos:start="3785:44" pos:end="3785:46"><name pos:start="3785:44" pos:end="3785:46">tmp</name></expr></argument>, <argument pos:start="3785:49" pos:end="3785:49"><expr pos:start="3785:49" pos:end="3785:49"><literal type="number" pos:start="3785:49" pos:end="3785:49">0</literal></expr></argument>, <argument pos:start="3785:52" pos:end="3785:67"><expr pos:start="3785:52" pos:end="3785:67"><literal type="number" pos:start="3785:52" pos:end="3785:54">4</literal> <operator pos:start="3785:54" pos:end="3785:54">+</operator> <name pos:start="3785:56" pos:end="3785:67">RRI8_IMM8_SE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3787:21" pos:end="3787:39"><expr pos:start="3787:21" pos:end="3787:38"><call pos:start="3787:21" pos:end="3787:38"><name pos:start="3787:21" pos:end="3787:33">tcg_temp_free</name><argument_list pos:start="3787:34" pos:end="3787:38">(<argument pos:start="3787:35" pos:end="3787:37"><expr pos:start="3787:35" pos:end="3787:37"><name pos:start="3787:35" pos:end="3787:37">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></switch>

                <break pos:start="3791:17" pos:end="3791:22">break;</break>



            </block_content>}</block>

        </block_content>}</block></switch>

        <break pos:start="3799:9" pos:end="3818:0">break;</break>



<cpp:define pos:start="3803:1" pos:end="3817:19">#<cpp:directive pos:start="3803:2" pos:end="3803:7">define</cpp:directive> <cpp:macro pos:start="3803:9" pos:end="3803:35"><name pos:start="3803:9" pos:end="3803:29">gen_narrow_load_store</name><parameter_list pos:start="3803:30" pos:end="3803:35">(<parameter pos:start="3803:31" pos:end="3803:34"><type pos:start="3803:31" pos:end="3803:34"><name pos:start="3803:31" pos:end="3803:34">type</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="3803:37" pos:end="3817:19">do { \

            TCGv_i32 addr = tcg_temp_new_i32(); \

            gen_window_check2(dc, RRRN_S, RRRN_T); \

            tcg_gen_addi_i32(addr, cpu_R[RRRN_S], RRRN_R &lt;&lt; 2); \

            gen_load_store_alignment(dc, 2, addr, false); \

            tcg_gen_qemu_##type(cpu_R[RRRN_T], addr, dc-&gt;cring); \

            tcg_temp_free(addr); \

        } while (0)</cpp:value></cpp:define>



    <case pos:start="3821:5" pos:end="3821:11">case <expr pos:start="3821:10" pos:end="3821:10"><literal type="number" pos:start="3821:10" pos:end="3821:10">8</literal></expr>:</case> <comment type="block" pos:start="3821:13" pos:end="3821:23">/*L32I.Nn*/</comment>

        <expr_stmt pos:start="3823:9" pos:end="3823:37"><expr pos:start="3823:9" pos:end="3823:36"><call pos:start="3823:9" pos:end="3823:36"><name pos:start="3823:9" pos:end="3823:29">gen_narrow_load_store</name><argument_list pos:start="3823:30" pos:end="3823:36">(<argument pos:start="3823:31" pos:end="3823:35"><expr pos:start="3823:31" pos:end="3823:35"><name pos:start="3823:31" pos:end="3823:35">ld32u</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3825:9" pos:end="3825:14">break;</break>



    <case pos:start="3829:5" pos:end="3829:11">case <expr pos:start="3829:10" pos:end="3829:10"><literal type="number" pos:start="3829:10" pos:end="3829:10">9</literal></expr>:</case> <comment type="block" pos:start="3829:13" pos:end="3829:23">/*S32I.Nn*/</comment>

        <expr_stmt pos:start="3831:9" pos:end="3831:36"><expr pos:start="3831:9" pos:end="3831:35"><call pos:start="3831:9" pos:end="3831:35"><name pos:start="3831:9" pos:end="3831:29">gen_narrow_load_store</name><argument_list pos:start="3831:30" pos:end="3831:35">(<argument pos:start="3831:31" pos:end="3831:34"><expr pos:start="3831:31" pos:end="3831:34"><name pos:start="3831:31" pos:end="3831:34">st32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3833:9" pos:end="3836:0">break;</break>

<cpp:undef pos:start="3835:1" pos:end="3835:28">#<cpp:directive pos:start="3835:2" pos:end="3835:6">undef</cpp:directive> <name pos:start="3835:8" pos:end="3835:28">gen_narrow_load_store</name></cpp:undef>



    <case pos:start="3839:5" pos:end="3839:12">case <expr pos:start="3839:10" pos:end="3839:11"><literal type="number" pos:start="3839:10" pos:end="3839:11">10</literal></expr>:</case> <comment type="block" pos:start="3839:14" pos:end="3839:23">/*ADD.Nn*/</comment>

        <expr_stmt pos:start="3841:9" pos:end="3841:54"><expr pos:start="3841:9" pos:end="3841:53"><call pos:start="3841:9" pos:end="3841:53"><name pos:start="3841:9" pos:end="3841:25">gen_window_check3</name><argument_list pos:start="3841:26" pos:end="3841:53">(<argument pos:start="3841:27" pos:end="3841:28"><expr pos:start="3841:27" pos:end="3841:28"><name pos:start="3841:27" pos:end="3841:28">dc</name></expr></argument>, <argument pos:start="3841:31" pos:end="3841:36"><expr pos:start="3841:31" pos:end="3841:36"><name pos:start="3841:31" pos:end="3841:36">RRRN_R</name></expr></argument>, <argument pos:start="3841:39" pos:end="3841:44"><expr pos:start="3841:39" pos:end="3841:44"><name pos:start="3841:39" pos:end="3841:44">RRRN_S</name></expr></argument>, <argument pos:start="3841:47" pos:end="3841:52"><expr pos:start="3841:47" pos:end="3841:52"><name pos:start="3841:47" pos:end="3841:52">RRRN_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3843:9" pos:end="3843:69"><expr pos:start="3843:9" pos:end="3843:68"><call pos:start="3843:9" pos:end="3843:68"><name pos:start="3843:9" pos:end="3843:23">tcg_gen_add_i32</name><argument_list pos:start="3843:24" pos:end="3843:68">(<argument pos:start="3843:25" pos:end="3843:37"><expr pos:start="3843:25" pos:end="3843:37"><name pos:start="3843:25" pos:end="3843:37"><name pos:start="3843:25" pos:end="3843:29">cpu_R</name><index pos:start="3843:30" pos:end="3843:37">[<expr pos:start="3843:31" pos:end="3843:36"><name pos:start="3843:31" pos:end="3843:36">RRRN_R</name></expr>]</index></name></expr></argument>, <argument pos:start="3843:40" pos:end="3843:52"><expr pos:start="3843:40" pos:end="3843:52"><name pos:start="3843:40" pos:end="3843:52"><name pos:start="3843:40" pos:end="3843:44">cpu_R</name><index pos:start="3843:45" pos:end="3843:52">[<expr pos:start="3843:46" pos:end="3843:51"><name pos:start="3843:46" pos:end="3843:51">RRRN_S</name></expr>]</index></name></expr></argument>, <argument pos:start="3843:55" pos:end="3843:67"><expr pos:start="3843:55" pos:end="3843:67"><name pos:start="3843:55" pos:end="3843:67"><name pos:start="3843:55" pos:end="3843:59">cpu_R</name><index pos:start="3843:60" pos:end="3843:67">[<expr pos:start="3843:61" pos:end="3843:66"><name pos:start="3843:61" pos:end="3843:66">RRRN_T</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3845:9" pos:end="3845:14">break;</break>



    <case pos:start="3849:5" pos:end="3849:12">case <expr pos:start="3849:10" pos:end="3849:11"><literal type="number" pos:start="3849:10" pos:end="3849:11">11</literal></expr>:</case> <comment type="block" pos:start="3849:14" pos:end="3849:24">/*ADDI.Nn*/</comment>

        <expr_stmt pos:start="3851:9" pos:end="3851:46"><expr pos:start="3851:9" pos:end="3851:45"><call pos:start="3851:9" pos:end="3851:45"><name pos:start="3851:9" pos:end="3851:25">gen_window_check2</name><argument_list pos:start="3851:26" pos:end="3851:45">(<argument pos:start="3851:27" pos:end="3851:28"><expr pos:start="3851:27" pos:end="3851:28"><name pos:start="3851:27" pos:end="3851:28">dc</name></expr></argument>, <argument pos:start="3851:31" pos:end="3851:36"><expr pos:start="3851:31" pos:end="3851:36"><name pos:start="3851:31" pos:end="3851:36">RRRN_R</name></expr></argument>, <argument pos:start="3851:39" pos:end="3851:44"><expr pos:start="3851:39" pos:end="3851:44"><name pos:start="3851:39" pos:end="3851:44">RRRN_S</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3853:9" pos:end="3853:77"><expr pos:start="3853:9" pos:end="3853:76"><call pos:start="3853:9" pos:end="3853:76"><name pos:start="3853:9" pos:end="3853:24">tcg_gen_addi_i32</name><argument_list pos:start="3853:25" pos:end="3853:76">(<argument pos:start="3853:26" pos:end="3853:38"><expr pos:start="3853:26" pos:end="3853:38"><name pos:start="3853:26" pos:end="3853:38"><name pos:start="3853:26" pos:end="3853:30">cpu_R</name><index pos:start="3853:31" pos:end="3853:38">[<expr pos:start="3853:32" pos:end="3853:37"><name pos:start="3853:32" pos:end="3853:37">RRRN_R</name></expr>]</index></name></expr></argument>, <argument pos:start="3853:41" pos:end="3853:53"><expr pos:start="3853:41" pos:end="3853:53"><name pos:start="3853:41" pos:end="3853:53"><name pos:start="3853:41" pos:end="3853:45">cpu_R</name><index pos:start="3853:46" pos:end="3853:53">[<expr pos:start="3853:47" pos:end="3853:52"><name pos:start="3853:47" pos:end="3853:52">RRRN_S</name></expr>]</index></name></expr></argument>, <argument pos:start="3853:56" pos:end="3853:75"><expr pos:start="3853:56" pos:end="3853:75"><ternary pos:start="3853:56" pos:end="3853:75"><condition pos:start="3853:56" pos:end="3853:63"><expr pos:start="3853:56" pos:end="3853:61"><name pos:start="3853:56" pos:end="3853:61">RRRN_T</name></expr> ?</condition><then pos:start="3853:65" pos:end="3853:70"> <expr pos:start="3853:65" pos:end="3853:70"><name pos:start="3853:65" pos:end="3853:70">RRRN_T</name></expr> </then><else pos:start="3853:72" pos:end="3853:75">: <expr pos:start="3853:74" pos:end="3853:75"><operator pos:start="3853:74" pos:end="3853:74">-</operator><literal type="number" pos:start="3853:75" pos:end="3853:75">1</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3855:9" pos:end="3855:14">break;</break>



    <case pos:start="3859:5" pos:end="3859:12">case <expr pos:start="3859:10" pos:end="3859:11"><literal type="number" pos:start="3859:10" pos:end="3859:11">12</literal></expr>:</case> <comment type="block" pos:start="3859:14" pos:end="3859:21">/*ST2n*/</comment>

        <expr_stmt pos:start="3861:9" pos:end="3861:38"><expr pos:start="3861:9" pos:end="3861:37"><call pos:start="3861:9" pos:end="3861:37"><name pos:start="3861:9" pos:end="3861:25">gen_window_check1</name><argument_list pos:start="3861:26" pos:end="3861:37">(<argument pos:start="3861:27" pos:end="3861:28"><expr pos:start="3861:27" pos:end="3861:28"><name pos:start="3861:27" pos:end="3861:28">dc</name></expr></argument>, <argument pos:start="3861:31" pos:end="3861:36"><expr pos:start="3861:31" pos:end="3861:36"><name pos:start="3861:31" pos:end="3861:36">RRRN_S</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="3863:9" pos:end="3881:9"><if pos:start="3863:9" pos:end="3871:9">if <condition pos:start="3863:12" pos:end="3863:23">(<expr pos:start="3863:13" pos:end="3863:22"><name pos:start="3863:13" pos:end="3863:18">RRRN_T</name> <operator pos:start="3863:20" pos:end="3863:20">&lt;</operator> <literal type="number" pos:start="3863:22" pos:end="3863:22">8</literal></expr>)</condition> <block pos:start="3863:25" pos:end="3871:9">{<block_content pos:start="3865:13" pos:end="3869:58"> <comment type="block" pos:start="3863:27" pos:end="3863:37">/*MOVI.Nn*/</comment>

            <expr_stmt pos:start="3865:13" pos:end="3869:58"><expr pos:start="3865:13" pos:end="3869:57"><call pos:start="3865:13" pos:end="3869:57"><name pos:start="3865:13" pos:end="3865:28">tcg_gen_movi_i32</name><argument_list pos:start="3865:29" pos:end="3869:57">(<argument pos:start="3865:30" pos:end="3865:42"><expr pos:start="3865:30" pos:end="3865:42"><name pos:start="3865:30" pos:end="3865:42"><name pos:start="3865:30" pos:end="3865:34">cpu_R</name><index pos:start="3865:35" pos:end="3865:42">[<expr pos:start="3865:36" pos:end="3865:41"><name pos:start="3865:36" pos:end="3865:41">RRRN_S</name></expr>]</index></name></expr></argument>,

                    <argument pos:start="3867:21" pos:end="3869:56"><expr pos:start="3867:21" pos:end="3869:56"><name pos:start="3867:21" pos:end="3867:26">RRRN_R</name> <operator pos:start="3867:28" pos:end="3867:28">|</operator> <operator pos:start="3867:30" pos:end="3867:30">(</operator><name pos:start="3867:31" pos:end="3867:36">RRRN_T</name> <operator pos:start="3867:38" pos:end="3867:39">&lt;&lt;</operator> <literal type="number" pos:start="3867:41" pos:end="3867:41">4</literal><operator pos:start="3867:42" pos:end="3867:42">)</operator> <operator pos:start="3867:44" pos:end="3867:44">|</operator>

                    <operator pos:start="3869:21" pos:end="3869:21">(</operator><ternary pos:start="3869:22" pos:end="3869:55"><condition pos:start="3869:22" pos:end="3869:40"><expr pos:start="3869:22" pos:end="3869:38"><operator pos:start="3869:22" pos:end="3869:22">(</operator><name pos:start="3869:23" pos:end="3869:28">RRRN_T</name> <operator pos:start="3869:30" pos:end="3869:30">&amp;</operator> <literal type="number" pos:start="3869:32" pos:end="3869:32">6</literal><operator pos:start="3869:33" pos:end="3869:33">)</operator> <operator pos:start="3869:35" pos:end="3869:36">==</operator> <literal type="number" pos:start="3869:38" pos:end="3869:38">6</literal></expr> ?</condition><then pos:start="3869:42" pos:end="3869:51"> <expr pos:start="3869:42" pos:end="3869:51"><literal type="number" pos:start="3869:42" pos:end="3869:51">0xffffff80</literal></expr> </then><else pos:start="3869:53" pos:end="3869:55">: <expr pos:start="3869:55" pos:end="3869:55"><literal type="number" pos:start="3869:55" pos:end="3869:55">0</literal></expr></else></ternary><operator pos:start="3869:56" pos:end="3869:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="3871:11" pos:end="3881:9">else <block pos:start="3871:16" pos:end="3881:9">{<block_content pos:start="3873:13" pos:end="3879:56"> <comment type="block" pos:start="3871:18" pos:end="3871:28">/*BEQZ.Nn*/</comment> <comment type="block" pos:start="3871:30" pos:end="3871:40">/*BNEZ.Nn*/</comment>

            <decl_stmt pos:start="3873:13" pos:end="3873:69"><decl pos:start="3873:13" pos:end="3873:68"><type pos:start="3873:13" pos:end="3873:19"><name pos:start="3873:13" pos:end="3873:19">TCGCond</name></type> <name pos:start="3873:21" pos:end="3873:25">eq_ne</name> <init pos:start="3873:27" pos:end="3873:68">= <expr pos:start="3873:29" pos:end="3873:68"><ternary pos:start="3873:29" pos:end="3873:68"><condition pos:start="3873:29" pos:end="3873:42"><expr pos:start="3873:29" pos:end="3873:40"><operator pos:start="3873:29" pos:end="3873:29">(</operator><name pos:start="3873:30" pos:end="3873:35">RRRN_T</name> <operator pos:start="3873:37" pos:end="3873:37">&amp;</operator> <literal type="number" pos:start="3873:39" pos:end="3873:39">4</literal><operator pos:start="3873:40" pos:end="3873:40">)</operator></expr> ?</condition><then pos:start="3873:44" pos:end="3873:54"> <expr pos:start="3873:44" pos:end="3873:54"><name pos:start="3873:44" pos:end="3873:54">TCG_COND_NE</name></expr> </then><else pos:start="3873:56" pos:end="3873:68">: <expr pos:start="3873:58" pos:end="3873:68"><name pos:start="3873:58" pos:end="3873:68">TCG_COND_EQ</name></expr></else></ternary></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="3877:13" pos:end="3879:56"><expr pos:start="3877:13" pos:end="3879:55"><call pos:start="3877:13" pos:end="3879:55"><name pos:start="3877:13" pos:end="3877:23">gen_brcondi</name><argument_list pos:start="3877:24" pos:end="3879:55">(<argument pos:start="3877:25" pos:end="3877:26"><expr pos:start="3877:25" pos:end="3877:26"><name pos:start="3877:25" pos:end="3877:26">dc</name></expr></argument>, <argument pos:start="3877:29" pos:end="3877:33"><expr pos:start="3877:29" pos:end="3877:33"><name pos:start="3877:29" pos:end="3877:33">eq_ne</name></expr></argument>, <argument pos:start="3877:36" pos:end="3877:48"><expr pos:start="3877:36" pos:end="3877:48"><name pos:start="3877:36" pos:end="3877:48"><name pos:start="3877:36" pos:end="3877:40">cpu_R</name><index pos:start="3877:41" pos:end="3877:48">[<expr pos:start="3877:42" pos:end="3877:47"><name pos:start="3877:42" pos:end="3877:47">RRRN_S</name></expr>]</index></name></expr></argument>, <argument pos:start="3877:51" pos:end="3877:51"><expr pos:start="3877:51" pos:end="3877:51"><literal type="number" pos:start="3877:51" pos:end="3877:51">0</literal></expr></argument>,

                    <argument pos:start="3879:21" pos:end="3879:54"><expr pos:start="3879:21" pos:end="3879:54"><literal type="number" pos:start="3879:21" pos:end="3879:23">4</literal> <operator pos:start="3879:23" pos:end="3879:23">+</operator> <operator pos:start="3879:25" pos:end="3879:25">(</operator><name pos:start="3879:26" pos:end="3879:31">RRRN_R</name> <operator pos:start="3879:33" pos:end="3879:33">|</operator> <operator pos:start="3879:35" pos:end="3879:35">(</operator><operator pos:start="3879:36" pos:end="3879:36">(</operator><name pos:start="3879:37" pos:end="3879:42">RRRN_T</name> <operator pos:start="3879:44" pos:end="3879:44">&amp;</operator> <literal type="number" pos:start="3879:46" pos:end="3879:46">3</literal><operator pos:start="3879:47" pos:end="3879:47">)</operator> <operator pos:start="3879:49" pos:end="3879:50">&lt;&lt;</operator> <literal type="number" pos:start="3879:52" pos:end="3879:52">4</literal><operator pos:start="3879:53" pos:end="3879:53">)</operator><operator pos:start="3879:54" pos:end="3879:54">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="3883:9" pos:end="3883:14">break;</break>



    <case pos:start="3887:5" pos:end="3887:12">case <expr pos:start="3887:10" pos:end="3887:11"><literal type="number" pos:start="3887:10" pos:end="3887:11">13</literal></expr>:</case> <comment type="block" pos:start="3887:14" pos:end="3887:21">/*ST3n*/</comment>

        <switch pos:start="3889:9" pos:end="3981:9">switch <condition pos:start="3889:16" pos:end="3889:23">(<expr pos:start="3889:17" pos:end="3889:22"><name pos:start="3889:17" pos:end="3889:22">RRRN_R</name></expr>)</condition> <block pos:start="3889:25" pos:end="3981:9">{<block_content pos:start="3891:9" pos:end="3979:18">

        <case pos:start="3891:9" pos:end="3891:15">case <expr pos:start="3891:14" pos:end="3891:14"><literal type="number" pos:start="3891:14" pos:end="3891:14">0</literal></expr>:</case> <comment type="block" pos:start="3891:17" pos:end="3891:26">/*MOV.Nn*/</comment>

            <expr_stmt pos:start="3893:13" pos:end="3893:50"><expr pos:start="3893:13" pos:end="3893:49"><call pos:start="3893:13" pos:end="3893:49"><name pos:start="3893:13" pos:end="3893:29">gen_window_check2</name><argument_list pos:start="3893:30" pos:end="3893:49">(<argument pos:start="3893:31" pos:end="3893:32"><expr pos:start="3893:31" pos:end="3893:32"><name pos:start="3893:31" pos:end="3893:32">dc</name></expr></argument>, <argument pos:start="3893:35" pos:end="3893:40"><expr pos:start="3893:35" pos:end="3893:40"><name pos:start="3893:35" pos:end="3893:40">RRRN_S</name></expr></argument>, <argument pos:start="3893:43" pos:end="3893:48"><expr pos:start="3893:43" pos:end="3893:48"><name pos:start="3893:43" pos:end="3893:48">RRRN_T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="3895:13" pos:end="3895:58"><expr pos:start="3895:13" pos:end="3895:57"><call pos:start="3895:13" pos:end="3895:57"><name pos:start="3895:13" pos:end="3895:27">tcg_gen_mov_i32</name><argument_list pos:start="3895:28" pos:end="3895:57">(<argument pos:start="3895:29" pos:end="3895:41"><expr pos:start="3895:29" pos:end="3895:41"><name pos:start="3895:29" pos:end="3895:41"><name pos:start="3895:29" pos:end="3895:33">cpu_R</name><index pos:start="3895:34" pos:end="3895:41">[<expr pos:start="3895:35" pos:end="3895:40"><name pos:start="3895:35" pos:end="3895:40">RRRN_T</name></expr>]</index></name></expr></argument>, <argument pos:start="3895:44" pos:end="3895:56"><expr pos:start="3895:44" pos:end="3895:56"><name pos:start="3895:44" pos:end="3895:56"><name pos:start="3895:44" pos:end="3895:48">cpu_R</name><index pos:start="3895:49" pos:end="3895:56">[<expr pos:start="3895:50" pos:end="3895:55"><name pos:start="3895:50" pos:end="3895:55">RRRN_S</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="3897:13" pos:end="3897:18">break;</break>



        <case pos:start="3901:9" pos:end="3901:16">case <expr pos:start="3901:14" pos:end="3901:15"><literal type="number" pos:start="3901:14" pos:end="3901:15">15</literal></expr>:</case> <comment type="block" pos:start="3901:18" pos:end="3901:23">/*S3*/</comment>

            <switch pos:start="3903:13" pos:end="3969:13">switch <condition pos:start="3903:20" pos:end="3903:27">(<expr pos:start="3903:21" pos:end="3903:26"><name pos:start="3903:21" pos:end="3903:26">RRRN_T</name></expr>)</condition> <block pos:start="3903:29" pos:end="3969:13">{<block_content pos:start="3905:13" pos:end="3967:22">

            <case pos:start="3905:13" pos:end="3905:19">case <expr pos:start="3905:18" pos:end="3905:18"><literal type="number" pos:start="3905:18" pos:end="3905:18">0</literal></expr>:</case> <comment type="block" pos:start="3905:21" pos:end="3905:30">/*RET.Nn*/</comment>

                <expr_stmt pos:start="3907:17" pos:end="3907:39"><expr pos:start="3907:17" pos:end="3907:38"><call pos:start="3907:17" pos:end="3907:38"><name pos:start="3907:17" pos:end="3907:24">gen_jump</name><argument_list pos:start="3907:25" pos:end="3907:38">(<argument pos:start="3907:26" pos:end="3907:27"><expr pos:start="3907:26" pos:end="3907:27"><name pos:start="3907:26" pos:end="3907:27">dc</name></expr></argument>, <argument pos:start="3907:30" pos:end="3907:37"><expr pos:start="3907:30" pos:end="3907:37"><name pos:start="3907:30" pos:end="3907:37"><name pos:start="3907:30" pos:end="3907:34">cpu_R</name><index pos:start="3907:35" pos:end="3907:37">[<expr pos:start="3907:36" pos:end="3907:36"><literal type="number" pos:start="3907:36" pos:end="3907:36">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="3909:17" pos:end="3909:22">break;</break>



            <case pos:start="3913:13" pos:end="3913:19">case <expr pos:start="3913:18" pos:end="3913:18"><literal type="number" pos:start="3913:18" pos:end="3913:18">1</literal></expr>:</case> <comment type="block" pos:start="3913:21" pos:end="3913:31">/*RETW.Nn*/</comment>

                <expr_stmt pos:start="3915:17" pos:end="3915:60"><expr pos:start="3915:17" pos:end="3915:59"><call pos:start="3915:17" pos:end="3915:59"><name pos:start="3915:17" pos:end="3915:26">HAS_OPTION</name><argument_list pos:start="3915:27" pos:end="3915:59">(<argument pos:start="3915:28" pos:end="3915:58"><expr pos:start="3915:28" pos:end="3915:58"><name pos:start="3915:28" pos:end="3915:58">XTENSA_OPTION_WINDOWED_REGISTER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <block pos:start="3917:17" pos:end="3929:17">{<block_content pos:start="3919:21" pos:end="3927:39">

                    <decl_stmt pos:start="3919:21" pos:end="3919:57"><decl pos:start="3919:21" pos:end="3919:56"><type pos:start="3919:21" pos:end="3919:28"><name pos:start="3919:21" pos:end="3919:28">TCGv_i32</name></type> <name pos:start="3919:30" pos:end="3919:32">tmp</name> <init pos:start="3919:34" pos:end="3919:56">= <expr pos:start="3919:36" pos:end="3919:56"><call pos:start="3919:36" pos:end="3919:56"><name pos:start="3919:36" pos:end="3919:48">tcg_const_i32</name><argument_list pos:start="3919:49" pos:end="3919:56">(<argument pos:start="3919:50" pos:end="3919:55"><expr pos:start="3919:50" pos:end="3919:55"><name pos:start="3919:50" pos:end="3919:55"><name pos:start="3919:50" pos:end="3919:51">dc</name><operator pos:start="3919:52" pos:end="3919:53">-&gt;</operator><name pos:start="3919:54" pos:end="3919:55">pc</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="3921:21" pos:end="3921:43"><expr pos:start="3921:21" pos:end="3921:42"><call pos:start="3921:21" pos:end="3921:42"><name pos:start="3921:21" pos:end="3921:38">gen_advance_ccount</name><argument_list pos:start="3921:39" pos:end="3921:42">(<argument pos:start="3921:40" pos:end="3921:41"><expr pos:start="3921:40" pos:end="3921:41"><name pos:start="3921:40" pos:end="3921:41">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3923:21" pos:end="3923:55"><expr pos:start="3923:21" pos:end="3923:54"><call pos:start="3923:21" pos:end="3923:54"><name pos:start="3923:21" pos:end="3923:35">gen_helper_retw</name><argument_list pos:start="3923:36" pos:end="3923:54">(<argument pos:start="3923:37" pos:end="3923:39"><expr pos:start="3923:37" pos:end="3923:39"><name pos:start="3923:37" pos:end="3923:39">tmp</name></expr></argument>, <argument pos:start="3923:42" pos:end="3923:48"><expr pos:start="3923:42" pos:end="3923:48"><name pos:start="3923:42" pos:end="3923:48">cpu_env</name></expr></argument>, <argument pos:start="3923:51" pos:end="3923:53"><expr pos:start="3923:51" pos:end="3923:53"><name pos:start="3923:51" pos:end="3923:53">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3925:21" pos:end="3925:38"><expr pos:start="3925:21" pos:end="3925:37"><call pos:start="3925:21" pos:end="3925:37"><name pos:start="3925:21" pos:end="3925:28">gen_jump</name><argument_list pos:start="3925:29" pos:end="3925:37">(<argument pos:start="3925:30" pos:end="3925:31"><expr pos:start="3925:30" pos:end="3925:31"><name pos:start="3925:30" pos:end="3925:31">dc</name></expr></argument>, <argument pos:start="3925:34" pos:end="3925:36"><expr pos:start="3925:34" pos:end="3925:36"><name pos:start="3925:34" pos:end="3925:36">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3927:21" pos:end="3927:39"><expr pos:start="3927:21" pos:end="3927:38"><call pos:start="3927:21" pos:end="3927:38"><name pos:start="3927:21" pos:end="3927:33">tcg_temp_free</name><argument_list pos:start="3927:34" pos:end="3927:38">(<argument pos:start="3927:35" pos:end="3927:37"><expr pos:start="3927:35" pos:end="3927:37"><name pos:start="3927:35" pos:end="3927:37">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block>

                <break pos:start="3931:17" pos:end="3931:22">break;</break>



            <case pos:start="3935:13" pos:end="3935:19">case <expr pos:start="3935:18" pos:end="3935:18"><literal type="number" pos:start="3935:18" pos:end="3935:18">2</literal></expr>:</case> <comment type="block" pos:start="3935:21" pos:end="3935:32">/*BREAK.Nn*/</comment>

                <expr_stmt pos:start="3937:17" pos:end="3937:48"><expr pos:start="3937:17" pos:end="3937:47"><call pos:start="3937:17" pos:end="3937:47"><name pos:start="3937:17" pos:end="3937:26">HAS_OPTION</name><argument_list pos:start="3937:27" pos:end="3937:47">(<argument pos:start="3937:28" pos:end="3937:46"><expr pos:start="3937:28" pos:end="3937:46"><name pos:start="3937:28" pos:end="3937:46">XTENSA_OPTION_DEBUG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="3939:17" pos:end="3943:17"><if pos:start="3939:17" pos:end="3943:17">if <condition pos:start="3939:20" pos:end="3939:30">(<expr pos:start="3939:21" pos:end="3939:29"><name pos:start="3939:21" pos:end="3939:29"><name pos:start="3939:21" pos:end="3939:22">dc</name><operator pos:start="3939:23" pos:end="3939:24">-&gt;</operator><name pos:start="3939:25" pos:end="3939:29">debug</name></name></expr>)</condition> <block pos:start="3939:32" pos:end="3943:17">{<block_content pos:start="3941:21" pos:end="3941:59">

                    <expr_stmt pos:start="3941:21" pos:end="3941:59"><expr pos:start="3941:21" pos:end="3941:58"><call pos:start="3941:21" pos:end="3941:58"><name pos:start="3941:21" pos:end="3941:39">gen_debug_exception</name><argument_list pos:start="3941:40" pos:end="3941:58">(<argument pos:start="3941:41" pos:end="3941:42"><expr pos:start="3941:41" pos:end="3941:42"><name pos:start="3941:41" pos:end="3941:42">dc</name></expr></argument>, <argument pos:start="3941:45" pos:end="3941:57"><expr pos:start="3941:45" pos:end="3941:57"><name pos:start="3941:45" pos:end="3941:57">DEBUGCAUSE_BN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="3945:17" pos:end="3945:22">break;</break>



            <case pos:start="3949:13" pos:end="3949:19">case <expr pos:start="3949:18" pos:end="3949:18"><literal type="number" pos:start="3949:18" pos:end="3949:18">3</literal></expr>:</case> <comment type="block" pos:start="3949:21" pos:end="3949:30">/*NOP.Nn*/</comment>

                <break pos:start="3951:17" pos:end="3951:22">break;</break>



            <case pos:start="3955:13" pos:end="3955:19">case <expr pos:start="3955:18" pos:end="3955:18"><literal type="number" pos:start="3955:18" pos:end="3955:18">6</literal></expr>:</case> <comment type="block" pos:start="3955:21" pos:end="3955:30">/*ILL.Nn*/</comment>

                <expr_stmt pos:start="3957:17" pos:end="3957:67"><expr pos:start="3957:17" pos:end="3957:66"><call pos:start="3957:17" pos:end="3957:66"><name pos:start="3957:17" pos:end="3957:35">gen_exception_cause</name><argument_list pos:start="3957:36" pos:end="3957:66">(<argument pos:start="3957:37" pos:end="3957:38"><expr pos:start="3957:37" pos:end="3957:38"><name pos:start="3957:37" pos:end="3957:38">dc</name></expr></argument>, <argument pos:start="3957:41" pos:end="3957:65"><expr pos:start="3957:41" pos:end="3957:65"><name pos:start="3957:41" pos:end="3957:65">ILLEGAL_INSTRUCTION_CAUSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="3959:17" pos:end="3959:22">break;</break>



            <default pos:start="3963:13" pos:end="3963:20">default:</default> <comment type="block" pos:start="3963:22" pos:end="3963:33">/*reserved*/</comment>

                <expr_stmt pos:start="3965:17" pos:end="3965:27"><expr pos:start="3965:17" pos:end="3965:26"><call pos:start="3965:17" pos:end="3965:26"><name pos:start="3965:17" pos:end="3965:24">RESERVED</name><argument_list pos:start="3965:25" pos:end="3965:26">()</argument_list></call></expr>;</expr_stmt>

                <break pos:start="3967:17" pos:end="3967:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="3971:13" pos:end="3971:18">break;</break>



        <default pos:start="3975:9" pos:end="3975:16">default:</default> <comment type="block" pos:start="3975:18" pos:end="3975:29">/*reserved*/</comment>

            <expr_stmt pos:start="3977:13" pos:end="3977:23"><expr pos:start="3977:13" pos:end="3977:22"><call pos:start="3977:13" pos:end="3977:22"><name pos:start="3977:13" pos:end="3977:20">RESERVED</name><argument_list pos:start="3977:21" pos:end="3977:22">()</argument_list></call></expr>;</expr_stmt>

            <break pos:start="3979:13" pos:end="3979:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="3983:9" pos:end="3983:14">break;</break>



    <default pos:start="3987:5" pos:end="3987:12">default:</default> <comment type="block" pos:start="3987:14" pos:end="3987:25">/*reserved*/</comment>

        <expr_stmt pos:start="3989:9" pos:end="3989:19"><expr pos:start="3989:9" pos:end="3989:18"><call pos:start="3989:9" pos:end="3989:18"><name pos:start="3989:9" pos:end="3989:16">RESERVED</name><argument_list pos:start="3989:17" pos:end="3989:18">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3991:9" pos:end="3991:14">break;</break>

    </block_content>}</block></function>



    <if_stmt pos:start="3997:5" pos:end="4001:5"><if pos:start="3997:5" pos:end="4001:5">if <condition pos:start="3997:8" pos:end="3997:33">(<expr pos:start="3997:9" pos:end="3997:32"><name pos:start="3997:9" pos:end="3997:18"><name pos:start="3997:9" pos:end="3997:10">dc</name><operator pos:start="3997:11" pos:end="3997:12">-&gt;</operator><name pos:start="3997:13" pos:end="3997:18">is_jmp</name></name> <operator pos:start="3997:20" pos:end="3997:21">==</operator> <name pos:start="3997:23" pos:end="3997:32">DISAS_NEXT</name></expr>)</condition> <block pos:start="3997:35" pos:end="4001:5">{<block_content pos:start="3999:9" pos:end="3999:34">

        <expr_stmt pos:start="3999:9" pos:end="3999:34"><expr pos:start="3999:9" pos:end="3999:33"><call pos:start="3999:9" pos:end="3999:33"><name pos:start="3999:9" pos:end="3999:26">gen_check_loop_end</name><argument_list pos:start="3999:27" pos:end="3999:33">(<argument pos:start="3999:28" pos:end="3999:29"><expr pos:start="3999:28" pos:end="3999:29"><name pos:start="3999:28" pos:end="3999:29">dc</name></expr></argument>, <argument pos:start="3999:32" pos:end="3999:32"><expr pos:start="3999:32" pos:end="3999:32"><literal type="number" pos:start="3999:32" pos:end="3999:32">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="4003:5" pos:end="4003:25"><expr pos:start="4003:5" pos:end="4003:24"><name pos:start="4003:5" pos:end="4003:10"><name pos:start="4003:5" pos:end="4003:6">dc</name><operator pos:start="4003:7" pos:end="4003:8">-&gt;</operator><name pos:start="4003:9" pos:end="4003:10">pc</name></name> <operator pos:start="4003:12" pos:end="4003:12">=</operator> <name pos:start="4003:14" pos:end="4003:24"><name pos:start="4003:14" pos:end="4003:15">dc</name><operator pos:start="4003:16" pos:end="4003:17">-&gt;</operator><name pos:start="4003:18" pos:end="4003:24">next_pc</name></name></expr>;</expr_stmt>



    <return pos:start="4007:5" pos:end="4007:11">return;</return>



<label pos:start="4011:1" pos:end="4011:15"><name pos:start="4011:1" pos:end="4011:14">invalid_opcode</name>:</label>

    <expr_stmt pos:start="4013:5" pos:end="4013:45"><expr pos:start="4013:5" pos:end="4013:44"><call pos:start="4013:5" pos:end="4013:44"><name pos:start="4013:5" pos:end="4013:12">qemu_log</name><argument_list pos:start="4013:13" pos:end="4013:44">(<argument pos:start="4013:14" pos:end="4013:35"><expr pos:start="4013:14" pos:end="4013:35"><literal type="string" pos:start="4013:14" pos:end="4013:35">"INVALID(pc = %08x)\n"</literal></expr></argument>, <argument pos:start="4013:38" pos:end="4013:43"><expr pos:start="4013:38" pos:end="4013:43"><name pos:start="4013:38" pos:end="4013:43"><name pos:start="4013:38" pos:end="4013:39">dc</name><operator pos:start="4013:40" pos:end="4013:41">-&gt;</operator><name pos:start="4013:42" pos:end="4013:43">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="4015:5" pos:end="4018:0"><expr pos:start="4015:5" pos:end="4015:54"><call pos:start="4015:5" pos:end="4015:54"><name pos:start="4015:5" pos:end="4015:23">gen_exception_cause</name><argument_list pos:start="4015:24" pos:end="4015:54">(<argument pos:start="4015:25" pos:end="4015:26"><expr pos:start="4015:25" pos:end="4015:26"><name pos:start="4015:25" pos:end="4015:26">dc</name></expr></argument>, <argument pos:start="4015:29" pos:end="4015:53"><expr pos:start="4015:29" pos:end="4015:53"><name pos:start="4015:29" pos:end="4015:53">ILLEGAL_INSTRUCTION_CAUSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:undef pos:start="4017:1" pos:end="4017:17">#<cpp:directive pos:start="4017:2" pos:end="4017:6">undef</cpp:directive> <name pos:start="4017:8" pos:end="4017:17">HAS_OPTION</name></cpp:undef>

}
</unit>
