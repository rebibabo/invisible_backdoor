<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3657.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:19"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:19">target_ulong</name></type> <name pos:start="1:21" pos:end="1:35">h_put_term_char</name><parameter_list pos:start="1:36" pos:end="3:76">(<parameter pos:start="1:37" pos:end="1:49"><decl pos:start="1:37" pos:end="1:49"><type pos:start="1:37" pos:end="1:49"><name pos:start="1:37" pos:end="1:44">CPUState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">env</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:74"><decl pos:start="1:52" pos:end="1:74"><type pos:start="1:52" pos:end="1:74"><name pos:start="1:52" pos:end="1:67">sPAPREnvironment</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:74">spapr</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:55"><decl pos:start="3:37" pos:end="3:55"><type pos:start="3:37" pos:end="3:55"><name pos:start="3:37" pos:end="3:48">target_ulong</name></type> <name pos:start="3:50" pos:end="3:55">opcode</name></decl></parameter>, <parameter pos:start="3:58" pos:end="3:75"><decl pos:start="3:58" pos:end="3:75"><type pos:start="3:58" pos:end="3:75"><name pos:start="3:58" pos:end="3:69">target_ulong</name> <modifier pos:start="3:71" pos:end="3:71">*</modifier></type><name pos:start="3:72" pos:end="3:75">args</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="49:1">{<block_content pos:start="7:5" pos:end="47:21">

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:16">target_ulong</name></type> <name pos:start="7:18" pos:end="7:20">reg</name> <init pos:start="7:22" pos:end="7:30">= <expr pos:start="7:24" pos:end="7:30"><name pos:start="7:24" pos:end="7:30"><name pos:start="7:24" pos:end="7:27">args</name><index pos:start="7:28" pos:end="7:30">[<expr pos:start="7:29" pos:end="7:29"><literal type="number" pos:start="7:29" pos:end="7:29">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16">target_ulong</name></type> <name pos:start="9:18" pos:end="9:20">len</name> <init pos:start="9:22" pos:end="9:30">= <expr pos:start="9:24" pos:end="9:30"><name pos:start="9:24" pos:end="9:30"><name pos:start="9:24" pos:end="9:27">args</name><index pos:start="9:28" pos:end="9:30">[<expr pos:start="9:29" pos:end="9:29"><literal type="number" pos:start="9:29" pos:end="9:29">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:34"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:16">target_ulong</name></type> <name pos:start="11:18" pos:end="11:24">char0_7</name> <init pos:start="11:26" pos:end="11:34">= <expr pos:start="11:28" pos:end="11:34"><name pos:start="11:28" pos:end="11:34"><name pos:start="11:28" pos:end="11:31">args</name><index pos:start="11:32" pos:end="11:34">[<expr pos:start="11:33" pos:end="11:33"><literal type="number" pos:start="11:33" pos:end="11:33">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:36"><decl pos:start="13:5" pos:end="13:35"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:16">target_ulong</name></type> <name pos:start="13:18" pos:end="13:25">char8_15</name> <init pos:start="13:27" pos:end="13:35">= <expr pos:start="13:29" pos:end="13:35"><name pos:start="13:29" pos:end="13:35"><name pos:start="13:29" pos:end="13:32">args</name><index pos:start="13:33" pos:end="13:35">[<expr pos:start="13:34" pos:end="13:34"><literal type="number" pos:start="13:34" pos:end="13:34">3</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:70"><decl pos:start="15:5" pos:end="15:69"><type pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:18">VIOsPAPRDevice</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:24">sdev</name> <init pos:start="15:26" pos:end="15:69">= <expr pos:start="15:28" pos:end="15:69"><call pos:start="15:28" pos:end="15:69"><name pos:start="15:28" pos:end="15:48">spapr_vio_find_by_reg</name><argument_list pos:start="15:49" pos:end="15:69">(<argument pos:start="15:50" pos:end="15:63"><expr pos:start="15:50" pos:end="15:63"><name pos:start="15:50" pos:end="15:63"><name pos:start="15:50" pos:end="15:54">spapr</name><operator pos:start="15:55" pos:end="15:56">-&gt;</operator><name pos:start="15:57" pos:end="15:63">vio_bus</name></name></expr></argument>, <argument pos:start="15:66" pos:end="15:68"><expr pos:start="15:66" pos:end="15:68"><name pos:start="15:66" pos:end="15:68">reg</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:20"><decl pos:start="17:5" pos:end="17:19"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">uint8_t</name></type> <name pos:start="17:13" pos:end="17:19"><name pos:start="17:13" pos:end="17:15">buf</name><index pos:start="17:16" pos:end="17:19">[<expr pos:start="17:17" pos:end="17:18"><literal type="number" pos:start="17:17" pos:end="17:18">16</literal></expr>]</index></name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:14">(<expr pos:start="21:9" pos:end="21:13"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:13">sdev</name></expr>)</condition> <block pos:start="21:16" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:27">

        <return pos:start="23:9" pos:end="23:27">return <expr pos:start="23:16" pos:end="23:26"><name pos:start="23:16" pos:end="23:26">H_PARAMETER</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:17">(<expr pos:start="29:9" pos:end="29:16"><name pos:start="29:9" pos:end="29:11">len</name> <operator pos:start="29:13" pos:end="29:13">&gt;</operator> <literal type="number" pos:start="29:15" pos:end="29:16">16</literal></expr>)</condition> <block pos:start="29:19" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:27">

        <return pos:start="31:9" pos:end="31:27">return <expr pos:start="31:16" pos:end="31:26"><name pos:start="31:16" pos:end="31:26">H_PARAMETER</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:46"><expr pos:start="37:5" pos:end="37:45"><operator pos:start="37:5" pos:end="37:5">*</operator><operator pos:start="37:6" pos:end="37:6">(</operator><operator pos:start="37:7" pos:end="37:7">(</operator><name pos:start="37:8" pos:end="37:15">uint64_t</name> <operator pos:start="37:17" pos:end="37:17">*</operator><operator pos:start="37:18" pos:end="37:18">)</operator><name pos:start="37:19" pos:end="37:21">buf</name><operator pos:start="37:22" pos:end="37:22">)</operator> <operator pos:start="37:24" pos:end="37:24">=</operator> <call pos:start="37:26" pos:end="37:45"><name pos:start="37:26" pos:end="37:36">cpu_to_be64</name><argument_list pos:start="37:37" pos:end="37:45">(<argument pos:start="37:38" pos:end="37:44"><expr pos:start="37:38" pos:end="37:44"><name pos:start="37:38" pos:end="37:44">char0_7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:51"><expr pos:start="39:5" pos:end="39:50"><operator pos:start="39:5" pos:end="39:5">*</operator><operator pos:start="39:6" pos:end="39:6">(</operator><operator pos:start="39:7" pos:end="39:7">(</operator><name pos:start="39:8" pos:end="39:15">uint64_t</name> <operator pos:start="39:17" pos:end="39:17">*</operator><operator pos:start="39:18" pos:end="39:18">)</operator><name pos:start="39:19" pos:end="39:21">buf</name> <operator pos:start="39:23" pos:end="39:23">+</operator> <literal type="number" pos:start="39:25" pos:end="39:25">1</literal><operator pos:start="39:26" pos:end="39:26">)</operator> <operator pos:start="39:28" pos:end="39:28">=</operator> <call pos:start="39:30" pos:end="39:50"><name pos:start="39:30" pos:end="39:40">cpu_to_be64</name><argument_list pos:start="39:41" pos:end="39:50">(<argument pos:start="39:42" pos:end="39:49"><expr pos:start="39:42" pos:end="39:49"><name pos:start="39:42" pos:end="39:49">char8_15</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:33"><expr pos:start="43:5" pos:end="43:32"><call pos:start="43:5" pos:end="43:32"><name pos:start="43:5" pos:end="43:16">vty_putchars</name><argument_list pos:start="43:17" pos:end="43:32">(<argument pos:start="43:18" pos:end="43:21"><expr pos:start="43:18" pos:end="43:21"><name pos:start="43:18" pos:end="43:21">sdev</name></expr></argument>, <argument pos:start="43:24" pos:end="43:26"><expr pos:start="43:24" pos:end="43:26"><name pos:start="43:24" pos:end="43:26">buf</name></expr></argument>, <argument pos:start="43:29" pos:end="43:31"><expr pos:start="43:29" pos:end="43:31"><name pos:start="43:29" pos:end="43:31">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="47:5" pos:end="47:21">return <expr pos:start="47:12" pos:end="47:20"><name pos:start="47:12" pos:end="47:20">H_SUCCESS</name></expr>;</return>

</block_content>}</block></function>
</unit>
