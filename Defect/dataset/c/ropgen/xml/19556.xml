<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19556.c" pos:tabs="8"><function pos:start="1:1" pos:end="167:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">qtrle_decode_32bpp</name><parameter_list pos:start="1:31" pos:end="1:47">(<parameter pos:start="1:32" pos:end="1:46"><decl pos:start="1:32" pos:end="1:46"><type pos:start="1:32" pos:end="1:45"><name pos:start="1:32" pos:end="1:43">QtrleContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="167:1">{<block_content pos:start="5:5" pos:end="165:5">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:18">stream_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">header</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:18">start_line</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:23">lines_to_change</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:10">signed</name> <name pos:start="13:12" pos:end="13:15">char</name></type> <name pos:start="13:17" pos:end="13:24">rle_code</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:27"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:15">row_ptr</name></decl>, <decl pos:start="15:18" pos:end="15:26"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:18" pos:end="15:26">pixel_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:39"><decl pos:start="17:5" pos:end="17:38"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:15">row_inc</name> <init pos:start="17:17" pos:end="17:38">= <expr pos:start="17:19" pos:end="17:38"><name pos:start="17:19" pos:end="17:38"><name pos:start="17:19" pos:end="17:19">s</name><operator pos:start="17:20" pos:end="17:21">-&gt;</operator><name pos:start="17:22" pos:end="17:26">frame</name><operator pos:start="17:27" pos:end="17:27">.</operator><name pos:start="17:28" pos:end="17:35">linesize</name><index pos:start="17:36" pos:end="17:38">[<expr pos:start="17:37" pos:end="17:37"><literal type="number" pos:start="17:37" pos:end="17:37">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:26"><decl pos:start="19:5" pos:end="19:19"><type pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:12">unsigned</name> <name pos:start="19:14" pos:end="19:17">char</name></type> <name pos:start="19:19" pos:end="19:19">r</name></decl>, <decl pos:start="19:22" pos:end="19:22"><type ref="prev" pos:start="19:5" pos:end="19:17"/><name pos:start="19:22" pos:end="19:22">g</name></decl>, <decl pos:start="19:25" pos:end="19:25"><type ref="prev" pos:start="19:5" pos:end="19:17"/><name pos:start="19:25" pos:end="19:25">b</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:22"><decl pos:start="21:5" pos:end="21:21"><type pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:12">unsigned</name> <name pos:start="21:14" pos:end="21:16">int</name></type> <name pos:start="21:18" pos:end="21:21">argb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:42"><decl pos:start="23:5" pos:end="23:41"><type pos:start="23:5" pos:end="23:19"><name pos:start="23:5" pos:end="23:12">unsigned</name> <name pos:start="23:14" pos:end="23:17">char</name> <modifier pos:start="23:19" pos:end="23:19">*</modifier></type><name pos:start="23:20" pos:end="23:22">rgb</name> <init pos:start="23:24" pos:end="23:41">= <expr pos:start="23:26" pos:end="23:41"><name pos:start="23:26" pos:end="23:41"><name pos:start="23:26" pos:end="23:26">s</name><operator pos:start="23:27" pos:end="23:28">-&gt;</operator><name pos:start="23:29" pos:end="23:33">frame</name><operator pos:start="23:34" pos:end="23:34">.</operator><name pos:start="23:35" pos:end="23:38">data</name><index pos:start="23:39" pos:end="23:41">[<expr pos:start="23:40" pos:end="23:40"><literal type="number" pos:start="23:40" pos:end="23:40">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:62"><decl pos:start="25:5" pos:end="25:61"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:19">pixel_limit</name> <init pos:start="25:21" pos:end="25:61">= <expr pos:start="25:23" pos:end="25:61"><name pos:start="25:23" pos:end="25:42"><name pos:start="25:23" pos:end="25:23">s</name><operator pos:start="25:24" pos:end="25:25">-&gt;</operator><name pos:start="25:26" pos:end="25:30">frame</name><operator pos:start="25:31" pos:end="25:31">.</operator><name pos:start="25:32" pos:end="25:39">linesize</name><index pos:start="25:40" pos:end="25:42">[<expr pos:start="25:41" pos:end="25:41"><literal type="number" pos:start="25:41" pos:end="25:41">0</literal></expr>]</index></name> <operator pos:start="25:44" pos:end="25:44">*</operator> <name pos:start="25:46" pos:end="25:61"><name pos:start="25:46" pos:end="25:46">s</name><operator pos:start="25:47" pos:end="25:48">-&gt;</operator><name pos:start="25:49" pos:end="25:53">avctx</name><operator pos:start="25:54" pos:end="25:55">-&gt;</operator><name pos:start="25:56" pos:end="25:61">height</name></name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:56">/* check if this frame is even supposed to change */</comment>

    <if_stmt pos:start="31:5" pos:end="33:15"><if pos:start="31:5" pos:end="33:15">if <condition pos:start="31:8" pos:end="31:20">(<expr pos:start="31:9" pos:end="31:19"><name pos:start="31:9" pos:end="31:15"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:15">size</name></name> <operator pos:start="31:17" pos:end="31:17">&lt;</operator> <literal type="number" pos:start="31:19" pos:end="31:19">8</literal></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:15"><block_content pos:start="33:9" pos:end="33:15">

        <return pos:start="33:9" pos:end="33:15">return;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:36">/* start after the chunk size */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:19"><expr pos:start="39:5" pos:end="39:18"><name pos:start="39:5" pos:end="39:14">stream_ptr</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <literal type="number" pos:start="39:18" pos:end="39:18">4</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:26">/* fetch the header */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:24"><expr pos:start="45:5" pos:end="45:23"><call pos:start="45:5" pos:end="45:23"><name pos:start="45:5" pos:end="45:20">CHECK_STREAM_PTR</name><argument_list pos:start="45:21" pos:end="45:23">(<argument pos:start="45:22" pos:end="45:22"><expr pos:start="45:22" pos:end="45:22"><literal type="number" pos:start="45:22" pos:end="45:22">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:40"><expr pos:start="47:5" pos:end="47:39"><name pos:start="47:5" pos:end="47:10">header</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <call pos:start="47:14" pos:end="47:39"><name pos:start="47:14" pos:end="47:18">BE_16</name><argument_list pos:start="47:19" pos:end="47:39">(<argument pos:start="47:20" pos:end="47:38"><expr pos:start="47:20" pos:end="47:38"><operator pos:start="47:20" pos:end="47:20">&amp;</operator><name pos:start="47:21" pos:end="47:38"><name pos:start="47:21" pos:end="47:21">s</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:26">buf</name><index pos:start="47:27" pos:end="47:38">[<expr pos:start="47:28" pos:end="47:37"><name pos:start="47:28" pos:end="47:37">stream_ptr</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:20"><expr pos:start="49:5" pos:end="49:19"><name pos:start="49:5" pos:end="49:14">stream_ptr</name> <operator pos:start="49:16" pos:end="49:17">+=</operator> <literal type="number" pos:start="49:19" pos:end="49:19">2</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="53:5" pos:end="53:70">/* if a header is present, fetch additional decoding parameters */</comment>

    <if_stmt pos:start="55:5" pos:end="73:5"><if pos:start="55:5" pos:end="67:5">if <condition pos:start="55:8" pos:end="55:24">(<expr pos:start="55:9" pos:end="55:23"><name pos:start="55:9" pos:end="55:14">header</name> <operator pos:start="55:16" pos:end="55:16">&amp;</operator> <literal type="number" pos:start="55:18" pos:end="55:23">0x0008</literal></expr>)</condition> <block pos:start="55:26" pos:end="67:5">{<block_content pos:start="57:9" pos:end="65:24">

        <expr_stmt pos:start="57:9" pos:end="57:28"><expr pos:start="57:9" pos:end="57:27"><call pos:start="57:9" pos:end="57:27"><name pos:start="57:9" pos:end="57:24">CHECK_STREAM_PTR</name><argument_list pos:start="57:25" pos:end="57:27">(<argument pos:start="57:26" pos:end="57:26"><expr pos:start="57:26" pos:end="57:26"><literal type="number" pos:start="57:26" pos:end="57:26">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:48"><expr pos:start="59:9" pos:end="59:47"><name pos:start="59:9" pos:end="59:18">start_line</name> <operator pos:start="59:20" pos:end="59:20">=</operator> <call pos:start="59:22" pos:end="59:47"><name pos:start="59:22" pos:end="59:26">BE_16</name><argument_list pos:start="59:27" pos:end="59:47">(<argument pos:start="59:28" pos:end="59:46"><expr pos:start="59:28" pos:end="59:46"><operator pos:start="59:28" pos:end="59:28">&amp;</operator><name pos:start="59:29" pos:end="59:46"><name pos:start="59:29" pos:end="59:29">s</name><operator pos:start="59:30" pos:end="59:31">-&gt;</operator><name pos:start="59:32" pos:end="59:34">buf</name><index pos:start="59:35" pos:end="59:46">[<expr pos:start="59:36" pos:end="59:45"><name pos:start="59:36" pos:end="59:45">stream_ptr</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:24"><expr pos:start="61:9" pos:end="61:23"><name pos:start="61:9" pos:end="61:18">stream_ptr</name> <operator pos:start="61:20" pos:end="61:21">+=</operator> <literal type="number" pos:start="61:23" pos:end="61:23">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:53"><expr pos:start="63:9" pos:end="63:52"><name pos:start="63:9" pos:end="63:23">lines_to_change</name> <operator pos:start="63:25" pos:end="63:25">=</operator> <call pos:start="63:27" pos:end="63:52"><name pos:start="63:27" pos:end="63:31">BE_16</name><argument_list pos:start="63:32" pos:end="63:52">(<argument pos:start="63:33" pos:end="63:51"><expr pos:start="63:33" pos:end="63:51"><operator pos:start="63:33" pos:end="63:33">&amp;</operator><name pos:start="63:34" pos:end="63:51"><name pos:start="63:34" pos:end="63:34">s</name><operator pos:start="63:35" pos:end="63:36">-&gt;</operator><name pos:start="63:37" pos:end="63:39">buf</name><index pos:start="63:40" pos:end="63:51">[<expr pos:start="63:41" pos:end="63:50"><name pos:start="63:41" pos:end="63:50">stream_ptr</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:24"><expr pos:start="65:9" pos:end="65:23"><name pos:start="65:9" pos:end="65:18">stream_ptr</name> <operator pos:start="65:20" pos:end="65:21">+=</operator> <literal type="number" pos:start="65:23" pos:end="65:23">4</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="67:7" pos:end="73:5">else <block pos:start="67:12" pos:end="73:5">{<block_content pos:start="69:9" pos:end="71:43">

        <expr_stmt pos:start="69:9" pos:end="69:23"><expr pos:start="69:9" pos:end="69:22"><name pos:start="69:9" pos:end="69:18">start_line</name> <operator pos:start="69:20" pos:end="69:20">=</operator> <literal type="number" pos:start="69:22" pos:end="69:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:43"><expr pos:start="71:9" pos:end="71:42"><name pos:start="71:9" pos:end="71:23">lines_to_change</name> <operator pos:start="71:25" pos:end="71:25">=</operator> <name pos:start="71:27" pos:end="71:42"><name pos:start="71:27" pos:end="71:27">s</name><operator pos:start="71:28" pos:end="71:29">-&gt;</operator><name pos:start="71:30" pos:end="71:34">avctx</name><operator pos:start="71:35" pos:end="71:36">-&gt;</operator><name pos:start="71:37" pos:end="71:42">height</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:35"><expr pos:start="77:5" pos:end="77:34"><name pos:start="77:5" pos:end="77:11">row_ptr</name> <operator pos:start="77:13" pos:end="77:13">=</operator> <name pos:start="77:15" pos:end="77:21">row_inc</name> <operator pos:start="77:23" pos:end="77:23">*</operator> <name pos:start="77:25" pos:end="77:34">start_line</name></expr>;</expr_stmt>

    <while pos:start="79:5" pos:end="165:5">while <condition pos:start="79:11" pos:end="79:29">(<expr pos:start="79:12" pos:end="79:28"><name pos:start="79:12" pos:end="79:26">lines_to_change</name><operator pos:start="79:27" pos:end="79:28">--</operator></expr>)</condition> <block pos:start="79:31" pos:end="165:5">{<block_content pos:start="81:9" pos:end="163:27">

        <expr_stmt pos:start="81:9" pos:end="81:28"><expr pos:start="81:9" pos:end="81:27"><call pos:start="81:9" pos:end="81:27"><name pos:start="81:9" pos:end="81:24">CHECK_STREAM_PTR</name><argument_list pos:start="81:25" pos:end="81:27">(<argument pos:start="81:26" pos:end="81:26"><expr pos:start="81:26" pos:end="81:26"><literal type="number" pos:start="81:26" pos:end="81:26">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:61"><expr pos:start="83:9" pos:end="83:60"><name pos:start="83:9" pos:end="83:17">pixel_ptr</name> <operator pos:start="83:19" pos:end="83:19">=</operator> <name pos:start="83:21" pos:end="83:27">row_ptr</name> <operator pos:start="83:29" pos:end="83:29">+</operator> <operator pos:start="83:31" pos:end="83:31">(</operator><name pos:start="83:32" pos:end="83:51"><name pos:start="83:32" pos:end="83:32">s</name><operator pos:start="83:33" pos:end="83:34">-&gt;</operator><name pos:start="83:35" pos:end="83:37">buf</name><index pos:start="83:38" pos:end="83:51">[<expr pos:start="83:39" pos:end="83:50"><name pos:start="83:39" pos:end="83:48">stream_ptr</name><operator pos:start="83:49" pos:end="83:50">++</operator></expr>]</index></name> <operator pos:start="83:53" pos:end="83:53">-</operator> <literal type="number" pos:start="83:55" pos:end="83:55">1</literal><operator pos:start="83:56" pos:end="83:56">)</operator> <operator pos:start="83:58" pos:end="83:58">*</operator> <literal type="number" pos:start="83:60" pos:end="83:60">4</literal></expr>;</expr_stmt>



        <while pos:start="87:9" pos:end="161:9">while <condition pos:start="87:15" pos:end="87:68">(<expr pos:start="87:16" pos:end="87:67"><operator pos:start="87:16" pos:end="87:16">(</operator><name pos:start="87:17" pos:end="87:24">rle_code</name> <operator pos:start="87:26" pos:end="87:26">=</operator> <operator pos:start="87:28" pos:end="87:28">(</operator><name pos:start="87:29" pos:end="87:34">signed</name> <name pos:start="87:36" pos:end="87:39">char</name><operator pos:start="87:40" pos:end="87:40">)</operator><name pos:start="87:41" pos:end="87:60"><name pos:start="87:41" pos:end="87:41">s</name><operator pos:start="87:42" pos:end="87:43">-&gt;</operator><name pos:start="87:44" pos:end="87:46">buf</name><index pos:start="87:47" pos:end="87:60">[<expr pos:start="87:48" pos:end="87:59"><name pos:start="87:48" pos:end="87:57">stream_ptr</name><operator pos:start="87:58" pos:end="87:59">++</operator></expr>]</index></name><operator pos:start="87:61" pos:end="87:61">)</operator> <operator pos:start="87:63" pos:end="87:64">!=</operator> <operator pos:start="87:66" pos:end="87:66">-</operator><literal type="number" pos:start="87:67" pos:end="87:67">1</literal></expr>)</condition> <block pos:start="87:70" pos:end="161:9">{<block_content pos:start="89:13" pos:end="159:13">

            <if_stmt pos:start="89:13" pos:end="159:13"><if pos:start="89:13" pos:end="99:13">if <condition pos:start="89:16" pos:end="89:30">(<expr pos:start="89:17" pos:end="89:29"><name pos:start="89:17" pos:end="89:24">rle_code</name> <operator pos:start="89:26" pos:end="89:27">==</operator> <literal type="number" pos:start="89:29" pos:end="89:29">0</literal></expr>)</condition> <block pos:start="89:32" pos:end="99:13">{<block_content pos:start="93:17" pos:end="97:35">

                <comment type="block" pos:start="91:17" pos:end="91:61">/* there's another skip code in the stream */</comment>

                <expr_stmt pos:start="93:17" pos:end="93:36"><expr pos:start="93:17" pos:end="93:35"><call pos:start="93:17" pos:end="93:35"><name pos:start="93:17" pos:end="93:32">CHECK_STREAM_PTR</name><argument_list pos:start="93:33" pos:end="93:35">(<argument pos:start="93:34" pos:end="93:34"><expr pos:start="93:34" pos:end="93:34"><literal type="number" pos:start="93:34" pos:end="93:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="95:17" pos:end="95:60"><expr pos:start="95:17" pos:end="95:59"><name pos:start="95:17" pos:end="95:25">pixel_ptr</name> <operator pos:start="95:27" pos:end="95:28">+=</operator> <operator pos:start="95:30" pos:end="95:30">(</operator><name pos:start="95:31" pos:end="95:50"><name pos:start="95:31" pos:end="95:31">s</name><operator pos:start="95:32" pos:end="95:33">-&gt;</operator><name pos:start="95:34" pos:end="95:36">buf</name><index pos:start="95:37" pos:end="95:50">[<expr pos:start="95:38" pos:end="95:49"><name pos:start="95:38" pos:end="95:47">stream_ptr</name><operator pos:start="95:48" pos:end="95:49">++</operator></expr>]</index></name> <operator pos:start="95:52" pos:end="95:52">-</operator> <literal type="number" pos:start="95:54" pos:end="95:54">1</literal><operator pos:start="95:55" pos:end="95:55">)</operator> <operator pos:start="95:57" pos:end="95:57">*</operator> <literal type="number" pos:start="95:59" pos:end="95:59">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="97:17" pos:end="97:35"><expr pos:start="97:17" pos:end="97:34"><call pos:start="97:17" pos:end="97:34"><name pos:start="97:17" pos:end="97:31">CHECK_PIXEL_PTR</name><argument_list pos:start="97:32" pos:end="97:34">(<argument pos:start="97:33" pos:end="97:33"><expr pos:start="97:33" pos:end="97:33"><literal type="number" pos:start="97:33" pos:end="97:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="block" pos:start="97:38" pos:end="97:74">/* make sure pixel_ptr is positive */</comment>

            </block_content>}</block></if> <if type="elseif" pos:start="99:15" pos:end="131:13">else if <condition pos:start="99:23" pos:end="99:36">(<expr pos:start="99:24" pos:end="99:35"><name pos:start="99:24" pos:end="99:31">rle_code</name> <operator pos:start="99:33" pos:end="99:33">&lt;</operator> <literal type="number" pos:start="99:35" pos:end="99:35">0</literal></expr>)</condition> <block pos:start="99:38" pos:end="131:13">{<block_content pos:start="103:17" pos:end="129:17">

                <comment type="block" pos:start="101:17" pos:end="101:48">/* decode the run length code */</comment>

                <expr_stmt pos:start="103:17" pos:end="103:37"><expr pos:start="103:17" pos:end="103:36"><name pos:start="103:17" pos:end="103:24">rle_code</name> <operator pos:start="103:26" pos:end="103:26">=</operator> <operator pos:start="103:28" pos:end="103:28">-</operator><name pos:start="103:29" pos:end="103:36">rle_code</name></expr>;</expr_stmt>

                <expr_stmt pos:start="105:17" pos:end="105:36"><expr pos:start="105:17" pos:end="105:35"><call pos:start="105:17" pos:end="105:35"><name pos:start="105:17" pos:end="105:32">CHECK_STREAM_PTR</name><argument_list pos:start="105:33" pos:end="105:35">(<argument pos:start="105:34" pos:end="105:34"><expr pos:start="105:34" pos:end="105:34"><literal type="number" pos:start="105:34" pos:end="105:34">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="107:17" pos:end="107:29"><expr pos:start="107:17" pos:end="107:28"><name pos:start="107:17" pos:end="107:26">stream_ptr</name><operator pos:start="107:27" pos:end="107:28">++</operator></expr>;</expr_stmt>  <comment type="block" pos:start="107:32" pos:end="107:60">/* skip the alpha (?) byte */</comment>

                <expr_stmt pos:start="109:17" pos:end="109:41"><expr pos:start="109:17" pos:end="109:40"><name pos:start="109:17" pos:end="109:17">r</name> <operator pos:start="109:19" pos:end="109:19">=</operator> <name pos:start="109:21" pos:end="109:40"><name pos:start="109:21" pos:end="109:21">s</name><operator pos:start="109:22" pos:end="109:23">-&gt;</operator><name pos:start="109:24" pos:end="109:26">buf</name><index pos:start="109:27" pos:end="109:40">[<expr pos:start="109:28" pos:end="109:39"><name pos:start="109:28" pos:end="109:37">stream_ptr</name><operator pos:start="109:38" pos:end="109:39">++</operator></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="111:17" pos:end="111:41"><expr pos:start="111:17" pos:end="111:40"><name pos:start="111:17" pos:end="111:17">g</name> <operator pos:start="111:19" pos:end="111:19">=</operator> <name pos:start="111:21" pos:end="111:40"><name pos:start="111:21" pos:end="111:21">s</name><operator pos:start="111:22" pos:end="111:23">-&gt;</operator><name pos:start="111:24" pos:end="111:26">buf</name><index pos:start="111:27" pos:end="111:40">[<expr pos:start="111:28" pos:end="111:39"><name pos:start="111:28" pos:end="111:37">stream_ptr</name><operator pos:start="111:38" pos:end="111:39">++</operator></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="113:17" pos:end="113:41"><expr pos:start="113:17" pos:end="113:40"><name pos:start="113:17" pos:end="113:17">b</name> <operator pos:start="113:19" pos:end="113:19">=</operator> <name pos:start="113:21" pos:end="113:40"><name pos:start="113:21" pos:end="113:21">s</name><operator pos:start="113:22" pos:end="113:23">-&gt;</operator><name pos:start="113:24" pos:end="113:26">buf</name><index pos:start="113:27" pos:end="113:40">[<expr pos:start="113:28" pos:end="113:39"><name pos:start="113:28" pos:end="113:37">stream_ptr</name><operator pos:start="113:38" pos:end="113:39">++</operator></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="115:17" pos:end="115:55"><expr pos:start="115:17" pos:end="115:54"><name pos:start="115:17" pos:end="115:20">argb</name> <operator pos:start="115:22" pos:end="115:22">=</operator> <operator pos:start="115:24" pos:end="115:24">(</operator><name pos:start="115:25" pos:end="115:25">r</name> <operator pos:start="115:27" pos:end="115:28">&lt;&lt;</operator> <literal type="number" pos:start="115:30" pos:end="115:31">16</literal><operator pos:start="115:32" pos:end="115:32">)</operator> <operator pos:start="115:34" pos:end="115:34">|</operator> <operator pos:start="115:36" pos:end="115:36">(</operator><name pos:start="115:37" pos:end="115:37">g</name> <operator pos:start="115:39" pos:end="115:40">&lt;&lt;</operator> <literal type="number" pos:start="115:42" pos:end="115:42">8</literal><operator pos:start="115:43" pos:end="115:43">)</operator> <operator pos:start="115:45" pos:end="115:45">|</operator> <operator pos:start="115:47" pos:end="115:47">(</operator><name pos:start="115:48" pos:end="115:48">b</name> <operator pos:start="115:50" pos:end="115:51">&lt;&lt;</operator> <literal type="number" pos:start="115:53" pos:end="115:53">0</literal><operator pos:start="115:54" pos:end="115:54">)</operator></expr>;</expr_stmt>



                <expr_stmt pos:start="119:17" pos:end="119:46"><expr pos:start="119:17" pos:end="119:45"><call pos:start="119:17" pos:end="119:45"><name pos:start="119:17" pos:end="119:31">CHECK_PIXEL_PTR</name><argument_list pos:start="119:32" pos:end="119:45">(<argument pos:start="119:33" pos:end="119:44"><expr pos:start="119:33" pos:end="119:44"><name pos:start="119:33" pos:end="119:40">rle_code</name> <operator pos:start="119:42" pos:end="119:42">*</operator> <literal type="number" pos:start="119:44" pos:end="119:44">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <while pos:start="123:17" pos:end="129:17">while <condition pos:start="123:23" pos:end="123:34">(<expr pos:start="123:24" pos:end="123:33"><name pos:start="123:24" pos:end="123:31">rle_code</name><operator pos:start="123:32" pos:end="123:33">--</operator></expr>)</condition> <block pos:start="123:36" pos:end="129:17">{<block_content pos:start="125:21" pos:end="127:35">

                    <expr_stmt pos:start="125:21" pos:end="125:62"><expr pos:start="125:21" pos:end="125:61"><operator pos:start="125:21" pos:end="125:21">*</operator><operator pos:start="125:22" pos:end="125:22">(</operator><name pos:start="125:23" pos:end="125:30">unsigned</name> <name pos:start="125:32" pos:end="125:34">int</name> <operator pos:start="125:36" pos:end="125:36">*</operator><operator pos:start="125:37" pos:end="125:37">)</operator><operator pos:start="125:38" pos:end="125:38">(</operator><operator pos:start="125:39" pos:end="125:39">&amp;</operator><name pos:start="125:40" pos:end="125:53"><name pos:start="125:40" pos:end="125:42">rgb</name><index pos:start="125:43" pos:end="125:53">[<expr pos:start="125:44" pos:end="125:52"><name pos:start="125:44" pos:end="125:52">pixel_ptr</name></expr>]</index></name><operator pos:start="125:54" pos:end="125:54">)</operator> <operator pos:start="125:56" pos:end="125:56">=</operator> <name pos:start="125:58" pos:end="125:61">argb</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="127:21" pos:end="127:35"><expr pos:start="127:21" pos:end="127:34"><name pos:start="127:21" pos:end="127:29">pixel_ptr</name> <operator pos:start="127:31" pos:end="127:32">+=</operator> <literal type="number" pos:start="127:34" pos:end="127:34">4</literal></expr>;</expr_stmt>

                </block_content>}</block></while>

            </block_content>}</block></if> <else pos:start="131:15" pos:end="159:13">else <block pos:start="131:20" pos:end="159:13">{<block_content pos:start="133:17" pos:end="157:17">

                <expr_stmt pos:start="133:17" pos:end="133:47"><expr pos:start="133:17" pos:end="133:46"><call pos:start="133:17" pos:end="133:46"><name pos:start="133:17" pos:end="133:32">CHECK_STREAM_PTR</name><argument_list pos:start="133:33" pos:end="133:46">(<argument pos:start="133:34" pos:end="133:45"><expr pos:start="133:34" pos:end="133:45"><name pos:start="133:34" pos:end="133:41">rle_code</name> <operator pos:start="133:43" pos:end="133:43">*</operator> <literal type="number" pos:start="133:45" pos:end="133:45">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="135:17" pos:end="135:46"><expr pos:start="135:17" pos:end="135:45"><call pos:start="135:17" pos:end="135:45"><name pos:start="135:17" pos:end="135:31">CHECK_PIXEL_PTR</name><argument_list pos:start="135:32" pos:end="135:45">(<argument pos:start="135:33" pos:end="135:44"><expr pos:start="135:33" pos:end="135:44"><name pos:start="135:33" pos:end="135:40">rle_code</name> <operator pos:start="135:42" pos:end="135:42">*</operator> <literal type="number" pos:start="135:44" pos:end="135:44">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <comment type="block" pos:start="139:17" pos:end="139:52">/* copy pixels directly to output */</comment>

                <while pos:start="141:17" pos:end="157:17">while <condition pos:start="141:23" pos:end="141:34">(<expr pos:start="141:24" pos:end="141:33"><name pos:start="141:24" pos:end="141:31">rle_code</name><operator pos:start="141:32" pos:end="141:33">--</operator></expr>)</condition> <block pos:start="141:36" pos:end="157:17">{<block_content pos:start="143:21" pos:end="155:35">

                    <expr_stmt pos:start="143:21" pos:end="143:33"><expr pos:start="143:21" pos:end="143:32"><name pos:start="143:21" pos:end="143:30">stream_ptr</name><operator pos:start="143:31" pos:end="143:32">++</operator></expr>;</expr_stmt>  <comment type="block" pos:start="143:36" pos:end="143:64">/* skip the alpha (?) byte */</comment>

                    <expr_stmt pos:start="145:21" pos:end="145:45"><expr pos:start="145:21" pos:end="145:44"><name pos:start="145:21" pos:end="145:21">r</name> <operator pos:start="145:23" pos:end="145:23">=</operator> <name pos:start="145:25" pos:end="145:44"><name pos:start="145:25" pos:end="145:25">s</name><operator pos:start="145:26" pos:end="145:27">-&gt;</operator><name pos:start="145:28" pos:end="145:30">buf</name><index pos:start="145:31" pos:end="145:44">[<expr pos:start="145:32" pos:end="145:43"><name pos:start="145:32" pos:end="145:41">stream_ptr</name><operator pos:start="145:42" pos:end="145:43">++</operator></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="147:21" pos:end="147:45"><expr pos:start="147:21" pos:end="147:44"><name pos:start="147:21" pos:end="147:21">g</name> <operator pos:start="147:23" pos:end="147:23">=</operator> <name pos:start="147:25" pos:end="147:44"><name pos:start="147:25" pos:end="147:25">s</name><operator pos:start="147:26" pos:end="147:27">-&gt;</operator><name pos:start="147:28" pos:end="147:30">buf</name><index pos:start="147:31" pos:end="147:44">[<expr pos:start="147:32" pos:end="147:43"><name pos:start="147:32" pos:end="147:41">stream_ptr</name><operator pos:start="147:42" pos:end="147:43">++</operator></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="149:21" pos:end="149:45"><expr pos:start="149:21" pos:end="149:44"><name pos:start="149:21" pos:end="149:21">b</name> <operator pos:start="149:23" pos:end="149:23">=</operator> <name pos:start="149:25" pos:end="149:44"><name pos:start="149:25" pos:end="149:25">s</name><operator pos:start="149:26" pos:end="149:27">-&gt;</operator><name pos:start="149:28" pos:end="149:30">buf</name><index pos:start="149:31" pos:end="149:44">[<expr pos:start="149:32" pos:end="149:43"><name pos:start="149:32" pos:end="149:41">stream_ptr</name><operator pos:start="149:42" pos:end="149:43">++</operator></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="151:21" pos:end="151:59"><expr pos:start="151:21" pos:end="151:58"><name pos:start="151:21" pos:end="151:24">argb</name> <operator pos:start="151:26" pos:end="151:26">=</operator> <operator pos:start="151:28" pos:end="151:28">(</operator><name pos:start="151:29" pos:end="151:29">r</name> <operator pos:start="151:31" pos:end="151:32">&lt;&lt;</operator> <literal type="number" pos:start="151:34" pos:end="151:35">16</literal><operator pos:start="151:36" pos:end="151:36">)</operator> <operator pos:start="151:38" pos:end="151:38">|</operator> <operator pos:start="151:40" pos:end="151:40">(</operator><name pos:start="151:41" pos:end="151:41">g</name> <operator pos:start="151:43" pos:end="151:44">&lt;&lt;</operator> <literal type="number" pos:start="151:46" pos:end="151:46">8</literal><operator pos:start="151:47" pos:end="151:47">)</operator> <operator pos:start="151:49" pos:end="151:49">|</operator> <operator pos:start="151:51" pos:end="151:51">(</operator><name pos:start="151:52" pos:end="151:52">b</name> <operator pos:start="151:54" pos:end="151:55">&lt;&lt;</operator> <literal type="number" pos:start="151:57" pos:end="151:57">0</literal><operator pos:start="151:58" pos:end="151:58">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="153:21" pos:end="153:62"><expr pos:start="153:21" pos:end="153:61"><operator pos:start="153:21" pos:end="153:21">*</operator><operator pos:start="153:22" pos:end="153:22">(</operator><name pos:start="153:23" pos:end="153:30">unsigned</name> <name pos:start="153:32" pos:end="153:34">int</name> <operator pos:start="153:36" pos:end="153:36">*</operator><operator pos:start="153:37" pos:end="153:37">)</operator><operator pos:start="153:38" pos:end="153:38">(</operator><operator pos:start="153:39" pos:end="153:39">&amp;</operator><name pos:start="153:40" pos:end="153:53"><name pos:start="153:40" pos:end="153:42">rgb</name><index pos:start="153:43" pos:end="153:53">[<expr pos:start="153:44" pos:end="153:52"><name pos:start="153:44" pos:end="153:52">pixel_ptr</name></expr>]</index></name><operator pos:start="153:54" pos:end="153:54">)</operator> <operator pos:start="153:56" pos:end="153:56">=</operator> <name pos:start="153:58" pos:end="153:61">argb</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="155:21" pos:end="155:35"><expr pos:start="155:21" pos:end="155:34"><name pos:start="155:21" pos:end="155:29">pixel_ptr</name> <operator pos:start="155:31" pos:end="155:32">+=</operator> <literal type="number" pos:start="155:34" pos:end="155:34">4</literal></expr>;</expr_stmt>

                </block_content>}</block></while>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="163:9" pos:end="163:27"><expr pos:start="163:9" pos:end="163:26"><name pos:start="163:9" pos:end="163:15">row_ptr</name> <operator pos:start="163:17" pos:end="163:18">+=</operator> <name pos:start="163:20" pos:end="163:26">row_inc</name></expr>;</expr_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
