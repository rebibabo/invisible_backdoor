<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15692.c" pos:tabs="8"><function pos:start="1:1" pos:end="305:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">asf_read_header</name><parameter_list pos:start="1:27" pos:end="1:46">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:44"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="305:1">{<block_content pos:start="5:5" pos:end="303:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">ASFContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">asf</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:15">ff_asf_guid</name></type> <name pos:start="7:17" pos:end="7:17">g</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">AVIOContext</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:19">pb</name> <init pos:start="9:21" pos:end="9:27">= <expr pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:23">s</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:17">gsize</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:24"><expr pos:start="17:5" pos:end="17:23"><call pos:start="17:5" pos:end="17:23"><name pos:start="17:5" pos:end="17:15">ff_get_guid</name><argument_list pos:start="17:16" pos:end="17:23">(<argument pos:start="17:17" pos:end="17:18"><expr pos:start="17:17" pos:end="17:18"><name pos:start="17:17" pos:end="17:18">pb</name></expr></argument>, <argument pos:start="17:21" pos:end="17:22"><expr pos:start="17:21" pos:end="17:22"><operator pos:start="17:21" pos:end="17:21">&amp;</operator><name pos:start="17:22" pos:end="17:22">g</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="21:35"><if pos:start="19:5" pos:end="21:35">if <condition pos:start="19:8" pos:end="19:39">(<expr pos:start="19:9" pos:end="19:38"><call pos:start="19:9" pos:end="19:38"><name pos:start="19:9" pos:end="19:18">ff_guidcmp</name><argument_list pos:start="19:19" pos:end="19:38">(<argument pos:start="19:20" pos:end="19:21"><expr pos:start="19:20" pos:end="19:21"><operator pos:start="19:20" pos:end="19:20">&amp;</operator><name pos:start="19:21" pos:end="19:21">g</name></expr></argument>, <argument pos:start="19:24" pos:end="19:37"><expr pos:start="19:24" pos:end="19:37"><operator pos:start="19:24" pos:end="19:24">&amp;</operator><name pos:start="19:25" pos:end="19:37">ff_asf_header</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:35"><block_content pos:start="21:9" pos:end="21:35">

        <return pos:start="21:9" pos:end="21:35">return <expr pos:start="21:16" pos:end="21:34"><name pos:start="21:16" pos:end="21:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:18"><expr pos:start="23:5" pos:end="23:17"><call pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:13">avio_rl64</name><argument_list pos:start="23:14" pos:end="23:17">(<argument pos:start="23:15" pos:end="23:16"><expr pos:start="23:15" pos:end="23:16"><name pos:start="23:15" pos:end="23:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:18"><expr pos:start="25:5" pos:end="25:17"><call pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:13">avio_rl32</name><argument_list pos:start="25:14" pos:end="25:17">(<argument pos:start="25:15" pos:end="25:16"><expr pos:start="25:15" pos:end="25:16"><name pos:start="25:15" pos:end="25:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:16"><expr pos:start="27:5" pos:end="27:15"><call pos:start="27:5" pos:end="27:15"><name pos:start="27:5" pos:end="27:11">avio_r8</name><argument_list pos:start="27:12" pos:end="27:15">(<argument pos:start="27:13" pos:end="27:14"><expr pos:start="27:13" pos:end="27:14"><name pos:start="27:13" pos:end="27:14">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:16"><expr pos:start="29:5" pos:end="29:15"><call pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:11">avio_r8</name><argument_list pos:start="29:12" pos:end="29:15">(<argument pos:start="29:13" pos:end="29:14"><expr pos:start="29:13" pos:end="29:14"><name pos:start="29:13" pos:end="29:14">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:58"><expr pos:start="31:5" pos:end="31:57"><call pos:start="31:5" pos:end="31:57"><name pos:start="31:5" pos:end="31:10">memset</name><argument_list pos:start="31:11" pos:end="31:57">(<argument pos:start="31:12" pos:end="31:27"><expr pos:start="31:12" pos:end="31:27"><operator pos:start="31:12" pos:end="31:12">&amp;</operator><name pos:start="31:13" pos:end="31:27"><name pos:start="31:13" pos:end="31:15">asf</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:27">asfid2avid</name></name></expr></argument>, <argument pos:start="31:30" pos:end="31:31"><expr pos:start="31:30" pos:end="31:31"><operator pos:start="31:30" pos:end="31:30">-</operator><literal type="number" pos:start="31:31" pos:end="31:31">1</literal></expr></argument>, <argument pos:start="31:34" pos:end="31:56"><expr pos:start="31:34" pos:end="31:56"><sizeof pos:start="31:34" pos:end="31:56">sizeof<argument_list pos:start="31:40" pos:end="31:56">(<argument pos:start="31:41" pos:end="31:55"><expr pos:start="31:41" pos:end="31:55"><name pos:start="31:41" pos:end="31:55"><name pos:start="31:41" pos:end="31:43">asf</name><operator pos:start="31:44" pos:end="31:45">-&gt;</operator><name pos:start="31:46" pos:end="31:55">asfid2avid</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="35:5" pos:end="37:52">for <control pos:start="35:9" pos:end="35:27">(<init pos:start="35:10" pos:end="35:15"><expr pos:start="35:10" pos:end="35:14"><name pos:start="35:10" pos:end="35:10">i</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <literal type="number" pos:start="35:14" pos:end="35:14">0</literal></expr>;</init> <condition pos:start="35:17" pos:end="35:22"><expr pos:start="35:17" pos:end="35:21"><name pos:start="35:17" pos:end="35:17">i</name><operator pos:start="35:18" pos:end="35:18">&lt;</operator><literal type="number" pos:start="35:19" pos:end="35:21">128</literal></expr>;</condition> <incr pos:start="35:24" pos:end="35:26"><expr pos:start="35:24" pos:end="35:26"><name pos:start="35:24" pos:end="35:24">i</name><operator pos:start="35:25" pos:end="35:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="37:9" pos:end="37:52"><block_content pos:start="37:9" pos:end="37:52">

        <expr_stmt pos:start="37:9" pos:end="37:52"><expr pos:start="37:9" pos:end="37:51"><name pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:11">asf</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:20">streams</name><index pos:start="37:21" pos:end="37:23">[<expr pos:start="37:22" pos:end="37:22"><name pos:start="37:22" pos:end="37:22">i</name></expr>]</index></name><operator pos:start="37:24" pos:end="37:24">.</operator><name pos:start="37:25" pos:end="37:45">stream_language_index</name> <operator pos:start="37:47" pos:end="37:47">=</operator> <literal type="number" pos:start="37:49" pos:end="37:51">128</literal></expr>;</expr_stmt></block_content></block></for> <comment type="line" pos:start="37:54" pos:end="37:99">// invalid stream index means no language info</comment>



    <for pos:start="41:5" pos:end="209:5">for <control pos:start="41:9" pos:end="41:12">(<init pos:start="41:10" pos:end="41:10">;</init><condition pos:start="41:11" pos:end="41:11">;</condition><incr/>)</control> <block pos:start="41:14" pos:end="209:5">{<block_content pos:start="43:9" pos:end="207:46">

        <decl_stmt pos:start="43:9" pos:end="43:38"><decl pos:start="43:9" pos:end="43:37"><type pos:start="43:9" pos:end="43:16"><name pos:start="43:9" pos:end="43:16">uint64_t</name></type> <name pos:start="43:18" pos:end="43:21">gpos</name> <init pos:start="43:23" pos:end="43:37">= <expr pos:start="43:25" pos:end="43:37"><call pos:start="43:25" pos:end="43:37"><name pos:start="43:25" pos:end="43:33">avio_tell</name><argument_list pos:start="43:34" pos:end="43:37">(<argument pos:start="43:35" pos:end="43:36"><expr pos:start="43:35" pos:end="43:36"><name pos:start="43:35" pos:end="43:36">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:28"><expr pos:start="45:9" pos:end="45:27"><call pos:start="45:9" pos:end="45:27"><name pos:start="45:9" pos:end="45:19">ff_get_guid</name><argument_list pos:start="45:20" pos:end="45:27">(<argument pos:start="45:21" pos:end="45:22"><expr pos:start="45:21" pos:end="45:22"><name pos:start="45:21" pos:end="45:22">pb</name></expr></argument>, <argument pos:start="45:25" pos:end="45:26"><expr pos:start="45:25" pos:end="45:26"><operator pos:start="45:25" pos:end="45:25">&amp;</operator><name pos:start="45:26" pos:end="45:26">g</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:30"><expr pos:start="47:9" pos:end="47:29"><name pos:start="47:9" pos:end="47:13">gsize</name> <operator pos:start="47:15" pos:end="47:15">=</operator> <call pos:start="47:17" pos:end="47:29"><name pos:start="47:17" pos:end="47:25">avio_rl64</name><argument_list pos:start="47:26" pos:end="47:29">(<argument pos:start="47:27" pos:end="47:28"><expr pos:start="47:27" pos:end="47:28"><name pos:start="47:27" pos:end="47:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:23"><expr pos:start="49:9" pos:end="49:22"><call pos:start="49:9" pos:end="49:22"><name pos:start="49:9" pos:end="49:18">print_guid</name><argument_list pos:start="49:19" pos:end="49:22">(<argument pos:start="49:20" pos:end="49:21"><expr pos:start="49:20" pos:end="49:21"><operator pos:start="49:20" pos:end="49:20">&amp;</operator><name pos:start="49:21" pos:end="49:21">g</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="51:9" pos:end="69:9"><if pos:start="51:9" pos:end="69:9">if <condition pos:start="51:12" pos:end="51:49">(<expr pos:start="51:13" pos:end="51:48"><operator pos:start="51:13" pos:end="51:13">!</operator><call pos:start="51:14" pos:end="51:48"><name pos:start="51:14" pos:end="51:23">ff_guidcmp</name><argument_list pos:start="51:24" pos:end="51:48">(<argument pos:start="51:25" pos:end="51:26"><expr pos:start="51:25" pos:end="51:26"><operator pos:start="51:25" pos:end="51:25">&amp;</operator><name pos:start="51:26" pos:end="51:26">g</name></expr></argument>, <argument pos:start="51:29" pos:end="51:47"><expr pos:start="51:29" pos:end="51:47"><operator pos:start="51:29" pos:end="51:29">&amp;</operator><name pos:start="51:30" pos:end="51:47">ff_asf_data_header</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:51" pos:end="69:9">{<block_content pos:start="53:13" pos:end="67:18">

            <expr_stmt pos:start="53:13" pos:end="53:52"><expr pos:start="53:13" pos:end="53:51"><name pos:start="53:13" pos:end="53:35"><name pos:start="53:13" pos:end="53:15">asf</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:35">data_object_offset</name></name> <operator pos:start="53:37" pos:end="53:37">=</operator> <call pos:start="53:39" pos:end="53:51"><name pos:start="53:39" pos:end="53:47">avio_tell</name><argument_list pos:start="53:48" pos:end="53:51">(<argument pos:start="53:49" pos:end="53:50"><expr pos:start="53:49" pos:end="53:50"><name pos:start="53:49" pos:end="53:50">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="55:13" pos:end="57:57">/* If not streaming, gsize is not unlimited (how?),

             * and there is enough space in the file.. */</comment>

            <if_stmt pos:start="59:13" pos:end="65:53"><if pos:start="59:13" pos:end="61:51">if <condition pos:start="59:16" pos:end="59:57">(<expr pos:start="59:17" pos:end="59:56"><operator pos:start="59:17" pos:end="59:17">!</operator><operator pos:start="59:18" pos:end="59:18">(</operator><name pos:start="59:19" pos:end="59:32"><name pos:start="59:19" pos:end="59:21">asf</name><operator pos:start="59:22" pos:end="59:23">-&gt;</operator><name pos:start="59:24" pos:end="59:26">hdr</name><operator pos:start="59:27" pos:end="59:27">.</operator><name pos:start="59:28" pos:end="59:32">flags</name></name> <operator pos:start="59:34" pos:end="59:34">&amp;</operator> <literal type="number" pos:start="59:36" pos:end="59:39">0x01</literal><operator pos:start="59:40" pos:end="59:40">)</operator> <operator pos:start="59:42" pos:end="59:43">&amp;&amp;</operator> <name pos:start="59:45" pos:end="59:49">gsize</name> <operator pos:start="59:51" pos:end="59:52">&gt;=</operator> <literal type="number" pos:start="59:54" pos:end="59:56">100</literal></expr>)</condition><block type="pseudo" pos:start="61:17" pos:end="61:51"><block_content pos:start="61:17" pos:end="61:51">

                <expr_stmt pos:start="61:17" pos:end="61:51"><expr pos:start="61:17" pos:end="61:50"><name pos:start="61:17" pos:end="61:37"><name pos:start="61:17" pos:end="61:19">asf</name><operator pos:start="61:20" pos:end="61:21">-&gt;</operator><name pos:start="61:22" pos:end="61:37">data_object_size</name></name> <operator pos:start="61:39" pos:end="61:39">=</operator> <name pos:start="61:41" pos:end="61:45">gsize</name> <operator pos:start="61:47" pos:end="61:47">-</operator> <literal type="number" pos:start="61:49" pos:end="61:50">24</literal></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="63:13" pos:end="65:53">else<block type="pseudo" pos:start="65:17" pos:end="65:53"><block_content pos:start="65:17" pos:end="65:53">

                <expr_stmt pos:start="65:17" pos:end="65:53"><expr pos:start="65:17" pos:end="65:52"><name pos:start="65:17" pos:end="65:37"><name pos:start="65:17" pos:end="65:19">asf</name><operator pos:start="65:20" pos:end="65:21">-&gt;</operator><name pos:start="65:22" pos:end="65:37">data_object_size</name></name> <operator pos:start="65:39" pos:end="65:39">=</operator> <operator pos:start="65:41" pos:end="65:41">(</operator><name pos:start="65:42" pos:end="65:49">uint64_t</name><operator pos:start="65:50" pos:end="65:50">)</operator><operator pos:start="65:51" pos:end="65:51">-</operator><literal type="number" pos:start="65:52" pos:end="65:52">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <break pos:start="67:13" pos:end="67:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="71:9" pos:end="73:39"><if pos:start="71:9" pos:end="73:39">if <condition pos:start="71:12" pos:end="71:23">(<expr pos:start="71:13" pos:end="71:22"><name pos:start="71:13" pos:end="71:17">gsize</name> <operator pos:start="71:19" pos:end="71:19">&lt;</operator> <literal type="number" pos:start="71:21" pos:end="71:22">24</literal></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:39"><block_content pos:start="73:13" pos:end="73:39">

            <return pos:start="73:13" pos:end="73:39">return <expr pos:start="73:20" pos:end="73:38"><name pos:start="73:20" pos:end="73:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="75:9" pos:end="197:9"><if pos:start="75:9" pos:end="83:9">if <condition pos:start="75:12" pos:end="75:49">(<expr pos:start="75:13" pos:end="75:48"><operator pos:start="75:13" pos:end="75:13">!</operator><call pos:start="75:14" pos:end="75:48"><name pos:start="75:14" pos:end="75:23">ff_guidcmp</name><argument_list pos:start="75:24" pos:end="75:48">(<argument pos:start="75:25" pos:end="75:26"><expr pos:start="75:25" pos:end="75:26"><operator pos:start="75:25" pos:end="75:25">&amp;</operator><name pos:start="75:26" pos:end="75:26">g</name></expr></argument>, <argument pos:start="75:29" pos:end="75:47"><expr pos:start="75:29" pos:end="75:47"><operator pos:start="75:29" pos:end="75:29">&amp;</operator><name pos:start="75:30" pos:end="75:47">ff_asf_file_header</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="75:51" pos:end="83:9">{<block_content pos:start="77:13" pos:end="81:27">

            <decl_stmt pos:start="77:13" pos:end="77:57"><decl pos:start="77:13" pos:end="77:56"><type pos:start="77:13" pos:end="77:15"><name pos:start="77:13" pos:end="77:15">int</name></type> <name pos:start="77:17" pos:end="77:19">ret</name> <init pos:start="77:21" pos:end="77:56">= <expr pos:start="77:23" pos:end="77:56"><call pos:start="77:23" pos:end="77:56"><name pos:start="77:23" pos:end="77:46">asf_read_file_properties</name><argument_list pos:start="77:47" pos:end="77:56">(<argument pos:start="77:48" pos:end="77:48"><expr pos:start="77:48" pos:end="77:48"><name pos:start="77:48" pos:end="77:48">s</name></expr></argument>, <argument pos:start="77:51" pos:end="77:55"><expr pos:start="77:51" pos:end="77:55"><name pos:start="77:51" pos:end="77:55">gsize</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="79:13" pos:end="81:27"><if pos:start="79:13" pos:end="81:27">if <condition pos:start="79:16" pos:end="79:24">(<expr pos:start="79:17" pos:end="79:23"><name pos:start="79:17" pos:end="79:19">ret</name> <operator pos:start="79:21" pos:end="79:21">&lt;</operator> <literal type="number" pos:start="79:23" pos:end="79:23">0</literal></expr>)</condition><block type="pseudo" pos:start="81:17" pos:end="81:27"><block_content pos:start="81:17" pos:end="81:27">

                <return pos:start="81:17" pos:end="81:27">return <expr pos:start="81:24" pos:end="81:26"><name pos:start="81:24" pos:end="81:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="83:11" pos:end="91:9">else if <condition pos:start="83:19" pos:end="83:58">(<expr pos:start="83:20" pos:end="83:57"><operator pos:start="83:20" pos:end="83:20">!</operator><call pos:start="83:21" pos:end="83:57"><name pos:start="83:21" pos:end="83:30">ff_guidcmp</name><argument_list pos:start="83:31" pos:end="83:57">(<argument pos:start="83:32" pos:end="83:33"><expr pos:start="83:32" pos:end="83:33"><operator pos:start="83:32" pos:end="83:32">&amp;</operator><name pos:start="83:33" pos:end="83:33">g</name></expr></argument>, <argument pos:start="83:36" pos:end="83:56"><expr pos:start="83:36" pos:end="83:56"><operator pos:start="83:36" pos:end="83:36">&amp;</operator><name pos:start="83:37" pos:end="83:56">ff_asf_stream_header</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="83:60" pos:end="91:9">{<block_content pos:start="85:13" pos:end="89:27">

            <decl_stmt pos:start="85:13" pos:end="85:59"><decl pos:start="85:13" pos:end="85:58"><type pos:start="85:13" pos:end="85:15"><name pos:start="85:13" pos:end="85:15">int</name></type> <name pos:start="85:17" pos:end="85:19">ret</name> <init pos:start="85:21" pos:end="85:58">= <expr pos:start="85:23" pos:end="85:58"><call pos:start="85:23" pos:end="85:58"><name pos:start="85:23" pos:end="85:48">asf_read_stream_properties</name><argument_list pos:start="85:49" pos:end="85:58">(<argument pos:start="85:50" pos:end="85:50"><expr pos:start="85:50" pos:end="85:50"><name pos:start="85:50" pos:end="85:50">s</name></expr></argument>, <argument pos:start="85:53" pos:end="85:57"><expr pos:start="85:53" pos:end="85:57"><name pos:start="85:53" pos:end="85:57">gsize</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="87:13" pos:end="89:27"><if pos:start="87:13" pos:end="89:27">if <condition pos:start="87:16" pos:end="87:24">(<expr pos:start="87:17" pos:end="87:23"><name pos:start="87:17" pos:end="87:19">ret</name> <operator pos:start="87:21" pos:end="87:21">&lt;</operator> <literal type="number" pos:start="87:23" pos:end="87:23">0</literal></expr>)</condition><block type="pseudo" pos:start="89:17" pos:end="89:27"><block_content pos:start="89:17" pos:end="89:27">

                <return pos:start="89:17" pos:end="89:27">return <expr pos:start="89:24" pos:end="89:26"><name pos:start="89:24" pos:end="89:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="91:11" pos:end="95:9">else if <condition pos:start="91:19" pos:end="91:59">(<expr pos:start="91:20" pos:end="91:58"><operator pos:start="91:20" pos:end="91:20">!</operator><call pos:start="91:21" pos:end="91:58"><name pos:start="91:21" pos:end="91:30">ff_guidcmp</name><argument_list pos:start="91:31" pos:end="91:58">(<argument pos:start="91:32" pos:end="91:33"><expr pos:start="91:32" pos:end="91:33"><operator pos:start="91:32" pos:end="91:32">&amp;</operator><name pos:start="91:33" pos:end="91:33">g</name></expr></argument>, <argument pos:start="91:36" pos:end="91:57"><expr pos:start="91:36" pos:end="91:57"><operator pos:start="91:36" pos:end="91:36">&amp;</operator><name pos:start="91:37" pos:end="91:57">ff_asf_comment_header</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="91:61" pos:end="95:9">{<block_content pos:start="93:13" pos:end="93:44">

            <expr_stmt pos:start="93:13" pos:end="93:44"><expr pos:start="93:13" pos:end="93:43"><call pos:start="93:13" pos:end="93:43"><name pos:start="93:13" pos:end="93:33">asf_read_content_desc</name><argument_list pos:start="93:34" pos:end="93:43">(<argument pos:start="93:35" pos:end="93:35"><expr pos:start="93:35" pos:end="93:35"><name pos:start="93:35" pos:end="93:35">s</name></expr></argument>, <argument pos:start="93:38" pos:end="93:42"><expr pos:start="93:38" pos:end="93:42"><name pos:start="93:38" pos:end="93:42">gsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="95:11" pos:end="99:9">else if <condition pos:start="95:19" pos:end="95:58">(<expr pos:start="95:20" pos:end="95:57"><operator pos:start="95:20" pos:end="95:20">!</operator><call pos:start="95:21" pos:end="95:57"><name pos:start="95:21" pos:end="95:30">ff_guidcmp</name><argument_list pos:start="95:31" pos:end="95:57">(<argument pos:start="95:32" pos:end="95:33"><expr pos:start="95:32" pos:end="95:33"><operator pos:start="95:32" pos:end="95:32">&amp;</operator><name pos:start="95:33" pos:end="95:33">g</name></expr></argument>, <argument pos:start="95:36" pos:end="95:56"><expr pos:start="95:36" pos:end="95:56"><operator pos:start="95:36" pos:end="95:36">&amp;</operator><name pos:start="95:37" pos:end="95:56">ff_asf_language_guid</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="95:60" pos:end="99:9">{<block_content pos:start="97:13" pos:end="97:45">

            <expr_stmt pos:start="97:13" pos:end="97:45"><expr pos:start="97:13" pos:end="97:44"><call pos:start="97:13" pos:end="97:44"><name pos:start="97:13" pos:end="97:34">asf_read_language_list</name><argument_list pos:start="97:35" pos:end="97:44">(<argument pos:start="97:36" pos:end="97:36"><expr pos:start="97:36" pos:end="97:36"><name pos:start="97:36" pos:end="97:36">s</name></expr></argument>, <argument pos:start="97:39" pos:end="97:43"><expr pos:start="97:39" pos:end="97:43"><name pos:start="97:39" pos:end="97:43">gsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="99:11" pos:end="103:9">else if <condition pos:start="99:19" pos:end="99:68">(<expr pos:start="99:20" pos:end="99:67"><operator pos:start="99:20" pos:end="99:20">!</operator><call pos:start="99:21" pos:end="99:67"><name pos:start="99:21" pos:end="99:30">ff_guidcmp</name><argument_list pos:start="99:31" pos:end="99:67">(<argument pos:start="99:32" pos:end="99:33"><expr pos:start="99:32" pos:end="99:33"><operator pos:start="99:32" pos:end="99:32">&amp;</operator><name pos:start="99:33" pos:end="99:33">g</name></expr></argument>, <argument pos:start="99:36" pos:end="99:66"><expr pos:start="99:36" pos:end="99:66"><operator pos:start="99:36" pos:end="99:36">&amp;</operator><name pos:start="99:37" pos:end="99:66">ff_asf_extended_content_header</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="99:70" pos:end="103:9">{<block_content pos:start="101:13" pos:end="101:48">

            <expr_stmt pos:start="101:13" pos:end="101:48"><expr pos:start="101:13" pos:end="101:47"><call pos:start="101:13" pos:end="101:47"><name pos:start="101:13" pos:end="101:37">asf_read_ext_content_desc</name><argument_list pos:start="101:38" pos:end="101:47">(<argument pos:start="101:39" pos:end="101:39"><expr pos:start="101:39" pos:end="101:39"><name pos:start="101:39" pos:end="101:39">s</name></expr></argument>, <argument pos:start="101:42" pos:end="101:46"><expr pos:start="101:42" pos:end="101:46"><name pos:start="101:42" pos:end="101:46">gsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="103:11" pos:end="107:9">else if <condition pos:start="103:19" pos:end="103:60">(<expr pos:start="103:20" pos:end="103:59"><operator pos:start="103:20" pos:end="103:20">!</operator><call pos:start="103:21" pos:end="103:59"><name pos:start="103:21" pos:end="103:30">ff_guidcmp</name><argument_list pos:start="103:31" pos:end="103:59">(<argument pos:start="103:32" pos:end="103:33"><expr pos:start="103:32" pos:end="103:33"><operator pos:start="103:32" pos:end="103:32">&amp;</operator><name pos:start="103:33" pos:end="103:33">g</name></expr></argument>, <argument pos:start="103:36" pos:end="103:58"><expr pos:start="103:36" pos:end="103:58"><operator pos:start="103:36" pos:end="103:36">&amp;</operator><name pos:start="103:37" pos:end="103:58">ff_asf_metadata_header</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="103:62" pos:end="107:9">{<block_content pos:start="105:13" pos:end="105:40">

            <expr_stmt pos:start="105:13" pos:end="105:40"><expr pos:start="105:13" pos:end="105:39"><call pos:start="105:13" pos:end="105:39"><name pos:start="105:13" pos:end="105:29">asf_read_metadata</name><argument_list pos:start="105:30" pos:end="105:39">(<argument pos:start="105:31" pos:end="105:31"><expr pos:start="105:31" pos:end="105:31"><name pos:start="105:31" pos:end="105:31">s</name></expr></argument>, <argument pos:start="105:34" pos:end="105:38"><expr pos:start="105:34" pos:end="105:38"><name pos:start="105:34" pos:end="105:38">gsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="107:11" pos:end="111:9">else if <condition pos:start="107:19" pos:end="107:68">(<expr pos:start="107:20" pos:end="107:67"><operator pos:start="107:20" pos:end="107:20">!</operator><call pos:start="107:21" pos:end="107:67"><name pos:start="107:21" pos:end="107:30">ff_guidcmp</name><argument_list pos:start="107:31" pos:end="107:67">(<argument pos:start="107:32" pos:end="107:33"><expr pos:start="107:32" pos:end="107:33"><operator pos:start="107:32" pos:end="107:32">&amp;</operator><name pos:start="107:33" pos:end="107:33">g</name></expr></argument>, <argument pos:start="107:36" pos:end="107:66"><expr pos:start="107:36" pos:end="107:66"><operator pos:start="107:36" pos:end="107:36">&amp;</operator><name pos:start="107:37" pos:end="107:66">ff_asf_metadata_library_header</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="107:70" pos:end="111:9">{<block_content pos:start="109:13" pos:end="109:40">

            <expr_stmt pos:start="109:13" pos:end="109:40"><expr pos:start="109:13" pos:end="109:39"><call pos:start="109:13" pos:end="109:39"><name pos:start="109:13" pos:end="109:29">asf_read_metadata</name><argument_list pos:start="109:30" pos:end="109:39">(<argument pos:start="109:31" pos:end="109:31"><expr pos:start="109:31" pos:end="109:31"><name pos:start="109:31" pos:end="109:31">s</name></expr></argument>, <argument pos:start="109:34" pos:end="109:38"><expr pos:start="109:34" pos:end="109:38"><name pos:start="109:34" pos:end="109:38">gsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="111:11" pos:end="123:9">else if <condition pos:start="111:19" pos:end="111:62">(<expr pos:start="111:20" pos:end="111:61"><operator pos:start="111:20" pos:end="111:20">!</operator><call pos:start="111:21" pos:end="111:61"><name pos:start="111:21" pos:end="111:30">ff_guidcmp</name><argument_list pos:start="111:31" pos:end="111:61">(<argument pos:start="111:32" pos:end="111:33"><expr pos:start="111:32" pos:end="111:33"><operator pos:start="111:32" pos:end="111:32">&amp;</operator><name pos:start="111:33" pos:end="111:33">g</name></expr></argument>, <argument pos:start="111:36" pos:end="111:60"><expr pos:start="111:36" pos:end="111:60"><operator pos:start="111:36" pos:end="111:36">&amp;</operator><name pos:start="111:37" pos:end="111:60">ff_asf_ext_stream_header</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="111:64" pos:end="123:9">{<block_content pos:start="113:13" pos:end="121:21">

            <expr_stmt pos:start="113:13" pos:end="113:53"><expr pos:start="113:13" pos:end="113:52"><call pos:start="113:13" pos:end="113:52"><name pos:start="113:13" pos:end="113:42">asf_read_ext_stream_properties</name><argument_list pos:start="113:43" pos:end="113:52">(<argument pos:start="113:44" pos:end="113:44"><expr pos:start="113:44" pos:end="113:44"><name pos:start="113:44" pos:end="113:44">s</name></expr></argument>, <argument pos:start="113:47" pos:end="113:51"><expr pos:start="113:47" pos:end="113:51"><name pos:start="113:47" pos:end="113:51">gsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="line" pos:start="117:13" pos:end="117:75">// there could be a optional stream properties object to follow</comment>

            <comment type="line" pos:start="119:13" pos:end="119:55">// if so the next iteration will pick it up</comment>

            <continue pos:start="121:13" pos:end="121:21">continue;</continue>

        </block_content>}</block></if> <if type="elseif" pos:start="123:11" pos:end="131:9">else if <condition pos:start="123:19" pos:end="123:55">(<expr pos:start="123:20" pos:end="123:54"><operator pos:start="123:20" pos:end="123:20">!</operator><call pos:start="123:21" pos:end="123:54"><name pos:start="123:21" pos:end="123:30">ff_guidcmp</name><argument_list pos:start="123:31" pos:end="123:54">(<argument pos:start="123:32" pos:end="123:33"><expr pos:start="123:32" pos:end="123:33"><operator pos:start="123:32" pos:end="123:32">&amp;</operator><name pos:start="123:33" pos:end="123:33">g</name></expr></argument>, <argument pos:start="123:36" pos:end="123:53"><expr pos:start="123:36" pos:end="123:53"><operator pos:start="123:36" pos:end="123:36">&amp;</operator><name pos:start="123:37" pos:end="123:53">ff_asf_head1_guid</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="123:57" pos:end="131:9">{<block_content pos:start="125:13" pos:end="129:21">

            <expr_stmt pos:start="125:13" pos:end="125:32"><expr pos:start="125:13" pos:end="125:31"><call pos:start="125:13" pos:end="125:31"><name pos:start="125:13" pos:end="125:23">ff_get_guid</name><argument_list pos:start="125:24" pos:end="125:31">(<argument pos:start="125:25" pos:end="125:26"><expr pos:start="125:25" pos:end="125:26"><name pos:start="125:25" pos:end="125:26">pb</name></expr></argument>, <argument pos:start="125:29" pos:end="125:30"><expr pos:start="125:29" pos:end="125:30"><operator pos:start="125:29" pos:end="125:29">&amp;</operator><name pos:start="125:30" pos:end="125:30">g</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:29"><expr pos:start="127:13" pos:end="127:28"><call pos:start="127:13" pos:end="127:28"><name pos:start="127:13" pos:end="127:21">avio_skip</name><argument_list pos:start="127:22" pos:end="127:28">(<argument pos:start="127:23" pos:end="127:24"><expr pos:start="127:23" pos:end="127:24"><name pos:start="127:23" pos:end="127:24">pb</name></expr></argument>, <argument pos:start="127:27" pos:end="127:27"><expr pos:start="127:27" pos:end="127:27"><literal type="number" pos:start="127:27" pos:end="127:27">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="129:13" pos:end="129:21">continue;</continue>

        </block_content>}</block></if> <if type="elseif" pos:start="131:11" pos:end="135:9">else if <condition pos:start="131:19" pos:end="131:58">(<expr pos:start="131:20" pos:end="131:57"><operator pos:start="131:20" pos:end="131:20">!</operator><call pos:start="131:21" pos:end="131:57"><name pos:start="131:21" pos:end="131:30">ff_guidcmp</name><argument_list pos:start="131:31" pos:end="131:57">(<argument pos:start="131:32" pos:end="131:33"><expr pos:start="131:32" pos:end="131:33"><operator pos:start="131:32" pos:end="131:32">&amp;</operator><name pos:start="131:33" pos:end="131:33">g</name></expr></argument>, <argument pos:start="131:36" pos:end="131:56"><expr pos:start="131:36" pos:end="131:56"><operator pos:start="131:36" pos:end="131:36">&amp;</operator><name pos:start="131:37" pos:end="131:56">ff_asf_marker_header</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="131:60" pos:end="135:9">{<block_content pos:start="133:13" pos:end="133:38">

            <expr_stmt pos:start="133:13" pos:end="133:38"><expr pos:start="133:13" pos:end="133:37"><call pos:start="133:13" pos:end="133:37"><name pos:start="133:13" pos:end="133:27">asf_read_marker</name><argument_list pos:start="133:28" pos:end="133:37">(<argument pos:start="133:29" pos:end="133:29"><expr pos:start="133:29" pos:end="133:29"><name pos:start="133:29" pos:end="133:29">s</name></expr></argument>, <argument pos:start="133:32" pos:end="133:36"><expr pos:start="133:32" pos:end="133:36"><name pos:start="133:32" pos:end="133:36">gsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="135:11" pos:end="139:9">else if <condition pos:start="135:19" pos:end="135:33">(<expr pos:start="135:20" pos:end="135:32"><call pos:start="135:20" pos:end="135:32"><name pos:start="135:20" pos:end="135:28">avio_feof</name><argument_list pos:start="135:29" pos:end="135:32">(<argument pos:start="135:30" pos:end="135:31"><expr pos:start="135:30" pos:end="135:31"><name pos:start="135:30" pos:end="135:31">pb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="135:35" pos:end="139:9">{<block_content pos:start="137:13" pos:end="137:31">

            <return pos:start="137:13" pos:end="137:31">return <expr pos:start="137:20" pos:end="137:30"><name pos:start="137:20" pos:end="137:30">AVERROR_EOF</name></expr>;</return>

        </block_content>}</block></if> <else pos:start="139:11" pos:end="197:9">else <block pos:start="139:16" pos:end="197:9">{<block_content pos:start="141:13" pos:end="195:13">

            <if_stmt pos:start="141:13" pos:end="195:13"><if pos:start="141:13" pos:end="195:13">if <condition pos:start="141:16" pos:end="141:27">(<expr pos:start="141:17" pos:end="141:26"><operator pos:start="141:17" pos:end="141:17">!</operator><name pos:start="141:18" pos:end="141:26"><name pos:start="141:18" pos:end="141:18">s</name><operator pos:start="141:19" pos:end="141:20">-&gt;</operator><name pos:start="141:21" pos:end="141:26">keylen</name></name></expr>)</condition> <block pos:start="141:29" pos:end="195:13">{<block_content pos:start="143:17" pos:end="193:17">

                <if_stmt pos:start="143:17" pos:end="193:17"><if pos:start="143:17" pos:end="181:17">if <condition pos:start="143:20" pos:end="143:64">(<expr pos:start="143:21" pos:end="143:63"><operator pos:start="143:21" pos:end="143:21">!</operator><call pos:start="143:22" pos:end="143:63"><name pos:start="143:22" pos:end="143:31">ff_guidcmp</name><argument_list pos:start="143:32" pos:end="143:63">(<argument pos:start="143:33" pos:end="143:34"><expr pos:start="143:33" pos:end="143:34"><operator pos:start="143:33" pos:end="143:33">&amp;</operator><name pos:start="143:34" pos:end="143:34">g</name></expr></argument>, <argument pos:start="143:37" pos:end="143:62"><expr pos:start="143:37" pos:end="143:62"><operator pos:start="143:37" pos:end="143:37">&amp;</operator><name pos:start="143:38" pos:end="143:62">ff_asf_content_encryption</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="143:66" pos:end="181:17">{<block_content pos:start="145:21" pos:end="179:63">

                    <decl_stmt pos:start="145:21" pos:end="145:37"><decl pos:start="145:21" pos:end="145:36"><type pos:start="145:21" pos:end="145:32"><name pos:start="145:21" pos:end="145:28">unsigned</name> <name pos:start="145:30" pos:end="145:32">int</name></type> <name pos:start="145:34" pos:end="145:36">len</name></decl>;</decl_stmt>

                    <decl_stmt pos:start="147:21" pos:end="147:28"><decl pos:start="147:21" pos:end="147:27"><type pos:start="147:21" pos:end="147:23"><name pos:start="147:21" pos:end="147:23">int</name></type> <name pos:start="147:25" pos:end="147:27">ret</name></decl>;</decl_stmt>

                    <decl_stmt pos:start="149:21" pos:end="149:33"><decl pos:start="149:21" pos:end="149:32"><type pos:start="149:21" pos:end="149:28"><name pos:start="149:21" pos:end="149:28">AVPacket</name></type> <name pos:start="149:30" pos:end="149:32">pkt</name></decl>;</decl_stmt>

                    <expr_stmt pos:start="151:21" pos:end="153:90"><expr pos:start="151:21" pos:end="153:89"><call pos:start="151:21" pos:end="153:89"><name pos:start="151:21" pos:end="151:26">av_log</name><argument_list pos:start="151:27" pos:end="153:89">(<argument pos:start="151:28" pos:end="151:28"><expr pos:start="151:28" pos:end="151:28"><name pos:start="151:28" pos:end="151:28">s</name></expr></argument>, <argument pos:start="151:31" pos:end="151:44"><expr pos:start="151:31" pos:end="151:44"><name pos:start="151:31" pos:end="151:44">AV_LOG_WARNING</name></expr></argument>,

                           <argument pos:start="153:28" pos:end="153:88"><expr pos:start="153:28" pos:end="153:88"><literal type="string" pos:start="153:28" pos:end="153:88">"DRM protected stream detected, decoding will likely fail!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="155:21" pos:end="155:39"><expr pos:start="155:21" pos:end="155:38"><name pos:start="155:21" pos:end="155:23">len</name><operator pos:start="155:24" pos:end="155:24">=</operator> <call pos:start="155:26" pos:end="155:38"><name pos:start="155:26" pos:end="155:34">avio_rl32</name><argument_list pos:start="155:35" pos:end="155:38">(<argument pos:start="155:36" pos:end="155:37"><expr pos:start="155:36" pos:end="155:37"><name pos:start="155:36" pos:end="155:37">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="157:21" pos:end="157:62"><expr pos:start="157:21" pos:end="157:61"><call pos:start="157:21" pos:end="157:61"><name pos:start="157:21" pos:end="157:26">av_log</name><argument_list pos:start="157:27" pos:end="157:61">(<argument pos:start="157:28" pos:end="157:28"><expr pos:start="157:28" pos:end="157:28"><name pos:start="157:28" pos:end="157:28">s</name></expr></argument>, <argument pos:start="157:31" pos:end="157:42"><expr pos:start="157:31" pos:end="157:42"><name pos:start="157:31" pos:end="157:42">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="157:45" pos:end="157:60"><expr pos:start="157:45" pos:end="157:60"><literal type="string" pos:start="157:45" pos:end="157:60">"Secret data:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <if_stmt pos:start="161:21" pos:end="163:35"><if pos:start="161:21" pos:end="163:35">if <condition pos:start="161:24" pos:end="161:65">(<expr pos:start="161:25" pos:end="161:64"><operator pos:start="161:25" pos:end="161:25">(</operator><name pos:start="161:26" pos:end="161:28">ret</name> <operator pos:start="161:30" pos:end="161:30">=</operator> <call pos:start="161:32" pos:end="161:59"><name pos:start="161:32" pos:end="161:44">av_get_packet</name><argument_list pos:start="161:45" pos:end="161:59">(<argument pos:start="161:46" pos:end="161:47"><expr pos:start="161:46" pos:end="161:47"><name pos:start="161:46" pos:end="161:47">pb</name></expr></argument>, <argument pos:start="161:50" pos:end="161:53"><expr pos:start="161:50" pos:end="161:53"><operator pos:start="161:50" pos:end="161:50">&amp;</operator><name pos:start="161:51" pos:end="161:53">pkt</name></expr></argument>, <argument pos:start="161:56" pos:end="161:58"><expr pos:start="161:56" pos:end="161:58"><name pos:start="161:56" pos:end="161:58">len</name></expr></argument>)</argument_list></call><operator pos:start="161:60" pos:end="161:60">)</operator> <operator pos:start="161:62" pos:end="161:62">&lt;</operator> <literal type="number" pos:start="161:64" pos:end="161:64">0</literal></expr>)</condition><block type="pseudo" pos:start="163:25" pos:end="163:35"><block_content pos:start="163:25" pos:end="163:35">

                        <return pos:start="163:25" pos:end="163:35">return <expr pos:start="163:32" pos:end="163:34"><name pos:start="163:32" pos:end="163:34">ret</name></expr>;</return></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="165:21" pos:end="165:73"><expr pos:start="165:21" pos:end="165:72"><call pos:start="165:21" pos:end="165:72"><name pos:start="165:21" pos:end="165:35">av_hex_dump_log</name><argument_list pos:start="165:36" pos:end="165:72">(<argument pos:start="165:37" pos:end="165:37"><expr pos:start="165:37" pos:end="165:37"><name pos:start="165:37" pos:end="165:37">s</name></expr></argument>, <argument pos:start="165:40" pos:end="165:51"><expr pos:start="165:40" pos:end="165:51"><name pos:start="165:40" pos:end="165:51">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="165:54" pos:end="165:61"><expr pos:start="165:54" pos:end="165:61"><name pos:start="165:54" pos:end="165:61"><name pos:start="165:54" pos:end="165:56">pkt</name><operator pos:start="165:57" pos:end="165:57">.</operator><name pos:start="165:58" pos:end="165:61">data</name></name></expr></argument>, <argument pos:start="165:64" pos:end="165:71"><expr pos:start="165:64" pos:end="165:71"><name pos:start="165:64" pos:end="165:71"><name pos:start="165:64" pos:end="165:66">pkt</name><operator pos:start="165:67" pos:end="165:67">.</operator><name pos:start="165:68" pos:end="165:71">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="167:21" pos:end="167:41"><expr pos:start="167:21" pos:end="167:40"><call pos:start="167:21" pos:end="167:40"><name pos:start="167:21" pos:end="167:34">av_free_packet</name><argument_list pos:start="167:35" pos:end="167:40">(<argument pos:start="167:36" pos:end="167:39"><expr pos:start="167:36" pos:end="167:39"><operator pos:start="167:36" pos:end="167:36">&amp;</operator><name pos:start="167:37" pos:end="167:39">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="169:21" pos:end="169:39"><expr pos:start="169:21" pos:end="169:38"><name pos:start="169:21" pos:end="169:23">len</name><operator pos:start="169:24" pos:end="169:24">=</operator> <call pos:start="169:26" pos:end="169:38"><name pos:start="169:26" pos:end="169:34">avio_rl32</name><argument_list pos:start="169:35" pos:end="169:38">(<argument pos:start="169:36" pos:end="169:37"><expr pos:start="169:36" pos:end="169:37"><name pos:start="169:36" pos:end="169:37">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="171:21" pos:end="171:67"><expr pos:start="171:21" pos:end="171:66"><call pos:start="171:21" pos:end="171:66"><name pos:start="171:21" pos:end="171:27">get_tag</name><argument_list pos:start="171:28" pos:end="171:66">(<argument pos:start="171:29" pos:end="171:29"><expr pos:start="171:29" pos:end="171:29"><name pos:start="171:29" pos:end="171:29">s</name></expr></argument>, <argument pos:start="171:32" pos:end="171:52"><expr pos:start="171:32" pos:end="171:52"><literal type="string" pos:start="171:32" pos:end="171:52">"ASF_Protection_Type"</literal></expr></argument>, <argument pos:start="171:55" pos:end="171:56"><expr pos:start="171:55" pos:end="171:56"><operator pos:start="171:55" pos:end="171:55">-</operator><literal type="number" pos:start="171:56" pos:end="171:56">1</literal></expr></argument>, <argument pos:start="171:59" pos:end="171:61"><expr pos:start="171:59" pos:end="171:61"><name pos:start="171:59" pos:end="171:61">len</name></expr></argument>, <argument pos:start="171:64" pos:end="171:65"><expr pos:start="171:64" pos:end="171:65"><literal type="number" pos:start="171:64" pos:end="171:65">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="173:21" pos:end="173:39"><expr pos:start="173:21" pos:end="173:38"><name pos:start="173:21" pos:end="173:23">len</name><operator pos:start="173:24" pos:end="173:24">=</operator> <call pos:start="173:26" pos:end="173:38"><name pos:start="173:26" pos:end="173:34">avio_rl32</name><argument_list pos:start="173:35" pos:end="173:38">(<argument pos:start="173:36" pos:end="173:37"><expr pos:start="173:36" pos:end="173:37"><name pos:start="173:36" pos:end="173:37">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="175:21" pos:end="175:58"><expr pos:start="175:21" pos:end="175:57"><call pos:start="175:21" pos:end="175:57"><name pos:start="175:21" pos:end="175:27">get_tag</name><argument_list pos:start="175:28" pos:end="175:57">(<argument pos:start="175:29" pos:end="175:29"><expr pos:start="175:29" pos:end="175:29"><name pos:start="175:29" pos:end="175:29">s</name></expr></argument>, <argument pos:start="175:32" pos:end="175:43"><expr pos:start="175:32" pos:end="175:43"><literal type="string" pos:start="175:32" pos:end="175:43">"ASF_Key_ID"</literal></expr></argument>, <argument pos:start="175:46" pos:end="175:47"><expr pos:start="175:46" pos:end="175:47"><operator pos:start="175:46" pos:end="175:46">-</operator><literal type="number" pos:start="175:47" pos:end="175:47">1</literal></expr></argument>, <argument pos:start="175:50" pos:end="175:52"><expr pos:start="175:50" pos:end="175:52"><name pos:start="175:50" pos:end="175:52">len</name></expr></argument>, <argument pos:start="175:55" pos:end="175:56"><expr pos:start="175:55" pos:end="175:56"><literal type="number" pos:start="175:55" pos:end="175:56">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="177:21" pos:end="177:39"><expr pos:start="177:21" pos:end="177:38"><name pos:start="177:21" pos:end="177:23">len</name><operator pos:start="177:24" pos:end="177:24">=</operator> <call pos:start="177:26" pos:end="177:38"><name pos:start="177:26" pos:end="177:34">avio_rl32</name><argument_list pos:start="177:35" pos:end="177:38">(<argument pos:start="177:36" pos:end="177:37"><expr pos:start="177:36" pos:end="177:37"><name pos:start="177:36" pos:end="177:37">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="179:21" pos:end="179:63"><expr pos:start="179:21" pos:end="179:62"><call pos:start="179:21" pos:end="179:62"><name pos:start="179:21" pos:end="179:27">get_tag</name><argument_list pos:start="179:28" pos:end="179:62">(<argument pos:start="179:29" pos:end="179:29"><expr pos:start="179:29" pos:end="179:29"><name pos:start="179:29" pos:end="179:29">s</name></expr></argument>, <argument pos:start="179:32" pos:end="179:48"><expr pos:start="179:32" pos:end="179:48"><literal type="string" pos:start="179:32" pos:end="179:48">"ASF_License_URL"</literal></expr></argument>, <argument pos:start="179:51" pos:end="179:52"><expr pos:start="179:51" pos:end="179:52"><operator pos:start="179:51" pos:end="179:51">-</operator><literal type="number" pos:start="179:52" pos:end="179:52">1</literal></expr></argument>, <argument pos:start="179:55" pos:end="179:57"><expr pos:start="179:55" pos:end="179:57"><name pos:start="179:55" pos:end="179:57">len</name></expr></argument>, <argument pos:start="179:60" pos:end="179:61"><expr pos:start="179:60" pos:end="179:61"><literal type="number" pos:start="179:60" pos:end="179:61">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="181:19" pos:end="189:17">else if <condition pos:start="181:27" pos:end="181:75">(<expr pos:start="181:28" pos:end="181:74"><operator pos:start="181:28" pos:end="181:28">!</operator><call pos:start="181:29" pos:end="181:74"><name pos:start="181:29" pos:end="181:38">ff_guidcmp</name><argument_list pos:start="181:39" pos:end="181:74">(<argument pos:start="181:40" pos:end="181:41"><expr pos:start="181:40" pos:end="181:41"><operator pos:start="181:40" pos:end="181:40">&amp;</operator><name pos:start="181:41" pos:end="181:41">g</name></expr></argument>, <argument pos:start="181:44" pos:end="181:73"><expr pos:start="181:44" pos:end="181:73"><operator pos:start="181:44" pos:end="181:44">&amp;</operator><name pos:start="181:45" pos:end="181:73">ff_asf_ext_content_encryption</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="181:77" pos:end="189:17">{<block_content pos:start="183:21" pos:end="187:98">

                    <expr_stmt pos:start="183:21" pos:end="185:94"><expr pos:start="183:21" pos:end="185:93"><call pos:start="183:21" pos:end="185:93"><name pos:start="183:21" pos:end="183:26">av_log</name><argument_list pos:start="183:27" pos:end="185:93">(<argument pos:start="183:28" pos:end="183:28"><expr pos:start="183:28" pos:end="183:28"><name pos:start="183:28" pos:end="183:28">s</name></expr></argument>, <argument pos:start="183:31" pos:end="183:44"><expr pos:start="183:31" pos:end="183:44"><name pos:start="183:31" pos:end="183:44">AV_LOG_WARNING</name></expr></argument>,

                           <argument pos:start="185:28" pos:end="185:92"><expr pos:start="185:28" pos:end="185:92"><literal type="string" pos:start="185:28" pos:end="185:92">"Ext DRM protected stream detected, decoding will likely fail!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="187:21" pos:end="187:98"><expr pos:start="187:21" pos:end="187:97"><call pos:start="187:21" pos:end="187:97"><name pos:start="187:21" pos:end="187:31">av_dict_set</name><argument_list pos:start="187:32" pos:end="187:97">(<argument pos:start="187:33" pos:end="187:44"><expr pos:start="187:33" pos:end="187:44"><operator pos:start="187:33" pos:end="187:33">&amp;</operator><name pos:start="187:34" pos:end="187:44"><name pos:start="187:34" pos:end="187:34">s</name><operator pos:start="187:35" pos:end="187:36">-&gt;</operator><name pos:start="187:37" pos:end="187:44">metadata</name></name></expr></argument>, <argument pos:start="187:47" pos:end="187:58"><expr pos:start="187:47" pos:end="187:58"><literal type="string" pos:start="187:47" pos:end="187:58">"encryption"</literal></expr></argument>, <argument pos:start="187:61" pos:end="187:93"><expr pos:start="187:61" pos:end="187:93"><literal type="string" pos:start="187:61" pos:end="187:93">"ASF Extended Content Encryption"</literal></expr></argument>, <argument pos:start="187:96" pos:end="187:96"><expr pos:start="187:96" pos:end="187:96"><literal type="number" pos:start="187:96" pos:end="187:96">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="189:19" pos:end="193:17">else if <condition pos:start="189:27" pos:end="189:70">(<expr pos:start="189:28" pos:end="189:69"><operator pos:start="189:28" pos:end="189:28">!</operator><call pos:start="189:29" pos:end="189:69"><name pos:start="189:29" pos:end="189:38">ff_guidcmp</name><argument_list pos:start="189:39" pos:end="189:69">(<argument pos:start="189:40" pos:end="189:41"><expr pos:start="189:40" pos:end="189:41"><operator pos:start="189:40" pos:end="189:40">&amp;</operator><name pos:start="189:41" pos:end="189:41">g</name></expr></argument>, <argument pos:start="189:44" pos:end="189:68"><expr pos:start="189:44" pos:end="189:68"><operator pos:start="189:44" pos:end="189:44">&amp;</operator><name pos:start="189:45" pos:end="189:68">ff_asf_digital_signature</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="189:72" pos:end="193:17">{<block_content pos:start="191:21" pos:end="191:76">

                    <expr_stmt pos:start="191:21" pos:end="191:76"><expr pos:start="191:21" pos:end="191:75"><call pos:start="191:21" pos:end="191:75"><name pos:start="191:21" pos:end="191:26">av_log</name><argument_list pos:start="191:27" pos:end="191:75">(<argument pos:start="191:28" pos:end="191:28"><expr pos:start="191:28" pos:end="191:28"><name pos:start="191:28" pos:end="191:28">s</name></expr></argument>, <argument pos:start="191:31" pos:end="191:41"><expr pos:start="191:31" pos:end="191:41"><name pos:start="191:31" pos:end="191:41">AV_LOG_INFO</name></expr></argument>, <argument pos:start="191:44" pos:end="191:74"><expr pos:start="191:44" pos:end="191:74"><literal type="string" pos:start="191:44" pos:end="191:74">"Digital signature detected!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="199:9" pos:end="205:48"><if pos:start="199:9" pos:end="205:48">if <condition pos:start="199:12" pos:end="199:42">(<expr pos:start="199:13" pos:end="199:41"><call pos:start="199:13" pos:end="199:25"><name pos:start="199:13" pos:end="199:21">avio_tell</name><argument_list pos:start="199:22" pos:end="199:25">(<argument pos:start="199:23" pos:end="199:24"><expr pos:start="199:23" pos:end="199:24"><name pos:start="199:23" pos:end="199:24">pb</name></expr></argument>)</argument_list></call> <operator pos:start="199:27" pos:end="199:28">!=</operator> <name pos:start="199:30" pos:end="199:33">gpos</name> <operator pos:start="199:35" pos:end="199:35">+</operator> <name pos:start="199:37" pos:end="199:41">gsize</name></expr>)</condition><block type="pseudo" pos:start="201:13" pos:end="205:48"><block_content pos:start="201:13" pos:end="205:48">

            <expr_stmt pos:start="201:13" pos:end="205:48"><expr pos:start="201:13" pos:end="205:47"><call pos:start="201:13" pos:end="205:47"><name pos:start="201:13" pos:end="201:18">av_log</name><argument_list pos:start="201:19" pos:end="205:47">(<argument pos:start="201:20" pos:end="201:20"><expr pos:start="201:20" pos:end="201:20"><name pos:start="201:20" pos:end="201:20">s</name></expr></argument>, <argument pos:start="201:23" pos:end="201:34"><expr pos:start="201:23" pos:end="201:34"><name pos:start="201:23" pos:end="201:34">AV_LOG_DEBUG</name></expr></argument>,

                   <argument pos:start="203:20" pos:end="203:69"><expr pos:start="203:20" pos:end="203:69"><literal type="string" pos:start="203:20" pos:end="203:44">"gpos mismatch our pos=%"</literal><name pos:start="203:45" pos:end="203:50">PRIu64</name><literal type="string" pos:start="203:51" pos:end="203:59">", end=%"</literal><name pos:start="203:60" pos:end="203:65">PRId64</name><literal type="string" pos:start="203:66" pos:end="203:69">"\n"</literal></expr></argument>,

                   <argument pos:start="205:20" pos:end="205:39"><expr pos:start="205:20" pos:end="205:39"><call pos:start="205:20" pos:end="205:32"><name pos:start="205:20" pos:end="205:28">avio_tell</name><argument_list pos:start="205:29" pos:end="205:32">(<argument pos:start="205:30" pos:end="205:31"><expr pos:start="205:30" pos:end="205:31"><name pos:start="205:30" pos:end="205:31">pb</name></expr></argument>)</argument_list></call> <operator pos:start="205:34" pos:end="205:34">-</operator> <name pos:start="205:36" pos:end="205:39">gpos</name></expr></argument>, <argument pos:start="205:42" pos:end="205:46"><expr pos:start="205:42" pos:end="205:46"><name pos:start="205:42" pos:end="205:46">gsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:46"><expr pos:start="207:9" pos:end="207:45"><call pos:start="207:9" pos:end="207:45"><name pos:start="207:9" pos:end="207:17">avio_seek</name><argument_list pos:start="207:18" pos:end="207:45">(<argument pos:start="207:19" pos:end="207:20"><expr pos:start="207:19" pos:end="207:20"><name pos:start="207:19" pos:end="207:20">pb</name></expr></argument>, <argument pos:start="207:23" pos:end="207:34"><expr pos:start="207:23" pos:end="207:34"><name pos:start="207:23" pos:end="207:26">gpos</name> <operator pos:start="207:28" pos:end="207:28">+</operator> <name pos:start="207:30" pos:end="207:34">gsize</name></expr></argument>, <argument pos:start="207:37" pos:end="207:44"><expr pos:start="207:37" pos:end="207:44"><name pos:start="207:37" pos:end="207:44">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="211:5" pos:end="211:24"><expr pos:start="211:5" pos:end="211:23"><call pos:start="211:5" pos:end="211:23"><name pos:start="211:5" pos:end="211:15">ff_get_guid</name><argument_list pos:start="211:16" pos:end="211:23">(<argument pos:start="211:17" pos:end="211:18"><expr pos:start="211:17" pos:end="211:18"><name pos:start="211:17" pos:end="211:18">pb</name></expr></argument>, <argument pos:start="211:21" pos:end="211:22"><expr pos:start="211:21" pos:end="211:22"><operator pos:start="211:21" pos:end="211:21">&amp;</operator><name pos:start="211:22" pos:end="211:22">g</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="213:5" pos:end="213:18"><expr pos:start="213:5" pos:end="213:17"><call pos:start="213:5" pos:end="213:17"><name pos:start="213:5" pos:end="213:13">avio_rl64</name><argument_list pos:start="213:14" pos:end="213:17">(<argument pos:start="213:15" pos:end="213:16"><expr pos:start="213:15" pos:end="213:16"><name pos:start="213:15" pos:end="213:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="215:5" pos:end="215:16"><expr pos:start="215:5" pos:end="215:15"><call pos:start="215:5" pos:end="215:15"><name pos:start="215:5" pos:end="215:11">avio_r8</name><argument_list pos:start="215:12" pos:end="215:15">(<argument pos:start="215:13" pos:end="215:14"><expr pos:start="215:13" pos:end="215:14"><name pos:start="215:13" pos:end="215:14">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="217:5" pos:end="217:16"><expr pos:start="217:5" pos:end="217:15"><call pos:start="217:5" pos:end="217:15"><name pos:start="217:5" pos:end="217:11">avio_r8</name><argument_list pos:start="217:12" pos:end="217:15">(<argument pos:start="217:13" pos:end="217:14"><expr pos:start="217:13" pos:end="217:14"><name pos:start="217:13" pos:end="217:14">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="219:5" pos:end="221:27"><if pos:start="219:5" pos:end="221:27">if <condition pos:start="219:8" pos:end="219:22">(<expr pos:start="219:9" pos:end="219:21"><call pos:start="219:9" pos:end="219:21"><name pos:start="219:9" pos:end="219:17">avio_feof</name><argument_list pos:start="219:18" pos:end="219:21">(<argument pos:start="219:19" pos:end="219:20"><expr pos:start="219:19" pos:end="219:20"><name pos:start="219:19" pos:end="219:20">pb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="221:9" pos:end="221:27"><block_content pos:start="221:9" pos:end="221:27">

        <return pos:start="221:9" pos:end="221:27">return <expr pos:start="221:16" pos:end="221:26"><name pos:start="221:16" pos:end="221:26">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="223:5" pos:end="223:42"><expr pos:start="223:5" pos:end="223:41"><name pos:start="223:5" pos:end="223:20"><name pos:start="223:5" pos:end="223:7">asf</name><operator pos:start="223:8" pos:end="223:9">-&gt;</operator><name pos:start="223:10" pos:end="223:20">data_offset</name></name>      <operator pos:start="223:27" pos:end="223:27">=</operator> <call pos:start="223:29" pos:end="223:41"><name pos:start="223:29" pos:end="223:37">avio_tell</name><argument_list pos:start="223:38" pos:end="223:41">(<argument pos:start="223:39" pos:end="223:40"><expr pos:start="223:39" pos:end="223:40"><name pos:start="223:39" pos:end="223:40">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="225:5" pos:end="225:30"><expr pos:start="225:5" pos:end="225:29"><name pos:start="225:5" pos:end="225:25"><name pos:start="225:5" pos:end="225:7">asf</name><operator pos:start="225:8" pos:end="225:9">-&gt;</operator><name pos:start="225:10" pos:end="225:25">packet_size_left</name></name> <operator pos:start="225:27" pos:end="225:27">=</operator> <literal type="number" pos:start="225:29" pos:end="225:29">0</literal></expr>;</expr_stmt>



    <for pos:start="229:5" pos:end="295:5">for <control pos:start="229:9" pos:end="229:29">(<init pos:start="229:10" pos:end="229:15"><expr pos:start="229:10" pos:end="229:14"><name pos:start="229:10" pos:end="229:10">i</name> <operator pos:start="229:12" pos:end="229:12">=</operator> <literal type="number" pos:start="229:14" pos:end="229:14">0</literal></expr>;</init> <condition pos:start="229:17" pos:end="229:24"><expr pos:start="229:17" pos:end="229:23"><name pos:start="229:17" pos:end="229:17">i</name> <operator pos:start="229:19" pos:end="229:19">&lt;</operator> <literal type="number" pos:start="229:21" pos:end="229:23">128</literal></expr>;</condition> <incr pos:start="229:26" pos:end="229:28"><expr pos:start="229:26" pos:end="229:28"><name pos:start="229:26" pos:end="229:26">i</name><operator pos:start="229:27" pos:end="229:28">++</operator></expr></incr>)</control> <block pos:start="229:31" pos:end="295:5">{<block_content pos:start="231:9" pos:end="293:9">

        <decl_stmt pos:start="231:9" pos:end="231:44"><decl pos:start="231:9" pos:end="231:43"><type pos:start="231:9" pos:end="231:11"><name pos:start="231:9" pos:end="231:11">int</name></type> <name pos:start="231:13" pos:end="231:22">stream_num</name> <init pos:start="231:24" pos:end="231:43">= <expr pos:start="231:26" pos:end="231:43"><name pos:start="231:26" pos:end="231:43"><name pos:start="231:26" pos:end="231:28">asf</name><operator pos:start="231:29" pos:end="231:30">-&gt;</operator><name pos:start="231:31" pos:end="231:40">asfid2avid</name><index pos:start="231:41" pos:end="231:43">[<expr pos:start="231:42" pos:end="231:42"><name pos:start="231:42" pos:end="231:42">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="233:9" pos:end="293:9"><if pos:start="233:9" pos:end="293:9">if <condition pos:start="233:12" pos:end="233:28">(<expr pos:start="233:13" pos:end="233:27"><name pos:start="233:13" pos:end="233:22">stream_num</name> <operator pos:start="233:24" pos:end="233:25">&gt;=</operator> <literal type="number" pos:start="233:27" pos:end="233:27">0</literal></expr>)</condition> <block pos:start="233:30" pos:end="293:9">{<block_content pos:start="235:13" pos:end="291:13">

            <decl_stmt pos:start="235:13" pos:end="235:50"><decl pos:start="235:13" pos:end="235:49"><type pos:start="235:13" pos:end="235:22"><name pos:start="235:13" pos:end="235:20">AVStream</name> <modifier pos:start="235:22" pos:end="235:22">*</modifier></type><name pos:start="235:23" pos:end="235:24">st</name> <init pos:start="235:26" pos:end="235:49">= <expr pos:start="235:28" pos:end="235:49"><name pos:start="235:28" pos:end="235:49"><name pos:start="235:28" pos:end="235:28">s</name><operator pos:start="235:29" pos:end="235:30">-&gt;</operator><name pos:start="235:31" pos:end="235:37">streams</name><index pos:start="235:38" pos:end="235:49">[<expr pos:start="235:39" pos:end="235:48"><name pos:start="235:39" pos:end="235:48">stream_num</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="237:13" pos:end="239:62"><if pos:start="237:13" pos:end="239:62">if <condition pos:start="237:16" pos:end="237:37">(<expr pos:start="237:17" pos:end="237:36"><operator pos:start="237:17" pos:end="237:17">!</operator><name pos:start="237:18" pos:end="237:36"><name pos:start="237:18" pos:end="237:19">st</name><operator pos:start="237:20" pos:end="237:21">-&gt;</operator><name pos:start="237:22" pos:end="237:26">codec</name><operator pos:start="237:27" pos:end="237:28">-&gt;</operator><name pos:start="237:29" pos:end="237:36">bit_rate</name></name></expr>)</condition><block type="pseudo" pos:start="239:17" pos:end="239:62"><block_content pos:start="239:17" pos:end="239:62">

                <expr_stmt pos:start="239:17" pos:end="239:62"><expr pos:start="239:17" pos:end="239:61"><name pos:start="239:17" pos:end="239:35"><name pos:start="239:17" pos:end="239:18">st</name><operator pos:start="239:19" pos:end="239:20">-&gt;</operator><name pos:start="239:21" pos:end="239:25">codec</name><operator pos:start="239:26" pos:end="239:27">-&gt;</operator><name pos:start="239:28" pos:end="239:35">bit_rate</name></name> <operator pos:start="239:37" pos:end="239:37">=</operator> <name pos:start="239:39" pos:end="239:61"><name pos:start="239:39" pos:end="239:41">asf</name><operator pos:start="239:42" pos:end="239:43">-&gt;</operator><name pos:start="239:44" pos:end="239:58">stream_bitrates</name><index pos:start="239:59" pos:end="239:61">[<expr pos:start="239:60" pos:end="239:60"><name pos:start="239:60" pos:end="239:60">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="241:13" pos:end="259:69"><if pos:start="241:13" pos:end="249:13">if <condition pos:start="241:16" pos:end="241:59">(<expr pos:start="241:17" pos:end="241:58"><name pos:start="241:17" pos:end="241:27"><name pos:start="241:17" pos:end="241:19">asf</name><operator pos:start="241:20" pos:end="241:21">-&gt;</operator><name pos:start="241:22" pos:end="241:24">dar</name><index pos:start="241:25" pos:end="241:27">[<expr pos:start="241:26" pos:end="241:26"><name pos:start="241:26" pos:end="241:26">i</name></expr>]</index></name><operator pos:start="241:28" pos:end="241:28">.</operator><name pos:start="241:29" pos:end="241:31">num</name> <operator pos:start="241:33" pos:end="241:33">&gt;</operator> <literal type="number" pos:start="241:35" pos:end="241:35">0</literal> <operator pos:start="241:37" pos:end="241:38">&amp;&amp;</operator> <name pos:start="241:40" pos:end="241:50"><name pos:start="241:40" pos:end="241:42">asf</name><operator pos:start="241:43" pos:end="241:44">-&gt;</operator><name pos:start="241:45" pos:end="241:47">dar</name><index pos:start="241:48" pos:end="241:50">[<expr pos:start="241:49" pos:end="241:49"><name pos:start="241:49" pos:end="241:49">i</name></expr>]</index></name><operator pos:start="241:51" pos:end="241:51">.</operator><name pos:start="241:52" pos:end="241:54">den</name> <operator pos:start="241:56" pos:end="241:56">&gt;</operator> <literal type="number" pos:start="241:58" pos:end="241:58">0</literal></expr>)</condition> <block pos:start="241:61" pos:end="249:13">{<block_content pos:start="243:17" pos:end="247:69">

                <expr_stmt pos:start="243:17" pos:end="247:69"><expr pos:start="243:17" pos:end="247:68"><call pos:start="243:17" pos:end="247:68"><name pos:start="243:17" pos:end="243:25">av_reduce</name><argument_list pos:start="243:26" pos:end="247:68">(<argument pos:start="243:27" pos:end="243:54"><expr pos:start="243:27" pos:end="243:54"><operator pos:start="243:27" pos:end="243:27">&amp;</operator><name pos:start="243:28" pos:end="243:54"><name pos:start="243:28" pos:end="243:29">st</name><operator pos:start="243:30" pos:end="243:31">-&gt;</operator><name pos:start="243:32" pos:end="243:50">sample_aspect_ratio</name><operator pos:start="243:51" pos:end="243:51">.</operator><name pos:start="243:52" pos:end="243:54">num</name></name></expr></argument>,

                          <argument pos:start="245:27" pos:end="245:54"><expr pos:start="245:27" pos:end="245:54"><operator pos:start="245:27" pos:end="245:27">&amp;</operator><name pos:start="245:28" pos:end="245:54"><name pos:start="245:28" pos:end="245:29">st</name><operator pos:start="245:30" pos:end="245:31">-&gt;</operator><name pos:start="245:32" pos:end="245:50">sample_aspect_ratio</name><operator pos:start="245:51" pos:end="245:51">.</operator><name pos:start="245:52" pos:end="245:54">den</name></name></expr></argument>,

                          <argument pos:start="247:27" pos:end="247:41"><expr pos:start="247:27" pos:end="247:41"><name pos:start="247:27" pos:end="247:37"><name pos:start="247:27" pos:end="247:29">asf</name><operator pos:start="247:30" pos:end="247:31">-&gt;</operator><name pos:start="247:32" pos:end="247:34">dar</name><index pos:start="247:35" pos:end="247:37">[<expr pos:start="247:36" pos:end="247:36"><name pos:start="247:36" pos:end="247:36">i</name></expr>]</index></name><operator pos:start="247:38" pos:end="247:38">.</operator><name pos:start="247:39" pos:end="247:41">num</name></expr></argument>, <argument pos:start="247:44" pos:end="247:58"><expr pos:start="247:44" pos:end="247:58"><name pos:start="247:44" pos:end="247:54"><name pos:start="247:44" pos:end="247:46">asf</name><operator pos:start="247:47" pos:end="247:48">-&gt;</operator><name pos:start="247:49" pos:end="247:51">dar</name><index pos:start="247:52" pos:end="247:54">[<expr pos:start="247:53" pos:end="247:53"><name pos:start="247:53" pos:end="247:53">i</name></expr>]</index></name><operator pos:start="247:55" pos:end="247:55">.</operator><name pos:start="247:56" pos:end="247:58">den</name></expr></argument>, <argument pos:start="247:61" pos:end="247:67"><expr pos:start="247:61" pos:end="247:67"><name pos:start="247:61" pos:end="247:67">INT_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="249:15" pos:end="259:69">else if <condition pos:start="249:23" pos:end="253:69">(<expr pos:start="249:24" pos:end="253:68"><operator pos:start="249:24" pos:end="249:24">(</operator><name pos:start="249:25" pos:end="249:35"><name pos:start="249:25" pos:end="249:27">asf</name><operator pos:start="249:28" pos:end="249:29">-&gt;</operator><name pos:start="249:30" pos:end="249:32">dar</name><index pos:start="249:33" pos:end="249:35">[<expr pos:start="249:34" pos:end="249:34"><literal type="number" pos:start="249:34" pos:end="249:34">0</literal></expr>]</index></name><operator pos:start="249:36" pos:end="249:36">.</operator><name pos:start="249:37" pos:end="249:39">num</name> <operator pos:start="249:41" pos:end="249:41">&gt;</operator> <literal type="number" pos:start="249:43" pos:end="249:43">0</literal><operator pos:start="249:44" pos:end="249:44">)</operator> <operator pos:start="249:46" pos:end="249:47">&amp;&amp;</operator> <operator pos:start="249:49" pos:end="249:49">(</operator><name pos:start="249:50" pos:end="249:60"><name pos:start="249:50" pos:end="249:52">asf</name><operator pos:start="249:53" pos:end="249:54">-&gt;</operator><name pos:start="249:55" pos:end="249:57">dar</name><index pos:start="249:58" pos:end="249:60">[<expr pos:start="249:59" pos:end="249:59"><literal type="number" pos:start="249:59" pos:end="249:59">0</literal></expr>]</index></name><operator pos:start="249:61" pos:end="249:61">.</operator><name pos:start="249:62" pos:end="249:64">den</name> <operator pos:start="249:66" pos:end="249:66">&gt;</operator> <literal type="number" pos:start="249:68" pos:end="249:68">0</literal><operator pos:start="249:69" pos:end="249:69">)</operator> <operator pos:start="249:71" pos:end="249:72">&amp;&amp;</operator>

                       <comment type="line" pos:start="251:24" pos:end="251:79">// Use ASF container value if the stream doesn't set AR.</comment>

                       <operator pos:start="253:24" pos:end="253:24">(</operator><name pos:start="253:25" pos:end="253:45"><name pos:start="253:25" pos:end="253:26">st</name><operator pos:start="253:27" pos:end="253:28">-&gt;</operator><name pos:start="253:29" pos:end="253:33">codec</name><operator pos:start="253:34" pos:end="253:35">-&gt;</operator><name pos:start="253:36" pos:end="253:45">codec_type</name></name> <operator pos:start="253:47" pos:end="253:48">==</operator> <name pos:start="253:50" pos:end="253:67">AVMEDIA_TYPE_VIDEO</name><operator pos:start="253:68" pos:end="253:68">)</operator></expr>)</condition><block type="pseudo" pos:start="255:17" pos:end="259:69"><block_content pos:start="255:17" pos:end="259:69">

                <expr_stmt pos:start="255:17" pos:end="259:69"><expr pos:start="255:17" pos:end="259:68"><call pos:start="255:17" pos:end="259:68"><name pos:start="255:17" pos:end="255:25">av_reduce</name><argument_list pos:start="255:26" pos:end="259:68">(<argument pos:start="255:27" pos:end="255:54"><expr pos:start="255:27" pos:end="255:54"><operator pos:start="255:27" pos:end="255:27">&amp;</operator><name pos:start="255:28" pos:end="255:54"><name pos:start="255:28" pos:end="255:29">st</name><operator pos:start="255:30" pos:end="255:31">-&gt;</operator><name pos:start="255:32" pos:end="255:50">sample_aspect_ratio</name><operator pos:start="255:51" pos:end="255:51">.</operator><name pos:start="255:52" pos:end="255:54">num</name></name></expr></argument>,

                          <argument pos:start="257:27" pos:end="257:54"><expr pos:start="257:27" pos:end="257:54"><operator pos:start="257:27" pos:end="257:27">&amp;</operator><name pos:start="257:28" pos:end="257:54"><name pos:start="257:28" pos:end="257:29">st</name><operator pos:start="257:30" pos:end="257:31">-&gt;</operator><name pos:start="257:32" pos:end="257:50">sample_aspect_ratio</name><operator pos:start="257:51" pos:end="257:51">.</operator><name pos:start="257:52" pos:end="257:54">den</name></name></expr></argument>,

                          <argument pos:start="259:27" pos:end="259:41"><expr pos:start="259:27" pos:end="259:41"><name pos:start="259:27" pos:end="259:37"><name pos:start="259:27" pos:end="259:29">asf</name><operator pos:start="259:30" pos:end="259:31">-&gt;</operator><name pos:start="259:32" pos:end="259:34">dar</name><index pos:start="259:35" pos:end="259:37">[<expr pos:start="259:36" pos:end="259:36"><literal type="number" pos:start="259:36" pos:end="259:36">0</literal></expr>]</index></name><operator pos:start="259:38" pos:end="259:38">.</operator><name pos:start="259:39" pos:end="259:41">num</name></expr></argument>, <argument pos:start="259:44" pos:end="259:58"><expr pos:start="259:44" pos:end="259:58"><name pos:start="259:44" pos:end="259:54"><name pos:start="259:44" pos:end="259:46">asf</name><operator pos:start="259:47" pos:end="259:48">-&gt;</operator><name pos:start="259:49" pos:end="259:51">dar</name><index pos:start="259:52" pos:end="259:54">[<expr pos:start="259:53" pos:end="259:53"><literal type="number" pos:start="259:53" pos:end="259:53">0</literal></expr>]</index></name><operator pos:start="259:55" pos:end="259:55">.</operator><name pos:start="259:56" pos:end="259:58">den</name></expr></argument>, <argument pos:start="259:61" pos:end="259:67"><expr pos:start="259:61" pos:end="259:67"><name pos:start="259:61" pos:end="259:67">INT_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="263:13" pos:end="267:78"><expr pos:start="263:13" pos:end="267:77"><call pos:start="263:13" pos:end="267:77"><name pos:start="263:13" pos:end="263:18">av_log</name><argument_list pos:start="263:19" pos:end="267:77">(<argument pos:start="263:20" pos:end="263:20"><expr pos:start="263:20" pos:end="263:20"><name pos:start="263:20" pos:end="263:20">s</name></expr></argument>, <argument pos:start="263:23" pos:end="263:34"><expr pos:start="263:23" pos:end="263:34"><name pos:start="263:23" pos:end="263:34">AV_LOG_TRACE</name></expr></argument>, <argument pos:start="263:37" pos:end="263:96"><expr pos:start="263:37" pos:end="263:96"><literal type="string" pos:start="263:37" pos:end="263:96">"i=%d, st-&gt;codec-&gt;codec_type:%d, asf-&gt;dar %d:%d sar=%d:%d\n"</literal></expr></argument>,

                    <argument pos:start="265:21" pos:end="265:21"><expr pos:start="265:21" pos:end="265:21"><name pos:start="265:21" pos:end="265:21">i</name></expr></argument>, <argument pos:start="265:24" pos:end="265:44"><expr pos:start="265:24" pos:end="265:44"><name pos:start="265:24" pos:end="265:44"><name pos:start="265:24" pos:end="265:25">st</name><operator pos:start="265:26" pos:end="265:27">-&gt;</operator><name pos:start="265:28" pos:end="265:32">codec</name><operator pos:start="265:33" pos:end="265:34">-&gt;</operator><name pos:start="265:35" pos:end="265:44">codec_type</name></name></expr></argument>, <argument pos:start="265:47" pos:end="265:61"><expr pos:start="265:47" pos:end="265:61"><name pos:start="265:47" pos:end="265:57"><name pos:start="265:47" pos:end="265:49">asf</name><operator pos:start="265:50" pos:end="265:51">-&gt;</operator><name pos:start="265:52" pos:end="265:54">dar</name><index pos:start="265:55" pos:end="265:57">[<expr pos:start="265:56" pos:end="265:56"><name pos:start="265:56" pos:end="265:56">i</name></expr>]</index></name><operator pos:start="265:58" pos:end="265:58">.</operator><name pos:start="265:59" pos:end="265:61">num</name></expr></argument>, <argument pos:start="265:64" pos:end="265:78"><expr pos:start="265:64" pos:end="265:78"><name pos:start="265:64" pos:end="265:74"><name pos:start="265:64" pos:end="265:66">asf</name><operator pos:start="265:67" pos:end="265:68">-&gt;</operator><name pos:start="265:69" pos:end="265:71">dar</name><index pos:start="265:72" pos:end="265:74">[<expr pos:start="265:73" pos:end="265:73"><name pos:start="265:73" pos:end="265:73">i</name></expr>]</index></name><operator pos:start="265:75" pos:end="265:75">.</operator><name pos:start="265:76" pos:end="265:78">den</name></expr></argument>,

                    <argument pos:start="267:21" pos:end="267:47"><expr pos:start="267:21" pos:end="267:47"><name pos:start="267:21" pos:end="267:47"><name pos:start="267:21" pos:end="267:22">st</name><operator pos:start="267:23" pos:end="267:24">-&gt;</operator><name pos:start="267:25" pos:end="267:43">sample_aspect_ratio</name><operator pos:start="267:44" pos:end="267:44">.</operator><name pos:start="267:45" pos:end="267:47">num</name></name></expr></argument>, <argument pos:start="267:50" pos:end="267:76"><expr pos:start="267:50" pos:end="267:76"><name pos:start="267:50" pos:end="267:76"><name pos:start="267:50" pos:end="267:51">st</name><operator pos:start="267:52" pos:end="267:53">-&gt;</operator><name pos:start="267:54" pos:end="267:72">sample_aspect_ratio</name><operator pos:start="267:73" pos:end="267:73">.</operator><name pos:start="267:74" pos:end="267:76">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="line" pos:start="271:13" pos:end="271:62">// copy and convert language codes to the frontend</comment>

            <if_stmt pos:start="273:13" pos:end="291:13"><if pos:start="273:13" pos:end="291:13">if <condition pos:start="273:16" pos:end="273:60">(<expr pos:start="273:17" pos:end="273:59"><name pos:start="273:17" pos:end="273:31"><name pos:start="273:17" pos:end="273:19">asf</name><operator pos:start="273:20" pos:end="273:21">-&gt;</operator><name pos:start="273:22" pos:end="273:28">streams</name><index pos:start="273:29" pos:end="273:31">[<expr pos:start="273:30" pos:end="273:30"><name pos:start="273:30" pos:end="273:30">i</name></expr>]</index></name><operator pos:start="273:32" pos:end="273:32">.</operator><name pos:start="273:33" pos:end="273:53">stream_language_index</name> <operator pos:start="273:55" pos:end="273:55">&lt;</operator> <literal type="number" pos:start="273:57" pos:end="273:59">128</literal></expr>)</condition> <block pos:start="273:62" pos:end="291:13">{<block_content pos:start="275:17" pos:end="289:17">

                <decl_stmt pos:start="275:17" pos:end="275:99"><decl pos:start="275:17" pos:end="275:98"><type pos:start="275:17" pos:end="275:28"><specifier pos:start="275:17" pos:end="275:21">const</specifier> <name pos:start="275:23" pos:end="275:26">char</name> <modifier pos:start="275:28" pos:end="275:28">*</modifier></type><name pos:start="275:29" pos:end="275:35">rfc1766</name> <init pos:start="275:37" pos:end="275:98">= <expr pos:start="275:39" pos:end="275:98"><name pos:start="275:39" pos:end="275:98"><name pos:start="275:39" pos:end="275:41">asf</name><operator pos:start="275:42" pos:end="275:43">-&gt;</operator><name pos:start="275:44" pos:end="275:59">stream_languages</name><index pos:start="275:60" pos:end="275:98">[<expr pos:start="275:61" pos:end="275:97"><name pos:start="275:61" pos:end="275:75"><name pos:start="275:61" pos:end="275:63">asf</name><operator pos:start="275:64" pos:end="275:65">-&gt;</operator><name pos:start="275:66" pos:end="275:72">streams</name><index pos:start="275:73" pos:end="275:75">[<expr pos:start="275:74" pos:end="275:74"><name pos:start="275:74" pos:end="275:74">i</name></expr>]</index></name><operator pos:start="275:76" pos:end="275:76">.</operator><name pos:start="275:77" pos:end="275:97">stream_language_index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="277:17" pos:end="289:17"><if pos:start="277:17" pos:end="289:17">if <condition pos:start="277:20" pos:end="277:51">(<expr pos:start="277:21" pos:end="277:50"><name pos:start="277:21" pos:end="277:27">rfc1766</name> <operator pos:start="277:29" pos:end="277:30">&amp;&amp;</operator> <call pos:start="277:32" pos:end="277:46"><name pos:start="277:32" pos:end="277:37">strlen</name><argument_list pos:start="277:38" pos:end="277:46">(<argument pos:start="277:39" pos:end="277:45"><expr pos:start="277:39" pos:end="277:45"><name pos:start="277:39" pos:end="277:45">rfc1766</name></expr></argument>)</argument_list></call> <operator pos:start="277:48" pos:end="277:48">&gt;</operator> <literal type="number" pos:start="277:50" pos:end="277:50">1</literal></expr>)</condition> <block pos:start="277:53" pos:end="289:17">{<block_content pos:start="279:21" pos:end="287:75">

                    <decl_stmt pos:start="279:21" pos:end="279:81"><decl pos:start="279:21" pos:end="279:80"><type pos:start="279:21" pos:end="279:30"><specifier pos:start="279:21" pos:end="279:25">const</specifier> <name pos:start="279:27" pos:end="279:30">char</name></type> <name pos:start="279:32" pos:end="279:45"><name pos:start="279:32" pos:end="279:42">primary_tag</name><index pos:start="279:43" pos:end="279:45">[<expr pos:start="279:44" pos:end="279:44"><literal type="number" pos:start="279:44" pos:end="279:44">3</literal></expr>]</index></name> <init pos:start="279:47" pos:end="279:80">= <expr pos:start="279:49" pos:end="279:80"><block pos:start="279:49" pos:end="279:80">{ <expr pos:start="279:51" pos:end="279:60"><name pos:start="279:51" pos:end="279:60"><name pos:start="279:51" pos:end="279:57">rfc1766</name><index pos:start="279:58" pos:end="279:60">[<expr pos:start="279:59" pos:end="279:59"><literal type="number" pos:start="279:59" pos:end="279:59">0</literal></expr>]</index></name></expr>, <expr pos:start="279:63" pos:end="279:72"><name pos:start="279:63" pos:end="279:72"><name pos:start="279:63" pos:end="279:69">rfc1766</name><index pos:start="279:70" pos:end="279:72">[<expr pos:start="279:71" pos:end="279:71"><literal type="number" pos:start="279:71" pos:end="279:71">1</literal></expr>]</index></name></expr>, <expr pos:start="279:75" pos:end="279:78"><literal type="char" pos:start="279:75" pos:end="279:78">'\0'</literal></expr> }</block></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="279:83" pos:end="279:111">// ignore country code if any</comment>

                    <decl_stmt pos:start="281:21" pos:end="283:90"><decl pos:start="281:21" pos:end="283:89"><type pos:start="281:21" pos:end="281:32"><specifier pos:start="281:21" pos:end="281:25">const</specifier> <name pos:start="281:27" pos:end="281:30">char</name> <modifier pos:start="281:32" pos:end="281:32">*</modifier></type><name pos:start="281:33" pos:end="281:39">iso6392</name>       <init pos:start="281:47" pos:end="283:89">= <expr pos:start="281:49" pos:end="283:89"><call pos:start="281:49" pos:end="283:89"><name pos:start="281:49" pos:end="281:66">av_convert_lang_to</name><argument_list pos:start="281:67" pos:end="283:89">(<argument pos:start="281:68" pos:end="281:78"><expr pos:start="281:68" pos:end="281:78"><name pos:start="281:68" pos:end="281:78">primary_tag</name></expr></argument>,

                                                                   <argument pos:start="283:68" pos:end="283:88"><expr pos:start="283:68" pos:end="283:88"><name pos:start="283:68" pos:end="283:88">AV_LANG_ISO639_2_BIBL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="285:21" pos:end="287:75"><if pos:start="285:21" pos:end="287:75">if <condition pos:start="285:24" pos:end="285:32">(<expr pos:start="285:25" pos:end="285:31"><name pos:start="285:25" pos:end="285:31">iso6392</name></expr>)</condition><block type="pseudo" pos:start="287:25" pos:end="287:75"><block_content pos:start="287:25" pos:end="287:75">

                        <expr_stmt pos:start="287:25" pos:end="287:75"><expr pos:start="287:25" pos:end="287:74"><call pos:start="287:25" pos:end="287:74"><name pos:start="287:25" pos:end="287:35">av_dict_set</name><argument_list pos:start="287:36" pos:end="287:74">(<argument pos:start="287:37" pos:end="287:49"><expr pos:start="287:37" pos:end="287:49"><operator pos:start="287:37" pos:end="287:37">&amp;</operator><name pos:start="287:38" pos:end="287:49"><name pos:start="287:38" pos:end="287:39">st</name><operator pos:start="287:40" pos:end="287:41">-&gt;</operator><name pos:start="287:42" pos:end="287:49">metadata</name></name></expr></argument>, <argument pos:start="287:52" pos:end="287:61"><expr pos:start="287:52" pos:end="287:61"><literal type="string" pos:start="287:52" pos:end="287:61">"language"</literal></expr></argument>, <argument pos:start="287:64" pos:end="287:70"><expr pos:start="287:64" pos:end="287:70"><name pos:start="287:64" pos:end="287:70">iso6392</name></expr></argument>, <argument pos:start="287:73" pos:end="287:73"><expr pos:start="287:73" pos:end="287:73"><literal type="number" pos:start="287:73" pos:end="287:73">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="299:5" pos:end="299:63"><expr pos:start="299:5" pos:end="299:62"><call pos:start="299:5" pos:end="299:62"><name pos:start="299:5" pos:end="299:20">ff_metadata_conv</name><argument_list pos:start="299:21" pos:end="299:62">(<argument pos:start="299:22" pos:end="299:33"><expr pos:start="299:22" pos:end="299:33"><operator pos:start="299:22" pos:end="299:22">&amp;</operator><name pos:start="299:23" pos:end="299:33"><name pos:start="299:23" pos:end="299:23">s</name><operator pos:start="299:24" pos:end="299:25">-&gt;</operator><name pos:start="299:26" pos:end="299:33">metadata</name></name></expr></argument>, <argument pos:start="299:36" pos:end="299:39"><expr pos:start="299:36" pos:end="299:39"><name pos:start="299:36" pos:end="299:39">NULL</name></expr></argument>, <argument pos:start="299:42" pos:end="299:61"><expr pos:start="299:42" pos:end="299:61"><name pos:start="299:42" pos:end="299:61">ff_asf_metadata_conv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="303:5" pos:end="303:13">return <expr pos:start="303:12" pos:end="303:12"><literal type="number" pos:start="303:12" pos:end="303:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
