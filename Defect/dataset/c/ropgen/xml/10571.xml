<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10571.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:20">v9fs_co_readlink</name><parameter_list pos:start="1:21" pos:end="1:67">(<parameter pos:start="1:22" pos:end="1:33"><decl pos:start="1:22" pos:end="1:33"><type pos:start="1:22" pos:end="1:33"><name pos:start="1:22" pos:end="1:28">V9fsPDU</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:33">pdu</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:49"><decl pos:start="1:36" pos:end="1:49"><type pos:start="1:36" pos:end="1:49"><name pos:start="1:36" pos:end="1:43">V9fsPath</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:49">path</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:66"><decl pos:start="1:52" pos:end="1:66"><type pos:start="1:52" pos:end="1:66"><name pos:start="1:52" pos:end="1:61">V9fsString</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:66">buf</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:15">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">ssize_t</name></type> <name pos:start="7:13" pos:end="7:15">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">V9fsState</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:16">s</name> <init pos:start="9:18" pos:end="9:25">= <expr pos:start="9:20" pos:end="9:25"><name pos:start="9:20" pos:end="9:25"><name pos:start="9:20" pos:end="9:22">pdu</name><operator pos:start="9:23" pos:end="9:24">-&gt;</operator><name pos:start="9:25" pos:end="9:25">s</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:36">(<expr pos:start="13:9" pos:end="13:35"><call pos:start="13:9" pos:end="13:35"><name pos:start="13:9" pos:end="13:30">v9fs_request_cancelled</name><argument_list pos:start="13:31" pos:end="13:35">(<argument pos:start="13:32" pos:end="13:34"><expr pos:start="13:32" pos:end="13:34"><name pos:start="13:32" pos:end="13:34">pdu</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:38" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:22">

        <return pos:start="15:9" pos:end="15:22">return <expr pos:start="15:16" pos:end="15:21"><operator pos:start="15:16" pos:end="15:16">-</operator><name pos:start="15:17" pos:end="15:21">EINTR</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:35"><expr pos:start="19:5" pos:end="19:34"><name pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:7">buf</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:13">data</name></name> <operator pos:start="19:15" pos:end="19:15">=</operator> <call pos:start="19:17" pos:end="19:34"><name pos:start="19:17" pos:end="19:24">g_malloc</name><argument_list pos:start="19:25" pos:end="19:34">(<argument pos:start="19:26" pos:end="19:33"><expr pos:start="19:26" pos:end="19:33"><name pos:start="19:26" pos:end="19:33">PATH_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:27"><expr pos:start="21:5" pos:end="21:26"><call pos:start="21:5" pos:end="21:26"><name pos:start="21:5" pos:end="21:23">v9fs_path_read_lock</name><argument_list pos:start="21:24" pos:end="21:26">(<argument pos:start="21:25" pos:end="21:25"><expr pos:start="21:25" pos:end="21:25"><name pos:start="21:25" pos:end="21:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <macro pos:start="23:5" pos:end="45:10"><name pos:start="23:5" pos:end="23:25">v9fs_co_run_in_worker</name><argument_list pos:start="23:26" pos:end="45:10">(

        <argument pos:start="25:9" pos:end="45:9">{

            len = s-&gt;ops-&gt;readlink(&amp;s-&gt;ctx, path,

                                   buf-&gt;data, PATH_MAX - <literal type="number" pos:start="29:58" pos:end="29:58">1</literal>);

            if (len &gt; -<literal type="number" pos:start="31:24" pos:end="31:24">1</literal>) {

                buf-&gt;size = len;

                buf-&gt;data[len] = <literal type="number" pos:start="35:34" pos:end="35:34">0</literal>;

                err = <literal type="number" pos:start="37:23" pos:end="37:23">0</literal>;

            } else {

                err = -errno;

            }

        }</argument>)</argument_list></macro><empty_stmt pos:start="45:11" pos:end="45:11">;</empty_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:24"><expr pos:start="47:5" pos:end="47:23"><call pos:start="47:5" pos:end="47:23"><name pos:start="47:5" pos:end="47:20">v9fs_path_unlock</name><argument_list pos:start="47:21" pos:end="47:23">(<argument pos:start="47:22" pos:end="47:22"><expr pos:start="47:22" pos:end="47:22"><name pos:start="47:22" pos:end="47:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="57:5"><if pos:start="49:5" pos:end="57:5">if <condition pos:start="49:8" pos:end="49:12">(<expr pos:start="49:9" pos:end="49:11"><name pos:start="49:9" pos:end="49:11">err</name></expr>)</condition> <block pos:start="49:14" pos:end="57:5">{<block_content pos:start="51:9" pos:end="55:22">

        <expr_stmt pos:start="51:9" pos:end="51:26"><expr pos:start="51:9" pos:end="51:25"><call pos:start="51:9" pos:end="51:25"><name pos:start="51:9" pos:end="51:14">g_free</name><argument_list pos:start="51:15" pos:end="51:25">(<argument pos:start="51:16" pos:end="51:24"><expr pos:start="51:16" pos:end="51:24"><name pos:start="51:16" pos:end="51:24"><name pos:start="51:16" pos:end="51:18">buf</name><operator pos:start="51:19" pos:end="51:20">-&gt;</operator><name pos:start="51:21" pos:end="51:24">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:25"><expr pos:start="53:9" pos:end="53:24"><name pos:start="53:9" pos:end="53:17"><name pos:start="53:9" pos:end="53:11">buf</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:17">data</name></name> <operator pos:start="53:19" pos:end="53:19">=</operator> <name pos:start="53:21" pos:end="53:24">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:22"><expr pos:start="55:9" pos:end="55:21"><name pos:start="55:9" pos:end="55:17"><name pos:start="55:9" pos:end="55:11">buf</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:17">size</name></name> <operator pos:start="55:19" pos:end="55:19">=</operator> <literal type="number" pos:start="55:21" pos:end="55:21">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="59:5" pos:end="59:15">return <expr pos:start="59:12" pos:end="59:14"><name pos:start="59:12" pos:end="59:14">err</name></expr>;</return>

</block_content>}</block></function>
</unit>
