<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18731.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:36">count_contiguous_clusters</name><parameter_list pos:start="1:37" pos:end="3:48">(<parameter pos:start="1:38" pos:end="1:57"><decl pos:start="1:38" pos:end="1:57"><type pos:start="1:38" pos:end="1:57"><name pos:start="1:38" pos:end="1:45">uint64_t</name></type> <name pos:start="1:47" pos:end="1:57">nb_clusters</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:75"><decl pos:start="1:60" pos:end="1:75"><type pos:start="1:60" pos:end="1:75"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:75">cluster_size</name></decl></parameter>,

        <parameter pos:start="3:9" pos:end="3:26"><decl pos:start="3:9" pos:end="3:26"><type pos:start="3:9" pos:end="3:26"><name pos:start="3:9" pos:end="3:16">uint64_t</name> <modifier pos:start="3:18" pos:end="3:18">*</modifier></type><name pos:start="3:19" pos:end="3:26">l2_table</name></decl></parameter>, <parameter pos:start="3:29" pos:end="3:47"><decl pos:start="3:29" pos:end="3:47"><type pos:start="3:29" pos:end="3:47"><name pos:start="3:29" pos:end="3:36">uint64_t</name></type> <name pos:start="3:38" pos:end="3:47">stop_flags</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="43:1">{<block_content pos:start="7:5" pos:end="41:17">

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:73"><decl pos:start="9:5" pos:end="9:72"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:17">mask</name> <init pos:start="9:19" pos:end="9:72">= <expr pos:start="9:21" pos:end="9:72"><name pos:start="9:21" pos:end="9:30">stop_flags</name> <operator pos:start="9:32" pos:end="9:32">|</operator> <name pos:start="9:34" pos:end="9:48">L2E_OFFSET_MASK</name> <operator pos:start="9:50" pos:end="9:50">|</operator> <name pos:start="9:52" pos:end="9:72">QCOW_OFLAG_COMPRESSED</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:52"><decl pos:start="11:5" pos:end="11:51"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:24">first_entry</name> <init pos:start="11:26" pos:end="11:51">= <expr pos:start="11:28" pos:end="11:51"><call pos:start="11:28" pos:end="11:51"><name pos:start="11:28" pos:end="11:38">be64_to_cpu</name><argument_list pos:start="11:39" pos:end="11:51">(<argument pos:start="11:40" pos:end="11:50"><expr pos:start="11:40" pos:end="11:50"><name pos:start="11:40" pos:end="11:50"><name pos:start="11:40" pos:end="11:47">l2_table</name><index pos:start="11:48" pos:end="11:50">[<expr pos:start="11:49" pos:end="11:49"><literal type="number" pos:start="11:49" pos:end="11:49">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:41"><decl pos:start="13:5" pos:end="13:40"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint64_t</name></type> <name pos:start="13:14" pos:end="13:19">offset</name> <init pos:start="13:21" pos:end="13:40">= <expr pos:start="13:23" pos:end="13:40"><name pos:start="13:23" pos:end="13:33">first_entry</name> <operator pos:start="13:35" pos:end="13:35">&amp;</operator> <name pos:start="13:37" pos:end="13:40">mask</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:17"><if pos:start="17:5" pos:end="19:17">if <condition pos:start="17:8" pos:end="17:16">(<expr pos:start="17:9" pos:end="17:15"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:15">offset</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:17"><block_content pos:start="19:9" pos:end="19:17">

        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:76"><expr pos:start="23:5" pos:end="23:75"><call pos:start="23:5" pos:end="23:75"><name pos:start="23:5" pos:end="23:10">assert</name><argument_list pos:start="23:11" pos:end="23:75">(<argument pos:start="23:12" pos:end="23:74"><expr pos:start="23:12" pos:end="23:74"><call pos:start="23:12" pos:end="23:46"><name pos:start="23:12" pos:end="23:33">qcow2_get_cluster_type</name><argument_list pos:start="23:34" pos:end="23:46">(<argument pos:start="23:35" pos:end="23:45"><expr pos:start="23:35" pos:end="23:45"><name pos:start="23:35" pos:end="23:45">first_entry</name></expr></argument>)</argument_list></call> <operator pos:start="23:48" pos:end="23:49">!=</operator> <name pos:start="23:51" pos:end="23:74">QCOW2_CLUSTER_COMPRESSED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="27:5" pos:end="37:5">for <control pos:start="27:9" pos:end="27:37">(<init pos:start="27:10" pos:end="27:15"><expr pos:start="27:10" pos:end="27:14"><name pos:start="27:10" pos:end="27:10">i</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>;</init> <condition pos:start="27:17" pos:end="27:32"><expr pos:start="27:17" pos:end="27:31"><name pos:start="27:17" pos:end="27:17">i</name> <operator pos:start="27:19" pos:end="27:19">&lt;</operator> <name pos:start="27:21" pos:end="27:31">nb_clusters</name></expr>;</condition> <incr pos:start="27:34" pos:end="27:36"><expr pos:start="27:34" pos:end="27:36"><name pos:start="27:34" pos:end="27:34">i</name><operator pos:start="27:35" pos:end="27:36">++</operator></expr></incr>)</control> <block pos:start="27:39" pos:end="37:5">{<block_content pos:start="29:9" pos:end="35:9">

        <decl_stmt pos:start="29:9" pos:end="29:60"><decl pos:start="29:9" pos:end="29:59"><type pos:start="29:9" pos:end="29:16"><name pos:start="29:9" pos:end="29:16">uint64_t</name></type> <name pos:start="29:18" pos:end="29:25">l2_entry</name> <init pos:start="29:27" pos:end="29:59">= <expr pos:start="29:29" pos:end="29:59"><call pos:start="29:29" pos:end="29:52"><name pos:start="29:29" pos:end="29:39">be64_to_cpu</name><argument_list pos:start="29:40" pos:end="29:52">(<argument pos:start="29:41" pos:end="29:51"><expr pos:start="29:41" pos:end="29:51"><name pos:start="29:41" pos:end="29:51"><name pos:start="29:41" pos:end="29:48">l2_table</name><index pos:start="29:49" pos:end="29:51">[<expr pos:start="29:50" pos:end="29:50"><name pos:start="29:50" pos:end="29:50">i</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="29:54" pos:end="29:54">&amp;</operator> <name pos:start="29:56" pos:end="29:59">mask</name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="31:9" pos:end="35:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:61">(<expr pos:start="31:13" pos:end="31:60"><name pos:start="31:13" pos:end="31:18">offset</name> <operator pos:start="31:20" pos:end="31:20">+</operator> <operator pos:start="31:22" pos:end="31:22">(</operator><name pos:start="31:23" pos:end="31:30">uint64_t</name><operator pos:start="31:31" pos:end="31:31">)</operator> <name pos:start="31:33" pos:end="31:33">i</name> <operator pos:start="31:35" pos:end="31:35">*</operator> <name pos:start="31:37" pos:end="31:48">cluster_size</name> <operator pos:start="31:50" pos:end="31:51">!=</operator> <name pos:start="31:53" pos:end="31:60">l2_entry</name></expr>)</condition> <block pos:start="31:63" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:18">

            <break pos:start="33:13" pos:end="33:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



	<return pos:start="41:9" pos:end="41:17">return <expr pos:start="41:16" pos:end="41:16"><name pos:start="41:16" pos:end="41:16">i</name></expr>;</return>

</block_content>}</block></function>
</unit>
