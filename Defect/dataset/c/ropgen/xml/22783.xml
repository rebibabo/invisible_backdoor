<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22783.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:10"><name pos:start="1:1" pos:end="1:10">ram_addr_t</name></type> <name pos:start="1:12" pos:end="1:37">xen_ram_addr_from_mapcache</name><parameter_list pos:start="1:38" pos:end="1:48">(<parameter pos:start="1:39" pos:end="1:47"><decl pos:start="1:39" pos:end="1:47"><type pos:start="1:39" pos:end="1:44"><name pos:start="1:39" pos:end="1:42">void</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">ptr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:66">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">MapCacheEntry</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:24">entry</name> <init pos:start="5:26" pos:end="5:31">= <expr pos:start="5:28" pos:end="5:31"><name pos:start="5:28" pos:end="5:31">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">MapCacheRev</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:25">reventry</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">hwaddr</name></type> <name pos:start="9:12" pos:end="9:22">paddr_index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">hwaddr</name></type> <name pos:start="11:12" pos:end="11:15">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:13">found</name> <init pos:start="13:15" pos:end="13:17">= <expr pos:start="13:17" pos:end="13:17"><literal type="number" pos:start="13:17" pos:end="13:17">0</literal></expr></init></decl>;</decl_stmt>



    <macro pos:start="17:5" pos:end="17:61"><name pos:start="17:5" pos:end="17:18">QTAILQ_FOREACH</name><argument_list pos:start="17:19" pos:end="17:61">(<argument pos:start="17:20" pos:end="17:27">reventry</argument>, <argument pos:start="17:30" pos:end="17:54">&amp;mapcache-&gt;locked_entries</argument>, <argument pos:start="17:57" pos:end="17:60">next</argument>)</argument_list></macro> <block pos:start="17:63" pos:end="31:5">{<block_content pos:start="19:9" pos:end="29:9">

        <if_stmt pos:start="19:9" pos:end="29:9"><if pos:start="19:9" pos:end="29:9">if <condition pos:start="19:12" pos:end="19:39">(<expr pos:start="19:13" pos:end="19:38"><name pos:start="19:13" pos:end="19:31"><name pos:start="19:13" pos:end="19:20">reventry</name><operator pos:start="19:21" pos:end="19:22">-&gt;</operator><name pos:start="19:23" pos:end="19:31">vaddr_req</name></name> <operator pos:start="19:33" pos:end="19:34">==</operator> <name pos:start="19:36" pos:end="19:38">ptr</name></expr>)</condition> <block pos:start="19:41" pos:end="29:9">{<block_content pos:start="21:13" pos:end="27:18">

            <expr_stmt pos:start="21:13" pos:end="21:48"><expr pos:start="21:13" pos:end="21:47"><name pos:start="21:13" pos:end="21:23">paddr_index</name> <operator pos:start="21:25" pos:end="21:25">=</operator> <name pos:start="21:27" pos:end="21:47"><name pos:start="21:27" pos:end="21:34">reventry</name><operator pos:start="21:35" pos:end="21:36">-&gt;</operator><name pos:start="21:37" pos:end="21:47">paddr_index</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:34"><expr pos:start="23:13" pos:end="23:33"><name pos:start="23:13" pos:end="23:16">size</name> <operator pos:start="23:18" pos:end="23:18">=</operator> <name pos:start="23:20" pos:end="23:33"><name pos:start="23:20" pos:end="23:27">reventry</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:33">size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:22"><expr pos:start="25:13" pos:end="25:21"><name pos:start="25:13" pos:end="25:17">found</name> <operator pos:start="25:19" pos:end="25:19">=</operator> <literal type="number" pos:start="25:21" pos:end="25:21">1</literal></expr>;</expr_stmt>

            <break pos:start="27:13" pos:end="27:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>

    <if_stmt pos:start="33:5" pos:end="49:5"><if pos:start="33:5" pos:end="49:5">if <condition pos:start="33:8" pos:end="33:15">(<expr pos:start="33:9" pos:end="33:14"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:14">found</name></expr>)</condition> <block pos:start="33:17" pos:end="49:5">{<block_content pos:start="35:9" pos:end="47:17">

        <expr_stmt pos:start="35:9" pos:end="35:66"><expr pos:start="35:9" pos:end="35:65"><call pos:start="35:9" pos:end="35:65"><name pos:start="35:9" pos:end="35:15">fprintf</name><argument_list pos:start="35:16" pos:end="35:65">(<argument pos:start="35:17" pos:end="35:22"><expr pos:start="35:17" pos:end="35:22"><name pos:start="35:17" pos:end="35:22">stderr</name></expr></argument>, <argument pos:start="35:25" pos:end="35:49"><expr pos:start="35:25" pos:end="35:49"><literal type="string" pos:start="35:25" pos:end="35:49">"%s, could not find %p\n"</literal></expr></argument>, <argument pos:start="35:52" pos:end="35:59"><expr pos:start="35:52" pos:end="35:59"><name pos:start="35:52" pos:end="35:59">__func__</name></expr></argument>, <argument pos:start="35:62" pos:end="35:64"><expr pos:start="35:62" pos:end="35:64"><name pos:start="35:62" pos:end="35:64">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <macro pos:start="37:9" pos:end="37:65"><name pos:start="37:9" pos:end="37:22">QTAILQ_FOREACH</name><argument_list pos:start="37:23" pos:end="37:65">(<argument pos:start="37:24" pos:end="37:31">reventry</argument>, <argument pos:start="37:34" pos:end="37:58">&amp;mapcache-&gt;locked_entries</argument>, <argument pos:start="37:61" pos:end="37:64">next</argument>)</argument_list></macro> <block pos:start="37:67" pos:end="43:9">{<block_content pos:start="39:13" pos:end="41:41">

            <expr_stmt pos:start="39:13" pos:end="41:41"><expr pos:start="39:13" pos:end="41:40"><call pos:start="39:13" pos:end="41:40"><name pos:start="39:13" pos:end="39:19">DPRINTF</name><argument_list pos:start="39:20" pos:end="41:40">(<argument pos:start="39:21" pos:end="39:60"><expr pos:start="39:21" pos:end="39:60"><literal type="string" pos:start="39:21" pos:end="39:25">"   "</literal><name pos:start="39:26" pos:end="39:39">TARGET_FMT_plx</name><literal type="string" pos:start="39:40" pos:end="39:60">" -&gt; %p is present\n"</literal></expr></argument>, <argument pos:start="39:63" pos:end="39:83"><expr pos:start="39:63" pos:end="39:83"><name pos:start="39:63" pos:end="39:83"><name pos:start="39:63" pos:end="39:70">reventry</name><operator pos:start="39:71" pos:end="39:72">-&gt;</operator><name pos:start="39:73" pos:end="39:83">paddr_index</name></name></expr></argument>,

                    <argument pos:start="41:21" pos:end="41:39"><expr pos:start="41:21" pos:end="41:39"><name pos:start="41:21" pos:end="41:39"><name pos:start="41:21" pos:end="41:28">reventry</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:39">vaddr_req</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="45:9" pos:end="45:16"><expr pos:start="45:9" pos:end="45:15"><call pos:start="45:9" pos:end="45:15"><name pos:start="45:9" pos:end="45:13">abort</name><argument_list pos:start="45:14" pos:end="45:15">()</argument_list></call></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:17">return <expr pos:start="47:16" pos:end="47:16"><literal type="number" pos:start="47:16" pos:end="47:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:65"><expr pos:start="53:5" pos:end="53:64"><name pos:start="53:5" pos:end="53:9">entry</name> <operator pos:start="53:11" pos:end="53:11">=</operator> <operator pos:start="53:13" pos:end="53:13">&amp;</operator><name pos:start="53:14" pos:end="53:64"><name pos:start="53:14" pos:end="53:21">mapcache</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:28">entry</name><index pos:start="53:29" pos:end="53:64">[<expr pos:start="53:30" pos:end="53:63"><name pos:start="53:30" pos:end="53:40">paddr_index</name> <operator pos:start="53:42" pos:end="53:42">%</operator> <name pos:start="53:44" pos:end="53:63"><name pos:start="53:44" pos:end="53:51">mapcache</name><operator pos:start="53:52" pos:end="53:53">-&gt;</operator><name pos:start="53:54" pos:end="53:63">nr_buckets</name></name></expr>]</index></name></expr>;</expr_stmt>

    <while pos:start="55:5" pos:end="59:5">while <condition pos:start="55:11" pos:end="55:79">(<expr pos:start="55:12" pos:end="55:78"><name pos:start="55:12" pos:end="55:16">entry</name> <operator pos:start="55:18" pos:end="55:19">&amp;&amp;</operator> <operator pos:start="55:21" pos:end="55:21">(</operator><name pos:start="55:22" pos:end="55:39"><name pos:start="55:22" pos:end="55:26">entry</name><operator pos:start="55:27" pos:end="55:28">-&gt;</operator><name pos:start="55:29" pos:end="55:39">paddr_index</name></name> <operator pos:start="55:41" pos:end="55:42">!=</operator> <name pos:start="55:44" pos:end="55:54">paddr_index</name> <operator pos:start="55:56" pos:end="55:57">||</operator> <name pos:start="55:59" pos:end="55:69"><name pos:start="55:59" pos:end="55:63">entry</name><operator pos:start="55:64" pos:end="55:65">-&gt;</operator><name pos:start="55:66" pos:end="55:69">size</name></name> <operator pos:start="55:71" pos:end="55:72">!=</operator> <name pos:start="55:74" pos:end="55:77">size</name><operator pos:start="55:78" pos:end="55:78">)</operator></expr>)</condition> <block pos:start="55:81" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:28">

        <expr_stmt pos:start="57:9" pos:end="57:28"><expr pos:start="57:9" pos:end="57:27"><name pos:start="57:9" pos:end="57:13">entry</name> <operator pos:start="57:15" pos:end="57:15">=</operator> <name pos:start="57:17" pos:end="57:27"><name pos:start="57:17" pos:end="57:21">entry</name><operator pos:start="57:22" pos:end="57:23">-&gt;</operator><name pos:start="57:24" pos:end="57:27">next</name></name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <if_stmt pos:start="61:5" pos:end="67:5"><if pos:start="61:5" pos:end="67:5">if <condition pos:start="61:8" pos:end="61:15">(<expr pos:start="61:9" pos:end="61:14"><operator pos:start="61:9" pos:end="61:9">!</operator><name pos:start="61:10" pos:end="61:14">entry</name></expr>)</condition> <block pos:start="61:17" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:17">

        <expr_stmt pos:start="63:9" pos:end="63:81"><expr pos:start="63:9" pos:end="63:80"><call pos:start="63:9" pos:end="63:80"><name pos:start="63:9" pos:end="63:15">DPRINTF</name><argument_list pos:start="63:16" pos:end="63:80">(<argument pos:start="63:17" pos:end="63:74"><expr pos:start="63:17" pos:end="63:74"><literal type="string" pos:start="63:17" pos:end="63:74">"Trying to find address %p that is not in the mapcache!\n"</literal></expr></argument>, <argument pos:start="63:77" pos:end="63:79"><expr pos:start="63:77" pos:end="63:79"><name pos:start="63:77" pos:end="63:79">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="65:9" pos:end="65:17">return <expr pos:start="65:16" pos:end="65:16"><literal type="number" pos:start="65:16" pos:end="65:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="69:5" pos:end="71:66">return <expr pos:start="69:12" pos:end="71:65"><operator pos:start="69:12" pos:end="69:12">(</operator><name pos:start="69:13" pos:end="69:33"><name pos:start="69:13" pos:end="69:20">reventry</name><operator pos:start="69:21" pos:end="69:22">-&gt;</operator><name pos:start="69:23" pos:end="69:33">paddr_index</name></name> <operator pos:start="69:35" pos:end="69:36">&lt;&lt;</operator> <name pos:start="69:38" pos:end="69:56">MCACHE_BUCKET_SHIFT</name><operator pos:start="69:57" pos:end="69:57">)</operator> <operator pos:start="69:59" pos:end="69:59">+</operator>

        <operator pos:start="71:9" pos:end="71:9">(</operator><operator pos:start="71:10" pos:end="71:10">(</operator><name pos:start="71:11" pos:end="71:18">unsigned</name> <name pos:start="71:20" pos:end="71:23">long</name><operator pos:start="71:24" pos:end="71:24">)</operator> <name pos:start="71:26" pos:end="71:28">ptr</name> <operator pos:start="71:30" pos:end="71:30">-</operator> <operator pos:start="71:32" pos:end="71:32">(</operator><name pos:start="71:33" pos:end="71:40">unsigned</name> <name pos:start="71:42" pos:end="71:45">long</name><operator pos:start="71:46" pos:end="71:46">)</operator> <name pos:start="71:48" pos:end="71:64"><name pos:start="71:48" pos:end="71:52">entry</name><operator pos:start="71:53" pos:end="71:54">-&gt;</operator><name pos:start="71:55" pos:end="71:64">vaddr_base</name></name><operator pos:start="71:65" pos:end="71:65">)</operator></expr>;</return>

</block_content>}</block></function>
</unit>
