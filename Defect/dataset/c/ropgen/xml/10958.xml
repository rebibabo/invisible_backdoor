<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10958.c" pos:tabs="8"><function pos:start="1:1" pos:end="225:1"><type pos:start="1:1" pos:end="1:23"><name pos:start="1:1" pos:end="1:21"><name pos:start="1:1" pos:end="1:6">struct</name> <name pos:start="1:8" pos:end="1:21">pxa2xx_state_s</name></name> <modifier pos:start="1:23" pos:end="1:23">*</modifier></type><name pos:start="1:24" pos:end="1:34">pxa270_init</name><parameter_list pos:start="1:35" pos:end="3:55">(<parameter pos:start="1:36" pos:end="1:58"><decl pos:start="1:36" pos:end="1:58"><type pos:start="1:36" pos:end="1:58"><name pos:start="1:36" pos:end="1:43">unsigned</name> <name pos:start="1:45" pos:end="1:47">int</name></type> <name pos:start="1:49" pos:end="1:58">sdram_size</name></decl></parameter>,

                <parameter pos:start="3:17" pos:end="3:32"><decl pos:start="3:17" pos:end="3:32"><type pos:start="3:17" pos:end="3:32"><name pos:start="3:17" pos:end="3:28">DisplayState</name> <modifier pos:start="3:30" pos:end="3:30">*</modifier></type><name pos:start="3:31" pos:end="3:32">ds</name></decl></parameter>, <parameter pos:start="3:35" pos:end="3:54"><decl pos:start="3:35" pos:end="3:54"><type pos:start="3:35" pos:end="3:54"><specifier pos:start="3:35" pos:end="3:39">const</specifier> <name pos:start="3:41" pos:end="3:44">char</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:54">revision</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="225:1">{<block_content pos:start="7:5" pos:end="223:13">

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:25">pxa2xx_state_s</name></name> <modifier pos:start="7:27" pos:end="7:27">*</modifier></type><name pos:start="7:28" pos:end="7:28">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:25"><name pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:23">pxa2xx_ssp_s</name></name> <modifier pos:start="9:25" pos:end="9:25">*</modifier></type><name pos:start="9:26" pos:end="9:28">ssp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:17">iomemtype</name></decl>, <decl pos:start="11:20" pos:end="11:20"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:20" pos:end="11:20">i</name></decl>;</decl_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:78"><expr pos:start="13:5" pos:end="13:77"><name pos:start="13:5" pos:end="13:5">s</name> <operator pos:start="13:7" pos:end="13:7">=</operator> <operator pos:start="13:9" pos:end="13:9">(</operator>struct <name pos:start="13:17" pos:end="13:30">pxa2xx_state_s</name> <operator pos:start="13:32" pos:end="13:32">*</operator><operator pos:start="13:33" pos:end="13:33">)</operator> <call pos:start="13:35" pos:end="13:77"><name pos:start="13:35" pos:end="13:46">qemu_mallocz</name><argument_list pos:start="13:47" pos:end="13:77">(<argument pos:start="13:48" pos:end="13:76"><expr pos:start="13:48" pos:end="13:76"><sizeof pos:start="13:48" pos:end="13:76">sizeof<argument_list pos:start="13:54" pos:end="13:76">(<argument pos:start="13:55" pos:end="13:75"><expr pos:start="13:55" pos:end="13:75">struct <name pos:start="13:62" pos:end="13:75">pxa2xx_state_s</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:50">(<expr pos:start="17:9" pos:end="17:49"><name pos:start="17:9" pos:end="17:16">revision</name> <operator pos:start="17:18" pos:end="17:19">&amp;&amp;</operator> <call pos:start="17:21" pos:end="17:49"><name pos:start="17:21" pos:end="17:27">strncmp</name><argument_list pos:start="17:28" pos:end="17:49">(<argument pos:start="17:29" pos:end="17:36"><expr pos:start="17:29" pos:end="17:36"><name pos:start="17:29" pos:end="17:36">revision</name></expr></argument>, <argument pos:start="17:39" pos:end="17:45"><expr pos:start="17:39" pos:end="17:45"><literal type="string" pos:start="17:39" pos:end="17:45">"pxa27"</literal></expr></argument>, <argument pos:start="17:48" pos:end="17:48"><expr pos:start="17:48" pos:end="17:48"><literal type="number" pos:start="17:48" pos:end="17:48">5</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:52" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:16">

        <expr_stmt pos:start="19:9" pos:end="19:66"><expr pos:start="19:9" pos:end="19:65"><call pos:start="19:9" pos:end="19:65"><name pos:start="19:9" pos:end="19:15">fprintf</name><argument_list pos:start="19:16" pos:end="19:65">(<argument pos:start="19:17" pos:end="19:22"><expr pos:start="19:17" pos:end="19:22"><name pos:start="19:17" pos:end="19:22">stderr</name></expr></argument>, <argument pos:start="19:25" pos:end="19:64"><expr pos:start="19:25" pos:end="19:64"><literal type="string" pos:start="19:25" pos:end="19:64">"Machine requires a PXA27x processor.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:16"><expr pos:start="21:9" pos:end="21:15"><call pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:12">exit</name><argument_list pos:start="21:13" pos:end="21:15">(<argument pos:start="21:14" pos:end="21:14"><expr pos:start="21:14" pos:end="21:14"><literal type="number" pos:start="21:14" pos:end="21:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:24"><expr pos:start="27:5" pos:end="27:23"><name pos:start="27:5" pos:end="27:10"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:10">env</name></name> <operator pos:start="27:12" pos:end="27:12">=</operator> <call pos:start="27:14" pos:end="27:23"><name pos:start="27:14" pos:end="27:21">cpu_init</name><argument_list pos:start="27:22" pos:end="27:23">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:52"><expr pos:start="29:5" pos:end="29:51"><call pos:start="29:5" pos:end="29:51"><name pos:start="29:5" pos:end="29:21">cpu_arm_set_model</name><argument_list pos:start="29:22" pos:end="29:51">(<argument pos:start="29:23" pos:end="29:28"><expr pos:start="29:23" pos:end="29:28"><name pos:start="29:23" pos:end="29:28"><name pos:start="29:23" pos:end="29:23">s</name><operator pos:start="29:24" pos:end="29:25">-&gt;</operator><name pos:start="29:26" pos:end="29:28">env</name></name></expr></argument>, <argument pos:start="29:31" pos:end="29:50"><expr pos:start="29:31" pos:end="29:50"><ternary pos:start="29:31" pos:end="29:50"><condition pos:start="29:31" pos:end="29:40"><expr pos:start="29:31" pos:end="29:38"><name pos:start="29:31" pos:end="29:38">revision</name></expr> ?</condition><then/><else pos:start="29:41" pos:end="29:50">: <expr pos:start="29:43" pos:end="29:50"><literal type="string" pos:start="29:43" pos:end="29:50">"pxa270"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:61"><expr pos:start="31:5" pos:end="31:60"><call pos:start="31:5" pos:end="31:60"><name pos:start="31:5" pos:end="31:19">register_savevm</name><argument_list pos:start="31:20" pos:end="31:60">(<argument pos:start="31:21" pos:end="31:25"><expr pos:start="31:21" pos:end="31:25"><literal type="string" pos:start="31:21" pos:end="31:25">"cpu"</literal></expr></argument>, <argument pos:start="31:28" pos:end="31:28"><expr pos:start="31:28" pos:end="31:28"><literal type="number" pos:start="31:28" pos:end="31:28">0</literal></expr></argument>, <argument pos:start="31:31" pos:end="31:31"><expr pos:start="31:31" pos:end="31:31"><literal type="number" pos:start="31:31" pos:end="31:31">0</literal></expr></argument>, <argument pos:start="31:34" pos:end="31:41"><expr pos:start="31:34" pos:end="31:41"><name pos:start="31:34" pos:end="31:41">cpu_save</name></expr></argument>, <argument pos:start="31:44" pos:end="31:51"><expr pos:start="31:44" pos:end="31:51"><name pos:start="31:44" pos:end="31:51">cpu_load</name></expr></argument>, <argument pos:start="31:54" pos:end="31:59"><expr pos:start="31:54" pos:end="31:59"><name pos:start="31:54" pos:end="31:59"><name pos:start="31:54" pos:end="31:54">s</name><operator pos:start="31:55" pos:end="31:56">-&gt;</operator><name pos:start="31:57" pos:end="31:59">env</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:41">/* SDRAM &amp; Internal Memory Storage */</comment>

    <expr_stmt pos:start="37:5" pos:end="39:73"><expr pos:start="37:5" pos:end="39:72"><call pos:start="37:5" pos:end="39:72"><name pos:start="37:5" pos:end="37:32">cpu_register_physical_memory</name><argument_list pos:start="37:33" pos:end="39:72">(<argument pos:start="37:34" pos:end="37:50"><expr pos:start="37:34" pos:end="37:50"><name pos:start="37:34" pos:end="37:50">PXA2XX_SDRAM_BASE</name></expr></argument>,

                    <argument pos:start="39:21" pos:end="39:30"><expr pos:start="39:21" pos:end="39:30"><name pos:start="39:21" pos:end="39:30">sdram_size</name></expr></argument>, <argument pos:start="39:33" pos:end="39:71"><expr pos:start="39:33" pos:end="39:71"><call pos:start="39:33" pos:end="39:58"><name pos:start="39:33" pos:end="39:46">qemu_ram_alloc</name><argument_list pos:start="39:47" pos:end="39:58">(<argument pos:start="39:48" pos:end="39:57"><expr pos:start="39:48" pos:end="39:57"><name pos:start="39:48" pos:end="39:57">sdram_size</name></expr></argument>)</argument_list></call> <operator pos:start="39:60" pos:end="39:60">|</operator> <name pos:start="39:62" pos:end="39:71">IO_MEM_RAM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="43:67"><expr pos:start="41:5" pos:end="43:66"><call pos:start="41:5" pos:end="43:66"><name pos:start="41:5" pos:end="41:32">cpu_register_physical_memory</name><argument_list pos:start="41:33" pos:end="43:66">(<argument pos:start="41:34" pos:end="41:53"><expr pos:start="41:34" pos:end="41:53"><name pos:start="41:34" pos:end="41:53">PXA2XX_INTERNAL_BASE</name></expr></argument>,

                    <argument pos:start="43:21" pos:end="43:27"><expr pos:start="43:21" pos:end="43:27"><literal type="number" pos:start="43:21" pos:end="43:27">0x40000</literal></expr></argument>, <argument pos:start="43:30" pos:end="43:65"><expr pos:start="43:30" pos:end="43:65"><call pos:start="43:30" pos:end="43:52"><name pos:start="43:30" pos:end="43:43">qemu_ram_alloc</name><argument_list pos:start="43:44" pos:end="43:52">(<argument pos:start="43:45" pos:end="43:51"><expr pos:start="43:45" pos:end="43:51"><literal type="number" pos:start="43:45" pos:end="43:51">0x40000</literal></expr></argument>)</argument_list></call> <operator pos:start="43:54" pos:end="43:54">|</operator> <name pos:start="43:56" pos:end="43:65">IO_MEM_RAM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:49"><expr pos:start="47:5" pos:end="47:48"><name pos:start="47:5" pos:end="47:10"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:10">pic</name></name> <operator pos:start="47:12" pos:end="47:12">=</operator> <call pos:start="47:14" pos:end="47:48"><name pos:start="47:14" pos:end="47:28">pxa2xx_pic_init</name><argument_list pos:start="47:29" pos:end="47:48">(<argument pos:start="47:30" pos:end="47:39"><expr pos:start="47:30" pos:end="47:39"><literal type="number" pos:start="47:30" pos:end="47:39">0x40d00000</literal></expr></argument>, <argument pos:start="47:42" pos:end="47:47"><expr pos:start="47:42" pos:end="47:47"><name pos:start="47:42" pos:end="47:47"><name pos:start="47:42" pos:end="47:42">s</name><operator pos:start="47:43" pos:end="47:44">-&gt;</operator><name pos:start="47:45" pos:end="47:47">env</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:65"><expr pos:start="51:5" pos:end="51:64"><name pos:start="51:5" pos:end="51:10"><name pos:start="51:5" pos:end="51:5">s</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:10">dma</name></name> <operator pos:start="51:12" pos:end="51:12">=</operator> <call pos:start="51:14" pos:end="51:64"><name pos:start="51:14" pos:end="51:28">pxa27x_dma_init</name><argument_list pos:start="51:29" pos:end="51:64">(<argument pos:start="51:30" pos:end="51:39"><expr pos:start="51:30" pos:end="51:39"><literal type="number" pos:start="51:30" pos:end="51:39">0x40000000</literal></expr></argument>, <argument pos:start="51:42" pos:end="51:63"><expr pos:start="51:42" pos:end="51:63"><name pos:start="51:42" pos:end="51:63"><name pos:start="51:42" pos:end="51:42">s</name><operator pos:start="51:43" pos:end="51:44">-&gt;</operator><name pos:start="51:45" pos:end="51:47">pic</name><index pos:start="51:48" pos:end="51:63">[<expr pos:start="51:49" pos:end="51:62"><name pos:start="51:49" pos:end="51:62">PXA2XX_PIC_DMA</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="57:49"><expr pos:start="55:5" pos:end="57:48"><call pos:start="55:5" pos:end="57:48"><name pos:start="55:5" pos:end="55:21">pxa27x_timer_init</name><argument_list pos:start="55:22" pos:end="57:48">(<argument pos:start="55:23" pos:end="55:32"><expr pos:start="55:23" pos:end="55:32"><literal type="number" pos:start="55:23" pos:end="55:32">0x40a00000</literal></expr></argument>, <argument pos:start="55:35" pos:end="55:59"><expr pos:start="55:35" pos:end="55:59"><operator pos:start="55:35" pos:end="55:35">&amp;</operator><name pos:start="55:36" pos:end="55:59"><name pos:start="55:36" pos:end="55:36">s</name><operator pos:start="55:37" pos:end="55:38">-&gt;</operator><name pos:start="55:39" pos:end="55:41">pic</name><index pos:start="55:42" pos:end="55:59">[<expr pos:start="55:43" pos:end="55:58"><name pos:start="55:43" pos:end="55:58">PXA2XX_PIC_OST_0</name></expr>]</index></name></expr></argument>,

                    <argument pos:start="57:21" pos:end="57:47"><expr pos:start="57:21" pos:end="57:47"><name pos:start="57:21" pos:end="57:47"><name pos:start="57:21" pos:end="57:21">s</name><operator pos:start="57:22" pos:end="57:23">-&gt;</operator><name pos:start="57:24" pos:end="57:26">pic</name><index pos:start="57:27" pos:end="57:47">[<expr pos:start="57:28" pos:end="57:46"><name pos:start="57:28" pos:end="57:46">PXA27X_PIC_OST_4_11</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:64"><expr pos:start="61:5" pos:end="61:63"><name pos:start="61:5" pos:end="61:11"><name pos:start="61:5" pos:end="61:5">s</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:11">gpio</name></name> <operator pos:start="61:13" pos:end="61:13">=</operator> <call pos:start="61:15" pos:end="61:63"><name pos:start="61:15" pos:end="61:30">pxa2xx_gpio_init</name><argument_list pos:start="61:31" pos:end="61:63">(<argument pos:start="61:32" pos:end="61:41"><expr pos:start="61:32" pos:end="61:41"><literal type="number" pos:start="61:32" pos:end="61:41">0x40e00000</literal></expr></argument>, <argument pos:start="61:44" pos:end="61:49"><expr pos:start="61:44" pos:end="61:49"><name pos:start="61:44" pos:end="61:49"><name pos:start="61:44" pos:end="61:44">s</name><operator pos:start="61:45" pos:end="61:46">-&gt;</operator><name pos:start="61:47" pos:end="61:49">env</name></name></expr></argument>, <argument pos:start="61:52" pos:end="61:57"><expr pos:start="61:52" pos:end="61:57"><name pos:start="61:52" pos:end="61:57"><name pos:start="61:52" pos:end="61:52">s</name><operator pos:start="61:53" pos:end="61:54">-&gt;</operator><name pos:start="61:55" pos:end="61:57">pic</name></name></expr></argument>, <argument pos:start="61:60" pos:end="61:62"><expr pos:start="61:60" pos:end="61:62"><literal type="number" pos:start="61:60" pos:end="61:62">121</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:74"><expr pos:start="65:5" pos:end="65:73"><name pos:start="65:5" pos:end="65:10"><name pos:start="65:5" pos:end="65:5">s</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:10">mmc</name></name> <operator pos:start="65:12" pos:end="65:12">=</operator> <call pos:start="65:14" pos:end="65:73"><name pos:start="65:14" pos:end="65:29">pxa2xx_mmci_init</name><argument_list pos:start="65:30" pos:end="65:73">(<argument pos:start="65:31" pos:end="65:40"><expr pos:start="65:31" pos:end="65:40"><literal type="number" pos:start="65:31" pos:end="65:40">0x41100000</literal></expr></argument>, <argument pos:start="65:43" pos:end="65:64"><expr pos:start="65:43" pos:end="65:64"><name pos:start="65:43" pos:end="65:64"><name pos:start="65:43" pos:end="65:43">s</name><operator pos:start="65:44" pos:end="65:45">-&gt;</operator><name pos:start="65:46" pos:end="65:48">pic</name><index pos:start="65:49" pos:end="65:64">[<expr pos:start="65:50" pos:end="65:63"><name pos:start="65:50" pos:end="65:63">PXA2XX_PIC_MMC</name></expr>]</index></name></expr></argument>, <argument pos:start="65:67" pos:end="65:72"><expr pos:start="65:67" pos:end="65:72"><name pos:start="65:67" pos:end="65:72"><name pos:start="65:67" pos:end="65:67">s</name><operator pos:start="65:68" pos:end="65:69">-&gt;</operator><name pos:start="65:70" pos:end="65:72">dma</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="69:5" pos:end="79:18">for <control pos:start="69:9" pos:end="69:47">(<init pos:start="69:10" pos:end="69:15"><expr pos:start="69:10" pos:end="69:14"><name pos:start="69:10" pos:end="69:10">i</name> <operator pos:start="69:12" pos:end="69:12">=</operator> <literal type="number" pos:start="69:14" pos:end="69:14">0</literal></expr>;</init> <condition pos:start="69:17" pos:end="69:41"><expr pos:start="69:17" pos:end="69:40"><name pos:start="69:17" pos:end="69:32"><name pos:start="69:17" pos:end="69:29">pxa270_serial</name><index pos:start="69:30" pos:end="69:32">[<expr pos:start="69:31" pos:end="69:31"><name pos:start="69:31" pos:end="69:31">i</name></expr>]</index></name><operator pos:start="69:33" pos:end="69:33">.</operator><name pos:start="69:34" pos:end="69:40">io_base</name></expr>;</condition> <incr pos:start="69:43" pos:end="69:46"><expr pos:start="69:43" pos:end="69:46"><name pos:start="69:43" pos:end="69:43">i</name> <operator pos:start="69:45" pos:end="69:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="71:9" pos:end="79:18"><block_content pos:start="71:9" pos:end="79:18">

        <if_stmt pos:start="71:9" pos:end="79:18"><if pos:start="71:9" pos:end="75:77">if <condition pos:start="71:12" pos:end="71:26">(<expr pos:start="71:13" pos:end="71:25"><name pos:start="71:13" pos:end="71:25"><name pos:start="71:13" pos:end="71:22">serial_hds</name><index pos:start="71:23" pos:end="71:25">[<expr pos:start="71:24" pos:end="71:24"><name pos:start="71:24" pos:end="71:24">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="75:77"><block_content pos:start="73:13" pos:end="75:77">

            <expr_stmt pos:start="73:13" pos:end="75:77"><expr pos:start="73:13" pos:end="75:76"><call pos:start="73:13" pos:end="75:76"><name pos:start="73:13" pos:end="73:26">serial_mm_init</name><argument_list pos:start="73:27" pos:end="75:76">(<argument pos:start="73:28" pos:end="73:51"><expr pos:start="73:28" pos:end="73:51"><name pos:start="73:28" pos:end="73:43"><name pos:start="73:28" pos:end="73:40">pxa270_serial</name><index pos:start="73:41" pos:end="73:43">[<expr pos:start="73:42" pos:end="73:42"><name pos:start="73:42" pos:end="73:42">i</name></expr>]</index></name><operator pos:start="73:44" pos:end="73:44">.</operator><name pos:start="73:45" pos:end="73:51">io_base</name></expr></argument>, <argument pos:start="73:54" pos:end="73:54"><expr pos:start="73:54" pos:end="73:54"><literal type="number" pos:start="73:54" pos:end="73:54">2</literal></expr></argument>,

                            <argument pos:start="75:29" pos:end="75:57"><expr pos:start="75:29" pos:end="75:57"><name pos:start="75:29" pos:end="75:57"><name pos:start="75:29" pos:end="75:29">s</name><operator pos:start="75:30" pos:end="75:31">-&gt;</operator><name pos:start="75:32" pos:end="75:34">pic</name><index pos:start="75:35" pos:end="75:57">[<expr pos:start="75:36" pos:end="75:56"><name pos:start="75:36" pos:end="75:51"><name pos:start="75:36" pos:end="75:48">pxa270_serial</name><index pos:start="75:49" pos:end="75:51">[<expr pos:start="75:50" pos:end="75:50"><name pos:start="75:50" pos:end="75:50">i</name></expr>]</index></name><operator pos:start="75:52" pos:end="75:52">.</operator><name pos:start="75:53" pos:end="75:56">irqn</name></expr>]</index></name></expr></argument>, <argument pos:start="75:60" pos:end="75:72"><expr pos:start="75:60" pos:end="75:72"><name pos:start="75:60" pos:end="75:72"><name pos:start="75:60" pos:end="75:69">serial_hds</name><index pos:start="75:70" pos:end="75:72">[<expr pos:start="75:71" pos:end="75:71"><name pos:start="75:71" pos:end="75:71">i</name></expr>]</index></name></expr></argument>, <argument pos:start="75:75" pos:end="75:75"><expr pos:start="75:75" pos:end="75:75"><literal type="number" pos:start="75:75" pos:end="75:75">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="77:9" pos:end="79:18">else<block type="pseudo" pos:start="79:13" pos:end="79:18"><block_content pos:start="79:13" pos:end="79:18">

            <break pos:start="79:13" pos:end="79:18">break;</break></block_content></block></else></if_stmt></block_content></block></for>

    <if_stmt pos:start="81:5" pos:end="85:47"><if pos:start="81:5" pos:end="85:47">if <condition pos:start="81:8" pos:end="81:22">(<expr pos:start="81:9" pos:end="81:21"><name pos:start="81:9" pos:end="81:21"><name pos:start="81:9" pos:end="81:18">serial_hds</name><index pos:start="81:19" pos:end="81:21">[<expr pos:start="81:20" pos:end="81:20"><name pos:start="81:20" pos:end="81:20">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="83:9" pos:end="85:47"><block_content pos:start="83:9" pos:end="85:47">

        <expr_stmt pos:start="83:9" pos:end="85:47"><expr pos:start="83:9" pos:end="85:46"><name pos:start="83:9" pos:end="83:14"><name pos:start="83:9" pos:end="83:9">s</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:14">fir</name></name> <operator pos:start="83:16" pos:end="83:16">=</operator> <call pos:start="83:18" pos:end="85:46"><name pos:start="83:18" pos:end="83:32">pxa2xx_fir_init</name><argument_list pos:start="83:33" pos:end="85:46">(<argument pos:start="83:34" pos:end="83:43"><expr pos:start="83:34" pos:end="83:43"><literal type="number" pos:start="83:34" pos:end="83:43">0x40800000</literal></expr></argument>, <argument pos:start="83:46" pos:end="83:67"><expr pos:start="83:46" pos:end="83:67"><name pos:start="83:46" pos:end="83:67"><name pos:start="83:46" pos:end="83:46">s</name><operator pos:start="83:47" pos:end="83:48">-&gt;</operator><name pos:start="83:49" pos:end="83:51">pic</name><index pos:start="83:52" pos:end="83:67">[<expr pos:start="83:53" pos:end="83:66"><name pos:start="83:53" pos:end="83:66">PXA2XX_PIC_ICP</name></expr>]</index></name></expr></argument>,

                        <argument pos:start="85:25" pos:end="85:30"><expr pos:start="85:25" pos:end="85:30"><name pos:start="85:25" pos:end="85:30"><name pos:start="85:25" pos:end="85:25">s</name><operator pos:start="85:26" pos:end="85:27">-&gt;</operator><name pos:start="85:28" pos:end="85:30">dma</name></name></expr></argument>, <argument pos:start="85:33" pos:end="85:45"><expr pos:start="85:33" pos:end="85:45"><name pos:start="85:33" pos:end="85:45"><name pos:start="85:33" pos:end="85:42">serial_hds</name><index pos:start="85:43" pos:end="85:45">[<expr pos:start="85:44" pos:end="85:44"><name pos:start="85:44" pos:end="85:44">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="89:5" pos:end="91:74"><if pos:start="89:5" pos:end="91:74">if <condition pos:start="89:8" pos:end="89:11">(<expr pos:start="89:9" pos:end="89:10"><name pos:start="89:9" pos:end="89:10">ds</name></expr>)</condition><block type="pseudo" pos:start="91:9" pos:end="91:74"><block_content pos:start="91:9" pos:end="91:74">

        <expr_stmt pos:start="91:9" pos:end="91:74"><expr pos:start="91:9" pos:end="91:73"><name pos:start="91:9" pos:end="91:14"><name pos:start="91:9" pos:end="91:9">s</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:14">lcd</name></name> <operator pos:start="91:16" pos:end="91:16">=</operator> <call pos:start="91:18" pos:end="91:73"><name pos:start="91:18" pos:end="91:33">pxa2xx_lcdc_init</name><argument_list pos:start="91:34" pos:end="91:73">(<argument pos:start="91:35" pos:end="91:44"><expr pos:start="91:35" pos:end="91:44"><literal type="number" pos:start="91:35" pos:end="91:44">0x44000000</literal></expr></argument>, <argument pos:start="91:47" pos:end="91:68"><expr pos:start="91:47" pos:end="91:68"><name pos:start="91:47" pos:end="91:68"><name pos:start="91:47" pos:end="91:47">s</name><operator pos:start="91:48" pos:end="91:49">-&gt;</operator><name pos:start="91:50" pos:end="91:52">pic</name><index pos:start="91:53" pos:end="91:68">[<expr pos:start="91:54" pos:end="91:67"><name pos:start="91:54" pos:end="91:67">PXA2XX_PIC_LCD</name></expr>]</index></name></expr></argument>, <argument pos:start="91:71" pos:end="91:72"><expr pos:start="91:71" pos:end="91:72"><name pos:start="91:71" pos:end="91:72">ds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:28"><expr pos:start="95:5" pos:end="95:27"><name pos:start="95:5" pos:end="95:14"><name pos:start="95:5" pos:end="95:5">s</name><operator pos:start="95:6" pos:end="95:7">-&gt;</operator><name pos:start="95:8" pos:end="95:14">cm_base</name></name> <operator pos:start="95:16" pos:end="95:16">=</operator> <literal type="number" pos:start="95:18" pos:end="95:27">0x41300000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:39"><expr pos:start="97:5" pos:end="97:38"><name pos:start="97:5" pos:end="97:25"><name pos:start="97:5" pos:end="97:5">s</name><operator pos:start="97:6" pos:end="97:7">-&gt;</operator><name pos:start="97:8" pos:end="97:14">cm_regs</name><index pos:start="97:15" pos:end="97:25">[<expr pos:start="97:16" pos:end="97:24"><name pos:start="97:16" pos:end="97:19">CCCR</name> <operator pos:start="97:21" pos:end="97:22">&gt;&gt;</operator> <literal type="number" pos:start="97:24" pos:end="97:24">4</literal></expr>]</index></name> <operator pos:start="97:27" pos:end="97:27">=</operator> <literal type="number" pos:start="97:29" pos:end="97:38">0x02000210</literal></expr>;</expr_stmt>	<comment type="block" pos:start="97:41" pos:end="97:55">/* 416.0 MHz */</comment>

    <expr_stmt pos:start="99:5" pos:end="99:27"><expr pos:start="99:5" pos:end="99:26"><name pos:start="99:5" pos:end="99:13"><name pos:start="99:5" pos:end="99:5">s</name><operator pos:start="99:6" pos:end="99:7">-&gt;</operator><name pos:start="99:8" pos:end="99:13">clkcfg</name></name> <operator pos:start="99:15" pos:end="99:15">=</operator> <literal type="number" pos:start="99:17" pos:end="99:26">0x00000009</literal></expr>;</expr_stmt>		<comment type="block" pos:start="99:41" pos:end="99:63">/* Turbo mode active */</comment>

    <expr_stmt pos:start="101:5" pos:end="103:42"><expr pos:start="101:5" pos:end="103:41"><name pos:start="101:5" pos:end="101:13">iomemtype</name> <operator pos:start="101:15" pos:end="101:15">=</operator> <call pos:start="101:17" pos:end="103:41"><name pos:start="101:17" pos:end="101:38">cpu_register_io_memory</name><argument_list pos:start="101:39" pos:end="103:41">(<argument pos:start="101:40" pos:end="101:40"><expr pos:start="101:40" pos:end="101:40"><literal type="number" pos:start="101:40" pos:end="101:40">0</literal></expr></argument>, <argument pos:start="101:43" pos:end="101:58"><expr pos:start="101:43" pos:end="101:58"><name pos:start="101:43" pos:end="101:58">pxa2xx_cm_readfn</name></expr></argument>,

                    <argument pos:start="103:21" pos:end="103:37"><expr pos:start="103:21" pos:end="103:37"><name pos:start="103:21" pos:end="103:37">pxa2xx_cm_writefn</name></expr></argument>, <argument pos:start="103:40" pos:end="103:40"><expr pos:start="103:40" pos:end="103:40"><name pos:start="103:40" pos:end="103:40">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:63"><expr pos:start="105:5" pos:end="105:62"><call pos:start="105:5" pos:end="105:62"><name pos:start="105:5" pos:end="105:32">cpu_register_physical_memory</name><argument_list pos:start="105:33" pos:end="105:62">(<argument pos:start="105:34" pos:end="105:43"><expr pos:start="105:34" pos:end="105:43"><name pos:start="105:34" pos:end="105:43"><name pos:start="105:34" pos:end="105:34">s</name><operator pos:start="105:35" pos:end="105:36">-&gt;</operator><name pos:start="105:37" pos:end="105:43">cm_base</name></name></expr></argument>, <argument pos:start="105:46" pos:end="105:50"><expr pos:start="105:46" pos:end="105:50"><literal type="number" pos:start="105:46" pos:end="105:50">0xfff</literal></expr></argument>, <argument pos:start="105:53" pos:end="105:61"><expr pos:start="105:53" pos:end="105:61"><name pos:start="105:53" pos:end="105:61">iomemtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:74"><expr pos:start="107:5" pos:end="107:73"><call pos:start="107:5" pos:end="107:73"><name pos:start="107:5" pos:end="107:19">register_savevm</name><argument_list pos:start="107:20" pos:end="107:73">(<argument pos:start="107:21" pos:end="107:31"><expr pos:start="107:21" pos:end="107:31"><literal type="string" pos:start="107:21" pos:end="107:31">"pxa2xx_cm"</literal></expr></argument>, <argument pos:start="107:34" pos:end="107:34"><expr pos:start="107:34" pos:end="107:34"><literal type="number" pos:start="107:34" pos:end="107:34">0</literal></expr></argument>, <argument pos:start="107:37" pos:end="107:37"><expr pos:start="107:37" pos:end="107:37"><literal type="number" pos:start="107:37" pos:end="107:37">0</literal></expr></argument>, <argument pos:start="107:40" pos:end="107:53"><expr pos:start="107:40" pos:end="107:53"><name pos:start="107:40" pos:end="107:53">pxa2xx_cm_save</name></expr></argument>, <argument pos:start="107:56" pos:end="107:69"><expr pos:start="107:56" pos:end="107:69"><name pos:start="107:56" pos:end="107:69">pxa2xx_cm_load</name></expr></argument>, <argument pos:start="107:72" pos:end="107:72"><expr pos:start="107:72" pos:end="107:72"><name pos:start="107:72" pos:end="107:72">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="111:5" pos:end="111:74"><expr pos:start="111:5" pos:end="111:73"><call pos:start="111:5" pos:end="111:73"><name pos:start="111:5" pos:end="111:21">cpu_arm_set_cp_io</name><argument_list pos:start="111:22" pos:end="111:73">(<argument pos:start="111:23" pos:end="111:28"><expr pos:start="111:23" pos:end="111:28"><name pos:start="111:23" pos:end="111:28"><name pos:start="111:23" pos:end="111:23">s</name><operator pos:start="111:24" pos:end="111:25">-&gt;</operator><name pos:start="111:26" pos:end="111:28">env</name></name></expr></argument>, <argument pos:start="111:31" pos:end="111:32"><expr pos:start="111:31" pos:end="111:32"><literal type="number" pos:start="111:31" pos:end="111:32">14</literal></expr></argument>, <argument pos:start="111:35" pos:end="111:50"><expr pos:start="111:35" pos:end="111:50"><name pos:start="111:35" pos:end="111:50">pxa2xx_cp14_read</name></expr></argument>, <argument pos:start="111:53" pos:end="111:69"><expr pos:start="111:53" pos:end="111:69"><name pos:start="111:53" pos:end="111:69">pxa2xx_cp14_write</name></expr></argument>, <argument pos:start="111:72" pos:end="111:72"><expr pos:start="111:72" pos:end="111:72"><name pos:start="111:72" pos:end="111:72">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="115:5" pos:end="115:28"><expr pos:start="115:5" pos:end="115:27"><name pos:start="115:5" pos:end="115:14"><name pos:start="115:5" pos:end="115:5">s</name><operator pos:start="115:6" pos:end="115:7">-&gt;</operator><name pos:start="115:8" pos:end="115:14">mm_base</name></name> <operator pos:start="115:16" pos:end="115:16">=</operator> <literal type="number" pos:start="115:18" pos:end="115:27">0x48000000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:40"><expr pos:start="117:5" pos:end="117:39"><name pos:start="117:5" pos:end="117:26"><name pos:start="117:5" pos:end="117:5">s</name><operator pos:start="117:6" pos:end="117:7">-&gt;</operator><name pos:start="117:8" pos:end="117:14">mm_regs</name><index pos:start="117:15" pos:end="117:26">[<expr pos:start="117:16" pos:end="117:25"><name pos:start="117:16" pos:end="117:20">MDMRS</name> <operator pos:start="117:22" pos:end="117:23">&gt;&gt;</operator> <literal type="number" pos:start="117:25" pos:end="117:25">2</literal></expr>]</index></name> <operator pos:start="117:28" pos:end="117:28">=</operator> <literal type="number" pos:start="117:30" pos:end="117:39">0x00020002</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:41"><expr pos:start="119:5" pos:end="119:40"><name pos:start="119:5" pos:end="119:27"><name pos:start="119:5" pos:end="119:5">s</name><operator pos:start="119:6" pos:end="119:7">-&gt;</operator><name pos:start="119:8" pos:end="119:14">mm_regs</name><index pos:start="119:15" pos:end="119:27">[<expr pos:start="119:16" pos:end="119:26"><name pos:start="119:16" pos:end="119:21">MDREFR</name> <operator pos:start="119:23" pos:end="119:24">&gt;&gt;</operator> <literal type="number" pos:start="119:26" pos:end="119:26">2</literal></expr>]</index></name> <operator pos:start="119:29" pos:end="119:29">=</operator> <literal type="number" pos:start="119:31" pos:end="119:40">0x03ca4000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:39"><expr pos:start="121:5" pos:end="121:38"><name pos:start="121:5" pos:end="121:25"><name pos:start="121:5" pos:end="121:5">s</name><operator pos:start="121:6" pos:end="121:7">-&gt;</operator><name pos:start="121:8" pos:end="121:14">mm_regs</name><index pos:start="121:15" pos:end="121:25">[<expr pos:start="121:16" pos:end="121:24"><name pos:start="121:16" pos:end="121:19">MECR</name> <operator pos:start="121:21" pos:end="121:22">&gt;&gt;</operator> <literal type="number" pos:start="121:24" pos:end="121:24">2</literal></expr>]</index></name> <operator pos:start="121:27" pos:end="121:27">=</operator> <literal type="number" pos:start="121:29" pos:end="121:38">0x00000001</literal></expr>;</expr_stmt>	<comment type="block" pos:start="121:41" pos:end="121:65">/* Two PC Card sockets */</comment>

    <expr_stmt pos:start="123:5" pos:end="125:42"><expr pos:start="123:5" pos:end="125:41"><name pos:start="123:5" pos:end="123:13">iomemtype</name> <operator pos:start="123:15" pos:end="123:15">=</operator> <call pos:start="123:17" pos:end="125:41"><name pos:start="123:17" pos:end="123:38">cpu_register_io_memory</name><argument_list pos:start="123:39" pos:end="125:41">(<argument pos:start="123:40" pos:end="123:40"><expr pos:start="123:40" pos:end="123:40"><literal type="number" pos:start="123:40" pos:end="123:40">0</literal></expr></argument>, <argument pos:start="123:43" pos:end="123:58"><expr pos:start="123:43" pos:end="123:58"><name pos:start="123:43" pos:end="123:58">pxa2xx_mm_readfn</name></expr></argument>,

                    <argument pos:start="125:21" pos:end="125:37"><expr pos:start="125:21" pos:end="125:37"><name pos:start="125:21" pos:end="125:37">pxa2xx_mm_writefn</name></expr></argument>, <argument pos:start="125:40" pos:end="125:40"><expr pos:start="125:40" pos:end="125:40"><name pos:start="125:40" pos:end="125:40">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:63"><expr pos:start="127:5" pos:end="127:62"><call pos:start="127:5" pos:end="127:62"><name pos:start="127:5" pos:end="127:32">cpu_register_physical_memory</name><argument_list pos:start="127:33" pos:end="127:62">(<argument pos:start="127:34" pos:end="127:43"><expr pos:start="127:34" pos:end="127:43"><name pos:start="127:34" pos:end="127:43"><name pos:start="127:34" pos:end="127:34">s</name><operator pos:start="127:35" pos:end="127:36">-&gt;</operator><name pos:start="127:37" pos:end="127:43">mm_base</name></name></expr></argument>, <argument pos:start="127:46" pos:end="127:50"><expr pos:start="127:46" pos:end="127:50"><literal type="number" pos:start="127:46" pos:end="127:50">0xfff</literal></expr></argument>, <argument pos:start="127:53" pos:end="127:61"><expr pos:start="127:53" pos:end="127:61"><name pos:start="127:53" pos:end="127:61">iomemtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:74"><expr pos:start="129:5" pos:end="129:73"><call pos:start="129:5" pos:end="129:73"><name pos:start="129:5" pos:end="129:19">register_savevm</name><argument_list pos:start="129:20" pos:end="129:73">(<argument pos:start="129:21" pos:end="129:31"><expr pos:start="129:21" pos:end="129:31"><literal type="string" pos:start="129:21" pos:end="129:31">"pxa2xx_mm"</literal></expr></argument>, <argument pos:start="129:34" pos:end="129:34"><expr pos:start="129:34" pos:end="129:34"><literal type="number" pos:start="129:34" pos:end="129:34">0</literal></expr></argument>, <argument pos:start="129:37" pos:end="129:37"><expr pos:start="129:37" pos:end="129:37"><literal type="number" pos:start="129:37" pos:end="129:37">0</literal></expr></argument>, <argument pos:start="129:40" pos:end="129:53"><expr pos:start="129:40" pos:end="129:53"><name pos:start="129:40" pos:end="129:53">pxa2xx_mm_save</name></expr></argument>, <argument pos:start="129:56" pos:end="129:69"><expr pos:start="129:56" pos:end="129:69"><name pos:start="129:56" pos:end="129:69">pxa2xx_mm_load</name></expr></argument>, <argument pos:start="129:72" pos:end="129:72"><expr pos:start="129:72" pos:end="129:72"><name pos:start="129:72" pos:end="129:72">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="133:5" pos:end="133:28"><expr pos:start="133:5" pos:end="133:27"><name pos:start="133:5" pos:end="133:14"><name pos:start="133:5" pos:end="133:5">s</name><operator pos:start="133:6" pos:end="133:7">-&gt;</operator><name pos:start="133:8" pos:end="133:14">pm_base</name></name> <operator pos:start="133:16" pos:end="133:16">=</operator> <literal type="number" pos:start="133:18" pos:end="133:27">0x40f00000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="137:42"><expr pos:start="135:5" pos:end="137:41"><name pos:start="135:5" pos:end="135:13">iomemtype</name> <operator pos:start="135:15" pos:end="135:15">=</operator> <call pos:start="135:17" pos:end="137:41"><name pos:start="135:17" pos:end="135:38">cpu_register_io_memory</name><argument_list pos:start="135:39" pos:end="137:41">(<argument pos:start="135:40" pos:end="135:40"><expr pos:start="135:40" pos:end="135:40"><literal type="number" pos:start="135:40" pos:end="135:40">0</literal></expr></argument>, <argument pos:start="135:43" pos:end="135:58"><expr pos:start="135:43" pos:end="135:58"><name pos:start="135:43" pos:end="135:58">pxa2xx_pm_readfn</name></expr></argument>,

                    <argument pos:start="137:21" pos:end="137:37"><expr pos:start="137:21" pos:end="137:37"><name pos:start="137:21" pos:end="137:37">pxa2xx_pm_writefn</name></expr></argument>, <argument pos:start="137:40" pos:end="137:40"><expr pos:start="137:40" pos:end="137:40"><name pos:start="137:40" pos:end="137:40">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:62"><expr pos:start="139:5" pos:end="139:61"><call pos:start="139:5" pos:end="139:61"><name pos:start="139:5" pos:end="139:32">cpu_register_physical_memory</name><argument_list pos:start="139:33" pos:end="139:61">(<argument pos:start="139:34" pos:end="139:43"><expr pos:start="139:34" pos:end="139:43"><name pos:start="139:34" pos:end="139:43"><name pos:start="139:34" pos:end="139:34">s</name><operator pos:start="139:35" pos:end="139:36">-&gt;</operator><name pos:start="139:37" pos:end="139:43">pm_base</name></name></expr></argument>, <argument pos:start="139:46" pos:end="139:49"><expr pos:start="139:46" pos:end="139:49"><literal type="number" pos:start="139:46" pos:end="139:49">0xff</literal></expr></argument>, <argument pos:start="139:52" pos:end="139:60"><expr pos:start="139:52" pos:end="139:60"><name pos:start="139:52" pos:end="139:60">iomemtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:74"><expr pos:start="141:5" pos:end="141:73"><call pos:start="141:5" pos:end="141:73"><name pos:start="141:5" pos:end="141:19">register_savevm</name><argument_list pos:start="141:20" pos:end="141:73">(<argument pos:start="141:21" pos:end="141:31"><expr pos:start="141:21" pos:end="141:31"><literal type="string" pos:start="141:21" pos:end="141:31">"pxa2xx_pm"</literal></expr></argument>, <argument pos:start="141:34" pos:end="141:34"><expr pos:start="141:34" pos:end="141:34"><literal type="number" pos:start="141:34" pos:end="141:34">0</literal></expr></argument>, <argument pos:start="141:37" pos:end="141:37"><expr pos:start="141:37" pos:end="141:37"><literal type="number" pos:start="141:37" pos:end="141:37">0</literal></expr></argument>, <argument pos:start="141:40" pos:end="141:53"><expr pos:start="141:40" pos:end="141:53"><name pos:start="141:40" pos:end="141:53">pxa2xx_pm_save</name></expr></argument>, <argument pos:start="141:56" pos:end="141:69"><expr pos:start="141:56" pos:end="141:69"><name pos:start="141:56" pos:end="141:69">pxa2xx_pm_load</name></expr></argument>, <argument pos:start="141:72" pos:end="141:72"><expr pos:start="141:72" pos:end="141:72"><name pos:start="141:72" pos:end="141:72">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="145:5" pos:end="145:45">for <control pos:start="145:9" pos:end="145:44">(<init pos:start="145:10" pos:end="145:15"><expr pos:start="145:10" pos:end="145:14"><name pos:start="145:10" pos:end="145:10">i</name> <operator pos:start="145:12" pos:end="145:12">=</operator> <literal type="number" pos:start="145:14" pos:end="145:14">0</literal></expr>;</init> <condition pos:start="145:17" pos:end="145:38"><expr pos:start="145:17" pos:end="145:37"><name pos:start="145:17" pos:end="145:29"><name pos:start="145:17" pos:end="145:26">pxa27x_ssp</name><index pos:start="145:27" pos:end="145:29">[<expr pos:start="145:28" pos:end="145:28"><name pos:start="145:28" pos:end="145:28">i</name></expr>]</index></name><operator pos:start="145:30" pos:end="145:30">.</operator><name pos:start="145:31" pos:end="145:37">io_base</name></expr>;</condition> <incr pos:start="145:40" pos:end="145:43"><expr pos:start="145:40" pos:end="145:43"><name pos:start="145:40" pos:end="145:40">i</name> <operator pos:start="145:42" pos:end="145:43">++</operator></expr></incr>)</control><block type="pseudo" pos:start="145:45" pos:end="145:45"><block_content pos:start="145:45" pos:end="145:45"><empty_stmt pos:start="145:45" pos:end="145:45">;</empty_stmt></block_content></block></for>

    <expr_stmt pos:start="147:5" pos:end="149:60"><expr pos:start="147:5" pos:end="149:59"><name pos:start="147:5" pos:end="147:10"><name pos:start="147:5" pos:end="147:5">s</name><operator pos:start="147:6" pos:end="147:7">-&gt;</operator><name pos:start="147:8" pos:end="147:10">ssp</name></name> <operator pos:start="147:12" pos:end="147:12">=</operator> <operator pos:start="147:14" pos:end="147:14">(</operator>struct <name pos:start="147:22" pos:end="147:33">pxa2xx_ssp_s</name> <operator pos:start="147:35" pos:end="147:35">*</operator><operator pos:start="147:36" pos:end="147:36">*</operator><operator pos:start="147:37" pos:end="147:37">)</operator>

            <call pos:start="149:13" pos:end="149:59"><name pos:start="149:13" pos:end="149:24">qemu_mallocz</name><argument_list pos:start="149:25" pos:end="149:59">(<argument pos:start="149:26" pos:end="149:58"><expr pos:start="149:26" pos:end="149:58"><sizeof pos:start="149:26" pos:end="149:54">sizeof<argument_list pos:start="149:32" pos:end="149:54">(<argument pos:start="149:33" pos:end="149:53"><expr pos:start="149:33" pos:end="149:53">struct <name pos:start="149:40" pos:end="149:51">pxa2xx_ssp_s</name> <operator pos:start="149:53" pos:end="149:53">*</operator></expr></argument>)</argument_list></sizeof> <operator pos:start="149:56" pos:end="149:56">*</operator> <name pos:start="149:58" pos:end="149:58">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="153:58"><expr pos:start="151:5" pos:end="153:57"><name pos:start="151:5" pos:end="151:7">ssp</name> <operator pos:start="151:9" pos:end="151:9">=</operator> <operator pos:start="151:11" pos:end="151:11">(</operator>struct <name pos:start="151:19" pos:end="151:30">pxa2xx_ssp_s</name> <operator pos:start="151:32" pos:end="151:32">*</operator><operator pos:start="151:33" pos:end="151:33">)</operator>

            <call pos:start="153:13" pos:end="153:57"><name pos:start="153:13" pos:end="153:24">qemu_mallocz</name><argument_list pos:start="153:25" pos:end="153:57">(<argument pos:start="153:26" pos:end="153:56"><expr pos:start="153:26" pos:end="153:56"><sizeof pos:start="153:26" pos:end="153:52">sizeof<argument_list pos:start="153:32" pos:end="153:52">(<argument pos:start="153:33" pos:end="153:51"><expr pos:start="153:33" pos:end="153:51">struct <name pos:start="153:40" pos:end="153:51">pxa2xx_ssp_s</name></expr></argument>)</argument_list></sizeof> <operator pos:start="153:54" pos:end="153:54">*</operator> <name pos:start="153:56" pos:end="153:56">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="155:5" pos:end="175:5">for <control pos:start="155:9" pos:end="155:44">(<init pos:start="155:10" pos:end="155:15"><expr pos:start="155:10" pos:end="155:14"><name pos:start="155:10" pos:end="155:10">i</name> <operator pos:start="155:12" pos:end="155:12">=</operator> <literal type="number" pos:start="155:14" pos:end="155:14">0</literal></expr>;</init> <condition pos:start="155:17" pos:end="155:38"><expr pos:start="155:17" pos:end="155:37"><name pos:start="155:17" pos:end="155:29"><name pos:start="155:17" pos:end="155:26">pxa27x_ssp</name><index pos:start="155:27" pos:end="155:29">[<expr pos:start="155:28" pos:end="155:28"><name pos:start="155:28" pos:end="155:28">i</name></expr>]</index></name><operator pos:start="155:30" pos:end="155:30">.</operator><name pos:start="155:31" pos:end="155:37">io_base</name></expr>;</condition> <incr pos:start="155:40" pos:end="155:43"><expr pos:start="155:40" pos:end="155:43"><name pos:start="155:40" pos:end="155:40">i</name> <operator pos:start="155:42" pos:end="155:43">++</operator></expr></incr>)</control> <block pos:start="155:46" pos:end="175:5">{<block_content pos:start="157:9" pos:end="173:61">

        <expr_stmt pos:start="157:9" pos:end="157:28"><expr pos:start="157:9" pos:end="157:27"><name pos:start="157:9" pos:end="157:17"><name pos:start="157:9" pos:end="157:9">s</name><operator pos:start="157:10" pos:end="157:11">-&gt;</operator><name pos:start="157:12" pos:end="157:14">ssp</name><index pos:start="157:15" pos:end="157:17">[<expr pos:start="157:16" pos:end="157:16"><name pos:start="157:16" pos:end="157:16">i</name></expr>]</index></name> <operator pos:start="157:19" pos:end="157:19">=</operator> <operator pos:start="157:21" pos:end="157:21">&amp;</operator><name pos:start="157:22" pos:end="157:27"><name pos:start="157:22" pos:end="157:24">ssp</name><index pos:start="157:25" pos:end="157:27">[<expr pos:start="157:26" pos:end="157:26"><name pos:start="157:26" pos:end="157:26">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:44"><expr pos:start="159:9" pos:end="159:43"><name pos:start="159:9" pos:end="159:14"><name pos:start="159:9" pos:end="159:11">ssp</name><index pos:start="159:12" pos:end="159:14">[<expr pos:start="159:13" pos:end="159:13"><name pos:start="159:13" pos:end="159:13">i</name></expr>]</index></name><operator pos:start="159:15" pos:end="159:15">.</operator><name pos:start="159:16" pos:end="159:19">base</name> <operator pos:start="159:21" pos:end="159:21">=</operator> <name pos:start="159:23" pos:end="159:35"><name pos:start="159:23" pos:end="159:32">pxa27x_ssp</name><index pos:start="159:33" pos:end="159:35">[<expr pos:start="159:34" pos:end="159:34"><name pos:start="159:34" pos:end="159:34">i</name></expr>]</index></name><operator pos:start="159:36" pos:end="159:36">.</operator><name pos:start="159:37" pos:end="159:43">io_base</name></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:48"><expr pos:start="161:9" pos:end="161:47"><name pos:start="161:9" pos:end="161:14"><name pos:start="161:9" pos:end="161:11">ssp</name><index pos:start="161:12" pos:end="161:14">[<expr pos:start="161:13" pos:end="161:13"><name pos:start="161:13" pos:end="161:13">i</name></expr>]</index></name><operator pos:start="161:15" pos:end="161:15">.</operator><name pos:start="161:16" pos:end="161:18">irq</name> <operator pos:start="161:20" pos:end="161:20">=</operator> <name pos:start="161:22" pos:end="161:47"><name pos:start="161:22" pos:end="161:22">s</name><operator pos:start="161:23" pos:end="161:24">-&gt;</operator><name pos:start="161:25" pos:end="161:27">pic</name><index pos:start="161:28" pos:end="161:47">[<expr pos:start="161:29" pos:end="161:46"><name pos:start="161:29" pos:end="161:41"><name pos:start="161:29" pos:end="161:38">pxa27x_ssp</name><index pos:start="161:39" pos:end="161:41">[<expr pos:start="161:40" pos:end="161:40"><name pos:start="161:40" pos:end="161:40">i</name></expr>]</index></name><operator pos:start="161:42" pos:end="161:42">.</operator><name pos:start="161:43" pos:end="161:46">irqn</name></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="165:9" pos:end="167:53"><expr pos:start="165:9" pos:end="167:52"><name pos:start="165:9" pos:end="165:17">iomemtype</name> <operator pos:start="165:19" pos:end="165:19">=</operator> <call pos:start="165:21" pos:end="167:52"><name pos:start="165:21" pos:end="165:42">cpu_register_io_memory</name><argument_list pos:start="165:43" pos:end="167:52">(<argument pos:start="165:44" pos:end="165:44"><expr pos:start="165:44" pos:end="165:44"><literal type="number" pos:start="165:44" pos:end="165:44">0</literal></expr></argument>, <argument pos:start="165:47" pos:end="165:63"><expr pos:start="165:47" pos:end="165:63"><name pos:start="165:47" pos:end="165:63">pxa2xx_ssp_readfn</name></expr></argument>,

                        <argument pos:start="167:25" pos:end="167:42"><expr pos:start="167:25" pos:end="167:42"><name pos:start="167:25" pos:end="167:42">pxa2xx_ssp_writefn</name></expr></argument>, <argument pos:start="167:45" pos:end="167:51"><expr pos:start="167:45" pos:end="167:51"><operator pos:start="167:45" pos:end="167:45">&amp;</operator><name pos:start="167:46" pos:end="167:51"><name pos:start="167:46" pos:end="167:48">ssp</name><index pos:start="167:49" pos:end="167:51">[<expr pos:start="167:50" pos:end="167:50"><name pos:start="167:50" pos:end="167:50">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:68"><expr pos:start="169:9" pos:end="169:67"><call pos:start="169:9" pos:end="169:67"><name pos:start="169:9" pos:end="169:36">cpu_register_physical_memory</name><argument_list pos:start="169:37" pos:end="169:67">(<argument pos:start="169:38" pos:end="169:48"><expr pos:start="169:38" pos:end="169:48"><name pos:start="169:38" pos:end="169:43"><name pos:start="169:38" pos:end="169:40">ssp</name><index pos:start="169:41" pos:end="169:43">[<expr pos:start="169:42" pos:end="169:42"><name pos:start="169:42" pos:end="169:42">i</name></expr>]</index></name><operator pos:start="169:44" pos:end="169:44">.</operator><name pos:start="169:45" pos:end="169:48">base</name></expr></argument>, <argument pos:start="169:51" pos:end="169:55"><expr pos:start="169:51" pos:end="169:55"><literal type="number" pos:start="169:51" pos:end="169:55">0xfff</literal></expr></argument>, <argument pos:start="169:58" pos:end="169:66"><expr pos:start="169:58" pos:end="169:66"><name pos:start="169:58" pos:end="169:66">iomemtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="173:61"><expr pos:start="171:9" pos:end="173:60"><call pos:start="171:9" pos:end="173:60"><name pos:start="171:9" pos:end="171:23">register_savevm</name><argument_list pos:start="171:24" pos:end="173:60">(<argument pos:start="171:25" pos:end="171:36"><expr pos:start="171:25" pos:end="171:36"><literal type="string" pos:start="171:25" pos:end="171:36">"pxa2xx_ssp"</literal></expr></argument>, <argument pos:start="171:39" pos:end="171:39"><expr pos:start="171:39" pos:end="171:39"><name pos:start="171:39" pos:end="171:39">i</name></expr></argument>, <argument pos:start="171:42" pos:end="171:42"><expr pos:start="171:42" pos:end="171:42"><literal type="number" pos:start="171:42" pos:end="171:42">0</literal></expr></argument>,

                        <argument pos:start="173:25" pos:end="173:39"><expr pos:start="173:25" pos:end="173:39"><name pos:start="173:25" pos:end="173:39">pxa2xx_ssp_save</name></expr></argument>, <argument pos:start="173:42" pos:end="173:56"><expr pos:start="173:42" pos:end="173:56"><name pos:start="173:42" pos:end="173:56">pxa2xx_ssp_load</name></expr></argument>, <argument pos:start="173:59" pos:end="173:59"><expr pos:start="173:59" pos:end="173:59"><name pos:start="173:59" pos:end="173:59">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="179:5" pos:end="183:5"><if pos:start="179:5" pos:end="183:5">if <condition pos:start="179:8" pos:end="179:20">(<expr pos:start="179:9" pos:end="179:19"><name pos:start="179:9" pos:end="179:19">usb_enabled</name></expr>)</condition> <block pos:start="179:22" pos:end="183:5">{<block_content pos:start="181:9" pos:end="181:71">

        <expr_stmt pos:start="181:9" pos:end="181:71"><expr pos:start="181:9" pos:end="181:70"><call pos:start="181:9" pos:end="181:70"><name pos:start="181:9" pos:end="181:25">usb_ohci_init_pxa</name><argument_list pos:start="181:26" pos:end="181:70">(<argument pos:start="181:27" pos:end="181:36"><expr pos:start="181:27" pos:end="181:36"><literal type="number" pos:start="181:27" pos:end="181:36">0x4c000000</literal></expr></argument>, <argument pos:start="181:39" pos:end="181:39"><expr pos:start="181:39" pos:end="181:39"><literal type="number" pos:start="181:39" pos:end="181:39">3</literal></expr></argument>, <argument pos:start="181:42" pos:end="181:43"><expr pos:start="181:42" pos:end="181:43"><operator pos:start="181:42" pos:end="181:42">-</operator><literal type="number" pos:start="181:43" pos:end="181:43">1</literal></expr></argument>, <argument pos:start="181:46" pos:end="181:69"><expr pos:start="181:46" pos:end="181:69"><name pos:start="181:46" pos:end="181:69"><name pos:start="181:46" pos:end="181:46">s</name><operator pos:start="181:47" pos:end="181:48">-&gt;</operator><name pos:start="181:49" pos:end="181:51">pic</name><index pos:start="181:52" pos:end="181:69">[<expr pos:start="181:53" pos:end="181:68"><name pos:start="181:53" pos:end="181:68">PXA2XX_PIC_USBH1</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="187:5" pos:end="187:50"><expr pos:start="187:5" pos:end="187:49"><name pos:start="187:5" pos:end="187:16"><name pos:start="187:5" pos:end="187:5">s</name><operator pos:start="187:6" pos:end="187:7">-&gt;</operator><name pos:start="187:8" pos:end="187:13">pcmcia</name><index pos:start="187:14" pos:end="187:16">[<expr pos:start="187:15" pos:end="187:15"><literal type="number" pos:start="187:15" pos:end="187:15">0</literal></expr>]</index></name> <operator pos:start="187:18" pos:end="187:18">=</operator> <call pos:start="187:20" pos:end="187:49"><name pos:start="187:20" pos:end="187:37">pxa2xx_pcmcia_init</name><argument_list pos:start="187:38" pos:end="187:49">(<argument pos:start="187:39" pos:end="187:48"><expr pos:start="187:39" pos:end="187:48"><literal type="number" pos:start="187:39" pos:end="187:48">0x20000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="189:5" pos:end="189:50"><expr pos:start="189:5" pos:end="189:49"><name pos:start="189:5" pos:end="189:16"><name pos:start="189:5" pos:end="189:5">s</name><operator pos:start="189:6" pos:end="189:7">-&gt;</operator><name pos:start="189:8" pos:end="189:13">pcmcia</name><index pos:start="189:14" pos:end="189:16">[<expr pos:start="189:15" pos:end="189:15"><literal type="number" pos:start="189:15" pos:end="189:15">1</literal></expr>]</index></name> <operator pos:start="189:18" pos:end="189:18">=</operator> <call pos:start="189:20" pos:end="189:49"><name pos:start="189:20" pos:end="189:37">pxa2xx_pcmcia_init</name><argument_list pos:start="189:38" pos:end="189:49">(<argument pos:start="189:39" pos:end="189:48"><expr pos:start="189:39" pos:end="189:48"><literal type="number" pos:start="189:39" pos:end="189:48">0x30000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="193:5" pos:end="193:29"><expr pos:start="193:5" pos:end="193:28"><name pos:start="193:5" pos:end="193:15"><name pos:start="193:5" pos:end="193:5">s</name><operator pos:start="193:6" pos:end="193:7">-&gt;</operator><name pos:start="193:8" pos:end="193:15">rtc_base</name></name> <operator pos:start="193:17" pos:end="193:17">=</operator> <literal type="number" pos:start="193:19" pos:end="193:28">0x40900000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="195:5" pos:end="197:43"><expr pos:start="195:5" pos:end="197:42"><name pos:start="195:5" pos:end="195:13">iomemtype</name> <operator pos:start="195:15" pos:end="195:15">=</operator> <call pos:start="195:17" pos:end="197:42"><name pos:start="195:17" pos:end="195:38">cpu_register_io_memory</name><argument_list pos:start="195:39" pos:end="197:42">(<argument pos:start="195:40" pos:end="195:40"><expr pos:start="195:40" pos:end="195:40"><literal type="number" pos:start="195:40" pos:end="195:40">0</literal></expr></argument>, <argument pos:start="195:43" pos:end="195:59"><expr pos:start="195:43" pos:end="195:59"><name pos:start="195:43" pos:end="195:59">pxa2xx_rtc_readfn</name></expr></argument>,

                    <argument pos:start="197:21" pos:end="197:38"><expr pos:start="197:21" pos:end="197:38"><name pos:start="197:21" pos:end="197:38">pxa2xx_rtc_writefn</name></expr></argument>, <argument pos:start="197:41" pos:end="197:41"><expr pos:start="197:41" pos:end="197:41"><name pos:start="197:41" pos:end="197:41">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:64"><expr pos:start="199:5" pos:end="199:63"><call pos:start="199:5" pos:end="199:63"><name pos:start="199:5" pos:end="199:32">cpu_register_physical_memory</name><argument_list pos:start="199:33" pos:end="199:63">(<argument pos:start="199:34" pos:end="199:44"><expr pos:start="199:34" pos:end="199:44"><name pos:start="199:34" pos:end="199:44"><name pos:start="199:34" pos:end="199:34">s</name><operator pos:start="199:35" pos:end="199:36">-&gt;</operator><name pos:start="199:37" pos:end="199:44">rtc_base</name></name></expr></argument>, <argument pos:start="199:47" pos:end="199:51"><expr pos:start="199:47" pos:end="199:51"><literal type="number" pos:start="199:47" pos:end="199:51">0xfff</literal></expr></argument>, <argument pos:start="199:54" pos:end="199:62"><expr pos:start="199:54" pos:end="199:62"><name pos:start="199:54" pos:end="199:62">iomemtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="201:5" pos:end="201:23"><expr pos:start="201:5" pos:end="201:22"><call pos:start="201:5" pos:end="201:22"><name pos:start="201:5" pos:end="201:19">pxa2xx_rtc_init</name><argument_list pos:start="201:20" pos:end="201:22">(<argument pos:start="201:21" pos:end="201:21"><expr pos:start="201:21" pos:end="201:21"><name pos:start="201:21" pos:end="201:21">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="203:5" pos:end="203:77"><expr pos:start="203:5" pos:end="203:76"><call pos:start="203:5" pos:end="203:76"><name pos:start="203:5" pos:end="203:19">register_savevm</name><argument_list pos:start="203:20" pos:end="203:76">(<argument pos:start="203:21" pos:end="203:32"><expr pos:start="203:21" pos:end="203:32"><literal type="string" pos:start="203:21" pos:end="203:32">"pxa2xx_rtc"</literal></expr></argument>, <argument pos:start="203:35" pos:end="203:35"><expr pos:start="203:35" pos:end="203:35"><literal type="number" pos:start="203:35" pos:end="203:35">0</literal></expr></argument>, <argument pos:start="203:38" pos:end="203:38"><expr pos:start="203:38" pos:end="203:38"><literal type="number" pos:start="203:38" pos:end="203:38">0</literal></expr></argument>, <argument pos:start="203:41" pos:end="203:55"><expr pos:start="203:41" pos:end="203:55"><name pos:start="203:41" pos:end="203:55">pxa2xx_rtc_save</name></expr></argument>, <argument pos:start="203:58" pos:end="203:72"><expr pos:start="203:58" pos:end="203:72"><name pos:start="203:58" pos:end="203:72">pxa2xx_rtc_load</name></expr></argument>, <argument pos:start="203:75" pos:end="203:75"><expr pos:start="203:75" pos:end="203:75"><name pos:start="203:75" pos:end="203:75">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="207:5" pos:end="207:76"><expr pos:start="207:5" pos:end="207:75"><name pos:start="207:5" pos:end="207:13"><name pos:start="207:5" pos:end="207:5">s</name><operator pos:start="207:6" pos:end="207:7">-&gt;</operator><name pos:start="207:8" pos:end="207:10">i2c</name><index pos:start="207:11" pos:end="207:13">[<expr pos:start="207:12" pos:end="207:12"><literal type="number" pos:start="207:12" pos:end="207:12">0</literal></expr>]</index></name> <operator pos:start="207:15" pos:end="207:15">=</operator> <call pos:start="207:17" pos:end="207:75"><name pos:start="207:17" pos:end="207:31">pxa2xx_i2c_init</name><argument_list pos:start="207:32" pos:end="207:75">(<argument pos:start="207:33" pos:end="207:42"><expr pos:start="207:33" pos:end="207:42"><literal type="number" pos:start="207:33" pos:end="207:42">0x40301600</literal></expr></argument>, <argument pos:start="207:45" pos:end="207:66"><expr pos:start="207:45" pos:end="207:66"><name pos:start="207:45" pos:end="207:66"><name pos:start="207:45" pos:end="207:45">s</name><operator pos:start="207:46" pos:end="207:47">-&gt;</operator><name pos:start="207:48" pos:end="207:50">pic</name><index pos:start="207:51" pos:end="207:66">[<expr pos:start="207:52" pos:end="207:65"><name pos:start="207:52" pos:end="207:65">PXA2XX_PIC_I2C</name></expr>]</index></name></expr></argument>, <argument pos:start="207:69" pos:end="207:74"><expr pos:start="207:69" pos:end="207:74"><literal type="number" pos:start="207:69" pos:end="207:74">0xffff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="209:5" pos:end="209:77"><expr pos:start="209:5" pos:end="209:76"><name pos:start="209:5" pos:end="209:13"><name pos:start="209:5" pos:end="209:5">s</name><operator pos:start="209:6" pos:end="209:7">-&gt;</operator><name pos:start="209:8" pos:end="209:10">i2c</name><index pos:start="209:11" pos:end="209:13">[<expr pos:start="209:12" pos:end="209:12"><literal type="number" pos:start="209:12" pos:end="209:12">1</literal></expr>]</index></name> <operator pos:start="209:15" pos:end="209:15">=</operator> <call pos:start="209:17" pos:end="209:76"><name pos:start="209:17" pos:end="209:31">pxa2xx_i2c_init</name><argument_list pos:start="209:32" pos:end="209:76">(<argument pos:start="209:33" pos:end="209:42"><expr pos:start="209:33" pos:end="209:42"><literal type="number" pos:start="209:33" pos:end="209:42">0x40f00100</literal></expr></argument>, <argument pos:start="209:45" pos:end="209:69"><expr pos:start="209:45" pos:end="209:69"><name pos:start="209:45" pos:end="209:69"><name pos:start="209:45" pos:end="209:45">s</name><operator pos:start="209:46" pos:end="209:47">-&gt;</operator><name pos:start="209:48" pos:end="209:50">pic</name><index pos:start="209:51" pos:end="209:69">[<expr pos:start="209:52" pos:end="209:68"><name pos:start="209:52" pos:end="209:68">PXA2XX_PIC_PWRI2C</name></expr>]</index></name></expr></argument>, <argument pos:start="209:72" pos:end="209:75"><expr pos:start="209:72" pos:end="209:75"><literal type="number" pos:start="209:72" pos:end="209:75">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="213:5" pos:end="213:73"><expr pos:start="213:5" pos:end="213:72"><name pos:start="213:5" pos:end="213:10"><name pos:start="213:5" pos:end="213:5">s</name><operator pos:start="213:6" pos:end="213:7">-&gt;</operator><name pos:start="213:8" pos:end="213:10">i2s</name></name> <operator pos:start="213:12" pos:end="213:12">=</operator> <call pos:start="213:14" pos:end="213:72"><name pos:start="213:14" pos:end="213:28">pxa2xx_i2s_init</name><argument_list pos:start="213:29" pos:end="213:72">(<argument pos:start="213:30" pos:end="213:39"><expr pos:start="213:30" pos:end="213:39"><literal type="number" pos:start="213:30" pos:end="213:39">0x40400000</literal></expr></argument>, <argument pos:start="213:42" pos:end="213:63"><expr pos:start="213:42" pos:end="213:63"><name pos:start="213:42" pos:end="213:63"><name pos:start="213:42" pos:end="213:42">s</name><operator pos:start="213:43" pos:end="213:44">-&gt;</operator><name pos:start="213:45" pos:end="213:47">pic</name><index pos:start="213:48" pos:end="213:63">[<expr pos:start="213:49" pos:end="213:62"><name pos:start="213:49" pos:end="213:62">PXA2XX_PIC_I2S</name></expr>]</index></name></expr></argument>, <argument pos:start="213:66" pos:end="213:71"><expr pos:start="213:66" pos:end="213:71"><name pos:start="213:66" pos:end="213:71"><name pos:start="213:66" pos:end="213:66">s</name><operator pos:start="213:67" pos:end="213:68">-&gt;</operator><name pos:start="213:69" pos:end="213:71">dma</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="217:5" pos:end="217:36">/* GPIO1 resets the processor */</comment>

    <comment type="block" pos:start="219:5" pos:end="219:61">/* The handler can be overriden by board-specific code */</comment>

    <expr_stmt pos:start="221:5" pos:end="221:57"><expr pos:start="221:5" pos:end="221:56"><call pos:start="221:5" pos:end="221:56"><name pos:start="221:5" pos:end="221:27">pxa2xx_gpio_handler_set</name><argument_list pos:start="221:28" pos:end="221:56">(<argument pos:start="221:29" pos:end="221:35"><expr pos:start="221:29" pos:end="221:35"><name pos:start="221:29" pos:end="221:35"><name pos:start="221:29" pos:end="221:29">s</name><operator pos:start="221:30" pos:end="221:31">-&gt;</operator><name pos:start="221:32" pos:end="221:35">gpio</name></name></expr></argument>, <argument pos:start="221:38" pos:end="221:38"><expr pos:start="221:38" pos:end="221:38"><literal type="number" pos:start="221:38" pos:end="221:38">1</literal></expr></argument>, <argument pos:start="221:41" pos:end="221:52"><expr pos:start="221:41" pos:end="221:52"><name pos:start="221:41" pos:end="221:52">pxa2xx_reset</name></expr></argument>, <argument pos:start="221:55" pos:end="221:55"><expr pos:start="221:55" pos:end="221:55"><name pos:start="221:55" pos:end="221:55">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="223:5" pos:end="223:13">return <expr pos:start="223:12" pos:end="223:12"><name pos:start="223:12" pos:end="223:12">s</name></expr>;</return>

</block_content>}</block></function>
</unit>
