<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25964.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:35">vtd_dev_to_context_entry</name><parameter_list pos:start="1:36" pos:end="3:71">(<parameter pos:start="1:37" pos:end="1:54"><decl pos:start="1:37" pos:end="1:54"><type pos:start="1:37" pos:end="1:54"><name pos:start="1:37" pos:end="1:51">IntelIOMMUState</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">s</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:71"><decl pos:start="1:57" pos:end="1:71"><type pos:start="1:57" pos:end="1:71"><name pos:start="1:57" pos:end="1:63">uint8_t</name></type> <name pos:start="1:65" pos:end="1:71">bus_num</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:49"><decl pos:start="3:37" pos:end="3:49"><type pos:start="3:37" pos:end="3:49"><name pos:start="3:37" pos:end="3:43">uint8_t</name></type> <name pos:start="3:45" pos:end="3:49">devfn</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:70"><decl pos:start="3:52" pos:end="3:70"><type pos:start="3:52" pos:end="3:70"><name pos:start="3:52" pos:end="3:66">VTDContextEntry</name> <modifier pos:start="3:68" pos:end="3:68">*</modifier></type><name pos:start="3:69" pos:end="3:70">ce</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="107:1">{<block_content pos:start="7:5" pos:end="105:13">

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:16">VTDRootEntry</name></type> <name pos:start="7:18" pos:end="7:19">re</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">ret_fr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:51"><decl pos:start="11:5" pos:end="11:50"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">X86IOMMUState</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:28">x86_iommu</name> <init pos:start="11:30" pos:end="11:50">= <expr pos:start="11:32" pos:end="11:50"><call pos:start="11:32" pos:end="11:50"><name pos:start="11:32" pos:end="11:47">X86_IOMMU_DEVICE</name><argument_list pos:start="11:48" pos:end="11:50">(<argument pos:start="11:49" pos:end="11:49"><expr pos:start="11:49" pos:end="11:49"><name pos:start="11:49" pos:end="11:49">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:49"><expr pos:start="15:5" pos:end="15:48"><name pos:start="15:5" pos:end="15:10">ret_fr</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <call pos:start="15:14" pos:end="15:48"><name pos:start="15:14" pos:end="15:31">vtd_get_root_entry</name><argument_list pos:start="15:32" pos:end="15:48">(<argument pos:start="15:33" pos:end="15:33"><expr pos:start="15:33" pos:end="15:33"><name pos:start="15:33" pos:end="15:33">s</name></expr></argument>, <argument pos:start="15:36" pos:end="15:42"><expr pos:start="15:36" pos:end="15:42"><name pos:start="15:36" pos:end="15:42">bus_num</name></expr></argument>, <argument pos:start="15:45" pos:end="15:47"><expr pos:start="15:45" pos:end="15:47"><operator pos:start="15:45" pos:end="15:45">&amp;</operator><name pos:start="15:46" pos:end="15:47">re</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:15">(<expr pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:14">ret_fr</name></expr>)</condition> <block pos:start="17:17" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:22">

        <return pos:start="19:9" pos:end="19:22">return <expr pos:start="19:16" pos:end="19:21"><name pos:start="19:16" pos:end="19:21">ret_fr</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="33:5"><if pos:start="25:5" pos:end="33:5">if <condition pos:start="25:8" pos:end="25:37">(<expr pos:start="25:9" pos:end="25:36"><operator pos:start="25:9" pos:end="25:9">!</operator><call pos:start="25:10" pos:end="25:36"><name pos:start="25:10" pos:end="25:31">vtd_root_entry_present</name><argument_list pos:start="25:32" pos:end="25:36">(<argument pos:start="25:33" pos:end="25:35"><expr pos:start="25:33" pos:end="25:35"><operator pos:start="25:33" pos:end="25:33">&amp;</operator><name pos:start="25:34" pos:end="25:35">re</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:39" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:36">

        <comment type="block" pos:start="27:9" pos:end="27:61">/* Not error - it's okay we don't have root entry. */</comment>

        <expr_stmt pos:start="29:9" pos:end="29:42"><expr pos:start="29:9" pos:end="29:41"><call pos:start="29:9" pos:end="29:41"><name pos:start="29:9" pos:end="29:32">trace_vtd_re_not_present</name><argument_list pos:start="29:33" pos:end="29:41">(<argument pos:start="29:34" pos:end="29:40"><expr pos:start="29:34" pos:end="29:40"><name pos:start="29:34" pos:end="29:40">bus_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:36">return <expr pos:start="31:16" pos:end="31:35"><operator pos:start="31:16" pos:end="31:16">-</operator><name pos:start="31:17" pos:end="31:35">VTD_FR_ROOT_ENTRY_P</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:74">(<expr pos:start="37:9" pos:end="37:73"><name pos:start="37:9" pos:end="37:15"><name pos:start="37:9" pos:end="37:10">re</name><operator pos:start="37:11" pos:end="37:11">.</operator><name pos:start="37:12" pos:end="37:15">rsvd</name></name> <operator pos:start="37:17" pos:end="37:18">||</operator> <operator pos:start="37:20" pos:end="37:20">(</operator><name pos:start="37:21" pos:end="37:26"><name pos:start="37:21" pos:end="37:22">re</name><operator pos:start="37:23" pos:end="37:23">.</operator><name pos:start="37:24" pos:end="37:26">val</name></name> <operator pos:start="37:28" pos:end="37:28">&amp;</operator> <call pos:start="37:30" pos:end="37:72"><name pos:start="37:30" pos:end="37:48">VTD_ROOT_ENTRY_RSVD</name><argument_list pos:start="37:49" pos:end="37:72">(<argument pos:start="37:50" pos:end="37:71"><expr pos:start="37:50" pos:end="37:71"><name pos:start="37:50" pos:end="37:71">VTD_HOST_ADDRESS_WIDTH</name></expr></argument>)</argument_list></call><operator pos:start="37:73" pos:end="37:73">)</operator></expr>)</condition> <block pos:start="37:76" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:39">

        <expr_stmt pos:start="39:9" pos:end="39:46"><expr pos:start="39:9" pos:end="39:45"><call pos:start="39:9" pos:end="39:45"><name pos:start="39:9" pos:end="39:28">trace_vtd_re_invalid</name><argument_list pos:start="39:29" pos:end="39:45">(<argument pos:start="39:30" pos:end="39:36"><expr pos:start="39:30" pos:end="39:36"><name pos:start="39:30" pos:end="39:36"><name pos:start="39:30" pos:end="39:31">re</name><operator pos:start="39:32" pos:end="39:32">.</operator><name pos:start="39:33" pos:end="39:36">rsvd</name></name></expr></argument>, <argument pos:start="39:39" pos:end="39:44"><expr pos:start="39:39" pos:end="39:44"><name pos:start="39:39" pos:end="39:44"><name pos:start="39:39" pos:end="39:40">re</name><operator pos:start="39:41" pos:end="39:41">.</operator><name pos:start="39:42" pos:end="39:44">val</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:39">return <expr pos:start="41:16" pos:end="41:38"><operator pos:start="41:16" pos:end="41:16">-</operator><name pos:start="41:17" pos:end="41:38">VTD_FR_ROOT_ENTRY_RSVD</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:61"><expr pos:start="47:5" pos:end="47:60"><name pos:start="47:5" pos:end="47:10">ret_fr</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <call pos:start="47:14" pos:end="47:60"><name pos:start="47:14" pos:end="47:44">vtd_get_context_entry_from_root</name><argument_list pos:start="47:45" pos:end="47:60">(<argument pos:start="47:46" pos:end="47:48"><expr pos:start="47:46" pos:end="47:48"><operator pos:start="47:46" pos:end="47:46">&amp;</operator><name pos:start="47:47" pos:end="47:48">re</name></expr></argument>, <argument pos:start="47:51" pos:end="47:55"><expr pos:start="47:51" pos:end="47:55"><name pos:start="47:51" pos:end="47:55">devfn</name></expr></argument>, <argument pos:start="47:58" pos:end="47:59"><expr pos:start="47:58" pos:end="47:59"><name pos:start="47:58" pos:end="47:59">ce</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="53:5"><if pos:start="49:5" pos:end="53:5">if <condition pos:start="49:8" pos:end="49:15">(<expr pos:start="49:9" pos:end="49:14"><name pos:start="49:9" pos:end="49:14">ret_fr</name></expr>)</condition> <block pos:start="49:17" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:22">

        <return pos:start="51:9" pos:end="51:22">return <expr pos:start="51:16" pos:end="51:21"><name pos:start="51:16" pos:end="51:21">ret_fr</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="57:5" pos:end="65:5"><if pos:start="57:5" pos:end="65:5">if <condition pos:start="57:8" pos:end="57:28">(<expr pos:start="57:9" pos:end="57:27"><operator pos:start="57:9" pos:end="57:9">!</operator><call pos:start="57:10" pos:end="57:27"><name pos:start="57:10" pos:end="57:23">vtd_ce_present</name><argument_list pos:start="57:24" pos:end="57:27">(<argument pos:start="57:25" pos:end="57:26"><expr pos:start="57:25" pos:end="57:26"><name pos:start="57:25" pos:end="57:26">ce</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="57:30" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:39">

        <comment type="block" pos:start="59:9" pos:end="59:64">/* Not error - it's okay we don't have context entry. */</comment>

        <expr_stmt pos:start="61:9" pos:end="61:49"><expr pos:start="61:9" pos:end="61:48"><call pos:start="61:9" pos:end="61:48"><name pos:start="61:9" pos:end="61:32">trace_vtd_ce_not_present</name><argument_list pos:start="61:33" pos:end="61:48">(<argument pos:start="61:34" pos:end="61:40"><expr pos:start="61:34" pos:end="61:40"><name pos:start="61:34" pos:end="61:40">bus_num</name></expr></argument>, <argument pos:start="61:43" pos:end="61:47"><expr pos:start="61:43" pos:end="61:47"><name pos:start="61:43" pos:end="61:47">devfn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="63:9" pos:end="63:39">return <expr pos:start="63:16" pos:end="63:38"><operator pos:start="63:16" pos:end="63:16">-</operator><name pos:start="63:17" pos:end="63:38">VTD_FR_CONTEXT_ENTRY_P</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="69:5" pos:end="77:5"><if pos:start="69:5" pos:end="77:5">if <condition pos:start="69:8" pos:end="71:76">(<expr pos:start="69:9" pos:end="71:75"><operator pos:start="69:9" pos:end="69:9">(</operator><name pos:start="69:10" pos:end="69:15"><name pos:start="69:10" pos:end="69:11">ce</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:15">hi</name></name> <operator pos:start="69:17" pos:end="69:17">&amp;</operator> <name pos:start="69:19" pos:end="69:43">VTD_CONTEXT_ENTRY_RSVD_HI</name><operator pos:start="69:44" pos:end="69:44">)</operator> <operator pos:start="69:46" pos:end="69:47">||</operator>

               <operator pos:start="71:16" pos:end="71:16">(</operator><name pos:start="71:17" pos:end="71:22"><name pos:start="71:17" pos:end="71:18">ce</name><operator pos:start="71:19" pos:end="71:20">-&gt;</operator><name pos:start="71:21" pos:end="71:22">lo</name></name> <operator pos:start="71:24" pos:end="71:24">&amp;</operator> <call pos:start="71:26" pos:end="71:74"><name pos:start="71:26" pos:end="71:50">VTD_CONTEXT_ENTRY_RSVD_LO</name><argument_list pos:start="71:51" pos:end="71:74">(<argument pos:start="71:52" pos:end="71:73"><expr pos:start="71:52" pos:end="71:73"><name pos:start="71:52" pos:end="71:73">VTD_HOST_ADDRESS_WIDTH</name></expr></argument>)</argument_list></call><operator pos:start="71:75" pos:end="71:75">)</operator></expr>)</condition> <block pos:start="71:78" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:42">

        <expr_stmt pos:start="73:9" pos:end="73:45"><expr pos:start="73:9" pos:end="73:44"><call pos:start="73:9" pos:end="73:44"><name pos:start="73:9" pos:end="73:28">trace_vtd_ce_invalid</name><argument_list pos:start="73:29" pos:end="73:44">(<argument pos:start="73:30" pos:end="73:35"><expr pos:start="73:30" pos:end="73:35"><name pos:start="73:30" pos:end="73:35"><name pos:start="73:30" pos:end="73:31">ce</name><operator pos:start="73:32" pos:end="73:33">-&gt;</operator><name pos:start="73:34" pos:end="73:35">hi</name></name></expr></argument>, <argument pos:start="73:38" pos:end="73:43"><expr pos:start="73:38" pos:end="73:43"><name pos:start="73:38" pos:end="73:43"><name pos:start="73:38" pos:end="73:39">ce</name><operator pos:start="73:40" pos:end="73:41">-&gt;</operator><name pos:start="73:42" pos:end="73:43">lo</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="75:9" pos:end="75:42">return <expr pos:start="75:16" pos:end="75:41"><operator pos:start="75:16" pos:end="75:16">-</operator><name pos:start="75:17" pos:end="75:41">VTD_FR_CONTEXT_ENTRY_RSVD</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="81:5" pos:end="81:60">/* Check if the programming of context-entry is valid */</comment>

    <if_stmt pos:start="83:5" pos:end="89:5"><if pos:start="83:5" pos:end="89:5">if <condition pos:start="83:8" pos:end="83:57">(<expr pos:start="83:9" pos:end="83:56"><operator pos:start="83:9" pos:end="83:9">!</operator><call pos:start="83:10" pos:end="83:56"><name pos:start="83:10" pos:end="83:31">vtd_is_level_supported</name><argument_list pos:start="83:32" pos:end="83:56">(<argument pos:start="83:33" pos:end="83:33"><expr pos:start="83:33" pos:end="83:33"><name pos:start="83:33" pos:end="83:33">s</name></expr></argument>, <argument pos:start="83:36" pos:end="83:55"><expr pos:start="83:36" pos:end="83:55"><call pos:start="83:36" pos:end="83:55"><name pos:start="83:36" pos:end="83:51">vtd_ce_get_level</name><argument_list pos:start="83:52" pos:end="83:55">(<argument pos:start="83:53" pos:end="83:54"><expr pos:start="83:53" pos:end="83:54"><name pos:start="83:53" pos:end="83:54">ce</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="83:59" pos:end="89:5">{<block_content pos:start="85:9" pos:end="87:41">

        <expr_stmt pos:start="85:9" pos:end="85:45"><expr pos:start="85:9" pos:end="85:44"><call pos:start="85:9" pos:end="85:44"><name pos:start="85:9" pos:end="85:28">trace_vtd_ce_invalid</name><argument_list pos:start="85:29" pos:end="85:44">(<argument pos:start="85:30" pos:end="85:35"><expr pos:start="85:30" pos:end="85:35"><name pos:start="85:30" pos:end="85:35"><name pos:start="85:30" pos:end="85:31">ce</name><operator pos:start="85:32" pos:end="85:33">-&gt;</operator><name pos:start="85:34" pos:end="85:35">hi</name></name></expr></argument>, <argument pos:start="85:38" pos:end="85:43"><expr pos:start="85:38" pos:end="85:43"><name pos:start="85:38" pos:end="85:43"><name pos:start="85:38" pos:end="85:39">ce</name><operator pos:start="85:40" pos:end="85:41">-&gt;</operator><name pos:start="85:42" pos:end="85:43">lo</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="87:9" pos:end="87:41">return <expr pos:start="87:16" pos:end="87:40"><operator pos:start="87:16" pos:end="87:16">-</operator><name pos:start="87:17" pos:end="87:40">VTD_FR_CONTEXT_ENTRY_INV</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="93:5" pos:end="93:35">/* Do translation type check */</comment>

    <if_stmt pos:start="95:5" pos:end="101:5"><if pos:start="95:5" pos:end="101:5">if <condition pos:start="95:8" pos:end="95:42">(<expr pos:start="95:9" pos:end="95:41"><operator pos:start="95:9" pos:end="95:9">!</operator><call pos:start="95:10" pos:end="95:41"><name pos:start="95:10" pos:end="95:26">vtd_ce_type_check</name><argument_list pos:start="95:27" pos:end="95:41">(<argument pos:start="95:28" pos:end="95:36"><expr pos:start="95:28" pos:end="95:36"><name pos:start="95:28" pos:end="95:36">x86_iommu</name></expr></argument>, <argument pos:start="95:39" pos:end="95:40"><expr pos:start="95:39" pos:end="95:40"><name pos:start="95:39" pos:end="95:40">ce</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="95:44" pos:end="101:5">{<block_content pos:start="97:9" pos:end="99:41">

        <expr_stmt pos:start="97:9" pos:end="97:45"><expr pos:start="97:9" pos:end="97:44"><call pos:start="97:9" pos:end="97:44"><name pos:start="97:9" pos:end="97:28">trace_vtd_ce_invalid</name><argument_list pos:start="97:29" pos:end="97:44">(<argument pos:start="97:30" pos:end="97:35"><expr pos:start="97:30" pos:end="97:35"><name pos:start="97:30" pos:end="97:35"><name pos:start="97:30" pos:end="97:31">ce</name><operator pos:start="97:32" pos:end="97:33">-&gt;</operator><name pos:start="97:34" pos:end="97:35">hi</name></name></expr></argument>, <argument pos:start="97:38" pos:end="97:43"><expr pos:start="97:38" pos:end="97:43"><name pos:start="97:38" pos:end="97:43"><name pos:start="97:38" pos:end="97:39">ce</name><operator pos:start="97:40" pos:end="97:41">-&gt;</operator><name pos:start="97:42" pos:end="97:43">lo</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="99:9" pos:end="99:41">return <expr pos:start="99:16" pos:end="99:40"><operator pos:start="99:16" pos:end="99:16">-</operator><name pos:start="99:17" pos:end="99:40">VTD_FR_CONTEXT_ENTRY_INV</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="105:5" pos:end="105:13">return <expr pos:start="105:12" pos:end="105:12"><literal type="number" pos:start="105:12" pos:end="105:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
