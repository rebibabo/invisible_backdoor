<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19332.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">sl_nand_init</name><parameter_list pos:start="1:24" pos:end="1:42">(<parameter pos:start="1:25" pos:end="1:41"><decl pos:start="1:25" pos:end="1:41"><type pos:start="1:25" pos:end="1:38"><name pos:start="1:25" pos:end="1:36">SysBusDevice</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:13">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">SLNANDState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">s</name> <init pos:start="5:20" pos:end="5:33">= <expr pos:start="5:22" pos:end="5:33"><call pos:start="5:22" pos:end="5:33"><name pos:start="5:22" pos:end="5:28">SL_NAND</name><argument_list pos:start="5:29" pos:end="5:33">(<argument pos:start="5:30" pos:end="5:32"><expr pos:start="5:30" pos:end="5:32"><name pos:start="5:30" pos:end="5:32">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">DriveInfo</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:19">nand</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:15"><expr pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:10">ctl</name></name> <operator pos:start="11:12" pos:end="11:12">=</operator> <literal type="number" pos:start="11:14" pos:end="11:14">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:35"><expr pos:start="13:5" pos:end="13:34"><name pos:start="13:5" pos:end="13:8">nand</name> <operator pos:start="13:10" pos:end="13:10">=</operator> <call pos:start="13:12" pos:end="13:34"><name pos:start="13:12" pos:end="13:20">drive_get</name><argument_list pos:start="13:21" pos:end="13:34">(<argument pos:start="13:22" pos:end="13:27"><expr pos:start="13:22" pos:end="13:27"><name pos:start="13:22" pos:end="13:27">IF_MTD</name></expr></argument>, <argument pos:start="13:30" pos:end="13:30"><expr pos:start="13:30" pos:end="13:30"><literal type="number" pos:start="13:30" pos:end="13:30">0</literal></expr></argument>, <argument pos:start="13:33" pos:end="13:33"><expr pos:start="13:33" pos:end="13:33"><literal type="number" pos:start="13:33" pos:end="13:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="17:48"><expr pos:start="15:5" pos:end="17:47"><name pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:11">nand</name></name> <operator pos:start="15:13" pos:end="15:13">=</operator> <call pos:start="15:15" pos:end="17:47"><name pos:start="15:15" pos:end="15:23">nand_init</name><argument_list pos:start="15:24" pos:end="17:47">(<argument pos:start="15:25" pos:end="15:71"><expr pos:start="15:25" pos:end="15:71"><ternary pos:start="15:25" pos:end="15:71"><condition pos:start="15:25" pos:end="15:30"><expr pos:start="15:25" pos:end="15:28"><name pos:start="15:25" pos:end="15:28">nand</name></expr> ?</condition><then pos:start="15:32" pos:end="15:64"> <expr pos:start="15:32" pos:end="15:64"><call pos:start="15:32" pos:end="15:64"><name pos:start="15:32" pos:end="15:37">blk_bs</name><argument_list pos:start="15:38" pos:end="15:64">(<argument pos:start="15:39" pos:end="15:63"><expr pos:start="15:39" pos:end="15:63"><call pos:start="15:39" pos:end="15:63"><name pos:start="15:39" pos:end="15:57">blk_by_legacy_dinfo</name><argument_list pos:start="15:58" pos:end="15:63">(<argument pos:start="15:59" pos:end="15:62"><expr pos:start="15:59" pos:end="15:62"><name pos:start="15:59" pos:end="15:62">nand</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr> </then><else pos:start="15:66" pos:end="15:71">: <expr pos:start="15:68" pos:end="15:71"><name pos:start="15:68" pos:end="15:71">NULL</name></expr></else></ternary></expr></argument>,

                        <argument pos:start="17:25" pos:end="17:34"><expr pos:start="17:25" pos:end="17:34"><name pos:start="17:25" pos:end="17:34"><name pos:start="17:25" pos:end="17:25">s</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:34">manf_id</name></name></expr></argument>, <argument pos:start="17:37" pos:end="17:46"><expr pos:start="17:37" pos:end="17:46"><name pos:start="17:37" pos:end="17:46"><name pos:start="17:37" pos:end="17:37">s</name><operator pos:start="17:38" pos:end="17:39">-&gt;</operator><name pos:start="17:40" pos:end="17:46">chip_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:72"><expr pos:start="21:5" pos:end="21:71"><call pos:start="21:5" pos:end="21:71"><name pos:start="21:5" pos:end="21:25">memory_region_init_io</name><argument_list pos:start="21:26" pos:end="21:71">(<argument pos:start="21:27" pos:end="21:35"><expr pos:start="21:27" pos:end="21:35"><operator pos:start="21:27" pos:end="21:27">&amp;</operator><name pos:start="21:28" pos:end="21:35"><name pos:start="21:28" pos:end="21:28">s</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:35">iomem</name></name></expr></argument>, <argument pos:start="21:38" pos:end="21:46"><expr pos:start="21:38" pos:end="21:46"><call pos:start="21:38" pos:end="21:46"><name pos:start="21:38" pos:end="21:43">OBJECT</name><argument_list pos:start="21:44" pos:end="21:46">(<argument pos:start="21:45" pos:end="21:45"><expr pos:start="21:45" pos:end="21:45"><name pos:start="21:45" pos:end="21:45">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="21:49" pos:end="21:55"><expr pos:start="21:49" pos:end="21:55"><operator pos:start="21:49" pos:end="21:49">&amp;</operator><name pos:start="21:50" pos:end="21:55">sl_ops</name></expr></argument>, <argument pos:start="21:58" pos:end="21:58"><expr pos:start="21:58" pos:end="21:58"><name pos:start="21:58" pos:end="21:58">s</name></expr></argument>, <argument pos:start="21:61" pos:end="21:64"><expr pos:start="21:61" pos:end="21:64"><literal type="string" pos:start="21:61" pos:end="21:64">"sl"</literal></expr></argument>, <argument pos:start="21:67" pos:end="21:70"><expr pos:start="21:67" pos:end="21:70"><literal type="number" pos:start="21:67" pos:end="21:70">0x40</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:37"><expr pos:start="23:5" pos:end="23:36"><call pos:start="23:5" pos:end="23:36"><name pos:start="23:5" pos:end="23:20">sysbus_init_mmio</name><argument_list pos:start="23:21" pos:end="23:36">(<argument pos:start="23:22" pos:end="23:24"><expr pos:start="23:22" pos:end="23:24"><name pos:start="23:22" pos:end="23:24">dev</name></expr></argument>, <argument pos:start="23:27" pos:end="23:35"><expr pos:start="23:27" pos:end="23:35"><operator pos:start="23:27" pos:end="23:27">&amp;</operator><name pos:start="23:28" pos:end="23:35"><name pos:start="23:28" pos:end="23:28">s</name><operator pos:start="23:29" pos:end="23:30">-&gt;</operator><name pos:start="23:31" pos:end="23:35">iomem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="27:5" pos:end="27:13">return <expr pos:start="27:12" pos:end="27:12"><literal type="number" pos:start="27:12" pos:end="27:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
