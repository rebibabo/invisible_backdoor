<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25837.c" pos:tabs="8"><function pos:start="1:1" pos:end="131:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:8">poll</name><parameter_list pos:start="1:9" pos:end="1:56">(<parameter pos:start="1:10" pos:end="1:27"><decl pos:start="1:10" pos:end="1:27"><type pos:start="1:10" pos:end="1:27"><name pos:start="1:10" pos:end="1:22"><name pos:start="1:10" pos:end="1:15">struct</name> <name pos:start="1:17" pos:end="1:22">pollfd</name></name> <modifier pos:start="1:24" pos:end="1:24">*</modifier></type><name pos:start="1:25" pos:end="1:27">fds</name></decl></parameter>, <parameter pos:start="1:30" pos:end="1:42"><decl pos:start="1:30" pos:end="1:42"><type pos:start="1:30" pos:end="1:42"><name pos:start="1:30" pos:end="1:35">nfds_t</name></type> <name pos:start="1:37" pos:end="1:42">numfds</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:55"><decl pos:start="1:45" pos:end="1:55"><type pos:start="1:45" pos:end="1:55"><name pos:start="1:45" pos:end="1:47">int</name></type> <name pos:start="1:49" pos:end="1:55">timeout</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="131:1">{<block_content pos:start="5:5" pos:end="129:14">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">fd_set</name></type> <name pos:start="5:12" pos:end="5:19">read_set</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">fd_set</name></type> <name pos:start="7:12" pos:end="7:20">write_set</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">fd_set</name></type> <name pos:start="9:12" pos:end="9:24">exception_set</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">nfds_t</name></type> <name pos:start="11:12" pos:end="11:12">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="20:0"><decl pos:start="15:5" pos:end="15:10"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:10">rc</name></decl>;</decl_stmt>



<cpp:ifdef pos:start="19:1" pos:end="19:18">#<cpp:directive pos:start="19:2" pos:end="19:6">ifdef</cpp:directive> <name pos:start="19:8" pos:end="19:18">__MINGW32__</name></cpp:ifdef>

    <if_stmt pos:start="21:5" pos:end="30:0"><if pos:start="21:5" pos:end="30:0">if <condition pos:start="21:8" pos:end="21:29">(<expr pos:start="21:9" pos:end="21:28"><name pos:start="21:9" pos:end="21:14">numfds</name> <operator pos:start="21:16" pos:end="21:17">&gt;=</operator> <name pos:start="21:19" pos:end="21:28">FD_SETSIZE</name></expr>)</condition> <block pos:start="21:31" pos:end="30:0">{<block_content pos:start="23:9" pos:end="25:18">

        <expr_stmt pos:start="23:9" pos:end="23:23"><expr pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:13">errno</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <name pos:start="23:17" pos:end="23:22">EINVAL</name></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:18">return <expr pos:start="25:16" pos:end="25:17"><operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="29:1" pos:end="29:6">#<cpp:directive pos:start="29:2" pos:end="29:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="33:5" pos:end="33:23"><expr pos:start="33:5" pos:end="33:22"><call pos:start="33:5" pos:end="33:22"><name pos:start="33:5" pos:end="33:11">FD_ZERO</name><argument_list pos:start="33:12" pos:end="33:22">(<argument pos:start="33:13" pos:end="33:21"><expr pos:start="33:13" pos:end="33:21"><operator pos:start="33:13" pos:end="33:13">&amp;</operator><name pos:start="33:14" pos:end="33:21">read_set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:24"><expr pos:start="35:5" pos:end="35:23"><call pos:start="35:5" pos:end="35:23"><name pos:start="35:5" pos:end="35:11">FD_ZERO</name><argument_list pos:start="35:12" pos:end="35:23">(<argument pos:start="35:13" pos:end="35:22"><expr pos:start="35:13" pos:end="35:22"><operator pos:start="35:13" pos:end="35:13">&amp;</operator><name pos:start="35:14" pos:end="35:22">write_set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:28"><expr pos:start="37:5" pos:end="37:27"><call pos:start="37:5" pos:end="37:27"><name pos:start="37:5" pos:end="37:11">FD_ZERO</name><argument_list pos:start="37:12" pos:end="37:27">(<argument pos:start="37:13" pos:end="37:26"><expr pos:start="37:13" pos:end="37:26"><operator pos:start="37:13" pos:end="37:13">&amp;</operator><name pos:start="37:14" pos:end="37:26">exception_set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:11"><expr pos:start="41:5" pos:end="41:10"><name pos:start="41:5" pos:end="41:5">n</name> <operator pos:start="41:7" pos:end="41:7">=</operator> <operator pos:start="41:9" pos:end="41:9">-</operator><literal type="number" pos:start="41:10" pos:end="41:10">1</literal></expr>;</expr_stmt>

    <for pos:start="43:5" pos:end="75:5">for<control pos:start="43:8" pos:end="43:31">(<init pos:start="43:9" pos:end="43:14"><expr pos:start="43:9" pos:end="43:13"><name pos:start="43:9" pos:end="43:9">i</name> <operator pos:start="43:11" pos:end="43:11">=</operator> <literal type="number" pos:start="43:13" pos:end="43:13">0</literal></expr>;</init> <condition pos:start="43:16" pos:end="43:26"><expr pos:start="43:16" pos:end="43:25"><name pos:start="43:16" pos:end="43:16">i</name> <operator pos:start="43:18" pos:end="43:18">&lt;</operator> <name pos:start="43:20" pos:end="43:25">numfds</name></expr>;</condition> <incr pos:start="43:28" pos:end="43:30"><expr pos:start="43:28" pos:end="43:30"><name pos:start="43:28" pos:end="43:28">i</name><operator pos:start="43:29" pos:end="43:30">++</operator></expr></incr>)</control> <block pos:start="43:33" pos:end="75:5">{<block_content pos:start="45:9" pos:end="73:26">

        <if_stmt pos:start="45:9" pos:end="50:0"><if pos:start="45:9" pos:end="50:0">if <condition pos:start="45:12" pos:end="45:26">(<expr pos:start="45:13" pos:end="45:25"><name pos:start="45:13" pos:end="45:18"><name pos:start="45:13" pos:end="45:15">fds</name><index pos:start="45:16" pos:end="45:18">[<expr pos:start="45:17" pos:end="45:17"><name pos:start="45:17" pos:end="45:17">i</name></expr>]</index></name><operator pos:start="45:19" pos:end="45:19">.</operator><name pos:start="45:20" pos:end="45:21">fd</name> <operator pos:start="45:23" pos:end="45:23">&lt;</operator> <literal type="number" pos:start="45:25" pos:end="45:25">0</literal></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="50:0"><block_content pos:start="47:13" pos:end="50:0">

            <continue pos:start="47:13" pos:end="50:0">continue;</continue></block_content></block></if></if_stmt>

<cpp:ifndef pos:start="49:1" pos:end="49:19">#<cpp:directive pos:start="49:2" pos:end="49:7">ifndef</cpp:directive> <name pos:start="49:9" pos:end="49:19">__MINGW32__</name></cpp:ifndef>

        <if_stmt pos:start="51:9" pos:end="60:0"><if pos:start="51:9" pos:end="60:0">if <condition pos:start="51:12" pos:end="51:36">(<expr pos:start="51:13" pos:end="51:35"><name pos:start="51:13" pos:end="51:18"><name pos:start="51:13" pos:end="51:15">fds</name><index pos:start="51:16" pos:end="51:18">[<expr pos:start="51:17" pos:end="51:17"><name pos:start="51:17" pos:end="51:17">i</name></expr>]</index></name><operator pos:start="51:19" pos:end="51:19">.</operator><name pos:start="51:20" pos:end="51:21">fd</name> <operator pos:start="51:23" pos:end="51:24">&gt;=</operator> <name pos:start="51:26" pos:end="51:35">FD_SETSIZE</name></expr>)</condition> <block pos:start="51:38" pos:end="60:0">{<block_content pos:start="53:13" pos:end="55:22">

            <expr_stmt pos:start="53:13" pos:end="53:27"><expr pos:start="53:13" pos:end="53:26"><name pos:start="53:13" pos:end="53:17">errno</name> <operator pos:start="53:19" pos:end="53:19">=</operator> <name pos:start="53:21" pos:end="53:26">EINVAL</name></expr>;</expr_stmt>

            <return pos:start="55:13" pos:end="55:22">return <expr pos:start="55:20" pos:end="55:21"><operator pos:start="55:20" pos:end="55:20">-</operator><literal type="number" pos:start="55:21" pos:end="55:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="59:1" pos:end="59:6">#<cpp:directive pos:start="59:2" pos:end="59:6">endif</cpp:directive></cpp:endif>



        <if_stmt pos:start="63:9" pos:end="63:66"><if pos:start="63:9" pos:end="63:66">if <condition pos:start="63:12" pos:end="63:35">(<expr pos:start="63:13" pos:end="63:34"><name pos:start="63:13" pos:end="63:18"><name pos:start="63:13" pos:end="63:15">fds</name><index pos:start="63:16" pos:end="63:18">[<expr pos:start="63:17" pos:end="63:17"><name pos:start="63:17" pos:end="63:17">i</name></expr>]</index></name><operator pos:start="63:19" pos:end="63:19">.</operator><name pos:start="63:20" pos:end="63:25">events</name> <operator pos:start="63:27" pos:end="63:27">&amp;</operator> <name pos:start="63:29" pos:end="63:34">POLLIN</name></expr>)</condition><block type="pseudo" pos:start="63:38" pos:end="63:66"><block_content pos:start="63:38" pos:end="63:66">  <expr_stmt pos:start="63:38" pos:end="63:66"><expr pos:start="63:38" pos:end="63:65"><call pos:start="63:38" pos:end="63:65"><name pos:start="63:38" pos:end="63:43">FD_SET</name><argument_list pos:start="63:44" pos:end="63:65">(<argument pos:start="63:45" pos:end="63:53"><expr pos:start="63:45" pos:end="63:53"><name pos:start="63:45" pos:end="63:50"><name pos:start="63:45" pos:end="63:47">fds</name><index pos:start="63:48" pos:end="63:50">[<expr pos:start="63:49" pos:end="63:49"><name pos:start="63:49" pos:end="63:49">i</name></expr>]</index></name><operator pos:start="63:51" pos:end="63:51">.</operator><name pos:start="63:52" pos:end="63:53">fd</name></expr></argument>, <argument pos:start="63:56" pos:end="63:64"><expr pos:start="63:56" pos:end="63:64"><operator pos:start="63:56" pos:end="63:56">&amp;</operator><name pos:start="63:57" pos:end="63:64">read_set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="65:9" pos:end="65:67"><if pos:start="65:9" pos:end="65:67">if <condition pos:start="65:12" pos:end="65:36">(<expr pos:start="65:13" pos:end="65:35"><name pos:start="65:13" pos:end="65:18"><name pos:start="65:13" pos:end="65:15">fds</name><index pos:start="65:16" pos:end="65:18">[<expr pos:start="65:17" pos:end="65:17"><name pos:start="65:17" pos:end="65:17">i</name></expr>]</index></name><operator pos:start="65:19" pos:end="65:19">.</operator><name pos:start="65:20" pos:end="65:25">events</name> <operator pos:start="65:27" pos:end="65:27">&amp;</operator> <name pos:start="65:29" pos:end="65:35">POLLOUT</name></expr>)</condition><block type="pseudo" pos:start="65:38" pos:end="65:67"><block_content pos:start="65:38" pos:end="65:67"> <expr_stmt pos:start="65:38" pos:end="65:67"><expr pos:start="65:38" pos:end="65:66"><call pos:start="65:38" pos:end="65:66"><name pos:start="65:38" pos:end="65:43">FD_SET</name><argument_list pos:start="65:44" pos:end="65:66">(<argument pos:start="65:45" pos:end="65:53"><expr pos:start="65:45" pos:end="65:53"><name pos:start="65:45" pos:end="65:50"><name pos:start="65:45" pos:end="65:47">fds</name><index pos:start="65:48" pos:end="65:50">[<expr pos:start="65:49" pos:end="65:49"><name pos:start="65:49" pos:end="65:49">i</name></expr>]</index></name><operator pos:start="65:51" pos:end="65:51">.</operator><name pos:start="65:52" pos:end="65:53">fd</name></expr></argument>, <argument pos:start="65:56" pos:end="65:65"><expr pos:start="65:56" pos:end="65:65"><operator pos:start="65:56" pos:end="65:56">&amp;</operator><name pos:start="65:57" pos:end="65:65">write_set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="67:9" pos:end="67:71"><if pos:start="67:9" pos:end="67:71">if <condition pos:start="67:12" pos:end="67:36">(<expr pos:start="67:13" pos:end="67:35"><name pos:start="67:13" pos:end="67:18"><name pos:start="67:13" pos:end="67:15">fds</name><index pos:start="67:16" pos:end="67:18">[<expr pos:start="67:17" pos:end="67:17"><name pos:start="67:17" pos:end="67:17">i</name></expr>]</index></name><operator pos:start="67:19" pos:end="67:19">.</operator><name pos:start="67:20" pos:end="67:25">events</name> <operator pos:start="67:27" pos:end="67:27">&amp;</operator> <name pos:start="67:29" pos:end="67:35">POLLERR</name></expr>)</condition><block type="pseudo" pos:start="67:38" pos:end="67:71"><block_content pos:start="67:38" pos:end="67:71"> <expr_stmt pos:start="67:38" pos:end="67:71"><expr pos:start="67:38" pos:end="67:70"><call pos:start="67:38" pos:end="67:70"><name pos:start="67:38" pos:end="67:43">FD_SET</name><argument_list pos:start="67:44" pos:end="67:70">(<argument pos:start="67:45" pos:end="67:53"><expr pos:start="67:45" pos:end="67:53"><name pos:start="67:45" pos:end="67:50"><name pos:start="67:45" pos:end="67:47">fds</name><index pos:start="67:48" pos:end="67:50">[<expr pos:start="67:49" pos:end="67:49"><name pos:start="67:49" pos:end="67:49">i</name></expr>]</index></name><operator pos:start="67:51" pos:end="67:51">.</operator><name pos:start="67:52" pos:end="67:53">fd</name></expr></argument>, <argument pos:start="67:56" pos:end="67:69"><expr pos:start="67:56" pos:end="67:69"><operator pos:start="67:56" pos:end="67:56">&amp;</operator><name pos:start="67:57" pos:end="67:69">exception_set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="71:9" pos:end="73:26"><if pos:start="71:9" pos:end="73:26">if <condition pos:start="71:12" pos:end="71:26">(<expr pos:start="71:13" pos:end="71:25"><name pos:start="71:13" pos:end="71:18"><name pos:start="71:13" pos:end="71:15">fds</name><index pos:start="71:16" pos:end="71:18">[<expr pos:start="71:17" pos:end="71:17"><name pos:start="71:17" pos:end="71:17">i</name></expr>]</index></name><operator pos:start="71:19" pos:end="71:19">.</operator><name pos:start="71:20" pos:end="71:21">fd</name> <operator pos:start="71:23" pos:end="71:23">&gt;</operator> <name pos:start="71:25" pos:end="71:25">n</name></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:26"><block_content pos:start="73:13" pos:end="73:26">

            <expr_stmt pos:start="73:13" pos:end="73:26"><expr pos:start="73:13" pos:end="73:25"><name pos:start="73:13" pos:end="73:13">n</name> <operator pos:start="73:15" pos:end="73:15">=</operator> <name pos:start="73:17" pos:end="73:22"><name pos:start="73:17" pos:end="73:19">fds</name><index pos:start="73:20" pos:end="73:22">[<expr pos:start="73:21" pos:end="73:21"><name pos:start="73:21" pos:end="73:21">i</name></expr>]</index></name><operator pos:start="73:23" pos:end="73:23">.</operator><name pos:start="73:24" pos:end="73:25">fd</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for><empty_stmt pos:start="75:6" pos:end="75:6">;</empty_stmt>



    <if_stmt pos:start="79:5" pos:end="83:17"><if pos:start="79:5" pos:end="83:17">if <condition pos:start="79:8" pos:end="79:16">(<expr pos:start="79:9" pos:end="79:15"><name pos:start="79:9" pos:end="79:9">n</name> <operator pos:start="79:11" pos:end="79:12">==</operator> <operator pos:start="79:14" pos:end="79:14">-</operator><literal type="number" pos:start="79:15" pos:end="79:15">1</literal></expr>)</condition><block type="pseudo" pos:start="83:9" pos:end="83:17"><block_content pos:start="83:9" pos:end="83:17">

        <comment type="block" pos:start="81:9" pos:end="81:47">/* Hey!? Nothing to poll, in fact!!! */</comment>

        <return pos:start="83:9" pos:end="83:17">return <expr pos:start="83:16" pos:end="83:16"><literal type="number" pos:start="83:16" pos:end="83:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="87:5" pos:end="103:5"><if pos:start="87:5" pos:end="89:70">if <condition pos:start="87:8" pos:end="87:20">(<expr pos:start="87:9" pos:end="87:19"><name pos:start="87:9" pos:end="87:15">timeout</name> <operator pos:start="87:17" pos:end="87:17">&lt;</operator> <literal type="number" pos:start="87:19" pos:end="87:19">0</literal></expr>)</condition><block type="pseudo" pos:start="89:9" pos:end="89:70"><block_content pos:start="89:9" pos:end="89:70">

        <expr_stmt pos:start="89:9" pos:end="89:70"><expr pos:start="89:9" pos:end="89:69"><name pos:start="89:9" pos:end="89:10">rc</name> <operator pos:start="89:12" pos:end="89:12">=</operator> <call pos:start="89:14" pos:end="89:69"><name pos:start="89:14" pos:end="89:19">select</name><argument_list pos:start="89:20" pos:end="89:69">(<argument pos:start="89:21" pos:end="89:23"><expr pos:start="89:21" pos:end="89:23"><name pos:start="89:21" pos:end="89:21">n</name><operator pos:start="89:22" pos:end="89:22">+</operator><literal type="number" pos:start="89:23" pos:end="89:23">1</literal></expr></argument>, <argument pos:start="89:26" pos:end="89:34"><expr pos:start="89:26" pos:end="89:34"><operator pos:start="89:26" pos:end="89:26">&amp;</operator><name pos:start="89:27" pos:end="89:34">read_set</name></expr></argument>, <argument pos:start="89:37" pos:end="89:46"><expr pos:start="89:37" pos:end="89:46"><operator pos:start="89:37" pos:end="89:37">&amp;</operator><name pos:start="89:38" pos:end="89:46">write_set</name></expr></argument>, <argument pos:start="89:49" pos:end="89:62"><expr pos:start="89:49" pos:end="89:62"><operator pos:start="89:49" pos:end="89:49">&amp;</operator><name pos:start="89:50" pos:end="89:62">exception_set</name></expr></argument>, <argument pos:start="89:65" pos:end="89:68"><expr pos:start="89:65" pos:end="89:68"><name pos:start="89:65" pos:end="89:68">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="91:5" pos:end="103:5">else <block pos:start="91:10" pos:end="103:5">{<block_content pos:start="93:9" pos:end="101:69">

        <decl_stmt pos:start="93:9" pos:end="93:29"><decl pos:start="93:9" pos:end="93:28"><type pos:start="93:9" pos:end="93:22"><name pos:start="93:9" pos:end="93:22"><name pos:start="93:9" pos:end="93:14">struct</name> <name pos:start="93:16" pos:end="93:22">timeval</name></name></type>    <name pos:start="93:27" pos:end="93:28">tv</name></decl>;</decl_stmt>



        <expr_stmt pos:start="97:9" pos:end="97:35"><expr pos:start="97:9" pos:end="97:34"><name pos:start="97:9" pos:end="97:17"><name pos:start="97:9" pos:end="97:10">tv</name><operator pos:start="97:11" pos:end="97:11">.</operator><name pos:start="97:12" pos:end="97:17">tv_sec</name></name> <operator pos:start="97:19" pos:end="97:19">=</operator> <name pos:start="97:21" pos:end="97:27">timeout</name> <operator pos:start="97:29" pos:end="97:29">/</operator> <literal type="number" pos:start="97:31" pos:end="97:34">1000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:45"><expr pos:start="99:9" pos:end="99:44"><name pos:start="99:9" pos:end="99:18"><name pos:start="99:9" pos:end="99:10">tv</name><operator pos:start="99:11" pos:end="99:11">.</operator><name pos:start="99:12" pos:end="99:18">tv_usec</name></name> <operator pos:start="99:20" pos:end="99:20">=</operator> <literal type="number" pos:start="99:22" pos:end="99:25">1000</literal> <operator pos:start="99:27" pos:end="99:27">*</operator> <operator pos:start="99:29" pos:end="99:29">(</operator><name pos:start="99:30" pos:end="99:36">timeout</name> <operator pos:start="99:38" pos:end="99:38">%</operator> <literal type="number" pos:start="99:40" pos:end="99:43">1000</literal><operator pos:start="99:44" pos:end="99:44">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:69"><expr pos:start="101:9" pos:end="101:68"><name pos:start="101:9" pos:end="101:10">rc</name> <operator pos:start="101:12" pos:end="101:12">=</operator> <call pos:start="101:14" pos:end="101:68"><name pos:start="101:14" pos:end="101:19">select</name><argument_list pos:start="101:20" pos:end="101:68">(<argument pos:start="101:21" pos:end="101:23"><expr pos:start="101:21" pos:end="101:23"><name pos:start="101:21" pos:end="101:21">n</name><operator pos:start="101:22" pos:end="101:22">+</operator><literal type="number" pos:start="101:23" pos:end="101:23">1</literal></expr></argument>, <argument pos:start="101:26" pos:end="101:34"><expr pos:start="101:26" pos:end="101:34"><operator pos:start="101:26" pos:end="101:26">&amp;</operator><name pos:start="101:27" pos:end="101:34">read_set</name></expr></argument>, <argument pos:start="101:37" pos:end="101:46"><expr pos:start="101:37" pos:end="101:46"><operator pos:start="101:37" pos:end="101:37">&amp;</operator><name pos:start="101:38" pos:end="101:46">write_set</name></expr></argument>, <argument pos:start="101:49" pos:end="101:62"><expr pos:start="101:49" pos:end="101:62"><operator pos:start="101:49" pos:end="101:49">&amp;</operator><name pos:start="101:50" pos:end="101:62">exception_set</name></expr></argument>, <argument pos:start="101:65" pos:end="101:67"><expr pos:start="101:65" pos:end="101:67"><operator pos:start="101:65" pos:end="101:65">&amp;</operator><name pos:start="101:66" pos:end="101:67">tv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt><empty_stmt pos:start="103:6" pos:end="103:6">;</empty_stmt>



    <if_stmt pos:start="107:5" pos:end="109:18"><if pos:start="107:5" pos:end="109:18">if <condition pos:start="107:8" pos:end="107:15">(<expr pos:start="107:9" pos:end="107:14"><name pos:start="107:9" pos:end="107:10">rc</name> <operator pos:start="107:12" pos:end="107:12">&lt;</operator> <literal type="number" pos:start="107:14" pos:end="107:14">0</literal></expr>)</condition><block type="pseudo" pos:start="109:9" pos:end="109:18"><block_content pos:start="109:9" pos:end="109:18">

        <return pos:start="109:9" pos:end="109:18">return <expr pos:start="109:16" pos:end="109:17"><name pos:start="109:16" pos:end="109:17">rc</name></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="113:5" pos:end="125:5">for<control pos:start="113:8" pos:end="113:35">(<init pos:start="113:9" pos:end="113:14"><expr pos:start="113:9" pos:end="113:13"><name pos:start="113:9" pos:end="113:9">i</name> <operator pos:start="113:11" pos:end="113:11">=</operator> <literal type="number" pos:start="113:13" pos:end="113:13">0</literal></expr>;</init> <condition pos:start="113:16" pos:end="113:30"><expr pos:start="113:16" pos:end="113:29"><name pos:start="113:16" pos:end="113:16">i</name> <operator pos:start="113:18" pos:end="113:18">&lt;</operator> <operator pos:start="113:20" pos:end="113:20">(</operator><name pos:start="113:21" pos:end="113:26">nfds_t</name><operator pos:start="113:27" pos:end="113:27">)</operator> <name pos:start="113:29" pos:end="113:29">n</name></expr>;</condition> <incr pos:start="113:32" pos:end="113:34"><expr pos:start="113:32" pos:end="113:34"><name pos:start="113:32" pos:end="113:32">i</name><operator pos:start="113:33" pos:end="113:34">++</operator></expr></incr>)</control> <block pos:start="113:37" pos:end="125:5">{<block_content pos:start="115:9" pos:end="123:75">

        <expr_stmt pos:start="115:9" pos:end="115:27"><expr pos:start="115:9" pos:end="115:26"><name pos:start="115:9" pos:end="115:14"><name pos:start="115:9" pos:end="115:11">fds</name><index pos:start="115:12" pos:end="115:14">[<expr pos:start="115:13" pos:end="115:13"><name pos:start="115:13" pos:end="115:13">i</name></expr>]</index></name><operator pos:start="115:15" pos:end="115:15">.</operator><name pos:start="115:16" pos:end="115:22">revents</name> <operator pos:start="115:24" pos:end="115:24">=</operator> <literal type="number" pos:start="115:26" pos:end="115:26">0</literal></expr>;</expr_stmt>



        <if_stmt pos:start="119:9" pos:end="119:74"><if pos:start="119:9" pos:end="119:74">if <condition pos:start="119:12" pos:end="119:43">(<expr pos:start="119:13" pos:end="119:42"><call pos:start="119:13" pos:end="119:42"><name pos:start="119:13" pos:end="119:20">FD_ISSET</name><argument_list pos:start="119:21" pos:end="119:42">(<argument pos:start="119:22" pos:end="119:30"><expr pos:start="119:22" pos:end="119:30"><name pos:start="119:22" pos:end="119:27"><name pos:start="119:22" pos:end="119:24">fds</name><index pos:start="119:25" pos:end="119:27">[<expr pos:start="119:26" pos:end="119:26"><name pos:start="119:26" pos:end="119:26">i</name></expr>]</index></name><operator pos:start="119:28" pos:end="119:28">.</operator><name pos:start="119:29" pos:end="119:30">fd</name></expr></argument>, <argument pos:start="119:33" pos:end="119:41"><expr pos:start="119:33" pos:end="119:41"><operator pos:start="119:33" pos:end="119:33">&amp;</operator><name pos:start="119:34" pos:end="119:41">read_set</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="119:50" pos:end="119:74"><block_content pos:start="119:50" pos:end="119:74">      <expr_stmt pos:start="119:50" pos:end="119:74"><expr pos:start="119:50" pos:end="119:73"><name pos:start="119:50" pos:end="119:55"><name pos:start="119:50" pos:end="119:52">fds</name><index pos:start="119:53" pos:end="119:55">[<expr pos:start="119:54" pos:end="119:54"><name pos:start="119:54" pos:end="119:54">i</name></expr>]</index></name><operator pos:start="119:56" pos:end="119:56">.</operator><name pos:start="119:57" pos:end="119:63">revents</name> <operator pos:start="119:65" pos:end="119:66">|=</operator> <name pos:start="119:68" pos:end="119:73">POLLIN</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="121:9" pos:end="121:75"><if pos:start="121:9" pos:end="121:75">if <condition pos:start="121:12" pos:end="121:44">(<expr pos:start="121:13" pos:end="121:43"><call pos:start="121:13" pos:end="121:43"><name pos:start="121:13" pos:end="121:20">FD_ISSET</name><argument_list pos:start="121:21" pos:end="121:43">(<argument pos:start="121:22" pos:end="121:30"><expr pos:start="121:22" pos:end="121:30"><name pos:start="121:22" pos:end="121:27"><name pos:start="121:22" pos:end="121:24">fds</name><index pos:start="121:25" pos:end="121:27">[<expr pos:start="121:26" pos:end="121:26"><name pos:start="121:26" pos:end="121:26">i</name></expr>]</index></name><operator pos:start="121:28" pos:end="121:28">.</operator><name pos:start="121:29" pos:end="121:30">fd</name></expr></argument>, <argument pos:start="121:33" pos:end="121:42"><expr pos:start="121:33" pos:end="121:42"><operator pos:start="121:33" pos:end="121:33">&amp;</operator><name pos:start="121:34" pos:end="121:42">write_set</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="121:50" pos:end="121:75"><block_content pos:start="121:50" pos:end="121:75">     <expr_stmt pos:start="121:50" pos:end="121:75"><expr pos:start="121:50" pos:end="121:74"><name pos:start="121:50" pos:end="121:55"><name pos:start="121:50" pos:end="121:52">fds</name><index pos:start="121:53" pos:end="121:55">[<expr pos:start="121:54" pos:end="121:54"><name pos:start="121:54" pos:end="121:54">i</name></expr>]</index></name><operator pos:start="121:56" pos:end="121:56">.</operator><name pos:start="121:57" pos:end="121:63">revents</name> <operator pos:start="121:65" pos:end="121:66">|=</operator> <name pos:start="121:68" pos:end="121:74">POLLOUT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="123:9" pos:end="123:75"><if pos:start="123:9" pos:end="123:75">if <condition pos:start="123:12" pos:end="123:48">(<expr pos:start="123:13" pos:end="123:47"><call pos:start="123:13" pos:end="123:47"><name pos:start="123:13" pos:end="123:20">FD_ISSET</name><argument_list pos:start="123:21" pos:end="123:47">(<argument pos:start="123:22" pos:end="123:30"><expr pos:start="123:22" pos:end="123:30"><name pos:start="123:22" pos:end="123:27"><name pos:start="123:22" pos:end="123:24">fds</name><index pos:start="123:25" pos:end="123:27">[<expr pos:start="123:26" pos:end="123:26"><name pos:start="123:26" pos:end="123:26">i</name></expr>]</index></name><operator pos:start="123:28" pos:end="123:28">.</operator><name pos:start="123:29" pos:end="123:30">fd</name></expr></argument>, <argument pos:start="123:33" pos:end="123:46"><expr pos:start="123:33" pos:end="123:46"><operator pos:start="123:33" pos:end="123:33">&amp;</operator><name pos:start="123:34" pos:end="123:46">exception_set</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="123:50" pos:end="123:75"><block_content pos:start="123:50" pos:end="123:75"> <expr_stmt pos:start="123:50" pos:end="123:75"><expr pos:start="123:50" pos:end="123:74"><name pos:start="123:50" pos:end="123:55"><name pos:start="123:50" pos:end="123:52">fds</name><index pos:start="123:53" pos:end="123:55">[<expr pos:start="123:54" pos:end="123:54"><name pos:start="123:54" pos:end="123:54">i</name></expr>]</index></name><operator pos:start="123:56" pos:end="123:56">.</operator><name pos:start="123:57" pos:end="123:63">revents</name> <operator pos:start="123:65" pos:end="123:66">|=</operator> <name pos:start="123:68" pos:end="123:74">POLLERR</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for><empty_stmt pos:start="125:6" pos:end="125:6">;</empty_stmt>



    <return pos:start="129:5" pos:end="129:14">return <expr pos:start="129:12" pos:end="129:13"><name pos:start="129:12" pos:end="129:13">rc</name></expr>;</return>

</block_content>}</block></function>
</unit>
