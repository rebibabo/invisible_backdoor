<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19575.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">usbredir_handle_control</name><parameter_list pos:start="1:35" pos:end="3:69">(<parameter pos:start="1:36" pos:end="1:50"><decl pos:start="1:36" pos:end="1:50"><type pos:start="1:36" pos:end="1:50"><name pos:start="1:36" pos:end="1:44">USBDevice</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:50">udev</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:64"><decl pos:start="1:53" pos:end="1:64"><type pos:start="1:53" pos:end="1:64"><name pos:start="1:53" pos:end="1:61">USBPacket</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:64">p</name></decl></parameter>,

        <parameter pos:start="3:9" pos:end="3:19"><decl pos:start="3:9" pos:end="3:19"><type pos:start="3:9" pos:end="3:19"><name pos:start="3:9" pos:end="3:11">int</name></type> <name pos:start="3:13" pos:end="3:19">request</name></decl></parameter>, <parameter pos:start="3:22" pos:end="3:30"><decl pos:start="3:22" pos:end="3:30"><type pos:start="3:22" pos:end="3:30"><name pos:start="3:22" pos:end="3:24">int</name></type> <name pos:start="3:26" pos:end="3:30">value</name></decl></parameter>, <parameter pos:start="3:33" pos:end="3:41"><decl pos:start="3:33" pos:end="3:41"><type pos:start="3:33" pos:end="3:41"><name pos:start="3:33" pos:end="3:35">int</name></type> <name pos:start="3:37" pos:end="3:41">index</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:53"><decl pos:start="3:44" pos:end="3:53"><type pos:start="3:44" pos:end="3:53"><name pos:start="3:44" pos:end="3:46">int</name></type> <name pos:start="3:48" pos:end="3:53">length</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:68"><decl pos:start="3:56" pos:end="3:68"><type pos:start="3:56" pos:end="3:68"><name pos:start="3:56" pos:end="3:62">uint8_t</name> <modifier pos:start="3:64" pos:end="3:64">*</modifier></type><name pos:start="3:65" pos:end="3:68">data</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="99:1">{<block_content pos:start="7:5" pos:end="97:25">

    <decl_stmt pos:start="7:5" pos:end="7:63"><decl pos:start="7:5" pos:end="7:62"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">USBRedirDevice</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:23">dev</name> <init pos:start="7:25" pos:end="7:62">= <expr pos:start="7:27" pos:end="7:62"><call pos:start="7:27" pos:end="7:62"><name pos:start="7:27" pos:end="7:35">DO_UPCAST</name><argument_list pos:start="7:36" pos:end="7:62">(<argument pos:start="7:37" pos:end="7:50"><expr pos:start="7:37" pos:end="7:50"><name pos:start="7:37" pos:end="7:50">USBRedirDevice</name></expr></argument>, <argument pos:start="7:53" pos:end="7:55"><expr pos:start="7:53" pos:end="7:55"><name pos:start="7:53" pos:end="7:55">dev</name></expr></argument>, <argument pos:start="7:58" pos:end="7:61"><expr pos:start="7:58" pos:end="7:61"><name pos:start="7:58" pos:end="7:61">udev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:58"><decl pos:start="9:5" pos:end="9:57"><type pos:start="9:5" pos:end="9:42"><name pos:start="9:5" pos:end="9:42"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:42">usb_redir_control_packet_header</name></name></type> <name pos:start="9:44" pos:end="9:57">control_packet</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">AsyncURB</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:18">aurb</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:60">/* Special cases for certain standard device requests */</comment>

    <switch pos:start="17:5" pos:end="43:5">switch <condition pos:start="17:12" pos:end="17:20">(<expr pos:start="17:13" pos:end="17:19"><name pos:start="17:13" pos:end="17:19">request</name></expr>)</condition> <block pos:start="17:22" pos:end="43:5">{<block_content pos:start="19:5" pos:end="41:53">

    <case pos:start="19:5" pos:end="19:48">case <expr pos:start="19:10" pos:end="19:47"><name pos:start="19:10" pos:end="19:25">DeviceOutRequest</name> <operator pos:start="19:27" pos:end="19:27">|</operator> <name pos:start="19:29" pos:end="19:47">USB_REQ_SET_ADDRESS</name></expr>:</case>

        <expr_stmt pos:start="21:9" pos:end="21:43"><expr pos:start="21:9" pos:end="21:42"><call pos:start="21:9" pos:end="21:42"><name pos:start="21:9" pos:end="21:15">DPRINTF</name><argument_list pos:start="21:16" pos:end="21:42">(<argument pos:start="21:17" pos:end="21:34"><expr pos:start="21:17" pos:end="21:34"><literal type="string" pos:start="21:17" pos:end="21:34">"set address %d\n"</literal></expr></argument>, <argument pos:start="21:37" pos:end="21:41"><expr pos:start="21:37" pos:end="21:41"><name pos:start="21:37" pos:end="21:41">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:30"><expr pos:start="23:9" pos:end="23:29"><name pos:start="23:9" pos:end="23:21"><name pos:start="23:9" pos:end="23:11">dev</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:16">dev</name><operator pos:start="23:17" pos:end="23:17">.</operator><name pos:start="23:18" pos:end="23:21">addr</name></name> <operator pos:start="23:23" pos:end="23:23">=</operator> <name pos:start="23:25" pos:end="23:29">value</name></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:17">return <expr pos:start="25:16" pos:end="25:16"><literal type="number" pos:start="25:16" pos:end="25:16">0</literal></expr>;</return>

    <case pos:start="27:5" pos:end="27:54">case <expr pos:start="27:10" pos:end="27:53"><name pos:start="27:10" pos:end="27:25">DeviceOutRequest</name> <operator pos:start="27:27" pos:end="27:27">|</operator> <name pos:start="27:29" pos:end="27:53">USB_REQ_SET_CONFIGURATION</name></expr>:</case>

        <return pos:start="29:9" pos:end="29:57">return <expr pos:start="29:16" pos:end="29:56"><call pos:start="29:16" pos:end="29:56"><name pos:start="29:16" pos:end="29:34">usbredir_set_config</name><argument_list pos:start="29:35" pos:end="29:56">(<argument pos:start="29:36" pos:end="29:38"><expr pos:start="29:36" pos:end="29:38"><name pos:start="29:36" pos:end="29:38">dev</name></expr></argument>, <argument pos:start="29:41" pos:end="29:41"><expr pos:start="29:41" pos:end="29:41"><name pos:start="29:41" pos:end="29:41">p</name></expr></argument>, <argument pos:start="29:44" pos:end="29:55"><expr pos:start="29:44" pos:end="29:55"><name pos:start="29:44" pos:end="29:48">value</name> <operator pos:start="29:50" pos:end="29:50">&amp;</operator> <literal type="number" pos:start="29:52" pos:end="29:55">0xff</literal></expr></argument>)</argument_list></call></expr>;</return>

    <case pos:start="31:5" pos:end="31:51">case <expr pos:start="31:10" pos:end="31:50"><name pos:start="31:10" pos:end="31:22">DeviceRequest</name> <operator pos:start="31:24" pos:end="31:24">|</operator> <name pos:start="31:26" pos:end="31:50">USB_REQ_GET_CONFIGURATION</name></expr>:</case>

        <return pos:start="33:9" pos:end="33:43">return <expr pos:start="33:16" pos:end="33:42"><call pos:start="33:16" pos:end="33:42"><name pos:start="33:16" pos:end="33:34">usbredir_get_config</name><argument_list pos:start="33:35" pos:end="33:42">(<argument pos:start="33:36" pos:end="33:38"><expr pos:start="33:36" pos:end="33:38"><name pos:start="33:36" pos:end="33:38">dev</name></expr></argument>, <argument pos:start="33:41" pos:end="33:41"><expr pos:start="33:41" pos:end="33:41"><name pos:start="33:41" pos:end="33:41">p</name></expr></argument>)</argument_list></call></expr>;</return>

    <case pos:start="35:5" pos:end="35:53">case <expr pos:start="35:10" pos:end="35:52"><name pos:start="35:10" pos:end="35:28">InterfaceOutRequest</name> <operator pos:start="35:30" pos:end="35:30">|</operator> <name pos:start="35:32" pos:end="35:52">USB_REQ_SET_INTERFACE</name></expr>:</case>

        <return pos:start="37:9" pos:end="37:60">return <expr pos:start="37:16" pos:end="37:59"><call pos:start="37:16" pos:end="37:59"><name pos:start="37:16" pos:end="37:37">usbredir_set_interface</name><argument_list pos:start="37:38" pos:end="37:59">(<argument pos:start="37:39" pos:end="37:41"><expr pos:start="37:39" pos:end="37:41"><name pos:start="37:39" pos:end="37:41">dev</name></expr></argument>, <argument pos:start="37:44" pos:end="37:44"><expr pos:start="37:44" pos:end="37:44"><name pos:start="37:44" pos:end="37:44">p</name></expr></argument>, <argument pos:start="37:47" pos:end="37:51"><expr pos:start="37:47" pos:end="37:51"><name pos:start="37:47" pos:end="37:51">index</name></expr></argument>, <argument pos:start="37:54" pos:end="37:58"><expr pos:start="37:54" pos:end="37:58"><name pos:start="37:54" pos:end="37:58">value</name></expr></argument>)</argument_list></call></expr>;</return>

    <case pos:start="39:5" pos:end="39:50">case <expr pos:start="39:10" pos:end="39:49"><name pos:start="39:10" pos:end="39:25">InterfaceRequest</name> <operator pos:start="39:27" pos:end="39:27">|</operator> <name pos:start="39:29" pos:end="39:49">USB_REQ_GET_INTERFACE</name></expr>:</case>

        <return pos:start="41:9" pos:end="41:53">return <expr pos:start="41:16" pos:end="41:52"><call pos:start="41:16" pos:end="41:52"><name pos:start="41:16" pos:end="41:37">usbredir_get_interface</name><argument_list pos:start="41:38" pos:end="41:52">(<argument pos:start="41:39" pos:end="41:41"><expr pos:start="41:39" pos:end="41:41"><name pos:start="41:39" pos:end="41:41">dev</name></expr></argument>, <argument pos:start="41:44" pos:end="41:44"><expr pos:start="41:44" pos:end="41:44"><name pos:start="41:44" pos:end="41:44">p</name></expr></argument>, <argument pos:start="41:47" pos:end="41:51"><expr pos:start="41:47" pos:end="41:51"><name pos:start="41:47" pos:end="41:51">index</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></switch>



    <comment type="block" pos:start="47:5" pos:end="47:32">/* "Normal" ctrl requests */</comment>

    <expr_stmt pos:start="49:5" pos:end="49:31"><expr pos:start="49:5" pos:end="49:30"><name pos:start="49:5" pos:end="49:8">aurb</name> <operator pos:start="49:10" pos:end="49:10">=</operator> <call pos:start="49:12" pos:end="49:30"><name pos:start="49:12" pos:end="49:22">async_alloc</name><argument_list pos:start="49:23" pos:end="49:30">(<argument pos:start="49:24" pos:end="49:26"><expr pos:start="49:24" pos:end="49:26"><name pos:start="49:24" pos:end="49:26">dev</name></expr></argument>, <argument pos:start="49:29" pos:end="49:29"><expr pos:start="49:29" pos:end="49:29"><name pos:start="49:29" pos:end="49:29">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="53:5" pos:end="53:56">/* Note request is (bRequestType &lt;&lt; 8) | bRequest */</comment>

    <expr_stmt pos:start="55:5" pos:end="59:29"><expr pos:start="55:5" pos:end="59:28"><call pos:start="55:5" pos:end="59:28"><name pos:start="55:5" pos:end="55:11">DPRINTF</name><argument_list pos:start="55:12" pos:end="59:28">(<argument pos:start="55:13" pos:end="55:74"><expr pos:start="55:13" pos:end="55:74"><literal type="string" pos:start="55:13" pos:end="55:74">"ctrl-out type 0x%x req 0x%x val 0x%x index %d len %d id %u\n"</literal></expr></argument>,

            <argument pos:start="57:13" pos:end="57:24"><expr pos:start="57:13" pos:end="57:24"><name pos:start="57:13" pos:end="57:19">request</name> <operator pos:start="57:21" pos:end="57:22">&gt;&gt;</operator> <literal type="number" pos:start="57:24" pos:end="57:24">8</literal></expr></argument>, <argument pos:start="57:27" pos:end="57:40"><expr pos:start="57:27" pos:end="57:40"><name pos:start="57:27" pos:end="57:33">request</name> <operator pos:start="57:35" pos:end="57:35">&amp;</operator> <literal type="number" pos:start="57:37" pos:end="57:40">0xff</literal></expr></argument>, <argument pos:start="57:43" pos:end="57:47"><expr pos:start="57:43" pos:end="57:47"><name pos:start="57:43" pos:end="57:47">value</name></expr></argument>, <argument pos:start="57:50" pos:end="57:54"><expr pos:start="57:50" pos:end="57:54"><name pos:start="57:50" pos:end="57:54">index</name></expr></argument>, <argument pos:start="57:57" pos:end="57:62"><expr pos:start="57:57" pos:end="57:62"><name pos:start="57:57" pos:end="57:62">length</name></expr></argument>,

            <argument pos:start="59:13" pos:end="59:27"><expr pos:start="59:13" pos:end="59:27"><name pos:start="59:13" pos:end="59:27"><name pos:start="59:13" pos:end="59:16">aurb</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:27">packet_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:48"><expr pos:start="63:5" pos:end="63:47"><name pos:start="63:5" pos:end="63:26"><name pos:start="63:5" pos:end="63:18">control_packet</name><operator pos:start="63:19" pos:end="63:19">.</operator><name pos:start="63:20" pos:end="63:26">request</name></name>     <operator pos:start="63:32" pos:end="63:32">=</operator> <name pos:start="63:34" pos:end="63:40">request</name> <operator pos:start="63:42" pos:end="63:42">&amp;</operator> <literal type="number" pos:start="63:44" pos:end="63:47">0xFF</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:46"><expr pos:start="65:5" pos:end="65:45"><name pos:start="65:5" pos:end="65:30"><name pos:start="65:5" pos:end="65:18">control_packet</name><operator pos:start="65:19" pos:end="65:19">.</operator><name pos:start="65:20" pos:end="65:30">requesttype</name></name> <operator pos:start="65:32" pos:end="65:32">=</operator> <name pos:start="65:34" pos:end="65:40">request</name> <operator pos:start="65:42" pos:end="65:43">&gt;&gt;</operator> <literal type="number" pos:start="65:45" pos:end="65:45">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:73"><expr pos:start="67:5" pos:end="67:72"><name pos:start="67:5" pos:end="67:27"><name pos:start="67:5" pos:end="67:18">control_packet</name><operator pos:start="67:19" pos:end="67:19">.</operator><name pos:start="67:20" pos:end="67:27">endpoint</name></name>    <operator pos:start="67:32" pos:end="67:32">=</operator> <name pos:start="67:34" pos:end="67:59"><name pos:start="67:34" pos:end="67:47">control_packet</name><operator pos:start="67:48" pos:end="67:48">.</operator><name pos:start="67:49" pos:end="67:59">requesttype</name></name> <operator pos:start="67:61" pos:end="67:61">&amp;</operator> <name pos:start="67:63" pos:end="67:72">USB_DIR_IN</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:39"><expr pos:start="69:5" pos:end="69:38"><name pos:start="69:5" pos:end="69:24"><name pos:start="69:5" pos:end="69:18">control_packet</name><operator pos:start="69:19" pos:end="69:19">.</operator><name pos:start="69:20" pos:end="69:24">value</name></name>       <operator pos:start="69:32" pos:end="69:32">=</operator> <name pos:start="69:34" pos:end="69:38">value</name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:39"><expr pos:start="71:5" pos:end="71:38"><name pos:start="71:5" pos:end="71:24"><name pos:start="71:5" pos:end="71:18">control_packet</name><operator pos:start="71:19" pos:end="71:19">.</operator><name pos:start="71:20" pos:end="71:24">index</name></name>       <operator pos:start="71:32" pos:end="71:32">=</operator> <name pos:start="71:34" pos:end="71:38">index</name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:40"><expr pos:start="73:5" pos:end="73:39"><name pos:start="73:5" pos:end="73:25"><name pos:start="73:5" pos:end="73:18">control_packet</name><operator pos:start="73:19" pos:end="73:19">.</operator><name pos:start="73:20" pos:end="73:25">length</name></name>      <operator pos:start="73:32" pos:end="73:32">=</operator> <name pos:start="73:34" pos:end="73:39">length</name></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:48"><expr pos:start="75:5" pos:end="75:47"><name pos:start="75:5" pos:end="75:24"><name pos:start="75:5" pos:end="75:8">aurb</name><operator pos:start="75:9" pos:end="75:10">-&gt;</operator><name pos:start="75:11" pos:end="75:24">control_packet</name></name>       <operator pos:start="75:32" pos:end="75:32">=</operator> <name pos:start="75:34" pos:end="75:47">control_packet</name></expr>;</expr_stmt>



    <if_stmt pos:start="79:5" pos:end="93:5"><if pos:start="79:5" pos:end="85:5">if <condition pos:start="79:8" pos:end="79:48">(<expr pos:start="79:9" pos:end="79:47"><name pos:start="79:9" pos:end="79:34"><name pos:start="79:9" pos:end="79:22">control_packet</name><operator pos:start="79:23" pos:end="79:23">.</operator><name pos:start="79:24" pos:end="79:34">requesttype</name></name> <operator pos:start="79:36" pos:end="79:36">&amp;</operator> <name pos:start="79:38" pos:end="79:47">USB_DIR_IN</name></expr>)</condition> <block pos:start="79:50" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:69">

        <expr_stmt pos:start="81:9" pos:end="83:69"><expr pos:start="81:9" pos:end="83:68"><call pos:start="81:9" pos:end="83:68"><name pos:start="81:9" pos:end="81:42">usbredirparser_send_control_packet</name><argument_list pos:start="81:43" pos:end="83:68">(<argument pos:start="81:44" pos:end="81:54"><expr pos:start="81:44" pos:end="81:54"><name pos:start="81:44" pos:end="81:54"><name pos:start="81:44" pos:end="81:46">dev</name><operator pos:start="81:47" pos:end="81:48">-&gt;</operator><name pos:start="81:49" pos:end="81:54">parser</name></name></expr></argument>, <argument pos:start="81:57" pos:end="81:71"><expr pos:start="81:57" pos:end="81:71"><name pos:start="81:57" pos:end="81:71"><name pos:start="81:57" pos:end="81:60">aurb</name><operator pos:start="81:61" pos:end="81:62">-&gt;</operator><name pos:start="81:63" pos:end="81:71">packet_id</name></name></expr></argument>,

                                           <argument pos:start="83:44" pos:end="83:58"><expr pos:start="83:44" pos:end="83:58"><operator pos:start="83:44" pos:end="83:44">&amp;</operator><name pos:start="83:45" pos:end="83:58">control_packet</name></expr></argument>, <argument pos:start="83:61" pos:end="83:64"><expr pos:start="83:61" pos:end="83:64"><name pos:start="83:61" pos:end="83:64">NULL</name></expr></argument>, <argument pos:start="83:67" pos:end="83:67"><expr pos:start="83:67" pos:end="83:67"><literal type="number" pos:start="83:67" pos:end="83:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="85:7" pos:end="93:5">else <block pos:start="85:12" pos:end="93:5">{<block_content pos:start="87:9" pos:end="91:74">

        <expr_stmt pos:start="87:9" pos:end="87:63"><expr pos:start="87:9" pos:end="87:62"><call pos:start="87:9" pos:end="87:62"><name pos:start="87:9" pos:end="87:25">usbredir_log_data</name><argument_list pos:start="87:26" pos:end="87:62">(<argument pos:start="87:27" pos:end="87:29"><expr pos:start="87:27" pos:end="87:29"><name pos:start="87:27" pos:end="87:29">dev</name></expr></argument>, <argument pos:start="87:32" pos:end="87:47"><expr pos:start="87:32" pos:end="87:47"><literal type="string" pos:start="87:32" pos:end="87:47">"ctrl data out:"</literal></expr></argument>, <argument pos:start="87:50" pos:end="87:53"><expr pos:start="87:50" pos:end="87:53"><name pos:start="87:50" pos:end="87:53">data</name></expr></argument>, <argument pos:start="87:56" pos:end="87:61"><expr pos:start="87:56" pos:end="87:61"><name pos:start="87:56" pos:end="87:61">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="91:74"><expr pos:start="89:9" pos:end="91:73"><call pos:start="89:9" pos:end="91:73"><name pos:start="89:9" pos:end="89:42">usbredirparser_send_control_packet</name><argument_list pos:start="89:43" pos:end="91:73">(<argument pos:start="89:44" pos:end="89:54"><expr pos:start="89:44" pos:end="89:54"><name pos:start="89:44" pos:end="89:54"><name pos:start="89:44" pos:end="89:46">dev</name><operator pos:start="89:47" pos:end="89:48">-&gt;</operator><name pos:start="89:49" pos:end="89:54">parser</name></name></expr></argument>, <argument pos:start="89:57" pos:end="89:71"><expr pos:start="89:57" pos:end="89:71"><name pos:start="89:57" pos:end="89:71"><name pos:start="89:57" pos:end="89:60">aurb</name><operator pos:start="89:61" pos:end="89:62">-&gt;</operator><name pos:start="89:63" pos:end="89:71">packet_id</name></name></expr></argument>,

                                           <argument pos:start="91:44" pos:end="91:58"><expr pos:start="91:44" pos:end="91:58"><operator pos:start="91:44" pos:end="91:44">&amp;</operator><name pos:start="91:45" pos:end="91:58">control_packet</name></expr></argument>, <argument pos:start="91:61" pos:end="91:64"><expr pos:start="91:61" pos:end="91:64"><name pos:start="91:61" pos:end="91:64">data</name></expr></argument>, <argument pos:start="91:67" pos:end="91:72"><expr pos:start="91:67" pos:end="91:72"><name pos:start="91:67" pos:end="91:72">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:41"><expr pos:start="95:5" pos:end="95:40"><call pos:start="95:5" pos:end="95:40"><name pos:start="95:5" pos:end="95:27">usbredirparser_do_write</name><argument_list pos:start="95:28" pos:end="95:40">(<argument pos:start="95:29" pos:end="95:39"><expr pos:start="95:29" pos:end="95:39"><name pos:start="95:29" pos:end="95:39"><name pos:start="95:29" pos:end="95:31">dev</name><operator pos:start="95:32" pos:end="95:33">-&gt;</operator><name pos:start="95:34" pos:end="95:39">parser</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="97:5" pos:end="97:25">return <expr pos:start="97:12" pos:end="97:24"><name pos:start="97:12" pos:end="97:24">USB_RET_ASYNC</name></expr>;</return>

</block_content>}</block></function>
</unit>
