<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3165.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">fft_ref_init</name><parameter_list pos:start="1:25" pos:end="1:48">(<parameter pos:start="1:26" pos:end="1:34"><decl pos:start="1:26" pos:end="1:34"><type pos:start="1:26" pos:end="1:34"><name pos:start="1:26" pos:end="1:28">int</name></type> <name pos:start="1:30" pos:end="1:34">nbits</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:47"><decl pos:start="1:37" pos:end="1:47"><type pos:start="1:37" pos:end="1:47"><name pos:start="1:37" pos:end="1:39">int</name></type> <name pos:start="1:41" pos:end="1:47">inverse</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:5">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:25"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">n</name> <init pos:start="5:14" pos:end="5:25">= <expr pos:start="5:16" pos:end="5:25"><literal type="number" pos:start="5:16" pos:end="5:16">1</literal> <operator pos:start="5:18" pos:end="5:19">&lt;&lt;</operator> <name pos:start="5:21" pos:end="5:25">nbits</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:50"><expr pos:start="9:5" pos:end="9:49"><name pos:start="9:5" pos:end="9:10">exptab</name> <operator pos:start="9:12" pos:end="9:12">=</operator> <call pos:start="9:14" pos:end="9:49"><name pos:start="9:14" pos:end="9:22">av_malloc</name><argument_list pos:start="9:23" pos:end="9:49">(<argument pos:start="9:24" pos:end="9:48"><expr pos:start="9:24" pos:end="9:48"><operator pos:start="9:24" pos:end="9:24">(</operator><name pos:start="9:25" pos:end="9:25">n</name> <operator pos:start="9:27" pos:end="9:27">/</operator> <literal type="number" pos:start="9:29" pos:end="9:29">2</literal><operator pos:start="9:30" pos:end="9:30">)</operator> <operator pos:start="9:32" pos:end="9:32">*</operator> <sizeof pos:start="9:34" pos:end="9:48">sizeof<argument_list pos:start="9:40" pos:end="9:48">(<argument pos:start="9:41" pos:end="9:47"><expr pos:start="9:41" pos:end="9:47"><operator pos:start="9:41" pos:end="9:41">*</operator><name pos:start="9:42" pos:end="9:47">exptab</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="13:5" pos:end="27:5">for <control pos:start="13:9" pos:end="13:31">(<init pos:start="13:10" pos:end="13:15"><expr pos:start="13:10" pos:end="13:14"><name pos:start="13:10" pos:end="13:10">i</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <literal type="number" pos:start="13:14" pos:end="13:14">0</literal></expr>;</init> <condition pos:start="13:17" pos:end="13:26"><expr pos:start="13:17" pos:end="13:25"><name pos:start="13:17" pos:end="13:17">i</name> <operator pos:start="13:19" pos:end="13:19">&lt;</operator> <operator pos:start="13:21" pos:end="13:21">(</operator><name pos:start="13:22" pos:end="13:22">n</name><operator pos:start="13:23" pos:end="13:23">/</operator><literal type="number" pos:start="13:24" pos:end="13:24">2</literal><operator pos:start="13:25" pos:end="13:25">)</operator></expr>;</condition> <incr pos:start="13:28" pos:end="13:30"><expr pos:start="13:28" pos:end="13:30"><name pos:start="13:28" pos:end="13:28">i</name><operator pos:start="13:29" pos:end="13:30">++</operator></expr></incr>)</control> <block pos:start="13:33" pos:end="27:5">{<block_content pos:start="15:9" pos:end="25:26">

        <decl_stmt pos:start="15:9" pos:end="15:54"><decl pos:start="15:9" pos:end="15:53"><type pos:start="15:9" pos:end="15:14"><name pos:start="15:9" pos:end="15:14">double</name></type> <name pos:start="15:16" pos:end="15:20">alpha</name> <init pos:start="15:22" pos:end="15:53">= <expr pos:start="15:24" pos:end="15:53"><literal type="number" pos:start="15:24" pos:end="15:24">2</literal> <operator pos:start="15:26" pos:end="15:26">*</operator> <name pos:start="15:28" pos:end="15:31">M_PI</name> <operator pos:start="15:33" pos:end="15:33">*</operator> <operator pos:start="15:35" pos:end="15:35">(</operator><name pos:start="15:36" pos:end="15:40">float</name><operator pos:start="15:41" pos:end="15:41">)</operator><name pos:start="15:42" pos:end="15:42">i</name> <operator pos:start="15:44" pos:end="15:44">/</operator> <operator pos:start="15:46" pos:end="15:46">(</operator><name pos:start="15:47" pos:end="15:51">float</name><operator pos:start="15:52" pos:end="15:52">)</operator><name pos:start="15:53" pos:end="15:53">n</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:48"><decl pos:start="17:9" pos:end="17:30"><type pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:14">double</name></type> <name pos:start="17:16" pos:end="17:17">c1</name> <init pos:start="17:19" pos:end="17:30">= <expr pos:start="17:21" pos:end="17:30"><call pos:start="17:21" pos:end="17:30"><name pos:start="17:21" pos:end="17:23">cos</name><argument_list pos:start="17:24" pos:end="17:30">(<argument pos:start="17:25" pos:end="17:29"><expr pos:start="17:25" pos:end="17:29"><name pos:start="17:25" pos:end="17:29">alpha</name></expr></argument>)</argument_list></call></expr></init></decl>, <decl pos:start="17:33" pos:end="17:47"><type ref="prev" pos:start="17:9" pos:end="17:14"/><name pos:start="17:33" pos:end="17:34">s1</name> <init pos:start="17:36" pos:end="17:47">= <expr pos:start="17:38" pos:end="17:47"><call pos:start="17:38" pos:end="17:47"><name pos:start="17:38" pos:end="17:40">sin</name><argument_list pos:start="17:41" pos:end="17:47">(<argument pos:start="17:42" pos:end="17:46"><expr pos:start="17:42" pos:end="17:46"><name pos:start="17:42" pos:end="17:46">alpha</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="19:9" pos:end="21:21"><if pos:start="19:9" pos:end="21:21">if <condition pos:start="19:12" pos:end="19:21">(<expr pos:start="19:13" pos:end="19:20"><operator pos:start="19:13" pos:end="19:13">!</operator><name pos:start="19:14" pos:end="19:20">inverse</name></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:21"><block_content pos:start="21:13" pos:end="21:21">

            <expr_stmt pos:start="21:13" pos:end="21:21"><expr pos:start="21:13" pos:end="21:20"><name pos:start="21:13" pos:end="21:14">s1</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <operator pos:start="21:18" pos:end="21:18">-</operator><name pos:start="21:19" pos:end="21:20">s1</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:26"><expr pos:start="23:9" pos:end="23:25"><name pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:14">exptab</name><index pos:start="23:15" pos:end="23:17">[<expr pos:start="23:16" pos:end="23:16"><name pos:start="23:16" pos:end="23:16">i</name></expr>]</index></name><operator pos:start="23:18" pos:end="23:18">.</operator><name pos:start="23:19" pos:end="23:20">re</name> <operator pos:start="23:22" pos:end="23:22">=</operator> <name pos:start="23:24" pos:end="23:25">c1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:26"><expr pos:start="25:9" pos:end="25:25"><name pos:start="25:9" pos:end="25:17"><name pos:start="25:9" pos:end="25:14">exptab</name><index pos:start="25:15" pos:end="25:17">[<expr pos:start="25:16" pos:end="25:16"><name pos:start="25:16" pos:end="25:16">i</name></expr>]</index></name><operator pos:start="25:18" pos:end="25:18">.</operator><name pos:start="25:19" pos:end="25:20">im</name> <operator pos:start="25:22" pos:end="25:22">=</operator> <name pos:start="25:24" pos:end="25:25">s1</name></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
