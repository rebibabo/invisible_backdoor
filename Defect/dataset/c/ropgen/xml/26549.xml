<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26549.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">usb_net_handle_datain</name><parameter_list pos:start="1:33" pos:end="1:62">(<parameter pos:start="1:34" pos:end="1:47"><decl pos:start="1:34" pos:end="1:47"><type pos:start="1:34" pos:end="1:47"><name pos:start="1:34" pos:end="1:44">USBNetState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:61"><decl pos:start="1:50" pos:end="1:61"><type pos:start="1:50" pos:end="1:61"><name pos:start="1:50" pos:end="1:58">USBPacket</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:61">p</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:15">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name> <init pos:start="5:13" pos:end="5:25">= <expr pos:start="5:15" pos:end="5:25"><name pos:start="5:15" pos:end="5:25">USB_RET_NAK</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="17:5"><if pos:start="9:5" pos:end="17:5">if <condition pos:start="9:8" pos:end="9:30">(<expr pos:start="9:9" pos:end="9:29"><name pos:start="9:9" pos:end="9:17"><name pos:start="9:9" pos:end="9:9">s</name><operator pos:start="9:10" pos:end="9:11">-&gt;</operator><name pos:start="9:12" pos:end="9:17">in_ptr</name></name> <operator pos:start="9:19" pos:end="9:19">&gt;</operator> <name pos:start="9:21" pos:end="9:29"><name pos:start="9:21" pos:end="9:21">s</name><operator pos:start="9:22" pos:end="9:23">-&gt;</operator><name pos:start="9:24" pos:end="9:29">in_len</name></name></expr>)</condition> <block pos:start="9:32" pos:end="17:5">{<block_content pos:start="11:9" pos:end="15:19">

        <expr_stmt pos:start="11:9" pos:end="11:34"><expr pos:start="11:9" pos:end="11:33"><name pos:start="11:9" pos:end="11:17"><name pos:start="11:9" pos:end="11:9">s</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:17">in_ptr</name></name> <operator pos:start="11:19" pos:end="11:19">=</operator> <name pos:start="11:21" pos:end="11:29"><name pos:start="11:21" pos:end="11:21">s</name><operator pos:start="11:22" pos:end="11:23">-&gt;</operator><name pos:start="11:24" pos:end="11:29">in_len</name></name> <operator pos:start="11:31" pos:end="11:31">=</operator> <literal type="number" pos:start="11:33" pos:end="11:33">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:26"><expr pos:start="13:9" pos:end="13:25"><name pos:start="13:9" pos:end="13:11">ret</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <name pos:start="13:15" pos:end="13:25">USB_RET_NAK</name></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:19">return <expr pos:start="15:16" pos:end="15:18"><name pos:start="15:16" pos:end="15:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:19">(<expr pos:start="19:9" pos:end="19:18"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:18"><name pos:start="19:10" pos:end="19:10">s</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:18">in_len</name></name></expr>)</condition> <block pos:start="19:21" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:19">

        <expr_stmt pos:start="21:9" pos:end="21:26"><expr pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:11">ret</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <name pos:start="21:15" pos:end="21:25">USB_RET_NAK</name></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:19">return <expr pos:start="23:16" pos:end="23:18"><name pos:start="23:16" pos:end="23:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:32"><expr pos:start="27:5" pos:end="27:31"><name pos:start="27:5" pos:end="27:7">ret</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <name pos:start="27:11" pos:end="27:19"><name pos:start="27:11" pos:end="27:11">s</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:19">in_len</name></name> <operator pos:start="27:21" pos:end="27:21">-</operator> <name pos:start="27:23" pos:end="27:31"><name pos:start="27:23" pos:end="27:23">s</name><operator pos:start="27:24" pos:end="27:25">-&gt;</operator><name pos:start="27:26" pos:end="27:31">in_ptr</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:26">(<expr pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:11">ret</name> <operator pos:start="29:13" pos:end="29:13">&gt;</operator> <name pos:start="29:15" pos:end="29:25"><name pos:start="29:15" pos:end="29:15">p</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:20">iov</name><operator pos:start="29:21" pos:end="29:21">.</operator><name pos:start="29:22" pos:end="29:25">size</name></name></expr>)</condition> <block pos:start="29:28" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:26">

        <expr_stmt pos:start="31:9" pos:end="31:26"><expr pos:start="31:9" pos:end="31:25"><name pos:start="31:9" pos:end="31:11">ret</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <name pos:start="31:15" pos:end="31:25"><name pos:start="31:15" pos:end="31:15">p</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:20">iov</name><operator pos:start="31:21" pos:end="31:21">.</operator><name pos:start="31:22" pos:end="31:25">size</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:51"><expr pos:start="35:5" pos:end="35:50"><call pos:start="35:5" pos:end="35:50"><name pos:start="35:5" pos:end="35:19">usb_packet_copy</name><argument_list pos:start="35:20" pos:end="35:50">(<argument pos:start="35:21" pos:end="35:21"><expr pos:start="35:21" pos:end="35:21"><name pos:start="35:21" pos:end="35:21">p</name></expr></argument>, <argument pos:start="35:24" pos:end="35:44"><expr pos:start="35:24" pos:end="35:44"><operator pos:start="35:24" pos:end="35:24">&amp;</operator><name pos:start="35:25" pos:end="35:44"><name pos:start="35:25" pos:end="35:25">s</name><operator pos:start="35:26" pos:end="35:27">-&gt;</operator><name pos:start="35:28" pos:end="35:33">in_buf</name><index pos:start="35:34" pos:end="35:44">[<expr pos:start="35:35" pos:end="35:43"><name pos:start="35:35" pos:end="35:43"><name pos:start="35:35" pos:end="35:35">s</name><operator pos:start="35:36" pos:end="35:37">-&gt;</operator><name pos:start="35:38" pos:end="35:43">in_ptr</name></name></expr>]</index></name></expr></argument>, <argument pos:start="35:47" pos:end="35:49"><expr pos:start="35:47" pos:end="35:49"><name pos:start="35:47" pos:end="35:49">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:21"><expr pos:start="37:5" pos:end="37:20"><name pos:start="37:5" pos:end="37:13"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:13">in_ptr</name></name> <operator pos:start="37:15" pos:end="37:16">+=</operator> <name pos:start="37:18" pos:end="37:20">ret</name></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="52:0"><if pos:start="39:5" pos:end="52:0">if <condition pos:start="39:8" pos:end="41:68">(<expr pos:start="39:9" pos:end="41:67"><name pos:start="39:9" pos:end="39:17"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:17">in_ptr</name></name> <operator pos:start="39:19" pos:end="39:20">&gt;=</operator> <name pos:start="39:22" pos:end="39:30"><name pos:start="39:22" pos:end="39:22">s</name><operator pos:start="39:23" pos:end="39:24">-&gt;</operator><name pos:start="39:25" pos:end="39:30">in_len</name></name> <operator pos:start="39:32" pos:end="39:33">&amp;&amp;</operator>

                    <operator pos:start="41:21" pos:end="41:21">(</operator><call pos:start="41:22" pos:end="41:32"><name pos:start="41:22" pos:end="41:29">is_rndis</name><argument_list pos:start="41:30" pos:end="41:32">(<argument pos:start="41:31" pos:end="41:31"><expr pos:start="41:31" pos:end="41:31"><name pos:start="41:31" pos:end="41:31">s</name></expr></argument>)</argument_list></call> <operator pos:start="41:34" pos:end="41:35">||</operator> <operator pos:start="41:37" pos:end="41:37">(</operator><name pos:start="41:38" pos:end="41:46"><name pos:start="41:38" pos:end="41:38">s</name><operator pos:start="41:39" pos:end="41:40">-&gt;</operator><name pos:start="41:41" pos:end="41:46">in_len</name></name> <operator pos:start="41:48" pos:end="41:48">&amp;</operator> <operator pos:start="41:50" pos:end="41:50">(</operator><literal type="number" pos:start="41:51" pos:end="41:54">64</literal> <operator pos:start="41:54" pos:end="41:54">-</operator> <literal type="number" pos:start="41:56" pos:end="41:56">1</literal><operator pos:start="41:57" pos:end="41:57">)</operator><operator pos:start="41:58" pos:end="41:58">)</operator> <operator pos:start="41:60" pos:end="41:61">||</operator> <operator pos:start="41:63" pos:end="41:63">!</operator><name pos:start="41:64" pos:end="41:66">ret</name><operator pos:start="41:67" pos:end="41:67">)</operator></expr>)</condition> <block pos:start="41:70" pos:end="52:0">{<block_content pos:start="45:9" pos:end="45:34">

        <comment type="block" pos:start="43:9" pos:end="43:39">/* no short packet necessary */</comment>

        <expr_stmt pos:start="45:9" pos:end="45:34"><expr pos:start="45:9" pos:end="45:33"><name pos:start="45:9" pos:end="45:17"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:17">in_ptr</name></name> <operator pos:start="45:19" pos:end="45:19">=</operator> <name pos:start="45:21" pos:end="45:29"><name pos:start="45:21" pos:end="45:21">s</name><operator pos:start="45:22" pos:end="45:23">-&gt;</operator><name pos:start="45:24" pos:end="45:29">in_len</name></name> <operator pos:start="45:31" pos:end="45:31">=</operator> <literal type="number" pos:start="45:33" pos:end="45:33">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



<cpp:ifdef pos:start="51:1" pos:end="51:20">#<cpp:directive pos:start="51:2" pos:end="51:6">ifdef</cpp:directive> <name pos:start="51:8" pos:end="51:20">TRAFFIC_DEBUG</name></cpp:ifdef>

    <expr_stmt pos:start="53:5" pos:end="53:75"><expr pos:start="53:5" pos:end="53:74"><call pos:start="53:5" pos:end="53:74"><name pos:start="53:5" pos:end="53:11">fprintf</name><argument_list pos:start="53:12" pos:end="53:74">(<argument pos:start="53:13" pos:end="53:18"><expr pos:start="53:13" pos:end="53:18"><name pos:start="53:13" pos:end="53:18">stderr</name></expr></argument>, <argument pos:start="53:21" pos:end="53:55"><expr pos:start="53:21" pos:end="53:55"><literal type="string" pos:start="53:21" pos:end="53:55">"usbnet: data in len %zu return %d"</literal></expr></argument>, <argument pos:start="53:58" pos:end="53:68"><expr pos:start="53:58" pos:end="53:68"><name pos:start="53:58" pos:end="53:68"><name pos:start="53:58" pos:end="53:58">p</name><operator pos:start="53:59" pos:end="53:60">-&gt;</operator><name pos:start="53:61" pos:end="53:63">iov</name><operator pos:start="53:64" pos:end="53:64">.</operator><name pos:start="53:65" pos:end="53:68">size</name></name></expr></argument>, <argument pos:start="53:71" pos:end="53:73"><expr pos:start="53:71" pos:end="53:73"><name pos:start="53:71" pos:end="53:73">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="58:0"><expr pos:start="55:5" pos:end="55:63"><call pos:start="55:5" pos:end="55:63"><name pos:start="55:5" pos:end="55:15">iov_hexdump</name><argument_list pos:start="55:16" pos:end="55:63">(<argument pos:start="55:17" pos:end="55:26"><expr pos:start="55:17" pos:end="55:26"><name pos:start="55:17" pos:end="55:26"><name pos:start="55:17" pos:end="55:17">p</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:22">iov</name><operator pos:start="55:23" pos:end="55:23">.</operator><name pos:start="55:24" pos:end="55:26">iov</name></name></expr></argument>, <argument pos:start="55:29" pos:end="55:39"><expr pos:start="55:29" pos:end="55:39"><name pos:start="55:29" pos:end="55:39"><name pos:start="55:29" pos:end="55:29">p</name><operator pos:start="55:30" pos:end="55:31">-&gt;</operator><name pos:start="55:32" pos:end="55:34">iov</name><operator pos:start="55:35" pos:end="55:35">.</operator><name pos:start="55:36" pos:end="55:39">niov</name></name></expr></argument>, <argument pos:start="55:42" pos:end="55:47"><expr pos:start="55:42" pos:end="55:47"><name pos:start="55:42" pos:end="55:47">stderr</name></expr></argument>, <argument pos:start="55:50" pos:end="55:57"><expr pos:start="55:50" pos:end="55:57"><literal type="string" pos:start="55:50" pos:end="55:57">"usbnet"</literal></expr></argument>, <argument pos:start="55:60" pos:end="55:62"><expr pos:start="55:60" pos:end="55:62"><name pos:start="55:60" pos:end="55:62">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="57:1" pos:end="57:6">#<cpp:directive pos:start="57:2" pos:end="57:6">endif</cpp:directive></cpp:endif>



    <return pos:start="61:5" pos:end="61:15">return <expr pos:start="61:12" pos:end="61:14"><name pos:start="61:12" pos:end="61:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
