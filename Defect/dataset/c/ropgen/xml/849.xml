<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/849.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">test_endianness_combine</name><parameter_list pos:start="1:36" pos:end="1:55">(<parameter pos:start="1:37" pos:end="1:54"><decl pos:start="1:37" pos:end="1:54"><type pos:start="1:37" pos:end="1:49"><name pos:start="1:37" pos:end="1:49">gconstpointer</name></type> <name pos:start="1:51" pos:end="1:54">data</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="91:1">{<block_content pos:start="5:5" pos:end="89:17">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:20"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:18">TestCase</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:24">test</name> <init pos:start="5:26" pos:end="5:31">= <expr pos:start="5:28" pos:end="5:31"><name pos:start="5:28" pos:end="5:31">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:14">args</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="17:48"><expr pos:start="11:5" pos:end="17:47"><name pos:start="11:5" pos:end="11:8">args</name> <operator pos:start="11:10" pos:end="11:10">=</operator> <call pos:start="11:12" pos:end="17:47"><name pos:start="11:12" pos:end="11:26">g_strdup_printf</name><argument_list pos:start="11:27" pos:end="17:47">(<argument pos:start="11:28" pos:end="11:71"><expr pos:start="11:28" pos:end="11:71"><literal type="string" pos:start="11:28" pos:end="11:71">"-display none -M %s%s%s -device pc-testdev"</literal></expr></argument>,

                           <argument pos:start="13:28" pos:end="13:40"><expr pos:start="13:28" pos:end="13:40"><name pos:start="13:28" pos:end="13:40"><name pos:start="13:28" pos:end="13:31">test</name><operator pos:start="13:32" pos:end="13:33">-&gt;</operator><name pos:start="13:34" pos:end="13:40">machine</name></name></expr></argument>,

                           <argument pos:start="15:28" pos:end="15:59"><expr pos:start="15:28" pos:end="15:59"><ternary pos:start="15:28" pos:end="15:59"><condition pos:start="15:28" pos:end="15:42"><expr pos:start="15:28" pos:end="15:40"><name pos:start="15:28" pos:end="15:40"><name pos:start="15:28" pos:end="15:31">test</name><operator pos:start="15:32" pos:end="15:33">-&gt;</operator><name pos:start="15:34" pos:end="15:40">superio</name></name></expr> ?</condition><then pos:start="15:44" pos:end="15:54"> <expr pos:start="15:44" pos:end="15:54"><literal type="string" pos:start="15:44" pos:end="15:54">" -device "</literal></expr> </then><else pos:start="15:56" pos:end="15:59">: <expr pos:start="15:58" pos:end="15:59"><literal type="string" pos:start="15:58" pos:end="15:59">""</literal></expr></else></ternary></expr></argument>,

                           <argument pos:start="17:28" pos:end="17:46"><expr pos:start="17:28" pos:end="17:46"><ternary pos:start="17:28" pos:end="17:46"><condition pos:start="17:28" pos:end="17:42"><expr pos:start="17:28" pos:end="17:40"><name pos:start="17:28" pos:end="17:40"><name pos:start="17:28" pos:end="17:31">test</name><operator pos:start="17:32" pos:end="17:33">-&gt;</operator><name pos:start="17:34" pos:end="17:40">superio</name></name></expr> ?</condition><then/><else pos:start="17:43" pos:end="17:46">: <expr pos:start="17:45" pos:end="17:46"><literal type="string" pos:start="17:45" pos:end="17:46">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:22"><expr pos:start="19:5" pos:end="19:21"><call pos:start="19:5" pos:end="19:21"><name pos:start="19:5" pos:end="19:15">qtest_start</name><argument_list pos:start="19:16" pos:end="19:21">(<argument pos:start="19:17" pos:end="19:20"><expr pos:start="19:17" pos:end="19:20"><name pos:start="19:17" pos:end="19:20">args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:37"><expr pos:start="21:5" pos:end="21:36"><call pos:start="21:5" pos:end="21:36"><name pos:start="21:5" pos:end="21:12">isa_outl</name><argument_list pos:start="21:13" pos:end="21:36">(<argument pos:start="21:14" pos:end="21:17"><expr pos:start="21:14" pos:end="21:17"><name pos:start="21:14" pos:end="21:17">test</name></expr></argument>, <argument pos:start="21:20" pos:end="21:23"><expr pos:start="21:20" pos:end="21:23"><literal type="number" pos:start="21:20" pos:end="21:23">0xe0</literal></expr></argument>, <argument pos:start="21:26" pos:end="21:35"><expr pos:start="21:26" pos:end="21:35"><literal type="number" pos:start="21:26" pos:end="21:35">0x87654321</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:57"><expr pos:start="23:5" pos:end="23:56"><call pos:start="23:5" pos:end="23:56"><name pos:start="23:5" pos:end="23:19">g_assert_cmphex</name><argument_list pos:start="23:20" pos:end="23:56">(<argument pos:start="23:21" pos:end="23:39"><expr pos:start="23:21" pos:end="23:39"><call pos:start="23:21" pos:end="23:39"><name pos:start="23:21" pos:end="23:27">isa_inl</name><argument_list pos:start="23:28" pos:end="23:39">(<argument pos:start="23:29" pos:end="23:32"><expr pos:start="23:29" pos:end="23:32"><name pos:start="23:29" pos:end="23:32">test</name></expr></argument>, <argument pos:start="23:35" pos:end="23:38"><expr pos:start="23:35" pos:end="23:38"><literal type="number" pos:start="23:35" pos:end="23:38">0xe8</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="23:42" pos:end="23:43"><expr pos:start="23:42" pos:end="23:43"><operator pos:start="23:42" pos:end="23:43">==</operator></expr></argument>, <argument pos:start="23:46" pos:end="23:55"><expr pos:start="23:46" pos:end="23:55"><literal type="number" pos:start="23:46" pos:end="23:55">0x87654321</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:53"><expr pos:start="25:5" pos:end="25:52"><call pos:start="25:5" pos:end="25:52"><name pos:start="25:5" pos:end="25:19">g_assert_cmphex</name><argument_list pos:start="25:20" pos:end="25:52">(<argument pos:start="25:21" pos:end="25:39"><expr pos:start="25:21" pos:end="25:39"><call pos:start="25:21" pos:end="25:39"><name pos:start="25:21" pos:end="25:27">isa_inw</name><argument_list pos:start="25:28" pos:end="25:39">(<argument pos:start="25:29" pos:end="25:32"><expr pos:start="25:29" pos:end="25:32"><name pos:start="25:29" pos:end="25:32">test</name></expr></argument>, <argument pos:start="25:35" pos:end="25:38"><expr pos:start="25:35" pos:end="25:38"><literal type="number" pos:start="25:35" pos:end="25:38">0xea</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="25:42" pos:end="25:43"><expr pos:start="25:42" pos:end="25:43"><operator pos:start="25:42" pos:end="25:43">==</operator></expr></argument>, <argument pos:start="25:46" pos:end="25:51"><expr pos:start="25:46" pos:end="25:51"><literal type="number" pos:start="25:46" pos:end="25:51">0x8765</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:53"><expr pos:start="27:5" pos:end="27:52"><call pos:start="27:5" pos:end="27:52"><name pos:start="27:5" pos:end="27:19">g_assert_cmphex</name><argument_list pos:start="27:20" pos:end="27:52">(<argument pos:start="27:21" pos:end="27:39"><expr pos:start="27:21" pos:end="27:39"><call pos:start="27:21" pos:end="27:39"><name pos:start="27:21" pos:end="27:27">isa_inw</name><argument_list pos:start="27:28" pos:end="27:39">(<argument pos:start="27:29" pos:end="27:32"><expr pos:start="27:29" pos:end="27:32"><name pos:start="27:29" pos:end="27:32">test</name></expr></argument>, <argument pos:start="27:35" pos:end="27:38"><expr pos:start="27:35" pos:end="27:38"><literal type="number" pos:start="27:35" pos:end="27:38">0xe8</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="27:42" pos:end="27:43"><expr pos:start="27:42" pos:end="27:43"><operator pos:start="27:42" pos:end="27:43">==</operator></expr></argument>, <argument pos:start="27:46" pos:end="27:51"><expr pos:start="27:46" pos:end="27:51"><literal type="number" pos:start="27:46" pos:end="27:51">0x4321</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:33"><expr pos:start="31:5" pos:end="31:32"><call pos:start="31:5" pos:end="31:32"><name pos:start="31:5" pos:end="31:12">isa_outw</name><argument_list pos:start="31:13" pos:end="31:32">(<argument pos:start="31:14" pos:end="31:17"><expr pos:start="31:14" pos:end="31:17"><name pos:start="31:14" pos:end="31:17">test</name></expr></argument>, <argument pos:start="31:20" pos:end="31:23"><expr pos:start="31:20" pos:end="31:23"><literal type="number" pos:start="31:20" pos:end="31:23">0xe2</literal></expr></argument>, <argument pos:start="31:26" pos:end="31:31"><expr pos:start="31:26" pos:end="31:31"><literal type="number" pos:start="31:26" pos:end="31:31">0x8866</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:57"><expr pos:start="33:5" pos:end="33:56"><call pos:start="33:5" pos:end="33:56"><name pos:start="33:5" pos:end="33:19">g_assert_cmphex</name><argument_list pos:start="33:20" pos:end="33:56">(<argument pos:start="33:21" pos:end="33:39"><expr pos:start="33:21" pos:end="33:39"><call pos:start="33:21" pos:end="33:39"><name pos:start="33:21" pos:end="33:27">isa_inl</name><argument_list pos:start="33:28" pos:end="33:39">(<argument pos:start="33:29" pos:end="33:32"><expr pos:start="33:29" pos:end="33:32"><name pos:start="33:29" pos:end="33:32">test</name></expr></argument>, <argument pos:start="33:35" pos:end="33:38"><expr pos:start="33:35" pos:end="33:38"><literal type="number" pos:start="33:35" pos:end="33:38">0xe8</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="33:42" pos:end="33:43"><expr pos:start="33:42" pos:end="33:43"><operator pos:start="33:42" pos:end="33:43">==</operator></expr></argument>, <argument pos:start="33:46" pos:end="33:55"><expr pos:start="33:46" pos:end="33:55"><literal type="number" pos:start="33:46" pos:end="33:55">0x88664321</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:53"><expr pos:start="35:5" pos:end="35:52"><call pos:start="35:5" pos:end="35:52"><name pos:start="35:5" pos:end="35:19">g_assert_cmphex</name><argument_list pos:start="35:20" pos:end="35:52">(<argument pos:start="35:21" pos:end="35:39"><expr pos:start="35:21" pos:end="35:39"><call pos:start="35:21" pos:end="35:39"><name pos:start="35:21" pos:end="35:27">isa_inw</name><argument_list pos:start="35:28" pos:end="35:39">(<argument pos:start="35:29" pos:end="35:32"><expr pos:start="35:29" pos:end="35:32"><name pos:start="35:29" pos:end="35:32">test</name></expr></argument>, <argument pos:start="35:35" pos:end="35:38"><expr pos:start="35:35" pos:end="35:38"><literal type="number" pos:start="35:35" pos:end="35:38">0xea</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="35:42" pos:end="35:43"><expr pos:start="35:42" pos:end="35:43"><operator pos:start="35:42" pos:end="35:43">==</operator></expr></argument>, <argument pos:start="35:46" pos:end="35:51"><expr pos:start="35:46" pos:end="35:51"><literal type="number" pos:start="35:46" pos:end="35:51">0x8866</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:53"><expr pos:start="37:5" pos:end="37:52"><call pos:start="37:5" pos:end="37:52"><name pos:start="37:5" pos:end="37:19">g_assert_cmphex</name><argument_list pos:start="37:20" pos:end="37:52">(<argument pos:start="37:21" pos:end="37:39"><expr pos:start="37:21" pos:end="37:39"><call pos:start="37:21" pos:end="37:39"><name pos:start="37:21" pos:end="37:27">isa_inw</name><argument_list pos:start="37:28" pos:end="37:39">(<argument pos:start="37:29" pos:end="37:32"><expr pos:start="37:29" pos:end="37:32"><name pos:start="37:29" pos:end="37:32">test</name></expr></argument>, <argument pos:start="37:35" pos:end="37:38"><expr pos:start="37:35" pos:end="37:38"><literal type="number" pos:start="37:35" pos:end="37:38">0xe8</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="37:42" pos:end="37:43"><expr pos:start="37:42" pos:end="37:43"><operator pos:start="37:42" pos:end="37:43">==</operator></expr></argument>, <argument pos:start="37:46" pos:end="37:51"><expr pos:start="37:46" pos:end="37:51"><literal type="number" pos:start="37:46" pos:end="37:51">0x4321</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:33"><expr pos:start="41:5" pos:end="41:32"><call pos:start="41:5" pos:end="41:32"><name pos:start="41:5" pos:end="41:12">isa_outw</name><argument_list pos:start="41:13" pos:end="41:32">(<argument pos:start="41:14" pos:end="41:17"><expr pos:start="41:14" pos:end="41:17"><name pos:start="41:14" pos:end="41:17">test</name></expr></argument>, <argument pos:start="41:20" pos:end="41:23"><expr pos:start="41:20" pos:end="41:23"><literal type="number" pos:start="41:20" pos:end="41:23">0xe0</literal></expr></argument>, <argument pos:start="41:26" pos:end="41:31"><expr pos:start="41:26" pos:end="41:31"><literal type="number" pos:start="41:26" pos:end="41:31">0x4422</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:57"><expr pos:start="43:5" pos:end="43:56"><call pos:start="43:5" pos:end="43:56"><name pos:start="43:5" pos:end="43:19">g_assert_cmphex</name><argument_list pos:start="43:20" pos:end="43:56">(<argument pos:start="43:21" pos:end="43:39"><expr pos:start="43:21" pos:end="43:39"><call pos:start="43:21" pos:end="43:39"><name pos:start="43:21" pos:end="43:27">isa_inl</name><argument_list pos:start="43:28" pos:end="43:39">(<argument pos:start="43:29" pos:end="43:32"><expr pos:start="43:29" pos:end="43:32"><name pos:start="43:29" pos:end="43:32">test</name></expr></argument>, <argument pos:start="43:35" pos:end="43:38"><expr pos:start="43:35" pos:end="43:38"><literal type="number" pos:start="43:35" pos:end="43:38">0xe8</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="43:42" pos:end="43:43"><expr pos:start="43:42" pos:end="43:43"><operator pos:start="43:42" pos:end="43:43">==</operator></expr></argument>, <argument pos:start="43:46" pos:end="43:55"><expr pos:start="43:46" pos:end="43:55"><literal type="number" pos:start="43:46" pos:end="43:55">0x88664422</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:53"><expr pos:start="45:5" pos:end="45:52"><call pos:start="45:5" pos:end="45:52"><name pos:start="45:5" pos:end="45:19">g_assert_cmphex</name><argument_list pos:start="45:20" pos:end="45:52">(<argument pos:start="45:21" pos:end="45:39"><expr pos:start="45:21" pos:end="45:39"><call pos:start="45:21" pos:end="45:39"><name pos:start="45:21" pos:end="45:27">isa_inw</name><argument_list pos:start="45:28" pos:end="45:39">(<argument pos:start="45:29" pos:end="45:32"><expr pos:start="45:29" pos:end="45:32"><name pos:start="45:29" pos:end="45:32">test</name></expr></argument>, <argument pos:start="45:35" pos:end="45:38"><expr pos:start="45:35" pos:end="45:38"><literal type="number" pos:start="45:35" pos:end="45:38">0xea</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="45:42" pos:end="45:43"><expr pos:start="45:42" pos:end="45:43"><operator pos:start="45:42" pos:end="45:43">==</operator></expr></argument>, <argument pos:start="45:46" pos:end="45:51"><expr pos:start="45:46" pos:end="45:51"><literal type="number" pos:start="45:46" pos:end="45:51">0x8866</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:53"><expr pos:start="47:5" pos:end="47:52"><call pos:start="47:5" pos:end="47:52"><name pos:start="47:5" pos:end="47:19">g_assert_cmphex</name><argument_list pos:start="47:20" pos:end="47:52">(<argument pos:start="47:21" pos:end="47:39"><expr pos:start="47:21" pos:end="47:39"><call pos:start="47:21" pos:end="47:39"><name pos:start="47:21" pos:end="47:27">isa_inw</name><argument_list pos:start="47:28" pos:end="47:39">(<argument pos:start="47:29" pos:end="47:32"><expr pos:start="47:29" pos:end="47:32"><name pos:start="47:29" pos:end="47:32">test</name></expr></argument>, <argument pos:start="47:35" pos:end="47:38"><expr pos:start="47:35" pos:end="47:38"><literal type="number" pos:start="47:35" pos:end="47:38">0xe8</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="47:42" pos:end="47:43"><expr pos:start="47:42" pos:end="47:43"><operator pos:start="47:42" pos:end="47:43">==</operator></expr></argument>, <argument pos:start="47:46" pos:end="47:51"><expr pos:start="47:46" pos:end="47:51"><literal type="number" pos:start="47:46" pos:end="47:51">0x4422</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:31"><expr pos:start="51:5" pos:end="51:30"><call pos:start="51:5" pos:end="51:30"><name pos:start="51:5" pos:end="51:12">isa_outb</name><argument_list pos:start="51:13" pos:end="51:30">(<argument pos:start="51:14" pos:end="51:17"><expr pos:start="51:14" pos:end="51:17"><name pos:start="51:14" pos:end="51:17">test</name></expr></argument>, <argument pos:start="51:20" pos:end="51:23"><expr pos:start="51:20" pos:end="51:23"><literal type="number" pos:start="51:20" pos:end="51:23">0xe3</literal></expr></argument>, <argument pos:start="51:26" pos:end="51:29"><expr pos:start="51:26" pos:end="51:29"><literal type="number" pos:start="51:26" pos:end="51:29">0x87</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:57"><expr pos:start="53:5" pos:end="53:56"><call pos:start="53:5" pos:end="53:56"><name pos:start="53:5" pos:end="53:19">g_assert_cmphex</name><argument_list pos:start="53:20" pos:end="53:56">(<argument pos:start="53:21" pos:end="53:39"><expr pos:start="53:21" pos:end="53:39"><call pos:start="53:21" pos:end="53:39"><name pos:start="53:21" pos:end="53:27">isa_inl</name><argument_list pos:start="53:28" pos:end="53:39">(<argument pos:start="53:29" pos:end="53:32"><expr pos:start="53:29" pos:end="53:32"><name pos:start="53:29" pos:end="53:32">test</name></expr></argument>, <argument pos:start="53:35" pos:end="53:38"><expr pos:start="53:35" pos:end="53:38"><literal type="number" pos:start="53:35" pos:end="53:38">0xe8</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="53:42" pos:end="53:43"><expr pos:start="53:42" pos:end="53:43"><operator pos:start="53:42" pos:end="53:43">==</operator></expr></argument>, <argument pos:start="53:46" pos:end="53:55"><expr pos:start="53:46" pos:end="53:55"><literal type="number" pos:start="53:46" pos:end="53:55">0x87664422</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:53"><expr pos:start="55:5" pos:end="55:52"><call pos:start="55:5" pos:end="55:52"><name pos:start="55:5" pos:end="55:19">g_assert_cmphex</name><argument_list pos:start="55:20" pos:end="55:52">(<argument pos:start="55:21" pos:end="55:39"><expr pos:start="55:21" pos:end="55:39"><call pos:start="55:21" pos:end="55:39"><name pos:start="55:21" pos:end="55:27">isa_inw</name><argument_list pos:start="55:28" pos:end="55:39">(<argument pos:start="55:29" pos:end="55:32"><expr pos:start="55:29" pos:end="55:32"><name pos:start="55:29" pos:end="55:32">test</name></expr></argument>, <argument pos:start="55:35" pos:end="55:38"><expr pos:start="55:35" pos:end="55:38"><literal type="number" pos:start="55:35" pos:end="55:38">0xea</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="55:42" pos:end="55:43"><expr pos:start="55:42" pos:end="55:43"><operator pos:start="55:42" pos:end="55:43">==</operator></expr></argument>, <argument pos:start="55:46" pos:end="55:51"><expr pos:start="55:46" pos:end="55:51"><literal type="number" pos:start="55:46" pos:end="55:51">0x8766</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:31"><expr pos:start="59:5" pos:end="59:30"><call pos:start="59:5" pos:end="59:30"><name pos:start="59:5" pos:end="59:12">isa_outb</name><argument_list pos:start="59:13" pos:end="59:30">(<argument pos:start="59:14" pos:end="59:17"><expr pos:start="59:14" pos:end="59:17"><name pos:start="59:14" pos:end="59:17">test</name></expr></argument>, <argument pos:start="59:20" pos:end="59:23"><expr pos:start="59:20" pos:end="59:23"><literal type="number" pos:start="59:20" pos:end="59:23">0xe2</literal></expr></argument>, <argument pos:start="59:26" pos:end="59:29"><expr pos:start="59:26" pos:end="59:29"><literal type="number" pos:start="59:26" pos:end="59:29">0x65</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:57"><expr pos:start="61:5" pos:end="61:56"><call pos:start="61:5" pos:end="61:56"><name pos:start="61:5" pos:end="61:19">g_assert_cmphex</name><argument_list pos:start="61:20" pos:end="61:56">(<argument pos:start="61:21" pos:end="61:39"><expr pos:start="61:21" pos:end="61:39"><call pos:start="61:21" pos:end="61:39"><name pos:start="61:21" pos:end="61:27">isa_inl</name><argument_list pos:start="61:28" pos:end="61:39">(<argument pos:start="61:29" pos:end="61:32"><expr pos:start="61:29" pos:end="61:32"><name pos:start="61:29" pos:end="61:32">test</name></expr></argument>, <argument pos:start="61:35" pos:end="61:38"><expr pos:start="61:35" pos:end="61:38"><literal type="number" pos:start="61:35" pos:end="61:38">0xe8</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="61:42" pos:end="61:43"><expr pos:start="61:42" pos:end="61:43"><operator pos:start="61:42" pos:end="61:43">==</operator></expr></argument>, <argument pos:start="61:46" pos:end="61:55"><expr pos:start="61:46" pos:end="61:55"><literal type="number" pos:start="61:46" pos:end="61:55">0x87654422</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:53"><expr pos:start="63:5" pos:end="63:52"><call pos:start="63:5" pos:end="63:52"><name pos:start="63:5" pos:end="63:19">g_assert_cmphex</name><argument_list pos:start="63:20" pos:end="63:52">(<argument pos:start="63:21" pos:end="63:39"><expr pos:start="63:21" pos:end="63:39"><call pos:start="63:21" pos:end="63:39"><name pos:start="63:21" pos:end="63:27">isa_inw</name><argument_list pos:start="63:28" pos:end="63:39">(<argument pos:start="63:29" pos:end="63:32"><expr pos:start="63:29" pos:end="63:32"><name pos:start="63:29" pos:end="63:32">test</name></expr></argument>, <argument pos:start="63:35" pos:end="63:38"><expr pos:start="63:35" pos:end="63:38"><literal type="number" pos:start="63:35" pos:end="63:38">0xea</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="63:42" pos:end="63:43"><expr pos:start="63:42" pos:end="63:43"><operator pos:start="63:42" pos:end="63:43">==</operator></expr></argument>, <argument pos:start="63:46" pos:end="63:51"><expr pos:start="63:46" pos:end="63:51"><literal type="number" pos:start="63:46" pos:end="63:51">0x8765</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:53"><expr pos:start="65:5" pos:end="65:52"><call pos:start="65:5" pos:end="65:52"><name pos:start="65:5" pos:end="65:19">g_assert_cmphex</name><argument_list pos:start="65:20" pos:end="65:52">(<argument pos:start="65:21" pos:end="65:39"><expr pos:start="65:21" pos:end="65:39"><call pos:start="65:21" pos:end="65:39"><name pos:start="65:21" pos:end="65:27">isa_inw</name><argument_list pos:start="65:28" pos:end="65:39">(<argument pos:start="65:29" pos:end="65:32"><expr pos:start="65:29" pos:end="65:32"><name pos:start="65:29" pos:end="65:32">test</name></expr></argument>, <argument pos:start="65:35" pos:end="65:38"><expr pos:start="65:35" pos:end="65:38"><literal type="number" pos:start="65:35" pos:end="65:38">0xe8</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="65:42" pos:end="65:43"><expr pos:start="65:42" pos:end="65:43"><operator pos:start="65:42" pos:end="65:43">==</operator></expr></argument>, <argument pos:start="65:46" pos:end="65:51"><expr pos:start="65:46" pos:end="65:51"><literal type="number" pos:start="65:46" pos:end="65:51">0x4422</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:31"><expr pos:start="69:5" pos:end="69:30"><call pos:start="69:5" pos:end="69:30"><name pos:start="69:5" pos:end="69:12">isa_outb</name><argument_list pos:start="69:13" pos:end="69:30">(<argument pos:start="69:14" pos:end="69:17"><expr pos:start="69:14" pos:end="69:17"><name pos:start="69:14" pos:end="69:17">test</name></expr></argument>, <argument pos:start="69:20" pos:end="69:23"><expr pos:start="69:20" pos:end="69:23"><literal type="number" pos:start="69:20" pos:end="69:23">0xe1</literal></expr></argument>, <argument pos:start="69:26" pos:end="69:29"><expr pos:start="69:26" pos:end="69:29"><literal type="number" pos:start="69:26" pos:end="69:29">0x43</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:57"><expr pos:start="71:5" pos:end="71:56"><call pos:start="71:5" pos:end="71:56"><name pos:start="71:5" pos:end="71:19">g_assert_cmphex</name><argument_list pos:start="71:20" pos:end="71:56">(<argument pos:start="71:21" pos:end="71:39"><expr pos:start="71:21" pos:end="71:39"><call pos:start="71:21" pos:end="71:39"><name pos:start="71:21" pos:end="71:27">isa_inl</name><argument_list pos:start="71:28" pos:end="71:39">(<argument pos:start="71:29" pos:end="71:32"><expr pos:start="71:29" pos:end="71:32"><name pos:start="71:29" pos:end="71:32">test</name></expr></argument>, <argument pos:start="71:35" pos:end="71:38"><expr pos:start="71:35" pos:end="71:38"><literal type="number" pos:start="71:35" pos:end="71:38">0xe8</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="71:42" pos:end="71:43"><expr pos:start="71:42" pos:end="71:43"><operator pos:start="71:42" pos:end="71:43">==</operator></expr></argument>, <argument pos:start="71:46" pos:end="71:55"><expr pos:start="71:46" pos:end="71:55"><literal type="number" pos:start="71:46" pos:end="71:55">0x87654322</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:53"><expr pos:start="73:5" pos:end="73:52"><call pos:start="73:5" pos:end="73:52"><name pos:start="73:5" pos:end="73:19">g_assert_cmphex</name><argument_list pos:start="73:20" pos:end="73:52">(<argument pos:start="73:21" pos:end="73:39"><expr pos:start="73:21" pos:end="73:39"><call pos:start="73:21" pos:end="73:39"><name pos:start="73:21" pos:end="73:27">isa_inw</name><argument_list pos:start="73:28" pos:end="73:39">(<argument pos:start="73:29" pos:end="73:32"><expr pos:start="73:29" pos:end="73:32"><name pos:start="73:29" pos:end="73:32">test</name></expr></argument>, <argument pos:start="73:35" pos:end="73:38"><expr pos:start="73:35" pos:end="73:38"><literal type="number" pos:start="73:35" pos:end="73:38">0xea</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="73:42" pos:end="73:43"><expr pos:start="73:42" pos:end="73:43"><operator pos:start="73:42" pos:end="73:43">==</operator></expr></argument>, <argument pos:start="73:46" pos:end="73:51"><expr pos:start="73:46" pos:end="73:51"><literal type="number" pos:start="73:46" pos:end="73:51">0x8765</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:53"><expr pos:start="75:5" pos:end="75:52"><call pos:start="75:5" pos:end="75:52"><name pos:start="75:5" pos:end="75:19">g_assert_cmphex</name><argument_list pos:start="75:20" pos:end="75:52">(<argument pos:start="75:21" pos:end="75:39"><expr pos:start="75:21" pos:end="75:39"><call pos:start="75:21" pos:end="75:39"><name pos:start="75:21" pos:end="75:27">isa_inw</name><argument_list pos:start="75:28" pos:end="75:39">(<argument pos:start="75:29" pos:end="75:32"><expr pos:start="75:29" pos:end="75:32"><name pos:start="75:29" pos:end="75:32">test</name></expr></argument>, <argument pos:start="75:35" pos:end="75:38"><expr pos:start="75:35" pos:end="75:38"><literal type="number" pos:start="75:35" pos:end="75:38">0xe8</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="75:42" pos:end="75:43"><expr pos:start="75:42" pos:end="75:43"><operator pos:start="75:42" pos:end="75:43">==</operator></expr></argument>, <argument pos:start="75:46" pos:end="75:51"><expr pos:start="75:46" pos:end="75:51"><literal type="number" pos:start="75:46" pos:end="75:51">0x4322</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:31"><expr pos:start="79:5" pos:end="79:30"><call pos:start="79:5" pos:end="79:30"><name pos:start="79:5" pos:end="79:12">isa_outb</name><argument_list pos:start="79:13" pos:end="79:30">(<argument pos:start="79:14" pos:end="79:17"><expr pos:start="79:14" pos:end="79:17"><name pos:start="79:14" pos:end="79:17">test</name></expr></argument>, <argument pos:start="79:20" pos:end="79:23"><expr pos:start="79:20" pos:end="79:23"><literal type="number" pos:start="79:20" pos:end="79:23">0xe0</literal></expr></argument>, <argument pos:start="79:26" pos:end="79:29"><expr pos:start="79:26" pos:end="79:29"><literal type="number" pos:start="79:26" pos:end="79:29">0x21</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:57"><expr pos:start="81:5" pos:end="81:56"><call pos:start="81:5" pos:end="81:56"><name pos:start="81:5" pos:end="81:19">g_assert_cmphex</name><argument_list pos:start="81:20" pos:end="81:56">(<argument pos:start="81:21" pos:end="81:39"><expr pos:start="81:21" pos:end="81:39"><call pos:start="81:21" pos:end="81:39"><name pos:start="81:21" pos:end="81:27">isa_inl</name><argument_list pos:start="81:28" pos:end="81:39">(<argument pos:start="81:29" pos:end="81:32"><expr pos:start="81:29" pos:end="81:32"><name pos:start="81:29" pos:end="81:32">test</name></expr></argument>, <argument pos:start="81:35" pos:end="81:38"><expr pos:start="81:35" pos:end="81:38"><literal type="number" pos:start="81:35" pos:end="81:38">0xe8</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="81:42" pos:end="81:43"><expr pos:start="81:42" pos:end="81:43"><operator pos:start="81:42" pos:end="81:43">==</operator></expr></argument>, <argument pos:start="81:46" pos:end="81:55"><expr pos:start="81:46" pos:end="81:55"><literal type="number" pos:start="81:46" pos:end="81:55">0x87654321</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:53"><expr pos:start="83:5" pos:end="83:52"><call pos:start="83:5" pos:end="83:52"><name pos:start="83:5" pos:end="83:19">g_assert_cmphex</name><argument_list pos:start="83:20" pos:end="83:52">(<argument pos:start="83:21" pos:end="83:39"><expr pos:start="83:21" pos:end="83:39"><call pos:start="83:21" pos:end="83:39"><name pos:start="83:21" pos:end="83:27">isa_inw</name><argument_list pos:start="83:28" pos:end="83:39">(<argument pos:start="83:29" pos:end="83:32"><expr pos:start="83:29" pos:end="83:32"><name pos:start="83:29" pos:end="83:32">test</name></expr></argument>, <argument pos:start="83:35" pos:end="83:38"><expr pos:start="83:35" pos:end="83:38"><literal type="number" pos:start="83:35" pos:end="83:38">0xea</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="83:42" pos:end="83:43"><expr pos:start="83:42" pos:end="83:43"><operator pos:start="83:42" pos:end="83:43">==</operator></expr></argument>, <argument pos:start="83:46" pos:end="83:51"><expr pos:start="83:46" pos:end="83:51"><literal type="number" pos:start="83:46" pos:end="83:51">0x8765</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:53"><expr pos:start="85:5" pos:end="85:52"><call pos:start="85:5" pos:end="85:52"><name pos:start="85:5" pos:end="85:19">g_assert_cmphex</name><argument_list pos:start="85:20" pos:end="85:52">(<argument pos:start="85:21" pos:end="85:39"><expr pos:start="85:21" pos:end="85:39"><call pos:start="85:21" pos:end="85:39"><name pos:start="85:21" pos:end="85:27">isa_inw</name><argument_list pos:start="85:28" pos:end="85:39">(<argument pos:start="85:29" pos:end="85:32"><expr pos:start="85:29" pos:end="85:32"><name pos:start="85:29" pos:end="85:32">test</name></expr></argument>, <argument pos:start="85:35" pos:end="85:38"><expr pos:start="85:35" pos:end="85:38"><literal type="number" pos:start="85:35" pos:end="85:38">0xe8</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="85:42" pos:end="85:43"><expr pos:start="85:42" pos:end="85:43"><operator pos:start="85:42" pos:end="85:43">==</operator></expr></argument>, <argument pos:start="85:46" pos:end="85:51"><expr pos:start="85:46" pos:end="85:51"><literal type="number" pos:start="85:46" pos:end="85:51">0x4321</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:29"><expr pos:start="87:5" pos:end="87:28"><call pos:start="87:5" pos:end="87:28"><name pos:start="87:5" pos:end="87:14">qtest_quit</name><argument_list pos:start="87:15" pos:end="87:28">(<argument pos:start="87:16" pos:end="87:27"><expr pos:start="87:16" pos:end="87:27"><name pos:start="87:16" pos:end="87:27">global_qtest</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:17"><expr pos:start="89:5" pos:end="89:16"><call pos:start="89:5" pos:end="89:16"><name pos:start="89:5" pos:end="89:10">g_free</name><argument_list pos:start="89:11" pos:end="89:16">(<argument pos:start="89:12" pos:end="89:15"><expr pos:start="89:12" pos:end="89:15"><name pos:start="89:12" pos:end="89:15">args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
