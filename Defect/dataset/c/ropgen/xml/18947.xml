<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18947.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">alloc_frame_buffer</name><parameter_list pos:start="1:30" pos:end="1:62">(<parameter pos:start="1:31" pos:end="1:47"><decl pos:start="1:31" pos:end="1:47"><type pos:start="1:31" pos:end="1:47"><name pos:start="1:31" pos:end="1:44">MpegEncContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:61"><decl pos:start="1:50" pos:end="1:61"><type pos:start="1:50" pos:end="1:61"><name pos:start="1:50" pos:end="1:56">Picture</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:61">pic</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="91:1">{<block_content pos:start="5:5" pos:end="89:13">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">r</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="27:5"><if pos:start="9:5" pos:end="27:5">if <condition pos:start="9:8" pos:end="9:26">(<expr pos:start="9:9" pos:end="9:25"><name pos:start="9:9" pos:end="9:25"><name pos:start="9:9" pos:end="9:9">s</name><operator pos:start="9:10" pos:end="9:11">-&gt;</operator><name pos:start="9:12" pos:end="9:16">avctx</name><operator pos:start="9:17" pos:end="9:18">-&gt;</operator><name pos:start="9:19" pos:end="9:25">hwaccel</name></name></expr>)</condition> <block pos:start="9:28" pos:end="27:5">{<block_content pos:start="11:9" pos:end="25:9">

        <expr_stmt pos:start="11:9" pos:end="11:48"><expr pos:start="11:9" pos:end="11:47"><call pos:start="11:9" pos:end="11:47"><name pos:start="11:9" pos:end="11:14">assert</name><argument_list pos:start="11:15" pos:end="11:47">(<argument pos:start="11:16" pos:end="11:46"><expr pos:start="11:16" pos:end="11:46"><operator pos:start="11:16" pos:end="11:16">!</operator><name pos:start="11:17" pos:end="11:46"><name pos:start="11:17" pos:end="11:19">pic</name><operator pos:start="11:20" pos:end="11:21">-&gt;</operator><name pos:start="11:22" pos:end="11:22">f</name><operator pos:start="11:23" pos:end="11:23">.</operator><name pos:start="11:24" pos:end="11:46">hwaccel_picture_private</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="13:9" pos:end="25:9"><if pos:start="13:9" pos:end="25:9">if <condition pos:start="13:12" pos:end="13:46">(<expr pos:start="13:13" pos:end="13:45"><name pos:start="13:13" pos:end="13:45"><name pos:start="13:13" pos:end="13:13">s</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:20">avctx</name><operator pos:start="13:21" pos:end="13:22">-&gt;</operator><name pos:start="13:23" pos:end="13:29">hwaccel</name><operator pos:start="13:30" pos:end="13:31">-&gt;</operator><name pos:start="13:32" pos:end="13:45">priv_data_size</name></name></expr>)</condition> <block pos:start="13:48" pos:end="25:9">{<block_content pos:start="15:13" pos:end="23:13">

            <expr_stmt pos:start="15:13" pos:end="15:91"><expr pos:start="15:13" pos:end="15:90"><name pos:start="15:13" pos:end="15:42"><name pos:start="15:13" pos:end="15:15">pic</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:18">f</name><operator pos:start="15:19" pos:end="15:19">.</operator><name pos:start="15:20" pos:end="15:42">hwaccel_picture_private</name></name> <operator pos:start="15:44" pos:end="15:44">=</operator> <call pos:start="15:46" pos:end="15:90"><name pos:start="15:46" pos:end="15:55">av_mallocz</name><argument_list pos:start="15:56" pos:end="15:90">(<argument pos:start="15:57" pos:end="15:89"><expr pos:start="15:57" pos:end="15:89"><name pos:start="15:57" pos:end="15:89"><name pos:start="15:57" pos:end="15:57">s</name><operator pos:start="15:58" pos:end="15:59">-&gt;</operator><name pos:start="15:60" pos:end="15:64">avctx</name><operator pos:start="15:65" pos:end="15:66">-&gt;</operator><name pos:start="15:67" pos:end="15:73">hwaccel</name><operator pos:start="15:74" pos:end="15:75">-&gt;</operator><name pos:start="15:76" pos:end="15:89">priv_data_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="17:13" pos:end="23:13"><if pos:start="17:13" pos:end="23:13">if <condition pos:start="17:16" pos:end="17:48">(<expr pos:start="17:17" pos:end="17:47"><operator pos:start="17:17" pos:end="17:17">!</operator><name pos:start="17:18" pos:end="17:47"><name pos:start="17:18" pos:end="17:20">pic</name><operator pos:start="17:21" pos:end="17:22">-&gt;</operator><name pos:start="17:23" pos:end="17:23">f</name><operator pos:start="17:24" pos:end="17:24">.</operator><name pos:start="17:25" pos:end="17:47">hwaccel_picture_private</name></name></expr>)</condition> <block pos:start="17:50" pos:end="23:13">{<block_content pos:start="19:17" pos:end="21:26">

                <expr_stmt pos:start="19:17" pos:end="19:114"><expr pos:start="19:17" pos:end="19:113"><call pos:start="19:17" pos:end="19:113"><name pos:start="19:17" pos:end="19:22">av_log</name><argument_list pos:start="19:23" pos:end="19:113">(<argument pos:start="19:24" pos:end="19:31"><expr pos:start="19:24" pos:end="19:31"><name pos:start="19:24" pos:end="19:31"><name pos:start="19:24" pos:end="19:24">s</name><operator pos:start="19:25" pos:end="19:26">-&gt;</operator><name pos:start="19:27" pos:end="19:31">avctx</name></name></expr></argument>, <argument pos:start="19:34" pos:end="19:45"><expr pos:start="19:34" pos:end="19:45"><name pos:start="19:34" pos:end="19:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="19:48" pos:end="19:112"><expr pos:start="19:48" pos:end="19:112"><literal type="string" pos:start="19:48" pos:end="19:112">"alloc_frame_buffer() failed (hwaccel private data allocation)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="21:17" pos:end="21:26">return <expr pos:start="21:24" pos:end="21:25"><operator pos:start="21:24" pos:end="21:24">-</operator><literal type="number" pos:start="21:25" pos:end="21:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="41:58"><if pos:start="31:5" pos:end="37:52">if <condition pos:start="31:8" pos:end="35:40">(<expr pos:start="31:9" pos:end="35:39"><name pos:start="31:9" pos:end="31:19"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:19">codec_id</name></name> <operator pos:start="31:21" pos:end="31:22">!=</operator> <name pos:start="31:24" pos:end="31:44">AV_CODEC_ID_WMV3IMAGE</name> <operator pos:start="31:46" pos:end="31:47">&amp;&amp;</operator>

        <name pos:start="33:9" pos:end="33:19"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:19">codec_id</name></name> <operator pos:start="33:21" pos:end="33:22">!=</operator> <name pos:start="33:24" pos:end="33:43">AV_CODEC_ID_VC1IMAGE</name>  <operator pos:start="33:46" pos:end="33:47">&amp;&amp;</operator>

        <name pos:start="35:9" pos:end="35:19"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:19">codec_id</name></name> <operator pos:start="35:21" pos:end="35:22">!=</operator> <name pos:start="35:24" pos:end="35:39">AV_CODEC_ID_MSS2</name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:52"><block_content pos:start="37:9" pos:end="37:52">

        <expr_stmt pos:start="37:9" pos:end="37:52"><expr pos:start="37:9" pos:end="37:51"><name pos:start="37:9" pos:end="37:9">r</name> <operator pos:start="37:11" pos:end="37:11">=</operator> <call pos:start="37:13" pos:end="37:51"><name pos:start="37:13" pos:end="37:32">ff_thread_get_buffer</name><argument_list pos:start="37:33" pos:end="37:51">(<argument pos:start="37:34" pos:end="37:41"><expr pos:start="37:34" pos:end="37:41"><name pos:start="37:34" pos:end="37:41"><name pos:start="37:34" pos:end="37:34">s</name><operator pos:start="37:35" pos:end="37:36">-&gt;</operator><name pos:start="37:37" pos:end="37:41">avctx</name></name></expr></argument>, <argument pos:start="37:44" pos:end="37:50"><expr pos:start="37:44" pos:end="37:50"><operator pos:start="37:44" pos:end="37:44">&amp;</operator><name pos:start="37:45" pos:end="37:50"><name pos:start="37:45" pos:end="37:47">pic</name><operator pos:start="37:48" pos:end="37:49">-&gt;</operator><name pos:start="37:50" pos:end="37:50">f</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="39:5" pos:end="41:58">else<block type="pseudo" pos:start="41:9" pos:end="41:58"><block_content pos:start="41:9" pos:end="41:58">

        <expr_stmt pos:start="41:9" pos:end="41:58"><expr pos:start="41:9" pos:end="41:57"><name pos:start="41:9" pos:end="41:9">r</name> <operator pos:start="41:11" pos:end="41:11">=</operator> <call pos:start="41:13" pos:end="41:57"><name pos:start="41:13" pos:end="41:38">avcodec_default_get_buffer</name><argument_list pos:start="41:39" pos:end="41:57">(<argument pos:start="41:40" pos:end="41:47"><expr pos:start="41:40" pos:end="41:47"><name pos:start="41:40" pos:end="41:47"><name pos:start="41:40" pos:end="41:40">s</name><operator pos:start="41:41" pos:end="41:42">-&gt;</operator><name pos:start="41:43" pos:end="41:47">avctx</name></name></expr></argument>, <argument pos:start="41:50" pos:end="41:56"><expr pos:start="41:50" pos:end="41:56"><operator pos:start="41:50" pos:end="41:50">&amp;</operator><name pos:start="41:51" pos:end="41:56"><name pos:start="41:51" pos:end="41:53">pic</name><operator pos:start="41:54" pos:end="41:55">-&gt;</operator><name pos:start="41:56" pos:end="41:56">f</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="45:5" pos:end="55:5"><if pos:start="45:5" pos:end="55:5">if <condition pos:start="45:8" pos:end="45:49">(<expr pos:start="45:9" pos:end="45:48"><name pos:start="45:9" pos:end="45:9">r</name> <operator pos:start="45:11" pos:end="45:11">&lt;</operator> <literal type="number" pos:start="45:13" pos:end="45:13">0</literal> <operator pos:start="45:15" pos:end="45:16">||</operator> <operator pos:start="45:18" pos:end="45:18">!</operator><name pos:start="45:19" pos:end="45:29"><name pos:start="45:19" pos:end="45:21">pic</name><operator pos:start="45:22" pos:end="45:23">-&gt;</operator><name pos:start="45:24" pos:end="45:24">f</name><operator pos:start="45:25" pos:end="45:25">.</operator><name pos:start="45:26" pos:end="45:29">type</name></name> <operator pos:start="45:31" pos:end="45:32">||</operator> <operator pos:start="45:34" pos:end="45:34">!</operator><name pos:start="45:35" pos:end="45:48"><name pos:start="45:35" pos:end="45:37">pic</name><operator pos:start="45:38" pos:end="45:39">-&gt;</operator><name pos:start="45:40" pos:end="45:40">f</name><operator pos:start="45:41" pos:end="45:41">.</operator><name pos:start="45:42" pos:end="45:45">data</name><index pos:start="45:46" pos:end="45:48">[<expr pos:start="45:47" pos:end="45:47"><literal type="number" pos:start="45:47" pos:end="45:47">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="45:51" pos:end="55:5">{<block_content pos:start="47:9" pos:end="53:18">

        <expr_stmt pos:start="47:9" pos:end="49:47"><expr pos:start="47:9" pos:end="49:46"><call pos:start="47:9" pos:end="49:46"><name pos:start="47:9" pos:end="47:14">av_log</name><argument_list pos:start="47:15" pos:end="49:46">(<argument pos:start="47:16" pos:end="47:23"><expr pos:start="47:16" pos:end="47:23"><name pos:start="47:16" pos:end="47:23"><name pos:start="47:16" pos:end="47:16">s</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:23">avctx</name></name></expr></argument>, <argument pos:start="47:26" pos:end="47:37"><expr pos:start="47:26" pos:end="47:37"><name pos:start="47:26" pos:end="47:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="47:40" pos:end="47:73"><expr pos:start="47:40" pos:end="47:73"><literal type="string" pos:start="47:40" pos:end="47:73">"get_buffer() failed (%d %d %p)\n"</literal></expr></argument>,

               <argument pos:start="49:16" pos:end="49:16"><expr pos:start="49:16" pos:end="49:16"><name pos:start="49:16" pos:end="49:16">r</name></expr></argument>, <argument pos:start="49:19" pos:end="49:29"><expr pos:start="49:19" pos:end="49:29"><name pos:start="49:19" pos:end="49:29"><name pos:start="49:19" pos:end="49:21">pic</name><operator pos:start="49:22" pos:end="49:23">-&gt;</operator><name pos:start="49:24" pos:end="49:24">f</name><operator pos:start="49:25" pos:end="49:25">.</operator><name pos:start="49:26" pos:end="49:29">type</name></name></expr></argument>, <argument pos:start="49:32" pos:end="49:45"><expr pos:start="49:32" pos:end="49:45"><name pos:start="49:32" pos:end="49:45"><name pos:start="49:32" pos:end="49:34">pic</name><operator pos:start="49:35" pos:end="49:36">-&gt;</operator><name pos:start="49:37" pos:end="49:37">f</name><operator pos:start="49:38" pos:end="49:38">.</operator><name pos:start="49:39" pos:end="49:42">data</name><index pos:start="49:43" pos:end="49:45">[<expr pos:start="49:44" pos:end="49:44"><literal type="number" pos:start="49:44" pos:end="49:44">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:50"><expr pos:start="51:9" pos:end="51:49"><call pos:start="51:9" pos:end="51:49"><name pos:start="51:9" pos:end="51:16">av_freep</name><argument_list pos:start="51:17" pos:end="51:49">(<argument pos:start="51:18" pos:end="51:48"><expr pos:start="51:18" pos:end="51:48"><operator pos:start="51:18" pos:end="51:18">&amp;</operator><name pos:start="51:19" pos:end="51:48"><name pos:start="51:19" pos:end="51:21">pic</name><operator pos:start="51:22" pos:end="51:23">-&gt;</operator><name pos:start="51:24" pos:end="51:24">f</name><operator pos:start="51:25" pos:end="51:25">.</operator><name pos:start="51:26" pos:end="51:48">hwaccel_picture_private</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:18">return <expr pos:start="53:16" pos:end="53:17"><operator pos:start="53:16" pos:end="53:16">-</operator><literal type="number" pos:start="53:17" pos:end="53:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="59:5" pos:end="71:5"><if pos:start="59:5" pos:end="71:5">if <condition pos:start="59:8" pos:end="61:61">(<expr pos:start="59:9" pos:end="61:60"><name pos:start="59:9" pos:end="59:19"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:19">linesize</name></name> <operator pos:start="59:21" pos:end="59:22">&amp;&amp;</operator> <operator pos:start="59:24" pos:end="59:24">(</operator><name pos:start="59:25" pos:end="59:35"><name pos:start="59:25" pos:end="59:25">s</name><operator pos:start="59:26" pos:end="59:27">-&gt;</operator><name pos:start="59:28" pos:end="59:35">linesize</name></name>   <operator pos:start="59:39" pos:end="59:40">!=</operator> <name pos:start="59:42" pos:end="59:59"><name pos:start="59:42" pos:end="59:44">pic</name><operator pos:start="59:45" pos:end="59:46">-&gt;</operator><name pos:start="59:47" pos:end="59:47">f</name><operator pos:start="59:48" pos:end="59:48">.</operator><name pos:start="59:49" pos:end="59:56">linesize</name><index pos:start="59:57" pos:end="59:59">[<expr pos:start="59:58" pos:end="59:58"><literal type="number" pos:start="59:58" pos:end="59:58">0</literal></expr>]</index></name> <operator pos:start="59:61" pos:end="59:62">||</operator>

                        <name pos:start="61:25" pos:end="61:37"><name pos:start="61:25" pos:end="61:25">s</name><operator pos:start="61:26" pos:end="61:27">-&gt;</operator><name pos:start="61:28" pos:end="61:37">uvlinesize</name></name> <operator pos:start="61:39" pos:end="61:40">!=</operator> <name pos:start="61:42" pos:end="61:59"><name pos:start="61:42" pos:end="61:44">pic</name><operator pos:start="61:45" pos:end="61:46">-&gt;</operator><name pos:start="61:47" pos:end="61:47">f</name><operator pos:start="61:48" pos:end="61:48">.</operator><name pos:start="61:49" pos:end="61:56">linesize</name><index pos:start="61:57" pos:end="61:59">[<expr pos:start="61:58" pos:end="61:58"><literal type="number" pos:start="61:58" pos:end="61:58">1</literal></expr>]</index></name><operator pos:start="61:60" pos:end="61:60">)</operator></expr>)</condition> <block pos:start="61:63" pos:end="71:5">{<block_content pos:start="63:9" pos:end="69:18">

        <expr_stmt pos:start="63:9" pos:end="65:57"><expr pos:start="63:9" pos:end="65:56"><call pos:start="63:9" pos:end="65:56"><name pos:start="63:9" pos:end="63:14">av_log</name><argument_list pos:start="63:15" pos:end="65:56">(<argument pos:start="63:16" pos:end="63:23"><expr pos:start="63:16" pos:end="63:23"><name pos:start="63:16" pos:end="63:23"><name pos:start="63:16" pos:end="63:16">s</name><operator pos:start="63:17" pos:end="63:18">-&gt;</operator><name pos:start="63:19" pos:end="63:23">avctx</name></name></expr></argument>, <argument pos:start="63:26" pos:end="63:37"><expr pos:start="63:26" pos:end="63:37"><name pos:start="63:26" pos:end="63:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="65:16" pos:end="65:55"><expr pos:start="65:16" pos:end="65:55"><literal type="string" pos:start="65:16" pos:end="65:55">"get_buffer() failed (stride changed)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:34"><expr pos:start="67:9" pos:end="67:33"><call pos:start="67:9" pos:end="67:33"><name pos:start="67:9" pos:end="67:25">free_frame_buffer</name><argument_list pos:start="67:26" pos:end="67:33">(<argument pos:start="67:27" pos:end="67:27"><expr pos:start="67:27" pos:end="67:27"><name pos:start="67:27" pos:end="67:27">s</name></expr></argument>, <argument pos:start="67:30" pos:end="67:32"><expr pos:start="67:30" pos:end="67:32"><name pos:start="67:30" pos:end="67:32">pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="69:9" pos:end="69:18">return <expr pos:start="69:16" pos:end="69:17"><operator pos:start="69:16" pos:end="69:16">-</operator><literal type="number" pos:start="69:17" pos:end="69:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="75:5" pos:end="85:5"><if pos:start="75:5" pos:end="85:5">if <condition pos:start="75:8" pos:end="75:49">(<expr pos:start="75:9" pos:end="75:48"><name pos:start="75:9" pos:end="75:26"><name pos:start="75:9" pos:end="75:11">pic</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:14">f</name><operator pos:start="75:15" pos:end="75:15">.</operator><name pos:start="75:16" pos:end="75:23">linesize</name><index pos:start="75:24" pos:end="75:26">[<expr pos:start="75:25" pos:end="75:25"><literal type="number" pos:start="75:25" pos:end="75:25">1</literal></expr>]</index></name> <operator pos:start="75:28" pos:end="75:29">!=</operator> <name pos:start="75:31" pos:end="75:48"><name pos:start="75:31" pos:end="75:33">pic</name><operator pos:start="75:34" pos:end="75:35">-&gt;</operator><name pos:start="75:36" pos:end="75:36">f</name><operator pos:start="75:37" pos:end="75:37">.</operator><name pos:start="75:38" pos:end="75:45">linesize</name><index pos:start="75:46" pos:end="75:48">[<expr pos:start="75:47" pos:end="75:47"><literal type="number" pos:start="75:47" pos:end="75:47">2</literal></expr>]</index></name></expr>)</condition> <block pos:start="75:51" pos:end="85:5">{<block_content pos:start="77:9" pos:end="83:18">

        <expr_stmt pos:start="77:9" pos:end="79:61"><expr pos:start="77:9" pos:end="79:60"><call pos:start="77:9" pos:end="79:60"><name pos:start="77:9" pos:end="77:14">av_log</name><argument_list pos:start="77:15" pos:end="79:60">(<argument pos:start="77:16" pos:end="77:23"><expr pos:start="77:16" pos:end="77:23"><name pos:start="77:16" pos:end="77:23"><name pos:start="77:16" pos:end="77:16">s</name><operator pos:start="77:17" pos:end="77:18">-&gt;</operator><name pos:start="77:19" pos:end="77:23">avctx</name></name></expr></argument>, <argument pos:start="77:26" pos:end="77:37"><expr pos:start="77:26" pos:end="77:37"><name pos:start="77:26" pos:end="77:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="79:16" pos:end="79:59"><expr pos:start="79:16" pos:end="79:59"><literal type="string" pos:start="79:16" pos:end="79:59">"get_buffer() failed (uv stride mismatch)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:34"><expr pos:start="81:9" pos:end="81:33"><call pos:start="81:9" pos:end="81:33"><name pos:start="81:9" pos:end="81:25">free_frame_buffer</name><argument_list pos:start="81:26" pos:end="81:33">(<argument pos:start="81:27" pos:end="81:27"><expr pos:start="81:27" pos:end="81:27"><name pos:start="81:27" pos:end="81:27">s</name></expr></argument>, <argument pos:start="81:30" pos:end="81:32"><expr pos:start="81:30" pos:end="81:32"><name pos:start="81:30" pos:end="81:32">pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="83:9" pos:end="83:18">return <expr pos:start="83:16" pos:end="83:17"><operator pos:start="83:16" pos:end="83:16">-</operator><literal type="number" pos:start="83:17" pos:end="83:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="89:5" pos:end="89:13">return <expr pos:start="89:12" pos:end="89:12"><literal type="number" pos:start="89:12" pos:end="89:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
