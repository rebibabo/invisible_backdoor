<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23901.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">do_ext_interrupt</name><parameter_list pos:start="1:29" pos:end="1:48">(<parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:44"><name pos:start="1:30" pos:end="1:42">CPUS390XState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="77:1">{<block_content pos:start="5:5" pos:end="75:30">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">S390CPU</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:16">cpu</name> <init pos:start="5:18" pos:end="5:40">= <expr pos:start="5:20" pos:end="5:40"><call pos:start="5:20" pos:end="5:40"><name pos:start="5:20" pos:end="5:35">s390_env_get_cpu</name><argument_list pos:start="5:36" pos:end="5:40">(<argument pos:start="5:37" pos:end="5:39"><expr pos:start="5:37" pos:end="5:39"><name pos:start="5:37" pos:end="5:39">env</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:17">mask</name></decl>, <decl pos:start="7:20" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:20" pos:end="7:23">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">LowCore</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:20">lowcore</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">ExtQueue</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:15">q</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:40">(<expr pos:start="15:9" pos:end="15:39"><operator pos:start="15:9" pos:end="15:9">!</operator><operator pos:start="15:10" pos:end="15:10">(</operator><name pos:start="15:11" pos:end="15:23"><name pos:start="15:11" pos:end="15:13">env</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:18">psw</name><operator pos:start="15:19" pos:end="15:19">.</operator><name pos:start="15:20" pos:end="15:23">mask</name></name> <operator pos:start="15:25" pos:end="15:25">&amp;</operator> <name pos:start="15:27" pos:end="15:38">PSW_MASK_EXT</name><operator pos:start="15:39" pos:end="15:39">)</operator></expr>)</condition> <block pos:start="15:42" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:54">

        <expr_stmt pos:start="17:9" pos:end="17:54"><expr pos:start="17:9" pos:end="17:53"><call pos:start="17:9" pos:end="17:53"><name pos:start="17:9" pos:end="17:17">cpu_abort</name><argument_list pos:start="17:18" pos:end="17:53">(<argument pos:start="17:19" pos:end="17:26"><expr pos:start="17:19" pos:end="17:26"><call pos:start="17:19" pos:end="17:26"><name pos:start="17:19" pos:end="17:21">CPU</name><argument_list pos:start="17:22" pos:end="17:26">(<argument pos:start="17:23" pos:end="17:25"><expr pos:start="17:23" pos:end="17:25"><name pos:start="17:23" pos:end="17:25">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="17:29" pos:end="17:52"><expr pos:start="17:29" pos:end="17:52"><literal type="string" pos:start="17:29" pos:end="17:52">"Ext int w/o ext mask\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:61">(<expr pos:start="23:9" pos:end="23:60"><name pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:11">env</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:22">ext_index</name></name> <operator pos:start="23:24" pos:end="23:24">&lt;</operator> <literal type="number" pos:start="23:26" pos:end="23:26">0</literal> <operator pos:start="23:28" pos:end="23:29">||</operator> <name pos:start="23:31" pos:end="23:44"><name pos:start="23:31" pos:end="23:33">env</name><operator pos:start="23:34" pos:end="23:35">-&gt;</operator><name pos:start="23:36" pos:end="23:44">ext_index</name></name> <operator pos:start="23:46" pos:end="23:46">&gt;</operator> <name pos:start="23:48" pos:end="23:60">MAX_EXT_QUEUE</name></expr>)</condition> <block pos:start="23:63" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:71">

        <expr_stmt pos:start="25:9" pos:end="25:71"><expr pos:start="25:9" pos:end="25:70"><call pos:start="25:9" pos:end="25:70"><name pos:start="25:9" pos:end="25:17">cpu_abort</name><argument_list pos:start="25:18" pos:end="25:70">(<argument pos:start="25:19" pos:end="25:26"><expr pos:start="25:19" pos:end="25:26"><call pos:start="25:19" pos:end="25:26"><name pos:start="25:19" pos:end="25:21">CPU</name><argument_list pos:start="25:22" pos:end="25:26">(<argument pos:start="25:23" pos:end="25:25"><expr pos:start="25:23" pos:end="25:25"><name pos:start="25:23" pos:end="25:25">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="25:29" pos:end="25:53"><expr pos:start="25:29" pos:end="25:53"><literal type="string" pos:start="25:29" pos:end="25:53">"Ext queue overrun: %d\n"</literal></expr></argument>, <argument pos:start="25:56" pos:end="25:69"><expr pos:start="25:56" pos:end="25:69"><name pos:start="25:56" pos:end="25:69"><name pos:start="25:56" pos:end="25:58">env</name><operator pos:start="25:59" pos:end="25:60">-&gt;</operator><name pos:start="25:61" pos:end="25:69">ext_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:40"><expr pos:start="31:5" pos:end="31:39"><name pos:start="31:5" pos:end="31:5">q</name> <operator pos:start="31:7" pos:end="31:7">=</operator> <operator pos:start="31:9" pos:end="31:9">&amp;</operator><name pos:start="31:10" pos:end="31:39"><name pos:start="31:10" pos:end="31:12">env</name><operator pos:start="31:13" pos:end="31:14">-&gt;</operator><name pos:start="31:15" pos:end="31:23">ext_queue</name><index pos:start="31:24" pos:end="31:39">[<expr pos:start="31:25" pos:end="31:38"><name pos:start="31:25" pos:end="31:38"><name pos:start="31:25" pos:end="31:27">env</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:38">ext_index</name></name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:35"><expr pos:start="33:5" pos:end="33:34"><name pos:start="33:5" pos:end="33:11">lowcore</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <call pos:start="33:15" pos:end="33:34"><name pos:start="33:15" pos:end="33:29">cpu_map_lowcore</name><argument_list pos:start="33:30" pos:end="33:34">(<argument pos:start="33:31" pos:end="33:33"><expr pos:start="33:31" pos:end="33:33"><name pos:start="33:31" pos:end="33:33">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:49"><expr pos:start="37:5" pos:end="37:48"><name pos:start="37:5" pos:end="37:25"><name pos:start="37:5" pos:end="37:11">lowcore</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:25">ext_int_code</name></name> <operator pos:start="37:27" pos:end="37:27">=</operator> <call pos:start="37:29" pos:end="37:48"><name pos:start="37:29" pos:end="37:39">cpu_to_be16</name><argument_list pos:start="37:40" pos:end="37:48">(<argument pos:start="37:41" pos:end="37:47"><expr pos:start="37:41" pos:end="37:47"><name pos:start="37:41" pos:end="37:47"><name pos:start="37:41" pos:end="37:41">q</name><operator pos:start="37:42" pos:end="37:43">-&gt;</operator><name pos:start="37:44" pos:end="37:47">code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:48"><expr pos:start="39:5" pos:end="39:47"><name pos:start="39:5" pos:end="39:23"><name pos:start="39:5" pos:end="39:11">lowcore</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:23">ext_params</name></name> <operator pos:start="39:25" pos:end="39:25">=</operator> <call pos:start="39:27" pos:end="39:47"><name pos:start="39:27" pos:end="39:37">cpu_to_be32</name><argument_list pos:start="39:38" pos:end="39:47">(<argument pos:start="39:39" pos:end="39:46"><expr pos:start="39:39" pos:end="39:46"><name pos:start="39:39" pos:end="39:46"><name pos:start="39:39" pos:end="39:39">q</name><operator pos:start="39:40" pos:end="39:41">-&gt;</operator><name pos:start="39:42" pos:end="39:46">param</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:51"><expr pos:start="41:5" pos:end="41:50"><name pos:start="41:5" pos:end="41:24"><name pos:start="41:5" pos:end="41:11">lowcore</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:24">ext_params2</name></name> <operator pos:start="41:26" pos:end="41:26">=</operator> <call pos:start="41:28" pos:end="41:50"><name pos:start="41:28" pos:end="41:38">cpu_to_be64</name><argument_list pos:start="41:39" pos:end="41:50">(<argument pos:start="41:40" pos:end="41:49"><expr pos:start="41:40" pos:end="41:49"><name pos:start="41:40" pos:end="41:49"><name pos:start="41:40" pos:end="41:40">q</name><operator pos:start="41:41" pos:end="41:42">-&gt;</operator><name pos:start="41:43" pos:end="41:49">param64</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:68"><expr pos:start="43:5" pos:end="43:67"><name pos:start="43:5" pos:end="43:34"><name pos:start="43:5" pos:end="43:11">lowcore</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:29">external_old_psw</name><operator pos:start="43:30" pos:end="43:30">.</operator><name pos:start="43:31" pos:end="43:34">mask</name></name> <operator pos:start="43:36" pos:end="43:36">=</operator> <call pos:start="43:38" pos:end="43:67"><name pos:start="43:38" pos:end="43:48">cpu_to_be64</name><argument_list pos:start="43:49" pos:end="43:67">(<argument pos:start="43:50" pos:end="43:66"><expr pos:start="43:50" pos:end="43:66"><call pos:start="43:50" pos:end="43:66"><name pos:start="43:50" pos:end="43:61">get_psw_mask</name><argument_list pos:start="43:62" pos:end="43:66">(<argument pos:start="43:63" pos:end="43:65"><expr pos:start="43:63" pos:end="43:65"><name pos:start="43:63" pos:end="43:65">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:64"><expr pos:start="45:5" pos:end="45:63"><name pos:start="45:5" pos:end="45:34"><name pos:start="45:5" pos:end="45:11">lowcore</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:29">external_old_psw</name><operator pos:start="45:30" pos:end="45:30">.</operator><name pos:start="45:31" pos:end="45:34">addr</name></name> <operator pos:start="45:36" pos:end="45:36">=</operator> <call pos:start="45:38" pos:end="45:63"><name pos:start="45:38" pos:end="45:48">cpu_to_be64</name><argument_list pos:start="45:49" pos:end="45:63">(<argument pos:start="45:50" pos:end="45:62"><expr pos:start="45:50" pos:end="45:62"><name pos:start="45:50" pos:end="45:62"><name pos:start="45:50" pos:end="45:52">env</name><operator pos:start="45:53" pos:end="45:54">-&gt;</operator><name pos:start="45:55" pos:end="45:57">psw</name><operator pos:start="45:58" pos:end="45:58">.</operator><name pos:start="45:59" pos:end="45:62">addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:70"><expr pos:start="47:5" pos:end="47:69"><name pos:start="47:5" pos:end="47:21"><name pos:start="47:5" pos:end="47:11">lowcore</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:21">cpu_addr</name></name> <operator pos:start="47:23" pos:end="47:23">=</operator> <call pos:start="47:25" pos:end="47:69"><name pos:start="47:25" pos:end="47:35">cpu_to_be16</name><argument_list pos:start="47:36" pos:end="47:69">(<argument pos:start="47:37" pos:end="47:68"><expr pos:start="47:37" pos:end="47:68"><name pos:start="47:37" pos:end="47:48"><name pos:start="47:37" pos:end="47:39">env</name><operator pos:start="47:40" pos:end="47:41">-&gt;</operator><name pos:start="47:42" pos:end="47:48">cpu_num</name></name> <operator pos:start="47:50" pos:end="47:50">|</operator> <name pos:start="47:52" pos:end="47:68">VIRTIO_SUBCODE_64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:55"><expr pos:start="49:5" pos:end="49:54"><name pos:start="49:5" pos:end="49:8">mask</name> <operator pos:start="49:10" pos:end="49:10">=</operator> <call pos:start="49:12" pos:end="49:54"><name pos:start="49:12" pos:end="49:22">be64_to_cpu</name><argument_list pos:start="49:23" pos:end="49:54">(<argument pos:start="49:24" pos:end="49:53"><expr pos:start="49:24" pos:end="49:53"><name pos:start="49:24" pos:end="49:53"><name pos:start="49:24" pos:end="49:30">lowcore</name><operator pos:start="49:31" pos:end="49:32">-&gt;</operator><name pos:start="49:33" pos:end="49:48">external_new_psw</name><operator pos:start="49:49" pos:end="49:49">.</operator><name pos:start="49:50" pos:end="49:53">mask</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:55"><expr pos:start="51:5" pos:end="51:54"><name pos:start="51:5" pos:end="51:8">addr</name> <operator pos:start="51:10" pos:end="51:10">=</operator> <call pos:start="51:12" pos:end="51:54"><name pos:start="51:12" pos:end="51:22">be64_to_cpu</name><argument_list pos:start="51:23" pos:end="51:54">(<argument pos:start="51:24" pos:end="51:53"><expr pos:start="51:24" pos:end="51:53"><name pos:start="51:24" pos:end="51:53"><name pos:start="51:24" pos:end="51:30">lowcore</name><operator pos:start="51:31" pos:end="51:32">-&gt;</operator><name pos:start="51:33" pos:end="51:48">external_new_psw</name><operator pos:start="51:49" pos:end="51:49">.</operator><name pos:start="51:50" pos:end="51:53">addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:31"><expr pos:start="55:5" pos:end="55:30"><call pos:start="55:5" pos:end="55:30"><name pos:start="55:5" pos:end="55:21">cpu_unmap_lowcore</name><argument_list pos:start="55:22" pos:end="55:30">(<argument pos:start="55:23" pos:end="55:29"><expr pos:start="55:23" pos:end="55:29"><name pos:start="55:23" pos:end="55:29">lowcore</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:21"><expr pos:start="59:5" pos:end="59:20"><name pos:start="59:5" pos:end="59:18"><name pos:start="59:5" pos:end="59:7">env</name><operator pos:start="59:8" pos:end="59:9">-&gt;</operator><name pos:start="59:10" pos:end="59:18">ext_index</name></name><operator pos:start="59:19" pos:end="59:20">--</operator></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="65:5"><if pos:start="61:5" pos:end="65:5">if <condition pos:start="61:8" pos:end="61:29">(<expr pos:start="61:9" pos:end="61:28"><name pos:start="61:9" pos:end="61:22"><name pos:start="61:9" pos:end="61:11">env</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:22">ext_index</name></name> <operator pos:start="61:24" pos:end="61:25">==</operator> <operator pos:start="61:27" pos:end="61:27">-</operator><literal type="number" pos:start="61:28" pos:end="61:28">1</literal></expr>)</condition> <block pos:start="61:31" pos:end="65:5">{<block_content pos:start="63:9" pos:end="63:43">

        <expr_stmt pos:start="63:9" pos:end="63:43"><expr pos:start="63:9" pos:end="63:42"><name pos:start="63:9" pos:end="63:24"><name pos:start="63:9" pos:end="63:11">env</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:24">pending_int</name></name> <operator pos:start="63:26" pos:end="63:27">&amp;=</operator> <operator pos:start="63:29" pos:end="63:29">~</operator><name pos:start="63:30" pos:end="63:42">INTERRUPT_EXT</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="71:42"><expr pos:start="69:5" pos:end="71:41"><call pos:start="69:5" pos:end="71:41"><name pos:start="69:5" pos:end="69:11">DPRINTF</name><argument_list pos:start="69:12" pos:end="71:41">(<argument pos:start="69:13" pos:end="69:43"><expr pos:start="69:13" pos:end="69:43"><literal type="string" pos:start="69:13" pos:end="69:19">"%s: %"</literal> <name pos:start="69:21" pos:end="69:26">PRIx64</name> <literal type="string" pos:start="69:28" pos:end="69:31">" %"</literal> <name pos:start="69:33" pos:end="69:38">PRIx64</name> <literal type="string" pos:start="69:40" pos:end="69:43">"\n"</literal></expr></argument>, <argument pos:start="69:46" pos:end="69:53"><expr pos:start="69:46" pos:end="69:53"><name pos:start="69:46" pos:end="69:53">__func__</name></expr></argument>,

            <argument pos:start="71:13" pos:end="71:25"><expr pos:start="71:13" pos:end="71:25"><name pos:start="71:13" pos:end="71:25"><name pos:start="71:13" pos:end="71:15">env</name><operator pos:start="71:16" pos:end="71:17">-&gt;</operator><name pos:start="71:18" pos:end="71:20">psw</name><operator pos:start="71:21" pos:end="71:21">.</operator><name pos:start="71:22" pos:end="71:25">mask</name></name></expr></argument>, <argument pos:start="71:28" pos:end="71:40"><expr pos:start="71:28" pos:end="71:40"><name pos:start="71:28" pos:end="71:40"><name pos:start="71:28" pos:end="71:30">env</name><operator pos:start="71:31" pos:end="71:32">-&gt;</operator><name pos:start="71:33" pos:end="71:35">psw</name><operator pos:start="71:36" pos:end="71:36">.</operator><name pos:start="71:37" pos:end="71:40">addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:30"><expr pos:start="75:5" pos:end="75:29"><call pos:start="75:5" pos:end="75:29"><name pos:start="75:5" pos:end="75:12">load_psw</name><argument_list pos:start="75:13" pos:end="75:29">(<argument pos:start="75:14" pos:end="75:16"><expr pos:start="75:14" pos:end="75:16"><name pos:start="75:14" pos:end="75:16">env</name></expr></argument>, <argument pos:start="75:19" pos:end="75:22"><expr pos:start="75:19" pos:end="75:22"><name pos:start="75:19" pos:end="75:22">mask</name></expr></argument>, <argument pos:start="75:25" pos:end="75:28"><expr pos:start="75:25" pos:end="75:28"><name pos:start="75:25" pos:end="75:28">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
