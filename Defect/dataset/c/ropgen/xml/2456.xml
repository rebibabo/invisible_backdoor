<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2456.c" pos:tabs="8"><function pos:start="1:1" pos:end="251:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:25">ff_htmlmarkup_to_ass</name><parameter_list pos:start="1:26" pos:end="1:71">(<parameter pos:start="1:27" pos:end="1:39"><decl pos:start="1:27" pos:end="1:39"><type pos:start="1:27" pos:end="1:39"><name pos:start="1:27" pos:end="1:30">void</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:39">log_ctx</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:54"><decl pos:start="1:42" pos:end="1:54"><type pos:start="1:42" pos:end="1:54"><name pos:start="1:42" pos:end="1:49">AVBPrint</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">dst</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:70"><decl pos:start="1:57" pos:end="1:70"><type pos:start="1:57" pos:end="1:70"><specifier pos:start="1:57" pos:end="1:61">const</specifier> <name pos:start="1:63" pos:end="1:66">char</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:70">in</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="251:1">{<block_content pos:start="5:5" pos:end="249:27">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">char</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:15">param</name></decl>, <decl pos:start="5:18" pos:end="5:28"><type ref="prev" pos:start="5:5" pos:end="5:10"/><name pos:start="5:18" pos:end="5:28"><name pos:start="5:18" pos:end="5:23">buffer</name><index pos:start="5:24" pos:end="5:28">[<expr pos:start="5:25" pos:end="5:27"><literal type="number" pos:start="5:25" pos:end="5:27">128</literal></expr>]</index></name></decl>, <decl pos:start="5:31" pos:end="5:38"><type ref="prev" pos:start="5:5" pos:end="5:10"/><name pos:start="5:31" pos:end="5:38"><name pos:start="5:31" pos:end="5:33">tmp</name><index pos:start="5:34" pos:end="5:38">[<expr pos:start="5:35" pos:end="5:37"><literal type="number" pos:start="5:35" pos:end="5:37">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:66"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">len</name></decl>, <decl pos:start="7:14" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:22">tag_close</name></decl>, <decl pos:start="7:25" pos:end="7:32"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:25" pos:end="7:28">sptr</name> <init pos:start="7:30" pos:end="7:32">= <expr pos:start="7:32" pos:end="7:32"><literal type="number" pos:start="7:32" pos:end="7:32">1</literal></expr></init></decl>, <decl pos:start="7:35" pos:end="7:48"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:35" pos:end="7:44">line_start</name> <init pos:start="7:46" pos:end="7:48">= <expr pos:start="7:48" pos:end="7:48"><literal type="number" pos:start="7:48" pos:end="7:48">1</literal></expr></init></decl>, <decl pos:start="7:51" pos:end="7:56"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:51" pos:end="7:52">an</name> <init pos:start="7:54" pos:end="7:56">= <expr pos:start="7:56" pos:end="7:56"><literal type="number" pos:start="7:56" pos:end="7:56">0</literal></expr></init></decl>, <decl pos:start="7:59" pos:end="7:65"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:59" pos:end="7:61">end</name> <init pos:start="7:63" pos:end="7:65">= <expr pos:start="7:65" pos:end="7:65"><literal type="number" pos:start="7:65" pos:end="7:65">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">SrtStack</name></type> <name pos:start="9:14" pos:end="9:22"><name pos:start="9:14" pos:end="9:18">stack</name><index pos:start="9:19" pos:end="9:22">[<expr pos:start="9:20" pos:end="9:21"><literal type="number" pos:start="9:20" pos:end="9:21">16</literal></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:24"><expr pos:start="13:5" pos:end="13:23"><name pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:9">stack</name><index pos:start="13:10" pos:end="13:12">[<expr pos:start="13:11" pos:end="13:11"><literal type="number" pos:start="13:11" pos:end="13:11">0</literal></expr>]</index></name><operator pos:start="13:13" pos:end="13:13">.</operator><name pos:start="13:14" pos:end="13:19"><name pos:start="13:14" pos:end="13:16">tag</name><index pos:start="13:17" pos:end="13:19">[<expr pos:start="13:18" pos:end="13:18"><literal type="number" pos:start="13:18" pos:end="13:18">0</literal></expr>]</index></name> <operator pos:start="13:21" pos:end="13:21">=</operator> <literal type="number" pos:start="13:23" pos:end="13:23">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:50"><expr pos:start="15:5" pos:end="15:49"><call pos:start="15:5" pos:end="15:49"><name pos:start="15:5" pos:end="15:10">strcpy</name><argument_list pos:start="15:11" pos:end="15:49">(<argument pos:start="15:12" pos:end="15:37"><expr pos:start="15:12" pos:end="15:37"><name pos:start="15:12" pos:end="15:19"><name pos:start="15:12" pos:end="15:16">stack</name><index pos:start="15:17" pos:end="15:19">[<expr pos:start="15:18" pos:end="15:18"><literal type="number" pos:start="15:18" pos:end="15:18">0</literal></expr>]</index></name><operator pos:start="15:20" pos:end="15:20">.</operator><name pos:start="15:21" pos:end="15:37"><name pos:start="15:21" pos:end="15:25">param</name><index pos:start="15:26" pos:end="15:37">[<expr pos:start="15:27" pos:end="15:36"><name pos:start="15:27" pos:end="15:36">PARAM_SIZE</name></expr>]</index></name></expr></argument>,  <argument pos:start="15:41" pos:end="15:48"><expr pos:start="15:41" pos:end="15:48"><literal type="string" pos:start="15:41" pos:end="15:48">"{\\fs}"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:49"><expr pos:start="17:5" pos:end="17:48"><call pos:start="17:5" pos:end="17:48"><name pos:start="17:5" pos:end="17:10">strcpy</name><argument_list pos:start="17:11" pos:end="17:48">(<argument pos:start="17:12" pos:end="17:38"><expr pos:start="17:12" pos:end="17:38"><name pos:start="17:12" pos:end="17:19"><name pos:start="17:12" pos:end="17:16">stack</name><index pos:start="17:17" pos:end="17:19">[<expr pos:start="17:18" pos:end="17:18"><literal type="number" pos:start="17:18" pos:end="17:18">0</literal></expr>]</index></name><operator pos:start="17:20" pos:end="17:20">.</operator><name pos:start="17:21" pos:end="17:38"><name pos:start="17:21" pos:end="17:25">param</name><index pos:start="17:26" pos:end="17:38">[<expr pos:start="17:27" pos:end="17:37"><name pos:start="17:27" pos:end="17:37">PARAM_COLOR</name></expr>]</index></name></expr></argument>, <argument pos:start="17:41" pos:end="17:47"><expr pos:start="17:41" pos:end="17:47"><literal type="string" pos:start="17:41" pos:end="17:47">"{\\c}"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:50"><expr pos:start="19:5" pos:end="19:49"><call pos:start="19:5" pos:end="19:49"><name pos:start="19:5" pos:end="19:10">strcpy</name><argument_list pos:start="19:11" pos:end="19:49">(<argument pos:start="19:12" pos:end="19:37"><expr pos:start="19:12" pos:end="19:37"><name pos:start="19:12" pos:end="19:19"><name pos:start="19:12" pos:end="19:16">stack</name><index pos:start="19:17" pos:end="19:19">[<expr pos:start="19:18" pos:end="19:18"><literal type="number" pos:start="19:18" pos:end="19:18">0</literal></expr>]</index></name><operator pos:start="19:20" pos:end="19:20">.</operator><name pos:start="19:21" pos:end="19:37"><name pos:start="19:21" pos:end="19:25">param</name><index pos:start="19:26" pos:end="19:37">[<expr pos:start="19:27" pos:end="19:36"><name pos:start="19:27" pos:end="19:36">PARAM_FACE</name></expr>]</index></name></expr></argument>,  <argument pos:start="19:41" pos:end="19:48"><expr pos:start="19:41" pos:end="19:48"><literal type="string" pos:start="19:41" pos:end="19:48">"{\\fn}"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="23:5" pos:end="239:5">for <control pos:start="23:9" pos:end="23:29">(<init pos:start="23:10" pos:end="23:10">;</init> <condition pos:start="23:12" pos:end="23:23"><expr pos:start="23:12" pos:end="23:22"><operator pos:start="23:12" pos:end="23:12">!</operator><name pos:start="23:13" pos:end="23:15">end</name> <operator pos:start="23:17" pos:end="23:18">&amp;&amp;</operator> <operator pos:start="23:20" pos:end="23:20">*</operator><name pos:start="23:21" pos:end="23:22">in</name></expr>;</condition> <incr pos:start="23:25" pos:end="23:28"><expr pos:start="23:25" pos:end="23:28"><name pos:start="23:25" pos:end="23:26">in</name><operator pos:start="23:27" pos:end="23:28">++</operator></expr></incr>)</control> <block pos:start="23:31" pos:end="239:5">{<block_content pos:start="25:9" pos:end="237:27">

        <switch pos:start="25:9" pos:end="233:9">switch <condition pos:start="25:16" pos:end="25:20">(<expr pos:start="25:17" pos:end="25:19"><operator pos:start="25:17" pos:end="25:17">*</operator><name pos:start="25:18" pos:end="25:19">in</name></expr>)</condition> <block pos:start="25:22" pos:end="233:9">{<block_content pos:start="27:9" pos:end="231:18">

        <case pos:start="27:9" pos:end="27:18">case <expr pos:start="27:14" pos:end="27:17"><literal type="char" pos:start="27:14" pos:end="27:17">'\r'</literal></expr>:</case>

            <break pos:start="29:13" pos:end="29:18">break;</break>

        <case pos:start="31:9" pos:end="31:18">case <expr pos:start="31:14" pos:end="31:17"><literal type="char" pos:start="31:14" pos:end="31:17">'\n'</literal></expr>:</case>

            <if_stmt pos:start="33:13" pos:end="39:13"><if pos:start="33:13" pos:end="39:13">if <condition pos:start="33:16" pos:end="33:27">(<expr pos:start="33:17" pos:end="33:26"><name pos:start="33:17" pos:end="33:26">line_start</name></expr>)</condition> <block pos:start="33:29" pos:end="39:13">{<block_content pos:start="35:17" pos:end="37:22">

                <expr_stmt pos:start="35:17" pos:end="35:24"><expr pos:start="35:17" pos:end="35:23"><name pos:start="35:17" pos:end="35:19">end</name> <operator pos:start="35:21" pos:end="35:21">=</operator> <literal type="number" pos:start="35:23" pos:end="35:23">1</literal></expr>;</expr_stmt>

                <break pos:start="37:17" pos:end="37:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:35"><expr pos:start="41:13" pos:end="41:34"><call pos:start="41:13" pos:end="41:34"><name pos:start="41:13" pos:end="41:29">rstrip_spaces_buf</name><argument_list pos:start="41:30" pos:end="41:34">(<argument pos:start="41:31" pos:end="41:33"><expr pos:start="41:31" pos:end="41:33"><name pos:start="41:31" pos:end="41:33">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:35"><expr pos:start="43:13" pos:end="43:34"><call pos:start="43:13" pos:end="43:34"><name pos:start="43:13" pos:end="43:22">av_bprintf</name><argument_list pos:start="43:23" pos:end="43:34">(<argument pos:start="43:24" pos:end="43:26"><expr pos:start="43:24" pos:end="43:26"><name pos:start="43:24" pos:end="43:26">dst</name></expr></argument>, <argument pos:start="43:29" pos:end="43:33"><expr pos:start="43:29" pos:end="43:33"><literal type="string" pos:start="43:29" pos:end="43:33">"\\N"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:27"><expr pos:start="45:13" pos:end="45:26"><name pos:start="45:13" pos:end="45:22">line_start</name> <operator pos:start="45:24" pos:end="45:24">=</operator> <literal type="number" pos:start="45:26" pos:end="45:26">1</literal></expr>;</expr_stmt>

            <break pos:start="47:13" pos:end="47:18">break;</break>

        <case pos:start="49:9" pos:end="49:17">case <expr pos:start="49:14" pos:end="49:16"><literal type="char" pos:start="49:14" pos:end="49:16">' '</literal></expr>:</case>

            <if_stmt pos:start="51:13" pos:end="53:45"><if pos:start="51:13" pos:end="53:45">if <condition pos:start="51:16" pos:end="51:28">(<expr pos:start="51:17" pos:end="51:27"><operator pos:start="51:17" pos:end="51:17">!</operator><name pos:start="51:18" pos:end="51:27">line_start</name></expr>)</condition><block type="pseudo" pos:start="53:17" pos:end="53:45"><block_content pos:start="53:17" pos:end="53:45">

                <expr_stmt pos:start="53:17" pos:end="53:45"><expr pos:start="53:17" pos:end="53:44"><call pos:start="53:17" pos:end="53:44"><name pos:start="53:17" pos:end="53:31">av_bprint_chars</name><argument_list pos:start="53:32" pos:end="53:44">(<argument pos:start="53:33" pos:end="53:35"><expr pos:start="53:33" pos:end="53:35"><name pos:start="53:33" pos:end="53:35">dst</name></expr></argument>, <argument pos:start="53:38" pos:end="53:40"><expr pos:start="53:38" pos:end="53:40"><operator pos:start="53:38" pos:end="53:38">*</operator><name pos:start="53:39" pos:end="53:40">in</name></expr></argument>, <argument pos:start="53:43" pos:end="53:43"><expr pos:start="53:43" pos:end="53:43"><literal type="number" pos:start="53:43" pos:end="53:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="55:13" pos:end="55:18">break;</break>

        <case pos:start="57:9" pos:end="57:17">case <expr pos:start="57:14" pos:end="57:16"><literal type="char" pos:start="57:14" pos:end="57:16">'{'</literal></expr>:</case>    <comment type="block" pos:start="57:22" pos:end="59:71">/* skip all {\xxx} substrings except for {\an%d}

                        and all microdvd like styles such as {Y:xxx} */</comment>

            <expr_stmt pos:start="61:13" pos:end="61:20"><expr pos:start="61:13" pos:end="61:19"><name pos:start="61:13" pos:end="61:15">len</name> <operator pos:start="61:17" pos:end="61:17">=</operator> <literal type="number" pos:start="61:19" pos:end="61:19">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:67"><expr pos:start="63:13" pos:end="63:66"><name pos:start="63:13" pos:end="63:14">an</name> <operator pos:start="63:16" pos:end="63:17">+=</operator> <call pos:start="63:19" pos:end="63:50"><name pos:start="63:19" pos:end="63:24">sscanf</name><argument_list pos:start="63:25" pos:end="63:50">(<argument pos:start="63:26" pos:end="63:27"><expr pos:start="63:26" pos:end="63:27"><name pos:start="63:26" pos:end="63:27">in</name></expr></argument>, <argument pos:start="63:30" pos:end="63:43"><expr pos:start="63:30" pos:end="63:43"><literal type="string" pos:start="63:30" pos:end="63:43">"{\\an%*1u}%n"</literal></expr></argument>, <argument pos:start="63:46" pos:end="63:49"><expr pos:start="63:46" pos:end="63:49"><operator pos:start="63:46" pos:end="63:46">&amp;</operator><name pos:start="63:47" pos:end="63:49">len</name></expr></argument>)</argument_list></call> <operator pos:start="63:52" pos:end="63:53">&gt;=</operator> <literal type="number" pos:start="63:55" pos:end="63:55">0</literal> <operator pos:start="63:57" pos:end="63:58">&amp;&amp;</operator> <name pos:start="63:60" pos:end="63:62">len</name> <operator pos:start="63:64" pos:end="63:64">&gt;</operator> <literal type="number" pos:start="63:66" pos:end="63:66">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="65:13" pos:end="73:45"><if pos:start="65:13" pos:end="71:13">if <condition pos:start="65:16" pos:end="67:90">(<expr pos:start="65:17" pos:end="67:89"><operator pos:start="65:17" pos:end="65:17">(</operator><name pos:start="65:18" pos:end="65:19">an</name> <operator pos:start="65:21" pos:end="65:22">!=</operator> <literal type="number" pos:start="65:24" pos:end="65:24">1</literal> <operator pos:start="65:26" pos:end="65:27">&amp;&amp;</operator> <operator pos:start="65:29" pos:end="65:29">(</operator><name pos:start="65:30" pos:end="65:32">len</name> <operator pos:start="65:34" pos:end="65:34">=</operator> <literal type="number" pos:start="65:36" pos:end="65:36">0</literal><operator pos:start="65:37" pos:end="65:37">,</operator> <call pos:start="65:39" pos:end="65:70"><name pos:start="65:39" pos:end="65:44">sscanf</name><argument_list pos:start="65:45" pos:end="65:70">(<argument pos:start="65:46" pos:end="65:47"><expr pos:start="65:46" pos:end="65:47"><name pos:start="65:46" pos:end="65:47">in</name></expr></argument>, <argument pos:start="65:50" pos:end="65:63"><expr pos:start="65:50" pos:end="65:63"><literal type="string" pos:start="65:50" pos:end="65:63">"{\\%*[^}]}%n"</literal></expr></argument>, <argument pos:start="65:66" pos:end="65:69"><expr pos:start="65:66" pos:end="65:69"><operator pos:start="65:66" pos:end="65:66">&amp;</operator><name pos:start="65:67" pos:end="65:69">len</name></expr></argument>)</argument_list></call> <operator pos:start="65:72" pos:end="65:73">&gt;=</operator> <literal type="number" pos:start="65:75" pos:end="65:75">0</literal> <operator pos:start="65:77" pos:end="65:78">&amp;&amp;</operator> <name pos:start="65:80" pos:end="65:82">len</name> <operator pos:start="65:84" pos:end="65:84">&gt;</operator> <literal type="number" pos:start="65:86" pos:end="65:86">0</literal><operator pos:start="65:87" pos:end="65:87">)</operator><operator pos:start="65:88" pos:end="65:88">)</operator> <operator pos:start="65:90" pos:end="65:91">||</operator>

                <operator pos:start="67:17" pos:end="67:17">(</operator><name pos:start="67:18" pos:end="67:20">len</name> <operator pos:start="67:22" pos:end="67:22">=</operator> <literal type="number" pos:start="67:24" pos:end="67:24">0</literal><operator pos:start="67:25" pos:end="67:25">,</operator> <call pos:start="67:27" pos:end="67:72"><name pos:start="67:27" pos:end="67:32">sscanf</name><argument_list pos:start="67:33" pos:end="67:72">(<argument pos:start="67:34" pos:end="67:35"><expr pos:start="67:34" pos:end="67:35"><name pos:start="67:34" pos:end="67:35">in</name></expr></argument>, <argument pos:start="67:38" pos:end="67:65"><expr pos:start="67:38" pos:end="67:65"><literal type="string" pos:start="67:38" pos:end="67:65">"{%*1[CcFfoPSsYy]:%*[^}]}%n"</literal></expr></argument>, <argument pos:start="67:68" pos:end="67:71"><expr pos:start="67:68" pos:end="67:71"><operator pos:start="67:68" pos:end="67:68">&amp;</operator><name pos:start="67:69" pos:end="67:71">len</name></expr></argument>)</argument_list></call> <operator pos:start="67:74" pos:end="67:75">&gt;=</operator> <literal type="number" pos:start="67:77" pos:end="67:77">0</literal> <operator pos:start="67:79" pos:end="67:80">&amp;&amp;</operator> <name pos:start="67:82" pos:end="67:84">len</name> <operator pos:start="67:86" pos:end="67:86">&gt;</operator> <literal type="number" pos:start="67:88" pos:end="67:88">0</literal><operator pos:start="67:89" pos:end="67:89">)</operator></expr>)</condition> <block pos:start="67:92" pos:end="71:13">{<block_content pos:start="69:17" pos:end="69:30">

                <expr_stmt pos:start="69:17" pos:end="69:30"><expr pos:start="69:17" pos:end="69:29"><name pos:start="69:17" pos:end="69:18">in</name> <operator pos:start="69:20" pos:end="69:21">+=</operator> <name pos:start="69:23" pos:end="69:25">len</name> <operator pos:start="69:27" pos:end="69:27">-</operator> <literal type="number" pos:start="69:29" pos:end="69:29">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="71:15" pos:end="73:45">else<block type="pseudo" pos:start="73:17" pos:end="73:45"><block_content pos:start="73:17" pos:end="73:45">

                <expr_stmt pos:start="73:17" pos:end="73:45"><expr pos:start="73:17" pos:end="73:44"><call pos:start="73:17" pos:end="73:44"><name pos:start="73:17" pos:end="73:31">av_bprint_chars</name><argument_list pos:start="73:32" pos:end="73:44">(<argument pos:start="73:33" pos:end="73:35"><expr pos:start="73:33" pos:end="73:35"><name pos:start="73:33" pos:end="73:35">dst</name></expr></argument>, <argument pos:start="73:38" pos:end="73:40"><expr pos:start="73:38" pos:end="73:40"><operator pos:start="73:38" pos:end="73:38">*</operator><name pos:start="73:39" pos:end="73:40">in</name></expr></argument>, <argument pos:start="73:43" pos:end="73:43"><expr pos:start="73:43" pos:end="73:43"><literal type="number" pos:start="73:43" pos:end="73:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <break pos:start="75:13" pos:end="75:18">break;</break>

        <case pos:start="77:9" pos:end="77:17">case <expr pos:start="77:14" pos:end="77:16"><literal type="char" pos:start="77:14" pos:end="77:16">'&lt;'</literal></expr>:</case>

            <expr_stmt pos:start="79:13" pos:end="79:37"><expr pos:start="79:13" pos:end="79:36"><name pos:start="79:13" pos:end="79:21">tag_close</name> <operator pos:start="79:23" pos:end="79:23">=</operator> <name pos:start="79:25" pos:end="79:29"><name pos:start="79:25" pos:end="79:26">in</name><index pos:start="79:27" pos:end="79:29">[<expr pos:start="79:28" pos:end="79:28"><literal type="number" pos:start="79:28" pos:end="79:28">1</literal></expr>]</index></name> <operator pos:start="79:31" pos:end="79:32">==</operator> <literal type="char" pos:start="79:34" pos:end="79:36">'/'</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:20"><expr pos:start="81:13" pos:end="81:19"><name pos:start="81:13" pos:end="81:15">len</name> <operator pos:start="81:17" pos:end="81:17">=</operator> <literal type="number" pos:start="81:19" pos:end="81:19">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="83:13" pos:end="225:13"><if pos:start="83:13" pos:end="225:13">if <condition pos:start="83:16" pos:end="83:84">(<expr pos:start="83:17" pos:end="83:83"><call pos:start="83:17" pos:end="83:67"><name pos:start="83:17" pos:end="83:22">sscanf</name><argument_list pos:start="83:23" pos:end="83:67">(<argument pos:start="83:24" pos:end="83:37"><expr pos:start="83:24" pos:end="83:37"><name pos:start="83:24" pos:end="83:25">in</name><operator pos:start="83:26" pos:end="83:26">+</operator><name pos:start="83:27" pos:end="83:35">tag_close</name><operator pos:start="83:36" pos:end="83:36">+</operator><literal type="number" pos:start="83:37" pos:end="83:37">1</literal></expr></argument>, <argument pos:start="83:40" pos:end="83:52"><expr pos:start="83:40" pos:end="83:52"><literal type="string" pos:start="83:40" pos:end="83:52">"%127[^&gt;]&gt;%n"</literal></expr></argument>, <argument pos:start="83:55" pos:end="83:60"><expr pos:start="83:55" pos:end="83:60"><name pos:start="83:55" pos:end="83:60">buffer</name></expr></argument>, <argument pos:start="83:63" pos:end="83:66"><expr pos:start="83:63" pos:end="83:66"><operator pos:start="83:63" pos:end="83:63">&amp;</operator><name pos:start="83:64" pos:end="83:66">len</name></expr></argument>)</argument_list></call> <operator pos:start="83:69" pos:end="83:70">&gt;=</operator> <literal type="number" pos:start="83:72" pos:end="83:72">1</literal> <operator pos:start="83:74" pos:end="83:75">&amp;&amp;</operator> <name pos:start="83:77" pos:end="83:79">len</name> <operator pos:start="83:81" pos:end="83:81">&gt;</operator> <literal type="number" pos:start="83:83" pos:end="83:83">0</literal></expr>)</condition> <block pos:start="83:86" pos:end="225:13">{<block_content pos:start="85:17" pos:end="223:17">

                <decl_stmt pos:start="85:17" pos:end="85:45"><decl pos:start="85:17" pos:end="85:44"><type pos:start="85:17" pos:end="85:28"><specifier pos:start="85:17" pos:end="85:21">const</specifier> <name pos:start="85:23" pos:end="85:26">char</name> <modifier pos:start="85:28" pos:end="85:28">*</modifier></type><name pos:start="85:29" pos:end="85:35">tagname</name> <init pos:start="85:37" pos:end="85:44">= <expr pos:start="85:39" pos:end="85:44"><name pos:start="85:39" pos:end="85:44">buffer</name></expr></init></decl>;</decl_stmt>

                <while pos:start="87:17" pos:end="89:30">while <condition pos:start="87:23" pos:end="87:39">(<expr pos:start="87:24" pos:end="87:38"><operator pos:start="87:24" pos:end="87:24">*</operator><name pos:start="87:25" pos:end="87:31">tagname</name> <operator pos:start="87:33" pos:end="87:34">==</operator> <literal type="char" pos:start="87:36" pos:end="87:38">' '</literal></expr>)</condition><block type="pseudo" pos:start="89:21" pos:end="89:30"><block_content pos:start="89:21" pos:end="89:30">

                    <expr_stmt pos:start="89:21" pos:end="89:30"><expr pos:start="89:21" pos:end="89:29"><name pos:start="89:21" pos:end="89:27">tagname</name><operator pos:start="89:28" pos:end="89:29">++</operator></expr>;</expr_stmt></block_content></block></while>

                <if_stmt pos:start="91:17" pos:end="93:33"><if pos:start="91:17" pos:end="93:33">if <condition pos:start="91:20" pos:end="91:51">(<expr pos:start="91:21" pos:end="91:50"><operator pos:start="91:21" pos:end="91:21">(</operator><name pos:start="91:22" pos:end="91:26">param</name> <operator pos:start="91:28" pos:end="91:28">=</operator> <call pos:start="91:30" pos:end="91:49"><name pos:start="91:30" pos:end="91:35">strchr</name><argument_list pos:start="91:36" pos:end="91:49">(<argument pos:start="91:37" pos:end="91:43"><expr pos:start="91:37" pos:end="91:43"><name pos:start="91:37" pos:end="91:43">tagname</name></expr></argument>, <argument pos:start="91:46" pos:end="91:48"><expr pos:start="91:46" pos:end="91:48"><literal type="char" pos:start="91:46" pos:end="91:48">' '</literal></expr></argument>)</argument_list></call><operator pos:start="91:50" pos:end="91:50">)</operator></expr>)</condition><block type="pseudo" pos:start="93:21" pos:end="93:33"><block_content pos:start="93:21" pos:end="93:33">

                    <expr_stmt pos:start="93:21" pos:end="93:33"><expr pos:start="93:21" pos:end="93:32"><operator pos:start="93:21" pos:end="93:21">*</operator><name pos:start="93:22" pos:end="93:26">param</name><operator pos:start="93:27" pos:end="93:28">++</operator> <operator pos:start="93:30" pos:end="93:30">=</operator> <literal type="number" pos:start="93:32" pos:end="93:32">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="95:17" pos:end="223:17"><if pos:start="95:17" pos:end="223:17">if <condition pos:start="95:20" pos:end="97:84">(<expr pos:start="95:21" pos:end="97:83"><operator pos:start="95:21" pos:end="95:21">(</operator><operator pos:start="95:22" pos:end="95:22">!</operator><name pos:start="95:23" pos:end="95:31">tag_close</name> <operator pos:start="95:33" pos:end="95:34">&amp;&amp;</operator> <name pos:start="95:36" pos:end="95:39">sptr</name> <operator pos:start="95:41" pos:end="95:41">&lt;</operator> <call pos:start="95:43" pos:end="95:63"><name pos:start="95:43" pos:end="95:56">FF_ARRAY_ELEMS</name><argument_list pos:start="95:57" pos:end="95:63">(<argument pos:start="95:58" pos:end="95:62"><expr pos:start="95:58" pos:end="95:62"><name pos:start="95:58" pos:end="95:62">stack</name></expr></argument>)</argument_list></call><operator pos:start="95:64" pos:end="95:64">)</operator> <operator pos:start="95:66" pos:end="95:67">||</operator>

                    <operator pos:start="97:21" pos:end="97:21">(</operator> <name pos:start="97:23" pos:end="97:31">tag_close</name> <operator pos:start="97:33" pos:end="97:34">&amp;&amp;</operator> <name pos:start="97:36" pos:end="97:39">sptr</name> <operator pos:start="97:41" pos:end="97:41">&gt;</operator> <literal type="number" pos:start="97:43" pos:end="97:43">0</literal> <operator pos:start="97:45" pos:end="97:46">&amp;&amp;</operator> <operator pos:start="97:48" pos:end="97:48">!</operator><call pos:start="97:49" pos:end="97:82"><name pos:start="97:49" pos:end="97:54">strcmp</name><argument_list pos:start="97:55" pos:end="97:82">(<argument pos:start="97:56" pos:end="97:72"><expr pos:start="97:56" pos:end="97:72"><name pos:start="97:56" pos:end="97:68"><name pos:start="97:56" pos:end="97:60">stack</name><index pos:start="97:61" pos:end="97:68">[<expr pos:start="97:62" pos:end="97:67"><name pos:start="97:62" pos:end="97:65">sptr</name><operator pos:start="97:66" pos:end="97:66">-</operator><literal type="number" pos:start="97:67" pos:end="97:67">1</literal></expr>]</index></name><operator pos:start="97:69" pos:end="97:69">.</operator><name pos:start="97:70" pos:end="97:72">tag</name></expr></argument>, <argument pos:start="97:75" pos:end="97:81"><expr pos:start="97:75" pos:end="97:81"><name pos:start="97:75" pos:end="97:81">tagname</name></expr></argument>)</argument_list></call><operator pos:start="97:83" pos:end="97:83">)</operator></expr>)</condition> <block pos:start="97:86" pos:end="223:17">{<block_content pos:start="99:21" pos:end="221:26">

                    <decl_stmt pos:start="99:21" pos:end="99:42"><decl pos:start="99:21" pos:end="99:25"><type pos:start="99:21" pos:end="99:23"><name pos:start="99:21" pos:end="99:23">int</name></type> <name pos:start="99:25" pos:end="99:25">i</name></decl>, <decl pos:start="99:28" pos:end="99:28"><type ref="prev" pos:start="99:21" pos:end="99:23"/><name pos:start="99:28" pos:end="99:28">j</name></decl>, <decl pos:start="99:31" pos:end="99:41"><type ref="prev" pos:start="99:21" pos:end="99:23"/><name pos:start="99:31" pos:end="99:37">unknown</name> <init pos:start="99:39" pos:end="99:41">= <expr pos:start="99:41" pos:end="99:41"><literal type="number" pos:start="99:41" pos:end="99:41">0</literal></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="101:21" pos:end="101:42"><expr pos:start="101:21" pos:end="101:41"><name pos:start="101:21" pos:end="101:22">in</name> <operator pos:start="101:24" pos:end="101:25">+=</operator> <name pos:start="101:27" pos:end="101:29">len</name> <operator pos:start="101:31" pos:end="101:31">+</operator> <name pos:start="101:33" pos:end="101:41">tag_close</name></expr>;</expr_stmt>

                    <if_stmt pos:start="103:21" pos:end="105:62"><if pos:start="103:21" pos:end="105:62">if <condition pos:start="103:24" pos:end="103:35">(<expr pos:start="103:25" pos:end="103:34"><operator pos:start="103:25" pos:end="103:25">!</operator><name pos:start="103:26" pos:end="103:34">tag_close</name></expr>)</condition><block type="pseudo" pos:start="105:25" pos:end="105:62"><block_content pos:start="105:25" pos:end="105:62">

                        <expr_stmt pos:start="105:25" pos:end="105:62"><expr pos:start="105:25" pos:end="105:61"><call pos:start="105:25" pos:end="105:61"><name pos:start="105:25" pos:end="105:30">memset</name><argument_list pos:start="105:31" pos:end="105:61">(<argument pos:start="105:32" pos:end="105:41"><expr pos:start="105:32" pos:end="105:41"><name pos:start="105:32" pos:end="105:36">stack</name><operator pos:start="105:37" pos:end="105:37">+</operator><name pos:start="105:38" pos:end="105:41">sptr</name></expr></argument>, <argument pos:start="105:44" pos:end="105:44"><expr pos:start="105:44" pos:end="105:44"><literal type="number" pos:start="105:44" pos:end="105:44">0</literal></expr></argument>, <argument pos:start="105:47" pos:end="105:60"><expr pos:start="105:47" pos:end="105:60"><sizeof pos:start="105:47" pos:end="105:60">sizeof<argument_list pos:start="105:53" pos:end="105:60">(<argument pos:start="105:54" pos:end="105:59"><expr pos:start="105:54" pos:end="105:59"><operator pos:start="105:54" pos:end="105:54">*</operator><name pos:start="105:55" pos:end="105:59">stack</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="107:21" pos:end="203:21"><if pos:start="107:21" pos:end="193:21">if <condition pos:start="107:24" pos:end="107:49">(<expr pos:start="107:25" pos:end="107:48"><operator pos:start="107:25" pos:end="107:25">!</operator><call pos:start="107:26" pos:end="107:48"><name pos:start="107:26" pos:end="107:31">strcmp</name><argument_list pos:start="107:32" pos:end="107:48">(<argument pos:start="107:33" pos:end="107:39"><expr pos:start="107:33" pos:end="107:39"><name pos:start="107:33" pos:end="107:39">tagname</name></expr></argument>, <argument pos:start="107:42" pos:end="107:47"><expr pos:start="107:42" pos:end="107:47"><literal type="string" pos:start="107:42" pos:end="107:47">"font"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="107:51" pos:end="193:21">{<block_content pos:start="109:25" pos:end="191:25">

                        <if_stmt pos:start="109:25" pos:end="191:25"><if pos:start="109:25" pos:end="125:25">if <condition pos:start="109:28" pos:end="109:38">(<expr pos:start="109:29" pos:end="109:37"><name pos:start="109:29" pos:end="109:37">tag_close</name></expr>)</condition> <block pos:start="109:40" pos:end="125:25">{<block_content pos:start="111:29" pos:end="123:41">

                            <for pos:start="111:29" pos:end="123:41">for <control pos:start="111:33" pos:end="111:61">(<init pos:start="111:34" pos:end="111:50"><expr pos:start="111:34" pos:end="111:49"><name pos:start="111:34" pos:end="111:34">i</name><operator pos:start="111:35" pos:end="111:35">=</operator><name pos:start="111:36" pos:end="111:47">PARAM_NUMBER</name><operator pos:start="111:48" pos:end="111:48">-</operator><literal type="number" pos:start="111:49" pos:end="111:49">1</literal></expr>;</init> <condition pos:start="111:52" pos:end="111:56"><expr pos:start="111:52" pos:end="111:55"><name pos:start="111:52" pos:end="111:52">i</name><operator pos:start="111:53" pos:end="111:54">&gt;=</operator><literal type="number" pos:start="111:55" pos:end="111:55">0</literal></expr>;</condition> <incr pos:start="111:58" pos:end="111:60"><expr pos:start="111:58" pos:end="111:60"><name pos:start="111:58" pos:end="111:58">i</name><operator pos:start="111:59" pos:end="111:60">--</operator></expr></incr>)</control><block type="pseudo" pos:start="113:33" pos:end="123:41"><block_content pos:start="113:33" pos:end="123:41">

                                <if_stmt pos:start="113:33" pos:end="123:41"><if pos:start="113:33" pos:end="123:41">if <condition pos:start="113:36" pos:end="113:62">(<expr pos:start="113:37" pos:end="113:61"><name pos:start="113:37" pos:end="113:49"><name pos:start="113:37" pos:end="113:41">stack</name><index pos:start="113:42" pos:end="113:49">[<expr pos:start="113:43" pos:end="113:48"><name pos:start="113:43" pos:end="113:46">sptr</name><operator pos:start="113:47" pos:end="113:47">-</operator><literal type="number" pos:start="113:48" pos:end="113:48">1</literal></expr>]</index></name><operator pos:start="113:50" pos:end="113:50">.</operator><name pos:start="113:51" pos:end="113:61"><name pos:start="113:51" pos:end="113:55">param</name><index pos:start="113:56" pos:end="113:58">[<expr pos:start="113:57" pos:end="113:57"><name pos:start="113:57" pos:end="113:57">i</name></expr>]</index><index pos:start="113:59" pos:end="113:61">[<expr pos:start="113:60" pos:end="113:60"><literal type="number" pos:start="113:60" pos:end="113:60">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="115:37" pos:end="123:41"><block_content pos:start="115:37" pos:end="123:41">

                                    <for pos:start="115:37" pos:end="123:41">for <control pos:start="115:41" pos:end="115:61">(<init pos:start="115:42" pos:end="115:50"><expr pos:start="115:42" pos:end="115:49"><name pos:start="115:42" pos:end="115:42">j</name><operator pos:start="115:43" pos:end="115:43">=</operator><name pos:start="115:44" pos:end="115:47">sptr</name><operator pos:start="115:48" pos:end="115:48">-</operator><literal type="number" pos:start="115:49" pos:end="115:49">2</literal></expr>;</init> <condition pos:start="115:52" pos:end="115:56"><expr pos:start="115:52" pos:end="115:55"><name pos:start="115:52" pos:end="115:52">j</name><operator pos:start="115:53" pos:end="115:54">&gt;=</operator><literal type="number" pos:start="115:55" pos:end="115:55">0</literal></expr>;</condition> <incr pos:start="115:58" pos:end="115:60"><expr pos:start="115:58" pos:end="115:60"><name pos:start="115:58" pos:end="115:58">j</name><operator pos:start="115:59" pos:end="115:60">--</operator></expr></incr>)</control><block type="pseudo" pos:start="117:41" pos:end="123:41"><block_content pos:start="117:41" pos:end="123:41">

                                        <if_stmt pos:start="117:41" pos:end="123:41"><if pos:start="117:41" pos:end="123:41">if <condition pos:start="117:44" pos:end="117:65">(<expr pos:start="117:45" pos:end="117:64"><name pos:start="117:45" pos:end="117:52"><name pos:start="117:45" pos:end="117:49">stack</name><index pos:start="117:50" pos:end="117:52">[<expr pos:start="117:51" pos:end="117:51"><name pos:start="117:51" pos:end="117:51">j</name></expr>]</index></name><operator pos:start="117:53" pos:end="117:53">.</operator><name pos:start="117:54" pos:end="117:64"><name pos:start="117:54" pos:end="117:58">param</name><index pos:start="117:59" pos:end="117:61">[<expr pos:start="117:60" pos:end="117:60"><name pos:start="117:60" pos:end="117:60">i</name></expr>]</index><index pos:start="117:62" pos:end="117:64">[<expr pos:start="117:63" pos:end="117:63"><literal type="number" pos:start="117:63" pos:end="117:63">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="117:67" pos:end="123:41">{<block_content pos:start="119:45" pos:end="121:50">

                                            <expr_stmt pos:start="119:45" pos:end="119:85"><expr pos:start="119:45" pos:end="119:84"><call pos:start="119:45" pos:end="119:84"><name pos:start="119:45" pos:end="119:54">av_bprintf</name><argument_list pos:start="119:55" pos:end="119:84">(<argument pos:start="119:56" pos:end="119:58"><expr pos:start="119:56" pos:end="119:58"><name pos:start="119:56" pos:end="119:58">dst</name></expr></argument>, <argument pos:start="119:61" pos:end="119:64"><expr pos:start="119:61" pos:end="119:64"><literal type="string" pos:start="119:61" pos:end="119:64">"%s"</literal></expr></argument>, <argument pos:start="119:67" pos:end="119:83"><expr pos:start="119:67" pos:end="119:83"><name pos:start="119:67" pos:end="119:74"><name pos:start="119:67" pos:end="119:71">stack</name><index pos:start="119:72" pos:end="119:74">[<expr pos:start="119:73" pos:end="119:73"><name pos:start="119:73" pos:end="119:73">j</name></expr>]</index></name><operator pos:start="119:75" pos:end="119:75">.</operator><name pos:start="119:76" pos:end="119:83"><name pos:start="119:76" pos:end="119:80">param</name><index pos:start="119:81" pos:end="119:83">[<expr pos:start="119:82" pos:end="119:82"><name pos:start="119:82" pos:end="119:82">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                            <break pos:start="121:45" pos:end="121:50">break;</break>

                                        </block_content>}</block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></for>

                        </block_content>}</block></if> <else pos:start="125:27" pos:end="191:25">else <block pos:start="125:32" pos:end="191:25">{<block_content pos:start="127:29" pos:end="189:80">

                            <while pos:start="127:29" pos:end="183:29">while <condition pos:start="127:35" pos:end="127:41">(<expr pos:start="127:36" pos:end="127:40"><name pos:start="127:36" pos:end="127:40">param</name></expr>)</condition> <block pos:start="127:43" pos:end="183:29">{<block_content pos:start="129:33" pos:end="181:44">

                                <if_stmt pos:start="129:33" pos:end="177:33"><if pos:start="129:33" pos:end="145:33">if <condition pos:start="129:36" pos:end="129:64">(<expr pos:start="129:37" pos:end="129:63"><operator pos:start="129:37" pos:end="129:37">!</operator><call pos:start="129:38" pos:end="129:63"><name pos:start="129:38" pos:end="129:44">strncmp</name><argument_list pos:start="129:45" pos:end="129:63">(<argument pos:start="129:46" pos:end="129:50"><expr pos:start="129:46" pos:end="129:50"><name pos:start="129:46" pos:end="129:50">param</name></expr></argument>, <argument pos:start="129:53" pos:end="129:59"><expr pos:start="129:53" pos:end="129:59"><literal type="string" pos:start="129:53" pos:end="129:59">"size="</literal></expr></argument>, <argument pos:start="129:62" pos:end="129:62"><expr pos:start="129:62" pos:end="129:62"><literal type="number" pos:start="129:62" pos:end="129:62">5</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="129:66" pos:end="145:33">{<block_content pos:start="131:37" pos:end="143:37">

                                    <decl_stmt pos:start="131:37" pos:end="131:55"><decl pos:start="131:37" pos:end="131:54"><type pos:start="131:37" pos:end="131:44"><name pos:start="131:37" pos:end="131:44">unsigned</name></type> <name pos:start="131:46" pos:end="131:54">font_size</name></decl>;</decl_stmt>

                                    <expr_stmt pos:start="133:37" pos:end="133:67"><expr pos:start="133:37" pos:end="133:66"><name pos:start="133:37" pos:end="133:41">param</name> <operator pos:start="133:43" pos:end="133:44">+=</operator> <literal type="number" pos:start="133:46" pos:end="133:48">5</literal> <operator pos:start="133:48" pos:end="133:48">+</operator> <operator pos:start="133:50" pos:end="133:50">(</operator><name pos:start="133:51" pos:end="133:58"><name pos:start="133:51" pos:end="133:55">param</name><index pos:start="133:56" pos:end="133:58">[<expr pos:start="133:57" pos:end="133:57"><literal type="number" pos:start="133:57" pos:end="133:57">5</literal></expr>]</index></name> <operator pos:start="133:60" pos:end="133:61">==</operator> <literal type="char" pos:start="133:63" pos:end="133:65">'"'</literal><operator pos:start="133:66" pos:end="133:66">)</operator></expr>;</expr_stmt>

                                    <if_stmt pos:start="135:37" pos:end="143:37"><if pos:start="135:37" pos:end="143:37">if <condition pos:start="135:40" pos:end="135:77">(<expr pos:start="135:41" pos:end="135:76"><call pos:start="135:41" pos:end="135:71"><name pos:start="135:41" pos:end="135:46">sscanf</name><argument_list pos:start="135:47" pos:end="135:71">(<argument pos:start="135:48" pos:end="135:52"><expr pos:start="135:48" pos:end="135:52"><name pos:start="135:48" pos:end="135:52">param</name></expr></argument>, <argument pos:start="135:55" pos:end="135:58"><expr pos:start="135:55" pos:end="135:58"><literal type="string" pos:start="135:55" pos:end="135:58">"%u"</literal></expr></argument>, <argument pos:start="135:61" pos:end="135:70"><expr pos:start="135:61" pos:end="135:70"><operator pos:start="135:61" pos:end="135:61">&amp;</operator><name pos:start="135:62" pos:end="135:70">font_size</name></expr></argument>)</argument_list></call> <operator pos:start="135:73" pos:end="135:74">==</operator> <literal type="number" pos:start="135:76" pos:end="135:76">1</literal></expr>)</condition> <block pos:start="135:79" pos:end="143:37">{<block_content pos:start="137:41" pos:end="141:68">

                                        <expr_stmt pos:start="137:41" pos:end="141:68"><expr pos:start="137:41" pos:end="141:67"><call pos:start="137:41" pos:end="141:67"><name pos:start="137:41" pos:end="137:48">snprintf</name><argument_list pos:start="137:49" pos:end="141:67">(<argument pos:start="137:50" pos:end="137:78"><expr pos:start="137:50" pos:end="137:78"><name pos:start="137:50" pos:end="137:60"><name pos:start="137:50" pos:end="137:54">stack</name><index pos:start="137:55" pos:end="137:60">[<expr pos:start="137:56" pos:end="137:59"><name pos:start="137:56" pos:end="137:59">sptr</name></expr>]</index></name><operator pos:start="137:61" pos:end="137:61">.</operator><name pos:start="137:62" pos:end="137:78"><name pos:start="137:62" pos:end="137:66">param</name><index pos:start="137:67" pos:end="137:78">[<expr pos:start="137:68" pos:end="137:77"><name pos:start="137:68" pos:end="137:77">PARAM_SIZE</name></expr>]</index></name></expr></argument>,

                                             <argument pos:start="139:46" pos:end="139:79"><expr pos:start="139:46" pos:end="139:79"><sizeof pos:start="139:46" pos:end="139:79">sizeof<argument_list pos:start="139:52" pos:end="139:79">(<argument pos:start="139:53" pos:end="139:78"><expr pos:start="139:53" pos:end="139:78"><name pos:start="139:53" pos:end="139:60"><name pos:start="139:53" pos:end="139:57">stack</name><index pos:start="139:58" pos:end="139:60">[<expr pos:start="139:59" pos:end="139:59"><literal type="number" pos:start="139:59" pos:end="139:59">0</literal></expr>]</index></name><operator pos:start="139:61" pos:end="139:61">.</operator><name pos:start="139:62" pos:end="139:78"><name pos:start="139:62" pos:end="139:66">param</name><index pos:start="139:67" pos:end="139:78">[<expr pos:start="139:68" pos:end="139:77"><name pos:start="139:68" pos:end="139:77">PARAM_SIZE</name></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                                             <argument pos:start="141:46" pos:end="141:55"><expr pos:start="141:46" pos:end="141:55"><literal type="string" pos:start="141:46" pos:end="141:55">"{\\fs%u}"</literal></expr></argument>, <argument pos:start="141:58" pos:end="141:66"><expr pos:start="141:58" pos:end="141:66"><name pos:start="141:58" pos:end="141:66">font_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    </block_content>}</block></if></if_stmt>

                                </block_content>}</block></if> <if type="elseif" pos:start="145:35" pos:end="157:33">else if <condition pos:start="145:43" pos:end="145:72">(<expr pos:start="145:44" pos:end="145:71"><operator pos:start="145:44" pos:end="145:44">!</operator><call pos:start="145:45" pos:end="145:71"><name pos:start="145:45" pos:end="145:51">strncmp</name><argument_list pos:start="145:52" pos:end="145:71">(<argument pos:start="145:53" pos:end="145:57"><expr pos:start="145:53" pos:end="145:57"><name pos:start="145:53" pos:end="145:57">param</name></expr></argument>, <argument pos:start="145:60" pos:end="145:67"><expr pos:start="145:60" pos:end="145:67"><literal type="string" pos:start="145:60" pos:end="145:67">"color="</literal></expr></argument>, <argument pos:start="145:70" pos:end="145:70"><expr pos:start="145:70" pos:end="145:70"><literal type="number" pos:start="145:70" pos:end="145:70">6</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="145:74" pos:end="157:33">{<block_content pos:start="147:37" pos:end="155:75">

                                    <expr_stmt pos:start="147:37" pos:end="147:67"><expr pos:start="147:37" pos:end="147:66"><name pos:start="147:37" pos:end="147:41">param</name> <operator pos:start="147:43" pos:end="147:44">+=</operator> <literal type="number" pos:start="147:46" pos:end="147:48">6</literal> <operator pos:start="147:48" pos:end="147:48">+</operator> <operator pos:start="147:50" pos:end="147:50">(</operator><name pos:start="147:51" pos:end="147:58"><name pos:start="147:51" pos:end="147:55">param</name><index pos:start="147:56" pos:end="147:58">[<expr pos:start="147:57" pos:end="147:57"><literal type="number" pos:start="147:57" pos:end="147:57">6</literal></expr>]</index></name> <operator pos:start="147:60" pos:end="147:61">==</operator> <literal type="char" pos:start="147:63" pos:end="147:65">'"'</literal><operator pos:start="147:66" pos:end="147:66">)</operator></expr>;</expr_stmt>

                                    <expr_stmt pos:start="149:37" pos:end="155:75"><expr pos:start="149:37" pos:end="155:74"><call pos:start="149:37" pos:end="155:74"><name pos:start="149:37" pos:end="149:44">snprintf</name><argument_list pos:start="149:45" pos:end="155:74">(<argument pos:start="149:46" pos:end="149:75"><expr pos:start="149:46" pos:end="149:75"><name pos:start="149:46" pos:end="149:56"><name pos:start="149:46" pos:end="149:50">stack</name><index pos:start="149:51" pos:end="149:56">[<expr pos:start="149:52" pos:end="149:55"><name pos:start="149:52" pos:end="149:55">sptr</name></expr>]</index></name><operator pos:start="149:57" pos:end="149:57">.</operator><name pos:start="149:58" pos:end="149:75"><name pos:start="149:58" pos:end="149:62">param</name><index pos:start="149:63" pos:end="149:75">[<expr pos:start="149:64" pos:end="149:74"><name pos:start="149:64" pos:end="149:74">PARAM_COLOR</name></expr>]</index></name></expr></argument>,

                                         <argument pos:start="151:42" pos:end="151:76"><expr pos:start="151:42" pos:end="151:76"><sizeof pos:start="151:42" pos:end="151:76">sizeof<argument_list pos:start="151:48" pos:end="151:76">(<argument pos:start="151:49" pos:end="151:75"><expr pos:start="151:49" pos:end="151:75"><name pos:start="151:49" pos:end="151:56"><name pos:start="151:49" pos:end="151:53">stack</name><index pos:start="151:54" pos:end="151:56">[<expr pos:start="151:55" pos:end="151:55"><literal type="number" pos:start="151:55" pos:end="151:55">0</literal></expr>]</index></name><operator pos:start="151:57" pos:end="151:57">.</operator><name pos:start="151:58" pos:end="151:75"><name pos:start="151:58" pos:end="151:62">param</name><index pos:start="151:63" pos:end="151:75">[<expr pos:start="151:64" pos:end="151:74"><name pos:start="151:64" pos:end="151:74">PARAM_COLOR</name></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                                         <argument pos:start="153:42" pos:end="153:53"><expr pos:start="153:42" pos:end="153:53"><literal type="string" pos:start="153:42" pos:end="153:53">"{\\c&amp;H%X&amp;}"</literal></expr></argument>,

                                         <argument pos:start="155:42" pos:end="155:73"><expr pos:start="155:42" pos:end="155:73"><call pos:start="155:42" pos:end="155:73"><name pos:start="155:42" pos:end="155:57">html_color_parse</name><argument_list pos:start="155:58" pos:end="155:73">(<argument pos:start="155:59" pos:end="155:65"><expr pos:start="155:59" pos:end="155:65"><name pos:start="155:59" pos:end="155:65">log_ctx</name></expr></argument>, <argument pos:start="155:68" pos:end="155:72"><expr pos:start="155:68" pos:end="155:72"><name pos:start="155:68" pos:end="155:72">param</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                </block_content>}</block></if> <if type="elseif" pos:start="157:35" pos:end="177:33">else if <condition pos:start="157:43" pos:end="157:71">(<expr pos:start="157:44" pos:end="157:70"><operator pos:start="157:44" pos:end="157:44">!</operator><call pos:start="157:45" pos:end="157:70"><name pos:start="157:45" pos:end="157:51">strncmp</name><argument_list pos:start="157:52" pos:end="157:70">(<argument pos:start="157:53" pos:end="157:57"><expr pos:start="157:53" pos:end="157:57"><name pos:start="157:53" pos:end="157:57">param</name></expr></argument>, <argument pos:start="157:60" pos:end="157:66"><expr pos:start="157:60" pos:end="157:66"><literal type="string" pos:start="157:60" pos:end="157:66">"face="</literal></expr></argument>, <argument pos:start="157:69" pos:end="157:69"><expr pos:start="157:69" pos:end="157:69"><literal type="number" pos:start="157:69" pos:end="157:69">5</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="157:73" pos:end="177:33">{<block_content pos:start="159:37" pos:end="175:62">

                                    <expr_stmt pos:start="159:37" pos:end="159:67"><expr pos:start="159:37" pos:end="159:66"><name pos:start="159:37" pos:end="159:41">param</name> <operator pos:start="159:43" pos:end="159:44">+=</operator> <literal type="number" pos:start="159:46" pos:end="159:48">5</literal> <operator pos:start="159:48" pos:end="159:48">+</operator> <operator pos:start="159:50" pos:end="159:50">(</operator><name pos:start="159:51" pos:end="159:58"><name pos:start="159:51" pos:end="159:55">param</name><index pos:start="159:56" pos:end="159:58">[<expr pos:start="159:57" pos:end="159:57"><literal type="number" pos:start="159:57" pos:end="159:57">5</literal></expr>]</index></name> <operator pos:start="159:60" pos:end="159:61">==</operator> <literal type="char" pos:start="159:63" pos:end="159:65">'"'</literal><operator pos:start="159:66" pos:end="159:66">)</operator></expr>;</expr_stmt>

                                    <expr_stmt pos:start="161:37" pos:end="163:80"><expr pos:start="161:37" pos:end="163:79"><name pos:start="161:37" pos:end="161:39">len</name> <operator pos:start="161:41" pos:end="161:41">=</operator> <call pos:start="161:43" pos:end="163:79"><name pos:start="161:43" pos:end="161:49">strcspn</name><argument_list pos:start="161:50" pos:end="163:79">(<argument pos:start="161:51" pos:end="161:55"><expr pos:start="161:51" pos:end="161:55"><name pos:start="161:51" pos:end="161:55">param</name></expr></argument>,

                                                  <argument pos:start="163:51" pos:end="163:78"><expr pos:start="163:51" pos:end="163:78"><ternary pos:start="163:51" pos:end="163:78"><condition pos:start="163:51" pos:end="163:68"><expr pos:start="163:51" pos:end="163:66"><name pos:start="163:51" pos:end="163:59"><name pos:start="163:51" pos:end="163:55">param</name><index pos:start="163:56" pos:end="163:59">[<expr pos:start="163:57" pos:end="163:58"><operator pos:start="163:57" pos:end="163:57">-</operator><literal type="number" pos:start="163:58" pos:end="163:58">1</literal></expr>]</index></name> <operator pos:start="163:61" pos:end="163:62">==</operator> <literal type="char" pos:start="163:64" pos:end="163:66">'"'</literal></expr> ?</condition><then pos:start="163:70" pos:end="163:73"> <expr pos:start="163:70" pos:end="163:73"><literal type="string" pos:start="163:70" pos:end="163:73">"\""</literal></expr> </then><else pos:start="163:75" pos:end="163:78">:<expr pos:start="163:76" pos:end="163:78"><literal type="string" pos:start="163:76" pos:end="163:78">" "</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    <expr_stmt pos:start="165:37" pos:end="167:74"><expr pos:start="165:37" pos:end="167:73"><call pos:start="165:37" pos:end="167:73"><name pos:start="165:37" pos:end="165:46">av_strlcpy</name><argument_list pos:start="165:47" pos:end="167:73">(<argument pos:start="165:48" pos:end="165:50"><expr pos:start="165:48" pos:end="165:50"><name pos:start="165:48" pos:end="165:50">tmp</name></expr></argument>, <argument pos:start="165:53" pos:end="165:57"><expr pos:start="165:53" pos:end="165:57"><name pos:start="165:53" pos:end="165:57">param</name></expr></argument>,

                                               <argument pos:start="167:48" pos:end="167:72"><expr pos:start="167:48" pos:end="167:72"><call pos:start="167:48" pos:end="167:72"><name pos:start="167:48" pos:end="167:52">FFMIN</name><argument_list pos:start="167:53" pos:end="167:72">(<argument pos:start="167:54" pos:end="167:64"><expr pos:start="167:54" pos:end="167:64"><sizeof pos:start="167:54" pos:end="167:64">sizeof<argument_list pos:start="167:60" pos:end="167:64">(<argument pos:start="167:61" pos:end="167:63"><expr pos:start="167:61" pos:end="167:63"><name pos:start="167:61" pos:end="167:63">tmp</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="167:67" pos:end="167:71"><expr pos:start="167:67" pos:end="167:71"><name pos:start="167:67" pos:end="167:69">len</name><operator pos:start="167:70" pos:end="167:70">+</operator><literal type="number" pos:start="167:71" pos:end="167:71">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    <expr_stmt pos:start="169:37" pos:end="169:49"><expr pos:start="169:37" pos:end="169:48"><name pos:start="169:37" pos:end="169:41">param</name> <operator pos:start="169:43" pos:end="169:44">+=</operator> <name pos:start="169:46" pos:end="169:48">len</name></expr>;</expr_stmt>

                                    <expr_stmt pos:start="171:37" pos:end="175:62"><expr pos:start="171:37" pos:end="175:61"><call pos:start="171:37" pos:end="175:61"><name pos:start="171:37" pos:end="171:44">snprintf</name><argument_list pos:start="171:45" pos:end="175:61">(<argument pos:start="171:46" pos:end="171:74"><expr pos:start="171:46" pos:end="171:74"><name pos:start="171:46" pos:end="171:56"><name pos:start="171:46" pos:end="171:50">stack</name><index pos:start="171:51" pos:end="171:56">[<expr pos:start="171:52" pos:end="171:55"><name pos:start="171:52" pos:end="171:55">sptr</name></expr>]</index></name><operator pos:start="171:57" pos:end="171:57">.</operator><name pos:start="171:58" pos:end="171:74"><name pos:start="171:58" pos:end="171:62">param</name><index pos:start="171:63" pos:end="171:74">[<expr pos:start="171:64" pos:end="171:73"><name pos:start="171:64" pos:end="171:73">PARAM_FACE</name></expr>]</index></name></expr></argument>,

                                             <argument pos:start="173:46" pos:end="173:79"><expr pos:start="173:46" pos:end="173:79"><sizeof pos:start="173:46" pos:end="173:79">sizeof<argument_list pos:start="173:52" pos:end="173:79">(<argument pos:start="173:53" pos:end="173:78"><expr pos:start="173:53" pos:end="173:78"><name pos:start="173:53" pos:end="173:60"><name pos:start="173:53" pos:end="173:57">stack</name><index pos:start="173:58" pos:end="173:60">[<expr pos:start="173:59" pos:end="173:59"><literal type="number" pos:start="173:59" pos:end="173:59">0</literal></expr>]</index></name><operator pos:start="173:61" pos:end="173:61">.</operator><name pos:start="173:62" pos:end="173:78"><name pos:start="173:62" pos:end="173:66">param</name><index pos:start="173:67" pos:end="173:78">[<expr pos:start="173:68" pos:end="173:77"><name pos:start="173:68" pos:end="173:77">PARAM_FACE</name></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                                             <argument pos:start="175:46" pos:end="175:55"><expr pos:start="175:46" pos:end="175:55"><literal type="string" pos:start="175:46" pos:end="175:55">"{\\fn%s}"</literal></expr></argument>, <argument pos:start="175:58" pos:end="175:60"><expr pos:start="175:58" pos:end="175:60"><name pos:start="175:58" pos:end="175:60">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                </block_content>}</block></if></if_stmt>

                                <if_stmt pos:start="179:33" pos:end="181:44"><if pos:start="179:33" pos:end="181:44">if <condition pos:start="179:36" pos:end="179:65">(<expr pos:start="179:37" pos:end="179:64"><operator pos:start="179:37" pos:end="179:37">(</operator><name pos:start="179:38" pos:end="179:42">param</name> <operator pos:start="179:44" pos:end="179:44">=</operator> <call pos:start="179:46" pos:end="179:63"><name pos:start="179:46" pos:end="179:51">strchr</name><argument_list pos:start="179:52" pos:end="179:63">(<argument pos:start="179:53" pos:end="179:57"><expr pos:start="179:53" pos:end="179:57"><name pos:start="179:53" pos:end="179:57">param</name></expr></argument>, <argument pos:start="179:60" pos:end="179:62"><expr pos:start="179:60" pos:end="179:62"><literal type="char" pos:start="179:60" pos:end="179:62">' '</literal></expr></argument>)</argument_list></call><operator pos:start="179:64" pos:end="179:64">)</operator></expr>)</condition><block type="pseudo" pos:start="181:37" pos:end="181:44"><block_content pos:start="181:37" pos:end="181:44">

                                    <expr_stmt pos:start="181:37" pos:end="181:44"><expr pos:start="181:37" pos:end="181:43"><name pos:start="181:37" pos:end="181:41">param</name><operator pos:start="181:42" pos:end="181:43">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                            </block_content>}</block></while>

                            <for pos:start="185:29" pos:end="189:80">for <control pos:start="185:33" pos:end="185:58">(<init pos:start="185:34" pos:end="185:37"><expr pos:start="185:34" pos:end="185:36"><name pos:start="185:34" pos:end="185:34">i</name><operator pos:start="185:35" pos:end="185:35">=</operator><literal type="number" pos:start="185:36" pos:end="185:36">0</literal></expr>;</init> <condition pos:start="185:39" pos:end="185:53"><expr pos:start="185:39" pos:end="185:52"><name pos:start="185:39" pos:end="185:39">i</name><operator pos:start="185:40" pos:end="185:40">&lt;</operator><name pos:start="185:41" pos:end="185:52">PARAM_NUMBER</name></expr>;</condition> <incr pos:start="185:55" pos:end="185:57"><expr pos:start="185:55" pos:end="185:57"><name pos:start="185:55" pos:end="185:55">i</name><operator pos:start="185:56" pos:end="185:57">++</operator></expr></incr>)</control><block type="pseudo" pos:start="187:33" pos:end="189:80"><block_content pos:start="187:33" pos:end="189:80">

                                <if_stmt pos:start="187:33" pos:end="189:80"><if pos:start="187:33" pos:end="189:80">if <condition pos:start="187:36" pos:end="187:60">(<expr pos:start="187:37" pos:end="187:59"><name pos:start="187:37" pos:end="187:47"><name pos:start="187:37" pos:end="187:41">stack</name><index pos:start="187:42" pos:end="187:47">[<expr pos:start="187:43" pos:end="187:46"><name pos:start="187:43" pos:end="187:46">sptr</name></expr>]</index></name><operator pos:start="187:48" pos:end="187:48">.</operator><name pos:start="187:49" pos:end="187:59"><name pos:start="187:49" pos:end="187:53">param</name><index pos:start="187:54" pos:end="187:56">[<expr pos:start="187:55" pos:end="187:55"><name pos:start="187:55" pos:end="187:55">i</name></expr>]</index><index pos:start="187:57" pos:end="187:59">[<expr pos:start="187:58" pos:end="187:58"><literal type="number" pos:start="187:58" pos:end="187:58">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="189:37" pos:end="189:80"><block_content pos:start="189:37" pos:end="189:80">

                                    <expr_stmt pos:start="189:37" pos:end="189:80"><expr pos:start="189:37" pos:end="189:79"><call pos:start="189:37" pos:end="189:79"><name pos:start="189:37" pos:end="189:46">av_bprintf</name><argument_list pos:start="189:47" pos:end="189:79">(<argument pos:start="189:48" pos:end="189:50"><expr pos:start="189:48" pos:end="189:50"><name pos:start="189:48" pos:end="189:50">dst</name></expr></argument>, <argument pos:start="189:53" pos:end="189:56"><expr pos:start="189:53" pos:end="189:56"><literal type="string" pos:start="189:53" pos:end="189:56">"%s"</literal></expr></argument>, <argument pos:start="189:59" pos:end="189:78"><expr pos:start="189:59" pos:end="189:78"><name pos:start="189:59" pos:end="189:69"><name pos:start="189:59" pos:end="189:63">stack</name><index pos:start="189:64" pos:end="189:69">[<expr pos:start="189:65" pos:end="189:68"><name pos:start="189:65" pos:end="189:68">sptr</name></expr>]</index></name><operator pos:start="189:70" pos:end="189:70">.</operator><name pos:start="189:71" pos:end="189:78"><name pos:start="189:71" pos:end="189:75">param</name><index pos:start="189:76" pos:end="189:78">[<expr pos:start="189:77" pos:end="189:77"><name pos:start="189:77" pos:end="189:77">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="193:23" pos:end="197:21">else if <condition pos:start="193:31" pos:end="193:89">(<expr pos:start="193:32" pos:end="193:88"><name pos:start="193:32" pos:end="193:41"><name pos:start="193:32" pos:end="193:38">tagname</name><index pos:start="193:39" pos:end="193:41">[<expr pos:start="193:40" pos:end="193:40"><literal type="number" pos:start="193:40" pos:end="193:40">0</literal></expr>]</index></name> <operator pos:start="193:43" pos:end="193:44">&amp;&amp;</operator> <operator pos:start="193:46" pos:end="193:46">!</operator><name pos:start="193:47" pos:end="193:56"><name pos:start="193:47" pos:end="193:53">tagname</name><index pos:start="193:54" pos:end="193:56">[<expr pos:start="193:55" pos:end="193:55"><literal type="number" pos:start="193:55" pos:end="193:55">1</literal></expr>]</index></name> <operator pos:start="193:58" pos:end="193:59">&amp;&amp;</operator> <call pos:start="193:61" pos:end="193:83"><name pos:start="193:61" pos:end="193:66">strspn</name><argument_list pos:start="193:67" pos:end="193:83">(<argument pos:start="193:68" pos:end="193:74"><expr pos:start="193:68" pos:end="193:74"><name pos:start="193:68" pos:end="193:74">tagname</name></expr></argument>, <argument pos:start="193:77" pos:end="193:82"><expr pos:start="193:77" pos:end="193:82"><literal type="string" pos:start="193:77" pos:end="193:82">"bisu"</literal></expr></argument>)</argument_list></call> <operator pos:start="193:85" pos:end="193:86">==</operator> <literal type="number" pos:start="193:88" pos:end="193:88">1</literal></expr>)</condition> <block pos:start="193:91" pos:end="197:21">{<block_content pos:start="195:25" pos:end="195:76">

                        <expr_stmt pos:start="195:25" pos:end="195:76"><expr pos:start="195:25" pos:end="195:75"><call pos:start="195:25" pos:end="195:75"><name pos:start="195:25" pos:end="195:34">av_bprintf</name><argument_list pos:start="195:35" pos:end="195:75">(<argument pos:start="195:36" pos:end="195:38"><expr pos:start="195:36" pos:end="195:38"><name pos:start="195:36" pos:end="195:38">dst</name></expr></argument>, <argument pos:start="195:41" pos:end="195:50"><expr pos:start="195:41" pos:end="195:50"><literal type="string" pos:start="195:41" pos:end="195:50">"{\\%c%d}"</literal></expr></argument>, <argument pos:start="195:53" pos:end="195:62"><expr pos:start="195:53" pos:end="195:62"><name pos:start="195:53" pos:end="195:62"><name pos:start="195:53" pos:end="195:59">tagname</name><index pos:start="195:60" pos:end="195:62">[<expr pos:start="195:61" pos:end="195:61"><literal type="number" pos:start="195:61" pos:end="195:61">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="195:65" pos:end="195:74"><expr pos:start="195:65" pos:end="195:74"><operator pos:start="195:65" pos:end="195:65">!</operator><name pos:start="195:66" pos:end="195:74">tag_close</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="197:23" pos:end="203:21">else <block pos:start="197:28" pos:end="203:21">{<block_content pos:start="199:25" pos:end="201:69">

                        <expr_stmt pos:start="199:25" pos:end="199:36"><expr pos:start="199:25" pos:end="199:35"><name pos:start="199:25" pos:end="199:31">unknown</name> <operator pos:start="199:33" pos:end="199:33">=</operator> <literal type="number" pos:start="199:35" pos:end="199:35">1</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="201:25" pos:end="201:69"><expr pos:start="201:25" pos:end="201:68"><call pos:start="201:25" pos:end="201:68"><name pos:start="201:25" pos:end="201:32">snprintf</name><argument_list pos:start="201:33" pos:end="201:68">(<argument pos:start="201:34" pos:end="201:36"><expr pos:start="201:34" pos:end="201:36"><name pos:start="201:34" pos:end="201:36">tmp</name></expr></argument>, <argument pos:start="201:39" pos:end="201:49"><expr pos:start="201:39" pos:end="201:49"><sizeof pos:start="201:39" pos:end="201:49">sizeof<argument_list pos:start="201:45" pos:end="201:49">(<argument pos:start="201:46" pos:end="201:48"><expr pos:start="201:46" pos:end="201:48"><name pos:start="201:46" pos:end="201:48">tmp</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="201:52" pos:end="201:58"><expr pos:start="201:52" pos:end="201:58"><literal type="string" pos:start="201:52" pos:end="201:58">"&lt;/%s&gt;"</literal></expr></argument>, <argument pos:start="201:61" pos:end="201:67"><expr pos:start="201:61" pos:end="201:67"><name pos:start="201:61" pos:end="201:67">tagname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <if_stmt pos:start="205:21" pos:end="219:57"><if pos:start="205:21" pos:end="209:21">if <condition pos:start="205:24" pos:end="205:34">(<expr pos:start="205:25" pos:end="205:33"><name pos:start="205:25" pos:end="205:33">tag_close</name></expr>)</condition> <block pos:start="205:36" pos:end="209:21">{<block_content pos:start="207:25" pos:end="207:31">

                        <expr_stmt pos:start="207:25" pos:end="207:31"><expr pos:start="207:25" pos:end="207:30"><name pos:start="207:25" pos:end="207:28">sptr</name><operator pos:start="207:29" pos:end="207:30">--</operator></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="209:23" pos:end="215:21">else if <condition pos:start="209:31" pos:end="209:59">(<expr pos:start="209:32" pos:end="209:58"><name pos:start="209:32" pos:end="209:38">unknown</name> <operator pos:start="209:40" pos:end="209:41">&amp;&amp;</operator> <operator pos:start="209:43" pos:end="209:43">!</operator><call pos:start="209:44" pos:end="209:58"><name pos:start="209:44" pos:end="209:49">strstr</name><argument_list pos:start="209:50" pos:end="209:58">(<argument pos:start="209:51" pos:end="209:52"><expr pos:start="209:51" pos:end="209:52"><name pos:start="209:51" pos:end="209:52">in</name></expr></argument>, <argument pos:start="209:55" pos:end="209:57"><expr pos:start="209:55" pos:end="209:57"><name pos:start="209:55" pos:end="209:57">tmp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="209:61" pos:end="215:21">{<block_content pos:start="211:25" pos:end="213:53">

                        <expr_stmt pos:start="211:25" pos:end="211:46"><expr pos:start="211:25" pos:end="211:45"><name pos:start="211:25" pos:end="211:26">in</name> <operator pos:start="211:28" pos:end="211:29">-=</operator> <name pos:start="211:31" pos:end="211:33">len</name> <operator pos:start="211:35" pos:end="211:35">+</operator> <name pos:start="211:37" pos:end="211:45">tag_close</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="213:25" pos:end="213:53"><expr pos:start="213:25" pos:end="213:52"><call pos:start="213:25" pos:end="213:52"><name pos:start="213:25" pos:end="213:39">av_bprint_chars</name><argument_list pos:start="213:40" pos:end="213:52">(<argument pos:start="213:41" pos:end="213:43"><expr pos:start="213:41" pos:end="213:43"><name pos:start="213:41" pos:end="213:43">dst</name></expr></argument>, <argument pos:start="213:46" pos:end="213:48"><expr pos:start="213:46" pos:end="213:48"><operator pos:start="213:46" pos:end="213:46">*</operator><name pos:start="213:47" pos:end="213:48">in</name></expr></argument>, <argument pos:start="213:51" pos:end="213:51"><expr pos:start="213:51" pos:end="213:51"><literal type="number" pos:start="213:51" pos:end="213:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="215:23" pos:end="219:57">else<block type="pseudo" pos:start="217:25" pos:end="219:57"><block_content pos:start="217:25" pos:end="219:57">

                        <expr_stmt pos:start="217:25" pos:end="219:57"><expr pos:start="217:25" pos:end="219:56"><call pos:start="217:25" pos:end="219:56"><name pos:start="217:25" pos:end="217:34">av_strlcpy</name><argument_list pos:start="217:35" pos:end="219:56">(<argument pos:start="217:36" pos:end="217:52"><expr pos:start="217:36" pos:end="217:52"><name pos:start="217:36" pos:end="217:48"><name pos:start="217:36" pos:end="217:40">stack</name><index pos:start="217:41" pos:end="217:48">[<expr pos:start="217:42" pos:end="217:47"><name pos:start="217:42" pos:end="217:45">sptr</name><operator pos:start="217:46" pos:end="217:47">++</operator></expr>]</index></name><operator pos:start="217:49" pos:end="217:49">.</operator><name pos:start="217:50" pos:end="217:52">tag</name></expr></argument>, <argument pos:start="217:55" pos:end="217:61"><expr pos:start="217:55" pos:end="217:61"><name pos:start="217:55" pos:end="217:61">tagname</name></expr></argument>,

                                   <argument pos:start="219:36" pos:end="219:55"><expr pos:start="219:36" pos:end="219:55"><sizeof pos:start="219:36" pos:end="219:55">sizeof<argument_list pos:start="219:42" pos:end="219:55">(<argument pos:start="219:43" pos:end="219:54"><expr pos:start="219:43" pos:end="219:54"><name pos:start="219:43" pos:end="219:50"><name pos:start="219:43" pos:end="219:47">stack</name><index pos:start="219:48" pos:end="219:50">[<expr pos:start="219:49" pos:end="219:49"><literal type="number" pos:start="219:49" pos:end="219:49">0</literal></expr>]</index></name><operator pos:start="219:51" pos:end="219:51">.</operator><name pos:start="219:52" pos:end="219:54">tag</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <break pos:start="221:21" pos:end="221:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        <default pos:start="227:9" pos:end="227:16">default:</default>

            <expr_stmt pos:start="229:13" pos:end="229:41"><expr pos:start="229:13" pos:end="229:40"><call pos:start="229:13" pos:end="229:40"><name pos:start="229:13" pos:end="229:27">av_bprint_chars</name><argument_list pos:start="229:28" pos:end="229:40">(<argument pos:start="229:29" pos:end="229:31"><expr pos:start="229:29" pos:end="229:31"><name pos:start="229:29" pos:end="229:31">dst</name></expr></argument>, <argument pos:start="229:34" pos:end="229:36"><expr pos:start="229:34" pos:end="229:36"><operator pos:start="229:34" pos:end="229:34">*</operator><name pos:start="229:35" pos:end="229:36">in</name></expr></argument>, <argument pos:start="229:39" pos:end="229:39"><expr pos:start="229:39" pos:end="229:39"><literal type="number" pos:start="229:39" pos:end="229:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="231:13" pos:end="231:18">break;</break>

        </block_content>}</block></switch>

        <if_stmt pos:start="235:9" pos:end="237:27"><if pos:start="235:9" pos:end="237:27">if <condition pos:start="235:12" pos:end="235:53">(<expr pos:start="235:13" pos:end="235:52"><operator pos:start="235:13" pos:end="235:13">*</operator><name pos:start="235:14" pos:end="235:15">in</name> <operator pos:start="235:17" pos:end="235:18">!=</operator> <literal type="char" pos:start="235:20" pos:end="235:22">' '</literal> <operator pos:start="235:24" pos:end="235:25">&amp;&amp;</operator> <operator pos:start="235:27" pos:end="235:27">*</operator><name pos:start="235:28" pos:end="235:29">in</name> <operator pos:start="235:31" pos:end="235:32">!=</operator> <literal type="char" pos:start="235:34" pos:end="235:37">'\r'</literal> <operator pos:start="235:39" pos:end="235:40">&amp;&amp;</operator> <operator pos:start="235:42" pos:end="235:42">*</operator><name pos:start="235:43" pos:end="235:44">in</name> <operator pos:start="235:46" pos:end="235:47">!=</operator> <literal type="char" pos:start="235:49" pos:end="235:52">'\n'</literal></expr>)</condition><block type="pseudo" pos:start="237:13" pos:end="237:27"><block_content pos:start="237:13" pos:end="237:27">

            <expr_stmt pos:start="237:13" pos:end="237:27"><expr pos:start="237:13" pos:end="237:26"><name pos:start="237:13" pos:end="237:22">line_start</name> <operator pos:start="237:24" pos:end="237:24">=</operator> <literal type="number" pos:start="237:26" pos:end="237:26">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <while pos:start="243:5" pos:end="245:22">while <condition pos:start="243:11" pos:end="243:72">(<expr pos:start="243:12" pos:end="243:71"><name pos:start="243:12" pos:end="243:19"><name pos:start="243:12" pos:end="243:14">dst</name><operator pos:start="243:15" pos:end="243:16">-&gt;</operator><name pos:start="243:17" pos:end="243:19">len</name></name> <operator pos:start="243:21" pos:end="243:22">&gt;=</operator> <literal type="number" pos:start="243:24" pos:end="243:24">2</literal> <operator pos:start="243:26" pos:end="243:27">&amp;&amp;</operator> <operator pos:start="243:29" pos:end="243:29">!</operator><call pos:start="243:30" pos:end="243:71"><name pos:start="243:30" pos:end="243:36">strncmp</name><argument_list pos:start="243:37" pos:end="243:71">(<argument pos:start="243:38" pos:end="243:60"><expr pos:start="243:38" pos:end="243:60"><operator pos:start="243:38" pos:end="243:38">&amp;</operator><name pos:start="243:39" pos:end="243:60"><name pos:start="243:39" pos:end="243:41">dst</name><operator pos:start="243:42" pos:end="243:43">-&gt;</operator><name pos:start="243:44" pos:end="243:46">str</name><index pos:start="243:47" pos:end="243:60">[<expr pos:start="243:48" pos:end="243:59"><name pos:start="243:48" pos:end="243:55"><name pos:start="243:48" pos:end="243:50">dst</name><operator pos:start="243:51" pos:end="243:52">-&gt;</operator><name pos:start="243:53" pos:end="243:55">len</name></name> <operator pos:start="243:57" pos:end="243:57">-</operator> <literal type="number" pos:start="243:59" pos:end="243:59">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="243:63" pos:end="243:67"><expr pos:start="243:63" pos:end="243:67"><literal type="string" pos:start="243:63" pos:end="243:67">"\\N"</literal></expr></argument>, <argument pos:start="243:70" pos:end="243:70"><expr pos:start="243:70" pos:end="243:70"><literal type="number" pos:start="243:70" pos:end="243:70">2</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="245:9" pos:end="245:22"><block_content pos:start="245:9" pos:end="245:22">

        <expr_stmt pos:start="245:9" pos:end="245:22"><expr pos:start="245:9" pos:end="245:21"><name pos:start="245:9" pos:end="245:16"><name pos:start="245:9" pos:end="245:11">dst</name><operator pos:start="245:12" pos:end="245:13">-&gt;</operator><name pos:start="245:14" pos:end="245:16">len</name></name> <operator pos:start="245:18" pos:end="245:19">-=</operator> <literal type="number" pos:start="245:21" pos:end="245:21">2</literal></expr>;</expr_stmt></block_content></block></while>

    <expr_stmt pos:start="247:5" pos:end="247:27"><expr pos:start="247:5" pos:end="247:26"><name pos:start="247:5" pos:end="247:22"><name pos:start="247:5" pos:end="247:7">dst</name><operator pos:start="247:8" pos:end="247:9">-&gt;</operator><name pos:start="247:10" pos:end="247:12">str</name><index pos:start="247:13" pos:end="247:22">[<expr pos:start="247:14" pos:end="247:21"><name pos:start="247:14" pos:end="247:21"><name pos:start="247:14" pos:end="247:16">dst</name><operator pos:start="247:17" pos:end="247:18">-&gt;</operator><name pos:start="247:19" pos:end="247:21">len</name></name></expr>]</index></name> <operator pos:start="247:24" pos:end="247:24">=</operator> <literal type="number" pos:start="247:26" pos:end="247:26">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="249:5" pos:end="249:27"><expr pos:start="249:5" pos:end="249:26"><call pos:start="249:5" pos:end="249:26"><name pos:start="249:5" pos:end="249:21">rstrip_spaces_buf</name><argument_list pos:start="249:22" pos:end="249:26">(<argument pos:start="249:23" pos:end="249:25"><expr pos:start="249:23" pos:end="249:25"><name pos:start="249:23" pos:end="249:25">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
