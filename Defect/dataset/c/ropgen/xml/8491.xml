<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8491.c" pos:tabs="8"><function pos:start="1:1" pos:end="113:1"><type pos:start="1:1" pos:end="1:10"><name pos:start="1:1" pos:end="1:8">AVStream</name> <modifier pos:start="1:10" pos:end="1:10">*</modifier></type><name pos:start="1:11" pos:end="1:26">add_video_stream</name><parameter_list pos:start="1:27" pos:end="1:61">(<parameter pos:start="1:28" pos:end="1:46"><decl pos:start="1:28" pos:end="1:46"><type pos:start="1:28" pos:end="1:46"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:46">oc</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:60"><decl pos:start="1:49" pos:end="1:60"><type pos:start="1:49" pos:end="1:60"><name pos:start="1:49" pos:end="1:51">int</name></type> <name pos:start="1:53" pos:end="1:60">codec_id</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="113:1">{<block_content pos:start="5:5" pos:end="111:14">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">AVCodec</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:18">codec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">AVCodecContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">c</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:24">picture_buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:13"><decl pos:start="13:5" pos:end="13:12"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">size</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:30"><expr pos:start="17:5" pos:end="17:29"><name pos:start="17:5" pos:end="17:6">st</name> <operator pos:start="17:8" pos:end="17:8">=</operator> <call pos:start="17:10" pos:end="17:29"><name pos:start="17:10" pos:end="17:22">av_new_stream</name><argument_list pos:start="17:23" pos:end="17:29">(<argument pos:start="17:24" pos:end="17:25"><expr pos:start="17:24" pos:end="17:25"><name pos:start="17:24" pos:end="17:25">oc</name></expr></argument>, <argument pos:start="17:28" pos:end="17:28"><expr pos:start="17:28" pos:end="17:28"><literal type="number" pos:start="17:28" pos:end="17:28">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:12">(<expr pos:start="19:9" pos:end="19:11"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:11">st</name></expr>)</condition> <block pos:start="19:14" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:16">

        <expr_stmt pos:start="21:9" pos:end="21:52"><expr pos:start="21:9" pos:end="21:51"><call pos:start="21:9" pos:end="21:51"><name pos:start="21:9" pos:end="21:15">fprintf</name><argument_list pos:start="21:16" pos:end="21:51">(<argument pos:start="21:17" pos:end="21:22"><expr pos:start="21:17" pos:end="21:22"><name pos:start="21:17" pos:end="21:22">stderr</name></expr></argument>, <argument pos:start="21:25" pos:end="21:50"><expr pos:start="21:25" pos:end="21:50"><literal type="string" pos:start="21:25" pos:end="21:50">"Could not alloc stream\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:16"><expr pos:start="23:9" pos:end="23:15"><call pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:12">exit</name><argument_list pos:start="23:13" pos:end="23:15">(<argument pos:start="23:14" pos:end="23:14"><expr pos:start="23:14" pos:end="23:14"><literal type="number" pos:start="23:14" pos:end="23:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    

    <comment type="block" pos:start="29:5" pos:end="29:38">/* find the mpeg1 video encoder */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:43"><expr pos:start="31:5" pos:end="31:42"><name pos:start="31:5" pos:end="31:9">codec</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <call pos:start="31:13" pos:end="31:42"><name pos:start="31:13" pos:end="31:32">avcodec_find_encoder</name><argument_list pos:start="31:33" pos:end="31:42">(<argument pos:start="31:34" pos:end="31:41"><expr pos:start="31:34" pos:end="31:41"><name pos:start="31:34" pos:end="31:41">codec_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:15">(<expr pos:start="33:9" pos:end="33:14"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:14">codec</name></expr>)</condition> <block pos:start="33:17" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:16">

        <expr_stmt pos:start="35:9" pos:end="35:45"><expr pos:start="35:9" pos:end="35:44"><call pos:start="35:9" pos:end="35:44"><name pos:start="35:9" pos:end="35:15">fprintf</name><argument_list pos:start="35:16" pos:end="35:44">(<argument pos:start="35:17" pos:end="35:22"><expr pos:start="35:17" pos:end="35:22"><name pos:start="35:17" pos:end="35:22">stderr</name></expr></argument>, <argument pos:start="35:25" pos:end="35:43"><expr pos:start="35:25" pos:end="35:43"><literal type="string" pos:start="35:25" pos:end="35:43">"codec not found\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:16"><expr pos:start="37:9" pos:end="37:15"><call pos:start="37:9" pos:end="37:15"><name pos:start="37:9" pos:end="37:12">exit</name><argument_list pos:start="37:13" pos:end="37:15">(<argument pos:start="37:14" pos:end="37:14"><expr pos:start="37:14" pos:end="37:14"><literal type="number" pos:start="37:14" pos:end="37:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:19"><expr pos:start="43:5" pos:end="43:18"><name pos:start="43:5" pos:end="43:5">c</name> <operator pos:start="43:7" pos:end="43:7">=</operator> <operator pos:start="43:9" pos:end="43:9">&amp;</operator><name pos:start="43:10" pos:end="43:18"><name pos:start="43:10" pos:end="43:11">st</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:18">codec</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:37"><expr pos:start="45:5" pos:end="45:36"><name pos:start="45:5" pos:end="45:17"><name pos:start="45:5" pos:end="45:5">c</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:17">codec_type</name></name> <operator pos:start="45:19" pos:end="45:19">=</operator> <name pos:start="45:21" pos:end="45:36">CODEC_TYPE_VIDEO</name></expr>;</expr_stmt>



    <comment type="block" pos:start="49:5" pos:end="49:31">/* put sample parameters */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:25"><expr pos:start="51:5" pos:end="51:24"><name pos:start="51:5" pos:end="51:15"><name pos:start="51:5" pos:end="51:5">c</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:15">bit_rate</name></name> <operator pos:start="51:17" pos:end="51:17">=</operator> <literal type="number" pos:start="51:19" pos:end="51:24">400000</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="53:5" pos:end="53:46">/* resolution must be a multiple of two */</comment>

    <expr_stmt pos:start="55:5" pos:end="55:19"><expr pos:start="55:5" pos:end="55:18"><name pos:start="55:5" pos:end="55:12"><name pos:start="55:5" pos:end="55:5">c</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:12">width</name></name> <operator pos:start="55:14" pos:end="55:14">=</operator> <literal type="number" pos:start="55:16" pos:end="55:18">352</literal></expr>;</expr_stmt>  

    <expr_stmt pos:start="57:5" pos:end="57:20"><expr pos:start="57:5" pos:end="57:19"><name pos:start="57:5" pos:end="57:13"><name pos:start="57:5" pos:end="57:5">c</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:13">height</name></name> <operator pos:start="57:15" pos:end="57:15">=</operator> <literal type="number" pos:start="57:17" pos:end="57:19">288</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="59:5" pos:end="59:27">/* frames per second */</comment>

    <expr_stmt pos:start="61:5" pos:end="61:23"><expr pos:start="61:5" pos:end="61:22"><name pos:start="61:5" pos:end="61:17"><name pos:start="61:5" pos:end="61:5">c</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:17">frame_rate</name></name> <operator pos:start="61:19" pos:end="61:19">=</operator> <literal type="number" pos:start="61:21" pos:end="61:22">25</literal></expr>;</expr_stmt>  

    <expr_stmt pos:start="63:5" pos:end="63:26"><expr pos:start="63:5" pos:end="63:25"><name pos:start="63:5" pos:end="63:22"><name pos:start="63:5" pos:end="63:5">c</name><operator pos:start="63:6" pos:end="63:7">-&gt;</operator><name pos:start="63:8" pos:end="63:22">frame_rate_base</name></name><operator pos:start="63:23" pos:end="63:23">=</operator> <literal type="number" pos:start="63:25" pos:end="63:25">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:21"><expr pos:start="65:5" pos:end="65:20"><name pos:start="65:5" pos:end="65:15"><name pos:start="65:5" pos:end="65:5">c</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:15">gop_size</name></name> <operator pos:start="65:17" pos:end="65:17">=</operator> <literal type="number" pos:start="65:19" pos:end="65:20">12</literal></expr>;</expr_stmt> <comment type="block" pos:start="65:23" pos:end="65:68">/* emit one intra frame every twelve frames */</comment>



    <comment type="block" pos:start="69:5" pos:end="69:17">/* open it */</comment>

    <if_stmt pos:start="71:5" pos:end="77:5"><if pos:start="71:5" pos:end="77:5">if <condition pos:start="71:8" pos:end="71:35">(<expr pos:start="71:9" pos:end="71:34"><call pos:start="71:9" pos:end="71:30"><name pos:start="71:9" pos:end="71:20">avcodec_open</name><argument_list pos:start="71:21" pos:end="71:30">(<argument pos:start="71:22" pos:end="71:22"><expr pos:start="71:22" pos:end="71:22"><name pos:start="71:22" pos:end="71:22">c</name></expr></argument>, <argument pos:start="71:25" pos:end="71:29"><expr pos:start="71:25" pos:end="71:29"><name pos:start="71:25" pos:end="71:29">codec</name></expr></argument>)</argument_list></call> <operator pos:start="71:32" pos:end="71:32">&lt;</operator> <literal type="number" pos:start="71:34" pos:end="71:34">0</literal></expr>)</condition> <block pos:start="71:37" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:16">

        <expr_stmt pos:start="73:9" pos:end="73:50"><expr pos:start="73:9" pos:end="73:49"><call pos:start="73:9" pos:end="73:49"><name pos:start="73:9" pos:end="73:15">fprintf</name><argument_list pos:start="73:16" pos:end="73:49">(<argument pos:start="73:17" pos:end="73:22"><expr pos:start="73:17" pos:end="73:22"><name pos:start="73:17" pos:end="73:22">stderr</name></expr></argument>, <argument pos:start="73:25" pos:end="73:48"><expr pos:start="73:25" pos:end="73:48"><literal type="string" pos:start="73:25" pos:end="73:48">"could not open codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:16"><expr pos:start="75:9" pos:end="75:15"><call pos:start="75:9" pos:end="75:15"><name pos:start="75:9" pos:end="75:12">exit</name><argument_list pos:start="75:13" pos:end="75:15">(<argument pos:start="75:14" pos:end="75:14"><expr pos:start="75:14" pos:end="75:14"><literal type="number" pos:start="75:14" pos:end="75:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="81:5" pos:end="81:31">/* alloc various buffers */</comment>

    <expr_stmt pos:start="83:5" pos:end="83:35"><expr pos:start="83:5" pos:end="83:34"><name pos:start="83:5" pos:end="83:11">picture</name><operator pos:start="83:12" pos:end="83:12">=</operator> <call pos:start="83:14" pos:end="83:34"><name pos:start="83:14" pos:end="83:32">avcodec_alloc_frame</name><argument_list pos:start="83:33" pos:end="83:34">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:31"><expr pos:start="85:5" pos:end="85:30"><name pos:start="85:5" pos:end="85:21">video_outbuf_size</name> <operator pos:start="85:23" pos:end="85:23">=</operator> <literal type="number" pos:start="85:25" pos:end="85:30">100000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:45"><expr pos:start="87:5" pos:end="87:44"><name pos:start="87:5" pos:end="87:16">video_outbuf</name> <operator pos:start="87:18" pos:end="87:18">=</operator> <call pos:start="87:20" pos:end="87:44"><name pos:start="87:20" pos:end="87:25">malloc</name><argument_list pos:start="87:26" pos:end="87:44">(<argument pos:start="87:27" pos:end="87:43"><expr pos:start="87:27" pos:end="87:43"><name pos:start="87:27" pos:end="87:43">video_outbuf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:32"><expr pos:start="91:5" pos:end="91:31"><name pos:start="91:5" pos:end="91:8">size</name> <operator pos:start="91:10" pos:end="91:10">=</operator> <name pos:start="91:12" pos:end="91:19"><name pos:start="91:12" pos:end="91:12">c</name><operator pos:start="91:13" pos:end="91:14">-&gt;</operator><name pos:start="91:15" pos:end="91:19">width</name></name> <operator pos:start="91:21" pos:end="91:21">*</operator> <name pos:start="91:23" pos:end="91:31"><name pos:start="91:23" pos:end="91:23">c</name><operator pos:start="91:24" pos:end="91:25">-&gt;</operator><name pos:start="91:26" pos:end="91:31">height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:41"><expr pos:start="93:5" pos:end="93:40"><name pos:start="93:5" pos:end="93:15">picture_buf</name> <operator pos:start="93:17" pos:end="93:17">=</operator> <call pos:start="93:19" pos:end="93:40"><name pos:start="93:19" pos:end="93:24">malloc</name><argument_list pos:start="93:25" pos:end="93:40">(<argument pos:start="93:26" pos:end="93:39"><expr pos:start="93:26" pos:end="93:39"><operator pos:start="93:26" pos:end="93:26">(</operator><name pos:start="93:27" pos:end="93:30">size</name> <operator pos:start="93:32" pos:end="93:32">*</operator> <literal type="number" pos:start="93:34" pos:end="93:34">3</literal><operator pos:start="93:35" pos:end="93:35">)</operator> <operator pos:start="93:37" pos:end="93:37">/</operator> <literal type="number" pos:start="93:39" pos:end="93:39">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="93:43" pos:end="93:64">/* size for YUV 420 */</comment>

    

    <expr_stmt pos:start="97:5" pos:end="97:35"><expr pos:start="97:5" pos:end="97:34"><name pos:start="97:5" pos:end="97:20"><name pos:start="97:5" pos:end="97:11">picture</name><operator pos:start="97:12" pos:end="97:13">-&gt;</operator><name pos:start="97:14" pos:end="97:17">data</name><index pos:start="97:18" pos:end="97:20">[<expr pos:start="97:19" pos:end="97:19"><literal type="number" pos:start="97:19" pos:end="97:19">0</literal></expr>]</index></name> <operator pos:start="97:22" pos:end="97:22">=</operator> <name pos:start="97:24" pos:end="97:34">picture_buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:47"><expr pos:start="99:5" pos:end="99:46"><name pos:start="99:5" pos:end="99:20"><name pos:start="99:5" pos:end="99:11">picture</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:17">data</name><index pos:start="99:18" pos:end="99:20">[<expr pos:start="99:19" pos:end="99:19"><literal type="number" pos:start="99:19" pos:end="99:19">1</literal></expr>]</index></name> <operator pos:start="99:22" pos:end="99:22">=</operator> <name pos:start="99:24" pos:end="99:39"><name pos:start="99:24" pos:end="99:30">picture</name><operator pos:start="99:31" pos:end="99:32">-&gt;</operator><name pos:start="99:33" pos:end="99:36">data</name><index pos:start="99:37" pos:end="99:39">[<expr pos:start="99:38" pos:end="99:38"><literal type="number" pos:start="99:38" pos:end="99:38">0</literal></expr>]</index></name> <operator pos:start="99:41" pos:end="99:41">+</operator> <name pos:start="99:43" pos:end="99:46">size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:51"><expr pos:start="101:5" pos:end="101:50"><name pos:start="101:5" pos:end="101:20"><name pos:start="101:5" pos:end="101:11">picture</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:17">data</name><index pos:start="101:18" pos:end="101:20">[<expr pos:start="101:19" pos:end="101:19"><literal type="number" pos:start="101:19" pos:end="101:19">2</literal></expr>]</index></name> <operator pos:start="101:22" pos:end="101:22">=</operator> <name pos:start="101:24" pos:end="101:39"><name pos:start="101:24" pos:end="101:30">picture</name><operator pos:start="101:31" pos:end="101:32">-&gt;</operator><name pos:start="101:33" pos:end="101:36">data</name><index pos:start="101:37" pos:end="101:39">[<expr pos:start="101:38" pos:end="101:38"><literal type="number" pos:start="101:38" pos:end="101:38">1</literal></expr>]</index></name> <operator pos:start="101:41" pos:end="101:41">+</operator> <name pos:start="101:43" pos:end="101:46">size</name> <operator pos:start="101:48" pos:end="101:48">/</operator> <literal type="number" pos:start="101:50" pos:end="101:50">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:36"><expr pos:start="103:5" pos:end="103:35"><name pos:start="103:5" pos:end="103:24"><name pos:start="103:5" pos:end="103:11">picture</name><operator pos:start="103:12" pos:end="103:13">-&gt;</operator><name pos:start="103:14" pos:end="103:21">linesize</name><index pos:start="103:22" pos:end="103:24">[<expr pos:start="103:23" pos:end="103:23"><literal type="number" pos:start="103:23" pos:end="103:23">0</literal></expr>]</index></name> <operator pos:start="103:26" pos:end="103:26">=</operator> <name pos:start="103:28" pos:end="103:35"><name pos:start="103:28" pos:end="103:28">c</name><operator pos:start="103:29" pos:end="103:30">-&gt;</operator><name pos:start="103:31" pos:end="103:35">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:40"><expr pos:start="105:5" pos:end="105:39"><name pos:start="105:5" pos:end="105:24"><name pos:start="105:5" pos:end="105:11">picture</name><operator pos:start="105:12" pos:end="105:13">-&gt;</operator><name pos:start="105:14" pos:end="105:21">linesize</name><index pos:start="105:22" pos:end="105:24">[<expr pos:start="105:23" pos:end="105:23"><literal type="number" pos:start="105:23" pos:end="105:23">1</literal></expr>]</index></name> <operator pos:start="105:26" pos:end="105:26">=</operator> <name pos:start="105:28" pos:end="105:35"><name pos:start="105:28" pos:end="105:28">c</name><operator pos:start="105:29" pos:end="105:30">-&gt;</operator><name pos:start="105:31" pos:end="105:35">width</name></name> <operator pos:start="105:37" pos:end="105:37">/</operator> <literal type="number" pos:start="105:39" pos:end="105:39">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:40"><expr pos:start="107:5" pos:end="107:39"><name pos:start="107:5" pos:end="107:24"><name pos:start="107:5" pos:end="107:11">picture</name><operator pos:start="107:12" pos:end="107:13">-&gt;</operator><name pos:start="107:14" pos:end="107:21">linesize</name><index pos:start="107:22" pos:end="107:24">[<expr pos:start="107:23" pos:end="107:23"><literal type="number" pos:start="107:23" pos:end="107:23">2</literal></expr>]</index></name> <operator pos:start="107:26" pos:end="107:26">=</operator> <name pos:start="107:28" pos:end="107:35"><name pos:start="107:28" pos:end="107:28">c</name><operator pos:start="107:29" pos:end="107:30">-&gt;</operator><name pos:start="107:31" pos:end="107:35">width</name></name> <operator pos:start="107:37" pos:end="107:37">/</operator> <literal type="number" pos:start="107:39" pos:end="107:39">2</literal></expr>;</expr_stmt>



    <return pos:start="111:5" pos:end="111:14">return <expr pos:start="111:12" pos:end="111:13"><name pos:start="111:12" pos:end="111:13">st</name></expr>;</return>

</block_content>}</block></function>    
</unit>
