<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17469.c" pos:tabs="8"><function pos:start="1:1" pos:end="337:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">bool</name></type> <name pos:start="1:13" pos:end="1:21">cmd_smart</name><parameter_list pos:start="1:22" pos:end="1:47">(<parameter pos:start="1:23" pos:end="1:33"><decl pos:start="1:23" pos:end="1:33"><type pos:start="1:23" pos:end="1:33"><name pos:start="1:23" pos:end="1:30">IDEState</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:33">s</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:46"><decl pos:start="1:36" pos:end="1:46"><type pos:start="1:36" pos:end="1:46"><name pos:start="1:36" pos:end="1:42">uint8_t</name></type> <name pos:start="1:44" pos:end="1:46">cmd</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="337:1">{<block_content pos:start="5:5" pos:end="335:16">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">n</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:43">(<expr pos:start="9:9" pos:end="9:42"><name pos:start="9:9" pos:end="9:15"><name pos:start="9:9" pos:end="9:9">s</name><operator pos:start="9:10" pos:end="9:11">-&gt;</operator><name pos:start="9:12" pos:end="9:15">hcyl</name></name> <operator pos:start="9:17" pos:end="9:18">!=</operator> <literal type="number" pos:start="9:20" pos:end="9:23">0xc2</literal> <operator pos:start="9:25" pos:end="9:26">||</operator> <name pos:start="9:28" pos:end="9:34"><name pos:start="9:28" pos:end="9:28">s</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:34">lcyl</name></name> <operator pos:start="9:36" pos:end="9:37">!=</operator> <literal type="number" pos:start="9:39" pos:end="9:42">0x4f</literal></expr>)</condition> <block pos:start="9:45" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:23">

        <goto pos:start="11:9" pos:end="11:23">goto <name pos:start="11:14" pos:end="11:22">abort_cmd</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:56">(<expr pos:start="17:9" pos:end="17:55"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:25"><name pos:start="17:10" pos:end="17:10">s</name><operator pos:start="17:11" pos:end="17:12">-&gt;</operator><name pos:start="17:13" pos:end="17:25">smart_enabled</name></name> <operator pos:start="17:27" pos:end="17:28">&amp;&amp;</operator> <name pos:start="17:30" pos:end="17:39"><name pos:start="17:30" pos:end="17:30">s</name><operator pos:start="17:31" pos:end="17:32">-&gt;</operator><name pos:start="17:33" pos:end="17:39">feature</name></name> <operator pos:start="17:41" pos:end="17:42">!=</operator> <name pos:start="17:44" pos:end="17:55">SMART_ENABLE</name></expr>)</condition> <block pos:start="17:58" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:23">

        <goto pos:start="19:9" pos:end="19:23">goto <name pos:start="19:14" pos:end="19:22">abort_cmd</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="25:5" pos:end="327:5">switch <condition pos:start="25:12" pos:end="25:23">(<expr pos:start="25:13" pos:end="25:22"><name pos:start="25:13" pos:end="25:22"><name pos:start="25:13" pos:end="25:13">s</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:22">feature</name></name></expr>)</condition> <block pos:start="25:25" pos:end="327:5">{<block_content pos:start="27:5" pos:end="325:20">

    <case pos:start="27:5" pos:end="27:23">case <expr pos:start="27:10" pos:end="27:22"><name pos:start="27:10" pos:end="27:22">SMART_DISABLE</name></expr>:</case>

        <expr_stmt pos:start="29:9" pos:end="29:29"><expr pos:start="29:9" pos:end="29:28"><name pos:start="29:9" pos:end="29:24"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:24">smart_enabled</name></name> <operator pos:start="29:26" pos:end="29:26">=</operator> <literal type="number" pos:start="29:28" pos:end="29:28">0</literal></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:20">return <expr pos:start="31:16" pos:end="31:19"><name pos:start="31:16" pos:end="31:19">true</name></expr>;</return>



    <case pos:start="35:5" pos:end="35:22">case <expr pos:start="35:10" pos:end="35:21"><name pos:start="35:10" pos:end="35:21">SMART_ENABLE</name></expr>:</case>

        <expr_stmt pos:start="37:9" pos:end="37:29"><expr pos:start="37:9" pos:end="37:28"><name pos:start="37:9" pos:end="37:24"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:24">smart_enabled</name></name> <operator pos:start="37:26" pos:end="37:26">=</operator> <literal type="number" pos:start="37:28" pos:end="37:28">1</literal></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:20">return <expr pos:start="39:16" pos:end="39:19"><name pos:start="39:16" pos:end="39:19">true</name></expr>;</return>



    <case pos:start="43:5" pos:end="43:29">case <expr pos:start="43:10" pos:end="43:28"><name pos:start="43:10" pos:end="43:28">SMART_ATTR_AUTOSAVE</name></expr>:</case>

        <switch pos:start="45:9" pos:end="63:9">switch <condition pos:start="45:16" pos:end="45:26">(<expr pos:start="45:17" pos:end="45:25"><name pos:start="45:17" pos:end="45:25"><name pos:start="45:17" pos:end="45:17">s</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:25">sector</name></name></expr>)</condition> <block pos:start="45:28" pos:end="63:9">{<block_content pos:start="47:9" pos:end="61:27">

        <case pos:start="47:9" pos:end="47:18">case <expr pos:start="47:14" pos:end="47:17"><literal type="number" pos:start="47:14" pos:end="47:17">0x00</literal></expr>:</case>

            <expr_stmt pos:start="49:13" pos:end="49:34"><expr pos:start="49:13" pos:end="49:33"><name pos:start="49:13" pos:end="49:29"><name pos:start="49:13" pos:end="49:13">s</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:29">smart_autosave</name></name> <operator pos:start="49:31" pos:end="49:31">=</operator> <literal type="number" pos:start="49:33" pos:end="49:33">0</literal></expr>;</expr_stmt>

            <break pos:start="51:13" pos:end="51:18">break;</break>

        <case pos:start="53:9" pos:end="53:18">case <expr pos:start="53:14" pos:end="53:17"><literal type="number" pos:start="53:14" pos:end="53:17">0xf1</literal></expr>:</case>

            <expr_stmt pos:start="55:13" pos:end="55:34"><expr pos:start="55:13" pos:end="55:33"><name pos:start="55:13" pos:end="55:29"><name pos:start="55:13" pos:end="55:13">s</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:29">smart_autosave</name></name> <operator pos:start="55:31" pos:end="55:31">=</operator> <literal type="number" pos:start="55:33" pos:end="55:33">1</literal></expr>;</expr_stmt>

            <break pos:start="57:13" pos:end="57:18">break;</break>

        <default pos:start="59:9" pos:end="59:16">default:</default>

            <goto pos:start="61:13" pos:end="61:27">goto <name pos:start="61:18" pos:end="61:26">abort_cmd</name>;</goto>

        </block_content>}</block></switch>

        <return pos:start="65:9" pos:end="65:20">return <expr pos:start="65:16" pos:end="65:19"><name pos:start="65:16" pos:end="65:19">true</name></expr>;</return>



    <case pos:start="69:5" pos:end="69:22">case <expr pos:start="69:10" pos:end="69:21"><name pos:start="69:10" pos:end="69:21">SMART_STATUS</name></expr>:</case>

        <if_stmt pos:start="71:9" pos:end="83:9"><if pos:start="71:9" pos:end="77:9">if <condition pos:start="71:12" pos:end="71:29">(<expr pos:start="71:13" pos:end="71:28"><operator pos:start="71:13" pos:end="71:13">!</operator><name pos:start="71:14" pos:end="71:28"><name pos:start="71:14" pos:end="71:14">s</name><operator pos:start="71:15" pos:end="71:16">-&gt;</operator><name pos:start="71:17" pos:end="71:28">smart_errors</name></name></expr>)</condition> <block pos:start="71:31" pos:end="77:9">{<block_content pos:start="73:13" pos:end="75:27">

            <expr_stmt pos:start="73:13" pos:end="73:27"><expr pos:start="73:13" pos:end="73:26"><name pos:start="73:13" pos:end="73:19"><name pos:start="73:13" pos:end="73:13">s</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:19">hcyl</name></name> <operator pos:start="73:21" pos:end="73:21">=</operator> <literal type="number" pos:start="73:23" pos:end="73:26">0xc2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:27"><expr pos:start="75:13" pos:end="75:26"><name pos:start="75:13" pos:end="75:19"><name pos:start="75:13" pos:end="75:13">s</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:19">lcyl</name></name> <operator pos:start="75:21" pos:end="75:21">=</operator> <literal type="number" pos:start="75:23" pos:end="75:26">0x4f</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="77:11" pos:end="83:9">else <block pos:start="77:16" pos:end="83:9">{<block_content pos:start="79:13" pos:end="81:27">

            <expr_stmt pos:start="79:13" pos:end="79:27"><expr pos:start="79:13" pos:end="79:26"><name pos:start="79:13" pos:end="79:19"><name pos:start="79:13" pos:end="79:13">s</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:19">hcyl</name></name> <operator pos:start="79:21" pos:end="79:21">=</operator> <literal type="number" pos:start="79:23" pos:end="79:26">0x2c</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:27"><expr pos:start="81:13" pos:end="81:26"><name pos:start="81:13" pos:end="81:19"><name pos:start="81:13" pos:end="81:13">s</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:19">lcyl</name></name> <operator pos:start="81:21" pos:end="81:21">=</operator> <literal type="number" pos:start="81:23" pos:end="81:26">0xf4</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <return pos:start="85:9" pos:end="85:20">return <expr pos:start="85:16" pos:end="85:19"><name pos:start="85:16" pos:end="85:19">true</name></expr>;</return>



    <case pos:start="89:5" pos:end="89:27">case <expr pos:start="89:10" pos:end="89:26"><name pos:start="89:10" pos:end="89:26">SMART_READ_THRESH</name></expr>:</case>

        <expr_stmt pos:start="91:9" pos:end="91:39"><expr pos:start="91:9" pos:end="91:38"><call pos:start="91:9" pos:end="91:38"><name pos:start="91:9" pos:end="91:14">memset</name><argument_list pos:start="91:15" pos:end="91:38">(<argument pos:start="91:16" pos:end="91:27"><expr pos:start="91:16" pos:end="91:27"><name pos:start="91:16" pos:end="91:27"><name pos:start="91:16" pos:end="91:16">s</name><operator pos:start="91:17" pos:end="91:18">-&gt;</operator><name pos:start="91:19" pos:end="91:27">io_buffer</name></name></expr></argument>, <argument pos:start="91:30" pos:end="91:30"><expr pos:start="91:30" pos:end="91:30"><literal type="number" pos:start="91:30" pos:end="91:30">0</literal></expr></argument>, <argument pos:start="91:33" pos:end="91:37"><expr pos:start="91:33" pos:end="91:37"><literal type="number" pos:start="91:33" pos:end="91:37">0x200</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:31"><expr pos:start="93:9" pos:end="93:30"><name pos:start="93:9" pos:end="93:23"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:20">io_buffer</name><index pos:start="93:21" pos:end="93:23">[<expr pos:start="93:22" pos:end="93:22"><literal type="number" pos:start="93:22" pos:end="93:22">0</literal></expr>]</index></name> <operator pos:start="93:25" pos:end="93:25">=</operator> <literal type="number" pos:start="93:27" pos:end="93:30">0x01</literal></expr>;</expr_stmt> <comment type="block" pos:start="93:33" pos:end="93:58">/* smart struct version */</comment>



        <for pos:start="97:9" pos:end="103:9">for <control pos:start="97:13" pos:end="97:58">(<init pos:start="97:14" pos:end="97:19"><expr pos:start="97:14" pos:end="97:18"><name pos:start="97:14" pos:end="97:14">n</name> <operator pos:start="97:16" pos:end="97:16">=</operator> <literal type="number" pos:start="97:18" pos:end="97:18">0</literal></expr>;</init> <condition pos:start="97:21" pos:end="97:53"><expr pos:start="97:21" pos:end="97:52"><name pos:start="97:21" pos:end="97:21">n</name> <operator pos:start="97:23" pos:end="97:23">&lt;</operator> <call pos:start="97:25" pos:end="97:52"><name pos:start="97:25" pos:end="97:34">ARRAY_SIZE</name><argument_list pos:start="97:35" pos:end="97:52">(<argument pos:start="97:36" pos:end="97:51"><expr pos:start="97:36" pos:end="97:51"><name pos:start="97:36" pos:end="97:51">smart_attributes</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="97:55" pos:end="97:57"><expr pos:start="97:55" pos:end="97:57"><name pos:start="97:55" pos:end="97:55">n</name><operator pos:start="97:56" pos:end="97:57">++</operator></expr></incr>)</control> <block pos:start="97:60" pos:end="103:9">{<block_content pos:start="99:13" pos:end="101:69">

            <expr_stmt pos:start="99:13" pos:end="99:68"><expr pos:start="99:13" pos:end="99:67"><name pos:start="99:13" pos:end="99:42"><name pos:start="99:13" pos:end="99:13">s</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:24">io_buffer</name><index pos:start="99:25" pos:end="99:42">[<expr pos:start="99:26" pos:end="99:41"><literal type="number" pos:start="99:26" pos:end="99:28">2</literal> <operator pos:start="99:28" pos:end="99:28">+</operator> <literal type="number" pos:start="99:30" pos:end="99:32">0</literal> <operator pos:start="99:32" pos:end="99:32">+</operator> <operator pos:start="99:34" pos:end="99:34">(</operator><name pos:start="99:35" pos:end="99:35">n</name> <operator pos:start="99:37" pos:end="99:37">*</operator> <literal type="number" pos:start="99:39" pos:end="99:40">12</literal><operator pos:start="99:41" pos:end="99:41">)</operator></expr>]</index></name> <operator pos:start="99:44" pos:end="99:44">=</operator> <name pos:start="99:46" pos:end="99:67"><name pos:start="99:46" pos:end="99:61">smart_attributes</name><index pos:start="99:62" pos:end="99:64">[<expr pos:start="99:63" pos:end="99:63"><name pos:start="99:63" pos:end="99:63">n</name></expr>]</index><index pos:start="99:65" pos:end="99:67">[<expr pos:start="99:66" pos:end="99:66"><literal type="number" pos:start="99:66" pos:end="99:66">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:69"><expr pos:start="101:13" pos:end="101:68"><name pos:start="101:13" pos:end="101:42"><name pos:start="101:13" pos:end="101:13">s</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:24">io_buffer</name><index pos:start="101:25" pos:end="101:42">[<expr pos:start="101:26" pos:end="101:41"><literal type="number" pos:start="101:26" pos:end="101:28">2</literal> <operator pos:start="101:28" pos:end="101:28">+</operator> <literal type="number" pos:start="101:30" pos:end="101:32">1</literal> <operator pos:start="101:32" pos:end="101:32">+</operator> <operator pos:start="101:34" pos:end="101:34">(</operator><name pos:start="101:35" pos:end="101:35">n</name> <operator pos:start="101:37" pos:end="101:37">*</operator> <literal type="number" pos:start="101:39" pos:end="101:40">12</literal><operator pos:start="101:41" pos:end="101:41">)</operator></expr>]</index></name> <operator pos:start="101:44" pos:end="101:44">=</operator> <name pos:start="101:46" pos:end="101:68"><name pos:start="101:46" pos:end="101:61">smart_attributes</name><index pos:start="101:62" pos:end="101:64">[<expr pos:start="101:63" pos:end="101:63"><name pos:start="101:63" pos:end="101:63">n</name></expr>]</index><index pos:start="101:65" pos:end="101:68">[<expr pos:start="101:66" pos:end="101:67"><literal type="number" pos:start="101:66" pos:end="101:67">11</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <comment type="block" pos:start="107:9" pos:end="107:22">/* checksum */</comment>

        <for pos:start="109:9" pos:end="113:9">for <control pos:start="109:13" pos:end="109:33">(<init pos:start="109:14" pos:end="109:19"><expr pos:start="109:14" pos:end="109:18"><name pos:start="109:14" pos:end="109:14">n</name> <operator pos:start="109:16" pos:end="109:16">=</operator> <literal type="number" pos:start="109:18" pos:end="109:18">0</literal></expr>;</init> <condition pos:start="109:21" pos:end="109:28"><expr pos:start="109:21" pos:end="109:27"><name pos:start="109:21" pos:end="109:21">n</name> <operator pos:start="109:23" pos:end="109:23">&lt;</operator> <literal type="number" pos:start="109:25" pos:end="109:27">511</literal></expr>;</condition> <incr pos:start="109:30" pos:end="109:32"><expr pos:start="109:30" pos:end="109:32"><name pos:start="109:30" pos:end="109:30">n</name><operator pos:start="109:31" pos:end="109:32">++</operator></expr></incr>)</control> <block pos:start="109:35" pos:end="113:9">{<block_content pos:start="111:13" pos:end="111:49">

            <expr_stmt pos:start="111:13" pos:end="111:49"><expr pos:start="111:13" pos:end="111:48"><name pos:start="111:13" pos:end="111:29"><name pos:start="111:13" pos:end="111:13">s</name><operator pos:start="111:14" pos:end="111:15">-&gt;</operator><name pos:start="111:16" pos:end="111:24">io_buffer</name><index pos:start="111:25" pos:end="111:29">[<expr pos:start="111:26" pos:end="111:28"><literal type="number" pos:start="111:26" pos:end="111:28">511</literal></expr>]</index></name> <operator pos:start="111:31" pos:end="111:32">+=</operator> <name pos:start="111:34" pos:end="111:48"><name pos:start="111:34" pos:end="111:34">s</name><operator pos:start="111:35" pos:end="111:36">-&gt;</operator><name pos:start="111:37" pos:end="111:45">io_buffer</name><index pos:start="111:46" pos:end="111:48">[<expr pos:start="111:47" pos:end="111:47"><name pos:start="111:47" pos:end="111:47">n</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="115:9" pos:end="115:54"><expr pos:start="115:9" pos:end="115:53"><name pos:start="115:9" pos:end="115:25"><name pos:start="115:9" pos:end="115:9">s</name><operator pos:start="115:10" pos:end="115:11">-&gt;</operator><name pos:start="115:12" pos:end="115:20">io_buffer</name><index pos:start="115:21" pos:end="115:25">[<expr pos:start="115:22" pos:end="115:24"><literal type="number" pos:start="115:22" pos:end="115:24">511</literal></expr>]</index></name> <operator pos:start="115:27" pos:end="115:27">=</operator> <literal type="number" pos:start="115:29" pos:end="115:35">0x100</literal> <operator pos:start="115:35" pos:end="115:35">-</operator> <name pos:start="115:37" pos:end="115:53"><name pos:start="115:37" pos:end="115:37">s</name><operator pos:start="115:38" pos:end="115:39">-&gt;</operator><name pos:start="115:40" pos:end="115:48">io_buffer</name><index pos:start="115:49" pos:end="115:53">[<expr pos:start="115:50" pos:end="115:52"><literal type="number" pos:start="115:50" pos:end="115:52">511</literal></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="119:9" pos:end="119:43"><expr pos:start="119:9" pos:end="119:42"><name pos:start="119:9" pos:end="119:17"><name pos:start="119:9" pos:end="119:9">s</name><operator pos:start="119:10" pos:end="119:11">-&gt;</operator><name pos:start="119:12" pos:end="119:17">status</name></name> <operator pos:start="119:19" pos:end="119:19">=</operator> <name pos:start="119:21" pos:end="119:30">READY_STAT</name> <operator pos:start="119:32" pos:end="119:32">|</operator> <name pos:start="119:34" pos:end="119:42">SEEK_STAT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:70"><expr pos:start="121:9" pos:end="121:69"><call pos:start="121:9" pos:end="121:69"><name pos:start="121:9" pos:end="121:26">ide_transfer_start</name><argument_list pos:start="121:27" pos:end="121:69">(<argument pos:start="121:28" pos:end="121:28"><expr pos:start="121:28" pos:end="121:28"><name pos:start="121:28" pos:end="121:28">s</name></expr></argument>, <argument pos:start="121:31" pos:end="121:42"><expr pos:start="121:31" pos:end="121:42"><name pos:start="121:31" pos:end="121:42"><name pos:start="121:31" pos:end="121:31">s</name><operator pos:start="121:32" pos:end="121:33">-&gt;</operator><name pos:start="121:34" pos:end="121:42">io_buffer</name></name></expr></argument>, <argument pos:start="121:45" pos:end="121:49"><expr pos:start="121:45" pos:end="121:49"><literal type="number" pos:start="121:45" pos:end="121:49">0x200</literal></expr></argument>, <argument pos:start="121:52" pos:end="121:68"><expr pos:start="121:52" pos:end="121:68"><name pos:start="121:52" pos:end="121:68">ide_transfer_stop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:28"><expr pos:start="123:9" pos:end="123:27"><call pos:start="123:9" pos:end="123:27"><name pos:start="123:9" pos:end="123:19">ide_set_irq</name><argument_list pos:start="123:20" pos:end="123:27">(<argument pos:start="123:21" pos:end="123:26"><expr pos:start="123:21" pos:end="123:26"><name pos:start="123:21" pos:end="123:26"><name pos:start="123:21" pos:end="123:21">s</name><operator pos:start="123:22" pos:end="123:23">-&gt;</operator><name pos:start="123:24" pos:end="123:26">bus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="125:9" pos:end="125:21">return <expr pos:start="125:16" pos:end="125:20"><name pos:start="125:16" pos:end="125:20">false</name></expr>;</return>



    <case pos:start="129:5" pos:end="129:25">case <expr pos:start="129:10" pos:end="129:24"><name pos:start="129:10" pos:end="129:24">SMART_READ_DATA</name></expr>:</case>

        <expr_stmt pos:start="131:9" pos:end="131:39"><expr pos:start="131:9" pos:end="131:38"><call pos:start="131:9" pos:end="131:38"><name pos:start="131:9" pos:end="131:14">memset</name><argument_list pos:start="131:15" pos:end="131:38">(<argument pos:start="131:16" pos:end="131:27"><expr pos:start="131:16" pos:end="131:27"><name pos:start="131:16" pos:end="131:27"><name pos:start="131:16" pos:end="131:16">s</name><operator pos:start="131:17" pos:end="131:18">-&gt;</operator><name pos:start="131:19" pos:end="131:27">io_buffer</name></name></expr></argument>, <argument pos:start="131:30" pos:end="131:30"><expr pos:start="131:30" pos:end="131:30"><literal type="number" pos:start="131:30" pos:end="131:30">0</literal></expr></argument>, <argument pos:start="131:33" pos:end="131:37"><expr pos:start="131:33" pos:end="131:37"><literal type="number" pos:start="131:33" pos:end="131:37">0x200</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:31"><expr pos:start="133:9" pos:end="133:30"><name pos:start="133:9" pos:end="133:23"><name pos:start="133:9" pos:end="133:9">s</name><operator pos:start="133:10" pos:end="133:11">-&gt;</operator><name pos:start="133:12" pos:end="133:20">io_buffer</name><index pos:start="133:21" pos:end="133:23">[<expr pos:start="133:22" pos:end="133:22"><literal type="number" pos:start="133:22" pos:end="133:22">0</literal></expr>]</index></name> <operator pos:start="133:25" pos:end="133:25">=</operator> <literal type="number" pos:start="133:27" pos:end="133:30">0x01</literal></expr>;</expr_stmt> <comment type="block" pos:start="133:33" pos:end="133:58">/* smart struct version */</comment>



        <for pos:start="137:9" pos:end="147:9">for <control pos:start="137:13" pos:end="137:58">(<init pos:start="137:14" pos:end="137:19"><expr pos:start="137:14" pos:end="137:18"><name pos:start="137:14" pos:end="137:14">n</name> <operator pos:start="137:16" pos:end="137:16">=</operator> <literal type="number" pos:start="137:18" pos:end="137:18">0</literal></expr>;</init> <condition pos:start="137:21" pos:end="137:53"><expr pos:start="137:21" pos:end="137:52"><name pos:start="137:21" pos:end="137:21">n</name> <operator pos:start="137:23" pos:end="137:23">&lt;</operator> <call pos:start="137:25" pos:end="137:52"><name pos:start="137:25" pos:end="137:34">ARRAY_SIZE</name><argument_list pos:start="137:35" pos:end="137:52">(<argument pos:start="137:36" pos:end="137:51"><expr pos:start="137:36" pos:end="137:51"><name pos:start="137:36" pos:end="137:51">smart_attributes</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="137:55" pos:end="137:57"><expr pos:start="137:55" pos:end="137:57"><name pos:start="137:55" pos:end="137:55">n</name><operator pos:start="137:56" pos:end="137:57">++</operator></expr></incr>)</control> <block pos:start="137:60" pos:end="147:9">{<block_content pos:start="139:13" pos:end="145:13">

            <decl_stmt pos:start="139:13" pos:end="139:18"><decl pos:start="139:13" pos:end="139:17"><type pos:start="139:13" pos:end="139:15"><name pos:start="139:13" pos:end="139:15">int</name></type> <name pos:start="139:17" pos:end="139:17">i</name></decl>;</decl_stmt>

            <for pos:start="141:13" pos:end="145:13">for <control pos:start="141:17" pos:end="141:36">(<init pos:start="141:18" pos:end="141:23"><expr pos:start="141:18" pos:end="141:22"><name pos:start="141:18" pos:end="141:18">i</name> <operator pos:start="141:20" pos:end="141:20">=</operator> <literal type="number" pos:start="141:22" pos:end="141:22">0</literal></expr>;</init> <condition pos:start="141:25" pos:end="141:31"><expr pos:start="141:25" pos:end="141:30"><name pos:start="141:25" pos:end="141:25">i</name> <operator pos:start="141:27" pos:end="141:27">&lt;</operator> <literal type="number" pos:start="141:29" pos:end="141:30">11</literal></expr>;</condition> <incr pos:start="141:33" pos:end="141:35"><expr pos:start="141:33" pos:end="141:35"><name pos:start="141:33" pos:end="141:33">i</name><operator pos:start="141:34" pos:end="141:35">++</operator></expr></incr>)</control> <block pos:start="141:38" pos:end="145:13">{<block_content pos:start="143:17" pos:end="143:72">

                <expr_stmt pos:start="143:17" pos:end="143:72"><expr pos:start="143:17" pos:end="143:71"><name pos:start="143:17" pos:end="143:46"><name pos:start="143:17" pos:end="143:17">s</name><operator pos:start="143:18" pos:end="143:19">-&gt;</operator><name pos:start="143:20" pos:end="143:28">io_buffer</name><index pos:start="143:29" pos:end="143:46">[<expr pos:start="143:30" pos:end="143:45"><literal type="number" pos:start="143:30" pos:end="143:30">2</literal> <operator pos:start="143:32" pos:end="143:32">+</operator> <name pos:start="143:34" pos:end="143:34">i</name> <operator pos:start="143:36" pos:end="143:36">+</operator> <operator pos:start="143:38" pos:end="143:38">(</operator><name pos:start="143:39" pos:end="143:39">n</name> <operator pos:start="143:41" pos:end="143:41">*</operator> <literal type="number" pos:start="143:43" pos:end="143:44">12</literal><operator pos:start="143:45" pos:end="143:45">)</operator></expr>]</index></name> <operator pos:start="143:48" pos:end="143:48">=</operator> <name pos:start="143:50" pos:end="143:71"><name pos:start="143:50" pos:end="143:65">smart_attributes</name><index pos:start="143:66" pos:end="143:68">[<expr pos:start="143:67" pos:end="143:67"><name pos:start="143:67" pos:end="143:67">n</name></expr>]</index><index pos:start="143:69" pos:end="143:71">[<expr pos:start="143:70" pos:end="143:70"><name pos:start="143:70" pos:end="143:70">i</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>



        <expr_stmt pos:start="151:9" pos:end="151:69"><expr pos:start="151:9" pos:end="151:68"><name pos:start="151:9" pos:end="151:25"><name pos:start="151:9" pos:end="151:9">s</name><operator pos:start="151:10" pos:end="151:11">-&gt;</operator><name pos:start="151:12" pos:end="151:20">io_buffer</name><index pos:start="151:21" pos:end="151:25">[<expr pos:start="151:22" pos:end="151:24"><literal type="number" pos:start="151:22" pos:end="151:24">362</literal></expr>]</index></name> <operator pos:start="151:27" pos:end="151:27">=</operator> <literal type="number" pos:start="151:29" pos:end="151:32">0x02</literal> <operator pos:start="151:34" pos:end="151:34">|</operator> <operator pos:start="151:36" pos:end="151:36">(</operator><ternary pos:start="151:37" pos:end="151:67"><condition pos:start="151:37" pos:end="151:55"><expr pos:start="151:37" pos:end="151:53"><name pos:start="151:37" pos:end="151:53"><name pos:start="151:37" pos:end="151:37">s</name><operator pos:start="151:38" pos:end="151:39">-&gt;</operator><name pos:start="151:40" pos:end="151:53">smart_autosave</name></name></expr> ?</condition><then pos:start="151:57" pos:end="151:60"> <expr pos:start="151:57" pos:end="151:60"><literal type="number" pos:start="151:57" pos:end="151:60">0x80</literal></expr> </then><else pos:start="151:62" pos:end="151:67">: <expr pos:start="151:64" pos:end="151:67"><literal type="number" pos:start="151:64" pos:end="151:67">0x00</literal></expr></else></ternary><operator pos:start="151:68" pos:end="151:68">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="153:9" pos:end="167:9"><if pos:start="153:9" pos:end="157:9">if <condition pos:start="153:12" pos:end="153:41">(<expr pos:start="153:13" pos:end="153:40"><name pos:start="153:13" pos:end="153:35"><name pos:start="153:13" pos:end="153:13">s</name><operator pos:start="153:14" pos:end="153:15">-&gt;</operator><name pos:start="153:16" pos:end="153:35">smart_selftest_count</name></name> <operator pos:start="153:37" pos:end="153:38">==</operator> <literal type="number" pos:start="153:40" pos:end="153:40">0</literal></expr>)</condition> <block pos:start="153:43" pos:end="157:9">{<block_content pos:start="155:13" pos:end="155:34">

            <expr_stmt pos:start="155:13" pos:end="155:34"><expr pos:start="155:13" pos:end="155:33"><name pos:start="155:13" pos:end="155:29"><name pos:start="155:13" pos:end="155:13">s</name><operator pos:start="155:14" pos:end="155:15">-&gt;</operator><name pos:start="155:16" pos:end="155:24">io_buffer</name><index pos:start="155:25" pos:end="155:29">[<expr pos:start="155:26" pos:end="155:28"><literal type="number" pos:start="155:26" pos:end="155:28">363</literal></expr>]</index></name> <operator pos:start="155:31" pos:end="155:31">=</operator> <literal type="number" pos:start="155:33" pos:end="155:33">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="157:11" pos:end="167:9">else <block pos:start="157:16" pos:end="167:9">{<block_content pos:start="159:13" pos:end="165:31">

            <expr_stmt pos:start="159:13" pos:end="165:31"><expr pos:start="159:13" pos:end="165:30"><name pos:start="159:13" pos:end="159:29"><name pos:start="159:13" pos:end="159:13">s</name><operator pos:start="159:14" pos:end="159:15">-&gt;</operator><name pos:start="159:16" pos:end="159:24">io_buffer</name><index pos:start="159:25" pos:end="159:29">[<expr pos:start="159:26" pos:end="159:28"><literal type="number" pos:start="159:26" pos:end="159:28">363</literal></expr>]</index></name> <operator pos:start="159:31" pos:end="159:31">=</operator>

                <name pos:start="161:17" pos:end="165:30"><name pos:start="161:17" pos:end="161:17">s</name><operator pos:start="161:18" pos:end="161:19">-&gt;</operator><name pos:start="161:20" pos:end="161:38">smart_selftest_data</name><index pos:start="161:39" pos:end="165:30">[<expr pos:start="161:40" pos:end="165:29"><literal type="number" pos:start="161:40" pos:end="161:42">3</literal> <operator pos:start="161:42" pos:end="161:42">+</operator>

                           <operator pos:start="163:28" pos:end="163:28">(</operator><name pos:start="163:29" pos:end="163:51"><name pos:start="163:29" pos:end="163:29">s</name><operator pos:start="163:30" pos:end="163:31">-&gt;</operator><name pos:start="163:32" pos:end="163:51">smart_selftest_count</name></name> <operator pos:start="163:53" pos:end="163:53">-</operator> <literal type="number" pos:start="163:55" pos:end="163:55">1</literal><operator pos:start="163:56" pos:end="163:56">)</operator> <operator pos:start="163:58" pos:end="163:58">*</operator>

                           <literal type="number" pos:start="165:28" pos:end="165:29">24</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:33"><expr pos:start="169:9" pos:end="169:32"><name pos:start="169:9" pos:end="169:25"><name pos:start="169:9" pos:end="169:9">s</name><operator pos:start="169:10" pos:end="169:11">-&gt;</operator><name pos:start="169:12" pos:end="169:20">io_buffer</name><index pos:start="169:21" pos:end="169:25">[<expr pos:start="169:22" pos:end="169:24"><literal type="number" pos:start="169:22" pos:end="169:24">364</literal></expr>]</index></name> <operator pos:start="169:27" pos:end="169:27">=</operator> <literal type="number" pos:start="169:29" pos:end="169:32">0x20</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:33"><expr pos:start="171:9" pos:end="171:32"><name pos:start="171:9" pos:end="171:25"><name pos:start="171:9" pos:end="171:9">s</name><operator pos:start="171:10" pos:end="171:11">-&gt;</operator><name pos:start="171:12" pos:end="171:20">io_buffer</name><index pos:start="171:21" pos:end="171:25">[<expr pos:start="171:22" pos:end="171:24"><literal type="number" pos:start="171:22" pos:end="171:24">365</literal></expr>]</index></name> <operator pos:start="171:27" pos:end="171:27">=</operator> <literal type="number" pos:start="171:29" pos:end="171:32">0x01</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="173:9" pos:end="173:66">/* offline data collection capacity: execute + self-test*/</comment>

        <expr_stmt pos:start="175:9" pos:end="175:50"><expr pos:start="175:9" pos:end="175:49"><name pos:start="175:9" pos:end="175:25"><name pos:start="175:9" pos:end="175:9">s</name><operator pos:start="175:10" pos:end="175:11">-&gt;</operator><name pos:start="175:12" pos:end="175:20">io_buffer</name><index pos:start="175:21" pos:end="175:25">[<expr pos:start="175:22" pos:end="175:24"><literal type="number" pos:start="175:22" pos:end="175:24">367</literal></expr>]</index></name> <operator pos:start="175:27" pos:end="175:27">=</operator> <operator pos:start="175:29" pos:end="175:29">(</operator><literal type="number" pos:start="175:30" pos:end="175:30">1</literal> <operator pos:start="175:32" pos:end="175:33">&lt;&lt;</operator> <literal type="number" pos:start="175:35" pos:end="175:35">4</literal> <operator pos:start="175:37" pos:end="175:37">|</operator> <literal type="number" pos:start="175:39" pos:end="175:39">1</literal> <operator pos:start="175:41" pos:end="175:42">&lt;&lt;</operator> <literal type="number" pos:start="175:44" pos:end="175:44">3</literal> <operator pos:start="175:46" pos:end="175:46">|</operator> <literal type="number" pos:start="175:48" pos:end="175:48">1</literal><operator pos:start="175:49" pos:end="175:49">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:33"><expr pos:start="177:9" pos:end="177:32"><name pos:start="177:9" pos:end="177:25"><name pos:start="177:9" pos:end="177:9">s</name><operator pos:start="177:10" pos:end="177:11">-&gt;</operator><name pos:start="177:12" pos:end="177:20">io_buffer</name><index pos:start="177:21" pos:end="177:25">[<expr pos:start="177:22" pos:end="177:24"><literal type="number" pos:start="177:22" pos:end="177:24">368</literal></expr>]</index></name> <operator pos:start="177:27" pos:end="177:27">=</operator> <literal type="number" pos:start="177:29" pos:end="177:32">0x03</literal></expr>;</expr_stmt> <comment type="block" pos:start="177:35" pos:end="177:60">/* smart capability (1) */</comment>

        <expr_stmt pos:start="179:9" pos:end="179:33"><expr pos:start="179:9" pos:end="179:32"><name pos:start="179:9" pos:end="179:25"><name pos:start="179:9" pos:end="179:9">s</name><operator pos:start="179:10" pos:end="179:11">-&gt;</operator><name pos:start="179:12" pos:end="179:20">io_buffer</name><index pos:start="179:21" pos:end="179:25">[<expr pos:start="179:22" pos:end="179:24"><literal type="number" pos:start="179:22" pos:end="179:24">369</literal></expr>]</index></name> <operator pos:start="179:27" pos:end="179:27">=</operator> <literal type="number" pos:start="179:29" pos:end="179:32">0x00</literal></expr>;</expr_stmt> <comment type="block" pos:start="179:35" pos:end="179:60">/* smart capability (2) */</comment>

        <expr_stmt pos:start="181:9" pos:end="181:33"><expr pos:start="181:9" pos:end="181:32"><name pos:start="181:9" pos:end="181:25"><name pos:start="181:9" pos:end="181:9">s</name><operator pos:start="181:10" pos:end="181:11">-&gt;</operator><name pos:start="181:12" pos:end="181:20">io_buffer</name><index pos:start="181:21" pos:end="181:25">[<expr pos:start="181:22" pos:end="181:24"><literal type="number" pos:start="181:22" pos:end="181:24">370</literal></expr>]</index></name> <operator pos:start="181:27" pos:end="181:27">=</operator> <literal type="number" pos:start="181:29" pos:end="181:32">0x01</literal></expr>;</expr_stmt> <comment type="block" pos:start="181:35" pos:end="181:63">/* error logging supported */</comment>

        <expr_stmt pos:start="183:9" pos:end="183:33"><expr pos:start="183:9" pos:end="183:32"><name pos:start="183:9" pos:end="183:25"><name pos:start="183:9" pos:end="183:9">s</name><operator pos:start="183:10" pos:end="183:11">-&gt;</operator><name pos:start="183:12" pos:end="183:20">io_buffer</name><index pos:start="183:21" pos:end="183:25">[<expr pos:start="183:22" pos:end="183:24"><literal type="number" pos:start="183:22" pos:end="183:24">372</literal></expr>]</index></name> <operator pos:start="183:27" pos:end="183:27">=</operator> <literal type="number" pos:start="183:29" pos:end="183:32">0x02</literal></expr>;</expr_stmt> <comment type="block" pos:start="183:35" pos:end="183:67">/* minutes for poll short test */</comment>

        <expr_stmt pos:start="185:9" pos:end="185:33"><expr pos:start="185:9" pos:end="185:32"><name pos:start="185:9" pos:end="185:25"><name pos:start="185:9" pos:end="185:9">s</name><operator pos:start="185:10" pos:end="185:11">-&gt;</operator><name pos:start="185:12" pos:end="185:20">io_buffer</name><index pos:start="185:21" pos:end="185:25">[<expr pos:start="185:22" pos:end="185:24"><literal type="number" pos:start="185:22" pos:end="185:24">373</literal></expr>]</index></name> <operator pos:start="185:27" pos:end="185:27">=</operator> <literal type="number" pos:start="185:29" pos:end="185:32">0x36</literal></expr>;</expr_stmt> <comment type="block" pos:start="185:35" pos:end="185:65">/* minutes for poll ext test */</comment>

        <expr_stmt pos:start="187:9" pos:end="187:33"><expr pos:start="187:9" pos:end="187:32"><name pos:start="187:9" pos:end="187:25"><name pos:start="187:9" pos:end="187:9">s</name><operator pos:start="187:10" pos:end="187:11">-&gt;</operator><name pos:start="187:12" pos:end="187:20">io_buffer</name><index pos:start="187:21" pos:end="187:25">[<expr pos:start="187:22" pos:end="187:24"><literal type="number" pos:start="187:22" pos:end="187:24">374</literal></expr>]</index></name> <operator pos:start="187:27" pos:end="187:27">=</operator> <literal type="number" pos:start="187:29" pos:end="187:32">0x01</literal></expr>;</expr_stmt> <comment type="block" pos:start="187:35" pos:end="187:67">/* minutes for poll conveyance */</comment>



        <for pos:start="191:9" pos:end="195:9">for <control pos:start="191:13" pos:end="191:33">(<init pos:start="191:14" pos:end="191:19"><expr pos:start="191:14" pos:end="191:18"><name pos:start="191:14" pos:end="191:14">n</name> <operator pos:start="191:16" pos:end="191:16">=</operator> <literal type="number" pos:start="191:18" pos:end="191:18">0</literal></expr>;</init> <condition pos:start="191:21" pos:end="191:28"><expr pos:start="191:21" pos:end="191:27"><name pos:start="191:21" pos:end="191:21">n</name> <operator pos:start="191:23" pos:end="191:23">&lt;</operator> <literal type="number" pos:start="191:25" pos:end="191:27">511</literal></expr>;</condition> <incr pos:start="191:30" pos:end="191:32"><expr pos:start="191:30" pos:end="191:32"><name pos:start="191:30" pos:end="191:30">n</name><operator pos:start="191:31" pos:end="191:32">++</operator></expr></incr>)</control> <block pos:start="191:35" pos:end="195:9">{<block_content pos:start="193:13" pos:end="193:49">

            <expr_stmt pos:start="193:13" pos:end="193:49"><expr pos:start="193:13" pos:end="193:48"><name pos:start="193:13" pos:end="193:29"><name pos:start="193:13" pos:end="193:13">s</name><operator pos:start="193:14" pos:end="193:15">-&gt;</operator><name pos:start="193:16" pos:end="193:24">io_buffer</name><index pos:start="193:25" pos:end="193:29">[<expr pos:start="193:26" pos:end="193:28"><literal type="number" pos:start="193:26" pos:end="193:28">511</literal></expr>]</index></name> <operator pos:start="193:31" pos:end="193:32">+=</operator> <name pos:start="193:34" pos:end="193:48"><name pos:start="193:34" pos:end="193:34">s</name><operator pos:start="193:35" pos:end="193:36">-&gt;</operator><name pos:start="193:37" pos:end="193:45">io_buffer</name><index pos:start="193:46" pos:end="193:48">[<expr pos:start="193:47" pos:end="193:47"><name pos:start="193:47" pos:end="193:47">n</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="197:9" pos:end="197:54"><expr pos:start="197:9" pos:end="197:53"><name pos:start="197:9" pos:end="197:25"><name pos:start="197:9" pos:end="197:9">s</name><operator pos:start="197:10" pos:end="197:11">-&gt;</operator><name pos:start="197:12" pos:end="197:20">io_buffer</name><index pos:start="197:21" pos:end="197:25">[<expr pos:start="197:22" pos:end="197:24"><literal type="number" pos:start="197:22" pos:end="197:24">511</literal></expr>]</index></name> <operator pos:start="197:27" pos:end="197:27">=</operator> <literal type="number" pos:start="197:29" pos:end="197:35">0x100</literal> <operator pos:start="197:35" pos:end="197:35">-</operator> <name pos:start="197:37" pos:end="197:53"><name pos:start="197:37" pos:end="197:37">s</name><operator pos:start="197:38" pos:end="197:39">-&gt;</operator><name pos:start="197:40" pos:end="197:48">io_buffer</name><index pos:start="197:49" pos:end="197:53">[<expr pos:start="197:50" pos:end="197:52"><literal type="number" pos:start="197:50" pos:end="197:52">511</literal></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="201:9" pos:end="201:43"><expr pos:start="201:9" pos:end="201:42"><name pos:start="201:9" pos:end="201:17"><name pos:start="201:9" pos:end="201:9">s</name><operator pos:start="201:10" pos:end="201:11">-&gt;</operator><name pos:start="201:12" pos:end="201:17">status</name></name> <operator pos:start="201:19" pos:end="201:19">=</operator> <name pos:start="201:21" pos:end="201:30">READY_STAT</name> <operator pos:start="201:32" pos:end="201:32">|</operator> <name pos:start="201:34" pos:end="201:42">SEEK_STAT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="203:9" pos:end="203:70"><expr pos:start="203:9" pos:end="203:69"><call pos:start="203:9" pos:end="203:69"><name pos:start="203:9" pos:end="203:26">ide_transfer_start</name><argument_list pos:start="203:27" pos:end="203:69">(<argument pos:start="203:28" pos:end="203:28"><expr pos:start="203:28" pos:end="203:28"><name pos:start="203:28" pos:end="203:28">s</name></expr></argument>, <argument pos:start="203:31" pos:end="203:42"><expr pos:start="203:31" pos:end="203:42"><name pos:start="203:31" pos:end="203:42"><name pos:start="203:31" pos:end="203:31">s</name><operator pos:start="203:32" pos:end="203:33">-&gt;</operator><name pos:start="203:34" pos:end="203:42">io_buffer</name></name></expr></argument>, <argument pos:start="203:45" pos:end="203:49"><expr pos:start="203:45" pos:end="203:49"><literal type="number" pos:start="203:45" pos:end="203:49">0x200</literal></expr></argument>, <argument pos:start="203:52" pos:end="203:68"><expr pos:start="203:52" pos:end="203:68"><name pos:start="203:52" pos:end="203:68">ide_transfer_stop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="205:9" pos:end="205:28"><expr pos:start="205:9" pos:end="205:27"><call pos:start="205:9" pos:end="205:27"><name pos:start="205:9" pos:end="205:19">ide_set_irq</name><argument_list pos:start="205:20" pos:end="205:27">(<argument pos:start="205:21" pos:end="205:26"><expr pos:start="205:21" pos:end="205:26"><name pos:start="205:21" pos:end="205:26"><name pos:start="205:21" pos:end="205:21">s</name><operator pos:start="205:22" pos:end="205:23">-&gt;</operator><name pos:start="205:24" pos:end="205:26">bus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="207:9" pos:end="207:21">return <expr pos:start="207:16" pos:end="207:20"><name pos:start="207:16" pos:end="207:20">false</name></expr>;</return>



    <case pos:start="211:5" pos:end="211:24">case <expr pos:start="211:10" pos:end="211:23"><name pos:start="211:10" pos:end="211:23">SMART_READ_LOG</name></expr>:</case>

        <switch pos:start="213:9" pos:end="277:9">switch <condition pos:start="213:16" pos:end="213:26">(<expr pos:start="213:17" pos:end="213:25"><name pos:start="213:17" pos:end="213:25"><name pos:start="213:17" pos:end="213:17">s</name><operator pos:start="213:18" pos:end="213:19">-&gt;</operator><name pos:start="213:20" pos:end="213:25">sector</name></name></expr>)</condition> <block pos:start="213:28" pos:end="277:9">{<block_content pos:start="215:9" pos:end="275:27">

        <case pos:start="215:9" pos:end="215:18">case <expr pos:start="215:14" pos:end="215:17"><literal type="number" pos:start="215:14" pos:end="215:17">0x01</literal></expr>:</case> <comment type="block" pos:start="215:20" pos:end="215:48">/* summary smart error log */</comment>

            <expr_stmt pos:start="217:13" pos:end="217:43"><expr pos:start="217:13" pos:end="217:42"><call pos:start="217:13" pos:end="217:42"><name pos:start="217:13" pos:end="217:18">memset</name><argument_list pos:start="217:19" pos:end="217:42">(<argument pos:start="217:20" pos:end="217:31"><expr pos:start="217:20" pos:end="217:31"><name pos:start="217:20" pos:end="217:31"><name pos:start="217:20" pos:end="217:20">s</name><operator pos:start="217:21" pos:end="217:22">-&gt;</operator><name pos:start="217:23" pos:end="217:31">io_buffer</name></name></expr></argument>, <argument pos:start="217:34" pos:end="217:34"><expr pos:start="217:34" pos:end="217:34"><literal type="number" pos:start="217:34" pos:end="217:34">0</literal></expr></argument>, <argument pos:start="217:37" pos:end="217:41"><expr pos:start="217:37" pos:end="217:41"><literal type="number" pos:start="217:37" pos:end="217:41">0x200</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="219:13" pos:end="219:35"><expr pos:start="219:13" pos:end="219:34"><name pos:start="219:13" pos:end="219:27"><name pos:start="219:13" pos:end="219:13">s</name><operator pos:start="219:14" pos:end="219:15">-&gt;</operator><name pos:start="219:16" pos:end="219:24">io_buffer</name><index pos:start="219:25" pos:end="219:27">[<expr pos:start="219:26" pos:end="219:26"><literal type="number" pos:start="219:26" pos:end="219:26">0</literal></expr>]</index></name> <operator pos:start="219:29" pos:end="219:29">=</operator> <literal type="number" pos:start="219:31" pos:end="219:34">0x01</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="221:13" pos:end="221:35"><expr pos:start="221:13" pos:end="221:34"><name pos:start="221:13" pos:end="221:27"><name pos:start="221:13" pos:end="221:13">s</name><operator pos:start="221:14" pos:end="221:15">-&gt;</operator><name pos:start="221:16" pos:end="221:24">io_buffer</name><index pos:start="221:25" pos:end="221:27">[<expr pos:start="221:26" pos:end="221:26"><literal type="number" pos:start="221:26" pos:end="221:26">1</literal></expr>]</index></name> <operator pos:start="221:29" pos:end="221:29">=</operator> <literal type="number" pos:start="221:31" pos:end="221:34">0x00</literal></expr>;</expr_stmt> <comment type="block" pos:start="221:37" pos:end="221:58">/* no error entries */</comment>

            <expr_stmt pos:start="223:13" pos:end="223:55"><expr pos:start="223:13" pos:end="223:54"><name pos:start="223:13" pos:end="223:29"><name pos:start="223:13" pos:end="223:13">s</name><operator pos:start="223:14" pos:end="223:15">-&gt;</operator><name pos:start="223:16" pos:end="223:24">io_buffer</name><index pos:start="223:25" pos:end="223:29">[<expr pos:start="223:26" pos:end="223:28"><literal type="number" pos:start="223:26" pos:end="223:28">452</literal></expr>]</index></name> <operator pos:start="223:31" pos:end="223:31">=</operator> <name pos:start="223:33" pos:end="223:47"><name pos:start="223:33" pos:end="223:33">s</name><operator pos:start="223:34" pos:end="223:35">-&gt;</operator><name pos:start="223:36" pos:end="223:47">smart_errors</name></name> <operator pos:start="223:49" pos:end="223:49">&amp;</operator> <literal type="number" pos:start="223:51" pos:end="223:54">0xff</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="225:13" pos:end="225:64"><expr pos:start="225:13" pos:end="225:63"><name pos:start="225:13" pos:end="225:29"><name pos:start="225:13" pos:end="225:13">s</name><operator pos:start="225:14" pos:end="225:15">-&gt;</operator><name pos:start="225:16" pos:end="225:24">io_buffer</name><index pos:start="225:25" pos:end="225:29">[<expr pos:start="225:26" pos:end="225:28"><literal type="number" pos:start="225:26" pos:end="225:28">453</literal></expr>]</index></name> <operator pos:start="225:31" pos:end="225:31">=</operator> <operator pos:start="225:33" pos:end="225:33">(</operator><name pos:start="225:34" pos:end="225:48"><name pos:start="225:34" pos:end="225:34">s</name><operator pos:start="225:35" pos:end="225:36">-&gt;</operator><name pos:start="225:37" pos:end="225:48">smart_errors</name></name> <operator pos:start="225:50" pos:end="225:50">&amp;</operator> <literal type="number" pos:start="225:52" pos:end="225:57">0xff00</literal><operator pos:start="225:58" pos:end="225:58">)</operator> <operator pos:start="225:60" pos:end="225:61">&gt;&gt;</operator> <literal type="number" pos:start="225:63" pos:end="225:63">8</literal></expr>;</expr_stmt>



            <for pos:start="229:13" pos:end="233:13">for <control pos:start="229:17" pos:end="229:37">(<init pos:start="229:18" pos:end="229:23"><expr pos:start="229:18" pos:end="229:22"><name pos:start="229:18" pos:end="229:18">n</name> <operator pos:start="229:20" pos:end="229:20">=</operator> <literal type="number" pos:start="229:22" pos:end="229:22">0</literal></expr>;</init> <condition pos:start="229:25" pos:end="229:32"><expr pos:start="229:25" pos:end="229:31"><name pos:start="229:25" pos:end="229:25">n</name> <operator pos:start="229:27" pos:end="229:27">&lt;</operator> <literal type="number" pos:start="229:29" pos:end="229:31">511</literal></expr>;</condition> <incr pos:start="229:34" pos:end="229:36"><expr pos:start="229:34" pos:end="229:36"><name pos:start="229:34" pos:end="229:34">n</name><operator pos:start="229:35" pos:end="229:36">++</operator></expr></incr>)</control> <block pos:start="229:39" pos:end="233:13">{<block_content pos:start="231:17" pos:end="231:53">

                <expr_stmt pos:start="231:17" pos:end="231:53"><expr pos:start="231:17" pos:end="231:52"><name pos:start="231:17" pos:end="231:33"><name pos:start="231:17" pos:end="231:17">s</name><operator pos:start="231:18" pos:end="231:19">-&gt;</operator><name pos:start="231:20" pos:end="231:28">io_buffer</name><index pos:start="231:29" pos:end="231:33">[<expr pos:start="231:30" pos:end="231:32"><literal type="number" pos:start="231:30" pos:end="231:32">511</literal></expr>]</index></name> <operator pos:start="231:35" pos:end="231:36">+=</operator> <name pos:start="231:38" pos:end="231:52"><name pos:start="231:38" pos:end="231:38">s</name><operator pos:start="231:39" pos:end="231:40">-&gt;</operator><name pos:start="231:41" pos:end="231:49">io_buffer</name><index pos:start="231:50" pos:end="231:52">[<expr pos:start="231:51" pos:end="231:51"><name pos:start="231:51" pos:end="231:51">n</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="235:13" pos:end="235:58"><expr pos:start="235:13" pos:end="235:57"><name pos:start="235:13" pos:end="235:29"><name pos:start="235:13" pos:end="235:13">s</name><operator pos:start="235:14" pos:end="235:15">-&gt;</operator><name pos:start="235:16" pos:end="235:24">io_buffer</name><index pos:start="235:25" pos:end="235:29">[<expr pos:start="235:26" pos:end="235:28"><literal type="number" pos:start="235:26" pos:end="235:28">511</literal></expr>]</index></name> <operator pos:start="235:31" pos:end="235:31">=</operator> <literal type="number" pos:start="235:33" pos:end="235:39">0x100</literal> <operator pos:start="235:39" pos:end="235:39">-</operator> <name pos:start="235:41" pos:end="235:57"><name pos:start="235:41" pos:end="235:41">s</name><operator pos:start="235:42" pos:end="235:43">-&gt;</operator><name pos:start="235:44" pos:end="235:52">io_buffer</name><index pos:start="235:53" pos:end="235:57">[<expr pos:start="235:54" pos:end="235:56"><literal type="number" pos:start="235:54" pos:end="235:56">511</literal></expr>]</index></name></expr>;</expr_stmt>

            <break pos:start="237:13" pos:end="237:18">break;</break>

        <case pos:start="239:9" pos:end="239:18">case <expr pos:start="239:14" pos:end="239:17"><literal type="number" pos:start="239:14" pos:end="239:17">0x06</literal></expr>:</case> <comment type="block" pos:start="239:20" pos:end="239:44">/* smart self test log */</comment>

            <expr_stmt pos:start="241:13" pos:end="241:43"><expr pos:start="241:13" pos:end="241:42"><call pos:start="241:13" pos:end="241:42"><name pos:start="241:13" pos:end="241:18">memset</name><argument_list pos:start="241:19" pos:end="241:42">(<argument pos:start="241:20" pos:end="241:31"><expr pos:start="241:20" pos:end="241:31"><name pos:start="241:20" pos:end="241:31"><name pos:start="241:20" pos:end="241:20">s</name><operator pos:start="241:21" pos:end="241:22">-&gt;</operator><name pos:start="241:23" pos:end="241:31">io_buffer</name></name></expr></argument>, <argument pos:start="241:34" pos:end="241:34"><expr pos:start="241:34" pos:end="241:34"><literal type="number" pos:start="241:34" pos:end="241:34">0</literal></expr></argument>, <argument pos:start="241:37" pos:end="241:41"><expr pos:start="241:37" pos:end="241:41"><literal type="number" pos:start="241:37" pos:end="241:41">0x200</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="243:13" pos:end="243:35"><expr pos:start="243:13" pos:end="243:34"><name pos:start="243:13" pos:end="243:27"><name pos:start="243:13" pos:end="243:13">s</name><operator pos:start="243:14" pos:end="243:15">-&gt;</operator><name pos:start="243:16" pos:end="243:24">io_buffer</name><index pos:start="243:25" pos:end="243:27">[<expr pos:start="243:26" pos:end="243:26"><literal type="number" pos:start="243:26" pos:end="243:26">0</literal></expr>]</index></name> <operator pos:start="243:29" pos:end="243:29">=</operator> <literal type="number" pos:start="243:31" pos:end="243:34">0x01</literal></expr>;</expr_stmt>

            <if_stmt pos:start="245:13" pos:end="259:13"><if pos:start="245:13" pos:end="249:13">if <condition pos:start="245:16" pos:end="245:45">(<expr pos:start="245:17" pos:end="245:44"><name pos:start="245:17" pos:end="245:39"><name pos:start="245:17" pos:end="245:17">s</name><operator pos:start="245:18" pos:end="245:19">-&gt;</operator><name pos:start="245:20" pos:end="245:39">smart_selftest_count</name></name> <operator pos:start="245:41" pos:end="245:42">==</operator> <literal type="number" pos:start="245:44" pos:end="245:44">0</literal></expr>)</condition> <block pos:start="245:47" pos:end="249:13">{<block_content pos:start="247:17" pos:end="247:38">

                <expr_stmt pos:start="247:17" pos:end="247:38"><expr pos:start="247:17" pos:end="247:37"><name pos:start="247:17" pos:end="247:33"><name pos:start="247:17" pos:end="247:17">s</name><operator pos:start="247:18" pos:end="247:19">-&gt;</operator><name pos:start="247:20" pos:end="247:28">io_buffer</name><index pos:start="247:29" pos:end="247:33">[<expr pos:start="247:30" pos:end="247:32"><literal type="number" pos:start="247:30" pos:end="247:32">508</literal></expr>]</index></name> <operator pos:start="247:35" pos:end="247:35">=</operator> <literal type="number" pos:start="247:37" pos:end="247:37">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="249:15" pos:end="259:13">else <block pos:start="249:20" pos:end="259:13">{<block_content pos:start="251:17" pos:end="257:17">

                <expr_stmt pos:start="251:17" pos:end="251:60"><expr pos:start="251:17" pos:end="251:59"><name pos:start="251:17" pos:end="251:33"><name pos:start="251:17" pos:end="251:17">s</name><operator pos:start="251:18" pos:end="251:19">-&gt;</operator><name pos:start="251:20" pos:end="251:28">io_buffer</name><index pos:start="251:29" pos:end="251:33">[<expr pos:start="251:30" pos:end="251:32"><literal type="number" pos:start="251:30" pos:end="251:32">508</literal></expr>]</index></name> <operator pos:start="251:35" pos:end="251:35">=</operator> <name pos:start="251:37" pos:end="251:59"><name pos:start="251:37" pos:end="251:37">s</name><operator pos:start="251:38" pos:end="251:39">-&gt;</operator><name pos:start="251:40" pos:end="251:59">smart_selftest_count</name></name></expr>;</expr_stmt>

                <for pos:start="253:17" pos:end="257:17">for <control pos:start="253:21" pos:end="253:41">(<init pos:start="253:22" pos:end="253:27"><expr pos:start="253:22" pos:end="253:26"><name pos:start="253:22" pos:end="253:22">n</name> <operator pos:start="253:24" pos:end="253:24">=</operator> <literal type="number" pos:start="253:26" pos:end="253:26">2</literal></expr>;</init> <condition pos:start="253:29" pos:end="253:36"><expr pos:start="253:29" pos:end="253:35"><name pos:start="253:29" pos:end="253:29">n</name> <operator pos:start="253:31" pos:end="253:31">&lt;</operator> <literal type="number" pos:start="253:33" pos:end="253:35">506</literal></expr>;</condition> <incr pos:start="253:38" pos:end="253:40"><expr pos:start="253:38" pos:end="253:40"><name pos:start="253:38" pos:end="253:38">n</name><operator pos:start="253:39" pos:end="253:40">++</operator></expr></incr>)</control>  <block pos:start="253:44" pos:end="257:17">{<block_content pos:start="255:21" pos:end="255:64">

                    <expr_stmt pos:start="255:21" pos:end="255:64"><expr pos:start="255:21" pos:end="255:63"><name pos:start="255:21" pos:end="255:35"><name pos:start="255:21" pos:end="255:21">s</name><operator pos:start="255:22" pos:end="255:23">-&gt;</operator><name pos:start="255:24" pos:end="255:32">io_buffer</name><index pos:start="255:33" pos:end="255:35">[<expr pos:start="255:34" pos:end="255:34"><name pos:start="255:34" pos:end="255:34">n</name></expr>]</index></name> <operator pos:start="255:37" pos:end="255:37">=</operator> <name pos:start="255:39" pos:end="255:63"><name pos:start="255:39" pos:end="255:39">s</name><operator pos:start="255:40" pos:end="255:41">-&gt;</operator><name pos:start="255:42" pos:end="255:60">smart_selftest_data</name><index pos:start="255:61" pos:end="255:63">[<expr pos:start="255:62" pos:end="255:62"><name pos:start="255:62" pos:end="255:62">n</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>



            <for pos:start="263:13" pos:end="267:13">for <control pos:start="263:17" pos:end="263:37">(<init pos:start="263:18" pos:end="263:23"><expr pos:start="263:18" pos:end="263:22"><name pos:start="263:18" pos:end="263:18">n</name> <operator pos:start="263:20" pos:end="263:20">=</operator> <literal type="number" pos:start="263:22" pos:end="263:22">0</literal></expr>;</init> <condition pos:start="263:25" pos:end="263:32"><expr pos:start="263:25" pos:end="263:31"><name pos:start="263:25" pos:end="263:25">n</name> <operator pos:start="263:27" pos:end="263:27">&lt;</operator> <literal type="number" pos:start="263:29" pos:end="263:31">511</literal></expr>;</condition> <incr pos:start="263:34" pos:end="263:36"><expr pos:start="263:34" pos:end="263:36"><name pos:start="263:34" pos:end="263:34">n</name><operator pos:start="263:35" pos:end="263:36">++</operator></expr></incr>)</control> <block pos:start="263:39" pos:end="267:13">{<block_content pos:start="265:17" pos:end="265:53">

                <expr_stmt pos:start="265:17" pos:end="265:53"><expr pos:start="265:17" pos:end="265:52"><name pos:start="265:17" pos:end="265:33"><name pos:start="265:17" pos:end="265:17">s</name><operator pos:start="265:18" pos:end="265:19">-&gt;</operator><name pos:start="265:20" pos:end="265:28">io_buffer</name><index pos:start="265:29" pos:end="265:33">[<expr pos:start="265:30" pos:end="265:32"><literal type="number" pos:start="265:30" pos:end="265:32">511</literal></expr>]</index></name> <operator pos:start="265:35" pos:end="265:36">+=</operator> <name pos:start="265:38" pos:end="265:52"><name pos:start="265:38" pos:end="265:38">s</name><operator pos:start="265:39" pos:end="265:40">-&gt;</operator><name pos:start="265:41" pos:end="265:49">io_buffer</name><index pos:start="265:50" pos:end="265:52">[<expr pos:start="265:51" pos:end="265:51"><name pos:start="265:51" pos:end="265:51">n</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="269:13" pos:end="269:58"><expr pos:start="269:13" pos:end="269:57"><name pos:start="269:13" pos:end="269:29"><name pos:start="269:13" pos:end="269:13">s</name><operator pos:start="269:14" pos:end="269:15">-&gt;</operator><name pos:start="269:16" pos:end="269:24">io_buffer</name><index pos:start="269:25" pos:end="269:29">[<expr pos:start="269:26" pos:end="269:28"><literal type="number" pos:start="269:26" pos:end="269:28">511</literal></expr>]</index></name> <operator pos:start="269:31" pos:end="269:31">=</operator> <literal type="number" pos:start="269:33" pos:end="269:39">0x100</literal> <operator pos:start="269:39" pos:end="269:39">-</operator> <name pos:start="269:41" pos:end="269:57"><name pos:start="269:41" pos:end="269:41">s</name><operator pos:start="269:42" pos:end="269:43">-&gt;</operator><name pos:start="269:44" pos:end="269:52">io_buffer</name><index pos:start="269:53" pos:end="269:57">[<expr pos:start="269:54" pos:end="269:56"><literal type="number" pos:start="269:54" pos:end="269:56">511</literal></expr>]</index></name></expr>;</expr_stmt>

            <break pos:start="271:13" pos:end="271:18">break;</break>

        <default pos:start="273:9" pos:end="273:16">default:</default>

            <goto pos:start="275:13" pos:end="275:27">goto <name pos:start="275:18" pos:end="275:26">abort_cmd</name>;</goto>

        </block_content>}</block></switch>

        <expr_stmt pos:start="279:9" pos:end="279:43"><expr pos:start="279:9" pos:end="279:42"><name pos:start="279:9" pos:end="279:17"><name pos:start="279:9" pos:end="279:9">s</name><operator pos:start="279:10" pos:end="279:11">-&gt;</operator><name pos:start="279:12" pos:end="279:17">status</name></name> <operator pos:start="279:19" pos:end="279:19">=</operator> <name pos:start="279:21" pos:end="279:30">READY_STAT</name> <operator pos:start="279:32" pos:end="279:32">|</operator> <name pos:start="279:34" pos:end="279:42">SEEK_STAT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="281:9" pos:end="281:70"><expr pos:start="281:9" pos:end="281:69"><call pos:start="281:9" pos:end="281:69"><name pos:start="281:9" pos:end="281:26">ide_transfer_start</name><argument_list pos:start="281:27" pos:end="281:69">(<argument pos:start="281:28" pos:end="281:28"><expr pos:start="281:28" pos:end="281:28"><name pos:start="281:28" pos:end="281:28">s</name></expr></argument>, <argument pos:start="281:31" pos:end="281:42"><expr pos:start="281:31" pos:end="281:42"><name pos:start="281:31" pos:end="281:42"><name pos:start="281:31" pos:end="281:31">s</name><operator pos:start="281:32" pos:end="281:33">-&gt;</operator><name pos:start="281:34" pos:end="281:42">io_buffer</name></name></expr></argument>, <argument pos:start="281:45" pos:end="281:49"><expr pos:start="281:45" pos:end="281:49"><literal type="number" pos:start="281:45" pos:end="281:49">0x200</literal></expr></argument>, <argument pos:start="281:52" pos:end="281:68"><expr pos:start="281:52" pos:end="281:68"><name pos:start="281:52" pos:end="281:68">ide_transfer_stop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="283:9" pos:end="283:28"><expr pos:start="283:9" pos:end="283:27"><call pos:start="283:9" pos:end="283:27"><name pos:start="283:9" pos:end="283:19">ide_set_irq</name><argument_list pos:start="283:20" pos:end="283:27">(<argument pos:start="283:21" pos:end="283:26"><expr pos:start="283:21" pos:end="283:26"><name pos:start="283:21" pos:end="283:26"><name pos:start="283:21" pos:end="283:21">s</name><operator pos:start="283:22" pos:end="283:23">-&gt;</operator><name pos:start="283:24" pos:end="283:26">bus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="285:9" pos:end="285:21">return <expr pos:start="285:16" pos:end="285:20"><name pos:start="285:16" pos:end="285:20">false</name></expr>;</return>



    <case pos:start="289:5" pos:end="289:31">case <expr pos:start="289:10" pos:end="289:30"><name pos:start="289:10" pos:end="289:30">SMART_EXECUTE_OFFLINE</name></expr>:</case>

        <switch pos:start="291:9" pos:end="323:9">switch <condition pos:start="291:16" pos:end="291:26">(<expr pos:start="291:17" pos:end="291:25"><name pos:start="291:17" pos:end="291:25"><name pos:start="291:17" pos:end="291:17">s</name><operator pos:start="291:18" pos:end="291:19">-&gt;</operator><name pos:start="291:20" pos:end="291:25">sector</name></name></expr>)</condition> <block pos:start="291:28" pos:end="323:9">{<block_content pos:start="293:9" pos:end="321:27">

        <case pos:start="293:9" pos:end="293:15">case <expr pos:start="293:14" pos:end="293:14"><literal type="number" pos:start="293:14" pos:end="293:14">0</literal></expr>:</case> <comment type="block" pos:start="293:17" pos:end="293:38">/* off-line routine */</comment>

        <case pos:start="295:9" pos:end="295:15">case <expr pos:start="295:14" pos:end="295:14"><literal type="number" pos:start="295:14" pos:end="295:14">1</literal></expr>:</case> <comment type="block" pos:start="295:17" pos:end="295:37">/* short self test */</comment>

        <case pos:start="297:9" pos:end="297:15">case <expr pos:start="297:14" pos:end="297:14"><literal type="number" pos:start="297:14" pos:end="297:14">2</literal></expr>:</case> <comment type="block" pos:start="297:17" pos:end="297:40">/* extended self test */</comment>

            <expr_stmt pos:start="299:13" pos:end="299:38"><expr pos:start="299:13" pos:end="299:37"><name pos:start="299:13" pos:end="299:35"><name pos:start="299:13" pos:end="299:13">s</name><operator pos:start="299:14" pos:end="299:15">-&gt;</operator><name pos:start="299:16" pos:end="299:35">smart_selftest_count</name></name><operator pos:start="299:36" pos:end="299:37">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="301:13" pos:end="305:13"><if pos:start="301:13" pos:end="305:13">if <condition pos:start="301:16" pos:end="301:45">(<expr pos:start="301:17" pos:end="301:44"><name pos:start="301:17" pos:end="301:39"><name pos:start="301:17" pos:end="301:17">s</name><operator pos:start="301:18" pos:end="301:19">-&gt;</operator><name pos:start="301:20" pos:end="301:39">smart_selftest_count</name></name> <operator pos:start="301:41" pos:end="301:41">&gt;</operator> <literal type="number" pos:start="301:43" pos:end="301:44">21</literal></expr>)</condition> <block pos:start="301:47" pos:end="305:13">{<block_content pos:start="303:17" pos:end="303:44">

                <expr_stmt pos:start="303:17" pos:end="303:44"><expr pos:start="303:17" pos:end="303:43"><name pos:start="303:17" pos:end="303:39"><name pos:start="303:17" pos:end="303:17">s</name><operator pos:start="303:18" pos:end="303:19">-&gt;</operator><name pos:start="303:20" pos:end="303:39">smart_selftest_count</name></name> <operator pos:start="303:41" pos:end="303:41">=</operator> <literal type="number" pos:start="303:43" pos:end="303:43">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="307:13" pos:end="307:55"><expr pos:start="307:13" pos:end="307:54"><name pos:start="307:13" pos:end="307:13">n</name> <operator pos:start="307:15" pos:end="307:15">=</operator> <literal type="number" pos:start="307:17" pos:end="307:19">2</literal> <operator pos:start="307:19" pos:end="307:19">+</operator> <operator pos:start="307:21" pos:end="307:21">(</operator><name pos:start="307:22" pos:end="307:44"><name pos:start="307:22" pos:end="307:22">s</name><operator pos:start="307:23" pos:end="307:24">-&gt;</operator><name pos:start="307:25" pos:end="307:44">smart_selftest_count</name></name> <operator pos:start="307:46" pos:end="307:46">-</operator> <literal type="number" pos:start="307:48" pos:end="307:48">1</literal><operator pos:start="307:49" pos:end="307:49">)</operator> <operator pos:start="307:51" pos:end="307:51">*</operator> <literal type="number" pos:start="307:53" pos:end="307:54">24</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="309:13" pos:end="309:50"><expr pos:start="309:13" pos:end="309:49"><name pos:start="309:13" pos:end="309:37"><name pos:start="309:13" pos:end="309:13">s</name><operator pos:start="309:14" pos:end="309:15">-&gt;</operator><name pos:start="309:16" pos:end="309:34">smart_selftest_data</name><index pos:start="309:35" pos:end="309:37">[<expr pos:start="309:36" pos:end="309:36"><name pos:start="309:36" pos:end="309:36">n</name></expr>]</index></name> <operator pos:start="309:39" pos:end="309:39">=</operator> <name pos:start="309:41" pos:end="309:49"><name pos:start="309:41" pos:end="309:41">s</name><operator pos:start="309:42" pos:end="309:43">-&gt;</operator><name pos:start="309:44" pos:end="309:49">sector</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="311:13" pos:end="311:49"><expr pos:start="311:13" pos:end="311:48"><name pos:start="311:13" pos:end="311:41"><name pos:start="311:13" pos:end="311:13">s</name><operator pos:start="311:14" pos:end="311:15">-&gt;</operator><name pos:start="311:16" pos:end="311:34">smart_selftest_data</name><index pos:start="311:35" pos:end="311:41">[<expr pos:start="311:36" pos:end="311:40"><name pos:start="311:36" pos:end="311:36">n</name> <operator pos:start="311:38" pos:end="311:38">+</operator> <literal type="number" pos:start="311:40" pos:end="311:40">1</literal></expr>]</index></name> <operator pos:start="311:43" pos:end="311:43">=</operator> <literal type="number" pos:start="311:45" pos:end="311:48">0x00</literal></expr>;</expr_stmt> <comment type="block" pos:start="311:51" pos:end="311:71">/* OK and finished */</comment>

            <expr_stmt pos:start="313:13" pos:end="313:49"><expr pos:start="313:13" pos:end="313:48"><name pos:start="313:13" pos:end="313:41"><name pos:start="313:13" pos:end="313:13">s</name><operator pos:start="313:14" pos:end="313:15">-&gt;</operator><name pos:start="313:16" pos:end="313:34">smart_selftest_data</name><index pos:start="313:35" pos:end="313:41">[<expr pos:start="313:36" pos:end="313:40"><name pos:start="313:36" pos:end="313:36">n</name> <operator pos:start="313:38" pos:end="313:38">+</operator> <literal type="number" pos:start="313:40" pos:end="313:40">2</literal></expr>]</index></name> <operator pos:start="313:43" pos:end="313:43">=</operator> <literal type="number" pos:start="313:45" pos:end="313:48">0x34</literal></expr>;</expr_stmt> <comment type="block" pos:start="313:51" pos:end="313:70">/* hour count lsb */</comment>

            <expr_stmt pos:start="315:13" pos:end="315:49"><expr pos:start="315:13" pos:end="315:48"><name pos:start="315:13" pos:end="315:41"><name pos:start="315:13" pos:end="315:13">s</name><operator pos:start="315:14" pos:end="315:15">-&gt;</operator><name pos:start="315:16" pos:end="315:34">smart_selftest_data</name><index pos:start="315:35" pos:end="315:41">[<expr pos:start="315:36" pos:end="315:40"><name pos:start="315:36" pos:end="315:36">n</name> <operator pos:start="315:38" pos:end="315:38">+</operator> <literal type="number" pos:start="315:40" pos:end="315:40">3</literal></expr>]</index></name> <operator pos:start="315:43" pos:end="315:43">=</operator> <literal type="number" pos:start="315:45" pos:end="315:48">0x12</literal></expr>;</expr_stmt> <comment type="block" pos:start="315:51" pos:end="315:70">/* hour count msb */</comment>

            <break pos:start="317:13" pos:end="317:18">break;</break>

        <default pos:start="319:9" pos:end="319:16">default:</default>

            <goto pos:start="321:13" pos:end="321:27">goto <name pos:start="321:18" pos:end="321:26">abort_cmd</name>;</goto>

        </block_content>}</block></switch>

        <return pos:start="325:9" pos:end="325:20">return <expr pos:start="325:16" pos:end="325:19"><name pos:start="325:16" pos:end="325:19">true</name></expr>;</return>

    </block_content>}</block></switch>



<label pos:start="331:1" pos:end="331:10"><name pos:start="331:1" pos:end="331:9">abort_cmd</name>:</label>

    <expr_stmt pos:start="333:5" pos:end="333:25"><expr pos:start="333:5" pos:end="333:24"><call pos:start="333:5" pos:end="333:24"><name pos:start="333:5" pos:end="333:21">ide_abort_command</name><argument_list pos:start="333:22" pos:end="333:24">(<argument pos:start="333:23" pos:end="333:23"><expr pos:start="333:23" pos:end="333:23"><name pos:start="333:23" pos:end="333:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="335:5" pos:end="335:16">return <expr pos:start="335:12" pos:end="335:15"><name pos:start="335:12" pos:end="335:15">true</name></expr>;</return>

</block_content>}</block></function>
</unit>
