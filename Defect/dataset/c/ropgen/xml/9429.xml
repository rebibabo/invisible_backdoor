<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9429.c" pos:tabs="8"><function pos:start="1:1" pos:end="187:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:25">ff_sws_alphablendaway</name><parameter_list pos:start="1:26" pos:end="5:58">(<parameter pos:start="1:27" pos:end="1:39"><decl pos:start="1:27" pos:end="1:39"><type pos:start="1:27" pos:end="1:39"><name pos:start="1:27" pos:end="1:36">SwsContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">c</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:61"><decl pos:start="1:42" pos:end="1:61"><type pos:start="1:42" pos:end="1:59"><specifier pos:start="1:42" pos:end="1:46">const</specifier> <name pos:start="1:48" pos:end="1:54">uint8_t</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:61"><name pos:start="1:57" pos:end="1:59">src</name><index pos:start="1:60" pos:end="1:61">[]</index></name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:41"><decl pos:start="3:27" pos:end="3:41"><type pos:start="3:27" pos:end="3:39"><name pos:start="3:27" pos:end="3:29">int</name></type> <name pos:start="3:31" pos:end="3:41"><name pos:start="3:31" pos:end="3:39">srcStride</name><index pos:start="3:40" pos:end="3:41">[]</index></name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:56"><decl pos:start="3:44" pos:end="3:56"><type pos:start="3:44" pos:end="3:56"><name pos:start="3:44" pos:end="3:46">int</name></type> <name pos:start="3:48" pos:end="3:56">srcSliceY</name></decl></parameter>, <parameter pos:start="3:59" pos:end="3:71"><decl pos:start="3:59" pos:end="3:71"><type pos:start="3:59" pos:end="3:71"><name pos:start="3:59" pos:end="3:61">int</name></type> <name pos:start="3:63" pos:end="3:71">srcSliceH</name></decl></parameter>,

                          <parameter pos:start="5:27" pos:end="5:40"><decl pos:start="5:27" pos:end="5:40"><type pos:start="5:27" pos:end="5:38"><name pos:start="5:27" pos:end="5:33">uint8_t</name> <modifier pos:start="5:35" pos:end="5:35">*</modifier></type><name pos:start="5:36" pos:end="5:40"><name pos:start="5:36" pos:end="5:38">dst</name><index pos:start="5:39" pos:end="5:40">[]</index></name></decl></parameter>, <parameter pos:start="5:43" pos:end="5:57"><decl pos:start="5:43" pos:end="5:57"><type pos:start="5:43" pos:end="5:55"><name pos:start="5:43" pos:end="5:45">int</name></type> <name pos:start="5:47" pos:end="5:57"><name pos:start="5:47" pos:end="5:55">dstStride</name><index pos:start="5:56" pos:end="5:57">[]</index></name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="187:1">{<block_content pos:start="9:5" pos:end="185:13">

    <decl_stmt pos:start="9:5" pos:end="9:71"><decl pos:start="9:5" pos:end="9:70"><type pos:start="9:5" pos:end="9:30"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:28">AVPixFmtDescriptor</name> <modifier pos:start="9:30" pos:end="9:30">*</modifier></type><name pos:start="9:31" pos:end="9:34">desc</name> <init pos:start="9:36" pos:end="9:70">= <expr pos:start="9:38" pos:end="9:70"><call pos:start="9:38" pos:end="9:70"><name pos:start="9:38" pos:end="9:56">av_pix_fmt_desc_get</name><argument_list pos:start="9:57" pos:end="9:70">(<argument pos:start="9:58" pos:end="9:69"><expr pos:start="9:58" pos:end="9:69"><name pos:start="9:58" pos:end="9:69"><name pos:start="9:58" pos:end="9:58">c</name><operator pos:start="9:59" pos:end="9:60">-&gt;</operator><name pos:start="9:61" pos:end="9:69">srcFormat</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:44"><decl pos:start="11:5" pos:end="11:43"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:21">nb_components</name> <init pos:start="11:23" pos:end="11:43">= <expr pos:start="11:25" pos:end="11:43"><name pos:start="11:25" pos:end="11:43"><name pos:start="11:25" pos:end="11:28">desc</name><operator pos:start="11:29" pos:end="11:30">-&gt;</operator><name pos:start="11:31" pos:end="11:43">nb_components</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:13">plane</name></decl>, <decl pos:start="13:16" pos:end="13:16"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:16" pos:end="13:16">x</name></decl>, <decl pos:start="13:19" pos:end="13:19"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:19" pos:end="13:19">y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:51"><decl pos:start="15:5" pos:end="15:50"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:19">plane_count</name> <init pos:start="15:21" pos:end="15:50">= <expr pos:start="15:23" pos:end="15:50"><ternary pos:start="15:23" pos:end="15:50"><condition pos:start="15:23" pos:end="15:44"><expr pos:start="15:23" pos:end="15:42"><call pos:start="15:23" pos:end="15:42"><name pos:start="15:23" pos:end="15:28">isGray</name><argument_list pos:start="15:29" pos:end="15:42">(<argument pos:start="15:30" pos:end="15:41"><expr pos:start="15:30" pos:end="15:41"><name pos:start="15:30" pos:end="15:41"><name pos:start="15:30" pos:end="15:30">c</name><operator pos:start="15:31" pos:end="15:32">-&gt;</operator><name pos:start="15:33" pos:end="15:41">srcFormat</name></name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="15:46" pos:end="15:46"> <expr pos:start="15:46" pos:end="15:46"><literal type="number" pos:start="15:46" pos:end="15:46">1</literal></expr> </then><else pos:start="15:48" pos:end="15:50">: <expr pos:start="15:50" pos:end="15:50"><literal type="number" pos:start="15:50" pos:end="15:50">3</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:55"><decl pos:start="17:5" pos:end="17:54"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:20">sixteen_bits</name> <init pos:start="17:22" pos:end="17:54">= <expr pos:start="17:24" pos:end="17:54"><name pos:start="17:24" pos:end="17:36"><name pos:start="17:24" pos:end="17:27">desc</name><operator pos:start="17:28" pos:end="17:29">-&gt;</operator><name pos:start="17:30" pos:end="17:33">comp</name><index pos:start="17:34" pos:end="17:36">[<expr pos:start="17:35" pos:end="17:35"><literal type="number" pos:start="17:35" pos:end="17:35">0</literal></expr>]</index></name><operator pos:start="17:37" pos:end="17:37">.</operator><name pos:start="17:38" pos:end="17:49">depth_minus1</name> <operator pos:start="17:51" pos:end="17:52">&gt;=</operator> <literal type="number" pos:start="17:54" pos:end="17:54">8</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:52"><decl pos:start="19:5" pos:end="19:51"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">unsigned</name></type> <name pos:start="19:14" pos:end="19:16">off</name>    <init pos:start="19:21" pos:end="19:51">= <expr pos:start="19:23" pos:end="19:51"><literal type="number" pos:start="19:23" pos:end="19:23">1</literal><operator pos:start="19:24" pos:end="19:25">&lt;&lt;</operator><name pos:start="19:26" pos:end="19:38"><name pos:start="19:26" pos:end="19:29">desc</name><operator pos:start="19:30" pos:end="19:31">-&gt;</operator><name pos:start="19:32" pos:end="19:35">comp</name><index pos:start="19:36" pos:end="19:38">[<expr pos:start="19:37" pos:end="19:37"><literal type="number" pos:start="19:37" pos:end="19:37">0</literal></expr>]</index></name><operator pos:start="19:39" pos:end="19:39">.</operator><name pos:start="19:40" pos:end="19:51">depth_minus1</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:53"><decl pos:start="21:5" pos:end="21:52"><type pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:12">unsigned</name></type> <name pos:start="21:14" pos:end="21:18">shift</name>  <init pos:start="21:21" pos:end="21:52">= <expr pos:start="21:23" pos:end="21:52"><name pos:start="21:23" pos:end="21:35"><name pos:start="21:23" pos:end="21:26">desc</name><operator pos:start="21:27" pos:end="21:28">-&gt;</operator><name pos:start="21:29" pos:end="21:32">comp</name><index pos:start="21:33" pos:end="21:35">[<expr pos:start="21:34" pos:end="21:34"><literal type="number" pos:start="21:34" pos:end="21:34">0</literal></expr>]</index></name><operator pos:start="21:36" pos:end="21:36">.</operator><name pos:start="21:37" pos:end="21:48">depth_minus1</name> <operator pos:start="21:50" pos:end="21:50">+</operator> <literal type="number" pos:start="21:52" pos:end="21:52">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:37"><decl pos:start="23:5" pos:end="23:36"><type pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:12">unsigned</name></type> <name pos:start="23:14" pos:end="23:16">max</name>    <init pos:start="23:21" pos:end="23:36">= <expr pos:start="23:23" pos:end="23:36"><operator pos:start="23:23" pos:end="23:23">(</operator><literal type="number" pos:start="23:24" pos:end="23:24">1</literal><operator pos:start="23:25" pos:end="23:26">&lt;&lt;</operator><name pos:start="23:27" pos:end="23:31">shift</name><operator pos:start="23:32" pos:end="23:32">)</operator> <operator pos:start="23:34" pos:end="23:34">-</operator> <literal type="number" pos:start="23:36" pos:end="23:36">1</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:49"><expr pos:start="27:5" pos:end="27:48"><call pos:start="27:5" pos:end="27:48"><name pos:start="27:5" pos:end="27:14">av_assert0</name><argument_list pos:start="27:15" pos:end="27:48">(<argument pos:start="27:16" pos:end="27:47"><expr pos:start="27:16" pos:end="27:47"><name pos:start="27:16" pos:end="27:26">plane_count</name> <operator pos:start="27:28" pos:end="27:29">==</operator> <name pos:start="27:31" pos:end="27:43">nb_components</name> <operator pos:start="27:45" pos:end="27:45">-</operator> <literal type="number" pos:start="27:47" pos:end="27:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="181:5"><if pos:start="29:5" pos:end="97:5">if <condition pos:start="29:8" pos:end="29:45">(<expr pos:start="29:9" pos:end="29:44"><name pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:12">desc</name><operator pos:start="29:13" pos:end="29:14">-&gt;</operator><name pos:start="29:15" pos:end="29:19">flags</name></name> <operator pos:start="29:21" pos:end="29:21">&amp;</operator> <name pos:start="29:23" pos:end="29:44">AV_PIX_FMT_FLAG_PLANAR</name></expr>)</condition> <block pos:start="29:47" pos:end="97:5">{<block_content pos:start="31:9" pos:end="95:9">

        <for pos:start="31:9" pos:end="95:9">for <control pos:start="31:13" pos:end="31:53">(<init pos:start="31:14" pos:end="31:23"><expr pos:start="31:14" pos:end="31:22"><name pos:start="31:14" pos:end="31:18">plane</name> <operator pos:start="31:20" pos:end="31:20">=</operator> <literal type="number" pos:start="31:22" pos:end="31:22">0</literal></expr>;</init> <condition pos:start="31:25" pos:end="31:44"><expr pos:start="31:25" pos:end="31:43"><name pos:start="31:25" pos:end="31:29">plane</name> <operator pos:start="31:31" pos:end="31:31">&lt;</operator> <name pos:start="31:33" pos:end="31:43">plane_count</name></expr>;</condition> <incr pos:start="31:46" pos:end="31:52"><expr pos:start="31:46" pos:end="31:52"><name pos:start="31:46" pos:end="31:50">plane</name><operator pos:start="31:51" pos:end="31:52">++</operator></expr></incr>)</control> <block pos:start="31:55" pos:end="95:9">{<block_content pos:start="33:13" pos:end="93:13">

            <decl_stmt pos:start="33:13" pos:end="33:49"><decl pos:start="33:13" pos:end="33:48"><type pos:start="33:13" pos:end="33:15"><name pos:start="33:13" pos:end="33:15">int</name></type> <name pos:start="33:17" pos:end="33:17">w</name> <init pos:start="33:19" pos:end="33:48">= <expr pos:start="33:21" pos:end="33:48"><ternary pos:start="33:21" pos:end="33:48"><condition pos:start="33:21" pos:end="33:27"><expr pos:start="33:21" pos:end="33:25"><name pos:start="33:21" pos:end="33:25">plane</name></expr> ?</condition><then pos:start="33:29" pos:end="33:38"> <expr pos:start="33:29" pos:end="33:38"><name pos:start="33:29" pos:end="33:38"><name pos:start="33:29" pos:end="33:29">c</name><operator pos:start="33:30" pos:end="33:31">-&gt;</operator><name pos:start="33:32" pos:end="33:38">chrSrcW</name></name></expr> </then><else pos:start="33:40" pos:end="33:48">: <expr pos:start="33:42" pos:end="33:48"><name pos:start="33:42" pos:end="33:48"><name pos:start="33:42" pos:end="33:42">c</name><operator pos:start="33:43" pos:end="33:44">-&gt;</operator><name pos:start="33:45" pos:end="33:48">srcW</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="35:13" pos:end="35:61"><decl pos:start="35:13" pos:end="35:60"><type pos:start="35:13" pos:end="35:15"><name pos:start="35:13" pos:end="35:15">int</name></type> <name pos:start="35:17" pos:end="35:27">y_subsample</name> <init pos:start="35:29" pos:end="35:60">= <expr pos:start="35:31" pos:end="35:60"><ternary pos:start="35:31" pos:end="35:60"><condition pos:start="35:31" pos:end="35:37"><expr pos:start="35:31" pos:end="35:35"><name pos:start="35:31" pos:end="35:35">plane</name></expr> ?</condition><then pos:start="35:39" pos:end="35:57"> <expr pos:start="35:39" pos:end="35:57"><name pos:start="35:39" pos:end="35:57"><name pos:start="35:39" pos:end="35:42">desc</name><operator pos:start="35:43" pos:end="35:44">-&gt;</operator><name pos:start="35:45" pos:end="35:57">log2_chroma_h</name></name></expr></then><else pos:start="35:58" pos:end="35:60">: <expr pos:start="35:60" pos:end="35:60"><literal type="number" pos:start="35:60" pos:end="35:60">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <for pos:start="37:13" pos:end="93:13">for <control pos:start="37:17" pos:end="37:95">(<init pos:start="37:18" pos:end="37:46"><expr pos:start="37:18" pos:end="37:45"><name pos:start="37:18" pos:end="37:18">y</name> <operator pos:start="37:20" pos:end="37:20">=</operator> <name pos:start="37:22" pos:end="37:30">srcSliceY</name> <operator pos:start="37:32" pos:end="37:33">&gt;&gt;</operator> <name pos:start="37:35" pos:end="37:45">y_subsample</name></expr>;</init> <condition pos:start="37:48" pos:end="37:90"><expr pos:start="37:48" pos:end="37:89"><name pos:start="37:48" pos:end="37:48">y</name> <operator pos:start="37:50" pos:end="37:50">&lt;</operator> <call pos:start="37:52" pos:end="37:89"><name pos:start="37:52" pos:end="37:65">FF_CEIL_RSHIFT</name><argument_list pos:start="37:66" pos:end="37:89">(<argument pos:start="37:67" pos:end="37:75"><expr pos:start="37:67" pos:end="37:75"><name pos:start="37:67" pos:end="37:75">srcSliceH</name></expr></argument>, <argument pos:start="37:78" pos:end="37:88"><expr pos:start="37:78" pos:end="37:88"><name pos:start="37:78" pos:end="37:88">y_subsample</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="37:92" pos:end="37:94"><expr pos:start="37:92" pos:end="37:94"><name pos:start="37:92" pos:end="37:92">y</name><operator pos:start="37:93" pos:end="37:94">++</operator></expr></incr>)</control> <block pos:start="37:97" pos:end="93:13">{<block_content pos:start="39:17" pos:end="91:17">

                <if_stmt pos:start="39:17" pos:end="91:17"><if pos:start="39:17" pos:end="73:17">if <condition pos:start="39:20" pos:end="39:33">(<expr pos:start="39:21" pos:end="39:32"><name pos:start="39:21" pos:end="39:32">sixteen_bits</name></expr>)</condition> <block pos:start="39:35" pos:end="73:17">{<block_content pos:start="41:21" pos:end="71:21">

                    <decl_stmt pos:start="41:21" pos:end="41:80"><decl pos:start="41:21" pos:end="41:79"><type pos:start="41:21" pos:end="41:36"><specifier pos:start="41:21" pos:end="41:25">const</specifier> <name pos:start="41:27" pos:end="41:34">uint16_t</name> <modifier pos:start="41:36" pos:end="41:36">*</modifier></type><name pos:start="41:37" pos:end="41:37">s</name> <init pos:start="41:39" pos:end="41:79">= <expr pos:start="41:41" pos:end="41:79"><name pos:start="41:41" pos:end="41:56"><name pos:start="41:41" pos:end="41:43">src</name><index pos:start="41:44" pos:end="41:56">[<expr pos:start="41:45" pos:end="41:49"><name pos:start="41:45" pos:end="41:49">plane</name></expr>      ]</index></name> <operator pos:start="41:58" pos:end="41:58">+</operator> <name pos:start="41:60" pos:end="41:75"><name pos:start="41:60" pos:end="41:68">srcStride</name><index pos:start="41:69" pos:end="41:75">[<expr pos:start="41:70" pos:end="41:74"><name pos:start="41:70" pos:end="41:74">plane</name></expr>]</index></name> <operator pos:start="41:77" pos:end="41:77">*</operator> <name pos:start="41:79" pos:end="41:79">y</name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="43:21" pos:end="43:86"><decl pos:start="43:21" pos:end="43:85"><type pos:start="43:21" pos:end="43:36"><specifier pos:start="43:21" pos:end="43:25">const</specifier> <name pos:start="43:27" pos:end="43:34">uint16_t</name> <modifier pos:start="43:36" pos:end="43:36">*</modifier></type><name pos:start="43:37" pos:end="43:37">a</name> <init pos:start="43:39" pos:end="43:85">= <expr pos:start="43:41" pos:end="43:85"><name pos:start="43:41" pos:end="43:56"><name pos:start="43:41" pos:end="43:43">src</name><index pos:start="43:44" pos:end="43:56">[<expr pos:start="43:45" pos:end="43:55"><name pos:start="43:45" pos:end="43:55">plane_count</name></expr>]</index></name> <operator pos:start="43:58" pos:end="43:58">+</operator> <name pos:start="43:60" pos:end="43:81"><name pos:start="43:60" pos:end="43:68">srcStride</name><index pos:start="43:69" pos:end="43:81">[<expr pos:start="43:70" pos:end="43:80"><name pos:start="43:70" pos:end="43:80">plane_count</name></expr>]</index></name> <operator pos:start="43:83" pos:end="43:83">*</operator> <name pos:start="43:85" pos:end="43:85">y</name></expr></init></decl>;</decl_stmt>

                          <decl_stmt pos:start="45:27" pos:end="45:80"><decl pos:start="45:27" pos:end="45:79"><type pos:start="45:27" pos:end="45:36"><name pos:start="45:27" pos:end="45:34">uint16_t</name> <modifier pos:start="45:36" pos:end="45:36">*</modifier></type><name pos:start="45:37" pos:end="45:37">d</name> <init pos:start="45:39" pos:end="45:79">= <expr pos:start="45:41" pos:end="45:79"><name pos:start="45:41" pos:end="45:56"><name pos:start="45:41" pos:end="45:43">dst</name><index pos:start="45:44" pos:end="45:56">[<expr pos:start="45:45" pos:end="45:49"><name pos:start="45:45" pos:end="45:49">plane</name></expr>      ]</index></name> <operator pos:start="45:58" pos:end="45:58">+</operator> <name pos:start="45:60" pos:end="45:75"><name pos:start="45:60" pos:end="45:68">dstStride</name><index pos:start="45:69" pos:end="45:75">[<expr pos:start="45:70" pos:end="45:74"><name pos:start="45:70" pos:end="45:74">plane</name></expr>]</index></name> <operator pos:start="45:77" pos:end="45:77">*</operator> <name pos:start="45:79" pos:end="45:79">y</name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="47:21" pos:end="47:120"><decl pos:start="47:21" pos:end="47:119"><type pos:start="47:21" pos:end="47:28"><name pos:start="47:21" pos:end="47:28">unsigned</name></type> <name pos:start="47:30" pos:end="47:35">target</name> <init pos:start="47:37" pos:end="47:119">= <expr pos:start="47:39" pos:end="47:119"><ternary pos:start="47:39" pos:end="47:119"><condition pos:start="47:39" pos:end="47:85"><expr pos:start="47:39" pos:end="47:83"><name pos:start="47:39" pos:end="47:43">plane</name> <operator pos:start="47:45" pos:end="47:46">&amp;&amp;</operator> <operator pos:start="47:48" pos:end="47:48">!</operator><operator pos:start="47:49" pos:end="47:49">(</operator><name pos:start="47:50" pos:end="47:60"><name pos:start="47:50" pos:end="47:53">desc</name><operator pos:start="47:54" pos:end="47:55">-&gt;</operator><name pos:start="47:56" pos:end="47:60">flags</name></name> <operator pos:start="47:62" pos:end="47:62">&amp;</operator> <name pos:start="47:64" pos:end="47:82">AV_PIX_FMT_FLAG_RGB</name><operator pos:start="47:83" pos:end="47:83">)</operator></expr> ?</condition><then pos:start="47:87" pos:end="47:115"> <expr pos:start="47:87" pos:end="47:115"><literal type="number" pos:start="47:87" pos:end="47:87">1</literal><operator pos:start="47:88" pos:end="47:89">&lt;&lt;</operator><name pos:start="47:90" pos:end="47:102"><name pos:start="47:90" pos:end="47:93">desc</name><operator pos:start="47:94" pos:end="47:95">-&gt;</operator><name pos:start="47:96" pos:end="47:99">comp</name><index pos:start="47:100" pos:end="47:102">[<expr pos:start="47:101" pos:end="47:101"><literal type="number" pos:start="47:101" pos:end="47:101">0</literal></expr>]</index></name><operator pos:start="47:103" pos:end="47:103">.</operator><name pos:start="47:104" pos:end="47:115">depth_minus1</name></expr> </then><else pos:start="47:117" pos:end="47:119">: <expr pos:start="47:119" pos:end="47:119"><literal type="number" pos:start="47:119" pos:end="47:119">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="49:21" pos:end="71:21"><if pos:start="49:21" pos:end="59:21">if <condition pos:start="49:24" pos:end="49:65">(<expr pos:start="49:25" pos:end="49:64"><operator pos:start="49:25" pos:end="49:25">(</operator><operator pos:start="49:26" pos:end="49:26">!</operator><call pos:start="49:27" pos:end="49:44"><name pos:start="49:27" pos:end="49:30">isBE</name><argument_list pos:start="49:31" pos:end="49:44">(<argument pos:start="49:32" pos:end="49:43"><expr pos:start="49:32" pos:end="49:43"><name pos:start="49:32" pos:end="49:43"><name pos:start="49:32" pos:end="49:32">c</name><operator pos:start="49:33" pos:end="49:34">-&gt;</operator><name pos:start="49:35" pos:end="49:43">srcFormat</name></name></expr></argument>)</argument_list></call><operator pos:start="49:45" pos:end="49:45">)</operator> <operator pos:start="49:47" pos:end="49:48">==</operator> <operator pos:start="49:50" pos:end="49:50">!</operator><name pos:start="49:51" pos:end="49:64">HAVE_BIGENDIAN</name></expr>)</condition> <block pos:start="49:67" pos:end="59:21">{<block_content pos:start="51:25" pos:end="57:25">

                        <for pos:start="51:25" pos:end="57:25">for <control pos:start="51:29" pos:end="51:47">(<init pos:start="51:30" pos:end="51:35"><expr pos:start="51:30" pos:end="51:34"><name pos:start="51:30" pos:end="51:30">x</name> <operator pos:start="51:32" pos:end="51:32">=</operator> <literal type="number" pos:start="51:34" pos:end="51:34">0</literal></expr>;</init> <condition pos:start="51:37" pos:end="51:42"><expr pos:start="51:37" pos:end="51:41"><name pos:start="51:37" pos:end="51:37">x</name> <operator pos:start="51:39" pos:end="51:39">&lt;</operator> <name pos:start="51:41" pos:end="51:41">w</name></expr>;</condition> <incr pos:start="51:44" pos:end="51:46"><expr pos:start="51:44" pos:end="51:46"><name pos:start="51:44" pos:end="51:44">x</name><operator pos:start="51:45" pos:end="51:46">++</operator></expr></incr>)</control> <block pos:start="51:49" pos:end="57:25">{<block_content pos:start="53:29" pos:end="55:80">

                            <decl_stmt pos:start="53:29" pos:end="53:77"><decl pos:start="53:29" pos:end="53:76"><type pos:start="53:29" pos:end="53:36"><name pos:start="53:29" pos:end="53:36">unsigned</name></type> <name pos:start="53:38" pos:end="53:38">u</name> <init pos:start="53:40" pos:end="53:76">= <expr pos:start="53:42" pos:end="53:76"><name pos:start="53:42" pos:end="53:45"><name pos:start="53:42" pos:end="53:42">s</name><index pos:start="53:43" pos:end="53:45">[<expr pos:start="53:44" pos:end="53:44"><name pos:start="53:44" pos:end="53:44">x</name></expr>]</index></name><operator pos:start="53:46" pos:end="53:46">*</operator><name pos:start="53:47" pos:end="53:50"><name pos:start="53:47" pos:end="53:47">a</name><index pos:start="53:48" pos:end="53:50">[<expr pos:start="53:49" pos:end="53:49"><name pos:start="53:49" pos:end="53:49">x</name></expr>]</index></name> <operator pos:start="53:52" pos:end="53:52">+</operator> <name pos:start="53:54" pos:end="53:59">target</name><operator pos:start="53:60" pos:end="53:60">*</operator><operator pos:start="53:61" pos:end="53:61">(</operator><name pos:start="53:62" pos:end="53:64">max</name><operator pos:start="53:65" pos:end="53:65">-</operator><name pos:start="53:66" pos:end="53:69"><name pos:start="53:66" pos:end="53:66">a</name><index pos:start="53:67" pos:end="53:69">[<expr pos:start="53:68" pos:end="53:68"><name pos:start="53:68" pos:end="53:68">x</name></expr>]</index></name><operator pos:start="53:70" pos:end="53:70">)</operator> <operator pos:start="53:72" pos:end="53:72">+</operator> <name pos:start="53:74" pos:end="53:76">off</name></expr></init></decl>;</decl_stmt>

                            <expr_stmt pos:start="55:29" pos:end="55:80"><expr pos:start="55:29" pos:end="55:79"><name pos:start="55:29" pos:end="55:32"><name pos:start="55:29" pos:end="55:29">d</name><index pos:start="55:30" pos:end="55:32">[<expr pos:start="55:31" pos:end="55:31"><name pos:start="55:31" pos:end="55:31">x</name></expr>]</index></name> <operator pos:start="55:34" pos:end="55:34">=</operator> <call pos:start="55:36" pos:end="55:79"><name pos:start="55:36" pos:end="55:42">av_clip</name><argument_list pos:start="55:43" pos:end="55:79">(<argument pos:start="55:44" pos:end="55:70"><expr pos:start="55:44" pos:end="55:70"><operator pos:start="55:44" pos:end="55:44">(</operator><name pos:start="55:45" pos:end="55:45">u</name> <operator pos:start="55:47" pos:end="55:47">+</operator> <operator pos:start="55:49" pos:end="55:49">(</operator><name pos:start="55:50" pos:end="55:50">u</name> <operator pos:start="55:52" pos:end="55:53">&gt;&gt;</operator> <name pos:start="55:55" pos:end="55:59">shift</name><operator pos:start="55:60" pos:end="55:60">)</operator><operator pos:start="55:61" pos:end="55:61">)</operator> <operator pos:start="55:63" pos:end="55:64">&gt;&gt;</operator> <name pos:start="55:66" pos:end="55:70">shift</name></expr></argument>, <argument pos:start="55:73" pos:end="55:73"><expr pos:start="55:73" pos:end="55:73"><literal type="number" pos:start="55:73" pos:end="55:73">0</literal></expr></argument>, <argument pos:start="55:76" pos:end="55:78"><expr pos:start="55:76" pos:end="55:78"><name pos:start="55:76" pos:end="55:78">max</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></for>

                    </block_content>}</block></if> <else pos:start="59:23" pos:end="71:21">else <block pos:start="59:28" pos:end="71:21">{<block_content pos:start="61:25" pos:end="69:25">

                        <for pos:start="61:25" pos:end="69:25">for <control pos:start="61:29" pos:end="61:47">(<init pos:start="61:30" pos:end="61:35"><expr pos:start="61:30" pos:end="61:34"><name pos:start="61:30" pos:end="61:30">x</name> <operator pos:start="61:32" pos:end="61:32">=</operator> <literal type="number" pos:start="61:34" pos:end="61:34">0</literal></expr>;</init> <condition pos:start="61:37" pos:end="61:42"><expr pos:start="61:37" pos:end="61:41"><name pos:start="61:37" pos:end="61:37">x</name> <operator pos:start="61:39" pos:end="61:39">&lt;</operator> <name pos:start="61:41" pos:end="61:41">w</name></expr>;</condition> <incr pos:start="61:44" pos:end="61:46"><expr pos:start="61:44" pos:end="61:46"><name pos:start="61:44" pos:end="61:44">x</name><operator pos:start="61:45" pos:end="61:46">++</operator></expr></incr>)</control> <block pos:start="61:49" pos:end="69:25">{<block_content pos:start="63:29" pos:end="67:80">

                            <decl_stmt pos:start="63:29" pos:end="63:61"><decl pos:start="63:29" pos:end="63:60"><type pos:start="63:29" pos:end="63:36"><name pos:start="63:29" pos:end="63:36">unsigned</name></type> <name pos:start="63:38" pos:end="63:42">aswap</name> <init pos:start="63:44" pos:end="63:60">=<expr pos:start="63:45" pos:end="63:60"><call pos:start="63:45" pos:end="63:60"><name pos:start="63:45" pos:end="63:54">av_bswap16</name><argument_list pos:start="63:55" pos:end="63:60">(<argument pos:start="63:56" pos:end="63:59"><expr pos:start="63:56" pos:end="63:59"><name pos:start="63:56" pos:end="63:59"><name pos:start="63:56" pos:end="63:56">a</name><index pos:start="63:57" pos:end="63:59">[<expr pos:start="63:58" pos:end="63:58"><name pos:start="63:58" pos:end="63:58">x</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                            <decl_stmt pos:start="65:29" pos:end="65:91"><decl pos:start="65:29" pos:end="65:90"><type pos:start="65:29" pos:end="65:36"><name pos:start="65:29" pos:end="65:36">unsigned</name></type> <name pos:start="65:38" pos:end="65:38">u</name> <init pos:start="65:40" pos:end="65:90">= <expr pos:start="65:42" pos:end="65:90"><call pos:start="65:42" pos:end="65:57"><name pos:start="65:42" pos:end="65:51">av_bswap16</name><argument_list pos:start="65:52" pos:end="65:57">(<argument pos:start="65:53" pos:end="65:56"><expr pos:start="65:53" pos:end="65:56"><name pos:start="65:53" pos:end="65:56"><name pos:start="65:53" pos:end="65:53">s</name><index pos:start="65:54" pos:end="65:56">[<expr pos:start="65:55" pos:end="65:55"><name pos:start="65:55" pos:end="65:55">x</name></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="65:58" pos:end="65:58">*</operator><name pos:start="65:59" pos:end="65:63">aswap</name> <operator pos:start="65:65" pos:end="65:65">+</operator> <name pos:start="65:67" pos:end="65:72">target</name><operator pos:start="65:73" pos:end="65:73">*</operator><operator pos:start="65:74" pos:end="65:74">(</operator><name pos:start="65:75" pos:end="65:77">max</name><operator pos:start="65:78" pos:end="65:78">-</operator><name pos:start="65:79" pos:end="65:83">aswap</name><operator pos:start="65:84" pos:end="65:84">)</operator> <operator pos:start="65:86" pos:end="65:86">+</operator> <name pos:start="65:88" pos:end="65:90">off</name></expr></init></decl>;</decl_stmt>

                            <expr_stmt pos:start="67:29" pos:end="67:80"><expr pos:start="67:29" pos:end="67:79"><name pos:start="67:29" pos:end="67:32"><name pos:start="67:29" pos:end="67:29">d</name><index pos:start="67:30" pos:end="67:32">[<expr pos:start="67:31" pos:end="67:31"><name pos:start="67:31" pos:end="67:31">x</name></expr>]</index></name> <operator pos:start="67:34" pos:end="67:34">=</operator> <call pos:start="67:36" pos:end="67:79"><name pos:start="67:36" pos:end="67:42">av_clip</name><argument_list pos:start="67:43" pos:end="67:79">(<argument pos:start="67:44" pos:end="67:70"><expr pos:start="67:44" pos:end="67:70"><operator pos:start="67:44" pos:end="67:44">(</operator><name pos:start="67:45" pos:end="67:45">u</name> <operator pos:start="67:47" pos:end="67:47">+</operator> <operator pos:start="67:49" pos:end="67:49">(</operator><name pos:start="67:50" pos:end="67:50">u</name> <operator pos:start="67:52" pos:end="67:53">&gt;&gt;</operator> <name pos:start="67:55" pos:end="67:59">shift</name><operator pos:start="67:60" pos:end="67:60">)</operator><operator pos:start="67:61" pos:end="67:61">)</operator> <operator pos:start="67:63" pos:end="67:64">&gt;&gt;</operator> <name pos:start="67:66" pos:end="67:70">shift</name></expr></argument>, <argument pos:start="67:73" pos:end="67:73"><expr pos:start="67:73" pos:end="67:73"><literal type="number" pos:start="67:73" pos:end="67:73">0</literal></expr></argument>, <argument pos:start="67:76" pos:end="67:78"><expr pos:start="67:76" pos:end="67:78"><name pos:start="67:76" pos:end="67:78">max</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></for>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="73:19" pos:end="91:17">else <block pos:start="73:24" pos:end="91:17">{<block_content pos:start="75:21" pos:end="89:21">

                    <decl_stmt pos:start="75:21" pos:end="75:79"><decl pos:start="75:21" pos:end="75:78"><type pos:start="75:21" pos:end="75:35"><specifier pos:start="75:21" pos:end="75:25">const</specifier> <name pos:start="75:27" pos:end="75:33">uint8_t</name> <modifier pos:start="75:35" pos:end="75:35">*</modifier></type><name pos:start="75:36" pos:end="75:36">s</name> <init pos:start="75:38" pos:end="75:78">= <expr pos:start="75:40" pos:end="75:78"><name pos:start="75:40" pos:end="75:55"><name pos:start="75:40" pos:end="75:42">src</name><index pos:start="75:43" pos:end="75:55">[<expr pos:start="75:44" pos:end="75:48"><name pos:start="75:44" pos:end="75:48">plane</name></expr>      ]</index></name> <operator pos:start="75:57" pos:end="75:57">+</operator> <name pos:start="75:59" pos:end="75:74"><name pos:start="75:59" pos:end="75:67">srcStride</name><index pos:start="75:68" pos:end="75:74">[<expr pos:start="75:69" pos:end="75:73"><name pos:start="75:69" pos:end="75:73">plane</name></expr>]</index></name> <operator pos:start="75:76" pos:end="75:76">*</operator> <name pos:start="75:78" pos:end="75:78">y</name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="77:21" pos:end="77:85"><decl pos:start="77:21" pos:end="77:84"><type pos:start="77:21" pos:end="77:35"><specifier pos:start="77:21" pos:end="77:25">const</specifier> <name pos:start="77:27" pos:end="77:33">uint8_t</name> <modifier pos:start="77:35" pos:end="77:35">*</modifier></type><name pos:start="77:36" pos:end="77:36">a</name> <init pos:start="77:38" pos:end="77:84">= <expr pos:start="77:40" pos:end="77:84"><name pos:start="77:40" pos:end="77:55"><name pos:start="77:40" pos:end="77:42">src</name><index pos:start="77:43" pos:end="77:55">[<expr pos:start="77:44" pos:end="77:54"><name pos:start="77:44" pos:end="77:54">plane_count</name></expr>]</index></name> <operator pos:start="77:57" pos:end="77:57">+</operator> <name pos:start="77:59" pos:end="77:80"><name pos:start="77:59" pos:end="77:67">srcStride</name><index pos:start="77:68" pos:end="77:80">[<expr pos:start="77:69" pos:end="77:79"><name pos:start="77:69" pos:end="77:79">plane_count</name></expr>]</index></name> <operator pos:start="77:82" pos:end="77:82">*</operator> <name pos:start="77:84" pos:end="77:84">y</name></expr></init></decl>;</decl_stmt>

                          <decl_stmt pos:start="79:27" pos:end="79:79"><decl pos:start="79:27" pos:end="79:78"><type pos:start="79:27" pos:end="79:35"><name pos:start="79:27" pos:end="79:33">uint8_t</name> <modifier pos:start="79:35" pos:end="79:35">*</modifier></type><name pos:start="79:36" pos:end="79:36">d</name> <init pos:start="79:38" pos:end="79:78">= <expr pos:start="79:40" pos:end="79:78"><name pos:start="79:40" pos:end="79:55"><name pos:start="79:40" pos:end="79:42">dst</name><index pos:start="79:43" pos:end="79:55">[<expr pos:start="79:44" pos:end="79:48"><name pos:start="79:44" pos:end="79:48">plane</name></expr>      ]</index></name> <operator pos:start="79:57" pos:end="79:57">+</operator> <name pos:start="79:59" pos:end="79:74"><name pos:start="79:59" pos:end="79:67">dstStride</name><index pos:start="79:68" pos:end="79:74">[<expr pos:start="79:69" pos:end="79:73"><name pos:start="79:69" pos:end="79:73">plane</name></expr>]</index></name> <operator pos:start="79:76" pos:end="79:76">*</operator> <name pos:start="79:78" pos:end="79:78">y</name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="81:21" pos:end="81:94"><decl pos:start="81:21" pos:end="81:93"><type pos:start="81:21" pos:end="81:28"><name pos:start="81:21" pos:end="81:28">unsigned</name></type> <name pos:start="81:30" pos:end="81:35">target</name> <init pos:start="81:37" pos:end="81:93">= <expr pos:start="81:39" pos:end="81:93"><ternary pos:start="81:39" pos:end="81:93"><condition pos:start="81:39" pos:end="81:85"><expr pos:start="81:39" pos:end="81:83"><name pos:start="81:39" pos:end="81:43">plane</name> <operator pos:start="81:45" pos:end="81:46">&amp;&amp;</operator> <operator pos:start="81:48" pos:end="81:48">!</operator><operator pos:start="81:49" pos:end="81:49">(</operator><name pos:start="81:50" pos:end="81:60"><name pos:start="81:50" pos:end="81:53">desc</name><operator pos:start="81:54" pos:end="81:55">-&gt;</operator><name pos:start="81:56" pos:end="81:60">flags</name></name> <operator pos:start="81:62" pos:end="81:62">&amp;</operator> <name pos:start="81:64" pos:end="81:82">AV_PIX_FMT_FLAG_RGB</name><operator pos:start="81:83" pos:end="81:83">)</operator></expr> ?</condition><then pos:start="81:87" pos:end="81:89"> <expr pos:start="81:87" pos:end="81:89"><literal type="number" pos:start="81:87" pos:end="81:89">128</literal></expr> </then><else pos:start="81:91" pos:end="81:93">: <expr pos:start="81:93" pos:end="81:93"><literal type="number" pos:start="81:93" pos:end="81:93">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

                    <for pos:start="83:21" pos:end="89:21">for <control pos:start="83:25" pos:end="83:43">(<init pos:start="83:26" pos:end="83:31"><expr pos:start="83:26" pos:end="83:30"><name pos:start="83:26" pos:end="83:26">x</name> <operator pos:start="83:28" pos:end="83:28">=</operator> <literal type="number" pos:start="83:30" pos:end="83:30">0</literal></expr>;</init> <condition pos:start="83:33" pos:end="83:38"><expr pos:start="83:33" pos:end="83:37"><name pos:start="83:33" pos:end="83:33">x</name> <operator pos:start="83:35" pos:end="83:35">&lt;</operator> <name pos:start="83:37" pos:end="83:37">w</name></expr>;</condition> <incr pos:start="83:40" pos:end="83:42"><expr pos:start="83:40" pos:end="83:42"><name pos:start="83:40" pos:end="83:40">x</name><operator pos:start="83:41" pos:end="83:42">++</operator></expr></incr>)</control> <block pos:start="83:45" pos:end="89:21">{<block_content pos:start="85:25" pos:end="87:45">

                        <decl_stmt pos:start="85:25" pos:end="85:73"><decl pos:start="85:25" pos:end="85:72"><type pos:start="85:25" pos:end="85:32"><name pos:start="85:25" pos:end="85:32">unsigned</name></type> <name pos:start="85:34" pos:end="85:34">u</name> <init pos:start="85:36" pos:end="85:72">= <expr pos:start="85:38" pos:end="85:72"><name pos:start="85:38" pos:end="85:41"><name pos:start="85:38" pos:end="85:38">s</name><index pos:start="85:39" pos:end="85:41">[<expr pos:start="85:40" pos:end="85:40"><name pos:start="85:40" pos:end="85:40">x</name></expr>]</index></name><operator pos:start="85:42" pos:end="85:42">*</operator><name pos:start="85:43" pos:end="85:46"><name pos:start="85:43" pos:end="85:43">a</name><index pos:start="85:44" pos:end="85:46">[<expr pos:start="85:45" pos:end="85:45"><name pos:start="85:45" pos:end="85:45">x</name></expr>]</index></name> <operator pos:start="85:48" pos:end="85:48">+</operator> <name pos:start="85:50" pos:end="85:55">target</name><operator pos:start="85:56" pos:end="85:56">*</operator><operator pos:start="85:57" pos:end="85:57">(</operator><literal type="number" pos:start="85:58" pos:end="85:61">255</literal><operator pos:start="85:61" pos:end="85:61">-</operator><name pos:start="85:62" pos:end="85:65"><name pos:start="85:62" pos:end="85:62">a</name><index pos:start="85:63" pos:end="85:65">[<expr pos:start="85:64" pos:end="85:64"><name pos:start="85:64" pos:end="85:64">x</name></expr>]</index></name><operator pos:start="85:66" pos:end="85:66">)</operator> <operator pos:start="85:68" pos:end="85:68">+</operator> <literal type="number" pos:start="85:70" pos:end="85:72">128</literal></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="87:25" pos:end="87:45"><expr pos:start="87:25" pos:end="87:44"><name pos:start="87:25" pos:end="87:28"><name pos:start="87:25" pos:end="87:25">d</name><index pos:start="87:26" pos:end="87:28">[<expr pos:start="87:27" pos:end="87:27"><name pos:start="87:27" pos:end="87:27">x</name></expr>]</index></name> <operator pos:start="87:30" pos:end="87:30">=</operator> <operator pos:start="87:32" pos:end="87:32">(</operator><literal type="number" pos:start="87:33" pos:end="87:35">257</literal><operator pos:start="87:36" pos:end="87:36">*</operator><name pos:start="87:37" pos:end="87:37">u</name><operator pos:start="87:38" pos:end="87:38">)</operator> <operator pos:start="87:40" pos:end="87:41">&gt;&gt;</operator> <literal type="number" pos:start="87:43" pos:end="87:44">16</literal></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="97:7" pos:end="181:5">else <block pos:start="97:12" pos:end="181:5">{<block_content pos:start="99:9" pos:end="179:9">

        <decl_stmt pos:start="99:9" pos:end="99:65"><decl pos:start="99:9" pos:end="99:64"><type pos:start="99:9" pos:end="99:11"><name pos:start="99:9" pos:end="99:11">int</name></type> <name pos:start="99:13" pos:end="99:21">alpha_pos</name> <init pos:start="99:23" pos:end="99:64">= <expr pos:start="99:25" pos:end="99:64"><name pos:start="99:25" pos:end="99:47"><name pos:start="99:25" pos:end="99:28">desc</name><operator pos:start="99:29" pos:end="99:30">-&gt;</operator><name pos:start="99:31" pos:end="99:34">comp</name><index pos:start="99:35" pos:end="99:47">[<expr pos:start="99:36" pos:end="99:46"><name pos:start="99:36" pos:end="99:46">plane_count</name></expr>]</index></name><operator pos:start="99:48" pos:end="99:48">.</operator><name pos:start="99:49" pos:end="99:60">offset_plus1</name> <operator pos:start="99:62" pos:end="99:62">-</operator> <literal type="number" pos:start="99:64" pos:end="99:64">1</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="101:9" pos:end="101:24"><decl pos:start="101:9" pos:end="101:23"><type pos:start="101:9" pos:end="101:11"><name pos:start="101:9" pos:end="101:11">int</name></type> <name pos:start="101:13" pos:end="101:13">w</name> <init pos:start="101:15" pos:end="101:23">= <expr pos:start="101:17" pos:end="101:23"><name pos:start="101:17" pos:end="101:23"><name pos:start="101:17" pos:end="101:17">c</name><operator pos:start="101:18" pos:end="101:19">-&gt;</operator><name pos:start="101:20" pos:end="101:23">srcW</name></name></expr></init></decl>;</decl_stmt>

        <for pos:start="103:9" pos:end="179:9">for <control pos:start="103:13" pos:end="103:47">(<init pos:start="103:14" pos:end="103:27"><expr pos:start="103:14" pos:end="103:26"><name pos:start="103:14" pos:end="103:14">y</name> <operator pos:start="103:16" pos:end="103:16">=</operator> <name pos:start="103:18" pos:end="103:26">srcSliceY</name></expr>;</init> <condition pos:start="103:29" pos:end="103:42"><expr pos:start="103:29" pos:end="103:41"><name pos:start="103:29" pos:end="103:29">y</name> <operator pos:start="103:31" pos:end="103:31">&lt;</operator> <name pos:start="103:33" pos:end="103:41">srcSliceH</name></expr>;</condition> <incr pos:start="103:44" pos:end="103:46"><expr pos:start="103:44" pos:end="103:46"><name pos:start="103:44" pos:end="103:44">y</name><operator pos:start="103:45" pos:end="103:46">++</operator></expr></incr>)</control> <block pos:start="103:49" pos:end="179:9">{<block_content pos:start="105:13" pos:end="177:13">

            <if_stmt pos:start="105:13" pos:end="177:13"><if pos:start="105:13" pos:end="153:13">if <condition pos:start="105:16" pos:end="105:29">(<expr pos:start="105:17" pos:end="105:28"><name pos:start="105:17" pos:end="105:28">sixteen_bits</name></expr>)</condition> <block pos:start="105:31" pos:end="153:13">{<block_content pos:start="107:17" pos:end="151:17">

                <decl_stmt pos:start="107:17" pos:end="107:77"><decl pos:start="107:17" pos:end="107:76"><type pos:start="107:17" pos:end="107:32"><specifier pos:start="107:17" pos:end="107:21">const</specifier> <name pos:start="107:23" pos:end="107:30">uint16_t</name> <modifier pos:start="107:32" pos:end="107:32">*</modifier></type><name pos:start="107:33" pos:end="107:33">s</name> <init pos:start="107:35" pos:end="107:76">= <expr pos:start="107:37" pos:end="107:76"><name pos:start="107:37" pos:end="107:42"><name pos:start="107:37" pos:end="107:39">src</name><index pos:start="107:40" pos:end="107:42">[<expr pos:start="107:41" pos:end="107:41"><literal type="number" pos:start="107:41" pos:end="107:41">0</literal></expr>]</index></name> <operator pos:start="107:44" pos:end="107:44">+</operator> <name pos:start="107:46" pos:end="107:57"><name pos:start="107:46" pos:end="107:54">srcStride</name><index pos:start="107:55" pos:end="107:57">[<expr pos:start="107:56" pos:end="107:56"><literal type="number" pos:start="107:56" pos:end="107:56">0</literal></expr>]</index></name> <operator pos:start="107:59" pos:end="107:59">*</operator> <name pos:start="107:61" pos:end="107:61">y</name> <operator pos:start="107:63" pos:end="107:63">+</operator> <literal type="number" pos:start="107:65" pos:end="107:65">2</literal><operator pos:start="107:66" pos:end="107:66">*</operator><operator pos:start="107:67" pos:end="107:67">!</operator><name pos:start="107:68" pos:end="107:76">alpha_pos</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="109:17" pos:end="109:74"><decl pos:start="109:17" pos:end="109:73"><type pos:start="109:17" pos:end="109:32"><specifier pos:start="109:17" pos:end="109:21">const</specifier> <name pos:start="109:23" pos:end="109:30">uint16_t</name> <modifier pos:start="109:32" pos:end="109:32">*</modifier></type><name pos:start="109:33" pos:end="109:33">a</name> <init pos:start="109:35" pos:end="109:73">= <expr pos:start="109:37" pos:end="109:73"><name pos:start="109:37" pos:end="109:42"><name pos:start="109:37" pos:end="109:39">src</name><index pos:start="109:40" pos:end="109:42">[<expr pos:start="109:41" pos:end="109:41"><literal type="number" pos:start="109:41" pos:end="109:41">0</literal></expr>]</index></name> <operator pos:start="109:44" pos:end="109:44">+</operator> <name pos:start="109:46" pos:end="109:57"><name pos:start="109:46" pos:end="109:54">srcStride</name><index pos:start="109:55" pos:end="109:57">[<expr pos:start="109:56" pos:end="109:56"><literal type="number" pos:start="109:56" pos:end="109:56">0</literal></expr>]</index></name> <operator pos:start="109:59" pos:end="109:59">*</operator> <name pos:start="109:61" pos:end="109:61">y</name> <operator pos:start="109:63" pos:end="109:63">+</operator> <name pos:start="109:65" pos:end="109:73">alpha_pos</name></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="111:25" pos:end="111:64"><decl pos:start="111:25" pos:end="111:63"><type pos:start="111:25" pos:end="111:34"><name pos:start="111:25" pos:end="111:32">uint16_t</name> <modifier pos:start="111:34" pos:end="111:34">*</modifier></type><name pos:start="111:35" pos:end="111:35">d</name> <init pos:start="111:37" pos:end="111:63">= <expr pos:start="111:39" pos:end="111:63"><name pos:start="111:39" pos:end="111:44"><name pos:start="111:39" pos:end="111:41">dst</name><index pos:start="111:42" pos:end="111:44">[<expr pos:start="111:43" pos:end="111:43"><literal type="number" pos:start="111:43" pos:end="111:43">0</literal></expr>]</index></name> <operator pos:start="111:46" pos:end="111:46">+</operator> <name pos:start="111:48" pos:end="111:59"><name pos:start="111:48" pos:end="111:56">dstStride</name><index pos:start="111:57" pos:end="111:59">[<expr pos:start="111:58" pos:end="111:58"><literal type="number" pos:start="111:58" pos:end="111:58">0</literal></expr>]</index></name> <operator pos:start="111:61" pos:end="111:61">*</operator> <name pos:start="111:63" pos:end="111:63">y</name></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="113:17" pos:end="151:17"><if pos:start="113:17" pos:end="131:17">if <condition pos:start="113:20" pos:end="113:61">(<expr pos:start="113:21" pos:end="113:60"><operator pos:start="113:21" pos:end="113:21">(</operator><operator pos:start="113:22" pos:end="113:22">!</operator><call pos:start="113:23" pos:end="113:40"><name pos:start="113:23" pos:end="113:26">isBE</name><argument_list pos:start="113:27" pos:end="113:40">(<argument pos:start="113:28" pos:end="113:39"><expr pos:start="113:28" pos:end="113:39"><name pos:start="113:28" pos:end="113:39"><name pos:start="113:28" pos:end="113:28">c</name><operator pos:start="113:29" pos:end="113:30">-&gt;</operator><name pos:start="113:31" pos:end="113:39">srcFormat</name></name></expr></argument>)</argument_list></call><operator pos:start="113:41" pos:end="113:41">)</operator> <operator pos:start="113:43" pos:end="113:44">==</operator> <operator pos:start="113:46" pos:end="113:46">!</operator><name pos:start="113:47" pos:end="113:60">HAVE_BIGENDIAN</name></expr>)</condition> <block pos:start="113:63" pos:end="131:17">{<block_content pos:start="115:21" pos:end="129:21">

                    <for pos:start="115:21" pos:end="129:21">for <control pos:start="115:25" pos:end="115:43">(<init pos:start="115:26" pos:end="115:31"><expr pos:start="115:26" pos:end="115:30"><name pos:start="115:26" pos:end="115:26">x</name> <operator pos:start="115:28" pos:end="115:28">=</operator> <literal type="number" pos:start="115:30" pos:end="115:30">0</literal></expr>;</init> <condition pos:start="115:33" pos:end="115:38"><expr pos:start="115:33" pos:end="115:37"><name pos:start="115:33" pos:end="115:33">x</name> <operator pos:start="115:35" pos:end="115:35">&lt;</operator> <name pos:start="115:37" pos:end="115:37">w</name></expr>;</condition> <incr pos:start="115:40" pos:end="115:42"><expr pos:start="115:40" pos:end="115:42"><name pos:start="115:40" pos:end="115:40">x</name><operator pos:start="115:41" pos:end="115:42">++</operator></expr></incr>)</control> <block pos:start="115:45" pos:end="129:21">{<block_content pos:start="117:25" pos:end="127:25">

                        <for pos:start="117:25" pos:end="127:25">for <control pos:start="117:29" pos:end="117:69">(<init pos:start="117:30" pos:end="117:39"><expr pos:start="117:30" pos:end="117:38"><name pos:start="117:30" pos:end="117:34">plane</name> <operator pos:start="117:36" pos:end="117:36">=</operator> <literal type="number" pos:start="117:38" pos:end="117:38">0</literal></expr>;</init> <condition pos:start="117:41" pos:end="117:60"><expr pos:start="117:41" pos:end="117:59"><name pos:start="117:41" pos:end="117:45">plane</name> <operator pos:start="117:47" pos:end="117:47">&lt;</operator> <name pos:start="117:49" pos:end="117:59">plane_count</name></expr>;</condition> <incr pos:start="117:62" pos:end="117:68"><expr pos:start="117:62" pos:end="117:68"><name pos:start="117:62" pos:end="117:66">plane</name><operator pos:start="117:67" pos:end="117:68">++</operator></expr></incr>)</control> <block pos:start="117:71" pos:end="127:25">{<block_content pos:start="119:29" pos:end="125:100">

                            <decl_stmt pos:start="119:29" pos:end="119:128"><decl pos:start="119:29" pos:end="119:127"><type pos:start="119:29" pos:end="119:36"><name pos:start="119:29" pos:end="119:36">unsigned</name></type> <name pos:start="119:38" pos:end="119:43">target</name> <init pos:start="119:45" pos:end="119:127">= <expr pos:start="119:47" pos:end="119:127"><ternary pos:start="119:47" pos:end="119:127"><condition pos:start="119:47" pos:end="119:93"><expr pos:start="119:47" pos:end="119:91"><name pos:start="119:47" pos:end="119:51">plane</name> <operator pos:start="119:53" pos:end="119:54">&amp;&amp;</operator> <operator pos:start="119:56" pos:end="119:56">!</operator><operator pos:start="119:57" pos:end="119:57">(</operator><name pos:start="119:58" pos:end="119:68"><name pos:start="119:58" pos:end="119:61">desc</name><operator pos:start="119:62" pos:end="119:63">-&gt;</operator><name pos:start="119:64" pos:end="119:68">flags</name></name> <operator pos:start="119:70" pos:end="119:70">&amp;</operator> <name pos:start="119:72" pos:end="119:90">AV_PIX_FMT_FLAG_RGB</name><operator pos:start="119:91" pos:end="119:91">)</operator></expr> ?</condition><then pos:start="119:95" pos:end="119:123"> <expr pos:start="119:95" pos:end="119:123"><literal type="number" pos:start="119:95" pos:end="119:95">1</literal><operator pos:start="119:96" pos:end="119:97">&lt;&lt;</operator><name pos:start="119:98" pos:end="119:110"><name pos:start="119:98" pos:end="119:101">desc</name><operator pos:start="119:102" pos:end="119:103">-&gt;</operator><name pos:start="119:104" pos:end="119:107">comp</name><index pos:start="119:108" pos:end="119:110">[<expr pos:start="119:109" pos:end="119:109"><literal type="number" pos:start="119:109" pos:end="119:109">0</literal></expr>]</index></name><operator pos:start="119:111" pos:end="119:111">.</operator><name pos:start="119:112" pos:end="119:123">depth_minus1</name></expr> </then><else pos:start="119:125" pos:end="119:127">: <expr pos:start="119:127" pos:end="119:127"><literal type="number" pos:start="119:127" pos:end="119:127">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

                            <decl_stmt pos:start="121:29" pos:end="121:64"><decl pos:start="121:29" pos:end="121:63"><type pos:start="121:29" pos:end="121:31"><name pos:start="121:29" pos:end="121:31">int</name></type> <name pos:start="121:33" pos:end="121:39">x_index</name> <init pos:start="121:41" pos:end="121:63">= <expr pos:start="121:43" pos:end="121:63"><operator pos:start="121:43" pos:end="121:43">(</operator><name pos:start="121:44" pos:end="121:54">plane_count</name> <operator pos:start="121:56" pos:end="121:56">+</operator> <literal type="number" pos:start="121:58" pos:end="121:58">1</literal><operator pos:start="121:59" pos:end="121:59">)</operator> <operator pos:start="121:61" pos:end="121:61">*</operator> <name pos:start="121:63" pos:end="121:63">x</name></expr></init></decl>;</decl_stmt>

                            <decl_stmt pos:start="123:29" pos:end="123:103"><decl pos:start="123:29" pos:end="123:102"><type pos:start="123:29" pos:end="123:36"><name pos:start="123:29" pos:end="123:36">unsigned</name></type> <name pos:start="123:38" pos:end="123:38">u</name> <init pos:start="123:40" pos:end="123:102">= <expr pos:start="123:42" pos:end="123:102"><name pos:start="123:42" pos:end="123:59"><name pos:start="123:42" pos:end="123:42">s</name><index pos:start="123:43" pos:end="123:59">[<expr pos:start="123:44" pos:end="123:58"><name pos:start="123:44" pos:end="123:50">x_index</name> <operator pos:start="123:52" pos:end="123:52">+</operator> <name pos:start="123:54" pos:end="123:58">plane</name></expr>]</index></name><operator pos:start="123:60" pos:end="123:60">*</operator><name pos:start="123:61" pos:end="123:70"><name pos:start="123:61" pos:end="123:61">a</name><index pos:start="123:62" pos:end="123:70">[<expr pos:start="123:63" pos:end="123:69"><name pos:start="123:63" pos:end="123:69">x_index</name></expr>]</index></name> <operator pos:start="123:72" pos:end="123:72">+</operator> <name pos:start="123:74" pos:end="123:79">target</name><operator pos:start="123:80" pos:end="123:80">*</operator><operator pos:start="123:81" pos:end="123:81">(</operator><name pos:start="123:82" pos:end="123:84">max</name><operator pos:start="123:85" pos:end="123:85">-</operator><name pos:start="123:86" pos:end="123:95"><name pos:start="123:86" pos:end="123:86">a</name><index pos:start="123:87" pos:end="123:95">[<expr pos:start="123:88" pos:end="123:94"><name pos:start="123:88" pos:end="123:94">x_index</name></expr>]</index></name><operator pos:start="123:96" pos:end="123:96">)</operator> <operator pos:start="123:98" pos:end="123:98">+</operator> <name pos:start="123:100" pos:end="123:102">off</name></expr></init></decl>;</decl_stmt>

                            <expr_stmt pos:start="125:29" pos:end="125:100"><expr pos:start="125:29" pos:end="125:99"><name pos:start="125:29" pos:end="125:52"><name pos:start="125:29" pos:end="125:29">d</name><index pos:start="125:30" pos:end="125:52">[<expr pos:start="125:31" pos:end="125:51"><name pos:start="125:31" pos:end="125:41">plane_count</name><operator pos:start="125:42" pos:end="125:42">*</operator><name pos:start="125:43" pos:end="125:43">x</name> <operator pos:start="125:45" pos:end="125:45">+</operator> <name pos:start="125:47" pos:end="125:51">plane</name></expr>]</index></name> <operator pos:start="125:54" pos:end="125:54">=</operator> <call pos:start="125:56" pos:end="125:99"><name pos:start="125:56" pos:end="125:62">av_clip</name><argument_list pos:start="125:63" pos:end="125:99">(<argument pos:start="125:64" pos:end="125:90"><expr pos:start="125:64" pos:end="125:90"><operator pos:start="125:64" pos:end="125:64">(</operator><name pos:start="125:65" pos:end="125:65">u</name> <operator pos:start="125:67" pos:end="125:67">+</operator> <operator pos:start="125:69" pos:end="125:69">(</operator><name pos:start="125:70" pos:end="125:70">u</name> <operator pos:start="125:72" pos:end="125:73">&gt;&gt;</operator> <name pos:start="125:75" pos:end="125:79">shift</name><operator pos:start="125:80" pos:end="125:80">)</operator><operator pos:start="125:81" pos:end="125:81">)</operator> <operator pos:start="125:83" pos:end="125:84">&gt;&gt;</operator> <name pos:start="125:86" pos:end="125:90">shift</name></expr></argument>, <argument pos:start="125:93" pos:end="125:93"><expr pos:start="125:93" pos:end="125:93"><literal type="number" pos:start="125:93" pos:end="125:93">0</literal></expr></argument>, <argument pos:start="125:96" pos:end="125:98"><expr pos:start="125:96" pos:end="125:98"><name pos:start="125:96" pos:end="125:98">max</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></for>

                    </block_content>}</block></for>

                </block_content>}</block></if> <else pos:start="131:19" pos:end="151:17">else <block pos:start="131:24" pos:end="151:17">{<block_content pos:start="133:21" pos:end="149:21">

                    <for pos:start="133:21" pos:end="149:21">for <control pos:start="133:25" pos:end="133:43">(<init pos:start="133:26" pos:end="133:31"><expr pos:start="133:26" pos:end="133:30"><name pos:start="133:26" pos:end="133:26">x</name> <operator pos:start="133:28" pos:end="133:28">=</operator> <literal type="number" pos:start="133:30" pos:end="133:30">0</literal></expr>;</init> <condition pos:start="133:33" pos:end="133:38"><expr pos:start="133:33" pos:end="133:37"><name pos:start="133:33" pos:end="133:33">x</name> <operator pos:start="133:35" pos:end="133:35">&lt;</operator> <name pos:start="133:37" pos:end="133:37">w</name></expr>;</condition> <incr pos:start="133:40" pos:end="133:42"><expr pos:start="133:40" pos:end="133:42"><name pos:start="133:40" pos:end="133:40">x</name><operator pos:start="133:41" pos:end="133:42">++</operator></expr></incr>)</control> <block pos:start="133:45" pos:end="149:21">{<block_content pos:start="135:25" pos:end="147:25">

                        <for pos:start="135:25" pos:end="147:25">for <control pos:start="135:29" pos:end="135:69">(<init pos:start="135:30" pos:end="135:39"><expr pos:start="135:30" pos:end="135:38"><name pos:start="135:30" pos:end="135:34">plane</name> <operator pos:start="135:36" pos:end="135:36">=</operator> <literal type="number" pos:start="135:38" pos:end="135:38">0</literal></expr>;</init> <condition pos:start="135:41" pos:end="135:60"><expr pos:start="135:41" pos:end="135:59"><name pos:start="135:41" pos:end="135:45">plane</name> <operator pos:start="135:47" pos:end="135:47">&lt;</operator> <name pos:start="135:49" pos:end="135:59">plane_count</name></expr>;</condition> <incr pos:start="135:62" pos:end="135:68"><expr pos:start="135:62" pos:end="135:68"><name pos:start="135:62" pos:end="135:66">plane</name><operator pos:start="135:67" pos:end="135:68">++</operator></expr></incr>)</control> <block pos:start="135:71" pos:end="147:25">{<block_content pos:start="137:29" pos:end="145:100">

                            <decl_stmt pos:start="137:29" pos:end="137:128"><decl pos:start="137:29" pos:end="137:127"><type pos:start="137:29" pos:end="137:36"><name pos:start="137:29" pos:end="137:36">unsigned</name></type> <name pos:start="137:38" pos:end="137:43">target</name> <init pos:start="137:45" pos:end="137:127">= <expr pos:start="137:47" pos:end="137:127"><ternary pos:start="137:47" pos:end="137:127"><condition pos:start="137:47" pos:end="137:93"><expr pos:start="137:47" pos:end="137:91"><name pos:start="137:47" pos:end="137:51">plane</name> <operator pos:start="137:53" pos:end="137:54">&amp;&amp;</operator> <operator pos:start="137:56" pos:end="137:56">!</operator><operator pos:start="137:57" pos:end="137:57">(</operator><name pos:start="137:58" pos:end="137:68"><name pos:start="137:58" pos:end="137:61">desc</name><operator pos:start="137:62" pos:end="137:63">-&gt;</operator><name pos:start="137:64" pos:end="137:68">flags</name></name> <operator pos:start="137:70" pos:end="137:70">&amp;</operator> <name pos:start="137:72" pos:end="137:90">AV_PIX_FMT_FLAG_RGB</name><operator pos:start="137:91" pos:end="137:91">)</operator></expr> ?</condition><then pos:start="137:95" pos:end="137:123"> <expr pos:start="137:95" pos:end="137:123"><literal type="number" pos:start="137:95" pos:end="137:95">1</literal><operator pos:start="137:96" pos:end="137:97">&lt;&lt;</operator><name pos:start="137:98" pos:end="137:110"><name pos:start="137:98" pos:end="137:101">desc</name><operator pos:start="137:102" pos:end="137:103">-&gt;</operator><name pos:start="137:104" pos:end="137:107">comp</name><index pos:start="137:108" pos:end="137:110">[<expr pos:start="137:109" pos:end="137:109"><literal type="number" pos:start="137:109" pos:end="137:109">0</literal></expr>]</index></name><operator pos:start="137:111" pos:end="137:111">.</operator><name pos:start="137:112" pos:end="137:123">depth_minus1</name></expr> </then><else pos:start="137:125" pos:end="137:127">: <expr pos:start="137:127" pos:end="137:127"><literal type="number" pos:start="137:127" pos:end="137:127">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

                            <decl_stmt pos:start="139:29" pos:end="139:64"><decl pos:start="139:29" pos:end="139:63"><type pos:start="139:29" pos:end="139:31"><name pos:start="139:29" pos:end="139:31">int</name></type> <name pos:start="139:33" pos:end="139:39">x_index</name> <init pos:start="139:41" pos:end="139:63">= <expr pos:start="139:43" pos:end="139:63"><operator pos:start="139:43" pos:end="139:43">(</operator><name pos:start="139:44" pos:end="139:54">plane_count</name> <operator pos:start="139:56" pos:end="139:56">+</operator> <literal type="number" pos:start="139:58" pos:end="139:58">1</literal><operator pos:start="139:59" pos:end="139:59">)</operator> <operator pos:start="139:61" pos:end="139:61">*</operator> <name pos:start="139:63" pos:end="139:63">x</name></expr></init></decl>;</decl_stmt>

                            <decl_stmt pos:start="141:29" pos:end="141:67"><decl pos:start="141:29" pos:end="141:66"><type pos:start="141:29" pos:end="141:36"><name pos:start="141:29" pos:end="141:36">unsigned</name></type> <name pos:start="141:38" pos:end="141:42">aswap</name> <init pos:start="141:44" pos:end="141:66">=<expr pos:start="141:45" pos:end="141:66"><call pos:start="141:45" pos:end="141:66"><name pos:start="141:45" pos:end="141:54">av_bswap16</name><argument_list pos:start="141:55" pos:end="141:66">(<argument pos:start="141:56" pos:end="141:65"><expr pos:start="141:56" pos:end="141:65"><name pos:start="141:56" pos:end="141:65"><name pos:start="141:56" pos:end="141:56">a</name><index pos:start="141:57" pos:end="141:65">[<expr pos:start="141:58" pos:end="141:64"><name pos:start="141:58" pos:end="141:64">x_index</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                            <decl_stmt pos:start="143:29" pos:end="143:105"><decl pos:start="143:29" pos:end="143:104"><type pos:start="143:29" pos:end="143:36"><name pos:start="143:29" pos:end="143:36">unsigned</name></type> <name pos:start="143:38" pos:end="143:38">u</name> <init pos:start="143:40" pos:end="143:104">= <expr pos:start="143:42" pos:end="143:104"><call pos:start="143:42" pos:end="143:71"><name pos:start="143:42" pos:end="143:51">av_bswap16</name><argument_list pos:start="143:52" pos:end="143:71">(<argument pos:start="143:53" pos:end="143:70"><expr pos:start="143:53" pos:end="143:70"><name pos:start="143:53" pos:end="143:70"><name pos:start="143:53" pos:end="143:53">s</name><index pos:start="143:54" pos:end="143:70">[<expr pos:start="143:55" pos:end="143:69"><name pos:start="143:55" pos:end="143:61">x_index</name> <operator pos:start="143:63" pos:end="143:63">+</operator> <name pos:start="143:65" pos:end="143:69">plane</name></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="143:72" pos:end="143:72">*</operator><name pos:start="143:73" pos:end="143:77">aswap</name> <operator pos:start="143:79" pos:end="143:79">+</operator> <name pos:start="143:81" pos:end="143:86">target</name><operator pos:start="143:87" pos:end="143:87">*</operator><operator pos:start="143:88" pos:end="143:88">(</operator><name pos:start="143:89" pos:end="143:91">max</name><operator pos:start="143:92" pos:end="143:92">-</operator><name pos:start="143:93" pos:end="143:97">aswap</name><operator pos:start="143:98" pos:end="143:98">)</operator> <operator pos:start="143:100" pos:end="143:100">+</operator> <name pos:start="143:102" pos:end="143:104">off</name></expr></init></decl>;</decl_stmt>

                            <expr_stmt pos:start="145:29" pos:end="145:100"><expr pos:start="145:29" pos:end="145:99"><name pos:start="145:29" pos:end="145:52"><name pos:start="145:29" pos:end="145:29">d</name><index pos:start="145:30" pos:end="145:52">[<expr pos:start="145:31" pos:end="145:51"><name pos:start="145:31" pos:end="145:41">plane_count</name><operator pos:start="145:42" pos:end="145:42">*</operator><name pos:start="145:43" pos:end="145:43">x</name> <operator pos:start="145:45" pos:end="145:45">+</operator> <name pos:start="145:47" pos:end="145:51">plane</name></expr>]</index></name> <operator pos:start="145:54" pos:end="145:54">=</operator> <call pos:start="145:56" pos:end="145:99"><name pos:start="145:56" pos:end="145:62">av_clip</name><argument_list pos:start="145:63" pos:end="145:99">(<argument pos:start="145:64" pos:end="145:90"><expr pos:start="145:64" pos:end="145:90"><operator pos:start="145:64" pos:end="145:64">(</operator><name pos:start="145:65" pos:end="145:65">u</name> <operator pos:start="145:67" pos:end="145:67">+</operator> <operator pos:start="145:69" pos:end="145:69">(</operator><name pos:start="145:70" pos:end="145:70">u</name> <operator pos:start="145:72" pos:end="145:73">&gt;&gt;</operator> <name pos:start="145:75" pos:end="145:79">shift</name><operator pos:start="145:80" pos:end="145:80">)</operator><operator pos:start="145:81" pos:end="145:81">)</operator> <operator pos:start="145:83" pos:end="145:84">&gt;&gt;</operator> <name pos:start="145:86" pos:end="145:90">shift</name></expr></argument>, <argument pos:start="145:93" pos:end="145:93"><expr pos:start="145:93" pos:end="145:93"><literal type="number" pos:start="145:93" pos:end="145:93">0</literal></expr></argument>, <argument pos:start="145:96" pos:end="145:98"><expr pos:start="145:96" pos:end="145:98"><name pos:start="145:96" pos:end="145:98">max</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></for>

                    </block_content>}</block></for>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="153:15" pos:end="177:13">else <block pos:start="153:20" pos:end="177:13">{<block_content pos:start="155:17" pos:end="175:17">

                <decl_stmt pos:start="155:17" pos:end="155:74"><decl pos:start="155:17" pos:end="155:73"><type pos:start="155:17" pos:end="155:31"><specifier pos:start="155:17" pos:end="155:21">const</specifier> <name pos:start="155:23" pos:end="155:29">uint8_t</name> <modifier pos:start="155:31" pos:end="155:31">*</modifier></type><name pos:start="155:32" pos:end="155:32">s</name> <init pos:start="155:34" pos:end="155:73">= <expr pos:start="155:36" pos:end="155:73"><name pos:start="155:36" pos:end="155:41"><name pos:start="155:36" pos:end="155:38">src</name><index pos:start="155:39" pos:end="155:41">[<expr pos:start="155:40" pos:end="155:40"><literal type="number" pos:start="155:40" pos:end="155:40">0</literal></expr>]</index></name> <operator pos:start="155:43" pos:end="155:43">+</operator> <name pos:start="155:45" pos:end="155:56"><name pos:start="155:45" pos:end="155:53">srcStride</name><index pos:start="155:54" pos:end="155:56">[<expr pos:start="155:55" pos:end="155:55"><literal type="number" pos:start="155:55" pos:end="155:55">0</literal></expr>]</index></name> <operator pos:start="155:58" pos:end="155:58">*</operator> <name pos:start="155:60" pos:end="155:60">y</name> <operator pos:start="155:62" pos:end="155:62">+</operator> <operator pos:start="155:64" pos:end="155:64">!</operator><name pos:start="155:65" pos:end="155:73">alpha_pos</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="157:17" pos:end="157:73"><decl pos:start="157:17" pos:end="157:72"><type pos:start="157:17" pos:end="157:31"><specifier pos:start="157:17" pos:end="157:21">const</specifier> <name pos:start="157:23" pos:end="157:29">uint8_t</name> <modifier pos:start="157:31" pos:end="157:31">*</modifier></type><name pos:start="157:32" pos:end="157:32">a</name> <init pos:start="157:34" pos:end="157:72">= <expr pos:start="157:36" pos:end="157:72"><name pos:start="157:36" pos:end="157:41"><name pos:start="157:36" pos:end="157:38">src</name><index pos:start="157:39" pos:end="157:41">[<expr pos:start="157:40" pos:end="157:40"><literal type="number" pos:start="157:40" pos:end="157:40">0</literal></expr>]</index></name> <operator pos:start="157:43" pos:end="157:43">+</operator> <name pos:start="157:45" pos:end="157:56"><name pos:start="157:45" pos:end="157:53">srcStride</name><index pos:start="157:54" pos:end="157:56">[<expr pos:start="157:55" pos:end="157:55"><literal type="number" pos:start="157:55" pos:end="157:55">0</literal></expr>]</index></name> <operator pos:start="157:58" pos:end="157:58">*</operator> <name pos:start="157:60" pos:end="157:60">y</name> <operator pos:start="157:62" pos:end="157:62">+</operator> <name pos:start="157:64" pos:end="157:72">alpha_pos</name></expr></init></decl>;</decl_stmt>

                      <decl_stmt pos:start="159:23" pos:end="159:61"><decl pos:start="159:23" pos:end="159:60"><type pos:start="159:23" pos:end="159:31"><name pos:start="159:23" pos:end="159:29">uint8_t</name> <modifier pos:start="159:31" pos:end="159:31">*</modifier></type><name pos:start="159:32" pos:end="159:32">d</name> <init pos:start="159:34" pos:end="159:60">= <expr pos:start="159:36" pos:end="159:60"><name pos:start="159:36" pos:end="159:41"><name pos:start="159:36" pos:end="159:38">dst</name><index pos:start="159:39" pos:end="159:41">[<expr pos:start="159:40" pos:end="159:40"><literal type="number" pos:start="159:40" pos:end="159:40">0</literal></expr>]</index></name> <operator pos:start="159:43" pos:end="159:43">+</operator> <name pos:start="159:45" pos:end="159:56"><name pos:start="159:45" pos:end="159:53">dstStride</name><index pos:start="159:54" pos:end="159:56">[<expr pos:start="159:55" pos:end="159:55"><literal type="number" pos:start="159:55" pos:end="159:55">0</literal></expr>]</index></name> <operator pos:start="159:58" pos:end="159:58">*</operator> <name pos:start="159:60" pos:end="159:60">y</name></expr></init></decl>;</decl_stmt>

                <for pos:start="161:17" pos:end="175:17">for <control pos:start="161:21" pos:end="161:39">(<init pos:start="161:22" pos:end="161:27"><expr pos:start="161:22" pos:end="161:26"><name pos:start="161:22" pos:end="161:22">x</name> <operator pos:start="161:24" pos:end="161:24">=</operator> <literal type="number" pos:start="161:26" pos:end="161:26">0</literal></expr>;</init> <condition pos:start="161:29" pos:end="161:34"><expr pos:start="161:29" pos:end="161:33"><name pos:start="161:29" pos:end="161:29">x</name> <operator pos:start="161:31" pos:end="161:31">&lt;</operator> <name pos:start="161:33" pos:end="161:33">w</name></expr>;</condition> <incr pos:start="161:36" pos:end="161:38"><expr pos:start="161:36" pos:end="161:38"><name pos:start="161:36" pos:end="161:36">x</name><operator pos:start="161:37" pos:end="161:38">++</operator></expr></incr>)</control> <block pos:start="161:41" pos:end="175:17">{<block_content pos:start="163:21" pos:end="173:21">

                    <for pos:start="163:21" pos:end="173:21">for <control pos:start="163:25" pos:end="163:65">(<init pos:start="163:26" pos:end="163:35"><expr pos:start="163:26" pos:end="163:34"><name pos:start="163:26" pos:end="163:30">plane</name> <operator pos:start="163:32" pos:end="163:32">=</operator> <literal type="number" pos:start="163:34" pos:end="163:34">0</literal></expr>;</init> <condition pos:start="163:37" pos:end="163:56"><expr pos:start="163:37" pos:end="163:55"><name pos:start="163:37" pos:end="163:41">plane</name> <operator pos:start="163:43" pos:end="163:43">&lt;</operator> <name pos:start="163:45" pos:end="163:55">plane_count</name></expr>;</condition> <incr pos:start="163:58" pos:end="163:64"><expr pos:start="163:58" pos:end="163:64"><name pos:start="163:58" pos:end="163:62">plane</name><operator pos:start="163:63" pos:end="163:64">++</operator></expr></incr>)</control> <block pos:start="163:67" pos:end="173:21">{<block_content pos:start="165:25" pos:end="171:65">

                        <decl_stmt pos:start="165:25" pos:end="165:98"><decl pos:start="165:25" pos:end="165:97"><type pos:start="165:25" pos:end="165:32"><name pos:start="165:25" pos:end="165:32">unsigned</name></type> <name pos:start="165:34" pos:end="165:39">target</name> <init pos:start="165:41" pos:end="165:97">= <expr pos:start="165:43" pos:end="165:97"><ternary pos:start="165:43" pos:end="165:97"><condition pos:start="165:43" pos:end="165:89"><expr pos:start="165:43" pos:end="165:87"><name pos:start="165:43" pos:end="165:47">plane</name> <operator pos:start="165:49" pos:end="165:50">&amp;&amp;</operator> <operator pos:start="165:52" pos:end="165:52">!</operator><operator pos:start="165:53" pos:end="165:53">(</operator><name pos:start="165:54" pos:end="165:64"><name pos:start="165:54" pos:end="165:57">desc</name><operator pos:start="165:58" pos:end="165:59">-&gt;</operator><name pos:start="165:60" pos:end="165:64">flags</name></name> <operator pos:start="165:66" pos:end="165:66">&amp;</operator> <name pos:start="165:68" pos:end="165:86">AV_PIX_FMT_FLAG_RGB</name><operator pos:start="165:87" pos:end="165:87">)</operator></expr> ?</condition><then pos:start="165:91" pos:end="165:93"> <expr pos:start="165:91" pos:end="165:93"><literal type="number" pos:start="165:91" pos:end="165:93">128</literal></expr> </then><else pos:start="165:95" pos:end="165:97">: <expr pos:start="165:97" pos:end="165:97"><literal type="number" pos:start="165:97" pos:end="165:97">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="167:25" pos:end="167:60"><decl pos:start="167:25" pos:end="167:59"><type pos:start="167:25" pos:end="167:27"><name pos:start="167:25" pos:end="167:27">int</name></type> <name pos:start="167:29" pos:end="167:35">x_index</name> <init pos:start="167:37" pos:end="167:59">= <expr pos:start="167:39" pos:end="167:59"><operator pos:start="167:39" pos:end="167:39">(</operator><name pos:start="167:40" pos:end="167:50">plane_count</name> <operator pos:start="167:52" pos:end="167:52">+</operator> <literal type="number" pos:start="167:54" pos:end="167:54">1</literal><operator pos:start="167:55" pos:end="167:55">)</operator> <operator pos:start="167:57" pos:end="167:57">*</operator> <name pos:start="167:59" pos:end="167:59">x</name></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="169:25" pos:end="169:99"><decl pos:start="169:25" pos:end="169:98"><type pos:start="169:25" pos:end="169:32"><name pos:start="169:25" pos:end="169:32">unsigned</name></type> <name pos:start="169:34" pos:end="169:34">u</name> <init pos:start="169:36" pos:end="169:98">= <expr pos:start="169:38" pos:end="169:98"><name pos:start="169:38" pos:end="169:55"><name pos:start="169:38" pos:end="169:38">s</name><index pos:start="169:39" pos:end="169:55">[<expr pos:start="169:40" pos:end="169:54"><name pos:start="169:40" pos:end="169:46">x_index</name> <operator pos:start="169:48" pos:end="169:48">+</operator> <name pos:start="169:50" pos:end="169:54">plane</name></expr>]</index></name><operator pos:start="169:56" pos:end="169:56">*</operator><name pos:start="169:57" pos:end="169:66"><name pos:start="169:57" pos:end="169:57">a</name><index pos:start="169:58" pos:end="169:66">[<expr pos:start="169:59" pos:end="169:65"><name pos:start="169:59" pos:end="169:65">x_index</name></expr>]</index></name> <operator pos:start="169:68" pos:end="169:68">+</operator> <name pos:start="169:70" pos:end="169:75">target</name><operator pos:start="169:76" pos:end="169:76">*</operator><operator pos:start="169:77" pos:end="169:77">(</operator><literal type="number" pos:start="169:78" pos:end="169:81">255</literal><operator pos:start="169:81" pos:end="169:81">-</operator><name pos:start="169:82" pos:end="169:91"><name pos:start="169:82" pos:end="169:82">a</name><index pos:start="169:83" pos:end="169:91">[<expr pos:start="169:84" pos:end="169:90"><name pos:start="169:84" pos:end="169:90">x_index</name></expr>]</index></name><operator pos:start="169:92" pos:end="169:92">)</operator> <operator pos:start="169:94" pos:end="169:94">+</operator> <literal type="number" pos:start="169:96" pos:end="169:98">128</literal></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="171:25" pos:end="171:65"><expr pos:start="171:25" pos:end="171:64"><name pos:start="171:25" pos:end="171:48"><name pos:start="171:25" pos:end="171:25">d</name><index pos:start="171:26" pos:end="171:48">[<expr pos:start="171:27" pos:end="171:47"><name pos:start="171:27" pos:end="171:37">plane_count</name><operator pos:start="171:38" pos:end="171:38">*</operator><name pos:start="171:39" pos:end="171:39">x</name> <operator pos:start="171:41" pos:end="171:41">+</operator> <name pos:start="171:43" pos:end="171:47">plane</name></expr>]</index></name> <operator pos:start="171:50" pos:end="171:50">=</operator> <operator pos:start="171:52" pos:end="171:52">(</operator><literal type="number" pos:start="171:53" pos:end="171:55">257</literal><operator pos:start="171:56" pos:end="171:56">*</operator><name pos:start="171:57" pos:end="171:57">u</name><operator pos:start="171:58" pos:end="171:58">)</operator> <operator pos:start="171:60" pos:end="171:61">&gt;&gt;</operator> <literal type="number" pos:start="171:63" pos:end="171:64">16</literal></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <return pos:start="185:5" pos:end="185:13">return <expr pos:start="185:12" pos:end="185:12"><literal type="number" pos:start="185:12" pos:end="185:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
