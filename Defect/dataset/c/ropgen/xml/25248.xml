<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25248.c" pos:tabs="8"><function pos:start="1:1" pos:end="213:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:19">load_dtb</name><parameter_list pos:start="1:20" pos:end="3:38">(<parameter pos:start="1:21" pos:end="1:31"><decl pos:start="1:21" pos:end="1:31"><type pos:start="1:21" pos:end="1:31"><name pos:start="1:21" pos:end="1:26">hwaddr</name></type> <name pos:start="1:28" pos:end="1:31">addr</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:66"><decl pos:start="1:34" pos:end="1:66"><type pos:start="1:34" pos:end="1:66"><specifier pos:start="1:34" pos:end="1:38">const</specifier> <name pos:start="1:40" pos:end="1:59"><name pos:start="1:40" pos:end="1:45">struct</name> <name pos:start="1:47" pos:end="1:59">arm_boot_info</name></name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:66">binfo</name></decl></parameter>,

                    <parameter pos:start="3:21" pos:end="3:37"><decl pos:start="3:21" pos:end="3:37"><type pos:start="3:21" pos:end="3:37"><name pos:start="3:21" pos:end="3:26">hwaddr</name></type> <name pos:start="3:28" pos:end="3:37">addr_limit</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="213:1">{<block_content pos:start="7:5" pos:end="211:14">

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">void</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:13">fdt</name> <init pos:start="7:15" pos:end="7:20">= <expr pos:start="7:17" pos:end="7:20"><name pos:start="7:17" pos:end="7:20">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">size</name></decl>, <decl pos:start="9:15" pos:end="9:16"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:16">rc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:19">acells</name></decl>, <decl pos:start="11:22" pos:end="11:27"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:22" pos:end="11:27">scells</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="57:5"><if pos:start="15:5" pos:end="45:5">if <condition pos:start="15:8" pos:end="15:28">(<expr pos:start="15:9" pos:end="15:27"><name pos:start="15:9" pos:end="15:27"><name pos:start="15:9" pos:end="15:13">binfo</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:27">dtb_filename</name></name></expr>)</condition> <block pos:start="15:30" pos:end="45:5">{<block_content pos:start="17:9" pos:end="43:25">

        <decl_stmt pos:start="17:9" pos:end="17:23"><decl pos:start="17:9" pos:end="17:22"><type pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:12">char</name> <modifier pos:start="17:14" pos:end="17:14">*</modifier></type><name pos:start="17:15" pos:end="17:22">filename</name></decl>;</decl_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:76"><expr pos:start="19:9" pos:end="19:75"><name pos:start="19:9" pos:end="19:16">filename</name> <operator pos:start="19:18" pos:end="19:18">=</operator> <call pos:start="19:20" pos:end="19:75"><name pos:start="19:20" pos:end="19:33">qemu_find_file</name><argument_list pos:start="19:34" pos:end="19:75">(<argument pos:start="19:35" pos:end="19:53"><expr pos:start="19:35" pos:end="19:53"><name pos:start="19:35" pos:end="19:53">QEMU_FILE_TYPE_BIOS</name></expr></argument>, <argument pos:start="19:56" pos:end="19:74"><expr pos:start="19:56" pos:end="19:74"><name pos:start="19:56" pos:end="19:74"><name pos:start="19:56" pos:end="19:60">binfo</name><operator pos:start="19:61" pos:end="19:62">-&gt;</operator><name pos:start="19:63" pos:end="19:74">dtb_filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="27:9"><if pos:start="21:9" pos:end="27:9">if <condition pos:start="21:12" pos:end="21:22">(<expr pos:start="21:13" pos:end="21:21"><operator pos:start="21:13" pos:end="21:13">!</operator><name pos:start="21:14" pos:end="21:21">filename</name></expr>)</condition> <block pos:start="21:24" pos:end="27:9">{<block_content pos:start="23:13" pos:end="25:22">

            <expr_stmt pos:start="23:13" pos:end="23:80"><expr pos:start="23:13" pos:end="23:79"><call pos:start="23:13" pos:end="23:79"><name pos:start="23:13" pos:end="23:19">fprintf</name><argument_list pos:start="23:20" pos:end="23:79">(<argument pos:start="23:21" pos:end="23:26"><expr pos:start="23:21" pos:end="23:26"><name pos:start="23:21" pos:end="23:26">stderr</name></expr></argument>, <argument pos:start="23:29" pos:end="23:57"><expr pos:start="23:29" pos:end="23:57"><literal type="string" pos:start="23:29" pos:end="23:57">"Couldn't open dtb file %s\n"</literal></expr></argument>, <argument pos:start="23:60" pos:end="23:78"><expr pos:start="23:60" pos:end="23:78"><name pos:start="23:60" pos:end="23:78"><name pos:start="23:60" pos:end="23:64">binfo</name><operator pos:start="23:65" pos:end="23:66">-&gt;</operator><name pos:start="23:67" pos:end="23:78">dtb_filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="25:13" pos:end="25:22">goto <name pos:start="25:18" pos:end="25:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="31:9" pos:end="31:48"><expr pos:start="31:9" pos:end="31:47"><name pos:start="31:9" pos:end="31:11">fdt</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <call pos:start="31:15" pos:end="31:47"><name pos:start="31:15" pos:end="31:30">load_device_tree</name><argument_list pos:start="31:31" pos:end="31:47">(<argument pos:start="31:32" pos:end="31:39"><expr pos:start="31:32" pos:end="31:39"><name pos:start="31:32" pos:end="31:39">filename</name></expr></argument>, <argument pos:start="31:42" pos:end="31:46"><expr pos:start="31:42" pos:end="31:46"><operator pos:start="31:42" pos:end="31:42">&amp;</operator><name pos:start="31:43" pos:end="31:46">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="41:9"><if pos:start="33:9" pos:end="41:9">if <condition pos:start="33:12" pos:end="33:17">(<expr pos:start="33:13" pos:end="33:16"><operator pos:start="33:13" pos:end="33:13">!</operator><name pos:start="33:14" pos:end="33:16">fdt</name></expr>)</condition> <block pos:start="33:19" pos:end="41:9">{<block_content pos:start="35:13" pos:end="39:22">

            <expr_stmt pos:start="35:13" pos:end="35:69"><expr pos:start="35:13" pos:end="35:68"><call pos:start="35:13" pos:end="35:68"><name pos:start="35:13" pos:end="35:19">fprintf</name><argument_list pos:start="35:20" pos:end="35:68">(<argument pos:start="35:21" pos:end="35:26"><expr pos:start="35:21" pos:end="35:26"><name pos:start="35:21" pos:end="35:26">stderr</name></expr></argument>, <argument pos:start="35:29" pos:end="35:57"><expr pos:start="35:29" pos:end="35:57"><literal type="string" pos:start="35:29" pos:end="35:57">"Couldn't open dtb file %s\n"</literal></expr></argument>, <argument pos:start="35:60" pos:end="35:67"><expr pos:start="35:60" pos:end="35:67"><name pos:start="35:60" pos:end="35:67">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:29"><expr pos:start="37:13" pos:end="37:28"><call pos:start="37:13" pos:end="37:28"><name pos:start="37:13" pos:end="37:18">g_free</name><argument_list pos:start="37:19" pos:end="37:28">(<argument pos:start="37:20" pos:end="37:27"><expr pos:start="37:20" pos:end="37:27"><name pos:start="37:20" pos:end="37:27">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="39:13" pos:end="39:22">goto <name pos:start="39:18" pos:end="39:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:25"><expr pos:start="43:9" pos:end="43:24"><call pos:start="43:9" pos:end="43:24"><name pos:start="43:9" pos:end="43:14">g_free</name><argument_list pos:start="43:15" pos:end="43:24">(<argument pos:start="43:16" pos:end="43:23"><expr pos:start="43:16" pos:end="43:23"><name pos:start="43:16" pos:end="43:23">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="45:7" pos:end="57:5">else if <condition pos:start="45:15" pos:end="45:30">(<expr pos:start="45:16" pos:end="45:29"><name pos:start="45:16" pos:end="45:29"><name pos:start="45:16" pos:end="45:20">binfo</name><operator pos:start="45:21" pos:end="45:22">-&gt;</operator><name pos:start="45:23" pos:end="45:29">get_dtb</name></name></expr>)</condition> <block pos:start="45:32" pos:end="57:5">{<block_content pos:start="47:9" pos:end="55:9">

        <expr_stmt pos:start="47:9" pos:end="47:43"><expr pos:start="47:9" pos:end="47:42"><name pos:start="47:9" pos:end="47:11">fdt</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <call pos:start="47:15" pos:end="47:42"><name pos:start="47:15" pos:end="47:28"><name pos:start="47:15" pos:end="47:19">binfo</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:28">get_dtb</name></name><argument_list pos:start="47:29" pos:end="47:42">(<argument pos:start="47:30" pos:end="47:34"><expr pos:start="47:30" pos:end="47:34"><name pos:start="47:30" pos:end="47:34">binfo</name></expr></argument>, <argument pos:start="47:37" pos:end="47:41"><expr pos:start="47:37" pos:end="47:41"><operator pos:start="47:37" pos:end="47:37">&amp;</operator><name pos:start="47:38" pos:end="47:41">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="55:9"><if pos:start="49:9" pos:end="55:9">if <condition pos:start="49:12" pos:end="49:17">(<expr pos:start="49:13" pos:end="49:16"><operator pos:start="49:13" pos:end="49:13">!</operator><name pos:start="49:14" pos:end="49:16">fdt</name></expr>)</condition> <block pos:start="49:19" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:22">

            <expr_stmt pos:start="51:13" pos:end="51:71"><expr pos:start="51:13" pos:end="51:70"><call pos:start="51:13" pos:end="51:70"><name pos:start="51:13" pos:end="51:19">fprintf</name><argument_list pos:start="51:20" pos:end="51:70">(<argument pos:start="51:21" pos:end="51:26"><expr pos:start="51:21" pos:end="51:26"><name pos:start="51:21" pos:end="51:26">stderr</name></expr></argument>, <argument pos:start="51:29" pos:end="51:69"><expr pos:start="51:29" pos:end="51:69"><literal type="string" pos:start="51:29" pos:end="51:69">"Board was unable to create a dtb blob\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="53:13" pos:end="53:22">goto <name pos:start="53:18" pos:end="53:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="61:5" pos:end="75:5"><if pos:start="61:5" pos:end="75:5">if <condition pos:start="61:8" pos:end="61:56">(<expr pos:start="61:9" pos:end="61:55"><name pos:start="61:9" pos:end="61:18">addr_limit</name> <operator pos:start="61:20" pos:end="61:20">&gt;</operator> <name pos:start="61:22" pos:end="61:25">addr</name> <operator pos:start="61:27" pos:end="61:28">&amp;&amp;</operator> <name pos:start="61:30" pos:end="61:33">size</name> <operator pos:start="61:35" pos:end="61:35">&gt;</operator> <operator pos:start="61:37" pos:end="61:37">(</operator><name pos:start="61:38" pos:end="61:47">addr_limit</name> <operator pos:start="61:49" pos:end="61:49">-</operator> <name pos:start="61:51" pos:end="61:54">addr</name><operator pos:start="61:55" pos:end="61:55">)</operator></expr>)</condition> <block pos:start="61:58" pos:end="75:5">{<block_content pos:start="71:9" pos:end="73:17">

        <comment type="block" pos:start="63:9" pos:end="69:11">/* Installing the device tree blob at addr would exceed addr_limit.

         * Whether this constitutes failure is up to the caller to decide,

         * so just return 0 as size, i.e., no error.

         */</comment>

        <expr_stmt pos:start="71:9" pos:end="71:20"><expr pos:start="71:9" pos:end="71:19"><call pos:start="71:9" pos:end="71:19"><name pos:start="71:9" pos:end="71:14">g_free</name><argument_list pos:start="71:15" pos:end="71:19">(<argument pos:start="71:16" pos:end="71:18"><expr pos:start="71:16" pos:end="71:18"><name pos:start="71:16" pos:end="71:18">fdt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="73:9" pos:end="73:17">return <expr pos:start="73:16" pos:end="73:16"><literal type="number" pos:start="73:16" pos:end="73:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:63"><expr pos:start="79:5" pos:end="79:62"><name pos:start="79:5" pos:end="79:10">acells</name> <operator pos:start="79:12" pos:end="79:12">=</operator> <call pos:start="79:14" pos:end="79:62"><name pos:start="79:14" pos:end="79:34">qemu_fdt_getprop_cell</name><argument_list pos:start="79:35" pos:end="79:62">(<argument pos:start="79:36" pos:end="79:38"><expr pos:start="79:36" pos:end="79:38"><name pos:start="79:36" pos:end="79:38">fdt</name></expr></argument>, <argument pos:start="79:41" pos:end="79:43"><expr pos:start="79:41" pos:end="79:43"><literal type="string" pos:start="79:41" pos:end="79:43">"/"</literal></expr></argument>, <argument pos:start="79:46" pos:end="79:61"><expr pos:start="79:46" pos:end="79:61"><literal type="string" pos:start="79:46" pos:end="79:61">"#address-cells"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:60"><expr pos:start="81:5" pos:end="81:59"><name pos:start="81:5" pos:end="81:10">scells</name> <operator pos:start="81:12" pos:end="81:12">=</operator> <call pos:start="81:14" pos:end="81:59"><name pos:start="81:14" pos:end="81:34">qemu_fdt_getprop_cell</name><argument_list pos:start="81:35" pos:end="81:59">(<argument pos:start="81:36" pos:end="81:38"><expr pos:start="81:36" pos:end="81:38"><name pos:start="81:36" pos:end="81:38">fdt</name></expr></argument>, <argument pos:start="81:41" pos:end="81:43"><expr pos:start="81:41" pos:end="81:43"><literal type="string" pos:start="81:41" pos:end="81:43">"/"</literal></expr></argument>, <argument pos:start="81:46" pos:end="81:58"><expr pos:start="81:46" pos:end="81:58"><literal type="string" pos:start="81:46" pos:end="81:58">"#size-cells"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="83:5" pos:end="89:5"><if pos:start="83:5" pos:end="89:5">if <condition pos:start="83:8" pos:end="83:35">(<expr pos:start="83:9" pos:end="83:34"><name pos:start="83:9" pos:end="83:14">acells</name> <operator pos:start="83:16" pos:end="83:17">==</operator> <literal type="number" pos:start="83:19" pos:end="83:19">0</literal> <operator pos:start="83:21" pos:end="83:22">||</operator> <name pos:start="83:24" pos:end="83:29">scells</name> <operator pos:start="83:31" pos:end="83:32">==</operator> <literal type="number" pos:start="83:34" pos:end="83:34">0</literal></expr>)</condition> <block pos:start="83:37" pos:end="89:5">{<block_content pos:start="85:9" pos:end="87:18">

        <expr_stmt pos:start="85:9" pos:end="85:80"><expr pos:start="85:9" pos:end="85:79"><call pos:start="85:9" pos:end="85:79"><name pos:start="85:9" pos:end="85:15">fprintf</name><argument_list pos:start="85:16" pos:end="85:79">(<argument pos:start="85:17" pos:end="85:22"><expr pos:start="85:17" pos:end="85:22"><name pos:start="85:17" pos:end="85:22">stderr</name></expr></argument>, <argument pos:start="85:25" pos:end="85:78"><expr pos:start="85:25" pos:end="85:78"><literal type="string" pos:start="85:25" pos:end="85:78">"dtb file invalid (#address-cells or #size-cells 0)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="87:9" pos:end="87:18">goto <name pos:start="87:14" pos:end="87:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="93:5" pos:end="107:5"><if pos:start="93:5" pos:end="107:5">if <condition pos:start="93:8" pos:end="93:54">(<expr pos:start="93:9" pos:end="93:53"><name pos:start="93:9" pos:end="93:14">scells</name> <operator pos:start="93:16" pos:end="93:16">&lt;</operator> <literal type="number" pos:start="93:18" pos:end="93:18">2</literal> <operator pos:start="93:20" pos:end="93:21">&amp;&amp;</operator> <name pos:start="93:23" pos:end="93:37"><name pos:start="93:23" pos:end="93:27">binfo</name><operator pos:start="93:28" pos:end="93:29">-&gt;</operator><name pos:start="93:30" pos:end="93:37">ram_size</name></name> <operator pos:start="93:39" pos:end="93:40">&gt;=</operator> <operator pos:start="93:42" pos:end="93:42">(</operator><literal type="number" pos:start="93:43" pos:end="93:46">1ULL</literal> <operator pos:start="93:48" pos:end="93:49">&lt;&lt;</operator> <literal type="number" pos:start="93:51" pos:end="93:52">32</literal><operator pos:start="93:53" pos:end="93:53">)</operator></expr>)</condition> <block pos:start="93:56" pos:end="107:5">{<block_content pos:start="101:9" pos:end="105:18">

        <comment type="block" pos:start="95:9" pos:end="99:11">/* This is user error so deserves a friendlier error message

         * than the failure of setprop_sized_cells would provide

         */</comment>

        <expr_stmt pos:start="101:9" pos:end="103:36"><expr pos:start="101:9" pos:end="103:35"><call pos:start="101:9" pos:end="103:35"><name pos:start="101:9" pos:end="101:15">fprintf</name><argument_list pos:start="101:16" pos:end="103:35">(<argument pos:start="101:17" pos:end="101:22"><expr pos:start="101:17" pos:end="101:22"><name pos:start="101:17" pos:end="101:22">stderr</name></expr></argument>, <argument pos:start="101:25" pos:end="103:34"><expr pos:start="101:25" pos:end="103:34"><literal type="string" pos:start="101:25" pos:end="101:61">"qemu: dtb file not compatible with "</literal>

                <literal type="string" pos:start="103:17" pos:end="103:34">"RAM size &gt; 4GB\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="105:9" pos:end="105:18">goto <name pos:start="105:14" pos:end="105:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="111:5" pos:end="115:63"><expr pos:start="111:5" pos:end="115:62"><name pos:start="111:5" pos:end="111:6">rc</name> <operator pos:start="111:8" pos:end="111:8">=</operator> <call pos:start="111:10" pos:end="115:62"><name pos:start="111:10" pos:end="111:37">qemu_fdt_setprop_sized_cells</name><argument_list pos:start="111:38" pos:end="115:62">(<argument pos:start="111:39" pos:end="111:41"><expr pos:start="111:39" pos:end="111:41"><name pos:start="111:39" pos:end="111:41">fdt</name></expr></argument>, <argument pos:start="111:44" pos:end="111:52"><expr pos:start="111:44" pos:end="111:52"><literal type="string" pos:start="111:44" pos:end="111:52">"/memory"</literal></expr></argument>, <argument pos:start="111:55" pos:end="111:59"><expr pos:start="111:55" pos:end="111:59"><literal type="string" pos:start="111:55" pos:end="111:59">"reg"</literal></expr></argument>,

                                      <argument pos:start="113:39" pos:end="113:44"><expr pos:start="113:39" pos:end="113:44"><name pos:start="113:39" pos:end="113:44">acells</name></expr></argument>, <argument pos:start="113:47" pos:end="113:65"><expr pos:start="113:47" pos:end="113:65"><name pos:start="113:47" pos:end="113:65"><name pos:start="113:47" pos:end="113:51">binfo</name><operator pos:start="113:52" pos:end="113:53">-&gt;</operator><name pos:start="113:54" pos:end="113:65">loader_start</name></name></expr></argument>,

                                      <argument pos:start="115:39" pos:end="115:44"><expr pos:start="115:39" pos:end="115:44"><name pos:start="115:39" pos:end="115:44">scells</name></expr></argument>, <argument pos:start="115:47" pos:end="115:61"><expr pos:start="115:47" pos:end="115:61"><name pos:start="115:47" pos:end="115:61"><name pos:start="115:47" pos:end="115:51">binfo</name><operator pos:start="115:52" pos:end="115:53">-&gt;</operator><name pos:start="115:54" pos:end="115:61">ram_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="117:5" pos:end="123:5"><if pos:start="117:5" pos:end="123:5">if <condition pos:start="117:8" pos:end="117:15">(<expr pos:start="117:9" pos:end="117:14"><name pos:start="117:9" pos:end="117:10">rc</name> <operator pos:start="117:12" pos:end="117:12">&lt;</operator> <literal type="number" pos:start="117:14" pos:end="117:14">0</literal></expr>)</condition> <block pos:start="117:17" pos:end="123:5">{<block_content pos:start="119:9" pos:end="121:18">

        <expr_stmt pos:start="119:9" pos:end="119:54"><expr pos:start="119:9" pos:end="119:53"><call pos:start="119:9" pos:end="119:53"><name pos:start="119:9" pos:end="119:15">fprintf</name><argument_list pos:start="119:16" pos:end="119:53">(<argument pos:start="119:17" pos:end="119:22"><expr pos:start="119:17" pos:end="119:22"><name pos:start="119:17" pos:end="119:22">stderr</name></expr></argument>, <argument pos:start="119:25" pos:end="119:52"><expr pos:start="119:25" pos:end="119:52"><literal type="string" pos:start="119:25" pos:end="119:52">"couldn't set /memory/reg\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="121:9" pos:end="121:18">goto <name pos:start="121:14" pos:end="121:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="127:5" pos:end="141:5"><if pos:start="127:5" pos:end="141:5">if <condition pos:start="127:8" pos:end="127:56">(<expr pos:start="127:9" pos:end="127:55"><name pos:start="127:9" pos:end="127:29"><name pos:start="127:9" pos:end="127:13">binfo</name><operator pos:start="127:14" pos:end="127:15">-&gt;</operator><name pos:start="127:16" pos:end="127:29">kernel_cmdline</name></name> <operator pos:start="127:31" pos:end="127:32">&amp;&amp;</operator> <operator pos:start="127:34" pos:end="127:34">*</operator><name pos:start="127:35" pos:end="127:55"><name pos:start="127:35" pos:end="127:39">binfo</name><operator pos:start="127:40" pos:end="127:41">-&gt;</operator><name pos:start="127:42" pos:end="127:55">kernel_cmdline</name></name></expr>)</condition> <block pos:start="127:58" pos:end="141:5">{<block_content pos:start="129:9" pos:end="139:9">

        <expr_stmt pos:start="129:9" pos:end="131:60"><expr pos:start="129:9" pos:end="131:59"><name pos:start="129:9" pos:end="129:10">rc</name> <operator pos:start="129:12" pos:end="129:12">=</operator> <call pos:start="129:14" pos:end="131:59"><name pos:start="129:14" pos:end="129:36">qemu_fdt_setprop_string</name><argument_list pos:start="129:37" pos:end="131:59">(<argument pos:start="129:38" pos:end="129:40"><expr pos:start="129:38" pos:end="129:40"><name pos:start="129:38" pos:end="129:40">fdt</name></expr></argument>, <argument pos:start="129:43" pos:end="129:51"><expr pos:start="129:43" pos:end="129:51"><literal type="string" pos:start="129:43" pos:end="129:51">"/chosen"</literal></expr></argument>, <argument pos:start="129:54" pos:end="129:63"><expr pos:start="129:54" pos:end="129:63"><literal type="string" pos:start="129:54" pos:end="129:63">"bootargs"</literal></expr></argument>,

                                     <argument pos:start="131:38" pos:end="131:58"><expr pos:start="131:38" pos:end="131:58"><name pos:start="131:38" pos:end="131:58"><name pos:start="131:38" pos:end="131:42">binfo</name><operator pos:start="131:43" pos:end="131:44">-&gt;</operator><name pos:start="131:45" pos:end="131:58">kernel_cmdline</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="133:9" pos:end="139:9"><if pos:start="133:9" pos:end="139:9">if <condition pos:start="133:12" pos:end="133:19">(<expr pos:start="133:13" pos:end="133:18"><name pos:start="133:13" pos:end="133:14">rc</name> <operator pos:start="133:16" pos:end="133:16">&lt;</operator> <literal type="number" pos:start="133:18" pos:end="133:18">0</literal></expr>)</condition> <block pos:start="133:21" pos:end="139:9">{<block_content pos:start="135:13" pos:end="137:22">

            <expr_stmt pos:start="135:13" pos:end="135:63"><expr pos:start="135:13" pos:end="135:62"><call pos:start="135:13" pos:end="135:62"><name pos:start="135:13" pos:end="135:19">fprintf</name><argument_list pos:start="135:20" pos:end="135:62">(<argument pos:start="135:21" pos:end="135:26"><expr pos:start="135:21" pos:end="135:26"><name pos:start="135:21" pos:end="135:26">stderr</name></expr></argument>, <argument pos:start="135:29" pos:end="135:61"><expr pos:start="135:29" pos:end="135:61"><literal type="string" pos:start="135:29" pos:end="135:61">"couldn't set /chosen/bootargs\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="137:13" pos:end="137:22">goto <name pos:start="137:18" pos:end="137:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="145:5" pos:end="173:5"><if pos:start="145:5" pos:end="173:5">if <condition pos:start="145:8" pos:end="145:27">(<expr pos:start="145:9" pos:end="145:26"><name pos:start="145:9" pos:end="145:26"><name pos:start="145:9" pos:end="145:13">binfo</name><operator pos:start="145:14" pos:end="145:15">-&gt;</operator><name pos:start="145:16" pos:end="145:26">initrd_size</name></name></expr>)</condition> <block pos:start="145:29" pos:end="173:5">{<block_content pos:start="147:9" pos:end="171:9">

        <expr_stmt pos:start="147:9" pos:end="149:56"><expr pos:start="147:9" pos:end="149:55"><name pos:start="147:9" pos:end="147:10">rc</name> <operator pos:start="147:12" pos:end="147:12">=</operator> <call pos:start="147:14" pos:end="149:55"><name pos:start="147:14" pos:end="147:34">qemu_fdt_setprop_cell</name><argument_list pos:start="147:35" pos:end="149:55">(<argument pos:start="147:36" pos:end="147:38"><expr pos:start="147:36" pos:end="147:38"><name pos:start="147:36" pos:end="147:38">fdt</name></expr></argument>, <argument pos:start="147:41" pos:end="147:49"><expr pos:start="147:41" pos:end="147:49"><literal type="string" pos:start="147:41" pos:end="147:49">"/chosen"</literal></expr></argument>, <argument pos:start="147:52" pos:end="147:71"><expr pos:start="147:52" pos:end="147:71"><literal type="string" pos:start="147:52" pos:end="147:71">"linux,initrd-start"</literal></expr></argument>,

                                   <argument pos:start="149:36" pos:end="149:54"><expr pos:start="149:36" pos:end="149:54"><name pos:start="149:36" pos:end="149:54"><name pos:start="149:36" pos:end="149:40">binfo</name><operator pos:start="149:41" pos:end="149:42">-&gt;</operator><name pos:start="149:43" pos:end="149:54">initrd_start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="151:9" pos:end="157:9"><if pos:start="151:9" pos:end="157:9">if <condition pos:start="151:12" pos:end="151:19">(<expr pos:start="151:13" pos:end="151:18"><name pos:start="151:13" pos:end="151:14">rc</name> <operator pos:start="151:16" pos:end="151:16">&lt;</operator> <literal type="number" pos:start="151:18" pos:end="151:18">0</literal></expr>)</condition> <block pos:start="151:21" pos:end="157:9">{<block_content pos:start="153:13" pos:end="155:22">

            <expr_stmt pos:start="153:13" pos:end="153:73"><expr pos:start="153:13" pos:end="153:72"><call pos:start="153:13" pos:end="153:72"><name pos:start="153:13" pos:end="153:19">fprintf</name><argument_list pos:start="153:20" pos:end="153:72">(<argument pos:start="153:21" pos:end="153:26"><expr pos:start="153:21" pos:end="153:26"><name pos:start="153:21" pos:end="153:26">stderr</name></expr></argument>, <argument pos:start="153:29" pos:end="153:71"><expr pos:start="153:29" pos:end="153:71"><literal type="string" pos:start="153:29" pos:end="153:71">"couldn't set /chosen/linux,initrd-start\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="155:13" pos:end="155:22">goto <name pos:start="155:18" pos:end="155:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="161:9" pos:end="163:77"><expr pos:start="161:9" pos:end="163:76"><name pos:start="161:9" pos:end="161:10">rc</name> <operator pos:start="161:12" pos:end="161:12">=</operator> <call pos:start="161:14" pos:end="163:76"><name pos:start="161:14" pos:end="161:34">qemu_fdt_setprop_cell</name><argument_list pos:start="161:35" pos:end="163:76">(<argument pos:start="161:36" pos:end="161:38"><expr pos:start="161:36" pos:end="161:38"><name pos:start="161:36" pos:end="161:38">fdt</name></expr></argument>, <argument pos:start="161:41" pos:end="161:49"><expr pos:start="161:41" pos:end="161:49"><literal type="string" pos:start="161:41" pos:end="161:49">"/chosen"</literal></expr></argument>, <argument pos:start="161:52" pos:end="161:69"><expr pos:start="161:52" pos:end="161:69"><literal type="string" pos:start="161:52" pos:end="161:69">"linux,initrd-end"</literal></expr></argument>,

                                   <argument pos:start="163:36" pos:end="163:75"><expr pos:start="163:36" pos:end="163:75"><name pos:start="163:36" pos:end="163:54"><name pos:start="163:36" pos:end="163:40">binfo</name><operator pos:start="163:41" pos:end="163:42">-&gt;</operator><name pos:start="163:43" pos:end="163:54">initrd_start</name></name> <operator pos:start="163:56" pos:end="163:56">+</operator> <name pos:start="163:58" pos:end="163:75"><name pos:start="163:58" pos:end="163:62">binfo</name><operator pos:start="163:63" pos:end="163:64">-&gt;</operator><name pos:start="163:65" pos:end="163:75">initrd_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="165:9" pos:end="171:9"><if pos:start="165:9" pos:end="171:9">if <condition pos:start="165:12" pos:end="165:19">(<expr pos:start="165:13" pos:end="165:18"><name pos:start="165:13" pos:end="165:14">rc</name> <operator pos:start="165:16" pos:end="165:16">&lt;</operator> <literal type="number" pos:start="165:18" pos:end="165:18">0</literal></expr>)</condition> <block pos:start="165:21" pos:end="171:9">{<block_content pos:start="167:13" pos:end="169:22">

            <expr_stmt pos:start="167:13" pos:end="167:71"><expr pos:start="167:13" pos:end="167:70"><call pos:start="167:13" pos:end="167:70"><name pos:start="167:13" pos:end="167:19">fprintf</name><argument_list pos:start="167:20" pos:end="167:70">(<argument pos:start="167:21" pos:end="167:26"><expr pos:start="167:21" pos:end="167:26"><name pos:start="167:21" pos:end="167:26">stderr</name></expr></argument>, <argument pos:start="167:29" pos:end="167:69"><expr pos:start="167:29" pos:end="167:69"><literal type="string" pos:start="167:29" pos:end="167:69">"couldn't set /chosen/linux,initrd-end\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="169:13" pos:end="169:22">goto <name pos:start="169:18" pos:end="169:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="177:5" pos:end="181:5"><if pos:start="177:5" pos:end="181:5">if <condition pos:start="177:8" pos:end="177:26">(<expr pos:start="177:9" pos:end="177:25"><name pos:start="177:9" pos:end="177:25"><name pos:start="177:9" pos:end="177:13">binfo</name><operator pos:start="177:14" pos:end="177:15">-&gt;</operator><name pos:start="177:16" pos:end="177:25">modify_dtb</name></name></expr>)</condition> <block pos:start="177:28" pos:end="181:5">{<block_content pos:start="179:9" pos:end="179:38">

        <expr_stmt pos:start="179:9" pos:end="179:38"><expr pos:start="179:9" pos:end="179:37"><call pos:start="179:9" pos:end="179:37"><name pos:start="179:9" pos:end="179:25"><name pos:start="179:9" pos:end="179:13">binfo</name><operator pos:start="179:14" pos:end="179:15">-&gt;</operator><name pos:start="179:16" pos:end="179:25">modify_dtb</name></name><argument_list pos:start="179:26" pos:end="179:37">(<argument pos:start="179:27" pos:end="179:31"><expr pos:start="179:27" pos:end="179:31"><name pos:start="179:27" pos:end="179:31">binfo</name></expr></argument>, <argument pos:start="179:34" pos:end="179:36"><expr pos:start="179:34" pos:end="179:36"><name pos:start="179:34" pos:end="179:36">fdt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="185:5" pos:end="185:32"><expr pos:start="185:5" pos:end="185:31"><call pos:start="185:5" pos:end="185:31"><name pos:start="185:5" pos:end="185:20">qemu_fdt_dumpdtb</name><argument_list pos:start="185:21" pos:end="185:31">(<argument pos:start="185:22" pos:end="185:24"><expr pos:start="185:22" pos:end="185:24"><name pos:start="185:22" pos:end="185:24">fdt</name></expr></argument>, <argument pos:start="185:27" pos:end="185:30"><expr pos:start="185:27" pos:end="185:30"><name pos:start="185:27" pos:end="185:30">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="189:5" pos:end="193:7">/* Put the DTB into the memory map as a ROM image: this will ensure

     * the DTB is copied again upon reset, even if addr points into RAM.

     */</comment>

    <expr_stmt pos:start="195:5" pos:end="195:47"><expr pos:start="195:5" pos:end="195:46"><call pos:start="195:5" pos:end="195:46"><name pos:start="195:5" pos:end="195:22">rom_add_blob_fixed</name><argument_list pos:start="195:23" pos:end="195:46">(<argument pos:start="195:24" pos:end="195:28"><expr pos:start="195:24" pos:end="195:28"><literal type="string" pos:start="195:24" pos:end="195:28">"dtb"</literal></expr></argument>, <argument pos:start="195:31" pos:end="195:33"><expr pos:start="195:31" pos:end="195:33"><name pos:start="195:31" pos:end="195:33">fdt</name></expr></argument>, <argument pos:start="195:36" pos:end="195:39"><expr pos:start="195:36" pos:end="195:39"><name pos:start="195:36" pos:end="195:39">size</name></expr></argument>, <argument pos:start="195:42" pos:end="195:45"><expr pos:start="195:42" pos:end="195:45"><name pos:start="195:42" pos:end="195:45">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="199:5" pos:end="199:16"><expr pos:start="199:5" pos:end="199:15"><call pos:start="199:5" pos:end="199:15"><name pos:start="199:5" pos:end="199:10">g_free</name><argument_list pos:start="199:11" pos:end="199:15">(<argument pos:start="199:12" pos:end="199:14"><expr pos:start="199:12" pos:end="199:14"><name pos:start="199:12" pos:end="199:14">fdt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="203:5" pos:end="203:16">return <expr pos:start="203:12" pos:end="203:15"><name pos:start="203:12" pos:end="203:15">size</name></expr>;</return>



<label pos:start="207:1" pos:end="207:5"><name pos:start="207:1" pos:end="207:4">fail</name>:</label>

    <expr_stmt pos:start="209:5" pos:end="209:16"><expr pos:start="209:5" pos:end="209:15"><call pos:start="209:5" pos:end="209:15"><name pos:start="209:5" pos:end="209:10">g_free</name><argument_list pos:start="209:11" pos:end="209:15">(<argument pos:start="209:12" pos:end="209:14"><expr pos:start="209:12" pos:end="209:14"><name pos:start="209:12" pos:end="209:14">fdt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="211:5" pos:end="211:14">return <expr pos:start="211:12" pos:end="211:13"><operator pos:start="211:12" pos:end="211:12">-</operator><literal type="number" pos:start="211:13" pos:end="211:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
