<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3680.c" pos:tabs="8"><function pos:start="1:1" pos:end="241:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:35">gen_intermediate_code_internal</name><parameter_list pos:start="1:36" pos:end="3:73">(<parameter pos:start="1:37" pos:end="1:48"><decl pos:start="1:37" pos:end="1:48"><type pos:start="1:37" pos:end="1:48"><name pos:start="1:37" pos:end="1:43">LM32CPU</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">cpu</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:56"><decl pos:start="3:37" pos:end="3:56"><type pos:start="3:37" pos:end="3:56"><name pos:start="3:37" pos:end="3:52">TranslationBlock</name> <modifier pos:start="3:54" pos:end="3:54">*</modifier></type><name pos:start="3:55" pos:end="3:56">tb</name></decl></parameter>, <parameter pos:start="3:59" pos:end="3:72"><decl pos:start="3:59" pos:end="3:72"><type pos:start="3:59" pos:end="3:72"><name pos:start="3:59" pos:end="3:62">bool</name></type> <name pos:start="3:64" pos:end="3:72">search_pc</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="241:1">{<block_content pos:start="7:5" pos:end="240:0">

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">CPUState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">cs</name> <init pos:start="7:18" pos:end="7:27">= <expr pos:start="7:20" pos:end="7:27"><call pos:start="7:20" pos:end="7:27"><name pos:start="7:20" pos:end="7:22">CPU</name><argument_list pos:start="7:23" pos:end="7:27">(<argument pos:start="7:24" pos:end="7:26"><expr pos:start="7:24" pos:end="7:26"><name pos:start="7:24" pos:end="7:26">cpu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">CPULM32State</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:21">env</name> <init pos:start="9:23" pos:end="9:33">= <expr pos:start="9:25" pos:end="9:33"><operator pos:start="9:25" pos:end="9:25">&amp;</operator><name pos:start="9:26" pos:end="9:33"><name pos:start="9:26" pos:end="9:28">cpu</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:33">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:40"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:23">DisasContext</name></name></type> <name pos:start="11:25" pos:end="11:27">ctx</name></decl>, <decl pos:start="11:30" pos:end="11:39"><type ref="prev" pos:start="11:5" pos:end="11:23"><modifier pos:start="11:30" pos:end="11:30">*</modifier></type><name pos:start="11:31" pos:end="11:32">dc</name> <init pos:start="11:34" pos:end="11:39">= <expr pos:start="11:36" pos:end="11:39"><operator pos:start="11:36" pos:end="11:36">&amp;</operator><name pos:start="11:37" pos:end="11:39">ctx</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:25"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">uint16_t</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:25">gen_opc_end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:21">pc_start</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:14"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">j</name></decl>, <decl pos:start="17:12" pos:end="17:13"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:12" pos:end="17:13">lj</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:29"><decl pos:start="19:5" pos:end="19:28"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint32_t</name></type> <name pos:start="19:14" pos:end="19:28">next_page_start</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:18"><decl pos:start="21:5" pos:end="21:17"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:17">num_insns</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:18"><decl pos:start="23:5" pos:end="23:17"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:17">max_insns</name></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:22"><expr pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:12">pc_start</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <name pos:start="27:16" pos:end="27:21"><name pos:start="27:16" pos:end="27:17">tb</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:21">pc</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:18"><expr pos:start="29:5" pos:end="29:17"><name pos:start="29:5" pos:end="29:11"><name pos:start="29:5" pos:end="29:6">dc</name><operator pos:start="29:7" pos:end="29:8">-&gt;</operator><name pos:start="29:9" pos:end="29:11">env</name></name> <operator pos:start="29:13" pos:end="29:13">=</operator> <name pos:start="29:15" pos:end="29:17">env</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:16"><expr pos:start="31:5" pos:end="31:15"><name pos:start="31:5" pos:end="31:10"><name pos:start="31:5" pos:end="31:6">dc</name><operator pos:start="31:7" pos:end="31:8">-&gt;</operator><name pos:start="31:9" pos:end="31:10">tb</name></name> <operator pos:start="31:12" pos:end="31:12">=</operator> <name pos:start="31:14" pos:end="31:15">tb</name></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:53"><expr pos:start="35:5" pos:end="35:52"><name pos:start="35:5" pos:end="35:15">gen_opc_end</name> <operator pos:start="35:17" pos:end="35:17">=</operator> <name pos:start="35:19" pos:end="35:37"><name pos:start="35:19" pos:end="35:25">tcg_ctx</name><operator pos:start="35:26" pos:end="35:26">.</operator><name pos:start="35:27" pos:end="35:37">gen_opc_buf</name></name> <operator pos:start="35:39" pos:end="35:39">+</operator> <name pos:start="35:41" pos:end="35:52">OPC_MAX_SIZE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:28"><expr pos:start="39:5" pos:end="39:27"><name pos:start="39:5" pos:end="39:14"><name pos:start="39:5" pos:end="39:6">dc</name><operator pos:start="39:7" pos:end="39:8">-&gt;</operator><name pos:start="39:9" pos:end="39:14">is_jmp</name></name> <operator pos:start="39:16" pos:end="39:16">=</operator> <name pos:start="39:18" pos:end="39:27">DISAS_NEXT</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:22"><expr pos:start="41:5" pos:end="41:21"><name pos:start="41:5" pos:end="41:10"><name pos:start="41:5" pos:end="41:6">dc</name><operator pos:start="41:7" pos:end="41:8">-&gt;</operator><name pos:start="41:9" pos:end="41:10">pc</name></name> <operator pos:start="41:12" pos:end="41:12">=</operator> <name pos:start="41:14" pos:end="41:21">pc_start</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:52"><expr pos:start="43:5" pos:end="43:51"><name pos:start="43:5" pos:end="43:26"><name pos:start="43:5" pos:end="43:6">dc</name><operator pos:start="43:7" pos:end="43:8">-&gt;</operator><name pos:start="43:9" pos:end="43:26">singlestep_enabled</name></name> <operator pos:start="43:28" pos:end="43:28">=</operator> <name pos:start="43:30" pos:end="43:51"><name pos:start="43:30" pos:end="43:31">cs</name><operator pos:start="43:32" pos:end="43:33">-&gt;</operator><name pos:start="43:34" pos:end="43:51">singlestep_enabled</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:20"><expr pos:start="45:5" pos:end="45:19"><name pos:start="45:5" pos:end="45:15"><name pos:start="45:5" pos:end="45:6">dc</name><operator pos:start="45:7" pos:end="45:8">-&gt;</operator><name pos:start="45:9" pos:end="45:15">nr_nops</name></name> <operator pos:start="45:17" pos:end="45:17">=</operator> <literal type="number" pos:start="45:19" pos:end="45:19">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="49:5" pos:end="53:5"><if pos:start="49:5" pos:end="53:5">if <condition pos:start="49:8" pos:end="49:21">(<expr pos:start="49:9" pos:end="49:20"><name pos:start="49:9" pos:end="49:16">pc_start</name> <operator pos:start="49:18" pos:end="49:18">&amp;</operator> <literal type="number" pos:start="49:20" pos:end="49:20">3</literal></expr>)</condition> <block pos:start="49:23" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:60">

        <expr_stmt pos:start="51:9" pos:end="51:60"><expr pos:start="51:9" pos:end="51:59"><call pos:start="51:9" pos:end="51:59"><name pos:start="51:9" pos:end="51:17">cpu_abort</name><argument_list pos:start="51:18" pos:end="51:59">(<argument pos:start="51:19" pos:end="51:21"><expr pos:start="51:19" pos:end="51:21"><name pos:start="51:19" pos:end="51:21">env</name></expr></argument>, <argument pos:start="51:24" pos:end="51:48"><expr pos:start="51:24" pos:end="51:48"><literal type="string" pos:start="51:24" pos:end="51:48">"LM32: unaligned PC=%x\n"</literal></expr></argument>, <argument pos:start="51:51" pos:end="51:58"><expr pos:start="51:51" pos:end="51:58"><name pos:start="51:51" pos:end="51:58">pc_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:71"><expr pos:start="57:5" pos:end="57:70"><name pos:start="57:5" pos:end="57:19">next_page_start</name> <operator pos:start="57:21" pos:end="57:21">=</operator> <operator pos:start="57:23" pos:end="57:23">(</operator><name pos:start="57:24" pos:end="57:31">pc_start</name> <operator pos:start="57:33" pos:end="57:33">&amp;</operator> <name pos:start="57:35" pos:end="57:50">TARGET_PAGE_MASK</name><operator pos:start="57:51" pos:end="57:51">)</operator> <operator pos:start="57:53" pos:end="57:53">+</operator> <name pos:start="57:55" pos:end="57:70">TARGET_PAGE_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:12"><expr pos:start="59:5" pos:end="59:11"><name pos:start="59:5" pos:end="59:6">lj</name> <operator pos:start="59:8" pos:end="59:8">=</operator> <operator pos:start="59:10" pos:end="59:10">-</operator><literal type="number" pos:start="59:11" pos:end="59:11">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:18"><expr pos:start="61:5" pos:end="61:17"><name pos:start="61:5" pos:end="61:13">num_insns</name> <operator pos:start="61:15" pos:end="61:15">=</operator> <literal type="number" pos:start="61:17" pos:end="61:17">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:43"><expr pos:start="63:5" pos:end="63:42"><name pos:start="63:5" pos:end="63:13">max_insns</name> <operator pos:start="63:15" pos:end="63:15">=</operator> <name pos:start="63:17" pos:end="63:26"><name pos:start="63:17" pos:end="63:18">tb</name><operator pos:start="63:19" pos:end="63:20">-&gt;</operator><name pos:start="63:21" pos:end="63:26">cflags</name></name> <operator pos:start="63:28" pos:end="63:28">&amp;</operator> <name pos:start="63:30" pos:end="63:42">CF_COUNT_MASK</name></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="69:5"><if pos:start="65:5" pos:end="69:5">if <condition pos:start="65:8" pos:end="65:23">(<expr pos:start="65:9" pos:end="65:22"><name pos:start="65:9" pos:end="65:17">max_insns</name> <operator pos:start="65:19" pos:end="65:20">==</operator> <literal type="number" pos:start="65:22" pos:end="65:22">0</literal></expr>)</condition> <block pos:start="65:25" pos:end="69:5">{<block_content pos:start="67:9" pos:end="67:34">

        <expr_stmt pos:start="67:9" pos:end="67:34"><expr pos:start="67:9" pos:end="67:33"><name pos:start="67:9" pos:end="67:17">max_insns</name> <operator pos:start="67:19" pos:end="67:19">=</operator> <name pos:start="67:21" pos:end="67:33">CF_COUNT_MASK</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:19"><expr pos:start="73:5" pos:end="73:18"><call pos:start="73:5" pos:end="73:18"><name pos:start="73:5" pos:end="73:16">gen_tb_start</name><argument_list pos:start="73:17" pos:end="73:18">()</argument_list></call></expr>;</expr_stmt>

    <do pos:start="75:5" pos:end="139:35">do <block pos:start="75:8" pos:end="129:5">{<block_content pos:start="77:9" pos:end="125:20">

        <expr_stmt pos:start="77:9" pos:end="77:34"><expr pos:start="77:9" pos:end="77:33"><call pos:start="77:9" pos:end="77:33"><name pos:start="77:9" pos:end="77:24">check_breakpoint</name><argument_list pos:start="77:25" pos:end="77:33">(<argument pos:start="77:26" pos:end="77:28"><expr pos:start="77:26" pos:end="77:28"><name pos:start="77:26" pos:end="77:28">env</name></expr></argument>, <argument pos:start="77:31" pos:end="77:32"><expr pos:start="77:31" pos:end="77:32"><name pos:start="77:31" pos:end="77:32">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="81:9" pos:end="103:9"><if pos:start="81:9" pos:end="103:9">if <condition pos:start="81:12" pos:end="81:22">(<expr pos:start="81:13" pos:end="81:21"><name pos:start="81:13" pos:end="81:21">search_pc</name></expr>)</condition> <block pos:start="81:24" pos:end="103:9">{<block_content pos:start="83:13" pos:end="101:51">

            <expr_stmt pos:start="83:13" pos:end="83:58"><expr pos:start="83:13" pos:end="83:57"><name pos:start="83:13" pos:end="83:13">j</name> <operator pos:start="83:15" pos:end="83:15">=</operator> <name pos:start="83:17" pos:end="83:35"><name pos:start="83:17" pos:end="83:23">tcg_ctx</name><operator pos:start="83:24" pos:end="83:24">.</operator><name pos:start="83:25" pos:end="83:35">gen_opc_ptr</name></name> <operator pos:start="83:37" pos:end="83:37">-</operator> <name pos:start="83:39" pos:end="83:57"><name pos:start="83:39" pos:end="83:45">tcg_ctx</name><operator pos:start="83:46" pos:end="83:46">.</operator><name pos:start="83:47" pos:end="83:57">gen_opc_buf</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="85:13" pos:end="95:13"><if pos:start="85:13" pos:end="95:13">if <condition pos:start="85:16" pos:end="85:23">(<expr pos:start="85:17" pos:end="85:22"><name pos:start="85:17" pos:end="85:18">lj</name> <operator pos:start="85:20" pos:end="85:20">&lt;</operator> <name pos:start="85:22" pos:end="85:22">j</name></expr>)</condition> <block pos:start="85:25" pos:end="95:13">{<block_content pos:start="87:17" pos:end="93:17">

                <expr_stmt pos:start="87:17" pos:end="87:21"><expr pos:start="87:17" pos:end="87:20"><name pos:start="87:17" pos:end="87:18">lj</name><operator pos:start="87:19" pos:end="87:20">++</operator></expr>;</expr_stmt>

                <while pos:start="89:17" pos:end="93:17">while <condition pos:start="89:23" pos:end="89:30">(<expr pos:start="89:24" pos:end="89:29"><name pos:start="89:24" pos:end="89:25">lj</name> <operator pos:start="89:27" pos:end="89:27">&lt;</operator> <name pos:start="89:29" pos:end="89:29">j</name></expr>)</condition> <block pos:start="89:32" pos:end="93:17">{<block_content pos:start="91:21" pos:end="91:58">

                    <expr_stmt pos:start="91:21" pos:end="91:58"><expr pos:start="91:21" pos:end="91:57"><name pos:start="91:21" pos:end="91:53"><name pos:start="91:21" pos:end="91:27">tcg_ctx</name><operator pos:start="91:28" pos:end="91:28">.</operator><name pos:start="91:29" pos:end="91:47">gen_opc_instr_start</name><index pos:start="91:48" pos:end="91:53">[<expr pos:start="91:49" pos:end="91:52"><name pos:start="91:49" pos:end="91:50">lj</name><operator pos:start="91:51" pos:end="91:52">++</operator></expr>]</index></name> <operator pos:start="91:55" pos:end="91:55">=</operator> <literal type="number" pos:start="91:57" pos:end="91:57">0</literal></expr>;</expr_stmt>

                </block_content>}</block></while>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:44"><expr pos:start="97:13" pos:end="97:43"><name pos:start="97:13" pos:end="97:34"><name pos:start="97:13" pos:end="97:19">tcg_ctx</name><operator pos:start="97:20" pos:end="97:20">.</operator><name pos:start="97:21" pos:end="97:30">gen_opc_pc</name><index pos:start="97:31" pos:end="97:34">[<expr pos:start="97:32" pos:end="97:33"><name pos:start="97:32" pos:end="97:33">lj</name></expr>]</index></name> <operator pos:start="97:36" pos:end="97:36">=</operator> <name pos:start="97:38" pos:end="97:43"><name pos:start="97:38" pos:end="97:39">dc</name><operator pos:start="97:40" pos:end="97:41">-&gt;</operator><name pos:start="97:42" pos:end="97:43">pc</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:48"><expr pos:start="99:13" pos:end="99:47"><name pos:start="99:13" pos:end="99:43"><name pos:start="99:13" pos:end="99:19">tcg_ctx</name><operator pos:start="99:20" pos:end="99:20">.</operator><name pos:start="99:21" pos:end="99:39">gen_opc_instr_start</name><index pos:start="99:40" pos:end="99:43">[<expr pos:start="99:41" pos:end="99:42"><name pos:start="99:41" pos:end="99:42">lj</name></expr>]</index></name> <operator pos:start="99:45" pos:end="99:45">=</operator> <literal type="number" pos:start="99:47" pos:end="99:47">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:51"><expr pos:start="101:13" pos:end="101:50"><name pos:start="101:13" pos:end="101:38"><name pos:start="101:13" pos:end="101:19">tcg_ctx</name><operator pos:start="101:20" pos:end="101:20">.</operator><name pos:start="101:21" pos:end="101:34">gen_opc_icount</name><index pos:start="101:35" pos:end="101:38">[<expr pos:start="101:36" pos:end="101:37"><name pos:start="101:36" pos:end="101:37">lj</name></expr>]</index></name> <operator pos:start="101:40" pos:end="101:40">=</operator> <name pos:start="101:42" pos:end="101:50">num_insns</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="107:9" pos:end="107:28">/* Pretty disas.  */</comment>

        <expr_stmt pos:start="109:9" pos:end="109:36"><expr pos:start="109:9" pos:end="109:35"><call pos:start="109:9" pos:end="109:35"><name pos:start="109:9" pos:end="109:15">LOG_DIS</name><argument_list pos:start="109:16" pos:end="109:35">(<argument pos:start="109:17" pos:end="109:26"><expr pos:start="109:17" pos:end="109:26"><literal type="string" pos:start="109:17" pos:end="109:26">"%8.8x:\t"</literal></expr></argument>, <argument pos:start="109:29" pos:end="109:34"><expr pos:start="109:29" pos:end="109:34"><name pos:start="109:29" pos:end="109:34"><name pos:start="109:29" pos:end="109:30">dc</name><operator pos:start="109:31" pos:end="109:32">-&gt;</operator><name pos:start="109:33" pos:end="109:34">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="113:9" pos:end="117:9"><if pos:start="113:9" pos:end="117:9">if <condition pos:start="113:12" pos:end="113:68">(<expr pos:start="113:13" pos:end="113:67"><name pos:start="113:13" pos:end="113:21">num_insns</name> <operator pos:start="113:23" pos:end="113:23">+</operator> <literal type="number" pos:start="113:25" pos:end="113:25">1</literal> <operator pos:start="113:27" pos:end="113:28">==</operator> <name pos:start="113:30" pos:end="113:38">max_insns</name> <operator pos:start="113:40" pos:end="113:41">&amp;&amp;</operator> <operator pos:start="113:43" pos:end="113:43">(</operator><name pos:start="113:44" pos:end="113:53"><name pos:start="113:44" pos:end="113:45">tb</name><operator pos:start="113:46" pos:end="113:47">-&gt;</operator><name pos:start="113:48" pos:end="113:53">cflags</name></name> <operator pos:start="113:55" pos:end="113:55">&amp;</operator> <name pos:start="113:57" pos:end="113:66">CF_LAST_IO</name><operator pos:start="113:67" pos:end="113:67">)</operator></expr>)</condition> <block pos:start="113:70" pos:end="117:9">{<block_content pos:start="115:13" pos:end="115:27">

            <expr_stmt pos:start="115:13" pos:end="115:27"><expr pos:start="115:13" pos:end="115:26"><call pos:start="115:13" pos:end="115:26"><name pos:start="115:13" pos:end="115:24">gen_io_start</name><argument_list pos:start="115:25" pos:end="115:26">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="121:9" pos:end="121:46"><expr pos:start="121:9" pos:end="121:45"><call pos:start="121:9" pos:end="121:45"><name pos:start="121:9" pos:end="121:14">decode</name><argument_list pos:start="121:15" pos:end="121:45">(<argument pos:start="121:16" pos:end="121:17"><expr pos:start="121:16" pos:end="121:17"><name pos:start="121:16" pos:end="121:17">dc</name></expr></argument>, <argument pos:start="121:20" pos:end="121:44"><expr pos:start="121:20" pos:end="121:44"><call pos:start="121:20" pos:end="121:44"><name pos:start="121:20" pos:end="121:31">cpu_ldl_code</name><argument_list pos:start="121:32" pos:end="121:44">(<argument pos:start="121:33" pos:end="121:35"><expr pos:start="121:33" pos:end="121:35"><name pos:start="121:33" pos:end="121:35">env</name></expr></argument>, <argument pos:start="121:38" pos:end="121:43"><expr pos:start="121:38" pos:end="121:43"><name pos:start="121:38" pos:end="121:43"><name pos:start="121:38" pos:end="121:39">dc</name><operator pos:start="121:40" pos:end="121:41">-&gt;</operator><name pos:start="121:42" pos:end="121:43">pc</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:20"><expr pos:start="123:9" pos:end="123:19"><name pos:start="123:9" pos:end="123:14"><name pos:start="123:9" pos:end="123:10">dc</name><operator pos:start="123:11" pos:end="123:12">-&gt;</operator><name pos:start="123:13" pos:end="123:14">pc</name></name> <operator pos:start="123:16" pos:end="123:17">+=</operator> <literal type="number" pos:start="123:19" pos:end="123:19">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:20"><expr pos:start="125:9" pos:end="125:19"><name pos:start="125:9" pos:end="125:17">num_insns</name><operator pos:start="125:18" pos:end="125:19">++</operator></expr>;</expr_stmt>



    </block_content>}</block> while <condition pos:start="129:13" pos:end="139:34">(<expr pos:start="129:14" pos:end="139:33"><operator pos:start="129:14" pos:end="129:14">!</operator><name pos:start="129:15" pos:end="129:24"><name pos:start="129:15" pos:end="129:16">dc</name><operator pos:start="129:17" pos:end="129:18">-&gt;</operator><name pos:start="129:19" pos:end="129:24">is_jmp</name></name>

         <operator pos:start="131:10" pos:end="131:11">&amp;&amp;</operator> <name pos:start="131:13" pos:end="131:31"><name pos:start="131:13" pos:end="131:19">tcg_ctx</name><operator pos:start="131:20" pos:end="131:20">.</operator><name pos:start="131:21" pos:end="131:31">gen_opc_ptr</name></name> <operator pos:start="131:33" pos:end="131:33">&lt;</operator> <name pos:start="131:35" pos:end="131:45">gen_opc_end</name>

         <operator pos:start="133:10" pos:end="133:11">&amp;&amp;</operator> <operator pos:start="133:13" pos:end="133:13">!</operator><name pos:start="133:14" pos:end="133:35"><name pos:start="133:14" pos:end="133:15">cs</name><operator pos:start="133:16" pos:end="133:17">-&gt;</operator><name pos:start="133:18" pos:end="133:35">singlestep_enabled</name></name>

         <operator pos:start="135:10" pos:end="135:11">&amp;&amp;</operator> <operator pos:start="135:13" pos:end="135:13">!</operator><name pos:start="135:14" pos:end="135:23">singlestep</name>

         <operator pos:start="137:10" pos:end="137:11">&amp;&amp;</operator> <operator pos:start="137:13" pos:end="137:13">(</operator><name pos:start="137:14" pos:end="137:19"><name pos:start="137:14" pos:end="137:15">dc</name><operator pos:start="137:16" pos:end="137:17">-&gt;</operator><name pos:start="137:18" pos:end="137:19">pc</name></name> <operator pos:start="137:21" pos:end="137:21">&lt;</operator> <name pos:start="137:23" pos:end="137:37">next_page_start</name><operator pos:start="137:38" pos:end="137:38">)</operator>

         <operator pos:start="139:10" pos:end="139:11">&amp;&amp;</operator> <name pos:start="139:13" pos:end="139:21">num_insns</name> <operator pos:start="139:23" pos:end="139:23">&lt;</operator> <name pos:start="139:25" pos:end="139:33">max_insns</name></expr>)</condition>;</do>



    <if_stmt pos:start="143:5" pos:end="147:5"><if pos:start="143:5" pos:end="147:5">if <condition pos:start="143:8" pos:end="143:32">(<expr pos:start="143:9" pos:end="143:31"><name pos:start="143:9" pos:end="143:18"><name pos:start="143:9" pos:end="143:10">tb</name><operator pos:start="143:11" pos:end="143:12">-&gt;</operator><name pos:start="143:13" pos:end="143:18">cflags</name></name> <operator pos:start="143:20" pos:end="143:20">&amp;</operator> <name pos:start="143:22" pos:end="143:31">CF_LAST_IO</name></expr>)</condition> <block pos:start="143:34" pos:end="147:5">{<block_content pos:start="145:9" pos:end="145:21">

        <expr_stmt pos:start="145:9" pos:end="145:21"><expr pos:start="145:9" pos:end="145:20"><call pos:start="145:9" pos:end="145:20"><name pos:start="145:9" pos:end="145:18">gen_io_end</name><argument_list pos:start="145:19" pos:end="145:20">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="151:5" pos:end="193:5"><if pos:start="151:5" pos:end="161:5">if <condition pos:start="151:8" pos:end="151:41">(<expr pos:start="151:9" pos:end="151:40"><call pos:start="151:9" pos:end="151:40"><name pos:start="151:9" pos:end="151:16">unlikely</name><argument_list pos:start="151:17" pos:end="151:40">(<argument pos:start="151:18" pos:end="151:39"><expr pos:start="151:18" pos:end="151:39"><name pos:start="151:18" pos:end="151:39"><name pos:start="151:18" pos:end="151:19">cs</name><operator pos:start="151:20" pos:end="151:21">-&gt;</operator><name pos:start="151:22" pos:end="151:39">singlestep_enabled</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="151:43" pos:end="161:5">{<block_content pos:start="153:9" pos:end="159:46">

        <if_stmt pos:start="153:9" pos:end="157:9"><if pos:start="153:9" pos:end="157:9">if <condition pos:start="153:12" pos:end="153:37">(<expr pos:start="153:13" pos:end="153:36"><name pos:start="153:13" pos:end="153:22"><name pos:start="153:13" pos:end="153:14">dc</name><operator pos:start="153:15" pos:end="153:16">-&gt;</operator><name pos:start="153:17" pos:end="153:22">is_jmp</name></name> <operator pos:start="153:24" pos:end="153:25">==</operator> <name pos:start="153:27" pos:end="153:36">DISAS_NEXT</name></expr>)</condition> <block pos:start="153:39" pos:end="157:9">{<block_content pos:start="155:13" pos:end="155:44">

            <expr_stmt pos:start="155:13" pos:end="155:44"><expr pos:start="155:13" pos:end="155:43"><call pos:start="155:13" pos:end="155:43"><name pos:start="155:13" pos:end="155:27">tcg_gen_movi_tl</name><argument_list pos:start="155:28" pos:end="155:43">(<argument pos:start="155:29" pos:end="155:34"><expr pos:start="155:29" pos:end="155:34"><name pos:start="155:29" pos:end="155:34">cpu_pc</name></expr></argument>, <argument pos:start="155:37" pos:end="155:42"><expr pos:start="155:37" pos:end="155:42"><name pos:start="155:37" pos:end="155:42"><name pos:start="155:37" pos:end="155:38">dc</name><operator pos:start="155:39" pos:end="155:40">-&gt;</operator><name pos:start="155:41" pos:end="155:42">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:46"><expr pos:start="159:9" pos:end="159:45"><call pos:start="159:9" pos:end="159:45"><name pos:start="159:9" pos:end="159:29">t_gen_raise_exception</name><argument_list pos:start="159:30" pos:end="159:45">(<argument pos:start="159:31" pos:end="159:32"><expr pos:start="159:31" pos:end="159:32"><name pos:start="159:31" pos:end="159:32">dc</name></expr></argument>, <argument pos:start="159:35" pos:end="159:44"><expr pos:start="159:35" pos:end="159:44"><name pos:start="159:35" pos:end="159:44">EXCP_DEBUG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="161:7" pos:end="193:5">else <block pos:start="161:12" pos:end="193:5">{<block_content pos:start="163:9" pos:end="191:9">

        <switch pos:start="163:9" pos:end="191:9">switch <condition pos:start="163:16" pos:end="163:27">(<expr pos:start="163:17" pos:end="163:26"><name pos:start="163:17" pos:end="163:26"><name pos:start="163:17" pos:end="163:18">dc</name><operator pos:start="163:19" pos:end="163:20">-&gt;</operator><name pos:start="163:21" pos:end="163:26">is_jmp</name></name></expr>)</condition> <block pos:start="163:29" pos:end="191:9">{<block_content pos:start="165:9" pos:end="189:18">

        <case pos:start="165:9" pos:end="165:24">case <expr pos:start="165:14" pos:end="165:23"><name pos:start="165:14" pos:end="165:23">DISAS_NEXT</name></expr>:</case>

            <expr_stmt pos:start="167:13" pos:end="167:39"><expr pos:start="167:13" pos:end="167:38"><call pos:start="167:13" pos:end="167:38"><name pos:start="167:13" pos:end="167:23">gen_goto_tb</name><argument_list pos:start="167:24" pos:end="167:38">(<argument pos:start="167:25" pos:end="167:26"><expr pos:start="167:25" pos:end="167:26"><name pos:start="167:25" pos:end="167:26">dc</name></expr></argument>, <argument pos:start="167:29" pos:end="167:29"><expr pos:start="167:29" pos:end="167:29"><literal type="number" pos:start="167:29" pos:end="167:29">1</literal></expr></argument>, <argument pos:start="167:32" pos:end="167:37"><expr pos:start="167:32" pos:end="167:37"><name pos:start="167:32" pos:end="167:37"><name pos:start="167:32" pos:end="167:33">dc</name><operator pos:start="167:34" pos:end="167:35">-&gt;</operator><name pos:start="167:36" pos:end="167:37">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="169:13" pos:end="169:18">break;</break>

        <default pos:start="171:9" pos:end="171:16">default:</default>

        <case pos:start="173:9" pos:end="173:24">case <expr pos:start="173:14" pos:end="173:23"><name pos:start="173:14" pos:end="173:23">DISAS_JUMP</name></expr>:</case>

        <case pos:start="175:9" pos:end="175:26">case <expr pos:start="175:14" pos:end="175:25"><name pos:start="175:14" pos:end="175:25">DISAS_UPDATE</name></expr>:</case>

            <comment type="block" pos:start="177:13" pos:end="179:37">/* indicate that the hash table must be used

               to find the next TB */</comment>

            <expr_stmt pos:start="181:13" pos:end="181:31"><expr pos:start="181:13" pos:end="181:30"><call pos:start="181:13" pos:end="181:30"><name pos:start="181:13" pos:end="181:27">tcg_gen_exit_tb</name><argument_list pos:start="181:28" pos:end="181:30">(<argument pos:start="181:29" pos:end="181:29"><expr pos:start="181:29" pos:end="181:29"><literal type="number" pos:start="181:29" pos:end="181:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="183:13" pos:end="183:18">break;</break>

        <case pos:start="185:9" pos:end="185:27">case <expr pos:start="185:14" pos:end="185:26"><name pos:start="185:14" pos:end="185:26">DISAS_TB_JUMP</name></expr>:</case>

            <comment type="block" pos:start="187:13" pos:end="187:42">/* nothing more to generate */</comment>

            <break pos:start="189:13" pos:end="189:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="197:5" pos:end="197:30"><expr pos:start="197:5" pos:end="197:29"><call pos:start="197:5" pos:end="197:29"><name pos:start="197:5" pos:end="197:14">gen_tb_end</name><argument_list pos:start="197:15" pos:end="197:29">(<argument pos:start="197:16" pos:end="197:17"><expr pos:start="197:16" pos:end="197:17"><name pos:start="197:16" pos:end="197:17">tb</name></expr></argument>, <argument pos:start="197:20" pos:end="197:28"><expr pos:start="197:20" pos:end="197:28"><name pos:start="197:20" pos:end="197:28">num_insns</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:40"><expr pos:start="199:5" pos:end="199:39"><operator pos:start="199:5" pos:end="199:5">*</operator><name pos:start="199:6" pos:end="199:24"><name pos:start="199:6" pos:end="199:12">tcg_ctx</name><operator pos:start="199:13" pos:end="199:13">.</operator><name pos:start="199:14" pos:end="199:24">gen_opc_ptr</name></name> <operator pos:start="199:26" pos:end="199:26">=</operator> <name pos:start="199:28" pos:end="199:39">INDEX_op_end</name></expr>;</expr_stmt>

    <if_stmt pos:start="201:5" pos:end="224:0"><if pos:start="201:5" pos:end="213:5">if <condition pos:start="201:8" pos:end="201:18">(<expr pos:start="201:9" pos:end="201:17"><name pos:start="201:9" pos:end="201:17">search_pc</name></expr>)</condition> <block pos:start="201:20" pos:end="213:5">{<block_content pos:start="203:9" pos:end="211:9">

        <expr_stmt pos:start="203:9" pos:end="203:54"><expr pos:start="203:9" pos:end="203:53"><name pos:start="203:9" pos:end="203:9">j</name> <operator pos:start="203:11" pos:end="203:11">=</operator> <name pos:start="203:13" pos:end="203:31"><name pos:start="203:13" pos:end="203:19">tcg_ctx</name><operator pos:start="203:20" pos:end="203:20">.</operator><name pos:start="203:21" pos:end="203:31">gen_opc_ptr</name></name> <operator pos:start="203:33" pos:end="203:33">-</operator> <name pos:start="203:35" pos:end="203:53"><name pos:start="203:35" pos:end="203:41">tcg_ctx</name><operator pos:start="203:42" pos:end="203:42">.</operator><name pos:start="203:43" pos:end="203:53">gen_opc_buf</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="205:9" pos:end="205:13"><expr pos:start="205:9" pos:end="205:12"><name pos:start="205:9" pos:end="205:10">lj</name><operator pos:start="205:11" pos:end="205:12">++</operator></expr>;</expr_stmt>

        <while pos:start="207:9" pos:end="211:9">while <condition pos:start="207:15" pos:end="207:23">(<expr pos:start="207:16" pos:end="207:22"><name pos:start="207:16" pos:end="207:17">lj</name> <operator pos:start="207:19" pos:end="207:20">&lt;=</operator> <name pos:start="207:22" pos:end="207:22">j</name></expr>)</condition> <block pos:start="207:25" pos:end="211:9">{<block_content pos:start="209:13" pos:end="209:50">

            <expr_stmt pos:start="209:13" pos:end="209:50"><expr pos:start="209:13" pos:end="209:49"><name pos:start="209:13" pos:end="209:45"><name pos:start="209:13" pos:end="209:19">tcg_ctx</name><operator pos:start="209:20" pos:end="209:20">.</operator><name pos:start="209:21" pos:end="209:39">gen_opc_instr_start</name><index pos:start="209:40" pos:end="209:45">[<expr pos:start="209:41" pos:end="209:44"><name pos:start="209:41" pos:end="209:42">lj</name><operator pos:start="209:43" pos:end="209:44">++</operator></expr>]</index></name> <operator pos:start="209:47" pos:end="209:47">=</operator> <literal type="number" pos:start="209:49" pos:end="209:49">0</literal></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></if> <else pos:start="213:7" pos:end="224:0">else <block pos:start="213:12" pos:end="224:0">{<block_content pos:start="215:9" pos:end="217:31">

        <expr_stmt pos:start="215:9" pos:end="215:37"><expr pos:start="215:9" pos:end="215:36"><name pos:start="215:9" pos:end="215:16"><name pos:start="215:9" pos:end="215:10">tb</name><operator pos:start="215:11" pos:end="215:12">-&gt;</operator><name pos:start="215:13" pos:end="215:16">size</name></name> <operator pos:start="215:18" pos:end="215:18">=</operator> <name pos:start="215:20" pos:end="215:25"><name pos:start="215:20" pos:end="215:21">dc</name><operator pos:start="215:22" pos:end="215:23">-&gt;</operator><name pos:start="215:24" pos:end="215:25">pc</name></name> <operator pos:start="215:27" pos:end="215:27">-</operator> <name pos:start="215:29" pos:end="215:36">pc_start</name></expr>;</expr_stmt>

        <expr_stmt pos:start="217:9" pos:end="217:31"><expr pos:start="217:9" pos:end="217:30"><name pos:start="217:9" pos:end="217:18"><name pos:start="217:9" pos:end="217:10">tb</name><operator pos:start="217:11" pos:end="217:12">-&gt;</operator><name pos:start="217:13" pos:end="217:18">icount</name></name> <operator pos:start="217:20" pos:end="217:20">=</operator> <name pos:start="217:22" pos:end="217:30">num_insns</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



<cpp:ifdef pos:start="223:1" pos:end="223:18">#<cpp:directive pos:start="223:2" pos:end="223:6">ifdef</cpp:directive> <name pos:start="223:8" pos:end="223:18">DEBUG_DISAS</name></cpp:ifdef>

    <if_stmt pos:start="225:5" pos:end="240:0"><if pos:start="225:5" pos:end="240:0">if <condition pos:start="225:8" pos:end="225:46">(<expr pos:start="225:9" pos:end="225:45"><call pos:start="225:9" pos:end="225:45"><name pos:start="225:9" pos:end="225:26">qemu_loglevel_mask</name><argument_list pos:start="225:27" pos:end="225:45">(<argument pos:start="225:28" pos:end="225:44"><expr pos:start="225:28" pos:end="225:44"><name pos:start="225:28" pos:end="225:44">CPU_LOG_TB_IN_ASM</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="225:48" pos:end="240:0">{<block_content pos:start="227:9" pos:end="235:33">

        <expr_stmt pos:start="227:9" pos:end="227:23"><expr pos:start="227:9" pos:end="227:22"><call pos:start="227:9" pos:end="227:22"><name pos:start="227:9" pos:end="227:16">qemu_log</name><argument_list pos:start="227:17" pos:end="227:22">(<argument pos:start="227:18" pos:end="227:21"><expr pos:start="227:18" pos:end="227:21"><literal type="string" pos:start="227:18" pos:end="227:21">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="229:9" pos:end="229:62"><expr pos:start="229:9" pos:end="229:61"><call pos:start="229:9" pos:end="229:61"><name pos:start="229:9" pos:end="229:24">log_target_disas</name><argument_list pos:start="229:25" pos:end="229:61">(<argument pos:start="229:26" pos:end="229:28"><expr pos:start="229:26" pos:end="229:28"><name pos:start="229:26" pos:end="229:28">env</name></expr></argument>, <argument pos:start="229:31" pos:end="229:38"><expr pos:start="229:31" pos:end="229:38"><name pos:start="229:31" pos:end="229:38">pc_start</name></expr></argument>, <argument pos:start="229:41" pos:end="229:57"><expr pos:start="229:41" pos:end="229:57"><name pos:start="229:41" pos:end="229:46"><name pos:start="229:41" pos:end="229:42">dc</name><operator pos:start="229:43" pos:end="229:44">-&gt;</operator><name pos:start="229:45" pos:end="229:46">pc</name></name> <operator pos:start="229:48" pos:end="229:48">-</operator> <name pos:start="229:50" pos:end="229:57">pc_start</name></expr></argument>, <argument pos:start="229:60" pos:end="229:60"><expr pos:start="229:60" pos:end="229:60"><literal type="number" pos:start="229:60" pos:end="229:60">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="231:9" pos:end="235:33"><expr pos:start="231:9" pos:end="235:32"><call pos:start="231:9" pos:end="235:32"><name pos:start="231:9" pos:end="231:16">qemu_log</name><argument_list pos:start="231:17" pos:end="235:32">(<argument pos:start="231:18" pos:end="231:41"><expr pos:start="231:18" pos:end="231:41"><literal type="string" pos:start="231:18" pos:end="231:41">"\nisize=%d osize=%td\n"</literal></expr></argument>,

            <argument pos:start="233:13" pos:end="233:29"><expr pos:start="233:13" pos:end="233:29"><name pos:start="233:13" pos:end="233:18"><name pos:start="233:13" pos:end="233:14">dc</name><operator pos:start="233:15" pos:end="233:16">-&gt;</operator><name pos:start="233:17" pos:end="233:18">pc</name></name> <operator pos:start="233:20" pos:end="233:20">-</operator> <name pos:start="233:22" pos:end="233:29">pc_start</name></expr></argument>, <argument pos:start="233:32" pos:end="235:31"><expr pos:start="233:32" pos:end="235:31"><name pos:start="233:32" pos:end="233:50"><name pos:start="233:32" pos:end="233:38">tcg_ctx</name><operator pos:start="233:39" pos:end="233:39">.</operator><name pos:start="233:40" pos:end="233:50">gen_opc_ptr</name></name> <operator pos:start="233:52" pos:end="233:52">-</operator>

            <name pos:start="235:13" pos:end="235:31"><name pos:start="235:13" pos:end="235:19">tcg_ctx</name><operator pos:start="235:20" pos:end="235:20">.</operator><name pos:start="235:21" pos:end="235:31">gen_opc_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="239:1" pos:end="239:6">#<cpp:directive pos:start="239:2" pos:end="239:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
