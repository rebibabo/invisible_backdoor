<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21749.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">cp15_tls_load_store</name><parameter_list pos:start="1:31" pos:end="1:90">(<parameter pos:start="1:32" pos:end="1:44"><decl pos:start="1:32" pos:end="1:44"><type pos:start="1:32" pos:end="1:44"><name pos:start="1:32" pos:end="1:39">CPUState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">env</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:61"><decl pos:start="1:47" pos:end="1:61"><type pos:start="1:47" pos:end="1:61"><name pos:start="1:47" pos:end="1:58">DisasContext</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:61">s</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:76"><decl pos:start="1:64" pos:end="1:76"><type pos:start="1:64" pos:end="1:76"><name pos:start="1:64" pos:end="1:71">uint32_t</name></type> <name pos:start="1:73" pos:end="1:76">insn</name></decl></parameter>, <parameter pos:start="1:79" pos:end="1:89"><decl pos:start="1:79" pos:end="1:89"><type pos:start="1:79" pos:end="1:89"><name pos:start="1:79" pos:end="1:86">uint32_t</name></type> <name pos:start="1:88" pos:end="1:89">rd</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="95:1">{<block_content pos:start="5:5" pos:end="93:13">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">TCGv</name></type> <name pos:start="5:10" pos:end="5:12">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">cpn</name> <init pos:start="7:13" pos:end="7:32">= <expr pos:start="7:15" pos:end="7:32"><operator pos:start="7:15" pos:end="7:15">(</operator><name pos:start="7:16" pos:end="7:19">insn</name> <operator pos:start="7:21" pos:end="7:22">&gt;&gt;</operator> <literal type="number" pos:start="7:24" pos:end="7:25">16</literal><operator pos:start="7:26" pos:end="7:26">)</operator> <operator pos:start="7:28" pos:end="7:28">&amp;</operator> <literal type="number" pos:start="7:30" pos:end="7:32">0xf</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">cpm</name> <init pos:start="9:13" pos:end="9:24">= <expr pos:start="9:15" pos:end="9:24"><name pos:start="9:15" pos:end="9:18">insn</name> <operator pos:start="9:20" pos:end="9:20">&amp;</operator> <literal type="number" pos:start="9:22" pos:end="9:24">0xf</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:55"><decl pos:start="11:5" pos:end="11:54"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:10">op</name> <init pos:start="11:12" pos:end="11:54">= <expr pos:start="11:14" pos:end="11:54"><operator pos:start="11:14" pos:end="11:14">(</operator><operator pos:start="11:15" pos:end="11:15">(</operator><name pos:start="11:16" pos:end="11:19">insn</name> <operator pos:start="11:21" pos:end="11:22">&gt;&gt;</operator> <literal type="number" pos:start="11:24" pos:end="11:24">5</literal><operator pos:start="11:25" pos:end="11:25">)</operator> <operator pos:start="11:27" pos:end="11:27">&amp;</operator> <literal type="number" pos:start="11:29" pos:end="11:29">7</literal><operator pos:start="11:30" pos:end="11:30">)</operator> <operator pos:start="11:32" pos:end="11:32">|</operator> <operator pos:start="11:34" pos:end="11:34">(</operator><operator pos:start="11:35" pos:end="11:35">(</operator><name pos:start="11:36" pos:end="11:39">insn</name> <operator pos:start="11:41" pos:end="11:42">&gt;&gt;</operator> <literal type="number" pos:start="11:44" pos:end="11:45">18</literal><operator pos:start="11:46" pos:end="11:46">)</operator> <operator pos:start="11:48" pos:end="11:48">&amp;</operator> <literal type="number" pos:start="11:50" pos:end="11:53">0x38</literal><operator pos:start="11:54" pos:end="11:54">)</operator></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:17"><if pos:start="15:5" pos:end="17:17">if <condition pos:start="15:8" pos:end="15:43">(<expr pos:start="15:9" pos:end="15:42"><operator pos:start="15:9" pos:end="15:9">!</operator><call pos:start="15:10" pos:end="15:42"><name pos:start="15:10" pos:end="15:20">arm_feature</name><argument_list pos:start="15:21" pos:end="15:42">(<argument pos:start="15:22" pos:end="15:24"><expr pos:start="15:22" pos:end="15:24"><name pos:start="15:22" pos:end="15:24">env</name></expr></argument>, <argument pos:start="15:27" pos:end="15:41"><expr pos:start="15:27" pos:end="15:41"><name pos:start="15:27" pos:end="15:41">ARM_FEATURE_V6K</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:17"><block_content pos:start="17:9" pos:end="17:17">

        <return pos:start="17:9" pos:end="17:17">return <expr pos:start="17:16" pos:end="17:16"><literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="23:17"><if pos:start="21:5" pos:end="23:17">if <condition pos:start="21:8" pos:end="21:33">(<expr pos:start="21:9" pos:end="21:32"><operator pos:start="21:9" pos:end="21:9">!</operator><operator pos:start="21:10" pos:end="21:10">(</operator><name pos:start="21:11" pos:end="21:13">cpn</name> <operator pos:start="21:15" pos:end="21:16">==</operator> <literal type="number" pos:start="21:18" pos:end="21:19">13</literal> <operator pos:start="21:21" pos:end="21:22">&amp;&amp;</operator> <name pos:start="21:24" pos:end="21:26">cpm</name> <operator pos:start="21:28" pos:end="21:29">==</operator> <literal type="number" pos:start="21:31" pos:end="21:31">0</literal><operator pos:start="21:32" pos:end="21:32">)</operator></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:17"><block_content pos:start="23:9" pos:end="23:17">

        <return pos:start="23:9" pos:end="23:17">return <expr pos:start="23:16" pos:end="23:16"><literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="91:5"><if pos:start="27:5" pos:end="59:5">if <condition pos:start="27:8" pos:end="27:29">(<expr pos:start="27:9" pos:end="27:28"><name pos:start="27:9" pos:end="27:12">insn</name> <operator pos:start="27:14" pos:end="27:14">&amp;</operator> <name pos:start="27:16" pos:end="27:28">ARM_CP_RW_BIT</name></expr>)</condition> <block pos:start="27:31" pos:end="59:5">{<block_content pos:start="29:9" pos:end="55:30">

        <switch pos:start="29:9" pos:end="53:9">switch <condition pos:start="29:16" pos:end="29:19">(<expr pos:start="29:17" pos:end="29:18"><name pos:start="29:17" pos:end="29:18">op</name></expr>)</condition> <block pos:start="29:21" pos:end="53:9">{<block_content pos:start="31:9" pos:end="51:21">

        <case pos:start="31:9" pos:end="31:15">case <expr pos:start="31:14" pos:end="31:14"><literal type="number" pos:start="31:14" pos:end="31:14">2</literal></expr>:</case>

            <expr_stmt pos:start="33:13" pos:end="33:48"><expr pos:start="33:13" pos:end="33:47"><name pos:start="33:13" pos:end="33:15">tmp</name> <operator pos:start="33:17" pos:end="33:17">=</operator> <call pos:start="33:19" pos:end="33:47"><name pos:start="33:19" pos:end="33:32">load_cpu_field</name><argument_list pos:start="33:33" pos:end="33:47">(<argument pos:start="33:34" pos:end="33:46"><expr pos:start="33:34" pos:end="33:46"><name pos:start="33:34" pos:end="33:46"><name pos:start="33:34" pos:end="33:37">cp15</name><operator pos:start="33:38" pos:end="33:38">.</operator><name pos:start="33:39" pos:end="33:46">c13_tls1</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="35:13" pos:end="35:18">break;</break>

        <case pos:start="37:9" pos:end="37:15">case <expr pos:start="37:14" pos:end="37:14"><literal type="number" pos:start="37:14" pos:end="37:14">3</literal></expr>:</case>

            <expr_stmt pos:start="39:13" pos:end="39:48"><expr pos:start="39:13" pos:end="39:47"><name pos:start="39:13" pos:end="39:15">tmp</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <call pos:start="39:19" pos:end="39:47"><name pos:start="39:19" pos:end="39:32">load_cpu_field</name><argument_list pos:start="39:33" pos:end="39:47">(<argument pos:start="39:34" pos:end="39:46"><expr pos:start="39:34" pos:end="39:46"><name pos:start="39:34" pos:end="39:46"><name pos:start="39:34" pos:end="39:37">cp15</name><operator pos:start="39:38" pos:end="39:38">.</operator><name pos:start="39:39" pos:end="39:46">c13_tls2</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="41:13" pos:end="41:18">break;</break>

        <case pos:start="43:9" pos:end="43:15">case <expr pos:start="43:14" pos:end="43:14"><literal type="number" pos:start="43:14" pos:end="43:14">4</literal></expr>:</case>

            <expr_stmt pos:start="45:13" pos:end="45:48"><expr pos:start="45:13" pos:end="45:47"><name pos:start="45:13" pos:end="45:15">tmp</name> <operator pos:start="45:17" pos:end="45:17">=</operator> <call pos:start="45:19" pos:end="45:47"><name pos:start="45:19" pos:end="45:32">load_cpu_field</name><argument_list pos:start="45:33" pos:end="45:47">(<argument pos:start="45:34" pos:end="45:46"><expr pos:start="45:34" pos:end="45:46"><name pos:start="45:34" pos:end="45:46"><name pos:start="45:34" pos:end="45:37">cp15</name><operator pos:start="45:38" pos:end="45:38">.</operator><name pos:start="45:39" pos:end="45:46">c13_tls3</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="47:13" pos:end="47:18">break;</break>

        <default pos:start="49:9" pos:end="49:16">default:</default>

            <return pos:start="51:13" pos:end="51:21">return <expr pos:start="51:20" pos:end="51:20"><literal type="number" pos:start="51:20" pos:end="51:20">0</literal></expr>;</return>

        </block_content>}</block></switch>

        <expr_stmt pos:start="55:9" pos:end="55:30"><expr pos:start="55:9" pos:end="55:29"><call pos:start="55:9" pos:end="55:29"><name pos:start="55:9" pos:end="55:17">store_reg</name><argument_list pos:start="55:18" pos:end="55:29">(<argument pos:start="55:19" pos:end="55:19"><expr pos:start="55:19" pos:end="55:19"><name pos:start="55:19" pos:end="55:19">s</name></expr></argument>, <argument pos:start="55:22" pos:end="55:23"><expr pos:start="55:22" pos:end="55:23"><name pos:start="55:22" pos:end="55:23">rd</name></expr></argument>, <argument pos:start="55:26" pos:end="55:28"><expr pos:start="55:26" pos:end="55:28"><name pos:start="55:26" pos:end="55:28">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    </block_content>}</block></if> <else pos:start="59:7" pos:end="91:5">else <block pos:start="59:12" pos:end="91:5">{<block_content pos:start="61:9" pos:end="89:9">

        <expr_stmt pos:start="61:9" pos:end="61:30"><expr pos:start="61:9" pos:end="61:29"><name pos:start="61:9" pos:end="61:11">tmp</name> <operator pos:start="61:13" pos:end="61:13">=</operator> <call pos:start="61:15" pos:end="61:29"><name pos:start="61:15" pos:end="61:22">load_reg</name><argument_list pos:start="61:23" pos:end="61:29">(<argument pos:start="61:24" pos:end="61:24"><expr pos:start="61:24" pos:end="61:24"><name pos:start="61:24" pos:end="61:24">s</name></expr></argument>, <argument pos:start="61:27" pos:end="61:28"><expr pos:start="61:27" pos:end="61:28"><name pos:start="61:27" pos:end="61:28">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="63:9" pos:end="89:9">switch <condition pos:start="63:16" pos:end="63:19">(<expr pos:start="63:17" pos:end="63:18"><name pos:start="63:17" pos:end="63:18">op</name></expr>)</condition> <block pos:start="63:21" pos:end="89:9">{<block_content pos:start="65:9" pos:end="87:21">

        <case pos:start="65:9" pos:end="65:15">case <expr pos:start="65:14" pos:end="65:14"><literal type="number" pos:start="65:14" pos:end="65:14">2</literal></expr>:</case>

            <expr_stmt pos:start="67:13" pos:end="67:48"><expr pos:start="67:13" pos:end="67:47"><call pos:start="67:13" pos:end="67:47"><name pos:start="67:13" pos:end="67:27">store_cpu_field</name><argument_list pos:start="67:28" pos:end="67:47">(<argument pos:start="67:29" pos:end="67:31"><expr pos:start="67:29" pos:end="67:31"><name pos:start="67:29" pos:end="67:31">tmp</name></expr></argument>, <argument pos:start="67:34" pos:end="67:46"><expr pos:start="67:34" pos:end="67:46"><name pos:start="67:34" pos:end="67:46"><name pos:start="67:34" pos:end="67:37">cp15</name><operator pos:start="67:38" pos:end="67:38">.</operator><name pos:start="67:39" pos:end="67:46">c13_tls1</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="69:13" pos:end="69:18">break;</break>

        <case pos:start="71:9" pos:end="71:15">case <expr pos:start="71:14" pos:end="71:14"><literal type="number" pos:start="71:14" pos:end="71:14">3</literal></expr>:</case>

            <expr_stmt pos:start="73:13" pos:end="73:48"><expr pos:start="73:13" pos:end="73:47"><call pos:start="73:13" pos:end="73:47"><name pos:start="73:13" pos:end="73:27">store_cpu_field</name><argument_list pos:start="73:28" pos:end="73:47">(<argument pos:start="73:29" pos:end="73:31"><expr pos:start="73:29" pos:end="73:31"><name pos:start="73:29" pos:end="73:31">tmp</name></expr></argument>, <argument pos:start="73:34" pos:end="73:46"><expr pos:start="73:34" pos:end="73:46"><name pos:start="73:34" pos:end="73:46"><name pos:start="73:34" pos:end="73:37">cp15</name><operator pos:start="73:38" pos:end="73:38">.</operator><name pos:start="73:39" pos:end="73:46">c13_tls2</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="75:13" pos:end="75:18">break;</break>

        <case pos:start="77:9" pos:end="77:15">case <expr pos:start="77:14" pos:end="77:14"><literal type="number" pos:start="77:14" pos:end="77:14">4</literal></expr>:</case>

            <expr_stmt pos:start="79:13" pos:end="79:48"><expr pos:start="79:13" pos:end="79:47"><call pos:start="79:13" pos:end="79:47"><name pos:start="79:13" pos:end="79:27">store_cpu_field</name><argument_list pos:start="79:28" pos:end="79:47">(<argument pos:start="79:29" pos:end="79:31"><expr pos:start="79:29" pos:end="79:31"><name pos:start="79:29" pos:end="79:31">tmp</name></expr></argument>, <argument pos:start="79:34" pos:end="79:46"><expr pos:start="79:34" pos:end="79:46"><name pos:start="79:34" pos:end="79:46"><name pos:start="79:34" pos:end="79:37">cp15</name><operator pos:start="79:38" pos:end="79:38">.</operator><name pos:start="79:39" pos:end="79:46">c13_tls3</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="81:13" pos:end="81:18">break;</break>

        <default pos:start="83:9" pos:end="83:16">default:</default>

            <expr_stmt pos:start="85:13" pos:end="85:26"><expr pos:start="85:13" pos:end="85:25"><call pos:start="85:13" pos:end="85:25"><name pos:start="85:13" pos:end="85:20">dead_tmp</name><argument_list pos:start="85:21" pos:end="85:25">(<argument pos:start="85:22" pos:end="85:24"><expr pos:start="85:22" pos:end="85:24"><name pos:start="85:22" pos:end="85:24">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="87:13" pos:end="87:21">return <expr pos:start="87:20" pos:end="87:20"><literal type="number" pos:start="87:20" pos:end="87:20">0</literal></expr>;</return>

        </block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>

    <return pos:start="93:5" pos:end="93:13">return <expr pos:start="93:12" pos:end="93:12"><literal type="number" pos:start="93:12" pos:end="93:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
