<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17612.c" pos:tabs="8"><function pos:start="1:1" pos:end="445:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">parse_playlist</name><parameter_list pos:start="1:26" pos:end="3:64">(<parameter pos:start="1:27" pos:end="1:39"><decl pos:start="1:27" pos:end="1:39"><type pos:start="1:27" pos:end="1:39"><name pos:start="1:27" pos:end="1:36">HLSContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">c</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:56"><decl pos:start="1:42" pos:end="1:56"><type pos:start="1:42" pos:end="1:56"><specifier pos:start="1:42" pos:end="1:46">const</specifier> <name pos:start="1:48" pos:end="1:51">char</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">url</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:46"><decl pos:start="3:27" pos:end="3:46"><type pos:start="3:27" pos:end="3:46"><name pos:start="3:27" pos:end="3:41"><name pos:start="3:27" pos:end="3:32">struct</name> <name pos:start="3:34" pos:end="3:41">playlist</name></name> <modifier pos:start="3:43" pos:end="3:43">*</modifier></type><name pos:start="3:44" pos:end="3:46">pls</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:63"><decl pos:start="3:49" pos:end="3:63"><type pos:start="3:49" pos:end="3:63"><name pos:start="3:49" pos:end="3:59">AVIOContext</name> <modifier pos:start="3:61" pos:end="3:61">*</modifier></type><name pos:start="3:62" pos:end="3:63">in</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="445:1">{<block_content pos:start="7:5" pos:end="443:15">

    <decl_stmt pos:start="7:5" pos:end="7:48"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name> <init pos:start="7:13" pos:end="7:15">= <expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr></init></decl>, <decl pos:start="7:18" pos:end="7:31"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:18" pos:end="7:27">is_segment</name> <init pos:start="7:29" pos:end="7:31">= <expr pos:start="7:31" pos:end="7:31"><literal type="number" pos:start="7:31" pos:end="7:31">0</literal></expr></init></decl>, <decl pos:start="7:34" pos:end="7:47"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:34" pos:end="7:43">is_variant</name> <init pos:start="7:45" pos:end="7:47">= <expr pos:start="7:47" pos:end="7:47"><literal type="number" pos:start="7:47" pos:end="7:47">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:20">duration</name> <init pos:start="9:22" pos:end="9:24">= <expr pos:start="9:24" pos:end="9:24"><literal type="number" pos:start="9:24" pos:end="9:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:8">enum</name> <name pos:start="11:10" pos:end="11:16">KeyType</name></name></type> <name pos:start="11:18" pos:end="11:25">key_type</name> <init pos:start="11:27" pos:end="11:36">= <expr pos:start="11:29" pos:end="11:36"><name pos:start="11:29" pos:end="11:36">KEY_NONE</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">uint8_t</name></type> <name pos:start="13:13" pos:end="13:18"><name pos:start="13:13" pos:end="13:14">iv</name><index pos:start="13:15" pos:end="13:18">[<expr pos:start="13:16" pos:end="13:17"><literal type="number" pos:start="13:16" pos:end="13:17">16</literal></expr>]</index></name> <init pos:start="13:20" pos:end="13:23">= <expr pos:start="13:22" pos:end="13:23"><literal type="string" pos:start="13:22" pos:end="13:23">""</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:14">has_iv</name> <init pos:start="15:16" pos:end="15:18">= <expr pos:start="15:18" pos:end="15:18"><literal type="number" pos:start="15:18" pos:end="15:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:32"><decl pos:start="17:5" pos:end="17:31"><type pos:start="17:5" pos:end="17:8"><name pos:start="17:5" pos:end="17:8">char</name></type> <name pos:start="17:10" pos:end="17:26"><name pos:start="17:10" pos:end="17:12">key</name><index pos:start="17:13" pos:end="17:26">[<expr pos:start="17:14" pos:end="17:25"><name pos:start="17:14" pos:end="17:25">MAX_URL_SIZE</name></expr>]</index></name> <init pos:start="17:28" pos:end="17:31">= <expr pos:start="17:30" pos:end="17:31"><literal type="string" pos:start="17:30" pos:end="17:31">""</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:28"><decl pos:start="19:5" pos:end="19:27"><type pos:start="19:5" pos:end="19:8"><name pos:start="19:5" pos:end="19:8">char</name></type> <name pos:start="19:10" pos:end="19:27"><name pos:start="19:10" pos:end="19:13">line</name><index pos:start="19:14" pos:end="19:27">[<expr pos:start="19:15" pos:end="19:26"><name pos:start="19:15" pos:end="19:26">MAX_URL_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:20"><decl pos:start="21:5" pos:end="21:19"><type pos:start="21:5" pos:end="21:16"><specifier pos:start="21:5" pos:end="21:9">const</specifier> <name pos:start="21:11" pos:end="21:14">char</name> <modifier pos:start="21:16" pos:end="21:16">*</modifier></type><name pos:start="21:17" pos:end="21:19">ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:21"><decl pos:start="23:5" pos:end="23:20"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:16">close_in</name> <init pos:start="23:18" pos:end="23:20">= <expr pos:start="23:20" pos:end="23:20"><literal type="number" pos:start="23:20" pos:end="23:20">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:27"><decl pos:start="25:5" pos:end="25:26"><type pos:start="25:5" pos:end="25:11"><name pos:start="25:5" pos:end="25:11">int64_t</name></type> <name pos:start="25:13" pos:end="25:22">seg_offset</name> <init pos:start="25:24" pos:end="25:26">= <expr pos:start="25:26" pos:end="25:26"><literal type="number" pos:start="25:26" pos:end="25:26">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:26"><decl pos:start="27:5" pos:end="27:25"><type pos:start="27:5" pos:end="27:11"><name pos:start="27:5" pos:end="27:11">int64_t</name></type> <name pos:start="27:13" pos:end="27:20">seg_size</name> <init pos:start="27:22" pos:end="27:25">= <expr pos:start="27:24" pos:end="27:25"><operator pos:start="27:24" pos:end="27:24">-</operator><literal type="number" pos:start="27:25" pos:end="27:25">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:28"><decl pos:start="29:5" pos:end="29:27"><type pos:start="29:5" pos:end="29:13"><name pos:start="29:5" pos:end="29:11">uint8_t</name> <modifier pos:start="29:13" pos:end="29:13">*</modifier></type><name pos:start="29:14" pos:end="29:20">new_url</name> <init pos:start="29:22" pos:end="29:27">= <expr pos:start="29:24" pos:end="29:27"><name pos:start="29:24" pos:end="29:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:37"><decl pos:start="31:5" pos:end="31:36"><type pos:start="31:5" pos:end="31:23"><name pos:start="31:5" pos:end="31:23"><name pos:start="31:5" pos:end="31:10">struct</name> <name pos:start="31:12" pos:end="31:23">variant_info</name></name></type> <name pos:start="31:25" pos:end="31:36">variant_info</name></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:31"><decl pos:start="33:5" pos:end="33:30"><type pos:start="33:5" pos:end="33:8"><name pos:start="33:5" pos:end="33:8">char</name></type> <name pos:start="33:10" pos:end="33:30"><name pos:start="33:10" pos:end="33:16">tmp_str</name><index pos:start="33:17" pos:end="33:30">[<expr pos:start="33:18" pos:end="33:29"><name pos:start="33:18" pos:end="33:29">MAX_URL_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:44"><decl pos:start="35:5" pos:end="35:43"><type pos:start="35:5" pos:end="35:20"><name pos:start="35:5" pos:end="35:18"><name pos:start="35:5" pos:end="35:10">struct</name> <name pos:start="35:12" pos:end="35:18">segment</name></name> <modifier pos:start="35:20" pos:end="35:20">*</modifier></type><name pos:start="35:21" pos:end="35:36">cur_init_section</name> <init pos:start="35:38" pos:end="35:43">= <expr pos:start="35:40" pos:end="35:43"><name pos:start="35:40" pos:end="35:43">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="39:5" pos:end="61:5"><if pos:start="39:5" pos:end="61:5">if <condition pos:start="39:8" pos:end="39:52">(<expr pos:start="39:9" pos:end="39:51"><operator pos:start="39:9" pos:end="39:9">!</operator><name pos:start="39:10" pos:end="39:11">in</name> <operator pos:start="39:13" pos:end="39:14">&amp;&amp;</operator> <name pos:start="39:16" pos:end="39:33"><name pos:start="39:16" pos:end="39:16">c</name><operator pos:start="39:17" pos:end="39:18">-&gt;</operator><name pos:start="39:19" pos:end="39:33">http_persistent</name></name> <operator pos:start="39:35" pos:end="39:36">&amp;&amp;</operator> <name pos:start="39:38" pos:end="39:51"><name pos:start="39:38" pos:end="39:38">c</name><operator pos:start="39:39" pos:end="39:40">-&gt;</operator><name pos:start="39:41" pos:end="39:51">playlist_pb</name></name></expr>)</condition> <block pos:start="39:54" pos:end="61:5">{<block_content pos:start="41:9" pos:end="59:9">

        <expr_stmt pos:start="41:9" pos:end="41:28"><expr pos:start="41:9" pos:end="41:27"><name pos:start="41:9" pos:end="41:10">in</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <name pos:start="41:14" pos:end="41:27"><name pos:start="41:14" pos:end="41:14">c</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:27">playlist_pb</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:63"><expr pos:start="43:9" pos:end="43:62"><name pos:start="43:9" pos:end="43:11">ret</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <call pos:start="43:15" pos:end="43:62"><name pos:start="43:15" pos:end="43:32">open_url_keepalive</name><argument_list pos:start="43:33" pos:end="43:62">(<argument pos:start="43:34" pos:end="43:39"><expr pos:start="43:34" pos:end="43:39"><name pos:start="43:34" pos:end="43:39"><name pos:start="43:34" pos:end="43:34">c</name><operator pos:start="43:35" pos:end="43:36">-&gt;</operator><name pos:start="43:37" pos:end="43:39">ctx</name></name></expr></argument>, <argument pos:start="43:42" pos:end="43:56"><expr pos:start="43:42" pos:end="43:56"><operator pos:start="43:42" pos:end="43:42">&amp;</operator><name pos:start="43:43" pos:end="43:56"><name pos:start="43:43" pos:end="43:43">c</name><operator pos:start="43:44" pos:end="43:45">-&gt;</operator><name pos:start="43:46" pos:end="43:56">playlist_pb</name></name></expr></argument>, <argument pos:start="43:59" pos:end="43:61"><expr pos:start="43:59" pos:end="43:61"><name pos:start="43:59" pos:end="43:61">url</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="59:9"><if pos:start="45:9" pos:end="49:9">if <condition pos:start="45:12" pos:end="45:32">(<expr pos:start="45:13" pos:end="45:31"><name pos:start="45:13" pos:end="45:15">ret</name> <operator pos:start="45:17" pos:end="45:18">==</operator> <name pos:start="45:20" pos:end="45:31">AVERROR_EXIT</name></expr>)</condition> <block pos:start="45:34" pos:end="49:9">{<block_content pos:start="47:13" pos:end="47:23">

            <return pos:start="47:13" pos:end="47:23">return <expr pos:start="47:20" pos:end="47:22"><name pos:start="47:20" pos:end="47:22">ret</name></expr>;</return>

        </block_content>}</block></if> <if type="elseif" pos:start="49:11" pos:end="59:9">else if <condition pos:start="49:19" pos:end="49:27">(<expr pos:start="49:20" pos:end="49:26"><name pos:start="49:20" pos:end="49:22">ret</name> <operator pos:start="49:24" pos:end="49:24">&lt;</operator> <literal type="number" pos:start="49:26" pos:end="49:26">0</literal></expr>)</condition> <block pos:start="49:29" pos:end="59:9">{<block_content pos:start="51:13" pos:end="57:22">

            <expr_stmt pos:start="51:13" pos:end="55:38"><expr pos:start="51:13" pos:end="55:37"><call pos:start="51:13" pos:end="55:37"><name pos:start="51:13" pos:end="51:18">av_log</name><argument_list pos:start="51:19" pos:end="55:37">(<argument pos:start="51:20" pos:end="51:25"><expr pos:start="51:20" pos:end="51:25"><name pos:start="51:20" pos:end="51:25"><name pos:start="51:20" pos:end="51:20">c</name><operator pos:start="51:21" pos:end="51:22">-&gt;</operator><name pos:start="51:23" pos:end="51:25">ctx</name></name></expr></argument>, <argument pos:start="51:28" pos:end="51:41"><expr pos:start="51:28" pos:end="51:41"><name pos:start="51:28" pos:end="51:41">AV_LOG_WARNING</name></expr></argument>,

                <argument pos:start="53:17" pos:end="53:87"><expr pos:start="53:17" pos:end="53:87"><literal type="string" pos:start="53:17" pos:end="53:87">"keepalive request failed for '%s', retrying with new connection: %s\n"</literal></expr></argument>,

                <argument pos:start="55:17" pos:end="55:19"><expr pos:start="55:17" pos:end="55:19"><name pos:start="55:17" pos:end="55:19">url</name></expr></argument>, <argument pos:start="55:22" pos:end="55:36"><expr pos:start="55:22" pos:end="55:36"><call pos:start="55:22" pos:end="55:36"><name pos:start="55:22" pos:end="55:31">av_err2str</name><argument_list pos:start="55:32" pos:end="55:36">(<argument pos:start="55:33" pos:end="55:35"><expr pos:start="55:33" pos:end="55:35"><name pos:start="55:33" pos:end="55:35">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:22"><expr pos:start="57:13" pos:end="57:21"><name pos:start="57:13" pos:end="57:14">in</name> <operator pos:start="57:16" pos:end="57:16">=</operator> <name pos:start="57:18" pos:end="57:21">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="65:5" pos:end="125:5"><if pos:start="65:5" pos:end="125:5">if <condition pos:start="65:8" pos:end="65:12">(<expr pos:start="65:9" pos:end="65:11"><operator pos:start="65:9" pos:end="65:9">!</operator><name pos:start="65:10" pos:end="65:11">in</name></expr>)</condition> <block pos:start="65:14" pos:end="125:5">{<block_content pos:start="69:9" pos:end="124:0">

<cpp:if pos:start="67:1" pos:end="67:5">#<cpp:directive pos:start="67:2" pos:end="67:3">if</cpp:directive> <expr pos:start="67:5" pos:end="67:5"><literal type="number" pos:start="67:5" pos:end="67:5">1</literal></expr></cpp:if>

        <decl_stmt pos:start="69:9" pos:end="69:34"><decl pos:start="69:9" pos:end="69:33"><type pos:start="69:9" pos:end="69:22"><name pos:start="69:9" pos:end="69:20">AVDictionary</name> <modifier pos:start="69:22" pos:end="69:22">*</modifier></type><name pos:start="69:23" pos:end="69:26">opts</name> <init pos:start="69:28" pos:end="69:33">= <expr pos:start="69:30" pos:end="69:33"><name pos:start="69:30" pos:end="69:33">NULL</name></expr></init></decl>;</decl_stmt>

        <comment type="block" pos:start="71:9" pos:end="71:69">/* Some HLS servers don't like being sent the range header */</comment>

        <expr_stmt pos:start="73:9" pos:end="73:47"><expr pos:start="73:9" pos:end="73:46"><call pos:start="73:9" pos:end="73:46"><name pos:start="73:9" pos:end="73:19">av_dict_set</name><argument_list pos:start="73:20" pos:end="73:46">(<argument pos:start="73:21" pos:end="73:25"><expr pos:start="73:21" pos:end="73:25"><operator pos:start="73:21" pos:end="73:21">&amp;</operator><name pos:start="73:22" pos:end="73:25">opts</name></expr></argument>, <argument pos:start="73:28" pos:end="73:37"><expr pos:start="73:28" pos:end="73:37"><literal type="string" pos:start="73:28" pos:end="73:37">"seekable"</literal></expr></argument>, <argument pos:start="73:40" pos:end="73:42"><expr pos:start="73:40" pos:end="73:42"><literal type="string" pos:start="73:40" pos:end="73:42">"0"</literal></expr></argument>, <argument pos:start="73:45" pos:end="73:45"><expr pos:start="73:45" pos:end="73:45"><literal type="number" pos:start="73:45" pos:end="73:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="line" pos:start="77:9" pos:end="77:78">// broker prior HTTP options that should be consistent across requests</comment>

        <expr_stmt pos:start="79:9" pos:end="79:59"><expr pos:start="79:9" pos:end="79:58"><call pos:start="79:9" pos:end="79:58"><name pos:start="79:9" pos:end="79:19">av_dict_set</name><argument_list pos:start="79:20" pos:end="79:58">(<argument pos:start="79:21" pos:end="79:25"><expr pos:start="79:21" pos:end="79:25"><operator pos:start="79:21" pos:end="79:21">&amp;</operator><name pos:start="79:22" pos:end="79:25">opts</name></expr></argument>, <argument pos:start="79:28" pos:end="79:39"><expr pos:start="79:28" pos:end="79:39"><literal type="string" pos:start="79:28" pos:end="79:39">"user_agent"</literal></expr></argument>, <argument pos:start="79:42" pos:end="79:54"><expr pos:start="79:42" pos:end="79:54"><name pos:start="79:42" pos:end="79:54"><name pos:start="79:42" pos:end="79:42">c</name><operator pos:start="79:43" pos:end="79:44">-&gt;</operator><name pos:start="79:45" pos:end="79:54">user_agent</name></name></expr></argument>, <argument pos:start="79:57" pos:end="79:57"><expr pos:start="79:57" pos:end="79:57"><literal type="number" pos:start="79:57" pos:end="79:57">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:53"><expr pos:start="81:9" pos:end="81:52"><call pos:start="81:9" pos:end="81:52"><name pos:start="81:9" pos:end="81:19">av_dict_set</name><argument_list pos:start="81:20" pos:end="81:52">(<argument pos:start="81:21" pos:end="81:25"><expr pos:start="81:21" pos:end="81:25"><operator pos:start="81:21" pos:end="81:21">&amp;</operator><name pos:start="81:22" pos:end="81:25">opts</name></expr></argument>, <argument pos:start="81:28" pos:end="81:36"><expr pos:start="81:28" pos:end="81:36"><literal type="string" pos:start="81:28" pos:end="81:36">"cookies"</literal></expr></argument>, <argument pos:start="81:39" pos:end="81:48"><expr pos:start="81:39" pos:end="81:48"><name pos:start="81:39" pos:end="81:48"><name pos:start="81:39" pos:end="81:39">c</name><operator pos:start="81:40" pos:end="81:41">-&gt;</operator><name pos:start="81:42" pos:end="81:48">cookies</name></name></expr></argument>, <argument pos:start="81:51" pos:end="81:51"><expr pos:start="81:51" pos:end="81:51"><literal type="number" pos:start="81:51" pos:end="81:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:53"><expr pos:start="83:9" pos:end="83:52"><call pos:start="83:9" pos:end="83:52"><name pos:start="83:9" pos:end="83:19">av_dict_set</name><argument_list pos:start="83:20" pos:end="83:52">(<argument pos:start="83:21" pos:end="83:25"><expr pos:start="83:21" pos:end="83:25"><operator pos:start="83:21" pos:end="83:21">&amp;</operator><name pos:start="83:22" pos:end="83:25">opts</name></expr></argument>, <argument pos:start="83:28" pos:end="83:36"><expr pos:start="83:28" pos:end="83:36"><literal type="string" pos:start="83:28" pos:end="83:36">"headers"</literal></expr></argument>, <argument pos:start="83:39" pos:end="83:48"><expr pos:start="83:39" pos:end="83:48"><name pos:start="83:39" pos:end="83:48"><name pos:start="83:39" pos:end="83:39">c</name><operator pos:start="83:40" pos:end="83:41">-&gt;</operator><name pos:start="83:42" pos:end="83:48">headers</name></name></expr></argument>, <argument pos:start="83:51" pos:end="83:51"><expr pos:start="83:51" pos:end="83:51"><literal type="number" pos:start="83:51" pos:end="83:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:59"><expr pos:start="85:9" pos:end="85:58"><call pos:start="85:9" pos:end="85:58"><name pos:start="85:9" pos:end="85:19">av_dict_set</name><argument_list pos:start="85:20" pos:end="85:58">(<argument pos:start="85:21" pos:end="85:25"><expr pos:start="85:21" pos:end="85:25"><operator pos:start="85:21" pos:end="85:21">&amp;</operator><name pos:start="85:22" pos:end="85:25">opts</name></expr></argument>, <argument pos:start="85:28" pos:end="85:39"><expr pos:start="85:28" pos:end="85:39"><literal type="string" pos:start="85:28" pos:end="85:39">"http_proxy"</literal></expr></argument>, <argument pos:start="85:42" pos:end="85:54"><expr pos:start="85:42" pos:end="85:54"><name pos:start="85:42" pos:end="85:54"><name pos:start="85:42" pos:end="85:42">c</name><operator pos:start="85:43" pos:end="85:44">-&gt;</operator><name pos:start="85:45" pos:end="85:54">http_proxy</name></name></expr></argument>, <argument pos:start="85:57" pos:end="85:57"><expr pos:start="85:57" pos:end="85:57"><literal type="number" pos:start="85:57" pos:end="85:57">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="89:9" pos:end="91:60"><if pos:start="89:9" pos:end="91:60">if <condition pos:start="89:12" pos:end="89:31">(<expr pos:start="89:13" pos:end="89:30"><name pos:start="89:13" pos:end="89:30"><name pos:start="89:13" pos:end="89:13">c</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:30">http_persistent</name></name></expr>)</condition><block type="pseudo" pos:start="91:13" pos:end="91:60"><block_content pos:start="91:13" pos:end="91:60">

            <expr_stmt pos:start="91:13" pos:end="91:60"><expr pos:start="91:13" pos:end="91:59"><call pos:start="91:13" pos:end="91:59"><name pos:start="91:13" pos:end="91:23">av_dict_set</name><argument_list pos:start="91:24" pos:end="91:59">(<argument pos:start="91:25" pos:end="91:29"><expr pos:start="91:25" pos:end="91:29"><operator pos:start="91:25" pos:end="91:25">&amp;</operator><name pos:start="91:26" pos:end="91:29">opts</name></expr></argument>, <argument pos:start="91:32" pos:end="91:50"><expr pos:start="91:32" pos:end="91:50"><literal type="string" pos:start="91:32" pos:end="91:50">"multiple_requests"</literal></expr></argument>, <argument pos:start="91:53" pos:end="91:55"><expr pos:start="91:53" pos:end="91:55"><literal type="string" pos:start="91:53" pos:end="91:55">"1"</literal></expr></argument>, <argument pos:start="91:58" pos:end="91:58"><expr pos:start="91:58" pos:end="91:58"><literal type="number" pos:start="91:58" pos:end="91:58">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="95:9" pos:end="95:71"><expr pos:start="95:9" pos:end="95:70"><name pos:start="95:9" pos:end="95:11">ret</name> <operator pos:start="95:13" pos:end="95:13">=</operator> <call pos:start="95:15" pos:end="95:70"><name pos:start="95:15" pos:end="95:29"><name pos:start="95:15" pos:end="95:15">c</name><operator pos:start="95:16" pos:end="95:17">-&gt;</operator><name pos:start="95:18" pos:end="95:20">ctx</name><operator pos:start="95:21" pos:end="95:22">-&gt;</operator><name pos:start="95:23" pos:end="95:29">io_open</name></name><argument_list pos:start="95:30" pos:end="95:70">(<argument pos:start="95:31" pos:end="95:36"><expr pos:start="95:31" pos:end="95:36"><name pos:start="95:31" pos:end="95:36"><name pos:start="95:31" pos:end="95:31">c</name><operator pos:start="95:32" pos:end="95:33">-&gt;</operator><name pos:start="95:34" pos:end="95:36">ctx</name></name></expr></argument>, <argument pos:start="95:39" pos:end="95:41"><expr pos:start="95:39" pos:end="95:41"><operator pos:start="95:39" pos:end="95:39">&amp;</operator><name pos:start="95:40" pos:end="95:41">in</name></expr></argument>, <argument pos:start="95:44" pos:end="95:46"><expr pos:start="95:44" pos:end="95:46"><name pos:start="95:44" pos:end="95:46">url</name></expr></argument>, <argument pos:start="95:49" pos:end="95:62"><expr pos:start="95:49" pos:end="95:62"><name pos:start="95:49" pos:end="95:62">AVIO_FLAG_READ</name></expr></argument>, <argument pos:start="95:65" pos:end="95:69"><expr pos:start="95:65" pos:end="95:69"><operator pos:start="95:65" pos:end="95:65">&amp;</operator><name pos:start="95:66" pos:end="95:69">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:28"><expr pos:start="97:9" pos:end="97:27"><call pos:start="97:9" pos:end="97:27"><name pos:start="97:9" pos:end="97:20">av_dict_free</name><argument_list pos:start="97:21" pos:end="97:27">(<argument pos:start="97:22" pos:end="97:26"><expr pos:start="97:22" pos:end="97:26"><operator pos:start="97:22" pos:end="97:22">&amp;</operator><name pos:start="97:23" pos:end="97:26">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="99:9" pos:end="101:23"><if pos:start="99:9" pos:end="101:23">if <condition pos:start="99:12" pos:end="99:20">(<expr pos:start="99:13" pos:end="99:19"><name pos:start="99:13" pos:end="99:15">ret</name> <operator pos:start="99:17" pos:end="99:17">&lt;</operator> <literal type="number" pos:start="99:19" pos:end="99:19">0</literal></expr>)</condition><block type="pseudo" pos:start="101:13" pos:end="101:23"><block_content pos:start="101:13" pos:end="101:23">

            <return pos:start="101:13" pos:end="101:23">return <expr pos:start="101:20" pos:end="101:22"><name pos:start="101:20" pos:end="101:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="105:9" pos:end="114:0"><if pos:start="105:9" pos:end="107:32">if <condition pos:start="105:12" pos:end="105:31">(<expr pos:start="105:13" pos:end="105:30"><name pos:start="105:13" pos:end="105:30"><name pos:start="105:13" pos:end="105:13">c</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:30">http_persistent</name></name></expr>)</condition><block type="pseudo" pos:start="107:13" pos:end="107:32"><block_content pos:start="107:13" pos:end="107:32">

            <expr_stmt pos:start="107:13" pos:end="107:32"><expr pos:start="107:13" pos:end="107:31"><name pos:start="107:13" pos:end="107:26"><name pos:start="107:13" pos:end="107:13">c</name><operator pos:start="107:14" pos:end="107:15">-&gt;</operator><name pos:start="107:16" pos:end="107:26">playlist_pb</name></name> <operator pos:start="107:28" pos:end="107:28">=</operator> <name pos:start="107:30" pos:end="107:31">in</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="109:9" pos:end="114:0">else<block type="pseudo" pos:start="111:13" pos:end="114:0"><block_content pos:start="111:13" pos:end="114:0">

            <expr_stmt pos:start="111:13" pos:end="114:0"><expr pos:start="111:13" pos:end="111:24"><name pos:start="111:13" pos:end="111:20">close_in</name> <operator pos:start="111:22" pos:end="111:22">=</operator> <literal type="number" pos:start="111:24" pos:end="111:24">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

<cpp:else pos:start="113:1" pos:end="113:5">#<cpp:directive pos:start="113:2" pos:end="113:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="115:9" pos:end="115:35"><expr pos:start="115:9" pos:end="115:34"><name pos:start="115:9" pos:end="115:11">ret</name> <operator pos:start="115:13" pos:end="115:13">=</operator> <call pos:start="115:15" pos:end="115:34"><name pos:start="115:15" pos:end="115:21">open_in</name><argument_list pos:start="115:22" pos:end="115:34">(<argument pos:start="115:23" pos:end="115:23"><expr pos:start="115:23" pos:end="115:23"><name pos:start="115:23" pos:end="115:23">c</name></expr></argument>, <argument pos:start="115:26" pos:end="115:28"><expr pos:start="115:26" pos:end="115:28"><operator pos:start="115:26" pos:end="115:26">&amp;</operator><name pos:start="115:27" pos:end="115:28">in</name></expr></argument>, <argument pos:start="115:31" pos:end="115:33"><expr pos:start="115:31" pos:end="115:33"><name pos:start="115:31" pos:end="115:33">url</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="117:9" pos:end="119:23"><if pos:start="117:9" pos:end="119:23">if <condition pos:start="117:12" pos:end="117:20">(<expr pos:start="117:13" pos:end="117:19"><name pos:start="117:13" pos:end="117:15">ret</name> <operator pos:start="117:17" pos:end="117:17">&lt;</operator> <literal type="number" pos:start="117:19" pos:end="117:19">0</literal></expr>)</condition><block type="pseudo" pos:start="119:13" pos:end="119:23"><block_content pos:start="119:13" pos:end="119:23">

            <return pos:start="119:13" pos:end="119:23">return <expr pos:start="119:20" pos:end="119:22"><name pos:start="119:20" pos:end="119:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="121:9" pos:end="124:0"><expr pos:start="121:9" pos:end="121:20"><name pos:start="121:9" pos:end="121:16">close_in</name> <operator pos:start="121:18" pos:end="121:18">=</operator> <literal type="number" pos:start="121:20" pos:end="121:20">1</literal></expr>;</expr_stmt>

<cpp:endif pos:start="123:1" pos:end="123:6">#<cpp:directive pos:start="123:2" pos:end="123:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="129:5" pos:end="131:22"><if pos:start="129:5" pos:end="131:22">if <condition pos:start="129:8" pos:end="129:74">(<expr pos:start="129:9" pos:end="129:73"><call pos:start="129:9" pos:end="129:68"><name pos:start="129:9" pos:end="129:18">av_opt_get</name><argument_list pos:start="129:19" pos:end="129:68">(<argument pos:start="129:20" pos:end="129:21"><expr pos:start="129:20" pos:end="129:21"><name pos:start="129:20" pos:end="129:21">in</name></expr></argument>, <argument pos:start="129:24" pos:end="129:33"><expr pos:start="129:24" pos:end="129:33"><literal type="string" pos:start="129:24" pos:end="129:33">"location"</literal></expr></argument>, <argument pos:start="129:36" pos:end="129:57"><expr pos:start="129:36" pos:end="129:57"><name pos:start="129:36" pos:end="129:57">AV_OPT_SEARCH_CHILDREN</name></expr></argument>, <argument pos:start="129:60" pos:end="129:67"><expr pos:start="129:60" pos:end="129:67"><operator pos:start="129:60" pos:end="129:60">&amp;</operator><name pos:start="129:61" pos:end="129:67">new_url</name></expr></argument>)</argument_list></call> <operator pos:start="129:70" pos:end="129:71">&gt;=</operator> <literal type="number" pos:start="129:73" pos:end="129:73">0</literal></expr>)</condition><block type="pseudo" pos:start="131:9" pos:end="131:22"><block_content pos:start="131:9" pos:end="131:22">

        <expr_stmt pos:start="131:9" pos:end="131:22"><expr pos:start="131:9" pos:end="131:21"><name pos:start="131:9" pos:end="131:11">url</name> <operator pos:start="131:13" pos:end="131:13">=</operator> <name pos:start="131:15" pos:end="131:21">new_url</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="135:5" pos:end="135:44"><expr pos:start="135:5" pos:end="135:43"><call pos:start="135:5" pos:end="135:43"><name pos:start="135:5" pos:end="135:19">read_chomp_line</name><argument_list pos:start="135:20" pos:end="135:43">(<argument pos:start="135:21" pos:end="135:22"><expr pos:start="135:21" pos:end="135:22"><name pos:start="135:21" pos:end="135:22">in</name></expr></argument>, <argument pos:start="135:25" pos:end="135:28"><expr pos:start="135:25" pos:end="135:28"><name pos:start="135:25" pos:end="135:28">line</name></expr></argument>, <argument pos:start="135:31" pos:end="135:42"><expr pos:start="135:31" pos:end="135:42"><sizeof pos:start="135:31" pos:end="135:42">sizeof<argument_list pos:start="135:37" pos:end="135:42">(<argument pos:start="135:38" pos:end="135:41"><expr pos:start="135:38" pos:end="135:41"><name pos:start="135:38" pos:end="135:41">line</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="137:5" pos:end="143:5"><if pos:start="137:5" pos:end="143:5">if <condition pos:start="137:8" pos:end="137:32">(<expr pos:start="137:9" pos:end="137:31"><call pos:start="137:9" pos:end="137:31"><name pos:start="137:9" pos:end="137:14">strcmp</name><argument_list pos:start="137:15" pos:end="137:31">(<argument pos:start="137:16" pos:end="137:19"><expr pos:start="137:16" pos:end="137:19"><name pos:start="137:16" pos:end="137:19">line</name></expr></argument>, <argument pos:start="137:22" pos:end="137:30"><expr pos:start="137:22" pos:end="137:30"><literal type="string" pos:start="137:22" pos:end="137:30">"#EXTM3U"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="137:34" pos:end="143:5">{<block_content pos:start="139:9" pos:end="141:18">

        <expr_stmt pos:start="139:9" pos:end="139:34"><expr pos:start="139:9" pos:end="139:33"><name pos:start="139:9" pos:end="139:11">ret</name> <operator pos:start="139:13" pos:end="139:13">=</operator> <name pos:start="139:15" pos:end="139:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

        <goto pos:start="141:9" pos:end="141:18">goto <name pos:start="141:14" pos:end="141:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="147:5" pos:end="155:5"><if pos:start="147:5" pos:end="155:5">if <condition pos:start="147:8" pos:end="147:12">(<expr pos:start="147:9" pos:end="147:11"><name pos:start="147:9" pos:end="147:11">pls</name></expr>)</condition> <block pos:start="147:14" pos:end="155:5">{<block_content pos:start="149:9" pos:end="153:41">

        <expr_stmt pos:start="149:9" pos:end="149:31"><expr pos:start="149:9" pos:end="149:30"><call pos:start="149:9" pos:end="149:30"><name pos:start="149:9" pos:end="149:25">free_segment_list</name><argument_list pos:start="149:26" pos:end="149:30">(<argument pos:start="149:27" pos:end="149:29"><expr pos:start="149:27" pos:end="149:29"><name pos:start="149:27" pos:end="149:29">pls</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:26"><expr pos:start="151:9" pos:end="151:25"><name pos:start="151:9" pos:end="151:21"><name pos:start="151:9" pos:end="151:11">pls</name><operator pos:start="151:12" pos:end="151:13">-&gt;</operator><name pos:start="151:14" pos:end="151:21">finished</name></name> <operator pos:start="151:23" pos:end="151:23">=</operator> <literal type="number" pos:start="151:25" pos:end="151:25">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:41"><expr pos:start="153:9" pos:end="153:40"><name pos:start="153:9" pos:end="153:17"><name pos:start="153:9" pos:end="153:11">pls</name><operator pos:start="153:12" pos:end="153:13">-&gt;</operator><name pos:start="153:14" pos:end="153:17">type</name></name> <operator pos:start="153:19" pos:end="153:19">=</operator> <name pos:start="153:21" pos:end="153:40">PLS_TYPE_UNSPECIFIED</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <while pos:start="157:5" pos:end="427:5">while <condition pos:start="157:11" pos:end="157:26">(<expr pos:start="157:12" pos:end="157:25"><operator pos:start="157:12" pos:end="157:12">!</operator><call pos:start="157:13" pos:end="157:25"><name pos:start="157:13" pos:end="157:21">avio_feof</name><argument_list pos:start="157:22" pos:end="157:25">(<argument pos:start="157:23" pos:end="157:24"><expr pos:start="157:23" pos:end="157:24"><name pos:start="157:23" pos:end="157:24">in</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="157:28" pos:end="427:5">{<block_content pos:start="159:9" pos:end="425:9">

        <expr_stmt pos:start="159:9" pos:end="159:48"><expr pos:start="159:9" pos:end="159:47"><call pos:start="159:9" pos:end="159:47"><name pos:start="159:9" pos:end="159:23">read_chomp_line</name><argument_list pos:start="159:24" pos:end="159:47">(<argument pos:start="159:25" pos:end="159:26"><expr pos:start="159:25" pos:end="159:26"><name pos:start="159:25" pos:end="159:26">in</name></expr></argument>, <argument pos:start="159:29" pos:end="159:32"><expr pos:start="159:29" pos:end="159:32"><name pos:start="159:29" pos:end="159:32">line</name></expr></argument>, <argument pos:start="159:35" pos:end="159:46"><expr pos:start="159:35" pos:end="159:46"><sizeof pos:start="159:35" pos:end="159:46">sizeof<argument_list pos:start="159:41" pos:end="159:46">(<argument pos:start="159:42" pos:end="159:45"><expr pos:start="159:42" pos:end="159:45"><name pos:start="159:42" pos:end="159:45">line</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="161:9" pos:end="425:9"><if pos:start="161:9" pos:end="171:9">if <condition pos:start="161:12" pos:end="161:58">(<expr pos:start="161:13" pos:end="161:57"><call pos:start="161:13" pos:end="161:57"><name pos:start="161:13" pos:end="161:23">av_strstart</name><argument_list pos:start="161:24" pos:end="161:57">(<argument pos:start="161:25" pos:end="161:28"><expr pos:start="161:25" pos:end="161:28"><name pos:start="161:25" pos:end="161:28">line</name></expr></argument>, <argument pos:start="161:31" pos:end="161:50"><expr pos:start="161:31" pos:end="161:50"><literal type="string" pos:start="161:31" pos:end="161:50">"#EXT-X-STREAM-INF:"</literal></expr></argument>, <argument pos:start="161:53" pos:end="161:56"><expr pos:start="161:53" pos:end="161:56"><operator pos:start="161:53" pos:end="161:53">&amp;</operator><name pos:start="161:54" pos:end="161:56">ptr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="161:60" pos:end="171:9">{<block_content pos:start="163:13" pos:end="169:46">

            <expr_stmt pos:start="163:13" pos:end="163:27"><expr pos:start="163:13" pos:end="163:26"><name pos:start="163:13" pos:end="163:22">is_variant</name> <operator pos:start="163:24" pos:end="163:24">=</operator> <literal type="number" pos:start="163:26" pos:end="163:26">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:59"><expr pos:start="165:13" pos:end="165:58"><call pos:start="165:13" pos:end="165:58"><name pos:start="165:13" pos:end="165:18">memset</name><argument_list pos:start="165:19" pos:end="165:58">(<argument pos:start="165:20" pos:end="165:32"><expr pos:start="165:20" pos:end="165:32"><operator pos:start="165:20" pos:end="165:20">&amp;</operator><name pos:start="165:21" pos:end="165:32">variant_info</name></expr></argument>, <argument pos:start="165:35" pos:end="165:35"><expr pos:start="165:35" pos:end="165:35"><literal type="number" pos:start="165:35" pos:end="165:35">0</literal></expr></argument>, <argument pos:start="165:38" pos:end="165:57"><expr pos:start="165:38" pos:end="165:57"><sizeof pos:start="165:38" pos:end="165:57">sizeof<argument_list pos:start="165:44" pos:end="165:57">(<argument pos:start="165:45" pos:end="165:56"><expr pos:start="165:45" pos:end="165:56"><name pos:start="165:45" pos:end="165:56">variant_info</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="167:13" pos:end="169:46"><expr pos:start="167:13" pos:end="169:45"><call pos:start="167:13" pos:end="169:45"><name pos:start="167:13" pos:end="167:30">ff_parse_key_value</name><argument_list pos:start="167:31" pos:end="169:45">(<argument pos:start="167:32" pos:end="167:34"><expr pos:start="167:32" pos:end="167:34"><name pos:start="167:32" pos:end="167:34">ptr</name></expr></argument>, <argument pos:start="167:37" pos:end="167:77"><expr pos:start="167:37" pos:end="167:77"><operator pos:start="167:37" pos:end="167:37">(</operator><name pos:start="167:38" pos:end="167:56">ff_parse_key_val_cb</name><operator pos:start="167:57" pos:end="167:57">)</operator> <name pos:start="167:59" pos:end="167:77">handle_variant_args</name></expr></argument>,

                               <argument pos:start="169:32" pos:end="169:44"><expr pos:start="169:32" pos:end="169:44"><operator pos:start="169:32" pos:end="169:32">&amp;</operator><name pos:start="169:33" pos:end="169:44">variant_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="171:11" pos:end="201:9">else if <condition pos:start="171:19" pos:end="171:58">(<expr pos:start="171:20" pos:end="171:57"><call pos:start="171:20" pos:end="171:57"><name pos:start="171:20" pos:end="171:30">av_strstart</name><argument_list pos:start="171:31" pos:end="171:57">(<argument pos:start="171:32" pos:end="171:35"><expr pos:start="171:32" pos:end="171:35"><name pos:start="171:32" pos:end="171:35">line</name></expr></argument>, <argument pos:start="171:38" pos:end="171:50"><expr pos:start="171:38" pos:end="171:50"><literal type="string" pos:start="171:38" pos:end="171:50">"#EXT-X-KEY:"</literal></expr></argument>, <argument pos:start="171:53" pos:end="171:56"><expr pos:start="171:53" pos:end="171:56"><operator pos:start="171:53" pos:end="171:53">&amp;</operator><name pos:start="171:54" pos:end="171:56">ptr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="171:60" pos:end="201:9">{<block_content pos:start="173:13" pos:end="199:51">

            <decl_stmt pos:start="173:13" pos:end="173:41"><decl pos:start="173:13" pos:end="173:40"><type pos:start="173:13" pos:end="173:27"><name pos:start="173:13" pos:end="173:27"><name pos:start="173:13" pos:end="173:18">struct</name> <name pos:start="173:20" pos:end="173:27">key_info</name></name></type> <name pos:start="173:29" pos:end="173:32">info</name> <init pos:start="173:34" pos:end="173:40">= <expr pos:start="173:36" pos:end="173:40"><block pos:start="173:36" pos:end="173:40">{<expr pos:start="173:37" pos:end="173:39"><block pos:start="173:37" pos:end="173:39">{<expr pos:start="173:38" pos:end="173:38"><literal type="number" pos:start="173:38" pos:end="173:38">0</literal></expr>}</block></expr>}</block></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="175:13" pos:end="177:38"><expr pos:start="175:13" pos:end="177:37"><call pos:start="175:13" pos:end="177:37"><name pos:start="175:13" pos:end="175:30">ff_parse_key_value</name><argument_list pos:start="175:31" pos:end="177:37">(<argument pos:start="175:32" pos:end="175:34"><expr pos:start="175:32" pos:end="175:34"><name pos:start="175:32" pos:end="175:34">ptr</name></expr></argument>, <argument pos:start="175:37" pos:end="175:73"><expr pos:start="175:37" pos:end="175:73"><operator pos:start="175:37" pos:end="175:37">(</operator><name pos:start="175:38" pos:end="175:56">ff_parse_key_val_cb</name><operator pos:start="175:57" pos:end="175:57">)</operator> <name pos:start="175:59" pos:end="175:73">handle_key_args</name></expr></argument>,

                               <argument pos:start="177:32" pos:end="177:36"><expr pos:start="177:32" pos:end="177:36"><operator pos:start="177:32" pos:end="177:32">&amp;</operator><name pos:start="177:33" pos:end="177:36">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="179:13" pos:end="179:32"><expr pos:start="179:13" pos:end="179:31"><name pos:start="179:13" pos:end="179:20">key_type</name> <operator pos:start="179:22" pos:end="179:22">=</operator> <name pos:start="179:24" pos:end="179:31">KEY_NONE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="181:13" pos:end="181:23"><expr pos:start="181:13" pos:end="181:22"><name pos:start="181:13" pos:end="181:18">has_iv</name> <operator pos:start="181:20" pos:end="181:20">=</operator> <literal type="number" pos:start="181:22" pos:end="181:22">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="183:13" pos:end="185:39"><if pos:start="183:13" pos:end="185:39">if <condition pos:start="183:16" pos:end="183:48">(<expr pos:start="183:17" pos:end="183:47"><operator pos:start="183:17" pos:end="183:17">!</operator><call pos:start="183:18" pos:end="183:47"><name pos:start="183:18" pos:end="183:23">strcmp</name><argument_list pos:start="183:24" pos:end="183:47">(<argument pos:start="183:25" pos:end="183:35"><expr pos:start="183:25" pos:end="183:35"><name pos:start="183:25" pos:end="183:35"><name pos:start="183:25" pos:end="183:28">info</name><operator pos:start="183:29" pos:end="183:29">.</operator><name pos:start="183:30" pos:end="183:35">method</name></name></expr></argument>, <argument pos:start="183:38" pos:end="183:46"><expr pos:start="183:38" pos:end="183:46"><literal type="string" pos:start="183:38" pos:end="183:46">"AES-128"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="185:17" pos:end="185:39"><block_content pos:start="185:17" pos:end="185:39">

                <expr_stmt pos:start="185:17" pos:end="185:39"><expr pos:start="185:17" pos:end="185:38"><name pos:start="185:17" pos:end="185:24">key_type</name> <operator pos:start="185:26" pos:end="185:26">=</operator> <name pos:start="185:28" pos:end="185:38">KEY_AES_128</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="187:13" pos:end="189:42"><if pos:start="187:13" pos:end="189:42">if <condition pos:start="187:16" pos:end="187:51">(<expr pos:start="187:17" pos:end="187:50"><operator pos:start="187:17" pos:end="187:17">!</operator><call pos:start="187:18" pos:end="187:50"><name pos:start="187:18" pos:end="187:23">strcmp</name><argument_list pos:start="187:24" pos:end="187:50">(<argument pos:start="187:25" pos:end="187:35"><expr pos:start="187:25" pos:end="187:35"><name pos:start="187:25" pos:end="187:35"><name pos:start="187:25" pos:end="187:28">info</name><operator pos:start="187:29" pos:end="187:29">.</operator><name pos:start="187:30" pos:end="187:35">method</name></name></expr></argument>, <argument pos:start="187:38" pos:end="187:49"><expr pos:start="187:38" pos:end="187:49"><literal type="string" pos:start="187:38" pos:end="187:49">"SAMPLE-AES"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="189:17" pos:end="189:42"><block_content pos:start="189:17" pos:end="189:42">

                <expr_stmt pos:start="189:17" pos:end="189:42"><expr pos:start="189:17" pos:end="189:41"><name pos:start="189:17" pos:end="189:24">key_type</name> <operator pos:start="189:26" pos:end="189:26">=</operator> <name pos:start="189:28" pos:end="189:41">KEY_SAMPLE_AES</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="191:13" pos:end="197:13"><if pos:start="191:13" pos:end="197:13">if <condition pos:start="191:16" pos:end="191:73">(<expr pos:start="191:17" pos:end="191:72"><operator pos:start="191:17" pos:end="191:17">!</operator><call pos:start="191:18" pos:end="191:42"><name pos:start="191:18" pos:end="191:24">strncmp</name><argument_list pos:start="191:25" pos:end="191:42">(<argument pos:start="191:26" pos:end="191:32"><expr pos:start="191:26" pos:end="191:32"><name pos:start="191:26" pos:end="191:32"><name pos:start="191:26" pos:end="191:29">info</name><operator pos:start="191:30" pos:end="191:30">.</operator><name pos:start="191:31" pos:end="191:32">iv</name></name></expr></argument>, <argument pos:start="191:35" pos:end="191:38"><expr pos:start="191:35" pos:end="191:38"><literal type="string" pos:start="191:35" pos:end="191:38">"0x"</literal></expr></argument>, <argument pos:start="191:41" pos:end="191:41"><expr pos:start="191:41" pos:end="191:41"><literal type="number" pos:start="191:41" pos:end="191:41">2</literal></expr></argument>)</argument_list></call> <operator pos:start="191:44" pos:end="191:45">||</operator> <operator pos:start="191:47" pos:end="191:47">!</operator><call pos:start="191:48" pos:end="191:72"><name pos:start="191:48" pos:end="191:54">strncmp</name><argument_list pos:start="191:55" pos:end="191:72">(<argument pos:start="191:56" pos:end="191:62"><expr pos:start="191:56" pos:end="191:62"><name pos:start="191:56" pos:end="191:62"><name pos:start="191:56" pos:end="191:59">info</name><operator pos:start="191:60" pos:end="191:60">.</operator><name pos:start="191:61" pos:end="191:62">iv</name></name></expr></argument>, <argument pos:start="191:65" pos:end="191:68"><expr pos:start="191:65" pos:end="191:68"><literal type="string" pos:start="191:65" pos:end="191:68">"0X"</literal></expr></argument>, <argument pos:start="191:71" pos:end="191:71"><expr pos:start="191:71" pos:end="191:71"><literal type="number" pos:start="191:71" pos:end="191:71">2</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="191:75" pos:end="197:13">{<block_content pos:start="193:17" pos:end="195:27">

                <expr_stmt pos:start="193:17" pos:end="193:48"><expr pos:start="193:17" pos:end="193:47"><call pos:start="193:17" pos:end="193:47"><name pos:start="193:17" pos:end="193:30">ff_hex_to_data</name><argument_list pos:start="193:31" pos:end="193:47">(<argument pos:start="193:32" pos:end="193:33"><expr pos:start="193:32" pos:end="193:33"><name pos:start="193:32" pos:end="193:33">iv</name></expr></argument>, <argument pos:start="193:36" pos:end="193:46"><expr pos:start="193:36" pos:end="193:46"><name pos:start="193:36" pos:end="193:42"><name pos:start="193:36" pos:end="193:39">info</name><operator pos:start="193:40" pos:end="193:40">.</operator><name pos:start="193:41" pos:end="193:42">iv</name></name> <operator pos:start="193:44" pos:end="193:44">+</operator> <literal type="number" pos:start="193:46" pos:end="193:46">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="195:17" pos:end="195:27"><expr pos:start="195:17" pos:end="195:26"><name pos:start="195:17" pos:end="195:22">has_iv</name> <operator pos:start="195:24" pos:end="195:24">=</operator> <literal type="number" pos:start="195:26" pos:end="195:26">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="199:13" pos:end="199:51"><expr pos:start="199:13" pos:end="199:50"><call pos:start="199:13" pos:end="199:50"><name pos:start="199:13" pos:end="199:22">av_strlcpy</name><argument_list pos:start="199:23" pos:end="199:50">(<argument pos:start="199:24" pos:end="199:26"><expr pos:start="199:24" pos:end="199:26"><name pos:start="199:24" pos:end="199:26">key</name></expr></argument>, <argument pos:start="199:29" pos:end="199:36"><expr pos:start="199:29" pos:end="199:36"><name pos:start="199:29" pos:end="199:36"><name pos:start="199:29" pos:end="199:32">info</name><operator pos:start="199:33" pos:end="199:33">.</operator><name pos:start="199:34" pos:end="199:36">uri</name></name></expr></argument>, <argument pos:start="199:39" pos:end="199:49"><expr pos:start="199:39" pos:end="199:49"><sizeof pos:start="199:39" pos:end="199:49">sizeof<argument_list pos:start="199:45" pos:end="199:49">(<argument pos:start="199:46" pos:end="199:48"><expr pos:start="199:46" pos:end="199:48"><name pos:start="199:46" pos:end="199:48">key</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="201:11" pos:end="211:9">else if <condition pos:start="201:19" pos:end="201:60">(<expr pos:start="201:20" pos:end="201:59"><call pos:start="201:20" pos:end="201:59"><name pos:start="201:20" pos:end="201:30">av_strstart</name><argument_list pos:start="201:31" pos:end="201:59">(<argument pos:start="201:32" pos:end="201:35"><expr pos:start="201:32" pos:end="201:35"><name pos:start="201:32" pos:end="201:35">line</name></expr></argument>, <argument pos:start="201:38" pos:end="201:52"><expr pos:start="201:38" pos:end="201:52"><literal type="string" pos:start="201:38" pos:end="201:52">"#EXT-X-MEDIA:"</literal></expr></argument>, <argument pos:start="201:55" pos:end="201:58"><expr pos:start="201:55" pos:end="201:58"><operator pos:start="201:55" pos:end="201:55">&amp;</operator><name pos:start="201:56" pos:end="201:58">ptr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="201:62" pos:end="211:9">{<block_content pos:start="203:13" pos:end="209:41">

            <decl_stmt pos:start="203:13" pos:end="203:47"><decl pos:start="203:13" pos:end="203:46"><type pos:start="203:13" pos:end="203:33"><name pos:start="203:13" pos:end="203:33"><name pos:start="203:13" pos:end="203:18">struct</name> <name pos:start="203:20" pos:end="203:33">rendition_info</name></name></type> <name pos:start="203:35" pos:end="203:38">info</name> <init pos:start="203:40" pos:end="203:46">= <expr pos:start="203:42" pos:end="203:46"><block pos:start="203:42" pos:end="203:46">{<expr pos:start="203:43" pos:end="203:45"><block pos:start="203:43" pos:end="203:45">{<expr pos:start="203:44" pos:end="203:44"><literal type="number" pos:start="203:44" pos:end="203:44">0</literal></expr>}</block></expr>}</block></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="205:13" pos:end="207:38"><expr pos:start="205:13" pos:end="207:37"><call pos:start="205:13" pos:end="207:37"><name pos:start="205:13" pos:end="205:30">ff_parse_key_value</name><argument_list pos:start="205:31" pos:end="207:37">(<argument pos:start="205:32" pos:end="205:34"><expr pos:start="205:32" pos:end="205:34"><name pos:start="205:32" pos:end="205:34">ptr</name></expr></argument>, <argument pos:start="205:37" pos:end="205:79"><expr pos:start="205:37" pos:end="205:79"><operator pos:start="205:37" pos:end="205:37">(</operator><name pos:start="205:38" pos:end="205:56">ff_parse_key_val_cb</name><operator pos:start="205:57" pos:end="205:57">)</operator> <name pos:start="205:59" pos:end="205:79">handle_rendition_args</name></expr></argument>,

                               <argument pos:start="207:32" pos:end="207:36"><expr pos:start="207:32" pos:end="207:36"><operator pos:start="207:32" pos:end="207:32">&amp;</operator><name pos:start="207:33" pos:end="207:36">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="209:13" pos:end="209:41"><expr pos:start="209:13" pos:end="209:40"><call pos:start="209:13" pos:end="209:40"><name pos:start="209:13" pos:end="209:25">new_rendition</name><argument_list pos:start="209:26" pos:end="209:40">(<argument pos:start="209:27" pos:end="209:27"><expr pos:start="209:27" pos:end="209:27"><name pos:start="209:27" pos:end="209:27">c</name></expr></argument>, <argument pos:start="209:30" pos:end="209:34"><expr pos:start="209:30" pos:end="209:34"><operator pos:start="209:30" pos:end="209:30">&amp;</operator><name pos:start="209:31" pos:end="209:34">info</name></expr></argument>, <argument pos:start="209:37" pos:end="209:39"><expr pos:start="209:37" pos:end="209:39"><name pos:start="209:37" pos:end="209:39">url</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="211:11" pos:end="221:9">else if <condition pos:start="211:19" pos:end="211:69">(<expr pos:start="211:20" pos:end="211:68"><call pos:start="211:20" pos:end="211:68"><name pos:start="211:20" pos:end="211:30">av_strstart</name><argument_list pos:start="211:31" pos:end="211:68">(<argument pos:start="211:32" pos:end="211:35"><expr pos:start="211:32" pos:end="211:35"><name pos:start="211:32" pos:end="211:35">line</name></expr></argument>, <argument pos:start="211:38" pos:end="211:61"><expr pos:start="211:38" pos:end="211:61"><literal type="string" pos:start="211:38" pos:end="211:61">"#EXT-X-TARGETDURATION:"</literal></expr></argument>, <argument pos:start="211:64" pos:end="211:67"><expr pos:start="211:64" pos:end="211:67"><operator pos:start="211:64" pos:end="211:64">&amp;</operator><name pos:start="211:65" pos:end="211:67">ptr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="211:71" pos:end="221:9">{<block_content pos:start="213:13" pos:end="219:73">

            <expr_stmt pos:start="213:13" pos:end="213:48"><expr pos:start="213:13" pos:end="213:47"><name pos:start="213:13" pos:end="213:15">ret</name> <operator pos:start="213:17" pos:end="213:17">=</operator> <call pos:start="213:19" pos:end="213:47"><name pos:start="213:19" pos:end="213:33">ensure_playlist</name><argument_list pos:start="213:34" pos:end="213:47">(<argument pos:start="213:35" pos:end="213:35"><expr pos:start="213:35" pos:end="213:35"><name pos:start="213:35" pos:end="213:35">c</name></expr></argument>, <argument pos:start="213:38" pos:end="213:41"><expr pos:start="213:38" pos:end="213:41"><operator pos:start="213:38" pos:end="213:38">&amp;</operator><name pos:start="213:39" pos:end="213:41">pls</name></expr></argument>, <argument pos:start="213:44" pos:end="213:46"><expr pos:start="213:44" pos:end="213:46"><name pos:start="213:44" pos:end="213:46">url</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="215:13" pos:end="217:26"><if pos:start="215:13" pos:end="217:26">if <condition pos:start="215:16" pos:end="215:24">(<expr pos:start="215:17" pos:end="215:23"><name pos:start="215:17" pos:end="215:19">ret</name> <operator pos:start="215:21" pos:end="215:21">&lt;</operator> <literal type="number" pos:start="215:23" pos:end="215:23">0</literal></expr>)</condition><block type="pseudo" pos:start="217:17" pos:end="217:26"><block_content pos:start="217:17" pos:end="217:26">

                <goto pos:start="217:17" pos:end="217:26">goto <name pos:start="217:22" pos:end="217:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="219:13" pos:end="219:73"><expr pos:start="219:13" pos:end="219:72"><name pos:start="219:13" pos:end="219:32"><name pos:start="219:13" pos:end="219:15">pls</name><operator pos:start="219:16" pos:end="219:17">-&gt;</operator><name pos:start="219:18" pos:end="219:32">target_duration</name></name> <operator pos:start="219:34" pos:end="219:34">=</operator> <call pos:start="219:36" pos:end="219:57"><name pos:start="219:36" pos:end="219:42">strtoll</name><argument_list pos:start="219:43" pos:end="219:57">(<argument pos:start="219:44" pos:end="219:46"><expr pos:start="219:44" pos:end="219:46"><name pos:start="219:44" pos:end="219:46">ptr</name></expr></argument>, <argument pos:start="219:49" pos:end="219:52"><expr pos:start="219:49" pos:end="219:52"><name pos:start="219:49" pos:end="219:52">NULL</name></expr></argument>, <argument pos:start="219:55" pos:end="219:56"><expr pos:start="219:55" pos:end="219:56"><literal type="number" pos:start="219:55" pos:end="219:56">10</literal></expr></argument>)</argument_list></call> <operator pos:start="219:59" pos:end="219:59">*</operator> <name pos:start="219:61" pos:end="219:72">AV_TIME_BASE</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="221:11" pos:end="231:9">else if <condition pos:start="221:19" pos:end="221:69">(<expr pos:start="221:20" pos:end="221:68"><call pos:start="221:20" pos:end="221:68"><name pos:start="221:20" pos:end="221:30">av_strstart</name><argument_list pos:start="221:31" pos:end="221:68">(<argument pos:start="221:32" pos:end="221:35"><expr pos:start="221:32" pos:end="221:35"><name pos:start="221:32" pos:end="221:35">line</name></expr></argument>, <argument pos:start="221:38" pos:end="221:61"><expr pos:start="221:38" pos:end="221:61"><literal type="string" pos:start="221:38" pos:end="221:61">"#EXT-X-MEDIA-SEQUENCE:"</literal></expr></argument>, <argument pos:start="221:64" pos:end="221:67"><expr pos:start="221:64" pos:end="221:67"><operator pos:start="221:64" pos:end="221:64">&amp;</operator><name pos:start="221:65" pos:end="221:67">ptr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="221:71" pos:end="231:9">{<block_content pos:start="223:13" pos:end="229:42">

            <expr_stmt pos:start="223:13" pos:end="223:48"><expr pos:start="223:13" pos:end="223:47"><name pos:start="223:13" pos:end="223:15">ret</name> <operator pos:start="223:17" pos:end="223:17">=</operator> <call pos:start="223:19" pos:end="223:47"><name pos:start="223:19" pos:end="223:33">ensure_playlist</name><argument_list pos:start="223:34" pos:end="223:47">(<argument pos:start="223:35" pos:end="223:35"><expr pos:start="223:35" pos:end="223:35"><name pos:start="223:35" pos:end="223:35">c</name></expr></argument>, <argument pos:start="223:38" pos:end="223:41"><expr pos:start="223:38" pos:end="223:41"><operator pos:start="223:38" pos:end="223:38">&amp;</operator><name pos:start="223:39" pos:end="223:41">pls</name></expr></argument>, <argument pos:start="223:44" pos:end="223:46"><expr pos:start="223:44" pos:end="223:46"><name pos:start="223:44" pos:end="223:46">url</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="225:13" pos:end="227:26"><if pos:start="225:13" pos:end="227:26">if <condition pos:start="225:16" pos:end="225:24">(<expr pos:start="225:17" pos:end="225:23"><name pos:start="225:17" pos:end="225:19">ret</name> <operator pos:start="225:21" pos:end="225:21">&lt;</operator> <literal type="number" pos:start="225:23" pos:end="225:23">0</literal></expr>)</condition><block type="pseudo" pos:start="227:17" pos:end="227:26"><block_content pos:start="227:17" pos:end="227:26">

                <goto pos:start="227:17" pos:end="227:26">goto <name pos:start="227:22" pos:end="227:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="229:13" pos:end="229:42"><expr pos:start="229:13" pos:end="229:41"><name pos:start="229:13" pos:end="229:29"><name pos:start="229:13" pos:end="229:15">pls</name><operator pos:start="229:16" pos:end="229:17">-&gt;</operator><name pos:start="229:18" pos:end="229:29">start_seq_no</name></name> <operator pos:start="229:31" pos:end="229:31">=</operator> <call pos:start="229:33" pos:end="229:41"><name pos:start="229:33" pos:end="229:36">atoi</name><argument_list pos:start="229:37" pos:end="229:41">(<argument pos:start="229:38" pos:end="229:40"><expr pos:start="229:38" pos:end="229:40"><name pos:start="229:38" pos:end="229:40">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="231:11" pos:end="247:9">else if <condition pos:start="231:19" pos:end="231:68">(<expr pos:start="231:20" pos:end="231:67"><call pos:start="231:20" pos:end="231:67"><name pos:start="231:20" pos:end="231:30">av_strstart</name><argument_list pos:start="231:31" pos:end="231:67">(<argument pos:start="231:32" pos:end="231:35"><expr pos:start="231:32" pos:end="231:35"><name pos:start="231:32" pos:end="231:35">line</name></expr></argument>, <argument pos:start="231:38" pos:end="231:60"><expr pos:start="231:38" pos:end="231:60"><literal type="string" pos:start="231:38" pos:end="231:60">"#EXT-X-PLAYLIST-TYPE:"</literal></expr></argument>, <argument pos:start="231:63" pos:end="231:66"><expr pos:start="231:63" pos:end="231:66"><operator pos:start="231:63" pos:end="231:63">&amp;</operator><name pos:start="231:64" pos:end="231:66">ptr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="231:70" pos:end="247:9">{<block_content pos:start="233:13" pos:end="245:41">

            <expr_stmt pos:start="233:13" pos:end="233:48"><expr pos:start="233:13" pos:end="233:47"><name pos:start="233:13" pos:end="233:15">ret</name> <operator pos:start="233:17" pos:end="233:17">=</operator> <call pos:start="233:19" pos:end="233:47"><name pos:start="233:19" pos:end="233:33">ensure_playlist</name><argument_list pos:start="233:34" pos:end="233:47">(<argument pos:start="233:35" pos:end="233:35"><expr pos:start="233:35" pos:end="233:35"><name pos:start="233:35" pos:end="233:35">c</name></expr></argument>, <argument pos:start="233:38" pos:end="233:41"><expr pos:start="233:38" pos:end="233:41"><operator pos:start="233:38" pos:end="233:38">&amp;</operator><name pos:start="233:39" pos:end="233:41">pls</name></expr></argument>, <argument pos:start="233:44" pos:end="233:46"><expr pos:start="233:44" pos:end="233:46"><name pos:start="233:44" pos:end="233:46">url</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="235:13" pos:end="237:26"><if pos:start="235:13" pos:end="237:26">if <condition pos:start="235:16" pos:end="235:24">(<expr pos:start="235:17" pos:end="235:23"><name pos:start="235:17" pos:end="235:19">ret</name> <operator pos:start="235:21" pos:end="235:21">&lt;</operator> <literal type="number" pos:start="235:23" pos:end="235:23">0</literal></expr>)</condition><block type="pseudo" pos:start="237:17" pos:end="237:26"><block_content pos:start="237:17" pos:end="237:26">

                <goto pos:start="237:17" pos:end="237:26">goto <name pos:start="237:22" pos:end="237:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="239:13" pos:end="245:41"><if pos:start="239:13" pos:end="241:43">if <condition pos:start="239:16" pos:end="239:38">(<expr pos:start="239:17" pos:end="239:37"><operator pos:start="239:17" pos:end="239:17">!</operator><call pos:start="239:18" pos:end="239:37"><name pos:start="239:18" pos:end="239:23">strcmp</name><argument_list pos:start="239:24" pos:end="239:37">(<argument pos:start="239:25" pos:end="239:27"><expr pos:start="239:25" pos:end="239:27"><name pos:start="239:25" pos:end="239:27">ptr</name></expr></argument>, <argument pos:start="239:30" pos:end="239:36"><expr pos:start="239:30" pos:end="239:36"><literal type="string" pos:start="239:30" pos:end="239:36">"EVENT"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="241:17" pos:end="241:43"><block_content pos:start="241:17" pos:end="241:43">

                <expr_stmt pos:start="241:17" pos:end="241:43"><expr pos:start="241:17" pos:end="241:42"><name pos:start="241:17" pos:end="241:25"><name pos:start="241:17" pos:end="241:19">pls</name><operator pos:start="241:20" pos:end="241:21">-&gt;</operator><name pos:start="241:22" pos:end="241:25">type</name></name> <operator pos:start="241:27" pos:end="241:27">=</operator> <name pos:start="241:29" pos:end="241:42">PLS_TYPE_EVENT</name></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="243:13" pos:end="245:41">else if <condition pos:start="243:21" pos:end="243:41">(<expr pos:start="243:22" pos:end="243:40"><operator pos:start="243:22" pos:end="243:22">!</operator><call pos:start="243:23" pos:end="243:40"><name pos:start="243:23" pos:end="243:28">strcmp</name><argument_list pos:start="243:29" pos:end="243:40">(<argument pos:start="243:30" pos:end="243:32"><expr pos:start="243:30" pos:end="243:32"><name pos:start="243:30" pos:end="243:32">ptr</name></expr></argument>, <argument pos:start="243:35" pos:end="243:39"><expr pos:start="243:35" pos:end="243:39"><literal type="string" pos:start="243:35" pos:end="243:39">"VOD"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="245:17" pos:end="245:41"><block_content pos:start="245:17" pos:end="245:41">

                <expr_stmt pos:start="245:17" pos:end="245:41"><expr pos:start="245:17" pos:end="245:40"><name pos:start="245:17" pos:end="245:25"><name pos:start="245:17" pos:end="245:19">pls</name><operator pos:start="245:20" pos:end="245:21">-&gt;</operator><name pos:start="245:22" pos:end="245:25">type</name></name> <operator pos:start="245:27" pos:end="245:27">=</operator> <name pos:start="245:29" pos:end="245:40">PLS_TYPE_VOD</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="247:11" pos:end="263:9">else if <condition pos:start="247:19" pos:end="247:58">(<expr pos:start="247:20" pos:end="247:57"><call pos:start="247:20" pos:end="247:57"><name pos:start="247:20" pos:end="247:30">av_strstart</name><argument_list pos:start="247:31" pos:end="247:57">(<argument pos:start="247:32" pos:end="247:35"><expr pos:start="247:32" pos:end="247:35"><name pos:start="247:32" pos:end="247:35">line</name></expr></argument>, <argument pos:start="247:38" pos:end="247:50"><expr pos:start="247:38" pos:end="247:50"><literal type="string" pos:start="247:38" pos:end="247:50">"#EXT-X-MAP:"</literal></expr></argument>, <argument pos:start="247:53" pos:end="247:56"><expr pos:start="247:53" pos:end="247:56"><operator pos:start="247:53" pos:end="247:53">&amp;</operator><name pos:start="247:54" pos:end="247:56">ptr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="247:60" pos:end="263:9">{<block_content pos:start="249:13" pos:end="261:65">

            <decl_stmt pos:start="249:13" pos:end="249:50"><decl pos:start="249:13" pos:end="249:49"><type pos:start="249:13" pos:end="249:36"><name pos:start="249:13" pos:end="249:36"><name pos:start="249:13" pos:end="249:18">struct</name> <name pos:start="249:20" pos:end="249:36">init_section_info</name></name></type> <name pos:start="249:38" pos:end="249:41">info</name> <init pos:start="249:43" pos:end="249:49">= <expr pos:start="249:45" pos:end="249:49"><block pos:start="249:45" pos:end="249:49">{<expr pos:start="249:46" pos:end="249:48"><block pos:start="249:46" pos:end="249:48">{<expr pos:start="249:47" pos:end="249:47"><literal type="number" pos:start="249:47" pos:end="249:47">0</literal></expr>}</block></expr>}</block></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="251:13" pos:end="251:48"><expr pos:start="251:13" pos:end="251:47"><name pos:start="251:13" pos:end="251:15">ret</name> <operator pos:start="251:17" pos:end="251:17">=</operator> <call pos:start="251:19" pos:end="251:47"><name pos:start="251:19" pos:end="251:33">ensure_playlist</name><argument_list pos:start="251:34" pos:end="251:47">(<argument pos:start="251:35" pos:end="251:35"><expr pos:start="251:35" pos:end="251:35"><name pos:start="251:35" pos:end="251:35">c</name></expr></argument>, <argument pos:start="251:38" pos:end="251:41"><expr pos:start="251:38" pos:end="251:41"><operator pos:start="251:38" pos:end="251:38">&amp;</operator><name pos:start="251:39" pos:end="251:41">pls</name></expr></argument>, <argument pos:start="251:44" pos:end="251:46"><expr pos:start="251:44" pos:end="251:46"><name pos:start="251:44" pos:end="251:46">url</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="253:13" pos:end="255:26"><if pos:start="253:13" pos:end="255:26">if <condition pos:start="253:16" pos:end="253:24">(<expr pos:start="253:17" pos:end="253:23"><name pos:start="253:17" pos:end="253:19">ret</name> <operator pos:start="253:21" pos:end="253:21">&lt;</operator> <literal type="number" pos:start="253:23" pos:end="253:23">0</literal></expr>)</condition><block type="pseudo" pos:start="255:17" pos:end="255:26"><block_content pos:start="255:17" pos:end="255:26">

                <goto pos:start="255:17" pos:end="255:26">goto <name pos:start="255:22" pos:end="255:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="257:13" pos:end="259:38"><expr pos:start="257:13" pos:end="259:37"><call pos:start="257:13" pos:end="259:37"><name pos:start="257:13" pos:end="257:30">ff_parse_key_value</name><argument_list pos:start="257:31" pos:end="259:37">(<argument pos:start="257:32" pos:end="257:34"><expr pos:start="257:32" pos:end="257:34"><name pos:start="257:32" pos:end="257:34">ptr</name></expr></argument>, <argument pos:start="257:37" pos:end="257:82"><expr pos:start="257:37" pos:end="257:82"><operator pos:start="257:37" pos:end="257:37">(</operator><name pos:start="257:38" pos:end="257:56">ff_parse_key_val_cb</name><operator pos:start="257:57" pos:end="257:57">)</operator> <name pos:start="257:59" pos:end="257:82">handle_init_section_args</name></expr></argument>,

                               <argument pos:start="259:32" pos:end="259:36"><expr pos:start="259:32" pos:end="259:36"><operator pos:start="259:32" pos:end="259:32">&amp;</operator><name pos:start="259:33" pos:end="259:36">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="261:13" pos:end="261:65"><expr pos:start="261:13" pos:end="261:64"><name pos:start="261:13" pos:end="261:28">cur_init_section</name> <operator pos:start="261:30" pos:end="261:30">=</operator> <call pos:start="261:32" pos:end="261:64"><name pos:start="261:32" pos:end="261:47">new_init_section</name><argument_list pos:start="261:48" pos:end="261:64">(<argument pos:start="261:49" pos:end="261:51"><expr pos:start="261:49" pos:end="261:51"><name pos:start="261:49" pos:end="261:51">pls</name></expr></argument>, <argument pos:start="261:54" pos:end="261:58"><expr pos:start="261:54" pos:end="261:58"><operator pos:start="261:54" pos:end="261:54">&amp;</operator><name pos:start="261:55" pos:end="261:58">info</name></expr></argument>, <argument pos:start="261:61" pos:end="261:63"><expr pos:start="261:61" pos:end="261:63"><name pos:start="261:61" pos:end="261:63">url</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="263:11" pos:end="269:9">else if <condition pos:start="263:19" pos:end="263:61">(<expr pos:start="263:20" pos:end="263:60"><call pos:start="263:20" pos:end="263:60"><name pos:start="263:20" pos:end="263:30">av_strstart</name><argument_list pos:start="263:31" pos:end="263:60">(<argument pos:start="263:32" pos:end="263:35"><expr pos:start="263:32" pos:end="263:35"><name pos:start="263:32" pos:end="263:35">line</name></expr></argument>, <argument pos:start="263:38" pos:end="263:53"><expr pos:start="263:38" pos:end="263:53"><literal type="string" pos:start="263:38" pos:end="263:53">"#EXT-X-ENDLIST"</literal></expr></argument>, <argument pos:start="263:56" pos:end="263:59"><expr pos:start="263:56" pos:end="263:59"><operator pos:start="263:56" pos:end="263:56">&amp;</operator><name pos:start="263:57" pos:end="263:59">ptr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="263:63" pos:end="269:9">{<block_content pos:start="265:13" pos:end="267:34">

            <if_stmt pos:start="265:13" pos:end="267:34"><if pos:start="265:13" pos:end="267:34">if <condition pos:start="265:16" pos:end="265:20">(<expr pos:start="265:17" pos:end="265:19"><name pos:start="265:17" pos:end="265:19">pls</name></expr>)</condition><block type="pseudo" pos:start="267:17" pos:end="267:34"><block_content pos:start="267:17" pos:end="267:34">

                <expr_stmt pos:start="267:17" pos:end="267:34"><expr pos:start="267:17" pos:end="267:33"><name pos:start="267:17" pos:end="267:29"><name pos:start="267:17" pos:end="267:19">pls</name><operator pos:start="267:20" pos:end="267:21">-&gt;</operator><name pos:start="267:22" pos:end="267:29">finished</name></name> <operator pos:start="267:31" pos:end="267:31">=</operator> <literal type="number" pos:start="267:33" pos:end="267:33">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="269:11" pos:end="275:9">else if <condition pos:start="269:19" pos:end="269:55">(<expr pos:start="269:20" pos:end="269:54"><call pos:start="269:20" pos:end="269:54"><name pos:start="269:20" pos:end="269:30">av_strstart</name><argument_list pos:start="269:31" pos:end="269:54">(<argument pos:start="269:32" pos:end="269:35"><expr pos:start="269:32" pos:end="269:35"><name pos:start="269:32" pos:end="269:35">line</name></expr></argument>, <argument pos:start="269:38" pos:end="269:47"><expr pos:start="269:38" pos:end="269:47"><literal type="string" pos:start="269:38" pos:end="269:47">"#EXTINF:"</literal></expr></argument>, <argument pos:start="269:50" pos:end="269:53"><expr pos:start="269:50" pos:end="269:53"><operator pos:start="269:50" pos:end="269:50">&amp;</operator><name pos:start="269:51" pos:end="269:53">ptr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="269:57" pos:end="275:9">{<block_content pos:start="271:13" pos:end="273:50">

            <expr_stmt pos:start="271:13" pos:end="271:27"><expr pos:start="271:13" pos:end="271:26"><name pos:start="271:13" pos:end="271:22">is_segment</name> <operator pos:start="271:24" pos:end="271:24">=</operator> <literal type="number" pos:start="271:26" pos:end="271:26">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="273:13" pos:end="273:50"><expr pos:start="273:13" pos:end="273:49"><name pos:start="273:13" pos:end="273:20">duration</name>   <operator pos:start="273:24" pos:end="273:24">=</operator> <call pos:start="273:26" pos:end="273:34"><name pos:start="273:26" pos:end="273:29">atof</name><argument_list pos:start="273:30" pos:end="273:34">(<argument pos:start="273:31" pos:end="273:33"><expr pos:start="273:31" pos:end="273:33"><name pos:start="273:31" pos:end="273:33">ptr</name></expr></argument>)</argument_list></call> <operator pos:start="273:36" pos:end="273:36">*</operator> <name pos:start="273:38" pos:end="273:49">AV_TIME_BASE</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="275:11" pos:end="285:9">else if <condition pos:start="275:19" pos:end="275:64">(<expr pos:start="275:20" pos:end="275:63"><call pos:start="275:20" pos:end="275:63"><name pos:start="275:20" pos:end="275:30">av_strstart</name><argument_list pos:start="275:31" pos:end="275:63">(<argument pos:start="275:32" pos:end="275:35"><expr pos:start="275:32" pos:end="275:35"><name pos:start="275:32" pos:end="275:35">line</name></expr></argument>, <argument pos:start="275:38" pos:end="275:56"><expr pos:start="275:38" pos:end="275:56"><literal type="string" pos:start="275:38" pos:end="275:56">"#EXT-X-BYTERANGE:"</literal></expr></argument>, <argument pos:start="275:59" pos:end="275:62"><expr pos:start="275:59" pos:end="275:62"><operator pos:start="275:59" pos:end="275:59">&amp;</operator><name pos:start="275:60" pos:end="275:62">ptr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="275:66" pos:end="285:9">{<block_content pos:start="277:13" pos:end="283:54">

            <expr_stmt pos:start="277:13" pos:end="277:46"><expr pos:start="277:13" pos:end="277:45"><name pos:start="277:13" pos:end="277:20">seg_size</name> <operator pos:start="277:22" pos:end="277:22">=</operator> <call pos:start="277:24" pos:end="277:45"><name pos:start="277:24" pos:end="277:30">strtoll</name><argument_list pos:start="277:31" pos:end="277:45">(<argument pos:start="277:32" pos:end="277:34"><expr pos:start="277:32" pos:end="277:34"><name pos:start="277:32" pos:end="277:34">ptr</name></expr></argument>, <argument pos:start="277:37" pos:end="277:40"><expr pos:start="277:37" pos:end="277:40"><name pos:start="277:37" pos:end="277:40">NULL</name></expr></argument>, <argument pos:start="277:43" pos:end="277:44"><expr pos:start="277:43" pos:end="277:44"><literal type="number" pos:start="277:43" pos:end="277:44">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="279:13" pos:end="279:35"><expr pos:start="279:13" pos:end="279:34"><name pos:start="279:13" pos:end="279:15">ptr</name> <operator pos:start="279:17" pos:end="279:17">=</operator> <call pos:start="279:19" pos:end="279:34"><name pos:start="279:19" pos:end="279:24">strchr</name><argument_list pos:start="279:25" pos:end="279:34">(<argument pos:start="279:26" pos:end="279:28"><expr pos:start="279:26" pos:end="279:28"><name pos:start="279:26" pos:end="279:28">ptr</name></expr></argument>, <argument pos:start="279:31" pos:end="279:33"><expr pos:start="279:31" pos:end="279:33"><literal type="char" pos:start="279:31" pos:end="279:33">'@'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="281:13" pos:end="283:54"><if pos:start="281:13" pos:end="283:54">if <condition pos:start="281:16" pos:end="281:20">(<expr pos:start="281:17" pos:end="281:19"><name pos:start="281:17" pos:end="281:19">ptr</name></expr>)</condition><block type="pseudo" pos:start="283:17" pos:end="283:54"><block_content pos:start="283:17" pos:end="283:54">

                <expr_stmt pos:start="283:17" pos:end="283:54"><expr pos:start="283:17" pos:end="283:53"><name pos:start="283:17" pos:end="283:26">seg_offset</name> <operator pos:start="283:28" pos:end="283:28">=</operator> <call pos:start="283:30" pos:end="283:53"><name pos:start="283:30" pos:end="283:36">strtoll</name><argument_list pos:start="283:37" pos:end="283:53">(<argument pos:start="283:38" pos:end="283:42"><expr pos:start="283:38" pos:end="283:42"><name pos:start="283:38" pos:end="283:40">ptr</name><operator pos:start="283:41" pos:end="283:41">+</operator><literal type="number" pos:start="283:42" pos:end="283:42">1</literal></expr></argument>, <argument pos:start="283:45" pos:end="283:48"><expr pos:start="283:45" pos:end="283:48"><name pos:start="283:45" pos:end="283:48">NULL</name></expr></argument>, <argument pos:start="283:51" pos:end="283:52"><expr pos:start="283:51" pos:end="283:52"><literal type="number" pos:start="283:51" pos:end="283:52">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="285:11" pos:end="289:9">else if <condition pos:start="285:19" pos:end="285:48">(<expr pos:start="285:20" pos:end="285:47"><call pos:start="285:20" pos:end="285:47"><name pos:start="285:20" pos:end="285:30">av_strstart</name><argument_list pos:start="285:31" pos:end="285:47">(<argument pos:start="285:32" pos:end="285:35"><expr pos:start="285:32" pos:end="285:35"><name pos:start="285:32" pos:end="285:35">line</name></expr></argument>, <argument pos:start="285:38" pos:end="285:40"><expr pos:start="285:38" pos:end="285:40"><literal type="string" pos:start="285:38" pos:end="285:40">"#"</literal></expr></argument>, <argument pos:start="285:43" pos:end="285:46"><expr pos:start="285:43" pos:end="285:46"><name pos:start="285:43" pos:end="285:46">NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="285:50" pos:end="289:9">{<block_content pos:start="287:13" pos:end="287:21">

            <continue pos:start="287:13" pos:end="287:21">continue;</continue>

        </block_content>}</block></if> <if type="elseif" pos:start="289:11" pos:end="425:9">else if <condition pos:start="289:19" pos:end="289:27">(<expr pos:start="289:20" pos:end="289:26"><name pos:start="289:20" pos:end="289:26"><name pos:start="289:20" pos:end="289:23">line</name><index pos:start="289:24" pos:end="289:26">[<expr pos:start="289:25" pos:end="289:25"><literal type="number" pos:start="289:25" pos:end="289:25">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="289:29" pos:end="425:9">{<block_content pos:start="291:13" pos:end="423:13">

            <if_stmt pos:start="291:13" pos:end="303:13"><if pos:start="291:13" pos:end="303:13">if <condition pos:start="291:16" pos:end="291:27">(<expr pos:start="291:17" pos:end="291:26"><name pos:start="291:17" pos:end="291:26">is_variant</name></expr>)</condition> <block pos:start="291:29" pos:end="303:13">{<block_content pos:start="293:17" pos:end="301:31">

                <if_stmt pos:start="293:17" pos:end="299:17"><if pos:start="293:17" pos:end="299:17">if <condition pos:start="293:20" pos:end="293:62">(<expr pos:start="293:21" pos:end="293:61"><operator pos:start="293:21" pos:end="293:21">!</operator><call pos:start="293:22" pos:end="293:61"><name pos:start="293:22" pos:end="293:32">new_variant</name><argument_list pos:start="293:33" pos:end="293:61">(<argument pos:start="293:34" pos:end="293:34"><expr pos:start="293:34" pos:end="293:34"><name pos:start="293:34" pos:end="293:34">c</name></expr></argument>, <argument pos:start="293:37" pos:end="293:49"><expr pos:start="293:37" pos:end="293:49"><operator pos:start="293:37" pos:end="293:37">&amp;</operator><name pos:start="293:38" pos:end="293:49">variant_info</name></expr></argument>, <argument pos:start="293:52" pos:end="293:55"><expr pos:start="293:52" pos:end="293:55"><name pos:start="293:52" pos:end="293:55">line</name></expr></argument>, <argument pos:start="293:58" pos:end="293:60"><expr pos:start="293:58" pos:end="293:60"><name pos:start="293:58" pos:end="293:60">url</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="293:64" pos:end="299:17">{<block_content pos:start="295:21" pos:end="297:30">

                    <expr_stmt pos:start="295:21" pos:end="295:42"><expr pos:start="295:21" pos:end="295:41"><name pos:start="295:21" pos:end="295:23">ret</name> <operator pos:start="295:25" pos:end="295:25">=</operator> <call pos:start="295:27" pos:end="295:41"><name pos:start="295:27" pos:end="295:33">AVERROR</name><argument_list pos:start="295:34" pos:end="295:41">(<argument pos:start="295:35" pos:end="295:40"><expr pos:start="295:35" pos:end="295:40"><name pos:start="295:35" pos:end="295:40">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="297:21" pos:end="297:30">goto <name pos:start="297:26" pos:end="297:29">fail</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="301:17" pos:end="301:31"><expr pos:start="301:17" pos:end="301:30"><name pos:start="301:17" pos:end="301:26">is_variant</name> <operator pos:start="301:28" pos:end="301:28">=</operator> <literal type="number" pos:start="301:30" pos:end="301:30">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="305:13" pos:end="423:13"><if pos:start="305:13" pos:end="423:13">if <condition pos:start="305:16" pos:end="305:27">(<expr pos:start="305:17" pos:end="305:26"><name pos:start="305:17" pos:end="305:26">is_segment</name></expr>)</condition> <block pos:start="305:29" pos:end="423:13">{<block_content pos:start="307:17" pos:end="421:53">

                <decl_stmt pos:start="307:17" pos:end="307:36"><decl pos:start="307:17" pos:end="307:35"><type pos:start="307:17" pos:end="307:32"><name pos:start="307:17" pos:end="307:30"><name pos:start="307:17" pos:end="307:22">struct</name> <name pos:start="307:24" pos:end="307:30">segment</name></name> <modifier pos:start="307:32" pos:end="307:32">*</modifier></type><name pos:start="307:33" pos:end="307:35">seg</name></decl>;</decl_stmt>

                <if_stmt pos:start="309:17" pos:end="321:17"><if pos:start="309:17" pos:end="321:17">if <condition pos:start="309:20" pos:end="309:25">(<expr pos:start="309:21" pos:end="309:24"><operator pos:start="309:21" pos:end="309:21">!</operator><name pos:start="309:22" pos:end="309:24">pls</name></expr>)</condition> <block pos:start="309:27" pos:end="321:17">{<block_content pos:start="311:21" pos:end="319:59">

                    <if_stmt pos:start="311:21" pos:end="317:21"><if pos:start="311:21" pos:end="317:21">if <condition pos:start="311:24" pos:end="311:54">(<expr pos:start="311:25" pos:end="311:53"><operator pos:start="311:25" pos:end="311:25">!</operator><call pos:start="311:26" pos:end="311:53"><name pos:start="311:26" pos:end="311:36">new_variant</name><argument_list pos:start="311:37" pos:end="311:53">(<argument pos:start="311:38" pos:end="311:38"><expr pos:start="311:38" pos:end="311:38"><name pos:start="311:38" pos:end="311:38">c</name></expr></argument>, <argument pos:start="311:41" pos:end="311:41"><expr pos:start="311:41" pos:end="311:41"><literal type="number" pos:start="311:41" pos:end="311:41">0</literal></expr></argument>, <argument pos:start="311:44" pos:end="311:46"><expr pos:start="311:44" pos:end="311:46"><name pos:start="311:44" pos:end="311:46">url</name></expr></argument>, <argument pos:start="311:49" pos:end="311:52"><expr pos:start="311:49" pos:end="311:52"><name pos:start="311:49" pos:end="311:52">NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="311:56" pos:end="317:21">{<block_content pos:start="313:25" pos:end="315:34">

                        <expr_stmt pos:start="313:25" pos:end="313:46"><expr pos:start="313:25" pos:end="313:45"><name pos:start="313:25" pos:end="313:27">ret</name> <operator pos:start="313:29" pos:end="313:29">=</operator> <call pos:start="313:31" pos:end="313:45"><name pos:start="313:31" pos:end="313:37">AVERROR</name><argument_list pos:start="313:38" pos:end="313:45">(<argument pos:start="313:39" pos:end="313:44"><expr pos:start="313:39" pos:end="313:44"><name pos:start="313:39" pos:end="313:44">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <goto pos:start="315:25" pos:end="315:34">goto <name pos:start="315:30" pos:end="315:33">fail</name>;</goto>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="319:21" pos:end="319:59"><expr pos:start="319:21" pos:end="319:58"><name pos:start="319:21" pos:end="319:23">pls</name> <operator pos:start="319:25" pos:end="319:25">=</operator> <name pos:start="319:27" pos:end="319:58"><name pos:start="319:27" pos:end="319:27">c</name><operator pos:start="319:28" pos:end="319:29">-&gt;</operator><name pos:start="319:30" pos:end="319:38">playlists</name><index pos:start="319:39" pos:end="319:58">[<expr pos:start="319:40" pos:end="319:57"><name pos:start="319:40" pos:end="319:53"><name pos:start="319:40" pos:end="319:40">c</name><operator pos:start="319:41" pos:end="319:42">-&gt;</operator><name pos:start="319:43" pos:end="319:53">n_playlists</name></name> <operator pos:start="319:55" pos:end="319:55">-</operator> <literal type="number" pos:start="319:57" pos:end="319:57">1</literal></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="323:17" pos:end="323:56"><expr pos:start="323:17" pos:end="323:55"><name pos:start="323:17" pos:end="323:19">seg</name> <operator pos:start="323:21" pos:end="323:21">=</operator> <call pos:start="323:23" pos:end="323:55"><name pos:start="323:23" pos:end="323:31">av_malloc</name><argument_list pos:start="323:32" pos:end="323:55">(<argument pos:start="323:33" pos:end="323:54"><expr pos:start="323:33" pos:end="323:54"><sizeof pos:start="323:33" pos:end="323:54">sizeof<argument_list pos:start="323:39" pos:end="323:54">(<argument pos:start="323:40" pos:end="323:53"><expr pos:start="323:40" pos:end="323:53">struct <name pos:start="323:47" pos:end="323:53">segment</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="325:17" pos:end="331:17"><if pos:start="325:17" pos:end="331:17">if <condition pos:start="325:20" pos:end="325:25">(<expr pos:start="325:21" pos:end="325:24"><operator pos:start="325:21" pos:end="325:21">!</operator><name pos:start="325:22" pos:end="325:24">seg</name></expr>)</condition> <block pos:start="325:27" pos:end="331:17">{<block_content pos:start="327:21" pos:end="329:30">

                    <expr_stmt pos:start="327:21" pos:end="327:42"><expr pos:start="327:21" pos:end="327:41"><name pos:start="327:21" pos:end="327:23">ret</name> <operator pos:start="327:25" pos:end="327:25">=</operator> <call pos:start="327:27" pos:end="327:41"><name pos:start="327:27" pos:end="327:33">AVERROR</name><argument_list pos:start="327:34" pos:end="327:41">(<argument pos:start="327:35" pos:end="327:40"><expr pos:start="327:35" pos:end="327:40"><name pos:start="327:35" pos:end="327:40">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="329:21" pos:end="329:30">goto <name pos:start="329:26" pos:end="329:29">fail</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="333:17" pos:end="333:41"><expr pos:start="333:17" pos:end="333:40"><name pos:start="333:17" pos:end="333:29"><name pos:start="333:17" pos:end="333:19">seg</name><operator pos:start="333:20" pos:end="333:21">-&gt;</operator><name pos:start="333:22" pos:end="333:29">duration</name></name> <operator pos:start="333:31" pos:end="333:31">=</operator> <name pos:start="333:33" pos:end="333:40">duration</name></expr>;</expr_stmt>

                <expr_stmt pos:start="335:17" pos:end="335:41"><expr pos:start="335:17" pos:end="335:40"><name pos:start="335:17" pos:end="335:29"><name pos:start="335:17" pos:end="335:19">seg</name><operator pos:start="335:20" pos:end="335:21">-&gt;</operator><name pos:start="335:22" pos:end="335:29">key_type</name></name> <operator pos:start="335:31" pos:end="335:31">=</operator> <name pos:start="335:33" pos:end="335:40">key_type</name></expr>;</expr_stmt>

                <if_stmt pos:start="337:17" pos:end="349:17"><if pos:start="337:17" pos:end="341:17">if <condition pos:start="337:20" pos:end="337:27">(<expr pos:start="337:21" pos:end="337:26"><name pos:start="337:21" pos:end="337:26">has_iv</name></expr>)</condition> <block pos:start="337:29" pos:end="341:17">{<block_content pos:start="339:21" pos:end="339:52">

                    <expr_stmt pos:start="339:21" pos:end="339:52"><expr pos:start="339:21" pos:end="339:51"><call pos:start="339:21" pos:end="339:51"><name pos:start="339:21" pos:end="339:26">memcpy</name><argument_list pos:start="339:27" pos:end="339:51">(<argument pos:start="339:28" pos:end="339:34"><expr pos:start="339:28" pos:end="339:34"><name pos:start="339:28" pos:end="339:34"><name pos:start="339:28" pos:end="339:30">seg</name><operator pos:start="339:31" pos:end="339:32">-&gt;</operator><name pos:start="339:33" pos:end="339:34">iv</name></name></expr></argument>, <argument pos:start="339:37" pos:end="339:38"><expr pos:start="339:37" pos:end="339:38"><name pos:start="339:37" pos:end="339:38">iv</name></expr></argument>, <argument pos:start="339:41" pos:end="339:50"><expr pos:start="339:41" pos:end="339:50"><sizeof pos:start="339:41" pos:end="339:50">sizeof<argument_list pos:start="339:47" pos:end="339:50">(<argument pos:start="339:48" pos:end="339:49"><expr pos:start="339:48" pos:end="339:49"><name pos:start="339:48" pos:end="339:49">iv</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="341:19" pos:end="349:17">else <block pos:start="341:24" pos:end="349:17">{<block_content pos:start="343:21" pos:end="347:47">

                    <decl_stmt pos:start="343:21" pos:end="343:66"><decl pos:start="343:21" pos:end="343:65"><type pos:start="343:21" pos:end="343:23"><name pos:start="343:21" pos:end="343:23">int</name></type> <name pos:start="343:25" pos:end="343:27">seq</name> <init pos:start="343:29" pos:end="343:65">= <expr pos:start="343:31" pos:end="343:65"><name pos:start="343:31" pos:end="343:47"><name pos:start="343:31" pos:end="343:33">pls</name><operator pos:start="343:34" pos:end="343:35">-&gt;</operator><name pos:start="343:36" pos:end="343:47">start_seq_no</name></name> <operator pos:start="343:49" pos:end="343:49">+</operator> <name pos:start="343:51" pos:end="343:65"><name pos:start="343:51" pos:end="343:53">pls</name><operator pos:start="343:54" pos:end="343:55">-&gt;</operator><name pos:start="343:56" pos:end="343:65">n_segments</name></name></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="345:21" pos:end="345:56"><expr pos:start="345:21" pos:end="345:55"><call pos:start="345:21" pos:end="345:55"><name pos:start="345:21" pos:end="345:26">memset</name><argument_list pos:start="345:27" pos:end="345:55">(<argument pos:start="345:28" pos:end="345:34"><expr pos:start="345:28" pos:end="345:34"><name pos:start="345:28" pos:end="345:34"><name pos:start="345:28" pos:end="345:30">seg</name><operator pos:start="345:31" pos:end="345:32">-&gt;</operator><name pos:start="345:33" pos:end="345:34">iv</name></name></expr></argument>, <argument pos:start="345:37" pos:end="345:37"><expr pos:start="345:37" pos:end="345:37"><literal type="number" pos:start="345:37" pos:end="345:37">0</literal></expr></argument>, <argument pos:start="345:40" pos:end="345:54"><expr pos:start="345:40" pos:end="345:54"><sizeof pos:start="345:40" pos:end="345:54">sizeof<argument_list pos:start="345:46" pos:end="345:54">(<argument pos:start="345:47" pos:end="345:53"><expr pos:start="345:47" pos:end="345:53"><name pos:start="345:47" pos:end="345:53"><name pos:start="345:47" pos:end="345:49">seg</name><operator pos:start="345:50" pos:end="345:51">-&gt;</operator><name pos:start="345:52" pos:end="345:53">iv</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="347:21" pos:end="347:47"><expr pos:start="347:21" pos:end="347:46"><call pos:start="347:21" pos:end="347:46"><name pos:start="347:21" pos:end="347:27">AV_WB32</name><argument_list pos:start="347:28" pos:end="347:46">(<argument pos:start="347:29" pos:end="347:40"><expr pos:start="347:29" pos:end="347:40"><name pos:start="347:29" pos:end="347:35"><name pos:start="347:29" pos:end="347:31">seg</name><operator pos:start="347:32" pos:end="347:33">-&gt;</operator><name pos:start="347:34" pos:end="347:35">iv</name></name> <operator pos:start="347:37" pos:end="347:37">+</operator> <literal type="number" pos:start="347:39" pos:end="347:40">12</literal></expr></argument>, <argument pos:start="347:43" pos:end="347:45"><expr pos:start="347:43" pos:end="347:45"><name pos:start="347:43" pos:end="347:45">seq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>



                <if_stmt pos:start="353:17" pos:end="373:17"><if pos:start="353:17" pos:end="369:17">if <condition pos:start="353:20" pos:end="353:41">(<expr pos:start="353:21" pos:end="353:40"><name pos:start="353:21" pos:end="353:28">key_type</name> <operator pos:start="353:30" pos:end="353:31">!=</operator> <name pos:start="353:33" pos:end="353:40">KEY_NONE</name></expr>)</condition> <block pos:start="353:43" pos:end="369:17">{<block_content pos:start="355:21" pos:end="367:21">

                    <expr_stmt pos:start="355:21" pos:end="355:77"><expr pos:start="355:21" pos:end="355:76"><call pos:start="355:21" pos:end="355:76"><name pos:start="355:21" pos:end="355:40">ff_make_absolute_url</name><argument_list pos:start="355:41" pos:end="355:76">(<argument pos:start="355:42" pos:end="355:48"><expr pos:start="355:42" pos:end="355:48"><name pos:start="355:42" pos:end="355:48">tmp_str</name></expr></argument>, <argument pos:start="355:51" pos:end="355:65"><expr pos:start="355:51" pos:end="355:65"><sizeof pos:start="355:51" pos:end="355:65">sizeof<argument_list pos:start="355:57" pos:end="355:65">(<argument pos:start="355:58" pos:end="355:64"><expr pos:start="355:58" pos:end="355:64"><name pos:start="355:58" pos:end="355:64">tmp_str</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="355:68" pos:end="355:70"><expr pos:start="355:68" pos:end="355:70"><name pos:start="355:68" pos:end="355:70">url</name></expr></argument>, <argument pos:start="355:73" pos:end="355:75"><expr pos:start="355:73" pos:end="355:75"><name pos:start="355:73" pos:end="355:75">key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="357:21" pos:end="357:50"><expr pos:start="357:21" pos:end="357:49"><name pos:start="357:21" pos:end="357:28"><name pos:start="357:21" pos:end="357:23">seg</name><operator pos:start="357:24" pos:end="357:25">-&gt;</operator><name pos:start="357:26" pos:end="357:28">key</name></name> <operator pos:start="357:30" pos:end="357:30">=</operator> <call pos:start="357:32" pos:end="357:49"><name pos:start="357:32" pos:end="357:40">av_strdup</name><argument_list pos:start="357:41" pos:end="357:49">(<argument pos:start="357:42" pos:end="357:48"><expr pos:start="357:42" pos:end="357:48"><name pos:start="357:42" pos:end="357:48">tmp_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="359:21" pos:end="367:21"><if pos:start="359:21" pos:end="367:21">if <condition pos:start="359:24" pos:end="359:34">(<expr pos:start="359:25" pos:end="359:33"><operator pos:start="359:25" pos:end="359:25">!</operator><name pos:start="359:26" pos:end="359:33"><name pos:start="359:26" pos:end="359:28">seg</name><operator pos:start="359:29" pos:end="359:30">-&gt;</operator><name pos:start="359:31" pos:end="359:33">key</name></name></expr>)</condition> <block pos:start="359:36" pos:end="367:21">{<block_content pos:start="361:25" pos:end="365:34">

                        <expr_stmt pos:start="361:25" pos:end="361:37"><expr pos:start="361:25" pos:end="361:36"><call pos:start="361:25" pos:end="361:36"><name pos:start="361:25" pos:end="361:31">av_free</name><argument_list pos:start="361:32" pos:end="361:36">(<argument pos:start="361:33" pos:end="361:35"><expr pos:start="361:33" pos:end="361:35"><name pos:start="361:33" pos:end="361:35">seg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="363:25" pos:end="363:46"><expr pos:start="363:25" pos:end="363:45"><name pos:start="363:25" pos:end="363:27">ret</name> <operator pos:start="363:29" pos:end="363:29">=</operator> <call pos:start="363:31" pos:end="363:45"><name pos:start="363:31" pos:end="363:37">AVERROR</name><argument_list pos:start="363:38" pos:end="363:45">(<argument pos:start="363:39" pos:end="363:44"><expr pos:start="363:39" pos:end="363:44"><name pos:start="363:39" pos:end="363:44">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <goto pos:start="365:25" pos:end="365:34">goto <name pos:start="365:30" pos:end="365:33">fail</name>;</goto>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if> <else pos:start="369:19" pos:end="373:17">else <block pos:start="369:24" pos:end="373:17">{<block_content pos:start="371:21" pos:end="371:36">

                    <expr_stmt pos:start="371:21" pos:end="371:36"><expr pos:start="371:21" pos:end="371:35"><name pos:start="371:21" pos:end="371:28"><name pos:start="371:21" pos:end="371:23">seg</name><operator pos:start="371:24" pos:end="371:25">-&gt;</operator><name pos:start="371:26" pos:end="371:28">key</name></name> <operator pos:start="371:30" pos:end="371:30">=</operator> <name pos:start="371:32" pos:end="371:35">NULL</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>



                <expr_stmt pos:start="377:17" pos:end="377:74"><expr pos:start="377:17" pos:end="377:73"><call pos:start="377:17" pos:end="377:73"><name pos:start="377:17" pos:end="377:36">ff_make_absolute_url</name><argument_list pos:start="377:37" pos:end="377:73">(<argument pos:start="377:38" pos:end="377:44"><expr pos:start="377:38" pos:end="377:44"><name pos:start="377:38" pos:end="377:44">tmp_str</name></expr></argument>, <argument pos:start="377:47" pos:end="377:61"><expr pos:start="377:47" pos:end="377:61"><sizeof pos:start="377:47" pos:end="377:61">sizeof<argument_list pos:start="377:53" pos:end="377:61">(<argument pos:start="377:54" pos:end="377:60"><expr pos:start="377:54" pos:end="377:60"><name pos:start="377:54" pos:end="377:60">tmp_str</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="377:64" pos:end="377:66"><expr pos:start="377:64" pos:end="377:66"><name pos:start="377:64" pos:end="377:66">url</name></expr></argument>, <argument pos:start="377:69" pos:end="377:72"><expr pos:start="377:69" pos:end="377:72"><name pos:start="377:69" pos:end="377:72">line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="379:17" pos:end="379:46"><expr pos:start="379:17" pos:end="379:45"><name pos:start="379:17" pos:end="379:24"><name pos:start="379:17" pos:end="379:19">seg</name><operator pos:start="379:20" pos:end="379:21">-&gt;</operator><name pos:start="379:22" pos:end="379:24">url</name></name> <operator pos:start="379:26" pos:end="379:26">=</operator> <call pos:start="379:28" pos:end="379:45"><name pos:start="379:28" pos:end="379:36">av_strdup</name><argument_list pos:start="379:37" pos:end="379:45">(<argument pos:start="379:38" pos:end="379:44"><expr pos:start="379:38" pos:end="379:44"><name pos:start="379:38" pos:end="379:44">tmp_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="381:17" pos:end="391:17"><if pos:start="381:17" pos:end="391:17">if <condition pos:start="381:20" pos:end="381:30">(<expr pos:start="381:21" pos:end="381:29"><operator pos:start="381:21" pos:end="381:21">!</operator><name pos:start="381:22" pos:end="381:29"><name pos:start="381:22" pos:end="381:24">seg</name><operator pos:start="381:25" pos:end="381:26">-&gt;</operator><name pos:start="381:27" pos:end="381:29">url</name></name></expr>)</condition> <block pos:start="381:32" pos:end="391:17">{<block_content pos:start="383:21" pos:end="389:30">

                    <expr_stmt pos:start="383:21" pos:end="383:38"><expr pos:start="383:21" pos:end="383:37"><call pos:start="383:21" pos:end="383:37"><name pos:start="383:21" pos:end="383:27">av_free</name><argument_list pos:start="383:28" pos:end="383:37">(<argument pos:start="383:29" pos:end="383:36"><expr pos:start="383:29" pos:end="383:36"><name pos:start="383:29" pos:end="383:36"><name pos:start="383:29" pos:end="383:31">seg</name><operator pos:start="383:32" pos:end="383:33">-&gt;</operator><name pos:start="383:34" pos:end="383:36">key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="385:21" pos:end="385:33"><expr pos:start="385:21" pos:end="385:32"><call pos:start="385:21" pos:end="385:32"><name pos:start="385:21" pos:end="385:27">av_free</name><argument_list pos:start="385:28" pos:end="385:32">(<argument pos:start="385:29" pos:end="385:31"><expr pos:start="385:29" pos:end="385:31"><name pos:start="385:29" pos:end="385:31">seg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="387:21" pos:end="387:42"><expr pos:start="387:21" pos:end="387:41"><name pos:start="387:21" pos:end="387:23">ret</name> <operator pos:start="387:25" pos:end="387:25">=</operator> <call pos:start="387:27" pos:end="387:41"><name pos:start="387:27" pos:end="387:33">AVERROR</name><argument_list pos:start="387:34" pos:end="387:41">(<argument pos:start="387:35" pos:end="387:40"><expr pos:start="387:35" pos:end="387:40"><name pos:start="387:35" pos:end="387:40">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="389:21" pos:end="389:30">goto <name pos:start="389:26" pos:end="389:29">fail</name>;</goto>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="395:17" pos:end="395:68"><expr pos:start="395:17" pos:end="395:67"><call pos:start="395:17" pos:end="395:67"><name pos:start="395:17" pos:end="395:28">dynarray_add</name><argument_list pos:start="395:29" pos:end="395:67">(<argument pos:start="395:30" pos:end="395:43"><expr pos:start="395:30" pos:end="395:43"><operator pos:start="395:30" pos:end="395:30">&amp;</operator><name pos:start="395:31" pos:end="395:43"><name pos:start="395:31" pos:end="395:33">pls</name><operator pos:start="395:34" pos:end="395:35">-&gt;</operator><name pos:start="395:36" pos:end="395:43">segments</name></name></expr></argument>, <argument pos:start="395:46" pos:end="395:61"><expr pos:start="395:46" pos:end="395:61"><operator pos:start="395:46" pos:end="395:46">&amp;</operator><name pos:start="395:47" pos:end="395:61"><name pos:start="395:47" pos:end="395:49">pls</name><operator pos:start="395:50" pos:end="395:51">-&gt;</operator><name pos:start="395:52" pos:end="395:61">n_segments</name></name></expr></argument>, <argument pos:start="395:64" pos:end="395:66"><expr pos:start="395:64" pos:end="395:66"><name pos:start="395:64" pos:end="395:66">seg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="397:17" pos:end="397:31"><expr pos:start="397:17" pos:end="397:30"><name pos:start="397:17" pos:end="397:26">is_segment</name> <operator pos:start="397:28" pos:end="397:28">=</operator> <literal type="number" pos:start="397:30" pos:end="397:30">0</literal></expr>;</expr_stmt>



                <expr_stmt pos:start="401:17" pos:end="401:37"><expr pos:start="401:17" pos:end="401:36"><name pos:start="401:17" pos:end="401:25"><name pos:start="401:17" pos:end="401:19">seg</name><operator pos:start="401:20" pos:end="401:21">-&gt;</operator><name pos:start="401:22" pos:end="401:25">size</name></name> <operator pos:start="401:27" pos:end="401:27">=</operator> <name pos:start="401:29" pos:end="401:36">seg_size</name></expr>;</expr_stmt>

                <if_stmt pos:start="403:17" pos:end="417:17"><if pos:start="403:17" pos:end="411:17">if <condition pos:start="403:20" pos:end="403:34">(<expr pos:start="403:21" pos:end="403:33"><name pos:start="403:21" pos:end="403:28">seg_size</name> <operator pos:start="403:30" pos:end="403:31">&gt;=</operator> <literal type="number" pos:start="403:33" pos:end="403:33">0</literal></expr>)</condition> <block pos:start="403:36" pos:end="411:17">{<block_content pos:start="405:21" pos:end="409:34">

                    <expr_stmt pos:start="405:21" pos:end="405:49"><expr pos:start="405:21" pos:end="405:48"><name pos:start="405:21" pos:end="405:35"><name pos:start="405:21" pos:end="405:23">seg</name><operator pos:start="405:24" pos:end="405:25">-&gt;</operator><name pos:start="405:26" pos:end="405:35">url_offset</name></name> <operator pos:start="405:37" pos:end="405:37">=</operator> <name pos:start="405:39" pos:end="405:48">seg_offset</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="407:21" pos:end="407:43"><expr pos:start="407:21" pos:end="407:42"><name pos:start="407:21" pos:end="407:30">seg_offset</name> <operator pos:start="407:32" pos:end="407:33">+=</operator> <name pos:start="407:35" pos:end="407:42">seg_size</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="409:21" pos:end="409:34"><expr pos:start="409:21" pos:end="409:33"><name pos:start="409:21" pos:end="409:28">seg_size</name> <operator pos:start="409:30" pos:end="409:30">=</operator> <operator pos:start="409:32" pos:end="409:32">-</operator><literal type="number" pos:start="409:33" pos:end="409:33">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="411:19" pos:end="417:17">else <block pos:start="411:24" pos:end="417:17">{<block_content pos:start="413:21" pos:end="415:35">

                    <expr_stmt pos:start="413:21" pos:end="413:40"><expr pos:start="413:21" pos:end="413:39"><name pos:start="413:21" pos:end="413:35"><name pos:start="413:21" pos:end="413:23">seg</name><operator pos:start="413:24" pos:end="413:25">-&gt;</operator><name pos:start="413:26" pos:end="413:35">url_offset</name></name> <operator pos:start="413:37" pos:end="413:37">=</operator> <literal type="number" pos:start="413:39" pos:end="413:39">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="415:21" pos:end="415:35"><expr pos:start="415:21" pos:end="415:34"><name pos:start="415:21" pos:end="415:30">seg_offset</name> <operator pos:start="415:32" pos:end="415:32">=</operator> <literal type="number" pos:start="415:34" pos:end="415:34">0</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>



                <expr_stmt pos:start="421:17" pos:end="421:53"><expr pos:start="421:17" pos:end="421:52"><name pos:start="421:17" pos:end="421:33"><name pos:start="421:17" pos:end="421:19">seg</name><operator pos:start="421:20" pos:end="421:21">-&gt;</operator><name pos:start="421:22" pos:end="421:33">init_section</name></name> <operator pos:start="421:35" pos:end="421:35">=</operator> <name pos:start="421:37" pos:end="421:52">cur_init_section</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>

    <if_stmt pos:start="429:5" pos:end="431:52"><if pos:start="429:5" pos:end="431:52">if <condition pos:start="429:8" pos:end="429:12">(<expr pos:start="429:9" pos:end="429:11"><name pos:start="429:9" pos:end="429:11">pls</name></expr>)</condition><block type="pseudo" pos:start="431:9" pos:end="431:52"><block_content pos:start="431:9" pos:end="431:52">

        <expr_stmt pos:start="431:9" pos:end="431:52"><expr pos:start="431:9" pos:end="431:51"><name pos:start="431:9" pos:end="431:27"><name pos:start="431:9" pos:end="431:11">pls</name><operator pos:start="431:12" pos:end="431:13">-&gt;</operator><name pos:start="431:14" pos:end="431:27">last_load_time</name></name> <operator pos:start="431:29" pos:end="431:29">=</operator> <call pos:start="431:31" pos:end="431:51"><name pos:start="431:31" pos:end="431:49">av_gettime_relative</name><argument_list pos:start="431:50" pos:end="431:51">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



<label pos:start="435:1" pos:end="435:5"><name pos:start="435:1" pos:end="435:4">fail</name>:</label>

    <expr_stmt pos:start="437:5" pos:end="437:21"><expr pos:start="437:5" pos:end="437:20"><call pos:start="437:5" pos:end="437:20"><name pos:start="437:5" pos:end="437:11">av_free</name><argument_list pos:start="437:12" pos:end="437:20">(<argument pos:start="437:13" pos:end="437:19"><expr pos:start="437:13" pos:end="437:19"><name pos:start="437:13" pos:end="437:19">new_url</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="439:5" pos:end="441:40"><if pos:start="439:5" pos:end="441:40">if <condition pos:start="439:8" pos:end="439:17">(<expr pos:start="439:9" pos:end="439:16"><name pos:start="439:9" pos:end="439:16">close_in</name></expr>)</condition><block type="pseudo" pos:start="441:9" pos:end="441:40"><block_content pos:start="441:9" pos:end="441:40">

        <expr_stmt pos:start="441:9" pos:end="441:40"><expr pos:start="441:9" pos:end="441:39"><call pos:start="441:9" pos:end="441:39"><name pos:start="441:9" pos:end="441:26">ff_format_io_close</name><argument_list pos:start="441:27" pos:end="441:39">(<argument pos:start="441:28" pos:end="441:33"><expr pos:start="441:28" pos:end="441:33"><name pos:start="441:28" pos:end="441:33"><name pos:start="441:28" pos:end="441:28">c</name><operator pos:start="441:29" pos:end="441:30">-&gt;</operator><name pos:start="441:31" pos:end="441:33">ctx</name></name></expr></argument>, <argument pos:start="441:36" pos:end="441:38"><expr pos:start="441:36" pos:end="441:38"><operator pos:start="441:36" pos:end="441:36">&amp;</operator><name pos:start="441:37" pos:end="441:38">in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="443:5" pos:end="443:15">return <expr pos:start="443:12" pos:end="443:14"><name pos:start="443:12" pos:end="443:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
