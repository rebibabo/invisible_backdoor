<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25255.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">rate_control</name><parameter_list pos:start="1:24" pos:end="1:57">(<parameter pos:start="1:25" pos:end="1:45"><decl pos:start="1:25" pos:end="1:45"><type pos:start="1:25" pos:end="1:45"><name pos:start="1:25" pos:end="1:38">AVCodecContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:45">avctx</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:56"><decl pos:start="1:48" pos:end="1:56"><type pos:start="1:48" pos:end="1:56"><name pos:start="1:48" pos:end="1:51">void</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">arg</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:13">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">SliceArgs</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:24">slice_dat</name> <init pos:start="5:26" pos:end="5:30">= <expr pos:start="5:28" pos:end="5:30"><name pos:start="5:28" pos:end="5:30">arg</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">VC2EncContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:37">= <expr pos:start="7:24" pos:end="7:37"><name pos:start="7:24" pos:end="7:37"><name pos:start="7:24" pos:end="7:32">slice_dat</name><operator pos:start="7:33" pos:end="7:34">-&gt;</operator><name pos:start="7:35" pos:end="7:37">ctx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:16">sx</name> <init pos:start="9:18" pos:end="9:31">= <expr pos:start="9:20" pos:end="9:31"><name pos:start="9:20" pos:end="9:31"><name pos:start="9:20" pos:end="9:28">slice_dat</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:31">x</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:31"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:16">sy</name> <init pos:start="11:18" pos:end="11:31">= <expr pos:start="11:20" pos:end="11:31"><name pos:start="11:20" pos:end="11:31"><name pos:start="11:20" pos:end="11:28">slice_dat</name><operator pos:start="11:29" pos:end="11:30">-&gt;</operator><name pos:start="11:31" pos:end="11:31">y</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:76"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:17">quant_buf</name><index pos:start="13:18" pos:end="13:20">[<expr pos:start="13:19" pos:end="13:19"><literal type="number" pos:start="13:19" pos:end="13:19">2</literal></expr>]</index></name></decl>, <decl pos:start="13:23" pos:end="13:33"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:23" pos:end="13:33"><name pos:start="13:23" pos:end="13:30">bits_buf</name><index pos:start="13:31" pos:end="13:33">[<expr pos:start="13:32" pos:end="13:32"><literal type="number" pos:start="13:32" pos:end="13:32">2</literal></expr>]</index></name></decl>, <decl pos:start="13:36" pos:end="13:53"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:36" pos:end="13:40">quant</name> <init pos:start="13:42" pos:end="13:53">= <expr pos:start="13:44" pos:end="13:53"><name pos:start="13:44" pos:end="13:53"><name pos:start="13:44" pos:end="13:44">s</name><operator pos:start="13:45" pos:end="13:46">-&gt;</operator><name pos:start="13:47" pos:end="13:53">q_start</name></name></expr></init></decl>, <decl pos:start="13:56" pos:end="13:75"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:56" pos:end="13:60">range</name> <init pos:start="13:62" pos:end="13:75">= <expr pos:start="13:64" pos:end="13:75"><name pos:start="13:64" pos:end="13:73"><name pos:start="13:64" pos:end="13:64">s</name><operator pos:start="13:65" pos:end="13:66">-&gt;</operator><name pos:start="13:67" pos:end="13:73">q_start</name></name><operator pos:start="13:74" pos:end="13:74">/</operator><literal type="number" pos:start="13:75" pos:end="13:75">3</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:45"><decl pos:start="15:5" pos:end="15:44"><type pos:start="15:5" pos:end="15:17"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:17">int64_t</name></type> <name pos:start="15:19" pos:end="15:21">top</name> <init pos:start="15:23" pos:end="15:44">= <expr pos:start="15:25" pos:end="15:44"><name pos:start="15:25" pos:end="15:44"><name pos:start="15:25" pos:end="15:33">slice_dat</name><operator pos:start="15:34" pos:end="15:35">-&gt;</operator><name pos:start="15:36" pos:end="15:44">bits_ceil</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:40"><decl pos:start="17:5" pos:end="17:39"><type pos:start="17:5" pos:end="17:16"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:16">double</name></type> <name pos:start="17:18" pos:end="17:24">percent</name> <init pos:start="17:26" pos:end="17:39">= <expr pos:start="17:28" pos:end="17:39"><name pos:start="17:28" pos:end="17:39"><name pos:start="17:28" pos:end="17:28">s</name><operator pos:start="17:29" pos:end="17:30">-&gt;</operator><name pos:start="17:31" pos:end="17:39">tolerance</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:53"><decl pos:start="19:5" pos:end="19:52"><type pos:start="19:5" pos:end="19:16"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:16">double</name></type> <name pos:start="19:18" pos:end="19:23">bottom</name> <init pos:start="19:25" pos:end="19:52">= <expr pos:start="19:27" pos:end="19:52"><name pos:start="19:27" pos:end="19:29">top</name> <operator pos:start="19:31" pos:end="19:31">-</operator> <name pos:start="19:33" pos:end="19:35">top</name><operator pos:start="19:36" pos:end="19:36">*</operator><operator pos:start="19:37" pos:end="19:37">(</operator><name pos:start="19:38" pos:end="19:44">percent</name><operator pos:start="19:45" pos:end="19:45">/</operator><literal type="number" pos:start="19:46" pos:end="19:51">100.0f</literal><operator pos:start="19:52" pos:end="19:52">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:48"><decl pos:start="21:5" pos:end="21:47"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:12">bits</name> <init pos:start="21:14" pos:end="21:47">= <expr pos:start="21:16" pos:end="21:47"><call pos:start="21:16" pos:end="21:47"><name pos:start="21:16" pos:end="21:29">count_hq_slice</name><argument_list pos:start="21:30" pos:end="21:47">(<argument pos:start="21:31" pos:end="21:31"><expr pos:start="21:31" pos:end="21:31"><name pos:start="21:31" pos:end="21:31">s</name></expr></argument>, <argument pos:start="21:34" pos:end="21:35"><expr pos:start="21:34" pos:end="21:35"><name pos:start="21:34" pos:end="21:35">sx</name></expr></argument>, <argument pos:start="21:38" pos:end="21:39"><expr pos:start="21:38" pos:end="21:39"><name pos:start="21:38" pos:end="21:39">sy</name></expr></argument>, <argument pos:start="21:42" pos:end="21:46"><expr pos:start="21:42" pos:end="21:46"><name pos:start="21:42" pos:end="21:46">quant</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:23"><expr pos:start="23:5" pos:end="23:22"><name pos:start="23:5" pos:end="23:9">range</name> <operator pos:start="23:11" pos:end="23:12">-=</operator> <name pos:start="23:14" pos:end="23:18">range</name> <operator pos:start="23:20" pos:end="23:20">&amp;</operator> <literal type="number" pos:start="23:22" pos:end="23:22">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="23:25" pos:end="23:52">/* Make it an even number */</comment>

    <while pos:start="25:5" pos:end="53:5">while <condition pos:start="25:11" pos:end="25:43">(<expr pos:start="25:12" pos:end="25:42"><operator pos:start="25:12" pos:end="25:12">(</operator><name pos:start="25:13" pos:end="25:16">bits</name> <operator pos:start="25:18" pos:end="25:18">&gt;</operator> <name pos:start="25:20" pos:end="25:22">top</name><operator pos:start="25:23" pos:end="25:23">)</operator> <operator pos:start="25:25" pos:end="25:26">||</operator> <operator pos:start="25:28" pos:end="25:28">(</operator><name pos:start="25:29" pos:end="25:32">bits</name> <operator pos:start="25:34" pos:end="25:34">&lt;</operator> <name pos:start="25:36" pos:end="25:41">bottom</name><operator pos:start="25:42" pos:end="25:42">)</operator></expr>)</condition> <block pos:start="25:45" pos:end="53:5">{<block_content pos:start="27:9" pos:end="51:27">

        <expr_stmt pos:start="27:9" pos:end="27:38"><expr pos:start="27:9" pos:end="27:37"><name pos:start="27:9" pos:end="27:13">range</name> <operator pos:start="27:15" pos:end="27:16">*=</operator> <ternary pos:start="27:18" pos:end="27:37"><condition pos:start="27:18" pos:end="27:29"><expr pos:start="27:18" pos:end="27:27"><name pos:start="27:18" pos:end="27:21">bits</name> <operator pos:start="27:23" pos:end="27:23">&gt;</operator> <name pos:start="27:25" pos:end="27:27">top</name></expr> ?</condition><then pos:start="27:31" pos:end="27:32"> <expr pos:start="27:31" pos:end="27:32"><operator pos:start="27:31" pos:end="27:31">+</operator><literal type="number" pos:start="27:32" pos:end="27:32">1</literal></expr> </then><else pos:start="27:34" pos:end="27:37">: <expr pos:start="27:36" pos:end="27:37"><operator pos:start="27:36" pos:end="27:36">-</operator><literal type="number" pos:start="27:37" pos:end="27:37">1</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:53"><expr pos:start="29:9" pos:end="29:52"><name pos:start="29:9" pos:end="29:13">quant</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <call pos:start="29:17" pos:end="29:52"><name pos:start="29:17" pos:end="29:23">av_clip</name><argument_list pos:start="29:24" pos:end="29:52">(<argument pos:start="29:25" pos:end="29:37"><expr pos:start="29:25" pos:end="29:37"><name pos:start="29:25" pos:end="29:29">quant</name> <operator pos:start="29:31" pos:end="29:31">+</operator> <name pos:start="29:33" pos:end="29:37">range</name></expr></argument>, <argument pos:start="29:40" pos:end="29:40"><expr pos:start="29:40" pos:end="29:40"><literal type="number" pos:start="29:40" pos:end="29:40">0</literal></expr></argument>, <argument pos:start="29:43" pos:end="29:51"><expr pos:start="29:43" pos:end="29:51"><name pos:start="29:43" pos:end="29:51"><name pos:start="29:43" pos:end="29:43">s</name><operator pos:start="29:44" pos:end="29:45">-&gt;</operator><name pos:start="29:46" pos:end="29:51">q_ceil</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:48"><expr pos:start="31:9" pos:end="31:47"><name pos:start="31:9" pos:end="31:12">bits</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <call pos:start="31:16" pos:end="31:47"><name pos:start="31:16" pos:end="31:29">count_hq_slice</name><argument_list pos:start="31:30" pos:end="31:47">(<argument pos:start="31:31" pos:end="31:31"><expr pos:start="31:31" pos:end="31:31"><name pos:start="31:31" pos:end="31:31">s</name></expr></argument>, <argument pos:start="31:34" pos:end="31:35"><expr pos:start="31:34" pos:end="31:35"><name pos:start="31:34" pos:end="31:35">sx</name></expr></argument>, <argument pos:start="31:38" pos:end="31:39"><expr pos:start="31:38" pos:end="31:39"><name pos:start="31:38" pos:end="31:39">sy</name></expr></argument>, <argument pos:start="31:42" pos:end="31:46"><expr pos:start="31:42" pos:end="31:46"><name pos:start="31:42" pos:end="31:46">quant</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:47"><expr pos:start="33:9" pos:end="33:46"><name pos:start="33:9" pos:end="33:13">range</name> <operator pos:start="33:15" pos:end="33:15">=</operator> <call pos:start="33:17" pos:end="33:46"><name pos:start="33:17" pos:end="33:23">av_clip</name><argument_list pos:start="33:24" pos:end="33:46">(<argument pos:start="33:25" pos:end="33:31"><expr pos:start="33:25" pos:end="33:31"><name pos:start="33:25" pos:end="33:29">range</name><operator pos:start="33:30" pos:end="33:30">/</operator><literal type="number" pos:start="33:31" pos:end="33:31">2</literal></expr></argument>, <argument pos:start="33:34" pos:end="33:34"><expr pos:start="33:34" pos:end="33:34"><literal type="number" pos:start="33:34" pos:end="33:34">1</literal></expr></argument>, <argument pos:start="33:37" pos:end="33:45"><expr pos:start="33:37" pos:end="33:45"><name pos:start="33:37" pos:end="33:45"><name pos:start="33:37" pos:end="33:37">s</name><operator pos:start="33:38" pos:end="33:39">-&gt;</operator><name pos:start="33:40" pos:end="33:45">q_ceil</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="43:9"><if pos:start="35:9" pos:end="43:9">if <condition pos:start="35:12" pos:end="35:34">(<expr pos:start="35:13" pos:end="35:33"><name pos:start="35:13" pos:end="35:24"><name pos:start="35:13" pos:end="35:21">quant_buf</name><index pos:start="35:22" pos:end="35:24">[<expr pos:start="35:23" pos:end="35:23"><literal type="number" pos:start="35:23" pos:end="35:23">1</literal></expr>]</index></name> <operator pos:start="35:26" pos:end="35:27">==</operator> <name pos:start="35:29" pos:end="35:33">quant</name></expr>)</condition> <block pos:start="35:36" pos:end="43:9">{<block_content pos:start="37:13" pos:end="41:18">

            <expr_stmt pos:start="37:13" pos:end="37:62"><expr pos:start="37:13" pos:end="37:61"><name pos:start="37:13" pos:end="37:17">quant</name> <operator pos:start="37:19" pos:end="37:19">=</operator> <ternary pos:start="37:21" pos:end="37:61"><condition pos:start="37:21" pos:end="37:40"><expr pos:start="37:21" pos:end="37:38"><name pos:start="37:21" pos:end="37:31"><name pos:start="37:21" pos:end="37:28">bits_buf</name><index pos:start="37:29" pos:end="37:31">[<expr pos:start="37:30" pos:end="37:30"><literal type="number" pos:start="37:30" pos:end="37:30">0</literal></expr>]</index></name> <operator pos:start="37:33" pos:end="37:33">&lt;</operator> <name pos:start="37:35" pos:end="37:38">bits</name></expr> ?</condition><then pos:start="37:42" pos:end="37:53"> <expr pos:start="37:42" pos:end="37:53"><name pos:start="37:42" pos:end="37:53"><name pos:start="37:42" pos:end="37:50">quant_buf</name><index pos:start="37:51" pos:end="37:53">[<expr pos:start="37:52" pos:end="37:52"><literal type="number" pos:start="37:52" pos:end="37:52">0</literal></expr>]</index></name></expr> </then><else pos:start="37:55" pos:end="37:61">: <expr pos:start="37:57" pos:end="37:61"><name pos:start="37:57" pos:end="37:61">quant</name></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:59"><expr pos:start="39:13" pos:end="39:58"><name pos:start="39:13" pos:end="39:16">bits</name> <operator pos:start="39:18" pos:end="39:18">=</operator> <ternary pos:start="39:20" pos:end="39:58"><condition pos:start="39:20" pos:end="39:39"><expr pos:start="39:20" pos:end="39:37"><name pos:start="39:20" pos:end="39:30"><name pos:start="39:20" pos:end="39:27">bits_buf</name><index pos:start="39:28" pos:end="39:30">[<expr pos:start="39:29" pos:end="39:29"><literal type="number" pos:start="39:29" pos:end="39:29">0</literal></expr>]</index></name> <operator pos:start="39:32" pos:end="39:32">&lt;</operator> <name pos:start="39:34" pos:end="39:37">bits</name></expr> ?</condition><then pos:start="39:41" pos:end="39:51"> <expr pos:start="39:41" pos:end="39:51"><name pos:start="39:41" pos:end="39:51"><name pos:start="39:41" pos:end="39:48">bits_buf</name><index pos:start="39:49" pos:end="39:51">[<expr pos:start="39:50" pos:end="39:50"><literal type="number" pos:start="39:50" pos:end="39:50">0</literal></expr>]</index></name></expr> </then><else pos:start="39:53" pos:end="39:58">: <expr pos:start="39:55" pos:end="39:58"><name pos:start="39:55" pos:end="39:58">bits</name></expr></else></ternary></expr>;</expr_stmt>

            <break pos:start="41:13" pos:end="41:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:36"><expr pos:start="45:9" pos:end="45:35"><name pos:start="45:9" pos:end="45:20"><name pos:start="45:9" pos:end="45:17">quant_buf</name><index pos:start="45:18" pos:end="45:20">[<expr pos:start="45:19" pos:end="45:19"><literal type="number" pos:start="45:19" pos:end="45:19">1</literal></expr>]</index></name> <operator pos:start="45:22" pos:end="45:22">=</operator> <name pos:start="45:24" pos:end="45:35"><name pos:start="45:24" pos:end="45:32">quant_buf</name><index pos:start="45:33" pos:end="45:35">[<expr pos:start="45:34" pos:end="45:34"><literal type="number" pos:start="45:34" pos:end="45:34">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:29"><expr pos:start="47:9" pos:end="47:28"><name pos:start="47:9" pos:end="47:20"><name pos:start="47:9" pos:end="47:17">quant_buf</name><index pos:start="47:18" pos:end="47:20">[<expr pos:start="47:19" pos:end="47:19"><literal type="number" pos:start="47:19" pos:end="47:19">0</literal></expr>]</index></name> <operator pos:start="47:22" pos:end="47:22">=</operator> <name pos:start="47:24" pos:end="47:28">quant</name></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:34"><expr pos:start="49:9" pos:end="49:33"><name pos:start="49:9" pos:end="49:19"><name pos:start="49:9" pos:end="49:16">bits_buf</name><index pos:start="49:17" pos:end="49:19">[<expr pos:start="49:18" pos:end="49:18"><literal type="number" pos:start="49:18" pos:end="49:18">1</literal></expr>]</index></name> <operator pos:start="49:21" pos:end="49:21">=</operator> <name pos:start="49:23" pos:end="49:33"><name pos:start="49:23" pos:end="49:30">bits_buf</name><index pos:start="49:31" pos:end="49:33">[<expr pos:start="49:32" pos:end="49:32"><literal type="number" pos:start="49:32" pos:end="49:32">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:27"><expr pos:start="51:9" pos:end="51:26"><name pos:start="51:9" pos:end="51:19"><name pos:start="51:9" pos:end="51:16">bits_buf</name><index pos:start="51:17" pos:end="51:19">[<expr pos:start="51:18" pos:end="51:18"><literal type="number" pos:start="51:18" pos:end="51:18">0</literal></expr>]</index></name> <operator pos:start="51:21" pos:end="51:21">=</operator> <name pos:start="51:23" pos:end="51:26">bits</name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="55:5" pos:end="55:56"><expr pos:start="55:5" pos:end="55:55"><name pos:start="55:5" pos:end="55:24"><name pos:start="55:5" pos:end="55:13">slice_dat</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:24">quant_idx</name></name> <operator pos:start="55:26" pos:end="55:26">=</operator> <call pos:start="55:28" pos:end="55:55"><name pos:start="55:28" pos:end="55:34">av_clip</name><argument_list pos:start="55:35" pos:end="55:55">(<argument pos:start="55:36" pos:end="55:40"><expr pos:start="55:36" pos:end="55:40"><name pos:start="55:36" pos:end="55:40">quant</name></expr></argument>, <argument pos:start="55:43" pos:end="55:43"><expr pos:start="55:43" pos:end="55:43"><literal type="number" pos:start="55:43" pos:end="55:43">0</literal></expr></argument>, <argument pos:start="55:46" pos:end="55:54"><expr pos:start="55:46" pos:end="55:54"><name pos:start="55:46" pos:end="55:54"><name pos:start="55:46" pos:end="55:46">s</name><operator pos:start="55:47" pos:end="55:48">-&gt;</operator><name pos:start="55:49" pos:end="55:54">q_ceil</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:82"><expr pos:start="57:5" pos:end="57:81"><name pos:start="57:5" pos:end="57:20"><name pos:start="57:5" pos:end="57:13">slice_dat</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:20">bytes</name></name> <operator pos:start="57:22" pos:end="57:22">=</operator> <call pos:start="57:24" pos:end="57:59"><name pos:start="57:24" pos:end="57:30">FFALIGN</name><argument_list pos:start="57:31" pos:end="57:59">(<argument pos:start="57:32" pos:end="57:42"><expr pos:start="57:32" pos:end="57:42"><operator pos:start="57:32" pos:end="57:32">(</operator><name pos:start="57:33" pos:end="57:36">bits</name> <operator pos:start="57:38" pos:end="57:39">&gt;&gt;</operator> <literal type="number" pos:start="57:41" pos:end="57:41">3</literal><operator pos:start="57:42" pos:end="57:42">)</operator></expr></argument>, <argument pos:start="57:45" pos:end="57:58"><expr pos:start="57:45" pos:end="57:58"><name pos:start="57:45" pos:end="57:58"><name pos:start="57:45" pos:end="57:45">s</name><operator pos:start="57:46" pos:end="57:47">-&gt;</operator><name pos:start="57:48" pos:end="57:58">size_scaler</name></name></expr></argument>)</argument_list></call> <operator pos:start="57:61" pos:end="57:61">+</operator> <literal type="number" pos:start="57:63" pos:end="57:65">4</literal> <operator pos:start="57:65" pos:end="57:65">+</operator> <name pos:start="57:67" pos:end="57:81"><name pos:start="57:67" pos:end="57:67">s</name><operator pos:start="57:68" pos:end="57:69">-&gt;</operator><name pos:start="57:70" pos:end="57:81">prefix_bytes</name></name></expr>;</expr_stmt>



    <return pos:start="61:5" pos:end="61:13">return <expr pos:start="61:12" pos:end="61:12"><literal type="number" pos:start="61:12" pos:end="61:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
