<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26830.c" pos:tabs="8"><function pos:start="1:1" pos:end="17:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">moxie_cpu_realizefn</name><parameter_list pos:start="1:32" pos:end="1:63">(<parameter pos:start="1:33" pos:end="1:48"><decl pos:start="1:33" pos:end="1:48"><type pos:start="1:33" pos:end="1:48"><name pos:start="1:33" pos:end="1:43">DeviceState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">dev</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:62"><decl pos:start="1:51" pos:end="1:62"><type pos:start="1:51" pos:end="1:62"><name pos:start="1:51" pos:end="1:55">Error</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier><modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="17:1">{<block_content pos:start="5:5" pos:end="15:35">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">MoxieCPU</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:17">cpu</name> <init pos:start="5:19" pos:end="5:34">= <expr pos:start="5:21" pos:end="5:34"><call pos:start="5:21" pos:end="5:34"><name pos:start="5:21" pos:end="5:29">MOXIE_CPU</name><argument_list pos:start="5:30" pos:end="5:34">(<argument pos:start="5:31" pos:end="5:33"><expr pos:start="5:31" pos:end="5:33"><name pos:start="5:31" pos:end="5:33">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:50"><decl pos:start="7:5" pos:end="7:49"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">MoxieCPUClass</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">mcc</name> <init pos:start="7:24" pos:end="7:49">= <expr pos:start="7:26" pos:end="7:49"><call pos:start="7:26" pos:end="7:49"><name pos:start="7:26" pos:end="7:44">MOXIE_CPU_GET_CLASS</name><argument_list pos:start="7:45" pos:end="7:49">(<argument pos:start="7:46" pos:end="7:48"><expr pos:start="7:46" pos:end="7:48"><name pos:start="7:46" pos:end="7:48">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:24"><expr pos:start="11:5" pos:end="11:23"><call pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:13">cpu_reset</name><argument_list pos:start="11:14" pos:end="11:23">(<argument pos:start="11:15" pos:end="11:22"><expr pos:start="11:15" pos:end="11:22"><call pos:start="11:15" pos:end="11:22"><name pos:start="11:15" pos:end="11:17">CPU</name><argument_list pos:start="11:18" pos:end="11:22">(<argument pos:start="11:19" pos:end="11:21"><expr pos:start="11:19" pos:end="11:21"><name pos:start="11:19" pos:end="11:21">cpu</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:35"><expr pos:start="15:5" pos:end="15:34"><call pos:start="15:5" pos:end="15:34"><name pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:7">mcc</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:23">parent_realize</name></name><argument_list pos:start="15:24" pos:end="15:34">(<argument pos:start="15:25" pos:end="15:27"><expr pos:start="15:25" pos:end="15:27"><name pos:start="15:25" pos:end="15:27">dev</name></expr></argument>, <argument pos:start="15:30" pos:end="15:33"><expr pos:start="15:30" pos:end="15:33"><name pos:start="15:30" pos:end="15:33">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
