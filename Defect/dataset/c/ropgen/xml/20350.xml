<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20350.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">get_best_header</name><parameter_list pos:start="1:27" pos:end="3:45">(<parameter pos:start="1:28" pos:end="1:48"><decl pos:start="1:28" pos:end="1:48"><type pos:start="1:28" pos:end="1:48"><name pos:start="1:28" pos:end="1:43">FLACParseContext</name><modifier pos:start="1:44" pos:end="1:44">*</modifier></type> <name pos:start="1:46" pos:end="1:48">fpc</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:73"><decl pos:start="1:51" pos:end="1:73"><type pos:start="1:51" pos:end="1:73"><specifier pos:start="1:51" pos:end="1:55">const</specifier> <name pos:start="1:57" pos:end="1:63">uint8_t</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier><modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:73">poutbuf</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:44"><decl pos:start="3:28" pos:end="3:44"><type pos:start="3:28" pos:end="3:44"><name pos:start="3:28" pos:end="3:30">int</name> <modifier pos:start="3:32" pos:end="3:32">*</modifier></type><name pos:start="3:33" pos:end="3:44">poutbuf_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="63:1">{<block_content pos:start="7:5" pos:end="61:13">

    <decl_stmt pos:start="7:5" pos:end="7:48"><decl pos:start="7:5" pos:end="7:47"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">FLACHeaderMarker</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:28">header</name> <init pos:start="7:30" pos:end="7:47">= <expr pos:start="7:32" pos:end="7:47"><name pos:start="7:32" pos:end="7:47"><name pos:start="7:32" pos:end="7:34">fpc</name><operator pos:start="7:35" pos:end="7:36">-&gt;</operator><name pos:start="7:37" pos:end="7:47">best_header</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:50"><decl pos:start="9:5" pos:end="9:49"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">FLACHeaderMarker</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:27">child</name>  <init pos:start="9:30" pos:end="9:49">= <expr pos:start="9:32" pos:end="9:49"><name pos:start="9:32" pos:end="9:49"><name pos:start="9:32" pos:end="9:37">header</name><operator pos:start="9:38" pos:end="9:39">-&gt;</operator><name pos:start="9:40" pos:end="9:49">best_child</name></name></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="11:5" pos:end="25:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:15">(<expr pos:start="11:9" pos:end="11:14"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:14">child</name></expr>)</condition> <block pos:start="11:17" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:69">

        <expr_stmt pos:start="13:9" pos:end="13:69"><expr pos:start="13:9" pos:end="13:68"><operator pos:start="13:9" pos:end="13:9">*</operator><name pos:start="13:10" pos:end="13:21">poutbuf_size</name> <operator pos:start="13:23" pos:end="13:23">=</operator> <call pos:start="13:25" pos:end="13:51"><name pos:start="13:25" pos:end="13:36">av_fifo_size</name><argument_list pos:start="13:37" pos:end="13:51">(<argument pos:start="13:38" pos:end="13:50"><expr pos:start="13:38" pos:end="13:50"><name pos:start="13:38" pos:end="13:50"><name pos:start="13:38" pos:end="13:40">fpc</name><operator pos:start="13:41" pos:end="13:42">-&gt;</operator><name pos:start="13:43" pos:end="13:50">fifo_buf</name></name></expr></argument>)</argument_list></call> <operator pos:start="13:53" pos:end="13:53">-</operator> <name pos:start="13:55" pos:end="13:68"><name pos:start="13:55" pos:end="13:60">header</name><operator pos:start="13:61" pos:end="13:62">-&gt;</operator><name pos:start="13:63" pos:end="13:68">offset</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="15:7" pos:end="25:5">else <block pos:start="15:12" pos:end="25:5">{<block_content pos:start="17:9" pos:end="23:53">

        <expr_stmt pos:start="17:9" pos:end="17:55"><expr pos:start="17:9" pos:end="17:54"><operator pos:start="17:9" pos:end="17:9">*</operator><name pos:start="17:10" pos:end="17:21">poutbuf_size</name> <operator pos:start="17:23" pos:end="17:23">=</operator> <name pos:start="17:25" pos:end="17:37"><name pos:start="17:25" pos:end="17:29">child</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:37">offset</name></name> <operator pos:start="17:39" pos:end="17:39">-</operator> <name pos:start="17:41" pos:end="17:54"><name pos:start="17:41" pos:end="17:46">header</name><operator pos:start="17:47" pos:end="17:48">-&gt;</operator><name pos:start="17:49" pos:end="17:54">offset</name></name></expr>;</expr_stmt>



        <comment type="block" pos:start="21:9" pos:end="21:59">/* If the child has suspicious changes, log them */</comment>

        <expr_stmt pos:start="23:9" pos:end="23:53"><expr pos:start="23:9" pos:end="23:52"><call pos:start="23:9" pos:end="23:52"><name pos:start="23:9" pos:end="23:29">check_header_mismatch</name><argument_list pos:start="23:30" pos:end="23:52">(<argument pos:start="23:31" pos:end="23:33"><expr pos:start="23:31" pos:end="23:33"><name pos:start="23:31" pos:end="23:33">fpc</name></expr></argument>, <argument pos:start="23:36" pos:end="23:41"><expr pos:start="23:36" pos:end="23:41"><name pos:start="23:36" pos:end="23:41">header</name></expr></argument>, <argument pos:start="23:44" pos:end="23:48"><expr pos:start="23:44" pos:end="23:48"><name pos:start="23:44" pos:end="23:48">child</name></expr></argument>, <argument pos:start="23:51" pos:end="23:51"><expr pos:start="23:51" pos:end="23:51"><literal type="number" pos:start="23:51" pos:end="23:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="29:5" pos:end="37:5"><if pos:start="29:5" pos:end="37:5">if <condition pos:start="29:8" pos:end="31:66">(<expr pos:start="29:9" pos:end="31:65"><name pos:start="29:9" pos:end="29:27"><name pos:start="29:9" pos:end="29:14">header</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:18">fi</name><operator pos:start="29:19" pos:end="29:19">.</operator><name pos:start="29:20" pos:end="29:27">channels</name></name> <operator pos:start="29:29" pos:end="29:30">!=</operator> <name pos:start="29:32" pos:end="29:51"><name pos:start="29:32" pos:end="29:34">fpc</name><operator pos:start="29:35" pos:end="29:36">-&gt;</operator><name pos:start="29:37" pos:end="29:41">avctx</name><operator pos:start="29:42" pos:end="29:43">-&gt;</operator><name pos:start="29:44" pos:end="29:51">channels</name></name> <operator pos:start="29:53" pos:end="29:54">||</operator>

        <operator pos:start="31:9" pos:end="31:9">(</operator><operator pos:start="31:10" pos:end="31:10">!</operator><name pos:start="31:11" pos:end="31:36"><name pos:start="31:11" pos:end="31:13">fpc</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:20">avctx</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:36">channel_layout</name></name> <operator pos:start="31:38" pos:end="31:39">&amp;&amp;</operator> <name pos:start="31:41" pos:end="31:59"><name pos:start="31:41" pos:end="31:46">header</name><operator pos:start="31:47" pos:end="31:48">-&gt;</operator><name pos:start="31:49" pos:end="31:50">fi</name><operator pos:start="31:51" pos:end="31:51">.</operator><name pos:start="31:52" pos:end="31:59">channels</name></name> <operator pos:start="31:61" pos:end="31:62">&lt;=</operator> <literal type="number" pos:start="31:64" pos:end="31:64">6</literal><operator pos:start="31:65" pos:end="31:65">)</operator></expr>)</condition> <block pos:start="31:68" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:47">

        <expr_stmt pos:start="33:9" pos:end="33:51"><expr pos:start="33:9" pos:end="33:50"><name pos:start="33:9" pos:end="33:28"><name pos:start="33:9" pos:end="33:11">fpc</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:18">avctx</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:28">channels</name></name> <operator pos:start="33:30" pos:end="33:30">=</operator> <name pos:start="33:32" pos:end="33:50"><name pos:start="33:32" pos:end="33:37">header</name><operator pos:start="33:38" pos:end="33:39">-&gt;</operator><name pos:start="33:40" pos:end="33:41">fi</name><operator pos:start="33:42" pos:end="33:42">.</operator><name pos:start="33:43" pos:end="33:50">channels</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:47"><expr pos:start="35:9" pos:end="35:46"><call pos:start="35:9" pos:end="35:46"><name pos:start="35:9" pos:end="35:34">ff_flac_set_channel_layout</name><argument_list pos:start="35:35" pos:end="35:46">(<argument pos:start="35:36" pos:end="35:45"><expr pos:start="35:36" pos:end="35:45"><name pos:start="35:36" pos:end="35:45"><name pos:start="35:36" pos:end="35:38">fpc</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:45">avctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:52"><expr pos:start="39:5" pos:end="39:51"><name pos:start="39:5" pos:end="39:27"><name pos:start="39:5" pos:end="39:7">fpc</name><operator pos:start="39:8" pos:end="39:9">-&gt;</operator><name pos:start="39:10" pos:end="39:14">avctx</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:27">sample_rate</name></name> <operator pos:start="39:29" pos:end="39:29">=</operator> <name pos:start="39:31" pos:end="39:51"><name pos:start="39:31" pos:end="39:36">header</name><operator pos:start="39:37" pos:end="39:38">-&gt;</operator><name pos:start="39:39" pos:end="39:40">fi</name><operator pos:start="39:41" pos:end="39:41">.</operator><name pos:start="39:42" pos:end="39:51">samplerate</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:51"><expr pos:start="41:5" pos:end="41:50"><name pos:start="41:5" pos:end="41:21"><name pos:start="41:5" pos:end="41:7">fpc</name><operator pos:start="41:8" pos:end="41:9">-&gt;</operator><name pos:start="41:10" pos:end="41:11">pc</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:21">duration</name></name>       <operator pos:start="41:29" pos:end="41:29">=</operator> <name pos:start="41:31" pos:end="41:50"><name pos:start="41:31" pos:end="41:36">header</name><operator pos:start="41:37" pos:end="41:38">-&gt;</operator><name pos:start="41:39" pos:end="41:40">fi</name><operator pos:start="41:41" pos:end="41:41">.</operator><name pos:start="41:42" pos:end="41:50">blocksize</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="47:71"><expr pos:start="43:5" pos:end="47:70"><operator pos:start="43:5" pos:end="43:5">*</operator><name pos:start="43:6" pos:end="43:12">poutbuf</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <call pos:start="43:16" pos:end="47:70"><name pos:start="43:16" pos:end="43:34">flac_fifo_read_wrap</name><argument_list pos:start="43:35" pos:end="47:70">(<argument pos:start="43:36" pos:end="43:38"><expr pos:start="43:36" pos:end="43:38"><name pos:start="43:36" pos:end="43:38">fpc</name></expr></argument>, <argument pos:start="43:41" pos:end="43:54"><expr pos:start="43:41" pos:end="43:54"><name pos:start="43:41" pos:end="43:54"><name pos:start="43:41" pos:end="43:46">header</name><operator pos:start="43:47" pos:end="43:48">-&gt;</operator><name pos:start="43:49" pos:end="43:54">offset</name></name></expr></argument>, <argument pos:start="43:57" pos:end="43:69"><expr pos:start="43:57" pos:end="43:69"><operator pos:start="43:57" pos:end="43:57">*</operator><name pos:start="43:58" pos:end="43:69">poutbuf_size</name></expr></argument>,

                                        <argument pos:start="45:41" pos:end="45:54"><expr pos:start="45:41" pos:end="45:54"><operator pos:start="45:41" pos:end="45:41">&amp;</operator><name pos:start="45:42" pos:end="45:54"><name pos:start="45:42" pos:end="45:44">fpc</name><operator pos:start="45:45" pos:end="45:46">-&gt;</operator><name pos:start="45:47" pos:end="45:54">wrap_buf</name></name></expr></argument>,

                                        <argument pos:start="47:41" pos:end="47:69"><expr pos:start="47:41" pos:end="47:69"><operator pos:start="47:41" pos:end="47:41">&amp;</operator><name pos:start="47:42" pos:end="47:69"><name pos:start="47:42" pos:end="47:44">fpc</name><operator pos:start="47:45" pos:end="47:46">-&gt;</operator><name pos:start="47:47" pos:end="47:69">wrap_buf_allocated_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:31"><expr pos:start="51:5" pos:end="51:30"><name pos:start="51:5" pos:end="51:26"><name pos:start="51:5" pos:end="51:7">fpc</name><operator pos:start="51:8" pos:end="51:9">-&gt;</operator><name pos:start="51:10" pos:end="51:26">best_header_valid</name></name> <operator pos:start="51:28" pos:end="51:28">=</operator> <literal type="number" pos:start="51:30" pos:end="51:30">0</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="53:5" pos:end="55:74">/* Return the negative overread index so the client can compute pos.

       This should be the amount overread to the beginning of the child */</comment>

    <if_stmt pos:start="57:5" pos:end="59:59"><if pos:start="57:5" pos:end="59:59">if <condition pos:start="57:8" pos:end="57:14">(<expr pos:start="57:9" pos:end="57:13"><name pos:start="57:9" pos:end="57:13">child</name></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:59"><block_content pos:start="59:9" pos:end="59:59">

        <return pos:start="59:9" pos:end="59:59">return <expr pos:start="59:16" pos:end="59:58"><name pos:start="59:16" pos:end="59:28"><name pos:start="59:16" pos:end="59:20">child</name><operator pos:start="59:21" pos:end="59:22">-&gt;</operator><name pos:start="59:23" pos:end="59:28">offset</name></name> <operator pos:start="59:30" pos:end="59:30">-</operator> <call pos:start="59:32" pos:end="59:58"><name pos:start="59:32" pos:end="59:43">av_fifo_size</name><argument_list pos:start="59:44" pos:end="59:58">(<argument pos:start="59:45" pos:end="59:57"><expr pos:start="59:45" pos:end="59:57"><name pos:start="59:45" pos:end="59:57"><name pos:start="59:45" pos:end="59:47">fpc</name><operator pos:start="59:48" pos:end="59:49">-&gt;</operator><name pos:start="59:50" pos:end="59:57">fifo_buf</name></name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <return pos:start="61:5" pos:end="61:13">return <expr pos:start="61:12" pos:end="61:12"><literal type="number" pos:start="61:12" pos:end="61:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
