<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22961.c" pos:tabs="8"><function pos:start="1:1" pos:end="223:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:41">decode_ref_pic_list_reordering</name><parameter_list pos:start="1:42" pos:end="1:57">(<parameter pos:start="1:43" pos:end="1:56"><decl pos:start="1:43" pos:end="1:56"><type pos:start="1:43" pos:end="1:55"><name pos:start="1:43" pos:end="1:53">H264Context</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:56">h</name></decl></parameter>)</parameter_list><block pos:start="1:58" pos:end="223:1">{<block_content pos:start="3:5" pos:end="221:13">

    <decl_stmt pos:start="3:5" pos:end="3:37"><decl pos:start="3:5" pos:end="3:36"><type pos:start="3:5" pos:end="3:26"><name pos:start="3:5" pos:end="3:18">MpegEncContext</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier> <specifier pos:start="3:22" pos:end="3:26">const</specifier></type> <name pos:start="3:28" pos:end="3:28">s</name> <init pos:start="3:30" pos:end="3:36">= <expr pos:start="3:32" pos:end="3:36"><operator pos:start="3:32" pos:end="3:32">&amp;</operator><name pos:start="3:33" pos:end="3:36"><name pos:start="3:33" pos:end="3:33">h</name><operator pos:start="3:34" pos:end="3:35">-&gt;</operator><name pos:start="3:36" pos:end="3:36">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">list</name></decl>, <decl pos:start="5:15" pos:end="5:19"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:19">index</name></decl>, <decl pos:start="5:22" pos:end="5:34"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:22" pos:end="5:34">pic_structure</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:24"><expr pos:start="9:5" pos:end="9:23"><call pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:20">print_short_term</name><argument_list pos:start="9:21" pos:end="9:23">(<argument pos:start="9:22" pos:end="9:22"><expr pos:start="9:22" pos:end="9:22"><name pos:start="9:22" pos:end="9:22">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:23"><expr pos:start="11:5" pos:end="11:22"><call pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:19">print_long_term</name><argument_list pos:start="11:20" pos:end="11:22">(<argument pos:start="11:21" pos:end="11:21"><expr pos:start="11:21" pos:end="11:21"><name pos:start="11:21" pos:end="11:21">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="13:71"><if pos:start="13:5" pos:end="13:71">if<condition pos:start="13:7" pos:end="13:61">(<expr pos:start="13:8" pos:end="13:60"><name pos:start="13:8" pos:end="13:20"><name pos:start="13:8" pos:end="13:8">h</name><operator pos:start="13:9" pos:end="13:10">-&gt;</operator><name pos:start="13:11" pos:end="13:20">slice_type</name></name><operator pos:start="13:21" pos:end="13:22">==</operator><name pos:start="13:23" pos:end="13:31">FF_I_TYPE</name> <operator pos:start="13:33" pos:end="13:34">||</operator> <name pos:start="13:36" pos:end="13:48"><name pos:start="13:36" pos:end="13:36">h</name><operator pos:start="13:37" pos:end="13:38">-&gt;</operator><name pos:start="13:39" pos:end="13:48">slice_type</name></name><operator pos:start="13:49" pos:end="13:50">==</operator><name pos:start="13:51" pos:end="13:60">FF_SI_TYPE</name></expr>)</condition><block type="pseudo" pos:start="13:63" pos:end="13:71"><block_content pos:start="13:63" pos:end="13:71"> <return pos:start="13:63" pos:end="13:71">return <expr pos:start="13:70" pos:end="13:70"><literal type="number" pos:start="13:70" pos:end="13:70">0</literal></expr>;</return></block_content></block></if></if_stmt> <comment type="line" pos:start="13:73" pos:end="13:96">//FIXME move before func</comment>



    <for pos:start="17:5" pos:end="199:5">for<control pos:start="17:8" pos:end="17:43">(<init pos:start="17:9" pos:end="17:15"><expr pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:12">list</name><operator pos:start="17:13" pos:end="17:13">=</operator><literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr>;</init> <condition pos:start="17:17" pos:end="17:35"><expr pos:start="17:17" pos:end="17:34"><name pos:start="17:17" pos:end="17:20">list</name><operator pos:start="17:21" pos:end="17:21">&lt;</operator><name pos:start="17:22" pos:end="17:34"><name pos:start="17:22" pos:end="17:22">h</name><operator pos:start="17:23" pos:end="17:24">-&gt;</operator><name pos:start="17:25" pos:end="17:34">list_count</name></name></expr>;</condition> <incr pos:start="17:37" pos:end="17:42"><expr pos:start="17:37" pos:end="17:42"><name pos:start="17:37" pos:end="17:40">list</name><operator pos:start="17:41" pos:end="17:42">++</operator></expr></incr>)</control><block pos:start="17:44" pos:end="199:5">{<block_content pos:start="19:9" pos:end="197:9">

        <expr_stmt pos:start="19:9" pos:end="19:97"><expr pos:start="19:9" pos:end="19:96"><call pos:start="19:9" pos:end="19:96"><name pos:start="19:9" pos:end="19:14">memcpy</name><argument_list pos:start="19:15" pos:end="19:96">(<argument pos:start="19:16" pos:end="19:32"><expr pos:start="19:16" pos:end="19:32"><name pos:start="19:16" pos:end="19:32"><name pos:start="19:16" pos:end="19:16">h</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:26">ref_list</name><index pos:start="19:27" pos:end="19:32">[<expr pos:start="19:28" pos:end="19:31"><name pos:start="19:28" pos:end="19:31">list</name></expr>]</index></name></expr></argument>, <argument pos:start="19:35" pos:end="19:59"><expr pos:start="19:35" pos:end="19:59"><name pos:start="19:35" pos:end="19:59"><name pos:start="19:35" pos:end="19:35">h</name><operator pos:start="19:36" pos:end="19:37">-&gt;</operator><name pos:start="19:38" pos:end="19:53">default_ref_list</name><index pos:start="19:54" pos:end="19:59">[<expr pos:start="19:55" pos:end="19:58"><name pos:start="19:55" pos:end="19:58">list</name></expr>]</index></name></expr></argument>, <argument pos:start="19:62" pos:end="19:95"><expr pos:start="19:62" pos:end="19:95"><sizeof pos:start="19:62" pos:end="19:76">sizeof<argument_list pos:start="19:68" pos:end="19:76">(<argument pos:start="19:69" pos:end="19:75"><expr pos:start="19:69" pos:end="19:75"><name pos:start="19:69" pos:end="19:75">Picture</name></expr></argument>)</argument_list></sizeof><operator pos:start="19:77" pos:end="19:77">*</operator><name pos:start="19:78" pos:end="19:95"><name pos:start="19:78" pos:end="19:78">h</name><operator pos:start="19:79" pos:end="19:80">-&gt;</operator><name pos:start="19:81" pos:end="19:89">ref_count</name><index pos:start="19:90" pos:end="19:95">[<expr pos:start="19:91" pos:end="19:94"><name pos:start="19:91" pos:end="19:94">list</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="23:9" pos:end="197:9"><if pos:start="23:9" pos:end="197:9">if<condition pos:start="23:11" pos:end="23:29">(<expr pos:start="23:12" pos:end="23:28"><call pos:start="23:12" pos:end="23:28"><name pos:start="23:12" pos:end="23:20">get_bits1</name><argument_list pos:start="23:21" pos:end="23:28">(<argument pos:start="23:22" pos:end="23:27"><expr pos:start="23:22" pos:end="23:27"><operator pos:start="23:22" pos:end="23:22">&amp;</operator><name pos:start="23:23" pos:end="23:27"><name pos:start="23:23" pos:end="23:23">s</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:27">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="23:30" pos:end="197:9">{<block_content pos:start="25:13" pos:end="195:13">

            <decl_stmt pos:start="25:13" pos:end="25:38"><decl pos:start="25:13" pos:end="25:37"><type pos:start="25:13" pos:end="25:15"><name pos:start="25:13" pos:end="25:15">int</name></type> <name pos:start="25:17" pos:end="25:20">pred</name><init pos:start="25:21" pos:end="25:37">= <expr pos:start="25:23" pos:end="25:37"><name pos:start="25:23" pos:end="25:37"><name pos:start="25:23" pos:end="25:23">h</name><operator pos:start="25:24" pos:end="25:25">-&gt;</operator><name pos:start="25:26" pos:end="25:37">curr_pic_num</name></name></expr></init></decl>;</decl_stmt>



            <for pos:start="29:13" pos:end="195:13">for<control pos:start="29:16" pos:end="29:35">(<init pos:start="29:17" pos:end="29:24"><expr pos:start="29:17" pos:end="29:23"><name pos:start="29:17" pos:end="29:21">index</name><operator pos:start="29:22" pos:end="29:22">=</operator><literal type="number" pos:start="29:23" pos:end="29:23">0</literal></expr>;</init> <condition pos:start="29:26" pos:end="29:26">;</condition> <incr pos:start="29:28" pos:end="29:34"><expr pos:start="29:28" pos:end="29:34"><name pos:start="29:28" pos:end="29:32">index</name><operator pos:start="29:33" pos:end="29:34">++</operator></expr></incr>)</control><block pos:start="29:36" pos:end="195:13">{<block_content pos:start="31:17" pos:end="193:17">

                <decl_stmt pos:start="31:17" pos:end="31:79"><decl pos:start="31:17" pos:end="31:78"><type pos:start="31:17" pos:end="31:28"><name pos:start="31:17" pos:end="31:24">unsigned</name> <name pos:start="31:26" pos:end="31:28">int</name></type> <name pos:start="31:30" pos:end="31:55">reordering_of_pic_nums_idc</name><init pos:start="31:56" pos:end="31:78">= <expr pos:start="31:58" pos:end="31:78"><call pos:start="31:58" pos:end="31:78"><name pos:start="31:58" pos:end="31:70">get_ue_golomb</name><argument_list pos:start="31:71" pos:end="31:78">(<argument pos:start="31:72" pos:end="31:77"><expr pos:start="31:72" pos:end="31:77"><operator pos:start="31:72" pos:end="31:72">&amp;</operator><name pos:start="31:73" pos:end="31:77"><name pos:start="31:73" pos:end="31:73">s</name><operator pos:start="31:74" pos:end="31:75">-&gt;</operator><name pos:start="31:76" pos:end="31:77">gb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="33:17" pos:end="33:36"><decl pos:start="33:17" pos:end="33:35"><type pos:start="33:17" pos:end="33:28"><name pos:start="33:17" pos:end="33:24">unsigned</name> <name pos:start="33:26" pos:end="33:28">int</name></type> <name pos:start="33:30" pos:end="33:35">pic_id</name></decl>;</decl_stmt>

                <decl_stmt pos:start="35:17" pos:end="35:22"><decl pos:start="35:17" pos:end="35:21"><type pos:start="35:17" pos:end="35:19"><name pos:start="35:17" pos:end="35:19">int</name></type> <name pos:start="35:21" pos:end="35:21">i</name></decl>;</decl_stmt>

                <decl_stmt pos:start="37:17" pos:end="37:36"><decl pos:start="37:17" pos:end="37:35"><type pos:start="37:17" pos:end="37:25"><name pos:start="37:17" pos:end="37:23">Picture</name> <modifier pos:start="37:25" pos:end="37:25">*</modifier></type><name pos:start="37:26" pos:end="37:28">ref</name> <init pos:start="37:30" pos:end="37:35">= <expr pos:start="37:32" pos:end="37:35"><name pos:start="37:32" pos:end="37:35">NULL</name></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="41:17" pos:end="43:26"><if pos:start="41:17" pos:end="43:26">if<condition pos:start="41:19" pos:end="41:49">(<expr pos:start="41:20" pos:end="41:48"><name pos:start="41:20" pos:end="41:45">reordering_of_pic_nums_idc</name><operator pos:start="41:46" pos:end="41:47">==</operator><literal type="number" pos:start="41:48" pos:end="41:48">3</literal></expr>)</condition><block type="pseudo" pos:start="43:21" pos:end="43:26"><block_content pos:start="43:21" pos:end="43:26">

                    <break pos:start="43:21" pos:end="43:26">break;</break></block_content></block></if></if_stmt>



                <if_stmt pos:start="47:17" pos:end="53:17"><if pos:start="47:17" pos:end="53:17">if<condition pos:start="47:19" pos:end="47:47">(<expr pos:start="47:20" pos:end="47:46"><name pos:start="47:20" pos:end="47:24">index</name> <operator pos:start="47:26" pos:end="47:27">&gt;=</operator> <name pos:start="47:29" pos:end="47:46"><name pos:start="47:29" pos:end="47:29">h</name><operator pos:start="47:30" pos:end="47:31">-&gt;</operator><name pos:start="47:32" pos:end="47:40">ref_count</name><index pos:start="47:41" pos:end="47:46">[<expr pos:start="47:42" pos:end="47:45"><name pos:start="47:42" pos:end="47:45">list</name></expr>]</index></name></expr>)</condition><block pos:start="47:48" pos:end="53:17">{<block_content pos:start="49:21" pos:end="51:30">

                    <expr_stmt pos:start="49:21" pos:end="49:83"><expr pos:start="49:21" pos:end="49:82"><call pos:start="49:21" pos:end="49:82"><name pos:start="49:21" pos:end="49:26">av_log</name><argument_list pos:start="49:27" pos:end="49:82">(<argument pos:start="49:28" pos:end="49:37"><expr pos:start="49:28" pos:end="49:37"><name pos:start="49:28" pos:end="49:37"><name pos:start="49:28" pos:end="49:28">h</name><operator pos:start="49:29" pos:end="49:30">-&gt;</operator><name pos:start="49:31" pos:end="49:31">s</name><operator pos:start="49:32" pos:end="49:32">.</operator><name pos:start="49:33" pos:end="49:37">avctx</name></name></expr></argument>, <argument pos:start="49:40" pos:end="49:51"><expr pos:start="49:40" pos:end="49:51"><name pos:start="49:40" pos:end="49:51">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="49:54" pos:end="49:81"><expr pos:start="49:54" pos:end="49:81"><literal type="string" pos:start="49:54" pos:end="49:81">"reference count overflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="51:21" pos:end="51:30">return <expr pos:start="51:28" pos:end="51:29"><operator pos:start="51:28" pos:end="51:28">-</operator><literal type="number" pos:start="51:29" pos:end="51:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="57:17" pos:end="193:17"><if pos:start="57:17" pos:end="187:17">if<condition pos:start="57:19" pos:end="57:48">(<expr pos:start="57:20" pos:end="57:47"><name pos:start="57:20" pos:end="57:45">reordering_of_pic_nums_idc</name><operator pos:start="57:46" pos:end="57:46">&lt;</operator><literal type="number" pos:start="57:47" pos:end="57:47">3</literal></expr>)</condition><block pos:start="57:49" pos:end="187:17">{<block_content pos:start="59:21" pos:end="185:21">

                    <if_stmt pos:start="59:21" pos:end="151:21"><if pos:start="59:21" pos:end="113:21">if<condition pos:start="59:23" pos:end="59:52">(<expr pos:start="59:24" pos:end="59:51"><name pos:start="59:24" pos:end="59:49">reordering_of_pic_nums_idc</name><operator pos:start="59:50" pos:end="59:50">&lt;</operator><literal type="number" pos:start="59:51" pos:end="59:51">2</literal></expr>)</condition><block pos:start="59:53" pos:end="113:21">{<block_content pos:start="61:25" pos:end="111:46">

                        <decl_stmt pos:start="61:25" pos:end="61:87"><decl pos:start="61:25" pos:end="61:86"><type pos:start="61:25" pos:end="61:42"><specifier pos:start="61:25" pos:end="61:29">const</specifier> <name pos:start="61:31" pos:end="61:38">unsigned</name> <name pos:start="61:40" pos:end="61:42">int</name></type> <name pos:start="61:44" pos:end="61:59">abs_diff_pic_num</name><init pos:start="61:60" pos:end="61:86">= <expr pos:start="61:62" pos:end="61:86"><call pos:start="61:62" pos:end="61:82"><name pos:start="61:62" pos:end="61:74">get_ue_golomb</name><argument_list pos:start="61:75" pos:end="61:82">(<argument pos:start="61:76" pos:end="61:81"><expr pos:start="61:76" pos:end="61:81"><operator pos:start="61:76" pos:end="61:76">&amp;</operator><name pos:start="61:77" pos:end="61:81"><name pos:start="61:77" pos:end="61:77">s</name><operator pos:start="61:78" pos:end="61:79">-&gt;</operator><name pos:start="61:80" pos:end="61:81">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="61:84" pos:end="61:84">+</operator> <literal type="number" pos:start="61:86" pos:end="61:86">1</literal></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="63:25" pos:end="63:38"><decl pos:start="63:25" pos:end="63:37"><type pos:start="63:25" pos:end="63:27"><name pos:start="63:25" pos:end="63:27">int</name></type> <name pos:start="63:29" pos:end="63:37">frame_num</name></decl>;</decl_stmt>



                        <if_stmt pos:start="67:25" pos:end="73:25"><if pos:start="67:25" pos:end="73:25">if<condition pos:start="67:27" pos:end="67:61">(<expr pos:start="67:28" pos:end="67:60"><name pos:start="67:28" pos:end="67:43">abs_diff_pic_num</name> <operator pos:start="67:45" pos:end="67:45">&gt;</operator> <name pos:start="67:47" pos:end="67:60"><name pos:start="67:47" pos:end="67:47">h</name><operator pos:start="67:48" pos:end="67:49">-&gt;</operator><name pos:start="67:50" pos:end="67:60">max_pic_num</name></name></expr>)</condition><block pos:start="67:62" pos:end="73:25">{<block_content pos:start="69:29" pos:end="71:38">

                            <expr_stmt pos:start="69:29" pos:end="69:92"><expr pos:start="69:29" pos:end="69:91"><call pos:start="69:29" pos:end="69:91"><name pos:start="69:29" pos:end="69:34">av_log</name><argument_list pos:start="69:35" pos:end="69:91">(<argument pos:start="69:36" pos:end="69:45"><expr pos:start="69:36" pos:end="69:45"><name pos:start="69:36" pos:end="69:45"><name pos:start="69:36" pos:end="69:36">h</name><operator pos:start="69:37" pos:end="69:38">-&gt;</operator><name pos:start="69:39" pos:end="69:39">s</name><operator pos:start="69:40" pos:end="69:40">.</operator><name pos:start="69:41" pos:end="69:45">avctx</name></name></expr></argument>, <argument pos:start="69:48" pos:end="69:59"><expr pos:start="69:48" pos:end="69:59"><name pos:start="69:48" pos:end="69:59">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="69:62" pos:end="69:90"><expr pos:start="69:62" pos:end="69:90"><literal type="string" pos:start="69:62" pos:end="69:90">"abs_diff_pic_num overflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <return pos:start="71:29" pos:end="71:38">return <expr pos:start="71:36" pos:end="71:37"><operator pos:start="71:36" pos:end="71:36">-</operator><literal type="number" pos:start="71:37" pos:end="71:37">1</literal></expr>;</return>

                        </block_content>}</block></if></if_stmt>



                        <if_stmt pos:start="77:25" pos:end="79:84"><if pos:start="77:25" pos:end="77:84">if<condition pos:start="77:27" pos:end="77:59">(<expr pos:start="77:28" pos:end="77:58"><name pos:start="77:28" pos:end="77:53">reordering_of_pic_nums_idc</name> <operator pos:start="77:55" pos:end="77:56">==</operator> <literal type="number" pos:start="77:58" pos:end="77:58">0</literal></expr>)</condition><block type="pseudo" pos:start="77:61" pos:end="77:84"><block_content pos:start="77:61" pos:end="77:84"> <expr_stmt pos:start="77:61" pos:end="77:84"><expr pos:start="77:61" pos:end="77:83"><name pos:start="77:61" pos:end="77:64">pred</name><operator pos:start="77:65" pos:end="77:66">-=</operator> <name pos:start="77:68" pos:end="77:83">abs_diff_pic_num</name></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="79:25" pos:end="79:84">else<block type="pseudo" pos:start="79:61" pos:end="79:84"><block_content pos:start="79:61" pos:end="79:84">                                <expr_stmt pos:start="79:61" pos:end="79:84"><expr pos:start="79:61" pos:end="79:83"><name pos:start="79:61" pos:end="79:64">pred</name><operator pos:start="79:65" pos:end="79:66">+=</operator> <name pos:start="79:68" pos:end="79:83">abs_diff_pic_num</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <expr_stmt pos:start="81:25" pos:end="81:51"><expr pos:start="81:25" pos:end="81:50"><name pos:start="81:25" pos:end="81:28">pred</name> <operator pos:start="81:30" pos:end="81:31">&amp;=</operator> <name pos:start="81:33" pos:end="81:46"><name pos:start="81:33" pos:end="81:33">h</name><operator pos:start="81:34" pos:end="81:35">-&gt;</operator><name pos:start="81:36" pos:end="81:46">max_pic_num</name></name> <operator pos:start="81:48" pos:end="81:48">-</operator> <literal type="number" pos:start="81:50" pos:end="81:50">1</literal></expr>;</expr_stmt>



                        <expr_stmt pos:start="85:25" pos:end="85:77"><expr pos:start="85:25" pos:end="85:76"><name pos:start="85:25" pos:end="85:33">frame_num</name> <operator pos:start="85:35" pos:end="85:35">=</operator> <call pos:start="85:37" pos:end="85:76"><name pos:start="85:37" pos:end="85:51">pic_num_extract</name><argument_list pos:start="85:52" pos:end="85:76">(<argument pos:start="85:53" pos:end="85:53"><expr pos:start="85:53" pos:end="85:53"><name pos:start="85:53" pos:end="85:53">h</name></expr></argument>, <argument pos:start="85:56" pos:end="85:59"><expr pos:start="85:56" pos:end="85:59"><name pos:start="85:56" pos:end="85:59">pred</name></expr></argument>, <argument pos:start="85:62" pos:end="85:75"><expr pos:start="85:62" pos:end="85:75"><operator pos:start="85:62" pos:end="85:62">&amp;</operator><name pos:start="85:63" pos:end="85:75">pic_structure</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                        <for pos:start="89:25" pos:end="107:25">for<control pos:start="89:28" pos:end="89:63">(<init pos:start="89:29" pos:end="89:52"><expr pos:start="89:29" pos:end="89:51"><name pos:start="89:29" pos:end="89:29">i</name><operator pos:start="89:30" pos:end="89:30">=</operator> <name pos:start="89:32" pos:end="89:49"><name pos:start="89:32" pos:end="89:32">h</name><operator pos:start="89:33" pos:end="89:34">-&gt;</operator><name pos:start="89:35" pos:end="89:49">short_ref_count</name></name><operator pos:start="89:50" pos:end="89:50">-</operator><literal type="number" pos:start="89:51" pos:end="89:51">1</literal></expr>;</init> <condition pos:start="89:54" pos:end="89:58"><expr pos:start="89:54" pos:end="89:57"><name pos:start="89:54" pos:end="89:54">i</name><operator pos:start="89:55" pos:end="89:56">&gt;=</operator><literal type="number" pos:start="89:57" pos:end="89:57">0</literal></expr>;</condition> <incr pos:start="89:60" pos:end="89:62"><expr pos:start="89:60" pos:end="89:62"><name pos:start="89:60" pos:end="89:60">i</name><operator pos:start="89:61" pos:end="89:62">--</operator></expr></incr>)</control><block pos:start="89:64" pos:end="107:25">{<block_content pos:start="91:29" pos:end="105:38">

                            <expr_stmt pos:start="91:29" pos:end="91:50"><expr pos:start="91:29" pos:end="91:49"><name pos:start="91:29" pos:end="91:31">ref</name> <operator pos:start="91:33" pos:end="91:33">=</operator> <name pos:start="91:35" pos:end="91:49"><name pos:start="91:35" pos:end="91:35">h</name><operator pos:start="91:36" pos:end="91:37">-&gt;</operator><name pos:start="91:38" pos:end="91:46">short_ref</name><index pos:start="91:47" pos:end="91:49">[<expr pos:start="91:48" pos:end="91:48"><name pos:start="91:48" pos:end="91:48">i</name></expr>]</index></name></expr>;</expr_stmt>

                            <expr_stmt pos:start="93:29" pos:end="93:51"><expr pos:start="93:29" pos:end="93:50"><call pos:start="93:29" pos:end="93:50"><name pos:start="93:29" pos:end="93:34">assert</name><argument_list pos:start="93:35" pos:end="93:50">(<argument pos:start="93:36" pos:end="93:49"><expr pos:start="93:36" pos:end="93:49"><name pos:start="93:36" pos:end="93:49"><name pos:start="93:36" pos:end="93:38">ref</name><operator pos:start="93:39" pos:end="93:40">-&gt;</operator><name pos:start="93:41" pos:end="93:49">reference</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="95:29" pos:end="95:51"><expr pos:start="95:29" pos:end="95:50"><call pos:start="95:29" pos:end="95:50"><name pos:start="95:29" pos:end="95:34">assert</name><argument_list pos:start="95:35" pos:end="95:50">(<argument pos:start="95:36" pos:end="95:49"><expr pos:start="95:36" pos:end="95:49"><operator pos:start="95:36" pos:end="95:36">!</operator><name pos:start="95:37" pos:end="95:49"><name pos:start="95:37" pos:end="95:39">ref</name><operator pos:start="95:40" pos:end="95:41">-&gt;</operator><name pos:start="95:42" pos:end="95:49">long_ref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <if_stmt pos:start="97:29" pos:end="105:38"><if pos:start="97:29" pos:end="105:38">if<condition pos:start="97:31" pos:end="103:54">(<expr pos:start="97:32" pos:end="103:53"><name pos:start="97:32" pos:end="97:43"><name pos:start="97:32" pos:end="97:34">ref</name><operator pos:start="97:35" pos:end="97:36">-&gt;</operator><name pos:start="97:37" pos:end="97:40">data</name><index pos:start="97:41" pos:end="97:43">[<expr pos:start="97:42" pos:end="97:42"><literal type="number" pos:start="97:42" pos:end="97:42">0</literal></expr>]</index></name> <operator pos:start="97:45" pos:end="97:46">!=</operator> <name pos:start="97:48" pos:end="97:51">NULL</name> <operator pos:start="97:53" pos:end="97:54">&amp;&amp;</operator>

                                   <name pos:start="99:36" pos:end="99:49"><name pos:start="99:36" pos:end="99:38">ref</name><operator pos:start="99:39" pos:end="99:40">-&gt;</operator><name pos:start="99:41" pos:end="99:49">frame_num</name></name> <operator pos:start="99:51" pos:end="99:52">==</operator> <name pos:start="99:54" pos:end="99:62">frame_num</name> <operator pos:start="99:64" pos:end="99:65">&amp;&amp;</operator>

                                   <operator pos:start="101:36" pos:end="101:36">(</operator><name pos:start="101:37" pos:end="101:50"><name pos:start="101:37" pos:end="101:39">ref</name><operator pos:start="101:40" pos:end="101:41">-&gt;</operator><name pos:start="101:42" pos:end="101:50">reference</name></name> <operator pos:start="101:52" pos:end="101:52">&amp;</operator> <name pos:start="101:54" pos:end="101:66">pic_structure</name><operator pos:start="101:67" pos:end="101:67">)</operator> <operator pos:start="101:69" pos:end="101:70">&amp;&amp;</operator>

                                   <name pos:start="103:36" pos:end="103:48"><name pos:start="103:36" pos:end="103:38">ref</name><operator pos:start="103:39" pos:end="103:40">-&gt;</operator><name pos:start="103:41" pos:end="103:48">long_ref</name></name> <operator pos:start="103:50" pos:end="103:51">==</operator> <literal type="number" pos:start="103:53" pos:end="103:53">0</literal></expr>)</condition><block type="pseudo" pos:start="105:33" pos:end="105:38"><block_content pos:start="105:33" pos:end="105:38"> <comment type="line" pos:start="103:56" pos:end="103:113">// ignore non existing pictures by testing data[0] pointer</comment>

                                <break pos:start="105:33" pos:end="105:38">break;</break></block_content></block></if></if_stmt>

                        </block_content>}</block></for>

                        <if_stmt pos:start="109:25" pos:end="111:46"><if pos:start="109:25" pos:end="111:46">if<condition pos:start="109:27" pos:end="109:32">(<expr pos:start="109:28" pos:end="109:31"><name pos:start="109:28" pos:end="109:28">i</name><operator pos:start="109:29" pos:end="109:30">&gt;=</operator><literal type="number" pos:start="109:31" pos:end="109:31">0</literal></expr>)</condition><block type="pseudo" pos:start="111:29" pos:end="111:46"><block_content pos:start="111:29" pos:end="111:46">

                            <expr_stmt pos:start="111:29" pos:end="111:46"><expr pos:start="111:29" pos:end="111:45"><name pos:start="111:29" pos:end="111:39"><name pos:start="111:29" pos:end="111:31">ref</name><operator pos:start="111:32" pos:end="111:33">-&gt;</operator><name pos:start="111:34" pos:end="111:39">pic_id</name></name><operator pos:start="111:40" pos:end="111:40">=</operator> <name pos:start="111:42" pos:end="111:45">pred</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></if><else pos:start="113:22" pos:end="151:21">else<block pos:start="113:26" pos:end="151:21">{<block_content pos:start="115:25" pos:end="149:25">

                        <decl_stmt pos:start="115:25" pos:end="115:37"><decl pos:start="115:25" pos:end="115:36"><type pos:start="115:25" pos:end="115:27"><name pos:start="115:25" pos:end="115:27">int</name></type> <name pos:start="115:29" pos:end="115:36">long_idx</name></decl>;</decl_stmt>

                        <expr_stmt pos:start="117:25" pos:end="117:54"><expr pos:start="117:25" pos:end="117:53"><name pos:start="117:25" pos:end="117:30">pic_id</name><operator pos:start="117:31" pos:end="117:31">=</operator> <call pos:start="117:33" pos:end="117:53"><name pos:start="117:33" pos:end="117:45">get_ue_golomb</name><argument_list pos:start="117:46" pos:end="117:53">(<argument pos:start="117:47" pos:end="117:52"><expr pos:start="117:47" pos:end="117:52"><operator pos:start="117:47" pos:end="117:47">&amp;</operator><name pos:start="117:48" pos:end="117:52"><name pos:start="117:48" pos:end="117:48">s</name><operator pos:start="117:49" pos:end="117:50">-&gt;</operator><name pos:start="117:51" pos:end="117:52">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="117:56" pos:end="117:74">//long_term_pic_idx</comment>



                        <expr_stmt pos:start="121:25" pos:end="121:77"><expr pos:start="121:25" pos:end="121:76"><name pos:start="121:25" pos:end="121:32">long_idx</name><operator pos:start="121:33" pos:end="121:33">=</operator> <call pos:start="121:35" pos:end="121:76"><name pos:start="121:35" pos:end="121:49">pic_num_extract</name><argument_list pos:start="121:50" pos:end="121:76">(<argument pos:start="121:51" pos:end="121:51"><expr pos:start="121:51" pos:end="121:51"><name pos:start="121:51" pos:end="121:51">h</name></expr></argument>, <argument pos:start="121:54" pos:end="121:59"><expr pos:start="121:54" pos:end="121:59"><name pos:start="121:54" pos:end="121:59">pic_id</name></expr></argument>, <argument pos:start="121:62" pos:end="121:75"><expr pos:start="121:62" pos:end="121:75"><operator pos:start="121:62" pos:end="121:62">&amp;</operator><name pos:start="121:63" pos:end="121:75">pic_structure</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                        <if_stmt pos:start="125:25" pos:end="131:25"><if pos:start="125:25" pos:end="131:25">if<condition pos:start="125:27" pos:end="125:39">(<expr pos:start="125:28" pos:end="125:38"><name pos:start="125:28" pos:end="125:35">long_idx</name><operator pos:start="125:36" pos:end="125:36">&gt;</operator><literal type="number" pos:start="125:37" pos:end="125:38">31</literal></expr>)</condition><block pos:start="125:40" pos:end="131:25">{<block_content pos:start="127:29" pos:end="129:38">

                            <expr_stmt pos:start="127:29" pos:end="127:93"><expr pos:start="127:29" pos:end="127:92"><call pos:start="127:29" pos:end="127:92"><name pos:start="127:29" pos:end="127:34">av_log</name><argument_list pos:start="127:35" pos:end="127:92">(<argument pos:start="127:36" pos:end="127:45"><expr pos:start="127:36" pos:end="127:45"><name pos:start="127:36" pos:end="127:45"><name pos:start="127:36" pos:end="127:36">h</name><operator pos:start="127:37" pos:end="127:38">-&gt;</operator><name pos:start="127:39" pos:end="127:39">s</name><operator pos:start="127:40" pos:end="127:40">.</operator><name pos:start="127:41" pos:end="127:45">avctx</name></name></expr></argument>, <argument pos:start="127:48" pos:end="127:59"><expr pos:start="127:48" pos:end="127:59"><name pos:start="127:48" pos:end="127:59">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="127:62" pos:end="127:91"><expr pos:start="127:62" pos:end="127:91"><literal type="string" pos:start="127:62" pos:end="127:91">"long_term_pic_idx overflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <return pos:start="129:29" pos:end="129:38">return <expr pos:start="129:36" pos:end="129:37"><operator pos:start="129:36" pos:end="129:36">-</operator><literal type="number" pos:start="129:37" pos:end="129:37">1</literal></expr>;</return>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="133:25" pos:end="133:52"><expr pos:start="133:25" pos:end="133:51"><name pos:start="133:25" pos:end="133:27">ref</name> <operator pos:start="133:29" pos:end="133:29">=</operator> <name pos:start="133:31" pos:end="133:51"><name pos:start="133:31" pos:end="133:31">h</name><operator pos:start="133:32" pos:end="133:33">-&gt;</operator><name pos:start="133:34" pos:end="133:41">long_ref</name><index pos:start="133:42" pos:end="133:51">[<expr pos:start="133:43" pos:end="133:50"><name pos:start="133:43" pos:end="133:50">long_idx</name></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="135:25" pos:end="135:58"><expr pos:start="135:25" pos:end="135:57"><call pos:start="135:25" pos:end="135:57"><name pos:start="135:25" pos:end="135:30">assert</name><argument_list pos:start="135:31" pos:end="135:57">(<argument pos:start="135:32" pos:end="135:56"><expr pos:start="135:32" pos:end="135:56"><operator pos:start="135:32" pos:end="135:32">!</operator><operator pos:start="135:33" pos:end="135:33">(</operator><name pos:start="135:34" pos:end="135:36">ref</name> <operator pos:start="135:38" pos:end="135:39">&amp;&amp;</operator> <operator pos:start="135:41" pos:end="135:41">!</operator><name pos:start="135:42" pos:end="135:55"><name pos:start="135:42" pos:end="135:44">ref</name><operator pos:start="135:45" pos:end="135:46">-&gt;</operator><name pos:start="135:47" pos:end="135:55">reference</name></name><operator pos:start="135:56" pos:end="135:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="137:25" pos:end="149:25"><if pos:start="137:25" pos:end="145:25">if<condition pos:start="137:27" pos:end="137:67">(<expr pos:start="137:28" pos:end="137:66"><name pos:start="137:28" pos:end="137:30">ref</name> <operator pos:start="137:32" pos:end="137:33">&amp;&amp;</operator> <operator pos:start="137:35" pos:end="137:35">(</operator><name pos:start="137:36" pos:end="137:49"><name pos:start="137:36" pos:end="137:38">ref</name><operator pos:start="137:39" pos:end="137:40">-&gt;</operator><name pos:start="137:41" pos:end="137:49">reference</name></name> <operator pos:start="137:51" pos:end="137:51">&amp;</operator> <name pos:start="137:53" pos:end="137:65">pic_structure</name><operator pos:start="137:66" pos:end="137:66">)</operator></expr>)</condition><block pos:start="137:68" pos:end="145:25">{<block_content pos:start="139:29" pos:end="143:32">

                            <expr_stmt pos:start="139:29" pos:end="139:48"><expr pos:start="139:29" pos:end="139:47"><name pos:start="139:29" pos:end="139:39"><name pos:start="139:29" pos:end="139:31">ref</name><operator pos:start="139:32" pos:end="139:33">-&gt;</operator><name pos:start="139:34" pos:end="139:39">pic_id</name></name><operator pos:start="139:40" pos:end="139:40">=</operator> <name pos:start="139:42" pos:end="139:47">pic_id</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="141:29" pos:end="141:50"><expr pos:start="141:29" pos:end="141:49"><call pos:start="141:29" pos:end="141:49"><name pos:start="141:29" pos:end="141:34">assert</name><argument_list pos:start="141:35" pos:end="141:49">(<argument pos:start="141:36" pos:end="141:48"><expr pos:start="141:36" pos:end="141:48"><name pos:start="141:36" pos:end="141:48"><name pos:start="141:36" pos:end="141:38">ref</name><operator pos:start="141:39" pos:end="141:40">-&gt;</operator><name pos:start="141:41" pos:end="141:48">long_ref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="143:29" pos:end="143:32"><expr pos:start="143:29" pos:end="143:31"><name pos:start="143:29" pos:end="143:29">i</name><operator pos:start="143:30" pos:end="143:30">=</operator><literal type="number" pos:start="143:31" pos:end="143:31">0</literal></expr>;</expr_stmt>

                        </block_content>}</block></if><else pos:start="145:26" pos:end="149:25">else<block pos:start="145:30" pos:end="149:25">{<block_content pos:start="147:29" pos:end="147:33">

                            <expr_stmt pos:start="147:29" pos:end="147:33"><expr pos:start="147:29" pos:end="147:32"><name pos:start="147:29" pos:end="147:29">i</name><operator pos:start="147:30" pos:end="147:30">=</operator><operator pos:start="147:31" pos:end="147:31">-</operator><literal type="number" pos:start="147:32" pos:end="147:32">1</literal></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></else></if_stmt>



                    <if_stmt pos:start="155:21" pos:end="185:21"><if pos:start="155:21" pos:end="161:21">if <condition pos:start="155:24" pos:end="155:30">(<expr pos:start="155:25" pos:end="155:29"><name pos:start="155:25" pos:end="155:25">i</name> <operator pos:start="155:27" pos:end="155:27">&lt;</operator> <literal type="number" pos:start="155:29" pos:end="155:29">0</literal></expr>)</condition> <block pos:start="155:32" pos:end="161:21">{<block_content pos:start="157:25" pos:end="159:78">

                        <expr_stmt pos:start="157:25" pos:end="157:103"><expr pos:start="157:25" pos:end="157:102"><call pos:start="157:25" pos:end="157:102"><name pos:start="157:25" pos:end="157:30">av_log</name><argument_list pos:start="157:31" pos:end="157:102">(<argument pos:start="157:32" pos:end="157:41"><expr pos:start="157:32" pos:end="157:41"><name pos:start="157:32" pos:end="157:41"><name pos:start="157:32" pos:end="157:32">h</name><operator pos:start="157:33" pos:end="157:34">-&gt;</operator><name pos:start="157:35" pos:end="157:35">s</name><operator pos:start="157:36" pos:end="157:36">.</operator><name pos:start="157:37" pos:end="157:41">avctx</name></name></expr></argument>, <argument pos:start="157:44" pos:end="157:55"><expr pos:start="157:44" pos:end="157:55"><name pos:start="157:44" pos:end="157:55">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="157:58" pos:end="157:101"><expr pos:start="157:58" pos:end="157:101"><literal type="string" pos:start="157:58" pos:end="157:101">"reference picture missing during reorder\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="159:25" pos:end="159:78"><expr pos:start="159:25" pos:end="159:77"><call pos:start="159:25" pos:end="159:77"><name pos:start="159:25" pos:end="159:30">memset</name><argument_list pos:start="159:31" pos:end="159:77">(<argument pos:start="159:32" pos:end="159:56"><expr pos:start="159:32" pos:end="159:56"><operator pos:start="159:32" pos:end="159:32">&amp;</operator><name pos:start="159:33" pos:end="159:56"><name pos:start="159:33" pos:end="159:33">h</name><operator pos:start="159:34" pos:end="159:35">-&gt;</operator><name pos:start="159:36" pos:end="159:43">ref_list</name><index pos:start="159:44" pos:end="159:49">[<expr pos:start="159:45" pos:end="159:48"><name pos:start="159:45" pos:end="159:48">list</name></expr>]</index><index pos:start="159:50" pos:end="159:56">[<expr pos:start="159:51" pos:end="159:55"><name pos:start="159:51" pos:end="159:55">index</name></expr>]</index></name></expr></argument>, <argument pos:start="159:59" pos:end="159:59"><expr pos:start="159:59" pos:end="159:59"><literal type="number" pos:start="159:59" pos:end="159:59">0</literal></expr></argument>, <argument pos:start="159:62" pos:end="159:76"><expr pos:start="159:62" pos:end="159:76"><sizeof pos:start="159:62" pos:end="159:76">sizeof<argument_list pos:start="159:68" pos:end="159:76">(<argument pos:start="159:69" pos:end="159:75"><expr pos:start="159:69" pos:end="159:75"><name pos:start="159:69" pos:end="159:75">Picture</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="159:80" pos:end="159:86">//FIXME</comment>

                    </block_content>}</block></if> <else pos:start="161:23" pos:end="185:21">else <block pos:start="161:28" pos:end="185:21">{<block_content pos:start="163:25" pos:end="183:25">

                        <for pos:start="163:25" pos:end="169:25">for<control pos:start="163:28" pos:end="163:65">(<init pos:start="163:29" pos:end="163:36"><expr pos:start="163:29" pos:end="163:35"><name pos:start="163:29" pos:end="163:29">i</name><operator pos:start="163:30" pos:end="163:30">=</operator><name pos:start="163:31" pos:end="163:35">index</name></expr>;</init> <condition pos:start="163:38" pos:end="163:60"><expr pos:start="163:38" pos:end="163:59"><name pos:start="163:38" pos:end="163:38">i</name><operator pos:start="163:39" pos:end="163:39">+</operator><literal type="number" pos:start="163:40" pos:end="163:40">1</literal><operator pos:start="163:41" pos:end="163:41">&lt;</operator><name pos:start="163:42" pos:end="163:59"><name pos:start="163:42" pos:end="163:42">h</name><operator pos:start="163:43" pos:end="163:44">-&gt;</operator><name pos:start="163:45" pos:end="163:53">ref_count</name><index pos:start="163:54" pos:end="163:59">[<expr pos:start="163:55" pos:end="163:58"><name pos:start="163:55" pos:end="163:58">list</name></expr>]</index></name></expr>;</condition> <incr pos:start="163:62" pos:end="163:64"><expr pos:start="163:62" pos:end="163:64"><name pos:start="163:62" pos:end="163:62">i</name><operator pos:start="163:63" pos:end="163:64">++</operator></expr></incr>)</control><block pos:start="163:66" pos:end="169:25">{<block_content pos:start="165:29" pos:end="167:38">

                            <if_stmt pos:start="165:29" pos:end="167:38"><if pos:start="165:29" pos:end="167:38">if<condition pos:start="165:31" pos:end="165:124">(<expr pos:start="165:32" pos:end="165:123"><name pos:start="165:32" pos:end="165:44"><name pos:start="165:32" pos:end="165:34">ref</name><operator pos:start="165:35" pos:end="165:36">-&gt;</operator><name pos:start="165:37" pos:end="165:44">long_ref</name></name> <operator pos:start="165:46" pos:end="165:47">==</operator> <name pos:start="165:49" pos:end="165:68"><name pos:start="165:49" pos:end="165:49">h</name><operator pos:start="165:50" pos:end="165:51">-&gt;</operator><name pos:start="165:52" pos:end="165:59">ref_list</name><index pos:start="165:60" pos:end="165:65">[<expr pos:start="165:61" pos:end="165:64"><name pos:start="165:61" pos:end="165:64">list</name></expr>]</index><index pos:start="165:66" pos:end="165:68">[<expr pos:start="165:67" pos:end="165:67"><name pos:start="165:67" pos:end="165:67">i</name></expr>]</index></name><operator pos:start="165:69" pos:end="165:69">.</operator><name pos:start="165:70" pos:end="165:77">long_ref</name> <operator pos:start="165:79" pos:end="165:80">&amp;&amp;</operator> <name pos:start="165:82" pos:end="165:92"><name pos:start="165:82" pos:end="165:84">ref</name><operator pos:start="165:85" pos:end="165:86">-&gt;</operator><name pos:start="165:87" pos:end="165:92">pic_id</name></name> <operator pos:start="165:94" pos:end="165:95">==</operator> <name pos:start="165:97" pos:end="165:116"><name pos:start="165:97" pos:end="165:97">h</name><operator pos:start="165:98" pos:end="165:99">-&gt;</operator><name pos:start="165:100" pos:end="165:107">ref_list</name><index pos:start="165:108" pos:end="165:113">[<expr pos:start="165:109" pos:end="165:112"><name pos:start="165:109" pos:end="165:112">list</name></expr>]</index><index pos:start="165:114" pos:end="165:116">[<expr pos:start="165:115" pos:end="165:115"><name pos:start="165:115" pos:end="165:115">i</name></expr>]</index></name><operator pos:start="165:117" pos:end="165:117">.</operator><name pos:start="165:118" pos:end="165:123">pic_id</name></expr>)</condition><block type="pseudo" pos:start="167:33" pos:end="167:38"><block_content pos:start="167:33" pos:end="167:38">

                                <break pos:start="167:33" pos:end="167:38">break;</break></block_content></block></if></if_stmt>

                        </block_content>}</block></for>

                        <for pos:start="171:25" pos:end="175:25">for<control pos:start="171:28" pos:end="171:45">(<init pos:start="171:29" pos:end="171:29">;</init> <condition pos:start="171:31" pos:end="171:40"><expr pos:start="171:31" pos:end="171:39"><name pos:start="171:31" pos:end="171:31">i</name> <operator pos:start="171:33" pos:end="171:33">&gt;</operator> <name pos:start="171:35" pos:end="171:39">index</name></expr>;</condition> <incr pos:start="171:42" pos:end="171:44"><expr pos:start="171:42" pos:end="171:44"><name pos:start="171:42" pos:end="171:42">i</name><operator pos:start="171:43" pos:end="171:44">--</operator></expr></incr>)</control><block pos:start="171:46" pos:end="175:25">{<block_content pos:start="173:29" pos:end="173:73">

                            <expr_stmt pos:start="173:29" pos:end="173:73"><expr pos:start="173:29" pos:end="173:72"><name pos:start="173:29" pos:end="173:48"><name pos:start="173:29" pos:end="173:29">h</name><operator pos:start="173:30" pos:end="173:31">-&gt;</operator><name pos:start="173:32" pos:end="173:39">ref_list</name><index pos:start="173:40" pos:end="173:45">[<expr pos:start="173:41" pos:end="173:44"><name pos:start="173:41" pos:end="173:44">list</name></expr>]</index><index pos:start="173:46" pos:end="173:48">[<expr pos:start="173:47" pos:end="173:47"><name pos:start="173:47" pos:end="173:47">i</name></expr>]</index></name><operator pos:start="173:49" pos:end="173:49">=</operator> <name pos:start="173:51" pos:end="173:72"><name pos:start="173:51" pos:end="173:51">h</name><operator pos:start="173:52" pos:end="173:53">-&gt;</operator><name pos:start="173:54" pos:end="173:61">ref_list</name><index pos:start="173:62" pos:end="173:67">[<expr pos:start="173:63" pos:end="173:66"><name pos:start="173:63" pos:end="173:66">list</name></expr>]</index><index pos:start="173:68" pos:end="173:72">[<expr pos:start="173:69" pos:end="173:71"><name pos:start="173:69" pos:end="173:69">i</name><operator pos:start="173:70" pos:end="173:70">-</operator><literal type="number" pos:start="173:71" pos:end="173:71">1</literal></expr>]</index></name></expr>;</expr_stmt>

                        </block_content>}</block></for>

                        <expr_stmt pos:start="177:25" pos:end="177:55"><expr pos:start="177:25" pos:end="177:54"><name pos:start="177:25" pos:end="177:48"><name pos:start="177:25" pos:end="177:25">h</name><operator pos:start="177:26" pos:end="177:27">-&gt;</operator><name pos:start="177:28" pos:end="177:35">ref_list</name><index pos:start="177:36" pos:end="177:41">[<expr pos:start="177:37" pos:end="177:40"><name pos:start="177:37" pos:end="177:40">list</name></expr>]</index><index pos:start="177:42" pos:end="177:48">[<expr pos:start="177:43" pos:end="177:47"><name pos:start="177:43" pos:end="177:47">index</name></expr>]</index></name><operator pos:start="177:49" pos:end="177:49">=</operator> <operator pos:start="177:51" pos:end="177:51">*</operator><name pos:start="177:52" pos:end="177:54">ref</name></expr>;</expr_stmt>

                        <if_stmt pos:start="179:25" pos:end="183:25"><if pos:start="179:25" pos:end="183:25">if <condition pos:start="179:28" pos:end="179:42">(<expr pos:start="179:29" pos:end="179:41"><name pos:start="179:29" pos:end="179:41">FIELD_PICTURE</name></expr>)</condition><block pos:start="179:43" pos:end="183:25">{<block_content pos:start="181:29" pos:end="181:83">

                            <expr_stmt pos:start="181:29" pos:end="181:83"><expr pos:start="181:29" pos:end="181:82"><call pos:start="181:29" pos:end="181:82"><name pos:start="181:29" pos:end="181:40">pic_as_field</name><argument_list pos:start="181:41" pos:end="181:82">(<argument pos:start="181:42" pos:end="181:66"><expr pos:start="181:42" pos:end="181:66"><operator pos:start="181:42" pos:end="181:42">&amp;</operator><name pos:start="181:43" pos:end="181:66"><name pos:start="181:43" pos:end="181:43">h</name><operator pos:start="181:44" pos:end="181:45">-&gt;</operator><name pos:start="181:46" pos:end="181:53">ref_list</name><index pos:start="181:54" pos:end="181:59">[<expr pos:start="181:55" pos:end="181:58"><name pos:start="181:55" pos:end="181:58">list</name></expr>]</index><index pos:start="181:60" pos:end="181:66">[<expr pos:start="181:61" pos:end="181:65"><name pos:start="181:61" pos:end="181:65">index</name></expr>]</index></name></expr></argument>, <argument pos:start="181:69" pos:end="181:81"><expr pos:start="181:69" pos:end="181:81"><name pos:start="181:69" pos:end="181:81">pic_structure</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if><else pos:start="187:18" pos:end="193:17">else<block pos:start="187:22" pos:end="193:17">{<block_content pos:start="189:21" pos:end="191:30">

                    <expr_stmt pos:start="189:21" pos:end="189:93"><expr pos:start="189:21" pos:end="189:92"><call pos:start="189:21" pos:end="189:92"><name pos:start="189:21" pos:end="189:26">av_log</name><argument_list pos:start="189:27" pos:end="189:92">(<argument pos:start="189:28" pos:end="189:37"><expr pos:start="189:28" pos:end="189:37"><name pos:start="189:28" pos:end="189:37"><name pos:start="189:28" pos:end="189:28">h</name><operator pos:start="189:29" pos:end="189:30">-&gt;</operator><name pos:start="189:31" pos:end="189:31">s</name><operator pos:start="189:32" pos:end="189:32">.</operator><name pos:start="189:33" pos:end="189:37">avctx</name></name></expr></argument>, <argument pos:start="189:40" pos:end="189:51"><expr pos:start="189:40" pos:end="189:51"><name pos:start="189:40" pos:end="189:51">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="189:54" pos:end="189:91"><expr pos:start="189:54" pos:end="189:91"><literal type="string" pos:start="189:54" pos:end="189:91">"illegal reordering_of_pic_nums_idc\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="191:21" pos:end="191:30">return <expr pos:start="191:28" pos:end="191:29"><operator pos:start="191:28" pos:end="191:28">-</operator><literal type="number" pos:start="191:29" pos:end="191:29">1</literal></expr>;</return>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <for pos:start="201:5" pos:end="211:5">for<control pos:start="201:8" pos:end="201:43">(<init pos:start="201:9" pos:end="201:15"><expr pos:start="201:9" pos:end="201:14"><name pos:start="201:9" pos:end="201:12">list</name><operator pos:start="201:13" pos:end="201:13">=</operator><literal type="number" pos:start="201:14" pos:end="201:14">0</literal></expr>;</init> <condition pos:start="201:17" pos:end="201:35"><expr pos:start="201:17" pos:end="201:34"><name pos:start="201:17" pos:end="201:20">list</name><operator pos:start="201:21" pos:end="201:21">&lt;</operator><name pos:start="201:22" pos:end="201:34"><name pos:start="201:22" pos:end="201:22">h</name><operator pos:start="201:23" pos:end="201:24">-&gt;</operator><name pos:start="201:25" pos:end="201:34">list_count</name></name></expr>;</condition> <incr pos:start="201:37" pos:end="201:42"><expr pos:start="201:37" pos:end="201:42"><name pos:start="201:37" pos:end="201:40">list</name><operator pos:start="201:41" pos:end="201:42">++</operator></expr></incr>)</control><block pos:start="201:44" pos:end="211:5">{<block_content pos:start="203:9" pos:end="209:9">

        <for pos:start="203:9" pos:end="209:9">for<control pos:start="203:12" pos:end="203:58">(<init pos:start="203:13" pos:end="203:21"><expr pos:start="203:13" pos:end="203:20"><name pos:start="203:13" pos:end="203:17">index</name><operator pos:start="203:18" pos:end="203:18">=</operator> <literal type="number" pos:start="203:20" pos:end="203:20">0</literal></expr>;</init> <condition pos:start="203:23" pos:end="203:49"><expr pos:start="203:23" pos:end="203:48"><name pos:start="203:23" pos:end="203:27">index</name> <operator pos:start="203:29" pos:end="203:29">&lt;</operator> <name pos:start="203:31" pos:end="203:48"><name pos:start="203:31" pos:end="203:31">h</name><operator pos:start="203:32" pos:end="203:33">-&gt;</operator><name pos:start="203:34" pos:end="203:42">ref_count</name><index pos:start="203:43" pos:end="203:48">[<expr pos:start="203:44" pos:end="203:47"><name pos:start="203:44" pos:end="203:47">list</name></expr>]</index></name></expr>;</condition> <incr pos:start="203:51" pos:end="203:57"><expr pos:start="203:51" pos:end="203:57"><name pos:start="203:51" pos:end="203:55">index</name><operator pos:start="203:56" pos:end="203:57">++</operator></expr></incr>)</control><block pos:start="203:59" pos:end="209:9">{<block_content pos:start="205:13" pos:end="207:61">

            <if_stmt pos:start="205:13" pos:end="207:61"><if pos:start="205:13" pos:end="207:61">if<condition pos:start="205:15" pos:end="205:49">(<expr pos:start="205:16" pos:end="205:48"><operator pos:start="205:16" pos:end="205:16">!</operator><name pos:start="205:17" pos:end="205:40"><name pos:start="205:17" pos:end="205:17">h</name><operator pos:start="205:18" pos:end="205:19">-&gt;</operator><name pos:start="205:20" pos:end="205:27">ref_list</name><index pos:start="205:28" pos:end="205:33">[<expr pos:start="205:29" pos:end="205:32"><name pos:start="205:29" pos:end="205:32">list</name></expr>]</index><index pos:start="205:34" pos:end="205:40">[<expr pos:start="205:35" pos:end="205:39"><name pos:start="205:35" pos:end="205:39">index</name></expr>]</index></name><operator pos:start="205:41" pos:end="205:41">.</operator><name pos:start="205:42" pos:end="205:48"><name pos:start="205:42" pos:end="205:45">data</name><index pos:start="205:46" pos:end="205:48">[<expr pos:start="205:47" pos:end="205:47"><literal type="number" pos:start="205:47" pos:end="205:47">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="207:17" pos:end="207:61"><block_content pos:start="207:17" pos:end="207:61">

                <expr_stmt pos:start="207:17" pos:end="207:61"><expr pos:start="207:17" pos:end="207:60"><name pos:start="207:17" pos:end="207:40"><name pos:start="207:17" pos:end="207:17">h</name><operator pos:start="207:18" pos:end="207:19">-&gt;</operator><name pos:start="207:20" pos:end="207:27">ref_list</name><index pos:start="207:28" pos:end="207:33">[<expr pos:start="207:29" pos:end="207:32"><name pos:start="207:29" pos:end="207:32">list</name></expr>]</index><index pos:start="207:34" pos:end="207:40">[<expr pos:start="207:35" pos:end="207:39"><name pos:start="207:35" pos:end="207:39">index</name></expr>]</index></name><operator pos:start="207:41" pos:end="207:41">=</operator> <name pos:start="207:43" pos:end="207:60"><name pos:start="207:43" pos:end="207:43">s</name><operator pos:start="207:44" pos:end="207:45">-&gt;</operator><name pos:start="207:46" pos:end="207:60">current_picture</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <if_stmt pos:start="215:5" pos:end="217:36"><if pos:start="215:5" pos:end="217:36">if<condition pos:start="215:7" pos:end="215:62">(<expr pos:start="215:8" pos:end="215:61"><name pos:start="215:8" pos:end="215:20"><name pos:start="215:8" pos:end="215:8">h</name><operator pos:start="215:9" pos:end="215:10">-&gt;</operator><name pos:start="215:11" pos:end="215:20">slice_type</name></name><operator pos:start="215:21" pos:end="215:22">==</operator><name pos:start="215:23" pos:end="215:31">FF_B_TYPE</name> <operator pos:start="215:33" pos:end="215:34">&amp;&amp;</operator> <operator pos:start="215:36" pos:end="215:36">!</operator><name pos:start="215:37" pos:end="215:61"><name pos:start="215:37" pos:end="215:37">h</name><operator pos:start="215:38" pos:end="215:39">-&gt;</operator><name pos:start="215:40" pos:end="215:61">direct_spatial_mv_pred</name></name></expr>)</condition><block type="pseudo" pos:start="217:9" pos:end="217:36"><block_content pos:start="217:9" pos:end="217:36">

        <expr_stmt pos:start="217:9" pos:end="217:36"><expr pos:start="217:9" pos:end="217:35"><call pos:start="217:9" pos:end="217:35"><name pos:start="217:9" pos:end="217:32">direct_dist_scale_factor</name><argument_list pos:start="217:33" pos:end="217:35">(<argument pos:start="217:34" pos:end="217:34"><expr pos:start="217:34" pos:end="217:34"><name pos:start="217:34" pos:end="217:34">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="219:5" pos:end="219:28"><expr pos:start="219:5" pos:end="219:27"><call pos:start="219:5" pos:end="219:27"><name pos:start="219:5" pos:end="219:24">direct_ref_list_init</name><argument_list pos:start="219:25" pos:end="219:27">(<argument pos:start="219:26" pos:end="219:26"><expr pos:start="219:26" pos:end="219:26"><name pos:start="219:26" pos:end="219:26">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="221:5" pos:end="221:13">return <expr pos:start="221:12" pos:end="221:12"><literal type="number" pos:start="221:12" pos:end="221:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
