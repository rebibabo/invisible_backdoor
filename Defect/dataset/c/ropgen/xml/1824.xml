<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1824.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">ppc_cpu_initfn</name><parameter_list pos:start="1:27" pos:end="1:39">(<parameter pos:start="1:28" pos:end="1:38"><decl pos:start="1:28" pos:end="1:38"><type pos:start="1:28" pos:end="1:35"><name pos:start="1:28" pos:end="1:33">Object</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">obj</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="91:1">{<block_content pos:start="5:5" pos:end="89:5">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">CPUState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">cs</name> <init pos:start="5:18" pos:end="5:27">= <expr pos:start="5:20" pos:end="5:27"><call pos:start="5:20" pos:end="5:27"><name pos:start="5:20" pos:end="5:22">CPU</name><argument_list pos:start="5:23" pos:end="5:27">(<argument pos:start="5:24" pos:end="5:26"><expr pos:start="5:24" pos:end="5:26"><name pos:start="5:24" pos:end="5:26">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">PowerPCCPU</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">cpu</name> <init pos:start="7:21" pos:end="7:38">= <expr pos:start="7:23" pos:end="7:38"><call pos:start="7:23" pos:end="7:38"><name pos:start="7:23" pos:end="7:33">POWERPC_CPU</name><argument_list pos:start="7:34" pos:end="7:38">(<argument pos:start="7:35" pos:end="7:37"><expr pos:start="7:35" pos:end="7:37"><name pos:start="7:35" pos:end="7:37">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:54"><decl pos:start="9:5" pos:end="9:53"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">PowerPCCPUClass</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:24">pcc</name> <init pos:start="9:26" pos:end="9:53">= <expr pos:start="9:28" pos:end="9:53"><call pos:start="9:28" pos:end="9:53"><name pos:start="9:28" pos:end="9:48">POWERPC_CPU_GET_CLASS</name><argument_list pos:start="9:49" pos:end="9:53">(<argument pos:start="9:50" pos:end="9:52"><expr pos:start="9:50" pos:end="9:52"><name pos:start="9:50" pos:end="9:52">cpu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:32"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">CPUPPCState</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:20">env</name> <init pos:start="11:22" pos:end="11:32">= <expr pos:start="11:24" pos:end="11:32"><operator pos:start="11:24" pos:end="11:24">&amp;</operator><name pos:start="11:25" pos:end="11:32"><name pos:start="11:25" pos:end="11:27">cpu</name><operator pos:start="11:28" pos:end="11:29">-&gt;</operator><name pos:start="11:30" pos:end="11:32">env</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:22"><expr pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:6">cs</name><operator pos:start="15:7" pos:end="15:8">-&gt;</operator><name pos:start="15:9" pos:end="15:15">env_ptr</name></name> <operator pos:start="15:17" pos:end="15:17">=</operator> <name pos:start="15:19" pos:end="15:21">env</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:37"><expr pos:start="17:5" pos:end="17:36"><call pos:start="17:5" pos:end="17:36"><name pos:start="17:5" pos:end="17:17">cpu_exec_init</name><argument_list pos:start="17:18" pos:end="17:36">(<argument pos:start="17:19" pos:end="17:21"><expr pos:start="17:19" pos:end="17:21"><name pos:start="17:19" pos:end="17:21">env</name></expr></argument>, <argument pos:start="17:24" pos:end="17:35"><expr pos:start="17:24" pos:end="17:35"><operator pos:start="17:24" pos:end="17:24">&amp;</operator><name pos:start="17:25" pos:end="17:35">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:35"><expr pos:start="19:5" pos:end="19:34"><name pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:7">cpu</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:18">cpu_dt_id</name></name> <operator pos:start="19:20" pos:end="19:20">=</operator> <name pos:start="19:22" pos:end="19:34"><name pos:start="19:22" pos:end="19:23">cs</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:34">cpu_index</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:34"><expr pos:start="23:5" pos:end="23:33"><name pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:7">env</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:17">msr_mask</name></name> <operator pos:start="23:19" pos:end="23:19">=</operator> <name pos:start="23:21" pos:end="23:33"><name pos:start="23:21" pos:end="23:23">pcc</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:33">msr_mask</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:36"><expr pos:start="25:5" pos:end="25:35"><name pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:7">env</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:18">mmu_model</name></name> <operator pos:start="25:20" pos:end="25:20">=</operator> <name pos:start="25:22" pos:end="25:35"><name pos:start="25:22" pos:end="25:24">pcc</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:35">mmu_model</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:38"><expr pos:start="27:5" pos:end="27:37"><name pos:start="27:5" pos:end="27:19"><name pos:start="27:5" pos:end="27:7">env</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:19">excp_model</name></name> <operator pos:start="27:21" pos:end="27:21">=</operator> <name pos:start="27:23" pos:end="27:37"><name pos:start="27:23" pos:end="27:25">pcc</name><operator pos:start="27:26" pos:end="27:27">-&gt;</operator><name pos:start="27:28" pos:end="27:37">excp_model</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:36"><expr pos:start="29:5" pos:end="29:35"><name pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:7">env</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:18">bus_model</name></name> <operator pos:start="29:20" pos:end="29:20">=</operator> <name pos:start="29:22" pos:end="29:35"><name pos:start="29:22" pos:end="29:24">pcc</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:35">bus_model</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:40"><expr pos:start="31:5" pos:end="31:39"><name pos:start="31:5" pos:end="31:20"><name pos:start="31:5" pos:end="31:7">env</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:20">insns_flags</name></name> <operator pos:start="31:22" pos:end="31:22">=</operator> <name pos:start="31:24" pos:end="31:39"><name pos:start="31:24" pos:end="31:26">pcc</name><operator pos:start="31:27" pos:end="31:28">-&gt;</operator><name pos:start="31:29" pos:end="31:39">insns_flags</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:42"><expr pos:start="33:5" pos:end="33:41"><name pos:start="33:5" pos:end="33:21"><name pos:start="33:5" pos:end="33:7">env</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:21">insns_flags2</name></name> <operator pos:start="33:23" pos:end="33:23">=</operator> <name pos:start="33:25" pos:end="33:41"><name pos:start="33:25" pos:end="33:27">pcc</name><operator pos:start="33:28" pos:end="33:29">-&gt;</operator><name pos:start="33:30" pos:end="33:41">insns_flags2</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:28"><expr pos:start="35:5" pos:end="35:27"><name pos:start="35:5" pos:end="35:14"><name pos:start="35:5" pos:end="35:7">env</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:14">flags</name></name> <operator pos:start="35:16" pos:end="35:16">=</operator> <name pos:start="35:18" pos:end="35:27"><name pos:start="35:18" pos:end="35:20">pcc</name><operator pos:start="35:21" pos:end="35:22">-&gt;</operator><name pos:start="35:23" pos:end="35:27">flags</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:34"><expr pos:start="37:5" pos:end="37:33"><name pos:start="37:5" pos:end="37:17"><name pos:start="37:5" pos:end="37:7">env</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:17">bfd_mach</name></name> <operator pos:start="37:19" pos:end="37:19">=</operator> <name pos:start="37:21" pos:end="37:33"><name pos:start="37:21" pos:end="37:23">pcc</name><operator pos:start="37:24" pos:end="37:25">-&gt;</operator><name pos:start="37:26" pos:end="37:33">bfd_mach</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="44:0"><expr pos:start="39:5" pos:end="39:35"><name pos:start="39:5" pos:end="39:18"><name pos:start="39:5" pos:end="39:7">env</name><operator pos:start="39:8" pos:end="39:9">-&gt;</operator><name pos:start="39:10" pos:end="39:18">check_pow</name></name> <operator pos:start="39:20" pos:end="39:20">=</operator> <name pos:start="39:22" pos:end="39:35"><name pos:start="39:22" pos:end="39:24">pcc</name><operator pos:start="39:25" pos:end="39:26">-&gt;</operator><name pos:start="39:27" pos:end="39:35">check_pow</name></name></expr>;</expr_stmt>



<cpp:if pos:start="43:1" pos:end="43:25">#<cpp:directive pos:start="43:2" pos:end="43:3">if</cpp:directive> <expr pos:start="43:5" pos:end="43:25"><call pos:start="43:5" pos:end="43:25"><name pos:start="43:5" pos:end="43:11">defined</name><argument_list pos:start="43:12" pos:end="43:25">(<argument pos:start="43:13" pos:end="43:24"><expr pos:start="43:13" pos:end="43:24"><name pos:start="43:13" pos:end="43:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <if_stmt pos:start="45:5" pos:end="82:0"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:17">(<expr pos:start="45:9" pos:end="45:16"><name pos:start="45:9" pos:end="45:16"><name pos:start="45:9" pos:end="45:11">pcc</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:16">sps</name></name></expr>)</condition> <block pos:start="45:19" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:29">

        <expr_stmt pos:start="47:9" pos:end="47:29"><expr pos:start="47:9" pos:end="47:28"><name pos:start="47:9" pos:end="47:16"><name pos:start="47:9" pos:end="47:11">env</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:16">sps</name></name> <operator pos:start="47:18" pos:end="47:18">=</operator> <operator pos:start="47:20" pos:end="47:20">*</operator><name pos:start="47:21" pos:end="47:28"><name pos:start="47:21" pos:end="47:23">pcc</name><operator pos:start="47:24" pos:end="47:25">-&gt;</operator><name pos:start="47:26" pos:end="47:28">sps</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="49:7" pos:end="82:0">else if <condition pos:start="49:15" pos:end="49:47">(<expr pos:start="49:16" pos:end="49:46"><name pos:start="49:16" pos:end="49:29"><name pos:start="49:16" pos:end="49:18">env</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:29">mmu_model</name></name> <operator pos:start="49:31" pos:end="49:31">&amp;</operator> <name pos:start="49:33" pos:end="49:46">POWERPC_MMU_64</name></expr>)</condition> <block pos:start="49:49" pos:end="82:0">{<block_content pos:start="53:9" pos:end="77:26">

        <comment type="block" pos:start="51:9" pos:end="51:44">/* Use default sets of page sizes */</comment>

        <decl_stmt pos:start="53:9" pos:end="75:10"><decl pos:start="53:9" pos:end="75:9"><type pos:start="53:9" pos:end="53:50"><specifier pos:start="53:9" pos:end="53:14">static</specifier> <specifier pos:start="53:16" pos:end="53:20">const</specifier> <name pos:start="53:22" pos:end="53:50"><name pos:start="53:22" pos:end="53:27">struct</name> <name pos:start="53:29" pos:end="53:50">ppc_segment_page_sizes</name></name></type> <name pos:start="53:52" pos:end="53:57">defsps</name> <init pos:start="53:59" pos:end="75:9">= <expr pos:start="53:61" pos:end="75:9"><block pos:start="53:61" pos:end="75:9">{

            <expr pos:start="55:13" pos:end="73:13"><operator pos:start="55:13" pos:end="55:13">.</operator><name pos:start="55:14" pos:end="55:16">sps</name> <operator pos:start="55:18" pos:end="55:18">=</operator> <block pos:start="55:20" pos:end="73:13">{

                <expr pos:start="57:17" pos:end="63:17"><block pos:start="57:17" pos:end="63:17">{ <expr pos:start="57:19" pos:end="57:34"><operator pos:start="57:19" pos:end="57:19">.</operator><name pos:start="57:20" pos:end="57:29">page_shift</name> <operator pos:start="57:31" pos:end="57:31">=</operator> <literal type="number" pos:start="57:33" pos:end="57:34">12</literal></expr>, <comment type="block" pos:start="57:37" pos:end="57:44">/* 4K */</comment>

                  <expr pos:start="59:19" pos:end="59:30"><operator pos:start="59:19" pos:end="59:19">.</operator><name pos:start="59:20" pos:end="59:26">slb_enc</name> <operator pos:start="59:28" pos:end="59:28">=</operator> <literal type="number" pos:start="59:30" pos:end="59:30">0</literal></expr>,

                  <expr pos:start="61:19" pos:end="61:63"><operator pos:start="61:19" pos:end="61:19">.</operator><name pos:start="61:20" pos:end="61:22">enc</name> <operator pos:start="61:24" pos:end="61:24">=</operator> <block pos:start="61:26" pos:end="61:63">{ <expr pos:start="61:28" pos:end="61:61"><block pos:start="61:28" pos:end="61:61">{ <expr pos:start="61:30" pos:end="61:45"><operator pos:start="61:30" pos:end="61:30">.</operator><name pos:start="61:31" pos:end="61:40">page_shift</name> <operator pos:start="61:42" pos:end="61:42">=</operator> <literal type="number" pos:start="61:44" pos:end="61:45">12</literal></expr>, <expr pos:start="61:48" pos:end="61:59"><operator pos:start="61:48" pos:end="61:48">.</operator><name pos:start="61:49" pos:end="61:55">pte_enc</name> <operator pos:start="61:57" pos:end="61:57">=</operator> <literal type="number" pos:start="61:59" pos:end="61:59">0</literal></expr> }</block></expr> }</block></expr>

                }</block></expr>,

                <expr pos:start="65:17" pos:end="71:17"><block pos:start="65:17" pos:end="71:17">{ <expr pos:start="65:19" pos:end="65:34"><operator pos:start="65:19" pos:end="65:19">.</operator><name pos:start="65:20" pos:end="65:29">page_shift</name> <operator pos:start="65:31" pos:end="65:31">=</operator> <literal type="number" pos:start="65:33" pos:end="65:34">24</literal></expr>, <comment type="block" pos:start="65:37" pos:end="65:45">/* 16M */</comment>

                  <expr pos:start="67:19" pos:end="67:34"><operator pos:start="67:19" pos:end="67:19">.</operator><name pos:start="67:20" pos:end="67:26">slb_enc</name> <operator pos:start="67:28" pos:end="67:28">=</operator> <literal type="number" pos:start="67:30" pos:end="67:34">0x100</literal></expr>,

                  <expr pos:start="69:19" pos:end="69:63"><operator pos:start="69:19" pos:end="69:19">.</operator><name pos:start="69:20" pos:end="69:22">enc</name> <operator pos:start="69:24" pos:end="69:24">=</operator> <block pos:start="69:26" pos:end="69:63">{ <expr pos:start="69:28" pos:end="69:61"><block pos:start="69:28" pos:end="69:61">{ <expr pos:start="69:30" pos:end="69:45"><operator pos:start="69:30" pos:end="69:30">.</operator><name pos:start="69:31" pos:end="69:40">page_shift</name> <operator pos:start="69:42" pos:end="69:42">=</operator> <literal type="number" pos:start="69:44" pos:end="69:45">24</literal></expr>, <expr pos:start="69:48" pos:end="69:59"><operator pos:start="69:48" pos:end="69:48">.</operator><name pos:start="69:49" pos:end="69:55">pte_enc</name> <operator pos:start="69:57" pos:end="69:57">=</operator> <literal type="number" pos:start="69:59" pos:end="69:59">0</literal></expr> }</block></expr> }</block></expr>

                }</block></expr>,

            }</block></expr>,

        }</block></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:26"><expr pos:start="77:9" pos:end="77:25"><name pos:start="77:9" pos:end="77:16"><name pos:start="77:9" pos:end="77:11">env</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:16">sps</name></name> <operator pos:start="77:18" pos:end="77:18">=</operator> <name pos:start="77:20" pos:end="77:25">defsps</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="81:1" pos:end="81:6">#<cpp:directive pos:start="81:2" pos:end="81:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="81:8" pos:end="81:34">/* defined(TARGET_PPC64) */</comment>



    <if_stmt pos:start="85:5" pos:end="89:5"><if pos:start="85:5" pos:end="89:5">if <condition pos:start="85:8" pos:end="85:22">(<expr pos:start="85:9" pos:end="85:21"><call pos:start="85:9" pos:end="85:21"><name pos:start="85:9" pos:end="85:19">tcg_enabled</name><argument_list pos:start="85:20" pos:end="85:21">()</argument_list></call></expr>)</condition> <block pos:start="85:24" pos:end="89:5">{<block_content pos:start="87:9" pos:end="87:29">

        <expr_stmt pos:start="87:9" pos:end="87:29"><expr pos:start="87:9" pos:end="87:28"><call pos:start="87:9" pos:end="87:28"><name pos:start="87:9" pos:end="87:26">ppc_translate_init</name><argument_list pos:start="87:27" pos:end="87:28">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
