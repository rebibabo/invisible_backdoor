<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4485.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">curl_multi_timeout_do</name><parameter_list pos:start="1:34" pos:end="1:44">(<parameter pos:start="1:35" pos:end="1:43"><decl pos:start="1:35" pos:end="1:43"><type pos:start="1:35" pos:end="1:40"><name pos:start="1:35" pos:end="1:38">void</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">arg</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="7:5" pos:end="36:0">

<cpp:ifdef pos:start="5:1" pos:end="5:31">#<cpp:directive pos:start="5:2" pos:end="5:6">ifdef</cpp:directive> <name pos:start="5:8" pos:end="5:31">NEED_CURL_TIMER_CALLBACK</name></cpp:ifdef>

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">BDRVCURLState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:43">= <expr pos:start="7:24" pos:end="7:43"><operator pos:start="7:24" pos:end="7:24">(</operator><name pos:start="7:25" pos:end="7:37">BDRVCURLState</name> <operator pos:start="7:39" pos:end="7:39">*</operator><operator pos:start="7:40" pos:end="7:40">)</operator><name pos:start="7:41" pos:end="7:43">arg</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:15">running</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:18">(<expr pos:start="13:9" pos:end="13:17"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:17"><name pos:start="13:10" pos:end="13:10">s</name><operator pos:start="13:11" pos:end="13:12">-&gt;</operator><name pos:start="13:13" pos:end="13:17">multi</name></name></expr>)</condition> <block pos:start="13:20" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:15">

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:40"><expr pos:start="21:5" pos:end="21:39"><call pos:start="21:5" pos:end="21:39"><name pos:start="21:5" pos:end="21:23">aio_context_acquire</name><argument_list pos:start="21:24" pos:end="21:39">(<argument pos:start="21:25" pos:end="21:38"><expr pos:start="21:25" pos:end="21:38"><name pos:start="21:25" pos:end="21:38"><name pos:start="21:25" pos:end="21:25">s</name><operator pos:start="21:26" pos:end="21:27">-&gt;</operator><name pos:start="21:28" pos:end="21:38">aio_context</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:73"><expr pos:start="23:5" pos:end="23:72"><call pos:start="23:5" pos:end="23:72"><name pos:start="23:5" pos:end="23:28">curl_multi_socket_action</name><argument_list pos:start="23:29" pos:end="23:72">(<argument pos:start="23:30" pos:end="23:37"><expr pos:start="23:30" pos:end="23:37"><name pos:start="23:30" pos:end="23:37"><name pos:start="23:30" pos:end="23:30">s</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name pos:start="23:33" pos:end="23:37">multi</name></name></expr></argument>, <argument pos:start="23:40" pos:end="23:58"><expr pos:start="23:40" pos:end="23:58"><name pos:start="23:40" pos:end="23:58">CURL_SOCKET_TIMEOUT</name></expr></argument>, <argument pos:start="23:61" pos:end="23:61"><expr pos:start="23:61" pos:end="23:61"><literal type="number" pos:start="23:61" pos:end="23:61">0</literal></expr></argument>, <argument pos:start="23:64" pos:end="23:71"><expr pos:start="23:64" pos:end="23:71"><operator pos:start="23:64" pos:end="23:64">&amp;</operator><name pos:start="23:65" pos:end="23:71">running</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:35"><expr pos:start="27:5" pos:end="27:34"><call pos:start="27:5" pos:end="27:34"><name pos:start="27:5" pos:end="27:31">curl_multi_check_completion</name><argument_list pos:start="27:32" pos:end="27:34">(<argument pos:start="27:33" pos:end="27:33"><expr pos:start="27:33" pos:end="27:33"><name pos:start="27:33" pos:end="27:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="32:0"><expr pos:start="29:5" pos:end="29:39"><call pos:start="29:5" pos:end="29:39"><name pos:start="29:5" pos:end="29:23">aio_context_release</name><argument_list pos:start="29:24" pos:end="29:39">(<argument pos:start="29:25" pos:end="29:38"><expr pos:start="29:25" pos:end="29:38"><name pos:start="29:25" pos:end="29:38"><name pos:start="29:25" pos:end="29:25">s</name><operator pos:start="29:26" pos:end="29:27">-&gt;</operator><name pos:start="29:28" pos:end="29:38">aio_context</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="31:1" pos:end="31:5">#<cpp:directive pos:start="31:2" pos:end="31:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="33:5" pos:end="36:0"><expr pos:start="33:5" pos:end="33:11"><call pos:start="33:5" pos:end="33:11"><name pos:start="33:5" pos:end="33:9">abort</name><argument_list pos:start="33:10" pos:end="33:11">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="35:1" pos:end="35:6">#<cpp:directive pos:start="35:2" pos:end="35:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
