<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10001.c" pos:tabs="8"><function pos:start="1:1" pos:end="15:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:21">bdrv_key_required</name><parameter_list pos:start="1:22" pos:end="1:43">(<parameter pos:start="1:23" pos:end="1:42"><decl pos:start="1:23" pos:end="1:42"><type pos:start="1:23" pos:end="1:40"><name pos:start="1:23" pos:end="1:38">BlockDriverState</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:42">bs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="15:1">{<block_content pos:start="5:5" pos:end="13:45">

    <decl_stmt pos:start="5:5" pos:end="5:50"><decl pos:start="5:5" pos:end="5:49"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">BlockDriverState</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:32">backing_hd</name> <init pos:start="5:34" pos:end="5:49">= <expr pos:start="5:36" pos:end="5:49"><name pos:start="5:36" pos:end="5:49"><name pos:start="5:36" pos:end="5:37">bs</name><operator pos:start="5:38" pos:end="5:39">-&gt;</operator><name pos:start="5:40" pos:end="5:49">backing_hd</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:17"><if pos:start="9:5" pos:end="11:17">if <condition pos:start="9:8" pos:end="9:70">(<expr pos:start="9:9" pos:end="9:69"><name pos:start="9:9" pos:end="9:18">backing_hd</name> <operator pos:start="9:20" pos:end="9:21">&amp;&amp;</operator> <name pos:start="9:23" pos:end="9:43"><name pos:start="9:23" pos:end="9:32">backing_hd</name><operator pos:start="9:33" pos:end="9:34">-&gt;</operator><name pos:start="9:35" pos:end="9:43">encrypted</name></name> <operator pos:start="9:45" pos:end="9:46">&amp;&amp;</operator> <operator pos:start="9:48" pos:end="9:48">!</operator><name pos:start="9:49" pos:end="9:69"><name pos:start="9:49" pos:end="9:58">backing_hd</name><operator pos:start="9:59" pos:end="9:60">-&gt;</operator><name pos:start="9:61" pos:end="9:69">valid_key</name></name></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:17"><block_content pos:start="11:9" pos:end="11:17">

        <return pos:start="11:9" pos:end="11:17">return <expr pos:start="11:16" pos:end="11:16"><literal type="number" pos:start="11:16" pos:end="11:16">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <return pos:start="13:5" pos:end="13:45">return <expr pos:start="13:12" pos:end="13:44"><operator pos:start="13:12" pos:end="13:12">(</operator><name pos:start="13:13" pos:end="13:25"><name pos:start="13:13" pos:end="13:14">bs</name><operator pos:start="13:15" pos:end="13:16">-&gt;</operator><name pos:start="13:17" pos:end="13:25">encrypted</name></name> <operator pos:start="13:27" pos:end="13:28">&amp;&amp;</operator> <operator pos:start="13:30" pos:end="13:30">!</operator><name pos:start="13:31" pos:end="13:43"><name pos:start="13:31" pos:end="13:32">bs</name><operator pos:start="13:33" pos:end="13:34">-&gt;</operator><name pos:start="13:35" pos:end="13:43">valid_key</name></name><operator pos:start="13:44" pos:end="13:44">)</operator></expr>;</return>

</block_content>}</block></function>
</unit>
