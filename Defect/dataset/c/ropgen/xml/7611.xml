<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7611.c" pos:tabs="8"><function pos:start="1:1" pos:end="159:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:12">Process</name><parameter_list pos:start="1:13" pos:end="1:103">(<parameter pos:start="1:14" pos:end="1:22"><decl pos:start="1:14" pos:end="1:22"><type pos:start="1:14" pos:end="1:22"><name pos:start="1:14" pos:end="1:17">void</name> <modifier pos:start="1:19" pos:end="1:19">*</modifier></type><name pos:start="1:20" pos:end="1:22">ctx</name></decl></parameter>, <parameter pos:start="1:25" pos:end="1:42"><decl pos:start="1:25" pos:end="1:42"><type pos:start="1:25" pos:end="1:42"><name pos:start="1:25" pos:end="1:33">AVPicture</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:42">picture</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:68"><decl pos:start="1:45" pos:end="1:68"><type pos:start="1:45" pos:end="1:68"><name pos:start="1:45" pos:end="1:60"><name pos:start="1:45" pos:end="1:48">enum</name> <name pos:start="1:50" pos:end="1:60">PixelFormat</name></name></type> <name pos:start="1:62" pos:end="1:68">pix_fmt</name></decl></parameter>, <parameter pos:start="1:71" pos:end="1:79"><decl pos:start="1:71" pos:end="1:79"><type pos:start="1:71" pos:end="1:79"><name pos:start="1:71" pos:end="1:73">int</name></type> <name pos:start="1:75" pos:end="1:79">width</name></decl></parameter>, <parameter pos:start="1:82" pos:end="1:91"><decl pos:start="1:82" pos:end="1:91"><type pos:start="1:82" pos:end="1:91"><name pos:start="1:82" pos:end="1:84">int</name></type> <name pos:start="1:86" pos:end="1:91">height</name></decl></parameter>, <parameter pos:start="1:94" pos:end="1:102"><decl pos:start="1:94" pos:end="1:102"><type pos:start="1:94" pos:end="1:102"><name pos:start="1:94" pos:end="1:98">INT64</name></type> <name pos:start="1:100" pos:end="1:102">pts</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="159:1">{<block_content pos:start="5:5" pos:end="157:5">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">ContextInfo</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">ci</name> <init pos:start="5:21" pos:end="5:41">= <expr pos:start="5:23" pos:end="5:41"><operator pos:start="5:23" pos:end="5:23">(</operator><name pos:start="5:24" pos:end="5:34">ContextInfo</name> <operator pos:start="5:36" pos:end="5:36">*</operator><operator pos:start="5:37" pos:end="5:37">)</operator> <name pos:start="5:39" pos:end="5:41">ctx</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:13">AVPicture</name></type> <name pos:start="7:15" pos:end="7:22">picture1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:15">Imlib_Image</name></type> <name pos:start="9:17" pos:end="9:21">image</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:10">DATA32</name> <modifier pos:start="11:12" pos:end="11:12">*</modifier></type><name pos:start="11:13" pos:end="11:16">data</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:48"><expr pos:start="15:5" pos:end="15:47"><name pos:start="15:5" pos:end="15:9">image</name> <operator pos:start="15:11" pos:end="15:11">=</operator> <call pos:start="15:13" pos:end="15:47"><name pos:start="15:13" pos:end="15:28">get_cached_image</name><argument_list pos:start="15:29" pos:end="15:47">(<argument pos:start="15:30" pos:end="15:31"><expr pos:start="15:30" pos:end="15:31"><name pos:start="15:30" pos:end="15:31">ci</name></expr></argument>, <argument pos:start="15:34" pos:end="15:38"><expr pos:start="15:34" pos:end="15:38"><name pos:start="15:34" pos:end="15:38">width</name></expr></argument>, <argument pos:start="15:41" pos:end="15:46"><expr pos:start="15:41" pos:end="15:46"><name pos:start="15:41" pos:end="15:46">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:15">(<expr pos:start="19:9" pos:end="19:14"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:14">image</name></expr>)</condition> <block pos:start="19:17" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:51">

        <expr_stmt pos:start="21:9" pos:end="21:50"><expr pos:start="21:9" pos:end="21:49"><name pos:start="21:9" pos:end="21:13">image</name> <operator pos:start="21:15" pos:end="21:15">=</operator> <call pos:start="21:17" pos:end="21:49"><name pos:start="21:17" pos:end="21:34">imlib_create_image</name><argument_list pos:start="21:35" pos:end="21:49">(<argument pos:start="21:36" pos:end="21:40"><expr pos:start="21:36" pos:end="21:40"><name pos:start="21:36" pos:end="21:40">width</name></expr></argument>, <argument pos:start="21:43" pos:end="21:48"><expr pos:start="21:43" pos:end="21:48"><name pos:start="21:43" pos:end="21:48">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:51"><expr pos:start="23:9" pos:end="23:50"><call pos:start="23:9" pos:end="23:50"><name pos:start="23:9" pos:end="23:24">put_cached_image</name><argument_list pos:start="23:25" pos:end="23:50">(<argument pos:start="23:26" pos:end="23:27"><expr pos:start="23:26" pos:end="23:27"><name pos:start="23:26" pos:end="23:27">ci</name></expr></argument>, <argument pos:start="23:30" pos:end="23:34"><expr pos:start="23:30" pos:end="23:34"><name pos:start="23:30" pos:end="23:34">image</name></expr></argument>, <argument pos:start="23:37" pos:end="23:41"><expr pos:start="23:37" pos:end="23:41"><name pos:start="23:37" pos:end="23:41">width</name></expr></argument>, <argument pos:start="23:44" pos:end="23:49"><expr pos:start="23:44" pos:end="23:49"><name pos:start="23:44" pos:end="23:49">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:35"><expr pos:start="29:5" pos:end="29:34"><call pos:start="29:5" pos:end="29:34"><name pos:start="29:5" pos:end="29:27">imlib_context_set_image</name><argument_list pos:start="29:28" pos:end="29:34">(<argument pos:start="29:29" pos:end="29:33"><expr pos:start="29:29" pos:end="29:33"><name pos:start="29:29" pos:end="29:33">image</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:34"><expr pos:start="31:5" pos:end="31:33"><name pos:start="31:5" pos:end="31:8">data</name> <operator pos:start="31:10" pos:end="31:10">=</operator> <call pos:start="31:12" pos:end="31:33"><name pos:start="31:12" pos:end="31:31">imlib_image_get_data</name><argument_list pos:start="31:32" pos:end="31:33">()</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="51:5"><if pos:start="35:5" pos:end="47:5">if <condition pos:start="35:8" pos:end="35:34">(<expr pos:start="35:9" pos:end="35:33"><name pos:start="35:9" pos:end="35:15">pix_fmt</name> <operator pos:start="35:17" pos:end="35:18">!=</operator> <name pos:start="35:20" pos:end="35:33">PIX_FMT_RGBA32</name></expr>)</condition> <block pos:start="35:36" pos:end="47:5">{<block_content pos:start="37:9" pos:end="45:9">

        <expr_stmt pos:start="37:9" pos:end="37:81"><expr pos:start="37:9" pos:end="37:80"><call pos:start="37:9" pos:end="37:80"><name pos:start="37:9" pos:end="37:22">avpicture_fill</name><argument_list pos:start="37:23" pos:end="37:80">(<argument pos:start="37:24" pos:end="37:32"><expr pos:start="37:24" pos:end="37:32"><operator pos:start="37:24" pos:end="37:24">&amp;</operator><name pos:start="37:25" pos:end="37:32">picture1</name></expr></argument>, <argument pos:start="37:35" pos:end="37:48"><expr pos:start="37:35" pos:end="37:48"><operator pos:start="37:35" pos:end="37:35">(</operator><name pos:start="37:36" pos:end="37:40">UINT8</name> <operator pos:start="37:42" pos:end="37:42">*</operator><operator pos:start="37:43" pos:end="37:43">)</operator> <name pos:start="37:45" pos:end="37:48">data</name></expr></argument>, <argument pos:start="37:51" pos:end="37:64"><expr pos:start="37:51" pos:end="37:64"><name pos:start="37:51" pos:end="37:64">PIX_FMT_RGBA32</name></expr></argument>, <argument pos:start="37:67" pos:end="37:71"><expr pos:start="37:67" pos:end="37:71"><name pos:start="37:67" pos:end="37:71">width</name></expr></argument>, <argument pos:start="37:74" pos:end="37:79"><expr pos:start="37:74" pos:end="37:79"><name pos:start="37:74" pos:end="37:79">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="45:9"><if pos:start="39:9" pos:end="45:9">if <condition pos:start="39:12" pos:end="41:61">(<expr pos:start="39:13" pos:end="41:60"><call pos:start="39:13" pos:end="41:56"><name pos:start="39:13" pos:end="39:23">img_convert</name><argument_list pos:start="39:24" pos:end="41:56">(<argument pos:start="39:25" pos:end="39:33"><expr pos:start="39:25" pos:end="39:33"><operator pos:start="39:25" pos:end="39:25">&amp;</operator><name pos:start="39:26" pos:end="39:33">picture1</name></expr></argument>, <argument pos:start="39:36" pos:end="39:49"><expr pos:start="39:36" pos:end="39:49"><name pos:start="39:36" pos:end="39:49">PIX_FMT_RGBA32</name></expr></argument>, 

                        <argument pos:start="41:25" pos:end="41:31"><expr pos:start="41:25" pos:end="41:31"><name pos:start="41:25" pos:end="41:31">picture</name></expr></argument>, <argument pos:start="41:34" pos:end="41:40"><expr pos:start="41:34" pos:end="41:40"><name pos:start="41:34" pos:end="41:40">pix_fmt</name></expr></argument>, <argument pos:start="41:43" pos:end="41:47"><expr pos:start="41:43" pos:end="41:47"><name pos:start="41:43" pos:end="41:47">width</name></expr></argument>, <argument pos:start="41:50" pos:end="41:55"><expr pos:start="41:50" pos:end="41:55"><name pos:start="41:50" pos:end="41:55">height</name></expr></argument>)</argument_list></call> <operator pos:start="41:58" pos:end="41:58">&lt;</operator> <literal type="number" pos:start="41:60" pos:end="41:60">0</literal></expr>)</condition> <block pos:start="41:63" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:22">

            <goto pos:start="43:13" pos:end="43:22">goto <name pos:start="43:18" pos:end="43:21">done</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="47:7" pos:end="51:5">else <block pos:start="47:12" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:19">

        <expr_stmt pos:start="49:9" pos:end="49:19"><expr pos:start="49:9" pos:end="49:18"><call pos:start="49:9" pos:end="49:18"><name pos:start="49:9" pos:end="49:16">av_abort</name><argument_list pos:start="49:17" pos:end="49:18">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:33"><expr pos:start="55:5" pos:end="55:32"><call pos:start="55:5" pos:end="55:32"><name pos:start="55:5" pos:end="55:29">imlib_image_set_has_alpha</name><argument_list pos:start="55:30" pos:end="55:32">(<argument pos:start="55:31" pos:end="55:31"><expr pos:start="55:31" pos:end="55:31"><literal type="number" pos:start="55:31" pos:end="55:31">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <block pos:start="59:5" pos:end="139:5">{<block_content pos:start="61:9" pos:end="137:9">

        <decl_stmt pos:start="61:9" pos:end="61:31"><decl pos:start="61:9" pos:end="61:15"><type pos:start="61:9" pos:end="61:11"><name pos:start="61:9" pos:end="61:11">int</name></type> <name pos:start="61:13" pos:end="61:15">wid</name></decl>, <decl pos:start="61:18" pos:end="61:20"><type ref="prev" pos:start="61:9" pos:end="61:11"/><name pos:start="61:18" pos:end="61:20">hig</name></decl>, <decl pos:start="61:23" pos:end="61:25"><type ref="prev" pos:start="61:9" pos:end="61:11"/><name pos:start="61:23" pos:end="61:25">h_a</name></decl>, <decl pos:start="61:28" pos:end="61:30"><type ref="prev" pos:start="61:9" pos:end="61:11"/><name pos:start="61:28" pos:end="61:30">v_a</name></decl>;</decl_stmt>                                                   

        <decl_stmt pos:start="63:9" pos:end="63:24"><decl pos:start="63:9" pos:end="63:23"><type pos:start="63:9" pos:end="63:12"><name pos:start="63:9" pos:end="63:12">char</name></type> <name pos:start="63:14" pos:end="63:23"><name pos:start="63:14" pos:end="63:17">buff</name><index pos:start="63:18" pos:end="63:23">[<expr pos:start="63:19" pos:end="63:22"><literal type="number" pos:start="63:19" pos:end="63:22">1000</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="65:9" pos:end="65:25"><decl pos:start="65:9" pos:end="65:24"><type pos:start="65:9" pos:end="65:12"><name pos:start="65:9" pos:end="65:12">char</name></type> <name pos:start="65:14" pos:end="65:24"><name pos:start="65:14" pos:end="65:18">tbuff</name><index pos:start="65:19" pos:end="65:24">[<expr pos:start="65:20" pos:end="65:23"><literal type="number" pos:start="65:20" pos:end="65:23">1000</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="67:9" pos:end="67:29"><decl pos:start="67:9" pos:end="67:28"><type pos:start="67:9" pos:end="67:14"><name pos:start="67:9" pos:end="67:12">char</name> <modifier pos:start="67:14" pos:end="67:14">*</modifier></type><name pos:start="67:15" pos:end="67:17">tbp</name> <init pos:start="67:19" pos:end="67:28">= <expr pos:start="67:21" pos:end="67:28"><name pos:start="67:21" pos:end="67:28"><name pos:start="67:21" pos:end="67:22">ci</name><operator pos:start="67:23" pos:end="67:24">-&gt;</operator><name pos:start="67:25" pos:end="67:28">text</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="69:9" pos:end="69:29"><decl pos:start="69:9" pos:end="69:28"><type pos:start="69:9" pos:end="69:14"><name pos:start="69:9" pos:end="69:14">time_t</name></type> <name pos:start="69:16" pos:end="69:18">now</name> <init pos:start="69:20" pos:end="69:28">= <expr pos:start="69:22" pos:end="69:28"><call pos:start="69:22" pos:end="69:28"><name pos:start="69:22" pos:end="69:25">time</name><argument_list pos:start="69:26" pos:end="69:28">(<argument pos:start="69:27" pos:end="69:27"><expr pos:start="69:27" pos:end="69:27"><literal type="number" pos:start="69:27" pos:end="69:27">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="71:9" pos:end="71:20"><decl pos:start="71:9" pos:end="71:15"><type pos:start="71:9" pos:end="71:14"><name pos:start="71:9" pos:end="71:12">char</name> <modifier pos:start="71:14" pos:end="71:14">*</modifier></type><name pos:start="71:15" pos:end="71:15">p</name></decl>, <decl pos:start="71:18" pos:end="71:19"><type ref="prev" pos:start="71:9" pos:end="71:14"><modifier pos:start="71:18" pos:end="71:18">*</modifier></type><name pos:start="71:19" pos:end="71:19">q</name></decl>;</decl_stmt>

        <decl_stmt pos:start="73:9" pos:end="73:17"><decl pos:start="73:9" pos:end="73:13"><type pos:start="73:9" pos:end="73:11"><name pos:start="73:9" pos:end="73:11">int</name></type> <name pos:start="73:13" pos:end="73:13">x</name></decl>, <decl pos:start="73:16" pos:end="73:16"><type ref="prev" pos:start="73:9" pos:end="73:11"/><name pos:start="73:16" pos:end="73:16">y</name></decl>;</decl_stmt>



        <if_stmt pos:start="77:9" pos:end="109:9"><if pos:start="77:9" pos:end="109:9">if <condition pos:start="77:12" pos:end="77:21">(<expr pos:start="77:13" pos:end="77:20"><name pos:start="77:13" pos:end="77:20"><name pos:start="77:13" pos:end="77:14">ci</name><operator pos:start="77:15" pos:end="77:16">-&gt;</operator><name pos:start="77:17" pos:end="77:20">file</name></name></expr>)</condition> <block pos:start="77:23" pos:end="109:9">{<block_content pos:start="79:13" pos:end="107:13">

            <decl_stmt pos:start="79:13" pos:end="79:46"><decl pos:start="79:13" pos:end="79:45"><type pos:start="79:13" pos:end="79:15"><name pos:start="79:13" pos:end="79:15">int</name></type> <name pos:start="79:17" pos:end="79:18">fd</name> <init pos:start="79:20" pos:end="79:45">= <expr pos:start="79:22" pos:end="79:45"><call pos:start="79:22" pos:end="79:45"><name pos:start="79:22" pos:end="79:25">open</name><argument_list pos:start="79:26" pos:end="79:45">(<argument pos:start="79:27" pos:end="79:34"><expr pos:start="79:27" pos:end="79:34"><name pos:start="79:27" pos:end="79:34"><name pos:start="79:27" pos:end="79:28">ci</name><operator pos:start="79:29" pos:end="79:30">-&gt;</operator><name pos:start="79:31" pos:end="79:34">file</name></name></expr></argument>, <argument pos:start="79:37" pos:end="79:44"><expr pos:start="79:37" pos:end="79:44"><name pos:start="79:37" pos:end="79:44">O_RDONLY</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="83:13" pos:end="107:13"><if pos:start="83:13" pos:end="87:13">if <condition pos:start="83:16" pos:end="83:23">(<expr pos:start="83:17" pos:end="83:22"><name pos:start="83:17" pos:end="83:18">fd</name> <operator pos:start="83:20" pos:end="83:20">&lt;</operator> <literal type="number" pos:start="83:22" pos:end="83:22">0</literal></expr>)</condition> <block pos:start="83:25" pos:end="87:13">{<block_content pos:start="85:17" pos:end="85:41">

                <expr_stmt pos:start="85:17" pos:end="85:41"><expr pos:start="85:17" pos:end="85:40"><name pos:start="85:17" pos:end="85:19">tbp</name> <operator pos:start="85:21" pos:end="85:21">=</operator> <literal type="string" pos:start="85:23" pos:end="85:40">"[File not found]"</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="87:15" pos:end="107:13">else <block pos:start="87:20" pos:end="107:13">{<block_content pos:start="89:17" pos:end="105:26">

                <decl_stmt pos:start="89:17" pos:end="89:59"><decl pos:start="89:17" pos:end="89:58"><type pos:start="89:17" pos:end="89:19"><name pos:start="89:17" pos:end="89:19">int</name></type> <name pos:start="89:21" pos:end="89:21">l</name> <init pos:start="89:23" pos:end="89:58">= <expr pos:start="89:25" pos:end="89:58"><call pos:start="89:25" pos:end="89:58"><name pos:start="89:25" pos:end="89:28">read</name><argument_list pos:start="89:29" pos:end="89:58">(<argument pos:start="89:30" pos:end="89:31"><expr pos:start="89:30" pos:end="89:31"><name pos:start="89:30" pos:end="89:31">fd</name></expr></argument>, <argument pos:start="89:34" pos:end="89:38"><expr pos:start="89:34" pos:end="89:38"><name pos:start="89:34" pos:end="89:38">tbuff</name></expr></argument>, <argument pos:start="89:41" pos:end="89:57"><expr pos:start="89:41" pos:end="89:57"><sizeof pos:start="89:41" pos:end="89:53">sizeof<argument_list pos:start="89:47" pos:end="89:53">(<argument pos:start="89:48" pos:end="89:52"><expr pos:start="89:48" pos:end="89:52"><name pos:start="89:48" pos:end="89:52">tbuff</name></expr></argument>)</argument_list></sizeof> <operator pos:start="89:55" pos:end="89:55">-</operator> <literal type="number" pos:start="89:57" pos:end="89:57">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="93:17" pos:end="103:17"><if pos:start="93:17" pos:end="99:17">if <condition pos:start="93:20" pos:end="93:27">(<expr pos:start="93:21" pos:end="93:26"><name pos:start="93:21" pos:end="93:21">l</name> <operator pos:start="93:23" pos:end="93:24">&gt;=</operator> <literal type="number" pos:start="93:26" pos:end="93:26">0</literal></expr>)</condition> <block pos:start="93:29" pos:end="99:17">{<block_content pos:start="95:21" pos:end="97:32">

                    <expr_stmt pos:start="95:21" pos:end="95:33"><expr pos:start="95:21" pos:end="95:32"><name pos:start="95:21" pos:end="95:28"><name pos:start="95:21" pos:end="95:25">tbuff</name><index pos:start="95:26" pos:end="95:28">[<expr pos:start="95:27" pos:end="95:27"><name pos:start="95:27" pos:end="95:27">l</name></expr>]</index></name> <operator pos:start="95:30" pos:end="95:30">=</operator> <literal type="number" pos:start="95:32" pos:end="95:32">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="97:21" pos:end="97:32"><expr pos:start="97:21" pos:end="97:31"><name pos:start="97:21" pos:end="97:23">tbp</name> <operator pos:start="97:25" pos:end="97:25">=</operator> <name pos:start="97:27" pos:end="97:31">tbuff</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="99:19" pos:end="103:17">else <block pos:start="99:24" pos:end="103:17">{<block_content pos:start="101:21" pos:end="101:40">

                    <expr_stmt pos:start="101:21" pos:end="101:40"><expr pos:start="101:21" pos:end="101:39"><name pos:start="101:21" pos:end="101:23">tbp</name> <operator pos:start="101:25" pos:end="101:25">=</operator> <literal type="string" pos:start="101:27" pos:end="101:39">"[I/O Error]"</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="105:17" pos:end="105:26"><expr pos:start="105:17" pos:end="105:25"><call pos:start="105:17" pos:end="105:25"><name pos:start="105:17" pos:end="105:21">close</name><argument_list pos:start="105:22" pos:end="105:25">(<argument pos:start="105:23" pos:end="105:24"><expr pos:start="105:23" pos:end="105:24"><name pos:start="105:23" pos:end="105:24">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="113:9" pos:end="113:59"><expr pos:start="113:9" pos:end="113:58"><call pos:start="113:9" pos:end="113:58"><name pos:start="113:9" pos:end="113:16">strftime</name><argument_list pos:start="113:17" pos:end="113:58">(<argument pos:start="113:18" pos:end="113:21"><expr pos:start="113:18" pos:end="113:21"><name pos:start="113:18" pos:end="113:21">buff</name></expr></argument>, <argument pos:start="113:24" pos:end="113:35"><expr pos:start="113:24" pos:end="113:35"><sizeof pos:start="113:24" pos:end="113:35">sizeof<argument_list pos:start="113:30" pos:end="113:35">(<argument pos:start="113:31" pos:end="113:34"><expr pos:start="113:31" pos:end="113:34"><name pos:start="113:31" pos:end="113:34">buff</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="113:38" pos:end="113:40"><expr pos:start="113:38" pos:end="113:40"><name pos:start="113:38" pos:end="113:40">tbp</name></expr></argument>, <argument pos:start="113:43" pos:end="113:57"><expr pos:start="113:43" pos:end="113:57"><call pos:start="113:43" pos:end="113:57"><name pos:start="113:43" pos:end="113:51">localtime</name><argument_list pos:start="113:52" pos:end="113:57">(<argument pos:start="113:53" pos:end="113:56"><expr pos:start="113:53" pos:end="113:56"><operator pos:start="113:53" pos:end="113:53">&amp;</operator><name pos:start="113:54" pos:end="113:56">now</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="117:9" pos:end="117:18"><expr pos:start="117:9" pos:end="117:17"><name pos:start="117:9" pos:end="117:9">x</name> <operator pos:start="117:11" pos:end="117:11">=</operator> <name pos:start="117:13" pos:end="117:17"><name pos:start="117:13" pos:end="117:14">ci</name><operator pos:start="117:15" pos:end="117:16">-&gt;</operator><name pos:start="117:17" pos:end="117:17">x</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:18"><expr pos:start="119:9" pos:end="119:17"><name pos:start="119:9" pos:end="119:9">y</name> <operator pos:start="119:11" pos:end="119:11">=</operator> <name pos:start="119:13" pos:end="119:17"><name pos:start="119:13" pos:end="119:14">ci</name><operator pos:start="119:15" pos:end="119:16">-&gt;</operator><name pos:start="119:17" pos:end="119:17">y</name></name></expr>;</expr_stmt>



        <for pos:start="123:9" pos:end="137:9">for <control pos:start="123:13" pos:end="123:32">(<init pos:start="123:14" pos:end="123:22"><expr pos:start="123:14" pos:end="123:21"><name pos:start="123:14" pos:end="123:14">p</name> <operator pos:start="123:16" pos:end="123:16">=</operator> <name pos:start="123:18" pos:end="123:21">buff</name></expr>;</init> <condition pos:start="123:24" pos:end="123:25"><expr pos:start="123:24" pos:end="123:24"><name pos:start="123:24" pos:end="123:24">p</name></expr>;</condition> <incr pos:start="123:27" pos:end="123:31"><expr pos:start="123:27" pos:end="123:31"><name pos:start="123:27" pos:end="123:27">p</name> <operator pos:start="123:29" pos:end="123:29">=</operator> <name pos:start="123:31" pos:end="123:31">q</name></expr></incr>)</control> <block pos:start="123:34" pos:end="137:9">{<block_content pos:start="125:13" pos:end="135:21">

            <expr_stmt pos:start="125:13" pos:end="125:32"><expr pos:start="125:13" pos:end="125:31"><name pos:start="125:13" pos:end="125:13">q</name> <operator pos:start="125:15" pos:end="125:15">=</operator> <call pos:start="125:17" pos:end="125:31"><name pos:start="125:17" pos:end="125:22">strchr</name><argument_list pos:start="125:23" pos:end="125:31">(<argument pos:start="125:24" pos:end="125:24"><expr pos:start="125:24" pos:end="125:24"><name pos:start="125:24" pos:end="125:24">p</name></expr></argument>, <argument pos:start="125:27" pos:end="125:30"><expr pos:start="125:27" pos:end="125:30"><literal type="char" pos:start="125:27" pos:end="125:30">'\n'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="127:13" pos:end="129:25"><if pos:start="127:13" pos:end="129:25">if <condition pos:start="127:16" pos:end="127:18">(<expr pos:start="127:17" pos:end="127:17"><name pos:start="127:17" pos:end="127:17">q</name></expr>)</condition><block type="pseudo" pos:start="129:17" pos:end="129:25"><block_content pos:start="129:17" pos:end="129:25">

                <expr_stmt pos:start="129:17" pos:end="129:25"><expr pos:start="129:17" pos:end="129:24"><operator pos:start="129:17" pos:end="129:17">*</operator><name pos:start="129:18" pos:end="129:18">q</name><operator pos:start="129:19" pos:end="129:20">++</operator> <operator pos:start="129:22" pos:end="129:22">=</operator> <literal type="number" pos:start="129:24" pos:end="129:24">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="133:13" pos:end="133:81"><expr pos:start="133:13" pos:end="133:80"><call pos:start="133:13" pos:end="133:80"><name pos:start="133:13" pos:end="133:47">imlib_text_draw_with_return_metrics</name><argument_list pos:start="133:48" pos:end="133:80">(<argument pos:start="133:49" pos:end="133:49"><expr pos:start="133:49" pos:end="133:49"><name pos:start="133:49" pos:end="133:49">x</name></expr></argument>, <argument pos:start="133:52" pos:end="133:52"><expr pos:start="133:52" pos:end="133:52"><name pos:start="133:52" pos:end="133:52">y</name></expr></argument>, <argument pos:start="133:55" pos:end="133:55"><expr pos:start="133:55" pos:end="133:55"><name pos:start="133:55" pos:end="133:55">p</name></expr></argument>, <argument pos:start="133:58" pos:end="133:61"><expr pos:start="133:58" pos:end="133:61"><operator pos:start="133:58" pos:end="133:58">&amp;</operator><name pos:start="133:59" pos:end="133:61">wid</name></expr></argument>, <argument pos:start="133:64" pos:end="133:67"><expr pos:start="133:64" pos:end="133:67"><operator pos:start="133:64" pos:end="133:64">&amp;</operator><name pos:start="133:65" pos:end="133:67">hig</name></expr></argument>, <argument pos:start="133:70" pos:end="133:73"><expr pos:start="133:70" pos:end="133:73"><operator pos:start="133:70" pos:end="133:70">&amp;</operator><name pos:start="133:71" pos:end="133:73">h_a</name></expr></argument>, <argument pos:start="133:76" pos:end="133:79"><expr pos:start="133:76" pos:end="133:79"><operator pos:start="133:76" pos:end="133:76">&amp;</operator><name pos:start="133:77" pos:end="133:79">v_a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:21"><expr pos:start="135:13" pos:end="135:20"><name pos:start="135:13" pos:end="135:13">y</name> <operator pos:start="135:15" pos:end="135:16">+=</operator> <name pos:start="135:18" pos:end="135:20">v_a</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block>



    <if_stmt pos:start="143:5" pos:end="151:5"><if pos:start="143:5" pos:end="151:5">if <condition pos:start="143:8" pos:end="143:34">(<expr pos:start="143:9" pos:end="143:33"><name pos:start="143:9" pos:end="143:15">pix_fmt</name> <operator pos:start="143:17" pos:end="143:18">!=</operator> <name pos:start="143:20" pos:end="143:33">PIX_FMT_RGBA32</name></expr>)</condition> <block pos:start="143:36" pos:end="151:5">{<block_content pos:start="145:9" pos:end="149:9">

        <if_stmt pos:start="145:9" pos:end="149:9"><if pos:start="145:9" pos:end="149:9">if <condition pos:start="145:12" pos:end="147:70">(<expr pos:start="145:13" pos:end="147:69"><call pos:start="145:13" pos:end="147:65"><name pos:start="145:13" pos:end="145:23">img_convert</name><argument_list pos:start="145:24" pos:end="147:65">(<argument pos:start="145:25" pos:end="145:31"><expr pos:start="145:25" pos:end="145:31"><name pos:start="145:25" pos:end="145:31">picture</name></expr></argument>, <argument pos:start="145:34" pos:end="145:40"><expr pos:start="145:34" pos:end="145:40"><name pos:start="145:34" pos:end="145:40">pix_fmt</name></expr></argument>, 

                        <argument pos:start="147:25" pos:end="147:33"><expr pos:start="147:25" pos:end="147:33"><operator pos:start="147:25" pos:end="147:25">&amp;</operator><name pos:start="147:26" pos:end="147:33">picture1</name></expr></argument>, <argument pos:start="147:36" pos:end="147:49"><expr pos:start="147:36" pos:end="147:49"><name pos:start="147:36" pos:end="147:49">PIX_FMT_RGBA32</name></expr></argument>, <argument pos:start="147:52" pos:end="147:56"><expr pos:start="147:52" pos:end="147:56"><name pos:start="147:52" pos:end="147:56">width</name></expr></argument>, <argument pos:start="147:59" pos:end="147:64"><expr pos:start="147:59" pos:end="147:64"><name pos:start="147:59" pos:end="147:64">height</name></expr></argument>)</argument_list></call> <operator pos:start="147:67" pos:end="147:67">&lt;</operator> <literal type="number" pos:start="147:69" pos:end="147:69">0</literal></expr>)</condition> <block pos:start="147:72" pos:end="149:9">{<block_content>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



<label pos:start="155:1" pos:end="155:5"><name pos:start="155:1" pos:end="155:4">done</name>:</label>

    <empty_stmt pos:start="157:5" pos:end="157:5">;</empty_stmt>

</block_content>}</block></function>
</unit>
