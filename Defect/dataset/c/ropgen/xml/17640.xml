<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17640.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:7"><name pos:start="1:1" pos:end="1:7">ssize_t</name></type> <name pos:start="1:9" pos:end="1:25">qemu_sendv_packet</name><parameter_list pos:start="1:26" pos:end="3:37">(<parameter pos:start="1:27" pos:end="1:49"><decl pos:start="1:27" pos:end="1:49"><type pos:start="1:27" pos:end="1:49"><name pos:start="1:27" pos:end="1:41">VLANClientState</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:49">sender</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:74"><decl pos:start="1:52" pos:end="1:74"><type pos:start="1:52" pos:end="1:74"><specifier pos:start="1:52" pos:end="1:56">const</specifier> <name pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:63">struct</name> <name pos:start="1:65" pos:end="1:69">iovec</name></name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:74">iov</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:36"><decl pos:start="3:27" pos:end="3:36"><type pos:start="3:27" pos:end="3:36"><name pos:start="3:27" pos:end="3:29">int</name></type> <name pos:start="3:31" pos:end="3:36">iovcnt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="109:1">{<block_content pos:start="7:5" pos:end="107:19">

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">VLANState</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:19">vlan</name> <init pos:start="7:21" pos:end="7:34">= <expr pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:28">sender</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:34">vlan</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">VLANClientState</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:23">vc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:14">VLANPacket</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:22">packet</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">ssize_t</name></type> <name pos:start="13:13" pos:end="13:19">max_len</name> <init pos:start="13:21" pos:end="13:23">= <expr pos:start="13:23" pos:end="13:23"><literal type="number" pos:start="13:23" pos:end="13:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="21:44"><if pos:start="19:5" pos:end="21:44">if <condition pos:start="19:8" pos:end="19:26">(<expr pos:start="19:9" pos:end="19:25"><name pos:start="19:9" pos:end="19:25"><name pos:start="19:9" pos:end="19:14">sender</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:25">link_down</name></name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:44"><block_content pos:start="21:9" pos:end="21:44">

        <return pos:start="21:9" pos:end="21:44">return <expr pos:start="21:16" pos:end="21:43"><call pos:start="21:16" pos:end="21:43"><name pos:start="21:16" pos:end="21:30">calc_iov_length</name><argument_list pos:start="21:31" pos:end="21:43">(<argument pos:start="21:32" pos:end="21:34"><expr pos:start="21:32" pos:end="21:34"><name pos:start="21:32" pos:end="21:34">iov</name></expr></argument>, <argument pos:start="21:37" pos:end="21:42"><expr pos:start="21:37" pos:end="21:42"><name pos:start="21:37" pos:end="21:42">iovcnt</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="103:5"><if pos:start="25:5" pos:end="53:5">if <condition pos:start="25:8" pos:end="25:25">(<expr pos:start="25:9" pos:end="25:24"><name pos:start="25:9" pos:end="25:24"><name pos:start="25:9" pos:end="25:12">vlan</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:24">delivering</name></name></expr>)</condition> <block pos:start="25:27" pos:end="53:5">{<block_content pos:start="27:9" pos:end="51:34">

        <expr_stmt pos:start="27:9" pos:end="27:47"><expr pos:start="27:9" pos:end="27:46"><name pos:start="27:9" pos:end="27:15">max_len</name> <operator pos:start="27:17" pos:end="27:17">=</operator> <call pos:start="27:19" pos:end="27:46"><name pos:start="27:19" pos:end="27:33">calc_iov_length</name><argument_list pos:start="27:34" pos:end="27:46">(<argument pos:start="27:35" pos:end="27:37"><expr pos:start="27:35" pos:end="27:37"><name pos:start="27:35" pos:end="27:37">iov</name></expr></argument>, <argument pos:start="27:40" pos:end="27:45"><expr pos:start="27:40" pos:end="27:45"><name pos:start="27:40" pos:end="27:45">iovcnt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="31:9" pos:end="31:59"><expr pos:start="31:9" pos:end="31:58"><name pos:start="31:9" pos:end="31:14">packet</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <call pos:start="31:18" pos:end="31:58"><name pos:start="31:18" pos:end="31:28">qemu_malloc</name><argument_list pos:start="31:29" pos:end="31:58">(<argument pos:start="31:30" pos:end="31:57"><expr pos:start="31:30" pos:end="31:57"><sizeof pos:start="31:30" pos:end="31:47">sizeof<argument_list pos:start="31:36" pos:end="31:47">(<argument pos:start="31:37" pos:end="31:46"><expr pos:start="31:37" pos:end="31:46"><name pos:start="31:37" pos:end="31:46">VLANPacket</name></expr></argument>)</argument_list></sizeof> <operator pos:start="31:49" pos:end="31:49">+</operator> <name pos:start="31:51" pos:end="31:57">max_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:40"><expr pos:start="33:9" pos:end="33:39"><name pos:start="33:9" pos:end="33:20"><name pos:start="33:9" pos:end="33:14">packet</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:20">next</name></name> <operator pos:start="33:22" pos:end="33:22">=</operator> <name pos:start="33:24" pos:end="33:39"><name pos:start="33:24" pos:end="33:27">vlan</name><operator pos:start="33:28" pos:end="33:29">-&gt;</operator><name pos:start="33:30" pos:end="33:39">send_queue</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:32"><expr pos:start="35:9" pos:end="35:31"><name pos:start="35:9" pos:end="35:22"><name pos:start="35:9" pos:end="35:14">packet</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:22">sender</name></name> <operator pos:start="35:24" pos:end="35:24">=</operator> <name pos:start="35:26" pos:end="35:31">sender</name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:25"><expr pos:start="37:9" pos:end="37:24"><name pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:14">packet</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:20">size</name></name> <operator pos:start="37:22" pos:end="37:22">=</operator> <literal type="number" pos:start="37:24" pos:end="37:24">0</literal></expr>;</expr_stmt>

        <for pos:start="39:9" pos:end="49:9">for <control pos:start="39:13" pos:end="39:36">(<init pos:start="39:14" pos:end="39:19"><expr pos:start="39:14" pos:end="39:18"><name pos:start="39:14" pos:end="39:14">i</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <literal type="number" pos:start="39:18" pos:end="39:18">0</literal></expr>;</init> <condition pos:start="39:21" pos:end="39:31"><expr pos:start="39:21" pos:end="39:30"><name pos:start="39:21" pos:end="39:21">i</name> <operator pos:start="39:23" pos:end="39:23">&lt;</operator> <name pos:start="39:25" pos:end="39:30">iovcnt</name></expr>;</condition> <incr pos:start="39:33" pos:end="39:35"><expr pos:start="39:33" pos:end="39:35"><name pos:start="39:33" pos:end="39:33">i</name><operator pos:start="39:34" pos:end="39:35">++</operator></expr></incr>)</control> <block pos:start="39:38" pos:end="49:9">{<block_content pos:start="41:13" pos:end="47:32">

            <decl_stmt pos:start="41:13" pos:end="41:40"><decl pos:start="41:13" pos:end="41:39"><type pos:start="41:13" pos:end="41:18"><name pos:start="41:13" pos:end="41:18">size_t</name></type> <name pos:start="41:20" pos:end="41:22">len</name> <init pos:start="41:24" pos:end="41:39">= <expr pos:start="41:26" pos:end="41:39"><name pos:start="41:26" pos:end="41:31"><name pos:start="41:26" pos:end="41:28">iov</name><index pos:start="41:29" pos:end="41:31">[<expr pos:start="41:30" pos:end="41:30"><name pos:start="41:30" pos:end="41:30">i</name></expr>]</index></name><operator pos:start="41:32" pos:end="41:32">.</operator><name pos:start="41:33" pos:end="41:39">iov_len</name></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="45:13" pos:end="45:70"><expr pos:start="45:13" pos:end="45:69"><call pos:start="45:13" pos:end="45:69"><name pos:start="45:13" pos:end="45:18">memcpy</name><argument_list pos:start="45:19" pos:end="45:69">(<argument pos:start="45:20" pos:end="45:46"><expr pos:start="45:20" pos:end="45:46"><name pos:start="45:20" pos:end="45:31"><name pos:start="45:20" pos:end="45:25">packet</name><operator pos:start="45:26" pos:end="45:27">-&gt;</operator><name pos:start="45:28" pos:end="45:31">data</name></name> <operator pos:start="45:33" pos:end="45:33">+</operator> <name pos:start="45:35" pos:end="45:46"><name pos:start="45:35" pos:end="45:40">packet</name><operator pos:start="45:41" pos:end="45:42">-&gt;</operator><name pos:start="45:43" pos:end="45:46">size</name></name></expr></argument>, <argument pos:start="45:49" pos:end="45:63"><expr pos:start="45:49" pos:end="45:63"><name pos:start="45:49" pos:end="45:54"><name pos:start="45:49" pos:end="45:51">iov</name><index pos:start="45:52" pos:end="45:54">[<expr pos:start="45:53" pos:end="45:53"><name pos:start="45:53" pos:end="45:53">i</name></expr>]</index></name><operator pos:start="45:55" pos:end="45:55">.</operator><name pos:start="45:56" pos:end="45:63">iov_base</name></expr></argument>, <argument pos:start="45:66" pos:end="45:68"><expr pos:start="45:66" pos:end="45:68"><name pos:start="45:66" pos:end="45:68">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:32"><expr pos:start="47:13" pos:end="47:31"><name pos:start="47:13" pos:end="47:24"><name pos:start="47:13" pos:end="47:18">packet</name><operator pos:start="47:19" pos:end="47:20">-&gt;</operator><name pos:start="47:21" pos:end="47:24">size</name></name> <operator pos:start="47:26" pos:end="47:27">+=</operator> <name pos:start="47:29" pos:end="47:31">len</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="51:9" pos:end="51:34"><expr pos:start="51:9" pos:end="51:33"><name pos:start="51:9" pos:end="51:24"><name pos:start="51:9" pos:end="51:12">vlan</name><operator pos:start="51:13" pos:end="51:14">-&gt;</operator><name pos:start="51:15" pos:end="51:24">send_queue</name></name> <operator pos:start="51:26" pos:end="51:26">=</operator> <name pos:start="51:28" pos:end="51:33">packet</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="53:7" pos:end="103:5">else <block pos:start="53:12" pos:end="103:5">{<block_content pos:start="55:9" pos:end="101:29">

        <expr_stmt pos:start="55:9" pos:end="55:29"><expr pos:start="55:9" pos:end="55:28"><name pos:start="55:9" pos:end="55:24"><name pos:start="55:9" pos:end="55:12">vlan</name><operator pos:start="55:13" pos:end="55:14">-&gt;</operator><name pos:start="55:15" pos:end="55:24">delivering</name></name> <operator pos:start="55:26" pos:end="55:26">=</operator> <literal type="number" pos:start="55:28" pos:end="55:28">1</literal></expr>;</expr_stmt>



        <for pos:start="59:9" pos:end="87:9">for <control pos:start="59:13" pos:end="59:64">(<init pos:start="59:14" pos:end="59:37"><expr pos:start="59:14" pos:end="59:36"><name pos:start="59:14" pos:end="59:15">vc</name> <operator pos:start="59:17" pos:end="59:17">=</operator> <name pos:start="59:19" pos:end="59:36"><name pos:start="59:19" pos:end="59:22">vlan</name><operator pos:start="59:23" pos:end="59:24">-&gt;</operator><name pos:start="59:25" pos:end="59:36">first_client</name></name></expr>;</init> <condition pos:start="59:39" pos:end="59:49"><expr pos:start="59:39" pos:end="59:48"><name pos:start="59:39" pos:end="59:40">vc</name> <operator pos:start="59:42" pos:end="59:43">!=</operator> <name pos:start="59:45" pos:end="59:48">NULL</name></expr>;</condition> <incr pos:start="59:51" pos:end="59:63"><expr pos:start="59:51" pos:end="59:63"><name pos:start="59:51" pos:end="59:52">vc</name> <operator pos:start="59:54" pos:end="59:54">=</operator> <name pos:start="59:56" pos:end="59:63"><name pos:start="59:56" pos:end="59:57">vc</name><operator pos:start="59:58" pos:end="59:59">-&gt;</operator><name pos:start="59:60" pos:end="59:63">next</name></name></expr></incr>)</control> <block pos:start="59:66" pos:end="87:9">{<block_content pos:start="61:13" pos:end="85:40">

            <decl_stmt pos:start="61:13" pos:end="61:28"><decl pos:start="61:13" pos:end="61:27"><type pos:start="61:13" pos:end="61:19"><name pos:start="61:13" pos:end="61:19">ssize_t</name></type> <name pos:start="61:21" pos:end="61:23">len</name> <init pos:start="61:25" pos:end="61:27">= <expr pos:start="61:27" pos:end="61:27"><literal type="number" pos:start="61:27" pos:end="61:27">0</literal></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="65:13" pos:end="69:13"><if pos:start="65:13" pos:end="69:13">if <condition pos:start="65:16" pos:end="65:29">(<expr pos:start="65:17" pos:end="65:28"><name pos:start="65:17" pos:end="65:18">vc</name> <operator pos:start="65:20" pos:end="65:21">==</operator> <name pos:start="65:23" pos:end="65:28">sender</name></expr>)</condition> <block pos:start="65:31" pos:end="69:13">{<block_content pos:start="67:17" pos:end="67:25">

                <continue pos:start="67:17" pos:end="67:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="71:13" pos:end="83:13"><if pos:start="71:13" pos:end="75:13">if <condition pos:start="71:16" pos:end="71:30">(<expr pos:start="71:17" pos:end="71:29"><name pos:start="71:17" pos:end="71:29"><name pos:start="71:17" pos:end="71:18">vc</name><operator pos:start="71:19" pos:end="71:20">-&gt;</operator><name pos:start="71:21" pos:end="71:29">link_down</name></name></expr>)</condition> <block pos:start="71:32" pos:end="75:13">{<block_content pos:start="73:17" pos:end="73:51">

                <expr_stmt pos:start="73:17" pos:end="73:51"><expr pos:start="73:17" pos:end="73:50"><name pos:start="73:17" pos:end="73:19">len</name> <operator pos:start="73:21" pos:end="73:21">=</operator> <call pos:start="73:23" pos:end="73:50"><name pos:start="73:23" pos:end="73:37">calc_iov_length</name><argument_list pos:start="73:38" pos:end="73:50">(<argument pos:start="73:39" pos:end="73:41"><expr pos:start="73:39" pos:end="73:41"><name pos:start="73:39" pos:end="73:41">iov</name></expr></argument>, <argument pos:start="73:44" pos:end="73:49"><expr pos:start="73:44" pos:end="73:49"><name pos:start="73:44" pos:end="73:49">iovcnt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="75:15" pos:end="79:13">else if <condition pos:start="75:23" pos:end="75:39">(<expr pos:start="75:24" pos:end="75:38"><name pos:start="75:24" pos:end="75:38"><name pos:start="75:24" pos:end="75:25">vc</name><operator pos:start="75:26" pos:end="75:27">-&gt;</operator><name pos:start="75:28" pos:end="75:38">receive_iov</name></name></expr>)</condition> <block pos:start="75:41" pos:end="79:13">{<block_content pos:start="77:17" pos:end="77:63">

                <expr_stmt pos:start="77:17" pos:end="77:63"><expr pos:start="77:17" pos:end="77:62"><name pos:start="77:17" pos:end="77:19">len</name> <operator pos:start="77:21" pos:end="77:21">=</operator> <call pos:start="77:23" pos:end="77:62"><name pos:start="77:23" pos:end="77:37"><name pos:start="77:23" pos:end="77:24">vc</name><operator pos:start="77:25" pos:end="77:26">-&gt;</operator><name pos:start="77:27" pos:end="77:37">receive_iov</name></name><argument_list pos:start="77:38" pos:end="77:62">(<argument pos:start="77:39" pos:end="77:48"><expr pos:start="77:39" pos:end="77:48"><name pos:start="77:39" pos:end="77:48"><name pos:start="77:39" pos:end="77:40">vc</name><operator pos:start="77:41" pos:end="77:42">-&gt;</operator><name pos:start="77:43" pos:end="77:48">opaque</name></name></expr></argument>, <argument pos:start="77:51" pos:end="77:53"><expr pos:start="77:51" pos:end="77:53"><name pos:start="77:51" pos:end="77:53">iov</name></expr></argument>, <argument pos:start="77:56" pos:end="77:61"><expr pos:start="77:56" pos:end="77:61"><name pos:start="77:56" pos:end="77:61">iovcnt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="79:15" pos:end="83:13">else if <condition pos:start="79:23" pos:end="79:35">(<expr pos:start="79:24" pos:end="79:34"><name pos:start="79:24" pos:end="79:34"><name pos:start="79:24" pos:end="79:25">vc</name><operator pos:start="79:26" pos:end="79:27">-&gt;</operator><name pos:start="79:28" pos:end="79:34">receive</name></name></expr>)</condition> <block pos:start="79:37" pos:end="83:13">{<block_content pos:start="81:17" pos:end="81:55">

                <expr_stmt pos:start="81:17" pos:end="81:55"><expr pos:start="81:17" pos:end="81:54"><name pos:start="81:17" pos:end="81:19">len</name> <operator pos:start="81:21" pos:end="81:21">=</operator> <call pos:start="81:23" pos:end="81:54"><name pos:start="81:23" pos:end="81:37">vc_sendv_compat</name><argument_list pos:start="81:38" pos:end="81:54">(<argument pos:start="81:39" pos:end="81:40"><expr pos:start="81:39" pos:end="81:40"><name pos:start="81:39" pos:end="81:40">vc</name></expr></argument>, <argument pos:start="81:43" pos:end="81:45"><expr pos:start="81:43" pos:end="81:45"><name pos:start="81:43" pos:end="81:45">iov</name></expr></argument>, <argument pos:start="81:48" pos:end="81:53"><expr pos:start="81:48" pos:end="81:53"><name pos:start="81:48" pos:end="81:53">iovcnt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:40"><expr pos:start="85:13" pos:end="85:39"><name pos:start="85:13" pos:end="85:19">max_len</name> <operator pos:start="85:21" pos:end="85:21">=</operator> <call pos:start="85:23" pos:end="85:39"><name pos:start="85:23" pos:end="85:25">MAX</name><argument_list pos:start="85:26" pos:end="85:39">(<argument pos:start="85:27" pos:end="85:33"><expr pos:start="85:27" pos:end="85:33"><name pos:start="85:27" pos:end="85:33">max_len</name></expr></argument>, <argument pos:start="85:36" pos:end="85:38"><expr pos:start="85:36" pos:end="85:38"><name pos:start="85:36" pos:end="85:38">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>



        <while pos:start="91:9" pos:end="99:9">while <condition pos:start="91:15" pos:end="91:51">(<expr pos:start="91:16" pos:end="91:50"><operator pos:start="91:16" pos:end="91:16">(</operator><name pos:start="91:17" pos:end="91:22">packet</name> <operator pos:start="91:24" pos:end="91:24">=</operator> <name pos:start="91:26" pos:end="91:41"><name pos:start="91:26" pos:end="91:29">vlan</name><operator pos:start="91:30" pos:end="91:31">-&gt;</operator><name pos:start="91:32" pos:end="91:41">send_queue</name></name><operator pos:start="91:42" pos:end="91:42">)</operator> <operator pos:start="91:44" pos:end="91:45">!=</operator> <name pos:start="91:47" pos:end="91:50">NULL</name></expr>)</condition> <block pos:start="91:53" pos:end="99:9">{<block_content pos:start="93:13" pos:end="97:30">

            <expr_stmt pos:start="93:13" pos:end="93:44"><expr pos:start="93:13" pos:end="93:43"><name pos:start="93:13" pos:end="93:28"><name pos:start="93:13" pos:end="93:16">vlan</name><operator pos:start="93:17" pos:end="93:18">-&gt;</operator><name pos:start="93:19" pos:end="93:28">send_queue</name></name> <operator pos:start="93:30" pos:end="93:30">=</operator> <name pos:start="93:32" pos:end="93:43"><name pos:start="93:32" pos:end="93:37">packet</name><operator pos:start="93:38" pos:end="93:39">-&gt;</operator><name pos:start="93:40" pos:end="93:43">next</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:76"><expr pos:start="95:13" pos:end="95:75"><call pos:start="95:13" pos:end="95:75"><name pos:start="95:13" pos:end="95:31">qemu_deliver_packet</name><argument_list pos:start="95:32" pos:end="95:75">(<argument pos:start="95:33" pos:end="95:46"><expr pos:start="95:33" pos:end="95:46"><name pos:start="95:33" pos:end="95:46"><name pos:start="95:33" pos:end="95:38">packet</name><operator pos:start="95:39" pos:end="95:40">-&gt;</operator><name pos:start="95:41" pos:end="95:46">sender</name></name></expr></argument>, <argument pos:start="95:49" pos:end="95:60"><expr pos:start="95:49" pos:end="95:60"><name pos:start="95:49" pos:end="95:60"><name pos:start="95:49" pos:end="95:54">packet</name><operator pos:start="95:55" pos:end="95:56">-&gt;</operator><name pos:start="95:57" pos:end="95:60">data</name></name></expr></argument>, <argument pos:start="95:63" pos:end="95:74"><expr pos:start="95:63" pos:end="95:74"><name pos:start="95:63" pos:end="95:74"><name pos:start="95:63" pos:end="95:68">packet</name><operator pos:start="95:69" pos:end="95:70">-&gt;</operator><name pos:start="95:71" pos:end="95:74">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:30"><expr pos:start="97:13" pos:end="97:29"><call pos:start="97:13" pos:end="97:29"><name pos:start="97:13" pos:end="97:21">qemu_free</name><argument_list pos:start="97:22" pos:end="97:29">(<argument pos:start="97:23" pos:end="97:28"><expr pos:start="97:23" pos:end="97:28"><name pos:start="97:23" pos:end="97:28">packet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="101:9" pos:end="101:29"><expr pos:start="101:9" pos:end="101:28"><name pos:start="101:9" pos:end="101:24"><name pos:start="101:9" pos:end="101:12">vlan</name><operator pos:start="101:13" pos:end="101:14">-&gt;</operator><name pos:start="101:15" pos:end="101:24">delivering</name></name> <operator pos:start="101:26" pos:end="101:26">=</operator> <literal type="number" pos:start="101:28" pos:end="101:28">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="107:5" pos:end="107:19">return <expr pos:start="107:12" pos:end="107:18"><name pos:start="107:12" pos:end="107:18">max_len</name></expr>;</return>

</block_content>}</block></function>
</unit>
