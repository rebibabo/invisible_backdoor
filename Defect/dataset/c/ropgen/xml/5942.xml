<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5942.c" pos:tabs="8"><function pos:start="1:1" pos:end="253:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">g723_1_encode_frame</name><parameter_list pos:start="1:31" pos:end="3:70">(<parameter pos:start="1:32" pos:end="1:52"><decl pos:start="1:32" pos:end="1:52"><type pos:start="1:32" pos:end="1:52"><name pos:start="1:32" pos:end="1:45">AVCodecContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:52">avctx</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:69"><decl pos:start="1:55" pos:end="1:69"><type pos:start="1:55" pos:end="1:69"><name pos:start="1:55" pos:end="1:62">AVPacket</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:69">avpkt</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:48"><decl pos:start="3:29" pos:end="3:48"><type pos:start="3:29" pos:end="3:48"><specifier pos:start="3:29" pos:end="3:33">const</specifier> <name pos:start="3:35" pos:end="3:41">AVFrame</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier></type><name pos:start="3:44" pos:end="3:48">frame</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:69"><decl pos:start="3:51" pos:end="3:69"><type pos:start="3:51" pos:end="3:69"><name pos:start="3:51" pos:end="3:53">int</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:69">got_packet_ptr</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="253:1">{<block_content pos:start="7:5" pos:end="251:13">

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">G723_1_Context</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">p</name> <init pos:start="7:23" pos:end="7:40">= <expr pos:start="7:25" pos:end="7:40"><name pos:start="7:25" pos:end="7:40"><name pos:start="7:25" pos:end="7:29">avctx</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:42"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int16_t</name></type> <name pos:start="9:13" pos:end="9:42"><name pos:start="9:13" pos:end="9:19">unq_lpc</name><index pos:start="9:20" pos:end="9:42">[<expr pos:start="9:21" pos:end="9:41"><name pos:start="9:21" pos:end="9:29">LPC_ORDER</name> <operator pos:start="9:31" pos:end="9:31">*</operator> <name pos:start="9:33" pos:end="9:41">SUBFRAMES</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:43"><decl pos:start="11:5" pos:end="11:42"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int16_t</name></type> <name pos:start="11:13" pos:end="11:42"><name pos:start="11:13" pos:end="11:19">qnt_lpc</name><index pos:start="11:20" pos:end="11:42">[<expr pos:start="11:21" pos:end="11:41"><name pos:start="11:21" pos:end="11:29">LPC_ORDER</name> <operator pos:start="11:31" pos:end="11:31">*</operator> <name pos:start="11:33" pos:end="11:41">SUBFRAMES</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:30"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int16_t</name></type> <name pos:start="13:13" pos:end="13:30"><name pos:start="13:13" pos:end="13:19">cur_lsp</name><index pos:start="13:20" pos:end="13:30">[<expr pos:start="13:21" pos:end="13:29"><name pos:start="13:21" pos:end="13:29">LPC_ORDER</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:53"><decl pos:start="15:5" pos:end="15:52"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int16_t</name></type> <name pos:start="15:13" pos:end="15:52"><name pos:start="15:13" pos:end="15:24">weighted_lpc</name><index pos:start="15:25" pos:end="15:52">[<expr pos:start="15:26" pos:end="15:51"><name pos:start="15:26" pos:end="15:34">LPC_ORDER</name> <operator pos:start="15:36" pos:end="15:36">*</operator> <name pos:start="15:38" pos:end="15:46">SUBFRAMES</name> <operator pos:start="15:48" pos:end="15:49">&lt;&lt;</operator> <literal type="number" pos:start="15:51" pos:end="15:51">1</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:42"><decl pos:start="17:5" pos:end="17:41"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">int16_t</name></type> <name pos:start="17:13" pos:end="17:41"><name pos:start="17:13" pos:end="17:18">vector</name><index pos:start="17:19" pos:end="17:41">[<expr pos:start="17:20" pos:end="17:40"><name pos:start="17:20" pos:end="17:28">FRAME_LEN</name> <operator pos:start="17:30" pos:end="17:30">+</operator> <name pos:start="17:32" pos:end="17:40">PITCH_MAX</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:20"><decl pos:start="19:5" pos:end="19:14"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:14">offset</name></decl>, <decl pos:start="19:17" pos:end="19:19"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:17" pos:end="19:19">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:50"><decl pos:start="21:5" pos:end="21:49"><type pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:11">int16_t</name> <modifier pos:start="21:13" pos:end="21:13">*</modifier></type><name pos:start="21:14" pos:end="21:15">in</name> <init pos:start="21:17" pos:end="21:49">= <expr pos:start="21:19" pos:end="21:49"><operator pos:start="21:19" pos:end="21:19">(</operator><specifier pos:start="21:20" pos:end="21:24">const</specifier> <name pos:start="21:26" pos:end="21:32">int16_t</name> <operator pos:start="21:34" pos:end="21:34">*</operator><operator pos:start="21:35" pos:end="21:35">)</operator><name pos:start="21:36" pos:end="21:49"><name pos:start="21:36" pos:end="21:40">frame</name><operator pos:start="21:41" pos:end="21:42">-&gt;</operator><name pos:start="21:43" pos:end="21:46">data</name><index pos:start="21:47" pos:end="21:49">[<expr pos:start="21:48" pos:end="21:48"><literal type="number" pos:start="21:48" pos:end="21:48">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="25:5" pos:end="25:18"><decl pos:start="25:5" pos:end="25:17"><type pos:start="25:5" pos:end="25:11"><name pos:start="25:5" pos:end="25:11">HFParam</name></type> <name pos:start="25:13" pos:end="25:17"><name pos:start="25:13" pos:end="25:14">hf</name><index pos:start="25:15" pos:end="25:17">[<expr pos:start="25:16" pos:end="25:16"><literal type="number" pos:start="25:16" pos:end="25:16">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:13"><decl pos:start="27:5" pos:end="27:9"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:9">i</name></decl>, <decl pos:start="27:12" pos:end="27:12"><type ref="prev" pos:start="27:5" pos:end="27:7"/><name pos:start="27:12" pos:end="27:12">j</name></decl>;</decl_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:58"><expr pos:start="31:5" pos:end="31:57"><call pos:start="31:5" pos:end="31:57"><name pos:start="31:5" pos:end="31:19">highpass_filter</name><argument_list pos:start="31:20" pos:end="31:57">(<argument pos:start="31:21" pos:end="31:22"><expr pos:start="31:21" pos:end="31:22"><name pos:start="31:21" pos:end="31:22">in</name></expr></argument>, <argument pos:start="31:25" pos:end="31:39"><expr pos:start="31:25" pos:end="31:39"><operator pos:start="31:25" pos:end="31:25">&amp;</operator><name pos:start="31:26" pos:end="31:39"><name pos:start="31:26" pos:end="31:26">p</name><operator pos:start="31:27" pos:end="31:28">-&gt;</operator><name pos:start="31:29" pos:end="31:39">hpf_fir_mem</name></name></expr></argument>, <argument pos:start="31:42" pos:end="31:56"><expr pos:start="31:42" pos:end="31:56"><operator pos:start="31:42" pos:end="31:42">&amp;</operator><name pos:start="31:43" pos:end="31:56"><name pos:start="31:43" pos:end="31:43">p</name><operator pos:start="31:44" pos:end="31:45">-&gt;</operator><name pos:start="31:46" pos:end="31:56">hpf_iir_mem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:67"><expr pos:start="35:5" pos:end="35:66"><call pos:start="35:5" pos:end="35:66"><name pos:start="35:5" pos:end="35:10">memcpy</name><argument_list pos:start="35:11" pos:end="35:66">(<argument pos:start="35:12" pos:end="35:17"><expr pos:start="35:12" pos:end="35:17"><name pos:start="35:12" pos:end="35:17">vector</name></expr></argument>, <argument pos:start="35:20" pos:end="35:31"><expr pos:start="35:20" pos:end="35:31"><name pos:start="35:20" pos:end="35:31"><name pos:start="35:20" pos:end="35:20">p</name><operator pos:start="35:21" pos:end="35:22">-&gt;</operator><name pos:start="35:23" pos:end="35:31">prev_data</name></name></expr></argument>, <argument pos:start="35:34" pos:end="35:65"><expr pos:start="35:34" pos:end="35:65"><name pos:start="35:34" pos:end="35:47">HALF_FRAME_LEN</name> <operator pos:start="35:49" pos:end="35:49">*</operator> <sizeof pos:start="35:51" pos:end="35:65">sizeof<argument_list pos:start="35:57" pos:end="35:65">(<argument pos:start="35:58" pos:end="35:64"><expr pos:start="35:58" pos:end="35:64"><name pos:start="35:58" pos:end="35:64">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:69"><expr pos:start="37:5" pos:end="37:68"><call pos:start="37:5" pos:end="37:68"><name pos:start="37:5" pos:end="37:10">memcpy</name><argument_list pos:start="37:11" pos:end="37:68">(<argument pos:start="37:12" pos:end="37:34"><expr pos:start="37:12" pos:end="37:34"><name pos:start="37:12" pos:end="37:17">vector</name> <operator pos:start="37:19" pos:end="37:19">+</operator> <name pos:start="37:21" pos:end="37:34">HALF_FRAME_LEN</name></expr></argument>, <argument pos:start="37:37" pos:end="37:38"><expr pos:start="37:37" pos:end="37:38"><name pos:start="37:37" pos:end="37:38">in</name></expr></argument>, <argument pos:start="37:41" pos:end="37:67"><expr pos:start="37:41" pos:end="37:67"><name pos:start="37:41" pos:end="37:49">FRAME_LEN</name> <operator pos:start="37:51" pos:end="37:51">*</operator> <sizeof pos:start="37:53" pos:end="37:67">sizeof<argument_list pos:start="37:59" pos:end="37:67">(<argument pos:start="37:60" pos:end="37:66"><expr pos:start="37:60" pos:end="37:66"><name pos:start="37:60" pos:end="37:66">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:36"><expr pos:start="41:5" pos:end="41:35"><call pos:start="41:5" pos:end="41:35"><name pos:start="41:5" pos:end="41:18">comp_lpc_coeff</name><argument_list pos:start="41:19" pos:end="41:35">(<argument pos:start="41:20" pos:end="41:25"><expr pos:start="41:20" pos:end="41:25"><name pos:start="41:20" pos:end="41:25">vector</name></expr></argument>, <argument pos:start="41:28" pos:end="41:34"><expr pos:start="41:28" pos:end="41:34"><name pos:start="41:28" pos:end="41:34">unq_lpc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:59"><expr pos:start="43:5" pos:end="43:58"><call pos:start="43:5" pos:end="43:58"><name pos:start="43:5" pos:end="43:11">lpc2lsp</name><argument_list pos:start="43:12" pos:end="43:58">(<argument pos:start="43:13" pos:end="43:35"><expr pos:start="43:13" pos:end="43:35"><operator pos:start="43:13" pos:end="43:13">&amp;</operator><name pos:start="43:14" pos:end="43:35"><name pos:start="43:14" pos:end="43:20">unq_lpc</name><index pos:start="43:21" pos:end="43:35">[<expr pos:start="43:22" pos:end="43:34"><name pos:start="43:22" pos:end="43:30">LPC_ORDER</name> <operator pos:start="43:32" pos:end="43:32">*</operator> <literal type="number" pos:start="43:34" pos:end="43:34">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="43:38" pos:end="43:48"><expr pos:start="43:38" pos:end="43:48"><name pos:start="43:38" pos:end="43:48"><name pos:start="43:38" pos:end="43:38">p</name><operator pos:start="43:39" pos:end="43:40">-&gt;</operator><name pos:start="43:41" pos:end="43:48">prev_lsp</name></name></expr></argument>, <argument pos:start="43:51" pos:end="43:57"><expr pos:start="43:51" pos:end="43:57"><name pos:start="43:51" pos:end="43:57">cur_lsp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:53"><expr pos:start="45:5" pos:end="45:52"><call pos:start="45:5" pos:end="45:52"><name pos:start="45:5" pos:end="45:16">lsp_quantize</name><argument_list pos:start="45:17" pos:end="45:52">(<argument pos:start="45:18" pos:end="45:29"><expr pos:start="45:18" pos:end="45:29"><name pos:start="45:18" pos:end="45:29"><name pos:start="45:18" pos:end="45:18">p</name><operator pos:start="45:19" pos:end="45:20">-&gt;</operator><name pos:start="45:21" pos:end="45:29">lsp_index</name></name></expr></argument>, <argument pos:start="45:32" pos:end="45:38"><expr pos:start="45:32" pos:end="45:38"><name pos:start="45:32" pos:end="45:38">cur_lsp</name></expr></argument>, <argument pos:start="45:41" pos:end="45:51"><expr pos:start="45:41" pos:end="45:51"><name pos:start="45:41" pos:end="45:51"><name pos:start="45:41" pos:end="45:41">p</name><operator pos:start="45:42" pos:end="45:43">-&gt;</operator><name pos:start="45:44" pos:end="45:51">prev_lsp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="49:5" pos:end="49:23">/* Update memory */</comment>

    <expr_stmt pos:start="51:5" pos:end="53:43"><expr pos:start="51:5" pos:end="53:42"><call pos:start="51:5" pos:end="53:42"><name pos:start="51:5" pos:end="51:10">memcpy</name><argument_list pos:start="51:11" pos:end="53:42">(<argument pos:start="51:12" pos:end="51:29"><expr pos:start="51:12" pos:end="51:29"><name pos:start="51:12" pos:end="51:17">vector</name> <operator pos:start="51:19" pos:end="51:19">+</operator> <name pos:start="51:21" pos:end="51:29">LPC_ORDER</name></expr></argument>, <argument pos:start="51:32" pos:end="51:58"><expr pos:start="51:32" pos:end="51:58"><name pos:start="51:32" pos:end="51:43"><name pos:start="51:32" pos:end="51:32">p</name><operator pos:start="51:33" pos:end="51:34">-&gt;</operator><name pos:start="51:35" pos:end="51:43">prev_data</name></name> <operator pos:start="51:45" pos:end="51:45">+</operator> <name pos:start="51:47" pos:end="51:58">SUBFRAME_LEN</name></expr></argument>,

           <argument pos:start="53:12" pos:end="53:41"><expr pos:start="53:12" pos:end="53:41"><sizeof pos:start="53:12" pos:end="53:26">sizeof<argument_list pos:start="53:18" pos:end="53:26">(<argument pos:start="53:19" pos:end="53:25"><expr pos:start="53:19" pos:end="53:25"><name pos:start="53:19" pos:end="53:25">int16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="53:28" pos:end="53:28">*</operator> <name pos:start="53:30" pos:end="53:41">SUBFRAME_LEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="57:62"><expr pos:start="55:5" pos:end="57:61"><call pos:start="55:5" pos:end="57:61"><name pos:start="55:5" pos:end="55:10">memcpy</name><argument_list pos:start="55:11" pos:end="57:61">(<argument pos:start="55:12" pos:end="55:44"><expr pos:start="55:12" pos:end="55:44"><name pos:start="55:12" pos:end="55:17">vector</name> <operator pos:start="55:19" pos:end="55:19">+</operator> <name pos:start="55:21" pos:end="55:29">LPC_ORDER</name> <operator pos:start="55:31" pos:end="55:31">+</operator> <name pos:start="55:33" pos:end="55:44">SUBFRAME_LEN</name></expr></argument>, <argument pos:start="55:47" pos:end="55:48"><expr pos:start="55:47" pos:end="55:48"><name pos:start="55:47" pos:end="55:48">in</name></expr></argument>,

           <argument pos:start="57:12" pos:end="57:60"><expr pos:start="57:12" pos:end="57:60"><sizeof pos:start="57:12" pos:end="57:26">sizeof<argument_list pos:start="57:18" pos:end="57:26">(<argument pos:start="57:19" pos:end="57:25"><expr pos:start="57:19" pos:end="57:25"><name pos:start="57:19" pos:end="57:25">int16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="57:28" pos:end="57:28">*</operator> <operator pos:start="57:30" pos:end="57:30">(</operator><name pos:start="57:31" pos:end="57:44">HALF_FRAME_LEN</name> <operator pos:start="57:46" pos:end="57:46">+</operator> <name pos:start="57:48" pos:end="57:59">SUBFRAME_LEN</name><operator pos:start="57:60" pos:end="57:60">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="61:45"><expr pos:start="59:5" pos:end="61:44"><call pos:start="59:5" pos:end="61:44"><name pos:start="59:5" pos:end="59:10">memcpy</name><argument_list pos:start="59:11" pos:end="61:44">(<argument pos:start="59:12" pos:end="59:23"><expr pos:start="59:12" pos:end="59:23"><name pos:start="59:12" pos:end="59:23"><name pos:start="59:12" pos:end="59:12">p</name><operator pos:start="59:13" pos:end="59:14">-&gt;</operator><name pos:start="59:15" pos:end="59:23">prev_data</name></name></expr></argument>, <argument pos:start="59:26" pos:end="59:44"><expr pos:start="59:26" pos:end="59:44"><name pos:start="59:26" pos:end="59:27">in</name> <operator pos:start="59:29" pos:end="59:29">+</operator> <name pos:start="59:31" pos:end="59:44">HALF_FRAME_LEN</name></expr></argument>,

           <argument pos:start="61:12" pos:end="61:43"><expr pos:start="61:12" pos:end="61:43"><sizeof pos:start="61:12" pos:end="61:26">sizeof<argument_list pos:start="61:18" pos:end="61:26">(<argument pos:start="61:19" pos:end="61:25"><expr pos:start="61:19" pos:end="61:25"><name pos:start="61:19" pos:end="61:25">int16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="61:28" pos:end="61:28">*</operator> <name pos:start="61:30" pos:end="61:43">HALF_FRAME_LEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:64"><expr pos:start="63:5" pos:end="63:63"><call pos:start="63:5" pos:end="63:63"><name pos:start="63:5" pos:end="63:10">memcpy</name><argument_list pos:start="63:11" pos:end="63:63">(<argument pos:start="63:12" pos:end="63:13"><expr pos:start="63:12" pos:end="63:13"><name pos:start="63:12" pos:end="63:13">in</name></expr></argument>, <argument pos:start="63:16" pos:end="63:33"><expr pos:start="63:16" pos:end="63:33"><name pos:start="63:16" pos:end="63:21">vector</name> <operator pos:start="63:23" pos:end="63:23">+</operator> <name pos:start="63:25" pos:end="63:33">LPC_ORDER</name></expr></argument>, <argument pos:start="63:36" pos:end="63:62"><expr pos:start="63:36" pos:end="63:62"><sizeof pos:start="63:36" pos:end="63:50">sizeof<argument_list pos:start="63:42" pos:end="63:50">(<argument pos:start="63:43" pos:end="63:49"><expr pos:start="63:43" pos:end="63:49"><name pos:start="63:43" pos:end="63:49">int16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="63:52" pos:end="63:52">*</operator> <name pos:start="63:54" pos:end="63:62">FRAME_LEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:56"><expr pos:start="67:5" pos:end="67:55"><call pos:start="67:5" pos:end="67:55"><name pos:start="67:5" pos:end="67:21">perceptual_filter</name><argument_list pos:start="67:22" pos:end="67:55">(<argument pos:start="67:23" pos:end="67:23"><expr pos:start="67:23" pos:end="67:23"><name pos:start="67:23" pos:end="67:23">p</name></expr></argument>, <argument pos:start="67:26" pos:end="67:37"><expr pos:start="67:26" pos:end="67:37"><name pos:start="67:26" pos:end="67:37">weighted_lpc</name></expr></argument>, <argument pos:start="67:40" pos:end="67:46"><expr pos:start="67:40" pos:end="67:46"><name pos:start="67:40" pos:end="67:46">unq_lpc</name></expr></argument>, <argument pos:start="67:49" pos:end="67:54"><expr pos:start="67:49" pos:end="67:54"><name pos:start="67:49" pos:end="67:54">vector</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:64"><expr pos:start="71:5" pos:end="71:63"><call pos:start="71:5" pos:end="71:63"><name pos:start="71:5" pos:end="71:10">memcpy</name><argument_list pos:start="71:11" pos:end="71:63">(<argument pos:start="71:12" pos:end="71:13"><expr pos:start="71:12" pos:end="71:13"><name pos:start="71:12" pos:end="71:13">in</name></expr></argument>, <argument pos:start="71:16" pos:end="71:33"><expr pos:start="71:16" pos:end="71:33"><name pos:start="71:16" pos:end="71:21">vector</name> <operator pos:start="71:23" pos:end="71:23">+</operator> <name pos:start="71:25" pos:end="71:33">LPC_ORDER</name></expr></argument>, <argument pos:start="71:36" pos:end="71:62"><expr pos:start="71:36" pos:end="71:62"><sizeof pos:start="71:36" pos:end="71:50">sizeof<argument_list pos:start="71:42" pos:end="71:50">(<argument pos:start="71:43" pos:end="71:49"><expr pos:start="71:43" pos:end="71:49"><name pos:start="71:43" pos:end="71:49">int16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="71:52" pos:end="71:52">*</operator> <name pos:start="71:54" pos:end="71:62">FRAME_LEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:68"><expr pos:start="73:5" pos:end="73:67"><call pos:start="73:5" pos:end="73:67"><name pos:start="73:5" pos:end="73:10">memcpy</name><argument_list pos:start="73:11" pos:end="73:67">(<argument pos:start="73:12" pos:end="73:17"><expr pos:start="73:12" pos:end="73:17"><name pos:start="73:12" pos:end="73:17">vector</name></expr></argument>, <argument pos:start="73:20" pos:end="73:37"><expr pos:start="73:20" pos:end="73:37"><name pos:start="73:20" pos:end="73:37"><name pos:start="73:20" pos:end="73:20">p</name><operator pos:start="73:21" pos:end="73:22">-&gt;</operator><name pos:start="73:23" pos:end="73:37">prev_weight_sig</name></name></expr></argument>, <argument pos:start="73:40" pos:end="73:66"><expr pos:start="73:40" pos:end="73:66"><sizeof pos:start="73:40" pos:end="73:54">sizeof<argument_list pos:start="73:46" pos:end="73:54">(<argument pos:start="73:47" pos:end="73:53"><expr pos:start="73:47" pos:end="73:53"><name pos:start="73:47" pos:end="73:53">int16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="73:56" pos:end="73:56">*</operator> <name pos:start="73:58" pos:end="73:66">PITCH_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:64"><expr pos:start="75:5" pos:end="75:63"><call pos:start="75:5" pos:end="75:63"><name pos:start="75:5" pos:end="75:10">memcpy</name><argument_list pos:start="75:11" pos:end="75:63">(<argument pos:start="75:12" pos:end="75:29"><expr pos:start="75:12" pos:end="75:29"><name pos:start="75:12" pos:end="75:17">vector</name> <operator pos:start="75:19" pos:end="75:19">+</operator> <name pos:start="75:21" pos:end="75:29">PITCH_MAX</name></expr></argument>, <argument pos:start="75:32" pos:end="75:33"><expr pos:start="75:32" pos:end="75:33"><name pos:start="75:32" pos:end="75:33">in</name></expr></argument>, <argument pos:start="75:36" pos:end="75:62"><expr pos:start="75:36" pos:end="75:62"><sizeof pos:start="75:36" pos:end="75:50">sizeof<argument_list pos:start="75:42" pos:end="75:50">(<argument pos:start="75:43" pos:end="75:49"><expr pos:start="75:43" pos:end="75:49"><name pos:start="75:43" pos:end="75:49">int16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="75:52" pos:end="75:52">*</operator> <name pos:start="75:54" pos:end="75:62">FRAME_LEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:56"><expr pos:start="79:5" pos:end="79:55"><call pos:start="79:5" pos:end="79:55"><name pos:start="79:5" pos:end="79:16">scale_vector</name><argument_list pos:start="79:17" pos:end="79:55">(<argument pos:start="79:18" pos:end="79:23"><expr pos:start="79:18" pos:end="79:23"><name pos:start="79:18" pos:end="79:23">vector</name></expr></argument>, <argument pos:start="79:26" pos:end="79:31"><expr pos:start="79:26" pos:end="79:31"><name pos:start="79:26" pos:end="79:31">vector</name></expr></argument>, <argument pos:start="79:34" pos:end="79:54"><expr pos:start="79:34" pos:end="79:54"><name pos:start="79:34" pos:end="79:42">FRAME_LEN</name> <operator pos:start="79:44" pos:end="79:44">+</operator> <name pos:start="79:46" pos:end="79:54">PITCH_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:56"><expr pos:start="83:5" pos:end="83:55"><name pos:start="83:5" pos:end="83:19"><name pos:start="83:5" pos:end="83:5">p</name><operator pos:start="83:6" pos:end="83:7">-&gt;</operator><name pos:start="83:8" pos:end="83:16">pitch_lag</name><index pos:start="83:17" pos:end="83:19">[<expr pos:start="83:18" pos:end="83:18"><literal type="number" pos:start="83:18" pos:end="83:18">0</literal></expr>]</index></name> <operator pos:start="83:21" pos:end="83:21">=</operator> <call pos:start="83:23" pos:end="83:55"><name pos:start="83:23" pos:end="83:36">estimate_pitch</name><argument_list pos:start="83:37" pos:end="83:55">(<argument pos:start="83:38" pos:end="83:43"><expr pos:start="83:38" pos:end="83:43"><name pos:start="83:38" pos:end="83:43">vector</name></expr></argument>, <argument pos:start="83:46" pos:end="83:54"><expr pos:start="83:46" pos:end="83:54"><name pos:start="83:46" pos:end="83:54">PITCH_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:73"><expr pos:start="85:5" pos:end="85:72"><name pos:start="85:5" pos:end="85:19"><name pos:start="85:5" pos:end="85:5">p</name><operator pos:start="85:6" pos:end="85:7">-&gt;</operator><name pos:start="85:8" pos:end="85:16">pitch_lag</name><index pos:start="85:17" pos:end="85:19">[<expr pos:start="85:18" pos:end="85:18"><literal type="number" pos:start="85:18" pos:end="85:18">1</literal></expr>]</index></name> <operator pos:start="85:21" pos:end="85:21">=</operator> <call pos:start="85:23" pos:end="85:72"><name pos:start="85:23" pos:end="85:36">estimate_pitch</name><argument_list pos:start="85:37" pos:end="85:72">(<argument pos:start="85:38" pos:end="85:43"><expr pos:start="85:38" pos:end="85:43"><name pos:start="85:38" pos:end="85:43">vector</name></expr></argument>, <argument pos:start="85:46" pos:end="85:71"><expr pos:start="85:46" pos:end="85:71"><name pos:start="85:46" pos:end="85:54">PITCH_MAX</name> <operator pos:start="85:56" pos:end="85:56">+</operator> <name pos:start="85:58" pos:end="85:71">HALF_FRAME_LEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="89:5" pos:end="91:70">for <control pos:start="89:9" pos:end="89:69">(<init pos:start="89:10" pos:end="89:30"><expr pos:start="89:10" pos:end="89:22"><name pos:start="89:10" pos:end="89:10">i</name> <operator pos:start="89:12" pos:end="89:12">=</operator> <name pos:start="89:14" pos:end="89:22">PITCH_MAX</name></expr><operator pos:start="89:23" pos:end="89:23">,</operator> <expr pos:start="89:25" pos:end="89:29"><name pos:start="89:25" pos:end="89:25">j</name> <operator pos:start="89:27" pos:end="89:27">=</operator> <literal type="number" pos:start="89:29" pos:end="89:29">0</literal></expr>;</init> <condition pos:start="89:32" pos:end="89:45"><expr pos:start="89:32" pos:end="89:44"><name pos:start="89:32" pos:end="89:32">j</name> <operator pos:start="89:34" pos:end="89:34">&lt;</operator> <name pos:start="89:36" pos:end="89:44">SUBFRAMES</name></expr>;</condition> <incr pos:start="89:47" pos:end="89:68"><expr pos:start="89:47" pos:end="89:63"><name pos:start="89:47" pos:end="89:47">i</name> <operator pos:start="89:49" pos:end="89:50">+=</operator> <name pos:start="89:52" pos:end="89:63">SUBFRAME_LEN</name></expr><operator pos:start="89:64" pos:end="89:64">,</operator> <expr pos:start="89:66" pos:end="89:68"><name pos:start="89:66" pos:end="89:66">j</name><operator pos:start="89:67" pos:end="89:68">++</operator></expr></incr>)</control><block type="pseudo" pos:start="91:9" pos:end="91:70"><block_content pos:start="91:9" pos:end="91:70">

        <expr_stmt pos:start="91:9" pos:end="91:70"><expr pos:start="91:9" pos:end="91:69"><call pos:start="91:9" pos:end="91:69"><name pos:start="91:9" pos:end="91:27">comp_harmonic_coeff</name><argument_list pos:start="91:28" pos:end="91:69">(<argument pos:start="91:29" pos:end="91:38"><expr pos:start="91:29" pos:end="91:38"><name pos:start="91:29" pos:end="91:34">vector</name> <operator pos:start="91:36" pos:end="91:36">+</operator> <name pos:start="91:38" pos:end="91:38">i</name></expr></argument>, <argument pos:start="91:41" pos:end="91:60"><expr pos:start="91:41" pos:end="91:60"><name pos:start="91:41" pos:end="91:60"><name pos:start="91:41" pos:end="91:41">p</name><operator pos:start="91:42" pos:end="91:43">-&gt;</operator><name pos:start="91:44" pos:end="91:52">pitch_lag</name><index pos:start="91:53" pos:end="91:60">[<expr pos:start="91:54" pos:end="91:59"><name pos:start="91:54" pos:end="91:54">j</name> <operator pos:start="91:56" pos:end="91:57">&gt;&gt;</operator> <literal type="number" pos:start="91:59" pos:end="91:59">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="91:63" pos:end="91:68"><expr pos:start="91:63" pos:end="91:68"><name pos:start="91:63" pos:end="91:64">hf</name> <operator pos:start="91:66" pos:end="91:66">+</operator> <name pos:start="91:68" pos:end="91:68">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="95:5" pos:end="95:68"><expr pos:start="95:5" pos:end="95:67"><call pos:start="95:5" pos:end="95:67"><name pos:start="95:5" pos:end="95:10">memcpy</name><argument_list pos:start="95:11" pos:end="95:67">(<argument pos:start="95:12" pos:end="95:17"><expr pos:start="95:12" pos:end="95:17"><name pos:start="95:12" pos:end="95:17">vector</name></expr></argument>, <argument pos:start="95:20" pos:end="95:37"><expr pos:start="95:20" pos:end="95:37"><name pos:start="95:20" pos:end="95:37"><name pos:start="95:20" pos:end="95:20">p</name><operator pos:start="95:21" pos:end="95:22">-&gt;</operator><name pos:start="95:23" pos:end="95:37">prev_weight_sig</name></name></expr></argument>, <argument pos:start="95:40" pos:end="95:66"><expr pos:start="95:40" pos:end="95:66"><sizeof pos:start="95:40" pos:end="95:54">sizeof<argument_list pos:start="95:46" pos:end="95:54">(<argument pos:start="95:47" pos:end="95:53"><expr pos:start="95:47" pos:end="95:53"><name pos:start="95:47" pos:end="95:53">int16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="95:56" pos:end="95:56">*</operator> <name pos:start="95:58" pos:end="95:66">PITCH_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:64"><expr pos:start="97:5" pos:end="97:63"><call pos:start="97:5" pos:end="97:63"><name pos:start="97:5" pos:end="97:10">memcpy</name><argument_list pos:start="97:11" pos:end="97:63">(<argument pos:start="97:12" pos:end="97:29"><expr pos:start="97:12" pos:end="97:29"><name pos:start="97:12" pos:end="97:17">vector</name> <operator pos:start="97:19" pos:end="97:19">+</operator> <name pos:start="97:21" pos:end="97:29">PITCH_MAX</name></expr></argument>, <argument pos:start="97:32" pos:end="97:33"><expr pos:start="97:32" pos:end="97:33"><name pos:start="97:32" pos:end="97:33">in</name></expr></argument>, <argument pos:start="97:36" pos:end="97:62"><expr pos:start="97:36" pos:end="97:62"><sizeof pos:start="97:36" pos:end="97:50">sizeof<argument_list pos:start="97:42" pos:end="97:50">(<argument pos:start="97:43" pos:end="97:49"><expr pos:start="97:43" pos:end="97:49"><name pos:start="97:43" pos:end="97:49">int16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="97:52" pos:end="97:52">*</operator> <name pos:start="97:54" pos:end="97:62">FRAME_LEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:80"><expr pos:start="99:5" pos:end="99:79"><call pos:start="99:5" pos:end="99:79"><name pos:start="99:5" pos:end="99:10">memcpy</name><argument_list pos:start="99:11" pos:end="99:79">(<argument pos:start="99:12" pos:end="99:29"><expr pos:start="99:12" pos:end="99:29"><name pos:start="99:12" pos:end="99:29"><name pos:start="99:12" pos:end="99:12">p</name><operator pos:start="99:13" pos:end="99:14">-&gt;</operator><name pos:start="99:15" pos:end="99:29">prev_weight_sig</name></name></expr></argument>, <argument pos:start="99:32" pos:end="99:49"><expr pos:start="99:32" pos:end="99:49"><name pos:start="99:32" pos:end="99:37">vector</name> <operator pos:start="99:39" pos:end="99:39">+</operator> <name pos:start="99:41" pos:end="99:49">FRAME_LEN</name></expr></argument>, <argument pos:start="99:52" pos:end="99:78"><expr pos:start="99:52" pos:end="99:78"><sizeof pos:start="99:52" pos:end="99:66">sizeof<argument_list pos:start="99:58" pos:end="99:66">(<argument pos:start="99:59" pos:end="99:65"><expr pos:start="99:59" pos:end="99:65"><name pos:start="99:59" pos:end="99:65">int16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="99:68" pos:end="99:68">*</operator> <name pos:start="99:70" pos:end="99:78">PITCH_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="103:5" pos:end="105:64">for <control pos:start="103:9" pos:end="103:61">(<init pos:start="103:10" pos:end="103:22"><expr pos:start="103:10" pos:end="103:14"><name pos:start="103:10" pos:end="103:10">i</name> <operator pos:start="103:12" pos:end="103:12">=</operator> <literal type="number" pos:start="103:14" pos:end="103:14">0</literal></expr><operator pos:start="103:15" pos:end="103:15">,</operator> <expr pos:start="103:17" pos:end="103:21"><name pos:start="103:17" pos:end="103:17">j</name> <operator pos:start="103:19" pos:end="103:19">=</operator> <literal type="number" pos:start="103:21" pos:end="103:21">0</literal></expr>;</init> <condition pos:start="103:24" pos:end="103:37"><expr pos:start="103:24" pos:end="103:36"><name pos:start="103:24" pos:end="103:24">j</name> <operator pos:start="103:26" pos:end="103:26">&lt;</operator> <name pos:start="103:28" pos:end="103:36">SUBFRAMES</name></expr>;</condition> <incr pos:start="103:39" pos:end="103:60"><expr pos:start="103:39" pos:end="103:55"><name pos:start="103:39" pos:end="103:39">i</name> <operator pos:start="103:41" pos:end="103:42">+=</operator> <name pos:start="103:44" pos:end="103:55">SUBFRAME_LEN</name></expr><operator pos:start="103:56" pos:end="103:56">,</operator> <expr pos:start="103:58" pos:end="103:60"><name pos:start="103:58" pos:end="103:58">j</name><operator pos:start="103:59" pos:end="103:60">++</operator></expr></incr>)</control><block type="pseudo" pos:start="105:9" pos:end="105:64"><block_content pos:start="105:9" pos:end="105:64">

        <expr_stmt pos:start="105:9" pos:end="105:64"><expr pos:start="105:9" pos:end="105:63"><call pos:start="105:9" pos:end="105:63"><name pos:start="105:9" pos:end="105:23">harmonic_filter</name><argument_list pos:start="105:24" pos:end="105:63">(<argument pos:start="105:25" pos:end="105:30"><expr pos:start="105:25" pos:end="105:30"><name pos:start="105:25" pos:end="105:26">hf</name> <operator pos:start="105:28" pos:end="105:28">+</operator> <name pos:start="105:30" pos:end="105:30">j</name></expr></argument>, <argument pos:start="105:33" pos:end="105:54"><expr pos:start="105:33" pos:end="105:54"><name pos:start="105:33" pos:end="105:38">vector</name> <operator pos:start="105:40" pos:end="105:40">+</operator> <name pos:start="105:42" pos:end="105:50">PITCH_MAX</name> <operator pos:start="105:52" pos:end="105:52">+</operator> <name pos:start="105:54" pos:end="105:54">i</name></expr></argument>, <argument pos:start="105:57" pos:end="105:62"><expr pos:start="105:57" pos:end="105:62"><name pos:start="105:57" pos:end="105:58">in</name> <operator pos:start="105:60" pos:end="105:60">+</operator> <name pos:start="105:62" pos:end="105:62">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="109:5" pos:end="109:57"><expr pos:start="109:5" pos:end="109:56"><call pos:start="109:5" pos:end="109:56"><name pos:start="109:5" pos:end="109:17">inverse_quant</name><argument_list pos:start="109:18" pos:end="109:56">(<argument pos:start="109:19" pos:end="109:25"><expr pos:start="109:19" pos:end="109:25"><name pos:start="109:19" pos:end="109:25">cur_lsp</name></expr></argument>, <argument pos:start="109:28" pos:end="109:38"><expr pos:start="109:28" pos:end="109:38"><name pos:start="109:28" pos:end="109:38"><name pos:start="109:28" pos:end="109:28">p</name><operator pos:start="109:29" pos:end="109:30">-&gt;</operator><name pos:start="109:31" pos:end="109:38">prev_lsp</name></name></expr></argument>, <argument pos:start="109:41" pos:end="109:52"><expr pos:start="109:41" pos:end="109:52"><name pos:start="109:41" pos:end="109:52"><name pos:start="109:41" pos:end="109:41">p</name><operator pos:start="109:42" pos:end="109:43">-&gt;</operator><name pos:start="109:44" pos:end="109:52">lsp_index</name></name></expr></argument>, <argument pos:start="109:55" pos:end="109:55"><expr pos:start="109:55" pos:end="109:55"><literal type="number" pos:start="109:55" pos:end="109:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:51"><expr pos:start="111:5" pos:end="111:50"><call pos:start="111:5" pos:end="111:50"><name pos:start="111:5" pos:end="111:19">lsp_interpolate</name><argument_list pos:start="111:20" pos:end="111:50">(<argument pos:start="111:21" pos:end="111:27"><expr pos:start="111:21" pos:end="111:27"><name pos:start="111:21" pos:end="111:27">qnt_lpc</name></expr></argument>, <argument pos:start="111:30" pos:end="111:36"><expr pos:start="111:30" pos:end="111:36"><name pos:start="111:30" pos:end="111:36">cur_lsp</name></expr></argument>, <argument pos:start="111:39" pos:end="111:49"><expr pos:start="111:39" pos:end="111:49"><name pos:start="111:39" pos:end="111:49"><name pos:start="111:39" pos:end="111:39">p</name><operator pos:start="111:40" pos:end="111:41">-&gt;</operator><name pos:start="111:42" pos:end="111:49">prev_lsp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="115:5" pos:end="115:62"><expr pos:start="115:5" pos:end="115:61"><call pos:start="115:5" pos:end="115:61"><name pos:start="115:5" pos:end="115:10">memcpy</name><argument_list pos:start="115:11" pos:end="115:61">(<argument pos:start="115:12" pos:end="115:22"><expr pos:start="115:12" pos:end="115:22"><name pos:start="115:12" pos:end="115:22"><name pos:start="115:12" pos:end="115:12">p</name><operator pos:start="115:13" pos:end="115:14">-&gt;</operator><name pos:start="115:15" pos:end="115:22">prev_lsp</name></name></expr></argument>, <argument pos:start="115:25" pos:end="115:31"><expr pos:start="115:25" pos:end="115:31"><name pos:start="115:25" pos:end="115:31">cur_lsp</name></expr></argument>, <argument pos:start="115:34" pos:end="115:60"><expr pos:start="115:34" pos:end="115:60"><sizeof pos:start="115:34" pos:end="115:48">sizeof<argument_list pos:start="115:40" pos:end="115:48">(<argument pos:start="115:41" pos:end="115:47"><expr pos:start="115:41" pos:end="115:47"><name pos:start="115:41" pos:end="115:47">int16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="115:50" pos:end="115:50">*</operator> <name pos:start="115:52" pos:end="115:60">LPC_ORDER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="119:5" pos:end="119:15"><expr pos:start="119:5" pos:end="119:14"><name pos:start="119:5" pos:end="119:10">offset</name> <operator pos:start="119:12" pos:end="119:12">=</operator> <literal type="number" pos:start="119:14" pos:end="119:14">0</literal></expr>;</expr_stmt>

    <for pos:start="121:5" pos:end="237:5">for <control pos:start="121:9" pos:end="121:35">(<init pos:start="121:10" pos:end="121:15"><expr pos:start="121:10" pos:end="121:14"><name pos:start="121:10" pos:end="121:10">i</name> <operator pos:start="121:12" pos:end="121:12">=</operator> <literal type="number" pos:start="121:14" pos:end="121:14">0</literal></expr>;</init> <condition pos:start="121:17" pos:end="121:30"><expr pos:start="121:17" pos:end="121:29"><name pos:start="121:17" pos:end="121:17">i</name> <operator pos:start="121:19" pos:end="121:19">&lt;</operator> <name pos:start="121:21" pos:end="121:29">SUBFRAMES</name></expr>;</condition> <incr pos:start="121:32" pos:end="121:34"><expr pos:start="121:32" pos:end="121:34"><name pos:start="121:32" pos:end="121:32">i</name><operator pos:start="121:33" pos:end="121:34">++</operator></expr></incr>)</control> <block pos:start="121:37" pos:end="237:5">{<block_content pos:start="123:9" pos:end="235:28">

        <decl_stmt pos:start="123:9" pos:end="123:43"><decl pos:start="123:9" pos:end="123:42"><type pos:start="123:9" pos:end="123:15"><name pos:start="123:9" pos:end="123:15">int16_t</name></type> <name pos:start="123:17" pos:end="123:42"><name pos:start="123:17" pos:end="123:28">impulse_resp</name><index pos:start="123:29" pos:end="123:42">[<expr pos:start="123:30" pos:end="123:41"><name pos:start="123:30" pos:end="123:41">SUBFRAME_LEN</name></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="125:9" pos:end="125:57"><decl pos:start="125:9" pos:end="125:56"><type pos:start="125:9" pos:end="125:15"><name pos:start="125:9" pos:end="125:15">int16_t</name></type> <name pos:start="125:17" pos:end="125:56"><name pos:start="125:17" pos:end="125:24">residual</name><index pos:start="125:25" pos:end="125:56">[<expr pos:start="125:26" pos:end="125:55"><name pos:start="125:26" pos:end="125:37">SUBFRAME_LEN</name> <operator pos:start="125:39" pos:end="125:39">+</operator> <name pos:start="125:41" pos:end="125:51">PITCH_ORDER</name> <operator pos:start="125:53" pos:end="125:53">-</operator> <literal type="number" pos:start="125:55" pos:end="125:55">1</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="127:9" pos:end="127:37"><decl pos:start="127:9" pos:end="127:36"><type pos:start="127:9" pos:end="127:15"><name pos:start="127:9" pos:end="127:15">int16_t</name></type> <name pos:start="127:17" pos:end="127:36"><name pos:start="127:17" pos:end="127:22">flt_in</name><index pos:start="127:23" pos:end="127:36">[<expr pos:start="127:24" pos:end="127:35"><name pos:start="127:24" pos:end="127:35">SUBFRAME_LEN</name></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="129:9" pos:end="129:64"><decl pos:start="129:9" pos:end="129:31"><type pos:start="129:9" pos:end="129:15"><name pos:start="129:9" pos:end="129:15">int16_t</name></type> <name pos:start="129:17" pos:end="129:31"><name pos:start="129:17" pos:end="129:20">zero</name><index pos:start="129:21" pos:end="129:31">[<expr pos:start="129:22" pos:end="129:30"><name pos:start="129:22" pos:end="129:30">LPC_ORDER</name></expr>]</index></name></decl>, <decl pos:start="129:34" pos:end="129:47"><type ref="prev" pos:start="129:9" pos:end="129:15"/><name pos:start="129:34" pos:end="129:47"><name pos:start="129:34" pos:end="129:36">fir</name><index pos:start="129:37" pos:end="129:47">[<expr pos:start="129:38" pos:end="129:46"><name pos:start="129:38" pos:end="129:46">LPC_ORDER</name></expr>]</index></name></decl>, <decl pos:start="129:50" pos:end="129:63"><type ref="prev" pos:start="129:9" pos:end="129:15"/><name pos:start="129:50" pos:end="129:63"><name pos:start="129:50" pos:end="129:52">iir</name><index pos:start="129:53" pos:end="129:63">[<expr pos:start="129:54" pos:end="129:62"><name pos:start="129:54" pos:end="129:62">LPC_ORDER</name></expr>]</index></name></decl>;</decl_stmt>



        <comment type="block" format="doxygen" pos:start="133:9" pos:end="139:11">/**

         * Compute the combined impulse response of the synthesis filter,

         * formant perceptual weighting filter and harmonic noise shaping filter

         */</comment>

        <expr_stmt pos:start="141:9" pos:end="141:53"><expr pos:start="141:9" pos:end="141:52"><call pos:start="141:9" pos:end="141:52"><name pos:start="141:9" pos:end="141:14">memset</name><argument_list pos:start="141:15" pos:end="141:52">(<argument pos:start="141:16" pos:end="141:19"><expr pos:start="141:16" pos:end="141:19"><name pos:start="141:16" pos:end="141:19">zero</name></expr></argument>, <argument pos:start="141:22" pos:end="141:22"><expr pos:start="141:22" pos:end="141:22"><literal type="number" pos:start="141:22" pos:end="141:22">0</literal></expr></argument>, <argument pos:start="141:25" pos:end="141:51"><expr pos:start="141:25" pos:end="141:51"><sizeof pos:start="141:25" pos:end="141:39">sizeof<argument_list pos:start="141:31" pos:end="141:39">(<argument pos:start="141:32" pos:end="141:38"><expr pos:start="141:32" pos:end="141:38"><name pos:start="141:32" pos:end="141:38">int16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="141:41" pos:end="141:41">*</operator> <name pos:start="141:43" pos:end="141:51">LPC_ORDER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:55"><expr pos:start="143:9" pos:end="143:54"><call pos:start="143:9" pos:end="143:54"><name pos:start="143:9" pos:end="143:14">memset</name><argument_list pos:start="143:15" pos:end="143:54">(<argument pos:start="143:16" pos:end="143:21"><expr pos:start="143:16" pos:end="143:21"><name pos:start="143:16" pos:end="143:21">vector</name></expr></argument>, <argument pos:start="143:24" pos:end="143:24"><expr pos:start="143:24" pos:end="143:24"><literal type="number" pos:start="143:24" pos:end="143:24">0</literal></expr></argument>, <argument pos:start="143:27" pos:end="143:53"><expr pos:start="143:27" pos:end="143:53"><sizeof pos:start="143:27" pos:end="143:41">sizeof<argument_list pos:start="143:33" pos:end="143:41">(<argument pos:start="143:34" pos:end="143:40"><expr pos:start="143:34" pos:end="143:40"><name pos:start="143:34" pos:end="143:40">int16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="143:43" pos:end="143:43">*</operator> <name pos:start="143:45" pos:end="143:53">PITCH_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:58"><expr pos:start="145:9" pos:end="145:57"><call pos:start="145:9" pos:end="145:57"><name pos:start="145:9" pos:end="145:14">memset</name><argument_list pos:start="145:15" pos:end="145:57">(<argument pos:start="145:16" pos:end="145:21"><expr pos:start="145:16" pos:end="145:21"><name pos:start="145:16" pos:end="145:21">flt_in</name></expr></argument>, <argument pos:start="145:24" pos:end="145:24"><expr pos:start="145:24" pos:end="145:24"><literal type="number" pos:start="145:24" pos:end="145:24">0</literal></expr></argument>, <argument pos:start="145:27" pos:end="145:56"><expr pos:start="145:27" pos:end="145:56"><sizeof pos:start="145:27" pos:end="145:41">sizeof<argument_list pos:start="145:33" pos:end="145:41">(<argument pos:start="145:34" pos:end="145:40"><expr pos:start="145:34" pos:end="145:40"><name pos:start="145:34" pos:end="145:40">int16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="145:43" pos:end="145:43">*</operator> <name pos:start="145:45" pos:end="145:56">SUBFRAME_LEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="149:9" pos:end="149:28"><expr pos:start="149:9" pos:end="149:27"><name pos:start="149:9" pos:end="149:17"><name pos:start="149:9" pos:end="149:14">flt_in</name><index pos:start="149:15" pos:end="149:17">[<expr pos:start="149:16" pos:end="149:16"><literal type="number" pos:start="149:16" pos:end="149:16">0</literal></expr>]</index></name> <operator pos:start="149:19" pos:end="149:19">=</operator> <literal type="number" pos:start="149:21" pos:end="149:21">1</literal> <operator pos:start="149:23" pos:end="149:24">&lt;&lt;</operator> <literal type="number" pos:start="149:26" pos:end="149:27">13</literal></expr>;</expr_stmt> <comment type="block" pos:start="149:30" pos:end="149:47">/* Unit impulse */</comment>

        <expr_stmt pos:start="151:9" pos:end="153:72"><expr pos:start="151:9" pos:end="153:71"><call pos:start="151:9" pos:end="153:71"><name pos:start="151:9" pos:end="151:28">synth_percept_filter</name><argument_list pos:start="151:29" pos:end="153:71">(<argument pos:start="151:30" pos:end="151:45"><expr pos:start="151:30" pos:end="151:45"><name pos:start="151:30" pos:end="151:36">qnt_lpc</name> <operator pos:start="151:38" pos:end="151:38">+</operator> <name pos:start="151:40" pos:end="151:45">offset</name></expr></argument>, <argument pos:start="151:48" pos:end="151:75"><expr pos:start="151:48" pos:end="151:75"><name pos:start="151:48" pos:end="151:59">weighted_lpc</name> <operator pos:start="151:61" pos:end="151:61">+</operator> <operator pos:start="151:63" pos:end="151:63">(</operator><name pos:start="151:64" pos:end="151:69">offset</name> <operator pos:start="151:71" pos:end="151:72">&lt;&lt;</operator> <literal type="number" pos:start="151:74" pos:end="151:74">1</literal><operator pos:start="151:75" pos:end="151:75">)</operator></expr></argument>,

                             <argument pos:start="153:30" pos:end="153:33"><expr pos:start="153:30" pos:end="153:33"><name pos:start="153:30" pos:end="153:33">zero</name></expr></argument>, <argument pos:start="153:36" pos:end="153:39"><expr pos:start="153:36" pos:end="153:39"><name pos:start="153:36" pos:end="153:39">zero</name></expr></argument>, <argument pos:start="153:42" pos:end="153:47"><expr pos:start="153:42" pos:end="153:47"><name pos:start="153:42" pos:end="153:47">flt_in</name></expr></argument>, <argument pos:start="153:50" pos:end="153:67"><expr pos:start="153:50" pos:end="153:67"><name pos:start="153:50" pos:end="153:55">vector</name> <operator pos:start="153:57" pos:end="153:57">+</operator> <name pos:start="153:59" pos:end="153:67">PITCH_MAX</name></expr></argument>, <argument pos:start="153:70" pos:end="153:70"><expr pos:start="153:70" pos:end="153:70"><literal type="number" pos:start="153:70" pos:end="153:70">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:66"><expr pos:start="155:9" pos:end="155:65"><call pos:start="155:9" pos:end="155:65"><name pos:start="155:9" pos:end="155:23">harmonic_filter</name><argument_list pos:start="155:24" pos:end="155:65">(<argument pos:start="155:25" pos:end="155:30"><expr pos:start="155:25" pos:end="155:30"><name pos:start="155:25" pos:end="155:26">hf</name> <operator pos:start="155:28" pos:end="155:28">+</operator> <name pos:start="155:30" pos:end="155:30">i</name></expr></argument>, <argument pos:start="155:33" pos:end="155:50"><expr pos:start="155:33" pos:end="155:50"><name pos:start="155:33" pos:end="155:38">vector</name> <operator pos:start="155:40" pos:end="155:40">+</operator> <name pos:start="155:42" pos:end="155:50">PITCH_MAX</name></expr></argument>, <argument pos:start="155:53" pos:end="155:64"><expr pos:start="155:53" pos:end="155:64"><name pos:start="155:53" pos:end="155:64">impulse_resp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



         <comment type="block" pos:start="159:10" pos:end="159:55">/* Compute the combined zero input response */</comment>

        <expr_stmt pos:start="161:9" pos:end="161:22"><expr pos:start="161:9" pos:end="161:21"><name pos:start="161:9" pos:end="161:17"><name pos:start="161:9" pos:end="161:14">flt_in</name><index pos:start="161:15" pos:end="161:17">[<expr pos:start="161:16" pos:end="161:16"><literal type="number" pos:start="161:16" pos:end="161:16">0</literal></expr>]</index></name> <operator pos:start="161:19" pos:end="161:19">=</operator> <literal type="number" pos:start="161:21" pos:end="161:21">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:66"><expr pos:start="163:9" pos:end="163:65"><call pos:start="163:9" pos:end="163:65"><name pos:start="163:9" pos:end="163:14">memcpy</name><argument_list pos:start="163:15" pos:end="163:65">(<argument pos:start="163:16" pos:end="163:18"><expr pos:start="163:16" pos:end="163:18"><name pos:start="163:16" pos:end="163:18">fir</name></expr></argument>, <argument pos:start="163:21" pos:end="163:35"><expr pos:start="163:21" pos:end="163:35"><name pos:start="163:21" pos:end="163:35"><name pos:start="163:21" pos:end="163:21">p</name><operator pos:start="163:22" pos:end="163:23">-&gt;</operator><name pos:start="163:24" pos:end="163:35">perf_fir_mem</name></name></expr></argument>, <argument pos:start="163:38" pos:end="163:64"><expr pos:start="163:38" pos:end="163:64"><sizeof pos:start="163:38" pos:end="163:52">sizeof<argument_list pos:start="163:44" pos:end="163:52">(<argument pos:start="163:45" pos:end="163:51"><expr pos:start="163:45" pos:end="163:51"><name pos:start="163:45" pos:end="163:51">int16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="163:54" pos:end="163:54">*</operator> <name pos:start="163:56" pos:end="163:64">LPC_ORDER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:66"><expr pos:start="165:9" pos:end="165:65"><call pos:start="165:9" pos:end="165:65"><name pos:start="165:9" pos:end="165:14">memcpy</name><argument_list pos:start="165:15" pos:end="165:65">(<argument pos:start="165:16" pos:end="165:18"><expr pos:start="165:16" pos:end="165:18"><name pos:start="165:16" pos:end="165:18">iir</name></expr></argument>, <argument pos:start="165:21" pos:end="165:35"><expr pos:start="165:21" pos:end="165:35"><name pos:start="165:21" pos:end="165:35"><name pos:start="165:21" pos:end="165:21">p</name><operator pos:start="165:22" pos:end="165:23">-&gt;</operator><name pos:start="165:24" pos:end="165:35">perf_iir_mem</name></name></expr></argument>, <argument pos:start="165:38" pos:end="165:64"><expr pos:start="165:38" pos:end="165:64"><sizeof pos:start="165:38" pos:end="165:52">sizeof<argument_list pos:start="165:44" pos:end="165:52">(<argument pos:start="165:45" pos:end="165:51"><expr pos:start="165:45" pos:end="165:51"><name pos:start="165:45" pos:end="165:51">int16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="165:54" pos:end="165:54">*</operator> <name pos:start="165:56" pos:end="165:64">LPC_ORDER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="169:9" pos:end="171:70"><expr pos:start="169:9" pos:end="171:69"><call pos:start="169:9" pos:end="171:69"><name pos:start="169:9" pos:end="169:28">synth_percept_filter</name><argument_list pos:start="169:29" pos:end="171:69">(<argument pos:start="169:30" pos:end="169:45"><expr pos:start="169:30" pos:end="169:45"><name pos:start="169:30" pos:end="169:36">qnt_lpc</name> <operator pos:start="169:38" pos:end="169:38">+</operator> <name pos:start="169:40" pos:end="169:45">offset</name></expr></argument>, <argument pos:start="169:48" pos:end="169:75"><expr pos:start="169:48" pos:end="169:75"><name pos:start="169:48" pos:end="169:59">weighted_lpc</name> <operator pos:start="169:61" pos:end="169:61">+</operator> <operator pos:start="169:63" pos:end="169:63">(</operator><name pos:start="169:64" pos:end="169:69">offset</name> <operator pos:start="169:71" pos:end="169:72">&lt;&lt;</operator> <literal type="number" pos:start="169:74" pos:end="169:74">1</literal><operator pos:start="169:75" pos:end="169:75">)</operator></expr></argument>,

                             <argument pos:start="171:30" pos:end="171:32"><expr pos:start="171:30" pos:end="171:32"><name pos:start="171:30" pos:end="171:32">fir</name></expr></argument>, <argument pos:start="171:35" pos:end="171:37"><expr pos:start="171:35" pos:end="171:37"><name pos:start="171:35" pos:end="171:37">iir</name></expr></argument>, <argument pos:start="171:40" pos:end="171:45"><expr pos:start="171:40" pos:end="171:45"><name pos:start="171:40" pos:end="171:45">flt_in</name></expr></argument>, <argument pos:start="171:48" pos:end="171:65"><expr pos:start="171:48" pos:end="171:65"><name pos:start="171:48" pos:end="171:53">vector</name> <operator pos:start="171:55" pos:end="171:55">+</operator> <name pos:start="171:57" pos:end="171:65">PITCH_MAX</name></expr></argument>, <argument pos:start="171:68" pos:end="171:68"><expr pos:start="171:68" pos:end="171:68"><literal type="number" pos:start="171:68" pos:end="171:68">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:69"><expr pos:start="173:9" pos:end="173:68"><call pos:start="173:9" pos:end="173:68"><name pos:start="173:9" pos:end="173:14">memcpy</name><argument_list pos:start="173:15" pos:end="173:68">(<argument pos:start="173:16" pos:end="173:21"><expr pos:start="173:16" pos:end="173:21"><name pos:start="173:16" pos:end="173:21">vector</name></expr></argument>, <argument pos:start="173:24" pos:end="173:38"><expr pos:start="173:24" pos:end="173:38"><name pos:start="173:24" pos:end="173:38"><name pos:start="173:24" pos:end="173:24">p</name><operator pos:start="173:25" pos:end="173:26">-&gt;</operator><name pos:start="173:27" pos:end="173:38">harmonic_mem</name></name></expr></argument>, <argument pos:start="173:41" pos:end="173:67"><expr pos:start="173:41" pos:end="173:67"><sizeof pos:start="173:41" pos:end="173:55">sizeof<argument_list pos:start="173:47" pos:end="173:55">(<argument pos:start="173:48" pos:end="173:54"><expr pos:start="173:48" pos:end="173:54"><name pos:start="173:48" pos:end="173:54">int16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="173:57" pos:end="173:57">*</operator> <name pos:start="173:59" pos:end="173:67">PITCH_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:59"><expr pos:start="175:9" pos:end="175:58"><call pos:start="175:9" pos:end="175:58"><name pos:start="175:9" pos:end="175:26">harmonic_noise_sub</name><argument_list pos:start="175:27" pos:end="175:58">(<argument pos:start="175:28" pos:end="175:33"><expr pos:start="175:28" pos:end="175:33"><name pos:start="175:28" pos:end="175:29">hf</name> <operator pos:start="175:31" pos:end="175:31">+</operator> <name pos:start="175:33" pos:end="175:33">i</name></expr></argument>, <argument pos:start="175:36" pos:end="175:53"><expr pos:start="175:36" pos:end="175:53"><name pos:start="175:36" pos:end="175:41">vector</name> <operator pos:start="175:43" pos:end="175:43">+</operator> <name pos:start="175:45" pos:end="175:53">PITCH_MAX</name></expr></argument>, <argument pos:start="175:56" pos:end="175:57"><expr pos:start="175:56" pos:end="175:57"><name pos:start="175:56" pos:end="175:57">in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="179:9" pos:end="179:53"><expr pos:start="179:9" pos:end="179:52"><call pos:start="179:9" pos:end="179:52"><name pos:start="179:9" pos:end="179:18">acb_search</name><argument_list pos:start="179:19" pos:end="179:52">(<argument pos:start="179:20" pos:end="179:20"><expr pos:start="179:20" pos:end="179:20"><name pos:start="179:20" pos:end="179:20">p</name></expr></argument>, <argument pos:start="179:23" pos:end="179:30"><expr pos:start="179:23" pos:end="179:30"><name pos:start="179:23" pos:end="179:30">residual</name></expr></argument>, <argument pos:start="179:33" pos:end="179:44"><expr pos:start="179:33" pos:end="179:44"><name pos:start="179:33" pos:end="179:44">impulse_resp</name></expr></argument>, <argument pos:start="179:47" pos:end="179:48"><expr pos:start="179:47" pos:end="179:48"><name pos:start="179:47" pos:end="179:48">in</name></expr></argument>, <argument pos:start="179:51" pos:end="179:51"><expr pos:start="179:51" pos:end="179:51"><name pos:start="179:51" pos:end="179:51">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="181:9" pos:end="183:57"><expr pos:start="181:9" pos:end="183:56"><call pos:start="181:9" pos:end="183:56"><name pos:start="181:9" pos:end="181:26">gen_acb_excitation</name><argument_list pos:start="181:27" pos:end="183:56">(<argument pos:start="181:28" pos:end="181:35"><expr pos:start="181:28" pos:end="181:35"><name pos:start="181:28" pos:end="181:35">residual</name></expr></argument>, <argument pos:start="181:38" pos:end="181:55"><expr pos:start="181:38" pos:end="181:55"><name pos:start="181:38" pos:end="181:55"><name pos:start="181:38" pos:end="181:38">p</name><operator pos:start="181:39" pos:end="181:40">-&gt;</operator><name pos:start="181:41" pos:end="181:55">prev_excitation</name></name></expr></argument>,<argument pos:start="181:57" pos:end="181:76"><expr pos:start="181:57" pos:end="181:76"><name pos:start="181:57" pos:end="181:76"><name pos:start="181:57" pos:end="181:57">p</name><operator pos:start="181:58" pos:end="181:59">-&gt;</operator><name pos:start="181:60" pos:end="181:68">pitch_lag</name><index pos:start="181:69" pos:end="181:76">[<expr pos:start="181:70" pos:end="181:75"><name pos:start="181:70" pos:end="181:70">i</name> <operator pos:start="181:72" pos:end="181:73">&gt;&gt;</operator> <literal type="number" pos:start="181:75" pos:end="181:75">1</literal></expr>]</index></name></expr></argument>,

                           <argument pos:start="183:28" pos:end="183:42"><expr pos:start="183:28" pos:end="183:42"><operator pos:start="183:28" pos:end="183:28">&amp;</operator><name pos:start="183:29" pos:end="183:42"><name pos:start="183:29" pos:end="183:29">p</name><operator pos:start="183:30" pos:end="183:31">-&gt;</operator><name pos:start="183:32" pos:end="183:39">subframe</name><index pos:start="183:40" pos:end="183:42">[<expr pos:start="183:41" pos:end="183:41"><name pos:start="183:41" pos:end="183:41">i</name></expr>]</index></name></expr></argument>, <argument pos:start="183:45" pos:end="183:55"><expr pos:start="183:45" pos:end="183:55"><name pos:start="183:45" pos:end="183:55"><name pos:start="183:45" pos:end="183:45">p</name><operator pos:start="183:46" pos:end="183:47">-&gt;</operator><name pos:start="183:48" pos:end="183:55">cur_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:52"><expr pos:start="185:9" pos:end="185:51"><call pos:start="185:9" pos:end="185:51"><name pos:start="185:9" pos:end="185:23">sub_acb_contrib</name><argument_list pos:start="185:24" pos:end="185:51">(<argument pos:start="185:25" pos:end="185:32"><expr pos:start="185:25" pos:end="185:32"><name pos:start="185:25" pos:end="185:32">residual</name></expr></argument>, <argument pos:start="185:35" pos:end="185:46"><expr pos:start="185:35" pos:end="185:46"><name pos:start="185:35" pos:end="185:46">impulse_resp</name></expr></argument>, <argument pos:start="185:49" pos:end="185:50"><expr pos:start="185:49" pos:end="185:50"><name pos:start="185:49" pos:end="185:50">in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="189:9" pos:end="189:43"><expr pos:start="189:9" pos:end="189:42"><call pos:start="189:9" pos:end="189:42"><name pos:start="189:9" pos:end="189:18">fcb_search</name><argument_list pos:start="189:19" pos:end="189:42">(<argument pos:start="189:20" pos:end="189:20"><expr pos:start="189:20" pos:end="189:20"><name pos:start="189:20" pos:end="189:20">p</name></expr></argument>, <argument pos:start="189:23" pos:end="189:34"><expr pos:start="189:23" pos:end="189:34"><name pos:start="189:23" pos:end="189:34">impulse_resp</name></expr></argument>, <argument pos:start="189:37" pos:end="189:38"><expr pos:start="189:37" pos:end="189:38"><name pos:start="189:37" pos:end="189:38">in</name></expr></argument>, <argument pos:start="189:41" pos:end="189:41"><expr pos:start="189:41" pos:end="189:41"><name pos:start="189:41" pos:end="189:41">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="193:9" pos:end="193:40">/* Reconstruct the excitation */</comment>

        <expr_stmt pos:start="195:9" pos:end="197:55"><expr pos:start="195:9" pos:end="197:54"><call pos:start="195:9" pos:end="197:54"><name pos:start="195:9" pos:end="195:26">gen_acb_excitation</name><argument_list pos:start="195:27" pos:end="197:54">(<argument pos:start="195:28" pos:end="195:39"><expr pos:start="195:28" pos:end="195:39"><name pos:start="195:28" pos:end="195:39">impulse_resp</name></expr></argument>, <argument pos:start="195:42" pos:end="195:59"><expr pos:start="195:42" pos:end="195:59"><name pos:start="195:42" pos:end="195:59"><name pos:start="195:42" pos:end="195:42">p</name><operator pos:start="195:43" pos:end="195:44">-&gt;</operator><name pos:start="195:45" pos:end="195:59">prev_excitation</name></name></expr></argument>, <argument pos:start="195:62" pos:end="195:81"><expr pos:start="195:62" pos:end="195:81"><name pos:start="195:62" pos:end="195:81"><name pos:start="195:62" pos:end="195:62">p</name><operator pos:start="195:63" pos:end="195:64">-&gt;</operator><name pos:start="195:65" pos:end="195:73">pitch_lag</name><index pos:start="195:74" pos:end="195:81">[<expr pos:start="195:75" pos:end="195:80"><name pos:start="195:75" pos:end="195:75">i</name> <operator pos:start="195:77" pos:end="195:78">&gt;&gt;</operator> <literal type="number" pos:start="195:80" pos:end="195:80">1</literal></expr>]</index></name></expr></argument>,

                           <argument pos:start="197:28" pos:end="197:42"><expr pos:start="197:28" pos:end="197:42"><operator pos:start="197:28" pos:end="197:28">&amp;</operator><name pos:start="197:29" pos:end="197:42"><name pos:start="197:29" pos:end="197:29">p</name><operator pos:start="197:30" pos:end="197:31">-&gt;</operator><name pos:start="197:32" pos:end="197:39">subframe</name><index pos:start="197:40" pos:end="197:42">[<expr pos:start="197:41" pos:end="197:41"><name pos:start="197:41" pos:end="197:41">i</name></expr>]</index></name></expr></argument>, <argument pos:start="197:45" pos:end="197:53"><expr pos:start="197:45" pos:end="197:53"><name pos:start="197:45" pos:end="197:53">RATE_6300</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="201:9" pos:end="203:61"><expr pos:start="201:9" pos:end="203:60"><call pos:start="201:9" pos:end="203:60"><name pos:start="201:9" pos:end="201:15">memmove</name><argument_list pos:start="201:16" pos:end="203:60">(<argument pos:start="201:17" pos:end="201:34"><expr pos:start="201:17" pos:end="201:34"><name pos:start="201:17" pos:end="201:34"><name pos:start="201:17" pos:end="201:17">p</name><operator pos:start="201:18" pos:end="201:19">-&gt;</operator><name pos:start="201:20" pos:end="201:34">prev_excitation</name></name></expr></argument>, <argument pos:start="201:37" pos:end="201:69"><expr pos:start="201:37" pos:end="201:69"><name pos:start="201:37" pos:end="201:54"><name pos:start="201:37" pos:end="201:37">p</name><operator pos:start="201:38" pos:end="201:39">-&gt;</operator><name pos:start="201:40" pos:end="201:54">prev_excitation</name></name> <operator pos:start="201:56" pos:end="201:56">+</operator> <name pos:start="201:58" pos:end="201:69">SUBFRAME_LEN</name></expr></argument>,

               <argument pos:start="203:16" pos:end="203:59"><expr pos:start="203:16" pos:end="203:59"><sizeof pos:start="203:16" pos:end="203:30">sizeof<argument_list pos:start="203:22" pos:end="203:30">(<argument pos:start="203:23" pos:end="203:29"><expr pos:start="203:23" pos:end="203:29"><name pos:start="203:23" pos:end="203:29">int16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="203:32" pos:end="203:32">*</operator> <operator pos:start="203:34" pos:end="203:34">(</operator><name pos:start="203:35" pos:end="203:43">PITCH_MAX</name> <operator pos:start="203:45" pos:end="203:45">-</operator> <name pos:start="203:47" pos:end="203:58">SUBFRAME_LEN</name><operator pos:start="203:59" pos:end="203:59">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="205:9" pos:end="207:66">for <control pos:start="205:13" pos:end="205:42">(<init pos:start="205:14" pos:end="205:19"><expr pos:start="205:14" pos:end="205:18"><name pos:start="205:14" pos:end="205:14">j</name> <operator pos:start="205:16" pos:end="205:16">=</operator> <literal type="number" pos:start="205:18" pos:end="205:18">0</literal></expr>;</init> <condition pos:start="205:21" pos:end="205:37"><expr pos:start="205:21" pos:end="205:36"><name pos:start="205:21" pos:end="205:21">j</name> <operator pos:start="205:23" pos:end="205:23">&lt;</operator> <name pos:start="205:25" pos:end="205:36">SUBFRAME_LEN</name></expr>;</condition> <incr pos:start="205:39" pos:end="205:41"><expr pos:start="205:39" pos:end="205:41"><name pos:start="205:39" pos:end="205:39">j</name><operator pos:start="205:40" pos:end="205:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="207:13" pos:end="207:66"><block_content pos:start="207:13" pos:end="207:66">

            <expr_stmt pos:start="207:13" pos:end="207:66"><expr pos:start="207:13" pos:end="207:65"><name pos:start="207:13" pos:end="207:17"><name pos:start="207:13" pos:end="207:14">in</name><index pos:start="207:15" pos:end="207:17">[<expr pos:start="207:16" pos:end="207:16"><name pos:start="207:16" pos:end="207:16">j</name></expr>]</index></name> <operator pos:start="207:19" pos:end="207:19">=</operator> <call pos:start="207:21" pos:end="207:65"><name pos:start="207:21" pos:end="207:33">av_clip_int16</name><argument_list pos:start="207:34" pos:end="207:65">(<argument pos:start="207:35" pos:end="207:64"><expr pos:start="207:35" pos:end="207:64"><operator pos:start="207:35" pos:end="207:35">(</operator><name pos:start="207:36" pos:end="207:40"><name pos:start="207:36" pos:end="207:37">in</name><index pos:start="207:38" pos:end="207:40">[<expr pos:start="207:39" pos:end="207:39"><name pos:start="207:39" pos:end="207:39">j</name></expr>]</index></name> <operator pos:start="207:42" pos:end="207:43">&lt;&lt;</operator> <literal type="number" pos:start="207:45" pos:end="207:45">1</literal><operator pos:start="207:46" pos:end="207:46">)</operator> <operator pos:start="207:48" pos:end="207:48">+</operator> <name pos:start="207:50" pos:end="207:64"><name pos:start="207:50" pos:end="207:61">impulse_resp</name><index pos:start="207:62" pos:end="207:64">[<expr pos:start="207:63" pos:end="207:63"><name pos:start="207:63" pos:end="207:63">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="209:9" pos:end="211:47"><expr pos:start="209:9" pos:end="211:46"><call pos:start="209:9" pos:end="211:46"><name pos:start="209:9" pos:end="209:14">memcpy</name><argument_list pos:start="209:15" pos:end="211:46">(<argument pos:start="209:16" pos:end="209:60"><expr pos:start="209:16" pos:end="209:60"><name pos:start="209:16" pos:end="209:33"><name pos:start="209:16" pos:end="209:16">p</name><operator pos:start="209:17" pos:end="209:18">-&gt;</operator><name pos:start="209:19" pos:end="209:33">prev_excitation</name></name> <operator pos:start="209:35" pos:end="209:35">+</operator> <name pos:start="209:37" pos:end="209:45">PITCH_MAX</name> <operator pos:start="209:47" pos:end="209:47">-</operator> <name pos:start="209:49" pos:end="209:60">SUBFRAME_LEN</name></expr></argument>, <argument pos:start="209:63" pos:end="209:64"><expr pos:start="209:63" pos:end="209:64"><name pos:start="209:63" pos:end="209:64">in</name></expr></argument>,

               <argument pos:start="211:16" pos:end="211:45"><expr pos:start="211:16" pos:end="211:45"><sizeof pos:start="211:16" pos:end="211:30">sizeof<argument_list pos:start="211:22" pos:end="211:30">(<argument pos:start="211:23" pos:end="211:29"><expr pos:start="211:23" pos:end="211:29"><name pos:start="211:23" pos:end="211:29">int16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="211:32" pos:end="211:32">*</operator> <name pos:start="211:34" pos:end="211:45">SUBFRAME_LEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="215:9" pos:end="215:36">/* Update filter memories */</comment>

        <expr_stmt pos:start="217:9" pos:end="221:56"><expr pos:start="217:9" pos:end="221:55"><call pos:start="217:9" pos:end="221:55"><name pos:start="217:9" pos:end="217:28">synth_percept_filter</name><argument_list pos:start="217:29" pos:end="221:55">(<argument pos:start="217:30" pos:end="217:45"><expr pos:start="217:30" pos:end="217:45"><name pos:start="217:30" pos:end="217:36">qnt_lpc</name> <operator pos:start="217:38" pos:end="217:38">+</operator> <name pos:start="217:40" pos:end="217:45">offset</name></expr></argument>, <argument pos:start="217:48" pos:end="217:75"><expr pos:start="217:48" pos:end="217:75"><name pos:start="217:48" pos:end="217:59">weighted_lpc</name> <operator pos:start="217:61" pos:end="217:61">+</operator> <operator pos:start="217:63" pos:end="217:63">(</operator><name pos:start="217:64" pos:end="217:69">offset</name> <operator pos:start="217:71" pos:end="217:72">&lt;&lt;</operator> <literal type="number" pos:start="217:74" pos:end="217:74">1</literal><operator pos:start="217:75" pos:end="217:75">)</operator></expr></argument>,

                             <argument pos:start="219:30" pos:end="219:44"><expr pos:start="219:30" pos:end="219:44"><name pos:start="219:30" pos:end="219:44"><name pos:start="219:30" pos:end="219:30">p</name><operator pos:start="219:31" pos:end="219:32">-&gt;</operator><name pos:start="219:33" pos:end="219:44">perf_fir_mem</name></name></expr></argument>, <argument pos:start="219:47" pos:end="219:61"><expr pos:start="219:47" pos:end="219:61"><name pos:start="219:47" pos:end="219:61"><name pos:start="219:47" pos:end="219:47">p</name><operator pos:start="219:48" pos:end="219:49">-&gt;</operator><name pos:start="219:50" pos:end="219:61">perf_iir_mem</name></name></expr></argument>,

                             <argument pos:start="221:30" pos:end="221:31"><expr pos:start="221:30" pos:end="221:31"><name pos:start="221:30" pos:end="221:31">in</name></expr></argument>, <argument pos:start="221:34" pos:end="221:51"><expr pos:start="221:34" pos:end="221:51"><name pos:start="221:34" pos:end="221:39">vector</name> <operator pos:start="221:41" pos:end="221:41">+</operator> <name pos:start="221:43" pos:end="221:51">PITCH_MAX</name></expr></argument>, <argument pos:start="221:54" pos:end="221:54"><expr pos:start="221:54" pos:end="221:54"><literal type="number" pos:start="221:54" pos:end="221:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="223:9" pos:end="225:62"><expr pos:start="223:9" pos:end="225:61"><call pos:start="223:9" pos:end="225:61"><name pos:start="223:9" pos:end="223:15">memmove</name><argument_list pos:start="223:16" pos:end="225:61">(<argument pos:start="223:17" pos:end="223:31"><expr pos:start="223:17" pos:end="223:31"><name pos:start="223:17" pos:end="223:31"><name pos:start="223:17" pos:end="223:17">p</name><operator pos:start="223:18" pos:end="223:19">-&gt;</operator><name pos:start="223:20" pos:end="223:31">harmonic_mem</name></name></expr></argument>, <argument pos:start="223:34" pos:end="223:63"><expr pos:start="223:34" pos:end="223:63"><name pos:start="223:34" pos:end="223:48"><name pos:start="223:34" pos:end="223:34">p</name><operator pos:start="223:35" pos:end="223:36">-&gt;</operator><name pos:start="223:37" pos:end="223:48">harmonic_mem</name></name> <operator pos:start="223:50" pos:end="223:50">+</operator> <name pos:start="223:52" pos:end="223:63">SUBFRAME_LEN</name></expr></argument>,

                <argument pos:start="225:17" pos:end="225:60"><expr pos:start="225:17" pos:end="225:60"><sizeof pos:start="225:17" pos:end="225:31">sizeof<argument_list pos:start="225:23" pos:end="225:31">(<argument pos:start="225:24" pos:end="225:30"><expr pos:start="225:24" pos:end="225:30"><name pos:start="225:24" pos:end="225:30">int16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="225:33" pos:end="225:33">*</operator> <operator pos:start="225:35" pos:end="225:35">(</operator><name pos:start="225:36" pos:end="225:44">PITCH_MAX</name> <operator pos:start="225:46" pos:end="225:46">-</operator> <name pos:start="225:48" pos:end="225:59">SUBFRAME_LEN</name><operator pos:start="225:60" pos:end="225:60">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="227:9" pos:end="229:47"><expr pos:start="227:9" pos:end="229:46"><call pos:start="227:9" pos:end="229:46"><name pos:start="227:9" pos:end="227:14">memcpy</name><argument_list pos:start="227:15" pos:end="229:46">(<argument pos:start="227:16" pos:end="227:57"><expr pos:start="227:16" pos:end="227:57"><name pos:start="227:16" pos:end="227:30"><name pos:start="227:16" pos:end="227:16">p</name><operator pos:start="227:17" pos:end="227:18">-&gt;</operator><name pos:start="227:19" pos:end="227:30">harmonic_mem</name></name> <operator pos:start="227:32" pos:end="227:32">+</operator> <name pos:start="227:34" pos:end="227:42">PITCH_MAX</name> <operator pos:start="227:44" pos:end="227:44">-</operator> <name pos:start="227:46" pos:end="227:57">SUBFRAME_LEN</name></expr></argument>, <argument pos:start="227:60" pos:end="227:77"><expr pos:start="227:60" pos:end="227:77"><name pos:start="227:60" pos:end="227:65">vector</name> <operator pos:start="227:67" pos:end="227:67">+</operator> <name pos:start="227:69" pos:end="227:77">PITCH_MAX</name></expr></argument>,

               <argument pos:start="229:16" pos:end="229:45"><expr pos:start="229:16" pos:end="229:45"><sizeof pos:start="229:16" pos:end="229:30">sizeof<argument_list pos:start="229:22" pos:end="229:30">(<argument pos:start="229:23" pos:end="229:29"><expr pos:start="229:23" pos:end="229:29"><name pos:start="229:23" pos:end="229:29">int16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="229:32" pos:end="229:32">*</operator> <name pos:start="229:34" pos:end="229:45">SUBFRAME_LEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="233:9" pos:end="233:27"><expr pos:start="233:9" pos:end="233:26"><name pos:start="233:9" pos:end="233:10">in</name> <operator pos:start="233:12" pos:end="233:13">+=</operator> <name pos:start="233:15" pos:end="233:26">SUBFRAME_LEN</name></expr>;</expr_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:28"><expr pos:start="235:9" pos:end="235:27"><name pos:start="235:9" pos:end="235:14">offset</name> <operator pos:start="235:16" pos:end="235:17">+=</operator> <name pos:start="235:19" pos:end="235:27">LPC_ORDER</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="241:5" pos:end="243:19"><if pos:start="241:5" pos:end="243:19">if <condition pos:start="241:8" pos:end="241:51">(<expr pos:start="241:9" pos:end="241:50"><operator pos:start="241:9" pos:end="241:9">(</operator><name pos:start="241:10" pos:end="241:12">ret</name> <operator pos:start="241:14" pos:end="241:14">=</operator> <call pos:start="241:16" pos:end="241:49"><name pos:start="241:16" pos:end="241:31">ff_alloc_packet2</name><argument_list pos:start="241:32" pos:end="241:49">(<argument pos:start="241:33" pos:end="241:37"><expr pos:start="241:33" pos:end="241:37"><name pos:start="241:33" pos:end="241:37">avctx</name></expr></argument>, <argument pos:start="241:40" pos:end="241:44"><expr pos:start="241:40" pos:end="241:44"><name pos:start="241:40" pos:end="241:44">avpkt</name></expr></argument>, <argument pos:start="241:47" pos:end="241:48"><expr pos:start="241:47" pos:end="241:48"><literal type="number" pos:start="241:47" pos:end="241:48">24</literal></expr></argument>)</argument_list></call><operator pos:start="241:50" pos:end="241:50">)</operator></expr>)</condition><block type="pseudo" pos:start="243:9" pos:end="243:19"><block_content pos:start="243:9" pos:end="243:19">

        <return pos:start="243:9" pos:end="243:19">return <expr pos:start="243:16" pos:end="243:18"><name pos:start="243:16" pos:end="243:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="247:5" pos:end="247:24"><expr pos:start="247:5" pos:end="247:23"><operator pos:start="247:5" pos:end="247:5">*</operator><name pos:start="247:6" pos:end="247:19">got_packet_ptr</name> <operator pos:start="247:21" pos:end="247:21">=</operator> <literal type="number" pos:start="247:23" pos:end="247:23">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="249:5" pos:end="249:62"><expr pos:start="249:5" pos:end="249:61"><name pos:start="249:5" pos:end="249:15"><name pos:start="249:5" pos:end="249:9">avpkt</name><operator pos:start="249:10" pos:end="249:11">-&gt;</operator><name pos:start="249:12" pos:end="249:15">size</name></name> <operator pos:start="249:17" pos:end="249:17">=</operator> <call pos:start="249:19" pos:end="249:61"><name pos:start="249:19" pos:end="249:32">pack_bitstream</name><argument_list pos:start="249:33" pos:end="249:61">(<argument pos:start="249:34" pos:end="249:34"><expr pos:start="249:34" pos:end="249:34"><name pos:start="249:34" pos:end="249:34">p</name></expr></argument>, <argument pos:start="249:37" pos:end="249:47"><expr pos:start="249:37" pos:end="249:47"><name pos:start="249:37" pos:end="249:47"><name pos:start="249:37" pos:end="249:41">avpkt</name><operator pos:start="249:42" pos:end="249:43">-&gt;</operator><name pos:start="249:44" pos:end="249:47">data</name></name></expr></argument>, <argument pos:start="249:50" pos:end="249:60"><expr pos:start="249:50" pos:end="249:60"><name pos:start="249:50" pos:end="249:60"><name pos:start="249:50" pos:end="249:54">avpkt</name><operator pos:start="249:55" pos:end="249:56">-&gt;</operator><name pos:start="249:57" pos:end="249:60">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="251:5" pos:end="251:13">return <expr pos:start="251:12" pos:end="251:12"><literal type="number" pos:start="251:12" pos:end="251:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
