<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12885.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:17">escape</name><parameter_list pos:start="1:18" pos:end="3:39">(<parameter pos:start="1:19" pos:end="1:28"><decl pos:start="1:19" pos:end="1:28"><type pos:start="1:19" pos:end="1:28"><name pos:start="1:19" pos:end="1:22">char</name> <modifier pos:start="1:24" pos:end="1:24">*</modifier><modifier pos:start="1:25" pos:end="1:25">*</modifier></type><name pos:start="1:26" pos:end="1:28">dst</name></decl></parameter>, <parameter pos:start="1:31" pos:end="1:45"><decl pos:start="1:31" pos:end="1:45"><type pos:start="1:31" pos:end="1:45"><specifier pos:start="1:31" pos:end="1:35">const</specifier> <name pos:start="1:37" pos:end="1:40">char</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">src</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:72"><decl pos:start="1:48" pos:end="1:72"><type pos:start="1:48" pos:end="1:72"><specifier pos:start="1:48" pos:end="1:52">const</specifier> <name pos:start="1:54" pos:end="1:57">char</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:72">special_chars</name></decl></parameter>,

                  <parameter pos:start="3:19" pos:end="3:38"><decl pos:start="3:19" pos:end="3:38"><type pos:start="3:19" pos:end="3:38"><name pos:start="3:19" pos:end="3:33"><name pos:start="3:19" pos:end="3:22">enum</name> <name pos:start="3:24" pos:end="3:33">EscapeMode</name></name></type> <name pos:start="3:35" pos:end="3:38">mode</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="111:1">{<block_content pos:start="7:5" pos:end="109:5">

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">AVBPrint</name></type> <name pos:start="7:14" pos:end="7:19">dstbuf</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:57"><expr pos:start="11:5" pos:end="11:56"><call pos:start="11:5" pos:end="11:56"><name pos:start="11:5" pos:end="11:18">av_bprint_init</name><argument_list pos:start="11:19" pos:end="11:56">(<argument pos:start="11:20" pos:end="11:26"><expr pos:start="11:20" pos:end="11:26"><operator pos:start="11:20" pos:end="11:20">&amp;</operator><name pos:start="11:21" pos:end="11:26">dstbuf</name></expr></argument>, <argument pos:start="11:29" pos:end="11:29"><expr pos:start="11:29" pos:end="11:29"><literal type="number" pos:start="11:29" pos:end="11:29">1</literal></expr></argument>, <argument pos:start="11:32" pos:end="11:55"><expr pos:start="11:32" pos:end="11:55"><name pos:start="11:32" pos:end="11:55">AV_BPRINT_SIZE_UNLIMITED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="15:5" pos:end="93:5">switch <condition pos:start="15:12" pos:end="15:17">(<expr pos:start="15:13" pos:end="15:16"><name pos:start="15:13" pos:end="15:16">mode</name></expr>)</condition> <block pos:start="15:19" pos:end="93:5">{<block_content pos:start="17:5" pos:end="91:31">

    <case pos:start="17:5" pos:end="17:26">case <expr pos:start="17:10" pos:end="17:25"><name pos:start="17:10" pos:end="17:25">ESCAPE_MODE_FULL</name></expr>:</case>

    <case pos:start="19:5" pos:end="19:26">case <expr pos:start="19:10" pos:end="19:25"><name pos:start="19:10" pos:end="19:25">ESCAPE_MODE_LAZY</name></expr>:</case>

        <comment type="block" pos:start="21:9" pos:end="21:33">/* \-escape characters */</comment>



        <if_stmt pos:start="25:9" pos:end="27:48"><if pos:start="25:9" pos:end="27:48">if <condition pos:start="25:12" pos:end="25:66">(<expr pos:start="25:13" pos:end="25:65"><name pos:start="25:13" pos:end="25:16">mode</name> <operator pos:start="25:18" pos:end="25:19">==</operator> <name pos:start="25:21" pos:end="25:36">ESCAPE_MODE_LAZY</name> <operator pos:start="25:38" pos:end="25:39">&amp;&amp;</operator> <call pos:start="25:41" pos:end="25:65"><name pos:start="25:41" pos:end="25:46">strchr</name><argument_list pos:start="25:47" pos:end="25:65">(<argument pos:start="25:48" pos:end="25:58"><expr pos:start="25:48" pos:end="25:58"><name pos:start="25:48" pos:end="25:58">WHITESPACES</name></expr></argument>, <argument pos:start="25:61" pos:end="25:64"><expr pos:start="25:61" pos:end="25:64"><operator pos:start="25:61" pos:end="25:61">*</operator><name pos:start="25:62" pos:end="25:64">src</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:48"><block_content pos:start="27:13" pos:end="27:48">

            <expr_stmt pos:start="27:13" pos:end="27:48"><expr pos:start="27:13" pos:end="27:47"><call pos:start="27:13" pos:end="27:47"><name pos:start="27:13" pos:end="27:22">av_bprintf</name><argument_list pos:start="27:23" pos:end="27:47">(<argument pos:start="27:24" pos:end="27:30"><expr pos:start="27:24" pos:end="27:30"><operator pos:start="27:24" pos:end="27:24">&amp;</operator><name pos:start="27:25" pos:end="27:30">dstbuf</name></expr></argument>, <argument pos:start="27:33" pos:end="27:38"><expr pos:start="27:33" pos:end="27:38"><literal type="string" pos:start="27:33" pos:end="27:38">"\\%c"</literal></expr></argument>, <argument pos:start="27:41" pos:end="27:46"><expr pos:start="27:41" pos:end="27:46"><operator pos:start="27:41" pos:end="27:41">*</operator><name pos:start="27:42" pos:end="27:44">src</name><operator pos:start="27:45" pos:end="27:46">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <for pos:start="31:9" pos:end="45:9">for <control pos:start="31:13" pos:end="31:27">(<init pos:start="31:14" pos:end="31:14">;</init> <condition pos:start="31:16" pos:end="31:20"><expr pos:start="31:16" pos:end="31:19"><operator pos:start="31:16" pos:end="31:16">*</operator><name pos:start="31:17" pos:end="31:19">src</name></expr>;</condition> <incr pos:start="31:22" pos:end="31:26"><expr pos:start="31:22" pos:end="31:26"><name pos:start="31:22" pos:end="31:24">src</name><operator pos:start="31:25" pos:end="31:26">++</operator></expr></incr>)</control> <block pos:start="31:29" pos:end="45:9">{<block_content pos:start="33:13" pos:end="43:50">

            <if_stmt pos:start="33:13" pos:end="43:50"><if pos:start="33:13" pos:end="39:50">if <condition pos:start="33:16" pos:end="37:72">(<expr pos:start="33:17" pos:end="37:71"><operator pos:start="33:17" pos:end="33:17">(</operator><name pos:start="33:18" pos:end="33:30">special_chars</name> <operator pos:start="33:32" pos:end="33:33">&amp;&amp;</operator> <call pos:start="33:35" pos:end="33:61"><name pos:start="33:35" pos:end="33:40">strchr</name><argument_list pos:start="33:41" pos:end="33:61">(<argument pos:start="33:42" pos:end="33:54"><expr pos:start="33:42" pos:end="33:54"><name pos:start="33:42" pos:end="33:54">special_chars</name></expr></argument>, <argument pos:start="33:57" pos:end="33:60"><expr pos:start="33:57" pos:end="33:60"><operator pos:start="33:57" pos:end="33:57">*</operator><name pos:start="33:58" pos:end="33:60">src</name></expr></argument>)</argument_list></call><operator pos:start="33:62" pos:end="33:62">)</operator> <operator pos:start="33:64" pos:end="33:65">||</operator>

                <call pos:start="35:17" pos:end="35:35"><name pos:start="35:17" pos:end="35:22">strchr</name><argument_list pos:start="35:23" pos:end="35:35">(<argument pos:start="35:24" pos:end="35:28"><expr pos:start="35:24" pos:end="35:28"><literal type="string" pos:start="35:24" pos:end="35:28">"'\\"</literal></expr></argument>, <argument pos:start="35:31" pos:end="35:34"><expr pos:start="35:31" pos:end="35:34"><operator pos:start="35:31" pos:end="35:31">*</operator><name pos:start="35:32" pos:end="35:34">src</name></expr></argument>)</argument_list></call> <operator pos:start="35:37" pos:end="35:38">||</operator>

                <operator pos:start="37:17" pos:end="37:17">(</operator><name pos:start="37:18" pos:end="37:21">mode</name> <operator pos:start="37:23" pos:end="37:24">==</operator> <name pos:start="37:26" pos:end="37:41">ESCAPE_MODE_FULL</name> <operator pos:start="37:43" pos:end="37:44">&amp;&amp;</operator> <call pos:start="37:46" pos:end="37:70"><name pos:start="37:46" pos:end="37:51">strchr</name><argument_list pos:start="37:52" pos:end="37:70">(<argument pos:start="37:53" pos:end="37:63"><expr pos:start="37:53" pos:end="37:63"><name pos:start="37:53" pos:end="37:63">WHITESPACES</name></expr></argument>, <argument pos:start="37:66" pos:end="37:69"><expr pos:start="37:66" pos:end="37:69"><operator pos:start="37:66" pos:end="37:66">*</operator><name pos:start="37:67" pos:end="37:69">src</name></expr></argument>)</argument_list></call><operator pos:start="37:71" pos:end="37:71">)</operator></expr>)</condition><block type="pseudo" pos:start="39:17" pos:end="39:50"><block_content pos:start="39:17" pos:end="39:50">

                <expr_stmt pos:start="39:17" pos:end="39:50"><expr pos:start="39:17" pos:end="39:49"><call pos:start="39:17" pos:end="39:49"><name pos:start="39:17" pos:end="39:26">av_bprintf</name><argument_list pos:start="39:27" pos:end="39:49">(<argument pos:start="39:28" pos:end="39:34"><expr pos:start="39:28" pos:end="39:34"><operator pos:start="39:28" pos:end="39:28">&amp;</operator><name pos:start="39:29" pos:end="39:34">dstbuf</name></expr></argument>, <argument pos:start="39:37" pos:end="39:42"><expr pos:start="39:37" pos:end="39:42"><literal type="string" pos:start="39:37" pos:end="39:42">"\\%c"</literal></expr></argument>, <argument pos:start="39:45" pos:end="39:48"><expr pos:start="39:45" pos:end="39:48"><operator pos:start="39:45" pos:end="39:45">*</operator><name pos:start="39:46" pos:end="39:48">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="41:13" pos:end="43:50">else<block type="pseudo" pos:start="43:17" pos:end="43:50"><block_content pos:start="43:17" pos:end="43:50">

                <expr_stmt pos:start="43:17" pos:end="43:50"><expr pos:start="43:17" pos:end="43:49"><call pos:start="43:17" pos:end="43:49"><name pos:start="43:17" pos:end="43:31">av_bprint_chars</name><argument_list pos:start="43:32" pos:end="43:49">(<argument pos:start="43:33" pos:end="43:39"><expr pos:start="43:33" pos:end="43:39"><operator pos:start="43:33" pos:end="43:33">&amp;</operator><name pos:start="43:34" pos:end="43:39">dstbuf</name></expr></argument>, <argument pos:start="43:42" pos:end="43:45"><expr pos:start="43:42" pos:end="43:45"><operator pos:start="43:42" pos:end="43:42">*</operator><name pos:start="43:43" pos:end="43:45">src</name></expr></argument>, <argument pos:start="43:48" pos:end="43:48"><expr pos:start="43:48" pos:end="43:48"><literal type="number" pos:start="43:48" pos:end="43:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="49:9" pos:end="57:9"><if pos:start="49:9" pos:end="57:9">if <condition pos:start="49:12" pos:end="49:86">(<expr pos:start="49:13" pos:end="49:85"><name pos:start="49:13" pos:end="49:16">mode</name> <operator pos:start="49:18" pos:end="49:19">==</operator> <name pos:start="49:21" pos:end="49:36">ESCAPE_MODE_LAZY</name> <operator pos:start="49:38" pos:end="49:39">&amp;&amp;</operator> <call pos:start="49:41" pos:end="49:85"><name pos:start="49:41" pos:end="49:46">strchr</name><argument_list pos:start="49:47" pos:end="49:85">(<argument pos:start="49:48" pos:end="49:58"><expr pos:start="49:48" pos:end="49:58"><name pos:start="49:48" pos:end="49:58">WHITESPACES</name></expr></argument>, <argument pos:start="49:61" pos:end="49:84"><expr pos:start="49:61" pos:end="49:84"><name pos:start="49:61" pos:end="49:84"><name pos:start="49:61" pos:end="49:66">dstbuf</name><operator pos:start="49:67" pos:end="49:67">.</operator><name pos:start="49:68" pos:end="49:70">str</name><index pos:start="49:71" pos:end="49:84">[<expr pos:start="49:72" pos:end="49:83"><name pos:start="49:72" pos:end="49:81"><name pos:start="49:72" pos:end="49:77">dstbuf</name><operator pos:start="49:78" pos:end="49:78">.</operator><name pos:start="49:79" pos:end="49:81">len</name></name><operator pos:start="49:82" pos:end="49:82">-</operator><literal type="number" pos:start="49:83" pos:end="49:83">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:88" pos:end="57:9">{<block_content pos:start="51:13" pos:end="55:43">

            <decl_stmt pos:start="51:13" pos:end="51:46"><decl pos:start="51:13" pos:end="51:45"><type pos:start="51:13" pos:end="51:16"><name pos:start="51:13" pos:end="51:16">char</name></type> <name pos:start="51:18" pos:end="51:18">c</name> <init pos:start="51:20" pos:end="51:45">= <expr pos:start="51:22" pos:end="51:45"><name pos:start="51:22" pos:end="51:45"><name pos:start="51:22" pos:end="51:27">dstbuf</name><operator pos:start="51:28" pos:end="51:28">.</operator><name pos:start="51:29" pos:end="51:31">str</name><index pos:start="51:32" pos:end="51:45">[<expr pos:start="51:33" pos:end="51:44"><name pos:start="51:33" pos:end="51:42"><name pos:start="51:33" pos:end="51:38">dstbuf</name><operator pos:start="51:39" pos:end="51:39">.</operator><name pos:start="51:40" pos:end="51:42">len</name></name><operator pos:start="51:43" pos:end="51:43">-</operator><literal type="number" pos:start="51:44" pos:end="51:44">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:44"><expr pos:start="53:13" pos:end="53:43"><name pos:start="53:13" pos:end="53:36"><name pos:start="53:13" pos:end="53:18">dstbuf</name><operator pos:start="53:19" pos:end="53:19">.</operator><name pos:start="53:20" pos:end="53:22">str</name><index pos:start="53:23" pos:end="53:36">[<expr pos:start="53:24" pos:end="53:35"><name pos:start="53:24" pos:end="53:33"><name pos:start="53:24" pos:end="53:29">dstbuf</name><operator pos:start="53:30" pos:end="53:30">.</operator><name pos:start="53:31" pos:end="53:33">len</name></name><operator pos:start="53:34" pos:end="53:34">-</operator><literal type="number" pos:start="53:35" pos:end="53:35">1</literal></expr>]</index></name> <operator pos:start="53:38" pos:end="53:38">=</operator> <literal type="char" pos:start="53:40" pos:end="53:43">'\\'</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:43"><expr pos:start="55:13" pos:end="55:42"><call pos:start="55:13" pos:end="55:42"><name pos:start="55:13" pos:end="55:27">av_bprint_chars</name><argument_list pos:start="55:28" pos:end="55:42">(<argument pos:start="55:29" pos:end="55:35"><expr pos:start="55:29" pos:end="55:35"><operator pos:start="55:29" pos:end="55:29">&amp;</operator><name pos:start="55:30" pos:end="55:35">dstbuf</name></expr></argument>, <argument pos:start="55:38" pos:end="55:38"><expr pos:start="55:38" pos:end="55:38"><name pos:start="55:38" pos:end="55:38">c</name></expr></argument>, <argument pos:start="55:41" pos:end="55:41"><expr pos:start="55:41" pos:end="55:41"><literal type="number" pos:start="55:41" pos:end="55:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="59:9" pos:end="59:14">break;</break>



    <case pos:start="63:5" pos:end="63:27">case <expr pos:start="63:10" pos:end="63:26"><name pos:start="63:10" pos:end="63:26">ESCAPE_MODE_QUOTE</name></expr>:</case>

        <comment type="block" pos:start="65:9" pos:end="65:43">/* enclose between '' the string */</comment>

        <expr_stmt pos:start="67:9" pos:end="67:42"><expr pos:start="67:9" pos:end="67:41"><call pos:start="67:9" pos:end="67:41"><name pos:start="67:9" pos:end="67:23">av_bprint_chars</name><argument_list pos:start="67:24" pos:end="67:41">(<argument pos:start="67:25" pos:end="67:31"><expr pos:start="67:25" pos:end="67:31"><operator pos:start="67:25" pos:end="67:25">&amp;</operator><name pos:start="67:26" pos:end="67:31">dstbuf</name></expr></argument>, <argument pos:start="67:34" pos:end="67:37"><expr pos:start="67:34" pos:end="67:37"><literal type="char" pos:start="67:34" pos:end="67:37">'\''</literal></expr></argument>, <argument pos:start="67:40" pos:end="67:40"><expr pos:start="67:40" pos:end="67:40"><literal type="number" pos:start="67:40" pos:end="67:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="69:9" pos:end="79:9">for <control pos:start="69:13" pos:end="69:27">(<init pos:start="69:14" pos:end="69:14">;</init> <condition pos:start="69:16" pos:end="69:20"><expr pos:start="69:16" pos:end="69:19"><operator pos:start="69:16" pos:end="69:16">*</operator><name pos:start="69:17" pos:end="69:19">src</name></expr>;</condition> <incr pos:start="69:22" pos:end="69:26"><expr pos:start="69:22" pos:end="69:26"><name pos:start="69:22" pos:end="69:24">src</name><operator pos:start="69:25" pos:end="69:26">++</operator></expr></incr>)</control> <block pos:start="69:29" pos:end="79:9">{<block_content pos:start="71:13" pos:end="77:50">

            <if_stmt pos:start="71:13" pos:end="77:50"><if pos:start="71:13" pos:end="73:45">if <condition pos:start="71:16" pos:end="71:29">(<expr pos:start="71:17" pos:end="71:28"><operator pos:start="71:17" pos:end="71:17">*</operator><name pos:start="71:18" pos:end="71:20">src</name> <operator pos:start="71:22" pos:end="71:23">==</operator> <literal type="char" pos:start="71:25" pos:end="71:28">'\''</literal></expr>)</condition><block type="pseudo" pos:start="73:17" pos:end="73:45"><block_content pos:start="73:17" pos:end="73:45">

                <expr_stmt pos:start="73:17" pos:end="73:45"><expr pos:start="73:17" pos:end="73:44"><call pos:start="73:17" pos:end="73:44"><name pos:start="73:17" pos:end="73:26">av_bprintf</name><argument_list pos:start="73:27" pos:end="73:44">(<argument pos:start="73:28" pos:end="73:34"><expr pos:start="73:28" pos:end="73:34"><operator pos:start="73:28" pos:end="73:28">&amp;</operator><name pos:start="73:29" pos:end="73:34">dstbuf</name></expr></argument>, <argument pos:start="73:37" pos:end="73:43"><expr pos:start="73:37" pos:end="73:43"><literal type="string" pos:start="73:37" pos:end="73:43">"'\\''"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="75:13" pos:end="77:50">else<block type="pseudo" pos:start="77:17" pos:end="77:50"><block_content pos:start="77:17" pos:end="77:50">

                <expr_stmt pos:start="77:17" pos:end="77:50"><expr pos:start="77:17" pos:end="77:49"><call pos:start="77:17" pos:end="77:49"><name pos:start="77:17" pos:end="77:31">av_bprint_chars</name><argument_list pos:start="77:32" pos:end="77:49">(<argument pos:start="77:33" pos:end="77:39"><expr pos:start="77:33" pos:end="77:39"><operator pos:start="77:33" pos:end="77:33">&amp;</operator><name pos:start="77:34" pos:end="77:39">dstbuf</name></expr></argument>, <argument pos:start="77:42" pos:end="77:45"><expr pos:start="77:42" pos:end="77:45"><operator pos:start="77:42" pos:end="77:42">*</operator><name pos:start="77:43" pos:end="77:45">src</name></expr></argument>, <argument pos:start="77:48" pos:end="77:48"><expr pos:start="77:48" pos:end="77:48"><literal type="number" pos:start="77:48" pos:end="77:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="81:9" pos:end="81:42"><expr pos:start="81:9" pos:end="81:41"><call pos:start="81:9" pos:end="81:41"><name pos:start="81:9" pos:end="81:23">av_bprint_chars</name><argument_list pos:start="81:24" pos:end="81:41">(<argument pos:start="81:25" pos:end="81:31"><expr pos:start="81:25" pos:end="81:31"><operator pos:start="81:25" pos:end="81:25">&amp;</operator><name pos:start="81:26" pos:end="81:31">dstbuf</name></expr></argument>, <argument pos:start="81:34" pos:end="81:37"><expr pos:start="81:34" pos:end="81:37"><literal type="char" pos:start="81:34" pos:end="81:37">'\''</literal></expr></argument>, <argument pos:start="81:40" pos:end="81:40"><expr pos:start="81:40" pos:end="81:40"><literal type="number" pos:start="81:40" pos:end="81:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="83:9" pos:end="83:14">break;</break>



    <default pos:start="87:5" pos:end="87:12">default:</default>

        <comment type="block" pos:start="89:9" pos:end="89:33">/* unknown escape mode */</comment>

        <return pos:start="91:9" pos:end="91:31">return <expr pos:start="91:16" pos:end="91:30"><call pos:start="91:16" pos:end="91:30"><name pos:start="91:16" pos:end="91:22">AVERROR</name><argument_list pos:start="91:23" pos:end="91:30">(<argument pos:start="91:24" pos:end="91:29"><expr pos:start="91:24" pos:end="91:29"><name pos:start="91:24" pos:end="91:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></switch>



    <if_stmt pos:start="97:5" pos:end="109:5"><if pos:start="97:5" pos:end="103:5">if <condition pos:start="97:8" pos:end="97:40">(<expr pos:start="97:9" pos:end="97:39"><operator pos:start="97:9" pos:end="97:9">!</operator><call pos:start="97:10" pos:end="97:39"><name pos:start="97:10" pos:end="97:30">av_bprint_is_complete</name><argument_list pos:start="97:31" pos:end="97:39">(<argument pos:start="97:32" pos:end="97:38"><expr pos:start="97:32" pos:end="97:38"><operator pos:start="97:32" pos:end="97:32">&amp;</operator><name pos:start="97:33" pos:end="97:38">dstbuf</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="97:42" pos:end="103:5">{<block_content pos:start="99:9" pos:end="101:31">

        <expr_stmt pos:start="99:9" pos:end="99:42"><expr pos:start="99:9" pos:end="99:41"><call pos:start="99:9" pos:end="99:41"><name pos:start="99:9" pos:end="99:26">av_bprint_finalize</name><argument_list pos:start="99:27" pos:end="99:41">(<argument pos:start="99:28" pos:end="99:34"><expr pos:start="99:28" pos:end="99:34"><operator pos:start="99:28" pos:end="99:28">&amp;</operator><name pos:start="99:29" pos:end="99:34">dstbuf</name></expr></argument>, <argument pos:start="99:37" pos:end="99:40"><expr pos:start="99:37" pos:end="99:40"><name pos:start="99:37" pos:end="99:40">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="101:9" pos:end="101:31">return <expr pos:start="101:16" pos:end="101:30"><call pos:start="101:16" pos:end="101:30"><name pos:start="101:16" pos:end="101:22">AVERROR</name><argument_list pos:start="101:23" pos:end="101:30">(<argument pos:start="101:24" pos:end="101:29"><expr pos:start="101:24" pos:end="101:29"><name pos:start="101:24" pos:end="101:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if> <else pos:start="103:7" pos:end="109:5">else <block pos:start="103:12" pos:end="109:5">{<block_content pos:start="105:9" pos:end="107:17">

        <expr_stmt pos:start="105:9" pos:end="105:41"><expr pos:start="105:9" pos:end="105:40"><call pos:start="105:9" pos:end="105:40"><name pos:start="105:9" pos:end="105:26">av_bprint_finalize</name><argument_list pos:start="105:27" pos:end="105:40">(<argument pos:start="105:28" pos:end="105:34"><expr pos:start="105:28" pos:end="105:34"><operator pos:start="105:28" pos:end="105:28">&amp;</operator><name pos:start="105:29" pos:end="105:34">dstbuf</name></expr></argument>, <argument pos:start="105:37" pos:end="105:39"><expr pos:start="105:37" pos:end="105:39"><name pos:start="105:37" pos:end="105:39">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="107:9" pos:end="107:17">return <expr pos:start="107:16" pos:end="107:16"><literal type="number" pos:start="107:16" pos:end="107:16">0</literal></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
