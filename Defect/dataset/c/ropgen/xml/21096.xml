<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21096.c" pos:tabs="8"><function pos:start="1:1" pos:end="17:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">timer_save</name><parameter_list pos:start="1:23" pos:end="1:49">(<parameter pos:start="1:24" pos:end="1:34"><decl pos:start="1:24" pos:end="1:34"><type pos:start="1:24" pos:end="1:34"><name pos:start="1:24" pos:end="1:31">QEMUFile</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:34">f</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:48"><decl pos:start="1:37" pos:end="1:48"><type pos:start="1:37" pos:end="1:48"><name pos:start="1:37" pos:end="1:40">void</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:48">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="17:1">{<block_content pos:start="5:5" pos:end="15:39">

    <if_stmt pos:start="5:5" pos:end="9:5"><if pos:start="5:5" pos:end="9:5">if <condition pos:start="5:8" pos:end="5:26">(<expr pos:start="5:9" pos:end="5:25"><name pos:start="5:9" pos:end="5:25">cpu_ticks_enabled</name></expr>)</condition> <block pos:start="5:28" pos:end="9:5">{<block_content pos:start="7:9" pos:end="7:68">

        <expr_stmt pos:start="7:9" pos:end="7:68"><expr pos:start="7:9" pos:end="7:67"><call pos:start="7:9" pos:end="7:67"><name pos:start="7:9" pos:end="7:16">hw_error</name><argument_list pos:start="7:17" pos:end="7:67">(<argument pos:start="7:18" pos:end="7:66"><expr pos:start="7:18" pos:end="7:66"><literal type="string" pos:start="7:18" pos:end="7:66">"cannot save state if virtual timers are running"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:39"><expr pos:start="11:5" pos:end="11:38"><call pos:start="11:5" pos:end="11:38"><name pos:start="11:5" pos:end="11:17">qemu_put_be64</name><argument_list pos:start="11:18" pos:end="11:38">(<argument pos:start="11:19" pos:end="11:19"><expr pos:start="11:19" pos:end="11:19"><name pos:start="11:19" pos:end="11:19">f</name></expr></argument>, <argument pos:start="11:22" pos:end="11:37"><expr pos:start="11:22" pos:end="11:37"><name pos:start="11:22" pos:end="11:37">cpu_ticks_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:36"><expr pos:start="13:5" pos:end="13:35"><call pos:start="13:5" pos:end="13:35"><name pos:start="13:5" pos:end="13:17">qemu_put_be64</name><argument_list pos:start="13:18" pos:end="13:35">(<argument pos:start="13:19" pos:end="13:19"><expr pos:start="13:19" pos:end="13:19"><name pos:start="13:19" pos:end="13:19">f</name></expr></argument>, <argument pos:start="13:22" pos:end="13:34"><expr pos:start="13:22" pos:end="13:34"><name pos:start="13:22" pos:end="13:34">ticks_per_sec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:39"><expr pos:start="15:5" pos:end="15:38"><call pos:start="15:5" pos:end="15:38"><name pos:start="15:5" pos:end="15:17">qemu_put_be64</name><argument_list pos:start="15:18" pos:end="15:38">(<argument pos:start="15:19" pos:end="15:19"><expr pos:start="15:19" pos:end="15:19"><name pos:start="15:19" pos:end="15:19">f</name></expr></argument>, <argument pos:start="15:22" pos:end="15:37"><expr pos:start="15:22" pos:end="15:37"><name pos:start="15:22" pos:end="15:37">cpu_clock_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
