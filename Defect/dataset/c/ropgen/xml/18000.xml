<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18000.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:35">mipsnet_ioport_read</name><parameter_list pos:start="1:36" pos:end="3:54">(<parameter pos:start="1:37" pos:end="1:48"><decl pos:start="1:37" pos:end="1:48"><type pos:start="1:37" pos:end="1:48"><name pos:start="1:37" pos:end="1:40">void</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:48">opaque</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:73"><decl pos:start="1:51" pos:end="1:73"><type pos:start="1:51" pos:end="1:73"><name pos:start="1:51" pos:end="1:68">target_phys_addr_t</name></type> <name pos:start="1:70" pos:end="1:73">addr</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:53"><decl pos:start="3:37" pos:end="3:53"><type pos:start="3:37" pos:end="3:53"><name pos:start="3:37" pos:end="3:44">unsigned</name> <name pos:start="3:46" pos:end="3:48">int</name></type> <name pos:start="3:50" pos:end="3:53">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="89:1">{<block_content pos:start="7:5" pos:end="87:15">

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">MIPSnetState</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:19">s</name> <init pos:start="7:21" pos:end="7:28">= <expr pos:start="7:23" pos:end="7:28"><name pos:start="7:23" pos:end="7:28">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:17"><expr pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:8">addr</name> <operator pos:start="13:10" pos:end="13:11">&amp;=</operator> <literal type="number" pos:start="13:13" pos:end="13:16">0x3f</literal></expr>;</expr_stmt>

    <switch pos:start="15:5" pos:end="83:5">switch <condition pos:start="15:12" pos:end="15:17">(<expr pos:start="15:13" pos:end="15:16"><name pos:start="15:13" pos:end="15:16">addr</name></expr>)</condition> <block pos:start="15:19" pos:end="83:5">{<block_content pos:start="17:5" pos:end="81:14">

    <case pos:start="17:5" pos:end="17:24">case <expr pos:start="17:10" pos:end="17:23"><name pos:start="17:10" pos:end="17:23">MIPSNET_DEV_ID</name></expr>:</case>

	<expr_stmt pos:start="19:9" pos:end="19:38"><expr pos:start="19:9" pos:end="19:37"><name pos:start="19:9" pos:end="19:11">ret</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:37"><name pos:start="19:15" pos:end="19:25">be32_to_cpu</name><argument_list pos:start="19:26" pos:end="19:37">(<argument pos:start="19:27" pos:end="19:36"><expr pos:start="19:27" pos:end="19:36"><literal type="number" pos:start="19:27" pos:end="19:36">0x4d495053</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>		<comment type="block" pos:start="19:49" pos:end="19:58">/* MIPS */</comment>

        <break pos:start="21:9" pos:end="21:14">break;</break>

    <case pos:start="23:5" pos:end="23:28">case <expr pos:start="23:10" pos:end="23:27"><name pos:start="23:10" pos:end="23:23">MIPSNET_DEV_ID</name> <operator pos:start="23:25" pos:end="23:25">+</operator> <literal type="number" pos:start="23:27" pos:end="23:27">4</literal></expr>:</case>

	<expr_stmt pos:start="25:9" pos:end="25:38"><expr pos:start="25:9" pos:end="25:37"><name pos:start="25:9" pos:end="25:11">ret</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:37"><name pos:start="25:15" pos:end="25:25">be32_to_cpu</name><argument_list pos:start="25:26" pos:end="25:37">(<argument pos:start="25:27" pos:end="25:36"><expr pos:start="25:27" pos:end="25:36"><literal type="number" pos:start="25:27" pos:end="25:36">0x4e455430</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>		<comment type="block" pos:start="25:49" pos:end="25:58">/* NET0 */</comment>

        <break pos:start="27:9" pos:end="27:14">break;</break>

    <case pos:start="29:5" pos:end="29:22">case <expr pos:start="29:10" pos:end="29:21"><name pos:start="29:10" pos:end="29:21">MIPSNET_BUSY</name></expr>:</case>

	<expr_stmt pos:start="31:9" pos:end="31:22"><expr pos:start="31:9" pos:end="31:21"><name pos:start="31:9" pos:end="31:11">ret</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <name pos:start="31:15" pos:end="31:21"><name pos:start="31:15" pos:end="31:15">s</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:21">busy</name></name></expr>;</expr_stmt>

        <break pos:start="33:9" pos:end="33:14">break;</break>

    <case pos:start="35:5" pos:end="35:31">case <expr pos:start="35:10" pos:end="35:30"><name pos:start="35:10" pos:end="35:30">MIPSNET_RX_DATA_COUNT</name></expr>:</case>

	<expr_stmt pos:start="37:9" pos:end="37:26"><expr pos:start="37:9" pos:end="37:25"><name pos:start="37:9" pos:end="37:11">ret</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <name pos:start="37:15" pos:end="37:25"><name pos:start="37:15" pos:end="37:15">s</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:25">rx_count</name></name></expr>;</expr_stmt>

        <break pos:start="39:9" pos:end="39:14">break;</break>

    <case pos:start="41:5" pos:end="41:31">case <expr pos:start="41:10" pos:end="41:30"><name pos:start="41:10" pos:end="41:30">MIPSNET_TX_DATA_COUNT</name></expr>:</case>

	<expr_stmt pos:start="43:9" pos:end="43:26"><expr pos:start="43:9" pos:end="43:25"><name pos:start="43:9" pos:end="43:11">ret</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <name pos:start="43:15" pos:end="43:25"><name pos:start="43:15" pos:end="43:15">s</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:25">tx_count</name></name></expr>;</expr_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    <case pos:start="47:5" pos:end="47:25">case <expr pos:start="47:10" pos:end="47:24"><name pos:start="47:10" pos:end="47:24">MIPSNET_INT_CTL</name></expr>:</case>

	<expr_stmt pos:start="49:9" pos:end="49:24"><expr pos:start="49:9" pos:end="49:23"><name pos:start="49:9" pos:end="49:11">ret</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <name pos:start="49:15" pos:end="49:23"><name pos:start="49:15" pos:end="49:15">s</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:23">intctl</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:45"><expr pos:start="51:9" pos:end="51:44"><name pos:start="51:9" pos:end="51:17"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:17">intctl</name></name> <operator pos:start="51:19" pos:end="51:20">&amp;=</operator> <operator pos:start="51:22" pos:end="51:22">~</operator><name pos:start="51:23" pos:end="51:44">MIPSNET_INTCTL_TESTBIT</name></expr>;</expr_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    <case pos:start="55:5" pos:end="55:32">case <expr pos:start="55:10" pos:end="55:31"><name pos:start="55:10" pos:end="55:31">MIPSNET_INTERRUPT_INFO</name></expr>:</case>

        <comment type="block" pos:start="57:9" pos:end="57:63">/* XXX: This seems to be a per-VPE interrupt number. */</comment>

	<expr_stmt pos:start="59:9" pos:end="59:16"><expr pos:start="59:9" pos:end="59:15"><name pos:start="59:9" pos:end="59:11">ret</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <literal type="number" pos:start="59:15" pos:end="59:15">0</literal></expr>;</expr_stmt>

        <break pos:start="61:9" pos:end="61:14">break;</break>

    <case pos:start="63:5" pos:end="63:32">case <expr pos:start="63:10" pos:end="63:31"><name pos:start="63:10" pos:end="63:31">MIPSNET_RX_DATA_BUFFER</name></expr>:</case>

        <if_stmt pos:start="65:9" pos:end="71:9"><if pos:start="65:9" pos:end="71:9">if <condition pos:start="65:12" pos:end="65:24">(<expr pos:start="65:13" pos:end="65:23"><name pos:start="65:13" pos:end="65:23"><name pos:start="65:13" pos:end="65:13">s</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:23">rx_count</name></name></expr>)</condition> <block pos:start="65:26" pos:end="71:9">{<block_content pos:start="67:13" pos:end="69:45">

            <expr_stmt pos:start="67:13" pos:end="67:26"><expr pos:start="67:13" pos:end="67:25"><name pos:start="67:13" pos:end="67:23"><name pos:start="67:13" pos:end="67:13">s</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:23">rx_count</name></name><operator pos:start="67:24" pos:end="67:25">--</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:45"><expr pos:start="69:13" pos:end="69:44"><name pos:start="69:13" pos:end="69:15">ret</name> <operator pos:start="69:17" pos:end="69:17">=</operator> <name pos:start="69:19" pos:end="69:44"><name pos:start="69:19" pos:end="69:19">s</name><operator pos:start="69:20" pos:end="69:21">-&gt;</operator><name pos:start="69:22" pos:end="69:30">rx_buffer</name><index pos:start="69:31" pos:end="69:44">[<expr pos:start="69:32" pos:end="69:43"><name pos:start="69:32" pos:end="69:41"><name pos:start="69:32" pos:end="69:32">s</name><operator pos:start="69:33" pos:end="69:34">-&gt;</operator><name pos:start="69:35" pos:end="69:41">rx_read</name></name><operator pos:start="69:42" pos:end="69:43">++</operator></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="73:9" pos:end="73:14">break;</break>

    <comment type="block" pos:start="75:5" pos:end="75:24">/* Reads as zero. */</comment>

    <case pos:start="77:5" pos:end="77:32">case <expr pos:start="77:10" pos:end="77:31"><name pos:start="77:10" pos:end="77:31">MIPSNET_TX_DATA_BUFFER</name></expr>:</case>

    <default pos:start="79:5" pos:end="79:12">default:</default>

        <break pos:start="81:9" pos:end="81:14">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="85:5" pos:end="85:34"><expr pos:start="85:5" pos:end="85:33"><call pos:start="85:5" pos:end="85:33"><name pos:start="85:5" pos:end="85:22">trace_mipsnet_read</name><argument_list pos:start="85:23" pos:end="85:33">(<argument pos:start="85:24" pos:end="85:27"><expr pos:start="85:24" pos:end="85:27"><name pos:start="85:24" pos:end="85:27">addr</name></expr></argument>, <argument pos:start="85:30" pos:end="85:32"><expr pos:start="85:30" pos:end="85:32"><name pos:start="85:30" pos:end="85:32">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="87:5" pos:end="87:15">return <expr pos:start="87:12" pos:end="87:14"><name pos:start="87:12" pos:end="87:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
